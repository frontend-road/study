{"id":149950,"title":"03 | 限界上下文：定义领域边界的利器","content":"<p>你好，我是欧创新。今天我们重点学习“限界上下文”。</p><p>在DDD领域建模和系统建设过程中，有很多的参与者，包括领域专家、产品经理、项目经理、架构师、开发经理和测试经理等。对同样的领域知识，不同的参与角色可能会有不同的理解，那大家交流起来就会有障碍，怎么办呢？因此，在DDD中就出现了“通用语言”和“限界上下文”这两个重要的概念。</p><p>这两者相辅相成，<span class=\"orange\">通用语言定义上下文含义，限界上下文则定义领域边界，</span>以确保每个上下文含义在它特定的边界内都具有唯一的含义，领域模型则存在于这个边界之内。你是不是感觉这么描述很抽象？没关系，接下来我会给你一一详细讲解。</p><p>在这之前，我想请你先看这样两个问题，这也是今天内容的核心。</p><ol>\n<li>为什么要提出限界上下文的概念（也就是说除了解决交流障碍这个广义的原因，还有更具体的吗）？</li>\n<li>限界上下文在微服务设计中的作用和意义是什么？</li>\n</ol><h2>什么是通用语言？</h2><p>为了更好地理解限界上下文，回答这两个问题，我们先从通用语言讲起。</p><p>怎么理解通用语言这个概念呢？<span class=\"orange\">在事件风暴过程中，通过团队交流达成共识的，能够简单、清晰、准确描述业务涵义和规则的语言就是通用语言。</span>也就是说，通用语言是团队统一的语言，不管你在团队中承担什么角色，在同一个领域的软件生命周期里都使用统一的语言进行交流。</p><!-- [[[read_end]]] --><p>那么，通用语言的价值也就很明了了，它可以解决交流障碍这个问题，使领域专家和开发人员能够协同合作，从而确保业务需求的正确表达。</p><p>但是，对这个概念的理解，到这里还不够。</p><p>通用语言包含术语和用例场景，并且能够直接反映在代码中。通用语言中的名词可以给领域对象命名，如商品、订单等，对应实体对象；而动词则表示一个动作或事件，如商品已下单、订单已付款等，对应领域事件或者命令。</p><p>通用语言贯穿DDD的整个设计过程。作为项目团队沟通和协商形成的统一语言，基于它，你就能够开发出可读性更好的代码，将业务需求准确转化为代码设计。</p><p>下面我带你看一张图，这张图描述了从事件风暴建立通用语言到领域对象设计和代码落地的完整过程。</p><p><img src=\"https://static001.geekbang.org/resource/image/69/ee/69f44e120de5019c0fbff4d3fbc0afee.png?wh=1339*925\" alt=\"\"></p><ol>\n<li>在事件风暴的过程中，领域专家会和设计、开发人员一起建立领域模型，在领域建模的过程中会形成通用的业务术语和用户故事。事件风暴也是一个项目团队统一语言的过程。</li>\n<li>通过用户故事分析会形成一个个的领域对象，这些领域对象对应领域模型的业务对象，每一个业务对象和领域对象都有通用的名词术语，并且一一映射。</li>\n<li>微服务代码模型来源于领域模型，每个代码模型的代码对象跟领域对象一一对应。</li>\n</ol><p>这里我再给你分享一条经验，我自己经常用，特别有效。<span class=\"orange\">设计过程中我们可以用一些表格，来记录事件风暴和微服务设计过程中产生的领域对象及其属性。</span>比如，领域对象在DDD分层架构中的位置、属性、依赖关系以及与代码模型对象的映射关系等。</p><p>下面是一个微服务设计实例的部分数据，表格中的这些名词术语就是项目团队在事件风暴过程中达成一致、可用于团队内部交流的通用语言。在这个表格里面我们可以看到，DDD分析过程中所有的领域对象以及它们的属性都被记录下来了，除了DDD的领域对象，我们还记录了在微服务设计过程中领域对象所对应的代码对象，并将它们一一映射。</p><p><img src=\"https://static001.geekbang.org/resource/image/09/b8/09ca1ccc982d02634a856b2e80cf24b8.jpg?wh=2362*1100\" alt=\"\"></p><p>到这里，我要再强调一次。DDD分析和设计过程中的每一个环节都需要保证限界上下文内术语的统一，在代码模型设计的时侯就要建立领域对象和代码对象的一一映射，从而<span class=\"orange\">保证业务模型和代码模型的一致，实现业务语言与代码语言的统一。</span></p><p>如果你做到了这一点，也就是建立了领域对象和代码对象的映射关系，那就可以指导软件开发人员准确无误地按照设计文档完成微服务开发了。即使是不熟悉代码的业务人员，也可以很快找到代码的位置。</p><h2>什么是限界上下文？</h2><p>那刚刚提到的限界上下文又是用来做什么的呢？</p><p>我们知道语言都有它的语义环境，同样，通用语言也有它的上下文环境。为了避免同样的概念或语义在不同的上下文环境中产生歧义，<span class=\"orange\">DDD在战略设计上提出了“限界上下文”这个概念，用来确定语义所在的领域边界。</span></p><p>我们可以将限界上下文拆解为两个词：限界和上下文。限界就是领域的边界，而上下文则是语义环境。通过领域的限界上下文，我们就可以在统一的领域边界内用统一的语言进行交流。</p><p>综合一下，我认为限界上下文的定义就是：用来封装通用语言和领域对象，提供上下文环境，保证在领域之内的一些术语、业务相关对象等（通用语言）有一个确切的含义，没有二义性。这个边界定义了模型的适用范围，使团队所有成员能够明确地知道什么应该在模型中实现，什么不应该在模型中实现。</p><h3>进一步理解限界上下文</h3><p>我们可以通过一些例子进一步理解一下这个概念，不要小看它，彻底弄懂会给你后面实践DDD打下一个坚实的基础。</p><p>都说中文这门语言非常丰富，在不同的时空和背景下，同样的一句话会有不同的涵义。有一个例子你应该听说过。</p><p>在一个明媚的早晨，孩子起床问妈妈：“今天应该穿几件衣服呀？”妈妈回答：“能穿多少就穿多少！”</p><p>那到底是穿多还是穿少呢？</p><p>如果没有具体的语义环境，还真不太好理解。但是，如果你已经知道了这句话的语义环境，比如是寒冬腊月或者是炎炎夏日，那理解这句话的涵义就会很容易了。</p><p>所以语言离不开它的语义环境。</p><p>而业务的通用语言就有它的业务边界，我们不大可能用一个简单的术语没有歧义地去描述一个复杂的业务领域。限界上下文就是用来细分领域，从而定义通用语言所在的边界。</p><p>现在我们用一个保险领域的例子来说明下术语的边界。保险业务领域有投保单、保单、批单、赔案等保险术语，它们分别应用于保险的不同业务流程。</p><ol>\n<li>客户投保时，业务人员记录投保信息，系统对应有投保单实体对象。</li>\n<li>缴费完成后，业务人员将投保单转为保单，系统对应有保单实体对象，保单实体与投保单实体关联。</li>\n<li>如客户需要修改保单信息，保单变为批单，系统对应有批单实体对象，批单实体与保单实体关联。</li>\n<li>如果客户发生理赔，生成赔案，系统对应有报案实体对象，报案实体对象与保单或者批单实体关联。</li>\n</ol><p>投保单、保单、批单、赔案等，这些术语虽然都跟保单有关，但不能将保单这个术语作用在保险全业务领域。因为术语有它的边界，超出了边界理解上就会出现问题。</p><p>如果你对我从事的保险业不大了解也没关系，电商肯定再熟悉不过了吧？</p><p>正如电商领域的商品一样，商品在不同的阶段有不同的术语，在销售阶段是商品，而在运输阶段则变成了货物。同样的一个东西，由于业务领域的不同，赋予了这些术语不同的涵义和职责边界，这个边界就可能会成为未来微服务设计的边界。看到这，我想你应该非常清楚了，<span class=\"orange\">领域边界就是通过限界上下文来定义的。</span></p><h2>限界上下文和微服务的关系</h2><p>接下来，我们对这个概念做进一步的延伸。看看限界上下文和微服务具体存在怎样的关系。</p><p>我想你买过车险吧，或者听过吧。车险承保的流程包含了投保、缴费、出单等几个主要流程。如果出险了还会有报案、查勘、定损、理算等理赔流程。</p><p>保险领域还是很复杂的，在这里我用一个简化的保险模型来说明下限界上下文和微服务的关系。这里还会用到我们在 <a href=\"https://time.geekbang.org/column/article/149945\">[第02讲]</a> 学到一些基础知识，比如领域和子域。</p><p><img src=\"https://static001.geekbang.org/resource/image/4c/5b/4c26f42d035da0cd5cbe1f25c48c205b.jpg?wh=1899*1346\" alt=\"\"></p><p>首先，领域可以拆分为多个子领域。一个领域相当于一个问题域，领域拆分为子域的过程就是大问题拆分为小问题的过程。在这个图里面保险领域被拆分为：投保、支付、保单管理和理赔四个子域。</p><p>子域还可根据需要进一步拆分为子子域，比如，支付子域可继续拆分为收款和付款子子域。拆到一定程度后，有些子子域的领域边界就可能变成限界上下文的边界了。</p><p>子域可能会包含多个限界上下文，如理赔子域就包括报案、查勘和定损等多个限界上下文（限界上下文与理赔的子子域领域边界重合）。也有可能子域本身的边界就是限界上下文边界，如投保子域。</p><p>每个领域模型都有它对应的限界上下文，团队在限界上下文内用通用语言交流。领域内所有限界上下文的领域模型构成整个领域的领域模型。</p><p>理论上限界上下文就是微服务的边界。<span class=\"orange\">我们将限界上下文内的领域模型映射到微服务，就完成了从问题域到软件的解决方案。</span></p><p>可以说，限界上下文是微服务设计和拆分的主要依据。在领域模型中，如果不考虑技术异构、团队沟通等其它外部因素，一个限界上下文理论上就可以设计为一个微服务。</p><p>不过，这里还是要提示一下：除了理论，微服务的拆分还是有很多限制因素的，在设计中不宜过度拆分。那这个度怎么把握好呢？有关微服务设计和具体的拆分方法，我会在实战篇中详细讲解。</p><h2>总结</h2><p>通用语言确定了项目团队内部交流的统一语言，而这个语言所在的语义环境则是由限界上下文来限定的，以确保语义的唯一性。</p><p>而领域专家、架构师和开发人员的主要工作就是通过事件风暴来划分限界上下文。限界上下文确定了微服务的设计和拆分方向，是微服务设计和拆分的主要依据。如果不考虑技术异构、团队沟通等其它外部因素，一个限界上下文理论上就可以设计为一个微服务。</p><p>可以说，限界上下文在微服务设计中具有很重要的意义，如果限界上下文的方向偏离，那微服务的设计结果也就可想而知了。因此，我们只有理解了限界上下文的真正涵义以及它在微服务设计中的作用，才能真正发挥DDD的价值，这是基础也是前提。</p><h2>思考题</h2><p>现在，不妨回头看看，开头的两个问题你能回答了吗？你可以尝试用自己的话来总结一下。</p><p>最后再给你留一个作业，<span class=\"orange\">你能找一找自己工作中的通用语言和限界上下文吗？</span>可以把你的答案和感受写下来，分享到留言区，与我一起讨论。也欢迎你把今天的内容分享给同事和朋友，邀请他一起学习。</p><p></p>","neighbors":{"left":{"article_title":"02 | 领域、子域、核心域、通用域和支撑域：傻傻分不清？","id":149945},"right":{"article_title":"04 | 实体和值对象：从领域模型的基础单元看系统设计","id":152677}},"comments":[{"had_liked":false,"id":142780,"user_name":"蚂蚁内推+v","can_delete":false,"product_type":"c1","uid":1050508,"ip_address":"","ucode":"24B10AEE54B3FD","user_header":"https://static001.geekbang.org/account/avatar/00/10/07/8c/0d886dcc.jpg","comment_is_top":false,"comment_ctime":1571525366,"is_pvip":false,"replies":[{"id":"55187","content":"是的，赞一个。","user_name":"作者回复","user_name_real":"渔","uid":"1316268","ctime":1571533905,"ip_address":"","comment_id":142780,"utype":1}],"discussion_count":7,"race_medal":0,"score":"461133026038","product_id":100037301,"comment_content":"限界上下文大概是直译过来的一个晦涩的术语，理解成本较高。<br>英文是bounded context，应该叫上下文边界更合适。","like_count":108,"discussions":[{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":471268,"discussion_content":"是的，赞一个。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571533905,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1018719,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/8b/5f/ecf0e687.jpg","nickname":"Neil 陈荣","note":"","ucode":"CE66700BE7E225","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":38370,"discussion_content":"为了更容易理解，也许可以翻译为“有界上下文”或“有限语境”。话说把 context 翻译为“上下文”已经是够糟糕的了，bounded 翻成“限界”也是无比别扭。这些只能怪第一批技术书籍的译者们语文水平太差了吧！","likes_number":8,"is_delete":false,"is_hidden":false,"ctime":1571762057,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1370304,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLNgTWpN9vEUMZ77xTkiaPibX8E22c2L5GTmkgyP4cajbNiap5zEp28HicvA8eOCQqYo7YDsAhuafict2Q/132","nickname":"枫zzzzz","note":"","ucode":"0CD6F332407936","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1018719,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/8b/5f/ecf0e687.jpg","nickname":"Neil 陈荣","note":"","ucode":"CE66700BE7E225","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":280908,"discussion_content":"这些术语翻译过来真的是很晦涩","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1591627187,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":38370,"ip_address":""},"score":280908,"extra":""}]},{"author":{"id":1054108,"avatar":"https://static001.geekbang.org/account/avatar/00/10/15/9c/310c902c.jpg","nickname":"e^x","note":"","ucode":"29B56E0DF4EF48","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":382843,"discussion_content":"坦白的说，在接触DDD之前，我只听过“界限”，根本不知道还有个词叫“限界”😂。\n不得不吐槽，英文的技术书籍一般都翻译的相当啰嗦又别扭。","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1625739535,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1230242,"avatar":"https://static001.geekbang.org/account/avatar/00/12/c5/a2/4bef8cb6.jpg","nickname":"鹏","note":"","ucode":"AAA01498C85FCE","race_medal":1,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":592058,"discussion_content":"不行，上下文边界是边界，限界上下文才是一个上下文（context）","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1667051253,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"山东"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1005290,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/56/ea/32608c44.jpg","nickname":"giteebravo","note":"","ucode":"C087E8D6B5A98B","race_medal":1,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":585231,"discussion_content":"不如直接叫 上下文","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1661409965,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"四川"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2002555,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/8e/7b/701c741f.jpg","nickname":"难得自然萌","note":"","ucode":"73C86B48236104","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":300468,"discussion_content":"所以其实根本就不要翻译这里直接英文更容易理解","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1598113471,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":142366,"user_name":"LY","can_delete":false,"product_type":"c1","uid":1273512,"ip_address":"","ucode":"6AEF6BD822A3AB","user_header":"https://static001.geekbang.org/account/avatar/00/13/6e/a8/ee6bc8a5.jpg","comment_is_top":false,"comment_ctime":1571360427,"is_pvip":false,"replies":[{"id":"54925","content":"这种跨多个微服务的数据查询。对于准实时的查询，你可以考虑数据中台。在数据中台会归拢所有的微服务的数据，在数据中台提供统一的各个维度数据的集中查询。对于实时性要求高的，你可以考虑一定的数据冗余，上游的业务数据做完后，实时写入到需要联表查询的库中，写入时只写入必要的数据就可以了。","user_name":"作者回复","user_name_real":"渔","uid":"1316268","ctime":1571363413,"ip_address":"","comment_id":142366,"utype":1}],"discussion_count":10,"race_medal":0,"score":"285039201963","product_id":100037301,"comment_content":"老师，我有一个问题，对于你们保险行业来说，投保单、保单、批单、赔案，这些领悟概念都是在不同的限界上下文中，那么就是在不同的微服务中，拆分开以后，如果管理后台有一个需求，需要查出一个列表，列表的字段信息需要这些所有不同类型的订单的组合。<br>1这种查询你们会放在哪个微服务里做呢<br>2对于组合查询这种情况你们是连表查询，或者是不同服务通过id查询来提供属于它自己的那部分信息的，还是有更好的办法呢。","like_count":67,"discussions":[{"author":{"id":1080050,"avatar":"https://static001.geekbang.org/account/avatar/00/10/7a/f2/6770d0a9.jpg","nickname":"张驰","note":"","ucode":"0ED97C2FCE6599","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":373584,"discussion_content":"Command Query Responsibility Segregation (CQRS) ： https://microservices.io/patterns/data/cqrs.html","likes_number":4,"is_delete":false,"is_hidden":false,"ctime":1620790173,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1088710,"avatar":"https://static001.geekbang.org/account/avatar/00/10/9c/c6/05a6798f.jpg","nickname":"苗","note":"","ucode":"5ECCC6C855E541","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":85586,"discussion_content":"cqrs或者数据视图；《微服务设计模式》","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1576557621,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1273512,"avatar":"https://static001.geekbang.org/account/avatar/00/13/6e/a8/ee6bc8a5.jpg","nickname":"LY","note":"","ucode":"6AEF6BD822A3AB","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1088710,"avatar":"https://static001.geekbang.org/account/avatar/00/10/9c/c6/05a6798f.jpg","nickname":"苗","note":"","ucode":"5ECCC6C855E541","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":86223,"discussion_content":"多谢大佬～～","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1576592190,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":85586,"ip_address":""},"score":86223,"extra":""}]},{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":471087,"discussion_content":"这种跨多个微服务的数据查询。对于准实时的查询，你可以考虑数据中台。在数据中台会归拢所有的微服务的数据，在数据中台提供统一的各个维度数据的集中查询。对于实时性要求高的，你可以考虑一定的数据冗余，上游的业务数据做完后，实时写入到需要联表查询的库中，写入时只写入必要的数据就可以了。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1571363413,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":1,"child_discussions":[{"author":{"id":1080285,"avatar":"https://static001.geekbang.org/account/avatar/00/10/7b/dd/fc6c2095.jpg","nickname":"林工","note":"","ucode":"EDAD8AE8B2F769","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":584180,"discussion_content":"老师你好，我理解如果不存在跨域查询，是不是简单的多个微服务编排就可以了，数据异构的代价毕竟还是比较大。\n针对应用试图层是不是就是业务网关做微服务聚合即可（领域产品），而没必要就微服务设计，我理解有点过度设计了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1660663631,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":471087,"ip_address":"北京"},"score":584180,"extra":""}]},{"author":{"id":1795080,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/64/08/17189711.jpg","nickname":"一瞬流光","note":"","ucode":"2A235651637A15","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":585746,"discussion_content":"“上游的业务数据做完后，实时写入到需要联表查询的库中，写入时只写入必要的数据就可以了。”\n\n个人理解数据冗余的话，在后续更新数据和业务迭代的过程，会造成维护成本增加，如数据一致性的问题，像数据一致性的问题不知道有没有什么好的方法保证？\n比如更新了主表，更新冗余表失败","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1661786408,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"广东"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1306868,"avatar":"https://static001.geekbang.org/account/avatar/00/13/f0/f4/22dbe2d9.jpg","nickname":"肖大保健","note":"","ucode":"E3209A00C1B954","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":42368,"discussion_content":"内部服务是小调度，外部单独微服务也可作为一个调度，可以为各个系统做中间数据处理","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1572659667,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1306868,"avatar":"https://static001.geekbang.org/account/avatar/00/13/f0/f4/22dbe2d9.jpg","nickname":"肖大保健","note":"","ucode":"E3209A00C1B954","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":36469,"discussion_content":"我理解这种跨多服务交互的，一般是通过调度来扭转数据流，最后再调度上一级聚合数据","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571380298,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1273512,"avatar":"https://static001.geekbang.org/account/avatar/00/13/6e/a8/ee6bc8a5.jpg","nickname":"LY","note":"","ucode":"6AEF6BD822A3AB","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1306868,"avatar":"https://static001.geekbang.org/account/avatar/00/13/f0/f4/22dbe2d9.jpg","nickname":"肖大保健","note":"","ucode":"E3209A00C1B954","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":36637,"discussion_content":"大佬好，通过调度来扭转数据流是什么意思能够详细解释一下么？这个和数据中台是一个意思么？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571399760,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":36469,"ip_address":""},"score":36637,"extra":""},{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":1306868,"avatar":"https://static001.geekbang.org/account/avatar/00/13/f0/f4/22dbe2d9.jpg","nickname":"肖大保健","note":"","ucode":"E3209A00C1B954","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":37615,"discussion_content":"你说的这种情况是微服务内吧，微服务内可以通过应用层的应用服务来调度。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571646195,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":36469,"ip_address":""},"score":37615,"extra":""}]}]},{"had_liked":false,"id":235673,"user_name":"Lambor","can_delete":false,"product_type":"c1","uid":1275494,"ip_address":"","ucode":"0E3C3C39A22495","user_header":"https://static001.geekbang.org/account/avatar/00/13/76/66/cbd6013c.jpg","comment_is_top":false,"comment_ctime":1595145810,"is_pvip":false,"replies":[{"id":"87210","content":"内容比较多，不知道理解的对不对？不对的地方请指出。<br>在设计的时候要考虑聚合的职责单一原则。我大概梳理一下，这里面有些功能是基础数据管理和配置，如用户、租户、菜单、角色配置等，有些是多个聚合数据组合后形成的聚合，比如用户权限聚合。<br>第一、要完成权限管理功能会有用户或者租户。这些数据都是非常基础的实体，完成用户和租户基础数据管理，因此会有用户或租户聚合，聚合根分别是用户和租户。<br>用户和租户这一块应该在一个限界上下文内。<br>第二、系统中会有菜单等基础数据配置，因此会有菜单管理相关的聚合，聚合根是菜单。<br>第三、在进行权限设置时，首先需要定义角色（角色是不是岗位的意思？），角色定义完成后实际上是一种通用静态配置数据吧，角色关联菜单（一对多），字段，数据以及单据等实体，因此会有角色（岗位）聚合。但需要注意：如果不同用户角色的菜单权限一样，但是数据权限或者单据权限不同，这样设计就可能不合适，这时数据权限和单据权限就不能关联到角色了。这里不清楚你说的数据权限和单据权限是否需要单独维护和管理，如果需要独立维护就可以独立为数据和单据权限等的基础数据配置的聚合。<br>第四、菜单权限、卡片、字段权限、数据权限、单据权限、角色等多个值对象权限组合为一个安全组，形成安全组聚合。<br>第五、用户（租户）与角色或安全组权限结合一起形成用户（租户）权限，因此会有用户权限聚合，用户权限是聚合根，它会关联安全组或用户、角色、数据等其他聚合的数据，用户、角色、数据以值对象的形式被用户权限聚合根引用。<br>三员管理我理解也应该是角色相关的管理。<br>第二到第五的内容应该在一个权限相关的限界上下文内。<br>第六、考虑到登录，应该还有账户聚合，账户是聚合根，完成密码和登录管理，另外账户会引用用户值对象。这些内容在一个限界上下文内。<br>完成这些聚合设计后，聚合之间的协调可以通过应用服务来实现。","user_name":"作者回复","user_name_real":"欧创新","uid":"1316268","ctime":1595316518,"ip_address":"","comment_id":235673,"utype":1}],"discussion_count":38,"race_medal":0,"score":"254998216274","product_id":100037301,"comment_content":"老师您好，关于领域划分想咨询下。<br><br>先说下背景，我的公司是做企业软件实施的，公司有技术中台、大数据中台、业务中台，我所在的技术中台是做通用框架平台的，主要是避免重复造轮子。基于 SpringCloud 开发了很多通用微服务和通用基础组件，比如网关服务、用户权限管理服务、认证服务、平台服务、消息服务、文件服务、支付服务、OCR服务、NLP服务、工作流服务等等。在给客户实施软件时，通过选配需要的服务即可搭建起一个基础平台，然后重点关注客户的核心业务服务开发。<br><br>首先关于核心域、通用域、支撑域的问题，像我所在技术中台这个领域内，我觉得所有的服务都属于我们的核心域，公司的战略就是成立技术中台来解决技术统一、通用能力沉淀、复用的问题，各个微服务其实没太多内在关联，都是通用微服务和组件。但要放到客户项目或者业务中台的产品，在他们的领域内，这些服务就变成了通用域或支撑域，而他们则把核心资源放到他们自身的业务上，那才是他们的核心域。这也应了文中说的商业模式的不同会导致核心域划分结果的不同。不知道这样理解有没有问题，主要是对技术中台这个领域的理解。<br><br>然后是我负责的用户权限管理服务，我觉得这个服务现在越来越重了，加的功能越来越多，也不太清楚如何划分这个领域，所以想请教下。我们最开始虽然采用了DDD的战术设计，但实际实施出来还是面向过程式的，以数据库驱动的方式来设计的。<br>主要的功能有：租户管理、用户管理、用户组管理、菜单管理、角色管理、客户端管理(OAuth2的客户端)、权限管理(API)<br>主要的动作有：<br>\t用户分配角色、用户分配工作台卡片<br>\t客户端分配角色<br>\t角色分配菜单权限、角色分配用户、角色分配客户端、角色分配数据权限、角色分配工作台卡片、角色分配字段权限、角色分配单据权限<br>\t角色创建又有复制、继承、直接创建三种创建方式<br>\t菜单下有创建目录、菜单、维护API权限等<br>\t其中工作台卡片、单据权限、数据权限是在平台服务进行数据维护的，平台服务和用户权限服务共用一个schema。<br>\t<br>\t后面由于业务需求，又增加了安全组管理，相当于权限的集合，安全组分配菜单权限、数据权限、工作台卡片、字段权限、单据权限，然后角色增加了分配安全组的功能。<br>\t<br>\t然后最近还增加了三员管理(保密系统的系统管理员、安全保密员、安全审计员)，不过这个是开发的一个服务插件，是可插拔的。<br>\t<br>个人感觉整个用户权限服务越来越大、功能交错复杂，但又不好划分，而且由于代码层面各个功能耦合度较高，想拆分也比较难。<br><br>但说实在的，我们是做通用框架的，要满足各个项目的功能需求以及方便项目上定制化功能逻辑，个人觉得代码水平还可以，代码质量和扩展性上不是问题。但现在我想通过DDD的方式来试着重构这个服务，而且我们现在有些功能也正面临这拆分重组的问题。<br><br>这门课程我已经学完一遍了，如果按我的理解通过DDD的方式来重新拆分领域边界，将设计如下聚合：<br><br>租户聚合：<br>\t实体：租户<br>\t动作：创建租户<br>\t事件：租户初始化事件（租户初始化时会初始化其它的一些数据）<br>\t<br>权限聚合：<br>\t实体：菜单、权限、用户、客户端、角色、租户<br>\t值对象：工作台卡片、字段权限、单据权限、数据权限，这些应该是通过远程服务获取的（那应该是DTO？还是建成值对象？）<br>\t动作：<br>\t\t菜单实体：菜单创建、目录创建、分配权限<br>\t\t权限实体：查询权限<br>\t\t用户实体：创建用户、修改密码<br>\t\t客户端实体：创建客户端<br>\t\t角色实体：创建角色、继承创建、复制创建<br>\t领域服务：<br>\t\t权限分配服务：分配角色菜单权限、分配角色卡片、分配角色字段权限、分配角色数据权限、分配角色单据权限、分配角色用户、分配角色客户端（我不是很确定是应该单独划分领域服务还是放到角色实体里面）<br><br>安全组聚合：<br>\t实体：安全组<br>\t值对象：菜单权限、卡片、字段权限、数据权限、单据权限、角色<br>\t领域服务：<br>\t\t安全组分配服务：处理角色和安全组的关系<br>\t应用服务：<br>\t\t安全组应用服务：通过服务编排，组合权限聚合中的权限分配领域服务，处理安全组下的菜单权限、卡片、数据权限等于角色的分配关系。<br><br>三员聚合：<br>\t实体：无<br>\t值对象：角色、菜单权限等<br>\t领域服务：三员角色领域服务<br><br>以上是我的个人理解，还望老师指点。我主要是想了解针对我们这种通用域类型的底层框架服务，好不好用DDD的战略和战术设计，又怎么划分边界，而且一定要满足功能的扩展，逻辑自定义。","like_count":60,"discussions":[{"author":{"id":1275494,"avatar":"https://static001.geekbang.org/account/avatar/00/13/76/66/cbd6013c.jpg","nickname":"Lambor","note":"","ucode":"0E3C3C39A22495","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":292934,"discussion_content":"首先谢谢老师解答！\n\n角色可以认为就是权限的一个集合，系统权限是基于RBAC来控制的；岗位是单独的功能。数据权限、单据权限、字段权限 这些是有单独的维护功能的，也属于权限的一种。\n\n最开始我也觉得用户、租户、菜单、角色等应该各自作为单独的聚合根，但就是怕拆分的聚合太多了，站在他们的功能角度来说确实也应该设置为独立的聚合，但他们本身的功能来说可能就会比较单一。与角色相关的分配用户、分配客户端、分配数据权限等 应该通过权限聚合来实现这些子聚合的关联。但这里有个疑问，这个权限聚合会比较大，角色用户、角色客户端、角色菜单权限、角色数据权限等，这个聚合会有很多值对象（用户、角色、客户端、菜单权限等），而某个功能操作是可能只会涉及其中一两个值对象（比如角色分配用户），这种如何设计这个聚合，创建聚合的时候只能初始化某个操作相关的数据才行。\n\n还有几个很想问的问题就是，采用DDD的模式，总感觉重复的代码会很多，尤其是PO、DO、DTO、VO这些对象中的属性字段，表中增加一个字段，就要把关联的都加上，这样就增加了开发的时间成本？而且这种聚合加实体的方式，代码真的好扩展吗？然后一个聚合下有多个实体，要组合这个聚合，要查非常多的数据，而有的数据则根本用不到，或者因为某些业务异常提前终止了，这种设计方式是否合理？","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1595387279,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1069797,"avatar":"https://wx.qlogo.cn/mmopen/vi_32/DYAIOgq83er77H7TocrQqc0NsfkNjY4QT9llye3XxbZkIcBuX32RWwf4nA46EFvWaUncxcYZmP8wXMicz2TnkIw/132","nickname":"sum","note":"","ucode":"5058D2F417AA82","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1275494,"avatar":"https://static001.geekbang.org/account/avatar/00/13/76/66/cbd6013c.jpg","nickname":"Lambor","note":"","ucode":"0E3C3C39A22495","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":384121,"discussion_content":"关于聚合多个实体的情况，可以采取延时加载的方式","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1626393849,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":292934,"ip_address":""},"score":384121,"extra":""}]},{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":501801,"discussion_content":"内容比较多，不知道理解的对不对？不对的地方请指出。\n在设计的时候要考虑聚合的职责单一原则。我大概梳理一下，这里面有些功能是基础数据管理和配置，如用户、租户、菜单、角色配置等，有些是多个聚合数据组合后形成的聚合，比如用户权限聚合。\n第一、要完成权限管理功能会有用户或者租户。这些数据都是非常基础的实体，完成用户和租户基础数据管理，因此会有用户或租户聚合，聚合根分别是用户和租户。\n用户和租户这一块应该在一个限界上下文内。\n第二、系统中会有菜单等基础数据配置，因此会有菜单管理相关的聚合，聚合根是菜单。\n第三、在进行权限设置时，首先需要定义角色（角色是不是岗位的意思？），角色定义完成后实际上是一种通用静态配置数据吧，角色关联菜单（一对多），字段，数据以及单据等实体，因此会有角色（岗位）聚合。但需要注意：如果不同用户角色的菜单权限一样，但是数据权限或者单据权限不同，这样设计就可能不合适，这时数据权限和单据权限就不能关联到角色了。这里不清楚你说的数据权限和单据权限是否需要单独维护和管理，如果需要独立维护就可以独立为数据和单据权限等的基础数据配置的聚合。\n第四、菜单权限、卡片、字段权限、数据权限、单据权限、角色等多个值对象权限组合为一个安全组，形成安全组聚合。\n第五、用户（租户）与角色或安全组权限结合一起形成用户（租户）权限，因此会有用户权限聚合，用户权限是聚合根，它会关联安全组或用户、角色、数据等其他聚合的数据，用户、角色、数据以值对象的形式被用户权限聚合根引用。\n三员管理我理解也应该是角色相关的管理。\n第二到第五的内容应该在一个权限相关的限界上下文内。\n第六、考虑到登录，应该还有账户聚合，账户是聚合根，完成密码和登录管理，另外账户会引用用户值对象。这些内容在一个限界上下文内。\n完成这些聚合设计后，聚合之间的协调可以通过应用服务来实现。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1595316518,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2018580,"avatar":"","nickname":"Geek_20e125","note":"","ucode":"BAC47C3D2AF230","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":368067,"discussion_content":"m","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1618556352,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2726747,"avatar":"https://static001.geekbang.org/account/avatar/00/29/9b/5b/173e61b7.jpg","nickname":"do","note":"","ucode":"C93215990CCA45","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":588433,"discussion_content":"mark","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1663757472,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"广东"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1067004,"avatar":"https://static001.geekbang.org/account/avatar/00/10/47/fc/4c8258ce.jpg","nickname":"Jarvis","note":"","ucode":"4A9C0178704692","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":586250,"discussion_content":"mark","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1662081081,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"上海"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2291604,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKZoKBSLZictDd8y2wdyEBZRrw0F062q5QBmicm2MXCHllM8JAKpEmF8iafF5z6dcxqFuV7KtaicL2XjQ/132","nickname":"Geek_1346d6","note":"","ucode":"E0F9B77D46DF99","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":585755,"discussion_content":"标记","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1661790513,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"上海"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1535503,"avatar":"https://static001.geekbang.org/account/avatar/00/17/6e/0f/f77018b5.jpg","nickname":"jyx","note":"","ucode":"69B086AC286B37","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":584989,"discussion_content":"m","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1661259444,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"北京"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1113292,"avatar":"https://static001.geekbang.org/account/avatar/00/10/fc/cc/9f90b797.jpg","nickname":"77","note":"","ucode":"4D497A36896766","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":582917,"discussion_content":"你这是让老师加班呀😀","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1659775407,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"上海"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2945445,"avatar":"https://static001.geekbang.org/account/avatar/00/2c/f1/a5/6411859e.jpg","nickname":"唐浩","note":"","ucode":"F39B7461AAA0AC","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":581268,"discussion_content":"mark","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1658677525,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1310255,"avatar":"https://static001.geekbang.org/account/avatar/00/13/fe/2f/80ff2131.jpg","nickname":"陆竹","note":"","ucode":"78D6C203F6E07A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":579169,"discussion_content":"mark","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1657214221,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2051293,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/4c/dd/c6035349.jpg","nickname":"Bumblebee","note":"","ucode":"B879C8A511D08D","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":578150,"discussion_content":"🚩","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1656546522,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1795357,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/65/1d/34ac9c2b.jpg","nickname":"王东","note":"","ucode":"EF149E179D568E","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":575829,"discussion_content":"DDD实战","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1655128955,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1063307,"avatar":"https://static001.geekbang.org/account/avatar/00/10/39/8b/af74591f.jpg","nickname":"chun1123","note":"","ucode":"413C3A8722699F","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":574478,"discussion_content":"mark","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1654075672,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1213778,"avatar":"https://static001.geekbang.org/account/avatar/00/12/85/52/6690a025.jpg","nickname":"三石","note":"","ucode":"1170639935B890","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":573417,"discussion_content":"m","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1653401493,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":3009726,"avatar":"","nickname":"凌晨写Bug","note":"","ucode":"7345C0A982B6BB","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":573349,"discussion_content":"看完具体案例分析，更清晰一点了。点赞。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1653374935,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2893933,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/zwJKqvhjOj7nXBKmYW7Amvib4j26e0c7zKRg8GrEFlezicCzI61ABm7b1k75wiaib32TNicsfaV7otvRaC5RCIKCVwA/132","nickname":"天殇云雾","note":"","ucode":"0BFDFA4218A2D4","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":573225,"discussion_content":"mark","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1653277335,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2667600,"avatar":"https://static001.geekbang.org/account/avatar/00/28/b4/50/83a1b0fc.jpg","nickname":"玹丶","note":"","ucode":"41A0202EE9A675","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":567299,"discussion_content":"mark","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1650879513,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1777940,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKT9Tk01eiaQ9cgtibYh9Y6Fdg5bPoCe9d5kwVUqZicEKMibruFuKQt1MbuEkCCDzjQz3oql44RUqt4Lw/132","nickname":"Geek_15dc40","note":"","ucode":"881BD807558C26","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":563270,"discussion_content":"mark","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1649958115,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1656848,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/fy2rpUzbSEeIAQHfbt0EkYkMIIuEPhWO6GFkjJNmLy5gbRp2UnNlrLh1fAAU52bQKfiahl17ZTOjhbYiatmrNibDg/132","nickname":"杨小曹","note":"","ucode":"D266D0A11BC573","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":560496,"discussion_content":"mark","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1649346564,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1251820,"avatar":"https://static001.geekbang.org/account/avatar/00/13/19/ec/98ea95fd.jpg","nickname":"傑","note":"","ucode":"A1BD35177E198E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":560051,"discussion_content":"mark","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1649147138,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1622022,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJia6zEsh2u119zJicmq7wApvnricZEKiawaZicice1cOzujWdFicFwPtavlHiaVpCNgCpxBtdl7ynd3y0wkQ/132","nickname":"james_xu","note":"","ucode":"12E50291F5BA89","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":554774,"discussion_content":"mark","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1646612607,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":4,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1615961,"avatar":"https://static001.geekbang.org/account/avatar/00/18/a8/59/098b7258.jpg","nickname":"草捏子","note":"","ucode":"7A6185E604B110","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":551706,"discussion_content":"mark","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1645091647,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":4,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1492424,"avatar":"https://static001.geekbang.org/account/avatar/00/16/c5/c8/af67fafd.jpg","nickname":"康家梁Glory","note":"","ucode":"0B994FBE7DAFE9","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":551334,"discussion_content":"学完再来看这个实战问题","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1644991193,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":4,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1048609,"avatar":"https://static001.geekbang.org/account/avatar/00/10/00/21/136c39a4.jpg","nickname":"我在隐身😎","note":"","ucode":"E9F792CACB9AD5","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":549969,"discussion_content":"mark ","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1644314278,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":4,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1101454,"avatar":"https://static001.geekbang.org/account/avatar/00/10/ce/8e/204736bb.jpg","nickname":"adrian_xia","note":"","ucode":"957C329EAFD31C","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":549741,"discussion_content":"mark","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1644223370,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":4,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1114558,"avatar":"","nickname":"autopenguin","note":"","ucode":"81152CDEB2E702","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":549310,"discussion_content":"mark","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1643819002,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":4,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1848085,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/1FrTiaSfYpgWJibHicnRkVAiatkpbia1z5nXicPSJnrps7Y96W4jicXhuyVPR009cQMPFvmTQkI4LELuk0tPoSbJfuwCQ/132","nickname":"梁林江","note":"","ucode":"8769E6FAA6E4A7","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":546286,"discussion_content":"mark","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1642268202,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":4,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2652995,"avatar":"https://static001.geekbang.org/account/avatar/00/28/7b/43/20cf4dd0.jpg","nickname":"aimin","note":"","ucode":"7001E627F33B5D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":533984,"discussion_content":"mark","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1638059872,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":4,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2733341,"avatar":"","nickname":"Geek_4d246d","note":"","ucode":"F2520B3F6F5E22","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":531672,"discussion_content":"mark","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1637380440,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":4,"extra":"{\"user_type\":1}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1671311,"avatar":"https://static001.geekbang.org/account/avatar/00/19/80/8f/006c5623.jpg","nickname":"ABZ         ༽","note":"","ucode":"19B73DB91322FE","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":404053,"discussion_content":"mark","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1634216860,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":4,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1004349,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/53/3d/1189e48a.jpg","nickname":"微思","note":"","ucode":"853C48AA183A7B","race_medal":4,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":402970,"discussion_content":"Mark","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1633968171,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":5,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1140175,"avatar":"https://static001.geekbang.org/account/avatar/00/11/65/cf/326c0eea.jpg","nickname":"x-ray","note":"","ucode":"8363F0C4D0AC0B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":393629,"discussion_content":"mark","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1631523354,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":5,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1080998,"avatar":"https://static001.geekbang.org/account/avatar/00/10/7e/a6/188817b6.jpg","nickname":"郭嵩阳","note":"","ucode":"9DC42C7B73F580","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":387756,"discussion_content":"mark 学完再来看","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1628401279,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":5,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1328177,"avatar":"https://static001.geekbang.org/account/avatar/00/14/44/31/7abc5bd9.jpg","nickname":"| 趁着我们还年轻","note":"","ucode":"99ADE3F52C95EF","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":383537,"discussion_content":"mark","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1626152018,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":5,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1145954,"avatar":"https://static001.geekbang.org/account/avatar/00/11/7c/62/5afc0c01.jpg","nickname":"匿天","note":"","ucode":"A985BFAA285D0A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":381917,"discussion_content":"mark","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1625291623,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":5,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2424342,"avatar":"","nickname":"Geek_09f8aa","note":"","ucode":"BB21B01E897648","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":358610,"discussion_content":"mark","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1615996983,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":5,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1731543,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/6b/d7/8872624a.jpg","nickname":"xmeng","note":"","ucode":"C0CA2182BA3B4B","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":351236,"discussion_content":"mark 学完再来看这个问题","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1614189919,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":5,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":143654,"user_name":"stg609","can_delete":false,"product_type":"c1","uid":1073025,"ip_address":"","ucode":"FB70A75A891BB8","user_header":"https://static001.geekbang.org/account/avatar/00/10/5f/81/1c614f4a.jpg","comment_is_top":false,"comment_ctime":1571752610,"is_pvip":false,"replies":[{"id":"55509","content":"限界上下文划分主要依据是业务的语义边界，比如客户的环境下只说客户相关的事情，权限环境下只定义权限相关的业务逻辑。对于陌生业务环境，经过分析，你基本能够知道有哪些流程和场景，这些流程和场景里应该有对应的语义环境。<br>而在具体的分析过程中，在确定一个子域，并完成事件风暴后，你可以找出实体和聚合，实体和聚合根他们有业务属性和逻辑。你基本知道这个聚合可以作什么样的业务，如果多个聚合共同完整这类业务，你就可以把多个聚合放在一个限界上下文内，这样一个限界上下文就形成了。","user_name":"作者回复","user_name_real":"渔","uid":"1316268","ctime":1571794965,"ip_address":"","comment_id":143654,"utype":1}],"discussion_count":2,"race_medal":0,"score":"199140248226","product_id":100037301,"comment_content":"谢谢老师的文章，很受用。我们公司也在实践DDD, 但是遇到很多问题。其中之一就是不能合理的定义这个BC。能不能具体说下如何去划分这个限界上下文？或者说根据什么去判断边界在哪？<br><br>往往对于很熟悉的领域比如您所处于的保险，或者电商，由于很熟悉，所以有些边界是一目了然的，比如销售上下文，库存上下文等。但是假设你处于一个完全陌生的领域，该怎样一步一步识别出这个上下文边界呢？","like_count":46,"discussions":[{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":471635,"discussion_content":"限界上下文划分主要依据是业务的语义边界，比如客户的环境下只说客户相关的事情，权限环境下只定义权限相关的业务逻辑。对于陌生业务环境，经过分析，你基本能够知道有哪些流程和场景，这些流程和场景里应该有对应的语义环境。\n而在具体的分析过程中，在确定一个子域，并完成事件风暴后，你可以找出实体和聚合，实体和聚合根他们有业务属性和逻辑。你基本知道这个聚合可以作什么样的业务，如果多个聚合共同完整这类业务，你就可以把多个聚合放在一个限界上下文内，这样一个限界上下文就形成了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571794965,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1618328,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b1/98/11b22d79.jpg","nickname":"絆","note":"","ucode":"52D965461314DB","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":374897,"discussion_content":"最好是能和领域专家一起讨论,领域专家虽然不懂软件设计,但是和专家讨论的过程可以帮你认识这个新的领域.","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1621404987,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":143427,"user_name":"朱振光","can_delete":false,"product_type":"c1","uid":1622591,"ip_address":"","ucode":"132631BA843436","user_header":"https://static001.geekbang.org/account/avatar/00/18/c2/3f/42fc8939.jpg","comment_is_top":false,"comment_ctime":1571707694,"is_pvip":false,"replies":[{"id":"55390","content":"做子域划分的主要目的就是把问题域细分，然后你才能做事件风暴，子域太大你hold不住！这些细分的子域是相对较大的领域，在事件风暴之前先做子域细分。子域细分后，你就可以在子域内用事件风暴建立领域模型，建模过程中会对聚合进行归类，形成限界上下文边界。这个限界上下文，其实你也可以认为是一个子域。","user_name":"作者回复","user_name_real":"渔","uid":"1316268","ctime":1571712350,"ip_address":"","comment_id":143427,"utype":1}],"discussion_count":2,"race_medal":0,"score":"100355955502","product_id":100037301,"comment_content":"从事件风暴到代码落地的5个步骤中，并没有提到子域划分和bounded context的划分，这个两个步骤应该在哪一步进行呢？bounded context划分是直接基于子域里面划分，还是在整个领域内划分，最后再和子域mapping？","like_count":24,"discussions":[{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":471531,"discussion_content":"做子域划分的主要目的就是把问题域细分，然后你才能做事件风暴，子域太大你hold不住！这些细分的子域是相对较大的领域，在事件风暴之前先做子域细分。子域细分后，你就可以在子域内用事件风暴建立领域模型，建模过程中会对聚合进行归类，形成限界上下文边界。这个限界上下文，其实你也可以认为是一个子域。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571712350,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1622591,"avatar":"https://static001.geekbang.org/account/avatar/00/18/c2/3f/42fc8939.jpg","nickname":"朱振光","note":"","ucode":"132631BA843436","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":38464,"discussion_content":"很清楚，谢谢","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571792648,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":203716,"user_name":"新新","can_delete":false,"product_type":"c1","uid":1113354,"ip_address":"","ucode":"9308705EA0F014","user_header":"https://static001.geekbang.org/account/avatar/00/10/fd/0a/14948043.jpg","comment_is_top":false,"comment_ctime":1586257741,"is_pvip":false,"replies":[{"id":"76134","content":"多看几遍理解就是不一样啊。","user_name":"作者回复","user_name_real":"渔","uid":"1316268","ctime":1586262674,"ip_address":"","comment_id":203716,"utype":1}],"discussion_count":3,"race_medal":0,"score":"96075538253","product_id":100037301,"comment_content":"已经是第三遍刷了，第一遍只记住了DDD是微服务拆分的利器，第二遍记住了领域、子域、界限上下文、聚合等这些概念，第三遍有了一些自己的理解，对应领域、子域、界限上下文我是这样理解的：<br>1、领域对系统的一级划分，如果划分为领域已经可以进行事件风暴，则没有必要再拆分为子域，直接在领域内进行事件风暴。<br>2、子域是个相对概念，在一个大系统里的子域可能比一个小系统的领域还要大，比如有两个平台，一个平台是京东级的电商平台，一个是小图书馆的管理系统，电商平台的用户子域，比图书管理系统的用户领域要大的多。对小系统而言，可能没有子域的概念，系统划分领域后，直接在领域上进行事件风暴。<br>3、界限上下文与领域、子域最大的区别是，上下文是在事件风暴后产生的，事件风暴后产生的上下文可能反过来会影响子域的划分。<br>4、界限上下文一直是理解的难点，一个动作是一个界限上下文？比如用户登录；还是一个名词是一个界限上下文？比如用户。我的理解是一个界限上下文是都可以，界限上下文最大的作用是限定哪些名词和动作是在这个界限内的，比如用户管理可以做为一个界限上下文（子域），用户登录和注册就在这个上下文内，设备的管理就不在这个上下文内，所以就不属于这个上下文（子域），代码实现的时候，设备相关的操作就不应该在用户管理服务里实现。","like_count":23,"discussions":[{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":490941,"discussion_content":"多看几遍理解就是不一样啊。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1586262674,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":279028,"discussion_content":"其实有时候时跟流程环节或者子模块比较类似。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1591275627,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2004327,"avatar":"","nickname":"Geek_a68696","note":"","ucode":"B9368DAE495577","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":266436,"discussion_content":"界限上下文 能不能理解成一个业务的具体所有流程？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1589513916,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":142458,"user_name":"TH","can_delete":false,"product_type":"c1","uid":1053413,"ip_address":"","ucode":"C5EA20546DC09C","user_header":"https://static001.geekbang.org/account/avatar/00/10/12/e5/592d9324.jpg","comment_is_top":false,"comment_ctime":1571371312,"is_pvip":true,"replies":[{"id":"54952","content":"不同产品线如果领域模型差异太大的话，建议还是分开建设。这样不同产品之间的影响就很小了，也减少了很多兼容带来的开销，用户体验也不会太好。所以可以针对不同场景的产品设计出不同的微服务，但是在前端设计的时候需要注意，这些不同类产品的业务流程和前端界面是可以很好的融合在一起的。前端的设计我在后面也会有一节来讲解。注意一下，业务差异不是太大，不会带来太大复杂度的话，还是尽量建立一个领域模型。","user_name":"作者回复","user_name_real":"渔","uid":"1316268","ctime":1571376013,"ip_address":"","comment_id":142458,"utype":1}],"discussion_count":5,"race_medal":0,"score":"57405946160","product_id":100037301,"comment_content":"以前基于模块的编程方式，会将不同业务中属于同一个对象的功能都写到这个对象的类中，导致这个类非常庞大，从逻辑上来说也将复杂的业务耦合到了一起。如果使用DDD的方式来设计系统，比如文中所举的保单的例子，应该不同的业务线或者说不同的限界上下文内都应当实现自己的保单对象，对应到微服务就是以限界上下文来划分服务，而不是以对象或功能集来划分服务，因此不存在一个单独的“保单”服务，是这样的吗？","like_count":13,"discussions":[{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":471135,"discussion_content":"不同产品线如果领域模型差异太大的话，建议还是分开建设。这样不同产品之间的影响就很小了，也减少了很多兼容带来的开销，用户体验也不会太好。所以可以针对不同场景的产品设计出不同的微服务，但是在前端设计的时候需要注意，这些不同类产品的业务流程和前端界面是可以很好的融合在一起的。前端的设计我在后面也会有一节来讲解。注意一下，业务差异不是太大，不会带来太大复杂度的话，还是尽量建立一个领域模型。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571376013,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1107661,"avatar":"https://static001.geekbang.org/account/avatar/00/10/e6/cd/a3c8f298.jpg","nickname":"晓白.M","note":"","ucode":"F7245D3723C5BA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":41989,"discussion_content":"“保单管理”就是一个保单服务。类比到日常工作，有团队和职责划分，就可以考虑将其建模时看成一个域并识别其限界上下文和里面的实体，类似保单虽然在保险行业全流程中有交互情形，但对其日常管理多集中在“保全”岗的职能框架内，那就可以以此岗的职能为中心，对保单管理微服务进行建模。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1572567039,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1123011,"avatar":"https://static001.geekbang.org/account/avatar/00/11/22/c3/5c69ab81.jpg","nickname":"Lucky Dog","note":"","ucode":"C71C5D24200CCF","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1107661,"avatar":"https://static001.geekbang.org/account/avatar/00/10/e6/cd/a3c8f298.jpg","nickname":"晓白.M","note":"","ucode":"F7245D3723C5BA","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":285683,"discussion_content":"项目架构对应组织架构","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1592914779,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":41989,"ip_address":""},"score":285683,"extra":""}]},{"author":{"id":2684225,"avatar":"https://static001.geekbang.org/account/avatar/00/28/f5/41/161a3747.jpg","nickname":"fc 方","note":"","ucode":"C3D4AEFB8BC096","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":382391,"discussion_content":"mark","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1625554861,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1310192,"avatar":"https://static001.geekbang.org/account/avatar/00/13/fd/f0/67ed878c.jpg","nickname":"拙言","note":"","ucode":"40179CFED35579","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":39046,"discussion_content":"我理解这个保单和文章表格中人员是类似的，由创建请假领域服务，去调用请假接口和人员接口，去完成一次人员的请假。有上层应用层来调度。这样保单和人员就只需一个领域模型。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571884537,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":255524,"user_name":"信了","can_delete":false,"product_type":"c1","uid":1368648,"ip_address":"","ucode":"EA188A1DD1D390","user_header":"https://static001.geekbang.org/account/avatar/00/14/e2/48/6c066714.jpg","comment_is_top":false,"comment_ctime":1603365291,"is_pvip":false,"replies":[{"id":"93177","content":"我把书里面的内容直接贴过来吧。<br>学完第 5 章和本章后，有人可能会对子域与限界上下文的关系有些困惑。子域和限界上下文的映射关系到底是什么样的？一对多？或者多对一？还是一对一？<br>其实，在 DDD 中包括问题域和解决方案域两个不同的维度。问题域主要从业务视角来考虑，完成从领域到子域的分解，而解决方案域则主要从技术实现的角度，通过划分限界上下文和采用 DDD 战术设计完成微服务的拆分和落地。“子域”和“限界上下文”这两个概念分别从不同的视角，构建起了 DDD 处理业务复杂度的根基。<br>个人认为“子域”和“限界上下文”在大多数情况下是一对一或者一对多的映射关系。从实践角度可以这样理解，我们不妨将业务领域的分解拆分为两个阶段：从领域到子域的粗粒度的分解和从子域到限界上下文的技术实现级的分解。有时候企业的业务领域非常庞大，不太方便用事件风暴对整个领域构建领域模型。所以在领域建模之前，我们先根据业务流程边界或者功能集合等要素，将庞大的领域分解成若干个大小合适的子域，然后根据子域属性划分为核心子域、通用子域和支撑子域。当领域分解到足够小后，我们就可以在这些子域内开展事件风暴，划分限界上下文完成领域建模了。<br>在对不同属性子域构建领域模型时，我们可能会有不同的关注点，比如在通用子域构建领域模型时，我们会更多关注领域模型的抽象和标准化，以便实现企业级复用，这种设计方法与中台的业务建模思想是一致的。当然，如果你的领域足够小的话，我们就没必要进行从领域到子域的分解和属性归类了，你可以直接开展事件风暴，直接划分限界上下文，完成领域建模。按照这种分解方式，如果子域和限界上下文边界刚好一致，那它们就是一对一的关系，而如果在一个子域内还可以划分为多个限界上下文，那我们最终得到的就是一对多的映射关系。需要注意的是，有些通用子域构建出来的领域模型往往会因为需要复用，可能会跨多个不同的业务子域，组合以后形成企业级能力。<br>限界上下文本质上就是子域，只不过它会更多地考虑领域对象的语义边界和技术实现细节。限界上下文的划分体现的是一种更为详细的设计过程，这个过程划分了业务的上下文语义边界，完成了领域模型，明确了领域对象以及领域对象之间的依赖关系等。至此， 我们依据限界上下文和领域模型就可以完成微服务设计和落地了。<br><br>","user_name":"作者回复","user_name_real":"欧创新","uid":"1316268","ctime":1603434423,"ip_address":"","comment_id":255524,"utype":1}],"discussion_count":3,"race_medal":0,"score":"53142972843","product_id":100037301,"comment_content":"子域和限界上下文是什么关系？是包含吗","like_count":12,"discussions":[{"author":{"id":1341216,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTK7CENSOKQLib0HGXV6KoY8NVD8vk9YdicdTwpJjJTucBkVCHKibhMepOFLxOnuNPhSkxrzd264gw9Jw/132","nickname":"warrior","note":"","ucode":"A0C7BEF5B3DC89","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":387636,"discussion_content":"Subdomain是站在业务视角观察的产物, 而BC则是站在技术实现的角度, 尽可能的贴近Subdomain中的定义, 出于现实(物理or技术)的原因, 可能会有1...n的情况, 但大部分时间应该尽量做到1...1.  这么理解差不多吧?","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1628313001,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":507743,"discussion_content":"我把书里面的内容直接贴过来吧。\n学完第 5 章和本章后，有人可能会对子域与限界上下文的关系有些困惑。子域和限界上下文的映射关系到底是什么样的？一对多？或者多对一？还是一对一？\n其实，在 DDD 中包括问题域和解决方案域两个不同的维度。问题域主要从业务视角来考虑，完成从领域到子域的分解，而解决方案域则主要从技术实现的角度，通过划分限界上下文和采用 DDD 战术设计完成微服务的拆分和落地。“子域”和“限界上下文”这两个概念分别从不同的视角，构建起了 DDD 处理业务复杂度的根基。\n个人认为“子域”和“限界上下文”在大多数情况下是一对一或者一对多的映射关系。从实践角度可以这样理解，我们不妨将业务领域的分解拆分为两个阶段：从领域到子域的粗粒度的分解和从子域到限界上下文的技术实现级的分解。有时候企业的业务领域非常庞大，不太方便用事件风暴对整个领域构建领域模型。所以在领域建模之前，我们先根据业务流程边界或者功能集合等要素，将庞大的领域分解成若干个大小合适的子域，然后根据子域属性划分为核心子域、通用子域和支撑子域。当领域分解到足够小后，我们就可以在这些子域内开展事件风暴，划分限界上下文完成领域建模了。\n在对不同属性子域构建领域模型时，我们可能会有不同的关注点，比如在通用子域构建领域模型时，我们会更多关注领域模型的抽象和标准化，以便实现企业级复用，这种设计方法与中台的业务建模思想是一致的。当然，如果你的领域足够小的话，我们就没必要进行从领域到子域的分解和属性归类了，你可以直接开展事件风暴，直接划分限界上下文，完成领域建模。按照这种分解方式，如果子域和限界上下文边界刚好一致，那它们就是一对一的关系，而如果在一个子域内还可以划分为多个限界上下文，那我们最终得到的就是一对多的映射关系。需要注意的是，有些通用子域构建出来的领域模型往往会因为需要复用，可能会跨多个不同的业务子域，组合以后形成企业级能力。\n限界上下文本质上就是子域，只不过它会更多地考虑领域对象的语义边界和技术实现细节。限界上下文的划分体现的是一种更为详细的设计过程，这个过程划分了业务的上下文语义边界，完成了领域模型，明确了领域对象以及领域对象之间的依赖关系等。至此， 我们依据限界上下文和领域模型就可以完成微服务设计和落地了。\n\n","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1603434423,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1213778,"avatar":"https://static001.geekbang.org/account/avatar/00/12/85/52/6690a025.jpg","nickname":"三石","note":"","ucode":"1170639935B890","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":573424,"discussion_content":"m","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1653404395,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":143195,"user_name":"WING","can_delete":false,"product_type":"c1","uid":1485200,"ip_address":"","ucode":"E4723BA4027407","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/IdElofI20lsCUm1NIQPSpYFzAGLbLs41SL324FkmTb0icqnRJicW6mqX4iag1BQUSNtc7BtKJ2fEUYwU4rN47vEsQ/132","comment_is_top":false,"comment_ctime":1571645630,"is_pvip":false,"replies":[{"id":"55308","content":"理赔相对保险领域来说是一个比较大的子域。由于子域过大不太容易做事件风暴，因此还需要继续细分子域。当子域细分到一定程度后，对这个子域的分析就比较容易了，很有可能这个子域就是一个限界上下文，所以这时候子子域的边界与限界上下文的边界是一致的。理赔不是一个微服务，需要根据不同子域事件风暴建立领域模型后，它其中的某个业务子域就是一个微服务，比如报案之类的。你说的这个工作流引擎是不是跨了很多的微服务，如果做统一协调，按照职能划分它应该是一个工作流微服务。另外，我简单分析一下，有的时候DDD的事件驱动可以替代工作流的功能，通过事件驱动推动业务在不同的领域模型中的流转。后面的章节会讲到。","user_name":"作者回复","user_name_real":"渔","uid":"1316268","ctime":1571647292,"ip_address":"","comment_id":143195,"utype":1}],"discussion_count":4,"race_medal":0,"score":"44521318590","product_id":100037301,"comment_content":"欧老师，文中提到“理赔子域就包括报案、查勘和定损等多个界限上下文(界限上下文与理赔的子子域边界重合)”这句话边界重合怎么理解?是否理赔应该作为一个微服务?另外，如果理赔流程在技术上引入了工作流引擎(如flowable)，那么这个工作流引擎又处于什么位置？","like_count":10,"discussions":[{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":471417,"discussion_content":"理赔相对保险领域来说是一个比较大的子域。由于子域过大不太容易做事件风暴，因此还需要继续细分子域。当子域细分到一定程度后，对这个子域的分析就比较容易了，很有可能这个子域就是一个限界上下文，所以这时候子子域的边界与限界上下文的边界是一致的。理赔不是一个微服务，需要根据不同子域事件风暴建立领域模型后，它其中的某个业务子域就是一个微服务，比如报案之类的。你说的这个工作流引擎是不是跨了很多的微服务，如果做统一协调，按照职能划分它应该是一个工作流微服务。另外，我简单分析一下，有的时候DDD的事件驱动可以替代工作流的功能，通过事件驱动推动业务在不同的领域模型中的流转。后面的章节会讲到。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571647292,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1489957,"avatar":"https://static001.geekbang.org/account/avatar/00/16/bc/25/1c92a90c.jpg","nickname":"tt","note":"","ucode":"7753B79AD5A9AC","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":203032,"discussion_content":"我觉得微服务是底层的基础服务，还需要上层的聚合服务去调用他们。当然，上层么聚合服务也可能是微服务的形式。\n\n总之，就是微服务也是要分层的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1583986658,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1808666,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/99/1a/196ff5f8.jpg","nickname":"长空","note":"","ucode":"EFE7E08491849C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":143355,"discussion_content":"我理解的事件驱动落地后，就变成了数据驱动。不同的数据代表不同的状态，也就对应不同的事件了。\n事件驱动比较偏理论，数据驱动偏实现。组合在一起就实现了 “一步接一步”的效果\n\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579502321,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1485200,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/IdElofI20lsCUm1NIQPSpYFzAGLbLs41SL324FkmTb0icqnRJicW6mqX4iag1BQUSNtc7BtKJ2fEUYwU4rN47vEsQ/132","nickname":"WING","note":"","ucode":"E4723BA4027407","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":37632,"discussion_content":"谢谢谢欧老师的解答，期待后续的课程，太需要这门课程了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571648773,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":142357,"user_name":"波波","can_delete":false,"product_type":"c1","uid":1236305,"ip_address":"","ucode":"847168EE0E7D44","user_header":"https://static001.geekbang.org/account/avatar/00/12/dd/51/a7e82963.jpg","comment_is_top":false,"comment_ctime":1571359035,"is_pvip":false,"replies":[{"id":"54897","content":"是的。","user_name":"作者回复","user_name_real":"渔","uid":"1316268","ctime":1571360019,"ip_address":"","comment_id":142357,"utype":1}],"discussion_count":1,"race_medal":0,"score":"44521031995","product_id":100037301,"comment_content":"一、限界上下文的作用<br>1、主要是为了消除通用语言在不同领域中的歧义或者说是限制通用语言的使用范围。<br>2、是划分领域的重要依据<br>3、通用语言必须与限界上下文配合使用才有意义<br><br>二、限界上下文可以作为微服务拆分的重要依据","like_count":10,"discussions":[{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":471080,"discussion_content":"是的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571360019,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":143186,"user_name":"瓜瓜","can_delete":false,"product_type":"c1","uid":1053853,"ip_address":"","ucode":"2E98377E48399E","user_header":"https://static001.geekbang.org/account/avatar/00/10/14/9d/19dcdd42.jpg","comment_is_top":false,"comment_ctime":1571643860,"is_pvip":false,"replies":[{"id":"55313","content":"就我了解来说还没有量化的划分方法。主要依赖项目团队和领域专家的判断。<br>在事件风暴时候，子域不能太大，要不你hold不住。其实你说的那个人的问题，做微服务设计时会有一些技巧的，尤其是分布式架构下。如果一个对象同时存在于两个微服务中，你可以考虑一定的数据冗余。其中的一个微服务这个对象是主要的业务环节，它可以被设计为实体，而在另外一个微服务中这个数据是冗余数据，它可以设计为值对象或者关联实体。","user_name":"作者回复","user_name_real":"渔","uid":"1316268","ctime":1571648079,"ip_address":"","comment_id":143186,"utype":1}],"discussion_count":1,"race_medal":0,"score":"31636414932","product_id":100037301,"comment_content":"我在拆分微服务的时候，一般是按照从属关系来划分的。<br>软件就是在表达这个世界的人和人的关系，人和物的关系，物和物之间的关系。他们之间的关系要么是从属，要么是分类。<br>在我之前的一个项目中，就遇到了这个给问题，他是一个人的对象，按照从属关系，他属于其中一个微服务，可是在实际操作中，发现它和我们的用户权限微服务关系更紧密。<br>没办法，只好把他从业务的微服务中移到用户权限的微服务中去了。<br>我想问问，在领域和子域的划分中，有没有非常明确的方法论没有。<br>我相信在业务的讨论中，不同人，从不同的角度看，我相信会有不同的划分区别。","like_count":7,"discussions":[{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":471413,"discussion_content":"就我了解来说还没有量化的划分方法。主要依赖项目团队和领域专家的判断。\n在事件风暴时候，子域不能太大，要不你hold不住。其实你说的那个人的问题，做微服务设计时会有一些技巧的，尤其是分布式架构下。如果一个对象同时存在于两个微服务中，你可以考虑一定的数据冗余。其中的一个微服务这个对象是主要的业务环节，它可以被设计为实体，而在另外一个微服务中这个数据是冗余数据，它可以设计为值对象或者关联实体。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571648079,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":142577,"user_name":"南山","can_delete":false,"product_type":"c1","uid":1119593,"ip_address":"","ucode":"94656FE4A6C378","user_header":"https://static001.geekbang.org/account/avatar/00/11/15/69/187b9968.jpg","comment_is_top":false,"comment_ctime":1571401592,"is_pvip":true,"replies":[{"id":"55141","content":"限界上下文是从业务端分析得出的。由于一般的领域过大，不太好下手去做事件风暴，所以在划分到合适的子域后做事件风暴就没那么复杂了。限界上下文是由若干个聚合构成的，聚合具有一定的业务内聚性。在依据限界上下文完成微服务设计后，以后还是可以很容易根据领域模型的变化来演进的。微服务演进过程主要是微服务之间聚合的重构。所以设计时要做好聚合的代码边界。","user_name":"作者回复","user_name_real":"渔","uid":"1316268","ctime":1571472373,"ip_address":"","comment_id":142577,"utype":1}],"discussion_count":2,"race_medal":0,"score":"27341205368","product_id":100037301,"comment_content":"老师，一直以为是先从业务来确定限界上下文，看完这篇有点疑惑，<br>1。限界上下文是通过细化到最后的子域的边界来决定的吗？<br>2。这些边界怎么组成一个完整的限界上下文呢()可以通过微服务落地的)？<br>3。软件是变化的，那限界上下文是不是也是会变化的呢？比如会根据这个变化来进行微服务拆分？<br>现在有n个微服务，除了组织架构这种支撑服务，其他的没法确定边界","like_count":6,"discussions":[{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":471184,"discussion_content":"限界上下文是从业务端分析得出的。由于一般的领域过大，不太好下手去做事件风暴，所以在划分到合适的子域后做事件风暴就没那么复杂了。限界上下文是由若干个聚合构成的，聚合具有一定的业务内聚性。在依据限界上下文完成微服务设计后，以后还是可以很容易根据领域模型的变化来演进的。微服务演进过程主要是微服务之间聚合的重构。所以设计时要做好聚合的代码边界。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571472373,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":1,"child_discussions":[{"author":{"id":1518535,"avatar":"https://static001.geekbang.org/account/avatar/00/17/2b/c7/9c8647c8.jpg","nickname":"鐘","note":"","ucode":"0106652D5F7BD9","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":582745,"discussion_content":"&#34;限界上下文是从业务端分析得出的&#34; \n\n看了老師在其他留言的解說, 有點不太懂\n\n&#34;问题域主要从业务视角来考虑，完成从领域到子域的分解，而解决方案域则主要从技术实现的角度，通过划分限界上下文和采用 DDD 战术设计完成微服务的拆分和落地。“子域”和“限界上下文”这两个概念分别从不同的视角，构建起了 DDD 处理业务复杂度的根基&#34;\n\n這兩個描述是否有衝突? ","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1659624620,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":471184,"ip_address":"中国台湾"},"score":582745,"extra":""}]}]},{"had_liked":false,"id":224016,"user_name":"乖，摸摸头","can_delete":false,"product_type":"c1","uid":1611745,"ip_address":"","ucode":"BD92741A11D3CD","user_header":"https://static001.geekbang.org/account/avatar/00/18/97/e1/0f4d90ff.jpg","comment_is_top":false,"comment_ctime":1591256606,"is_pvip":true,"replies":[{"id":"82507","content":"前面几章有些概念比较抽象，建议你结合后面的案例，再来理解前面的内容。","user_name":"作者回复","user_name_real":"欧创新","uid":"1316268","ctime":1591273907,"ip_address":"","comment_id":224016,"utype":1}],"discussion_count":2,"race_medal":0,"score":"18771125790","product_id":100037301,"comment_content":"看了好几章了，完全不清楚你在说啥，每一章都读了好几遍，我还有救吗？","like_count":4,"discussions":[{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":497338,"discussion_content":"前面几章有些概念比较抽象，建议你结合后面的案例，再来理解前面的内容。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1591273907,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1618328,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b1/98/11b22d79.jpg","nickname":"絆","note":"","ucode":"52D965461314DB","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":374900,"discussion_content":"可以读一遍老师前面提的书籍<<实现领域驱动设计>> 很经典,可以帮助你理解","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1621406281,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":180335,"user_name":"谭方敏","can_delete":false,"product_type":"c1","uid":1710960,"ip_address":"","ucode":"728DC7ECB7C902","user_header":"https://static001.geekbang.org/account/avatar/00/1a/1b/70/547042ee.jpg","comment_is_top":false,"comment_ctime":1582258857,"is_pvip":false,"replies":[{"id":"70022","content":"是的。","user_name":"作者回复","user_name_real":"渔","uid":"1316268","ctime":1582267729,"ip_address":"","comment_id":180335,"utype":1}],"discussion_count":2,"race_medal":0,"score":"18762128041","product_id":100037301,"comment_content":"通用语言是限定领域内语义，而限界上下文就是限定领域边界，通用语言旨在扫清障碍，进行无差别沟通，老师的表格里面说的比较清晰了，就是大家达成共识的，统一的话术，限界上下文，有点类似Java中package或者C++的namespace的概念，包&#47;名字空间里面可能有一个或者多个聚合，实体，值对象。","like_count":4,"discussions":[{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":484615,"discussion_content":"是的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582267729,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2293598,"avatar":"https://static001.geekbang.org/account/avatar/00/22/ff/5e/de7d1396.jpg","nickname":"王海勋","note":"","ucode":"DCE6C2A332C3D6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":322244,"discussion_content":"还是结合代码更能产生联想，容易理解","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1604711584,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":175192,"user_name":"发飙的蜗牛","can_delete":false,"product_type":"c1","uid":1800868,"ip_address":"","ucode":"B2D96A2D0B6BA4","user_header":"https://static001.geekbang.org/account/avatar/00/1b/7a/a4/79ffe77c.jpg","comment_is_top":false,"comment_ctime":1580609878,"is_pvip":false,"replies":[{"id":"68051","content":"理解的没错。有时候并不一定需要将上下文拆分为微服务的，看企业的基础技术能力。如果没有这种能力还是尽量不要拆，等有这个能力的时候，你是可以很容易的拆分出微服务的。","user_name":"作者回复","user_name_real":"渔","uid":"1316268","ctime":1580627132,"ip_address":"","comment_id":175192,"utype":1}],"discussion_count":1,"race_medal":0,"score":"18760479062","product_id":100037301,"comment_content":"老师，您好！说一下我的理解，我们是先划分子域，然后再基于这个子域去做事件风暴，然后在事件风暴过程中是有划分限界上下文这个步骤的，也就是说这个子域有可能会被划分为多个限界上下文，理论上也就是会对应多个微服务！但是会考虑其他因素，我们可能会将某几个上下文合并到一个微服务。那我是不是可以理解为在事件风暴中，一个子域也会被划分为多个子子域？因为在一开始我们可能并不知道我们应该这么划分，只有在事件风暴才知道应该这么划分。","like_count":4,"discussions":[{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":482648,"discussion_content":"理解的没错。有时候并不一定需要将上下文拆分为微服务的，看企业的基础技术能力。如果没有这种能力还是尽量不要拆，等有这个能力的时候，你是可以很容易的拆分出微服务的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1580627132,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":143466,"user_name":"观海雲遠","can_delete":false,"product_type":"c1","uid":1182910,"ip_address":"","ucode":"76680C70AF4B2C","user_header":"https://static001.geekbang.org/account/avatar/00/12/0c/be/e0563e93.jpg","comment_is_top":false,"comment_ctime":1571713371,"is_pvip":false,"replies":[{"id":"55402","content":"确定子域后，就可以做事件风暴了。事件风暴是一个领域建模的过程，实际上有一部分的工作是做用例分析，尽量全面的梳理业务的各种领域事件，找出实体、聚合等，根据业务语义划定限界上下文，建立领域模型，限界上下文是业务边界，也是微服务设计的边界。从领域模型到微服务还会有一个分析的过程。<br>微服务设计完成后，后面的开发方式就没什么区别了。","user_name":"作者回复","user_name_real":"渔","uid":"1316268","ctime":1571722558,"ip_address":"","comment_id":143466,"utype":1}],"discussion_count":3,"race_medal":0,"score":"14456615259","product_id":100037301,"comment_content":"你好,老师。 其实我很想知道当各个子域都确认了之后, 研发如何入手，从哪儿开始呢？ 如何与敏捷中的故事卡结合。希望能有这方面的解答。 谢谢老师","like_count":3,"discussions":[{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":471552,"discussion_content":"确定子域后，就可以做事件风暴了。事件风暴是一个领域建模的过程，实际上有一部分的工作是做用例分析，尽量全面的梳理业务的各种领域事件，找出实体、聚合等，根据业务语义划定限界上下文，建立领域模型，限界上下文是业务边界，也是微服务设计的边界。从领域模型到微服务还会有一个分析的过程。\n微服务设计完成后，后面的开发方式就没什么区别了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571722558,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":43106,"discussion_content":"可以这么理解。\n不过事件风暴可能会跟用户故事分析重叠。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1572855777,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1205328,"avatar":"https://static001.geekbang.org/account/avatar/00/12/64/50/a54f0907.jpg","nickname":"祥敏","note":"","ucode":"466BFA980D9A37","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":41256,"discussion_content":"老师，边界上下文定义是独立于敏捷开发的事情，对业务的拆分和架构设计，可以这样理解吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1572391133,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":143434,"user_name":"嘉嘉☕","can_delete":false,"product_type":"c1","uid":1059771,"ip_address":"","ucode":"632A5CC4B53BB1","user_header":"https://static001.geekbang.org/account/avatar/00/10/2b/bb/5cf70df8.jpg","comment_is_top":false,"comment_ctime":1571708388,"is_pvip":false,"replies":[{"id":"55389","content":"你可以把限界上下文理解成一个子域。<br>限界上下文是在事件风暴后产生的，在找出实体和聚合后，会将聚合归拢到限界上下文，让他们在同一个业务语义环境下工作。这样多个聚合一起就组成了限界上下文，完成特定的业务领域的功能，这个限界上下文是不是就是一个子域呢？","user_name":"作者回复","user_name_real":"渔","uid":"1316268","ctime":1571711941,"ip_address":"","comment_id":143434,"utype":1}],"discussion_count":4,"race_medal":0,"score":"14456610276","product_id":100037301,"comment_content":"老师好<br><br>拆到一定程度后，有些子子域的领域边界就可能变成限界上下文的边界了。<br><br>请问，怎样理解“一定程度”呢？<br>“子子域的领域边界可能变成限界上下文的边界”，这句也不太好把握？","like_count":3,"discussions":[{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":471536,"discussion_content":"你可以把限界上下文理解成一个子域。\n限界上下文是在事件风暴后产生的，在找出实体和聚合后，会将聚合归拢到限界上下文，让他们在同一个业务语义环境下工作。这样多个聚合一起就组成了限界上下文，完成特定的业务领域的功能，这个限界上下文是不是就是一个子域呢？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571711941,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1808666,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/99/1a/196ff5f8.jpg","nickname":"长空","note":"","ucode":"EFE7E08491849C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":143349,"discussion_content":"老师您好，前面也有说到是划分了子域后再进行事件风暴的。所以我理解的应该是限界上下文标记出了子域的边界，是非常近似而不是等于。比如地图上的边界也只是大概，在现实中也不是百分之百一一对应。 \n不理解这样理解对么？\n\n但这个问题其实没有多大意义，不管子域的边界或是限界上下文，都有统一意义环境和为服务拆分做指导的作用，苛求他们是相等还是约定于似乎没有什么意义。\n","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1579502131,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1518535,"avatar":"https://static001.geekbang.org/account/avatar/00/17/2b/c7/9c8647c8.jpg","nickname":"鐘","note":"","ucode":"0106652D5F7BD9","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1808666,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/99/1a/196ff5f8.jpg","nickname":"长空","note":"","ucode":"EFE7E08491849C","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":582746,"discussion_content":"感覺有個清楚可實作的規則, 會比高大上, 完美無瑕但是大家都會誤會誤用的理論要好","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1659624859,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":143349,"ip_address":"中国台湾"},"score":582746,"extra":""}]},{"author":{"id":1791651,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/56/a3/c15280b3.jpg","nickname":"Geek_Jamy","note":"","ucode":"021F9DD422ED84","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":286653,"discussion_content":"老师，您上面的表中列出了领域对象和领域类型的对应关系，那么，什么是领域对象？什么是领域类型？他们的命名规则是什么？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1593254983,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":142969,"user_name":"密码123456","can_delete":false,"product_type":"c1","uid":1126593,"ip_address":"","ucode":"9889463CC0EA71","user_header":"https://static001.geekbang.org/account/avatar/00/11/30/c1/2dde6700.jpg","comment_is_top":false,"comment_ctime":1571615417,"is_pvip":false,"replies":[{"id":"55246","content":"理解的很对。在一个限界上下文就做这个限界上下文内的事情，请假就做请假的事，不要把加班的事情掺和进来。","user_name":"作者回复","user_name_real":"渔","uid":"1316268","ctime":1571620347,"ip_address":"","comment_id":142969,"utype":1}],"discussion_count":2,"race_medal":0,"score":"14456517305","product_id":100037301,"comment_content":"上节课说，域的划分。这节课说怎么划分。首先要对业务标准化，使用通用语言来描述，所有的业务，每个业务必须清晰不能存在二义性。这样就能确保业务流程转化为代码。然后使用界限上下文，确定每个业务的上限和下限，不多做，也不少做。比如请假事件，就不能直接使用加班的时长来抵扣。必须调用加班的接口","like_count":3,"discussions":[{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":471341,"discussion_content":"理解的很对。在一个限界上下文就做这个限界上下文内的事情，请假就做请假的事，不要把加班的事情掺和进来。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571620347,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1398824,"avatar":"https://static001.geekbang.org/account/avatar/00/15/58/28/c86340ca.jpg","nickname":"达文西","note":"","ucode":"01C1063F23D634","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":88326,"discussion_content":"mark","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1576689780,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":224031,"user_name":"乖，摸摸头","can_delete":false,"product_type":"c1","uid":1611745,"ip_address":"","ucode":"BD92741A11D3CD","user_header":"https://static001.geekbang.org/account/avatar/00/18/97/e1/0f4d90ff.jpg","comment_is_top":false,"comment_ctime":1591259487,"is_pvip":true,"replies":[{"id":"82510","content":"从你描述的功能来看，这个场景主要包含三部分的关键功能。在进行领域划分的时候，你可以参考关键流程或功能集合。在你的场景里面，信息发布和查看属于比较关键的流程，而用户和积分则属于通用功能。所以在划分子域的时候，得到的结论跟你的描述是一致的。也就是划分为：用户、积分和信息管理三个子领域。当然每个子领域内部还需要用到后面的知识进行领域建模，找出领域模型中的对象，完成微服务设计。<br>初步可以判断用户这个子领域会有用户基本信息管理和用户登录认证两个聚合。<br>你说的消耗和获取积分是属于积分实体的业务行为，所以它们应该放在积分子域的聚合内，基于单一职责原则，积分聚合只完成积分相关的功能，积分聚合的聚合根是积分实体。用户只完成用户基本信息管理和登录认证功能，用户基本信息管理的聚合根是用户。<br>关于你的疑问：在积分聚合会有积分实体，在设计时，生成积分实体时会关联用户聚合根的用户ID，所以在积分聚合你可以根据用户ID查询该用户的积分实体，然后在积分聚合完成消耗积分的操作。<br>这只是一个大概的设计，后面还会有详细的领域建模和微服务设计方法。","user_name":"作者回复","user_name_real":"欧创新","uid":"1316268","ctime":1591275441,"ip_address":"","comment_id":224031,"utype":1}],"discussion_count":2,"race_medal":0,"score":"10181194079","product_id":100037301,"comment_content":"好嘛，我就想问，领域或者之前认为是模块    到底怎么划分的？  <br><br>举个简单的例子，希望老师稍微指导一下，谢谢。<br><br>我们是做个信息对接平台的和58类似。用户分为 招聘方和求职方，招聘方发布招聘信息，求职方查看招聘信息。<br>求职方查看信息需要消耗积分，积分是通过充值或者拉新换来的(主要还是充值)。积分消耗主要是查看信息；以及置顶自己的信息。<br>招聘信息由招聘方发布，还有一部分是公司通过其他渠道获取的。<br><br>我做了个划分：<br>\t用户模块： 登录、注册 ....<br>\t信息模块： 招聘方发布、其他渠道获取 ，信息各种操作 ...<br>\t积分模块： 积分来源以及消耗记录，充值单价的设定 ...<br><br><br>这里我的疑问是，消耗、和获的 积分这个操作是放到  积分模块 还是用户模块。<br>如果 放到积分模块，需要修改用户剩余积分。<br>如果 放到用户模块，需要增加一条积分记录。","like_count":2,"discussions":[{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":497342,"discussion_content":"从你描述的功能来看，这个场景主要包含三部分的关键功能。在进行领域划分的时候，你可以参考关键流程或功能集合。在你的场景里面，信息发布和查看属于比较关键的流程，而用户和积分则属于通用功能。所以在划分子域的时候，得到的结论跟你的描述是一致的。也就是划分为：用户、积分和信息管理三个子领域。当然每个子领域内部还需要用到后面的知识进行领域建模，找出领域模型中的对象，完成微服务设计。\n初步可以判断用户这个子领域会有用户基本信息管理和用户登录认证两个聚合。\n你说的消耗和获取积分是属于积分实体的业务行为，所以它们应该放在积分子域的聚合内，基于单一职责原则，积分聚合只完成积分相关的功能，积分聚合的聚合根是积分实体。用户只完成用户基本信息管理和登录认证功能，用户基本信息管理的聚合根是用户。\n关于你的疑问：在积分聚合会有积分实体，在设计时，生成积分实体时会关联用户聚合根的用户ID，所以在积分聚合你可以根据用户ID查询该用户的积分实体，然后在积分聚合完成消耗积分的操作。\n这只是一个大概的设计，后面还会有详细的领域建模和微服务设计方法。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1591275441,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1255931,"avatar":"https://static001.geekbang.org/account/avatar/00/13/29/fb/7d9d37ae.jpg","nickname":"多多","note":"","ucode":"F0FC2F1DF1FC3E","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":389820,"discussion_content":"老师，积分实体的唯一性标识是什么？积分id?用户id? 理论上积分id是实体id，用户id是积分实体的值对象。但这样设计的话，积分实体id感觉就没业务含义，也不会被其他聚合使用，感觉有点鸡肋","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1629443541,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":209690,"user_name":"小藜","can_delete":false,"product_type":"c1","uid":1837640,"ip_address":"","ucode":"C08C9516A74DCF","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTK3wqLutwb6QwljN9nMU6A8lXbbnT3wOursAwdTONzEUPfvxkYE1OgY6jU24T5XMwJRvpIBrzII4g/132","comment_is_top":false,"comment_ctime":1587601240,"is_pvip":false,"replies":[{"id":"78235","content":"一个业务领域可以根据业务的语义边界划分为多个限界上下文，一个限界上下文建立一个领域模型，一个领域模型里面可能有多个聚合。","user_name":"作者回复","user_name_real":"渔","uid":"1316268","ctime":1587611239,"ip_address":"","comment_id":209690,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10177535832","product_id":100037301,"comment_content":"老师好，是不是每个领域对应一个界限上下文，而每个子域有对应自己的界限上下文？界限上下文是否可以理解为领域的阈值？","like_count":2,"discussions":[{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":492853,"discussion_content":"一个业务领域可以根据业务的语义边界划分为多个限界上下文，一个限界上下文建立一个领域模型，一个领域模型里面可能有多个聚合。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1587611239,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":202350,"user_name":"成章","can_delete":false,"product_type":"c1","uid":1929644,"ip_address":"","ucode":"82D6E87A79A7B0","user_header":"https://static001.geekbang.org/account/avatar/00/1d/71/ac/c87546f5.jpg","comment_is_top":false,"comment_ctime":1585972882,"is_pvip":false,"replies":[{"id":"75659","content":"你的日志是不是可以采用异步的方式呢？<br>我建议你用领域事件驱动的方式，当业务处理完毕，你就可以启动领域事件，将日志数据发送到消息队列，统一由你日志所在领域模型接收，存储、分析并对外展示。现在ELK的技术就是这种方式吧，比较成熟了。","user_name":"作者回复","user_name_real":"渔","uid":"1316268","ctime":1586004137,"ip_address":"","comment_id":202350,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10175907474","product_id":100037301,"comment_content":"老师，我想咨询一下。比如我做银行交易系统，有不同类型的交易，划分为不同的领域，这好理解，修改的数据也是不同的。但是所有交易都要写日志，而且日志的部分内容是一致的，日志也会有顺序号，不管什么交易都要遵循。那么是应该有个独立的日志领域吗?还是说所有领域应该有日志子域。","like_count":2,"discussions":[{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":490564,"discussion_content":"你的日志是不是可以采用异步的方式呢？\n我建议你用领域事件驱动的方式，当业务处理完毕，你就可以启动领域事件，将日志数据发送到消息队列，统一由你日志所在领域模型接收，存储、分析并对外展示。现在ELK的技术就是这种方式吧，比较成熟了。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1586004137,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":196057,"user_name":"秦伟","can_delete":false,"product_type":"c1","uid":1931692,"ip_address":"","ucode":"D47C1F57500FE1","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/VjomKNzfFiaIttqYMxbjAWTG7NL7P2UqC5fbSvg0JW80SLnoR2oH1G4U2eibmxbR4wPpoqZdDnjC8GqgShDOBRzA/132","comment_is_top":false,"comment_ctime":1585232880,"is_pvip":false,"replies":[{"id":"74382","content":"有时候领域太大，不便于做事件风暴，那我们就先把它分解成子域，然后做事件风暴。限界上下文本质上就是子域，只不过它更多的考虑同一个语义环境，然后完成领域建模。这个语义边界是限界上下文的边界也是微服务的边界。","user_name":"作者回复","user_name_real":"渔","uid":"1316268","ctime":1585263738,"ip_address":"","comment_id":196057,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10175167472","product_id":100037301,"comment_content":"子域内用事件风暴建立领域模型，建模过程中会对聚合进行归类，形成限界上下文边界， 就是先有子域，后有限界上下文。 怎么又说限界上下文是划分领域的重要依据？ 它们是什么关系","like_count":2,"discussions":[{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":489219,"discussion_content":"有时候领域太大，不便于做事件风暴，那我们就先把它分解成子域，然后做事件风暴。限界上下文本质上就是子域，只不过它更多的考虑同一个语义环境，然后完成领域建模。这个语义边界是限界上下文的边界也是微服务的边界。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585263738,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":144672,"user_name":"哲民","can_delete":false,"product_type":"c1","uid":1031059,"ip_address":"","ucode":"CADC8EAB0B641A","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKfkFogCZmVEmm2qRQR6j48TIzicEd4daaRcU4YgibORiaBSYaEPnW8Ke4KibpsU0MsaISZ6UAM1uTbmA/132","comment_is_top":false,"comment_ctime":1571993304,"is_pvip":false,"replies":[{"id":"55770","content":"用visio，一段线一段线连起来的。","user_name":"作者回复","user_name_real":"渔","uid":"1316268","ctime":1572004547,"ip_address":"","comment_id":144672,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10161927896","product_id":100037301,"comment_content":"请问保险模型那个图是用什么工具画的啊","like_count":2,"discussions":[{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":472064,"discussion_content":"用visio，一段线一段线连起来的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1572004547,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":143660,"user_name":"stg609","can_delete":false,"product_type":"c1","uid":1073025,"ip_address":"","ucode":"FB70A75A891BB8","user_header":"https://static001.geekbang.org/account/avatar/00/10/5f/81/1c614f4a.jpg","comment_is_top":false,"comment_ctime":1571753339,"is_pvip":false,"replies":[{"id":"55508","content":"子域的划分是一个业务粗分过程。而限界上下文这个设计过程是一个详细的领域建模和微服务设计过程。<br>如果领域太大，你不方便进行分析和设计。子域划分的主要目的就是为了将领域的问题空间缩小，以方便你下一步进行详细的领域建模和微服务设计，而这个过程是一个非常细致的过程。限界上下文实际上也是一种分析后得出的子域。<br>所以有了这两个阶段。","user_name":"作者回复","user_name_real":"渔","uid":"1316268","ctime":1571794269,"ip_address":"","comment_id":143660,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10161687931","product_id":100037301,"comment_content":"另外文中提到理赔子域包含多个上下文，那为什么不再把理赔子域进一步进行拆分呢？做到子域和上下文一一对应？","like_count":2,"discussions":[{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":471640,"discussion_content":"子域的划分是一个业务粗分过程。而限界上下文这个设计过程是一个详细的领域建模和微服务设计过程。\n如果领域太大，你不方便进行分析和设计。子域划分的主要目的就是为了将领域的问题空间缩小，以方便你下一步进行详细的领域建模和微服务设计，而这个过程是一个非常细致的过程。限界上下文实际上也是一种分析后得出的子域。\n所以有了这两个阶段。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571794269,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":142917,"user_name":"y3","can_delete":false,"product_type":"c1","uid":1128084,"ip_address":"","ucode":"C93F8EC2AAACF6","user_header":"https://static001.geekbang.org/account/avatar/00/11/36/94/5aecb0ef.jpg","comment_is_top":false,"comment_ctime":1571584590,"is_pvip":false,"replies":[{"id":"55205","content":"事件风暴跟头脑风暴类似，项目团队跟领域专家一起，尽可能全面的根据领域事件梳理业务的各种可能，找出产生这些事件的实体，进行聚合，划分限界上下文建立领域模型的过程。后面会有专门一章来讲解如何做事件风暴，请耐心等待。","user_name":"作者回复","user_name_real":"渔","uid":"1316268","ctime":1571608658,"ip_address":"","comment_id":142917,"utype":1}],"discussion_count":2,"race_medal":0,"score":"10161519182","product_id":100037301,"comment_content":"请问欧老师，事件风暴指的是什么？","like_count":2,"discussions":[{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":471324,"discussion_content":"事件风暴跟头脑风暴类似，项目团队跟领域专家一起，尽可能全面的根据领域事件梳理业务的各种可能，找出产生这些事件的实体，进行聚合，划分限界上下文建立领域模型的过程。后面会有专门一章来讲解如何做事件风暴，请耐心等待。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571608658,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1128084,"avatar":"https://static001.geekbang.org/account/avatar/00/11/36/94/5aecb0ef.jpg","nickname":"y3","note":"","ucode":"C93F8EC2AAACF6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":37555,"discussion_content":"好的，谢谢。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571634024,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":142705,"user_name":"。","can_delete":false,"product_type":"c1","uid":1222200,"ip_address":"","ucode":"75B163F01F20F3","user_header":"https://static001.geekbang.org/account/avatar/00/12/a6/38/55483b8c.jpg","comment_is_top":false,"comment_ctime":1571466711,"is_pvip":false,"replies":[{"id":"55135","content":"我在分层架构那一节里有对比和分析，ddd分层架构领域层突出领域模型，应用层负责服务组合和编排。敬请等待。","user_name":"作者回复","user_name_real":"渔","uid":"1316268","ctime":1571471547,"ip_address":"","comment_id":142705,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10161401303","product_id":100037301,"comment_content":"mvc的设计思想也是分层，传统的后台分层是controller、service、dao三层。DDD里是分为四层。具体这两者有什么不同呢？为什么DDD比三层分层要好呢？","like_count":2,"discussions":[{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":471235,"discussion_content":"我在分层架构那一节里有对比和分析，ddd分层架构领域层突出领域模型，应用层负责服务组合和编排。敬请等待。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571471547,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":142411,"user_name":"JSLiuจุ๊บ¹⁸","can_delete":false,"product_type":"c1","uid":1700555,"ip_address":"","ucode":"6E71D97A9F6D6A","user_header":"https://static001.geekbang.org/account/avatar/00/19/f2/cb/bcaa2090.jpg","comment_is_top":false,"comment_ctime":1571364494,"is_pvip":false,"replies":[{"id":"54953","content":"第一个问题，不同行业可能会不一样，依赖于团队和领域专家，什么环境下说什么事情，比如客户主要提客户相关的事情。如果说方法的话，参考一下传统的模块设计方法。不过即使边界初期没划好，如果聚合和代码边界做好了，以后演进起来也是很容易。这个不要担心。<br>第二个问题，阿里对前台、中台和后台的定位是这样的。前台主要面向客户以及终端销售者，实现营销推广以及交易转化。中台主要面向运营人员，完成运营支撑。后台主要面向后台管理人员，实现流程审核、内部管理以及后勤支撑，如采购、人力、财务和OA等系统。<br>","user_name":"作者回复","user_name_real":"渔","uid":"1316268","ctime":1571376437,"ip_address":"","comment_id":142411,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10161299086","product_id":100037301,"comment_content":"现在对概念已经很清楚了，但是在思考你留的思考题的时引发了两个问题需要解决。第一个问题：限界上下文具体该如何划分？有什么方法。 第二个问题：判断一个能力属于前台还是中台有无具体的原则，如果是凭经验，那么不同的人会有不同的主观判断，有没有一种方法可以指导该项工作。","like_count":2,"discussions":[{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":471112,"discussion_content":"第一个问题，不同行业可能会不一样，依赖于团队和领域专家，什么环境下说什么事情，比如客户主要提客户相关的事情。如果说方法的话，参考一下传统的模块设计方法。不过即使边界初期没划好，如果聚合和代码边界做好了，以后演进起来也是很容易。这个不要担心。\n第二个问题，阿里对前台、中台和后台的定位是这样的。前台主要面向客户以及终端销售者，实现营销推广以及交易转化。中台主要面向运营人员，完成运营支撑。后台主要面向后台管理人员，实现流程审核、内部管理以及后勤支撑，如采购、人力、财务和OA等系统。\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571376437,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":262696,"user_name":"Geek_8b147a","can_delete":false,"product_type":"c1","uid":2286165,"ip_address":"","ucode":"D2305C0B6DB5C8","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJGtG01ksyBtp17eSM1Ovic58Zk5QsG4CEBzrCBRw200ByGFJN19uzsib1f294icdp5pTRO6qAQP0ibvw/132","comment_is_top":false,"comment_ctime":1605808264,"is_pvip":false,"replies":[{"id":"96489","content":"“子域”和“限界上下文”在大多数情况下是一对一或者一对多的映射关系。从实践角度，我们可以这样理解，我们不妨将业务领域的分解拆分为两个阶段：从领域到子域的粗粒度的分解和从子域到限界上下文的技术实现级的分解。有时候企业的业务领域非常庞大，不太方便用事件风暴对整个领域构建领域模型。所以在领域建模之前，我们先根据业务流程边界或者功能集合等要素，将庞大的领域分解成若干个大小合适的子域，然后根据子域属性划分为核心子域、通用子域和支撑子域。当领域分解到足够小后，我们就可以在这些子域内开展事件风暴，划分限界上下文完成领域建模。<br>在对不同属性子域构建领域模型时，我们可能会有不同的关注点，比如在通用子域构建领域模型时，我们会更多的关注领域模型的抽象和标准化，以便实现企业级复用，这种设计方法与中台的业务建模方法是一致的。当然，如果你的领域足够小的话，我们就没必要进行从领域到子域的分解和属性归类了，你可以直接开展事件风暴，直接划分限界上下文，完成领域建模。按照这种分解方式，如果子域和限界上下文边界刚好一致，那它们就是一对一的关系，而如果在一个子域内还可以划分为多个限界上下文，那我们最终得到的就是一对多的映射关系。需要注意的是，有些通用子域构建出来的领域模型往往会因为复用的需要，可能会跨多个不同的业务子域。<br>限界上下文本质上就是子域，只不过它会更多的考虑领域对象的语义边界和技术实现细节。限界上下文的划分体现的是一种更为详细的设计过程，这个过程划分了业务的上下文语义边界，完成了领域模型，明确了领域对象以及领域对象之间的依赖关系等。我们依据限界上下文和领域模型就可以完成微服务设计和落地了。<br>","user_name":"作者回复","user_name_real":"欧创新","uid":"1316268","ctime":1606899417,"ip_address":"","comment_id":262696,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5900775560","product_id":100037301,"comment_content":"看到限界上下文这东西是真的理解不了，所以这个名字一定不是个好名字。首先非常认同老师的说法，领域来源于业务，整个业务是一个领域，这个领域很可能过大，无法进行事件风暴。但不是太理解划分子域后子域的边界就是限界上下文的边界，那又为啥要引入限界上下文呢？<br>如果把限界上下文当成是一种划分子域的方法，那就比较好理解了","like_count":1,"discussions":[{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":509931,"discussion_content":"“子域”和“限界上下文”在大多数情况下是一对一或者一对多的映射关系。从实践角度，我们可以这样理解，我们不妨将业务领域的分解拆分为两个阶段：从领域到子域的粗粒度的分解和从子域到限界上下文的技术实现级的分解。有时候企业的业务领域非常庞大，不太方便用事件风暴对整个领域构建领域模型。所以在领域建模之前，我们先根据业务流程边界或者功能集合等要素，将庞大的领域分解成若干个大小合适的子域，然后根据子域属性划分为核心子域、通用子域和支撑子域。当领域分解到足够小后，我们就可以在这些子域内开展事件风暴，划分限界上下文完成领域建模。\n在对不同属性子域构建领域模型时，我们可能会有不同的关注点，比如在通用子域构建领域模型时，我们会更多的关注领域模型的抽象和标准化，以便实现企业级复用，这种设计方法与中台的业务建模方法是一致的。当然，如果你的领域足够小的话，我们就没必要进行从领域到子域的分解和属性归类了，你可以直接开展事件风暴，直接划分限界上下文，完成领域建模。按照这种分解方式，如果子域和限界上下文边界刚好一致，那它们就是一对一的关系，而如果在一个子域内还可以划分为多个限界上下文，那我们最终得到的就是一对多的映射关系。需要注意的是，有些通用子域构建出来的领域模型往往会因为复用的需要，可能会跨多个不同的业务子域。\n限界上下文本质上就是子域，只不过它会更多的考虑领域对象的语义边界和技术实现细节。限界上下文的划分体现的是一种更为详细的设计过程，这个过程划分了业务的上下文语义边界，完成了领域模型，明确了领域对象以及领域对象之间的依赖关系等。我们依据限界上下文和领域模型就可以完成微服务设计和落地了。\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1606899417,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":250779,"user_name":"Geek9338","can_delete":false,"product_type":"c1","uid":2201418,"ip_address":"","ucode":"5573C1198EFA52","user_header":"","comment_is_top":false,"comment_ctime":1601217411,"is_pvip":false,"replies":[{"id":"91774","content":"你这个问题，在我的《中台架构与实现：基于DDD和微服务》（预计10月初出版）中正好有说明。我就直接复制过来了。<br>6.5\t限界上下文与子域的关系<br>学完第 5 章和本章后，有人可能会对子域与限界上下文的关系有些困惑。子域和限界上下文的映射关系到底是什么样的？一对多？或者多对一？还是一对一？<br>其实，在 DDD 中包括问题域和解决方案域两个不同的维度。问题域主要从业务视角来考虑，完成从领域到子域的分解，而解决方案域则主要从技术实现的角度，通过划分限界上下文和采用 DDD 战术设计完成微服务的拆分和落地。“子域”和“限界上下文”这两个概念分别从不同的视角，构建起了 DDD 处理业务复杂度的根基。<br>个人认为“子域”和“限界上下文”在大多数情况下是一对一或者一对多的映射关系。从实践角度可以这样理解，我们不妨将业务领域的分解拆分为两个阶段：从领域到子域的粗粒度的分解和从子域到限界上下文的技术实现级的分解。有时候企业的业务领域非常庞大，不太方便用事件风暴对整个领域构建领域模型。所以在领域建模之前，我们先根据业务流程边界或者功能集合等要素，将庞大的领域分解成若干个大小合适的子域，然后根据子域属性划分为核心子域、通用子域和支撑子域。当领域分解到足够小后，我们就可以在这些子域内开展事件风暴，划分限界上下文完成领域建模了。<br>在对不同属性子域构建领域模型时，我们可能会有不同的关注点，比如在通用子域构建领域模型时，我们会更多关注领域模型的抽象和标准化，以便实现企业级复用，这种设计方法与中台的业务建模思想是一致的。当然，如果你的领域足够小的话，我们就没必要进行从领域到子域的分解和属性归类了，你可以直接开展事件风暴，直接划分限界上下文，完成领域建模。按照这种分解方式，如果子域和限界上下文边界刚好一致，那它们就是一对一的关系，而如果在一个子域内还可以划分为多个限界上下文，那我们最终得到的就是一对多的映射关系。需要注意的是，有些通用子域构建出来的领域模型往往会因为需要复用，可能会跨多个不同的业务子域，组合以后形成企业级能力。<br>限界上下文本质上就是子域，只不过它会更多地考虑领域对象的语义边界和技术实现细节。限界上下文的划分体现的是一种更为详细的设计过程，这个过程划分了业务的上下文语义边界，完成了领域模型，明确了领域对象以及领域对象之间的依赖关系等。至此， 我们依据限界上下文和领域模型就可以完成微服务设计和落地了。<br>","user_name":"作者回复","user_name_real":"欧创新","uid":"1316268","ctime":1601261179,"ip_address":"","comment_id":250779,"utype":1}],"discussion_count":2,"race_medal":0,"score":"5896184707","product_id":100037301,"comment_content":"子域和界限上下文什么关系？为什么我感觉它们是一个概念","like_count":1,"discussions":[{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":506281,"discussion_content":"你这个问题，在我的《中台架构与实现：基于DDD和微服务》（预计10月初出版）中正好有说明。我就直接复制过来了。\n6.5\t限界上下文与子域的关系\n学完第 5 章和本章后，有人可能会对子域与限界上下文的关系有些困惑。子域和限界上下文的映射关系到底是什么样的？一对多？或者多对一？还是一对一？\n其实，在 DDD 中包括问题域和解决方案域两个不同的维度。问题域主要从业务视角来考虑，完成从领域到子域的分解，而解决方案域则主要从技术实现的角度，通过划分限界上下文和采用 DDD 战术设计完成微服务的拆分和落地。“子域”和“限界上下文”这两个概念分别从不同的视角，构建起了 DDD 处理业务复杂度的根基。\n个人认为“子域”和“限界上下文”在大多数情况下是一对一或者一对多的映射关系。从实践角度可以这样理解，我们不妨将业务领域的分解拆分为两个阶段：从领域到子域的粗粒度的分解和从子域到限界上下文的技术实现级的分解。有时候企业的业务领域非常庞大，不太方便用事件风暴对整个领域构建领域模型。所以在领域建模之前，我们先根据业务流程边界或者功能集合等要素，将庞大的领域分解成若干个大小合适的子域，然后根据子域属性划分为核心子域、通用子域和支撑子域。当领域分解到足够小后，我们就可以在这些子域内开展事件风暴，划分限界上下文完成领域建模了。\n在对不同属性子域构建领域模型时，我们可能会有不同的关注点，比如在通用子域构建领域模型时，我们会更多关注领域模型的抽象和标准化，以便实现企业级复用，这种设计方法与中台的业务建模思想是一致的。当然，如果你的领域足够小的话，我们就没必要进行从领域到子域的分解和属性归类了，你可以直接开展事件风暴，直接划分限界上下文，完成领域建模。按照这种分解方式，如果子域和限界上下文边界刚好一致，那它们就是一对一的关系，而如果在一个子域内还可以划分为多个限界上下文，那我们最终得到的就是一对多的映射关系。需要注意的是，有些通用子域构建出来的领域模型往往会因为需要复用，可能会跨多个不同的业务子域，组合以后形成企业级能力。\n限界上下文本质上就是子域，只不过它会更多地考虑领域对象的语义边界和技术实现细节。限界上下文的划分体现的是一种更为详细的设计过程，这个过程划分了业务的上下文语义边界，完成了领域模型，明确了领域对象以及领域对象之间的依赖关系等。至此， 我们依据限界上下文和领域模型就可以完成微服务设计和落地了。\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1601261179,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2201418,"avatar":"","nickname":"Geek9338","note":"","ucode":"5573C1198EFA52","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":309363,"discussion_content":"谢谢老师","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1601270458,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":204685,"user_name":"成章","can_delete":false,"product_type":"c1","uid":1929644,"ip_address":"","ucode":"82D6E87A79A7B0","user_header":"https://static001.geekbang.org/account/avatar/00/1d/71/ac/c87546f5.jpg","comment_is_top":false,"comment_ctime":1586442273,"is_pvip":false,"replies":[{"id":"76556","content":"可以这么理解。","user_name":"作者回复","user_name_real":"渔","uid":"1316268","ctime":1586488273,"ip_address":"","comment_id":204685,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5881409569","product_id":100037301,"comment_content":"老师，我们可以不可以说每个领域或者子域代表着一个问题，而每一个限界上下文，就是问题解决方案模型的范围。<br>还有通用领域的限界上下文侵入到其他领域范围，那么就是通用子域对外提供了部分模型，使得这些领域依赖通用子域。","like_count":1,"discussions":[{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":491250,"discussion_content":"可以这么理解。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1586488273,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":203686,"user_name":"成章","can_delete":false,"product_type":"c1","uid":1929644,"ip_address":"","ucode":"82D6E87A79A7B0","user_header":"https://static001.geekbang.org/account/avatar/00/1d/71/ac/c87546f5.jpg","comment_is_top":false,"comment_ctime":1586254658,"is_pvip":false,"replies":[{"id":"76135","content":"是的。在做完事件风暴划分限界上下文后，还会有一个上下文服务地图的概念，这个过程会梳理上下文服务之间的依赖关系，将一些存在可能循环调用的服务截断。限界上下文服务的依赖你可以理解为微服务与微服务之间的服务调用。","user_name":"作者回复","user_name_real":"渔","uid":"1316268","ctime":1586263031,"ip_address":"","comment_id":203686,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5881221954","product_id":100037301,"comment_content":"我在看网上ddd资料时，看到一些观点说领域是问题域，而限界上下文是解决问题的边界。因此两者的边界有差异的。看到一些图限界上下文扩展到周边领域。<br>还有限界上下文需要画出他们之间的联系。但具体怎么做还是不懂。","like_count":1,"discussions":[{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":490935,"discussion_content":"是的。在做完事件风暴划分限界上下文后，还会有一个上下文服务地图的概念，这个过程会梳理上下文服务之间的依赖关系，将一些存在可能循环调用的服务截断。限界上下文服务的依赖你可以理解为微服务与微服务之间的服务调用。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1586263031,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":202348,"user_name":"成章","can_delete":false,"product_type":"c1","uid":1929644,"ip_address":"","ucode":"82D6E87A79A7B0","user_header":"https://static001.geekbang.org/account/avatar/00/1d/71/ac/c87546f5.jpg","comment_is_top":false,"comment_ctime":1585972332,"is_pvip":false,"replies":[{"id":"75661","content":"这三个边界在理赔域中已经很小了，所以限界上下文的边界已经基本与子子域的边界重叠了。<br>其实你可以这样理解，有时候领域太大，实在不便于开展事件风暴，那我们就先把领域分解成若干个大小合适的子域，然后在这些子域内开展事件风暴，划分限界上下文完成领域建模。<br>限界上下文本质上也是子域，只不过它更多的考虑这些领域对象的语义边界。限界上下文的划分过程体现的是一种详细的设计过程，这个过程划分了业务的语义边界，完成了领域模型，明确了领域对象以及领域对象的依赖等关系。<br>","user_name":"作者回复","user_name_real":"渔","uid":"1316268","ctime":1586004287,"ip_address":"","comment_id":202348,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5880939628","product_id":100037301,"comment_content":"例子中理赔限界上下文中，再拆分除了报案，查勘，定损三个子域。为何这三个子域不能再划三个界限上下文?依据是什么。<br>依然不是很理解拆分限界上下文和拆分子域有什么区别。","like_count":1,"discussions":[{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":490563,"discussion_content":"这三个边界在理赔域中已经很小了，所以限界上下文的边界已经基本与子子域的边界重叠了。\n其实你可以这样理解，有时候领域太大，实在不便于开展事件风暴，那我们就先把领域分解成若干个大小合适的子域，然后在这些子域内开展事件风暴，划分限界上下文完成领域建模。\n限界上下文本质上也是子域，只不过它更多的考虑这些领域对象的语义边界。限界上下文的划分过程体现的是一种详细的设计过程，这个过程划分了业务的语义边界，完成了领域模型，明确了领域对象以及领域对象的依赖等关系。\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1586004287,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":150667,"user_name":"云之子","can_delete":false,"product_type":"c1","uid":1740335,"ip_address":"","ucode":"370C9F804ED073","user_header":"","comment_is_top":false,"comment_ctime":1573579018,"is_pvip":false,"replies":[{"id":"57958","content":"不清楚你说的前台是否包含业务逻辑还是只是前端页面。如果包含了丰富做的业务逻辑，前后台可以分开做领域模型。<br>小系统，如果逻辑不复杂的话，个人不建议过多的拆分微服务。你说的这几个模型块可以形成聚合。以后可根据需要再拆分为微服务。","user_name":"作者回复","user_name_real":"渔","uid":"1316268","ctime":1573607890,"ip_address":"","comment_id":150667,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5868546314","product_id":100037301,"comment_content":"你好，我是否可以理解为领域&gt;=子域&gt;=界限上下文。比如一般一些简单的系统，可能就分为一个前台面对用户，一个后台面对内部的管理后台，那么是不是先把这两个系统分成两个领域，然后去细化里面的实体，将实体进行聚合，确定限界上下文，有可能限界上下文就是领域。<br>如果通过聚合发现要拆分限界上下文，就需要拆分项目。<br><br>另外，比如一个小系统分为账号、公告、厂商管理、厂商信息管理这几块，那么是否可以把他们归为一个限界上下文，还是要把账号、公告、厂商分为3个","like_count":1,"discussions":[{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":474237,"discussion_content":"不清楚你说的前台是否包含业务逻辑还是只是前端页面。如果包含了丰富做的业务逻辑，前后台可以分开做领域模型。\n小系统，如果逻辑不复杂的话，个人不建议过多的拆分微服务。你说的这几个模型块可以形成聚合。以后可根据需要再拆分为微服务。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573607890,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":146731,"user_name":"周孟","can_delete":false,"product_type":"c1","uid":1062026,"ip_address":"","ucode":"2DD1B5199F1BC1","user_header":"https://static001.geekbang.org/account/avatar/00/10/34/8a/08a79d38.jpg","comment_is_top":false,"comment_ctime":1572622996,"is_pvip":false,"replies":[{"id":"56733","content":"在保险领域，保单是一个非常通用的概念。我主要是想强调，在不同的阶段或者领域中，虽然它们承载的信息基本一致，在不同的语境下，但它的术语是不同的，在投保阶段是投保单，批改后是批单。当然在不同的语义环境下关注点也会不同。","user_name":"作者回复","user_name_real":"渔","uid":"1316268","ctime":1572665955,"ip_address":"","comment_id":146731,"utype":1}],"discussion_count":2,"race_medal":0,"score":"5867590292","product_id":100037301,"comment_content":"“投保单、保单、批单、赔案等，这些术语虽然都跟保单有关，但不能将保单这个术语作用在保险全业务领域。”,感觉这句话中说的“不能将保单这个术语作用在保险全业务领域”不太恰当，在保险的很多领域中保单这个术语应该没有太大的变化，只是不同的领域可能关注保单这个术语对应的实体的属性不同，如收付时可能比较关心保费，报案时关注保险起止期","like_count":1,"discussions":[{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":472999,"discussion_content":"在保险领域，保单是一个非常通用的概念。我主要是想强调，在不同的阶段或者领域中，虽然它们承载的信息基本一致，在不同的语境下，但它的术语是不同的，在投保阶段是投保单，批改后是批单。当然在不同的语义环境下关注点也会不同。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1572665955,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1808666,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/99/1a/196ff5f8.jpg","nickname":"长空","note":"","ucode":"EFE7E08491849C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":143413,"discussion_content":"老师的解释还是觉得有一点绕，我觉得这样理解好一些：保单在不同的阶段或领域中的信息基本一致，但不同的语境下叫法不同，在投保阶段是投保单，批改后是批单。并且不同语义环境下关注点也不同。\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579505380,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":142713,"user_name":"TwoPunchMan","can_delete":false,"product_type":"c1","uid":1612810,"ip_address":"","ucode":"D154AB80B9BC98","user_header":"https://static001.geekbang.org/account/avatar/00/18/9c/0a/5b3e5903.jpg","comment_is_top":false,"comment_ctime":1571472503,"is_pvip":false,"replies":[{"id":"55145","content":"好的，下次注意一下。","user_name":"作者回复","user_name_real":"渔","uid":"1316268","ctime":1571473815,"ip_address":"","comment_id":142713,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5866439799","product_id":100037301,"comment_content":"老师讲的很详细,不过建议老师专有名词可以在旁边放入原英文对照, 这样我们要多了解可以直接搜寻国外更多资料","like_count":1,"discussions":[{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":471237,"discussion_content":"好的，下次注意一下。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571473815,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":142304,"user_name":"m5jun","can_delete":false,"product_type":"c1","uid":1237302,"ip_address":"","ucode":"CA51419232644B","user_header":"https://static001.geekbang.org/account/avatar/00/12/e1/36/452106af.jpg","comment_is_top":false,"comment_ctime":1571329650,"is_pvip":false,"replies":[{"id":"54894","content":"用事件风暴建立领域模型后，我们还会进一步分析，确定更细的实体和值对象，以及各层的服务，这些都是领域对象。然后这些领域对象会跟代码模型中的数据实体，服务等代码对象建立映射关系。这个分析过程与传统的研发模式不太一样。","user_name":"作者回复","user_name_real":"渔","uid":"1316268","ctime":1571359981,"ip_address":"","comment_id":142304,"utype":1}],"discussion_count":4,"race_medal":0,"score":"5866296946","product_id":100037301,"comment_content":"文章有个地方说的有问题，领域模型和代码模型肯定不是一一对应的吧？","like_count":1,"discussions":[{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":471069,"discussion_content":"用事件风暴建立领域模型后，我们还会进一步分析，确定更细的实体和值对象，以及各层的服务，这些都是领域对象。然后这些领域对象会跟代码模型中的数据实体，服务等代码对象建立映射关系。这个分析过程与传统的研发模式不太一样。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571359981,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":36331,"discussion_content":"是这样的。我们后面会有一个从领域模型到代码模型的设计过程，实际上就是微服务的设计过程。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571364067,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1104032,"avatar":"https://static001.geekbang.org/account/avatar/00/10/d8/a0/b811f01e.jpg","nickname":"明天再说","note":"","ucode":"027C8669A81BFD","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":36302,"discussion_content":"这里的代码模型应该指的是领域层的代码模型，领域层的代码模型可以参考六边形架构中的定义","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571360823,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1540988,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKZ16iaIia0029oI1Qh5NicibpbTiaBAaCOPYXoLplKHr6uQ2rSVxPZanBvpMcL2NuhwKQYCFnaHP5tedQ/132","nickname":"FIGNT","note":"","ucode":"D9DB185AE9E67C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":36298,"discussion_content":"领域模型是领域专家和设计，开发一起完成的。开发是根据领域模型建模，保证代码模型和领域模型一样，如果不能一样，就要反馈出来，需要更改领域模型。这样就才能保证业务和代码是一致的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571360524,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":355470,"user_name":"giteebravo","can_delete":false,"product_type":"c1","uid":1005290,"ip_address":"四川","ucode":"C087E8D6B5A98B","user_header":"https://static001.geekbang.org/account/avatar/00/0f/56/ea/32608c44.jpg","comment_is_top":false,"comment_ctime":1661409991,"is_pvip":false,"discussion_count":0,"race_medal":1,"score":"1661409991","product_id":100037301,"comment_content":"怎么通过事件风暴来划分限界上下文呢？","like_count":0},{"had_liked":false,"id":355450,"user_name":"giteebravo","can_delete":false,"product_type":"c1","uid":1005290,"ip_address":"四川","ucode":"C087E8D6B5A98B","user_header":"https://static001.geekbang.org/account/avatar/00/0f/56/ea/32608c44.jpg","comment_is_top":false,"comment_ctime":1661397327,"is_pvip":false,"discussion_count":0,"race_medal":1,"score":"1661397327","product_id":100037301,"comment_content":"在理解通用语言的概念时，突然冒出个事件风暴，让人摸不着头脑。<br>至少应该简单介绍一下事件风暴是什么。","like_count":0},{"had_liked":false,"id":351004,"user_name":"剑八","can_delete":false,"product_type":"c1","uid":1297630,"ip_address":"","ucode":"0A09F41DB8A4E7","user_header":"https://static001.geekbang.org/account/avatar/00/13/cc/de/e28c01e1.jpg","comment_is_top":false,"comment_ctime":1657447595,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1657447595","product_id":100037301,"comment_content":"如果是一个新业务，这时候自顶向下分析可能不是很合适，因为本身是不知道分哪几个域的。<br>自底向上用事件风暴得到实体，聚合根等，然后按职责单一形成子域。","like_count":0},{"had_liked":false,"id":351002,"user_name":"剑八","can_delete":false,"product_type":"c1","uid":1297630,"ip_address":"","ucode":"0A09F41DB8A4E7","user_header":"https://static001.geekbang.org/account/avatar/00/13/cc/de/e28c01e1.jpg","comment_is_top":false,"comment_ctime":1657446400,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1657446400","product_id":100037301,"comment_content":"限界上下文是什么：<br>限界上下文就是业务语义的边界。如电商中的支付限界上下文就是。在这个限界上下文中支付收单，支付<br>付款，支付方式，支付渠道等都是具体的支付业务语义。<br>限界上下文与领域的关系：N:1的关系。 领域包含了限界上下文，多个限界上下文可以归入一个领域。如支付包含了支付用户限界上下文，支付核心域（收单与付款），支付收银限界上下文。<br>限界上下文与微服务关系：限界上下文是微服务的划分依据。多个限界上下文可以对应一个微服务，也可以一个限界上下文对应一个微服务，但一个微服务。但不存在一个限界上下文对应多个微服务，因为这样改动一个需求(相同业务边界)就涉及多个微服务改动。<br>","like_count":0},{"had_liked":false,"id":344129,"user_name":"zouqiang","can_delete":false,"product_type":"c1","uid":1221133,"ip_address":"","ucode":"81FA460968D001","user_header":"https://static001.geekbang.org/account/avatar/00/12/a2/0d/f1bb2ba4.jpg","comment_is_top":false,"comment_ctime":1651289165,"is_pvip":false,"discussion_count":0,"race_medal":1,"score":"1651289165","product_id":100037301,"comment_content":"游戏业务中，玩家购买一件装备<br>从概念上来说，装备在商店中是商品，在玩家身上就是武器","like_count":0},{"had_liked":false,"id":342310,"user_name":"陶乐乐","can_delete":false,"product_type":"c1","uid":1943501,"ip_address":"","ucode":"2D4355A7498948","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epb9WYgYQJCMF3XrBbYxnzoXchW2DHfrXHeI2iasiasFdHzJ1XEMjKIN1WdqCgqIQqWU2ibQmYbCic6Gg/132","comment_is_top":false,"comment_ctime":1650184803,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1650184803","product_id":100037301,"comment_content":"限界上下文的作用就是确定业务领域的编辑，为微服务的拆分定义好输入。<br>工作中，以从事的金融行业为例，按照从事的金融活动存贷汇中等业务特定，可以确定用户、账号、营销、存款、贷款、中间等限界上下文","like_count":0},{"had_liked":false,"id":334028,"user_name":"高级按摩师 👁 ^ 👁⃢*","can_delete":false,"product_type":"c1","uid":1435006,"ip_address":"","ucode":"31518306EF81B6","user_header":"https://static001.geekbang.org/account/avatar/00/15/e5/7e/5190f9b2.jpg","comment_is_top":false,"comment_ctime":1644679063,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1644679063","product_id":100037301,"comment_content":"限界上下文可以理解为每一个微服务么","like_count":0},{"had_liked":false,"id":325667,"user_name":"周大仙","can_delete":false,"product_type":"c1","uid":2865215,"ip_address":"","ucode":"4C165FF97D7AF4","user_header":"","comment_is_top":false,"comment_ctime":1639081381,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1639081381","product_id":100037301,"comment_content":"老师，我有个疑问，就是上图来说，<br>付款子域，其实还可以再拆分，比如说拆成支付宝付款、银联付款、微信付款，等。<br>那我应该如何确定拆到哪？","like_count":0},{"had_liked":false,"id":325153,"user_name":"徐李","can_delete":false,"product_type":"c1","uid":1213325,"ip_address":"","ucode":"41550F6CA1E112","user_header":"https://static001.geekbang.org/account/avatar/00/12/83/8d/03cac826.jpg","comment_is_top":false,"comment_ctime":1638844330,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1638844330","product_id":100037301,"comment_content":"子域的范围应该大于等于 边界上下文，很可能一个子域就是一个边界上下文，也有可能一个子域可以划分为多个子子域，然后子子域对应一个边界上下文，我的理解是 边界上下文在形成的前提是：子子域已经划分好了，在这个不能拆分的子域下形成的概念，作为一个边界。<br><br>但我的疑问是：边界上下文的边界 是不是一定就是 某个 子子域的边界？？？","like_count":0},{"had_liked":false,"id":324439,"user_name":"李梵松","can_delete":false,"product_type":"c1","uid":1335291,"ip_address":"","ucode":"D79F33876AE230","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/4RTKnq96jsQoEnUHhBBzVVpib5oNIPHiaLozyKlEH0oLk6D06TNtG6WHWZFiaCaaiac1ojtn5Q4NzZJYfn14vOvd8Q/132","comment_is_top":false,"comment_ctime":1638435356,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1638435356","product_id":100037301,"comment_content":"上下文是一个子领域的边界，限界上下文 就是指的在这个领域内的通用的术语或者名词解释。","like_count":0},{"had_liked":false,"id":323597,"user_name":"Geek_ee3fe8","can_delete":false,"product_type":"c1","uid":2854845,"ip_address":"","ucode":"4FF8A113699909","user_header":"","comment_is_top":false,"comment_ctime":1638012954,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1638012954","product_id":100037301,"comment_content":"可不可以说限界上下文，就是同一个东西在不同领域(环境)所表现的含义不同。","like_count":0},{"had_liked":false,"id":315221,"user_name":"俯瞰风景.","can_delete":false,"product_type":"c1","uid":1044166,"ip_address":"","ucode":"A6DB68B7B84AEE","user_header":"https://static001.geekbang.org/account/avatar/00/0f/ee/c6/bebcbcf0.jpg","comment_is_top":false,"comment_ctime":1633752963,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1633752963","product_id":100037301,"comment_content":"通用语言是为了提高团队沟通和协作效率，定义通用语言的过程也是对领域进行拆分和抽象的过程。<br>每个子域的通用语言都是在界限上下文内明确定义的，在每个子域中的通用语言没有二义性。<br>一个限界上下文理论上可以设计为一个微服务。","like_count":0},{"had_liked":false,"id":311479,"user_name":"吴江","can_delete":false,"product_type":"c1","uid":2515308,"ip_address":"","ucode":"32B46E616AA5C7","user_header":"","comment_is_top":false,"comment_ctime":1631250728,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1631250728","product_id":100037301,"comment_content":"老师，对于如何找出界限上下午还是很模糊,文章举的例子是车险，那车险它包括了客户投保，客户理赔这几个核心的业务流程,之后投保就确定为一个界限上下文了，这个依据是什么呢？一个业务流程的动作就是一个界限上下午吗？还有一个问题就是这些流程大多数都是跟客户相关的，用户这个聚合应该在哪个界限上下文中，或者还有一个客户的界限上下文？","like_count":0},{"had_liked":false,"id":308405,"user_name":"花生","can_delete":false,"product_type":"c1","uid":1266634,"ip_address":"","ucode":"5397C08BD51DD4","user_header":"https://static001.geekbang.org/account/avatar/00/13/53/ca/44088dd0.jpg","comment_is_top":false,"comment_ctime":1629604526,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1629604526","product_id":100037301,"comment_content":"老师，您好，我以大宗商贸领域举例。领域有子领域，合同，点价，结算，出入库，收付款。点价有，子子领域前点价，后点价。子子域可以作为一个限界上下文","like_count":0},{"had_liked":false,"id":308342,"user_name":"剑八","can_delete":false,"product_type":"c1","uid":1297630,"ip_address":"","ucode":"0A09F41DB8A4E7","user_header":"https://static001.geekbang.org/account/avatar/00/13/cc/de/e28c01e1.jpg","comment_is_top":false,"comment_ctime":1629546737,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1629546737","product_id":100037301,"comment_content":"资金域：<br>通用语言：支付，支付退款，结算，抽佣<br>限界上下文：支付子域，赔付子域，结算子域<br>聚合：支付，赔付，结算，对应聚合根分别为：支付单，赔付单，结算单","like_count":0},{"had_liked":false,"id":306038,"user_name":"warrior","can_delete":false,"product_type":"c1","uid":1341216,"ip_address":"","ucode":"A0C7BEF5B3DC89","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTK7CENSOKQLib0HGXV6KoY8NVD8vk9YdicdTwpJjJTucBkVCHKibhMepOFLxOnuNPhSkxrzd264gw9Jw/132","comment_is_top":false,"comment_ctime":1628313654,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1628313654","product_id":100037301,"comment_content":"感觉上bounded-context 与situation的含义更贴近, 比如您举例的“投保&gt;缴费&gt;保单管理&gt;理赔”.<br>但是到subdomain时, 又和scenario更贴近, 比如您举例的“收款||付款”.<br>能帮我厘清BC和这2单词的区别吗?<br>situation(形势, 局面)<br>scenario(情节, 剧情脚本)","like_count":0},{"had_liked":false,"id":305893,"user_name":"抬头看路","can_delete":false,"product_type":"c1","uid":1198663,"ip_address":"","ucode":"E031E55167B065","user_header":"https://static001.geekbang.org/account/avatar/00/12/4a/47/2b22271a.jpg","comment_is_top":false,"comment_ctime":1628219705,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1628219705","product_id":100037301,"comment_content":"限界上下文  的确理解起来有些难度<br>可以不可以简单理解为我们把业务的所有流程和名词都拆分出来，看各个流程是由哪些名词通过哪些动作关联的，那这个名词和动作都可以成为限界上下文，或者更简单的理解为就是所有场景流程的拆分，比如用户角度来看从导购、收单、预订、支付、履约、退货以及其他所有核心流程及非核心流程全部列入表格中，再把每个流程拆分，比如收单要从拿商品-拿用户-拿促销-拿价格-拿库存等等，这样来全部打碎，再把所有流程中相同的部分聚合起来，形成了域","like_count":0},{"had_liked":false,"id":305471,"user_name":"小菜鸟","can_delete":false,"product_type":"c1","uid":1114659,"ip_address":"","ucode":"16E75180BEFD4B","user_header":"https://static001.geekbang.org/account/avatar/00/11/02/23/bd476313.jpg","comment_is_top":false,"comment_ctime":1627984605,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1627984605","product_id":100037301,"comment_content":"老师，您好：<br>我有个问题，我感觉这章节和上一章节中提到的领域和子领域，都是有用到上下文边界这个概念吧。比如，我们确认了我们要研究的是车险行业，保险行业就是一个领域，我们根据一些边界（这里是不是可以认为就是上下文边界？）将其拆分为投保、缴费、出单这些子领域","like_count":0},{"had_liked":false,"id":305029,"user_name":"勿更改任何信息","can_delete":false,"product_type":"c1","uid":2028955,"ip_address":"","ucode":"B4949BEB8B2AFD","user_header":"","comment_is_top":false,"comment_ctime":1627784428,"is_pvip":false,"discussion_count":0,"race_medal":1,"score":"1627784428","product_id":100037301,"comment_content":"表格中，为什么创建组织信息等创建动作是领域对象呢","like_count":0},{"had_liked":false,"id":304016,"user_name":"xxx","can_delete":false,"product_type":"c1","uid":1096652,"ip_address":"","ucode":"E79CEA70430449","user_header":"https://static001.geekbang.org/account/avatar/00/10/bb/cc/fac12364.jpg","comment_is_top":false,"comment_ctime":1627183954,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1627183954","product_id":100037301,"comment_content":"如同我在上一节的留言所说的，bounded context对应OOD就是包，对应过程式设计就是模块。","like_count":0},{"had_liked":false,"id":300733,"user_name":"何磊","can_delete":false,"product_type":"c1","uid":1047604,"ip_address":"","ucode":"78934C3ED4A342","user_header":"https://static001.geekbang.org/account/avatar/00/0f/fc/34/c733b116.jpg","comment_is_top":false,"comment_ctime":1625362375,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1625362375","product_id":100037301,"comment_content":"我觉得这里边拆分重要的一点是拆分标准，是按照事情的流程，还是包含的内容这一点挺难选择的","like_count":0},{"had_liked":false,"id":296381,"user_name":"赵云","can_delete":false,"product_type":"c1","uid":1376233,"ip_address":"","ucode":"FBECC7A2F4F70F","user_header":"https://static001.geekbang.org/account/avatar/00/14/ff/e9/daebe1ea.jpg","comment_is_top":false,"comment_ctime":1622948908,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1622948908","product_id":100037301,"comment_content":"看了那个图表，有个疑问，仓储的接口不在领域层吗？ 然后基础设施层去实现？","like_count":0},{"had_liked":false,"id":293709,"user_name":"当你的世界里有风吹过","can_delete":false,"product_type":"c1","uid":2051946,"ip_address":"","ucode":"42712891366309","user_header":"https://static001.geekbang.org/account/avatar/00/1f/4f/6a/0a6b437e.jpg","comment_is_top":false,"comment_ctime":1621501246,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1621501246","product_id":100037301,"comment_content":"个人对限界上下文的理解： 对某个业务领域要解决的问题的边界描述和使用场景描述，而领域这里 不分大小，不论领域还是子域都有自己的边界和使用场景；对于领域到子域划分的过程，相当于是模块的划分，这取决领域专家和是设计人员对领域的认知程度，然后在要解决的问题域中，定义通用语言。","like_count":0},{"had_liked":false,"id":292324,"user_name":"Peter Yu","can_delete":false,"product_type":"c1","uid":1077598,"ip_address":"","ucode":"D56786A6E85321","user_header":"https://static001.geekbang.org/account/avatar/00/10/71/5e/5393a76d.jpg","comment_is_top":false,"comment_ctime":1620783585,"is_pvip":true,"replies":[{"id":"105992","content":"可以这么理解，他们分别属于问题空间和解决方案空间，本质上限界上下文就是某一个子域。","user_name":"作者回复","user_name_real":"欧创新","uid":"1316268","ctime":1620971881,"ip_address":"","comment_id":292324,"utype":1}],"discussion_count":2,"race_medal":4,"score":"1620783585","product_id":100037301,"comment_content":"老师，我现在是二刷这个课题了，对于领域、子域、界限上下文的关系还不是很明确。我的理解是：界限上下文是领域、子域的另外一个称呼，不知这样理解是否有问题","like_count":0,"discussions":[{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":519776,"discussion_content":"可以这么理解，他们分别属于问题空间和解决方案空间，本质上限界上下文就是某一个子域。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1620971881,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1077598,"avatar":"https://static001.geekbang.org/account/avatar/00/10/71/5e/5393a76d.jpg","nickname":"Peter Yu","note":"","ucode":"D56786A6E85321","race_medal":4,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":376309,"discussion_content":"谢谢老师解答！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1622078168,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":291709,"user_name":"黎明","can_delete":false,"product_type":"c1","uid":1193769,"ip_address":"","ucode":"3B57564F844EA5","user_header":"https://static001.geekbang.org/account/avatar/00/12/37/29/6f79782e.jpg","comment_is_top":false,"comment_ctime":1620443585,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1620443585","product_id":100037301,"comment_content":"从cqrs来说, 命令是增删改，通用语言的动词中的命令作何理解","like_count":0},{"had_liked":false,"id":287355,"user_name":"吴小智","can_delete":false,"product_type":"c1","uid":1310798,"ip_address":"","ucode":"C7C9F58B5C9F7B","user_header":"https://static001.geekbang.org/account/avatar/00/14/00/4e/be2b206b.jpg","comment_is_top":false,"comment_ctime":1617896951,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1617896951","product_id":100037301,"comment_content":"总的一句话，还是得熟悉业务","like_count":0},{"had_liked":false,"id":283972,"user_name":"乘风破浪","can_delete":false,"product_type":"c1","uid":1507910,"ip_address":"","ucode":"C1118744BBF1D6","user_header":"https://static001.geekbang.org/account/avatar/00/17/02/46/da72eb49.jpg","comment_is_top":false,"comment_ctime":1616025621,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1616025621","product_id":100037301,"comment_content":"请问下，领域模型、领域对象、业务对象是什么？有什么关系？ddd概念多，分不清了","like_count":0},{"had_liked":false,"id":282972,"user_name":"n的n次方","can_delete":false,"product_type":"c1","uid":2054237,"ip_address":"","ucode":"4053B5444222FC","user_header":"https://static001.geekbang.org/account/avatar/00/1f/58/5d/bb5f1ec5.jpg","comment_is_top":false,"comment_ctime":1615479796,"is_pvip":false,"discussion_count":0,"race_medal":1,"score":"1615479796","product_id":100037301,"comment_content":"老师我也想问个问题，就是我们做增长业务会有针对用户的多种活动玩法，我们怎样界定上下文呢？","like_count":0},{"had_liked":false,"id":280245,"user_name":"Geek_8dfa3e","can_delete":false,"product_type":"c1","uid":1890274,"ip_address":"","ucode":"3FD32328C8EE35","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epy83Wich4cvDNzsfPNe9iaiaDqE7apkM5OPL3Mj2HVicibQNteosS9uxHbQwWfBLKibibe9Aibzx41TIDqLA/132","comment_is_top":false,"comment_ctime":1614141600,"is_pvip":false,"replies":[{"id":"101824","content":"限界上下文是有它的语义边界的，也就是说业务语义的边界，比如，同一个物品在不同的阶段会有不同的语义，销售阶段是商品、而在运输阶段则是货物，这些业务语义边界其实就是限界上下文边界。<br>事件风暴过程中我们会构建出多个聚合，然后根据业务语义边界来划分限界上下文边界，将在同一个语义边界内的聚合放在同一个限界上下文内，这样就不会产生二义性，职责也会单一。确定了限界上下文边界后，也就确定了微服务的边界。如何在代码层面建立与限界上下文的映射？在后面的章节会有介绍，请继续阅读。","user_name":"作者回复","user_name_real":"欧创新","uid":"1316268","ctime":1614236562,"ip_address":"","comment_id":280245,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1614141600","product_id":100037301,"comment_content":"我看网上很说书籍在说：限界上下文不应该是通过“聚合分组法”进行分组得出，那么如何不采用“聚合分组法”的话，我们应该如何正确划分限界上下文呢？第二个问题，划分限界上下文后，在代码层面是如何和限界上下文对应的？","like_count":0,"discussions":[{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":516034,"discussion_content":"限界上下文是有它的语义边界的，也就是说业务语义的边界，比如，同一个物品在不同的阶段会有不同的语义，销售阶段是商品、而在运输阶段则是货物，这些业务语义边界其实就是限界上下文边界。\n事件风暴过程中我们会构建出多个聚合，然后根据业务语义边界来划分限界上下文边界，将在同一个语义边界内的聚合放在同一个限界上下文内，这样就不会产生二义性，职责也会单一。确定了限界上下文边界后，也就确定了微服务的边界。如何在代码层面建立与限界上下文的映射？在后面的章节会有介绍，请继续阅读。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1614236562,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":276440,"user_name":"CHEN川","can_delete":false,"product_type":"c1","uid":1001694,"ip_address":"","ucode":"4B4D11141A68B9","user_header":"https://static001.geekbang.org/account/avatar/00/0f/48/de/d9a88304.jpg","comment_is_top":false,"comment_ctime":1611925001,"is_pvip":false,"replies":[{"id":"101040","content":"理解很透彻。其实所谓子域或限界上下文的大小都是相对的，在设计时要根据具体的业务场景和技术能力灵活把握。","user_name":"作者回复","user_name_real":"欧创新","uid":"1316268","ctime":1612852676,"ip_address":"","comment_id":276440,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1611925001","product_id":100037301,"comment_content":"我们觉得子域的概念很好理解，是因为可以很容易地从已有的认知迁移过来，比如子模块，子功能等，但仔细想想这个“子”又是一个很模糊的概念，“子”的范围是多大？有没有标准？其实是没有的，往往都是依靠个人或团队的经验，但这些经验运用到不同的业务产生的效果却有好有坏。<br><br>而限界上下文则将“子”的概念给具象了，我们可以清楚明晰的了解：哪些业务，哪些功能在“子”的范围内，哪些又不在。而这个边界不是某个人或某几个人的经验，而是领域专家、架构师、开发人员一起沟通讨论出来的。<br><br>最后总结，限界上下文其实就是这个“子”的具体定义，并且DDD也提供了相应的方法来帮助你找到这个定义。","like_count":0,"discussions":[{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":514701,"discussion_content":"理解很透彻。其实所谓子域或限界上下文的大小都是相对的，在设计时要根据具体的业务场景和技术能力灵活把握。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1612852676,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":273012,"user_name":"黄秀萍","can_delete":false,"product_type":"c1","uid":2060315,"ip_address":"","ucode":"D11A9AB0768A14","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLmxBGkh4RfIQt0icfcsCqibtic5UocGvpcBcTLcU8UUoDTXlHINJm5icoKF17nuA3pzvMibVibqgAV5m3g/132","comment_is_top":false,"comment_ctime":1610412815,"is_pvip":false,"replies":[{"id":"99164","content":"可能需要澄清一下哈。一般狭义上的领域对象主要是指实体或者值对象。在excel表格了里面会记录事件风暴过程中的很多对象，其中包括命令、事件、实体或值对象等，命令可能对应领域层的领域服务，在这个表格中没有做出严格区分，可以认为是一种广义上的领域层的领域对象。","user_name":"作者回复","user_name_real":"欧创新","uid":"1316268","ctime":1610693268,"ip_address":"","comment_id":273012,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1610412815","product_id":100037301,"comment_content":"老师，动作指令也是领域对象吗？我看Excel中很多领域服务也算领域对象名称，这个有点矛盾呢？领域对象的定义是什么啊？","like_count":0,"discussions":[{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":513458,"discussion_content":"可能需要澄清一下哈。一般狭义上的领域对象主要是指实体或者值对象。在excel表格了里面会记录事件风暴过程中的很多对象，其中包括命令、事件、实体或值对象等，命令可能对应领域层的领域服务，在这个表格中没有做出严格区分，可以认为是一种广义上的领域层的领域对象。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1610693268,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":260869,"user_name":"Scott","can_delete":false,"product_type":"c1","uid":1214008,"ip_address":"","ucode":"7C5ACEEE8A84FB","user_header":"https://static001.geekbang.org/account/avatar/00/12/86/38/77d04aa8.jpg","comment_is_top":false,"comment_ctime":1605146287,"is_pvip":false,"replies":[{"id":"94744","content":"这些实体的生命周期（CRUD）在它自己的聚合管理，而在其他的聚合，它是以值对象的形式存在的。由于值对象只可整体替换，这样设计可以保证实体数据的修改都只在一个地方完成，保证业务职责单一性，也可以保证数据的一致性。","user_name":"作者回复","user_name_real":"欧创新","uid":"1316268","ctime":1605160544,"ip_address":"","comment_id":260869,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1605146287","product_id":100037301,"comment_content":"请教个问题，有一些实体可能在各个域都会用到，比如地区这个实体(包含省市县)，会在 accounts 的上下文用到，也会在商品目录，销售，等等各个域用到，那么像这类实体，你们一般会放到哪个context,命名成啥呢？","like_count":0,"discussions":[{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":509311,"discussion_content":"这些实体的生命周期（CRUD）在它自己的聚合管理，而在其他的聚合，它是以值对象的形式存在的。由于值对象只可整体替换，这样设计可以保证实体数据的修改都只在一个地方完成，保证业务职责单一性，也可以保证数据的一致性。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1605160544,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":255446,"user_name":"这是谁 辣么帅","can_delete":false,"product_type":"c1","uid":1329293,"ip_address":"","ucode":"DD30830BAD20A6","user_header":"https://static001.geekbang.org/account/avatar/00/14/48/8d/7764c5c2.jpg","comment_is_top":false,"comment_ctime":1603346801,"is_pvip":false,"replies":[{"id":"93180","content":"是的，通用语言是从业务分析到开发，甚至到运维，全生命周期贯通的。所以在项目早期领域建模时应该尽量让更多的团队成员参与进来，这样有利于团队建立通用语言。","user_name":"作者回复","user_name_real":"欧创新","uid":"1316268","ctime":1603435017,"ip_address":"","comment_id":255446,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1603346801","product_id":100037301,"comment_content":"通用语言确实很重要，团队内部在沟通一个事情的时候很多人喜欢自己乱加定义，我经常呼吁大家同样一个事情统一口径不要乱加名称，这实际上就是通用语言哈，我们只能管自己团队内部如何称呼，和其他团队人聊没办法约束，所以这里的上下文界限只能看做是团队内部了... 由此可见DDD思想不仅可用在开发领域，其他领域也会提高效率","like_count":0,"discussions":[{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":507717,"discussion_content":"是的，通用语言是从业务分析到开发，甚至到运维，全生命周期贯通的。所以在项目早期领域建模时应该尽量让更多的团队成员参与进来，这样有利于团队建立通用语言。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1603435017,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":247421,"user_name":"沈","can_delete":false,"product_type":"c1","uid":2168079,"ip_address":"","ucode":"53B56F4384D90E","user_header":"https://static001.geekbang.org/account/avatar/00/21/15/0f/4e1a9d92.jpg","comment_is_top":false,"comment_ctime":1599705052,"is_pvip":false,"replies":[{"id":"90938","content":"在你的上一个问题回复中，不知道是否已解决你的问题没有。","user_name":"作者回复","user_name_real":"欧创新","uid":"1316268","ctime":1599791943,"ip_address":"","comment_id":247421,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1599705052","product_id":100037301,"comment_content":"老师，领域依赖了基础层，而基础层的仓储实现又要实现领域的仓储接口，这个要怎么实现呢？java中四层，我分四个模块开发，会产生循环依赖的问题，该怎么解决呢？","like_count":0,"discussions":[{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":505395,"discussion_content":"在你的上一个问题回复中，不知道是否已解决你的问题没有。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1599791943,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":205194,"user_name":"歸壹","can_delete":false,"product_type":"c1","uid":1942291,"ip_address":"","ucode":"BAA38DB80A75DA","user_header":"https://static001.geekbang.org/account/avatar/00/1d/a3/13/0f4f6f3d.jpg","comment_is_top":false,"comment_ctime":1586569081,"is_pvip":false,"replies":[{"id":"77314","content":"领域划分的方法比较多，在领域建模时一般会采用事件风暴方法，找出领域对象，聚合根、聚合等，然后根据上下文业务语义边界来划分限界上下文，限界上下文是一种特殊的边界，限界上下文里面会包含若干个聚合，一个限界上下文可以构建一个领域模型，一个领域模型可以设计出一个微服务。","user_name":"作者回复","user_name_real":"渔","uid":"1316268","ctime":1587002982,"ip_address":"","comment_id":205194,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1586569081","product_id":100037301,"comment_content":"限界上下文是领域划分的方法吗?<br>限界上下文根据里面的通用语言，业务相关度，复杂度去划分边界?","like_count":0,"discussions":[{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":491418,"discussion_content":"领域划分的方法比较多，在领域建模时一般会采用事件风暴方法，找出领域对象，聚合根、聚合等，然后根据上下文业务语义边界来划分限界上下文，限界上下文是一种特殊的边界，限界上下文里面会包含若干个聚合，一个限界上下文可以构建一个领域模型，一个领域模型可以设计出一个微服务。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1587002982,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":196508,"user_name":"大大。","can_delete":false,"product_type":"c1","uid":1237399,"ip_address":"","ucode":"A6716E46264AC4","user_header":"https://static001.geekbang.org/account/avatar/00/12/e1/97/fec494f2.jpg","comment_is_top":false,"comment_ctime":1585287760,"is_pvip":false,"replies":[{"id":"74430","content":"保险业务很复杂，范围大，流程长。这些例子没有将全部子域列出来。当然，用户这个通用域在保险中是必不可少的，后面的文章里有分析。","user_name":"作者回复","user_name_real":"渔","uid":"1316268","ctime":1585291162,"ip_address":"","comment_id":196508,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1585287760","product_id":100037301,"comment_content":"那保险业务里面涉及的用户在这个里面为什么没有体现，难道它是另外一个用户的领域？","like_count":0,"discussions":[{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":489319,"discussion_content":"保险业务很复杂，范围大，流程长。这些例子没有将全部子域列出来。当然，用户这个通用域在保险中是必不可少的，后面的文章里有分析。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585291162,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":195594,"user_name":"秋雨","can_delete":false,"product_type":"c1","uid":1111398,"ip_address":"","ucode":"2F7333B3E3602D","user_header":"","comment_is_top":false,"comment_ctime":1585201730,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1585201730","product_id":100037301,"comment_content":"老师好，关于我刚才问的查询算什么的问题，我在后边的文章里看到了。<br>是一个领域服务。 打扰了。<br>","like_count":0},{"had_liked":false,"id":195592,"user_name":"秋雨","can_delete":false,"product_type":"c1","uid":1111398,"ip_address":"","ucode":"2F7333B3E3602D","user_header":"","comment_is_top":false,"comment_ctime":1585201392,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1585201392","product_id":100037301,"comment_content":"老师你好，信息的获取，在领域类型里应该算什么？动作、事件？还是都不算，也不用列？<br>","like_count":0},{"had_liked":false,"id":193271,"user_name":"haijian.yang","can_delete":false,"product_type":"c1","uid":1162081,"ip_address":"","ucode":"E3D13ABA2CA347","user_header":"https://static001.geekbang.org/account/avatar/00/11/bb/61/2c2f5024.jpg","comment_is_top":false,"comment_ctime":1584887856,"is_pvip":false,"replies":[{"id":"73723","content":"限界上下文可以作为微服务边界设计的参考依据。它是一种特殊的子域，是业务领域的边界。你可以了解一下后面的案例设计，加深理解。","user_name":"作者回复","user_name_real":"渔","uid":"1316268","ctime":1584929612,"ip_address":"","comment_id":193271,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1584887856","product_id":100037301,"comment_content":"好像没有把界限上下文讲明白，怎么用。","like_count":0,"discussions":[{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":488528,"discussion_content":"限界上下文可以作为微服务边界设计的参考依据。它是一种特殊的子域，是业务领域的边界。你可以了解一下后面的案例设计，加深理解。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584929612,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":191468,"user_name":"何磊","can_delete":false,"product_type":"c1","uid":1047604,"ip_address":"","ucode":"78934C3ED4A342","user_header":"https://static001.geekbang.org/account/avatar/00/0f/fc/34/c733b116.jpg","comment_is_top":false,"comment_ctime":1584776311,"is_pvip":false,"replies":[{"id":"73378","content":"度的控制需要看你能不能在这个领域内很舒适的建模。其实初期不建议你把领域拆分的过细，也就是说不建议拆分太多的微服务，如果你是按照DDD方法设计的微服务的话，以后想拆分是很容易的事情，也就是聚合之间的代码来回复制的事情罢了。你说的复杂查询，尤其是跨聚合或者微服务的查询，这种查询没有领域模型的概念，你可以沿用传统的联表查询方式，或者采用CQRS的方式，也就是读写分离的方式。","user_name":"作者回复","user_name_real":"渔","uid":"1316268","ctime":1584778066,"ip_address":"","comment_id":191468,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1584776311","product_id":100037301,"comment_content":"很期待后面这个域要划分到多细的一个度怎么去控制。目前团队分析常常遇到的问题是，一个事情到底属于哪个域？这个域还要不要继续拆分？<br>比如：支付，我可以分为：付款、退款、查询的域；但是查询其实又包括了付款的查询、退款的查询。那么查询的域到底是要还是不要呢？期待后续有答案！<br>","like_count":0,"discussions":[{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":488182,"discussion_content":"度的控制需要看你能不能在这个领域内很舒适的建模。其实初期不建议你把领域拆分的过细，也就是说不建议拆分太多的微服务，如果你是按照DDD方法设计的微服务的话，以后想拆分是很容易的事情，也就是聚合之间的代码来回复制的事情罢了。你说的复杂查询，尤其是跨聚合或者微服务的查询，这种查询没有领域模型的概念，你可以沿用传统的联表查询方式，或者采用CQRS的方式，也就是读写分离的方式。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584778066,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1047604,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/fc/34/c733b116.jpg","nickname":"何磊","note":"","ucode":"78934C3ED4A342","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":210816,"discussion_content":"感谢老师，刚刚看到第四篇。我想我这里应该是把行为当成领域在思考了。退款、查询这些是支付领域的一个行为","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584778649,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":190654,"user_name":"phil","can_delete":false,"product_type":"c1","uid":1050133,"ip_address":"","ucode":"9465C8569C0D36","user_header":"https://static001.geekbang.org/account/avatar/00/10/06/15/702f3294.jpg","comment_is_top":false,"comment_ctime":1584677712,"is_pvip":false,"replies":[{"id":"73296","content":"你这种场景正好适合通过事件风暴来梳理业务的领域模型，然后根据领域模型来设计微服务。建议你看一下第12节内容。","user_name":"作者回复","user_name_real":"渔","uid":"1316268","ctime":1584689380,"ip_address":"","comment_id":190654,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1584677712","product_id":100037301,"comment_content":"我遇到公司的问题，我处于一个业务探索的项目中，主要是做营销技术的，大家对这个产品的认识比较模糊，我的问题是：在项目前期，需求不是很明确的情况，如何做好微服务设计？","like_count":0,"discussions":[{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":488027,"discussion_content":"你这种场景正好适合通过事件风暴来梳理业务的领域模型，然后根据领域模型来设计微服务。建议你看一下第12节内容。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584689380,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":186309,"user_name":"狼行天下","can_delete":false,"product_type":"c1","uid":1053161,"ip_address":"","ucode":"A3F22B276B88B1","user_header":"https://static001.geekbang.org/account/avatar/00/10/11/e9/13f28df2.jpg","comment_is_top":false,"comment_ctime":1583823527,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1583823527","product_id":100037301,"comment_content":"欧老师你好，我们系统中，把商品系统拆分出来了，想把它用ddd的分层方式重新一遍，阅读了几遍文章，还是有些拉捏不准，商品我分析了一下，主要有商品基本信息管理，扩展信息管理（不同类别的商品扩展属性不一样），商品分类管理，商品价格管理（根据不同客户价格不一样），我用excel做了一个表格，找到了一个领域对象，主要是增、删、改、查的逻辑，老师能帮我列举出更多的领域对象和他们的依赖关系吗","like_count":0},{"had_liked":false,"id":185394,"user_name":"InfoQ_198d861f578d","can_delete":false,"product_type":"c1","uid":1624862,"ip_address":"","ucode":"91DC95AA79DB82","user_header":"","comment_is_top":false,"comment_ctime":1583573433,"is_pvip":false,"replies":[{"id":"71811","content":"我个人认为限界上下文也是子域的一种，只不过限界上下文限定了语义边界，基于它可以来构建领域模型。域本身就有边界的概念的，子域也有边界的概念，这里就是一个度的问题，到底是要分粗一点还是分细一点。","user_name":"作者回复","user_name_real":"渔","uid":"1316268","ctime":1583719387,"ip_address":"","comment_id":185394,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1583573433","product_id":100037301,"comment_content":"老师，是否可以理解限界上下文和域的概念：<br><br>用域或子域来分解业务大小，用限界上下文来定义域的大小，即定义边界；因为子域里面，可能存在子子域，但是因为不适合再划分子子域，所以用限界上下界定？","like_count":0,"discussions":[{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":486349,"discussion_content":"我个人认为限界上下文也是子域的一种，只不过限界上下文限定了语义边界，基于它可以来构建领域模型。域本身就有边界的概念的，子域也有边界的概念，这里就是一个度的问题，到底是要分粗一点还是分细一点。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1583719387,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":181190,"user_name":"Sonny721","can_delete":false,"product_type":"c1","uid":1104291,"ip_address":"","ucode":"C95DD306BFBE54","user_header":"https://static001.geekbang.org/account/avatar/00/10/d9/a3/2856b5b5.jpg","comment_is_top":false,"comment_ctime":1582515283,"is_pvip":false,"replies":[{"id":"70380","content":"请看第18节和加餐。这是一个完整的案例介绍，从领域建模到微服务设计，再到完整的代码。","user_name":"作者回复","user_name_real":"渔","uid":"1316268","ctime":1582621128,"ip_address":"","comment_id":181190,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1582515283","product_id":100037301,"comment_content":"看两几讲，理论居多，个别名词难以理解。最好从开头可以贯穿一个案例，那怕是最简单的一个案例，可以贯穿整个DDD的分析过程以及实战到代码结结构，这样对于所有人理解起来会更加容易。看了老师给比人的评论也是同样的问题，依旧是用各种名词回复学员，学员还是无法理解。","like_count":0,"discussions":[{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":484951,"discussion_content":"请看第18节和加餐。这是一个完整的案例介绍，从领域建模到微服务设计，再到完整的代码。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582621128,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":179908,"user_name":"刘强","can_delete":false,"product_type":"c1","uid":1816623,"ip_address":"","ucode":"3640B6AAD21D23","user_header":"https://static001.geekbang.org/account/avatar/00/1b/b8/2f/5b039bef.jpg","comment_is_top":false,"comment_ctime":1582120528,"is_pvip":false,"replies":[{"id":"69877","content":"是的。","user_name":"作者回复","user_name_real":"渔","uid":"1316268","ctime":1582161360,"ip_address":"","comment_id":179908,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1582120528","product_id":100037301,"comment_content":"1.限定上下文规定了通用语言交流的环境，一种语言在不同上下文中表达的意思是不一样的。同样是进三个球，足球和篮球没有可比性。<br>2.限定上下文可以作为微服务拆分的依据，上，下就代表了边界。比如用户权限管理和站点管理可以作为不同的上下文拆分微服务。<br><br>我们公司是做产品全寿命周期管理的，里面描述了分解结构，要看是在产品里的分解结构，还是服务上的分解结构。","like_count":0,"discussions":[{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":484445,"discussion_content":"是的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582161360,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":178874,"user_name":"Willie","can_delete":false,"product_type":"c1","uid":1819663,"ip_address":"","ucode":"BB86802EB8BD7D","user_header":"https://static001.geekbang.org/account/avatar/00/1b/c4/0f/518fde5d.jpg","comment_is_top":false,"comment_ctime":1581843888,"is_pvip":false,"replies":[{"id":"69824","content":"它们是承保业务的子流程，但是在领域建模的时候还会有不同的子领域，有些子领域可能属于通用子域，比如缴费。所以虽然它属于这个流程，但并不一定会归到承保里面去。","user_name":"作者回复","user_name_real":"渔","uid":"1316268","ctime":1582112669,"ip_address":"","comment_id":178874,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1581843888","product_id":100037301,"comment_content":"文中：限界上下文与微服务的关系 ：车险承保的流程包含了投保、缴费、出单等几个主要流程<br>为啥下面的保险领域模型图中不是承报 子域，然后投保、缴费、出单 限界上下文？？？","like_count":0,"discussions":[{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":484004,"discussion_content":"它们是承保业务的子流程，但是在领域建模的时候还会有不同的子领域，有些子领域可能属于通用子域，比如缴费。所以虽然它属于这个流程，但并不一定会归到承保里面去。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582112669,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":175118,"user_name":"微笑","can_delete":false,"product_type":"c1","uid":1685222,"ip_address":"","ucode":"C5EE55E23D2C57","user_header":"https://static001.geekbang.org/account/avatar/00/19/b6/e6/db12908c.jpg","comment_is_top":false,"comment_ctime":1580562449,"is_pvip":false,"replies":[{"id":"68009","content":"是的","user_name":"作者回复","user_name_real":"渔","uid":"1316268","ctime":1580566415,"ip_address":"","comment_id":175118,"utype":1}],"discussion_count":1,"race_medal":1,"score":"1580562449","product_id":100037301,"comment_content":"老师你好，领域和限界上下是这样划分的吗？<br>首先把业务划分成粗粒度的领域，使用通用语言来描述所有的业务术语，每个业务术语必须清晰不能存在二义性。这样就能确保划分出正确的限界上下文。然后使用界限上下文，确定每个业务领域和边界。","like_count":0,"discussions":[{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":482629,"discussion_content":"是的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1580566415,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":174930,"user_name":"Mervin","can_delete":false,"product_type":"c1","uid":1396094,"ip_address":"","ucode":"D9C03032959A11","user_header":"https://static001.geekbang.org/account/avatar/00/15/4d/7e/47cac50a.jpg","comment_is_top":false,"comment_ctime":1580463170,"is_pvip":false,"replies":[{"id":"67996","content":"这个不会的，因为你的领域模型在事件风暴的过程中大多来源于前端的操作和功能，需要注意的是，在详细设计过程中需要在细节上注意前后端之间的服务参数和规约。","user_name":"作者回复","user_name_real":"渔","uid":"1316268","ctime":1580545982,"ip_address":"","comment_id":174930,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1580463170","product_id":100037301,"comment_content":"老师您好，在战术设计中我们直接将领域模型转化为了代码模型，整个过程产品经理会从功能页面的角度进行设计，感觉两者没有关联呢。会不会跟产品经理的设计有些脱节","like_count":0,"discussions":[{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":482569,"discussion_content":"这个不会的，因为你的领域模型在事件风暴的过程中大多来源于前端的操作和功能，需要注意的是，在详细设计过程中需要在细节上注意前后端之间的服务参数和规约。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1580545982,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":173317,"user_name":"Geek_a53a3c","can_delete":false,"product_type":"c1","uid":1810211,"ip_address":"","ucode":"68C20DEF4811AA","user_header":"","comment_is_top":false,"comment_ctime":1579503301,"is_pvip":false,"replies":[{"id":"67226","content":"这个图是做个示例，图的左边列是领域模型中对象，接近业务语言，右边列是微服务设计后的代码对象，两者建立了映射关系，它们是的团队达成一致的统一语言。","user_name":"作者回复","user_name_real":"渔","uid":"1316268","ctime":1579529897,"ip_address":"","comment_id":173317,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1579503301","product_id":100037301,"comment_content":"个人觉得那个图 挺不能说明问题的，  通用语言就是 业务相关人都能看得懂的语言，这是我的理解，和类，数据库表无关，这个时间点也不应该关注这个。而那个图 还是 太靠近开发了，业务人员比较难以接受。<br>对于成熟系统的 限界上下文，基本上没什么好说的，就是抄过来就可以。<br>领域最难的往往就是对于全新业务系统，如果团队内又没有一个业务专家，如何划分？<br>这个是一个 先发散，再收敛的过程，就是先可以不用关心 怎么划分限界上下文，一个大而全的限界总可以吧，先把聚合搞出来，当随着聚合的梳理，你会逐渐发现，有一些聚合就应该是再一起的，这样自然而然限界就出来了<br><br><br>","like_count":0,"discussions":[{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":482034,"discussion_content":"这个图是做个示例，图的左边列是领域模型中对象，接近业务语言，右边列是微服务设计后的代码对象，两者建立了映射关系，它们是的团队达成一致的统一语言。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579529897,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":172945,"user_name":"Geek_d38f30","can_delete":false,"product_type":"c1","uid":1512147,"ip_address":"","ucode":"955D6480731336","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/ib1aca6ibMC3bcTZeVdTFalyyhdvy4DLQ7s4WBTWaw95k8IJNTUkZ5VwfB9rYwxVz3PAz4chBJhWcyMHib9KdEEnQ/132","comment_is_top":false,"comment_ctime":1579367379,"is_pvip":false,"replies":[{"id":"67072","content":"是的","user_name":"作者回复","user_name_real":"渔","uid":"1316268","ctime":1579397486,"ip_address":"","comment_id":172945,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1579367379","product_id":100037301,"comment_content":"通用语言，是规范统一术语。领域边界是通用语言的有效范围","like_count":0,"discussions":[{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":481909,"discussion_content":"是的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579397486,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":167512,"user_name":"ちよくん","can_delete":false,"product_type":"c1","uid":1398577,"ip_address":"","ucode":"B71E9B16E4408F","user_header":"https://static001.geekbang.org/account/avatar/00/15/57/31/6772744d.jpg","comment_is_top":false,"comment_ctime":1577846514,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1577846514","product_id":100037301,"comment_content":"界限上下文可以理解为业务在不同阶段或者流程或者场景的一种划分，跨过了某一阶段或者流程换了一个名称或者叫法以区别别的阶段或者流程？","like_count":0,"discussions":[{"author":{"id":1808666,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/99/1a/196ff5f8.jpg","nickname":"长空","note":"","ucode":"EFE7E08491849C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":143373,"discussion_content":"我的理解与你不一致：业务流程、阶段通过事件风暴的方式明确出限界上下文，限界上下文这个概念是界定领域的边界的，领域边界与流程、阶段并没有映射关系。 业务流程与业务阶段是我们通过不同的对象(领域、事件、实体等)之间相互配合来体现的，它只是它们表现的行为。\n基于此，我认为不能反过来理解\n\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579503515,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":166609,"user_name":"shitao","can_delete":false,"product_type":"c1","uid":1067270,"ip_address":"","ucode":"9F4D71D4F34B61","user_header":"https://static001.geekbang.org/account/avatar/00/10/49/06/b90049f4.jpg","comment_is_top":false,"comment_ctime":1577518141,"is_pvip":false,"replies":[{"id":"64815","content":"是的","user_name":"作者回复","user_name_real":"渔","uid":"1316268","ctime":1577663015,"ip_address":"","comment_id":166609,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1577518141","product_id":100037301,"comment_content":"试着回答一下开篇问题:<br>1. 限界上下文可以把领域问题拆分成更小的单元，分而治之<br>2. 作用和意义：帮助指导微服务拆分，为通用语言划定语义范围，降低沟通成本","like_count":0,"discussions":[{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":479556,"discussion_content":"是的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577663015,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":161243,"user_name":"🍀吴昊","can_delete":false,"product_type":"c1","uid":1181559,"ip_address":"","ucode":"5A0447E0B9240D","user_header":"https://static001.geekbang.org/account/avatar/00/12/07/77/bff4af27.jpg","comment_is_top":false,"comment_ctime":1576155497,"is_pvip":false,"replies":[{"id":"61485","content":"领域模型会对应到限界上下文的。划分领域和子域的目的是为了缩小问题域的范围，然后才方便做事件风暴，事件风暴过程中会找出实体，聚合，划分限界上下文，从而建立领域模型，领域模型对应到业务的限界上下文。","user_name":"作者回复","user_name_real":"渔","uid":"1316268","ctime":1576194241,"ip_address":"","comment_id":161243,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1576155497","product_id":100037301,"comment_content":"有个问题问下老师，我们在领域驱动过程中是先通过划分领域和子域将问题放到一个范围内进行事件风暴，那么事件风暴创建的领域的应该是在划分领域模型的嘛？之前文章又提到先建立领域模型在划分限定上下文？这个两种先后有点矛盾？<br><br>事件风暴到底是战术还是战略设计呢？","like_count":0,"discussions":[{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":477656,"discussion_content":"领域模型会对应到限界上下文的。划分领域和子域的目的是为了缩小问题域的范围，然后才方便做事件风暴，事件风暴过程中会找出实体，聚合，划分限界上下文，从而建立领域模型，领域模型对应到业务的限界上下文。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1576194241,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":160786,"user_name":"静静聆听","can_delete":false,"product_type":"c1","uid":1263932,"ip_address":"","ucode":"0A8600CB928EFE","user_header":"https://static001.geekbang.org/account/avatar/00/13/49/3c/5d54c510.jpg","comment_is_top":false,"comment_ctime":1576032493,"is_pvip":false,"replies":[{"id":"61383","content":"主要目的是把对象和行为放一起，面向对象嘛。DDD强调对象和它的行为。","user_name":"作者回复","user_name_real":"渔","uid":"1316268","ctime":1576107725,"ip_address":"","comment_id":160786,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1576032493","product_id":100037301,"comment_content":"老师，我觉得你上图把，领域和方法都写在一起，不如把领域的聚合根、实体、值对象单独写，方法是要做软件工期控制的，应该另写，这样更加条理分明","like_count":0,"discussions":[{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":477477,"discussion_content":"主要目的是把对象和行为放一起，面向对象嘛。DDD强调对象和它的行为。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1576107725,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":160776,"user_name":"静静聆听","can_delete":false,"product_type":"c1","uid":1263932,"ip_address":"","ucode":"0A8600CB928EFE","user_header":"https://static001.geekbang.org/account/avatar/00/13/49/3c/5d54c510.jpg","comment_is_top":false,"comment_ctime":1576031675,"is_pvip":false,"replies":[{"id":"61382","content":"你可以把范围扩大一点，就是领域模型中的对象，表格主要是为了记录这些对象。聚合根和实体属于实体对象。","user_name":"作者回复","user_name_real":"渔","uid":"1316268","ctime":1576107609,"ip_address":"","comment_id":160776,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1576031675","product_id":100037301,"comment_content":"老师，领域对象和代码对象映射图，我看到有点费解，领域对象不是只包含：聚合根、值对象、实体这三个属性么，怎么会有领域服务、命令、事件发布等属性？","like_count":0,"discussions":[{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":477474,"discussion_content":"你可以把范围扩大一点，就是领域模型中的对象，表格主要是为了记录这些对象。聚合根和实体属于实体对象。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1576107609,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":154982,"user_name":"zj","can_delete":false,"product_type":"c1","uid":1100064,"ip_address":"","ucode":"E3329CCF694AC2","user_header":"https://static001.geekbang.org/account/avatar/00/10/c9/20/e4f1b17c.jpg","comment_is_top":false,"comment_ctime":1574608885,"is_pvip":false,"replies":[{"id":"59514","content":"第二遍的感觉跟第一遍相比，是否理解的更透彻一些了呢？","user_name":"作者回复","user_name_real":"渔","uid":"1316268","ctime":1574651130,"ip_address":"","comment_id":154982,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1574608885","product_id":100037301,"comment_content":"第二遍看了，现在总结一下：领域经过细分成子域或者子子域后，那这个子域或者子子域可能就是限界上下文。","like_count":0,"discussions":[{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":475628,"discussion_content":"第二遍的感觉跟第一遍相比，是否理解的更透彻一些了呢？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574651130,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1100064,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c9/20/e4f1b17c.jpg","nickname":"zj","note":"","ucode":"E3329CCF694AC2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":60793,"discussion_content":"是的，要透彻些 试图用现在系统事件风暴一下","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574755675,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":154045,"user_name":"krugle","can_delete":false,"product_type":"c1","uid":1045770,"ip_address":"","ucode":"60A7D9189C01BE","user_header":"https://static001.geekbang.org/account/avatar/00/0f/f5/0a/077b9922.jpg","comment_is_top":false,"comment_ctime":1574353832,"is_pvip":false,"replies":[{"id":"59177","content":"它是DDD分层架构中的一层，建议你看一下第7节的DDD分层架构。","user_name":"作者回复","user_name_real":"渔","uid":"1316268","ctime":1574391242,"ip_address":"","comment_id":154045,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1574353832","product_id":100037301,"comment_content":"表格中的应用层怎么理解  ","like_count":0,"discussions":[{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":475361,"discussion_content":"它是DDD分层架构中的一层，建议你看一下第7节的DDD分层架构。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574391242,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":153743,"user_name":"Derek","can_delete":false,"product_type":"c1","uid":1103066,"ip_address":"","ucode":"2281683BF28C81","user_header":"https://static001.geekbang.org/account/avatar/00/10/d4/da/e200b08a.jpg","comment_is_top":false,"comment_ctime":1574301648,"is_pvip":false,"replies":[{"id":"59085","content":"后面的章节有标注了。","user_name":"作者回复","user_name_real":"渔","uid":"1316268","ctime":1574306535,"ip_address":"","comment_id":153743,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1574301648","product_id":100037301,"comment_content":"名词建议最好还是中英文对照一下吧，中文有的看起来有点难懂","like_count":0,"discussions":[{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":475255,"discussion_content":"后面的章节有标注了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574306535,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":152716,"user_name":"开心哥","can_delete":false,"product_type":"c1","uid":1705468,"ip_address":"","ucode":"D44C1F03B23C5A","user_header":"https://static001.geekbang.org/account/avatar/00/1a/05/fc/bceb3f2b.jpg","comment_is_top":false,"comment_ctime":1574068828,"is_pvip":false,"replies":[{"id":"58663","content":"不一定哦，都是相对概念。有时候限界上下文还是跨子域的，你可以认为限界上下文是一种特殊的子域。","user_name":"作者回复","user_name_real":"渔","uid":"1316268","ctime":1574072419,"ip_address":"","comment_id":152716,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1574068828","product_id":100037301,"comment_content":"限界上下文是不是一定比子域要小？","like_count":0,"discussions":[{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":474910,"discussion_content":"不一定哦，都是相对概念。有时候限界上下文还是跨子域的，你可以认为限界上下文是一种特殊的子域。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574072419,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1808666,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/99/1a/196ff5f8.jpg","nickname":"长空","note":"","ucode":"EFE7E08491849C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":143400,"discussion_content":"这里我觉得用地图的画线与现实世界对应比较好。地图上画的是虚拟线，在现实中对应差不多的边界。2者相似但不等于","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579504894,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":150315,"user_name":"Cutler","can_delete":false,"product_type":"c1","uid":1228136,"ip_address":"","ucode":"2EDECFE039845B","user_header":"https://static001.geekbang.org/account/avatar/00/12/bd/68/3fd6428d.jpg","comment_is_top":false,"comment_ctime":1573518579,"is_pvip":false,"replies":[{"id":"57810","content":"很多人都是这么干的。^_^","user_name":"作者回复","user_name_real":"渔","uid":"1316268","ctime":1573520185,"ip_address":"","comment_id":150315,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1573518579","product_id":100037301,"comment_content":"没有，基本上就是拍脑袋直接就划分微服务了","like_count":0,"discussions":[{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":474123,"discussion_content":"很多人都是这么干的。^_^","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573520185,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":149355,"user_name":"lw","can_delete":false,"product_type":"c1","uid":1162641,"ip_address":"","ucode":"F7DBFA6A01C911","user_header":"https://static001.geekbang.org/account/avatar/00/11/bd/91/29c2a7fd.jpg","comment_is_top":false,"comment_ctime":1573200735,"is_pvip":false,"replies":[{"id":"57418","content":"是这样的。","user_name":"作者回复","user_name_real":"渔","uid":"1316268","ctime":1573203854,"ip_address":"","comment_id":149355,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1573200735","product_id":100037301,"comment_content":"1.为什么要提出限界上下文的概念？<br>将通用语言限定在一定业务范围内。<br>2.限界上下文在微服务设计中的作用和意义是什么？<br>可作为微服务划分的理论依据。","like_count":0,"discussions":[{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":473830,"discussion_content":"是这样的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573203854,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":148898,"user_name":"弄堂风","can_delete":false,"product_type":"c1","uid":1098039,"ip_address":"","ucode":"0E6A03019F74F1","user_header":"https://static001.geekbang.org/account/avatar/00/10/c1/37/35f25642.jpg","comment_is_top":false,"comment_ctime":1573106308,"is_pvip":false,"replies":[{"id":"57300","content":"我尝试过EA和UML，用的都不是太顺手。","user_name":"作者回复","user_name_real":"渔","uid":"1316268","ctime":1573113816,"ip_address":"","comment_id":148898,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1573106308","product_id":100037301,"comment_content":"老师。可以分享下，用什么工具去协作ddd的推进吗，比如画图的工具是用的哪一个？传统的uml工具或者像visio等，并不能很好的反映领域模型。","like_count":0,"discussions":[{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":473659,"discussion_content":"我尝试过EA和UML，用的都不是太顺手。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573113816,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":146696,"user_name":"Winglechen","can_delete":false,"product_type":"c1","uid":1010833,"ip_address":"","ucode":"EFA1CEB0FF24A3","user_header":"https://static001.geekbang.org/account/avatar/00/0f/6c/91/bb5b21f4.jpg","comment_is_top":false,"comment_ctime":1572608274,"is_pvip":false,"replies":[{"id":"56708","content":"限界上下文内只有聚合，实体，没有子域的概念了。","user_name":"作者回复","user_name_real":"渔","uid":"1316268","ctime":1572614018,"ip_address":"","comment_id":146696,"utype":1}],"discussion_count":3,"race_medal":0,"score":"1572608274","product_id":100037301,"comment_content":"个人理解：限界上下文和子域拆分是两个维度的概念。 通用语言和限界上下文作用在业务需求梳理阶段；子域拆分是在业务需求梳理明确后（限界上下文明确后）加上技术需求（如性能、同异步等）","like_count":0,"discussions":[{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":472980,"discussion_content":"限界上下文内只有聚合，实体，没有子域的概念了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1572614018,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1010833,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/6c/91/bb5b21f4.jpg","nickname":"Winglechen","note":"","ucode":"EFA1CEB0FF24A3","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":42194,"discussion_content":"留言功能用的不熟，😄","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1572608415,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1010833,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/6c/91/bb5b21f4.jpg","nickname":"Winglechen","note":"","ucode":"EFA1CEB0FF24A3","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":42193,"discussion_content":"进一步做的解耦拆分","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1572608388,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":146677,"user_name":"雷霹雳的爸爸","can_delete":false,"product_type":"c1","uid":1119490,"ip_address":"","ucode":"99BBA6D83DD11F","user_header":"https://static001.geekbang.org/account/avatar/00/11/15/02/66f65388.jpg","comment_is_top":false,"comment_ctime":1572601524,"is_pvip":true,"replies":[{"id":"56703","content":"好建议😄","user_name":"作者回复","user_name_real":"渔","uid":"1316268","ctime":1572608443,"ip_address":"","comment_id":146677,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1572601524","product_id":100037301,"comment_content":"针对老师一开始诱导思考的两个问题，后一个很容易答，因为猜都能猜出来就是拆微服务的依据，当然老师文章里也这么直接告诉大家了<br><br>前一个问题如果我没理解的错，我觉得换一种问法会比较好答，就是限界上下文在DDD战略设计中的作用是什么，这时候可以答是确定领域边界的依据，老师文章里也这么说的，“看到这，我想你应该非常清楚了，领域边界就是通过限界上下文来定义的”<br>","like_count":0,"discussions":[{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":472969,"discussion_content":"好建议😄","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1572608443,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":146440,"user_name":"美美","can_delete":false,"product_type":"c1","uid":1148422,"ip_address":"","ucode":"44CC95C45AF345","user_header":"https://static001.geekbang.org/account/avatar/00/11/86/06/72b01bb7.jpg","comment_is_top":false,"comment_ctime":1572524523,"is_pvip":false,"replies":[{"id":"56550","content":"可以这么理解的","user_name":"作者回复","user_name_real":"渔","uid":"1316268","ctime":1572532413,"ip_address":"","comment_id":146440,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1572524523","product_id":100037301,"comment_content":"您好，界限上下文是不是可以理解为领域边界呢","like_count":0,"discussions":[{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":472863,"discussion_content":"可以这么理解的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1572532413,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":146165,"user_name":"周孟","can_delete":false,"product_type":"c1","uid":1062026,"ip_address":"","ucode":"2DD1B5199F1BC1","user_header":"https://static001.geekbang.org/account/avatar/00/10/34/8a/08a79d38.jpg","comment_is_top":false,"comment_ctime":1572444030,"is_pvip":false,"replies":[{"id":"56448","content":"可以这么划分。但是保险销售管理这个子域已经比较小了，不建议再划分太细的子子域。你可以直接在保险销售管理子域通过事件风暴进行领域建模。在建模过程中会划分限界上下文，这些限界上下文可能会对应你说的这个五个子域。然后有些子子域可能会对应到聚合。领域建模这个过程不再是简单边界划分，它会明确每一个聚合里面的实体、值对象等领域对象，以及他们之间的协作关系。","user_name":"作者回复","user_name_real":"渔","uid":"1316268","ctime":1572484057,"ip_address":"","comment_id":146165,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1572444030","product_id":100037301,"comment_content":"请教老师，对于保险的销售管理按如下划分可以吗？<br>保险销售管理模型划分为：人员团队管理，业务管理，薪资管理，考核管理，中介管理五个子域，其中人员团队子域可以再分为人员管理和团队管理两个子子域，业务管理从费用角度可再分为保费，绩效，手续费等子子子域","like_count":0,"discussions":[{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":472734,"discussion_content":"可以这么划分。但是保险销售管理这个子域已经比较小了，不建议再划分太细的子子域。你可以直接在保险销售管理子域通过事件风暴进行领域建模。在建模过程中会划分限界上下文，这些限界上下文可能会对应你说的这个五个子域。然后有些子子域可能会对应到聚合。领域建模这个过程不再是简单边界划分，它会明确每一个聚合里面的实体、值对象等领域对象，以及他们之间的协作关系。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1572484057,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":146153,"user_name":"祥敏","can_delete":false,"product_type":"c1","uid":1205328,"ip_address":"","ucode":"466BFA980D9A37","user_header":"https://static001.geekbang.org/account/avatar/00/12/64/50/a54f0907.jpg","comment_is_top":false,"comment_ctime":1572441710,"is_pvip":false,"replies":[{"id":"56400","content":"可以这么理解。","user_name":"作者回复","user_name_real":"渔","uid":"1316268","ctime":1572443838,"ip_address":"","comment_id":146153,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1572441710","product_id":100037301,"comment_content":"限界上下文是对大场景的拆分，拆分到一个能够独立存在的小场景，这个小场景与其他关联场景有简单、明确的交互，但是多数关系和交互都在内部发生。<br><br>如果说上一讲谈论的是大战略，界限上下文就是大战略的细分组成小战略。<br><br>目前，微服务的拆分缺乏明确的拆分原则和方法论，领域驱动给出的答案就是业务优先是核心原则，限界上下文就是可以执行的方法。","like_count":0,"discussions":[{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":472728,"discussion_content":"可以这么理解。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1572443838,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":145803,"user_name":"小土豆爸爸","can_delete":false,"product_type":"c1","uid":1175495,"ip_address":"","ucode":"E3FED198AB803A","user_header":"https://static001.geekbang.org/account/avatar/00/11/ef/c7/07bffbf3.jpg","comment_is_top":false,"comment_ctime":1572371267,"is_pvip":false,"replies":[{"id":"56307","content":"建议你听完后，再仔细看看文稿。","user_name":"作者回复","user_name_real":"渔","uid":"1316268","ctime":1572398608,"ip_address":"","comment_id":145803,"utype":1}],"discussion_count":1,"race_medal":1,"score":"1572371267","product_id":100037301,"comment_content":"第一次听需要有点蒙，需要多次听，仔细了解","like_count":0,"discussions":[{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":472584,"discussion_content":"建议你听完后，再仔细看看文稿。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1572398608,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":145430,"user_name":"天天向上","can_delete":false,"product_type":"c1","uid":1031113,"ip_address":"","ucode":"5948D359734193","user_header":"https://static001.geekbang.org/account/avatar/00/0f/bb/c9/37924ad4.jpg","comment_is_top":false,"comment_ctime":1572272229,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1572272229","product_id":100037301,"comment_content":"一个限界上下文相当于一个语种，比如 英语 汉语<br>通用语言 相当于 每个语种里的 词汇 语法 之类的集合","like_count":0,"discussions":[{"author":{"id":1808666,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/99/1a/196ff5f8.jpg","nickname":"长空","note":"","ucode":"EFE7E08491849C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":143428,"discussion_content":"我觉得不能这样区分，英语与汉语差异非常大。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579506204,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":144761,"user_name":"若水","can_delete":false,"product_type":"c1","uid":1303418,"ip_address":"","ucode":"575F2A2F579B0B","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKeqZb7U4s6SZHXz1Vv2u8iaHibZeZ9Ndgibr2nT9BS6Z4wiao3j8Ya5O8FK1SnxxyagDjvsMYaauWficA/132","comment_is_top":false,"comment_ctime":1572051659,"is_pvip":false,"replies":[{"id":"55875","content":"命令是事件风暴分析过程中，发起的一些操作或者行为，可能会触发领域事件。而领域服务则是多个实体一起组合形成的复杂的业务逻辑。这个领域服务可能对应到外部的一个命令。而命令可能是领域服务，也可能是实体本身的一个方法。比如：创建订单是一个命令，在微服务内它是订单order的一个方法。","user_name":"作者回复","user_name_real":"渔","uid":"1316268","ctime":1572089260,"ip_address":"","comment_id":144761,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1572051659","product_id":100037301,"comment_content":"命令和领域服务怎么区分呢？","like_count":0,"discussions":[{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":472103,"discussion_content":"命令是事件风暴分析过程中，发起的一些操作或者行为，可能会触发领域事件。而领域服务则是多个实体一起组合形成的复杂的业务逻辑。这个领域服务可能对应到外部的一个命令。而命令可能是领域服务，也可能是实体本身的一个方法。比如：创建订单是一个命令，在微服务内它是订单order的一个方法。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1572089260,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":144023,"user_name":"stg609","can_delete":false,"product_type":"c1","uid":1073025,"ip_address":"","ucode":"FB70A75A891BB8","user_header":"https://static001.geekbang.org/account/avatar/00/10/5f/81/1c614f4a.jpg","comment_is_top":false,"comment_ctime":1571825918,"is_pvip":false,"replies":[{"id":"55632","content":"这样做意义不是太大。如果只是定义这种业务边界的话，其实相对容易。我们在子域做事件风暴和领域建模的目的就是把子域内部的实体、事件、命令等找出来，划分聚合等逻辑边界，然后找出限界上下文。这样建立的领域模型内部是很清晰的。而不是只划分业务边界而不管边界内的逻辑。在经过分析后就可以将领域模型映射到微服务，完成设计和落地，这样微服务内的对象关系以及逻辑边界也是很清晰的。","user_name":"作者回复","user_name_real":"渔","uid":"1316268","ctime":1571883063,"ip_address":"","comment_id":144023,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1571825918","product_id":100037301,"comment_content":"划分子域是业务粗分的过程，而上下文是对某一子域详细的设计过程，那设计过程中既然识别到一个子域包含多个上下文，是不是可以反过来继续对子域进行拆分？比如划分报案子域, 查勘子域？ 不知道这样是否有意义？","like_count":0,"discussions":[{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":471781,"discussion_content":"这样做意义不是太大。如果只是定义这种业务边界的话，其实相对容易。我们在子域做事件风暴和领域建模的目的就是把子域内部的实体、事件、命令等找出来，划分聚合等逻辑边界，然后找出限界上下文。这样建立的领域模型内部是很清晰的。而不是只划分业务边界而不管边界内的逻辑。在经过分析后就可以将领域模型映射到微服务，完成设计和落地，这样微服务内的对象关系以及逻辑边界也是很清晰的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571883063,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":143484,"user_name":"Geek_a91670","can_delete":false,"product_type":"c1","uid":1705156,"ip_address":"","ucode":"6CAA9FF890F8EA","user_header":"https://static001.geekbang.org/account/avatar/00/1a/04/c4/ef4bd241.jpg","comment_is_top":false,"comment_ctime":1571715614,"is_pvip":false,"replies":[{"id":"55400","content":"领域建模和微服务在设计过程要有一个事件风暴的过程，过程中会找出实体，聚合。找出聚合所在的限界上下文，然后设计微服务。微服务的大小不宜过大也不宜过小，过小会增加集成和运维成本，过大则会成为单体。定损、查勘是理赔环节的上下游关系，业务边界相对清晰，大小也还可以。","user_name":"作者回复","user_name_real":"渔","uid":"1316268","ctime":1571722183,"ip_address":"","comment_id":143484,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1571715614","product_id":100037301,"comment_content":"&quot;理论上限界上下文就是微服务的边界。我们将限界上下文内的领域模型映射到微服务，就完成了从问题域到软件的解决方案。&quot;<br>问:老师,那么理赔领域是否就要根据限界上下文拆分为:定损,查勘,报案,其他等服务?是不是太细了?","like_count":0,"discussions":[{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":471557,"discussion_content":"领域建模和微服务在设计过程要有一个事件风暴的过程，过程中会找出实体，聚合。找出聚合所在的限界上下文，然后设计微服务。微服务的大小不宜过大也不宜过小，过小会增加集成和运维成本，过大则会成为单体。定损、查勘是理赔环节的上下游关系，业务边界相对清晰，大小也还可以。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571722183,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1073985,"avatar":"https://static001.geekbang.org/account/avatar/00/10/63/41/f37f0a40.jpg","nickname":"zscome","note":"","ucode":"10B8F55C2D2DE9","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":38249,"discussion_content":"1.限界上下文，如何确定边界，有哪些可以参考的依据？\n2.如果评估限界上下文合理性？流程复杂度能控制的程度？有哪些参考依据？\n3.如果没有任何依据，那岂不是仁者见仁 智者见智？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571751474,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":143335,"user_name":"李伟","can_delete":false,"product_type":"c1","uid":1678806,"ip_address":"","ucode":"C93562CE6A1A83","user_header":"https://static001.geekbang.org/account/avatar/00/19/9d/d6/47fb2517.jpg","comment_is_top":false,"comment_ctime":1571670571,"is_pvip":false,"replies":[{"id":"55378","content":"DDD在领域建模过程中会产生很多的领域对象，其中很重要的一个领域对象就是实体。大多数的实体都会映射到数据持久化对象。在微服务设计时候会建立这种映射关系，这个过程实际上就是一个数据架构的设计过程。<br>但DDD更多的强调领域模型优先，而不是数据模型优先，所以先定义领域模型，然后才设计数据模型。","user_name":"作者回复","user_name_real":"渔","uid":"1316268","ctime":1571707030,"ip_address":"","comment_id":143335,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1571670571","product_id":100037301,"comment_content":"微服务拆分会涉及到数据架构的设计和拆分么？数据架构这一块能通过DDD来一并设计了么？后面有没有实践呢？谢谢！","like_count":0,"discussions":[{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":471492,"discussion_content":"DDD在领域建模过程中会产生很多的领域对象，其中很重要的一个领域对象就是实体。大多数的实体都会映射到数据持久化对象。在微服务设计时候会建立这种映射关系，这个过程实际上就是一个数据架构的设计过程。\n但DDD更多的强调领域模型优先，而不是数据模型优先，所以先定义领域模型，然后才设计数据模型。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571707030,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":143264,"user_name":"瓜瓜","can_delete":false,"product_type":"c1","uid":1108505,"ip_address":"","ucode":"F90A5135A9BB4B","user_header":"https://static001.geekbang.org/account/avatar/00/10/ea/19/14018371.jpg","comment_is_top":false,"comment_ctime":1571658261,"is_pvip":false,"replies":[{"id":"55345","content":"能帮到你就是最大的快乐。","user_name":"作者回复","user_name_real":"渔","uid":"1316268","ctime":1571669965,"ip_address":"","comment_id":143264,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1571658261","product_id":100037301,"comment_content":"感谢老师","like_count":0,"discussions":[{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":471454,"discussion_content":"能帮到你就是最大的快乐。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571669965,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":143263,"user_name":"瓜瓜","can_delete":false,"product_type":"c1","uid":1108505,"ip_address":"","ucode":"F90A5135A9BB4B","user_header":"https://static001.geekbang.org/account/avatar/00/10/ea/19/14018371.jpg","comment_is_top":false,"comment_ctime":1571658251,"is_pvip":false,"replies":[{"id":"55346","content":"领域是逐级分解的，就看你是一把就分的很细，还是按照一致的粒度逐级分解。粗的领域还到不了微服务设计，所以这时候你不必担心领域是否放一起。当领域细分到可以开始事件风暴，建立领域模型的时候，你就要关心它们是否是在一个限界上下文里。这时候就涉及到微服务的设计和拆分了。","user_name":"作者回复","user_name_real":"渔","uid":"1316268","ctime":1571670466,"ip_address":"","comment_id":143263,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1571658251","product_id":100037301,"comment_content":"比如说：二手房的网站<br>领域：<br>发房：其中发房又包括子域：校验、发布<br>商业上架：各种商业上架类型的子域<br>商业下架：？？？<br>房源管理：<br>成交：<br><br>其中不太确定的是，商业下架是否要和商业上架放到一个领域里面？还有成交是否要为一个单独的领域？","like_count":0,"discussions":[{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":471453,"discussion_content":"领域是逐级分解的，就看你是一把就分的很细，还是按照一致的粒度逐级分解。粗的领域还到不了微服务设计，所以这时候你不必担心领域是否放一起。当领域细分到可以开始事件风暴，建立领域模型的时候，你就要关心它们是否是在一个限界上下文里。这时候就涉及到微服务的设计和拆分了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571670466,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1108505,"avatar":"https://static001.geekbang.org/account/avatar/00/10/ea/19/14018371.jpg","nickname":"瓜瓜","note":"","ucode":"F90A5135A9BB4B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":37842,"discussion_content":"谢谢老师","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571670539,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":143229,"user_name":"兆哲","can_delete":false,"product_type":"c1","uid":1269847,"ip_address":"","ucode":"1DAEA37570CB45","user_header":"https://static001.geekbang.org/account/avatar/00/13/60/57/70930a43.jpg","comment_is_top":false,"comment_ctime":1571651728,"is_pvip":false,"replies":[{"id":"55316","content":"是这样的。","user_name":"作者回复","user_name_real":"渔","uid":"1316268","ctime":1571652369,"ip_address":"","comment_id":143229,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1571651728","product_id":100037301,"comment_content":"限界上下文：为了确认语义上下文，是通过事件风暴积聚出来的服务边界；<br>与微服务的关系：最大的好处是能很明显的做到从设计到代码的映射，一个界限上下文代表了一个业务的边界也代表了一个微服务，这也是DDD与微服务很好的一个契合点。","like_count":0,"discussions":[{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":471435,"discussion_content":"是这样的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571652369,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":142934,"user_name":"MaLu","can_delete":false,"product_type":"c1","uid":1083559,"ip_address":"","ucode":"A5E900B6B94FB9","user_header":"https://static001.geekbang.org/account/avatar/00/10/88/a7/fb383ef7.jpg","comment_is_top":false,"comment_ctime":1571589438,"is_pvip":false,"replies":[{"id":"55251","content":"我后面的章节还会有从领域模型到微服务设计方面的详细介绍，希望能帮你更好的理解这个表。请耐心等待。","user_name":"作者回复","user_name_real":"渔","uid":"1316268","ctime":1571620732,"ip_address":"","comment_id":142934,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1571589438","product_id":100037301,"comment_content":"微服务设计实例表格中的关系描述有很好的指导与参考价值<br>限界上下文 = 限界 + 上下文的 释义描述得比较准确。","like_count":0,"discussions":[{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":471333,"discussion_content":"我后面的章节还会有从领域模型到微服务设计方面的详细介绍，希望能帮你更好的理解这个表。请耐心等待。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571620732,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":142798,"user_name":"sky","can_delete":false,"product_type":"c1","uid":1106096,"ip_address":"","ucode":"4991F5F62477FB","user_header":"https://static001.geekbang.org/account/avatar/00/10/e0/b0/9396e7fc.jpg","comment_is_top":false,"comment_ctime":1571538692,"is_pvip":false,"replies":[{"id":"55189","content":"用visio画的。用不规则曲线一段一段连出来的。","user_name":"作者回复","user_name_real":"渔","uid":"1316268","ctime":1571549997,"ip_address":"","comment_id":142798,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1571538692","product_id":100037301,"comment_content":"老师您好，请问文章中保险模型的限界上下文的图是用什么工具画的","like_count":0,"discussions":[{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":471274,"discussion_content":"用visio画的。用不规则曲线一段一段连出来的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571549997,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":142794,"user_name":"robert","can_delete":false,"product_type":"c1","uid":1232782,"ip_address":"","ucode":"E421743EBCF6E8","user_header":"https://static001.geekbang.org/account/avatar/00/12/cf/8e/6be7cd9f.jpg","comment_is_top":false,"comment_ctime":1571537221,"is_pvip":false,"replies":[{"id":"55197","content":"子域和限界上下文可以这么理解。对于新系统，如果领域过大，我们就需要将它细分为子域，一直分解到适合做事件风暴的大小。事件风暴后会根据限界上下文来建立领域模型，根据领域模型来设计微服务。如果是老系统，只是重建的话，我们可以以老系统对应的业务域来做事件风暴，划分限界上下文，建立领域模型，设计微服务。","user_name":"作者回复","user_name_real":"渔","uid":"1316268","ctime":1571582935,"ip_address":"","comment_id":142794,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1571537221","product_id":100037301,"comment_content":"老师，请问子域和限界上下文的关系是怎么样的？我可以通过问题域就可以拆成报案等几个子子域，然后通过限界上下文（封装通用语言和领域对象）做好边界隔离。那问题域是不是也可以划分微服务？对新系统可以通过问题域来划分微服务，对于老系统则通过限界上下文？","like_count":0,"discussions":[{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":471272,"discussion_content":"子域和限界上下文可以这么理解。对于新系统，如果领域过大，我们就需要将它细分为子域，一直分解到适合做事件风暴的大小。事件风暴后会根据限界上下文来建立领域模型，根据领域模型来设计微服务。如果是老系统，只是重建的话，我们可以以老系统对应的业务域来做事件风暴，划分限界上下文，建立领域模型，设计微服务。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571582935,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":142676,"user_name":"江河顺水","can_delete":false,"product_type":"c1","uid":1240807,"ip_address":"","ucode":"8FE80FB71DD63E","user_header":"https://static001.geekbang.org/account/avatar/00/12/ee/e7/450fe9eb.jpg","comment_is_top":false,"comment_ctime":1571454144,"is_pvip":false,"replies":[{"id":"55132","content":"是这样的。","user_name":"作者回复","user_name_real":"渔","uid":"1316268","ctime":1571462701,"ip_address":"","comment_id":142676,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1571454144","product_id":100037301,"comment_content":"通用语言：团队内部能够清晰、准确的描述业务模型的语言就是通用语言。<br>限界上下文：为通用语言划定边界，并提供语义上下文。领域内所有界限上下文的模型构成了整个领域模型。<br>理论上，某些条件下，限界上下文的划分也最终确定了微服务的边界。<br>在视频领域内，cp专指视频内容提供商，做的事情也只能是视频发行，而不能做其他的事情。","like_count":0,"discussions":[{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":471223,"discussion_content":"是这样的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571462701,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1024486,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a1/e6/50da1b2d.jpg","nickname":"旭东(Frank)","note":"","ucode":"176FA629800062","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":148752,"discussion_content":"通用语言再加个统一限定就更好了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579706309,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":142581,"user_name":"南山","can_delete":false,"product_type":"c1","uid":1119593,"ip_address":"","ucode":"94656FE4A6C378","user_header":"https://static001.geekbang.org/account/avatar/00/11/15/69/187b9968.jpg","comment_is_top":false,"comment_ctime":1571402218,"is_pvip":true,"replies":[{"id":"55137","content":"最好让领域专家和项目团队变成一个团队，全流程参与，统一思想和语言。限界上下文主要由业务的语义边界来确定，特定环境只说这个环境的事。这个很难定量分析，靠项目团队根据公司的业务整体把握。","user_name":"作者回复","user_name_real":"渔","uid":"1316268","ctime":1571471818,"ip_address":"","comment_id":142581,"utype":1}],"discussion_count":3,"race_medal":0,"score":"1571402218","product_id":100037301,"comment_content":"现在的部门没有领域专家这个概念，产品是由产品经理规划，许多时候研发产品的意见会有分歧<br>1。这种情况下有没有什么好点的方式来确定限界上下文呢？<br>2。事件风暴没有尝试过，一个服务一般就是研发侧觉得功能能够内聚，从产品中抽取一些核心功能以及范围来作为边界，是不是有更好的方法论呢？","like_count":0,"discussions":[{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":471185,"discussion_content":"最好让领域专家和项目团队变成一个团队，全流程参与，统一思想和语言。限界上下文主要由业务的语义边界来确定，特定环境只说这个环境的事。这个很难定量分析，靠项目团队根据公司的业务整体把握。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571471818,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1119593,"avatar":"https://static001.geekbang.org/account/avatar/00/11/15/69/187b9968.jpg","nickname":"南山","note":"","ucode":"94656FE4A6C378","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":41305,"discussion_content":"产品经理有时候可以承担一些领域专家的职责，客户应该不行，一:客户基本不会和项目团队变成一个团队，二:客户很多时候不知道他要什么，尤其是细节方面","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1572398121,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1205328,"avatar":"https://static001.geekbang.org/account/avatar/00/12/64/50/a54f0907.jpg","nickname":"祥敏","note":"","ucode":"466BFA980D9A37","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":41261,"discussion_content":"领域专家，可以对应产品经理、客户代表这些吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1572391788,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":142500,"user_name":"二两豆腐","can_delete":false,"product_type":"c1","uid":1178313,"ip_address":"","ucode":"24E16A3C2AD28C","user_header":"https://static001.geekbang.org/account/avatar/00/11/fa/c9/c75664e9.jpg","comment_is_top":false,"comment_ctime":1571380774,"is_pvip":false,"replies":[{"id":"54966","content":"传统行业有不少应用是单体系统，而且互金和核心之间重复建设的情况不少，因此在做中台的时候需要进行业务模型的重构。中台领域模型的重构和事件风暴详细介绍我会在后续的章节讲到。","user_name":"作者回复","user_name_real":"渔","uid":"1316268","ctime":1571383398,"ip_address":"","comment_id":142500,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1571380774","product_id":100037301,"comment_content":"针对保险，财务，银行这些从传统行业转型过来的行业，他们都有已经非常完整的业务模型，有自己的领域专家。老师我的问题是：针对现在很多互联网公司，产品需求都是有产品经理驱动，但是产品经理也未必是领域专家，所以和领域专家深度交流进行统一语言这个可能会有一些困难，这个如何破局。<br>另外老师说限界上下文和统一语言是通过事件风暴形式产生出来的，具体事件风暴是怎么开的，细节是怎么样的，如何才能实施，希望老师指导。","like_count":0,"discussions":[{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":471151,"discussion_content":"传统行业有不少应用是单体系统，而且互金和核心之间重复建设的情况不少，因此在做中台的时候需要进行业务模型的重构。中台领域模型的重构和事件风暴详细介绍我会在后续的章节讲到。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571383398,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":142479,"user_name":"吃饭饭","can_delete":false,"product_type":"c1","uid":1231549,"ip_address":"","ucode":"95CFA07CDA2957","user_header":"https://static001.geekbang.org/account/avatar/00/12/ca/bd/a51ae4b2.jpg","comment_is_top":false,"comment_ctime":1571377088,"is_pvip":false,"replies":[{"id":"54963","content":"没错，就是这样的。跟三层架构的对比分析，我会在分层架构那一节详细讲解。","user_name":"作者回复","user_name_real":"渔","uid":"1316268","ctime":1571381046,"ip_address":"","comment_id":142479,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1571377088","product_id":100037301,"comment_content":"感觉这个跟传统的 Model -&gt; Dao -&gt; Service -&gt; Controller 有点不一样，边界内的领域模型是承载了真正的面向对象这里理念吗？感觉某些具有相同点的子域的集合有可能就是一个微服务，不知道理解的是否有偏差，望老师指正：）","like_count":0,"discussions":[{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":471141,"discussion_content":"没错，就是这样的。跟三层架构的对比分析，我会在分层架构那一节详细讲解。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571381046,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1024486,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a1/e6/50da1b2d.jpg","nickname":"旭东(Frank)","note":"","ucode":"176FA629800062","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":148739,"discussion_content":"DDD 是业务为主，确保业务和代码能够尽可能保持一致，而传统的架构只是代码上的解耦居多，业务在代码中没有明确的形态","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1579706042,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":142419,"user_name":"杨杰","can_delete":false,"product_type":"c1","uid":1131823,"ip_address":"","ucode":"74817EA9499843","user_header":"https://static001.geekbang.org/account/avatar/00/11/45/2f/b0b0dd74.jpg","comment_is_top":false,"comment_ctime":1571365507,"is_pvip":false,"replies":[{"id":"54936","content":"会有一节专门介绍。","user_name":"作者回复","user_name_real":"渔","uid":"1316268","ctime":1571371773,"ip_address":"","comment_id":142419,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1571365507","product_id":100037301,"comment_content":"关于时间风暴后面会详细讲么？","like_count":0,"discussions":[{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":471116,"discussion_content":"会有一节专门介绍。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571371773,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":142383,"user_name":"Catwell","can_delete":false,"product_type":"c1","uid":1381681,"ip_address":"","ucode":"40B77D7484EC72","user_header":"https://static001.geekbang.org/account/avatar/00/15/15/31/85f42901.jpg","comment_is_top":false,"comment_ctime":1571361555,"is_pvip":false,"replies":[{"id":"54924","content":"其实拆分过程很多时候要考虑公司的具体情况，跟企业的技术能力和研发水平有很大关系。后面会有设计方面的详细介绍，请耐心等待。","user_name":"作者回复","user_name_real":"渔","uid":"1316268","ctime":1571363168,"ip_address":"","comment_id":142383,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1571361555","product_id":100037301,"comment_content":"通用语言非常重要，经常会发生不同部门不在同一个频道上讨论，然后发现讨论的是同一个问题，上下文我的感觉是在拆分子域和聚合基本功能这块很重要，然后拆到多细，怎么样减少系统的耦合太难了，有时候自己都会否定自己，老师讲的很细，期待继续学习。","like_count":0,"discussions":[{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":471098,"discussion_content":"其实拆分过程很多时候要考虑公司的具体情况，跟企业的技术能力和研发水平有很大关系。后面会有设计方面的详细介绍，请耐心等待。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571363168,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]}]}