{"id":90874,"title":"18 | 怎么减少 App 电量消耗？","content":"<p>你好，我是戴铭。</p><p>手机设备电量有限，App 开发时如不注意电量的的消耗，当用户发现你的 App 是耗电大户时，就会毫不犹豫地将其抛弃。所以，每次开发完，我们都需要去检查自己的App有没有耗电的问题。</p><p>耗电的原因有千万种，如果每次遇到耗电过多的问题，我们都从头查找一番的话，那必然会效率低下。</p><p>就比如说，测试同学过来跟你说“某个页面的前一个版本还好好的，这个版本的耗电怎么多了那么多”，那么你首先想到可能就是这个页面有没有开启定位，网络请求是不是频繁，亦或是定时任务时间是不是间隔过小。接下来，你会去查找耗电问题到底是怎么引起的。你去翻代码的时候却发现，这个页面的相关功能在好几个版本中都没改过了。</p><p>那么，到底是什么原因使得这一个版本的耗电量突然增加呢？不如就使用排除法吧，你把功能一个个都注释掉，却发现耗电量还是没有减少。这时，你应该怎么办呢？接下来，我就在今天的文章里面和你详细分享一下这个问题的解法吧。</p><p>我们首先需要明确的是，只有获取到电量，才能够发现电量问题。所以，我就先从如何获取电量和你讲起。</p><h2>如何获取电量？</h2><p>在iOS中，IOKit framework 是专门用于跟硬件或内核服务通信的。所以，我们可以通过IOKit framework 来获取硬件信息，进而获取到电量消耗信息。在使用IOKit framework时，你需要：</p><!-- [[[read_end]]] --><ul>\n<li>首先，把IOPowerSources.h、IOPSKeys.h和IOKit 这三个文件导入到工程中；</li>\n<li>然后，把batteryMonitoringEnabled置为true；</li>\n<li>最后，通过如下代码获取1%精确度的电量信息。</li>\n</ul><pre><code>#import &quot;IOPSKeys.h&quot;\n#import &quot;IOPowerSources.h&quot;\n\n-(double) getBatteryLevel{\n    // 返回电量信息\n    CFTypeRef blob = IOPSCopyPowerSourcesInfo();\n    // 返回电量句柄列表数据\n    CFArrayRef sources = IOPSCopyPowerSourcesList(blob);\n    CFDictionaryRef pSource = NULL;\n    const void *psValue;\n    // 返回数组大小\n    int numOfSources = CFArrayGetCount(sources);\n    // 计算大小出错处理\n    if (numOfSources == 0) {\n        NSLog(@&quot;Error in CFArrayGetCount&quot;);\n        return -1.0f;\n    }\n\n    // 计算所剩电量\n    for (int i=0; i&lt;numOfSources; i++) {\n        // 返回电源可读信息的字典\n        pSource = IOPSGetPowerSourceDescription(blob, CFArrayGetValueAtIndex(sources, i));\n        if (!pSource) {\n            NSLog(@&quot;Error in IOPSGetPowerSourceDescription&quot;);\n            return -1.0f;\n        }\n        psValue = (CFStringRef) CFDictionaryGetValue(pSource, CFSTR(kIOPSNameKey));\n\n        int curCapacity = 0;\n        int maxCapacity = 0;\n        double percentage;\n\n        psValue = CFDictionaryGetValue(pSource, CFSTR(kIOPSCurrentCapacityKey));\n        CFNumberGetValue((CFNumberRef)psValue, kCFNumberSInt32Type, &amp;curCapacity);\n\n        psValue = CFDictionaryGetValue(pSource, CFSTR(kIOPSMaxCapacityKey));\n        CFNumberGetValue((CFNumberRef)psValue, kCFNumberSInt32Type, &amp;maxCapacity);\n\n        percentage = ((double) curCapacity / (double) maxCapacity * 100.0f);\n        NSLog(@&quot;curCapacity : %d / maxCapacity: %d , percentage: %.1f &quot;, curCapacity, maxCapacity, percentage);\n        return percentage;\n    }\n    return -1.\n</code></pre><p>说完耗电量的获取方法，我们再继续看如何解决电量问题。</p><h2>如何诊断电量问题？</h2><p>回到最开始的问题，当你用排除法将所有功能注释掉后，如果还有问题，那么这个耗电一定是由其他线程引起的。创建这个耗电线程的地方可能是在其他地方，比如是由第三方库引起，或者是公司其他团队开发的库。</p><p>所以，你需要逆向地去思考这个问题。这里，你不妨回顾一下，我们在第12篇文章“<a href=\"https://time.geekbang.org/column/article/88600\">iOS崩溃千奇百怪，如何全面监控</a>”中是怎么定位问题的。</p><p>也就是说，我们还是先反过来看看出现电量问题的期间，哪个线程是有问题的。通过下面的这段代码，你就可以获取到所有线程的信息：</p><pre><code>thread_act_array_t threads;\nmach_msg_type_number_t threadCount = 0;\nconst task_t thisTask = mach_task_self();\nkern_return_t kr = task_threads(thisTask, &amp;threads, &amp;threadCount);\n</code></pre><p>从上面代码可以看出，通过 task_threads 函数，我们就能够得到所有的线程信息数组 threads，以及线程总数 threadCount。threads 数组里的线程信息结构体 thread_basic_info 里有一个记录 CPU 使用百分比的字段 cpu_usage。thread_basic_info结构体的代码如下：</p><pre><code>struct thread_basic_info {\n        time_value_t    user_time;      /* user 运行的时间 */\n        time_value_t    system_time;    /* system 运行的时间 */\n        integer_t       cpu_usage;      /* CPU 使用百分比 */\n        policy_t        policy;         /* 有效的计划策略 */\n        integer_t       run_state;      /* run state (see below) */\n        integer_t       flags;          /* various flags (see below) */\n        integer_t       suspend_count;  /* suspend count for thread */\n        integer_t       sleep_time;     /* 休眠时间 */\n};\n</code></pre><p>有了这个 cpu_usage 字段，你就可以通过遍历所有线程，去查看是哪个线程的 CPU 使用百分比过高了。如果某个线程的CPU使用率长时间都比较高的话，比如超过了90%，就能够推断出它是有问题的。这时，将其方法堆栈记录下来，你就可以知道到底是哪段代码让你 App 的电量消耗多了。</p><p>通过这种方法，你就可以快速定位到问题，有针对性地进行代码优化。多线程 CPU 使用率检查的完整代码如下：</p><pre><code>// 轮询检查多个线程 CPU 情况\n+ (void)updateCPU {\n    thread_act_array_t threads;\n    mach_msg_type_number_t threadCount = 0;\n    const task_t thisTask = mach_task_self();\n    kern_return_t kr = task_threads(thisTask, &amp;threads, &amp;threadCount);\n    if (kr != KERN_SUCCESS) {\n        return;\n    }\n    for (int i = 0; i &lt; threadCount; i++) {\n        thread_info_data_t threadInfo;\n        thread_basic_info_t threadBaseInfo;\n        mach_msg_type_number_t threadInfoCount = THREAD_INFO_MAX;\n        if (thread_info((thread_act_t)threads[i], THREAD_BASIC_INFO, (thread_info_t)threadInfo, &amp;threadInfoCount) == KERN_SUCCESS) {\n            threadBaseInfo = (thread_basic_info_t)threadInfo;\n            if (!(threadBaseInfo-&gt;flags &amp; TH_FLAGS_IDLE)) {\n                integer_t cpuUsage = threadBaseInfo-&gt;cpu_usage / 10;\n                if (cpuUsage &gt; 90) {\n                    //cup 消耗大于 90 时打印和记录堆栈\n                    NSString *reStr = smStackOfThread(threads[i]);\n                    //记录数据库中\n                    [[[SMLagDB shareInstance] increaseWithStackString:reStr] subscribeNext:^(id x) {}];\n                    NSLog(@&quot;CPU useage overload thread stack：\\n%@&quot;,reStr);\n                }\n            }\n        }\n    }\n}\n</code></pre><h2>优化电量</h2><p>现在我们已经知道了在线上碰到电量问题时，应该如何解决，但是电量的不合理消耗也可能来自其他方面。CPU 是耗电的大头，引起 CPU 耗电的单点问题可以通过监控来解决，但点滴汇聚终成大海，每一个不合理的小的电量消耗，最终都可能会造成大的电量浪费。所以，我们在平时的开发工作中，时刻关注对耗电量的优化也非常重要。</p><p>对 CPU 的使用要精打细算，要避免让 CPU 做多余的事情。对于大量数据的复杂计算，应该把数据传到服务器去处理，如果必须要在 App 内处理复杂数据计算，可以通过 GCD 的 dispatch_block_create_with_qos_class 方法指定队列的 Qos 为 QOS_CLASS_UTILITY，将计算工作放到这个队列的 block 里。在 QOS_CLASS_UTILITY 这种 Qos 模式下，系统针对大量数据的计算，以及复杂数据处理专门做了电量优化。</p><p>接下来，我们再看看<strong>除了 CPU 会影响耗电，对电量影响较大的因素还有哪些呢？</strong></p><p>除了 CPU，I/O操作也是耗电大户。任何的 I/O 操作，都会破坏掉低功耗状态。那么，针对 I/O 操作要怎么优化呢？</p><p>业内的普遍做法是，将碎片化的数据磁盘存储操作延后，先在内存中聚合，然后再进行磁盘存储。碎片化的数据进行聚合，在内存中进行存储的机制，可以使用系统自带的 NSCache 来完成。</p><p>NSCache 是线程安全的，NSCache 会在到达预设缓存空间值时清理缓存，这时会触发 cache:willEvictObject: 方法的回调，在这个回调里就可以对数据进行 I/O 操作，达到将聚合的数据 I/O 延后的目的。I/O 操作的次数减少了，对电量的消耗也就减少了。</p><p>SDWebImage 图片加载框架，在图片的读取缓存处理时没有直接使用 I/O，而是使用了NSCache。使用 NSCache 的相关代码如下：</p><pre><code>- (UIImage *)imageFromMemoryCacheForKey:(NSString *)key {\n    return [self.memCache objectForKey:key];\n}\n\n- (UIImage *)imageFromDiskCacheForKey:(NSString *)key {\n    // 检查 NSCache 里是否有\n    UIImage *image = [self imageFromMemoryCacheForKey:key];\n    if (image) {\n        return image;\n    }\n    // 从磁盘里读\n    UIImage *diskImage = [self diskImageForKey:key];\n    if (diskImage &amp;&amp; self.shouldCacheImagesInMemory) {\n        NSUInteger cost = SDCacheCostForImage(diskImage);\n        [self.memCache setObject:diskImage forKey:key cost:cost];\n    }\n    return diskImage;\n}\n</code></pre><p>可以看出，SDWebImage 将获取的图片数据都放到了 NSCache 里，利用 NSCache 缓存策略进行图片缓存内存的管理。每次读取图片时，会检查 NSCache 是否已经存在图片数据：如果有，就直接从 NSCache 里读取；如果没有，才会通过 I/O 读取磁盘缓存图片。</p><p>使用了 NSCache 内存缓存能够有效减少 I/O 操作，你在写类似功能时也可以采用这样的思路，让你的 App 更省电。</p><p><strong>CPU 和 I/O 这两大耗电问题都解决后，还有什么要注意的呢？</strong>这里还有两份关于App电量消耗的资料，你可以对照你的App来查看。</p><p>苹果公司专门维护了一个电量优化指南“<a href=\"https://developer.apple.com/library/archive/documentation/Performance/Conceptual/EnergyGuide-iOS/\">Energy Efficiency Guide for iOS Apps</a>”，分别从 CPU、设备唤醒、网络、图形、动画、视频、定位、加速度计、陀螺仪、磁力计、蓝牙等多方面因素提出了电量优化方面的建议。所以，当使用了苹果公司的电量优化指南里提到的功能时，严格按照指南里的最佳实践去做就能够保证这些功能不会引起不合理的电量消耗。</p><p>同时，苹果公司在2017年 WWDC 的 Session 238 也分享了一个关于如何编写节能 App 的主题“<a href=\"https://developer.apple.com/videos/play/wwdc2017/238/\">Writing Energy Efficient Apps</a>”。</p><h2>小结</h2><p>今天我跟你分享了如何通过获取线程信息里的cpu_usage 字段来判断耗电线程，进而得到当前线程执行方法堆栈，从而精准、快速地定位到引起耗电的具体方法。我曾经用这个方法解决了几起难以定位的耗电问题，这些问题都出在二方库上。通过获取到的方法堆栈，我就有了充足的证据去推动其他团队进行电量优化。</p><p>除此之外，我还跟你介绍了如何在平时开发中关注电量的问题。在我看来，减少 App 耗电也是开发者的天职，不然如何向我们可爱的用户交代呢。</p><h2>课后小作业</h2><p>请你使用我今天分享的耗电检查方法，检查一下你的 App，看看哪个方法最耗电。</p><p>感谢你的收听，欢迎你在评论区给我留言分享你的观点，也欢迎把它分享给更多的朋友一起阅读。</p>","comments":[{"had_liked":false,"id":87901,"user_name":"泽七","can_delete":false,"product_type":"c1","uid":1453863,"ip_address":"","ucode":"37199E28ABA3D5","user_header":"https://static001.geekbang.org/account/avatar/00/16/2f/27/9a606b3e.jpg","comment_is_top":false,"comment_ctime":1555747432,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"169059471976","product_id":100024501,"comment_content":"获取电量为什么不用 [[UIDevice currentDevice] batteryLevel] 呢？","like_count":40},{"had_liked":false,"id":93426,"user_name":"包罗万象","can_delete":false,"product_type":"c1","uid":1087130,"ip_address":"","ucode":"29AFA27338F0FB","user_header":"https://static001.geekbang.org/account/avatar/00/10/96/9a/78f2af55.jpg","comment_is_top":false,"comment_ctime":1557468819,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"31622239891","product_id":100024501,"comment_content":"iokit已经无法导入了，请问老师这种情况你是怎们处理的？","like_count":7},{"had_liked":false,"id":94972,"user_name":"cp_kong","can_delete":false,"product_type":"c1","uid":1454783,"ip_address":"","ucode":"407F50CF9A6588","user_header":"https://static001.geekbang.org/account/avatar/00/16/32/bf/5f4681b6.jpg","comment_is_top":false,"comment_ctime":1557932787,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"14442834675","product_id":100024501,"comment_content":"IOKit Frameworks 目前在iOS项目中无法导入了，要自己新建一个mac项目，然后从那个项目导入，再拷到iOS项目中","like_count":3,"discussions":[{"author":{"id":1147205,"avatar":"https://static001.geekbang.org/account/avatar/00/11/81/45/9aa91b75.jpg","nickname":"矮个子先生😝","note":"","ucode":"2242A457B0E10D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":3308,"discussion_content":"iokit是有,但是没有IOPSKeys.h  和 IOPowerSources.h","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1564390605,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":88764,"user_name":"cocoakc","can_delete":false,"product_type":"c1","uid":1216851,"ip_address":"","ucode":"5785552C55935B","user_header":"https://static001.geekbang.org/account/avatar/00/12/91/53/ebf6a6ac.jpg","comment_is_top":false,"comment_ctime":1555995623,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"14440897511","product_id":100024501,"comment_content":"IOKit framework 是Mac 的框架？参考的这个吗？https:&#47;&#47;blog.csdn.net&#47;uxyheaven&#47;article&#47;details&#47;38167509","like_count":3},{"had_liked":false,"id":153184,"user_name":"繁星mind","can_delete":false,"product_type":"c1","uid":1455441,"ip_address":"","ucode":"387B67F75303AA","user_header":"https://static001.geekbang.org/account/avatar/00/16/35/51/ed895596.jpg","comment_is_top":false,"comment_ctime":1574175983,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10164110575","product_id":100024501,"comment_content":"电量优化 https:&#47;&#47;www.jianshu.com&#47;p&#47;bd2c1ce5c02a","like_count":2},{"had_liked":false,"id":153452,"user_name":"星辰","can_delete":false,"product_type":"c1","uid":1472359,"ip_address":"","ucode":"7BC303BA20C134","user_header":"https://static001.geekbang.org/account/avatar/00/16/77/67/10063e76.jpg","comment_is_top":false,"comment_ctime":1574238006,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1574238006","product_id":100024501,"comment_content":"老师你好，IOKit中拿到的电池电量与UIDevice中获取到的电池电量相比谁的精度更高呢","like_count":0},{"had_liked":false,"id":102839,"user_name":"Alexander","can_delete":false,"product_type":"c1","uid":1459781,"ip_address":"","ucode":"7E1B422B18E212","user_header":"https://static001.geekbang.org/account/avatar/00/16/46/45/570163e0.jpg","comment_is_top":false,"comment_ctime":1560310623,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1560310623","product_id":100024501,"comment_content":"获取电量的for循环直接return了。","like_count":0},{"had_liked":false,"id":93484,"user_name":"月落泉","can_delete":false,"product_type":"c1","uid":1458702,"ip_address":"","ucode":"FC03912F1EBB83","user_header":"https://static001.geekbang.org/account/avatar/00/16/42/0e/21b8025f.jpg","comment_is_top":false,"comment_ctime":1557479380,"is_pvip":false,"replies":[{"id":"35022","content":"https:&#47;&#47;github.com&#47;ming1016&#47;GCDFetchFeed<br>GCDFetchFeed&#47;GCDFetchFeed&#47;GCDFetchFeed&#47;Lib&#47;SMLagMonitor&#47;SMCallStack.m","user_name":"作者回复","user_name_real":"戴铭","uid":"1140280","ctime":1558851877,"ip_address":"","comment_id":93484,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1557479380","product_id":100024501,"comment_content":"smStackOfThread这个方法哪有啊","like_count":0,"discussions":[{"author":{"id":1140280,"avatar":"https://static001.geekbang.org/account/avatar/00/11/66/38/f9999b2b.jpg","nickname":"戴铭","note":"","ucode":"D61E685F962387","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":449652,"discussion_content":"https://github.com/ming1016/GCDFetchFeed\nGCDFetchFeed/GCDFetchFeed/GCDFetchFeed/Lib/SMLagMonitor/SMCallStack.m","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1558851877,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":90703,"user_name":"do .利军","can_delete":false,"product_type":"c1","uid":1472173,"ip_address":"","ucode":"7F51BD387E7056","user_header":"https://static001.geekbang.org/account/avatar/00/16/76/ad/1dbf46f5.jpg","comment_is_top":false,"comment_ctime":1556612674,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1556612674","product_id":100024501,"comment_content":"Stack of thread: 771:<br>CPU used: 34.0 percent<br>user time: 542025 second<br>libsystem_kernel.dylib         0x111e6617a mach_msg_trap + 10<br>libsystem_kernel.dylib         0x111e696a2 thread_get_state + 421<br>Stock                          0x102e35f7e smStackOfThread + 878<br>Stock                          0x102f0fea8 +[SMCPUMonitor updateCPU] + 296<br>Stock                          0x1038d097f -[AppDelegate updateCPUInfo] + 47<br>Foundation                     0x10bd2a135 __NSFireTimer + 83<br>CoreFoundation                 0x10a8613e4 __CFRUNLOOP_IS_CALLING_OUT_TO_A_TIMER_CALLBACK_FUNCTION__ + 20<br>CoreFoundation                 0x10a860ff2 __CFRunLoopDoTimer + 1026<br>CoreFoundation                 0x10a86085a __CFRunLoopDoTimers + 266<br>CoreFoundation                 0x10a85aefc __CFRunLoopRun + 2220<br>CoreFoundation                 0x10a85a302 CFRunLoopRunSpecific + 626<br>GraphicsServices               0x1127d52fe GSEventRunModal + 65<br>UIKitCore                      0x11b5dfba2 UIApplicationMain + 140<br>Stock                          0x103ff37d0 main + 112<br>libdyld.dylib                  0x111b48541 start + 1<br><br>我检测到的信息如上，+后边的数字是什么意思呢？数值越=大，表示占用越多？","like_count":0},{"had_liked":false,"id":90641,"user_name":"好饿早知道送外卖了","can_delete":false,"product_type":"c1","uid":1132304,"ip_address":"","ucode":"AED22DB5BF8FC7","user_header":"https://static001.geekbang.org/account/avatar/00/11/47/10/2d673601.jpg","comment_is_top":false,"comment_ctime":1556593990,"is_pvip":false,"replies":[{"id":"32660","content":"是的","user_name":"作者回复","user_name_real":"戴铭","uid":"1140280","ctime":1556889731,"ip_address":"","comment_id":90641,"utype":1}],"discussion_count":1,"race_medal":2,"score":"1556593990","product_id":100024501,"comment_content":"QOS_CLASS_UTILITY指定block的Qos，是不是和设置队列优先级效果一样？","like_count":0,"discussions":[{"author":{"id":1140280,"avatar":"https://static001.geekbang.org/account/avatar/00/11/66/38/f9999b2b.jpg","nickname":"戴铭","note":"","ucode":"D61E685F962387","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":448606,"discussion_content":"是的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1556889731,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":90183,"user_name":"孤独的码者","can_delete":false,"product_type":"c1","uid":1457459,"ip_address":"","ucode":"0D94261EE3CF34","user_header":"https://static001.geekbang.org/account/avatar/00/16/3d/33/97fde9a0.jpg","comment_is_top":false,"comment_ctime":1556442826,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1556442826","product_id":100024501,"comment_content":"iOS需要强制导入IOKit框架吗","like_count":0},{"had_liked":false,"id":89485,"user_name":"Calabash_Boy","can_delete":false,"product_type":"c1","uid":1453760,"ip_address":"","ucode":"19E4D819792983","user_header":"","comment_is_top":false,"comment_ctime":1556183441,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1556183441","product_id":100024501,"comment_content":"获取电量方法里,为什么循环里有个return呢?那就没有必要写循环了吧","like_count":0},{"had_liked":false,"id":88751,"user_name":"赫小僧","can_delete":false,"product_type":"c1","uid":1454471,"ip_address":"","ucode":"58A77BF59616F5","user_header":"https://static001.geekbang.org/account/avatar/00/16/31/87/1a0377fa.jpg","comment_is_top":false,"comment_ctime":1555991979,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1555991979","product_id":100024501,"comment_content":"请教个问题, dispatch_block_create_with_qos_class 这种方式创建出的队列进行复杂计算的时候对电量有优化. 相关信息可以去哪查看呢?<br><br>","like_count":0},{"had_liked":false,"id":88440,"user_name":"孙启超","can_delete":false,"product_type":"c1","uid":1015696,"ip_address":"","ucode":"8055EFE5B5E6CF","user_header":"https://static001.geekbang.org/account/avatar/00/0f/7f/90/0249f424.jpg","comment_is_top":false,"comment_ctime":1555918673,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1555918673","product_id":100024501,"comment_content":"请问老师一个问题，下面这段代码如何在断点时插入到有问题的方法中：<br>thread_act_array_t threads;<br>mach_msg_type_number_t threadCount = 0;<br>const task_t thisTask = mach_task_self();<br>kern_return_t kr = task_threads(thisTask, &amp;threads, &amp;threadCount);<br>","like_count":0},{"had_liked":false,"id":88038,"user_name":"Ant","can_delete":false,"product_type":"c1","uid":1079563,"ip_address":"","ucode":"07E6374F91F61E","user_header":"https://static001.geekbang.org/account/avatar/00/10/79/0b/4346a253.jpg","comment_is_top":false,"comment_ctime":1555821609,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1555821609","product_id":100024501,"comment_content":"受教了","like_count":0},{"had_liked":false,"id":87829,"user_name":"黄昏","can_delete":false,"product_type":"c1","uid":1038157,"ip_address":"","ucode":"37F8BE14148608","user_header":"https://static001.geekbang.org/account/avatar/00/0f/d7/4d/d74ffb1f.jpg","comment_is_top":false,"comment_ctime":1555725852,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1555725852","product_id":100024501,"comment_content":"cpu使用量确实是耗电的重大原因。不合理的动画可能导致cpu暴涨，电量损耗巨大。","like_count":1}]}