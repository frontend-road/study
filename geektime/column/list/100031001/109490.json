{"id":109490,"title":"11 | 提到生命周期，我们是在说什么？","content":"<p>你好，我是陈航。今天，我要和你分享的主题是Flutter中的生命周期是什么。</p><p>在上一篇文章中，我们从常见的StatefulWidget的“万金油”误区出发，一起回顾了Widget的UI更新机制。</p><p>通过父Widget初始化时传入的静态配置，StatelessWidget就能完全控制其静态展示。而StatefulWidget，还需要借助于State对象，在特定的阶段来处理用户的交互或其内部数据的变化，并体现在UI上。这些特定的阶段，就涵盖了一个组件从加载到卸载的全过程，即生命周期。与iOS的ViewController、Android的Activity一样，Flutter中的Widget也存在生命周期，并且通过State来体现。</p><p>而App则是一个特殊的Widget。除了需要处理视图显示的各个阶段（即视图的生命周期）之外，还需要应对应用从启动到退出所经历的各个状态（App的生命周期）。</p><p>对于开发者来说，无论是普通Widget（的State）还是App，框架都给我们提供了生命周期的回调，可以让我们选择恰当的时机，做正确的事儿。所以，在对生命周期有了深入理解之后，我们可以写出更加连贯流畅、体验优良的程序。</p><!-- [[[read_end]]] --><p>那么，今天我就分别从Widget（的State）和App这两个维度，与你介绍它们的生命周期。</p><h2>State生命周期</h2><p>State的生命周期，指的是在用户参与的情况下，其关联的Widget所经历的，从创建到显示再到更新最后到停止，直至销毁等各个过程阶段。</p><p>这些不同的阶段涉及到特定的任务处理，因此为了写出一个体验和性能良好的控件，正确理解State的生命周期至关重要。</p><p>State的生命周期流程，如图1所示：</p><p><img src=\"https://static001.geekbang.org/resource/image/bb/84/bba88ebb44b7fdd6735f3ddb41106784.png?wh=1282*954\" alt=\"\"></p><center><span class=\"reference\">图1 State生命周期图</span></center><p>可以看到，State的生命周期可以分为3个阶段：创建（插入视图树）、更新（在视图树中存在）、销毁（从视图树中移除）。接下来，我们一起看看每一个阶段的具体流程。</p><h3>创建</h3><p>State初始化时会依次执行 ：构造方法 -&gt; initState -&gt; didChangeDependencies -&gt; build，随后完成页面渲染。</p><p>我们来看一下初始化过程中每个方法的意义。</p><ul>\n<li>构造方法是State生命周期的起点，Flutter会通过调用StatefulWidget.createState() 来创建一个State。我们可以通过构造方法，来接收父Widget传递的初始化UI配置数据。这些配置数据，决定了Widget最初的呈现效果。</li>\n<li>initState，会在State对象被插入视图树的时候调用。这个函数在State的生命周期中只会被调用一次，所以我们可以在这里做一些初始化工作，比如为状态变量设定默认值。</li>\n<li>didChangeDependencies则用来专门处理State对象依赖关系变化，会在initState() 调用结束后，被Flutter调用。</li>\n<li>build，作用是构建视图。经过以上步骤，Framework认为State已经准备好了，于是调用build。我们需要在这个函数中，根据父Widget传递过来的初始化配置数据，以及State的当前状态，创建一个Widget然后返回。</li>\n</ul><h3>更新</h3><p>Widget的状态更新，主要由3个方法触发：setState、didchangeDependencies与didUpdateWidget。</p><p>接下来，我和你分析下这三个方法分别会在什么场景下调用。</p><ul>\n<li>setState：我们最熟悉的方法之一。当状态数据发生变化时，我们总是通过调用这个方法告诉Flutter：“我这儿的数据变啦，请使用更新后的数据重建UI！”</li>\n<li>didChangeDependencies：State对象的依赖关系发生变化后，Flutter会回调这个方法，随后触发组件构建。哪些情况下State对象的依赖关系会发生变化呢？典型的场景是，系统语言Locale或应用主题改变时，系统会通知State执行didChangeDependencies回调方法。</li>\n<li>didUpdateWidget：当Widget的配置发生变化时，比如，父Widget触发重建（即父Widget的状态发生变化时），热重载时，系统会调用这个函数。</li>\n</ul><p>一旦这三个方法被调用，Flutter随后就会销毁老Widget，并调用build方法重建Widget。</p><h3>销毁</h3><p>组件销毁相对比较简单。比如组件被移除，或是页面销毁的时候，系统会调用deactivate和dispose这两个方法，来移除或销毁组件。</p><p>接下来，我们一起看一下它们的具体调用机制：</p><ul>\n<li>当组件的可见状态发生变化时，deactivate函数会被调用，这时State会被暂时从视图树中移除。值得注意的是，页面切换时，由于State对象在视图树中的位置发生了变化，需要先暂时移除后再重新添加，重新触发组件构建，因此这个函数也会被调用。</li>\n<li>当State被永久地从视图树中移除时，Flutter会调用dispose函数。而一旦到这个阶段，组件就要被销毁了，所以我们可以在这里进行最终的资源释放、移除监听、清理环境，等等。</li>\n</ul><p>如图2所示，左边部分展示了当父Widget状态发生变化时，父子双方共同的生命周期；而中间和右边部分则描述了页面切换时，两个关联的Widget的生命周期函数是如何响应的。</p><p><img src=\"https://static001.geekbang.org/resource/image/72/d8/72e066a4981e0e2381b1dab6e61307d8.png?wh=1518*592\" alt=\"\"></p><center><span class=\"reference\">图2 几种常见场景下State生命周期图</span></center><p>我准备了一张表格，从功能，调用时机和调用次数的维度总结了这些方法，帮助你去理解、记忆。</p><p><img src=\"https://static001.geekbang.org/resource/image/aa/bc/aacfcfdb80038874251aa8ad93930abc.png?wh=937*533\" alt=\"\"></p><center><span class=\"reference\">图3 State生命周期中的方法调用对比</span></center><p>另外，我强烈建议你打开自己的IDE，在应用模板中增加以上回调函数并添加打印代码，多运行几次看看各个函数的执行顺序，从而加深对State生命周期的印象。毕竟，实践出真知。</p><h2>App生命周期</h2><p>视图的生命周期，定义了视图的加载到构建的全过程，其回调机制能够确保我们可以根据视图的状态选择合适的时机做恰当的事情。而App的生命周期，则定义了App从启动到退出的全过程。</p><p>在原生Android、iOS开发中，有时我们需要在对应的App生命周期事件中做相应处理，比如App从后台进入前台、从前台退到后台，或是在UI绘制完成后做一些处理。</p><p>这样的需求，在原生开发中，我们可以通过重写Activity、ViewController生命周期回调方法，或是注册应用程序的相关通知，来监听App的生命周期并做相应的处理。而在Flutter中，我们可以利用<strong>WidgetsBindingObserver</strong>类，来实现同样的需求。</p><p>接下来，我们就来看看具体如何实现这样的需求。</p><p>首先，我们来看看WidgetsBindingObserver中具体有哪些回调函数：</p><pre><code>abstract class WidgetsBindingObserver {\n  //页面pop\n  Future&lt;bool&gt; didPopRoute() =&gt; Future&lt;bool&gt;.value(false);\n  //页面push\n  Future&lt;bool&gt; didPushRoute(String route) =&gt; Future&lt;bool&gt;.value(false);\n  //系统窗口相关改变回调，如旋转\n  void didChangeMetrics() { }\n  //文本缩放系数变化\n  void didChangeTextScaleFactor() { }\n  //系统亮度变化\n  void didChangePlatformBrightness() { }\n  //本地化语言变化\n  void didChangeLocales(List&lt;Locale&gt; locale) { }\n  //App生命周期变化\n  void didChangeAppLifecycleState(AppLifecycleState state) { }\n  //内存警告回调\n  void didHaveMemoryPressure() { }\n  //Accessibility相关特性回调\n  void didChangeAccessibilityFeatures() {}\n}\n</code></pre><p>可以看到，WidgetsBindingObserver这个类提供的回调函数非常丰富，常见的屏幕旋转、屏幕亮度、语言变化、内存警告都可以通过这个实现进行回调。我们通过给WidgetsBinding的单例对象设置监听器，就可以监听对应的回调方法。</p><p>考虑到其他的回调相对简单，你可以参考<a href=\"https://api.flutter.dev/flutter/widgets/WidgetsBindingObserver-class.html\">官方文档</a>，对照着进行练习。因此，我今天主要和你分享App生命周期的回调didChangeAppLifecycleState，和帧绘制回调addPostFrameCallback与addPersistentFrameCallback。</p><h3>生命周期回调</h3><p>didChangeAppLifecycleState回调函数中，有一个参数类型为AppLifecycleState的枚举类，这个枚举类是Flutter对App生命周期状态的封装。它的常用状态包括resumed、inactive、paused这三个。</p><ul>\n<li>resumed：可见的，并能响应用户的输入。</li>\n<li>inactive：处在不活动状态，无法处理用户响应。</li>\n<li>paused：不可见并不能响应用户的输入，但是在后台继续活动中。</li>\n</ul><p>这里，我来和你分享一个实际案例。</p><p>在下面的代码中，我们在initState时注册了监听器，在didChangeAppLifecycleState回调方法中打印了当前的App状态，最后在dispose时把监听器移除：</p><pre><code>class _MyHomePageState extends State&lt;MyHomePage&gt;  with WidgetsBindingObserver{//这里你可以再回顾下，第7篇文章“函数、类与运算符：Dart是如何处理信息的？”中关于Mixin的内容\n...\n  @override\n  @mustCallSuper\n  void initState() {\n    super.initState();\n    WidgetsBinding.instance.addObserver(this);//注册监听器\n  }\n  @override\n  @mustCallSuper\n  void dispose(){\n    super.dispose();\n    WidgetsBinding.instance.removeObserver(this);//移除监听器\n  }\n  @override\n  void didChangeAppLifecycleState(AppLifecycleState state) async {\n    print(&quot;$state&quot;);\n    if (state == AppLifecycleState.resumed) {\n      //do sth\n    }\n  }\n}\n</code></pre><p>我们试着切换一下前、后台，观察控制台输出的App状态，可以发现：</p><ul>\n<li>从后台切入前台，控制台打印的App生命周期变化如下: AppLifecycleState.paused-&gt;AppLifecycleState.inactive-&gt;AppLifecycleState.resumed；</li>\n<li>从前台退回后台，控制台打印的App生命周期变化则变成了：AppLifecycleState.resumed-&gt;AppLifecycleState.inactive-&gt;AppLifecycleState.paused。</li>\n</ul><p>可以看到，App前后台切换过程中打印出的状态是完全符合预期的。</p><p><img src=\"https://static001.geekbang.org/resource/image/28/e6/2880ffdbe3c5df3552c0b22c34157ae6.png?wh=622*462\" alt=\"\"></p><center><span class=\"reference\">图4 App切换前后台状态变化示意</span></center><h3>帧绘制回调</h3><p>除了需要监听App的生命周期回调做相应的处理之外，有时候我们还需要在组件渲染之后做一些与显示安全相关的操作。</p><p>在iOS开发中，我们可以通过dispatch_async(dispatch_get_main_queue(),^{…})方法，让操作在下一个RunLoop执行；而在Android开发中，我们可以通过View.post()插入消息队列，来保证在组件渲染后进行相关操作。</p><p>其实，<strong>在Flutter中实现同样的需求会更简单</strong>：依然使用万能的WidgetsBinding来实现。</p><p>WidgetsBinding提供了单次Frame绘制回调，以及实时Frame绘制回调两种机制，来分别满足不同的需求：</p><ul>\n<li>单次Frame绘制回调，通过addPostFrameCallback实现。它会在当前Frame绘制完成后进行进行回调，并且只会回调一次，如果要再次监听则需要再设置一次。</li>\n</ul><pre><code>WidgetsBinding.instance.addPostFrameCallback((_){\n    print(&quot;单次Frame绘制回调&quot;);//只回调一次\n  });\n</code></pre><ul>\n<li>实时Frame绘制回调，则通过addPersistentFrameCallback实现。这个函数会在每次绘制Frame结束后进行回调，可以用做FPS监测。</li>\n</ul><pre><code>WidgetsBinding.instance.addPersistentFrameCallback((_){\n  print(&quot;实时Frame绘制回调&quot;);//每帧都回调\n});\n</code></pre><h2>总结</h2><p>在今天这篇文章中，我和你介绍了State和App的生命周期，这是Flutter给我们提供的，感知Widget和应用在不同阶段状态变化的回调。</p><p>首先，我带你重新认识了Widget生命周期的实际承载者State。我将State的生命周期划分为了创建（插入视图树）、更新（在视图树中存在）、销毁（从视图树种移除）这3个阶段，并为你介绍了每个阶段中涉及的关键方法，希望你能够深刻理解Flutter组件从加载到卸载的完整周期。</p><p>然后，通过与原生Android、iOS平台能力的对比，以及查看WidgetsBindingObserver源码的方式，我与你讲述了Flutter常用的生命周期状态切换机制。希望你能掌握Flutter的App生命周期监听方法，并理解Flutter常用的生命周期状态切换机制。</p><p>最后，我和你一起学习了Flutter帧绘制回调机制，理解了单次Frame绘制回调与实时Frame绘制回调的异同与使用场景。</p><p>为了能够精确地控制Widget，Flutter提供了很多状态回调，所以今天这一篇文章，涉及到的方法有些多。但，<strong>只要你分别记住创建、更新与销毁这三条主线的调用规则，就一定能把这些方法的调用顺序串起来，并能在实际开发中运用正确的方法去感知状态变更，写出合理的组件。</strong></p><p>我把今天分享所涉及的全部知识点打包成了一个<a href=\"https://github.com/cyndibaby905/11_Flutter_lifecycle\">小项目</a>，你可以下载后在工程中实际运行，并对照着今天的课程学习，体会在不同场景下这些函数的调用时机。</p><h2>思考题</h2><p>最后，请你思考下这两个问题：</p><ol>\n<li>构造方法与initState函数在State的生命周期中都只会被调用一次，也大都用于完成一些初始化的工作。根据我们今天的学习，你能否举出例子，比如哪些操作适合放在构造方法，哪些操作适合放在initState，而哪些操作必须放在initState。</li>\n<li>通过didChangeDependencies触发Widget重建时，父子Widget之间的生命周期函数调用时序是怎样的？</li>\n</ol><p>欢迎你在评论区给我留言分享你的观点，我会在下一篇文章中等待你！感谢你的收听，也欢迎你把这篇文章分享给更多的朋友一起阅读。</p><p></p>","comments":[{"had_liked":false,"id":116409,"user_name":"张简","can_delete":false,"product_type":"c1","uid":1453513,"ip_address":"","ucode":"CF3F30D412FF78","user_header":"https://static001.geekbang.org/account/avatar/00/16/2d/c9/0d8983f3.jpg","comment_is_top":false,"comment_ctime":1563847475,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"104643062579","product_id":100031001,"comment_content":"42节和43节其实可以提前讲讲，大多数开发者都是这种混合接入方式，和具体开发无关。首先遇到的就是混合接入问题。","like_count":25,"discussions":[{"author":{"id":1597735,"avatar":"","nickname":"段段","note":"","ucode":"5F123123CAE79C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":2665,"discussion_content":"不一定哦,我们现在正拿一个小的项目练手呢,all in","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1563849948,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":116471,"user_name":"许童童","can_delete":false,"product_type":"c1","uid":1003005,"ip_address":"","ucode":"4B799C0C6BC678","user_header":"https://static001.geekbang.org/account/avatar/00/0f/4d/fd/0aa0e39f.jpg","comment_is_top":false,"comment_ctime":1563853858,"is_pvip":false,"replies":[{"id":"42591","content":"赞","user_name":"作者回复","user_name_real":"土豆盒子","uid":"1088582","ctime":1563856278,"ip_address":"","comment_id":116471,"utype":1}],"discussion_count":1,"race_medal":0,"score":"91758167074","product_id":100031001,"comment_content":"在构造函数中Widget还未生成，所以只能做一些参数传入的处理，initState中可以做初始化State的变量的操作。","like_count":22,"discussions":[{"author":{"id":1088582,"avatar":"https://static001.geekbang.org/account/avatar/00/10/9c/46/0b29b188.jpg","nickname":"土豆盒子","note":"","ucode":"A910F88CAC0A87","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":459558,"discussion_content":"赞","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1563856278,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":127776,"user_name":"这得从我捡到一个鼠标垫开始说起","can_delete":false,"product_type":"c1","uid":1272321,"ip_address":"","ucode":"2FF4347B4E7A9B","user_header":"https://static001.geekbang.org/account/avatar/00/13/6a/01/d9cb531d.jpg","comment_is_top":false,"comment_ctime":1566791366,"is_pvip":true,"replies":[{"id":"47643","content":"你理解错了，我来帮你梳理下：<br>1.从前台退居后台，打印的是inactive-&gt;paused，但你忘了它之前的状态是resumed；<br>2.从后台进入前台，打印的是inactive-&gt;resumed，但你忘了它之前的状态是paused","user_name":"作者回复","user_name_real":"土豆盒子","uid":"1088582","ctime":1566892832,"ip_address":"","comment_id":127776,"utype":1}],"discussion_count":3,"race_medal":0,"score":"74581235398","product_id":100031001,"comment_content":"实际上打印监听的时候发现并不是文中所描述的那样。<br>从前台退居后台的时候执行inactive-&gt;paused<br>从后台进入前台的时候执行inactive-&gt;resumed<br>paused和resumed不会同时执行，是不是文中有错？<br>AppLifecycleState<br>","like_count":17,"discussions":[{"author":{"id":1088582,"avatar":"https://static001.geekbang.org/account/avatar/00/10/9c/46/0b29b188.jpg","nickname":"土豆盒子","note":"","ucode":"A910F88CAC0A87","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":464651,"discussion_content":"你理解错了，我来帮你梳理下：\n1.从前台退居后台，打印的是inactive-&amp;gt;paused，但你忘了它之前的状态是resumed；\n2.从后台进入前台，打印的是inactive-&amp;gt;resumed，但你忘了它之前的状态是paused","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566892832,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1023750,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/9f/06/287d77dd.jpg","nickname":"承香墨影","note":"","ucode":"4D6A4D6E1ED29F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":18503,"discussion_content":"你俩说的一个事儿，取决于是否要标识当前状态，作者这里说的是 「控制台打印」，实际不会打印当前状态，所以会有歧义。换个说法大家都好理解，例如从前台退到后台：从 resumed 经过 inactive 到达 paused。","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1569062564,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1044793,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/f1/39/768503ad.jpg","nickname":"钱洋彪","note":"","ucode":"84FBB0E48FD885","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":211606,"discussion_content":"我发现下拉通知栏时状态就很奇怪了，初始是resumed，然后会变成inactive，下拉结束后又会立马从resumed变为inactive，即下拉通知栏时整个状态是resumed->inactive-> resumed-> inactive","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584869730,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":117058,"user_name":"jia58960","can_delete":false,"product_type":"c1","uid":1485065,"ip_address":"","ucode":"DA8D947BABBD8A","user_header":"https://static001.geekbang.org/account/avatar/00/16/a9/09/fd67d691.jpg","comment_is_top":false,"comment_ctime":1563960671,"is_pvip":true,"replies":[{"id":"42790","content":"因为State在视图树的相对位置变了","user_name":"作者回复","user_name_real":"土豆盒子","uid":"1088582","ctime":1563964452,"ip_address":"","comment_id":117058,"utype":1}],"discussion_count":4,"race_medal":0,"score":"35923699039","product_id":100031001,"comment_content":"为啥navigator.push()之后当前的widget deactivate了还要build一次？对老师给的工程代码验证了确实是这样，还请老师解释下","like_count":9,"discussions":[{"author":{"id":1088582,"avatar":"https://static001.geekbang.org/account/avatar/00/10/9c/46/0b29b188.jpg","nickname":"土豆盒子","note":"","ucode":"A910F88CAC0A87","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":459796,"discussion_content":"因为State在视图树的相对位置变了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1563964452,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1733144,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/72/18/d9e2fcf9.jpg","nickname":"我来人间一趟","note":"","ucode":"15CAF96EF899E2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":289953,"discussion_content":"我理解是执行build才会告知element当前节点的_dirt状态为false 把当前节点从组件树上删除","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1594279055,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1001974,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/49/f6/d274a39c.jpg","nickname":"ChengQian","note":"","ucode":"33AE99663C5228","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":194475,"discussion_content":"也就是说在做跳转时，也会更新视图树？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1583223666,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1194659,"avatar":"https://static001.geekbang.org/account/avatar/00/12/3a/a3/47a0c3c6.jpg","nickname":"zhangls","note":"","ucode":"E3E2840EA4BDB1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":2915,"discussion_content":"可以的，解决了我的疑问","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1564037779,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":116887,"user_name":"Geek_b09541","can_delete":false,"product_type":"c1","uid":1389530,"ip_address":"","ucode":"A2DCC8F19AA08D","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/YBA5YMSKhTNnKZlQW2Gk4mL0icBr28piadtbYmASf9PibjYxuvhzibOOqpsNuvKuS6qtTcA7eSvZM9SVw3y0VpdPbg/132","comment_is_top":false,"comment_ctime":1563934250,"is_pvip":false,"replies":[{"id":"42869","content":"不推荐买书，如果想要快速了解一些核心Feature可以看看<br>官方的cookbook： https:&#47;&#47;flutter.dev&#47;docs&#47;cookbook和wendux写的Flutter实战：https:&#47;&#47;book.flutterchina.club&#47;<br>","user_name":"作者回复","user_name_real":"土豆盒子","uid":"1088582","ctime":1563982044,"ip_address":"","comment_id":116887,"utype":1}],"discussion_count":2,"race_medal":0,"score":"35923672618","product_id":100031001,"comment_content":"大牛，你好，我想买一本关于flutter的工具书，麻烦推荐一本<br>","like_count":9,"discussions":[{"author":{"id":1088582,"avatar":"https://static001.geekbang.org/account/avatar/00/10/9c/46/0b29b188.jpg","nickname":"土豆盒子","note":"","ucode":"A910F88CAC0A87","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":459720,"discussion_content":"不推荐买书，如果想要快速了解一些核心Feature可以看看\n官方的cookbook： https://flutter.dev/docs/cookbook和wendux写的Flutter实战：https://book.flutterchina.club/\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1563982044,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1389530,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/YBA5YMSKhTNnKZlQW2Gk4mL0icBr28piadtbYmASf9PibjYxuvhzibOOqpsNuvKuS6qtTcA7eSvZM9SVw3y0VpdPbg/132","nickname":"Geek_b09541","note":"","ucode":"A2DCC8F19AA08D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":4619,"discussion_content":"多谢指教","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1565601355,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":171546,"user_name":"madroid","can_delete":false,"product_type":"c1","uid":1017346,"ip_address":"","ucode":"C8B694DD6813F0","user_header":"https://static001.geekbang.org/account/avatar/00/0f/86/02/e52cb376.jpg","comment_is_top":false,"comment_ctime":1578965229,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"23053801709","product_id":100031001,"comment_content":"App 生命周期中有没有类似 Android Application.onCreate() 的回调，在这里做App初始化的一些操作。或者 APP 初始化的操作应该放在哪里？","like_count":5,"discussions":[{"author":{"id":1561839,"avatar":"https://static001.geekbang.org/account/avatar/00/17/d4/ef/da3d4b6b.jpg","nickname":"aaronp","note":"","ucode":"0C0B49CA1CE24B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":227275,"discussion_content":"直接在main方法里操作就行","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1586481783,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":141341,"user_name":"离尘不离人คิดถึง","can_delete":false,"product_type":"c1","uid":1111830,"ip_address":"","ucode":"89F0FBDB0DB6CC","user_header":"https://static001.geekbang.org/account/avatar/00/10/f7/16/20562cdf.jpg","comment_is_top":false,"comment_ctime":1571142108,"is_pvip":false,"replies":[{"id":"57700","content":"WidgetsBinding是一个连接上层Widget回调与底层Flutter引擎实现的一个抽象胶水类，在不同的平台有不同的实现（比如在单元测试中是TestWidgetsFlutterBinding，在UI开发中是WidgetsFlutterBinding），所以我们需要在代码中用WidgetsBinding.instance获取特定的实例，而WidgetsBindingObserver只是一个接口而已<br>","user_name":"作者回复","user_name_real":"土豆盒子","uid":"1088582","ctime":1573446395,"ip_address":"","comment_id":141341,"utype":1}],"discussion_count":2,"race_medal":0,"score":"23045978588","product_id":100031001,"comment_content":"`width WidgetsBindingObserver` 这里没看懂， 明明用的是 with `WidgetsBindingObserver`，但是代码却使用的是 `WidgetsBinding`，查看源码，发现 `WidgetsBindingObserver` 只是 `binding.dart` 里面的一个抽象类；老师这里能解答下吗","like_count":5,"discussions":[{"author":{"id":1088582,"avatar":"https://static001.geekbang.org/account/avatar/00/10/9c/46/0b29b188.jpg","nickname":"土豆盒子","note":"","ucode":"A910F88CAC0A87","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":470722,"discussion_content":"WidgetsBinding是一个连接上层Widget回调与底层Flutter引擎实现的一个抽象胶水类，在不同的平台有不同的实现（比如在单元测试中是TestWidgetsFlutterBinding，在UI开发中是WidgetsFlutterBinding），所以我们需要在代码中用WidgetsBinding.instance获取特定的实例，而WidgetsBindingObserver只是一个接口而已\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573446395,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1406113,"avatar":"https://static001.geekbang.org/account/avatar/00/15/74/a1/613e4b09.jpg","nickname":"Mars雪","note":"","ucode":"963592C6BB6FF6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":143352,"discussion_content":"WidgetsBinding.instance.xxxx","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579502246,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":116463,"user_name":"许童童","can_delete":false,"product_type":"c1","uid":1003005,"ip_address":"","ucode":"4B799C0C6BC678","user_header":"https://static001.geekbang.org/account/avatar/00/0f/4d/fd/0aa0e39f.jpg","comment_is_top":false,"comment_ctime":1563852976,"is_pvip":false,"replies":[{"id":"42652","content":"Gradle默认每次编译都会resolve dependencies，每次都会去进行网络请求。如果你那边访问jCenter很慢，这个步骤就卡住了。<br><br>你可以临时在Project Preferences的Gradle那里启用Offline work，不过新增依赖之后你需要在把这个设置改回来","user_name":"作者回复","user_name_real":"土豆盒子","uid":"1088582","ctime":1563895755,"ip_address":"","comment_id":116463,"utype":1}],"discussion_count":1,"race_medal":0,"score":"18743722160","product_id":100031001,"comment_content":"老师你好，为什么项目启动时Resolving dependencies和Running Gradle task &#39;assembleDebug&#39;阶段要很长的时间，大概2分钟。有什么办法可以加快速度吗？","like_count":4,"discussions":[{"author":{"id":1088582,"avatar":"https://static001.geekbang.org/account/avatar/00/10/9c/46/0b29b188.jpg","nickname":"土豆盒子","note":"","ucode":"A910F88CAC0A87","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":459553,"discussion_content":"Gradle默认每次编译都会resolve dependencies，每次都会去进行网络请求。如果你那边访问jCenter很慢，这个步骤就卡住了。\n\n你可以临时在Project Preferences的Gradle那里启用Offline work，不过新增依赖之后你需要在把这个设置改回来","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1563895755,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":247438,"user_name":"知","can_delete":false,"product_type":"c1","uid":1329786,"ip_address":"","ucode":"458FC9A575396A","user_header":"https://static001.geekbang.org/account/avatar/00/14/4a/7a/dc4f0ea2.jpg","comment_is_top":false,"comment_ctime":1599709526,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"10189644118","product_id":100031001,"comment_content":"flutter1.14.7 之后，使用Navigator.push()时，当前的widget已经不会再调deactivate()和build()了，从上一个页面回来时，也都不会调用。","like_count":3,"discussions":[{"author":{"id":1273400,"avatar":"https://static001.geekbang.org/account/avatar/00/13/6e/38/3f5caa9a.jpg","nickname":"藍舰  VIP","note":"","ucode":"7281033615ACD3","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":373029,"discussion_content":"实践了下 是这样","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1620573892,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1329786,"avatar":"https://static001.geekbang.org/account/avatar/00/14/4a/7a/dc4f0ea2.jpg","nickname":"知","note":"","ucode":"458FC9A575396A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":304930,"discussion_content":"https://github.com/flutter/flutter/issues/50147","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1599716517,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":116890,"user_name":"Geek_60d7a7","can_delete":false,"product_type":"c1","uid":1613692,"ip_address":"","ucode":"076BD229E3136F","user_header":"","comment_is_top":false,"comment_ctime":1563934586,"is_pvip":false,"replies":[{"id":"42870","content":"Mixin就是以非继承的方式实现代码复用的一种机制而已呀","user_name":"作者回复","user_name_real":"土豆盒子","uid":"1088582","ctime":1563982504,"ip_address":"","comment_id":116890,"utype":1}],"discussion_count":2,"race_medal":0,"score":"10153869178","product_id":100031001,"comment_content":"关于dart的mixin，老师能讲讲么，尤其是mixin on，看了好多资料都还不是很清晰…","like_count":3,"discussions":[{"author":{"id":1088582,"avatar":"https://static001.geekbang.org/account/avatar/00/10/9c/46/0b29b188.jpg","nickname":"土豆盒子","note":"","ucode":"A910F88CAC0A87","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":459721,"discussion_content":"Mixin就是以非继承的方式实现代码复用的一种机制而已呀","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1563982504,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1455861,"avatar":"https://static001.geekbang.org/account/avatar/00/16/36/f5/a10bfe05.jpg","nickname":"神巅巅","note":"","ucode":"8A5929FC940134","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":14490,"discussion_content":"感觉就像是iOS中声明实现require的protocol一样，不知道理解对不对","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1568766458,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":279086,"user_name":"Geek_24cc07","can_delete":false,"product_type":"c1","uid":2445568,"ip_address":"","ucode":"F5C2575C555EA3","user_header":"","comment_is_top":false,"comment_ctime":1613616048,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"5908583344","product_id":100031001,"comment_content":"push到下一个页面，为啥当前页面调用了 deactivate 后，还要调用build？","like_count":1,"discussions":[{"author":{"id":2085499,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/d2/7b/947be15e.jpg","nickname":"初阳","note":"","ucode":"995961D0F2C136","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":409756,"discussion_content":"这个问题，上面有人提问过并且老师回复了","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1635503392,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":197474,"user_name":"偷心人","can_delete":false,"product_type":"c1","uid":1190822,"ip_address":"","ucode":"751272B792FD95","user_header":"https://static001.geekbang.org/account/avatar/00/12/2b/a6/a851deb4.jpg","comment_is_top":false,"comment_ctime":1585380906,"is_pvip":false,"discussion_count":3,"race_medal":0,"score":"5880348202","product_id":100031001,"comment_content":"今天试了一下生命周期的监测  with WidgetsBindingObserver<br>发现从后台到前台 只有AppLifecycleState.paused-&gt;AppLifecycleState.resumed<br><br>前台到后台AppLifecycleState.resumed-&gt;AppLifecycleState.inactive-&gt;AppLifecycleState.paused<br><br>环境   Flutter (Channel master, v1.16.3-pre.30, on Mac OS X 10.15.3 19D76, locale<br>    zh-Hans-CN)","like_count":1,"discussions":[{"author":{"id":2039259,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/1d/db/d459037e.jpg","nickname":"bluewoods","note":"","ucode":"E6B5813AF5AD14","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":296408,"discussion_content":"是不是新版本又有一些变化了？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1596533915,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1175208,"avatar":"https://static001.geekbang.org/account/avatar/00/11/ee/a8/9be86cdc.jpg","nickname":"穿靴子的喵先生","note":"","ucode":"D4E0F03F8CDE29","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":271324,"discussion_content":"有结论了吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1590116638,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1329855,"avatar":"https://static001.geekbang.org/account/avatar/00/14/4a/bf/61ae9997.jpg","nickname":"旭日","note":"","ucode":"CAE6A83E5295FE","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":246927,"discussion_content":"我也是\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1587786911,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":151786,"user_name":"承香墨影","can_delete":false,"product_type":"c1","uid":1023750,"ip_address":"","ucode":"4D6A4D6E1ED29F","user_header":"https://static001.geekbang.org/account/avatar/00/0f/9f/06/287d77dd.jpg","comment_is_top":false,"comment_ctime":1573791872,"is_pvip":false,"replies":[{"id":"58781","content":"表示程序被暂时挂起，这是操作系统底层暴露的状态，不是所有的平台都有（比如iOS就没有），所以这个状态可以理解成基本没用","user_name":"作者回复","user_name_real":"土豆盒子","uid":"1088582","ctime":1574134902,"ip_address":"","comment_id":151786,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5868759168","product_id":100031001,"comment_content":"您好，有问题请教。<br>AppLifecycleState 中还有一个 suspending 的状态，这个状态表示什么意义？会在什么场景下触发？","like_count":2,"discussions":[{"author":{"id":1088582,"avatar":"https://static001.geekbang.org/account/avatar/00/10/9c/46/0b29b188.jpg","nickname":"土豆盒子","note":"","ucode":"A910F88CAC0A87","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":474615,"discussion_content":"表示程序被暂时挂起，这是操作系统底层暴露的状态，不是所有的平台都有（比如iOS就没有），所以这个状态可以理解成基本没用","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574134902,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":139349,"user_name":"Carlo","can_delete":false,"product_type":"c1","uid":1001557,"ip_address":"","ucode":"7C3FF23B597506","user_header":"https://static001.geekbang.org/account/avatar/00/0f/48/55/48de9a24.jpg","comment_is_top":false,"comment_ctime":1570617439,"is_pvip":false,"replies":[{"id":"54816","content":"比如你要等界面上的某个元素出现之后，才认为视图渲染完成，就可以用这个机制。具体可以参考40节分享","user_name":"作者回复","user_name_real":"土豆盒子","uid":"1088582","ctime":1571284592,"ip_address":"","comment_id":139349,"utype":1}],"discussion_count":2,"race_medal":0,"score":"5865584735","product_id":100031001,"comment_content":"除了需要监听 App 的生命周期回调做相应的处理之外，有时候我们还需要在组件渲染之后做一些与显示安全相关的操作。<br><br>能具体解释一下这个是什么意思么？比如说什么是显示安全相关的操作？<br>","like_count":2,"discussions":[{"author":{"id":1088582,"avatar":"https://static001.geekbang.org/account/avatar/00/10/9c/46/0b29b188.jpg","nickname":"土豆盒子","note":"","ucode":"A910F88CAC0A87","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":469903,"discussion_content":"比如你要等界面上的某个元素出现之后，才认为视图渲染完成，就可以用这个机制。具体可以参考40节分享","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571284592,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1795371,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/65/2b/446ef7b6.jpg","nickname":"许先森","note":"","ucode":"1F42D4A6B5C6AF","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":305719,"discussion_content":"比如安卓中获取一个view的长宽等属性，需要在view渲染完毕后才能正确的获取，否则其他时机可能获取不到或者获取的不准确。那么这个安全的正确获取的时机就可以用view.post方法。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1600068583,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":127898,"user_name":"咖啡凉了","can_delete":false,"product_type":"c1","uid":1251569,"ip_address":"","ucode":"E41F3C8715AA6B","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/ODicJCxia34EqbeBCwQeyWxcc0F25RP9fnI1r3o1Nt7S3ibRCvQI6zUlUKORL0kZic0PmCGX912bCZ5ERXPE785ZTw/132","comment_is_top":false,"comment_ctime":1566806688,"is_pvip":false,"replies":[{"id":"47621","content":"参考21节“路由与导航”里面提到的页面关闭参数","user_name":"作者回复","user_name_real":"土豆盒子","uid":"1088582","ctime":1566887644,"ip_address":"","comment_id":127898,"utype":1}],"discussion_count":2,"race_medal":0,"score":"5861773984","product_id":100031001,"comment_content":"在iOS中，我们会用到viewWillAppear中实现方法刷新上一个页面的数据。Flutter中有类似的生命周期吗，怎么解决子页面数据提交后，返回到上一个页面刷新视图","like_count":1,"discussions":[{"author":{"id":1088582,"avatar":"https://static001.geekbang.org/account/avatar/00/10/9c/46/0b29b188.jpg","nickname":"土豆盒子","note":"","ucode":"A910F88CAC0A87","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":464699,"discussion_content":"参考21节“路由与导航”里面提到的页面关闭参数","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566887644,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1406113,"avatar":"https://static001.geekbang.org/account/avatar/00/15/74/a1/613e4b09.jpg","nickname":"Mars雪","note":"","ucode":"963592C6BB6FF6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":143356,"discussion_content":"通过在跳转之后    .then(接收跳转退回的页面传递的数据),\n跳转到的界面退出时,添加参数值,该值会传递到上个界面.  then 里","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579502464,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":282458,"user_name":"Geek_763c44","can_delete":false,"product_type":"c1","uid":2463529,"ip_address":"","ucode":"BEDDC86886EA2B","user_header":"","comment_is_top":false,"comment_ctime":1615260418,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1615260418","product_id":100031001,"comment_content":"flutter有没有类似android的Log.e(&quot;&quot;,&quot;&quot;)的方法，这样可以分级和根据键打印日志","like_count":0},{"had_liked":false,"id":255800,"user_name":"老花","can_delete":false,"product_type":"c1","uid":1671402,"ip_address":"","ucode":"B35155A3A28E00","user_header":"https://static001.geekbang.org/account/avatar/00/19/80/ea/801521ed.jpg","comment_is_top":false,"comment_ctime":1603433924,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"1603433924","product_id":100031001,"comment_content":"请问一下老师，现在使用flutter进行开发app，接入微信登录，QQ登录，微信支付，支付宝支付，QQ支付等功能，目前支持吗？比较担心这个问题，正在学习中，后续因为需要用到这些。","like_count":0,"discussions":[{"author":{"id":1054958,"avatar":"https://static001.geekbang.org/account/avatar/00/10/18/ee/a1ed60d1.jpg","nickname":"ABC","note":"","ucode":"7501AD9C0C4A70","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":334697,"discussion_content":"pub.dev里面有插件支持的，去找插件吧","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1607943031,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1671402,"avatar":"https://static001.geekbang.org/account/avatar/00/19/80/ea/801521ed.jpg","nickname":"老花","note":"","ucode":"B35155A3A28E00","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1054958,"avatar":"https://static001.geekbang.org/account/avatar/00/10/18/ee/a1ed60d1.jpg","nickname":"ABC","note":"","ucode":"7501AD9C0C4A70","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":340233,"discussion_content":"多谢","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1609932350,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":334697,"ip_address":""},"score":340233,"extra":""}]}]},{"had_liked":false,"id":255142,"user_name":"卡洛斯(๑Ő௰Ő๑)","can_delete":false,"product_type":"c1","uid":1330852,"ip_address":"","ucode":"6F311BF03B76FD","user_header":"https://static001.geekbang.org/account/avatar/00/14/4e/a4/433305bb.jpg","comment_is_top":false,"comment_ctime":1603272578,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1603272578","product_id":100031001,"comment_content":"大佬你好，有组件可见的声明周期吗？另外 didChangeDependencies 具体是什么场景导致依赖变化的呢？","like_count":0},{"had_liked":false,"id":248219,"user_name":"许先森","can_delete":false,"product_type":"c1","uid":1795371,"ip_address":"","ucode":"1F42D4A6B5C6AF","user_header":"https://static001.geekbang.org/account/avatar/00/1b/65/2b/446ef7b6.jpg","comment_is_top":false,"comment_ctime":1600068235,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1600068235","product_id":100031001,"comment_content":"State内部的widget对象，在State的构造函数中是null，所以不可以在State构造函数中使用widget对象属性，在initState中可以。","like_count":0},{"had_liked":false,"id":238667,"user_name":"蹦哒","can_delete":false,"product_type":"c1","uid":1458931,"ip_address":"","ucode":"56591A657DE7C7","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epcs6PibsP9vEXv4EibUw3bhQPUK04zRTOvfrvF08TwM67xPb1LBh2uRENHQwo2VqYfC5GhJmM7icxHA/132","comment_is_top":false,"comment_ctime":1596254316,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1596254316","product_id":100031001,"comment_content":"老师请问：iOS中每一帧都对应着一次runloop的执行，对应Flutter就是每一帧会执行一次addPostFrameCallback回调，是这样的吗？","like_count":0},{"had_liked":false,"id":228940,"user_name":"敖成","can_delete":false,"product_type":"c1","uid":1594937,"ip_address":"","ucode":"4C58A92A6817CC","user_header":"https://static001.geekbang.org/account/avatar/00/18/56/39/ff6ca854.jpg","comment_is_top":false,"comment_ctime":1592843851,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1592843851","product_id":100031001,"comment_content":"老师请教一下，iOS 里面应用切到后台几分钟后就会假死（除非搞成持续定位或者音乐播放之类），RN 切后台js会立即停止执行。Flutter 切后台之后，代码会继续执行吗？比如轮训接口什么的","like_count":0},{"had_liked":false,"id":215123,"user_name":"涛","can_delete":false,"product_type":"c1","uid":1085100,"ip_address":"","ucode":"92263D02C543E1","user_header":"https://static001.geekbang.org/account/avatar/00/10/8e/ac/24fc311b.jpg","comment_is_top":false,"comment_ctime":1588908869,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1588908869","product_id":100031001,"comment_content":"didUpdateWidget：当 Widget 的配置发生变化时，比如，父 Widget 触发重建<br><br>父 Widget 触发重建时，子控件不是也重建了吗？那这根本就不涉及更新的问题啊，直接重建了。我理解的不对吗？有些疑惑","like_count":0},{"had_liked":false,"id":187861,"user_name":"Summer","can_delete":false,"product_type":"c1","uid":1256923,"ip_address":"","ucode":"6E51D5574C1EFD","user_header":"https://wx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKkeBKshjwVKcpVTs1kGkPibsD5j8odoY6oHrMU1EHqDVjHoLLqzknOd8Q0aWxTDCJjvK1NJIX5Ncg/132","comment_is_top":false,"comment_ctime":1584261099,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1584261099","product_id":100031001,"comment_content":"老师您好，我在页面上写了两个界面A,B,启动A界面，跳到B界面，关闭B界面，执行生命周期的deactivate和dispose，再关闭A界面，退出整个APP了，为什么就A不执行deactivate和dispose方法了？","like_count":0},{"had_liked":false,"id":187522,"user_name":"blain","can_delete":false,"product_type":"c1","uid":1121090,"ip_address":"","ucode":"C632FCC7E1B774","user_header":"https://static001.geekbang.org/account/avatar/00/11/1b/42/8bfbb633.jpg","comment_is_top":false,"comment_ctime":1584152246,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1584152246","product_id":100031001,"comment_content":"根据你的源码，加入这个<br>WidgetsBinding.instance.addPersistentFrameCallback((_){<br>  print(&quot;实时Frame绘制回调&quot;);&#47;&#47;每帧都回调<br>});<br>log中会提示这个错误<br>[ERROR:flutter&#47;lib&#47;ui&#47;ui_dart_state.cc(157)] Unhandled Exception: Concurrent modification during iteration: Instance(length:3) of &#39;_GrowableList&#39;.","like_count":0},{"had_liked":false,"id":171006,"user_name":"王富贵","can_delete":false,"product_type":"c1","uid":1516331,"ip_address":"","ucode":"4981008310EE44","user_header":"https://static001.geekbang.org/account/avatar/00/17/23/2b/d8a95f88.jpg","comment_is_top":false,"comment_ctime":1578818525,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1578818525","product_id":100031001,"comment_content":"请问，我用前面创建的flutter_app里添加APP的生命周期回调，从后台到前台为什么没有触发inactive状态呢？","like_count":0},{"had_liked":false,"id":144346,"user_name":"赤茗","can_delete":false,"product_type":"c1","uid":1596136,"ip_address":"","ucode":"A9AFD1F718C6E5","user_header":"https://static001.geekbang.org/account/avatar/00/18/5a/e8/c31e06a8.jpg","comment_is_top":false,"comment_ctime":1571900521,"is_pvip":false,"replies":[{"id":"58635","content":"导航站切换，前后台切换会涉及到多个页面的视图树调整和重新渲染，所以会刷新多次。但每次渲染完成都会调postframecallback是确定的","user_name":"作者回复","user_name_real":"土豆盒子","uid":"1088582","ctime":1574052304,"ip_address":"","comment_id":144346,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1571900521","product_id":100031001,"comment_content":"而且那四个（PostFrameCallback）对应的状态 顺序为 inactive－&gt;paused-&gt;inactive-&gt;resume(只是唤起的过程)完整的日志如下：<br>I&#47;flutter (27127): AppLifecycleState.inactive<br>I&#47;flutter (27127): AppLifecycleState.resumed<br>I&#47;flutter (27127): PersistentFrameCallback<br>I&#47;flutter (27127): PersistentFrameCallback<br>I&#47;flutter (27127): PersistentFrameCallback<br>I&#47;flutter (27127): PersistentFrameCallback<br>I&#47;flutter (27127): PersistentFrameCallback<br>I&#47;flutter (27127): PersistentFrameCallback<br>I&#47;flutter (27127): PersistentFrameCallback<br>I&#47;flutter (27127): PersistentFrameCallback<br>I&#47;flutter (27127): PostFrameCallback AppLifecycleState.inactive<br>I&#47;flutter (27127): PostFrameCallback AppLifecycleState.paused<br>I&#47;flutter (27127): PostFrameCallback AppLifecycleState.inactive<br>I&#47;flutter (27127): PostFrameCallback AppLifecycleState.resumed","like_count":0,"discussions":[{"author":{"id":1088582,"avatar":"https://static001.geekbang.org/account/avatar/00/10/9c/46/0b29b188.jpg","nickname":"土豆盒子","note":"","ucode":"A910F88CAC0A87","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":471896,"discussion_content":"导航站切换，前后台切换会涉及到多个页面的视图树调整和重新渲染，所以会刷新多次。但每次渲染完成都会调postframecallback是确定的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574052304,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":144341,"user_name":"赤茗","can_delete":false,"product_type":"c1","uid":1596136,"ip_address":"","ucode":"A9AFD1F718C6E5","user_header":"https://static001.geekbang.org/account/avatar/00/18/5a/e8/c31e06a8.jpg","comment_is_top":false,"comment_ctime":1571900050,"is_pvip":false,"replies":[{"id":"58634","content":"前后台切换，导航站切换会涉及到多个页面的Widget树的调整和重新渲染","user_name":"作者回复","user_name_real":"土豆盒子","uid":"1088582","ctime":1574052166,"ip_address":"","comment_id":144341,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1571900050","product_id":100031001,"comment_content":"老师，我在didChangeAppLifecycleState 里加了Frame的两个回调，发现唤起的时候PostFrameCallBack调了四次，而我在setStatus里加这两个回调时只调用了一次，为什么会出现这种情况？","like_count":0,"discussions":[{"author":{"id":1088582,"avatar":"https://static001.geekbang.org/account/avatar/00/10/9c/46/0b29b188.jpg","nickname":"土豆盒子","note":"","ucode":"A910F88CAC0A87","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":471894,"discussion_content":"前后台切换，导航站切换会涉及到多个页面的Widget树的调整和重新渲染","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574052166,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":139018,"user_name":"微笑美男😄","can_delete":false,"product_type":"c1","uid":1010774,"ip_address":"","ucode":"E188923723703B","user_header":"https://static001.geekbang.org/account/avatar/00/0f/6c/56/07920099.jpg","comment_is_top":false,"comment_ctime":1570527497,"is_pvip":false,"replies":[{"id":"54812","content":"报什么错？","user_name":"作者回复","user_name_real":"土豆盒子","uid":"1088582","ctime":1571283482,"ip_address":"","comment_id":139018,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1570527497","product_id":100031001,"comment_content":"课件下载后,怎么用visual studio code 打开。我用Mac 发现无法打开","like_count":0,"discussions":[{"author":{"id":1088582,"avatar":"https://static001.geekbang.org/account/avatar/00/10/9c/46/0b29b188.jpg","nickname":"土豆盒子","note":"","ucode":"A910F88CAC0A87","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":469750,"discussion_content":"报什么错？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571283482,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":123196,"user_name":"Geek_0793f1","can_delete":false,"product_type":"c1","uid":1608274,"ip_address":"","ucode":"A7E1FA6B05CE8A","user_header":"","comment_is_top":false,"comment_ctime":1565624170,"is_pvip":false,"replies":[{"id":"45291","content":"Widget就是一个配置，所以不涉及到生命周期。Element有","user_name":"作者回复","user_name_real":"土豆盒子","uid":"1088582","ctime":1565676410,"ip_address":"","comment_id":123196,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1565624170","product_id":100031001,"comment_content":"statelessWidget 没有 类似 deactivate 之类的生命周期钩子吗","like_count":0,"discussions":[{"author":{"id":1088582,"avatar":"https://static001.geekbang.org/account/avatar/00/10/9c/46/0b29b188.jpg","nickname":"土豆盒子","note":"","ucode":"A910F88CAC0A87","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":462577,"discussion_content":"Widget就是一个配置，所以不涉及到生命周期。Element有","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1565676410,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":118774,"user_name":"YangHong","can_delete":false,"product_type":"c1","uid":1163312,"ip_address":"","ucode":"8FB79551AC0488","user_header":"https://static001.geekbang.org/account/avatar/00/11/c0/30/34bd94f2.jpg","comment_is_top":false,"comment_ctime":1564446834,"is_pvip":false,"replies":[{"id":"43931","content":"是个中间过渡状态，一般没什么用","user_name":"作者回复","user_name_real":"土豆盒子","uid":"1088582","ctime":1564677659,"ip_address":"","comment_id":118774,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1564446834","product_id":100031001,"comment_content":"inactive处于不活动状态是指线程都挂起了吗，为什么前台切后台要经历这个处理？","like_count":0,"discussions":[{"author":{"id":1088582,"avatar":"https://static001.geekbang.org/account/avatar/00/10/9c/46/0b29b188.jpg","nickname":"土豆盒子","note":"","ucode":"A910F88CAC0A87","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":460569,"discussion_content":"是个中间过渡状态，一般没什么用","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1564677659,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":118039,"user_name":"Mr.J","can_delete":false,"product_type":"c1","uid":1267172,"ip_address":"","ucode":"372D8C614F6C3D","user_header":"https://static001.geekbang.org/account/avatar/00/13/55/e4/7061abd5.jpg","comment_is_top":false,"comment_ctime":1564216971,"is_pvip":false,"replies":[{"id":"43508","content":"试试在IDE上 Command+鼠标点击 类名？","user_name":"作者回复","user_name_real":"土豆盒子","uid":"1088582","ctime":1564423767,"ip_address":"","comment_id":118039,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1564216971","product_id":100031001,"comment_content":"老师，Flutter的源码是怎么分类的，感觉分包好乱，经常找不到源码，不知道该去哪儿找","like_count":0,"discussions":[{"author":{"id":1088582,"avatar":"https://static001.geekbang.org/account/avatar/00/10/9c/46/0b29b188.jpg","nickname":"土豆盒子","note":"","ucode":"A910F88CAC0A87","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":460234,"discussion_content":"试试在IDE上 Command+鼠标点击 类名？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1564423767,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":117626,"user_name":"Bula","can_delete":false,"product_type":"c1","uid":1600113,"ip_address":"","ucode":"DB04F01E758F3A","user_header":"https://static001.geekbang.org/account/avatar/00/18/6a/71/d28392a9.jpg","comment_is_top":false,"comment_ctime":1564103265,"is_pvip":false,"replies":[{"id":"43167","content":"因为State的相对位置变了呀。不过放心UI是不会刷新的","user_name":"作者回复","user_name_real":"土豆盒子","uid":"1088582","ctime":1564164286,"ip_address":"","comment_id":117626,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1564103265","product_id":100031001,"comment_content":"可能是我前面的知识没理解透彻  切换一个新的视图，当前的widget就会回调deactivate ,移除了。那返回回来  这个视图是需要再重建一次吗  ，返回操作很常见，为什么要移除前一个视图的widget啊","like_count":0,"discussions":[{"author":{"id":1088582,"avatar":"https://static001.geekbang.org/account/avatar/00/10/9c/46/0b29b188.jpg","nickname":"土豆盒子","note":"","ucode":"A910F88CAC0A87","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":460059,"discussion_content":"因为State的相对位置变了呀。不过放心UI是不会刷新的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1564164286,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1244982,"avatar":"https://static001.geekbang.org/account/avatar/00/12/ff/36/f7922ed3.jpg","nickname":"木泗","note":"","ucode":"594683420AFAE7","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":3278,"discussion_content":"老师，这里的UI不刷新是指Widget不刷新吧？build又执行了一次，RenderObject是在这里构建的吧？","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1564373983,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":116886,"user_name":"YJ","can_delete":false,"product_type":"c1","uid":1041672,"ip_address":"","ucode":"836D1A0E3691F1","user_header":"https://static001.geekbang.org/account/avatar/00/0f/e5/08/dfda5266.jpg","comment_is_top":false,"comment_ctime":1563934234,"is_pvip":false,"replies":[{"id":"42867","content":"没有。不过你可以用帧回调做类似的事情","user_name":"作者回复","user_name_real":"土豆盒子","uid":"1088582","ctime":1563981793,"ip_address":"","comment_id":116886,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1563934234","product_id":100031001,"comment_content":"ios 中的viewWillAppear 在这里有对应的回调吗？ 比如当前页面显示的时候此时想做点事情","like_count":0,"discussions":[{"author":{"id":1088582,"avatar":"https://static001.geekbang.org/account/avatar/00/10/9c/46/0b29b188.jpg","nickname":"土豆盒子","note":"","ucode":"A910F88CAC0A87","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":459719,"discussion_content":"没有。不过你可以用帧回调做类似的事情","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1563981793,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":116674,"user_name":"吴小安","can_delete":false,"product_type":"c1","uid":1371398,"ip_address":"","ucode":"EDF8E04F867069","user_header":"https://wx.qlogo.cn/mmopen/vi_32/DYAIOgq83eqr5ibqxYwcSgqPA7s49MZb1vEKKXT4mPTojwiclXkJf3ug26NuzTa6A5gbicR2rAUHdEkUAn13Rr2KQ/132","comment_is_top":false,"comment_ctime":1563888426,"is_pvip":false,"replies":[{"id":"42647","content":"因为State在根视图的位置变了","user_name":"作者回复","user_name_real":"土豆盒子","uid":"1088582","ctime":1563895280,"ip_address":"","comment_id":116674,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1563888426","product_id":100031001,"comment_content":"deactivate 函数会被调用，这时 State 会被暂时从视图树中移除。值得注意的是，页面切换时，由于 State 对象在视图树中的位置发生了变化，需要先暂时移除后再重新添加，重新触发组件构建，因此这个函数也会被调用。<br>为什么push的时候当前的widget还需要buildbu？pop的时候不是执行一次build了么，push的时候执行的build有什么意义","like_count":0,"discussions":[{"author":{"id":1088582,"avatar":"https://static001.geekbang.org/account/avatar/00/10/9c/46/0b29b188.jpg","nickname":"土豆盒子","note":"","ucode":"A910F88CAC0A87","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":459632,"discussion_content":"因为State在根视图的位置变了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1563895280,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1371398,"avatar":"https://wx.qlogo.cn/mmopen/vi_32/DYAIOgq83eqr5ibqxYwcSgqPA7s49MZb1vEKKXT4mPTojwiclXkJf3ug26NuzTa6A5gbicR2rAUHdEkUAn13Rr2KQ/132","nickname":"吴小安","note":"","ucode":"EDF8E04F867069","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":2779,"discussion_content":"但是push的时候调用build，pop的时候又重新调用一次，页面都已经看不到，这样不是多余的吗？白白浪费一下cpu？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1563932058,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":116460,"user_name":"加温后的啤酒","can_delete":false,"product_type":"c1","uid":1344488,"ip_address":"","ucode":"5F30978CDB1606","user_header":"https://static001.geekbang.org/account/avatar/00/14/83/e8/f726c635.jpg","comment_is_top":false,"comment_ctime":1563852785,"is_pvip":false,"replies":[{"id":"42650","content":"切换到主线程也不是马上切，是在下一个runloop给你切回来，这时候绘制已经结束了。","user_name":"作者回复","user_name_real":"土豆盒子","uid":"1088582","ctime":1563895436,"ip_address":"","comment_id":116460,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1563852785","product_id":100031001,"comment_content":"老师 因为我在iOS开发中，用到dispatch_async(dispatch_get_mainQueue).是用来切换到主线程，但是你文章提到是用来 &quot;帧绘制回调”，并且Dart中没有多线程的概念，所以有点困惑、不是很理解这个“帧绘制回调”，能举个具体的例子解释下吗？","like_count":0,"discussions":[{"author":{"id":1088582,"avatar":"https://static001.geekbang.org/account/avatar/00/10/9c/46/0b29b188.jpg","nickname":"土豆盒子","note":"","ucode":"A910F88CAC0A87","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":459551,"discussion_content":"切换到主线程也不是马上切，是在下一个runloop给你切回来，这时候绘制已经结束了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1563895436,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]}]}