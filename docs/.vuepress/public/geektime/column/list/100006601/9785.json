{"id":9785,"title":"27 | 如何设计计算高可用架构？","content":"<p>计算高可用的主要设计目标是当出现部分硬件损坏时，计算任务能够继续正常运行。因此计算高可用的本质是通过冗余来规避部分故障的风险，单台服务器是无论如何都达不到这个目标的。所以计算高可用的设计思想很简单：通过增加更多服务器来达到计算高可用。</p><p>计算高可用架构的设计复杂度主要体现在<strong>任务管理</strong>方面，即当任务在某台服务器上执行失败后，如何将任务重新分配到新的服务器进行执行。因此，计算高可用架构设计的关键点有下面两点。</p><p>1.哪些服务器可以执行任务</p><p>第一种方式和计算高性能中的集群类似，每个服务器都可以执行任务。例如，常见的访问网站的某个页面。</p><p>第二种方式和存储高可用中的集群类似，只有特定服务器（通常叫“主机”）可以执行任务。当执行任务的服务器故障后，系统需要挑选新的服务器来执行任务。例如，ZooKeeper的Leader才能处理写操作请求。</p><p>2.任务如何重新执行</p><p>第一种策略是对于已经分配的任务即使执行失败也不做任何处理，系统只需要保证新的任务能够分配到其他非故障服务器上执行即可。</p><p>第二种策略是设计一个任务管理器来管理需要执行的计算任务，服务器执行完任务后，需要向任务管理器反馈任务执行结果，任务管理器根据任务执行结果来决定是否需要将任务重新分配到另外的服务器上执行。</p><!-- [[[read_end]]] --><p>需要注意的是：“任务分配器”是一个逻辑的概念，并不一定要求系统存在一个独立的任务分配器模块。例如：</p><ul>\n<li>\n<p>Nginx将页面请求发送给Web服务器，而CSS/JS等静态文件直接读取本地缓存。这里的Nginx角色是反向代理系统，但是承担了任务分配器的职责，而不需要Nginx做反向代理，后面再来一个任务分配器。</p>\n</li>\n<li>\n<p>对于一些后台批量运算的任务，可以设计一个独立的任务分配系统来管理这些批处理任务的执行和分配。</p>\n</li>\n<li>\n<p>ZooKeeper中的Follower节点，当接收到写请求时会将请求转发给Leader节点处理，当接收到读请求时就自己处理，这里的Follower就相当于一个逻辑上的任务分配器。</p>\n</li>\n</ul><p>接下来，我将详细阐述<span class=\"orange\">常见的计算高可用架构：主备、主从和集群</span>。</p><h2>主备</h2><p>主备架构是计算高可用最简单的架构，和存储高可用的主备复制架构类似，但是要更简单一些，因为计算高可用的主备架构无须数据复制，其基本的架构示意图如下：</p><p><img src=\"https://static001.geekbang.org/resource/image/83/d6/83e0a9670c16yyf0a074776325f840d6.jpg?wh=3329*2392\" alt=\"\"></p><p>主备方案的详细设计：</p><ul>\n<li>\n<p>主机执行所有计算任务。例如，读写数据、执行操作等。</p>\n</li>\n<li>\n<p>当主机故障（例如，主机宕机）时，任务分配器不会自动将计算任务发送给备机，此时系统处于不可用状态。</p>\n</li>\n<li>\n<p>如果主机能够恢复（不管是人工恢复还是自动恢复），任务分配器继续将任务发送给主机。</p>\n</li>\n<li>\n<p>如果主机不能够恢复（例如，机器硬盘损坏，短时间内无法恢复），则需要人工操作，将备机升为主机，然后让任务分配器将任务发送给新的主机（即原来的备机）；同时，为了继续保持主备架构，需要人工增加新的机器作为备机。</p>\n</li>\n</ul><p>根据备机状态的不同，主备架构又可以细分为冷备架构和温备架构。</p><p><strong>冷备</strong>：备机上的程序包和配置文件都准备好，但备机上的业务系统没有启动（注意：备机的服务器是启动的），主机故障后，需要人工手工将备机的业务系统启动，并将任务分配器的任务请求切换发送给备机。</p><p><strong>温备</strong>：备机上的业务系统已经启动，只是不对外提供服务，主机故障后，人工只需要将任务分配器的任务请求切换发送到备机即可。冷备可以节省一定的能源，但温备能够大大减少手工操作时间，因此一般情况下推荐用温备的方式。</p><p>主备架构的优点就是简单，主备机之间不需要进行交互，状态判断和切换操作由人工执行，系统实现很简单。而缺点正好也体现在“人工操作”这点上，因为人工操作的时间不可控，可能系统已经发生问题了，但维护人员还没发现，等了1个小时才发现。发现后人工切换的操作效率也比较低，可能需要半个小时才完成切换操作，而且手工操作过程中容易出错。例如，修改配置文件改错了、启动了错误的程序等。</p><p>和存储高可用中的主备复制架构类似，计算高可用的主备架构也比较适合与内部管理系统、后台管理系统这类使用人数不多、使用频率不高的业务，不太适合在线的业务。</p><h2>主从</h2><p>和存储高可用中的主从复制架构类似，计算高可用的主从架构中的从机也是要执行任务的。任务分配器需要将任务进行分类，确定哪些任务可以发送给主机执行，哪些任务可以发送给备机执行，其基本的架构示意图如下：</p><p><img src=\"https://static001.geekbang.org/resource/image/7e/5e/7e19db520ec219ec68c83c7d0639455e.jpg?wh=3332*2424\" alt=\"\"></p><p>主从方案详细设计：</p><ul>\n<li>\n<p>正常情况下，主机执行部分计算任务（如图中的“计算任务A”），备机执行部分计算任务（如图中的“计算任务B”）。</p>\n</li>\n<li>\n<p>当主机故障（例如，主机宕机）时，任务分配器不会自动将原本发送给主机的任务发送给从机，而是继续发送给主机，不管这些任务执行是否成功。</p>\n</li>\n<li>\n<p>如果主机能够恢复（不管是人工恢复还是自动恢复），任务分配器继续按照原有的设计策略分配任务，即计算任务A发送给主机，计算任务B发送给从机。</p>\n</li>\n<li>\n<p>如果主机不能够恢复（例如，机器硬盘损坏，短时间内无法恢复），则需要人工操作，将原来的从机升级为主机（一般只是修改配置即可），增加新的机器作为从机，新的从机准备就绪后，任务分配器继续按照原有的设计策略分配任务。</p>\n</li>\n</ul><p>主从架构与主备架构相比，优缺点有：</p><ul>\n<li>\n<p>优点：主从架构的从机也执行任务，发挥了从机的硬件性能。</p>\n</li>\n<li>\n<p>缺点：主从架构需要将任务分类，任务分配器会复杂一些。</p>\n</li>\n</ul><h2>集群</h2><p>主备架构和主从架构通过冗余一台服务器来提升可用性，且需要人工来切换主备或者主从。这样的架构虽然简单，但存在一个主要的问题：人工操作效率低、容易出错、不能及时处理故障。因此在可用性要求更加严格的场景中，我们需要系统能够自动完成切换操作，这就是高可用集群方案。</p><p>高可用计算的集群方案根据集群中服务器节点角色的不同，可以分为两类：一类是对称集群，即集群中每个服务器的角色都是一样的，都可以执行所有任务；另一类是非对称集群，集群中的服务器分为多个不同的角色，不同的角色执行不同的任务，例如最常见的Master-Slave角色。</p><p>需要注意的是，计算高可用集群包含2台服务器的集群，这点和存储高可用集群不太一样。存储高可用集群把双机架构和集群架构进行了区分；而在计算高可用集群架构中，2台服务器的集群和多台服务器的集群，在设计上没有本质区别，因此不需要进行区分。</p><p><strong>对称集群</strong></p><p>对称集群更通俗的叫法是负载均衡集群，因此接下来我使用“负载均衡集群”这个通俗的说法，架构示意图如下：</p><p><img src=\"https://static001.geekbang.org/resource/image/2f/a8/2f4079bceeb190987d495b06a744c9a8.jpg?wh=3706*2615\" alt=\"\"></p><p>负载均衡集群详细设计：</p><ul>\n<li>\n<p>正常情况下，任务分配器采取某种策略（随机、轮询等）将计算任务分配给集群中的不同服务器。</p>\n</li>\n<li>\n<p>当集群中的某台服务器故障后，任务分配器不再将任务分配给它，而是将任务分配给其他服务器执行。</p>\n</li>\n<li>\n<p>当故障的服务器恢复后，任务分配器重新将任务分配给它执行。</p>\n</li>\n</ul><p>负载均衡集群的设计关键点在于两点：</p><ul>\n<li>\n<p>任务分配器需要选取分配策略。</p>\n</li>\n<li>\n<p>任务分配器需要检测服务器状态。</p>\n</li>\n</ul><p>任务分配策略比较简单，轮询和随机基本就够了。状态检测稍微复杂一些，既要检测服务器的状态，例如服务器是否宕机、网络是否正常等；同时还要检测任务的执行状态，例如任务是否卡死、是否执行时间过长等。常用的做法是任务分配器和服务器之间通过心跳来传递信息，包括服务器信息和任务信息，然后根据实际情况来确定状态判断条件。</p><p>例如，一个在线页面访问系统，正常情况下页面平均会在500毫秒内返回，那么状态判断条件可以设计为：1分钟内响应时间超过1秒（包括超时）的页面数量占了80%时，就认为服务器有故障。</p><p>例如，一个后台统计任务系统，正常情况下任务会在5分钟内执行完成，那么状态判断条件可以设计为：单个任务执行时间超过10分钟还没有结束，就认为服务器有故障。</p><p>通过上面两个案例可以看出，不同业务场景的状态判断条件差异很大，实际设计时要根据业务需求来进行设计和调优。</p><p><strong>非对称集群</strong></p><p>非对称集群中不同服务器的角色是不同的，不同角色的服务器承担不同的职责。以Master-Slave为例，部分任务是Master服务器才能执行，部分任务是Slave服务器才能执行。非对称集群的基本架构示意图如下：</p><p><img src=\"https://static001.geekbang.org/resource/image/ca/14/cae563655fd7cea154932yy6ca7db114.jpg?wh=3627*2607\" alt=\"\"><br>\n非对称集群架构详细设计：</p><ul>\n<li>\n<p>集群会通过某种方式来区分不同服务器的角色。例如，通过ZAB算法选举，或者简单地取当前存活服务器中节点ID最小的服务器作为Master服务器。</p>\n</li>\n<li>\n<p>任务分配器将不同任务发送给不同服务器。例如，图中的计算任务A发送给Master服务器，计算任务B发送给Slave服务器。</p>\n</li>\n<li>\n<p>当指定类型的服务器故障时，需要重新分配角色。例如，Master服务器故障后，需要将剩余的Slave服务器中的一个重新指定为Master服务器；如果是Slave服务器故障，则并不需要重新分配角色，只需要将故障服务器从集群剔除即可。</p>\n</li>\n</ul><p>非对称集群相比负载均衡集群，设计复杂度主要体现在两个方面：</p><ul>\n<li>\n<p>任务分配策略更加复杂：需要将任务划分为不同类型并分配给不同角色的集群节点。</p>\n</li>\n<li>\n<p>角色分配策略实现比较复杂：例如，可能需要使用ZAB、Raft这类复杂的算法来实现Leader的选举。</p>\n</li>\n</ul><p>我以ZooKeeper为例：</p><ul>\n<li>\n<p>任务分配器：ZooKeeper中不存在独立的任务分配器节点，每个Server都是任务分配器，Follower收到请求后会进行判断，如果是写请求就转发给Leader，如果是读请求就自己处理。</p>\n</li>\n<li>\n<p>角色指定：ZooKeeper通过ZAB算法来选举Leader，当Leader故障后，所有的Follower节点会暂停读写操作，开始进行选举，直到新的Leader选举出来后才继续对Client提供服务。</p>\n</li>\n</ul><h2>小结</h2><p>今天我为你讲了几种常见的计算高可用架构，并分析了不同方案的详细设计，希望对你有所帮助。</p><p>这就是今天的全部内容，留一道思考题给你吧，计算高可用架构从形式上和存储高可用架构看上去几乎一样，它们的复杂度是一样的么？谈谈你的理解。</p><p>欢迎你把答案写到留言区，和我一起讨论。相信经过深度思考的回答，也会让你对知识的理解更加深刻。（编辑乱入：精彩的留言有机会获得丰厚福利哦！）</p>","neighbors":{"left":{"article_title":"26 | 高可用存储架构：集群和分区","id":9766},"right":{"article_title":"28 | 业务高可用的保障：异地多活架构","id":9787}},"comments":[{"had_liked":false,"id":14029,"user_name":"feifei","can_delete":false,"product_type":"c1","uid":1105431,"ip_address":"","ucode":"B1F8AE3AD82C51","user_header":"https://static001.geekbang.org/account/avatar/00/10/de/17/75e2b624.jpg","comment_is_top":false,"comment_ctime":1530147656,"is_pvip":false,"replies":[{"id":4683,"content":"分析正确👍","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1530178275,"ip_address":"","comment_id":14029,"utype":1}],"discussion_count":5,"race_medal":0,"score":2,"product_id":100006601,"comment_content":"计算高可用架构，主要解决当单点发生故障后，原本发送到故障节点的任务，任务如何分发给非故障节点，根据业务特点选择分发和重试机制即可，不存在数据一致性问题，只需要保证任务计算完成即可\n存储高可用架构，解决的问题是当单点发生故障了，任务如何分发给其他非故障节点，以及如何保障数据的一致性问题。\n所以存储的高可用比计算的高可用的设计更为复杂。","like_count":167},{"had_liked":false,"id":20480,"user_name":"孙振超","can_delete":false,"product_type":"c1","uid":1101755,"ip_address":"","ucode":"0F9EABC6125350","user_header":"https://static001.geekbang.org/account/avatar/00/10/cf/bb/22af0e52.jpg","comment_is_top":false,"comment_ctime":1534470970,"is_pvip":false,"replies":[{"id":7173,"content":"你的理解比我的理解还要深刻了👍👍👍😄","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1534476262,"ip_address":"","comment_id":20480,"utype":1}],"discussion_count":5,"race_medal":0,"score":2,"product_id":100006601,"comment_content":"在学习课程的过程中，发现作者是把很多的学习方法给融合到自身之中，变成了自己的东西，从知道变成了成为。比如本次的习题，通过对计算高可用和存储高可用的对比，就是很好的一个例子。\n\n要想高可用就离不开冗余，无论是计算高可用还是存储高可用都会面对机器状态检测、切换以及机器选择的问题，在这几个方面二者复杂度差别不大。\n\n但对于计算而言，集群中的机器间之间基本上是无交互的，对于需要重试的计算任务，是有任务管理器来维护处理；而存储高可用还会涉及到机器之间数据的同步和一致性问题，在同步时还需要考虑性能、稳定性、同步中断、个别失败、重复同步等问题，这一块就会复杂许多。\n因而，总体来看，存储高可用更为复杂。\n","like_count":82,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":419846,"discussion_content":"分析正确👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1530178275,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1789588,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/4e/94/af3eb6d4.jpg","nickname":"面试怪圈","note":"","ucode":"C9C4B9B2F699C6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":383939,"discussion_content":"什么场景集群设计会选用非对称集群？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1626311894,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1120328,"avatar":"https://static001.geekbang.org/account/avatar/00/11/18/48/5121c471.jpg","nickname":"小斯","note":"","ucode":"DD18726396FA66","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1789588,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/4e/94/af3eb6d4.jpg","nickname":"面试怪圈","note":"","ucode":"C9C4B9B2F699C6","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":535603,"discussion_content":"中间件zk……","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1638493739,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":383939,"ip_address":"","group_id":0},"score":535603,"extra":""},{"author":{"id":2166073,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/k3YD3y3BzGDSdrwRJyJY4BXsNJibfM4uzOdDVKIAlFApR2FZCLg2ibrZtJ4vuahA3LHLW9GKzH5CMGqCDhWjhZqg/132","nickname":"戒酒的李白","note":"","ucode":"744E1A22761647","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1789588,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/4e/94/af3eb6d4.jpg","nickname":"面试怪圈","note":"","ucode":"C9C4B9B2F699C6","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":535978,"discussion_content":"es也是","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1638624767,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":383939,"ip_address":"","group_id":0},"score":535978,"extra":""}]},{"author":{"id":1247040,"avatar":"https://static001.geekbang.org/account/avatar/00/13/07/40/ef190cf2.jpg","nickname":"maple","note":"","ucode":"D9D2E4B36E9DD2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":283538,"discussion_content":"test","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1592292872,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":14051,"user_name":"yungoo","can_delete":false,"product_type":"c1","uid":1060805,"ip_address":"","ucode":"D9BB84A75047CB","user_header":"https://static001.geekbang.org/account/avatar/00/10/2f/c5/aaacb98f.jpg","comment_is_top":false,"comment_ctime":1530153714,"is_pvip":false,"replies":[{"id":4679,"content":"你已经融会贯通👍","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1530178057,"ip_address":"","comment_id":14051,"utype":1}],"discussion_count":2,"race_medal":0,"score":2,"product_id":100006601,"comment_content":"计算高可用系统需考虑safety和liveness，而存储高可用除了需考虑safety和liveness，还受CAP约束","like_count":42,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":422266,"discussion_content":"你的理解比我的理解还要深刻了👍👍👍😄","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1534476262,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1073443,"avatar":"https://static001.geekbang.org/account/avatar/00/10/61/23/30d134cf.jpg","nickname":"Young","note":"","ucode":"075C0BBE20FD8C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":380193,"discussion_content":"其实楼主的回答隐含了一个前提：计算是无状态的。\n但事实上这个假期未必一定成立，如果是有状态的场景，计算高可用就得利用存储状态来把计算变成“无状态”，此种情况也是挺复杂的。","likes_number":4,"is_delete":false,"is_hidden":false,"ctime":1624369831,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1102194,"avatar":"https://static001.geekbang.org/account/avatar/00/10/d1/72/4cc8475c.jpg","nickname":"Leaf","note":"","ucode":"9AB56B7971237D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":247476,"discussion_content":"那改变计算节点，使之变成无状态的，去掉本地存储，用一致性的存储替代","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1587815566,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1468298,"avatar":"https://static001.geekbang.org/account/avatar/00/16/67/8a/babd74dc.jpg","nickname":"锦","note":"","ucode":"CB0EB4B68C468B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":5215,"discussion_content":"在分布式架构中，往往计算节点会保存中间状态，那么这种属于存储高可用还是计算高可用呢？系统又如何设计呢？","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1566055615,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1325994,"avatar":"https://static001.geekbang.org/account/avatar/00/14/3b/aa/e8dfcd7e.jpg","nickname":"AAA_叶子","note":"","ucode":"1E93617D308EE0","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":379504,"discussion_content":"计算高可用和存储高可用有清晰的分界吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1623932140,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":113098,"user_name":"@","can_delete":false,"product_type":"c1","uid":1098690,"ip_address":"","ucode":"AC8227752777D8","user_header":"https://static001.geekbang.org/account/avatar/00/10/c3/c2/5ff554d9.jpg","comment_is_top":false,"comment_ctime":1562896714,"is_pvip":false,"replies":[{"id":41281,"content":"一针见血👍","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1562973112,"ip_address":"","comment_id":113098,"utype":1}],"discussion_count":2,"race_medal":0,"score":2,"product_id":100006601,"comment_content":"计算无状态，存储有状态","like_count":28,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":419854,"discussion_content":"你已经融会贯通👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1530178057,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2151836,"avatar":"https://static001.geekbang.org/account/avatar/00/20/d5/9c/842eda55.jpg","nickname":"一步两步","note":"","ucode":"B59D1F5293B5C2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":340278,"discussion_content":"赞一个","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1609941882,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":14017,"user_name":"oddrock","can_delete":false,"product_type":"c1","uid":1037506,"ip_address":"","ucode":"55BADA192250B0","user_header":"https://static001.geekbang.org/account/avatar/00/0f/d4/c2/910d231e.jpg","comment_is_top":false,"comment_ctime":1530145002,"is_pvip":false,"replies":[{"id":4687,"content":"分析正确","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1530178417,"ip_address":"","comment_id":14017,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100006601,"comment_content":"存储高可用比计算高可用要复杂的多，存储高可用是有状态的，计算高可用一般解决的都是无状态问题，有状态就存在着如何保存状态、同步状态的问题了","like_count":27,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":458054,"discussion_content":"一针见血👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1562973112,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1184775,"avatar":"https://static001.geekbang.org/account/avatar/00/12/14/07/13f51bf6.jpg","nickname":"荣老师","note":"","ucode":"D470DD120C34C5","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":407534,"discussion_content":"Flink的计算状态如何理解？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1635052091,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":14085,"user_name":"Johnny.Z","can_delete":false,"product_type":"c1","uid":1057367,"ip_address":"","ucode":"E4496B8F5163F5","user_header":"https://static001.geekbang.org/account/avatar/00/10/22/57/cf35d10c.jpg","comment_is_top":false,"comment_ctime":1530169839,"is_pvip":false,"replies":[{"id":4675,"content":"是的，全流程的高可用要求任务分配器也高可用","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1530177861,"ip_address":"","comment_id":14085,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100006601,"comment_content":"任务分配器挂了是不是高可用计算就没办法保证了，任务分配器是否也要弄成集群呢？","like_count":10,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":419840,"discussion_content":"分析正确","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1530178417,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":14019,"user_name":"李同杰","can_delete":false,"product_type":"c1","uid":1023307,"ip_address":"","ucode":"F0E49E896BB400","user_header":"https://static001.geekbang.org/account/avatar/00/0f/9d/4b/e1ec92c7.jpg","comment_is_top":false,"comment_ctime":1530145170,"is_pvip":false,"replies":[{"id":4685,"content":"👍👍👍","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1530178336,"ip_address":"","comment_id":14019,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100006601,"comment_content":"存储高可用需要考虑数据复制的问题，复杂度高于计算高可用架构。","like_count":8,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":419865,"discussion_content":"是的，全流程的高可用要求任务分配器也高可用","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1530177861,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":14070,"user_name":"空档滑行","can_delete":false,"product_type":"c1","uid":1091611,"ip_address":"","ucode":"06A6A7F503FAA7","user_header":"https://static001.geekbang.org/account/avatar/00/10/a8/1b/ced1d171.jpg","comment_is_top":false,"comment_ctime":1530160684,"is_pvip":false,"replies":[{"id":4677,"content":"分析正确👍","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1530178014,"ip_address":"","comment_id":14070,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100006601,"comment_content":"计算高可用复杂在选择算法，随着集群规模的扩大，复杂性增加的不明显。比如负载均衡如何判断节点可用，如何判断任务失败还是只是时间较长。\n存储高可用除了面临计算高可用同样的问题在，还要考虑数据的同步，异地备灾也比计算高可用复杂，而且随着集群数量增加，整个策略都要做相应的改变","like_count":5,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":419862,"discussion_content":"分析正确👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1530178014,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":272129,"user_name":"一步两步","can_delete":false,"product_type":"c1","uid":2151836,"ip_address":"","ucode":"B59D1F5293B5C2","user_header":"https://static001.geekbang.org/account/avatar/00/20/d5/9c/842eda55.jpg","comment_is_top":false,"comment_ctime":1609941743,"is_pvip":false,"replies":[{"id":98746,"content":"你的理解是正确的，但不能因为有基础架构部门负责自己就不去关注和学习，面试的时候你要是这样说很大概率会挂😂","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1610073863,"ip_address":"","comment_id":272129,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100006601,"comment_content":"结合我的负责的项目，计算高可用更像是我平时开发的业务系统（包含了我平时写的curd），当然这个理解台浅显了，希望有更好的举例或者我后面再想想，而存储高可用是我平时业务系统调用的mysql、mongodb、redis、elasticsearch等，平时开发对存储高可用其实考虑的较少，因为有基础架构部门和DBA团队支持，也比较放心使用，只需要分析好数据规模，以及未来增长趋势即可，对于计算高可用，我负责的业务系统大概是北京、南京等三个机房、每个机房有几个集群，我的服务大概100来台机器，我的上游流控系统把流量分发到我这里，采用的是nginx的轮训做的负载均衡。","like_count":4,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":513168,"discussion_content":"你的理解是正确的，但不能因为有基础架构部门负责自己就不去关注和学习，面试的时候你要是这样说很大概率会挂😂","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1610073863,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":250309,"user_name":"脱缰的野马__","can_delete":false,"product_type":"c1","uid":1447569,"ip_address":"","ucode":"D5F993E7232C61","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/WtHCCMoLJ2DvzqQwPYZyj2RlN7eibTLMHDMTSO4xIKjfKR1Eh9L98AMkkZY7FmegWyGLahRQJ5ibPzeeFtfpeSow/132","comment_is_top":false,"comment_ctime":1601019100,"is_pvip":false,"replies":[{"id":91864,"content":"是的，CAP约束的是有数据复制的集群，数据分片集群不涉及数据复制","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1601431135,"ip_address":"","comment_id":250309,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100006601,"comment_content":"老师，@yungoo同学说的：存储高可用还受到CAP约束 这句话，应该需要更明确一些吧？存储高可用也是通过冗余的方式来实现，但是有不同的方案和不同的使用场景，比如是主从主备这类的集群还是切片集群。结合CAP的讲解内容，切片集群并不共享数据，切片集群存储的目的是因为数据体量非常大，只能通过某个切分规则将数据分开来存储，减少单个实例的存储压力，不涉及到集群节点之间的数据同步，最多只是扩容和缩容时的数据重分配，所以CAP应该是约束在存储高可用的主从主备种类的集群方案中吧？请教老师","like_count":3,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":506180,"discussion_content":"是的，CAP约束的是有数据复制的集群，数据分片集群不涉及数据复制","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1601431135,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":14029,"user_name":"feifei","can_delete":false,"product_type":"c1","uid":1105431,"ip_address":"","ucode":"B1F8AE3AD82C51","user_header":"https://static001.geekbang.org/account/avatar/00/10/de/17/75e2b624.jpg","comment_is_top":false,"comment_ctime":1530147656,"is_pvip":false,"replies":[{"id":4683,"content":"分析正确👍","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1530178275,"ip_address":"","comment_id":14029,"utype":1}],"discussion_count":5,"race_medal":0,"score":2,"product_id":100006601,"comment_content":"计算高可用架构，主要解决当单点发生故障后，原本发送到故障节点的任务，任务如何分发给非故障节点，根据业务特点选择分发和重试机制即可，不存在数据一致性问题，只需要保证任务计算完成即可\n存储高可用架构，解决的问题是当单点发生故障了，任务如何分发给其他非故障节点，以及如何保障数据的一致性问题。\n所以存储的高可用比计算的高可用的设计更为复杂。","like_count":167,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":419846,"discussion_content":"分析正确👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1530178275,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1789588,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/4e/94/af3eb6d4.jpg","nickname":"面试怪圈","note":"","ucode":"C9C4B9B2F699C6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":383939,"discussion_content":"什么场景集群设计会选用非对称集群？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1626311894,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1120328,"avatar":"https://static001.geekbang.org/account/avatar/00/11/18/48/5121c471.jpg","nickname":"小斯","note":"","ucode":"DD18726396FA66","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1789588,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/4e/94/af3eb6d4.jpg","nickname":"面试怪圈","note":"","ucode":"C9C4B9B2F699C6","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":535603,"discussion_content":"中间件zk……","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1638493739,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":383939,"ip_address":"","group_id":0},"score":535603,"extra":""},{"author":{"id":2166073,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/k3YD3y3BzGDSdrwRJyJY4BXsNJibfM4uzOdDVKIAlFApR2FZCLg2ibrZtJ4vuahA3LHLW9GKzH5CMGqCDhWjhZqg/132","nickname":"戒酒的李白","note":"","ucode":"744E1A22761647","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1789588,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/4e/94/af3eb6d4.jpg","nickname":"面试怪圈","note":"","ucode":"C9C4B9B2F699C6","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":535978,"discussion_content":"es也是","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1638624767,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":383939,"ip_address":"","group_id":0},"score":535978,"extra":""}]},{"author":{"id":1247040,"avatar":"https://static001.geekbang.org/account/avatar/00/13/07/40/ef190cf2.jpg","nickname":"maple","note":"","ucode":"D9D2E4B36E9DD2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":283538,"discussion_content":"test","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1592292872,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":20480,"user_name":"孙振超","can_delete":false,"product_type":"c1","uid":1101755,"ip_address":"","ucode":"0F9EABC6125350","user_header":"https://static001.geekbang.org/account/avatar/00/10/cf/bb/22af0e52.jpg","comment_is_top":false,"comment_ctime":1534470970,"is_pvip":false,"replies":[{"id":7173,"content":"你的理解比我的理解还要深刻了👍👍👍😄","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1534476262,"ip_address":"","comment_id":20480,"utype":1}],"discussion_count":5,"race_medal":0,"score":2,"product_id":100006601,"comment_content":"在学习课程的过程中，发现作者是把很多的学习方法给融合到自身之中，变成了自己的东西，从知道变成了成为。比如本次的习题，通过对计算高可用和存储高可用的对比，就是很好的一个例子。\n\n要想高可用就离不开冗余，无论是计算高可用还是存储高可用都会面对机器状态检测、切换以及机器选择的问题，在这几个方面二者复杂度差别不大。\n\n但对于计算而言，集群中的机器间之间基本上是无交互的，对于需要重试的计算任务，是有任务管理器来维护处理；而存储高可用还会涉及到机器之间数据的同步和一致性问题，在同步时还需要考虑性能、稳定性、同步中断、个别失败、重复同步等问题，这一块就会复杂许多。\n因而，总体来看，存储高可用更为复杂。\n","like_count":82,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":422266,"discussion_content":"你的理解比我的理解还要深刻了👍👍👍😄","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1534476262,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1073443,"avatar":"https://static001.geekbang.org/account/avatar/00/10/61/23/30d134cf.jpg","nickname":"Young","note":"","ucode":"075C0BBE20FD8C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":380193,"discussion_content":"其实楼主的回答隐含了一个前提：计算是无状态的。\n但事实上这个假期未必一定成立，如果是有状态的场景，计算高可用就得利用存储状态来把计算变成“无状态”，此种情况也是挺复杂的。","likes_number":4,"is_delete":false,"is_hidden":false,"ctime":1624369831,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1102194,"avatar":"https://static001.geekbang.org/account/avatar/00/10/d1/72/4cc8475c.jpg","nickname":"Leaf","note":"","ucode":"9AB56B7971237D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":247476,"discussion_content":"那改变计算节点，使之变成无状态的，去掉本地存储，用一致性的存储替代","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1587815566,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1468298,"avatar":"https://static001.geekbang.org/account/avatar/00/16/67/8a/babd74dc.jpg","nickname":"锦","note":"","ucode":"CB0EB4B68C468B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":5215,"discussion_content":"在分布式架构中，往往计算节点会保存中间状态，那么这种属于存储高可用还是计算高可用呢？系统又如何设计呢？","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1566055615,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1325994,"avatar":"https://static001.geekbang.org/account/avatar/00/14/3b/aa/e8dfcd7e.jpg","nickname":"AAA_叶子","note":"","ucode":"1E93617D308EE0","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":379504,"discussion_content":"计算高可用和存储高可用有清晰的分界吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1623932140,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":14051,"user_name":"yungoo","can_delete":false,"product_type":"c1","uid":1060805,"ip_address":"","ucode":"D9BB84A75047CB","user_header":"https://static001.geekbang.org/account/avatar/00/10/2f/c5/aaacb98f.jpg","comment_is_top":false,"comment_ctime":1530153714,"is_pvip":false,"replies":[{"id":4679,"content":"你已经融会贯通👍","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1530178057,"ip_address":"","comment_id":14051,"utype":1}],"discussion_count":2,"race_medal":0,"score":2,"product_id":100006601,"comment_content":"计算高可用系统需考虑safety和liveness，而存储高可用除了需考虑safety和liveness，还受CAP约束","like_count":42,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":419854,"discussion_content":"你已经融会贯通👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1530178057,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2151836,"avatar":"https://static001.geekbang.org/account/avatar/00/20/d5/9c/842eda55.jpg","nickname":"一步两步","note":"","ucode":"B59D1F5293B5C2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":340278,"discussion_content":"赞一个","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1609941882,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":113098,"user_name":"@","can_delete":false,"product_type":"c1","uid":1098690,"ip_address":"","ucode":"AC8227752777D8","user_header":"https://static001.geekbang.org/account/avatar/00/10/c3/c2/5ff554d9.jpg","comment_is_top":false,"comment_ctime":1562896714,"is_pvip":false,"replies":[{"id":41281,"content":"一针见血👍","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1562973112,"ip_address":"","comment_id":113098,"utype":1}],"discussion_count":2,"race_medal":0,"score":2,"product_id":100006601,"comment_content":"计算无状态，存储有状态","like_count":28,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":458054,"discussion_content":"一针见血👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1562973112,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1184775,"avatar":"https://static001.geekbang.org/account/avatar/00/12/14/07/13f51bf6.jpg","nickname":"荣老师","note":"","ucode":"D470DD120C34C5","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":407534,"discussion_content":"Flink的计算状态如何理解？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1635052091,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":14017,"user_name":"oddrock","can_delete":false,"product_type":"c1","uid":1037506,"ip_address":"","ucode":"55BADA192250B0","user_header":"https://static001.geekbang.org/account/avatar/00/0f/d4/c2/910d231e.jpg","comment_is_top":false,"comment_ctime":1530145002,"is_pvip":false,"replies":[{"id":4687,"content":"分析正确","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1530178417,"ip_address":"","comment_id":14017,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100006601,"comment_content":"存储高可用比计算高可用要复杂的多，存储高可用是有状态的，计算高可用一般解决的都是无状态问题，有状态就存在着如何保存状态、同步状态的问题了","like_count":27,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":419840,"discussion_content":"分析正确","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1530178417,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":14085,"user_name":"Johnny.Z","can_delete":false,"product_type":"c1","uid":1057367,"ip_address":"","ucode":"E4496B8F5163F5","user_header":"https://static001.geekbang.org/account/avatar/00/10/22/57/cf35d10c.jpg","comment_is_top":false,"comment_ctime":1530169839,"is_pvip":false,"replies":[{"id":4675,"content":"是的，全流程的高可用要求任务分配器也高可用","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1530177861,"ip_address":"","comment_id":14085,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100006601,"comment_content":"任务分配器挂了是不是高可用计算就没办法保证了，任务分配器是否也要弄成集群呢？","like_count":10,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":419865,"discussion_content":"是的，全流程的高可用要求任务分配器也高可用","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1530177861,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":14019,"user_name":"李同杰","can_delete":false,"product_type":"c1","uid":1023307,"ip_address":"","ucode":"F0E49E896BB400","user_header":"https://static001.geekbang.org/account/avatar/00/0f/9d/4b/e1ec92c7.jpg","comment_is_top":false,"comment_ctime":1530145170,"is_pvip":false,"replies":[{"id":4685,"content":"👍👍👍","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1530178336,"ip_address":"","comment_id":14019,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100006601,"comment_content":"存储高可用需要考虑数据复制的问题，复杂度高于计算高可用架构。","like_count":8,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":419842,"discussion_content":"👍👍👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1530178336,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":14070,"user_name":"空档滑行","can_delete":false,"product_type":"c1","uid":1091611,"ip_address":"","ucode":"06A6A7F503FAA7","user_header":"https://static001.geekbang.org/account/avatar/00/10/a8/1b/ced1d171.jpg","comment_is_top":false,"comment_ctime":1530160684,"is_pvip":false,"replies":[{"id":4677,"content":"分析正确👍","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1530178014,"ip_address":"","comment_id":14070,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100006601,"comment_content":"计算高可用复杂在选择算法，随着集群规模的扩大，复杂性增加的不明显。比如负载均衡如何判断节点可用，如何判断任务失败还是只是时间较长。\n存储高可用除了面临计算高可用同样的问题在，还要考虑数据的同步，异地备灾也比计算高可用复杂，而且随着集群数量增加，整个策略都要做相应的改变","like_count":5,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":419842,"discussion_content":"👍👍👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1530178336,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":272129,"user_name":"一步两步","can_delete":false,"product_type":"c1","uid":2151836,"ip_address":"","ucode":"B59D1F5293B5C2","user_header":"https://static001.geekbang.org/account/avatar/00/20/d5/9c/842eda55.jpg","comment_is_top":false,"comment_ctime":1609941743,"is_pvip":false,"replies":[{"id":98746,"content":"你的理解是正确的，但不能因为有基础架构部门负责自己就不去关注和学习，面试的时候你要是这样说很大概率会挂😂","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1610073863,"ip_address":"","comment_id":272129,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100006601,"comment_content":"结合我的负责的项目，计算高可用更像是我平时开发的业务系统（包含了我平时写的curd），当然这个理解台浅显了，希望有更好的举例或者我后面再想想，而存储高可用是我平时业务系统调用的mysql、mongodb、redis、elasticsearch等，平时开发对存储高可用其实考虑的较少，因为有基础架构部门和DBA团队支持，也比较放心使用，只需要分析好数据规模，以及未来增长趋势即可，对于计算高可用，我负责的业务系统大概是北京、南京等三个机房、每个机房有几个集群，我的服务大概100来台机器，我的上游流控系统把流量分发到我这里，采用的是nginx的轮训做的负载均衡。","like_count":4,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":419862,"discussion_content":"分析正确👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1530178014,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":250309,"user_name":"脱缰的野马__","can_delete":false,"product_type":"c1","uid":1447569,"ip_address":"","ucode":"D5F993E7232C61","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/WtHCCMoLJ2DvzqQwPYZyj2RlN7eibTLMHDMTSO4xIKjfKR1Eh9L98AMkkZY7FmegWyGLahRQJ5ibPzeeFtfpeSow/132","comment_is_top":false,"comment_ctime":1601019100,"is_pvip":false,"replies":[{"id":91864,"content":"是的，CAP约束的是有数据复制的集群，数据分片集群不涉及数据复制","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1601431135,"ip_address":"","comment_id":250309,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100006601,"comment_content":"老师，@yungoo同学说的：存储高可用还受到CAP约束 这句话，应该需要更明确一些吧？存储高可用也是通过冗余的方式来实现，但是有不同的方案和不同的使用场景，比如是主从主备这类的集群还是切片集群。结合CAP的讲解内容，切片集群并不共享数据，切片集群存储的目的是因为数据体量非常大，只能通过某个切分规则将数据分开来存储，减少单个实例的存储压力，不涉及到集群节点之间的数据同步，最多只是扩容和缩容时的数据重分配，所以CAP应该是约束在存储高可用的主从主备种类的集群方案中吧？请教老师","like_count":3,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":513168,"discussion_content":"你的理解是正确的，但不能因为有基础架构部门负责自己就不去关注和学习，面试的时候你要是这样说很大概率会挂😂","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1610073863,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":269514,"user_name":"Geek_Littlelolo","can_delete":false,"product_type":"c1","uid":2051588,"ip_address":"","ucode":"E0AFD17D91D9EC","user_header":"","comment_is_top":false,"comment_ctime":1608689745,"is_pvip":false,"replies":[{"id":97806,"content":"是的，这是最常见的做法，同时建议用多台价格一般的加密机来代替一台价格特别贵的加密机，因为这样可以同时实现高可用","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1608773829,"ip_address":"","comment_id":269514,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100006601,"comment_content":"老师你好,我们现在的业务是开发C-V2X设备的CA系统,系统运行中包含了大量的加解密,签名,验签,计算密集型操作,目前我们设计的是加入一台高性能的加密机,如果实现计算高可用,是不是应该引入多台加密机?","like_count":2},{"had_liked":false,"id":119829,"user_name":"gt","can_delete":false,"product_type":"c1","uid":1333144,"ip_address":"","ucode":"B113FF021E978C","user_header":"https://static001.geekbang.org/account/avatar/00/14/57/98/d1bde15d.jpg","comment_is_top":false,"comment_ctime":1564709291,"is_pvip":false,"replies":[{"id":44284,"content":"重试","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1564968959,"ip_address":"","comment_id":119829,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100006601,"comment_content":"老师，我有一个问题，对于那种已经分配给某台服务器处理的任务，如果处理任务的服务挂了，这些未处理完的任务要怎么处理，有些什么方案","like_count":2,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":512305,"discussion_content":"是的，这是最常见的做法，同时建议用多台价格一般的加密机来代替一台价格特别贵的加密机，因为这样可以同时实现高可用","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1608773829,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":117624,"user_name":"天明","can_delete":false,"product_type":"c1","uid":1345618,"ip_address":"","ucode":"9C6203E8E9E348","user_header":"https://static001.geekbang.org/account/avatar/00/14/88/52/03795b59.jpg","comment_is_top":false,"comment_ctime":1564103119,"is_pvip":false,"replies":[{"id":43112,"content":"业务方自己解决","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1564114243,"ip_address":"","comment_id":117624,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100006601,"comment_content":"请求转发面临着重复计算幂等性问题？如何解决这个问题呢？","like_count":2,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":461090,"discussion_content":"重试","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1564968959,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":14022,"user_name":"星火燎原","can_delete":false,"product_type":"c1","uid":1101373,"ip_address":"","ucode":"15AD8E3006E107","user_header":"https://static001.geekbang.org/account/avatar/00/10/ce/3d/385b8263.jpg","comment_is_top":false,"comment_ctime":1530145637,"is_pvip":false,"replies":[{"id":4684,"content":"基本正确，存储高可用选举也比较复杂","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1530178324,"ip_address":"","comment_id":14022,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100006601,"comment_content":"存储高可用架构的复杂度在于节点数据的一致性上，计算高可用架构复杂度在于主从节点的选举上 不知对不对","like_count":2,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":460057,"discussion_content":"业务方自己解决","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1564114243,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":369666,"user_name":"拿笔小星","can_delete":false,"product_type":"c1","uid":1193755,"ip_address":"上海","ucode":"D3D8F6A959710D","user_header":"https://static001.geekbang.org/account/avatar/00/12/37/1b/82310e20.jpg","comment_is_top":false,"comment_ctime":1677772575,"is_pvip":false,"replies":[{"id":134705,"content":"1）主主就是2台机器负载均衡的集群\n2）主从里面不同机器执行不同任务，集群里面所有机器都执行同样的任务\n3）zookeeper的读写就是分主从执行的，leader可以处理read和write请求，follower只能处理read请求","user_name":"作者回复","user_name_real":"编辑","uid":1098920,"ctime":1677805727,"ip_address":"广东","comment_id":369666,"utype":1}],"discussion_count":3,"race_medal":0,"score":3,"product_id":100006601,"comment_content":"1）计算高可用有主从，主备，为啥没有主主呢？两个服务器，随机发任务。\n2）主从和集群，感觉没啥区别啊？唯一区别就是自动切换还是人工切换？\n3）什么样的任务会要分主从机器执行呢？","like_count":1,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":419845,"discussion_content":"基本正确，存储高可用选举也比较复杂","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1530178324,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":299076,"user_name":"小鬼爱风雪","can_delete":false,"product_type":"c1","uid":2646199,"ip_address":"","ucode":"FF72E39E557C6F","user_header":"https://static001.geekbang.org/account/avatar/00/28/60/b7/4a665c73.jpg","comment_is_top":false,"comment_ctime":1624449145,"is_pvip":false,"replies":[{"id":108497,"content":"本质上是类似的，但是计算集群一般不会像存储集群分的那么细，例如计算集群不会有“主备、主从、主主”之分，因为既然你都用了两台机器，计算的时候就没必要分主备了，反正任务发给谁处理都可以。","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1624505208,"ip_address":"","comment_id":299076,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100006601,"comment_content":"感觉上面主从主备跟后面的对称非对称有很多类似的，比如主从和后面非对称也就是恢复机制靠自动还是人工，而集群的定义更倾向于能提供服务的多节点，那么上面的主从主备都算集群吧。","like_count":1,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":522321,"discussion_content":"本质上是类似的，但是计算集群一般不会像存储集群分的那么细，例如计算集群不会有“主备、主从、主主”之分，因为既然你都用了两台机器，计算的时候就没必要分主备了，反正任务发给谁处理都可以。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1624505208,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":294082,"user_name":"Master","can_delete":false,"product_type":"c1","uid":1613760,"ip_address":"","ucode":"79D0145B853C9E","user_header":"https://static001.geekbang.org/account/avatar/00/18/9f/c0/86febfff.jpg","comment_is_top":false,"comment_ctime":1621753015,"is_pvip":false,"replies":[{"id":106740,"content":"你还是太年轻啊，Redis的Sentinel、MongoDB Replication、ZooKeeper都是非对称集群的呀","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1621830628,"ip_address":"","comment_id":294082,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100006601,"comment_content":"老师有一个问题，计算高可用，集群方式里面的非对称集群方案，有什么生活里的实例案例吗， 总觉得这个方案很鸡肋啊，什么场景得吧计算任务给master搞，计算任务再给我follower搞，是逻辑顺序？感觉也说不通啊","like_count":1,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":520503,"discussion_content":"你还是太年轻啊，Redis的Sentinel、MongoDB Replication、ZooKeeper都是非对称集群的呀","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1621830628,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":292662,"user_name":"DFighting","can_delete":false,"product_type":"c1","uid":1233193,"ip_address":"","ucode":"F3BA2426FF8582","user_header":"https://static001.geekbang.org/account/avatar/00/12/d1/29/1b1234ed.jpg","comment_is_top":false,"comment_ctime":1620913366,"is_pvip":false,"replies":[{"id":105975,"content":"是的，我把架构拆分为计算和存储，只是为了教学便于理解，不是说计算和存储是二选一","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1620952636,"ip_address":"","comment_id":292662,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100006601,"comment_content":"计算高可用虽然也是集群，但是如果仅仅是用作执行计算任务，不需要处理数据一致性等问题，复杂性比存储高可用降低不少；不过话说回来，执行任务肯定会有执行结果，结果怎么存储不需要任务介入？比如单机的DB存储失败，任务也得有相应机制处理的，所以除非完全的计算集群，不然存储高可用也得在设计的时候考虑吧","like_count":1,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":519910,"discussion_content":"是的，我把架构拆分为计算和存储，只是为了教学便于理解，不是说计算和存储是二选一","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1620952636,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":270561,"user_name":"小神david","can_delete":false,"product_type":"c1","uid":1206959,"ip_address":"","ucode":"F593F5ECEC58BA","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epmAicDUiaUdtLhVwSs6fT0yx69ibWy6ia46ZD4vblGtyee8QFz71icKZJkzccAFG3zHnMngSz7WeGBtKw/132","comment_is_top":false,"comment_ctime":1609159912,"is_pvip":false,"replies":[{"id":98160,"content":"正解，数据有状态的时候如何保证分布式多节点状态一致性非常难，FLP和CAP都是关于这方面的定理。","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1609207356,"ip_address":"","comment_id":270561,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100006601,"comment_content":"计算高可用和存储高可用架构单从图中看确实有类似之处，但是复杂度的对比不在同样的维度上。首先，计算高可用可以认为是无状态的，而存储高可用是有状态的，这是最主要的区别；其次，存储高可用要解决节点间通信的问题，而计算高可用架构不是必须的。","like_count":1,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":512669,"discussion_content":"正解，数据有状态的时候如何保证分布式多节点状态一致性非常难，FLP和CAP都是关于这方面的定理。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1609207356,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":156415,"user_name":"fomy","can_delete":false,"product_type":"c1","uid":1125834,"ip_address":"","ucode":"CD87EA03B1F327","user_header":"https://static001.geekbang.org/account/avatar/00/11/2d/ca/02b0e397.jpg","comment_is_top":false,"comment_ctime":1574867996,"is_pvip":false,"replies":[{"id":63233,"content":"zk的核心是选举，选举就是一个计算过程，因此zk是一个计算高可用集群，同时zk也能够存储一些小数据并保证数据一致，也可以算存储高可用集群，但它本质上不是为了存储设计的","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1577329557,"ip_address":"","comment_id":156415,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100006601,"comment_content":"感谢老师的分享，让我系统性地学习了高可用。原来高可用分存储高可用和计算高可用的。\n那Zookeeper本身属于计算高可用还是存储高可用呢？首先它们都是有保存了其他节点状态的，但是它们又需要实现计算高可用的。我个人观点觉得是计算高可用多一些，不知道老师觉得怎么样？\n\n课后问题：存储高可用肯定更复杂一些，有状态信息的需要保证数据一致性，比如网络原因造成同步延迟问题，这种问题不但难定位而且难解决。计算高可用可以通过重试来解决，比如dubbo分布式框架有负载均衡算法解决计算高可用。","like_count":1,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":476100,"discussion_content":"zk的核心是选举，选举就是一个计算过程，因此zk是一个计算高可用集群，同时zk也能够存储一些小数据并保证数据一致，也可以算存储高可用集群，但它本质上不是为了存储设计的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577329557,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":269514,"user_name":"Geek_Littlelolo","can_delete":false,"product_type":"c1","uid":2051588,"ip_address":"","ucode":"E0AFD17D91D9EC","user_header":"","comment_is_top":false,"comment_ctime":1608689745,"is_pvip":false,"replies":[{"id":97806,"content":"是的，这是最常见的做法，同时建议用多台价格一般的加密机来代替一台价格特别贵的加密机，因为这样可以同时实现高可用","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1608773829,"ip_address":"","comment_id":269514,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100006601,"comment_content":"老师你好,我们现在的业务是开发C-V2X设备的CA系统,系统运行中包含了大量的加解密,签名,验签,计算密集型操作,目前我们设计的是加入一台高性能的加密机,如果实现计算高可用,是不是应该引入多台加密机?","like_count":2,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":512305,"discussion_content":"是的，这是最常见的做法，同时建议用多台价格一般的加密机来代替一台价格特别贵的加密机，因为这样可以同时实现高可用","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1608773829,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":119829,"user_name":"gt","can_delete":false,"product_type":"c1","uid":1333144,"ip_address":"","ucode":"B113FF021E978C","user_header":"https://static001.geekbang.org/account/avatar/00/14/57/98/d1bde15d.jpg","comment_is_top":false,"comment_ctime":1564709291,"is_pvip":false,"replies":[{"id":44284,"content":"重试","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1564968959,"ip_address":"","comment_id":119829,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100006601,"comment_content":"老师，我有一个问题，对于那种已经分配给某台服务器处理的任务，如果处理任务的服务挂了，这些未处理完的任务要怎么处理，有些什么方案","like_count":2,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":461090,"discussion_content":"重试","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1564968959,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":117624,"user_name":"天明","can_delete":false,"product_type":"c1","uid":1345618,"ip_address":"","ucode":"9C6203E8E9E348","user_header":"https://static001.geekbang.org/account/avatar/00/14/88/52/03795b59.jpg","comment_is_top":false,"comment_ctime":1564103119,"is_pvip":false,"replies":[{"id":43112,"content":"业务方自己解决","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1564114243,"ip_address":"","comment_id":117624,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100006601,"comment_content":"请求转发面临着重复计算幂等性问题？如何解决这个问题呢？","like_count":2,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":460057,"discussion_content":"业务方自己解决","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1564114243,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":14022,"user_name":"星火燎原","can_delete":false,"product_type":"c1","uid":1101373,"ip_address":"","ucode":"15AD8E3006E107","user_header":"https://static001.geekbang.org/account/avatar/00/10/ce/3d/385b8263.jpg","comment_is_top":false,"comment_ctime":1530145637,"is_pvip":false,"replies":[{"id":4684,"content":"基本正确，存储高可用选举也比较复杂","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1530178324,"ip_address":"","comment_id":14022,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100006601,"comment_content":"存储高可用架构的复杂度在于节点数据的一致性上，计算高可用架构复杂度在于主从节点的选举上 不知对不对","like_count":2,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":419845,"discussion_content":"基本正确，存储高可用选举也比较复杂","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1530178324,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":369666,"user_name":"拿笔小星","can_delete":false,"product_type":"c1","uid":1193755,"ip_address":"上海","ucode":"D3D8F6A959710D","user_header":"https://static001.geekbang.org/account/avatar/00/12/37/1b/82310e20.jpg","comment_is_top":false,"comment_ctime":1677772575,"is_pvip":false,"replies":[{"id":134705,"content":"1）主主就是2台机器负载均衡的集群\n2）主从里面不同机器执行不同任务，集群里面所有机器都执行同样的任务\n3）zookeeper的读写就是分主从执行的，leader可以处理read和write请求，follower只能处理read请求","user_name":"作者回复","user_name_real":"编辑","uid":1098920,"ctime":1677805727,"ip_address":"广东","comment_id":369666,"utype":1}],"discussion_count":3,"race_medal":0,"score":3,"product_id":100006601,"comment_content":"1）计算高可用有主从，主备，为啥没有主主呢？两个服务器，随机发任务。\n2）主从和集群，感觉没啥区别啊？唯一区别就是自动切换还是人工切换？\n3）什么样的任务会要分主从机器执行呢？","like_count":1,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":607352,"discussion_content":"1）主主就是2台机器负载均衡的集群\n2）主从里面不同机器执行不同任务，集群里面所有机器都执行同样的任务\n3）zookeeper的读写就是分主从执行的，leader可以处理read和write请求，follower只能处理read请求","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1677805727,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"广东","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":2,"child_discussions":[{"author":{"id":1193755,"avatar":"https://static001.geekbang.org/account/avatar/00/12/37/1b/82310e20.jpg","nickname":"拿笔小星","note":"","ucode":"D3D8F6A959710D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":607427,"discussion_content":"是哦，主主就是对称集群。哈哈","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1677856434,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":607352,"ip_address":"上海","group_id":0},"score":607427,"extra":""},{"author":{"id":1193755,"avatar":"https://static001.geekbang.org/account/avatar/00/12/37/1b/82310e20.jpg","nickname":"拿笔小星","note":"","ucode":"D3D8F6A959710D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":607428,"discussion_content":"对于第2个问题。老师，非对称集群不就执行不同的任务吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1677856538,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":607352,"ip_address":"上海","group_id":0},"score":607428,"extra":""}]}]},{"had_liked":false,"id":299076,"user_name":"小鬼爱风雪","can_delete":false,"product_type":"c1","uid":2646199,"ip_address":"","ucode":"FF72E39E557C6F","user_header":"https://static001.geekbang.org/account/avatar/00/28/60/b7/4a665c73.jpg","comment_is_top":false,"comment_ctime":1624449145,"is_pvip":false,"replies":[{"id":108497,"content":"本质上是类似的，但是计算集群一般不会像存储集群分的那么细，例如计算集群不会有“主备、主从、主主”之分，因为既然你都用了两台机器，计算的时候就没必要分主备了，反正任务发给谁处理都可以。","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1624505208,"ip_address":"","comment_id":299076,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100006601,"comment_content":"感觉上面主从主备跟后面的对称非对称有很多类似的，比如主从和后面非对称也就是恢复机制靠自动还是人工，而集群的定义更倾向于能提供服务的多节点，那么上面的主从主备都算集群吧。","like_count":1,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":607352,"discussion_content":"1）主主就是2台机器负载均衡的集群\n2）主从里面不同机器执行不同任务，集群里面所有机器都执行同样的任务\n3）zookeeper的读写就是分主从执行的，leader可以处理read和write请求，follower只能处理read请求","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1677805727,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"广东","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":2,"child_discussions":[{"author":{"id":1193755,"avatar":"https://static001.geekbang.org/account/avatar/00/12/37/1b/82310e20.jpg","nickname":"拿笔小星","note":"","ucode":"D3D8F6A959710D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":607427,"discussion_content":"是哦，主主就是对称集群。哈哈","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1677856434,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":607352,"ip_address":"上海","group_id":0},"score":607427,"extra":""},{"author":{"id":1193755,"avatar":"https://static001.geekbang.org/account/avatar/00/12/37/1b/82310e20.jpg","nickname":"拿笔小星","note":"","ucode":"D3D8F6A959710D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":607428,"discussion_content":"对于第2个问题。老师，非对称集群不就执行不同的任务吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1677856538,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":607352,"ip_address":"上海","group_id":0},"score":607428,"extra":""}]}]},{"had_liked":false,"id":294082,"user_name":"Master","can_delete":false,"product_type":"c1","uid":1613760,"ip_address":"","ucode":"79D0145B853C9E","user_header":"https://static001.geekbang.org/account/avatar/00/18/9f/c0/86febfff.jpg","comment_is_top":false,"comment_ctime":1621753015,"is_pvip":false,"replies":[{"id":106740,"content":"你还是太年轻啊，Redis的Sentinel、MongoDB Replication、ZooKeeper都是非对称集群的呀","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1621830628,"ip_address":"","comment_id":294082,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100006601,"comment_content":"老师有一个问题，计算高可用，集群方式里面的非对称集群方案，有什么生活里的实例案例吗， 总觉得这个方案很鸡肋啊，什么场景得吧计算任务给master搞，计算任务再给我follower搞，是逻辑顺序？感觉也说不通啊","like_count":1,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":522321,"discussion_content":"本质上是类似的，但是计算集群一般不会像存储集群分的那么细，例如计算集群不会有“主备、主从、主主”之分，因为既然你都用了两台机器，计算的时候就没必要分主备了，反正任务发给谁处理都可以。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1624505208,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":292662,"user_name":"DFighting","can_delete":false,"product_type":"c1","uid":1233193,"ip_address":"","ucode":"F3BA2426FF8582","user_header":"https://static001.geekbang.org/account/avatar/00/12/d1/29/1b1234ed.jpg","comment_is_top":false,"comment_ctime":1620913366,"is_pvip":false,"replies":[{"id":105975,"content":"是的，我把架构拆分为计算和存储，只是为了教学便于理解，不是说计算和存储是二选一","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1620952636,"ip_address":"","comment_id":292662,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100006601,"comment_content":"计算高可用虽然也是集群，但是如果仅仅是用作执行计算任务，不需要处理数据一致性等问题，复杂性比存储高可用降低不少；不过话说回来，执行任务肯定会有执行结果，结果怎么存储不需要任务介入？比如单机的DB存储失败，任务也得有相应机制处理的，所以除非完全的计算集群，不然存储高可用也得在设计的时候考虑吧","like_count":1,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":520503,"discussion_content":"你还是太年轻啊，Redis的Sentinel、MongoDB Replication、ZooKeeper都是非对称集群的呀","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1621830628,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":270561,"user_name":"小神david","can_delete":false,"product_type":"c1","uid":1206959,"ip_address":"","ucode":"F593F5ECEC58BA","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epmAicDUiaUdtLhVwSs6fT0yx69ibWy6ia46ZD4vblGtyee8QFz71icKZJkzccAFG3zHnMngSz7WeGBtKw/132","comment_is_top":false,"comment_ctime":1609159912,"is_pvip":false,"replies":[{"id":98160,"content":"正解，数据有状态的时候如何保证分布式多节点状态一致性非常难，FLP和CAP都是关于这方面的定理。","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1609207356,"ip_address":"","comment_id":270561,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100006601,"comment_content":"计算高可用和存储高可用架构单从图中看确实有类似之处，但是复杂度的对比不在同样的维度上。首先，计算高可用可以认为是无状态的，而存储高可用是有状态的，这是最主要的区别；其次，存储高可用要解决节点间通信的问题，而计算高可用架构不是必须的。","like_count":1,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":519910,"discussion_content":"是的，我把架构拆分为计算和存储，只是为了教学便于理解，不是说计算和存储是二选一","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1620952636,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":156415,"user_name":"fomy","can_delete":false,"product_type":"c1","uid":1125834,"ip_address":"","ucode":"CD87EA03B1F327","user_header":"https://static001.geekbang.org/account/avatar/00/11/2d/ca/02b0e397.jpg","comment_is_top":false,"comment_ctime":1574867996,"is_pvip":false,"replies":[{"id":63233,"content":"zk的核心是选举，选举就是一个计算过程，因此zk是一个计算高可用集群，同时zk也能够存储一些小数据并保证数据一致，也可以算存储高可用集群，但它本质上不是为了存储设计的","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1577329557,"ip_address":"","comment_id":156415,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100006601,"comment_content":"感谢老师的分享，让我系统性地学习了高可用。原来高可用分存储高可用和计算高可用的。\n那Zookeeper本身属于计算高可用还是存储高可用呢？首先它们都是有保存了其他节点状态的，但是它们又需要实现计算高可用的。我个人观点觉得是计算高可用多一些，不知道老师觉得怎么样？\n\n课后问题：存储高可用肯定更复杂一些，有状态信息的需要保证数据一致性，比如网络原因造成同步延迟问题，这种问题不但难定位而且难解决。计算高可用可以通过重试来解决，比如dubbo分布式框架有负载均衡算法解决计算高可用。","like_count":1,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":512669,"discussion_content":"正解，数据有状态的时候如何保证分布式多节点状态一致性非常难，FLP和CAP都是关于这方面的定理。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1609207356,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":151800,"user_name":"贺敏Minbo","can_delete":false,"product_type":"c1","uid":1150190,"ip_address":"","ucode":"0F7581EB6EE1E3","user_header":"https://static001.geekbang.org/account/avatar/00/11/8c/ee/5bd478b9.jpg","comment_is_top":false,"comment_ctime":1573794203,"is_pvip":false,"replies":[{"id":59069,"content":"1. 热备随时可以接管业务，温备是系统都启动了\n2. 自动切换可以做，但做好也不那么容易","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1574303475,"ip_address":"","comment_id":151800,"utype":1}],"discussion_count":1,"race_medal":0,"score":4,"product_id":100006601,"comment_content":"计算无状态，存储有状态（CAP）\n\n两个问题：\n1. 那热备和温备的区别是？\n2.这里主备切换，是可以做成自动切换的吧？","like_count":1},{"had_liked":false,"id":113715,"user_name":"海罗沃德","can_delete":false,"product_type":"c1","uid":1165364,"ip_address":"","ucode":"8704F1D6980FA0","user_header":"https://static001.geekbang.org/account/avatar/00/11/c8/34/fb871b2c.jpg","comment_is_top":false,"comment_ctime":1563146031,"is_pvip":false,"replies":[{"id":41474,"content":"是的","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1563166943,"ip_address":"","comment_id":113715,"utype":1}],"discussion_count":1,"race_medal":0,"score":4,"product_id":100006601,"comment_content":"zookeeper在没有选出新的leader之前，整个系统是否处于downtime中？","like_count":1,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":458356,"discussion_content":"是的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1563166943,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":99698,"user_name":"旭东(Frank)","can_delete":false,"product_type":"c1","uid":1024486,"ip_address":"","ucode":"176FA629800062","user_header":"https://static001.geekbang.org/account/avatar/00/0f/a1/e6/50da1b2d.jpg","comment_is_top":false,"comment_ctime":1559281832,"is_pvip":false,"replies":[{"id":36283,"content":"都是通用的呀，高可用就是故障时间占比，性能就是吞吐量和时延","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1559617097,"ip_address":"","comment_id":99698,"utype":1}],"discussion_count":1,"race_medal":0,"score":4,"product_id":100006601,"comment_content":"请问有哪些指标表征架构的高可用，高性能？","like_count":1,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":452230,"discussion_content":"都是通用的呀，高可用就是故障时间占比，性能就是吞吐量和时延","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1559617097,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":354566,"user_name":"你说的真对","can_delete":false,"product_type":"c1","uid":2072883,"ip_address":"广东","ucode":"882AC90A40298F","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLw3jpao45frYkSMkPtE1j9jPKGLsTpuhx6f2oQqu2kG26g3z4ucXZrYxoYcotSw5dRUWCGDCpubw/132","comment_is_top":false,"comment_ctime":1660551566,"is_pvip":false,"replies":[{"id":129491,"content":"正解","user_name":"作者回复","user_name_real":"编辑","uid":1098920,"ctime":1661763418,"ip_address":"广东","comment_id":354566,"utype":1}],"discussion_count":1,"race_medal":0,"score":4,"product_id":100006601,"comment_content":"计算高可用类似于状态机, 给定输入后, 任意一台机器上返回的应该是一致的计算结果; 但是存储高可用包含一个数据一致性的问题; 存储高可用复杂度会相对高","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":585687,"discussion_content":"正解","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1661763418,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"广东","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":352191,"user_name":"艺超(鲁鸣)","can_delete":false,"product_type":"c1","uid":1029436,"ip_address":"","ucode":"7F749FA543E0F1","user_header":"https://static001.geekbang.org/account/avatar/00/0f/b5/3c/967d7291.jpg","comment_is_top":false,"comment_ctime":1658451694,"is_pvip":false,"replies":[{"id":128207,"content":"有点像，你可以理解为一主多从","user_name":"作者回复","user_name_real":"编辑","uid":1098920,"ctime":1658719669,"ip_address":"","comment_id":352191,"utype":1}],"discussion_count":1,"race_medal":0,"score":4,"product_id":100006601,"comment_content":"主从和集群里面的非对称咋这么像呢","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":581311,"discussion_content":"有点像，你可以理解为一主多从","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1658719669,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":329646,"user_name":"lliill","can_delete":false,"product_type":"c1","uid":1179412,"ip_address":"","ucode":"E01B1377D3EE57","user_header":"https://static001.geekbang.org/account/avatar/00/11/ff/14/4d5dfbfb.jpg","comment_is_top":false,"comment_ctime":1641455546,"is_pvip":false,"replies":[{"id":120108,"content":"复制和一致性要求，如果只是复制，但是一致性要求不高的话，也并不是很难","user_name":"作者回复","user_name_real":"编辑","uid":1098920,"ctime":1641535609,"ip_address":"","comment_id":329646,"utype":1}],"discussion_count":1,"race_medal":0,"score":4,"product_id":100006601,"comment_content":"存储高可用和计算高可用，最大的区别点就是数据的复制","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":544468,"discussion_content":"复制和一致性要求，如果只是复制，但是一致性要求不高的话，也并不是很难","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1641535609,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":289502,"user_name":"百威","can_delete":false,"product_type":"c1","uid":1074843,"ip_address":"","ucode":"758199FDD0B44F","user_header":"https://static001.geekbang.org/account/avatar/00/10/66/9b/59776420.jpg","comment_is_top":false,"comment_ctime":1619055763,"is_pvip":false,"replies":[{"id":105045,"content":"最后就回到了DNS，DNS本身是高可用的","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1619084126,"ip_address":"","comment_id":289502,"utype":1}],"discussion_count":1,"race_medal":0,"score":4,"product_id":100006601,"comment_content":"这些高可用方案都涉及了任务分配器，但是任务分配器要做高可用是不是也要依赖另一个任务分配器，这不套娃了么…","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":544468,"discussion_content":"复制和一致性要求，如果只是复制，但是一致性要求不高的话，也并不是很难","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1641535609,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":287564,"user_name":"insist","can_delete":false,"product_type":"c1","uid":1054536,"ip_address":"","ucode":"1EE2800A900BA7","user_header":"https://static001.geekbang.org/account/avatar/00/10/17/48/3ab39c86.jpg","comment_is_top":false,"comment_ctime":1618031065,"is_pvip":false,"replies":[{"id":104428,"content":"理解正确","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1618048455,"ip_address":"","comment_id":287564,"utype":1}],"discussion_count":1,"race_medal":0,"score":4,"product_id":100006601,"comment_content":"计算高可用和存储高可用的设计思路相同点是冗余、需要检测服务器状态，目的都是解决单点故障，能够快速手动或者自动恢复服务，但存储高可用还需要多考虑数据一致性问题，复杂度更高。银行业务中需要设计同城异地实时灾备，在计算高可用上无非是多部署一套服务，但在数据实时备份上，需要考虑网络延时、是否对生产环境访问产生影响等情况，更加复杂一些","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":518349,"discussion_content":"理解正确","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1618048455,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":199153,"user_name":"Geek_m5gw8j","can_delete":false,"product_type":"c1","uid":1002777,"ip_address":"","ucode":"87C21F82BD98CB","user_header":"https://static001.geekbang.org/account/avatar/00/0f/4d/19/aaa93809.jpg","comment_is_top":false,"comment_ctime":1585480630,"is_pvip":false,"replies":[{"id":74865,"content":"正解","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1585539295,"ip_address":"","comment_id":199153,"utype":1}],"discussion_count":1,"race_medal":0,"score":4,"product_id":100006601,"comment_content":"存储是有状态，计算一般是无状态的","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":518349,"discussion_content":"理解正确","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1618048455,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":198458,"user_name":"阿恒","can_delete":false,"product_type":"c1","uid":1100238,"ip_address":"","ucode":"59434AB37236E5","user_header":"https://static001.geekbang.org/account/avatar/00/10/c9/ce/cc85c6c3.jpg","comment_is_top":false,"comment_ctime":1585452635,"is_pvip":false,"replies":[{"id":74868,"content":"评论区卧虎藏龙","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1585539510,"ip_address":"","comment_id":198458,"utype":1}],"discussion_count":1,"race_medal":0,"score":4,"product_id":100006601,"comment_content":"看评论区也是很好的学习呀，小伙伴们总结的很到位呀！哈哈","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":489794,"discussion_content":"正解","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585539295,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":151800,"user_name":"贺敏Minbo","can_delete":false,"product_type":"c1","uid":1150190,"ip_address":"","ucode":"0F7581EB6EE1E3","user_header":"https://static001.geekbang.org/account/avatar/00/11/8c/ee/5bd478b9.jpg","comment_is_top":false,"comment_ctime":1573794203,"is_pvip":false,"replies":[{"id":59069,"content":"1. 热备随时可以接管业务，温备是系统都启动了\n2. 自动切换可以做，但做好也不那么容易","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1574303475,"ip_address":"","comment_id":151800,"utype":1}],"discussion_count":1,"race_medal":0,"score":4,"product_id":100006601,"comment_content":"计算无状态，存储有状态（CAP）\n\n两个问题：\n1. 那热备和温备的区别是？\n2.这里主备切换，是可以做成自动切换的吧？","like_count":1,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":474619,"discussion_content":"1. 热备随时可以接管业务，温备是系统都启动了\n2. 自动切换可以做，但做好也不那么容易","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574303475,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":113715,"user_name":"海罗沃德","can_delete":false,"product_type":"c1","uid":1165364,"ip_address":"","ucode":"8704F1D6980FA0","user_header":"https://static001.geekbang.org/account/avatar/00/11/c8/34/fb871b2c.jpg","comment_is_top":false,"comment_ctime":1563146031,"is_pvip":false,"replies":[{"id":41474,"content":"是的","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1563166943,"ip_address":"","comment_id":113715,"utype":1}],"discussion_count":1,"race_medal":0,"score":4,"product_id":100006601,"comment_content":"zookeeper在没有选出新的leader之前，整个系统是否处于downtime中？","like_count":1,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":474619,"discussion_content":"1. 热备随时可以接管业务，温备是系统都启动了\n2. 自动切换可以做，但做好也不那么容易","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574303475,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":99698,"user_name":"旭东(Frank)","can_delete":false,"product_type":"c1","uid":1024486,"ip_address":"","ucode":"176FA629800062","user_header":"https://static001.geekbang.org/account/avatar/00/0f/a1/e6/50da1b2d.jpg","comment_is_top":false,"comment_ctime":1559281832,"is_pvip":false,"replies":[{"id":36283,"content":"都是通用的呀，高可用就是故障时间占比，性能就是吞吐量和时延","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1559617097,"ip_address":"","comment_id":99698,"utype":1}],"discussion_count":1,"race_medal":0,"score":4,"product_id":100006601,"comment_content":"请问有哪些指标表征架构的高可用，高性能？","like_count":1,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":458356,"discussion_content":"是的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1563166943,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":354566,"user_name":"你说的真对","can_delete":false,"product_type":"c1","uid":2072883,"ip_address":"广东","ucode":"882AC90A40298F","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLw3jpao45frYkSMkPtE1j9jPKGLsTpuhx6f2oQqu2kG26g3z4ucXZrYxoYcotSw5dRUWCGDCpubw/132","comment_is_top":false,"comment_ctime":1660551566,"is_pvip":false,"replies":[{"id":129491,"content":"正解","user_name":"作者回复","user_name_real":"编辑","uid":1098920,"ctime":1661763418,"ip_address":"广东","comment_id":354566,"utype":1}],"discussion_count":1,"race_medal":0,"score":4,"product_id":100006601,"comment_content":"计算高可用类似于状态机, 给定输入后, 任意一台机器上返回的应该是一致的计算结果; 但是存储高可用包含一个数据一致性的问题; 存储高可用复杂度会相对高","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":452230,"discussion_content":"都是通用的呀，高可用就是故障时间占比，性能就是吞吐量和时延","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1559617097,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":352191,"user_name":"艺超(鲁鸣)","can_delete":false,"product_type":"c1","uid":1029436,"ip_address":"","ucode":"7F749FA543E0F1","user_header":"https://static001.geekbang.org/account/avatar/00/0f/b5/3c/967d7291.jpg","comment_is_top":false,"comment_ctime":1658451694,"is_pvip":false,"replies":[{"id":128207,"content":"有点像，你可以理解为一主多从","user_name":"作者回复","user_name_real":"编辑","uid":1098920,"ctime":1658719669,"ip_address":"","comment_id":352191,"utype":1}],"discussion_count":1,"race_medal":0,"score":4,"product_id":100006601,"comment_content":"主从和集群里面的非对称咋这么像呢","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":585687,"discussion_content":"正解","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1661763418,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"广东","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":329646,"user_name":"lliill","can_delete":false,"product_type":"c1","uid":1179412,"ip_address":"","ucode":"E01B1377D3EE57","user_header":"https://static001.geekbang.org/account/avatar/00/11/ff/14/4d5dfbfb.jpg","comment_is_top":false,"comment_ctime":1641455546,"is_pvip":false,"replies":[{"id":120108,"content":"复制和一致性要求，如果只是复制，但是一致性要求不高的话，也并不是很难","user_name":"作者回复","user_name_real":"编辑","uid":1098920,"ctime":1641535609,"ip_address":"","comment_id":329646,"utype":1}],"discussion_count":1,"race_medal":0,"score":4,"product_id":100006601,"comment_content":"存储高可用和计算高可用，最大的区别点就是数据的复制","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":581311,"discussion_content":"有点像，你可以理解为一主多从","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1658719669,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":289502,"user_name":"百威","can_delete":false,"product_type":"c1","uid":1074843,"ip_address":"","ucode":"758199FDD0B44F","user_header":"https://static001.geekbang.org/account/avatar/00/10/66/9b/59776420.jpg","comment_is_top":false,"comment_ctime":1619055763,"is_pvip":false,"replies":[{"id":105045,"content":"最后就回到了DNS，DNS本身是高可用的","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1619084126,"ip_address":"","comment_id":289502,"utype":1}],"discussion_count":1,"race_medal":0,"score":4,"product_id":100006601,"comment_content":"这些高可用方案都涉及了任务分配器，但是任务分配器要做高可用是不是也要依赖另一个任务分配器，这不套娃了么…","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":518935,"discussion_content":"最后就回到了DNS，DNS本身是高可用的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1619084126,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":287564,"user_name":"insist","can_delete":false,"product_type":"c1","uid":1054536,"ip_address":"","ucode":"1EE2800A900BA7","user_header":"https://static001.geekbang.org/account/avatar/00/10/17/48/3ab39c86.jpg","comment_is_top":false,"comment_ctime":1618031065,"is_pvip":false,"replies":[{"id":104428,"content":"理解正确","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1618048455,"ip_address":"","comment_id":287564,"utype":1}],"discussion_count":1,"race_medal":0,"score":4,"product_id":100006601,"comment_content":"计算高可用和存储高可用的设计思路相同点是冗余、需要检测服务器状态，目的都是解决单点故障，能够快速手动或者自动恢复服务，但存储高可用还需要多考虑数据一致性问题，复杂度更高。银行业务中需要设计同城异地实时灾备，在计算高可用上无非是多部署一套服务，但在数据实时备份上，需要考虑网络延时、是否对生产环境访问产生影响等情况，更加复杂一些","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":518935,"discussion_content":"最后就回到了DNS，DNS本身是高可用的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1619084126,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":199153,"user_name":"Geek_m5gw8j","can_delete":false,"product_type":"c1","uid":1002777,"ip_address":"","ucode":"87C21F82BD98CB","user_header":"https://static001.geekbang.org/account/avatar/00/0f/4d/19/aaa93809.jpg","comment_is_top":false,"comment_ctime":1585480630,"is_pvip":false,"replies":[{"id":74865,"content":"正解","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1585539295,"ip_address":"","comment_id":199153,"utype":1}],"discussion_count":1,"race_medal":0,"score":4,"product_id":100006601,"comment_content":"存储是有状态，计算一般是无状态的","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":489794,"discussion_content":"正解","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585539295,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":198458,"user_name":"阿恒","can_delete":false,"product_type":"c1","uid":1100238,"ip_address":"","ucode":"59434AB37236E5","user_header":"https://static001.geekbang.org/account/avatar/00/10/c9/ce/cc85c6c3.jpg","comment_is_top":false,"comment_ctime":1585452635,"is_pvip":false,"replies":[{"id":74868,"content":"评论区卧虎藏龙","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1585539510,"ip_address":"","comment_id":198458,"utype":1}],"discussion_count":1,"race_medal":0,"score":4,"product_id":100006601,"comment_content":"看评论区也是很好的学习呀，小伙伴们总结的很到位呀！哈哈","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":489709,"discussion_content":"评论区卧虎藏龙","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585539510,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":173309,"user_name":"★只求超越一般★","can_delete":false,"product_type":"c1","uid":1101431,"ip_address":"","ucode":"8F01E081AC3D93","user_header":"https://static001.geekbang.org/account/avatar/00/10/ce/77/66e26690.jpg","comment_is_top":false,"comment_ctime":1579501229,"is_pvip":false,"replies":[{"id":69953,"content":"感谢😄","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1582192724,"ip_address":"","comment_id":173309,"utype":1}],"discussion_count":1,"race_medal":0,"score":5,"product_id":100006601,"comment_content":"嗯  写的不错","like_count":0},{"had_liked":false,"id":125077,"user_name":"锦","can_delete":false,"product_type":"c1","uid":1468298,"ip_address":"","ucode":"CB0EB4B68C468B","user_header":"https://static001.geekbang.org/account/avatar/00/16/67/8a/babd74dc.jpg","comment_is_top":false,"comment_ctime":1566055661,"is_pvip":false,"replies":[{"id":46183,"content":"计算节点保存高可用当然是为了计算，因为节点一重启中间状态就没有了","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1566260869,"ip_address":"","comment_id":125077,"utype":1}],"discussion_count":1,"race_medal":0,"score":5,"product_id":100006601,"comment_content":"在分布式架构中，往往计算节点会保存中间状态，那么这种属于存储高可用还是计算高可用呢？系统又如何设计呢？","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":482030,"discussion_content":"感谢😄","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582192724,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":122365,"user_name":"(╯‵□′)╯︵┻━┻","can_delete":false,"product_type":"c1","uid":1387589,"ip_address":"","ucode":"10A03AB1CB6B42","user_header":"https://static001.geekbang.org/account/avatar/00/15/2c/45/e8bcf142.jpg","comment_is_top":false,"comment_ctime":1565349943,"is_pvip":false,"replies":[{"id":45753,"content":"角度新奇，不过我没看懂😂","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1565924008,"ip_address":"","comment_id":122365,"utype":1}],"discussion_count":2,"race_medal":0,"score":5,"product_id":100006601,"comment_content":"先不考虑架构，说存储和计算本身。\n\n储存相当于一种时序数据结构，当前由过去决定，需要在当前保证过去储存的数据。由于需要定时执行存储或备份操作，复杂度的上限可以简化为冗余度n乘以已运营时间的长度t。由于存储量是是随着时间累计的，所以可以简化为t&#47;2。那么存储的总复杂度就是O(n*t*t&#47;2)，当前时间执行存储的复杂度是其微分，O(n*t)。\n\n计算结果不取决于过去。所以总复杂度仅为O(n*t)，n是计算规模。其当前复杂度为其微分O(n)。\n\n架构的意义在于当前时间，那么存储架构中关系到增加冗余度的部分，相当于上面的O(n*t)复杂度，其余部分由于不需要在乎过去的数据，复杂度都为O(n)。而计算架构中的任何部分复杂度都是O(n)。","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":462222,"discussion_content":"角度新奇，不过我没看懂😂","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1565924008,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1073443,"avatar":"https://static001.geekbang.org/account/avatar/00/10/61/23/30d134cf.jpg","nickname":"Young","note":"","ucode":"075C0BBE20FD8C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":380196,"discussion_content":"为啥要求导？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1624370464,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":36684,"user_name":"Dylan","can_delete":false,"product_type":"c1","uid":1040236,"ip_address":"","ucode":"58064D0C9F9F5F","user_header":"https://static001.geekbang.org/account/avatar/00/0f/df/6c/5af32271.jpg","comment_is_top":false,"comment_ctime":1541235012,"is_pvip":false,"replies":[{"id":13141,"content":"是的，同时设计复杂度更高","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1541398919,"ip_address":"","comment_id":36684,"utype":1}],"discussion_count":1,"race_medal":0,"score":5,"product_id":100006601,"comment_content":"计算高可用集群和存储高可用集群如果是同一个集群呢，也就是同一个集群既要考虑计算高可用又要考虑存储高可用，那么这个复杂度是不是把两者分别的复杂度都要考虑上？那感觉这个复杂度会远远超过单个的复杂度。","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":462222,"discussion_content":"角度新奇，不过我没看懂😂","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1565924008,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1073443,"avatar":"https://static001.geekbang.org/account/avatar/00/10/61/23/30d134cf.jpg","nickname":"Young","note":"","ucode":"075C0BBE20FD8C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":380196,"discussion_content":"为啥要求导？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1624370464,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":31990,"user_name":"小喵喵","can_delete":false,"product_type":"c1","uid":1062444,"ip_address":"","ucode":"FDBBB2A59DB8B6","user_header":"https://static001.geekbang.org/account/avatar/00/10/36/2c/8bd4be3a.jpg","comment_is_top":false,"comment_ctime":1539350945,"is_pvip":false,"replies":[{"id":11569,"content":"这是计算高可用集群，不是存储高可用集群","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1539357994,"ip_address":"","comment_id":31990,"utype":1}],"discussion_count":1,"race_medal":0,"score":5,"product_id":100006601,"comment_content":"集群架构中服务器1,服务器2,,服务器3,...,服务器n为什么彼此之间没有数据同步呢？","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":427970,"discussion_content":"是的，同时设计复杂度更高","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1541398919,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":28994,"user_name":"华烬","can_delete":false,"product_type":"c1","uid":1008444,"ip_address":"","ucode":"D36AE0FBEF665A","user_header":"https://static001.geekbang.org/account/avatar/00/0f/63/3c/b4cfbce9.jpg","comment_is_top":false,"comment_ctime":1538217960,"is_pvip":false,"replies":[{"id":10452,"content":"计算任务直接重跑，用计算集群就可以了，主从切换的架构和两台机器的集群架构是一样的","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1538226865,"ip_address":"","comment_id":28994,"utype":1}],"discussion_count":1,"race_medal":0,"score":5,"product_id":100006601,"comment_content":"请教一下，为什么将存储高可用的时候，主备和主从讲了双机切换，而计算高可用的时候就没有说？我理解也是可以做双机切换，来代替手动切换的吧","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":426599,"discussion_content":"这是计算高可用集群，不是存储高可用集群","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1539357994,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":21195,"user_name":"文竹","can_delete":false,"product_type":"c1","uid":1103167,"ip_address":"","ucode":"74413B1975976B","user_header":"https://static001.geekbang.org/account/avatar/00/10/d5/3f/80bf4841.jpg","comment_is_top":false,"comment_ctime":1534980671,"is_pvip":false,"replies":[{"id":7525,"content":"高可用是要复杂一些","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1535007033,"ip_address":"","comment_id":21195,"utype":1}],"discussion_count":1,"race_medal":0,"score":5,"product_id":100006601,"comment_content":"复杂度不一样，存储高可用复杂度高，主要提现在数据复制和一致性方面。\n主备架构：存储高可用主备机间有数据复制。\n主从架构：存储高可用主备机间有数据复制。\n集群架构：存储高可用无对称集群，计算高可用无集中集群，存储高可用主备机间有数据复制。","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":425458,"discussion_content":"计算任务直接重跑，用计算集群就可以了，主从切换的架构和两台机器的集群架构是一样的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1538226865,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":14430,"user_name":"阿鼎","can_delete":false,"product_type":"c1","uid":1042634,"ip_address":"","ucode":"EE763513563F50","user_header":"https://static001.geekbang.org/account/avatar/00/0f/e8/ca/2a7cc193.jpg","comment_is_top":false,"comment_ctime":1530428572,"is_pvip":false,"replies":[{"id":4896,"content":"有的业务是人工切换的，因为简单，例如一些酒店管理系统","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1530520582,"ip_address":"","comment_id":14430,"utype":1}],"discussion_count":2,"race_medal":0,"score":5,"product_id":100006601,"comment_content":"实际上没有哪个业务同意人工切换主备的，都是需要自动切换。请问老师，热备和温备有什么区别？","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":420009,"discussion_content":"有的业务是人工切换的，因为简单，例如一些酒店管理系统","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1530520582,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1247040,"avatar":"https://static001.geekbang.org/account/avatar/00/13/07/40/ef190cf2.jpg","nickname":"maple","note":"","ucode":"D9D2E4B36E9DD2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":283536,"discussion_content":"赞","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1592292780,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":14135,"user_name":"林","can_delete":false,"product_type":"c1","uid":1022243,"ip_address":"","ucode":"273F83CB3F9DF8","user_header":"https://static001.geekbang.org/account/avatar/00/0f/99/23/3c3272bd.jpg","comment_is_top":false,"comment_ctime":1530190645,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":5,"product_id":100006601,"comment_content":"看评论人人都是架构师的感觉，老师讲的好，各位学友更是青出于蓝而胜于蓝！佩服","like_count":25},{"had_liked":false,"id":14620,"user_name":"Leon Wong","can_delete":false,"product_type":"c1","uid":1073650,"ip_address":"","ucode":"B49B327367CF9E","user_header":"https://static001.geekbang.org/account/avatar/00/10/61/f2/ca989d6f.jpg","comment_is_top":false,"comment_ctime":1530578697,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":5,"product_id":100006601,"comment_content":"往往AP设计倾向的系统，大多数是对称集群;而往往CP设计倾向的系统，大多数都是非对称集群","like_count":5,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":420009,"discussion_content":"有的业务是人工切换的，因为简单，例如一些酒店管理系统","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1530520582,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1247040,"avatar":"https://static001.geekbang.org/account/avatar/00/13/07/40/ef190cf2.jpg","nickname":"maple","note":"","ucode":"D9D2E4B36E9DD2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":283536,"discussion_content":"赞","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1592292780,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":173309,"user_name":"★只求超越一般★","can_delete":false,"product_type":"c1","uid":1101431,"ip_address":"","ucode":"8F01E081AC3D93","user_header":"https://static001.geekbang.org/account/avatar/00/10/ce/77/66e26690.jpg","comment_is_top":false,"comment_ctime":1579501229,"is_pvip":false,"replies":[{"id":69953,"content":"感谢😄","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1582192724,"ip_address":"","comment_id":173309,"utype":1}],"discussion_count":1,"race_medal":0,"score":5,"product_id":100006601,"comment_content":"嗯  写的不错","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":482030,"discussion_content":"感谢😄","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582192724,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":125077,"user_name":"锦","can_delete":false,"product_type":"c1","uid":1468298,"ip_address":"","ucode":"CB0EB4B68C468B","user_header":"https://static001.geekbang.org/account/avatar/00/16/67/8a/babd74dc.jpg","comment_is_top":false,"comment_ctime":1566055661,"is_pvip":false,"replies":[{"id":46183,"content":"计算节点保存高可用当然是为了计算，因为节点一重启中间状态就没有了","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1566260869,"ip_address":"","comment_id":125077,"utype":1}],"discussion_count":1,"race_medal":0,"score":5,"product_id":100006601,"comment_content":"在分布式架构中，往往计算节点会保存中间状态，那么这种属于存储高可用还是计算高可用呢？系统又如何设计呢？","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":463425,"discussion_content":"计算节点保存高可用当然是为了计算，因为节点一重启中间状态就没有了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566260869,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":122365,"user_name":"(╯‵□′)╯︵┻━┻","can_delete":false,"product_type":"c1","uid":1387589,"ip_address":"","ucode":"10A03AB1CB6B42","user_header":"https://static001.geekbang.org/account/avatar/00/15/2c/45/e8bcf142.jpg","comment_is_top":false,"comment_ctime":1565349943,"is_pvip":false,"replies":[{"id":45753,"content":"角度新奇，不过我没看懂😂","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1565924008,"ip_address":"","comment_id":122365,"utype":1}],"discussion_count":2,"race_medal":0,"score":5,"product_id":100006601,"comment_content":"先不考虑架构，说存储和计算本身。\n\n储存相当于一种时序数据结构，当前由过去决定，需要在当前保证过去储存的数据。由于需要定时执行存储或备份操作，复杂度的上限可以简化为冗余度n乘以已运营时间的长度t。由于存储量是是随着时间累计的，所以可以简化为t&#47;2。那么存储的总复杂度就是O(n*t*t&#47;2)，当前时间执行存储的复杂度是其微分，O(n*t)。\n\n计算结果不取决于过去。所以总复杂度仅为O(n*t)，n是计算规模。其当前复杂度为其微分O(n)。\n\n架构的意义在于当前时间，那么存储架构中关系到增加冗余度的部分，相当于上面的O(n*t)复杂度，其余部分由于不需要在乎过去的数据，复杂度都为O(n)。而计算架构中的任何部分复杂度都是O(n)。","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":463425,"discussion_content":"计算节点保存高可用当然是为了计算，因为节点一重启中间状态就没有了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566260869,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":36684,"user_name":"Dylan","can_delete":false,"product_type":"c1","uid":1040236,"ip_address":"","ucode":"58064D0C9F9F5F","user_header":"https://static001.geekbang.org/account/avatar/00/0f/df/6c/5af32271.jpg","comment_is_top":false,"comment_ctime":1541235012,"is_pvip":false,"replies":[{"id":13141,"content":"是的，同时设计复杂度更高","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1541398919,"ip_address":"","comment_id":36684,"utype":1}],"discussion_count":1,"race_medal":0,"score":5,"product_id":100006601,"comment_content":"计算高可用集群和存储高可用集群如果是同一个集群呢，也就是同一个集群既要考虑计算高可用又要考虑存储高可用，那么这个复杂度是不是把两者分别的复杂度都要考虑上？那感觉这个复杂度会远远超过单个的复杂度。","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":427970,"discussion_content":"是的，同时设计复杂度更高","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1541398919,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":31990,"user_name":"小喵喵","can_delete":false,"product_type":"c1","uid":1062444,"ip_address":"","ucode":"FDBBB2A59DB8B6","user_header":"https://static001.geekbang.org/account/avatar/00/10/36/2c/8bd4be3a.jpg","comment_is_top":false,"comment_ctime":1539350945,"is_pvip":false,"replies":[{"id":11569,"content":"这是计算高可用集群，不是存储高可用集群","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1539357994,"ip_address":"","comment_id":31990,"utype":1}],"discussion_count":1,"race_medal":0,"score":5,"product_id":100006601,"comment_content":"集群架构中服务器1,服务器2,,服务器3,...,服务器n为什么彼此之间没有数据同步呢？","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":426599,"discussion_content":"这是计算高可用集群，不是存储高可用集群","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1539357994,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":28994,"user_name":"华烬","can_delete":false,"product_type":"c1","uid":1008444,"ip_address":"","ucode":"D36AE0FBEF665A","user_header":"https://static001.geekbang.org/account/avatar/00/0f/63/3c/b4cfbce9.jpg","comment_is_top":false,"comment_ctime":1538217960,"is_pvip":false,"replies":[{"id":10452,"content":"计算任务直接重跑，用计算集群就可以了，主从切换的架构和两台机器的集群架构是一样的","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1538226865,"ip_address":"","comment_id":28994,"utype":1}],"discussion_count":1,"race_medal":0,"score":5,"product_id":100006601,"comment_content":"请教一下，为什么将存储高可用的时候，主备和主从讲了双机切换，而计算高可用的时候就没有说？我理解也是可以做双机切换，来代替手动切换的吧","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":425458,"discussion_content":"计算任务直接重跑，用计算集群就可以了，主从切换的架构和两台机器的集群架构是一样的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1538226865,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":21195,"user_name":"文竹","can_delete":false,"product_type":"c1","uid":1103167,"ip_address":"","ucode":"74413B1975976B","user_header":"https://static001.geekbang.org/account/avatar/00/10/d5/3f/80bf4841.jpg","comment_is_top":false,"comment_ctime":1534980671,"is_pvip":false,"replies":[{"id":7525,"content":"高可用是要复杂一些","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1535007033,"ip_address":"","comment_id":21195,"utype":1}],"discussion_count":1,"race_medal":0,"score":5,"product_id":100006601,"comment_content":"复杂度不一样，存储高可用复杂度高，主要提现在数据复制和一致性方面。\n主备架构：存储高可用主备机间有数据复制。\n主从架构：存储高可用主备机间有数据复制。\n集群架构：存储高可用无对称集群，计算高可用无集中集群，存储高可用主备机间有数据复制。","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":422573,"discussion_content":"高可用是要复杂一些","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1535007033,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":14430,"user_name":"阿鼎","can_delete":false,"product_type":"c1","uid":1042634,"ip_address":"","ucode":"EE763513563F50","user_header":"https://static001.geekbang.org/account/avatar/00/0f/e8/ca/2a7cc193.jpg","comment_is_top":false,"comment_ctime":1530428572,"is_pvip":false,"replies":[{"id":4896,"content":"有的业务是人工切换的，因为简单，例如一些酒店管理系统","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1530520582,"ip_address":"","comment_id":14430,"utype":1}],"discussion_count":2,"race_medal":0,"score":5,"product_id":100006601,"comment_content":"实际上没有哪个业务同意人工切换主备的，都是需要自动切换。请问老师，热备和温备有什么区别？","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":422573,"discussion_content":"高可用是要复杂一些","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1535007033,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":14135,"user_name":"林","can_delete":false,"product_type":"c1","uid":1022243,"ip_address":"","ucode":"273F83CB3F9DF8","user_header":"https://static001.geekbang.org/account/avatar/00/0f/99/23/3c3272bd.jpg","comment_is_top":false,"comment_ctime":1530190645,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":5,"product_id":100006601,"comment_content":"看评论人人都是架构师的感觉，老师讲的好，各位学友更是青出于蓝而胜于蓝！佩服","like_count":25},{"had_liked":false,"id":14620,"user_name":"Leon Wong","can_delete":false,"product_type":"c1","uid":1073650,"ip_address":"","ucode":"B49B327367CF9E","user_header":"https://static001.geekbang.org/account/avatar/00/10/61/f2/ca989d6f.jpg","comment_is_top":false,"comment_ctime":1530578697,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":5,"product_id":100006601,"comment_content":"往往AP设计倾向的系统，大多数是对称集群;而往往CP设计倾向的系统，大多数都是非对称集群","like_count":5},{"had_liked":false,"id":261736,"user_name":"落叶飞逝的恋","can_delete":false,"product_type":"c1","uid":1046429,"ip_address":"","ucode":"F9A95DB28BCF1E","user_header":"https://static001.geekbang.org/account/avatar/00/0f/f7/9d/be04b331.jpg","comment_is_top":false,"comment_ctime":1605509610,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":6,"product_id":100006601,"comment_content":"计算高可用架构的核心关注点在于：如何分配计算任务。而存储高可用，需要关注存储的数据的各种状态等","like_count":1},{"had_liked":false,"id":14410,"user_name":"成功","can_delete":false,"product_type":"c1","uid":1112099,"ip_address":"","ucode":"954B90AC92E8C3","user_header":"https://static001.geekbang.org/account/avatar/00/10/f8/23/165d2f0e.jpg","comment_is_top":false,"comment_ctime":1530407140,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":6,"product_id":100006601,"comment_content":"存储任务要考虑CAP三个方面，肯定比计算任务复杂","like_count":1},{"had_liked":false,"id":288819,"user_name":"prader26","can_delete":false,"product_type":"c1","uid":1433707,"ip_address":"","ucode":"5EFFFC374ADECE","user_header":"https://static001.geekbang.org/account/avatar/00/15/e0/6b/f61d7466.jpg","comment_is_top":false,"comment_ctime":1618715898,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":6,"product_id":100006601,"comment_content":"常见的计算高可用架构：主备、主从和集群。","like_count":0},{"had_liked":false,"id":243750,"user_name":"林毅鑫","can_delete":false,"product_type":"c1","uid":1917916,"ip_address":"","ucode":"1BB3D186E90D96","user_header":"https://static001.geekbang.org/account/avatar/00/1d/43/dc/95d4f2c5.jpg","comment_is_top":false,"comment_ctime":1598265396,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":6,"product_id":100006601,"comment_content":"评论区大神好多，总结到位。\ne.g:计算无状态，存储有状态，所以存储高可用更复杂。","like_count":0},{"had_liked":false,"id":185552,"user_name":"谭方敏","can_delete":false,"product_type":"c1","uid":1710960,"ip_address":"","ucode":"728DC7ECB7C902","user_header":"https://static001.geekbang.org/account/avatar/00/1a/1b/70/547042ee.jpg","comment_is_top":false,"comment_ctime":1583631482,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":6,"product_id":100006601,"comment_content":"计算高可用性的关键设计点：1）哪些服务可以执行任务，一种方式是每个服务都可以执行任务，另外一种方式是特定服务才可以，比如zookeeper；2）任务如何重新执行,一种方式是不管已分配任务执行结果，只确保现有任务成分配到非故障服务器上，另外一种方式是增加任务管理器，负责管理任务执行。服务执行后需要向任务管理器汇报执行结果，以便管理服务器决定是否继续往现在服务器上发布任务还是换新的。\n计算型高可用架构也分为主备，主从，集群方式。\n大体上他们是相似的，不过考虑的内容有所不同，主备里面有两个概念：冷备跟热备，他们的区别在于是否正在运行，正在运行的备份叫热备，不然就叫冷备。\n集群里面有分对称性集群和非对称性集群\n对称性集群又可称负载均衡集群，非对称性集群则表现为每个节点服务器权责不一致，比如zookeeper.\n\n至于计算（存储）高可用架构的区别在于，计算关心的是计算任务，而存储需要关系的东西非常多，比如数据复制，状态检测，数据一致性等。\n","like_count":0},{"had_liked":false,"id":15599,"user_name":"大光头","can_delete":false,"product_type":"c1","uid":1041792,"ip_address":"","ucode":"8EF797AFD1E27C","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eo3DrWeV7ZwRLXrRZg4V3ic1LQYdZ3u1oicDhqPic47vMguvf5QS69roTiaJrwDr5Re3Sy2UyHDWwmsTA/132","comment_is_top":false,"comment_ctime":1531320664,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":6,"product_id":100006601,"comment_content":"不一样，存储高可用更复杂。计算高可用要考虑任务调度，但是存储高可用不光要考虑这个，还要考虑数据一致性的问题","like_count":0},{"had_liked":false,"id":14424,"user_name":"今夕是何年","can_delete":false,"product_type":"c1","uid":1111847,"ip_address":"","ucode":"2825454A7A1588","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/7SOblVZ7dNJ88wkeYR0HklxdR9VuiaQ0GMscAnrlic6EjvRZS52m4n1VPypwZFsmabbJ4STZRbHFfVZE24Jjqr1w/132","comment_is_top":false,"comment_ctime":1530423129,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":6,"product_id":100006601,"comment_content":"计算高可用和存储高可用最大的区别就是 存储高可用需要数据复制。\n","like_count":0},{"had_liked":false,"id":14154,"user_name":"凡凡","can_delete":false,"product_type":"c1","uid":1056142,"ip_address":"","ucode":"134C1E1E6B22BF","user_header":"https://static001.geekbang.org/account/avatar/00/10/1d/8e/0a546871.jpg","comment_is_top":false,"comment_ctime":1530196738,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":6,"product_id":100006601,"comment_content":"1.任务集群主要难点在任务和资源的分配，对于共有计算资源一般需要一个任务分配器的角色，做统一分配和管理，比如mesos和k8s以及在他们基础上实现的调度器。但是对于自有资源的计算任务，可以没有调度器的绝色，只需要负载均衡器即可。对于第一种类型的计算集群复杂度是比较高的。2．存储集群高可用的难度分为读请求和写请求两个方面，写一般需要写入多个节点才算完成，即存储多份保证高可用。读请求在任何一个数据存储节点都可以读取。存储集群还需要一个索引服务（头节点），写时分配需要写入的节点，读时索引数据存储节点。","like_count":0},{"had_liked":false,"id":14117,"user_name":"张立春","can_delete":false,"product_type":"c1","uid":1124382,"ip_address":"","ucode":"D8B4523B95D839","user_header":"https://static001.geekbang.org/account/avatar/00/11/28/1e/76e19bd3.jpg","comment_is_top":false,"comment_ctime":1530180971,"is_pvip":false,"replies":null,"discussion_count":1,"race_medal":0,"score":6,"product_id":100006601,"comment_content":"如果正在执行的任务发生计算节点故障，要继续平滑完成该任务的难度不比存储节点出现故障的数据同步低吧","like_count":0},{"had_liked":false,"id":261736,"user_name":"落叶飞逝的恋","can_delete":false,"product_type":"c1","uid":1046429,"ip_address":"","ucode":"F9A95DB28BCF1E","user_header":"https://static001.geekbang.org/account/avatar/00/0f/f7/9d/be04b331.jpg","comment_is_top":false,"comment_ctime":1605509610,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":6,"product_id":100006601,"comment_content":"计算高可用架构的核心关注点在于：如何分配计算任务。而存储高可用，需要关注存储的数据的各种状态等","like_count":1},{"had_liked":false,"id":14410,"user_name":"成功","can_delete":false,"product_type":"c1","uid":1112099,"ip_address":"","ucode":"954B90AC92E8C3","user_header":"https://static001.geekbang.org/account/avatar/00/10/f8/23/165d2f0e.jpg","comment_is_top":false,"comment_ctime":1530407140,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":6,"product_id":100006601,"comment_content":"存储任务要考虑CAP三个方面，肯定比计算任务复杂","like_count":1},{"had_liked":false,"id":288819,"user_name":"prader26","can_delete":false,"product_type":"c1","uid":1433707,"ip_address":"","ucode":"5EFFFC374ADECE","user_header":"https://static001.geekbang.org/account/avatar/00/15/e0/6b/f61d7466.jpg","comment_is_top":false,"comment_ctime":1618715898,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":6,"product_id":100006601,"comment_content":"常见的计算高可用架构：主备、主从和集群。","like_count":0},{"had_liked":false,"id":243750,"user_name":"林毅鑫","can_delete":false,"product_type":"c1","uid":1917916,"ip_address":"","ucode":"1BB3D186E90D96","user_header":"https://static001.geekbang.org/account/avatar/00/1d/43/dc/95d4f2c5.jpg","comment_is_top":false,"comment_ctime":1598265396,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":6,"product_id":100006601,"comment_content":"评论区大神好多，总结到位。\ne.g:计算无状态，存储有状态，所以存储高可用更复杂。","like_count":0},{"had_liked":false,"id":185552,"user_name":"谭方敏","can_delete":false,"product_type":"c1","uid":1710960,"ip_address":"","ucode":"728DC7ECB7C902","user_header":"https://static001.geekbang.org/account/avatar/00/1a/1b/70/547042ee.jpg","comment_is_top":false,"comment_ctime":1583631482,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":6,"product_id":100006601,"comment_content":"计算高可用性的关键设计点：1）哪些服务可以执行任务，一种方式是每个服务都可以执行任务，另外一种方式是特定服务才可以，比如zookeeper；2）任务如何重新执行,一种方式是不管已分配任务执行结果，只确保现有任务成分配到非故障服务器上，另外一种方式是增加任务管理器，负责管理任务执行。服务执行后需要向任务管理器汇报执行结果，以便管理服务器决定是否继续往现在服务器上发布任务还是换新的。\n计算型高可用架构也分为主备，主从，集群方式。\n大体上他们是相似的，不过考虑的内容有所不同，主备里面有两个概念：冷备跟热备，他们的区别在于是否正在运行，正在运行的备份叫热备，不然就叫冷备。\n集群里面有分对称性集群和非对称性集群\n对称性集群又可称负载均衡集群，非对称性集群则表现为每个节点服务器权责不一致，比如zookeeper.\n\n至于计算（存储）高可用架构的区别在于，计算关心的是计算任务，而存储需要关系的东西非常多，比如数据复制，状态检测，数据一致性等。\n","like_count":0},{"had_liked":false,"id":15599,"user_name":"大光头","can_delete":false,"product_type":"c1","uid":1041792,"ip_address":"","ucode":"8EF797AFD1E27C","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eo3DrWeV7ZwRLXrRZg4V3ic1LQYdZ3u1oicDhqPic47vMguvf5QS69roTiaJrwDr5Re3Sy2UyHDWwmsTA/132","comment_is_top":false,"comment_ctime":1531320664,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":6,"product_id":100006601,"comment_content":"不一样，存储高可用更复杂。计算高可用要考虑任务调度，但是存储高可用不光要考虑这个，还要考虑数据一致性的问题","like_count":0},{"had_liked":false,"id":14424,"user_name":"今夕是何年","can_delete":false,"product_type":"c1","uid":1111847,"ip_address":"","ucode":"2825454A7A1588","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/7SOblVZ7dNJ88wkeYR0HklxdR9VuiaQ0GMscAnrlic6EjvRZS52m4n1VPypwZFsmabbJ4STZRbHFfVZE24Jjqr1w/132","comment_is_top":false,"comment_ctime":1530423129,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":6,"product_id":100006601,"comment_content":"计算高可用和存储高可用最大的区别就是 存储高可用需要数据复制。\n","like_count":0},{"had_liked":false,"id":14154,"user_name":"凡凡","can_delete":false,"product_type":"c1","uid":1056142,"ip_address":"","ucode":"134C1E1E6B22BF","user_header":"https://static001.geekbang.org/account/avatar/00/10/1d/8e/0a546871.jpg","comment_is_top":false,"comment_ctime":1530196738,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":6,"product_id":100006601,"comment_content":"1.任务集群主要难点在任务和资源的分配，对于共有计算资源一般需要一个任务分配器的角色，做统一分配和管理，比如mesos和k8s以及在他们基础上实现的调度器。但是对于自有资源的计算任务，可以没有调度器的绝色，只需要负载均衡器即可。对于第一种类型的计算集群复杂度是比较高的。2．存储集群高可用的难度分为读请求和写请求两个方面，写一般需要写入多个节点才算完成，即存储多份保证高可用。读请求在任何一个数据存储节点都可以读取。存储集群还需要一个索引服务（头节点），写时分配需要写入的节点，读时索引数据存储节点。","like_count":0},{"had_liked":false,"id":14117,"user_name":"张立春","can_delete":false,"product_type":"c1","uid":1124382,"ip_address":"","ucode":"D8B4523B95D839","user_header":"https://static001.geekbang.org/account/avatar/00/11/28/1e/76e19bd3.jpg","comment_is_top":false,"comment_ctime":1530180971,"is_pvip":false,"replies":null,"discussion_count":1,"race_medal":0,"score":6,"product_id":100006601,"comment_content":"如果正在执行的任务发生计算节点故障，要继续平滑完成该任务的难度不比存储节点出现故障的数据同步低吧","like_count":0,"discussions":[{"author":{"id":1073443,"avatar":"https://static001.geekbang.org/account/avatar/00/10/61/23/30d134cf.jpg","nickname":"Young","note":"","ucode":"075C0BBE20FD8C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":380197,"discussion_content":"如果计算任务无状态，重试就可以了。\n但是如果有状态，业务层需要解决将任务变成幂等的（可重入）的，这种情况一般是需要存储状态，其实也蛮复杂的","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1624370861,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]}]}