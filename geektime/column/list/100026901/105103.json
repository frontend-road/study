{"id":105103,"title":"26 | 活都来不及干了，还有空注意代码风格？！","content":"<p>你好，我是蔡元楠，是极客时间《大规模数据处理实战》的作者。今天是我第二次受邀来我们专栏分享了，很高兴再次见到你。今天我分享的主题是：活都来不及干了，还有空注意代码风格吗？！</p><p>许多来Google参观的人，用完洗手间后，都会惊奇而略带羞涩地问：“你们马桶前面的门上，贴着的Python编程规范，是用来搞笑的吗？”</p><p>这事儿还真不是搞笑，Google对编码规范的要求极其严格。今天，我们就来聊聊编程规范这件事儿。</p><p>对于编程规范（style guide） 的认知，很多人可能只停留在第一阶段：知道编程规范有用，整个公司都要求使用驼峰式命名。而后面的阶段，比如为什么和怎么做，就并不了解了。</p><p>但在Google，对于编程规范的信仰，可能超出很多人的想象，我给你简单介绍几点。</p><ol>\n<li>每一个语言都有专门的委员会（Style Committee）制定全公司强制的编程规范，和负责在编程风格争议时的仲裁人（Style Arbiters）。</li>\n<li>在每个语言相应的编程规范群里，每天都有大量的讨论和辩论。新达成的共识会被写出“大字报”张贴在厕所里，以至于每个人甚至来访者都能用坐着的时候那零碎的5分钟阅读。</li>\n<li>每一个代码提交，类似于Git里diff的概念，都需要至少两次代码评审（code review），一次针对业务逻辑，一次针对可读性（readability review）。所谓的可读性评审，着重在代码风格规范上。只有通过考核的人，才能够成为可读性评审人（readability reviewer）。</li>\n<li>有大量的开发自动化工具，确保以上的准则得到强制实施。例如，代码提交前会有linter做静态规则检查，不通过是无法提交代码的。</li>\n</ol><!-- [[[read_end]]] --><p>看到这里，不知道你有怎样的感受？我自己十分认同这样的工程师文化，所以今天，我会给你介绍清楚两点：</p><ul>\n<li>Python的编程规范为什么重要，这对于业务开发来说，究竟有没有帮助？</li>\n<li>有哪些流程和工具，可以整合到已有的开发流程中，让你的编程规范强制自动执行呢？</li>\n</ul><p>在讲解过程中，我会适时引用两个条例来举例，分别是：</p><ul>\n<li>《8号Python增强规范》（Python Enhacement Proposal #8），以下简称PEP8；</li>\n<li>《Google Python 风格规范》（Google Python Style Guide），以下简称Google Style，这是源自Google内部的风格规范。公开发布的社区版本，是为了让Google旗下所有Python开源项目的编程风格统一。（<a href=\"http://google.github.io/styleguide/pyguide.html\">http://google.github.io/styleguide/pyguide.html</a>）</li>\n</ul><p>相对来说，Google Style是比PEP8更严格的一个编程规范。因为PEP8的受众是个人和小团队开发者，而Google Style能够胜任大团队，企业级，百万行级别代码库。他们的内容，后面我也会简单说明。</p><h2>统一的编程规范为什么重要？</h2><p>用一句话来概括，统一的编程规范能提高开发效率。而开发效率，关乎三类对象，也就是阅读者、编程者和机器。他们的优先级是<strong>阅读者的体验 &gt;&gt; 编程者的体验 &gt;&gt; 机器的体验</strong>。</p><h3>阅读者的体验&gt;&gt;编程者的体验</h3><p>写过代码的人可能都有体会，在我们的实际工作中，真正在打字的时间，远比阅读或者debug的时间要少。事实正是如此，研究表明，软件工程中80%的时间都在阅读代码。所以，为了提高开发效率，我们要优化的，不是你的<strong>打字时间</strong>，而是<strong>团队阅读的体验</strong>。</p><p>其实，不少的编程规范，本来就是为了优化读者体验而存在的。举个例子，对于命名原则，我想很多人应该都有所理解，PEP8第38条规定命名必须有意义，不能是无意义的单字母。</p><p>有些人可能会说，啊，编程规范好烦哟，变量名一定要我写完整，打起来好累。但是当你作为阅读者时，一定能分辨下面两种代码的可读性不同：</p><pre><code># 错误示例\nif (a &lt;= 0):\n   return\nelif (a &gt; b):\n   return\nelse:\n  b -= a\n\n# 正确示例\nif (transfer_amount &lt;= 0):\n   raise Exception('...')\nelif (transfer_amount &gt; balance):\n   raise Exception('...')\nelse:\n  balance -= transfer_amount\n</code></pre><p>再举一个例子，Google Style 2.2条规定，Python代码中的import对象，只能是package或者module。</p><pre><code># 错误示例\nfrom mypkg import Obj\nfrom mypkg import my_func\n\nmy_func([1, 2, 3])\n\n# 正确示例\nimport numpy as np\nimport mypkg\n\nnp.array([6, 7, 8])\n</code></pre><p>以上错误示例在语法上完全合法（因为没有符号冲突name collisions），但是对于读者来讲，它们的可读性太差了。因为my_func这样的名字，如果没有一个package name提供上下文语境，读者很难单独通过my_func这个名字来推测它的可能功能，也很难在debug时根据package name找到可能的问题。</p><p>反观正确示例，虽然array是如此大众脸的名字，但因为有了numpy这个package的暗示，读者可以一下子反应过来，哦，这是一个numpy array。不过这里要注意区别，这个例子和符号冲突（name collisions）是正交（orthogonal）的两个概念，即使没有符号冲突，我们也要遵循这样的import规范。</p><h3>编程者的体验 &gt;&gt; 机器的体验</h3><p>说完了阅读者的体验，再来聊聊编程者的体验。我常常见到的一个错误倾向，是过度简化自己的代码，包括我自己也有这样的问题。一个典型的例子，就是盲目地使用Python的list comprehension。</p><pre><code># 错误示例\nresult = [(x, y) for x in range(10) for y in range(5) if x * y &gt; 10]\n</code></pre><p>我敢打赌，一定很少有人能一口气写出来这么复杂的list comprehension。这不仅容易累着自己，也让阅读者看得很累。其实，如果你用一个简单的for loop，会让这段代码更加简洁明了，自己也更为轻松。</p><pre><code># 正确示例\nresult = []\nfor x in range(10):\n  for y in range(5):\n     if x * y &gt; 10:\n       result.append((x, y))\n</code></pre><h3>机器的体验也很重要</h3><p>讲完了编程者和阅读者的重要性，我们不能忽视了机器的体验。我们最终希望代码能正确、高效地在电脑上执行。但是，一些危险的编程风格，不仅会影响程序正确性，也容易成为代码效率的瓶颈。</p><p>我们先来看看 is 和 == 的使用区别。你能看出下面的代码的运行结果吗？</p><pre><code># 错误示例\nx = 27\ny = 27\nprint(x is y)\n\nx = 721\ny = 721\nprint(x is y)\n</code></pre><p>看起来is是比较内存地址，那么两个结果应该都是一样的，可是实际上打印出来的，却分别是True和False！</p><p>原因是在CPython（Python的C实现）的实现中，把-5到256的整数做成了singleton，也就是说，这个区间里的数字都会引用同一块内存区域，所以上面的27和下面的27会指向同一个地址，运行结果为True。</p><p>但是-5到256之外的数字，会因为你的重新定义而被重新分配内存，所以两个721会指向不同的内存地址，结果也就是False了。</p><p>所以，即使你已经清楚，is比较对象的内存地址，你也应该在代码风格中，避免去用is比较两个Python整数的地址。</p><pre><code># 正确示例\nx = 27\ny = 27\nprint(x == y)\n\nx = 721\ny = 721\nprint(x == y)\n</code></pre><p>看完这个例子，我们再看==在比较值的时候，是否总能如你所愿呢？同样的，你可以自己先判断一下运行结果。</p><pre><code># 错误示例\nx = MyObject()\nprint(x == None)\n</code></pre><p>打印结果是False吗？不一定。因为对于类来说，==的结果，取决于它的__eq__()方法的具体实现。MyObject的作者完全可能这样实现：</p><pre><code>class MyObject(object):\n def __eq__(self, other):\n   if other:\n     return self.field == other.field\n   return True\n</code></pre><p>正确的是在代码风格中，当你和None比较时候永远使用 is:</p><pre><code># 正确示例\nx = MyObject()\nprint(x is None)\n</code></pre><p>上面两个例子，我简单介绍了通过编程风格的限制，让is 和 == 的使用更安全。不过，光注意这两点就可以了吗？不要忘记，Python中还有隐式布尔转换。比如：</p><pre><code># 错误示例\ndef pay(name, salary=None):\n if not salary:\n   salary = 11\n print(name, &quot;is compensated&quot;, salary, &quot;dollars&quot;)\n</code></pre><p>如果有人调用 pay(“Andrew”, 0) ，会打印什么呢？“Andrew is compensated 11 dollars”。当你明确想要比较对象是否是None时，一定要显式地用 is None。</p><pre><code># 正确示例\ndef pay(name, salary=None):\n if salary is not None:\n   salary = 11\n print(name, &quot;is compensated&quot;, salary, &quot;dollars&quot;)\n</code></pre><p>这就是为什么，PEP8和Google Style都特别强调了，何时使用is， 何时使用 ==，何时使用隐式布尔转换。</p><p>不规范的编程习惯也会导致程序效率问题，我们看下面的代码有什么问题：</p><pre><code># 错误示例\nadict = {i: i * 2 for i in xrange(10000000)}\n\nfor key in adict.keys():\n   print(&quot;{0} = {1}&quot;.format(key, adict[key]))\n</code></pre><p>keys()方法会在遍历前生成一个临时的列表，导致上面的代码消耗大量内存并且运行缓慢。正确的方式，是使用默认的iterator。默认的iterator不会分配新内存，也就不会造成上面的性能问题:</p><pre><code># 正确示例\nfor key in adict:\n</code></pre><p>这也就是为什么Google Style 2.8对于遍历方式的选择作出了限制。</p><p>相信读到这里，对于代码风格规范的重要性，你已经有了进一步的理解。如果能够做到下一步，会让你和你的团队脱胎换骨，那就是和开发流程的完全整合。</p><h2>整合进开发流程的自动化工具</h2><p>前面我们已经提到了，编程规范的终极目标是提高开发效率。显然，如果每次写代码，都需要你在代码规范上额外花很多时间的话，就达不到我们的初衷了。</p><p>首先，你需要根据你的具体工作环境，选择或者制定适合自己公司/团队的规范。市面上可以参考的规范，也就是我在开头提到的那两个，PEP8和Google Style。</p><p>没有放之四海而皆准的规范，你需要因地制宜。例如在Google，因为历史原因C++不使用异常，引入异常对整个代码库带来的风险已经远大于它的益处，所以在它的C++代码规范中，禁止使用异常。</p><p>其次，一旦确定了整个团队同意的代码规范，就一定要强制执行。停留在口头和大脑的共识，只是水中月镜中花。如何执行呢？<strong>靠强制代码评审和强制静态或者动态linter</strong>。</p><p>当然，需要注意的是，我这里“强制”的意思，不是说如果不做就罚款。那就太low了，完全没有极客精神。我指的“强制”，是把共识写进代码里，让机器来自动化这些流程。比如：</p><ul>\n<li>在代码评审工具里，添加必须的编程规范环节；</li>\n<li>把团队确定的代码规范写进Pylint里（<a href=\"https://www.pylint.org/\">https://www.pylint.org/</a>），能够在每份代码提交前自动检查，不通过的代码无法提交。</li>\n</ul><p>整合之后，你的团队工作流程就会变成这样：</p><p><img src=\"https://static001.geekbang.org/resource/image/29/e3/29fd89f89825b18273083a8e03b044e3.png?wh=1304*586\" alt=\"\"></p><h2>总结</h2><p>学到这里，相信你对代码风格的重要性有了全新的认识。代码风格之所以重要，是因为它关乎阅读者的体验、编程者的体验和执行代码的机器体验。</p><p>当然，仅仅意识到代码风格重要，是远远不够的。我还具体分享了一些自动化代码风格检查的切实方法，比如强制代码评审和强制静态或者动态linter。总之还是那句话，我们强调编程规范，最终一定是为了提高开发效率，而不是做额外功。</p><h2>思考题</h2><p>在你个人或者团队的项目经验中，是否也因为编程规范的问题，踩过坑或者吵过架呢？欢迎留言和我分享，也欢迎你把这篇文章分享出去。</p><p></p>","comments":[{"had_liked":false,"id":111570,"user_name":"catshitfive","can_delete":false,"product_type":"c1","uid":1542973,"ip_address":"","ucode":"E030B61F3D0811","user_header":"https://static001.geekbang.org/account/avatar/00/17/8b/3d/2a3b67f8.jpg","comment_is_top":false,"comment_ctime":1562567944,"is_pvip":false,"discussion_count":4,"race_medal":0,"score":"340864984328","product_id":100026901,"comment_content":"最讨厌两件事儿：<br><br>1.码代码的时候写注释 2.接手别人代码没注释","like_count":80,"discussions":[{"author":{"id":2369413,"avatar":"https://static001.geekbang.org/account/avatar/00/24/27/85/ddeeaf30.jpg","nickname":"dived","note":"","ucode":"141916A3BAF5A1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":374873,"discussion_content":"太真实了。\n我讨厌装B的人，\n但是我喜欢装B。","likes_number":5,"is_delete":false,"is_hidden":false,"ctime":1621395840,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":2628251,"avatar":"https://static001.geekbang.org/account/avatar/00/28/1a/9b/aa3b16f5.jpg","nickname":"海棠","note":"","ucode":"9416069D151314","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2369413,"avatar":"https://static001.geekbang.org/account/avatar/00/24/27/85/ddeeaf30.jpg","nickname":"dived","note":"","ucode":"141916A3BAF5A1","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":549726,"discussion_content":"同感","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1644219968,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":374873,"ip_address":""},"score":549726,"extra":""}]},{"author":{"id":2759750,"avatar":"https://static001.geekbang.org/account/avatar/00/2a/1c/46/00caab2d.jpg","nickname":"Bill","note":"","ucode":"5C83006E471F8E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":591603,"discussion_content":"笑嘻了也是","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1666692936,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"上海"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1352697,"avatar":"https://static001.geekbang.org/account/avatar/00/14/a3/f9/9180d6d1.jpg","nickname":"szm","note":"","ucode":"53E753D3D04431","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":251917,"discussion_content":"所以为了大家好，得强制写注释","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1588125998,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":122723,"user_name":"一期一会","can_delete":false,"product_type":"c1","uid":1043780,"ip_address":"","ucode":"1C44A6453F6381","user_header":"https://static001.geekbang.org/account/avatar/00/0f/ed/44/2267a5a7.jpg","comment_is_top":false,"comment_ctime":1565505470,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"254968575934","product_id":100026901,"comment_content":"写代码不写注释。过了半年以上有事再去读代码，自己也不知道是怎么回事的人举个手","like_count":60},{"had_liked":false,"id":112437,"user_name":"小侠龙旋风","can_delete":false,"product_type":"c1","uid":1126441,"ip_address":"","ucode":"073F3924A99835","user_header":"https://static001.geekbang.org/account/avatar/00/11/30/29/d6816ebf.jpg","comment_is_top":false,"comment_ctime":1562734690,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"143296655458","product_id":100026901,"comment_content":"心中默念三遍：当和 None 比较时候永远使用 is。","like_count":34},{"had_liked":false,"id":111545,"user_name":"一叶知秋","can_delete":false,"product_type":"c1","uid":1445189,"ip_address":"","ucode":"15A95FA86B7AE4","user_header":"https://static001.geekbang.org/account/avatar/00/16/0d/45/b88a1794.jpg","comment_is_top":false,"comment_ctime":1562565820,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"87461911740","product_id":100026901,"comment_content":"个人没经历过，但是听说过： “因代码不规范、使用git push -f，码农枪击4名同事，一人情况危急”","like_count":21,"discussions":[{"author":{"id":1609589,"avatar":"https://static001.geekbang.org/account/avatar/00/18/8f/75/957476d5.jpg","nickname":"米农","note":"","ucode":"A3911088F149D7","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":315245,"discussion_content":"突然有想试一试的冲动","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1603255681,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":111444,"user_name":"lipan","can_delete":false,"product_type":"c1","uid":1347460,"ip_address":"","ucode":"76E2CEEE454017","user_header":"https://static001.geekbang.org/account/avatar/00/14/8f/84/2c2d8c47.jpg","comment_is_top":false,"comment_ctime":1562558841,"is_pvip":false,"replies":[{"id":"40704","content":"哈哈，代码风格一定要注意啊，这个很重要。如果实在任务重，单元测试可以少写一点，但是代码风格千万要规范，否则后面维护起来很难","user_name":"作者回复","user_name_real":"Jingxiao","uid":"1259521","ctime":1562642324,"ip_address":"","comment_id":111444,"utype":1}],"discussion_count":2,"race_medal":0,"score":"83166937465","product_id":100026901,"comment_content":"以前在小公司，996, 活都来不及干了，还有空注意代码风格。全局变量满天飞。","like_count":18,"discussions":[{"author":{"id":1259521,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJJOlibibPFEWOib8ib7RtfAtxND5FUqCxxoeTuLAbBI9ic23xuwdXT4IyiaWq3Fic9RgEAYI0lBTbEp2rcg/132","nickname":"Jingxiao","note":"","ucode":"EB966BB87132F6","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":457356,"discussion_content":"哈哈，代码风格一定要注意啊，这个很重要。如果实在任务重，单元测试可以少写一点，但是代码风格千万要规范，否则后面维护起来很难","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1562642324,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1581705,"avatar":"https://static001.geekbang.org/account/avatar/00/18/22/89/73397ccb.jpg","nickname":"响雨","note":"","ucode":"C5FB3A3BC68F92","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":1510,"discussion_content":"我的现状是根本不写单元测试，冒烟测试过一遍就提测了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1562669699,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":111405,"user_name":"奥特虾不会写代码","can_delete":false,"product_type":"c1","uid":1025685,"ip_address":"","ucode":"B41DD6B575571A","user_header":"https://static001.geekbang.org/account/avatar/00/0f/a6/95/3960d10e.jpg","comment_is_top":false,"comment_ctime":1562553354,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"78871964682","product_id":100026901,"comment_content":"接手了离职同事留下来的代码，很多变量的命名都是无意义的单词+数字，例如data1、data2这种，看得我十分痛苦","like_count":19},{"had_liked":false,"id":176532,"user_name":"Lonely绿豆蛙","can_delete":false,"product_type":"c1","uid":1044785,"ip_address":"","ucode":"0862179B614974","user_header":"https://static001.geekbang.org/account/avatar/00/0f/f1/31/5001390b.jpg","comment_is_top":false,"comment_ctime":1581081875,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"31645852947","product_id":100026901,"comment_content":"代码其实归根结底是写给人看的，是程序员之间沟通交流的语言，因此写作风格需要统一规范而不提倡个性化，就像提倡工作中使用普通话而非方言。","like_count":8},{"had_liked":false,"id":113257,"user_name":"吴月月鸟","can_delete":false,"product_type":"c1","uid":1115064,"ip_address":"","ucode":"2F068EDD166B49","user_header":"https://static001.geekbang.org/account/avatar/00/11/03/b8/961a5342.jpg","comment_is_top":false,"comment_ctime":1562925737,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"18742794921","product_id":100026901,"comment_content":"https:&#47;&#47;blog.csdn.net&#47;FU250&#47;article&#47;details&#47;95633286  git+pylint实现python提交代码格式校验","like_count":5,"discussions":[{"author":{"id":1012816,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/74/50/59d429c9.jpg","nickname":"MiracleWong","note":"","ucode":"05233774710AFE","race_medal":3,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":121831,"discussion_content":"感谢，明天试一下","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578323469,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":132882,"user_name":"Breathless","can_delete":false,"product_type":"c1","uid":1545982,"ip_address":"","ucode":"C41268A92FFEC7","user_header":"https://static001.geekbang.org/account/avatar/00/17/96/fe/97fc8240.jpg","comment_is_top":false,"comment_ctime":1568258708,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"14453160596","product_id":100026901,"comment_content":" if not salary:<br> if salary is not None:<br>怎么怪怪的？","like_count":3,"discussions":[{"author":{"id":2064044,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/7e/ac/4303e8ef.jpg","nickname":"Geek_b692f5","note":"","ucode":"C2826604F71C36","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":300167,"discussion_content":"后面一句作者写错了，这里判断salary为空，则赋值为11，应该写成 if salary is None:\n另外这样写还不如把函数默认参数None替换成11得了","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1597974388,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":120000,"user_name":"Z_ying","can_delete":false,"product_type":"c1","uid":1307689,"ip_address":"","ucode":"B4FDE000A012B5","user_header":"","comment_is_top":false,"comment_ctime":1564749445,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"14449651333","product_id":100026901,"comment_content":"dict.items()推荐使用吗  它是使用默认的iter还是另外使用临时内存吗 ","like_count":3},{"had_liked":false,"id":114561,"user_name":"贺宇","can_delete":false,"product_type":"c1","uid":1445040,"ip_address":"","ucode":"55854825CC4AD2","user_header":"https://static001.geekbang.org/account/avatar/00/16/0c/b0/26c0e53f.jpg","comment_is_top":false,"comment_ctime":1563336191,"is_pvip":true,"discussion_count":1,"race_medal":0,"score":"14448238079","product_id":100026901,"comment_content":"原来在java的时候比较都用=，后来被主管骂了一顿后就再也不用=做比较了，全部用Objects.equals","like_count":3,"discussions":[{"author":{"id":1611663,"avatar":"https://static001.geekbang.org/account/avatar/00/18/97/8f/ccce7df1.jpg","nickname":"小匚","note":"","ucode":"78E800B23C457A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":401581,"discussion_content":"Java里=相等于 python的 is 了。比较的都是地址","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1633695494,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":149743,"user_name":"Leon📷","can_delete":false,"product_type":"c1","uid":1219496,"ip_address":"","ucode":"B9BBD1EFAAE5A2","user_header":"https://static001.geekbang.org/account/avatar/00/12/9b/a8/6a391c66.jpg","comment_is_top":false,"comment_ctime":1573362019,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10163296611","product_id":100026901,"comment_content":"我是遇到过工作十年的人制定的probuf协议文件像万国博览会，java风格，C风格，微软匈牙利命名法，生成的代码的结构体有成员产量是ooxxxxdddd，像甜甜圈和万花筒，测试环境直接把自己的英文名打进日志，并发编程直接一把锁锁住七八个map，那代码，分分钟灼烧着我的视网膜","like_count":2},{"had_liked":false,"id":111689,"user_name":"三毛大叔","can_delete":false,"product_type":"c1","uid":1525678,"ip_address":"","ucode":"F0E99FC4BCEB71","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/JZewNRQqdPv3rP7DExhIueazCBg4ic3v8icL2UgVGHRt0xbxr6DUHcKiaYHuS8m1hUYfHtjZxd10h8VNY262ickniaw/132","comment_is_top":false,"comment_ctime":1562584428,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"10152519020","product_id":100026901,"comment_content":"评审者是专门评审员吗，一天到晚评审，不写代码?","like_count":2,"discussions":[{"author":{"id":1219179,"avatar":"https://static001.geekbang.org/account/avatar/00/12/9a/6b/e8ef2989.jpg","nickname":"云蝈蝈","note":"","ucode":"19B1597DB49819","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":296287,"discussion_content":"看规模吧，大公司应该有专职的，小公司应该是兼职的","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1596503499,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1619402,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b5/ca/bba4d696.jpg","nickname":"牺牲","note":"","ucode":"5780E562A43494","race_medal":2,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":275823,"discussion_content":"应该是专职评审","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1590764674,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":289518,"user_name":"年轻人的瞎折腾^.","can_delete":false,"product_type":"c1","uid":1266462,"ip_address":"","ucode":"179997C9622609","user_header":"https://static001.geekbang.org/account/avatar/00/13/53/1e/7d098b33.jpg","comment_is_top":false,"comment_ctime":1619059850,"is_pvip":false,"discussion_count":1,"race_medal":1,"score":"5914027146","product_id":100026901,"comment_content":"最痛苦的还是给代码取名字，不能随便取，但是又想不到更好的名字~很愁","like_count":1,"discussions":[{"author":{"id":1232527,"avatar":"https://static001.geekbang.org/account/avatar/00/12/ce/8f/6daf02db.jpg","nickname":"心灵捕手","note":"","ucode":"6D0BC463A000C8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":389834,"discussion_content":"同感","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1629447014,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":281421,"user_name":"游衍军","can_delete":false,"product_type":"c1","uid":2420960,"ip_address":"","ucode":"1B67F2BBBB61BC","user_header":"https://static001.geekbang.org/account/avatar/00/24/f0/e0/15c74858.jpg","comment_is_top":false,"comment_ctime":1614743399,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5909710695","product_id":100026901,"comment_content":"result = [(x, y) for x in range(10) for y in range(5) if x * y &gt; 10]<br>这种列表推导式并不复杂<br>","like_count":1},{"had_liked":false,"id":222374,"user_name":"牺牲","can_delete":false,"product_type":"c1","uid":1619402,"ip_address":"","ucode":"5780E562A43494","user_header":"https://static001.geekbang.org/account/avatar/00/18/b5/ca/bba4d696.jpg","comment_is_top":false,"comment_ctime":1590764829,"is_pvip":false,"discussion_count":0,"race_medal":2,"score":"5885732125","product_id":100026901,"comment_content":"不管是代码还是文档，都需要严格统一的规范，不然自己挖的坑还得自己埋。","like_count":1},{"had_liked":false,"id":125497,"user_name":"温若","can_delete":false,"product_type":"c1","uid":1633918,"ip_address":"","ucode":"F9DA0C07F11FF3","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTI9TONIzolbQaRAubeRv37J4zfwRicsOPe8T6LpAgfLxusiaiaibAWmTwNRxb3OeChNbc0kIgtlhoIEWw/132","comment_is_top":false,"comment_ctime":1566194738,"is_pvip":false,"discussion_count":3,"race_medal":0,"score":"5861162034","product_id":100026901,"comment_content":"# 错误示例<br>result = [(x, y) for x in range(10) for y in range(5) if x * y &gt; 10]<br>请问一下景老师，这个是错误示例么？<br>在基础篇的07|条件与循环里，不是建议[(xx, yy) for xx in x for yy in y if xx != yy]这样写么？<br>这两个区别在哪？还是我理解的不对？","like_count":1,"discussions":[{"author":{"id":1352697,"avatar":"https://static001.geekbang.org/account/avatar/00/14/a3/f9/9180d6d1.jpg","nickname":"szm","note":"","ucode":"53E753D3D04431","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":251922,"discussion_content":"因为这两个章节不是一个老师写的，本章节作者是谷歌大脑的蔡元楠","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1588126229,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1005367,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/57/37/8877f206.jpg","nickname":"胖宝王","note":"","ucode":"E1B58EF4354CB0","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":39069,"discussion_content":"个人感觉是看使用场景,正式点用 for 循环, 易读易维护; 临时性的可以用生成式,显得python范","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1571888418,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2271763,"avatar":"https://static001.geekbang.org/account/avatar/00/22/aa/13/b16d75c6.jpg","nickname":"Lionheart","note":"","ucode":"688EF8EF8B0569","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":318435,"discussion_content":"少用表达式，除非是特别简单的逻辑，不然拍bug的时候极其痛苦","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1603737635,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":111356,"user_name":"看，有只猪","can_delete":false,"product_type":"c1","uid":1137727,"ip_address":"","ucode":"F9BB302BC71CE8","user_header":"https://static001.geekbang.org/account/avatar/00/11/5c/3f/34e5c750.jpg","comment_is_top":false,"comment_ctime":1562547837,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"5857515133","product_id":100026901,"comment_content":"标题就是每次和人争论代码风格时，被怼的最惨的一点了。代码风格需要搭配严格的上库审核与领导的支持","like_count":1},{"had_liked":false,"id":333625,"user_name":"科富","can_delete":false,"product_type":"c1","uid":2159423,"ip_address":"","ucode":"47E532AF7698C2","user_header":"https://static001.geekbang.org/account/avatar/00/20/f3/3f/160baa71.jpg","comment_is_top":false,"comment_ctime":1644454154,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1644454154","product_id":100026901,"comment_content":"有理有据，晒出推荐的用法和错误用法的对比，比空喊口号有说服力多了","like_count":0},{"had_liked":false,"id":303635,"user_name":"Geek_943f22","can_delete":false,"product_type":"c1","uid":2709017,"ip_address":"","ucode":"0571882CC789B4","user_header":"","comment_is_top":false,"comment_ctime":1626900312,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1626900312","product_id":100026901,"comment_content":"None 用 is 比较。","like_count":0},{"had_liked":false,"id":300407,"user_name":"GEEKBANG_9388667","can_delete":false,"product_type":"c1","uid":1267906,"ip_address":"","ucode":"FAF51FEFBB291A","user_header":"https://static001.geekbang.org/account/avatar/00/13/58/c2/51fa1f28.jpg","comment_is_top":false,"comment_ctime":1625143974,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1625143974","product_id":100026901,"comment_content":"老师， 代码自动化规范的分享在哪里呢？ 对这个感兴趣","like_count":0},{"had_liked":false,"id":272612,"user_name":"ZY","can_delete":false,"product_type":"c1","uid":2161248,"ip_address":"","ucode":"18A839AFDA611E","user_header":"https://static001.geekbang.org/account/avatar/00/20/fa/60/a4366b9c.jpg","comment_is_top":false,"comment_ctime":1610175169,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1610175169","product_id":100026901,"comment_content":"有关字典的遍历 我怎么使用for  for key,value in dict.keys() 比 for key,value in dict 要快些 ，而且后者貌似会导致程序崩溃","like_count":0},{"had_liked":false,"id":195667,"user_name":"Simon","can_delete":false,"product_type":"c1","uid":1914504,"ip_address":"","ucode":"A8A2E3E57BD029","user_header":"https://static001.geekbang.org/account/avatar/00/1d/36/88/20b6a6ee.jpg","comment_is_top":false,"comment_ctime":1585210586,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1585210586","product_id":100026901,"comment_content":"“C++ 代码规范中，禁止使用异常”。我确实是这么干的！","like_count":0},{"had_liked":false,"id":171242,"user_name":"Goal","can_delete":false,"product_type":"c1","uid":1307012,"ip_address":"","ucode":"C337CD4C7E07B0","user_header":"https://static001.geekbang.org/account/avatar/00/13/f1/84/7d21bd9e.jpg","comment_is_top":false,"comment_ctime":1578885693,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1578885693","product_id":100026901,"comment_content":"“何时使用 is， 何时使用 ==，何时使用隐式布尔转换”<br><br>文中提到的这句话，对这些还是不太理解；","like_count":0,"discussions":[{"author":{"id":1219179,"avatar":"https://static001.geekbang.org/account/avatar/00/12/9a/6b/e8ef2989.jpg","nickname":"云蝈蝈","note":"","ucode":"19B1597DB49819","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":296288,"discussion_content":"==比较的是数值相等，is比较的是地址相等","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1596503644,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":154342,"user_name":"Paul Shan","can_delete":false,"product_type":"c1","uid":1593140,"ip_address":"","ucode":"32D99989028284","user_header":"","comment_is_top":false,"comment_ctime":1574411594,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1574411594","product_id":100026901,"comment_content":"代码风格是开发人员交流的工具，是对代码阅读者，代码开发者和机器的权衡。","like_count":0},{"had_liked":false,"id":142731,"user_name":"自由民","can_delete":false,"product_type":"c1","uid":1346236,"ip_address":"","ucode":"435C67531697F1","user_header":"https://static001.geekbang.org/account/avatar/00/14/8a/bc/cb39ed38.jpg","comment_is_top":false,"comment_ctime":1571482647,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1571482647","product_id":100026901,"comment_content":"因为是自学，没机会跟别人合作。以前学的C&#47;C++，在网上看到一篇文章，好像叫&quot;XX关于c++学习的100个观点&quot;之类的，很震撼，就照着做了。因为习惯了，后来看Java，HTML，JavaScript，python等语言的代码都不太习惯。","like_count":0},{"had_liked":false,"id":114302,"user_name":"大王叫我来巡山","can_delete":false,"product_type":"c1","uid":1099513,"ip_address":"","ucode":"1B8D0C701BC95E","user_header":"https://static001.geekbang.org/account/avatar/00/10/c6/f9/caf27bd3.jpg","comment_is_top":false,"comment_ctime":1563267589,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1563267589","product_id":100026901,"comment_content":"收益匪浅，感觉过去写的代码只有自己能看懂","like_count":0},{"had_liked":false,"id":112913,"user_name":"Ben","can_delete":false,"product_type":"c1","uid":1252353,"ip_address":"","ucode":"70351D4FAE47F7","user_header":"https://static001.geekbang.org/account/avatar/00/13/1c/01/5aaaf5b6.jpg","comment_is_top":false,"comment_ctime":1562843449,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1562843449","product_id":100026901,"comment_content":"要把C++和C#的代码规范统一...","like_count":0},{"had_liked":false,"id":112215,"user_name":"蒙开强","can_delete":false,"product_type":"c1","uid":1317706,"ip_address":"","ucode":"61B3183781B9F7","user_header":"https://static001.geekbang.org/account/avatar/00/14/1b/4a/f9df2d06.jpg","comment_is_top":false,"comment_ctime":1562684688,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1562684688","product_id":100026901,"comment_content":"老师，你好，你那个地址http:&#47;&#47;google.github.io&#47;styleguide&#47;pyguide.html有问题，是https:&#47;&#47;google.github.io&#47;styleguide&#47;pyguide.html,这种规范有插件么。","like_count":0},{"had_liked":false,"id":112028,"user_name":"code2","can_delete":false,"product_type":"c1","uid":1281792,"ip_address":"","ucode":"BBA5748FB6A01C","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/8OPzdpDraQMvCNWAicicDt54sDaIYJZicBLfMyibXVs4V0ZibEdkZlbzxxL7aGpRoeyvibag5LaAaaGKSdwYQMY2hUrQ/132","comment_is_top":false,"comment_ctime":1562656549,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1562656549","product_id":100026901,"comment_content":"在代码中对数据进行检测并直接做出处理与抛出异常，在异常处理代码中进行处理，哪一种风格更有效，更优雅？","like_count":0},{"had_liked":false,"id":111746,"user_name":"雲至","can_delete":false,"product_type":"c1","uid":1568487,"ip_address":"","ucode":"47E2D099322BB1","user_header":"https://static001.geekbang.org/account/avatar/00/17/ee/e7/4375e97c.jpg","comment_is_top":false,"comment_ctime":1562593662,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1562593662","product_id":100026901,"comment_content":"这个办法好   可以用到很多方面   ","like_count":0},{"had_liked":false,"id":111353,"user_name":"enjoylearning","can_delete":false,"product_type":"c1","uid":1000237,"ip_address":"","ucode":"DCAF8538DEA277","user_header":"https://static001.geekbang.org/account/avatar/00/0f/43/2d/af86d73f.jpg","comment_is_top":false,"comment_ctime":1562547581,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1562547581","product_id":100026901,"comment_content":"pep8貌似大家都很抗拒","like_count":0,"discussions":[{"author":{"id":1281550,"avatar":"https://static001.geekbang.org/account/avatar/00/13/8e/0e/3fbc418d.jpg","nickname":"youaresherlock","note":"","ucode":"B4D379C6B50DD4","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":290430,"discussion_content":"不抗拒，因为Pycharm会报花很难受","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1594470028,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]}]}