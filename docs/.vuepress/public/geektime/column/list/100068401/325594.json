{"id":325594,"title":"课前热身 | 这些需求给到你，你会怎么写代码？","content":"<p>你好，我是郑晔。</p><p>我在开篇词中提到，缺乏识别代码坏味道的感觉，这才让很多问题代码堂而皇之地留在了自己的眼皮底下。识别坏味道，单纯学理论是不够的，你得结合具体问题进行分析，所以我才在课程中加入了大量真实的代码案例，帮助你理解坏味道。当然，除此之外，你还要有足够多的练习。</p><p>为了让你能够深度地参与到这个专栏的学习中，代码能力得到有效提升，我准备了一个课前热身的环节：大家一起来写代码。</p><p>我们要编写一个待办事项管理的软件，你可以看我下面给出的需求，它是以<strong>命令行应用</strong>的方式存在的。</p><h2>第一阶段：基本功能</h2><ul>\n<li>添加 Todo 项。</li>\n</ul><pre><code>todo add &lt;item&gt;\n\n\n1. &lt;item&gt;\n\n\nItem &lt;itemIndex&gt; added\n</code></pre><ul>\n<li>完成 Todo 项。</li>\n</ul><pre><code>todo done &lt;itemIndex&gt;\n\n\nItem &lt;itemIndex&gt; done.\n</code></pre><ul>\n<li>查看 Todo 列表，缺省情况下，只列出未完成的 Todo 项。</li>\n</ul><pre><code>todo list\n\n\n1. &lt;item1&gt;\n2. &lt;item2&gt;\n\n\nTotal: 2 items\n</code></pre><ul>\n<li>使用 all 参数，查看所有的 Todo 项。</li>\n</ul><pre><code>todo list --all\n\n\n1. &lt;item1&gt;\n2. &lt;item2&gt;\n3. [Done] &lt;item3&gt;\n\n\nTotal: 3 items, 1 item done\n</code></pre><p>要求：</p><ol>\n<li>Todo 项存储在本地文件中；</li>\n<li>Todo 项索引逐一递增。</li>\n</ol><h2>第二阶段：支持多用户</h2><ul>\n<li>用户登录。</li>\n</ul><pre><code>todo login -u user\nPassword: \n\n\nLogin success!\n</code></pre><ul>\n<li>用户退出。</li>\n</ul><pre><code>todo logout\n\n\nLogout success!\n</code></pre><p>要求：</p><ol>\n<li>只能看到当前用户的 Todo 列表；</li>\n<li>同一个用户的Todo 项索引逐一递增；</li>\n<li>当前用户信息存储在配置文件中 ~/.todo-config。</li>\n</ol><h2>第三阶段：支持 Todo 列表导入和导出</h2><!-- [[[read_end]]] --><ul>\n<li>Todo 列表导出。</li>\n</ul><pre><code>todo export &gt; todolist\n</code></pre><ul>\n<li>Todo 列表导入。</li>\n</ul><pre><code>todo import -f todolist\n</code></pre><h2>第四阶段：支持数据库持久化</h2><p>在配置文件中，配置数据库连接信息。</p><ul>\n<li>初始化数据库。</li>\n</ul><pre><code>todo init\n</code></pre><p>要求：</p><ol>\n<li>没有数据库的情况下，使用本地文件；</li>\n<li>在有数据库的情况下，使用数据库；</li>\n<li>在本地文件已经存在的情况，将本地信息导入到数据库中。</li>\n</ol><p>以上我给出的是最基本的需求，你可以根据自己的实际编码情况，适当补充一些细节，比如，相应的错误提示。</p><p>你可以用自己最熟悉的程序设计语言、按照自己最习惯的方式编写代码，并在 Github 上以公开仓库的方式提交自己的代码，将仓库链接贴在这节课的留言区下，我会顺着链接找到你的仓库，去查看你写的代码。</p><p>为了方便代码的阅读，请你按如下要求编写你的代码：</p><ul>\n<li>在项目的 README 文件中，写出如何构建和执行你的应用；</li>\n<li>需求分成四个阶段，请你按顺序依次完成每个阶段的需求；</li>\n<li>每完成一个阶段的代码，创建一个 tag，tag 名称分别为 todo-phase-1、todo-phase-2、todo-phase-3、todo-phase-4。</li>\n</ul><p>之所以要把需求分阶段，主要是方便大家参与，即便你时间有限，只写第一个阶段的代码，依然是一个完整的需求。学过《<a href=\"https://time.geekbang.org/column/intro/100022301\">10x 程序员工作法</a>》的同学都知道，任务分解是一个重要的工作原则，分阶段需求其实就是一种需求层面上的任务分解。</p><p>在专栏结束之前，我会专门制作一期加餐，点评大家的代码；同时，我也会选出代码写的最整洁的3位同学，送出价值<a href=\"https://shop18793264.m.youzan.com/wscgoods/detail/360fd7mtqj71k?banner_id=ag.18601096~goods.2~106~aKZdZHmE&amp;alg_id=0&amp;reft=1608863554063_1608863999769&amp;spm=f.69794282_ag.18601096\">149元的华为智能体脂电子称</a>。</p><p><img src=\"https://static001.geekbang.org/resource/image/5d/6b/5d6600a2769c6924d732d80eb365206b.jpg\" alt=\"\"><br>\n欢迎加入这次编码的训练中，期待你在留言区分享你的代码。</p>","neighbors":{"left":{"article_title":"开篇词 | 这一次，我们从“丑”代码出发","id":325538},"right":{"article_title":"01 | 缺乏业务含义的命名：如何精准命名？","id":326166}},"comments":[]}