{"id":198704,"title":"07 | WebSocket接口：如何测试一个完全陌生的协议接口？","content":"<p>你好，我是陈磊。很高兴你又来和我一起探寻接口测试的奥秘了。</p><p>我们在前面一起学习了怎么分析和完成一个HTTP协议的接口测试，又一起学习了如何封装接口测试框架，以及如何搭建接口测试平台。我相信，现在你已经完全掌握了HTTP协议的接口测试了。</p><p>但是，这还不能说明你已经能独立完成接口测试了，为什么这么说呢？这是因为数据在网络传输上都是依靠一种协议来完成的，在上学的时候，你肯定学过包括TCP、UDP、HTTP等在内的一堆协议，但是如果你遇见了一个全新的协议，你知道怎么从零开始，完成接口测试吗？</p><p>今天我就以WebSocket为例，告诉你当你第一次接触一个完全陌生的协议接口时，你要如何开始完成接口测试工作。</p><h2>未知的新协议接口并不可怕</h2><p>作为一名测试工程师，在面对一个陌生协议的接口测试时，你是不是会常常感到很无助？面对这样的任务时，你的第一反应肯定是向开发工程师求助，因为开发工程师基于新协议已经完成了接口开发，向开发工程师求助显然是最好的办法。</p><p>我在工作中就遇见过类似的事情。记得那是在我参加工作的前几年，有一个被测项目的接口是一个私有协议，当我看到接口文档的时候，第一反应就是找开发工程师，向他求教一下这个私有协议。这个开发工程师人很好，他给了我一个学习脉络，其中包含了协议的说明文档、代码开发文档、实现代码等内容，我拿到这些资料后，马上按照上面他给出的学习顺序投入学习。</p><!-- [[[read_end]]] --><p>但是后来，在项目从交付测试到完成测试后，我发现自己走了一个弯路。因为作为测试工程师，我们不需要了解协议底层的原理，只需要了解新协议是如何传输数据，又如何返回数据库就可以了。也就是说，我们要想模拟一个客户端去验证服务端的逻辑，那么开始接口测试最快速的方法不是去看协议的说明文档，而是直接去看开发实现的客户端代码，这对于我们来说，能更直接地解决问题。但这也并不是说，那位开发工程师告诉我的学习脉络是错误的，只不过它并不是一个非常适合测试工程师的学习方法。</p><p>那在面对一个陌生的新协议时，测试工程师的首要任务是什么呢？</p><p><strong>在我看来，就是要测试接口的正确逻辑、错误逻辑是否满足最初的需求，因此，我们需要快速地掌握验证手段。</strong>在时间紧迫的情况下，如果我们还是先学习新协议的基础知识，再学习怎么使用它，就无疑压榨了测试的工期，也会让我们在真正开始工作时手忙脚乱。</p><p>所以，我们要从解决实际问题的角度出发，直接拿到开发工程师提供的调用客户端代码，这样我们就可以快速完成工作了；在完成工作的后续时间里，我们也可以慢慢补充基础知识。这里需要你注意的是，我并不是说基础知识不重要，而是说在项目进行过程中，学习基础知识很多时候没有完成项目的质量保障工作重要。</p><h2>第一次接触WebSocket接口</h2><p>我在前面说了一大堆方法论，你看到后可能还是摸不到头脑，那么现在，我就以一个我亲身经历的例子来告诉你，面对一个陌生协议接口要怎么去做测试。</p><p>大概是在2017年，我第一次接触到WebSocket协议的接口，当开发工程师告诉我这是一个WebSocket的接口时，我一脸懵，完全不知道要如何开始测试它。</p><p>我先做的就是和开发要了他们调用方的代码，当我第一次看到这个代码时，还是很难为情的，因为它是用Node.js编写的，当时我对这个技术知之甚少。但凭着自己的经验积累，我多多少少还能看懂一点这个代码，然而我在读了代码之后，发现自己基于这个代码写测试用例并不容易，因为我对Node.js技术实在太陌生了，陌生到我无法利用它来完成接口测试。</p><p>这种情况我相信你肯定也遇见过，那就是开发工程师很Nice地把代码给了你，但你却没办法利用它。但这里我想告诉你的是，面对一个陌生协议的接口测试任务时，无论如何，第一次你还是需要先拿到并了解开发工程师写的客户端代码，因为这样，你就可以对调用方式、参数等接口相关的一些内容有初步印象。在读完相关代码后，你就算是和这些接口完成了首次“会面”，下面你就要想办法敲开接口的大门，让自己能访问被测接口。</p><p>由于技术栈问题，我没办法借助开发工程师的力量完成接口测试任务，因此我接下来想到的是，借助一些自己已经熟悉的工具来完成本次测试。我第一个想到的就是我们在之前课程中一起使用过的Fiddler，因为在任何一个接口项目开始时，无论开发是不是给了我接口文档，我都会先用Fiddler访问看一下。</p><p>那么WebSocket用Fiddler怎么搞定？我当时搜索了一下，还真是有办法，具体的办法我就不在这里多说了，其实主要就是修改了Fiddler中Rules下的Customize Rules，如果你感兴趣可以自己去搜一下。我只是想告诉你，当你面对陌生技术问题的时候，你应该使用你最熟悉的技术去尝试解决问题。</p><p>但从下面的图中你可以看到，虽然我找到了Fiddler截获WebSocket接口的办法，却不难发现，所截获的全部消息都在日志里面，根本无法操作，所以我想用Fiddler完成WebSocket测试的想法也就胎死腹中了。</p><p><img src=\"https://static001.geekbang.org/resource/image/28/c5/28455a0b055a49b69f30963c1d3cf8c5.png?wh=1300*755\" alt=\"\"></p><p>但是，我可以借助Fiddler分析WebSocket的接口，这也和我们一开始给Fiddler这款工具的定位一样，那就是通过它辅助分析我们的被测接口。</p><h2>自己写WebSocket测试代码</h2><p>当用已有工具基础解决WebSocket接口测试这个想法破灭了后，我开始寻求通过编写代码，解决WebSocket的接口测试。在这里，我还是建议你要以你自己的技术栈为出发点，寻找解决问题的方法。由于我的主要编程语言是Python，因此下面一些讲解的示例代码段，我还是以Python为例，但是你要知道，解决问题的思路并不限于Python的编程语言，它可以是你使用的任何其它语言。</p><p>我发现Python提供了WebSocket的协议库，因此我只要用它完成客户端的撰写，就可以进行接口测试了。这里，我写下了第一个WebSocket的调用代码（这里我们以 <a href=\"http://www.websocket.org/demos/echo/\">http://www.websocket.org/demos/echo/</a> 为例)，如下面图中所示，我在代码里面写了详细的注释，你肯定能看懂每一句话的意思。</p><pre><code>#引入websocket的create_connection类\nfrom websocket import create_connection\n# 建立和WebSocket接口的链接\nws = create_connection(&quot;ws://echo.websocket.org&quot;)\n# 打印日子\nprint(&quot;发送 'Hello, World'...&quot;)\n# 发送Hello，World\nws.send(&quot;Hello, World&quot;)\n# 将WebSocket的返回值存储result变量\nresult = ws.recv()\n# 打印返回的result\nprint(&quot;返回&quot;+result)\n# 关闭WebSocket链接\nws.close()\n</code></pre><p>不知道你发现没有，上面的代码和HTTP协议的接口类似，都是先和一个请求建立连接，然后发送信息。它们的区别是，WebSocket是一个长连接，因此需要人为的建立连接，然后再关闭链接，而HTTP却并不需要进行这一操作。</p><p>我相信你肯定还记得在测试框架那一节（<a href=\"https://time.geekbang.org/column/article/195483\">04</a>）中，我们学习了一些线性的接口测试代码，然后通过分析这些代码抽象出Common类，随着Common类的不断丰富，就形成了你自己私有化的测试框架，那么现在问题来了：Common类中可以也放入WebSocket的通用方法吗？</p><h2>将WebSocket接口封装进你的框架</h2><p>看见上面的代码，我们的第一反应应该是，这里有什么东西可以放到我们自己的Common类中呢？你可以按照“测试代码即框架”这一思路将这个WebSocket接口封装进你的框架。</p><p>我们在前面课程中封装了Common类，你可以在它的构造函数中，添加一个API类型的参数，以便于知道自己要做的是什么协议的接口，其中http代表HTTP协议接口，ws代表WebSocket协议接口。由于WebSocket是一个长连接，我们在Common类析构函数中添加了关闭ws链接的代码，以释放WebSocket长连接。依据前面的交互流程，实现代码如下所示：</p><pre><code>#!/usr/bin/env python\n# -*- coding: utf-8 -*-\n# python代码中引入requests库，引入后才可以在你的代码中使用对应的类以及成员函数\nimport requests\nfrom websocket import create_connection\n\n\n# 定义一个common的类，它的父类是object\nclass Common(object):\n  # common的构造函数\n  def __init__(self,url_root,api_type):\n    '''\n    :param api_type:接口类似当前支持http、ws，http就是HTTP协议，ws是WebSocket协议  \n    :param url_root: 被测系统的根路由   \n    '''    \n    if api_type=='ws':\n      self.ws = create_connection(url_root)\n    elif api_type=='http':\n      self.ws='null'\n      self.url_root = url_root\n\n\n  # ws协议的消息发送\n  \n  def send(self,params):\n    '''\n    :param params: websocket接口的参数\n    \n    :return: 访问接口的返回值\n    ''' \n    self.ws.send(params)\n    res = self.ws.recv()\n    return res\n\n\n  # common类的析构函数，清理没有用的资源\n  \n  def __del__(self):\n    '''\n    :return:\n    '''\n    if self.ws!='null&quot;:\n       self.ws.close()\n  def get(self, uri, params=None):\n    '''\n    封装你自己的get请求，uri是访问路由，params是get请求的参数，如果没有默认为空 \n    :param uri: 访问路由 \n    :param params: 传递参数，string类型，默认为None \n    :return: 此次访问的response\n    '''\n    # 拼凑访问地址\n    if params is not None:\n      url = self.url_root + uri + params\n    else:    \n      url = self.url_root + uri\n    # 通过get请求访问对应地址\n    res = requests.get(url)\n    # 返回request的Response结果，类型为requests的Response类型\n    return res\n  def post(self, uri, params=None):\n    '''\n    封装你自己的post方法，uri是访问路由，params是post请求需要传递的参数，如果没有参数这里为空\n    :param uri: 访问路由\n    :param params: 传递参数，string类型，默认为None\n    :return: 此次访问的response\n    '''\n    # 拼凑访问地址\n    url = self.url_root + uri\n    if params is not None:\n       # 如果有参数，那么通过post方式访问对应的url，并将参数赋值给requests.post默认参数data\n      # 返回request的Response结果，类型为requests的Response类型\n      res = requests.post(url, data=params)\n    else:\n      # 如果无参数，访问方式如下\n      # 返回request的Response结果，类型为requests的Response类型\n      res = requests.post(url)    \n    return res\n\n\n  def put(self,uri,params=None):\n    '''\n    封装你自己的put方法，uri是访问路由，params是put请求需要传递的参数，如果没有参数这里为空\n    :param uri: 访问路由\n    :param params: 传递参数，string类型，默认为None\n    :return: 此次访问的response\n    '''\n    url = self.url_root+uri\n    if params is not None:\n      # 如果有参数，那么通过put方式访问对应的url，并将参数赋值给requests.put默认参数data\n      # 返回request的Response结果，类型为requests的Response类型\n      res = requests.put(url, data=params)\n    else:\n      # 如果无参数，访问方式如下\n      # 返回request的Response结果，类型为requests的Response类型\n      res = requests.put(url)\n    return res\n\n\n  def delete(self,uri,params=None):\n    '''\n    封装你自己的delete方法，uri是访问路由，params是delete请求需要传递的参数，如果没有参数这里为空\n    :param uri: 访问路由\n    :param params: 传递参数，string类型，默认为None\n    :return: 此次访问的response\n    '''\n    url = self.url_root + uri\n    if params is not None:\n      # 如果有参数，那么通过put方式访问对应的url，并将参数赋值给requests.put默认参数data\n      # 返回request的Response结果，类型为requests的Response类型\n      res = requests.delete(url, data=params)\n    else:\n      # 如果无参数，访问方式如下\n      # 返回request的Response结果，类型为requests的Response类型\n      res = requests.put(url)\n    return res\n</code></pre><p>上面的代码很长，但我的注释很详细，我并不建议你一字不落地都看完，你只要在使用的时候看一下对应的方法就好了。它是一个超级工具集合，最后会变成你自己的类似哆啦A梦的万能口袋，你只要做好自己的积累就可以了。</p><p>那么，使用上述的Common类将上面那个流水账一样的脚本进行改造后，就得出了下面这段代码：</p><pre><code>from common import Common\n# 建立和WebSocket接口的链接\ncon = Common('ws://echo.websocket.org','ws')\n# 获取返回结果\nresult = con.send('Hello, World...')\n#打印日志\nprint(result)\n#释放WebSocket的长连接\ndel con\n</code></pre><p>现在，从改造后的代码中，你是不是更能体会到框架的魅力了？它能让代码变得更加简洁和易读，将WebSocket的协议封装到你的框架后，你就拥有了一个既包含HTTP协议又包含WebSocket协议的接口测试框架了，随着你不断地积累新协议，你的框架会越来越强大，你自己的秘密武器库也会不断扩充，随着你对它的不断完善，它会让你的接口测试工作越来越简单，越来越快速。</p><h2>总结</h2><p>美好的时光过得都很快，又到了本节课结束的时候了，我今天主要讲了面对一个陌生协议时（比如说WebSocket），你该如何从零开始完成接口测试任务。</p><p>针对一个陌生协议的第一次接口测试，你要保持自己敏锐的测试嗅觉，依据自己的技术基础，尽快解决问题。总地来说，你可以通过三步快速完成测试任务：</p><ol>\n<li>借力开发工程师。你首先该借力就是开发工程师，但你不要进入开发工程师给你的那种，从技术基础和理论开始学起，再逐步应用的学习脉络。你要一击致命，直接把他的客户端代码拿来，尽最大可能挪为己用，将其变成自己的接口测试代码。</li>\n<li>站在自己的技术栈之上，完成技术积累。如果开发工程师的代码并不能拿来使用，那么你就需要站在自己的技术栈上寻求解决方法，这其中既包含了你已经熟悉的测试工具、测试平台，也包含了自己的测试框架和编码基础。</li>\n<li>归入框架。无论你使用哪一种方法，在完成测试工作后，你还是要掌握对应的理论基础，同时想办法将这个一开始陌生的接口，通过自己熟悉的方式合并到你自己的框架中，不断扩充自己框架的测试能力，不断丰富你自己的测试手段。</li>\n</ol><h2>思考题</h2><p>我们今天一起学习了如何破解陌生协议接口测试难题的步骤，那么面对WebSocket的接口测试任务，结合你现有的技术栈，你是不是也有你自己的解决方案呢？你工作中如果有类似的陌生协议（既可以是第一次接触的协议，也可以是企业私有协议），你是如何解决的呢？欢迎你在留言区中留下你的疑问和你的做法。</p><p>我是陈磊，欢迎你在留言区留言分享你的观点，如果这篇文章让你有新的启发，也欢迎你把文章分享给你的朋友，我们一起沟通探讨。</p>","neighbors":{"left":{"article_title":"06 | 接口测试平台：工具和框架不可以兼容？","id":197309},"right":{"article_title":"08 | 测试数据：是不是可以把所有的参数都保存到Excel中？","id":199546}},"comments":[{"had_liked":false,"id":178670,"user_name":"happychap","can_delete":false,"product_type":"c1","uid":1388033,"ip_address":"","ucode":"C872B959BF2F3D","user_header":"https://static001.geekbang.org/account/avatar/00/15/2e/01/14a478bb.jpg","comment_is_top":false,"comment_ctime":1581776443,"is_pvip":true,"replies":[{"id":"69361","content":"谢谢您的支持，xmpp和mqtt协议确实不容易遇见，看到您的解决思路可真棒，借力打力得方法会让我们事半功倍。谢谢您的留言，解决方法特别棒，也帮我提供了思考。","user_name":"作者回复","user_name_real":"Criss@陈磊","uid":"1064280","ctime":1581813422,"ip_address":"","comment_id":178670,"utype":1}],"discussion_count":1,"race_medal":0,"score":"57416351291","product_id":100045801,"comment_content":"我的尝试的一般顺序：现成工具，工具现成插件，测试框架+项目组封装或采用的api库（如：junit +对应的协议开源库）。<br>个人觉得遇到这种情况，要会点编程，孰练测试框架胜算才大ʘᴗʘ<br>工作中有突然遭遇xmpp和mqtt协议性能测试的经历，最终jmeter+开源插件+厂商client jar包+demo+api手册搞定了任务。","like_count":14,"discussions":[{"author":{"id":1064280,"avatar":"https://static001.geekbang.org/account/avatar/00/10/3d/58/377289a8.jpg","nickname":"陈磊@Criss","note":"","ucode":"AF0A1CEA749698","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":483916,"discussion_content":"谢谢您的支持，xmpp和mqtt协议确实不容易遇见，看到您的解决思路可真棒，借力打力得方法会让我们事半功倍。谢谢您的留言，解决方法特别棒，也帮我提供了思考。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1581813422,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":178378,"user_name":"京都念慈菴","can_delete":false,"product_type":"c1","uid":1744834,"ip_address":"","ucode":"2A310A91069A5E","user_header":"https://static001.geekbang.org/account/avatar/00/1a/9f/c2/3d1c2f88.jpg","comment_is_top":false,"comment_ctime":1581673768,"is_pvip":false,"replies":[{"id":"69208","content":"谢谢您的留言，一个解决问题的完美过程。加油","user_name":"作者回复","user_name_real":"Criss@陈磊","uid":"1064280","ctime":1581688550,"ip_address":"","comment_id":178378,"utype":1}],"discussion_count":7,"race_medal":0,"score":"40236379432","product_id":100045801,"comment_content":"年前刚好公司年会，然后开发了个聊天小程序，就给我测。当时完全不知道怎么搞，就去看这个协议。然后就想先抓包，结果抓不到，捣鼓了修改fiddler抓到了包，然后也是看抓到的数据好像跟平时不一样，然后各种搜索，平时使用的jmeter，就在jmeter中按往常的来试试，正常取样器不行，最后看到jmeter中有个websocket取样器，开心完成压测。","like_count":9,"discussions":[{"author":{"id":1064280,"avatar":"https://static001.geekbang.org/account/avatar/00/10/3d/58/377289a8.jpg","nickname":"陈磊@Criss","note":"","ucode":"AF0A1CEA749698","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":483783,"discussion_content":"谢谢您的留言，一个解决问题的完美过程。加油","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1581688550,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1692907,"avatar":"https://static001.geekbang.org/account/avatar/00/19/d4/eb/46319136.jpg","nickname":"。。。","note":"","ucode":"3EF9692AAF8C12","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":199962,"discussion_content":"你好   想跟你请教下用jmeter做压测的实际流程       可以吗     发现加不了好友   只能评论区见吗😂","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1583640210,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1744834,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/9f/c2/3d1c2f88.jpg","nickname":"京都念慈菴","note":"","ucode":"2A310A91069A5E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1692907,"avatar":"https://static001.geekbang.org/account/avatar/00/19/d4/eb/46319136.jpg","nickname":"。。。","note":"","ucode":"3EF9692AAF8C12","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":208876,"discussion_content":"其实实际流程在小公司是没有的，比如我们公司就只有两个测试，每个人手上都会有很多项目，基本功能测试结束了就没什么，我也是刚好手上有项目，又在学习压测就拿过来练手。没有参与过正式压测😂","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584586458,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":199962,"ip_address":""},"score":208876,"extra":""}]},{"author":{"id":1822249,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/ce/29/20f2f553.jpg","nickname":"奋斗小青年","note":"","ucode":"38D88FD8E21B11","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":185212,"discussion_content":"楼主，请教个问题，聊天小程序回复语你们也是自动化测试吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582603313,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1744834,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/9f/c2/3d1c2f88.jpg","nickname":"京都念慈菴","note":"","ucode":"2A310A91069A5E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1822249,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/ce/29/20f2f553.jpg","nickname":"奋斗小青年","note":"","ucode":"38D88FD8E21B11","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":188051,"discussion_content":"是的jmeter可以设置聊天信息，就像直播聊天那样，不知道你的回复语是指自动回复还是就是正常聊天","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582790610,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":185212,"ip_address":""},"score":188051,"extra":""}]},{"author":{"id":1171260,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/etbNBmR5PEicra7jbaV9pRsCaibXZ3ichB6JicMOnYowP65W5QMKb8Zicud19jicmEGAGh8ylwDXoYM3SHVU6hf6dFpQ/132","nickname":"roychris","note":"","ucode":"B0E239FB11A006","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":171557,"discussion_content":"首先得问是什么协议吧，网上也有现成的websocket测试工具，可以临时使用。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1581729697,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1744834,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/9f/c2/3d1c2f88.jpg","nickname":"京都念慈菴","note":"","ucode":"2A310A91069A5E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1171260,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/etbNBmR5PEicra7jbaV9pRsCaibXZ3ichB6JicMOnYowP65W5QMKb8Zicud19jicmEGAGh8ylwDXoYM3SHVU6hf6dFpQ/132","nickname":"roychris","note":"","ucode":"B0E239FB11A006","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":171942,"discussion_content":"拿到项目就知道协议是什么了，但是习惯是一来想自己最擅长的工具怎么用，习惯性就想jmeter怎么用了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1581760902,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":171557,"ip_address":""},"score":171942,"extra":""}]}]},{"had_liked":false,"id":181954,"user_name":"钱","can_delete":false,"product_type":"c1","uid":1009652,"ip_address":"","ucode":"2C92A243A463D4","user_header":"https://static001.geekbang.org/account/avatar/00/0f/67/f4/9a1feb59.jpg","comment_is_top":false,"comment_ctime":1582684379,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"35942422747","product_id":100045801,"comment_content":"过，定位很清楚，先搞定工作，再补充技术原理，技术原理是重要不紧急的事情，工作是重要紧急的事情，不过技术原理需要不断的补充才行，共勉。","like_count":9,"discussions":[{"author":{"id":1163974,"avatar":"https://static001.geekbang.org/account/avatar/00/11/c2/c6/88d0c7b2.jpg","nickname":"一默","note":"","ucode":"F23A6E42DFD0C4","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":200616,"discussion_content":"共勉。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1583690370,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":179877,"user_name":"罗春南_Nancy","can_delete":false,"product_type":"c1","uid":1787562,"ip_address":"","ucode":"271E958AC9F0C2","user_header":"https://static001.geekbang.org/account/avatar/00/1b/46/aa/5e1b5a8a.jpg","comment_is_top":false,"comment_ctime":1582115767,"is_pvip":false,"replies":[{"id":"69852","content":"完美 谢谢您的建议。","user_name":"作者回复","user_name_real":"Criss@陈磊","uid":"1064280","ctime":1582122255,"ip_address":"","comment_id":179877,"utype":1}],"discussion_count":1,"race_medal":0,"score":"23056952247","product_id":100045801,"comment_content":"    self.ws=&#39;null&#39;--加个定义好点<br>    if api_type==&#39;ws&#39;:<br>      self.ws = create_connection(url_root)<br>    elif api_type==&#39;http&#39;:<br>      self.url_root = url_root<br><br>------------------------------------------<br><br>  # common类的析构函数，清理没有用的资源<br>  <br>  def __del__(self):<br>    &#39;&#39;&#39;<br>    :return:<br>    &#39;&#39;&#39;<br>    if self.ws!=&#39;null&#39;:------加个判断好点<br>      self.ws.close()<br><br>不然测http的时候websocket会报错。","like_count":5,"discussions":[{"author":{"id":1064280,"avatar":"https://static001.geekbang.org/account/avatar/00/10/3d/58/377289a8.jpg","nickname":"陈磊@Criss","note":"","ucode":"AF0A1CEA749698","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":484436,"discussion_content":"完美 谢谢您的建议。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582122255,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":178468,"user_name":"🐾","can_delete":false,"product_type":"c1","uid":1087256,"ip_address":"","ucode":"D0AD0260351C31","user_header":"https://static001.geekbang.org/account/avatar/00/10/97/18/a5218104.jpg","comment_is_top":false,"comment_ctime":1581694806,"is_pvip":false,"replies":[{"id":"69335","content":"您好，无论您说的dubbo、protobuf还是springcloud，gRPC等都不会受到语言的限制而无法调用的，但是也不能断定没有这个情况，那么就只能靠你自己依据自己的技术栈完成协议的封装了，目前您说的dubbo，protobuf使用各种语言都有对应的解决办法，protobuf可以参考https:&#47;&#47;www.jianshu.com&#47;p&#47;58513863b491；dubbo可以使用https:&#47;&#47;blog.csdn.net&#47;cyjs1988&#47;article&#47;details&#47;82495136。","user_name":"作者回复","user_name_real":"Criss@陈磊","uid":"1064280","ctime":1581770814,"ip_address":"","comment_id":178468,"utype":1}],"discussion_count":3,"race_medal":0,"score":"23056531286","product_id":100045801,"comment_content":"像微服务接口，一般都是使用特殊协议如dubbo、protobuf进行通信的，这种情况应该怎么做测试呢？只能用自己擅长的编程语言写一个客户端模拟调用来进行测试？这种还需要连接配置中心什么的。而且会不会存在有些协议是不跨语言的，比如仅限Java语言，不支持python。","like_count":6,"discussions":[{"author":{"id":1064280,"avatar":"https://static001.geekbang.org/account/avatar/00/10/3d/58/377289a8.jpg","nickname":"陈磊@Criss","note":"","ucode":"AF0A1CEA749698","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":483838,"discussion_content":"您好，无论您说的dubbo、protobuf还是springcloud，gRPC等都不会受到语言的限制而无法调用的，但是也不能断定没有这个情况，那么就只能靠你自己依据自己的技术栈完成协议的封装了，目前您说的dubbo，protobuf使用各种语言都有对应的解决办法，protobuf可以参考https://www.jianshu.com/p/58513863b491；dubbo可以使用https://blog.csdn.net/cyjs1988/article/details/82495136。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1581770814,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1167827,"avatar":"https://static001.geekbang.org/account/avatar/00/11/d1/d3/5dfc36c0.jpg","nickname":"王德发","note":"","ucode":"823DFABC56CEB5","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":171949,"discussion_content":"推荐一本书，叫Java微服务测试，里面提高的集成测试和契约测试的思路可以撸一下","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1581761457,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1300136,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJTL1kXMgeyk9hcCTDWbrwuAW2OiaJmHLTN3ZppVzKJXIXicia8D9a38Nb8vjfCEepFJyJJUqAknib2UQ/132","nickname":"酷哥居士","note":"","ucode":"FF721E6124F817","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":380908,"discussion_content":"protobuf不能算是一种通讯协议吧？应该只是序列化数据的一种方式，如果通讯的数据加密，又应该如何验证返回的数据是否正确呢？难道为了测试也自己写一套加解密？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1624788431,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":185432,"user_name":"孟见大侠","can_delete":false,"product_type":"c1","uid":1661872,"ip_address":"","ucode":"428C84FB5332DF","user_header":"https://static001.geekbang.org/account/avatar/00/19/5b/b0/50bc0dd7.jpg","comment_is_top":false,"comment_ctime":1583582817,"is_pvip":false,"replies":[{"id":"71644","content":"可以，这样写和很棒的，我加了type是为了简单明了，string的比较比截取后比较会少一步操作，节省了cpu的计算。<br>课程中代码我做了整理：https:&#47;&#47;github.com&#47;crisschan&#47;api_geektime。","user_name":"作者回复","user_name_real":"CrissChan","uid":"1064280","ctime":1583630928,"ip_address":"","comment_id":185432,"utype":1}],"discussion_count":1,"race_medal":0,"score":"14468484705","product_id":100045801,"comment_content":"其实根本就不要加api_type这个参数，根据url_root 就可以知道协议类型了。ws:&#47;&#47;echo.websocket.org 是ws协议，https:&#47;&#47;echo.websocket.org是https协议。根据协议头，截取出来就可以了。这样可以少传一个参数。","like_count":3,"discussions":[{"author":{"id":1064280,"avatar":"https://static001.geekbang.org/account/avatar/00/10/3d/58/377289a8.jpg","nickname":"陈磊@Criss","note":"","ucode":"AF0A1CEA749698","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":486360,"discussion_content":"可以，这样写和很棒的，我加了type是为了简单明了，string的比较比截取后比较会少一步操作，节省了cpu的计算。\n课程中代码我做了整理：https://github.com/crisschan/api_geektime。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1583630928,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":178688,"user_name":"VeryYoung","can_delete":false,"product_type":"c1","uid":1198965,"ip_address":"","ucode":"50E129987FE4E5","user_header":"https://static001.geekbang.org/account/avatar/00/12/4b/75/71845744.jpg","comment_is_top":false,"comment_ctime":1581779547,"is_pvip":false,"replies":[{"id":"69358","content":"好巧啊，你遇见了很多陌生协议。很宝贵的经验啊","user_name":"作者回复","user_name_real":"Criss@陈磊","uid":"1064280","ctime":1581813166,"ip_address":"","comment_id":178688,"utype":1}],"discussion_count":3,"race_medal":0,"score":"14466681435","product_id":100045801,"comment_content":"好巧，websocket协议也是我遇到的第一个陌生协议，那个时候测试工期短，用的是java技术栈，就用了netty框架来封装，后面有时间了就进行回顾，发现还有有个websocket.jar开源包，后面又相继遇到了amqp、mqtt等非http协议！","like_count":4,"discussions":[{"author":{"id":1064280,"avatar":"https://static001.geekbang.org/account/avatar/00/10/3d/58/377289a8.jpg","nickname":"陈磊@Criss","note":"","ucode":"AF0A1CEA749698","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":483925,"discussion_content":"好巧啊，你遇见了很多陌生协议。很宝贵的经验啊","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1581813166,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1025557,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a6/15/0246a2f4.jpg","nickname":"骆俊","note":"","ucode":"6468AA909E606D","race_medal":1,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":177093,"discussion_content":"能分享以下MQtt的测试方法吗，最近正在做这个。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582078452,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1198965,"avatar":"https://static001.geekbang.org/account/avatar/00/12/4b/75/71845744.jpg","nickname":"VeryYoung","note":"","ucode":"50E129987FE4E5","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1025557,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a6/15/0246a2f4.jpg","nickname":"骆俊","note":"","ucode":"6468AA909E606D","race_medal":1,"user_type":1,"is_pvip":false},"discussion":{"id":177141,"discussion_content":"用了paho的jar包，封装了常用调用接口方法和封装了断言方法！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582080794,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":177093,"ip_address":""},"score":177141,"extra":""}]}]},{"had_liked":false,"id":178561,"user_name":"shadow","can_delete":false,"product_type":"c1","uid":1814687,"ip_address":"","ucode":"66F3C17A5CC993","user_header":"https://static001.geekbang.org/account/avatar/00/1b/b0/9f/16585556.jpg","comment_is_top":false,"comment_ctime":1581744457,"is_pvip":false,"replies":[{"id":"69331","content":"您说的实在框架迭代过程中必须经历的，因此为了能够兼容老框架技术栈，我建议在构造函数中给两个参数默认值，默认值就是最开始的uri和api_type的类型，已解决前后兼容的问题。谢谢您这个好问题","user_name":"作者回复","user_name_real":"Criss@陈磊","uid":"1064280","ctime":1581767743,"ip_address":"","comment_id":178561,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5876711753","product_id":100045801,"comment_content":"这里Common里增加了一个入参api_type『def __init__(self,url_root,api_type)』，用于标记请求协议类型，这实际相当于框架底层方法重构，一个方法是给这个入参加默认传参，就是之前的http，不知道还有没有别的方法？<br>还有一个就是，框架开发，会多多少少的涉及到底层重构，然后可能影响的就是所有的用例都需要修改，这种情况，不知道有没有什么好的规避方法？","like_count":1,"discussions":[{"author":{"id":1064280,"avatar":"https://static001.geekbang.org/account/avatar/00/10/3d/58/377289a8.jpg","nickname":"陈磊@Criss","note":"","ucode":"AF0A1CEA749698","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":483878,"discussion_content":"您说的实在框架迭代过程中必须经历的，因此为了能够兼容老框架技术栈，我建议在构造函数中给两个参数默认值，默认值就是最开始的uri和api_type的类型，已解决前后兼容的问题。谢谢您这个好问题","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1581767743,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":345101,"user_name":"张毅","can_delete":false,"product_type":"c1","uid":1886796,"ip_address":"","ucode":"0707311786C079","user_header":"","comment_is_top":false,"comment_ctime":1652022483,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1652022483","product_id":100045801,"comment_content":"不错，工作中确实会遇到工具不支持的协议，比如jmeter性能测试时需要支持jmeter本身不支持的协议等，这种需要通过代码来拓展和实现","like_count":0},{"had_liked":false,"id":329315,"user_name":"三日月","can_delete":false,"product_type":"c1","uid":1394953,"ip_address":"","ucode":"7ECB9CC5935B76","user_header":"https://static001.geekbang.org/account/avatar/00/15/49/09/9afe9a24.jpg","comment_is_top":false,"comment_ctime":1641282412,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1641282412","product_id":100045801,"comment_content":"老师您好，websocket没有create_connection()啊","like_count":0},{"had_liked":false,"id":310094,"user_name":"April Gao","can_delete":false,"product_type":"c1","uid":1819445,"ip_address":"","ucode":"8B4AA664129749","user_header":"https://static001.geekbang.org/account/avatar/00/1b/c3/35/133f7f4b.jpg","comment_is_top":false,"comment_ctime":1630483502,"is_pvip":false,"replies":[{"id":"114190","content":"不是为了让他是None，是给他一个语义的空","user_name":"作者回复","user_name_real":"陈磊@Criss","uid":"1064280","ctime":1633873696,"ip_address":"","comment_id":310094,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1630483502","product_id":100045801,"comment_content":"不懂就问，self.ws=&#39;null&#39;，python中没有null，请问这个写法是正确的吗？","like_count":0,"discussions":[{"author":{"id":1064280,"avatar":"https://static001.geekbang.org/account/avatar/00/10/3d/58/377289a8.jpg","nickname":"陈磊@Criss","note":"","ucode":"AF0A1CEA749698","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":526124,"discussion_content":"不是为了让他是None，是给他一个语义的空","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1633873696,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":264613,"user_name":"捷后愚生","can_delete":false,"product_type":"c1","uid":1170483,"ip_address":"","ucode":"A1F935D39C8488","user_header":"https://static001.geekbang.org/account/avatar/00/11/dc/33/a68c6b26.jpg","comment_is_top":false,"comment_ctime":1606545794,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1606545794","product_id":100045801,"comment_content":"遇到陌生协议的接口怎么办？文章解决问题的思路还是具有借鉴意义。<br>当你面对陌生技术问题的时候，你应该使用你最熟悉的技术去尝试解决问题。<br>先学习怎么使用新的协议，而不是先了解其底层。<br><br>如刚开始学习测试http协议的接口，刚开始的时候我可能不大清楚很多计算机网络的知识，什么七层模型、TCP&#47;IP协议族，我只要知道使用python的requests库可以发起get、post请求，就可以先做接口测试。","like_count":0},{"had_liked":false,"id":238230,"user_name":"-_-","can_delete":false,"product_type":"c1","uid":1304884,"ip_address":"","ucode":"6B70C4BB44D391","user_header":"https://static001.geekbang.org/account/avatar/00/13/e9/34/83025564.jpg","comment_is_top":false,"comment_ctime":1596098448,"is_pvip":false,"replies":[{"id":"88033","content":"你去掉后写一个http协议的测试case试一次就知道了","user_name":"作者回复","user_name_real":"CrissChan","uid":"1064280","ctime":1596119987,"ip_address":"","comment_id":238230,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1596098448","product_id":100045801,"comment_content":"elif api_type==&#39;http&#39;: self.ws=&#39;null&#39;这边为啥要加self.ws=&#39;null&#39;这边不加有什么影响吗既然是http为什么要写这一行是为了迎合析构函数吗","like_count":0,"discussions":[{"author":{"id":1064280,"avatar":"https://static001.geekbang.org/account/avatar/00/10/3d/58/377289a8.jpg","nickname":"陈磊@Criss","note":"","ucode":"AF0A1CEA749698","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":502679,"discussion_content":"你去掉后写一个http协议的测试case试一次就知道了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1596119987,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":227423,"user_name":"雪糕","can_delete":false,"product_type":"c1","uid":1504919,"ip_address":"","ucode":"908D23B4454C00","user_header":"","comment_is_top":false,"comment_ctime":1592377341,"is_pvip":false,"replies":[{"id":"85979","content":"common是指的Common类在common.py文件中，不知道您那边是不是有这个文件，或者您可以在如下github仓库中下载全部课程代码https:&#47;&#47;github.com&#47;crisschan&#47;api_geektime","user_name":"作者回复","user_name_real":"CrissChan","uid":"1064280","ctime":1594185364,"ip_address":"","comment_id":227423,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1592377341","product_id":100045801,"comment_content":"from common import Common 运行时报错：ModuleNotFoundError: No module named &#39;common&#39;<br>代码里确实没有小写的common模块，请问老师这是怎么回事呢？","like_count":0,"discussions":[{"author":{"id":1064280,"avatar":"https://static001.geekbang.org/account/avatar/00/10/3d/58/377289a8.jpg","nickname":"陈磊@Criss","note":"","ucode":"AF0A1CEA749698","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":498632,"discussion_content":"common是指的Common类在common.py文件中，不知道您那边是不是有这个文件，或者您可以在如下github仓库中下载全部课程代码https://github.com/crisschan/api_geektime","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1594185364,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":218665,"user_name":"Cubat","can_delete":false,"product_type":"c1","uid":2001303,"ip_address":"","ucode":"A1783E5B64FB8C","user_header":"https://static001.geekbang.org/account/avatar/00/1e/89/97/53b92627.jpg","comment_is_top":false,"comment_ctime":1589851917,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1589851917","product_id":100045801,"comment_content":"第一次见到 Websocket 的时候也是头皮发麻，还有 HTTP2，不过好在后者目前用的不是很多。","like_count":0,"discussions":[{"author":{"id":1104850,"avatar":"https://static001.geekbang.org/account/avatar/00/10/db/d2/e29f8834.jpg","nickname":"lidashuang","note":"","ucode":"560ABE8032760E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":295261,"discussion_content":"挺多的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1596130435,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":211616,"user_name":"夜歌","can_delete":false,"product_type":"c1","uid":1562121,"ip_address":"","ucode":"724CF22FC99AA7","user_header":"https://static001.geekbang.org/account/avatar/00/17/d6/09/e9bfe86f.jpg","comment_is_top":false,"comment_ctime":1587989140,"is_pvip":false,"replies":[{"id":"82388","content":"在库里面，不是自己封装的","user_name":"作者回复","user_name_real":"CrissChan","uid":"1064280","ctime":1591160726,"ip_address":"","comment_id":211616,"utype":1}],"discussion_count":6,"race_medal":0,"score":"1587989140","product_id":100045801,"comment_content":"from websocket import create_connection，请问websocket是您自己封装的类吗？试着运行代码，发现没有websocket这个模块，然后pip install websocket 后也没有 create_connection 这个方法。所以是自己封装的吗？","like_count":0,"discussions":[{"author":{"id":1064280,"avatar":"https://static001.geekbang.org/account/avatar/00/10/3d/58/377289a8.jpg","nickname":"陈磊@Criss","note":"","ucode":"AF0A1CEA749698","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":493315,"discussion_content":"在库里面，不是自己封装的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1591160726,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1712600,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/21/d8/f3282303.jpg","nickname":"saxon","note":"","ucode":"0EC1BC2A856953","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":296011,"discussion_content":"pip install websocket_client","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1596425942,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1562121,"avatar":"https://static001.geekbang.org/account/avatar/00/17/d6/09/e9bfe86f.jpg","nickname":"夜歌","note":"","ucode":"724CF22FC99AA7","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1712600,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/21/d8/f3282303.jpg","nickname":"saxon","note":"","ucode":"0EC1BC2A856953","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":336849,"discussion_content":"收到，我试下","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1608716033,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":296011,"ip_address":""},"score":336849,"extra":""}]},{"author":{"id":1786332,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/41/dc/42da0a32.jpg","nickname":"Mind-online","note":"","ucode":"C5852F57903019","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":335694,"discussion_content":"我是python3.7.0，用pip install websocket_client确实可以","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1608275169,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1562121,"avatar":"https://static001.geekbang.org/account/avatar/00/17/d6/09/e9bfe86f.jpg","nickname":"夜歌","note":"","ucode":"724CF22FC99AA7","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1786332,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/41/dc/42da0a32.jpg","nickname":"Mind-online","note":"","ucode":"C5852F57903019","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":336850,"discussion_content":"好的，我试下","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1608716040,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":335694,"ip_address":""},"score":336850,"extra":""}]},{"author":{"id":1562121,"avatar":"https://static001.geekbang.org/account/avatar/00/17/d6/09/e9bfe86f.jpg","nickname":"夜歌","note":"","ucode":"724CF22FC99AA7","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":287699,"discussion_content":"pip没websocket这个库吧，我装的python版本不对？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1593512559,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":210750,"user_name":"博彦-孙文","can_delete":false,"product_type":"c1","uid":1852095,"ip_address":"","ucode":"EFE874A43F1A23","user_header":"","comment_is_top":false,"comment_ctime":1587819784,"is_pvip":false,"replies":[{"id":"78499","content":"蚂蚁的应该是dubbo吧。这类使用python的测试基础库的您可以查找一下","user_name":"作者回复","user_name_real":"CrissChan","uid":"1064280","ctime":1587891288,"ip_address":"","comment_id":210750,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1587819784","product_id":100045801,"comment_content":"你好老师，我现在面临一个问题，RPC接口怎么用脚本实现接口测试？目前这类接口是蚂蚁的，属于人家的东西，Python中没有这样的工具包","like_count":0,"discussions":[{"author":{"id":1064280,"avatar":"https://static001.geekbang.org/account/avatar/00/10/3d/58/377289a8.jpg","nickname":"陈磊@Criss","note":"","ucode":"AF0A1CEA749698","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":493101,"discussion_content":"蚂蚁的应该是dubbo吧。这类使用python的测试基础库的您可以查找一下","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1587891288,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":208630,"user_name":"小老鼠","can_delete":false,"product_type":"c1","uid":1257460,"ip_address":"","ucode":"C663A0C863A515","user_header":"https://static001.geekbang.org/account/avatar/00/13/2f/f4/2dede51a.jpg","comment_is_top":false,"comment_ctime":1587393211,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1587393211","product_id":100045801,"comment_content":"你这里协议均可找到类似import requests<br>from websocket import create_connection这样的类。那比如我在爱立信公司测试DNS、DHCP、AAA协议，我又如何用python进行测试呢，或许python就没类似协议的基类。","like_count":0},{"had_liked":false,"id":179318,"user_name":"aoe","can_delete":false,"product_type":"c1","uid":1121758,"ip_address":"","ucode":"1C6201EDB4E954","user_header":"https://static001.geekbang.org/account/avatar/00/11/1d/de/62bfa83f.jpg","comment_is_top":false,"comment_ctime":1581961074,"is_pvip":false,"replies":[{"id":"69615","content":"谢谢","user_name":"作者回复","user_name_real":"Criss@陈磊","uid":"1064280","ctime":1581982694,"ip_address":"","comment_id":179318,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1581961074","product_id":100045801,"comment_content":"老师的故事很有趣","like_count":0,"discussions":[{"author":{"id":1064280,"avatar":"https://static001.geekbang.org/account/avatar/00/10/3d/58/377289a8.jpg","nickname":"陈磊@Criss","note":"","ucode":"AF0A1CEA749698","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":484200,"discussion_content":"谢谢","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1581982694,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":179285,"user_name":"Ruby | 成长精进","can_delete":false,"product_type":"c1","uid":1095295,"ip_address":"","ucode":"4FE6526D33D699","user_header":"https://static001.geekbang.org/account/avatar/00/10/b6/7f/1ecf6e89.jpg","comment_is_top":false,"comment_ctime":1581951976,"is_pvip":false,"replies":[{"id":"69631","content":"您好，您的信息量稍微有点少，如果在这里不方便聊天可以来我的blog：https:&#47;&#47;blog.csdn.net&#47;crisschan留言，因为我有可能需要更多你关于工具的信息。","user_name":"作者回复","user_name_real":"Criss@陈磊","uid":"1064280","ctime":1581988912,"ip_address":"","comment_id":179285,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1581951976","product_id":100045801,"comment_content":"ws消息通过jmeter请求发送成功了，但是聊天窗口没有收到消息，请问会是什么原因，现在遇到这个问题，求解中","like_count":0,"discussions":[{"author":{"id":1064280,"avatar":"https://static001.geekbang.org/account/avatar/00/10/3d/58/377289a8.jpg","nickname":"陈磊@Criss","note":"","ucode":"AF0A1CEA749698","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":484182,"discussion_content":"您好，您的信息量稍微有点少，如果在这里不方便聊天可以来我的blog：https://blog.csdn.net/crisschan留言，因为我有可能需要更多你关于工具的信息。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1581988912,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":178452,"user_name":"Fredo","can_delete":false,"product_type":"c1","uid":1438470,"ip_address":"","ucode":"681D6692617DAB","user_header":"https://static001.geekbang.org/account/avatar/00/15/f3/06/8da1bf0c.jpg","comment_is_top":false,"comment_ctime":1581692022,"is_pvip":false,"replies":[{"id":"69262","content":"陌生协议只是校验码，参数组成方式等不一样。因此，为了快速完成任务最好的就是看开发写的客户端代码。这样是最快的解决问题的办法。","user_name":"作者回复","user_name_real":"Criss@陈磊","uid":"1064280","ctime":1581744274,"ip_address":"","comment_id":178452,"utype":1}],"discussion_count":3,"race_medal":0,"score":"1581692022","product_id":100045801,"comment_content":"你好，我想问一下这里做陌生的协议接口测试，测试人员参考的依据是什么文档，我们怎么得知我们测试的接口准确性呢？","like_count":0,"discussions":[{"author":{"id":1064280,"avatar":"https://static001.geekbang.org/account/avatar/00/10/3d/58/377289a8.jpg","nickname":"陈磊@Criss","note":"","ucode":"AF0A1CEA749698","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":483826,"discussion_content":"陌生协议只是校验码，参数组成方式等不一样。因此，为了快速完成任务最好的就是看开发写的客户端代码。这样是最快的解决问题的办法。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1581744274,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1966486,"avatar":"","nickname":"up","note":"","ucode":"3DC5F412AD73A4","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":234899,"discussion_content":"您好，所有课程中的代码有吗","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1587004812,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1438470,"avatar":"https://static001.geekbang.org/account/avatar/00/15/f3/06/8da1bf0c.jpg","nickname":"Fredo","note":"","ucode":"681D6692617DAB","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1966486,"avatar":"","nickname":"up","note":"","ucode":"3DC5F412AD73A4","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":235899,"discussion_content":"没有哦， 可以看下作者给了链接么","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1587050376,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":234899,"ip_address":""},"score":235899,"extra":""}]}]}]}