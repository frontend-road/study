{"id":86545,"title":"32 | 所有任务完成","content":"<h1>课件及源代码地址</h1><p><a href=\"https://gitee.com/geektime-geekbang/go_learning\">https://gitee.com/geektime-geekbang/go_learning</a></p><h2>书目推荐</h2><p><a href=\"time://mall?url=https%3A%2F%2Fh5.youzan.com%2Fv2%2Fgoods%2F1ycmk3uob0ryw\">《计算机程序的构造和解释》</a></p>","comments":[{"had_liked":false,"id":79989,"user_name":"「ZY」","can_delete":false,"product_type":"c3","uid":1208912,"ip_address":"","ucode":"576332E29CC400","user_header":"https://static001.geekbang.org/account/avatar/00/12/72/50/68304a30.jpg","comment_is_top":false,"comment_ctime":1553589219,"is_pvip":false,"replies":[{"id":29170,"content":"主携程会阻塞等待接收10个ch传来的我数据。所以在循环退出前程序不会退出","user_name":"作者回复","user_name_real":"ChaoCai2010","uid":1008262,"ctime":1553601403,"ip_address":"","comment_id":79989,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100024001,"comment_content":"蔡老师您好：\n您这节课的代码  有没有可能会出现\nchannel在取数的时候，上面的go协程还没跑完 ch里面还没有数据\n\nfor i:0;i&lt;10;i++{\n    go func(){\n        ch&lt;-ret\n    }   \n}\n\ntotal=&quot;&quot;\nfor i:0;i&lt;10;i++{\n    total+=&lt;-ch\n}","like_count":3,"discussions":[{"author":{"id":1008262,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/62/86/632ad029.jpg","nickname":"蔡超","note":"","ucode":"4C281BBF511238","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":444713,"discussion_content":"主携程会阻塞等待接收10个ch传来的我数据。所以在循环退出前程序不会退出","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1553601403,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":82029,"user_name":"橙子","can_delete":false,"product_type":"c3","uid":1323159,"ip_address":"","ucode":"72AD2F3C7C7E74","user_header":"https://static001.geekbang.org/account/avatar/00/14/30/97/cebe5b4f.jpg","comment_is_top":false,"comment_ctime":1554105932,"is_pvip":false,"replies":[{"id":29703,"content":"继续看我的close和广播那一节，你就会有答案","user_name":"作者回复","user_name_real":"ChaoCai2010","uid":1008262,"ctime":1554127966,"ip_address":"","comment_id":82029,"utype":1}],"discussion_count":2,"race_medal":0,"score":2,"product_id":100024001,"comment_content":"for i:=1;i&lt;=10;i++{\n    go func(){\n        ch&lt;-ret\n    } \n}\n\nfor i:=1;i&lt;=10;i++{\n   &lt;-ch\n}\n\n老师 针对以上程序我有个疑问，怎样可以使用   for  range   而不用以上的 for 递增循环，因为看到网上 有for range 遍历 channel \n        for v:=range ch {\n\t\tfmt.Println(v)\n\t}\n其实我想问的是 这种情况下 在哪里close后  再进行for range  希望老师帮忙解答","like_count":2,"discussions":[{"author":{"id":1008262,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/62/86/632ad029.jpg","nickname":"蔡超","note":"","ucode":"4C281BBF511238","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":445435,"discussion_content":"继续看我的close和广播那一节，你就会有答案","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1554127966,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1073236,"avatar":"https://static001.geekbang.org/account/avatar/00/10/60/54/b3eb605b.jpg","nickname":"阿牛","note":"","ucode":"DC8C189FCF3289","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":234088,"discussion_content":"\tclose(mychannel) //关闭管道\n\tfor v := range mychannel { //循环管道\n\t\tfmt.Println(v)\n\t}","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1586957829,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":287592,"user_name":"escray","can_delete":false,"product_type":"c3","uid":1020525,"ip_address":"","ucode":"1F4204930E47C4","user_header":"https://static001.geekbang.org/account/avatar/00/0f/92/6d/becd841a.jpg","comment_is_top":false,"comment_ctime":1618041712,"is_pvip":true,"replies":[{"id":104459,"content":"其实是两种不同的编程模型，在前面有过介绍","user_name":"作者回复","user_name_real":"蔡超","uid":1008262,"ctime":1618103371,"ip_address":"","comment_id":287592,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100024001,"comment_content":"从示例代码来看，与上一节相比，仅仅只是多了一个聚合操作，将所有协程的操作，ch &lt;- ret，从 channel 中取出来，+= &lt;-ch，然后再 return。\n\n如果和 WaitGroup 的方式来比较的话，不知道各自有什么优劣？","like_count":1,"discussions":[{"author":{"id":1008262,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/62/86/632ad029.jpg","nickname":"蔡超","note":"","ucode":"4C281BBF511238","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":518359,"discussion_content":"其实是两种不同的编程模型，在前面有过介绍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1618103371,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":82754,"user_name":"manatee","can_delete":false,"product_type":"c3","uid":1041112,"ip_address":"","ucode":"708D90E7A265BD","user_header":"https://static001.geekbang.org/account/avatar/00/0f/e2/d8/f0562ede.jpg","comment_is_top":false,"comment_ctime":1554298422,"is_pvip":false,"replies":[{"id":29963,"content":"最有用的就是那本经典“Go programming”和Go的官方文档了。另外，youtube上有不少Go创始人的视频讲座都值得看看。","user_name":"作者回复","user_name_real":"ChaoCai2010","uid":1008262,"ctime":1554364582,"ip_address":"","comment_id":82754,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100024001,"comment_content":"想请教下老师学习go的话哪些书籍或者学习资料比较有用呢","like_count":1,"discussions":[{"author":{"id":1008262,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/62/86/632ad029.jpg","nickname":"蔡超","note":"","ucode":"4C281BBF511238","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":445711,"discussion_content":"最有用的就是那本经典“Go programming”和Go的官方文档了。另外，youtube上有不少Go创始人的视频讲座都值得看看。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1554364582,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":119649,"user_name":"Geek_4c7e99","can_delete":false,"product_type":"c3","uid":1576393,"ip_address":"","ucode":"A9BDB79772C326","user_header":"https://static001.geekbang.org/account/avatar/00/18/0d/c9/20e742e6.jpg","comment_is_top":false,"comment_ctime":1564645635,"is_pvip":false,"replies":[{"id":44790,"content":"Before和After的一样吗？\n什么机器？\n","user_name":"作者回复","user_name_real":"ChaoCai2010","uid":1008262,"ctime":1565273179,"ip_address":"","comment_id":119649,"utype":1}],"discussion_count":2,"race_medal":0,"score":2,"product_id":100024001,"comment_content":"老师 我按照这个代码发现每次打印出来每次开启的协程数目都不一致，是与我的硬件机器有关系吗","like_count":0,"discussions":[{"author":{"id":1008262,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/62/86/632ad029.jpg","nickname":"蔡超","note":"","ucode":"4C281BBF511238","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":460996,"discussion_content":"Before和After的一样吗？\n什么机器？\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1565273179,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1576393,"avatar":"https://static001.geekbang.org/account/avatar/00/18/0d/c9/20e742e6.jpg","nickname":"Geek_4c7e99","note":"","ucode":"A9BDB79772C326","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":4332,"discussion_content":"before  和 after都是1","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1565318629,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":83676,"user_name":"Clany","can_delete":false,"product_type":"c3","uid":1238495,"ip_address":"","ucode":"1C4B6321172D87","user_header":"https://static001.geekbang.org/account/avatar/00/12/e5/df/ae7f8e00.jpg","comment_is_top":false,"comment_ctime":1554696416,"is_pvip":false,"replies":[{"id":30383,"content":"当你的buffered chan满的时候生产者放不进东西一样阻塞，但是你要注意你的接受者是主协程，而你的生产者是其他协程，所以不管生产者协程是否被阻塞，主要外部主协程退出，就会整合都推出了\n","user_name":"作者回复","user_name_real":"ChaoCai2010","uid":1008262,"ctime":1554816702,"ip_address":"","comment_id":83676,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100024001,"comment_content":"老师，我往channel里面放的生产的数量，比如初始化i:=5，然后消费哪里还是j:=0，生产的不够消费就会阻塞，出现死锁情况。channel信道的输入输出一般是 成对 出现的，如果不成对那边就会出现死锁的情况。但是我如果反过来，生产大于消费，它不会阻塞，这种情况怎么理解呢？\nfunc AllResponse() string {\n\tnumOfRunner := 10\n\tch := make(chan string, numOfRunner)\n\tfor i := 5; i &lt; numOfRunner; i++ {\n\t\tgo func(i int) {\n\t\t\tret := runTask(i)\n\t\t\tch &lt;- ret\n\t\t}(i)\n\t}\n\tfinalRet := &quot;&quot;\n\tfor j := 0; j &lt; numOfRunner; j++ {\n\t\tfinalRet += &lt;-ch + &quot;\\n&quot;\n\t}\n\treturn finalRet\n}\n\n报错：fatal error: all goroutines are asleep - deadlock!","like_count":0,"discussions":[{"author":{"id":1008262,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/62/86/632ad029.jpg","nickname":"蔡超","note":"","ucode":"4C281BBF511238","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":446123,"discussion_content":"当你的buffered chan满的时候生产者放不进东西一样阻塞，但是你要注意你的接受者是主协程，而你的生产者是其他协程，所以不管生产者协程是否被阻塞，主要外部主协程退出，就会整合都推出了\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1554816702,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":82481,"user_name":"NIXUS","can_delete":false,"product_type":"c3","uid":1000060,"ip_address":"","ucode":"853763C229A5AA","user_header":"https://static001.geekbang.org/account/avatar/00/0f/42/7c/8ef14715.jpg","comment_is_top":false,"comment_ctime":1554220728,"is_pvip":false,"replies":[{"id":30032,"content":"1. 你的wg.Add(1)要放在子线程的外面。你可以再仔细看看课程里的代码。\n2. 实际上你没有必要用wait group，利用chan的阻塞就不会推出，只有channel关闭时才会break循环\n3. 代码里没看见close啊","user_name":"作者回复","user_name_real":"ChaoCai2010","uid":1008262,"ctime":1554460873,"ip_address":"","comment_id":82481,"utype":1}],"discussion_count":2,"race_medal":0,"score":2,"product_id":100024001,"comment_content":"老师, 我又去看了close和广播的那节课, 然后改了下代码, 但是这个并不是安全的, 偶尔会有致命错误(fatal error: all goroutines are asleep - deadlock!), 希望老师能够指点一下, 是哪里需要调整, 谢谢您了! 麻烦您指点一下\nvar wg sync.WaitGroup\n\nfunc AllResponse() string {\n\tnumOfRunner := 10\n\tch := make(chan string, numOfRunner)\n\tfor i := 0; i &lt; 10; i++ {\n\t\tgo func(i int) {\n\t\t\twg.Add(1)\n\t\t\tch &lt;- runTask(i)\n\t\t}(i)\n\t}\n\n\tfinalStr := &quot;&quot;\n\t&#47;&#47; for i := 0; i &lt; numOfRunner; i++ {\n\t&#47;&#47; \tfinalStr += &lt;-ch + &quot;\\n&quot;\n\t&#47;&#47; }\n\tgo func() {\n\t\tfor {\n\t\t\tif v, ok := &lt;-ch; ok {\n\t\t\t\tfmt.Println(v, ok)\n\t\t\t\tfinalStr += v + &quot;\\n&quot;\n\t\t\t} else {\n\t\t\t\tbreak\n\t\t\t}\n\t\t}\n\t\twg.Done()\n\t}()\n\n\twg.Wait()\n\n\treturn finalStr\n}\n\nfunc TestAllResponse(t *testing.T) {\n\tfmt.Print(AllResponse())\n\ttime.Sleep(time.Second)\n}\n","like_count":0,"discussions":[{"author":{"id":1008262,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/62/86/632ad029.jpg","nickname":"蔡超","note":"","ucode":"4C281BBF511238","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":445608,"discussion_content":"1. 你的wg.Add(1)要放在子线程的外面。你可以再仔细看看课程里的代码。\n2. 实际上你没有必要用wait group，利用chan的阻塞就不会推出，只有channel关闭时才会break循环\n3. 代码里没看见close啊","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1554460873,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1332406,"avatar":"https://static001.geekbang.org/account/avatar/00/14/54/b6/c68c0c39.jpg","nickname":"whg","note":"","ucode":"E4A000C80F9FC7","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":173369,"discussion_content":"不知道这样写 行不行\n\nfunc AllResponse() string {\n\tvar sendWg sync.WaitGroup\n\tvar recvWg sync.WaitGroup\n\tvar retStr string\n\tnumOfRunner := 10\n\tch := make(chan string, numOfRunner)\n\trecvWg.Add(1)\n\tgo func() {\n\t\tdefer recvWg.Done()\n\t\tfor v := range ch {\n\t\t\tretStr += v + &#34;\\n&#34;\n\t\t}\n\t}()\n\tfor i := 0; i < numOfRunner; i++ {\n\t\tsendWg.Add(1)\n\t\tgo func(i int) {\n\t\t\tdefer sendWg.Done()\n\t\t\tret := task(i)\n\t\t\tch <- ret\n\t\t}(i)\n\t}\n\tsendWg.Wait() // 等待所有的发送都结束, 然后关闭close\n\tclose(ch)\n\trecvWg.Wait() // 等待接收完成, 然后返回数据\n\treturn retStr\n}","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1581850607,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":281855,"user_name":"八宝","can_delete":false,"product_type":"c3","uid":1324501,"ip_address":"","ucode":"89D991A930FDEA","user_header":"https://static001.geekbang.org/account/avatar/00/14/35/d5/17833946.jpg","comment_is_top":false,"comment_ctime":1614927818,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":1,"score":2,"product_id":100024001,"comment_content":"方案1 golang的 CSP模型(独有)，goroutine + channel; 方案2 sync.WaitGroup, 和Java的 CountDonwLatch 类似。\n补充方案2 sync.WaitGroup代码\nfunc RunTask(i int) string {\n\ttime.Sleep(time.Millisecond * 10)\n\treturn fmt.Sprintf(&quot;return form %d&quot;, i)\n}\nfunc TestWaitAllResponseDone(t *testing.T) {\n\tnumOfRunner := 10\n\tvar wg sync.WaitGroup\n\tstrSlice := make([]string, numOfRunner)  &#47;&#47;这里 length 和 capacity 都是 10，接收返回值\n\tfor i := 0; i &lt; numOfRunner; i++ {\n\t\twg.Add(1)\n\t\tgo func(i int) {\n\t\t\tstrSlice[i] = RunTask(i)  &#47;&#47;通过i 保证每个协程修改的地方独立，thread-safe\n\t\t\twg.Done()\n\t\t}(i)\n\t}\n\n\twg.Wait()\n\tfmt.Println(&quot;all result:\\n&quot;, strings.Join(strSlice, &quot;,\\n&quot;))  &#47;&#47; 使用 12讲 strings的Join函数\n\tfmt.Print(len(strSlice), cap(strSlice)) &#47;&#47;验证 切片的长度和容量\n}","like_count":3},{"had_liked":false,"id":234823,"user_name":"郭星","can_delete":false,"product_type":"c3","uid":1182219,"ip_address":"","ucode":"8A0F5DF80E0C61","user_header":"https://static001.geekbang.org/account/avatar/00/12/0a/0b/985d3800.jpg","comment_is_top":false,"comment_ctime":1594804869,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":2,"product_id":100024001,"comment_content":"&#47;&#47; 实现所有任务返回且关闭channel\nfunc AllResponse() string {\n\tnumOfRoutine := 10\n\tch := make(chan string, numOfRoutine)\n\tfor i := 0; i &lt; numOfRoutine; i++ {\n\t\tgo func(i int) {\n\t\t\tch &lt;- fmt.Sprintf(&quot;The result is from %d&quot;, i)\n\t\t}(i)\n\t}\n\ttotalResult := &quot;&quot;\n\tfor i := 0; i &lt; numOfRoutine; i++ {\n\t\t&#47;&#47; 阻塞式获取channel中的所有消息\n\t\ttotalResult += &lt;-ch + &quot;\\n&quot;\n\t}\n\t&#47;&#47; 关闭channel\n\tclose(ch)\n\treturn totalResult\n}\n\nfunc AllResponseWithRange() string {\n\tnumOfRoutine := 10\n\tvar wg sync.WaitGroup\n\tch := make(chan string, numOfRoutine)\n\tfor i := 0; i &lt; numOfRoutine; i++ {\n\t\twg.Add(1)\n\t\tgo func(i int) {\n\t\t\tch &lt;- fmt.Sprintf(&quot;The result is from %d&quot;, i)\n\t\t\twg.Done()\n\t\t}(i)\n\t}\n\twg.Wait()\n\t&#47;&#47; 关闭channel\n\tclose(ch)\n\ttotalResult := &quot;&quot;\n\tfor v := range ch{\n\t\ttotalResult += v + &quot;\\n&quot;\n\t}\n\n\treturn totalResult\n}\n\nfunc TestGetAllResponse(t *testing.T) {\n\t&#47;&#47;t.Log(AllResponse())\n\tt.Log(AllResponseWithRange())\n}","like_count":1},{"had_liked":false,"id":82500,"user_name":"NIXUS","can_delete":false,"product_type":"c3","uid":1000060,"ip_address":"","ucode":"853763C229A5AA","user_header":"https://static001.geekbang.org/account/avatar/00/0f/42/7c/8ef14715.jpg","comment_is_top":false,"comment_ctime":1554225603,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":2,"product_id":100024001,"comment_content":"@橙子  看了对象池这节中, 蓝士钦老哥的留言, 突然就明白该怎么写了. 老师说的去看 27 | channel的关闭和广播 这节也是有涉及这些内容, 只是一下子没找到重点(或者说关键点)在哪儿, 看完之后, 还是很懵, 一头雾水. 代码如下:\nvar wg sync.WaitGroup\n\nfunc AllResponse() string {\n\tnumOfRunner := 10\n\tch := make(chan string, numOfRunner)\n\tfor i := 0; i &lt; 10; i++ {\n\t\twg.Add(1)\n\t\tgo func(i int) {\n\t\t\tch &lt;- runTask(i)\n\t\t\twg.Done()\n\t\t}(i)\n\t}\n\n\tfinalStr := &quot;&quot;\n\t&#47;&#47; for i := 0; i &lt; numOfRunner; i++ {\n\t&#47;&#47; \tfinalStr += &lt;-ch + &quot;\\n&quot;\n\t&#47;&#47; }\n\tgo func() {\n\t\tfor {\n\t\t\tif v, ok := &lt;-ch; ok {\n\t\t\t\tfinalStr += v + &quot;\\n&quot;\n\t\t\t} else {\n\t\t\t\tbreak\n\t\t\t}\n\t\t}\n\t}()\n\n\twg.Wait()\n\n\treturn finalStr\n}\n\nfunc TestAllResponse(t *testing.T) {\n\tfmt.Print(AllResponse())\n}\n","like_count":0},{"had_liked":false,"id":79844,"user_name":"Gojustforfun","can_delete":false,"product_type":"c3","uid":1187021,"ip_address":"","ucode":"7513A40F27344F","user_header":"https://static001.geekbang.org/account/avatar/00/12/1c/cd/8d552516.jpg","comment_is_top":false,"comment_ctime":1553563262,"is_pvip":true,"replies":null,"discussion_count":0,"race_medal":0,"score":3,"product_id":100024001,"comment_content":"1：45“aggregation（聚合，聚集）“","like_count":0}]}