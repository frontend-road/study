{"id":605169,"title":"30｜内置数据类型参考：如何使用官方文档与帮助？","content":"<p><strong>课后习题</strong><br>\n在学习 Python 的过程中，发现一条以前没有学习过的语句：</p><pre><code>it = iter( [ 1, 2, 3, 4 ] )\n</code></pre><p>请结合<a href=\"https://docs.python.org/zh-cn/3.10/library/stdtypes.html#iterator-types\">官方文档</a>，判断 it 对象是否为迭代器类型。</p><p><strong>课程代码、课件及其他相关资料地址</strong><br>\n<a href=\"https://gitee.com/wilsonyin/zero-basics-python\">https://gitee.com/wilsonyin/zero-basics-python</a></p>","comments":[{"had_liked":false,"id":384298,"user_name":"依托答辩","can_delete":false,"product_type":"c3","uid":2383299,"ip_address":"上海","ucode":"4BE79E8A030813","user_header":"https://static001.geekbang.org/account/avatar/00/24/5d/c3/b8bb888c.jpg","comment_is_top":false,"comment_ctime":1700640815,"is_pvip":false,"replies":null,"discussion_count":1,"race_medal":0,"score":2,"product_id":100310001,"comment_content":"是，但是我是直接百度搜的，官方文档好难看懂","like_count":1,"discussions":[{"author":{"id":3916508,"avatar":"https://static001.geekbang.org/account/avatar/00/3b/c2/dc/a6d03b6d.jpg","nickname":"Leo = 6|Yi|天","note":"","ucode":"7F1C7A74255FE9","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":652553,"discussion_content":"官方文档虽然准确 但是初学者很难看懂 可以遇到不懂得地方问ai或者百度","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1729139122,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"加拿大","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":384145,"user_name":"L","can_delete":false,"product_type":"c3","uid":1228268,"ip_address":"上海","ucode":"26BB686671F7D4","user_header":"https://static001.geekbang.org/account/avatar/00/12/bd/ec/cc7abf0b.jpg","comment_is_top":false,"comment_ctime":1700402955,"is_pvip":true,"replies":null,"discussion_count":2,"race_medal":0,"score":2,"product_id":100310001,"comment_content":"感觉现在有了AI以后，大家会越来越注重思路而减少语法了的学习，很多的语法都可以直接用Ai写出来了","like_count":1,"discussions":[{"author":{"id":3916508,"avatar":"https://static001.geekbang.org/account/avatar/00/3b/c2/dc/a6d03b6d.jpg","nickname":"Leo = 6|Yi|天","note":"","ucode":"7F1C7A74255FE9","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":652552,"discussion_content":"确实如此 但是AI不一定对 所以还是需要人来验证 有些地方AI做不出来也需要手动做 ai就像是一个扫地机器人 虽然强大 但是角落还是要用扫把扫\nai还有一个很大的好处 可以教我们 比如基础很薄弱的时候文档看不懂 可以让ai用简单的语言解释一下文档","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1729139076,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"加拿大","group_id":0},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":3732169,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/WaoJzYaQHicuvl3jUxty2SgV7UBNmCw0V6dciaXQL06fghSVeRba98eZhQxxYqcxudDjKTiaPeHc1UVMOj75ppPSnsZbJh6gCBicKVUlUudnz9E/132","nickname":"Geek_929ad1","note":"","ucode":"32EBD25CC3E9EB","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":3916508,"avatar":"https://static001.geekbang.org/account/avatar/00/3b/c2/dc/a6d03b6d.jpg","nickname":"Leo = 6|Yi|天","note":"","ucode":"7F1C7A74255FE9","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":654196,"discussion_content":"还有就是最新的方法肯定在文档，所以可以通过AI来写代码举例子来更好的理解文档中的内容","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1732157155,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":652552,"ip_address":"美国","group_id":0},"score":654196,"extra":""}]}]},{"had_liked":false,"id":363336,"user_name":"xinn","can_delete":false,"product_type":"c3","uid":2809426,"ip_address":"陕西","ucode":"4F1F78839D3C9B","user_header":"https://static001.geekbang.org/account/avatar/00/2a/de/52/816a6bc3.jpg","comment_is_top":false,"comment_ctime":1669547636,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":2,"product_id":100310001,"comment_content":"it = iter( [ 1, 2, 3, 4 ] )\ntype(it)\n&gt;&gt;list_iterator","like_count":1},{"had_liked":false,"id":384700,"user_name":"Geek_1e9b5c","can_delete":false,"product_type":"c3","uid":3786954,"ip_address":"广东","ucode":"C634A7C49DFE9B","user_header":"","comment_is_top":false,"comment_ctime":1701348932,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":2,"product_id":100310001,"comment_content":"it = iter( [ 1, 2, 3, 4 ] )\nprint(it) # list_iterator\n\npython 内置函数 iter()\nhttps:&#47;&#47;docs.python.org&#47;zh-cn&#47;3.11&#47;library&#47;functions.html?highlight=iter#iter\n\niter(object)\niter(object, sentinel)\n返回一个 iterator 对象。 根据是否存在第二个参数对第一个参数的解读是非常不同的。 如果没有第二个参数，object 必须是一个支持 iterable 协议 (有 __iter__() 方法) 的多项集对象，或必须支持序列协议 (有 __getitem__() 方法并使用从 0 开始的数字参数)。 如果它不支持这些协议，则会引发 TypeError。 如果给出了第二个参数 sentinel，则 object 必须是一个可调用对象。 在这种情况下创建的迭代器将针对每次调用其 __next__() 方法不带参数地调用 object；如果返回的值等于 sentinel，则会引发 StopIteration，否则将返回该值。\n\n另请参阅 迭代器类型。","like_count":0},{"had_liked":false,"id":379457,"user_name":"好困啊","can_delete":false,"product_type":"c3","uid":2094450,"ip_address":"上海","ucode":"D49429660F2DC8","user_header":"https://static001.geekbang.org/account/avatar/00/1f/f5/72/8cbc5cb3.jpg","comment_is_top":false,"comment_ctime":1691992757,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":2,"product_id":100310001,"comment_content":"要检查 it 对象是否具有这两个方法（__iter__() 和 __next__()），我们可以使用 Python 的 hasattr() 函数。这个函数接受两个参数：一个对象和一个字符串（代表要检查的属性名），如果对象有该属性，则返回 True，否则返回 False。\nhas_iter_method = hasattr(it, &quot;__iter__&quot;)\nhas_next_method = hasattr(it, &quot;__next__&quot;)\nprint(has_iter_method)\nprint(has_next_method)","like_count":0},{"had_liked":false,"id":376796,"user_name":"王二木","can_delete":false,"product_type":"c3","uid":1634882,"ip_address":"浙江","ucode":"A99837F8B61C8F","user_header":"https://static001.geekbang.org/account/avatar/00/18/f2/42/ce60ebd7.jpg","comment_is_top":false,"comment_ctime":1687423368,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":2,"product_id":100310001,"comment_content":"官方文档链接：https:&#47;&#47;docs.python.org&#47;zh-cn&#47;3.10&#47;library&#47;stdtypes.html#iterator-types\nPython 支持在容器中进行迭代的概念。 这是通过使用两个单独方法来实现的；它们被用于允许用户自定义类对迭代的支持。 将在下文中详细描述的序列总是支持迭代方法。\n容器对象要提供 iterable 支持，必须定义一个方法:\niterator.__iter__()\n返回 iterator 对象本身。 这是同时允许容器和迭代器配合 for 和 in 语句使用所必须的。 此方法对应于 Python&#47;C API 中 Python 对象类型结构体的 tp_iter 槽位。","like_count":0},{"had_liked":false,"id":376795,"user_name":"王二木","can_delete":false,"product_type":"c3","uid":1634882,"ip_address":"浙江","ucode":"A99837F8B61C8F","user_header":"https://static001.geekbang.org/account/avatar/00/18/f2/42/ce60ebd7.jpg","comment_is_top":false,"comment_ctime":1687423308,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":2,"product_id":100310001,"comment_content":"https:&#47;&#47;docs.python.org&#47;zh-cn&#47;3.10&#47;library&#47;stdtypes.html#iterator-types\nPython 支持在容器中进行迭代的概念。 这是通过使用两个单独方法来实现的；它们被用于允许用户自定义类对迭代的支持。 将在下文中详细描述的序列总是支持迭代方法。\n容器对象要提供 iterable 支持，必须定义一个方法:\niterator.__iter__()\n返回 iterator 对象本身。 这是同时允许容器和迭代器配合 for 和 in 语句使用所必须的。 此方法对应于 Python&#47;C API 中 Python 对象类型结构体的 tp_iter 槽位。","like_count":0},{"had_liked":false,"id":366712,"user_name":"yanyu-xin","can_delete":false,"product_type":"c3","uid":1899757,"ip_address":"广东","ucode":"3AA389F9E4C236","user_header":"","comment_is_top":false,"comment_ctime":1674096861,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":2,"product_id":100310001,"comment_content":"根据官方文档（https:&#47;&#47;docs.python.org&#47;zh-cn&#47;3.10&#47;library&#47;stdtypes.html#iterator-types），迭代器类型定义。 [ 1, 2, 3, 4 ] 为序列类型的容器，通过_iter_()方法，返回 it 属于iteraror迭代器对象。","like_count":0}]}