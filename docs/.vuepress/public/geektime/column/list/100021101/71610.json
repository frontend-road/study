{"id":71610,"title":"04 | 内存优化（下）：内存优化这件事，应该从哪里着手？","content":"<p>在掌握内存相关的背景知识后，下一步你肯定想着手开始优化内存的问题了。不过在真正开始做内存优化之前，需要先评估内存对应用性能的影响，我们可以通过崩溃中“异常退出” 和OOM的比例进行评估。另一方面，低内存设备更容易出现内存不足引起的异常和卡顿，我们也可以通过查看应用中用户的手机内存在2GB以下所占的比例来评估。</p><p>所以在优化前要先定好自己的目标，这一点非常关键。比如针对512MB的设备和针对2GB以上的设备，完全是两种不同的优化思路。如果我们面向东南亚、非洲用户，那对内存优化的标准就要变得更苛刻一些。</p><p>铺垫了这么多，下面我们就来看看内存优化都有哪些方法吧。</p><h2>内存优化探讨</h2><p>那要进行内存优化，应该从哪里着手呢？我通常会从设备分级、Bitmap优化和内存泄漏这三个方面入手。</p><p><strong>1. 设备分级</strong></p><p>相信你肯定遇到过，同一个应用在4GB内存的手机运行得非常流畅，但在1GB内存的手机就不一定可以做到，而且在系统空闲和繁忙的时候表现也不太一样。</p><p><strong>内存优化首先需要根据设备环境来综合考虑</strong>，专栏上一期我提到过很多同学陷入的一个误区：“内存占用越少越好”。其实我们可以让高端设备使用更多的内存，做到针对设备性能的好坏使用不同的内存分配和回收策略。</p><!-- [[[read_end]]] --><p>当然这需要有一个良好的架构设计支撑，在架构设计时需要做到以下几点。</p><ul>\n<li>设备分级。使用类似device-year-class的策略对设备分级，对于低端机用户可以关闭复杂的动画，或者是某些功能；使用565格式的图片，使用更小的缓存内存等。在现实环境下，不是每个用户的设备都跟我们的测试机一样高端，在开发过程我们要学会思考功能要不要对低端机开启、在系统资源吃紧的时候能不能做降级。</li>\n</ul><p>下面我举一个例子。我们知道device-year-class会根据手机的内存、CPU核心数和频率等信息决定设备属于哪一个年份，这个示例表示对于2013年之后的设备可以使用复杂的动画，对于2010年之前的低端设备则不添加任何动画。</p><pre><code>if (year &gt;= 2013) {\n    // Do advanced animation\n} else if (year &gt;= 2010) {\n    // Do simple animation\n} else {\n    // Phone too slow, don't do any animations\n}\n</code></pre><ul>\n<li>\n<p>缓存管理。我们需要有一套统一的缓存管理机制，可以适当地使用内存；当“系统有难”时，也要义不容辞地归还。我们可以使用OnTrimMemory回调，根据不同的状态决定释放多少内存。对于大项目来说，可能存在几十上百个模块，统一缓存管理可以更好地监控每个模块的缓存大小。</p>\n</li>\n<li>\n<p><strong>进程模型</strong>。一个空的进程也会占用10MB的内存，而有些应用启动就有十几个进程，甚至有些应用已经从双进程保活升级到四进程保活，所以减少应用启动的进程数、减少常驻进程、有节操的保活，对低端机内存优化非常重要。</p>\n</li>\n<li>\n<p>安装包大小。安装包中的代码、资源、图片以及so库的体积，跟它们占用的内存有很大的关系。一个80MB的应用很难在512MB内存的手机上流畅运行。这种情况我们需要考虑针对低端机用户推出4MB的轻量版本，例如Facebook Lite、今日头条极速版都是这个思路。</p>\n</li>\n</ul><p>安装包中的代码、图片、资源以及so库的大小跟内存究竟有哪些关系？你可以参考下面的这个表格。</p><p><img src=\"https://static001.geekbang.org/resource/image/0b/a9/0bbcbc6862d0d5f86b8e42d25231b5a9.png?wh=633*227\" alt=\"\"></p><p><strong>2. Bitmap优化</strong></p><p>Bitmap内存一般占应用总内存很大一部分，所以做内存优化永远无法避开图片内存这个“永恒主题”。</p><p>即使把所有的Bitmap都放到Native内存，并不代表图片内存问题就完全解决了，这样做只是提升了系统内存利用率，减少了GC带来的一些问题而已。</p><p>那我们回过头来看看，到底该如何优化图片内存呢？我给你介绍两种方法。</p><p><strong>方法一，统一图片库。</strong></p><p>图片内存优化的前提是收拢图片的调用，这样我们可以做整体的控制策略。例如低端机使用565格式、更加严格的缩放算法，可以使用Glide、Fresco或者采取自研都可以。而且需要进一步将所有Bitmap.createBitmap、BitmapFactory相关的接口也一并收拢。</p><p><strong>方法二，统一监控。</strong></p><p>在统一图片库后就非常容易监控Bitmap的使用情况了，这里主要有三点需要注意。</p><ul>\n<li>\n<p>大图片监控。我们需要注意某张图片内存占用是否过大，例如长宽远远大于View甚至是屏幕的长宽。在开发过程中，如果检测到不合规的图片使用，应该立即弹出对话框提示图片所在的Activity和堆栈，让开发同学更快发现并解决问题。在灰度和线上环境下可以将异常信息上报到后台，我们可以计算有多少比例的图片会超过屏幕的大小，也就是图片的<strong>“超宽率”</strong>。</p>\n</li>\n<li>\n<p>重复图片监控。重复图片指的是Bitmap的像素数据完全一致，但是有多个不同的对象存在。这个监控不需要太多的样本量，一般只在内部使用。<strong>之前我实现过一个内存Hprof的分析工具，它可以自动将重复Bitmap的图片和引用链输出</strong>。下图是一个简单的例子，你可以看到两张图片的内容完全一样，通过解决这张重复图片可以节省1MB内存。</p>\n</li>\n</ul><p><img src=\"https://static001.geekbang.org/resource/image/bb/ae/bbeb46e2a974f2cdf7fb3b8fdbf5afae.png?wh=1608*866\" alt=\"\"></p><ul>\n<li>图片总内存。通过收拢图片使用，我们还可以统计应用所有图片占用的内存，这样在线上就可以按不同的系统、屏幕分辨率等维度去分析图片内存的占用情况。<strong>在OOM崩溃的时候，也可以把图片占用的总内存、Top N图片的内存都写到崩溃日志中，帮助我们排查问题</strong>。</li>\n</ul><p>讲完设备分级和Bitmap优化，我们发现架构和监控需要两手抓，一个好的架构可以减少甚至避免我们犯错，而一个好的监控可以帮助我们及时发现问题。</p><p><strong>3. 内存泄漏</strong></p><p>内存泄漏简单来说就是没有回收不再使用的内存，排查和解决内存泄漏也是内存优化无法避开的工作之一。</p><p>内存泄漏主要分两种情况，一种是同一个对象泄漏，还有一种情况更加糟糕，就是每次都会泄漏新的对象，可能会出现几百上千个无用的对象。</p><p>很多内存泄漏都是框架设计不合理所导致，各种各样的单例满天飞，MVC中Controller的生命周期远远大于View。优秀的框架设计可以减少甚至避免程序员犯错，当然这不是一件容易的事情，所以我们还需要对内存泄漏建立持续的监控。</p><ul>\n<li><strong>Java内存泄漏</strong>。建立类似LeakCanary自动化检测方案，至少做到Activity和Fragment的泄漏检测。在开发过程，我们希望出现泄漏时可以弹出对话框，让开发者更加容易去发现和解决问题。内存泄漏监控放到线上并不容易，我们可以对生成的Hprof内存快照文件做一些优化，裁剪大部分图片对应的byte数组减少文件大小。<strong>比如一个100MB的文件裁剪后一般只剩下30MB左右，使用7zip压缩最后小于10MB，增加了文件上传的成功率</strong>。</li>\n</ul><p><img src=\"https://static001.geekbang.org/resource/image/3d/85/3d917345c8c8462f8a419568c7d73085.png?wh=389*540\" alt=\"\"></p><ul>\n<li>\n<p><strong>OOM监控</strong>。美团有一个Android内存泄露自动化链路分析组件<a href=\"http://ppt.geekbang.org/slide/download/876/593bc30c21689.pdf/19\">Probe</a>，它在发生OOM的时候生成Hprof内存快照，然后通过单独进程对这个文件做进一步的分析。不过在线上使用这个工具风险还是比较大，在崩溃的时候生成内存快照<strong>有可能会导致二次崩溃</strong>，而且部分手机生成Hprof快照可能会耗时几分钟，这对用户造成的体验影响会比较大。另外，部分OOM是因为虚拟内存不足导致，这块需要具体问题具体分析。</p>\n</li>\n<li>\n<p><strong>Native内存泄漏监控</strong>。上一期我讲到Malloc调试（Malloc Debug）和Malloc钩子（Malloc Hook）似乎还不是那么稳定。在WeMobileDev最近的一篇文章<a href=\"http://mp.weixin.qq.com/s/KtGfi5th-4YHOZsEmTOsjg\">《微信Android终端内存优化实践》</a>中，微信也做了一些其他方案上面的尝试。</p>\n</li>\n<li>\n<p><strong>针对无法重编so的情况</strong>，使用了PLT Hook拦截库的内存分配函数，其中PLT Hook是Native Hook的一种方案，后面我们还会讲到。然后重定向到我们自己的实现后记录分配的内存地址、大小、来源so库路径等信息，定期扫描分配与释放是否配对，对于不配对的分配输出我们记录的信息。</p>\n</li>\n<li>\n<p><strong>针对可重编的so情况</strong>，通过GCC的“-finstrument-functions”参数给所有函数插桩，桩中模拟调用栈入栈出栈操作；通过ld的“–wrap”参数拦截内存分配和释放函数，重定向到我们自己的实现后记录分配的内存地址、大小、来源so以及插桩记录的调用栈此刻的内容，定期扫描分配与释放是否配对，对于不配对的分配输出我们记录的信息。</p>\n</li>\n</ul><p>开发过程中内存泄漏排查可以使用Androd Profiler和MAT工具配合使用，而日常监控关键是成体系化，做到及时发现问题。</p><p>坦白地说，除了Java泄漏检测方案，目前OOM监控和Native内存泄漏监控都只能做到实验室自动化测试的水平。微信的Native监控方案也遇到一些兼容性的问题，如果想达到灰度和线上部署，需要考虑的细节会非常多。Native内存泄漏检测在iOS会简单一些，不过Google也在一直优化Native内存泄漏检测的性能和易用性，相信在未来的Android版本将会有很大改善。</p><h2>内存监控</h2><p>前面我也提了内存泄漏的监控存在一些性能的问题，一般只会对内部人员和极少部分的用户开启。在线上我们需要通过其他更有效的方式去监控内存相关的问题。</p><p><strong>1. 采集方式</strong></p><p>用户在前台的时候，可以每5分钟采集一次PSS、Java堆、图片总内存。我建议通过采样只统计部分用户，需要注意的是要按照用户抽样，而不是按次抽样。简单来说一个用户如果命中采集，那么在一天内都要持续采集数据。</p><p><strong>2. 计算指标</strong></p><p>通过上面的数据，我们可以计算下面一些内存指标。</p><p><strong>内存异常率</strong>：可以反映内存占用的异常情况，如果出现新的内存使用不当或内存泄漏的场景，这个指标会有所上涨。其中PSS的值可以通过Debug.MemoryInfo拿到。</p><pre><code>内存 UV 异常率 = PSS 超过 400MB 的 UV / 采集 UV\n</code></pre><p><strong>触顶率</strong>：可以反映Java内存的使用情况，如果超过85%最大堆限制，GC会变得更加频繁，容易造成OOM和卡顿。</p><pre><code>内存 UV 触顶率 = Java 堆占用超过最大堆限制的 85% 的 UV / 采集 UV\n</code></pre><p>其中是否触顶可以通过下面的方法计算得到。</p><pre><code>long javaMax = runtime.maxMemory();\nlong javaTotal = runtime.totalMemory();\nlong javaUsed = javaTotal - runtime.freeMemory();\n// Java 内存使用超过最大限制的 85%\nfloat proportion = (float) javaUsed / javaMax;\n</code></pre><p>一般客户端只上报数据，所有计算都在后台处理，这样可以做到灵活多变。后台还可以计算平均PSS、平均Java内存、<strong>平均图片占用</strong>这些指标，它们可以反映内存的平均情况。通过平均内存和分区间内存占用这些指标，我们可以通过版本对比来监控有没有新增内存相关的问题。</p><p><img src=\"https://static001.geekbang.org/resource/image/65/ec/65e0b02933c1f7fe181b83d69587e7ec.jpg?wh=1183*737\" alt=\"\"></p><p>因为上报了前台时间，我们还可以按照时间维度看应用内存的变化曲线。比如可以观察一下我们的应用是不是真正做到了<strong>“用时分配，及时释放”</strong>。如果需要，我们还可以实现按照场景来对比内存的占用。</p><p><strong>3. GC监控</strong></p><p>在实验室或者内部试用环境，我们也可以通过Debug.startAllocCounting来监控Java内存分配和GC的情况，需要注意的是这个选项对性能有一定的影响，虽然目前还可以使用，但已经被Android标记为deprecated。</p><p>通过监控，我们可以拿到内存分配的次数和大小，以及GC发起次数等信息。</p><pre><code>long allocCount = Debug.getGlobalAllocCount();\nlong allocSize = Debug.getGlobalAllocSize();\nlong gcCount = Debug.getGlobalGcInvocationCount();\n</code></pre><p>上面的这些信息似乎不太容易定位问题，在Android 6.0之后系统可以拿到更加精准的GC信息。</p><pre><code>﻿﻿// 运行的GC次数\nDebug.getRuntimeStat(&quot;art.gc.gc-count&quot;);\n// GC使用的总耗时，单位是毫秒\nDebug.getRuntimeStat(&quot;art.gc.gc-time&quot;);\n// 阻塞式GC的次数\nDebug.getRuntimeStat(&quot;art.gc.blocking-gc-count&quot;);\n// 阻塞式GC的总耗时\nDebug.getRuntimeStat(&quot;art.gc.blocking-gc-time&quot;);\n</code></pre><p>需要特别注意阻塞式GC的次数和耗时，因为它会暂停应用线程，可能导致应用发生卡顿。我们也可以更加细粒度地分应用场景统计，例如启动、进入朋友圈、进入聊天页面等关键场景。</p><h2>总结</h2><p>在具体进行内容优化前，我们首先要问清楚自己几个问题，比如我们要优化到什么目标、内存对我们造成了多少异常和卡顿。只有在明确了应用的现状和优化目标后，我们才能去进行下一步的操作。</p><p>在探讨了内存优化的思路时，针对不同的设备、设备不同的情况，我们希望可以给用户不同的体验。这里我主要讲到了关于Bitmap内存优化和内存泄漏排查、监控的一些方法。最后我提到了怎样在线上监控内存的异常情况，通常内存异常率、触顶率这些指标对我们很有帮助。</p><p><strong>目前我们在Native泄漏分析上做的还不是那么完善，不过做优化工作的时候，我特别喜欢用演进的思路来看问题。用演进的思路来看，即使是Google， 在时机不成熟时也会做一些权衡和妥协。换到我们个人身上，等到时机成熟或者我们的能力达到了，就需要及时去还这些“技术债务”。</strong></p><h2>课后作业</h2><p>看完我分享的内存优化的方法后，相信你也肯定还有很多好的思路和方法，<span class=\"orange\">今天的课后作业是分享一下你的内存优化“必杀技”，在留言区分享一下今天学习、练习的收获与心得</span>。</p><p>在文中我提到Hprof文件裁剪和重复图片监控，这是很多应用目前都没有做的，而这两个功能也是微信的APM框架Matrix中内存监控的一部分。Matrix是我一年多前在微信负责的最后一个项目，也付出了不少心血，最近听说终于准备开源了。</p><p>那今天我们就先来练练手，尝试使用HAHA库快速判断内存中是否存在重复的图片，并且将这些重复图片的PNG、堆栈等信息输出。最终的实现可以通过向<a href=\"http://github.com/AndroidAdvanceWithGeektime/Chapter04\">Sample</a>发送Pull Request。</p><p>欢迎你点击“请朋友读”，把今天的内容分享给好友，邀请他一起学习。最后别忘了在评论区提交今天的作业，我也为认真完成作业的同学准备了丰厚的“<a href=\"http://time.geekbang.org/column/article/70250\">学习加油礼包</a>”，期待与你一起切磋进步哦。</p><p><img src=\"https://static001.geekbang.org/resource/image/24/c0/24c190870d71c3daa203a939d67358c0.jpg?wh=1110*549\" alt=\"\"><img src=\"https://static001.geekbang.org/resource/image/30/aa/306ef8892cc985a19fdd36534e7c5daa.png?wh=1110*110\" alt=\"\"></p>","neighbors":{"left":{"article_title":"03 | 内存优化（上）：4GB内存时代，再谈内存优化","id":71277},"right":{"article_title":"05 | 卡顿优化（上）：你要掌握的卡顿分析方法","id":71982}},"comments":[{"had_liked":false,"id":47998,"user_name":"孙鹏飞","can_delete":false,"product_type":"c1","uid":1171070,"ip_address":"","ucode":"18ADF5C2B78938","user_header":"https://static001.geekbang.org/account/avatar/00/11/de/7e/5c2b1efe.jpg","comment_is_top":true,"comment_ctime":1544291591,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"9.2233721629530993e+18","product_id":100021101,"comment_content":"看评论有部分同学对内存这两篇的内容主题提出了疑问，说是内存优化的主题关注内存监控的内容太多了。邵文同学已经在下面的评论里有部分回复了，我这里总结一下原因。首先我们并没有很直接的去给出很多优化的案例，比如评论里提到的hook gc来避免gc引起的memory churn的技术，或者常见的引起内存泄漏几种情况的解决、数据结构优化(arraymap等)，更换序列化方案，view复用，object pool等优化方法，也没有具体的去讲解内存相关的操作系统概念和Android虚拟机heap space的结构和allocator的执行原理，这些内容大部分网上有很多不错的帖子进行了很详细的讲解，而且限于篇幅我们把内容关注在我们经常遇到的问题上，就是我们如何去监控不当的内存使用，比如发生OOM或者短时间频繁的GC产生卡顿的时候，如果我们没有具体的内存监控信息是无法判断产生问题的原因，这也是我们在实际工作中遇到的问题，也是这两篇内容关注的点，如果同学有想了解的内容可以在留言里提出来，看大家具体对哪些文章里没有提到的内容感兴趣，可以讨论一下。","like_count":29,"discussions":[{"author":{"id":1014289,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/7a/11/abb7bfe3.jpg","nickname":"亮出","note":"","ucode":"A7673283D03656","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":301860,"discussion_content":"我过去的工作就涉及到性能监控优化，我对这样的课程安排很满意。更多是思路和方法分享。很贴合实际，基础概念和知识的文章网上很多，这个可以自己学习","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1598688275,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":48448,"user_name":"极客米","can_delete":false,"product_type":"c1","uid":1331610,"ip_address":"","ucode":"BF6E03CBE359BD","user_header":"https://static001.geekbang.org/account/avatar/00/14/51/9a/f9cf7b38.jpg","comment_is_top":false,"comment_ctime":1544446742,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"456810980118","product_id":100021101,"comment_content":"文哥，看了二楼和三楼的回答，感觉他们想表达的意思学习是一个循序渐进的过程，一上来就“跳级式”的领讲搞的大家很慌，因为毕竟大多数人的水平没这么高，很多人可能都是一脸懵逼的进来，一脸懵逼的出去。而你所说的有些网上都有很成熟的帖子或者文章，但是能在看这篇文章的时候去搜的又能有几个呢？我提个建议哈，就是开讲的过程中，如果需要打基础的知识，能不能贴个链接，引导式学习","like_count":106},{"had_liked":false,"id":47888,"user_name":"灰","can_delete":false,"product_type":"c1","uid":1329236,"ip_address":"","ucode":"58CDFF5442D333","user_header":"https://static001.geekbang.org/account/avatar/00/14/48/54/872fc401.jpg","comment_is_top":false,"comment_ctime":1544247809,"is_pvip":false,"replies":[{"id":"17065","content":"内存优化有两个部分，一个是架构，这里包括设备分级，缓存管理，进程管理与Bitmap图片库的策略。<br><br>另外监控的确是最重要的，因为大部分的内存问题，特别是内存泄露，oom。更多的时候难点不在于解决，而在于如何发现它们。","user_name":"作者回复","user_name_real":"张绍文","uid":"1009577","ctime":1544283085,"ip_address":"","comment_id":47888,"utype":1}],"discussion_count":1,"race_medal":0,"score":"121803332097","product_id":100021101,"comment_content":"内存优化的主题是监控？","like_count":28,"discussions":[{"author":{"id":1009577,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/67/a9/e251ace7.jpg","nickname":"张绍文","note":"","ucode":"94B49E5F80BFDE","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":431930,"discussion_content":"内存优化有两个部分，一个是架构，这里包括设备分级，缓存管理，进程管理与Bitmap图片库的策略。\n\n另外监控的确是最重要的，因为大部分的内存问题，特别是内存泄露，oom。更多的时候难点不在于解决，而在于如何发现它们。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1544283085,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":52267,"user_name":"[etartnecnoC]H","can_delete":false,"product_type":"c1","uid":1243555,"ip_address":"","ucode":"EA7E0DF5FFA07B","user_header":"https://static001.geekbang.org/account/avatar/00/12/f9/a3/5bbf0635.jpg","comment_is_top":false,"comment_ctime":1545356253,"is_pvip":false,"replies":[{"id":"18986","content":"非常感谢你的反馈，很好的意见，已和作者沟通调整。","user_name":"编辑回复","user_name_real":"李佳","uid":"1001204","ctime":1545357237,"ip_address":"","comment_id":52267,"utype":2}],"discussion_count":3,"race_medal":0,"score":"108919538653","product_id":100021101,"comment_content":"说下看了几篇文章的感受，可能确实是实力差距，看完后感觉实用性太差，都是讲的一些高大上的理论和市面上大部分公司都用不到的东西，没有一个循序渐进的过程或者引导，毕竟交钱来参加高手课的水平大部分都是菜鸟啊。楼上有个建议很好，讲这篇文章前先把一些用到的基础知识贴一下链接。看来真的是高手课，高到云端了，很难触及的那种。","like_count":25,"discussions":[{"author":{"id":1001204,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/46/f4/5e878cd4.jpg","nickname":"李佳","note":"","ucode":"082E7FCA4AE76D","race_medal":0,"user_type":4,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":433812,"discussion_content":"非常感谢你的反馈，很好的意见，已和作者沟通调整。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1545357237,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":4}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1879333,"avatar":"https://static001.geekbang.org/account/avatar/00/1c/ad/25/49548e54.jpg","nickname":"荒","note":"","ucode":"1CD921E478F844","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":356106,"discussion_content":"我觉得讲的很好，根本没到你说的那个难度，起码95%的内容都是可以消化的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1615533103,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1125986,"avatar":"https://static001.geekbang.org/account/avatar/00/11/2e/62/ea49480e.jpg","nickname":"Zain Zhu","note":"","ucode":"5402E6FF76333A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":268821,"discussion_content":"这个建议对菜鸟很友好啊","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1589818600,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":50294,"user_name":"csdpz","can_delete":false,"product_type":"c1","uid":1043243,"ip_address":"","ucode":"E3F9325059165F","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLlyJ6ricobic7OdzAUNkbNpdadtZ87ILUyibpcOb3eRicuHPrzLzefza7fdYS2iaBLseccsqeib8WLeKOg/132","comment_is_top":false,"comment_ctime":1544946627,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"96034227139","product_id":100021101,"comment_content":"如果看不懂，可以多看几遍，再不懂那可能是相关的知识储备不够了，建议再去补补基础，反正这课买了又不会跑，以后还能看。<br><br>与我而言，了解了大厂是如何细粒度的进行监控的，感受到了差距，得到了一点启发，收货满满","like_count":22},{"had_liked":false,"id":48292,"user_name":"0928","can_delete":false,"product_type":"c1","uid":1240990,"ip_address":"","ucode":"03221745CF8141","user_header":"https://static001.geekbang.org/account/avatar/00/12/ef/9e/78420b67.jpg","comment_is_top":false,"comment_ctime":1544412760,"is_pvip":false,"replies":[{"id":"17240","content":"怎么说呢，单从内存泄露可能就有各种各样的场景，不同应用情况也不一样。<br><br>在有限的边幅里面，我这边更加希望大家可以触达底层，这些问题的本质是怎么样？如何去发现它们，怎么样构造自己的测试体系。<br><br>当然后面也会考虑多加入一些参考链接","user_name":"作者回复","user_name_real":"张绍文","uid":"1009577","ctime":1544416422,"ip_address":"","comment_id":48292,"utype":1}],"discussion_count":1,"race_medal":0,"score":"57378987608","product_id":100021101,"comment_content":"感觉主题有一点跑偏，在监控内存泄露的前提下，应该从怎么防止内存泄露着手，我感觉会更实用，因为监控不是每个公司都涉及的，但是防止内存泄露应该是每个程序员应该必备的。我感觉可以多来一点实现思路和怎么预防泄露已经常见的一些泄露点。<br><br>虽然网上有很多帖子可看，但是有以下一些问题，零散、正确性、思路、如何验证等等问题，既然大家都来买课我想也是奔着课程的专业程度来的，所以我感觉作者在深入的同时也不要忘记一些实用的东西分享。及时是因为篇幅的问题，我感觉可以通过其他链接的方式引入。<br><br>拜托！","like_count":13,"discussions":[{"author":{"id":1009577,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/67/a9/e251ace7.jpg","nickname":"张绍文","note":"","ucode":"94B49E5F80BFDE","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":432108,"discussion_content":"怎么说呢，单从内存泄露可能就有各种各样的场景，不同应用情况也不一样。\n\n在有限的边幅里面，我这边更加希望大家可以触达底层，这些问题的本质是怎么样？如何去发现它们，怎么样构造自己的测试体系。\n\n当然后面也会考虑多加入一些参考链接","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1544416422,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":52639,"user_name":"Juinn","can_delete":false,"product_type":"c1","uid":1334226,"ip_address":"","ucode":"257796850A6CD9","user_header":"https://static001.geekbang.org/account/avatar/00/14/5b/d2/34a8c79c.jpg","comment_is_top":false,"comment_ctime":1545462692,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"35905201060","product_id":100021101,"comment_content":"我觉得shaowen老师讲的很好，总体思路和框架已经出来，剩下是自己补充技术细节了，这才是高手课。","like_count":8},{"had_liked":false,"id":47900,"user_name":"Seven","can_delete":false,"product_type":"c1","uid":1328562,"ip_address":"","ucode":"C1C68316449B57","user_header":"https://static001.geekbang.org/account/avatar/00/14/45/b2/ee0cfc12.jpg","comment_is_top":false,"comment_ctime":1544251195,"is_pvip":false,"replies":[{"id":"17066","content":"相似图片的确也有人搞过，但是是线下自动化时。<br><br>如果判断相似图片是非常成熟的算法，可以在网上搜到很多资料。","user_name":"作者回复","user_name_real":"张绍文","uid":"1009577","ctime":1544283178,"ip_address":"","comment_id":47900,"utype":1}],"discussion_count":1,"race_medal":0,"score":"35903989563","product_id":100021101,"comment_content":"平时在做图片优化的时候，主要用inSampleSize控制图片大小，将大图片调整到合适的大小，毕竟是google推荐的方案。<br><br>总结一下我今天学到的关于内存优化的东西<br>设备分级：根据设备的高级程度（综合考虑）使用最佳的实践方式；<br>控制进程数量（看到有节操的保活会心一笑）；<br>注意控制包大小；<br>图片优化：统一管理，统一监控；<br>重复图片：一个一个对比像素肯定不现实，比尺寸刷一波，再比像素，先取一个像素点，估计这一步就能刷掉很多不同的图片，然后在剩下的图片继续用这种方式（或者增加像素点），不知道可行性高不高（待定），应该有更好的方式；<br>内存泄漏：先第三方框架查漏，时机成熟后及时还“技术债务”；<br>内存监控：查找内存占有率，尽量做到“用完就走”，不占资源。<br><br>“技术债务”真是一个好词，平时一点一点的还肯定比遇到紧急情况加班加点的还要好的多。<br><br>抛个问题：相似图片是不是也应该丢弃，相识图片又要怎么判断呢？","like_count":8,"discussions":[{"author":{"id":1009577,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/67/a9/e251ace7.jpg","nickname":"张绍文","note":"","ucode":"94B49E5F80BFDE","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":431935,"discussion_content":"相似图片的确也有人搞过，但是是线下自动化时。\n\n如果判断相似图片是非常成熟的算法，可以在网上搜到很多资料。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1544283178,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":47831,"user_name":"jacob","can_delete":false,"product_type":"c1","uid":1340932,"ip_address":"","ucode":"CAD801A86C49B9","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/iagWXcgTEF36nmBo8am6xgPSjE1KZ8Tk1LrQlCg6icsnF9SJw0V7LomgcfAogfE1lNQm4U1tPeEoznibYia2ia0cnRg/132","comment_is_top":false,"comment_ctime":1544232082,"is_pvip":false,"replies":[{"id":"17063","content":"这个重复bitmap分析是在服务器后台做的，目前是对所有bitmap数组直接计算hash的方法匹对","user_name":"作者回复","user_name_real":"张绍文","uid":"1009577","ctime":1544282860,"ip_address":"","comment_id":47831,"utype":1}],"discussion_count":1,"race_medal":0,"score":"35903970450","product_id":100021101,"comment_content":"您好，如何确定是bitmap重复图片呢，遍历所有像素点比较吗，是不是太重了","like_count":8,"discussions":[{"author":{"id":1009577,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/67/a9/e251ace7.jpg","nickname":"张绍文","note":"","ucode":"94B49E5F80BFDE","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":431902,"discussion_content":"这个重复bitmap分析是在服务器后台做的，目前是对所有bitmap数组直接计算hash的方法匹对","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1544282860,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":48079,"user_name":"Victory","can_delete":false,"product_type":"c1","uid":1329958,"ip_address":"","ucode":"13183D043C9557","user_header":"https://static001.geekbang.org/account/avatar/00/14/4b/26/3bea96f9.jpg","comment_is_top":false,"comment_ctime":1544344636,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"27314148412","product_id":100021101,"comment_content":"感觉自己目前的能力还不能完全考虑到性能方面，只能保证尽量不使用重复代码，完成功能，不出bug……","like_count":6},{"had_liked":false,"id":48041,"user_name":"Androider","can_delete":false,"product_type":"c1","uid":1329127,"ip_address":"","ucode":"20E4B04A960556","user_header":"https://static001.geekbang.org/account/avatar/00/14/47/e7/f5128436.jpg","comment_is_top":false,"comment_ctime":1544328754,"is_pvip":false,"replies":[{"id":"17187","content":"mqtt不是非常清楚，微信使用的是mars，这个已经开源。<br><br>长连另外一个比较通用的方式是使用http2.0，后面的架构篇我们会有专门的讲","user_name":"作者回复","user_name_real":"张绍文","uid":"1009577","ctime":1544407880,"ip_address":"","comment_id":48041,"utype":1}],"discussion_count":2,"race_medal":0,"score":"23019165234","product_id":100021101,"comment_content":"项目里先后换过几次实现长连接的方式，包括Netty，现在使用MQTT实现长连接功能，我们知道MQTT 用于物联网的居多，我们使用后导致OOM的概率一下上去了，您对这个有什么看法呢？或者有什么实现稳定的长连接的方式，我们主要做拍卖项目，对价格的实时更新要求比较高。谢谢了。","like_count":5,"discussions":[{"author":{"id":1009577,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/67/a9/e251ace7.jpg","nickname":"张绍文","note":"","ucode":"94B49E5F80BFDE","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":431999,"discussion_content":"mqtt不是非常清楚，微信使用的是mars，这个已经开源。\n\n长连另外一个比较通用的方式是使用http2.0，后面的架构篇我们会有专门的讲","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1544407880,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1782816,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/34/20/6e359b6c.jpg","nickname":"布谷鸟","note":"","ucode":"3DACE2CAB4DD0D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":351316,"discussion_content":"WebSocket 如何？OkHttp 的实现","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1614241425,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":48782,"user_name":"朱蓝天","can_delete":false,"product_type":"c1","uid":1330847,"ip_address":"","ucode":"61402573C38C7D","user_header":"https://static001.geekbang.org/account/avatar/00/14/4e/9f/ece713ac.jpg","comment_is_top":false,"comment_ctime":1544535573,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"18724404757","product_id":100021101,"comment_content":"很多实验室环境或者开发环节就能发现的问题，目前大一点的厂都能搞得定，但是想要继续深入优化，将离线工具分析发现问题的模式变成线上实时监控发现问题，这正是很多厂需要的内容。","like_count":4},{"had_liked":false,"id":47970,"user_name":"Origin","can_delete":false,"product_type":"c1","uid":1257410,"ip_address":"","ucode":"9B204EF360DD32","user_header":"https://static001.geekbang.org/account/avatar/00/13/2f/c2/09c939ad.jpg","comment_is_top":false,"comment_ctime":1544271615,"is_pvip":false,"replies":[{"id":"17068","content":"不知道这位同学说的根本和基础指的是哪些内容？是指pss rss uss这些的区分，以及low memory killer机制，内存分配原理这些吗？<br><br>因为内存这个话题已经很老了，网上和android developer都有大量这些内容，文中也给了一些参考资料。<br><br>内存优化文中其实讲了两部分内容，一部分是架构上的设计，例如设备分级，统一缓存，进程管理，以及图片库的使用。<br><br>另外主要讲的的确是监控，因为大部分的内存问题，比如泄露，某一时间分配过大，oom。他们其实解决都不难，难得是如何快速的发现它们。<br><br>也欢迎指出其他的意见<br><br>","user_name":"作者回复","user_name_real":"张绍文","uid":"1009577","ctime":1544283609,"ip_address":"","comment_id":47970,"utype":1}],"discussion_count":2,"race_medal":0,"score":"18724140799","product_id":100021101,"comment_content":"从上一节课就一直在讲第三方或者一些自动化监控的工具，就像昵称是“灰”的听众说的一样，“内存优化的主题是监控”吗？没有讲到根本的东西啊，就算是Android开发的高手课，内容的思路和逻辑上也要建立在最基础的东西上吧？没有一个从基础上升到高层次的一个过程，相信会有越来越多的听众难以接受了。","like_count":4,"discussions":[{"author":{"id":1009577,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/67/a9/e251ace7.jpg","nickname":"张绍文","note":"","ucode":"94B49E5F80BFDE","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":431965,"discussion_content":"不知道这位同学说的根本和基础指的是哪些内容？是指pss rss uss这些的区分，以及low memory killer机制，内存分配原理这些吗？\n\n因为内存这个话题已经很老了，网上和android developer都有大量这些内容，文中也给了一些参考资料。\n\n内存优化文中其实讲了两部分内容，一部分是架构上的设计，例如设备分级，统一缓存，进程管理，以及图片库的使用。\n\n另外主要讲的的确是监控，因为大部分的内存问题，比如泄露，某一时间分配过大，oom。他们其实解决都不难，难得是如何快速的发现它们。\n\n也欢迎指出其他的意见\n\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1544283609,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1808044,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/96/ac/48d2de99.jpg","nickname":"Yifan","note":"","ucode":"DC4A3C63729509","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":133821,"discussion_content":"监控的确是很重要的，解决起来手段都大同小异","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578992612,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":133185,"user_name":"薯条","can_delete":false,"product_type":"c1","uid":1334064,"ip_address":"","ucode":"08E591FC62563A","user_header":"https://static001.geekbang.org/account/avatar/00/14/5b/30/83104f0f.jpg","comment_is_top":false,"comment_ctime":1568436917,"is_pvip":false,"replies":[{"id":"62055","content":"指的是同一张图片，createbitmap多次。。在实际开发过程中，我们创建Bitmap的方式有很多种，不仅仅是setImageResource","user_name":"作者回复","user_name_real":"张绍文","uid":"1009577","ctime":1576679809,"ip_address":"","comment_id":133185,"utype":1}],"discussion_count":2,"race_medal":0,"score":"14453338805","product_id":100021101,"comment_content":"大佬，询问一个问题，我发现在8.0 android手机上，不同界面重复使用一个图片，通过api  setImageResource 设置。其实内存大小并没有变化，android系统内部已经帮我们去重了。多个界面，多次setImageResource 相同的图片引用。都是复用一个图片的。所以不理解你说的 “图片去重复”的优化。能否告知下<br>","like_count":3,"discussions":[{"author":{"id":1009577,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/67/a9/e251ace7.jpg","nickname":"张绍文","note":"","ucode":"94B49E5F80BFDE","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":467286,"discussion_content":"指的是同一张图片，createbitmap多次。。在实际开发过程中，我们创建Bitmap的方式有很多种，不仅仅是setImageResource","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1576679809,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1184129,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTL5UU3jicxcWJVBEQt0WOvTrHCAqMFzqe1KvQdsxERrl9HaqxlBicBXC1yyKM4D5N7Tmn74QG5njiaNA/132","nickname":"icecreamco","note":"","ucode":"230B3B17FC947E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":41433,"discussion_content":"这个说的是本地有多个重复图片资源的去重，可能命名不一样，但是图片内容是一样的，和你说的不是一回事","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1572426010,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":121100,"user_name":"Keep up","can_delete":false,"product_type":"c1","uid":1449773,"ip_address":"","ucode":"A0B3D7A4BFF89E","user_header":"https://static001.geekbang.org/account/avatar/00/16/1f/2d/dd60f2ac.jpg","comment_is_top":false,"comment_ctime":1565058034,"is_pvip":false,"replies":[{"id":"62066","content":"我们是采用后者的","user_name":"作者回复","user_name_real":"张绍文","uid":"1009577","ctime":1576680887,"ip_address":"","comment_id":121100,"utype":1}],"discussion_count":3,"race_medal":0,"score":"14449959922","product_id":100021101,"comment_content":"大佬，想问下文中提到的“大图片监控”在线上环境如何部署思路，是用插桩方式在 比如 setBitmap 方法后拿到bitmap和view的宽高做比较，还是定时地去获取内存快照中view和bitmap的宽高作比较，还是其他方式？不胜感激~","like_count":3,"discussions":[{"author":{"id":1009577,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/67/a9/e251ace7.jpg","nickname":"张绍文","note":"","ucode":"94B49E5F80BFDE","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":461625,"discussion_content":"我们是采用后者的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1576680887,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1239293,"avatar":"https://static001.geekbang.org/account/avatar/00/12/e8/fd/035f4c94.jpg","nickname":"Sharry","note":"","ucode":"045DDB864659F6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":73968,"discussion_content":"收拢一下 Bitmap 的创建可以解决这个问题, 发现超过屏幕宽高, 通知提醒开发者进行修正, 对于第三方库, 比如 Glide 可以在 onResourceReady 中判断 Drawable 是否为 BitmapDrawable, 从而获取 Bitmap 进行监控","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1575617840,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1184129,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTL5UU3jicxcWJVBEQt0WOvTrHCAqMFzqe1KvQdsxERrl9HaqxlBicBXC1yyKM4D5N7Tmn74QG5njiaNA/132","nickname":"icecreamco","note":"","ucode":"230B3B17FC947E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":41434,"discussion_content":"感觉从网络加载图片解码完事就可以监控，或者往缓存池里面放的时候监控会不会比较好","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1572426102,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":100222,"user_name":"yuxufeng","can_delete":false,"product_type":"c1","uid":1371833,"ip_address":"","ucode":"48120A6213DB17","user_header":"https://static001.geekbang.org/account/avatar/00/14/ee/b9/0fa1e283.jpg","comment_is_top":false,"comment_ctime":1559485999,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"14444387887","product_id":100021101,"comment_content":"这是网上找不到的干货，仔细体会，必然收货满满啊","like_count":3},{"had_liked":false,"id":68875,"user_name":"cupcake","can_delete":false,"product_type":"c1","uid":1335259,"ip_address":"","ucode":"8B4070FFB181C4","user_header":"https://static001.geekbang.org/account/avatar/00/14/5f/db/bd0f7d6b.jpg","comment_is_top":false,"comment_ctime":1550624918,"is_pvip":false,"replies":[{"id":"28284","content":"可以参考崩溃分析的，将所有的线程名输出到日志中","user_name":"作者回复","user_name_real":"张绍文","uid":"1009577","ctime":1552957103,"ip_address":"","comment_id":68875,"utype":1}],"discussion_count":3,"race_medal":0,"score":"14435526806","product_id":100021101,"comment_content":"oom其中一种原因是超过线程数量超过上限，排查起来有难度<br>","like_count":3,"discussions":[{"author":{"id":1009577,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/67/a9/e251ace7.jpg","nickname":"张绍文","note":"","ucode":"94B49E5F80BFDE","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":439858,"discussion_content":"可以参考崩溃分析的，将所有的线程名输出到日志中","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1552957103,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1330065,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/N0NACGUr8dNAbN6BdiagPHBaB0EnyDsI9zWpwJteqTY38apOEnTOA7JkBAQnzYKJBgxu3Q8YMUILwLAB6camn4w/132","nickname":"Swing","note":"","ucode":"55FCA9ECEFBBEB","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":223683,"discussion_content":"oom的原因很多的，不止普通的堆内存不足，线程、句柄等资源也有限制","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1586245865,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1345559,"avatar":"https://static001.geekbang.org/account/avatar/00/14/88/17/2a74bf7d.jpg","nickname":"艾超","note":"","ucode":"0AAFE5B3C096C2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":32171,"discussion_content":"可以取到oom时的线程总数，以及proc中系统要求的最大总数，比如华为手机最多要求500个线程。对比下就能排除是不是这个原因了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571013157,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":58813,"user_name":"后撤步三分","can_delete":false,"product_type":"c1","uid":1239413,"ip_address":"","ucode":"08783D1E566AFE","user_header":"https://static001.geekbang.org/account/avatar/00/12/e9/75/4a39be54.jpg","comment_is_top":false,"comment_ctime":1547198920,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"14432100808","product_id":100021101,"comment_content":"简单说下感受，老师的确在内存优化上没有提供过多实质的方案，而是从底层去分析内存和监控内存，间接提供不一样思维角度，觉得很赞。 不过确实是有点深度，可能对很多应用层开发看着有点吃力，前几篇就这么深奥难懂，不知会不会降低某些人的兴趣，但是对我而言，就喜欢这么有深度内容，而不是重复网上一些文章的内容。","like_count":3},{"had_liked":false,"id":125818,"user_name":"条野太郎","can_delete":false,"product_type":"c1","uid":1636018,"ip_address":"","ucode":"26CC1D78271E25","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eqAaSVtAbvqOaEkusotvCuAle7b0oicEmlqDY2jJ4fkFVibs892rDhvaYERAF4UCcZpGAvUTouZPY7w/132","comment_is_top":false,"comment_ctime":1566262352,"is_pvip":false,"replies":[{"id":"62023","content":"监控的时候会有堆栈，去重的话就交给对应的业务开发","user_name":"作者回复","user_name_real":"张绍文","uid":"1009577","ctime":1576677057,"ip_address":"","comment_id":125818,"utype":1}],"discussion_count":4,"race_medal":0,"score":"10156196944","product_id":100021101,"comment_content":"问个很菜的问题，监控到重复图片之后要怎么去重？","like_count":2,"discussions":[{"author":{"id":1009577,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/67/a9/e251ace7.jpg","nickname":"张绍文","note":"","ucode":"94B49E5F80BFDE","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":463704,"discussion_content":"监控的时候会有堆栈，去重的话就交给对应的业务开发","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1576677057,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1090798,"avatar":"https://static001.geekbang.org/account/avatar/00/10/a4/ee/cffd8ee6.jpg","nickname":"魏全运","note":"","ucode":"3FED702C724E2A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":530586,"discussion_content":"正常情况下，如果多个业务公用统一的图片库不太可能出现重复图片问题，除非是同一个图片存在两个不同的url ，如果是这种情况就要这个业务开发评估下是否可以用相同的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1637110076,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"user_type\":1}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1334064,"avatar":"https://static001.geekbang.org/account/avatar/00/14/5b/30/83104f0f.jpg","nickname":"薯条","note":"","ucode":"08E591FC62563A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":11847,"discussion_content":"我在不同界面设置相同的图片资源，发现native的内存并没有增加，而且快照现在都是同一个引用，这是为何","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1568437093,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1330065,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/N0NACGUr8dNAbN6BdiagPHBaB0EnyDsI9zWpwJteqTY38apOEnTOA7JkBAQnzYKJBgxu3Q8YMUILwLAB6camn4w/132","nickname":"Swing","note":"","ucode":"55FCA9ECEFBBEB","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1334064,"avatar":"https://static001.geekbang.org/account/avatar/00/14/5b/30/83104f0f.jpg","nickname":"薯条","note":"","ucode":"08E591FC62563A","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":223681,"discussion_content":"em，同一图片的像素数据不做复制，应该是只有一份的丫。\n老师这里说的重复图片，是说，像素内容一致，不同名称保存的。\n系统加载某个图片的像素数据的时候，不可能给app做重复像素过滤的啊","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1586245800,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":11847,"ip_address":""},"score":223681,"extra":""}]}]},{"had_liked":false,"id":83429,"user_name":"秋水无痕","can_delete":false,"product_type":"c1","uid":1328707,"ip_address":"","ucode":"A3C3DF44426EBF","user_header":"https://static001.geekbang.org/account/avatar/00/14/46/43/7545067a.jpg","comment_is_top":false,"comment_ctime":1554598043,"is_pvip":false,"replies":[{"id":"30797","content":"可以在oom或者临近oom的时候dump一下内存","user_name":"作者回复","user_name_real":"张绍文","uid":"1009577","ctime":1555169966,"ip_address":"","comment_id":83429,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10144532635","product_id":100021101,"comment_content":"请问monkey跑出来的低概率oom怎么分析定位？","like_count":2,"discussions":[{"author":{"id":1009577,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/67/a9/e251ace7.jpg","nickname":"张绍文","note":"","ucode":"94B49E5F80BFDE","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":446021,"discussion_content":"可以在oom或者临近oom的时候dump一下内存","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1555169966,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":72357,"user_name":"Geek_a1e8a8","can_delete":false,"product_type":"c1","uid":1361337,"ip_address":"","ucode":"6C4F243D990DD4","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLqcnUABw0V5FGBRsH6XG5iah18NEe3u7qF2bQjOyhuHnomiajKLicAER9lbgu5cAib6WjsVuPgLNZm1Q/132","comment_is_top":false,"comment_ctime":1551595556,"is_pvip":false,"replies":[{"id":"26213","content":"native崩溃捕获不了的，特别是某些类似堆破坏，溢出这样的问题","user_name":"作者回复","user_name_real":"张绍文","uid":"1009577","ctime":1551605981,"ip_address":"","comment_id":72357,"utype":1}],"discussion_count":3,"race_medal":0,"score":"10141530148","product_id":100021101,"comment_content":"probe在分析时候 会自己catch分析时候的任何异常，不会造成二次崩溃的。","like_count":2,"discussions":[{"author":{"id":1009577,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/67/a9/e251ace7.jpg","nickname":"张绍文","note":"","ucode":"94B49E5F80BFDE","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":441556,"discussion_content":"native崩溃捕获不了的，特别是某些类似堆破坏，溢出这样的问题","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1551605981,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1330065,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/N0NACGUr8dNAbN6BdiagPHBaB0EnyDsI9zWpwJteqTY38apOEnTOA7JkBAQnzYKJBgxu3Q8YMUILwLAB6camn4w/132","nickname":"Swing","note":"","ucode":"55FCA9ECEFBBEB","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":223689,"discussion_content":"能catch的只是 java层面的Throwable","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1586246137,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1335324,"avatar":"","nickname":"wust714","note":"","ucode":"E3AC7B6ABD7525","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":35437,"discussion_content":"美团的这个Probe不是开源的对吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571279942,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":52032,"user_name":"司冬","can_delete":false,"product_type":"c1","uid":1342415,"ip_address":"","ucode":"F8AB75234B2026","user_header":"https://static001.geekbang.org/account/avatar/00/14/7b/cf/81877641.jpg","comment_is_top":false,"comment_ctime":1545297843,"is_pvip":false,"replies":[{"id":"18857","content":"Hprof或者火焰图都可以，如果一个对象泄露10几k比较难找，但是我们一般找的是大头，如果这个10k的对象泄露了1000个，我们就很容易找出来","user_name":"作者回复","user_name_real":"张绍文","uid":"1009577","ctime":1545309035,"ip_address":"","comment_id":52032,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10135232435","product_id":100021101,"comment_content":"您好，我想问一个实际的问题，比如我的一个应用里面有一个对象泄漏了，但这个对象的大小很小，比如只有十几K，那么我们怎么找出这个对象呢？","like_count":2,"discussions":[{"author":{"id":1009577,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/67/a9/e251ace7.jpg","nickname":"张绍文","note":"","ucode":"94B49E5F80BFDE","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":433712,"discussion_content":"Hprof或者火焰图都可以，如果一个对象泄露10几k比较难找，但是我们一般找的是大头，如果这个10k的对象泄露了1000个，我们就很容易找出来","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1545309035,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":160850,"user_name":"alford","can_delete":false,"product_type":"c1","uid":1475111,"ip_address":"","ucode":"29C3CE4901DBF3","user_header":"","comment_is_top":false,"comment_ctime":1576047062,"is_pvip":false,"replies":[{"id":"62072","content":"这个问题有点大，我们可以具体拆分一下。<br><br>目前我们在线上也没有做太细致的监控，不过对于ANR和卡顿日志会分析锁的问题。<br><br>对于崩溃日志会去自动分析线程和文件句柄的问题","user_name":"作者回复","user_name_real":"张绍文","uid":"1009577","ctime":1576681670,"ip_address":"","comment_id":160850,"utype":1}],"discussion_count":3,"race_medal":0,"score":"5871014358","product_id":100021101,"comment_content":"张老师，想向你咨询一个问题。现在rxjava等框架大行其道，但是在用的过程经常出现底层线程池有太多线程消耗，导致oom。或因为锁问题，或因为其他问题，线程无法释放。由于这些线程堆栈太深了，没有办法确定具体是那个业务代码开出来的。在这个方面有没有比较好的定位手段。因为看了手q通过trace日志定位问题的文章，感觉还是没有版本具体定位到问题。","like_count":1,"discussions":[{"author":{"id":1009577,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/67/a9/e251ace7.jpg","nickname":"张绍文","note":"","ucode":"94B49E5F80BFDE","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":477502,"discussion_content":"这个问题有点大，我们可以具体拆分一下。\n\n目前我们在线上也没有做太细致的监控，不过对于ANR和卡顿日志会分析锁的问题。\n\n对于崩溃日志会去自动分析线程和文件句柄的问题","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1576681670,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1090798,"avatar":"https://static001.geekbang.org/account/avatar/00/10/a4/ee/cffd8ee6.jpg","nickname":"魏全运","note":"","ucode":"3FED702C724E2A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":530589,"discussion_content":"尽量把三方的线程池交给自己接管，合理控制线程数和keep alive 时长，自己控制线程池还可以方便监控线程执行时间，任务等待时间等性能问题","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1637110255,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"user_type\":1}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1330065,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/N0NACGUr8dNAbN6BdiagPHBaB0EnyDsI9zWpwJteqTY38apOEnTOA7JkBAQnzYKJBgxu3Q8YMUILwLAB6camn4w/132","nickname":"Swing","note":"","ucode":"55FCA9ECEFBBEB","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":223685,"discussion_content":"我记得rxjava的线程创建可以自己定制？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1586245948,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":72912,"user_name":"张可","can_delete":false,"product_type":"c1","uid":1328525,"ip_address":"","ucode":"203A0C611B48DE","user_header":"https://static001.geekbang.org/account/avatar/00/14/45/8d/c13e5049.jpg","comment_is_top":false,"comment_ctime":1551753900,"is_pvip":false,"replies":[{"id":"28204","content":"你这个是新的应用？或者比较轻量的应用？","user_name":"作者回复","user_name_real":"张绍文","uid":"1009577","ctime":1552917737,"ip_address":"","comment_id":72912,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5846721196","product_id":100021101,"comment_content":"我通过 javaUsed &#47; javaMax 获取到的值大概是 2%-4% 左右，距离 80% 还很远啊，是不是计算方式错了？","like_count":1,"discussions":[{"author":{"id":1009577,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/67/a9/e251ace7.jpg","nickname":"张绍文","note":"","ucode":"94B49E5F80BFDE","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":441823,"discussion_content":"你这个是新的应用？或者比较轻量的应用？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1552917737,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":62605,"user_name":"功夫熊猫","can_delete":false,"product_type":"c1","uid":1186214,"ip_address":"","ucode":"B74213050A0804","user_header":"https://static001.geekbang.org/account/avatar/00/12/19/a6/4529cdfa.jpg","comment_is_top":false,"comment_ctime":1548119348,"is_pvip":false,"replies":[{"id":"23102","content":"虚拟内存的具体分布可以看maps，一般泄露的比较多的都是线程跟文件句柄这些，后面都有讲到","user_name":"作者回复","user_name_real":"张绍文","uid":"1009577","ctime":1549102207,"ip_address":"","comment_id":62605,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5843086644","product_id":100021101,"comment_content":"作者提了一句虚拟内存泄露，我最近遇到了这个，但是网上资料比较少，不知该如何下手","like_count":1,"discussions":[{"author":{"id":1009577,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/67/a9/e251ace7.jpg","nickname":"张绍文","note":"","ucode":"94B49E5F80BFDE","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":437275,"discussion_content":"虚拟内存的具体分布可以看maps，一般泄露的比较多的都是线程跟文件句柄这些，后面都有讲到","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1549102207,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":62159,"user_name":"古月弓虽1993","can_delete":false,"product_type":"c1","uid":1237500,"ip_address":"","ucode":"86122CC701F02A","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTI3jSpV7VvK6NaUH6X1LNYWGsQdFSTu4SwTZ0nQlSYGTOY2FrDCcMic9qFXnu2ZGR88hBlUQK28Whg/132","comment_is_top":false,"comment_ctime":1547964340,"is_pvip":false,"replies":[{"id":"23116","content":"这块要看看虚拟机的内存管理，看看哪部分的内存会放到default中。当时其实参考的是haha的写法，并没有深究","user_name":"作者回复","user_name_real":"张绍文","uid":"1009577","ctime":1549102974,"ip_address":"","comment_id":62159,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5842931636","product_id":100021101,"comment_content":"使用haha获取堆的时候，除了 app heap ,为什么还要取default heap 呢？","like_count":1,"discussions":[{"author":{"id":1009577,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/67/a9/e251ace7.jpg","nickname":"张绍文","note":"","ucode":"94B49E5F80BFDE","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":437119,"discussion_content":"这块要看看虚拟机的内存管理，看看哪部分的内存会放到default中。当时其实参考的是haha的写法，并没有深究","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1549102974,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":57790,"user_name":"文若","can_delete":false,"product_type":"c1","uid":1017387,"ip_address":"","ucode":"3D3045975ED2DB","user_header":"https://static001.geekbang.org/account/avatar/00/0f/86/2b/f82a7d5a.jpg","comment_is_top":false,"comment_ctime":1546911710,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5841879006","product_id":100021101,"comment_content":"安装包中的代码、图片、资源以及 so 库的大小跟内存究竟有哪些关系？下面给的那个表看不明白，能对表做一些详细说明么？ 另外一直有一个感觉，我们这个课不够接地气，感觉一般公司都用不上您说的这些.<br><br>","like_count":1},{"had_liked":false,"id":49309,"user_name":"💰","can_delete":false,"product_type":"c1","uid":1330504,"ip_address":"","ucode":"EEB7CCDF7FCC60","user_header":"https://static001.geekbang.org/account/avatar/00/14/4d/48/885cf96f.jpg","comment_is_top":false,"comment_ctime":1544663648,"is_pvip":false,"replies":[{"id":"17742","content":"因为8.0 buffer数组已经不在heap中了，暂时还没有太好的方法","user_name":"作者回复","user_name_real":"张绍文","uid":"1009577","ctime":1544668763,"ip_address":"","comment_id":49309,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5839630944","product_id":100021101,"comment_content":"8.0 及以上手机的 bitmap 即便用 as 的profile dump 下来也看不到图片文件 buffer (想可视化分析查看)，这一块大佬有什么好的方案或者建议吗。","like_count":1,"discussions":[{"author":{"id":1009577,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/67/a9/e251ace7.jpg","nickname":"张绍文","note":"","ucode":"94B49E5F80BFDE","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":432567,"discussion_content":"因为8.0 buffer数组已经不在heap中了，暂时还没有太好的方法","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1544668763,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":48598,"user_name":"47Log","can_delete":false,"product_type":"c1","uid":1141404,"ip_address":"","ucode":"A87568B3B7EE05","user_header":"https://static001.geekbang.org/account/avatar/00/11/6a/9c/5cd7f4c2.jpg","comment_is_top":false,"comment_ctime":1544492963,"is_pvip":false,"replies":[{"id":"17486","content":"是直接裁剪无用的byte数组，然后重写一下hprof的格式。<br><br>是根据hprof格式来解析的，目前是把没有重复的图片的byte数组都裁剪了。","user_name":"作者回复","user_name_real":"张绍文","uid":"1009577","ctime":1544524043,"ip_address":"","comment_id":48598,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5839460259","product_id":100021101,"comment_content":"发现没法跟帖，只能这样回复了。请问裁剪是通过什么样的原理？我尝试直接从生成文件的时候着手，但是并没有找到对应的api，只能现在只能通过生成文件的之后进行裁剪，但是裁剪我不知道应该裁剪什么，虽然我知道很多byte是无用的，但是还是觉得无从下手","like_count":1,"discussions":[{"author":{"id":1009577,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/67/a9/e251ace7.jpg","nickname":"张绍文","note":"","ucode":"94B49E5F80BFDE","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":432265,"discussion_content":"是直接裁剪无用的byte数组，然后重写一下hprof的格式。\n\n是根据hprof格式来解析的，目前是把没有重复的图片的byte数组都裁剪了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1544524043,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":48431,"user_name":"刘佳旭","can_delete":false,"product_type":"c1","uid":1266844,"ip_address":"","ucode":"6E188C9BBB6E13","user_header":"https://static001.geekbang.org/account/avatar/00/13/54/9c/b83c52be.jpg","comment_is_top":false,"comment_ctime":1544443400,"is_pvip":false,"discussion_count":0,"race_medal":1,"score":"5839410696","product_id":100021101,"comment_content":"先看文章，收获不少，继续看评论，又收货颇丰，哈哈😄","like_count":1},{"had_liked":false,"id":47954,"user_name":"牵手约定","can_delete":false,"product_type":"c1","uid":1249461,"ip_address":"","ucode":"01AF328FDDD38C","user_header":"https://static001.geekbang.org/account/avatar/00/13/10/b5/0813608c.jpg","comment_is_top":false,"comment_ctime":1544266244,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5839233540","product_id":100021101,"comment_content":"收获了一波知识。","like_count":1},{"had_liked":false,"id":47823,"user_name":"彪","can_delete":false,"product_type":"c1","uid":1329402,"ip_address":"","ucode":"16F0A59E6D32B4","user_header":"https://static001.geekbang.org/account/avatar/00/14/48/fa/ce66bff5.jpg","comment_is_top":false,"comment_ctime":1544230546,"is_pvip":false,"replies":[{"id":"17069","content":"二四六更新","user_name":"作者回复","user_name_real":"张绍文","uid":"1009577","ctime":1544283663,"ip_address":"","comment_id":47823,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5839197842","product_id":100021101,"comment_content":"每天早起先刷新下看有没有更新，更新了就赶紧学习下。","like_count":1,"discussions":[{"author":{"id":1009577,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/67/a9/e251ace7.jpg","nickname":"张绍文","note":"","ucode":"94B49E5F80BFDE","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":431898,"discussion_content":"二四六更新","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1544283663,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":360923,"user_name":"Geek_a37ad4","can_delete":false,"product_type":"c1","uid":1625932,"ip_address":"上海","ucode":"2E113369948CB5","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Gbgz7r58WRp9cUf9giaWhCSJwjVK9hyML1yMiccXYvvfmoy9JTIRHP8LsScVfNNeJwV1iaycLQVqCdeppiaaBhtoPw/132","comment_is_top":false,"comment_ctime":1666998402,"is_pvip":true,"discussion_count":0,"race_medal":3,"score":"1666998402","product_id":100021101,"comment_content":"您好，请教一下，<br>1 图片内存优化的前提是收拢图片的调用<br>这里的收拢图片的调用，是指什么？指的是重构代码，封装一个统一的工具类吗？<br><br>2 怎么做来判定重复图片？<br>通过缓存起来所有图片，然后遍历一遍吗？","like_count":0},{"had_liked":false,"id":310409,"user_name":"李明伟","can_delete":false,"product_type":"c1","uid":2051548,"ip_address":"","ucode":"E9463FB831D60E","user_header":"https://static001.geekbang.org/account/avatar/00/1f/4d/dc/5335222d.jpg","comment_is_top":false,"comment_ctime":1630645030,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1630645030","product_id":100021101,"comment_content":"这个不错，是我关注的。内存优化第一部当然是发现问题，通过标准的方式搜集性能数据，有助于后面优化方向的确定。就像孙子兵法，前三篇没有教你具体如何派兵布阵，而是从更好纬度分析这个问题。这样做的好处是能够在具体实施策略的时候不至于偏离方向，更加形成合力，高效解决问题","like_count":0},{"had_liked":false,"id":285784,"user_name":"InfoQ_a33e554a417d","can_delete":false,"product_type":"c1","uid":1302449,"ip_address":"","ucode":"69493446DB3B25","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/ouowibepHbBXkWnxOyBc6zATTelluzpujbPkY5fdXYQf3QZz39YAT6w6Nq8icvANTMOeqqicv9Gb6VvLEHEJnhMHA/132","comment_is_top":false,"comment_ctime":1617011438,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1617011438","product_id":100021101,"comment_content":"想问下内存异常率的计算方式中PSS设置400M阈值的依据是什么呢？有这方面的资料介绍吗？","like_count":0,"discussions":[{"author":{"id":1090798,"avatar":"https://static001.geekbang.org/account/avatar/00/10/a4/ee/cffd8ee6.jpg","nickname":"魏全运","note":"","ucode":"3FED702C724E2A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":530591,"discussion_content":"可能就是一个示例，真正是多少肯定得结合设备内存，app 内存占用水位来定，我觉得得线下测试加线上统计来定","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1637110421,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"user_type\":1}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":283331,"user_name":"平安","can_delete":false,"product_type":"c1","uid":1563344,"ip_address":"","ucode":"DBB656A939052A","user_header":"https://static001.geekbang.org/account/avatar/00/17/da/d0/75462190.jpg","comment_is_top":false,"comment_ctime":1615709121,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1615709121","product_id":100021101,"comment_content":"大佬这个思想真的是一下点醒了我 我们产品有百分之二十五左右的低端用户 我这两天在尝试使用device-rom-class(看见device-year-class才想起的名称)的方法对低端机用户进行 数据列表请求量减少 但是没想到关闭动画谢谢操作 看了大佬的文章 最近受益良多 非常感谢","like_count":0},{"had_liked":false,"id":231121,"user_name":"lee🎶","can_delete":false,"product_type":"c1","uid":1116368,"ip_address":"","ucode":"98EE7462403DAF","user_header":"https://static001.geekbang.org/account/avatar/00/11/08/d0/591e0c39.jpg","comment_is_top":false,"comment_ctime":1593588811,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1593588811","product_id":100021101,"comment_content":"大佬，一个空的进程也会占用 10MB 的内存 这个是怎么得到的？线程可以查看一下整体内存使用进程也是么？","like_count":0},{"had_liked":false,"id":217358,"user_name":"卢俊","can_delete":false,"product_type":"c1","uid":1629415,"ip_address":"","ucode":"E4FC5577EC6DDF","user_header":"https://static001.geekbang.org/account/avatar/00/18/dc/e7/1eb6f933.jpg","comment_is_top":false,"comment_ctime":1589469367,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1589469367","product_id":100021101,"comment_content":"想问一下对于长时间连续缓慢增长的内存泄露，该如何捕获泄露对象呢？","like_count":0},{"had_liked":false,"id":204571,"user_name":"Sad","can_delete":false,"product_type":"c1","uid":1618669,"ip_address":"","ucode":"A381C6AE08244D","user_header":"https://static001.geekbang.org/account/avatar/00/18/b2/ed/67e26acd.jpg","comment_is_top":false,"comment_ctime":1586423168,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1586423168","product_id":100021101,"comment_content":"尝试使用 HAHA 库快速判断内存中是否存在重复的图片 ——谁有源码分享一下吗？","like_count":0},{"had_liked":false,"id":161700,"user_name":"上岸的🐟","can_delete":false,"product_type":"c1","uid":1714085,"ip_address":"","ucode":"B5EC8429B17267","user_header":"https://static001.geekbang.org/account/avatar/00/1a/27/a5/2c7f86b2.jpg","comment_is_top":false,"comment_ctime":1576300991,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1576300991","product_id":100021101,"comment_content":"看了几篇感觉是两个世界的Android。嗯，加油。","like_count":0},{"had_liked":false,"id":148957,"user_name":"Tony","can_delete":false,"product_type":"c1","uid":1432723,"ip_address":"","ucode":"E30A96891AE98F","user_header":"https://static001.geekbang.org/account/avatar/00/15/dc/93/3521ff2b.jpg","comment_is_top":false,"comment_ctime":1573118141,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573118141","product_id":100021101,"comment_content":"看了大师的讲解，感受了大厂对性能优化的重视，以及非常细粒度成体系的部署监控体系，这是中小公司不具备的，读了四篇文章下来，增长了不少见识，尤其是底层一些知识以前根本就没听过，毕竟在小公司开发，局限性比较强，长知识了，我觉得后面也可以讲讲一些开发过程中如何预防内存泄漏的常见误区，虽然使用场景不一样，但是技术是相通的。最后是架构设计方面来尽可能避免内存泄漏，这块我也挺敢兴趣的，大神可以把这块的东西具体实现讲的粒度再细微点会更好啊","like_count":0},{"had_liked":false,"id":146101,"user_name":"勇敢地追","can_delete":false,"product_type":"c1","uid":1497082,"ip_address":"","ucode":"29B94AC2ABC2BB","user_header":"","comment_is_top":false,"comment_ctime":1572432335,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1572432335","product_id":100021101,"comment_content":"这是第四节了,确实蛮难的.首先需要<br>implementation &#39;com.squareup.haha:haha:2.1&#39;<br>然后按照haha库的说明去做,发现hahahelper找不到.需要进<br>implementation &#39;com.squareup.leakcanary:leakcanary-analyzer:1.6.3&#39;<br>把hahahelper引入,但是package的access权限,只能把相关代码摘出来.<br>hahahelper说明文档配合相关代码配合自己打log其实不难理解整个的处理流程<br>只是具体细节嘛,这个就....................尴尬了","like_count":0},{"had_liked":false,"id":146055,"user_name":"icecreamco","can_delete":false,"product_type":"c1","uid":1184129,"ip_address":"","ucode":"230B3B17FC947E","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTL5UU3jicxcWJVBEQt0WOvTrHCAqMFzqe1KvQdsxERrl9HaqxlBicBXC1yyKM4D5N7Tmn74QG5njiaNA/132","comment_is_top":false,"comment_ctime":1572426314,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1572426314","product_id":100021101,"comment_content":"感觉好多人都在抱怨课程有点儿难，但是其实市面上就是缺少这种有深度的分享，毕竟大家都是开发者，找资料的能力还是有的，如果感觉有难度，去学习一下相关基础知识再回来学习不是更好？我是有点不理解为啥这么多人嫌这些知识有难度。","like_count":0},{"had_liked":false,"id":140301,"user_name":"Geek_f342a0","can_delete":false,"product_type":"c1","uid":1657339,"ip_address":"","ucode":"30DA7380CC3355","user_header":"","comment_is_top":false,"comment_ctime":1570873597,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1570873597","product_id":100021101,"comment_content":"我的方法是：通过mat工具或者Android Profile将内存的使用情况dump下来，然后再进行分析dump文件，一般都是解决大部分内存消耗的问题，同时也能解决内存泄漏的问题。<br>","like_count":0},{"had_liked":false,"id":135071,"user_name":"河里的枇杷树、","can_delete":false,"product_type":"c1","uid":1083598,"ip_address":"","ucode":"05468530119B0E","user_header":"https://static001.geekbang.org/account/avatar/00/10/88/ce/e22e2cda.jpg","comment_is_top":false,"comment_ctime":1568996427,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1568996427","product_id":100021101,"comment_content":"学了几篇，感觉确实是高手课，高到云端的那种。很多知识都是首次接触，不过个人感觉 很多东西还是要先知道再深入了解。这是个正常的过程。","like_count":0},{"had_liked":false,"id":108145,"user_name":"汪帅","can_delete":false,"product_type":"c1","uid":1025321,"ip_address":"","ucode":"87374288E390B9","user_header":"https://static001.geekbang.org/account/avatar/00/0f/a5/29/a85c2853.jpg","comment_is_top":false,"comment_ctime":1561686788,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1561686788","product_id":100021101,"comment_content":"最近有个问题那就是夸进城调用AIDL，内容提供者对IBinder进行封装返回给调用者，从而实现了一个跨进程，相比和绑定服务哪种更加好一点呢？","like_count":0},{"had_liked":false,"id":91295,"user_name":"大土豆","can_delete":false,"product_type":"c1","uid":1121636,"ip_address":"","ucode":"67445DC3EC9DB0","user_header":"https://static001.geekbang.org/account/avatar/00/11/1d/64/52a5863b.jpg","comment_is_top":false,"comment_ctime":1556967377,"is_pvip":true,"replies":[{"id":"62006","content":"搭一个小的后台并不复杂，但是对于小型创业团队要思考目前阶段最重要的问题是什么，是否有其他成熟的解决方案等","user_name":"作者回复","user_name_real":"张绍文","uid":"1009577","ctime":1576675737,"ip_address":"","comment_id":91295,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1556967377","product_id":100021101,"comment_content":"关于Matrix，我想咨询下哈，线上使用Matrix，我们需要在App中拿到卡顿数据之后上报到自己的平台，这样对小型创业团队而言，是否压力太大了","like_count":0,"discussions":[{"author":{"id":1009577,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/67/a9/e251ace7.jpg","nickname":"张绍文","note":"","ucode":"94B49E5F80BFDE","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":448872,"discussion_content":"搭一个小的后台并不复杂，但是对于小型创业团队要思考目前阶段最重要的问题是什么，是否有其他成熟的解决方案等","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1576675737,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":75773,"user_name":"大离弟弟咯。","can_delete":false,"product_type":"c1","uid":1359067,"ip_address":"","ucode":"721D7728399055","user_header":"https://static001.geekbang.org/account/avatar/00/14/bc/db/b31db50e.jpg","comment_is_top":false,"comment_ctime":1552466850,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1552466850","product_id":100021101,"comment_content":"确实过于深入，名副其实的高手课","like_count":0},{"had_liked":false,"id":75168,"user_name":"richsjeson","can_delete":false,"product_type":"c1","uid":1059370,"ip_address":"","ucode":"3573B1684B48D4","user_header":"https://static001.geekbang.org/account/avatar/00/10/2a/2a/b9b09c0f.jpg","comment_is_top":false,"comment_ctime":1552359879,"is_pvip":false,"replies":[{"id":"31109","content":"这个主要是用来统计使用的，我们一般都会采用定时采样的方法来使用","user_name":"作者回复","user_name_real":"孙鹏飞","uid":"1171070","ctime":1555397488,"ip_address":"","comment_id":75168,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1552359879","product_id":100021101,"comment_content":"Debug.getRuntimeStat这个是要打印出来还是，然后这句话要放在什么地方","like_count":0,"discussions":[{"author":{"id":1171070,"avatar":"https://static001.geekbang.org/account/avatar/00/11/de/7e/5c2b1efe.jpg","nickname":"孙鹏飞","note":"","ucode":"18ADF5C2B78938","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":442811,"discussion_content":"这个主要是用来统计使用的，我们一般都会采用定时采样的方法来使用","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1555397488,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":1}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":74657,"user_name":"鱼儿","can_delete":false,"product_type":"c1","uid":1242380,"ip_address":"","ucode":"C52C6B47F79DAB","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJOCFdmKAGVRvObVfaOLh08tf1vSk9iaHLPD7HlKIJdD09muB16jsPDKpLtTonRPwgYVawqBNcicExQ/132","comment_is_top":false,"comment_ctime":1552274021,"is_pvip":false,"replies":[{"id":"30706","content":"WebView的内存的确不是那么好搞，我们应用因为有自有内核相对还好一些，会有更多细致的一些参数控制。例如使用多进程模式","user_name":"作者回复","user_name_real":"张绍文","uid":"1009577","ctime":1555138244,"ip_address":"","comment_id":74657,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1552274021","product_id":100021101,"comment_content":"对于webview的内存释放，有没有好的建议；不是是起新进程，杀新进程；","like_count":0,"discussions":[{"author":{"id":1009577,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/67/a9/e251ace7.jpg","nickname":"张绍文","note":"","ucode":"94B49E5F80BFDE","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":442637,"discussion_content":"WebView的内存的确不是那么好搞，我们应用因为有自有内核相对还好一些，会有更多细致的一些参数控制。例如使用多进程模式","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1555138244,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":61575,"user_name":"Matthew","can_delete":false,"product_type":"c1","uid":1239829,"ip_address":"","ucode":"4B66882414337E","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eopQic30JDlkwNAAdPHYxF3HMico8zDtMsGnI7KkbM4oV7ib1Pt4ZJYSiaDEiaLGkzp4JgoHBb4s8GIZjw/132","comment_is_top":false,"comment_ctime":1547726596,"is_pvip":false,"replies":[{"id":"22051","content":"这个作业是需要自己实现的，我们可以看看matrix的实现，也可以看看别人提交的pull request","user_name":"作者回复","user_name_real":"张绍文","uid":"1009577","ctime":1548042156,"ip_address":"","comment_id":61575,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1547726596","product_id":100021101,"comment_content":"课后作业的原理是什么呢，没怎么看懂。下载了工程，打开之后，只有一个空壳？<br>1. 如何判断两张图片完全相等，原理是什么。<br>2. 这个作业在实际项目中的意义是什么，比如不同UI上展现的就是同一张图片作为背景，这种情况貌似也没办法，在运行期，删除掉其中一张图片吧。","like_count":0,"discussions":[{"author":{"id":1009577,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/67/a9/e251ace7.jpg","nickname":"张绍文","note":"","ucode":"94B49E5F80BFDE","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":436917,"discussion_content":"这个作业是需要自己实现的，我们可以看看matrix的实现，也可以看看别人提交的pull request","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1548042156,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":57356,"user_name":"godliness","can_delete":false,"product_type":"c1","uid":1341267,"ip_address":"","ucode":"1C1976C39DCFE6","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIuUYcwKWUuib5mpdIbTwQzTGNWBmk0ktZSwm2vteUXf4TxWF2aVCv7Hvshcq0OaG7JRLj6rJyPLicA/132","comment_is_top":false,"comment_ctime":1546761815,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1546761815","product_id":100021101,"comment_content":"很好，受益匪浅，实际开发过程中我也非常注重内存方面问题！的确建立一套闭环的体系对问题及时发现颇为重要！","like_count":0},{"had_liked":false,"id":54294,"user_name":"LD","can_delete":false,"product_type":"c1","uid":1331218,"ip_address":"","ucode":"0AE2613B44C108","user_header":"https://static001.geekbang.org/account/avatar/00/14/50/12/74d414d4.jpg","comment_is_top":false,"comment_ctime":1545821775,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1545821775","product_id":100021101,"comment_content":"使用Haha库，拿到了Bitmap的Instance对象，但是无法获取这个bitmap实例的引用链，导致无法打印出如下stack内容：&quot;stacks&quot;:[<br>     [<br>         &quot;static com.sample.launcher.controller.LauncherController mLauncherView(0x1349c400)&quot;,<br>         &quot;com.sample.launcher.view.LauncherView mHeaderView(0x1349bc00)&quot;,<br>         &quot;com.sample.homepage.header.HomePageHeaderView mSearchAndAddressBar(0x13118c00)&quot;,<br>         &quot;android.widget.ImageView mDrawable(0x131f9400)&quot;,<br>         &quot;android.graphics.drawable.BitmapDrawable mBitmapState(0x13799b80)&quot;,<br>         &quot;android.graphics.drawable.BitmapDrawable$BitmapState mBitmap(0x13b0f4d8)&quot;,<br>         &quot;android.graphics.Bitmap instance&quot;<br>     ],。<br>请教下张老师。","like_count":0},{"had_liked":false,"id":53317,"user_name":"从前有只🐻","can_delete":false,"product_type":"c1","uid":1110417,"ip_address":"","ucode":"F8C9805E00A746","user_header":"https://static001.geekbang.org/account/avatar/00/10/f1/91/4bbc7f73.jpg","comment_is_top":false,"comment_ctime":1545625667,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1545625667","product_id":100021101,"comment_content":"想问下，判断图片重复方法已经了解了，那判断时机呢？图片判断是不是具有实效性，因为可能被回收掉，我们又不能时时去dump内存，所以这方面有什么经验或者想法呢？","like_count":0},{"had_liked":false,"id":52469,"user_name":"、、cryAllen","can_delete":false,"product_type":"c1","uid":1017204,"ip_address":"","ucode":"50032F6E2DDB4B","user_header":"https://static001.geekbang.org/account/avatar/00/0f/85/74/e70862a2.jpg","comment_is_top":false,"comment_ctime":1545388244,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1545388244","product_id":100021101,"comment_content":"看了这两篇内存优化上下，收获如下：<br>1，平时工作中基本没有要有监控的概念，更不要说自动化去监控，更多关注的是代码层面的内存泄漏，比如类复用，单例实例，然后使用完资源文件及时释放，静态类使用等等。监控这点是在文章中学到的。<br>2，日常工作中，更多会偏向于用工具辅助分析，比如MAT等，还有在开发过程中，会用一些内存泄漏检测工具，尽量把问题暴露在开发阶段，这是属于预防，就算如此，后期缺乏监控手段，还是会出现各种问题。<br>3，收获第三点是，内存泄漏解决方案对不同设备等级进行处理，正如文中所说，开发阶段开发者使用的是设备往往是最新款的手机测试，内存和性能都是比较优，导致这样的原因，更多是看公司业务应用使用的基数如何，是否有网络环境不好，手机性能没那么好的地方频繁使用呢，给我的启发就是作为一个开放者，需要针对不同的问题需要有不同的解决思路，不能一刀斩去解决同一个问题。","like_count":0},{"had_liked":false,"id":51834,"user_name":"深蓝浅蓝","can_delete":false,"product_type":"c1","uid":1334187,"ip_address":"","ucode":"ED8E469E756D30","user_header":"https://static001.geekbang.org/account/avatar/00/14/5b/ab/a270b88f.jpg","comment_is_top":false,"comment_ctime":1545268510,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1545268510","product_id":100021101,"comment_content":"老师你好，有两个问题想请教一下。<br>1.我想在low memory killer的时候把heap dump下来，但是hprof除了人工分析之外，如果做自动化分析有些什么样的思路呢？<br>2.还有就是分析重复的bitmap时，我看源码中是通过mBuffer这个属性来判断的，但是8.0以后已经没有这个属性了，怎么解决呢？困惑了好久～","like_count":0},{"had_liked":false,"id":51592,"user_name":"山鬼","can_delete":false,"product_type":"c1","uid":1344110,"ip_address":"","ucode":"8A6AA48BB8D510","user_header":"https://static001.geekbang.org/account/avatar/00/14/82/6e/f552d036.jpg","comment_is_top":false,"comment_ctime":1545204883,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1545204883","product_id":100021101,"comment_content":"我就觉得老师讲的挺好的，排查分析问题要比解决问题更难，往往问题定位清楚了解决方案会很简单","like_count":0},{"had_liked":false,"id":51204,"user_name":"留白","can_delete":false,"product_type":"c1","uid":1328734,"ip_address":"","ucode":"5267C1F3889961","user_header":"https://static001.geekbang.org/account/avatar/00/14/46/5e/c0ea1ffb.jpg","comment_is_top":false,"comment_ctime":1545133614,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1545133614","product_id":100021101,"comment_content":"咸鱼表示读了两遍还是不知道如何下手，真真切切感受到了差距。看来需要拿出大块的时间好好研究一下。","like_count":0},{"had_liked":false,"id":50712,"user_name":"stone","can_delete":false,"product_type":"c1","uid":1241300,"ip_address":"","ucode":"F40AB911333C62","user_header":"https://static001.geekbang.org/account/avatar/00/12/f0/d4/14fcb621.jpg","comment_is_top":false,"comment_ctime":1545033431,"is_pvip":false,"replies":[{"id":"18200","content":"这个专栏其实更关注于这些性能或者监控背后的原理和机制，我们为什么要做这些监控。<br><br>立足在人的成长上面，监控平台的介绍后面有穿插部分，但是好用的的确不太多","user_name":"作者回复","user_name_real":"张绍文","uid":"1009577","ctime":1545039396,"ip_address":"","comment_id":50712,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1545033431","product_id":100021101,"comment_content":"在文章中很多地方都说到监控平台的重要性，但是面对一般公司，是没有那个资源和能力去给app搭建一个app的监控平台的，何况这个还需要兼顾ios平台，我想作者能否介绍一下关于这个种平台的现状和如果要搭建一个监控平台有没有成熟的方案呢，  谢谢","like_count":0,"discussions":[{"author":{"id":1009577,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/67/a9/e251ace7.jpg","nickname":"张绍文","note":"","ucode":"94B49E5F80BFDE","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":433069,"discussion_content":"这个专栏其实更关注于这些性能或者监控背后的原理和机制，我们为什么要做这些监控。\n\n立足在人的成长上面，监控平台的介绍后面有穿插部分，但是好用的的确不太多","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1545039396,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":49549,"user_name":"刘伟","can_delete":false,"product_type":"c1","uid":1317862,"ip_address":"","ucode":"B62EF9B5E0C8E1","user_header":"https://static001.geekbang.org/account/avatar/00/14/1b/e6/6a88c8a3.jpg","comment_is_top":false,"comment_ctime":1544711275,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1544711275","product_id":100021101,"comment_content":"大佬们解决问题的方式果然是全面，能看到的点比较多，学习中，还需要不断的扩大知识面","like_count":0},{"had_liked":false,"id":49523,"user_name":"IOT..Yang","can_delete":false,"product_type":"c1","uid":1240343,"ip_address":"","ucode":"11589D83B67FE9","user_header":"https://static001.geekbang.org/account/avatar/00/12/ed/17/c3eb014f.jpg","comment_is_top":false,"comment_ctime":1544705289,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1544705289","product_id":100021101,"comment_content":"我们主要做过2方面优化，一是对图片进行裁剪和主动回收，我们是利用fresco库的，它把bitmap缓存到native中，我们自定义了几个级别的尺寸，开发人员可根据具体的需求来决定使用的尺寸；我们还会记录当前页面所使用图片url，在当前Activity finish后，我们会主动回收当前页面所使用的图片。二是利用Leakcanary去分析内存泄漏，然后解决。相对来说，优化的比较简单。","like_count":0},{"had_liked":false,"id":49239,"user_name":"彩虹","can_delete":false,"product_type":"c1","uid":1178626,"ip_address":"","ucode":"F9BD8D1161E5B4","user_header":"https://static001.geekbang.org/account/avatar/00/11/fc/02/afb33b20.jpg","comment_is_top":false,"comment_ctime":1544629553,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1544629553","product_id":100021101,"comment_content":"醍醐灌顶，对内存优化有了一个新的角度！","like_count":0},{"had_liked":false,"id":48755,"user_name":"许圣明","can_delete":false,"product_type":"c1","uid":1026695,"ip_address":"","ucode":"2549A0CB2F7821","user_header":"https://static001.geekbang.org/account/avatar/00/0f/aa/87/7f44ec43.jpg","comment_is_top":false,"comment_ctime":1544530189,"is_pvip":false,"replies":[{"id":"17598","content":"是8.0以上的系统吗？8.0 bitmap内存不在java堆了，我在readme更新一下","user_name":"作者回复","user_name_real":"张绍文","uid":"1009577","ctime":1544590621,"ip_address":"","comment_id":48755,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1544530189","product_id":100021101,"comment_content":"你好，课后作业我用 HAHA 来调试了下，发现有的 hprof 文件解析后 ClassInstance 没有 mBuffer field，请问这种情况如何分析呢？","like_count":0,"discussions":[{"author":{"id":1009577,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/67/a9/e251ace7.jpg","nickname":"张绍文","note":"","ucode":"94B49E5F80BFDE","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":432336,"discussion_content":"是8.0以上的系统吗？8.0 bitmap内存不在java堆了，我在readme更新一下","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1544590621,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":48726,"user_name":"learn","can_delete":false,"product_type":"c1","uid":1275304,"ip_address":"","ucode":"FC0C464426D558","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/9rpAwtJfuJL84ia8jOsWtdicicAmZ1XL1bv0K4bg0paxuEmL5BIT1exTDMibmyPbq15NFuTMZIHc1O2GghytUBIiavA/132","comment_is_top":false,"comment_ctime":1544523007,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1544523007","product_id":100021101,"comment_content":"有没有windows安装整个检测工具的流程？好像国内用git clone不了，直接下载的，加了环境变量但输入gclient说不是内部命令，我cd到目录也一样","like_count":0},{"had_liked":false,"id":48552,"user_name":"张亮","can_delete":false,"product_type":"c1","uid":1180355,"ip_address":"","ucode":"CC3526F0A96318","user_header":"https://static001.geekbang.org/account/avatar/00/12/02/c3/e9026d82.jpg","comment_is_top":false,"comment_ctime":1544487185,"is_pvip":false,"replies":[{"id":"17375","content":"这个没那么复杂，只要稍微了解一下hprof文件的格式就可以。<br><br>而且现在有很多类似haha库的工具可以辅助，不需要计算机系统知识","user_name":"作者回复","user_name_real":"张绍文","uid":"1009577","ctime":1544492472,"ip_address":"","comment_id":48552,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1544487185","product_id":100021101,"comment_content":"张大婶，如果能做到向您一样自研hprof分析工具，需要准备哪些知识呢？深入理解计算机系统这本书是不是要看懂呢","like_count":0,"discussions":[{"author":{"id":1009577,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/67/a9/e251ace7.jpg","nickname":"张绍文","note":"","ucode":"94B49E5F80BFDE","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":432241,"discussion_content":"这个没那么复杂，只要稍微了解一下hprof文件的格式就可以。\n\n而且现在有很多类似haha库的工具可以辅助，不需要计算机系统知识","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1544492472,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":48453,"user_name":"HI","can_delete":false,"product_type":"c1","uid":1238921,"ip_address":"","ucode":"C65218113883E6","user_header":"https://static001.geekbang.org/account/avatar/00/12/e7/89/207cc841.jpg","comment_is_top":false,"comment_ctime":1544447379,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1544447379","product_id":100021101,"comment_content":"对于刚才我提的问题，我找到问题了。。。<br><br>int JNI_OnLoad(JavaVM* vm, void* reserved) {<br>    JNIEnv *env;<br>    if ((*vm)-&gt;GetEnv(env,(void **) &amp;env, JNI_VERSION_1_4) != JNI_OK) {<br>        LOGD(&quot;Failed to get the environment using GetEnv()&quot;);<br>        return -1;<br>    }<br>   ...<br>}<br><br>原来是第一个参数写错了。。。之前从cpp文件复制过来的时候粗鲁的改了下导致的，在c文件下正确的写法应该为<br>jint JNI_OnLoad(JavaVM *vm, void *reserved) {<br>    JNIEnv *env = 0;<br>    if ((*vm)-&gt;GetEnv(vm, (void **) &amp;env, JNI_VERSION_1_6) != JNI_OK) {<br>        return -1;<br>    }<br>    ....<br>}<br><br>但是 我按错误的写，编译armv7的时候没有任何的提示，运行的时候，也不会闪退。。。。。导致以为代码没有问题。。。 说到底 对 NDK的支持还不够好","like_count":0},{"had_liked":false,"id":48432,"user_name":"HI","can_delete":false,"product_type":"c1","uid":1238921,"ip_address":"","ucode":"C65218113883E6","user_header":"https://static001.geekbang.org/account/avatar/00/12/e7/89/207cc841.jpg","comment_is_top":false,"comment_ctime":1544443413,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1544443413","product_id":100021101,"comment_content":"你好，我想请问一个问题，原本在Ubuntu下面使用NDk交叉编译成功，并且在x86的模拟器上可以运行的，但是当我移植到Android Studio上的时候，一直删除，下面是打印的日志<br><br>ABI: &#39;x86&#39;<br>12-10 19:51:28.514 1362-1362&#47;? I&#47;DEBUG: signal 11 (SIGSEGV), code 1 (SEGV_MAPERR), fault addr 0xf66c174<br>12-10 19:51:28.519 1362-1362&#47;? I&#47;DEBUG:     #00 pc 0f66c174  &lt;unknown&gt;<br>12-10 19:51:28.519 1362-1362&#47;? I&#47;DEBUG:     #01 pc 0032677d  &#47;system&#47;lib&#47;libart.so (art::JavaVMExt::LoadNativeLibrary(std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const&amp;, art::Handle&lt;art::mirror::ClassLoader&gt;, <br>std::__1::basic_string&lt;char, <br><br>我在使用x86下面的 i686-linux-android-addr2line.exe  0xf66c174 demo.so 打印的结果为<br>i686-linux-android-addr2line.exe: &#39;a.out&#39;: No such file<br><br>通过在程序中打印日志，下面是程序的代码<br>int JNI_OnLoad(JavaVM* vm, void* reserved) {<br>    LOGD(&quot;JNI_OnLoad before&quot;);<br>    JNIEnv *env;<br>    if ((*vm)-&gt;GetEnv(env,(void **) &amp;env, JNI_VERSION_1_4) != JNI_OK) {<br>        LOGD(&quot;Failed to get the environment using GetEnv()&quot;);<br>        return -1;<br>    }<br>    LOGD(&quot;GetEnv success&quot;);<br><br>而闪退的时候，日志为<br>NewOpusNative: JNI_OnLoad before<br><br>请问是由于什么问题引起的。。a.out 这个文件，也不是我加载的","like_count":0},{"had_liked":false,"id":48324,"user_name":"蚂蚁内推+v","can_delete":false,"product_type":"c1","uid":1050508,"ip_address":"","ucode":"24B10AEE54B3FD","user_header":"https://static001.geekbang.org/account/avatar/00/10/07/8c/0d886dcc.jpg","comment_is_top":false,"comment_ctime":1544421934,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1544421934","product_id":100021101,"comment_content":"绍文老师，我对您资源图片那块apk 和 内存的关系没太理解。图片加载出来才会占用内存（您表格那边写的pixedl data 这不太理解），第二，资源（native 层为什么 会是压缩的呢，我只知道 java 层有个 AssetManager 对象 ） 方便稍微详细解答下吗<br>","like_count":0},{"had_liked":false,"id":48279,"user_name":"清风明月","can_delete":false,"product_type":"c1","uid":1330147,"ip_address":"","ucode":"45E8660C58A393","user_header":"https://static001.geekbang.org/account/avatar/00/14/4b/e3/77410a44.jpg","comment_is_top":false,"comment_ctime":1544410297,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1544410297","product_id":100021101,"comment_content":"分享前段时间项目中遇到的一个内存泄露的问题，多进程的项目，idle作为通信方式，订阅一些change事件，一开始将Listener写成内部类的方式进行使用，主动置为null作为destroy的策略，奇怪的是使用MAT仍可以找到一个8字节的引用，改为嵌套类后就没有这个问题了，怀疑这8字节是另一个进程对他的一个指针引用，想请教下大佬这种情况如何去分析","like_count":0},{"had_liked":false,"id":48266,"user_name":"蚂蚁内推+v","can_delete":false,"product_type":"c1","uid":1050508,"ip_address":"","ucode":"24B10AEE54B3FD","user_header":"https://static001.geekbang.org/account/avatar/00/10/07/8c/0d886dcc.jpg","comment_is_top":false,"comment_ctime":1544407686,"is_pvip":false,"replies":[{"id":"17214","content":"我们使用adb shell dumpsys meminfo packagename的时候，下面也会出现这个表。<br><br>图中的意思是安装包中这些文件会占用内存。例如启动的时候会把so apk dex这些mmap到内存，所以会占那部分的内存。","user_name":"作者回复","user_name_real":"张绍文","uid":"1009577","ctime":1544408737,"ip_address":"","comment_id":48266,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1544407686","product_id":100021101,"comment_content":"张老师您好 安装包大小和内存占用大小的那张表格没太理解好，方便绍文老师解释下吗？","like_count":0,"discussions":[{"author":{"id":1009577,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/67/a9/e251ace7.jpg","nickname":"张绍文","note":"","ucode":"94B49E5F80BFDE","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":432095,"discussion_content":"我们使用adb shell dumpsys meminfo packagename的时候，下面也会出现这个表。\n\n图中的意思是安装包中这些文件会占用内存。例如启动的时候会把so apk dex这些mmap到内存，所以会占那部分的内存。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1544408737,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1388940,"avatar":"","nickname":"落叶有义","note":"","ucode":"12673608190E55","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":335892,"discussion_content":"所以是占用进程的方法区空间吗？导致堆空间变小了是吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1608368957,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":48189,"user_name":"浮生若梦","can_delete":false,"product_type":"c1","uid":1332340,"ip_address":"","ucode":"E91DA437AA6585","user_header":"https://static001.geekbang.org/account/avatar/00/14/54/74/dd1ec36b.jpg","comment_is_top":false,"comment_ctime":1544400460,"is_pvip":false,"replies":[{"id":"17212","content":"好的，后面多补充一些参考资料，不过也有人反馈目前的参考资料已经够多了","user_name":"作者回复","user_name_real":"张绍文","uid":"1009577","ctime":1544408517,"ip_address":"","comment_id":48189,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1544400460","product_id":100021101,"comment_content":"邵文哥你好，非常希望能介绍工具的同时穿插一些现有的内存优化的文章链接，让我们一些还不是很了解的同学先去学习一下，感谢","like_count":0,"discussions":[{"author":{"id":1009577,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/67/a9/e251ace7.jpg","nickname":"张绍文","note":"","ucode":"94B49E5F80BFDE","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":432066,"discussion_content":"好的，后面多补充一些参考资料，不过也有人反馈目前的参考资料已经够多了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1544408517,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":48149,"user_name":"L","can_delete":false,"product_type":"c1","uid":1330979,"ip_address":"","ucode":"8514C3CABFCC84","user_header":"https://static001.geekbang.org/account/avatar/00/14/4f/23/db8403c7.jpg","comment_is_top":false,"comment_ctime":1544368525,"is_pvip":false,"replies":[{"id":"17205","content":"有可能，那块其实也有其他方案可以解决","user_name":"作者回复","user_name_real":"张绍文","uid":"1009577","ctime":1544408308,"ip_address":"","comment_id":48149,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1544368525","product_id":100021101,"comment_content":"最近微信版本手机ota升级后，马上微信冷启动必现黑屏，貌似比较严重！怀疑跟tinker机制相关！","like_count":0,"discussions":[{"author":{"id":1009577,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/67/a9/e251ace7.jpg","nickname":"张绍文","note":"","ucode":"94B49E5F80BFDE","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":432053,"discussion_content":"有可能，那块其实也有其他方案可以解决","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1544408308,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":48103,"user_name":".y","can_delete":false,"product_type":"c1","uid":1340096,"ip_address":"","ucode":"DD2893C0BD5C4B","user_header":"https://static001.geekbang.org/account/avatar/00/14/72/c0/11cf22de.jpg","comment_is_top":false,"comment_ctime":1544354873,"is_pvip":false,"replies":[{"id":"17200","content":"使用native hook方案一般都只用于灰度或者自动化测试中，而且保证影响面和自动回退方案。","user_name":"作者回复","user_name_real":"张绍文","uid":"1009577","ctime":1544408227,"ip_address":"","comment_id":48103,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1544354873","product_id":100021101,"comment_content":"关于Hprof 文件裁剪和自动化分析，我司也做了一些尝试，只实现了自动化分析，未实现Hprof 文件裁剪，因未找到合适hook点和对native hook的兼容性持怀疑态度，最后内存线上监控计划也不了了之，希望张哥能指点一二","like_count":0,"discussions":[{"author":{"id":1009577,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/67/a9/e251ace7.jpg","nickname":"张绍文","note":"","ucode":"94B49E5F80BFDE","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":432026,"discussion_content":"使用native hook方案一般都只用于灰度或者自动化测试中，而且保证影响面和自动回退方案。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1544408227,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":48078,"user_name":"LD","can_delete":false,"product_type":"c1","uid":1331218,"ip_address":"","ucode":"0AE2613B44C108","user_header":"https://static001.geekbang.org/account/avatar/00/14/50/12/74d414d4.jpg","comment_is_top":false,"comment_ctime":1544343738,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1544343738","product_id":100021101,"comment_content":"感觉对于程序优化来说   发现问题几乎都比解决问题困难，所以我觉得文章花绝大部分篇幅去讲监控也是合理的。至于如何去解决，发现了问题再去网上搜集资料，去调研就可以。","like_count":0},{"had_liked":false,"id":48052,"user_name":"王城波","can_delete":false,"product_type":"c1","uid":1326423,"ip_address":"","ucode":"9C410E3324EE25","user_header":"https://static001.geekbang.org/account/avatar/00/14/3d/57/074e4162.jpg","comment_is_top":false,"comment_ctime":1544334685,"is_pvip":false,"replies":[{"id":"17191","content":"只是内存泄露可能都会有很多常见的case，主要还是想让大家知道一些思路跟经验，具体怎么做可以再通过课外学习","user_name":"作者回复","user_name_real":"张绍文","uid":"1009577","ctime":1544407986,"ip_address":"","comment_id":48052,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1544334685","product_id":100021101,"comment_content":"我觉得绍文哥主要讲监控目的是教会大家怎么自己思考去发现内存问题。内存优化这个命题本身就是很宽泛，具体到每个点可能都需要一篇文章来讲解，框架，Native，SDK，甚至是成熟三方库都可能引发内存问题，我们更需要在大方向上把握内存问题，认准问题在哪才能对症下药，同理授人以鱼不如授人以渔。<br><br>PS：希望绍文哥能提供一些实际比较经典的优化案例，可以作为课外学习的链接啥的供大家学习。","like_count":0,"discussions":[{"author":{"id":1009577,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/67/a9/e251ace7.jpg","nickname":"张绍文","note":"","ucode":"94B49E5F80BFDE","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":432008,"discussion_content":"只是内存泄露可能都会有很多常见的case，主要还是想让大家知道一些思路跟经验，具体怎么做可以再通过课外学习","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1544407986,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":48025,"user_name":"深蓝浅蓝","can_delete":false,"product_type":"c1","uid":1334187,"ip_address":"","ucode":"ED8E469E756D30","user_header":"https://static001.geekbang.org/account/avatar/00/14/5b/ab/a270b88f.jpg","comment_is_top":false,"comment_ctime":1544324498,"is_pvip":false,"replies":[{"id":"17179","content":"后面会公开的","user_name":"作者回复","user_name_real":"张绍文","uid":"1009577","ctime":1544407603,"ip_address":"","comment_id":48025,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1544324498","product_id":100021101,"comment_content":"下一期可否公开作业的实现源码供大家学习？","like_count":0,"discussions":[{"author":{"id":1009577,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/67/a9/e251ace7.jpg","nickname":"张绍文","note":"","ucode":"94B49E5F80BFDE","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":431993,"discussion_content":"后面会公开的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1544407603,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":47955,"user_name":"牵手约定","can_delete":false,"product_type":"c1","uid":1249461,"ip_address":"","ucode":"01AF328FDDD38C","user_header":"https://static001.geekbang.org/account/avatar/00/13/10/b5/0813608c.jpg","comment_is_top":false,"comment_ctime":1544266452,"is_pvip":false,"replies":[{"id":"17067","content":"可以看看github上面有详细的说明<br><br>https:&#47;&#47;github.com&#47;AndroidAdvanceWithGeektime&#47;Chapter04","user_name":"作者回复","user_name_real":"张绍文","uid":"1009577","ctime":1544283238,"ip_address":"","comment_id":47955,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1544266452","product_id":100021101,"comment_content":"老师，这个作业不明白是怎么回事。","like_count":0,"discussions":[{"author":{"id":1009577,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/67/a9/e251ace7.jpg","nickname":"张绍文","note":"","ucode":"94B49E5F80BFDE","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":431959,"discussion_content":"可以看看github上面有详细的说明\n\nhttps://github.com/AndroidAdvanceWithGeektime/Chapter04","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1544283238,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":47871,"user_name":"Kenny","can_delete":false,"product_type":"c1","uid":1234061,"ip_address":"","ucode":"E57D67DCE27967","user_header":"https://static001.geekbang.org/account/avatar/00/12/d4/8d/a3fd8957.jpg","comment_is_top":false,"comment_ctime":1544241176,"is_pvip":false,"replies":[{"id":"17064","content":"微信没有用，支付宝的那个方法只能针对dalvik，其实上4.×已经很少了。<br><br>二来我们更希望可以真正发现问题解决问题。而不是通过黑科技去做这些事情，也有可能会带来兼容性问题","user_name":"作者回复","user_name_real":"张绍文","uid":"1009577","ctime":1544282949,"ip_address":"","comment_id":47871,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1544241176","product_id":100021101,"comment_content":"张老师，你好，最近在做启动优化，遇到了瓶颈。之前看到过支付宝采用了gc抑制技术来提升启动速度，话说微信是否也同样采用了？看到本章讲了GC<br>监控，话说如果启动过程是检测到大量阻塞式GC耗时，那么优先是优化内存？麻烦张老师答疑。","like_count":0,"discussions":[{"author":{"id":1009577,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/67/a9/e251ace7.jpg","nickname":"张绍文","note":"","ucode":"94B49E5F80BFDE","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":431920,"discussion_content":"微信没有用，支付宝的那个方法只能针对dalvik，其实上4.×已经很少了。\n\n二来我们更希望可以真正发现问题解决问题。而不是通过黑科技去做这些事情，也有可能会带来兼容性问题","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1544282949,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]}]}