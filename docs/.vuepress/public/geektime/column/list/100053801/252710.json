{"id":252710,"title":"03 | 声明式图形系统：如何用SVG图形元素绘制可视化图表？","content":"<p>你好，我是月影。今天，我们来讲SVG。</p><p>SVG的全称是Scalable Vector Graphics，可缩放矢量图，它是浏览器支持的一种基于XML语法的图像格式。</p><p>对于前端工程师来说，使用SVG的门槛很低。因为描述SVG的XML语言本身和HTML非常接近，都是由标签+属性构成的，而且浏览器的CSS、JavaScript都能够正常作用于SVG元素。这让我们在操作SVG时，没什么特别大的难度。甚至，我们可以认为，<strong>SVG就是HTML的增强版</strong>。</p><p>对于可视化来说，SVG是非常重要的图形系统。它既可以用JavaScript操作绘制各种几何图形，还可以作为浏览器支持的一种图片格式，来 独立使用img标签加载或者通过Canvas绘制。即使我们选择使用HTML和CSS、Canvas2D或者WebGL的方式来实现可视化，但我们依然可以且很有可能会使用到SVG图像。所以，关于SVG我们得好好学。</p><p>那这一节课，我们就来聊聊SVG是怎么绘制可视化图表的，以及它的局限性是什么。希望通过今天的讲解，你能掌握SVG的基本用法和使用场景。</p><h2>利用SVG绘制几何图形</h2><p>在第1节课我们讲过，SVG属于<strong>声明式绘图系统</strong>，它的绘制方式和Canvas不同，它不需要用JavaScript操作绘图指令，只需要和HTML一样，声明一些标签就可以实现绘图了。</p><!-- [[[read_end]]] --><p>那SVG究竟是如何绘图的呢？我们先来看一个SVG声明的例子。</p><pre><code>&lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; version=&quot;1.1&quot;&gt;\n  &lt;circle cx=&quot;100&quot; cy=&quot;50&quot; r=&quot;40&quot; stroke=&quot;black&quot;\n  stroke-width=&quot;2&quot; fill=&quot;orange&quot; /&gt;\n&lt;/svg&gt;\n</code></pre><p>在上面的代码中，svg元素是SVG的根元素，属性xmlns是xml的名字空间。那第一行代码就表示，svg元素的xmlns属性值是\"<a href=\"http://www.w3.org/2000/svg\">http://www.w3.org/2000/svg</a>\"，浏览器根据这个属性值就能够识别出这是一段SVG的内容了。</p><p>svg元素下的circle元素表示这是一个绘制在SVG图像中的圆形，属性cx和cy是坐标，表示圆心的位置在图像的x=100、y=50处。属性r表示半径，r=40表示圆的半径为40。</p><p>以上，就是这段代码中的主要属性。如果仔细观察你会发现，我们并没有给100、50、40指定单位。这是为什么呢？</p><p>因为SVG坐标系和Canvas坐标系完全一样，都是以图像左上角为原点，x轴向右，y轴向下的左手坐标系。而且在默认情况下，SVG坐标与浏览器像素对应，所以100、50、40的单位就是px，也就是像素，不需要特别设置。</p><p>说到这，你还记得吗？在Canvas中，为了让绘制出来的图形适配不同的显示设备，我们要设置Canvas画布坐标。同理，我们也可以通过给svg元素设置viewBox属性，来改变SVG的坐标系。如果设置了viewBox属性，那SVG内部的绘制就都是相对于SVG坐标系的了。</p><p>好，现在我们已经知道上面这段代码的含义了。那接下来，我们把它写入HTML文档中，就可以在浏览器中绘制出一个带黑框的橙色圆形了。</p><p><img src=\"https://static001.geekbang.org/resource/image/c0/7f/c0617044406c562834c9e3db9d6d877f.jpg?wh=1920*1080\" alt=\"\" title=\"黑色外框的圆形\"></p><p>现在，我们已经知道了SVG的基本用法了。总的来说，它和HTML的用法基本一样，你可以参考HTML的用法。那接下来，我还是以上一节课实现的层次关系图为例，来看看使用SVG该怎么实现。</p><h2>利用SVG绘制层次关系图</h2><p>我们先来回忆一下，上一节课我们要实现的层次关系图，是在一组给出的层次结构数据中，体现出同属于一个省的城市。数据源和前一节课相同，所以数据的获取部分并没有什么差别。这里我就不列出来了，我们直接来讲绘制的过程。</p><p>首先，我们要将获取Canvas对象改成获取SVG对象，方法是一样的，还是通过选择器来实现。</p><pre><code>const svgroot = document.querySelector('svg');\n</code></pre><p>然后，我们同样实现draw方法从root开始遍历数据对象。 不过，在draw方法里，我们不是像上一讲那样，通过Canvas的2D上下文调用绘图指令来绘图，而是通过创建SVG元素，将元素添加到DOM文档里，让图形显示出来。具体代码如下：</p><pre><code>function draw(parent, node, {fillStyle = 'rgba(0, 0, 0, 0.2)', textColor = 'white'} = {}) {\n    const {x, y, r} = node;\n    const circle = document.createElementNS('http://www.w3.org/2000/svg', 'circle');\n    circle.setAttribute('cx', x);\n    circle.setAttribute('cy', y);\n    circle.setAttribute('r', r);\n    circle.setAttribute('fill', fillStyle);\n    parent.appendChild(circle);\n    ...\n}\n\ndraw(svgroot, root);\n\n\n</code></pre><p>从上面的代码中你可以看到，我们是使用<strong>document.createElementNS方法</strong>来创建SVG元素的。这里你要注意，与使用document.createElement方法创建普通的HTML元素不同，SVG元素要使用document.createElementNS方法来创建。</p><p>其中，第一个参数是名字空间，对应SVG名字空间http://www.w3.org/2000/svg。第二个参数是要创建的元素标签名，因为要绘制圆型，所以我们还是创建circle元素。然后我们将x、y、r分别赋给circle元素的cx、cy、r属性，将fillStyle赋给circle元素的fill属性。最后，我们将circle元素添加到它的parent元素上去。</p><p>接着，我们遍历下一级数据。这次，我们创建一个SVG的g元素，递归地调用draw方法。具体代码如下：</p><pre><code>if(children) {\n    const group = document.createElementNS('http://www.w3.org/2000/svg', 'g');\n    for(let i = 0; i &lt; children.length; i++) {\n      draw(group, children[i], {fillStyle, textColor});\n    }\n    parent.appendChild(group);\n  }\n</code></pre><p>SVG的g元素表示一个分组，我们可以用它来对SVG元素建立起层级结构。而且，如果我们给g元素设置属性，那么它的子元素会继承这些属性。</p><p>最后，如果下一级没有数据了，那我们还是需要给它添加文字。在SVG中添加文字，只需要创建text元素，然后给这个元素设置属性就可以了。操作非常简单，你看我给出的代码就可以理解了。</p><pre><code>else {\n    const text = document.createElementNS('http://www.w3.org/2000/svg', 'text');\n    text.setAttribute('fill', textColor);\n    text.setAttribute('font-family', 'Arial');\n    text.setAttribute('font-size', '1.5rem');\n    text.setAttribute('text-anchor', 'middle');\n    text.setAttribute('x', x);\n    text.setAttribute('y', y);\n    const name = node.data.name;\n    text.textContent = name;\n    parent.appendChild(text);\n  }\n</code></pre><p>这样，我们就实现了SVG版的层次关系图。你看，它是不是看起来和前一节利用Canvas绘制的层次关系图没什么差别？纸上得来终觉浅，你可以自己动手实现一下，这样理解得会更深刻。</p><p><img src=\"https://static001.geekbang.org/resource/image/07/bf/072dbcd9607dd7feafa47e34f97784bf.jpeg?wh=1920*1080\" alt=\"\" title=\"层次关系图\"></p><h2>SVG和Canvas的不同点</h2><p>那么问题就来了，既然SVG和Canvas最终的实现效果没什么差别，那在实际使用的时候，我们该如何选择呢？这就需要我们了解SVG和Canvas在使用上的不同点。知道了这些不同点，我们就能在合适的场景下选择合适的图形系统了。</p><p>SVG和Canvas在使用上的不同主要可以分为两点，分别是<strong>写法上的不同</strong>和<strong>用户交互实现上</strong>的不同。下面，我们一一来看。</p><h3>1. 写法上的不同</h3><p>第1讲我们说过，SVG是以创建图形元素绘图的“声明式”绘图系统，Canvas是执行绘图指令绘图的“指令式”绘图系统。那它们在写法上具体有哪些不同呢，我们以层次关系图的绘制过程为例来对比一下。</p><p>在绘制层次关系图的过程中，SVG首先通过创建标签来表示图形元素，circle表示圆，g表示分组，text表示文字。接着，SVG通过元素的setAttribute给图形元素赋属性值，这个和操作HTML元素是一样的。</p><p>而Canvas先是通过上下文执行绘图指令来绘制图形，画圆是调用context.arc指令，然后再调用context.fill绘制，画文字是调用context.fillText指令。另外，Canvas还通过上下文设置状态属性，context.fillStyle设置填充颜色，conext.font设置元素的字体。我们设置的这些状态，在绘图指令执行时才会生效。</p><p>从写法上来看，因为SVG的声明式类似于HTML书写方式，本身对前端工程师会更加友好。但是，SVG图形需要由浏览器负责渲染和管理，将元素节点维护在DOM树中。这样做的缺点是，在一些动态的场景中，也就是需要频繁地增加、删除图形元素的场景中，SVG与一般的HTML元素一样会带来DOM操作的开销，所以SVG的渲染性能相对比较低。</p><p>那除了写法不同以外，SVG和Canvas还有其他区别吗？当然是有的，不过我要先卖一个关子，我们讲完一个例子再来说。</p><h3>2. 用户交互实现上的不同</h3><p>我们尝试给这个SVG版本的层次关系图添加一个功能，也就是当鼠标移动到某个区域时，这个区域会高亮，并且显示出对应的省-市信息。</p><p>因为SVG的一个图形对应一个元素，所以我们可以像处理DOM元素一样，很容易地给SVG图形元素添加对应的鼠标事件。具体怎么做呢？我们一起来看。</p><p>首先，我们要给SVG的根元素添加mousemove事件，添加代码的操作很简单，你可以直接看代码。</p><pre><code> let activeTarget = null;\n  svgroot.addEventListener('mousemove', (evt) =&gt; {\n    let target = evt.target;\n    if(target.nodeName === 'text') target = target.parentNode;\n    if(activeTarget !== target) {\n      if(activeTarget) activeTarget.setAttribute('fill', 'rgba(0, 0, 0, 0.2)');\n    }\n    target.setAttribute('fill', 'rgba(0, 128, 0, 0.1)');\n    activeTarget = target;\n  });\n\n</code></pre><p>就像是我们熟悉的HTML用法一样，我们通过事件冒泡可以处理每个圆上的鼠标事件。然后，我们把当前鼠标所在的圆的颜色填充成’rgba(0, 128, 0, 0.1)’，这个颜色是带透明的浅绿色。最终的效果就是当我们的鼠标移动到圆圈范围内的时候，当前鼠标所在的圆圈变为浅绿色。你也可以尝试设置其他的值，看看不同的实现效果。</p><p>接着，我们要实现显示对应的省-市信息。在这里，我们需要修改一下draw方法。具体的修改过程，可以分为两步。</p><p>第一步，是把省、市信息通过扩展属性data-name设置到svg的circle元素上，这样我们就可以在移动鼠标的时候，通过读取鼠标所在元素的属性，拿到我们想要展示的省、市信息了。具体代码如下：</p><pre><code>  function draw(parent, node, {fillStyle = 'rgba(0, 0, 0, 0.2)', textColor = 'white'} = {}) {\n    ...\n    const circle = document.createElementNS('http://www.w3.org/2000/svg', 'circle');\n    ...\n    circle.setAttribute('data-name', node.data.name);\n    ...\n    \n    if(children) {\n     const group = document.createElementNS('http://www.w3.org/2000/svg', 'g');\n      ...\n      group.setAttribute('data-name', node.data.name);\n      ...\n    } else {\n      ...\n    }\n  }\n\n</code></pre><p>第二步，我们要实现一个getTitle方法，从当前鼠标事件的target往上找parent元素，拿到“省-市”信息，把它赋给titleEl元素。这个titleEl元素是我们添加到网页上的一个h1元素，用来显示省、市信息。</p><pre><code> const titleEl = document.getElementById('title');\n\n  function getTitle(target) {\n    const name = target.getAttribute('data-name');\n    if(target.parentNode &amp;&amp; target.parentNode.nodeName === 'g') {\n      const parentName = target.parentNode.getAttribute('data-name');\n      return `${parentName}-${name}`;\n    }\n    return name;\n  }\n\n</code></pre><p>最后，我们就可以在mousemove事件中更新titleEl的文本内容了。</p><pre><code>\n  svgroot.addEventListener('mousemove', (evt) =&gt; {\n    ...\n    titleEl.textContent = getTitle(target);\n    ...\n  });\n</code></pre><p>这样，我们就实现了给层次关系图增加鼠标控制的功能，最终的效果如下图所示，完整的代码我放在<a href=\"https://github.com/akira-cn/graphics/tree/master/svg\">GitHub仓库</a>了，你可以自己去查看。</p><p><img src=\"https://static001.geekbang.org/resource/image/9c/2f/9c807df0cb2b4afyye6be3345a9c1a2f.gif?wh=542*540\" alt=\"\"></p><p>其实，我们上面讲的鼠标控制功能就是一个简单的用户交互功能。总结来说，利用SVG的一个图形对应一个svg元素的机制，我们就可以像操作普通的HTML元素那样，给svg元素添加事件实现用户交互了。所以，SVG有一个非常大的优点，那就是<strong>可以让图形的用户交互非常简单</strong>。</p><p>和SVG相比，利用Canvas对图形元素进行用户交互就没有那么容易了。不过，对于圆形的层次关系图来说，在Canvas图形上定位鼠标处于哪个圆中并不难，我们只需要计算一下鼠标到每个圆的圆心距离，如果这个距离小于圆的半径，我们就可以确定鼠标在某个圆内部了。这实际上就是上一节课我们留下的思考题，相信现在你应该可以做出来了。</p><p>但是试想一下，如果我们要绘制的图形不是圆、矩形这样的规则图形，而是一个复杂得多的多边形，我们又该怎样确定鼠标在哪个图形元素的内部呢？这对于Canvas来说，就是一个比较复杂的问题了。不过这也不是不能解决的，在后续的课程中，我们就会讨论如何用数学计算的办法来解决这个问题。</p><h2>绘制大量几何图形时SVG的性能问题</h2><p>虽然使用SVG绘图能够很方便地实现用户交互，但是有得必有失，SVG这个设计给用户交互带来便利性的同时，也带来了局限性。为什么这么说呢？因为它和DOM元素一样，以节点的形式呈现在HTML文本内容中，依靠浏览器的DOM树渲染。如果我们要绘制的图形非常复杂，这些元素节点的数量就会非常多。而节点数量多，就会大大增加DOM树渲染和重绘所需要的时间。</p><p>就比如说，在绘制如上的层次关系图时，我们只需要绘制数十个节点。但是如果是更复杂的应用，比如我们要绘制数百上千甚至上万个节点，这个时候，DOM树渲染就会成为性能瓶颈。事实上，在一般情况下，当SVG节点超过一千个的时候，你就能很明显感觉到性能问题了。</p><p>幸运的是，对于SVG的性能问题，我们也是有解决方案的。比如说，我们可以使用虚拟DOM方案来尽可能地减少重绘，这样就可以优化SVG的渲染。但是这些方案只能解决一部分问题，当节点数太多时，这些方案也无能为力。这个时候，我们还是得依靠Canvas和WebGL来绘图，才能彻底解决问题。</p><p>那在上万个节点的可视化应用场景中，SVG就真的一无是处了吗？当然不是。SVG除了嵌入HTML文档的用法，还可以直接作为一种图像格式使用。所以，即使是在用Canvas和WebGL渲染的应用场景中，我们也依然可能会用到SVG，将它作为一些局部的图形使用，这也会给我们的应用实现带来方便。在后续的课程中，我们会遇到这样的案例。</p><h2>要点总结</h2><p>这一节课我们学习了SVG的基本用法、优点和局限性。</p><p>我们知道，SVG作为一种浏览器支持的图像格式，既可以作为HTML内嵌元素使用，也可以作为图像通过img元素加载，或者绘制到Canvas内。</p><p>而用SVG绘制可视化图形与用Canvas绘制有明显区别，SVG通过创建标签来表示图形元素，然后将图形元素添加到DOM树中，交给DOM完成渲染。</p><p>使用DOM树渲染可以让图形元素的用户交互实现起来非常简单，因为我们可以直接对图形元素注册事件。但是这也带来问题，如果图形复杂，那么SVG的图形元素会非常多，这会导致DOM树渲染成为性能瓶颈。</p><h2>小试牛刀</h2><ol>\n<li>\n<p>DOM操作SVG元素和操作普通的HTML元素几乎没有差别，所以CSS也同样可以作用于SVG元素。那你可以尝试使用CSS，来设置这节课我们实现的层级关系图里，circle的背景色和文字属性。接着你也可以进一步想一想，这样做有什么好处？</p>\n</li>\n<li>\n<p>因为SVG可以作为一种图像格式使用，所以我们可以将生成的SVG作为图像，然后绘制到Canvas上。那如果我们先用SVG生成层级关系图，再用Canvas来完成绘制的话，和我们单独使用它们来绘图有什么不同？为什么？</p>\n</li>\n</ol><p>欢迎在留言区和我讨论，分享你的答案和思考，也欢迎你把这节课分享给你的朋友，我们下节课见！</p><hr><h2><span class=\"reference\">源码</span></h2><p><span class=\"reference\"><a href=\"https://github.com/akira-cn/graphics/tree/master/svg\">用SVG绘制层次关系图和给层次关系图增加鼠标控制的完整代码.</a></span></p>","neighbors":{"left":{"article_title":"02 |  指令式绘图系统：如何用Canvas绘制层次关系图？","id":252705},"right":{"article_title":"04 | GPU与渲染管线：如何用WebGL绘制最简单的几何图形？","id":254631}},"comments":[{"had_liked":false,"id":230004,"user_name":"宇宙全栈","can_delete":false,"product_type":"c1","uid":1001309,"ip_address":"","ucode":"2E984CA0ECFB85","user_header":"https://static001.geekbang.org/account/avatar/00/0f/47/5d/9afdf648.jpg","comment_is_top":false,"comment_ctime":1593239317,"is_pvip":false,"replies":[{"id":"84867","content":"赞～说得挺好的","user_name":"作者回复","comment_id":230004,"uid":"1159792","ip_address":"","utype":1,"ctime":1593247743,"user_name_real":"月影"}],"discussion_count":4,"race_medal":0,"score":"143327160085","product_id":100053801,"comment_content":"1. 使用 CSS 设置样式的好处：可以将样式和节点解耦，有利于样式的模块化和复用，比如多种主题色，一键换色等。<br>2. 先用 SVG 生成层级关系图，再用 Canvas 来完成绘制，此时 SVG 将作为一张静态图片被绘制在 Canvas 中。和单独使用 Canvas 绘图相比，这种混合方式代码量更少，代码更加可读，易维护。","like_count":34,"discussions":[{"author":{"id":1159792,"avatar":"https://static001.geekbang.org/account/avatar/00/11/b2/70/ba9cecc6.jpg","nickname":"月影","note":"","ucode":"298582FA7DBF27","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":499733,"discussion_content":"赞～说得挺好的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1593247743,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2146442,"avatar":"","nickname":"ssss","note":"","ucode":"6722D7C4091549","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":300980,"discussion_content":"请问 canvas 里绘制 svg 图片，会对 svg 有性能提升吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1598352260,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1249969,"avatar":"https://static001.geekbang.org/account/avatar/00/13/12/b1/3a112b27.jpg","nickname":"段帅帅","note":"","ucode":"2675BC0BE154E8","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":2146442,"avatar":"","nickname":"ssss","note":"","ucode":"6722D7C4091549","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":580435,"discussion_content":"你可以理解就是在canvas中插入一张图片","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1658187001,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":300980,"ip_address":""},"score":580435,"extra":""}]},{"author":{"id":2054153,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/58/09/51f81cc9.jpg","nickname":"蒋腾","note":"","ucode":"27DD3FB217C5AF","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":293992,"discussion_content":"第二个问题，如果svg是作为静态图片绘制在Canvas里，那svg的悬停变色事件还能被响应触发吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1595754790,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":229860,"user_name":"Geek_3469f6","can_delete":false,"product_type":"c1","uid":2047009,"ip_address":"","ucode":"AE8CA3C7A8EF86","user_header":"https://static001.geekbang.org/account/avatar/00/1f/3c/21/58f3740d.jpg","comment_is_top":false,"comment_ctime":1593166108,"is_pvip":false,"replies":[{"id":"84853","content":"对，看得非常仔细，这里的确是有问题，应该要设置这个节点之前的那个circle节点而不是group节点，你可以试着把github示例代码里面这块修复一下，然后提交一个pr","user_name":"作者回复","comment_id":229860,"uid":"1159792","ip_address":"","utype":1,"ctime":1593229400,"user_name_real":"月影"}],"discussion_count":3,"race_medal":0,"score":"31657937180","product_id":100053801,"comment_content":"if(target.nodeName === &#39;text&#39;) target = target.parentNode;<br> <br>请问，这句代码是不是有问题？找到文本节点的父节点，是group节点。设置了fill，有什么用处？","like_count":7,"discussions":[{"author":{"id":1159792,"avatar":"https://static001.geekbang.org/account/avatar/00/11/b2/70/ba9cecc6.jpg","nickname":"月影","note":"","ucode":"298582FA7DBF27","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":499672,"discussion_content":"对，看得非常仔细，这里的确是有问题，应该要设置这个节点之前的那个circle节点而不是group节点，你可以试着把github示例代码里面这块修复一下，然后提交一个pr","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1593229400,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1044760,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/f1/18/63b9bd3c.jpg","nickname":"宁康","note":"","ucode":"B7FB9DDFFF3F69","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":286448,"discussion_content":"if(target.nodeName === &#39;text&#39;) {\n   target = target.previousSibling\n} \n\n我这样改了下","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1593178497,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1292718,"avatar":"https://static001.geekbang.org/account/avatar/00/13/b9/ae/1962e54f.jpg","nickname":"造梦者","note":"","ucode":"3605C0F1A4E181","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":330992,"discussion_content":"        text {\n            font-family: Arial;\n            font-size: 15px;\n            text-anchor: middle;\n            fill: #f5f5f5;\n            pointer-events: none;\n        }\n        circle.active+text {\n            fill: #fff;\n        }\n用css也能解决","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1606744703,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":246493,"user_name":"Frojan","can_delete":false,"product_type":"c1","uid":1208246,"ip_address":"","ucode":"D6F4B53DFCB997","user_header":"https://static001.geekbang.org/account/avatar/00/12/6f/b6/51eda97d.jpg","comment_is_top":false,"comment_ctime":1599377997,"is_pvip":false,"replies":[{"id":"94974","content":"对，有得就有失","user_name":"作者回复","comment_id":246493,"uid":"1159792","ip_address":"","utype":1,"ctime":1605493497,"user_name_real":"月影"}],"discussion_count":1,"race_medal":0,"score":"18779247181","product_id":100053801,"comment_content":"canvas绘制svg，和单独用svg对比，好处是可以规避svg节点过多时的性能瓶颈，但是也失去了svg方便的可交互性。和单独用canvas对比，写法就由写一堆绘制指令变成了写声明式svg加一句绘图指令，单纯绘制性能在绘制指令多且复杂的情况貌似有比较大的提升？(这个不确定svg的解析时间是不是可以忽略) ，但是交互还得使用canvas的方式实现，如果要做动画也会变得麻烦。","like_count":5,"discussions":[{"author":{"id":1159792,"avatar":"https://static001.geekbang.org/account/avatar/00/11/b2/70/ba9cecc6.jpg","nickname":"月影","note":"","ucode":"298582FA7DBF27","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":505159,"discussion_content":"对，有得就有失","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1605493497,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":272743,"user_name":"Geek_00734e","can_delete":false,"product_type":"c1","uid":1559528,"ip_address":"","ucode":"5F641387DA2291","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Fnol5T7X9z9icw8yP1Zx5enHdYqbmP4EbNymaP87USujdeDp22QYMEwfYqkT7mOkXYegBZmhRx9bDbUbKGTPYlg/132","comment_is_top":false,"comment_ctime":1610259310,"is_pvip":false,"replies":[{"id":"101089","content":"因为屏幕像素密度问题，根据devicePixelRate不同要将canvas设置对大小","user_name":"作者回复","comment_id":272743,"uid":"1159792","ip_address":"","utype":1,"ctime":1612875734,"user_name_real":"月影"}],"discussion_count":2,"race_medal":0,"score":"14495161198","product_id":100053801,"comment_content":"SVG画出来的效果看着更加清晰，canvas画出来的好模糊，这是什么原因啊。尺寸都是一样的","like_count":4,"discussions":[{"author":{"id":1159792,"avatar":"https://static001.geekbang.org/account/avatar/00/11/b2/70/ba9cecc6.jpg","nickname":"月影","note":"","ucode":"298582FA7DBF27","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":513372,"discussion_content":"因为屏幕像素密度问题，根据devicePixelRate不同要将canvas设置对大小","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1612875734,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1377365,"avatar":"https://static001.geekbang.org/account/avatar/00/15/04/55/19943864.jpg","nickname":"要迅","note":"","ucode":"B2A75EF8090FFA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":345362,"discussion_content":"SVG绘制的是矢量图，不依赖分辨率的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1611714107,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":238823,"user_name":"颖","can_delete":false,"product_type":"c1","uid":2102406,"ip_address":"","ucode":"E498EF1BFEEE29","user_header":"https://static001.geekbang.org/account/avatar/00/20/14/86/54542ea4.jpg","comment_is_top":false,"comment_ctime":1596334004,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"14481235892","product_id":100053801,"comment_content":"老师能否多做一些svg交互的课程，不用js操作，我们有很大需求，愿意买课","like_count":4,"discussions":[{"author":{"id":1165817,"avatar":"https://static001.geekbang.org/account/avatar/00/11/c9/f9/39492855.jpg","nickname":"阿阳","note":"","ucode":"20A35FB86B1C5C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":584074,"discussion_content":"支持老师开新课","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1660619038,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"江苏"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1374421,"avatar":"https://static001.geekbang.org/account/avatar/00/14/f8/d5/fd04fcbc.jpg","nickname":"Kite","note":"","ucode":"9DACE8E0EC84A6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":298882,"discussion_content":"我也想要这样的课，这个课不能满足我当前的需求","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1597459524,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":230442,"user_name":"Geek_07ad60","can_delete":false,"product_type":"c1","uid":2041369,"ip_address":"","ucode":"D5381B940BCA87","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKCiciak9BCOSsuydrXxSklzpzbr3nqj1E5vZCPlPPUSZs5q4R6LAgI56Ria6hdJFEAibvZEca0O5Lxdg/132","comment_is_top":false,"comment_ctime":1593391810,"is_pvip":false,"replies":[{"id":"85306","content":"之所以说声明式是说svg只要声明一个元素添加到DOM树上就能绘制出来，而canvas则需要调用绘图指令，两者机制有区别。","user_name":"作者回复","comment_id":230442,"uid":"1159792","ip_address":"","utype":1,"ctime":1593563411,"user_name_real":"月影"}],"discussion_count":2,"race_medal":0,"score":"14478293698","product_id":100053801,"comment_content":"还是不太理解声明式和指令式，请老师再详解一下，谢谢！","like_count":2,"discussions":[{"author":{"id":1159792,"avatar":"https://static001.geekbang.org/account/avatar/00/11/b2/70/ba9cecc6.jpg","nickname":"月影","note":"","ucode":"298582FA7DBF27","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":499892,"discussion_content":"之所以说声明式是说svg只要声明一个元素添加到DOM树上就能绘制出来，而canvas则需要调用绘图指令，两者机制有区别。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1593563411,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1738309,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/86/45/fc301339.jpg","nickname":"Pillar","note":"","ucode":"251402895D7F17","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":288133,"discussion_content":"其实当用命令式的方式编写 svg 的时候，也就失去了声明式的意义。\n\n用纯的 html 标签写一个静态页面就是声明式的，但是如果用 JS 创建各种元素也可以做成页面，就是命令式的。\n\n将命令式代码与声明式代码比较好的融合方式，就是模板或者 jsx。这也是目前的各大框架相对 jQuery 的优势\n\n比如 \n1.  react-three-fiber 就是将 three 由命令式转换为声明式\n2. @react-pdf/renderer 将 pdf-kit 由命令式转换为声明式 \n","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1593656304,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":230287,"user_name":"Cailven","can_delete":false,"product_type":"c1","uid":1381478,"ip_address":"","ucode":"4F80DC0E86066A","user_header":"https://static001.geekbang.org/account/avatar/00/15/14/66/57b04294.jpg","comment_is_top":false,"comment_ctime":1593337065,"is_pvip":false,"replies":[{"id":"85019","content":"很棒","user_name":"作者回复","comment_id":230287,"uid":"1159792","ip_address":"","utype":1,"ctime":1593352370,"user_name_real":"月影"}],"discussion_count":2,"race_medal":0,"score":"14478238953","product_id":100053801,"comment_content":"关于svg，我补充一点，如今微信公众号互动图文支持使用svg制作交互和动画，但不支持js语言，因此掌握原生svg语言非常重要，并不是任何场景都可以使用js来声明和调用该系统的。","like_count":4,"discussions":[{"author":{"id":1159792,"avatar":"https://static001.geekbang.org/account/avatar/00/11/b2/70/ba9cecc6.jpg","nickname":"月影","note":"","ucode":"298582FA7DBF27","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":499827,"discussion_content":"很棒","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1593352370,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1999274,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/81/aa/1f7a8e88.jpg","nickname":"量子蔷薇","note":"","ucode":"EFD71A65DF2262","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":287346,"discussion_content":"虽然我不赞同你叙述的因果关系，但是我赞同你的结论。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1593421813,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":231681,"user_name":"coder","can_delete":false,"product_type":"c1","uid":1059952,"ip_address":"","ucode":"F70511D614B9F4","user_header":"https://static001.geekbang.org/account/avatar/00/10/2c/70/02b627a6.jpg","comment_is_top":false,"comment_ctime":1593746905,"is_pvip":false,"replies":[{"id":"85531","content":"一般Canvas更好，但也不是绝对的，还需要看具体做什么。绘制图形越多，Canvas相比SVG的性能优势会越明显。","user_name":"作者回复","comment_id":231681,"uid":"1159792","ip_address":"","utype":1,"ctime":1593749439,"user_name_real":"月影"}],"discussion_count":1,"race_medal":0,"score":"10183681497","product_id":100053801,"comment_content":"做可视化组件，从性能的角度来讲，是SVG好一些，还是Canvas好一些？","like_count":3,"discussions":[{"author":{"id":1159792,"avatar":"https://static001.geekbang.org/account/avatar/00/11/b2/70/ba9cecc6.jpg","nickname":"月影","note":"","ucode":"298582FA7DBF27","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":500405,"discussion_content":"一般Canvas更好，但也不是绝对的，还需要看具体做什么。绘制图形越多，Canvas相比SVG的性能优势会越明显。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1593749439,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":229857,"user_name":"特异型大光头","can_delete":false,"product_type":"c1","uid":2047839,"ip_address":"","ucode":"44CC71886FB121","user_header":"https://static001.geekbang.org/account/avatar/00/1f/3f/5f/053bc2da.jpg","comment_is_top":false,"comment_ctime":1593165495,"is_pvip":false,"replies":[{"id":"84854","content":"document.createElementNS(&#39;http:&#47;&#47;http:&#47;&#47;www.w3.org&#47;2000&#47;svg&#39;, &#39;circle&#39;);<br><br>这里写错了，应该是http:&#47;&#47;www.w3.org&#47;2000&#47;svg，你多写了一个http:","user_name":"作者回复","comment_id":229857,"uid":"1159792","ip_address":"","utype":1,"ctime":1593229783,"user_name_real":"月影"}],"discussion_count":2,"race_medal":0,"score":"10183100087","product_id":100053801,"comment_content":"&lt;!DOCTYPE html&gt;<br>&lt;html lang=&quot;en&quot;&gt;<br><br>&lt;head&gt;<br>    &lt;meta charset=&quot;UTF-8&quot;&gt;<br>    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;<br>    &lt;title&gt;Document&lt;&#47;title&gt;<br>&lt;&#47;head&gt;<br><br>&lt;body&gt;<br>    &lt;svg xmlns=&quot;http:&#47;&#47;www.w3.org&#47;2000&#47;svg&quot; version=&quot;1.1&quot;&gt;<br>    &lt;&#47;svg&gt;<br>    &lt;script&gt;<br>        const svgroot = document.querySelector(&#39;svg&#39;);<br>        const circle = document.createElementNS(&#39;http:&#47;&#47;http:&#47;&#47;www.w3.org&#47;2000&#47;svg&#39;, &#39;circle&#39;);<br>        circle.setAttribute(&#39;cx&#39;, 100);<br>        circle.setAttribute(&#39;cy&#39;, 100);<br>        circle.setAttribute(&#39;r&#39;, 50);<br>        circle.setAttribute(&#39;fill&#39;, &#39;#ff0000&#39;);<br>        svgroot.appendChild(circle);<br>    &lt;&#47;script&gt;<br>&lt;&#47;body&gt;<br><br>&lt;&#47;html&gt;<br>老师为何我创建后,控制台也生成了svg,和circle,但就是页面上显示不出来...<br>","like_count":2,"discussions":[{"author":{"id":1159792,"avatar":"https://static001.geekbang.org/account/avatar/00/11/b2/70/ba9cecc6.jpg","nickname":"月影","note":"","ucode":"298582FA7DBF27","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":499671,"discussion_content":"document.createElementNS(&amp;#39;http://http://www.w3.org/2000/svg&amp;#39;, &amp;#39;circle&amp;#39;);\n\n这里写错了，应该是http://www.w3.org/2000/svg，你多写了一个http:","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1593229783,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1026867,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/ab/33/75b1f724.jpg","nickname":"筑梦师刘渊","note":"","ucode":"35C309A266AC02","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":286557,"discussion_content":"兄弟，你看你js创建circle元素时候的命名空间....","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1593227461,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":229743,"user_name":"姚凯伦","can_delete":false,"product_type":"c1","uid":1308098,"ip_address":"","ucode":"B0FC353D06E041","user_header":"https://static001.geekbang.org/account/avatar/00/13/f5/c2/4e551270.jpg","comment_is_top":false,"comment_ctime":1593135977,"is_pvip":false,"replies":[{"id":"84856","content":"是的，path长导致图形绘制得太复杂也会有问题，具体要看你的数据量，如果达到瓶颈，不太好彻底解决，只能换成canvas2d或者webgl。在后续课程性能篇中会有详细的介绍。","user_name":"作者回复","comment_id":229743,"uid":"1159792","ip_address":"","utype":1,"ctime":1593229964,"user_name_real":"月影"}],"discussion_count":1,"race_medal":0,"score":"10183070569","product_id":100053801,"comment_content":"最近也遇到过用svg绘制元素太多导致渲染卡顿问题，后来改用使用一条 path 绘制所有元素，但是 path 一长也同样存在渲染卡顿问题，不知道老师有没有遇到过类似的问题","like_count":2,"discussions":[{"author":{"id":1159792,"avatar":"https://static001.geekbang.org/account/avatar/00/11/b2/70/ba9cecc6.jpg","nickname":"月影","note":"","ucode":"298582FA7DBF27","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":499621,"discussion_content":"是的，path长导致图形绘制得太复杂也会有问题，具体要看你的数据量，如果达到瓶颈，不太好彻底解决，只能换成canvas2d或者webgl。在后续课程性能篇中会有详细的介绍。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1593229964,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":300452,"user_name":"胖橘猫","can_delete":false,"product_type":"c1","uid":1230281,"ip_address":"","ucode":"DDE0F409616CD8","user_header":"","comment_is_top":false,"comment_ctime":1625183644,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5920150940","product_id":100053801,"comment_content":"只有我存在获取省市县三级json数据的问题吗？获取数据时候出现net::ERR_NAME_NOT_RESOLVED，ping 也无法ping通","like_count":1},{"had_liked":false,"id":326338,"user_name":"城南花已开","can_delete":false,"product_type":"c1","uid":2667591,"ip_address":"","ucode":"07BD0F0D51A512","user_header":"https://static001.geekbang.org/account/avatar/00/28/b4/47/8cdd9ee6.jpg","comment_is_top":false,"comment_ctime":1639474612,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1639474612","product_id":100053801,"comment_content":"老师，svg标签，g标签，text标签的xmlns属性值是怎么得来的？规定死的嘛？这个名字空间在使用的时候三个标签都保持了一致，在使用的时候名字空间需要注意什么嘛？","like_count":0},{"had_liked":false,"id":324066,"user_name":"南风知我意NY","can_delete":false,"product_type":"c1","uid":2436109,"ip_address":"","ucode":"72134ADF071F91","user_header":"https://static001.geekbang.org/account/avatar/00/25/2c/0d/4f270e21.jpg","comment_is_top":false,"comment_ctime":1638277490,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1638277490","product_id":100053801,"comment_content":"老师，获取地区数据接口报错怎么办？","like_count":0},{"had_liked":false,"id":321795,"user_name":"null","can_delete":false,"product_type":"c1","uid":1130862,"ip_address":"","ucode":"3C97A82395E95C","user_header":"https://static001.geekbang.org/account/avatar/00/11/41/6e/e04ab385.jpg","comment_is_top":false,"comment_ctime":1637049032,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1637049032","product_id":100053801,"comment_content":"作业1用 css 实现，使用了两种布局形式，优点就是布局和样式分离，可以使用 css 样式，很方便；<br>1: 嵌套式 https:&#47;&#47;github.com&#47;bjfecxn&#47;geek-visual-demo&#47;blob&#47;master&#47;basic&#47;city-css.html<br>2: 仿 svg 层级模式：https:&#47;&#47;github.com&#47;bjfecxn&#47;geek-visual-demo&#47;blob&#47;master&#47;basic&#47;city-css2.html<br><br>作业2：https:&#47;&#47;github.com&#47;bjfecxn&#47;geek-visual-demo&#47;blob&#47;master&#47;basic&#47;city-svg-canvas.html<br>可能是缺少实际项目经验，目前并没有感受到太多这样的好处，并且 canvas 明显模糊很多，看评论要根据 devicePixelRate 设置好 canvas；待优化～<br>","like_count":0},{"had_liked":false,"id":296060,"user_name":"阿东","can_delete":false,"product_type":"c1","uid":1500320,"ip_address":"","ucode":"E9393F62B4091D","user_header":"https://static001.geekbang.org/account/avatar/00/16/e4/a0/62a8b07e.jpg","comment_is_top":false,"comment_ctime":1622723827,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1622723827","product_id":100053801,"comment_content":"作业<br>1. 优点和html内联样式分离一样，缺点是需要更多的className节点<br>2. svg作为一张图片，会失去它原有的层级关系，适用于把整个svg当成单独对象处理的场景","like_count":0},{"had_liked":false,"id":293696,"user_name":"雨田²⁰¹⁸","can_delete":false,"product_type":"c1","uid":1137262,"ip_address":"","ucode":"65AD8E7BBE441A","user_header":"https://static001.geekbang.org/account/avatar/00/11/5a/6e/8ca500c6.jpg","comment_is_top":false,"comment_ctime":1621497208,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1621497208","product_id":100053801,"comment_content":"老师，我这边画了尺子，尺子上有旋转，缩放，关闭，切换线的ICON， 尺子我是用canvas纯moveTo lineTo画出来的，涉及到每次移动、按钮操作多需要重绘。<br><br>这种情况，用svg是否能性能更佳呢","like_count":0},{"had_liked":false,"id":266808,"user_name":"段亚东","can_delete":false,"product_type":"c1","uid":2359032,"ip_address":"","ucode":"BD85DA923D38B2","user_header":"https://static001.geekbang.org/account/avatar/00/23/fe/f8/9854ff33.jpg","comment_is_top":false,"comment_ctime":1607493729,"is_pvip":false,"replies":[{"id":"101097","content":"这节课讲svg呀","user_name":"作者回复","comment_id":266808,"uid":"1159792","ip_address":"","utype":1,"ctime":1612876015,"user_name_real":"月影"}],"discussion_count":1,"race_medal":0,"score":"1607493729","product_id":100053801,"comment_content":"这两个案例，为什么不直接用div css画呢？","like_count":0,"discussions":[{"author":{"id":1159792,"avatar":"https://static001.geekbang.org/account/avatar/00/11/b2/70/ba9cecc6.jpg","nickname":"月影","note":"","ucode":"298582FA7DBF27","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":511395,"discussion_content":"这节课讲svg呀","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1612876015,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":239876,"user_name":"Geek_cd63d9","can_delete":false,"product_type":"c1","uid":2015085,"ip_address":"","ucode":"1EF4B98DF1E171","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTL1H2TOJnNTblhmzJ2p88sTjvb86PuXP7A8HpCNKrfobuOc6Cxgy1UogZMIPTmD3VDGXZfTXIaWNw/132","comment_is_top":false,"comment_ctime":1596682466,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1596682466","product_id":100053801,"comment_content":"老师好，我实现的只显示最外层的圆，内层的dom结构有，但不显示，有时间能帮我看眼吗？https:&#47;&#47;github.com&#47;ByteJitter&#47;visualization&#47;blob&#47;master&#47;3&#47;2.html","like_count":0,"discussions":[{"author":{"id":1164585,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJUCiacuh59wMSAT3FstuBr36eK06X1ZypSsjNX7svoL9uu1AbC7eYMPVmFweac5K7YUEcFH5410Dg/132","nickname":"Geek_f76bfe","note":"","ucode":"883163E315AB8B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":304277,"discussion_content":"没有创建group的节点，再仔细看下老师在判断children那边的代码呢","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1599535510,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]}]}