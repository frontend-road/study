{"id":425013,"title":"加餐｜期中测试：来写一个简单的grep命令行","content":"<p>你好，我是陈天。</p><p>现在 Rust 基础篇已经学完了，相信你已经有足够的信心去应对一些简单的开发任务。今天我们就来个期中测试，实际考察一下你对 Rust 语言的理解以及对所学知识的应用情况。</p><p>我们要做的小工具是 rgrep，它是一个类似 grep 的工具。如果你是一个 *nix 用户，那大概率使用过 grep 或者 ag 这样的文本查找工具。</p><p>grep 命令用于查找文件里符合条件的字符串。如果发现某个文件的内容符合所指定的字符串，grep 命令会把含有字符串的那一行显示出；若不指定任何文件名称，或是所给予的文件名为&nbsp;<strong>-</strong>，grep 命令会从标准输入设备读取数据。</p><p>我们的 rgrep 要稍微简单一些，它可以支持以下三种使用场景：</p><p>首先是最简单的，给定一个字符串以及一个文件，打印出文件中所有包含该字符串的行：</p><pre><code class=\"language-plain\">$ rgrep Hello a.txt\n55: Hello world. This is an exmaple text\n</code></pre><p>然后放宽限制，允许用户提供一个正则表达式，来查找文件中所有包含该字符串的行：</p><pre><code class=\"language-plain\">$ rgrep Hel[^\\\\s]+ a.txt\n55: Hello world. This is an exmaple text\n89: Help me! I need assistant!\n</code></pre><!-- [[[read_end]]] --><p>如果这个也可以实现，那进一步放宽限制，允许用户提供一个正则表达式，来查找满足文件通配符的所有文件（你可以使用 <a href=\"https://docs.rs/globset/0.4.8/globset/\">globset</a> 或者 <a href=\"https://docs.rs/glob/0.3.0/glob/\">glob</a> 来处理通配符），比如：</p><pre><code class=\"language-plain\">$ rgrep Hel[^\\\\s]+ a*.txt\na.txt \n    55:1 Hello world. This is an exmaple text\n    89:1 Help me! I need assistant!\n    5:6  Use `Help` to get help.\nabc.txt:\n    100:1 Hello Tyr!\n</code></pre><p>其中，冒号前面的数字是行号，后面的数字是字符在这一行的位置。</p><p>给你一点小提示。</p><ul>\n<li>对于命令行的部分，你可以使用 <a href=\"https://docs.rs/clap/3.0.0-beta.4/clap/index.html\">clap3</a> 或者 <a href=\"https://docs.rs/structopt/0.3.23/structopt/\">structopt</a>，也可以就用 env.args()。</li>\n<li>对于正则表达式的支持，可以使用 <a href=\"https://github.com/rust-lang/regex\">regex</a>。</li>\n<li>至于文件的读取，可以使用 <a href=\"https://doc.rust-lang.org/std/fs/index.html\">std::fs</a> 或者 <a href=\"https://docs.rs/tokio/1.12.0/tokio/fs/index.html\">tokio::fs</a>。你可以顺序对所有满足通配符的文件进行处理，也可以用 <a href=\"https://docs.rs/rayon/1.5.1/rayon/\">rayon</a> 或者 <a href=\"https://docs.rs/tokio/1.12.0/tokio/\">tokio</a> 来并行处理。</li>\n<li>对于输出的结果，最好能把匹配的文字用不同颜色展示。</li>\n</ul><p><img src=\"https://static001.geekbang.org/resource/image/95/1f/95d87be96953d3655daf9c3yy8b6bf1f.png?wh=2356x1318\" alt=\"\" title=\"例如这样的输出\"></p><p>如果你有余力，可以看看 grep 的文档，尝试实现更多的功能。</p><p>祝你好运！</p><p>加油，我们下节课作业讲解见。</p>","neighbors":{"left":{"article_title":"22｜阶段实操（2）：构建一个简单的KV server-基本流程","id":425005},"right":{"article_title":"加餐｜期中测试：参考实现讲解","id":425015}},"comments":[{"had_liked":false,"id":316439,"user_name":"Custer","can_delete":false,"product_type":"c1","uid":1020822,"ip_address":"","ucode":"8AEA5544C94D57","user_header":"https://static001.geekbang.org/account/avatar/00/0f/93/96/575d42c3.jpg","comment_is_top":false,"comment_ctime":1634304171,"is_pvip":true,"replies":[{"id":"114690","content":"👍 非常好！","user_name":"作者回复","user_name_real":"Tyr","uid":"1079375","ctime":1634540253,"ip_address":"","comment_id":316439,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10224238763","product_id":100085301,"comment_content":"<br>1. 最简单的<br>```rust<br>use std::error::Error;<br><br>use clap::{AppSettings, Clap};<br>use colored::Colorize;<br>use tokio::fs;<br><br>#[derive(Clap)]<br>#[clap(version = &quot;1.0&quot;, author = &quot;Custer&lt;custer@email.cn&gt;&quot;)]<br>#[clap(setting = AppSettings::ColoredHelp)]<br>struct Opts {<br>    find: String,<br>    path: String,<br>}<br><br>#[tokio::main]<br>async fn main() -&gt; Result&lt;(), Box&lt;dyn Error&gt;&gt; {<br>    &#47;&#47; 1. 解析参数<br>    let opts: Opts = Opts::parse();<br>    let find = opts.find;<br>    let path = opts.path;<br>    let length = find.len();<br><br>    &#47;&#47; 2. 读取文件<br>    let contents = fs::read_to_string(path).await?;<br><br>    &#47;&#47; 3. 匹配字符串<br>    for (row, line) in contents.lines().enumerate() {<br>        if let Some(col) = line.find(&amp;find) {<br>            println!(<br>                &quot;{}:{} {}{}{}&quot;,<br>                row + 1,<br>                col + 1,<br>                &amp;line[..col],<br>                &amp;line[col..col + length].red().bold(),<br>                &amp;line[col + length..]<br>            );<br>        }<br>    }<br>    Ok(())<br>}<br>```<br>2. 允许用户提供一个正则表达式，来查找文件中所有包含该字符串的行<br>```rust<br>    &#47;&#47; 3. 匹配字符串<br>    for (row, line) in contents.lines().enumerate() {<br>        if let Some(re) = Regex::new(find.as_str()).unwrap().find(line) {<br>            let start = re.start();<br>            let end = re.end();<br>            println!(<br>                &quot;{}:{} {}{}{}&quot;,<br>                row + 1,<br>                start + 1,<br>                &amp;line[..start],<br>                &amp;line[start..end].red().bold(),<br>                &amp;line[end..]<br>            );<br>        }<br>    }<br>```<br>3. 允许用户提供一个正则表达式，来查找满足文件通配符的所有文件(好像并不需要使用globset 或者 glob 就可以处理通配符？）<br><br>```rust<br>...<br>struct Opts {<br>    find: String,<br>    #[clap(multiple_values = true)]<br>    paths: Vec&lt;String&gt;,<br>}<br><br>#[tokio::main]<br>async fn main() -&gt; Result&lt;(), Box&lt;dyn Error&gt;&gt; {<br>    &#47;&#47; 1. 解析参数<br>    let opts: Opts = Opts::parse();<br>    let find = opts.find.as_str();<br>    let paths = opts.paths;<br><br>    &#47;&#47; 2. 循环读取匹配到的文件<br>    for path in paths {<br>        println!(&quot;{:?}&quot;, path);<br>        let contents = fs::read_to_string(path).await?;<br><br>        &#47;&#47; 3. 匹配字符串<br>        ...<br>    }<br>    Ok(())<br>}<br>```","like_count":3,"discussions":[{"author":{"id":1079375,"avatar":"https://static001.geekbang.org/account/avatar/00/10/78/4f/e74f870c.jpg","nickname":"Tyr","note":"","ucode":"EAAFC8063202E0","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":528384,"discussion_content":"👍 非常好！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1634540253,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":316672,"user_name":"余泽锋","can_delete":false,"product_type":"c1","uid":1003207,"ip_address":"","ucode":"5AB1499746C003","user_header":"https://static001.geekbang.org/account/avatar/00/0f/4e/c7/8c2d0a3d.jpg","comment_is_top":false,"comment_ctime":1634485135,"is_pvip":false,"replies":[{"id":"114685","content":"嗯，不错。可以进一步优化一下性能以及可测试性。建议看看我的参考代码：https:&#47;&#47;github.com&#47;tyrchen&#47;geektime-rust&#47;tree&#47;master&#47;mid_term_rgrep","user_name":"作者回复","user_name_real":"Tyr","uid":"1079375","ctime":1634539165,"ip_address":"","comment_id":316672,"utype":1}],"discussion_count":1,"race_medal":1,"score":"5929452431","product_id":100085301,"comment_content":"时间比较紧，先写个初始版本：<br><br>extern crate clap;<br><br>use std::path::Path;<br>use std::ffi::OsStr;<br>use std::error::Error;<br><br>use clap::{Arg, App};<br>use regex::Regex;<br>use tokio::fs::{File, read_dir};<br>use tokio::io::AsyncReadExt;<br><br><br><br>#[tokio::main]<br>async fn main() -&gt; Result&lt;(), Box&lt;dyn Error&gt;&gt; {<br><br>    let matches = App::new(&quot;rgrep&quot;)<br>                        .version(&quot;1.0&quot;)<br>                        .about(&quot;Does awesome things&quot;)<br>                        .arg(Arg::with_name(&quot;key_word&quot;)<br>                                .index(1))<br>                        .arg(Arg::with_name(&quot;file&quot;)<br>                                .multiple(true)<br>                                .index(2))<br>                        .get_matches();<br>    println!(&quot;{:?}&quot;, matches);<br>    let key_word = matches.value_of(&quot;key_word&quot;).unwrap();<br>    println!(&quot;{}&quot;, key_word);<br>    let file_path = matches.values_of_lossy(&quot;file&quot;).unwrap();<br>    println!(&quot;{:?}&quot;, file_path);<br><br>    let re_key_word = format!(r&quot;{}&quot;, &amp;key_word);<br>    println!(&quot;re_key_word: {}&quot;, &amp;re_key_word);<br>    let re = Regex::new(&amp;re_key_word).unwrap();<br><br>    for file_path in file_path {<br>        <br>        let mut file = File::open(&amp;file_path).await?;<br>        &#47;&#47; let mut contents = vec![];<br>        let result = tokio::fs::read_to_string(&amp;file_path).await?;<br><br>        if let Some(caps) = re.captures(&amp;result) {<br>            println!(&quot;file_path: {:?}&quot;, &amp;file_path);<br>            println!(&quot;file: {:?}&quot;, &amp;file);<br>            println!(&quot;caps: {:?}&quot;, &amp;caps);<br>            println!(&quot;result: {:?}&quot;, &amp;result);<br>        }<br>    }<br><br>    Ok(())<br>}<br>","like_count":2,"discussions":[{"author":{"id":1079375,"avatar":"https://static001.geekbang.org/account/avatar/00/10/78/4f/e74f870c.jpg","nickname":"Tyr","note":"","ucode":"EAAFC8063202E0","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":528454,"discussion_content":"嗯，不错。可以进一步优化一下性能以及可测试性。建议看看我的参考代码：https://github.com/tyrchen/geektime-rust/tree/master/mid_term_rgrep","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1634539165,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":316366,"user_name":"D. D","can_delete":false,"product_type":"c1","uid":2186992,"ip_address":"","ucode":"C416E5602C8814","user_header":"https://static001.geekbang.org/account/avatar/00/21/5e/f0/62d8cf9e.jpg","comment_is_top":false,"comment_ctime":1634287892,"is_pvip":true,"replies":[{"id":"114722","content":"嗯，写的很不错，尤其是 Display trait  的使用。比我用一个函数处理更好。<br><br>impl Display for MatchLine&lt;&#39;_&gt;","user_name":"作者回复","user_name_real":"Tyr","uid":"1079375","ctime":1634571179,"ip_address":"","comment_id":316366,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5929255188","product_id":100085301,"comment_content":"试着写了一下，实现得比较匆忙。<br>为了练习之前学过的内容，试了各种写法，应该会有很多不合理的地方。<br>而且没有做并行化，希望以后有时间可以加上，并把代码重构得更好。<br>https:&#47;&#47;github.com&#47;imag1ne&#47;grepr","like_count":1,"discussions":[{"author":{"id":1079375,"avatar":"https://static001.geekbang.org/account/avatar/00/10/78/4f/e74f870c.jpg","nickname":"Tyr","note":"","ucode":"EAAFC8063202E0","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":528370,"discussion_content":"嗯，写的很不错，尤其是 Display trait  的使用。比我用一个函数处理更好。\n\nimpl Display for MatchLine&amp;lt;&amp;#39;_&amp;gt;","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1634571179,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":316222,"user_name":"夏洛克Moriaty","can_delete":false,"product_type":"c1","uid":2754785,"ip_address":"","ucode":"49BA020F04AB16","user_header":"https://static001.geekbang.org/account/avatar/00/2a/08/e1/b4748943.jpg","comment_is_top":false,"comment_ctime":1634205324,"is_pvip":false,"replies":[{"id":"114726","content":"挺不错的！流程图画的很好啊，可以放到 Readme.md 里","user_name":"作者回复","user_name_real":"Tyr","uid":"1079375","ctime":1634571769,"ip_address":"","comment_id":316222,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5929172620","product_id":100085301,"comment_content":"磕磕盼盼搞了一天终于实现了这一讲的需求，期中测试算是通过了。自己动手实现的过程中收获了非常多的东西。代码结构前前后后改了许多次，还达不到开发过程中接口不变只是实现变的能力。我把代码仓库链接贴在下面算是献丑了，说实话有点不好意思拿出来哈哈。<br><br>https:&#47;&#47;github.com&#47;LgnMs&#47;rgrep","like_count":2,"discussions":[{"author":{"id":1079375,"avatar":"https://static001.geekbang.org/account/avatar/00/10/78/4f/e74f870c.jpg","nickname":"Tyr","note":"","ucode":"EAAFC8063202E0","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":528316,"discussion_content":"挺不错的！流程图画的很好啊，可以放到 Readme.md 里","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1634571769,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":316026,"user_name":"记事本","can_delete":false,"product_type":"c1","uid":1401568,"ip_address":"","ucode":"FA942636EE0CC8","user_header":"https://static001.geekbang.org/account/avatar/00/15/62/e0/d2ff52da.jpg","comment_is_top":false,"comment_ctime":1634111119,"is_pvip":false,"replies":[{"id":"115278","content":"嗯，你可以用 regex 处理，更方便一些。你也可以看看 github 仓库里的代码：https:&#47;&#47;github.com&#47;tyrchen&#47;geektime-rust&#47;tree&#47;master&#47;mid_term_rgrep","user_name":"作者回复","user_name_real":"Tyr","uid":"1079375","ctime":1635132102,"ip_address":"","comment_id":316026,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5929078415","product_id":100085301,"comment_content":" let filename = std::env::args().nth(2).unwrap();<br>    let query = std::env::args().nth(1).unwrap();<br>    let case_sensitive = std::env::var(&quot;is_sens&quot;).is_err();<br><br>    let contents = std::fs::read_to_string(filename).unwrap();<br><br>    if case_sensitive {<br>        let mut i = 1;<br>        for v in contents.lines(){<br>            if v.contains(&amp;query){<br>                println!(&quot;{}:{}&quot;,i,v);<br>            }<br>            i+=1;<br>        }<br>    }else {<br>        let c =contents.lines().filter(|item|item.contains(&amp;query)).collect::&lt;Vec&lt;_&gt;&gt;();<br>        for i in 1..=c.len(){<br>            println!(&quot;{}:{}&quot;,i,c[i]);<br>        }<br>    }<br>","like_count":1,"discussions":[{"author":{"id":1079375,"avatar":"https://static001.geekbang.org/account/avatar/00/10/78/4f/e74f870c.jpg","nickname":"Tyr","note":"","ucode":"EAAFC8063202E0","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":528241,"discussion_content":"嗯，你可以用 regex 处理，更方便一些。你也可以看看 github 仓库里的代码：https://github.com/tyrchen/geektime-rust/tree/master/mid_term_rgrep","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1635132102,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":348107,"user_name":"forever 蒙","can_delete":false,"product_type":"c1","uid":2991652,"ip_address":"","ucode":"472EB8946A3F96","user_header":"https://static001.geekbang.org/account/avatar/00/2d/a6/24/961129f1.jpg","comment_is_top":false,"comment_ctime":1654746896,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1654746896","product_id":100085301,"comment_content":"<br>error: The following required arguments were not provided:<br>    &lt;PATTERN&gt;<br>    &lt;GLOB&gt;<br><br>USAGE:<br>    rgrep.exe &lt;PATTERN&gt; &lt;GLOB&gt;<br><br>For more information try --help<br>error: process didn&#39;t exit successfully: `E:\\geektime-Rust-master\\geektime-rust-master\\target\\debug\\rgrep.exe` (exit code: 2)<br><br>Process finished with exit code 2<br>求助。。。不知道为什么总输出这个","like_count":0},{"had_liked":false,"id":348017,"user_name":"forever 蒙","can_delete":false,"product_type":"c1","uid":2991652,"ip_address":"","ucode":"472EB8946A3F96","user_header":"https://static001.geekbang.org/account/avatar/00/2d/a6/24/961129f1.jpg","comment_is_top":false,"comment_ctime":1654668926,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1654668926","product_id":100085301,"comment_content":"error: The following required arguments were not provided:<br>    &lt;PATTERN&gt;<br>    &lt;GLOB&gt;<br><br>USAGE:<br>    rgrep.exe &lt;PATTERN&gt; &lt;GLOB&gt;<br><br>For more information try --help<br>error: process didn&#39;t exit successfully: `E:\\geektime-Rust-master\\geektime-rust-master\\target\\debug\\rgrep.exe` (exit code: 2)求助","like_count":0},{"had_liked":false,"id":338732,"user_name":"gt","can_delete":false,"product_type":"c1","uid":2879793,"ip_address":"","ucode":"E2E220B2B08AEF","user_header":"https://static001.geekbang.org/account/avatar/00/2b/f1/31/a0f0f01d.jpg","comment_is_top":false,"comment_ctime":1647694045,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1647694045","product_id":100085301,"comment_content":"交个作业：https:&#47;&#47;github.com&#47;ForInfinity&#47;rgrep<br>把整个程序分成了fs、pattern、formatter三个部分，分别负责文件读写、匹配和高亮及输出console。先分别敲定了trait，然后实现。以后可以扩展使用不同的fs来源、更多的匹配模式、不同的formatter。<br>不过在编写泛型的时候遇到了个问题：<br>首先存在一个trait MatchOutput:<br>```<br>pub trait MatchOutput&lt;T&gt;<br>    where T: Display<br>```<br>当我想实现另一个trait Printer时：<br>``<br>pub struct Printer&lt;M: Display, T: MatchOutput&lt;M&gt;&gt;<br>{<br>    pub formatter: T,<br>}<br>```<br>rust会编译不通过，提示存在未使用的泛型M：<br>```<br>error[E0392]: parameter `M` is never used<br>```<br>对此不太理解，也不知道是不是因为这不是最佳实践。<br>现在临时的解决方案是添加一个私有的变量_m:M，并在写new方法的时候将其初始化为None：<br>```<br>pub struct Printer&lt;M: Display, T: MatchOutput&lt;M&gt;&gt;<br>{<br>    &#47;&#47; To pass the compiler<br>    &#47;&#47; Otherwise: error[E0392]: parameter `M` is never used<br>    _m: Option&lt;M&gt;,<br>    pub formatter: T,<br>}<br>```<br>蹲个老师的解答。","like_count":0},{"had_liked":false,"id":337308,"user_name":"Geek_994f3b","can_delete":false,"product_type":"c1","uid":2494458,"ip_address":"","ucode":"3E1FBCFD14DD58","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/DoNwd7Fm9Ynsk0ZoHbfY4fXbwctf7SR6Jdyh7HIKwI2Dsgh56rT80ndpd4xeriareZ0MibdgiavicccFqjOztpMfqQ/132","comment_is_top":false,"comment_ctime":1646744269,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1646744269","product_id":100085301,"comment_content":"也写了个：https:&#47;&#47;github.com&#47;startdusk&#47;rgrep，欢迎老师指正","like_count":0}]}