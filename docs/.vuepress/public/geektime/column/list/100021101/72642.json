{"id":72642,"title":"06 | 卡顿优化（下）：如何监控应用卡顿？","content":"<p>“我在秒杀iPhone XS的支付页面卡了3秒，最后没抢到”，用户嘶声力竭地反馈了一个卡顿问题。</p><p>“莫慌莫慌”，等我打开Android Studio， 用上一讲学到的几个工具分析一下就知道原因了。</p><p>“咦，在我这里整个支付过程丝滑般流畅”。这个经历让我明白，卡顿跟崩溃一样需要“现场信息”。因为卡顿的产生也是依赖很多因素，比如用户的系统版本、CPU负载、网络环境、应用数据等。</p><p>脱离这个现场，我们本地难以复现，也就很难去解决问题。但是卡顿又非常影响用户体验的，特别是发生在启动、聊天、支付这些关键场景，那我们应该如何去监控线上的卡顿问题，并且保留足够多的现场信息协助我们排查解决问题呢？</p><h2>卡顿监控</h2><p>前面我讲过监控ANR的方法，不过也提到两个问题：一个是高版本的系统没有权限读取系统的ANR日志；另一个是ANR太依赖系统实现，我们无法灵活控制参数，例如我觉得主线程卡顿3秒用户已经不太能忍受，而默认参数只能监控至少5秒以上的卡顿。</p><p>所以现实情况就要求我们需要采用其他的方式来监控是否出现卡顿问题，并且针对特定场景还要监控其他特定的指标。</p><p><strong>1. 消息队列</strong></p><p>我设计的第一套监控卡顿的方案是<strong>基于消息队列实现</strong>，通过替换Looper的Printer实现。在2013年的时候，我写过一个名为WxPerformanceTool的性能监控工具，其中耗时监控就使用了这个方法。后面这个工具在腾讯公共组件做了内部开源，还获得了2013年的年度十佳组件。</p><!-- [[[read_end]]] --><p><img src=\"https://static001.geekbang.org/resource/image/10/b3/10a39c4253447b3e9d0a5045795d47b3.png?wh=543*103\" alt=\"\"></p><p>还没庆祝完，很快就有同事跟我吐槽一个问题：线上开启了这个监控模块，快速滑动时平均帧率起码降低5帧。我通过Traceview一看，发现是因为上面图中所示的大量字符串拼接导致性能损耗严重。</p><p>后来很快又想到了另外一个方案，可以通过一个监控线程，每隔1秒向主线程消息队列的头部插入一条空消息。假设1秒后这个消息并没有被主线程消费掉，说明阻塞消息运行的时间在0～1秒之间。换句话说，如果我们需要监控3秒卡顿，那在第4次轮询中头部消息依然没有被消费的话，就可以确定主线程出现了一次3秒以上的卡顿。</p><p><img src=\"https://static001.geekbang.org/resource/image/b0/56/b06d5aa439e8bb75885a338df9a25f56.png?wh=1042*348\" alt=\"\"></p><p>这个方案也存在一定的误差，那就是发送空消息的间隔时间。但这个间隔时间也不能太小，因为监控线程和主线程处理空消息都会带来一些性能损耗，但基本影响不大。</p><p><strong>2. 插桩</strong></p><p>不过在使用了一段时间之后，我感觉还是有那么一点不爽。基于消息队列的卡顿监控并不准确，正在运行的函数有可能并不是真正耗时的函数。这是为什么呢？</p><p>我画张图解释起来就清楚了。我们假设一个消息循环里面顺序执行了A、B、C三个函数，当整个消息执行超过3秒时，因为函数A和B已经执行完毕，我们只能得到的正在执行的函数C的堆栈，事实上它可能并不耗时。</p><p><img src=\"https://static001.geekbang.org/resource/image/8e/bf/8ee841e21f4a40f2835fe846be143dbf.png?wh=1276*266\" alt=\"\"></p><p><strong>不过对于线上大数据来说，因为函数A和B相对比较耗时，所以抓取到它们的概率会更大一些，通过后台聚合后捕获到函数A和B的卡顿日志会更多一些。</strong></p><p>这也是我们线上目前依然使用基于消息队列的方法，但是肯定希望可以做到跟Traceview一样，可以拿到整个卡顿过程所有运行函数的耗时，就像下面图中的结果，可以明确知道其实函数A和B才是造成卡顿的主要原因。</p><p><img src=\"https://static001.geekbang.org/resource/image/0c/b5/0c6d97f12e0a5342626b11d683c227b5.png?wh=1224*286\" alt=\"\"></p><p>既然这样，那我们能否直接利用Android Runtime函数调用的回调事件，做一个自定义的Traceview++呢？</p><p>答案是可以的，但是需要使用Inline Hook技术。我们可以实现类似Nanoscope先写内存的方案，但考虑到兼容性问题，这套方案并没有用到线上。</p><p>对于大体量的应用，稳定性是第一考虑因素。那如果在编译过程插桩，兼容性问题肯定是OK的。上一讲讲到systrace可以通过插桩自动生成Trace Tag，我们一样也可以在函数入口和出口加入耗时监控的代码，但是需要考虑的细节有很多。</p><ul>\n<li>\n<p><strong>避免方法数暴增</strong>。在函数的入口和出口应该插入相同的函数，在编译时提前给代码中每个方法分配一个独立的ID作为参数。</p>\n</li>\n<li>\n<p><strong>过滤简单的函数</strong>。过滤一些类似直接return、i++这样的简单函数，并且支持黑名单配置。对一些调用非常频繁的函数，需要添加到黑名单中来降低整个方案对性能的损耗。</p>\n</li>\n</ul><p><img src=\"https://static001.geekbang.org/resource/image/55/aa/5554d062dd45d6d927a08be4a39926aa.png?wh=1920*871\" alt=\"\"></p><p>基于性能的考虑，线上只会监控主线程的耗时。微信的Matrix使用的就是这个方案，因为做了大量的优化，所以最终安装包体积只增大1～2%，平均帧率下降也在2帧以内。虽然插桩方案对性能的影响总体还可以接受，但只会在灰度包使用。</p><p>插桩方案看起来美好，它也有自己的短板，那就是只能监控应用内自身的函数耗时，无法监控系统的函数调用，整个堆栈看起来好像“缺失了”一部分。</p><p><strong>3. Profilo</strong></p><p>2018年3月，Facebook开源了一个叫<a href=\"http://github.com/facebookincubator/profilo\">Profilo</a>的库，它收集了各大方案的优点，令我眼前一亮。具体来说有以下几点：</p><p><strong>第一，集成atrace功能</strong>。ftrace所有性能埋点数据都会通过trace_marker文件写入内核缓冲区，Profilo通过PLT  Hook拦截了写入操作，选择部分关心的事件做分析。这样所有systrace的探针我们都可以拿到，例如四大组件生命周期、锁等待时间、类校验、GC时间等。</p><p><strong>不过大部分的atrace事件都比较笼统，从事件“B|pid|activityStart”，我们并不知道具体是哪个Activity的创建</strong>。同样我们可以统计GC相关事件的耗时，但是也不知道为什么发生了这次GC。</p><p><img src=\"https://static001.geekbang.org/resource/image/7f/fc/7f4abeb31fbc50546b0481435e7a7bfc.jpg?wh=736*124\" alt=\"\"></p><p><strong>第二，快速获取Java堆栈</strong>。<strong>很多同学有一个误区，觉得在某个线程不断地获取主线程堆栈是不耗时的。但是事实上获取堆栈的代价是巨大的，它要暂停主线程的运行</strong>。</p><p>Profilo的实现非常精妙，它实现类似Native崩溃捕捉的方式快速获取Java堆栈，通过间隔发送SIGPROF信号，整个过程如下图所示。</p><p><img src=\"https://static001.geekbang.org/resource/image/2f/b7/2f00261346ba4c85c9ae522766cf05b7.jpg?wh=2480*2196\" alt=\"\"></p><p>Signal Handler捕获到信号后，拿取到当前正在执行的Thread，通过Thread对象可以获取当前线程的ManagedStack，ManagedStack是一个单链表，它保存了当前的ShadowFrame或者QuickFrame栈指针，先依次遍历ManagedStack链表，然后遍历其内部的ShadowFrame或者QuickFrame还原一个可读的调用栈，从而unwind出当前的Java堆栈。通过这种方式，可以实现线程一边继续跑步，我们还可以帮它做检查，而且耗时基本忽略不计。代码可以参照：<a href=\"http://github.com/facebookincubator/profilo/blob/master/cpp/profiler/unwindc/android_712/arm/unwinder.h\">Profilo::unwind</a>和<a href=\"http://androidxref.com/7.1.1_r6/xref/art/runtime/stack.cc#772\">StackVisitor::WalkStack</a>。</p><p>不用插桩、性能基本没有影响、捕捉信息还全，那Profilo不就是完美的化身吗？当然由于它利用了大量的黑科技，兼容性是需要注意的问题。它内部实现有大量函数的Hook，unwind也需要强依赖Android Runtime实现。Facebook已经将Profilo投入到线上使用，但由于目前Profilo快速获取堆栈功能依然不支持Android 8.0和Android  9.0，鉴于稳定性问题，建议采取抽样部分用户的方式来开启该功能。</p><p><strong>先小结一下，不管我们使用哪种卡顿监控方法，最后我们都可以得到卡顿时的堆栈和当时CPU运行的一些信息。大部分的卡顿问题都比较好定位，例如主线程执行一个耗时任务、读一个非常大的文件或者是执行网络请求等。</strong></p><h2>其他监控</h2><p>除了主线程的耗时过长之外，我们还有哪些卡顿问题需要关注呢？</p><p>Android Vitals是Google Play官方的性能监控服务，涉及卡顿相关的监控有ANR、启动、帧率三个。尤其是ANR监控，我们应该经常的来看看，主要是Google自己是有权限可以准确监控和上报ANR。</p><p>对于启动和帧率，Android Vitals只是上报了应用的区间分布，但是不能归纳出问题。这也是我们做性能优化时比较迷惑的一点，即使发现整体的帧率比过去降低了5帧，也并不知道是哪里造成的，还是要花很大的力气去做二次排查。</p><p><img src=\"https://static001.geekbang.org/resource/image/fc/fa/fc93805b240cccbcb8474968a2bfb9fa.png?wh=1908*494\" alt=\"\"></p><p>能不能做到跟崩溃、卡顿一样，直接给我一个堆栈，告诉我就是因为这里写的不好导致帧率下降了5帧。退一步说，如果做不到直接告诉我堆栈，能不能告诉我是因为聊天这个页面导致的帧率下降，让我缩小二次排查的范围。</p><p><strong>1. 帧率</strong></p><p>业界都使用Choreographer来监控应用的帧率。跟卡顿不同的是，需要排除掉页面没有操作的情况，我们应该只在<strong>界面存在绘制</strong>的时候才做统计。</p><p>那么如何监听界面是否存在绘制行为呢？可以通过addOnDrawListener实现。</p><pre><code>getWindow().getDecorView().getViewTreeObserver().addOnDrawListener\n</code></pre><p>我们经常用平均帧率来衡量界面流畅度，但事实上电影的帧率才24帧，用户对于应用的平均帧率是40帧还是50帧并不一定可以感受出来。对于用户来说，感觉最明显的是连续丢帧情况，Android Vitals将连续丢帧超过700毫秒定义为冻帧，也就是连续丢帧42帧以上。</p><p>因此，我们可以统计更有价值的冻帧率。<strong>冻帧率就是计算发生冻帧时间在所有时间的占比</strong>。出现丢帧的时候，我们可以获取当前的页面信息、View信息和操作路径上报后台，降低二次排查的难度。</p><p>正如下图一样，我们还可以按照Activity、Fragment或者某个操作定义场景，通过细化不同场景的平均帧率和冻帧率，进一步细化问题排查的范围。</p><p><img src=\"https://static001.geekbang.org/resource/image/73/ba/73b185f989a20e868886d10c864c43ba.png?wh=990*660\" alt=\"\"></p><p><strong>2. 生命周期监控</strong></p><p>Activity、Service、Receiver组件生命周期的耗时和调用次数也是我们重点关注的性能问题。例如Activity的onCreate()不应该超过1秒，不然会影响用户看到页面的时间。Service和Receiver虽然是后台组件，不过它们生命周期也是占用主线程的，也是我们需要关注的问题。</p><p>对于组件生命周期我们应该采用更严格地监控，可以全量上报。在后台我们可以看到各个组件各个生命周期的启动时间和启动次数。</p><p><img src=\"https://static001.geekbang.org/resource/image/d4/67/d4e8abcb054793168dff716c7956ae67.png?wh=1270*302\" alt=\"\"></p><p>有一次我们发现有两个Service的启动次数是其他的10倍，经过排查发现是因为频繁的互相拉起导致。Receiver也是这样，而且它们都需要经过System Server。曾经有一个日志上报模块通过Broadcast来做跨进程通信，每秒发送几千次请求，导致系统System Server卡死。所以说每个组件各个生命周期的调用次数也是非常有参考价值的指标。</p><p>除了四大组件的生命周期，我们还需要监控各个进程生命周期的启动次数和耗时。通过下面的数据，我们可以看出某些进程是否频繁地拉起。</p><p><img src=\"https://static001.geekbang.org/resource/image/53/0c/534e422d44eb4b08ebdac2181b87f70c.png?wh=1272*286\" alt=\"\"></p><p>对于生命周期的监控实现，我们可以利用插件化技术Hook的方式。但是Android P之后，我还是不太推荐你使用这种方式。我更推荐使用编译时插桩的方式，<strong>后面我会讲到Aspect、ASM和ReDex三种插桩技术的实现，敬请期待。</strong></p><p><strong>3. 线程监控</strong></p><p>Java线程管理是很多应用非常头痛的事情，应用启动过程就已经创建了几十上百个线程。而且大部分的线程都没有经过线程池管理，都在自由自在地狂奔着。</p><p>另外一方面某些线程优先级或者活跃度比较高，占用了过多的CPU。这会降低主线程UI响应能力，我们需要特别针对这些线程做重点的优化。</p><p>对于Java线程，总的来说我会监控以下两点。</p><ul>\n<li>\n<p>线程数量。需要监控线程数量的多少，以及创建线程的方式。例如有没有使用我们特有的线程池，这块可以通过got hook线程的nativeCreate()函数。主要用于进行线程收敛，也就是减少线程数量。</p>\n</li>\n<li>\n<p>线程时间。监控线程的用户时间utime、系统时间stime和优先级。主要是看哪些线程utime+stime时间比较多，占用了过多的CPU。<strong>正如上一期“每课一练”所提到的，可能有一些线程因为生命周期很短导致很难发现，这里我们需要结合线程创建监控。</strong></p>\n</li>\n</ul><p><img src=\"https://static001.geekbang.org/resource/image/52/53/52a236b3d3af37869a4eaf087b4ddf53.png?wh=1286*270\" alt=\"\"></p><p><strong>看到这里可能有同学会比较困惑，卡顿优化的主题就是监控吗？导致卡顿的原因会有很多，比如函数非常耗时、I/O非常慢、线程间的竞争或者锁等。其实很多时候卡顿问题并不难解决，相较解决来说，更困难的是如何快速发现这些卡顿点，以及通过更多的辅助信息找到真正的卡顿原因。</strong></p><p>就跟在本地使用各种卡顿分析工具一样，卡顿优化的难点在于如何把它们移植到线上，以最少的性能代价获得更加丰富的卡顿信息。当然某些卡顿问题可能是I/O、存储或者网络引发的，后面会还有专门的内容来讲这些问题的优化方法。</p><h2>总结</h2><p>今天我们学习了卡顿监控的几种方法。随着技术的深入，我们发现了旧方案的一些缺点，通过不断地迭代和演进，寻找更好的方案。</p><p>Facebook的Profilo实现了快速获取Java堆栈，其实它参考的是JVM的AsyncGetCallTrace思路，然后适配Android Runtime的实现。systrace使用的是Linux的ftrace，Simpleperf参考了Linux的perf工具。还是熟悉的配方，还是熟悉的味道，我们很多创新性的东西，其实还是基于Java和Linux十年前的产物。</p><p>还是回到我在专栏开篇词说过的，切记不要浮躁，多了解和学习一些底层的技术，对我们的成长会有很大帮助。<strong>日常开发中我们也不能只满足于完成需求就可以了，在实现上应该学会多去思考内存、卡顿这些影响性能的点，我们比别人多想一些、多做一些，自己的进步自然也会更快一些。</strong></p><h2>课后作业</h2><p>看完我分享的卡顿优化的方法后，相信你也肯定还有很多好的思路和方法，<span class=\"orange\">今天的课后作业是分享一下你的卡顿优化的“必杀技”，在留言区分享一下今天学习、练习的收获与心得</span>。</p><h2>课后练习</h2><p>我在上一期中提到过Linux的ftrace机制，而systrace正是利用这个系统机制实现的。而Profilo更是通过一些黑科技，实现了一个可以用于线上的“systrace”。那它究竟是怎么实现的呢？</p><p>通过今天这个<a href=\"http://github.com/AndroidAdvanceWithGeektime/Chapter06\">Sample</a>，你可以学习到它的实现思路。当你对这些底层机制足够熟悉的时候，可能就不局限在本地使用，而是可以将它们搬到线上了。</p><p>当然，为了能更好地理解这个Sample，可能你还需要补充一些ftrace和atrace相关的背景知识。你会发现这些的确都是Linux十年前的一些知识，但时至今日它们依然非常有用。</p><p>1.<a href=\"http://www.ibm.com/developerworks/cn/linux/l-cn-ftrace/index.html\">ftrace 简介</a>、<a href=\"http://www.ibm.com/developerworks/cn/linux/l-cn-ftrace1/index.html\">ftrace使用（上）</a>、<a href=\"http://www.ibm.com/developerworks/cn/linux/l-cn-ftrace2/index.html\">frace使用（下）</a>。</p><p>2.<a href=\"http://source.android.com/devices/tech/debug/ftrace\">atrace介绍</a>、<a href=\"http://android.googlesource.com/platform/frameworks/native/+/master/cmds/atrace/atrace.cpp\">atrace实现</a>。</p><p>欢迎你点击“请朋友读”，把今天的内容分享给好友，邀请他一起学习。最后别忘了在评论区提交今天的作业，我也为认真完成作业的同学准备了丰厚的“学习加油礼包”，期待与你一起切磋进步哦。</p><p></p>","neighbors":{"left":{"article_title":"05 | 卡顿优化（上）：你要掌握的卡顿分析方法","id":71982},"right":{"article_title":"06补充篇 | 卡顿优化：卡顿现场与卡顿分析","id":73277}},"comments":[{"had_liked":false,"id":49472,"user_name":"Seven","can_delete":false,"product_type":"c1","uid":1328562,"ip_address":"","ucode":"C1C68316449B57","user_header":"https://static001.geekbang.org/account/avatar/00/14/45/b2/ee0cfc12.jpg","comment_is_top":false,"comment_ctime":1544693785,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"207703123993","product_id":100021101,"comment_content":"明明是Android开发课，但是绍文老师在很多文章中都会提到Linux，JVM相关的知识，深入优化就是深入底层啊，目前的能力不足以消化这篇文章，同时希望绍文老师和鹏飞老师推荐相关书籍","like_count":49},{"had_liked":false,"id":49497,"user_name":"George吴逸云","can_delete":false,"product_type":"c1","uid":1125994,"ip_address":"","ucode":"E0F6B1EC151DE2","user_header":"https://static001.geekbang.org/account/avatar/00/11/2e/6a/02eb9956.jpg","comment_is_top":false,"comment_ctime":1544698511,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"74559142543","product_id":100021101,"comment_content":"已经掉队了，底层基础太差了😭","like_count":17},{"had_liked":false,"id":49530,"user_name":"catkin","can_delete":false,"product_type":"c1","uid":1127815,"ip_address":"","ucode":"2E7ECACBC30CEC","user_header":"https://static001.geekbang.org/account/avatar/00/11/35/87/b2a1e5cc.jpg","comment_is_top":false,"comment_ctime":1544706519,"is_pvip":false,"discussion_count":5,"race_medal":0,"score":"57379281367","product_id":100021101,"comment_content":"张老师，看完这篇文章我已经开始怀疑人生了，掌握这么多知识您是怎么办到的，而且对那些黑科技了如指掌，还能举一反三，感觉就跟玩一样！能不能赐教一下怎么做到的？","like_count":14,"discussions":[{"author":{"id":2266589,"avatar":"https://static001.geekbang.org/account/avatar/00/22/95/dd/c653f556.jpg","nickname":"superman","note":"","ucode":"79E816ACBD0665","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":340195,"discussion_content":"感觉自己是个弱智","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1609925294,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1331142,"avatar":"https://static001.geekbang.org/account/avatar/00/14/4f/c6/47d3a239.jpg","nickname":"杰罗麦","note":"","ucode":"37EB10E7FA6B01","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":311709,"discussion_content":"我也怀疑人生了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1602470193,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2036014,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/11/2e/31226547.jpg","nickname":"英铎","note":"","ucode":"6689CCC58E01DC","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":295836,"discussion_content":"我也怀疑人生了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1596359944,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1329103,"avatar":"","nickname":"唯威奋斗","note":"","ucode":"B6BC3B145D1593","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":126997,"discussion_content":"我也怀疑人生了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578557894,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1329241,"avatar":"https://static001.geekbang.org/account/avatar/00/14/48/59/ad47636a.jpg","nickname":"Itisnice","note":"","ucode":"6899379D238C08","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":4227,"discussion_content":"我也怀疑人生了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1565242497,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":177139,"user_name":"Jerry银银","can_delete":false,"product_type":"c1","uid":1008404,"ip_address":"","ucode":"80DA1172A2360A","user_header":"https://static001.geekbang.org/account/avatar/00/0f/63/14/06eff9a4.jpg","comment_is_top":false,"comment_ctime":1581300719,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"53120908271","product_id":100021101,"comment_content":"研究半天，竟然忘记了看Matrix库中的的wiki。在其中发现了一篇关于卡顿检测的文章，质量挺高，曾发布于WeMobileDev公众号中，文章地址：https:&#47;&#47;github.com&#47;Tencent&#47;matrix&#47;wiki&#47;Matrix-Android-TraceCanary。<br>","like_count":12},{"had_liked":false,"id":49980,"user_name":"希夷","can_delete":false,"product_type":"c1","uid":1028673,"ip_address":"","ucode":"2E3E86AC7A19EC","user_header":"https://static001.geekbang.org/account/avatar/00/0f/b2/41/d9dcc7ef.jpg","comment_is_top":false,"comment_ctime":1544806136,"is_pvip":false,"replies":[{"id":"17997","content":"其实不是，这个专栏我更关注的是人的成长，而不是具体应用到哪里。<br><br>当然可以把知识转化应用到工作中效果会更加好","user_name":"作者回复","user_name_real":"张绍文","uid":"1009577","ctime":1544836669,"ip_address":"","comment_id":49980,"utype":1}],"discussion_count":2,"race_medal":0,"score":"35904544504","product_id":100021101,"comment_content":"如果给完全没有卡顿的APP打分100的话，对于大厂的APP本来就有90分，追求的是如何将分数提到95，98，99，甚至100，邵文老师所讲主要也是针对这块；但对于很多想我这样的小公司开发者来说，受人力物力时间所限，想做到的其实是先达到90分，而这块专栏涉及的有限，对于跟我类似的受众不够友好。","like_count":8,"discussions":[{"author":{"id":1009577,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/67/a9/e251ace7.jpg","nickname":"张绍文","note":"","ucode":"94B49E5F80BFDE","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":432822,"discussion_content":"其实不是，这个专栏我更关注的是人的成长，而不是具体应用到哪里。\n\n当然可以把知识转化应用到工作中效果会更加好","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1544836669,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1014289,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/7a/11/abb7bfe3.jpg","nickname":"亮出","note":"","ucode":"A7673283D03656","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":302306,"discussion_content":"我也是小公司的，觉得很好啊","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1598876279,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":98914,"user_name":"黄庭洗凡浊","can_delete":false,"product_type":"c1","uid":1239157,"ip_address":"","ucode":"75835DB58EAF18","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/5gNyWibZIFE8OAr5IIdBiccNIhEcdhfxYVib87IxD6fwBibdWxfEu95kicavZpkIfwctgataw0aHcqHCz7oehaaCOGQ/132","comment_is_top":false,"comment_ctime":1559115888,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"27328919664","product_id":100021101,"comment_content":"就开篇前两章看懂了  之后看到现在一脸懵逼  我还是早点转行吧","like_count":7},{"had_liked":false,"id":72812,"user_name":"雪人","can_delete":false,"product_type":"c1","uid":1257781,"ip_address":"","ucode":"55B39082C5D1F0","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/ABjAPveWxOuBs3ibbCaBicX7OSibic3prycYG9vOicGHMEv8Vws5o3epykBSFHkbysnaKeMqQaJufINNUncGhmAEomg/132","comment_is_top":false,"comment_ctime":1551743006,"is_pvip":false,"replies":[{"id":"28203","content":"看源码还是需要带着目的去看，例如渲染相关，类加载流程，不要漫无目的的去看","user_name":"作者回复","user_name_real":"张绍文","uid":"1009577","ctime":1552917664,"ip_address":"","comment_id":72812,"utype":1}],"discussion_count":1,"race_medal":0,"score":"27321546782","product_id":100021101,"comment_content":"老师，看了您这些内容，对我的第一感觉是要对源码很熟悉，那您对学习源码有什么建议吗，（看的晚了，不知道现在评论还会不会回）","like_count":6,"discussions":[{"author":{"id":1009577,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/67/a9/e251ace7.jpg","nickname":"张绍文","note":"","ucode":"94B49E5F80BFDE","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":441765,"discussion_content":"看源码还是需要带着目的去看，例如渲染相关，类加载流程，不要漫无目的的去看","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1552917664,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":49698,"user_name":"东方","can_delete":false,"product_type":"c1","uid":1329945,"ip_address":"","ucode":"50FDAA2D95170C","user_header":"https://static001.geekbang.org/account/avatar/00/14/4b/19/6f037647.jpg","comment_is_top":false,"comment_ctime":1544753342,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"18724622526","product_id":100021101,"comment_content":"给大家推荐一个方法，解析Traceview生成的trace文件，即可知道这个阶段所有运行的函数，序列化一下，就能生成需要插桩的白名单列表。","like_count":4},{"had_liked":false,"id":49518,"user_name":"x-ray","can_delete":false,"product_type":"c1","uid":1331247,"ip_address":"","ucode":"75E3E3CEB38F03","user_header":"https://static001.geekbang.org/account/avatar/00/14/50/2f/afd9c67c.jpg","comment_is_top":false,"comment_ctime":1544704109,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"18724573293","product_id":100021101,"comment_content":"作者您好，我们应用的很多用户，android系统都是4.4版本的，因为分包dex优化的原因,导致第一次安装或者版本升级时启动的时间非常的长，想问问您有什么好的优化措施，谢谢","like_count":4,"discussions":[{"author":{"id":1466345,"avatar":"https://static001.geekbang.org/account/avatar/00/16/5f/e9/41b6b116.jpg","nickname":"Geek_258277","note":"","ucode":"0B74F5CA3E37E8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":83975,"discussion_content":"我们需要了相同的问题，可以加个QQ聊聊吗？991961792","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1576477241,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1328354,"avatar":"https://static001.geekbang.org/account/avatar/00/14/44/e2/763526e9.jpg","nickname":"程晓擘","note":"","ucode":"96986D5AE2B96C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":73987,"discussion_content":"这个小哥哥，我是不是认识呀。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1575620449,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":87352,"user_name":"小洁","can_delete":false,"product_type":"c1","uid":1333038,"ip_address":"","ucode":"DA1A072D299C28","user_header":"https://static001.geekbang.org/account/avatar/00/14/57/2e/0c85eecd.jpg","comment_is_top":false,"comment_ctime":1555574678,"is_pvip":false,"replies":[{"id":"61989","content":"初期的时候我们不建议一下子铺的太开，一步一步来并且要真正的发现现实的问题。<br><br>可以先从卡顿和ANR的捕获先开始做，对卡顿堆栈做聚合排序。启动的话一般只是一个统计指标，或者我们也可以把启动拆成多个步骤作为监控","user_name":"作者回复","user_name_real":"张绍文","uid":"1009577","ctime":1576674071,"ip_address":"","comment_id":87352,"utype":1}],"discussion_count":1,"race_medal":0,"score":"14440476566","product_id":100021101,"comment_content":"请问下，目前有个需求是对卡顿和启动耗时做性能指标线上预警，对于 activity、fragment的生命周期启动耗时的监控数据，还有主线程卡顿堆栈的数据，应该按什么的维度去统计比较合理呢","like_count":3,"discussions":[{"author":{"id":1009577,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/67/a9/e251ace7.jpg","nickname":"张绍文","note":"","ucode":"94B49E5F80BFDE","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":447412,"discussion_content":"初期的时候我们不建议一下子铺的太开，一步一步来并且要真正的发现现实的问题。\n\n可以先从卡顿和ANR的捕获先开始做，对卡顿堆栈做聚合排序。启动的话一般只是一个统计指标，或者我们也可以把启动拆成多个步骤作为监控","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1576674071,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":176456,"user_name":"Jerry银银","can_delete":false,"product_type":"c1","uid":1008404,"ip_address":"","ucode":"80DA1172A2360A","user_header":"https://static001.geekbang.org/account/avatar/00/0f/63/14/06eff9a4.jpg","comment_is_top":false,"comment_ctime":1581063554,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"10170998146","product_id":100021101,"comment_content":"老师好！<br>文中提到，卡顿监控三大类方法：<br>1、基于Android系统的消息队列机制<br>     a)  通过替换 Looper 的 Printer 实现<br>     b)  通过一个监控线程，每隔一段时间（例如： 1 秒）向主线程消息队列的头部插入一条空消息，然后监测空消息是否被消费<br><br>2、插桩<br><br>3、Facebook 开源库Profilo的方案<br><br><br>文中有这么一段话：“基于性能的考虑，线上只会监控主线程的耗时。微信的 Matrix 使用的就是这个方案，因为做了大量的优化，所以最终安装包体积只增大 1～2%，平均帧率下降也在 2 帧以内。虽然插桩方案对性能的影响总体还可以接受，但只会在灰度包使用。“<br><br>这段话的意思，微信用的是第一种方案中b方案吗？<br><br>希望老师解答！<br><br>","like_count":2,"discussions":[{"author":{"id":1162010,"avatar":"https://static001.geekbang.org/account/avatar/00/11/bb/1a/abdba1a4.jpg","nickname":"宝贝之家","note":"","ucode":"65E3A102B42BE8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":342843,"discussion_content":"插桩","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1610847474,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":89193,"user_name":"eyeandroid","can_delete":false,"product_type":"c1","uid":1136395,"ip_address":"","ucode":"F6BC4961628A87","user_header":"https://static001.geekbang.org/account/avatar/00/11/57/0b/8b2465d6.jpg","comment_is_top":false,"comment_ctime":1556102348,"is_pvip":false,"replies":[{"id":"61997","content":"其实信息都是一样的，hook的作用是可以用到线上。但是一般会过滤掉一些信息，只上报最感兴趣的部分","user_name":"作者回复","user_name_real":"张绍文","uid":"1009577","ctime":1576674795,"ip_address":"","comment_id":89193,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10146036940","product_id":100021101,"comment_content":"请教下老师，hook抓到的systrace里面有其它进程的信息吗，跟python systrace.py抓到的内容有什么差别","like_count":2,"discussions":[{"author":{"id":1009577,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/67/a9/e251ace7.jpg","nickname":"张绍文","note":"","ucode":"94B49E5F80BFDE","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":448048,"discussion_content":"其实信息都是一样的，hook的作用是可以用到线上。但是一般会过滤掉一些信息，只上报最感兴趣的部分","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1576674795,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":70271,"user_name":"斑马线","can_delete":false,"product_type":"c1","uid":1184113,"ip_address":"","ucode":"CEF0E141F2645C","user_header":"https://static001.geekbang.org/account/avatar/00/12/11/71/da8a6544.jpg","comment_is_top":false,"comment_ctime":1551062053,"is_pvip":false,"replies":[{"id":"25087","content":"每一帧的时间是16.6ms，看你们的忍耐程度。不过前期可以把这个时间放大一些，例如两秒，三秒。因为如果间隔太小，前期会有非常多报出来，还是先解决比较严重的问题","user_name":"作者回复","user_name_real":"张绍文","uid":"1009577","ctime":1551069788,"ip_address":"","comment_id":70271,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10140996645","product_id":100021101,"comment_content":"老师你好，最学习了你的专栏，准备优化一下项目，用一个第三方开源工具检测了一下，发现项目有大量的“主线程阻塞超过70ms”，请问主线程执行耗时操作，多久才算耗时，该如何定义？","like_count":2,"discussions":[{"author":{"id":1009577,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/67/a9/e251ace7.jpg","nickname":"张绍文","note":"","ucode":"94B49E5F80BFDE","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":440535,"discussion_content":"每一帧的时间是16.6ms，看你们的忍耐程度。不过前期可以把这个时间放大一些，例如两秒，三秒。因为如果间隔太小，前期会有非常多报出来，还是先解决比较严重的问题","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1551069788,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":49539,"user_name":"蚂蚁内推+v","can_delete":false,"product_type":"c1","uid":1050508,"ip_address":"","ucode":"24B10AEE54B3FD","user_header":"https://static001.geekbang.org/account/avatar/00/10/07/8c/0d886dcc.jpg","comment_is_top":false,"comment_ctime":1544709405,"is_pvip":false,"replies":[{"id":"17818","content":"nanoscope 是 uber 开发的一套 Low overhead trace 工具 https:&#47;&#47;github.com&#47;uber&#47;nanoscope","user_name":"作者回复","user_name_real":"孙鹏飞","uid":"1171070","ctime":1544719237,"ip_address":"","comment_id":49539,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10134643997","product_id":100021101,"comment_content":"Nanoscope 是什么 方便老师说下吗","like_count":2,"discussions":[{"author":{"id":1171070,"avatar":"https://static001.geekbang.org/account/avatar/00/11/de/7e/5c2b1efe.jpg","nickname":"孙鹏飞","note":"","ucode":"18ADF5C2B78938","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":432654,"discussion_content":"nanoscope 是 uber 开发的一套 Low overhead trace 工具 https://github.com/uber/nanoscope","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1544719237,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":1}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":273107,"user_name":"许兆","can_delete":false,"product_type":"c1","uid":1886159,"ip_address":"","ucode":"2DD8E516C817BD","user_header":"https://static001.geekbang.org/account/avatar/00/1c/c7/cf/35eb42d6.jpg","comment_is_top":false,"comment_ctime":1610441812,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5905409108","product_id":100021101,"comment_content":"邵文老师知识面的广度和深度真是令人窒息……","like_count":2},{"had_liked":false,"id":176917,"user_name":"Jerry银银","can_delete":false,"product_type":"c1","uid":1008404,"ip_address":"","ucode":"80DA1172A2360A","user_header":"https://static001.geekbang.org/account/avatar/00/0f/63/14/06eff9a4.jpg","comment_is_top":false,"comment_ctime":1581223053,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5876190349","product_id":100021101,"comment_content":"看到Matrix库，TracerCanary模块中，这样一段核心代码：<br>class LooperPrinter implements Printer {<br>        public Printer origin;<br>        boolean isHasChecked = false;<br>        boolean isValid = false;<br><br>        LooperPrinter(Printer printer) {<br>            this.origin = printer;<br>        }<br><br>        @Override<br>        public void println(String x) {<br>            if (null != origin) {<br>                origin.println(x);<br>                if (origin == this) {<br>                    throw new RuntimeException(TAG + &quot; origin == this&quot;);<br>                }<br>            }<br><br>            if (!isHasChecked) {<br>                isValid = x.charAt(0) == &#39;&gt;&#39; || x.charAt(0) == &#39;&lt;&#39;;<br>                isHasChecked = true;<br>                if (!isValid) {<br>                    MatrixLog.e(TAG, &quot;[println] Printer is inValid! x:%s&quot;, x);<br>                }<br>            }<br><br>            if (isValid) {<br>                dispatch(x.charAt(0) == &#39;&gt;&#39;, x);<br>            }<br><br>        }<br>    }","like_count":1},{"had_liked":false,"id":95741,"user_name":"VK","can_delete":false,"product_type":"c1","uid":1437676,"ip_address":"","ucode":"02371E6A28AF2C","user_header":"https://static001.geekbang.org/account/avatar/00/15/ef/ec/c2a13f01.jpg","comment_is_top":false,"comment_ctime":1558159611,"is_pvip":false,"replies":[{"id":"62016","content":"一般都是全局监控的吧，类似ANR一样","user_name":"作者回复","user_name_real":"张绍文","uid":"1009577","ctime":1576676645,"ip_address":"","comment_id":95741,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5853126907","product_id":100021101,"comment_content":"绍文老师，想问下卡顿信息监控上报，有什么策略判断吗，哪些方法函数需要监控，哪些不需要监控？","like_count":1,"discussions":[{"author":{"id":1009577,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/67/a9/e251ace7.jpg","nickname":"张绍文","note":"","ucode":"94B49E5F80BFDE","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":450581,"discussion_content":"一般都是全局监控的吧，类似ANR一样","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1576676645,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":58765,"user_name":"冬","can_delete":false,"product_type":"c1","uid":1331575,"ip_address":"","ucode":"8CECE26E1E89A8","user_header":"https://static001.geekbang.org/account/avatar/00/14/51/77/b7f397ea.jpg","comment_is_top":false,"comment_ctime":1547189813,"is_pvip":false,"replies":[{"id":"22047","content":"我们会把监控消息插入到message的头部，当然也是有可能会出现误报，但是从大数据来说问题不大","user_name":"作者回复","user_name_real":"张绍文","uid":"1009577","ctime":1548042037,"ip_address":"","comment_id":58765,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5842157109","product_id":100021101,"comment_content":"有个问题请教  用empty message 去检查卡顿 ，比如1s 没消费 ，就能说message 卡顿1s 吗 ？  如果空消息前边有几个消息  比如3个 ，现在正在执行第三个 我觉得也正常啊 不能说明卡顿啊","like_count":1,"discussions":[{"author":{"id":1009577,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/67/a9/e251ace7.jpg","nickname":"张绍文","note":"","ucode":"94B49E5F80BFDE","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":436203,"discussion_content":"我们会把监控消息插入到message的头部，当然也是有可能会出现误报，但是从大数据来说问题不大","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1548042037,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":49377,"user_name":"Kenny","can_delete":false,"product_type":"c1","uid":1234061,"ip_address":"","ucode":"E57D67DCE27967","user_header":"https://static001.geekbang.org/account/avatar/00/12/d4/8d/a3fd8957.jpg","comment_is_top":false,"comment_ctime":1544674483,"is_pvip":false,"replies":[{"id":"17927","content":"事件是最近匹配<br><br>线程hook那个很简单的，我下次放到sample里面","user_name":"作者回复","user_name_real":"张绍文","uid":"1009577","ctime":1544768823,"ip_address":"","comment_id":49377,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5839641779","product_id":100021101,"comment_content":"张老师，刚试了你给的Sample，plthook实现的自定义ftrace，B与E事件日志不成对？这个怎么看每一个事件的耗时？每个B找最近的E作为截止算时间吗？还是按照一个B对应一个E去算？还有一个问题就是课程提到通过hook thread_create去监控线程，这个是指监控应用的线程吗？如果是的话，那系统的线程比如binder，jit等如何去监控？话说这个张老师能把hook 线程创建的实现也放Sample?","like_count":1,"discussions":[{"author":{"id":1009577,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/67/a9/e251ace7.jpg","nickname":"张绍文","note":"","ucode":"94B49E5F80BFDE","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":432598,"discussion_content":"事件是最近匹配\n\n线程hook那个很简单的，我下次放到sample里面","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1544768823,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":340637,"user_name":"黄俊萌","can_delete":false,"product_type":"c1","uid":2139507,"ip_address":"","ucode":"F18CA2E9D8A42B","user_header":"https://static001.geekbang.org/account/avatar/00/20/a5/73/e5f38f0b.jpg","comment_is_top":false,"comment_ctime":1648983398,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1648983398","product_id":100021101,"comment_content":"太厉害了，感谢大佬，不愧是做性能优化的。等俺业务做完，把这些抄一抄做分享","like_count":0},{"had_liked":false,"id":339440,"user_name":"VI jolie","can_delete":false,"product_type":"c1","uid":1742621,"ip_address":"","ucode":"1CBC214FFEB546","user_header":"https://static001.geekbang.org/account/avatar/00/1a/97/1d/4bac8dbf.jpg","comment_is_top":false,"comment_ctime":1648104725,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1648104725","product_id":100021101,"comment_content":"问下demo里面用的是哪个hook框架","like_count":0},{"had_liked":false,"id":305584,"user_name":"cupcake","can_delete":false,"product_type":"c1","uid":1335259,"ip_address":"","ucode":"8B4070FFB181C4","user_header":"https://static001.geekbang.org/account/avatar/00/14/5f/db/bd0f7d6b.jpg","comment_is_top":false,"comment_ctime":1628060510,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1628060510","product_id":100021101,"comment_content":"asm插桩，怎么做到过滤简单方法的？","like_count":0},{"had_liked":false,"id":254803,"user_name":"董江鹏","can_delete":false,"product_type":"c1","uid":1187535,"ip_address":"","ucode":"3960E0489A51B4","user_header":"https://static001.geekbang.org/account/avatar/00/12/1e/cf/b7f04f87.jpg","comment_is_top":false,"comment_ctime":1603188995,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1603188995","product_id":100021101,"comment_content":"想问一下，“这也是我们线上目前依然使用基于消息队列的方法”，是基于setMessageLogging方案还是基于监控线程的方案？","like_count":0},{"had_liked":false,"id":236577,"user_name":"Shelly","can_delete":false,"product_type":"c1","uid":1961134,"ip_address":"","ucode":"AB82CBB85C64C0","user_header":"https://static001.geekbang.org/account/avatar/00/1d/ec/ae/b4a4ddf4.jpg","comment_is_top":false,"comment_ctime":1595470844,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1595470844","product_id":100021101,"comment_content":"做了几年framework开发，涉及到的卡顿问题几乎都是系统监控到的卡顿，有ANR日志，系统监控不到，没有ANR日志的，就无从下手了。<br>这节课之前从来没想过自己写一个卡顿监控工具，果然还是要多听多看啊，后面试试自己实现。","like_count":1},{"had_liked":false,"id":178377,"user_name":"lbj","can_delete":false,"product_type":"c1","uid":1697899,"ip_address":"","ucode":"C4D6DFAAE164A7","user_header":"https://static001.geekbang.org/account/avatar/00/19/e8/6b/ce264eb0.jpg","comment_is_top":false,"comment_ctime":1581673006,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1581673006","product_id":100021101,"comment_content":"大佬咨询个问题，为什么我们不能直接hookAMS中的addErrorToDropBox拿到anr日志？","like_count":0,"discussions":[{"author":{"id":1330065,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/N0NACGUr8dNAbN6BdiagPHBaB0EnyDsI9zWpwJteqTY38apOEnTOA7JkBAQnzYKJBgxu3Q8YMUILwLAB6camn4w/132","nickname":"Swing","note":"","ucode":"55FCA9ECEFBBEB","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":223831,"discussion_content":"...你想 运行时 hook server进程的代码？\nhook只能做到hook自身进程吧。。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1586257794,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":178371,"user_name":"童","can_delete":false,"product_type":"c1","uid":1121270,"ip_address":"","ucode":"CC7B5847FEFC0B","user_header":"https://static001.geekbang.org/account/avatar/00/11/1b/f6/fd6832f2.jpg","comment_is_top":false,"comment_ctime":1581671468,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1581671468","product_id":100021101,"comment_content":"请问一下，代码里的使用的System.loadLibrary(&quot;tracehook&quot;) ，我看项目里没有生成的对应的.so文件啊。","like_count":0,"discussions":[{"author":{"id":1930925,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTI4amTIT1RywF0KeCJ88e841spATyx75ntv29UzZ3eB98Yv1fPI1IbZeic3jScp8z4X8GgRBV95ib2g/132","nickname":"Geek_08dbb4","note":"","ucode":"13B424806AB4D3","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":388127,"discussion_content":"你编译就有了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1628603609,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":176621,"user_name":"Jerry银银","can_delete":false,"product_type":"c1","uid":1008404,"ip_address":"","ucode":"80DA1172A2360A","user_header":"https://static001.geekbang.org/account/avatar/00/0f/63/14/06eff9a4.jpg","comment_is_top":false,"comment_ctime":1581121476,"is_pvip":false,"discussion_count":3,"race_medal":0,"score":"1581121476","product_id":100021101,"comment_content":"老师，我知道，监控卡顿还有一种方法，就是：利用Choreographer.FrameCallback监控卡顿，而且还能计算fps。这种方法，要求Android 4.1(api 16以及以上），是因为对于系统版本有要求，才不推荐这种方法吗？<br><br>","like_count":0,"discussions":[{"author":{"id":1330065,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/N0NACGUr8dNAbN6BdiagPHBaB0EnyDsI9zWpwJteqTY38apOEnTOA7JkBAQnzYKJBgxu3Q8YMUILwLAB6camn4w/132","nickname":"Swing","note":"","ucode":"55FCA9ECEFBBEB","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":223835,"discussion_content":"Choreographer 需要等待系统的vsync信号的，主要是绘制相关，和卡顿啥关系？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1586257917,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1008404,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/63/14/06eff9a4.jpg","nickname":"Jerry银银","note":"","ucode":"80DA1172A2360A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1330065,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/N0NACGUr8dNAbN6BdiagPHBaB0EnyDsI9zWpwJteqTY38apOEnTOA7JkBAQnzYKJBgxu3Q8YMUILwLAB6camn4w/132","nickname":"Swing","note":"","ucode":"55FCA9ECEFBBEB","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":224653,"discussion_content":"可以研究下","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1586321863,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":223835,"ip_address":""},"score":224653,"extra":""},{"author":{"id":1543588,"avatar":"","nickname":"Geek_1d0e04","note":"","ucode":"7E68360BA1605B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1330065,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/N0NACGUr8dNAbN6BdiagPHBaB0EnyDsI9zWpwJteqTY38apOEnTOA7JkBAQnzYKJBgxu3Q8YMUILwLAB6camn4w/132","nickname":"Swing","note":"","ucode":"55FCA9ECEFBBEB","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":321033,"discussion_content":"可以计算两次回调的时间来看是否有丢帧现象","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1604535917,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":223835,"ip_address":""},"score":321033,"extra":""}]}]},{"had_liked":false,"id":135400,"user_name":"薯条","can_delete":false,"product_type":"c1","uid":1334064,"ip_address":"","ucode":"08E591FC62563A","user_header":"https://static001.geekbang.org/account/avatar/00/14/5b/30/83104f0f.jpg","comment_is_top":false,"comment_ctime":1569146360,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1569146360","product_id":100021101,"comment_content":"卡顿监控：1.帧率    2.Activity,Fragment 这些类的onCreate等相关的启动完成结束时间  3.线程数目。<br>卡顿优化 线程数目遇到过：一个项目中启动了几百个线程，大多数睡眠。少数运行的thread 可以通过profile找出来。用线程池代替传统的线程运行。。今天主要是学习到了 ，帧率，没想到大厂还可以这样玩。。。难怪我开发的app 总是没得微信流畅，平滑，原来问题在这，哈哈哈哈","like_count":0},{"had_liked":false,"id":129733,"user_name":"一片羽毛","can_delete":false,"product_type":"c1","uid":1357749,"ip_address":"","ucode":"C6B6AA0294219E","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTISkR0XDibLuwwl6PibTpQmDrnV7feN1YibqvrnpCE8fVk5cPPuUUxqvW4IZicrmTKXueTW6LpSNrxt4w/132","comment_is_top":false,"comment_ctime":1567233515,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1567233515","product_id":100021101,"comment_content":"请问一下，github的那个日志应该怎么分析","like_count":0},{"had_liked":false,"id":123246,"user_name":"黑色毛衣","can_delete":false,"product_type":"c1","uid":1135912,"ip_address":"","ucode":"FF7E235F91BA5C","user_header":"https://static001.geekbang.org/account/avatar/00/11/55/28/31b0cf2f.jpg","comment_is_top":false,"comment_ctime":1565652659,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1565652659","product_id":100021101,"comment_content":"整个课程我学习的感受是分为两大部分，优化和监控，两个内容是穿插在一起的，需要自己把它们找出来归类。<br>而且设计的知识点很多，Linux 虚拟机，运行时……累觉不爱，我想去种菜……","like_count":0},{"had_liked":false,"id":116105,"user_name":"EchoSomeTH","can_delete":false,"product_type":"c1","uid":1602634,"ip_address":"","ucode":"E73F13BF09695F","user_header":"https://static001.geekbang.org/account/avatar/00/18/74/4a/2dd9d62a.jpg","comment_is_top":false,"comment_ctime":1563786466,"is_pvip":false,"replies":[{"id":"62057","content":"objdump命令在ndk里面","user_name":"作者回复","user_name_real":"张绍文","uid":"1009577","ctime":1576680336,"ip_address":"","comment_id":116105,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1563786466","product_id":100021101,"comment_content":"adb shell objdump &#47;system&#47;lib&#47;libutils.so 提示objdump not found，咋导出来？","like_count":0,"discussions":[{"author":{"id":1009577,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/67/a9/e251ace7.jpg","nickname":"张绍文","note":"","ucode":"94B49E5F80BFDE","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":459386,"discussion_content":"objdump命令在ndk里面","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1576680336,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":91021,"user_name":"YI🎐","can_delete":false,"product_type":"c1","uid":1004429,"ip_address":"","ucode":"EC473E92A07373","user_header":"https://static001.geekbang.org/account/avatar/00/0f/53/8d/abb7bfe3.jpg","comment_is_top":false,"comment_ctime":1556800070,"is_pvip":false,"replies":[{"id":"62005","content":"Facebook的项目文档还是相对少一些，我们之前都是看着源码来慢慢试","user_name":"作者回复","user_name_real":"张绍文","uid":"1009577","ctime":1576675667,"ip_address":"","comment_id":91021,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1556800070","product_id":100021101,"comment_content":"profilo是怎么用起来的?创建profilo时候都要报错","like_count":0,"discussions":[{"author":{"id":1009577,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/67/a9/e251ace7.jpg","nickname":"张绍文","note":"","ucode":"94B49E5F80BFDE","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":448767,"discussion_content":"Facebook的项目文档还是相对少一些，我们之前都是看着源码来慢慢试","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1576675667,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":76778,"user_name":"朔野西骑","can_delete":false,"product_type":"c1","uid":1183901,"ip_address":"","ucode":"476DBE245E0BE3","user_header":"https://static001.geekbang.org/account/avatar/00/12/10/9d/c87edce1.jpg","comment_is_top":false,"comment_ctime":1552707313,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1552707313","product_id":100021101,"comment_content":"牛逼！","like_count":0},{"had_liked":false,"id":63889,"user_name":"金大圣","can_delete":false,"product_type":"c1","uid":1281346,"ip_address":"","ucode":"C02A784CDA4CC8","user_header":"https://static001.geekbang.org/account/avatar/00/13/8d/42/bee65f33.jpg","comment_is_top":false,"comment_ctime":1548578269,"is_pvip":false,"replies":[{"id":"23110","content":"后面会有专门的一个专题来讲","user_name":"作者回复","user_name_real":"张绍文","uid":"1009577","ctime":1549102706,"ip_address":"","comment_id":63889,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1548578269","product_id":100021101,"comment_content":"张老师，文章里面提到的inline hook技术可以多介绍一点吗？跟前面文章提到的PLT hook是一样的吗？","like_count":0,"discussions":[{"author":{"id":1009577,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/67/a9/e251ace7.jpg","nickname":"张绍文","note":"","ucode":"94B49E5F80BFDE","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":437750,"discussion_content":"后面会有专门的一个专题来讲","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1549102706,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":53785,"user_name":"Juinn","can_delete":false,"product_type":"c1","uid":1334226,"ip_address":"","ucode":"257796850A6CD9","user_header":"https://static001.geekbang.org/account/avatar/00/14/5b/d2/34a8c79c.jpg","comment_is_top":false,"comment_ctime":1545724653,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1545724653","product_id":100021101,"comment_content":"这节课，讲的就是真正技术实战了，果断断层，哈哈","like_count":0},{"had_liked":false,"id":53426,"user_name":"CHY","can_delete":false,"product_type":"c1","uid":1234426,"ip_address":"","ucode":"C307A86133B19D","user_header":"https://static001.geekbang.org/account/avatar/00/12/d5/fa/b1cb4626.jpg","comment_is_top":false,"comment_ctime":1545641880,"is_pvip":false,"replies":[{"id":"19344","content":"可以看看前面说到那个facebook  device-of-year的开源库","user_name":"作者回复","user_name_real":"张绍文","uid":"1009577","ctime":1545645196,"ip_address":"","comment_id":53426,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1545641880","product_id":100021101,"comment_content":"通过 proc&#47;cpuinfo 好像拿不到 cpu 核数，只能获取到打开了的 cpu 核心信息。。","like_count":0,"discussions":[{"author":{"id":1009577,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/67/a9/e251ace7.jpg","nickname":"张绍文","note":"","ucode":"94B49E5F80BFDE","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":434135,"discussion_content":"可以看看前面说到那个facebook  device-of-year的开源库","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1545645196,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":52454,"user_name":"曾经瘦过","can_delete":false,"product_type":"c1","uid":1240106,"ip_address":"","ucode":"57C32575A1C1FD","user_header":"https://static001.geekbang.org/account/avatar/00/12/ec/2a/b11d5ad8.jpg","comment_is_top":false,"comment_ctime":1545385232,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1545385232","product_id":100021101,"comment_content":"基本看不太懂，准备好好泡泡simple 和 补充一些底层知识","like_count":0},{"had_liked":false,"id":52178,"user_name":"Sgx","can_delete":false,"product_type":"c1","uid":1328729,"ip_address":"","ucode":"6672D939E174FE","user_header":"https://static001.geekbang.org/account/avatar/00/14/46/59/7c14e780.jpg","comment_is_top":false,"comment_ctime":1545327580,"is_pvip":false,"replies":[{"id":"18982","content":"就是类似热修复，保活，以及各种反射调用","user_name":"作者回复","user_name_real":"张绍文","uid":"1009577","ctime":1545356748,"ip_address":"","comment_id":52178,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1545327580","product_id":100021101,"comment_content":"绍文哥你好，请问每次课程中所说的黑科技是啥意思？","like_count":0,"discussions":[{"author":{"id":1009577,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/67/a9/e251ace7.jpg","nickname":"张绍文","note":"","ucode":"94B49E5F80BFDE","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":433770,"discussion_content":"就是类似热修复，保活，以及各种反射调用","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1545356748,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":50968,"user_name":"宋世通","can_delete":false,"product_type":"c1","uid":1245468,"ip_address":"","ucode":"C7AA3F0E6930F3","user_header":"https://static001.geekbang.org/account/avatar/00/13/01/1c/d638d46e.jpg","comment_is_top":false,"comment_ctime":1545094270,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1545094270","product_id":100021101,"comment_content":"大大，能讲一下根据火焰图的具体案例吗，我们这些入门级看的很艰难啊","like_count":0},{"had_liked":false,"id":50682,"user_name":"qh","can_delete":false,"product_type":"c1","uid":1137959,"ip_address":"","ucode":"0C0A3C32B061CE","user_header":"https://static001.geekbang.org/account/avatar/00/11/5d/27/a8fb15bf.jpg","comment_is_top":false,"comment_ctime":1545029303,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1545029303","product_id":100021101,"comment_content":"我实机vivo nex Android 8.1上面运行chapter 5的作业。调用systeminfo的readprocfile方法会报权限被拒绝的异常，但是在公司root的手机上就不会。","like_count":0},{"had_liked":false,"id":50057,"user_name":"进击的鱼儿","can_delete":false,"product_type":"c1","uid":1334770,"ip_address":"","ucode":"9B6CF26A8BCA8F","user_header":"https://static001.geekbang.org/account/avatar/00/14/5d/f2/785169e9.jpg","comment_is_top":false,"comment_ctime":1544853444,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1544853444","product_id":100021101,"comment_content":"我也掉队了，在小公司一直没有留意性能优化这一块，一直是一个盲点，可能需要补补性能优化相关的一些基础了","like_count":0},{"had_liked":false,"id":49688,"user_name":"极客学子","can_delete":false,"product_type":"c1","uid":1149510,"ip_address":"","ucode":"40051597564EB7","user_header":"https://static001.geekbang.org/account/avatar/00/11/8a/46/71747b18.jpg","comment_is_top":false,"comment_ctime":1544752692,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1544752692","product_id":100021101,"comment_content":"绍文老师，想请教下监控到的数据的存储和上传方案，还有怎么防止数据丢失，过多监控数据上传又是否对用户不太友好","like_count":0},{"had_liked":false,"id":49382,"user_name":"雨无尽时","can_delete":false,"product_type":"c1","uid":1298995,"ip_address":"","ucode":"2BF137791408A7","user_header":"https://wx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLUPzlts4GoyqvmvW8qXicQNBnFlNQGElSmC4DMBAVhu62uOf649xEKaWLYBsd6qDV3090wG7wGn6Q/132","comment_is_top":false,"comment_ctime":1544676581,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1544676581","product_id":100021101,"comment_content":"你好，目前遇到一个问题，主工程中引入了很多库，每个库都使用了自己创建的OkhttpClient, 都有自己的Connectionpool,导致很多线程无法有效监控，线程数过多引起OOM，这种情况能通过一些方法监控线程由哪里创建的不。<br><br>目前看到Connectpool 中有thread factory,来命名thread,可否通过hook该对象区分线程创建方。","like_count":0},{"had_liked":false,"id":49336,"user_name":"蚂蚁内推+v","can_delete":false,"product_type":"c1","uid":1050508,"ip_address":"","ucode":"24B10AEE54B3FD","user_header":"https://static001.geekbang.org/account/avatar/00/10/07/8c/0d886dcc.jpg","comment_is_top":false,"comment_ctime":1544667962,"is_pvip":false,"replies":[{"id":"17744","content":"自己应用还是系统的？<br><br>自己应用可以通过&#47;proc&#47;pid&#47; 几个linux文件都可以拿到，前面崩溃中也有说","user_name":"作者回复","user_name_real":"张绍文","uid":"1009577","ctime":1544671610,"ip_address":"","comment_id":49336,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1544667962","product_id":100021101,"comment_content":"有什么方案可以统计系统线程数呢","like_count":0,"discussions":[{"author":{"id":1009577,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/67/a9/e251ace7.jpg","nickname":"张绍文","note":"","ucode":"94B49E5F80BFDE","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":432580,"discussion_content":"自己应用还是系统的？\n\n自己应用可以通过/proc/pid/ 几个linux文件都可以拿到，前面崩溃中也有说","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1544671610,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":49313,"user_name":".y","can_delete":false,"product_type":"c1","uid":1340096,"ip_address":"","ucode":"DD2893C0BD5C4B","user_header":"https://static001.geekbang.org/account/avatar/00/14/72/c0/11cf22de.jpg","comment_is_top":false,"comment_ctime":1544664106,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1544664106","product_id":100021101,"comment_content":"张哥，早！问一哈，据我了解，微信早期版本基本每个方法都加了trace tag，是不是就是为了实现traceview ++ ？为什么后期又不用了？","like_count":0}]}