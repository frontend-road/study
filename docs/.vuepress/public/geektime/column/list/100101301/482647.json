{"id":482647,"title":"20 | Sentinel 实战：如何接入 Nacos 实现规则持久化？","content":"<p>你好，我是姚秋辰。</p><p>在前两节课里，我们已经知道了如何配置Sentinel的降级规则和流量整形规则。不过这套方案还有一个不完美的地方。因为我们配置的这些容错规则并没有被“保存”到某个存储介质中，所以，如果你重新启动Sentinel服务器或者重启应用程序，先前配置的所有规则就都消失不见了。那如何才能解决这个问题呢？</p><p>这节课，我将带你对Sentinel的源码做一下二次开发，我们将通过集成Nacos Config来实现一套持久化方案，把Sentinel中设置的限流规则保存到Nacos配置中心。这样一来，当应用服务或Sentinel Dashboard重新启动时，它们就可以自动把Nacos中的限流规则同步到本地，不管怎么重启服务都不会导致规则失效了。</p><p>在前两节课的实战环节，我们采取了一种“直连”的方式，将应用程序和Sentinel做了直接集成。在我们引入Nacos Config之后，现有的集成方式会发生些许的变化，我画了一幅图来帮你从架构层面理解新的对接方式。</p><p><img src=\"https://static001.geekbang.org/resource/image/4e/03/4e037301de04504f4d005f3babef9603.jpg?wh=1920x645\" alt=\"图片\"></p><p>从上面的图中，你会发现，Sentinel控制台将限流规则同步到了Nacos Config服务器来实现持久化。同时，在应用程序中，我们配置了一个Sentinel Datasource，从Nacos Config服务器获取具体配置信息。</p><!-- [[[read_end]]] --><p>在应用启动阶段，程序会主动从Sentinel Datasource获取限流规则配置。而在运行期，我们也可以在Sentinel控制台动态修改限流规则，应用程序会实时监听配置中心的数据变化，进而获取变更后的数据。</p><p>为了将Sentinel与Nacos Config集成，我们需要做两部分改造。</p><ul>\n<li>Sentinel组件二次开发：将限流规则同步到Nacos Config服务器。</li>\n<li>微服务改造：从Nacos Config获取限流规则。<br>\n接下来我们就开始第一步改造：对Sentinel组件进行二次开发吧。</li>\n</ul><h2>Sentinel组件二次开发</h2><p>在开始二次开发之前，我们需要将Sentinel的代码下载到本地。你可以从<a href=\"https://github.com/alibaba/Sentinel/releases\">GitHub的Releases页面</a>中找到1.8.2版本，在该版本下的Assets面板中下载Source code源文件。</p><p><img src=\"https://static001.geekbang.org/resource/image/ce/fa/ce4c27ccabe46d65ac33e397d39a86fa.png?wh=918x225\" alt=\"图片\"></p><p>我们把源码下载到本地并解压之后，你就可以将项目导入到开发工具中了。Sentinel项目下有很多子模块，我们这次主要针对其中的sentinel-dashboard子模块做二次开发。整个改造过程按照先后顺序将分为三个步骤：</p><ol>\n<li>修改Nacos依赖项的应用范围，将其打入jar包中；</li>\n<li>后端程序对接Nacos，将Sentinel限流规则同步到Nacos；</li>\n<li>开放单独的前端限流规则配置页面。<br>\n接下来我就带你按照上面的步骤来对Sentinel源码做改造。</li>\n</ol><h3>修改Nacos依赖项</h3><p>首先，你需要打开sentinel-dashboard项目的pom.xml文件，找到其中的依赖项sentinel-datasource-nacos，它是连接Nacos Config所依赖的必要组件。</p><p>但这里有一个问题。在Sentinel的源码中，sentinel-datasource-nacos的scope是test，意思是依赖项只在项目编译期的test阶段才会生效。</p><p>所以接下来，你需要将这个依赖项的<scope>标签注释掉。</scope></p><pre><code class=\"language-plain\">&lt;dependency&gt;\n    &lt;groupId&gt;com.alibaba.csp&lt;/groupId&gt;\n    &lt;artifactId&gt;sentinel-datasource-nacos&lt;/artifactId&gt;\n    &lt;!-- 将scope注释掉，改为编译期打包 --&gt;\n    &lt;!--&lt;scope&gt;test&lt;/scope&gt;--&gt;\n&lt;/dependency&gt;\n</code></pre><p>我们将<scope>test</scope>这一行代码注释掉以后，sentinel-datasource-nacos就将作为编译期的依赖项，被打包到最终的sentinel-dashboard.jar执行文件中。</p><p>依赖项就这么轻松地修改完毕了，接下来我们就可以在后端程序中实现Nacos Config的对接了。</p><h3>后端程序对接Nacos</h3><p>首先，你需要打开sentinel-dashboard项目下的src/test/java目录（注意是test目录而不是main目录），然后定位到com.alibaba.csp.sentinel.dashboard.rule.nacos包。在这个包下面，你会看到4个和Nacos Config有关的类，它们的功能描述如下。</p><ul>\n<li>NacosConfig：初始化Nacos Config的连接；</li>\n<li>NacosConfigUtil：约定了Nacos配置文件所属的Group和文件命名后缀等常量字段；</li>\n<li>FlowRuleNacosProvider：从Nacos Config上获取限流规则；</li>\n<li>FlowRuleNacosPublisher：将限流规则发布到Nacos Config。<br>\n<strong>为了让这些类在Sentinel运行期可以发挥作用，你需要在src/main/java下创建同样的包路径，然后将这四个文件从test路径拷贝到main路径下</strong>。我在这节课的改造过程都将围绕main路径下的类展开。</li>\n</ul><p>接下来，我们要做两件事，一是在NacosConfig类中配置Nacos连接串，二是在Controller层接入Nacos做限流规则持久化。</p><p>我们先从Nacos连接串改起。你需要打开NacosConfig类，找到其中的nacosConfigService方法。这个方法创建了一个ConfigService类，它是Nacos Config定义的通用接口，提供了Nacos配置项的读取和更新功能。FlowRuleNacosProvider和FlowRuleNacosPublisher这两个类都是基于这个ConfigService类实现Nacos数据同步的。我们来看一下改造后的代码。</p><pre><code class=\"language-java\">@Bean\npublic ConfigService nacosConfigService() throws Exception {\n    // 将Nacos的注册地址引入进来\n    Properties properties = new Properties();\n    properties.setProperty(\"serverAddr\", \"localhost:8848\");\n    properties.setProperty(\"namespace\", \"dev\");\n\n    return ConfigFactory.createConfigService(properties);\n}\n</code></pre><p>在上面的代码中，我通过自定义的Properties属性构造了一个ConfigService对象，将ConfigService背后的Nacos数据源地址指向了localhost:8848，并指定了命名空间为dev。这里我采用了硬编码的方式，你也可以对上面的实现过程做进一步改造，通过配置文件来注入serverAddr和namespace等属性。</p><p>这样，我们就完成了第一件事：在NacosConfig类中配置了Nacos连接串。别忘了还有第二件事，你需要在Controller层接入Nacos来实现限流规则持久化。</p><p>接下来，我们就在FlowControllerV2中正式接入Nacos吧。FlowControllerV2对外暴露了REST API，用来创建和修改限流规则。在这个类的源代码中，你需要修改两个变量的Qualifier注解值。你可以参考下面的代码。</p><pre><code class=\"language-java\">@Autowired\n// 指向刚才我们从test包中迁移过来的FlowRuleNacosProvider类\n@Qualifier(\"flowRuleNacosProvider\")\nprivate DynamicRuleProvider&lt;List&lt;FlowRuleEntity&gt;&gt; ruleProvider;\n\n@Autowired\n// 指向刚才我们从test包中迁移过来的FlowRuleNacosPublisher类\n@Qualifier(\"flowRuleNacosPublisher\")\nprivate DynamicRulePublisher&lt;List&lt;FlowRuleEntity&gt;&gt; rulePublisher;\n</code></pre><p>在代码中，我通过Qualifier标签将FlowRuleNacosProvider注入到了ruleProvier变量中，又采用同样的方式将FlowRuleNacosPublisher注入到了rulePublisher变量中。FlowRuleNacosProvider和FlowRuleNacosPublisher就是上一步我们刚从test目录Copy到main目录下的两个类。</p><p>修改完成之后，FlowControllerV2底层的限流规则改动就会被同步到Nacos服务器了。这个同步工作是由FlowRuleNacosPublisher执行的，它会发送一个POST请求到Nacos服务器来修改配置项。我来带你看一下FlowRuleNacosPublisher类的源码。</p><pre><code class=\"language-java\">@Component(\"flowRuleNacosPublisher\")\npublic class FlowRuleNacosPublisher implements DynamicRulePublisher&lt;List&lt;FlowRuleEntity&gt;&gt; {\n    \n    // 底层借助configService与Nacos进行通信\n    @Autowired\n    private ConfigService configService;\n    @Autowired\n    private Converter&lt;List&lt;FlowRuleEntity&gt;, String&gt; converter;\n\n    @Override\n    public void publish(String app, List&lt;FlowRuleEntity&gt; rules) throws Exception {\n        AssertUtil.notEmpty(app, \"app name cannot be empty\");\n        if (rules == null) {\n            return;\n        }\n        // 发布到Nacos上的配置文件名是：\n        // app + NacosConfigUtil.FLOW_DATA_ID_POSTFIX\n        //\n        // 所属的Nacos group是NacosConfigUtil.GROUP_ID的值\n        configService.publishConfig(app + NacosConfigUtil.FLOW_DATA_ID_POSTFIX,\n            NacosConfigUtil.GROUP_ID, converter.convert(rules));\n    }\n}\n</code></pre><p>在上面的代码中，FlowRuleNacosPublisher会在Nacos Config上创建一个用来保存限流规则的配置文件，这个配置文件以“application.name”开头，以“-flow-rules”结尾，而且它所属的Group为“SENTINEL_GROUP”。这里用到的文件命名规则和Group都是通过NacosConfigUtil类中的常量指定的，我把这段代码贴在了下面，你可以参考一下。</p><pre><code class=\"language-plain\">public final class NacosConfigUtil {\n\n    // 这个是Sentinel注册的配置项所在的分组\n    public static final String GROUP_ID = \"SENTINEL_GROUP\";\n\n    // 流量整形规则的后缀\n    public static final String FLOW_DATA_ID_POSTFIX = \"-flow-rules\";\n</code></pre><p>到这里，我们就完成了对后端程序的改造，将Sentinel限流规则同步到了Nacos。接下来我们需要对前端页面稍加修改，开放一个独立的页面，用来维护那些被同步到Nacos上的限流规则。</p><h3>前端页面改造</h3><p>首先，我们打开sentinel-dashboard模块下的webapp目录，该目录存放了Sentinel控制台的前端页面资源。我们需要改造的文件是sidebar.html，这个html文件定义了控制台的左侧导航栏。</p><p>接下来，我们在导航列表中加入下面这段代码，增加一个导航选项，这个选项指向一个全新的限流页面。</p><pre><code class=\"language-plain\">&lt;li ui-sref-active=\"active\"&gt;\n  &lt;a ui-sref=\"dashboard.flow({app: entry.app})\"&gt;\n    &lt;i class=\"glyphicon glyphicon-filter\"&gt;&lt;/i&gt;&amp;nbsp;&amp;nbsp;流控规则 极客时间改造&lt;/a&gt;\n&lt;/li&gt;\n</code></pre><p>如果你点击这个新加入的导航选项，就会定向到一个全新的限流页面，你在这个页面上做的所有修改，都会同步到Nacos Config。同时，当Sentinel Dashboard启动的时候，它也会主动从Nacos Config获取上一次配置的限流规则。</p><p>到这里，我们的Sentinel二次开发就完成了。接下来，我来带你对微服务模块做一番改造，将微服务程序接入Nacos Config，获取Sentinel限流规则。</p><h2>微服务改造</h2><p>微服务端的改造非常简单，我们不需要对代码做任何改动，只需要添加一个新的依赖项，并在配置文件中添加sentinel datasource连接信息就可以了。</p><p>在前面的课程中，我们已经将coupon-customer-impl接入了Sentinel控制台，所以这节课我们就继续基于customer服务来做改造吧。</p><p>首先，我们需要往coupon-customer-serv的pom文件中添加sentinel-datasource-nacos的依赖项，这个组件用来对接Sentinel和Nacos Config：</p><pre><code class=\"language-plain\">&lt;dependency&gt;\n    &lt;groupId&gt;com.alibaba.csp&lt;/groupId&gt;\n    &lt;artifactId&gt;sentinel-datasource-nacos&lt;/artifactId&gt;\n&lt;/dependency&gt;\n</code></pre><p>然后，我们在application.yml配置文件中找到spring.cloud.sentinel节点，在这个节点下添加一段Nacos数据源的配置。</p><pre><code class=\"language-plain\">spring:\n cloud:\n  sentinel:\n    datasource:\n      # 数据源的key，可以自由命名\n      geekbang-flow:\n        # 指定当前数据源是nacos\n        nacos:\n          # 设置Nacos的连接地址、命名空间和Group ID\n          server-addr: localhost:8848\n          namespace: dev\n          groupId: SENTINEL_GROUP\n          # 设置Nacos中配置文件的命名规则\n          dataId: ${spring.application.name}-flow-rules\n          # 必填的重要字段，指定当前规则类型是\"限流\"\n          rule-type: flow\n</code></pre><p>在上面的配置项中，有几个重要的点需要强调一下。</p><ol>\n<li>我们在微服务端的sentinal数据源中配置的namespace和groupID，一定要和Sentinal Dashoboard二次改造中的中的配置相同，否则将无法正常同步限流规则。Sentinal Dashboard中namespace是在NacosConfig类中指定的，而groupID是在NacosConfigUtil类中指定的。</li>\n<li>dataId的文件命名规则，需要和Sentinel二次改造中的FlowRuleNacosPublisher类保持一致，如果你修改了FlowRuleNacosPublisher中的命名规则，那么也要在每个微服务端做相应的变更。<br>\n到这里，我们所有的改造工作就已经完成了，接下来我们就启动程序来验证改造效果吧。</li>\n</ol><h2>验证限流规则同步效果</h2><p>首先，你需要整体编译Sentinel源代码，编译完成之后从命令行进入到sentinel-dashboard子模块下的target目录，你会看到一个sentinel-dashboard.jar文件。你可以在命令行执行以下命令，以8080为端口启动Sentinel Dashboard应用：</p><pre><code class=\"language-plain\">java -Dserver.port=8080 -Dcsp.sentinel.dashboard.server=localhost:8080 -Dproject.name=sentinel-dashboard -jar sentinel-dashboard.jar\n</code></pre><p>然后，你需要启动coupon-customer-serv服务，并通过postman工具发送一个服务请求，调用requestCoupon服务领取优惠券。</p><p>接下来，你可以登录Sentinel Dashboard服务。这时你会看到左侧的导航栏多了一个“流控规则 极客时间改造”的选项。你可以点击这个选项，并手动在当前页面右上方点击“新增流控规则”，为requestCoupon添加一条“QPS=1 快速失败”的流控规则。</p><p><img src=\"https://static001.geekbang.org/resource/image/35/12/35ef9d5a832481a753cbd3670e1d0712.png?wh=995x658\" alt=\"图片\"></p><p>最后，打开Nacos Config的配置列表页，你就可以看到一个coupon-customer-serv-flow-rules的配置文件被创建了出来，它的Group是“SENTINEL_GROUP”。</p><p>这时，如果我们在Sentinel Dashboard改动这条限流规则，那么改动后的数据会同步到Nacos Config，微服务端将通过监听配置中心的数据变化来实时获取变更后数据。</p><p><img src=\"https://static001.geekbang.org/resource/image/7c/03/7c17a38cf1a4999630a392426cea0d03.png?wh=1035x539\" alt=\"图片\"></p><p>到这里，我们的限流规则持久化改造就完成了。这里有三个容易踩坑的环节，需要你注意一下。</p><ol>\n<li>如果Sentinel控制台的左侧导航栏没有显示coupon-customer-serv服务，你需要通过postman对coupon-customer-serv发起一次调用，<strong>触发信息上报</strong>之后就能看到这个选项了；</li>\n<li>只有在“流控规则 极客时间改造”这个Tab下手动创建的限流规则会持久化到Nacos服务器，而在“流控规则”这个Tab下创建的规则并不会做持久化。</li>\n<li>如果Dashboard在启动环节报出“端口被占用”的错，你可以kill掉占用8080端口的进程，或者换一个端口启动Dashboard应用。</li>\n</ol><h2>总结</h2><p>现在，我们来回顾一下这节课的重点内容。今天我们对Sentinel源代码做了二次改造，将限流规则同步到了Nacos Config。在这个环节里，你需要特别注意“<strong>配置一致性</strong>”，也就是说<strong>控制台中的Nacos连接配置一定要和微服务端保持一致</strong>，这是最容易出错的环节。</p><p>我们今天的持久化改造主要围绕“限流规则”展开，如果你想继续深入学习Sentinel持久化方案，我建议你结合今天讲的源码二次改造过程，对熔断规则、热点规则等模块做进一步改造，实现多项规则的Nacos数据同步。这个任务相当考验你的源码阅读能力，以及对Sentinel的理解程度，你可以挑战一下。</p><h2>思考题</h2><p>结合我今天的源码改造过程，请你想一想，如果要改造“熔断规则”，你知道有哪些改动点吗？</p><p>好啦，这节课就结束啦。欢迎你把这节课分享给更多对Spring Cloud感兴趣的朋友。我是姚秋辰，我们下节课再见！</p>","neighbors":{"left":{"article_title":"19 | Sentinel 实战：如何为项目添加异常降级方案？","id":481607},"right":{"article_title":"加餐：说透微服务 | 什么是主链路规划？","id":483331}},"comments":[{"had_liked":false,"id":332388,"user_name":"逝影落枫","can_delete":false,"product_type":"c1","uid":1064489,"ip_address":"","ucode":"34788B4A504CD1","user_header":"https://static001.geekbang.org/account/avatar/00/10/3e/29/cc30bd9d.jpg","comment_is_top":false,"comment_ctime":1643196310,"is_pvip":false,"replies":[{"id":"121474","content":"可能是官方想锻炼大家的动手能力，所以没提供组件化的方式。不过阿里云的产品倒是提供了，典型的用开源项目导流到自己的商用项目里，吃相有点难看","user_name":"作者回复","comment_id":332388,"uid":"2819998","ip_address":"","utype":1,"ctime":1643301164,"user_name_real":"编辑"}],"discussion_count":1,"race_medal":0,"score":"53182803862","product_id":100101301,"comment_content":"为何对接数据源，不采用启动组件的方式，要改代码这么low的？如何做平滑升级？","like_count":13,"discussions":[{"author":{"id":2819998,"avatar":"https://static001.geekbang.org/account/avatar/00/2b/07/9e/d2de2832.jpg","nickname":"姚半仙","note":"","ucode":"4C86AA5D6D8C39","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":548672,"discussion_content":"可能是官方想锻炼大家的动手能力，所以没提供组件化的方式。不过阿里云的产品倒是提供了，典型的用开源项目导流到自己的商用项目里，吃相有点难看","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1643301164,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":342381,"user_name":"牛年榴莲","can_delete":false,"product_type":"c1","uid":1183703,"ip_address":"","ucode":"230C076193C6C0","user_header":"https://static001.geekbang.org/account/avatar/00/12/0f/d7/31d07471.jpg","comment_is_top":false,"comment_ctime":1650236199,"is_pvip":false,"replies":[{"id":"125197","content":"小项目怎么快怎么来，用微服务好处不大，到时候规模上来了再小步快跑重构","user_name":"作者回复","comment_id":342381,"uid":"2819998","ip_address":"","utype":1,"ctime":1650419684,"user_name_real":"编辑"}],"discussion_count":1,"race_medal":0,"score":"14535138087","product_id":100101301,"comment_content":"小团队技术选型基本可以放弃这个组件了","like_count":3,"discussions":[{"author":{"id":2819998,"avatar":"https://static001.geekbang.org/account/avatar/00/2b/07/9e/d2de2832.jpg","nickname":"姚半仙","note":"","ucode":"4C86AA5D6D8C39","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":565244,"discussion_content":"小项目怎么快怎么来，用微服务好处不大，到时候规模上来了再小步快跑重构","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1650419684,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":334517,"user_name":"哦吼掉了","can_delete":false,"product_type":"c1","uid":1232599,"ip_address":"","ucode":"1F89B1BA1EEF52","user_header":"https://static001.geekbang.org/account/avatar/00/12/ce/d7/8168e1bf.jpg","comment_is_top":false,"comment_ctime":1644982492,"is_pvip":true,"replies":[{"id":"122263","content":"因为官方想让大家用cloud版服务，开源出来的是官方鱼饵","user_name":"作者回复","comment_id":334517,"uid":"2819998","ip_address":"","utype":1,"ctime":1645078971,"user_name_real":"编辑"}],"discussion_count":1,"race_medal":0,"score":"10234917084","product_id":100101301,"comment_content":"为啥官方不提供可配置化的数据源，就像nacos那样？提供一个规则配置导出的工具也行，开源项目写的这么low不合适把(改dashborad后端代码-从test目录下复制文件,修改前端这么折腾)，应该提一个issue","like_count":2,"discussions":[{"author":{"id":2819998,"avatar":"https://static001.geekbang.org/account/avatar/00/2b/07/9e/d2de2832.jpg","nickname":"姚半仙","note":"","ucode":"4C86AA5D6D8C39","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":551661,"discussion_content":"因为官方想让大家用cloud版服务，开源出来的是官方鱼饵","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1645078971,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":332284,"user_name":"来来","can_delete":false,"product_type":"c1","uid":2173616,"ip_address":"","ucode":"A8FD16CDFBC732","user_header":"https://static001.geekbang.org/account/avatar/00/21/2a/b0/f72ee91c.jpg","comment_is_top":false,"comment_ctime":1643157820,"is_pvip":false,"replies":[{"id":"121426","content":"其实可以这么玩，不过保险起见还是用sentinel改比较好，复杂规则的配置内容蛮多的，直接改的话一不小心改错了容易出故障","user_name":"作者回复","comment_id":332284,"uid":"2819998","ip_address":"","utype":1,"ctime":1643209288,"user_name_real":"编辑"}],"discussion_count":2,"race_medal":0,"score":"10233092412","product_id":100101301,"comment_content":"老师，经过以上改造后，是不是也可以在nacos中直接修改coupon-customer-serv-flow-rules配置，达到限流的效果，而不要再经过Sentinel 控制台操作","like_count":2,"discussions":[{"author":{"id":2819998,"avatar":"https://static001.geekbang.org/account/avatar/00/2b/07/9e/d2de2832.jpg","nickname":"姚半仙","note":"","ucode":"4C86AA5D6D8C39","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":548480,"discussion_content":"其实可以这么玩，不过保险起见还是用sentinel改比较好，复杂规则的配置内容蛮多的，直接改的话一不小心改错了容易出故障","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1643209288,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1434423,"avatar":"https://static001.geekbang.org/account/avatar/00/15/e3/37/c132802f.jpg","nickname":"WESTWALL","note":"","ucode":"295A030F9D3BF4","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":548436,"discussion_content":"应用里改了DataSource之后，跟那个控制台就没有任何关系了，控制台也不需要做高可用什么的，它就只提供了一个UI而已。如果你想在Nacos里面直接去配置规则，当然也是可以的。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1643190289,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":332521,"user_name":"peter","can_delete":false,"product_type":"c1","uid":1058183,"ip_address":"","ucode":"261C3FC001DE2D","user_header":"https://static001.geekbang.org/account/avatar/00/10/25/87/f3a69d1b.jpg","comment_is_top":false,"comment_ctime":1643289834,"is_pvip":true,"replies":[{"id":"121476","content":"Q1: 因为持久化层在nacos<br>Q2: 可以支持其它数据源，但不是所有组件都能作为存储服务的，像rocketmq肯定不行<br>Q3: 这个包源码未改动过，感觉像是mvn没拉下来包的问题，换一个阿里元mvn镜像试试<br>","user_name":"作者回复","comment_id":332521,"uid":"2819998","ip_address":"","utype":1,"ctime":1643301502,"user_name_real":"编辑"}],"discussion_count":1,"race_medal":0,"score":"5938257130","product_id":100101301,"comment_content":"Q1：微服务为什么要从nacos获取sentinel的配置信息?<br>A在前面的18、19篇中，微服务已经通过注解实现了与sentinel的绑定，并不需要获取流控规则（这句话如果错误，则为“已经能从sentinel获取流控规则”）。现在sentinel集成nacos后，为什么要从nacos获取规则配置信息？<br>B 另外，sentinel没有与nacos集成时，微服务需要从sentinel获取规则配置信息吗？如需要，怎么获取的？<br>Q2：sentinel规则可以保存到其他组件吗？<br>Sentinel的规则，除了可以保存到nacos中外，还可以保存到其他组件吗？比如zookeeper，比如redis，比如RocketMQ。<br>Q3：最新的sentinel1.8.3编译失败？<br>我是从官网下载的最新1.8.3版本，导入idean2019，按照老师第20篇的步骤修改代码，然后编译，但编译失败了。<br>sentinel-adapter模块下的“sentinel-grpc-adapter”下面，<br>src&#47;test&#47;FooServiceClient.java报告错误：Error:(18, 49) java: 程序包com.alibaba.csp.sentinel.adapter.grpc.gen不存在，<br>此文件中，导入grpc.gen失败，&quot;gen&quot;在idea中为红色字体。<br>import com.alibaba.csp.sentinel.adapter.grpc.gen.FooRequest;<br>官网下载的，应该是完整的，怎么会报错呢？该怎么解决？","like_count":1,"discussions":[{"author":{"id":2819998,"avatar":"https://static001.geekbang.org/account/avatar/00/2b/07/9e/d2de2832.jpg","nickname":"姚半仙","note":"","ucode":"4C86AA5D6D8C39","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":548674,"discussion_content":"Q1: 因为持久化层在nacos\nQ2: 可以支持其它数据源，但不是所有组件都能作为存储服务的，像rocketmq肯定不行\nQ3: 这个包源码未改动过，感觉像是mvn没拉下来包的问题，换一个阿里元mvn镜像试试\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1643301502,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":355173,"user_name":"beatdrug","can_delete":false,"product_type":"c1","uid":1043410,"ip_address":"浙江","ucode":"6291179E6E5C5B","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/4VCgcBbU51SiasW8tpjYwdqBGe2RNIy6neuI7AEjCQ6t9qqXw6tXpZ2bDCoxJhWqQJv2LlFmemVYJCrLze2Aa7g/132","comment_is_top":false,"comment_ctime":1661153083,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1661153083","product_id":100101301,"comment_content":"熔断的话，后端要实现一个degradecontrollerV2，里面内容可以参考限流的，然后就是前端在sidebar文件新增一个标签li，后面需要在app.js中添加state，还要新增一个熔断页面文件这个可以参考现有的熔断页面","like_count":0},{"had_liked":false,"id":348564,"user_name":"郭井阳","can_delete":false,"product_type":"c1","uid":2995751,"ip_address":"","ucode":"78030396132383","user_header":"","comment_is_top":false,"comment_ctime":1655198912,"is_pvip":false,"replies":[{"id":"127580","content":"这个值就freestyle就好，只有一个sentinel源就随便起个酷炫的名字","user_name":"作者回复","comment_id":348564,"uid":"2819998","ip_address":"","utype":1,"ctime":1657105059,"user_name_real":"编辑"}],"discussion_count":1,"race_medal":0,"score":"1655198912","product_id":100101301,"comment_content":"geekbang-flow 这个数据库key怎么对应的","like_count":0,"discussions":[{"author":{"id":2819998,"avatar":"https://static001.geekbang.org/account/avatar/00/2b/07/9e/d2de2832.jpg","nickname":"姚半仙","note":"","ucode":"4C86AA5D6D8C39","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":578977,"discussion_content":"这个值就freestyle就好，只有一个sentinel源就随便起个酷炫的名字","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1657105059,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":348563,"user_name":"郭井阳","can_delete":false,"product_type":"c1","uid":2995751,"ip_address":"","ucode":"78030396132383","user_header":"","comment_is_top":false,"comment_ctime":1655198868,"is_pvip":false,"replies":[{"id":"127579","content":"这个值就freestyle就好，只有一个sentinel源就随便起个酷炫的名字","user_name":"作者回复","comment_id":348563,"uid":"2819998","ip_address":"","utype":1,"ctime":1657105053,"user_name_real":"编辑"}],"discussion_count":1,"race_medal":0,"score":"1655198868","product_id":100101301,"comment_content":"datasource: # 数据源的key，可以自由命名 geekbang-flow: 这个值是怎么取值的","like_count":0,"discussions":[{"author":{"id":2819998,"avatar":"https://static001.geekbang.org/account/avatar/00/2b/07/9e/d2de2832.jpg","nickname":"姚半仙","note":"","ucode":"4C86AA5D6D8C39","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":578976,"discussion_content":"这个值就freestyle就好，只有一个sentinel源就随便起个酷炫的名字","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1657105053,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":343043,"user_name":"密码123456","can_delete":false,"product_type":"c1","uid":1126593,"ip_address":"","ucode":"9889463CC0EA71","user_header":"https://static001.geekbang.org/account/avatar/00/11/30/c1/2dde6700.jpg","comment_is_top":false,"comment_ctime":1650608750,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1650608750","product_id":100101301,"comment_content":"我感觉，dashboard就是一个，管理页面。只要数据持久化了。离开dashboard也可以继续使用。","like_count":0},{"had_liked":false,"id":339899,"user_name":"文艺码农","can_delete":false,"product_type":"c1","uid":1581031,"ip_address":"","ucode":"7F0EB4BA8FB61C","user_header":"https://static001.geekbang.org/account/avatar/00/18/1f/e7/495068f6.jpg","comment_is_top":false,"comment_ctime":1648454165,"is_pvip":false,"replies":[{"id":"124400","content":"这是在哪个artifact里面的报的依赖缺失？试下删除.m2的对应文件夹，把这个artifact重新拉一下","user_name":"作者回复","comment_id":339899,"uid":"2819998","ip_address":"","utype":1,"ctime":1648645757,"user_name_real":"编辑"}],"discussion_count":1,"race_medal":0,"score":"1648454165","product_id":100101301,"comment_content":"程序包io.envoyproxy.envoy.api.v2.ratelimit不存在","like_count":0,"discussions":[{"author":{"id":2819998,"avatar":"https://static001.geekbang.org/account/avatar/00/2b/07/9e/d2de2832.jpg","nickname":"姚半仙","note":"","ucode":"4C86AA5D6D8C39","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":559211,"discussion_content":"这是在哪个artifact里面的报的依赖缺失？试下删除.m2的对应文件夹，把这个artifact重新拉一下","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1648645758,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":339898,"user_name":"文艺码农","can_delete":false,"product_type":"c1","uid":1581031,"ip_address":"","ucode":"7F0EB4BA8FB61C","user_header":"https://static001.geekbang.org/account/avatar/00/18/1f/e7/495068f6.jpg","comment_is_top":false,"comment_ctime":1648454161,"is_pvip":false,"replies":[{"id":"124399","content":"看一下是哪一个artifact没有拉取到，把.m2文件里那个对应folder删除掉重新拉，屡试不爽。如果aliyun获取不到，就切到默认的mvn大仓库试一下","user_name":"作者回复","comment_id":339898,"uid":"2819998","ip_address":"","utype":1,"ctime":1648645698,"user_name_real":"编辑"}],"discussion_count":1,"race_medal":0,"score":"1648454161","product_id":100101301,"comment_content":"请问大家都没有碰到缺少依赖的情况吗? 使用阿里云镜像仓库了,好像还是拉取不到 :","like_count":0,"discussions":[{"author":{"id":2819998,"avatar":"https://static001.geekbang.org/account/avatar/00/2b/07/9e/d2de2832.jpg","nickname":"姚半仙","note":"","ucode":"4C86AA5D6D8C39","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":559210,"discussion_content":"看一下是哪一个artifact没有拉取到，把.m2文件里那个对应folder删除掉重新拉，屡试不爽。如果aliyun获取不到，就切到默认的mvn大仓库试一下","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1648645699,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":332412,"user_name":"wake","can_delete":false,"product_type":"c1","uid":1222812,"ip_address":"","ucode":"08F77A1144D383","user_header":"https://static001.geekbang.org/account/avatar/00/12/a8/9c/643646b9.jpg","comment_is_top":false,"comment_ctime":1643219058,"is_pvip":false,"replies":[{"id":"121475","content":"这里背后是获取的appType，是一个启动项参数csp.sentinel.app.type，在特定的type下才会认为是Gateway方式","user_name":"作者回复","comment_id":332412,"uid":"2819998","ip_address":"","utype":1,"ctime":1643301346,"user_name_real":"编辑"}],"discussion_count":1,"race_medal":0,"score":"1643219058","product_id":100101301,"comment_content":"&lt;li ui-sref-active=&quot;active&quot; ng-if=&quot;!entry.isGateway&quot;&gt;<br>            &lt;a ui-sref=&quot;dashboard.flow({app: entry.app})&quot;&gt;<br>              &lt;i class=&quot;glyphicon glyphicon-filter&quot;&gt;&lt;&#47;i&gt;&amp;nbsp;&amp;nbsp;流控规则 极客时间改造&lt;&#47;a&gt;<br>          &lt;&#47;li&gt;<br><br>不太懂前端，但是我不加ng-if=&quot;!entry.isGateway&quot;的话，导航栏显示不出来新的流控规则菜单","like_count":0,"discussions":[{"author":{"id":2819998,"avatar":"https://static001.geekbang.org/account/avatar/00/2b/07/9e/d2de2832.jpg","nickname":"姚半仙","note":"","ucode":"4C86AA5D6D8C39","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":548673,"discussion_content":"这里背后是获取的appType，是一个启动项参数csp.sentinel.app.type，在特定的type下才会认为是Gateway方式","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1643301346,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":332387,"user_name":"逝影落枫","can_delete":false,"product_type":"c1","uid":1064489,"ip_address":"","ucode":"34788B4A504CD1","user_header":"https://static001.geekbang.org/account/avatar/00/10/3e/29/cc30bd9d.jpg","comment_is_top":false,"comment_ctime":1643196145,"is_pvip":false,"replies":[{"id":"121576","content":"对于Flow这个场景来说，可以参考ControllerV2里的实现代码，其实就是在原先的非持久化controller的代码上增加了Nacos同步的部分（包括push+pull），可以参考同样的实现思路，把熔断、黑白名单等其他场景也做持久化改造。js端改动后的调用会落到V2，可以通过debug模式启动sentinel-dashboard，用断点来验证","user_name":"作者回复","comment_id":332387,"uid":"2819998","ip_address":"","utype":1,"ctime":1643513441,"user_name_real":"编辑"}],"discussion_count":1,"race_medal":0,"score":"1643196145","product_id":100101301,"comment_content":"老师，sentinel端的FlowControllerV2改造后，是否还涉及FlowServiceV2的改造？同时，新增的标签页改为dashboard.flow调用，是调用到FlowControllerV2上吗？对应的JS调用，是否也有改动？","like_count":0,"discussions":[{"author":{"id":2819998,"avatar":"https://static001.geekbang.org/account/avatar/00/2b/07/9e/d2de2832.jpg","nickname":"姚半仙","note":"","ucode":"4C86AA5D6D8C39","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":549009,"discussion_content":"对于Flow这个场景来说，可以参考ControllerV2里的实现代码，其实就是在原先的非持久化controller的代码上增加了Nacos同步的部分（包括push+pull），可以参考同样的实现思路，把熔断、黑白名单等其他场景也做持久化改造。js端改动后的调用会落到V2，可以通过debug模式启动sentinel-dashboard，用断点来验证","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1643513441,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]}]}