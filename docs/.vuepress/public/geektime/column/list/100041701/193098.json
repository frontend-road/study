{"id":193098,"title":"20 | WAF：如何为漏洞百出的Web应用保驾护航？","content":"<p>你好，我是何为舟。</p><p>如果你细心观察的话，应该会发现，随着Web应用越来越多，黑客的攻击目标也逐渐转向了针对Web安全的攻击。传统的防火墙主要专注于网络层的攻击防御，对Web安全的防御能力相对欠缺。因此，WAF（Web Application Firewall，Web应用防护系统）的概念也就被提了出来。WAF说白了就是应用网关防火墙的一种，它只专注于Web安全的防御，近几年来逐渐被当成一个相对独立的产品方向来研究。</p><p>那么，WAF和防火墙到底有哪些区别呢？针对我们之前讲过的各种Web攻击手段，WAF是如何提供保护的呢？今天，我们就一起来看！</p><h2>WAF的工作模式</h2><p>前面我说过，WAF的本质是“专注于Web安全的防火墙”，Web安全关注于应用层的HTTP请求。因此，WAF的分析和策略都工作于应用层。</p><p>在Web安全这个方向上，WAF对比防火墙又做出了哪些改进呢？我们可以从WAF的三种工作模式入手，探讨这两者的区别。这三种工作模式分别是：透明代理、反向代理和插件模式。</p><p><strong>透明代理和大部分防火墙的工作模式相同</strong>：在客户端和服务端通信不需要作出任何改变的情况下，对HTTP流量进行请求和转发。在这个过程中，为了解密HTTPS流量，WAF必须和服务端同步HTTPS对称密钥。<br>\n<img src=\"https://static001.geekbang.org/resource/image/5a/28/5a545133d2e1eee0455a232df595c528.jpg?wh=1920*761\" alt=\"\"><br>\n透明代理的优点就是容易部署，它不需要客户端和服务端进行任何改动。但是，透明代理的缺点也有很多。透明代理本身不是一个Web服务，所以它无法修改或者响应HTTP的请求，只能够控制请求的通过或者拒绝。正因为如此，它也无法实现Web服务所提供的认证、内容过滤等功能。</p><!-- [[[read_end]]] --><p><strong>区别于透明代理，反向代理要求客户端将请求的目标地址指向WAF，而不是服务端</strong>。在反向代理工作模式中，服务端接收的请求，实际上也是由WAF发起的。在这个过程中，WAF本身就相当于一个Web服务，只不过对所有的HTTP请求都进行了转发。<br>\n<img src=\"https://static001.geekbang.org/resource/image/59/3f/59568304a8a84041838eba9dd52dd63f.jpg?wh=1920*789\" alt=\"\"><br>\n因为<strong>反向代理WAF本质上是一个Web服务</strong>，所以HTTPS证书可以直接部署在WAF上。WAF在对HTTPS流量解密之后，就可以在内网中用HTTP的形式，向服务端发起代理请求了。</p><p>而且，反向代理WAF作为一个Web服务，能够提供的功能也更加丰富。比如，WAF可以充当一个前置的认证平台，对所有请求进行身份校验和身份管理。同时，也因为在反向代理工作模式中，客户端和服务端不直接通信，而是将全部请求都先请求到WAF上，所以反向代理WAF对服务端的隔离也更加彻底。</p><p>但是，反向代理同样存在缺点。首先，功能更丰富意味着性能开销更大。因此，反向代理WAF对硬件要求更高。其次，反向代理WAF一旦宕机，就无法响应客户端的任何请求。这样一来，即使服务端仍然正常，但用户已经无法正常使用应用了。而对于透明代理WAF来说，如果WAF宕机了，只是无法提供Web防护而已，客户端和服务端的通信不会受到任何影响。</p><p>最后，我们来看<strong>插件模式</strong>。在插件模式中，WAF不再是网络中一个独立的安全产品了，而是以插件的形式依附于Web服务端本身，为Web安全提供防护。</p><p>那怎么才能将WAF植入到服务端的逻辑中呢？我们最常使用的一种技术就是<a href=\"https://baike.baidu.com/item/AOP/1332219?fr=aladdin\">AOP</a>（Aspect Oriented Programming，面向切面编程）技术。在AOP技术中，WAF可以作为一个切片植入到服务端的逻辑中。<br>\n<img src=\"https://static001.geekbang.org/resource/image/70/cd/7088839e71a8ea0ad30251924a60f7cd.jpg?wh=1920*786\" alt=\"\"><br>\n而且，目前AOP技术十分流行，各类编程语言都支持。所以，插件模式的WAF部署同样十分简单。但是，这种将WAF和服务端强耦合的方式，会带来一定的负向影响。</p><p>首先，WAF和服务端一块工作在服务器上，会消耗服务器额外的资源，对Web服务本身的性能产生影响。</p><p>其次，WAF和服务端耦合，也就意味着WAF的所有改动都会直接影响到服务端。对于代理模式的WAF来说，通常只需要自测就可以升级了。而对于插件模式的WAF，它本身的升级必须和服务端一起进入评估和测试流程，就会增加额外的工作量。</p><p>为了帮助你理解这三种工作模式，我总结了一张表格。<br>\n<img src=\"https://static001.geekbang.org/resource/image/0a/99/0a25d69ed7803de96a8e2bb50232b899.jpeg?wh=1920*1080\" alt=\"\"><br>\n总结一下，关于WAF的三种工作模式，你需要重点掌握这些内容：首先，WAF将处理的请求协议限定为HTTP，所以WAF比应用网关防火墙具备更高的专业性和灵活性；其次，WAF可以以代理的形式，在网络中提供Web安全防护，也可以作为插件嵌入到服务端中；最后，我们也可以根据需求、成本和硬件环境等因素，选择不同的部署模式对Web安全进行防护。</p><h2>WAF的功能</h2><p>在了解WAF的主要工作模式之后，我们知道，在部署模式上WAF比防火墙具备更高的灵活性。WAF可以根据不同的需求，以不同的形式为Web服务提供保护。同样地，在功能上，WAF也可以去实现一些HTTP请求中特有的安全功能。比如去解析HTTP数据、解密HTTPS流量等。下面，我们就来看一下，WAF到底有哪些功能服务？</p><h3>1. HTTP解析能力</h3><p>我们知道，WAF专注于Web安全。因此，对HTTP请求进行解析是WAF最基础的能力。在HTTP中，通用的内容包括：请求的URL以及其中的参数、HTTP头部信息、POST的body内容等。</p><p>除此之外，某些攻击特征可能隐藏得比较深，比如JSON中的某个字段，无法通过JSON的整体内容检测出来，我们必须一个字段一个字段去判断。因此，WAF还需要解析XML、JSON等RPC传输协议，能够理解对应的key和value分别是什么。</p><p>除了单纯地解析内容，WAF还需要对HTTP内容做必要的处理。为什么要这么做呢？这主要有两方面原因。</p><p>第一，HTTP中的内容可能经过了UrlEncode等编码方式的处理，因此，<strong>WAF需要具备解码能力，避免攻击的特征通过编码来进行绕过</strong>。</p><p>第二，<strong>想要看到HTTPS中的加密内容，WAF必须能够解密HTTPS请求</strong>。在透明代理模式中，WAF需要和服务端同步HTTPS的密钥，才能够获得解密的请求；在反向代理模式中，WAF自带证书，可以直接解密；在插件模式中，WAF依靠服务端解密请求之后，再进行HTTP的解析。</p><h3>2. Web安全防护</h3><p>通过对HTTP请求进行解析、对编码内容进行解码和对HTTPS进行解密之后，WAF就能够获得全部HTTP请求内容了。在此基础之上，WAF就可以对请求内容进行分析，为Web服务提供安全保护了。</p><p>我总结了三种主要的分析手段。</p><ul>\n<li>签名匹配：和杀毒软件中病毒库的概念类似，WAF也可以维护一个攻击样本库。样本库中存有已知攻击请求的散列签名，只要HTTP请求内容的散列签名在这个样本库，就说明HTTP请求中携带了攻击内容。</li>\n<li>正则匹配：签名匹配需要请求完全一致才能够检测出来，而正则匹配只需要部分特征就可以检测。WAF可以通过抽象一些攻击特征的正则表达式，对HTTP请求进行检测。比如，如果请求的某个参数中出现了单引号，那么很有可能就是黑客发起的SQL注入攻击。</li>\n<li>行为分析：除了针对单次请求的分析之外，WAF还可以针对连续的访问请求特征进行提取和分析。为什么要这么做呢？这是因为，很多时候，我们无法准确判断单次请求是不是攻击请求，但是如果疑似的攻击请求频繁出现，我们就基本能够确定了。也就是说，一个用户不会频繁地访问同一个页面，而黑客需要对一个漏洞点发起多次尝试，才能够实现攻击的效果。</li>\n</ul><p>在识别到攻击的请求之后，WAF就可以对请求进行拦截，从而避免Web服务受到黑客的攻击了。</p><h3>3. 审计告警</h3><p>WAF还有另外一个重要的功能，就是为Web服务提供安全相关的审计和告警功能。Web安全相关的审计包括：发生攻击的时间、路径、频次等。通过这些信息，开发人员能够知道自己的Web服务面对的攻击威胁是什么样的，也就能够更好地评估威胁，完善Web安全防护机制。</p><p>除此之外，WAF还能提供其他的审计能力。这是因为，WAF能够解析出HTTP请求的全部内容，提供审计所需要的全部日志字段。这些日志可以是各个页面的访问次数、用户的访问行为和接口的响应性能等。尽管这些指标和安全没有太多关系，但是它们对于产品设计和服务质量来说都很常见，那么WAF就可以作为一个统计分析工具，来为你提供服务。</p><h3>4. 数据保护和虚拟补丁</h3><p>反向代理或者插件模式的WAF，还能够对HTTP请求中的数据进行一定的处理，提供额外的数据保护功能。</p><p>最简单的，WAF可以加密HTTP响应中的Cookie内容，使得Cookie以保密的形式存储在浏览器中。当浏览器将加密后的Cookie附加到HTTP请求中的时候，WAF又可以进行解密。这样一来，服务端接收到的始终是明文的信息，而实际上，WAF通过加解密为Cookie提供了额外的保护。另外，WAF还可以对返回内容中的手机号、身份证号等敏感字段进行统一的打码处理，避免因为开发的疏忽，导致这些敏感信息的泄露。</p><p>在介绍插件漏洞的时候，我们提到了防火墙可以提供虚拟补丁的功能，来临时对插件漏洞进行修复。如果插件是Web相关的服务，那么WAF是不是也可以提供虚拟补丁的功能呢？当然是可以的。那WAF是如何提供虚拟补丁的呢？我来举个简单的例子。</p><p>在经典的Structs 2漏洞中，黑客是通过Structs 2中包含的漏洞接口发起攻击的。所以，WAF只需要将这些包含漏洞的接口进行封禁，或者对请求内容中的Structs 2攻击特征（特定接口的异常序列化数据）进行分析拦截，就能够临时避免Structs 2受到已公开的漏洞攻击。之后，我们只需要对Structs 2进行升级再打上补丁，这样就可以下线虚拟补丁了。</p><h2>总结</h2><p>好了，今天的内容讲完了。我们来一起总结回顾一下，你需要掌握的重点内容。</p><p>在今天的课程中，我们主要介绍了WAF的工作模式和主要功能。简单来说，WAF就是专注于Web安全的防火墙，它能够以透明代理、反向代理和插件的模式，运行在网络和系统的各个环节中。从功能上来说，WAF能够解决绝大部分的Web安全问题，对于黑客针对Web的攻击进行分析和拦截，同时提供额外的审计告警、数据保护等能力。</p><p>同样地，在选取WAF的时候，我们首先需要考虑功能的完整性和易用性。公司能够以较低的成本部署WAF，并解决大部分的Web安全问题，这是WAF最关键的效果。其次，就是可配置和可维护性，对于漏过的攻击请求如何进行补充完善，对于误判的请求如何进行放行，这是我们在使用WAF过程中必然会遇到的问题。一个好的WAF产品应该提供友好的入口，供开发和运维人员对漏过和误判的规则进行维护。<br>\n<img src=\"https://static001.geekbang.org/resource/image/37/29/3765e8983fd74023b6ab839a7e5b1b29.jpg?wh=2250*1776\" alt=\"\"></p><h2>思考题</h2><p>最后，给你留一道思考题。</p><p>任何安全产品都不可能达到100%的安全。你可以思考一下，在Web安全中，黑客能够通过哪些方式绕过WAF的检测和过滤呢？</p><p>欢迎留言和我分享你的思考和疑惑，也欢迎你把文章分享给你的朋友。我们下一讲再见！</p>","comments":[{"had_liked":false,"id":175350,"user_name":"devil","can_delete":false,"product_type":"c1","uid":1259625,"ip_address":"","ucode":"BB6090411BAA23","user_header":"https://static001.geekbang.org/account/avatar/00/13/38/69/864569a4.jpg","comment_is_top":false,"comment_ctime":1580669462,"is_pvip":false,"replies":[{"id":"68174","content":"开源WAF确实有一些，比如ModSecurity，不过我了解到的很少有用开源的。因为WAF的技术难度其实不高，难的是写规则。因此，有钱没人的公司会直接买乙方的商业WAF，规则运维都交给乙方。没钱有人的公司会自己开发一个，自己根据已知的漏洞写规则。没钱没人的话，还是不要搞WAF了，最后规则不完善，都是漏报和误报，就是个坑。。。","user_name":"作者回复","user_name_real":"captain","uid":"1012580","ctime":1580715799,"ip_address":"","comment_id":175350,"utype":1}],"discussion_count":1,"race_medal":0,"score":"74595113494","product_id":100041701,"comment_content":"老师有没有推荐的开源waf？","like_count":17,"discussions":[{"author":{"id":1012580,"avatar":"","nickname":"captain","note":"","ucode":"471A8412D923EB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":482704,"discussion_content":"开源WAF确实有一些，比如ModSecurity，不过我了解到的很少有用开源的。因为WAF的技术难度其实不高，难的是写规则。因此，有钱没人的公司会直接买乙方的商业WAF，规则运维都交给乙方。没钱有人的公司会自己开发一个，自己根据已知的漏洞写规则。没钱没人的话，还是不要搞WAF了，最后规则不完善，都是漏报和误报，就是个坑。。。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1580715799,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":175034,"user_name":"宝仔","can_delete":false,"product_type":"c1","uid":1013493,"ip_address":"","ucode":"A0F17DFF99DB21","user_header":"https://static001.geekbang.org/account/avatar/00/0f/76/f5/e3f5bd8d.jpg","comment_is_top":false,"comment_ctime":1580533814,"is_pvip":true,"replies":[{"id":"68168","content":"微服务通常都有统一的网关入口，因此WAF一般是和网关放在一块的。如果是自己实现的话，一般都是以Nginx的Lua插件来完成的。如果是引用的开源或者商用版本，一般WAF是串联在网关之前或者之后来进行过滤。经过网关处的WAF过滤后，内部微服务直接的HTTP调用就可以当作可信来处理了。","user_name":"作者回复","user_name_real":"captain","uid":"1012580","ctime":1580714825,"ip_address":"","comment_id":175034,"utype":1}],"discussion_count":1,"race_medal":0,"score":"31645304886","product_id":100041701,"comment_content":"现代基于k8s微服务的架构下,用哪种模式的WAF会更好呢？微服务下一般会有一层网关，网关可能是基于java的spring gateway，也可能是基于openresty(nginx+Lua)的Kong，想问下这种模式下怎么设计WAF更加友好点？望老师能做回复","like_count":7,"discussions":[{"author":{"id":1012580,"avatar":"","nickname":"captain","note":"","ucode":"471A8412D923EB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":482606,"discussion_content":"微服务通常都有统一的网关入口，因此WAF一般是和网关放在一块的。如果是自己实现的话，一般都是以Nginx的Lua插件来完成的。如果是引用的开源或者商用版本，一般WAF是串联在网关之前或者之后来进行过滤。经过网关处的WAF过滤后，内部微服务直接的HTTP调用就可以当作可信来处理了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1580714825,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":227049,"user_name":"Geek_","can_delete":false,"product_type":"c1","uid":1487966,"ip_address":"","ucode":"C7529F20430139","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/22aLiabkzOiaibmszqJlRVMcOdbnNicnaicDfAcOPoINWLibicYflZjMib6uibYqKOeibRHvuzgTSoAs8rzZvAiayA7E6jctQ/132","comment_is_top":false,"comment_ctime":1592272453,"is_pvip":false,"replies":[{"id":"85014","content":"0day就是还未公开，但是黑客已经掌握了的漏洞。1day指已经公开，但补丁还没出，或者还没打上补丁的漏洞。","user_name":"作者回复","user_name_real":"captain","uid":"1012580","ctime":1593347682,"ip_address":"","comment_id":227049,"utype":1}],"discussion_count":1,"race_medal":0,"score":"23067108933","product_id":100041701,"comment_content":"老师，请问0day漏洞和1day漏洞有什么区别和联系？","like_count":6,"discussions":[{"author":{"id":1012580,"avatar":"","nickname":"captain","note":"","ucode":"471A8412D923EB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":498473,"discussion_content":"0day就是还未公开，但是黑客已经掌握了的漏洞。1day指已经公开，但补丁还没出，或者还没打上补丁的漏洞。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1593347682,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":179924,"user_name":"小老鼠","can_delete":false,"product_type":"c1","uid":1257460,"ip_address":"","ucode":"C663A0C863A515","user_header":"https://static001.geekbang.org/account/avatar/00/13/2f/f4/2dede51a.jpg","comment_is_top":false,"comment_ctime":1582122086,"is_pvip":false,"replies":[{"id":"70030","content":"1、这就取决于不同的WAF产品了。个人感觉，业务选手想绕过WAF还是很困难的，但专业选手花上一定时间研究，一般都还是能绕过的。<br>2、理论上是，但实际上不可能存在100%安全的WAF。所以安全讲究纵深防御，即使有了WAF，程序中还是应当有相应的防御机制。<br>3、都不可防","user_name":"作者回复","user_name_real":"captain","uid":"1012580","ctime":1582273921,"ip_address":"","comment_id":179924,"utype":1}],"discussion_count":1,"race_medal":0,"score":"18761991270","product_id":100041701,"comment_content":"1，现在有许多技术可以挠过WAF，绕过WAF的难度有多大？2，是不是有了好的WAF，程序就可以不用作对sql注入，XSS注入，CSRF的工作？3，WAF可防止DDoS，钓鱼，旁注攻击吗？","like_count":4,"discussions":[{"author":{"id":1012580,"avatar":"","nickname":"captain","note":"","ucode":"471A8412D923EB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":484451,"discussion_content":"1、这就取决于不同的WAF产品了。个人感觉，业务选手想绕过WAF还是很困难的，但专业选手花上一定时间研究，一般都还是能绕过的。\n2、理论上是，但实际上不可能存在100%安全的WAF。所以安全讲究纵深防御，即使有了WAF，程序中还是应当有相应的防御机制。\n3、都不可防","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582273921,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":174502,"user_name":"李海涛","can_delete":false,"product_type":"c1","uid":1072401,"ip_address":"","ucode":"89170384B8A483","user_header":"https://static001.geekbang.org/account/avatar/00/10/5d/11/40b47496.jpg","comment_is_top":false,"comment_ctime":1580254279,"is_pvip":false,"replies":[{"id":"68173","content":"这个确实了解的不多，而且感觉有点作广告了，所以就免去了。而且厂商的对外口径嘛，以宣传为主，真实性确实不可参考，还是得实际测试为主。其实，现在的WAF都不差，实际采购的时候，重点关注的还是价格和服务质量。","user_name":"作者回复","user_name_real":"captain","uid":"1012580","ctime":1580715376,"ip_address":"","comment_id":174502,"utype":1}],"discussion_count":1,"race_medal":0,"score":"14465156167","product_id":100041701,"comment_content":"市面上都有哪些主要WAF产品等，各有什么优缺点，就更好了。","like_count":3,"discussions":[{"author":{"id":1012580,"avatar":"","nickname":"captain","note":"","ucode":"471A8412D923EB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":482421,"discussion_content":"这个确实了解的不多，而且感觉有点作广告了，所以就免去了。而且厂商的对外口径嘛，以宣传为主，真实性确实不可参考，还是得实际测试为主。其实，现在的WAF都不差，实际采购的时候，重点关注的还是价格和服务质量。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1580715376,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":199236,"user_name":"大坏狐狸","can_delete":false,"product_type":"c1","uid":1325678,"ip_address":"","ucode":"5044F89A505C5B","user_header":"https://static001.geekbang.org/account/avatar/00/14/3a/6e/e39e90ca.jpg","comment_is_top":false,"comment_ctime":1585483450,"is_pvip":false,"replies":[{"id":"74977","content":"有一个前提是，目前的网络中间件都支持自动的降级熔断机制，而透明WAF相当于一个插件，如果WAF宕机了，流量就会不经过WAF，直接发往目的地。","user_name":"作者回复","user_name_real":"captain","uid":"1012580","ctime":1585574462,"ip_address":"","comment_id":199236,"utype":1}],"discussion_count":3,"race_medal":0,"score":"10175418042","product_id":100041701,"comment_content":"在客户端和服务端通信不需要作出任何改变的情况下，对 HTTP 流量进行请求和转发。在这个过程中，为了解密 HTTPS 流量，WAF 必须和服务端同步 HTTPS 对称密钥。<br><br>后面讲  “如果 WAF 宕机了，只是无法提供 Web 防护而已，客户端和服务端的通信不会受到任何影响“<br>这里老师 它不转发了 C和S为什么不受影响呢？","like_count":2,"discussions":[{"author":{"id":1012580,"avatar":"","nickname":"captain","note":"","ucode":"471A8412D923EB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":489807,"discussion_content":"有一个前提是，目前的网络中间件都支持自动的降级熔断机制，而透明WAF相当于一个插件，如果WAF宕机了，流量就会不经过WAF，直接发往目的地。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585574462,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1038798,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/d9/ce/4528cb4b.jpg","nickname":"呼呼","note":"","ucode":"5D7B57C05B5D8C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":296165,"discussion_content":"那也就是waf的前端还得有个负载均衡？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1596463739,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1131827,"avatar":"https://static001.geekbang.org/account/avatar/00/11/45/33/59a7be1e.jpg","nickname":"蔡波","note":"","ucode":"53907722DF36D6","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":244277,"discussion_content":"这个思路挺好，降级熔断","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1587573305,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":174890,"user_name":"宝仔","can_delete":false,"product_type":"c1","uid":1013493,"ip_address":"","ucode":"A0F17DFF99DB21","user_header":"https://static001.geekbang.org/account/avatar/00/0f/76/f5/e3f5bd8d.jpg","comment_is_top":false,"comment_ctime":1580448403,"is_pvip":true,"replies":[{"id":"68165","content":"自己开发WAF一般是这个模式。厂商卖WAF的话，一般还是以一个硬件的网关盒子来接入的。","user_name":"作者回复","user_name_real":"captain","uid":"1012580","ctime":1580714276,"ip_address":"","comment_id":174890,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5875415699","product_id":100041701,"comment_content":"现在的WAF一般都是nginx+lua来实现的把？","like_count":1,"discussions":[{"author":{"id":1012580,"avatar":"","nickname":"captain","note":"","ucode":"471A8412D923EB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":482558,"discussion_content":"自己开发WAF一般是这个模式。厂商卖WAF的话，一般还是以一个硬件的网关盒子来接入的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1580714276,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":174511,"user_name":"小晏子","can_delete":false,"product_type":"c1","uid":1132337,"ip_address":"","ucode":"3AAA6FB5ACB6AE","user_header":"https://static001.geekbang.org/account/avatar/00/11/47/31/f35367c8.jpg","comment_is_top":false,"comment_ctime":1580262557,"is_pvip":false,"replies":[{"id":"68172","content":"正则匹配一般只要部分匹配就可以了，而且正则匹配本身支持模糊匹配，所以提交非常大的数据可能用处并不大。","user_name":"作者回复","user_name_real":"captain","uid":"1012580","ctime":1580715191,"ip_address":"","comment_id":174511,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5875229853","product_id":100041701,"comment_content":"可以从安全防护的地方入手，如WAF通过正则匹配进行行为检测，那么可以考虑能不能绕过正则匹配或者让其匹配失效，比如通过提交非常大的数据，使其数据量超过WAF的能够正则匹配字符，那就可以不经过WAF的正则匹配了。","like_count":2,"discussions":[{"author":{"id":1012580,"avatar":"","nickname":"captain","note":"","ucode":"471A8412D923EB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":482424,"discussion_content":"正则匹配一般只要部分匹配就可以了，而且正则匹配本身支持模糊匹配，所以提交非常大的数据可能用处并不大。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1580715191,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":174487,"user_name":"leslie","can_delete":false,"product_type":"c1","uid":1324255,"ip_address":"","ucode":"798E7C1CC98CC2","user_header":"https://static001.geekbang.org/account/avatar/00/14/34/df/64e3d533.jpg","comment_is_top":false,"comment_ctime":1580228669,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5875195965","product_id":100041701,"comment_content":"这个东西其实早就被广泛使用了：具体原理用途都大致知道，记忆中这东西应当有和nginx一起使用，真实的作用还是第一次如此学习；受教了。","like_count":1},{"had_liked":false,"id":349045,"user_name":"LubinLew","can_delete":false,"product_type":"c1","uid":1995285,"ip_address":"","ucode":"F30A4933C021BA","user_header":"https://static001.geekbang.org/account/avatar/00/1e/72/15/a8b97a39.jpg","comment_is_top":false,"comment_ctime":1655690727,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1655690727","product_id":100041701,"comment_content":"关于WAF的透明代理模式无法更改请求和响应的说法是错误的,我从事WAF开发多年,硬件WAF的透明代理模式都是可以根据功能修改流量的。其原理是从内核将TCP包截获到用户态的TCP协议栈,再还原成HTTP协议,修改后在发送到用户态的TCP协议栈,封包后再发送出去。","like_count":1},{"had_liked":false,"id":302217,"user_name":"yong","can_delete":false,"product_type":"c1","uid":1047479,"ip_address":"","ucode":"E83FDDD570A9D7","user_header":"https://static001.geekbang.org/account/avatar/00/0f/fb/b7/6ecb191f.jpg","comment_is_top":false,"comment_ctime":1626139616,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1626139616","product_id":100041701,"comment_content":"我司没钱有人，用了naxsi. ","like_count":0},{"had_liked":false,"id":301336,"user_name":"亚林","can_delete":false,"product_type":"c1","uid":1018972,"ip_address":"","ucode":"4A5A6D24314B79","user_header":"https://static001.geekbang.org/account/avatar/00/0f/8c/5c/3f164f66.jpg","comment_is_top":false,"comment_ctime":1625638616,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1625638616","product_id":100041701,"comment_content":"可不可以直接把WAF直接干死，不绕过了？","like_count":0},{"had_liked":false,"id":280182,"user_name":"code2","can_delete":false,"product_type":"c1","uid":1281792,"ip_address":"","ucode":"BBA5748FB6A01C","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/8OPzdpDraQMvCNWAicicDt54sDaIYJZicBLfMyibXVs4V0ZibEdkZlbzxxL7aGpRoeyvibag5LaAaaGKSdwYQMY2hUrQ/132","comment_is_top":false,"comment_ctime":1614126999,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1614126999","product_id":100041701,"comment_content":"而且，目前 AOP 技术十分流行，各类编程语言都支持。——<br>aop是一种软件工程技术，又译为面向方面编程，与编程语言支持没有关系。","like_count":0},{"had_liked":false,"id":209966,"user_name":"蔡波","can_delete":false,"product_type":"c1","uid":1131827,"ip_address":"","ucode":"53907722DF36D6","user_header":"https://static001.geekbang.org/account/avatar/00/11/45/33/59a7be1e.jpg","comment_is_top":false,"comment_ctime":1587642545,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1587642545","product_id":100041701,"comment_content":"请教下老师，在留言中回答的，当WAF出现故障，网络中间件自动降级熔断是如何实现，可以展开讲下吗？我能想到的就是在网络设备上配置浮动静态路由来实现这个思路。","like_count":0},{"had_liked":false,"id":174523,"user_name":"tt","can_delete":false,"product_type":"c1","uid":1489957,"ip_address":"","ucode":"7753B79AD5A9AC","user_header":"https://static001.geekbang.org/account/avatar/00/16/bc/25/1c92a90c.jpg","comment_is_top":false,"comment_ctime":1580265125,"is_pvip":false,"replies":[{"id":"68170","content":"双拼和闭合你是指的Web安全中绕过过滤的攻击方法吧。也算是一种形式，不过现在WAF的规则一般比较完善，很难使用正常的攻击方式绕过。一般都是采用编码混淆、多个注入点拼接等方式，来隐藏攻击特征。","user_name":"作者回复","user_name_real":"captain","uid":"1012580","ctime":1580715014,"ip_address":"","comment_id":174523,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1580265125","product_id":100041701,"comment_content":"绕过WAF也是用双拼和闭合么？","like_count":0,"discussions":[{"author":{"id":1012580,"avatar":"","nickname":"captain","note":"","ucode":"471A8412D923EB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":482430,"discussion_content":"双拼和闭合你是指的Web安全中绕过过滤的攻击方法吧。也算是一种形式，不过现在WAF的规则一般比较完善，很难使用正常的攻击方式绕过。一般都是采用编码混淆、多个注入点拼接等方式，来隐藏攻击特征。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1580715014,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]}]}