{"id":488496,"title":"03 | 短 URL 生成器设计：百亿短 URL 怎样做到无冲突？","content":"<p>你好，我是李智慧。</p><p>从这节课开始，我们将结合具体的案例，来看看怎么设计高并发系统，你也可以学习具体的软件设计文档写法了。这个模块，我们先来看看，当高并发遇到海量数据处理时的架构。</p><p>在社交媒体上，人们经常需要分享一些URL，但是有些URL可能会很长，比如：<code>https://time.geekbang.org/hybrid/pvip?utm_source=geektime-pc-discover-banner&amp;utm_term=geektime-pc-discover-banner </code></p><p>这样长的URL显然体验并不友好。我们期望分享的是一些更短、更易于阅读的短URL，比如像 <code>http://1.cn/ScW4dt</code> 这样的。当用户点击这个短URL的时候，可以重定向访问到原始的链接地址。为此我们将设计开发一个短URL生成器，产品名称是“Fuxi（伏羲）”。</p><p>我们预计Fuxi需要管理的短URL规模在百亿级别，并发吞吐量达到数万级别。这个量级的数据对应的存储方案是什么样的？用传统的关系数据库存储，还是有其他更简单的办法？此外，如何提升系统的并发处理能力呢？这些是我们今天要重点考虑的问题。</p><h2>需求分析</h2><p>短URL生成器，也称作短链接生成器，就是将一个比较长的URL生成一个比较短的URL，当浏览器通过短URL生成器访问这个短URL的时候，重定向访问到原始的长URL目标服务器，访问时序图如下。</p><!-- [[[read_end]]] --><p><img src=\"https://static001.geekbang.org/resource/image/1e/1a/1e72b4e05d0884718b5a7ee2058a061a.jpg?wh=1920x873\" alt=\"图片\"></p><p>对于需要展示短URL的应用程序，由该应用调用短URL生成器生成短URL，并将该短URL展示给用户，用户在浏览器中点击该短URL的时候，请求发送到短URL生成器（短URL生成器以HTTP服务器的方式对外提供服务，短URL域名指向短URL生成器），短URL生成器返回HTTP重定向响应，将用户请求重定向到最初的原始长URL，浏览器访问长URL服务器，完成请求服务。</p><p><strong>短URL生成器的用例图</strong></p><p><img src=\"https://static001.geekbang.org/resource/image/79/5f/79b4e289b47b98e796a5b86d6d378b5f.jpg?wh=1920x873\" alt=\"图片\"></p><ol>\n<li>用户client程序可以使用短URL生成器Fuxi为每个长URL生成唯一的短URL，并存储起来。</li>\n<li>用户可以访问这个短URL，Fuxi将请求重定向到原始长URL。</li>\n<li>生成的短URL可以是Fuxi自动生成的，也可以是用户自定义的。用户可以指定一个长URL对应的短URL内容，只要这个短URL还没有被使用。</li>\n<li>管理员可以通过web后台检索、查看Fuxi的使用情况。</li>\n<li>短URL有有效期（2年），后台定时任务会清理超过有效期的URL，以节省存储资源，同时回收短URL地址链接资源。</li>\n</ol><h4>性能指标估算</h4><p>Fuxi的<strong>存储容量</strong>和<strong>并发量</strong>估算如下。</p><p>预计每月新生成短URL 5亿条，短URL有效期2年，那么总URL数量120亿。</p><p>$\\small 5亿\\times12月\\times2年=120亿$</p><ul>\n<li><strong>存储空间</strong><br>\n每条短URL数据库记录大约1KB，那么需要总存储空间12TB（不含数据冗余备份）。</li>\n</ul><p>$\\small 120亿\\times1KB=12TB$</p><ul>\n<li><strong>吞吐量</strong><br>\n每条短URL平均读取次数100次，那么平均访问吞吐量（每秒访问次数）2万。</li>\n</ul><p>$\\small（5亿\\times100）\\div（30\\times24\\times60\\times60）\\approx20000$</p><p>一般系统高峰期访问量是平均访问量的2倍，因此系统架构需要支持的吞吐能力应为4万。</p><ul>\n<li><strong>网络带宽</strong><br>\n短URL的重定向响应包含长URL地址内容，长URL地址大约500B，HTTP响应头其他内容大约500B，所以每个响应1KB，高峰期需要的响应网络带宽320Mb。</li>\n</ul><p>$\\small 4万（每秒）次请求\\times1KB=40MB\\times8bit=320Mb$</p><p>Fuxi的<strong>短URL长度估算</strong>如下。</p><p>短URL采用Base64编码，如果短URL长度是7个字符的话，大约可以编码4万亿个短URL。</p><p>$\\small 64^{7}\\approx4万亿$</p><p>如果短URL长度是6个字符的话，大约可以编码680亿个短URL。</p><p>$\\small 64^{6}\\approx680亿$</p><p>按我们前面评估，总URL数120亿，6个字符的编码就可以满足需求。因此Fuxi的短URL编码长度6个字符，形如http://l.cn/ScW4dt 。</p><h4>非功能需求</h4><ol>\n<li>系统需要保持高可用，不因为服务器、数据库宕机而引起服务失效。</li>\n<li>系统需要保持高性能，服务端80%请求响应时间应小于5ms，99%请求响应时间小于20ms，平均响应时间小于10ms。</li>\n<li>短URL应该是不可猜测的，即不能猜测某个短URL是否存在，也不能猜测短URL可能对应的长URL地址内容。</li>\n</ol><h2>概要设计</h2><p>短URL生成器的设计核心就是短URL的生成，即长URL通过某种函数，计算得到一个6个字符的短URL。短URL有几种不同的生成算法。</p><h4>单项散列函数生成短URL</h4><p>通常的设计方案是，将长URL利用MD5或者SHA256等单项散列算法，进行Hash计算，得到128bit或者256bit的Hash值。然后对该Hash值进行Base64编码，得到22个或者43个Base64字符，再截取前面的6个字符，就得到短URL了，如图。</p><p><img src=\"https://static001.geekbang.org/resource/image/a0/10/a04dd6f9f1d916e66aa555c608a4dc10.jpg?wh=1920x288\" alt=\"图片\"></p><p>但是这样得到的短URL，可能会发生Hash冲突，即不同的长URL，计算得到的短URL是相同的（MD5或者SHA256计算得到的Hash值几乎不会冲突，但是Base64编码后再截断的6个字符有可能会冲突）。所以在生成的时候，需要先校验该短URL是否已经映射为其他的长URL，如果是，那么需要重新计算（换单向散列算法，或者换Base64编码截断位置）。重新计算得到的短URL依然可能冲突，需要再重新计算。</p><p>但是这样的冲突处理需要多次到存储中查找URL，无法保证Fuxi的性能要求。</p><h4>自增长短URL</h4><p>一种免冲突的算法是用自增长自然数来实现，即维持一个自增长的二进制自然数，然后将该自然数进行Base64编码即可得到一系列的短URL。这样生成的的短URL必然唯一，而且还可以生成小于6个字符的短URL，比如自然数0的Base64编码是字符“A”，就可以用http://1.cn/A作为短URL。</p><p>但是这种算法将导致短URL是可猜测的，如果某个应用在某个时间段内生成了一批短URL，那么这批短URL就会集中在一个自然数区间内。只要知道了其中一个短URL，就可以通过自增（以及自减）的方式请求访问其他URL。Fuxi的需求是不允许短URL可预测。</p><h4>预生成短URL</h4><p>因此，Fuxi采用预生成短URL的方案。即预先生成一批没有冲突的短URL字符串，当外部请求输入长URL需要生成短URL的时候，直接从预先生成好的短URL字符串池中获取一个即可。</p><p>预生成短URL的算法可以采用随机数来实现，6个字符，每个字符都用随机数产生（用0~63的随机数产生一个Base64编码字符）。为了避免随机数产生的短URL冲突，需要在预生成的时候检查该URL是否已经存在（用布隆过滤器检查）。因为预生成短URL是离线的，所以这时不会有性能方面的问题。事实上，Fuxi在上线之前就已经生成全部需要的144亿条短URL并存储在文件系统中（预估需要短URL120亿，Fuxi预生成的时候进行了20%的冗余，即144亿。）</p><h4><strong>Fuxi的整体部署模型</strong></h4><p>Fuxi的业务逻辑比较简单，相对比较有挑战的就是<strong>高并发的读请求如何处理、预生成的短URL如何存储以及访问</strong>。高并发访问主要通过负载均衡与分布式缓存解决，而海量数据存储则通过HDFS以及HBase来完成。具体架构图如下。</p><p><img src=\"https://static001.geekbang.org/resource/image/7b/a8/7b4a85e1f5864d284541957a6bff3fa8.jpg?wh=1920x1112\" alt=\"图片\"></p><p>系统调用可以分成两种情况，一种是用户请求生成短URL的过程；另一种是用户访问短URL，通过Fuxi跳转到长URL的过程。</p><p>对于用户请求生成短URL的过程，在短URL系统Fuxi上线前，已经通过随机数算法预生成144亿条短URL并将其存储在HDFS文件系统中。系统上线运行后，应用程序请求生成短URL的时候（即输入长URL，请求返回短URL），请求通过负载均衡服务器被发送到短URL服务器集群，短URL服务器再通过负载均衡服务器调用短URL预加载服务器集群。</p><p>短URL预加载服务器此前已经从短URL预生成文件服务器（HDFS）中加载了一批短URL存放在自己的内存中，这时，只需要从内存中返回一个短URL即可，同时将短URL与长URL的映射关系存储在HBase数据库中，时序图如下。</p><p><img src=\"https://static001.geekbang.org/resource/image/d6/e3/d66dd516a71dba3a43225b0063127fe3.jpg?wh=1920x720\" alt=\"图片\"></p><p>对于用户通过客户端请求访问短URL的过程（即输入短URL，请求返回长URL），请求通过负载均衡服务器发送到短URL服务器集群，短URL服务器首先到缓存服务器中查找是否有该短URL，如果有，立即返回对应的长URL，短URL生成服务器构造重定向响应返回给客户端应用。</p><p>如果缓存没有用户请求访问的短URL，短URL服务器将访问HBase短URL数据库服务器集群。如果数据库中存在该短URL，短URL服务器会将该短URL写入缓存服务器集群，并构造重定向响应返回给客户端应用。如果HBase中没有该短URL，短URL服务器将构造404响应返回给客户端应用，时序图如下。</p><p><img src=\"https://static001.geekbang.org/resource/image/bd/12/bdb18fb9931eb8c52379e8eea9690d12.jpg?wh=1920x968\" alt=\"图片\"></p><p>过期短URL清理服务器会每个月启动一次，将已经超过有效期（2年）的URL数据删除，并将这些短URL追加写入到短URL预生成文件中。</p><p>为了保证系统<strong>高可用</strong>，Fuxi的应用服务器、文件服务器、数据库服务器都采用集群部署方案，单个服务器故障不会影响Fuxi短URL的可用性。</p><p>对于Fuxi的<strong>高性能</strong>要求，80%以上的访问请求将被设计为通过缓存返回。Redis的缓存响应时间1ms左右，服务器端请求响应时间小于3ms，满足80%请求小于5ms的性能目标。对于缓存没有命中的数据，通过HBase获取，HBase平均响应时间10ms，也可以满足设计目标中的性能指标。</p><p>对于Redis缓存<strong>内存空间</strong>估算，业界一般认为，超过80%请求集中在最近6天生成的短URL上，Fuxi主要缓存最近六天生成的短URL即可。根据需求容量估计，最近6天生成的短URL数量约1亿条，因此需要Redis缓存服务器内存空间：$\\small 1亿\\times1KB=100GB$。</p><h2>详细设计</h2><p>详细设计关注重定向响应码、短URL预生成文件及加载、用户自定义短URL等几个关键设计点。</p><h4>重定向响应码</h4><p>满足短URL重定向要求的HTTP重定向响应码有301和302两种，其中301表示永久重定向，即浏览器一旦访问过该短URL，就将重定向的原始长URL缓存在本地，此后不再请求短URL生成器，直接根据缓存在浏览器（HTTP客户端）的长URL路径进行访问。</p><p>302表示临时重定向，每次访问短URL都需要访问短URL生成器。</p><p>一般说来，使用301状态码可以降低Fuxi服务器的负载压力，但无法统计短URL的使用情况，而Fuxi的架构设计完全可以承受这些负载压力，因此Fuxi使用302状态码构造重定向响应。</p><h4>短URL预生成文件及预加载</h4><p>Fuxi的短URL是在系统上线前全部预生成的，并存储在HDFS文件中。共144亿个短URL，每个短URL 6个字符，文件大小$\\small 144亿\\times6B=86.4GB$。</p><p>文件格式就是直接将144亿个短URL的ASC码无分割地存储在文件中，如下是存储了3个短URL的文件示例：</p><pre><code class=\"language-plain\">Wdj4FbOxTw9CHtvPM1\n</code></pre><p>所以如果短URL预加载服务器第一次启动的时候加载1万个短URL，那么就从文件头读取60K数据，并标记当前文件偏移量60K。下次再加载1万个短URL的时候，再从文件60K偏移位置继续读取60K数据即可。</p><p>因此，Fuxi除了需要一个在HDFS记录预生成短URL的文件外，还需要一个记录偏移量的文件，记录偏移量的文件也存储在HDFS中。同时，由于预加载短URL服务器集群部署多台服务器，会出现多台服务器同时加载相同短URL的情况，所以还需要利用偏移量文件对多个服务器进行互斥操作，即<strong>利用文件系统写操作锁的互斥性实现多服务器访问互斥</strong>。</p><p>应用程序的文件访问流程应该是：写打开偏移量文件 -&gt; 读偏移量 -&gt; 读打开短URL文件 -&gt; 从偏移量开始读取60K数据 -&gt; 关闭短URL文件 -&gt; 修改偏移量文件 -&gt; 关闭偏移量文件。</p><p>由于写打开偏移量文件是一个互斥操作，所以第一个预加载短URL服务器写打开偏移量文件以后，其他预加载短URL服务器无法再写打开该文件，也就无法完成读60K短URL数据及修改偏移量的操作，这样就能保证这两个操作是并发安全的。</p><p>加载到预加载短URL服务器的1万个短URL会以链表的方式存储，每使用一个短URL，链表头指针就向后移动一位，并设置前一个链表元素的next对象为null。这样用过的短URL对象可以被垃圾回收。</p><p>当剩余链表长度不足2000的时候，触发一个异步线程，从文件中加载1万个新的短URL，并链接到链表的尾部。</p><p>与之对应的URL链表类图如下。</p><p><img src=\"https://static001.geekbang.org/resource/image/ae/dc/ae5375d4f8abd5d907666c9080875ddc.jpg?wh=1920x541\" alt=\"图片\"></p><p><strong>URLNode</strong>：URL链表元素类，成员变量uRL即短URL字符串，next指向下一个链表元素。</p><p><strong>LinkedURL</strong>：URL链表主类，成员变量head指向链表头指针元素，uRLAmount表示当前链表剩余元素个数。acquireURL()方法从链表头指针指向的元素中取出短URL字符串，并执行urlAmount-- 操作。当urlAmount &lt; 2000的时候，调用私有方法loadURL()，该方法调用一个线程从文件中加载1万个短URL并构造成链表添加到当前链表的尾部，并重置uRLAmount。</p><h4>用户自定义短URL</h4><p>Fuxi允许用户自己定义短URL，即在生成短URL的时候，由用户指定短URL的内容。为了避免预生成的短URL和用户指定的短URL冲突，Fuxi限制用户自定义短URL的字符个数，不允许用户使用6个字符的自定义短URL，且URL长度不得超过20个字符。</p><p>但是用户自定义短URL依然可能和其他用户自定义短URL冲突，所以Fuxi生成自定义短URL的时候需要到数据库中检查冲突，是否指定的URL已经被使用，如果发生冲突，要求用户重新指定。</p><h4>URL Base64编码</h4><p>标准Base64编码表如下。</p><p><img src=\"https://static001.geekbang.org/resource/image/01/59/017c0d655cd16b3c2f1a05fd65948459.jpg?wh=1920x1227\" alt=\"图片\"></p><p>其中“+”和“/”在URL中会被编码为“%2B”以及“%2F”，而“%”在写入数据库的时候又和SQL编码规则冲突，需要进行再编码，因此直接使用标准Base64编码进行短URL编码并不合适。URL保留字符编码表如下。</p><p><img src=\"https://static001.geekbang.org/resource/image/76/3a/7677e6defe8b938ef78cec2394ef793a.png?wh=1814x164\" alt=\"图片\"></p><p>所以，我们需要针对URL场景对Base64编码进行改造，使用URL保留字符表以外的字符对Base64编码表中的62，63进行编码：将“+”改为“-”，将“/”改为“_”，Fuxi最终采用的URL Base64编码表如下。</p><p><img src=\"https://static001.geekbang.org/resource/image/91/1c/916925eb570d1bc38297954a141aa91c.jpg?wh=1920x1227\" alt=\"图片\"></p><h2>小结</h2><p>我们开头提到，Fuxi是一个高并发（2万QPS）、海量存储（144亿条数据）、还需要10ms的高性能平均响应时间的系统。但是我们后面看到，Fuxi的架构并不复杂。</p><p>这一方面是源于Fuxi的业务逻辑非常简单，只需要完成短URL与长URL的映射关系生成与获取就可以了。另一方面则是源于开源技术体系的成熟，比如一个HDFS集群可支持百万TB规模的数据存储，而我们需要的存储空间只有区区不到100GB，都有点大材小用了。事实上，Fuxi选择HDFS更多的考量是利用HDFS的高可用，HDFS的自动备份策略为我们提供了<strong>高可用的数据存储解决方案</strong>。</p><p>同理，高并发也是如此，2万QPS看起来不小，但实际上，由于业务逻辑简单，单个数据都很小，加上大部分请求数据可以通过Redis缓存获取，所以实际响应时间是非常短的，10ms的平均响应时间使得Fuxi真正承受的并发压力只有200。对于这样简单的业务逻辑以及200这样的并发压力，我们使用配置高一点的服务器的话，只需要一台短URL服务器其实就可以满足了。所以，我们在短URL服务器之前使用负载均衡服务器，这也是更多地为<strong>高可用</strong>服务。</p><h2>思考题</h2><p>用户每次请求生成短URL的时候，Fuxi都会返回一个新生成的短URL，也就意味着，如果用户重复提交同一个长URL请求生成短URL，每次都会返回一个新的短URL。你认为这将导致什么问题？对此，你有什么解决方案？</p><p>另外，小结里提到，2万QPS，10ms平均响应时间，这种情况下，真正的并发量只有200，这个200是如何得到的？</p><p>欢迎在评论区分享你的思考，或者提出对这个设计文档的评审意见，我们共同进步。</p>","comments":[{"had_liked":false,"id":335263,"user_name":"老码不识途","can_delete":false,"product_type":"c1","uid":1027346,"ip_address":"","ucode":"18CC5EE8532153","user_header":"","comment_is_top":false,"comment_ctime":1645431439,"is_pvip":false,"replies":[{"id":"122471","content":"大佬，请上座。","user_name":"作者回复","user_name_real":"编辑","uid":"1007349","ctime":1645497968,"ip_address":"","comment_id":335263,"utype":1}],"discussion_count":3,"race_medal":0,"score":"143379352207","product_id":100105701,"comment_content":"再加一个架构的约束：只有2万块钱的预算 ^_^","like_count":34,"discussions":[{"author":{"id":1007349,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/5e/f5/018907ac.jpg","nickname":"李智慧","note":"","ucode":"8C9980C438AFD1","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":552506,"discussion_content":"大佬，请上座。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1645497968,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1085725,"avatar":"https://static001.geekbang.org/account/avatar/00/10/91/1d/33946235.jpg","nickname":"龚韬","note":"","ucode":"E3779F4994DD84","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":562858,"discussion_content":"出门左转，找架构大佬的摊位....","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1649899922,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2546777,"avatar":"https://static001.geekbang.org/account/avatar/00/26/dc/59/676d01ea.jpg","nickname":"恒心","note":"","ucode":"F55649BDFFA5CA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":589552,"discussion_content":"看看有没有云服务器厂商的活动&amp;拉赞助&amp;内部价，降低成本😂","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1665112490,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"浙江"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":335315,"user_name":"向东是大海","can_delete":false,"product_type":"c1","uid":2046992,"ip_address":"","ucode":"A9FE1049D0D144","user_header":"https://static001.geekbang.org/account/avatar/00/1f/3c/10/61efe672.jpg","comment_is_top":false,"comment_ctime":1645448564,"is_pvip":false,"replies":[{"id":"122469","content":"赞，很好的意见。<br>","user_name":"作者回复","user_name_real":"编辑","uid":"1007349","ctime":1645497892,"ip_address":"","comment_id":335315,"utype":1}],"discussion_count":1,"race_medal":0,"score":"126199500148","product_id":100105701,"comment_content":"短URL使用URL Base64 编码，其中的-和_字符显得有点突兀，特别是在开头或结尾是时。短URL使用Base62编码是否更好？","like_count":30,"discussions":[{"author":{"id":1007349,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/5e/f5/018907ac.jpg","nickname":"李智慧","note":"","ucode":"8C9980C438AFD1","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":552503,"discussion_content":"赞，很好的意见。\n","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1645497892,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":335467,"user_name":"Spark","can_delete":false,"product_type":"c1","uid":2275920,"ip_address":"","ucode":"8A1493EA93DCD7","user_header":"https://static001.geekbang.org/account/avatar/00/22/ba/50/6c2ef3cf.jpg","comment_is_top":false,"comment_ctime":1645528454,"is_pvip":true,"replies":[{"id":"122569","content":"很赞","user_name":"作者回复","user_name_real":"编辑","uid":"1007349","ctime":1645584869,"ip_address":"","comment_id":335467,"utype":1}],"discussion_count":4,"race_medal":0,"score":"96134808966","product_id":100105701,"comment_content":"对自增长短 URL可以进行如下优化：<br>在设计的短链接的时候采用这样的方法：<br>根据自增主键id将前面补0（4位短链接补至7位，6位短链接补至10位，8位短链接补至14位）如主键：123，补0至0000123<br>倒转补完0之后的id，如3210000<br>将倒转之后的短链接十进制转62进制。将3210000转62进制<br>本质上来讲，因为用户不知道你补位的位数，所以无法反推出你之前的短链接与之后的短链接。<br>在自增的选择上，可以选择redis的自增机制。<br>是不是这样，我也可以满足并发的需求，毕竟计算速度远大于查找。<br>同时，清理的过程也更加简单，只需要在达到自增补位上限的时候，将自增变为1重新发号即可<br>当然，从技术上讲，他是可预测的，毕竟短链就这么多位，猜测（7-14进行枚举），但是面对大部分业务来说，他已经满足部分不可预测的需求。","like_count":23,"discussions":[{"author":{"id":1007349,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/5e/f5/018907ac.jpg","nickname":"李智慧","note":"","ucode":"8C9980C438AFD1","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":552749,"discussion_content":"很赞","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1645584869,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1227789,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bc/0d/e65ca230.jpg","nickname":"👻","note":"","ucode":"1648C82AC73C1D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":566789,"discussion_content":"👏👏👏👏👏👏👏👏","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1650762515,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1002201,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/4a/d9/75dd7cf9.jpg","nickname":"Mew151","note":"","ucode":"D4793F5874F345","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":555290,"discussion_content":"4位短链接补至7位，6位短链接补至10位，8位短链接补至14位，这块没看太懂","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1646836437,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1014665,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/7b/89/34f2cbcc.jpg","nickname":"杨宇","note":"","ucode":"EB74DF6E269F03","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1002201,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/4a/d9/75dd7cf9.jpg","nickname":"Mew151","note":"","ucode":"D4793F5874F345","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":571578,"discussion_content":"补完之后的十进制，能恰好转换为预期长度的62进制","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1652276175,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":555290,"ip_address":""},"score":571578,"extra":""}]}]},{"had_liked":false,"id":336907,"user_name":"Aibo","can_delete":false,"product_type":"c1","uid":2115387,"ip_address":"","ucode":"2CE3E77BD2D014","user_header":"https://static001.geekbang.org/account/avatar/00/20/47/3b/70198ceb.jpg","comment_is_top":false,"comment_ctime":1646461444,"is_pvip":false,"replies":[{"id":"123167","content":"赞，非常好的建议","user_name":"作者回复","user_name_real":"编辑","uid":"1007349","ctime":1646619253,"ip_address":"","comment_id":336907,"utype":1}],"discussion_count":5,"race_medal":0,"score":"87545807364","product_id":100105701,"comment_content":"个人感觉内存中存储短url的数据结构是不是用环形数组会好一点.<br>短url的场景下，使用链表会有两个缺点<br>1. gc压力大，频繁申请内存空间<br>2.格外的指针开销，短url才6byte，指针就占1byte，也就是内存中10g数据1个多g都是指针<br>","like_count":21,"discussions":[{"author":{"id":1007349,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/5e/f5/018907ac.jpg","nickname":"李智慧","note":"","ucode":"8C9980C438AFD1","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":554795,"discussion_content":"赞，非常好的建议","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1646619253,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1609948,"avatar":"https://static001.geekbang.org/account/avatar/00/18/90/dc/44ce2f23.jpg","nickname":"氕氘氚","note":"","ucode":"6B5477BF23AA4A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":583396,"discussion_content":"为什么指针是1byte","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1660095982,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"北京"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1062848,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83ersGSic8ib7OguJv6CJiaXY0s4n9C7Z51sWxTTljklFpq3ZAIWXoFTPV5oLo0GMTkqW5sYJRRnibNqOJQ/132","nickname":"walle斌","note":"","ucode":"0DB3243004951F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":580449,"discussion_content":"空间换时间 赞。。。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1658191110,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1366632,"avatar":"https://static001.geekbang.org/account/avatar/00/14/da/68/11ab05f3.jpg","nickname":"user","note":"","ucode":"D8C53679C24B61","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":574616,"discussion_content":"有道理  都不需要扩容了 直接替换数组下标的值 ","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1654178716,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1361159,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eqJobg767PUeqrqQQ4B6YvMatj2SRyOicKZZ4gWTf30dMketiaj58Gc3RFTmckGxAXlL9ERSxGovq9g/132","nickname":"涛哥哥","note":"","ucode":"329A1384E3AB5E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":573115,"discussion_content":"考虑的很详细！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1653207531,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":335197,"user_name":"Jialin","can_delete":false,"product_type":"c1","uid":1112955,"ip_address":"","ucode":"12583269732A75","user_header":"https://static001.geekbang.org/account/avatar/00/10/fb/7b/2d4b38fb.jpg","comment_is_top":false,"comment_ctime":1645403627,"is_pvip":false,"replies":[{"id":"122481","content":"1 索引的代价有点大的，我们再考虑下<br>2 是的","user_name":"作者回复","user_name_real":"编辑","uid":"1007349","ctime":1645499252,"ip_address":"","comment_id":335197,"utype":1}],"discussion_count":7,"race_medal":0,"score":"53185011179","product_id":100105701,"comment_content":"问题一:如何解决相同的原始链接生成不同的短链接？<br>当要给一个原始网址生成短网址的时候，我们要先拿原始网址在数据库中查找，看数据库中是否已经存在相同的原始网址了。如果数据库中存在，那我们就取出对应的短网址，直接返回给用户。并给短网址和原始网址这两个字段，都添加索引。短网址上加索引是为了提高用户查询短网址对应的原始网页的速度，原始网址上加索引是为了加快通过原始网址查询短网址的速度。<br>问题二:并发量是如何计算的？<br>基于利特尔法则（Little&#39;s law）得知，并发度 = QPS * 平均耗时，所以，2 万 QPS，10ms 平均响应时间，真正的并发量只有 200。","like_count":13,"discussions":[{"author":{"id":1007349,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/5e/f5/018907ac.jpg","nickname":"李智慧","note":"","ucode":"8C9980C438AFD1","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":552520,"discussion_content":"1 索引的代价有点大的，我们再考虑下\n2 是的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1645499252,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1014665,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/7b/89/34f2cbcc.jpg","nickname":"杨宇","note":"","ucode":"EB74DF6E269F03","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":565062,"discussion_content":"第一点好眼熟，应该来自《数据结构与算法之美》专栏。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1650379635,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1062848,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83ersGSic8ib7OguJv6CJiaXY0s4n9C7Z51sWxTTljklFpq3ZAIWXoFTPV5oLo0GMTkqW5sYJRRnibNqOJQ/132","nickname":"walle斌","note":"","ucode":"0DB3243004951F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1014665,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/7b/89/34f2cbcc.jpg","nickname":"杨宇","note":"","ucode":"EB74DF6E269F03","race_medal":0,"user_type":1,"is_pvip":true},"discussion":{"id":580450,"discussion_content":"王争老师算法与数据结构确实厉害。也可能是那门课过于强调这个了。。感觉 后边一些实战工程上的路子 就稍微有一些  。。。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1658191229,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":565062,"ip_address":""},"score":580450,"extra":""}]},{"author":{"id":2052790,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLjSFNAonBkMvGCpIBnmiaZyC0ns0uCz9DLuIick9Pf9JicDCfb6GrZ8v85qXwTicE5P9WNoPibib8E5Ruw/132","nickname":"Geek_6d893c","note":"","ucode":"F274750C6AC531","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":554286,"discussion_content":"一般是把原始网址的md5存上，根据md5去查询，不过md5还是有碰撞的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1646297841,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2052790,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLjSFNAonBkMvGCpIBnmiaZyC0ns0uCz9DLuIick9Pf9JicDCfb6GrZ8v85qXwTicE5P9WNoPibib8E5Ruw/132","nickname":"Geek_6d893c","note":"","ucode":"F274750C6AC531","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":554283,"discussion_content":"原始网址多长 怎么可能加索引","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1646297780,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1112955,"avatar":"https://static001.geekbang.org/account/avatar/00/10/fb/7b/2d4b38fb.jpg","nickname":"Jialin","note":"","ucode":"12583269732A75","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":553099,"discussion_content":"1.加布隆过滤器\n2.可以进行存储拆分:分库分表","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1645713651,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":2927904,"avatar":"","nickname":"Geek9382","note":"","ucode":"638288F553332F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1112955,"avatar":"https://static001.geekbang.org/account/avatar/00/10/fb/7b/2d4b38fb.jpg","nickname":"Jialin","note":"","ucode":"12583269732A75","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":558066,"discussion_content":"赞。。第一个问题看到重复提交，期望得到不存在的场景 那就是bf了。当然对于原始字符串映射的设计是需要有的减少代价。存在的短时间穿透db+缓存，只要前期bf设计的合理，不被撑爆了，击穿可能性极低。而且量也不大","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1648083576,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":553099,"ip_address":""},"score":558066,"extra":""}]}]},{"had_liked":false,"id":337467,"user_name":"Mew151","can_delete":false,"product_type":"c1","uid":1002201,"ip_address":"","ucode":"D4793F5874F345","user_header":"https://static001.geekbang.org/account/avatar/00/0f/4a/d9/75dd7cf9.jpg","comment_is_top":false,"comment_ctime":1646836954,"is_pvip":false,"replies":[{"id":"123323","content":"赞","user_name":"作者回复","user_name_real":"编辑","uid":"1007349","ctime":1646877432,"ip_address":"","comment_id":337467,"utype":1}],"discussion_count":1,"race_medal":0,"score":"36006575322","product_id":100105701,"comment_content":"第1个问题，还可以从另外一个角度考虑：即客户端本地记用户请求过的长-短URL映射，如果用户再次请求同一个长URL，先查客户端本地映射，如果有就直接返回。这种方式能防住大部分正常的客户端重复请求，防不住的是例如恶意攻击者直接抓包调接口，因此服务端的判重还得做。","like_count":9,"discussions":[{"author":{"id":1007349,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/5e/f5/018907ac.jpg","nickname":"李智慧","note":"","ucode":"8C9980C438AFD1","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":555345,"discussion_content":"赞","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1646877433,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":340511,"user_name":"哗丽转身","can_delete":false,"product_type":"c1","uid":1066577,"ip_address":"","ucode":"AF59F8211115DD","user_header":"https://static001.geekbang.org/account/avatar/00/10/46/51/50457315.jpg","comment_is_top":false,"comment_ctime":1648870736,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"31713641808","product_id":100105701,"comment_content":"对付这个需求限制（预生成-&gt;大容量存储-&gt;高并发获取），李老师这个方案在我看来各方面都近乎最优了，这里面体现了很多思想：<br>1、预生成是大数据里面预计算的思想，空间换时间<br>2、大容量存储，hdfs虽然目前读写性能在存储里面不是最好的，但是结合1里面的预生产完全能接受<br>3、重分利用hbase的rowkey加速查询，同时具备高可用的海量存储能力<br>4、应用测引入布隆过滤器高效解决重复问题，引入redis高并发能力加速查询过程<br>综合看是一个非常低成本同时又能重分满足当下需求的架构设计","like_count":8},{"had_liked":false,"id":336663,"user_name":"Steven","can_delete":false,"product_type":"c1","uid":1253652,"ip_address":"","ucode":"3FE64459842015","user_header":"https://static001.geekbang.org/account/avatar/00/13/21/14/423a821f.jpg","comment_is_top":false,"comment_ctime":1646278827,"is_pvip":false,"replies":[{"id":"123037","content":"思考题：赞<br><br>市面上标配的高CPU物理机就可以了。其实可能都不用高配，随便什么服务器都够用了，主要是开发的时候响应时间要能做到10ms。","user_name":"作者回复","user_name_real":"编辑","uid":"1007349","ctime":1646297802,"ip_address":"","comment_id":336663,"utype":1}],"discussion_count":2,"race_medal":0,"score":"31711049899","product_id":100105701,"comment_content":"思考题：<br>1，首先可以明确，一定程度上的重复生成是可以的。<br>方案一：可以考虑用布隆过滤器；<br>方案二：考虑Redis中存储长链接 -&gt; 短链接，并设定合理的过期时间，参考课程内容，貌似可以6天，或许1小时就可以。<br><br>另外，基于分布式ID生成短URL也是可以的。<br><br>2，200 = 20000 * 0.01<br><br>问题：“对于这样简单的业务逻辑以及 200 这样的并发压力，我们使用配置高一点的服务器的话，只需要一台短 URL 服务器其实就可以满足了。”，大概是一台什么配置的服务器？","like_count":8,"discussions":[{"author":{"id":1007349,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/5e/f5/018907ac.jpg","nickname":"李智慧","note":"","ucode":"8C9980C438AFD1","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":554284,"discussion_content":"思考题：赞\n\n市面上标配的高CPU物理机就可以了。其实可能都不用高配，随便什么服务器都够用了，主要是开发的时候响应时间要能做到10ms。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1646297802,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":1,"child_discussions":[{"author":{"id":1253652,"avatar":"https://static001.geekbang.org/account/avatar/00/13/21/14/423a821f.jpg","nickname":"Steven","note":"","ucode":"3FE64459842015","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1007349,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/5e/f5/018907ac.jpg","nickname":"李智慧","note":"","ucode":"8C9980C438AFD1","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":554376,"discussion_content":"谢谢老师的及时回复","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1646359938,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":554284,"ip_address":""},"score":554376,"extra":""}]}]},{"had_liked":false,"id":335230,"user_name":"极客","can_delete":false,"product_type":"c1","uid":1114999,"ip_address":"","ucode":"A4AAA6B4F40E66","user_header":"https://static001.geekbang.org/account/avatar/00/11/03/77/3f6a76a9.jpg","comment_is_top":false,"comment_ctime":1645420135,"is_pvip":false,"replies":[{"id":"122473","content":"预生成多20%的冗余，一般重启丢失一些是可以接受的，频繁重启可能系统有大麻烦了，需要另外思考了。<br><br>继续生成机制可以在系统运行期考虑，如果短URL消耗快于预期，可以增加再生成机制。架构不必一步到位。","user_name":"作者回复","user_name_real":"编辑","uid":"1007349","ctime":1645498328,"ip_address":"","comment_id":335230,"utype":1}],"discussion_count":4,"race_medal":0,"score":"27415223911","product_id":100105701,"comment_content":"加载到预加载短 URL 服务器的 1 万个短 URL 会以链表的方式存储，每使用一个短 URL，链表头指针就向后移动一位，并设置前一个链表元素的 next 对象为 null。这样用过的短 URL 对象可以被垃圾回收。当剩余链表长度不足 2000 的时候，触发一个异步线程，从文件中加载 1 万个新的短 URL，并链接到链表的尾部<br>-----<br><br>这里如果为了高可用是不是需要保存到日志或者redis，要是服务有bug导致频繁重启，那么重启后又要获取1万个。多来几次会浪费很多短地址没有使用。且预生成的144亿次没有继续生成的机制保证。","like_count":6,"discussions":[{"author":{"id":1007349,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/5e/f5/018907ac.jpg","nickname":"李智慧","note":"","ucode":"8C9980C438AFD1","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":552509,"discussion_content":"预生成多20%的冗余，一般重启丢失一些是可以接受的，频繁重启可能系统有大麻烦了，需要另外思考了。\n\n继续生成机制可以在系统运行期考虑，如果短URL消耗快于预期，可以增加再生成机制。架构不必一步到位。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1645498328,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1749194,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTL6sbiaEsWOIFiaCSe0KL1alJcsb9LhNRkQlMpNTbdCoZMqHghfXn02WsjwcWn5A9FfTXx3bkdnxSicg/132","nickname":"Tim","note":"","ucode":"E665011E5BB6AF","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":553886,"discussion_content":"宕机会丢失当前指针位置，还需要更好的机制？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1646126974,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1253652,"avatar":"https://static001.geekbang.org/account/avatar/00/13/21/14/423a821f.jpg","nickname":"Steven","note":"","ucode":"3FE64459842015","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1749194,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTL6sbiaEsWOIFiaCSe0KL1alJcsb9LhNRkQlMpNTbdCoZMqHghfXn02WsjwcWn5A9FfTXx3bkdnxSicg/132","nickname":"Tim","note":"","ucode":"E665011E5BB6AF","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":554405,"discussion_content":"丢的就不要了，直接跳过去了，因为有 20% 的冗余","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1646367374,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":553886,"ip_address":""},"score":554405,"extra":""}]},{"author":{"id":1005813,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/58/f5/abb7bfe3.jpg","nickname":"Tianium","note":"","ucode":"06E2D3A0246546","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":552376,"discussion_content":"1w个以内的其实浪费就浪费了，服务器不太可能频繁重启。真要解决，也可以在本地文件系统留个缓存，定期记录一下消耗情况，也就可以了。至于补充机制，设个监控，需要了再生成问题也不大。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1645436298,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":345249,"user_name":"雪碧心拔凉","can_delete":false,"product_type":"c1","uid":1161522,"ip_address":"","ucode":"D13EEBAA0F443B","user_header":"https://static001.geekbang.org/account/avatar/00/11/b9/32/84346d4a.jpg","comment_is_top":false,"comment_ctime":1652157141,"is_pvip":false,"replies":[{"id":"126058","content":"赞同","user_name":"作者回复","user_name_real":"编辑","uid":"1007349","ctime":1652231694,"ip_address":"","comment_id":345249,"utype":1}],"discussion_count":1,"race_medal":0,"score":"23126993621","product_id":100105701,"comment_content":"看了下评论区的，大部分都是通过布隆过滤器来解决不能重复，有一下几个疑惑点。<br>1、已使用的数据还会被回收，因此布隆过滤器的数据还存在删除的操作，或者每次回收时重构布隆过滤器？<br>2、布隆过滤器本身有一定的误判率，如果存在，但是实际可能不存在，这时要走生成的逻辑，请求耗时可能大于10ms。当然这个可以通过调整布隆过滤器的参数降低概率<br><br>我理解是不是只需要保持一段时间内不重复即可，是否可以把长url(做个md5,降低存储？)和短url存储在缓存(如redis)中，有效期设为一天或者半天，这样能控制一段时间内返回同一个短url即可？","like_count":6,"discussions":[{"author":{"id":1007349,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/5e/f5/018907ac.jpg","nickname":"李智慧","note":"","ucode":"8C9980C438AFD1","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":571444,"discussion_content":"赞同","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1652231694,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":336592,"user_name":"cy_walker","can_delete":false,"product_type":"c1","uid":2062051,"ip_address":"","ucode":"AE06BC8FA62DBB","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eo572BONDovD8wvzjwU89bRHVLicHib19MW7ice5Xz9LgsNWXaqx53E1Esd1MsC0hYD9RwRAwwAcgWcA/132","comment_is_top":false,"comment_ctime":1646230128,"is_pvip":false,"replies":[{"id":"123022","content":"1 预加载短URL的线程是异步执行的，短URL少于2000就会加载，加载时间顺利的话几十毫秒，这个响应速度应该是能够满足高并发的。<br>2 预加载短URL服务器也是集群部署的，每台服务器预加载1万个。<br>3 如果并发超过以上两点的处理能力，需要限流。","user_name":"作者回复","user_name_real":"编辑","uid":"1007349","ctime":1646271549,"ip_address":"","comment_id":336592,"utype":1}],"discussion_count":2,"race_medal":0,"score":"18826099312","product_id":100105701,"comment_content":"老师，我有个疑问。就是在生成短链的时候，假如在短时间内有大量需要生成短链的请求，那预先加载的1W个短链就不够了，这种情况该如何解决？直接服务降级？","like_count":5,"discussions":[{"author":{"id":1007349,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/5e/f5/018907ac.jpg","nickname":"李智慧","note":"","ucode":"8C9980C438AFD1","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":554215,"discussion_content":"1 预加载短URL的线程是异步执行的，短URL少于2000就会加载，加载时间顺利的话几十毫秒，这个响应速度应该是能够满足高并发的。\n2 预加载短URL服务器也是集群部署的，每台服务器预加载1万个。\n3 如果并发超过以上两点的处理能力，需要限流。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1646271549,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2102936,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIZm52IKDBBJOvEpyicIzibWeVJPAdnTDceuUHul3adtpzXLEKMrwJKnptcqhcia0oeRBvxJ3Tvic9NuA/132","nickname":"Geek_4ee262","note":"","ucode":"7DFD2AE0E2EABB","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":572395,"discussion_content":"牛的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1652769415,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":335522,"user_name":"👽","can_delete":false,"product_type":"c1","uid":1274117,"ip_address":"","ucode":"D313AF941B412D","user_header":"https://static001.geekbang.org/account/avatar/00/13/71/05/db554eba.jpg","comment_is_top":false,"comment_ctime":1645573617,"is_pvip":false,"replies":[{"id":"122564","content":"right","user_name":"作者回复","user_name_real":"编辑","uid":"1007349","ctime":1645584446,"ip_address":"","comment_id":335522,"utype":1}],"discussion_count":1,"race_medal":0,"score":"18825442801","product_id":100105701,"comment_content":"第一个问题：<br><br>重复生成同一个长URL，带来的问题主要是资源浪费。并且没有处理用户的重复请求。<br>可以考虑的解决方案是缓存，将每个长URL作为参数缓存起来。保存一段时间，只需要存几天即可。下次请求的时候，地址如果还是同样的长URL，并且命中缓存，那就把现有的短URL直接返回。系统其实并没有做到短URL的目标URL不重复，但是能做到几天内不重复已经足够了。<br><br>第二个问题：<br><br>10ms=1\\100s 也就是说一个请求耗时仅有100分之一秒。100个请求才占1秒的qps。2w➗100=200<br><br>","like_count":5,"discussions":[{"author":{"id":1007349,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/5e/f5/018907ac.jpg","nickname":"李智慧","note":"","ucode":"8C9980C438AFD1","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":552743,"discussion_content":"right","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1645584446,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":336420,"user_name":"Vincent_","can_delete":false,"product_type":"c1","uid":1313831,"ip_address":"","ucode":"0904F7CE04E788","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/ibbEWWUTH7964UOnwpBPC8Lhb1TS4s7XMEXTPKHPUBlj58GVkdRQRqa6EydIRL2I1uJDzeichLj86gJfTpzcgcCA/132","comment_is_top":false,"comment_ctime":1646138436,"is_pvip":true,"replies":[{"id":"122982","content":"很赞","user_name":"作者回复","user_name_real":"编辑","uid":"1007349","ctime":1646188537,"ip_address":"","comment_id":336420,"utype":1}],"discussion_count":1,"race_medal":0,"score":"14531040324","product_id":100105701,"comment_content":"1. 查询请求那里就说了有缓存，按照一个生成url访问一般在6天来算，跟查询请求一样，查询的k-v是短-长，只需要生成的时候也生成一份长-短即可，对应的一个缓存查和增，按1ms算，也就2ms。还是符合要求的。对应的就是缓存空间*2。另一种方法是使用布隆过滤器，生成后的长url放入布隆过滤器，新的请求过来如果布隆过滤器拦截，按查询请求看待，如果是误差请求，则再生成短url，对应的误差请求时间会变长，但是因为布隆过滤器极低的误差率，在平均耗时上也是满足要求的。<br>2. 2w&#47;100 = 200","like_count":3,"discussions":[{"author":{"id":1007349,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/5e/f5/018907ac.jpg","nickname":"李智慧","note":"","ucode":"8C9980C438AFD1","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":554023,"discussion_content":"很赞","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1646188537,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":336092,"user_name":"Leader","can_delete":false,"product_type":"c1","uid":2748925,"ip_address":"","ucode":"90E93A28D3C16D","user_header":"https://static001.geekbang.org/account/avatar/00/29/f1/fd/003cf398.jpg","comment_is_top":false,"comment_ctime":1645903486,"is_pvip":true,"replies":[{"id":"122869","content":"MD5之类的编码包含不可见字符，没办法用于URL","user_name":"作者回复","user_name_real":"编辑","uid":"1007349","ctime":1646014317,"ip_address":"","comment_id":336092,"utype":1}],"discussion_count":1,"race_medal":0,"score":"14530805374","product_id":100105701,"comment_content":"请问老师，为什么经过了MD5或者SHA256 hash之后还要再进行base64，不可以直接使用hash之后的结果吗？研究了一下没想清楚为什么","like_count":4,"discussions":[{"author":{"id":1007349,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/5e/f5/018907ac.jpg","nickname":"李智慧","note":"","ucode":"8C9980C438AFD1","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":553646,"discussion_content":"MD5之类的编码包含不可见字符，没办法用于URL","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1646014317,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":335202,"user_name":"jiangjing","can_delete":false,"product_type":"c1","uid":1295268,"ip_address":"","ucode":"D45001E5FB4D6F","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/ibcRNslcyp7dwIR3TIwvloCibMd7Ew2TB3MU0wISFXEolyuHRtfIriagm6PMX5zQHicmc78BrBcxA6vQ5qnTPCev9A/132","comment_is_top":false,"comment_ctime":1645405264,"is_pvip":false,"replies":[{"id":"122477","content":"算法是对的，不过似乎应该是1s &#47; 10ms =100<br><br>并发不是TPS，第二篇专栏有讲到“只有发起请求，在服务器正在处理这个请求的用户才是并发用户。”<br>后面讲性能架构专题的时候，会专门讲下这几个指标，TPS QPS这些叫吞吐量。","user_name":"作者回复","user_name_real":"编辑","uid":"1007349","ctime":1645498745,"ip_address":"","comment_id":335202,"utype":1}],"discussion_count":3,"race_medal":0,"score":"14530307152","product_id":100105701,"comment_content":"1s &#47; 1ms = 100 每秒可处理100个请求<br>2w &#47; 100 = 200 一秒内用一时刻只需要处理200请求<br><br>疑问：一般并发就是指qps &#47; tps 吧？还是指这个计算出的200？","like_count":3,"discussions":[{"author":{"id":1007349,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/5e/f5/018907ac.jpg","nickname":"李智慧","note":"","ucode":"8C9980C438AFD1","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":552514,"discussion_content":"算法是对的，不过似乎应该是1s / 10ms =100\n\n并发不是TPS，第二篇专栏有讲到“只有发起请求，在服务器正在处理这个请求的用户才是并发用户。”\n后面讲性能架构专题的时候，会专门讲下这几个指标，TPS QPS这些叫吞吐量。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1645498746,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1072164,"avatar":"https://static001.geekbang.org/account/avatar/00/10/5c/24/b807e3ee.jpg","nickname":"linuxcoder","note":"","ucode":"600046EA71FEFA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":552402,"discussion_content":"QPS/TPS是吞吐量，这里的200是并发数，他们的关系是：并发数=吞吐量*平均响应时间\n\n可以把并发数想象成高速收费站同时通关的车数量，吞吐量想象成单位时间通过的车的数量，平均响应时间想象成收费站处理收费车通过的平均时间。他们之间有如下关系：\n\n当同时通关车的数量一定（并发数一定），收费站处理收费的时间越快，比如人工收费升级成自动收费（平均响应时间越短），那么单位时间通过的车越多（吞吐量越大）。如果收费站已升级成自动收费（平均响应时间一定），这时候要提高单位时间通过的车数量（增加吞吐量），就只能增加通关的车道（更多服务器，或更多核cpu），让同时通过的车更多（提高并发数）了。还有一种情况，高峰期时候，想同时通过的车数量太多（并发数太高），收费站的吞吐量饱和，那么就会造成收费站拥堵，平均响应时间变大。","likes_number":5,"is_delete":false,"is_hidden":false,"ctime":1645450116,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1295268,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/ibcRNslcyp7dwIR3TIwvloCibMd7Ew2TB3MU0wISFXEolyuHRtfIriagm6PMX5zQHicmc78BrBcxA6vQ5qnTPCev9A/132","nickname":"jiangjing","note":"","ucode":"D45001E5FB4D6F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1072164,"avatar":"https://static001.geekbang.org/account/avatar/00/10/5c/24/b807e3ee.jpg","nickname":"linuxcoder","note":"","ucode":"600046EA71FEFA","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":552434,"discussion_content":"赞","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1645457851,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":552402,"ip_address":""},"score":552434,"extra":""}]}]},{"had_liked":false,"id":336171,"user_name":"Winter","can_delete":false,"product_type":"c1","uid":1447801,"ip_address":"","ucode":"75F6DC1D8E3C8C","user_header":"https://static001.geekbang.org/account/avatar/00/16/17/79/b8ce297e.jpg","comment_is_top":false,"comment_ctime":1645968129,"is_pvip":false,"replies":[{"id":"122867","content":"可以，但是MySQL需要分片，我们这个场景几乎没有SQL查询的需求，所以用MySQL不是很必要。","user_name":"作者回复","user_name_real":"编辑","uid":"1007349","ctime":1646014199,"ip_address":"","comment_id":336171,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10235902721","product_id":100105701,"comment_content":"老师，请问可以用MySQL取代HBASE吗","like_count":2,"discussions":[{"author":{"id":1007349,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/5e/f5/018907ac.jpg","nickname":"李智慧","note":"","ucode":"8C9980C438AFD1","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":553644,"discussion_content":"可以，但是MySQL需要分片，我们这个场景几乎没有SQL查询的需求，所以用MySQL不是很必要。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1646014199,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":335454,"user_name":"💎A","can_delete":false,"product_type":"c1","uid":1075412,"ip_address":"","ucode":"914FFA92CA2713","user_header":"https://static001.geekbang.org/account/avatar/00/10/68/d4/c9b5d3f9.jpg","comment_is_top":false,"comment_ctime":1645523919,"is_pvip":false,"replies":[{"id":"122568","content":"人艰勿拆，那我们就互相吹吧~~","user_name":"作者回复","user_name_real":"编辑","uid":"1007349","ctime":1645584755,"ip_address":"","comment_id":335454,"utype":1}],"discussion_count":3,"race_medal":0,"score":"10235458511","product_id":100105701,"comment_content":"面试的时候一上来就是百万并发😝","like_count":3,"discussions":[{"author":{"id":1007349,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/5e/f5/018907ac.jpg","nickname":"李智慧","note":"","ucode":"8C9980C438AFD1","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":552747,"discussion_content":"人艰勿拆，那我们就互相吹吧~~","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1645584755,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":2,"child_discussions":[{"author":{"id":1075412,"avatar":"https://static001.geekbang.org/account/avatar/00/10/68/d4/c9b5d3f9.jpg","nickname":"💎A","note":"","ucode":"914FFA92CA2713","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1007349,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/5e/f5/018907ac.jpg","nickname":"李智慧","note":"","ucode":"8C9980C438AFD1","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":552782,"discussion_content":"那我跟面试官说我是李智慧的学生","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1645595693,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":552747,"ip_address":""},"score":552782,"extra":""},{"author":{"id":2927904,"avatar":"","nickname":"Geek9382","note":"","ucode":"638288F553332F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1075412,"avatar":"https://static001.geekbang.org/account/avatar/00/10/68/d4/c9b5d3f9.jpg","nickname":"💎A","note":"","ucode":"914FFA92CA2713","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":558069,"discussion_content":"之前面试过archi岗位，自如那边表示 对 智慧老师 态度极度不友好。。不知道发生了啥。。一脸懵逼。。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1648083891,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":552782,"ip_address":""},"score":558069,"extra":""}]}]},{"had_liked":false,"id":343200,"user_name":"灰太狼","can_delete":false,"product_type":"c1","uid":1093741,"ip_address":"","ucode":"5E153527605DAB","user_header":"https://static001.geekbang.org/account/avatar/00/10/b0/6d/d85f71a1.jpg","comment_is_top":false,"comment_ctime":1650704372,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"5945671668","product_id":100105701,"comment_content":"关键设计点总结<br><br>1、如何生成短URL<br>随机获取6个数字，对每个数字进行BASE64编码<br>2、如何保证短url不重复<br>进行预生成，分布式ID生成组件中也有类似的设计<br>3、如何保证同一个长的URL重复请求带来的短URL浪费<br>可以考虑使用布隆过滤器，也可以存一份长URL&lt;-&gt;短URL的数据进行判重，可以根据实际需求，避免为了防止被刷，缓存有效期设置为1个小时<br>4、如何保证读的高性能<br>HBase+Redis hbase中放全量的映射数据，Redis中存放活跃的数据；另外，比如618、11.11大促期间某个营销活动链接，比如618主会场，单个URL请求的qps过高，可以考虑引入本地缓存机制，抗住高并发的请求<br>7、如何保证高可用<br>web服务器分部署部署，支持水平扩展；缓存服务器、数据库服务器、文件服务器全是分布式组件，天然具备高可用的机制","like_count":2},{"had_liked":false,"id":336110,"user_name":"Neon","can_delete":false,"product_type":"c1","uid":1970667,"ip_address":"","ucode":"C7B59C64593FCF","user_header":"https://static001.geekbang.org/account/avatar/00/1e/11/eb/3cc36d1c.jpg","comment_is_top":false,"comment_ctime":1645933070,"is_pvip":false,"replies":[{"id":"122868","content":"是的","user_name":"作者回复","user_name_real":"编辑","uid":"1007349","ctime":1646014210,"ip_address":"","comment_id":336110,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5940900366","product_id":100105701,"comment_content":"“过期短 URL 清理服务器会每个月启动一次，将已经超过有效期（2 年）的 URL 数据删除，并将这些短 URL 追加写入到短 URL 预生成文件中。”这是对过期短链二次使用的意思吗？","like_count":1,"discussions":[{"author":{"id":1007349,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/5e/f5/018907ac.jpg","nickname":"李智慧","note":"","ucode":"8C9980C438AFD1","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":553645,"discussion_content":"是的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1646014210,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":335274,"user_name":"Tim","can_delete":false,"product_type":"c1","uid":1749194,"ip_address":"","ucode":"E665011E5BB6AF","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTL6sbiaEsWOIFiaCSe0KL1alJcsb9LhNRkQlMpNTbdCoZMqHghfXn02WsjwcWn5A9FfTXx3bkdnxSicg/132","comment_is_top":false,"comment_ctime":1645436045,"is_pvip":false,"replies":[{"id":"122472","content":"1 我的建议是缓存一小时内的短链，把重复控制到1小时以上<br>2 对","user_name":"作者回复","user_name_real":"编辑","uid":"1007349","ctime":1645498163,"ip_address":"","comment_id":335274,"utype":1}],"discussion_count":5,"race_medal":0,"score":"5940403341","product_id":100105701,"comment_content":"1）重复请求生成不同的短链没有问题，这就是老师预留20%多余短链的目的。如果去重的话，可以对长链采用布隆过滤判定是否已经占用<br>2）200&#47;0.01=20000，反之。","like_count":2,"discussions":[{"author":{"id":1007349,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/5e/f5/018907ac.jpg","nickname":"李智慧","note":"","ucode":"8C9980C438AFD1","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":552508,"discussion_content":"1 我的建议是缓存一小时内的短链，把重复控制到1小时以上\n2 对","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1645498163,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":2,"child_discussions":[{"author":{"id":1072164,"avatar":"https://static001.geekbang.org/account/avatar/00/10/5c/24/b807e3ee.jpg","nickname":"linuxcoder","note":"","ucode":"600046EA71FEFA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1007349,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/5e/f5/018907ac.jpg","nickname":"李智慧","note":"","ucode":"8C9980C438AFD1","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":552529,"discussion_content":"老师，是缓存一个小时“长链接”吗？缓存短链接似乎没什么作用，无法阻止多次提交同一个长链接","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1645500554,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":552508,"ip_address":""},"score":552529,"extra":""},{"author":{"id":1007349,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/5e/f5/018907ac.jpg","nickname":"李智慧","note":"","ucode":"8C9980C438AFD1","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":1072164,"avatar":"https://static001.geekbang.org/account/avatar/00/10/5c/24/b807e3ee.jpg","nickname":"linuxcoder","note":"","ucode":"600046EA71FEFA","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":552532,"discussion_content":"是的，长链做key","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1645501491,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":552529,"ip_address":""},"score":552532,"extra":""}]},{"author":{"id":1203983,"avatar":"https://static001.geekbang.org/account/avatar/00/12/5f/0f/d70806f7.jpg","nickname":"马辉","note":"","ucode":"5F0944DEB42842","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":552470,"discussion_content":"布隆的误判问题怎么解","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1645490642,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1157771,"avatar":"https://static001.geekbang.org/account/avatar/00/11/aa/8b/6843a110.jpg","nickname":"yz","note":"","ucode":"CDD4521583E82F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1203983,"avatar":"https://static001.geekbang.org/account/avatar/00/12/5f/0f/d70806f7.jpg","nickname":"马辉","note":"","ucode":"5F0944DEB42842","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":552492,"discussion_content":"降低到可以忽略的概率就行了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1645496716,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":552470,"ip_address":""},"score":552492,"extra":""}]}]},{"had_liked":false,"id":335193,"user_name":"linuxcoder","can_delete":false,"product_type":"c1","uid":1072164,"ip_address":"","ucode":"600046EA71FEFA","user_header":"https://static001.geekbang.org/account/avatar/00/10/5c/24/b807e3ee.jpg","comment_is_top":false,"comment_ctime":1645401459,"is_pvip":false,"replies":[{"id":"122479","content":"1 多对一在功能上其实没问题的，都可以正确引用短URL，并正确跳转。HBase存储的key是短URL，如果用长URL遍历，性能太差了，无法接受。<br><br>2 对","user_name":"作者回复","user_name_real":"编辑","uid":"1007349","ctime":1645498902,"ip_address":"","comment_id":335193,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5940368755","product_id":100105701,"comment_content":"思考一：<br>如果用户重复提交同一个长 URL 请求生成短 URL，每次都会返回一个新的短 URL，这样会导致多个短URL对应一个长URL。如果需求只允许1对1，可以在返回生成的短URL之前去HBase查一下是否生成过了。如果允许N个短URL对应一个长URL，也可以从HBase查一下是否超过了N，如果没有，则返回生成的一个段URL。<br><br>思考二：<br>并发数=QPS*平均响应时间=20000 queries&#47;s * 0.01 s = 200 queries","like_count":1,"discussions":[{"author":{"id":1007349,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/5e/f5/018907ac.jpg","nickname":"李智慧","note":"","ucode":"8C9980C438AFD1","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":552516,"discussion_content":"1 多对一在功能上其实没问题的，都可以正确引用短URL，并正确跳转。HBase存储的key是短URL，如果用长URL遍历，性能太差了，无法接受。\n\n2 对","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1645498902,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":335188,"user_name":"shen","can_delete":false,"product_type":"c1","uid":1215066,"ip_address":"","ucode":"AE5737B0C7DC4F","user_header":"https://static001.geekbang.org/account/avatar/00/12/8a/5a/b67a82e3.jpg","comment_is_top":false,"comment_ctime":1645377751,"is_pvip":false,"replies":[{"id":"122478","content":"对","user_name":"作者回复","user_name_real":"编辑","uid":"1007349","ctime":1645498757,"ip_address":"","comment_id":335188,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5940345047","product_id":100105701,"comment_content":"2wqps是指每秒钟2w请求，现在10ms响应结果那么平均并发量20000*10&#47;1000=200","like_count":1,"discussions":[{"author":{"id":1007349,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/5e/f5/018907ac.jpg","nickname":"李智慧","note":"","ucode":"8C9980C438AFD1","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":552515,"discussion_content":"对","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1645498757,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":358526,"user_name":"不要挑战自己的智商","can_delete":false,"product_type":"c1","uid":2063114,"ip_address":"美国","ucode":"4910FF07C35DC5","user_header":"https://static001.geekbang.org/account/avatar/00/1f/7b/0a/b65e1fae.jpg","comment_is_top":false,"comment_ctime":1664413381,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1664413381","product_id":100105701,"comment_content":"第一个问题：因为短url个数足够用，如果没有发现真的构成什么问题，就不用解决。","like_count":0},{"had_liked":false,"id":355223,"user_name":"zahi","can_delete":false,"product_type":"c1","uid":1447887,"ip_address":"北京","ucode":"F64ABEB63C6D1F","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIofiaCAziajdQnbvrfpEkpCKVFgO62y6zicamhjF1BAWZSRcCVaTBXLIerLsGeZCic7XS7KOEkTN4fRg/132","comment_is_top":false,"comment_ctime":1661182045,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1661182045","product_id":100105701,"comment_content":"预先生成的短url感觉放到消息队列中更简单。","like_count":0},{"had_liked":false,"id":352383,"user_name":"zero","can_delete":false,"product_type":"c1","uid":1145759,"ip_address":"","ucode":"D8A22815D8987C","user_header":"https://static001.geekbang.org/account/avatar/00/11/7b/9f/da374651.jpg","comment_is_top":false,"comment_ctime":1658626526,"is_pvip":false,"discussion_count":0,"race_medal":1,"score":"1658626526","product_id":100105701,"comment_content":"文章和评论都很赞","like_count":0},{"had_liked":false,"id":344934,"user_name":"Cyberpunk","can_delete":false,"product_type":"c1","uid":1259947,"ip_address":"","ucode":"02F6C967C970C5","user_header":"https://static001.geekbang.org/account/avatar/00/13/39/ab/127e06d8.jpg","comment_is_top":false,"comment_ctime":1651887556,"is_pvip":true,"replies":[{"id":"125938","content":"1 这个链表也有并发访问的问题吧<br>是的<br><br>2 多个服务器会不会出现死锁<br>不会，只有一个文件锁，死锁的前提要至少两个锁","user_name":"作者回复","user_name_real":"编辑","uid":"1007349","ctime":1652057996,"ip_address":"","comment_id":344934,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1651887556","product_id":100105701,"comment_content":"单个服务器有了1w的短链接的链表，那这个链表也有并发访问的问题吧？毕竟单个服务器可以承接很多请求。<br><br>另外，加载文件的时候，多个服务器会不会出现死锁，导致服务器最开始的1w个短链数据加载不到？","like_count":0,"discussions":[{"author":{"id":1007349,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/5e/f5/018907ac.jpg","nickname":"李智慧","note":"","ucode":"8C9980C438AFD1","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":571025,"discussion_content":"1 这个链表也有并发访问的问题吧\n是的\n\n2 多个服务器会不会出现死锁\n不会，只有一个文件锁，死锁的前提要至少两个锁","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1652057996,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":344834,"user_name":"weiwei","can_delete":false,"product_type":"c1","uid":2429591,"ip_address":"","ucode":"8AF2A0BD93010C","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJ5sXrTGCq7nlvg8bBzjWtgFU0bXnSiangWBF6Uss3lfnyHeEaplKDBaWWZQNMvhQVxLXyrEEw7rNw/132","comment_is_top":false,"comment_ctime":1651816734,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"1651816734","product_id":100105701,"comment_content":"在网络带宽<br>4万（每秒）次请求×1KB=40MB×8bit=320Mb<br>为什么要乘以 8bit?","like_count":0,"discussions":[{"author":{"id":1440349,"avatar":"https://static001.geekbang.org/account/avatar/00/15/fa/5d/735fdc76.jpg","nickname":"╭(╯ε╰)╮","note":"","ucode":"4CB5FAEEE8CC5D","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":582622,"discussion_content":"好像有个规律\n单位大写是容量 单位小写是带宽\n\nMB是说文件大小或硬盘容量 Mb是说网速或者显存位宽什么的\n\nB代表bytes b代表bits","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1659534445,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"上海"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1014665,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/7b/89/34f2cbcc.jpg","nickname":"杨宇","note":"","ucode":"EB74DF6E269F03","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":571580,"discussion_content":"运营商对宽带的计算是按bit的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1652276826,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":342421,"user_name":"再见理想","can_delete":false,"product_type":"c1","uid":1245999,"ip_address":"","ucode":"FAC88B3F6F6DFD","user_header":"https://static001.geekbang.org/account/avatar/00/13/03/2f/0a5e0751.jpg","comment_is_top":false,"comment_ctime":1650254362,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1650254362","product_id":100105701,"comment_content":"在需求分析阶段<br>1.用时序图和用例图描述项目使用流程及场景<br>2.性能指标估算（存储空间&#47;吞吐量&#47;网络带宽）<br>3.非功能需求，系统高可用标准以及系统安全方面。<br>概要设计阶段<br>1.列举三种生成短URL的实现方案，对比优缺点。<br>2.使用部署图描绘系统通过负载均衡和分布式缓存技术解决高并发的读请求，应用HDFS和HBase解决海量数据的存储<br>详细设计阶段<br>1.对开发中核心部分进行细节描述，可以使用泳道图，流程图。<br>2.对系统中边界问题进行分析，做出合理的解决方案。","like_count":1},{"had_liked":false,"id":341724,"user_name":"JerryMen","can_delete":false,"product_type":"c1","uid":1508783,"ip_address":"","ucode":"4C8EB4A26E6441","user_header":"https://static001.geekbang.org/account/avatar/00/17/05/af/57a300fb.jpg","comment_is_top":false,"comment_ctime":1649809688,"is_pvip":true,"replies":[{"id":"124848","content":"请参考第一课","user_name":"作者回复","user_name_real":"编辑","uid":"1007349","ctime":1649813649,"ip_address":"","comment_id":341724,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1649809688","product_id":100105701,"comment_content":"老师，概要设计和详细设计的界限是什么？","like_count":0,"discussions":[{"author":{"id":1007349,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/5e/f5/018907ac.jpg","nickname":"李智慧","note":"","ucode":"8C9980C438AFD1","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":562345,"discussion_content":"请参考第一课","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1649813649,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":341078,"user_name":"Geek_46be40","can_delete":false,"product_type":"c1","uid":2813495,"ip_address":"","ucode":"DC9693EEE9542F","user_header":"","comment_is_top":false,"comment_ctime":1649332902,"is_pvip":false,"replies":[{"id":"124696","content":"你的意思是为什么是Base64而不是Base62吗？Base62也可以，Base64是为了凑够6个bit，编码效率更高一点，转码计算也更快一点。<br><br>","user_name":"作者回复","user_name_real":"作者","uid":"1007349","ctime":1649382653,"ip_address":"","comment_id":341078,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1649332902","product_id":100105701,"comment_content":"URL长度估算那里为啥是64呢，26个字母大小写是52个，再加上0~9个数字，总共是62位啊，为什么是64呢？","like_count":1,"discussions":[{"author":{"id":1007349,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/5e/f5/018907ac.jpg","nickname":"李智慧","note":"","ucode":"8C9980C438AFD1","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":560534,"discussion_content":"你的意思是为什么是Base64而不是Base62吗？Base62也可以，Base64是为了凑够6个bit，编码效率更高一点，转码计算也更快一点。\n\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1649382653,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":340462,"user_name":"Geek6900","can_delete":false,"product_type":"c1","uid":2206784,"ip_address":"","ucode":"F7683A08B17241","user_header":"","comment_is_top":false,"comment_ctime":1648823993,"is_pvip":false,"replies":[{"id":"124523","content":"浪费不重要，预生成的时候准备了24亿个冗余URL。","user_name":"作者回复","user_name_real":"编辑","uid":"1007349","ctime":1648863798,"ip_address":"","comment_id":340462,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1648823993","product_id":100105701,"comment_content":"如果取了2w个短URL后，还没有用完，这时服务重启或者宕机，因为只是加载到了内存，相当于会浪费一些短URL，如何解决这种浪费问题？","like_count":1,"discussions":[{"author":{"id":1007349,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/5e/f5/018907ac.jpg","nickname":"李智慧","note":"","ucode":"8C9980C438AFD1","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":559643,"discussion_content":"浪费不重要，预生成的时候准备了24亿个冗余URL。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1648863799,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":340345,"user_name":"laolinshi","can_delete":false,"product_type":"c1","uid":1024994,"ip_address":"","ucode":"269B879389D7D5","user_header":"https://static001.geekbang.org/account/avatar/00/0f/a3/e2/5cb4f43f.jpg","comment_is_top":false,"comment_ctime":1648773907,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1648773907","product_id":100105701,"comment_content":"针对第一个问题，我的解决思路如下: 在用户提交长URL进行短URL生成时，先用布隆过滤器检查这个长URL是否已经生成过了。当发现这个长URL已经存在时，用长URL生成MD5值，以这个值作为key在缓存中查找对应的短URL。如果获得了对应的短URL，以短URL作为查询条件去HBASE中查询对应的长URL，然后用这个长URL跟用户传人的长URL进行比较。如果比较一致就返回这个短URL给用户，不一致就生成对应的短URL。在缓存或者布隆过滤器中没有查找到结果就生成对应的短URL。之所以不直接通过长URL作为key在缓存中缓存生成的短URL，是考虑到长URL太长对查询性能影响会比较大。基于以上的想法要求生成短URL成功后在布隆过滤器中设置长URL已经生成过的标识，并以长URL生成的MD5值作为key在缓存中缓存生成的短URL。","like_count":1,"discussions":[{"author":{"id":1066577,"avatar":"https://static001.geekbang.org/account/avatar/00/10/46/51/50457315.jpg","nickname":"哗丽转身","note":"","ucode":"AF59F8211115DD","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":559669,"discussion_content":"我觉得无所谓，反正先走的是redis，重复请求又如何呢，redis足够抗住了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1648871493,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":338861,"user_name":"Eric","can_delete":false,"product_type":"c1","uid":1434144,"ip_address":"","ucode":"405CB9F42ADD65","user_header":"https://static001.geekbang.org/account/avatar/00/15/e2/20/c21c03fb.jpg","comment_is_top":false,"comment_ctime":1647765124,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1647765124","product_id":100105701,"comment_content":"长短url存储时候，可考虑变更一下存储内容，但会加大存储所需的空间；但是考虑重复或者恶意访问，短url是否无法根据请求头的来源进行辨别？只能在长url访问时候进行识别？","like_count":0},{"had_liked":false,"id":338069,"user_name":"gesanri","can_delete":false,"product_type":"c1","uid":1121174,"ip_address":"","ucode":"AE3B97DC3ED668","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/PiajxSqBRaELtOO0HKrj5SI5JSlmwiaCvaF6GLiaTmf5NX88OZaO3HymTAGTeIoicBUjqzmMF6sF5raPFjuqLFibrrw/132","comment_is_top":false,"comment_ctime":1647266795,"is_pvip":false,"replies":[{"id":"123610","content":"直接丢弃，误判断的概率受布隆过滤器空间大小影响，我们可以通过计算得出一个可接受的误判率需要的空间大小，也就是说，被错误丢弃的URL的数量是可以控制的。","user_name":"作者回复","user_name_real":"编辑","uid":"1007349","ctime":1647308727,"ip_address":"","comment_id":338069,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1647266795","product_id":100105701,"comment_content":"文中提到预生成URL用布隆过滤器检查是否重复，那布隆过滤器检查是判断一定不存在或可能存在，如果结果是可能存在，那是继续去hdfs里面判断是否存在还是直接丢弃这个URL?继续判断效率会不会有问题，但如果丢弃那也可能造成大量实际不重复的URL被丢弃，而导致6位短链无法生成120亿个，有这种可能吗？","like_count":1,"discussions":[{"author":{"id":1007349,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/5e/f5/018907ac.jpg","nickname":"李智慧","note":"","ucode":"8C9980C438AFD1","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":556308,"discussion_content":"直接丢弃，误判断的概率受布隆过滤器空间大小影响，我们可以通过计算得出一个可接受的误判率需要的空间大小，也就是说，被错误丢弃的URL的数量是可以控制的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1647308727,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":337638,"user_name":"余生","can_delete":false,"product_type":"c1","uid":2421369,"ip_address":"","ucode":"AEF6C96738F03B","user_header":"https://static001.geekbang.org/account/avatar/00/24/f2/79/b2012f53.jpg","comment_is_top":false,"comment_ctime":1646927240,"is_pvip":true,"replies":[{"id":"123386","content":"1.cn是短URL应用的域名，自己到域名服务商那里配置域名IP","user_name":"作者回复","user_name_real":"编辑","uid":"1007349","ctime":1646976759,"ip_address":"","comment_id":337638,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1646927240","product_id":100105701,"comment_content":"http:&#47;&#47;1.cn怎么解析到服务器ip的","like_count":0,"discussions":[{"author":{"id":1007349,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/5e/f5/018907ac.jpg","nickname":"李智慧","note":"","ucode":"8C9980C438AFD1","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":555570,"discussion_content":"1.cn是短URL应用的域名，自己到域名服务商那里配置域名IP","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1646976759,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":337537,"user_name":"rfyiamcool","can_delete":false,"product_type":"c1","uid":1118627,"ip_address":"","ucode":"65FCBF05B13893","user_header":"https://static001.geekbang.org/account/avatar/00/11/11/a3/7a2405ca.jpg","comment_is_top":false,"comment_ctime":1646882613,"is_pvip":true,"replies":[{"id":"123345","content":"snowflake id也是可以进行猜测的，而且长度也超过需求","user_name":"作者回复","user_name_real":"编辑","uid":"1007349","ctime":1646891883,"ip_address":"","comment_id":337537,"utype":1}],"discussion_count":3,"race_medal":0,"score":"1646882613","product_id":100105701,"comment_content":"大佬你这个有些麻烦呀，直接用 snowflake id 多简单呀，相比数据的自增id来说，id的时间到毫秒的，后面还有workerid和seq的位。","like_count":0,"discussions":[{"author":{"id":1007349,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/5e/f5/018907ac.jpg","nickname":"李智慧","note":"","ucode":"8C9980C438AFD1","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":555398,"discussion_content":"snowflake id也是可以进行猜测的，而且长度也超过需求","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1646891883,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":1,"child_discussions":[{"author":{"id":1118627,"avatar":"https://static001.geekbang.org/account/avatar/00/11/11/a3/7a2405ca.jpg","nickname":"rfyiamcool","note":"","ucode":"65FCBF05B13893","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1007349,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/5e/f5/018907ac.jpg","nickname":"李智慧","note":"","ucode":"8C9980C438AFD1","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":555403,"discussion_content":"嗯，10转62进制需要9个字符。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1646894133,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":555398,"ip_address":""},"score":555403,"extra":""}]},{"author":{"id":2620538,"avatar":"","nickname":"Geek_970bec","note":"","ucode":"172E54AA0697DA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":564339,"discussion_content":"雪花在单机 有4096的限制","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1650212803,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":337268,"user_name":"saber","can_delete":false,"product_type":"c1","uid":1024801,"ip_address":"","ucode":"68C279D7DDF9B6","user_header":"https://static001.geekbang.org/account/avatar/00/0f/a3/21/abb7bfe3.jpg","comment_is_top":false,"comment_ctime":1646726634,"is_pvip":true,"replies":[{"id":"123285","content":"带锁，这是一个对象锁，获取和释放锁的时间单位是微妙，对我们需求毫秒级性能影响可以忽略。","user_name":"作者回复","user_name_real":"编辑","uid":"1007349","ctime":1646789875,"ip_address":"","comment_id":337268,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1646726634","product_id":100105701,"comment_content":"拿短URL的acquireURL方法是带锁的么？如果不带，怎么确保唯一？如果带，怎么确保高性能？","like_count":1,"discussions":[{"author":{"id":1007349,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/5e/f5/018907ac.jpg","nickname":"李智慧","note":"","ucode":"8C9980C438AFD1","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":555161,"discussion_content":"带锁，这是一个对象锁，获取和释放锁的时间单位是微妙，对我们需求毫秒级性能影响可以忽略。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1646789875,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":336058,"user_name":"石维康","can_delete":false,"product_type":"c1","uid":1067564,"ip_address":"","ucode":"E39ED8416B2C01","user_header":"https://static001.geekbang.org/account/avatar/00/10/4a/2c/f8451d77.jpg","comment_is_top":false,"comment_ctime":1645872225,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1645872225","product_id":100105701,"comment_content":"请教下选择hbase的原因?","like_count":0,"discussions":[{"author":{"id":1795793,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/zxkns28cIAUZIt3WjDb8G26qiccT84d9GMr9ZpbYR60TU1ibqSj9NoYVHlJvGF1kOltkqNDmEfJCqPuYVkue3WHg/132","nickname":"Geek_55e386","note":"","ucode":"5A727F1323C2D0","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":554277,"discussion_content":"查询不涉及逻辑相关的, 简单的 key,value查询.  当然非关系型数据库首选","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1646296205,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":336039,"user_name":"lisir","can_delete":false,"product_type":"c1","uid":1250978,"ip_address":"","ucode":"C736CAA659DA63","user_header":"https://static001.geekbang.org/account/avatar/00/13/16/a2/987f8300.jpg","comment_is_top":false,"comment_ctime":1645862095,"is_pvip":false,"replies":[{"id":"122870","content":"并发量 200<br><br>用多少机器要看代码实现与性能优化的情况，需要在开发完成后才知道。","user_name":"作者回复","user_name_real":"编辑","uid":"1007349","ctime":1646014407,"ip_address":"","comment_id":336039,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1645862095","product_id":100105701,"comment_content":"“2 万 QPS，10ms 平均响应时间，这种情况下，真正的并发量只有 200”，不太明白这个200指的是什么了，2c 4g服务器需要多少台机器呢，向大老请教一下，因为一到用时就理解不太清楚了","like_count":0,"discussions":[{"author":{"id":1007349,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/5e/f5/018907ac.jpg","nickname":"李智慧","note":"","ucode":"8C9980C438AFD1","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":553647,"discussion_content":"并发量 200\n\n用多少机器要看代码实现与性能优化的情况，需要在开发完成后才知道。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1646014407,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":335749,"user_name":"来需求了，很忙","can_delete":false,"product_type":"c1","uid":1926122,"ip_address":"","ucode":"B77D1846FC9EED","user_header":"https://static001.geekbang.org/account/avatar/00/1d/63/ea/1a128e67.jpg","comment_is_top":false,"comment_ctime":1645672628,"is_pvip":true,"replies":[{"id":"122669","content":"生成的时候查HBase，如何索引未使用过的短链？似乎比HDFS麻烦","user_name":"作者回复","user_name_real":"编辑","uid":"1007349","ctime":1645681565,"ip_address":"","comment_id":335749,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1645672628","product_id":100105701,"comment_content":"为什么生成的短链不直接放到HBASE，被使用的短链去做update，这样不是简单点，也不用引入hdfs","like_count":1,"discussions":[{"author":{"id":1007349,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/5e/f5/018907ac.jpg","nickname":"李智慧","note":"","ucode":"8C9980C438AFD1","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":552993,"discussion_content":"生成的时候查HBase，如何索引未使用过的短链？似乎比HDFS麻烦","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1645681565,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":335629,"user_name":"刘帅","can_delete":false,"product_type":"c1","uid":1117630,"ip_address":"","ucode":"90FD56C0395B21","user_header":"https://static001.geekbang.org/account/avatar/00/11/0d/be/6acd4b18.jpg","comment_is_top":false,"comment_ctime":1645608308,"is_pvip":true,"replies":[{"id":"122660","content":"√","user_name":"作者回复","user_name_real":"编辑","uid":"1007349","ctime":1645666586,"ip_address":"","comment_id":335629,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1645608308","product_id":100105701,"comment_content":"问题一：原始链接重复生成短url会造成存储资源浪费，计算性能浪费等问题，可以使用布隆过滤器对原始链接进行过滤，存在对应的短url直接返回即可<br>问题二：2Wqps*10ms=200并发度，即同一时刻只需处理200个并发用户的请求就可满足2Wqps的性能要求","like_count":1,"discussions":[{"author":{"id":1007349,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/5e/f5/018907ac.jpg","nickname":"李智慧","note":"","ucode":"8C9980C438AFD1","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":552954,"discussion_content":"√","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1645666587,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":335437,"user_name":"G小调","can_delete":false,"product_type":"c1","uid":1145529,"ip_address":"","ucode":"8F3D50E2C1A559","user_header":"https://static001.geekbang.org/account/avatar/00/11/7a/b9/c3d3a92f.jpg","comment_is_top":false,"comment_ctime":1645518488,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1645518488","product_id":100105701,"comment_content":"有源码吗","like_count":0},{"had_liked":false,"id":335422,"user_name":"李焕之","can_delete":false,"product_type":"c1","uid":1368198,"ip_address":"","ucode":"ECD77D132411BB","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJbCmibL1XtPQmCJxUPg8rHLNgBZbor9UxAN3nOLhehicGkUcWGlq2Zic3XgHX1GLeXYJA0H3OPcNKPw/132","comment_is_top":false,"comment_ctime":1645513873,"is_pvip":false,"replies":[{"id":"122497","content":"1 长URL通常不止200B，同时还需要记录生成时间、请求者信息等数据，1KB其实是保守的。<br>2 文中提到，预生成的时候做冲突检查的，保证短URL唯一。","user_name":"作者回复","user_name_real":"编辑","uid":"1007349","ctime":1645519746,"ip_address":"","comment_id":335422,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1645513873","product_id":100105701,"comment_content":"李老师好，有两个疑问：1、文中说：每条短 URL 数据库记录大约 1KB。为什么会这么大呢？短+长串应该超不过200字节吧？还是考虑可能会有极端长的url？ 2、6位base64码680亿，预先生成了120亿，还是有很大概率可以使用短URL去撞到长URL呀,六分之一的概率，需要考虑防刷吗？","like_count":1,"discussions":[{"author":{"id":1007349,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/5e/f5/018907ac.jpg","nickname":"李智慧","note":"","ucode":"8C9980C438AFD1","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":552590,"discussion_content":"1 长URL通常不止200B，同时还需要记录生成时间、请求者信息等数据，1KB其实是保守的。\n2 文中提到，预生成的时候做冲突检查的，保证短URL唯一。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1645519746,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":335276,"user_name":"Tianium","can_delete":false,"product_type":"c1","uid":1005813,"ip_address":"","ucode":"06E2D3A0246546","user_header":"https://static001.geekbang.org/account/avatar/00/0f/58/f5/abb7bfe3.jpg","comment_is_top":false,"comment_ctime":1645436755,"is_pvip":false,"replies":[{"id":"122468","content":"赞，你的意见很重要，生成短URL的资源消耗不可忽略的。<br>用布隆过滤器加速生成URL的冲突检查也是很好的方案。","user_name":"作者回复","user_name_real":"编辑","uid":"1007349","ctime":1645497849,"ip_address":"","comment_id":335276,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1645436755","product_id":100105701,"comment_content":"需求没有分析生成短url的规模和性能指标吧，一般生成短url的性能可以允许差点，如果不是，那问题一就不能简单用查hbase来解决了，而需要利用列入课程提到的bloom filter以及分布式缓存进一步加速了。","like_count":1,"discussions":[{"author":{"id":1007349,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/5e/f5/018907ac.jpg","nickname":"李智慧","note":"","ucode":"8C9980C438AFD1","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":552502,"discussion_content":"赞，你的意见很重要，生成短URL的资源消耗不可忽略的。\n用布隆过滤器加速生成URL的冲突检查也是很好的方案。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1645497849,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1072164,"avatar":"https://static001.geekbang.org/account/avatar/00/10/5c/24/b807e3ee.jpg","nickname":"linuxcoder","note":"","ucode":"600046EA71FEFA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":552437,"discussion_content":"课程提到短url是离线生成的，生成的短url已经确保了无重复（离线时候用bloomfilter查重）。Hbase是持久化，查询时候课程里也用到缓存了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1645458785,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":335243,"user_name":"linuxcoder","can_delete":false,"product_type":"c1","uid":1072164,"ip_address":"","ucode":"600046EA71FEFA","user_header":"https://static001.geekbang.org/account/avatar/00/10/5c/24/b807e3ee.jpg","comment_is_top":false,"comment_ctime":1645425425,"is_pvip":false,"replies":[{"id":"122475","content":"“只有一台服务器能读取偏移量”是为了控制并发，意思是“在同一个时间，只有一台服务器能读取偏移量”，事实上，一台服务器取完短URL，释放偏移量文件，另一个服务器就可以去取了，最后，所有服务器都有短URL。负载均衡可以请求任何服务器。","user_name":"作者回复","user_name_real":"编辑","uid":"1007349","ctime":1645498490,"ip_address":"","comment_id":335243,"utype":1}],"discussion_count":3,"race_medal":0,"score":"1645425425","product_id":100105701,"comment_content":"请问老师，通过hdfs预加载方案，只有一台服务器能读取偏移量，然后读到10k个地址，放入内存，那负载均衡器如何知道哪个服务器有数据呢？需要把这个10k个短地址放入分布式cache吗？否则的话会有性能瓶颈吗？谢谢","like_count":1,"discussions":[{"author":{"id":1007349,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/5e/f5/018907ac.jpg","nickname":"李智慧","note":"","ucode":"8C9980C438AFD1","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":552512,"discussion_content":"“只有一台服务器能读取偏移量”是为了控制并发，意思是“在同一个时间，只有一台服务器能读取偏移量”，事实上，一台服务器取完短URL，释放偏移量文件，另一个服务器就可以去取了，最后，所有服务器都有短URL。负载均衡可以请求任何服务器。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1645498490,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2911084,"avatar":"https://static001.geekbang.org/account/avatar/00/2c/6b/6c/3e80afaf.jpg","nickname":"HappyHasson","note":"","ucode":"B84CC43E349CFA","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":552729,"discussion_content":"其实就是每个服务器都加锁去取偏移量，然后取到偏移量去读一万个短链接","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1645580921,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1072164,"avatar":"https://static001.geekbang.org/account/avatar/00/10/5c/24/b807e3ee.jpg","nickname":"linuxcoder","note":"","ucode":"600046EA71FEFA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":552448,"discussion_content":"我觉得老师文章的意思应该是每台服务器都加载不同的10k短地址到各自的服务器（内存）中，这样可以支持更高并发，也有很强的水平扩展性。同时避免不同服务器加载相同短地址是通过文件系统写操作互斥（hdfs提供？）保证，不知理解是否正确。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1645460965,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":335239,"user_name":"KK_TTN","can_delete":false,"product_type":"c1","uid":1061067,"ip_address":"","ucode":"5681D57DEEB6DC","user_header":"https://static001.geekbang.org/account/avatar/00/10/30/cb/95ea2150.jpg","comment_is_top":false,"comment_ctime":1645425068,"is_pvip":true,"replies":[{"id":"122474","content":"你的疑问有道理，估计是作者偷懒吧，不想分开写~","user_name":"作者回复","user_name_real":"编辑","uid":"1007349","ctime":1645498366,"ip_address":"","comment_id":335239,"utype":1}],"discussion_count":3,"race_medal":0,"score":"1645425068","product_id":100105701,"comment_content":"为什么 &quot;短 URL 应该是不可猜测的&quot; 是非功能需求?","like_count":0,"discussions":[{"author":{"id":1087879,"avatar":"https://static001.geekbang.org/account/avatar/00/10/99/87/98ebb20e.jpg","nickname":"dao","note":"","ucode":"4181FB270462CF","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":552741,"discussion_content":"我个人认为，这也可以是技术需求，也就是技术上对算法的要求。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1645584043,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1007349,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/5e/f5/018907ac.jpg","nickname":"李智慧","note":"","ucode":"8C9980C438AFD1","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":552510,"discussion_content":"你的疑问有道理，估计是作者偷懒吧，不想分开写~","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1645498367,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1027346,"avatar":"","nickname":"老码不识途","note":"","ucode":"18CC5EE8532153","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":552362,"discussion_content":"应该是功能需求，估计是写错地儿了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1645431302,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]}]}