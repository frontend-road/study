{"id":155183,"title":"35 | 安全沙箱：页面和系统之间的隔离墙","content":"<p>前面三篇文章我们主要围绕同源策略介绍了Web页面安全的相关内容，那今天我们把视野向外延伸，来聊聊页面安全和操作系统安全之间的关系。</p><p>在<a href=\"https://time.geekbang.org/column/article/113513\">《01 | Chrome架构：仅仅打开了1个页面，为什么有4个进程？》</a>那篇文章中，我们分析了浏览器架构的发展史，在最开始的阶段，浏览器是单进程的，这意味着渲染过程、JavaScript执行过程、网络加载过程、UI绘制过程和页面显示过程等都是在同一个进程中执行的，这种结构虽然简单，但是也带来了很多问题。</p><p><strong>从稳定性视角来看，单进程架构的浏览器是不稳定的</strong>，因为只要浏览器进程中的任意一个功能出现异常都有可能影响到整个浏览器，如页面卡死、浏览器崩溃等。不过浏览器的稳定性并不是本文讨论的重点，我们今天主要聊的是<strong>浏览器架构是如何影响到操作系统安全的</strong>。</p><p>浏览器本身的漏洞是单进程浏览器的一个主要问题，如果浏览器被曝出存在漏洞，那么在这些漏洞没有被及时修复的情况下，黑客就有可能通过恶意的页面向浏览器中注入恶意程序，其中最常见的攻击方式是利用<strong>缓冲区溢出</strong>，不过需要<strong>注意这种类型的攻击和XSS注入的脚本是不一样的</strong>。</p><ul>\n<li>XSS攻击只是将恶意的JavaScript脚本注入到页面中，虽然能窃取一些Cookie相关的数据，但是XSS无法对操作系统进行攻击。</li>\n<li>而通过浏览器漏洞进行的攻击是可以入侵到浏览器进程内部的，可以读取和修改浏览器进程内部的任意内容，还可以穿透浏览器，在用户的操作系统上悄悄地安装恶意软件、监听用户键盘输入信息以及读取用户硬盘上的文件内容。</li>\n</ul><!-- [[[read_end]]] --><p>和XSS攻击页面相比，这类攻击无疑是枚“核弹”，它会将整个操作系统的内容都暴露给黑客，这样我们操作系统上所有的资料都是不安全的了。</p><h2>安全视角下的多进程架构</h2><p>现代浏览器的设计目标是<strong>安全、快速</strong>和<strong>稳定</strong>，而这种核弹级杀伤力的安全问题就是一个很大的潜在威胁，因此在设计现代浏览器的体系架构时，需要解决这个问题。</p><p>我们知道现代浏览器采用了多进程架构，将渲染进程和浏览器主进程做了分离，完整的进程架构我们已经在<a href=\"https://time.geekbang.org/column/article/113513\">《01 | Chrome架构：仅仅打开了1个页面，为什么有4个进程？》</a>那篇文章中介绍过了，这里我就不重复介绍了。下面我们重点从操作系统安全的视角来看看浏览器的多进程架构，如下图：</p><p><img src=\"https://static001.geekbang.org/resource/image/b8/b1/b83693a1ace43f43f9cab242982de6b1.png?wh=1142*1024\" alt=\"\"></p><center><span class=\"reference\">浏览器内核和渲染进程</span></center><p>观察上图，我们知道浏览器被划分为<strong>浏览器内核</strong>和<strong>渲染内核</strong>两个核心模块，其中浏览器内核是由网络进程、浏览器主进程和GPU进程组成的，渲染内核就是渲染进程。那如果我们在浏览器中打开一个页面，这两个模块是怎么配合的呢？</p><p>所有的网络资源都是通过浏览器内核来下载的，下载后的资源会通过IPC将其提交给渲染进程（浏览器内核和渲染进程之间都是通过IPC来通信的）。然后渲染进程会对这些资源进行解析、绘制等操作，最终生成一幅图片。但是渲染进程并不负责将图片显示到界面上，而是将最终生成的图片提交给浏览器内核模块，由浏览器内核模块负责显示这张图片。</p><p>在<a href=\"https://time.geekbang.org/column/article/113513\">《01 | Chrome架构：仅仅打开了1个页面，为什么有4个进程？》</a>中我们分析过，设计现代浏览器体系架构时，将浏览器划分为不同的进程是为了增加其稳定性。虽然设计成了多进程架构，不过这些模块之间的沟通方式却有些复杂，也许你还有以下问题：</p><ul>\n<li>为什么一定要通过浏览器内核去请求资源，再将数据转发给渲染进程，而不直接从进程内部去请求网络资源？</li>\n<li>为什么渲染进程只负责生成页面图片，生成图片还要经过IPC通知浏览器内核模块，然后让浏览器内核去负责展示图片？</li>\n</ul><p>通过以上方式不是增加了工程的复杂度吗？</p><p>要解释现代浏览器为什么要把这个流程弄得这么复杂，我们就得从系统安全的角度来分析。</p><h2>安全沙箱</h2><p>不过在解释这些问题之前，我们得先看看什么是安全沙箱。</p><p>上面我们分析过了，由于渲染进程需要执行DOM解析、CSS解析、网络图片解码等操作，如果渲染进程中存在系统级别的漏洞，那么以上操作就有可能让恶意的站点获取到渲染进程的控制权限，进而又获取操作系统的控制权限，这对于用户来说是非常危险的。</p><p>因为网络资源的内容存在着各种可能性，所以浏览器会默认所有的网络资源都是不可信的，都是不安全的。但谁也不能保证浏览器不存在漏洞，只要出现漏洞，黑客就可以通过网络内容对用户发起攻击。</p><p>我们知道，如果你下载了一个恶意程序，但是没有执行它，那么恶意程序是不会生效的。同理，浏览器之于网络内容也是如此，浏览器可以安全地下载各种网络资源，但是如果要执行这些网络资源，比如解析HTML、解析CSS、执行JavaScript、图片编解码等操作，就需要非常谨慎了，因为一不小心，黑客就会利用这些操作对含有漏洞的浏览器发起攻击。</p><p>基于以上原因，我们需要在渲染进程和操作系统之间建一道墙，即便渲染进程由于存在漏洞被黑客攻击，但由于这道墙，黑客就获取不到渲染进程之外的任何操作权限。<strong>将渲染进程和操作系统隔离的这道墙就是我们要聊的安全沙箱</strong>。</p><p>浏览器中的安全沙箱是利用操作系统提供的安全技术，让渲染进程在执行过程中无法访问或者修改操作系统中的数据，在渲染进程需要访问系统资源的时候，需要通过浏览器内核来实现，然后将访问的结果通过IPC转发给渲染进程。</p><p>安全沙箱最小的保护单位是进程。因为单进程浏览器需要频繁访问或者修改操作系统的数据，所以单进程浏览器是无法被安全沙箱保护的，而现代浏览器采用的多进程架构使得安全沙箱可以发挥作用。</p><h2>安全沙箱如何影响各个模块功能</h2><p>我们知道安全沙箱最小的保护单位是进程，并且能限制进程对操作系统资源的访问和修改，这就意味着如果要让安全沙箱应用在某个进程上，那么这个进程必须没有读写操作系统的功能，比如读写本地文件、发起网络请求、调用GPU接口等。</p><p>了解了被安全沙箱保护的进程会有一系列的受限操作之后，接下来我们就可以分析渲染进程和浏览器内核各自都有哪些职责，如下图：</p><p><img src=\"https://static001.geekbang.org/resource/image/f8/1b/f8cc6394832ed238f18a01eff5726f1b.png?wh=1142*736\" alt=\"\"></p><center><span class=\"reference\">浏览器内核和渲染进程各自职责</span></center><p>通过该图，我们可以看到由于渲染进程需要安全沙箱的保护，因此需要把在渲染进程内部涉及到和系统交互的功能都转移到浏览器内核中去实现。</p><p>那安全沙箱是如何影响到各个模块功能的呢？</p><h3>1. 持久存储</h3><p>我们先来看看安全沙箱是如何影响到浏览器持久存储的。由于安全沙箱需要负责确保渲染进程无法直接访问用户的文件系统，但是在渲染进程内部有访问Cookie的需求、有上传文件的需求，为了解决这些文件的访问需求，所以现代浏览器将读写文件的操作全部放在了浏览器内核中实现，然后通过IPC将操作结果转发给渲染进程。</p><p>具体地讲，如下文件内容的读写都是在浏览器内核中完成的：</p><ul>\n<li>存储Cookie数据的读写。通常浏览器内核会维护一个存放所有Cookie的Cookie数据库，然后当渲染进程通过JavaScript来读取Cookie时，渲染进程会通过IPC将读取Cookie的信息发送给浏览器内核，浏览器内核读取Cookie之后再将内容返回给渲染进程。</li>\n<li>一些缓存文件的读写也是由浏览器内核实现的，比如网络文件缓存的读取。</li>\n</ul><h3>2. 网络访问</h3><p>同样有了安全沙箱的保护，在渲染进程内部也是不能直接访问网络的，如果要访问网络，则需要通过浏览器内核。不过浏览器内核在处理URL请求之前，会检查渲染进程是否有权限请求该URL，比如检查XMLHttpRequest或者Fetch是否是跨站点请求，或者检测HTTPS的站点中是否包含了HTTP的请求。</p><h3>3. 用户交互</h3><p>渲染进程实现了安全沙箱，还影响到了一个非常重要的用户交互功能。</p><p>通常情况下，如果你要实现一个UI程序，操作系统会提供一个界面给你，该界面允许应用程序与用户交互，允许应用程序在该界面上进行绘制，比如Windows提供的是HWND，Linux提供的X Window，我们就把HWND和X Window统称为窗口句柄。应用程序可以在窗口句柄上进行绘制和接收键盘鼠标消息。</p><p>不过在现代浏览器中，由于每个渲染进程都有安全沙箱的保护，所以在渲染进程内部是无法直接操作窗口句柄的，这也是为了限制渲染进程监控到用户的输入事件。</p><p>由于渲染进程不能直接访问<strong>窗口句柄</strong>，所以渲染进程需要完成以下两点大的改变。</p><p>第一点，渲染进程需要渲染出位图。为了向用户显示渲染进程渲染出来的位图，渲染进程需要将生成好的位图发送到浏览器内核，然后浏览器内核将位图复制到屏幕上。</p><p>第二点，操作系统没有将用户输入事件直接传递给渲染进程，而是将这些事件传递给浏览器内核。然后浏览器内核再根据当前浏览器界面的状态来判断如何调度这些事件，如果当前焦点位于浏览器地址栏中，则输入事件会在浏览器内核内部处理；如果当前焦点在页面的区域内，则浏览器内核会将输入事件转发给渲染进程。</p><p>之所以这样设计，就是为了限制渲染进程有监控到用户输入事件的能力，所以所有的键盘鼠标事件都是由浏览器内核来接收的，然后浏览器内核再通过IPC将这些事件发送给渲染进程。</p><p>上面我们分析了由于渲染进程引入了安全沙箱，所以浏览器的持久存储、网络访问和用户交互等功能都不能在渲染进程内直接使用了，因此我们需要把这些功能迁移到浏览器内核中去实现，这让原本比较简单的流程变得复杂了。</p><p>理解这些限制，我们就能解释开始提出的两个问题了。</p><h2>站点隔离（Site Isolation）</h2><p>所谓站点隔离是指Chrome将同一站点（包含了相同根域名和相同协议的地址）中相互关联的页面放到同一个渲染进程中执行。</p><p>最开始Chrome划分渲染进程是以标签页为单位，也就是说整个标签页会被划分给某个渲染进程。但是，按照标签页划分渲染进程存在一些问题，原因就是一个标签页中可能包含了多个iframe，而这些iframe又有可能来自于不同的站点，这就导致了多个不同站点中的内容通过iframe同时运行在同一个渲染进程中。</p><p>目前所有操作系统都面临着两个A级漏洞——幽灵（Spectre）和熔毁（Meltdown），这两个漏洞是由处理器架构导致的，很难修补，黑客通过这两个漏洞可以直接入侵到进程的内部，如果入侵的进程没有安全沙箱的保护，那么黑客还可以发起对操作系统的攻击。</p><p>所以如果一个银行站点包含了一个恶意iframe，然后这个恶意的iframe利用这两个A级漏洞去入侵渲染进程，那么恶意程序就能读取银行站点渲染进程内的所有内容了，这对于用户来说就存在很大的风险了。</p><p>因此Chrome几年前就开始重构代码，将标签级的渲染进程重构为iframe级的渲染进程，然后严格按照同一站点的策略来分配渲染进程，这就是Chrome中的站点隔离。</p><p>实现了站点隔离，就可以将恶意的iframe隔离在恶意进程内部，使得它无法继续访问其他iframe进程的内容，因此也就无法攻击其他站点了。</p><p>值得注意是，2019年10月20日Chrome团队宣布安卓版的Chrome已经全面支持站点隔离，你可以参考<a href=\"https://www.digitalinformationworld.com/2019/10/google-improves-site-isolation-for-stronger-chrome-browser-security.html\">文中链接</a>。</p><h2>总结</h2><p>好了，今天的内容就介绍到这里，下面我来总结下本文的主要内容。</p><p>首先我们分析了单进程浏览器在系统安全方面的不足，如果浏览器存在漏洞，那么黑客就有机会通过页面对系统发起攻击。</p><p>因此在设计现代浏览器的体系架构时，就考虑到这个问题了。于是，在多进程的基础之上引入了安全沙箱，有了安全沙箱，就可以将操作系统和渲染进程进行隔离，这样即便渲染进程由于漏洞被攻击，也不会影响到操作系统的。</p><p>由于渲染进程采用了安全沙箱，所以在渲染进程内部不能与操作系统直接交互，于是就在浏览器内核中实现了持久存储、网络访问和用户交互等一系列与操作系统交互的功能，然后通过IPC和渲染进程进行交互。</p><p>最后我们还分析了Chrome中最新的站点隔离功能。由于最初都是按照标签页来划分渲染进程的，所以如果一个标签页里面有多个不同源的iframe，那么这些iframe也会被分配到同一个渲染进程中，这样就很容易让黑客通过iframe来攻击当前渲染进程。而站点隔离会将不同源的iframe分配到不同的渲染进程中，这样即使黑客攻击恶意iframe的渲染进程，也不会影响到其他渲染进程的。</p><p>今天介绍的内容和概念都比较多，看上去离前端比较远，不过这些内容会影响你对浏览器整体架构的理解，而深入理解了浏览器架构能帮助你更加深刻地理解前端内容。为了方便你的理解，我把一些参考资料放到了文章的最后，有需要的话你可以拿来参考。</p><h2>思考时间</h2><p>今天留给你的思考题：你认为安全沙箱能防止XSS或者CSRF一类的攻击的吗？为什么？</p><p>欢迎在留言区与我分享你的想法，也欢迎你在留言区记录你的思考过程。感谢阅读，如果你觉得这篇文章对你有帮助的话，也欢迎把它分享给更多的朋友。</p><h2>参考资料</h2><ol>\n<li>\n<p>安全沙箱的设计参考了<a href=\"https://zh.wikipedia.org/wiki/%E6%9C%80%E5%B0%8F%E6%9D%83%E9%99%90%E5%8E%9F%E5%88%99\">最小权限原则</a></p>\n</li>\n<li>\n<p><a href=\"http://seclab.stanford.edu/websec/chromium/chromium-security-architecture.pdf\">The Security Architecture of the Chromium Browser</a></p>\n</li>\n<li>\n<p><a href=\"https://prezi.com/l3zlqveefln7/the-security-architecture-of-the-chromium-browser/\">The Security Architecture of the Chromium Browser-ppt</a></p>\n</li>\n<li>\n<p><a href=\"https://www.chromium.org/developers/design-documents/site-isolation\">chromium site-isolation</a></p>\n</li>\n<li>\n<p><a href=\"https://www.bisend.cn/blog/google-chrome-site-isolation\">Site Isolation</a></p>\n</li>\n<li>\n<p><a href=\"https://www.usenix.org/system/files/sec19-reis.pdf\">Site Isolation: Process Separation for Web Sites within the Browser</a></p>\n</li>\n</ol><p></p>","comments":[{"had_liked":false,"id":144178,"user_name":"一步","can_delete":false,"product_type":"c1","uid":1005391,"ip_address":"","ucode":"73CEA468CE70C3","user_header":"https://static001.geekbang.org/account/avatar/00/0f/57/4f/6fb51ff1.jpg","comment_is_top":false,"comment_ctime":1571876109,"is_pvip":true,"replies":[{"id":"55784","content":"没问题","user_name":"作者回复","user_name_real":"李兵","uid":"1141464","ctime":1572013734,"ip_address":"","comment_id":144178,"utype":1}],"discussion_count":1,"race_medal":1,"score":"285039717645","product_id":100033601,"comment_content":"安全沙箱是不能防止 XSS 或者 CSRF 一类的攻击，<br>安全沙箱的目的是隔离渲染进程和操作系统，让渲染进行没有访问操作系统的权利<br>XSS 或者 CSRF 主要是利用网络资源获取用户的信息，这和操作系统没有关系的","like_count":67,"discussions":[{"author":{"id":1141464,"avatar":"https://static001.geekbang.org/account/avatar/00/11/6a/d8/228449c9.jpg","nickname":"李兵","note":"","ucode":"3F3D3F6E20209E","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":471837,"discussion_content":"没问题","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1572013734,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":144309,"user_name":"成楠Peter","can_delete":false,"product_type":"c1","uid":1252977,"ip_address":"","ucode":"4D13E7368D8CF2","user_header":"https://static001.geekbang.org/account/avatar/00/13/1e/71/9dcbe6c4.jpg","comment_is_top":false,"comment_ctime":1571893339,"is_pvip":false,"replies":[{"id":"55774","content":"日拱一卒 不期速成 我随时奉陪","user_name":"作者回复","user_name_real":"李兵","uid":"1141464","ctime":1572009951,"ip_address":"","comment_id":144309,"utype":1}],"discussion_count":3,"race_medal":0,"score":"104651108443","product_id":100033601,"comment_content":"每周都跟着老师一起学习，终于坚持到最后了。千里之行始于足下，课程结束后，我们再向老师提问？","like_count":24,"discussions":[{"author":{"id":1141464,"avatar":"https://static001.geekbang.org/account/avatar/00/11/6a/d8/228449c9.jpg","nickname":"李兵","note":"","ucode":"3F3D3F6E20209E","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":471884,"discussion_content":"日拱一卒 不期速成 我随时奉陪","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1572009951,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1622868,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/yxWUVmiccGZdE0lVATCpdUQDh7ubI7BGXRxiadfog14S3TjRR2dcqMLOR87jf2EA3taEFw4FdNMSDhRanKhMB2Kw/132","nickname":"Geek_panda","note":"","ucode":"ED245B851B841A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":386895,"discussion_content":"老师说好的奉陪呢，如今已不见踪影","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1627883951,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":2994349,"avatar":"https://static001.geekbang.org/account/avatar/00/2d/b0/ad/6ec3ca4f.jpg","nickname":"王哪儿跑","note":"","ucode":"1537D730A702C2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1622868,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/yxWUVmiccGZdE0lVATCpdUQDh7ubI7BGXRxiadfog14S3TjRR2dcqMLOR87jf2EA3taEFw4FdNMSDhRanKhMB2Kw/132","nickname":"Geek_panda","note":"","ucode":"ED245B851B841A","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":572541,"discussion_content":"卒过了河已经被马踢飞了..","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1652844566,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":386895,"ip_address":""},"score":572541,"extra":""}]}]},{"had_liked":false,"id":144859,"user_name":"刹那","can_delete":false,"product_type":"c1","uid":1620237,"ip_address":"","ucode":"E0B1C29EB07754","user_header":"https://static001.geekbang.org/account/avatar/00/18/b9/0d/ae745ec0.jpg","comment_is_top":false,"comment_ctime":1572077567,"is_pvip":false,"replies":[{"id":"56713","content":"如果ipc有漏洞也是可能的，不过要通过IPC发起攻击、那难度就太大了，因为IPC的消息要合规，不合规的消息也会被过滤掉的。","user_name":"作者回复","user_name_real":"李兵","uid":"1141464","ctime":1572618333,"ip_address":"","comment_id":144859,"utype":1}],"discussion_count":1,"race_medal":0,"score":"87471423487","product_id":100033601,"comment_content":"老师我有个疑问，既然渲染进程运行在沙箱中，涉及到系统操作的都通过ipc向浏览器进程发送操作请求，那么，这个阶段会不会也存在安全漏洞？就是说，渲染进程有没有可能发送一个能攻破浏览器进程的消息，之后可以通过控制浏览器进程入侵操作系统？","like_count":20,"discussions":[{"author":{"id":1141464,"avatar":"https://static001.geekbang.org/account/avatar/00/11/6a/d8/228449c9.jpg","nickname":"李兵","note":"","ucode":"3F3D3F6E20209E","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":472142,"discussion_content":"如果ipc有漏洞也是可能的，不过要通过IPC发起攻击、那难度就太大了，因为IPC的消息要合规，不合规的消息也会被过滤掉的。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1572618333,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":144512,"user_name":"Snow同學","can_delete":false,"product_type":"c1","uid":1390875,"ip_address":"","ucode":"231E98C721E4D2","user_header":"https://static001.geekbang.org/account/avatar/00/15/39/1b/bcabd223.jpg","comment_is_top":false,"comment_ctime":1571962985,"is_pvip":false,"replies":[{"id":"55778","content":"<br>不好意思，久等了。<br><br>你可以关注下 PerformancePaintTiming，不过这个功能个大浏览器还在开发中，Chrome也可以使用，但是不保证准确度。<br><br>另外要使用该接口，还需要了解几个概念如First paint、First contentful paint。<br><br>这是MDN上的一段代码，你可以测试下：<br>function showPaintTimings() {<br>  if (window.performance) {<br>    let performance = window.performance;<br>    let performanceEntries = performance.getEntriesByType(&amp;#39;paint&amp;#39;);<br>    performanceEntries.forEach( (performanceEntry, i, entries) =&gt; {<br>      console.log(&quot;The time to &quot; + performanceEntry.name + &quot; was &quot; + performanceEntry.startTime + &quot; milliseconds.&quot;);<br>    });<br>  } else {<br>    console.log(&amp;#39;Performance timing isn\\&amp;#39;t supported.&amp;#39;);<br>  }<br>}<br><br>给你两个参考地址<br><br>MDN：<br>https:&#47;&#47;developer.mozilla.org&#47;zh-CN&#47;docs&#47;Web&#47;API&#47;PerformancePaintTiming<br><br>W3C:<br>https:&#47;&#47;www.w3.org&#47;TR&#47;paint-timing&#47;","user_name":"作者回复","user_name_real":"李兵","uid":"1141464","ctime":1572011991,"ip_address":"","comment_id":144512,"utype":1}],"discussion_count":2,"race_medal":0,"score":"27341766761","product_id":100033601,"comment_content":"请问老师,这个问题我问了好几遍了，希望得到老师的回复，<br>在开发时<br>1.空页面加载一个URL，如何知道页面已经显示在了屏幕上（从用户真实的视觉上看到页面），在代码层面可以通过检测什么状态知道嘛？<br>2.在页面已经显示到屏幕后完成，通过点击一个按钮，执行向document添加一些元素（可以是div，div里也可以有更多其他标签和内容），如何知道这些元素什么时候真正显示在屏幕上（从用户真实的视觉上看到页面），在代码层面可以通过检测什么状态知道嘛？<br>是不是无法通过代码检测呀？","like_count":6,"discussions":[{"author":{"id":1141464,"avatar":"https://static001.geekbang.org/account/avatar/00/11/6a/d8/228449c9.jpg","nickname":"李兵","note":"","ucode":"3F3D3F6E20209E","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":471980,"discussion_content":"\n不好意思，久等了。\n\n你可以关注下 PerformancePaintTiming，不过这个功能个大浏览器还在开发中，Chrome也可以使用，但是不保证准确度。\n\n另外要使用该接口，还需要了解几个概念如First paint、First contentful paint。\n\n这是MDN上的一段代码，你可以测试下：\nfunction showPaintTimings() {\n  if (window.performance) {\n    let performance = window.performance;\n    let performanceEntries = performance.getEntriesByType(&amp;amp;#39;paint&amp;amp;#39;);\n    performanceEntries.forEach( (performanceEntry, i, entries) =&amp;gt; {\n      console.log(&amp;quot;The time to &amp;quot; + performanceEntry.name + &amp;quot; was &amp;quot; + performanceEntry.startTime + &amp;quot; milliseconds.&amp;quot;);\n    });\n  } else {\n    console.log(&amp;amp;#39;Performance timing isn\\&amp;amp;#39;t supported.&amp;amp;#39;);\n  }\n}\n\n给你两个参考地址\n\nMDN：\nhttps://developer.mozilla.org/zh-CN/docs/Web/API/PerformancePaintTiming\n\nW3C:\nhttps://www.w3.org/TR/paint-timing/","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1572011991,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1064018,"avatar":"https://static001.geekbang.org/account/avatar/00/10/3c/52/5951ffb4.jpg","nickname":"Sinvi","note":"","ucode":"2A90976980CA3C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":302831,"discussion_content":"可见极客时间的评论是有xss过滤的，哈哈哈","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1599041309,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":144184,"user_name":"空山鸟语","can_delete":false,"product_type":"c1","uid":1375838,"ip_address":"","ucode":"BA9993D7A4DC80","user_header":"https://static001.geekbang.org/account/avatar/00/14/fe/5e/9b723d19.jpg","comment_is_top":false,"comment_ctime":1571876972,"is_pvip":false,"replies":[{"id":"55783","content":"感谢肯定，课程内容的确是非常精心规划的","user_name":"作者回复","user_name_real":"李兵","uid":"1141464","ctime":1572013715,"ip_address":"","comment_id":144184,"utype":1}],"discussion_count":1,"race_medal":0,"score":"27341680748","product_id":100033601,"comment_content":"老师讲的全是干货，目前正在反复听呢！<br>表示还没听够","like_count":6,"discussions":[{"author":{"id":1141464,"avatar":"https://static001.geekbang.org/account/avatar/00/11/6a/d8/228449c9.jpg","nickname":"李兵","note":"","ucode":"3F3D3F6E20209E","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":471840,"discussion_content":"感谢肯定，课程内容的确是非常精心规划的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1572013715,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":144255,"user_name":"李懂","can_delete":false,"product_type":"c1","uid":1330436,"ip_address":"","ucode":"539E6639042C88","user_header":"https://static001.geekbang.org/account/avatar/00/14/4d/04/5e0d3713.jpg","comment_is_top":false,"comment_ctime":1571883367,"is_pvip":false,"replies":[{"id":"55776","content":"坑不少了。 我想想怎么填","user_name":"作者回复","user_name_real":"李兵","uid":"1141464","ctime":1572010038,"ip_address":"","comment_id":144255,"utype":1}],"discussion_count":2,"race_medal":0,"score":"14456785255","product_id":100033601,"comment_content":"老师多给自己留点坑，多讲讲，还想再学学！<br>希望能讲讲，全局上下文不是只存在一个么，为啥在执行时js，每次都先创建全局上下文，进栈，是不是哪里理解的有问题？","like_count":3,"discussions":[{"author":{"id":1141464,"avatar":"https://static001.geekbang.org/account/avatar/00/11/6a/d8/228449c9.jpg","nickname":"李兵","note":"","ucode":"3F3D3F6E20209E","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":471861,"discussion_content":"坑不少了。 我想想怎么填","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1572010038,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1037760,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLIuRQaZX70dsBg6khub2VPM1eQAP9IWRWxgOFed3ia4kXyNJInFRicWJ0ibf2YmLsOvJa1sGygGpmJg/132","nickname":"胖子","note":"","ucode":"E6371346288A87","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":292483,"discussion_content":"同问。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1595241215,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":144235,"user_name":"mfist","can_delete":false,"product_type":"c1","uid":1373624,"ip_address":"","ucode":"4F99F422C23FB4","user_header":"https://static001.geekbang.org/account/avatar/00/14/f5/b8/9f165f4b.jpg","comment_is_top":false,"comment_ctime":1571881409,"is_pvip":false,"replies":[{"id":"55787","content":"没问题","user_name":"作者回复","user_name_real":"李兵","uid":"1141464","ctime":1572013843,"ip_address":"","comment_id":144235,"utype":1}],"discussion_count":1,"race_medal":0,"score":"14456783297","product_id":100033601,"comment_content":"不能攻击，xss csrf 是攻击的网页服务器的漏洞。跟浏览器本身没有关系。不过应该能使攻击者绕过前端的编码检验之类，如果后端没有对应的安全检验就惨了。","like_count":3,"discussions":[{"author":{"id":1141464,"avatar":"https://static001.geekbang.org/account/avatar/00/11/6a/d8/228449c9.jpg","nickname":"李兵","note":"","ucode":"3F3D3F6E20209E","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":471855,"discussion_content":"没问题","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1572013843,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":146261,"user_name":"李小白","can_delete":false,"product_type":"c1","uid":1322576,"ip_address":"","ucode":"7187646DDEACE6","user_header":"https://static001.geekbang.org/account/avatar/00/14/2e/50/240e7beb.jpg","comment_is_top":false,"comment_ctime":1572485148,"is_pvip":false,"replies":[{"id":"56710","content":"通过IPC传给渲染进程的是浏览器默许的，这个没有问题。<br><br>安全沙箱主要保护的是恶意程序通过网络攻破渲染进程，然后在渲染进程内，获取系统窗口的内容，比如qq登陆窗口这种。","user_name":"作者回复","user_name_real":"李兵","uid":"1141464","ctime":1572615343,"ip_address":"","comment_id":146261,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10162419740","product_id":100033601,"comment_content":"老师，我想请问一下，你说渲染进程内部是无法直接操作窗口句柄的，这也是为了限制渲染进程监控到用户的输入事件，这种情况我也可以通过JS来获取监控到用户的输入事件啊，通过渲染进程，渲染进程是可以通过IPC从浏览器内核监控到用户输入事件的啊，和我们正常用js就是可以获取用户的输入事件一样。希望老师帮忙解答一下","like_count":2,"discussions":[{"author":{"id":1141464,"avatar":"https://static001.geekbang.org/account/avatar/00/11/6a/d8/228449c9.jpg","nickname":"李兵","note":"","ucode":"3F3D3F6E20209E","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":472770,"discussion_content":"通过IPC传给渲染进程的是浏览器默许的，这个没有问题。\n\n安全沙箱主要保护的是恶意程序通过网络攻破渲染进程，然后在渲染进程内，获取系统窗口的内容，比如qq登陆窗口这种。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1572615343,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":144773,"user_name":"man","can_delete":false,"product_type":"c1","uid":1547168,"ip_address":"","ucode":"1B7D79A9FA4D01","user_header":"https://static001.geekbang.org/account/avatar/00/17/9b/a0/91f22e54.jpg","comment_is_top":false,"comment_ctime":1572054205,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"10161988797","product_id":100033601,"comment_content":"很精彩呀，像看了一部好莱坞大片的感觉。。。","like_count":2,"discussions":[{"author":{"id":2047761,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/3f/11/517f379b.jpg","nickname":"Mingy","note":"","ucode":"D6237D45A7F2C8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":326709,"discussion_content":"这就夸张了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1605665887,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1022568,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/9a/68/92caeed6.jpg","nickname":"Shine","note":"","ucode":"C8C617B87C63C7","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":40482,"discussion_content":"真的吗？我不是很有印象。那你之前遇到过类似的安全问题咯","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1572221916,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":144230,"user_name":"淡","can_delete":false,"product_type":"c1","uid":1456392,"ip_address":"","ucode":"6856CA319DE2F0","user_header":"https://static001.geekbang.org/account/avatar/00/16/39/08/09055b47.jpg","comment_is_top":false,"comment_ctime":1571881054,"is_pvip":false,"replies":[{"id":"55775","content":"感谢","user_name":"作者回复","user_name_real":"李兵","uid":"1141464","ctime":1572009976,"ip_address":"","comment_id":144230,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10161815646","product_id":100033601,"comment_content":"这就完了吗？意犹未尽，每一讲都讲的挺好。每个2，4，6早上到公司都会第一时间check有没有更新，期待后面的问答加餐环节，哈哈","like_count":2,"discussions":[{"author":{"id":1141464,"avatar":"https://static001.geekbang.org/account/avatar/00/11/6a/d8/228449c9.jpg","nickname":"李兵","note":"","ucode":"3F3D3F6E20209E","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":471853,"discussion_content":"感谢","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1572009976,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":225908,"user_name":"james","can_delete":false,"product_type":"c1","uid":1232771,"ip_address":"","ucode":"AC42035106E5B9","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/yyibGRYCArsUNBfCAEAibua09Yb9D5AdO8TkCmXymhAepibqmlz0hzg06ggBLxyvXicnjqFVGr7zYF0rQoZ0aXCBAg/132","comment_is_top":false,"comment_ctime":1591887087,"is_pvip":false,"discussion_count":0,"race_medal":1,"score":"5886854383","product_id":100033601,"comment_content":"安全沙箱不能防止XSS和CSRF攻击<br>因为XSS攻击是黑客在页面中注入不合法脚本，导致攻击用户浏览器的问题，是属于渲染进程里面的<br>CSRF攻击是黑客利用用户的登录状态，是属于利用网络资源获取用户信息，然后黑客通过第三方站点来攻击的目的，这个也是属于渲染进程中的<br><br>因此跟安全沙箱没有关系","like_count":1},{"had_liked":false,"id":163517,"user_name":"jyzhang","can_delete":false,"product_type":"c1","uid":1624016,"ip_address":"","ucode":"1311666BD87B86","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLOWucpCLACCYJic5IicKuo9RVSoFsEId2sazOqhnvSUSFztH8vu8skYkIwxgkXpOqmHjTprFWF1GmA/132","comment_is_top":false,"comment_ctime":1576736314,"is_pvip":false,"replies":[{"id":"62193","content":"因为不让渲染进程有读取系统文件的能力，这样即使黑客通过页面拿到渲染进程的控制权，他也没能力去读写系统的文件！","user_name":"作者回复","user_name_real":"李兵","uid":"1141464","ctime":1576752587,"ip_address":"","comment_id":163517,"utype":1}],"discussion_count":2,"race_medal":0,"score":"5871703610","product_id":100033601,"comment_content":"持久存储 。这里有点疑惑，沙箱里渲染进程将读写cookie和缓存文件的需求用IPC发给浏览器内核处理，内核再把结果用ipc返回，为什么这样就会比较安全？","like_count":1,"discussions":[{"author":{"id":1141464,"avatar":"https://static001.geekbang.org/account/avatar/00/11/6a/d8/228449c9.jpg","nickname":"李兵","note":"","ucode":"3F3D3F6E20209E","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":478427,"discussion_content":"因为不让渲染进程有读取系统文件的能力，这样即使黑客通过页面拿到渲染进程的控制权，他也没能力去读写系统的文件！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1576752587,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1059845,"avatar":"https://static001.geekbang.org/account/avatar/00/10/2c/05/b8e769fa.jpg","nickname":"Mickey","note":"","ucode":"548E950F57D2A8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":284423,"discussion_content":"cookie 跟缓存文件是会写入到具体磁盘中的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1592530346,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":144165,"user_name":"滇西之王","can_delete":false,"product_type":"c1","uid":1148142,"ip_address":"","ucode":"B1EBFFAE3AECEF","user_header":"https://static001.geekbang.org/account/avatar/00/11/84/ee/3a364ccd.jpg","comment_is_top":false,"comment_ctime":1571873809,"is_pvip":false,"replies":[{"id":"55785","content":"没问题","user_name":"作者回复","user_name_real":"李兵","uid":"1141464","ctime":1572013747,"ip_address":"","comment_id":144165,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5866841105","product_id":100033601,"comment_content":"不能防止，xss攻击和cspf不是针对操作系统的攻击，xss攻击就是执行javascript脚步，他的攻击是在渲染进程内，cspf是发送请求获取用户敏感信息，利用到网络进程","like_count":1,"discussions":[{"author":{"id":1141464,"avatar":"https://static001.geekbang.org/account/avatar/00/11/6a/d8/228449c9.jpg","nickname":"李兵","note":"","ucode":"3F3D3F6E20209E","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":471829,"discussion_content":"没问题","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1572013747,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":144131,"user_name":"亲爱的偏执狂","can_delete":false,"product_type":"c1","uid":1321996,"ip_address":"","ucode":"0B258AF283764B","user_header":"https://static001.geekbang.org/account/avatar/00/14/2c/0c/683fc6cd.jpg","comment_is_top":false,"comment_ctime":1571847123,"is_pvip":false,"replies":[{"id":"55786","content":"我可不觉得快，都是一天当两天使哈","user_name":"作者回复","user_name_real":"李兵","uid":"1141464","ctime":1572013789,"ip_address":"","comment_id":144131,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5866814419","product_id":100033601,"comment_content":"好快啊，感觉没多久就剩最后一讲就结束了。","like_count":1,"discussions":[{"author":{"id":1141464,"avatar":"https://static001.geekbang.org/account/avatar/00/11/6a/d8/228449c9.jpg","nickname":"李兵","note":"","ucode":"3F3D3F6E20209E","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":471821,"discussion_content":"我可不觉得快，都是一天当两天使哈","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1572013789,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":357553,"user_name":"罗武钢","can_delete":false,"product_type":"c1","uid":2843394,"ip_address":"广东","ucode":"E739A170C1D341","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLzSRrK59sydknSSYZdeTww3Cgib9Gy9N4BJGgSXMYdmVIxJYwDXPsLCIE68AbwTkgUct8J4iboAqicA/132","comment_is_top":false,"comment_ctime":1663385713,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1663385713","product_id":100033601,"comment_content":"很棒","like_count":0},{"had_liked":false,"id":307738,"user_name":"Geek_bing","can_delete":false,"product_type":"c1","uid":2064266,"ip_address":"","ucode":"4000A30EDAF71C","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/vkqibkINia6dxVOv5zia2zbkmQbrJUsQw8vDfiauib2DfyvJQ4PDUC7M8p4vqFiaQj70yYwIO8JlHFA450KPmgpsXlsw/132","comment_is_top":false,"comment_ctime":1629237936,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1629237936","product_id":100033601,"comment_content":"怎么说，意犹未尽啊！课程干货很多导致自己不知道的感觉也很多了～","like_count":0},{"had_liked":false,"id":298042,"user_name":"张宗伟","can_delete":false,"product_type":"c1","uid":1374181,"ip_address":"","ucode":"1447A20C7A8982","user_header":"https://static001.geekbang.org/account/avatar/00/14/f7/e5/ec543f3b.jpg","comment_is_top":false,"comment_ctime":1623895675,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1623895675","product_id":100033601,"comment_content":"Chrome uses a specific definition of &quot;site&quot; that includes just the scheme and registered domain. Thus, https:&#47;&#47;google.co.uk would be a site, and subdomains like https:&#47;&#47;maps.google.co.uk would stay in the same process.","like_count":0},{"had_liked":false,"id":298023,"user_name":"张宗伟","can_delete":false,"product_type":"c1","uid":1374181,"ip_address":"","ucode":"1447A20C7A8982","user_header":"https://static001.geekbang.org/account/avatar/00/14/f7/e5/ec543f3b.jpg","comment_is_top":false,"comment_ctime":1623893004,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1623893004","product_id":100033601,"comment_content":"老师对于这句话：所谓站点隔离是指 Chrome 将同一站点（包含了相同根域名和相同协议的地址）中相互关联的页面放到同一个渲染进程中执行。<br>其中 相同根域名 是不是表达的意思不对呀，那如果这样可认为 同一站点 的url可太多了。<br>","like_count":0},{"had_liked":false,"id":297236,"user_name":"张宗伟","can_delete":false,"product_type":"c1","uid":1374181,"ip_address":"","ucode":"1447A20C7A8982","user_header":"https://static001.geekbang.org/account/avatar/00/14/f7/e5/ec543f3b.jpg","comment_is_top":false,"comment_ctime":1623388435,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1623388435","product_id":100033601,"comment_content":"安全沙箱的主要作用是 防止通过浏览器直接操作系统的资源，进而造成系统级的安全威胁。<br>而 XSS、CSRF 主要是发生在渲染进程(页面)与服务器，这些操作都是符合 安全沙箱 的规则的，所以并不能防护。它们所关注的点不一样。","like_count":0},{"had_liked":false,"id":281531,"user_name":"William Ning","can_delete":false,"product_type":"c1","uid":1592279,"ip_address":"","ucode":"4DB8D05E69E5F3","user_header":"https://static001.geekbang.org/account/avatar/00/18/4b/d7/f46c6dfd.jpg","comment_is_top":false,"comment_ctime":1614776067,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1614776067","product_id":100033601,"comment_content":"Js执行实在渲染进程主线程中？","like_count":0},{"had_liked":false,"id":279113,"user_name":"　　　　　　　鸟人","can_delete":false,"product_type":"c1","uid":1035165,"ip_address":"","ucode":"E504B22F336035","user_header":"https://static001.geekbang.org/account/avatar/00/0f/cb/9d/2bc85843.jpg","comment_is_top":false,"comment_ctime":1613625699,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1613625699","product_id":100033601,"comment_content":"我看见好像chrome安全沙箱也有漏洞，那么请问要是沙箱有漏洞会出现什么呢，怎么办呢？","like_count":0,"discussions":[{"author":{"id":1394238,"avatar":"https://static001.geekbang.org/account/avatar/00/15/46/3e/f9ae9462.jpg","nickname":"盖世英雄","note":"","ucode":"50CD6CCD4D8B76","race_medal":1,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":376633,"discussion_content":"同上","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1622223574,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":254310,"user_name":"小炭","can_delete":false,"product_type":"c1","uid":1109544,"ip_address":"","ucode":"E20E3958CAF06C","user_header":"https://static001.geekbang.org/account/avatar/00/10/ee/28/c04a0c83.jpg","comment_is_top":false,"comment_ctime":1603099546,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1603099546","product_id":100033601,"comment_content":"除了可以使用iframe实现沙箱隔离，单页应用有实现沙箱技术的方案吗","like_count":0},{"had_liked":false,"id":251979,"user_name":"--","can_delete":false,"product_type":"c1","uid":2090750,"ip_address":"","ucode":"8FFA06CD98F50A","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/rvNsZL0TpjXUSv4Me1h2pfZzBiaj9HrkU3kYHXwOibPs3GksSvg3TptiaibkLhWFFwmmMicJZYGicVI9uDT6kqxb6a4w/132","comment_is_top":false,"comment_ctime":1602037727,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1602037727","product_id":100033601,"comment_content":"老师，我有一个疑问已经很久了。麻烦可以解答下<br><br>在一个页面打开另外一个一个页面<br>1、假如这两个页面是同源的，可以互通操作DOM、cookie数据<br>2、假如这两个页面是同站的，运行在同一个渲染进程中，那么可以互通操作dom和cookie数据吗？","like_count":0,"discussions":[{"author":{"id":1700211,"avatar":"https://static001.geekbang.org/account/avatar/00/19/f1/73/6f7e3b35.jpg","nickname":"独白","note":"","ucode":"EDC477BD20B032","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":342780,"discussion_content":"window.opener。上几节课是有实例讲到了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1610807948,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":242102,"user_name":"Geek_e7ff89","can_delete":false,"product_type":"c1","uid":2067482,"ip_address":"","ucode":"5DA5F3024BA55A","user_header":"","comment_is_top":false,"comment_ctime":1597589928,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1597589928","product_id":100033601,"comment_content":"那黑客会不会入侵浏览器主线程做一些非法的事情呢？？？","like_count":0},{"had_liked":false,"id":229886,"user_name":"Harvey","can_delete":false,"product_type":"c1","uid":1806296,"ip_address":"","ucode":"34B03C370302B2","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJkkCeRqSibC9qFI0govYb4tT7scTQDIoNwlV229T9BPqFhWUMCFv3OzOoecicmE88khiauJSkcC8WqA/132","comment_is_top":false,"comment_ctime":1593177674,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1593177674","product_id":100033601,"comment_content":"请问老师，黑客如何通过页面拿到渲染进程的控制权，有哪些方式啊","like_count":0},{"had_liked":false,"id":218771,"user_name":"EmilyLucky","can_delete":false,"product_type":"c1","uid":1972343,"ip_address":"","ucode":"DBA5FE296CF473","user_header":"https://static001.geekbang.org/account/avatar/00/1e/18/77/d665f258.jpg","comment_is_top":false,"comment_ctime":1589873336,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1589873336","product_id":100033601,"comment_content":"安全沙箱不能防止 XSS 或 CSRF 一类攻击的。因为现代浏览器多进程架构引入安全沙箱，是将操作系统和浏览器的渲染进程进行隔离，让渲染进程不能与操作系统进行直接交互。<br>而XSS或CSRF攻击是往页面注入恶意脚本，从而获取页面中一些重要数据到黑客服务器；CSRF攻击是利用目标站点漏洞和用户登陆状态发起攻击。XSS和CSRF攻击都是属于页面安全问题。","like_count":0},{"had_liked":false,"id":155103,"user_name":"Sean","can_delete":false,"product_type":"c1","uid":1272789,"ip_address":"","ucode":"BC0715BF423613","user_header":"https://static001.geekbang.org/account/avatar/00/13/6b/d5/0e4b70a2.jpg","comment_is_top":false,"comment_ctime":1574646315,"is_pvip":false,"discussion_count":4,"race_medal":0,"score":"1574646315","product_id":100033601,"comment_content":"老师，网络访问这一节有点疑问，【浏览器内核在网络请求之前会检查跨域请求】这一操作；但是根据正常的浏览器行为，跨域请求往往是得到响应之后被丢弃了。那么提前检测是否跨域这一操作是有什么特殊意义吗？","like_count":0,"discussions":[{"author":{"id":1202089,"avatar":"https://static001.geekbang.org/account/avatar/00/12/57/a9/9abbe7a4.jpg","nickname":"神三元","note":"","ucode":"0FB2E7C0683599","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":160501,"discussion_content":"老铁，我认为是这样，首先检查是否跨域，然后后端响应到达后，检查cors响应头，如果没有就拦截住，有则正常接收。","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1580811050,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":3,"child_discussions":[{"author":{"id":1480732,"avatar":"https://static001.geekbang.org/account/avatar/00/16/98/1c/d7a1439e.jpg","nickname":"KaKaKa","note":"","ucode":"07D1980A71F321","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1202089,"avatar":"https://static001.geekbang.org/account/avatar/00/12/57/a9/9abbe7a4.jpg","nickname":"神三元","note":"","ucode":"0FB2E7C0683599","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":243449,"discussion_content":"掘金上的神三元大佬是你吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1587541754,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":160501,"ip_address":""},"score":243449,"extra":""},{"author":{"id":1445936,"avatar":"https://static001.geekbang.org/account/avatar/00/16/10/30/c07d419c.jpg","nickname":"卡尔","note":"","ucode":"BD6F76BC18FF8F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1202089,"avatar":"https://static001.geekbang.org/account/avatar/00/12/57/a9/9abbe7a4.jpg","nickname":"神三元","note":"","ucode":"0FB2E7C0683599","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":280384,"discussion_content":"哇，三元大佬！！！也就是说跨域拦截是在返回后的客户端做的？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1591535699,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":160501,"ip_address":""},"score":280384,"extra":""},{"author":{"id":1910075,"avatar":"https://static001.geekbang.org/account/avatar/00/1d/25/3b/a971fc8e.jpg","nickname":"阿感","note":"","ucode":"7BCB7E44A832D1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1480732,"avatar":"https://static001.geekbang.org/account/avatar/00/16/98/1c/d7a1439e.jpg","nickname":"KaKaKa","note":"","ucode":"07D1980A71F321","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":280880,"discussion_content":"看起来是了嘿嘿","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1591624105,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":243449,"ip_address":""},"score":280880,"extra":""}]}]},{"had_liked":false,"id":146444,"user_name":"overmind","can_delete":false,"product_type":"c1","uid":1659287,"ip_address":"","ucode":"0C7C93B4C6F011","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/o7M9drMKflfW78mJrM9NXydZKwBj0S8AVjrnvBuuAsubkEnzHL2Cv4rvJyDHqxBPPKUDjGtneQHNP5pmAeFb3w/132","comment_is_top":false,"comment_ctime":1572525608,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1572525608","product_id":100033601,"comment_content":"能否给我们演示一个具体攻击的例子，比如利用旧的firefox。","like_count":0},{"had_liked":false,"id":145127,"user_name":"Shine","can_delete":false,"product_type":"c1","uid":1022568,"ip_address":"","ucode":"C8C617B87C63C7","user_header":"https://static001.geekbang.org/account/avatar/00/0f/9a/68/92caeed6.jpg","comment_is_top":false,"comment_ctime":1572221846,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1572221846","product_id":100033601,"comment_content":"很难想象具体是怎样的，听完后印象不是很深刻。","like_count":0},{"had_liked":false,"id":144615,"user_name":"余文郁","can_delete":false,"product_type":"c1","uid":1388319,"ip_address":"","ucode":"A51117A929EBD8","user_header":"https://static001.geekbang.org/account/avatar/00/15/2f/1f/f95bd8c9.jpg","comment_is_top":false,"comment_ctime":1571980413,"is_pvip":false,"replies":[{"id":"55771","content":"还有一篇https","user_name":"作者回复","user_name_real":"李兵","uid":"1141464","ctime":1572006018,"ip_address":"","comment_id":144615,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1571980413","product_id":100033601,"comment_content":"这是最后一篇文章了吗","like_count":0,"discussions":[{"author":{"id":1141464,"avatar":"https://static001.geekbang.org/account/avatar/00/11/6a/d8/228449c9.jpg","nickname":"李兵","note":"","ucode":"3F3D3F6E20209E","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":472034,"discussion_content":"还有一篇https","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1572006018,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":144330,"user_name":"许童童","can_delete":false,"product_type":"c1","uid":1003005,"ip_address":"","ucode":"4B799C0C6BC678","user_header":"https://static001.geekbang.org/account/avatar/00/0f/4d/fd/0aa0e39f.jpg","comment_is_top":false,"comment_ctime":1571898635,"is_pvip":false,"replies":[{"id":"55781","content":"还有一篇正文就结束了，感谢一路陪伴。<br><br>另外加餐内容我在整理中。","user_name":"作者回复","user_name_real":"李兵","uid":"1141464","ctime":1572012827,"ip_address":"","comment_id":144330,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1571898635","product_id":100033601,"comment_content":"真的是快啊，一转眼，专栏就快要结束了，希望加餐能再多来几篇文章。意犹未尽","like_count":0,"discussions":[{"author":{"id":1141464,"avatar":"https://static001.geekbang.org/account/avatar/00/11/6a/d8/228449c9.jpg","nickname":"李兵","note":"","ucode":"3F3D3F6E20209E","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":471891,"discussion_content":"还有一篇正文就结束了，感谢一路陪伴。\n\n另外加餐内容我在整理中。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1572012827,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":144199,"user_name":"罗 乾 林","can_delete":false,"product_type":"c1","uid":1188222,"ip_address":"","ucode":"D0406F95176ABA","user_header":"https://static001.geekbang.org/account/avatar/00/12/21/7e/fb725950.jpg","comment_is_top":false,"comment_ctime":1571878169,"is_pvip":false,"replies":[{"id":"55782","content":"没问题","user_name":"作者回复","user_name_real":"李兵","uid":"1141464","ctime":1572013627,"ip_address":"","comment_id":144199,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1571878169","product_id":100033601,"comment_content":"不能，XSS&#47;CSRF主要利用浏览器开的口子窃取站点信息，如Cookies等信息。安全沙箱是防止恶意代码利用浏览器程序漏洞，窃取修改操作系统信息","like_count":0,"discussions":[{"author":{"id":1141464,"avatar":"https://static001.geekbang.org/account/avatar/00/11/6a/d8/228449c9.jpg","nickname":"李兵","note":"","ucode":"3F3D3F6E20209E","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":471847,"discussion_content":"没问题","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1572013627,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]}]}