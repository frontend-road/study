{"id":95209,"title":"21 | 内存管理（下）：为客户保密，项目组独享会议室封闭开发","content":"<p>上一节，我们讲了虚拟空间的布局。接下来，我们需要知道，如何将其映射成为物理地址呢？</p><p>你可能已经想到了，咱们前面讲x86 CPU的时候，讲过分段机制，咱们规划虚拟空间的时候，也是将空间分成多个段进行保存。</p><p>那就直接用分段机制呗。我们来看看分段机制的原理。</p><p><img src=\"https://static001.geekbang.org/resource/image/96/eb/9697ae17b9f561e78514890f9d58d4eb.jpg?wh=3193*1949\" alt=\"\"></p><p>分段机制下的虚拟地址由两部分组成，<strong>段选择子</strong>和<strong>段内偏移量</strong>。段选择子就保存在咱们前面讲过的段寄存器里面。段选择子里面最重要的是<strong>段号</strong>，用作段表的索引。段表里面保存的是这个段的<strong>基地址</strong>、<strong>段的界限</strong>和<strong>特权等级</strong>等。虚拟地址中的段内偏移量应该位于0和段界限之间。如果段内偏移量是合法的，就将段基地址加上段内偏移量得到物理内存地址。</p><p>例如，我们将上面的虚拟空间分成以下4个段，用0～3来编号。每个段在段表中有一个项，在物理空间中，段的排列如下图的右边所示。</p><p><img src=\"https://static001.geekbang.org/resource/image/7c/04/7c82068d2d6bdb601084a07569ac8b04.jpg?wh=2323*1553\" alt=\"\"></p><p>如果要访问段2中偏移量600的虚拟地址，我们可以计算出物理地址为，段2基地址2000 + 偏移量600 = 2600。</p><p>多好的机制啊！我们来看看Linux是如何使用这个机制的。</p><p>在Linux里面，段表全称<strong>段描述符表</strong>（segment descriptors），放在<strong>全局描述符表GDT</strong>（Global Descriptor Table）里面，会有下面的宏来初始化段描述符表里面的表项。</p><!-- [[[read_end]]] --><pre><code>#define GDT_ENTRY_INIT(flags, base, limit) { { { \\\n\t\t.a = ((limit) &amp; 0xffff) | (((base) &amp; 0xffff) &lt;&lt; 16), \\\n\t\t.b = (((base) &amp; 0xff0000) &gt;&gt; 16) | (((flags) &amp; 0xf0ff) &lt;&lt; 8) | \\\n\t\t\t((limit) &amp; 0xf0000) | ((base) &amp; 0xff000000), \\\n\t} } }\n</code></pre><p>一个段表项由段基地址base、段界限limit，还有一些标识符组成。</p><pre><code>DEFINE_PER_CPU_PAGE_ALIGNED(struct gdt_page, gdt_page) = { .gdt = {\n#ifdef CONFIG_X86_64\n\t[GDT_ENTRY_KERNEL32_CS]\t\t= GDT_ENTRY_INIT(0xc09b, 0, 0xfffff),\n\t[GDT_ENTRY_KERNEL_CS]\t\t= GDT_ENTRY_INIT(0xa09b, 0, 0xfffff),\n\t[GDT_ENTRY_KERNEL_DS]\t\t= GDT_ENTRY_INIT(0xc093, 0, 0xfffff),\n\t[GDT_ENTRY_DEFAULT_USER32_CS]\t= GDT_ENTRY_INIT(0xc0fb, 0, 0xfffff),\n\t[GDT_ENTRY_DEFAULT_USER_DS]\t= GDT_ENTRY_INIT(0xc0f3, 0, 0xfffff),\n\t[GDT_ENTRY_DEFAULT_USER_CS]\t= GDT_ENTRY_INIT(0xa0fb, 0, 0xfffff),\n#else\n\t[GDT_ENTRY_KERNEL_CS]\t\t= GDT_ENTRY_INIT(0xc09a, 0, 0xfffff),\n\t[GDT_ENTRY_KERNEL_DS]\t\t= GDT_ENTRY_INIT(0xc092, 0, 0xfffff),\n\t[GDT_ENTRY_DEFAULT_USER_CS]\t= GDT_ENTRY_INIT(0xc0fa, 0, 0xfffff),\n\t[GDT_ENTRY_DEFAULT_USER_DS]\t= GDT_ENTRY_INIT(0xc0f2, 0, 0xfffff),\n......\n#endif\n} };\nEXPORT_PER_CPU_SYMBOL_GPL(gdt_page);\n</code></pre><p>这里面对于64位的和32位的，都定义了内核代码段、内核数据段、用户代码段和用户数据段。</p><p>另外，还会定义下面四个段选择子，指向上面的段描述符表项。这四个段选择子看着是不是有点眼熟？咱们讲内核初始化的时候，启动第一个用户态的进程，就是将这四个值赋值给段寄存器。</p><pre><code>#define __KERNEL_CS\t\t\t(GDT_ENTRY_KERNEL_CS*8)\n#define __KERNEL_DS\t\t\t(GDT_ENTRY_KERNEL_DS*8)\n#define __USER_DS\t\t\t(GDT_ENTRY_DEFAULT_USER_DS*8 + 3)\n#define __USER_CS\t\t\t(GDT_ENTRY_DEFAULT_USER_CS*8 + 3)\n</code></pre><p>通过分析，我们发现，所有的段的起始地址都是一样的，都是0。这算哪门子分段嘛！所以，在Linux操作系统中，并没有使用到全部的分段功能。那分段是不是完全没有用处呢？分段可以做权限审核，例如用户态DPL是3，内核态DPL是0。当用户态试图访问内核态的时候，会因为权限不足而报错。</p><p>其实Linux倾向于另外一种从虚拟地址到物理地址的转换方式，称为<strong>分页</strong>（Paging）。</p><p>对于物理内存，操作系统把它分成一块一块大小相同的页，这样更方便管理，例如有的内存页面长时间不用了，可以暂时写到硬盘上，称为<strong>换出</strong>。一旦需要的时候，再加载进来，叫做<strong>换入</strong>。这样可以扩大可用物理内存的大小，提高物理内存的利用率。</p><p>这个换入和换出都是以页为单位的。页面的大小一般为4KB。为了能够定位和访问每个页，需要有个页表，保存每个页的起始地址，再加上在页内的偏移量，组成线性地址，就能对于内存中的每个位置进行访问了。</p><p><img src=\"https://static001.geekbang.org/resource/image/ab/40/abbcafe962d93fac976aa26b7fcb7440.jpg?wh=2173*1452\" alt=\"\"></p><p>虚拟地址分为两部分，<strong>页号</strong>和<strong>页内偏移</strong>。页号作为页表的索引，页表包含物理页每页所在物理内存的基地址。这个基地址与页内偏移的组合就形成了物理内存地址。</p><p>下面的图，举了一个简单的页表的例子，虚拟内存中的页通过页表映射为了物理内存中的页。</p><p><img src=\"https://static001.geekbang.org/resource/image/84/eb/8495dfcbaed235f7500c7e11149b2feb.jpg?wh=2077*1347\" alt=\"\"></p><p>32位环境下，虚拟地址空间共4GB。如果分成4KB一个页，那就是1M个页。每个页表项需要4个字节来存储，那么整个4GB空间的映射就需要4MB的内存来存储映射表。如果每个进程都有自己的映射表，100个进程就需要400MB的内存。对于内核来讲，有点大了 。</p><p>页表中所有页表项必须提前建好，并且要求是连续的。如果不连续，就没有办法通过虚拟地址里面的页号找到对应的页表项了。</p><p>那怎么办呢？我们可以试着将页表再分页，4G的空间需要4M的页表来存储映射。我们把这4M分成1K（1024）个4K，每个4K又能放在一页里面，这样1K个4K就是1K个页，这1K个页也需要一个表进行管理，我们称为页目录表，这个页目录表里面有1K项，每项4个字节，页目录表大小也是4K。</p><p>页目录有1K项，用10位就可以表示访问页目录的哪一项。这一项其实对应的是一整页的页表项，也即4K的页表项。每个页表项也是4个字节，因而一整页的页表项是1K个。再用10位就可以表示访问页表项的哪一项，页表项中的一项对应的就是一个页，是存放数据的页，这个页的大小是4K，用12位可以定位这个页内的任何一个位置。</p><p>这样加起来正好32位，也就是用前10位定位到页目录表中的一项。将这一项对应的页表取出来共1k项，再用中间10位定位到页表中的一项，将这一项对应的存放数据的页取出来，再用最后12位定位到页中的具体位置访问数据。</p><p><img src=\"https://static001.geekbang.org/resource/image/b6/b8/b6960eb0a7eea008d33f8e0c4facc8b8.jpg?wh=2594*2514\" alt=\"\"></p><p>你可能会问，如果这样的话，映射4GB地址空间就需要4MB+4KB的内存，这样不是更大了吗？ 当然如果页是满的，当时是更大了，但是，我们往往不会为一个进程分配那么多内存。</p><p>比如说，上面图中，我们假设只给这个进程分配了一个数据页。如果只使用页表，也需要完整的1M个页表项共4M的内存，但是如果使用了页目录，页目录需要1K个全部分配，占用内存4K，但是里面只有一项使用了。到了页表项，只需要分配能够管理那个数据页的页表项页就可以了，也就是说，最多4K，这样内存就节省多了。</p><p>当然对于64位的系统，两级肯定不够了，就变成了四级目录，分别是全局页目录项PGD（Page Global Directory）、上层页目录项PUD（Page Upper Directory）、中间页目录项PMD（Page Middle Directory）和页表项PTE（Page Table Entry）。</p><p><img src=\"https://static001.geekbang.org/resource/image/42/0b/42eff3e7574ac8ce2501210e25cd2c0b.jpg?wh=2593*1492\" alt=\"\"></p><h2>总结时刻</h2><p>这一节我们讲了分段机制、分页机制以及从虚拟地址到物理地址的映射方式。总结一下这两节，我们可以把内存管理系统精细化为下面三件事情：</p><ul>\n<li>\n<p>第一，虚拟内存空间的管理，将虚拟内存分成大小相等的页；</p>\n</li>\n<li>\n<p>第二，物理内存的管理，将物理内存分成大小相等的页；</p>\n</li>\n<li>\n<p>第三，内存映射，将虚拟内存页和物理内存页映射起来，并且在内存紧张的时候可以换出到硬盘中。</p>\n</li>\n</ul><p><img src=\"https://static001.geekbang.org/resource/image/7d/91/7dd9039e4ad2f6433aa09c14ede92991.jpg?wh=2523*1629\" alt=\"\"></p><h2>课堂练习</h2><p>这一节我们说一个页的大小为4K，有时候我们需要为应用配置大页（HugePage）。请你查一下大页的大小及配置方法，咱们后面会用到。</p><p>欢迎留言和我分享你的疑惑和见解，也欢迎你收藏本节内容，反复研读。你也可以把今天的内容分享给你的朋友，和他一起学习、进步。</p><p><img src=\"https://static001.geekbang.org/resource/image/8c/37/8c0a95fa07a8b9a1abfd394479bdd637.jpg?wh=1110*659\" alt=\"\"></p>","comments":[{"had_liked":false,"id":94637,"user_name":"Leon📷","can_delete":false,"product_type":"c1","uid":1219496,"ip_address":"","ucode":"B9BBD1EFAAE5A2","user_header":"https://static001.geekbang.org/account/avatar/00/12/9b/a8/6a391c66.jpg","comment_is_top":false,"comment_ctime":1557877449,"is_pvip":false,"replies":[{"id":"49354","content":"是的","user_name":"作者回复","comment_id":94637,"uid":"1001590","ip_address":"","utype":1,"ctime":1567650833,"user_name_real":"刘超@网易云"}],"discussion_count":1,"race_medal":0,"score":"280730751689","product_id":100024701,"comment_content":"分页机制本质上来说就是类似于linux文件系统的目录管理一样，页目录项和页表项相当于根目录和上级目录，页内便宜量就是相对路径，绝对路径就是整个32位地址，分布式存储系统也是采用的类似的机制，先用元数据存储前面的路径，再用块内偏移定位到具体文件，感觉道理都差不多","like_count":66,"discussions":[{"author":{"id":1001590,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/48/76/0c7d4d23.jpg","nickname":"刘超","note":"","ucode":"196BF3F499E8FE","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":450151,"discussion_content":"是的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567650833,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":95251,"user_name":"why","can_delete":false,"product_type":"c1","uid":1012937,"ip_address":"","ucode":"C9E796E53F6F5E","user_header":"https://static001.geekbang.org/account/avatar/00/0f/74/c9/d3439ca4.jpg","comment_is_top":false,"comment_ctime":1557997254,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"143291918022","product_id":100024701,"comment_content":"- 内存管理(下)<br>- 虚拟内存地址到物理内存地址的映射<br>- 分段<br>    - 虚拟地址 = 段选择子(段寄存器) + 段内偏移量<br>    - 段选择子 = 段号(段表索引) + 标识位<br>    - 段表 = 物理基地址 + 段界限(偏移量范围) + 特权等级<br>- Linux 分段实现<br>    - 段表称为段描述符表, 放在全局标识符表中<br>    - Linux 将段基地址都初始化为 0, 不用于地址映射<br>    - Linux 分段功能主要用于权限检查<br>- Linux 通过分页实现映射<br>    - 物理内存被换分为大小固定(4KB)的页, 物理页可在内存与硬盘间换出&#47;换入<br>    - 页表 = 虚拟页号 + 物理页号; 用于定位页<br>    - 虚拟地址 = 虚拟页号 + 页内偏移<br>    - 若采用单页表, 32位系统中一个页表将有 1M 页表项, 占用 4MB(每项 4B)<br>    - Linux 32位系统采用两级页表: 页表目录(1K项, 10bit) + 页表(1K项, 10bit)(页大小(4KB, 12bit))<br>    - 映射 4GB 内存理论需要 1K 个页表目录项 + 1K\\*1K=1M 页表项, 将占用 4KB+4MB 空间<br>    - 因为完整的页表目录可以满足所有地址的查询, 因此页表只需在对应地址有内存分配时才生成;<br>    - 64 为系统采用 4 级页表","like_count":34,"discussions":[{"author":{"id":1099324,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c6/3c/8ab9deb0.jpg","nickname":"@许还真","note":"","ucode":"6D754D5AE44CEC","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":355332,"discussion_content":"收藏了 ，你太会总结了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1615423388,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":244657,"user_name":"清河","can_delete":false,"product_type":"c1","uid":2046179,"ip_address":"","ucode":"AB44CB37FCB026","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/ajNVdqHZLLAsbPRKgaVw8kKp5pKGUE4JdDZaW16RoRTItTI3wJ3pPGNoFIjYQm8FKa3xLlNwRicziclmWKsmp7kA/132","comment_is_top":false,"comment_ctime":1598605471,"is_pvip":false,"discussion_count":6,"race_medal":0,"score":"126152657055","product_id":100024701,"comment_content":"https:&#47;&#47;jishuin.proginn.com&#47;p&#47;763bfbd248c0<br>这篇文章看起来更容易理解","like_count":30,"discussions":[{"author":{"id":1180460,"avatar":"https://static001.geekbang.org/account/avatar/00/12/03/2c/33ba4d12.jpg","nickname":"山中无老虎 😪","note":"","ucode":"594247C3A976DE","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":381765,"discussion_content":"这个我看了，对于段的历史讲解个人觉得还不够细，直到看到这篇文章https://www.techbulo.com/848.html  ","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1625205341,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1119312,"avatar":"https://static001.geekbang.org/account/avatar/00/11/14/50/c23cf47d.jpg","nickname":"李","note":"","ucode":"5C0FAA211F2E26","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":304872,"discussion_content":"老师讲有的讲的太晦涩了，根本不是趣谈，简直是劝退","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1599703824,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2226367,"avatar":"https://static001.geekbang.org/account/avatar/00/21/f8/bf/59f2e600.jpg","nickname":"月明风清","note":"","ucode":"65A97CF2E320FA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":572582,"discussion_content":"说实话，我觉得这个链接的文件就是看了刘超老师的专栏，然后才写的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1652863160,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1113854,"avatar":"https://static001.geekbang.org/account/avatar/00/10/fe/fe/12638c5b.jpg","nickname":"邢世宝","note":"","ucode":"7A58863FC89052","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":560716,"discussion_content":"这篇文章讲的确实挺清楚，如果老师写的看完后有疑问，可以参考这篇再理解下","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1649428127,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1006764,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/5c/ac/8a0392fd.jpg","nickname":"晚辈曾阿牛","note":"","ucode":"012B16AE8A64FB","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":350021,"discussion_content":"十分的感谢","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1613661311,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2179486,"avatar":"https://static001.geekbang.org/account/avatar/00/21/41/9e/22f27869.jpg","nickname":"喻伟军","note":"","ucode":"AF6EABBAB70FE8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":309034,"discussion_content":"这个写得更清楚，更明白，太牛B了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1601177456,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":115538,"user_name":"栋能","can_delete":false,"product_type":"c1","uid":1006849,"ip_address":"","ucode":"8BD9C939D3E8E1","user_header":"https://static001.geekbang.org/account/avatar/00/0f/5d/01/9cd84003.jpg","comment_is_top":false,"comment_ctime":1563614213,"is_pvip":false,"replies":[{"id":"46559","content":"由于x86_64处理器硬件限制。x86_64处理器地址线只有48条，故而导致硬件要求传入的地址48位到63位地址必须相同。 4K页面下， 48位线性地址分为5段，位宽度分别是9、9、9、12。映射的方法为页表查找。","user_name":"作者回复","comment_id":115538,"uid":"1001590","ip_address":"","utype":1,"ctime":1566357676,"user_name_real":"刘超@网易云"}],"discussion_count":2,"race_medal":0,"score":"65988123653","product_id":100024701,"comment_content":"64位Linux机器，4KB页大小，那虚拟地址组成应该是：22位PGD、10位PUD、10位PMD、10位PTE、12位页偏移地址","like_count":15,"discussions":[{"author":{"id":1001590,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/48/76/0c7d4d23.jpg","nickname":"刘超","note":"","ucode":"196BF3F499E8FE","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":459150,"discussion_content":"由于x86_64处理器硬件限制。x86_64处理器地址线只有48条，故而导致硬件要求传入的地址48位到63位地址必须相同。 4K页面下， 48位线性地址分为5段，位宽度分别是9、9、9、12。映射的方法为页表查找。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566357676,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1043475,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/ec/13/49e98289.jpg","nickname":"neohope","note":"","ucode":"C0268F6E7E2B6E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":78996,"discussion_content":"9、9、9、9、12，老师少打了一个9，：）","likes_number":5,"is_delete":false,"is_hidden":false,"ctime":1576043788,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":100551,"user_name":"kkxue","can_delete":false,"product_type":"c1","uid":1159904,"ip_address":"","ucode":"0DCB861D5543D6","user_header":"https://static001.geekbang.org/account/avatar/00/11/b2/e0/bf56878a.jpg","comment_is_top":false,"comment_ctime":1559575922,"is_pvip":true,"discussion_count":0,"race_medal":5,"score":"57394150770","product_id":100024701,"comment_content":"[root@openstack-rocky ~]# getconf PAGE_SIZE<br>4096<br>[root@openstack-rocky ~]# cat &#47;sys&#47;kernel&#47;mm&#47;hugepages&#47;hugepages-2048kB&#47;nr_hugepages<br>0<br>[root@openstack-rocky ~]# grep Huge &#47;proc&#47;meminfo<br>AnonHugePages:    612352 kB<br>HugePages_Total:       0<br>HugePages_Free:        0<br>HugePages_Rsvd:        0<br>HugePages_Surp:        0<br>Hugepagesize:       2048 kB<br>[root@openstack-rocky ~]# free -g<br>              total        used        free      shared  buff&#47;cache   available<br>Mem:              5           4           0           0           0           0<br>Swap:             5           0           5<br>[root@openstack-rocky ~]# echo 1024 &gt; &#47;sys&#47;kernel&#47;mm&#47;hugepages&#47;hugepages-2048kB&#47;nr_hugepages<br>[root@openstack-rocky ~]# free -g<br>              total        used        free      shared  buff&#47;cache   available<br>Mem:              5           5           0           0           0           0<br>Swap:             5           0           5<br>[root@openstack-rocky ~]# grep Huge &#47;proc&#47;meminfo<br>AnonHugePages:    618496 kB<br>HugePages_Total:     242<br>HugePages_Free:      242<br>HugePages_Rsvd:        0<br>HugePages_Surp:        0<br>Hugepagesize:       2048 kB","like_count":13},{"had_liked":false,"id":94855,"user_name":"崔伟协","can_delete":false,"product_type":"c1","uid":1022452,"ip_address":"","ucode":"ACDEEDF2A10999","user_header":"https://static001.geekbang.org/account/avatar/00/0f/99/f4/e0484cac.jpg","comment_is_top":false,"comment_ctime":1557910472,"is_pvip":true,"replies":[{"id":"34102","content":"都是硬件的机制，操作系统作为软件要用硬件机制。文章里面写了优劣势了。分段容易碎片，不容易换出。","user_name":"作者回复","comment_id":94855,"uid":"1001590","ip_address":"","utype":1,"ctime":1558068116,"user_name_real":"刘超@网易云"}],"discussion_count":3,"race_medal":0,"score":"53097518024","product_id":100024701,"comment_content":"分页，分段机制的优劣在于哪儿呢，为什么有分页分段","like_count":13,"discussions":[{"author":{"id":1001590,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/48/76/0c7d4d23.jpg","nickname":"刘超","note":"","ucode":"196BF3F499E8FE","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":450235,"discussion_content":"都是硬件的机制，操作系统作为软件要用硬件机制。文章里面写了优劣势了。分段容易碎片，不容易换出。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1558068116,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1122150,"avatar":"https://static001.geekbang.org/account/avatar/00/11/1f/66/59e0647a.jpg","nickname":"万历十五年","note":"","ucode":"3D8CF5DF847AE8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":260645,"discussion_content":"关于分段和分页这部分推荐看陈莉君老师的linux内核讲解，非常清晰。分段是x86历史原因，分页为了更高效的使用更大物理内存。分段机制用于段地址到线性地址的转换，分页机制用于线性地址到物理地址的转换。这其中，linux用了个巧妙的方法解决了intel x86对段机制的强制使用，即linux使段地址全是0，此时把32位线性地址或48位线性地址经多级分页就映射到了物理地址。","likes_number":8,"is_delete":false,"is_hidden":false,"ctime":1588871487,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1103456,"avatar":"https://static001.geekbang.org/account/avatar/00/10/d6/60/f21b2164.jpg","nickname":"jacy","note":"","ucode":"0022A8759DDCE6","race_medal":1,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":4197,"discussion_content":"文件系统是不是也是4k为一个node","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1565224204,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":94787,"user_name":"Helios","can_delete":false,"product_type":"c1","uid":1380758,"ip_address":"","ucode":"BE6B98EE8F0D09","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKJrOl63enWXCRxN0SoucliclBme0qrRb19ATrWIOIvibKIz8UAuVgicBMibIVUznerHnjotI4dm6ibODA/132","comment_is_top":false,"comment_ctime":1557897925,"is_pvip":false,"replies":[{"id":"33885","content":"规定，可以去查一下表项的结构，太细节了，所以这里没有提","user_name":"作者回复","comment_id":94787,"uid":"1001590","ip_address":"","utype":1,"ctime":1557899569,"user_name_real":"刘超@网易云"}],"discussion_count":3,"race_medal":0,"score":"40212603589","product_id":100024701,"comment_content":"请问老师为什么一个表项用4个字节去存储呢","like_count":10,"discussions":[{"author":{"id":1001590,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/48/76/0c7d4d23.jpg","nickname":"刘超","note":"","ucode":"196BF3F499E8FE","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":450205,"discussion_content":"规定，可以去查一下表项的结构，太细节了，所以这里没有提","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1557899569,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1440772,"avatar":"https://static001.geekbang.org/account/avatar/00/15/fc/04/d83a555e.jpg","nickname":"Kevin⚡️Zhou","note":"","ucode":"C0FC2673705212","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":26235,"discussion_content":"因为32位系统, 一个唯一的物理地址需要32个二进制位来识别, 4字节正好是32位, 表示内存中一个唯一的4kb空间的起始地址\n","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1570589705,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1341504,"avatar":"https://static001.geekbang.org/account/avatar/00/14/78/40/7ca70d5d.jpg","nickname":"勿忘初心🍃","note":"","ucode":"02A5D0C357ADE0","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":347845,"discussion_content":"32位操作系统，高20位表示物理页号，低12位是各种FLAGS","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1612339126,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":174409,"user_name":"淤白","can_delete":false,"product_type":"c1","uid":1206503,"ip_address":"","ucode":"D1E65DC40DAF68","user_header":"https://static001.geekbang.org/account/avatar/00/12/68/e7/ee47d0e2.jpg","comment_is_top":false,"comment_ctime":1580195920,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"35939934288","product_id":100024701,"comment_content":"通过本篇内容，学习到在内存空间不足的情况下，使用索引可以有效的减少内存消耗，如果一层索引消耗还是无法接受，可以生成多级索引，除了第一层是提前创建，其余索引通过懒加载的方式创建出来。<br><br>虚拟内存和物理内存中的管理，就是将内存空间划分成一个个大小相等的页，并对其做多级索引。在将虚拟内存和物理内存映射起来时，如果内存吃紧，可以将部分内存页面换出到磁盘上。","like_count":8},{"had_liked":false,"id":190359,"user_name":"蚂蚁内推+v","can_delete":false,"product_type":"c1","uid":1050508,"ip_address":"","ucode":"24B10AEE54B3FD","user_header":"https://static001.geekbang.org/account/avatar/00/10/07/8c/0d886dcc.jpg","comment_is_top":false,"comment_ctime":1584632177,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"18764501361","product_id":100024701,"comment_content":"老师您好，对于linux的虚拟内存和实际内存，我有个问题想咨询，一般我们用top命令查看当前服务器进程状态的时候，进程内存相关的数据有virt和res。<br>1、请问这virt是实际使用的虚拟内存吗？<br>2、virt=res+swap吗？<br>3、没什么一般virt比res大，但是swap的使用量为0，virt多的那部分内存是哪里？","like_count":4,"discussions":[{"author":{"id":1318941,"avatar":"https://static001.geekbang.org/account/avatar/00/14/20/1d/0c1a184c.jpg","nickname":"罗辑思维","note":"","ucode":"D257A06EDE928E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":323140,"discussion_content":"1、请问这virt是实际使用的虚拟内存吗？#是#\n2、virt=res+swap吗？#不是#\n3、没什么一般virt比res大，但是swap的使用量为0，virt多的那部分内存是哪里？#虚拟内存是用到才加载到内存，数据可以还在硬盘上面#","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1604889031,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1002005,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/4a/15/106eaaa8.jpg","nickname":"stackWarn","note":"","ucode":"89672E452DEBA5","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":288749,"discussion_content":"lazy allocate","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1593860128,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":170739,"user_name":"garlic","can_delete":false,"product_type":"c1","uid":1019579,"ip_address":"","ucode":"FEB147EDB5774E","user_header":"https://static001.geekbang.org/account/avatar/00/0f/8e/bb/c039dc11.jpg","comment_is_top":false,"comment_ctime":1578700324,"is_pvip":true,"replies":[{"id":"66269","content":"是的，Hugepage在优化内存的时候，经常使用，例如虚拟机或者DPDK使用Hugepage","user_name":"作者回复","comment_id":170739,"uid":"1001590","ip_address":"","utype":1,"ctime":1578823318,"user_name_real":"刘超@网易云"}],"discussion_count":1,"race_medal":1,"score":"18758569508","product_id":100024701,"comment_content":"处理器体系结构支持多重页面大小，操作系统可以根据需要进行相关设置，Linux可以通过hugepage，结合处理器支持页面大小设置多种页面大小，相关笔记： https:&#47;&#47;garlicspace.com&#47;2020&#47;01&#47;10&#47;%e5%86%85%e5%ad%98%e7%ae%a1%e7%90%86-%e9%a1%b5%e9%9d%a2%e5%a4%a7%e5%b0%8f&#47;","like_count":4,"discussions":[{"author":{"id":1001590,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/48/76/0c7d4d23.jpg","nickname":"刘超","note":"","ucode":"196BF3F499E8FE","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":481091,"discussion_content":"是的，Hugepage在优化内存的时候，经常使用，例如虚拟机或者DPDK使用Hugepage","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578823318,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":150799,"user_name":"lcf枫","can_delete":false,"product_type":"c1","uid":1144171,"ip_address":"","ucode":"D51E8F68BD41CA","user_header":"https://static001.geekbang.org/account/avatar/00/11/75/6b/fd685164.jpg","comment_is_top":false,"comment_ctime":1573611143,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"18753480327","product_id":100024701,"comment_content":"老师，这里的段和页是个什么关系，怎么关联起来？","like_count":4},{"had_liked":false,"id":282797,"user_name":"@许还真","can_delete":false,"product_type":"c1","uid":1099324,"ip_address":"","ucode":"6D754D5AE44CEC","user_header":"https://static001.geekbang.org/account/avatar/00/10/c6/3c/8ab9deb0.jpg","comment_is_top":false,"comment_ctime":1615423365,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"14500325253","product_id":100024701,"comment_content":"表设计，听起来有点像跳表。","like_count":3},{"had_liked":false,"id":188693,"user_name":"疯情","can_delete":false,"product_type":"c1","uid":1647345,"ip_address":"","ucode":"785237367A9B33","user_header":"https://static001.geekbang.org/account/avatar/00/19/22/f1/11d1f383.jpg","comment_is_top":false,"comment_ctime":1584405517,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"14469307405","product_id":100024701,"comment_content":"这样 1K 个 4K 就是 1K 个页感觉和绕口令似的呢，关键是还没看懂 😂","like_count":3,"discussions":[{"author":{"id":1117673,"avatar":"https://static001.geekbang.org/account/avatar/00/11/0d/e9/2f02a383.jpg","nickname":"冬瓜蔡","note":"","ucode":"2F04A446D28201","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":328749,"discussion_content":"觉得还是直接说1024个4K更顺","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1606222444,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":108009,"user_name":"饭粒","can_delete":false,"product_type":"c1","uid":1153455,"ip_address":"","ucode":"4C3220B0D43997","user_header":"https://static001.geekbang.org/account/avatar/00/11/99/af/d29273e2.jpg","comment_is_top":false,"comment_ctime":1561647097,"is_pvip":false,"replies":[{"id":"48841","content":"第一级4M，第二级4K","user_name":"作者回复","comment_id":108009,"uid":"1001590","ip_address":"","utype":1,"ctime":1567500767,"user_name_real":"刘超@网易云"}],"discussion_count":5,"race_medal":0,"score":"10151581689","product_id":100024701,"comment_content":"32位系统的两级页表那“ 映射 4GB 地址空间就需要 4MB+4KB 的内存”，怎么算的 4MB+4KB ？不太明白。","like_count":2,"discussions":[{"author":{"id":1001590,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/48/76/0c7d4d23.jpg","nickname":"刘超","note":"","ucode":"196BF3F499E8FE","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":455786,"discussion_content":"第一级4M，第二级4K","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567500767,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1117673,"avatar":"https://static001.geekbang.org/account/avatar/00/11/0d/e9/2f02a383.jpg","nickname":"冬瓜蔡","note":"","ucode":"2F04A446D28201","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":328750,"discussion_content":"4KB（一级页表）+ 4MB（二级页表）","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1606222522,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1210699,"avatar":"https://static001.geekbang.org/account/avatar/00/12/79/4b/740f91ca.jpg","nickname":"-W.LI-","note":"","ucode":"3556786538664F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":7656,"discussion_content":"第一级的4M是所有进程公用的吧。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1567601622,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1098987,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/eb/2285a345.jpg","nickname":"花晨少年","note":"","ucode":"6AA3537A6BA10E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1210699,"avatar":"https://static001.geekbang.org/account/avatar/00/12/79/4b/740f91ca.jpg","nickname":"-W.LI-","note":"","ucode":"3556786538664F","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":186491,"discussion_content":"不是啊，每个进程都有一个。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582685568,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":7656,"ip_address":""},"score":186491,"extra":""}]},{"author":{"id":1135105,"avatar":"https://static001.geekbang.org/account/avatar/00/11/52/01/c05a82db.jpg","nickname":"左思","note":"","ucode":"54D9DC97FB3B40","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":299099,"discussion_content":"一级页表占用一页（1024个*4byte=4K），二级页表是1024个页（4M）。具体是二级页表，每级10位，占用的总空间是1（一级页表占用一页）加1024（二级页表1024个，占用1024页）乘4KB 得4MB+4KB。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1597563730,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":94724,"user_name":"有铭","can_delete":false,"product_type":"c1","uid":1046302,"ip_address":"","ucode":"2C7CB36CA5C04C","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/3XbCueYYVWTiclv8T5tFpwiblOxLphvSZxL4ujMdqVMibZnOiaFK2C5nKRGv407iaAsrI0CDICYVQJtiaITzkjfjbvrQ/132","comment_is_top":false,"comment_ctime":1557885280,"is_pvip":false,"replies":[{"id":"49350","content":"历史因素吧","user_name":"作者回复","comment_id":94724,"uid":"1001590","ip_address":"","utype":1,"ctime":1567650671,"user_name_real":"刘超@网易云"}],"discussion_count":2,"race_medal":0,"score":"10147819872","product_id":100024701,"comment_content":"为什么页的默认大小是4KB，这是以什么理由定下来的，为什么不是2KB或者8KB呢","like_count":2,"discussions":[{"author":{"id":1001590,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/48/76/0c7d4d23.jpg","nickname":"刘超","note":"","ucode":"196BF3F499E8FE","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":450183,"discussion_content":"历史因素吧","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567650671,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1479120,"avatar":"https://static001.geekbang.org/account/avatar/00/16/91/d0/35bc62b1.jpg","nickname":"无咎","note":"","ucode":"B9759B5646F3AB","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":2105,"discussion_content":"4KB正好是2^12，0x1000，写起来比较方便。我猜的。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1563261839,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":292304,"user_name":"喜剧。","can_delete":false,"product_type":"c1","uid":1042681,"ip_address":"","ucode":"5F9CF567792B8A","user_header":"https://static001.geekbang.org/account/avatar/00/0f/e8/f9/4412b473.jpg","comment_is_top":false,"comment_ctime":1620779875,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5915747171","product_id":100024701,"comment_content":"内存管理，本质上是虚拟地址到物理地址映射关系的管理。管理这个关系，我们要注意自身的管理成本，这样我们将内存分页，再对页进行管理。如果只分一层，维护起来比较麻烦。我们再往上加一层，弄个页目录，我们只需要维护好页目录，有数据的时候再加个页表项数据，这样就比较轻松了。","like_count":1},{"had_liked":false,"id":289029,"user_name":"吴钩","can_delete":false,"product_type":"c1","uid":2062402,"ip_address":"","ucode":"0EB50E8144BCDE","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKOnpl8fRB9r2vED2s8j7Arwbn2K6M6HUBWNjgoqV4uqe94fTGK4WGpOJLeRxXcBXk3dp23eQR0AQ/132","comment_is_top":false,"comment_ctime":1618823307,"is_pvip":false,"discussion_count":4,"race_medal":0,"score":"5913790603","product_id":100024701,"comment_content":"用了一个小时才想明白，之所以单层的页表空间利用率低，因为必须一次性分配出4mb，这是因为页表是个数组，靠数组下标（偏移量）定位表项！","like_count":1,"discussions":[{"author":{"id":1299347,"avatar":"https://static001.geekbang.org/account/avatar/00/13/d3/93/c3fb8566.jpg","nickname":"ProcessIsTheKey","note":"","ucode":"BE02EFD75F7D98","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":376247,"discussion_content":"怎么想明白的，我还没想明白...呜呜呜","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1622038022,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":3,"child_discussions":[{"author":{"id":2028811,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/f5/0b/73628618.jpg","nickname":"兔嘟嘟","note":"","ucode":"5A9042B4C7670C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1299347,"avatar":"https://static001.geekbang.org/account/avatar/00/13/d3/93/c3fb8566.jpg","nickname":"ProcessIsTheKey","note":"","ucode":"BE02EFD75F7D98","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":391030,"discussion_content":"一定要连续地址，如果不提前分配，那后面要用时，可能就没有连续内存了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1630236431,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":376247,"ip_address":""},"score":391030,"extra":""},{"author":{"id":1353456,"avatar":"https://static001.geekbang.org/account/avatar/00/14/a6/f0/50d0931d.jpg","nickname":"木易杨","note":"","ucode":"3C6EFF05AFFACA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2028811,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/f5/0b/73628618.jpg","nickname":"兔嘟嘟","note":"","ucode":"5A9042B4C7670C","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":394353,"discussion_content":"不是的，页表要覆盖全部地址，不是因为连续内存的事","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1631849368,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":391030,"ip_address":""},"score":394353,"extra":""},{"author":{"id":2028811,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/f5/0b/73628618.jpg","nickname":"兔嘟嘟","note":"","ucode":"5A9042B4C7670C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1353456,"avatar":"https://static001.geekbang.org/account/avatar/00/14/a6/f0/50d0931d.jpg","nickname":"木易杨","note":"","ucode":"3C6EFF05AFFACA","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":397956,"discussion_content":"不是因为连续内存的话，那不是可以懒分配，搞成链表？\n我认为这里也就是楼主所说的，是个数组，通过下标去访问，因此不得不需要连续内存\n\n或者说核心原因吧，如果不是连续的，就省不下表内索引的地址","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1632707327,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":394353,"ip_address":""},"score":397956,"extra":""}]}]},{"had_liked":false,"id":284731,"user_name":"海棠侠","can_delete":false,"product_type":"c1","uid":1009425,"ip_address":"","ucode":"5E74BF236DDA98","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/PiajxSqBRaEJcX9RUfJspIoiauJVkRRYddwtWf84CVXuLqtxJh9kCNiambJtEYq7SHXLicGMImgibKzib8uCaAqichqYg/132","comment_is_top":false,"comment_ctime":1616431454,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5911398750","product_id":100024701,"comment_content":"最多 4K，这里表达有歧义。 最好最后加一句，一共需要8k。 现在容易理解成一共4k就够了，实际上页表目录4k+页表4k=8k","like_count":0},{"had_liked":false,"id":252336,"user_name":"ABC","can_delete":false,"product_type":"c1","uid":1203803,"ip_address":"","ucode":"B8FCB5FD947E88","user_header":"https://static001.geekbang.org/account/avatar/00/12/5e/5b/c7e9fa5f.jpg","comment_is_top":false,"comment_ctime":1602243651,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"5897210947","product_id":100024701,"comment_content":"原文：“如果只使用页表，也需要完整的 1M 个页表项共 4M 的内存，但是如果使用了页目录，页目录需要 1K 个全部分配，占用内存 4K，但是里面只有一项使用了。到了页表项，只需要分配能够管理那个数据页的页表项页就可以了，也就是说，最多 4K，这样内存就节省多了。“<br>疑问：如果使用了页目录，页目录里面为何只有一项使用了？不应该是根据实际情况可能有多项被使用么？","like_count":1,"discussions":[{"author":{"id":1066409,"avatar":"https://static001.geekbang.org/account/avatar/00/10/45/a9/3d48d6a2.jpg","nickname":"Lorry","note":"","ucode":"BD4754D0F1D786","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":389488,"discussion_content":"顶级容器需要全部分配，二级容器之后就可以按需分配；比如，如果一级容器是页目录，则目录大小是1K，即10bit需要全部分配，1K项，占空间4K，对于二级子项页，可以按需分配空间大小；如果以及容器是页表，目录容量是1M，即19bit需要全部分配，1M，占用空间4M，二级子项是页表，可以按需分配；这样看来还是页目录方式节省空间","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1629292801,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1247180,"avatar":"https://static001.geekbang.org/account/avatar/00/13/07/cc/6601c339.jpg","nickname":"陈平","note":"","ucode":"8FFDE00E4BCDAB","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":335144,"discussion_content":"没搞懂这句话说的什么意思","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1608105515,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":169619,"user_name":"k先生","can_delete":false,"product_type":"c1","uid":1221532,"ip_address":"","ucode":"76D292DC62B52D","user_header":"https://static001.geekbang.org/account/avatar/00/12/a3/9c/8a14b7db.jpg","comment_is_top":false,"comment_ctime":1578391148,"is_pvip":false,"replies":[{"id":"66297","content":"本课程主要解析x86和x86_64","user_name":"作者回复","comment_id":169619,"uid":"1001590","ip_address":"","utype":1,"ctime":1578826924,"user_name_real":"刘超@网易云"}],"discussion_count":1,"race_medal":0,"score":"5873358444","product_id":100024701,"comment_content":"老师，现在不都是用倒排页表了吗？还用多级页表吗？","like_count":1,"discussions":[{"author":{"id":1001590,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/48/76/0c7d4d23.jpg","nickname":"刘超","note":"","ucode":"196BF3F499E8FE","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":480637,"discussion_content":"本课程主要解析x86和x86_64","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578826924,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":131994,"user_name":"ZYecho","can_delete":false,"product_type":"c1","uid":1356589,"ip_address":"","ucode":"9D156DD30C581E","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLh73kPzAKhz7YxUribqF6QKFiahhVAbwpgVLSRicA68c6ZFA7vUBJY1ves3LVvibrypROyI7awv47eSA/132","comment_is_top":false,"comment_ctime":1568001311,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"5862968607","product_id":100024701,"comment_content":"老师您好，为什么二级页表的机制会节省空间呢？ 如果一级页表的话不能够实现 只分配使用到的内存空间么？","like_count":1,"discussions":[{"author":{"id":1350446,"avatar":"https://static001.geekbang.org/account/avatar/00/14/9b/2e/7c749c3f.jpg","nickname":"Jason","note":"","ucode":"56E8AD725D9D1A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":347779,"discussion_content":"如果只有一个页表，页表在动态扩容时比较麻烦，可能需要数据拷贝；而两级页表时，一级页表动态扩容比较方便。个人理解啊。。。","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1612318988,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2458966,"avatar":"https://static001.geekbang.org/account/avatar/00/25/85/56/6fe64e92.jpg","nickname":"明天","note":"","ucode":"3E8070C4C8FCD0","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":366867,"discussion_content":"每个进程都是要有页表的，如果只有一级页表则每个进程都需要4M，进程多了内存扛不住。如果采用二级页表，第二级不需要全部建立，只需要建立很少就可以，因此一个进程的页表实际上可能仅仅需要4K+4K  具体可以看看https://www.jianshu.com/p/3558942fe14f","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1618209069,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":347184,"user_name":"梦江","can_delete":false,"product_type":"c1","uid":2059155,"ip_address":"","ucode":"B5FD2835863460","user_header":"https://static001.geekbang.org/account/avatar/00/1f/6b/93/bfda2d1c.jpg","comment_is_top":false,"comment_ctime":1653798607,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1653798607","product_id":100024701,"comment_content":"如果多个进程映射到同一个物理页呢？","like_count":0},{"had_liked":false,"id":347132,"user_name":"乔克叔叔","can_delete":false,"product_type":"c1","uid":2350246,"ip_address":"","ucode":"31F524DC1E1498","user_header":"https://static001.geekbang.org/account/avatar/00/23/dc/a6/6c2728b9.jpg","comment_is_top":false,"comment_ctime":1653736739,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1653736739","product_id":100024701,"comment_content":"页表是每个进程独有的？<br>如果是 ，怎么知道一个物理页已经被分配了呢？<br>如果两个不同的进程根据mmu计算的物理页一样怎么办","like_count":0},{"had_liked":false,"id":320947,"user_name":"fromk7","can_delete":false,"product_type":"c1","uid":1618629,"ip_address":"","ucode":"0EE21A43A6701D","user_header":"http://thirdwx.qlogo.cn/mmopen/2kpMNDYsSfCibibkl1x62jWtAIjQ0E7KWnS2dwnvRFAzbGkic2PUqGshmag6XWn3Uxf5OJmulYeDXdBpiaxG0G0bhHLCxDJWld56/132","comment_is_top":false,"comment_ctime":1636594234,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1636594234","product_id":100024701,"comment_content":"越看越要手绘下图，要不然很快就要忘记","like_count":0},{"had_liked":false,"id":317519,"user_name":"Geek_7e392f","can_delete":false,"product_type":"c1","uid":2785458,"ip_address":"","ucode":"07BFE0B0B3FCB2","user_header":"","comment_is_top":false,"comment_ctime":1634822487,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1634822487","product_id":100024701,"comment_content":"如果只使用页表，也需要完整的 1M 个页表项共 4M 的内存，但是如果使用了页目录，页目录需要 1K 个全部分配，占用内存 4K，但是里面只有一项使用了。到了页表项，只需要分配能够管理那个数据页的页表项页就可以了，也就是说，最多 4K，这样内存就节省多了。<br>***************************<br>这段最后说的最多4k，但需要一个4k大小的页目录项和一个4k大小的页表项，最多不是8k吗？","like_count":0},{"had_liked":false,"id":312524,"user_name":"木易杨","can_delete":false,"product_type":"c1","uid":1353456,"ip_address":"","ucode":"3C6EFF05AFFACA","user_header":"https://static001.geekbang.org/account/avatar/00/14/a6/f0/50d0931d.jpg","comment_is_top":false,"comment_ctime":1631848973,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1631848973","product_id":100024701,"comment_content":"那种简单分页为什么把页都分完的，不能像多级分页一样，用的时候再去分页，这样就不会占用4M的空间了","like_count":0},{"had_liked":false,"id":298055,"user_name":"王建峰","can_delete":false,"product_type":"c1","uid":1968013,"ip_address":"","ucode":"8BF1AEFFA7EA5F","user_header":"https://static001.geekbang.org/account/avatar/00/1e/07/8d/3e76560f.jpg","comment_is_top":false,"comment_ctime":1623897750,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1623897750","product_id":100024701,"comment_content":"4G的虚拟地址<br>1级页表: 4G空间 = 1M个页 = 1M个页表项<br>2级页表: 4G空间 = 1M个页 = 1M个页表项 + 1K个页目录项<br>n级页表:","like_count":0},{"had_liked":false,"id":290458,"user_name":"从远方过来","can_delete":false,"product_type":"c1","uid":1797551,"ip_address":"","ucode":"4791DBC7E05B1D","user_header":"","comment_is_top":false,"comment_ctime":1619573997,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1619573997","product_id":100024701,"comment_content":"GDT和PGD是怎么关联起来的？","like_count":0},{"had_liked":false,"id":283166,"user_name":"Emmcd","can_delete":false,"product_type":"c1","uid":2004534,"ip_address":"","ucode":"8B8BFDD26CB89A","user_header":"https://static001.geekbang.org/account/avatar/00/1e/96/36/37b9e314.jpg","comment_is_top":false,"comment_ctime":1615603690,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1615603690","product_id":100024701,"comment_content":"疑问：虚拟地址分为页号和页内偏移两部分，那不同进程中同一虚拟地址对应的页号和页内偏移不一样吗，不然怎么映射到不同的物理地址？？不一样又是怎么实现的呢？？","like_count":0,"discussions":[{"author":{"id":1066409,"avatar":"https://static001.geekbang.org/account/avatar/00/10/45/a9/3d48d6a2.jpg","nickname":"Lorry","note":"","ucode":"BD4754D0F1D786","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":389379,"discussion_content":"即使是同一个虚拟地址，可以通过不同页号和偏移量获得；\n\n比如，同是8K这个虚拟地址，可以是第二个页（地址为8K）的起始地址；还可以是第一个页（地址为0）偏移8K得到","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1629257337,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":282782,"user_name":"Lorry","can_delete":false,"product_type":"c1","uid":1066409,"ip_address":"","ucode":"BD4754D0F1D786","user_header":"https://static001.geekbang.org/account/avatar/00/10/45/a9/3d48d6a2.jpg","comment_is_top":false,"comment_ctime":1615417112,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1615417112","product_id":100024701,"comment_content":"感觉分段和分页机制是一样的，如果段设置为4K一个是不是就和分页一样了呢？","like_count":0},{"had_liked":false,"id":277033,"user_name":"勿忘初心🍃","can_delete":false,"product_type":"c1","uid":1341504,"ip_address":"","ucode":"02A5D0C357ADE0","user_header":"https://static001.geekbang.org/account/avatar/00/14/78/40/7ca70d5d.jpg","comment_is_top":false,"comment_ctime":1612238108,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1612238108","product_id":100024701,"comment_content":"只分一级页表的时候，页表项用32位来存储，如果存物理页号的话肯定用不完，我看作者图画的还有虚拟页号，这个虚拟页号是干嘛用的？<br>","like_count":0},{"had_liked":false,"id":274468,"user_name":"o","can_delete":false,"product_type":"c1","uid":1387038,"ip_address":"","ucode":"81F497258F3910","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJgkajjl84U3gcXxwdlcgNZdJoNVibFhDRMtBJibFCzto1eBSPHz83jsxMw5XOicLia2KykbehE7J8p4Q/132","comment_is_top":false,"comment_ctime":1611030260,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1611030260","product_id":100024701,"comment_content":"老师，你好这节课程的第一个图，段是逻辑地址到线性地址的映射，怎么是虚拟地址到物理地址的映射呢？有些不明白","like_count":0},{"had_liked":false,"id":247501,"user_name":"李小四","can_delete":false,"product_type":"c1","uid":1112747,"ip_address":"","ucode":"2A766BE16B276B","user_header":"https://static001.geekbang.org/account/avatar/00/10/fa/ab/0d39e745.jpg","comment_is_top":false,"comment_ctime":1599727590,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1599727590","product_id":100024701,"comment_content":"Linux_21:<br>昨天看到一些内存的文章，说应用正在修改的对象*cannot be paged out*, 我当时还有疑问，what does *paged out* mean? out to where?, 原来是换出到硬盘上。<br><br>32=10+10+12这个逻辑听了几次没听懂，最后点开文稿，拿起笔，瞬间明白。","like_count":0},{"had_liked":false,"id":230396,"user_name":"美美","can_delete":false,"product_type":"c1","uid":1148422,"ip_address":"","ucode":"44CC95C45AF345","user_header":"https://static001.geekbang.org/account/avatar/00/11/86/06/72b01bb7.jpg","comment_is_top":false,"comment_ctime":1593360700,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1593360700","product_id":100024701,"comment_content":"作者好，文中“虚拟地址分为两部分，页号和页内偏移。”，这个虚拟地址是指Linear Address？","like_count":0},{"had_liked":false,"id":218230,"user_name":"佳俊","can_delete":false,"product_type":"c1","uid":1385803,"ip_address":"","ucode":"A54445937EEF21","user_header":"https://static001.geekbang.org/account/avatar/00/15/25/4b/4cbd001e.jpg","comment_is_top":false,"comment_ctime":1589762972,"is_pvip":false,"replies":[{"id":"83090","content":"后面会讲页表初始化，启动的时候固定的根的位置，的确有点绕","user_name":"作者回复","user_name_real":"刘超@网易云","uid":"1001590","ctime":1591786011,"ip_address":"","comment_id":218230,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1589762972","product_id":100024701,"comment_content":"老师，你好，页表目录和页表也需要内存空间，这些内存空间是在哪里分配的呢？","like_count":0,"discussions":[{"author":{"id":1001590,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/48/76/0c7d4d23.jpg","nickname":"刘超","note":"","ucode":"196BF3F499E8FE","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":495395,"discussion_content":"后面会讲页表初始化，启动的时候固定的根的位置，的确有点绕","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1591786011,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":181595,"user_name":"hinzer","can_delete":false,"product_type":"c1","uid":1708157,"ip_address":"","ucode":"021A687DF49F02","user_header":"https://static001.geekbang.org/account/avatar/00/1a/10/7d/e2e9d222.jpg","comment_is_top":false,"comment_ctime":1582588581,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1582588581","product_id":100024701,"comment_content":"&quot;虚拟地址分为两部分，页号和页内偏移。页号作为页表的索引，&quot;<br>老师，要是两个进程使用到相同的虚拟地址，页表如何完成到物理内存的映射呢?","like_count":0,"discussions":[{"author":{"id":1066409,"avatar":"https://static001.geekbang.org/account/avatar/00/10/45/a9/3d48d6a2.jpg","nickname":"Lorry","note":"","ucode":"BD4754D0F1D786","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":389380,"discussion_content":"每个进程都有不同的基地址，基于基地址计算指定页号位置（每页4K）以及偏移量","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1629257523,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":181588,"user_name":"hinzer","can_delete":false,"product_type":"c1","uid":1708157,"ip_address":"","ucode":"021A687DF49F02","user_header":"https://static001.geekbang.org/account/avatar/00/1a/10/7d/e2e9d222.jpg","comment_is_top":false,"comment_ctime":1582584641,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1582584641","product_id":100024701,"comment_content":"&quot;分段可以给每一个进程分配不同的线性地址空间，而分页可以把同一线性地址空间映射到不同的物理空间&quot;<br>有点理解了，哈哈。<br>","like_count":0},{"had_liked":false,"id":165752,"user_name":"Paul Shan","can_delete":false,"product_type":"c1","uid":1593140,"ip_address":"","ucode":"32D99989028284","user_header":"","comment_is_top":false,"comment_ctime":1577318394,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1577318394","product_id":100024701,"comment_content":"请问老师，Linux 里物理页面和虚拟页面大小是否必须相等?<br>我觉得应该相等，因为两者偏移量是共享的,多谢！","like_count":0},{"had_liked":false,"id":160558,"user_name":"neohope","can_delete":false,"product_type":"c1","uid":1043475,"ip_address":"","ucode":"C0268F6E7E2B6E","user_header":"https://static001.geekbang.org/account/avatar/00/0f/ec/13/49e98289.jpg","comment_is_top":false,"comment_ctime":1575974218,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1575974218","product_id":100024701,"comment_content":"老师您好，之前学习操作系统的时候，记得内存有三种管理方式，分段、分页、段页。按我的理解，其实在Linux下面，分段只是为了区分ring0和ring3，实际后面的寻址全都是通过多级分页来完成的。这样理解对吗？","like_count":0},{"had_liked":false,"id":155338,"user_name":"czh","can_delete":false,"product_type":"c1","uid":1159078,"ip_address":"","ucode":"649FE5C9269D69","user_header":"https://static001.geekbang.org/account/avatar/00/11/af/a6/3f15ba2f.jpg","comment_is_top":false,"comment_ctime":1574679936,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1574679936","product_id":100024701,"comment_content":"虚拟和物理地址的映射关系有两种：段表，页表。linux偏向于使用页表","like_count":0},{"had_liked":false,"id":151274,"user_name":"Geek_853778","can_delete":false,"product_type":"c1","uid":1620731,"ip_address":"","ucode":"3BE39B3D74206D","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/F7YE2rE28IRib0mWMGqGh9s6nP9eO0EEYtxnbmyw8nwLrtOtCoPAhxTZg5l2NrD2fBR7fNX6YWWiagggMMAseTZQ/132","comment_is_top":false,"comment_ctime":1573693572,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573693572","product_id":100024701,"comment_content":"使用分页机制将虚拟地址转化为物理地址时，就需要有一个页表，将各个页的起始地址信息给管理起来，每一个进程都需要保存有一个完整的页表","like_count":0},{"had_liked":false,"id":148423,"user_name":"darren","can_delete":false,"product_type":"c1","uid":1151837,"ip_address":"","ucode":"4726076845920B","user_header":"https://static001.geekbang.org/account/avatar/00/11/93/5d/91f1d849.jpg","comment_is_top":false,"comment_ctime":1573005674,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573005674","product_id":100024701,"comment_content":"老师问个问题：1.如果是因为页表必须连续而且每个进程的页表不一样，所以只有一级页表时需要每个进程占用4M空间，那这4M页表存放到哪里？系统又是怎么找到的？2.如果采用两级页表，为什么第一级需要页目录需要全部存储，而第二级页表就可以只存使用的那一页，这两级页表又是放到哪里，需要怎么找到？3.第一级需要4k，就算只使用实际内存一页的内容，第二级是不是也至少需要存储一个完整页4k，一共就是8k，那就是至少占用8k，文中说最多占用4k是我没有理解语义吗？","like_count":0},{"had_liked":false,"id":148186,"user_name":"柳长青","can_delete":false,"product_type":"c1","uid":1716747,"ip_address":"","ucode":"3EA2B7BD5DBCAF","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/1pMbwZrAl5gVy4FictX9HiaDicYOjRI2E6flxrXLhLTcneF74TowWK6rJW6oKs9iakPl0dqHsWjav0TjK6vyEZTlJA/132","comment_is_top":false,"comment_ctime":1572956182,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1572956182","product_id":100024701,"comment_content":"老师，我问一下，这么理解页表项对不对：以4G内存为例，就是一级目录还是4M，然后每个进程都有4K的页表目录，假设有100个进程就需要4M+400K的内存来定义页表项。","like_count":0},{"had_liked":false,"id":138022,"user_name":"kdb_reboot","can_delete":false,"product_type":"c1","uid":1003594,"ip_address":"","ucode":"4C56FCA563FCA3","user_header":"https://static001.geekbang.org/account/avatar/00/0f/50/4a/04fef27f.jpg","comment_is_top":false,"comment_ctime":1569985091,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1569985091","product_id":100024701,"comment_content":"1. 也就是说分段是建立在分页的基础上的，比如进程用户态内存空间的分段，但是再细看其实是分页的<br>2.多级页表应该就是“王争”讲的跳表<br>老师我理解的对吧？","like_count":0},{"had_liked":false,"id":132047,"user_name":"ZYecho","can_delete":false,"product_type":"c1","uid":1356589,"ip_address":"","ucode":"9D156DD30C581E","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLh73kPzAKhz7YxUribqF6QKFiahhVAbwpgVLSRicA68c6ZFA7vUBJY1ves3LVvibrypROyI7awv47eSA/132","comment_is_top":false,"comment_ctime":1568013127,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1568013127","product_id":100024701,"comment_content":"老师您好，请问这个版本的内核没有使用到硬件的LGT表项么？ 我记得GDT和LDT一般是配套使用的？","like_count":0},{"had_liked":false,"id":112716,"user_name":"落石","can_delete":false,"product_type":"c1","uid":1184061,"ip_address":"","ucode":"11F60E700E96B6","user_header":"https://static001.geekbang.org/account/avatar/00/12/11/3d/7b9161ca.jpg","comment_is_top":false,"comment_ctime":1562809316,"is_pvip":false,"replies":[{"id":"46695","content":"不会放满的。要都放满256T物理内存呀，哪儿弄这么多内存去。不能位图，又不是仅仅标识在不在，而是要映射地址的。","user_name":"作者回复","user_name_real":"刘超@网易云","uid":"1001590","ctime":1566380909,"ip_address":"","comment_id":112716,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1562809316","product_id":100024701,"comment_content":"64 位系统 2的64次方。四级页表，如果每级仍然以4K划分那就是 2^64 &#47; 2^12 * 4 &#47; 2^10 * 4 &#47; 2^10 * 4 &#47; 2^10 * 4 = 2^24，即16M*4，64M每个进程？为什么没有采用位图的形式，记录页表索引。这样可以大量节约空间。","like_count":0,"discussions":[{"author":{"id":1001590,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/48/76/0c7d4d23.jpg","nickname":"刘超","note":"","ucode":"196BF3F499E8FE","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":457873,"discussion_content":"不会放满的。要都放满256T物理内存呀，哪儿弄这么多内存去。不能位图，又不是仅仅标识在不在，而是要映射地址的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566380909,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":107210,"user_name":"zhouzg","can_delete":false,"product_type":"c1","uid":1060614,"ip_address":"","ucode":"40C8A4E115A5AE","user_header":"https://static001.geekbang.org/account/avatar/00/10/2f/06/aabd37b4.jpg","comment_is_top":false,"comment_ctime":1561480401,"is_pvip":false,"replies":[{"id":"48857","content":"赞","user_name":"作者回复","user_name_real":"刘超@网易云","uid":"1001590","ctime":1567501338,"ip_address":"","comment_id":107210,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1561480401","product_id":100024701,"comment_content":"课程太好了，系统的认识了操作系统，之前总是会出现一些想不明白的点，找的资料都是零散的，虽然也能看明白一点，但总是不系统，东西窜不起来。","like_count":0,"discussions":[{"author":{"id":1001590,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/48/76/0c7d4d23.jpg","nickname":"刘超","note":"","ucode":"196BF3F499E8FE","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":455420,"discussion_content":"赞","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567501338,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":107208,"user_name":"zhouzg","can_delete":false,"product_type":"c1","uid":1060614,"ip_address":"","ucode":"40C8A4E115A5AE","user_header":"https://static001.geekbang.org/account/avatar/00/10/2f/06/aabd37b4.jpg","comment_is_top":false,"comment_ctime":1561480131,"is_pvip":false,"replies":[{"id":"48858","content":"解析CPU引脚就比较底层了","user_name":"作者回复","user_name_real":"刘超@网易云","uid":"1001590","ctime":1567501357,"ip_address":"","comment_id":107208,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1561480131","product_id":100024701,"comment_content":"这里之前了解过一点内存寻址的原理，CPU引脚对寻址的作用等。虽然还没理解透，但是结合这篇文章有一些启发。","like_count":0,"discussions":[{"author":{"id":1001590,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/48/76/0c7d4d23.jpg","nickname":"刘超","note":"","ucode":"196BF3F499E8FE","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":455418,"discussion_content":"解析CPU引脚就比较底层了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567501357,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":100295,"user_name":"深海极光","can_delete":false,"product_type":"c1","uid":1096111,"ip_address":"","ucode":"331024F7E99C64","user_header":"https://static001.geekbang.org/account/avatar/00/10/b9/af/f59b4c7c.jpg","comment_is_top":false,"comment_ctime":1559524227,"is_pvip":false,"replies":[{"id":"49202","content":"不会的","user_name":"作者回复","user_name_real":"刘超@网易云","uid":"1001590","ctime":1567603006,"ip_address":"","comment_id":100295,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1559524227","product_id":100024701,"comment_content":"老师请问下，不同进程的虚拟地址会出现映射到同一个物理地址即相同的page，如果会是把这个page换出还是怎么处理的，如果不回映射到同一个又是怎么保证的呢，谢谢","like_count":0,"discussions":[{"author":{"id":1001590,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/48/76/0c7d4d23.jpg","nickname":"刘超","note":"","ucode":"196BF3F499E8FE","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":452490,"discussion_content":"不会的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567603006,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":96086,"user_name":"小松松","can_delete":false,"product_type":"c1","uid":1298152,"ip_address":"","ucode":"B9B5FFE7CAA548","user_header":"https://static001.geekbang.org/account/avatar/00/13/ce/e8/12cb8e99.jpg","comment_is_top":false,"comment_ctime":1558324929,"is_pvip":true,"replies":[{"id":"49294","content":"分段仅用于权限","user_name":"作者回复","user_name_real":"刘超@网易云","uid":"1001590","ctime":1567610333,"ip_address":"","comment_id":96086,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1558324929","product_id":100024701,"comment_content":"请问一下，Linux在哪些管理上使用的分段，哪些情况使用的是分页呢？  还是说现代操作系统都已经倾向于使用分页来管理了。","like_count":0,"discussions":[{"author":{"id":1001590,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/48/76/0c7d4d23.jpg","nickname":"刘超","note":"","ucode":"196BF3F499E8FE","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":450715,"discussion_content":"分段仅用于权限","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1567610333,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":95598,"user_name":"一笔一画","can_delete":false,"product_type":"c1","uid":1495254,"ip_address":"","ucode":"2B9BC8ADF97106","user_header":"https://static001.geekbang.org/account/avatar/00/16/d0/d6/f335954b.jpg","comment_is_top":false,"comment_ctime":1558095926,"is_pvip":false,"replies":[{"id":"49309","content":"对的对的，dpdk会用的。","user_name":"作者回复","user_name_real":"刘超@网易云","uid":"1001590","ctime":1567611262,"ip_address":"","comment_id":95598,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1558095926","product_id":100024701,"comment_content":"hugepage好像dpdk用过，这个应该对应的页目录项也会相应变少吧？另外，换页不是会很惨吗？","like_count":0,"discussions":[{"author":{"id":1001590,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/48/76/0c7d4d23.jpg","nickname":"刘超","note":"","ucode":"196BF3F499E8FE","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":450531,"discussion_content":"对的对的，dpdk会用的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567611262,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":94876,"user_name":"Sharry","can_delete":false,"product_type":"c1","uid":1239293,"ip_address":"","ucode":"045DDB864659F6","user_header":"https://static001.geekbang.org/account/avatar/00/12/e8/fd/035f4c94.jpg","comment_is_top":false,"comment_ctime":1557914574,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1557914574","product_id":100024701,"comment_content":"Nice, 终于看到最想了解的虚拟空间与物理页面的映射了","like_count":0},{"had_liked":false,"id":94871,"user_name":"Earl","can_delete":false,"product_type":"c1","uid":1139256,"ip_address":"","ucode":"C7364214BCCB37","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/CSOibsR4OFSEYRvu1wU9JicQNSINmnWpuvCUWz1g2xdRtEBd9Sdrl3ll2c6MrYBKcG1tq18SFp74t17RRJ9kvM7g/132","comment_is_top":false,"comment_ctime":1557913934,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1557913934","product_id":100024701,"comment_content":"页的大小必须是2的n次方，而且与TLB的结构有关","like_count":0}]}