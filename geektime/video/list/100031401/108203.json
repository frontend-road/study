{"id":108203,"title":"18 | DTO和DMO为什么要互转？","content":"<ul>\n<li>\n<p>参考链接：<a href=\"https://github.com/modelmapper/modelmapper\">https://github.com/modelmapper/modelmapper</a></p>\n</li>\n<li>\n<p>代码：<a href=\"https://gitee.com/geektime-geekbang/staffjoy\">https://gitee.com/geektime-geekbang/staffjoy</a></p>\n</li>\n<li>\n<p>课件：<a href=\"https://pan.baidu.com/s/1Q7eP3yZ1Vm8J2nhle5RzTQ\">https://pan.baidu.com/s/1Q7eP3yZ1Vm8J2nhle5RzTQ</a> 提取码: 1aeh</p>\n</li>\n</ul>","comments":[{"had_liked":false,"id":188118,"user_name":"钱","can_delete":false,"product_type":"c3","uid":1009652,"ip_address":"","ucode":"2C92A243A463D4","user_header":"https://static001.geekbang.org/account/avatar/00/0f/67/f4/9a1feb59.jpg","comment_is_top":false,"comment_ctime":1584322518,"is_pvip":false,"replies":[{"id":72893,"content":"尽量不要搞很多XXO，一般DTO(数据传输对象)+Entity(数据存储实体)就够了，XXO不在于多，而在于保持风格一致性。","user_name":"作者回复","user_name_real":"杨波","uid":1030344,"ctime":1584441294,"ip_address":"","comment_id":188118,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100031401,"comment_content":"数据对象传输，哈哈，想起我们团队中有各种O\nDTO\nDAO\nCO\nVO\nPO\nEO\n而且我们喜欢自己转换，清晰明了灵活，只是代码会多出许多，我觉得可以尝试一下modleMapper。","like_count":4,"discussions":[{"author":{"id":1030344,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/b8/c8/c94d38a7.jpg","nickname":"杨波","note":"","ucode":"FA3418BB703BCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":487339,"discussion_content":"尽量不要搞很多XXO，一般DTO(数据传输对象)+Entity(数据存储实体)就够了，XXO不在于多，而在于保持风格一致性。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584441294,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":115055,"user_name":"双","can_delete":false,"product_type":"c3","uid":1226462,"ip_address":"","ucode":"9A6A370DAD648E","user_header":"https://static001.geekbang.org/account/avatar/00/12/b6/de/95dc7537.jpg","comment_is_top":false,"comment_ctime":1563462918,"is_pvip":false,"replies":[{"id":42225,"content":"谢谢你的反馈！\n1. 经过和学员交流，Response&lt;T&gt;方式也可以实现基于feign的强类型客户端，后面会再开发一个项目，采用这种方式，供大家参考。\n2. 直接复用DMO也可以做到，而且可以减少转换，但是有些复杂场景，将DTO&#47;DMO分开定义，也有好处，课程中也有提到，这样两边比较清晰，可以根据需要灵活裁剪或添加字段，可以减少依赖和判断逻辑。\n3. 映射工具的确也是有利有弊的，使用时要了解其弊端，并针对性防范(比如单测)。","user_name":"作者回复","user_name_real":"杨波","uid":1030344,"ctime":1563621594,"ip_address":"","comment_id":115055,"utype":1}],"discussion_count":2,"race_medal":0,"score":2,"product_id":100031401,"comment_content":"request&#47;response这是很标准的做法，在经典的soa中叫文档消息模式。其实定义一个通用的响应结果类加泛型也可以支持feign，序列化和反序列化也是没问题的。另外service层是直接复用控制器中的request&#47;response对象，不需要再多定义一套dto吧？其实不建议“偷懒”通过这种反射工具做映射，有时候某层的模型字段变更了(虽然db只让加字段不让改字段)，编译器和ide不直接感知可能会有风险...","like_count":4,"discussions":[{"author":{"id":1030344,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/b8/c8/c94d38a7.jpg","nickname":"杨波","note":"","ucode":"FA3418BB703BCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":458946,"discussion_content":"谢谢你的反馈！\n1. 经过和学员交流，Response&amp;lt;T&amp;gt;方式也可以实现基于feign的强类型客户端，后面会再开发一个项目，采用这种方式，供大家参考。\n2. 直接复用DMO也可以做到，而且可以减少转换，但是有些复杂场景，将DTO/DMO分开定义，也有好处，课程中也有提到，这样两边比较清晰，可以根据需要灵活裁剪或添加字段，可以减少依赖和判断逻辑。\n3. 映射工具的确也是有利有弊的，使用时要了解其弊端，并针对性防范(比如单测)。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1563621594,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1612933,"avatar":"","nickname":"Thomas Yang","note":"","ucode":"29249144F708D7","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":2800,"discussion_content":"Response<T>跟继承各有优缺点吧，如果返回没有内容一个是空对象，一个是没有这个对象。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1563944205,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":124436,"user_name":"Wyatt","can_delete":false,"product_type":"c3","uid":1501206,"ip_address":"","ucode":"808501F5408925","user_header":"https://static001.geekbang.org/account/avatar/00/16/e8/16/50d3c099.jpg","comment_is_top":false,"comment_ctime":1565883293,"is_pvip":false,"replies":[{"id":45800,"content":"网上有对5种mapping框架的性能比对，可以参考一下：https:&#47;&#47;www.baeldung.com&#47;java-performance-mapping-frameworks","user_name":"作者回复","user_name_real":"杨波","uid":1030344,"ctime":1565962834,"ip_address":"","comment_id":124436,"utype":1}],"discussion_count":2,"race_medal":0,"score":2,"product_id":100031401,"comment_content":"老师，我们用得dozer来进行拷贝的，不知道性能和modelmapper哪个更好？","like_count":3,"discussions":[{"author":{"id":1030344,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/b8/c8/c94d38a7.jpg","nickname":"杨波","note":"","ucode":"FA3418BB703BCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":463175,"discussion_content":"网上有对5种mapping框架的性能比对，可以参考一下：https://www.baeldung.com/java-performance-mapping-frameworks","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1565962834,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1501206,"avatar":"https://static001.geekbang.org/account/avatar/00/16/e8/16/50d3c099.jpg","nickname":"Wyatt","note":"","ucode":"808501F5408925","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":5220,"discussion_content":"谢谢老师","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566059516,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":167423,"user_name":"wind","can_delete":false,"product_type":"c3","uid":1507189,"ip_address":"","ucode":"5EC77AEB18130E","user_header":"https://static001.geekbang.org/account/avatar/00/16/ff/75/9c1b2ece.jpg","comment_is_top":false,"comment_ctime":1577790716,"is_pvip":false,"replies":[{"id":64987,"content":"BeanUtils只能做简单的一对一的字段映射和克隆，ModelMapper之类是专业的Java Mapping框架，具有很灵活的配置和智能映射能力，常见的专业Mapping框架可以参考：https:&#47;&#47;www.baeldung.com&#47;java-performance-mapping-frameworks","user_name":"作者回复","user_name_real":"杨波","uid":1030344,"ctime":1577798847,"ip_address":"","comment_id":167423,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100031401,"comment_content":"spring自带的BeanUtils也可以，没必要用第三方的吧","like_count":2,"discussions":[{"author":{"id":1030344,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/b8/c8/c94d38a7.jpg","nickname":"杨波","note":"","ucode":"FA3418BB703BCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":479860,"discussion_content":"BeanUtils只能做简单的一对一的字段映射和克隆，ModelMapper之类是专业的Java Mapping框架，具有很灵活的配置和智能映射能力，常见的专业Mapping框架可以参考：https://www.baeldung.com/java-performance-mapping-frameworks","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577798847,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":114968,"user_name":"永旭","can_delete":false,"product_type":"c3","uid":1068819,"ip_address":"","ucode":"C9C74BE32C8F46","user_header":"https://static001.geekbang.org/account/avatar/00/10/4f/13/5197f8d2.jpg","comment_is_top":false,"comment_ctime":1563439539,"is_pvip":false,"replies":[{"id":41976,"content":"DTO数据传输对象，VO值对象，它们的用途大致类似，主要用于在进程间传递数据，不同程序员习惯称谓不同而已，没有必要太纠结，根据你的习惯选择并且保持一致性即可。","user_name":"作者回复","user_name_real":"杨波","uid":1030344,"ctime":1563456457,"ip_address":"","comment_id":114968,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100031401,"comment_content":"老师你好, dto 和 vo 有用法上的推荐吗 ?","like_count":2,"discussions":[{"author":{"id":1030344,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/b8/c8/c94d38a7.jpg","nickname":"杨波","note":"","ucode":"FA3418BB703BCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":458907,"discussion_content":"DTO数据传输对象，VO值对象，它们的用途大致类似，主要用于在进程间传递数据，不同程序员习惯称谓不同而已，没有必要太纠结，根据你的习惯选择并且保持一致性即可。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1563456457,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":114709,"user_name":"Kian.Lee","can_delete":false,"product_type":"c3","uid":1086568,"ip_address":"","ucode":"3FB08A00F2DFD7","user_header":"https://static001.geekbang.org/account/avatar/00/10/94/68/56794ea3.jpg","comment_is_top":false,"comment_ctime":1563368024,"is_pvip":false,"replies":[{"id":41965,"content":"不错，已经做到自动化和精细化阶段，值得借鉴。","user_name":"作者回复","user_name_real":"杨波","uid":1030344,"ctime":1563454955,"ip_address":"","comment_id":114709,"utype":1}],"discussion_count":3,"race_medal":0,"score":2,"product_id":100031401,"comment_content":"我们目前应用服务层入参和返回值采用DTO，领域服务层一般采用实体对象、值对象或简单参数，两层之间的数据传递采用对象映射，也是采用Model Mapper ，然后通过多层基类继承和泛型分别实现通用的增删改查方法和通用业务状态管理，以及代码自动生成技术，现在做到只要数据模型定义完成，一键生成各层代码，然后根据应用服务层产生的DTO类，根据业务需求定义各个DTO的类属性（各个业务入参和返回值数据）一个模块的通用业务功能就实现了。引用阿里前端委员会的四大技术方向定义“在前端的体系中，习惯把 To B 看成是中后台，它的特质是布局、表单、可视化图表等都是高度标准化的，在这样的体系中，如何用低代码或者无代码体系来完成重塑是关键，其中包含了大量的组件、元件、模块。”我们基本实现了“低代码或者无代码体系来完成重塑”。","like_count":2,"discussions":[{"author":{"id":1030344,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/b8/c8/c94d38a7.jpg","nickname":"杨波","note":"","ucode":"FA3418BB703BCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":458789,"discussion_content":"不错，已经做到自动化和精细化阶段，值得借鉴。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1563454955,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1179312,"avatar":"https://static001.geekbang.org/account/avatar/00/11/fe/b0/260f41f0.jpg","nickname":"loris","note":"","ucode":"00842745CF4B31","race_medal":1,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":184011,"discussion_content":"能否 详细解释一下最佳实践案例\n有博客分享一下么\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582539422,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1086568,"avatar":"https://static001.geekbang.org/account/avatar/00/10/94/68/56794ea3.jpg","nickname":"Kian.Lee","note":"","ucode":"3FB08A00F2DFD7","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1179312,"avatar":"https://static001.geekbang.org/account/avatar/00/11/fe/b0/260f41f0.jpg","nickname":"loris","note":"","ucode":"00842745CF4B31","race_medal":1,"user_type":1,"is_pvip":false},"discussion":{"id":184522,"discussion_content":"目前还没有时间写文章，现在它是一个商业项目，不过待商业项目成熟后，我有计划开源其核心库和基础库，基础库会先开源。","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1582556336,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":184011,"ip_address":"","group_id":0},"score":184522,"extra":""}]}]},{"had_liked":false,"id":128869,"user_name":"grey927","can_delete":false,"product_type":"c3","uid":1202782,"ip_address":"","ucode":"833E02ED835B4A","user_header":"https://static001.geekbang.org/account/avatar/00/12/5a/5e/a897cb0d.jpg","comment_is_top":false,"comment_ctime":1566978518,"is_pvip":false,"replies":[{"id":47891,"content":"freemarker和thymeleaf这些模版引擎都差不多，邮件模版的话，可能freemarker更合适一些，个人看法。","user_name":"作者回复","user_name_real":"杨波","uid":1030344,"ctime":1566999127,"ip_address":"","comment_id":128869,"utype":1}],"discussion_count":2,"race_medal":0,"score":2,"product_id":100031401,"comment_content":"杨老师，我们现在微服务改造想把项目中的velocity改掉（用于发短信&#47;邮件的模板引擎，由于最新的Spring boot对Velocity支持不太好），目前可供选择的是freemarker和Thymeleaf ，您认为用这两个用哪个会相对好一点。","like_count":1,"discussions":[{"author":{"id":1030344,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/b8/c8/c94d38a7.jpg","nickname":"杨波","note":"","ucode":"FA3418BB703BCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":465145,"discussion_content":"freemarker和thymeleaf这些模版引擎都差不多，邮件模版的话，可能freemarker更合适一些，个人看法。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566999127,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1074866,"avatar":"https://static001.geekbang.org/account/avatar/00/10/66/b2/ebc42cf8.jpg","nickname":"pdh","note":"","ucode":"6936AD9F83FA85","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":106036,"discussion_content":"邮件模板freemarker确实比thymeleaf性能更好","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577507437,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":116949,"user_name":"Thomas Yang","can_delete":false,"product_type":"c3","uid":1612933,"ip_address":"","ucode":"29249144F708D7","user_header":"","comment_is_top":false,"comment_ctime":1563944326,"is_pvip":false,"replies":[{"id":42824,"content":"这些代码组织方式都是逻辑性的，形成规范保持一致就好，没必要纠结拘泥于形式。","user_name":"作者回复","user_name_real":"杨波","uid":1030344,"ctime":1563973200,"ip_address":"","comment_id":116949,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100031401,"comment_content":"波波老师有一个点比较纠结，基于rest的微服务下，服务的controller本身就是一个 service的角色了而不是传统的mvc的交互逻辑了，那是不是DTO到controller就可以了，内部子service全部用DO会更方便。","like_count":1,"discussions":[{"author":{"id":1030344,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/b8/c8/c94d38a7.jpg","nickname":"杨波","note":"","ucode":"FA3418BB703BCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":459748,"discussion_content":"这些代码组织方式都是逻辑性的，形成规范保持一致就好，没必要纠结拘泥于形式。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1563973200,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":115005,"user_name":"男朋友","can_delete":false,"product_type":"c3","uid":1601147,"ip_address":"","ucode":"878E436AA2F917","user_header":"","comment_is_top":false,"comment_ctime":1563449531,"is_pvip":false,"replies":[{"id":41975,"content":"对，项目用了mapstruct(https:&#47;&#47;github.com&#47;mapstruct&#47;mapstruct)，做DTO和DMO之间的映射。","user_name":"作者回复","user_name_real":"杨波","uid":1030344,"ctime":1563456156,"ip_address":"","comment_id":115005,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100031401,"comment_content":"org.mapstruct.Mapper这个包吗?用来映射DTO和DMO","like_count":1,"discussions":[{"author":{"id":1030344,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/b8/c8/c94d38a7.jpg","nickname":"杨波","note":"","ucode":"FA3418BB703BCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":458923,"discussion_content":"对，项目用了mapstruct(https://github.com/mapstruct/mapstruct)，做DTO和DMO之间的映射。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1563456156,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":114342,"user_name":"深山小书童","can_delete":false,"product_type":"c3","uid":1079593,"ip_address":"","ucode":"6B5DD3B3D84534","user_header":"https://static001.geekbang.org/account/avatar/00/10/79/29/a90cf777.jpg","comment_is_top":false,"comment_ctime":1563278709,"is_pvip":false,"replies":[{"id":41849,"content":"1. 对，每个服务操作严格有一对Request&#47;Response消息对应，这个是grpc&#47;protobuf的规范做法，可以参考https:&#47;&#47;github.com&#47;Staffjoy&#47;v2&#47;tree&#47;master&#47;protobuf。之前大厂ebay的trading api(https:&#47;&#47;developer.ebay.com&#47;devzone&#47;xml&#47;docs&#47;reference&#47;ebay&#47;index.html)，也是采用这种接口风格。这是一种类rpc编程风格，我的staffjoy项目中的微服务虽然是RESTful的，但是沿用了这种类似谷歌grpc的编程风格，目的是实现类似rpc的强类型接口，request&#47;response是会多一点，但是只要规范，不是大问题。\n\n2. 具体要看你怎么实现的，能否贴一个带范型response示例和客户端feign接口示例？","user_name":"作者回复","user_name_real":"杨波","uid":1030344,"ctime":1563366034,"ip_address":"","comment_id":114342,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100031401,"comment_content":"波波老师，请教两个问题。1⃣️为什么dto package下既有request结尾的类，也有response结尾的类，还有dto和list结尾的类，看起来有点不那么优雅，这方面大厂有什么规范吗？2⃣️我们在使用feign的时候都是返回一个统一带泛型resonse，好像没有序列化问题，像波波老师的做法，response对象会不会无比的多。","like_count":1,"discussions":[{"author":{"id":1030344,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/b8/c8/c94d38a7.jpg","nickname":"杨波","note":"","ucode":"FA3418BB703BCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":458616,"discussion_content":"1. 对，每个服务操作严格有一对Request/Response消息对应，这个是grpc/protobuf的规范做法，可以参考https://github.com/Staffjoy/v2/tree/master/protobuf。之前大厂ebay的trading api(https://developer.ebay.com/devzone/xml/docs/reference/ebay/index.html)，也是采用这种接口风格。这是一种类rpc编程风格，我的staffjoy项目中的微服务虽然是RESTful的，但是沿用了这种类似谷歌grpc的编程风格，目的是实现类似rpc的强类型接口，request/response是会多一点，但是只要规范，不是大问题。\n\n2. 具体要看你怎么实现的，能否贴一个带范型response示例和客户端feign接口示例？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1563366034,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":207981,"user_name":"Japhy","can_delete":false,"product_type":"c3","uid":1768748,"ip_address":"","ucode":"4C5FF289B93BD2","user_header":"https://static001.geekbang.org/account/avatar/00/1a/fd/2c/074e0d7a.jpg","comment_is_top":false,"comment_ctime":1587226392,"is_pvip":false,"replies":[{"id":77941,"content":"返回头之类的数据放在http response header里头不行吗？","user_name":"作者回复","user_name_real":"杨波","uid":1030344,"ctime":1587394115,"ip_address":"","comment_id":207981,"utype":1}],"discussion_count":2,"race_medal":0,"score":3,"product_id":100031401,"comment_content":"老师你好，有个纠结的地方想请教下， springboot自带的ResponseEntity感觉很强大，但是无法设置traceId等一些必要的东西，自己设计返回结果集更贴近业务，但是对于返回头之类的设置会麻烦，请问下有比较好的实践方案么","like_count":0,"discussions":[{"author":{"id":1030344,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/b8/c8/c94d38a7.jpg","nickname":"杨波","note":"","ucode":"FA3418BB703BCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":492305,"discussion_content":"返回头之类的数据放在http response header里头不行吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1587394115,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1768748,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/fd/2c/074e0d7a.jpg","nickname":"Japhy","note":"","ucode":"4C5FF289B93BD2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":242044,"discussion_content":"感谢老师回复，已经想通了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1587460895,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":166580,"user_name":"pdh","can_delete":false,"product_type":"c3","uid":1074866,"ip_address":"","ucode":"6936AD9F83FA85","user_header":"https://static001.geekbang.org/account/avatar/00/10/66/b2/ebc42cf8.jpg","comment_is_top":false,"comment_ctime":1577507805,"is_pvip":false,"replies":[{"id":64903,"content":"DTO，VO之类的只是一种逻辑分类，便于区分和管理数据对象的，让代码结构更有条理易于维护。实际各家的做法都不同，没有所谓统一标准做法，具体有没有必要，看是否能改善代码的可管理和维护性。","user_name":"作者回复","user_name_real":"杨波","uid":1030344,"ctime":1577703657,"ip_address":"","comment_id":166580,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100031401,"comment_content":"波波老师，您好！我们项目使用的是request使用DTO，response使用VO。这种做法老师觉得有必要吗？","like_count":0,"discussions":[{"author":{"id":1030344,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/b8/c8/c94d38a7.jpg","nickname":"杨波","note":"","ucode":"FA3418BB703BCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":479547,"discussion_content":"DTO，VO之类的只是一种逻辑分类，便于区分和管理数据对象的，让代码结构更有条理易于维护。实际各家的做法都不同，没有所谓统一标准做法，具体有没有必要，看是否能改善代码的可管理和维护性。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577703657,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":124265,"user_name":"LSJ","can_delete":false,"product_type":"c3","uid":1299437,"ip_address":"","ucode":"3CF8A457AC6BA9","user_header":"https://static001.geekbang.org/account/avatar/00/13/d3/ed/8d5420ad.jpg","comment_is_top":false,"comment_ctime":1565847639,"is_pvip":false,"replies":[{"id":45660,"content":"这也是一种做法，相当于弱类型接口，有点类似javascipt弱类型语言做法，也可以，就是客户&#47;服务器端自己要解析麻烦一点。","user_name":"作者回复","user_name_real":"杨波","uid":1030344,"ctime":1565878448,"ip_address":"","comment_id":124265,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100031401,"comment_content":"老师我们没有定义DTO，接口全部返回的是Map&lt;String,Object&gt;对象，传参也是。这样就不用在客户端和服务端共享数据模型了。这种方式可取吗","like_count":0,"discussions":[{"author":{"id":1030344,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/b8/c8/c94d38a7.jpg","nickname":"杨波","note":"","ucode":"FA3418BB703BCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":463090,"discussion_content":"这也是一种做法，相当于弱类型接口，有点类似javascipt弱类型语言做法，也可以，就是客户/服务器端自己要解析麻烦一点。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1565878448,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":120278,"user_name":"sayid","can_delete":false,"product_type":"c3","uid":1101465,"ip_address":"","ucode":"E40E0D86768DCA","user_header":"https://static001.geekbang.org/account/avatar/00/10/ce/99/4382727b.jpg","comment_is_top":false,"comment_ctime":1564818957,"is_pvip":false,"replies":[{"id":44145,"content":"cool，有机会可以开源分享下你们的这个工具。","user_name":"作者回复","user_name_real":"杨波","uid":1030344,"ctime":1564841619,"ip_address":"","comment_id":120278,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100031401,"comment_content":"我们是用了自己写的一个util， 支持对象T和List&lt;T&gt;, Map&lt;T&gt; 三种数据模式的copy","like_count":0,"discussions":[{"author":{"id":1030344,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/b8/c8/c94d38a7.jpg","nickname":"杨波","note":"","ucode":"FA3418BB703BCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":461267,"discussion_content":"cool，有机会可以开源分享下你们的这个工具。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1564841619,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":117787,"user_name":"江厚宏","can_delete":false,"product_type":"c3","uid":1061214,"ip_address":"","ucode":"00A5A0995C6D75","user_header":"https://static001.geekbang.org/account/avatar/00/10/31/5e/d7cdc1d6.jpg","comment_is_top":false,"comment_ctime":1564130641,"is_pvip":true,"replies":[{"id":43155,"content":"从github上看，orika和modelmapper的历史时间差不多，都是2011 ～ 2019, orika有780星，modelmapper有1192星，两个差不多。\n\n参考：\nhttps:&#47;&#47;github.com&#47;orika-mapper&#47;orika&#47;graphs&#47;contributors\nhttps:&#47;&#47;github.com&#47;modelmapper&#47;modelmapper&#47;graphs&#47;contributors\nhttps:&#47;&#47;github.com&#47;modelmapper&#47;modelmapper&#47;graphs&#47;contributors\n","user_name":"作者回复","user_name_real":"杨波","uid":1030344,"ctime":1564146363,"ip_address":"","comment_id":117787,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100031401,"comment_content":"请问有人用过orika嘛？\nmodelmapper 和 orika建议选择哪个好？","like_count":0,"discussions":[{"author":{"id":1030344,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/b8/c8/c94d38a7.jpg","nickname":"杨波","note":"","ucode":"FA3418BB703BCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":460116,"discussion_content":"从github上看，orika和modelmapper的历史时间差不多，都是2011 ～ 2019, orika有780星，modelmapper有1192星，两个差不多。\n\n参考：\nhttps://github.com/orika-mapper/orika/graphs/contributors\nhttps://github.com/modelmapper/modelmapper/graphs/contributors\nhttps://github.com/modelmapper/modelmapper/graphs/contributors\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1564146363,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":115413,"user_name":"飞翔","can_delete":false,"product_type":"c3","uid":1068571,"ip_address":"","ucode":"65AF6AF292DAD6","user_header":"https://static001.geekbang.org/account/avatar/00/10/4e/1b/f4b786b9.jpg","comment_is_top":false,"comment_ctime":1563584284,"is_pvip":false,"replies":[{"id":42218,"content":"DAO = 数据访问对象，封装数据库操作的对象\nDMO = 数据模型对象，也称实体对象或领域对象，封装数据存储字段，主要用于持久化领域数据。\nDTO = 数据传输对象，也有称VO值对象，封装数据传输字段，主要用于在进程间传递数据。","user_name":"作者回复","user_name_real":"杨波","uid":1030344,"ctime":1563618458,"ip_address":"","comment_id":115413,"utype":1}],"discussion_count":2,"race_medal":0,"score":3,"product_id":100031401,"comment_content":"老师求教 DAO 和DMO 和DTO 有啥区别呀 ","like_count":0,"discussions":[{"author":{"id":1030344,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/b8/c8/c94d38a7.jpg","nickname":"杨波","note":"","ucode":"FA3418BB703BCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":459098,"discussion_content":"DAO = 数据访问对象，封装数据库操作的对象\nDMO = 数据模型对象，也称实体对象或领域对象，封装数据存储字段，主要用于持久化领域数据。\nDTO = 数据传输对象，也有称VO值对象，封装数据传输字段，主要用于在进程间传递数据。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1563618458,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1018972,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/8c/5c/3f164f66.jpg","nickname":"亚林","note":"","ucode":"4A5A6D24314B79","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":2740,"discussion_content":"我经常把DTO叫VO对象","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1563891242,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":114416,"user_name":"grey927","can_delete":false,"product_type":"c3","uid":1202782,"ip_address":"","ucode":"833E02ED835B4A","user_header":"https://static001.geekbang.org/account/avatar/00/12/5a/5e/a897cb0d.jpg","comment_is_top":false,"comment_ctime":1563293763,"is_pvip":false,"replies":[{"id":41840,"content":"支持，具体用法可以参考官方文档http:&#47;&#47;modelmapper.org&#47;","user_name":"作者回复","user_name_real":"杨波","uid":1030344,"ctime":1563363755,"ip_address":"","comment_id":114416,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100031401,"comment_content":"modelmapper支持copy包含复杂对象的dto吗？","like_count":0,"discussions":[{"author":{"id":1030344,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/b8/c8/c94d38a7.jpg","nickname":"杨波","note":"","ucode":"FA3418BB703BCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":458652,"discussion_content":"支持，具体用法可以参考官方文档http://modelmapper.org/","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1563363755,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":195350,"user_name":"彬清","can_delete":false,"product_type":"c3","uid":1220372,"ip_address":"","ucode":"04620BAC60F15F","user_header":"https://static001.geekbang.org/account/avatar/00/12/9f/14/b9505789.jpg","comment_is_top":false,"comment_ctime":1585182571,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":3,"product_id":100031401,"comment_content":" DAO = 数据访问对象，封装数据库操作的对象\nDMO = 数据模型对象，也称实体对象或领域对象，封装数据存储字段，主要用于持久化领域数据。\nDTO = 数据传输对象，也有称VO值对象，封装数据传输字段，主要用于在进程间传递数据。","like_count":0}]}