{"id":2269,"title":"09 | 微服务最经典的三种服务发现机制","content":"<p>无</p>\n","comments":[{"had_liked":false,"id":2378,"user_name":"LMD","can_delete":false,"product_type":"c3","uid":1013443,"ip_address":"","ucode":"7626FBB7A4E771","user_header":"","comment_is_top":true,"comment_ctime":1516964814,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":2,"product_id":100003901,"comment_content":"关于《微服务架构核心20讲》课程讲义（PDF 文件），学员可复制下面链接到浏览器下载获取。 http:&#47;&#47;t.cn&#47;RQs9iTw","like_count":10},{"had_liked":false,"id":39520,"user_name":"三道杠","can_delete":false,"product_type":"c3","uid":1149222,"ip_address":"","ucode":"4B3C2099AB9729","user_header":"https://static001.geekbang.org/account/avatar/00/11/89/26/a16788f6.jpg","comment_is_top":false,"comment_ctime":1542294368,"is_pvip":false,"replies":[{"id":16867,"content":"后面有想法，可参考下github.com&#47;Staffjoy上面的源源，这个创业公司项目最后业务没做成，但是把源码都贡献社区了，V1版是近似单体，V2版是微服务，可供研究学习。","user_name":"作者回复","user_name_real":"杨波","uid":1030344,"ctime":1544101795,"ip_address":"","comment_id":39520,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100003901,"comment_content":"老师，能讲一个复杂系统进行微服务改造的具体例子么","like_count":7,"discussions":[{"author":{"id":1030344,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/b8/c8/c94d38a7.jpg","nickname":"杨波","note":"","ucode":"FA3418BB703BCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":429095,"discussion_content":"后面有想法，可参考下github.com/Staffjoy上面的源源，这个创业公司项目最后业务没做成，但是把源码都贡献社区了，V1版是近似单体，V2版是微服务，可供研究学习。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1544101795,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":7218,"user_name":"Jason","can_delete":false,"product_type":"c3","uid":1081419,"ip_address":"","ucode":"E36F483135D366","user_header":"","comment_is_top":false,"comment_ctime":1525343912,"is_pvip":false,"replies":[{"id":2332,"content":"二是根据应用的语言需要开发针对该语言的客户端负责路由，应用语言越多，开发客户端就多。三是主机上部署一个独立LB进程专门负责路由，该主机上的应用（不管什么语言）就不需要专门开发客户端了","user_name":"作者回复","user_name_real":"杨波","uid":1030344,"ctime":1525874994,"ip_address":"","comment_id":7218,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100003901,"comment_content":"请教一下为什么二有多语言问题，而三就没有呢，不明白！","like_count":4,"discussions":[{"author":{"id":1030344,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/b8/c8/c94d38a7.jpg","nickname":"杨波","note":"","ucode":"FA3418BB703BCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":417282,"discussion_content":"二是根据应用的语言需要开发针对该语言的客户端负责路由，应用语言越多，开发客户端就多。三是主机上部署一个独立LB进程专门负责路由，该主机上的应用（不管什么语言）就不需要专门开发客户端了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1525874994,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":98016,"user_name":"一笔一画","can_delete":false,"product_type":"c3","uid":1495254,"ip_address":"","ucode":"2B9BC8ADF97106","user_header":"https://static001.geekbang.org/account/avatar/00/16/d0/d6/f335954b.jpg","comment_is_top":false,"comment_ctime":1558873656,"is_pvip":false,"replies":[{"id":35174,"content":"你好，一般有状态的服务如果要做高可用，那么主备模式是一种方案，例如DB或者Cache等。但是微服务一般建议无状态部署，这样可以水平扩展，不需要主备。","user_name":"作者回复","user_name_real":"杨波","uid":1030344,"ctime":1558960724,"ip_address":"","comment_id":98016,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100003901,"comment_content":"请教一下，微服务有主备模式吗？","like_count":3,"discussions":[{"author":{"id":1030344,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/b8/c8/c94d38a7.jpg","nickname":"杨波","note":"","ucode":"FA3418BB703BCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":451518,"discussion_content":"你好，一般有状态的服务如果要做高可用，那么主备模式是一种方案，例如DB或者Cache等。但是微服务一般建议无状态部署，这样可以水平扩展，不需要主备。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1558960724,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":90418,"user_name":"蓝枫叶","can_delete":false,"product_type":"c3","uid":1064738,"ip_address":"","ucode":"36AF3D8956D024","user_header":"https://static001.geekbang.org/account/avatar/00/10/3f/22/3a026bef.jpg","comment_is_top":false,"comment_ctime":1556515202,"is_pvip":false,"replies":[{"id":32487,"content":"ectd是一种轻量级的服务注册发现产品，类似的除了eureka，还有zookeeper或者consul等。","user_name":"作者回复","user_name_real":"杨波","uid":1030344,"ctime":1556627562,"ip_address":"","comment_id":90418,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100003901,"comment_content":"老师，我们最近使用的是etcd作为服务注册容器，微服务网关订阅服务变化","like_count":2,"discussions":[{"author":{"id":1030344,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/b8/c8/c94d38a7.jpg","nickname":"杨波","note":"","ucode":"FA3418BB703BCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":448514,"discussion_content":"ectd是一种轻量级的服务注册发现产品，类似的除了eureka，还有zookeeper或者consul等。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1556627562,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":37692,"user_name":"脸不大","can_delete":false,"product_type":"c3","uid":1285439,"ip_address":"","ucode":"569B5E18849C09","user_header":"https://static001.geekbang.org/account/avatar/00/13/9d/3f/d5589058.jpg","comment_is_top":false,"comment_ctime":1541682409,"is_pvip":false,"replies":[{"id":13565,"content":"谢谢支持🌹加油💪","user_name":"作者回复","user_name_real":"杨波","uid":1030344,"ctime":1541684686,"ip_address":"","comment_id":37692,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100003901,"comment_content":"醍醐灌顶，做了大半年的微服务，总是跟着公司架构人员做，有所理解但迷迷糊糊，看了杨老师的这套视频，终于豁然开朗","like_count":2,"discussions":[{"author":{"id":1030344,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/b8/c8/c94d38a7.jpg","nickname":"杨波","note":"","ucode":"FA3418BB703BCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":428449,"discussion_content":"谢谢支持🌹加油💪","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1541684686,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":14216,"user_name":"meijing0114","can_delete":false,"product_type":"c3","uid":1012416,"ip_address":"","ucode":"B349D33E2F3ECC","user_header":"https://static001.geekbang.org/account/avatar/00/0f/72/c0/b09911a0.jpg","comment_is_top":false,"comment_ctime":1530234727,"is_pvip":false,"replies":[{"id":5078,"content":"👍你很有经验，用过很多开源微服务组件，理解很深","user_name":"作者回复","user_name_real":"杨波","uid":1030344,"ctime":1530893917,"ip_address":"","comment_id":14216,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100003901,"comment_content":"听到最后的主机独立LB，就想说service mesh了。通过service mesh的方式，是可以避免为不同语言开发的客户端来提供服务远程调用的适配的。我自己使用过：nginx进行服务发现、腾讯的L5进行服务发现（本地agent，定期同步，但各语言成本确实非常高）、TARS微服务框架的主控调用服务发现（调用远程名字服务+客户端本地缓存）、TSEER负载均衡器（同样本地agent，但是以udp方式通信，无需额外适配）。","like_count":2,"discussions":[{"author":{"id":1030344,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/b8/c8/c94d38a7.jpg","nickname":"杨波","note":"","ucode":"FA3418BB703BCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":419916,"discussion_content":"👍你很有经验，用过很多开源微服务组件，理解很深","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1530893917,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":9916,"user_name":"志远","can_delete":false,"product_type":"c3","uid":1108762,"ip_address":"","ucode":"11015D14034130","user_header":"https://static001.geekbang.org/account/avatar/00/10/eb/1a/579c941e.jpg","comment_is_top":false,"comment_ctime":1527157650,"is_pvip":false,"replies":[{"id":3054,"content":"第二种是客户端软负载，负载均衡和路由逻辑是做在客户端的库里头的，不同的语言需要不同的客户端实现，比如Netflix的Eureka+Ribbon，Ribbon就是客户端，目前只支持Java，如果其它语言也要接入，则需要定制实现类似Ribbon的负载均衡和路由逻辑。","user_name":"作者回复","user_name_real":"杨波","uid":1030344,"ctime":1527163784,"ip_address":"","comment_id":9916,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100003901,"comment_content":"老师好，请问为什么第二种方式需要为每种语言开发一个版本呢？此话怎讲？为什么这样","like_count":2,"discussions":[{"author":{"id":1030344,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/b8/c8/c94d38a7.jpg","nickname":"杨波","note":"","ucode":"FA3418BB703BCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":418254,"discussion_content":"第二种是客户端软负载，负载均衡和路由逻辑是做在客户端的库里头的，不同的语言需要不同的客户端实现，比如Netflix的Eureka+Ribbon，Ribbon就是客户端，目前只支持Java，如果其它语言也要接入，则需要定制实现类似Ribbon的负载均衡和路由逻辑。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1527163784,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":110156,"user_name":"在路上的狮子","can_delete":false,"product_type":"c3","uid":1446244,"ip_address":"","ucode":"9522806D051759","user_header":"https://static001.geekbang.org/account/avatar/00/16/11/64/e3c92856.jpg","comment_is_top":false,"comment_ctime":1562202546,"is_pvip":true,"replies":[{"id":40048,"content":"从技术角度看，可以简单理解为中台大部分都是微服务实现。因为中台不仅是一个技术问题，同时还设计组织架构，甚至业务，所以它的内涵更广。","user_name":"作者回复","user_name_real":"杨波","uid":1030344,"ctime":1562241988,"ip_address":"","comment_id":110156,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100003901,"comment_content":"杨老师，对于业务中台来说，是微服务来实现的。是这样理解吗？","like_count":1,"discussions":[{"author":{"id":1030344,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/b8/c8/c94d38a7.jpg","nickname":"杨波","note":"","ucode":"FA3418BB703BCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":456750,"discussion_content":"从技术角度看，可以简单理解为中台大部分都是微服务实现。因为中台不仅是一个技术问题，同时还设计组织架构，甚至业务，所以它的内涵更广。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1562241988,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":10207,"user_name":"Geek_ysedro","can_delete":false,"product_type":"c3","uid":1072823,"ip_address":"","ucode":"ED2FE2FCD0F5B3","user_header":"https://static001.geekbang.org/account/avatar/00/10/5e/b7/e762deb7.jpg","comment_is_top":false,"comment_ctime":1527347295,"is_pvip":false,"replies":[{"id":3372,"content":"第三种主机独立进程lb相当于在主机上布了一个代理proxy，请求和响应都要穿透的。","user_name":"作者回复","user_name_real":"杨波","uid":1030344,"ctime":1527611618,"ip_address":"","comment_id":10207,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100003901,"comment_content":"老师您好，采用第三种lb将请求路由出去，请求响应回来是直接到消费者吗？还是还需要经过lb，再回到消费者？","like_count":1,"discussions":[{"author":{"id":1030344,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/b8/c8/c94d38a7.jpg","nickname":"杨波","note":"","ucode":"FA3418BB703BCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":418391,"discussion_content":"第三种主机独立进程lb相当于在主机上布了一个代理proxy，请求和响应都要穿透的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1527611618,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":9915,"user_name":"志远","can_delete":false,"product_type":"c3","uid":1108762,"ip_address":"","ucode":"11015D14034130","user_header":"https://static001.geekbang.org/account/avatar/00/10/eb/1a/579c941e.jpg","comment_is_top":false,"comment_ctime":1527157647,"is_pvip":false,"replies":[{"id":3055,"content":"第二种是客户端软负载，负载均衡和路由逻辑是做在客户端的库里头的，不同的语言需要不同的客户端实现，比如Netflix的Eureka+Ribbon，Ribbon就是客户端，目前只支持Java，如果其它语言也要接入，则需要定制实现类似Ribbon的负载均衡和路由逻辑。","user_name":"作者回复","user_name_real":"杨波","uid":1030344,"ctime":1527163789,"ip_address":"","comment_id":9915,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100003901,"comment_content":"为什么第二种方式需要为每种语言开发一个版本呢？此话怎讲？为什么这样","like_count":1,"discussions":[{"author":{"id":1030344,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/b8/c8/c94d38a7.jpg","nickname":"杨波","note":"","ucode":"FA3418BB703BCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":418253,"discussion_content":"第二种是客户端软负载，负载均衡和路由逻辑是做在客户端的库里头的，不同的语言需要不同的客户端实现，比如Netflix的Eureka+Ribbon，Ribbon就是客户端，目前只支持Java，如果其它语言也要接入，则需要定制实现类似Ribbon的负载均衡和路由逻辑。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1527163789,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":8174,"user_name":"LEON","can_delete":false,"product_type":"c3","uid":1109922,"ip_address":"","ucode":"58F7AF5302FCAD","user_header":"https://static001.geekbang.org/account/avatar/00/10/ef/a2/6ea5bb9e.jpg","comment_is_top":false,"comment_ctime":1525946252,"is_pvip":false,"replies":[{"id":2432,"content":"谢支持🌹","user_name":"作者回复","user_name_real":"杨波","uid":1030344,"ctime":1526045311,"ip_address":"","comment_id":8174,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100003901,"comment_content":"内容非常赞。","like_count":1,"discussions":[{"author":{"id":1030344,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/b8/c8/c94d38a7.jpg","nickname":"杨波","note":"","ucode":"FA3418BB703BCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":417613,"discussion_content":"谢支持🌹","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1526045311,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":8173,"user_name":"LEON","can_delete":false,"product_type":"c3","uid":1109922,"ip_address":"","ucode":"58F7AF5302FCAD","user_header":"https://static001.geekbang.org/account/avatar/00/10/ef/a2/6ea5bb9e.jpg","comment_is_top":false,"comment_ctime":1525946213,"is_pvip":false,"replies":[{"id":2456,"content":"提供方一般是提供服务的服务器端，消费方就是调用其它服务的应用程序，有时一个应用既是服务提供方，也是服务消费方（既提供服务同时也调用其它服务）。第一种一般不支持自注册和自发现，一般由运维静态配置，当然也可以扩展支持自注册自发现，作为思考题，你自己调研思考一下","user_name":"作者回复","user_name_real":"杨波","uid":1030344,"ctime":1526137812,"ip_address":"","comment_id":8173,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100003901,"comment_content":"老师您好。服务消费方具体指的是什么？是个客户端还是一个业务模块。还是什么？能否具体指一下吗？还有第一种是不是没有服务注册表就无法进行服务的自动发现？谢谢","like_count":1,"discussions":[{"author":{"id":1030344,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/b8/c8/c94d38a7.jpg","nickname":"杨波","note":"","ucode":"FA3418BB703BCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":417612,"discussion_content":"提供方一般是提供服务的服务器端，消费方就是调用其它服务的应用程序，有时一个应用既是服务提供方，也是服务消费方（既提供服务同时也调用其它服务）。第一种一般不支持自注册和自发现，一般由运维静态配置，当然也可以扩展支持自注册自发现，作为思考题，你自己调研思考一下","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1526137812,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":8172,"user_name":"LEON","can_delete":false,"product_type":"c3","uid":1109922,"ip_address":"","ucode":"58F7AF5302FCAD","user_header":"https://static001.geekbang.org/account/avatar/00/10/ef/a2/6ea5bb9e.jpg","comment_is_top":false,"comment_ctime":1525945615,"is_pvip":false,"replies":[{"id":2457,"content":"envoy+istio目前比较热，搜一下，资料其网站上有不少，可以学习，但目前service mesh大规模生产级应用还不多，产品大都不成熟，建议先学习调研为主","user_name":"作者回复","user_name_real":"杨波","uid":1030344,"ctime":1526138059,"ip_address":"","comment_id":8172,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100003901,"comment_content":"service mesh proxy除了LB是否还有其它功能，能否推荐一下具体产品，后面是否会对其具体介绍，目前有什么学习材料。谢谢。","like_count":1,"discussions":[{"author":{"id":1030344,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/b8/c8/c94d38a7.jpg","nickname":"杨波","note":"","ucode":"FA3418BB703BCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":417611,"discussion_content":"envoy+istio目前比较热，搜一下，资料其网站上有不少，可以学习，但目前service mesh大规模生产级应用还不多，产品大都不成熟，建议先学习调研为主","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1526138059,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":218457,"user_name":"我来也","can_delete":false,"product_type":"c3","uid":1205253,"ip_address":"","ucode":"773D6104F56767","user_header":"https://static001.geekbang.org/account/avatar/00/12/64/05/6989dce6.jpg","comment_is_top":false,"comment_ctime":1589804628,"is_pvip":false,"replies":[{"id":80881,"content":"你们公司已经落地用istio了吗？","user_name":"作者回复","user_name_real":"杨波","uid":1030344,"ctime":1589899045,"ip_address":"","comment_id":218457,"utype":1}],"discussion_count":2,"race_medal":0,"score":3,"product_id":100003901,"comment_content":"哈哈,现在的Istio还算比较成熟了.\nistio应该是比较典型的第三种模式.\n目前是每一个pod里有一个sidecar,有时比较浪费,如果一个节点上只有一个代理,所有的pod共享这个代理,可能效果更好.","like_count":0,"discussions":[{"author":{"id":1030344,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/b8/c8/c94d38a7.jpg","nickname":"杨波","note":"","ucode":"FA3418BB703BCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":495464,"discussion_content":"你们公司已经落地用istio了吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1589899045,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1205253,"avatar":"https://static001.geekbang.org/account/avatar/00/12/64/05/6989dce6.jpg","nickname":"我来也","note":"","ucode":"773D6104F56767","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":269431,"discussion_content":"哈哈，并没有落地。\n\n我应该说错了，现在Istio虽然版本是1.5.4，但是变动实在是太频繁的，应该算不上成熟。\n引用Jimmy Song的话：\ncause Istio released so fast that even once a book finished it will be out-of-dated.","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1589901119,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":38756,"user_name":"张闯","can_delete":false,"product_type":"c3","uid":1090513,"ip_address":"","ucode":"D5AD46A8DD6FB7","user_header":"https://static001.geekbang.org/account/avatar/00/10/a3/d1/a30a4d06.jpg","comment_is_top":false,"comment_ctime":1542121675,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":3,"product_id":100003901,"comment_content":"电商系统用户下单时，需要根据商品价格来计算订单总价。所以，订单服务需要调用商品服务。由于两个服务部署在不同的机器上，所以订单服务需要知道去哪里找到商品服务，即商品服务的IP和端口号是什么。\n所谓的服务发现，就是如何让订单服务知道商品服务的具体位置。\n方案一：\n为商品服务配置二级域名。订单服务访问约定好的域名来访问商品服务。域名会被DNS服务解析到一级域名对应的服务器上，该服务器是一个负载均衡服务器，会根据二级域名来将来自订单服务的请求转发到某一台部署了商品服务的服务器上。\n方案二：\n商品服务将自己注册到注册表中，并与注册表保持心跳通信，表明自己还活着。订单服务去注册表中拉取商品服务的地址信息，然后订单服务选择某一台部署商品服务的服务器，直接向商品服务发起请求。\n方案三：\n商品服务将自己注册到注册表中，并与注册表保持心跳通信，表明自己还活着。订单服务这一端定义了一个指向商品服务的代理层。这个代理层从注册表拉取商品服务的地址信息，并实现了负载均衡算法。订单服务直接在进程内访问该代理层暴露的商品接口。\n\nService Mesh更像第三个方案模型。看了Service Mesh的介绍，牛逼。","like_count":15},{"had_liked":false,"id":2344,"user_name":"杨波","can_delete":false,"product_type":"c3","uid":1030344,"ip_address":"","ucode":"FA3418BB703BCA","user_header":"https://static001.geekbang.org/account/avatar/00/0f/b8/c8/c94d38a7.jpg","comment_is_top":false,"comment_ctime":1516846820,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":3,"product_id":100003901,"comment_content":"容器部署的话，建议每个容器部署一个独立进程LB（或者说Service Mesh Proxy），这样隔离性更好，容器内的LB挂了，只影响那个容器，主机上其它容器不受影响。如果容器共享主机上的独立进程LB的话，则如果主机上的LB挂了，则整个主机上的容器全部受影响。","like_count":11},{"had_liked":false,"id":2254,"user_name":"曾凡伟","can_delete":false,"product_type":"c3","uid":1006496,"ip_address":"","ucode":"645972A8AD4209","user_header":"https://static001.geekbang.org/account/avatar/00/0f/5b/a0/c5293d3f.jpg","comment_is_top":false,"comment_ctime":1516508121,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":3,"product_id":100003901,"comment_content":"请教杨老师一个问题：第三种方式主机LB，如果是采用容器的部署方式，那么这个LB是部署在容器内被独享呢，还是部署在容器的宿主机中被多个容器中的微服务共享呢？","like_count":8},{"had_liked":false,"id":2236,"user_name":"天涯若海","can_delete":false,"product_type":"c3","uid":1029289,"ip_address":"","ucode":"C9ADC590034CA7","user_header":"https://static001.geekbang.org/account/avatar/00/0f/b4/a9/abb7bfe3.jpg","comment_is_top":false,"comment_ctime":1516439126,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":3,"product_id":100003901,"comment_content":"service mesh采用的第三种，类似sidecar的概念。之前对lb一直都是模糊概念，杨老师总结很到位，学习了。","like_count":5},{"had_liked":false,"id":180981,"user_name":"钱","can_delete":false,"product_type":"c3","uid":1009652,"ip_address":"","ucode":"2C92A243A463D4","user_header":"https://static001.geekbang.org/account/avatar/00/0f/67/f4/9a1feb59.jpg","comment_is_top":false,"comment_ctime":1582452595,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":3,"product_id":100003901,"comment_content":"嗯，赞👍，小结一下，微服务三种经典的服务发现设计思路：\n1：静态域名解析，LB在服务消费者和提供者之间，优势简单，不足存在单点问题以及性能损耗\n2：集中式注册中心，LB和消费者客户端耦合在一块，优势没有单点问题，没有中间性能损耗，劣势LB和消费者客户端耦合紧密，多语言需要定制化客户端\n3：类似 service mesh 的方式，LB和消费者客户端解藕，LB相当于一个代理层，优势多语言支持好，不足代理应该有一定性能损耗，另外还不太成熟\n\n三种方式的核心不同点在于LB所在的位置，不同的位置代表不同的模式，有不同的特点，目前第二种是主流。","like_count":4},{"had_liked":false,"id":200847,"user_name":"郭新鹏","can_delete":false,"product_type":"c3","uid":1154281,"ip_address":"","ucode":"F9D76691B335FC","user_header":"https://static001.geekbang.org/account/avatar/00/11/9c/e9/5ba8b1a3.jpg","comment_is_top":false,"comment_ctime":1585660649,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":4,"product_id":100003901,"comment_content":"百度的BNS，服务发现就是采用的第二种。\n\n服务注册，服务发现都是长连接的比较好点，因为在上线的过程中，可能直接干掉了某台机器，如果是定期的心跳，就存在延迟。","like_count":2},{"had_liked":false,"id":49004,"user_name":"探索无止境","can_delete":false,"product_type":"c3","uid":1044178,"ip_address":"","ucode":"91D2A9907DFA79","user_header":"https://static001.geekbang.org/account/avatar/00/0f/ee/d2/7024431c.jpg","comment_is_top":false,"comment_ctime":1544587218,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":4,"product_id":100003901,"comment_content":"杨老师您好，我认为第二种服务发现的模式就是dubbo的这种架构，这种模式适用于web层作为消费者，service层作为生产者，zookeeper作为注册中心，内部的服务调用的场景。当我们需要将服务发布到外部，给普通用户调用时，这个时候，用户访问的是web层提供的服务，而web层还是需要用nginx这样的软件来做负载均衡，这个理解是否正确？","like_count":2},{"had_liked":false,"id":49085,"user_name":"探索无止境","can_delete":false,"product_type":"c3","uid":1044178,"ip_address":"","ucode":"91D2A9907DFA79","user_header":"https://static001.geekbang.org/account/avatar/00/0f/ee/d2/7024431c.jpg","comment_is_top":false,"comment_ctime":1544600862,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":4,"product_id":100003901,"comment_content":"杨老师你好，注册中心的选择有zookeeper和eureka，zookeeper是CP设计，eureka是AP设计，在项目的开发中，两者该如何选择？或者说是不是混搭使用？","like_count":0}]}