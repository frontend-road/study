{"id":111269,"title":"04 | 如何利用事务消息实现分布式事务？","content":"<p>你好，我是李玥，今天我们来聊一聊消息和事务。</p><p>一说起事务，你可能自然会联想到数据库。的确，我们日常使用事务的场景，绝大部分都是在操作数据库的时候。像MySQL、Oracle这些主流的关系型数据库，也都提供了完整的事务实现。那消息队列为什么也需要事务呢？</p><p>其实很多场景下，我们“发消息”这个过程，目的往往是通知另外一个系统或者模块去更新数据，<strong>消息队列中的“事务”，主要解决的是消息生产者和消息消费者的数据一致性问题。</strong></p><p>依然拿我们熟悉的电商来举个例子。一般来说，用户在电商APP上购物时，先把商品加到购物车里，然后几件商品一起下单，最后支付，完成购物流程，就可以愉快地等待收货了。</p><p>这个过程中有一个需要用到消息队列的步骤，订单系统创建订单后，发消息给购物车系统，将已下单的商品从购物车中删除。因为从购物车删除已下单商品这个步骤，并不是用户下单支付这个主要流程中必需的步骤，使用消息队列来异步清理购物车是更加合理的设计。</p><p><img src=\"https://static001.geekbang.org/resource/image/d6/00/d6efbd1a48cb0d1cd352587f233c2500.jpg?wh=4146*1079\" alt=\"\"></p><p>对于订单系统来说，它创建订单的过程中实际上执行了2个步骤的操作：</p><ol>\n<li>在订单库中插入一条订单数据，创建订单；</li>\n<li>发消息给消息队列，消息的内容就是刚刚创建的订单。</li>\n</ol><p>购物车系统订阅相应的主题，接收订单创建的消息，然后清理购物车，在购物车中删除订单中的商品。</p><!-- [[[read_end]]] --><p>在分布式系统中，上面提到的这些步骤，任何一个步骤都有可能失败，如果不做任何处理，那就有可能出现订单数据与购物车数据不一致的情况，比如说：</p><ul>\n<li>创建了订单，没有清理购物车；</li>\n<li>订单没创建成功，购物车里面的商品却被清掉了。</li>\n</ul><p>那我们需要解决的问题可以总结为：在上述任意步骤都有可能失败的情况下，还要保证订单库和购物车库这两个库的数据一致性。</p><p>对于购物车系统收到订单创建成功消息清理购物车这个操作来说，失败的处理比较简单，只要成功执行购物车清理后再提交消费确认即可，如果失败，由于没有提交消费确认，消息队列会自动重试。</p><p>问题的关键点集中在订单系统，创建订单和发送消息这两个步骤要么都操作成功，要么都操作失败，不允许一个成功而另一个失败的情况出现。</p><p>这就是事务需要解决的问题。</p><h2>什么是分布式事务？</h2><p>那什么是事务呢？如果我们需要对若干数据进行更新操作，为了保证这些数据的完整性和一致性，我们希望这些更新操作<strong>要么都成功，要么都失败。</strong>至于更新的数据，不只局限于数据库中的数据，可以是磁盘上的一个文件，也可以是远端的一个服务，或者以其他形式存储的数据。</p><p>这就是通常我们理解的事务。其实这段对事务的描述不是太准确也不完整，但是，它更易于理解，大体上也是正确的。所以我还是倾向于这样来讲“事务”这个比较抽象的概念。</p><p>一个严格意义的事务实现，应该具有4个属性：原子性、一致性、隔离性、持久性。这四个属性通常称为ACID特性。</p><p>原子性，是指一个事务操作不可分割，要么成功，要么失败，不能有一半成功一半失败的情况。</p><p>一致性，是指这些数据在事务执行完成这个时间点之前，读到的一定是更新前的数据，之后读到的一定是更新后的数据，不应该存在一个时刻，让用户读到更新过程中的数据。</p><p>隔离性，是指一个事务的执行不能被其他事务干扰。即一个事务内部的操作及使用的数据对正在进行的其他事务是隔离的，并发执行的各个事务之间不能互相干扰，这个有点儿像我们打网游中的副本，我们在副本中打的怪和掉的装备，与其他副本没有任何关联也不会互相影响。</p><p>持久性，是指一个事务一旦完成提交，后续的其他操作和故障都不会对事务的结果产生任何影响。</p><p>大部分传统的单体关系型数据库都完整的实现了ACID，但是，对于分布式系统来说，严格的实现ACID这四个特性几乎是不可能的，或者说实现的代价太大，大到我们无法接受。</p><p>分布式事务就是要在分布式系统中的实现事务。在分布式系统中，在保证可用性和不严重牺牲性能的前提下，光是要实现数据的一致性就已经非常困难了，所以出现了很多“残血版”的一致性，比如顺序一致性、最终一致性等等。</p><p>显然实现严格的分布式事务是更加不可能完成的任务。所以，目前大家所说的分布式事务，更多情况下，是在分布式系统中事务的不完整实现。在不同的应用场景中，有不同的实现，目的都是通过一些妥协来解决实际问题。</p><p>在实际应用中，比较常见的分布式事务实现有2PC（Two-phase Commit，也叫二阶段提交）、TCC(Try-Confirm-Cancel)和事务消息。每一种实现都有其特定的使用场景，也有各自的问题，都不是完美的解决方案。</p><p>事务消息适用的场景主要是那些需要异步更新数据，并且对数据实时性要求不太高的场景。比如我们在开始时提到的那个例子，在创建订单后，如果出现短暂的几秒，购物车里的商品没有被及时清空，也不是完全不可接受的，只要最终购物车的数据和订单数据保持一致就可以了。</p><p>2PC和TCC不是我们本次课程讨论的内容，就不展开讲了，感兴趣的同学可以自行学习。</p><h2>消息队列是如何实现分布式事务的？</h2><p>事务消息需要消息队列提供相应的功能才能实现，Kafka和RocketMQ都提供了事务相关功能。</p><p>回到订单和购物车这个例子，我们一起来看下如何用消息队列来实现分布式事务。</p><p><img src=\"https://static001.geekbang.org/resource/image/27/e6/27ebf12e0dc79e00e1e42c8ff0f4e2e6.jpg?wh=3778*1285\" alt=\"\"></p><p>首先，订单系统在消息队列上开启一个事务。然后订单系统给消息服务器发送一个“半消息”，这个半消息不是说消息内容不完整，它包含的内容就是完整的消息内容，半消息和普通消息的唯一区别是，在事务提交之前，对于消费者来说，这个消息是不可见的。</p><p>半消息发送成功后，订单系统就可以执行本地事务了，在订单库中创建一条订单记录，并提交订单库的数据库事务。然后根据本地事务的执行结果决定提交或者回滚事务消息。如果订单创建成功，那就提交事务消息，购物车系统就可以消费到这条消息继续后续的流程。如果订单创建失败，那就回滚事务消息，购物车系统就不会收到这条消息。这样就基本实现了“要么都成功，要么都失败”的一致性要求。</p><p>如果你足够细心，可能已经发现了，这个实现过程中，有一个问题是没有解决的。如果在第四步提交事务消息时失败了怎么办？对于这个问题，Kafka和RocketMQ给出了2种不同的解决方案。</p><p>Kafka的解决方案比较简单粗暴，直接抛出异常，让用户自行处理。我们可以在业务代码中反复重试提交，直到提交成功，或者删除之前创建的订单进行补偿。RocketMQ则给出了另外一种解决方案。</p><h2>RocketMQ中的分布式事务实现</h2><p>在RocketMQ中的事务实现中，增加了事务反查的机制来解决事务消息提交失败的问题。如果Producer也就是订单系统，在提交或者回滚事务消息时发生网络异常，RocketMQ的Broker没有收到提交或者回滚的请求，Broker会定期去Producer上反查这个事务对应的本地事务的状态，然后根据反查结果决定提交或者回滚这个事务。</p><p>为了支撑这个事务反查机制，我们的业务代码需要实现一个反查本地事务状态的接口，告知RocketMQ本地事务是成功还是失败。</p><p>在我们这个例子中，反查本地事务的逻辑也很简单，我们只要根据消息中的订单ID，在订单库中查询这个订单是否存在即可，如果订单存在则返回成功，否则返回失败。RocketMQ会自动根据事务反查的结果提交或者回滚事务消息。</p><p>这个反查本地事务的实现，并不依赖消息的发送方，也就是订单服务的某个实例节点上的任何数据。这种情况下，即使是发送事务消息的那个订单服务节点宕机了，RocketMQ依然可以通过其他订单服务的节点来执行反查，确保事务的完整性。</p><p>综合上面讲的通用事务消息的实现和RocketMQ的事务反查机制，使用RocketMQ事务消息功能实现分布式事务的流程如下图：</p><p><img src=\"https://static001.geekbang.org/resource/image/11/7a/11ea249b164b893fb9c36e86ae32577a.jpg?wh=3714*1490\" alt=\"\"></p><h2>小结</h2><p>我们通过一个订单购物车的例子，学习了事务的ACID四个特性，以及如何使用消息队列来实现分布式事务。</p><p>然后我们给出了现有的几种分布式事务的解决方案，包括事务消息，但是这几种方案都不能解决分布式系统中的所有问题，每一种方案都有局限性和特定的适用场景。</p><p>最后，我们一起学习了RocketMQ的事务反查机制，这种机制通过定期反查事务状态，来补偿提交事务消息可能出现的通信失败。在Kafka的事务功能中，并没有类似的反查机制，需要用户自行去解决这个问题。</p><p>但是，这不代表RocketMQ的事务功能比Kafka更好，只能说在我们这个例子的场景下，更适合使用RocketMQ。Kafka对于事务的定义、实现和适用场景，和RocketMQ有比较大的差异，后面的课程中，我们会专门讲到Kafka的事务的实现原理。</p><h2>思考题</h2><p>课后，我建议你最好能通过写代码的方式，把我们这节课中的订单购物车的例子，用RocketMQ完整地实现出来。然后再思考一下，RocketMQ的这种事务消息是不是完整地实现了事务的ACID四个特性？如果不是，哪些特性没有实现？欢迎在留言区与我分享讨论。</p><p>感谢阅读，如果你觉得这篇文章对你有一些启发，也欢迎把它分享给你的朋友。</p><p></p>","neighbors":{"left":{"article_title":"03 | 消息模型：主题和队列有什么区别？","id":110459},"right":{"article_title":"05 | 如何确保消息不会丢失?","id":111488}},"comments":[{"had_liked":false,"id":118756,"user_name":"一步","can_delete":false,"product_type":"c1","uid":1005391,"ip_address":"","ucode":"73CEA468CE70C3","user_header":"https://static001.geekbang.org/account/avatar/00/0f/57/4f/6fb51ff1.jpg","comment_is_top":false,"comment_ctime":1564445765,"is_pvip":true,"replies":[{"id":"43548","content":"考虑这样一种情况：订单创建成功了，还没来得及发消息，这个节点突然断电了。","user_name":"作者回复","comment_id":118756,"uid":"1501046","ip_address":"","utype":1,"ctime":1564451881,"user_name_real":"李玥"}],"discussion_count":42,"race_medal":1,"score":"804723330117","product_id":100032301,"comment_content":"对于上面订单的例子，为什么不等待订单创建成功再向消息队列发送订单数据呢？这样串行的话，对性能影响应该也不大，也不用考虑订单创建失败而发送消息的情况了。","like_count":188,"discussions":[{"author":{"id":1359701,"avatar":"https://static001.geekbang.org/account/avatar/00/14/bf/55/198c6104.jpg","nickname":"小伟","note":"","ucode":"124953423491E2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":115608,"discussion_content":"事务消息发送确认不放在本地事务里，还有个好处，是提高吞吐量。甚至订单系统在完成本地事务提交后就可以返回了，由消息队列broker通过反查机制来提交事务消息，订单系统可以一直专注在订单事务提交上。","likes_number":23,"is_delete":false,"is_hidden":false,"ctime":1578022102,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1337709,"avatar":"https://static001.geekbang.org/account/avatar/00/14/69/6d/3e3cef80.jpg","nickname":"Actor","note":"","ucode":"81FB947B43D157","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":12446,"discussion_content":"去哪儿的qmq队列是将消息表和业务表放在一个库里，这样就利用了数据库的事务保证了一致性，消息表里的消息再通过调度任务发到broker。","likes_number":20,"is_delete":false,"is_hidden":false,"ctime":1568532131,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":4,"child_discussions":[{"author":{"id":1359353,"avatar":"https://static001.geekbang.org/account/avatar/00/14/bd/f9/99c931bf.jpg","nickname":"wendell","note":"","ucode":"40E47FED3124FA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1337709,"avatar":"https://static001.geekbang.org/account/avatar/00/14/69/6d/3e3cef80.jpg","nickname":"Actor","note":"","ucode":"81FB947B43D157","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":70473,"discussion_content":"这相当于是通过本地消息表的方式实现的分布式事务","likes_number":5,"is_delete":false,"is_hidden":false,"ctime":1575360080,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":12446,"ip_address":""},"score":70473,"extra":""},{"author":{"id":1692942,"avatar":"https://static001.geekbang.org/account/avatar/00/19/d5/0e/dae566c7.jpg","nickname":"JOHN","note":"","ucode":"6936DE275AA543","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1337709,"avatar":"https://static001.geekbang.org/account/avatar/00/14/69/6d/3e3cef80.jpg","nickname":"Actor","note":"","ucode":"81FB947B43D157","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":257362,"discussion_content":"这是一个最终一致性的方案，就有一个时间窗口可以看到新创建的订单和未删除的购物车列表","likes_number":6,"is_delete":false,"is_hidden":false,"ctime":1588562220,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":12446,"ip_address":""},"score":257362,"extra":""},{"author":{"id":1282648,"avatar":"https://static001.geekbang.org/account/avatar/00/13/92/58/b4f6365d.jpg","nickname":"小北","note":"","ucode":"3A23079E4AA92E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1337709,"avatar":"https://static001.geekbang.org/account/avatar/00/14/69/6d/3e3cef80.jpg","nickname":"Actor","note":"","ucode":"81FB947B43D157","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":341786,"discussion_content":"那如果调度失败呢？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1610523603,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":12446,"ip_address":""},"score":341786,"extra":""}]},{"author":{"id":1065819,"avatar":"https://static001.geekbang.org/account/avatar/00/10/43/5b/17fef3ba.jpg","nickname":"我瑟瑟的方法","note":"","ucode":"1364CD531E1B72","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":3907,"discussion_content":"断电的概率也太低了，还是先创建再发送才是最佳实践","likes_number":7,"is_delete":false,"is_hidden":false,"ctime":1564969276,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":4,"child_discussions":[{"author":{"id":1298469,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eq9VtNjib9NB0JR1ljFhB3jorx3b2ZhDk5kTEJmjIzPTicItLWzdicib4s6TZC8e6TzPlbxoKDGNtGibtw/132","nickname":"Geek_cd99c1","note":"","ucode":"16A159942B9CB2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1065819,"avatar":"https://static001.geekbang.org/account/avatar/00/10/43/5b/17fef3ba.jpg","nickname":"我瑟瑟的方法","note":"","ucode":"1364CD531E1B72","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":7254,"discussion_content":"网络波动也可能导致发送失败。。","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1567431374,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":3907,"ip_address":""},"score":7254,"extra":""},{"author":{"id":1119231,"avatar":"https://static001.geekbang.org/account/avatar/00/11/13/ff/985ead3c.jpg","nickname":"su","note":"","ucode":"DA3C0EC7F69DC6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1065819,"avatar":"https://static001.geekbang.org/account/avatar/00/10/43/5b/17fef3ba.jpg","nickname":"我瑟瑟的方法","note":"","ucode":"1364CD531E1B72","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":144230,"discussion_content":"非平滑的服务发布也有可能造成这种情况","likes_number":6,"is_delete":false,"is_hidden":false,"ctime":1579523417,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":3907,"ip_address":""},"score":144230,"extra":""},{"author":{"id":1207622,"avatar":"https://static001.geekbang.org/account/avatar/00/12/6d/46/e16291f8.jpg","nickname":"丁小明","note":"","ucode":"CC23857B8D75D5","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1298469,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eq9VtNjib9NB0JR1ljFhB3jorx3b2ZhDk5kTEJmjIzPTicItLWzdicib4s6TZC8e6TzPlbxoKDGNtGibtw/132","nickname":"Geek_cd99c1","note":"","ucode":"16A159942B9CB2","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":248098,"discussion_content":"网络波动其应该并不影响，只要重试即可。这种没有半消息的情况 只有中间中断，本地无法判断是否提交","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1587830237,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":7254,"ip_address":""},"score":248098,"extra":""}]},{"author":{"id":1879262,"avatar":"https://static001.geekbang.org/account/avatar/00/1c/ac/de/68f35320.jpg","nickname":"小来子","note":"","ucode":"4EDAF31E43B211","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":380802,"discussion_content":"作者的回复意思应该是 你没有半消息。无法判断是否提交。","likes_number":5,"is_delete":false,"is_hidden":false,"ctime":1624705748,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1023762,"avatar":"","nickname":"开心小毛","note":"","ucode":"9D57A2773759F3","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":20351,"discussion_content":"如果订单创建成功了，但是消息队列却接受不了消息，订单创建逻辑不一定支持回滚：例如订单逻辑已对第三方应用完成了不可逆的操作等。","likes_number":4,"is_delete":false,"is_hidden":false,"ctime":1569304255,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":3,"child_discussions":[{"author":{"id":1020386,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/91/e2/acf750ab.jpg","nickname":"yan","note":"","ucode":"8E7F8155D15646","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1023762,"avatar":"","nickname":"开心小毛","note":"","ucode":"9D57A2773759F3","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":21071,"discussion_content":"你要说有这种问题那事务反查也会这样：订单创建成功，但消息队列却接受不了消息，不是吗","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1569419595,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":20351,"ip_address":""},"score":21071,"extra":""},{"author":{"id":1023762,"avatar":"","nickname":"开心小毛","note":"","ucode":"9D57A2773759F3","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1020386,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/91/e2/acf750ab.jpg","nickname":"yan","note":"","ucode":"8E7F8155D15646","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":24928,"discussion_content":"只要半消息已存在于消息队列中，消息队列就一定会通过实物反查来提交事务消息（使之可见），购物车系统就一定会被清空。","likes_number":5,"is_delete":false,"is_hidden":false,"ctime":1570333776,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":21071,"ip_address":""},"score":24928,"extra":""},{"author":{"id":1571460,"avatar":"https://static001.geekbang.org/account/avatar/00/17/fa/84/f01d203a.jpg","nickname":"Simple life","note":"","ucode":"1902D7F72FB43F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1023762,"avatar":"","nickname":"开心小毛","note":"","ucode":"9D57A2773759F3","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":311783,"discussion_content":"本地事务抛异常又Spring控制的事务回滚，第三方应用也就涉及到分布式事务了，也是要分布式事务解决办法","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1602488791,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":20351,"ip_address":""},"score":311783,"extra":""}]},{"author":{"id":1512618,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epuvKVmiaiaYDRFVRX3rGwSS4T1jibEKibqZYQjxob03ibdmguKzRsftAssCTDVWrdXL7ojNagaIdjIvzA/132","nickname":"Reason","note":"","ucode":"719EA4D5E5BC5A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":18850,"discussion_content":"通过消息中继呢？\n1 本地事务中涵盖一条待发消息放到mysql。\n2 本地事务结束，调用消息中继发送消息，并更新待发的消息为已发。\n3 有一个补偿任务，负责查询待发消息，这里可以加一个条件等待时间超过n秒的。","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1569114631,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1207622,"avatar":"https://static001.geekbang.org/account/avatar/00/12/6d/46/e16291f8.jpg","nickname":"丁小明","note":"","ucode":"CC23857B8D75D5","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1512618,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epuvKVmiaiaYDRFVRX3rGwSS4T1jibEKibqZYQjxob03ibdmguKzRsftAssCTDVWrdXL7ojNagaIdjIvzA/132","nickname":"Reason","note":"","ucode":"719EA4D5E5BC5A","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":248088,"discussion_content":"本地事务列表就是这种实现方式，消息队列就是把本地事务列表放到了消息队列中","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1587830082,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":18850,"ip_address":""},"score":248088,"extra":""}]},{"author":{"id":1053211,"avatar":"https://static001.geekbang.org/account/avatar/00/10/12/1b/f62722ca.jpg","nickname":"A9","note":"","ucode":"76D07F8EBE8DD0","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":3535,"discussion_content":"把发消息这件事放到创建订单这个本地事务里呢？虽然这样会导致由于消息队列的异常导致订单创建本地事务的失败","likes_number":4,"is_delete":false,"is_hidden":false,"ctime":1564556919,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1499380,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/6vz8MgZia6Xwdhayv9Jdnee7HfDYSAMTUtMAAVORMhiaN8bIM0QJibrQ5EDqB8o5pWE6FRuaqguwG86o5Gh90ruDw/132","nickname":"不会爬树的熊","note":"","ucode":"E417D8D9D5FED2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1053211,"avatar":"https://static001.geekbang.org/account/avatar/00/10/12/1b/f62722ca.jpg","nickname":"A9","note":"","ucode":"76D07F8EBE8DD0","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":3867,"discussion_content":"这样做的话，消息提交成功，本地事务提交失败就麻烦了","likes_number":15,"is_delete":false,"is_hidden":false,"ctime":1564901680,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":3535,"ip_address":""},"score":3867,"extra":""},{"author":{"id":1315147,"avatar":"https://static001.geekbang.org/account/avatar/00/14/11/4b/fa64f061.jpg","nickname":"xfan","note":"","ucode":"48ED8D498D7F56","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1499380,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/6vz8MgZia6Xwdhayv9Jdnee7HfDYSAMTUtMAAVORMhiaN8bIM0QJibrQ5EDqB8o5pWE6FRuaqguwG86o5Gh90ruDw/132","nickname":"不会爬树的熊","note":"","ucode":"E417D8D9D5FED2","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":39009,"discussion_content":"消息不是提交成功，也是提交的半消息","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1571878239,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":3867,"ip_address":""},"score":39009,"extra":""}]},{"author":{"id":1531763,"avatar":"https://static001.geekbang.org/account/avatar/00/17/5f/73/a9346146.jpg","nickname":"陈","note":"","ucode":"8AEF8530530311","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":3393,"discussion_content":"如果订单成功，推送mq失败就不断重试推送，但是遇到订单成功后宕机这种情况就无法保证了，而rocketMQ事务消息这种情况下还能通过回调保证。","likes_number":4,"is_delete":false,"is_hidden":false,"ctime":1564453546,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":3,"child_discussions":[{"author":{"id":1004869,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/55/45/e4314bc6.jpg","nickname":"magicnum","note":"","ucode":"96B3696961F654","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1531763,"avatar":"https://static001.geekbang.org/account/avatar/00/17/5f/73/a9346146.jpg","nickname":"陈","note":"","ucode":"8AEF8530530311","race_medal":0,"user_type":1,"is_pvip":true},"discussion":{"id":3436,"discussion_content":"感觉这种设计是不是过分依赖消息队列了，一旦消息队列出问题，上游的订单系统也无法使用了（而文中前面说了从购物车删除已下单商品这个步骤，并不是用户下单支付这个主要流程中必需的步骤）","likes_number":8,"is_delete":false,"is_hidden":false,"ctime":1564479450,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":3393,"ip_address":""},"score":3436,"extra":""},{"author":{"id":1499380,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/6vz8MgZia6Xwdhayv9Jdnee7HfDYSAMTUtMAAVORMhiaN8bIM0QJibrQ5EDqB8o5pWE6FRuaqguwG86o5Gh90ruDw/132","nickname":"不会爬树的熊","note":"","ucode":"E417D8D9D5FED2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1004869,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/55/45/e4314bc6.jpg","nickname":"magicnum","note":"","ucode":"96B3696961F654","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":3869,"discussion_content":"是的，本这个问题本质就是分布式事务，要么两个都成功，要么都回滚到提交前状态","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1564901783,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":3436,"ip_address":""},"score":3869,"extra":""},{"author":{"id":1315147,"avatar":"https://static001.geekbang.org/account/avatar/00/14/11/4b/fa64f061.jpg","nickname":"xfan","note":"","ucode":"48ED8D498D7F56","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1004869,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/55/45/e4314bc6.jpg","nickname":"magicnum","note":"","ucode":"96B3696961F654","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":39010,"discussion_content":"有点过度设计的味道，而且这也不是分布式事务","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1571878355,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":3436,"ip_address":""},"score":39010,"extra":""}]},{"author":{"id":1025664,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a6/80/6ff7ea5f.jpg","nickname":"guoguo 👻","note":"","ucode":"874B0A1E0F7DEA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":4029,"discussion_content":"这就是cap原则 c和a的选择\n如果发送消息放订单数据库事务里，就选择了C而一旦消息发送失败 失去了A\n而你提的订单创建成功，数据库事务完成后发消息，选择了A，操作成功了，但是如果消息发送失败，数据不一致了，就是去了C","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1565067247,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1434423,"avatar":"https://static001.geekbang.org/account/avatar/00/15/e3/37/c132802f.jpg","nickname":"WESTWALL","note":"","ucode":"295A030F9D3BF4","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":543898,"discussion_content":"2pc、 mysql的redo log等等，两阶段的提交还是很普遍的，一步prepare，一步commit","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1641349942,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1501046,"avatar":"https://static001.geekbang.org/account/avatar/00/16/e7/76/79c1f23a.jpg","nickname":"李玥","note":"","ucode":"B19E91EE248591","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":460559,"discussion_content":"考虑这样一种情况：订单创建成功了，还没来得及发消息，这个节点突然断电了。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1564451881,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":3,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":4,"child_discussions":[{"author":{"id":2536820,"avatar":"https://static001.geekbang.org/account/avatar/00/26/b5/74/cd80b9f4.jpg","nickname":"友","note":"","ucode":"972A4333A8B101","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1501046,"avatar":"https://static001.geekbang.org/account/avatar/00/16/e7/76/79c1f23a.jpg","nickname":"李玥","note":"","ucode":"B19E91EE248591","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":536255,"discussion_content":"老师你这个情况我思考了半天没想到这个情况，果然我太嫩了。我之前也在思考这个2pc好在哪","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1638738574,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":460559,"ip_address":""},"score":536255,"extra":""},{"author":{"id":1575729,"avatar":"https://static001.geekbang.org/account/avatar/00/18/0b/31/f412465b.jpg","nickname":"Jason","note":"","ucode":"321ED9E1AC3483","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2536820,"avatar":"https://static001.geekbang.org/account/avatar/00/26/b5/74/cd80b9f4.jpg","nickname":"友","note":"","ucode":"972A4333A8B101","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":556457,"discussion_content":"突然断电了这个创建订单的事务也没有来得及提交，最终创建订单事务回滚创建订单失败，这也啥都不影响啊！我理解这里完全没必要引入分布式事务。","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1647391038,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":536255,"ip_address":""},"score":556457,"extra":""},{"author":{"id":1074734,"avatar":"https://static001.geekbang.org/account/avatar/00/10/66/2e/527b73c9.jpg","nickname":"骑着🚀看银河","note":"","ucode":"8706A99A89F0CE","race_medal":1,"user_type":1,"is_pvip":true},"reply_author":{"id":1575729,"avatar":"https://static001.geekbang.org/account/avatar/00/18/0b/31/f412465b.jpg","nickname":"Jason","note":"","ucode":"321ED9E1AC3483","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":559523,"discussion_content":"大家在讨论如何用好事务，你再讨论用不用。不在一个频道呀\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1648804732,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":556457,"ip_address":""},"score":559523,"extra":""}]},{"author":{"id":1046302,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/3XbCueYYVWTiclv8T5tFpwiblOxLphvSZxL4ujMdqVMibZnOiaFK2C5nKRGv407iaAsrI0CDICYVQJtiaITzkjfjbvrQ/132","nickname":"有铭","note":"","ucode":"2C7CB36CA5C04C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":3388,"discussion_content":"事务的关键在于每一步都可能失败，你这个方案订单是创建成功了，但是发送消息队列可能失败啊，你不处理吗？那数据就不一致了","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1564452097,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1025664,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a6/80/6ff7ea5f.jpg","nickname":"guoguo 👻","note":"","ucode":"874B0A1E0F7DEA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1046302,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/3XbCueYYVWTiclv8T5tFpwiblOxLphvSZxL4ujMdqVMibZnOiaFK2C5nKRGv407iaAsrI0CDICYVQJtiaITzkjfjbvrQ/132","nickname":"有铭","note":"","ucode":"2C7CB36CA5C04C","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":4096,"discussion_content":"发送消息失败数据库事务回滚了啊","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1565109221,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":3388,"ip_address":""},"score":4096,"extra":""},{"author":{"id":1801058,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/7b/62/ec94cee4.jpg","nickname":"彭文达","note":"","ucode":"8DCC27EC5AF263","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1025664,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a6/80/6ff7ea5f.jpg","nickname":"guoguo 👻","note":"","ucode":"874B0A1E0F7DEA","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":548613,"discussion_content":"是的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1643276197,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":4096,"ip_address":""},"score":548613,"extra":""}]},{"author":{"id":1881786,"avatar":"https://static001.geekbang.org/account/avatar/00/1c/b6/ba/f76d996b.jpg","nickname":"机车","note":"","ucode":"CD32A645AE310A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":387834,"discussion_content":"如果串行发，得使用同步发消息，吞吐量不如事务消息","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1628438976,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1200867,"avatar":"https://static001.geekbang.org/account/avatar/00/12/52/e3/594f7e34.jpg","nickname":"杨超越","note":"","ucode":"D115EDC04B6E1F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":56930,"discussion_content":"断电这种，kafka的那种事务方式也不能解决啊？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574525898,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":5,"child_discussions":[{"author":{"id":1359701,"avatar":"https://static001.geekbang.org/account/avatar/00/14/bf/55/198c6104.jpg","nickname":"小伟","note":"","ucode":"124953423491E2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1200867,"avatar":"https://static001.geekbang.org/account/avatar/00/12/52/e3/594f7e34.jpg","nickname":"杨超越","note":"","ucode":"D115EDC04B6E1F","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":115598,"discussion_content":"可以自行实现本地事务结果反查逻辑。比如捕获到broker的超时异常后，自己写代码反查订单事务结果。一个是消息队列产品原生支持的，一个是自己实现的，差不多吧。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1578021494,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":56930,"ip_address":""},"score":115598,"extra":""},{"author":{"id":1590892,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTImmLJCKerl9CI4sTpPDNCUgswp04ybsJ4J6mpJmMlHh43Iibp1RPOLam5PpOv2ZDGcjvGrY94lNRw/132","nickname":"Varphp","note":"","ucode":"889550391E3F75","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1359701,"avatar":"https://static001.geekbang.org/account/avatar/00/14/bf/55/198c6104.jpg","nickname":"小伟","note":"","ucode":"124953423491E2","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":132182,"discussion_content":"你的意思 就是一种核对机制对吧？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578885234,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":115598,"ip_address":""},"score":132182,"extra":""},{"author":{"id":1359701,"avatar":"https://static001.geekbang.org/account/avatar/00/14/bf/55/198c6104.jpg","nickname":"小伟","note":"","ucode":"124953423491E2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1590892,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTImmLJCKerl9CI4sTpPDNCUgswp04ybsJ4J6mpJmMlHh43Iibp1RPOLam5PpOv2ZDGcjvGrY94lNRw/132","nickname":"Varphp","note":"","ucode":"889550391E3F75","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":133857,"discussion_content":"是的，类似于对账。频率可以自己控制。坏处是复杂度都到业务端了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578995303,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":132182,"ip_address":""},"score":133857,"extra":""}]}]},{"had_liked":false,"id":118892,"user_name":"微微一笑","can_delete":false,"product_type":"c1","uid":1250327,"ip_address":"","ucode":"CFA7ABE81D0B99","user_header":"https://static001.geekbang.org/account/avatar/00/13/14/17/8763dced.jpg","comment_is_top":false,"comment_ctime":1564459047,"is_pvip":false,"replies":[{"id":"43719","content":"这个总结非常到位，给你点赞！","user_name":"作者回复","comment_id":118892,"uid":"1501046","ip_address":"","utype":1,"ctime":1564539108,"user_name_real":"李玥"}],"discussion_count":11,"race_medal":0,"score":"564205174823","product_id":100032301,"comment_content":"老师您好，下面是我对思考题的一些看法：<br>A:本地事物的操作1，与往消息队列中生产消息的操作2，是两个分离的操作，不符合对原子性的定义；<br>C:由于操作消息队列属于异步操作，在数据一致性上，只能保证数据的最终一致性。若对于时效性要求很高的系统来说，事物消息不是数据一致的；但对于时效性要求不高的系统来说，他就是数据一致的。我认为，用不同的业务视角来看问题，会有不同的答案；<br>I：隔离性上，由于事物消息是分两步操作的，本地事物提交后，别的事物消息就已经可以看到提交的消息了。所以，不符合隔离性的定义；<br>D：持久性上，rocketMq上支持事物的反查机制，但我不太清楚“半消息”是存储在磁盘中，还是内存里。若存储在磁盘中，那就支持持久性，即使事物消息提交后，发生服务突然宕机也不受影响；若存储在内存中，则无法保证持久性。<br>以上是我的理解，望老师指点~","like_count":131,"discussions":[{"author":{"id":1501046,"avatar":"https://static001.geekbang.org/account/avatar/00/16/e7/76/79c1f23a.jpg","nickname":"李玥","note":"","ucode":"B19E91EE248591","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":460644,"discussion_content":"这个总结非常到位，给你点赞！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1564539108,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1566700,"avatar":"https://static001.geekbang.org/account/avatar/00/17/e7/ec/f4324033.jpg","nickname":"Yize Li","note":"","ucode":"3D3971FA91E4A3","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":19123,"discussion_content":"我认为 原子性破坏与否取决于是否存在数据库中订单成功但是在购物车中商品没有取消的情况 通过rocketmq的半消息模式是可以保证该情况不出现。所以原子性没有破坏 但是由于消息系统的异步性 导致我们可以观察到事物执行过程中或回滚中的中间状态 这意味着强一致性被破坏 只剩下了最终一致性","likes_number":9,"is_delete":false,"is_hidden":false,"ctime":1569140752,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1062848,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83ersGSic8ib7OguJv6CJiaXY0s4n9C7Z51sWxTTljklFpq3ZAIWXoFTPV5oLo0GMTkqW5sYJRRnibNqOJQ/132","nickname":"walle斌","note":"","ucode":"0DB3243004951F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":284547,"discussion_content":"消息是存在硬盘还是内存主要看你设置的broker的刷新策略，是攒一波刷新到硬盘，还是每一条消息都刷一次。当然按照层主同学的意思，应该是half-message最终是在硬盘还是内存，其实这个问题这么考虑，rocketmq都打算实现分布式事物了，那么肯定还是尽量想全了各种异常情况，肯定是存在硬盘更合适，OK，答案就是硬盘。","likes_number":5,"is_delete":false,"is_hidden":false,"ctime":1592552658,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1692942,"avatar":"https://static001.geekbang.org/account/avatar/00/19/d5/0e/dae566c7.jpg","nickname":"JOHN","note":"","ucode":"6936DE275AA543","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":257376,"discussion_content":"a这一点我有不同的看法，半消息的机制可以保证要么都成功要么都失败。\ni 是脏读的隔离级别。\n","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1588563299,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1182383,"avatar":"https://static001.geekbang.org/account/avatar/00/12/0a/af/6f244997.jpg","nickname":"lee","note":"","ucode":"CD672BDB1B58F2","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1692942,"avatar":"https://static001.geekbang.org/account/avatar/00/19/d5/0e/dae566c7.jpg","nickname":"JOHN","note":"","ucode":"6936DE275AA543","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":323598,"discussion_content":"i准确的来说应该叫读未提交","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1604973317,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":257376,"ip_address":""},"score":323598,"extra":""}]},{"author":{"id":1597884,"avatar":"https://static001.geekbang.org/account/avatar/00/18/61/bc/a656bee7.jpg","nickname":"唐二毛","note":"","ucode":"7C16F45165F4BA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":45665,"discussion_content":"办消息存在 目录rmq_sys_half_msg 目录下，可以理解为临时的topic, commit/rollback 后，消息会被转移到 rmq_sys_op_msg中，如果是commit，消息会同时被复制到归属的topic目录下，consumer就可以消费到。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1573054148,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1112676,"avatar":"https://static001.geekbang.org/account/avatar/00/10/fa/64/457325e6.jpg","nickname":"Sam Fu","note":"","ucode":"EA285A4943271F","race_medal":1,"user_type":1,"is_pvip":true},"reply_author":{"id":1597884,"avatar":"https://static001.geekbang.org/account/avatar/00/18/61/bc/a656bee7.jpg","nickname":"唐二毛","note":"","ucode":"7C16F45165F4BA","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":531932,"discussion_content":"commit/rollback 后，消息会被转移到 rmq_sys_op_msg中。 这里的“转移”，是不是也是复制到归属的rmq_sys_op_msg中，原rmq_sys_op_msg中的消息不会被删除吧？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1637473873,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":45665,"ip_address":""},"score":531932,"extra":"{\"user_type\":1}"}]},{"author":{"id":1297583,"avatar":"https://static001.geekbang.org/account/avatar/00/13/cc/af/25509210.jpg","nickname":"loCust","note":"","ucode":"A5CFECA44045A1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":7318,"discussion_content":"A:本地事物的操作1，与往消息队列中生产消息的操作2，是两个分离的操作，不符合对原子性的定义；\n不是很理解这句话","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1567488666,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1359701,"avatar":"https://static001.geekbang.org/account/avatar/00/14/bf/55/198c6104.jpg","nickname":"小伟","note":"","ucode":"124953423491E2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1297583,"avatar":"https://static001.geekbang.org/account/avatar/00/13/cc/af/25509210.jpg","nickname":"loCust","note":"","ucode":"A5CFECA44045A1","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":115611,"discussion_content":"就是本地事务和发送事务消息不在一个事务里，无法保证两个操作同时成功或失败","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1578022252,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":7318,"ip_address":""},"score":115611,"extra":""}]},{"author":{"id":1252813,"avatar":"https://static001.geekbang.org/account/avatar/00/13/1d/cd/3819726f.jpg","nickname":"徐同学呀","note":"","ucode":"03383EE820514D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":410321,"discussion_content":"事务的原子性和线程的原子性不是一个概念","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1635662151,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1099875,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c8/63/f94f9fda.jpg","nickname":"smily","note":"","ucode":"E2FDA059724A02","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":167494,"discussion_content":"想问的是，半消息状态执行流程，信息在内存什么位置，哪些模块流转，以及设计的内存分配状态，持久化到文件是否涉及临时文件存储。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1581503272,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":119025,"user_name":"ly","can_delete":false,"product_type":"c1","uid":1221628,"ip_address":"","ucode":"5E2B85252DABF3","user_header":"https://static001.geekbang.org/account/avatar/00/12/a3/fc/379387a4.jpg","comment_is_top":false,"comment_ctime":1564489162,"is_pvip":false,"replies":[{"id":"43713","content":"非常好，完全正确！","user_name":"作者回复","comment_id":119025,"uid":"1501046","ip_address":"","utype":1,"ctime":1564538193,"user_name_real":"李玥"}],"discussion_count":13,"race_medal":0,"score":"306507167178","product_id":100032301,"comment_content":"实现订单下单场景：<br>1. 首先通过producer.sendMessageInTransaction()方法发送一个半消息给MQ.<br>2. 此时会在TransactionListener中的executeLocalTransaction()方法阻塞，然后在这个方法里面进行订单创建并提交本地事务，如果commit成功，则返回COMMIT状态，否则是ROLLBACK状态，如果正常返回COMMIT或者ROLLBACK的话，不会存在第3步的反查情况。<br>3. 如果上面的本地事务提交成功以后，此节点突然断电，那么checkLocalTransaction()反查方法就会在某个时候被MQ调用，此方法会根据消息中的订单号去数据库确认订单是否存在，存在就返回COMMIT状态，否则是ROLLBACK状态。<br>4. 购物车在另外一个项目中，反正只要收到MQ的消息就将本次订单的商品从购物车中删除即可。<br><br>以上是通过代码的进行步骤写的，老师看有没有什么问题。","like_count":71,"discussions":[{"author":{"id":1501046,"avatar":"https://static001.geekbang.org/account/avatar/00/16/e7/76/79c1f23a.jpg","nickname":"李玥","note":"","ucode":"B19E91EE248591","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":460711,"discussion_content":"非常好，完全正确！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1564538193,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1315147,"avatar":"https://static001.geekbang.org/account/avatar/00/14/11/4b/fa64f061.jpg","nickname":"xfan","note":"","ucode":"48ED8D498D7F56","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":39012,"discussion_content":"你都断电了，什么时候执行checkLocalTransaction","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1571878504,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":2715554,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLBHy0D2KUZwOGHRG8qloicx2V4E4mImsPIiavPfr12BZB6QyUlHNdmOohC3EbsgnM2QNBeoqu82Grw/132","nickname":"皮卡卡","note":"","ucode":"52B3F234550E7F","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1315147,"avatar":"https://static001.geekbang.org/account/avatar/00/14/11/4b/fa64f061.jpg","nickname":"xfan","note":"","ucode":"48ED8D498D7F56","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":386152,"discussion_content":"多个节点阿","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1627447689,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":39012,"ip_address":""},"score":386152,"extra":""},{"author":{"id":1225224,"avatar":"https://static001.geekbang.org/account/avatar/00/12/b2/08/92f42622.jpg","nickname":"尔冬橙","note":"","ucode":"0B013A49BC18DA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1315147,"avatar":"https://static001.geekbang.org/account/avatar/00/14/11/4b/fa64f061.jpg","nickname":"xfan","note":"","ucode":"48ED8D498D7F56","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":575366,"discussion_content":"这个我理解是配置，就和发送会多次重试一样","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1654773999,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":39012,"ip_address":""},"score":575366,"extra":""}]},{"author":{"id":1225224,"avatar":"https://static001.geekbang.org/account/avatar/00/12/b2/08/92f42622.jpg","nickname":"尔冬橙","note":"","ucode":"0B013A49BC18DA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":578816,"discussion_content":"第三点很重要，其实反查是极其特殊的情况","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1657027111,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1359108,"avatar":"https://static001.geekbang.org/account/avatar/00/14/bd/04/fc82a7f1.jpg","nickname":"qwfys200","note":"","ucode":"DFE438CA2F77A2","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":327465,"discussion_content":"如果出现购物车删除始终失败呢？这个时候需要怎么处理订单呢？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1605845212,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":3,"child_discussions":[{"author":{"id":1269067,"avatar":"https://static001.geekbang.org/account/avatar/00/13/5d/4b/0f09a836.jpg","nickname":"stivechen","note":"","ucode":"3257EE157139B3","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1359108,"avatar":"https://static001.geekbang.org/account/avatar/00/14/bd/04/fc82a7f1.jpg","nickname":"qwfys200","note":"","ucode":"DFE438CA2F77A2","race_medal":0,"user_type":1,"is_pvip":true},"discussion":{"id":359571,"discussion_content":"再删除一次","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1616231321,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":327465,"ip_address":""},"score":359571,"extra":""},{"author":{"id":1359108,"avatar":"https://static001.geekbang.org/account/avatar/00/14/bd/04/fc82a7f1.jpg","nickname":"qwfys200","note":"","ucode":"DFE438CA2F77A2","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1269067,"avatar":"https://static001.geekbang.org/account/avatar/00/13/5d/4b/0f09a836.jpg","nickname":"stivechen","note":"","ucode":"3257EE157139B3","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":376993,"discussion_content":"好的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1622455247,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":359571,"ip_address":""},"score":376993,"extra":""},{"author":{"id":1252813,"avatar":"https://static001.geekbang.org/account/avatar/00/13/1d/cd/3819726f.jpg","nickname":"徐同学呀","note":"","ucode":"03383EE820514D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1359108,"avatar":"https://static001.geekbang.org/account/avatar/00/14/bd/04/fc82a7f1.jpg","nickname":"qwfys200","note":"","ucode":"DFE438CA2F77A2","race_medal":0,"user_type":1,"is_pvip":true},"discussion":{"id":410324,"discussion_content":"订单创建成功和购物车清空孰轻孰重，用消息队列实现的分布式事务，订单创建事务成功了根据成本是不可能因为一个不重要的购物车清空失败来回滚的，所以只能要求购物车清空不断重试直至成功，这里有一个名词是“最大努力交付”，像tcp的重传，如果一直不成功可能就是某个部位出现严重故障！需要修复，可以前端友好提示下无法自动恢复的异常","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1635662647,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":327465,"ip_address":""},"score":410324,"extra":""}]},{"author":{"id":1359353,"avatar":"https://static001.geekbang.org/account/avatar/00/14/bd/f9/99c931bf.jpg","nickname":"wendell","note":"","ucode":"40E47FED3124FA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":77031,"discussion_content":"在main方法中执行，然后直接停掉运行(模拟断电情况)， 再次启动执行main方法，上次断电的unknow状态的消息就会被checkLocalTransaction。  但是这样有一个问题，因为要绑定到相同的topic消息上，然后就造成了必须要再执行一次producer.sendMessageInTransaction方法，才能触发断电前的unknow消息checkLocalTransaction","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1575881943,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1359701,"avatar":"https://static001.geekbang.org/account/avatar/00/14/bf/55/198c6104.jpg","nickname":"小伟","note":"","ucode":"124953423491E2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1359353,"avatar":"https://static001.geekbang.org/account/avatar/00/14/bd/f9/99c931bf.jpg","nickname":"wendell","note":"","ucode":"40E47FED3124FA","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":115613,"discussion_content":"checkLocalTransaction是被MQ的broker调用的。如果你的main指的就是MQ的broker，那么需要halfMessage持久化的支持，无论MQ broker何时上线，都要检查未确认的halfMessage。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578022530,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":77031,"ip_address":""},"score":115613,"extra":""},{"author":{"id":1203293,"avatar":"https://static001.geekbang.org/account/avatar/00/12/5c/5d/974b033f.jpg","nickname":"陆老师","note":"","ucode":"0EA27C4755FF4A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1359353,"avatar":"https://static001.geekbang.org/account/avatar/00/14/bd/f9/99c931bf.jpg","nickname":"wendell","note":"","ucode":"40E47FED3124FA","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":260040,"discussion_content":"你是一台机器，实际上发送方是多台机器的，MQ不依赖发送方，他会去调能提供服务的节点","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1588842669,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":77031,"ip_address":""},"score":260040,"extra":""}]},{"author":{"id":1200867,"avatar":"https://static001.geekbang.org/account/avatar/00/12/52/e3/594f7e34.jpg","nickname":"杨超越","note":"","ucode":"D115EDC04B6E1F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":56931,"discussion_content":"你写的很好，对于rocketMQ来讲是这样的，我想问下kafka在这种场景下是不是就不一致了？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574526034,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":121067,"user_name":"Calix","can_delete":false,"product_type":"c1","uid":1212966,"ip_address":"","ucode":"6166FD5B2EDC54","user_header":"https://static001.geekbang.org/account/avatar/00/12/82/26/395798ae.jpg","comment_is_top":false,"comment_ctime":1565054116,"is_pvip":false,"replies":[{"id":"44479","content":"其实是交全款，不发货。","user_name":"作者回复","comment_id":121067,"uid":"1501046","ip_address":"","utype":1,"ctime":1565055294,"user_name_real":"李玥"}],"discussion_count":4,"race_medal":0,"score":"203428517028","product_id":100032301,"comment_content":"这个半消息，和生活中的“交定金”有点类似。","like_count":47,"discussions":[{"author":{"id":1024982,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a3/d6/865b87b3.jpg","nickname":"Lito","note":"","ucode":"BF97BF203B54D6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":4107,"discussion_content":"应该是钱打到支付宝了。\n\nConmit成功支付宝会把钱给卖家。\n失败rollback就是退款","likes_number":9,"is_delete":false,"is_hidden":false,"ctime":1565138866,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1501046,"avatar":"https://static001.geekbang.org/account/avatar/00/16/e7/76/79c1f23a.jpg","nickname":"李玥","note":"","ucode":"B19E91EE248591","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":461604,"discussion_content":"其实是交全款，不发货。","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1565055294,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2222937,"avatar":"","nickname":"ronaldo","note":"","ucode":"824AE89F4C58BB","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":316081,"discussion_content":"我想是已发货，未确认收货。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1603356188,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1455660,"avatar":"https://static001.geekbang.org/account/avatar/00/16/36/2c/e334a734.jpg","nickname":"erlang","note":"","ucode":"352C33E78A0C92","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2222937,"avatar":"","nickname":"ronaldo","note":"","ucode":"824AE89F4C58BB","race_medal":0,"user_type":1,"is_pvip":true},"discussion":{"id":584424,"discussion_content":"发货就可能被签收，这里应该是交全款不发货","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1660812644,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":316081,"ip_address":"上海"},"score":584424,"extra":""}]}]},{"had_liked":false,"id":128017,"user_name":"君莫笑","can_delete":false,"product_type":"c1","uid":1252556,"ip_address":"","ucode":"28D804A09E4C64","user_header":"https://static001.geekbang.org/account/avatar/00/13/1c/cc/a475e9b0.jpg","comment_is_top":false,"comment_ctime":1566820828,"is_pvip":false,"replies":[{"id":"47533","content":"这种情况下是没有办法回滚的，也不应该回滚。<br>因为对于消息队列来说，它的一个重要功能就是解耦。<br>消费者的任何行为，不应该影响生产者。<br><br>对于你说的“坏消息”，反复消费都不能成功，有的MQ会把这种消息放到一个单独的特殊队列中，等着后续人工处理，避免卡死队列。","user_name":"作者回复","comment_id":128017,"uid":"1501046","ip_address":"","utype":1,"ctime":1566868868,"user_name_real":"李玥"}],"discussion_count":9,"race_medal":0,"score":"147595708892","product_id":100032301,"comment_content":"老师，我回头重新看的时候看到这一章有一点疑问，消息队列的手动确认模式是可以保证分布式事务的最终一致性，那么如果生产者在处理完自己的业务之后将消息放入消息队列中（通过生产者确认方式可以确保消息送达Broker），然后消费者消费这个消息的时候出了问题，假设是消息体本身的原因导致消费该消息一定会抛出异常，这种情况下怎么通知生产者回滚该消息所处理的业务数据呢？","like_count":34,"discussions":[{"author":{"id":1501046,"avatar":"https://static001.geekbang.org/account/avatar/00/16/e7/76/79c1f23a.jpg","nickname":"李玥","note":"","ucode":"B19E91EE248591","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":464756,"discussion_content":"这种情况下是没有办法回滚的，也不应该回滚。\n因为对于消息队列来说，它的一个重要功能就是解耦。\n消费者的任何行为，不应该影响生产者。\n\n对于你说的“坏消息”，反复消费都不能成功，有的MQ会把这种消息放到一个单独的特殊队列中，等着后续人工处理，避免卡死队列。","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1566868868,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1361159,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eqJobg767PUeqrqQQ4B6YvMatj2SRyOicKZZ4gWTf30dMketiaj58Gc3RFTmckGxAXlL9ERSxGovq9g/132","nickname":"涛哥哥","note":"","ucode":"329A1384E3AB5E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":371034,"discussion_content":"有一种队列叫做死信队列，会转发到死信队列中","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1619616999,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1252556,"avatar":"https://static001.geekbang.org/account/avatar/00/13/1c/cc/a475e9b0.jpg","nickname":"君莫笑","note":"","ucode":"28D804A09E4C64","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":6672,"discussion_content":"实在抱歉，现在才看到回复，明白您的意思了，非常感谢，我自己寻找到的解决方案是生产者通过zk提供远程回调接口，出现这种情况也可以通知到生产者进行逆向操作，但是这种处理方案在生产者前置业务复杂的情况下比较难实现，再次感谢您的回答。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1567044578,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1909094,"avatar":"https://static001.geekbang.org/account/avatar/00/1d/21/66/85f247e2.jpg","nickname":"谢作作的男人","note":"","ucode":"4F220EA8AEBFB9","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1252556,"avatar":"https://static001.geekbang.org/account/avatar/00/13/1c/cc/a475e9b0.jpg","nickname":"君莫笑","note":"","ucode":"28D804A09E4C64","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":324345,"discussion_content":"这种情况应该需要用其他方式的事务解决方案了，比如Seata，提供一个全局事务管理器，各个服务节点，只要存在一个发生异常，那么所有节点都回滚。相对来说，依靠消息中间件并不能解决这个问题。","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1605093795,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":6672,"ip_address":""},"score":324345,"extra":""},{"author":{"id":1343516,"avatar":"https://static001.geekbang.org/account/avatar/00/14/80/1c/d7abae7b.jpg","nickname":"辰果","note":"","ucode":"FAAB6A34855236","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1909094,"avatar":"https://static001.geekbang.org/account/avatar/00/1d/21/66/85f247e2.jpg","nickname":"谢作作的男人","note":"","ucode":"4F220EA8AEBFB9","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":531122,"discussion_content":"这个我觉得才是对的，很多这类分布式事务的文章 都没有把各自适合的场景讲的很好","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1637236358,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":324345,"ip_address":""},"score":531122,"extra":"{\"user_type\":1}"}]},{"author":{"id":1909094,"avatar":"https://static001.geekbang.org/account/avatar/00/1d/21/66/85f247e2.jpg","nickname":"谢作作的男人","note":"","ucode":"4F220EA8AEBFB9","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":324343,"discussion_content":"明白了，这点老师没写在正文了。我纠结了好久，走路还绊了个跟头","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1605093621,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":3,"child_discussions":[{"author":{"id":2741744,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKPghSpy52TKibwu3Dzd5EYetAtoXZVPIqhV8clJfFLJP3vfJib5Ay9k69aMnTNkRiav2wtwfryDIAkw/132","nickname":"秃头制造者","note":"","ucode":"033ABAF394AB3E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1909094,"avatar":"https://static001.geekbang.org/account/avatar/00/1d/21/66/85f247e2.jpg","nickname":"谢作作的男人","note":"","ucode":"4F220EA8AEBFB9","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":389885,"discussion_content":"哈哈 我也是。。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1629464633,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":324343,"ip_address":""},"score":389885,"extra":""},{"author":{"id":1112676,"avatar":"https://static001.geekbang.org/account/avatar/00/10/fa/64/457325e6.jpg","nickname":"Sam Fu","note":"","ucode":"EA285A4943271F","race_medal":1,"user_type":1,"is_pvip":true},"reply_author":{"id":2741744,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKPghSpy52TKibwu3Dzd5EYetAtoXZVPIqhV8clJfFLJP3vfJib5Ay9k69aMnTNkRiav2wtwfryDIAkw/132","nickname":"秃头制造者","note":"","ucode":"033ABAF394AB3E","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":531935,"discussion_content":"+1","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1637474238,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":389885,"ip_address":""},"score":531935,"extra":"{\"user_type\":1}"},{"author":{"id":1225224,"avatar":"https://static001.geekbang.org/account/avatar/00/12/b2/08/92f42622.jpg","nickname":"尔冬橙","note":"","ucode":"0B013A49BC18DA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1909094,"avatar":"https://static001.geekbang.org/account/avatar/00/1d/21/66/85f247e2.jpg","nickname":"谢作作的男人","note":"","ucode":"4F220EA8AEBFB9","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":575367,"discussion_content":"本来事务消息不是说的全局事务消息","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1654774410,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":324343,"ip_address":""},"score":575367,"extra":""}]}]},{"had_liked":false,"id":119214,"user_name":"oscarwin","can_delete":false,"product_type":"c1","uid":1131956,"ip_address":"","ucode":"492430BA342593","user_header":"https://static001.geekbang.org/account/avatar/00/11/45/b4/ec66d499.jpg","comment_is_top":false,"comment_ctime":1564538501,"is_pvip":false,"replies":[{"id":"43729","content":"如果本地事务提交失败，已经发出去的消息是无法撤回的，会导致数据不一致。","user_name":"作者回复","comment_id":119214,"uid":"1501046","ip_address":"","utype":1,"ctime":1564540292,"user_name_real":"李玥"}],"discussion_count":15,"race_medal":0,"score":"134708524677","product_id":100032301,"comment_content":"先开启本地事务，然后创建订单，订单创建成功后再发消息，根据发消息是否成功来决定提交还是回滚本地事务。这样不需要事务消息也能解决这个场景的问题了？还是说我考虑的不够全面。","like_count":31,"discussions":[{"author":{"id":1501046,"avatar":"https://static001.geekbang.org/account/avatar/00/16/e7/76/79c1f23a.jpg","nickname":"李玥","note":"","ucode":"B19E91EE248591","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":460790,"discussion_content":"如果本地事务提交失败，已经发出去的消息是无法撤回的，会导致数据不一致。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1564540292,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1224973,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKr5VXvP5VuTaISVfY7nPVMXdPQfFmsQwOetDIKlYdicnTFdR2SDxZKC20OyBRsNXrjXt76mf1CnCg/132","nickname":"小崮","note":"","ucode":"6003ECF3C1BB4A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":201765,"discussion_content":"1. 先开启本地事务\n2. 创建订单\n3.1 订单创建成功 发送mq消息 \n   3.1.1 发送mq消息成功 提交事务\n   3.1.2 发送mq消息失败 回滚事务\n3.2 订单创建失败 结束\n\n步骤3.1.1中 提交事务 失败 实际消息已发送 造成数据不一致\n步骤3.1.2中 回滚 对目前的例子来说问题不大，但是实际订单创建是涉及到很多系统的 交易（管单子的）、金融（管钱的）、库存（管商品库存的）这些东西回滚的代价是很大的。而造成这种代价的起因是消息发送失败。我想所有的系统都是无法忍受这种问题的。 不如用消息队列实现分布式事务，半消息还是很适用这种场景的","likes_number":12,"is_delete":false,"is_hidden":false,"ctime":1583835574,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1057843,"avatar":"https://static001.geekbang.org/account/avatar/00/10/24/33/bcf37f50.jpg","nickname":"阿甘","note":"","ucode":"BC93175B70E05D","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1224973,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKr5VXvP5VuTaISVfY7nPVMXdPQfFmsQwOetDIKlYdicnTFdR2SDxZKC20OyBRsNXrjXt76mf1CnCg/132","nickname":"小崮","note":"","ucode":"6003ECF3C1BB4A","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":579131,"discussion_content":"到这一步提交事务还没有遇到失败的。如果这个都要考虑，那么单机的事务提交和回滚都要业务干预了。。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1657186542,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":201765,"ip_address":""},"score":579131,"extra":""}]},{"author":{"id":1615565,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTL4j3xXIeQr2lFrbG6icUj1L9ibSqEgzCMa76v6wboTTSibyPYSCbjIJZp76O51H3XODg80IAsfJgVzw/132","nickname":"Geek_Chain","note":"","ucode":"94A23FE0B6929C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":3800,"discussion_content":"发消息如果超时，那你是回滚本地事务还是提交本地事务呢","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1564820031,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1980201,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/37/29/b3af57a7.jpg","nickname":"凯文小猪","note":"","ucode":"36D8AD0229547F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1615565,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTL4j3xXIeQr2lFrbG6icUj1L9ibSqEgzCMa76v6wboTTSibyPYSCbjIJZp76O51H3XODg80IAsfJgVzw/132","nickname":"Geek_Chain","note":"","ucode":"94A23FE0B6929C","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":399518,"discussion_content":"提交后交由mq来回查 一直回查到该消息commit或rollback为止。 当然回查的频次可以做调整 没必要用job无脑的查","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1632982017,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":3800,"ip_address":""},"score":399518,"extra":""},{"author":{"id":1225224,"avatar":"https://static001.geekbang.org/account/avatar/00/12/b2/08/92f42622.jpg","nickname":"尔冬橙","note":"","ucode":"0B013A49BC18DA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1980201,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/37/29/b3af57a7.jpg","nickname":"凯文小猪","note":"","ucode":"36D8AD0229547F","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":575369,"discussion_content":"按mq的实现，回查是异常情况，按层主的实现，回查是必须的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1654774603,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":399518,"ip_address":""},"score":575369,"extra":""}]},{"author":{"id":1112676,"avatar":"https://static001.geekbang.org/account/avatar/00/10/fa/64/457325e6.jpg","nickname":"Sam Fu","note":"","ucode":"EA285A4943271F","race_medal":1,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":531933,"discussion_content":"考虑这样一种情况，由于网络原因消息发送网络超时，事务回滚，实际上消息发送成功，购物车清理成功","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1637474152,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"user_type\":1}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1219438,"avatar":"https://static001.geekbang.org/account/avatar/00/12/9b/6e/edd2da0c.jpg","nickname":"蓝魔丶","note":"","ucode":"2AE4359E263558","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":561780,"discussion_content":"这里可以使用Spring的event事件机制的\n在订单代码里写上事件 然后事件使用事务监听注解\n当订单创建成功才会触发事件发生、然后在事件里发送MQ消息。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1649725656,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1225224,"avatar":"https://static001.geekbang.org/account/avatar/00/12/b2/08/92f42622.jpg","nickname":"尔冬橙","note":"","ucode":"0B013A49BC18DA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1219438,"avatar":"https://static001.geekbang.org/account/avatar/00/12/9b/6e/edd2da0c.jpg","nickname":"蓝魔丶","note":"","ucode":"2AE4359E263558","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":578817,"discussion_content":"MQ发送失败呢，或者发送过程中订单服务挂了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1657027333,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":561780,"ip_address":""},"score":578817,"extra":""}]},{"author":{"id":1361159,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eqJobg767PUeqrqQQ4B6YvMatj2SRyOicKZZ4gWTf30dMketiaj58Gc3RFTmckGxAXlL9ERSxGovq9g/132","nickname":"涛哥哥","note":"","ucode":"329A1384E3AB5E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":371030,"discussion_content":"这个其实是二阶段提交过程。回查是让数据一致","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1619616893,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1359353,"avatar":"https://static001.geekbang.org/account/avatar/00/14/bd/f9/99c931bf.jpg","nickname":"wendell","note":"","ucode":"40E47FED3124FA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":70482,"discussion_content":"按作者大大回复，如果本地事务提交失败，消息发送成功了的，那应该会触发rockmq事务反查吧？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1575361120,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1359701,"avatar":"https://static001.geekbang.org/account/avatar/00/14/bf/55/198c6104.jpg","nickname":"小伟","note":"","ucode":"124953423491E2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1359353,"avatar":"https://static001.geekbang.org/account/avatar/00/14/bd/f9/99c931bf.jpg","nickname":"wendell","note":"","ucode":"40E47FED3124FA","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":115646,"discussion_content":"本地事务回滚补偿的代价太大，还是折腾事务消息吧。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578025360,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":70482,"ip_address":""},"score":115646,"extra":""},{"author":{"id":1225224,"avatar":"https://static001.geekbang.org/account/avatar/00/12/b2/08/92f42622.jpg","nickname":"尔冬橙","note":"","ucode":"0B013A49BC18DA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1359353,"avatar":"https://static001.geekbang.org/account/avatar/00/14/bd/f9/99c931bf.jpg","nickname":"wendell","note":"","ucode":"40E47FED3124FA","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":578818,"discussion_content":"本地事务提交失败你要抛异常啊，不能在继续发消息了，事务消息会会查","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1657027418,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":70482,"ip_address":""},"score":578818,"extra":""}]},{"author":{"id":1315147,"avatar":"https://static001.geekbang.org/account/avatar/00/14/11/4b/fa64f061.jpg","nickname":"xfan","note":"","ucode":"48ED8D498D7F56","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":39013,"discussion_content":"这个我觉得没问题，提交半消息就行了，发出去也没事","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571878558,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1398824,"avatar":"https://static001.geekbang.org/account/avatar/00/15/58/28/c86340ca.jpg","nickname":"达文西","note":"","ucode":"01C1063F23D634","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1315147,"avatar":"https://static001.geekbang.org/account/avatar/00/14/11/4b/fa64f061.jpg","nickname":"xfan","note":"","ucode":"48ED8D498D7F56","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":41192,"discussion_content":"提交半消息，那么什么时候提交消息的事务呢？如果在本地事务内提交，就有可能消息事务提交了（队列里面的消息对消费者可见），但本地事务却失败了回滚，导致数据不一致。如果在本地事务提交后提交消息事务，就有可能会因为消息事务提交失败，同样会导致数据不一致。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1572362264,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":39013,"ip_address":""},"score":41192,"extra":""}]}]},{"had_liked":false,"id":126175,"user_name":"Geek","can_delete":false,"product_type":"c1","uid":1466335,"ip_address":"","ucode":"1B8EB2C26DE4EC","user_header":"https://static001.geekbang.org/account/avatar/00/16/5f/df/3c4881f0.jpg","comment_is_top":false,"comment_ctime":1566345875,"is_pvip":true,"replies":[{"id":"46516","content":"第一个问题，我们后面还有专门的一节课来讲事务是如何实现的，这里面会有你想要的答案。<br><br>第二第三个问题，RocketMQ给出的解决方案是，反查的结果返回的状态中，不仅有成功和失败，还有一个“不确定”的状态，意思就是“我现在不知道本地事务是不是成功了，将来它可能会成功，也可能会失败”，像你提的这两种情况，在实现反查接口的时候，都应该返回不确定的状态，RocketMQ在收到这个状态后，会定时多次进行反查，直到得到成功、失败的状态或者事务超时才结束。","user_name":"作者回复","comment_id":126175,"uid":"1501046","ip_address":"","utype":1,"ctime":1566352162,"user_name_real":"李玥"}],"discussion_count":2,"race_medal":0,"score":"117530462867","product_id":100032301,"comment_content":"老师，有几个问题没有太理解，可以解答一下么？<br>1.kafka在commit&#47;rollback的时候如果发送失败了就会抛出异常，会不会存在已经发送成功了但是超时了的情况呢，这个时候broker已经收到数据了。但是上游业务却回滚了<br>2.RocketMq反查时有没有可能本地事务还没提交呢，导致broker取消了事务造成了不一致<br>3.RocketMq在反查时如果订单服务异常了，导致broker取消了会不会导致事务造成了不一致<br>谢谢老师","like_count":27,"discussions":[{"author":{"id":1501046,"avatar":"https://static001.geekbang.org/account/avatar/00/16/e7/76/79c1f23a.jpg","nickname":"李玥","note":"","ucode":"B19E91EE248591","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":463866,"discussion_content":"第一个问题，我们后面还有专门的一节课来讲事务是如何实现的，这里面会有你想要的答案。\n\n第二第三个问题，RocketMQ给出的解决方案是，反查的结果返回的状态中，不仅有成功和失败，还有一个“不确定”的状态，意思就是“我现在不知道本地事务是不是成功了，将来它可能会成功，也可能会失败”，像你提的这两种情况，在实现反查接口的时候，都应该返回不确定的状态，RocketMQ在收到这个状态后，会定时多次进行反查，直到得到成功、失败的状态或者事务超时才结束。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566352162,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1225224,"avatar":"https://static001.geekbang.org/account/avatar/00/12/b2/08/92f42622.jpg","nickname":"尔冬橙","note":"","ucode":"0B013A49BC18DA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":584360,"discussion_content":"第一个问题，后面哪一篇讲了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1660787526,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"湖南"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":118968,"user_name":"linqw","can_delete":false,"product_type":"c1","uid":1134138,"ip_address":"","ucode":"09DCFE98C54DD8","user_header":"https://static001.geekbang.org/account/avatar/00/11/4e/3a/86196508.jpg","comment_is_top":false,"comment_ctime":1564475896,"is_pvip":false,"replies":[{"id":"43714","content":"indexFile的作用就是给commitlog做的索引，提升读取消息时的查询效率。<br><br>另外，关于事务的实现流程，总结的很到位，你还有哪些具体的问题不清楚，可以继续留言提出来。","user_name":"作者回复","comment_id":118968,"uid":"1501046","ip_address":"","utype":1,"ctime":1564538665,"user_name_real":"李玥"}],"discussion_count":9,"race_medal":0,"score":"117528592888","product_id":100032301,"comment_content":"使用rocketmq实现分布式事务的理解和疑问，老师有空帮忙解答下哦<br>1、rocketmq实现分布式事务，使用的是两阶段提交，和mysql写redo log和binlog日志的两阶段提交类似，以上面订单的为例，提交订单消息到mq中，等待mq回复ack，消息提交成功，但是此时的消息对消费组不可见，即half消息，此阶段像mysql的引擎层写redo log的prepare阶段，执行本地事务，执行本地事务成功，此阶段像mysql的service层写binlog的阶段，写binlog成功，最后提交或者回滚队列事务，rocketmq为了防止commit和rollback超时或者失败，采取回查的补偿机制，回查次数默认15次（感觉这个会不会导致服务超时了），超过会rollback，有点像mysql宕机重启根据redo log中的xid找binlog的xid事务，如果binlog日志也已经写成功，mysql这个事务也会提交，因为redo log和binlog这个事务都写完整。<br>2、消息对消费者不可见，将其消息的主题topic和队列id修改为half topic，原先的主题和队列id也做为消息的属性，如果事务提交或者回滚会将其消息的队列改为原先的队列。rocketMq开启任务，从half topic中获取消息，调用其中的生产者的监听进行回查是否提交回滚。<br>3、rocketmq采用commitlog存放消息，消费者使用consumeQueue二级索引从commitlog获取消息实体内容，不太理解Index File：索引文件？回查借助OP topic进行获取到Half消息进行后续的回查操作，感觉整体流程还是没有串通，老师能否帮忙解答下么？","like_count":27,"discussions":[{"author":{"id":1501046,"avatar":"https://static001.geekbang.org/account/avatar/00/16/e7/76/79c1f23a.jpg","nickname":"李玥","note":"","ucode":"B19E91EE248591","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":460691,"discussion_content":"indexFile的作用就是给commitlog做的索引，提升读取消息时的查询效率。\n\n另外，关于事务的实现流程，总结的很到位，你还有哪些具体的问题不清楚，可以继续留言提出来。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1564538665,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1182167,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/d7/ffe7b0bf.jpg","nickname":"Shen","note":"","ucode":"CFF7609A754392","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":52534,"discussion_content":"应该看过丁奇的mysql实战45讲    ：）","likes_number":6,"is_delete":false,"is_hidden":false,"ctime":1574063471,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1153455,"avatar":"https://static001.geekbang.org/account/avatar/00/11/99/af/d29273e2.jpg","nickname":"饭粒","note":"","ucode":"4C3220B0D43997","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":41651,"discussion_content":"这个类比 mysql 的两阶段提交太赞了，half 消息对应 redolog，订单数据库数据对应磁盘binlog，订单的 identifier 对应 xid。","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1572484379,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1310798,"avatar":"https://static001.geekbang.org/account/avatar/00/14/00/4e/be2b206b.jpg","nickname":"吴小智","note":"","ucode":"C7C9F58B5C9F7B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":9431,"discussion_content":"兄台的这个类比 MySQL 的两阶段提交，太到位了，赞一个。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1568168405,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1980201,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/37/29/b3af57a7.jpg","nickname":"凯文小猪","note":"","ucode":"36D8AD0229547F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":367538,"discussion_content":"index文件是为了定位文件内偏移量 这就和我们计算机内存寻址是一样的。试想一下 commitlog直接加载查起来也是和数据量正相关的 而通常commit log都会创建1G。而index文件通常比较小，M级别 且rocketmq和kafka一样都用了mmap","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1618389118,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2296382,"avatar":"https://static001.geekbang.org/account/avatar/00/23/0a/3e/5b1b1b75.jpg","nickname":"流年","note":"","ucode":"8B579C6E466CB4","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":335209,"discussion_content":"这个类比太赞了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1608120552,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1099875,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c8/63/f94f9fda.jpg","nickname":"smily","note":"","ucode":"E2FDA059724A02","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":167495,"discussion_content":"我觉得有必要，讲清楚流转过程及状态转换。涉及文件存储。消息的2PC","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1581503544,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1254582,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/FqZKG3aII9YzXkfSh1Wuc2urQPZX9tZ9AwQKevDlic3mAD9C0ceVpLrSNeCLYfKAY9PtjVjVP2JBLwqRkvMoaQg/132","nickname":"晓μ","note":"","ucode":"4C6A062C43B570","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":5049,"discussion_content":"老师后面会不会讲你所说第三个问题中涉及到技术细节呢","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1565915784,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1134138,"avatar":"https://static001.geekbang.org/account/avatar/00/11/4e/3a/86196508.jpg","nickname":"linqw","note":"","ucode":"09DCFE98C54DD8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1254582,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/FqZKG3aII9YzXkfSh1Wuc2urQPZX9tZ9AwQKevDlic3mAD9C0ceVpLrSNeCLYfKAY9PtjVjVP2JBLwqRkvMoaQg/132","nickname":"晓μ","note":"","ucode":"4C6A062C43B570","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":5077,"discussion_content":"放心，老师都会讲到的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1565929208,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":5049,"ip_address":""},"score":5077,"extra":""}]}]},{"had_liked":false,"id":135374,"user_name":"Yize Li","can_delete":false,"product_type":"c1","uid":1566700,"ip_address":"","ucode":"3D3971FA91E4A3","user_header":"https://static001.geekbang.org/account/avatar/00/17/e7/ec/f4324033.jpg","comment_is_top":false,"comment_ctime":1569141081,"is_pvip":true,"replies":[{"id":"51961","content":"是这样的。","user_name":"作者回复","comment_id":135374,"uid":"1501046","ip_address":"","utype":1,"ctime":1569202255,"user_name_real":"李玥"}],"discussion_count":5,"race_medal":0,"score":"104648356185","product_id":100032301,"comment_content":"看了之前的一个留言 认为本地数据库和消息系统是两个系统所以违反了原子性 我是有些疑惑的。<br>我认为 原子性破坏与否取决于是否存在数据库中订单成功但是在购物车中商品没有取消的情况 通过rocketmq的半消息模式是可以保证该情况不出现。所以原子性没有破坏 但是由于消息系统的异步性 导致我们可以观察到事物执行过程中或回滚中的中间状态 这意味着强一致性被破坏 只剩下了最终一致性","like_count":24,"discussions":[{"author":{"id":1501046,"avatar":"https://static001.geekbang.org/account/avatar/00/16/e7/76/79c1f23a.jpg","nickname":"李玥","note":"","ucode":"B19E91EE248591","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":468163,"discussion_content":"是这样的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1569202255,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1674529,"avatar":"https://static001.geekbang.org/account/avatar/00/19/8d/21/72d19bf7.jpg","nickname":"DEJAVU","note":"","ucode":"C94D29F73B1A18","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":259702,"discussion_content":"不过订单系统提交成功的情况下,消息系统没有收到提交的反馈,此时订单系统的数据库里面已经有了商品,但是购物车系统里这个商品并没有被立即删除,而是要等消息系统的回查机制生效后,才能保证一致性\n因此原子性实际上还是和一致性相互关联的,不能把原子性和一致性完全分割来看","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1588812106,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1674529,"avatar":"https://static001.geekbang.org/account/avatar/00/19/8d/21/72d19bf7.jpg","nickname":"DEJAVU","note":"","ucode":"C94D29F73B1A18","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":259699,"discussion_content":"从订单系统和购物车系统的角度来看,是满足原子性的\n从订单系统和消息系统的角度来看,就不满足原子性\n所以还是要具体分析针对的是哪两个系统","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1588811887,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1592279,"avatar":"https://static001.geekbang.org/account/avatar/00/18/4b/d7/f46c6dfd.jpg","nickname":"William Ning","note":"","ucode":"4DB8D05E69E5F3","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":582454,"discussion_content":"“我认为 原子性破坏与否取决于是否存在数据库中订单成功但是在购物车中商品没有取消的情况” \n\n不同意这句话，消息事务解决的不是这个问题，文中说到了，个人认为大家争论的点，跑偏了。\n\n老师也说，是解决创建订单和发消息的问题，要么都成功，要么都失败。\n\n至于创建订单和购物车数据，是否保持一致，这确实涉及到了数据一致性，但是这里的分布式事务，并没有去解决这个问题，购物车服务本身不在这个事务控制中，而且在这里他们是非强一致性的。\n\n个人观点，供参考","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1659436843,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"四川"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1434423,"avatar":"https://static001.geekbang.org/account/avatar/00/15/e3/37/c132802f.jpg","nickname":"WESTWALL","note":"","ucode":"295A030F9D3BF4","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":543902,"discussion_content":"下单这个操作是一个完整的业务，不该把订单和购物车两个系统分开来看。从“全部成功或全部失败”这个角度来理解，这个操作确实是满足原子性的。\n\n楼上同学“从订单系统和消息系统的角度来看,就不满足原子性”，这个观点不赞同，这应该是隔离性。从订单提交之后，到购车提交之前，这个提交了的订单都是脏数据，整个系统其实是读未提交（Read uncommitted）。\n\nACID里面，分布式事务一般都是AD。\n\n\n\n\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1641350878,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":119611,"user_name":"DC","can_delete":false,"product_type":"c1","uid":1250344,"ip_address":"","ucode":"EC0E7E86056FA6","user_header":"https://static001.geekbang.org/account/avatar/00/13/14/28/9e3edef0.jpg","comment_is_top":false,"comment_ctime":1564637181,"is_pvip":false,"replies":[{"id":"43964","content":"👍👍👍","user_name":"作者回复","comment_id":119611,"uid":"1501046","ip_address":"","utype":1,"ctime":1564707922,"user_name_real":"李玥"}],"discussion_count":1,"race_medal":0,"score":"65989146621","product_id":100032301,"comment_content":"rocket mq 事务消息参考文档：https:&#47;&#47;rocketmq.apache.org&#47;docs&#47;transaction-example&#47;","like_count":16,"discussions":[{"author":{"id":1501046,"avatar":"https://static001.geekbang.org/account/avatar/00/16/e7/76/79c1f23a.jpg","nickname":"李玥","note":"","ucode":"B19E91EE248591","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":460978,"discussion_content":"👍👍👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1564707922,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":136603,"user_name":"yan","can_delete":false,"product_type":"c1","uid":1020386,"ip_address":"","ucode":"8E7F8155D15646","user_header":"https://static001.geekbang.org/account/avatar/00/0f/91/e2/acf750ab.jpg","comment_is_top":false,"comment_ctime":1569480069,"is_pvip":false,"replies":[{"id":"52399","content":"所以几乎所有的类似系统都会事先生成订单ID，而不是在插入数据库的时候才生成。","user_name":"作者回复","comment_id":136603,"uid":"1501046","ip_address":"","utype":1,"ctime":1569495708,"user_name_real":"李玥"}],"discussion_count":3,"race_medal":0,"score":"57404054917","product_id":100032301,"comment_content":"如果订单ID是要创建完订单才会有的，那消息中就没有订单ID，那反查本地事务要根据什么查？","like_count":14,"discussions":[{"author":{"id":1501046,"avatar":"https://static001.geekbang.org/account/avatar/00/16/e7/76/79c1f23a.jpg","nickname":"李玥","note":"","ucode":"B19E91EE248591","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":468720,"discussion_content":"所以几乎所有的类似系统都会事先生成订单ID，而不是在插入数据库的时候才生成。","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1569495708,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1359701,"avatar":"https://static001.geekbang.org/account/avatar/00/14/bf/55/198c6104.jpg","nickname":"小伟","note":"","ucode":"124953423491E2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":115671,"discussion_content":"如果订单ID一定只能在订单创建完之后才有，那么在发送的半消息里得有一个全局唯一ID(如UUID)，在订单ID出来之后，将订单ID和UUID一起放到一个MQ broker能拿到的地方，由MQ broker根据UUID关联得到订单ID再做反查。如果反查时没找到这个pair则认为unknow，如果找到合法订单ID则认为commit，否则认为rollback。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1578027149,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1485489,"avatar":"https://static001.geekbang.org/account/avatar/00/16/aa/b1/c834aab5.jpg","nickname":"张小勋","note":"","ucode":"8C5E434EF53BF4","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":23064,"discussion_content":"是的 下单接口 都是 要去掉专门生成订单ID的接口  用这个订单ID 去创建订单的  楼上的人 问的 可能认为这个订单ID 是订单主键了~  误解了 可能~","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1569749265,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":118731,"user_name":"朱海昆","can_delete":false,"product_type":"c1","uid":1047293,"ip_address":"","ucode":"73E49C17A0314E","user_header":"https://static001.geekbang.org/account/avatar/00/0f/fa/fd/3a6d013a.jpg","comment_is_top":false,"comment_ctime":1564443450,"is_pvip":true,"replies":[{"id":"43544","content":"如果有一个生产者和消费者都可以访问的，并且性能还不错数据库，肯定是使用这个数据库来实现事务比较好。<br><br>大部分事务消息使用的场景是，没有这样的数据库的。或者由于设计、安全或者网络原因，生产者消费者不能共享数据库，或者是数据库的性能达不到要求。","user_name":"作者回复","comment_id":118731,"uid":"1501046","ip_address":"","utype":1,"ctime":1564451553,"user_name_real":"李玥"}],"discussion_count":4,"race_medal":0,"score":"44514116410","product_id":100032301,"comment_content":"老师，如果消息队列不支持半消息，是否有其他的解决方案？我了解到一种解决方法是利用数据库的事务消息表的方案。把消息信息的快照和对业务数据的操作作为数据库事务操作数据库，操作成功后从数据库读取消息信息发送给broker，收到发送成功的回执后删除数据库中的消息快照。我个人觉得这种方案在不支持半消息的队列方案里也是一种选择，不知道您觉得这种实现方案有没有什么问题。","like_count":10,"discussions":[{"author":{"id":1501046,"avatar":"https://static001.geekbang.org/account/avatar/00/16/e7/76/79c1f23a.jpg","nickname":"李玥","note":"","ucode":"B19E91EE248591","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":460548,"discussion_content":"如果有一个生产者和消费者都可以访问的，并且性能还不错数据库，肯定是使用这个数据库来实现事务比较好。\n\n大部分事务消息使用的场景是，没有这样的数据库的。或者由于设计、安全或者网络原因，生产者消费者不能共享数据库，或者是数据库的性能达不到要求。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1564451553,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1310814,"avatar":"https://static001.geekbang.org/account/avatar/00/14/00/5e/73dd7bf6.jpg","nickname":"乘风","note":"","ucode":"51C1BCC1701BDA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":3683,"discussion_content":"人家说的是只给生产者使用的事务消息表吧","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1564707289,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1026832,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/ab/10/b812ff3e.jpg","nickname":"Hesher","note":"","ucode":"99AB8B1704CB7E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1310814,"avatar":"https://static001.geekbang.org/account/avatar/00/14/00/5e/73dd7bf6.jpg","nickname":"乘风","note":"","ucode":"51C1BCC1701BDA","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":546628,"discussion_content":"我觉得也是","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1642376130,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":3683,"ip_address":""},"score":546628,"extra":""}]},{"author":{"id":1608817,"avatar":"https://static001.geekbang.org/account/avatar/00/18/8c/71/0d1a0ae9.jpg","nickname":"傅宇新","note":"","ucode":"262496F0E29E84","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":261914,"discussion_content":"也可以提供微服务接口查询事务状态","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1589023007,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":118939,"user_name":"芥末小龙","can_delete":false,"product_type":"c1","uid":1176417,"ip_address":"","ucode":"387D01880867AC","user_header":"https://static001.geekbang.org/account/avatar/00/11/f3/61/8f7fca5b.jpg","comment_is_top":false,"comment_ctime":1564472480,"is_pvip":false,"replies":[{"id":"43715","content":"到位。","user_name":"作者回复","comment_id":118939,"uid":"1501046","ip_address":"","utype":1,"ctime":1564538692,"user_name_real":"李玥"}],"discussion_count":2,"race_medal":0,"score":"40219178144","product_id":100032301,"comment_content":"我jiao着吧，如果先创建订单，当前服务由于不可抗拒因素不能正常工作了，没有给购物车系统发送消息，这种情况加就会出现 订单已经创建并且购物车没有清空的情况。然鹅发送半消息这种情况，可以通过定期查询事务的状态然后根据然后具体的业务回滚操作或者重新发送消息（保持业务的幂等性）。技术渣理解的有可能不到位 谅解","like_count":9,"discussions":[{"author":{"id":1501046,"avatar":"https://static001.geekbang.org/account/avatar/00/16/e7/76/79c1f23a.jpg","nickname":"李玥","note":"","ucode":"B19E91EE248591","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":460676,"discussion_content":"到位。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1564538692,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1980201,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/37/29/b3af57a7.jpg","nickname":"凯文小猪","note":"","ucode":"36D8AD0229547F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":367540,"discussion_content":"实际上就是把一件事拆成两阶段提交 中间加个软状态 不断地去回查，这中间解决了分布式场景中的分区容忍性 比方说网络瞬断等等。所以实际上是rocketmq把分布式事务又做了一遍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1618389300,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":134357,"user_name":"长期规划","can_delete":false,"product_type":"c1","uid":1019332,"ip_address":"","ucode":"5EF65E9115834B","user_header":"https://static001.geekbang.org/account/avatar/00/0f/8d/c4/6f97daea.jpg","comment_is_top":false,"comment_ctime":1568812440,"is_pvip":false,"replies":[{"id":"51548","content":"把数据库事务放到Kafka事务中的好处是，在发消息和执行SQL阶段，无论哪个操作失败了，都可以自动回滚。<br>只有“提交Kafka事务失败了”这个情况才需要手动处理。<br><br>而要是不用Kafka事务，先执行数据库事务，再发普通消息，如果发消息失败就要手动回滚数据库。<br><br>你要明白，提交事务只是设置一个状态，失败的概率要远远小于发消息的概率。<br><br>虽然理论上这两种情况失败都需手动处理，但是失败的概率差别很大，所以实际上还是非常有用的。","user_name":"作者回复","comment_id":134357,"uid":"1501046","ip_address":"","utype":1,"ctime":1568856199,"user_name_real":"李玥"}],"discussion_count":5,"race_medal":0,"score":"31633583512","product_id":100032301,"comment_content":"老师，kafka对提交消息队列事务失败时的处理方法，我感觉和不用事务没什么区别吧？如果不用事务，先完成数据库事务，再发消息，消失失败也是用户自己处理，比如重试。这跟kafka用分布式事务有什么区别吗","like_count":7,"discussions":[{"author":{"id":1501046,"avatar":"https://static001.geekbang.org/account/avatar/00/16/e7/76/79c1f23a.jpg","nickname":"李玥","note":"","ucode":"B19E91EE248591","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":467714,"discussion_content":"把数据库事务放到Kafka事务中的好处是，在发消息和执行SQL阶段，无论哪个操作失败了，都可以自动回滚。\n只有“提交Kafka事务失败了”这个情况才需要手动处理。\n\n而要是不用Kafka事务，先执行数据库事务，再发普通消息，如果发消息失败就要手动回滚数据库。\n\n你要明白，提交事务只是设置一个状态，失败的概率要远远小于发消息的概率。\n\n虽然理论上这两种情况失败都需手动处理，但是失败的概率差别很大，所以实际上还是非常有用的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1568856199,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2674185,"avatar":"","nickname":"Geek_66be20","note":"","ucode":"3766A7C54E0E7E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":380856,"discussion_content":"感谢玥哥精彩解释，受用。先发半消息，提交本地事物放在jmq的事物里面，然后提交本地事物，再根据提交结果进行提交或者回滚jmq事物，如果最后一步异常，再重试或者其他补偿机制。在jd的订单中心关于生成订单删除购物车内的勾选商品，jmq也是采用类似kafka这种模式吗？在jd内部使用事物消息比较少，还请玥哥答疑。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1624756880,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1359701,"avatar":"https://static001.geekbang.org/account/avatar/00/14/bf/55/198c6104.jpg","nickname":"小伟","note":"","ucode":"124953423491E2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":115676,"discussion_content":"如果有反查机制就不需要这么复杂吧。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578027364,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1485489,"avatar":"https://static001.geekbang.org/account/avatar/00/16/aa/b1/c834aab5.jpg","nickname":"张小勋","note":"","ucode":"8C5E434EF53BF4","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":23062,"discussion_content":"嗯 有道理~ 明白了~","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1569749056,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1019332,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/8d/c4/6f97daea.jpg","nickname":"长期规划","note":"","ucode":"5EF65E9115834B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":15881,"discussion_content":"明白了，谢谢老师的解惑😉","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1568857621,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":121131,"user_name":"晴天","can_delete":false,"product_type":"c1","uid":1100637,"ip_address":"","ucode":"9796E0EF8DD9A8","user_header":"https://static001.geekbang.org/account/avatar/00/10/cb/5d/f3b20f07.jpg","comment_is_top":false,"comment_ctime":1565062192,"is_pvip":false,"replies":[{"id":"44627","content":"这个问题消息队列解决不了，可能需要用其他的分布式事务解决方案。","user_name":"作者回复","comment_id":121131,"uid":"1501046","ip_address":"","utype":1,"ctime":1565138787,"user_name_real":"李玥"}],"discussion_count":3,"race_medal":0,"score":"31629833264","product_id":100032301,"comment_content":"你好，我想问一下，比如订单创建这些都成功了，也发送了消息，但是清空购物车的时候失败了，这个时候我看到做法就是消息重试，但是会不会有一种场景，下游决定上游需要回滚，也就是需要回滚订单创建的事务，这种可能存在吗？怎么处理呢","like_count":7,"discussions":[{"author":{"id":1501046,"avatar":"https://static001.geekbang.org/account/avatar/00/16/e7/76/79c1f23a.jpg","nickname":"李玥","note":"","ucode":"B19E91EE248591","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":461644,"discussion_content":"这个问题消息队列解决不了，可能需要用其他的分布式事务解决方案。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1565138787,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1943063,"avatar":"","nickname":"Kong指针","note":"","ucode":"E2B689260B0063","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":219768,"discussion_content":"RocketMQ4.6.0提供Request-Reply模式，可解决您的困扰","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1585804896,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1359701,"avatar":"https://static001.geekbang.org/account/avatar/00/14/bf/55/198c6104.jpg","nickname":"小伟","note":"","ucode":"124953423491E2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":115686,"discussion_content":"分布式事务补偿吧，一般代价都蛮大的，不得已再用。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1578027907,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":159970,"user_name":"Cha","can_delete":false,"product_type":"c1","uid":1080389,"ip_address":"","ucode":"BE28533F67F0F5","user_header":"https://static001.geekbang.org/account/avatar/00/10/7c/45/416fe519.jpg","comment_is_top":false,"comment_ctime":1575852913,"is_pvip":false,"replies":[{"id":"61571","content":"一般MQ的Broker都有高可用方案，不会出现一个节点宕机就无法发消息的问题。<br><br>所以不用担心这个问题。","user_name":"作者回复","comment_id":159970,"uid":"1501046","ip_address":"","utype":1,"ctime":1576298939,"user_name_real":"李玥"}],"discussion_count":1,"race_medal":4,"score":"27345656689","product_id":100032301,"comment_content":"使用事务消息的话，如果此时mq服务挂了，是否订单就没办法下单了？","like_count":6,"discussions":[{"author":{"id":1501046,"avatar":"https://static001.geekbang.org/account/avatar/00/16/e7/76/79c1f23a.jpg","nickname":"李玥","note":"","ucode":"B19E91EE248591","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":477222,"discussion_content":"一般MQ的Broker都有高可用方案，不会出现一个节点宕机就无法发消息的问题。\n\n所以不用担心这个问题。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1576298939,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":134174,"user_name":"多襄丸","can_delete":false,"product_type":"c1","uid":1074310,"ip_address":"","ucode":"1AA1497C5A293C","user_header":"https://static001.geekbang.org/account/avatar/00/10/64/86/f5a9403a.jpg","comment_is_top":false,"comment_ctime":1568770284,"is_pvip":false,"replies":[{"id":"51483","content":"不会，你要注意，写反查逻辑的时候，如果查不到，不要反悔失败，而应该返回UNKNOWN","user_name":"作者回复","comment_id":134174,"uid":"1501046","ip_address":"","utype":1,"ctime":1568797358,"user_name_real":"李玥"}],"discussion_count":7,"race_medal":0,"score":"27338574060","product_id":100032301,"comment_content":"老师 那要是写主库 查从库 rocketmq 去反查的时候查的是从库， 而从库的数据还没有被同步进去。 会不会有问题哇？","like_count":6,"discussions":[{"author":{"id":1501046,"avatar":"https://static001.geekbang.org/account/avatar/00/16/e7/76/79c1f23a.jpg","nickname":"李玥","note":"","ucode":"B19E91EE248591","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":467638,"discussion_content":"不会，你要注意，写反查逻辑的时候，如果查不到，不要反悔失败，而应该返回UNKNOWN","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1568797358,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1112676,"avatar":"https://static001.geekbang.org/account/avatar/00/10/fa/64/457325e6.jpg","nickname":"Sam Fu","note":"","ucode":"EA285A4943271F","race_medal":1,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":412590,"discussion_content":"那什么情况才能返回失败呀？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1636211835,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1521181,"avatar":"https://static001.geekbang.org/account/avatar/00/17/36/1d/874dc1e3.jpg","nickname":"你的笑忘书","note":"","ucode":"9665D5E9EDBEA6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":390889,"discussion_content":"印象是 15 次限制","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1630120580,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1071172,"avatar":"https://static001.geekbang.org/account/avatar/00/10/58/44/e318a684.jpg","nickname":"Lisanaaa","note":"","ucode":"C907EED05A543D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":212751,"discussion_content":"假如就真的订单创建失败了，那难道这辈子都查不到，一直返回unknown嘛？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585013025,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":3,"child_discussions":[{"author":{"id":1361746,"avatar":"https://static001.geekbang.org/account/avatar/00/14/c7/52/c5adf218.jpg","nickname":"喜欢地球的阿培同学","note":"","ucode":"5F97037585F857","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1071172,"avatar":"https://static001.geekbang.org/account/avatar/00/10/58/44/e318a684.jpg","nickname":"Lisanaaa","note":"","ucode":"C907EED05A543D","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":232221,"discussion_content":"有重试次数限制吧","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1586861742,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":212751,"ip_address":""},"score":232221,"extra":""},{"author":{"id":1071172,"avatar":"https://static001.geekbang.org/account/avatar/00/10/58/44/e318a684.jpg","nickname":"Lisanaaa","note":"","ucode":"C907EED05A543D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1361746,"avatar":"https://static001.geekbang.org/account/avatar/00/14/c7/52/c5adf218.jpg","nickname":"喜欢地球的阿培同学","note":"","ucode":"5F97037585F857","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":232307,"discussion_content":"重试次数到了，那如果我们本来是写入成功，结果却没有commit了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1586866326,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":232221,"ip_address":""},"score":232307,"extra":""},{"author":{"id":1945605,"avatar":"https://static001.geekbang.org/account/avatar/00/1d/b0/05/c9da834e.jpg","nickname":"小人物大希望","note":"","ucode":"8EF313AA26D4B8","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1071172,"avatar":"https://static001.geekbang.org/account/avatar/00/10/58/44/e318a684.jpg","nickname":"Lisanaaa","note":"","ucode":"C907EED05A543D","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":238239,"discussion_content":"这种就应该让rocketmq去反查主库吧，毕竟提交消息失败的概率，相对是比较小的，不会给主库增加太多访问量吧","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1587216122,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":232307,"ip_address":""},"score":238239,"extra":""}]}]},{"had_liked":false,"id":119515,"user_name":"佳明","can_delete":false,"product_type":"c1","uid":1100299,"ip_address":"","ucode":"0BAAD556725638","user_header":"https://static001.geekbang.org/account/avatar/00/10/ca/0b/cafcc9d0.jpg","comment_is_top":false,"comment_ctime":1564621014,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"27334424790","product_id":100032301,"comment_content":"消费端做幂等处理来保障消息不会重复消费:1. 可以采用状态机的方式。2.消息数据唯一键+redis setnx来保障。3.本地消息表，要确保插入本地消息表和执行消息消费业务在同一事务里。","like_count":6},{"had_liked":false,"id":139928,"user_name":"陈天柱","can_delete":false,"product_type":"c1","uid":1696225,"ip_address":"","ucode":"917BFDC845760D","user_header":"https://static001.geekbang.org/account/avatar/00/19/e1/e1/441df85d.jpg","comment_is_top":false,"comment_ctime":1570769152,"is_pvip":false,"replies":[{"id":"54103","content":"这种你就需要使用一些通用的分布式事务算法的实现了，比如二阶段提交。","user_name":"作者回复","comment_id":139928,"uid":"1501046","ip_address":"","utype":1,"ctime":1570786991,"user_name_real":"李玥"}],"discussion_count":3,"race_medal":0,"score":"23045605632","product_id":100032301,"comment_content":"老师，您好。在这个分布式事务例子里，是涉及两个分布式服务，假如遇到跨三个或者三个以上的分布式该如何解决？假设通过服务划分或者业务改造，都免不了需要跨三个以上的分布式服务。","like_count":5,"discussions":[{"author":{"id":1501046,"avatar":"https://static001.geekbang.org/account/avatar/00/16/e7/76/79c1f23a.jpg","nickname":"李玥","note":"","ucode":"B19E91EE248591","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":470177,"discussion_content":"这种你就需要使用一些通用的分布式事务算法的实现了，比如二阶段提交。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1570786991,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1484192,"avatar":"https://static001.geekbang.org/account/avatar/00/16/a5/a0/e0cccf7e.jpg","nickname":"圆圆满满","note":"","ucode":"396E7A822014D1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":342901,"discussion_content":"如果遇到第三个，第三个不也是作为消费者来看待的吗？跟第二个不是同等的处理方式吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1610872374,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":2015438,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/c0/ce/eb1b4ae1.jpg","nickname":"可圈可丶","note":"","ucode":"EB527E176EDE91","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1484192,"avatar":"https://static001.geekbang.org/account/avatar/00/16/a5/a0/e0cccf7e.jpg","nickname":"圆圆满满","note":"","ucode":"396E7A822014D1","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":377212,"discussion_content":"题主的意思可能是在执行本地事务的时候需要调用多个服务，比如下单的流程就是：1.先扣款，2.创建订单 3.扣库存 4.清理购物车，但是1.2.3步必须得在本地事务处理成功之后，才能成功提交事务消息来进行第4步的清理购物车。所以在本地事务中执行1.2.3步调用不同的服务的时候怎样保证数据一致性","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1622551217,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":342901,"ip_address":""},"score":377212,"extra":""}]}]},{"had_liked":false,"id":162781,"user_name":"YAO","can_delete":false,"product_type":"c1","uid":1785019,"ip_address":"","ucode":"257C35DB283FFD","user_header":"https://static001.geekbang.org/account/avatar/00/1b/3c/bb/c88c2ed6.jpg","comment_is_top":false,"comment_ctime":1576588293,"is_pvip":false,"replies":[{"id":"62384","content":"支持的，但是每种MQ支持的“事务”都不太一样，使用前你需要看一下文档是不是你需要的那种“事务”","user_name":"作者回复","comment_id":162781,"uid":"1501046","ip_address":"","utype":1,"ctime":1576896768,"user_name_real":"李玥"}],"discussion_count":1,"race_medal":0,"score":"18756457477","product_id":100032301,"comment_content":"rabbitmq 支持事务吗","like_count":4,"discussions":[{"author":{"id":1501046,"avatar":"https://static001.geekbang.org/account/avatar/00/16/e7/76/79c1f23a.jpg","nickname":"李玥","note":"","ucode":"B19E91EE248591","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":478148,"discussion_content":"支持的，但是每种MQ支持的“事务”都不太一样，使用前你需要看一下文档是不是你需要的那种“事务”","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1576896768,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":124149,"user_name":"Rick","can_delete":false,"product_type":"c1","uid":1502914,"ip_address":"","ucode":"9B41FCA5B4E526","user_header":"https://static001.geekbang.org/account/avatar/00/16/ee/c2/873cc8d9.jpg","comment_is_top":false,"comment_ctime":1565830729,"is_pvip":false,"replies":[{"id":"45721","content":"因为消费失败，会自动重试，所以不会丢消息，但是有可能重复消费。","user_name":"作者回复","user_name_real":"李玥","uid":"1501046","ctime":1565917410,"ip_address":"","comment_id":124149,"utype":1}],"discussion_count":1,"race_medal":0,"score":"18745699913","product_id":100032301,"comment_content":"补充一下之前的提问：如果插入消息表成功之后，消费方崩溃导致消费失败，这个时候会不会导致消息被丢掉？应该如何处理这个问题？","like_count":4,"discussions":[{"author":{"id":1501046,"avatar":"https://static001.geekbang.org/account/avatar/00/16/e7/76/79c1f23a.jpg","nickname":"李玥","note":"","ucode":"B19E91EE248591","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":463031,"discussion_content":"因为消费失败，会自动重试，所以不会丢消息，但是有可能重复消费。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1565917410,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":119412,"user_name":"看不到de颜色","can_delete":false,"product_type":"c1","uid":1162714,"ip_address":"","ucode":"88348CCAE81931","user_header":"https://static001.geekbang.org/account/avatar/00/11/bd/da/3d76ea74.jpg","comment_is_top":false,"comment_ctime":1564581181,"is_pvip":false,"replies":[{"id":"43873","content":"<br>A1：提交事务消息失败可以通过重试来解决，但是，对我们这个例子来说，更适合用RocketMQ的事务来实现，Kafka的事务也有它擅长的场景，后面我会讲到。<br><br>A2: 批消息不是事务，仅仅是批量发送用来提升性能。<br><br>A3：会的，具体你可以看下课程大纲。","user_name":"作者回复","user_name_real":"李玥","uid":"1501046","ctime":1564628029,"ip_address":"","comment_id":119412,"utype":1}],"discussion_count":1,"race_medal":0,"score":"18744450365","product_id":100032301,"comment_content":"读完这篇今天的有几点疑问还想请老师解答一下。<br>1、在Kafka的步骤四消息事务确认阶段如果发送失败会抛异常。那如果仅仅是抛异常的话和直接发送MQ失败抛异常岂不没有区别，它的half消息作用体现在哪呢。<br>2、记得老师在之前的文章中提到过，Kafka发送消息都是批量发送，那么批量发送是否也是事务的呢？<br>3、老师在后续的章节总还会对Kafka及RocketMQ的实现进一步讲解吗。","like_count":4,"discussions":[{"author":{"id":1501046,"avatar":"https://static001.geekbang.org/account/avatar/00/16/e7/76/79c1f23a.jpg","nickname":"李玥","note":"","ucode":"B19E91EE248591","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":460894,"discussion_content":"\nA1：提交事务消息失败可以通过重试来解决，但是，对我们这个例子来说，更适合用RocketMQ的事务来实现，Kafka的事务也有它擅长的场景，后面我会讲到。\n\nA2: 批消息不是事务，仅仅是批量发送用来提升性能。\n\nA3：会的，具体你可以看下课程大纲。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1564628029,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":118888,"user_name":"许童童","can_delete":false,"product_type":"c1","uid":1003005,"ip_address":"","ucode":"4B799C0C6BC678","user_header":"https://static001.geekbang.org/account/avatar/00/0f/4d/fd/0aa0e39f.jpg","comment_is_top":false,"comment_ctime":1564458369,"is_pvip":false,"replies":[{"id":"43720","content":"坚持下来就是对老师最好的支持。","user_name":"作者回复","user_name_real":"李玥","uid":"1501046","ctime":1564539130,"ip_address":"","comment_id":118888,"utype":1}],"discussion_count":1,"race_medal":0,"score":"18744327553","product_id":100032301,"comment_content":"老师讲得真好，真的是深入浅出，继续跟着老师学习！","like_count":4,"discussions":[{"author":{"id":1501046,"avatar":"https://static001.geekbang.org/account/avatar/00/16/e7/76/79c1f23a.jpg","nickname":"李玥","note":"","ucode":"B19E91EE248591","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":460641,"discussion_content":"坚持下来就是对老师最好的支持。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1564539130,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":232951,"user_name":"鱼","can_delete":false,"product_type":"c1","uid":1487584,"ip_address":"","ucode":"89EC9CE3AD0281","user_header":"https://static001.geekbang.org/account/avatar/00/16/b2/e0/d856f5a4.jpg","comment_is_top":false,"comment_ctime":1594176830,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"14479078718","product_id":100032301,"comment_content":"结合老师的讲解和2PC说说我对事物消息的理解：本质上消息队列的事物是基于2PC的一种变种实践，Producer是协调者，本地事物和broker都看成参与者。其中半消息就是一个很明显的prepare阶段。<br>至于为什么说变种，是因为MQ无法约束本地事物，无法要求其实现prepare和commit服务。所以Kafka和RocketMQ提出了各自的解决方案，Kafka选择不侵入业务抛出异常让业务自行处理（重试或者回滚）。RocketMQ，让业务告知状态，自己实现重试逻辑（轮询）尽量迁就业务。<br>按以上理解，还有一种方案就是让本地服务实现标准的2PC中参与者的逻辑：prepare和commit。prepare锁定业务资源，commit真正提交。不过这种方案对业务侵入极强，还有可能造成死锁，这可能是Kafka和RocketMQ没有采用的原因。","like_count":3},{"had_liked":false,"id":196687,"user_name":"咬尖月牙儿","can_delete":false,"product_type":"c1","uid":1325661,"ip_address":"","ucode":"A6223A6B713109","user_header":"https://static001.geekbang.org/account/avatar/00/14/3a/5d/c5dc789a.jpg","comment_is_top":false,"comment_ctime":1585302708,"is_pvip":false,"replies":[{"id":"74840","content":"是的，这种方案理论上是不能做到百分之百的一致性的。<br><br>实际上，如果清空购物车失败回滚，消息消费失败，这个消息会自动重新消费，相当于自动重试，直到成功为止。","user_name":"作者回复","user_name_real":"李玥","uid":"1501046","ctime":1585533691,"ip_address":"","comment_id":196687,"utype":1}],"discussion_count":1,"race_medal":0,"score":"14470204596","product_id":100032301,"comment_content":"这里如果涉及多个本地事务如何处理呢，这里清空购物车的事务如果回滚 并不会导致创建订单事务的回滚，不满足一致性啊。","like_count":3,"discussions":[{"author":{"id":1501046,"avatar":"https://static001.geekbang.org/account/avatar/00/16/e7/76/79c1f23a.jpg","nickname":"李玥","note":"","ucode":"B19E91EE248591","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":489360,"discussion_content":"是的，这种方案理论上是不能做到百分之百的一致性的。\n\n实际上，如果清空购物车失败回滚，消息消费失败，这个消息会自动重新消费，相当于自动重试，直到成功为止。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585533691,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":142863,"user_name":"文正","can_delete":false,"product_type":"c1","uid":1103745,"ip_address":"","ucode":"755DDB8A00B7A4","user_header":"https://static001.geekbang.org/account/avatar/00/10/d7/81/2727b475.jpg","comment_is_top":false,"comment_ctime":1571566942,"is_pvip":false,"replies":[{"id":"55256","content":"嗯 ，其实这两种方法原理是差不多的。","user_name":"作者回复","user_name_real":"李玥","uid":"1501046","ctime":1571620904,"ip_address":"","comment_id":142863,"utype":1}],"discussion_count":1,"race_medal":0,"score":"14456468830","product_id":100032301,"comment_content":"我们之前其实最古老的做法是，同步将待发消息存储在另一个消息表里面，这样就能保证了业务与本地消息在同一个事务中。然后启动一个任务专门去发消息。当然这样也有不好的地方。为了便于理解，完全可以这样逆向的来思考，将消息事务理解成另一个数据库事务。","like_count":3,"discussions":[{"author":{"id":1501046,"avatar":"https://static001.geekbang.org/account/avatar/00/16/e7/76/79c1f23a.jpg","nickname":"李玥","note":"","ucode":"B19E91EE248591","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":471300,"discussion_content":"嗯 ，其实这两种方法原理是差不多的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571620904,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":119060,"user_name":"Mark Yao","can_delete":false,"product_type":"c1","uid":1091768,"ip_address":"","ucode":"0535CEB691F618","user_header":"https://static001.geekbang.org/account/avatar/00/10/a8/b8/73ef30ed.jpg","comment_is_top":false,"comment_ctime":1564495016,"is_pvip":false,"replies":[{"id":"43711","content":"你可以看一下这个反查接口的定义，它检查的是本地事务（在我们这个例子里面就是数据库事务）有没有执行成功，并不比较数据是否一致。","user_name":"作者回复","user_name_real":"李玥","uid":"1501046","ctime":1564538055,"ip_address":"","comment_id":119060,"utype":1}],"discussion_count":3,"race_medal":0,"score":"14449396904","product_id":100032301,"comment_content":"对RocketMQ 的事务反查机制比较感兴趣。如果反查的服务器数据不一致，它是认为本地事务失败还是继续多次反查呢？","like_count":3,"discussions":[{"author":{"id":1501046,"avatar":"https://static001.geekbang.org/account/avatar/00/16/e7/76/79c1f23a.jpg","nickname":"李玥","note":"","ucode":"B19E91EE248591","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":460731,"discussion_content":"你可以看一下这个反查接口的定义，它检查的是本地事务（在我们这个例子里面就是数据库事务）有没有执行成功，并不比较数据是否一致。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1564538055,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1980201,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/37/29/b3af57a7.jpg","nickname":"凯文小猪","note":"","ucode":"36D8AD0229547F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":367543,"discussion_content":"反查结果由业务方返回 mq只是定期来查而已","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1618389402,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1359701,"avatar":"https://static001.geekbang.org/account/avatar/00/14/bf/55/198c6104.jpg","nickname":"小伟","note":"","ucode":"124953423491E2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":115680,"discussion_content":"个人认为，反查的逻辑必须明确，根据订单ID查到记录则认为本地事务成功，没查到认为unknown，查询次数达到阈值仍未查到则认为失败。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578027606,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":165256,"user_name":"虚竹","can_delete":false,"product_type":"c1","uid":1691109,"ip_address":"","ucode":"8D8C96C793724E","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJIocn8OMjfSGqyeSJEV3ID2rquLR0S6xo0ibdNYQgzicib6L6VlqWjhgxOqD2iaicX1KhbWXWCsmBTskA/132","comment_is_top":false,"comment_ctime":1577189427,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10167124019","product_id":100032301,"comment_content":"分布式事务中为什么没有提到RabbitMQ呢？","like_count":2},{"had_liked":false,"id":160504,"user_name":"wendell","can_delete":false,"product_type":"c1","uid":1359353,"ip_address":"","ucode":"40E47FED3124FA","user_header":"https://static001.geekbang.org/account/avatar/00/14/bd/f9/99c931bf.jpg","comment_is_top":false,"comment_ctime":1575966667,"is_pvip":false,"replies":[{"id":"61579","content":"你可以简单的把一致性理解为，只要数据完成了变更，从这一刻起，读到的就是新的数据，而不应该读到变更过程中，或者变更前的数据。<br><br>一致性在线性系统中是理所当然的事儿，但是在分布式系统中，是很难解决的一个问题。<br>","user_name":"作者回复","user_name_real":"李玥","uid":"1501046","ctime":1576299863,"ip_address":"","comment_id":160504,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10165901259","product_id":100032301,"comment_content":"照着rocketmq源码里的例子敲了一遍代码<br>https:&#47;&#47;github.com&#47;apache&#47;rocketmq&#47;tree&#47;master&#47;example&#47;src&#47;main&#47;java&#47;org&#47;apache&#47;rocketmq&#47;example&#47;transaction<br><br>虽然只是照抄一遍，但是再次回顾本节课程，思路一下就清晰了，不再像没动手敲代码之前那么迷惑了。<br><br>关于一些ACID思考，这里只思考了一些原子性和一致性：<br>原子性：要么都成功要么都失败，一方面，如果订单服务成功，购物车服务成功，那么我觉得是实现了原子性了，只是可能会有中间的稍微短暂的延迟状态存在； 另一方面，如果订单服务失败，那么购物车服务是收不到消息处理的，所以也是符合的；最后，如果订单服务成功，购物车服务没有成功，如果业务可以容忍不处理购物车处理没有成功的情况，那么是没有实现原子性的，如果业务不容忍，那么肯定会用其他手段来使购物车处理成功，这种情况下我觉得也是实现了原子性的。 <br>（另外，这好像和最终一致性是一个效果，所以我分不太清，分布式事务场景的原子性和一致性区别，希望老师抽空解答一下疑惑）","like_count":2,"discussions":[{"author":{"id":1501046,"avatar":"https://static001.geekbang.org/account/avatar/00/16/e7/76/79c1f23a.jpg","nickname":"李玥","note":"","ucode":"B19E91EE248591","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":477393,"discussion_content":"你可以简单的把一致性理解为，只要数据完成了变更，从这一刻起，读到的就是新的数据，而不应该读到变更过程中，或者变更前的数据。\n\n一致性在线性系统中是理所当然的事儿，但是在分布式系统中，是很难解决的一个问题。\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1576299863,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":158390,"user_name":"高志强","can_delete":false,"product_type":"c1","uid":1276563,"ip_address":"","ucode":"68737002043752","user_header":"https://static001.geekbang.org/account/avatar/00/13/7a/93/c9302518.jpg","comment_is_top":false,"comment_ctime":1575363006,"is_pvip":false,"replies":[{"id":"61051","content":"你可以继续学习这篇：25 | RocketMQ与Kafka中如何实现事务？","user_name":"作者回复","user_name_real":"李玥","uid":"1501046","ctime":1575852272,"ip_address":"","comment_id":158390,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10165297598","product_id":100032301,"comment_content":"老师开启事物是基于什么实现，是关系型数据库还是kafka本身，如果提交失败，但发出去的消息已经撤不回来了...","like_count":2,"discussions":[{"author":{"id":1501046,"avatar":"https://static001.geekbang.org/account/avatar/00/16/e7/76/79c1f23a.jpg","nickname":"李玥","note":"","ucode":"B19E91EE248591","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":476702,"discussion_content":"你可以继续学习这篇：25 | RocketMQ与Kafka中如何实现事务？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1575852272,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":142938,"user_name":"张三丰","can_delete":false,"product_type":"c1","uid":1155275,"ip_address":"","ucode":"3A6215A40B3B21","user_header":"https://static001.geekbang.org/account/avatar/00/11/a0/cb/aab3b3e7.jpg","comment_is_top":false,"comment_ctime":1571591037,"is_pvip":false,"replies":[{"id":"55258","content":"消费是通过反复重试来保证的。所以不需要反查机制。<br><br>1. consumer拉消息<br>2.执行消费操作（对于事务消息就是执行数据库操作）<br>3.如果成功，返回消费确认，如果失败，返回失败或者什么都不返回。<br><br>这样就可以保证每条返回消费确认的消息都成功执行了消费操作。如果没返回成功，下次消费的还是这条消息，也就是重试。直到消费成功。","user_name":"作者回复","user_name_real":"李玥","uid":"1501046","ctime":1571621105,"ip_address":"","comment_id":142938,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10161525629","product_id":100032301,"comment_content":"1.对于rocketmq老师说的只是发送方的情况，对于消费方呢？如果因为网络问题消费失败了，就删除投递？难道消费方没有反查机制么？<br><br>2.同样kafka的消费方如果因为网络问题导致消费失败也会抛异常么？","like_count":2,"discussions":[{"author":{"id":1501046,"avatar":"https://static001.geekbang.org/account/avatar/00/16/e7/76/79c1f23a.jpg","nickname":"李玥","note":"","ucode":"B19E91EE248591","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":471336,"discussion_content":"消费是通过反复重试来保证的。所以不需要反查机制。\n\n1. consumer拉消息\n2.执行消费操作（对于事务消息就是执行数据库操作）\n3.如果成功，返回消费确认，如果失败，返回失败或者什么都不返回。\n\n这样就可以保证每条返回消费确认的消息都成功执行了消费操作。如果没返回成功，下次消费的还是这条消息，也就是重试。直到消费成功。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571621105,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":139338,"user_name":"大妖怪😀","can_delete":false,"product_type":"c1","uid":1241351,"ip_address":"","ucode":"F4E6044497E604","user_header":"https://static001.geekbang.org/account/avatar/00/12/f1/07/9ee96154.jpg","comment_is_top":false,"comment_ctime":1570615057,"is_pvip":false,"replies":[{"id":"53804","content":"对于这个例子来说，购物车的数据应该以订单的数据为准，只要订单提交了，购物车就应该清空。即使清空购物车失败，也不应该回滚订单数据。所以，购物车清空失败的话，应该反复重试。即使重试不成功也不要去回滚订单。<br><br>因为从业务重要性来说，下单的重要程度是高于清空购物车的，下单成功，清空购物车失败，最多是用户看到购物车里还有商品而已，不会影响到用户后续的支付购买。","user_name":"作者回复","user_name_real":"李玥","uid":"1501046","ctime":1570671865,"ip_address":"","comment_id":139338,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10160549649","product_id":100032301,"comment_content":"老师，您好，我有一个问题想请教一下：<br>如果流程的第五步消息投递完成，但是执行购物车操作失败了。但是这个时候订单事务已经成功提交了，这种情况购物车数据回滚了，但是订单那边怎么解决呢？","like_count":2,"discussions":[{"author":{"id":1501046,"avatar":"https://static001.geekbang.org/account/avatar/00/16/e7/76/79c1f23a.jpg","nickname":"李玥","note":"","ucode":"B19E91EE248591","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":469899,"discussion_content":"对于这个例子来说，购物车的数据应该以订单的数据为准，只要订单提交了，购物车就应该清空。即使清空购物车失败，也不应该回滚订单数据。所以，购物车清空失败的话，应该反复重试。即使重试不成功也不要去回滚订单。\n\n因为从业务重要性来说，下单的重要程度是高于清空购物车的，下单成功，清空购物车失败，最多是用户看到购物车里还有商品而已，不会影响到用户后续的支付购买。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1570671865,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":133969,"user_name":"多襄丸","can_delete":false,"product_type":"c1","uid":1074310,"ip_address":"","ucode":"1AA1497C5A293C","user_header":"https://static001.geekbang.org/account/avatar/00/10/64/86/f5a9403a.jpg","comment_is_top":false,"comment_ctime":1568709005,"is_pvip":false,"replies":[{"id":"51433","content":"是的，本地事务保证本地多个操作的事务完整性。<br>分布式事务保证多个本地事务（你可以把每个本地事务看成一个操作）的事务完整性。","user_name":"作者回复","user_name_real":"李玥","uid":"1501046","ctime":1568769358,"ip_address":"","comment_id":133969,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10158643597","product_id":100032301,"comment_content":"老师 我问一个问题 真正保证分布式事务回滚的 或者说真正干活的 是不是还是靠本地事务实现的？ 盼复。","like_count":2,"discussions":[{"author":{"id":1501046,"avatar":"https://static001.geekbang.org/account/avatar/00/16/e7/76/79c1f23a.jpg","nickname":"李玥","note":"","ucode":"B19E91EE248591","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":467565,"discussion_content":"是的，本地事务保证本地多个操作的事务完整性。\n分布式事务保证多个本地事务（你可以把每个本地事务看成一个操作）的事务完整性。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1568769358,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":130093,"user_name":"Aaron","can_delete":false,"product_type":"c1","uid":1066251,"ip_address":"","ucode":"B0C504A76297C7","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/0Qp9pxHBvgdZAveKzsvUFFUicCJfe7ONzhC7jSNFQDNFvg0jRMXuqqZOdxG1qKosylUYrpIHUR2Q76w5m4HtVkg/132","comment_is_top":false,"comment_ctime":1567385644,"is_pvip":true,"replies":[{"id":"48726","content":"我们这节课讲得RocketMQ的事务消息就是这么实现的。","user_name":"作者回复","user_name_real":"李玥","uid":"1501046","ctime":1567492454,"ip_address":"","comment_id":130093,"utype":1}],"discussion_count":2,"race_medal":0,"score":"10157320236","product_id":100032301,"comment_content":"rocketmq貌似有一项机制是可以先把消息发到对topic的队列中，此时消息的状态是send_ok，此状态下，消费者是看不到这条消息的。这种场景下可以先发送mq消息，然后提交订单，成功之后再通知mq修改状态，使得消费者可以正常消费该消息，如果此时通知失败，","like_count":2,"discussions":[{"author":{"id":1501046,"avatar":"https://static001.geekbang.org/account/avatar/00/16/e7/76/79c1f23a.jpg","nickname":"李玥","note":"","ucode":"B19E91EE248591","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":465799,"discussion_content":"我们这节课讲得RocketMQ的事务消息就是这么实现的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567492454,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1066251,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/0Qp9pxHBvgdZAveKzsvUFFUicCJfe7ONzhC7jSNFQDNFvg0jRMXuqqZOdxG1qKosylUYrpIHUR2Q76w5m4HtVkg/132","nickname":"Aaron","note":"","ucode":"B0C504A76297C7","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":7100,"discussion_content":"如果通知失败，后续在做一些补偿处理","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567385815,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":120647,"user_name":"我瑟瑟的方法","can_delete":false,"product_type":"c1","uid":1065819,"ip_address":"","ucode":"1364CD531E1B72","user_header":"https://static001.geekbang.org/account/avatar/00/10/43/5b/17fef3ba.jpg","comment_is_top":false,"comment_ctime":1564966425,"is_pvip":false,"replies":[{"id":"44272","content":"可以的。","user_name":"作者回复","user_name_real":"李玥","uid":"1501046","ctime":1564968090,"ip_address":"","comment_id":120647,"utype":1}],"discussion_count":4,"race_medal":0,"score":"10154901017","product_id":100032301,"comment_content":"文中的订单购物车列子，第二步发送半消息第三步创建订单，这2个顺序反一下是不是也是等价的，即先创建订单在发送半消息","like_count":2,"discussions":[{"author":{"id":1501046,"avatar":"https://static001.geekbang.org/account/avatar/00/16/e7/76/79c1f23a.jpg","nickname":"李玥","note":"","ucode":"B19E91EE248591","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":461417,"discussion_content":"可以的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1564968090,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1071172,"avatar":"https://static001.geekbang.org/account/avatar/00/10/58/44/e318a684.jpg","nickname":"Lisanaaa","note":"","ucode":"C907EED05A543D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":212824,"discussion_content":"不可以吧，如果先创建订单，然后生产者马上就宕机了，那消息压根没发出去，但是订单却创建成功了，这样就不正确了。必须要先发半消息且发出成功才能去尝试创建订单，这样即使订单创建失败，mq这边也有一个半消息的凭证知道它需要回查，否则mq相当于完全不知道这回事。","likes_number":4,"is_delete":false,"is_hidden":false,"ctime":1585020836,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":2280052,"avatar":"","nickname":"Geek_347f64","note":"","ucode":"5B4933D7533F25","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1071172,"avatar":"https://static001.geekbang.org/account/avatar/00/10/58/44/e318a684.jpg","nickname":"Lisanaaa","note":"","ucode":"C907EED05A543D","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":327592,"discussion_content":"第一步是开启事务，第二步和第三步以后的第四步才是提交事务","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1605869646,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":212824,"ip_address":""},"score":327592,"extra":""}]},{"author":{"id":1502409,"avatar":"https://static001.geekbang.org/account/avatar/00/16/ec/c9/45bfcba3.jpg","nickname":"Xinyue Li","note":"","ucode":"0CB92610C8B9FC","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":225950,"discussion_content":"同意Lisa说的。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1586408782,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":118901,"user_name":"Jaising","can_delete":false,"product_type":"c1","uid":1037630,"ip_address":"","ucode":"F68830B7B90F96","user_header":"https://static001.geekbang.org/account/avatar/00/0f/d5/3e/7f3a9c2b.jpg","comment_is_top":false,"comment_ctime":1564462602,"is_pvip":false,"replies":[{"id":"43717","content":"在我们这里例子里面，本地事务就是创建订单这个数据库事务。","user_name":"作者回复","user_name_real":"李玥","uid":"1501046","ctime":1564539019,"ip_address":"","comment_id":118901,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10154397194","product_id":100032301,"comment_content":"李sir，能解释下本地事务和消息事务是个什么关系以及存在形式呢，不是很清楚(感觉不是简单的一个事务备份)","like_count":2,"discussions":[{"author":{"id":1501046,"avatar":"https://static001.geekbang.org/account/avatar/00/16/e7/76/79c1f23a.jpg","nickname":"李玥","note":"","ucode":"B19E91EE248591","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":460650,"discussion_content":"在我们这里例子里面，本地事务就是创建订单这个数据库事务。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1564539019,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":118855,"user_name":"nightmare","can_delete":false,"product_type":"c1","uid":1056314,"ip_address":"","ucode":"EF2E51C2122A86","user_header":"https://static001.geekbang.org/account/avatar/00/10/1e/3a/5b21c01c.jpg","comment_is_top":false,"comment_ctime":1564452976,"is_pvip":false,"replies":[{"id":"43685","content":"这个不一定，什么样的错误，就抛对应异常。","user_name":"作者回复","user_name_real":"李玥","uid":"1501046","ctime":1564535579,"ip_address":"","comment_id":118855,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10154387568","product_id":100032301,"comment_content":"kafka直接抛异常，是专门有一个特定的没有提交或回滚 的异常类型？","like_count":2,"discussions":[{"author":{"id":1501046,"avatar":"https://static001.geekbang.org/account/avatar/00/16/e7/76/79c1f23a.jpg","nickname":"李玥","note":"","ucode":"B19E91EE248591","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":460617,"discussion_content":"这个不一定，什么样的错误，就抛对应异常。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1564535579,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":118845,"user_name":"cricket1981","can_delete":false,"product_type":"c1","uid":1001715,"ip_address":"","ucode":"758262F5958DA4","user_header":"https://static001.geekbang.org/account/avatar/00/0f/48/f3/f1034ffd.jpg","comment_is_top":false,"comment_ctime":1564451948,"is_pvip":false,"replies":[{"id":"43682","content":"简单点儿说，就是给这个消息设置一个半消息的标志位，消费的时候，消息队发现某一条消息是这种“半消息”，就先不给发给用户，直到见到这个半消息对应的“提交消息”，才把这个消息发给用户。","user_name":"作者回复","user_name_real":"李玥","uid":"1501046","ctime":1564535120,"ip_address":"","comment_id":118845,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10154386540","product_id":100032301,"comment_content":"半消息机制是如何实现的？能简单描述下吗？","like_count":2,"discussions":[{"author":{"id":1501046,"avatar":"https://static001.geekbang.org/account/avatar/00/16/e7/76/79c1f23a.jpg","nickname":"李玥","note":"","ucode":"B19E91EE248591","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":460610,"discussion_content":"简单点儿说，就是给这个消息设置一个半消息的标志位，消费的时候，消息队发现某一条消息是这种“半消息”，就先不给发给用户，直到见到这个半消息对应的“提交消息”，才把这个消息发给用户。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1564535120,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":354492,"user_name":"Geek_c3ecc7","can_delete":false,"product_type":"c1","uid":1345041,"ip_address":"湖南","ucode":"F21F3E270FB264","user_header":"","comment_is_top":false,"comment_ctime":1660461702,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5955428998","product_id":100032301,"comment_content":"用户请求订单微服务 order-service 接口删除订单（退货），删除订单时需要调用 account-service的方法给账户增加余额，一个典型的分布式事务问题<br>1.在Order-Service和Account-Service中引入Rocket消息组件<br>&lt;dependency&gt;<br>    &lt;groupId&gt;org.apache.rocketmq&lt;&#47;groupId&gt;<br>    &lt;artifactId&gt;rocketmq-spring-boot-starter&lt;&#47;artifactId&gt;<br>&lt;&#47;dependency&gt;<br>2.在配置中心添加RocketMQ的相关配置<br>rocketmq:<br>  name-server: xxx.xx.x.xx:9876<br>  producer:<br>    group: cloud-group<br>3.在OrderService服务中建立一张事务日志表rocketmq_transaction_log(该表用于给rocketmq进行回查使用)<br>该表字段id主键  transaction_id事务id,log日志信息<br>4.首先在orderService中发送一条半消息给rocketmq<br>@Override<br>public void delete(String orderNo) {<br> Order order = orderMapper.selectByNo(orderNo);<br> &#47;&#47;如果订单存在且状态为有效，进行业务处理<br> if (order != null &amp;&amp; CloudConstant.VALID_STATUS.equals(order.getStatus())) {<br>  String transactionId = UUID.randomUUID().toString();<br>  &#47;&#47;如果可以删除订单则发送消息给rocketmq，让用户中心消费消息<br><br> &#47;&#47; 发送half消息，参数为topic，消息体，args<br>  rocketMQTemplate.sendMessageInTransaction(&quot;add-amount&quot;,<br>    MessageBuilder.withPayload(<br>      UserAddMoneyDTO.builder()<br>        .userCode(order.getAccountCode())<br>        .amount(order.getAmount())<br>        .build()<br>    )<br>    .setHeader(RocketMQHeaders.TRANSACTION_ID, transactionId)<br>    .setHeader(&quot;order_id&quot;,order.getId())<br>    .build()<br>    ,order<br>  );<br><br> }<br>}<br>然后实现RocketMQLocalTransactionListener接口并重写executeLocalTransaction和checkLocalTransaction方法，executeLocalTransaction可以从之前的header中获取事务id以及订单id并将其写入到数据库中(记得加@Transactional)。checkLocalTransaction用于rocketmq检查本地事务是否执行成功，可以从header中获取事务id，然后从rocketmq_transaction_log表中查询事务id是否存在，如果存在则重新commit,如果不存在则rollback<br>","like_count":1},{"had_liked":false,"id":265264,"user_name":"Chevy_7","can_delete":false,"product_type":"c1","uid":1048437,"ip_address":"","ucode":"ECC00FE241F91A","user_header":"https://static001.geekbang.org/account/avatar/00/0f/ff/75/c44362ef.jpg","comment_is_top":false,"comment_ctime":1606834566,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"5901801862","product_id":100032301,"comment_content":"老师，问个回查的问题，如果回查时producer挂了，broker会去其他producer实例上回查嘛，回查地址是如何确定的，在broker上有所有producer信息吗","like_count":1,"discussions":[{"author":{"id":1581390,"avatar":"https://static001.geekbang.org/account/avatar/00/18/21/4e/363b1e65.jpg","nickname":"Andrew胖虎","note":"","ucode":"ED70A22E7DF733","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":343892,"discussion_content":"回查是查库，跟producer没关系，数据又不会一直保存在producer内存里，等着你来回查。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1611208814,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":223261,"user_name":"旅途","can_delete":false,"product_type":"c1","uid":1212902,"ip_address":"","ucode":"5022477E8E9441","user_header":"https://static001.geekbang.org/account/avatar/00/12/81/e6/6cafed37.jpg","comment_is_top":false,"comment_ctime":1591029551,"is_pvip":false,"replies":[{"id":"82365","content":"先提交事务再发消息，在某些情况下是没法保证数据一致性的，考虑这样一种情况，按时间线：<br><br>T0：提交数据库事务成功<br>T1：订单服务实例宕机<br><br>这种情况下，订单提交成功，却没有发消息。<br>","user_name":"作者回复","user_name_real":"李玥","uid":"1501046","ctime":1591152372,"ip_address":"","comment_id":223261,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5885996847","product_id":100032301,"comment_content":"老师 问一下rocketmq的反查 如果能发送消息了 肯定是订单系统已成提交成功了才往下进行  为什么还要反查呢  直接发送不就行了吗？","like_count":1,"discussions":[{"author":{"id":1501046,"avatar":"https://static001.geekbang.org/account/avatar/00/16/e7/76/79c1f23a.jpg","nickname":"李玥","note":"","ucode":"B19E91EE248591","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":497079,"discussion_content":"先提交事务再发消息，在某些情况下是没法保证数据一致性的，考虑这样一种情况，按时间线：\n\nT0：提交数据库事务成功\nT1：订单服务实例宕机\n\n这种情况下，订单提交成功，却没有发消息。\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1591152372,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":213811,"user_name":"JOHN","can_delete":false,"product_type":"c1","uid":1692942,"ip_address":"","ucode":"6936DE275AA543","user_header":"https://static001.geekbang.org/account/avatar/00/19/d5/0e/dae566c7.jpg","comment_is_top":false,"comment_ctime":1588567162,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"5883534458","product_id":100032301,"comment_content":"demo是把数据库事务放在mq事务里面，那把mq事务放在数据库事务理论上也行吧，这种方案下如果提交消息失败就回滚数据库事务","like_count":1,"discussions":[{"author":{"id":1656848,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/fy2rpUzbSEeIAQHfbt0EkYkMIIuEPhWO6GFkjJNmLy5gbRp2UnNlrLh1fAAU52bQKfiahl17ZTOjhbYiatmrNibDg/132","nickname":"杨小曹","note":"","ucode":"D266D0A11BC573","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":378204,"discussion_content":"放在数据库事务中，我的理解是：\n1.需要处理超时的情况\n   - 超时后重发，这样会导致重复发送，而用半消息的话应该可以避免重复发送\n  - 超时后重试也不行，本地回滚，那么有可能消息已经到达队列，这样数据就不一致\n2.评论区说的，给消息队列发送提交/回滚事务动作，失败概率远小于发送消息。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1623112195,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":204549,"user_name":"yaomon","can_delete":false,"product_type":"c1","uid":1121557,"ip_address":"","ucode":"4742547EB92BCE","user_header":"https://static001.geekbang.org/account/avatar/00/11/1d/15/8ad4e24a.jpg","comment_is_top":false,"comment_ctime":1586419771,"is_pvip":false,"replies":[{"id":"76476","content":"反查的结果一般由三种：成功、失败和未知，如果返回未知，会再次反查。","user_name":"作者回复","user_name_real":"李玥","uid":"1501046","ctime":1586426549,"ip_address":"","comment_id":204549,"utype":1}],"discussion_count":2,"race_medal":0,"score":"5881387067","product_id":100032301,"comment_content":"我有个问题：反查本地事务是一次性的吗，万一本地事务还没提交呢，反查本地事务请求过来，这个时候接口没办法返回本地事务是成功还是失败，会怎么处理","like_count":1,"discussions":[{"author":{"id":1501046,"avatar":"https://static001.geekbang.org/account/avatar/00/16/e7/76/79c1f23a.jpg","nickname":"李玥","note":"","ucode":"B19E91EE248591","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":491214,"discussion_content":"反查的结果一般由三种：成功、失败和未知，如果返回未知，会再次反查。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1586426549,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":1,"child_discussions":[{"author":{"id":1397163,"avatar":"https://static001.geekbang.org/account/avatar/00/15/51/ab/f1c3a11a.jpg","nickname":"boyka","note":"","ucode":"30E6CE8A569102","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1501046,"avatar":"https://static001.geekbang.org/account/avatar/00/16/e7/76/79c1f23a.jpg","nickname":"李玥","note":"","ucode":"B19E91EE248591","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":555207,"discussion_content":"数据库里有订单ID对应成功，数据库里没有订单ID对应失败还是未知？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1646810745,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":491214,"ip_address":""},"score":555207,"extra":""}]}]},{"had_liked":false,"id":201026,"user_name":"InfoQ_e077cb303519","can_delete":false,"product_type":"c1","uid":1390669,"ip_address":"","ucode":"2CCA309DB2EF46","user_header":"https://wx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLAK6F4BFT5ewhJEeZrjmRx5HxP8tvnNpJcpLlotHiadp0s6aL3d7LfMHEuQP6tibu80wUy8micVu4oQ/132","comment_is_top":false,"comment_ctime":1585707035,"is_pvip":false,"replies":[{"id":"75372","content":"一般是利用“MQ消费失败会自动重试”的机制来重试。","user_name":"作者回复","user_name_real":"李玥","uid":"1501046","ctime":1585795234,"ip_address":"","comment_id":201026,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5880674331","product_id":100032301,"comment_content":"老师你好，我想问下如果提交事务成功但是购物车执行失败怎么处理","like_count":1,"discussions":[{"author":{"id":1501046,"avatar":"https://static001.geekbang.org/account/avatar/00/16/e7/76/79c1f23a.jpg","nickname":"李玥","note":"","ucode":"B19E91EE248591","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":490215,"discussion_content":"一般是利用“MQ消费失败会自动重试”的机制来重试。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585795234,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":180792,"user_name":"凡","can_delete":false,"product_type":"c1","uid":1721168,"ip_address":"","ucode":"80C2A6452AB9EA","user_header":"https://static001.geekbang.org/account/avatar/00/1a/43/50/abb4ca1e.jpg","comment_is_top":false,"comment_ctime":1582389735,"is_pvip":false,"replies":[{"id":"70344","content":"确保消息成功消费依靠的是MQ本身的消费确认机制。<br><br>如果消费失败，MQ会自动重试，直到成功的。<br>","user_name":"作者回复","user_name_real":"李玥","uid":"1501046","ctime":1582597733,"ip_address":"","comment_id":180792,"utype":1}],"discussion_count":2,"race_medal":0,"score":"5877357031","product_id":100032301,"comment_content":"这里的事务是否应该把购物车系统是否成功消费消息也算进去吧，如果光生产方把消息发送到了 broker，但是消费方由于种种原因没有消费，不能算是一个完整的事务","like_count":1,"discussions":[{"author":{"id":1501046,"avatar":"https://static001.geekbang.org/account/avatar/00/16/e7/76/79c1f23a.jpg","nickname":"李玥","note":"","ucode":"B19E91EE248591","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":484793,"discussion_content":"确保消息成功消费依靠的是MQ本身的消费确认机制。\n\n如果消费失败，MQ会自动重试，直到成功的。\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582597733,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1203293,"avatar":"https://static001.geekbang.org/account/avatar/00/12/5c/5d/974b033f.jpg","nickname":"陆老师","note":"","ucode":"0EA27C4755FF4A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":260056,"discussion_content":"如果将消费方消费成功算进一个事务，那这已经是强一致性了，性能不好，只要发送消息和本地事务原子性操作，就可以保证最终一致性了。至于消费者消费成功与否，是MQ来保证的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1588844780,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":169504,"user_name":"Hurt","can_delete":false,"product_type":"c1","uid":1050946,"ip_address":"","ucode":"DCE7428CCF08EF","user_header":"https://static001.geekbang.org/account/avatar/00/10/09/42/1f762b72.jpg","comment_is_top":false,"comment_ctime":1578366764,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5873334060","product_id":100032301,"comment_content":"老师 是不是大部分的消息队列都是采用 最终一致性啊？","like_count":1},{"had_liked":false,"id":168090,"user_name":"牛年榴莲","can_delete":false,"product_type":"c1","uid":1183703,"ip_address":"","ucode":"230C076193C6C0","user_header":"https://static001.geekbang.org/account/avatar/00/12/0f/d7/31d07471.jpg","comment_is_top":false,"comment_ctime":1578012574,"is_pvip":false,"replies":[{"id":"65569","content":"不会的，下单是否成功取决于数据库事务（本地事务）是否执行成功，这个和事务消息是否成功是没关系的，甚至和发消息是否成功都没有关系。","user_name":"作者回复","user_name_real":"李玥","uid":"1501046","ctime":1578274748,"ip_address":"","comment_id":168090,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5872979870","product_id":100032301,"comment_content":"考虑一下业务场景，这个方案是不是存在这样的问题：消息系统不可用，导致无法下订单。实际的设计会考虑优先保证订单创建成功吗？","like_count":1,"discussions":[{"author":{"id":1501046,"avatar":"https://static001.geekbang.org/account/avatar/00/16/e7/76/79c1f23a.jpg","nickname":"李玥","note":"","ucode":"B19E91EE248591","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":480133,"discussion_content":"不会的，下单是否成功取决于数据库事务（本地事务）是否执行成功，这个和事务消息是否成功是没关系的，甚至和发消息是否成功都没有关系。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578274748,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":158636,"user_name":"面向加薪学习","can_delete":false,"product_type":"c1","uid":1108117,"ip_address":"","ucode":"5164A1DF058AC5","user_header":"https://static001.geekbang.org/account/avatar/00/10/e8/95/13b88119.jpg","comment_is_top":false,"comment_ctime":1575425359,"is_pvip":false,"replies":[{"id":"61052","content":"这里面的“本地事务”你可以简单理解为数据库事务，从任何一个客户端都可以查询数据库中的数据不是么？","user_name":"作者回复","user_name_real":"李玥","uid":"1501046","ctime":1575852347,"ip_address":"","comment_id":158636,"utype":1}],"discussion_count":2,"race_medal":0,"score":"5870392655","product_id":100032301,"comment_content":"请问老师 反查本地事务的实现，并不依赖消息的发送方。 这个地方不是很理解。有2个疑问<br><br>代码需要提供一个接口查询本地事务结果，比如订单系统有3个机器-A,B,C,当A生成了订单，发送给mq,然后由于断电，A宕机了，那消息队列反查的时候，已经链接不到A了，RocketMQ还能通过其他节点查询到A的本地事务嘛?<br><br>这个本地事务是相对谁说的?是订单系统吗？还是mq系统?<br><br>","like_count":1,"discussions":[{"author":{"id":1501046,"avatar":"https://static001.geekbang.org/account/avatar/00/16/e7/76/79c1f23a.jpg","nickname":"李玥","note":"","ucode":"B19E91EE248591","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":476789,"discussion_content":"这里面的“本地事务”你可以简单理解为数据库事务，从任何一个客户端都可以查询数据库中的数据不是么？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1575852347,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":1,"child_discussions":[{"author":{"id":1103091,"avatar":"https://static001.geekbang.org/account/avatar/00/10/d4/f3/129d6dfe.jpg","nickname":"李二木","note":"","ucode":"30E03BB84ADB27","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1501046,"avatar":"https://static001.geekbang.org/account/avatar/00/16/e7/76/79c1f23a.jpg","nickname":"李玥","note":"","ucode":"B19E91EE248591","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":574973,"discussion_content":"是的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1654504999,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":476789,"ip_address":""},"score":574973,"extra":""}]}]},{"had_liked":false,"id":146578,"user_name":"饭粒","can_delete":false,"product_type":"c1","uid":1153455,"ip_address":"","ucode":"4C3220B0D43997","user_header":"https://static001.geekbang.org/account/avatar/00/11/99/af/d29273e2.jpg","comment_is_top":false,"comment_ctime":1572575724,"is_pvip":false,"replies":[{"id":"56821","content":"1. 所谓“隔离级别”就是在无法严格满足隔离性情况下，为了解决业务问题的一种妥协。”读未提交“这种隔离级别，严格地说，就是不满足事务的隔离性。<br><br>2. 对这种情况，RocketMQ有一个死信队列的功能，它会把这种”坏消息“放到一个特殊的队列中，避免这个坏消息卡住队列消费。","user_name":"作者回复","user_name_real":"李玥","uid":"1501046","ctime":1572831228,"ip_address":"","comment_id":146578,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5867543020","product_id":100032301,"comment_content":"好文，反复看了几遍，一些疑惑通过阅读老师对其他同学的回答也明白了。<br>还有点小疑问的是，<br>1）对文中事务一致性的描述：“一致性，是指这些数据在事务执行完成这个时间点之前，读到的一定是更新前的数据，之后读到的一定是更新后的数据，不应该存在一个时刻，让用户读到更新过程中的数据。”，这个如果事务的隔离级别是读未提交，其他事务不是可以读到更新过程中的数据吗？<br><br>2）如果购物车系统消费消息失败，并且重试了一定次数后还是失败，这种一般怎么再处理？人工干预吗？","like_count":1,"discussions":[{"author":{"id":1501046,"avatar":"https://static001.geekbang.org/account/avatar/00/16/e7/76/79c1f23a.jpg","nickname":"李玥","note":"","ucode":"B19E91EE248591","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":472923,"discussion_content":"1. 所谓“隔离级别”就是在无法严格满足隔离性情况下，为了解决业务问题的一种妥协。”读未提交“这种隔离级别，严格地说，就是不满足事务的隔离性。\n\n2. 对这种情况，RocketMQ有一个死信队列的功能，它会把这种”坏消息“放到一个特殊的队列中，避免这个坏消息卡住队列消费。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1572831228,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":145936,"user_name":"hu","can_delete":false,"product_type":"c1","uid":1110492,"ip_address":"","ucode":"57A074D5904907","user_header":"https://static001.geekbang.org/account/avatar/00/10/f1/dc/05df7333.jpg","comment_is_top":false,"comment_ctime":1572403952,"is_pvip":false,"replies":[{"id":"56588","content":"严格来说，所有消息队列实现的所谓事务都是不完整的，并不能全部满足事务定义中 ACID 四种约束，Rabbitmq的事务也是一样。所以，“算作事务”消息与否，其实并没有公认的答案。<br><br>但是这些不完整的事务实现，在它们适用的场景中确实能解决实际的业务问题。","user_name":"作者回复","user_name_real":"李玥","uid":"1501046","ctime":1572571714,"ip_address":"","comment_id":145936,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5867371248","product_id":100032301,"comment_content":"老师您好，Rabbitmq里面，发送方确认，这样一种方式，可以算作事务消息么？","like_count":1,"discussions":[{"author":{"id":1501046,"avatar":"https://static001.geekbang.org/account/avatar/00/16/e7/76/79c1f23a.jpg","nickname":"李玥","note":"","ucode":"B19E91EE248591","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":472635,"discussion_content":"严格来说，所有消息队列实现的所谓事务都是不完整的，并不能全部满足事务定义中 ACID 四种约束，Rabbitmq的事务也是一样。所以，“算作事务”消息与否，其实并没有公认的答案。\n\n但是这些不完整的事务实现，在它们适用的场景中确实能解决实际的业务问题。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1572571714,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":136674,"user_name":"热心市民小侯","can_delete":false,"product_type":"c1","uid":1347767,"ip_address":"","ucode":"0F7D64B5F7193B","user_header":"https://static001.geekbang.org/account/avatar/00/14/90/b7/711aa6f9.jpg","comment_is_top":false,"comment_ctime":1569489645,"is_pvip":false,"replies":[{"id":"52402","content":"热点问题我们会在答疑中统一解答的。","user_name":"作者回复","user_name_real":"李玥","uid":"1501046","ctime":1569495925,"ip_address":"","comment_id":136674,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5864456941","product_id":100032301,"comment_content":"虽然是开放性问题，还是希望老师有空能在每一章结尾把上一章的问题解答一下","like_count":1,"discussions":[{"author":{"id":1501046,"avatar":"https://static001.geekbang.org/account/avatar/00/16/e7/76/79c1f23a.jpg","nickname":"李玥","note":"","ucode":"B19E91EE248591","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":468748,"discussion_content":"热点问题我们会在答疑中统一解答的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1569495925,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":125924,"user_name":"钱","can_delete":false,"product_type":"c1","uid":1009652,"ip_address":"","ucode":"2C92A243A463D4","user_header":"https://static001.geekbang.org/account/avatar/00/0f/67/f4/9a1feb59.jpg","comment_is_top":false,"comment_ctime":1566272747,"is_pvip":false,"replies":[{"id":"46503","content":"1和2个问题，我会在后面有一节课专门讲RocketMQ和Kafka的事务是怎么实现的。<br><br>问题3， 你看一下RocketMQ的事务消息的例子，一下子就会明白。你在开启一个事务的时候，是要提供一个回调接口TransactionCheckListener的实现类的。所以不能光是听课和思考，动手写代码很重要。<br><br>问题4这个场景更适合使用Kafka来解决，同样，你可以尝试写一个Kafka 事务的Hello World就明白了。<br><br>","user_name":"作者回复","user_name_real":"李玥","uid":"1501046","ctime":1566350491,"ip_address":"","comment_id":125924,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5861240043","product_id":100032301,"comment_content":"老师好，有以下几个疑问，请辛苦解答一下<br>1：然后订单系统给消息服务器发送一个“半消息”，这个半消息不是说消息内容不完整，它包含的内容就是完整的消息内容，半消息和普通消息的唯一区别是，在事务提交之前，对于消费者来说，这个消息是不可见的。<br>半消息在提交事务之前，对于消费者不可见，是怎么做到的，加了一个是否可见的标志嘛？这个半消息在broker端怎么存储的？和普通消息的存储方式一样嘛？<br><br>2：如果订单创建失败，那就回滚事务消息，购物车系统就不会收到这条消息。<br>这个回滚具体怎么实现的？半消息发送到broker具体存放在哪里？删除就是物理删除嘛？回滚这个操作只会针对半消息吧？<br><br>3：为了支撑这个事务反查机制，我们的业务代码需要实现一个反查本地事务状态的接口，告知 RocketMQ 本地事务是成功还是失败。<br>这个具体是怎么实现的呢？<br><br>4：假如是发送两条消息来控制事务，控制流程和本文讲的一样吧？两个消息还好说，如果是N个消息，第N个消息是回滚还是执行需要看第N-1个消息的执行结果，这个事务岂不是很大？","like_count":1,"discussions":[{"author":{"id":1501046,"avatar":"https://static001.geekbang.org/account/avatar/00/16/e7/76/79c1f23a.jpg","nickname":"李玥","note":"","ucode":"B19E91EE248591","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":463753,"discussion_content":"1和2个问题，我会在后面有一节课专门讲RocketMQ和Kafka的事务是怎么实现的。\n\n问题3， 你看一下RocketMQ的事务消息的例子，一下子就会明白。你在开启一个事务的时候，是要提供一个回调接口TransactionCheckListener的实现类的。所以不能光是听课和思考，动手写代码很重要。\n\n问题4这个场景更适合使用Kafka来解决，同样，你可以尝试写一个Kafka 事务的Hello World就明白了。\n\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566350491,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":123997,"user_name":"纸君","can_delete":false,"product_type":"c1","uid":1615195,"ip_address":"","ucode":"E3791414E0B5B1","user_header":"https://static001.geekbang.org/account/avatar/00/18/a5/5b/e1ffd5e4.jpg","comment_is_top":false,"comment_ctime":1565789850,"is_pvip":true,"replies":[{"id":"45710","content":"会有超时，超时之后就不再继续反查，这个半消息再也不会被提交，相当于回滚了。","user_name":"作者回复","user_name_real":"李玥","uid":"1501046","ctime":1565916478,"ip_address":"","comment_id":123997,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5860757146","product_id":100032301,"comment_content":"在场景中，kafka和rocketmq的重试和反查长时间都无法成功，这样是不是它们都会有超时机制呢？超时是回滚吗，还是什么操作呢","like_count":1,"discussions":[{"author":{"id":1501046,"avatar":"https://static001.geekbang.org/account/avatar/00/16/e7/76/79c1f23a.jpg","nickname":"李玥","note":"","ucode":"B19E91EE248591","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":462948,"discussion_content":"会有超时，超时之后就不再继续反查，这个半消息再也不会被提交，相当于回滚了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1565916478,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":123661,"user_name":"王立光","can_delete":false,"product_type":"c1","uid":1058836,"ip_address":"","ucode":"3890B19E124960","user_header":"https://static001.geekbang.org/account/avatar/00/10/28/14/875e8513.jpg","comment_is_top":false,"comment_ctime":1565741785,"is_pvip":false,"replies":[{"id":"45349","content":"减购物车失败，会导致消费失败，消息队列会自动重试这条消息。","user_name":"作者回复","user_name_real":"李玥","uid":"1501046","ctime":1565746125,"ip_address":"","comment_id":123661,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5860709081","product_id":100032301,"comment_content":"请问老师<br>如果减购物车动作失败后，能把订单回滚吗？<br>怎么实现的？<br>如果不能其实事务还是有问题的","like_count":1,"discussions":[{"author":{"id":1501046,"avatar":"https://static001.geekbang.org/account/avatar/00/16/e7/76/79c1f23a.jpg","nickname":"李玥","note":"","ucode":"B19E91EE248591","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":462762,"discussion_content":"减购物车失败，会导致消费失败，消息队列会自动重试这条消息。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1565746125,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":123161,"user_name":"Rick","can_delete":false,"product_type":"c1","uid":1502914,"ip_address":"","ucode":"9B41FCA5B4E526","user_header":"https://static001.geekbang.org/account/avatar/00/16/ee/c2/873cc8d9.jpg","comment_is_top":false,"comment_ctime":1565618235,"is_pvip":false,"replies":[{"id":"45256","content":"消费失败可以通过反复重试解决，不会丢消息。","user_name":"作者回复","user_name_real":"李玥","uid":"1501046","ctime":1565655527,"ip_address":"","comment_id":123161,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5860585531","product_id":100032301,"comment_content":"如果插入消息表成功，但是消费消息失败，那么这个消息会丢掉吗","like_count":1,"discussions":[{"author":{"id":1501046,"avatar":"https://static001.geekbang.org/account/avatar/00/16/e7/76/79c1f23a.jpg","nickname":"李玥","note":"","ucode":"B19E91EE248591","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":462562,"discussion_content":"消费失败可以通过反复重试解决，不会丢消息。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1565655527,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":121896,"user_name":"志强","can_delete":false,"product_type":"c1","uid":1562256,"ip_address":"","ucode":"CE9F6E9D2F49E9","user_header":"https://static001.geekbang.org/account/avatar/00/17/d6/90/89fb561f.jpg","comment_is_top":false,"comment_ctime":1565245869,"is_pvip":false,"replies":[{"id":"44800","content":"你需要自己实现一个反查本地事务的接口，其他部分都是自动的。","user_name":"作者回复","user_name_real":"李玥","uid":"1501046","ctime":1565274708,"ip_address":"","comment_id":121896,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5860213165","product_id":100032301,"comment_content":"rocketMQ的反查机制，需要自己实现吗？","like_count":1,"discussions":[{"author":{"id":1501046,"avatar":"https://static001.geekbang.org/account/avatar/00/16/e7/76/79c1f23a.jpg","nickname":"李玥","note":"","ucode":"B19E91EE248591","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":461995,"discussion_content":"你需要自己实现一个反查本地事务的接口，其他部分都是自动的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1565274708,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":120766,"user_name":"杨杰","can_delete":false,"product_type":"c1","uid":1131823,"ip_address":"","ucode":"74817EA9499843","user_header":"https://static001.geekbang.org/account/avatar/00/11/45/2f/b0b0dd74.jpg","comment_is_top":false,"comment_ctime":1564992369,"is_pvip":false,"replies":[{"id":"44467","content":"开源版本的RocketMQ在很多企业的生产系统中都在使用，如果你在使用的时候有问题可以随时交流。","user_name":"作者回复","user_name_real":"李玥","uid":"1501046","ctime":1565054356,"ip_address":"","comment_id":120766,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5859959665","product_id":100032301,"comment_content":"网上有人说开源版本的rocketmq并不是很稳定？不知道在实际的使用上会不会有什么问题？","like_count":1,"discussions":[{"author":{"id":1501046,"avatar":"https://static001.geekbang.org/account/avatar/00/16/e7/76/79c1f23a.jpg","nickname":"李玥","note":"","ucode":"B19E91EE248591","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":461468,"discussion_content":"开源版本的RocketMQ在很多企业的生产系统中都在使用，如果你在使用的时候有问题可以随时交流。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1565054356,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":119963,"user_name":"Geek_87338d","can_delete":false,"product_type":"c1","uid":1617390,"ip_address":"","ucode":"591122E793E9D0","user_header":"","comment_is_top":false,"comment_ctime":1564739852,"is_pvip":false,"replies":[{"id":"44099","content":"所以RocketMQ提供了事物反查机制来解决这个问题。","user_name":"作者回复","user_name_real":"李玥","uid":"1501046","ctime":1564798824,"ip_address":"","comment_id":119963,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5859707148","product_id":100032301,"comment_content":"如果，半消息发送完，订单提交，停电了，那这个半消息永远都不能发送成功了吗？","like_count":1,"discussions":[{"author":{"id":1501046,"avatar":"https://static001.geekbang.org/account/avatar/00/16/e7/76/79c1f23a.jpg","nickname":"李玥","note":"","ucode":"B19E91EE248591","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":461151,"discussion_content":"所以RocketMQ提供了事物反查机制来解决这个问题。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1564798824,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":119277,"user_name":"浩瀚有边","can_delete":false,"product_type":"c1","uid":1087384,"ip_address":"","ucode":"B4540E94EAFFE0","user_header":"https://static001.geekbang.org/account/avatar/00/10/97/98/5ef15aa0.jpg","comment_is_top":false,"comment_ctime":1564549289,"is_pvip":false,"replies":[{"id":"43838","content":"额，正因为Broker不知道本地事务状态，才需要反查，反查就是要查询本地事务的状态啊。","user_name":"作者回复","user_name_real":"李玥","uid":"1501046","ctime":1564626513,"ip_address":"","comment_id":119277,"utype":1}],"discussion_count":2,"race_medal":0,"score":"5859516585","product_id":100032301,"comment_content":"老师，好，您回复如果本地事务正在执行中，则需要定期反查。但是，反查api接口与本地事务执行是两个独立的过程，反查api如何知道本地事务的状态？","like_count":1,"discussions":[{"author":{"id":1501046,"avatar":"https://static001.geekbang.org/account/avatar/00/16/e7/76/79c1f23a.jpg","nickname":"李玥","note":"","ucode":"B19E91EE248591","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":460821,"discussion_content":"额，正因为Broker不知道本地事务状态，才需要反查，反查就是要查询本地事务的状态啊。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1564626513,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1065819,"avatar":"https://static001.geekbang.org/account/avatar/00/10/43/5b/17fef3ba.jpg","nickname":"我瑟瑟的方法","note":"","ucode":"1364CD531E1B72","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":3955,"discussion_content":"本地db事物已经提交了，即db binlog入库了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1565004578,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":118887,"user_name":"正在减肥的胖籽。","can_delete":false,"product_type":"c1","uid":1033728,"ip_address":"","ucode":"99E2E4DF599236","user_header":"https://static001.geekbang.org/account/avatar/00/0f/c6/00/683bb4f0.jpg","comment_is_top":false,"comment_ctime":1564458320,"is_pvip":false,"replies":[{"id":"43721","content":"条条大路通罗马，这个方案也是可以解决你的问题的。","user_name":"作者回复","user_name_real":"李玥","uid":"1501046","ctime":1564539174,"ip_address":"","comment_id":118887,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5859425616","product_id":100032301,"comment_content":"1.创建订单的过程中，一般会在service中开启数据库事务，如果用rocketmq的事务，假如网络抖动，那可能本地事物也成为长事务。<br>2.我在实际的使用过程中，创建订单应该属于强业务，删除购物车应该输入弱业务，1.先保证创建订单成功，2.然后在发mq,3.使用一个中间表或者中间字段来表明是否发送Mq是否成功 4.启动一个定时任务去扫表。老师您我这种方案是否合适？","like_count":1,"discussions":[{"author":{"id":1501046,"avatar":"https://static001.geekbang.org/account/avatar/00/16/e7/76/79c1f23a.jpg","nickname":"李玥","note":"","ucode":"B19E91EE248591","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":460640,"discussion_content":"条条大路通罗马，这个方案也是可以解决你的问题的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1564539174,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":118873,"user_name":"川杰","can_delete":false,"product_type":"c1","uid":1099750,"ip_address":"","ucode":"815211E1D698E6","user_header":"https://static001.geekbang.org/account/avatar/00/10/c7/e6/11f21cb4.jpg","comment_is_top":false,"comment_ctime":1564455748,"is_pvip":false,"replies":[{"id":"43723","content":"消费的时候，需要先执行清除购物车的数据操作，成功之后，再给Broker返回消费成功的响应。<br><br>这样，如果执行数据库删除失败了，这条消息就没有成功消费，消息队列会自动重试，直到成功为止。","user_name":"作者回复","user_name_real":"李玥","uid":"1501046","ctime":1564539234,"ip_address":"","comment_id":118873,"utype":1}],"discussion_count":3,"race_medal":0,"score":"5859423044","product_id":100032301,"comment_content":"老师好，有个问题。创建订单，发送半消息，订单创建成功，消息再发送至购物车系统，购物车清空。此时，如果购物车系统清空失败怎么办？<br>老师这里只是举了个例子，购物车要是真的没清空问题也不大。但假如不是购物车，而是库存系统，订单创建成功，库存减少失败，改如何处理呢？","like_count":1,"discussions":[{"author":{"id":1501046,"avatar":"https://static001.geekbang.org/account/avatar/00/16/e7/76/79c1f23a.jpg","nickname":"李玥","note":"","ucode":"B19E91EE248591","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":460630,"discussion_content":"消费的时候，需要先执行清除购物车的数据操作，成功之后，再给Broker返回消费成功的响应。\n\n这样，如果执行数据库删除失败了，这条消息就没有成功消费，消息队列会自动重试，直到成功为止。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1564539234,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1394861,"avatar":"https://static001.geekbang.org/account/avatar/00/15/48/ad/8be724da.jpg","nickname":"陈泽坛","note":"","ucode":"C81B402868E9E2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":3437,"discussion_content":"我觉得最简单的就是，订单创建成功了，购物车清理失败了，那就调用订单的补偿接口。来删除对应的订单。。。\n\n\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1564479987,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1361746,"avatar":"https://static001.geekbang.org/account/avatar/00/14/c7/52/c5adf218.jpg","nickname":"喜欢地球的阿培同学","note":"","ucode":"5F97037585F857","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1394861,"avatar":"https://static001.geekbang.org/account/avatar/00/15/48/ad/8be724da.jpg","nickname":"陈泽坛","note":"","ucode":"C81B402868E9E2","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":232320,"discussion_content":"你在开玩笑吧，用户的订单，你也敢删？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1586866634,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":3437,"ip_address":""},"score":232320,"extra":""}]}]},{"had_liked":false,"id":118866,"user_name":"我知道了嗯","can_delete":false,"product_type":"c1","uid":1138471,"ip_address":"","ucode":"9186EC1F32C490","user_header":"https://static001.geekbang.org/account/avatar/00/11/5f/27/a6873bc9.jpg","comment_is_top":false,"comment_ctime":1564454335,"is_pvip":false,"replies":[{"id":"43707","content":"消费的时候，需要先执行清除购物车的数据操作，成功之后，再给Broker返回消费成功的响应。<br><br>这样，如果执行数据库删除失败了，这条消息就没有成功消费，消息队列会自动重试，直到成功为止。","user_name":"作者回复","user_name_real":"李玥","uid":"1501046","ctime":1564537810,"ip_address":"","comment_id":118866,"utype":1}],"discussion_count":5,"race_medal":0,"score":"5859421631","product_id":100032301,"comment_content":"那如果购物车库更新失败怎么办?","like_count":1,"discussions":[{"author":{"id":1501046,"avatar":"https://static001.geekbang.org/account/avatar/00/16/e7/76/79c1f23a.jpg","nickname":"李玥","note":"","ucode":"B19E91EE248591","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":460625,"discussion_content":"消费的时候，需要先执行清除购物车的数据操作，成功之后，再给Broker返回消费成功的响应。\n\n这样，如果执行数据库删除失败了，这条消息就没有成功消费，消息队列会自动重试，直到成功为止。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1564537810,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1196475,"avatar":"https://static001.geekbang.org/account/avatar/00/12/41/bb/21ce60d2.jpg","nickname":"安静的boy","note":"","ucode":"F5F44B75228A85","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":3840,"discussion_content":"如果消息队列一直没有重试成功，购物车就一直不能清空，这种情况怎么处理呢？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1564849263,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1361746,"avatar":"https://static001.geekbang.org/account/avatar/00/14/c7/52/c5adf218.jpg","nickname":"喜欢地球的阿培同学","note":"","ucode":"5F97037585F857","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1196475,"avatar":"https://static001.geekbang.org/account/avatar/00/12/41/bb/21ce60d2.jpg","nickname":"安静的boy","note":"","ucode":"F5F44B75228A85","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":232325,"discussion_content":"RocketMQ会将该消息加入到 “死信”队列中","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1586866681,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":3840,"ip_address":""},"score":232325,"extra":""},{"author":{"id":1541669,"avatar":"https://static001.geekbang.org/account/avatar/00/17/86/25/25ded6c3.jpg","nickname":"zhengyu.nie","note":"","ucode":"FFE0377D323E46","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1196475,"avatar":"https://static001.geekbang.org/account/avatar/00/12/41/bb/21ce60d2.jpg","nickname":"安静的boy","note":"","ucode":"F5F44B75228A85","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":570187,"discussion_content":"死信，人工处理吧，不是代码有问题就是数据需要订正了，正常不会出现购物车删除失败的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1651685237,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":3840,"ip_address":""},"score":570187,"extra":""}]},{"author":{"id":1138471,"avatar":"https://static001.geekbang.org/account/avatar/00/11/5f/27/a6873bc9.jpg","nickname":"我知道了嗯","note":"","ucode":"9186EC1F32C490","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":3494,"discussion_content":"明白了，谢谢老师","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1564538553,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":118853,"user_name":"nightmare","can_delete":false,"product_type":"c1","uid":1056314,"ip_address":"","ucode":"EF2E51C2122A86","user_header":"https://static001.geekbang.org/account/avatar/00/10/1e/3a/5b21c01c.jpg","comment_is_top":false,"comment_ctime":1564452815,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5859420111","product_id":100032301,"comment_content":"首先 一致性肯定是没有完全实现 走的最终一致性   第二   原子性 也没有实现 可以订单先完成  消息失败 重试    隔离性 和 持久性都是实现的","like_count":1},{"had_liked":false,"id":118851,"user_name":"冉冉升起的小太阳","can_delete":false,"product_type":"c1","uid":1241604,"ip_address":"","ucode":"0D53A31DB29626","user_header":"https://static001.geekbang.org/account/avatar/00/12/f2/04/9ce3b718.jpg","comment_is_top":false,"comment_ctime":1564452666,"is_pvip":false,"replies":[{"id":"43683","content":"消费的时候，需要先执行清除购物车的数据操作，成功之后，再给Broker返回消费成功的响应。<br><br>这样，如果执行数据库删除失败了，这条消息就没有成功消费，消息队列会自动重试，直到成功为止。","user_name":"作者回复","user_name_real":"李玥","uid":"1501046","ctime":1564535244,"ip_address":"","comment_id":118851,"utype":1}],"discussion_count":2,"race_medal":0,"score":"5859419962","product_id":100032301,"comment_content":"李老师，如果在清除购物车的这一步失败了怎么办？这时候订单已经创建，事物已经提交了。","like_count":1,"discussions":[{"author":{"id":1501046,"avatar":"https://static001.geekbang.org/account/avatar/00/16/e7/76/79c1f23a.jpg","nickname":"李玥","note":"","ucode":"B19E91EE248591","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":460614,"discussion_content":"消费的时候，需要先执行清除购物车的数据操作，成功之后，再给Broker返回消费成功的响应。\n\n这样，如果执行数据库删除失败了，这条消息就没有成功消费，消息队列会自动重试，直到成功为止。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1564535244,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1176417,"avatar":"https://static001.geekbang.org/account/avatar/00/11/f3/61/8f7fca5b.jpg","nickname":"芥末小龙","note":"","ucode":"387D01880867AC","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":3421,"discussion_content":"主动方已经发起了消息，下游业务被动方成功接受，下游业务可以根据自己的业务需求来判断为什么会出现清空购物车失败，根据自己的业务做调整。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1564473059,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":118797,"user_name":"为梦想而生！","can_delete":false,"product_type":"c1","uid":1397129,"ip_address":"","ucode":"12F55CA418A164","user_header":"https://static001.geekbang.org/account/avatar/00/15/51/89/4385d64b.jpg","comment_is_top":false,"comment_ctime":1564448483,"is_pvip":true,"replies":[{"id":"43555","content":"是这样的。","user_name":"作者回复","user_name_real":"李玥","uid":"1501046","ctime":1564452031,"ip_address":"","comment_id":118797,"utype":1}],"discussion_count":1,"race_medal":1,"score":"5859415779","product_id":100032301,"comment_content":"为什么不能等待订单创建完毕再提交消息队列？<br>因为订单创建和消息队列发送是一个事物，如果先创建订单成功，然后系统宕机了，消息发送就会丢失。这和两阶段提交是一个原理","like_count":1,"discussions":[{"author":{"id":1501046,"avatar":"https://static001.geekbang.org/account/avatar/00/16/e7/76/79c1f23a.jpg","nickname":"李玥","note":"","ucode":"B19E91EE248591","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":460584,"discussion_content":"是这样的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1564452031,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":118785,"user_name":"我已经设置了昵称","can_delete":false,"product_type":"c1","uid":1364034,"ip_address":"","ucode":"ED672C5EBDBDC4","user_header":"https://static001.geekbang.org/account/avatar/00/14/d0/42/6fd01fb9.jpg","comment_is_top":false,"comment_ctime":1564447627,"is_pvip":false,"replies":[{"id":"43551","content":"考虑这样一种情况：订单创建成功了，还没来得及发消息，这个节点突然断电了。","user_name":"作者回复","user_name_real":"李玥","uid":"1501046","ctime":1564451935,"ip_address":"","comment_id":118785,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5859414923","product_id":100032301,"comment_content":"感觉分布式事务的场景还是少，像老师上面提到的，我完全可以等订单真正创建完再去发消息","like_count":1,"discussions":[{"author":{"id":1501046,"avatar":"https://static001.geekbang.org/account/avatar/00/16/e7/76/79c1f23a.jpg","nickname":"李玥","note":"","ucode":"B19E91EE248591","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":460574,"discussion_content":"考虑这样一种情况：订单创建成功了，还没来得及发消息，这个节点突然断电了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1564451935,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":118760,"user_name":"瑶瑶笑哈哈","can_delete":false,"product_type":"c1","uid":1598794,"ip_address":"","ucode":"4D887242C0DF0F","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eqyOzptz27UiatycBFguBrz0gjLiauywzBNqwuRVuuCyQPn4Th0sDibWpMo0owGHqfFG9vFX0bJVicdsg/132","comment_is_top":false,"comment_ctime":1564445871,"is_pvip":false,"replies":[{"id":"43549","content":"考虑这样一种情况：订单创建成功了，还没来得及发消息，这个节点突然断电了。","user_name":"作者回复","user_name_real":"李玥","uid":"1501046","ctime":1564451915,"ip_address":"","comment_id":118760,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5859413167","product_id":100032301,"comment_content":"老师，这种场景一定需要先开启事物吗？能等订单确认成功了再发消息吗？","like_count":1,"discussions":[{"author":{"id":1501046,"avatar":"https://static001.geekbang.org/account/avatar/00/16/e7/76/79c1f23a.jpg","nickname":"李玥","note":"","ucode":"B19E91EE248591","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":460562,"discussion_content":"考虑这样一种情况：订单创建成功了，还没来得及发消息，这个节点突然断电了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1564451915,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":118751,"user_name":"ヾ(◍°∇°◍)ﾉﾞ","can_delete":false,"product_type":"c1","uid":1044175,"ip_address":"","ucode":"89545632BDA56E","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJOBwR7MCVqwZbPA5RQ2mjUjd571jUXUcBCE7lY5vSMibWn8D5S4PzDZMaAhRPdnRBqYbVOBTJibhJg/132","comment_is_top":false,"comment_ctime":1564445372,"is_pvip":false,"replies":[{"id":"43546","content":"不阻塞。这是事务的隔离性要求的。","user_name":"作者回复","user_name_real":"李玥","uid":"1501046","ctime":1564451819,"ip_address":"","comment_id":118751,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5859412668","product_id":100032301,"comment_content":"半提交让信息先提交，业务事务完成后再次确认，这样最后通信效率更高失败率更低。有一个问题就是半提交需要阻塞主题吗？如果不阻塞的话，会有并发冲突问题，如何解决","like_count":1,"discussions":[{"author":{"id":1501046,"avatar":"https://static001.geekbang.org/account/avatar/00/16/e7/76/79c1f23a.jpg","nickname":"李玥","note":"","ucode":"B19E91EE248591","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":460558,"discussion_content":"不阻塞。这是事务的隔离性要求的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1564451819,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":118735,"user_name":"TAMNY","can_delete":false,"product_type":"c1","uid":1243102,"ip_address":"","ucode":"4D833D0C13DDCE","user_header":"https://static001.geekbang.org/account/avatar/00/12/f7/de/488f2f57.jpg","comment_is_top":false,"comment_ctime":1564443790,"is_pvip":false,"replies":[{"id":"43545","content":"是有的，你可以看一下它的文档：https:&#47;&#47;www.rabbitmq.com&#47;semantics.html","user_name":"作者回复","user_name_real":"李玥","uid":"1501046","ctime":1564451743,"ip_address":"","comment_id":118735,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5859411086","product_id":100032301,"comment_content":"老师rabbitmq有没有实现事务功能","like_count":1,"discussions":[{"author":{"id":1501046,"avatar":"https://static001.geekbang.org/account/avatar/00/16/e7/76/79c1f23a.jpg","nickname":"李玥","note":"","ucode":"B19E91EE248591","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":460551,"discussion_content":"是有的，你可以看一下它的文档：https://www.rabbitmq.com/semantics.html","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1564451743,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":357520,"user_name":"谁都会变","can_delete":false,"product_type":"c1","uid":1195017,"ip_address":"上海","ucode":"9965748F7EBB57","user_header":"https://static001.geekbang.org/account/avatar/00/12/3c/09/b7f0eac6.jpg","comment_is_top":false,"comment_ctime":1663326222,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1663326222","product_id":100032301,"comment_content":"Rocket MQ检查本地事物是怎么做的？","like_count":0},{"had_liked":false,"id":354491,"user_name":"Geek_c3ecc7","can_delete":false,"product_type":"c1","uid":1345041,"ip_address":"湖南","ucode":"F21F3E270FB264","user_header":"","comment_is_top":false,"comment_ctime":1660461229,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1660461229","product_id":100032301,"comment_content":"业务场景：<br>用户请求订单微服务 order-service 接口删除订单（退货），删除订单时需要调用 account-service的方法给账户增加余额，一个典型的分布式事务问题","like_count":0},{"had_liked":false,"id":354024,"user_name":"怕什么，抱紧我","can_delete":false,"product_type":"c1","uid":1318633,"ip_address":"湖南","ucode":"CBCEA76E9EF33B","user_header":"https://static001.geekbang.org/account/avatar/00/14/1e/e9/dcc63d8f.jpg","comment_is_top":false,"comment_ctime":1660025959,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1660025959","product_id":100032301,"comment_content":"感觉这个例子，和普通发送消息没什么区别，完全可以：1. 创建订单 2.发送订单消息到MQ 3.MQ发送消息给购物车！ 当第1步创建订单失败时，下游服务也感知不到，一样做到要么成功，要么都失败！","like_count":0},{"had_liked":false,"id":354023,"user_name":"怕什么，抱紧我","can_delete":false,"product_type":"c1","uid":1318633,"ip_address":"湖南","ucode":"CBCEA76E9EF33B","user_header":"https://static001.geekbang.org/account/avatar/00/14/1e/e9/dcc63d8f.jpg","comment_is_top":false,"comment_ctime":1660025546,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1660025546","product_id":100032301,"comment_content":"下游服务消费失败了，怎么办，还是不一致啊！例如前第五步都成功，第五步之后，购物车系统内部发生异常，这时候订单服务成功了，购物车服务失败了！","like_count":0},{"had_liked":false,"id":352850,"user_name":"Violet","can_delete":false,"product_type":"c1","uid":2564241,"ip_address":"陕西","ucode":"0A5358A06362DA","user_header":"https://static001.geekbang.org/account/avatar/00/27/20/91/61162bdc.jpg","comment_is_top":false,"comment_ctime":1658980672,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1658980672","product_id":100032301,"comment_content":"如果是一个链路的话要怎么办呢？A服务处理过程A --&gt; B服务处理过程B --&gt;C服务处理过程C。A服务处理成功了，B服务处理失败了的情况咋整呢","like_count":0},{"had_liked":false,"id":350415,"user_name":"卖藥郎","can_delete":false,"product_type":"c1","uid":1231829,"ip_address":"","ucode":"0539EF1D335918","user_header":"https://static001.geekbang.org/account/avatar/00/12/cb/d5/fab32cf7.jpg","comment_is_top":false,"comment_ctime":1656905266,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1656905266","product_id":100032301,"comment_content":"购物车收到消息执行失败了，怎么办？难道只能靠人工最终一致性了吗？","like_count":0},{"had_liked":false,"id":350024,"user_name":"Em","can_delete":false,"product_type":"c1","uid":1780797,"ip_address":"","ucode":"32012A5C603C8A","user_header":"https://static001.geekbang.org/account/avatar/00/1b/2c/3d/0bd58aa4.jpg","comment_is_top":false,"comment_ctime":1656510434,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1656510434","product_id":100032301,"comment_content":"类似于mysql故障恢复 redolog去查binlog, 如果binlog ok, 则提交事务, 如果binlog写失败, 则回滚.   这也是一种两阶段提交典型场景","like_count":0},{"had_liked":false,"id":346398,"user_name":"zr","can_delete":false,"product_type":"c1","uid":1350117,"ip_address":"","ucode":"14C83C8283A289","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/mhSYbmpwSzVfLZkicJusFN7L4HPiaAjiaM76J9NcFibKGgcQSQ8LlRrLUTaUNot8bov4RiaFGtDJefmQdQGJbalugibw/132","comment_is_top":false,"comment_ctime":1653104950,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1653104950","product_id":100032301,"comment_content":"第一步 发送half消息就失败了，要如何处理；我理解清空购物车只是个附加操作，不能因为MQ的不可用影响下订单的主流程；但如果忽略这个错误的话，清空购物车消息就不会发出，这样和先下订单再发MQ有什么区别呢，消息事务还有什么意义呢","like_count":0},{"had_liked":false,"id":346397,"user_name":"zr","can_delete":false,"product_type":"c1","uid":1350117,"ip_address":"","ucode":"14C83C8283A289","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/mhSYbmpwSzVfLZkicJusFN7L4HPiaAjiaM76J9NcFibKGgcQSQ8LlRrLUTaUNot8bov4RiaFGtDJefmQdQGJbalugibw/132","comment_is_top":false,"comment_ctime":1653104807,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1653104807","product_id":100032301,"comment_content":"第一步发送MQ的half消息就失败，该如何处理；如果报错","like_count":0},{"had_liked":false,"id":344970,"user_name":"哈喽","can_delete":false,"product_type":"c1","uid":1309296,"ip_address":"","ucode":"86FDD5BFFAC1BE","user_header":"https://static001.geekbang.org/account/avatar/00/13/fa/70/f297240c.jpg","comment_is_top":false,"comment_ctime":1651905604,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1651905604","product_id":100032301,"comment_content":"关于Kafka事务消息的两个疑问：<br>1、下面对于RocketMQ和Kafka事务消息的理解对么<br>RocketMQ的事务消息保证的是生产者和消费者直接的事务，生产者不真正提交事务，在半事务阶段，消息存储在半事务topic中，这样保证了消费者不能消费消息，保证了一致性；<br>Kafka保证的是消费者发送到不同分区的消息要么同时被消费，要么不被消费<br><br>2、关于Kafka事务消息的落地<br><br>Kafka没有采用半事务topic，直接将消息发送到了真实的topic，然后消费者消费时，会判断其事务提交的状态，如果事务未提交，就暂不消费。但是这一块如何控制消费偏移量呢？如果后面的是非事务消息，非事务消息已经被消费了，这些未消费的事务消息怎么处理呢？","like_count":0},{"had_liked":false,"id":339375,"user_name":"剑八","can_delete":false,"product_type":"c1","uid":1297630,"ip_address":"","ucode":"0A09F41DB8A4E7","user_header":"https://static001.geekbang.org/account/avatar/00/13/cc/de/e28c01e1.jpg","comment_is_top":false,"comment_ctime":1648046805,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1648046805","product_id":100032301,"comment_content":"这里少了一个细节，在发送半事务消息的时候需要消息体上要带上业务订单号，不然的话消费者其实是拿不到这个唯一单据做幂等的","like_count":0},{"had_liked":false,"id":333790,"user_name":"一五一十","can_delete":false,"product_type":"c1","uid":1971440,"ip_address":"","ucode":"4C4ECF7009943B","user_header":"https://static001.geekbang.org/account/avatar/00/1e/14/f0/53e3ab4b.jpg","comment_is_top":false,"comment_ctime":1644538923,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1644538923","product_id":100032301,"comment_content":"这不就是mysql中的binlog与redolog，2阶段提交","like_count":0},{"had_liked":false,"id":331009,"user_name":"Hesher","can_delete":false,"product_type":"c1","uid":1026832,"ip_address":"","ucode":"99AB8B1704CB7E","user_header":"https://static001.geekbang.org/account/avatar/00/0f/ab/10/b812ff3e.jpg","comment_is_top":false,"comment_ctime":1642376446,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1642376446","product_id":100032301,"comment_content":"老师讲的消息队列中的“事务”，主要解决的是消息生产者和消息消费者的数据一致性问题。但后面事务消息解决的主要是producer跟broker之间的事务一致性，并没有consumer什么事啊。既然消息队列对于生产者消费者最重要的特性就是解耦，那还需要去关注两者之间的一致性吗？分别去关注和broker之间的一致性保证最终一致不就好了？","like_count":0},{"had_liked":false,"id":330669,"user_name":"Sherk","can_delete":false,"product_type":"c1","uid":2156245,"ip_address":"","ucode":"AFE3E7F158258D","user_header":"https://static001.geekbang.org/account/avatar/00/20/e6/d5/4f1fc074.jpg","comment_is_top":false,"comment_ctime":1642090850,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1642090850","product_id":100032301,"comment_content":"老师我有两个问题：<br>1.发送的是半消息，消费者无法看到，提交消息失败后，购物车如何知道订单id进行反查。<br>2.消息投递成功后，如果购物车没有成功消费，仍然没办法保证一致性。","like_count":0},{"had_liked":false,"id":330668,"user_name":"Sherk","can_delete":false,"product_type":"c1","uid":2156245,"ip_address":"","ucode":"AFE3E7F158258D","user_header":"https://static001.geekbang.org/account/avatar/00/20/e6/d5/4f1fc074.jpg","comment_is_top":false,"comment_ctime":1642090673,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1642090673","product_id":100032301,"comment_content":"我有2个问题，<br>1.第四步投递失败，由于没有半消息购物车如何根据订单反查状态。<br>2.投递消息后，购物车没有消费成功好像仍然是状态不一致。","like_count":0,"discussions":[{"author":{"id":1225224,"avatar":"https://static001.geekbang.org/account/avatar/00/12/b2/08/92f42622.jpg","nickname":"尔冬橙","note":"","ucode":"0B013A49BC18DA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":584367,"discussion_content":"最终一致性，消费没成功会重试，超过重试次数进入死信","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1660790192,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"湖南"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":328183,"user_name":"明人不做暗事","can_delete":false,"product_type":"c1","uid":2805682,"ip_address":"","ucode":"10D845C54312C8","user_header":"https://static001.geekbang.org/account/avatar/00/2a/cf/b2/2a124ccc.jpg","comment_is_top":false,"comment_ctime":1640593104,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1640593104","product_id":100032301,"comment_content":"对于上面的例子，我有一个疑问：如果本地事物之行时间稍长，导致在事务反查的时候，本地事物还没有提交，这个时候该如何处理？","like_count":0},{"had_liked":false,"id":325156,"user_name":"友","can_delete":false,"product_type":"c1","uid":2536820,"ip_address":"","ucode":"972A4333A8B101","user_header":"https://static001.geekbang.org/account/avatar/00/26/b5/74/cd80b9f4.jpg","comment_is_top":false,"comment_ctime":1638844573,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1638844573","product_id":100032301,"comment_content":"https:&#47;&#47;xie.infoq.cn&#47;article&#47;04c4545691dbd19b36b46770a 订单系统事务代码 go语言实现","like_count":0},{"had_liked":false,"id":311611,"user_name":"宙斯","can_delete":false,"product_type":"c1","uid":2041396,"ip_address":"","ucode":"80DF36BAD298AD","user_header":"https://static001.geekbang.org/account/avatar/00/1f/26/34/891dd45b.jpg","comment_is_top":false,"comment_ctime":1631334540,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1631334540","product_id":100032301,"comment_content":"按照最后的图貌似还有丢失消息的可能，即业务端处理成功，消息丢失。<br>具体是：当第3步还未处理，这时第5步已查询，发现未处理，这是执行6，7操作并删除了消息，后面第4步commit了，本地事务也处理完成，但mqserver因为已删除了消息，导致commit过来的消息已不存在，这时消息就丢失了，订阅端没法订阅到该消息。","like_count":0},{"had_liked":false,"id":308236,"user_name":"秃头制造者","can_delete":false,"product_type":"c1","uid":2741744,"ip_address":"","ucode":"033ABAF394AB3E","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKPghSpy52TKibwu3Dzd5EYetAtoXZVPIqhV8clJfFLJP3vfJib5Ay9k69aMnTNkRiav2wtwfryDIAkw/132","comment_is_top":false,"comment_ctime":1629464438,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1629464438","product_id":100032301,"comment_content":"我有个问题，如果订单没报错，消息也成功发送到购物车了，但是购物车在执行的时候报错了。怎么办呢","like_count":0,"discussions":[{"author":{"id":2805682,"avatar":"https://static001.geekbang.org/account/avatar/00/2a/cf/b2/2a124ccc.jpg","nickname":"明人不做暗事","note":"","ucode":"10D845C54312C8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":541885,"discussion_content":"这就是消息队列消费端的事情了，在上一节中提到过，消息队列会有一个“请求-确认”的机制，当订阅者获取到了消息，但是执行时候报错，就不会确认消费此消息。会再次重试消费的。如果仍然是数据错误，就要给到开发或者运营来处理数据了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1640593363,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":302703,"user_name":"小凡同学","can_delete":false,"product_type":"c1","uid":2701425,"ip_address":"","ucode":"56F9C97628CFCC","user_header":"https://static001.geekbang.org/account/avatar/00/29/38/71/699eba8c.jpg","comment_is_top":false,"comment_ctime":1626340693,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1626340693","product_id":100032301,"comment_content":"购物车系统一直处理失败呢？如果不确认消息,消息自动重试有没有上限？没有上限的话，不就死循环了吗?太多程序员写的代码因为有问题,你重试多少次都是失败，这种场景怎么解决呢？怎们回滚订单？","like_count":0,"discussions":[{"author":{"id":1541669,"avatar":"https://static001.geekbang.org/account/avatar/00/17/86/25/25ded6c3.jpg","nickname":"zhengyu.nie","note":"","ucode":"FFE0377D323E46","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":570189,"discussion_content":"人工处理，订正数据或者改代码修复重新消费，是不会回滚订单的，因为购物车数据没更新不影响用户下单，下单是优先级更高的需求，不可能为了更新购物车而回退用户的订单","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1651685416,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":300521,"user_name":"Cherish","can_delete":false,"product_type":"c1","uid":1211936,"ip_address":"","ucode":"C1B5E1B44703BA","user_header":"https://static001.geekbang.org/account/avatar/00/12/7e/20/d9ae2a0b.jpg","comment_is_top":false,"comment_ctime":1625204225,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1625204225","product_id":100032301,"comment_content":"老师想问一下第4步提交或回滚，这个提交应该同时包括本地事物提交和MQ事物提交么？这两个提交一般怎么保证原子性呢","like_count":0,"discussions":[{"author":{"id":1211936,"avatar":"https://static001.geekbang.org/account/avatar/00/12/7e/20/d9ae2a0b.jpg","nickname":"Cherish","note":"","ucode":"C1B5E1B44703BA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":381833,"discussion_content":"想岔了😂不需要保证原子，RocketMQ会过一段时间来反查","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1625228855,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":295700,"user_name":"可圈可丶","can_delete":false,"product_type":"c1","uid":2015438,"ip_address":"","ucode":"EB527E176EDE91","user_header":"https://static001.geekbang.org/account/avatar/00/1e/c0/ce/eb1b4ae1.jpg","comment_is_top":false,"comment_ctime":1622551257,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1622551257","product_id":100032301,"comment_content":"老师，现在有如下场景，比如在执行本地事务的时候需要调用多个服务，例如下单的流程就是：1.先扣款，2.创建订单 3.扣库存 4.清理购物车，但是1.2.3步必须得在本地事务处理成功之后，才能成功提交事务消息来进行第4步的清理购物车。所以在本地事务中执行1.2.3步调用不同的服务的时候怎样保证数据一致性？","like_count":0},{"had_liked":false,"id":290557,"user_name":"涛哥哥","can_delete":false,"product_type":"c1","uid":1361159,"ip_address":"","ucode":"329A1384E3AB5E","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eqJobg767PUeqrqQQ4B6YvMatj2SRyOicKZZ4gWTf30dMketiaj58Gc3RFTmckGxAXlL9ERSxGovq9g/132","comment_is_top":false,"comment_ctime":1619616794,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1619616794","product_id":100032301,"comment_content":"先发送一半的消息，即prepare状态。在发送commit或者roback，即确认状态。<br><br>这其实是这个二阶段提交过程，同mysql写redolog和binlog机制一样。<br>Mysql当有事物更新的时候，就是先写redolog，状态是prepare的，提交事务的时候，写入binlog，然后再将redolog状态改成commit。<br>这样不管任何一个阶段出问题，利用binlog恢复备份数据还是利用redolog异常重启都不会让数据不一致。","like_count":0},{"had_liked":false,"id":286316,"user_name":"deepz","can_delete":false,"product_type":"c1","uid":1570088,"ip_address":"","ucode":"4BD23A44CDB384","user_header":"https://static001.geekbang.org/account/avatar/00/17/f5/28/898a6947.jpg","comment_is_top":false,"comment_ctime":1617253320,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1617253320","product_id":100032301,"comment_content":"如果下游服务本地事务失败了呢？上游服务如何连带回滚？多服务间的最终一致性没看到有保障。。？","like_count":0},{"had_liked":false,"id":283313,"user_name":"吴月月鸟","can_delete":false,"product_type":"c1","uid":1115064,"ip_address":"","ucode":"2F068EDD166B49","user_header":"https://static001.geekbang.org/account/avatar/00/11/03/b8/961a5342.jpg","comment_is_top":false,"comment_ctime":1615701327,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1615701327","product_id":100032301,"comment_content":"首先老师说过分布式事务很难实现严格意义上的事务。自己分析了下分布式事务对这几个特性保障到了什么程度，了解什么情况下要特殊处理，如有问题谢谢提出。<br>A：如果认为消息事务中包含创建订单和删除购物车商品为原子操作，无法保证购物车系统消费消息时是否异常，无法保证原子性。如果将创建订单和删除购物车商品的消息作为一个事务，在2阶段提交和事务反查的机制下保证了这两个操作是原子性的。即使断电重启，也会对已开启的事务中的Half消息进行反查操作。<br>C：在消费者正常消费情况下，能保证最终一致性。如果消费消费失败，需要后续的自动重试或人工处理。<br>I：隔离性在MySQL中有读未提交、读已提交、可重复读、序列化级别，级别越高数据库性能越差。在消息事务中订单系统本地事务提交了，消息事务未提交时，订单系统中操作对其他消息事务已经是可见的了，类似于读未提交级别。<br>D：能保证消息的不丢失就是符合持久性。","like_count":0},{"had_liked":false,"id":273285,"user_name":"小北","can_delete":false,"product_type":"c1","uid":1282648,"ip_address":"","ucode":"3A23079E4AA92E","user_header":"https://static001.geekbang.org/account/avatar/00/13/92/58/b4f6365d.jpg","comment_is_top":false,"comment_ctime":1610524112,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1610524112","product_id":100032301,"comment_content":"其实我觉得只要保证最终一致性就好了<br>因为就算你保证了本地事务和消息的发送都是成功的，你也不能保证消费方一定能成功消费<br>还是会出现数据不一致的问题<br>所以我觉得如果业务能接受数据短暂不一致（其实大部分业务都是可以的），那么先保证订单创建成功，然后再发消息，如果发送失败可以重试，保证最终一致性","like_count":0},{"had_liked":false,"id":270906,"user_name":"好好学习","can_delete":false,"product_type":"c1","uid":1618089,"ip_address":"","ucode":"6294F6C0CBEA82","user_header":"https://static001.geekbang.org/account/avatar/00/18/b0/a9/ec537dfe.jpg","comment_is_top":false,"comment_ctime":1609315095,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1609315095","product_id":100032301,"comment_content":"老师你好，创建订单和发送消息要么都成功，要么都失败这一块为什么不这样设计呢：1.创建订单失败 本地可以做到会滚，不向消息队列发送消息。 2.创建订单成功，再向消息队列发送消息，这一步可以由重试机制确保发送。这样不也保障了一致性吗。<br>为什么需要用half半消息这种策略","like_count":0},{"had_liked":false,"id":269133,"user_name":"老大不小","can_delete":false,"product_type":"c1","uid":1295609,"ip_address":"","ucode":"35BCDD3CB13467","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJRFRX8kNzNet7FibNvtavbVpAwK09AhIhrib9k762qWtH6mre8ickP7hM5mgZC4ytr8NnmIfmAhxMSQ/132","comment_is_top":false,"comment_ctime":1608535658,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1608535658","product_id":100032301,"comment_content":"rocketmq的事务消息，只保证了发送端的事务，没有保证消费端的事务。不能算严格意义上的分部式事务，属于简化版的，不过也可以解决很多场景的问题。<br>而且回查还需要业务系统提供接口，对业务系统的侵入性比较大，如果使用kafka的方式（抛异常），业务系统捕获异常然后再做处理会不会更好一些呢？","like_count":0},{"had_liked":false,"id":265435,"user_name":"Javatar","can_delete":false,"product_type":"c1","uid":2032840,"ip_address":"","ucode":"E216645CDF632C","user_header":"https://static001.geekbang.org/account/avatar/00/1f/04/c8/3c7af100.jpg","comment_is_top":false,"comment_ctime":1606897189,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1606897189","product_id":100032301,"comment_content":"其中“一致性”没有完全实现，或者说只能保证最终一致性。比如在提交最终确认消息时忽然断电了，要等恢复过来、并反查状态之后才能达到“一致”。但在中间这段时间内，其实状态是不一致的。","like_count":0},{"had_liked":false,"id":247878,"user_name":"小孩","can_delete":false,"product_type":"c1","uid":1112367,"ip_address":"","ucode":"A7F587FC641E63","user_header":"https://static001.geekbang.org/account/avatar/00/10/f9/2f/01b32495.jpg","comment_is_top":false,"comment_ctime":1599900876,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1599900876","product_id":100032301,"comment_content":"消费者消费失败了呢","like_count":0},{"had_liked":false,"id":244118,"user_name":"Laputa","can_delete":false,"product_type":"c1","uid":1079345,"ip_address":"","ucode":"64C157042CF138","user_header":"https://static001.geekbang.org/account/avatar/00/10/78/31/c7f8d1db.jpg","comment_is_top":false,"comment_ctime":1598405205,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1598405205","product_id":100032301,"comment_content":"老师，第四步断电情况，kafka 是不是也处理不了，业务机器都关了，kafka 的异常会抛到哪呢？","like_count":0},{"had_liked":false,"id":237915,"user_name":"坏坏的举哥","can_delete":false,"product_type":"c1","uid":1084636,"ip_address":"","ucode":"98D1BAA79DC0C0","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJQsyr2Ge5iaKwEUQibeWDAa9sU5w3xmbBTBa4u9mibkKTia2DfDVdRCKL69rYradbmxBzQsPsNrPBic8A/132","comment_is_top":false,"comment_ctime":1596004060,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1596004060","product_id":100032301,"comment_content":"下单成功删除购物车商品，个人认为不应该放在事务中；无论购物车删除是否，下单也是要保证成功的；因此发送下单成功消息，应该是在创建订单后；而且，从系统解耦考虑，也不应该在下单应用中去发送这样的消息，应该让专门的消息中间件去发送。","like_count":0},{"had_liked":false,"id":237119,"user_name":"苦行僧","can_delete":false,"product_type":"c1","uid":1530125,"ip_address":"","ucode":"B1FDC170E5E698","user_header":"https://static001.geekbang.org/account/avatar/00/17/59/0d/e0b64fbb.jpg","comment_is_top":false,"comment_ctime":1595683042,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1595683042","product_id":100032301,"comment_content":"李老师，我的理解是：1、开启本地事务 2、向RocketMQ发送半消息（作用是是否可以发送到服务端） 3、创建订单   4、RocketMQ 的事务反查机制，查询状态码：commit&#47;rollback ,如果是commit订单创建成功，之前向RocketMQ发送半消息进行消费，那么如何通知服务端进行消息？？？？；rollback则失败，删除本地库消息，服务端不做消费动作，同时本地事务回滚创建定订单数据记录","like_count":0},{"had_liked":false,"id":236592,"user_name":"Java垒墙工程师","can_delete":false,"product_type":"c1","uid":1937062,"ip_address":"","ucode":"E76AE44A9C76AE","user_header":"https://static001.geekbang.org/account/avatar/00/1d/8e/a6/c3286b61.jpg","comment_is_top":false,"comment_ctime":1595473386,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1595473386","product_id":100032301,"comment_content":"反查机制不符合解耦，但是又是非业务的需求，我觉得以插件的形式集成进去比较合理","like_count":0},{"had_liked":false,"id":235019,"user_name":"子非鱼","can_delete":false,"product_type":"c1","uid":1621660,"ip_address":"","ucode":"020DA0784E728C","user_header":"https://static001.geekbang.org/account/avatar/00/18/be/9c/d21b7e17.jpg","comment_is_top":false,"comment_ctime":1594870231,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1594870231","product_id":100032301,"comment_content":"我觉得rocketMQ，是在保证本地事物和发送mq消息的整体原子性。也就是提供回查机制，保证本地事务执行OK，消息事物发送 ；本地消事务执行失败，消息事务回滚。至于消息投递到mq之后，消费者是否一定消费成功，是不能保证的。需要自己额外实现幂等性业务逻辑，保证消费端 消费成功！以上都是个人理解","like_count":0},{"had_liked":false,"id":235017,"user_name":"子非鱼","can_delete":false,"product_type":"c1","uid":1621660,"ip_address":"","ucode":"020DA0784E728C","user_header":"https://static001.geekbang.org/account/avatar/00/18/be/9c/d21b7e17.jpg","comment_is_top":false,"comment_ctime":1594869787,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1594869787","product_id":100032301,"comment_content":"我觉得rocketMQ事物机制，是在保证本地事务和发送mq消息 这个整体形成原子性。至于消息投递之后，","like_count":0},{"had_liked":false,"id":228789,"user_name":"亚林","can_delete":false,"product_type":"c1","uid":1018972,"ip_address":"","ucode":"4A5A6D24314B79","user_header":"https://static001.geekbang.org/account/avatar/00/0f/8c/5c/3f164f66.jpg","comment_is_top":false,"comment_ctime":1592809762,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1592809762","product_id":100032301,"comment_content":"在订单与购物车这个例子，根据CAP定理，只求一个高可用性，来牺牲掉强一致性。也就是说牺牲掉C，求A。","like_count":0},{"had_liked":false,"id":228325,"user_name":"sundy","can_delete":false,"product_type":"c1","uid":1724856,"ip_address":"","ucode":"581D4B976524B6","user_header":"https://static001.geekbang.org/account/avatar/00/1a/51/b8/f76b15a1.jpg","comment_is_top":false,"comment_ctime":1592641911,"is_pvip":false,"replies":[{"id":"84531","content":"正确的做法是，购物车系统收到消息后，先清空购物车，成功之后，给消息队列的Broker返回消费成功响应。<br><br>这样，如果清空购物车失败了，消息队列会自动重试。","user_name":"作者回复","user_name_real":"李玥","uid":"1501046","ctime":1592917698,"ip_address":"","comment_id":228325,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1592641911","product_id":100032301,"comment_content":"如果购物车系统接收到了消息，但是删除购物车中商品失败了，也就是 订单创建了但是购物车却没有清空，怎么办？","like_count":0,"discussions":[{"author":{"id":1501046,"avatar":"https://static001.geekbang.org/account/avatar/00/16/e7/76/79c1f23a.jpg","nickname":"李玥","note":"","ucode":"B19E91EE248591","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":499001,"discussion_content":"正确的做法是，购物车系统收到消息后，先清空购物车，成功之后，给消息队列的Broker返回消费成功响应。\n\n这样，如果清空购物车失败了，消息队列会自动重试。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1592917698,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":226069,"user_name":"浣","can_delete":false,"product_type":"c1","uid":1878061,"ip_address":"","ucode":"D0ED6C11FF721A","user_header":"https://static001.geekbang.org/account/avatar/00/1c/a8/2d/733c830d.jpg","comment_is_top":false,"comment_ctime":1591944955,"is_pvip":false,"replies":[{"id":"84543","content":"这就是一个分布式事务问题了，你可以参考：https:&#47;&#47;time.geekbang.org&#47;column&#47;article&#47;207508","user_name":"作者回复","user_name_real":"李玥","uid":"1501046","ctime":1592918966,"ip_address":"","comment_id":226069,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1591944955","product_id":100032301,"comment_content":"老师您好，请问要是退单的时候涉及到的不只是购物车系统，而是再多几个系统的数据也要回退修改的话，这样的情况要怎么设计才能保证事务一致性？","like_count":0,"discussions":[{"author":{"id":1501046,"avatar":"https://static001.geekbang.org/account/avatar/00/16/e7/76/79c1f23a.jpg","nickname":"李玥","note":"","ucode":"B19E91EE248591","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":498097,"discussion_content":"这就是一个分布式事务问题了，你可以参考：https://time.geekbang.org/column/article/207508","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1592918966,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":212478,"user_name":" 尿布","can_delete":false,"product_type":"c1","uid":1476323,"ip_address":"","ucode":"D1C8BDA7540962","user_header":"https://static001.geekbang.org/account/avatar/00/16/86/e3/a31f6869.jpg","comment_is_top":false,"comment_ctime":1588130883,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1588130883","product_id":100032301,"comment_content":"不错，醍醐灌顶","like_count":0},{"had_liked":false,"id":203813,"user_name":"叶子","can_delete":false,"product_type":"c1","uid":1835642,"ip_address":"","ucode":"41131155D75B09","user_header":"","comment_is_top":false,"comment_ctime":1586269745,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1586269745","product_id":100032301,"comment_content":"性价比最高的办法就是，订单创建完成丢一条消息出去就完事了   购物车没清空就没清空呗  能有多大影响   本来这种情况的概率就很小   ","like_count":0},{"had_liked":false,"id":190464,"user_name":"刘楠","can_delete":false,"product_type":"c1","uid":1120773,"ip_address":"","ucode":"9F19D44CBEE039","user_header":"https://static001.geekbang.org/account/avatar/00/11/1a/05/f154d134.jpg","comment_is_top":false,"comment_ctime":1584662602,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1584662602","product_id":100032301,"comment_content":"rabbit有半消息呢，怎么发布呢","like_count":0},{"had_liked":false,"id":190214,"user_name":"刘楠","can_delete":false,"product_type":"c1","uid":1120773,"ip_address":"","ucode":"9F19D44CBEE039","user_header":"https://static001.geekbang.org/account/avatar/00/11/1a/05/f154d134.jpg","comment_is_top":false,"comment_ctime":1584615506,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1584615506","product_id":100032301,"comment_content":"半消息是什么。。。","like_count":0},{"had_liked":false,"id":183598,"user_name":"Spring coming","can_delete":false,"product_type":"c1","uid":1116196,"ip_address":"","ucode":"9E01F2D987D08B","user_header":"https://static001.geekbang.org/account/avatar/00/11/08/24/1d3bafaf.jpg","comment_is_top":false,"comment_ctime":1583074412,"is_pvip":false,"replies":[{"id":"71120","content":"可以的。","user_name":"作者回复","user_name_real":"李玥","uid":"1501046","ctime":1583117384,"ip_address":"","comment_id":183598,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1583074412","product_id":100032301,"comment_content":"请教一下老师，老师讲解的是先开启消息事务，后执行本地事务，如果反过来可不可以呢，比如先开启本地事务-&gt;提交订单-&gt; 开启消息事务-&gt;发送半消息-&gt;提交本地事务-&gt;根据本地事务执行状况执行提交或者回滚","like_count":0,"discussions":[{"author":{"id":1501046,"avatar":"https://static001.geekbang.org/account/avatar/00/16/e7/76/79c1f23a.jpg","nickname":"李玥","note":"","ucode":"B19E91EE248591","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":485727,"discussion_content":"可以的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1583117384,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":182431,"user_name":"释然","can_delete":false,"product_type":"c1","uid":1264381,"ip_address":"","ucode":"23BE77AB5DCDF9","user_header":"https://static001.geekbang.org/account/avatar/00/13/4a/fd/047518b0.jpg","comment_is_top":false,"comment_ctime":1582787174,"is_pvip":false,"replies":[{"id":"70643","content":"第二种方法确实也能保证一致性，但是，我们肯定不希望发消息失败导致下单失败。所以，显然第一种方式更合理。","user_name":"作者回复","user_name_real":"李玥","uid":"1501046","ctime":1582801664,"ip_address":"","comment_id":182431,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1582787174","product_id":100032301,"comment_content":"老师您好 1.订单系统在消息队列上开启一个事务，然后根据本地事务的执行结果决定提交或者回滚事务消息 2. 先去操作订单的数据库，然后再发送 message，如果发送不成功，再去回滚数据库。这两种方式有什么区别吗，第二种不也是能保证数据的一致性吗","like_count":0,"discussions":[{"author":{"id":1501046,"avatar":"https://static001.geekbang.org/account/avatar/00/16/e7/76/79c1f23a.jpg","nickname":"李玥","note":"","ucode":"B19E91EE248591","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":485334,"discussion_content":"第二种方法确实也能保证一致性，但是，我们肯定不希望发消息失败导致下单失败。所以，显然第一种方式更合理。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582801664,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":174686,"user_name":"道","can_delete":false,"product_type":"c1","uid":1100869,"ip_address":"","ucode":"B17CA7372C21C1","user_header":"https://static001.geekbang.org/account/avatar/00/10/cc/45/73a0f7f8.jpg","comment_is_top":false,"comment_ctime":1580351238,"is_pvip":false,"replies":[{"id":"68332","content":"可以理解为，事务消息是众多实现分布式事务方法中的一种。","user_name":"作者回复","user_name_real":"李玥","uid":"1501046","ctime":1580863781,"ip_address":"","comment_id":174686,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1580351238","product_id":100032301,"comment_content":"这节课没有实现分布式事务啊，只实现了事务消息。","like_count":0,"discussions":[{"author":{"id":1501046,"avatar":"https://static001.geekbang.org/account/avatar/00/16/e7/76/79c1f23a.jpg","nickname":"李玥","note":"","ucode":"B19E91EE248591","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":482488,"discussion_content":"可以理解为，事务消息是众多实现分布式事务方法中的一种。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1580863781,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":174540,"user_name":"毛毛虫大帝","can_delete":false,"product_type":"c1","uid":1802337,"ip_address":"","ucode":"1EBB026121C060","user_header":"https://static001.geekbang.org/account/avatar/00/1b/80/61/ae3bb67c.jpg","comment_is_top":false,"comment_ctime":1580269238,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1580269238","product_id":100032301,"comment_content":"玥哥 我理解分布式事物的隔离机制 但不清楚网游中的副本 能详细讲解下么","like_count":0},{"had_liked":false,"id":172576,"user_name":"业余爱好者","can_delete":false,"product_type":"c1","uid":1482915,"ip_address":"","ucode":"A890935A982988","user_header":"https://static001.geekbang.org/account/avatar/00/16/a0/a3/8da99bb0.jpg","comment_is_top":false,"comment_ctime":1579226507,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1579226507","product_id":100032301,"comment_content":"事务消息<br><br>分布式事务的实现方式有2pc,3pc，tcc，事务消息。<br><br>事务消息的过程：开启事务；提交半消息，事务操作；回滚&#47;提交。<br>rocketmq提供事务反查机制，提交事务如果失败，回调服务接口做回滚处理。<br>该方案不能保证严格的传统的acid事务要求。事务中途其他事务可以查询过到未提交的操作，原子性可以保证，只能保证最终一致性，持久性依赖mq的具体实现。<br><br>kafka提供的事务解决方案是直接向客户端抛出异常。","like_count":0},{"had_liked":false,"id":168176,"user_name":"小伟","can_delete":false,"product_type":"c1","uid":1359701,"ip_address":"","ucode":"124953423491E2","user_header":"https://static001.geekbang.org/account/avatar/00/14/bf/55/198c6104.jpg","comment_is_top":false,"comment_ctime":1578026040,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1578026040","product_id":100032301,"comment_content":"针对RocketMQ回查，个人有一个不成熟的猜测。请老师指点。<br>在MQ生产者(订单系统)在完成本地事务(订单创建)提交并发送commit给MQ broker之后就可以返回了，不用管MQ broker收到与否。因为如果收到，则MQ broker直接推送事务消息进MQ；如果没收到，则MQ broker依靠反查可以自行判断是否推送事务消息。这样能变相提高MQ生产者的性能，尤其是在网络不稳定或导致commit无法达到broker的故障频繁时。","like_count":0},{"had_liked":false,"id":168163,"user_name":"张天屹","can_delete":false,"product_type":"c1","uid":1477612,"ip_address":"","ucode":"8BD6BD6DCF0F4F","user_header":"https://static001.geekbang.org/account/avatar/00/16/8b/ec/dc03f5ad.jpg","comment_is_top":false,"comment_ctime":1578023269,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1578023269","product_id":100032301,"comment_content":"事务消息存在几个缺陷<br>1. 最终一致性，但是不是强一致性，因为异步网络传输需要时间，还可能 有重试的时间<br>2. 如果消费者存在大概率的业务异常可能没法处理，造成不一致，因为业务异常即使重试也不能避免，这时候会造成真正的不一致，我觉得这里是事务消息最大的问题<br>3. 对于多个分布式业务的支持不好了<br><br>购物车这个方案好在哪里呢？<br>1. 一致性要求没那么高，即使购物车迟一些被清空也无所谓<br>2. 购物车清空与数据的关联性很小，业务简单，出现业务异常的可能性很小<br>3. 在下单这个操作中，这里只对接购物车清空这一个分布式业务<br>4. 清空（类似于删除）这个操作本身就是幂等的，即使消费者重试也不需要做特殊处理","like_count":0},{"had_liked":false,"id":164723,"user_name":"Walking Man","can_delete":false,"product_type":"c1","uid":1192569,"ip_address":"","ucode":"0702652B5BAFB0","user_header":"https://static001.geekbang.org/account/avatar/00/12/32/79/94ee8f85.jpg","comment_is_top":false,"comment_ctime":1577082779,"is_pvip":false,"replies":[{"id":"62877","content":"嗯，这个地方用“确认”这个词，可能会容易引起误解。","user_name":"作者回复","user_name_real":"李玥","uid":"1501046","ctime":1577149926,"ip_address":"","comment_id":164723,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1577082779","product_id":100032301,"comment_content":"最后一张图的第5步描述是不是有点问题啊？应该是未收到第4步指令，而不是确认吧？确认消息不应该是发送方接收的么？","like_count":0,"discussions":[{"author":{"id":1501046,"avatar":"https://static001.geekbang.org/account/avatar/00/16/e7/76/79c1f23a.jpg","nickname":"李玥","note":"","ucode":"B19E91EE248591","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":478875,"discussion_content":"嗯，这个地方用“确认”这个词，可能会容易引起误解。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577149926,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":146384,"user_name":"DFighting","can_delete":false,"product_type":"c1","uid":1233193,"ip_address":"","ucode":"F3BA2426FF8582","user_header":"https://static001.geekbang.org/account/avatar/00/12/d1/29/1b1234ed.jpg","comment_is_top":false,"comment_ctime":1572511141,"is_pvip":true,"replies":[{"id":"56592","content":"RocketMQ事务反查的逻辑是在Broker端实现的，具体的源码分析看：《25 | RocketMQ与Kafka中如何实现事务？》","user_name":"作者回复","user_name_real":"李玥","uid":"1501046","ctime":1572572344,"ip_address":"","comment_id":146384,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1572511141","product_id":100032301,"comment_content":"老师，今天重新理了下rocketMQ的分布式事务源码，并没有在consumer处找到事务反查机制的实现，如果第5步出现了异常，之前的操作应该也需要回滚的吧。还是会有其他的逻辑来实现这个目的？","like_count":0,"discussions":[{"author":{"id":1501046,"avatar":"https://static001.geekbang.org/account/avatar/00/16/e7/76/79c1f23a.jpg","nickname":"李玥","note":"","ucode":"B19E91EE248591","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":472834,"discussion_content":"RocketMQ事务反查的逻辑是在Broker端实现的，具体的源码分析看：《25 | RocketMQ与Kafka中如何实现事务？》","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1572572344,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":145315,"user_name":"不似旧日","can_delete":false,"product_type":"c1","uid":1161271,"ip_address":"","ucode":"DF4C5E3AB9570C","user_header":"https://static001.geekbang.org/account/avatar/00/11/b8/37/98991aeb.jpg","comment_is_top":false,"comment_ctime":1572249474,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1572249474","product_id":100032301,"comment_content":"事务的问题，先执行步骤3在执行124这样不是更好么？？","like_count":0},{"had_liked":false,"id":145314,"user_name":"不似旧日","can_delete":false,"product_type":"c1","uid":1161271,"ip_address":"","ucode":"DF4C5E3AB9570C","user_header":"https://static001.geekbang.org/account/avatar/00/11/b8/37/98991aeb.jpg","comment_is_top":false,"comment_ctime":1572249364,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1572249364","product_id":100032301,"comment_content":"讲事务时有图会更容易理解一些。","like_count":0},{"had_liked":false,"id":143828,"user_name":"Hurt","can_delete":false,"product_type":"c1","uid":1050946,"ip_address":"","ucode":"DCE7428CCF08EF","user_header":"https://static001.geekbang.org/account/avatar/00/10/09/42/1f762b72.jpg","comment_is_top":false,"comment_ctime":1571796996,"is_pvip":false,"replies":[{"id":"55637","content":"AMQP中定义的事务语义，与Kafka的事务是差不多的，但是它并没有定义如何实现。","user_name":"作者回复","user_name_real":"李玥","uid":"1501046","ctime":1571883464,"ip_address":"","comment_id":143828,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1571796996","product_id":100032301,"comment_content":"老师   AMQP事物实现机制  属于那种啊","like_count":0,"discussions":[{"author":{"id":1501046,"avatar":"https://static001.geekbang.org/account/avatar/00/16/e7/76/79c1f23a.jpg","nickname":"李玥","note":"","ucode":"B19E91EE248591","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":471712,"discussion_content":"AMQP中定义的事务语义，与Kafka的事务是差不多的，但是它并没有定义如何实现。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571883464,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":139810,"user_name":"WL","can_delete":false,"product_type":"c1","uid":1173771,"ip_address":"","ucode":"6277DCD776B87E","user_header":"https://static001.geekbang.org/account/avatar/00/11/e9/0b/1171ac71.jpg","comment_is_top":false,"comment_ctime":1570750291,"is_pvip":false,"replies":[{"id":"54009","content":"指的是开启MQ事务，这个过程对于使用者来说是自动的，和发送半消息是一起进行的。","user_name":"作者回复","user_name_real":"李玥","uid":"1501046","ctime":1570757117,"ip_address":"","comment_id":139810,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1570750291","product_id":100032301,"comment_content":"请问一下老师，图2的开启事务是指开启本地事务还是开启mq的事务，mq好像没有开启事务这个操作？","like_count":0,"discussions":[{"author":{"id":1501046,"avatar":"https://static001.geekbang.org/account/avatar/00/16/e7/76/79c1f23a.jpg","nickname":"李玥","note":"","ucode":"B19E91EE248591","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":470123,"discussion_content":"指的是开启MQ事务，这个过程对于使用者来说是自动的，和发送半消息是一起进行的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1570757117,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":139697,"user_name":"吕","can_delete":false,"product_type":"c1","uid":1210890,"ip_address":"","ucode":"8F08E2CB81C4C3","user_header":"https://static001.geekbang.org/account/avatar/00/12/7a/0a/0ce5c232.jpg","comment_is_top":false,"comment_ctime":1570707616,"is_pvip":false,"replies":[{"id":"53934","content":"在第25讲这节课里面有你的问题的答案","user_name":"作者回复","user_name_real":"李玥","uid":"1501046","ctime":1570715779,"ip_address":"","comment_id":139697,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1570707616","product_id":100032301,"comment_content":"整个订单和购物车业务我已经全部完成了，但有一个地方没有实现，就是通过api的事务反查，没找到相应的方法，只有当前生产者的checkListener，还请老师提示一下","like_count":0,"discussions":[{"author":{"id":1501046,"avatar":"https://static001.geekbang.org/account/avatar/00/16/e7/76/79c1f23a.jpg","nickname":"李玥","note":"","ucode":"B19E91EE248591","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":470064,"discussion_content":"在第25讲这节课里面有你的问题的答案","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1570715779,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":135998,"user_name":"Just","can_delete":false,"product_type":"c1","uid":1486087,"ip_address":"","ucode":"54DFB8120E1B96","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/qqPULdMQxtY3hv1hyuyaHgzGulEoo8q1KaSWnllp6I7OzK6pZpy7ujtmrtavVVcsicibWWjKicnqd5vugiczj5XFqQ/132","comment_is_top":false,"comment_ctime":1569323216,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1569323216","product_id":100032301,"comment_content":"老师，CODE:206 DESC:the consumer group[CID_RMQ_SYS_TRANS] not online，造成 RMQ_SYS_TRANS_HALF_TOPIC 堆积会是什么原因引起的呢<br>","like_count":0},{"had_liked":false,"id":134688,"user_name":"饭团","can_delete":false,"product_type":"c1","uid":1332557,"ip_address":"","ucode":"E24F240CC91BE8","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83erbY9UsqHZhhVoI69yXNibBBg0TRdUVsKLMg2UZ1R3NJxXdMicqceI5yhdKZ5Ad6CJYO0XpFHlJzIYQ/132","comment_is_top":false,"comment_ctime":1568895493,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1568895493","product_id":100032301,"comment_content":"老师，<br>我感觉首先没有实现原子性，感觉分布式事务很难实现正在的原子性！因为是对2个”数据源”的操作，必然有一个先后！也就必然存在一个成功一个失败的可能！<br>其次，文中的一致性也存在一定的问题！我感觉文中的案例是实现了最终一致性！","like_count":0},{"had_liked":false,"id":134382,"user_name":"长期规划","can_delete":false,"product_type":"c1","uid":1019332,"ip_address":"","ucode":"5EF65E9115834B","user_header":"https://static001.geekbang.org/account/avatar/00/0f/8d/c4/6f97daea.jpg","comment_is_top":false,"comment_ctime":1568815211,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1568815211","product_id":100032301,"comment_content":"消务队列的分布式事务只能实现最终一致性。如果从整体看，它不满足原子性，强一致，隔离性。只满足持久性和最终一致性。分布式满足CAP，P是无法避免的，那就看P出现时，选择C还是A，如果选C，那就要给外部报错或停服，即不让外界看到不一致；如果选A，那外界就会看到不一致，即C不满足了。","like_count":0},{"had_liked":false,"id":134375,"user_name":"长期规划","can_delete":false,"product_type":"c1","uid":1019332,"ip_address":"","ucode":"5EF65E9115834B","user_header":"https://static001.geekbang.org/account/avatar/00/0f/8d/c4/6f97daea.jpg","comment_is_top":false,"comment_ctime":1568814827,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1568814827","product_id":100032301,"comment_content":"回答课后问题，消务队列的分布式事务只能实现最终一致性。如果从整体看，它不满足原子性，强一致，隔离性。只满足持久性和最终一致性","like_count":0},{"had_liked":false,"id":134366,"user_name":"长期规划","can_delete":false,"product_type":"c1","uid":1019332,"ip_address":"","ucode":"5EF65E9115834B","user_header":"https://static001.geekbang.org/account/avatar/00/0f/8d/c4/6f97daea.jpg","comment_is_top":false,"comment_ctime":1568813736,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1568813736","product_id":100032301,"comment_content":"这个分布式事务不是原子的，RocketMQ实现了最终一致","like_count":0},{"had_liked":false,"id":132848,"user_name":"肥low","can_delete":false,"product_type":"c1","uid":1043480,"ip_address":"","ucode":"A158AFAAB8C742","user_header":"https://static001.geekbang.org/account/avatar/00/0f/ec/18/bf7254d3.jpg","comment_is_top":false,"comment_ctime":1568252187,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1568252187","product_id":100032301,"comment_content":"这个例子很严谨 我工作中是不会考虑到😭","like_count":0},{"had_liked":false,"id":132579,"user_name":"吴小智","can_delete":false,"product_type":"c1","uid":1310798,"ip_address":"","ucode":"C7C9F58B5C9F7B","user_header":"https://static001.geekbang.org/account/avatar/00/14/00/4e/be2b206b.jpg","comment_is_top":false,"comment_ctime":1568168041,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1568168041","product_id":100032301,"comment_content":"哇，老师的文章需要慢慢品读，仔细思考，才能发现其中的美，谢谢老师。","like_count":0},{"had_liked":false,"id":131234,"user_name":"oldriver","can_delete":false,"product_type":"c1","uid":1078780,"ip_address":"","ucode":"8D798BD516341D","user_header":"https://static001.geekbang.org/account/avatar/00/10/75/fc/2e4eff0c.jpg","comment_is_top":false,"comment_ctime":1567676132,"is_pvip":true,"replies":[{"id":"49813","content":"发送ack之前就已经投递成功了，后续ack是否发送成功都不会影响投递结果。","user_name":"作者回复","user_name_real":"李玥","uid":"1501046","ctime":1567732228,"ip_address":"","comment_id":131234,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1567676132","product_id":100032301,"comment_content":"老师，我问一下问题啊，rabbitMQ相关的：<br>生产者使用confirm机制给rabbitMQ发送一条消息，当rabbitMQ成功收到了消息后，会给生产者发送一个消息投递成功的ack，表示自己已经成功收到消息<br>要是在发送ack给生产者的过程中，生产者宕机了，没有收到这个消息投递成功的ack，那么rabbitMQ是认为这条消息是投递成功，还是投递失败","like_count":0,"discussions":[{"author":{"id":1501046,"avatar":"https://static001.geekbang.org/account/avatar/00/16/e7/76/79c1f23a.jpg","nickname":"李玥","note":"","ucode":"B19E91EE248591","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":466344,"discussion_content":"发送ack之前就已经投递成功了，后续ack是否发送成功都不会影响投递结果。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567732228,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":127073,"user_name":"小小征","can_delete":false,"product_type":"c1","uid":1358930,"ip_address":"","ucode":"335380EFE0FC61","user_header":"https://static001.geekbang.org/account/avatar/00/14/bc/52/52745d32.jpg","comment_is_top":false,"comment_ctime":1566550131,"is_pvip":false,"replies":[{"id":"47064","content":"可以的，具体可以参考一下RabbitMQ的文档。","user_name":"作者回复","user_name_real":"李玥","uid":"1501046","ctime":1566609862,"ip_address":"","comment_id":127073,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1566550131","product_id":100032301,"comment_content":"老师您好，我们是用的rabbitMq 这个可以实现分布式事物吗？","like_count":0,"discussions":[{"author":{"id":1501046,"avatar":"https://static001.geekbang.org/account/avatar/00/16/e7/76/79c1f23a.jpg","nickname":"李玥","note":"","ucode":"B19E91EE248591","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":464307,"discussion_content":"可以的，具体可以参考一下RabbitMQ的文档。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566609862,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":126276,"user_name":"vi","can_delete":false,"product_type":"c1","uid":1504664,"ip_address":"","ucode":"943CADFE6C1A6A","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLIBabuBHlohpGYRDt4mwWghVDztHyRnC9SfyYnENUZNbCe8m05qQn0cHdiazU4eKmMtSQ0bHicwLLQ/132","comment_is_top":false,"comment_ctime":1566356329,"is_pvip":false,"replies":[{"id":"46815","content":"这个设计是没问题的，但还需要考虑：<br><br>你的状态保存在本地还是远程的什么存储集群上？如果保存在本地，那本地节点宕机了，如何恢复这个状态？如果保存在远程存储集群上？那又怎么来保证事务的原子性？","user_name":"作者回复","user_name_real":"李玥","uid":"1501046","ctime":1566434971,"ip_address":"","comment_id":126276,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1566356329","product_id":100032301,"comment_content":"老师，可以不可以这样设计，增加一个订单消息状态标识，本地事务提交后，开始发送消息，<br>1. 如果发送消息成功，则更新状态为成功 <br>2.如果发送消息失败，则更新状态为失败，再做一个定时统一重发机制，直到消息成功为止<br>3.如果发送消息成功或失败，更新本地状态的时候事务失败，同样做做一个定时统一重发机制，直到消息成功为上<br>","like_count":0,"discussions":[{"author":{"id":1501046,"avatar":"https://static001.geekbang.org/account/avatar/00/16/e7/76/79c1f23a.jpg","nickname":"李玥","note":"","ucode":"B19E91EE248591","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":463920,"discussion_content":"这个设计是没问题的，但还需要考虑：\n\n你的状态保存在本地还是远程的什么存储集群上？如果保存在本地，那本地节点宕机了，如何恢复这个状态？如果保存在远程存储集群上？那又怎么来保证事务的原子性？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566434971,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":125523,"user_name":"小蚂蚁","can_delete":false,"product_type":"c1","uid":1205280,"ip_address":"","ucode":"0798478DDAD206","user_header":"https://static001.geekbang.org/account/avatar/00/12/64/20/8522121f.jpg","comment_is_top":false,"comment_ctime":1566198504,"is_pvip":false,"replies":[{"id":"46218","content":"有的，具体可以看一下：https:&#47;&#47;www.rabbitmq.com&#47;semantics.html","user_name":"作者回复","user_name_real":"李玥","uid":"1501046","ctime":1566264541,"ip_address":"","comment_id":125523,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1566198504","product_id":100032301,"comment_content":"请问老师，rabbit mq有事务控制吗？","like_count":0,"discussions":[{"author":{"id":1501046,"avatar":"https://static001.geekbang.org/account/avatar/00/16/e7/76/79c1f23a.jpg","nickname":"李玥","note":"","ucode":"B19E91EE248591","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":463594,"discussion_content":"有的，具体可以看一下：https://www.rabbitmq.com/semantics.html","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566264541,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":125494,"user_name":"DFighting","can_delete":false,"product_type":"c1","uid":1233193,"ip_address":"","ucode":"F3BA2426FF8582","user_header":"https://static001.geekbang.org/account/avatar/00/12/d1/29/1b1234ed.jpg","comment_is_top":false,"comment_ctime":1566194057,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1566194057","product_id":100032301,"comment_content":"感觉这有点像Mysql日志的两段提交，redolog prepare，binlog , redolog commit","like_count":0},{"had_liked":false,"id":125249,"user_name":"木木木","can_delete":false,"product_type":"c1","uid":1240679,"ip_address":"","ucode":"5EBC11AB704EF2","user_header":"https://static001.geekbang.org/account/avatar/00/12/ee/67/d6d9499e.jpg","comment_is_top":false,"comment_ctime":1566131203,"is_pvip":false,"replies":[{"id":"46017","content":"反查一般是定一个事务超时时间，超时之前会不定期回查。<br><br>目前还没有通用的做法，需要业务方自己来实现。","user_name":"作者回复","user_name_real":"李玥","uid":"1501046","ctime":1566175177,"ip_address":"","comment_id":125249,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1566131203","product_id":100032301,"comment_content":"两个问题。<br>1 回查时间和次数怎么设置，如果发布者本地事务执行太久还没执行完，消息中心就来回查是不是有问题，所以应可以把发消息放本地事务的后面吧，另外次数定义也是经验值吧<br>2 事务回查感觉需要特定业务自己实现，消息体里需要带回查的参数来判断本地事务结果。有没有通用做法，比如发消息前产生唯一id写入数据库，后面回查用这个id来查事务结果就好了。不需要具体逻辑自己做","like_count":0,"discussions":[{"author":{"id":1501046,"avatar":"https://static001.geekbang.org/account/avatar/00/16/e7/76/79c1f23a.jpg","nickname":"李玥","note":"","ucode":"B19E91EE248591","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":463496,"discussion_content":"反查一般是定一个事务超时时间，超时之前会不定期回查。\n\n目前还没有通用的做法，需要业务方自己来实现。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566175177,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":124423,"user_name":"Idiot","can_delete":false,"product_type":"c1","uid":1341940,"ip_address":"","ucode":"D575024E081472","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eowbK2ficLhO1yHjlpJiarGpCeJHIX5WJYdk8hpVicOT8cpKue4DB6lVRdLDFeUcjUGm9pWPgY5U3Qqg/132","comment_is_top":false,"comment_ctime":1565881096,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1565881096","product_id":100032301,"comment_content":"不使用事务消息，在本地事务中发送消息，消息发送成功没如果本地事务提交失败，是否只要保证消费者中对于这个消息的消费不影响数据一致性就可以","like_count":0},{"had_liked":false,"id":123026,"user_name":"monalisali","can_delete":false,"product_type":"c1","uid":1299521,"ip_address":"","ucode":"1FDEC87C133E28","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJbh5FQajwKhNlMrkoSklPpOXBtEYXCLvuWibhfWIS9QxHWDqzhEHJzEdmtUiaiaqFjfpsr2LwgNGpbQ/132","comment_is_top":false,"comment_ctime":1565594434,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1565594434","product_id":100032301,"comment_content":"寥寥数语就把分布式事务讲清楚了，比那些只会堆砌术语的文章好太多","like_count":0},{"had_liked":false,"id":121798,"user_name":"liliumss","can_delete":false,"product_type":"c1","uid":1333094,"ip_address":"","ucode":"A52AC5042F3115","user_header":"https://static001.geekbang.org/account/avatar/00/14/57/66/e57bdb18.jpg","comment_is_top":false,"comment_ctime":1565225619,"is_pvip":false,"replies":[{"id":"44756","content":"这个每个消息队列的实现是不一样的，也不是所有队列都支持。","user_name":"作者回复","user_name_real":"李玥","uid":"1501046","ctime":1565239218,"ip_address":"","comment_id":121798,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1565225619","product_id":100032301,"comment_content":"老师请问这个半消息具体在代码层面是什么含义 是不是消息系统都支持这个半消息呢","like_count":0,"discussions":[{"author":{"id":1501046,"avatar":"https://static001.geekbang.org/account/avatar/00/16/e7/76/79c1f23a.jpg","nickname":"李玥","note":"","ucode":"B19E91EE248591","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":461951,"discussion_content":"这个每个消息队列的实现是不一样的，也不是所有队列都支持。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1565239218,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":121373,"user_name":"guoguo 👻","can_delete":false,"product_type":"c1","uid":1025664,"ip_address":"","ucode":"874B0A1E0F7DEA","user_header":"https://static001.geekbang.org/account/avatar/00/0f/a6/80/6ff7ea5f.jpg","comment_is_top":false,"comment_ctime":1565109962,"is_pvip":false,"replies":[{"id":"44596","content":"事务消息和普通的消息处理流程是一样的，多了一些事务相关的步骤，性能会略有下降。","user_name":"作者回复","user_name_real":"李玥","uid":"1501046","ctime":1565137298,"ip_address":"","comment_id":121373,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1565109962","product_id":100032301,"comment_content":"使用事务消息感觉类似两阶段提交，性能上势必会有所影响，请问老师，这个影响大概有多大？","like_count":0,"discussions":[{"author":{"id":1501046,"avatar":"https://static001.geekbang.org/account/avatar/00/16/e7/76/79c1f23a.jpg","nickname":"李玥","note":"","ucode":"B19E91EE248591","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":461765,"discussion_content":"事务消息和普通的消息处理流程是一样的，多了一些事务相关的步骤，性能会略有下降。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1565137298,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":121297,"user_name":"Dovelol","can_delete":false,"product_type":"c1","uid":1253384,"ip_address":"","ucode":"9B5DDF7720F307","user_header":"https://static001.geekbang.org/account/avatar/00/13/20/08/bc06bc69.jpg","comment_is_top":false,"comment_ctime":1565095990,"is_pvip":false,"replies":[{"id":"44611","content":"你的理解没错，Kafka的事务设计的初衷是为了解决流计算中的Exactly once（和我们之前讲的Exactly once不是一个含义）。","user_name":"作者回复","user_name_real":"李玥","uid":"1501046","ctime":1565138324,"ip_address":"","comment_id":121297,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1565095990","product_id":100032301,"comment_content":"老师好，想请教下，kafka如果开启了事务，send了消息，这个时候节点挂了，该怎么反查或者保持数据一致呢。如果没有好办法，那在用Kafka的情况下，用不用事务消息在订单创建成功之后挂掉效果不都是一样的吗？我理解kafka事务更偏向于保证多条消息发送的事务而不是发送单条和本地其它事务配合。","like_count":0,"discussions":[{"author":{"id":1501046,"avatar":"https://static001.geekbang.org/account/avatar/00/16/e7/76/79c1f23a.jpg","nickname":"李玥","note":"","ucode":"B19E91EE248591","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":461728,"discussion_content":"你的理解没错，Kafka的事务设计的初衷是为了解决流计算中的Exactly once（和我们之前讲的Exactly once不是一个含义）。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1565138324,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":120924,"user_name":"亚洲舞王.尼古拉斯赵四","can_delete":false,"product_type":"c1","uid":1443078,"ip_address":"","ucode":"7159F5D7232696","user_header":"https://static001.geekbang.org/account/avatar/00/16/05/06/f5979d65.jpg","comment_is_top":false,"comment_ctime":1565013812,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1565013812","product_id":100032301,"comment_content":"隔离性没有保证吧，在我数据库提交的情况下，我消息的事务没有成功提交的这一段时间内，我其他应用时可以再数据库中读到这些数据的；至于原子性算不算实现了呢？如果不算的话，我的数据库事务成功了，但是我因为有反查机制，这是可以保证我的mq事务成功，但是在这一段时间内，你又不能说他保证了原子性，因为这时候数据库事务成功了，但是我的mq事务却还没有提交，希望得到老师的解答","like_count":0},{"had_liked":false,"id":120650,"user_name":"我瑟瑟的方法","can_delete":false,"product_type":"c1","uid":1065819,"ip_address":"","ucode":"1364CD531E1B72","user_header":"https://static001.geekbang.org/account/avatar/00/10/43/5b/17fef3ba.jpg","comment_is_top":false,"comment_ctime":1564967081,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"1564967081","product_id":100032301,"comment_content":"订单和购物车列子，我自己感觉先创建本地订单是否成功再来决定是否往broke发送生产者消息，如果订单创建失败，则不发送；如果成功，则发送订单创建消息，发送失败要么回滚已创建订单要么重试发送等补偿方式","like_count":0,"discussions":[{"author":{"id":1104576,"avatar":"https://static001.geekbang.org/account/avatar/00/10/da/c0/9fc31f2d.jpg","nickname":"初心","note":"","ucode":"C090A1723E3474","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":3993,"discussion_content":"小概率断电，无法发消息如何处理呢？老师前面也提到了，虽说是小概率事件。我是这么理解","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1565051878,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1065819,"avatar":"https://static001.geekbang.org/account/avatar/00/10/43/5b/17fef3ba.jpg","nickname":"我瑟瑟的方法","note":"","ucode":"1364CD531E1B72","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1104576,"avatar":"https://static001.geekbang.org/account/avatar/00/10/da/c0/9fc31f2d.jpg","nickname":"初心","note":"","ucode":"C090A1723E3474","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":4002,"discussion_content":"机器断电后，重启补发消息","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1565054660,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":3993,"ip_address":""},"score":4002,"extra":""}]}]},{"had_liked":false,"id":120380,"user_name":"安静的boy","can_delete":false,"product_type":"c1","uid":1196475,"ip_address":"","ucode":"F5F44B75228A85","user_header":"https://static001.geekbang.org/account/avatar/00/12/41/bb/21ce60d2.jpg","comment_is_top":false,"comment_ctime":1564849143,"is_pvip":false,"replies":[{"id":"44183","content":"答案就在下节课里哦。","user_name":"作者回复","user_name_real":"李玥","uid":"1501046","ctime":1564892131,"ip_address":"","comment_id":120380,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1564849143","product_id":100032301,"comment_content":"老师，如果订单系统将消息成功发送到mq，但是mq发送给购物车系统最终失败了，这样的话订单创建了，但是购物车没有清空，这种情况有解决办法吗？","like_count":0,"discussions":[{"author":{"id":1501046,"avatar":"https://static001.geekbang.org/account/avatar/00/16/e7/76/79c1f23a.jpg","nickname":"李玥","note":"","ucode":"B19E91EE248591","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":461308,"discussion_content":"答案就在下节课里哦。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1564892131,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1196475,"avatar":"https://static001.geekbang.org/account/avatar/00/12/41/bb/21ce60d2.jpg","nickname":"安静的boy","note":"","ucode":"F5F44B75228A85","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":3859,"discussion_content":"老师，下节的如何保证消息不丢失的课我也看完了，但是针对这个问题我还是有个疑问。就是分布式消息事务，当订单系统成功的将订单消息发送给消息队列，这时候整个消息事务结束了。但是在消息队列将消息发给购物车系统时，一直失败，最终没有重试成功，这个时候订单已经改变了，但是购物车始终没有清空，这种情况该怎么办呢？我觉着我说的这个是个极端的例子，就是几乎不可能发生，不知道针对这种情况是选择忽略呢，还是要去解决。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1564892712,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":119674,"user_name":"Zzz","can_delete":false,"product_type":"c1","uid":1126750,"ip_address":"","ucode":"9573B50F5B26CA","user_header":"https://static001.geekbang.org/account/avatar/00/11/31/5e/542fa713.jpg","comment_is_top":false,"comment_ctime":1564650208,"is_pvip":false,"replies":[{"id":"43976","content":"这个时候我们的分布式事务没有提交，但是本地事务（创建订单这个数据库事务）已经提交了，不存在本地事务隔离的问题。","user_name":"作者回复","user_name_real":"李玥","uid":"1501046","ctime":1564708449,"ip_address":"","comment_id":119674,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1564650208","product_id":100032301,"comment_content":"老师你的例子里的事物返查，生产者事物未提交，这个订单库的隔离级别是读未提交吗？ 不然怎么返查？","like_count":0,"discussions":[{"author":{"id":1501046,"avatar":"https://static001.geekbang.org/account/avatar/00/16/e7/76/79c1f23a.jpg","nickname":"李玥","note":"","ucode":"B19E91EE248591","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":461010,"discussion_content":"这个时候我们的分布式事务没有提交，但是本地事务（创建订单这个数据库事务）已经提交了，不存在本地事务隔离的问题。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1564708449,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":119562,"user_name":"Jxin","can_delete":false,"product_type":"c1","uid":1251111,"ip_address":"","ucode":"4C03928388C413","user_header":"https://static001.geekbang.org/account/avatar/00/13/17/27/ec30d30a.jpg","comment_is_top":false,"comment_ctime":1564626534,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1564626534","product_id":100032301,"comment_content":"1.让流程更纯粹，删购物车这个事订单核心流程不需要去关心。所以，用canal拉取数据库binlog，推kafka。写个消费层监听订单创建事件，并发送消息（可以订单id也可以封装订单实例）到topic。为所有创建订单后需要通知的其他系统都订阅这个topic，进而保证多系统间数据最终ca的情况。（这种非关键数据，中间状态保证ap即可）。<br>2.对于分布式数据结构这个问题，用acid来区分感觉层级不大对。因为分布式的数据结构首先考虑的是分区间的可用和一致的权衡问题，应该是先考虑cap理论。而acid是单指数据库层面数据状态，这是数据在两个层级的两种原则。<br>","like_count":0},{"had_liked":false,"id":119352,"user_name":"Mike宋","can_delete":false,"product_type":"c1","uid":1617666,"ip_address":"","ucode":"259AB5E0C91C46","user_header":"https://static001.geekbang.org/account/avatar/00/18/af/02/146fd455.jpg","comment_is_top":false,"comment_ctime":1564567874,"is_pvip":false,"replies":[{"id":"43857","content":"关于，“对周期要求高”，能具体说下吗？","user_name":"作者回复","user_name_real":"李玥","uid":"1501046","ctime":1564627409,"ip_address":"","comment_id":119352,"utype":1}],"discussion_count":3,"race_medal":0,"score":"1564567874","product_id":100032301,"comment_content":"老师您好，现在我们有个这样的需求，想咨询一下那种MQ最适合。先谢谢了。<br>具体是这样的：<br>我们这个系统想从一端定期发送一些数据，周期和数据大小已经预先定义，但是每条数据可能不同，要求是发送端能准时发送，接收端接收的时间也能是实际的周期。数据量在10w次&#47;s，不需要确实接收端是否收到，因此不需要事务。发送端和接收端都有可能是多个，并且接收端能指定只收特定的发送端。对于延迟没有很高要求，但对周期要求高，有些5ms，10ms，12.5ms，100ms等等。哪种MQ比较适合呢？谢谢。","like_count":0,"discussions":[{"author":{"id":1501046,"avatar":"https://static001.geekbang.org/account/avatar/00/16/e7/76/79c1f23a.jpg","nickname":"李玥","note":"","ucode":"B19E91EE248591","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":460862,"discussion_content":"关于，“对周期要求高”，能具体说下吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1564627409,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1317115,"avatar":"https://static001.geekbang.org/account/avatar/00/14/18/fb/c1334976.jpg","nickname":"王崧霁","note":"","ucode":"4F3284634293A8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":276523,"discussion_content":"kafka","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1590894673,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1617666,"avatar":"https://static001.geekbang.org/account/avatar/00/18/af/02/146fd455.jpg","nickname":"Mike宋","note":"","ucode":"259AB5E0C91C46","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":3676,"discussion_content":"我们每次发送和接收的时候都带上时间戳，所以用户收到一条数据就能看到时间信息，连续接收的话就能看到这条消息的周期。用户希望这个周期跟预定义的周期一致。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1564701905,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":119178,"user_name":"oldman","can_delete":false,"product_type":"c1","uid":1133711,"ip_address":"","ucode":"6BACE2832B4429","user_header":"https://static001.geekbang.org/account/avatar/00/11/4c/8f/a90b3969.jpg","comment_is_top":false,"comment_ctime":1564534123,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1564534123","product_id":100032301,"comment_content":"请教一下老师这种消息事务目前在京东的业务实现中有具体的落地场景吗？谢谢","like_count":0},{"had_liked":false,"id":119151,"user_name":"浩瀚有边","can_delete":false,"product_type":"c1","uid":1087384,"ip_address":"","ucode":"B4540E94EAFFE0","user_header":"https://static001.geekbang.org/account/avatar/00/10/97/98/5ef15aa0.jpg","comment_is_top":false,"comment_ctime":1564532499,"is_pvip":false,"replies":[{"id":"43728","content":"A1： 有可能查询的时候事务还在执行中，或者临时连不上数据库，这种情况下无法确定数据库事务是成功了还是失败，多以需要后面定期再来查询。<br><br>A2：会抛异常。","user_name":"作者回复","user_name_real":"李玥","uid":"1501046","ctime":1564540070,"ip_address":"","comment_id":119151,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1564532499","product_id":100032301,"comment_content":"老师，您好，本节内容有几个疑问，还请老师解答:<br>1) 第4步订单系统提交或者回滚消息队列事务，如果发生网络异常，可以通过定期反查机制来解决。为什么是定期？不应该只查一次就好了吗，什么情况下需要多次反查<br>2) 如果第2步也发生了网络异常，半消息都没成功发送到消息队列，这种情况会抛异常吗？如果没抛异常，如何实现分布式事务","like_count":0,"discussions":[{"author":{"id":1501046,"avatar":"https://static001.geekbang.org/account/avatar/00/16/e7/76/79c1f23a.jpg","nickname":"李玥","note":"","ucode":"B19E91EE248591","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":460763,"discussion_content":"A1： 有可能查询的时候事务还在执行中，或者临时连不上数据库，这种情况下无法确定数据库事务是成功了还是失败，多以需要后面定期再来查询。\n\nA2：会抛异常。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1564540070,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":119059,"user_name":"大白先生","can_delete":false,"product_type":"c1","uid":1615335,"ip_address":"","ucode":"7EF709EF8FFE6B","user_header":"https://static001.geekbang.org/account/avatar/00/18/a5/e7/ed0a0131.jpg","comment_is_top":false,"comment_ctime":1564494983,"is_pvip":false,"replies":[{"id":"43712","content":"A1： 是的。<br><br>A2：这也是一种实现方法，也可以解决问题。","user_name":"作者回复","user_name_real":"李玥","uid":"1501046","ctime":1564538127,"ip_address":"","comment_id":119059,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1564494983","product_id":100032301,"comment_content":"学习到了，但是我还有两点不是特别明白。还请老师帮忙解答。<br>1.这篇文章所讲的事务消息，是不是购物车如果清空购物车发生异常不会回滚订单事务，我感觉kafka和rocketmq这种事务保证的是事务的最终一致性，是这个样子么？<br>2.假如我在数据库创建订单的事物内保存了推消息的记录，再有一个定时任务把没推送成功的消息补推，这样是不是也能保证，只要有单据生成就一定会有消息推出去？","like_count":0,"discussions":[{"author":{"id":1501046,"avatar":"https://static001.geekbang.org/account/avatar/00/16/e7/76/79c1f23a.jpg","nickname":"李玥","note":"","ucode":"B19E91EE248591","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":460730,"discussion_content":"A1： 是的。\n\nA2：这也是一种实现方法，也可以解决问题。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1564538127,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":119019,"user_name":"QQ怪","can_delete":false,"product_type":"c1","uid":1211223,"ip_address":"","ucode":"1A39B8433D9208","user_header":"https://static001.geekbang.org/account/avatar/00/12/7b/57/a9b04544.jpg","comment_is_top":false,"comment_ctime":1564487942,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1564487942","product_id":100032301,"comment_content":"哔，打卡，有学到好多","like_count":0},{"had_liked":false,"id":119012,"user_name":"HDZ","can_delete":false,"product_type":"c1","uid":1239063,"ip_address":"","ucode":"5E0E5ECDF86F61","user_header":"https://static001.geekbang.org/account/avatar/00/12/e8/17/6c9a12c6.jpg","comment_is_top":false,"comment_ctime":1564485290,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1564485290","product_id":100032301,"comment_content":"打卡","like_count":0},{"had_liked":false,"id":118993,"user_name":"TANMIYOO","can_delete":false,"product_type":"c1","uid":1375256,"ip_address":"","ucode":"BC3556131D4D61","user_header":"https://static001.geekbang.org/account/avatar/00/14/fc/18/8e69f7cf.jpg","comment_is_top":false,"comment_ctime":1564481453,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1564481453","product_id":100032301,"comment_content":"打卡！代码实现死磕中...","like_count":0},{"had_liked":false,"id":118925,"user_name":"约书亚","can_delete":false,"product_type":"c1","uid":1046714,"ip_address":"","ucode":"81EA27ADD9EC1A","user_header":"https://static001.geekbang.org/account/avatar/00/0f/f8/ba/14e05601.jpg","comment_is_top":false,"comment_ctime":1564470190,"is_pvip":false,"replies":[{"id":"43716","content":"这个我们在答疑中会统一来说明。","user_name":"作者回复","user_name_real":"李玥","uid":"1501046","ctime":1564538980,"ip_address":"","comment_id":118925,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1564470190","product_id":100032301,"comment_content":"对ACID的定义理解的不同导致我和其他答案的结论截然不同：<br>1. ACID是个坑，本身的定义就很模糊。这里老师的解释，我感觉C和I的解释其实都是在说I。或者说本身ACID的CI就要放在一起说。<br>2. 分布式系统里的一致性和ACID的C差别很大，当说一个系统满足最终一致性时，感觉是在说系统满足A，但不满足I（但不限于不满足I）。<br>所以：<br>A，例子里的场景，如果要满足最终一致性，需要订单产生并且购物车清空，而就算使用了事务消息，消息投递出去了，并不一定保证购物车一定清空，还需要清购物车的逻辑保证一定正确处理这条消息，再加上事务消息的具体实现都不会无限次的去确认本地事务是否成功，所以这个A只能说“基本”满足。<br>I，根据我对I的理解，最终一致性肯定是不满足I的。因为其他进程可以看到订单产生但购物车没清空的情况。<br>D，例子里是满足的。<br>C，不讨论了。","like_count":0,"discussions":[{"author":{"id":1501046,"avatar":"https://static001.geekbang.org/account/avatar/00/16/e7/76/79c1f23a.jpg","nickname":"李玥","note":"","ucode":"B19E91EE248591","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":460666,"discussion_content":"这个我们在答疑中会统一来说明。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1564538980,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":118896,"user_name":"Geek_f7f72f","can_delete":false,"product_type":"c1","uid":1563891,"ip_address":"","ucode":"4CE4E92E25E87D","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q3auHgzwzM6hsCtODfwaIPW9T9qzxNAhhkdn4ImGHeZicA1UyhCOXDf8MtJXw4QnTFQgUia4BPTZdD2zpgV1qTfQ/132","comment_is_top":false,"comment_ctime":1564459608,"is_pvip":false,"replies":[{"id":"43718","content":"消费的时候，需要先执行清除购物车的数据操作，成功之后，再给Broker返回消费成功的响应。<br><br>这样，如果执行数据库删除失败了，这条消息就没有成功消费，消息队列会自动重试，直到成功为止。","user_name":"作者回复","user_name_real":"李玥","uid":"1501046","ctime":1564539045,"ip_address":"","comment_id":118896,"utype":1}],"discussion_count":4,"race_medal":0,"score":"1564459608","product_id":100032301,"comment_content":"以RocketMQ的图表举例，如果在第四步MQ Server投递消息给订阅方的时候出现宕机，这种情况如何保证事务的实现？<br>可能的方案是不是在第二步把半消息存入一个数据库来防止消息丢失？","like_count":0,"discussions":[{"author":{"id":1501046,"avatar":"https://static001.geekbang.org/account/avatar/00/16/e7/76/79c1f23a.jpg","nickname":"李玥","note":"","ucode":"B19E91EE248591","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":460647,"discussion_content":"消费的时候，需要先执行清除购物车的数据操作，成功之后，再给Broker返回消费成功的响应。\n\n这样，如果执行数据库删除失败了，这条消息就没有成功消费，消息队列会自动重试，直到成功为止。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1564539045,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1004869,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/55/45/e4314bc6.jpg","nickname":"magicnum","note":"","ucode":"96B3696961F654","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":3431,"discussion_content":"这个反查本地事务的实现，并不依赖消息的发送方，也就是订单服务的某个实例节点上的任何数据。这种情况下，即使是发送事务消息的那个订单服务节点宕机了，RocketMQ 依然可以通过其他订单服务的节点来执行反查，确保事务的完整性","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1564478877,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1563891,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q3auHgzwzM6hsCtODfwaIPW9T9qzxNAhhkdn4ImGHeZicA1UyhCOXDf8MtJXw4QnTFQgUia4BPTZdD2zpgV1qTfQ/132","nickname":"Geek_f7f72f","note":"","ucode":"4CE4E92E25E87D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1004869,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/55/45/e4314bc6.jpg","nickname":"magicnum","note":"","ucode":"96B3696961F654","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":3474,"discussion_content":"感谢回复，你说的这个我明白。我的问题是如果MQ server在第四步commit时宕机，而非订单服务宕机","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1564517906,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":3431,"ip_address":""},"score":3474,"extra":""},{"author":{"id":1004869,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/55/45/e4314bc6.jpg","nickname":"magicnum","note":"","ucode":"96B3696961F654","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1563891,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q3auHgzwzM6hsCtODfwaIPW9T9qzxNAhhkdn4ImGHeZicA1UyhCOXDf8MtJXw4QnTFQgUia4BPTZdD2zpgV1qTfQ/132","nickname":"Geek_f7f72f","note":"","ucode":"4CE4E92E25E87D","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":3540,"discussion_content":"不管是上游、下游还是消息队列，都是高可用的。消息队列也是有副本的，副本也存储了消息位移，感觉broker宕机之后应该会有副本接替领导者位置来提供消费者的消费","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1564561406,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":3474,"ip_address":""},"score":3540,"extra":""}]}]},{"had_liked":false,"id":118894,"user_name":"且听且吟","can_delete":false,"product_type":"c1","uid":1168432,"ip_address":"","ucode":"7FA38F2DD7ADBB","user_header":"https://static001.geekbang.org/account/avatar/00/11/d4/30/0c8c57d3.jpg","comment_is_top":false,"comment_ctime":1564459119,"is_pvip":false,"replies":[{"id":"43598","content":"keynote画的😜","user_name":"编辑回复","user_name_real":"孙茹","uid":"1336776","ctime":1564459771,"ip_address":"","comment_id":118894,"utype":2}],"discussion_count":1,"race_medal":0,"score":"1564459119","product_id":100032301,"comment_content":"老师用的是什么画图软件？","like_count":0,"discussions":[{"author":{"id":1336776,"avatar":"https://static001.geekbang.org/account/avatar/00/14/65/c8/fc094eec.jpg","nickname":"大茹","note":"","ucode":"4681A1EDD8D6F7","race_medal":0,"user_type":4,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":460645,"discussion_content":"keynote画的😜","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1564459771,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":4}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":118883,"user_name":"Better me","can_delete":false,"product_type":"c1","uid":1261959,"ip_address":"","ucode":"CADF08D357489A","user_header":"https://static001.geekbang.org/account/avatar/00/13/41/87/46d7e1c2.jpg","comment_is_top":false,"comment_ctime":1564457578,"is_pvip":true,"replies":[{"id":"43722","content":"我们在答疑中统一来解答这个问题。","user_name":"作者回复","user_name_real":"李玥","uid":"1501046","ctime":1564539208,"ip_address":"","comment_id":118883,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1564457578","product_id":100032301,"comment_content":"说下自己对ACID的理解，对于原子性的定义不可分割的操作要么都成功要么都失败，而订单例子中发送半消息成功创建订单失败的话，显然不满足；对于一致性，无论是Kafka(创建订单失败则抛出异常)还是RocketMq(事务反查机制)虽然不能保证强一致性，但还是能保证最后的一致性；对于隔离性，持久性没有相应的场景，应该是满足吧","like_count":0,"discussions":[{"author":{"id":1501046,"avatar":"https://static001.geekbang.org/account/avatar/00/16/e7/76/79c1f23a.jpg","nickname":"李玥","note":"","ucode":"B19E91EE248591","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":460636,"discussion_content":"我们在答疑中统一来解答这个问题。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1564539208,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":118861,"user_name":"Geek_53fdc0","can_delete":false,"product_type":"c1","uid":1613161,"ip_address":"","ucode":"AC791BEE2D03C7","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIqdDwaegnfzFbkibAdmyXh8EVI5No2MESZa0D1Y2QePDdhBVvug11Qbx7y3yFE4fVtrMn56Oeu3SQ/132","comment_is_top":false,"comment_ctime":1564453492,"is_pvip":false,"replies":[{"id":"43688","content":"主要是不容易兼顾，另外可能要牺牲可用性、性能等等。","user_name":"作者回复","user_name_real":"李玥","uid":"1501046","ctime":1564535943,"ip_address":"","comment_id":118861,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1564453492","product_id":100032301,"comment_content":"老师，分布式实现ACID的话是要付出什么代价","like_count":0,"discussions":[{"author":{"id":1501046,"avatar":"https://static001.geekbang.org/account/avatar/00/16/e7/76/79c1f23a.jpg","nickname":"李玥","note":"","ucode":"B19E91EE248591","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":460620,"discussion_content":"主要是不容易兼顾，另外可能要牺牲可用性、性能等等。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1564535943,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":118857,"user_name":"慧鑫coming","can_delete":false,"product_type":"c1","uid":1324385,"ip_address":"","ucode":"7BAC9CA255630E","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLE4LYb3jrH63ZV98Zpc8DompwDgb1O3nffMoZCmiaibauRyEFv6NDNsST9RWxZExvMLMWb50zaanoQ/132","comment_is_top":false,"comment_ctime":1564453178,"is_pvip":false,"replies":[{"id":"43686","content":"不能。否则会出现这样的情况：<br><br>T1. 发送半消息<br>T2. 执行数据事务成功；<br>T3. Broker返回半消息发送失败；<br>T4. 生产者宕机了。<br><br>这时候就会出现数据不一致的问题。<br>","user_name":"作者回复","user_name_real":"李玥","uid":"1501046","ctime":1564535788,"ip_address":"","comment_id":118857,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1564453178","product_id":100032301,"comment_content":"李老师，请问图中2、3执行顺序是否可以调换？","like_count":0,"discussions":[{"author":{"id":1501046,"avatar":"https://static001.geekbang.org/account/avatar/00/16/e7/76/79c1f23a.jpg","nickname":"李玥","note":"","ucode":"B19E91EE248591","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":460618,"discussion_content":"不能。否则会出现这样的情况：\n\nT1. 发送半消息\nT2. 执行数据事务成功；\nT3. Broker返回半消息发送失败；\nT4. 生产者宕机了。\n\n这时候就会出现数据不一致的问题。\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1564535788,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":118856,"user_name":"DeathKnightH","can_delete":false,"product_type":"c1","uid":1058526,"ip_address":"","ucode":"632E00A01247A3","user_header":"","comment_is_top":false,"comment_ctime":1564453175,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1564453175","product_id":100032301,"comment_content":"思考题：个人观点，单从此图上看RocketMQ的事务消息<br>a原子性无法严格保证，在一个时间点可能发生本地事务已提交，但是消息事务还未提交的情况，因为此时可能在进行事务反查。<br>c一致性无法严格保证，只能保证最终一致性。<br>i隔离性也无法保证，当本地事务已提交，在进行事务反查时，其他本地事务可以看到这条已提交的本地事务。<br>d事务的持久性感觉可以保证，无论是本地还是消息的事务都能保证持久性<br>","like_count":0},{"had_liked":false,"id":118852,"user_name":"不能扮演天使","can_delete":false,"product_type":"c1","uid":1046172,"ip_address":"","ucode":"9922330BFF7FFB","user_header":"https://static001.geekbang.org/account/avatar/00/0f/f6/9c/b457a937.jpg","comment_is_top":false,"comment_ctime":1564452756,"is_pvip":false,"replies":[{"id":"43684","content":"一般是反复的检查，直到超过一个超时时间，就回滚放弃。<br><br>实际上事务消息并没有完全实现ACID，但并不妨碍它可以解决一些场景下实际的问题。","user_name":"作者回复","user_name_real":"李玥","uid":"1501046","ctime":1564535469,"ip_address":"","comment_id":118852,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1564452756","product_id":100032301,"comment_content":"如果第⑥步检查本地事务的状态出现异常，那第⑦步难道要回滚么，我觉得也不合理，隔离性和原子性并没有保证，只是追求最终一致性；","like_count":0,"discussions":[{"author":{"id":1501046,"avatar":"https://static001.geekbang.org/account/avatar/00/16/e7/76/79c1f23a.jpg","nickname":"李玥","note":"","ucode":"B19E91EE248591","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":460615,"discussion_content":"一般是反复的检查，直到超过一个超时时间，就回滚放弃。\n\n实际上事务消息并没有完全实现ACID，但并不妨碍它可以解决一些场景下实际的问题。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1564535469,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":118836,"user_name":"Cast","can_delete":false,"product_type":"c1","uid":1315515,"ip_address":"","ucode":"226B483C60F797","user_header":"","comment_is_top":false,"comment_ctime":1564450940,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1564450940","product_id":100032301,"comment_content":"我觉得实现了原子性和持久性。一致性没有是因为有可能订单提交后购物车还没有删除，此时用户是可以感知到的。隔离性没有是考虑到评论区一步的留言（之前我以为有的。。）。晚上回家实现代码。","like_count":0},{"had_liked":false,"id":118824,"user_name":"kyrin","can_delete":false,"product_type":"c1","uid":1092989,"ip_address":"","ucode":"00E59AD97EDEA5","user_header":"https://static001.geekbang.org/account/avatar/00/10/ad/7d/81ee8405.jpg","comment_is_top":false,"comment_ctime":1564449987,"is_pvip":false,"replies":[{"id":"43568","content":"一般使用事务消息的场景都不太关注顺序，你可以说一下你的需求？","user_name":"作者回复","user_name_real":"李玥","uid":"1501046","ctime":1564452422,"ip_address":"","comment_id":118824,"utype":1}],"discussion_count":3,"race_medal":0,"score":"1564449987","product_id":100032301,"comment_content":"消息的顺序行如何保证？会不会出现乱序？","like_count":0,"discussions":[{"author":{"id":1501046,"avatar":"https://static001.geekbang.org/account/avatar/00/16/e7/76/79c1f23a.jpg","nickname":"李玥","note":"","ucode":"B19E91EE248591","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":460599,"discussion_content":"一般使用事务消息的场景都不太关注顺序，你可以说一下你的需求？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1564452422,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1092989,"avatar":"https://static001.geekbang.org/account/avatar/00/10/ad/7d/81ee8405.jpg","nickname":"kyrin","note":"","ucode":"00E59AD97EDEA5","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":3908,"discussion_content":"我在想的是如果多个事物消息来了，消息队列如果保证不了顺序的话，对事务的影响是什么？还是说需要关心顺序，只不过放到了业务侧","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1564970412,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1219496,"avatar":"https://static001.geekbang.org/account/avatar/00/12/9b/a8/6a391c66.jpg","nickname":"Leon📷","note":"","ucode":"B9BBD1EFAAE5A2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":3395,"discussion_content":"rocketmq是顺序的消息发送到同一路由，然后消费者在业务层根据序列号和时间戳等机制保证，之所以抛给业务层是为了降低系统复杂性","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1564454652,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":118796,"user_name":"李同学爱学习","can_delete":false,"product_type":"c1","uid":1114774,"ip_address":"","ucode":"D85A7557F6E46E","user_header":"https://static001.geekbang.org/account/avatar/00/11/02/96/7505099c.jpg","comment_is_top":false,"comment_ctime":1564448420,"is_pvip":false,"replies":[{"id":"43557","content":"keynote画的哈😀","user_name":"编辑回复","user_name_real":"孙茹","uid":"1336776","ctime":1564452113,"ip_address":"","comment_id":118796,"utype":2}],"discussion_count":1,"race_medal":0,"score":"1564448420","product_id":100032301,"comment_content":"老师，请问文章中图是用什么软件画的","like_count":0,"discussions":[{"author":{"id":1336776,"avatar":"https://static001.geekbang.org/account/avatar/00/14/65/c8/fc094eec.jpg","nickname":"大茹","note":"","ucode":"4681A1EDD8D6F7","race_medal":0,"user_type":4,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":460583,"discussion_content":"keynote画的哈😀","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1564452113,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":4}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":118795,"user_name":"李同学爱学习","can_delete":false,"product_type":"c1","uid":1114774,"ip_address":"","ucode":"D85A7557F6E46E","user_header":"https://static001.geekbang.org/account/avatar/00/11/02/96/7505099c.jpg","comment_is_top":false,"comment_ctime":1564448393,"is_pvip":false,"replies":[{"id":"43560","content":"我帮你打听了一下，是极客时间的编辑小姐姐用PPT画的。","user_name":"作者回复","user_name_real":"李玥","uid":"1501046","ctime":1564452205,"ip_address":"","comment_id":118795,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1564448393","product_id":100032301,"comment_content":"老师图是怎么画的","like_count":0,"discussions":[{"author":{"id":1501046,"avatar":"https://static001.geekbang.org/account/avatar/00/16/e7/76/79c1f23a.jpg","nickname":"李玥","note":"","ucode":"B19E91EE248591","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":460582,"discussion_content":"我帮你打听了一下，是极客时间的编辑小姐姐用PPT画的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1564452205,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":118793,"user_name":"小伟","can_delete":false,"product_type":"c1","uid":1359701,"ip_address":"","ucode":"124953423491E2","user_header":"https://static001.geekbang.org/account/avatar/00/14/bf/55/198c6104.jpg","comment_is_top":false,"comment_ctime":1564448115,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1564448115","product_id":100032301,"comment_content":"之前的留言没写完，点错提交了，无法修改，希望极客后续能完整这个需求。<br>isolation：考虑下这个场景，如果一个订单提交产生了清空购物车的消息，之后又产生了添加商品到购物车的消息，如果无法保证时序性消费消息的话，可能会导致购物车里最终没商品，这不符合隔离性的定义。<br>duration：这个没想到场景，姑且认为满足吧","like_count":0},{"had_liked":false,"id":118790,"user_name":"渔夫","can_delete":false,"product_type":"c1","uid":1019289,"ip_address":"","ucode":"6BF08FD8923E45","user_header":"https://static001.geekbang.org/account/avatar/00/0f/8d/99/f886543d.jpg","comment_is_top":false,"comment_ctime":1564447889,"is_pvip":false,"replies":[{"id":"43553","content":"我们在答疑中会统一来回复这个问题。","user_name":"作者回复","user_name_real":"李玥","uid":"1501046","ctime":1564451990,"ip_address":"","comment_id":118790,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1564447889","product_id":100032301,"comment_content":"ACID的 A 在没有不可抗力下应该是兑现的。C 实现的应该是最终一致性。I 依赖应用层面的控制来保障，如下单后先取得一个订单号，然后生成订单同时给购物车行打上处理中标记（标记值是订单号），这样再进入购物车就看不到这些被标记的购物车行，如果事务失败则清理这些标记。D 同 A 在没有不可抗力下应该是兑现的。老师，你觉得我这个理解对吗？","like_count":0,"discussions":[{"author":{"id":1501046,"avatar":"https://static001.geekbang.org/account/avatar/00/16/e7/76/79c1f23a.jpg","nickname":"李玥","note":"","ucode":"B19E91EE248591","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":460578,"discussion_content":"我们在答疑中会统一来回复这个问题。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1564451990,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":118788,"user_name":"小伟","can_delete":false,"product_type":"c1","uid":1359701,"ip_address":"","ucode":"124953423491E2","user_header":"https://static001.geekbang.org/account/avatar/00/14/bf/55/198c6104.jpg","comment_is_top":false,"comment_ctime":1564447806,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1564447806","product_id":100032301,"comment_content":"个人感觉acid都没实现。<br>atomic：订单和购物车没有必然的强依赖关系，别的操作也可以产生清空购物车的消息，如手工清空。无法保证订单和清空购物车的消息是不可分割的。<br>consistency：最好的情况就是能保证最终一致性，中间的时间窗口是数据不一致的。故未实现强一致性。","like_count":0},{"had_liked":false,"id":118759,"user_name":"祝勇","can_delete":false,"product_type":"c1","uid":1047788,"ip_address":"","ucode":"FF7E2C34B16C8F","user_header":"https://static001.geekbang.org/account/avatar/00/0f/fc/ec/2b3171cd.jpg","comment_is_top":false,"comment_ctime":1564445868,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1564445868","product_id":100032301,"comment_content":"我觉得acid都没实现","like_count":0},{"had_liked":false,"id":118747,"user_name":"好饿早知道送外卖了","can_delete":false,"product_type":"c1","uid":1132304,"ip_address":"","ucode":"AED22DB5BF8FC7","user_header":"https://static001.geekbang.org/account/avatar/00/11/47/10/2d673601.jpg","comment_is_top":false,"comment_ctime":1564444971,"is_pvip":false,"discussion_count":0,"race_medal":2,"score":"1564444971","product_id":100032301,"comment_content":"天天盼着更新","like_count":0},{"had_liked":false,"id":118736,"user_name":"zhangtnty","can_delete":false,"product_type":"c1","uid":1180553,"ip_address":"","ucode":"3C9A14BD7CF432","user_header":"https://static001.geekbang.org/account/avatar/00/12/03/89/e1621a01.jpg","comment_is_top":false,"comment_ctime":1564443975,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1564443975","product_id":100032301,"comment_content":"李老师好，文中题目我认为没有做到一致性和持久性。如果MQ不能及时正确消费，一致性和持久性都会受影响。","like_count":0},{"had_liked":false,"id":118728,"user_name":"Hurt","can_delete":false,"product_type":"c1","uid":1050946,"ip_address":"","ucode":"DCE7428CCF08EF","user_header":"https://static001.geekbang.org/account/avatar/00/10/09/42/1f762b72.jpg","comment_is_top":false,"comment_ctime":1564443020,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1564443020","product_id":100032301,"comment_content":"打卡6<br>","like_count":0},{"had_liked":false,"id":118725,"user_name":"leslie","can_delete":false,"product_type":"c1","uid":1324255,"ip_address":"","ucode":"798E7C1CC98CC2","user_header":"https://static001.geekbang.org/account/avatar/00/14/34/df/64e3d533.jpg","comment_is_top":false,"comment_ctime":1564440978,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1564440978","product_id":100032301,"comment_content":"至少rocketMQ的图：让我觉得只是实现了ACID的原子性和一致性，但隔离性没有实现；持久性不确定。","like_count":0}]}