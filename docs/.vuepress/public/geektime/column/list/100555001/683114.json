{"id":683114,"title":"08｜巧用神经网络：如何用UNet预测噪声","content":"<p>你好，我是南柯。</p><p>前面我们已经学习了扩散模型加噪和去噪的过程，也了解了Transformer的基本原理。之前我还埋下了一个伏笔，那便是使用UNet网络预测每一步的噪声。</p><p>今天我就来为你解读UNet的核心知识。在这一讲，我们主要解决后面这三个问题。</p><ul>\n<li>UNet模型的工作原理是怎样的？</li>\n<li>在各种AI绘画模型里用到的UNet结构有什么特殊之处？</li>\n<li>UNet与Transformer要如何结合？</li>\n</ul><p>搞懂了这些，在你的日常工作中，便可以根据实际需求对预测噪声的模型做各种魔改了，也会为我们之后训练扩散模型的实战课打好基础。</p><h2>初识UNet</h2><p>在正式认识UNet之前，我们有必要先了解一下图像分割这个任务。</p><p>图像分割是计算机视觉领域的一种基本任务，它的目标是将图像划分为多个区域，对应于原图中不同的语义内容。比如下面这个例子，就是针对自动驾驶场景的图像分割效果。</p><p><img src=\"https://static001.geekbang.org/resource/image/e9/33/e9da2b60ea977b8ceda96e5c008ccb33.jpg?wh=4137x2096\" alt=\"\" title=\"图片来源：https://www.cityscapes-dataset.com/\"></p><p>图像分割与我们熟悉的图像分类任务目标有所不同，图像分类任务的目标是为整张图像分配一个整体标签，而图像分割任务的目标是为每个像素分配对应的类别标签。</p><p>UNet出现之前，图像分割采用的主要方法是2015年提出的 <a href=\"https://arxiv.org/pdf/1411.4038.pdf\">FCN</a>（全卷积网络）。与传统的CNN（卷积神经网络）不同，FCN去掉了最后的全连接层，而是使用转置卷积层实现上采样的过程。通过这样的操作，FCN可以获得与输入图像相同尺寸的输出。</p><!-- [[[read_end]]] --><p><img src=\"https://static001.geekbang.org/resource/image/6f/47/6fb40aca1e12870982e0a025819db347.jpg?wh=3765x2063\" alt=\"\" title=\"图片来源：https://arxiv.org/pdf/1411.4038.pdf \"></p><p>虽然FCN为图像分割任务带来了显著的改进，但仍然有一定的局限性。比如，FCN结构无法最大限度地利用不同层级的特征，这会导致分割结果中存在边缘细节丢失等问题。</p><p>在这种情况下，<a href=\"https://arxiv.org/pdf/1505.04597.pdf\">UNet</a> 应运而生，它同样出现在2015年。我们先直观感受下UNet的U型结构。</p><p><img src=\"https://static001.geekbang.org/resource/image/df/d7/dfe6086e4f83fb381c34757b4bef80d7.jpg?wh=3367x2232\" alt=\"\" title=\"图片来源：https://lmb.informatik.uni-freiburg.de/people/ronneber/u-net/?ref=assemblyai.com\"></p><p>对照示意图可以看到，UNet是一种U型的全卷积神经网络，存在一个明显的编码、解码过程，并且编码器和解码器中间存在特征融合。UNet一经提出，便成为处理图像分割任务的经典模型。AI绘画大火之后，我们拆解Stable Diffusion等经典方案的时候都感觉很惊奇，为什么呢？因为你会发现，<strong>扩散模型中最关键的噪声预测模块，竟然都是用的UNet</strong>！</p><p>想要完整理解AI绘画中的UNet模块，我们还需要从UNet的基本结构说起。</p><h2>基本结构</h2><p>关于UNet的基本结构，有三个点需要我们关注，第一是它独特的U形结构，第二是其基于编码器-解码器设计思想，第三是编码器和解码器之间的跳跃连接。</p><p>首先来看U形结构。UNet的架构看上去像一个大写字母“U”，它由两部分组成：左侧是编码器，右侧是解码器。对于图像分割任务，编码器的输入是原始图像，解码器的输出是分割结果。</p><p>需要注意的是，UNet的输出尺寸有时会比输入尺寸小，需要一些后处理步骤（如插值）来调整输出尺寸，得到和输入分辨率一致的结果。UNet模型输入输出的这种“一致性”，让它可以应用于各种需要输出“图像”的任务。</p><p>然后是编码器和解码器。UNet的编码器由连续的卷积层和池化层交替组成，每个卷积层用于提取更深层次的图像特征，通常在卷积之后使用非线性激活函数（如ReLU）以引入非线性。随后，池化层（如最大池化）用于进行降采样，以减小每一层的空间尺寸。经过编码器阶段后，高分辨率的输入图像就转化成了具备较低空间尺寸的特征图。</p><p><img src=\"https://static001.geekbang.org/resource/image/af/f4/af0922370460a0f9f685e81d7a70d2f4.jpg?wh=4409x2480\" alt=\"\"></p><p>UNet的解码器与编码器相反，它通过连续的反卷积或转置卷积层进行上采样，逐步将低维特征图恢复到原始图像的分辨率。每个反卷积或转置卷积操作后，得到的特征同样会执行非线性激活函数，以增加模型的非线性。</p><p>解码器的目的是利用编码器生成的深层特征，生成与输入图像空间维度相同的结果（可能需要插值后处理），以便进行像素级预测。</p><p><img src=\"https://static001.geekbang.org/resource/image/e3/87/e32f2766e4281e2f9yyebb65af466287.jpg?wh=4409x2480\" alt=\"\"></p><p>最后我们来看跳跃连接。编码器和解码器之间的特征融合是通过跳跃连接实现的。跳跃连接将编码器中相应层级的特征图与解码器中的特征图连接在一起，这样解码器才能捕捉更丰富的细节信息，进一步提高网络性能。</p><p><img src=\"https://static001.geekbang.org/resource/image/12/92/1273cc0f35305732d1aa4ee77c5e5c92.jpg?wh=4409x2480\" alt=\"\"></p><h2>损失函数</h2><p>再来看损失函数的设计。对于图像分割任务，交叉熵损失函数（Cross Entropy Loss）是一种常用的损失函数。</p><p>交叉熵损失函数广泛用于分类任务，它能度量模型的预测概率分布与真实标签分布之间的差异。对于图像分割任务，每个像素都需要进行分类，也就是判断这个像素属于哪一个类别。因此，我们需要对图像中每一个像素都计算交叉熵损失，用平均或者求和的方式将这些损失合并，得到最终的损失值。</p><p>后面是图像分类任务和图像分割任务中交叉熵损失函数的代码实现，看看代码实现和对应的注释，你会更容易理解。</p><pre><code class=\"language-python\">import numpy as np\n\ndef cross_entropy_classification(y_true, y_pred):\n    \"\"\"\n    y_true: 真实标签。这是任务的真实答案，通常由人类标注或事先知道。\n    对于分类任务（如猫狗分类），y_true可以是类别的索引或 one-hot 编码表示。\n    y_pred: 预测标签。这是模型预测的结果。\n    对于分类任务，y_pred是一个概率分布向量，表示每个类别的预测概率。\n    \"\"\"\n&nbsp; &nbsp; y_pred = np.clip(y_pred, 1e-9, 1 - 1e-9)&nbsp; # 数值稳定性处理，将预测值限制在[1e-9, 1-1e-9]范围内\n&nbsp; &nbsp; return -np.sum(y_true * np.log(y_pred))\n\ndef cross_entropy_segmentation(y_true, y_pred):\n    \"\"\"\n    y_true: 真实标签。这是任务的真实答案，通常由人类标注或事先知道。\n    对于分割任务（如语义分割），y_true是一个二维或多维数组，\n    表示每个像素对应的类别索引或 one-hot 编码表示。\n    y_pred: 预测标签。这是模型预测的结果。\n    对于分割任务，y_pred是一个三维数组，存储每个类别在每个像素位置的预测概率。\n    \"\"\"\n\n&nbsp; &nbsp; y_pred = np.clip(y_pred, 1e-9, 1 - 1e-9)&nbsp; # 数值稳定性处理，将预测值限制在[1e-9, 1-1e-9]范围内\n&nbsp; &nbsp; num_classes, height, width = y_true.shape\n&nbsp; &nbsp; total_loss = 0\n\n&nbsp; &nbsp; for c in range(num_classes):\n&nbsp; &nbsp; &nbsp; &nbsp; for i in range(height):\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; for j in range(width):\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; total_loss += y_true[c, i, j] * np.log(y_pred[c, i, j])\n\n&nbsp; &nbsp; return -total_loss\n\n\n# 示例代码（假设类别是经过 one-hot 编码的）\ny_true_class = np.array([0, 1, 0])\ny_pred_class = np.array([0.1, 0.8, 0.1])\n\ny_true_segment = np.random.randint(0, 2, (3, 32, 32))\ny_pred_segment = np.random.rand(3, 32, 32)\n\n# 计算分类任务损失\nclassification_loss = cross_entropy_classification(y_true_class, y_pred_class)\n# 计算分割任务损失\nsegmentation_loss = cross_entropy_segmentation(y_true_segment, y_pred_segment)\n\nprint(\"分类任务损失:\", classification_loss)\nprint(\"分割任务损失:\", segmentation_loss)\n</code></pre><p>通过最小化交叉熵损失函数，我们可以训练UNet模型以获取准确的像素级分类。在实际使用中，我们还可以使用其他的损失函数，如Dice损失函数、IoU损失函数等，来衡量分割结果与真实标签之间的差异。这些损失函数各有优劣，可能在不同类型的任务上表现出不同的性能。所以，在选择损失函数时，我们需要考虑实际问题的特点。</p><h2>UNet的应用</h2><p>计算机视觉领域里，UNet应用很广泛，我们这就来看看它有哪些应用。</p><p>首先是医学图像分割领域。UNet可以用于细胞分割，识别生物显微镜下的细胞边界，用于计数、分型等任务。UNet也可以用于器官分割，识别MRI或CT等影像中的目标结构，比如识别脑部病变、肝脏肿瘤或肺结节等。UNet应用于血管分割，可以识别眼底图像中的血管结构，有助于眼科疾病的诊断。</p><p><img src=\"https://static001.geekbang.org/resource/image/f4/a1/f4b94e845d2999fa61e4949fe30da0a1.jpg?wh=3926x1838\" alt=\"\" title=\"图片来源：https://pubmed.ncbi.nlm.nih.gov/28287963/ \"></p><p>其次，UNet用于自然图像分割。对于街景分割任务，可用于识别道路、行人、车辆等元素，辅助无人驾驶、智慧交通等领域。对于航拍图像分割，UNet可以从高分辨率的航空图像中提取建筑、湖泊、森林等地物信息，帮助城市规划和资源调查。此外，UNet还能用于人像分割，可以识别人像照片的背景，实现背景替换、虚化等目的。</p><p><img src=\"https://static001.geekbang.org/resource/image/2a/a7/2a5b7198bf4a75c0be0yy44c91323da7.jpg?wh=4409x1389\" alt=\"\" title=\"图片来源：https://www.cityscapes-dataset.com/\"></p><p>另外，UNet还可以被用于AI绘画，这和我们的课程息息相关，具体的用法就是把UNet用于扩散模型的噪声预测，我们这就来一探究竟！</p><h2>与扩散模型结合</h2><p>在<a href=\"https://time.geekbang.org/column/article/681276\">第6讲</a>中我们已经提到，扩散模型的噪声是通过一个神经网络预测得到的。</p><p>我们简单回顾下扩散模型中噪声预测模型的使用方式。这个模型的输入是第t步加噪结果图像和时间步t的编码，预测从第t-1步到第t步噪声值。也就是说，输入和输出在分辨率的维度是相同的。</p><p>UNet结构自然适用于这个任务，只不过损失函数由图像分割任务的交叉熵损失变成了噪声预测的L2损失。</p><p>下面的图展示了Stable Diffusion的UNet结构，这一讲我们先把焦点放在UNet结构上，至于其余部分，我们在后面的课程再拆解。</p><p>这里的UNet的输入，$Z_{T}$可以看作是第t步加噪结果图像和当前时间步编码的融合结果，UNet的输出是与$Z_{T}$ “分辨率”相同的噪声$\\varepsilon_{\\theta}$。细心的你可能已经发现问题了，怎么多了一些QKV的模块？</p><p>没错，正是我们上一讲学习的交叉注意力机制（Cross Attention）。</p><p><img src=\"https://static001.geekbang.org/resource/image/44/5a/4431b947bb93aafba67c8f731de29b5a.jpg?wh=3805x1907\" alt=\"\" title=\"图片来源：https://arxiv.org/abs/2112.10752\"></p><p>还记得么，交叉注意力机制从源序列产生K和V向量，从目标序列产生Q向量。在Stable Diffusion中，我们将$Z_{T}$视为目标序列，得到Q；将prompt描述经过CLIP模型得到的特征向量作为源序列，得到K和V。</p><p>你可以先把CLIP看作一个文本信息提取模型。因此，<strong>AI绘画中用到的UNet实际上是引入了Transformer思想的加强版UNet模型</strong>。下面这个图展示的是简化版AI绘画UNet结构，实际使用的UNet要堆叠更多的降采样和上采样模块。</p><p><img src=\"https://static001.geekbang.org/resource/image/d5/c4/d588yy3f986b92561a4ab74fef8d61c4.jpg?wh=4409x2480\" alt=\"\"></p><p>有意思的是，学者们也在试图换掉扩散模型中的UNet结构，比如2022年12月UC伯克利的学者提出了使用纯粹的<a href=\"https://arxiv.org/abs/2212.09748\">Transformer替代UNet结构</a>。毕竟我们已经知道，Transformer结构的输入和输出“分辨率”可以做到相同，并且天生自带交叉注意力机制。感兴趣的同学可以课后了解更多细节。</p><h2>总结时刻</h2><p>今天我们学习了UNet模型结构，这种基于编码器-解码器设计思想的U形深度学习网络，尤其适用于图像分割任务。独特的跳跃连接机制使得UNet能够有效地结合不同层级的特征，从而达到高质量的像素级预测。</p><p>UNet在扩散模型中被用于预测噪声。在原始的UNet基础上，插入了交叉注意力模块，巧妙地引入了我们输入的prompt文本描述信息，从而帮助我们随心所欲地控制AI绘画的内容。</p><p><img src=\"https://static001.geekbang.org/resource/image/c1/93/c1f20df4de9b9da10890c747c9265893.jpg?wh=1894x788\" alt=\"\"></p><h2>思考题</h2><ol>\n<li>\n<p>扩散模型的生成速度比较慢，因为需要从噪声出发逐步去噪。通过今天的学习，你已经知道每一步去噪的过程都需要用UNet进行噪声预测。结合这一讲的知识，你不妨说说自己对于生成加速的见解。</p>\n</li>\n<li>\n<p>关于UNet用于图像分割任务，除了今天我们已经介绍的应用，你还能举出哪些应用场景？</p>\n</li>\n</ol><p>欢迎你在留言区和我交流互动，积极思考能够提升你的学习效果。如果这一讲对你有帮助，别忘了分享给身边更多朋友。</p>","comments":[{"had_liked":false,"id":379181,"user_name":"徐大雷","can_delete":false,"product_type":"c1","uid":2548016,"ip_address":"湖北","ucode":"4D6F0D4C58CE93","user_header":"https://static001.geekbang.org/account/avatar/00/26/e1/30/56151c95.jpg","comment_is_top":false,"comment_ctime":1691489865,"is_pvip":false,"replies":[{"id":138186,"content":"Midjourney，垫图➕照片描述（越仔细越好）➕ keep the consistency of action, expression, clothing, shape and appearance of the photos, 3d character from Disney Pixar, super detail, gradient background, soft colors, fine luster, blender, soft lighting, anime, art, ip, blind box, divine, cinematic edge lighting, 8k --niji 5 --ar 3:4 --q 2 --style expressive --s 400 --niji 5 --style expressive","user_name":"编辑回复","user_name_real":"编辑","uid":1501385,"ctime":1691635082,"ip_address":"北京","comment_id":379181,"utype":2}],"discussion_count":0,"race_medal":0,"score":2,"product_id":100555001,"comment_content":"想请问一下老师，你这边的头像使用的啥模型生成的呀，还有对应的提示词是啥呀，谢谢","like_count":3},{"had_liked":false,"id":379068,"user_name":"海杰","can_delete":false,"product_type":"c1","uid":1032694,"ip_address":"新加坡","ucode":"72FE97A820D3F7","user_header":"https://static001.geekbang.org/account/avatar/00/0f/c1/f6/d6c1a0c2.jpg","comment_is_top":false,"comment_ctime":1691249246,"is_pvip":false,"replies":[{"id":138125,"content":"下周一第10讲就讲Clip，敬请期待。","user_name":"编辑回复","user_name_real":"编辑","uid":1501385,"ctime":1691283362,"ip_address":"北京","comment_id":379068,"utype":2}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100555001,"comment_content":"会讲下CLIP 模型吗？看网上不少范例的参数都有说用CLIP skip step 2,想知道原理。谢谢。","like_count":0,"discussions":[{"author":{"id":1501385,"avatar":"https://static001.geekbang.org/account/avatar/00/16/e8/c9/59bcd490.jpg","nickname":"听水的湖","note":"","ucode":"B1759F90165D81","race_medal":0,"user_type":8,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":625070,"discussion_content":"下周一第10讲就讲Clip，敬请期待。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1691283362,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":8}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":379034,"user_name":"一只豆","can_delete":false,"product_type":"c1","uid":1003886,"ip_address":"广东","ucode":"73953B25ADC953","user_header":"https://static001.geekbang.org/account/avatar/00/0f/51/6e/efb76357.jpg","comment_is_top":false,"comment_ctime":1691153155,"is_pvip":false,"replies":[{"id":138148,"content":"是的，SD模型巧妙地利用Cross-Attention完成了信息注入，从而让AI绘画模型实现言出法随。","user_name":"作者回复","user_name_real":"编辑","uid":2288210,"ctime":1691468195,"ip_address":"北京","comment_id":379034,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100555001,"comment_content":"这也太绝妙了吧！“在 Stable Diffusion 中，我们将 Z_{T} 视为目标序列，得到 Q；将 prompt 描述经过 CLIP 模型得到的特征向量作为源序列，得到 K 和 V。” 语义信息就这样把注意力跨模态的映射到图片信息了……","like_count":0,"discussions":[{"author":{"id":2288210,"avatar":"https://static001.geekbang.org/account/avatar/00/22/ea/52/c6f6ed5a.jpg","nickname":"南柯","note":"","ucode":"957ACF2DCCD2F7","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":625223,"discussion_content":"是的，SD模型巧妙地利用Cross-Attention完成了信息注入，从而让AI绘画模型实现言出法随。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1691468195,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":378976,"user_name":"Ericpoon","can_delete":false,"product_type":"c1","uid":1051587,"ip_address":"福建","ucode":"3D09FD429FE9CC","user_header":"https://static001.geekbang.org/account/avatar/00/10/0b/c3/3385cd46.jpg","comment_is_top":false,"comment_ctime":1691074807,"is_pvip":false,"replies":[{"id":138109,"content":"你好。关于这一点，需要看第6讲扩散模型进行AI绘画的基本原理。从它的工作原理可以知道，我们需要一个神经网络来预测每一步的噪声（输入带噪声图像、预测上一步引入的噪声值），而UNet的输入输出分辨率特性决定了它很适合去逐步预测噪声。","user_name":"作者回复","user_name_real":"编辑","uid":2288210,"ctime":1691079923,"ip_address":"北京","comment_id":378976,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100555001,"comment_content":"为什么说unet，或AI画画的模型学习，要用decoder输出喿声？","like_count":0,"discussions":[{"author":{"id":2288210,"avatar":"https://static001.geekbang.org/account/avatar/00/22/ea/52/c6f6ed5a.jpg","nickname":"南柯","note":"","ucode":"957ACF2DCCD2F7","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":624954,"discussion_content":"你好。关于这一点，需要看第6讲扩散模型进行AI绘画的基本原理。从它的工作原理可以知道，我们需要一个神经网络来预测每一步的噪声（输入带噪声图像、预测上一步引入的噪声值），而UNet的输入输出分辨率特性决定了它很适合去逐步预测噪声。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1691079923,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":378882,"user_name":"peter","can_delete":false,"product_type":"c1","uid":1058183,"ip_address":"北京","ucode":"261C3FC001DE2D","user_header":"https://static001.geekbang.org/account/avatar/00/10/25/87/f3a69d1b.jpg","comment_is_top":false,"comment_ctime":1690937346,"is_pvip":false,"replies":[{"id":138108,"content":"你好。关于Q1，跳跃连接两个对等层主要是分辨率相同，便于进行特征相加或者拼接操作，右边的层并不会使用左边的层作为输入，每一层的输入都是上一层的输出。关于Q2，各种音乐软件上有不少纯AI创作的音乐（作曲、作词、演唱等），可以听听感受下。另外，这一周，Meta发布了一个音乐AI 名为AudioCraft，你也可以了解下。希望能帮助到你。","user_name":"作者回复","user_name_real":"编辑","uid":2288210,"ctime":1691079737,"ip_address":"北京","comment_id":378882,"utype":1}],"discussion_count":2,"race_medal":0,"score":2,"product_id":100555001,"comment_content":"请教老师两个问题：\nQ1：跳跃连接，是两个对等层的数据会有关系吗？比如，右边的层会使用左边的层的数据作为输入。\nQ2：有能唱歌的AI吗？","like_count":0,"discussions":[{"author":{"id":2288210,"avatar":"https://static001.geekbang.org/account/avatar/00/22/ea/52/c6f6ed5a.jpg","nickname":"南柯","note":"","ucode":"957ACF2DCCD2F7","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":624953,"discussion_content":"你好。关于Q1，跳跃连接两个对等层主要是分辨率相同，便于进行特征相加或者拼接操作，右边的层并不会使用左边的层作为输入，每一层的输入都是上一层的输出。关于Q2，各种音乐软件上有不少纯AI创作的音乐（作曲、作词、演唱等），可以听听感受下。另外，这一周，Meta发布了一个音乐AI 名为AudioCraft，你也可以了解下。希望能帮助到你。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1691079737,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1237199,"avatar":"https://static001.geekbang.org/account/avatar/00/12/e0/cf/43f201f2.jpg","nickname":"幼儿编程教学","note":"","ucode":"F13F3150E6CAE9","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":641557,"discussion_content":"q2，现在有sunp了，效果还可以","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1712758709,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"浙江","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]}]}