{"id":98872,"title":"17 | 建立数据通路（上）：指令+运算=CPU","content":"<p>前面几讲里，我从两个不同的部分为你讲解了CPU的功能。</p><p>在“<strong>指令</strong>”部分，我为你讲解了计算机的“指令”是怎么运行的，也就是我们撰写的代码，是怎么变成一条条的机器能够理解的指令的，以及是按照什么样的顺序运行的。</p><p>在“<strong>计算</strong>”部分，我为你讲解了计算机的“计算”部分是怎么执行的，数据的二进制表示是怎么样的，我们执行的加法和乘法又是通过什么样的电路来实现的。</p><p>然而，光知道这两部分还不能算是真正揭开了CPU的秘密，只有把“指令”和“计算”这两部分功能连通起来，我们才能构成一个真正完整的CPU。这一讲，我们就在前面知识的基础上，来看一个完整的CPU是怎么运转起来的。</p><h2>指令周期（Instruction Cycle）</h2><p>前面讲计算机机器码的时候，我向你介绍过PC寄存器、指令寄存器，还介绍过MIPS体系结构的计算机所用到的R、I、J类指令。如果我们仔细看一看，可以发现，计算机每执行一条指令的过程，可以分解成这样几个步骤。</p><p>1.<strong>Fetch</strong>（<strong>取得指令</strong>），也就是从PC寄存器里找到对应的指令地址，根据指令地址从内存里把具体的指令，加载到指令寄存器中，然后把PC寄存器自增，好在未来执行下一条指令。</p><p>2.<strong>Decode</strong>（<strong>指令译码</strong>），也就是根据指令寄存器里面的指令，解析成要进行什么样的操作，是R、I、J中的哪一种指令，具体要操作哪些寄存器、数据或者内存地址。</p><!-- [[[read_end]]] --><p>3.<strong>Execute</strong>（<strong>执行指令</strong>），也就是实际运行对应的R、I、J这些特定的指令，进行算术逻辑操作、数据传输或者直接的地址跳转。</p><p>4.重复进行1～3的步骤。</p><p>这样的步骤，其实就是一个永不停歇的“<strong>Fetch - Decode - Execute</strong>”的循环，我们把这个循环称之为<strong>指令周期</strong>（Instruction Cycle）。</p><p><img src=\"https://static001.geekbang.org/resource/image/18/a7/1840bead02cfbe5d8f70e2f0a7b962a7.jpg?wh=2213*1615\" alt=\"\"></p><center><span class=\"reference\">指令周期（Instruction Cycle）</span></center><p>在这个循环过程中，不同部分其实是由计算机中的不同组件完成的。不知道你还记不记得，我们在专栏一开始讲的计算机组成的五大组件？</p><p>在取指令的阶段，我们的指令是放在<strong>存储器</strong>里的，实际上，通过PC寄存器和指令寄存器取出指令的过程，是由<strong>控制器</strong>（Control Unit）操作的。指令的解码过程，也是由<strong>控制器</strong>进行的。一旦到了执行指令阶段，无论是进行算术操作、逻辑操作的R型指令，还是进行数据传输、条件分支的I型指令，都是由<strong>算术逻辑单元</strong>（ALU）操作的，也就是由<strong>运算器</strong>处理的。不过，如果是一个简单的无条件地址跳转，那么我们可以直接在<strong>控制器</strong>里面完成，不需要用到运算器。</p><p><img src=\"https://static001.geekbang.org/resource/image/bd/67/bde3548a4789ba49cab74c8c1ab02a67.jpeg?wh=2143*1207\" alt=\"\"></p><center><span class=\"reference\">不同步骤在不同组件之内完成</span></center><p>除了Instruction Cycle这个指令周期，在CPU里面我们还会提到另外两个常见的Cycle。一个叫<strong>Machine Cycle</strong>，<strong>机器周期</strong>或者<strong>CPU周期</strong>。CPU内部的操作速度很快，但是访问内存的速度却要慢很多。每一条指令都需要从内存里面加载而来，所以我们一般把从内存里面读取一条指令的最短时间，称为CPU周期。</p><p>还有一个是我们之前提过的<strong>Clock Cycle</strong>，也就是<strong>时钟周期</strong>以及我们机器的主频。一个CPU周期，通常会由几个时钟周期累积起来。一个CPU周期的时间，就是这几个Clock Cycle的总和。</p><p>对于一个指令周期来说，我们取出一条指令，然后执行它，至少需要两个CPU周期。取出指令至少需要一个CPU周期，执行至少也需要一个CPU周期，复杂的指令则需要更多的CPU周期。</p><p><img src=\"https://static001.geekbang.org/resource/image/1a/48/1a7d2d6cf7cb78a8f48775268f452e48.jpeg?wh=4672*2212\" alt=\"\"></p><center><span class=\"reference\">三个周期（Cycle）之间的关系</span></center><p>所以，我们说一个指令周期，包含多个CPU周期，而一个CPU周期包含多个时钟周期。</p><h2>建立数据通路</h2><p>在专栏一开始，不少同学留言问到，ALU就是运算器吗？在讨论计算机五大组件的运算器的时候，我们提到过好几个不同的相关名词，比如ALU、运算器、处理器单元、数据通路，它们之间到底是什么关系呢？</p><p>名字是什么其实并不重要，一般来说，我们可以认为，数据通路就是我们的处理器单元。它通常由两类原件组成。</p><p>第一类叫<strong>操作元件</strong>，也叫组合逻辑元件（Combinational Element），其实就是我们的ALU。在前面讲ALU的过程中可以看到，它们的功能就是在特定的输入下，根据下面的组合电路的逻辑，生成特定的输出。</p><p>第二类叫<strong>存储元件</strong>，也有叫状态元件（State Element）的。比如我们在计算过程中需要用到的寄存器，无论是通用寄存器还是状态寄存器，其实都是存储元件。</p><p>我们通过数据总线的方式，把它们连接起来，就可以完成数据的存储、处理和传输了，这就是所谓的<strong>建立数据通路</strong>了。</p><p>下面我们来说<strong>控制器</strong>。它的逻辑就没那么复杂了。我们可以把它看成只是机械地重复“Fetch -  Decode - Execute“循环中的前两个步骤，然后把最后一个步骤，通过控制器产生的控制信号，交给ALU去处理。</p><p>听起来是不是很简单？实际上，控制器的电路特别复杂。下面我给你详细解析一下。</p><p>一方面，所有CPU支持的指令，都会在控制器里面，被解析成不同的输出信号。我们之前说过，现在的Intel CPU支持2000个以上的指令。这意味着，控制器输出的控制信号，至少有2000种不同的组合。</p><p>运算器里的ALU和各种组合逻辑电路，可以认为是一个固定功能的电路。控制器“翻译”出来的，就是不同的控制信号。这些控制信号，告诉ALU去做不同的计算。可以说正是控制器的存在，让我们可以“编程”来实现功能，能让我们的“存储程序型计算机”名副其实。</p><p><img src=\"https://static001.geekbang.org/resource/image/46/6f/46087a894b4ac182fab83ac3786cad6f.jpeg?wh=1942*1102\" alt=\"\"></p><center><span class=\"reference\">指令译码器将输入的机器码，解析成不同的操作码和操作数，然后传输给ALU进行计算</span></center><h2>CPU所需要的硬件电路</h2><p>那么，要想搭建出来整个CPU，我们需要在数字电路层面，实现这样一些功能。</p><p>首先，自然是我们之前已经讲解过的ALU了，它实际就是一个没有状态的，根据输入计算输出结果的第一个电路。</p><p>第二，我们需要有一个能够进行状态读写的电路元件，也就是我们的寄存器。我们需要有一个电路，能够存储到上一次的计算结果。这个计算结果并不一定要立刻拿到电路的下游去使用，但是可以在需要的时候拿出来用。常见的能够进行状态读写的电路，就有锁存器（Latch），以及我们后面要讲的D触发器（Data/Delay Flip-flop）的电路。</p><p>第三，我们需要有一个“自动”的电路，按照固定的周期，不停地实现PC寄存器自增，自动地去执行“Fetch - Decode - Execute“的步骤。我们的程序执行，并不是靠人去拨动开关来执行指令的。我们希望有一个“自动”的电路，不停地去一条条执行指令。</p><p>我们看似写了各种复杂的高级程序进行各种函数调用、条件跳转。其实只是修改PC寄存器里面的地址。PC寄存器里面的地址一修改，计算机就可以加载一条指令新指令，往下运行。实际上，PC寄存器还有一个名字，就叫作程序计数器。顾名思义，就是随着时间变化，不断去数数。数的数字变大了，就去执行一条新指令。所以，我们需要的就是一个自动数数的电路。</p><p>第四，我们需要有一个“译码”的电路。无论是对于指令进行decode，还是对于拿到的内存地址去获取对应的数据或者指令，我们都需要通过一个电路找到对应的数据。这个对应的自然就是“译码器”的电路了。</p><p>好了，现在我们把这四类电路，通过各种方式组合在一起，就能最终组成功能强大的CPU了。但是，要实现这四种电路中的中间两种，我们还需要时钟电路的配合。下一节，我们一起来看一看，这些基础的电路功能是怎么实现的，以及怎么把这些电路组合起来变成一个CPU。</p><h2>总结延伸</h2><p>好了，到这里，我们已经把CPU运转需要的数据通路和控制器介绍完了，也找出了需要完成这些功能，需要的4种基本电路。它们分别是，ALU这样的组合逻辑电路、用来存储数据的锁存器和D触发器电路、用来实现PC寄存器的计数器电路，以及用来解码和寻址的译码器电路。</p><p>虽然CPU已经是由几十亿个晶体管组成的及其复杂的电路，但是它仍然是由这样一个个基本功能的电路组成的。只要搞清楚这些电路的运作原理，你自然也就弄明白了CPU的工作原理。</p><h2>推荐阅读</h2><p>如果想要了解数据通路，可以参看《计算机组成与设计 硬件软件接口》的第5版的4.1到4.4节。专栏里的内容是从更高一层的抽象逻辑来解释这些问题，而教科书里包含了更多电路的技术细节。这两者结合起来学习，能够帮助你更深入地去理解数据通路。</p><h2>课后思考</h2><p>这一讲，我们说CPU好像一个永不停歇的机器，一直在不停地读取下一条指令去运行。那为什么CPU还会有满载运行和Idle闲置的状态呢？请你自己搜索研究一下这是为什么，并在留言区写下你的思考和答案。</p><p>欢迎你留言和我分享，你也可以把今天的文章分享给你的朋友，和他一起学习和进步。</p><p></p>","comments":[{"had_liked":false,"id":100883,"user_name":"LDxy","can_delete":false,"product_type":"c1","uid":1188710,"ip_address":"","ucode":"956432CE7B7761","user_header":"https://static001.geekbang.org/account/avatar/00/12/23/66/413c0bb5.jpg","comment_is_top":false,"comment_ctime":1559661780,"is_pvip":false,"discussion_count":5,"race_medal":0,"score":"632919854292","product_id":100026001,"comment_content":"CPU在空闲状态就会停止执行，具体来说就是切断时钟信号，CPU的主频就会瞬间降低为0，功耗也会瞬间降低为0。由于这个空闲状态是十分短暂的，所以你在任务管理器里面也只会看到CPU频率下降，不会看到降低为0。当CPU从空闲状态中恢复时，就会接通时钟信号，这样CPU频率就会上升。所以你会在任务管理器里面看到CPU的频率起伏变化。这个知识也是我找工作面试时才学到的。","like_count":147,"discussions":[{"author":{"id":1487723,"avatar":"https://static001.geekbang.org/account/avatar/00/16/b3/6b/72288a49.jpg","nickname":"何云逍","note":"","ucode":"1EEC608F664AFD","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":353589,"discussion_content":"原来是这样，涨知识了。","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1615176369,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2734785,"avatar":"https://static001.geekbang.org/account/avatar/00/29/ba/c1/96650f0a.jpg","nickname":"csa","note":"","ucode":"7D03D34E269FCF","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":573677,"discussion_content":"大佬，pc寄存器里的第一条地址是谁设定的来着。可能讲过，但我好像忘了额","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1653579006,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1188710,"avatar":"https://static001.geekbang.org/account/avatar/00/12/23/66/413c0bb5.jpg","nickname":"LDxy","note":"","ucode":"956432CE7B7761","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2734785,"avatar":"https://static001.geekbang.org/account/avatar/00/29/ba/c1/96650f0a.jpg","nickname":"csa","note":"","ucode":"7D03D34E269FCF","race_medal":0,"user_type":1,"is_pvip":true},"discussion":{"id":573748,"discussion_content":"pc寄存器的初始值是cpu复位时候自动写入的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1653627729,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":573677,"ip_address":""},"score":573748,"extra":""}]},{"author":{"id":1292965,"avatar":"https://static001.geekbang.org/account/avatar/00/13/ba/a5/9f5ab366.jpg","nickname":"redrain","note":"","ucode":"1013F15FA1A423","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":77753,"discussion_content":"什么工作","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1575939211,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1380366,"avatar":"https://static001.geekbang.org/account/avatar/00/15/10/0e/5a0f2339.jpg","nickname":"哪里有会生气的龙","note":"","ucode":"7F12FB7D01EB7E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1292965,"avatar":"https://static001.geekbang.org/account/avatar/00/13/ba/a5/9f5ab366.jpg","nickname":"redrain","note":"","ucode":"1013F15FA1A423","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":285012,"discussion_content":"搬砖的工作","likes_number":8,"is_delete":false,"is_hidden":false,"ctime":1592713389,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":77753,"ip_address":""},"score":285012,"extra":""}]}]},{"had_liked":false,"id":101210,"user_name":"Akizuki","can_delete":false,"product_type":"c1","uid":1517311,"ip_address":"","ucode":"2B48169ED18AC7","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJEbZZ65d5ibzjadyKq6Odjs5eeSJGwxnfBAv7gKjp6vG5GUdz9YrXq54KZeAEsS1OfahWVZurXODg/132","comment_is_top":false,"comment_ctime":1559742144,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"233487976128","product_id":100026001,"comment_content":"操作系统内核有 idle 进程，优先级最低，仅当其他进程都阻塞时被调度器选中。idle 进程循环执行 HLT 指令，关闭 CPU 大部分功能以降低功耗，收到中断信号时 CPU 恢复正常状态。","like_count":54},{"had_liked":false,"id":143142,"user_name":"黄马","can_delete":false,"product_type":"c1","uid":1019506,"ip_address":"","ucode":"93E391B4678EC2","user_header":"https://static001.geekbang.org/account/avatar/00/0f/8e/72/63c94eee.jpg","comment_is_top":false,"comment_ctime":1571637812,"is_pvip":true,"discussion_count":0,"race_medal":1,"score":"169075362356","product_id":100026001,"comment_content":"uptime 命令查看平均负载<br>满载运行就是平均负载为1.0(一个一核心CPU)<br>定义为特定时间间隔内运行队列中的平均线程数。load average 表示机器一段时间内的平均load。<br>这个值越低越好。负载过高会导致机器无法处理其他请求及操作，甚至导致死机<br><br>当CUP执行完当前系统分配的任务，为了省电，系统将执行空闲任务（idle task），这个任务循环执行HLT指令，CPU就会停止指令的执行，并且让CPU处于HALT状态,CPU虽然停止指令执行，并且CPU的部分功能模块将会被关闭（达到降低功耗的目的），但是CPU的LAPIC（Local Advanced Programmable Interrupt Controller）并不会停止工作，即CPU将会继续接收外部中断、异常等外部事件（事实上，CPU HALT状态的退出将由外部事件触发）.当CPU接收到这些外部事件的时候，将会从HALT状态恢复回来，执行中断服务函数，并且当中断服务函数执行完毕后，指令寄存器（CS:EIP）将会指向HLT指令的下一条指令，即CPU继续执行HLT指令之后的程序","like_count":39},{"had_liked":false,"id":126418,"user_name":"活的潇洒","can_delete":false,"product_type":"c1","uid":1238830,"ip_address":"","ucode":"666C30CA894754","user_header":"https://static001.geekbang.org/account/avatar/00/12/e7/2e/1522a7d6.jpg","comment_is_top":false,"comment_ctime":1566385120,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"108940567520","product_id":100026001,"comment_content":"要想成功三个动作很重要<br>1、做出来<br>2、写出来<br>3、讲出来<br>三个非常重要，缺一不可<br><br>day17 笔记：https:&#47;&#47;www.cnblogs.com&#47;luoahong&#47;p&#47;11330406.html<br>","like_count":25,"discussions":[{"author":{"id":2854129,"avatar":"https://static001.geekbang.org/account/avatar/00/2b/8c/f1/1a55535d.jpg","nickname":"踏雪无痕","note":"","ucode":"BB426066431D4D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":575797,"discussion_content":"抄的好，赞","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1655110490,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":123141,"user_name":"roger","can_delete":false,"product_type":"c1","uid":1509983,"ip_address":"","ucode":"214354674ABD3D","user_header":"https://static001.geekbang.org/account/avatar/00/17/0a/5f/5ee0221d.jpg","comment_is_top":false,"comment_ctime":1565614149,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"78875025477","product_id":100026001,"comment_content":"程序计数器一直在变化，就是满载吧，持续不变就是idle。CPU密集型任务需要CPU大量计算的任务，这个时候CPU负载就很高，IO密集型任务，CPU一直在等待IO，就会有idle。","like_count":18},{"had_liked":false,"id":100753,"user_name":"旺旺","can_delete":false,"product_type":"c1","uid":1213887,"ip_address":"","ucode":"161B267F67EBCA","user_header":"https://static001.geekbang.org/account/avatar/00/12/85/bf/5c5e86bb.jpg","comment_is_top":false,"comment_ctime":1559632849,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"53099240401","product_id":100026001,"comment_content":"cpu执行速度非常快，消耗性能资源也比较快。但实际上，电脑并不是时刻都需要进行大量运算。<br><br>所以，CPU需要一种“闲置”状态，来平衡这种矛盾（需要忙时，可以全速奔跑；暂无事务时，又可节能地随时待命。）<br><br>“Idle 闲置”是一种低功耗的状态，cpu在执行最低功耗的循环指令。实际上并非啥都没干，而是一直在干最最轻松的事儿。<br>","like_count":12,"discussions":[{"author":{"id":1200231,"avatar":"https://static001.geekbang.org/account/avatar/00/12/50/67/29ad08bc.jpg","nickname":"梦里是谁🌚","note":"","ucode":"0050BC150EDBF4","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":381457,"discussion_content":"最轻松的是什么事？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1625063963,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":229557,"user_name":"A君","can_delete":false,"product_type":"c1","uid":1940105,"ip_address":"","ucode":"FE96F089C2312C","user_header":"https://static001.geekbang.org/account/avatar/00/1d/9a/89/babe8b52.jpg","comment_is_top":false,"comment_ctime":1593057020,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"31657828092","product_id":100026001,"comment_content":"所谓构建数据通路，就是把各种组建通过线路组合起来，让他们可以完成数据存储、处理和传输的操作。数据处理部分自然是交给ALU组合逻辑计算元件，它是由大量运算器组合而成；数据存储自然是交给各种寄存器，存储的数据除了有计算数据外，还有各种状态，以及指令的地址；负责读取指令，将指令转换成电信号的就是译码器；为了让fetch-decode-execute这个循环体运作下去，还需要一个自动设备。","like_count":7},{"had_liked":false,"id":151923,"user_name":"九云","can_delete":false,"product_type":"c1","uid":1039784,"ip_address":"","ucode":"B23E9E4A76EAB0","user_header":"https://static001.geekbang.org/account/avatar/00/0f/dd/a8/fc96fb89.jpg","comment_is_top":false,"comment_ctime":1573813719,"is_pvip":false,"discussion_count":3,"race_medal":0,"score":"27343617495","product_id":100026001,"comment_content":"指令周期、时钟周期2个概念就够了。引入CPU周期这个概念，要解释什么问题呢？","like_count":6,"discussions":[{"author":{"id":1851730,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/ooYDTtTQHL9CZQmonDOQSC4Af9S4uqicXzUicOqEJqSOtHyOZ81PTpxcTqK5ibNHsaNWJIuHiaVcxB8gIo9RNXsshA/132","nickname":"小叶","note":"","ucode":"EFD624AD6B2686","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":540667,"discussion_content":"同问","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1640133675,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1040236,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/df/6c/5af32271.jpg","nickname":"Dylan","note":"","ucode":"58064D0C9F9F5F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":186631,"discussion_content":"我的理解CPU周期更多是为了方便管理，CPU访问一次内存所花费的时间较长，所以用CPU周期去作为一次指令读取的时间衡量","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582701148,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1168452,"avatar":"https://static001.geekbang.org/account/avatar/00/11/d4/44/0ec958f4.jpg","nickname":"Eleven","note":"","ucode":"FB4A0C8CA732BE","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":146233,"discussion_content":"同问。指令周期、时钟周期2个概念就够了。引入CPU周期这个概念，是要解释什么问题呢？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579604036,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":101269,"user_name":"kdb_reboot","can_delete":false,"product_type":"c1","uid":1003594,"ip_address":"","ucode":"4C56FCA563FCA3","user_header":"https://static001.geekbang.org/account/avatar/00/0f/50/4a/04fef27f.jpg","comment_is_top":false,"comment_ctime":1559771452,"is_pvip":false,"replies":[{"id":"37112","content":"👍一起加油","user_name":"作者回复","comment_id":101269,"uid":"1053568","ip_address":"","utype":1,"ctime":1560261687,"user_name_real":"徐文浩"}],"discussion_count":1,"race_medal":0,"score":"27329575228","product_id":100026001,"comment_content":"很喜欢这几章；大二时学数电，期末考了93分，但是仍然不知道它能做什么用，内心有困惑，但是也没更多的坚持这个问题；感谢你","like_count":6,"discussions":[{"author":{"id":1053568,"avatar":"https://static001.geekbang.org/account/avatar/00/10/13/80/8de66543.jpg","nickname":"徐文浩","note":"","ucode":"1D39AC564172E9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":452881,"discussion_content":"👍一起加油","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1560261687,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":104764,"user_name":"djfhchdh","can_delete":false,"product_type":"c1","uid":1484184,"ip_address":"","ucode":"E71D75328CE398","user_header":"https://static001.geekbang.org/account/avatar/00/16/a5/98/a65ff31a.jpg","comment_is_top":false,"comment_ctime":1560829493,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"23035665973","product_id":100026001,"comment_content":"cpu满载和空闲的分别主要是操作系统调度任务导致的，如果操作系统调度了一个高优先级的任务，那么cpu就优先执行这个任务即满载，如果操作系统调度了一个低优先级的idle任务，那么cpu就执行这个idle任务，显示为空闲状态，空闲即假装“没事做”，其实当有其他更高优先级的任务调度时，就可以抢占它，去执行更高优先级的任务","like_count":5},{"had_liked":false,"id":183967,"user_name":"北风一叶","can_delete":false,"product_type":"c1","uid":1087302,"ip_address":"","ucode":"30310E66341D2A","user_header":"https://static001.geekbang.org/account/avatar/00/10/97/46/fe1f21d8.jpg","comment_is_top":false,"comment_ctime":1583187519,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"14468089407","product_id":100026001,"comment_content":"指令周期由：取得指令，指令译码，执行指令三个步骤的不断循环组成，其中取指令和指令译码由控制器负责，执行指令由运算器负责。一个指令周期由多个CPU周期构成，而一个CPU周期又由多个时钟周期构成，这一部分感觉说的有点混乱。","like_count":3,"discussions":[{"author":{"id":1851730,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/ooYDTtTQHL9CZQmonDOQSC4Af9S4uqicXzUicOqEJqSOtHyOZ81PTpxcTqK5ibNHsaNWJIuHiaVcxB8gIo9RNXsshA/132","nickname":"小叶","note":"","ucode":"EFD624AD6B2686","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":540668,"discussion_content":"求解释","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1640133717,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1805809,"avatar":"","nickname":"ccz 开发(谢不邀)","note":"","ucode":"B8803B050AAC68","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":338801,"discussion_content":"这部分确实感觉内容不够让人理解","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1609384180,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":229559,"user_name":"A君","can_delete":false,"product_type":"c1","uid":1940105,"ip_address":"","ucode":"FE96F089C2312C","user_header":"https://static001.geekbang.org/account/avatar/00/1d/9a/89/babe8b52.jpg","comment_is_top":false,"comment_ctime":1593057673,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"10182992265","product_id":100026001,"comment_content":"因为cpu访问寄存器、cache、内存、硬盘的速度不同，为了不让宝贵的cpu资源浪费在数据传输过程中，因此引入中断，当cpu在访问硬盘等低速设备时可以将任务切换去，执行其他任务。如果不考虑进程调度策略、进程优先级等因素，如果几乎所有任务都是在做计算，那么cpu就会处在满载状态，如果当下没有任务在进行，操作系统就会切换ideal进程，该进程会主动挂起自己，所以说，虽然cpu当前在处理ideal任务，但并不会真正在读取处理传输数据。","like_count":2},{"had_liked":false,"id":100428,"user_name":"chengzise","can_delete":false,"product_type":"c1","uid":1006070,"ip_address":"","ucode":"1C27D216359894","user_header":"https://static001.geekbang.org/account/avatar/00/0f/59/f6/ed66d1c1.jpg","comment_is_top":false,"comment_ctime":1559555461,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10149490053","product_id":100026001,"comment_content":"CPU 还会有满载运行和 Idle 闲置的状态, 指的系统层面的状态。即使是idle空闲状态，cpu也在执行循环指令<br>","like_count":2},{"had_liked":false,"id":156304,"user_name":"once","can_delete":false,"product_type":"c1","uid":1453187,"ip_address":"","ucode":"033281FC1DAB37","user_header":"https://static001.geekbang.org/account/avatar/00/16/2c/83/f85ba9cd.jpg","comment_is_top":false,"comment_ctime":1574853131,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"5869820427","product_id":100026001,"comment_content":"老师 前面你说了 访问内存很慢 从内存中取出指令至少需要一个cpu周期 但是执行指令相对于从内存中取出指令应该会快很多吧 为什么也要至少一个cpu周期呢","like_count":1,"discussions":[{"author":{"id":2599204,"avatar":"https://static001.geekbang.org/account/avatar/00/27/a9/24/ab8e912d.jpg","nickname":"1948","note":"","ucode":"138137ECDEA808","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":384410,"discussion_content":"因为你执行完的结果，还要写回内存啊。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1626575589,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2403865,"avatar":"https://static001.geekbang.org/account/avatar/00/24/ae/19/5f2d96ce.jpg","nickname":"Bruce","note":"","ucode":"2EA3B9DBF5821C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":341169,"discussion_content":"同问，我就是看评论有没有人问这个问题的。我以为是说至少要2个clock cycle呢","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1610335643,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":155378,"user_name":"Ronnyz","can_delete":false,"product_type":"c1","uid":1488280,"ip_address":"","ucode":"9F34527B1D343D","user_header":"https://static001.geekbang.org/account/avatar/00/16/b5/98/ffaf2aca.jpg","comment_is_top":false,"comment_ctime":1574683395,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5869650691","product_id":100026001,"comment_content":"满载就是执行高优先级任务，不会被中断；空闲就是执行的任务优先级较低，可以被中断","like_count":1},{"had_liked":false,"id":360174,"user_name":"Geek_b0d83e","can_delete":false,"product_type":"c1","uid":1401398,"ip_address":"浙江","ucode":"909B1D99E27BB1","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKylFSbosgp8gP4HtYdsFg27BeUkYnsQS3ShbibCk0mrVuOVeicqIL6MZ6r42I6nuWLtDwtIPvkzC0A/132","comment_is_top":false,"comment_ctime":1666254116,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1666254116","product_id":100026001,"comment_content":"指令周期（取指令+执行）&gt;=2*CPU周期&gt;时钟周期","like_count":0},{"had_liked":false,"id":359852,"user_name":"Nuvole Bianche","can_delete":false,"product_type":"c1","uid":2100301,"ip_address":"上海","ucode":"3C059A454C16C7","user_header":"https://static001.geekbang.org/account/avatar/00/20/0c/4d/90ab20d8.jpg","comment_is_top":false,"comment_ctime":1665980921,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1665980921","product_id":100026001,"comment_content":"又一个疑问，原文：“我们通过数据总线的方式，把它们连接起来，就可以完成数据的存储、处理和传输了“，请问其中“数据总线的方式”具体是什么方式或者怎么理解吗？","like_count":0},{"had_liked":false,"id":358283,"user_name":"woodie","can_delete":false,"product_type":"c1","uid":2004783,"ip_address":"北京","ucode":"1C2925AD8191DA","user_header":"","comment_is_top":false,"comment_ctime":1664167153,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1664167153","product_id":100026001,"comment_content":"总结：<br>1、掌握指令周期、CPU周期(机器周期)、时钟周期、CPI、CPU主频的联系和区别<br>指令周期：包括获取指令=&gt;指令解码=&gt;指令执行<br>CPU周期(机器周期)：一个指令周期包括多个CPU周期<br>时钟周期时间：主频的倒数<br>CPI：每条指令的平均CPU时钟周期数<br>2、CPU包括四类基础电路：ALU(根据输入计算输出)、锁存器和D触发器(进行状态读写)、&quot;自动&quot;电路、“译码”器","like_count":0},{"had_liked":false,"id":350471,"user_name":"Geek_964a1d","can_delete":false,"product_type":"c1","uid":2776720,"ip_address":"","ucode":"C2653552516662","user_header":"","comment_is_top":false,"comment_ctime":1656933029,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1656933029","product_id":100026001,"comment_content":"指令缓存可以预热吗？就是提前把内存中的一段 指令 都放在 缓存中，这样，就不用每次都去内存中取指？ ","like_count":0},{"had_liked":false,"id":336057,"user_name":"何同一","can_delete":false,"product_type":"c1","uid":2637195,"ip_address":"","ucode":"3270B66A34F29A","user_header":"https://static001.geekbang.org/account/avatar/00/28/3d/8b/47bcc851.jpg","comment_is_top":false,"comment_ctime":1645870928,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1645870928","product_id":100026001,"comment_content":"所有进程都阻塞时 cpu 执行 idle 指令","like_count":0},{"had_liked":false,"id":319879,"user_name":"牛金霖","can_delete":false,"product_type":"c1","uid":1149616,"ip_address":"","ucode":"DBBE2E0EEE9FB2","user_header":"https://static001.geekbang.org/account/avatar/00/11/8a/b0/6ab66f1b.jpg","comment_is_top":false,"comment_ctime":1635995695,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1635995695","product_id":100026001,"comment_content":"Cpu-Cycle的大小是否也和内存的频率有关呢","like_count":0},{"had_liked":false,"id":306315,"user_name":"18736297414","can_delete":false,"product_type":"c1","uid":2272314,"ip_address":"","ucode":"F5220462B05D43","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/GbZRicqbu1QJmlcOlfLyW48OPaMmcKSO6zeZaKkc2uFiaLYOysibTKMtrOvOpHvlSHulHUatKX7lVcrENibqCmGhwQ/132","comment_is_top":false,"comment_ctime":1628492995,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1628492995","product_id":100026001,"comment_content":"计算机执行的基本流程是Fetch,Decode,Excute。<br>4 种基本电路。它们分别是，ALU 这样的组合逻辑电路、用来存储数据的锁存器和 D 触发器电路、用来实现 PC 寄存器的计数器电路，以及用来解码和寻址的译码器电路。","like_count":0},{"had_liked":false,"id":303192,"user_name":"thomas","can_delete":false,"product_type":"c1","uid":1016777,"ip_address":"","ucode":"9AB945308F1B50","user_header":"https://static001.geekbang.org/account/avatar/00/0f/83/c9/5d03981a.jpg","comment_is_top":false,"comment_ctime":1626660113,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1626660113","product_id":100026001,"comment_content":"每一条指令都需要从内存里面加载而来，所以我们一般把从内存里面读取一条指令的最短时间，称为 CPU 周期<br>------------------------------------&gt;<br>为什么要加上最短？","like_count":0},{"had_liked":false,"id":288159,"user_name":"李二木","can_delete":false,"product_type":"c1","uid":1103091,"ip_address":"","ucode":"30E03BB84ADB27","user_header":"https://static001.geekbang.org/account/avatar/00/10/d4/f3/129d6dfe.jpg","comment_is_top":false,"comment_ctime":1618325158,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1618325158","product_id":100026001,"comment_content":"CPU 需要的 4 种基本电路:<br>1) ALU 这样的组合逻辑电路、<br>2) 用来存储数据的锁存器和 D 触发器电路<br>3) 用来实现 PC 寄存器的计数器电路，<br>4) 解码和寻址的译码器电路","like_count":0},{"had_liked":false,"id":277613,"user_name":"阳仔","can_delete":false,"product_type":"c1","uid":1046920,"ip_address":"","ucode":"79F73D85EDF3E2","user_header":"https://static001.geekbang.org/account/avatar/00/0f/f9/88/cdda9e6f.jpg","comment_is_top":false,"comment_ctime":1612491618,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1612491618","product_id":100026001,"comment_content":"PC寄存器会自动取指令，即会自动自增，那它会溢出么？","like_count":0,"discussions":[{"author":{"id":2750547,"avatar":"https://static001.geekbang.org/account/avatar/00/29/f8/53/3f75edb2.jpg","nickname":"琴心","note":"","ucode":"386E083EB43962","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":410287,"discussion_content":"PC的宽度一般是一个字长，可以满足程序最大地址的宽度。其次，PC的值会因执行不同进程而被修改，不会一直自增下去","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1635650430,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":255616,"user_name":"风","can_delete":false,"product_type":"c1","uid":1077538,"ip_address":"","ucode":"104638BF19B048","user_header":"https://static001.geekbang.org/account/avatar/00/10/71/22/b8c596b6.jpg","comment_is_top":false,"comment_ctime":1603379286,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1603379286","product_id":100026001,"comment_content":"看似只有十来分钟的时间，实际涵盖的内容可不是十来分钟就能搞定的","like_count":0,"discussions":[{"author":{"id":2536820,"avatar":"https://static001.geekbang.org/account/avatar/00/26/b5/74/cd80b9f4.jpg","nickname":"友","note":"","ucode":"972A4333A8B101","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":374171,"discussion_content":"这十来分钟我可以说是一脸懵逼 没有基础是看不明白的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1621048300,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":240271,"user_name":"Paul Shan","can_delete":false,"product_type":"c1","uid":1593140,"ip_address":"","ucode":"32D99989028284","user_header":"","comment_is_top":false,"comment_ctime":1596838526,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1596838526","product_id":100026001,"comment_content":"请问老师，无条件跳转是不是只需要一个CPU周期，因为执行指令不需要操作内存？<br>","like_count":0,"discussions":[{"author":{"id":2750547,"avatar":"https://static001.geekbang.org/account/avatar/00/29/f8/53/3f75edb2.jpg","nickname":"琴心","note":"","ucode":"386E083EB43962","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":410288,"discussion_content":"需要两个CPU周期，取指一个，修改PC值实现跳转一个","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1635650552,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":205110,"user_name":"WENMURAN","can_delete":false,"product_type":"c1","uid":1915404,"ip_address":"","ucode":"5D1CE8B41937C7","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eqXNhbTULKiakib8lYXrvGF2zPwfedooBzC2EtSv1nt1MwV1KUvTkcJrvCBFvcdwJicnr3OEXnk9GUCg/132","comment_is_top":false,"comment_ctime":1586530686,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1586530686","product_id":100026001,"comment_content":"数据通路上：<br>     指令周期：计算机每执行一条指令的步骤如下:1,取得指令，从PC寄存器里找到对应的指令地址，把相应的指令加载到指令寄存器中，然后PC寄存器自增，准备执行下一条指令。2、指令译码，把指令寄存器里面的指令解析成相应的操作，是R I J中的哪一种指令，具体要操作哪些寄存器，数据或内存地址。3、执行指令，实际运行对应的R,I,J指令，进行算术逻辑操作，数据传输或地址跳转。如此循环往复，一个循环就是指令周期。<br>机器周期（CPU周期）:从内存里读取一条指令的最短时间<br>时钟周期<br>一个指令周期，最少需要2个CPU周期，一个CPU周期是几个时钟周期的总和<br>数据通路就是处理器单元：由两类元件组成，一是操作元件，在特定的输入下，根据下面的电路逻辑生成特定的输出。二是存储元件，比如寄存器。通过数据总线的方式把他们连起来就可以完成数据的存储和处理和传输了，就是所谓的建立数据通路了。<br>     4种基本电路：ALU这样的组合逻辑电路，用来存储数据的锁存器和D触发器电路，用来实现PC寄存器的计数器电路，以及用来解码和寻址的译码器电路。","like_count":0},{"had_liked":false,"id":153987,"user_name":"业余爱好者","can_delete":false,"product_type":"c1","uid":1482915,"ip_address":"","ucode":"A890935A982988","user_header":"https://static001.geekbang.org/account/avatar/00/16/a0/a3/8da99bb0.jpg","comment_is_top":false,"comment_ctime":1574342920,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1574342920","product_id":100026001,"comment_content":"cpu的取指，译码，执行某个过程被阻塞了","like_count":0},{"had_liked":false,"id":133420,"user_name":"prader26","can_delete":false,"product_type":"c1","uid":1433707,"ip_address":"","ucode":"5EFFFC374ADECE","user_header":"https://static001.geekbang.org/account/avatar/00/15/e0/6b/f61d7466.jpg","comment_is_top":false,"comment_ctime":1568557720,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1568557720","product_id":100026001,"comment_content":" 1 一个指令周期包括取指令，译码，执行。 这些行为用到的电路有，锁存器（存储数据）和D触发电路。ALU这样的逻辑组合电路，实现pc寄存器的计数电路，以及用来解码和译址的译码器电路。","like_count":0},{"had_liked":false,"id":108699,"user_name":"-W.LI-","can_delete":false,"product_type":"c1","uid":1210699,"ip_address":"","ucode":"3556786538664F","user_header":"https://static001.geekbang.org/account/avatar/00/12/79/4b/740f91ca.jpg","comment_is_top":false,"comment_ctime":1561859470,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1561859470","product_id":100026001,"comment_content":"老师好!我看了计算机组成与设计第一章<br>书上原文是一个程序所需要的时钟周期写为:<br>CPU时钟周期数=程序指令数*CPI。<br>并没有明确的CPU周期概念。CPU周期这个概念怎么理解啊?<br>CPU周期=CPU周期数倒数么?","like_count":0},{"had_liked":false,"id":101951,"user_name":"一步","can_delete":false,"product_type":"c1","uid":1005391,"ip_address":"","ucode":"73CEA468CE70C3","user_header":"https://static001.geekbang.org/account/avatar/00/0f/57/4f/6fb51ff1.jpg","comment_is_top":false,"comment_ctime":1560070739,"is_pvip":true,"discussion_count":3,"race_medal":1,"score":"1560070739","product_id":100026001,"comment_content":"一个指令周期来说，我们取出一条指令，然后执行它，至少需要两个CPU 周期。取出指令至少需要一个 CPU 周期，执行至少也需要一个 CPU 周期<br><br>这里执行为什么也需要一个至少也需要一个 CPU 周期呢？ CPU周期是从内存中读取一个CPU指令的最短时间，是执行的需要读取操作数在内存中的值需要的时间？<br>","like_count":0,"discussions":[{"author":{"id":2403865,"avatar":"https://static001.geekbang.org/account/avatar/00/24/ae/19/5f2d96ce.jpg","nickname":"Bruce","note":"","ucode":"2EA3B9DBF5821C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":341171,"discussion_content":"同问，如果我的指令比如是MIPS的 R0 ← R4 + R7，R0, R4, R7都是寄存器的话，应该一个clock cycle就能执行完了，执行的时候根本不需要和内存打交道，自然和CPU周期没啥关系了，不需要一个CPU周期。所以我觉得只有设计到内存的读写的时候，才会至少要1个CPU周期，都在寄存器的计算，那是不需要的，再比如是J类型的跳转指令，可能也不需要1个CPU周期吧？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1610335963,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1320090,"avatar":"https://static001.geekbang.org/account/avatar/00/14/24/9a/c933f702.jpg","nickname":"行者","note":"","ucode":"646558AF9803EE","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":163025,"discussion_content":"我的理解是他的「读取」包括「读」和「写」，执行完了把结果写入吧","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1581042841,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1250807,"avatar":"https://static001.geekbang.org/account/avatar/00/13/15/f7/744720a2.jpg","nickname":"DriveMan_邱佳源","note":"","ucode":"A4C83BF07DEE7A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":14639,"discussion_content":"执行的时候，不是直接从指令寄存器读取解析出来的数据吗，难道是解析数据到内存，然后cpu重新再读取内存？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1568774504,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":100701,"user_name":"Only now","can_delete":false,"product_type":"c1","uid":1038574,"ip_address":"","ucode":"C617473A03AE27","user_header":"https://static001.geekbang.org/account/avatar/00/0f/d8/ee/6e7c2264.jpg","comment_is_top":false,"comment_ctime":1559619558,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1559619558","product_id":100026001,"comment_content":"intel的cpu跳转指令貌似不是仅仅修改pc寄存器的值了吧, 它是不是还兼任着打断并清理流水线的作用?<br>我感觉jit中的循环展开的优化措施其中一部分性能提升的原因也与此有关。","like_count":0},{"had_liked":false,"id":100520,"user_name":"ezra.xu","can_delete":false,"product_type":"c1","uid":1014005,"ip_address":"","ucode":"6C3E11889BC6AB","user_header":"https://static001.geekbang.org/account/avatar/00/0f/78/f5/ae200a94.jpg","comment_is_top":false,"comment_ctime":1559570380,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1559570380","product_id":100026001,"comment_content":"一段程序的执行，所涉及的各种周期，步调可能不一致，类似于段页式内存管理中，经常产生内存碎片……个人凭直觉的一些理解，请老师斧正。","like_count":0},{"had_liked":false,"id":100268,"user_name":"不记年","can_delete":false,"product_type":"c1","uid":1045945,"ip_address":"","ucode":"287E40C68356DC","user_header":"https://static001.geekbang.org/account/avatar/00/0f/f5/b9/888fe350.jpg","comment_is_top":false,"comment_ctime":1559520127,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1559520127","product_id":100026001,"comment_content":"对于老师的那个取值-译码-执行的流程图，把alu换成数据通路更合适一点，因为数据的在寄存器，内存之间的转换不需要alu吧，如果错了请指正哈～","like_count":0},{"had_liked":false,"id":100255,"user_name":"陆离","can_delete":false,"product_type":"c1","uid":1483932,"ip_address":"","ucode":"2C8C206CE36A81","user_header":"https://static001.geekbang.org/account/avatar/00/16/a4/9c/b32ed9e9.jpg","comment_is_top":false,"comment_ctime":1559517559,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1559517559","product_id":100026001,"comment_content":"在一个指令周期内，可能有大量的操作单元是idle状态，这个时候CPU负载也较低","like_count":0}]}