{"id":91446,"title":"46 | 构建RESTful服务","content":"<h1>课件及源代码地址</h1><p><a href=\"https://gitee.com/geektime-geekbang/go_learning\">https://gitee.com/geektime-geekbang/go_learning</a></p><h2>书目推荐</h2><p><a href=\"time://mall?url=https%3A%2F%2Fh5.youzan.com%2Fv2%2Fgoods%2F1ycmk3uob0ryw\">《计算机程序的构造和解释》</a></p>","comments":[{"had_liked":false,"id":89229,"user_name":"manatee","can_delete":false,"product_type":"c3","uid":1041112,"ip_address":"","ucode":"708D90E7A265BD","user_header":"https://static001.geekbang.org/account/avatar/00/0f/e2/d8/f0562ede.jpg","comment_is_top":false,"comment_ctime":1556112286,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":2,"product_id":100024001,"comment_content":"restful一个相同URL节点有多种方法每一个方法都要写一遍router.GET router.POST router.PUT吗？\n不可以一个一条router 对应一个struct，struct 里面对应相应都post get put方法吗？","like_count":1},{"had_liked":false,"id":339259,"user_name":"云仔糕","can_delete":false,"product_type":"c3","uid":1807330,"ip_address":"","ucode":"858DD733F1D31E","user_header":"https://static001.geekbang.org/account/avatar/00/1b/93/e2/2044bafe.jpg","comment_is_top":false,"comment_ctime":1648014756,"is_pvip":false,"replies":null,"discussion_count":1,"race_medal":0,"score":2,"product_id":100024001,"comment_content":"老师，go开发web应用，有推荐的框架么？","like_count":0,"discussions":[{"author":{"id":1014603,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/7b/4b/95812b15.jpg","nickname":"抱紧我的小鲤鱼","note":"","ucode":"139780FB860FA3","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":558732,"discussion_content":"gin","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1648441869,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":330499,"user_name":"梦典","can_delete":false,"product_type":"c3","uid":1203920,"ip_address":"","ucode":"0A6F91068A13E8","user_header":"https://static001.geekbang.org/account/avatar/00/12/5e/d0/e676ac19.jpg","comment_is_top":false,"comment_ctime":1641998483,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":2,"product_id":100024001,"comment_content":"研读net&#47;http&#47;Server.go的代码，打算打开debugServerConnections变量进行调试，通过如下方式Debug发现变量修改成功了，但是断点设置不了，是不是编译系统判断这个包级别私有变量一定为false，其分支语句100%不能执行所以跳过编译？哪里的使用姿势不对吗？\n\n&#47;&#47;go:linkname debugServerConnections net&#47;http.debugServerConnections\nvar debugServerConnections bool = true","like_count":0},{"had_liked":false,"id":288027,"user_name":"escray","can_delete":false,"product_type":"c3","uid":1020525,"ip_address":"","ucode":"1F4204930E47C4","user_header":"https://static001.geekbang.org/account/avatar/00/0f/92/6d/becd841a.jpg","comment_is_top":false,"comment_ctime":1618277758,"is_pvip":true,"replies":null,"discussion_count":0,"race_medal":0,"score":2,"product_id":100024001,"comment_content":"抄了一遍代码，再抄一遍 Github 上的介绍\n\nHttpRouter is a lightweight high performance HTTP request router (also called multiplexer or just mux for short) for go.\n\n... this router supports variables in the routing pattern and matches against the request method. It also scales better.\n\nThe router is optimized for high performance and a small memory footprint. It scales well even with very long paths and  a large number of routes. A compressing dynamic trie (radix tree) structure is used for efficient matching.\n\n前缀树","like_count":0},{"had_liked":false,"id":207665,"user_name":"公众号：程序员大兵","can_delete":false,"product_type":"c3","uid":1142526,"ip_address":"","ucode":"AD0D05864C6913","user_header":"https://static001.geekbang.org/account/avatar/00/11/6e/fe/79955244.jpg","comment_is_top":false,"comment_ctime":1587133314,"is_pvip":true,"replies":null,"discussion_count":0,"race_medal":0,"score":2,"product_id":100024001,"comment_content":"client := &amp;http.Client{}\n\tclient.Transport = &amp;http.Transport{\n\t\t&#47;&#47;DisableKeepAlives:true,\n\t\tTLSClientConfig: &amp;tls.Config{\n\t\t\tInsecureSkipVerify: true,\n\t\t},\n\t\tProxy: func(request *http.Request) (u *url.URL, err error) {\n\t\t\t&#47;&#47;return url.Parse(&quot;http:&#47;&#47;10.19.0.85:8888&quot;)\n\t\t\t&#47;&#47;return url.Parse(&quot;http:&#47;&#47;192.168.11.123:8888&quot;)\n\t\t\treturn rp(request) &#47;&#47;返回 squid的代理地址URL 例如 http:&#47;&#47;账号:密码@ip地址:8999\n\t\t},\n\t}\n\tmethod := &quot;GET&quot;\n\tu = &quot;https:&#47;&#47;220.181.38.150&quot;\n\treq, err := http.NewRequest(method, u, nil)\n\tif err != nil {\n\t\tfmt.Println(err)\n\t}\n\treq.Host = &quot;www.baidu.com&quot;\n\tres, err := client.Do(req)\n这么写为什么请求会报错呢，squid日志直接500","like_count":0}]}