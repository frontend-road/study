{"id":341220,"title":"02｜善用Python扩展库：如何批量合并多个文档？","content":"<p>你好，我是尹会生。</p><p>在日常工作中，我们打交道最多的文件就要数Word和Excel了。我们经常面临这么一种场景：需要将Excel的内容合并到Word中。你可以想一想，完成这个需求，需要手动进行几个步骤的操作呢？很显然，有4步。</p><ul>\n<li>首先，要手动打开Excel、Word文件；</li>\n<li>接着，复制一个单元格的文字到Word指定位置；</li>\n<li>然后，如果有多个单元格，就需要重复复制多次；</li>\n<li>最后，保存Word文件，并关闭Excel和Word文件。</li>\n</ul><p>如果只有两个文件，这几步手动操作一定不成问题，不会耗费太多的时间。但是如果文件特别多，哪怕只有十几个，手动操作就相当耗费时间了，而且一不小心还容易出错。幸运的是，现在我们可以通过Python来实现批量文件合并功能，你只需要执行一个Python程序就能搞定所有文件的合并操作。</p><p>所以今天这节课，我们先从比较简单的内容讲起：用Python自动合并两个Word文件。然后再进阶，学习如何合并Word和其他类型的文件。一步一步来，相信你会掌握得既牢固又扎实。</p><h2>手工操作和用Python操作的区别</h2><p>首先我们要知道，为什么在合并文件的时候用Python更高效。我用一个例子来给你讲解手工操作和用Python操作的区别。比如下面这一段文字：</p><!-- [[[read_end]]] --><blockquote>\n<p>简易流<strong>程</strong>——集团原则在每年<strong>1<strong><strong>～</strong></strong>5</strong>月、<strong>7<strong><strong>～</strong></strong>11</strong>月生产工作任务较重或<strong>考核时间较紧</strong>的情况下运用。</p>\n</blockquote><p>在Word文件中，不但有文字内容，还有加粗、红色等格式，而且这些特殊的格式和文字内容是混合在一起的。</p><p>但如果用Python来读取Word文件，这段文字会被分为纯文字、段落、字体、字号以及表格等更具体的部分，而且每一个部分都对应着Python的变量和函数。</p><p>这样一来，你就可以根据自己的需求，只提取某一具体部分的内容。比如说，你看到哪一段文字的字体很好看，就可以直接读取之后套用到新的文字段落就行，非常便捷。</p><p>不过，用Python读取文件时，你需要记住很多个Python变量和函数。当然了，针对这一点，你也不用担心，这些变量和函数在Python的Word扩展库<a href=\"https://python-docx.readthedocs.io/en/latest/\">官方文档</a>可以查看。所以如果你需要某个功能，但是不知道应该用什么变量和函数名称时，可以在官方文档中找到它的名字和描述信息。</p><p>总之，用Python读取文件的方式是非常有助于提高工作效率的。所以接下来我们用Python处理Word文件时，就需要通过刚才介绍的变量和函数来替代手动操作。</p><p>接下来，我先带你学习怎样用Python合并多个Word文件，然后再讲怎么把Word文件与纯文本、图片和Excel进行合并。</p><h2>如何合并多个Word文件，只保留文字内容？</h2><p>先从合并两个Word文件说起。假设你现在有两个Word文件，需要进行文件中的文字合并操作。两个文件的内容分别是:</p><p>文件一（内容包含字体、字号、颜色等额外信息）：</p><p><strong>1.简易流程</strong>——集团原则在每年<strong>1<strong><strong>～</strong></strong>5</strong>月、<strong>7<strong><strong>～</strong></strong>11</strong>月生产工作任务较重或<strong>考核时间较紧</strong>的情况下运用。</p><p>文件二（内容文字出现在表格中）：</p><p><img src=\"https://static001.geekbang.org/resource/image/5e/fd/5e608e620e13e2c4f846b5d4766679fd.png?wh=5897*3006\" alt=\"\"></p><p>我把两个文件的信息总结如下：</p><ul>\n<li>第一个文件中，字体使用了黑体和宋体字，此外还有红色字体和加粗等格式。现在我需要只提取其中的文字内容，不带任何格式。</li>\n<li>第二个文件中，文字被放在了一张表格里。现在我需要用Python把表格中的文字提取出来，合并成一个新的文件。</li>\n</ul><p>我先把核心代码给你贴出来，然后再给你详细讲解具体的操作方法。</p><p>首先，我们可以使用一段Python代码提取Word文件里的内容，然后合并成一个文件。</p><pre><code>import docx\ndef merge_without_format(docx_files: list):\n    '''\n    只获取内容进行合并\n    '''\n    # 遍历每个文件\n    for docx_file in sorted(docx_files):\n        another_doc = Document(docx_file)\n        # 获取每个文件的所有“段落”\n        paras = another_doc.paragraphs\n        # 获取所有段落的文字内容\n        # paras_content = [para.text for para in paras]\n        for para in paras:\n            # 为新的word文件创建一个新段落\n            newpar = doc.add_paragraph('')\n            # 将提取的内容写入新的文本段落中\n            newpar.add_run(para.text)\n\n    # 所有文件合并完成后在指定路径进行保存\n    doc.save(Path(word_files_path, 'new.docx'))\n        \n\n# 调用函数\nmerge_without_format(files)\n</code></pre><p>在这段代码中你可以看到，我使用了一个Python的扩展库，它叫做python-docx，这也是我想重点给你讲解的一个扩展库。</p><p>python-docx是Python专门用来编辑Word文档的库，我在实现Word文档自动化操作的工作中经常会用到它。使用它的好处就是不必自己研究docx文件类型的底层实现细节，你可以像操作.txt文本一样直接打开、修改和保存关闭文件。可以说，python-docx扩展库降低了用户使用Python的复杂度。</p><p>我再举个例子展示一下具体的操作过程。例如python-docx库支持函数Document，它实现了Word文件的打开功能，底层也做了很多对Word格式的处理工作，让你可以直接使用paragraphs变量就能读取一整段Word文件。</p><p>Document函数格式如下：</p><pre><code>Document(docx_file)\n</code></pre><p>还有，函数save也是python-docx扩展库提供的word文件保存函数。同样的，save函数在底层也做了很多对docx格式兼容的操作。像下面的代码一样，你就可以直接给这个函数传递一个文件路径，然后进行保存。是不是降低了编写代码的难度呢?</p><pre><code>doc.save(Path(word_files_path, 'new.docx'))\n</code></pre><p>通过我举的例子，你就能更直观地感受到Python扩展库的方便之处了。接下来我们再回到刚才那两个文件的合并，合并之后的结果如下：</p><pre><code>1.简易流程——集团原则在每年1-5月、7-11月生产工作任务较重或考核时间较紧的情况下运用。\n人力资源、生产、品管、财务等部门整理、提供绩效考核数据。\n人力资源部门收集各部门提供的考核数据，依据员工绩效考核评分标准对集团所有员工进行绩效考核得分计算。\n人力资源部门将核计的员工绩效考核结果提交部门经理确认后报集团主管领导核定。\n</code></pre><p>现在你已经掌握了两个Word文件的合并方法了。但如果我想让这段程序适用于三个、四个，甚至更多个Word文件的合并，那该怎么操作呢?</p><p>一个好消息就是，上面的代码我们不需要做任何修改，就可以合并多个Word文件。因为我使用了一个叫做<strong>函数</strong>的功能。<strong>函数有时候也被称作过程、方法</strong>，<strong><strong>它的作用是将那些需要反复使用的代码组合在一起</strong></strong>。</p><p>之前我们使用过函数，这些函数是Python自带的，或是扩展库提供的。这些函数我们可以直接拿来使用，使用函数在计算机术语中被称作函数调用。通过函数我们可以实现程序的模块化，多次使用可以多次调用，从而减少代码的重复性。但如果你需要自己编写函数怎么办呢?</p><p>你可以将重复的代码功能写在自己定义的函数中，在需要使用的地方调用就可以了。这种自己编写的函数就被称作自定义函数。自定义函数和Python自带的函数一样，也可以实现减少代码重复性的作用。</p><p>关于自定义函数，你需要熟悉它们的相关语法，主要是函数名、函数定义和调用方法。通常编写一个函数要为函数并起一个名字，这个名字叫做函数名。当你需要使用函数的功能时，可以使用函数名加“()”的方式来使用它，而且使用一个函数一般被称作调用函数。</p><p>我把函数定义和函数调用的写法单独拿出来给你看下，定义函数的格式是def后面跟着函数名称，调用函数是函数名称后面跟着一个\"()\" ，这是它的语法格式：</p><pre><code># 定义一个函数\ndef 函数名(参数列表):\n    函数体\n# 调用一个函数\n函数名(参数)\n</code></pre><p>知道了自定义函数的语法，接下来我们就可以在程序中使用自定义函数了。</p><p>举个简单的例子。像我在合并Word文件的程序中，第2行的merge_without_format就是我定义的一个函数，第24行merge_without_format(files) 就是对函数进行调用，files叫做函数的参数。通过函数参数，可以在调用函数的时候为函数指定要操作的对象。</p><p>相信你不难发现，使用函数以后，不但可以提高代码的重复利用率，还能提高代码的可读性。</p><p>那这段程序是怎样处理多个文件合并的呢? 我在调用函数merge_without_format时，使用了files变量作为参数，而files变量包含了大量的文件。因为是多个文件合并，所以在函数中我使用了一个小技巧，就是你熟悉的for循环语句，for循环语句能够遍历files变量的值，这样就可以将files指向的全部Word文件逐一进行文件内容的提取，进行两两合并，从而实现任意多个Word文件的合并操作。</p><p>通过对多个word合并，我希望你能学会怎么提取Word中的文字内容，如果你需要编写大量重复的代码，可以将它们写成自己定义的函数。</p><h2>怎样合并不同类型的文件？</h2><p>通过上面的例子，我们实现了Word文件之间的合并。在工作中，我们经常需要处理Word和Txt文件、图片、Excel这些类型合并的情况，又该如何操作呢？接下来，我就一个一个来讲一讲。</p><h3>将纯文本和Word文件合并</h3><p>如果是为了支持信息丰富，我们Word和Txt合并之后保存到新的Word中，会出现Txt里的字体字号和原有文件不统一的问题，我们可以使用python-docx扩展库为Txt文件中的文字增加格式。</p><p>如果合并前Word文件是仿宋字体，而且有下划线和红色字体，我们将Txt合并之后如何进行字体、样式和颜色的统一呢？我们可以使用下面这段代码。</p><pre><code>def add_content_mode1(content):\n    '''\n    增加内容\n    '''\n    para = doc.add_paragraph().add_run(content)\n    # 设置字体格式\n    para.font.name = '仿宋'\n    # 设置下划线\n    para.font.underline = True\n    # 设置颜色\n    para.font.color.rgb = RGBColor(255,128,128)  \n</code></pre><p>首先，我定义了一个叫做add_content_mode1的函数。考虑到Word合并Txt是否会有多个Txt进行合并操作，所以我使用自定义函数功能。</p><p>当你需要对多个Txt进行合并，就调用函数依次对它们进行处理，这样你就不用编写重复的代码了，这也是我在编写代码时进行提效的一个小技巧。</p><p>接下来，我们将每个新合并的txt内容作为一个新的段落合并到原有的文字中，这个功能使用python-docx的add_paragraph函数就可以增加了一个新的段落。</p><p>最后，把这一段所有文字设置成和原有的Word统一的字体、下划线和颜色，保证新的段落在格式上的统一。</p><p>在具体操作的时候，我还要提醒你，Word文件支持的格式丰富程度远远高于Txt文件，所以当这两种格式丰富程度不一致的文件进行合并时，要么向下兼容，去掉Txt不支持的格式；要么向上兼容，对Txt进行格式再调整。否则容易出现合并之后仍需要手动调整格式的问题，影响工作效率。</p><h3>将图片和Word文件合并</h3><p>我们再来看一下第2种情况，怎么把图片和Word文件进行合并呢?</p><p>想一下，我们经常见到的图片格式就有.jpg、.png、.gif等，由于这些格式应用范围广，格式没有被商业软件加密，所以python-docx库的add_picture函数就能实现把图片插入Word的功能。代码如下：</p><pre><code>from docx import Document\nfrom docx import shared\n\ndoc = Document()\n# 按英寸设置宽度,添加图片\ndoc.add_picture('test.jpg', width=shared.Inches(1)) \n</code></pre><p>那有没有被商业保护、不能直接支持的格式呢？比如Pohotshop自带的.ps格式，我们如果将.ps格式插入Word文档，.ps格式不能被add_picture所支持，就只能以附件的形式添加到Word文件中，作为附件添加的文件无法直接展示图片的内容，和add_picture相比不够直观。</p><p>所以如果不需要进行内容的加密等商业目的的时候，建议使用通用和公开格式，这些格式对编程语言的兼容性更好。</p><p>总的来说，python-docx的功能非常强大，除了将文本和图片合并到Word文件中，还可以和第一节课我们学过的xlrd扩展库相配合，将Excel和Word进行合并。</p><h3>将Excel和Word文件合并</h3><p>为了让你更好地理解如何进行Word和Excel文件的合并，我用一个利用Excel和Word批量制作邀请函的例子来给你讲解。</p><p>我在Word中保存了邀请函的标准公文格式，但是其中的被邀请人、性别（先生、女士）以及发出邀请的时间，分别用“&lt;姓名&gt;”“&lt;性别&gt;”“&lt;时间&gt;”替代。邀请函格式如下：</p><p><strong>尊敬的 &lt;姓名&gt; &lt;性别&gt;：</strong></p><p><strong>… 邀请函内容 …</strong></p><p><strong>&lt;今天日期&gt;</strong></p><p>我在Excel的每一行中写了被邀请人的姓名、性别信息。格式如下：</p><p><img src=\"https://static001.geekbang.org/resource/image/32/ee/3268ea0a297fc76a38b711d7be73aaee.png?wh=4370*2081\" alt=\"\"></p><p>现在，我们需要将Excel和Word进行合并操作，为每个被邀请人自动生成一个Word格式的邀请函。</p><p>虽然Word中自带的邮件功能可以批量制作邀请函，但是在灵活性还是较差的。比如我要在邀请函制作完成的时候自动添加制作时间等功能，就无法通过Word自带的邮件功能实现。接下来我就用Python来生成邀请函，代码如下：</p><pre><code>def generat_invitation():\n    '''\n    生成邀请函文件\n    '''\n    doc = Document(invitation)\n    # 取出每一段\n    for para in doc.paragraphs:\n        for key, value in replace_content.items():\n            if key in para.text:\n                # 逐个关键字进行替换\n                para.text = para.text.replace(key, value)\n\n    file_name = PurePath(invitation_path).with_name(replace_content['&lt;姓名&gt;']).with_suffix('.docx')\n    doc.save(file_name)\n</code></pre><p>对于这个问题，我是这样思考的。如果手动操作，我需要：</p><ul>\n<li>先将Excel中的每一行中的姓名、性别填入Word文件中；</li>\n<li>再将当前日期填入到Word文件中；</li>\n<li>最后再按照姓名另存为一个文件。</li>\n</ul><p>但如果使用Python来实现呢？就会非常简单。首先在整个过程中，Word文档是被反复使用到的，所以对Word文档进行修改的这个动作，我会将它写入到循环语句当中。</p><p>接着，我需要一个循环语句来处理Excel里的每一行循环，因为我们需要把Excel的每一行读取出来，然后替换“&lt;姓名&gt;”“&lt;性别&gt;”。</p><p>最后我们要解决的就是替换问题了。python-docx功能非常强大，它自带了替换函数–replace函数，能够将\"&lt;姓名&gt;“”&lt;性别&gt;\"替换成Excel真实的用户和性别。</p><p>我再用代码解释一下。对应上面的代码：</p><ul>\n<li>第7行的for循环实现了遍历每个段落功能，para变量就是表示每个段落的变量。</li>\n<li>第8行我们将excel提前处理为python的基础类型–字典（链接）， for循环实现了姓名、性别的遍历。</li>\n<li>第11行实现了内容的替换功能。</li>\n<li>第12行我将姓名作为文件名称，将.docx作为扩展名指定为新的文件名称，通过第13行的save函数进行了邀请函的保存。</li>\n</ul><p>你看，多次读取Word文件的循环、多次按行读取Excel文件的循环、替换的函数都有了，那我们就可以实现自动化生成邀请函的功能了。</p><p>最终每张邀请函实现的效果如下图：</p><p><img src=\"https://static001.geekbang.org/resource/image/40/82/407f6cf1b86e8142064f6e7939ce5682.png?wh=672*412\" alt=\"\"></p><p>如你所见，我们在对不同类型文件进行合并时，要考虑不同的问题：</p><ol>\n<li>对于支持格式丰富不同的文件时要考虑格式的兼容性；</li>\n<li>对于图片、音乐、视频和Word合并时要考虑是否是受到word支持的通用格式；</li>\n<li>对于像Excel格式于Word合并时能实现更复杂的功能，代码的复杂程度也会随之提高，一般需要先分析功能，再进行代码编写。</li>\n</ol><h2>小结</h2><p>通过上面对Word文件的批量处理，我为你总结了Word和各种类型合并增效的几个通用法则。</p><ul>\n<li>首先，尽量选择Word兼容的格式,这些格式往往也是python-docx库能直接支持的类型。</li>\n<li>第二，善于将手工操作转换为Python程序实现。如果无法直接转换为Python程序，可以尝试将手工操作继续细化拆分。</li>\n<li>第三，反复在程序中出现的代码可以编写为函数功能，函数可以让你的程序更健壮，较短的代码数量也减少了出现Bug的机率。</li>\n</ul><h2>思考题</h2><p>在最后我也想留一个问题给你思考，如果邀请函的格式从Word文件改为图片，你将会如何去解决呢?</p><p>如果你觉得这节课有用，能解决你的办公效率问题，欢迎你点击“请朋友读”，分享给你的朋友或同事。</p><p>编辑小提示：专栏的完整代码位置是https://github.com/wilsonyin123/python_productivity，可点击链接下载查看。或者通过网盘链接提取后下载，链接是: <a href=\"https://pan.baidu.com/s/1UvEKDCGnU6yb0a7gHLSE4Q?pwd=5wf1%EF%BC%8C%E6%8F%90%E5%8F%96%E7%A0%81:\">https://pan.baidu.com/s/1UvEKDCGnU6yb0a7gHLSE4Q?pwd=5wf1，提取码:</a> 5wf1。</p>","neighbors":{"left":{"article_title":"01 | 拆分与合并：如何快速地批量处理内容相似的Excel？","id":340388},"right":{"article_title":"03｜图片转文字：如何提高识别准确率？","id":342252}},"comments":[{"had_liked":false,"id":312058,"user_name":"周文玲","can_delete":false,"product_type":"c1","uid":2717044,"ip_address":"","ucode":"DA071849C9743E","user_header":"","comment_is_top":true,"comment_ctime":1631610321,"is_pvip":false,"replies":[{"id":"114069","content":"这是正常现象，我来帮你梳理一下主要的学习目标，这样能帮你理解这些程序编写的目的。<br><br>首先在办公自动化工作当中引入编程并不是降低了办公自动化的门槛，反而是提高了。换句话说就是明明可以用5+5+5+5计算得到计算结果20，为什么要学习乘法，掌握5*4这种方法呢？<br>因为办公工作中有大量重复的工作时，不想手动做，那就需要掌握一个高级的工具，也就是编程语言，但是编程语言要先死记硬背Python语法，这些语法就像咱们学过的九九乘法表一样，没有捷径。我觉得这是作为零基础的同学学习起来比较困难的原因<br><br>其次，编程的概念比较抽象，最开始掌握的时候可以结合着例子来记忆，如果你的工作中有重复性的任务，结合起来记忆效率是最高的<br><br>最后，编程语言的学习过程是先模仿，再理解，最后再创造；这也可能和我们学习其他技能不大一样的地方。编程需要多写，慢慢才能够理解其中的含义。<br><br>希望能够对你有帮助","user_name":"作者回复","user_name_real":"尹会生","uid":"1056235","ctime":1633661078,"ip_address":"","comment_id":312058,"utype":1}],"discussion_count":1,"race_medal":0,"score":"9.2233720513713009e+18","product_id":100071001,"comment_content":"老师，零基础学些这门课程感觉有些困难，一开始以为只是在excel里面去写函数就可以实现，听了您的课发现讲的挺详细的，但感觉自己不太能理解和应用，还是有点懵，如何有成效的学习这门课呢？","like_count":3,"discussions":[{"author":{"id":1056235,"avatar":"https://static001.geekbang.org/account/avatar/00/10/1d/eb/b2123759.jpg","nickname":"尹会生","note":"","ucode":"D1093DBD093617","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":526848,"discussion_content":"这是正常现象，我来帮你梳理一下主要的学习目标，这样能帮你理解这些程序编写的目的。\n\n首先在办公自动化工作当中引入编程并不是降低了办公自动化的门槛，反而是提高了。换句话说就是明明可以用5+5+5+5计算得到计算结果20，为什么要学习乘法，掌握5*4这种方法呢？\n因为办公工作中有大量重复的工作时，不想手动做，那就需要掌握一个高级的工具，也就是编程语言，但是编程语言要先死记硬背Python语法，这些语法就像咱们学过的九九乘法表一样，没有捷径。我觉得这是作为零基础的同学学习起来比较困难的原因\n\n其次，编程的概念比较抽象，最开始掌握的时候可以结合着例子来记忆，如果你的工作中有重复性的任务，结合起来记忆效率是最高的\n\n最后，编程语言的学习过程是先模仿，再理解，最后再创造；这也可能和我们学习其他技能不大一样的地方。编程需要多写，慢慢才能够理解其中的含义。\n\n希望能够对你有帮助","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1633661078,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":340201,"user_name":"🐑","can_delete":false,"product_type":"c1","uid":2189689,"ip_address":"","ucode":"DE34B3B14287D1","user_header":"https://static001.geekbang.org/account/avatar/00/21/69/79/b4132042.jpg","comment_is_top":true,"comment_ctime":1648651888,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"9.2233720385033994e+18","product_id":100071001,"comment_content":"编辑小提示：专栏的完整代码位置是https:&#47;&#47;github.com&#47;wilsonyin123&#47;python_productivity，可点击链接下载查看。<br><br>或者通过网盘链接提取后下载，链接是: https:&#47;&#47;pan.baidu.com&#47;s&#47;1UvEKDCGnU6yb0a7gHLSE4Q?pwd=5wf1，提取码: 5wf1。","like_count":0},{"had_liked":false,"id":277981,"user_name":"黄矢","can_delete":false,"product_type":"c1","uid":1136224,"ip_address":"","ucode":"7ADD89AB9380AD","user_header":"https://static001.geekbang.org/account/avatar/00/11/56/60/fb5ca9e5.jpg","comment_is_top":false,"comment_ctime":1612689657,"is_pvip":false,"replies":[{"id":"101070","content":"可以自己找一找pdf库,写一写会有更深刻的印象","user_name":"作者回复","user_name_real":"尹会生","uid":"1056235","ctime":1612872935,"ip_address":"","comment_id":277981,"utype":1}],"discussion_count":1,"race_medal":0,"score":"18792558841","product_id":100071001,"comment_content":"沿用老师的代码，生成docx文件，然后使用python拓展库将docx文件批量转pdf，最后将pdf批量转图片","like_count":4,"discussions":[{"author":{"id":1056235,"avatar":"https://static001.geekbang.org/account/avatar/00/10/1d/eb/b2123759.jpg","nickname":"尹会生","note":"","ucode":"D1093DBD093617","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":515236,"discussion_content":"可以自己找一找pdf库,写一写会有更深刻的印象","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1612872935,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":282007,"user_name":"建明","can_delete":false,"product_type":"c1","uid":1914606,"ip_address":"","ucode":"AA4E2ADE33411E","user_header":"","comment_is_top":false,"comment_ctime":1615012092,"is_pvip":false,"replies":[{"id":"102526","content":"我觉得可以先去模仿代码，然后再去理解。<br>另外可以找一些从零基础学拍摄的书籍作为系统性参考。<br>我为你推荐一本《learing Python the hardway》比较适合初学者。","user_name":"作者回复","user_name_real":"尹会生","uid":"1056235","ctime":1615206649,"ip_address":"","comment_id":282007,"utype":1}],"discussion_count":1,"race_medal":0,"score":"14499913980","product_id":100071001,"comment_content":"老师其实我真的是完全的0基础，我听了前几节课如果能学好必然会对我的工作效率有质的提升，我目前还有一个0基础学Python，现在学这门课很困难，但我想学这门课，能否给我推荐一个学习的思路呢，如何构建我Python学习体系呢。","like_count":3,"discussions":[{"author":{"id":1056235,"avatar":"https://static001.geekbang.org/account/avatar/00/10/1d/eb/b2123759.jpg","nickname":"尹会生","note":"","ucode":"D1093DBD093617","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":516583,"discussion_content":"我觉得可以先去模仿代码，然后再去理解。\n另外可以找一些从零基础学拍摄的书籍作为系统性参考。\n我为你推荐一本《learing Python the hardway》比较适合初学者。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1615206649,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":310909,"user_name":"吴杨","can_delete":false,"product_type":"c1","uid":2754654,"ip_address":"","ucode":"086A849EA082FB","user_header":"https://static001.geekbang.org/account/avatar/00/2a/08/5e/191013be.jpg","comment_is_top":false,"comment_ctime":1630980003,"is_pvip":false,"replies":[{"id":"113063","content":"写程序是避免不了访问github的，推荐你一种方法，叫做github加速。例如：<br>使用github的镜像网站<br><br>原地址：<br><br>https:&#47;&#47;github.com&#47;xxx.git<br><br>替换为：<br><br>https:&#47;&#47;github.com.cnpmjs.org&#47;xxx.git<br><br>","user_name":"作者回复","user_name_real":"尹会生","uid":"1056235","ctime":1631597966,"ip_address":"","comment_id":310909,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10220914595","product_id":100071001,"comment_content":"老师的文稿能否发到其他云空间供我们下载，GitHub被墙的概率太高了。","like_count":2,"discussions":[{"author":{"id":1056235,"avatar":"https://static001.geekbang.org/account/avatar/00/10/1d/eb/b2123759.jpg","nickname":"尹会生","note":"","ucode":"D1093DBD093617","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":526396,"discussion_content":"写程序是避免不了访问github的，推荐你一种方法，叫做github加速。例如：\n使用github的镜像网站\n\n原地址：\n\nhttps://github.com/xxx.git\n\n替换为：\n\nhttps://github.com.cnpmjs.org/xxx.git\n\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1631597966,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":346145,"user_name":"开元₂³³³³³³³","can_delete":false,"product_type":"c1","uid":1170155,"ip_address":"","ucode":"AB391580A9B051","user_header":"https://static001.geekbang.org/account/avatar/00/11/da/eb/0a356fdb.jpg","comment_is_top":false,"comment_ctime":1652856367,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5947823663","product_id":100071001,"comment_content":"老师，我用vscode编写，python-docx很多都没有代码提示，这是正常的吗？","like_count":1},{"had_liked":false,"id":319186,"user_name":"new","can_delete":false,"product_type":"c1","uid":2752840,"ip_address":"","ucode":"3C3BBD1065F97D","user_header":"","comment_is_top":false,"comment_ctime":1635663156,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5930630452","product_id":100071001,"comment_content":"说实话不是所有的小白都适合，如果对编程一点基础都没有的话不合适听，功能都找不全，还是要有点儿编程基础","like_count":1},{"had_liked":false,"id":360640,"user_name":"纳兰容若","can_delete":false,"product_type":"c1","uid":1605876,"ip_address":"黑龙江","ucode":"2E1EA2CDFDA1A9","user_header":"https://static001.geekbang.org/account/avatar/00/18/80/f4/564209ea.jpg","comment_is_top":false,"comment_ctime":1666706140,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1666706140","product_id":100071001,"comment_content":"老师您好 为什么提示我在docx.py中没有Document类 我是在windows下用的pycharm python3.10","like_count":0},{"had_liked":false,"id":359323,"user_name":"憨憨丶小完能","can_delete":false,"product_type":"c1","uid":3076318,"ip_address":"广东","ucode":"0A78EAC5EA889A","user_header":"https://static001.geekbang.org/account/avatar/00/2e/f0/de/fa161d6b.jpg","comment_is_top":false,"comment_ctime":1665413910,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1665413910","product_id":100071001,"comment_content":"老师这个其实是适合进阶的，零基础学起来是会有些困难的。联系先学一下简单的零基础课程再来学就更快一些","like_count":0},{"had_liked":false,"id":350934,"user_name":"陈小远","can_delete":false,"product_type":"c1","uid":2393550,"ip_address":"","ucode":"8C348A5FA8F539","user_header":"https://static001.geekbang.org/account/avatar/00/24/85/ce/df1c7a91.jpg","comment_is_top":false,"comment_ctime":1657360866,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1657360866","product_id":100071001,"comment_content":"老师，添加图片的写的比较简单了，我试了下添加图片，按照示例代码添加进图又太小了，设置长宽后又不太合适，始终达不到直接粘贴到word中的那种效果。所以想请教老师，实际编码过程中，如何设置添加图片的大小才能确保图片不过小或过大导致变形或显示不全等问题呢？","like_count":0},{"had_liked":false,"id":342219,"user_name":"骑行的掌柜J","can_delete":false,"product_type":"c1","uid":1474214,"ip_address":"","ucode":"3163102651C653","user_header":"https://static001.geekbang.org/account/avatar/00/16/7e/a6/4e331ef4.jpg","comment_is_top":false,"comment_ctime":1650108535,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1650108535","product_id":100071001,"comment_content":"还不错 感觉这课程对有Python基础的更友好😂","like_count":0},{"had_liked":false,"id":328089,"user_name":"Geek_bc0291","can_delete":false,"product_type":"c1","uid":2873069,"ip_address":"","ucode":"DF2C8ED3E9B0BD","user_header":"","comment_is_top":false,"comment_ctime":1640525604,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1640525604","product_id":100071001,"comment_content":"＃创建个目录<br>import os<br># word文件所在路径<br>word_files_path = &#39;&#47;Users&#47;edz&#47;Desktop&#47;效率专栏&#47;文章2&#47;word样例文件&#39;<br>if os.path.isdir(word_files_path):<br>    print(word_files_path)<br>else:<br>    os.makedirs(word_files_path)<br>    print(&quot;create dir ok&quot;)","like_count":0},{"had_liked":false,"id":325225,"user_name":"天国之影","can_delete":false,"product_type":"c1","uid":1252620,"ip_address":"","ucode":"FBCB451EF0BA23","user_header":"https://static001.geekbang.org/account/avatar/00/13/1d/0c/c438c5df.jpg","comment_is_top":false,"comment_ctime":1638869293,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1638869293","product_id":100071001,"comment_content":"如果发现文档保存在上一层目录，可将代码做如下修改：<br>file_name = PurePath(invitation_path, replace_content[&#39;&lt;姓名&gt;&#39;]).with_suffix(&#39;.docx&#39;)<br>修改原因：<br>由于使用了with_name()函数，导致修改了最后的文件路径，从而导致保存在上一层目录，按照上述修改，可保证文件路径和文件名连在一起。","like_count":0},{"had_liked":false,"id":320494,"user_name":"刘慧慧","can_delete":false,"product_type":"c1","uid":1475203,"ip_address":"","ucode":"67D6D0B7A97D06","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epNx7CCsqNO0qiavCXp2AQEU7ZIpL8aNpRr7ypmKPrf5MOia5rV5ibTLKrlMQxiafPoRLicOvfSicwukIbw/132","comment_is_top":false,"comment_ctime":1636353466,"is_pvip":false,"replies":[{"id":"117393","content":"我先来交代一下背景， Python是一种强类型的编程语言，也就是当某个变量(对象)是A类型，如果没有显示的改变，它在运行过程中一直是A类型，不是也不会变成B类型。<br><br>这里的list() 就是一个强制类型转换函数。它的作用是将list括号中的对象(变量名)的类型强制转换成为“列表类型”，而转换的原因是后面我们需要列表类型来对数据进行拆分。<br><br>因此如果去掉了list,后面代码逻辑处理的对象就是非列表类型，也就出现了无法拆分的类似错误。<br><br>更详细的内容可以参考Python基础数据类型<br>地址如下：<br>https:&#47;&#47;docs.python.org&#47;zh-cn&#47;3.6&#47;library&#47;stdtypes.html","user_name":"作者回复","user_name_real":"编辑","uid":"1056235","ctime":1637941102,"ip_address":"","comment_id":320494,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1636353466","product_id":100071001,"comment_content":"def merge_without_format(docx_files: list): 这个list整个代码未见使用定义在这里是干什么的？去掉这个list运行报<br>File &quot;&#47;Users&#47;hhliu&#47;Documents&#47;test&#47;autoWork&#47;day01&#47;mergeDoc.py&quot;, line 9, in merge_without_format<br>    another_doc = Document(docx_file)<br>  File &quot;&#47;Library&#47;Frameworks&#47;Python.framework&#47;Versions&#47;3.6&#47;lib&#47;python3.6&#47;site-packages&#47;docx&#47;api.py&quot;, line 25, in Document<br>    document_part = Package.open(docx).main_document_part<br>  File &quot;&#47;Library&#47;Frameworks&#47;Python.framework&#47;Versions&#47;3.6&#47;lib&#47;python3.6&#47;site-packages&#47;docx&#47;opc&#47;package.py&quot;, line 128, in open<br>    pkg_reader = PackageReader.from_file(pkg_file)<br>  File &quot;&#47;Library&#47;Frameworks&#47;Python.framework&#47;Versions&#47;3.6&#47;lib&#47;python3.6&#47;site-packages&#47;docx&#47;opc&#47;pkgreader.py&quot;, line 32, in from_file<br>    phys_reader = PhysPkgReader(pkg_file)<br>  File &quot;&#47;Library&#47;Frameworks&#47;Python.framework&#47;Versions&#47;3.6&#47;lib&#47;python3.6&#47;site-packages&#47;docx&#47;opc&#47;phys_pkg.py&quot;, line 31, in __new__<br>    &quot;Package not found at &#39;%s&#39;&quot; % pkg_file<br>docx.opc.exceptions.PackageNotFoundError: Package not found at &#39;c&#39;","like_count":0,"discussions":[{"author":{"id":1056235,"avatar":"https://static001.geekbang.org/account/avatar/00/10/1d/eb/b2123759.jpg","nickname":"尹会生","note":"","ucode":"D1093DBD093617","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":533742,"discussion_content":"我先来交代一下背景， Python是一种强类型的编程语言，也就是当某个变量(对象)是A类型，如果没有显示的改变，它在运行过程中一直是A类型，不是也不会变成B类型。\n\n这里的list() 就是一个强制类型转换函数。它的作用是将list括号中的对象(变量名)的类型强制转换成为“列表类型”，而转换的原因是后面我们需要列表类型来对数据进行拆分。\n\n因此如果去掉了list,后面代码逻辑处理的对象就是非列表类型，也就出现了无法拆分的类似错误。\n\n更详细的内容可以参考Python基础数据类型\n地址如下：\nhttps://docs.python.org/zh-cn/3.6/library/stdtypes.html","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1637941102,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":306376,"user_name":"Armstrong","can_delete":false,"product_type":"c1","uid":2147362,"ip_address":"","ucode":"092A112C608A8F","user_header":"https://static001.geekbang.org/account/avatar/00/20/c4/22/af245290.jpg","comment_is_top":false,"comment_ctime":1628519172,"is_pvip":false,"replies":[{"id":"112266","content":"doc对象的add_paragraph(&#39;&#39;)方法调用时，如果doc对象不存在肯定会报错的","user_name":"作者回复","user_name_real":"尹会生","uid":"1056235","ctime":1630386678,"ip_address":"","comment_id":306376,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1628519172","product_id":100071001,"comment_content":"merge_without_format函数里面newpar = doc.add_paragraph(&#39;&#39;) ......其中doc没有定义，是不是会报错？","like_count":0,"discussions":[{"author":{"id":1056235,"avatar":"https://static001.geekbang.org/account/avatar/00/10/1d/eb/b2123759.jpg","nickname":"尹会生","note":"","ucode":"D1093DBD093617","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":524735,"discussion_content":"doc对象的add_paragraph(&amp;#39;&amp;#39;)方法调用时，如果doc对象不存在肯定会报错的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1630386678,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":301166,"user_name":"nick","can_delete":false,"product_type":"c1","uid":1822696,"ip_address":"","ucode":"111BD559DEF65C","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTICFHlYKsSkvShSGCxiaLydzPs0Om5YhH3VKPBKkWGOytaYFiaaldyR49hG70xKSMRa1ZhzSP1DFffA/132","comment_is_top":false,"comment_ctime":1625559910,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1625559910","product_id":100071001,"comment_content":"邀请函那个代码能调通吗，其他两个调通了，是不是有什么问题","like_count":0,"discussions":[{"author":{"id":1098029,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c1/2d/9186e340.jpg","nickname":"程序员的冬天","note":"","ucode":"79CFC94CB1F92D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":382965,"discussion_content":"我用openpyxl调用excel是没问题的，他给的EXCEL格式其实是.xls，我另存为.xlxs后没问题","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1625812165,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":301161,"user_name":"紫薯酸牛奶","can_delete":false,"product_type":"c1","uid":2513884,"ip_address":"","ucode":"1A1FD75352C2D0","user_header":"https://static001.geekbang.org/account/avatar/00/26/5b/dc/4e872447.jpg","comment_is_top":false,"comment_ctime":1625558911,"is_pvip":false,"replies":[{"id":"109633","content":"首先我先回答第二个问题，PurePath(invitation_path).with_name(replace_content[&amp;#39;&amp;lt;姓名&amp;gt;&amp;#39;]).with_suffix(&amp;#39;.docx&amp;#39;) <br>为了书写好看，这条语句较长，我们可以将它按照如下方式拆开<br>x=a().b().c() 拆分成<br>x=a()<br>print(x)<br>y=x.b()<br>print(y)<br>z=y.c()<br>print(z)<br>根据每部分输出，相信你肯定能定位出路径问题出在哪个函数<br><br>接下来第一个问题也迎刃而解了，依然用print输出两个变量到终端，但是要注意，为了让代码更好调试，多个重复的文件和文字内容改成只有一个，即不改变代码里的for循环，但是因为内容只有一个，所以for循环只执行一次，这样整个程序就是自上到下顺序执行的了，这样便于你理解程序的工作原理，如果调试后还不理解我再直接提供答案给你<br><br><br><br><br><br><br><br><br>","user_name":"作者回复","user_name_real":"尹会生","uid":"1056235","ctime":1626490402,"ip_address":"","comment_id":301161,"utype":1}],"discussion_count":3,"race_medal":0,"score":"1625558911","product_id":100071001,"comment_content":"问题1：<br>replace_content = {<br>    &#39;&lt;姓名&gt;&#39; : &#39;no_name&#39;,<br>    &#39;&lt;性别&gt;&#39; : &#39;m_f&#39;,<br>    &#39;&lt;今天日期&gt;&#39; : today,<br>}<br><br>老师我想问下，制作邀请函中的<br>这个代码里面的no_name, 和m_f的含义是什么，<br>我自己想做个扩展练习，把邀请函模板里的酒店也批量替换掉，一直成功不了<br><br>问题2：<br>关于保存路径<br># 邀请函路径<br>invitation_path = &#39;测试文件&#47;邀请函样例文件&#47;111&#39;<br>下面保存生成的文件代码是这个<br>file_name = PurePath(invitation_path).with_name(replace_content[&#39;&lt;姓名&gt;&#39;]).with_suffix(&#39;.docx&#39;)<br>    doc.save(file_name)<br>为啥总是保存在上一级文件夹（邀请函示例文件）而不是111这个文件夹<br><br>烦请老师帮忙解答下","like_count":0,"discussions":[{"author":{"id":1056235,"avatar":"https://static001.geekbang.org/account/avatar/00/10/1d/eb/b2123759.jpg","nickname":"尹会生","note":"","ucode":"D1093DBD093617","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":522914,"discussion_content":"首先我先回答第二个问题，PurePath(invitation_path).with_name(replace_content[&amp;amp;#39;&amp;amp;lt;姓名&amp;amp;gt;&amp;amp;#39;]).with_suffix(&amp;amp;#39;.docx&amp;amp;#39;) \n为了书写好看，这条语句较长，我们可以将它按照如下方式拆开\nx=a().b().c() 拆分成\nx=a()\nprint(x)\ny=x.b()\nprint(y)\nz=y.c()\nprint(z)\n根据每部分输出，相信你肯定能定位出路径问题出在哪个函数\n\n接下来第一个问题也迎刃而解了，依然用print输出两个变量到终端，但是要注意，为了让代码更好调试，多个重复的文件和文字内容改成只有一个，即不改变代码里的for循环，但是因为内容只有一个，所以for循环只执行一次，这样整个程序就是自上到下顺序执行的了，这样便于你理解程序的工作原理，如果调试后还不理解我再直接提供答案给你\n\n\n\n\n\n\n\n\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1626490402,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1098029,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c1/2d/9186e340.jpg","nickname":"程序员的冬天","note":"","ucode":"79CFC94CB1F92D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":382963,"discussion_content":"那相当于一个初始值，给个空字符串也行，后面的代码，读取EXCEL内容后，替换成了EXCEL里面相关的用户名和性别，你看看","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1625812034,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1098029,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c1/2d/9186e340.jpg","nickname":"程序员的冬天","note":"","ucode":"79CFC94CB1F92D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":382964,"discussion_content":"问题2不用纠结，我估计是with_name把最后一级目录判断成了文件名了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1625812089,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":280967,"user_name":"cathy2052","can_delete":false,"product_type":"c1","uid":2438403,"ip_address":"","ucode":"72866BEAED43F1","user_header":"https://static001.geekbang.org/account/avatar/00/25/35/03/83a3d8e9.jpg","comment_is_top":false,"comment_ctime":1614505492,"is_pvip":false,"replies":[{"id":"102039","content":"line 13 SyntaxError: invalid syntax  结合上一条留言, 应该是wordfilespath 这一行定义变量的时候, 前面有空格,<br>Python解释器会将有缩进的行和上一行代码组成一个代码块, 而上面语句不是定义函数或者判断循环等代码块的语句,就会报错了 , 解决方法, 删掉13行 wordfilespath变量定义这一行开头的空格","user_name":"作者回复","user_name_real":"尹会生","uid":"1056235","ctime":1614573333,"ip_address":"","comment_id":280967,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1614505492","product_id":100071001,"comment_content":"在定义了合并函数后，想合并一个目录下所有文件<br>wordfilespath = &#39;C:&#47;Users&#47;82695&#47;办公自动化课程&#47;文章2代码&#47;word样例文件&#39;<br>p1=Path(wordfilespath)<br>merger_without_format(p1)<br><br> 执行后的错误：<br> File &quot;&lt;ipython-input-12-b09143b771a9&gt;&quot;, line 13<br>    wordfilespath = &#39;C:&#47;Users&#47;82695&#47;办公自动化课程&#47;文章2代码&#47;word样例文件&#39;<br>                ^<br>SyntaxError: invalid syntax","like_count":0,"discussions":[{"author":{"id":1056235,"avatar":"https://static001.geekbang.org/account/avatar/00/10/1d/eb/b2123759.jpg","nickname":"尹会生","note":"","ucode":"D1093DBD093617","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":516261,"discussion_content":"line 13 SyntaxError: invalid syntax  结合上一条留言, 应该是wordfilespath 这一行定义变量的时候, 前面有空格,\nPython解释器会将有缩进的行和上一行代码组成一个代码块, 而上面语句不是定义函数或者判断循环等代码块的语句,就会报错了 , 解决方法, 删掉13行 wordfilespath变量定义这一行开头的空格","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1614573333,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":280963,"user_name":"cathy2052","can_delete":false,"product_type":"c1","uid":2438403,"ip_address":"","ucode":"72866BEAED43F1","user_header":"https://static001.geekbang.org/account/avatar/00/25/35/03/83a3d8e9.jpg","comment_is_top":false,"comment_ctime":1614504419,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1614504419","product_id":100071001,"comment_content":"  File &quot;&lt;ipython-input-9-724ba4cc277c&gt;&quot;, line 10<br>    merger_without_format(&#39;C:&#47;Users&#47;82695&#47;办公自动化课程&#47;文章2代码&#47;word样例文件&#47;绩效考核管理制度1.docx&#39;,&#39;C:&#47;Users&#47;82695&#47;办公自动化课程&#47;文章2代码&#47;word样例文件&#47;绩效考核管理制度2.docx&#39;)<br>                        ^<br>SyntaxError: invalid syntax","like_count":0},{"had_liked":false,"id":280961,"user_name":"cathy2052","can_delete":false,"product_type":"c1","uid":2438403,"ip_address":"","ucode":"72866BEAED43F1","user_header":"https://static001.geekbang.org/account/avatar/00/25/35/03/83a3d8e9.jpg","comment_is_top":false,"comment_ctime":1614504382,"is_pvip":false,"replies":[{"id":"102038","content":"SyntaxError 是语法错误, 关注一下merger_without_format() 接收参数的时候, 参数能否支持2个参数,是否有全角的括号、逗号、引号等<br>还需要更具体的报错信息才能确定错误出现在第几行","user_name":"作者回复","user_name_real":"尹会生","uid":"1056235","ctime":1614573093,"ip_address":"","comment_id":280961,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1614504382","product_id":100071001,"comment_content":"merger_without_format(&#39;C:&#47;Users&#47;82695&#47;办公自动化课程&#47;文章2代码&#47;word样例文件&#47;绩效考核管理制度1.docx&#39;,&#39;C:&#47;Users&#47;82695&#47;办公自动化课程&#47;文章2代码&#47;word样例文件&#47;绩效考核管理制度2.docx&#39;)<br>SyntaxError: invalid syntax<br>调用函数时出错，看不出哪里错了","like_count":0,"discussions":[{"author":{"id":1056235,"avatar":"https://static001.geekbang.org/account/avatar/00/10/1d/eb/b2123759.jpg","nickname":"尹会生","note":"","ucode":"D1093DBD093617","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":516259,"discussion_content":"SyntaxError 是语法错误, 关注一下merger_without_format() 接收参数的时候, 参数能否支持2个参数,是否有全角的括号、逗号、引号等\n还需要更具体的报错信息才能确定错误出现在第几行","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1614573093,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":280064,"user_name":"鬼脸嘟嘟","can_delete":false,"product_type":"c1","uid":2438221,"ip_address":"","ucode":"6A9D4F58D6BA0F","user_header":"https://static001.geekbang.org/account/avatar/00/25/34/4d/d6eaa473.jpg","comment_is_top":false,"comment_ctime":1614068262,"is_pvip":false,"replies":[{"id":"101764","content":"需要注意一些, add_picture() 函数的第一个参数 &#39;test.jpg&#39;是否路径不对,导致添加失败, 在执行之后如果没有导入成功应该是有报错信息的, 可以知道test.jpg文件的完整路径来实现图片导入word","user_name":"作者回复","comment_id":280064,"uid":"1056235","ip_address":"","utype":1,"ctime":1614166029,"user_name_real":"尹会生"}],"discussion_count":1,"race_medal":0,"score":"1614068262","product_id":100071001,"comment_content":"老师，使用你提供的图片导入word的那窜代码，无法实现","like_count":0,"discussions":[{"author":{"id":1056235,"avatar":"https://static001.geekbang.org/account/avatar/00/10/1d/eb/b2123759.jpg","nickname":"尹会生","note":"","ucode":"D1093DBD093617","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":515972,"discussion_content":"需要注意一些, add_picture() 函数的第一个参数 &amp;#39;test.jpg&amp;#39;是否路径不对,导致添加失败, 在执行之后如果没有导入成功应该是有报错信息的, 可以知道test.jpg文件的完整路径来实现图片导入word","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1614166029,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":278953,"user_name":"Soul of the Dragon","can_delete":false,"product_type":"c1","uid":2438011,"ip_address":"","ucode":"21603099E51B8A","user_header":"https://static001.geekbang.org/account/avatar/00/25/33/7b/9e012181.jpg","comment_is_top":false,"comment_ctime":1613480644,"is_pvip":false,"replies":[{"id":"101458","content":"有具体的报错信息吗？","user_name":"作者回复","comment_id":278953,"uid":"1056235","ip_address":"","utype":1,"ctime":1613707580,"user_name_real":"尹会生"}],"discussion_count":1,"race_medal":0,"score":"1613480644","product_id":100071001,"comment_content":"老师，我用上述方法进行Excel与Word文档合并的时候，发现无法显示出日期信息，将其强制转化为字符串后，最终显示出的是日期的文本格式，而不是标准的日期格式，请问这个问题该如何解决呢？","like_count":0,"discussions":[{"author":{"id":1056235,"avatar":"https://static001.geekbang.org/account/avatar/00/10/1d/eb/b2123759.jpg","nickname":"尹会生","note":"","ucode":"D1093DBD093617","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":515574,"discussion_content":"有具体的报错信息吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1613707580,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]}]}