{"id":140520,"title":"21 | poll：另一种I/O多路复用","content":"<p>你好，我是盛延敏，这是网络编程实战第21讲，欢迎回来。</p><p>上一讲我们讲到了I/O多路复用技术，并以select为核心，展示了I/O多路复用技术的能力。select方法是多个UNIX平台支持的非常常见的I/O多路复用技术，它通过描述符集合来表示检测的I/O对象，通过三个不同的描述符集合来描述I/O事件 ：可读、可写和异常。但是select有一个缺点，那就是所支持的文件描述符的个数是有限的。在Linux系统中，select的默认最大值为1024。</p><p>那么有没有别的I/O多路复用技术可以突破文件描述符个数限制呢？当然有，这就是poll函数。这一讲，我们就来学习一下另一种I/O多路复用的技术：poll。</p><h2>poll函数介绍</h2><p>poll是除了select之外，另一种普遍使用的I/O多路复用技术，和select相比，它和内核交互的数据结构有所变化，另外，也突破了文件描述符的个数限制。</p><p>下面是poll函数的原型：</p><pre><code>int poll(struct pollfd *fds, unsigned long nfds, int timeout); \n　　　\n返回值：若有就绪描述符则为其数目，若超时则为0，若出错则为-1\n</code></pre><p>这个函数里面输入了三个参数，第一个参数是一个pollfd的数组。其中pollfd的结构如下：</p><pre><code>struct pollfd {\n    int    fd;       /* file descriptor */\n    short  events;   /* events to look for */\n    short  revents;  /* events returned */\n };\n</code></pre><p>这个结构体由三个部分组成，首先是描述符fd，然后是描述符上待检测的事件类型events，注意这里的events可以表示多个不同的事件，具体的实现可以通过使用二进制掩码位操作来完成，例如，POLLIN和POLLOUT可以表示读和写事件。</p><!-- [[[read_end]]] --><pre><code>#define    POLLIN    0x0001    /* any readable data available */\n#define    POLLPRI   0x0002    /* OOB/Urgent readable data */\n#define    POLLOUT   0x0004    /* file descriptor is writeable */\n</code></pre><p>和select非常不同的地方在于，poll每次检测之后的结果不会修改原来的传入值，而是将结果保留在revents字段中，这样就不需要每次检测完都得重置待检测的描述字和感兴趣的事件。我们可以把revents理解成“returned events”。</p><p>events类型的事件可以分为两大类。</p><p>第一类是可读事件，有以下几种：</p><pre><code>#define POLLIN     0x0001    /* any readable data available */\n#define POLLPRI    0x0002    /* OOB/Urgent readable data */\n#define POLLRDNORM 0x0040    /* non-OOB/URG data available */\n#define POLLRDBAND 0x0080    /* OOB/Urgent readable data */\n</code></pre><p>一般我们在程序里面有POLLIN即可。套接字可读事件和select的readset基本一致，是系统内核通知应用程序有数据可以读，通过read函数执行操作不会被阻塞。</p><p>第二类是可写事件，有以下几种：</p><pre><code>#define POLLOUT    0x0004    /* file descriptor is writeable */\n#define POLLWRNORM POLLOUT   /* no write type differentiation */\n#define POLLWRBAND 0x0100    /* OOB/Urgent data can be written */\n</code></pre><p>一般我们在程序里面统一使用POLLOUT。套接字可写事件和select的writeset基本一致，是系统内核通知套接字缓冲区已准备好，通过write函数执行写操作不会被阻塞。</p><p>以上两大类的事件都可以在“returned events”得到复用。还有另一大类事件，没有办法通过poll向系统内核递交检测请求，只能通过“returned events”来加以检测，这类事件是各种错误事件。</p><pre><code>#define POLLERR    0x0008    /* 一些错误发送 */\n#define POLLHUP    0x0010    /* 描述符挂起*/\n#define POLLNVAL   0x0020    /* 请求的事件无效*/\n</code></pre><p>我们再回过头看一下poll函数的原型。参数nfds描述的是数组fds的大小，简单说，就是向poll申请的事件检测的个数。</p><p>最后一个参数timeout，描述了poll的行为。</p><p>如果是一个&lt;0的数，表示在有事件发生之前永远等待；如果是0，表示不阻塞进程，立即返回；如果是一个&gt;0的数，表示poll调用方等待指定的毫秒数后返回。</p><p>关于返回值，当有错误发生时，poll函数的返回值为-1；如果在指定的时间到达之前没有任何事件发生，则返回0，否则就返回检测到的事件个数，也就是“returned events”中非0的描述符个数。</p><p>poll函数有一点非常好，如果我们<strong>不想对某个pollfd结构进行事件检测，</strong>可以把它对应的pollfd结构的fd成员设置成一个负值。这样，poll函数将忽略这样的events事件，检测完成以后，所对应的“returned events”的成员值也将设置为0。</p><p>和select函数对比一下，我们发现poll函数和select不一样的地方就是，在select里面，文件描述符的个数已经随着fd_set的实现而固定，没有办法对此进行配置；而在poll函数里，我们可以控制pollfd结构的数组大小，这意味着我们可以突破原来select函数最大描述符的限制，在这种情况下，应用程序调用者需要分配pollfd数组并通知poll函数该数组的大小。</p><h2>基于poll的服务器程序</h2><p>下面我们将开发一个基于poll的服务器程序。这个程序可以同时处理多个客户端连接，并且一旦有客户端数据接收后，同步地回显回去。这已经是一个颇具高并发处理的服务器原型了，再加上后面讲到的非阻塞I/O和多线程等技术，基本上就是可使用的准生产级别了。</p><p>所以，让我们打起精神，一起来看这个程序。</p><pre><code>#define INIT_SIZE 128\n\nint main(int argc, char **argv) {\n    int listen_fd, connected_fd;\n    int ready_number;\n    ssize_t n;\n    char buf[MAXLINE];\n    struct sockaddr_in client_addr;\n\n    listen_fd = tcp_server_listen(SERV_PORT);\n\n    //初始化pollfd数组，这个数组的第一个元素是listen_fd，其余的用来记录将要连接的connect_fd\n    struct pollfd event_set[INIT_SIZE];\n    event_set[0].fd = listen_fd;\n    event_set[0].events = POLLRDNORM;\n\n    // 用-1表示这个数组位置还没有被占用\n    int i;\n    for (i = 1; i &lt; INIT_SIZE; i++) {\n        event_set[i].fd = -1;\n    }\n\n    for (;;) {\n        if ((ready_number = poll(event_set, INIT_SIZE, -1)) &lt; 0) {\n            error(1, errno, &quot;poll failed &quot;);\n        }\n\n        if (event_set[0].revents &amp; POLLRDNORM) {\n            socklen_t client_len = sizeof(client_addr);\n            connected_fd = accept(listen_fd, (struct sockaddr *) &amp;client_addr, &amp;client_len);\n\n            //找到一个可以记录该连接套接字的位置\n            for (i = 1; i &lt; INIT_SIZE; i++) {\n                if (event_set[i].fd &lt; 0) {\n                    event_set[i].fd = connected_fd;\n                    event_set[i].events = POLLRDNORM;\n                    break;\n                }\n            }\n\n            if (i == INIT_SIZE) {\n                error(1, errno, &quot;can not hold so many clients&quot;);\n            }\n\n            if (--ready_number &lt;= 0)\n                continue;\n        }\n\n        for (i = 1; i &lt; INIT_SIZE; i++) {\n            int socket_fd;\n            if ((socket_fd = event_set[i].fd) &lt; 0)\n                continue;\n            if (event_set[i].revents &amp; (POLLRDNORM | POLLERR)) {\n                if ((n = read(socket_fd, buf, MAXLINE)) &gt; 0) {\n                    if (write(socket_fd, buf, n) &lt; 0) {\n                        error(1, errno, &quot;write error&quot;);\n                    }\n                } else if (n == 0 || errno == ECONNRESET) {\n                    close(socket_fd);\n                    event_set[i].fd = -1;\n                } else {\n                    error(1, errno, &quot;read error&quot;);\n                }\n\n                if (--ready_number &lt;= 0)\n                    break;\n            }\n        }\n    }\n}\n</code></pre><p>当然，一开始需要创建一个监听套接字，并绑定在本地的地址和端口上，这在第10行调用tcp_server_listen函数来完成。</p><p>在第13行，我初始化了一个pollfd数组，并命名为event_set，之所以叫这个名字，是引用pollfd数组确实代表了检测的事件集合。这里数组的大小固定为INIT_SIZE，这在实际的生产环境肯定是需要改进的。</p><p>我在前面讲过，监听套接字上如果有连接建立完成，也是可以通过 I/O事件复用来检测到的。在第14-15行，将监听套接字listen_fd和对应的POLLRDNORM事件加入到event_set里，表示我们期望系统内核检测监听套接字上的连接建立完成事件。</p><p>在前面介绍poll函数时，我们提到过，如果对应pollfd里的文件描述字fd为负数，poll函数将会忽略这个pollfd，所以我们在第18-21行将event_set数组里其他没有用到的fd统统设置为-1。这里-1也表示了当前pollfd没有被使用的意思。</p><p>下面我们的程序进入一个无限循环，在这个循环体内，第24行调用poll函数来进行事件检测。poll函数传入的参数为event_set数组，数组大小INIT_SIZE和-1。这里之所以传入INIT_SIZE，是因为poll函数已经能保证可以自动忽略fd为-1的pollfd，否则我们每次都需要计算一下event_size里真正需要被检测的元素大小；timeout设置为-1，表示在I/O事件发生之前poll调用一直阻塞。</p><p>如果系统内核检测到监听套接字上的连接建立事件，就进入到第28行的判断分支。我们看到，使用了如event_set[0].revent来和对应的事件类型进行位与操作，这个技巧大家一定要记住，这是因为event都是通过二进制位来进行记录的，位与操作是和对应的二进制位进行操作，一个文件描述字是可以对应到多个事件类型的。</p><p>在这个分支里，调用accept函数获取了连接描述字。接下来，33-38行做了一件事，就是把连接描述字connect_fd也加入到event_set里，而且说明了我们感兴趣的事件类型为POLLRDNORM，也就是套接字上有数据可以读。在这里，我们从数组里查找一个没有没占用的位置，也就是fd为-1的位置，然后把fd设置为新的连接套接字connect_fd。</p><p>如果在数组里找不到这样一个位置，说明我们的event_set已经被很多连接充满了，没有办法接收更多的连接了，这就是第41-42行所做的事情。</p><p>第45-46行是一个加速优化能力，因为poll返回的一个整数，说明了这次I/O事件描述符的个数，如果处理完监听套接字之后，就已经完成了这次I/O复用所要处理的事情，那么我们就可以跳过后面的处理，再次进入poll调用。</p><p>接下来的循环处理是查看event_set里面其他的事件，也就是已连接套接字的可读事件。这是通过遍历event_set数组来完成的。</p><p>如果数组里的pollfd的fd为-1，说明这个pollfd没有递交有效的检测，直接跳过；来到第53行，通过检测revents的事件类型是POLLRDNORM或者POLLERR，我们可以进行读操作。在第54行，读取数据正常之后，再通过write操作回显给客户端；在第58行，如果读到EOF或者是连接重置，则关闭这个连接，并且把event_set对应的pollfd重置；第61行读取数据失败。</p><p>和前面的优化加速处理一样，第65-66行是判断如果事件已经被完全处理完之后，直接跳过对event_set的循环处理，再次来到poll调用。</p><h2>实验</h2><p>我们启动这个服务器程序，然后通过telnet连接到这个服务器程序。为了检验这个服务器程序的I/O复用能力，我们可以多开几个telnet客户端，并且在屏幕上输入各种字符串。</p><p>客户端1：</p><pre><code>$telnet 127.0.0.1 43211\nTrying 127.0.0.1...\nConnected to 127.0.0.1.\nEscape character is '^]'.\na\na\naaaaaaaaaaa\naaaaaaaaaaa\nafafasfa\nafafasfa\nfbaa\nfbaa\n^]\n\n\ntelnet&gt; quit\nConnection closed.\n</code></pre><p>客户端2：</p><pre><code>telnet 127.0.0.1 43211\nTrying 127.0.0.1...\nConnected to 127.0.0.1.\nEscape character is '^]'.\nb\nb\nbbbbbbb\nbbbbbbb\nbbbbbbb\nbbbbbbb\n^]\n\n\ntelnet&gt; quit\nConnection closed.\n</code></pre><p>可以看到，这两个客户端互不影响，每个客户端输入的字符很快会被回显到客户端屏幕上。一个客户端断开连接，也不会影响到其他客户端。</p><h2>总结</h2><p>poll是另一种在各种UNIX系统上被广泛支持的I/O多路复用技术，虽然名声没有select那么响，能力一点不比select差，而且因为可以突破select文件描述符的个数限制，在高并发的场景下尤其占优势。这一讲我们编写了一个基于poll的服务器程序，希望你从中学会poll的用法。</p><h2>思考题</h2><p>和往常一样，给你留两道思考题：</p><p>第一道，在我们的程序里event_set数组的大小固定为INIT_SIZE，这在实际的生产环境肯定是需要改进的。你知道如何改进吗？</p><p>第二道，如果我们进行了改进，那么接下来把连接描述字connect_fd也加入到event_set里，如何配合进行改造呢？</p><p>欢迎你在评论区写下你的思考，也欢迎把这篇文章分享给你的朋友或者同事，一起交流一下。</p>","neighbors":{"left":{"article_title":"20 | 大名⿍⿍的select：看我如何同时感知多个I/O事件","id":138948},"right":{"article_title":"22 | 非阻塞I/O：提升性能的加速器","id":141573}},"comments":[{"had_liked":false,"id":151610,"user_name":"夏目","can_delete":false,"product_type":"c1","uid":1212750,"ip_address":"","ucode":"67C075A01CF4D2","user_header":"https://static001.geekbang.org/account/avatar/00/12/81/4e/d71092f4.jpg","comment_is_top":false,"comment_ctime":1573749594,"is_pvip":false,"replies":[{"id":"58556","content":"两者只是编程接口的区别，从内核实现角度来讲，其实本质实现是差不多的，poll客服了select有限文件描述字的缺陷，适用的范围更广一些。","user_name":"作者回复","comment_id":151610,"uid":"1618647","ip_address":"","utype":1,"ctime":1573991747,"user_name_real":"froghui"}],"discussion_count":5,"race_medal":0,"score":"104652964698","product_id":100032701,"comment_content":"老师，我还是没明白poll和select的本质区别是什么，能否指点一下","like_count":24,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":474554,"discussion_content":"两者只是编程接口的区别，从内核实现角度来讲，其实本质实现是差不多的，poll客服了select有限文件描述字的缺陷，适用的范围更广一些。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573991747,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":1,"child_discussions":[{"author":{"id":1715909,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/2e/c5/231114ed.jpg","nickname":"Hadesu","note":"","ucode":"48D6B656D6FF70","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":580171,"discussion_content":"“poll客服了select”的“客服”应该改为“克服”","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1657952135,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":474554,"ip_address":""},"score":580171,"extra":""}]},{"author":{"id":2123892,"avatar":"https://static001.geekbang.org/account/avatar/00/20/68/74/aea478ba.jpg","nickname":"我是管小亮","note":"","ucode":"A1C624CF9E1CA3","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":299412,"discussion_content":"最大区别是底层吧，select是文件描述符，poll是线性表","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1597675617,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1848474,"avatar":"https://static001.geekbang.org/account/avatar/00/1c/34/9a/1587bc6f.jpg","nickname":"JDY","note":"","ucode":"4B6F55332BE6DC","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":218736,"discussion_content":"最大区别在select可以被连接的数量在这个函数设计时候已经定了，为128，但是在实际生产环境中，这个根本无法满足高并发的场景，所以函数分装的时候专门设计了一个存放文件描述符的数组，我们可以通过宏定义来设置这个数组的大小，完了就可以控制这个并发的数量了。好像就是这样。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585674394,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1959482,"avatar":"https://static001.geekbang.org/account/avatar/00/1d/e6/3a/382cf024.jpg","nickname":"rongyefeng","note":"","ucode":"9A15D947E9D645","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1848474,"avatar":"https://static001.geekbang.org/account/avatar/00/1c/34/9a/1587bc6f.jpg","nickname":"JDY","note":"","ucode":"4B6F55332BE6DC","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":269728,"discussion_content":"不是1024吗","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1589942553,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":218736,"ip_address":""},"score":269728,"extra":""}]}]},{"had_liked":false,"id":136111,"user_name":"徐凯","can_delete":false,"product_type":"c1","uid":1244991,"ip_address":"","ucode":"12F82BA3649CD5","user_header":"https://static001.geekbang.org/account/avatar/00/12/ff/3f/bbb8a88c.jpg","comment_is_top":false,"comment_ctime":1569369264,"is_pvip":false,"replies":[{"id":"52210","content":"鼓励动手来一个。","user_name":"作者回复","comment_id":136111,"uid":"1618647","ip_address":"","utype":1,"ctime":1569408383,"user_name_real":"froghui"}],"discussion_count":1,"race_medal":0,"score":"83173747888","product_id":100032701,"comment_content":"1.采用动态分配数组的方式<br>2.如果内存不够 进行realloc 或者申请一块更大的内存 然后把源数组拷贝过来","like_count":20,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":468466,"discussion_content":"鼓励动手来一个。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1569408383,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":144166,"user_name":"阿卡牛","can_delete":false,"product_type":"c1","uid":1022247,"ip_address":"","ucode":"0BC43A904C3199","user_header":"https://static001.geekbang.org/account/avatar/00/0f/99/27/47aa9dea.jpg","comment_is_top":false,"comment_ctime":1571874289,"is_pvip":false,"replies":[{"id":"56602","content":"让内核在描述符就绪时发送SIGIO信号通知我们，这种模型为信号驱动式I&#47;O（signal-driven I&#47;O)，说实话，这个模型在实战中用的是比较少的，作为一个知识点知道就可以了。<br>","user_name":"作者回复","comment_id":144166,"uid":"1618647","ip_address":"","utype":1,"ctime":1572573202,"user_name_real":"froghui"}],"discussion_count":1,"race_medal":0,"score":"44521547249","product_id":100032701,"comment_content":"还有种信号驱动型I&#47;O，老师可以讲解吗","like_count":10,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":471830,"discussion_content":"让内核在描述符就绪时发送SIGIO信号通知我们，这种模型为信号驱动式I/O（signal-driven I/O)，说实话，这个模型在实战中用的是比较少的，作为一个知识点知道就可以了。\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1572573202,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":136502,"user_name":"Hale","can_delete":false,"product_type":"c1","uid":1129731,"ip_address":"","ucode":"1925955343FE94","user_header":"https://static001.geekbang.org/account/avatar/00/11/3d/03/b2d9a084.jpg","comment_is_top":false,"comment_ctime":1569460984,"is_pvip":true,"replies":[{"id":"52318","content":"POLLIN包括了OOB等带外数据的检测，POLLRDNORM则不包括这部分。<br><br>#define\tPOLLIN\t\t0x0001\t\t&#47;* any readable data available *&#47;<br>#define\tPOLLRDNORM\t0x0040\t\t&#47;* non-OOB&#47;URG data available *&#47;<br>","user_name":"作者回复","comment_id":136502,"uid":"1618647","ip_address":"","utype":1,"ctime":1569463374,"user_name_real":"froghui"}],"discussion_count":4,"race_medal":0,"score":"40224166648","product_id":100032701,"comment_content":"能讲讲为什么不用POLLIN来判断套接字可读？","like_count":9,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":468671,"discussion_content":"POLLIN包括了OOB等带外数据的检测，POLLRDNORM则不包括这部分。\n\n#define\tPOLLIN\t\t0x0001\t\t/* any readable data available */\n#define\tPOLLRDNORM\t0x0040\t\t/* non-OOB/URG data available */\n","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1569463374,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1433393,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/vC6MNPgQFMzM4sibGOdzwp519ohulUu5yjDvGQ45rW65ujh9z9dPckWRdXQIs39EffT8pRo3ibs5ax8njzqLAG0w/132","nickname":"王交春","note":"","ucode":"F9839D8B303074","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":285827,"discussion_content":"网络中带外数据具体是指什么？","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1592964230,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":2622364,"avatar":"https://static001.geekbang.org/account/avatar/00/28/03/9c/5a0b8825.jpg","nickname":"Bin Watson","note":"","ucode":"33E3487896E859","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1433393,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/vC6MNPgQFMzM4sibGOdzwp519ohulUu5yjDvGQ45rW65ujh9z9dPckWRdXQIs39EffT8pRo3ibs5ax8njzqLAG0w/132","nickname":"王交春","note":"","ucode":"F9839D8B303074","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":545042,"discussion_content":"带外数据 (Out of Band, OOB) 传输层 协议使用带外数据来发送一些重要的数据，如果通信一方有重要的数据需要通知对方时， 协议 能够将这些数据快速地发送到对方。 为了发送这些数据,协议一般不使用与普通数据相同的通道,而是使用另外的通道. linux系统 的 套接字 机制支持低层协议发送和接受带外数据.但是 TCP协议 没有真正意义上的带外数据.为了发送重要协议, TCP 提供了一种称为紧急模式 (urgent mode)的机制.TCP协议在 数据段 中设置URG位,表示进入紧急模式.接收方可以对紧急模式采取特殊的处理.很容易看出来,这种方式数据不容易被阻塞,可以通过在我们的服务器端程序里面捕捉SIGURG信号来及时接受数据或者使用带OOB标志的recv函数来接受。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1641812439,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":285827,"ip_address":""},"score":545042,"extra":""}]},{"author":{"id":2622364,"avatar":"https://static001.geekbang.org/account/avatar/00/28/03/9c/5a0b8825.jpg","nickname":"Bin Watson","note":"","ucode":"33E3487896E859","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":545041,"discussion_content":"我查了一下Liunx的man poll\n\n里面是这样描述的：\n       POLLRDNORM\n              Equivalent to POLLIN.\n\n       POLLRDBAND\n              Priority band data can be read (generally unused on Linux).\n\n       POLLWRNORM\n              Equivalent to POLLOUT.\n\n       POLLWRBAND\n              Priority data may be written.\n\n       Linux also knows about, but does not use POLLMSG.\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1641812342,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":136337,"user_name":"D","can_delete":false,"product_type":"c1","uid":1027596,"ip_address":"","ucode":"5BB4D16FE39BFF","user_header":"https://static001.geekbang.org/account/avatar/00/0f/ae/0c/f39f847a.jpg","comment_is_top":false,"comment_ctime":1569411904,"is_pvip":false,"replies":[{"id":"52319","content":"好问题，我收集一下素材。","user_name":"作者回复","comment_id":136337,"uid":"1618647","ip_address":"","utype":1,"ctime":1569463429,"user_name_real":"froghui"}],"discussion_count":3,"race_medal":0,"score":"35929150272","product_id":100032701,"comment_content":"老师可否简单讲下底层实现，比如底层是数组，队列，红黑树等。","like_count":9,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":468579,"discussion_content":"好问题，我收集一下素材。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1569463429,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1236766,"avatar":"https://static001.geekbang.org/account/avatar/00/12/df/1e/cea897e8.jpg","nickname":"传说中的成大大","note":"","ucode":"103543D6E706BF","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":23488,"discussion_content":"应该是位图吧","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1569825721,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1027596,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/ae/0c/f39f847a.jpg","nickname":"D","note":"","ucode":"5BB4D16FE39BFF","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1236766,"avatar":"https://static001.geekbang.org/account/avatar/00/12/df/1e/cea897e8.jpg","nickname":"传说中的成大大","note":"","ucode":"103543D6E706BF","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":23561,"discussion_content":"位图底层是数组吧","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1569834241,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":23488,"ip_address":""},"score":23561,"extra":""}]}]},{"had_liked":false,"id":241223,"user_name":"fedwing","can_delete":false,"product_type":"c1","uid":1743661,"ip_address":"","ucode":"2DFF902FD190C7","user_header":"https://static001.geekbang.org/account/avatar/00/1a/9b/2d/f7fca208.jpg","comment_is_top":false,"comment_ctime":1597218881,"is_pvip":false,"replies":[{"id":"89404","content":"是的。","user_name":"作者回复","comment_id":241223,"uid":"1618647","ip_address":"","utype":1,"ctime":1597641328,"user_name_real":"froghui"}],"discussion_count":2,"race_medal":0,"score":"23072055361","product_id":100032701,"comment_content":"老师，请教个问题，我看ready_number在29行的if里如果有会--，后面read for循环里，如果处理也--，我是不是可以这样理解，events_set[0]表示listen的套接字，这个套接字里如果有pollin，那么肯定是新连接（而不是普通套接字的读数据），所以这时就是获取对应的连接的文件描述符，将其加入到event_set数组里，用于后续poll的时候，多检测一个文件描述符，如果ready_number在前面的处理--后，还大于0，则表示events_set里其他的文件描述符也有待检测的事件触发，这些就是常规的双端连接对应的套接字，它们pollin的话，就是我们常规意义里的read数据了。","like_count":5,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":503678,"discussion_content":"是的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1597641328,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1245504,"avatar":"https://static001.geekbang.org/account/avatar/00/13/01/40/a203a3b9.jpg","nickname":"爱学习不害怕","note":"","ucode":"BE325C02E4C92F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":298426,"discussion_content":"我理解和你差不多，完成一个事件ready_num-1，减到小于等于0说明没有待处理的事件了。那么后面的循环等操作不用再继续，可以从头再开始检测","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1597296659,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":160988,"user_name":"Geek_68d3d2","can_delete":false,"product_type":"c1","uid":1674369,"ip_address":"","ucode":"EBD6D881AA7A74","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eqf54z1ZmqQY1kmJ6t1HAnrqMM3j6WKf0oDeVLhtnA2ZUKY6AX9MK6RjvcO8SiczXy3uU0IzBQ3tpw/132","comment_is_top":false,"comment_ctime":1576073945,"is_pvip":false,"replies":[{"id":"63935","content":"Linux下&quot;man xxx&quot;，windows下看MSDN，当然，有一些常见的是要记下来的。","user_name":"作者回复","comment_id":160988,"uid":"1618647","ip_address":"","utype":1,"ctime":1577605498,"user_name_real":"froghui"}],"discussion_count":1,"race_medal":0,"score":"18755943129","product_id":100032701,"comment_content":"老师我看网络编程里面使用了各种函数，函数里面各种参数，您那里有没有什么文档参考手册啥的可供我们需要时翻阅，光靠脑子记，记不来啊。您平常都是怎么写代码啊，这些函数都是背下来了吗。","like_count":4,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":477559,"discussion_content":"Linux下&amp;quot;man xxx&amp;quot;，windows下看MSDN，当然，有一些常见的是要记下来的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577605498,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":238544,"user_name":"Simple life","can_delete":false,"product_type":"c1","uid":1571460,"ip_address":"","ucode":"1902D7F72FB43F","user_header":"https://static001.geekbang.org/account/avatar/00/17/fa/84/f01d203a.jpg","comment_is_top":false,"comment_ctime":1596193246,"is_pvip":false,"replies":[{"id":"89341","content":"因为我们在同时处理多个I&#47;O，一旦一个fd经过accept处理后加入event_set，之后就可以通过一个poll调用来获取多个不同的fd来加以处理。这是event_set的意义。","user_name":"作者回复","comment_id":238544,"uid":"1618647","ip_address":"","utype":1,"ctime":1597585435,"user_name_real":"froghui"}],"discussion_count":3,"race_medal":0,"score":"14481095134","product_id":100032701,"comment_content":"我搞不懂，accept后的fd要加入event_set，然后再遍历取出，直接拿来读写不行吗？","like_count":3,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":502780,"discussion_content":"因为我们在同时处理多个I/O，一旦一个fd经过accept处理后加入event_set，之后就可以通过一个poll调用来获取多个不同的fd来加以处理。这是event_set的意义。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1597585435,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1245504,"avatar":"https://static001.geekbang.org/account/avatar/00/13/01/40/a203a3b9.jpg","nickname":"爱学习不害怕","note":"","ucode":"BE325C02E4C92F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":298423,"discussion_content":"我理解这样可以维护多个连接状态","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1597296368,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":2123892,"avatar":"https://static001.geekbang.org/account/avatar/00/20/68/74/aea478ba.jpg","nickname":"我是管小亮","note":"","ucode":"A1C624CF9E1CA3","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1245504,"avatar":"https://static001.geekbang.org/account/avatar/00/13/01/40/a203a3b9.jpg","nickname":"爱学习不害怕","note":"","ucode":"BE325C02E4C92F","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":299413,"discussion_content":"对，应该是为了统一管理","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1597676032,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":298423,"ip_address":""},"score":299413,"extra":""}]}]},{"had_liked":false,"id":184697,"user_name":"Tesla","can_delete":false,"product_type":"c1","uid":1500742,"ip_address":"","ucode":"98629AFD9861EE","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKUcSLVV6ia3dibe7qvTu8Vic1PVs2EibxoUdx930MC7j2Q9A6s4eibMDZlcicMFY0D0icd3RrDorMChu0zw/132","comment_is_top":false,"comment_ctime":1583384213,"is_pvip":false,"replies":[{"id":"71702","content":"这个设计很合理，一个是输入参数，一个是输出参数，只不多在同一个结构体内。如果只有一个参数，既是输入，也是输出，反到有点奇怪。","user_name":"作者回复","comment_id":184697,"uid":"1618647","ip_address":"","utype":1,"ctime":1583657617,"user_name_real":"froghui"}],"discussion_count":1,"race_medal":0,"score":"10173318805","product_id":100032701,"comment_content":"老师 poll不改变传入检测的event的状态，而是返回revent，是出于什么目的呢？","like_count":2,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":486099,"discussion_content":"这个设计很合理，一个是输入参数，一个是输出参数，只不多在同一个结构体内。如果只有一个参数，既是输入，也是输出，反到有点奇怪。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1583657617,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":137704,"user_name":"传说中的成大大","can_delete":false,"product_type":"c1","uid":1236766,"ip_address":"","ucode":"103543D6E706BF","user_header":"https://static001.geekbang.org/account/avatar/00/12/df/1e/cea897e8.jpg","comment_is_top":false,"comment_ctime":1569826076,"is_pvip":false,"replies":[{"id":"53873","content":"poll也是每次向内核注册了一个描述符集合，做法没有区别。你看到的这段代码，就是新增的描述符<br><br>    &#47;&#47;找到一个可以记录该连接套接字的位置<br>            for (i = 1; i &lt; INIT_SIZE; i++) {<br>                if (event_set[i].fd &lt; 0) {<br>                    event_set[i].fd = connected_fd;<br>                    event_set[i].events = POLLRDNORM;<br>                    break;<br>                }<br>            }","user_name":"作者回复","comment_id":137704,"uid":"1618647","ip_address":"","utype":1,"ctime":1570699539,"user_name_real":"froghui"}],"discussion_count":1,"race_medal":0,"score":"10159760668","product_id":100032701,"comment_content":"第一问: 我觉得需要改进的原因在于他是一个固定死了的值,而很多时候我们都要考虑到扩容的问题,所以可以把所有的描述符push_back到一个vector等类似的容器当中,直接对容器取size就可以获得数量<br>第二问:把新连接上来的connfd添加进去,对上面问题的容器进行一次取size操作就行了<br>通过前面两个问题 我产生了第三个问题<br>我们都知道select 每次循环都需要向内核重新注册一次需要关心的描述符, 在Poll当中他是怎么处理的呢？也是每次都要注册一次吗？新增了描述放到集合当中肯定也需要通知内核啊 ！","like_count":2,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":469220,"discussion_content":"poll也是每次向内核注册了一个描述符集合，做法没有区别。你看到的这段代码，就是新增的描述符\n\n    //找到一个可以记录该连接套接字的位置\n            for (i = 1; i &amp;lt; INIT_SIZE; i++) {\n                if (event_set[i].fd &amp;lt; 0) {\n                    event_set[i].fd = connected_fd;\n                    event_set[i].events = POLLRDNORM;\n                    break;\n                }\n            }","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1570699539,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":136109,"user_name":"LDxy","can_delete":false,"product_type":"c1","uid":1188710,"ip_address":"","ucode":"956432CE7B7761","user_header":"https://static001.geekbang.org/account/avatar/00/12/23/66/413c0bb5.jpg","comment_is_top":false,"comment_ctime":1569369090,"is_pvip":false,"replies":[{"id":"52211","content":"#define\tPOLLRDNORM\t0x0040\t\t&#47;* non-OOB&#47;URG data available *&#47;<br>#define\tPOLLIN\t\t0x0001\t\t&#47;* any readable data available *&#47;<br>","user_name":"作者回复","comment_id":136109,"uid":"1618647","ip_address":"","utype":1,"ctime":1569408422,"user_name_real":"froghui"}],"discussion_count":1,"race_medal":0,"score":"10159303682","product_id":100032701,"comment_content":"为什么程序里使用POLLRDNORM而不是POLLIN呢？这两者又何不同？","like_count":2,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":468464,"discussion_content":"#define\tPOLLRDNORM\t0x0040\t\t/* non-OOB/URG data available */\n#define\tPOLLIN\t\t0x0001\t\t/* any readable data available */\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1569408422,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":231667,"user_name":"郑祖煌","can_delete":false,"product_type":"c1","uid":1469608,"ip_address":"","ucode":"49A0D2E3279826","user_header":"https://static001.geekbang.org/account/avatar/00/16/6c/a8/1922a0f5.jpg","comment_is_top":false,"comment_ctime":1593744841,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5888712137","product_id":100032701,"comment_content":"1)第一道，可以用vector存储所有的连接描述符，然后当需要调用poll的时候，再用vector.size获取数组的大小，然后再创建出fd_set tmp[vector.size]存储所有需要的fd，将他传入到poll函数中。<br><br>","like_count":1},{"had_liked":false,"id":175738,"user_name":"panda","can_delete":false,"product_type":"c1","uid":1263797,"ip_address":"","ucode":"1CA1C732020F10","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIcxz0quUK7Q06aNC3qglvvpTQKOanK3suG0qQkK00Q815zF5oiad1wABibCkm8Lk18LmX8UQoUMS5Q/132","comment_is_top":false,"comment_ctime":1580814685,"is_pvip":false,"replies":[{"id":"71013","content":"是这样的，当你写一个服务端程序，需要监听超过1024个客户端连接时，就会超过这个限制。客户端是没有问题的。","user_name":"作者回复","comment_id":175738,"uid":"1618647","ip_address":"","utype":1,"ctime":1583050156,"user_name_real":"froghui"}],"discussion_count":1,"race_medal":0,"score":"5875781981","product_id":100032701,"comment_content":"老师，什么情况下会使套接字数目多余select数目呢，我所理解的是一般服务端对一个套接字就会开一个线程，客户端一个进程也不会创建出很多套接字，感觉都不会导致数量过多的情况，求指点","like_count":1,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":482879,"discussion_content":"是这样的，当你写一个服务端程序，需要监听超过1024个客户端连接时，就会超过这个限制。客户端是没有问题的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1583050156,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":172295,"user_name":"JJj","can_delete":false,"product_type":"c1","uid":1196463,"ip_address":"","ucode":"EA53F2CEAFCFF1","user_header":"https://static001.geekbang.org/account/avatar/00/12/41/af/4307867a.jpg","comment_is_top":false,"comment_ctime":1579145845,"is_pvip":false,"replies":[{"id":"68043","content":"你这样理解倒也是可以的。一个描述字可以对应三种不同的事件。","user_name":"作者回复","comment_id":172295,"uid":"1618647","ip_address":"","utype":1,"ctime":1580624426,"user_name_real":"froghui"}],"discussion_count":1,"race_medal":0,"score":"5874113141","product_id":100032701,"comment_content":"请问下，如果select同时关注可读、可写、异常。那是不是最多支持关注3*1024个IO事件","like_count":1,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":481689,"discussion_content":"你这样理解倒也是可以的。一个描述字可以对应三种不同的事件。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1580624426,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":137738,"user_name":"传说中的成大大","can_delete":false,"product_type":"c1","uid":1236766,"ip_address":"","ucode":"103543D6E706BF","user_header":"https://static001.geekbang.org/account/avatar/00/12/df/1e/cea897e8.jpg","comment_is_top":false,"comment_ctime":1569833820,"is_pvip":false,"replies":[{"id":"54281","content":"区别是编程的接口不一样，原理基本一致，但是select一般来说有文件句柄的现在，poll则没有。我觉得你可以看代码体会一下。","user_name":"作者回复","comment_id":137738,"uid":"1618647","ip_address":"","utype":1,"ctime":1570966213,"user_name_real":"froghui"}],"discussion_count":1,"race_medal":0,"score":"5864801116","product_id":100032701,"comment_content":"我还是不太明白select和poll进行事件注册的区别,希望老师再给我指点指点","like_count":1,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":469238,"discussion_content":"区别是编程的接口不一样，原理基本一致，但是select一般来说有文件句柄的现在，poll则没有。我觉得你可以看代码体会一下。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1570966213,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":137178,"user_name":"Jimmy Xiong","can_delete":false,"product_type":"c1","uid":1335606,"ip_address":"","ucode":"CB0A7BE8D030C2","user_header":"https://static001.geekbang.org/account/avatar/00/14/61/36/7a28f544.jpg","comment_is_top":false,"comment_ctime":1569640469,"is_pvip":false,"replies":[{"id":"52777","content":"https:&#47;&#47;github.com&#47;froghui&#47;yolanda","user_name":"作者回复","comment_id":137178,"uid":"1618647","ip_address":"","utype":1,"ctime":1569723529,"user_name_real":"froghui"}],"discussion_count":1,"race_medal":0,"score":"5864607765","product_id":100032701,"comment_content":"请问老师，例子的全代码（可以直接运行起来）哪里可以找得到？","like_count":1,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":468972,"discussion_content":"https://github.com/froghui/yolanda","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1569723529,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":336634,"user_name":"pippin","can_delete":false,"product_type":"c1","uid":1784022,"ip_address":"","ucode":"F7619FCE24D481","user_header":"","comment_is_top":false,"comment_ctime":1646268749,"is_pvip":false,"replies":[{"id":"123121","content":"在Linux系统里，所有都是文件，所以套接字也是文件描述符。当然，文件描述符，也可以有别的，比如说文件、目录等。","user_name":"作者回复","comment_id":336634,"uid":"1618647","ip_address":"","utype":1,"ctime":1646487110,"user_name_real":"编辑"}],"discussion_count":1,"race_medal":0,"score":"1646268749","product_id":100032701,"comment_content":"套接字和文件描述符有什么区别<br>","like_count":0,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":554605,"discussion_content":"在Linux系统里，所有都是文件，所以套接字也是文件描述符。当然，文件描述符，也可以有别的，比如说文件、目录等。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1646487110,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":325639,"user_name":"菜鸡互啄","can_delete":false,"product_type":"c1","uid":2765079,"ip_address":"","ucode":"59162B81398399","user_header":"https://static001.geekbang.org/account/avatar/00/2a/31/17/ab2c27a6.jpg","comment_is_top":false,"comment_ctime":1639056032,"is_pvip":false,"replies":[{"id":"118235","content":"因为listen_fd是监听套接字。","user_name":"作者回复","comment_id":325639,"uid":"1618647","ip_address":"","utype":1,"ctime":1639295457,"user_name_real":"编辑"}],"discussion_count":1,"race_medal":0,"score":"1639056032","product_id":100032701,"comment_content":"老师 28行不是太明白 如果listen_fd有可读事件 为什么说明有连接要accept了？","like_count":1,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":537999,"discussion_content":"因为listen_fd是监听套接字。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1639295457,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":323718,"user_name":"你已经长大了，别皮","can_delete":false,"product_type":"c1","uid":2671990,"ip_address":"","ucode":"04DD2F0419C4B9","user_header":"https://static001.geekbang.org/account/avatar/00/28/c5/76/f7c24b63.jpg","comment_is_top":false,"comment_ctime":1638114103,"is_pvip":false,"replies":[{"id":"117837","content":"等待下一次poll。","user_name":"作者回复","comment_id":323718,"uid":"1618647","ip_address":"","utype":1,"ctime":1638691817,"user_name_real":"编辑"}],"discussion_count":1,"race_medal":0,"score":"1638114103","product_id":100032701,"comment_content":"老师服务器程序在49-68处理连接事件时，此时如果有新连接来，ready_number是否会++，这样是否会死循环？还是内核会存储起来，等待下一次poll时再往上报？","like_count":0,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":536111,"discussion_content":"等待下一次poll。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1638691817,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":322580,"user_name":"huadanian","can_delete":false,"product_type":"c1","uid":1014061,"ip_address":"","ucode":"A986E1DB777428","user_header":"https://static001.geekbang.org/account/avatar/00/0f/79/2d/dbb5570f.jpg","comment_is_top":false,"comment_ctime":1637487136,"is_pvip":false,"replies":[{"id":"117471","content":"不需要。每次poll之后，revents的值都是全新从内核拷贝到用户空间的。但是如果这个连接已经close了，需要把对应的fd置为-1。","user_name":"作者回复","comment_id":322580,"uid":"1618647","ip_address":"","utype":1,"ctime":1638088824,"user_name_real":"编辑"}],"discussion_count":1,"race_medal":0,"score":"1637487136","product_id":100032701,"comment_content":"请问一下老师，上面代码第53行用于判断的revents的值，在第54行的read之后，是否需要清除掉，否则之后的循环会不会重复判断这个revents的值？？","like_count":0,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":534077,"discussion_content":"不需要。每次poll之后，revents的值都是全新从内核拷贝到用户空间的。但是如果这个连接已经close了，需要把对应的fd置为-1。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1638088824,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":321017,"user_name":"王蓬勃","can_delete":false,"product_type":"c1","uid":2450040,"ip_address":"","ucode":"DDF4CCE9728DCF","user_header":"","comment_is_top":false,"comment_ctime":1636620360,"is_pvip":false,"replies":[{"id":"116706","content":"当然不是，这个返回的实际上是同时连接数目，因为在我们的程序里面，每次都是一个客户端连接上服务端，所以总是返回1.","user_name":"作者回复","user_name_real":"froghui","uid":"1618647","ctime":1636874079,"ip_address":"","comment_id":321017,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1636620360","product_id":100032701,"comment_content":"老师，为什么ready_number 的返回值一直都是1， 模拟了客户端一个个登录每次返回的都是1。<br>它只会返回1吗？","like_count":0,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":530186,"discussion_content":"当然不是，这个返回的实际上是同时连接数目，因为在我们的程序里面，每次都是一个客户端连接上服务端，所以总是返回1.","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1636874079,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":316835,"user_name":"lwenbin","can_delete":false,"product_type":"c1","uid":1202109,"ip_address":"","ucode":"05C4CC6BE0B56C","user_header":"https://static001.geekbang.org/account/avatar/00/12/57/bd/acf40fa0.jpg","comment_is_top":false,"comment_ctime":1634562727,"is_pvip":false,"replies":[{"id":"115259","content":"从accept函数来看，每次返回的是当前connection id，所以，需要循环处理10个client连接。","user_name":"作者回复","user_name_real":"froghui","uid":"1618647","ctime":1635126909,"ip_address":"","comment_id":316835,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1634562727","product_id":100032701,"comment_content":"老师<br>能否问一下对于 accept，每次只能处理一个吗？比如同时有100个client连接过来等待 accept，需要多次循环才能处理完吗？","like_count":0,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":528529,"discussion_content":"从accept函数来看，每次返回的是当前connection id，所以，需要循环处理10个client连接。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1635126909,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1616970,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/2UXuSevhia94o9Eky4OfMuSictaldxcqpjGuvRCOcvjIIoVBAENLEZbv2lgwmwC8icK1ZrUcneNtiaeFBV8MT3uzNg/132","nickname":"Gavin","note":"","ucode":"A5735665E303FD","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":585287,"discussion_content":"代码没有循环处理10个client连接呀，处理一个就返回重新poll了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1661441928,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"广东"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":313134,"user_name":"leesper","can_delete":false,"product_type":"c1","uid":1351104,"ip_address":"","ucode":"CC76320571BECA","user_header":"https://static001.geekbang.org/account/avatar/00/14/9d/c0/cb5341ec.jpg","comment_is_top":false,"comment_ctime":1632290516,"is_pvip":false,"replies":[{"id":"114031","content":"我设置成了512，没有问题，我的MacOS版本:<br>Mojave<br>10.14.6 (18G9323)<br>","user_name":"作者回复","user_name_real":"froghui","uid":"1618647","ctime":1633574276,"ip_address":"","comment_id":313134,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1632290516","product_id":100032701,"comment_content":"在MacOS下写这个程序，只要struct pollfd[]数组超过256，poll()就报错退出了，查看man poll，说是数组长度超过了OPEN_MAX","like_count":0,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":527245,"discussion_content":"我设置成了512，没有问题，我的MacOS版本:\nMojave\n10.14.6 (18G9323)\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1633574276,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":154825,"user_name":"钱","can_delete":false,"product_type":"c1","uid":1009652,"ip_address":"","ucode":"2C92A243A463D4","user_header":"https://static001.geekbang.org/account/avatar/00/0f/67/f4/9a1feb59.jpg","comment_is_top":false,"comment_ctime":1574575770,"is_pvip":false,"replies":[{"id":"60385","content":"你是在什么上下文理听过这个问题的呢？","user_name":"作者回复","user_name_real":"froghui","uid":"1618647","ctime":1575189243,"ip_address":"","comment_id":154825,"utype":1}],"discussion_count":3,"race_medal":0,"score":"1574575770","product_id":100032701,"comment_content":"poll 是另一种在各种 UNIX 系统上被广泛支持的 I&#47;O 多路复用技术，虽然名声没有 select 那么响，能力一点不比 select 差，而且因为可以突破 select 文件描述符的个数限制，在高并发的场景下尤其占优势。<br><br>老师好，之前听过IO多路复用存在一个使CPU飙升的问题，不知具体是哪个IO多路复用函数引起的，具体原因是什么，怎么解决的，老师能否介绍一下？","like_count":0,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":475589,"discussion_content":"你是在什么上下文理听过这个问题的呢？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1575189243,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1007793,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/60/b1/0cd5929d.jpg","nickname":"Calvin","note":"","ucode":"3A0F93F3FAD76C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":72870,"discussion_content":"https://stackoverflow.com/questions/19738300/what-is-the-issue-of-select-using-so-much-cpu-power\n这个？select本身轮询本身不会导致cpu飙高吧，除非代码错误 出现答主提到的没有正确消费事件或者超时事件设置过短 ","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1575538736,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1009652,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/67/f4/9a1feb59.jpg","nickname":"钱","note":"","ucode":"2C92A243A463D4","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":68034,"discussion_content":"说是select事件空轮询导致CPU飙高？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1575197443,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":153969,"user_name":"herongwei","can_delete":false,"product_type":"c1","uid":1153928,"ip_address":"","ucode":"E4158BF7AD2E70","user_header":"https://static001.geekbang.org/account/avatar/00/11/9b/88/34c171f1.jpg","comment_is_top":false,"comment_ctime":1574338587,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1574338587","product_id":100032701,"comment_content":"认真多看几遍，老师讲解的很到位","like_count":0},{"had_liked":false,"id":146468,"user_name":"李春恒","can_delete":false,"product_type":"c1","uid":1033066,"ip_address":"","ucode":"F2DCA19EC66DC1","user_header":"https://static001.geekbang.org/account/avatar/00/0f/c3/6a/3272e095.jpg","comment_is_top":false,"comment_ctime":1572530382,"is_pvip":false,"replies":[{"id":"56599","content":"谢谢支持~。","user_name":"作者回复","user_name_real":"froghui","uid":"1618647","ctime":1572573067,"ip_address":"","comment_id":146468,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1572530382","product_id":100032701,"comment_content":"老师讲的真好，非常感谢。","like_count":0,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":472873,"discussion_content":"谢谢支持~。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1572573067,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":137750,"user_name":"传说中的成大大","can_delete":false,"product_type":"c1","uid":1236766,"ip_address":"","ucode":"103543D6E706BF","user_header":"https://static001.geekbang.org/account/avatar/00/12/df/1e/cea897e8.jpg","comment_is_top":false,"comment_ctime":1569835875,"is_pvip":false,"replies":[{"id":"54282","content":"poll也一样的，<br><br>poll(event_set, INIT_SIZE, -1))，这个event_set就是每次轮询的事件全集。","user_name":"作者回复","user_name_real":"froghui","uid":"1618647","ctime":1570966288,"ip_address":"","comment_id":137750,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1569835875","product_id":100032701,"comment_content":"我不太理解的是 之前好像理解到一个概念就是select每次轮训都会重新向内核注册需要关心的描述符这个缺点,那Poll呢？","like_count":0,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":469244,"discussion_content":"poll也一样的，\n\npoll(event_set, INIT_SIZE, -1))，这个event_set就是每次轮询的事件全集。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1570966288,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":136516,"user_name":"CCC","can_delete":false,"product_type":"c1","uid":1003738,"ip_address":"","ucode":"2E254444098267","user_header":"https://static001.geekbang.org/account/avatar/00/0f/50/da/ed4803cb.jpg","comment_is_top":false,"comment_ctime":1569462535,"is_pvip":false,"replies":[{"id":"52330","content":"63829，63851，63851就是三个不同的telnet客户端连接端口，由此断定肯定是三个不同的连接套接字。","user_name":"作者回复","user_name_real":"froghui","uid":"1618647","ctime":1569464507,"ip_address":"","comment_id":136516,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1569462535","product_id":100032701,"comment_content":"&gt; lsof -i:43211<br>COMMAND     PID       USER   FD   TYPE             DEVICE SIZE&#47;OFF NODE NAME<br>pollserve 56364 jinhaoplus    3u  IPv4 0xd6b66f6bf4c36f21      0t0  TCP *:43211 (LISTEN)<br>pollserve 56364 jinhaoplus    4u  IPv4 0xd6b66f6bf3b80f21      0t0  TCP localhost:43211-&gt;localhost:63829 (ESTABLISHED)<br>pollserve 56364 jinhaoplus    5u  IPv4 0xd6b66f6bf49d05a1      0t0  TCP localhost:43211-&gt;localhost:63851 (ESTABLISHED)<br>pollserve 56364 jinhaoplus    6u  IPv4 0xd6b66f6bf427d921      0t0  TCP localhost:43211-&gt;localhost:63876 (ESTABLISHED)<br>telnet    56379 jinhaoplus    5u  IPv4 0xd6b66f6be79fc921      0t0  TCP localhost:63829-&gt;localhost:43211 (ESTABLISHED)<br>telnet    56381 jinhaoplus    5u  IPv4 0xd6b66f6be1866f21      0t0  TCP localhost:63851-&gt;localhost:43211 (ESTABLISHED)<br>telnet    56529 jinhaoplus    5u  IPv4 0xd6b66f6bf4944921      0t0  TCP localhost:63876-&gt;localhost:43211 (ESTABLISHED)<br><br>我开启了三个telnet客户端连接这个pollserver，老师能否解释下上面的lsof命令中为什么客户端持有的FD是这样的情况呢？客户端持有的FD不应该是各自的connectfd嘛？","like_count":0,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":468679,"discussion_content":"63829，63851，63851就是三个不同的telnet客户端连接端口，由此断定肯定是三个不同的连接套接字。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1569464507,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":136097,"user_name":"初见","can_delete":false,"product_type":"c1","uid":1101405,"ip_address":"","ucode":"06D7952CED37D3","user_header":"https://static001.geekbang.org/account/avatar/00/10/ce/5d/5297717a.jpg","comment_is_top":false,"comment_ctime":1569344658,"is_pvip":false,"replies":[{"id":"52212","content":"场景不同，select仍然活跃在各种场合。","user_name":"作者回复","user_name_real":"froghui","uid":"1618647","ctime":1569408455,"ip_address":"","comment_id":136097,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1569344658","product_id":100032701,"comment_content":"老师您好~<br><br>我们既然有了poll，是不是代表着select 可以废弃了呢？<br><br>还是说他们各自仍然有不同的使用场景？","like_count":0,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":468456,"discussion_content":"场景不同，select仍然活跃在各种场合。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1569408455,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":136094,"user_name":"安排","can_delete":false,"product_type":"c1","uid":1260026,"ip_address":"","ucode":"F78CFA9624CAEF","user_header":"https://static001.geekbang.org/account/avatar/00/13/39/fa/a7edbc72.jpg","comment_is_top":false,"comment_ctime":1569343196,"is_pvip":false,"replies":[{"id":"52213","content":"你是说使用阻塞I&#47;O配合poll来使用？","user_name":"作者回复","user_name_real":"froghui","uid":"1618647","ctime":1569408512,"ip_address":"","comment_id":136094,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1569343196","product_id":100032701,"comment_content":"fd可读事件是不是有可能会误触发？也就是fd发生了可读事件，但是实际上并没有数据可读？ 所以我们要用非阻塞的读。 这是内核的一个bug吗？还是。。。","like_count":0,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":468455,"discussion_content":"你是说使用阻塞I/O配合poll来使用？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1569408512,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1260026,"avatar":"https://static001.geekbang.org/account/avatar/00/13/39/fa/a7edbc72.jpg","nickname":"安排","note":"","ucode":"F78CFA9624CAEF","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":20977,"discussion_content":"是的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1569408788,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]}]}