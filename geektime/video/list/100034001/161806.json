{"id":161806,"title":"76 | 如何为泛型定义要求：where字句","content":"<p><strong>课件地址</strong></p><p><a href=\"https://gitee.com/geektime-geekbang/swift-course\">https://gitee.com/geektime-geekbang/swift-course</a></p>","comments":[{"had_liked":false,"id":159723,"user_name":"Zion W.","can_delete":false,"product_type":"c3","uid":1098758,"ip_address":"","ucode":"D8150826E50F33","user_header":"https://static001.geekbang.org/account/avatar/00/10/c4/06/c08eca4c.jpg","comment_is_top":false,"comment_ctime":1575750576,"is_pvip":false,"replies":[{"id":61076,"content":"代码都要先试一下，你这个代码是编译不通过的。\n演示里代码的意思是C1可以是遵循Container的数据结构2，C2是遵循Container的实现2，这两个实现是可以不一样的，但是只要他们都遵循Container，并且ItemType一样，ItemType遵循Equatable，就可以应用allItemsMatch方法。\n\n也就是说C1可能是栈，C2可能是队列。但是只要里面都是Int，我就可以用allItemsMatch方法。\n\n你写成\nfunc allItemsMatch&lt;C1: Container&gt;(container: C1, anotherContainer: C1)-&gt; Bool where C1.ItemType : Equatable {\n    return true\n}\n是可以编译的，但是这就要求了方法的两个参数都是一种实现类型，比如都是栈，或者都是队列\n","user_name":"作者回复","user_name_real":"Geek_f72435","uid":1341726,"ctime":1575861693,"ip_address":"","comment_id":159723,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100034001,"comment_content":"为啥不写成 \nfunc allItemsMatch&lt;Container&gt;(container: Container, anotherContainer: Container)-&gt; Bool where Container.ItemType : Equatable {\n...\n}\n抛开举例演示的原因。","like_count":1,"discussions":[{"author":{"id":1341726,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLxtKhpmvzx2VB4iajicfJVFmQR3eP3xBpdpQEovpSqUfAOrNImvYwVb7P37ibI0ONziau9sbFEk8oDaA/132","nickname":"elfgate","note":"","ucode":"3C0B5F7C1F664C","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":477151,"discussion_content":"代码都要先试一下，你这个代码是编译不通过的。\n演示里代码的意思是C1可以是遵循Container的数据结构2，C2是遵循Container的实现2，这两个实现是可以不一样的，但是只要他们都遵循Container，并且ItemType一样，ItemType遵循Equatable，就可以应用allItemsMatch方法。\n\n也就是说C1可能是栈，C2可能是队列。但是只要里面都是Int，我就可以用allItemsMatch方法。\n\n你写成\nfunc allItemsMatch&amp;lt;C1: Container&amp;gt;(container: C1, anotherContainer: C1)-&amp;gt; Bool where C1.ItemType : Equatable {\n    return true\n}\n是可以编译的，但是这就要求了方法的两个参数都是一种实现类型，比如都是栈，或者都是队列\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1575861693,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]}]}