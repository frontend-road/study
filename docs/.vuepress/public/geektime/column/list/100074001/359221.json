{"id":359221,"title":"07 | 性能场景的数据到底应该做成什么样子？","content":"<p>你好，我是高楼。</p><p>在性能项目中，性能数据是非常重要的输入资源。但是我经常看到有人拿着少得可怜的数据，来做比较大的压力，这显然不符合真实的场景，虽然拿到的结果很好看，但并不会得到什么有价值的结果。所以，今天我们就来讲一下性能场景中的数据到底应该做成什么样子。</p><p>在RESAR性能工程中，场景里使用的数据需要满足两个方面：</p><ul>\n<li>第一，数据要符合真实环境中的数据分布，因为只有这样，我们才能模拟出相应的IO操作；</li>\n<li>第二，要符合真实用户输入的数据，以真正模拟出真实环境中的用户操作。</li>\n</ul><p>而这两个方面分别对应着两类数据：铺底数据和参数化数据。我们先来看铺底数据。</p><h2>铺底数据</h2><p>在通常的线上系统架构中，系统中用到的数据分为两部分：静态数据（图中红色点）和动态数据（图中绿色点），这也是我们在性能场景中需要存入的铺底数据。<br>\n<img src=\"https://static001.geekbang.org/resource/image/29/c5/290yye70f03665b1ab2a73bfa386eec5.jpg?wh=2000*1042\" alt=\"\"></p><p>从这个简单的结构图中不难看出，如果没有铺底数据，那就相当于是一个空系统。但是在生产环境中，这个系统肯定不会是空的，所以要有足够的数据在里面。如果数据不真实，我们就无法模拟出生产上有真实数据的场景，比如应用的内存占用、数据库IO能力、网络吞吐能力等。</p><p>其中，对于静态数据而言，我们最容易出现的问题是，一想到它占的网络带宽大，就觉得要用CDN了 ；或者是觉得不模拟静态数据，就是不符合真实场景，不支持我们的优化结果了。其实，数据放在哪里，怎么做最合理，怎么做成本最低，这些都需要综合考虑，并不是一味跟风，别人怎么做我们就要怎么做。</p><!-- [[[read_end]]] --><p>我曾经看到有的官方门户网站明明没几个流量，却在做技术规划的时候，非要把零星的几个图片放到CDN上去，以显示自己设计的架构有多先进。</p><p>我也经常看到一些企业认为网站上的图片很重要，出于不懂技术又要寻找安全感的逻辑，非要把图片都放到自己的服务器里。本来图片就很大，一张有3～4M，用户一访问，自然就会吵吵着慢。</p><p>像这两种极端都不可取。要知道，当外行指使内行干活的时候，基本上没什么好结果，因为有些外行觉得只要压力发起就可以了，在细节上根本不在乎结果会怎么样。在我看来，处理这样问题的最合理的方式是先分析业务逻辑，再判断技术架构怎么实现。</p><p>我们知道，静态数据通常有两个可以存放的地方，一个是服务端的Web层，另一个是CDN。对于大系统而言，流量大，网络带宽自然就要求得多。在这种情况下，数据必然要放CDN，你也没有其他选择（当然了，你可以选择不同的CDN厂商）。</p><p>对于一些小的业务系统，由于用的人并不多，整体网络流量要求也少，那我们就可以把静态数据直接放到负载均衡服务器（比如Nginx）或应用服务器中去。用户访问一次之后，后续的访问直接走本地缓存就可以了，对系统的压力也不会产生多大的影响。</p><p>静态数据讲完了，我们再来看动态数据，这就需要我们好好分析一下了，因为有些动态数据是可以放到CDN中的。</p><p>还是前面那张图，在我们不用任何预热加载的情况下，这些动态数据都是存放在数据库中的。当我们使用预热加载时，这些数据就会转到缓存中去（当然，这也取决于架构设计和代码实现），变成下图中这样：</p><p><img src=\"https://static001.geekbang.org/resource/image/c1/be/c14441d737781a96bfca1f48bb5225be.jpg?wh=2000*1042\" alt=\"\"></p><p>所以按照这样的逻辑，真实场景中业务操作的数据量实际有多少，我们就要模拟出多少，不然会出现一些问题。当模拟数据量与实际数据量差别较大时，会对数据库、缓存等造成不同的影响。下面我列出了五点，为你具体分析一下。</p><ul>\n<li><strong>对数据库压力的区别</strong></li>\n</ul><p>假设线上系统中有100万的用户量，而我们在做压力测试时，由于没有生产数据，造数据又比较麻烦，所以就直接使用1000条甚至更低的用户量来做性能场景。那一个表里有100万条数据和1000条数据的差别是什么呢？我们来实际操作一下。</p><p>在这里，有一个前提条件：同样的硬件环境，同样的数据库，同样的表结构，同样的索引，只是两张表的数据不同。</p><p>两条SQL如下：</p><pre><code>select * from ob_tuning.temp1_1000 where id = '3959805';\nselect * from ob_tuning.temp2_100w where id = '3959805';\n</code></pre><p>因为表内的数据量不同，所以结果如下：</p><p><img src=\"https://static001.geekbang.org/resource/image/e2/51/e24c66edbd4b6321f903f258626f4e51.png?wh=2322*76\" alt=\"\"></p><p>可以看到，查询时间一个是19ms，一个是732ms。我们不妨再来看一下表的操作细节。</p><p>第一个表（用户量为1000）的操作细节：</p><p><img src=\"https://static001.geekbang.org/resource/image/f1/28/f1dfa550a63de0dca8d4bf7a4485a128.png?wh=1126*604\" alt=\"\"></p><p>第二个表（用户量为100万）的操作细节：</p><p><img src=\"https://static001.geekbang.org/resource/image/91/8a/916b34e1cb31b3e9f502203a7d762f8a.png?wh=1128*598\" alt=\"\"></p><p>这里我们只需要对比“executing”这一行就能看到明显的差距，它告诉我们当执行这个语句时，需要的CPU时间明显因为数据量的增加而增加了。所以我们不难发现，如果你没有足够的铺底数据放在性能场景中，那一开始便注定了悲剧的结果。</p><ul>\n<li><strong>缓存的区别</strong></li>\n</ul><p>数据量的多少在缓存中有很明显的区别，如下图所示：</p><p><img src=\"https://static001.geekbang.org/resource/image/82/16/8224018b4f37f1a75a7977bab88f5a16.jpg?wh=2000*799\" alt=\"\"></p><p>也就是说，场景中用的数据量越多，缓存必然要求越大。</p><ul>\n<li><strong>压力工具使用的区别</strong></li>\n</ul><p>压力工具中使用的数据多少，不仅影响着压力工具本身需要的内存，同时也影响着性能场景的执行结果。这一点，我们会在后面的课程中详细讲到。</p><ul>\n<li><strong>网络的区别</strong></li>\n</ul><p>其实不同的数据量，不管是走缓存，还是数据库，对客户端和服务器之间的网络消耗都是差不多的。只要不是缓存在客户那边，都是要走到服务器里转一圈的。所以我们认为，数据量是多还是少，对客户端和服务器之间的网络的压力没有什么区别。如果你用的是CDN，那可以做另外的考虑。</p><ul>\n<li><strong>应用的区别</strong></li>\n</ul><p>如果不是在应用中直接缓存数据，我们也认为对应用没什么区别，反正不管是什么样的请求过来，都是要到缓存或数据库中去取数据的，应用的Self Time不会有什么差别，方法依旧要执行。但是，如果你的应用是直接在应用的缓存中存数据的，那就有区别了，同样也是数据量越大，对内存的要求就越大。</p><p>基于以上几点，<strong>我们可以看到<strong><strong>有两个</strong></strong>比较重要<strong><strong>的</strong></strong>环节：数据库<strong><strong>和</strong></strong>缓存</strong><strong>，</strong><strong>这是直接的影响。</strong></p><p>那间接的影响有什么呢？比如说，数据在数据库中执行得慢了，在同步调用的应用中必然需要更多的应用线程来处理。</p><p>我们假设有一个100TPS的系统，先忽略其他时间，只看数据库时间。如果数据库执行需要10ms，那应用只需要一个线程就能处理完了。如果数据库需要100ms，而我们仍然想达到100TPS，那应用就得有10个线程来同时处理。</p><p><img src=\"https://static001.geekbang.org/resource/image/17/0c/17f49aeb6bd2551c278124f76f24fc0c.jpg?wh=2000*1042\" alt=\"\"></p><p>与此同时，整个链路上的所有线程、队列、超时等都会因为受到数据量的影响而产生大的变化。所以，我们要想模拟出生产时候的样子，在铺底数据上一定不能含糊。</p><h2>参数化数据</h2><p>有了前面铺底数据的分析，我们在做参数化的时候就会明确很多。不过，在场景中应该用多少量的数据，是性能场景中最容易出问题的一个环节。</p><p>参数化数据量应该是多少，取决于场景运行多长时间。而在场景运行中，我们通常要用到两类数据：唯一性数据和可重复使用的数据。</p><p>对于唯一性数据（比如用户数据）来说，我们需要使用多少参数化数据是非常容易计算的。比如一个运行半小时的场景，TPS如果是100的话，那就需要18万的数据量，计算过程如下：</p><p>$数据量 = 30min \\times 60s \\times 100TPS = 18w$</p><p>对于可重复使用的数据量，我们需要分析真实业务场景中是如何重复的，比如说电商系统中商品的数据量，我们在做参数化的时候就可以重复，毕竟多个人是可以同时购买同一个商品的。我们假设平均有1000个用户在10个商品中，那当我们有18万个用户时，就需要1800个商品：</p><p>$商品数量 = 18w用户 \\div 1000用户 \\times 10 商品 = 1800 商品$</p><p>上述就是唯一性数据量和可重复使用数据量的计算方式。</p><p>你可能会问，如果参数化数据量太大，在压力工具中处理不了怎么办？比如说我们在用JMeter处理文件参数化数据时，如果参数化文件太长，会导致JMeter消耗更多的时间。其实像这种参数化数据量要求多的情况，我们可以采用连接远程缓存（比如Redis）或数据库（比如MySQL）的方式来做参数化。</p><ul>\n<li><strong>连接Redis做参数化</strong></li>\n</ul><p><strong>方法一</strong>：直接在JMeter中写Beanshell连接Redis取数据。</p><pre><code>import redis.clients.jedis.Jedis;\n  //连接本地的 Redis 服务\nJedis jedis = new Jedis(&quot;172.16.106.130&quot;,30379);\nlog.info(&quot;服务正在运行: &quot;+jedis.ping());\nString key = vars.get(&quot;username&quot;);\nString value = vars.get(&quot;token&quot;);\nvars.put(&quot;tokenredis&quot;,jedis.get(key));\n</code></pre><p><strong>方法二</strong>：使用Redis Data Set组件。</p><p><img src=\"https://static001.geekbang.org/resource/image/2f/76/2f7770b642d22d782e1dc21c97e6b176.png?wh=2130*1482\" alt=\"\"></p><p>这两种方式都可以用Redis做参数化的数据源。</p><ul>\n<li><strong>连接MySQL做参数化</strong></li>\n</ul><p><strong>第一步</strong>：创建一个JDBC Connection Configuration。</p><p><img src=\"https://static001.geekbang.org/resource/image/a0/36/a0fdd542b00ae70c4dc992d225d18936.png?wh=1548*1548\" alt=\"\"></p><p>同时，配置好连接信息，比如用户名密码等：<br>\n<img src=\"https://static001.geekbang.org/resource/image/33/71/33a2486b569ddb3c0cbfc63e4e4b0f71.png?wh=2124*1560\" alt=\"\"></p><p><strong>第二步</strong>：创建一个JDBC  Request。</p><p><img src=\"https://static001.geekbang.org/resource/image/7e/35/7eac9a5f4c647fb4d79677c8a86bab35.png?wh=1656*1364\" alt=\"\"></p><p>用JDBC Request把数据取回来：</p><p><img src=\"https://static001.geekbang.org/resource/image/4e/ba/4e84085211ff540a1752c3fde04aa2ba.png?wh=2120*1552\" alt=\"\"></p><p><strong>第三步</strong>：用${user_name}引用参数。</p><p>完成上述三步，我们就实现了用数据库的方式做参数化。</p><p>知道了RESAR性能工程中需要什么样的数据后，我们接下来聊一下如何造数据。</p><h2>如何造数据？</h2><p>因为我们这个项目中的电商平台是开源的，数据库也完全是空的，系统中没有任何的数据。所以，我们虽然只是实现了电商的主流程，但需要的数据量仍然不少。这些数据包括：</p><ul>\n<li>用户数据；</li>\n<li>地址数据；</li>\n<li>商品数据；</li>\n<li>订单数据。</li>\n</ul><p>下面我们具体考虑一下数据量应该怎么设置。</p><p>根据我们<a href=\"https://time.geekbang.org/column/article/357539\">第5讲</a>中的性能方案，登录TPS如果是每秒150，并且如果按容量场景的需求，在场景连续递增时，大概在20分钟内（这是一个经验值，在具体的场景执行中也会有变化）会递增到最大值，然后再执行10分钟，也就是说总时间大概为30分钟。</p><p>但是因为场景是递增的，一开始我们并没有要求达到150TPS，同时登录场景TPS最大值能达到多少，我们现在也没法预知。根据经验来看的话，登录的TPS在当前的硬件环境中，就算是不走缓存，达到三、四百应该是没有多大问题的。</p><p>如果按最大400TPS来算，跑半个小时，需要的数据量就是54万，而我们造出来的用户量要远远大于这个量级。这里我们就先造200万的用户量，因为地址的数据量肯定大于用户的数据量，所以会多于200万。</p><p>我们先查一下当前的数据库中有多少数据量，再确定要造多少数据。</p><p><img src=\"https://static001.geekbang.org/resource/image/41/f8/41428bf45c683832eaae0893faebcdf8.jpg?wh=2000*960\" alt=\"\"></p><p>这个数据量级明显是不够的，太少了。下面我们来看看怎么造出那么多的数据量。</p><p>我们造的数据主要分为两种：用户数据和订单数据。</p><ul>\n<li><strong>登陆用户</strong></li>\n</ul><p>对于登陆用户数据而言，我们要先了解表结构，因为造出来的数据只有符合业务逻辑才能使用。我们先看一下用户表结构和数据。</p><p>用户表：</p><p><img src=\"https://static001.geekbang.org/resource/image/a6/33/a64e039b690b4cdbdd1fe48f29b04c33.png?wh=2284*978\" alt=\"\"><br>\n<img src=\"https://static001.geekbang.org/resource/image/eb/f9/ebc31a2f5fe492201b87cebc639ef0f9.png?wh=2150*766\" alt=\"\"></p><p>地址表：</p><p><img src=\"https://static001.geekbang.org/resource/image/a4/64/a41f1dd70053c41d89d9688065d3f164.png?wh=2250*516\" alt=\"\"><br>\n<img src=\"https://static001.geekbang.org/resource/image/d9/31/d9000ac7563dbe23ce4d80a86e061131.png?wh=1654*774\" alt=\"\"></p><p>根据我的经验，<strong>造数据时不要往数据库里直接写存储过程插数据，除非你非常清楚表之间的关系，并且存储过程又写得非常溜</strong>。否则你会把数据库弄得一团乱，最后不得不在数据库的表里改数据，这是非常被动的做法。在这里，我推荐你使用接口直接调用来造数据，这个操作比较简单，也比较安全。</p><p>如果你想用代码来造数据，那就需要做下面这些分析。</p><p>在这里，我们的用户表和地址表之间是有对应关系的，你可以通过下面这段代码查看到，地址表中的MemberID就是用户ID号。</p><pre><code>@Override\npublic int add(UmsMemberReceiveAddress address) {\n    UmsMember currentMember = memberService.getCurrentMember();\n    address.setMemberId(currentMember.getId());\n    return addressMapper.insert(address);\n}\n</code></pre><p>其实造用户数据就是实现注册流程。你可以先分析下用户注册的代码，直接把其中的注册代码部分拿过来用就行了。具体调用代码如下：</p><p><img src=\"https://static001.geekbang.org/resource/image/77/3a/77d58be326b648bda54b701cd083513a.png?wh=1920*1736\" alt=\"\"></p><p>看到这里，你可能会想，造数据需要关心注册流程吗？其实如果我们是调接口造数据，就不需要；但如果写代码开启了多线程来造数据，我们就需要了解接口之间的调用关系了。</p><p>下面我们截出中间一部分来分析它们的调用关系：</p><p><img src=\"https://static001.geekbang.org/resource/image/8f/1a/8fb4c093f15b4d4ecd9fb0b7d5faff1a.png?wh=1152*190\" alt=\"\"></p><p>因为注册用户表中的密码都是加密的，所以我们可以通过注册用户实现类代码，如下:</p><pre><code>@Override\npublic void register(String username, String password, String telephone, String authCode) {\n...............................\n    //获取默认会员等级并设置\n    UmsMemberLevelExample levelExample = new UmsMemberLevelExample();\n    levelExample.createCriteria().andDefaultStatusEqualTo(1)  ;\n    List&lt;UmsMemberLevel&gt; memberLevelList = memberLevelMapper.selectByExample(levelExample);\n    if (!CollectionUtils.isEmpty(memberLevelList)) {\n        umsMember.setMemberLevelId(memberLevelList.get(0).getId());\n    }\n    //插入用户\n    memberMapper.insert(umsMember);\n    umsMember.setPassword(null);\n}\n</code></pre><p>了解了上面的内容之后，我们就可以直接写一段代码来造用户数据了，具体请见：<a href=\"https://github.com/ZeeBJ/-/blob/main/%E9%80%A0%E7%94%A8%E6%88%B7%E4%BB%A3%E7%A0%81.java\">《造用户代码.java》</a></p><p>有了用户数据，我们还需要下单用户的地址等详细信息，只有这样才能完成下单。所以，接下来我们就开始分析怎么造出可以下单的地址数据。</p><ul>\n<li><strong>用户地址</strong></li>\n</ul><p>首先，我们要根据用户地址资源路径找到Controller层，查看用户地址的代码调用关系，如下：</p><p><img src=\"https://static001.geekbang.org/resource/image/73/9b/73d55607d9ebb13311d40d1148c63c9b.png?wh=1920*901\" alt=\"\"></p><p>然后找到用户地址的关键代码：</p><pre><code>@Override\npublic int add(UmsMemberReceiveAddress address) {\n    UmsMember currentMember = memberService.getCurrentMember();\n    address.setMemberId(currentMember.getId());\n    //插入地址\n    return addressMapper.insert(address);\n}\n</code></pre><p>从这段代码中，我们可以观察到这几个信息：</p><ul>\n<li>调用地址接口需要用户登陆态，通过登陆态来解析用户ID号；</li>\n<li>用户ID号是地址代码中的MemberID号；</li>\n<li>用户ID号是自增加。</li>\n</ul><p>具体参考请见<a href=\"https://github.com/ZeeBJ/-/blob/main/%E9%80%A0%E7%94%A8%E6%88%B7%E5%9C%B0%E5%9D%80%E4%BB%A3%E7%A0%81.java\">《造用户地址代码.java》</a>。</p><p>通过上面的代码编写，然后再开启Java线程池与多线程，我们就可以把基础数据快速造完了。下面是造用户地址数据的时间记录（每台电脑配置不一样，用的数据也许会有差异）：</p><p><img src=\"https://static001.geekbang.org/resource/image/f3/8b/f348yya540bc435b8756113298595b8b.png?wh=647*626\" alt=\"\"></p><p>通过以上手段，我们最后造出如下数据量：</p><p><img src=\"https://static001.geekbang.org/resource/image/ea/c1/eac80e522a51b6c357265a53e295cbc1.jpg?wh=2000*960\" alt=\"\"></p><p>表中的订单数据会在做基准场景时补充上去。等这些数据量都有了，我们在容量场景中就有了足够的铺底数据。</p><h2>总结</h2><p>在这节课里，我们一起学习了性能场景中的数据到底应该做成什么样子。对于造数据而言，方法有很多，我们不用拘泥于某种造数据的手段，只要能快速造出足够的数据量就好。在RESAR性能工程中，性能场景需要两类数据：铺底数据和参数化数据。其中，铺底数据需要满足这三个条件：</p><ul>\n<li>一定要造出符合生产量级的数据量；</li>\n<li>数据量要真实模拟出生产的数据分布；</li>\n<li>数据要真实可用。</li>\n</ul><p>参数化数据需要满足这两个条件：</p><ul>\n<li>参数化数据量要足够；</li>\n<li>要符合真实用户的输入数据。</li>\n</ul><p>有了以上这些知识，我们就不会在造数据时出现混乱的情况了。</p><h2>课后作业</h2><p>这就是今天的全部内容，最后给你留两个思考题吧：</p><ol>\n<li>为什么要造出符合生产量级的数据量？</li>\n<li>为什么参数化时要用符合真实用户的输入数据？</li>\n</ol><p>记得在留言区和我讨论、交流你的想法，每一次思考都会让你更进一步。</p><p>如果这节课让你有所收获，也欢迎你分享给你的朋友，共同学习进步。我们下一讲再见！</p>","neighbors":{"left":{"article_title":"06 | 如何抽取出符合真实业务场景的业务模型？","id":358483},"right":{"article_title":"08 | 并发、在线和TPS到底是什么关系？","id":360133}},"comments":[{"had_liked":false,"id":287856,"user_name":"Geek_bbe4c8","can_delete":false,"product_type":"c1","uid":2534029,"ip_address":"","ucode":"4FD182C6BB0B05","user_header":"","comment_is_top":false,"comment_ctime":1618196739,"is_pvip":false,"replies":[{"id":"104533","content":"是的。","user_name":"作者回复","user_name_real":"高楼(Zee)","uid":"1785562","ctime":1618201198,"ip_address":"","comment_id":287856,"utype":1}],"discussion_count":1,"race_medal":0,"score":"14503098627","product_id":100074001,"comment_content":"“对于唯一性数据（比如用户数据）来说，我们需要使用多少参数化数据是非常容易计算的。比如一个运行半小时的场景，TPS 如果是 100 的话，那就需要 18 万的数据量”<br>老师，你这段话的意思是，要模拟每一个压测请求都是不同的用户发起的，这里需要构造18万个不同用户？","like_count":3,"discussions":[{"author":{"id":1785562,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/3e/da/e686a72b.jpg","nickname":"高楼(Zee)","note":"","ucode":"149202404A5ABC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":518445,"discussion_content":"是的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1618201198,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":291548,"user_name":"金面王朝","can_delete":false,"product_type":"c1","uid":1545625,"ip_address":"","ucode":"D0F531A7CE45D2","user_header":"https://static001.geekbang.org/account/avatar/00/17/95/99/b5bebd4e.jpg","comment_is_top":false,"comment_ctime":1620357560,"is_pvip":false,"replies":[{"id":"105641","content":"这个倒没有定论。还是得看一下参数化的是什么。有的放一个数据，有的放十个数据，那不一样嘛。","user_name":"作者回复","user_name_real":"高楼(Zee)","uid":"1785562","ctime":1620452203,"ip_address":"","comment_id":291548,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5915324856","product_id":100074001,"comment_content":"老师，jemeter参数化文件一般超过多少条的数据量会使jmeter成为瓶颈呢<br><br>","like_count":1,"discussions":[{"author":{"id":1785562,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/3e/da/e686a72b.jpg","nickname":"高楼(Zee)","note":"","ucode":"149202404A5ABC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":519503,"discussion_content":"这个倒没有定论。还是得看一下参数化的是什么。有的放一个数据，有的放十个数据，那不一样嘛。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1620452203,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":287210,"user_name":"道长","can_delete":false,"product_type":"c1","uid":2330999,"ip_address":"","ucode":"15B2E9CEF84634","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/KhQRc8hIxHHyPV3Og2Fc5l8w2y7ibGwGn6odmzl3wTt6fPrNv589uHmia1rgiaZhRiaLVHv9ibhzkxFx1zo42uNIS9A/132","comment_is_top":false,"comment_ctime":1617842674,"is_pvip":false,"replies":[{"id":"104290","content":"对后端的压力来说，是合理的。<br>如果从用户的角度来说，显然是不合理的。 所以我们要做相应的换算。 请看第8篇中的换算。","user_name":"作者回复","user_name_real":"高楼(Zee)","uid":"1785562","ctime":1617851953,"ip_address":"","comment_id":287210,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5912809970","product_id":100074001,"comment_content":"老师，我想问下你说尽量模拟真实用户效果，但像我们测试web一般都是忽略了css,js等直接测试主接口，这种是否合理呢？","like_count":1,"discussions":[{"author":{"id":1785562,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/3e/da/e686a72b.jpg","nickname":"高楼(Zee)","note":"","ucode":"149202404A5ABC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":518231,"discussion_content":"对后端的压力来说，是合理的。\n如果从用户的角度来说，显然是不合理的。 所以我们要做相应的换算。 请看第8篇中的换算。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1617851953,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":286874,"user_name":"wfw123","can_delete":false,"product_type":"c1","uid":2535237,"ip_address":"","ucode":"973FA0927218F3","user_header":"","comment_is_top":false,"comment_ctime":1617653148,"is_pvip":false,"replies":[{"id":"104180","content":"做数据库备份回滚哇。","user_name":"作者回复","user_name_real":"高楼(Zee)","uid":"1785562","ctime":1617685667,"ip_address":"","comment_id":286874,"utype":1}],"discussion_count":2,"race_medal":0,"score":"5912620444","product_id":100074001,"comment_content":"老师，通常我们执行性能脚本的时候不会执行一次，如果按照上面30分钟100tps的场景，对于不可重复使用的数据，如果我们每次执行前做一次数据，太不易用啦，但是不造数据还不行，那么我们如何来解决这样的数据问题呢？","like_count":2,"discussions":[{"author":{"id":1785562,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/3e/da/e686a72b.jpg","nickname":"高楼(Zee)","note":"","ucode":"149202404A5ABC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":518116,"discussion_content":"做数据库备份回滚哇。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1617685667,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2330999,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/KhQRc8hIxHHyPV3Og2Fc5l8w2y7ibGwGn6odmzl3wTt6fPrNv589uHmia1rgiaZhRiaLVHv9ibhzkxFx1zo42uNIS9A/132","nickname":"道长","note":"","ucode":"15B2E9CEF84634","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":365557,"discussion_content":"我上次就遇到这种问题，都是让开发写了个回退脚本，每次运行完，执行一次。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1617842466,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":347760,"user_name":"吴双","can_delete":false,"product_type":"c1","uid":2062023,"ip_address":"","ucode":"60BCAC5C95CA00","user_header":"https://static001.geekbang.org/account/avatar/00/1f/76/c7/1b5ab8b8.jpg","comment_is_top":false,"comment_ctime":1654402816,"is_pvip":false,"replies":[{"id":"127161","content":"这个要看业务逻辑，如果单号是前端随机生成的，那就用压力工具实现随机数。如果是业务逻辑中是从数据库中取的，那就在数据库中造好，然后查出来做参数化。 ","user_name":"作者回复","user_name_real":"编辑","uid":"1785562","ctime":1655907281,"ip_address":"","comment_id":347760,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1654402816","product_id":100074001,"comment_content":"如果是下单场景要求单号唯一，在大批量压测的时候 ，是使用随机数还是从造好放数据库获取呢","like_count":0,"discussions":[{"author":{"id":1785562,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/3e/da/e686a72b.jpg","nickname":"高楼(Zee)","note":"","ucode":"149202404A5ABC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":577075,"discussion_content":"这个要看业务逻辑，如果单号是前端随机生成的，那就用压力工具实现随机数。如果是业务逻辑中是从数据库中取的，那就在数据库中造好，然后查出来做参数化。 ","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1655907282,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":347756,"user_name":"吴双","can_delete":false,"product_type":"c1","uid":2062023,"ip_address":"","ucode":"60BCAC5C95CA00","user_header":"https://static001.geekbang.org/account/avatar/00/1f/76/c7/1b5ab8b8.jpg","comment_is_top":false,"comment_ctime":1654398553,"is_pvip":false,"replies":[{"id":"127162","content":"是的。 ","user_name":"作者回复","user_name_real":"编辑","uid":"1785562","ctime":1655907326,"ip_address":"","comment_id":347756,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1654398553","product_id":100074001,"comment_content":"老师，如果参数化数据少量的就使用 用户定义的变量或者CSV DATA吧 ，多的话就考虑您说的Redis和数据库","like_count":0,"discussions":[{"author":{"id":1785562,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/3e/da/e686a72b.jpg","nickname":"高楼(Zee)","note":"","ucode":"149202404A5ABC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":577076,"discussion_content":"是的。 ","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1655907326,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":338152,"user_name":"Geek_648160","can_delete":false,"product_type":"c1","uid":2535244,"ip_address":"","ucode":"6BA623CFB7371A","user_header":"","comment_is_top":false,"comment_ctime":1647325435,"is_pvip":false,"replies":[{"id":"123804","content":"那必然的。有就分析处理嘛。 ","user_name":"作者回复","user_name_real":"编辑","uid":"1785562","ctime":1647666139,"ip_address":"","comment_id":338152,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1647325435","product_id":100074001,"comment_content":"老师 使用mysql和redis方式参数化，这个前提是db和redis本身没有瓶颈，是吗？","like_count":0,"discussions":[{"author":{"id":1785562,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/3e/da/e686a72b.jpg","nickname":"高楼(Zee)","note":"","ucode":"149202404A5ABC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":557118,"discussion_content":"那必然的。有就分析处理嘛。 ","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1647666139,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":331754,"user_name":"学渣灰","can_delete":false,"product_type":"c1","uid":2216460,"ip_address":"","ucode":"33712FAB9903B0","user_header":"https://static001.geekbang.org/account/avatar/00/21/d2/0c/d56ca411.jpg","comment_is_top":false,"comment_ctime":1642751554,"is_pvip":false,"replies":[{"id":"121766","content":"这个问题比较复杂。我需要知道更多的数据才能判断，可以微信联系我。 ","user_name":"作者回复","user_name_real":"编辑","uid":"1785562","ctime":1644244277,"ip_address":"","comment_id":331754,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1642751554","product_id":100074001,"comment_content":"高老师 请教下:&quot;一定要造出符合生产量级的数据量&quot; ,假如生成数据库总数据10亿+，但是生成数据库服务上百台，配置也都很高，测试环境只有两台切配置低很多，此时测试环境数据库铺垫数据构造多少合适？未来三年增量数据构造多少合适？","like_count":0,"discussions":[{"author":{"id":1785562,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/3e/da/e686a72b.jpg","nickname":"高楼(Zee)","note":"","ucode":"149202404A5ABC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":549809,"discussion_content":"这个问题比较复杂。我需要知道更多的数据才能判断，可以微信联系我。 ","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1644244277,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":330606,"user_name":"冒冒","can_delete":false,"product_type":"c1","uid":2666416,"ip_address":"","ucode":"5DB92E076ED511","user_header":"https://static001.geekbang.org/account/avatar/00/28/af/b0/a05c5dda.jpg","comment_is_top":false,"comment_ctime":1642066630,"is_pvip":false,"replies":[{"id":"120614","content":"1. 看描述是没问题的。<br>2. 那肯定影响喽。 ","user_name":"作者回复","user_name_real":"编辑","uid":"1785562","ctime":1642139078,"ip_address":"","comment_id":330606,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1642066630","product_id":100074001,"comment_content":"问题一：压测的结果符合线上，真实可用<br>问提二：如果是需要参数化的数据没有参数化，是不是也会影响到TPS?","like_count":0,"discussions":[{"author":{"id":1785562,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/3e/da/e686a72b.jpg","nickname":"高楼(Zee)","note":"","ucode":"149202404A5ABC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":546047,"discussion_content":"1. 看描述是没问题的。\n2. 那肯定影响喽。 ","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1642139078,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":317870,"user_name":"不将就","can_delete":false,"product_type":"c1","uid":1168579,"ip_address":"","ucode":"9BEC01AEE1D885","user_header":"https://static001.geekbang.org/account/avatar/00/11/d4/c3/d41e8c79.jpg","comment_is_top":false,"comment_ctime":1635000124,"is_pvip":false,"replies":[{"id":"115220","content":"有损失，也可以接受。 只要压力能发起来。 ","user_name":"作者回复","user_name_real":"高楼(Zee)","uid":"1785562","ctime":1635086370,"ip_address":"","comment_id":317870,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1635000124","product_id":100074001,"comment_content":"高老师，请教个问题，文中提到了使用redis和mysql作为参数化的数据源，那么在性能测试执行的过程中，会不断的通过连接redis和mysql来查询参数化数据，这样的话也有很大的性能损失吧？","like_count":0,"discussions":[{"author":{"id":1785562,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/3e/da/e686a72b.jpg","nickname":"高楼(Zee)","note":"","ucode":"149202404A5ABC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":529013,"discussion_content":"有损失，也可以接受。 只要压力能发起来。 ","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1635086370,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":316189,"user_name":"啸龙","can_delete":false,"product_type":"c1","uid":2807321,"ip_address":"","ucode":"ACE8C52AD8D329","user_header":"https://static001.geekbang.org/account/avatar/00/2a/d6/19/dafc61a8.jpg","comment_is_top":false,"comment_ctime":1634195713,"is_pvip":false,"replies":[{"id":"114675","content":"数据一定是按总体的业务积累量来算的。<br>压力工具的集合点（同步定时器），我觉得没有必要使用。真实场景中也不会有这样的时间点。","user_name":"作者回复","user_name_real":"高楼(Zee)","uid":"1785562","ctime":1634535721,"ip_address":"","comment_id":316189,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1634195713","product_id":100074001,"comment_content":"请教高老师，<br><br>原文中   “对于唯一性数据（比如用户数据）来说，我们需要使用多少参数化数据是非常容易计算的。比如一个运行半小时的场景，TPS 如果是 100 的话，那就需要 18 万的数据量，计算过程如下：数据量=30min×60s×100TPS=18w”<br><br>（1）如果造出18万用户，实际我只需要TPS100，那我应该用18万中多少用户去并发呢，是简单的算成：如果1个业务时间2s，那就是100&#47;0.5=200 并发用户<br><br>（2）如果按照您的思路，所有并发以TPS来计算，那么有些性能工具，如jmeter中的同步定时器（synchronizing timer）用不用也无所谓了，因为我同步不同步无所谓了，只要压测到最后满足100TPS就可以了，无非多增加几个线程或用户而已？","like_count":1,"discussions":[{"author":{"id":1785562,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/3e/da/e686a72b.jpg","nickname":"高楼(Zee)","note":"","ucode":"149202404A5ABC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":528301,"discussion_content":"数据一定是按总体的业务积累量来算的。\n压力工具的集合点（同步定时器），我觉得没有必要使用。真实场景中也不会有这样的时间点。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1634535721,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":309171,"user_name":"舒羽Tester","can_delete":false,"product_type":"c1","uid":1785804,"ip_address":"","ucode":"4DCC70CEEE9113","user_header":"https://static001.geekbang.org/account/avatar/00/1b/3f/cc/d02e2c1e.jpg","comment_is_top":false,"comment_ctime":1629967328,"is_pvip":false,"replies":[{"id":"111993","content":"是呀。 ","user_name":"作者回复","user_name_real":"高楼(Zee)","uid":"1785562","ctime":1630067759,"ip_address":"","comment_id":309171,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1629967328","product_id":100074001,"comment_content":"“对于唯一性数据（比如用户数据）来说，我们需要使用多少参数化数据是非常容易计算的。比如一个运行半小时的场景，TPS 如果是 100 的话，那就需要 18 万的数据量”<br>老师这里的&quot;TPS如果是100&quot;，这个100 是先造些数据用几个线程跑出来吗？","like_count":0,"discussions":[{"author":{"id":1785562,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/3e/da/e686a72b.jpg","nickname":"高楼(Zee)","note":"","ucode":"149202404A5ABC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":525768,"discussion_content":"是呀。 ","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1630067759,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":303369,"user_name":"悦霖","can_delete":false,"product_type":"c1","uid":1786180,"ip_address":"","ucode":"6707B62806147F","user_header":"https://static001.geekbang.org/account/avatar/00/1b/41/44/00ea2279.jpg","comment_is_top":false,"comment_ctime":1626756144,"is_pvip":false,"replies":[{"id":"109817","content":"这个要看是什么参数了。有些不能重复用，比如说订单数据支付了就不能再支付。<br>有些可以重复用，比如说用户登录的数据。","user_name":"作者回复","user_name_real":"高楼(Zee)","uid":"1785562","ctime":1626781569,"ip_address":"","comment_id":303369,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1626756144","product_id":100074001,"comment_content":"很多时候场景不是执行一次就能得到想要的结果，需要反复执行，那用过的参数化数据是否还能继续使用了","like_count":0,"discussions":[{"author":{"id":1785562,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/3e/da/e686a72b.jpg","nickname":"高楼(Zee)","note":"","ucode":"149202404A5ABC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":523650,"discussion_content":"这个要看是什么参数了。有些不能重复用，比如说订单数据支付了就不能再支付。\n有些可以重复用，比如说用户登录的数据。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1626781569,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":295064,"user_name":"yz","can_delete":false,"product_type":"c1","uid":1763246,"ip_address":"","ucode":"6DB4831B7D3143","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTI4akcIyIOXB90Lib13IhEYZc5iaZ8CUedBWibV6l6GLib0BX3QGXxBBDibPqBMcAWeV0CRWsVEsoueSwg/132","comment_is_top":false,"comment_ctime":1622201742,"is_pvip":false,"replies":[{"id":"107127","content":"1. 是的。<br>2. 是的。不过要分析了参数化数据量的具体影响才能判断。<br>3. 也要缩放，不过不一定是等比的。这个要做基准测试才能知道。","user_name":"作者回复","user_name_real":"高楼(Zee)","uid":"1785562","ctime":1622216086,"ip_address":"","comment_id":295064,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1622201742","product_id":100074001,"comment_content":"老师，<br>问题1，这里说的静态铺地数据指图片？视频这些吗？<br>问题2，参数化数据是否影响压测机的性能，看压测机压力就可以了吧？<br>问题3，若压测环境跟生产环境硬件配置不对等，那数据量是不是也等比缩放？<br>","like_count":1,"discussions":[{"author":{"id":1785562,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/3e/da/e686a72b.jpg","nickname":"高楼(Zee)","note":"","ucode":"149202404A5ABC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":520931,"discussion_content":"1. 是的。\n2. 是的。不过要分析了参数化数据量的具体影响才能判断。\n3. 也要缩放，不过不一定是等比的。这个要做基准测试才能知道。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1622216086,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":294310,"user_name":"掌柜","can_delete":false,"product_type":"c1","uid":1388231,"ip_address":"","ucode":"A444D383FCFC09","user_header":"https://static001.geekbang.org/account/avatar/00/15/2e/c7/ebe0da8c.jpg","comment_is_top":false,"comment_ctime":1621872091,"is_pvip":true,"replies":[{"id":"106870","content":"在参数化数据多的时候建议用缓存或数据库中直接取数据的方式。<br>但是你可以不用被测系统的缓存或数据库嘛，独立搭建一个专门存参数化数据的缓存或数据库即可。","user_name":"作者回复","user_name_real":"高楼(Zee)","uid":"1785562","ctime":1622004467,"ip_address":"","comment_id":294310,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1621872091","product_id":100074001,"comment_content":"参数化直接从数据库取，连接数据库，查询数据需要消耗时间，而且会占用数据库资源，这种参数化方式很明显对压测的性能有影响，老师为什么还要推荐这种方式呢？","like_count":0,"discussions":[{"author":{"id":1785562,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/3e/da/e686a72b.jpg","nickname":"高楼(Zee)","note":"","ucode":"149202404A5ABC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":520600,"discussion_content":"在参数化数据多的时候建议用缓存或数据库中直接取数据的方式。\n但是你可以不用被测系统的缓存或数据库嘛，独立搭建一个专门存参数化数据的缓存或数据库即可。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1622004467,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":293075,"user_name":"静雨树下","can_delete":false,"product_type":"c1","uid":2439284,"ip_address":"","ucode":"8E2B115481C48E","user_header":"","comment_is_top":false,"comment_ctime":1621204322,"is_pvip":false,"replies":[{"id":"106112","content":"我试了，可以打开。","user_name":"作者回复","user_name_real":"高楼(Zee)","uid":"1785562","ctime":1621246493,"ip_address":"","comment_id":293075,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1621204322","product_id":100074001,"comment_content":"造数据相关的代码链接，点开之后是空白的，看不到代码详情","like_count":0,"discussions":[{"author":{"id":1785562,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/3e/da/e686a72b.jpg","nickname":"高楼(Zee)","note":"","ucode":"149202404A5ABC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":520059,"discussion_content":"我试了，可以打开。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1621246493,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":288198,"user_name":"garlic","can_delete":false,"product_type":"c1","uid":1019579,"ip_address":"","ucode":"FEB147EDB5774E","user_header":"https://static001.geekbang.org/account/avatar/00/0f/8e/bb/c039dc11.jpg","comment_is_top":false,"comment_ctime":1618362305,"is_pvip":true,"replies":[{"id":"104623","content":"如果数据在每个用户使用时是唯一的，那就应该是72万的数据量。","user_name":"作者回复","user_name_real":"高楼(Zee)","uid":"1785562","ctime":1618372981,"ip_address":"","comment_id":288198,"utype":1}],"discussion_count":1,"race_medal":1,"score":"1618362305","product_id":100074001,"comment_content":"造出生产量级数，确保应用，数据库，缓存在生产压力下运行；参数化用户输入数据，保障了数据多样性，造数很容易造成数据同化严重，热点集中，不能再现真实，老师400TPS跑半个小时 是否应该是72万数据量？","like_count":0,"discussions":[{"author":{"id":1785562,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/3e/da/e686a72b.jpg","nickname":"高楼(Zee)","note":"","ucode":"149202404A5ABC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":518544,"discussion_content":"如果数据在每个用户使用时是唯一的，那就应该是72万的数据量。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1618372981,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":287855,"user_name":"Geek_bbe4c8","can_delete":false,"product_type":"c1","uid":2534029,"ip_address":"","ucode":"4FD182C6BB0B05","user_header":"","comment_is_top":false,"comment_ctime":1618196523,"is_pvip":false,"replies":[{"id":"104534","content":"参数化数据有两种。一种是用户输入的但数据在铺底数据中没有；还有一种是铺底数据中必须有的数据，比如说用户名之类的。","user_name":"作者回复","user_name_real":"高楼(Zee)","uid":"1785562","ctime":1618201276,"ip_address":"","comment_id":287855,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1618196523","product_id":100074001,"comment_content":"老师，帮忙看下我的理解有没错。<br>铺底数据就是已存在的数据<br>参数化数据就是压力测试发起请求时产生的新数据","like_count":0,"discussions":[{"author":{"id":1785562,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/3e/da/e686a72b.jpg","nickname":"高楼(Zee)","note":"","ucode":"149202404A5ABC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":518444,"discussion_content":"参数化数据有两种。一种是用户输入的但数据在铺底数据中没有；还有一种是铺底数据中必须有的数据，比如说用户名之类的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1618201276,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":287416,"user_name":"一只胖虎","can_delete":false,"product_type":"c1","uid":1819788,"ip_address":"","ucode":"9017F3B00B7319","user_header":"https://static001.geekbang.org/account/avatar/00/1b/c4/8c/00e89428.jpg","comment_is_top":false,"comment_ctime":1617937413,"is_pvip":false,"replies":[{"id":"104387","content":"如果对方提供测试系统就可以连。如果不提供，那只能mock了。","user_name":"作者回复","user_name_real":"高楼(Zee)","uid":"1785562","ctime":1617941232,"ip_address":"","comment_id":287416,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1617937413","product_id":100074001,"comment_content":"老师真实环境下单都是要真正的支付钱的，这个怎么解决","like_count":0,"discussions":[{"author":{"id":1785562,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/3e/da/e686a72b.jpg","nickname":"高楼(Zee)","note":"","ucode":"149202404A5ABC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":518302,"discussion_content":"如果对方提供测试系统就可以连。如果不提供，那只能mock了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1617941232,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]}]}