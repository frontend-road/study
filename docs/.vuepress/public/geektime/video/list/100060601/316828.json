{"id":316828,"title":"35 | 所有权：Copy语义和Copy trait","content":"<p><strong>课件及Demo下载链接</strong><br>\n<a href=\"https://gitee.com/geektime-geekbang/geektime-Rust\">https://gitee.com/geektime-geekbang/geektime-Rust</a></p>","comments":[{"had_liked":false,"id":265947,"user_name":"pedro","can_delete":false,"product_type":"c3","uid":1200704,"ip_address":"","ucode":"F40C839DDFD599","user_header":"https://static001.geekbang.org/account/avatar/00/12/52/40/e57a736e.jpg","comment_is_top":false,"comment_ctime":1607073968,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":2,"product_id":100060601,"comment_content":"查看了一下汇编代码，这里的 `*self` 其实被编译器优化掉了，在 main 函数中直接通过寄存器来实现了栈上的拷贝，可能这就是 rust 编译器默默做的事情吧，如下：\n\n&lt;playground::A as core::clone::Clone&gt;::clone:\n\tsubq\t$56, %rsp\n\tleaq\t.L__unnamed_2(%rip), %rax\n\tleaq\t.L__unnamed_3(%rip), %rcx\n\txorl\t%edx, %edx\n\tmovl\t%edx, %r8d\n\tmovq\t%rdi, 48(%rsp)\n\tmovq\t%rsp, %rdi\n\tmovq\t%rax, %rsi\n\tmovl\t$1, %edx\n\tcallq\tcore::fmt::Arguments::new_v1\n\tmovq\t%rsp, %rdi\n\tcallq\t*std::io::stdio::_print@GOTPCREL(%rip)\n\taddq\t$56, %rsp\n\tretq\n\nplayground::main:\n\tsubq\t$120, %rsp\n\tleaq\t24(%rsp), %rdi\n\tcallq\t&lt;playground::A as core::clone::Clone&gt;::clone\n\tleaq\t24(%rsp), %rax\n\tmovq\t%rax, 96(%rsp)\n\tmovq\t96(%rsp), %rax\n\tmovq\t%rax, 112(%rsp)\n\tmovq\t%rax, %rdi\n\tleaq\t&lt;playground::A as core::fmt::Debug&gt;::fmt(%rip), %rsi\n\tcallq\tcore::fmt::ArgumentV1::new","like_count":2},{"had_liked":false,"id":297076,"user_name":"Geek_7c4953","can_delete":false,"product_type":"c3","uid":1809168,"ip_address":"","ucode":"359745D4725D4F","user_header":"","comment_is_top":false,"comment_ctime":1623301469,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":2,"product_id":100060601,"comment_content":"自己理解下来Copy这个trait只是指使编译器将赋值符号（=）的move语义覆盖为copy语义，而赋值的行为是没有任何变化的（都是栈内按位复制），只是告诉编译器这是一个安全的栈内复制。并且，跟你Clone的实现也没有任何关系。\n至于为什么实现Copy就要实现Clone，我感觉老师讲的不是很清楚，我暂时只能认为是语义逻辑上的统一。即一个数据结构，既然能被复制，那一定能被克隆，但这么想又感觉不是很严谨。\n","like_count":1},{"had_liked":false,"id":265941,"user_name":"pedro","can_delete":false,"product_type":"c3","uid":1200704,"ip_address":"","ucode":"F40C839DDFD599","user_header":"https://static001.geekbang.org/account/avatar/00/12/52/40/e57a736e.jpg","comment_is_top":false,"comment_ctime":1607073465,"is_pvip":false,"replies":null,"discussion_count":1,"race_medal":0,"score":2,"product_id":100060601,"comment_content":"有点不理解，希望老师解惑。对于这里的 Clone：\n```rust \n#![allow(unused)]\n\n#[derive(Debug)]\nstruct A;\n\n\nimpl Clone for A {\n    fn clone(&amp;self) -&gt; Self {\n        println!(&quot;cus&quot;);\n        *self\n    }\n}\n\nimpl Copy for A {}\n\nfn main() {\n    let a = A;\n    let b = a.clone();\n    println!(&quot;{:?}&quot;, a);\n}\n```\n\n`*self` 是解引用操作，这里应该会发生所有权的转移，即 a -&gt; b，但实际上没有发生转移，而是实现了按位复制，a 仍然可以打印出来，why，在 Clone 里面的操作有什么特殊性吗？","like_count":1,"discussions":[{"author":{"id":1809168,"avatar":"","nickname":"Geek_7c4953","note":"","ucode":"359745D4725D4F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":378600,"discussion_content":"因为你实现了Copy，所以return *self的时候就不再是move语义。有点递归的感觉...但又很自洽，神奇的rust","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1623300703,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":343554,"user_name":"万正宇","can_delete":false,"product_type":"c3","uid":2985047,"ip_address":"","ucode":"B8E70029D5F131","user_header":"https://static001.geekbang.org/account/avatar/00/2d/8c/57/b7bc2b9e.jpg","comment_is_top":false,"comment_ctime":1650903618,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":2,"product_id":100060601,"comment_content":"--035\nlet a: &amp;&#39;static str = &quot;abc&quot;;\n\nlet mut a = String::from(&quot;abc&quot;);\nlet b : &amp;mut str = &amp;mut a;   &#47;&#47;Deref\nlet c = b ;\n\ncopy = val_type和&amp;T\nmove = ref_type和&amp;mut T\n\n#[derive(Copy, Clone)]\n#[derive(Debug)]\nsimple bit-wise copy \n&amp;&#39;static str","like_count":0},{"had_liked":false,"id":300040,"user_name":"overheat","can_delete":false,"product_type":"c3","uid":2675695,"ip_address":"","ucode":"DD82D9194C26D0","user_header":"https://static001.geekbang.org/account/avatar/00/28/d3/ef/b3b88181.jpg","comment_is_top":false,"comment_ctime":1624961008,"is_pvip":false,"replies":null,"discussion_count":2,"race_medal":0,"score":2,"product_id":100060601,"comment_content":"还是没有总结为什么实现copy必须先有clone，仅仅是因为copy trait签名带了一个：clone吗？那么为啥带这个限制？","like_count":0,"discussions":[{"author":{"id":1000439,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/43/f7/abb7bfe3.jpg","nickname":"刘冲","note":"","ucode":"0C4F66921AE76C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":598029,"discussion_content":"不，copy就是通过调用clone来实现的。可以废弃copy语义，改为clone语义，这样你就能理解了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1672456750,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"四川","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2843586,"avatar":"https://static001.geekbang.org/account/avatar/00/2b/63/c2/83d737ff.jpg","nickname":"Amesy","note":"","ucode":"84D0B7D133520A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":542873,"discussion_content":"确实有点带过的意思，只因为Rust规定，以及Rust文档规定，Clone限定了Copy, Copy继承自Clone.","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1640869415,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]}]}