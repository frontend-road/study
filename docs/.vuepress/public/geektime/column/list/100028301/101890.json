{"id":101890,"title":"13 | [视频]实战：基于FFI实现的lua-resty-lrucache","content":"<p><video poster=\"https://static001.geekbang.org/resource/image/6a/f7/6ada085b44eddf37506b25ad188541f7.jpg\" preload=\"none\" controls=\"\"><source src=\"https://media001.geekbang.org/customerTrans/fe4a99b62946f2c31c2095c167b26f9c/30d99c0d-16d14089303-0000-0000-01d-dbacd.mp4\" type=\"video/mp4\"><source src=\"https://media001.geekbang.org/2ce11b32e3e740ff9580185d8c972303/a01ad13390fe4afe8856df5fb5d284a2-f2f547049c69fa0d4502ab36d42ea2fa-sd.m3u8\" type=\"application/x-mpegURL\"><source src=\"https://media001.geekbang.org/2ce11b32e3e740ff9580185d8c972303/a01ad13390fe4afe8856df5fb5d284a2-2528b0077e78173fd8892de4d7b8c96d-hd.m3u8\" type=\"application/x-mpegURL\"></video></p><p>你好，我是温铭。</p><p>今天的内容，我同样会以视频的形式来讲解。不过，在你进行视频学习之前，我想先问你这么几个问题：</p><ul>\n<li>lua-resty-lrucache 内部最重要的数据结构是什么？</li>\n<li>lua-resty-lrucache 有两种 FFI 的实现，我们今天讲的这一种更适合什么场景？</li>\n</ul><p>这几个问题，也是今天视频课要解决的核心内容，希望你可以先自己思考一下，并带着问题来学习今天的视频内容。</p><p>同时，我会给出相应的文字介绍，方便你在听完视频内容后，及时总结与复习。下面是今天这节课的文字介绍部分。</p><h2>今日核心</h2><p><a href=\"https://github.com/openresty/lua-resty-lrucache\">lua-resty-lrucache</a> 是一个使用 LuaJIT FFI 实现的 LRU 缓存库，可以在 worker 内缓存各种类型的数据。功能与之类似的是 shared dict，但 shared dict 只能存储字符串类型的数据。在大多数实际情况下，这两种缓存是配合在一起使用的——lrucache 作为一级缓存，shared dict 作为二级缓存。</p><p>lrucache 的实现，并没有涉及到 OpenResty 的 Lua API。所以，即使你以前没有用过OpenResty，也可以通过这个项目来学习如何使用 LuaJIT 的 FFI。</p><p>lrucache 仓库中包含了两种实现方案，一种是使用 Lua table 来实现缓存，另外一种则是使用 hash 表来实现。前者更适合命中率高的情况，后者适合命中率低的情况。两个方案没有哪个更好，要看你的线上环境更适合哪一个。</p><!-- [[[read_end]]] --><p>通过今天这个项目，你可以弄清楚要如何使用 FFI，并了解一个完整的 lua-resty 库应该包括哪些必要的内容。当然，我顺道也会介绍下 travis 的使用。</p><p>最后，还是想强调一点，在你面对一个陌生的开源项目时，文档和测试案例永远是最好的上手方式。而你后期如果要阅读源码，也不要先去抠细节，而是应该先去看主要的数据结构，围绕重点逐层深入。</p><h2>课件参考</h2><p>今天的课件已经上传到了我的GitHub上，你可以自己下载学习。</p><p>链接如下：<a href=\"https://github.com/iresty/geektime-slides\">https://github.com/iresty/geektime-slides</a></p><p>如果有不清楚的地方，你可以在留言区提问，另也可以在留言区分享你的学习心得。期待与你的对话，也欢迎你把这篇文章分享给你的同事、朋友，我们一起交流、一起进步。</p>","comments":[{"had_liked":false,"id":108677,"user_name":"Leon📷","can_delete":false,"product_type":"c1","uid":1219496,"ip_address":"","ucode":"B9BBD1EFAAE5A2","user_header":"https://static001.geekbang.org/account/avatar/00/12/9b/a8/6a391c66.jpg","comment_is_top":false,"comment_ctime":1561848567,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"35921586935","product_id":100028301,"comment_content":"专栏订阅人好少，跟陶辉老师的nginx一样，到后面都没什么人留言了，曲高和寡，不过留下来的都是未来的大牛，学好了未来在工作和求职过程中多了一份竞争力","like_count":9},{"had_liked":false,"id":106558,"user_name":"丢了个丢丢丢","can_delete":false,"product_type":"c1","uid":1165037,"ip_address":"","ucode":"BDD7E97E0E5E96","user_header":"https://static001.geekbang.org/account/avatar/00/11/c6/ed/89a2dc13.jpg","comment_is_top":false,"comment_ctime":1561344097,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"14446245985","product_id":100028301,"comment_content":"老师讲的好好哦！！！","like_count":3,"discussions":[{"author":{"id":1165037,"avatar":"https://static001.geekbang.org/account/avatar/00/11/c6/ed/89a2dc13.jpg","nickname":"丢了个丢丢丢","note":"","ucode":"BDD7E97E0E5E96","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":229,"discussion_content":"继续支持老师！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1561344132,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":107414,"user_name":"yswang","can_delete":false,"product_type":"c1","uid":1023688,"ip_address":"","ucode":"B9CB98838B215C","user_header":"https://static001.geekbang.org/account/avatar/00/0f/9e/c8/d261f700.jpg","comment_is_top":false,"comment_ctime":1561532396,"is_pvip":false,"replies":[{"id":"38893","content":"有一个 ffmpeg 的库：https:&#47;&#47;github.com&#47;daurnimator&#47;ffmpeg-lua-ffi，你可以试下是否满足需求","user_name":"作者回复","comment_id":107414,"uid":"1017955","ip_address":"","utype":1,"ctime":1561550044,"user_name_real":"温铭@OpenResty"}],"discussion_count":2,"race_medal":0,"score":"10151466988","product_id":100028301,"comment_content":"温大，我之前使用 openresty + ffmpeg 做了一个音频格式换行http服务，我使用先写一个 shell 转换脚本文件，例如：audio_converter.sh (sh文件中调用 ffmepg -i 转换命令)，然后使用 lua 的 os.execute(&quot;&#47;bin&#47;sh audio_converter.sh  a.mp3  b.ogg&quot;) 来调用 shell 脚本文件间接调用  ffmpeg 指令进行转换。 今天看到了 ffi ，ffi 可以调用 C 函数，请问，ffi 可以直接调用 ffmpeg 指令吗？如果可以的话，我就可以省去写一个 shell 文件来间接调用了。","like_count":2,"discussions":[{"author":{"id":1017955,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/88/63/88cf886d.jpg","nickname":"温铭@APISIX","note":"","ucode":"343567571DA16A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":455502,"discussion_content":"有一个 ffmpeg 的库：https://github.com/daurnimator/ffmpeg-lua-ffi，你可以试下是否满足需求","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1561550044,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1545484,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/jaOQZZRldayELmckBTq4VQHUgepwn8ibSLuEEB0NNwRnMyIqRRPj3ms38cjj3ySicEzkruV44lxDMdbdgUkn6ibTg/132","nickname":"Geek_e59303","note":"","ucode":"C136BDB95D8A95","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":48953,"discussion_content":"这个库8年前了，OR还没诞生把","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573539933,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":251855,"user_name":"沈康","can_delete":false,"product_type":"c1","uid":1611025,"ip_address":"","ucode":"02AFA50738AB8E","user_header":"https://static001.geekbang.org/account/avatar/00/18/95/11/eb431e52.jpg","comment_is_top":false,"comment_ctime":1601909632,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1601909632","product_id":100028301,"comment_content":"HAHA，刚学完陶辉老师的nginx，跃跃欲试啊","like_count":0},{"had_liked":false,"id":229168,"user_name":"dhf","can_delete":false,"product_type":"c1","uid":1113370,"ip_address":"","ucode":"E31FFCF9ED6BD9","user_header":"https://static001.geekbang.org/account/avatar/00/10/fd/1a/be30769f.jpg","comment_is_top":false,"comment_ctime":1592914343,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1592914343","product_id":100028301,"comment_content":"get方法里维护lru的时候，不需要考虑线程安全吗","like_count":0},{"had_liked":false,"id":135568,"user_name":"微众_廖卫军","can_delete":false,"product_type":"c1","uid":1253058,"ip_address":"","ucode":"F08868420CCE7C","user_header":"https://static001.geekbang.org/account/avatar/00/13/1e/c2/7e67107f.jpg","comment_is_top":false,"comment_ctime":1569215646,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1569215646","product_id":100028301,"comment_content":"温铭老师，您好！ FFI调用自己封装的函数库，ffi.load(name[,global])，是否只能是动态库？不能调用静态库吗？  谢谢！","like_count":0},{"had_liked":false,"id":113972,"user_name":"chrisforbt","can_delete":false,"product_type":"c1","uid":1600999,"ip_address":"","ucode":"CA000E8A615001","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/z5OUcd5RD7gMIevhHORHFcQsXNlZ4UxIU2jS6UwyUIM0w0nXI57nZKCXsibmN2o71WLtg5YXuJKeMNkItEzEaGg/132","comment_is_top":false,"comment_ctime":1563196925,"is_pvip":false,"replies":[{"id":"41587","content":"你这种是主动更新，MySQL 数据变化后主动通知前面的缓存。主动更新的话，也不用主动去删除缓存，而是在 key 里面加入一个版本号，数据变化后版本号变了，那么在缓存中就查找不到数据，这时候就回源到 MySQL 了。<br>也可以被动更新，根据你的业务特性，给缓存设置一个过期时间，定期的去数据库查询。<br>第一种版本号的方法是比较合适的，当然实现起来比被动更新复杂一些。","user_name":"作者回复","comment_id":113972,"uid":"1017955","ip_address":"","utype":1,"ctime":1563238530,"user_name_real":"温铭@OpenResty"}],"discussion_count":1,"race_medal":0,"score":"1563196925","product_id":100028301,"comment_content":"老师，我想问个问题。我计划将用户请求的参数+路径+方式做为key，把数据存在lru-cache、share dict以及redis中，mysql数据源更新了，我就得将缓存全删了。那我是应该把mysql的数据源和前面生成的key关联起来，一旦更新了数据源，就去找相关的key，将其删除吗？还有更佳的缓存更新方式吗，期待您的回复。","like_count":0,"discussions":[{"author":{"id":1017955,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/88/63/88cf886d.jpg","nickname":"温铭@APISIX","note":"","ucode":"343567571DA16A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":458461,"discussion_content":"你这种是主动更新，MySQL 数据变化后主动通知前面的缓存。主动更新的话，也不用主动去删除缓存，而是在 key 里面加入一个版本号，数据变化后版本号变了，那么在缓存中就查找不到数据，这时候就回源到 MySQL 了。\n也可以被动更新，根据你的业务特性，给缓存设置一个过期时间，定期的去数据库查询。\n第一种版本号的方法是比较合适的，当然实现起来比被动更新复杂一些。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1563238530,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":112487,"user_name":"emen","can_delete":false,"product_type":"c1","uid":1106898,"ip_address":"","ucode":"A3C0A2BF95A272","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJrvZAOiahN7YnSviaDANNu1uHIvQEEE8icl9libuibhuIZgEOt28KG2jKYqu6uRNILicibb8jM6icHicUXj0A/132","comment_is_top":false,"comment_ctime":1562744881,"is_pvip":false,"replies":[{"id":"41188","content":"改用 shared dict，或者是使用 lua-resty-worker-event 这样的库","user_name":"作者回复","comment_id":112487,"uid":"1017955","ip_address":"","utype":1,"ctime":1562909913,"user_name_real":"温铭@OpenResty"}],"discussion_count":1,"race_medal":0,"score":"1562744881","product_id":100028301,"comment_content":"温铭老师您好，关于lrucache在使用过程中有个疑惑烦请老师看看。<br>openresty环境：1个master进程、X个worker进程<br>在init_worker阶段中注册了缓存信息如：cache.set(&quot;key1&quot;,&quot;val1&quot;)<br>在content阶段修改了缓存信息：cache.set(&quot;key1&quot;,&quot;val2&quot;)<br>此操作是否仅为更新了当前worker的缓存信息，而无法跨worker更新。<br>如需完成跨worker更新应如何处理呢？","like_count":0,"discussions":[{"author":{"id":1017955,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/88/63/88cf886d.jpg","nickname":"温铭@APISIX","note":"","ucode":"343567571DA16A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":457759,"discussion_content":"改用 shared dict，或者是使用 lua-resty-worker-event 这样的库","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1562909913,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":110236,"user_name":"星亦辰","can_delete":false,"product_type":"c1","uid":1284592,"ip_address":"","ucode":"B0388FBFFDEE7E","user_header":"https://static001.geekbang.org/account/avatar/00/13/99/f0/d9343049.jpg","comment_is_top":false,"comment_ctime":1562212357,"is_pvip":true,"replies":[{"id":"40927","content":"OpenResty 中的 worker 是互相独立的，如果你在 worker 中使用 ffi.load 来加载 so，那么有几个 worker 进程，就会有几个 so 实例。","user_name":"作者回复","comment_id":110236,"uid":"1017955","ip_address":"","utype":1,"ctime":1562746370,"user_name_real":"温铭@OpenResty"}],"discussion_count":1,"race_medal":0,"score":"1562212357","product_id":100028301,"comment_content":"请教老师一个问题。<br><br>我用c语言实现了跨平台的so类库。 用ffi.load 来加载。 <br>那么，在openrestry 中会有几个 so 函数的实例呢？ <br>按照操作系统的知识,共享库在系统中只有一个实例。<br><br>如果只有一个，那么我们在不同的worker 中调用so 里的函数中，对于一个so 内的资源是否存在冲突呢？ ","like_count":0,"discussions":[{"author":{"id":1017955,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/88/63/88cf886d.jpg","nickname":"温铭@APISIX","note":"","ucode":"343567571DA16A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":456784,"discussion_content":"OpenResty 中的 worker 是互相独立的，如果你在 worker 中使用 ffi.load 来加载 so，那么有几个 worker 进程，就会有几个 so 实例。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1562746370,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":109689,"user_name":"小飞哥 ‍超級會員","can_delete":false,"product_type":"c1","uid":1110049,"ip_address":"","ucode":"417F9563B3005B","user_header":"https://static001.geekbang.org/account/avatar/00/10/f0/21/104b9565.jpg","comment_is_top":false,"comment_ctime":1562077300,"is_pvip":false,"replies":[{"id":"40928","content":"我的理解，OpenResty 的复杂性在于各个子项目之间的配合，还是需要有特定的场景和业务需求来驱动，才会更有感觉。你可以参与到 OpenResty 相关的开源项目中来，切身体会下。","user_name":"作者回复","comment_id":109689,"uid":"1017955","ip_address":"","utype":1,"ctime":1562746479,"user_name_real":"温铭@OpenResty"}],"discussion_count":1,"race_medal":0,"score":"1562077300","product_id":100028301,"comment_content":"都有视频了，温老师，能否现场演示一下， 让我们见识 openresty 的复杂性。 一些文档库 官网描述等，能否现场打开了解下。  我们自己打开后，就没有然后了。","like_count":0,"discussions":[{"author":{"id":1017955,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/88/63/88cf886d.jpg","nickname":"温铭@APISIX","note":"","ucode":"343567571DA16A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":456516,"discussion_content":"我的理解，OpenResty 的复杂性在于各个子项目之间的配合，还是需要有特定的场景和业务需求来驱动，才会更有感觉。你可以参与到 OpenResty 相关的开源项目中来，切身体会下。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1562746479,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":107237,"user_name":". 。o O 〇","can_delete":false,"product_type":"c1","uid":1544980,"ip_address":"","ucode":"C1E75E940A0B02","user_header":"https://static001.geekbang.org/account/avatar/00/17/93/14/7e078b32.jpg","comment_is_top":false,"comment_ctime":1561507416,"is_pvip":false,"replies":[{"id":"38910","content":"这个没有遇到过。是否是这个 bug：https:&#47;&#47;github.com&#47;openresty&#47;luajit2&#47;issues&#47;42？ 用最新的 OpenResty 版本是否可以重现呢？<br>如果还是有问题，欢迎给官方提交 issue","user_name":"作者回复","comment_id":107237,"uid":"1017955","ip_address":"","utype":1,"ctime":1561551745,"user_name_real":"温铭@OpenResty"}],"discussion_count":2,"race_medal":0,"score":"1561507416","product_id":100028301,"comment_content":"老师好，我碰到一个问题，我用的lrucache，会卡在get set那，并且worker进程cpu100%，整个worker不工作。换成lrucache.pureffi就好了，不知道老师碰到过没","like_count":0,"discussions":[{"author":{"id":1017955,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/88/63/88cf886d.jpg","nickname":"温铭@APISIX","note":"","ucode":"343567571DA16A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":455433,"discussion_content":"这个没有遇到过。是否是这个 bug：https://github.com/openresty/luajit2/issues/42？ 用最新的 OpenResty 版本是否可以重现呢？\n如果还是有问题，欢迎给官方提交 issue","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1561551745,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1544980,"avatar":"https://static001.geekbang.org/account/avatar/00/17/93/14/7e078b32.jpg","nickname":". 。o O 〇","note":"","ucode":"C1E75E940A0B02","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":569,"discussion_content":"不是，是https://github.com/openresty/lua-resty-lrucache/issues/39这个，openresty用的1.13.6.2","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1561710638,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":106682,"user_name":"冰沁宇诺","can_delete":false,"product_type":"c1","uid":1104553,"ip_address":"","ucode":"77951251EE6D78","user_header":"https://static001.geekbang.org/account/avatar/00/10/da/a9/8fdfff70.jpg","comment_is_top":false,"comment_ctime":1561371612,"is_pvip":false,"replies":[{"id":"38908","content":"可以的，在这个阶段启动一个 timer 去读取数据库，然后放到 shared dict 中。但要注意，这个数据是可以丢失的，代码中要处理这种异常。","user_name":"作者回复","comment_id":106682,"uid":"1017955","ip_address":"","utype":1,"ctime":1561551509,"user_name_real":"温铭@OpenResty"}],"discussion_count":1,"race_medal":0,"score":"1561371612","product_id":100028301,"comment_content":"老师，如果我想从数据库中初始化一些基本不变的数据到shared_dict中，应该怎么做，init_by_lua 阶段可以吗","like_count":0,"discussions":[{"author":{"id":1017955,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/88/63/88cf886d.jpg","nickname":"温铭@APISIX","note":"","ucode":"343567571DA16A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":455175,"discussion_content":"可以的，在这个阶段启动一个 timer 去读取数据库，然后放到 shared dict 中。但要注意，这个数据是可以丢失的，代码中要处理这种异常。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1561551509,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]}]}