{"id":647827,"title":"15｜深入使用LLMChain，给AI连上Google和计算器","content":"<p>你好，我是徐文浩。</p><p>上一讲里，我们一起学习了怎么通过LangChain这个Python包，链式地调用OpenAI的API。通过链式调用的方式，我们可以把一个需要询问AI多轮才能解决的问题封装起来，把一个通过自然语言多轮调用才能解决的问题，变成了一个函数调用。</p><p>不过，LangChain能够帮到我们的远不止这一点。前一阵，ChatGPT发布了 <a href=\"https://openai.com/blog/chatgpt-plugins\">Plugins</a> 这个插件机制。通过Plugins，ChatGPT可以浏览整个互联网，还可以接上Wolfram这样的科学计算工具，能够实现很多原先光靠大语言模型解决不好的问题。不过，这个功能目前还是处于wait list的状态，我也还没有拿到权限。</p><p>不过没有关系，我们通过LangChain也能实现这些类似的功能。今天这一讲，我们就继续深入挖掘一下Langchain，看看它怎么解决这些问题。</p><h2>解决AI数理能力的难题</h2><p>很多人发现，虽然ChatGPT回答各种问题的时候都像模像样的，但是一到计算三位数乘法的时候就露馅儿了。感觉它只是快速估计了一个数字，而不是真的准确计算了。我们来看下面这段代码，我们让OpenAI帮我们计算一下 352 x 493 等于多少，你会发现，它算得大差不差，但还是算错了。这就很尴尬，如果我们真的想要让它来担任一个小学数学的助教，总是给出错误的答案也不是个事儿。</p><!-- [[[read_end]]] --><pre><code class=\"language-python\">import openai, os\n\nopenai.api_key = os.environ.get(\"OPENAI_API_KEY\")\n\nfrom langchain.prompts import PromptTemplate\nfrom langchain.llms import OpenAI\nfrom langchain.chains import LLMChain\n\nllm = OpenAI(model_name=\"text-davinci-003\", max_tokens=2048, temperature=0.5)\nmultiply_prompt = PromptTemplate(template=\"请计算一下{question}是多少?\", input_variables=[\"question\"])\nmath_chain = LLMChain(llm=llm, prompt=multiply_prompt, output_key=\"answer\")\nanswer = math_chain.run({\"question\": \"352乘以493\"})\nprint(\"OpenAI API 说答案是:\", answer)\n\npython_answer = 352 * 493\nprint(\"Python 说答案是:\", python_answer)\n</code></pre><p>输出结果：</p><pre><code class=\"language-plain\">OpenAI API 说答案是: \n352 x 493 = 174,336\nPython 说答案是: 173536\n</code></pre><p><span class=\"reference\">注：可以看到，OpenAI给出的结果，答案是错误的。</span></p><p>不过，有人很聪明，说虽然ChatGPT直接算这些数学题不行，但是它不是会写代码吗？我们直接让它帮我们写一段利用Python计算这个数学式子的代码不就好了吗？的确，如果你让它写一段Python代码，给出的代码是没有问题的。</p><pre><code class=\"language-python\">multiply_by_python_prompt = PromptTemplate(template=\"请写一段Python代码，计算{question}?\", input_variables=[\"question\"])\nmath_chain = LLMChain(llm=llm, prompt=multiply_by_python_prompt, output_key=\"answer\")\nanswer = math_chain.run({\"question\": \"352乘以493\"})\nprint(answer)\n</code></pre><p>输出结果：</p><pre><code class=\"language-python\">print(352 * 493)\n</code></pre><p>不过，我们不想再把这段代码，复制粘贴到Python的解释器或者Notebook里面，再去手工执行一遍。所以，我们可以在后面再调用一个Python解释器，让整个过程自动完成，对应的代码我也放在了下面。</p><pre><code class=\"language-python\">multiply_by_python_prompt = PromptTemplate(template=\"请写一段Python代码，计算{question}?\", input_variables=[\"question\"])\nmath_chain = LLMChain(llm=llm, prompt=multiply_by_python_prompt, output_key=\"answer\")\nanswer_code = math_chain.run({\"question\": \"352乘以493\"})\n\nfrom langchain.utilities import PythonREPL\npython_repl = PythonREPL()\nresult = python_repl.run(answer_code)\nprint(result)\n</code></pre><p>输出结果：</p><pre><code class=\"language-python\">173536\n</code></pre><p><span class=\"reference\">注：生成的Python脚本是正确的，再通过调用Python解释器就能得到正确的计算结果。</span></p><p>可以看到，LangChain里面内置了一个utilities的包，里面包含了PythonREPL这个类，可以实现对Python解释器的调用。如果你去翻看一下对应代码的源码的话，它其实就是简单地调用了一下系统自带的exec方法，来执行Python代码。utilities里面还有很多其他的类，能够实现很多功能，比如可以直接运行Bash脚本，调用Google Search的API等等。你可以去LangChain的<a href=\"https://python.langchain.com/en/latest/modules/agents/tools.html\">文档</a>，看看它内置的这些工具类有哪些。</p><p>如果你仔细想一下，你会发现这其实也是一种链式调用。只不过，调用链里面的第二步，不是去访问OpenAI的API而已。所以，对于这些工具能力，LangChain也把它们封装成了LLMChain的形式。比如刚才的数学计算问题，是一个先生成Python脚本，再调用Python解释器的过程，LangChain就把这个过程封装成了一个叫做 LLMMathChain的LLMChain。不需要自己去生成代码，再调用PythonREPL，只要直接调用LLMMathChain，它就会在背后把这一切都给做好，对应的代码我也放在下面。</p><pre><code class=\"language-python\">from langchain import LLMMathChain\n\nllm_math = LLMMathChain(llm=llm, verbose=True)\nresult = llm_math.run(\"请计算一下352乘以493是多少?\")\nprint(result)\n</code></pre><p>输出结果：</p><pre><code class=\"language-python\">&gt; Entering new LLMMathChain chain...\n请计算一下352乘以493是多少?\n\nprint(352 * 493)\n\nAnswer: 173536\n&gt; Finished chain.\nAnswer: 173536\n</code></pre><p>LangChain也把前面讲过的utilities包里面的很多功能，都封装成了Utility Chains。比如，SQLDatabaseChain可以直接根据你的数据库生成SQL，然后获取数据，LLMRequestsChain可以通过API调用外部系统，获得想要的答案。你可以直接在LangChain关于Utility Chains的<a href=\"https://python.langchain.com/en/latest/modules/agents/tools.html\">文档</a>里面，找到有哪些工具可以用。</p><p><img src=\"https://static001.geekbang.org/resource/image/aa/7a/aa939d818820b0797280d431cc87037a.png?wh=1920x1452\" alt=\"图片\" title=\"LLMathChain通过OpenAI生成Python代码，再通过REPL执行Python代码，完成数学计算\"></p><h2>通过RequestsChain获取实时外部信息</h2><p>这里我们来重点讲一讲如何通过API来调用外部系统，获得想要的答案。之前在介绍llama-index的时候，我们已经介绍过一种为AI引入外部知识的方法了，那就是计算这些外部知识的Embedding，然后作为索引先保存下来。但是，这只适用于处理那些预先准备好会被问到的知识，比如一本书、一篇论文。这些东西，内容多但是固定，也不存在时效性问题，我们可以提前索引好，而且用户问的问题往往也有很强的相似性。</p><p>但是，对于时效性强的问题，这个方法不太适用，因为我们可能没有必要不停地更新索引。比如，你想要知道实时的天气情况，我们不太可能把全球所有城市最新的天气信息每隔几分钟都索引一遍。</p><p>这个时候，我们可以使用LLMRequestsChain，通过一个HTTP请求来得到问题的答案。最简单粗暴的一个办法，就是直接通过一个HTTP请求来问一下Google。</p><pre><code class=\"language-python\">from langchain.chains import LLMRequestsChain\n\ntemplate = \"\"\"在 &gt;&gt;&gt; 和 &lt;&lt;&lt; 直接是来自Google的原始搜索结果.\n请把对于问题 '{query}' 的答案从里面提取出来，如果里面没有相关信息的话就说 \"找不到\"\n请使用如下格式：\nExtracted:&lt;answer or \"找不到\"&gt;\n&gt;&gt;&gt; {requests_result} &lt;&lt;&lt;\nExtracted:\"\"\"\n\nPROMPT = PromptTemplate(\n    input_variables=[\"query\", \"requests_result\"],\n    template=template,\n)\nrequests_chain = LLMRequestsChain(llm_chain = LLMChain(llm=OpenAI(temperature=0), prompt=PROMPT))\nquestion = \"今天上海的天气怎么样？\"\ninputs = {\n    \"query\": question,\n    \"url\": \"https://www.google.com/search?q=\" + question.replace(\" \", \"+\")\n}\nresult=requests_chain(inputs)\nprint(result)\nprint(result['output'])\n</code></pre><p>输出结果：</p><pre><code class=\"language-plain\">{'query': '今天上海的天气怎么样？', 'url': 'https://www.google.com/search?q=今天上海的天气怎么样？', 'output': '小雨; 10℃～15℃; 东北风 风力4-5级'}\n小雨; 10℃～15℃; 东北风 风力4-5级\n</code></pre><p>我们来看看这段代码，基于LLMRequestsChain，我们用到了之前使用过的好几个技巧。</p><ol>\n<li>首先，因为我们是简单粗暴地搜索Google。但是我们想要的是一个有价值的天气信息，而不是整个网页。所以，我们还需要通过ChatGPT把网页搜索结果里面的答案给找出来。所以我们定义了一个PromptTemplate，通过一段提示语，让OpenAI为我们在搜索结果里面，找出问题的答案，而不是去拿原始的HTML页面。</li>\n<li>然后，我们使用了LLMRequestsChain，并且把刚才PromptTemplate构造的一个普通的LLMChain，作为构造函数的一个参数，传给LLMRequestsChain，帮助我们在搜索之后处理搜索结果。</li>\n<li>对应的搜索词，通过query这个参数传入，对应的原始搜索结果，则会默认放到requests_results里。而通过我们自己定义的PromptTemplate抽取出来的最终答案，则会放到output这个输出参数里面。</li>\n</ol><p>我们运行一下，就可以看到我们通过简单搜索Google加上通过OpenAI提取搜索结果里面的答案，就得到了最新的天气信息。</p><h2>通过TransformationChain转换数据格式</h2><p>有了实时的外部数据，我们就又有很多做应用的创意了。比如说，我们可以根据气温来推荐大家穿什么衣服。我们可以要求如果最低温度低于0度，就要推荐用户去穿羽绒服。或者，根据是否下雨来决定要不要提醒用户出门带伞。</p><p>不过，在现在的返回结果里，天气信息（天气、温度、风力）只是一段文本，而不是可以直接获取的JSON格式。当然，我们可以在LLMChain里面再链式地调用一次OpenAI的接口，把这段文本转换成JSON格式。但是，这样做的话，一来还要消耗更多的Token、花更多的钱，二来这也会进一步增加程序需要运行的时间，毕竟一次往返的网络请求也是很慢的。这里的文本格式其实很简单，我们完全可以通过简单的字符串处理完成解析。</p><pre><code class=\"language-python\">import re\ndef parse_weather_info(weather_info: str) -&gt; dict:\n    # 将天气信息拆分成不同部分\n    parts = weather_info.split('; ')\n\n    # 解析天气\n    weather = parts[0].strip()\n\n    # 解析温度范围，并提取最小和最大温度\n    temperature_range = parts[1].strip().replace('℃', '').split('～')\n    temperature_min = int(temperature_range[0])\n    temperature_max = int(temperature_range[1])\n\n    # 解析风向和风力\n    wind_parts = parts[2].split(' ')\n    wind_direction = wind_parts[0].strip()\n    wind_force = wind_parts[1].strip()\n\n    # 返回解析后的天气信息字典\n    weather_dict = {\n        'weather': weather,\n        'temperature_min': temperature_min,\n        'temperature_max': temperature_max,\n        'wind_direction': wind_direction,\n        'wind_force': wind_force\n    }\n\n    return weather_dict\n\n# 示例\nweather_info = \"小雨; 10℃～15℃; 东北风 风力4-5级\"\nweather_dict = parse_weather_info(weather_info)\nprint(weather_dict)\n</code></pre><p>输出结果：</p><pre><code class=\"language-python\">{'weather': '小雨', 'temperature': {'min': 10, 'max': 15}, 'wind': {'direction': '东北风', 'level': '风力4-5级'}}\n</code></pre><p><span class=\"reference\">注：上面这段代码，其实是我让GPT-4写的。</span></p><p>我们在这里实现了一个 <strong>parse_weather_info</strong> 函数，可以把前面LLMRequestsChain的输出结果，解析成一个dict。不过，我们能不能更进一步，把这个解析的逻辑，也传到LLMChain的链式调用的最后呢？答案当然是可以的。对于这样的要求，Langchain里面也有一个专门的解决方案，叫做TransformChain，也就是做格式转换。</p><pre><code class=\"language-python\">from langchain.chains import TransformChain, SequentialChain\n\ndef transform_func(inputs: dict) -&gt; dict:\n    text = inputs[\"output\"]\n    return {\"weather_info\" : parse_weather_info(text)}\n\ntransformation_chain = TransformChain(input_variables=[\"output\"], \n                                      output_variables=[\"weather_info\"], transform=transform_func)\n\nfinal_chain = SequentialChain(chains=[requests_chain, transformation_chain], \n                              input_variables=[\"query\", \"url\"], output_variables=[\"weather_info\"])\nfinal_result = final_chain.run(inputs)\nprint(final_result)\n</code></pre><p>输出结果：</p><pre><code class=\"language-python\">{'weather': '小雨', 'temperature': {'min': 10, 'max': 15}, 'wind': {'direction': '东北风', 'level': '风力4-5级'}}\n</code></pre><p><span class=\"reference\">注：在requests_chain后面跟上一个transformation_chain，我们就能把结果解析成dict，供后面其他业务使用结构化的数据。</span></p><ol>\n<li>我们在这里，先定义了一个transform_func，对前面的parse_weather_info函数做了一下简单的封装。它的输入，是整个LLMChain里，执行到TransformChain之前的整个输出结果的dict。我们前面看到整个LLMRequestsChain里面的天气信息的文本内容，是通过output这个key拿到的，所以这里我们也是先通过它来拿到天气信息的文本内容，再调用 parse_weather_info 解析，并且把结果输出到 weather_info 这个字段里。</li>\n<li>然后，我们就定义了一个TransformChain，里面的输入参数就是 output，输出参数就是 weather_info。</li>\n<li>最后，我们通过上一讲用过的 SequentialChain，将前面的LLMRequestsChain和这里的TransformChain串联到一起，变成一个新的叫做 final_chain 的LLMChain。</li>\n</ol><p>在这三步完成之后，未来我们想要获得天气信息，并且拿到一个dict形式的输出，只要调用 final_chain的run方法，输入我们关于天气的搜索文本就好了。</p><p><img src=\"https://static001.geekbang.org/resource/image/e2/45/e29294012c309f3f808693cea5216445.png?wh=1920x2181\" alt=\"图片\" title=\"通过三个步骤，拿到最后结构化的天气信息\"></p><p>最后，我们来梳理一下final_chain都做了哪些事。</p><ol>\n<li>通过一个HTTP请求，根据搜索词拿到Google的搜索结果页。</li>\n<li>把我们定义的Prompt提交给OpenAI，然后把我们搜索的问题和结果页都发给了OpenAI，让它从里面提取出搜索结果页里面的天气信息。</li>\n<li>最后我们通过 transform_func 解析拿到的天气信息的文本，被转换成一个dict。这样，后面的程序就好处理了。</li>\n</ol><h2>通过VectorDBQA来实现先搜索再回复的能力</h2><p>此外，还有一个常用的LLMChain，就是我们之前介绍的llama-index的使用场景，也就是针对自己的资料库进行问答。我们预先把资料库索引好，然后每次用户来问问题的时候，都是先到这个资料库里搜索，再把问题和答案一并交给AI，让它去组织语言回答。</p><pre><code class=\"language-plain\">from langchain.embeddings.openai import OpenAIEmbeddings\nfrom langchain.vectorstores import FAISS\nfrom langchain.text_splitter import SpacyTextSplitter\nfrom langchain import OpenAI, VectorDBQA\nfrom langchain.document_loaders import TextLoader\n\nllm = OpenAI(temperature=0)\nloader = TextLoader('./data/ecommerce_faq.txt')\ndocuments = loader.load()\ntext_splitter = SpacyTextSplitter(chunk_size=256, pipeline=\"zh_core_web_sm\")\ntexts = text_splitter.split_documents(documents)\n\nembeddings = OpenAIEmbeddings()\ndocsearch = FAISS.from_documents(texts, embeddings)\n\nfaq_chain = VectorDBQA.from_chain_type(llm=llm, vectorstore=docsearch, verbose=True)\n</code></pre><p><span class=\"reference\">注：上面的代码创建了一个基于 FAISS 进行向量存储的 docsearch的索引，以及基于这个索引的VectorDBQA这个LLMChain。</span></p><p>先来看第一段代码，我们通过一个TextLoader把文件加载进来，还通过SpacyTextSplitter给文本分段，确保每个分出来的Document都是一个完整的句子。因为我们这里的文档是电商FAQ的内容，都比较短小精悍，所以我们设置的chunk_size只有256。然后，我们定义了使用OpenAIEmbeddings来给文档创建Embedding，通过FAISS把它存储成一个VectorStore。最后，我们通过VectorDBQA的from_chain_type 定义了一个LLM。对应的FAQ内容，我是请ChatGPT为我编造之后放在了ecommerce_faq.txt这个文件里。</p><p>问题：</p><pre><code class=\"language-plain\">question = \"请问你们的货，能送到三亚吗？大概需要几天？\"\nresult = faq_chain.run(question)\nprint(result)\n</code></pre><p>输出结果：</p><pre><code class=\"language-plain\">&gt; Entering new VectorDBQA chain...\n&gt; Finished chain.\n 我们支持全国大部分省份的配送，包括三亚。一般情况下，大部分城市的订单在2-3个工作日内送达，偏远地区可能需要5-7个工作日。具体送货时间可能因订单商品、配送地址和物流公司而异。\n</code></pre><p>问题：</p><pre><code class=\"language-plain\">question = \"请问你们的退货政策是怎么样的？\" \nresult = faq_chain.run(question)\nprint(result)\n</code></pre><p>输出结果：</p><pre><code class=\"language-plain\">&gt; Entering new VectorDBQA chain...\n&gt; Finished chain.\n自收到商品之日起7天内，如产品未使用、包装完好，您可以申请退货。某些特殊商品可能不支持退货，请在购买前查看商品详情页面的退货政策。\n</code></pre><p>我向它提了两个不同类型的问题，faq_chain都能够正确地回答出来。你可以去看看data目录下面的ecommerce_faq.txt文件，看看它的回答是不是和文档写的内容一致。在VectorDBQA这个LLMChain背后，其实也是通过一系列的链式调用，来完成搜索VectorStore，再向AI发起Completion请求这样两个步骤的。</p><p>可以看到LLMChain是一个很强大的武器，它可以把解决一个问题需要的多个步骤串联到一起。这个步骤可以是调用我们的语言模型，也可以是调用一个外部API，或者在内部我们定义一个Python函数。这大大增强了我们利用大语言模型的能力，特别是能够弥补它的很多不足之处，比如缺少有时效的信息，通过HTTP调用比较慢等等。</p><h2>小结</h2><p>好了，这一讲到这里也就结束了。</p><p>我们可以看到，Langchain的链式调用并不局限于使用大语言模型的接口。这一讲里，我们就看到四种常见的将大语言模型的接口和其他能力结合在一起的链式调用。</p><ol>\n<li>LLMMathChain能够通过Python解释器变成一个计算器，让AI能够准确地进行数学运算。</li>\n<li>通过RequestsChain，我们可以直接调用外部API，然后再让AI从返回的结果里提取我们关心的内容。</li>\n<li>TransformChain能够让我们根据自己的要求对数据进行处理和转化，我们可以把AI返回的自然语言的结果进一步转换成结构化的数据，方便其他程序去处理。</li>\n<li>VectorDBQA能够完成和llama-index相似的事情，只要预先做好内部数据资料的Embedding和索引，通过对LLMChain进行一次调用，我们就可以直接获取回答的结果。</li>\n</ol><p>这些能力大大增强了AI的实用性，解决了几个之前大语言模型处理得不好的问题，包括数学计算能力、实时数据能力、和现有程序结合的能力，以及搜索属于自己的资料库的能力。你完全可以定义自己需要的LLMChain，通过程序来完成各种任务，然后合理地组合不同类型的LLMChain对象，来实现连ChatGPT都做不到的事情。而ChatGPT Plugins的实现机制，其实也是类似的。</p><h2>思考题</h2><p>最后，我给你留一道思考题。我们前面说过，Langchain里有SQLDatabaseChain可以直接让我们写需求访问数据库。在官方文档里也给出了对应的<a href=\"https://langchain.readthedocs.io/en/latest/modules/chains/examples/sqlite.html\">例子</a>，你可以去试一试体验一下，想一想它是通过什么样的提示语信息，来让AI写出可以直接执行的SQL的？</p><p>欢迎你把你体验之后的感受以及思考后的结果分享在评论区，也欢迎你把这一讲分享给感兴趣的朋友，我们下一讲再见！</p><h2>推荐试用</h2><p>我们目前对于Langchain的讲解，都是通过Python编程的方式来实现真实业务场景的需求的。有人直接为Langchain做了一个可以拖拽的图形界面叫做 <a href=\"https://github.com/logspace-ai/langflow\">LangFlow</a>。你可以试着下载体验一下，看看图形界面是不是可以进一步提升你的效率。</p>","neighbors":{"left":{"article_title":"14｜链式调用，用LangChain简化多步提示语","id":646987},"right":{"article_title":"16｜Langchain里的“记忆力”，让AI只记住有用的事儿","id":648167}},"comments":[{"had_liked":false,"id":372530,"user_name":"君为","can_delete":false,"product_type":"c1","uid":1201843,"ip_address":"北京","ucode":"A1125F0CA4E75D","user_header":"https://static001.geekbang.org/account/avatar/00/12/56/b3/29c814af.jpg","comment_is_top":false,"comment_ctime":1681261632,"is_pvip":false,"replies":[{"id":135976,"content":"申请开通海外的Azure OpenAI，额度和性能都更有保障","user_name":"作者回复","user_name_real":"编辑","uid":1053568,"ctime":1681286930,"ip_address":"上海","comment_id":372530,"utype":1}],"discussion_count":2,"race_medal":0,"score":2,"product_id":100541001,"comment_content":"老师你好，chain和pipe的原理还是比较像，学完这讲打开了我对ChatGPT可应用空间。实际应用中最大的问题还是api 的响应速度和接口限流。\n请问老师有没有更好的解决办法？目前我知道的是多个账号负载均衡和调用容错重试。","like_count":8,"discussions":[{"author":{"id":1053568,"avatar":"https://static001.geekbang.org/account/avatar/00/10/13/80/8de66543.jpg","nickname":"徐文浩","note":"","ucode":"1D39AC564172E9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":613356,"discussion_content":"申请开通海外的Azure OpenAI，额度和性能都更有保障","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1681286930,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"上海","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":1,"child_discussions":[{"author":{"id":1660533,"avatar":"https://static001.geekbang.org/account/avatar/00/19/56/75/28a29e7c.jpg","nickname":"安菲尔德","note":"","ucode":"A7B310463C15F1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1053568,"avatar":"https://static001.geekbang.org/account/avatar/00/10/13/80/8de66543.jpg","nickname":"徐文浩","note":"","ucode":"1D39AC564172E9","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":618475,"discussion_content":"老师，这个怎么申请呢？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1684280408,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":613356,"ip_address":"北京","group_id":0},"score":618475,"extra":""}]}]},{"had_liked":false,"id":372537,"user_name":"hhh","can_delete":false,"product_type":"c1","uid":1063398,"ip_address":"浙江","ucode":"711DCDC58209BB","user_header":"https://static001.geekbang.org/account/avatar/00/10/39/e6/1effba61.jpg","comment_is_top":false,"comment_ctime":1681266487,"is_pvip":false,"replies":[{"id":135980,"content":"Java目前还没有看到，不过现在GPT-4很多人用来做不同语言之间的代码翻译，你可以试着写一个Java版本的Langchain。","user_name":"作者回复","user_name_real":"编辑","uid":1053568,"ctime":1681287134,"ip_address":"上海","comment_id":372537,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100541001,"comment_content":"浩哥，文稿中代码、类库都是python脚步的，有java相关的生态推进吗？","like_count":4,"discussions":[{"author":{"id":1053568,"avatar":"https://static001.geekbang.org/account/avatar/00/10/13/80/8de66543.jpg","nickname":"徐文浩","note":"","ucode":"1D39AC564172E9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":613360,"discussion_content":"Java目前还没有看到，不过现在GPT-4很多人用来做不同语言之间的代码翻译，你可以试着写一个Java版本的Langchain。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1681287134,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"上海","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":372656,"user_name":"金","can_delete":false,"product_type":"c1","uid":1559128,"ip_address":"湖南","ucode":"48D0B5CB8E5F9E","user_header":"https://static001.geekbang.org/account/avatar/00/17/ca/58/6fe1854c.jpg","comment_is_top":false,"comment_ctime":1681403902,"is_pvip":false,"replies":[{"id":136129,"content":"继续往下先看到17讲之后看看你有没有解决问题的思路。","user_name":"作者回复","user_name_real":"编辑","uid":1053568,"ctime":1681616210,"ip_address":"上海","comment_id":372656,"utype":1}],"discussion_count":2,"race_medal":0,"score":2,"product_id":100541001,"comment_content":"怎么让模板更通用呢？比如那个算术问题，如何判断是个计算问题，感觉模板只能解决调用问题.","like_count":2,"discussions":[{"author":{"id":1053568,"avatar":"https://static001.geekbang.org/account/avatar/00/10/13/80/8de66543.jpg","nickname":"徐文浩","note":"","ucode":"1D39AC564172E9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":613981,"discussion_content":"继续往下先看到17讲之后看看你有没有解决问题的思路。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1681616210,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"上海","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":1,"child_discussions":[{"author":{"id":1559128,"avatar":"https://static001.geekbang.org/account/avatar/00/17/ca/58/6fe1854c.jpg","nickname":"金","note":"","ucode":"48D0B5CB8E5F9E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1053568,"avatar":"https://static001.geekbang.org/account/avatar/00/10/13/80/8de66543.jpg","nickname":"徐文浩","note":"","ucode":"1D39AC564172E9","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":614010,"discussion_content":"解决了，让模型取选择，现在是不是可以用autogpt和agentgpt?","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1681630001,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":613981,"ip_address":"湖南","group_id":0},"score":614010,"extra":""}]}]},{"had_liked":false,"id":372650,"user_name":"Yezhiwei","can_delete":false,"product_type":"c1","uid":1005157,"ip_address":"北京","ucode":"31E8E33688CBEC","user_header":"https://static001.geekbang.org/account/avatar/00/0f/56/65/22a37a8e.jpg","comment_is_top":false,"comment_ctime":1681394277,"is_pvip":false,"replies":[{"id":136117,"content":"👍","user_name":"作者回复","user_name_real":"编辑","uid":1053568,"ctime":1681614592,"ip_address":"上海","comment_id":372650,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100541001,"comment_content":"之前自己试过 LangFlow 非常简单，把步骤记录下来了，难道在网络，如果网络稳定，很快看到效果 \nhttps:&#47;&#47;mp.weixin.qq.com&#47;s&#47;jjNkkoUu-q8Yb1J6_u6WGg","like_count":2,"discussions":[{"author":{"id":1053568,"avatar":"https://static001.geekbang.org/account/avatar/00/10/13/80/8de66543.jpg","nickname":"徐文浩","note":"","ucode":"1D39AC564172E9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":613965,"discussion_content":"👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1681614592,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"上海","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":372588,"user_name":"自然卷的Neil","can_delete":false,"product_type":"c1","uid":3579742,"ip_address":"浙江","ucode":"44ECCBE5B7F6CA","user_header":"https://static001.geekbang.org/account/avatar/00/36/9f/5e/791d0f5e.jpg","comment_is_top":false,"comment_ctime":1681306266,"is_pvip":false,"replies":[{"id":136124,"content":"HTTP协议的URL里面不支持空格\nGoogle的URL含义里面，空格默认会替换成+\n你试着用Google搜索一下看一下浏览器的地址栏就知道了","user_name":"作者回复","user_name_real":"编辑","uid":1053568,"ctime":1681615869,"ip_address":"上海","comment_id":372588,"utype":1}],"discussion_count":3,"race_medal":0,"score":2,"product_id":100541001,"comment_content":"&quot;url&quot;: &quot;https:&#47;&#47;www.google.com&#47;search?q=&quot; + question.replace(&quot; &quot;, &quot;+&quot;)\n这一段代码为什么需要加上+ question.replace(&quot; &quot;, &quot;+&quot;)\n我看了langchain的手册也是这么写的，\n如果输入是&#39;query&#39;: &#39;What are the Three (3) biggest countries, and their respective sizes?&#39;,\n输出会变成&#39;url&#39;: &#39;https:&#47;&#47;www.google.com&#47;search?q=What+are+the+Three+(3)+biggest+countries,+and+their+respective+sizes?&#39;\n不太理解这样做的意义是啥","like_count":1,"discussions":[{"author":{"id":1053568,"avatar":"https://static001.geekbang.org/account/avatar/00/10/13/80/8de66543.jpg","nickname":"徐文浩","note":"","ucode":"1D39AC564172E9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":613974,"discussion_content":"HTTP协议的URL里面不支持空格\nGoogle的URL含义里面，空格默认会替换成+\n你试着用Google搜索一下看一下浏览器的地址栏就知道了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1681615869,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"上海","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1014963,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/7c/b3/40e8fa1d.jpg","nickname":"风的叹息","note":"","ucode":"5982CA332D46E0","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":613476,"discussion_content":"你可以学习一下google 搜索高级用法","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1681349151,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"广东","group_id":0},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":3579742,"avatar":"https://static001.geekbang.org/account/avatar/00/36/9f/5e/791d0f5e.jpg","nickname":"自然卷的Neil","note":"","ucode":"44ECCBE5B7F6CA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1014963,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/7c/b3/40e8fa1d.jpg","nickname":"风的叹息","note":"","ucode":"5982CA332D46E0","race_medal":0,"user_type":1,"is_pvip":true},"discussion":{"id":613553,"discussion_content":"感谢解答","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1681390028,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":613476,"ip_address":"浙江","group_id":0},"score":613553,"extra":""}]}]},{"had_liked":false,"id":372522,"user_name":"金","can_delete":false,"product_type":"c1","uid":1559128,"ip_address":"湖南","ucode":"48D0B5CB8E5F9E","user_header":"https://static001.geekbang.org/account/avatar/00/17/ca/58/6fe1854c.jpg","comment_is_top":false,"comment_ctime":1681253880,"is_pvip":false,"replies":[{"id":135975,"content":"第12讲我们介绍过在llama-index里，怎么封装一个自己的CustomLLM。Langchain也可以用类似的的方式来解决呀。","user_name":"作者回复","user_name_real":"编辑","uid":1053568,"ctime":1681286904,"ip_address":"上海","comment_id":372522,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100541001,"comment_content":"这个确实不错，我一直在思考如何让chatgpt优雅的完成最后一步，langchain这个工具能很大程度解决这个问题。这个工具支持清华的那个开源大模型吗？","like_count":1,"discussions":[{"author":{"id":1053568,"avatar":"https://static001.geekbang.org/account/avatar/00/10/13/80/8de66543.jpg","nickname":"徐文浩","note":"","ucode":"1D39AC564172E9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":613355,"discussion_content":"第12讲我们介绍过在llama-index里，怎么封装一个自己的CustomLLM。Langchain也可以用类似的的方式来解决呀。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1681286904,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"上海","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":374241,"user_name":"厚积薄发","can_delete":false,"product_type":"c1","uid":1206674,"ip_address":"德国","ucode":"8640C07176C249","user_header":"https://static001.geekbang.org/account/avatar/00/12/69/92/69c2c135.jpg","comment_is_top":false,"comment_ctime":1683769978,"is_pvip":false,"replies":[{"id":136845,"content":"我之前会遇到在Colab上运行不成功，原因是 Google 搜索的反爬策略应该是没有给到正常的网页返回内容\n\n你可以看一下，是否网络能够访问Google搜索，以及是否用了一些数据中心的机器被Google的反爬虫屏蔽了","user_name":"作者回复","user_name_real":"编辑","uid":1053568,"ctime":1684748760,"ip_address":"上海","comment_id":374241,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100541001,"comment_content":"from langchain.chains import LLMRequestsChain\n\ntemplate = &quot;&quot;&quot;在 &gt;&gt;&gt; 和 &lt;&lt;&lt; 直接是来自Google的原始搜索结果.\n请把对于问题 &#39;{query}&#39; 的答案从里面提取出来，如果里面没有相关信息的话就说 &quot;找不到&quot;\n请使用如下格式：\nExtracted:&lt;answer or &quot;找不到&quot;&gt;\n&gt;&gt;&gt; {requests_result} &lt;&lt;&lt;\nExtracted:&quot;&quot;&quot;\n\nPROMPT = PromptTemplate(\n    input_variables=[&quot;query&quot;, &quot;requests_result&quot;],\n    template=template,\n)\nrequests_chain = LLMRequestsChain(llm_chain = LLMChain(llm=OpenAI(temperature=0), prompt=PROMPT),verbose=True)\nquestion = &quot;今天上海的天气怎么样？&quot;\ninputs = {\n    &quot;query&quot;: question,\n    &quot;url&quot;: &quot;https:&#47;&#47;www.google.com&#47;search?q=&quot; + question.replace(&quot; &quot;, &quot;+&quot;)\n}\nresult=requests_chain(inputs)\nprint(result)\nprint(result[&#39;output&#39;])\n\n老师，我测试这段代码，返回值是找不到 ，是什么原因哈\n","like_count":0,"discussions":[{"author":{"id":1053568,"avatar":"https://static001.geekbang.org/account/avatar/00/10/13/80/8de66543.jpg","nickname":"徐文浩","note":"","ucode":"1D39AC564172E9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":619023,"discussion_content":"我之前会遇到在Colab上运行不成功，原因是 Google 搜索的反爬策略应该是没有给到正常的网页返回内容\n\n你可以看一下，是否网络能够访问Google搜索，以及是否用了一些数据中心的机器被Google的反爬虫屏蔽了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1684748760,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"上海","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":373953,"user_name":"Geek_9691fb","can_delete":false,"product_type":"c1","uid":3579209,"ip_address":"浙江","ucode":"2115F28E767B52","user_header":"","comment_is_top":false,"comment_ctime":1683376522,"is_pvip":false,"replies":[{"id":136839,"content":"https:&#47;&#47;github.com&#47;xuwenhao&#47;geektime-ai-course 的 data目录下","user_name":"作者回复","user_name_real":"编辑","uid":1053568,"ctime":1684746687,"ip_address":"上海","comment_id":373953,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100541001,"comment_content":"ecommerce_faq.txt 在哪里可以找到","like_count":0,"discussions":[{"author":{"id":1053568,"avatar":"https://static001.geekbang.org/account/avatar/00/10/13/80/8de66543.jpg","nickname":"徐文浩","note":"","ucode":"1D39AC564172E9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":619013,"discussion_content":"https://github.com/xuwenhao/geektime-ai-course 的 data目录下","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1684746687,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"上海","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":373495,"user_name":"沐瑞Lynn","can_delete":false,"product_type":"c1","uid":2419069,"ip_address":"重庆","ucode":"07CE753F1A4DBC","user_header":"","comment_is_top":false,"comment_ctime":1682576263,"is_pvip":false,"replies":[{"id":136459,"content":"如果在Colab发起，似乎很容易被拦截，如果是本地发起，好像没有问题","user_name":"作者回复","user_name_real":"编辑","uid":1053568,"ctime":1683083011,"ip_address":"上海","comment_id":373495,"utype":1}],"discussion_count":2,"race_medal":0,"score":2,"product_id":100541001,"comment_content":"用LLMRequestsChain想谷歌提问，总是回答找不到；然后用requests直接写了个程序调google 页面，发现可能被拦截。然后问题了GPT，得到回答\n“这段代码使用 requests 模块向 Google 搜索发出 GET 请求来获取指定问题的搜索结果页面的 HTML 代码。然后使用 print() 函数将 HTML 代码打印出来。\n但是使用该方法获取 Google 搜索结果可能会被 Google 识别为机器行为，并被阻拦。建议使用 Google 提供的 API 来获取搜索结果。” 记录一下，看看大家是不是有同样的问题吧。","like_count":0,"discussions":[{"author":{"id":1053568,"avatar":"https://static001.geekbang.org/account/avatar/00/10/13/80/8de66543.jpg","nickname":"徐文浩","note":"","ucode":"1D39AC564172E9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":616683,"discussion_content":"如果在Colab发起，似乎很容易被拦截，如果是本地发起，好像没有问题","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1683083011,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"上海","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1023093,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/9c/75/525e53b1.jpg","nickname":"Hobby","note":"","ucode":"8954830380D44F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":621304,"discussion_content":"貌似有些梯子也会被拦截，要求图形识别区分是否是人类。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1687096298,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"上海","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":373449,"user_name":"旭","can_delete":false,"product_type":"c1","uid":1002420,"ip_address":"北京","ucode":"6AF6518D4F7D0A","user_header":"https://static001.geekbang.org/account/avatar/00/0f/4b/b4/4768f34b.jpg","comment_is_top":false,"comment_ctime":1682514662,"is_pvip":false,"replies":[{"id":136461,"content":"可以加入一些容错的步骤，类似于13&#47;14讲生成unit test的时候，去检查生成的条目数，或者编译代码看是否能够编译通过。","user_name":"作者回复","user_name_real":"编辑","uid":1053568,"ctime":1683083121,"ip_address":"上海","comment_id":373449,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100541001,"comment_content":"如果是提供服务的话，链式计算中间步骤的容错性有没有好办法保证？","like_count":0,"discussions":[{"author":{"id":1053568,"avatar":"https://static001.geekbang.org/account/avatar/00/10/13/80/8de66543.jpg","nickname":"徐文浩","note":"","ucode":"1D39AC564172E9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":616685,"discussion_content":"可以加入一些容错的步骤，类似于13/14讲生成unit test的时候，去检查生成的条目数，或者编译代码看是否能够编译通过。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1683083121,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"上海","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":372851,"user_name":"慕枫","can_delete":false,"product_type":"c1","uid":2223368,"ip_address":"贵州","ucode":"1A40F70D105662","user_header":"https://static001.geekbang.org/account/avatar/00/21/ed/08/fe7910e2.jpg","comment_is_top":false,"comment_ctime":1681722099,"is_pvip":false,"replies":[{"id":136257,"content":"你使用RequestsChain的时候已经指明了外部的URL，一定会调用外部API呀。","user_name":"作者回复","user_name_real":"编辑","uid":1053568,"ctime":1681794293,"ip_address":"上海","comment_id":372851,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100541001,"comment_content":"RequestsChain怎么判断是问题是否需要调用外部api？","like_count":0,"discussions":[{"author":{"id":1053568,"avatar":"https://static001.geekbang.org/account/avatar/00/10/13/80/8de66543.jpg","nickname":"徐文浩","note":"","ucode":"1D39AC564172E9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":614459,"discussion_content":"你使用RequestsChain的时候已经指明了外部的URL，一定会调用外部API呀。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1681794293,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"上海","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":372773,"user_name":"凝望","can_delete":false,"product_type":"c1","uid":1015500,"ip_address":"广东","ucode":"EF26509C586C09","user_header":"https://static001.geekbang.org/account/avatar/00/0f/7e/cc/da91bd47.jpg","comment_is_top":false,"comment_ctime":1681609725,"is_pvip":false,"replies":[{"id":136095,"content":"有影响，在生产环境使用会有安全隐患，不过相信社区很快会修正这个问题","user_name":"作者回复","user_name_real":"编辑","uid":1053568,"ctime":1681613433,"ip_address":"上海","comment_id":372773,"utype":1}],"discussion_count":4,"race_medal":0,"score":3,"product_id":100541001,"comment_content":"RAyH4c\n微博\n给开发和使用LLM应用的各位提个醒，各路聊天\n机器人和ChatXXx应用都使用的LangChain库，\n对输入的提示词包了一层exec和eval函数，导致\n所有提示词都能远程执行任意python代码...\n\n老师好，看微博有人说这个问题，请问影响大吗？","like_count":0,"discussions":[{"author":{"id":1053568,"avatar":"https://static001.geekbang.org/account/avatar/00/10/13/80/8de66543.jpg","nickname":"徐文浩","note":"","ucode":"1D39AC564172E9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":613936,"discussion_content":"有影响，在生产环境使用会有安全隐患，不过相信社区很快会修正这个问题","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1681613433,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"上海","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":1,"child_discussions":[{"author":{"id":1015500,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/7e/cc/da91bd47.jpg","nickname":"凝望","note":"","ucode":"EF26509C586C09","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1053568,"avatar":"https://static001.geekbang.org/account/avatar/00/10/13/80/8de66543.jpg","nickname":"徐文浩","note":"","ucode":"1D39AC564172E9","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":613998,"discussion_content":"谢谢老师解惑😄","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1681620873,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":613936,"ip_address":"广东","group_id":0},"score":613998,"extra":""}]},{"author":{"id":3705704,"avatar":"https://static001.geekbang.org/account/avatar/00/38/8b/68/7b985768.jpg","nickname":"softnuggets","note":"","ucode":"6E294390F7ACC8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":628136,"discussion_content":"这个是什么问题呀 能解释下吗 ","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1695003437,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"美国","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1221705,"avatar":"https://static001.geekbang.org/account/avatar/00/12/a4/49/1c8598d1.jpg","nickname":"军舰","note":"","ucode":"C7E97415F5196A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":615265,"discussion_content":"最好整个沙盒在里面运行","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1682151142,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"山东","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":372611,"user_name":"榕","can_delete":false,"product_type":"c1","uid":1053178,"ip_address":"广东","ucode":"4611A40E21ECEB","user_header":"https://static001.geekbang.org/account/avatar/00/10/11/fa/e0dcc1bf.jpg","comment_is_top":false,"comment_ctime":1681350448,"is_pvip":false,"replies":[{"id":136122,"content":"可以看看在一些开源模型上调优，我们前面也介绍过比如ChatGLM或者用现在百度阿里开放出来的。","user_name":"作者回复","user_name_real":"编辑","uid":1053568,"ctime":1681615633,"ip_address":"上海","comment_id":372611,"utype":1}],"discussion_count":2,"race_medal":0,"score":3,"product_id":100541001,"comment_content":"老师好，通过langchain等武器库确实给了我们使用大语言模型很大的想象空间，但前提得有大语言模型支持。对于地区限制访问的问题，那对于国内的个人或企业要真正落地这些能力，目前是通过哪些方式来做呢？谢谢","like_count":0,"discussions":[{"author":{"id":1053568,"avatar":"https://static001.geekbang.org/account/avatar/00/10/13/80/8de66543.jpg","nickname":"徐文浩","note":"","ucode":"1D39AC564172E9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":613971,"discussion_content":"可以看看在一些开源模型上调优，我们前面也介绍过比如ChatGLM或者用现在百度阿里开放出来的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1681615633,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"上海","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":1,"child_discussions":[{"author":{"id":1053178,"avatar":"https://static001.geekbang.org/account/avatar/00/10/11/fa/e0dcc1bf.jpg","nickname":"榕","note":"","ucode":"4611A40E21ECEB","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1053568,"avatar":"https://static001.geekbang.org/account/avatar/00/10/13/80/8de66543.jpg","nickname":"徐文浩","note":"","ucode":"1D39AC564172E9","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":614009,"discussion_content":"好的，谢谢老师","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1681629991,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":613971,"ip_address":"广东","group_id":0},"score":614009,"extra":""}]}]},{"had_liked":false,"id":372540,"user_name":"一叶","can_delete":false,"product_type":"c1","uid":3577168,"ip_address":"福建","ucode":"21E5455D0814E5","user_header":"https://static001.geekbang.org/account/avatar/00/36/95/50/01199ae9.jpg","comment_is_top":false,"comment_ctime":1681267297,"is_pvip":false,"replies":[{"id":135978,"content":"可以啊，Langchain支持很多不同类型的VectorStore，可以去看文档\nhttps:&#47;&#47;python.langchain.com&#47;en&#47;latest&#47;modules&#47;indexes&#47;vectorstores.html\n\n这里使用FAISS只是演示的时候环境要求比较低。","user_name":"作者回复","user_name_real":"编辑","uid":1053568,"ctime":1681287045,"ip_address":"上海","comment_id":372540,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100541001,"comment_content":"老师这段代码里面:\n\n\nfrom langchain.embeddings.openai import OpenAIEmbeddings\nfrom langchain.vectorstores import FAISS\nfrom langchain.text_splitter import SpacyTextSplitter\nfrom langchain import OpenAI, VectorDBQA\nfrom langchain.document_loaders import TextLoader\n\nllm = OpenAI(temperature=0)\nloader = TextLoader(&#39;.&#47;data&#47;ecommerce_faq.txt&#39;)\ndocuments = loader.load()\ntext_splitter = SpacyTextSplitter(chunk_size=256, pipeline=&quot;zh_core_web_sm&quot;)\ntexts = text_splitter.split_documents(documents)\n\nembeddings = OpenAIEmbeddings()\ndocsearch = FAISS.from_documents(texts, embeddings)\n\nfaq_chain = VectorDBQA.from_chain_type(llm=llm, vectorstore=docsearch, verbose=True)\n\n可以把索引给保存到数据库吗? 以后再继续使用?","like_count":0,"discussions":[{"author":{"id":1053568,"avatar":"https://static001.geekbang.org/account/avatar/00/10/13/80/8de66543.jpg","nickname":"徐文浩","note":"","ucode":"1D39AC564172E9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":613358,"discussion_content":"可以啊，Langchain支持很多不同类型的VectorStore，可以去看文档\nhttps://python.langchain.com/en/latest/modules/indexes/vectorstores.html\n\n这里使用FAISS只是演示的时候环境要求比较低。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1681287045,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"上海","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":372536,"user_name":"一叶","can_delete":false,"product_type":"c1","uid":3577168,"ip_address":"福建","ucode":"21E5455D0814E5","user_header":"https://static001.geekbang.org/account/avatar/00/36/95/50/01199ae9.jpg","comment_is_top":false,"comment_ctime":1681266316,"is_pvip":false,"replies":[{"id":135977,"content":"RequestsChain可以访问Google，17讲里介绍的Agent还可以让AI自动选择用什么工具，继续往下看吧","user_name":"作者回复","user_name_real":"编辑","uid":1053568,"ctime":1681286975,"ip_address":"上海","comment_id":372536,"utype":1}],"discussion_count":2,"race_medal":0,"score":3,"product_id":100541001,"comment_content":"老师,我有个问题可以解答一下吗?我们目前开发的一款app,就有客户问到类似的问题,比如今天的时间,Chatgpt就没办法完整的回答,我看到上面的编译Python的方式似乎可行,但是似乎用户的问题千奇百怪,比如有的又会问到数学...而有的llm直接就能解决,在这种情况下,我要怎么实现会更好?","like_count":0,"discussions":[{"author":{"id":1053568,"avatar":"https://static001.geekbang.org/account/avatar/00/10/13/80/8de66543.jpg","nickname":"徐文浩","note":"","ucode":"1D39AC564172E9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":613357,"discussion_content":"RequestsChain可以访问Google，17讲里介绍的Agent还可以让AI自动选择用什么工具，继续往下看吧","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1681286976,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"上海","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":1,"child_discussions":[{"author":{"id":3577168,"avatar":"https://static001.geekbang.org/account/avatar/00/36/95/50/01199ae9.jpg","nickname":"一叶","note":"","ucode":"21E5455D0814E5","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1053568,"avatar":"https://static001.geekbang.org/account/avatar/00/10/13/80/8de66543.jpg","nickname":"徐文浩","note":"","ucode":"1D39AC564172E9","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":614992,"discussion_content":"老师，用了代理的方式，但是感觉总是控制不好，我想只有让他不知道答案的时候才去搜索，但是它似乎每次遇到问题就会直接搜索……","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1681993516,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":613357,"ip_address":"福建","group_id":0},"score":614992,"extra":""}]}]},{"had_liked":false,"id":372549,"user_name":"neohope","can_delete":false,"product_type":"c1","uid":1043475,"ip_address":"上海","ucode":"C0268F6E7E2B6E","user_header":"https://static001.geekbang.org/account/avatar/00/0f/ec/13/49e98289.jpg","comment_is_top":false,"comment_ctime":1681273364,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":3,"product_id":100541001,"comment_content":"ChatGPT被作为一种能力去使用，也就是X+AI模式，确实有不小的想象空间。\n但反过来，如有一个大模型，能快速整合各种外部能力，从X+AI，变成AI+X、Y、Z，很可能会成为下一代互联网的入口，并从各种维度给人类带来全新体验，期待这个时代能尽快到来。","like_count":5},{"had_liked":false,"id":377740,"user_name":"月狼葱葱","can_delete":false,"product_type":"c1","uid":1101360,"ip_address":"美国","ucode":"506D751D956F87","user_header":"https://static001.geekbang.org/account/avatar/00/10/ce/30/eb380376.jpg","comment_is_top":false,"comment_ctime":1689135954,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":3,"product_id":100541001,"comment_content":"跑代码的时候发现UserWarning: `VectorDBQA` is deprecated - please use `from langchain.chains import RetrievalQA`\n\n修改代码如下：\n\nfrom langchain.chains import RetrievalQA\n\nqa = RetrievalQA.from_chain_type(llm=OpenAI(temperature=0), chain_type=&quot;stuff&quot;, retriever=docsearch.as_retriever())\nquestion = &quot;请问你们的货，能送到三亚吗？大概需要几天？&quot;\nresult = qa.run(question)\n\nprint(result)\n\n参考文档：https:&#47;&#47;www.langchain.com.cn&#47;modules&#47;chains&#47;index_examples&#47;vector_db_qa","like_count":2},{"had_liked":false,"id":376880,"user_name":"硕果阳光","can_delete":false,"product_type":"c1","uid":1064133,"ip_address":"美国","ucode":"C59841EB675535","user_header":"https://static001.geekbang.org/account/avatar/00/10/3c/c5/92017a7b.jpg","comment_is_top":false,"comment_ctime":1687625427,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":3,"product_id":100541001,"comment_content":"btw VectorDBQA 已经被deprecated and replaced by RetrivalQA\nhttps:&#47;&#47;python.langchain.com&#47;docs&#47;modules&#47;chains&#47;popular&#47;vector_db_qa","like_count":2},{"had_liked":false,"id":372533,"user_name":"Evan","can_delete":false,"product_type":"c1","uid":1344281,"ip_address":"上海","ucode":"B877ABD0CF4661","user_header":"https://static001.geekbang.org/account/avatar/00/14/83/19/0a3fe8c1.jpg","comment_is_top":false,"comment_ctime":1681263292,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":3,"product_id":100541001,"comment_content":"RequestsChain 非常有效的，能调用外部接口的","like_count":1},{"had_liked":false,"id":386329,"user_name":"蒸发杰作","can_delete":false,"product_type":"c1","uid":1802993,"ip_address":"上海","ucode":"1D0AD0DB75E0F8","user_header":"https://static001.geekbang.org/account/avatar/00/1b/82/f1/6f8bf660.jpg","comment_is_top":false,"comment_ctime":1704595305,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":3,"product_id":100541001,"comment_content":"感觉到了AI确实在蓬勃发展，一大堆类库，目前还在蓄势待发","like_count":0},{"had_liked":false,"id":379363,"user_name":"Penguin Shi","can_delete":false,"product_type":"c1","uid":3646806,"ip_address":"广东","ucode":"477A24D7ECE09A","user_header":"https://static001.geekbang.org/account/avatar/00/37/a5/56/b3cf71a9.jpg","comment_is_top":false,"comment_ctime":1691816370,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":4,"product_id":100541001,"comment_content":"&quot;通过 VectorDBQA 来实现先搜索再回复的能力&quot;后面的第一段代码，由于langchain RetrievalQA模块使用变化，调试很久，才可运行。可运行的代码如下，供参考：\nfrom langchain.llms import OpenAI\nfrom langchain import FAISS\nfrom langchain.embeddings import OpenAIEmbeddings\nfrom langchain.text_splitter import SpacyTextSplitter\n\nfrom langchain.chains import RetrievalQA\nfrom langchain.document_loaders import TextLoader\nfrom langchain.vectorstores.base import VectorStoreRetriever\n\n\nllm = OpenAI(temperature=0)\nloader = TextLoader(&#39;.&#47;data&#47;ecommerce_faq.txt&#39;)\ndocuments = loader.load()\ntext_splitter = SpacyTextSplitter(chunk_size=256, pipeline=&quot;zh_core_web_sm&quot;)\ntexts = text_splitter.split_documents(documents)\n\nembeddings = OpenAIEmbeddings()\n\ndocsearch = FAISS.from_documents(texts, embeddings)\nretriever = VectorStoreRetriever(vectorstore=docsearch)\nfaq_chain = RetrievalQA.from_llm(llm=llm, retriever=retriever, verbose=True)","like_count":0},{"had_liked":false,"id":375072,"user_name":"zgxx","can_delete":false,"product_type":"c1","uid":1046259,"ip_address":"浙江","ucode":"B6DA1BA1B3708A","user_header":"https://static001.geekbang.org/account/avatar/00/0f/f6/f3/69fdc9c8.jpg","comment_is_top":false,"comment_ctime":1684862747,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":4,"product_id":100541001,"comment_content":"final_result = final_chain.run(inputs)\n\ninputs是哪里来的","like_count":0}]}