{"id":71277,"title":"03 | 内存优化（上）：4GB内存时代，再谈内存优化","content":"<p>在写今天这篇文章前，我又翻了翻三年前我在WeMobileDev公众号写过的<a href=\"http://mp.weixin.qq.com/s/Z7oMv0IgKWNkhLon_hFakg\">《Android内存优化杂谈》</a>，今天再看，对里面的一句话更有感触：“我们并不能将内存优化中用到的所有技巧都一一说明，而且随着Android版本的更替，可能很多方法都会变的过时”。</p><p>三年过去了，4GB内存的手机都变成了主流。那内存优化是不是变得不重要了？如今有哪些技巧已经淘汰，而我们又要升级什么技能呢？</p><p>今天在4GB内存时代下，我就再来谈谈“内存优化”这个话题。</p><h2>移动设备发展</h2><p>Facebook有一个叫<a href=\"http://github.com/facebook/device-year-class\">device-year-class</a>的开源库，它会用年份来区分设备的性能。可以看到，2008年的手机只有可怜的140MB内存，而今年的华为Mate 20 Pro手机的内存已经达到了8GB。</p><p><img src=\"https://static001.geekbang.org/resource/image/8d/f1/8d1367526799c38d525910bfb5a618f1.png?wh=1588*856\" alt=\"\"></p><p>内存看起来好像是我们都非常熟悉的概念，那请问问自己，手机内存和PC内存有哪什么差异呢？8GB内存是不是就一定会比4GB内存更好？我想可能很多人都不一定能回答正确。</p><p>手机运行内存（RAM）其实相当于我们的PC中的内存，是手机中作为App运行过程中临时性数据暂时存储的内存介质。不过考虑到体积和功耗，手机不使用PC的DDR内存，采用的是LPDDR RAM，全称是“低功耗双倍数据速率内存”，其中LP就是“Lower Power”低功耗的意思。</p><!-- [[[read_end]]] --><p>以LPDDR4为例，带宽 = 时钟频率 × 内存总线位数 ÷ 8，即1600 × 64 ÷ 8 = 12.8GB/s，因为是DDR内存是双倍速率，所以最后的带宽是12.8 × 2 = 25.6GB/s。</p><p><img src=\"https://static001.geekbang.org/resource/image/2f/44/2f26e93ac941f30bb4037648640aca44.png?wh=598*148\" alt=\"\"></p><p>目前市面上的手机，主流的运行内存有LPDDR3、LPDDR4以及LPDDR4X。可以看出LPDDR4的性能要比LPDDR3高出一倍，而LPDDR4X相比LPDDR4工作电压更低，所以也比LPDDR4省电20%～40%。当然图中的数据是标准数据，不同的生成厂商会有一些低频或者高频的版本，性能方面高频要好于低频。</p><p>那手机内存是否越大越好呢？</p><p>如果一个手机使用的是4GB的LPDDR4X内存，另外一个使用的是6GB的LPDDR3内存，那么无疑选择4GB的运行内存手机要更加实用一些。</p><p>但是内存并不是一个孤立的概念，它跟操作系统、应用生态这些因素都有关。同样是1GB内存，使用Android 9.0系统会比Android 4.0系统流畅，使用更加封闭、规范的iOS系统也会比“狂野”的Android系统更好。今年发布的iPhone XR和iPhone XS使用的都是LPDDR4X的内存，不过它们分别只有3GB和4GB的大小。</p><h2>内存问题</h2><p>在前面所讲的崩溃分析中，我提到过“内存优化”是崩溃优化工作中非常重要的一部分。类似OOM，很多的“异常退出”其实都是由内存问题引起。那么内存究竟能引发什么样的问题呢？</p><p>1.两个问题</p><p><img src=\"https://static001.geekbang.org/resource/image/c2/ce/c26a9351868bb82abd7ada028275f5ce.png?wh=2240*1460\" alt=\"\"></p><p>内存造成的第一个问题是<strong>异常</strong>。在前面的崩溃分析我提到过“异常率”，异常包括OOM、内存分配失败这些崩溃，也包括因为整体内存不足导致应用被杀死、设备重启等问题。不知道你平时是否在工作中注意过，如果我们把用户设备的内存分成2GB以下和2GB以上两部分，你可以试试分别计算他们的异常率或者崩溃率，看看差距会有多大。</p><p>内存造成的第二个问题是<strong>卡顿</strong>。Java内存不足会导致频繁GC，这个问题在Dalvik虚拟机会更加明显。而ART虚拟机在内存管理跟回收策略上都做大量优化，内存分配和GC效率相比提升了5～10倍。如果想具体测试GC的性能，例如暂停挂起时间、总耗时、GC吞吐量，我们可以通过发送<strong>SIGQUIT信号获得ANR日志</strong>。</p><pre><code>adb shell kill -S QUIT PID\nadb pull /data/anr/traces.txt\n</code></pre><p>它包含一些ANR转储信息以及GC的详细性能信息。</p><pre><code>sticky concurrent mark sweep paused:\tSum: 5.491ms 99% C.I. 1.464ms-2.133ms Avg: 1.830ms Max: 2.133ms     // GC 暂停时间\n\nTotal time spent in GC: 502.251ms     // GC 总耗时\nMean GC size throughput: 92MB/s       // GC 吞吐量\nMean GC object throughput: 1.54702e+06 objects/s \n</code></pre><p>另外我们还可以使用systrace来观察GC的性能耗时，这部分内容在专栏后面会详细讲到。</p><p>除了频繁GC造成卡顿之外，物理内存不足时系统会触发low memory killer机制，系统负载过高是造成卡顿的另外一个原因。</p><p>2.两个误区</p><p>除了内存引起的异常和卡顿，在日常做内存优化和架构设计时，很多同学还非常容易陷入两个误区之中。</p><p><strong>误区一：内存占用越少越好</strong></p><p>VSS、PSS、Java堆内存不足都可能会引起异常和卡顿。有些同学认为内存是洪水猛兽，占用越少应用的性能越好，这种认识在具体的优化过程中很容易“用力过猛”。</p><p>应用是否占用了过多的内存，跟设备、系统和当时情况有关，而不是300MB、400MB这样一个绝对的数值。当系统内存充足的时候，我们可以多用一些获得更好的性能。当系统内存不足的时候，希望可以做到<strong>“用时分配，及时释放”</strong>，就像下面这张图一样，当系统内存出现压力时，能够迅速释放各种缓存来减少系统压力。</p><p><img src=\"https://static001.geekbang.org/resource/image/07/97/0739a98bfafdd9f59539ddbbf403f097.png?wh=1524*1032\" alt=\"\"></p><p>现在手机已经有6GB和8GB的内存出现了，Android系统也希望去提升内存的利用率，因此我们有必要简单回顾一下Android Bitmap内存分配的变化。</p><ul>\n<li>\n<p>在Android 3.0之前，Bitmap对象放在Java堆，而像素数据是放在Native内存中。如果不手动调用recycle，Bitmap Native内存的回收完全依赖finalize函数回调，熟悉Java的同学应该知道，这个时机不太可控。</p>\n</li>\n<li>\n<p>Android 3.0～Android 7.0将Bitmap对象和像素数据统一放到Java堆中，这样就算我们不调用recycle，Bitmap内存也会随着对象一起被回收。不过Bitmap是内存消耗的大户，把它的内存放到Java堆中似乎不是那么美妙。即使是最新的华为Mate 20，最大的Java堆限制也才到512MB，可能我的物理内存还有5GB，但是应用还是会因为Java堆内存不足导致OOM。Bitmap放到Java堆的另外一个问题会引起大量的GC，对系统内存也没有完全利用起来。</p>\n</li>\n<li>\n<p>有没有一种实现，可以将Bitmap内存放到Native中，也可以做到和对象一起快速释放，同时GC的时候也能考虑这些内存防止被滥用？NativeAllocationRegistry可以一次满足你这三个要求，Android 8.0正是使用这个辅助回收Native内存的机制，来实现像素数据放到Native内存中。Android 8.0还新增了硬件位图Hardware Bitmap，它可以减少图片内存并提升绘制效率。</p>\n</li>\n</ul><p><strong>误区二：Native内存不用管</strong></p><p>虽然Android 8.0重新将Bitmap内存放回到Native中，那么我们是不是就可以随心所欲地使用图片呢？</p><p>答案当然是否定的。正如前面所说当系统物理内存不足时，lmk开始杀进程，从后台、桌面、服务、前台，直到手机重启。系统构想的场景就像下面这张图描述的一样，大家有条不絮的按照优先级排队等着被kill。</p><p><img src=\"https://static001.geekbang.org/resource/image/b8/98/b8d160f8d487bcb377e0c38ff9a0ac98.png?wh=630*262\" alt=\"\"></p><p>low memory killer的设计，是假定我们都遵守Android规范，但并没有考虑到中国国情。国内很多应用就像是打不死的小强，杀死一个拉起五个。频繁的杀死、拉起进程，又会导致system server卡死。当然在Android 8.0以后应用保活变得困难很多，但依然有一些方法可以突破。</p><p>既然讲到了将图片的内存放到Native中，我们比较熟悉的是Fresco图片库在Dalvik会把图片放到Native内存中。事实上在Android 5.0～Android 7.0，也能做到相同的效果，只是流程相对复杂一些。</p><p>步骤一：通过直接调用libandroid_runtime.so中Bitmap的构造函数，可以得到一张空的Bitmap对象，而它的内存是放到Native堆中。但是不同Android版本的实现有那么一点差异，这里都需要适配。</p><p>步骤二：通过系统的方法创建一张普通的Java Bitmap。</p><p>步骤三：将Java Bitmap的内容绘制到之前申请的空的Native Bitmap中。</p><p>步骤四：将申请的Java Bitmap释放，实现图片内存的“偷龙转凤”。</p><pre><code>// 步骤一：申请一张空的 Native Bitmap\nBitmap nativeBitmap = nativeCreateBitmap(dstWidth, dstHeight, nativeConfig, 22);\n\n// 步骤二：申请一张普通的 Java Bitmap\nBitmap srcBitmap = BitmapFactory.decodeResource(res, id);\n\n// 步骤三：使用 Java Bitmap 将内容绘制到 Native Bitmap 中\nmNativeCanvas.setBitmap(nativeBitmap);\nmNativeCanvas.drawBitmap(srcBitmap, mSrcRect, mDstRect, mPaint);\n\n// 步骤四：释放 Java Bitmap 内存\nsrcBitmap.recycle();\nsrcBitmap = null；\n</code></pre><p>虽然最终图片的内存的确是放到Native中了，不过这个“黑科技”有两个主要问题，一个是兼容性问题，另外一个是频繁申请释放Java Bitmap容易导致内存抖动。</p><h2>测量方法</h2><p>在日常开发中，有时候我们需要去排查应用程序中的内存问题。对于系统内存和应用内存的使用情况，你可以参考Android Developer中 <a href=\"http://developer.android.com/studio/profile/investigate-ram?hl=zh-cn\">《调查RAM使用情况》。</a></p><pre><code>adb shell dumpsys meminfo &lt;package_name|pid&gt; [-d]\n</code></pre><p><strong>1. Java内存分配</strong></p><p>有些时候我们希望跟踪Java堆内存的使用情况，这个时候最常用的有Allocation Tracker和MAT这两个工具。</p><p>在我曾经写过的<a href=\"http://mp.weixin.qq.com/s/b_lFfL1mDrNVKj_VAcA2ZA\">《Android内存申请分析》</a>里，提到过Allocation Tracker的三个缺点。</p><ul>\n<li>\n<p>获取的信息过于分散，中间夹杂着不少其他的信息，很多信息不是应用申请的，可能需要进行不少查找才能定位到具体的问题。</p>\n</li>\n<li>\n<p>跟Traceview一样，无法做到自动化分析，每次都需要开发者手工开始/结束，这对于某些问题的分析可能会造成不便，而且对于批量分析来说也比较困难。</p>\n</li>\n<li>\n<p>虽然在Allocation Tracking的时候，不会对手机本身的运行造成过多的性能影响，但是在停止的时候，直到把数据dump出来之前，经常会把手机完全卡死，如果时间过长甚至会直接ANR。</p>\n</li>\n</ul><p>因此我们希望可以做到脱离Android Studio，实现一个自定义的“Allocation Tracker”，实现对象内存的自动化分析。通过这个工具可以获取所有对象的申请信息（大小、类型、堆栈等），可以找到一段时间内哪些对象占用了大量的内存。</p><p>但是这个方法需要考虑的兼容性问题会比较多，在Dalvik和ART中，Allocation Tracker的处理流程差异就非常大。下面是在Dalvik和ART中，Allocation Tacker的开启方式。</p><pre><code>// dalvik\nbool dvmEnableAllocTracker()\n// art\nvoid setAllocTrackingEnabled()\n</code></pre><p>我们可以用自定义的“Allocation Tracker”来监控Java内存的监控，也可以拓展成实时监控Java内存泄漏。这方面经验不多的同学也不用担心，我在今天的“课后作业”提供了一个自定义的“Allocation Tracker”供你参考。<strong>不过任何一个工具如果只需要做到线下自动化测试，实现起来会相对简单，但想要移植到线上使用，那就要更加关注兼容性、稳定性和性能，付出的努力要远远高于实验室方案。</strong></p><p>在课后作业中我们会提供一个简单的例子，在熟悉Android Studio中Profiler各种工具的实现原理后，我们就可以做各种各样的自定义改造，在后面的文章中也会有大量的例子供你参考和练习。</p><p><strong>2. Native内存分配</strong></p><p>Android的Native内存分析是一直做得非常不好，当然Google在近几个版本也做了大量努力，让整个过程更加简单。</p><p>首先Google之前将Valgrind弃用，建议我们使用Chromium的<a href=\"http://source.android.com/devices/tech/debug/asan.html\">AddressSanitize</a> 。遵循<strong>“谁最痛，谁最需要，谁优化”</strong>，所以Chromium出品了一大堆Native相关的工具。Android之前对AddressSanitize支持的不太好，需要root和一大堆的操作，但在Android 8.0之后，我们可以根据这个<a href=\"http://github.com/google/sanitizers/wiki/AddressSanitizerOnAndroid\">指南</a>来使用AddressSanitize。目前AddressSanitize内存泄漏检测只支持x86_64 Linux和OS X系统，不过相信Google很快就可以支持直接在Android上进行检测了。</p><p>那我们有没有类似Allocation Tracker那样的Native内存分配工具呢？在这方面，Android目前的支持还不是太好，但Android Developer近来也补充了一些相关的文档，你可以参考<a href=\"http://source.android.com/devices/tech/debug/native-memory\">《调试本地内存使用》</a>。关于Native内存的问题，有两种方法，分别是<strong>Malloc调试</strong>和<strong>Malloc钩子</strong>。</p><p><a href=\"http://android.googlesource.com/platform/bionic/+/master/libc/malloc_debug/README.md\">Malloc调试</a>可以帮助我们去调试Native内存的一些使用问题，例如堆破坏、内存泄漏、非法地址等。Android 8.0之后支持在非root的设备做Native内存调试，不过跟AddressSanitize一样，需要通过<a href=\"http://developer.android.com/ndk/guides/wrap-script.html\">wrap.sh</a>做包装。</p><pre><code>adb shell setprop wrap.&lt;APP&gt; '&quot;LIBC_DEBUG_MALLOC_OPTIONS=backtrace logwrapper&quot;'\n</code></pre><p><a href=\"http://android.googlesource.com/platform/bionic/+/master/libc/malloc_hooks/README.md\">Malloc钩子</a>是在Android P之后，Android的libc支持拦截在程序执行期间发生的所有分配/释放调用，这样我们就可以构建出自定义的内存检测工具。</p><pre><code>adb shell setprop wrap.&lt;APP&gt; '&quot;LIBC_HOOKS_ENABLE=1&quot;'\n</code></pre><p>但是在使用“Malloc调试”时，感觉整个App都会变卡，有时候还会产生ANR。如何在Android上对应用Native内存分配和泄漏做自动化分析，也是我最近想做的事情。据我了解，微信最近几个月在Native内存泄漏监控上也做了一些尝试，我会在专栏下一期具体讲讲。</p><h2>总结</h2><p>LPDDR5将在明年进入量产阶段，移动内存一直向着更大容量、更低功耗、更高带宽的方向发展。伴随内存的发展，内存优化的挑战和解决方案也不断变化。而内存优化又是性能优化重要的一部分，今天我讲到了很多的异常和卡顿都是因为内存不足引起的，并在最后讲述了如何在日常开发中分析和测量内存的使用情况。</p><p>一个好的开发者并不满足于做完需求，我们在设计方案的时候，还需要考虑要使用多少的内存，应该怎么去管理这些内存。在需求完成之后，我们也应该去回归需求的内存情况，是否存在使用不当的地方，是否出现内存泄漏。</p><h2>课后作业</h2><p>内存优化是一个非常“古老”的话题，大家在工作中也会遇到各种各样内存相关的问题。<span class=\"orange\">今天的课后作业是分享一下你在工作中遇到的内存问题，总结一下通过Sample的练习有什么收获。</span></p><p>在今天文章里我提到，希望可以脱离Android Studio实现一个自定义的Allocation Tracker，这样就可以将它用到自动化分析中。本期的<a href=\"http://github.com/AndroidAdvanceWithGeektime/Chapter03\">Sample</a>就提供了一个自定义的Allocation Tracker实现的示例，目前已经兼容到Android 8.1。你可以用它练习实现自动化的内存分析，有哪些对象占用了大量内存，以及它们是如何导致GC等。</p><p>欢迎你点击“请朋友读”，把今天的内容分享给好友，邀请他一起学习。最后别忘了在评论区提交今天的作业，我也为认真完成作业的同学准备了丰厚的“<a href=\"http://time.geekbang.org/column/article/70250\">学习加油礼包</a>”，期待与你一起切磋进步哦。</p><p><img src=\"https://static001.geekbang.org/resource/image/24/c0/24c190870d71c3daa203a939d67358c0.jpg?wh=1110*549\" alt=\"\"><img src=\"https://static001.geekbang.org/resource/image/30/aa/306ef8892cc985a19fdd36534e7c5daa.png?wh=1110*110\" alt=\"\"></p>","comments":[{"had_liked":false,"id":47361,"user_name":"孙鹏飞","can_delete":false,"product_type":"c1","uid":1171070,"ip_address":"","ucode":"18ADF5C2B78938","user_header":"https://static001.geekbang.org/account/avatar/00/11/de/7e/5c2b1efe.jpg","comment_is_top":true,"comment_ctime":1544113943,"is_pvip":false,"replies":[{"id":"16910","content":"鹏飞棒棒的！","user_name":"作者回复","user_name_real":"张绍文","uid":"1009577","ctime":1544141497,"ip_address":"","comment_id":47361,"utype":1}],"discussion_count":1,"race_medal":0,"score":"9.2233721973127004e+18","product_id":100021101,"comment_content":"更新了例子，完善了操作方式，支持了x86平台的编译运行，兼容7.1到9.0的手机和模拟器，支持x86和armv7a，已经相对稳定","like_count":37,"discussions":[{"author":{"id":1009577,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/67/a9/e251ace7.jpg","nickname":"张绍文","note":"","ucode":"94B49E5F80BFDE","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":431751,"discussion_content":"鹏飞棒棒的！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1544141497,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":164683,"user_name":"庆","can_delete":false,"product_type":"c1","uid":1070453,"ip_address":"","ucode":"9ACB2EC0F4CE08","user_header":"https://static001.geekbang.org/account/avatar/00/10/55/75/7045c225.jpg","comment_is_top":false,"comment_ctime":1577071719,"is_pvip":false,"discussion_count":3,"race_medal":0,"score":"139016025191","product_id":100021101,"comment_content":"看了一天代码和相关资料，终于算搞清楚老师想要教啥了，其实多查阅点资料就行，虽然的确很多JNI的东西，但是多花点时间也可以搞懂。 分享一下心得:<br><br>前提知识：<br>1. Java可以用反射来hook，C++没有反射但是同样可以hook。MSHookFunction 就是这样一个框架，支持hook C&#47;C++代码， http:&#47;&#47;www.cydiasubstrate.com&#47;api&#47;c&#47;MSHookFunction&#47;<br><br>2.ndk_dlopen 和 ndk_dlsym 。前者是用来获取动态链接库，后者是通过获取到前者的动态链接库之后，获取函数地址的。<br><br>3.C&#47;C++在链接之前会把函数的名字mangled, 我们在ndk_dlsym函数里面需要填mangled之后的函数名， -》 _ZN3art3Dbg21DumpRecentAllocationsEnv<br><br>4. facebook::jni::这个应该是调用文章中说到的那个facebook的jni的开源框架。 JNIEnv *env 这个是一个全局的JNI环境变量，储存了变量，还有很多JNI的函数供开发者使用。比如代码中的env-&gt;GetArrayLength(saveData.data);<br><br>代码流程:<br><br>1. 首先先调用了tracker.initForArt， 并且调用了JNI方法initForArt。所谓的初始化其实就是使用ndk_dlsym 拿到各个要hook的函数。比如artSetAllocTrackingEnable ，就是开启&#47;关闭tracking的，源代码中有一行:<br><br>  artSetAllocTrackingEnable = (void (*)(bool)) ndk_dlsym(libHandle,<br>                                                           &quot;_ZN3art3Dbg23SetAllocTrackingEnabledEb&quot;);<br><br>这里注意并没有开启函数，只是拿到函数句柄而已。<br><br>2. void hookFunc() , 这个方法就是真正的把系统的tracking 函数hook调的地方。<br><br>比如 先调用 void *hookRecordAllocation26 = ndk_dlsym(handle,<br>                                             &quot;_ZN3art2gc20AllocRecordObjectMap16RecordAllocationEPNS_6ThreadEPNS_6ObjPtrINS_6mirror6ObjectEEEj&quot;);<br><br>这里注意是拿到函数的地址而不是句柄。<br><br>然后 调用hook -&gt; MSHookFunction(hookRecordAllocation26, (void *) &amp;newArtRecordAllocation26,<br>                       (void **) &amp;oldArtRecordAllocation26);<br>通过这个函数把newArtRecordAllocation26 hook进原函数地址里，同时拿到旧函数的实现并导向oldArtRecordAllocation26。保留旧函数的原因是还需要使用旧函数的一些功能。<br><br>3.最后我们可以看到hook的新函数，做了一个大小的判断。 if (allocObjectCount &gt; setAllocRecordMax)， 如果大于setAllocRecordMax，就<br>      jbyteArray allocData = getARTAllocatio nData();<br>        SaveAllocationData saveData{allocData};<br>        saveARTAllocationData(saveData);<br><br>以上代码就是把数据保存在log文件里面的实现。<br><br><br>总结：<br><br>其实总结下来，这个小作业我觉得重点在于理解在哪里hook，还有认识到不同的ROM版本的小差异在哪，毕竟hook和java反射一样，如果系统在新版本把函数名，或者函数签名改了那肯定就凉凉了。 最后，把这一套hook如果应用在生产环境里，可以实现一些自动化的分析app的内存消耗，不需要再手动调用profiler。我觉得这堂课受益匪浅，可以考虑自己整一个然后给QA的automation lab用。<br><br>最后老师我有一个问题，你是怎么知道C++函数的mangled name的？我看网上都说是compile time才能知道，难道你为了这个专门compile了一下android 的源代码？<br><br>谢谢！","like_count":32,"discussions":[{"author":{"id":1363720,"avatar":"https://static001.geekbang.org/account/avatar/00/14/cf/08/9a64f248.jpg","nickname":"Rotty","note":"","ucode":"CF215BB6A8BE3B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":383155,"discussion_content":"热点问题 答疑第1期 有说","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1625932150,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1782816,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/34/20/6e359b6c.jpg","nickname":"布谷鸟","note":"","ucode":"3DACE2CAB4DD0D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":351130,"discussion_content":"你的分析总结的非常好！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1614158844,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1330065,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/N0NACGUr8dNAbN6BdiagPHBaB0EnyDsI9zWpwJteqTY38apOEnTOA7JkBAQnzYKJBgxu3Q8YMUILwLAB6camn4w/132","nickname":"Swing","note":"","ucode":"55FCA9ECEFBBEB","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":223578,"discussion_content":"。。。作者肯定编译过源代码。。这毫无疑问。。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1586237390,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":47145,"user_name":"任雪龙","can_delete":false,"product_type":"c1","uid":1126708,"ip_address":"","ucode":"E0D5F4DDB729D6","user_header":"https://static001.geekbang.org/account/avatar/00/11/31/34/ba1c8fc7.jpg","comment_is_top":false,"comment_ctime":1544063163,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"134688049339","product_id":100021101,"comment_content":"厉害，很厉害，但是对于普通公司的应用来说是不是用不到呢，还是说我们这些普通开发者并没有研究到这个层次。","like_count":31},{"had_liked":false,"id":47072,"user_name":"csdpz","can_delete":false,"product_type":"c1","uid":1043243,"ip_address":"","ucode":"E3F9325059165F","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLlyJ6ricobic7OdzAUNkbNpdadtZ87ILUyibpcOb3eRicuHPrzLzefza7fdYS2iaBLseccsqeib8WLeKOg/132","comment_is_top":false,"comment_ctime":1544029696,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"96033310208","product_id":100021101,"comment_content":"国民app的开发者知识面真是好宽广","like_count":23},{"had_liked":false,"id":47641,"user_name":"奔流河","can_delete":false,"product_type":"c1","uid":1158392,"ip_address":"","ucode":"154E39381F34BD","user_header":"https://static001.geekbang.org/account/avatar/00/11/ac/f8/945cc9ac.jpg","comment_is_top":false,"comment_ctime":1544170324,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"87443516244","product_id":100021101,"comment_content":"感觉自己太菜了，看的一脸懵逼。老师 ，可以循序渐进一些吗？一开始就从底层开始 ，听不太懂啊......","like_count":20},{"had_liked":false,"id":47114,"user_name":"旁友💊有伐🤔","can_delete":false,"product_type":"c1","uid":1197404,"ip_address":"","ucode":"F611D234EF7F5A","user_header":"https://static001.geekbang.org/account/avatar/00/12/45/5c/fd6337e7.jpg","comment_is_top":false,"comment_ctime":1544059736,"is_pvip":false,"replies":[{"id":"16876","content":"可以顺着sample去看一下hook点，为什么这样hook。然后去看看allocate 监控的源码，不一定需要看懂sample的实现","user_name":"作者回复","user_name_real":"张绍文","uid":"1009577","ctime":1544107182,"ip_address":"","comment_id":47114,"utype":1}],"discussion_count":1,"race_medal":0,"score":"78853471064","product_id":100021101,"comment_content":"兴致勃勃地去把sample下载下来想要拜读一下，发现是JNI里面看的我一脸懵逼","like_count":18,"discussions":[{"author":{"id":1009577,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/67/a9/e251ace7.jpg","nickname":"张绍文","note":"","ucode":"94B49E5F80BFDE","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":431667,"discussion_content":"可以顺着sample去看一下hook点，为什么这样hook。然后去看看allocate 监控的源码，不一定需要看懂sample的实现","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1544107182,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":47116,"user_name":"周迷奇","can_delete":false,"product_type":"c1","uid":1330150,"ip_address":"","ucode":"78200625BEC1EA","user_header":"https://static001.geekbang.org/account/avatar/00/14/4b/e6/48d112a0.jpg","comment_is_top":false,"comment_ctime":1544059891,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"57378634739","product_id":100021101,"comment_content":"“一张图，毁十优“，之前专门做过一段时间性能优化工作，内存就是优化的重点，除了解决内存泄漏，减少内存的申请，及时回收，减少常驻内存，精简布局外，图片也做了专项整治，依据图片所占内存大小＝长×宽&#47;（资源图片文件密度&#47;手机屏幕密度）∧2×每个像素占用字节数的大体相关性，从这几个维度下手，各个击破，还是收获不小。当然如张老师所言，我以后会多考虑怎么提高内存的使用效率上，而不是单纯的想着怎么减小内存使用的绝对值上，涨姿势了，感谢，加油！","like_count":13},{"had_liked":false,"id":146337,"user_name":"李华","can_delete":false,"product_type":"c1","uid":1121984,"ip_address":"","ucode":"058E96ACEC2C0A","user_header":"https://static001.geekbang.org/account/avatar/00/11/1e/c0/eec916ef.jpg","comment_is_top":false,"comment_ctime":1572502667,"is_pvip":false,"replies":[{"id":"62029","content":"不要嘲笑自己就行，一步一步向前","user_name":"作者回复","user_name_real":"张绍文","uid":"1009577","ctime":1576677542,"ip_address":"","comment_id":146337,"utype":1}],"discussion_count":1,"race_medal":0,"score":"48817142923","product_id":100021101,"comment_content":"我在电脑前，你也在电脑前，我沉默，你也不说话，但你用这篇专栏嘲笑了我。","like_count":12,"discussions":[{"author":{"id":1009577,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/67/a9/e251ace7.jpg","nickname":"张绍文","note":"","ucode":"94B49E5F80BFDE","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":472809,"discussion_content":"不要嘲笑自己就行，一步一步向前","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1576677542,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":53171,"user_name":"菜而已","can_delete":false,"product_type":"c1","uid":1243625,"ip_address":"","ucode":"BE2D64224CD079","user_header":"https://static001.geekbang.org/account/avatar/00/12/f9/e9/421681b7.jpg","comment_is_top":false,"comment_ctime":1545613633,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"44495286593","product_id":100021101,"comment_content":"能不能讲点实例，这种纯理论，让人一脸懵逼啊。","like_count":10,"discussions":[{"author":{"id":1919666,"avatar":"","nickname":"李绍开","note":"","ucode":"9CD65902A50536","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":214412,"discussion_content":"其实满满的都是干货","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585190408,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":48368,"user_name":"海贼凯","can_delete":false,"product_type":"c1","uid":1124978,"ip_address":"","ucode":"207E3D67692924","user_header":"https://static001.geekbang.org/account/avatar/00/11/2a/72/d2f27024.jpg","comment_is_top":false,"comment_ctime":1544429456,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"31609200528","product_id":100021101,"comment_content":"做应用层久了，好多东西都没去深入研究，看了这几篇，好多都没用过，深感惭愧，不过从另一方面想，这也是一个提升自己的机会，加油努力！","like_count":7},{"had_liked":false,"id":48744,"user_name":"朱蓝天","can_delete":false,"product_type":"c1","uid":1330847,"ip_address":"","ucode":"61402573C38C7D","user_header":"https://static001.geekbang.org/account/avatar/00/14/4e/9f/ece713ac.jpg","comment_is_top":false,"comment_ctime":1544528559,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"27314332335","product_id":100021101,"comment_content":"https:&#47;&#47;www.jianshu.com&#47;p&#47;f6386d33062b，这个同学写的基于线上用户的内存占用分析也很不错，对leakcanery进行了改造，并对hprof进行本地解析，在上传到服务端做聚合。<br>","like_count":6,"discussions":[{"author":{"id":1502839,"avatar":"https://static001.geekbang.org/account/avatar/00/16/ee/77/2b9ace9b.jpg","nickname":"超超╰_╯","note":"","ucode":"62398DA0985474","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":345882,"discussion_content":"有源码该多好","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1611807491,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":47060,"user_name":"toughGuy","can_delete":false,"product_type":"c1","uid":1329532,"ip_address":"","ucode":"BF0445F4CBE9B3","user_header":"https://static001.geekbang.org/account/avatar/00/14/49/7c/51088797.jpg","comment_is_top":false,"comment_ctime":1544027232,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"23018863712","product_id":100021101,"comment_content":"正是我需要的教程，感谢张老师","like_count":5},{"had_liked":false,"id":47276,"user_name":"小鹏","can_delete":false,"product_type":"c1","uid":1329051,"ip_address":"","ucode":"51071F02FBB2B6","user_header":"https://static001.geekbang.org/account/avatar/00/14/47/9b/32be4eaf.jpg","comment_is_top":false,"comment_ctime":1544097526,"is_pvip":false,"replies":[{"id":"16865","content":"高手课，本身知识点就难一些哈，如果觉得哪里吃力，可以评论区提问。","user_name":"编辑回复","user_name_real":"郭蕾","uid":"1000473","ctime":1544098763,"ip_address":"","comment_id":47276,"utype":2}],"discussion_count":1,"race_medal":0,"score":"18723966710","product_id":100021101,"comment_content":"大佬，越讲越难了","like_count":4,"discussions":[{"author":{"id":1000473,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/44/19/17fadc62.jpg","nickname":"郭蕾","note":"","ucode":"34F4C07D1C5FE8","race_medal":0,"user_type":8,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":431723,"discussion_content":"高手课，本身知识点就难一些哈，如果觉得哪里吃力，可以评论区提问。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1544098763,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":4}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":112422,"user_name":"东","can_delete":false,"product_type":"c1","uid":1237259,"ip_address":"","ucode":"CAB8CE1C74C37B","user_header":"https://static001.geekbang.org/account/avatar/00/12/e1/0b/c6424841.jpg","comment_is_top":false,"comment_ctime":1562730387,"is_pvip":false,"replies":[{"id":"62051","content":"赞","user_name":"作者回复","user_name_real":"张绍文","uid":"1009577","ctime":1576679587,"ip_address":"","comment_id":112422,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10152664979","product_id":100021101,"comment_content":"diff --git a&#47;alloctrackSample&#47;src&#47;main&#47;cpp&#47;allocTracker.cpp b&#47;alloctrackSample&#47;src&#47;main&#47;cp                                                  p&#47;allocTracker.cpp<br>index b5f4bee..a90dd1c 100755<br>--- a&#47;alloctrackSample&#47;src&#47;main&#47;cpp&#47;allocTracker.cpp<br>+++ b&#47;alloctrackSample&#47;src&#47;main&#47;cpp&#47;allocTracker.cpp<br>@@ -90,7 +90,7 @@ void hookFunc() {<br>     } else if (hookRecordAllocation24 != nullptr) {<br>         LOGI(&quot;Finish get symbol24&quot;);<br> &#47;&#47;        ZzWrap((void *) hookRecordAllocation24, beforeRecordAllocation, nullptr);<br>-        MSHookFunction(hookRecordAllocation26, (void *) &amp;newArtRecordAllocation26,<br>+        MSHookFunction(hookRecordAllocation24, (void *) &amp;newArtRecordAllocation26,<br>                        (void **) &amp;oldArtRecordAllocation26);<br><br>     } else if (hookRecordAllocation23 != NULL) {<br>@@ -181,8 +181,7 @@ JNI_METHOD_DECL(void, setSaveDataDirectory)<br><br><br> static void startARTAllocationTracker() {<br>-    LOGI(ALLOC_TRACKER_TAG,<br>-         &quot;art, startAllocationTracker, func==NULL: %s, artEnvSetCheckJniEnabled==NULL: %s                                                  &quot;,<br>+    LOGI(&quot;art, startAllocationTracker, func==NULL: %s, artEnvSetCheckJniEnabled==NULL: %s                                                  &quot;,<br>          artEnvSetCheckJniEnabled == NULL ? &quot;true&quot; : &quot;false&quot;,<br>          artVmSetCheckJniEnabled == NULL ? &quot;true&quot; : &quot;false&quot;);<br><br>修改了两点了，第一点改了之后android版本7.1.2的手机才能运行，第二点修改后log正常输出","like_count":2,"discussions":[{"author":{"id":1009577,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/67/a9/e251ace7.jpg","nickname":"张绍文","note":"","ucode":"94B49E5F80BFDE","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":457727,"discussion_content":"赞","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1576679587,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":92343,"user_name":"镜像","can_delete":false,"product_type":"c1","uid":1363597,"ip_address":"","ucode":"16CE9300DB6143","user_header":"https://static001.geekbang.org/account/avatar/00/14/ce/8d/a6f974bf.jpg","comment_is_top":false,"comment_ctime":1557237447,"is_pvip":false,"replies":[{"id":"62013","content":"赞","user_name":"作者回复","user_name_real":"张绍文","uid":"1009577","ctime":1576676355,"ip_address":"","comment_id":92343,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10147172039","product_id":100021101,"comment_content":"说一下今天作业的遇到的问题和解决，希望可以帮助到大家。<br>1.界面中的输出内存DUMP到日志，说的是把日志写入到Logcat的中并不是输入。<br>2.java代码中 new File(Environment.getExternalStorageDirectory(), &quot;crashDump&quot;); 是日志输出的文字，我们看Logcat中 saveARTAllocationData write file to XXXX 就能找到对应的日志文件，和git上说的路径可能不一致。<br>3.评论中有同学说看不到日志的输出。代码中 【tracker.initForArt(BuildConfig.VERSION_CODE, 5000);&#47;&#47;从 start 开始触发到5000的数据就 dump 到文件中】 有说明开始后到达5000的数据才会写入文件。  大家设备内存情况不一样，GC回收的频率也不一致，在你不停生产1000个对象的时候，GC不断的跟随回收，导致无法达到 5000的数据量，所以一直没有日志的写入。 可以尝试修改对象的创建数量改成10000。 <br>   ","like_count":2,"discussions":[{"author":{"id":1009577,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/67/a9/e251ace7.jpg","nickname":"张绍文","note":"","ucode":"94B49E5F80BFDE","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":449220,"discussion_content":"赞","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1576676355,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":62089,"user_name":"王洛民","can_delete":false,"product_type":"c1","uid":1106563,"ip_address":"","ucode":"1E4D49D7EAE65D","user_header":"https://static001.geekbang.org/account/avatar/00/10/e2/83/e059479e.jpg","comment_is_top":false,"comment_ctime":1547906152,"is_pvip":false,"replies":[{"id":"22042","content":"后面会统一的来讲","user_name":"作者回复","user_name_real":"张绍文","uid":"1009577","ctime":1548041856,"ip_address":"","comment_id":62089,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10137840744","product_id":100021101,"comment_content":"学习起来很吃力，文章好多都看不懂，现在在处理内存相关的问题，可以告知下都需要掌握哪些基础的知识吗？系统学习的，多谢多谢","like_count":2,"discussions":[{"author":{"id":1009577,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/67/a9/e251ace7.jpg","nickname":"张绍文","note":"","ucode":"94B49E5F80BFDE","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":437092,"discussion_content":"后面会统一的来讲","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1548041856,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":51484,"user_name":"$$$","can_delete":false,"product_type":"c1","uid":1330106,"ip_address":"","ucode":"39909147F5BFDE","user_header":"https://static001.geekbang.org/account/avatar/00/14/4b/ba/e72fdfa2.jpg","comment_is_top":false,"comment_ctime":1545188485,"is_pvip":false,"replies":[{"id":"18628","content":"这个其实也可以在代码中给自己发信号，这样就没有权限问题。<br><br>可以看第六篇的补充篇","user_name":"作者回复","user_name_real":"张绍文","uid":"1009577","ctime":1545192716,"ip_address":"","comment_id":51484,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10135123077","product_id":100021101,"comment_content":"老师好，adb shell kill -S QUIT PID 这个命令，执行了一下，有几点实践记录如下：<br>1、其中“-S”文中是大写，实际执行是小写才行“-s”，查看adb shell kill的命令帮助如下：<br>usage:  kill [-s signame | -signum | -signame] { job | pid | pgrp } ...<br>        kill -l [exit_status ...]<br>2、我用了一台 小米5 Android 7.0 一台 三星S8 Android 8.0 和一台华为荣耀3 Android 4.4.2 没root的三台机器执行这个命令会提示kill: PID : Operation not permitted;<br>3、用了一个模拟器执行就可以","like_count":2,"discussions":[{"author":{"id":1009577,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/67/a9/e251ace7.jpg","nickname":"张绍文","note":"","ucode":"94B49E5F80BFDE","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":433476,"discussion_content":"这个其实也可以在代码中给自己发信号，这样就没有权限问题。\n\n可以看第六篇的补充篇","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1545192716,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":49684,"user_name":"无知","can_delete":false,"product_type":"c1","uid":1329204,"ip_address":"","ucode":"905803028D8980","user_header":"https://static001.geekbang.org/account/avatar/00/14/48/34/40cb22a7.jpg","comment_is_top":false,"comment_ctime":1544752359,"is_pvip":false,"replies":[{"id":"18224","content":"可以看一下后面的例子答疑","user_name":"作者回复","user_name_real":"孙鹏飞","uid":"1171070","ctime":1545050460,"ip_address":"","comment_id":49684,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10134686951","product_id":100021101,"comment_content":"这是第三个了，没有一个能跑起来的。各种懵呀。","like_count":2,"discussions":[{"author":{"id":1171070,"avatar":"https://static001.geekbang.org/account/avatar/00/11/de/7e/5c2b1efe.jpg","nickname":"孙鹏飞","note":"","ucode":"18ADF5C2B78938","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":432720,"discussion_content":"可以看一下后面的例子答疑","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1545050460,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":1}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":48291,"user_name":"HI","can_delete":false,"product_type":"c1","uid":1238921,"ip_address":"","ucode":"C65218113883E6","user_header":"https://static001.geekbang.org/account/avatar/00/12/e7/89/207cc841.jpg","comment_is_top":false,"comment_ctime":1544412167,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"10134346759","product_id":100021101,"comment_content":"通过查看JNI代码，学到了 JNI中CmakeList的跨模块编译，native 函数名的简写<br>#define JNI_METHOD_DECL(ret_type, method_name) \\<br>     extern &quot;C&quot; JNIEXPORT ret_type JNICALL Java_##com_dodola_alloctrack##_##AllocTracker##_##method_name<br><br>以及 Substrate，fbjni ，ndk_dlopen 库的使用，对于源码中的Substrate 库的编译是自己从源码中抽取出来的，貌似没有在github上面看到","like_count":2},{"had_liked":false,"id":55153,"user_name":"羽","can_delete":false,"product_type":"c1","uid":1333168,"ip_address":"","ucode":"3BE2A6EBF305D4","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIICoUUZlgrZPzV6ewHOhgzbMwK80WzRcRwYK5uw5J0o2CIzBzs4zypHmQVUb5szuYmDyicgIU862g/132","comment_is_top":false,"comment_ctime":1546053057,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5841020353","product_id":100021101,"comment_content":"android 4.4.2手机 点击开始记录就crash，无法生成dump日志，利用第一课的native crash定位方式，报错位置是NDK14提供的库函数，换成NDK17还是库函数问题。使用android8.0手机成功。","like_count":1},{"had_liked":false,"id":48153,"user_name":"Billy.Q.S","can_delete":false,"product_type":"c1","uid":1330358,"ip_address":"","ucode":"1E35FB35F980CD","user_header":"https://static001.geekbang.org/account/avatar/00/14/4c/b6/1bbbf8b3.jpg","comment_is_top":false,"comment_ctime":1544370837,"is_pvip":false,"replies":[{"id":"17211","content":"这个是c++的一个特性，可以网上查一下c++filt以及demangle这些关键字","user_name":"作者回复","user_name_real":"张绍文","uid":"1009577","ctime":1544408459,"ip_address":"","comment_id":48153,"utype":1}],"discussion_count":2,"race_medal":0,"score":"5839338133","product_id":100021101,"comment_content":"请教类似这样的函数入口是怎么查找出来的？？_ZN3art3Dbg19alloc_record_count_E、_ZN3art2gc20AllocRecordObjectMap16RecordAllocationEPNS_6ThreadEPNS_6ObjPtrINS_6mirror6ObjectEEEj ？？？有什么工具吗？怎么对应上功能的？","like_count":1,"discussions":[{"author":{"id":1009577,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/67/a9/e251ace7.jpg","nickname":"张绍文","note":"","ucode":"94B49E5F80BFDE","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":432055,"discussion_content":"这个是c++的一个特性，可以网上查一下c++filt以及demangle这些关键字","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1544408459,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1090798,"avatar":"https://static001.geekbang.org/account/avatar/00/10/a4/ee/cffd8ee6.jpg","nickname":"魏全运","note":"","ucode":"3FED702C724E2A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":415195,"discussion_content":"最近才开始学习，有个demangle.com 可以转换这些函数声明，但这些内容会因为版本不同而不一样么？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1637025231,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":47861,"user_name":"的的喀喀湖","can_delete":false,"product_type":"c1","uid":1137138,"ip_address":"","ucode":"E95301D913F115","user_header":"https://static001.geekbang.org/account/avatar/00/11/59/f2/ef476ddc.jpg","comment_is_top":false,"comment_ctime":1544238177,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"5839205473","product_id":100021101,"comment_content":"谢谢老师，之前把理论基础过了一遍，一直不知道怎么实操，看完之后有了新的思路实操了","like_count":1},{"had_liked":false,"id":47672,"user_name":"elephant","can_delete":false,"product_type":"c1","uid":1123628,"ip_address":"","ucode":"99C8DF507CDB7D","user_header":"https://static001.geekbang.org/account/avatar/00/11/25/2c/2bbd84ef.jpg","comment_is_top":false,"comment_ctime":1544175618,"is_pvip":false,"replies":[{"id":"17061","content":"应该是5.0以前那个实现方法已经走不通了，文中提到的方法跟ashmen不一样的","user_name":"作者回复","user_name_real":"张绍文","uid":"1009577","ctime":1544282675,"ip_address":"","comment_id":47672,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5839142914","product_id":100021101,"comment_content":"fresco 在5.0上废弃了ashmem是因为考虑了兼容性问题，java bitmap频繁创建造成抖动，以及5.0以上GC的优化，这些方面才废弃掉的么?","like_count":1,"discussions":[{"author":{"id":1009577,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/67/a9/e251ace7.jpg","nickname":"张绍文","note":"","ucode":"94B49E5F80BFDE","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":431851,"discussion_content":"应该是5.0以前那个实现方法已经走不通了，文中提到的方法跟ashmen不一样的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1544282675,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":47553,"user_name":"young","can_delete":false,"product_type":"c1","uid":1329475,"ip_address":"","ucode":"22288AD4571911","user_header":"https://static001.geekbang.org/account/avatar/00/14/49/43/c3e829a4.jpg","comment_is_top":false,"comment_ctime":1544154085,"is_pvip":false,"replies":[{"id":"16979","content":"允悲，这是接入的force dlopen出问题了，一加手机做了修改…没有手机不太好调试，后面修改一种方式","user_name":"作者回复","user_name_real":"孙鹏飞","uid":"1171070","ctime":1544174842,"ip_address":"","comment_id":47553,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5839121381","product_id":100021101,"comment_content":"12月7日更新后，手机和模拟器还是运行不了。手机是7.1.2系统，错误日志如下：<br>2018-12-07 11:41:31.739 6200-6200&#47;com.dodola.alloctrack A&#47;libc: Fatal signal 7 (SIGBUS), code 1, fault addr 0xbeb79b04 in tid 6200 (dola.alloctrack)<br>2018-12-07 11:41:31.805 6218-6218&#47;? A&#47;DEBUG: *** *** *** *** *** *** *** *** *** *** *** *** *** *** *** ***<br>2018-12-07 11:41:31.805 6218-6218&#47;? A&#47;DEBUG: MK Version: &#39;MK71.2-bacon-201708090305-NIGHTLY&#39;<br>2018-12-07 11:41:31.805 6218-6218&#47;? A&#47;DEBUG: Build fingerprint: &#39;oneplus&#47;bacon&#47;A0001:6.0.1&#47;MHC19Q&#47;ZNH2KAS1KN:user&#47;release-keys&#39;<br>2018-12-07 11:41:31.805 6218-6218&#47;? A&#47;DEBUG: Revision: &#39;0&#39;<br>2018-12-07 11:41:31.805 6218-6218&#47;? A&#47;DEBUG: ABI: &#39;arm&#39;<br>2018-12-07 11:41:31.805 6218-6218&#47;? A&#47;DEBUG: pid: 6200, tid: 6200, name: dola.alloctrack  &gt;&gt;&gt; com.dodola.alloctrack &lt;&lt;&lt;<br>2018-12-07 11:41:31.805 6218-6218&#47;? A&#47;DEBUG: signal 7 (SIGBUS), code 1 (BUS_ADRALN), fault addr 0xbeb79b04<br>2018-12-07 11:41:31.805 6218-6218&#47;? A&#47;DEBUG:     r0 b3c0d000  r1 00000003  r2 beb79b04  r3 00000000<br>2018-12-07 11:41:31.805 6218-6218&#47;? A&#47;DEBUG:     r4 00000003  r5 00000000  r6 b39e9111  r7 b6b03e10<br>2018-12-07 11:41:31.805 6218-6218&#47;? A&#47;DEBUG:     r8 b3cc7609  r9 b6fb1590  sl b6fb11d0  fp 00000000<br>2018-12-07 11:41:31.805 6218-6218&#47;? A&#47;DEBUG:     ip 004f3000  sp beb79a64  lr b6f44e61  pc b6f46fac  cpsr 60070030<br>2018-12-07 11:41:31.809 6218-6218&#47;? A&#47;DEBUG: backtrace:<br>2018-12-07 11:41:31.809 6218-6218&#47;? A&#47;DEBUG:     #00 pc 00004fac  &#47;system&#47;bin&#47;linker (__dl__Z9do_dlopenPKciPK17android_dlextinfoPv+475)<br>2018-12-07 11:41:31.809 6218-6218&#47;? A&#47;DEBUG:     #01 pc 00002e5d  &#47;system&#47;bin&#47;linker (__dl__ZL10dlopen_extPKciPK17android_dlextinfoPv+28)<br>2018-12-07 11:41:31.810 6218-6218&#47;? A&#47;DEBUG:     #02 pc 000009f3  &#47;system&#47;lib&#47;libart.so (offset 0xb9000)","like_count":1,"discussions":[{"author":{"id":1171070,"avatar":"https://static001.geekbang.org/account/avatar/00/11/de/7e/5c2b1efe.jpg","nickname":"孙鹏飞","note":"","ucode":"18ADF5C2B78938","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":431807,"discussion_content":"允悲，这是接入的force dlopen出问题了，一加手机做了修改…没有手机不太好调试，后面修改一种方式","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1544174842,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":1}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":47105,"user_name":"刘佳旭","can_delete":false,"product_type":"c1","uid":1266844,"ip_address":"","ucode":"6E188C9BBB6E13","user_header":"https://static001.geekbang.org/account/avatar/00/13/54/9c/b83c52be.jpg","comment_is_top":false,"comment_ctime":1544058239,"is_pvip":false,"discussion_count":0,"race_medal":1,"score":"5839025535","product_id":100021101,"comment_content":"最早开始做电商app时，用的是imageloader，后来不更新了，改换了Google glide，现在还一直用着，内存优化上远没有作者研究的这么深入，学习了。","like_count":1},{"had_liked":false,"id":355823,"user_name":"亢龙有悔","can_delete":false,"product_type":"c1","uid":1122165,"ip_address":"北京","ucode":"0EF00D3A3A6AB2","user_header":"https://static001.geekbang.org/account/avatar/00/11/1f/75/40e9ce4e.jpg","comment_is_top":false,"comment_ctime":1661768045,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1661768045","product_id":100021101,"comment_content":"构建项目时，出现以下错误：<br><br>cvc-complex-type.2.4.a: Invalid content was found starting with element &#39;base-extension&#39;. One of &#39;{layoutlib}&#39; is expected. <br><br>原因可能是我的 Android Studio 太新了导致的。<br><br>解决方法：File -&gt; Project Structure -&gt; Project -&gt; Android Gradle Plugin Version 改为 7.0.3，以及 Gralde Version 改为 7.0.2","like_count":0},{"had_liked":false,"id":352638,"user_name":"小许","can_delete":false,"product_type":"c1","uid":1022020,"ip_address":"","ucode":"0A7997A3E9368A","user_header":"https://static001.geekbang.org/account/avatar/00/0f/98/44/abb7bfe3.jpg","comment_is_top":false,"comment_ctime":1658826261,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1658826261","product_id":100021101,"comment_content":"Android Studio 的 Allocation Tracker 现在看已经能 Record Native 内存了，不过不清楚原理，没用过，不知道好使不","like_count":0},{"had_liked":false,"id":303281,"user_name":"大龙","can_delete":false,"product_type":"c1","uid":1264752,"ip_address":"","ucode":"79736CE2B60CA0","user_header":"","comment_is_top":false,"comment_ctime":1626698092,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1626698092","product_id":100021101,"comment_content":"ART 虚拟机在内存管理跟回收策略上都做大量优化，内存分配和 GC 效率相比提升了 5～10 倍   ，这个优化有具体的优化点或者相关的资料可以查看到吗","like_count":0},{"had_liked":false,"id":300022,"user_name":"薛定谔不养猫🐱","can_delete":false,"product_type":"c1","uid":2510101,"ip_address":"","ucode":"6923B0D2548DA4","user_header":"https://static001.geekbang.org/account/avatar/00/26/4d/15/059423eb.jpg","comment_is_top":false,"comment_ctime":1624957356,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1624957356","product_id":100021101,"comment_content":"使用DumpPrinter.jar 出现 找不到或无法加载主类 com.dodola.alloc.dump.Main的问题","like_count":0},{"had_liked":false,"id":264008,"user_name":"enendala","can_delete":false,"product_type":"c1","uid":1974755,"ip_address":"","ucode":"9DF775065EADF2","user_header":"","comment_is_top":false,"comment_ctime":1606311281,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1606311281","product_id":100021101,"comment_content":"关于“图片的内存放到 Native”中，张老师给了思路，不过具体在实践中有些实操问题还请不令赐教下<br>1. 为了使用libandroid_runtime.so里面Bitmap的构造函数，是不是在NDK编译的时候，需要引入众多android 源码中的头文件？头文件太多了，一直无法编译成功<br>2. bitmap内存放到native这种方案是否有在线上使用，效果如何？<br><br>帮忙解惑，多谢！","like_count":0},{"had_liked":false,"id":189484,"user_name":"月隐千山","can_delete":false,"product_type":"c1","uid":1178864,"ip_address":"","ucode":"9B86DF2A149C8D","user_header":"https://static001.geekbang.org/account/avatar/00/11/fc/f0/c72e1be3.jpg","comment_is_top":false,"comment_ctime":1584521205,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1584521205","product_id":100021101,"comment_content":"啊啊啊啊啊啊，为什么今天才发现这个课程.......","like_count":0},{"had_liked":false,"id":178025,"user_name":"童","can_delete":false,"product_type":"c1","uid":1121270,"ip_address":"","ucode":"CC7B5847FEFC0B","user_header":"https://static001.geekbang.org/account/avatar/00/11/1b/f6/fd6832f2.jpg","comment_is_top":false,"comment_ctime":1581573274,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1581573274","product_id":100021101,"comment_content":"请问下大佬，这个例子我安装在8.0机子上，怎么直接闪退了。 ","like_count":0,"discussions":[{"author":{"id":1250428,"avatar":"https://static001.geekbang.org/account/avatar/00/13/14/7c/29e6c34b.jpg","nickname":"行者无疆","note":"","ucode":"9D2A7B76EB8097","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":357132,"discussion_content":"看看报什么错","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1615735010,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":172688,"user_name":"瑞","can_delete":false,"product_type":"c1","uid":1334600,"ip_address":"","ucode":"1C5945FD2D05C4","user_header":"https://static001.geekbang.org/account/avatar/00/14/5d/48/03abbbd1.jpg","comment_is_top":false,"comment_ctime":1579251929,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1579251929","product_id":100021101,"comment_content":" Runtime.getRuntime().maxMemory();  <br>  long costMemory = Runtime.getRuntime().totalMemory() - Runtime.getRuntime().freeMemory()；<br>您好，看了这个是说costMemory达到maxMemory80% ，就可以去触发系统去清理内存是吗，还是直接totamMemory 已经拿到占maxMemory的80%，这两种算法都可以吗？","like_count":0},{"had_liked":false,"id":150481,"user_name":"Tony","can_delete":false,"product_type":"c1","uid":1432723,"ip_address":"","ucode":"E30A96891AE98F","user_header":"https://static001.geekbang.org/account/avatar/00/15/dc/93/3521ff2b.jpg","comment_is_top":false,"comment_ctime":1573543589,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573543589","product_id":100021101,"comment_content":"还想像您请教下，我之前也有自己写过一些简单的JNI层的文件，但是时隔很久，好多都忘记了，如何能在android Native develope 这块提升自己，要专门学习c++么，还是别的方式，系统的提升ndk模块的开发能力？","like_count":0},{"had_liked":false,"id":150480,"user_name":"Tony","can_delete":false,"product_type":"c1","uid":1432723,"ip_address":"","ucode":"E30A96891AE98F","user_header":"https://static001.geekbang.org/account/avatar/00/15/dc/93/3521ff2b.jpg","comment_is_top":false,"comment_ctime":1573543447,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573543447","product_id":100021101,"comment_content":"想问下作者，nativeCreateBitmap()方法，是调用的runtime.so库，对应的java类是哪个？","like_count":0},{"had_liked":false,"id":140295,"user_name":"Geek_f342a0","can_delete":false,"product_type":"c1","uid":1657339,"ip_address":"","ucode":"30DA7380CC3355","user_header":"","comment_is_top":false,"comment_ctime":1570872425,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1570872425","product_id":100021101,"comment_content":"请问下面这个生成日志到文件中，出现崩溃，这个要怎么解决呢？<br>10-12 17:25:42.849 F&#47;DEBUG   (13817):<br>10-12 17:25:42.849 F&#47;DEBUG   (13817): backtrace:<br>10-12 17:25:42.850 F&#47;DEBUG   (13817):     #00 pc 0001206c  &#47;data&#47;app&#47;com.dodola.alloctrack-Pe79oBe6rxHQouPYXq6FzA==&#47;lib&#47;arm&#47;liballoc-lib.so<br>10-12 17:25:42.850 F&#47;DEBUG   (13817):     #01 pc 00011615  &#47;data&#47;app&#47;com.dodola.alloctrack-Pe79oBe6rxHQouPYXq6FzA==&#47;lib&#47;arm&#47;liballoc-lib.so<br>10-12 17:25:42.850 F&#47;DEBUG   (13817):     #02 pc 00010a0b  &#47;data&#47;app&#47;com.dodola.alloctrack-Pe79oBe6rxHQouPYXq6FzA==&#47;lib&#47;arm&#47;liballoc-lib.so<br>10-12 17:25:42.850 F&#47;DEBUG   (13817):     #03 pc 000fa461  &#47;system&#47;lib&#47;libart.so (art::mirror::Object* art::gc::Heap::AllocObjectWithAllocator&lt;true, false, art::VoidFunctor&gt;(art::Thread*, art::ObjPtr&lt;art::gc::Heap::AllocObjectWithAllocator&lt;true, false, art::VoidFunctor&gt;::Class&gt;, unsigned int, art::gc::AllocatorType, art::VoidFunctor const&amp;)+916)<br>10-12 17:25:42.850 F&#47;DEBUG   (13817):     #04 pc 003e8a45  &#47;system&#47;lib&#47;libart.so (offset 0x264000) (artAllocObjectFromCodeInitializedRegionTLABInstrumented+44)<br>10-12 17:25:42.850 F&#47;DEBUG   (13817):     #05 pc 0043368b  &#47;system&#47;lib&#47;libart.so (offset 0x264000) (art_quick_alloc_object_initialized_region_tlab_instrumented+26)<br>10-12 17:25:42.850 F&#47;DEBUG   (13817):     #06 pc 00004ced  &#47;dev&#47;ashmem&#47;dalvik-jit-code-cache (deleted) (com.dodola.alloctrack.MainActivity$4.onClick+172)<br>10-12 17:25:42.850 F&#47;DEBUG   (13817):     #07 pc 00430375  &#47;system&#47;lib&#47;libart.so (offset 0x264000) (art_quick_invoke_stub_internal+68)<br>10-12 17:25:42.850 F&#47;DEBUG   (13817):     #08 pc 004091a1  &#47;system&#47;lib&#47;libart.so (offset 0x264000) (art_quick_invoke_stub+224)<br>10-12 17:25:42.850 F&#47;DEBUG   (13817):     #09 pc 000a4901  &#47;system&#47;lib&#47;libart.so (art::ArtMethod::Invoke(art::Thread*, unsigned int*, unsigned int, art::JValue*, char const*)+136)","like_count":0},{"had_liked":false,"id":140293,"user_name":"Geek_f342a0","can_delete":false,"product_type":"c1","uid":1657339,"ip_address":"","ucode":"30DA7380CC3355","user_header":"","comment_is_top":false,"comment_ctime":1570872396,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1570872396","product_id":100021101,"comment_content":"10-12 17:25:42.849 F&#47;DEBUG   (13817):<br>10-12 17:25:42.849 F&#47;DEBUG   (13817): backtrace:<br>10-12 17:25:42.850 F&#47;DEBUG   (13817):     #00 pc 0001206c  &#47;data&#47;app&#47;com.dodola.alloctrack-Pe79oBe6rxHQouPYXq6FzA==&#47;lib&#47;arm&#47;liballoc-lib.so<br>10-12 17:25:42.850 F&#47;DEBUG   (13817):     #01 pc 00011615  &#47;data&#47;app&#47;com.dodola.alloctrack-Pe79oBe6rxHQouPYXq6FzA==&#47;lib&#47;arm&#47;liballoc-lib.so<br>10-12 17:25:42.850 F&#47;DEBUG   (13817):     #02 pc 00010a0b  &#47;data&#47;app&#47;com.dodola.alloctrack-Pe79oBe6rxHQouPYXq6FzA==&#47;lib&#47;arm&#47;liballoc-lib.so<br>10-12 17:25:42.850 F&#47;DEBUG   (13817):     #03 pc 000fa461  &#47;system&#47;lib&#47;libart.so (art::mirror::Object* art::gc::Heap::AllocObjectWithAllocator&lt;true, false, art::VoidFunctor&gt;(art::Thread*, art::ObjPtr&lt;art::gc::Heap::AllocObjectWithAllocator&lt;true, false, art::VoidFunctor&gt;::Class&gt;, unsigned int, art::gc::AllocatorType, art::VoidFunctor const&amp;)+916)<br>10-12 17:25:42.850 F&#47;DEBUG   (13817):     #04 pc 003e8a45  &#47;system&#47;lib&#47;libart.so (offset 0x264000) (artAllocObjectFromCodeInitializedRegionTLABInstrumented+44)<br>10-12 17:25:42.850 F&#47;DEBUG   (13817):     #05 pc 0043368b  &#47;system&#47;lib&#47;libart.so (offset 0x264000) (art_quick_alloc_object_initialized_region_tlab_instrumented+26)<br>10-12 17:25:42.850 F&#47;DEBUG   (13817):     #06 pc 00004ced  &#47;dev&#47;ashmem&#47;dalvik-jit-code-cache (deleted) (com.dodola.alloctrack.MainActivity$4.onClick+172)<br>10-12 17:25:42.850 F&#47;DEBUG   (13817):     #07 pc 00430375  &#47;system&#47;lib&#47;libart.so (offset 0x264000) (art_quick_invoke_stub_internal+68)<br>10-12 17:25:42.850 F&#47;DEBUG   (13817):     #08 pc 004091a1  &#47;system&#47;lib&#47;libart.so (offset 0x264000) (art_quick_invoke_stub+224)<br>10-12 17:25:42.850 F&#47;DEBUG   (13817):     #09 pc 000a4901  &#47;system&#47;lib&#47;libart.so (art::ArtMethod::Invoke(art::Thread*, unsigned int*, unsigned int, art::JValue*, char const*)+136)","like_count":0},{"had_liked":false,"id":139303,"user_name":"Geek_f342a0","can_delete":false,"product_type":"c1","uid":1657339,"ip_address":"","ucode":"30DA7380CC3355","user_header":"","comment_is_top":false,"comment_ctime":1570607632,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1570607632","product_id":100021101,"comment_content":"在开发过程中内存优化的方法：<br>1.合理的分配资源和释放资源，比如listview的item的复用，关闭不必要的线程。<br>2.不要频繁的new处理对象，会频繁触发系统的gc，导致应用在没有任何堆栈的情况下，直接崩溃，尽量复用同一个对象。","like_count":0},{"had_liked":false,"id":135292,"user_name":"louis","can_delete":false,"product_type":"c1","uid":1127885,"ip_address":"","ucode":"D23F88E1F8F89A","user_header":"https://static001.geekbang.org/account/avatar/00/11/35/cd/c5e054ee.jpg","comment_is_top":false,"comment_ctime":1569119472,"is_pvip":false,"replies":[{"id":"62082","content":"这块的细节有很多，而且高版本也越来越难了","user_name":"作者回复","user_name_real":"张绍文","uid":"1009577","ctime":1576683382,"ip_address":"","comment_id":135292,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1569119472","product_id":100021101,"comment_content":"张老师，你好，我在文中看到你对保活也一定地了解，请问针对不同的手机有什么好的方案提高保活的概率呢？","like_count":0,"discussions":[{"author":{"id":1009577,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/67/a9/e251ace7.jpg","nickname":"张绍文","note":"","ucode":"94B49E5F80BFDE","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":468129,"discussion_content":"这块的细节有很多，而且高版本也越来越难了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1576683382,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":133581,"user_name":"小文","can_delete":false,"product_type":"c1","uid":1653362,"ip_address":"","ucode":"1497D0FEE8EDA6","user_header":"https://static001.geekbang.org/account/avatar/00/19/3a/72/7a312269.jpg","comment_is_top":false,"comment_ctime":1568614249,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1568614249","product_id":100021101,"comment_content":"根据readme里的说明，跟着一步步做下来，也成功拿到dump日志了。然后翻看jni里的代码Substrate、fbjni、ndk_dlopen相对应的位置也大体了解了，但是源码看的实在看不懂，看到老师的评论回复，后期还会对这些基础做出讲解。因此先不纠结过多源码，先把这种工具集成到自己之前的代码中试试。","like_count":0},{"had_liked":false,"id":123031,"user_name":"國軍","can_delete":false,"product_type":"c1","uid":1332129,"ip_address":"","ucode":"DA6EEAA322C7F8","user_header":"https://static001.geekbang.org/account/avatar/00/14/53/a1/1ffc79a7.jpg","comment_is_top":false,"comment_ctime":1565595283,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"1565595283","product_id":100021101,"comment_content":"adb shell kill -S QUIT PID  执行出现异常？<br><br>PS C:\\Users\\sun&gt; adb shell kill -S QUIT PID<br>&#47;system&#47;bin&#47;sh: kill: bad signal &#39;S&#39;","like_count":0,"discussions":[{"author":{"id":1017016,"avatar":"","nickname":"shaobin0604","note":"","ucode":"E6BFA8CD66077D","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":179993,"discussion_content":"kill [-s signame | -signum | -signame] { job | pid | pgrp }","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582268349,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1345559,"avatar":"https://static001.geekbang.org/account/avatar/00/14/88/17/2a74bf7d.jpg","nickname":"艾超","note":"","ucode":"0AAFE5B3C096C2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":33896,"discussion_content":"adb shell kill -SIGQUIT PID","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571147659,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":115747,"user_name":"黑色毛衣","can_delete":false,"product_type":"c1","uid":1135912,"ip_address":"","ucode":"FF7E235F91BA5C","user_header":"https://static001.geekbang.org/account/avatar/00/11/55/28/31b0cf2f.jpg","comment_is_top":false,"comment_ctime":1563716217,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1563716217","product_id":100021101,"comment_content":"压力山大，感觉要学习的还有很多，我还能挺的住吗？？<br><br>对 ART 虚拟机和 Davilk 虚拟机了解甚少，要深入研究下了～～·","like_count":0},{"had_liked":false,"id":115733,"user_name":"EchoSomeTH","can_delete":false,"product_type":"c1","uid":1602634,"ip_address":"","ucode":"E73F13BF09695F","user_header":"https://static001.geekbang.org/account/avatar/00/18/74/4a/2dd9d62a.jpg","comment_is_top":false,"comment_ctime":1563708700,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1563708700","product_id":100021101,"comment_content":"模拟器跑不出来哈？卡了一会儿，然后文件夹里啥也没生成","like_count":0,"discussions":[{"author":{"id":1024363,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a1/6b/bebb4342.jpg","nickname":"星风雪雨","note":"","ucode":"31194F20C949F6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":49731,"discussion_content":"我也是，换真机，好了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573625560,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":112137,"user_name":"Epic","can_delete":false,"product_type":"c1","uid":1513697,"ip_address":"","ucode":"B7BE15277129CC","user_header":"https://static001.geekbang.org/account/avatar/00/17/18/e1/b2eae975.jpg","comment_is_top":false,"comment_ctime":1562673413,"is_pvip":false,"replies":[{"id":"41534","content":"libandroid_runtime.so是系统库","user_name":"作者回复","user_name_real":"张绍文","uid":"1009577","ctime":1563203734,"ip_address":"","comment_id":112137,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1562673413","product_id":100021101,"comment_content":"nativeCreateBitmap方法是调的这个so里面的方法吧。libandroid_runtime.so是需要另外导入吗，百度之后没有找到这个库，求助","like_count":0,"discussions":[{"author":{"id":1009577,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/67/a9/e251ace7.jpg","nickname":"张绍文","note":"","ucode":"94B49E5F80BFDE","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":457595,"discussion_content":"libandroid_runtime.so是系统库","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1563203734,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":110113,"user_name":"逆流而上","can_delete":false,"product_type":"c1","uid":1331932,"ip_address":"","ucode":"1C0428989C68EC","user_header":"https://static001.geekbang.org/account/avatar/00/14/52/dc/7691a77b.jpg","comment_is_top":false,"comment_ctime":1562197975,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1562197975","product_id":100021101,"comment_content":"跑了sample之后，看到日志是在Logcat打印的，打印出分配对象的数量，07-04 07:49:14.161 8480-8480&#47;com.dodola.alloctrack I&#47;AllocTracker: ====current alloc count 3828=====。但因为原理不熟，看不懂代码，希望老师能讲解这个Allocation Tracker的原理","like_count":0},{"had_liked":false,"id":96617,"user_name":"秋水无痕","can_delete":false,"product_type":"c1","uid":1328707,"ip_address":"","ucode":"A3C3DF44426EBF","user_header":"https://static001.geekbang.org/account/avatar/00/14/46/43/7545067a.jpg","comment_is_top":false,"comment_ctime":1558479319,"is_pvip":false,"replies":[{"id":"62018","content":"这块网上有比较多的资料，也可以看看Linux的课程","user_name":"作者回复","user_name_real":"张绍文","uid":"1009577","ctime":1576676675,"ip_address":"","comment_id":96617,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1558479319","product_id":100021101,"comment_content":"没有说道linux或者jvm相关内存管理呢？","like_count":0,"discussions":[{"author":{"id":1009577,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/67/a9/e251ace7.jpg","nickname":"张绍文","note":"","ucode":"94B49E5F80BFDE","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":450939,"discussion_content":"这块网上有比较多的资料，也可以看看Linux的课程","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1576676675,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":88517,"user_name":"小苏","can_delete":false,"product_type":"c1","uid":1502122,"ip_address":"","ucode":"F28C22A1AFCE6A","user_header":"https://static001.geekbang.org/account/avatar/00/16/eb/aa/357d0442.jpg","comment_is_top":false,"comment_ctime":1555934734,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1555934734","product_id":100021101,"comment_content":"请教下：<br>换了2台手机，一台是android7.1.2,一台是android8.0.0都没有生成dump信息文件呢？","like_count":0,"discussions":[{"author":{"id":1334600,"avatar":"https://static001.geekbang.org/account/avatar/00/14/5d/48/03abbbd1.jpg","nickname":"瑞","note":"","ucode":"1C5945FD2D05C4","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":139790,"discussion_content":"我这边也是？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579318021,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":82660,"user_name":"百岁无忧","can_delete":false,"product_type":"c1","uid":1453823,"ip_address":"","ucode":"5283111F21CE40","user_header":"https://static001.geekbang.org/account/avatar/00/16/2e/ff/9467da86.jpg","comment_is_top":false,"comment_ctime":1554271993,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1554271993","product_id":100021101,"comment_content":"生成的本地文件用tools下的工具转成成txt,结果是空的,老师请说明下","like_count":0},{"had_liked":false,"id":72529,"user_name":"TravelingLight","can_delete":false,"product_type":"c1","uid":1340673,"ip_address":"","ucode":"F022ADC52EC866","user_header":"https://static001.geekbang.org/account/avatar/00/14/75/01/a0a9e63b.jpg","comment_is_top":false,"comment_ctime":1551664905,"is_pvip":false,"replies":[{"id":"28205","content":"Profiler可以理解为换了一套界面而已","user_name":"作者回复","user_name_real":"张绍文","uid":"1009577","ctime":1552917769,"ip_address":"","comment_id":72529,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1551664905","product_id":100021101,"comment_content":"systrace 和traceview现在可以被profiler代替了吗","like_count":0,"discussions":[{"author":{"id":1009577,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/67/a9/e251ace7.jpg","nickname":"张绍文","note":"","ucode":"94B49E5F80BFDE","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":441633,"discussion_content":"Profiler可以理解为换了一套界面而已","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1552917769,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":71454,"user_name":"久九","can_delete":false,"product_type":"c1","uid":1328885,"ip_address":"","ucode":"ED9FE1E66B164B","user_header":"https://static001.geekbang.org/account/avatar/00/14/46/f5/9612c4d3.jpg","comment_is_top":false,"comment_ctime":1551345481,"is_pvip":false,"replies":[{"id":"30703","content":"可以看看后面关于Native Hook的文章，总的来说inline hook的稳定性和兼容性限制还是比较大的","user_name":"作者回复","user_name_real":"张绍文","uid":"1009577","ctime":1555137955,"ip_address":"","comment_id":71454,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1551345481","product_id":100021101,"comment_content":"跑simple的时候，用了两个手机和一个模拟器，分别是 Redmi Note 5A （7.1.1 ）、HUAWEI EML-AL00 （9.0） 以及模拟器Nexus 5 （7.0）。只有HUAWEI EML-AL00成功获取到了dump_log.txt.其他两个在第一步就失败了。虽然最终获取到了日志文件，也知道核心原理是通过拦截不同版本的RecordAllocation函数来获取对象的内存分配情况，但是Substrate \bHook框架一点都看不懂。这方面知识要如何补充才合适？","like_count":0,"discussions":[{"author":{"id":1009577,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/67/a9/e251ace7.jpg","nickname":"张绍文","note":"","ucode":"94B49E5F80BFDE","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":441160,"discussion_content":"可以看看后面关于Native Hook的文章，总的来说inline hook的稳定性和兼容性限制还是比较大的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1555137955,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":63328,"user_name":"Swing","can_delete":false,"product_type":"c1","uid":1330065,"ip_address":"","ucode":"55FCA9ECEFBBEB","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/N0NACGUr8dNAbN6BdiagPHBaB0EnyDsI9zWpwJteqTY38apOEnTOA7JkBAQnzYKJBgxu3Q8YMUILwLAB6camn4w/132","comment_is_top":false,"comment_ctime":1548323823,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1548323823","product_id":100021101,"comment_content":"看着很吃力………看来基础不行，远达不到高级水准呀…不过，努力吧","like_count":0},{"had_liked":false,"id":53316,"user_name":"解文军","can_delete":false,"product_type":"c1","uid":1323319,"ip_address":"","ucode":"DC7F5941F8D835","user_header":"https://static001.geekbang.org/account/avatar/00/14/31/37/74ae6bdd.jpg","comment_is_top":false,"comment_ctime":1545625545,"is_pvip":false,"replies":[{"id":"19356","content":"Profiler代码也是开源的，也在aosp里面","user_name":"作者回复","user_name_real":"张绍文","uid":"1009577","ctime":1545648386,"ip_address":"","comment_id":53316,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1545625545","product_id":100021101,"comment_content":"怎么知道android profiler的实现原理的？有源码可以看吗","like_count":0,"discussions":[{"author":{"id":1009577,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/67/a9/e251ace7.jpg","nickname":"张绍文","note":"","ucode":"94B49E5F80BFDE","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":434096,"discussion_content":"Profiler代码也是开源的，也在aosp里面","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1545648386,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":52499,"user_name":"seven","can_delete":false,"product_type":"c1","uid":1192785,"ip_address":"","ucode":"2E50D567420D65","user_header":"https://static001.geekbang.org/account/avatar/00/12/33/51/9073faa5.jpg","comment_is_top":false,"comment_ctime":1545396586,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1545396586","product_id":100021101,"comment_content":"落后了好多节课~大佬能讲一下常用的优化方法吗？还有怎么一开始就避免这种内存问题？大家应该都想知道大厂是怎么做的。","like_count":0},{"had_liked":false,"id":52040,"user_name":"周大军","can_delete":false,"product_type":"c1","uid":1075960,"ip_address":"","ucode":"E9452270B728AB","user_header":"https://static001.geekbang.org/account/avatar/00/10/6a/f8/cae5e419.jpg","comment_is_top":false,"comment_ctime":1545298938,"is_pvip":false,"replies":[{"id":"19024","content":"哦，这块确实是疏忽，那个输出内存dump到日志，指的是输出到logcat","user_name":"作者回复","user_name_real":"孙鹏飞","uid":"1171070","ctime":1545368498,"ip_address":"","comment_id":52040,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1545298938","product_id":100021101,"comment_content":"这章看完，编译跑完demo，发现点击“开始记录”-&gt;&quot;输出内存DUMP到日志&quot;-&gt;&quot;停止记录&quot;后，看sdcard&#47;crashDump&#47;目录下没有生成文件，分别试了华为V8，华为P9，魅族MX5和模拟器都能生成。。。 <br>然后去看JNI代码，好吃力，跟我之前接触的皮毛C++忘记得差不多了，粗略温习了遍还是看不懂，打算先接着学习后面的再回来搞搞这个Sample3.","like_count":0,"discussions":[{"author":{"id":1171070,"avatar":"https://static001.geekbang.org/account/avatar/00/11/de/7e/5c2b1efe.jpg","nickname":"孙鹏飞","note":"","ucode":"18ADF5C2B78938","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":433716,"discussion_content":"哦，这块确实是疏忽，那个输出内存dump到日志，指的是输出到logcat","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1545368498,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":1}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":51217,"user_name":"roidft","can_delete":false,"product_type":"c1","uid":1330639,"ip_address":"","ucode":"B56D705F4B13E8","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/hn11ptlibSSSpaPHT36toUf1gicmTKAdyHXHAaJbJK77YGGZnW7nqMkHjFJRShU6JT8uTjum9OaicBAUDFLSIyRTw/132","comment_is_top":false,"comment_ctime":1545138083,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1545138083","product_id":100021101,"comment_content":"crashDump下生成的文件怎么看的？不知道是乱码还是内存中的信息，一句也没看懂啊！","like_count":0},{"had_liked":false,"id":50285,"user_name":"志超","can_delete":false,"product_type":"c1","uid":1036048,"ip_address":"","ucode":"4043753B229784","user_header":"https://static001.geekbang.org/account/avatar/00/0f/cf/10/af87006f.jpg","comment_is_top":false,"comment_ctime":1544944003,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1544944003","product_id":100021101,"comment_content":"难啊！","like_count":0},{"had_liked":false,"id":49779,"user_name":"OnClickListener","can_delete":false,"product_type":"c1","uid":1250465,"ip_address":"","ucode":"35BE7FF3D4A258","user_header":"https://static001.geekbang.org/account/avatar/00/13/14/a1/107910b4.jpg","comment_is_top":false,"comment_ctime":1544768172,"is_pvip":false,"replies":[{"id":"18223","content":"需要注意一下回调方法的生命周期，一定是全局静态的，不能是local的，然后可以debug一下是执行到哪个位置断掉的，比如信号没捕获到，比如注册信号catch的之前就出错了这样。与so文件本身没有关系的","user_name":"作者回复","user_name_real":"孙鹏飞","uid":"1171070","ctime":1545050400,"ip_address":"","comment_id":49779,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1544768172","product_id":100021101,"comment_content":"请教老师一个问题。我用breakpad集成。在写的demo里面，能够获取dump文件。保是一旦集成到自己的项目，似乎就不能生成dump了。请问通常是什么原因导致的？原项目涉及的so大大小小20个，而且都是无符号的库，请问这有关系吗？","like_count":0,"discussions":[{"author":{"id":1171070,"avatar":"https://static001.geekbang.org/account/avatar/00/11/de/7e/5c2b1efe.jpg","nickname":"孙鹏飞","note":"","ucode":"18ADF5C2B78938","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":432770,"discussion_content":"需要注意一下回调方法的生命周期，一定是全局静态的，不能是local的，然后可以debug一下是执行到哪个位置断掉的，比如信号没捕获到，比如注册信号catch的之前就出错了这样。与so文件本身没有关系的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1545050400,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":1}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":48678,"user_name":"Lea","can_delete":false,"product_type":"c1","uid":1329793,"ip_address":"","ucode":"C4BB5707069952","user_header":"https://static001.geekbang.org/account/avatar/00/14/4a/81/b7a26a15.jpg","comment_is_top":false,"comment_ctime":1544513582,"is_pvip":false,"replies":[{"id":"17488","content":"不是，是一些黑科技","user_name":"作者回复","user_name_real":"张绍文","uid":"1009577","ctime":1544524097,"ip_address":"","comment_id":48678,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1544513582","product_id":100021101,"comment_content":"&quot;Android 8.0 以后应用保活变得困难很多，但依然有...&quot;,是使用Jobscheduler？<br>","like_count":0,"discussions":[{"author":{"id":1009577,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/67/a9/e251ace7.jpg","nickname":"张绍文","note":"","ucode":"94B49E5F80BFDE","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":432306,"discussion_content":"不是，是一些黑科技","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1544524097,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":48518,"user_name":"47Log","can_delete":false,"product_type":"c1","uid":1141404,"ip_address":"","ucode":"A87568B3B7EE05","user_header":"https://static001.geekbang.org/account/avatar/00/11/6a/9c/5cd7f4c2.jpg","comment_is_top":false,"comment_ctime":1544458753,"is_pvip":false,"replies":[{"id":"17376","content":"我们目前都是把分析做在后台，本地裁剪hprof文件上传到后台","user_name":"作者回复","user_name_real":"张绍文","uid":"1009577","ctime":1544492513,"ip_address":"","comment_id":48518,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1544458753","product_id":100021101,"comment_content":"之前我通过debug api检测到内存到一定阈值的时候把hprof文件弄下来自动分析，问题是分析器占用内存太高了，手机端老是没有内存就分析终止了，老师有没有什么好的方法？","like_count":0,"discussions":[{"author":{"id":1009577,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/67/a9/e251ace7.jpg","nickname":"张绍文","note":"","ucode":"94B49E5F80BFDE","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":432223,"discussion_content":"我们目前都是把分析做在后台，本地裁剪hprof文件上传到后台","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1544492513,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":48325,"user_name":"蚂蚁内推+v","can_delete":false,"product_type":"c1","uid":1050508,"ip_address":"","ucode":"24B10AEE54B3FD","user_header":"https://static001.geekbang.org/account/avatar/00/10/07/8c/0d886dcc.jpg","comment_is_top":false,"comment_ctime":1544422075,"is_pvip":false,"replies":[{"id":"17480","content":"7.0加的，可以看一下源码。它是把native内存跟java对象绑定在一起","user_name":"作者回复","user_name_real":"张绍文","uid":"1009577","ctime":1544523649,"ip_address":"","comment_id":48325,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1544422075","product_id":100021101,"comment_content":"NativeAllocationRegistry 这块是底层机制吗，平时开发工程中 使用bitmap 没发现变化。这块是8.0内部封装好的不？可是我有个疑惑希望绍文老师解答下，这机制和2.3以下的有什么不同，他如何做到自动回收无用图片呢？","like_count":0,"discussions":[{"author":{"id":1009577,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/67/a9/e251ace7.jpg","nickname":"张绍文","note":"","ucode":"94B49E5F80BFDE","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":432130,"discussion_content":"7.0加的，可以看一下源码。它是把native内存跟java对象绑定在一起","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1544523649,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":48250,"user_name":"🍀Oriana🍡","can_delete":false,"product_type":"c1","uid":1328661,"ip_address":"","ucode":"84B3D477D71993","user_header":"https://static001.geekbang.org/account/avatar/00/14/46/15/d78bdc8b.jpg","comment_is_top":false,"comment_ctime":1544406563,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1544406563","product_id":100021101,"comment_content":"每次涉及到内存优化都觉得没有头绪，profile的英文文档也看了很多遍，定位问题的时候总觉得好像不太对，总有无从下手的急躁","like_count":0},{"had_liked":false,"id":48137,"user_name":"我的心情在荡漾","can_delete":false,"product_type":"c1","uid":1328935,"ip_address":"","ucode":"A6066305E8BF1F","user_header":"https://static001.geekbang.org/account/avatar/00/14/47/27/448b5262.jpg","comment_is_top":false,"comment_ctime":1544366379,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1544366379","product_id":100021101,"comment_content":"大佬的这些精华文章，够我消化好几年的啊","like_count":0},{"had_liked":false,"id":48093,"user_name":"L","can_delete":false,"product_type":"c1","uid":1330979,"ip_address":"","ucode":"8514C3CABFCC84","user_header":"https://static001.geekbang.org/account/avatar/00/14/4f/23/db8403c7.jpg","comment_is_top":false,"comment_ctime":1544350525,"is_pvip":false,"replies":[{"id":"17197","content":"这个主要是架构和监控上，通常也是利用一些系统回调。或者发现java内存触顶率比较高的时候，主要调用各个模块回收内存的接口","user_name":"作者回复","user_name_real":"张绍文","uid":"1009577","ctime":1544408132,"ip_address":"","comment_id":48093,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1544350525","product_id":100021101,"comment_content":"很棒！话说怎么做到当内存不足的时候，能快速的回收内存，而又不影响到整机的性能？目前各大厂商各种内存回收机制的优化，但是在某些场景上还有影响到用户体验，而且在一些monkey等测试上，目前感觉android内存回收也没有那么的让人满意，大神，有啥指点的，谢谢！","like_count":0,"discussions":[{"author":{"id":1009577,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/67/a9/e251ace7.jpg","nickname":"张绍文","note":"","ucode":"94B49E5F80BFDE","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":432021,"discussion_content":"这个主要是架构和监控上，通常也是利用一些系统回调。或者发现java内存触顶率比较高的时候，主要调用各个模块回收内存的接口","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1544408132,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":47777,"user_name":"catkin","can_delete":false,"product_type":"c1","uid":1127815,"ip_address":"","ucode":"2E7ECACBC30CEC","user_header":"https://static001.geekbang.org/account/avatar/00/11/35/87/b2a1e5cc.jpg","comment_is_top":false,"comment_ctime":1544195128,"is_pvip":false,"replies":[{"id":"17062","content":"一方面是经验，更多也是从问题入手分析。<br><br>也比较少为了看源码而看源码，当然如果对整个系统的一些基础知识有所熟悉，看起源码会更加得心应手。","user_name":"作者回复","user_name_real":"张绍文","uid":"1009577","ctime":1544282767,"ip_address":"","comment_id":47777,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1544195128","product_id":100021101,"comment_content":"张老师你好，看了这篇文章也运行了案例，看了具体的代码实现，深感佩服。我自己也翻了art的内存分配的代码，看的很痛苦，如果要是我写这个sample肯定没思路也不会写，所以想请教一下平时您是怎么看源码的和遇到一个陌生问题的解决思路！","like_count":0,"discussions":[{"author":{"id":1009577,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/67/a9/e251ace7.jpg","nickname":"张绍文","note":"","ucode":"94B49E5F80BFDE","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":431885,"discussion_content":"一方面是经验，更多也是从问题入手分析。\n\n也比较少为了看源码而看源码，当然如果对整个系统的一些基础知识有所熟悉，看起源码会更加得心应手。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1544282767,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":47695,"user_name":"王佐","can_delete":false,"product_type":"c1","uid":1329630,"ip_address":"","ucode":"D345D012194681","user_header":"https://static001.geekbang.org/account/avatar/00/14/49/de/507f64f2.jpg","comment_is_top":false,"comment_ctime":1544183654,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1544183654","product_id":100021101,"comment_content":"最近碰到一个webview的问题，启动时，有时候APP会卡死至无响应，但是日志追踪后看，根本不好排查，想着准备用性能分析来追踪问题了","like_count":0},{"had_liked":false,"id":47628,"user_name":"极速得bundle","can_delete":false,"product_type":"c1","uid":1341317,"ip_address":"","ucode":"F5498543B50B91","user_header":"https://static001.geekbang.org/account/avatar/00/14/77/85/05030bf8.jpg","comment_is_top":false,"comment_ctime":1544168097,"is_pvip":false,"replies":[{"id":"16978","content":"不用着急，我们可以通过这个项目去看看android的一些机制，去看看源码的相关实现，整个处理流程。<br><br>看不懂可以先放着，后面我们再回头来看","user_name":"作者回复","user_name_real":"张绍文","uid":"1009577","ctime":1544173980,"ip_address":"","comment_id":47628,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1544168097","product_id":100021101,"comment_content":"您好，如果native层不会怎么办，我感觉看着有些吃力😰😰😰","like_count":0,"discussions":[{"author":{"id":1009577,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/67/a9/e251ace7.jpg","nickname":"张绍文","note":"","ucode":"94B49E5F80BFDE","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":431839,"discussion_content":"不用着急，我们可以通过这个项目去看看android的一些机制，去看看源码的相关实现，整个处理流程。\n\n看不懂可以先放着，后面我们再回头来看","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1544173980,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":47533,"user_name":"memory","can_delete":false,"product_type":"c1","uid":1334237,"ip_address":"","ucode":"86F314F5BBE4A6","user_header":"https://static001.geekbang.org/account/avatar/00/14/5b/dd/26056401.jpg","comment_is_top":false,"comment_ctime":1544151624,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1544151624","product_id":100021101,"comment_content":"没有生成文件是怎么回事呢","like_count":0},{"had_liked":false,"id":47354,"user_name":"William_L","can_delete":false,"product_type":"c1","uid":1158699,"ip_address":"","ucode":"9A647DFC83703C","user_header":"https://static001.geekbang.org/account/avatar/00/11/ae/2b/03cc3aed.jpg","comment_is_top":false,"comment_ctime":1544113251,"is_pvip":false,"replies":[{"id":"16974","content":"下一节会说到，主要是如何保留oom现场的问题","user_name":"作者回复","user_name_real":"张绍文","uid":"1009577","ctime":1544173047,"ip_address":"","comment_id":47354,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1544113251","product_id":100021101,"comment_content":"解决oom问题有什么好的工具检测，monkey测试可靠吗？","like_count":0,"discussions":[{"author":{"id":1009577,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/67/a9/e251ace7.jpg","nickname":"张绍文","note":"","ucode":"94B49E5F80BFDE","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":431748,"discussion_content":"下一节会说到，主要是如何保留oom现场的问题","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1544173047,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":47316,"user_name":"mzh","can_delete":false,"product_type":"c1","uid":1121054,"ip_address":"","ucode":"DE92F5CE010225","user_header":"https://static001.geekbang.org/account/avatar/00/11/1b/1e/1ab1347f.jpg","comment_is_top":false,"comment_ctime":1544105366,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1544105366","product_id":100021101,"comment_content":"看来自己的内存优化之路还有好远要走……","like_count":0},{"had_liked":false,"id":47261,"user_name":"Robin","can_delete":false,"product_type":"c1","uid":1330807,"ip_address":"","ucode":"0BD2E612101076","user_header":"https://static001.geekbang.org/account/avatar/00/14/4e/77/dce3d857.jpg","comment_is_top":false,"comment_ctime":1544091967,"is_pvip":false,"replies":[{"id":"16881","content":"可以用实体机测试一下","user_name":"作者回复","user_name_real":"张绍文","uid":"1009577","ctime":1544107396,"ip_address":"","comment_id":47261,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1544091967","product_id":100021101,"comment_content":"Android模拟器 ABI是x86的，项目运行起来就崩溃，看错误日志是找不到so库，看了下build.gradle文件，CMake只是编译了armeabi-v7a的so，添加上x86后再编译，却发现编译无法通过，耐着性子找了一下原因，发现是cpp目录下的HookZz不支持x86，没接触过JNI编程，这部分看不太懂，感觉目前水平远远不够，知识面太浅，很多方面都需要提升。","like_count":0,"discussions":[{"author":{"id":1009577,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/67/a9/e251ace7.jpg","nickname":"张绍文","note":"","ucode":"94B49E5F80BFDE","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":431717,"discussion_content":"可以用实体机测试一下","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1544107396,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":47200,"user_name":"Find","can_delete":false,"product_type":"c1","uid":1329967,"ip_address":"","ucode":"3815471A854AC9","user_header":"https://static001.geekbang.org/account/avatar/00/14/4b/2f/ea949f1f.jpg","comment_is_top":false,"comment_ctime":1544075542,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1544075542","product_id":100021101,"comment_content":"真的事有点懵，项目能运行成功，采集出来的数据都不知道怎么解析，这个java -jar tools&#47;DumpPrinter-1.0.jar dump文件路径 &gt; dump_log.txt<br>调用方法都不知道在哪里写，感觉真的是懂得太少。","like_count":0},{"had_liked":false,"id":47184,"user_name":"一辆车啊","can_delete":false,"product_type":"c1","uid":1108280,"ip_address":"","ucode":"784456B43B1AA7","user_header":"https://static001.geekbang.org/account/avatar/00/10/e9/38/1b47a11f.jpg","comment_is_top":false,"comment_ctime":1544069871,"is_pvip":false,"replies":[{"id":"16843","content":"可以通过最新版的android studio的内存监控功能可看到两个时间点对象新增情况","user_name":"作者回复","user_name_real":"孙鹏飞","uid":"1171070","ctime":1544083306,"ip_address":"","comment_id":47184,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1544069871","product_id":100021101,"comment_content":"可以通过什么工具查看哪些对象是新增的呢","like_count":0,"discussions":[{"author":{"id":1171070,"avatar":"https://static001.geekbang.org/account/avatar/00/11/de/7e/5c2b1efe.jpg","nickname":"孙鹏飞","note":"","ucode":"18ADF5C2B78938","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":431694,"discussion_content":"可以通过最新版的android studio的内存监控功能可看到两个时间点对象新增情况","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1544083306,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":1}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":47155,"user_name":"Seven","can_delete":false,"product_type":"c1","uid":1328562,"ip_address":"","ucode":"C1C68316449B57","user_header":"https://static001.geekbang.org/account/avatar/00/14/45/b2/ee0cfc12.jpg","comment_is_top":false,"comment_ctime":1544064804,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1544064804","product_id":100021101,"comment_content":"在平时的开发中，除非引起了崩溃，否则很难对内存优化引起重视。开发的意识还停留在功能使用没有问题就行了，完全没有考虑过是否可以使用更少的内存，或者只会用到那些常见的内存优化方案(如ViewHolder，弱引用)，这些方案在使用过程中就像是创建activity必须要在清单文件里面声明一样普通。就像如果不是常见的优化方案，自己就完全想不出来其他优化方案似的，好像优化这种事情，必须要大神做了总结，我才知道原来还可以这样优化。这些大神是怎么知道这些优化方案的呢，我到底要怎样才能得到大神解决问题的能力呢？只是跟着大神的脚步，我感觉我只能成为一个平平无奇的开发者，一只copycat。","like_count":0},{"had_liked":false,"id":47149,"user_name":"蚂蚁内推+v","can_delete":false,"product_type":"c1","uid":1050508,"ip_address":"","ucode":"24B10AEE54B3FD","user_header":"https://static001.geekbang.org/account/avatar/00/10/07/8c/0d886dcc.jpg","comment_is_top":false,"comment_ctime":1544064190,"is_pvip":false,"replies":[{"id":"16825","content":"Low memory killer","user_name":"作者回复","user_name_real":"张绍文","uid":"1009577","ctime":1544064701,"ip_address":"","comment_id":47149,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1544064190","product_id":100021101,"comment_content":"lmk 是啥方便老师详细说下嘛","like_count":0,"discussions":[{"author":{"id":1009577,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/67/a9/e251ace7.jpg","nickname":"张绍文","note":"","ucode":"94B49E5F80BFDE","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":431680,"discussion_content":"Low memory killer","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1544064701,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":47127,"user_name":"Mograine","can_delete":false,"product_type":"c1","uid":1040519,"ip_address":"","ucode":"308A40FCFB8CE4","user_header":"https://static001.geekbang.org/account/avatar/00/0f/e0/87/b7242f1c.jpg","comment_is_top":false,"comment_ctime":1544060733,"is_pvip":false,"replies":[{"id":"16877","content":"你可以动手试试","user_name":"作者回复","user_name_real":"张绍文","uid":"1009577","ctime":1544107228,"ip_address":"","comment_id":47127,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1544060733","product_id":100021101,"comment_content":"老师，NativeAllocationRegistry解决了native的像素内存缓存问题。有个问题，bitmap在java中一直是庞然大物，因为java堆有大小限制。现在放在native层，是不是可以申请的bitmap比java堆的大的多?","like_count":0,"discussions":[{"author":{"id":1009577,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/67/a9/e251ace7.jpg","nickname":"张绍文","note":"","ucode":"94B49E5F80BFDE","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":431672,"discussion_content":"你可以动手试试","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1544107228,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":47104,"user_name":"彪","can_delete":false,"product_type":"c1","uid":1329402,"ip_address":"","ucode":"16F0A59E6D32B4","user_header":"https://static001.geekbang.org/account/avatar/00/14/48/fa/ce66bff5.jpg","comment_is_top":false,"comment_ctime":1544058021,"is_pvip":false,"replies":[{"id":"16875","content":"的确，IoT、车载设备等等","user_name":"作者回复","user_name_real":"张绍文","uid":"1009577","ctime":1544107125,"ip_address":"","comment_id":47104,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1544058021","product_id":100021101,"comment_content":"确实现今虽然手机等设备的内存日益变大，但是在很多行业还是存在低内存的各种版本，内存优化势在必行啊","like_count":0,"discussions":[{"author":{"id":1009577,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/67/a9/e251ace7.jpg","nickname":"张绍文","note":"","ucode":"94B49E5F80BFDE","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":431664,"discussion_content":"的确，IoT、车载设备等等","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1544107125,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":47098,"user_name":"杜小菜℡ ₃₂₁","can_delete":false,"product_type":"c1","uid":1175461,"ip_address":"","ucode":"084422DCEB434C","user_header":"https://static001.geekbang.org/account/avatar/00/11/ef/a5/d20ac985.jpg","comment_is_top":false,"comment_ctime":1544056494,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1544056494","product_id":100021101,"comment_content":"哇，这是高手，把内存问题研究的这么深，学习！","like_count":0},{"had_liked":false,"id":47097,"user_name":"Super 含","can_delete":false,"product_type":"c1","uid":1268849,"ip_address":"","ucode":"932C09501EF338","user_header":"https://static001.geekbang.org/account/avatar/00/13/5c/71/251f11a6.jpg","comment_is_top":false,"comment_ctime":1544056351,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1544056351","product_id":100021101,"comment_content":"感谢张老师","like_count":0}]}