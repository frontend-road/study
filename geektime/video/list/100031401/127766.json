{"id":127766,"title":"71 | Kubernetes有哪些基本概念(下)","content":"<ul>\n<li>\n<p>代码：<a href=\"https://gitee.com/geektime-geekbang/staffjoy\">https://gitee.com/geektime-geekbang/staffjoy</a></p>\n</li>\n<li>\n<p>课件：<a href=\"https://pan.baidu.com/s/1Q7eP3yZ1Vm8J2nhle5RzTQ\">https://pan.baidu.com/s/1Q7eP3yZ1Vm8J2nhle5RzTQ</a> 提取码: 1aeh</p>\n</li>\n</ul>","comments":[{"had_liked":false,"id":178674,"user_name":"而立斋","can_delete":false,"product_type":"c3","uid":1087258,"ip_address":"","ucode":"5FED6E9E148195","user_header":"https://static001.geekbang.org/account/avatar/00/10/97/1a/389eab84.jpg","comment_is_top":false,"comment_ctime":1581776929,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":2,"product_id":100031401,"comment_content":"ConfigMap&#47;Secret\n\n Kubernetes中另一个核心概念，微服务在上线的时候常常需要设置一些可变配置，这些配置针对不同环境，对应的配置值不同，这些配置有些是在启动期一次性配置好，比如连接串，还有一些配置是在运行期动态调整的，比如ttl值、缓存时间，限购数量等，所以微服务需要配置中心的支持，实现针对不同环境的灵活的配置。\n Kubernetes平台内置支持微服务的配置，对应概念就叫configmap，configmap是Kubernetes的一种资源，开发人员将配置填写在configmap中，支持将这些配置以环境变量的形式注入到pod当中，pod中的应用以环境变量的形式去访问到这些配置，也支持以持久卷volume mnt到pod中，这样pod的中应用以本地配置文件的形式来访问这些配置，有些配置是涉及敏感数据的，比如用户名密码，案例证书等，Kubernetes通过secrect这种概念支持敏感数据的配置，Secret是一种特殊的config，提供更安全存储和访问配置的机制。\n \nDaemonSet\n\n 还有一种场景 ，经常碰到 的，在每个节点上常驻一个守护进程（daemon），比如监控场景，需要在每个机器上部署一个日志采集进程，针对这种场景，Kubernetes支持一个叫daemontset的发布概念， 在每个woker节点上部署一个守护进程pod，并且保证每个节点有且仅有一个这样的pod。\n \n其他概念\n volume-磁盘文件存储，本地存储，远程 存储\n persistentvolume-超大磁盘存储抽象和分配机制\n persistentvolumeClaims-应用申请pv是要遵守的规范\n statefulset-有状态应用的发布机制，（replicaset是无状态应用发布）mysql,redis缓存\n job-跑一次的任务\n cronjob-周期的任务\n\n补充概念\n Lable&#47;Selector 对Kubernetes上的pod打标签 ，标识pod是属于前端还是后端，生产的还是测试的，Selector是通过标签查询label的机制\n namespace-逻辑隔离机制，\n readiness probe(就绪探针)-用于判定pod是否可以接入流量\n liveness probe(活跃探针)-用于判定pod是否存活","like_count":9},{"had_liked":false,"id":370963,"user_name":"阿昌喜欢吃黄桃","can_delete":false,"product_type":"c3","uid":2632273,"ip_address":"浙江","ucode":"F2EBE390E32480","user_header":"https://static001.geekbang.org/account/avatar/00/28/2a/51/4694740b.jpg","comment_is_top":false,"comment_ctime":1679405783,"is_pvip":false,"replies":null,"discussion_count":1,"race_medal":0,"score":2,"product_id":100031401,"comment_content":"讲的真抽象，我要听得懂，我为啥自己不去看k8s的官方文档","like_count":1,"discussions":[{"author":{"id":1817756,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/bc/9c/11b19ef6.jpg","nickname":"几里瓜拉","note":"","ucode":"EB2AC52C78847D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":630991,"discussion_content":"确实，对入门者非常不友好","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1699194221,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"广东","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":387097,"user_name":"向显","can_delete":false,"product_type":"c3","uid":2102748,"ip_address":"湖北","ucode":"DD6B3D61D39000","user_header":"https://static001.geekbang.org/account/avatar/00/20/15/dc/45f68b76.jpg","comment_is_top":false,"comment_ctime":1706450306,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":2,"product_id":100031401,"comment_content":"其他概念:\nVolume:存储卷抽象, 简单理解为磁盘文件存储,可以是节点本地存储,也可以是远程存储,挂载之后volume成为Pod的一部分,Pod销毁,volume也销毁, 但是支持Volume存储还存在\nPersistentVolume:持久卷,高级的持久存储资源抽象,可以对接各自云存储,一般由集群管理员统一配置, 相当于一个超大的磁盘 可以插拔在 K8S集群上, 如果使用PV挂载Volume, 应用Pod重启,volume上的数据不丢失\nPersistentVolumeClaims: 应用申请PV时需要填写的规范,包括磁盘大小,类型 等等,简称PVC, 应用通过PVC申请PV资源, 然后以Volume的形式挂载到Volume当中. 使得pod的Volume和具体的物理存储解耦\nStatefulSet:支持有状态服务的发布, 比如Mysql,redis, 他是和ReplicaSet是相对应的\nJob:支持跑一次任务\nCronJob: 支持周期性任务\n\nLable:给K8S中的资源打标签的机制,比如给POD打标签, 标识是前端还是后端,环境等 \nSelector: 是一种通过标签查询定位资源的一种机制\nNameSpace:是K8S中一种逻辑性的隔离机制,基于nameSpace可以实现多租户,多环境,多项目团队的逻辑隔离, 创建资源如果没有指定NameSpace, 则会默认加入到DefaultNameSpace中\nReadiness Probe(就绪探针): 判断Pod是否能接入流量, 比如通过应用健康检查判断\nLiveness Probe(活跃探针):判断Pod是否存活, 通过监控检查端点,判断, 根据配置的策略判断是否要kill还是重启","like_count":0},{"had_liked":false,"id":387096,"user_name":"向显","can_delete":false,"product_type":"c3","uid":2102748,"ip_address":"湖北","ucode":"DD6B3D61D39000","user_header":"https://static001.geekbang.org/account/avatar/00/20/15/dc/45f68b76.jpg","comment_is_top":false,"comment_ctime":1706450281,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":2,"product_id":100031401,"comment_content":"POD : Kubernetes的基本调度单位, 一个POD可以包含多个容器, 多个容器共享POD的IP和端口空间\n一般情况下 一个POD有一个容器,至于这么设计 是考虑有辅助容器 替换使用不同容器等场景\n\n副本集(ReplicaSet): 一个应用集群发布配置管理机制,一般会有多个POD实例, 用来规范多个pod实例,包括定义 副本数量,环境变量等\n\n服务(Service): 为了解决服务实例重启导致IP变更, 客户端无法寻址, 引入抽象层service 屏蔽了应用的IP寻址和负载均衡等细节, 消费方可以直接通过服务名访问目标服务,  service底层机制会进行寻址和负载均衡. 让消费方无感知;\n\n发布Deployment: 副本集是一种基本的发布机制, 也可以进行高级的发布,比如distree,蓝绿,滚动发布. 但是操作起来比较繁琐. 为了方便进行一些高级的发布, 引入了Deployment机制: 用来管理replicaSet,实现蓝绿,滚动高级发布机制\n\nConfigMap&#47;Secret:Kubernetes中另一个核心概念，微服务在上线的时候常常需要设置一些可变配置，这些配置针对不同环境，对应的配置值不同，这些配置有些是在启动期一次性配置好，比如连接串，还有一些配置是在运行期动态调整的，比如ttl值、缓存时间，限购数量等，所以微服务需要配置中心的支持，实现针对不同环境的灵活的配置。 Kubernetes平台内置支持微服务的配置，对应概念就叫configmap，configmap是Kubernetes的一种资源，开发人员将配置填写在configmap中，支持将这些配置以环境变量的形式注入到pod当中，pod中的应用以环境变量的形式去访问到这些配置，也支持以持久卷volume mnt到pod中，这样pod的中应用以本地配置文件的形式来访问这些配置，有些配置是涉及敏感数据的，比如用户名密码，案例证书等，Kubernetes通过secrect这种概念支持敏感数据的配置，Secret是一种特殊的config，提供更安全存储和访问配置的机制。\n\nDaemonSet:在每个节点上常驻一个守护进程（daemon），比如监控场景，需要在每个机器上部署一个日志采集进程，针对这种场景，Kubernetes支持一个叫daemontset的发布概念， 在每个woker节点上部署一个守护进程pod，并且保证每个节点有且仅有一个这样的pod。","like_count":0},{"had_liked":false,"id":351712,"user_name":"穿针土豆丝","can_delete":false,"product_type":"c3","uid":1275424,"ip_address":"","ucode":"5DA3BDDE5162E4","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/aiaO77mTsCalcia49ElevPn988pgwcL3rD5ic1DTD6E8rbAwfmguiaPsibHicsYGQID7VbmD21GUAV9bbuNMfDhDGGyg/132","comment_is_top":false,"comment_ctime":1658116325,"is_pvip":false,"replies":null,"discussion_count":1,"race_medal":0,"score":2,"product_id":100031401,"comment_content":"k8s的job和cron-job能取代xx-job吗？","like_count":0,"discussions":[{"author":{"id":1117318,"avatar":"https://static001.geekbang.org/account/avatar/00/11/0c/86/8e52afb8.jpg","nickname":"花花大脸猫","note":"","ucode":"8ABDB3F7F4FB0F","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":600168,"discussion_content":"不是一样的概念，k8s的我理解更趋近于基础层面，业务无关的，只负责调度，至于调度起来你的pod里面怎么运行它是不问的；xxl-job更多的就是pod单进程内部定时发起的业务处理任务。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1674050152,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"江苏","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":220601,"user_name":"xgbyl","can_delete":false,"product_type":"c3","uid":1363123,"ip_address":"","ucode":"1D48711210CAD4","user_header":"https://static001.geekbang.org/account/avatar/00/14/cc/b3/ac3e3d8f.jpg","comment_is_top":false,"comment_ctime":1590292403,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":2,"product_id":100031401,"comment_content":"pod -&gt; volumn -&gt; PVC -&gt; PV -&gt; 物理存储","like_count":0}]}