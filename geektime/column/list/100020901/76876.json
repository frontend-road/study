{"id":76876,"title":"23 | 基础篇：Linux 文件系统是怎么工作的？","content":"<p>你好，我是倪朋飞。</p><p>通过前面CPU和内存模块的学习，我相信，你已经掌握了CPU和内存的性能分析以及优化思路。从这一节开始，我们将进入下一个重要模块——文件系统和磁盘的I/O性能。</p><p>同CPU、内存一样，磁盘和文件系统的管理，也是操作系统最核心的功能。</p><ul>\n<li>\n<p>磁盘为系统提供了最基本的持久化存储。</p>\n</li>\n<li>\n<p>文件系统则在磁盘的基础上，提供了一个用来管理文件的树状结构。</p>\n</li>\n</ul><p>那么，磁盘和文件系统是怎么工作的呢？又有哪些指标可以衡量它们的性能呢？</p><p>今天，我就带你先来看看，Linux文件系统的工作原理。磁盘的工作原理，我们下一节再来学习。</p><h2>索引节点和目录项</h2><p>文件系统，本身是对存储设备上的文件，进行组织管理的机制。组织方式不同，就会形成不同的文件系统。</p><p>你要记住最重要的一点，在Linux中一切皆文件。不仅普通的文件和目录，就连块设备、套接字、管道等，也都要通过统一的文件系统来管理。</p><p>为了方便管理，Linux文件系统为每个文件都分配两个数据结构，索引节点（index node）和目录项（directory entry）。它们主要用来记录文件的元信息和目录结构。</p><ul>\n<li>\n<p>索引节点，简称为inode，用来记录文件的元数据，比如inode编号、文件大小、访问权限、修改日期、数据的位置等。索引节点和文件一一对应，它跟文件内容一样，都会被持久化存储到磁盘中。所以记住，索引节点同样占用磁盘空间。</p>\n</li>\n<li>\n<p>目录项，简称为dentry，用来记录文件的名字、索引节点指针以及与其他目录项的关联关系。多个关联的目录项，就构成了文件系统的目录结构。不过，不同于索引节点，目录项是由内核维护的一个内存数据结构，所以通常也被叫做目录项缓存。</p>\n</li>\n</ul><!-- [[[read_end]]] --><p>换句话说，索引节点是每个文件的唯一标志，而目录项维护的正是文件系统的树状结构。目录项和索引节点的关系是多对一，你可以简单理解为，一个文件可以有多个别名。</p><p>举个例子，通过硬链接为文件创建的别名，就会对应不同的目录项，不过这些目录项本质上还是链接同一个文件，所以，它们的索引节点相同。</p><p>索引节点和目录项纪录了文件的元数据，以及文件间的目录关系，那么具体来说，文件数据到底是怎么存储的呢？是不是直接写到磁盘中就好了呢？</p><p>实际上，磁盘读写的最小单位是扇区，然而扇区只有512B 大小，如果每次都读写这么小的单位，效率一定很低。所以，文件系统又把连续的扇区组成了逻辑块，然后每次都以逻辑块为最小单元，来管理数据。常见的逻辑块大小为4KB，也就是由连续的8个扇区组成。</p><p>为了帮助你理解目录项、索引节点以及文件数据的关系，我画了一张示意图。你可以对照着这张图，来回忆刚刚讲过的内容，把知识和细节串联起来。</p><p><img src=\"https://static001.geekbang.org/resource/image/32/47/328d942a38230a973f11bae67307be47.png?wh=836*507\" alt=\"\"></p><p>不过，这里有两点需要你注意。</p><p>第一，目录项本身就是一个内存缓存，而索引节点则是存储在磁盘中的数据。在前面的Buffer和Cache原理中，我曾经提到过，为了协调慢速磁盘与快速CPU的性能差异，文件内容会缓存到页缓存Cache中。</p><p>那么，你应该想到，这些索引节点自然也会缓存到内存中，加速文件的访问。</p><p>第二，磁盘在执行文件系统格式化时，会被分成三个存储区域，超级块、索引节点区和数据块区。其中，</p><ul>\n<li>\n<p>超级块，存储整个文件系统的状态。</p>\n</li>\n<li>\n<p>索引节点区，用来存储索引节点。</p>\n</li>\n<li>\n<p>数据块区，则用来存储文件数据。</p>\n</li>\n</ul><h2>虚拟文件系统</h2><p>目录项、索引节点、逻辑块以及超级块，构成了Linux文件系统的四大基本要素。不过，为了支持各种不同的文件系统，Linux内核在用户进程和文件系统的中间，又引入了一个抽象层，也就是虚拟文件系统VFS（Virtual File System）。</p><p>VFS 定义了一组所有文件系统都支持的数据结构和标准接口。这样，用户进程和内核中的其他子系统，只需要跟VFS 提供的统一接口进行交互就可以了，而不需要再关心底层各种文件系统的实现细节。</p><p>这里，我画了一张Linux文件系统的架构图，帮你更好地理解系统调用、VFS、缓存、文件系统以及块存储之间的关系。</p><p><img src=\"https://static001.geekbang.org/resource/image/72/12/728b7b39252a1e23a7a223cdf4aa1612.png?wh=530*590\" alt=\"\"></p><p>通过这张图，你可以看到，在VFS的下方，Linux支持各种各样的文件系统，如Ext4、XFS、NFS等等。按照存储位置的不同，这些文件系统可以分为三类。</p><ul>\n<li>\n<p>第一类是基于磁盘的文件系统，也就是把数据直接存储在计算机本地挂载的磁盘中。常见的Ext4、XFS、OverlayFS等，都是这类文件系统。</p>\n</li>\n<li>\n<p>第二类是基于内存的文件系统，也就是我们常说的虚拟文件系统。这类文件系统，不需要任何磁盘分配存储空间，但会占用内存。我们经常用到的 /proc 文件系统，其实就是一种最常见的虚拟文件系统。此外，/sys 文件系统也属于这一类，主要向用户空间导出层次化的内核对象。</p>\n</li>\n<li>\n<p>第三类是网络文件系统，也就是用来访问其他计算机数据的文件系统，比如NFS、SMB、iSCSI等。</p>\n</li>\n</ul><p>这些文件系统，要先挂载到 VFS 目录树中的某个子目录（称为挂载点），然后才能访问其中的文件。拿第一类，也就是基于磁盘的文件系统为例，在安装系统时，要先挂载一个根目录（/），在根目录下再把其他文件系统（比如其他的磁盘分区、/proc文件系统、/sys文件系统、NFS等）挂载进来。</p><h2>文件系统I/O</h2><p>把文件系统挂载到挂载点后，你就能通过挂载点，再去访问它管理的文件了。VFS 提供了一组标准的文件访问接口。这些接口以系统调用的方式，提供给应用程序使用。</p><p>就拿cat 命令来说，它首先调用 open() ，打开一个文件；然后调用 read() ，读取文件的内容；最后再调用 write()  ，把文件内容输出到控制台的标准输出中：</p><pre><code>int open(const char *pathname, int flags, mode_t mode); \nssize_t read(int fd, void *buf, size_t count); \nssize_t write(int fd, const void *buf, size_t count); \n</code></pre><p>文件读写方式的各种差异，导致 I/O的分类多种多样。最常见的有，缓冲与非缓冲I/O、直接与非直接I/O、阻塞与非阻塞I/O、同步与异步I/O等。 接下来，我们就详细看这四种分类。</p><p>第一种，根据是否利用标准库缓存，可以把文件I/O分为缓冲I/O与非缓冲I/O。</p><ul>\n<li>\n<p>缓冲I/O，是指利用标准库缓存来加速文件的访问，而标准库内部再通过系统调度访问文件。</p>\n</li>\n<li>\n<p>非缓冲I/O，是指直接通过系统调用来访问文件，不再经过标准库缓存。</p>\n</li>\n</ul><p>注意，这里所说的“缓冲”，是指标准库内部实现的缓存。比方说，你可能见到过，很多程序遇到换行时才真正输出，而换行前的内容，其实就是被标准库暂时缓存了起来。</p><p>无论缓冲I/O还是非缓冲I/O，它们最终还是要经过系统调用来访问文件。而根据上一节内容，我们知道，系统调用后，还会通过页缓存，来减少磁盘的I/O操作。</p><p>第二，根据是否利用操作系统的页缓存，可以把文件I/O分为直接I/O与非直接I/O。</p><ul>\n<li>\n<p>直接I/O，是指跳过操作系统的页缓存，直接跟文件系统交互来访问文件。</p>\n</li>\n<li>\n<p>非直接I/O正好相反，文件读写时，先要经过系统的页缓存，然后再由内核或额外的系统调用，真正写入磁盘。</p>\n</li>\n</ul><p>想要实现直接I/O，需要你在系统调用中，指定 O_DIRECT 标志。如果没有设置过，默认的是非直接I/O。</p><p>不过要注意，直接I/O、非直接I/O，本质上还是和文件系统交互。如果是在数据库等场景中，你还会看到，跳过文件系统读写磁盘的情况，也就是我们通常所说的裸I/O。</p><p>第三，根据应用程序是否阻塞自身运行，可以把文件I/O分为阻塞I/O和非阻塞I/O：</p><ul>\n<li>\n<p>所谓阻塞I/O，是指应用程序执行I/O操作后，如果没有获得响应，就会阻塞当前线程，自然就不能执行其他任务。</p>\n</li>\n<li>\n<p>所谓非阻塞I/O，是指应用程序执行I/O操作后，不会阻塞当前的线程，可以继续执行其他的任务，随后再通过轮询或者事件通知的形式，获取调用的结果。</p>\n</li>\n</ul><p>比方说，访问管道或者网络套接字时，设置 O_NONBLOCK 标志，就表示用非阻塞方式访问；而如果不做任何设置，默认的就是阻塞访问。</p><p>第四，根据是否等待响应结果，可以把文件I/O分为同步和异步I/O：</p><ul>\n<li>\n<p>所谓同步I/O，是指应用程序执行I/O操作后，要一直等到整个I/O完成后，才能获得I/O响应。</p>\n</li>\n<li>\n<p>所谓异步I/O，是指应用程序执行I/O操作后，不用等待完成和完成后的响应，而是继续执行就可以。等到这次 I/O完成后，响应会用事件通知的方式，告诉应用程序。</p>\n</li>\n</ul><p>举个例子，在操作文件时，如果你设置了 O_SYNC 或者 O_DSYNC 标志，就代表同步I/O。如果设置了O_DSYNC，就要等文件数据写入磁盘后，才能返回；而O_SYNC，则是在O_DSYNC基础上，要求文件元数据也要写入磁盘后，才能返回。</p><p>再比如，在访问管道或者网络套接字时，设置了O_ASYNC选项后，相应的I/O就是异步I/O。这样，内核会再通过SIGIO或者SIGPOLL，来通知进程文件是否可读写。</p><p>你可能发现了，这里的好多概念也经常出现在网络编程中。比如非阻塞I/O，通常会跟select/poll配合，用在网络套接字的I/O中。</p><p>你也应该可以理解，“Linux 一切皆文件”的深刻含义。无论是普通文件和块设备、还是网络套接字和管道等，它们都通过统一的VFS 接口来访问。</p><h2>性能观测</h2><p>学了这么多文件系统的原理，你估计也是迫不及待想上手，观察一下文件系统的性能情况了。</p><p>接下来，打开一个终端，SSH登录到服务器上，然后跟我一起来探索，如何观测文件系统的性能。</p><h3>容量</h3><p>对文件系统来说，最常见的一个问题就是空间不足。当然，你可能本身就知道，用 df 命令，就能查看文件系统的磁盘空间使用情况。比如：</p><pre><code>$ df /dev/sda1 \nFilesystem     1K-blocks    Used Available Use% Mounted on \n/dev/sda1       30308240 3167020  27124836  11% / \n</code></pre><p>你可以看到，我的根文件系统只使用了11%的空间。这里还要注意，总空间用1K-blocks的数量来表示，你可以给df加上-h选项，以获得更好的可读性：</p><pre><code>$ df -h /dev/sda1 \nFilesystem      Size  Used Avail Use% Mounted on \n/dev/sda1        29G  3.1G   26G  11% / \n</code></pre><p>不过有时候，明明你碰到了空间不足的问题，可是用df查看磁盘空间后，却发现剩余空间还有很多。这是怎么回事呢？</p><p>不知道你还记不记得，刚才我强调的一个细节。除了文件数据，索引节点也占用磁盘空间。你可以给df命令加上 -i 参数，查看索引节点的使用情况，如下所示：</p><pre><code>$ df -i /dev/sda1 \nFilesystem      Inodes  IUsed   IFree IUse% Mounted on \n/dev/sda1      3870720 157460 3713260    5% / \n</code></pre><p>索引节点的容量，（也就是Inode个数）是在格式化磁盘时设定好的，一般由格式化工具自动生成。当你发现索引节点空间不足，但磁盘空间充足时，很可能就是过多小文件导致的。</p><p>所以，一般来说，删除这些小文件，或者把它们移动到索引节点充足的其他磁盘中，就可以解决这个问题。</p><h3>缓存</h3><p>在前面Cache案例中，我已经介绍过，可以用 free 或 vmstat，来观察页缓存的大小。复习一下，free输出的Cache，是页缓存和可回收Slab缓存的和，你可以从 /proc/meminfo ，直接得到它们的大小：</p><pre><code>$ cat /proc/meminfo | grep -E &quot;SReclaimable|Cached&quot; \nCached:           748316 kB \nSwapCached:            0 kB \nSReclaimable:     179508 kB \n</code></pre><p>话说回来，文件系统中的目录项和索引节点缓存，又该如何观察呢？</p><p>实际上，内核使用Slab机制，管理目录项和索引节点的缓存。/proc/meminfo只给出了Slab的整体大小，具体到每一种Slab缓存，还要查看/proc/slabinfo这个文件。</p><p>比如，运行下面的命令，你就可以得到，所有目录项和各种文件系统索引节点的缓存情况：</p><pre><code>$ cat /proc/slabinfo | grep -E '^#|dentry|inode' \n# name            &lt;active_objs&gt; &lt;num_objs&gt; &lt;objsize&gt; &lt;objperslab&gt; &lt;pagesperslab&gt; : tunables &lt;limit&gt; &lt;batchcount&gt; &lt;sharedfactor&gt; : slabdata &lt;active_slabs&gt; &lt;num_slabs&gt; &lt;sharedavail&gt; \nxfs_inode              0      0    960   17    4 : tunables    0    0    0 : slabdata      0      0      0 \n... \next4_inode_cache   32104  34590   1088   15    4 : tunables    0    0    0 : slabdata   2306   2306      0hugetlbfs_inode_cache     13     13    624   13    2 : tunables    0    0    0 : slabdata      1      1      0 \nsock_inode_cache    1190   1242    704   23    4 : tunables    0    0    0 : slabdata     54     54      0 \nshmem_inode_cache   1622   2139    712   23    4 : tunables    0    0    0 : slabdata     93     93      0 \nproc_inode_cache    3560   4080    680   12    2 : tunables    0    0    0 : slabdata    340    340      0 \ninode_cache        25172  25818    608   13    2 : tunables    0    0    0 : slabdata   1986   1986      0 \ndentry             76050 121296    192   21    1 : tunables    0    0    0 : slabdata   5776   5776      0 \n</code></pre><p>这个界面中，dentry行表示目录项缓存，inode_cache行，表示VFS索引节点缓存，其余的则是各种文件系统的索引节点缓存。</p><p>/proc/slabinfo 的列比较多，具体含义你可以查询  man slabinfo。在实际性能分析中，我们更常使用 slabtop  ，来找到占用内存最多的缓存类型。</p><p>比如，下面就是我运行slabtop得到的结果：</p><pre><code># 按下c按照缓存大小排序，按下a按照活跃对象数排序 \n$ slabtop \nActive / Total Objects (% used)    : 277970 / 358914 (77.4%) \nActive / Total Slabs (% used)      : 12414 / 12414 (100.0%) \nActive / Total Caches (% used)     : 83 / 135 (61.5%) \nActive / Total Size (% used)       : 57816.88K / 73307.70K (78.9%) \nMinimum / Average / Maximum Object : 0.01K / 0.20K / 22.88K \n\n  OBJS ACTIVE  USE OBJ SIZE  SLABS OBJ/SLAB CACHE SIZE NAME \n69804  23094   0%    0.19K   3324       21     13296K dentry \n16380  15854   0%    0.59K   1260       13     10080K inode_cache \n58260  55397   0%    0.13K   1942       30      7768K kernfs_node_cache \n   485    413   0%    5.69K     97        5      3104K task_struct \n  1472   1397   0%    2.00K     92       16      2944K kmalloc-2048 \n</code></pre><p>从这个结果你可以看到，在我的系统中，目录项和索引节点占用了最多的Slab缓存。不过它们占用的内存其实并不大，加起来也只有23MB左右。</p><h2>小结</h2><p>今天，我带你梳理了Linux文件系统的工作原理。</p><p>文件系统，是对存储设备上的文件，进行组织管理的一种机制。为了支持各类不同的文件系统，Linux在各种文件系统实现上，抽象了一层虚拟文件系统（VFS）。</p><p>VFS 定义了一组所有文件系统都支持的数据结构和标准接口。这样，用户进程和内核中的其他子系统，就只需要跟 VFS 提供的统一接口进行交互。</p><p>为了降低慢速磁盘对性能的影响，文件系统又通过页缓存、目录项缓存以及索引节点缓存，缓和磁盘延迟对应用程序的影响。</p><p>在性能观测方面，今天主要讲了容量和缓存的指标。下一节，我们将会学习Linux磁盘 I/O的工作原理，并掌握磁盘I/O的性能观测方法。</p><h2>思考</h2><p>最后，给你留一个思考题。在实际工作中，我们经常会根据文件名字，查找它所在路径，比如：</p><pre><code>$ find / -name file-name\n</code></pre><p>今天的问题就是，这个命令，会不会导致系统的缓存升高呢？如果有影响，又会导致哪种类型的缓存升高呢？你可以结合今天内容，自己先去操作和分析，看看观察到的结果跟你分析的是否一样。</p><p>欢迎在留言区和我讨论，也欢迎把这篇文章分享给你的同事、朋友。我们一起在实战中演练，在交流中进步。</p><p></p>","comments":[{"had_liked":false,"id":58814,"user_name":"coyang","can_delete":false,"product_type":"c1","uid":1024805,"ip_address":"","ucode":"563687E0F6A441","user_header":"https://static001.geekbang.org/account/avatar/00/0f/a3/25/5da16c25.jpg","comment_is_top":false,"comment_ctime":1547199004,"is_pvip":true,"replies":[{"id":"22293","content":"赞","user_name":"作者回复","comment_id":58814,"uid":"1001282","ip_address":"","utype":1,"ctime":1548248013,"user_name_real":"倪朋飞"}],"discussion_count":1,"race_medal":0,"score":"628612424220","product_id":100020901,"comment_content":"课后题：<br>这个命令，会不会导致系统的缓存升高呢？<br>--&gt; 会的<br>如果有影响，又会导致哪种类型的缓存升高呢？<br>--&gt; &#47;xfs_inode&#47; proc_inode_cache&#47;dentry&#47;inode_cache<br><br>实验步骤：<br>1. 清空缓存：echo 3 &gt; &#47;proc&#47;sys&#47;vm&#47;drop_caches ; sync<br>2. 执行find ： find &#47; -name test<br>3. 发现更新top 4 项是：<br>  OBJS ACTIVE  USE OBJ SIZE  SLABS OBJ&#47;SLAB CACHE SIZE NAME<br> 37400  37400 100%    0.94K   2200       17     35200K xfs_inode<br> 36588  36113  98%    0.64K   3049       12     24392K proc_inode_cache<br>104979 104979 100%    0.19K   4999       21     19996K dentry<br> 18057  18057 100%    0.58K   1389       13     11112K inode_cache<br><br>find &#47; -name 这个命令是全盘扫描（既包括内存文件系统又包含本地的xfs【我的环境没有mount 网络文件系统】），所以 inode cache &amp; dentry &amp; proc inode cache 会升高。<br><br>另外，执行过了一次后再次执行find 就机会没有变化了，执行速度也快了很多，也就是下次的find大部分是依赖cache的结果。","like_count":146,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":436217,"discussion_content":"赞","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1548248013,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":58690,"user_name":"白华","can_delete":false,"product_type":"c1","uid":1315666,"ip_address":"","ucode":"FC9BACFCA6E8C1","user_header":"https://static001.geekbang.org/account/avatar/00/14/13/52/db1b01fc.jpg","comment_is_top":false,"comment_ctime":1547176449,"is_pvip":false,"discussion_count":3,"race_medal":0,"score":"91741489665","product_id":100020901,"comment_content":"课后题：我找了一个目录下的文件，用的这个命令find &#47; -type f -name copyright   然后slabtop观察，发现dentry的SLABS和SIZE有了明显的提高，所以引起了目录项缓存的升高。在开始的时候dentry有一定的大小，我认为是缓存了&#47;目录下系统基本的目录，但是系统后面下载、创建的内容是没有缓存的，使用查找命令会把这些都查找到然后缓存起来，所以使用find查找大量内容时候会造成性能下降。<br><br>前面看老男孩视频时候了解了inode和block。inode存储这些数据属性信息的，包含不限于文件大小、文件类型、文件权限、拥有者、硬链接数、所属组、修改时间，还包含指向文件实体的指针功能（inode节点---block的对应关系），但是inode惟独不包含文件名。文件名不在inode里，在上级目录的block里；Block来存储实际数据用的，例如照片、视频等普通文件数据。<br><br>今天看到了dentry，定义是用来记录文件的名字、索引节点指针以及与其他目录项的关联关系。但是和老男孩老师讲的有所区别，希望老师帮我解惑 ","like_count":21,"discussions":[{"author":{"id":1245735,"avatar":"https://static001.geekbang.org/account/avatar/00/13/02/27/226f3c4a.jpg","nickname":"周佳","note":"","ucode":"BBD2D15E37FF6E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":153151,"discussion_content":"inode和block是磁盘文件系统的概念，dentry是内存里的概念。","likes_number":5,"is_delete":false,"is_hidden":false,"ctime":1580031447,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2068424,"avatar":"","nickname":"Geek_9815f1","note":"","ucode":"34EE8566A53F10","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":291902,"discussion_content":"文件名应该不在block块，因为查找文件名，一般都是从根目录开始查下，而根目录下的目录的内容就是 目录名和文件名。一旦查询成功，操作系统会建立一个dentry结构，缓存文件名与该文件的目录结构的信息。  ","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1594991526,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":2118161,"avatar":"https://static001.geekbang.org/account/avatar/00/20/52/11/af170b65.jpg","nickname":"骑驴找你","note":"","ucode":"FB9E7511C00BEA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2068424,"avatar":"","nickname":"Geek_9815f1","note":"","ucode":"34EE8566A53F10","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":305512,"discussion_content":"对于目录来说，FS会分配一个inode和至少一个block给它，inode记录该目录的相关权限和属性，还有分配到的block的号码；block则记录这个目录下面的文件名与其对应的inode号码","likes_number":5,"is_delete":false,"is_hidden":false,"ctime":1599978701,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":291902,"ip_address":""},"score":305512,"extra":""}]}]},{"had_liked":false,"id":58646,"user_name":"石维康","can_delete":false,"product_type":"c1","uid":1067564,"ip_address":"","ucode":"E39ED8416B2C01","user_header":"https://static001.geekbang.org/account/avatar/00/10/4a/2c/f8451d77.jpg","comment_is_top":false,"comment_ctime":1547166153,"is_pvip":false,"replies":[{"id":"22290","content":"这个在答疑里统一回复吧","user_name":"作者回复","comment_id":58646,"uid":"1001282","ip_address":"","utype":1,"ctime":1548247284,"user_name_real":"倪朋飞"}],"discussion_count":4,"race_medal":0,"score":"70266642889","product_id":100020901,"comment_content":"阻塞 I&#47;O 和非阻塞 I&#47;O的概念和同步和异步 I&#47;O的区别是什么?","like_count":16,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":436147,"discussion_content":"这个在答疑里统一回复吧","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1548247284,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1716827,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/32/5b/d0c7e813.jpg","nickname":"luo","note":"","ucode":"1A1DA8EB916ECF","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":582102,"discussion_content":"我觉得一个最明显的区别就是  同步IO会需要等待数据落盘，而阻塞非阻塞更关心的是IO调用返回了没，比如即使是阻塞IO返回了，但这并不代表数据落盘了，可能就是写到page cache就返回了。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1659234562,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"广东"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1316463,"avatar":"https://static001.geekbang.org/account/avatar/00/14/16/6f/bc68781d.jpg","nickname":"🔥 Mr.王🔥","note":"","ucode":"970F0B15BF92E8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":289875,"discussion_content":"在哪里看答疑？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1594256451,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1366484,"avatar":"https://static001.geekbang.org/account/avatar/00/14/d9/d4/5bfe1dd8.jpg","nickname":"xbl","note":"","ucode":"78297667D85C92","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":218403,"discussion_content":"这个我也是看的一头雾水 看来功力不行啊","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585655226,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":65002,"user_name":"小成","can_delete":false,"product_type":"c1","uid":1350143,"ip_address":"","ucode":"1BC685767B0FBD","user_header":"https://static001.geekbang.org/account/avatar/00/14/99/ff/046495bb.jpg","comment_is_top":false,"comment_ctime":1548997895,"is_pvip":false,"replies":[{"id":"23060","content":"目录项是一个缓存，不是持久化存储。目录也是一个文件，这个特殊文件保存了该目录的所有文件名与inode的对应关系","user_name":"作者回复","comment_id":65002,"uid":"1001282","ip_address":"","utype":1,"ctime":1549024841,"user_name_real":"倪朋飞"}],"discussion_count":1,"race_medal":0,"score":"65973507335","product_id":100020901,"comment_content":"请问老师，除了目录项以外还有哪些地方保存有文件名，下一节讲到目录项是一个内存缓存，那么不会保存文件名到磁盘上面？","like_count":15,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":438268,"discussion_content":"目录项是一个缓存，不是持久化存储。目录也是一个文件，这个特殊文件保存了该目录的所有文件名与inode的对应关系","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1549024841,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":59036,"user_name":"伟忠","can_delete":false,"product_type":"c1","uid":1112089,"ip_address":"","ucode":"FE77CF20ED6065","user_header":"https://static001.geekbang.org/account/avatar/00/10/f8/19/05a2695f.jpg","comment_is_top":false,"comment_ctime":1547280688,"is_pvip":false,"replies":[{"id":"22296","content":"可能是文件本身已经删除了，但其描述符还被进程占用着，可以查找无效的文件描述符看看","user_name":"作者回复","comment_id":59036,"uid":"1001282","ip_address":"","utype":1,"ctime":1548248244,"user_name_real":"倪朋飞"}],"discussion_count":7,"race_medal":0,"score":"61676822832","product_id":100020901,"comment_content":"机器上 df 查看占用了 200G，但 du 查看发现只有 90G，看网上的办法用 lsof | grep delete 查看，但没有找到，请问老师，这个可能是什么原因呢？","like_count":14,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":436277,"discussion_content":"可能是文件本身已经删除了，但其描述符还被进程占用着，可以查找无效的文件描述符看看","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1548248244,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1315334,"avatar":"https://static001.geekbang.org/account/avatar/00/14/12/06/d719f428.jpg","nickname":"mail","note":"","ucode":"7440848AE8789A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":275611,"discussion_content":"怎么查看无效文件描述符","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1590739962,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":3,"child_discussions":[{"author":{"id":2066801,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/W0VEO7Hxzd61mia6Ls2EpBmaZ0l9q7SFUAErbu4XKIjWLmlALr4ybpicDoI8SoXY8XJNKmk04Ep1ibTCuFvfCF8GQ/132","nickname":"Chen","note":"","ucode":"5D0F3DF807706E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1315334,"avatar":"https://static001.geekbang.org/account/avatar/00/14/12/06/d719f428.jpg","nickname":"mail","note":"","ucode":"7440848AE8789A","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":336730,"discussion_content":"同问，如何查找。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1608689698,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":275611,"ip_address":""},"score":336730,"extra":""},{"author":{"id":1778000,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/ncicjtgbOgxk2V3VWYJQAia6VqrvHE23JVGtkQALgl6XScQmdqmKZ5RXicfw0CQ4uMplhMeeYoSZNPggBRTpQLR1Q/132","nickname":"0xkjAlbert","note":"","ucode":"B607DA1230321F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2066801,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/W0VEO7Hxzd61mia6Ls2EpBmaZ0l9q7SFUAErbu4XKIjWLmlALr4ybpicDoI8SoXY8XJNKmk04Ep1ibTCuFvfCF8GQ/132","nickname":"Chen","note":"","ucode":"5D0F3DF807706E","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":351049,"discussion_content":"lsof |grep deleted就会显示已经被删除，但是仍然被打开的文件，找到其中的大文件，关闭或重启对应进程即可","likes_number":4,"is_delete":false,"is_hidden":false,"ctime":1614135862,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":336730,"ip_address":""},"score":351049,"extra":""},{"author":{"id":1110039,"avatar":"https://static001.geekbang.org/account/avatar/00/10/f0/17/796a3d20.jpg","nickname":"言十年","note":"","ucode":"67B8B49C3A3B17","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1778000,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/ncicjtgbOgxk2V3VWYJQAia6VqrvHE23JVGtkQALgl6XScQmdqmKZ5RXicfw0CQ4uMplhMeeYoSZNPggBRTpQLR1Q/132","nickname":"0xkjAlbert","note":"","ucode":"B607DA1230321F","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":391003,"discussion_content":"我们就是重启进程，就ok了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1630226678,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":351049,"ip_address":""},"score":391003,"extra":""}]},{"author":{"id":1543855,"avatar":"https://static001.geekbang.org/account/avatar/00/17/8e/af/bf35426c.jpg","nickname":"大路","note":"","ucode":"7984C1F96AC2A3","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":301096,"discussion_content":"无效的文件描述符 在系统重启过程中 是否会释放","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1598406651,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":2737999,"avatar":"https://static001.geekbang.org/account/avatar/00/29/c7/4f/e4136c74.jpg","nickname":"张俊","note":"","ucode":"A4A38A0EDFF4FE","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1543855,"avatar":"https://static001.geekbang.org/account/avatar/00/17/8e/af/bf35426c.jpg","nickname":"大路","note":"","ucode":"7984C1F96AC2A3","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":389407,"discussion_content":"如果是被缓存占用是可以通过重启过程释放，但是上方描述不像是描述符。更像硬链接被误删除导致。这种是无法通过重启释放的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1629267316,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":301096,"ip_address":""},"score":389407,"extra":""}]}]},{"had_liked":false,"id":69889,"user_name":"肘子哥","can_delete":false,"product_type":"c1","uid":1333601,"ip_address":"","ucode":"F152F3DF514117","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/ccpIPibkaTQfYbO5DGiaWpL86YSHAZfVO55WtJhjV0hb7AuyIMzLyRdLnQZ6tjB0Wars4ib7YX3fhmPh9R81MVKtA/132","comment_is_top":false,"comment_ctime":1550896973,"is_pvip":false,"replies":[{"id":"25334","content":"不会的，还可以从磁盘的持久化数据中重建","user_name":"作者回复","comment_id":69889,"uid":"1001282","ip_address":"","utype":1,"ctime":1551193727,"user_name_real":"倪朋飞"}],"discussion_count":2,"race_medal":0,"score":"53090504525","product_id":100020901,"comment_content":"有个疑惑，如果目录项存在内存中是不是意味着内存故障后，目录就无法访问了呢？","like_count":12,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":440333,"discussion_content":"不会的，还可以从磁盘的持久化数据中重建","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1551193727,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1466991,"avatar":"https://static001.geekbang.org/account/avatar/00/16/62/6f/7f8a3bdb.jpg","nickname":"小跑","note":"","ucode":"44680D76B8FE8E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":360286,"discussion_content":"目录项不持久化，那么一个盘下有上亿的文件，重建不是很慢吗","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1616411062,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":86580,"user_name":"ThinkerWalker","can_delete":false,"product_type":"c1","uid":1317111,"ip_address":"","ucode":"8CD44FFC37ACB7","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/rQOn22bNV0kHpoPWRLRicjQCOkiaYmcVABiaIJxIDWIibSdqWXYTxjcdjiadibIxFsGVp5UE4DBd6Nx2DxjhAdlMIZeQ/132","comment_is_top":false,"comment_ctime":1555403066,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"40210108730","product_id":100020901,"comment_content":"关于白华提到的:   &quot;前面看老男孩视频时候了解了inode和block。inode存储这些数据属性信息的，包含不限于文件大小、文件类型、文件权限、拥有者、硬链接数、所属组、修改时间，还包含指向文件实体的指针功能（inode节点---block的对应关系），但是inode惟独不包含文件名。文件名不在inode里，在上级目录的block里；Block来存储实际数据用的，例如照片、视频等普通文件数据。&quot;<br><br>我想说,目录项本质上是缓存,缓存是为了加速文件查找和访问的,所以说和老师这里所说的dentry不冲突,没有目录项的时候查找一个文件需要从&#47;一级一级查找. 是这样的吧?倪老师?","like_count":9},{"had_liked":false,"id":245264,"user_name":"Net Scotte","can_delete":false,"product_type":"c1","uid":1283297,"ip_address":"","ucode":"83DFAA31D487A3","user_header":"https://static001.geekbang.org/account/avatar/00/13/94/e1/f3f0015d.jpg","comment_is_top":false,"comment_ctime":1598879843,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"31663650915","product_id":100020901,"comment_content":"这里的slab不是很容易理解，我查了一下，slab是Linux的内存管理机制，用于解决小对象（具有相同数据结构和大小的内存单元）的内存管理问题，slabinfo中的每一项都是一种cache（即前文说的目录项缓存、索引节点缓存等），一个cache包括多个slab，slab又包含多个objects，已经分配的称为active object","like_count":8},{"had_liked":false,"id":62437,"user_name":"董文荣","can_delete":false,"product_type":"c1","uid":1177499,"ip_address":"","ucode":"CC33DAC93749ED","user_header":"https://static001.geekbang.org/account/avatar/00/11/f7/9b/1b1e288a.jpg","comment_is_top":false,"comment_ctime":1548057786,"is_pvip":false,"replies":[{"id":"22129","content":"原理分析加实践👍","user_name":"作者回复","comment_id":62437,"uid":"1001282","ip_address":"","utype":1,"ctime":1548116088,"user_name_real":"倪朋飞"}],"discussion_count":2,"race_medal":0,"score":"31612828858","product_id":100020901,"comment_content":"课后题：<br>Q:$ find &#47; -name file-name<br>这个命令，会不会导致系统的缓存升高呢？如果有影响，又会导致哪种类型的缓存升高呢？<br>A:分析<br>1)、&quot;&#47;&quot;代表文件系统的根目录，目录项已经缓存在cached。(通过下面的测试，怀疑应该只是部分目录项的内容缓存在cache中，待验证)<br>2)、因为会匹配值“file-name“，会将索引节点读入缓存进行匹配。<br>因此会导致cached增长。以下是三组测试对比，给出了执行find命令前后，cached变化的对比。<br>命令之前前后，slabtop的执行前后对比:<br>Active &#47; Total Objects (% used)    : 184412 &#47; 240169 (76.8%)<br> Active &#47; Total Size (% used)       : 42926.19K &#47; 59199.82K (72.5%)<br><br>  OBJS ACTIVE  USE OBJ SIZE  SLABS OBJ&#47;SLAB CACHE SIZE NAME                   <br> 11088   2313  20%    0.57K    198\t 56\t 6336K radix_tree_node<br> 10450   9515  91%    0.58K    190\t 55\t 6080K inode_cache<br> 27510  12695  46%    0.19K    655\t 42\t 5240K dentry<br>  4710   1003  21%    1.06K    157\t 30\t 5024K xfs_inode<br><br><br> Active &#47; Total Objects (% used)    : 1795399 &#47; 1809652 (99.2%)<br> Active &#47; Total Size (% used)       : 1004316.02K &#47; 1007573.47K (99.7%)<br><br>  OBJS ACTIVE  USE OBJ SIZE  SLABS OBJ&#47;SLAB CACHE SIZE NAME                   <br>708420 708420 100%    1.06K  23614\t 30    755648K xfs_inode<br>787878 787878 100%    0.19K  18759\t 42    150072K dentry<br><br>free命令在find命令执行前后结果对比:<br>[root@localhost ~]# free -m<br>              total        used        free      shared  buff&#47;cache   available<br>Mem:           1824         200        1534          15          89        1500<br>Swap:          2047         196        1851<br>[root@localhost ~]# free -m<br>              total        used        free      shared  buff&#47;cache   available<br>Mem:           1824         480         105          15        1238        1161<br>Swap:          2047         196        1851<br><br>vmstat在find命令执行前后对比：<br>[root@localhost &#47;]# vmstat  2 <br>procs -----------memory---------- ---swap-- -----io---- -system-- ------cpu----<br> r  b   swpd   free   buff  cache   si   so    bi    bo   in   cs us sy id wa st<br> 2  0 201208 1570636    136  92168    0    0     5     5   16   19 27  3 70  0  0<br> 0  0 201208 1511788    136 149564    0    0  1702     0  491  599  2  6 90  1  0<br> 0  0 201208 1509428    136 149716    0    0  1106     0  478  801  0  2 98  0  0<br>注:发表长度限制，省略部分测试显示<br><br><br>","like_count":7,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":437212,"discussion_content":"原理分析加实践👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1548116088,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2046179,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/ajNVdqHZLLAsbPRKgaVw8kKp5pKGUE4JdDZaW16RoRTItTI3wJ3pPGNoFIjYQm8FKa3xLlNwRicziclmWKsmp7kA/132","nickname":"清河","note":"","ucode":"AB44CB37FCB026","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":302745,"discussion_content":"遇到老同事啦，哈哈~","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1599018178,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":60912,"user_name":"成为祝福","can_delete":false,"product_type":"c1","uid":1315665,"ip_address":"","ucode":"8C48D080E9A6A8","user_header":"https://static001.geekbang.org/account/avatar/00/14/13/51/99c88021.jpg","comment_is_top":false,"comment_ctime":1547577325,"is_pvip":false,"replies":[{"id":"22311","content":"一个是VFS 虚拟文件系统的缓存，另一个则是具体的文件系统实现的缓存。<br><br>一个更好理解的例子是：操作系统有文件的缓存，而应用程序还会自己来分配内存缓存数据","user_name":"作者回复","comment_id":60912,"uid":"1001282","ip_address":"","utype":1,"ctime":1548249323,"user_name_real":"倪朋飞"}],"discussion_count":1,"race_medal":0,"score":"18727446509","product_id":100020901,"comment_content":"老师好，请问在slabtop中的inode_cache和ext4_inode_cache有什么区别呢？如果每个文件系统都有inode_cache，整个vfs的有效命名空间都映射到了对应的文件系统，vfs为什么还需要inode_cache呢？","like_count":4,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":436660,"discussion_content":"一个是VFS 虚拟文件系统的缓存，另一个则是具体的文件系统实现的缓存。\n\n一个更好理解的例子是：操作系统有文件的缓存，而应用程序还会自己来分配内存缓存数据","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1548249323,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":58848,"user_name":"DJH","can_delete":false,"product_type":"c1","uid":1256740,"ip_address":"","ucode":"2BDEF123B3DB6A","user_header":"https://static001.geekbang.org/account/avatar/00/13/2d/24/28acca15.jpg","comment_is_top":false,"comment_ctime":1547212402,"is_pvip":false,"replies":[{"id":"21502","content":"1. 目录项是表示目录之间的树状关系，而文件名则会存储到数据部分。<br>2. 不好意思，是个笔误，当然是加速。谢谢指出<br>3. 这个在文章中有简单的介绍，回来在答疑篇中再展开一些","user_name":"作者回复","comment_id":58848,"uid":"1001282","ip_address":"","utype":1,"ctime":1547446402,"user_name_real":"倪朋飞"}],"discussion_count":1,"race_medal":0,"score":"18727081586","product_id":100020901,"comment_content":"请教三个问题。<br><br>1. 目录项是维护在内核中的一个内存数据结构，包括文件名。<br>我的问题是：文件名不是也应该存储在磁盘上么？不可能仅仅存在于内存吧？<br><br>2. 缓冲 I&#47;O，是指利用标准库缓存来减速文件的访问...<br>我的问题时：减速文件访问的原因是什么？<br><br>3. 阻塞&#47;非阻塞与同步&#47;非同步的区别是什么？","like_count":4,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":436231,"discussion_content":"1. 目录项是表示目录之间的树状关系，而文件名则会存储到数据部分。\n2. 不好意思，是个笔误，当然是加速。谢谢指出\n3. 这个在文章中有简单的介绍，回来在答疑篇中再展开一些","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1547446402,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":320085,"user_name":"Ansyear","can_delete":false,"product_type":"c1","uid":1629257,"ip_address":"","ucode":"489CE96852EA2C","user_header":"https://static001.geekbang.org/account/avatar/00/18/dc/49/43ae1627.jpg","comment_is_top":false,"comment_ctime":1636078581,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"14520980469","product_id":100020901,"comment_content":"课后答案：<br>文件名以及文件之间的目录关系，都放在目录项缓存中。而这是一个基于内存的数据结构，会根据需要动态构建。所以，<br>1.查找文件时，Linux 就会动态构建不在缓存中的目录项结构，导致 dentry 缓存升高。<br>2.find还需要找到文件的位置信息，而这些信息存放在inode的元数据中，所以会将索引节点也读入缓存进行匹配，因此会导致inode_cached增长。<br>而dentry缓存和inode_cached又都是包含在cached的一部分，所以通过free命令查看cached会升高","like_count":3},{"had_liked":false,"id":63880,"user_name":"Mr.Strive.Z.H.L","can_delete":false,"product_type":"c1","uid":1030198,"ip_address":"","ucode":"6D97E159E2EECD","user_header":"https://static001.geekbang.org/account/avatar/00/0f/b8/36/542c96bf.jpg","comment_is_top":false,"comment_ctime":1548574636,"is_pvip":false,"replies":[{"id":"22596","content":"按需构建很少一部分目录项就可以了，不需要所有的目录项","user_name":"作者回复","comment_id":63880,"uid":"1001282","ip_address":"","utype":1,"ctime":1548577282,"user_name_real":"倪朋飞"}],"discussion_count":1,"race_medal":0,"score":"14433476524","product_id":100020901,"comment_content":"老师您好：<br>关于目录项有一个疑惑：<br><br>通过目录项找到inode节点，从而访问具体的文件内容。其中inode和文件数据块都会被持久化，而目录项竟然不会被持久化，只是放在内存中进行缓存。<br><br>那么是否在每次开机时，内核都会自动构建文件系统完整的目录项，然后进行缓存？？","like_count":3,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":437745,"discussion_content":"按需构建很少一部分目录项就可以了，不需要所有的目录项","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1548577282,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":235358,"user_name":"Geek_9815f1","can_delete":false,"product_type":"c1","uid":2068424,"ip_address":"","ucode":"34EE8566A53F10","user_header":"","comment_is_top":false,"comment_ctime":1594981539,"is_pvip":false,"replies":[{"id":"87269","content":"这儿说的是VFS","user_name":"作者回复","comment_id":235358,"uid":"1001282","ip_address":"","utype":1,"ctime":1595343900,"user_name_real":"倪朋飞"}],"discussion_count":2,"race_medal":0,"score":"10184916131","product_id":100020901,"comment_content":"你要记住最重要的一点，在 Linux 中一切皆文件。不仅普通的文件和目录，就连块设备、套接字、管道等，也都要通过统一的文件系统来管理。    老师，上次听你 讲块设备和 文件系统的区别： 说块设备读写是绕过文件系统的。 现在是 块设备也通过统一的文件系统来管理。 这有矛盾吗？","like_count":2,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":501695,"discussion_content":"这儿说的是VFS","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1595343900,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1649057,"avatar":"https://static001.geekbang.org/account/avatar/00/19/29/a1/41607383.jpg","nickname":"hello","note":"","ucode":"4F42DAA5DB5C38","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":564107,"discussion_content":"没看懂答的意思。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1650162526,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":69909,"user_name":"hola","can_delete":false,"product_type":"c1","uid":1068559,"ip_address":"","ucode":"1872B1B3FCEAFC","user_header":"https://static001.geekbang.org/account/avatar/00/10/4e/0f/c43745e7.jpg","comment_is_top":false,"comment_ctime":1550902540,"is_pvip":false,"replies":[{"id":"25340","content":"嗯","user_name":"作者回复","comment_id":69909,"uid":"1001282","ip_address":"","utype":1,"ctime":1551194278,"user_name_real":"倪朋飞"}],"discussion_count":1,"race_medal":0,"score":"10140837132","product_id":100020901,"comment_content":"“索引节点和文件一一对应，它跟文件内容一样，都会被持久化存储到磁盘”<br>是一对一关系吗，那么看我的服务器<br>$ df -i &#47;<br>文件系统                                 Inode 已用(I) 可用(I) 已用(I)% 挂载点<br>&#47;dev&#47;mapper&#47;VolGroup-lv_root 655360   98862  556498      16% &#47;<br>意思是这个下面理论最多存放655360个文件  对吗<br><br><br><br>","like_count":2,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":440349,"discussion_content":"嗯","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1551194278,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":58650,"user_name":"圣诞使者","can_delete":false,"product_type":"c1","uid":1028183,"ip_address":"","ucode":"E59436F6392122","user_header":"https://static001.geekbang.org/account/avatar/00/0f/b0/57/a84d633e.jpg","comment_is_top":false,"comment_ctime":1547166559,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10137101151","product_id":100020901,"comment_content":"课后题，我感觉不会，应该只有用了目录的执行(x)权限内核才会缓存dentry，find只是用了目录的读(r)权限。","like_count":2},{"had_liked":false,"id":58642,"user_name":"ninuxer","can_delete":false,"product_type":"c1","uid":1243135,"ip_address":"","ucode":"5394ADAF2667D6","user_header":"https://wx.qlogo.cn/mmopen/vi_32/PiajxSqBRaEKQMM4m7NHuicr55aRiblTSEWIYe0QqbpyHweaoAbG7j2v7UUElqqeP3Ihrm3UfDPDRb1Hv8LvPwXqA/132","comment_is_top":false,"comment_ctime":1547165742,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10137100334","product_id":100020901,"comment_content":"打卡day24<br>阻塞非阻塞，同步异步再次mark下：<br>根据应用程序是否阻塞自身线程的运行，可以把文件 I&#47;O 分为阻塞 I&#47;O 和非阻塞 I&#47;O；<br>根据是否等待响应结果，可以把文件 I&#47;O 分为同步和异步 I&#47;O","like_count":2},{"had_liked":false,"id":58631,"user_name":"xzyeah","can_delete":false,"product_type":"c1","uid":1106882,"ip_address":"","ucode":"AEC6AA55A73D44","user_header":"https://static001.geekbang.org/account/avatar/00/10/e3/c2/7406eaf1.jpg","comment_is_top":false,"comment_ctime":1547161773,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"10137096365","product_id":100020901,"comment_content":"老师，我的理解，不会引起内存升高，因为文件名存在于目录项，目录项本身就存在于内存缓存。","like_count":2,"discussions":[{"author":{"id":1345033,"avatar":"https://static001.geekbang.org/account/avatar/00/14/86/09/aa0cba23.jpg","nickname":"逝水伊人","note":"","ucode":"7F2DC7E1D74FE4","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":355567,"discussion_content":"执行一下兄弟\n不要想当然","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1615453484,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":235823,"user_name":"Geek_9815f1","can_delete":false,"product_type":"c1","uid":2068424,"ip_address":"","ucode":"34EE8566A53F10","user_header":"","comment_is_top":false,"comment_ctime":1595213060,"is_pvip":false,"replies":[{"id":"87256","content":"这儿说的“虚拟文件系统（VFS）”，而不是具体的某一个“文件系统”（比如XFS等）","user_name":"作者回复","comment_id":235823,"uid":"1001282","ip_address":"","utype":1,"ctime":1595343260,"user_name_real":"倪朋飞"}],"discussion_count":1,"race_medal":0,"score":"5890180356","product_id":100020901,"comment_content":"你要记住最重要的一点，在 Linux 中一切皆文件。不仅普通的文件和目录，就连块设备、套接字、管道等，也都要通过统一的文件系统来管理。   上一章不是说过 块设备绕过文件系统， 现在又说统一由文件系统管理 ","like_count":1,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":501842,"discussion_content":"这儿说的“虚拟文件系统（VFS）”，而不是具体的某一个“文件系统”（比如XFS等）","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1595343260,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":196276,"user_name":"流水","can_delete":false,"product_type":"c1","uid":1055290,"ip_address":"","ucode":"433A403982C15A","user_header":"https://static001.geekbang.org/account/avatar/00/10/1a/3a/9001e627.jpg","comment_is_top":false,"comment_ctime":1585268997,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5880236293","product_id":100020901,"comment_content":"评论区很多同学在问目录项问题，主要是因为把目录项和目录文件搞混了吧，目录项是内核的缓存对象，目录文件是特殊的文件，也有自己的inode，文件内容里记录了其他文件名及inode的映射关系","like_count":1},{"had_liked":false,"id":67390,"user_name":"如果","can_delete":false,"product_type":"c1","uid":1320638,"ip_address":"","ucode":"138A3EEEE50850","user_header":"","comment_is_top":false,"comment_ctime":1550138348,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5845105644","product_id":100020901,"comment_content":"day23,打卡<br>这节内容有点难理解~~","like_count":1},{"had_liked":false,"id":60581,"user_name":"Something","can_delete":false,"product_type":"c1","uid":1314641,"ip_address":"","ucode":"0772172E3597D3","user_header":"https://static001.geekbang.org/account/avatar/00/14/0f/51/ec3a5d28.jpg","comment_is_top":false,"comment_ctime":1547515731,"is_pvip":false,"replies":[{"id":"22303","content":"方便访问","user_name":"作者回复","user_name_real":"倪朋飞","uid":"1001282","ctime":1548248774,"ip_address":"","comment_id":60581,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5842483027","product_id":100020901,"comment_content":"为什么能把内存也能搞成文件系统？它又不是IO设备？","like_count":1,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":436549,"discussion_content":"方便访问","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1548248774,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":58983,"user_name":"未来小鬼","can_delete":false,"product_type":"c1","uid":1244665,"ip_address":"","ucode":"A0ED87F78E6319","user_header":"https://static001.geekbang.org/account/avatar/00/12/fd/f9/61bdb3f8.jpg","comment_is_top":false,"comment_ctime":1547264784,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5842232080","product_id":100020901,"comment_content":"同步，异步，阻塞非阻塞。。。从没搞懂。。。","like_count":1},{"had_liked":false,"id":58846,"user_name":"划时代","can_delete":false,"product_type":"c1","uid":1061454,"ip_address":"","ucode":"9554CE2F83B77F","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/2o1Izf2YyJSnnI0ErZ51pYRlnrmibqUTaia3tCU1PjMxuwyXSKOLUYiac2TQ5pd5gNGvS81fVqKWGvDsZLTM8zhWg/132","comment_is_top":false,"comment_ctime":1547212254,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5842179550","product_id":100020901,"comment_content":"执行find &#47; -name file-name，vmstat 1观察，in&#47;cs&#47;us&#47;sy项参数有上涨，cache项有一点上涨，free项有一点下降，可想而知操作系统不会将所有目录项都存放在内存中，再执行tree &#47;时尤为明显。<br>回复老师问题，“内存打满”已处理属于某环境内存泄漏所致；Pss为0kB而Rss不为0kB，在Ubuntu中较少见，bash进程有出现一个，而在centos中则较多。","like_count":1},{"had_liked":false,"id":58676,"user_name":"二三子也","can_delete":false,"product_type":"c1","uid":1245787,"ip_address":"","ucode":"69C7D86583277D","user_header":"https://static001.geekbang.org/account/avatar/00/13/02/5b/ce326cfc.jpg","comment_is_top":false,"comment_ctime":1547173327,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5842140623","product_id":100020901,"comment_content":"Flag。<br>关于思考题：<br>1.如果系统执行过一些操作，其中涉及到了要查找的file-name，那么在执行find命令的时候，应该是不会导致系统缓存的升高。<br>2.如果不是上述情况，或者执行过命令 echo 3 &gt; &#47;proc&#47;sys&#47;vm&#47;drop_cache 操作的话，那么是会导致系统缓存升高的。只是通过vmstat观察的话，buffer与cache都用相应的增加，但是buffer的增加更明显。至于原因的话，推测是这样的：buffer增加是因为系统会缓存读取到的块设备中的数据。cache增加是因为内核创建了目录项缓存用来保存inode节点的相关信息，而目录项缓存属于cache部分，所以会导致cache也增加。但是为什么buffer会比cache增加的明显，暂时还没想明白。","like_count":1},{"had_liked":false,"id":58640,"user_name":"CoderCooler","can_delete":false,"product_type":"c1","uid":1171813,"ip_address":"","ucode":"279046D184091E","user_header":"https://static001.geekbang.org/account/avatar/00/11/e1/65/87332b4c.jpg","comment_is_top":false,"comment_ctime":1547165264,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"5842132560","product_id":100020901,"comment_content":"老师您好，您讲的文件系统知识点在HDD和SSD上都适用吗？","like_count":1,"discussions":[{"author":{"id":1445845,"avatar":"https://static001.geekbang.org/account/avatar/00/16/0f/d5/73ebd489.jpg","nickname":"于加硕","note":"","ucode":"723797D27971A4","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":308100,"discussion_content":"看架构图，这节讲的是文件系统之上的内容，物理设备差异应该不影响吧(猜测)","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1600846427,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":359616,"user_name":"Geek_f93234","can_delete":false,"product_type":"c1","uid":1769504,"ip_address":"北京","ucode":"1E5DC903A5429E","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJGXndj5N66z9BL1ic9GibZzWWgoVeWaWTL2XUnCYic7iba2kAEvN9WfjmlXELD5lqt8IJ1P023N5ZWicg/132","comment_is_top":false,"comment_ctime":1665700975,"is_pvip":false,"discussion_count":0,"race_medal":1,"score":"1665700975","product_id":100020901,"comment_content":"find &#47; -name file-name 会导致 目录项缓存增加","like_count":0},{"had_liked":false,"id":336841,"user_name":"皮卡卡","can_delete":false,"product_type":"c1","uid":2715554,"ip_address":"","ucode":"52B3F234550E7F","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLBHy0D2KUZwOGHRG8qloicx2V4E4mImsPIiavPfr12BZB6QyUlHNdmOohC3EbsgnM2QNBeoqu82Grw/132","comment_is_top":false,"comment_ctime":1646393796,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1646393796","product_id":100020901,"comment_content":"解决了我很多疑惑 感谢老师","like_count":0},{"had_liked":false,"id":330585,"user_name":"烟雨","can_delete":false,"product_type":"c1","uid":1030391,"ip_address":"","ucode":"C33774DC89D314","user_header":"https://static001.geekbang.org/account/avatar/00/0f/b8/f7/35b22075.jpg","comment_is_top":false,"comment_ctime":1642057506,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1642057506","product_id":100020901,"comment_content":"内核是如何构建目录项，理解目录项的原始数据应该也在磁盘中保存。","like_count":0},{"had_liked":false,"id":323922,"user_name":"robonix","can_delete":false,"product_type":"c1","uid":1212323,"ip_address":"","ucode":"866EC82EDA455B","user_header":"https://static001.geekbang.org/account/avatar/00/12/7f/a3/23540579.jpg","comment_is_top":false,"comment_ctime":1638232651,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1638232651","product_id":100020901,"comment_content":"既然目录项不是持久化存储，只在内存中，那么重启后还在吗？","like_count":0,"discussions":[{"author":{"id":1129668,"avatar":"https://static001.geekbang.org/account/avatar/00/11/3c/c4/7c2bf312.jpg","nickname":"草根","note":"","ucode":"7C97CB09A4D8F1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":540980,"discussion_content":"重启后重新构架加载到内存中","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1640224843,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":305926,"user_name":"ccz 开发(谢不邀)","can_delete":false,"product_type":"c1","uid":1805809,"ip_address":"","ucode":"B8803B050AAC68","user_header":"","comment_is_top":false,"comment_ctime":1628233912,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1628233912","product_id":100020901,"comment_content":"请问，slab在编程中需要显式调用，还是由系统管理；比如说，java或golang程序，做什么操作的时候，可能涉及slab","like_count":0},{"had_liked":false,"id":297678,"user_name":"curry30","can_delete":false,"product_type":"c1","uid":1825232,"ip_address":"","ucode":"2A4F51CEE36F7A","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83ersRGspOZwfckQcnzQxOzUYdw36wufiaQIic4hfmPrN5arOTuPF7aTz0leNSibs8C3nc3aDuh8CcMtOw/132","comment_is_top":false,"comment_ctime":1623726781,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1623726781","product_id":100020901,"comment_content":"老师好，linux的文件系统中存在目录项、索引节点数据结构，请问下VFS虚拟文件系统层作为一种“统一”的虚拟文件系统是否也存在目录项、索引节点的概念，另外其他非linux的文件操作系统是否也存在目录项和索引节点，比如将windows的文件系统挂在到linux服务器下，如果windows的文件系统本身没有目录项和索引节点的概念，文件的属性信息（大小、访问时间、属组等）查看以及文件的管理又如何实现的","like_count":0},{"had_liked":false,"id":294423,"user_name":"LH","can_delete":false,"product_type":"c1","uid":1211178,"ip_address":"","ucode":"819B9B2409E834","user_header":"https://static001.geekbang.org/account/avatar/00/12/7b/2a/7d8b5943.jpg","comment_is_top":false,"comment_ctime":1621936765,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1621936765","product_id":100020901,"comment_content":"导致dentry缓存升高，dentry记录了目录项和文件名。查找文件肯定是从这儿查找的，但是dentry不是在内存中的吗？为什么还需要缓存昵","like_count":0},{"had_liked":false,"id":293721,"user_name":"Heaven","can_delete":false,"product_type":"c1","uid":1694207,"ip_address":"","ucode":"FA33FBCC66C911","user_header":"https://static001.geekbang.org/account/avatar/00/19/d9/ff/b23018a6.jpg","comment_is_top":false,"comment_ctime":1621504784,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1621504784","product_id":100020901,"comment_content":"find需要遍历文件系统，而遍历文件系统的时候，需要讲索引和实际的目录树关联起来，这需要在内核中维护dentry，由于find的目录是根目录，所以必然会导致大量的dentry的生成。","like_count":0},{"had_liked":false,"id":281283,"user_name":"yudidi","can_delete":false,"product_type":"c1","uid":1202482,"ip_address":"","ucode":"70283DE39D86F5","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/ydFhHonicUQibGlAfsAYBibNOfSxpCG5cJNp9oRibTJm3TrxM7Hj4WPPCRE3vluZJb0TGQqpKCaBWLdmra5Su1KF5Q/132","comment_is_top":false,"comment_ctime":1614674616,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1614674616","product_id":100020901,"comment_content":"请教大家1个问题, es的实时性是通过写入“文件系统缓存”不写磁盘, 然后就可以搜索到新加入的文档。<br>其中的&quot;文件系统缓存&quot;,是不是就是本文中提到的 &quot;操作系统的页缓存&quot;呢?","like_count":0},{"had_liked":false,"id":278113,"user_name":"大将军Leo。。","can_delete":false,"product_type":"c1","uid":1506549,"ip_address":"","ucode":"4A6A510BA454E1","user_header":"https://static001.geekbang.org/account/avatar/00/16/fc/f5/6b65f63a.jpg","comment_is_top":false,"comment_ctime":1612766627,"is_pvip":false,"discussion_count":0,"race_medal":1,"score":"1612766627","product_id":100020901,"comment_content":"打开一个文件在写数据，突然掉电，等操作系统重启后这个文件是如何处理的这种异常的","like_count":0},{"had_liked":false,"id":268988,"user_name":"Geek_065895","can_delete":false,"product_type":"c1","uid":2136069,"ip_address":"","ucode":"2E6FCCC78E5767","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/rxz5aKicRkvqWmt6c6c7eayHvh577uibBTVQzcJKwSTqI9FaxZSRlx7NRVw4atWpqER8ncA5jErQb3wb4cPzZxlA/132","comment_is_top":false,"comment_ctime":1608461132,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1608461132","product_id":100020901,"comment_content":"请问各位大佬阻塞&#47;非阻塞I&#47;O和同步&#47;异步I&#47;O有啥区别，看起来好像他们表达的是同一个意思：系统调用没结束就卡住","like_count":0},{"had_liked":false,"id":259296,"user_name":"Geek_f702be","can_delete":false,"product_type":"c1","uid":1143067,"ip_address":"","ucode":"8E3B5F393C4266","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epumnXjMLYzHkGFhAraIiaAMXpotuUR9PCexBWl25tRLFAvpzs03Hfse4Y1lyeWuryz6z80Fd8AXiaw/132","comment_is_top":false,"comment_ctime":1604675023,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1604675023","product_id":100020901,"comment_content":"通过对IO类型了解了目录缓存和索引节点缓存，以前只知道io类型跟页缓存","like_count":0},{"had_liked":false,"id":237920,"user_name":"青年祭司","can_delete":false,"product_type":"c1","uid":1259156,"ip_address":"","ucode":"C88EDAE3FF09AE","user_header":"https://static001.geekbang.org/account/avatar/00/13/36/94/0b969588.jpg","comment_is_top":false,"comment_ctime":1596004989,"is_pvip":false,"discussion_count":0,"race_medal":5,"score":"1596004989","product_id":100020901,"comment_content":"目录项是如何从磁盘持久化数据中构建的","like_count":0},{"had_liked":false,"id":209266,"user_name":"天信","can_delete":false,"product_type":"c1","uid":1232463,"ip_address":"","ucode":"4961959C9F19E9","user_header":"https://static001.geekbang.org/account/avatar/00/12/ce/4f/6afbb99a.jpg","comment_is_top":false,"comment_ctime":1587526651,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1587526651","product_id":100020901,"comment_content":"提出问题：虚拟文件系统中的架构图：缓冲区（Buffer）[位于文件系统与本地磁盘设备之间）与页缓存的区别和关联是什么呢","like_count":0},{"had_liked":false,"id":208533,"user_name":"严青","can_delete":false,"product_type":"c1","uid":1316494,"ip_address":"","ucode":"5C9015E78F71BE","user_header":"https://static001.geekbang.org/account/avatar/00/14/16/8e/d401d48c.jpg","comment_is_top":false,"comment_ctime":1587376032,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1587376032","product_id":100020901,"comment_content":"老师，我感觉阻塞IO|非阻塞IO　以及　同步IO|异步IO　没什么区别呀？","like_count":0},{"had_liked":false,"id":204695,"user_name":"山雨淋淋","can_delete":false,"product_type":"c1","uid":1515297,"ip_address":"","ucode":"0D4538C616A130","user_header":"https://static001.geekbang.org/account/avatar/00/17/1f/21/da776587.jpg","comment_is_top":false,"comment_ctime":1586443107,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1586443107","product_id":100020901,"comment_content":"业余小白请教一个问题，&#47;dev&#47;sda2(设备文件）挂载在&#47;下面，应该是先有根文件系统，才有文件系统上的文件&#47;dev&#47;sda2,可是没有&#47;dev&#47;sda2，又哪里来的根文件系统呢，不太明白，老师能说一下么","like_count":0},{"had_liked":false,"id":194415,"user_name":"linker","can_delete":false,"product_type":"c1","uid":1803259,"ip_address":"","ucode":"6C5799F2FC2C82","user_header":"https://static001.geekbang.org/account/avatar/00/1b/83/fb/621adceb.jpg","comment_is_top":false,"comment_ctime":1585058942,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1585058942","product_id":100020901,"comment_content":"经测试是dentry与inode增加比较快","like_count":0},{"had_liked":false,"id":194264,"user_name":"刘友淙","can_delete":false,"product_type":"c1","uid":1620058,"ip_address":"","ucode":"97F3A69A308313","user_header":"","comment_is_top":false,"comment_ctime":1585043546,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1585043546","product_id":100020901,"comment_content":"D10 打卡","like_count":0},{"had_liked":false,"id":191906,"user_name":"大鹏展翅","can_delete":false,"product_type":"c1","uid":1308449,"ip_address":"","ucode":"244C4648E64E66","user_header":"https://static001.geekbang.org/account/avatar/00/13/f7/21/fbfc06c5.jpg","comment_is_top":false,"comment_ctime":1584803034,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1584803034","product_id":100020901,"comment_content":"工具确实不错，解决了我的问题","like_count":0},{"had_liked":false,"id":176901,"user_name":"飘云","can_delete":false,"product_type":"c1","uid":1446494,"ip_address":"","ucode":"C6FE0310D6853C","user_header":"https://static001.geekbang.org/account/avatar/00/16/12/5e/77b67a85.jpg","comment_is_top":false,"comment_ctime":1581218684,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1581218684","product_id":100020901,"comment_content":"其实目录也是文件， 也有inode","like_count":0},{"had_liked":false,"id":153515,"user_name":"Eilian","can_delete":false,"product_type":"c1","uid":1314732,"ip_address":"","ucode":"F8264341B89A20","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eoTGktF2iaCu1Qe1GxdcUIc7GuOGajHQVOquRbBQpsYiaOXy4LTNzNM9JV3U0QiaDyUIfJyh4icLo9ic6g/132","comment_is_top":false,"comment_ctime":1574251191,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1574251191","product_id":100020901,"comment_content":"倪老师，<br>      请教个问题，最近发现有台服务器会发生突然的cache 释放，系统会hang , 通过日志可以看到hang的时间段（通常为1分钟）会伴随这大量的cache 释放，其中 dentry cache 会由10G 释放后只有 几百兆，page cache 也是类似。但是系统free 的内存还有100G 左右（主机内存256G），不知道老师遇到过类似问题没有，或者这种问题应该从哪些方面去排查，求翻...","like_count":0},{"had_liked":false,"id":136045,"user_name":"AB","can_delete":false,"product_type":"c1","uid":1202470,"ip_address":"","ucode":"0BB62078D5D1CA","user_header":"https://static001.geekbang.org/account/avatar/00/12/59/26/e9594316.jpg","comment_is_top":false,"comment_ctime":1569335355,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1569335355","product_id":100020901,"comment_content":"按我的理解，buffer和cache在buffer+cache中应该分别占用差不多50%，才能有一个很好的性能，可以这么理解么","like_count":0},{"had_liked":false,"id":136033,"user_name":"AB","can_delete":false,"product_type":"c1","uid":1202470,"ip_address":"","ucode":"0BB62078D5D1CA","user_header":"https://static001.geekbang.org/account/avatar/00/12/59/26/e9594316.jpg","comment_is_top":false,"comment_ctime":1569334217,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1569334217","product_id":100020901,"comment_content":"老师，如果我看到buffer的值非常小，通过vmstat 1看到在100以内，是不是就能看出内存太小了，或者是应用程序占用了太多的内存，导致文件系统写磁盘没有通过buffer，而是直接裸IO的？","like_count":0},{"had_liked":false,"id":121473,"user_name":"afterdream","can_delete":false,"product_type":"c1","uid":1619795,"ip_address":"","ucode":"701AD039459191","user_header":"https://static001.geekbang.org/account/avatar/00/18/b7/53/823f647c.jpg","comment_is_top":false,"comment_ctime":1565143805,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1565143805","product_id":100020901,"comment_content":"能不能形象化介绍一下通用文件模型中：超级块对象、索引节点对象、目录项对象、文件对象的作用？","like_count":0},{"had_liked":false,"id":97756,"user_name":"kubxy","can_delete":false,"product_type":"c1","uid":1514411,"ip_address":"","ucode":"EDA317D303CC42","user_header":"https://static001.geekbang.org/account/avatar/00/17/1b/ab/a5f88914.jpg","comment_is_top":false,"comment_ctime":1558766172,"is_pvip":false,"replies":[{"id":"34964","content":"从文件系统中恢复","user_name":"作者回复","user_name_real":"倪朋飞","uid":"1001282","ctime":1558793184,"ip_address":"","comment_id":97756,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1558766172","product_id":100020901,"comment_content":"老师，您好。我有一个疑问，内存中的目录项是如何生成的呢？<br>我们都知道内存中的数据在关机后会丢失。目录项是由内核维护的，存储在内存中，那么关机时内存中的目录项如何处理：<br>1）持久化到磁盘？下次开机直接从磁盘读入内存<br>2）丢就丢呗（就这么任性），下次开机时由内核重新生成，如果是这种机制，那么问题又来了，如何生成呢，根据超级块和索引节点区计算吗？<br>3）其他...","like_count":0,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":451402,"discussion_content":"从文件系统中恢复","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1558793184,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":93453,"user_name":"jacky","can_delete":false,"product_type":"c1","uid":1049177,"ip_address":"","ucode":"A0BD06E2ABF520","user_header":"https://static001.geekbang.org/account/avatar/00/10/02/59/989f65c8.jpg","comment_is_top":false,"comment_ctime":1557474117,"is_pvip":false,"replies":[{"id":"33538","content":"那一个指标的Use%？","user_name":"作者回复","user_name_real":"倪朋飞","uid":"1001282","ctime":1557671707,"ip_address":"","comment_id":93453,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1557474117","product_id":100020901,"comment_content":"请问老师，我的Linux的Use%显示100%，我该如何排查呢？","like_count":0,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":449640,"discussion_content":"那一个指标的Use%？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1557671707,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1284474,"avatar":"https://static001.geekbang.org/account/avatar/00/13/99/7a/558666a5.jpg","nickname":"AceslupK","note":"","ucode":"048F84D019CBBB","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":391644,"discussion_content":"slabtop 指标的USE蛮多显示100%","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1630564043,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":93030,"user_name":"茎待佳阴","can_delete":false,"product_type":"c1","uid":1042464,"ip_address":"","ucode":"21A7DC2C3EA389","user_header":"https://static001.geekbang.org/account/avatar/00/0f/e8/20/3374ea9e.jpg","comment_is_top":false,"comment_ctime":1557381169,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1557381169","product_id":100020901,"comment_content":"iscsi不是文件系统","like_count":0,"discussions":[{"author":{"id":1445845,"avatar":"https://static001.geekbang.org/account/avatar/00/16/0f/d5/73ebd489.jpg","nickname":"于加硕","note":"","ucode":"723797D27971A4","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":309245,"discussion_content":"你的ID很刺眼","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1601222003,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":83925,"user_name":"anwj","can_delete":false,"product_type":"c1","uid":1328201,"ip_address":"","ucode":"50B8CCE09647E1","user_header":"","comment_is_top":false,"comment_ctime":1554734520,"is_pvip":false,"replies":[{"id":"30376","content":"统计什么？大量文件的情况下一般要考虑从文件系统层面优化","user_name":"作者回复","user_name_real":"倪朋飞","uid":"1001282","ctime":1554815417,"ip_address":"","comment_id":83925,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1554734520","product_id":100020901,"comment_content":"老师，遇到这样一个实际问题，目录下有200万+个文件，用什么方式可以比较快的统计出来，最好用1s时间能统计出结果","like_count":0,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":446178,"discussion_content":"统计什么？大量文件的情况下一般要考虑从文件系统层面优化","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1554815417,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":82704,"user_name":"chich chung kai","can_delete":false,"product_type":"c1","uid":1340858,"ip_address":"","ucode":"4FFE034C8409EA","user_header":"https://static001.geekbang.org/account/avatar/00/14/75/ba/ac35ac17.jpg","comment_is_top":false,"comment_ctime":1554281050,"is_pvip":false,"replies":[{"id":"30192","content":"这是bug了，最好的方法是修复bug","user_name":"作者回复","user_name_real":"倪朋飞","uid":"1001282","ctime":1554639220,"ip_address":"","comment_id":82704,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1554281050","product_id":100020901,"comment_content":"老师，请问怎么释放源文件已经删除的文件句柄，不用杀掉进程的那种：<br>[root@VM_2_2_centos fd]# ll<br>total 0<br>lr-x------. 1 root root 64 Mar  6 19:46 0 -&gt; &#47;dev&#47;null<br>l-wx------. 1 root root 64 Mar  6 19:46 1 -&gt; &#47;dev&#47;null<br>lr-x------. 1 root root 64 Mar  6 19:46 10 -&gt; pipe:[12921]<br>lr-x------. 1 root root 64 Mar  6 19:46 11 -&gt; pipe:[12923]<br>l-wx------. 1 root root 64 Mar  6 19:46 12 -&gt; &#47;tmp&#47;gunicorn_command-stdout---supervisor-cFRLNf.log (deleted)<br>l-wx------. 1 root root 64 Mar  6 19:46 13 -&gt; &#47;tmp&#47;gunicorn_command-stderr---supervisor-siKNox.log (deleted)<br>l-wx------. 1 root root 64 Mar  6 19:46 14 -&gt; pipe:[12925]<br>lr-x------. 1 root root 64 Mar  6 19:46 15 -&gt; pipe:[12924]<br>lr-x------. 1 root root 64 Mar  6 19:46 16 -&gt; pipe:[12926]<br>l-wx------. 1 root root 64 Mar  6 19:46 17 -&gt; &#47;tmp&#47;todb_command-stdout---supervisor-MUh7Ph.log (deleted)<br>l-wx------. 1 root root 64 Mar  6 19:46 18 -&gt; &#47;tmp&#47;todb_command-stderr---supervisor-jPHkOa.log (deleted)<br>l-wx------. 1 root root 64 Mar  6 19:46 2 -&gt; &#47;dev&#47;null<br>lr-x------. 1 root root 64 Mar  6 19:46 20 -&gt; pipe:[12927]<br>l-wx------. 1 root root 64 Mar  6 19:46 22 -&gt; &#47;tmp&#47;nginx_command-stdout---supervisor-ZRr66X.log (deleted)<br>l-wx------. 1 root root 64 Mar  6 19:46 23 -&gt; &#47;tmp&#47;nginx_command-stderr---supervisor-073_FI.log (deleted)<br>l-wx------. 1 root root 64 Mar  6 19:46 3 -&gt; &#47;tmp&#47;supervisord.log (deleted)<br>lrwx------. 1 root root 64 Mar  6 19:46 4 -&gt; socket:[12616]<br>lrwx------. 1 root root 64 Mar  6 19:46 5 -&gt; socket:[12693]<br>l-wx------. 1 root root 64 Mar  6 19:46 7 -&gt; pipe:[12919]<br>lr-x------. 1 root root 64 Mar  6 19:46 8 -&gt; pipe:[12920]<br>l-wx------. 1 root root 64 Mar  6 19:46 9 -&gt; pipe:[12922]<br><br>","like_count":0,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":445690,"discussion_content":"这是bug了，最好的方法是修复bug","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1554639220,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":82050,"user_name":"frank_","can_delete":false,"product_type":"c1","uid":1452570,"ip_address":"","ucode":"658DBBC9BE337F","user_header":"","comment_is_top":false,"comment_ctime":1554110208,"is_pvip":false,"replies":[{"id":"29833","content":"系统启动时会先挂载根文件系统，这是在安装系统时就配置好了的。目录才可以作为挂载点","user_name":"作者回复","user_name_real":"倪朋飞","uid":"1001282","ctime":1554209749,"ip_address":"","comment_id":82050,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1554110208","product_id":100020901,"comment_content":"请教老师， 对文件系统挂载不是很理解，VFS虚拟文件系统也有目录树，它不是只定义了API吗，它的目录树默认是什么的？任何一个路径都可以作为挂载点吗？","like_count":0,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":445446,"discussion_content":"系统启动时会先挂载根文件系统，这是在安装系统时就配置好了的。目录才可以作为挂载点","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1554209749,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":82044,"user_name":"sugar","can_delete":false,"product_type":"c1","uid":1167046,"ip_address":"","ucode":"454538FF253B5F","user_header":"https://static001.geekbang.org/account/avatar/00/11/ce/c6/958212b5.jpg","comment_is_top":false,"comment_ctime":1554109366,"is_pvip":false,"replies":[{"id":"29834","content":"对的","user_name":"作者回复","user_name_real":"倪朋飞","uid":"1001282","ctime":1554209764,"ip_address":"","comment_id":82044,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1554109366","product_id":100020901,"comment_content":"老师您好，接我的上一条提问，有关inode的存储位置，其实我是想问，如果我直接读一个文件的内容二进制格式，并把它传输到另一台机器，那么原机器的inode及dentry信息都是不会保留的，因为文件本身的内容里不包含这些，这么说对吗？","like_count":0,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":445441,"discussion_content":"对的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1554209764,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":80680,"user_name":"sugar","can_delete":false,"product_type":"c1","uid":1167046,"ip_address":"","ucode":"454538FF253B5F","user_header":"https://static001.geekbang.org/account/avatar/00/11/ce/c6/958212b5.jpg","comment_is_top":false,"comment_ctime":1553697388,"is_pvip":false,"replies":[{"id":"29612","content":"scp实际上是创建去相同内容的文件，具体保留的inode信息就是scp的具体实现了，跟inode的存储位置没关系。man scp可以查到相关文档","user_name":"作者回复","user_name_real":"倪朋飞","uid":"1001282","ctime":1554021714,"ip_address":"","comment_id":80680,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1553697388","product_id":100020901,"comment_content":"老师您好，想问 inode信息是存在文件内 还是单独存在另外的磁盘区域呢？换句话说，如果我把一个文件scp到另一台机器上，它的inode信息会跟过去吗？ 因为我发现 有时刚刚从linux上下载到mac本地的文件，stat命令查看创建时间（ext好像不记录这个 但mac的fs会有这个字段） 竟然早于当天。","like_count":0,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":444942,"discussion_content":"scp实际上是创建去相同内容的文件，具体保留的inode信息就是scp的具体实现了，跟inode的存储位置没关系。man scp可以查到相关文档","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1554021714,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":77190,"user_name":"shonm","can_delete":false,"product_type":"c1","uid":1132459,"ip_address":"","ucode":"A4E2B4167D9F1E","user_header":"https://static001.geekbang.org/account/avatar/00/11/47/ab/3311945c.jpg","comment_is_top":false,"comment_ctime":1552880586,"is_pvip":false,"replies":[{"id":"28157","content":"目录也是个文件，会落盘存储的","user_name":"作者回复","user_name_real":"倪朋飞","uid":"1001282","ctime":1552903046,"ip_address":"","comment_id":77190,"utype":1}],"discussion_count":3,"race_medal":0,"score":"1552880586","product_id":100020901,"comment_content":"老师 您好 您说目录项是个缓存，那么关机后会存放在磁盘吗，否则下次开机的时候去哪里读取目录呢","like_count":0,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":443627,"discussion_content":"目录也是个文件，会落盘存储的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1552903046,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1629257,"avatar":"https://static001.geekbang.org/account/avatar/00/18/dc/49/43ae1627.jpg","nickname":"Ansyear","note":"","ucode":"489CE96852EA2C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":412120,"discussion_content":"所以目录和目录项的关系是什么？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1636080557,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1445845,"avatar":"https://static001.geekbang.org/account/avatar/00/16/0f/d5/73ebd489.jpg","nickname":"于加硕","note":"","ucode":"723797D27971A4","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":308093,"discussion_content":"所有文件存储到磁盘中，当我们检索文件时，会从磁盘获取信息然后产生目录项存储到缓存中，供后续使用，这样理解吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1600844817,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":76863,"user_name":"挺直腰板","can_delete":false,"product_type":"c1","uid":1178397,"ip_address":"","ucode":"B7DD679A3A4EEB","user_header":"https://static001.geekbang.org/account/avatar/00/11/fb/1d/12c7c021.jpg","comment_is_top":false,"comment_ctime":1552731996,"is_pvip":false,"replies":[{"id":"28097","content":"不同内核版本可能会稍微不同。我的centos7中解释为Memory used by the page cache and slabs (Cached and Slab in &#47;proc&#47;meminfo)","user_name":"作者回复","user_name_real":"倪朋飞","uid":"1001282","ctime":1552833814,"ip_address":"","comment_id":76863,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1552731996","product_id":100020901,"comment_content":"老师，你说free 输出的 Cache，是页缓存和可回收 Slab 缓存的和，但在centos7中得出数据还有些差异是为什么?<br>[root@localhost ~]# cat &#47;proc&#47;meminfo |grep -E &quot;SReclaimable|Cached&quot;<br>Cached:         13924792 kB<br>SwapCached:           20 kB<br>SReclaimable:     659860 kB<br>[root@localhost ~]# free -m<br>             total       used       free     shared    buffers     cached<br>Mem:         31883      23390       8492        353          0      13242<br>-&#47;+ buffers&#47;cache:      10148      21734<br>Swap:        31999          3      31996","like_count":0,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":443476,"discussion_content":"不同内核版本可能会稍微不同。我的centos7中解释为Memory used by the page cache and slabs (Cached and Slab in /proc/meminfo)","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1552833814,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":74899,"user_name":"有点意思","can_delete":false,"product_type":"c1","uid":1399454,"ip_address":"","ucode":"67F55604E8A548","user_header":"https://static001.geekbang.org/account/avatar/00/15/5a/9e/8f2ccc1d.jpg","comment_is_top":false,"comment_ctime":1552310837,"is_pvip":true,"replies":[{"id":"27343","content":"这还真不清楚，可能是网页中做了限制吧","user_name":"作者回复","user_name_real":"倪朋飞","uid":"1001282","ctime":1552350256,"ip_address":"","comment_id":74899,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1552310837","product_id":100020901,"comment_content":"奇怪了 想讲内容打印出来看 可是使用网页的浏览功能却只能打印一页 这是什么鬼","like_count":0,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":442728,"discussion_content":"这还真不清楚，可能是网页中做了限制吧","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1552350256,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1442431,"avatar":"https://static001.geekbang.org/account/avatar/00/16/02/7f/ddf56ac5.jpg","nickname":"runzhliu","note":"","ucode":"CD51D9465D7A05","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":2164,"discussion_content":"前端做了限制","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1563325252,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":74391,"user_name":"挺直腰板","can_delete":false,"product_type":"c1","uid":1178397,"ip_address":"","ucode":"B7DD679A3A4EEB","user_header":"https://static001.geekbang.org/account/avatar/00/11/fb/1d/12c7c021.jpg","comment_is_top":false,"comment_ctime":1552211559,"is_pvip":false,"replies":[{"id":"27333","content":"可以算出来，总内存使用减去进程的内存","user_name":"作者回复","user_name_real":"倪朋飞","uid":"1001282","ctime":1552349421,"ip_address":"","comment_id":74391,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1552211559","product_id":100020901,"comment_content":"老师能知道内核态用了多少内存？","like_count":0,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":442555,"discussion_content":"可以算出来，总内存使用减去进程的内存","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1552349421,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":62830,"user_name":"莫名","can_delete":false,"product_type":"c1","uid":1007254,"ip_address":"","ucode":"E28F2602BA25DD","user_header":"https://static001.geekbang.org/account/avatar/00/0f/5e/96/a03175bc.jpg","comment_is_top":false,"comment_ctime":1548167699,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1548167699","product_id":100020901,"comment_content":"第一个示意图有些问题，目录项列表file1、file2应该在inode3指向的数据块中。","like_count":0},{"had_liked":false,"id":62185,"user_name":"渡渡鸟_linux","can_delete":false,"product_type":"c1","uid":1227772,"ip_address":"","ucode":"099BB11A3201D3","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83ernR4NKI5tejJAV3HMTF3gszBBUAjkjLO2QYic2gx5dMGelFv4LWibib7CUGexmMcMp5HiaaibmOH3dyHg/132","comment_is_top":false,"comment_ctime":1547972954,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1547972954","product_id":100020901,"comment_content":"先清除页缓存，inode,dentry缓存：echo 3 &gt; &#47;proc&#47;sys&#47;vm&#47;drop_caches<br>使用 find &#47;etc&#47; -name &quot;passwd&quot; 未发现cache明显变化，执行速度非常快，因此考虑到是文件数量太少<br>使用 echo 3 &gt; &#47;proc&#47;sys&#47;vm&#47;drop_caches ； find &#47; -name &quot;passwd&quot; 后发现:<br>1. buffer 增加较少，40k 左右，<br>2. cache 增加较少，主要时 slab 增加较多，其中dentry,inode_cache,xfs_inode,proc_inode_cache 变化明显。<br>3. 可得到基本结论（不确定是否正确）：find 查找文件时，主要检索文件inode和dentry信息，对于逻辑块基本不检索(可能只是查找了存放文件名的数据块)","like_count":0},{"had_liked":false,"id":62012,"user_name":"苏宁","can_delete":false,"product_type":"c1","uid":1323846,"ip_address":"","ucode":"29486BF1B0E7D7","user_header":"https://static001.geekbang.org/account/avatar/00/14/33/46/7b2dac61.jpg","comment_is_top":false,"comment_ctime":1547881671,"is_pvip":false,"replies":[{"id":"22332","content":"会的，后面还会推荐一些书籍","user_name":"作者回复","user_name_real":"倪朋飞","uid":"1001282","ctime":1548251500,"ip_address":"","comment_id":62012,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1547881671","product_id":100020901,"comment_content":"老师，能否推荐关于linux文件系统的书","like_count":0,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":437070,"discussion_content":"会的，后面还会推荐一些书籍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1548251500,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":59569,"user_name":"在路上","can_delete":false,"product_type":"c1","uid":1043458,"ip_address":"","ucode":"70678F9E84846F","user_header":"https://static001.geekbang.org/account/avatar/00/0f/ec/02/083566d7.jpg","comment_is_top":false,"comment_ctime":1547386990,"is_pvip":true,"replies":[{"id":"21518","content":"有的","user_name":"作者回复","user_name_real":"倪朋飞","uid":"1001282","ctime":1547447656,"ip_address":"","comment_id":59569,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1547386990","product_id":100020901,"comment_content":"请问老师，后期有关于网络方面性能分析吗？多谢<br>","like_count":0,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":436357,"discussion_content":"有的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1547447656,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":59323,"user_name":"xfan","can_delete":false,"product_type":"c1","uid":1315147,"ip_address":"","ucode":"48ED8D498D7F56","user_header":"https://static001.geekbang.org/account/avatar/00/14/11/4b/fa64f061.jpg","comment_is_top":false,"comment_ctime":1547350980,"is_pvip":false,"replies":[{"id":"21520","content":"目录项只是表示树状结构，用的时候动态创建就可以的，持久化还是要靠inode和文件本身的数据","user_name":"作者回复","user_name_real":"倪朋飞","uid":"1001282","ctime":1547447863,"ip_address":"","comment_id":59323,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1547350980","product_id":100020901,"comment_content":"我觉得目录项应该也是要交换到磁盘里，在内存里的话怎么持久化呢","like_count":0,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":436324,"discussion_content":"目录项只是表示树状结构，用的时候动态创建就可以的，持久化还是要靠inode和文件本身的数据","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1547447863,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1445845,"avatar":"https://static001.geekbang.org/account/avatar/00/16/0f/d5/73ebd489.jpg","nickname":"于加硕","note":"","ucode":"723797D27971A4","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":308095,"discussion_content":"目录项的作用是为了减少高速cpu和慢速磁盘带来的性能差异，目录项记录的只是文件结构，文件结构的作用是方便程序检索到文件；只有在系统运行状态我们才需要去加速检索文件，所以我理解就是因为这个原因，所以目录项的设计不需要持久化。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1600845285,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":59310,"user_name":"我来也","can_delete":false,"product_type":"c1","uid":1205253,"ip_address":"","ucode":"773D6104F56767","user_header":"https://static001.geekbang.org/account/avatar/00/12/64/05/6989dce6.jpg","comment_is_top":false,"comment_ctime":1547349549,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1547349549","product_id":100020901,"comment_content":"[D23打卡]<br>以前就遇到过 df -h显示还有很多空间，可就是无法创建文件了。<br>后来才发现是index node节点用完了。<br>自此以后，我在每日服务器状态数据汇报中就添加了 df -i的统计数据。<br>“linux一切皆文件” 这设计太牛了。<br>今天通过老师的几个图，也更深入理解了应用程序到物理磁盘经过的过程。系统调用-vfs-文件系统-buffer-磁盘&#47;网络。","like_count":0},{"had_liked":false,"id":59158,"user_name":"橘子","can_delete":false,"product_type":"c1","uid":1327602,"ip_address":"","ucode":"AF6FA64AB7E4F3","user_header":"https://static001.geekbang.org/account/avatar/00/14/41/f2/34fb0a9d.jpg","comment_is_top":false,"comment_ctime":1547309367,"is_pvip":false,"replies":[{"id":"21523","content":"多种文件系统可以同时使用，可以根据挂载信息查看。<br><br>比如 &#47;proc&#47;mounts","user_name":"作者回复","user_name_real":"倪朋飞","uid":"1001282","ctime":1547448131,"ip_address":"","comment_id":59158,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1547309367","product_id":100020901,"comment_content":"操作系统中只能用一种文件系统还是可以多个文件系统在同一个操作系统中共存？共存的话如何查看操作系统用了哪些文件系统，这些文件系统由哪些设备使用，比如磁盘用的什么文件系统，网络用的什么文件系统，内存用的什么文件系统","like_count":0,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":436305,"discussion_content":"多种文件系统可以同时使用，可以根据挂载信息查看。\n\n比如 /proc/mounts","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1547448131,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":59063,"user_name":"大甜菜","can_delete":false,"product_type":"c1","uid":1354971,"ip_address":"","ucode":"34EB4775A53AE3","user_header":"https://static001.geekbang.org/account/avatar/00/14/ac/db/51399da1.jpg","comment_is_top":false,"comment_ctime":1547291560,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1547291560","product_id":100020901,"comment_content":"find应该就是遍历目录，查找目录下面是否有所查找的文件<br>目录本身也是文件，他储存的内容就是文件名和inode号的映射，既然读过文件，缓存肯定回事升高","like_count":0},{"had_liked":false,"id":58962,"user_name":"bluefantasy1","can_delete":false,"product_type":"c1","uid":1106810,"ip_address":"","ucode":"83440E87C4EED3","user_header":"","comment_is_top":false,"comment_ctime":1547261271,"is_pvip":false,"replies":[{"id":"22294","content":"不是全部加载，而是需要时动态加载","user_name":"作者回复","user_name_real":"倪朋飞","uid":"1001282","ctime":1548248099,"ip_address":"","comment_id":58962,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1547261271","product_id":100020901,"comment_content":"请教老师一个问题：dentry目录缓存项属于内核的缓存，但是它肯定是要持久化在的呀，持久化在哪里？操作系统启动的时候加载到缓存对吧？是把整个系统的所有dentry全部加载到缓存吗？","like_count":0,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":436260,"discussion_content":"不是全部加载，而是需要时动态加载","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1548248099,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1445845,"avatar":"https://static001.geekbang.org/account/avatar/00/16/0f/d5/73ebd489.jpg","nickname":"于加硕","note":"","ucode":"723797D27971A4","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":308098,"discussion_content":"为什么需要将目录结构持久化到磁盘呢？我在想如果我自己设计一套存储系统，肯定是要将最重要的信息进行持久化，当我要去定位资源时，能够快速扫描持久化信息建立一张结构图放在我最容易拿到的地方，创建结构图如何足够简单切高效，确实没必要进行持久化","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1600845676,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":58778,"user_name":"Brown羊羊","can_delete":false,"product_type":"c1","uid":1315332,"ip_address":"","ucode":"354EC478E57DEE","user_header":"https://static001.geekbang.org/account/avatar/00/14/12/04/5837b21c.jpg","comment_is_top":false,"comment_ctime":1547191471,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1547191471","product_id":100020901,"comment_content":"最后思考题，试了下inode_cache升高明显，dentry稍微有点升高","like_count":0},{"had_liked":false,"id":58751,"user_name":"有铭","can_delete":false,"product_type":"c1","uid":1046302,"ip_address":"","ucode":"2C7CB36CA5C04C","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/3XbCueYYVWTiclv8T5tFpwiblOxLphvSZxL4ujMdqVMibZnOiaFK2C5nKRGv407iaAsrI0CDICYVQJtiaITzkjfjbvrQ/132","comment_is_top":false,"comment_ctime":1547188305,"is_pvip":false,"replies":[{"id":"22291","content":"1. 是的，但启动时只需要访问很少一部分文件，所以大部分文件并不需要生成这个结构<br>2. 两个思路：查找大文件，查找无效文件描述符。<br><br>注意，df显示文件系统的使用，而 du 则是统计目录的使用，这两个不等同","user_name":"作者回复","user_name_real":"倪朋飞","uid":"1001282","ctime":1548247814,"ip_address":"","comment_id":58751,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1547188305","product_id":100020901,"comment_content":"老师我想请教两个问题：<br>1.目录项是维护在内核中的一个内存数据结构，这是不是说每次系统启动的时候，都得检索硬盘，然后生成这个结构？这样说来，如果磁盘上文件挺多的时候，启动会不会很慢？<br>2.我这有一台别人设置的ubuntu，之前的人做了一件事情，它把一块vfs管理的设备&#47;dev&#47;vda1 （大小50G）挂载到了&#47;目录下，然后把另外一块存储设备&#47;dev&#47;vdb1 （大小99G）挂载到了&#47;home&#47;ubuntu&#47;data2目录下。结果现在df -h报告&#47;dev&#47;vda1使用接近97%。我查了好久，du -h --max-depth=1  挨个扫目录，也查不出到底哪里被使用了。而且du看到&#47;目录的使用大小是68G。就是不知道这到底是怎么回事","like_count":0,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":436200,"discussion_content":"1. 是的，但启动时只需要访问很少一部分文件，所以大部分文件并不需要生成这个结构\n2. 两个思路：查找大文件，查找无效文件描述符。\n\n注意，df显示文件系统的使用，而 du 则是统计目录的使用，这两个不等同","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1548247814,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":58656,"user_name":"小文","can_delete":false,"product_type":"c1","uid":1198258,"ip_address":"","ucode":"4D6257B8D63FA4","user_header":"https://static001.geekbang.org/account/avatar/00/12/48/b2/cca85581.jpg","comment_is_top":false,"comment_ctime":1547167883,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1547167883","product_id":100020901,"comment_content":"老师，同步异步和阻塞非阻塞的区别是什么，这两个概念自己总是搞混....","like_count":0}]}