{"id":110354,"title":"26 | 信任始于握手：TLS1.2连接过程解析","content":"<p>经过前几讲的介绍，你应该已经熟悉了对称加密与非对称加密、数字签名与证书等密码学知识。</p><p>有了这些知识“打底”，现在我们就可以正式开始研究HTTPS和TLS协议了。</p><h2>HTTPS建立连接</h2><p>当你在浏览器地址栏里键入“<strong>https</strong>”开头的URI，再按下回车，会发生什么呢？</p><p>回忆一下<a href=\"https://time.geekbang.org/column/article/100502\">第8讲</a>的内容，你应该知道，浏览器首先要从URI里提取出协议名和域名。因为协议名是“https”，所以浏览器就知道了端口号是默认的443，它再用DNS解析域名，得到目标的IP地址，然后就可以使用三次握手与网站建立TCP连接了。</p><p>在HTTP协议里，建立连接后，浏览器会立即发送请求报文。但现在是HTTPS协议，它需要再用另外一个“握手”过程，在TCP上建立安全连接，之后才是收发HTTP报文。</p><p>这个“握手”过程与TCP有些类似，是HTTPS和TLS协议里最重要、最核心的部分，懂了它，你就可以自豪地说自己“掌握了HTTPS”。</p><h2>TLS协议的组成</h2><p>在讲TLS握手之前，我先简单介绍一下TLS协议的组成。</p><p>TLS包含几个子协议，你也可以理解为它是由几个不同职责的模块组成，比较常用的有记录协议、警报协议、握手协议、变更密码规范协议等。</p><p><strong>记录协议</strong>（Record Protocol）规定了TLS收发数据的基本单位：记录（record）。它有点像是TCP里的segment，所有的其他子协议都需要通过记录协议发出。但多个记录数据可以在一个TCP包里一次性发出，也并不需要像TCP那样返回ACK。</p><!-- [[[read_end]]] --><p><strong>警报协议</strong>（Alert Protocol）的职责是向对方发出警报信息，有点像是HTTP协议里的状态码。比如，protocol_version就是不支持旧版本，bad_certificate就是证书有问题，收到警报后另一方可以选择继续，也可以立即终止连接。</p><p><strong>握手协议</strong>（Handshake Protocol）是TLS里最复杂的子协议，要比TCP的SYN/ACK复杂的多，浏览器和服务器会在握手过程中协商TLS版本号、随机数、密码套件等信息，然后交换证书和密钥参数，最终双方协商得到会话密钥，用于后续的混合加密系统。</p><p>最后一个是<strong>变更密码规范协议</strong>（Change Cipher Spec Protocol），它非常简单，就是一个“通知”，告诉对方，后续的数据都将使用加密保护。那么反过来，在它之前，数据都是明文的。</p><p>下面的这张图简要地描述了TLS的握手过程，其中每一个“框”都是一个记录，多个记录组合成一个TCP包发送。所以，最多经过两次消息往返（4个消息）就可以完成握手，然后就可以在安全的通信环境里发送HTTP报文，实现HTTPS协议。</p><p><img src=\"https://static001.geekbang.org/resource/image/69/6c/69493b53f1b1d540acf886ebf021a26c.png?wh=2093*1865\" alt=\"\"></p><h2>抓包的准备工作</h2><p>这次我们在实验环境里测试TLS握手的URI是“/26-1”，看了上面的图你就可以知道，TLS握手的前几个消息都是明文的，能够在Wireshark里直接看。但只要出现了“Change Cipher Spec”，后面的数据就都是密文了，看到的也就会是乱码，不知道究竟是什么东西。</p><p>为了更好地分析TLS握手过程，你可以再对系统和Wireshark做一下设置，让浏览器导出握手过程中的秘密信息，这样Wireshark就可以把密文解密，还原出明文。</p><p>首先，你需要在Windows的设置里新增一个系统变量“<strong>SSLKEYLOGFILE</strong>”，设置浏览器日志文件的路径，比如“D:\\http_study\\www\\temp\\sslkey.log”（具体的设置过程就不详细说了，可以在设置里搜索“系统变量”）。</p><p><img src=\"https://static001.geekbang.org/resource/image/70/42/70b36338611d5a249a7d2fc448f06d42.png?wh=1617*923\" alt=\"\"></p><p>然后在Wireshark里设置“Protocols-TLS”（较早版本的Wireshark里是“SSL”），在“(Pre)-Master-Secret log filename”里填上刚才的日志文件。</p><p><img src=\"https://static001.geekbang.org/resource/image/02/e7/0274e31e74e92b61892ec11cc3cd58e7.png?wh=813*589\" alt=\"\"></p><p>设置好之后，过滤器选择“<strong>tcp port 443</strong>”，就可以抓到实验环境里的所有HTTPS数据了。</p><p>如果你觉得麻烦也没关系，GitHub上有抓好的包和相应的日志，用Wireshark直接打开就行。</p><h2>ECDHE握手过程</h2><p>刚才你看到的是握手过程的简要图，我又画了一个详细图，对应Wireshark的抓包，下面我就用这个图来仔细剖析TLS的握手过程。</p><p><img src=\"https://static001.geekbang.org/resource/image/9c/1e/9caba6d4b527052bbe7168ed4013011e.png?wh=870*1979\" alt=\"\"></p><p>在TCP建立连接之后，浏览器会首先发一个“<strong>Client Hello</strong>”消息，也就是跟服务器“打招呼”。里面有客户端的版本号、支持的密码套件，还有一个<strong>随机数（Client Random）</strong>，用于后续生成会话密钥。</p><pre><code>Handshake Protocol: Client Hello\n    Version: TLS 1.2 (0x0303)\n    Random: 1cbf803321fd2623408dfe…\n    Cipher Suites (17 suites)\n        Cipher Suite: TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256 (0xc02f)\n        Cipher Suite: TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384 (0xc030)\n</code></pre><p>这个的意思就是：“我这边有这些这些信息，你看看哪些是能用的，关键的随机数可得留着。”</p><p>作为“礼尚往来”，服务器收到“Client Hello”后，会返回一个“Server Hello”消息。把版本号对一下，也给出一个<strong>随机数（Server Random）</strong>，然后从客户端的列表里选一个作为本次通信使用的密码套件，在这里它选择了“TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384”。</p><pre><code>Handshake Protocol: Server Hello\n    Version: TLS 1.2 (0x0303)\n    Random: 0e6320f21bae50842e96…\n    Cipher Suite: TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384 (0xc030)\n</code></pre><p>这个的意思就是：“版本号对上了，可以加密，你的密码套件挺多，我选一个最合适的吧，用椭圆曲线加RSA、AES、SHA384。我也给你一个随机数，你也得留着。”</p><p>然后，服务器为了证明自己的身份，就把证书也发给了客户端（Server Certificate）。</p><p>接下来是一个关键的操作，因为服务器选择了ECDHE算法，所以它会在证书后发送“<strong>Server Key Exchange</strong>”消息，里面是<strong>椭圆曲线的公钥（Server Params）</strong>，用来实现密钥交换算法，再加上自己的私钥签名认证。</p><pre><code>Handshake Protocol: Server Key Exchange\n    EC Diffie-Hellman Server Params\n        Curve Type: named_curve (0x03)\n        Named Curve: x25519 (0x001d)\n        Pubkey: 3b39deaf00217894e...\n        Signature Algorithm: rsa_pkcs1_sha512 (0x0601)\n        Signature: 37141adac38ea4...\n</code></pre><p>这相当于说：“刚才我选的密码套件有点复杂，所以再给你个算法的参数，和刚才的随机数一样有用，别丢了。为了防止别人冒充，我又盖了个章。”</p><p>之后是“<strong>Server Hello Done</strong>”消息，服务器说：“我的信息就是这些，打招呼完毕。”</p><p>这样第一个消息往返就结束了（两个TCP包），结果是客户端和服务器通过明文共享了三个信息：<strong>Client Random、Server Random和Server Params</strong>。</p><p>客户端这时也拿到了服务器的证书，那这个证书是不是真实有效的呢？</p><p>这就要用到第25讲里的知识了，开始走证书链逐级验证，确认证书的真实性，再用证书公钥验证签名，就确认了服务器的身份：“刚才跟我打招呼的不是骗子，可以接着往下走。”</p><p>然后，客户端按照密码套件的要求，也生成一个<strong>椭圆曲线的公钥（Client Params）</strong>，用“<strong>Client Key Exchange</strong>”消息发给服务器。</p><pre><code>Handshake Protocol: Client Key Exchange\n    EC Diffie-Hellman Client Params\n        Pubkey: 8c674d0e08dc27b5eaa…\n</code></pre><p>现在客户端和服务器手里都拿到了密钥交换算法的两个参数（Client Params、Server Params），就用ECDHE算法一阵算，算出了一个新的东西，叫“<strong>Pre-Master</strong>”，其实也是一个随机数。</p><p>至于具体的计算原理和过程，因为太复杂就不细说了，但算法可以保证即使黑客截获了之前的参数，也是绝对算不出这个随机数的。</p><p>现在客户端和服务器手里有了三个随机数：<strong>Client Random、Server Random和Pre-Master</strong>。用这三个作为原始材料，就可以生成用于加密会话的主密钥，叫“<strong>Master Secret</strong>”。而黑客因为拿不到“Pre-Master”，所以也就得不到主密钥。</p><p>为什么非得这么麻烦，非要三个随机数呢？</p><p>这就必须说TLS的设计者考虑得非常周到了，他们不信任客户端或服务器伪随机数的可靠性，为了保证真正的“完全随机”“不可预测”，把三个不可靠的随机数混合起来，那么“随机”的程度就非常高了，足够让黑客难以猜测。</p><p>你一定很想知道“Master Secret”究竟是怎么算出来的吧，贴一下RFC里的公式：</p><pre><code>master_secret = PRF(pre_master_secret, &quot;master secret&quot;,\n                    ClientHello.random + ServerHello.random)\n</code></pre><p>这里的“PRF”就是伪随机数函数，它基于密码套件里的最后一个参数，比如这次的SHA384，通过摘要算法来再一次强化“Master Secret”的随机性。</p><p>主密钥有48字节，但它也不是最终用于通信的会话密钥，还会再用PRF扩展出更多的密钥，比如客户端发送用的会话密钥（client_write_key）、服务器发送用的会话密钥（server_write_key）等等，避免只用一个密钥带来的安全隐患。</p><p>有了主密钥和派生的会话密钥，握手就快结束了。客户端发一个“<strong>Change Cipher Spec</strong>”，然后再发一个“<strong>Finished</strong>”消息，把之前所有发送的数据做个摘要，再加密一下，让服务器做个验证。</p><p>意思就是告诉服务器：“后面都改用对称算法加密通信了啊，用的就是打招呼时说的AES，加密对不对还得你测一下。”</p><p>服务器也是同样的操作，发“<strong>Change Cipher Spec</strong>”和“<strong>Finished</strong>”消息，双方都验证加密解密OK，握手正式结束，后面就收发被加密的HTTP请求和响应了。</p><h2>RSA握手过程</h2><p>整个握手过程可真是够复杂的，但你可能会问了，好像这个过程和其他地方看到的不一样呢？</p><p>刚才说的其实是如今主流的TLS握手过程，这与传统的握手有两点不同。</p><p>第一个，使用ECDHE实现密钥交换，而不是RSA，所以会在服务器端发出“Server Key Exchange”消息。</p><p>第二个，因为使用了ECDHE，客户端可以不用等到服务器发回“Finished”确认握手完毕，立即就发出HTTP报文，省去了一个消息往返的时间浪费。这个叫“<strong>TLS False Start</strong>”，意思就是“抢跑”，和“TCP Fast Open”有点像，都是不等连接完全建立就提前发应用数据，提高传输的效率。</p><p>实验环境在440端口（<a href=\"https://www.chrono.com:440/26-1\">https://www.chrono.com:440/26-1</a>）实现了传统的RSA密钥交换，没有“False Start”，你可以课后自己抓包看一下，这里我也画了个图。</p><p><img src=\"https://static001.geekbang.org/resource/image/cb/d2/cb9a89055eadb452b7835ba8db7c3ad2.png?wh=1000*1651\" alt=\"\"></p><p>大体的流程没有变，只是“Pre-Master”不再需要用算法生成，而是客户端直接生成随机数，然后用服务器的公钥加密，通过“<strong>Client Key Exchange</strong>”消息发给服务器。服务器再用私钥解密，这样双方也实现了共享三个随机数，就可以生成主密钥。</p><h2>双向认证</h2><p>到这里TLS握手就基本讲完了。</p><p>不过上面说的是“<strong>单向认证</strong>”握手过程，只认证了服务器的身份，而没有认证客户端的身份。这是因为通常单向认证通过后已经建立了安全通信，用账号、密码等简单的手段就能够确认用户的真实身份。</p><p>但为了防止账号、密码被盗，有的时候（比如网上银行）还会使用U盾给用户颁发客户端证书，实现“<strong>双向认证</strong>”，这样会更加安全。</p><p>双向认证的流程也没有太多变化，只是在“<strong>Server Hello Done</strong>”之后，“<strong>Client Key Exchange</strong>”之前，客户端要发送“<strong>Client Certificate</strong>”消息，服务器收到后也把证书链走一遍，验证客户端的身份。</p><h2>小结</h2><p>今天我们学习了HTTPS/TLS的握手，内容比较多、比较难，不过记住下面四点就可以。</p><ol>\n<li><span class=\"orange\">HTTPS协议会先与服务器执行TCP握手，然后执行TLS握手，才能建立安全连接；</span></li>\n<li><span class=\"orange\">握手的目标是安全地交换对称密钥，需要三个随机数，第三个随机数“Pre-Master”必须加密传输，绝对不能让黑客破解；</span></li>\n<li><span class=\"orange\">“Hello”消息交换随机数，“Key Exchange”消息交换“Pre-Master”；</span></li>\n<li><span class=\"orange\">“Change Cipher Spec”之前传输的都是明文，之后都是对称密钥加密的密文。</span></li>\n</ol><h2>课下作业</h2><ol>\n<li>密码套件里的那些算法分别在握手过程中起了什么作用？</li>\n<li>你能完整地描述一下RSA的握手过程吗？</li>\n<li>你能画出双向认证的流程图吗？</li>\n</ol><p>欢迎你把自己的学习体会写在留言区，与我和其他同学一起讨论。如果你觉得有所收获，也欢迎把文章分享给你的朋友。</p><p><img src=\"https://static001.geekbang.org/resource/image/93/14/93d002084d9bf8283bab3e34e3f4bf14.png?wh=1769*3148\" alt=\"unpreview\"></p><p></p>","neighbors":{"left":{"article_title":"25 | 固若金汤的根本（下）：数字签名与证书","id":109503},"right":{"article_title":"27 | 更好更快的握手：TLS1.3特性解析","id":110718}},"comments":[{"had_liked":false,"id":119720,"user_name":"彩色的沙漠","can_delete":false,"product_type":"c1","uid":1116183,"ip_address":"","ucode":"19A0975A5E69EA","user_header":"https://static001.geekbang.org/account/avatar/00/11/08/17/e63e50f3.jpg","comment_is_top":false,"comment_ctime":1564664028,"is_pvip":true,"replies":[{"id":"43957","content":"非常好的同学，大力表扬！","user_name":"作者回复","user_name_real":"chrono","uid":"1181974","ctime":1564707709,"ip_address":"","comment_id":119720,"utype":1}],"discussion_count":23,"race_medal":0,"score":"332277145820","product_id":100029001,"comment_content":"浏览留言区，留言区同学和我有一样的疑问“Client Params 和 Server Params 都可以被截获，为何中间人没法通过这两个信息计算 Pre-Master Secret 呢？”<br>我去网上找了关于ECDHE握手过程，这个可以帮助大家更好的理解ECDHE，具体过程如下：<br>（1）：客户端随机生成随机值Ra，计算Pa(x, y) = Ra * Q(x, y)，Q(x, y)为全世界公认的某个椭圆曲线算法的基点。将Pa(x, y)发送至服务器。<br><br>（2）：服务器随机生成随机值Rb，计算Pb(x,y) = Rb * Q(x, y)。将Pb(x, y)发送至客户端。<br><br>（3）：客户端计算Sa(x, y) = Ra * Pb(x, y)；服务器计算Sb(x, y) = Rb *Pa(x, y)<br><br>（4）：算法保证了Sa = Sb = S，提取其中的S的x向量作为密钥（预主密钥）。<br>@引用<br>--------------------- <br>作者：Mrpre <br>来源：CSDN <br>原文：https:&#47;&#47;blog.csdn.net&#47;mrpre&#47;article&#47;details&#47;78025940 <br>版权声明：本文为博主原创文章，转载请附上博文链接！","like_count":78,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":461036,"discussion_content":"非常好的同学，大力表扬！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1564707709,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1476882,"avatar":"https://static001.geekbang.org/account/avatar/00/16/89/12/5f01a57a.jpg","nickname":"刘阿六","note":"","ucode":"031A8A34648775","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":554761,"discussion_content":"感觉在这个时间点仍然没有很好的解释，我就在这条评论的基础上补充一下我自己的理解吧。首先client random和server random肯定是要传的。这是因为client random，server random，pre master三者共同生成了master secret。现在大家纠结的地方在于为什么黑客知道了Client Params、Server Params不能算出pre master。借用这位同学的评论，Pa(x, y)就是Client Params里的pubkey，Pb(x,y)就是Server Params里的pubkey，最关键的地方就在于，计算Pa(x, y)所需的Ra并不是client random，而是内存里又产生的一个随机数，而这个随机数和Server Params里的pubkey一起生成master secret，服务端那边同理。所以呢，「客户端和服务器用Client Params、Server Params一通算，算出pre master」这句话本身就是错的，应该是「客户端用自己内存中的随机数Ra（不是发送出去的那个client random）和Server Params里的pubkey算出pre master，而服务器用自己内存中的随机数Rb和Client Params里的pubkey能也计算出pre master」。数学上能证明二者相等，有点类似乘法交换律。所以当会话结束之后，相关内存被释放，pre master被释放，Ra，Rb也被释放，就再也不能重复算出master secret。这也是ECDHE中E的由来，E的意思是ephemeral，短暂的。同时值得注意的是，Server Params里的pubkey和证书里的公钥没什么关系。在ECDHE里，证书里的公钥的功能退化为身份验证，只是用来证明这些请求确实来自服务器。这也是为什么ECDHE比RSA更安全的原因，因为服务器的公钥不参与master secret的过程，哪怕服务器的私钥在未来哪一天被泄漏了，也无法得知master secret。这就满足了「前向安全」。","likes_number":14,"is_delete":false,"is_hidden":false,"ctime":1646581619,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1525903,"avatar":"https://static001.geekbang.org/account/avatar/00/17/48/8f/b728f820.jpg","nickname":"AlohaJack","note":"","ucode":"472912BF7EEDD8","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":550051,"discussion_content":"这里我理解的是交换的并非真正的随机数，而是由随机数Ra和Q（x，y）一起生成的Pa(x,y)，但是不能根据Pa逆向出Ra，所以即使截获了Pa也没卵用。最后计算Pre-matser需要用到Ra和Rb，但是黑客是不知道这俩的。所以双方提取S里面的X向量就可以保证Pre-matser的安全性","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1644371505,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1701572,"avatar":"https://static001.geekbang.org/account/avatar/00/19/f6/c4/e14686d4.jpg","nickname":"shk1230","note":"","ucode":"9E39279C23FF8F","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1525903,"avatar":"https://static001.geekbang.org/account/avatar/00/17/48/8f/b728f820.jpg","nickname":"AlohaJack","note":"","ucode":"472912BF7EEDD8","race_medal":0,"user_type":1,"is_pvip":true},"discussion":{"id":554547,"discussion_content":"对，随机数Ra和Rb是不可能发送的","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1646460842,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":550051,"ip_address":""},"score":554547,"extra":""}]},{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":138292,"discussion_content":"对，这里有一个防窜改的问题，所以密钥交换的参数都要做签名，这样黑客就无法伪造了。","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1579233423,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1363634,"avatar":"https://static001.geekbang.org/account/avatar/00/14/ce/b2/1f914527.jpg","nickname":"海盗船长","note":"","ucode":"ECB28BA21A4113","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":265746,"discussion_content":"请问这里做签名用的私钥是什么？ 对应的公钥又是放在哪里的？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1589433244,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":138292,"ip_address":""},"score":265746,"extra":""},{"author":{"id":1701572,"avatar":"https://static001.geekbang.org/account/avatar/00/19/f6/c4/e14686d4.jpg","nickname":"shk1230","note":"","ucode":"9E39279C23FF8F","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1363634,"avatar":"https://static001.geekbang.org/account/avatar/00/14/ce/b2/1f914527.jpg","nickname":"海盗船长","note":"","ucode":"ECB28BA21A4113","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":554546,"discussion_content":"server key  exchange阶段，用服务器的公钥签名认证，公钥在服务器的证书里。\n关键两个点：\n1、客户端要验证服务器证书，表明此公钥是否能被信任。\n2、完成第一步证书是信任，但是此证书可能被别人拿去盗用了，所以这一步就要证明此证书就是从信任的服务器发送过来的，所用服务器用自己的私钥签名，然后客户端用服务器的公钥验证签名。\n备注：你可能会说万一私钥也被盗了呢，那你就认栽吧。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1646460686,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":265746,"ip_address":""},"score":554546,"extra":""}]},{"author":{"id":2136069,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/rxz5aKicRkvqWmt6c6c7eayHvh577uibBTVQzcJKwSTqI9FaxZSRlx7NRVw4atWpqER8ncA5jErQb3wb4cPzZxlA/132","nickname":"Geek_065895","note":"","ucode":"2E6FCCC78E5767","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":373837,"discussion_content":"按照罗老师的说法, Client Random和Server Random也是会被发送的, 这样子还是会被伪造出pre-master吧","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1620890492,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1197889,"avatar":"https://static001.geekbang.org/account/avatar/00/12/47/41/7b1e3e0a.jpg","nickname":"昵称已改","note":"","ucode":"8FC7624A74B496","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":11865,"discussion_content":"请问下，如果客户端发的client hello报文被中间人劫持，并重组了一个新的报文发给服务端，其中Pa被改成Pa&#39;，那么最后客户端计算的Sa = Ra * Pb，服务端计算的Sb = Rb * Pa&#39;，那么Sa != Sb，这种情况协议上怎么处理啊？","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1568437986,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1319369,"avatar":"https://static001.geekbang.org/account/avatar/00/14/21/c9/2b1e5326.jpg","nickname":"俞俊001","note":"","ucode":"B6D3F5448D4138","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1197889,"avatar":"https://static001.geekbang.org/account/avatar/00/12/47/41/7b1e3e0a.jpg","nickname":"昵称已改","note":"","ucode":"8FC7624A74B496","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":279377,"discussion_content":"这样后面就不会进行了，说明握手失败。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1591335156,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":11865,"ip_address":""},"score":279377,"extra":""}]},{"author":{"id":2631264,"avatar":"https://static001.geekbang.org/account/avatar/00/28/26/60/8a822f48.jpg","nickname":"Kevin","note":"","ucode":"BC5F0A115EFA7B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":587949,"discussion_content":"讲的漂亮，这个交换过程是基于算法最终保证Sa = Sb结果得来的，在交换过程中一直都是交换的是客户端/服务端根据自身生成的随机数来计算出来的一个P_向量。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1663400752,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"广东"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2028811,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/f5/0b/73628618.jpg","nickname":"兔嘟嘟","note":"","ucode":"5A9042B4C7670C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":386214,"discussion_content":"这里讲的有问题，有两种随机值，这里的随机值指的是密钥","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1627473134,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1717835,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/36/4b/9bf00ad4.jpg","nickname":"南京伪学霸","note":"","ucode":"A50997D56A77F3","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2028811,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/f5/0b/73628618.jpg","nickname":"兔嘟嘟","note":"","ucode":"5A9042B4C7670C","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":394006,"discussion_content":"随机值不是秘钥 那个server_param和client_param才是椭圆曲线的秘钥 并且是公钥","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1631688702,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":386214,"ip_address":""},"score":394006,"extra":""},{"author":{"id":2028811,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/f5/0b/73628618.jpg","nickname":"兔嘟嘟","note":"","ucode":"5A9042B4C7670C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1717835,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/36/4b/9bf00ad4.jpg","nickname":"南京伪学霸","note":"","ucode":"A50997D56A77F3","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":397953,"discussion_content":"如果你不止是看楼主引用的那篇的博客，你会发现那个用于交换的随机数是一个私钥\nhttps://zhuanlan.zhihu.com/p/66794410\n两个月前学的，有些忘了，如果有误请指教","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1632707180,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":394006,"ip_address":""},"score":397953,"extra":""}]},{"author":{"id":1013841,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/78/51/4790e13e.jpg","nickname":"Smallfly","note":"","ucode":"D388D5E0249A69","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":204865,"discussion_content":"我感觉 Client Params 和 Server Params 是没办法保证不被截获的，中间人夹击就是通过这种方式实现的。唯一保证安全的是客户端对服务端证书的信任。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584234874,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":8,"child_discussions":[{"author":{"id":1319369,"avatar":"https://static001.geekbang.org/account/avatar/00/14/21/c9/2b1e5326.jpg","nickname":"俞俊001","note":"","ucode":"B6D3F5448D4138","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1013841,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/78/51/4790e13e.jpg","nickname":"Smallfly","note":"","ucode":"D388D5E0249A69","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":279376,"discussion_content":"这里 pre-master 是没有办法被获取的，因为 pre-master 不会通过网络传输，而是直接由 client params 和 server params 生成。\n\n并且 client params 和 server params 也会有个签名过程。防止篡改。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1591335124,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":204865,"ip_address":""},"score":279376,"extra":""},{"author":{"id":1812912,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/a9/b0/0c701ef3.jpg","nickname":"吃鱼","note":"","ucode":"848835584F6099","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1319369,"avatar":"https://static001.geekbang.org/account/avatar/00/14/21/c9/2b1e5326.jpg","nickname":"俞俊001","note":"","ucode":"B6D3F5448D4138","race_medal":0,"user_type":1,"is_pvip":true},"discussion":{"id":335634,"discussion_content":"还是没解释清楚啊 黑客可以获取client params 和 server params那么为什么黑客不能生成pre-master呢","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1608258140,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":279376,"ip_address":""},"score":335634,"extra":""},{"author":{"id":1717835,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/36/4b/9bf00ad4.jpg","nickname":"南京伪学霸","note":"","ucode":"A50997D56A77F3","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1812912,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/a9/b0/0c701ef3.jpg","nickname":"吃鱼","note":"","ucode":"848835584F6099","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":394008,"discussion_content":"不是说了 server_param是被私钥签名了 而且server的公钥是通过证书传给client的 可以保证安全","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1631688813,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":335634,"ip_address":""},"score":394008,"extra":""}]}]},{"had_liked":false,"id":173096,"user_name":"J.Smile","can_delete":false,"product_type":"c1","uid":1336475,"ip_address":"","ucode":"C4D98DFDBF7584","user_header":"https://static001.geekbang.org/account/avatar/00/14/64/9b/0b578b08.jpg","comment_is_top":false,"comment_ctime":1579423602,"is_pvip":false,"replies":[{"id":"67165","content":"总结的非常好。","user_name":"作者回复","user_name_real":"chrono","uid":"1181974","ctime":1579483063,"ip_address":"","comment_id":173096,"utype":1}],"discussion_count":6,"race_medal":0,"score":"212032821106","product_id":100029001,"comment_content":"之前面试阿里第二轮的时候，面试官就问我关于ssl握手的问题，其实我觉得像这种问题回答不出来也很正常，毕竟这么复杂的流程谁能记得住呢？使用现成的nginx+ssl的配置已经可以解决大多数问题了。<br>-------------------------------------------------<br>总结下TLS的握手过程：<br>第一阶段：C&#47;S两端共享Client Random、Server Random 和 Server Params信息<br>客户端---&gt;服务器：<br>\t客户端的版本号、支持的密码套件，还有一个随机数（Client Random）<br><br>服务端---&gt;客户端：<br>\t客户端的版本号、选择的客户端列表的密码套件如：TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384、随机数随机数（Server Random）<br><br>服务端---&gt;客户端：<br>\t服务端证书（Server Certificate）<br><br><br>服务端---&gt;客户端：<br>\t发送Server Key Exchange类型的请求，携带椭圆曲线的公钥（Server Params）用以实现密钥交换算法，另附私钥签名<br><br><br>服务端---&gt;客户端：<br>\t发送完毕<br><br><br>第二阶段：证书验证<br><br>前验条件：客户端证书链逐级验证、证书公钥验证签名，服务端身份验证成功（证书合法）<br><br>客户端---&gt;服务端<br>\t发送Client Key Exchange类型的请求，携带椭圆曲线的公钥（Client Params）用以实现秘钥交换算法<br><br><br>第三阶段：主密钥生成<br><br>客户端、服务端分别使用Client Params、Server Params通过ECDHE算法计算出随机值pre-master，然后用<br>Client Random、Server Random 和 Pre-Master三个值作为原材料，用PRF伪随机数函数（利用密码套件的摘要算法再次强化结果<br>值maser secert的随机性）计算出主密钥Master Secret，<br><br>主密钥并不是会话秘钥，还会再用PRF扩展出更多的密钥，比如客户端发送用的会话密钥（client_write_key）、服务器发送用的会话密钥（server_write_key）<br><br><br>客户端---&gt;服务端:<br>\t客户端发一个“Change Cipher Spec”，然后再发一个“Finished”消息，把之前所有发送的数据做个摘要，再加密一下，让服务器做个验证.<br><br>服务端---&gt;客户端：<br>\t服务器也是同样的操作，发“Change Cipher Spec”和“Finished”消息，双方都验证加密解密 OK，握手正式结束.<br><br><br><br><br><br><br><br><br><br><br><br><br>","like_count":49,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":481957,"discussion_content":"总结的非常好。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579483063,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1156592,"avatar":"https://static001.geekbang.org/account/avatar/00/11/a5/f0/8648c464.jpg","nickname":"Joker","note":"","ucode":"126AF848001A1E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":232296,"discussion_content":"感觉这个过程要懂得密码学才能真正理解，不然只靠着死记硬背，很难真正掌握啊。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1586865816,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1336475,"avatar":"https://static001.geekbang.org/account/avatar/00/14/64/9b/0b578b08.jpg","nickname":"J.Smile","note":"","ucode":"C4D98DFDBF7584","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1156592,"avatar":"https://static001.geekbang.org/account/avatar/00/11/a5/f0/8648c464.jpg","nickname":"Joker","note":"","ucode":"126AF848001A1E","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":232305,"discussion_content":"看懂，需要刻意记忆下","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1586866277,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":232296,"ip_address":""},"score":232305,"extra":""}]},{"author":{"id":1500391,"avatar":"https://static001.geekbang.org/account/avatar/00/16/e4/e7/31944ee7.jpg","nickname":"千军万马万马@","note":"","ucode":"0BDAD22123435A","race_medal":1,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":582149,"discussion_content":"证书公钥验证签名，这个怎么个步骤啊？？？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1659265637,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"河北"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2136069,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/rxz5aKicRkvqWmt6c6c7eayHvh577uibBTVQzcJKwSTqI9FaxZSRlx7NRVw4atWpqER8ncA5jErQb3wb4cPzZxlA/132","nickname":"Geek_065895","note":"","ucode":"2E6FCCC78E5767","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":373832,"discussion_content":"根据点赞第一的同学的说法, Random是不能泄漏的, 为什么这里又说发送Random呢?","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1620889668,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2311463,"avatar":"https://static001.geekbang.org/account/avatar/00/23/45/27/4fbf8f6a.jpg","nickname":"luke Y","note":"","ucode":"111F98D367235B","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":358329,"discussion_content":"mark","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1615965872,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":129525,"user_name":"全麦小面包","can_delete":false,"product_type":"c1","uid":1086413,"ip_address":"","ucode":"823C65BF366097","user_header":"https://static001.geekbang.org/account/avatar/00/10/93/cd/dbafc7d1.jpg","comment_is_top":false,"comment_ctime":1567149498,"is_pvip":false,"replies":[{"id":"48383","content":"这是因为申请证书的时候一般都是绑定在域名上，证书证明的是域名而不是ip，所以无法验证网址的合法性。<br><br>如果申请证书时就绑定ip，那么就没问题了，但几乎没有人会这么做，因为ip地址会变，而域名通常是稳定的。","user_name":"作者回复","user_name_real":"chrono","uid":"1181974","ctime":1567242832,"ip_address":"","comment_id":129525,"utype":1}],"discussion_count":1,"race_medal":0,"score":"74581593530","product_id":100029001,"comment_content":"老师，我通过nslookup获得百度的一个ip为180.101.49.11，然后用https:&#47;&#47;180.101.49.11访问，浏览器会提示建立的连接不安全。在chrome浏览器的security页面中，连接走的还是TLS , 但该网页缺失认证。我的理解是，证书在访问网页的时候就返回了，但证书只能证明某个公钥是属于某个域名的，不能证明公钥是否归属某个IP，是不是这样呢？","like_count":17,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":465521,"discussion_content":"这是因为申请证书的时候一般都是绑定在域名上，证书证明的是域名而不是ip，所以无法验证网址的合法性。\n\n如果申请证书时就绑定ip，那么就没问题了，但几乎没有人会这么做，因为ip地址会变，而域名通常是稳定的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567242832,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":121619,"user_name":"亚洲舞王.尼古拉斯赵四","can_delete":false,"product_type":"c1","uid":1443078,"ip_address":"","ucode":"7159F5D7232696","user_header":"https://static001.geekbang.org/account/avatar/00/16/05/06/f5979d65.jpg","comment_is_top":false,"comment_ctime":1565168442,"is_pvip":false,"replies":[{"id":"44678","content":"good。","user_name":"作者回复","user_name_real":"chrono","uid":"1181974","ctime":1565175345,"ip_address":"","comment_id":121619,"utype":1}],"discussion_count":1,"race_medal":0,"score":"65989677882","product_id":100029001,"comment_content":"第二个问题：客户端使用tcp链接明文将自己的随机数、密码套件、tls版本号发送给服务端，服务端根据自己支持的密码套件从客户端的密码套件中选取一个最合适的密码套件，协商出tls版本，将协商好的密码套件、tls版本以及自己的随机数明文告诉客户端，并将自己的证书发送给客户端，并结束<br>客户端收到证书之后去ca一级一级验证证书的有效性，验证通过后，客户端使用随机数生成pre-master并 用服务器的公钥进行加密传给服务端，服务端使用自己的私钥进行解密，使用解密后的值与客户端随机数，自己的随机数进行计算，得出master secret；这时候，客户端使用三个值也能计算出master secret，客户端告诉服务器我之后都使用加密进行通信了，结束；服务端也告诉客户端，我也要开始使用加密通信了，over<br>接下来两个人使用计算出来的master secret进行消息加密，两人balabala，并使用master secret进行解密","like_count":15,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":461880,"discussion_content":"good。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1565175345,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":117762,"user_name":"magicnum","can_delete":false,"product_type":"c1","uid":1004869,"ip_address":"","ucode":"96B3696961F654","user_header":"https://static001.geekbang.org/account/avatar/00/0f/55/45/e4314bc6.jpg","comment_is_top":false,"comment_ctime":1564125750,"is_pvip":false,"replies":[{"id":"43129","content":"说的很好。","user_name":"作者回复","user_name_real":"chrono","uid":"1181974","ctime":1564127822,"ip_address":"","comment_id":117762,"utype":1}],"discussion_count":3,"race_medal":0,"score":"61693667894","product_id":100029001,"comment_content":"比如TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256：使用ECDHE进行密钥交换（文中已经讲了，用它算出Pre_Master，成会话密钥Master Secret。密钥交换过程中应该会使用到非对称加密中的公钥加密），RSA进行身份验证（私钥加密公钥解密），使用128位GCM分组工作模式的AES进行消息和会话密钥的对称加密（加密真正的消息），使用SHA256摘要算法（如HMAC、PRM）对数据签名，保证数据完整性","like_count":14,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":460106,"discussion_content":"说的很好。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1564127822,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1072350,"avatar":"https://static001.geekbang.org/account/avatar/00/10/5c/de/16695891.jpg","nickname":"小太阳","note":"","ucode":"84FF032FE78B11","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":57372,"discussion_content":"有一点点没有说得很对。\n“使用SHA256摘要算法（如HMAC、PRM）对数据签名”\n—— 使用SHA256计算摘要，再用私钥对摘要签名（之所以要对摘要签名而非对完整的数据签名，是因为非对称加密算法效率不高，摘要数据量小又能代表完整数据，对摘要签名即可以达到对完整数据签名的效果，很好的设计，取长补短）。","likes_number":5,"is_delete":false,"is_hidden":false,"ctime":1574602114,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1295596,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/PiajxSqBRaEIBJYQ73yYqmiaU7Zg0BHPh9gpSglI79Dzcbob7I2tZOhTjbTTCw13KzVusYhLbKkukV9Ru5UfJMxQ/132","nickname":"Geek_2d276a","note":"","ucode":"866B39EBE71356","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":299937,"discussion_content":"TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384这里的RSA具体有什么作用，文中没有说明，用了ECDHE为什么还要用RSA？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1597884987,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":128495,"user_name":"看，有只猪","can_delete":false,"product_type":"c1","uid":1137727,"ip_address":"","ucode":"F9BB302BC71CE8","user_header":"https://static001.geekbang.org/account/avatar/00/11/5c/3f/34e5c750.jpg","comment_is_top":false,"comment_ctime":1566889559,"is_pvip":true,"replies":[{"id":"47745","content":"理解的非常正确。","user_name":"作者回复","user_name_real":"chrono","uid":"1181974","ctime":1566951298,"ip_address":"","comment_id":128495,"utype":1}],"discussion_count":3,"race_medal":0,"score":"48811529815","product_id":100029001,"comment_content":"老师，你看看我这样理解对吗？<br><br>ECDHE中，没有采用服务器公钥来加密数据，而是采用交换两端的椭圆曲线公钥来保证pre_master的安全性<br>RSA中pre_master由客户端生成，采用服务器公钥加密pre_master来保证pre_master的安全性","like_count":12,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":464972,"discussion_content":"理解的非常正确。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566951298,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1318468,"avatar":"","nickname":"极客—月","note":"","ucode":"EE12EEBF242B1D","race_medal":1,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":389497,"discussion_content":"RSA中没有server key exchange，那客户端是怎么拿到服务端公钥的呢？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1629294770,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":1318468,"avatar":"","nickname":"极客—月","note":"","ucode":"EE12EEBF242B1D","race_medal":1,"user_type":1,"is_pvip":true},"discussion":{"id":390171,"discussion_content":"在服务器发回的证书里","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1629701379,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":389497,"ip_address":""},"score":390171,"extra":""}]}]},{"had_liked":false,"id":216055,"user_name":"追风筝的人","can_delete":false,"product_type":"c1","uid":1488020,"ip_address":"","ucode":"2993D60F94C396","user_header":"https://static001.geekbang.org/account/avatar/00/16/b4/94/2796de72.jpg","comment_is_top":false,"comment_ctime":1589175999,"is_pvip":false,"replies":[{"id":"79965","content":"这里确实有点绕，要静下心来慢慢理解。<br><br>1.私钥只能被一个人秘密持有，别人是不会有的。<br>2.任何人都可以用公钥解密私钥加密的数据，那么就证明数据是被对应的私钥加密的。<br>3.从1&#47;2可以推出，数据必然是私钥持有者发出的，否则公钥必然会解密失败。<br>4.从3推出，发送者就是私钥持有者，也就确认了发送者的身份。","user_name":"作者回复","user_name_real":"chrono","uid":"1181974","ctime":1589182742,"ip_address":"","comment_id":216055,"utype":1}],"discussion_count":1,"race_medal":0,"score":"44538848959","product_id":100029001,"comment_content":"在非对称加密算法中，公钥是公开信息，不需要保密,那用私钥加密，公钥解密的话（验证签名过程），其他知道公钥的人也可以解密，怎么确认发送者的身份？","like_count":10,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":494654,"discussion_content":"这里确实有点绕，要静下心来慢慢理解。\n\n1.私钥只能被一个人秘密持有，别人是不会有的。\n2.任何人都可以用公钥解密私钥加密的数据，那么就证明数据是被对应的私钥加密的。\n3.从1/2可以推出，数据必然是私钥持有者发出的，否则公钥必然会解密失败。\n4.从3推出，发送者就是私钥持有者，也就确认了发送者的身份。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1589182742,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":163202,"user_name":"lesserror","can_delete":false,"product_type":"c1","uid":1351076,"ip_address":"","ucode":"25A54D1165FCF6","user_header":"https://static001.geekbang.org/account/avatar/00/14/9d/a4/e481ae48.jpg","comment_is_top":false,"comment_ctime":1576669356,"is_pvip":false,"replies":[{"id":"62101","content":"<br>1.对于tls通信的双方来说，tls只是加密了通信链路，在通信的两个端点必然是要解密的，也就是明文，不然就无法操作了。<br>设置系统和wireshark就是告诉浏览器，把密钥导出来，然后wireshark用这个密钥来解密，但传输的数据仍然是加密的，如果没有这个密钥wireshark也是看不出明文的。<br>密文解密的前提是有密钥，如果没有密钥通信就是安全的。<br><br>2.看后面一讲，介绍了tls1.3，这里就不重复了。<br><br>3.是的。椭圆曲线的密钥用于ecdhe交换会话密钥，证书的私钥用来身份验证，对消息签名。<br>但椭圆曲线的密钥是临时生成的，每次握手都不固定，见答疑篇。","user_name":"作者回复","user_name_real":"chrono","uid":"1181974","ctime":1576717203,"ip_address":"","comment_id":163202,"utype":1}],"discussion_count":1,"race_medal":0,"score":"35936407724","product_id":100029001,"comment_content":"老师，以下问题，麻烦回答一下：<br>1.为了更好地分析 TLS 握手过程，你可以再对系统和 Wireshark 做一下设置，让浏览器导出握手过程中的秘密信息，这样 Wireshark 就可以把密文解密，还原出明文。这不是明文传输的嘛？ Wireshark 就可以把密文解密这句话是不是有问题啊？<br>2.浏览器直接发送的TLS1.2的版本，那么为什么只发这个，不发TLS1.3的呢？<br>3.这里服务器是不是有两套公私钥，一个是证书的公私钥，一个是椭圆曲线的公私钥匙。服务器在证书后发送“Server Key Exchange”消息之后的签名用的是证书的私钥加密的？","like_count":8,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":478295,"discussion_content":"\n1.对于tls通信的双方来说，tls只是加密了通信链路，在通信的两个端点必然是要解密的，也就是明文，不然就无法操作了。\n设置系统和wireshark就是告诉浏览器，把密钥导出来，然后wireshark用这个密钥来解密，但传输的数据仍然是加密的，如果没有这个密钥wireshark也是看不出明文的。\n密文解密的前提是有密钥，如果没有密钥通信就是安全的。\n\n2.看后面一讲，介绍了tls1.3，这里就不重复了。\n\n3.是的。椭圆曲线的密钥用于ecdhe交换会话密钥，证书的私钥用来身份验证，对消息签名。\n但椭圆曲线的密钥是临时生成的，每次握手都不固定，见答疑篇。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1576717203,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":160588,"user_name":"Ben","can_delete":false,"product_type":"c1","uid":1039112,"ip_address":"","ucode":"8F5C7B354EAE33","user_header":"https://static001.geekbang.org/account/avatar/00/0f/db/08/9ef64ff4.jpg","comment_is_top":false,"comment_ctime":1575980468,"is_pvip":false,"replies":[{"id":"61318","content":"<br>1.服务器会发出一个Certificate Request消息，要求客户端提供证书，这样在ServerHelloDone消息后，客户端就会发送Client Certificate提供客户端证书。如果没有Certificate Request客户端就不必提供证书。<br><br>2.tls握手分双向认证和单向认证两种，我们通常都用的是单向认证，即客户端认证服务器，服务器不认证客户端。<br>因为毕竟私钥签名比较费时间，而且给成千上万的客户端都颁发证书不太现实。单向认证通过后，可以再用用户名+口令的方式来验证客户端的身份。<br><br>3.少数场合，比如网银，为了加强安全，就会使用双向认证，确保通信双方的身份不被伪造。","user_name":"作者回复","user_name_real":"chrono","uid":"1181974","ctime":1576026302,"ip_address":"","comment_id":160588,"utype":1}],"discussion_count":1,"race_medal":0,"score":"31640751540","product_id":100029001,"comment_content":"有个疑问没有想清楚：client在发送“client key exchange”消息之前需要把client的证书发送给server吗？<br><br>我在想server发送给client的“server key exchange”消息需要签名认证，那么client发送给server的“client key exchange”难道不需要签名认证吗？<br><br>如果需要签名认证的话，那么是不是就需要先把client的证书发送给server做验证。","like_count":7,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":477423,"discussion_content":"\n1.服务器会发出一个Certificate Request消息，要求客户端提供证书，这样在ServerHelloDone消息后，客户端就会发送Client Certificate提供客户端证书。如果没有Certificate Request客户端就不必提供证书。\n\n2.tls握手分双向认证和单向认证两种，我们通常都用的是单向认证，即客户端认证服务器，服务器不认证客户端。\n因为毕竟私钥签名比较费时间，而且给成千上万的客户端都颁发证书不太现实。单向认证通过后，可以再用用户名+口令的方式来验证客户端的身份。\n\n3.少数场合，比如网银，为了加强安全，就会使用双向认证，确保通信双方的身份不被伪造。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1576026302,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":125012,"user_name":"刘政伟","can_delete":false,"product_type":"c1","uid":1307364,"ip_address":"","ucode":"2D2BFDE4F5ACC8","user_header":"https://static001.geekbang.org/account/avatar/00/13/f2/e4/825ab8d9.jpg","comment_is_top":false,"comment_ctime":1566044246,"is_pvip":false,"replies":[{"id":"46189","content":"服务器客户端不会直接发送public key，如果你指的是密钥交换的过程，它实际上是ECDHE算法锁要求的参数，交换这些参数就可以在两边分别算出pre-master，而外部的黑客是无法计算得到的。<br><br>发送证书是为了配合私钥签名验证客户端或服务器是身份，只要签名对，就说明对方是证书所标记的实体。","user_name":"作者回复","user_name_real":"chrono","uid":"1181974","ctime":1566261835,"ip_address":"","comment_id":125012,"utype":1}],"discussion_count":1,"race_medal":0,"score":"31630815318","product_id":100029001,"comment_content":"老师，还是没有明白服务端&#47;客户端发送public key的用途是什么，麻烦老师再重点说一下，感谢！","like_count":7,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":463400,"discussion_content":"服务器客户端不会直接发送public key，如果你指的是密钥交换的过程，它实际上是ECDHE算法锁要求的参数，交换这些参数就可以在两边分别算出pre-master，而外部的黑客是无法计算得到的。\n\n发送证书是为了配合私钥签名验证客户端或服务器是身份，只要签名对，就说明对方是证书所标记的实体。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566261835,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":255488,"user_name":"乐潇游","can_delete":false,"product_type":"c1","uid":2014245,"ip_address":"","ucode":"5AA1AD36AD66FC","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/seiaKVnrGiagPeB8ARIHZ7ogxX05TSFuiapCJBG2EqrTKme9d9JeWNaOlbBmMZXxo5EQib8paJKiatb4j1YTMdtVk1g/132","comment_is_top":false,"comment_ctime":1603356293,"is_pvip":false,"replies":[{"id":"93060","content":"因为客户端和服务器都共享了master secret，所以两边可以一致地生成多个密钥，比如key1、key2、key3，两边完全一样，本质上都是master secret。<br><br>这样比如客户端发数据用key1加密，服务器就用key1解密；服务器发数据不用key1，而是用key2加密，客户端收到数据用key2解密。<br><br>用多个不同的密钥就是为了安全，对抗密码分析。","user_name":"作者回复","user_name_real":"罗剑锋","uid":"1181974","ctime":1603357356,"ip_address":"","comment_id":255488,"utype":1}],"discussion_count":4,"race_medal":0,"score":"27373160069","product_id":100029001,"comment_content":"“主密钥有 48 字节，但它也不是最终用于通信的会话密钥，还会再用 PRF 扩展出更多的密钥，比如客户端发送用的会话密钥（client_write_key）、服务器发送用的会话密钥（server_write_key）等等，避免只用一个密钥带来的安全隐患。”这个没太理解，这个不一样的会话密钥，在对称加密算法中怎么解密呢？","like_count":7,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":507731,"discussion_content":"因为客户端和服务器都共享了master secret，所以两边可以一致地生成多个密钥，比如key1、key2、key3，两边完全一样，本质上都是master secret。\n\n这样比如客户端发数据用key1加密，服务器就用key1解密；服务器发数据不用key1，而是用key2加密，客户端收到数据用key2解密。\n\n用多个不同的密钥就是为了安全，对抗密码分析。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1603357356,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":1,"child_discussions":[{"author":{"id":1273044,"avatar":"https://static001.geekbang.org/account/avatar/00/13/6c/d4/85ef1463.jpg","nickname":"路漫漫","note":"","ucode":"F70F1DC612DE9D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":532337,"discussion_content":"正好想问这个问题","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1637580708,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":507731,"ip_address":""},"score":532337,"extra":"{\"user_type\":1}"}]},{"author":{"id":2368078,"avatar":"https://static001.geekbang.org/account/avatar/00/24/22/4e/2e081d9c.jpg","nickname":"hao","note":"","ucode":"371A47DD4510E7","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":377416,"discussion_content":"我觉得可以理解为在这个阶段，两边都拥有相同的master secret，把它作为私钥，而生成的key1，key2，...，keyn相当于公钥\n  如：客户端用key1公钥加密，然后服务端用master secret解密\n\n不知道这样理解对不对","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1622635185,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2311463,"avatar":"https://static001.geekbang.org/account/avatar/00/23/45/27/4fbf8f6a.jpg","nickname":"luke Y","note":"","ucode":"111F98D367235B","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":358334,"discussion_content":"mark","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1615966919,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":202316,"user_name":"钱","can_delete":false,"product_type":"c1","uid":1009652,"ip_address":"","ucode":"2C92A243A463D4","user_header":"https://static001.geekbang.org/account/avatar/00/0f/67/f4/9a1feb59.jpg","comment_is_top":false,"comment_ctime":1585967179,"is_pvip":false,"replies":[{"id":"76052","content":"多看几遍就能理解，我觉得握手流程图画的还是挺好的。","user_name":"作者回复","user_name_real":"chrono","uid":"1181974","ctime":1586223134,"ip_address":"","comment_id":202316,"utype":1}],"discussion_count":1,"race_medal":0,"score":"27355770955","product_id":100029001,"comment_content":"😅分水岭来了，我看了三遍还是没太明白，先跳过，小本本记一下，之后在回头看看。","like_count":6,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":490555,"discussion_content":"多看几遍就能理解，我觉得握手流程图画的还是挺好的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1586223134,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":211649,"user_name":"Teresa","can_delete":false,"product_type":"c1","uid":1698219,"ip_address":"","ucode":"6106B84BDC30AF","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/PiajxSqBRaEKkDB6420zwODZTJL6icKKTpyFKuVF9GRjj1V5ziaibADbrpDMmicF8Ad5fmBjycibEg3yhpwlVOLzzxRQ/132","comment_is_top":false,"comment_ctime":1587992468,"is_pvip":false,"replies":[{"id":"78720","content":"<br>1.证书是自说明的，里面包含了签名算法。根证书验一级证书是可信的，那么再去验服务器证书，也是可信的，这就构成了一个信任链。<br><br>2.验证证书用的是签名，不是公钥，是利用证书里的公钥来验证签名，因为只有公钥才能验证私钥的签名。公钥是完全公开的，不需要解析，但要保证它是可信的。<br><br>3.服务器证书里包含公钥，用来验证握手时的签名，防止中间人窜改，实现身份认证。<br><br>4.服务器证书对应的是服务器私钥，证明服务器的身份，它对握手数据签名，客户端拿到证书后验一下，就知道确实是服务器发的数据，因为对应的私钥只能是服务器有，不可能是其他人。","user_name":"作者回复","user_name_real":"chrono","uid":"1181974","ctime":1588038972,"ip_address":"","comment_id":211649,"utype":1}],"discussion_count":3,"race_medal":0,"score":"23062828948","product_id":100029001,"comment_content":"有几个疑问一直想不明白，还请老师赐教：\r1.客户端怎么验证服务端发过来的证书就是可信的？客户端在验证服务端发过来得证书得时候，客户端是直接拿取自己系统内得CA根证书，根证书里包含解密一级证书的根公钥（或者他自己就是公钥？），毕竟是证书链，所以它会先拿证书链表的第一个结点，通过刚才的根公钥进行解密（这个解密是他自己有一套算法吗？RSA或者ECC？它解密的过程还需要其他的参数吗？），解密出来的东西是一级证书包含的公钥和描述信息，然后用解密出来的公钥解密第二个结点，解出服务器的公钥和描述信息。只要最后能解析出来一个公钥和其他的描述就认为验证成功了吗？\r2.我看整个流程下来，后面就没有解出来的证书公钥什么事了，所以这个证书的公钥在整个流程中还有其他的作用吗？\r3.在server key exchange 那步，服务端给出的私钥签名认证是什么的私钥？客户端用它来做什么？","like_count":5,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":493322,"discussion_content":"\n1.证书是自说明的，里面包含了签名算法。根证书验一级证书是可信的，那么再去验服务器证书，也是可信的，这就构成了一个信任链。\n\n2.验证证书用的是签名，不是公钥，是利用证书里的公钥来验证签名，因为只有公钥才能验证私钥的签名。公钥是完全公开的，不需要解析，但要保证它是可信的。\n\n3.服务器证书里包含公钥，用来验证握手时的签名，防止中间人窜改，实现身份认证。\n\n4.服务器证书对应的是服务器私钥，证明服务器的身份，它对握手数据签名，客户端拿到证书后验一下，就知道确实是服务器发的数据，因为对应的私钥只能是服务器有，不可能是其他人。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1588038972,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1363634,"avatar":"https://static001.geekbang.org/account/avatar/00/14/ce/b2/1f914527.jpg","nickname":"海盗船长","note":"","ucode":"ECB28BA21A4113","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":265576,"discussion_content":"“3.服务器证书里包含公钥，用来验证握手时的签名，防止中间人窜改，实现身份认证。”老师 这条还是不太明白。可以详细讲讲吗","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1589418563,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":281171,"discussion_content":"服务器证书，证明了服务器的身份，服务器用私钥对数据签名，别人无法伪造签名，再用证书验证一下，就实现了防纂改和身份认证。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1591684961,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":279838,"user_name":"乘风破浪","can_delete":false,"product_type":"c1","uid":2406841,"ip_address":"","ucode":"937AF15F3FEBDC","user_header":"https://static001.geekbang.org/account/avatar/00/24/b9/b9/9e4d7aa4.jpg","comment_is_top":false,"comment_ctime":1613979798,"is_pvip":false,"replies":[{"id":"101701","content":"自己动手实践的精神值得鼓励！<br><br>1.实际的网络通信情况可能会比较复杂，和实验环境不一致也是正常的，我们只要理解了核心原理就行，再深究就要考虑性价比的问题了。<br><br>2.黑客篡改握手过程中的public key没有意义，也是无效的，因为最后握手结束的时候两边都会对之前所有发送的数据做个摘要，再用会话密钥加密，发给对方验证，就是在finished那步。如果被篡改在这里就对不上了。","user_name":"作者回复","user_name_real":"罗剑锋","uid":"1181974","ctime":1614043388,"ip_address":"","comment_id":279838,"utype":1}],"discussion_count":1,"race_medal":0,"score":"18793848982","product_id":100029001,"comment_content":"为了验证双向验证，抓了一下招商银行u盾，奇怪的是没有抓到任何客户端证书相关的消息。其它和ecdhe流程一致。<br>验证百度首页，它用的是tls1.2,过程大师说的连接过程一致，一点小区别是，记录Server Heelo几个记录，分散在几个tcp包里，不知道是基于什么考虑？这么做，不是浪费资源吗？<br><br>tls连接过程，貌似不是很复杂，主要是有些细节需要琢磨。<br>简单说，就是交换对称的秘钥,并验证对方的身份。<br>交换对称秘钥，是由3个数算出来的<br>pre-master,c,s<br>其中pre-master根据ecdhe或rsa有区别<br>ecdhe，由临时产生的公钥算出来的，虽然是明文，但算法可以保证黑客拿到也算不出。<br>验证身份就是验证对方传过来的证书<br>rsa, 客户端产生随机数，rsa公钥加密传到对端，这种方式不具备前向安全。<br><br>一个疑问，请问大师，客户端client exchange中传递的public key甚至都没有签名，就一个明文，这怎么保证不被黑客篡改利用？","like_count":5,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":515888,"discussion_content":"自己动手实践的精神值得鼓励！\n\n1.实际的网络通信情况可能会比较复杂，和实验环境不一致也是正常的，我们只要理解了核心原理就行，再深究就要考虑性价比的问题了。\n\n2.黑客篡改握手过程中的public key没有意义，也是无效的，因为最后握手结束的时候两边都会对之前所有发送的数据做个摘要，再用会话密钥加密，发给对方验证，就是在finished那步。如果被篡改在这里就对不上了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1614043388,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":170578,"user_name":"俊伟","can_delete":false,"product_type":"c1","uid":1111175,"ip_address":"","ucode":"7905B4F25637F4","user_header":"https://static001.geekbang.org/account/avatar/00/10/f4/87/644c0c5d.jpg","comment_is_top":false,"comment_ctime":1578638077,"is_pvip":true,"replies":[{"id":"66114","content":"说的非常完整，32个赞。<br><br>不过其中可能是笔误，第二步括号里的SHA512应该是SHA384。","user_name":"作者回复","user_name_real":"chrono","uid":"1181974","ctime":1578646739,"ip_address":"","comment_id":170578,"utype":1}],"discussion_count":3,"race_medal":0,"score":"18758507261","product_id":100029001,"comment_content":"握手过程：1.首先客户端发起连接，发送client hello。里面内容包括tls版本号，客户端用于加密的随机数，客户端支持的安全套件信息。<br>2.服务端收到客户端的请求，发送server hello。包括服务端生成的用于加密的随机数，选择的客户端的加密套件，也就是TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384。然后是server certificate发送服务端的证书信息。之后是server key exchange，里面包含生成对称加密的参数，也就是ECDHE算法生成的公钥，然后服务器用选择的摘要算法(SHA512)将整体信息进行摘要计算，用公钥进行加密，这样做是使用公钥来表示身份防止篡改。然后server hello done结束。<br>3.客户端收到请求之后，先根据服务端发送的证书链进行服务端的公钥认证，确认身份。确认身份无误后，根据根据自己本地ECDHE算法生成的Pubkey和服务端的server params也就是服务端的pubkey，生成pre master 。然后根据上两步得到的两个随机数生成master secret。计算的同时发送client key exchange，也就是客户端的参数，ECDHE算法生成的公钥。这里由于是单项认证，客户端无需使用生成摘要表明身份。然后发送change cipher spec和finished。<br>4.服务端收到客户端的请求之后，也类似与客户端，根据收到的client params生成pre master，然后再生成master secret。然后发送change cipher spec和finished。最终完成安全握手连接。<br>综上：<br>1.选择的加密套件，TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384中，ECDHE的任务是进行密钥交互，RSA的任务是身份认证与不可否认。AES是265位的密钥，GCM分组模式，它的任务是保存通信安全。最后SHA384的任务是进行摘要计算，保证完整性。有点类似于设计模式里面的单一职责原则，每种算法负责一种职责。<br>2.RSA加密过程与此类似，只是没有server key exchange。而是由客户端生成pre master， 发送client key exchange请求到服务端。参考了答疑篇，这样生成的密钥不具有向前安全。由于密钥是客户端固定生成的，随着时间的增加被破解的风险会越来越高。","like_count":4,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":481023,"discussion_content":"说的非常完整，32个赞。\n\n不过其中可能是笔误，第二步括号里的SHA512应该是SHA384。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578646739,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1039904,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/de/20/03130a39.jpg","nickname":"沧海一声笑","note":"","ucode":"5297F2F4736B63","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":280652,"discussion_content":"然后服务器用选择的摘要算法(SHA512)将整体信息进行摘要计算，用公钥进行加密，这样做是使用公钥来表示身份防止篡改。然后server hello done结束。 这里不应该是私钥加密 客户端用服务端的公钥解密吗","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1591586719,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1313813,"avatar":"https://static001.geekbang.org/account/avatar/00/14/0c/15/ad1d202c.jpg","nickname":"纽扣","note":"","ucode":"870A1E731E1C02","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":370420,"discussion_content":"@俊伟\n“2. ...   之后是server key exchange，里面包含生成对称加密的参数，也就是ECDHE算法生成的公钥，然后服务器用选择的摘要算法(SHA512)将整体信息进行摘要计算，用公钥进行加密，这样做是使用公钥来表示身份防止篡改。然后server hello done结束。”\n\n这里后半段错了，server key exchange摘要后不是用公钥进行加密，而是用私钥进行签名，以证明自己的身份，让客户端用服务器公钥进行验证","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1619404700,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":117811,"user_name":"丶景","can_delete":false,"product_type":"c1","uid":1079269,"ip_address":"","ucode":"128AAC7A93E641","user_header":"https://static001.geekbang.org/account/avatar/00/10/77/e5/8b5844df.jpg","comment_is_top":false,"comment_ctime":1564134624,"is_pvip":false,"replies":[{"id":"43369","content":"这是由DH算法决定的，DH算法是专门用作密钥交换的，它本身能够保证交换安全，具体的细节一下子说不清楚，你可以搜一下相关的资料。","user_name":"作者回复","user_name_real":"chrono","uid":"1181974","ctime":1564362192,"ip_address":"","comment_id":117811,"utype":1}],"discussion_count":1,"race_medal":0,"score":"18744003808","product_id":100029001,"comment_content":"Pre-Master Secret 这个不理解，是说客户端和服务器分别通过 Client Params 和 Server Params 都能计算出一样的 Pre-Master Secret 吗？如果是，为什么中间人算不出？","like_count":4,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":460125,"discussion_content":"这是由DH算法决定的，DH算法是专门用作密钥交换的，它本身能够保证交换安全，具体的细节一下子说不清楚，你可以搜一下相关的资料。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1564362192,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":117645,"user_name":"何用","can_delete":false,"product_type":"c1","uid":1377393,"ip_address":"","ucode":"B0C6E8176AE6FD","user_header":"https://static001.geekbang.org/account/avatar/00/15/04/71/0b949a4c.jpg","comment_is_top":false,"comment_ctime":1564104786,"is_pvip":false,"replies":[{"id":"43082","content":"由密钥交换算法保证，比如rsa、ecdhe。<br>","user_name":"作者回复","user_name_real":"chrono","uid":"1181974","ctime":1564105933,"ip_address":"","comment_id":117645,"utype":1}],"discussion_count":2,"race_medal":0,"score":"18743973970","product_id":100029001,"comment_content":"Client Params 和 Server Params 都可以被截获，为何中间人没法通过这两个信息计算 Pre-Master Secret 呢？","like_count":4,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":460066,"discussion_content":"由密钥交换算法保证，比如rsa、ecdhe。\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1564105933,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":1,"child_discussions":[{"author":{"id":1523315,"avatar":"","nickname":"GeekCoder","note":"","ucode":"14BB73CBE28545","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":574081,"discussion_content":"计算的时候，应该还有ecdhe私钥参与吧？？因为私钥是截取不到的","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1653825299,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":460066,"ip_address":""},"score":574081,"extra":""}]}]},{"had_liked":false,"id":175389,"user_name":"💢 星星💢","can_delete":false,"product_type":"c1","uid":1254392,"ip_address":"","ucode":"A402B765222C35","user_header":"https://static001.geekbang.org/account/avatar/00/13/23/f8/24fcccea.jpg","comment_is_top":false,"comment_ctime":1580703019,"is_pvip":false,"replies":[{"id":"68256","content":"这个是rfc的规定，只允许ecdhe使用false start。<br><br>背后的真正原因是什么我也不太清楚，可能还是因为rsa不支持前向安全吧。","user_name":"作者回复","user_name_real":"chrono","uid":"1181974","ctime":1580782825,"ip_address":"","comment_id":175389,"utype":1}],"discussion_count":1,"race_medal":0,"score":"14465604907","product_id":100029001,"comment_content":"老师，因为使用了 ECDHE，客户端可以不用等到服务器发回“Finished”确认握手完毕，立即就发出 HTTP 报文，省去了一个消息往返的时间浪费。。这个没看懂，rsa为啥不行？","like_count":3,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":482713,"discussion_content":"这个是rfc的规定，只允许ecdhe使用false start。\n\n背后的真正原因是什么我也不太清楚，可能还是因为rsa不支持前向安全吧。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1580782825,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":138605,"user_name":"肥low","can_delete":false,"product_type":"c1","uid":1043480,"ip_address":"","ucode":"A158AFAAB8C742","user_header":"https://static001.geekbang.org/account/avatar/00/0f/ec/18/bf7254d3.jpg","comment_is_top":false,"comment_ctime":1570365317,"is_pvip":false,"replies":[{"id":"53477","content":"客户端必须要验证服务器的签名，这个步骤是不能省略的，验签发生在server hello done之后。<br><br>画的示意图里写的有点省略，“验证证书”其实包含了验证书和验签名。<br><br>可能造成了误解，还请原谅。","user_name":"作者回复","user_name_real":"chrono","uid":"1181974","ctime":1570496615,"ip_address":"","comment_id":138605,"utype":1}],"discussion_count":1,"race_medal":0,"score":"14455267205","product_id":100029001,"comment_content":"老师 我看rsa握手的时候 舍去了验签的环节 这是没有必要的么","like_count":3,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":469591,"discussion_content":"客户端必须要验证服务器的签名，这个步骤是不能省略的，验签发生在server hello done之后。\n\n画的示意图里写的有点省略，“验证证书”其实包含了验证书和验签名。\n\n可能造成了误解，还请原谅。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1570496615,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":272276,"user_name":"唐锋","can_delete":false,"product_type":"c1","uid":2056373,"ip_address":"","ucode":"EADB4F9B8FED0F","user_header":"https://static001.geekbang.org/account/avatar/00/1f/60/b5/c24a543f.jpg","comment_is_top":false,"comment_ctime":1610013096,"is_pvip":false,"replies":[{"id":"98739","content":"看得很仔细。<br><br>没错，finished和ack就标志着tls握手正式完成，建立了tls通信链路，后面就是标准的http通信了，所以客户端就会发get请求，走http协议收发数据了。<br><br>而因为是tls底层通信，数据都是加密的，所以没有秘钥外界无法解密，看到的就是application data。","user_name":"作者回复","user_name_real":"罗剑锋","uid":"1181974","ctime":1610068306,"ip_address":"","comment_id":272276,"utype":1}],"discussion_count":2,"race_medal":0,"score":"10199947688","product_id":100029001,"comment_content":"1. 为啥客户端发送finished，服务端响应ACK后，还有一个GET请求，这个请求有什么用吗？<br>2. 另外从抓包的内容看是发起了一个Application Data信息，这个就是对应那个GET请求吗？","like_count":2,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":513223,"discussion_content":"看得很仔细。\n\n没错，finished和ack就标志着tls握手正式完成，建立了tls通信链路，后面就是标准的http通信了，所以客户端就会发get请求，走http协议收发数据了。\n\n而因为是tls底层通信，数据都是加密的，所以没有秘钥外界无法解密，看到的就是application data。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1610068306,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2608728,"avatar":"https://static001.geekbang.org/account/avatar/00/27/ce/58/71ed845f.jpg","nickname":"Dexter","note":"","ucode":"909CABC4AC4AC9","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":560872,"discussion_content":"application也是TLS 的一个子协议或者说模块","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1649476765,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":225167,"user_name":"沧海一声笑","can_delete":false,"product_type":"c1","uid":1039904,"ip_address":"","ucode":"5297F2F4736B63","user_header":"https://static001.geekbang.org/account/avatar/00/0f/de/20/03130a39.jpg","comment_is_top":false,"comment_ctime":1591671993,"is_pvip":false,"replies":[{"id":"82883","content":"仔细想一下，私钥加密，任何人都可以用公钥解密，那么它的加密还有什么意义。<br><br>Server Params和Client Params都是公开的，不需要加密，只有第三个参数Pre-Master是要保密的。<br><br>交换的方式可以是用ecdhe算法，或者是rsa的公钥加密，绝对不能用私钥加密。<br><br>记住，私钥只能用来签名。","user_name":"作者回复","user_name_real":"罗剑锋","uid":"1181974","ctime":1591673368,"ip_address":"","comment_id":225167,"utype":1}],"discussion_count":3,"race_medal":0,"score":"10181606585","product_id":100029001,"comment_content":"然后，服务器为了证明自己的身份，就把证书也发给了客户端（Server Certificate）。接下来是一个关键的操作，因为服务器选择了 ECDHE 算法，所以它会在证书后发送“Server Key Exchange”消息，里面是椭圆曲线的公钥（Server Params），用来实现密钥交换算法，再加上自己的私钥签名认证。 <br><br><br>老师这里我有一个 竟然服务端都把证书发给客户端了 按道理客户端就可以拿到服务端的公钥了 为啥服务端不用私钥直接加密Server Params","like_count":2,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":497762,"discussion_content":"仔细想一下，私钥加密，任何人都可以用公钥解密，那么它的加密还有什么意义。\n\nServer Params和Client Params都是公开的，不需要加密，只有第三个参数Pre-Master是要保密的。\n\n交换的方式可以是用ecdhe算法，或者是rsa的公钥加密，绝对不能用私钥加密。\n\n记住，私钥只能用来签名。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1591673368,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1039904,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/de/20/03130a39.jpg","nickname":"沧海一声笑","note":"","ucode":"5297F2F4736B63","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":281127,"discussion_content":"我知道了，我应该把两种交换方式混为一谈了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1591675384,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1039904,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/de/20/03130a39.jpg","nickname":"沧海一声笑","note":"","ucode":"5297F2F4736B63","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":281125,"discussion_content":"并不是任何人都可以获取公钥吧，服务端的公钥经过CA证书私钥的加密，再把证书发给客户端经过证书链验证拿到证书公钥解密，然后客户端就可以获取到服务端的公钥了，还请老师解答","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1591675114,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":146395,"user_name":"听雨","can_delete":false,"product_type":"c1","uid":1254493,"ip_address":"","ucode":"252754F9FCFF0C","user_header":"https://static001.geekbang.org/account/avatar/00/13/24/5d/65e61dcb.jpg","comment_is_top":false,"comment_ctime":1572512682,"is_pvip":false,"replies":[{"id":"56509","content":"流程正确，对照一下图示就能搞明白。<br><br>tls里的密钥交换过程比较复杂，在第24讲里的密钥交换过程是比较简单的，可以用来理解原理。","user_name":"作者回复","user_name_real":"chrono","uid":"1181974","ctime":1572513887,"ip_address":"","comment_id":146395,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10162447274","product_id":100029001,"comment_content":"老师，已经明白了，重新读了一遍，才发现是生成Pre-Master的两个参数。第一遍看的有点懵，所以有的地方就漏了。感觉大致流程就是：<br>1、客户端发送随机数给服务器<br>2、服务器发送证书、随机数和公钥给客户端<br>3、客户端验证证书，生成公钥，并发送给服务器<br>4、客户端和服务器分别根据两个公钥计算出Per-Master<br>5、用三个随机数生成主密钥<br>6、客户端告诉服务器后面使用对称加密通信<br>7、服务器同样回答客户端<br>8、握手结束<br>细节性的，像身份认证、完整性等单独记一下怎么解决的。这样记忆的话您看可以吗，会不会漏掉了重点","like_count":2,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":472842,"discussion_content":"流程正确，对照一下图示就能搞明白。\n\ntls里的密钥交换过程比较复杂，在第24讲里的密钥交换过程是比较简单的，可以用来理解原理。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1572513887,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":137063,"user_name":"饭团","can_delete":false,"product_type":"c1","uid":1332557,"ip_address":"","ucode":"E24F240CC91BE8","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83erbY9UsqHZhhVoI69yXNibBBg0TRdUVsKLMg2UZ1R3NJxXdMicqceI5yhdKZ5Ad6CJYO0XpFHlJzIYQ/132","comment_is_top":false,"comment_ctime":1569588330,"is_pvip":false,"replies":[{"id":"52769","content":"如果用rsa做密钥交换，Key Exchange发送的是被rsa公钥加密的pre-master，不是公钥。<br><br>如果用ecdhe做密钥交换，Key Exchange发送的算法使用的参数，包含选定的椭圆曲线、基点和临时生成的公钥，但最终用这些算出的是共享的pre-master。<br><br>所以说从最终目标来看，Key Exchange交换的就是pre-master。","user_name":"作者回复","user_name_real":"chrono","uid":"1181974","ctime":1569720013,"ip_address":"","comment_id":137063,"utype":1}],"discussion_count":3,"race_medal":0,"score":"10159522922","product_id":100029001,"comment_content":"总觉得老师说的有点问题！<br>“Hello”消息交换随机数，“Key Exchange”消息交换“Pre-Master”；<br>“Change Cipher Spec”之前传输的都是明文，之后都是对称密钥加密的密文。<br>Key Exchange交换在change chipper spec之前 那他是明文传输！所以Key Exchange交换的不是Pre-master而是算法的public key","like_count":2,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":468924,"discussion_content":"如果用rsa做密钥交换，Key Exchange发送的是被rsa公钥加密的pre-master，不是公钥。\n\n如果用ecdhe做密钥交换，Key Exchange发送的算法使用的参数，包含选定的椭圆曲线、基点和临时生成的公钥，但最终用这些算出的是共享的pre-master。\n\n所以说从最终目标来看，Key Exchange交换的就是pre-master。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1569720013,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":23106,"discussion_content":"不客气。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1569755037,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1332557,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83erbY9UsqHZhhVoI69yXNibBBg0TRdUVsKLMg2UZ1R3NJxXdMicqceI5yhdKZ5Ad6CJYO0XpFHlJzIYQ/132","nickname":"饭团","note":"","ucode":"E24F240CC91BE8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":22871,"discussion_content":"哈哈哈 是的。老师！终于明白了！如果是rsa才会加密！如果是ecdhe就不会加密！ 哈哈！没想到课程结束这么久了！老师还会看！太谢谢老师了！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1569720125,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":310773,"user_name":"cake","can_delete":false,"product_type":"c1","uid":1966533,"ip_address":"","ucode":"55A7FC6CC1204C","user_header":"https://static001.geekbang.org/account/avatar/00/1e/01/c5/b48d25da.jpg","comment_is_top":false,"comment_ctime":1630900294,"is_pvip":false,"replies":[{"id":"112611","content":"&quot;master secret&quot;是算法里要求的一个固定字符串，必须的参数。","user_name":"作者回复","user_name_real":"罗剑锋","uid":"1181974","ctime":1630909489,"ip_address":"","comment_id":310773,"utype":1}],"discussion_count":2,"race_medal":0,"score":"5925867590","product_id":100029001,"comment_content":"master_secret = PRF (pre_master_secret, &quot;master secret&quot;,<br>                    ClientHello.random + ServerHello.random)<br> 请问下老师 &quot;master secret&quot; 是什么","like_count":1,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":526346,"discussion_content":"&amp;quot;master secret&amp;quot;是算法里要求的一个固定字符串，必须的参数。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1630909489,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2608728,"avatar":"https://static001.geekbang.org/account/avatar/00/27/ce/58/71ed845f.jpg","nickname":"Dexter","note":"","ucode":"909CABC4AC4AC9","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":560874,"discussion_content":"看得真仔细","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1649477338,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":308547,"user_name":"Geek_631159","can_delete":false,"product_type":"c1","uid":2740272,"ip_address":"","ucode":"1FB21E4A7C2542","user_header":"","comment_is_top":false,"comment_ctime":1629683678,"is_pvip":false,"replies":[{"id":"111700","content":"<br>1.没有详细研究过ecdhe的参数，我觉得可以去看rfc。<br><br>2.服务器可以配置双证书，支持多种签名算法，所以要指定签名算法，然后服务器选择合适的证书，再应用算法。所以是算法指定了证书，而不是反过来。","user_name":"作者回复","user_name_real":"罗剑锋","uid":"1181974","ctime":1629693361,"ip_address":"","comment_id":308547,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5924650974","product_id":100029001,"comment_content":"老师您好！我看了TLS1.2的HTTPS报文，我有两个疑问，一个是报文中的Server key exchange中，可见Named curve，Pubkey, 还有Signature，不没有域参数，请问ECDHE域参数在哪里可以看见？<br>第二个问题，signature会指明签名的算法，既然使用证书中公钥对应的私钥来签名，那么为什么还要指明签名算法，这个算法不是在证书中就指明了吗？","like_count":1,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":525531,"discussion_content":"\n1.没有详细研究过ecdhe的参数，我觉得可以去看rfc。\n\n2.服务器可以配置双证书，支持多种签名算法，所以要指定签名算法，然后服务器选择合适的证书，再应用算法。所以是算法指定了证书，而不是反过来。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1629693361,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":297491,"user_name":"Geek_0c61eb","can_delete":false,"product_type":"c1","uid":2370570,"ip_address":"","ucode":"782E4393AC8B73","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/JwUickDQdahM2XzoO7smNRAalSchPUPq811GOVoW7GU6kacVVmFIblCocBXDTGrfAWYDs0vtqhuJdPMOdNicCAVw/132","comment_is_top":false,"comment_ctime":1623577211,"is_pvip":false,"replies":[{"id":"108036","content":"是的，验证同时也就实现了身份认证。","user_name":"作者回复","user_name_real":"罗剑锋","uid":"1181974","ctime":1623654936,"ip_address":"","comment_id":297491,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5918544507","product_id":100029001,"comment_content":"老师，请文在ECDHE算法中，证书的公钥是只用来验证 Server Params的签名吗？","like_count":1,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":521837,"discussion_content":"是的，验证同时也就实现了身份认证。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1623654936,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":295851,"user_name":"hao","can_delete":false,"product_type":"c1","uid":2368078,"ip_address":"","ucode":"371A47DD4510E7","user_header":"https://static001.geekbang.org/account/avatar/00/24/22/4e/2e081d9c.jpg","comment_is_top":false,"comment_ctime":1622619607,"is_pvip":false,"replies":[{"id":"107431","content":"可以对比一下密钥false start的rsa密钥交换过程。<br><br>rsa必须要服务器发送完finish后才能发送应用数据，也就是http报文，而ecdhe则在这之前就可以发送http报文了，也就是“抢跑”，所以就快了一个rtt。","user_name":"作者回复","user_name_real":"罗剑锋","uid":"1181974","ctime":1622682335,"ip_address":"","comment_id":295851,"utype":1}],"discussion_count":2,"race_medal":0,"score":"5917586903","product_id":100029001,"comment_content":"有个问题想请求一下，文中说到现在主流的TLS握手，密钥交换算法采用了ECDHE，所以客户端可以不用等服务端发送Finished表示确认握手完毕，就可以立即发出HTTP报文，而这样做能节省一个rtt（TLS false Start - 抢跑行为），【此处不懂为何能节省一个rtt】 ？","like_count":1,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":521240,"discussion_content":"可以对比一下密钥false start的rsa密钥交换过程。\n\nrsa必须要服务器发送完finish后才能发送应用数据，也就是http报文，而ecdhe则在这之前就可以发送http报文了，也就是“抢跑”，所以就快了一个rtt。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1622682335,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2368078,"avatar":"https://static001.geekbang.org/account/avatar/00/24/22/4e/2e081d9c.jpg","nickname":"hao","note":"","ucode":"371A47DD4510E7","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":377668,"discussion_content":"老师是指RSA可以发送HTTP请求报文要比ECDHE的  &#34;false start&#34;  慢了一个  ”RTT“，即ECDHE的  ”false start“  快了一个  ”RTT“ ？\n我之前一直理解为像TLS1.3那样节省RTT了，😂","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1622770070,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":286562,"user_name":"mersa","can_delete":false,"product_type":"c1","uid":1330156,"ip_address":"","ucode":"A9F0B2FF9457C9","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epzwbJGbUmgEC77J6QY6A5pLPdPbw7sqk4DcsHK8qPw7OiaiaMD7pjzb8uHlkY5uLZRibWVvPDDAgM5A/132","comment_is_top":false,"comment_ctime":1617376044,"is_pvip":false,"replies":[{"id":"104107","content":"<br>1.通信过程中都是用会话密钥的对称加密。<br><br>2.会话过程中用AEAD算，加密的同时保证完整性。<br><br>3.摘要算法用来在握手阶段生成会话密钥，增强安全性，而握手时交换的随机数是无法窃取的。","user_name":"作者回复","user_name_real":"罗剑锋","uid":"1181974","ctime":1617450195,"ip_address":"","comment_id":286562,"utype":1}],"discussion_count":2,"race_medal":0,"score":"5912343340","product_id":100029001,"comment_content":"请问下老师，密码套件里面的摘要算法SHA384是用来强化 master secret的随机性。<br>1.在后面application data会用到密码套件的摘要算法么？还是会话密钥只加密真正的数据？<br>2.如果用到了，那是为什么要保证完整性。不是会话密钥黑客无法获取到么。那感觉没必要用摘要。如果通过特殊获取到，那摘要算法就在握手公开的也可以伪造篡改啊","like_count":1,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":518027,"discussion_content":"\n1.通信过程中都是用会话密钥的对称加密。\n\n2.会话过程中用AEAD算，加密的同时保证完整性。\n\n3.摘要算法用来在握手阶段生成会话密钥，增强安全性，而握手时交换的随机数是无法窃取的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1617450195,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1330156,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epzwbJGbUmgEC77J6QY6A5pLPdPbw7sqk4DcsHK8qPw7OiaiaMD7pjzb8uHlkY5uLZRibWVvPDDAgM5A/132","nickname":"mersa","note":"","ucode":"A9F0B2FF9457C9","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":365014,"discussion_content":"懂了。感谢老师解惑","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1617685848,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":228911,"user_name":"Demon","can_delete":false,"product_type":"c1","uid":1390641,"ip_address":"","ucode":"58CD838717F36D","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIUdfNDQs3eLoIjfIXDm77W66udicLfqh6NA8QX4QuZNO48UlRTfDo2Fm2jGX0z3hjnbARib8wSbxcg/132","comment_is_top":false,"comment_ctime":1592837810,"is_pvip":false,"replies":[{"id":"84409","content":"可以再看一下后面的加餐，对ecdhe算法解释的也很详细。","user_name":"作者回复","user_name_real":"罗剑锋","uid":"1181974","ctime":1592873606,"ip_address":"","comment_id":228911,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5887805106","product_id":100029001,"comment_content":"密钥交换算法DH的一个通俗版本介绍：https:&#47;&#47;www.liaoxuefeng.com&#47;wiki&#47;1252599548343744&#47;1304227905273889<br>总结下这个思想是：<br>网络上传输的信息是通过各自的随机数处理过的，而通信的双方只有自己才知道自己的随机数是多少，在知道自己随机数是多少时，算法保证双方在知道己方随机数时很容易地算出一个一样的值（密钥）。而两个随机数都不知道的话，要通过网络上传输的混淆后的数据，反推随机数。因为里面用到的数都是比较大的素数，所以反向计算是很困难的。","like_count":1,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":499251,"discussion_content":"可以再看一下后面的加餐，对ecdhe算法解释的也很详细。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1592873606,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":159410,"user_name":"ddq432","can_delete":false,"product_type":"c1","uid":1131034,"ip_address":"","ucode":"C84F5727BA37B5","user_header":"https://static001.geekbang.org/account/avatar/00/11/42/1a/de91a790.jpg","comment_is_top":false,"comment_ctime":1575617156,"is_pvip":false,"replies":[{"id":"60929","content":"签名用来验证之前发送的握手数据，保证不会被窜改。","user_name":"作者回复","user_name_real":"chrono","uid":"1181974","ctime":1575623140,"ip_address":"","comment_id":159410,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5870584452","product_id":100029001,"comment_content":"还有一个问题，在服务器发送证书给客户端的时候，还有一个数字签名，这个签名是在什么时候使用的","like_count":1,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":477045,"discussion_content":"签名用来验证之前发送的握手数据，保证不会被窜改。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1575623140,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":154099,"user_name":"Neo","can_delete":false,"product_type":"c1","uid":1501591,"ip_address":"","ucode":"6A4EF447B88C8C","user_header":"https://static001.geekbang.org/account/avatar/00/16/e9/97/c190359c.jpg","comment_is_top":false,"comment_ctime":1574381643,"is_pvip":false,"replies":[{"id":"59168","content":"<br>1.服务器会发出一个Certificate Request消息，要求客户端提供证书，这样在ServerHelloDone消息后，客户端就会发送Client Certificate提供客户端证书。<br><br>2.双向认证的流程就在ServerHelloDone消息后多了个客户端证书，比较简单，看后面有时间再补充一篇答疑吧。","user_name":"作者回复","user_name_real":"chrono","uid":"1181974","ctime":1574384742,"ip_address":"","comment_id":154099,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5869348939","product_id":100029001,"comment_content":"老师好，请教一下“双向验证”的问题：<br>1. 双向验证，是不是客户端和服务器端协商决定的？<br>例如我用浏览器访问这个测试网址：https:&#47;&#47;server.cryptomix.com&#47;secure&#47; 会弹出选择客户端证书的窗口。如果是的话，服务器怎么让客户端知道需要客户端证书的？<br>2. 您在客户作业中提到“画出双向验证的流程图”，我自己还没有理解到，留言区似乎也还没有答案，您能公布答案么？谢谢🙏","like_count":1,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":475376,"discussion_content":"\n1.服务器会发出一个Certificate Request消息，要求客户端提供证书，这样在ServerHelloDone消息后，客户端就会发送Client Certificate提供客户端证书。\n\n2.双向认证的流程就在ServerHelloDone消息后多了个客户端证书，比较简单，看后面有时间再补充一篇答疑吧。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574384742,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":145631,"user_name":"qiezitx","can_delete":false,"product_type":"c1","uid":1664274,"ip_address":"","ucode":"AEA470E33B4C19","user_header":"https://static001.geekbang.org/account/avatar/00/19/65/12/98fe9d80.jpg","comment_is_top":false,"comment_ctime":1572334618,"is_pvip":false,"replies":[{"id":"56229","content":"总结的不错，对于ECDHE算法，在答疑篇有更详细的介绍，感兴趣可以去看看。","user_name":"作者回复","user_name_real":"chrono","uid":"1181974","ctime":1572337830,"ip_address":"","comment_id":145631,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5867301914","product_id":100029001,"comment_content":"这篇有点难，站在tls设计者的角度解释试试。<br><br>ECDHE抓包过程，两个来回，10个record：<br>1、client_hello，明文发送加密套件list和Client Random。无妨，加密套件list不是我们要发送的真实内容，Client Random用于最终主密钥生成，只要黑客无法生成主密钥就可以传。<br><br>2、server_hello，选中的加密套件和Server Random。同理无妨。<br>3、服务器证书，证明服务器身份。根据证书链，黑客很难伪造。<br>4、server_key_exchange，签名发送Server Params，这里要签名一下，证明是服务期发的。黑客可以公钥解了，但是ECDHE算法保证黑客算不出pre-master。<br>5、server_hello_done，无妨。<br><br>6、先客户端进行了证书认证，接着client_key_exchange，明文发送Client Params。同理，ECDHE算法保证黑客算不出pre-master，而且这里不签名也无妨，客户端身份采用双向认证或其他方式认证。<br>7、先根据Client Params、Server Params算出pre-master；根据Client Random、Server Random、pre-master算出master，接着客户端发送Change Cipher Spec。无妨。<br>8、客户端发送Finished。无妨。<br><br>9、10、服务端发送Change Cipher Spec和Finished。无妨。<br><br>RSA不同的地方在于，不用交换Client Params 和 Server Params，而是随机数生成pre-master，用服务器公钥加密给到服务器。","like_count":1,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":472498,"discussion_content":"总结的不错，对于ECDHE算法，在答疑篇有更详细的介绍，感兴趣可以去看看。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1572337830,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":140522,"user_name":"我只是个孩子","can_delete":false,"product_type":"c1","uid":1398177,"ip_address":"","ucode":"216FE41B898AAE","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/980yvj8VpgQPndXvibiaomic6JWWyqu12lmOnnIsdtXgukNiaY14dxV9zic9RcibkvMcLPr9WuCYic8EJAhCmDRlNk3ibg/132","comment_is_top":false,"comment_ctime":1570975520,"is_pvip":false,"replies":[{"id":"54334","content":"在server hello里，会对这些数据做个签名，和ecdhe的server key exchange类似。","user_name":"作者回复","user_name_real":"chrono","uid":"1181974","ctime":1571015199,"ip_address":"","comment_id":140522,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5865942816","product_id":100029001,"comment_content":"RSA秘钥交换过程中，没有看到服务端签名，客户端验签的步骤，这样就没有办法验证服务端身份呀？请教一下原因","like_count":1,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":470426,"discussion_content":"在server hello里，会对这些数据做个签名，和ecdhe的server key exchange类似。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571015199,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":133179,"user_name":"饭团","can_delete":false,"product_type":"c1","uid":1332557,"ip_address":"","ucode":"E24F240CC91BE8","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83erbY9UsqHZhhVoI69yXNibBBg0TRdUVsKLMg2UZ1R3NJxXdMicqceI5yhdKZ5Ad6CJYO0XpFHlJzIYQ/132","comment_is_top":false,"comment_ctime":1568433591,"is_pvip":false,"replies":[{"id":"51108","content":"第7、8步不对，因为是ecdhe，所以rsa公钥只做身份认证，没有解密，如果不是ecdhe而是rsa是正确的。<br><br>客户端和服务器使用ecdhe算法交换加密参数，算出pre-master。<br><br>可以再仔细看一下握手流程图。","user_name":"作者回复","user_name_real":"chrono","uid":"1181974","ctime":1568534054,"ip_address":"","comment_id":133179,"utype":1}],"discussion_count":4,"race_medal":0,"score":"5863400887","product_id":100029001,"comment_content":"TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256  <br>1》首先客户端发送 client_hello 消息包  里边携带了 （1）加密套装列表 （2）版本号   (3)客户端随机数  等信息<br>2》此时服务器发送 server_hello 消息包  里边携带了  (1) 选择的加密套装 (2) 使用的版本号  （3）服务端随机值 等信息<br>3》服务端继续将自己的证书推送至客户端<br>4》如果秘钥交换算法使用了ECDHE算法， 那服务端继续推送一个 Server Key Exchange 消息包。 里边包含以下数据 ：<br>     \t（1)是所选加密曲线名称和服务端参数 （这些数据会使用私钥加密。客户端拿到后需要使用公钥解密）<br>     \t (2)是对参数的摘要算法结果（验证完整性），这个参数也会使用私钥加密（私密性）<br>5》服务端发送server hello done消息包<br>6》客户端拿到以上信息后，首先验证证书是否真实（身份认证） <br>7》用公钥解密参数和摘要 验证完整性。获得服务端参数。<br>8》客户端生成自己的参数，并使用公钥加密后发送给服务端。<br>9》之后客户端会使用加密通道传送数据<br>10》同理  服务端也是<br>不知道说的对不对 ，请老师点评","like_count":1,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":467283,"discussion_content":"第7、8步不对，因为是ecdhe，所以rsa公钥只做身份认证，没有解密，如果不是ecdhe而是rsa是正确的。\n\n客户端和服务器使用ecdhe算法交换加密参数，算出pre-master。\n\n可以再仔细看一下握手流程图。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1568534054,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":17169,"discussion_content":"用ecdhe，算法本身传输的参数都是明文，但通信双方保存各自的临时私钥，所以外部的黑客即使获取了明文的曲线参数，没有私钥也是无法破解的。\n可以简单了解一下dh算法的原理。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1568952198,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1332557,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83erbY9UsqHZhhVoI69yXNibBBg0TRdUVsKLMg2UZ1R3NJxXdMicqceI5yhdKZ5Ad6CJYO0XpFHlJzIYQ/132","nickname":"饭团","note":"","ucode":"E24F240CC91BE8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":17255,"discussion_content":"嗯 ecdhe算法 用来达到交换对称加密密钥的算法！所以 无论是客户端 或者 服务端都需要一个随机数！就是你说的那个密钥，这个是怎么传给对方的！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1568960671,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":17169,"ip_address":""},"score":17255,"extra":""}]},{"author":{"id":1332557,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83erbY9UsqHZhhVoI69yXNibBBg0TRdUVsKLMg2UZ1R3NJxXdMicqceI5yhdKZ5Ad6CJYO0XpFHlJzIYQ/132","nickname":"饭团","note":"","ucode":"E24F240CC91BE8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":12581,"discussion_content":"好的谢谢老师，\n那老师第6步的时候，服务端给客户端传送的曲线参数，是明码吗？不做任何加密吗？我抓包发现一个public-key字段，这个应该就是参数！还有一个签名参数！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1568549887,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":132573,"user_name":"秋成","can_delete":false,"product_type":"c1","uid":1238915,"ip_address":"","ucode":"FDC0B94398B6DF","user_header":"https://static001.geekbang.org/account/avatar/00/12/e7/83/20456810.jpg","comment_is_top":false,"comment_ctime":1568167574,"is_pvip":false,"replies":[{"id":"50716","content":"是的，不过不止是ecdhe的公钥，是对整个消息。","user_name":"作者回复","user_name_real":"chrono","uid":"1181974","ctime":1568173161,"ip_address":"","comment_id":132573,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5863134870","product_id":100029001,"comment_content":"Handshake Protocol: Server Key Exchange<br>    EC Diffie-Hellman Server Params<br>        Curve Type: named_curve (0x03)<br>        Named Curve: x25519 (0x001d)<br>        Pubkey: 3b39deaf00217894e...<br>        Signature Algorithm: rsa_pkcs1_sha512 (0x0601)<br>        Signature: 37141adac38ea4...<br>Server Key Exchange步骤中的Signature是使用Server段的私钥对Pubkey做的签名吗？","like_count":1,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":467015,"discussion_content":"是的，不过不止是ecdhe的公钥，是对整个消息。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1568173161,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":123218,"user_name":"項霸霸","can_delete":false,"product_type":"c1","uid":1322122,"ip_address":"","ucode":"34F3D2CEA4EE6C","user_header":"https://static001.geekbang.org/account/avatar/00/14/2c/8a/257c130b.jpg","comment_is_top":false,"comment_ctime":1565628739,"is_pvip":false,"replies":[{"id":"45274","content":"假设客户端A要访问服务器B，经过中间人M，在https中，中间人M必须使用证书来证明自己是B，否则就无法建立连接，除非它持有CA私钥根证书，能够颁发出“伪造”的证书。<br><br>某些抓包软件是把自己的根证书安装进了系统，然后自己给自己颁发证书，“假冒”服务器，因为你信任它的根证书，自然客户端就认为连接的是真正的服务器。","user_name":"作者回复","user_name_real":"chrono","uid":"1181974","ctime":1565658665,"ip_address":"","comment_id":123218,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5860596035","product_id":100029001,"comment_content":"关于tls是如何抵御中间人攻击的呢？我也有疑问，这个中间人又是客户端，又是服务器的话，它的证书也是对的，这个是不是就像是我们使用代理软件抓包Https包一样了？这样信息是不是就泄露了。","like_count":1,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":462586,"discussion_content":"假设客户端A要访问服务器B，经过中间人M，在https中，中间人M必须使用证书来证明自己是B，否则就无法建立连接，除非它持有CA私钥根证书，能够颁发出“伪造”的证书。\n\n某些抓包软件是把自己的根证书安装进了系统，然后自己给自己颁发证书，“假冒”服务器，因为你信任它的根证书，自然客户端就认为连接的是真正的服务器。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1565658665,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":121861,"user_name":"亚洲舞王.尼古拉斯赵四","can_delete":false,"product_type":"c1","uid":1443078,"ip_address":"","ucode":"7159F5D7232696","user_header":"https://static001.geekbang.org/account/avatar/00/16/05/06/f5979d65.jpg","comment_is_top":false,"comment_ctime":1565236214,"is_pvip":false,"replies":[{"id":"44859","content":"如果客户端没有私钥认证，中间人可以伪装成客户端，但它没有服务器证书，不能伪装成服务器，所以客户端可以通过证书认证鉴别出中间人。<br>","user_name":"作者回复","user_name_real":"chrono","uid":"1181974","ctime":1565313303,"ip_address":"","comment_id":121861,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5860203510","product_id":100029001,"comment_content":"有一个问题：tls是如何抵御中间人攻击的呢？我服务器将证书发给了中间人，中间人将自己的公钥给了服务器，服务器也不知道这是真正的客户端还是中间人呀，中间人可以解密服务器使用中间人公钥加密的消息呀<br><br>","like_count":1,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":461982,"discussion_content":"如果客户端没有私钥认证，中间人可以伪装成客户端，但它没有服务器证书，不能伪装成服务器，所以客户端可以通过证书认证鉴别出中间人。\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1565313303,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":121703,"user_name":"🌞🇨🇳👦","can_delete":false,"product_type":"c1","uid":1168085,"ip_address":"","ucode":"6BB08F05546D06","user_header":"https://static001.geekbang.org/account/avatar/00/11/d2/d5/ed93f2fa.jpg","comment_is_top":false,"comment_ctime":1565187638,"is_pvip":false,"replies":[{"id":"44716","content":"是的，但false start是有条件的（ecdhe），如果用rsa就是2-rtt。<br><br>而tls1.3是无条件，一定是1-rtt，而且它还有0-rtt。","user_name":"作者回复","user_name_real":"chrono","uid":"1181974","ctime":1565189057,"ip_address":"","comment_id":121703,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5860154934","product_id":100029001,"comment_content":"在上一课中，讲到ecdhe非对称加密算法可以不等服务器返回finished就直接抢跑发送数据，相当于1个rtt。tls1.3这里好像并没有实际上减少握手时间？","like_count":1,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":461912,"discussion_content":"是的，但false start是有条件的（ecdhe），如果用rsa就是2-rtt。\n\n而tls1.3是无条件，一定是1-rtt，而且它还有0-rtt。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1565189057,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":120902,"user_name":"J.D.Chi","can_delete":false,"product_type":"c1","uid":1035855,"ip_address":"","ucode":"34812AEF95C7AB","user_header":"https://static001.geekbang.org/account/avatar/00/0f/ce/4f/3a89d29a.jpg","comment_is_top":false,"comment_ctime":1565011362,"is_pvip":false,"replies":[{"id":"44453","content":"没事，现在学会了也不晚，更好的机会在等着你。","user_name":"作者回复","user_name_real":"chrono","uid":"1181974","ctime":1565045661,"ip_address":"","comment_id":120902,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5859978658","product_id":100029001,"comment_content":"看的有点晚，面试的时候问了 Https 的连接过程.......","like_count":1,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":461522,"discussion_content":"没事，现在学会了也不晚，更好的机会在等着你。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1565045661,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":120765,"user_name":"彩色的沙漠","can_delete":false,"product_type":"c1","uid":1116183,"ip_address":"","ucode":"19A0975A5E69EA","user_header":"https://static001.geekbang.org/account/avatar/00/11/08/17/e63e50f3.jpg","comment_is_top":false,"comment_ctime":1564992030,"is_pvip":true,"replies":[{"id":"44369","content":"wireshark启动后的初始界面，“使用这个过滤器”，在文本框里输入。","user_name":"作者回复","user_name_real":"chrono","uid":"1181974","ctime":1565009113,"ip_address":"","comment_id":120765,"utype":1}],"discussion_count":2,"race_medal":0,"score":"5859959326","product_id":100029001,"comment_content":"请问老师我在Wireshark  设置过滤器tcp.port==443  查看抓包，有很多其他TCP包也被抓到了，过滤的不彻底，老师的过滤器tcp port 443 在哪设置？谢谢！","like_count":1,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":461467,"discussion_content":"wireshark启动后的初始界面，“使用这个过滤器”，在文本框里输入。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1565009113,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2406841,"avatar":"https://static001.geekbang.org/account/avatar/00/24/b9/b9/9e4d7aa4.jpg","nickname":"乘风破浪","note":"","ucode":"937AF15F3FEBDC","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":350642,"discussion_content":"精髓不在于443，而在于443后再选择跟踪tls流，则这一系列的tls的包就被过滤出来了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1613963197,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":119349,"user_name":"叶佳欣","can_delete":false,"product_type":"c1","uid":1046174,"ip_address":"","ucode":"71C96C332FEAF8","user_header":"https://static001.geekbang.org/account/avatar/00/0f/f6/9e/6f454f98.jpg","comment_is_top":false,"comment_ctime":1564567404,"is_pvip":false,"replies":[{"id":"43821","content":"pre-master的交换方式是由密钥交换算法决定的，如果是rsa就直接公钥加密，如果是ecdhe就要用算法参数。<br><br>这些都要按照tls协议来，Client Key Exchange已经由密钥交换算法保证了安全，所以不需要再加密或者签名。<br><br>如果是双向认证，那么客户端会发送客户端的证书，也要做签名认证，让服务器验证身份。","user_name":"作者回复","user_name_real":"chrono","uid":"1181974","ctime":1564621874,"ip_address":"","comment_id":119349,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5859534700","product_id":100029001,"comment_content":"老师，问下。Server Key Exchange需要用私钥签名认证。那Client Key Exchange会用公钥加密下吗，如果不会，为什么不像传统握手把pre-master用公钥加密发送给server？","like_count":1,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":460860,"discussion_content":"pre-master的交换方式是由密钥交换算法决定的，如果是rsa就直接公钥加密，如果是ecdhe就要用算法参数。\n\n这些都要按照tls协议来，Client Key Exchange已经由密钥交换算法保证了安全，所以不需要再加密或者签名。\n\n如果是双向认证，那么客户端会发送客户端的证书，也要做签名认证，让服务器验证身份。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1564621874,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":117819,"user_name":"丶景","can_delete":false,"product_type":"c1","uid":1079269,"ip_address":"","ucode":"128AAC7A93E641","user_header":"https://static001.geekbang.org/account/avatar/00/10/77/e5/8b5844df.jpg","comment_is_top":false,"comment_ctime":1564137060,"is_pvip":false,"replies":[{"id":"43367","content":"这个只能说是fasle start协议的规定，其实rsa也可以抢先发出报文，但没有人这么用。","user_name":"作者回复","user_name_real":"chrono","uid":"1181974","ctime":1564362134,"ip_address":"","comment_id":117819,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5859104356","product_id":100029001,"comment_content":"老师好，RSA 握手过程下面有个不明白的地方，使用 ECDHE 可以不用等到服务器发回“Finish”立即就发出 HTTP 报文。使用 RSA 为什么就不可以先发出 HTTP 报文？<br><br><br>","like_count":1,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":460131,"discussion_content":"这个只能说是fasle start协议的规定，其实rsa也可以抢先发出报文，但没有人这么用。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1564362134,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":117740,"user_name":"许童童","can_delete":false,"product_type":"c1","uid":1003005,"ip_address":"","ucode":"4B799C0C6BC678","user_header":"https://static001.geekbang.org/account/avatar/00/0f/4d/fd/0aa0e39f.jpg","comment_is_top":false,"comment_ctime":1564122723,"is_pvip":false,"replies":[{"id":"43128","content":"可以把自己理解的过程写出来，这样才能说明真正弄懂了。","user_name":"作者回复","user_name_real":"chrono","uid":"1181974","ctime":1564125625,"ip_address":"","comment_id":117740,"utype":1}],"discussion_count":2,"race_medal":0,"score":"5859090019","product_id":100029001,"comment_content":"老师讲得好啊，现在完全理解了，往返最多两次，之前一直理解很得模糊。","like_count":1,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":460101,"discussion_content":"可以把自己理解的过程写出来，这样才能说明真正弄懂了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1564125625,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1003005,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/4d/fd/0aa0e39f.jpg","nickname":"许童童","note":"","ucode":"4B799C0C6BC678","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":3112,"discussion_content":"好的 老师","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1564196804,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":117716,"user_name":"大小兵","can_delete":false,"product_type":"c1","uid":1209885,"ip_address":"","ucode":"1227870F26D322","user_header":"https://static001.geekbang.org/account/avatar/00/12/76/1d/b4262bdc.jpg","comment_is_top":false,"comment_ctime":1564117390,"is_pvip":false,"replies":[{"id":"43116","content":"有啊，在握手里用ecdhe交换pre-master，之前有发送证书，验证书就有非对称加密。<br><br>可以看一下双方商定的密码套件，看看里面的算法都用在了哪个环节。","user_name":"作者回复","user_name_real":"chrono","uid":"1181974","ctime":1564118513,"ip_address":"","comment_id":117716,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5859084686","product_id":100029001,"comment_content":"请问一下老师，上面的握手过程是不是没有用到非对称加密啊？如果没有用到那非对称加密什么时候用呢？","like_count":1,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":460092,"discussion_content":"有啊，在握手里用ecdhe交换pre-master，之前有发送证书，验证书就有非对称加密。\n\n可以看一下双方商定的密码套件，看看里面的算法都用在了哪个环节。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1564118513,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":117571,"user_name":"Leon📷","can_delete":false,"product_type":"c1","uid":1219496,"ip_address":"","ucode":"B9BBD1EFAAE5A2","user_header":"https://static001.geekbang.org/account/avatar/00/12/9b/a8/6a391c66.jpg","comment_is_top":false,"comment_ctime":1564096333,"is_pvip":false,"replies":[{"id":"43060","content":"不用，只要设置了环境变量SSLKEYLOGFILE，wireshark就可以从日志里读取握手过程中的信息，相当于浏览器告诉了wireshark pre-master，所以就可以解密。<br><br>不需要任何私钥。","user_name":"作者回复","user_name_real":"chrono","uid":"1181974","ctime":1564103016,"ip_address":"","comment_id":117571,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5859063629","product_id":100029001,"comment_content":"如果想测试公网的https服务报文，是不是把浏览器端的私钥导入wireshark就可以了","like_count":1,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":460030,"discussion_content":"不用，只要设置了环境变量SSLKEYLOGFILE，wireshark就可以从日志里读取握手过程中的信息，相当于浏览器告诉了wireshark pre-master，所以就可以解密。\n\n不需要任何私钥。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1564103016,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":356049,"user_name":"马哲富","can_delete":false,"product_type":"c1","uid":1107917,"ip_address":"北京","ucode":"D6BDDFE3CC07ED","user_header":"https://static001.geekbang.org/account/avatar/00/10/e7/cd/08088f14.jpg","comment_is_top":false,"comment_ctime":1661935199,"is_pvip":false,"replies":[{"id":"129582","content":"客户端和服务器各自的内存里。","user_name":"作者回复","user_name_real":"编辑","uid":"1181974","ctime":1661941138,"ip_address":"北京","comment_id":356049,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1661935199","product_id":100029001,"comment_content":"老师好，请教一下，会话密钥存在哪儿啊？","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":586030,"discussion_content":"客户端和服务器各自的内存里。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1661941138,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"北京"},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":348436,"user_name":"Geek_21a73c","can_delete":false,"product_type":"c1","uid":3014444,"ip_address":"","ucode":"104A4AD89DA6BC","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q3auHgzwzM74658w9PQeTM4TcM14BzfpJnVLrsciaS26ibRwRbCE09ydI6UlZhFrJh7iaVLp2xxhBppVDKLyRRg9Q/132","comment_is_top":false,"comment_ctime":1655106541,"is_pvip":false,"replies":[{"id":"126971","content":"正常，因为网站用的是自签名证书，不被浏览器信任。可参考上一讲。","user_name":"作者回复","user_name_real":"作者","uid":"1181974","ctime":1655272578,"ip_address":"","comment_id":348436,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1655106541","product_id":100029001,"comment_content":"我打开https:&#47;&#47;www.chrono.com:440&#47;26-1<br><br>显示：您的连接不是私密连接<br>攻击者可能会试图从 www.chrono.com 窃取您的信息（例如：密码、通讯内容或信用卡信息）。了解详情<br><br>","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":576078,"discussion_content":"正常，因为网站用的是自签名证书，不被浏览器信任。可参考上一讲。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1655272578,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":347780,"user_name":"海绵薇薇","can_delete":false,"product_type":"c1","uid":1601296,"ip_address":"","ucode":"37C7CC2EB81909","user_header":"https://static001.geekbang.org/account/avatar/00/18/6f/10/bfbf81dc.jpg","comment_is_top":false,"comment_ctime":1654423198,"is_pvip":false,"replies":[{"id":"126792","content":"学的很认真。<br><br>ECDHE握手中的公私钥只是给ECDHE算法用，用来交换pre-master，它本身不是用于加解密的。<br><br>握手过程中必须要验证服务器的身份，因为ECDHE只交换密钥，不知道对方是谁，所以就要用服务器的私钥签名，再发证书过去，让客户端验证身份。","user_name":"作者回复","user_name_real":"编辑","uid":"1181974","ctime":1654496889,"ip_address":"","comment_id":347780,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1654423198","product_id":100029001,"comment_content":"老师好:)<br><br>我发现ECDHE 握手过程可以分为两个目的：<br><br>1. 交换信息（客户端随机数，服务端随机数，客户端算法参数，服务端算法参数等）生成master secret<br>2. 客户端通过证书链确认服务端身份<br><br>可以发现在这个两个过程中服务端的public key和secret key都没有用于加密或解密。并且这两个过程是相互独立的。可以在不确认身份的情况加完成加密通信，也可以在不加密的情况下完成身份确认。<br><br>所以我想表达的是按照我的理解服务端的私钥在ECDHE握手过程中可以省略，而公钥则只用于标识身份（有其他机构担保这个公钥是这个公司的 —— 证书链验证过程）。再精简一点就是服务端不需要公钥和私钥，需要的只是一个可以代表其机构的唯一字符串，用于确认其身份。<br><br>以上是我现在的理解。<br><br>我以前的理解是需要确认服务端证书的完整性需要使用服务端私钥加密，然后客户端使用服务端公钥解密进行验签即可确认证书未被篡改并且可以确认身份，然后公钥的可信问题可以通过证书链的验证来解决。但是仔细思考后发现服务端私钥加密这一步多余，因为证书链解决了身份问题和证书内容完整性问题。<br><br>另外虽然ECDHE过程没有使用服务端的公钥和私钥就行加解密，但是在RSA确实使用了服务端的公钥和私钥进行了加解密，但是因为前向安全问题它被废弃了。<br><br>结论：<br><br>1. ECDHE握手过程中服务端的公钥和私钥并没有被用于加解密<br>2. ECDHE握手过程中服务端并不需要公钥和私钥，需要的只是一个可以标识身份的字符串用于CA去颁发证书","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":574961,"discussion_content":"学的很认真。\n\nECDHE握手中的公私钥只是给ECDHE算法用，用来交换pre-master，它本身不是用于加解密的。\n\n握手过程中必须要验证服务器的身份，因为ECDHE只交换密钥，不知道对方是谁，所以就要用服务器的私钥签名，再发证书过去，让客户端验证身份。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1654496889,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":1,"child_discussions":[{"author":{"id":1601296,"avatar":"https://static001.geekbang.org/account/avatar/00/18/6f/10/bfbf81dc.jpg","nickname":"海绵薇薇","note":"","ucode":"37C7CC2EB81909","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":575143,"discussion_content":"老师好:)\n\n抱歉，我的描述有歧义，犯了一个提问的忌讳，导致老师理解有偏差。\n\n我描述中的“ECDHE握手”其实指的是“采用ECDHE非对称加密算法的TLS握手过程”，并不是单纯指“ECDHE握手”过程。所以描述中的公钥和私钥指的是被CA签名过的公钥和对应的私钥，并不是ECDHE算法的公钥和私钥。\n\n我上面一大坨其实想表达的是确认服务端身份只要用到证书链就可以了。\n\n老师回答中的意思是在交换ECDHE算法参数的时候为了防止篡改和确认参数来源者的身份需要用服务端私钥加密后客户端用证书中的公钥再去验签吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1654609118,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":574961,"ip_address":""},"score":575143,"extra":""}]}]},{"had_liked":false,"id":347168,"user_name":"GeekCoder","can_delete":false,"product_type":"c1","uid":1523315,"ip_address":"","ucode":"14BB73CBE28545","user_header":"","comment_is_top":false,"comment_ctime":1653784917,"is_pvip":false,"replies":[{"id":"126687","content":"curl可以用环境变量，其他的要找它相关的资料了。","user_name":"作者回复","user_name_real":"编辑","uid":"1181974","ctime":1654085995,"ip_address":"","comment_id":347168,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1653784917","product_id":100029001,"comment_content":"通过设置SSLKEYLOGFILE抓取浏览器的，那非浏览器的呢？比如app","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":574493,"discussion_content":"curl可以用环境变量，其他的要找它相关的资料了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1654085995,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":346241,"user_name":"Space","can_delete":false,"product_type":"c1","uid":1596897,"ip_address":"","ucode":"999C0CB4733AB7","user_header":"","comment_is_top":false,"comment_ctime":1652939786,"is_pvip":true,"replies":[{"id":"126352","content":"可以参考后面的答疑篇，专门讲ECDHE算法。","user_name":"作者回复","user_name_real":"编辑","uid":"1181974","ctime":1653003298,"ip_address":"","comment_id":346241,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1652939786","product_id":100029001,"comment_content":"Client Params 和 Server Params 都黑客都知道了，用相同的算法不是一样可以算出pre-Master secret 吗？","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":572832,"discussion_content":"可以参考后面的答疑篇，专门讲ECDHE算法。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1653003298,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":345010,"user_name":"Shanks-王冲","can_delete":false,"product_type":"c1","uid":1042983,"ip_address":"","ucode":"C4B90A17850E20","user_header":"https://static001.geekbang.org/account/avatar/00/0f/ea/27/a3737d61.jpg","comment_is_top":false,"comment_ctime":1651932331,"is_pvip":false,"replies":[{"id":"125992","content":"1.证书只有一个公钥，必须是非对称算法，用来身份验证，你理解的有点偏差。<br><br>2.ServerKeyExchange和ClientKeyExchange并没有加密，是用ecdhe交换密钥，可以再看一下握手过程。<br><br>3.“Change Cipher Spec”表示后续改用加密通信，“Finished”不是ack，而是一个加密的摘要，客户端用共享密钥解密成功，就说明握手成功。","user_name":"作者回复","user_name_real":"编辑","uid":"1181974","ctime":1652069044,"ip_address":"","comment_id":345010,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1651932331","product_id":100029001,"comment_content":"老师，有几个问题，帮我确认下，谢谢：）<br>1. 服务器发来的证书，客户端可以提取出2个公钥，一个是非对称加密算法的，另一个用于走信任链的，对吗？<br>2. ServerKeyExchange和ClientKeyExchange两个记录，都是用约定好的非对称加密算法加密后，再进行传输的，对吗？<br>3. 【 服务器也是同样的操作，发“Change Cipher Spec”和“Finished”消息，双方都验证加密解密 OK，握手正式结束，后面就收发被加密的 HTTP 请求和响应了。 】这里能细说一下？比如：为验证「客户端加密」成功，服务器端 是回复 ACK确认其加密成功，还是在Finished记录中回复其加密成功了呢？","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":571103,"discussion_content":"1.证书只有一个公钥，必须是非对称算法，用来身份验证，你理解的有点偏差。\n\n2.ServerKeyExchange和ClientKeyExchange并没有加密，是用ecdhe交换密钥，可以再看一下握手过程。\n\n3.“Change Cipher Spec”表示后续改用加密通信，“Finished”不是ack，而是一个加密的摘要，客户端用共享密钥解密成功，就说明握手成功。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1652069044,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":344732,"user_name":"小耿","can_delete":false,"product_type":"c1","uid":1153707,"ip_address":"","ucode":"1C8B66C738D33B","user_header":"https://static001.geekbang.org/account/avatar/00/11/9a/ab/fd201314.jpg","comment_is_top":false,"comment_ctime":1651742088,"is_pvip":false,"replies":[{"id":"125900","content":"感觉这属于人为规定，技术上没有限制，具体原因没找到。","user_name":"作者回复","user_name_real":"编辑","uid":"1181974","ctime":1651906124,"ip_address":"","comment_id":344732,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1651742088","product_id":100029001,"comment_content":"请问老师，不太明白：为何 ECDHE 可以抢跑，而 RSA 不能抢跑？","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":570765,"discussion_content":"感觉这属于人为规定，技术上没有限制，具体原因没找到。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1651906124,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":339017,"user_name":"xmr","can_delete":false,"product_type":"c1","uid":1009622,"ip_address":"","ucode":"1BBF165F91F10B","user_header":"https://static001.geekbang.org/account/avatar/00/0f/67/d6/2f5cb85c.jpg","comment_is_top":false,"comment_ctime":1647861083,"is_pvip":true,"replies":[{"id":"124062","content":"server hello，再看一下握手过程。","user_name":"作者回复","user_name_real":"编辑","uid":"1181974","ctime":1648081002,"ip_address":"","comment_id":339017,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1647861083","product_id":100029001,"comment_content":"请问服务端的公钥是在哪个环节传到客户端的？","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":558056,"discussion_content":"server hello，再看一下握手过程。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1648081003,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":336249,"user_name":"发芽的紫菜","can_delete":false,"product_type":"c1","uid":1055836,"ip_address":"","ucode":"49450F3287DF28","user_header":"https://static001.geekbang.org/account/avatar/00/10/1c/5c/f5f24221.jpg","comment_is_top":false,"comment_ctime":1646032944,"is_pvip":false,"replies":[{"id":"122919","content":"后面答疑篇里也有对ecdhe的讲解，可以再做参考。","user_name":"作者回复","user_name_real":"编辑","uid":"1181974","ctime":1646115077,"ip_address":"","comment_id":336249,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1646032944","product_id":100029001,"comment_content":"推荐这篇，清楚明了易懂<br>https:&#47;&#47;www.cnblogs.com&#47;xiaolincoding&#47;p&#47;14318338.html","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":553836,"discussion_content":"后面答疑篇里也有对ecdhe的讲解，可以再做参考。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1646115078,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":335010,"user_name":"hzs","can_delete":false,"product_type":"c1","uid":1808206,"ip_address":"","ucode":"6844D91F80286E","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJoOia8n2xdlIAZkJJZ9hflv3rMENqGGuxYRSsYE8bIpXiaQfAbfH7qVmiaJAyVEiaEj6sP9BRlIWWqRA/132","comment_is_top":false,"comment_ctime":1645255386,"is_pvip":false,"replies":[{"id":"122371","content":"这里讲的是ecdhe算法实现密钥交换，算法不同，握手过程当然会有差异，建议自己抓包，用实际来验证。","user_name":"作者回复","user_name_real":"编辑","uid":"1181974","ctime":1645327088,"ip_address":"","comment_id":335010,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1645255386","product_id":100029001,"comment_content":"https:&#47;&#47;blog.csdn.net&#47;ustccw&#47;article&#47;details&#47;76691248<br><br>老师，TLS建立过程与这篇博客有点不一样，体现在第二阶段，他的包没有出现<br>Server Key Exchange","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":552150,"discussion_content":"这里讲的是ecdhe算法实现密钥交换，算法不同，握手过程当然会有差异，建议自己抓包，用实际来验证。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1645327088,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":334990,"user_name":"hzs","can_delete":false,"product_type":"c1","uid":1808206,"ip_address":"","ucode":"6844D91F80286E","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJoOia8n2xdlIAZkJJZ9hflv3rMENqGGuxYRSsYE8bIpXiaQfAbfH7qVmiaJAyVEiaEj6sP9BRlIWWqRA/132","comment_is_top":false,"comment_ctime":1645242309,"is_pvip":false,"replies":[{"id":"122368","content":"Server Params是用来生成pre secret的参数，证书里的是用来验证服务器身份的，两个作用不同，要注意区分一下。","user_name":"作者回复","user_name_real":"编辑","uid":"1181974","ctime":1645326869,"ip_address":"","comment_id":334990,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1645242309","product_id":100029001,"comment_content":"Server证书里面有个公钥，Server Params也有个公钥，两者有什么区别呢？","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":552147,"discussion_content":"Server Params是用来生成pre secret的参数，证书里的是用来验证服务器身份的，两个作用不同，要注意区分一下。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1645326869,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":333866,"user_name":"ahao","can_delete":false,"product_type":"c1","uid":2898682,"ip_address":"","ucode":"BA63BE2FD58AAB","user_header":"https://static001.geekbang.org/account/avatar/00/2c/3a/fa/31f5319d.jpg","comment_is_top":false,"comment_ctime":1644566999,"is_pvip":false,"replies":[{"id":"122058","content":"证书都是ca颁发的，服务器端对于ca来说也是个普通的用户。<br><br>证书是用来证明身份，与某个服务器没有关系。","user_name":"作者回复","user_name_real":"编辑","uid":"1181974","ctime":1644756588,"ip_address":"","comment_id":333866,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1644566999","product_id":100029001,"comment_content":"文中内容：“但为了防止账号、密码被盗，有的时候（比如网上银行）还会使用 U 盾给用户颁发客户端证书，实现“双向认证”，这样会更加安全。”<br>请问老师，双向认证过程中客户端的证书不是像服务端一样不是由CA颁布的，而是特定的服务端颁发的特定的证书是吗？也就是说双向认证过程中的客户端证书只针对具体的服务端？","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":550844,"discussion_content":"证书都是ca颁发的，服务器端对于ca来说也是个普通的用户。\n\n证书是用来证明身份，与某个服务器没有关系。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1644756588,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":333156,"user_name":"ahao","can_delete":false,"product_type":"c1","uid":2898682,"ip_address":"","ucode":"BA63BE2FD58AAB","user_header":"https://static001.geekbang.org/account/avatar/00/2c/3a/fa/31f5319d.jpg","comment_is_top":false,"comment_ctime":1644140519,"is_pvip":false,"replies":[{"id":"121750","content":"<br>1.好像不是一回事，证书的申请与api认证没有直接关系，tls认证用的是pki体系，是要有ca来签发证书的。<br><br>2.这个涉及到认证的流程或者协议，如果说的是oauth，那么其实是和tls没关系的。<br><br>3.认证、鉴权比较复杂，不是tls这样的会话加密能够搞定的，需要再看具体使用的流程。","user_name":"作者回复","user_name_real":"编辑","uid":"1181974","ctime":1644221753,"ip_address":"","comment_id":333156,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1644140519","product_id":100029001,"comment_content":"老师，我有两个问题请问一下：<br>1)  origin server对接第三方api双向认证时，服务端的证书申请过程是否也必须严格CA认证<br>2）服务端申请好证书后并配置好nginx的ssl_certificate和ssl_certificate_key等信息，是否就可以在不影响origin server的前提下双向认证，也就说origin server只需要向第三方服务发起https请求就可以，具体的双向认证过程在proxy中做","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":549733,"discussion_content":"\n1.好像不是一回事，证书的申请与api认证没有直接关系，tls认证用的是pki体系，是要有ca来签发证书的。\n\n2.这个涉及到认证的流程或者协议，如果说的是oauth，那么其实是和tls没关系的。\n\n3.认证、鉴权比较复杂，不是tls这样的会话加密能够搞定的，需要再看具体使用的流程。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1644221753,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2898682,"avatar":"https://static001.geekbang.org/account/avatar/00/2c/3a/fa/31f5319d.jpg","nickname":"ahao","note":"","ucode":"BA63BE2FD58AAB","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":549736,"discussion_content":"谢谢老师，我再查找一下相关资料","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1644222163,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":326995,"user_name":"cake","can_delete":false,"product_type":"c1","uid":1966533,"ip_address":"","ucode":"55A7FC6CC1204C","user_header":"https://static001.geekbang.org/account/avatar/00/1e/01/c5/b48d25da.jpg","comment_is_top":false,"comment_ctime":1639818200,"is_pvip":false,"replies":[{"id":"119017","content":"前面的握手过程就是协商密钥，有了master secret，通信双方就都可以产生一致的会话密钥，不需要在链路上传输。<br><br>这里主要讲的是ecdhe密钥交换，和前一讲的rsa密钥交换不太一样，需要明确这一点。","user_name":"作者回复","user_name_real":"编辑","uid":"1181974","ctime":1639985490,"ip_address":"","comment_id":326995,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1639818200","product_id":100029001,"comment_content":"请问下老师，通过 主密钥拓展出来的会话密钥要用公钥加密，发给对方吗？如果不用的话，第24篇文章说的 ———— 然后用随机数产生对称算法使用的“会话密钥”（session key），再用公钥加密。因为会话密钥很短，通常只有 16 字节或 32 字节，所以慢一点也无所谓。对方拿到密文后用私钥解密，取出会话密钥。这样，双方就实现了对称密钥的安全交换，后续就不再使用非对称加密，全都使用对称加密    指的是什么呢？<br>","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":540193,"discussion_content":"前面的握手过程就是协商密钥，有了master secret，通信双方就都可以产生一致的会话密钥，不需要在链路上传输。\n\n这里主要讲的是ecdhe密钥交换，和前一讲的rsa密钥交换不太一样，需要明确这一点。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1639985490,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":324788,"user_name":"cake","can_delete":false,"product_type":"c1","uid":1966533,"ip_address":"","ucode":"55A7FC6CC1204C","user_header":"https://static001.geekbang.org/account/avatar/00/1e/01/c5/b48d25da.jpg","comment_is_top":false,"comment_ctime":1638624779,"is_pvip":false,"replies":[{"id":"117866","content":"Server Params是椭圆曲线的公钥，用来实现密钥交换算法。<br><br>这里比较复杂，如果还不清楚，可以用wireshark看抓包数据，或者看rfc。","user_name":"作者回复","user_name_real":"编辑","uid":"1181974","ctime":1638746218,"ip_address":"","comment_id":324788,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1638624779","product_id":100029001,"comment_content":"老师，请问下Server Params  是服务端证书里的公钥吗？","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":536261,"discussion_content":"Server Params是椭圆曲线的公钥，用来实现密钥交换算法。\n\n这里比较复杂，如果还不清楚，可以用wireshark看抓包数据，或者看rfc。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1638746218,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":324782,"user_name":"cake","can_delete":false,"product_type":"c1","uid":1966533,"ip_address":"","ucode":"55A7FC6CC1204C","user_header":"https://static001.geekbang.org/account/avatar/00/1e/01/c5/b48d25da.jpg","comment_is_top":false,"comment_ctime":1638620029,"is_pvip":false,"replies":[{"id":"117865","content":"握手时有两个公钥，一个是用来生成pre-master的，另一个是验证服务器身份的。","user_name":"作者回复","user_name_real":"编辑","uid":"1181974","ctime":1638746116,"ip_address":"","comment_id":324782,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1638620029","product_id":100029001,"comment_content":"Server Key Exchange 老师请问下，这个里面的公钥是证书中的的公钥吗？ 如果不是 服务端证书里的可信公钥是什么呢？","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":536260,"discussion_content":"握手时有两个公钥，一个是用来生成pre-master的，另一个是验证服务器身份的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1638746116,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":324718,"user_name":"cake","can_delete":false,"product_type":"c1","uid":1966533,"ip_address":"","ucode":"55A7FC6CC1204C","user_header":"https://static001.geekbang.org/account/avatar/00/1e/01/c5/b48d25da.jpg","comment_is_top":false,"comment_ctime":1638588511,"is_pvip":false,"replies":[{"id":"117829","content":"注意在握手阶段有两种公钥，一个是验证服务器身份的公钥，也就是证书里的公钥，它由ca签名保证安全，另一个是生成pre-master用的公钥，不要弄混了。<br><br>握手过程中的数据都用服务器私钥做签名，所以不会被窜改。","user_name":"作者回复","user_name_real":"编辑","uid":"1181974","ctime":1638676833,"ip_address":"","comment_id":324718,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1638588511","product_id":100029001,"comment_content":"老师请问下 文中是服务端先发证书，再发Server key Exchange(包含公钥) ，公钥不应该包含在证书里面么，这样不会导致，中间人劫持么(Server发送自己的公钥给Client，中间人拿到Server的公钥，然后发送自己的公钥给Client。Client用中间人的公钥进行加密，发给Server，中间人劫持到消息，用自己的私钥进行解密，然后用Server的公钥进行加密，发送给Server，Server用自己的私钥进行解密，得到消息。Client、Server都觉得消息在正常传输，但是已经被中间人劫持了)","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":536076,"discussion_content":"注意在握手阶段有两种公钥，一个是验证服务器身份的公钥，也就是证书里的公钥，它由ca签名保证安全，另一个是生成pre-master用的公钥，不要弄混了。\n\n握手过程中的数据都用服务器私钥做签名，所以不会被窜改。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1638676833,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":323324,"user_name":"Geek_1b7f39","can_delete":false,"product_type":"c1","uid":2598894,"ip_address":"","ucode":"F4B9B0F281A66E","user_header":"https://static001.geekbang.org/account/avatar/00/27/a7/ee/cbb92643.jpg","comment_is_top":false,"comment_ctime":1637834346,"is_pvip":false,"replies":[{"id":"117322","content":"公钥是公开的，谁都可以拿到，这是非对称算法的关键。<br><br>至于为什么算不出pre-master，就需要把握手过程仔细看看了，这也是SSL&amp;#47;TLS的关键。","user_name":"作者回复","user_name_real":"编辑","uid":"1181974","ctime":1637881328,"ip_address":"","comment_id":323324,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1637834346","product_id":100029001,"comment_content":"黑客能获取服务器的公钥吗，如果可以获取的话，那么传输中的“随机数”和“Client Params” 和 “Server Params ”，都可以被截取，那为什么会算不出Pre-Master Secret呢？","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":533476,"discussion_content":"公钥是公开的，谁都可以拿到，这是非对称算法的关键。\n\n至于为什么算不出pre-master，就需要把握手过程仔细看看了，这也是SSL&amp;#47;TLS的关键。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1637881328,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":322032,"user_name":"李师奇","can_delete":false,"product_type":"c1","uid":1035994,"ip_address":"","ucode":"B24F98DD38176B","user_header":"https://static001.geekbang.org/account/avatar/00/0f/ce/da/440ec2dc.jpg","comment_is_top":false,"comment_ctime":1637143251,"is_pvip":false,"replies":[{"id":"116964","content":"多看几遍，对照wireshark抓包。","user_name":"作者回复","user_name_real":"罗剑锋","uid":"1181974","ctime":1637190255,"ip_address":"","comment_id":322032,"utype":1}],"discussion_count":0,"race_medal":0,"score":"1637143251","product_id":100029001,"comment_content":"看到这里开始看不懂了,果然是我太菜了","like_count":0},{"had_liked":false,"id":314336,"user_name":"泰一","can_delete":false,"product_type":"c1","uid":1757959,"ip_address":"","ucode":"D85C764BA108CE","user_header":"https://static001.geekbang.org/account/avatar/00/1a/d3/07/5fc3c694.jpg","comment_is_top":false,"comment_ctime":1632974559,"is_pvip":false,"replies":[{"id":"113860","content":"dtls没有仔细研究过，大概看了一下资料，是把tls移植到了udp上，那么消息的有序保证可能就需要用户自己实现了吧，不了解OpenSSL是怎么做的。<br><br>抱歉帮不上忙。","user_name":"作者回复","user_name_real":"罗剑锋","uid":"1181974","ctime":1632999297,"ip_address":"","comment_id":314336,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1632974559","product_id":100029001,"comment_content":"你好老师，我想请教下dtls握手消息有序性的问题：<br>我在工作中遇到这样的场景：在最后一次握手，dtls服务端给dtls客户端发送了 new session ticket 消息，这个消息有2000字节，被分成了两个fragment，seq分别是4和5。这两个fragment乱序到达dtls客户端，先到的5后到的4，然后结果是dtls握手应该是失败了。<br><br>我不能完全确定dtls失败是乱序引起。所以想请教下老师，乱序到达是否会引起dtls握手失败。<br>另外，我想问下老师，如果确实dtls fragment乱序，是需要我们自己实现重新排序呢，还是说openssl已经实现了排序呢（如果openssl有排序，那么应该不会握手失败，很疑惑）？<br>","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":527647,"discussion_content":"dtls没有仔细研究过，大概看了一下资料，是把tls移植到了udp上，那么消息的有序保证可能就需要用户自己实现了吧，不了解OpenSSL是怎么做的。\n\n抱歉帮不上忙。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1632999297,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":312253,"user_name":"godliness","can_delete":false,"product_type":"c1","uid":1341267,"ip_address":"","ucode":"1C1976C39DCFE6","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIuUYcwKWUuib5mpdIbTwQzTGNWBmk0ktZSwm2vteUXf4TxWF2aVCv7Hvshcq0OaG7JRLj6rJyPLicA/132","comment_is_top":false,"comment_ctime":1631705976,"is_pvip":false,"replies":[{"id":"113173","content":"证书是有ca私钥签名的，所以只要证书被验证正确，那么里面的信息就都是经CA背书可信的。<br><br>接下来就是客户端怎么去利用证书里信息的事情了，比如里面的域名。<br><br>证书的等级是现实世界的真实性，与密码学无关。","user_name":"作者回复","user_name_real":"罗剑锋","uid":"1181974","ctime":1631765612,"ip_address":"","comment_id":312253,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1631705976","product_id":100029001,"comment_content":"数字签名只能校验是否是真实的数字证书， CA 不可能只签发一个证书，所以即便是被掉包的证书也是真实的证书。要确认身份还要继续验证证书内容，比如域名是否是自己要的，这里又涉及到证书的等级（DV、OV、EV），这样理解对不对呢？","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":526914,"discussion_content":"证书是有ca私钥签名的，所以只要证书被验证正确，那么里面的信息就都是经CA背书可信的。\n\n接下来就是客户端怎么去利用证书里信息的事情了，比如里面的域名。\n\n证书的等级是现实世界的真实性，与密码学无关。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1631765612,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":311096,"user_name":"吴祥","can_delete":false,"product_type":"c1","uid":2083808,"ip_address":"","ucode":"66BB121DB375D2","user_header":"https://static001.geekbang.org/account/avatar/00/1f/cb/e0/df48ccbe.jpg","comment_is_top":false,"comment_ctime":1631070612,"is_pvip":false,"replies":[{"id":"112751","content":"协议只是一种约定，它规定使用哪个端口，但实际上还是需要服务器来实现的。<br><br>比如https规定使用443，如果uri里不提供，就会默认使用443，但我们在配置服务的时候也可以用其他的端口提供服务，比如8443。<br><br>像这样：<br>curl https:&#47;&#47;127.1&#47;xxx，这就会默认使用443，<br>curl https:&#47;&#47;127.1:8443&#47;xxx，就会使用8443。","user_name":"作者回复","user_name_real":"罗剑锋","uid":"1181974","ctime":1631085524,"ip_address":"","comment_id":311096,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1631070612","product_id":100029001,"comment_content":"老师不是很明白 服务器的端口号和协议的端口号的差别在哪，URL里访问服务器  不应该就是 ip+服务器的端口号吗  那如果是https  这个443放哪呢","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":526472,"discussion_content":"协议只是一种约定，它规定使用哪个端口，但实际上还是需要服务器来实现的。\n\n比如https规定使用443，如果uri里不提供，就会默认使用443，但我们在配置服务的时候也可以用其他的端口提供服务，比如8443。\n\n像这样：\ncurl https://127.1/xxx，这就会默认使用443，\ncurl https://127.1:8443/xxx，就会使用8443。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1631085524,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":310757,"user_name":"cake","can_delete":false,"product_type":"c1","uid":1966533,"ip_address":"","ucode":"55A7FC6CC1204C","user_header":"https://static001.geekbang.org/account/avatar/00/1e/01/c5/b48d25da.jpg","comment_is_top":false,"comment_ctime":1630894621,"is_pvip":false,"replies":[{"id":"112610","content":"这里的意思是master_secret不是简单的三个随机数拼接，而是用prf函数运算得到，所以是强化了随机数。<br><br>master_secret只用了一次prf函数计算。","user_name":"作者回复","user_name_real":"罗剑锋","uid":"1181974","ctime":1630909465,"ip_address":"","comment_id":310757,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1630894621","product_id":100029001,"comment_content":"这里的“PRF”就是伪随机数函数，它基于密码套件里的最后一个参数，比如这次的 SHA384，通过摘要算法来再一次强化“Master Secret”的随机性。  老师请问下这句话的意思是 <br>master_secret = PRF(pre_master_secret, &quot;master secret&quot;,<br>                    ClientHello.random + ServerHello.random)  通过PRF算出了master_secret 之后，还会再一次通过PRF强化master_secret的随机性吗，就是总共使用了两次RPF？ 还是计算master_secret这一部，就已经是你说的通过PRF强化master_secret了呢 ？","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":526339,"discussion_content":"这里的意思是master_secret不是简单的三个随机数拼接，而是用prf函数运算得到，所以是强化了随机数。\n\nmaster_secret只用了一次prf函数计算。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1630909465,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":310720,"user_name":"cake","can_delete":false,"product_type":"c1","uid":1966533,"ip_address":"","ucode":"55A7FC6CC1204C","user_header":"https://static001.geekbang.org/account/avatar/00/1e/01/c5/b48d25da.jpg","comment_is_top":false,"comment_ctime":1630859161,"is_pvip":false,"replies":[{"id":"112606","content":"&quot;master secret&quot;是算法里要求的一个固定字符串，可以理解成是一个特殊的盐值，要用这个字符串和其他三个随机数混合起来做运算，最后得到主密钥master_secret。","user_name":"作者回复","user_name_real":"罗剑锋","uid":"1181974","ctime":1630909228,"ip_address":"","comment_id":310720,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1630859161","product_id":100029001,"comment_content":"老师，打搅了，<br>master_secret = PRF(pre_master_secret, &quot;master secret&quot;,<br>                    ClientHello.random + ServerHello.random)  这个公式我有点没有看明白， &quot;master secret&quot; 是什么意思呢 为啥用双引号引起来呢 ","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":526321,"discussion_content":"&amp;quot;master secret&amp;quot;是算法里要求的一个固定字符串，可以理解成是一个特殊的盐值，要用这个字符串和其他三个随机数混合起来做运算，最后得到主密钥master_secret。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1630909228,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":309979,"user_name":"Geek_f72367","can_delete":false,"product_type":"c1","uid":1582753,"ip_address":"","ucode":"9C0C8B110AA5A7","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJrGia7c6VRslc7ZvcYycX2mrQJVs63zfLFyictMuzR4Kh2IVkfOgL0OicPlOdR1V4ZUH9yO4qavl4xQ/132","comment_is_top":false,"comment_ctime":1630422960,"is_pvip":false,"replies":[{"id":"112341","content":"理解正确。<br><br>rsa握手时加密pre-master的公钥就是服务器证书里的公钥，它与服务器私钥对应，所以服务器才能解密。","user_name":"作者回复","user_name_real":"罗剑锋","uid":"1181974","ctime":1630472990,"ip_address":"","comment_id":309979,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1630422960","product_id":100029001,"comment_content":"握手过程<br>\t一般都是单向认证<br><br>\t客户端传递密码套件列表、客户端随机数、TLS版本号<br>\t服务端选择某种密码套件、服务端随机数、TLS版本号、服务端使用的证书<br><br>\t验证证书和签名<br>\t\t确保连接的是对的服务器<br>\t\t保证身份认证+不可否认性<br><br>\tchange Cipher Spec，这应该是一个告知信息，告诉对方接下来我们用对称加密形式<br>\t在请求-应答过程中，用 对称加密算法 + 摘要算法 保证 明文 机密性和完整性<br><br>\t非对称加密体现在用ECDHE算法生成mastersecret上、验证证书过程中<br><br>\t老师我这样理解对吗？<br>还有一个疑问: 就是RSA握手过程，用RSA公钥加密pre-master，服务端用秘钥解密拿到pre-master，这个RSA公钥是服务器之前传递的RSA公钥吗","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":526083,"discussion_content":"理解正确。\n\nrsa握手时加密pre-master的公钥就是服务器证书里的公钥，它与服务器私钥对应，所以服务器才能解密。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1630472990,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":307894,"user_name":"极客—月","can_delete":false,"product_type":"c1","uid":1318468,"ip_address":"","ucode":"EE12EEBF242B1D","user_header":"","comment_is_top":false,"comment_ctime":1629294793,"is_pvip":true,"replies":[{"id":"111532","content":"看第二个rsa握手的流程图，服务器端回复server hello，在证书里就是服务器公钥。<br><br>rsa握手与ecdhe不同，没有param交换，客户端直接生成随机数，然后公钥加密发送给服务器，可以对比一下两张图的细节。","user_name":"作者回复","user_name_real":"罗剑锋","uid":"1181974","ctime":1629344678,"ip_address":"","comment_id":307894,"utype":1}],"discussion_count":1,"race_medal":1,"score":"1629294793","product_id":100029001,"comment_content":"老师请问下，RSA中没有server key exchange，那客户端是怎么拿到服务端公钥的呢？","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":525330,"discussion_content":"看第二个rsa握手的流程图，服务器端回复server hello，在证书里就是服务器公钥。\n\nrsa握手与ecdhe不同，没有param交换，客户端直接生成随机数，然后公钥加密发送给服务器，可以对比一下两张图的细节。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1629344678,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":307818,"user_name":"Geek_631159","can_delete":false,"product_type":"c1","uid":2740272,"ip_address":"","ucode":"1FB21E4A7C2542","user_header":"","comment_is_top":false,"comment_ctime":1629270623,"is_pvip":false,"replies":[{"id":"111470","content":"<br>1.看一下握手流程图，1.2的client hello只发了随机数和密码套件列表，ecdhe参数是在server hello里用server key exchange发回来的。<br><br>2.ecdhe只用于密钥交换，签名是服务器证书对应的私钥。注意证书里只有公钥，私钥是另外单独存储的。","user_name":"作者回复","user_name_real":"罗剑锋","uid":"1181974","ctime":1629279874,"ip_address":"","comment_id":307818,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1629270623","product_id":100029001,"comment_content":"老师，我想问一个问题，TLS1.2使用ECDHE-RSA的密套，服务器发送的server Params，里面是否有相关的ECDH参数，例如，P,G传送给客户端，或者像“彩色的沙漠”回复的Q(x, y)？还是因为选择了secp256r1这个椭圆曲线，自然的客户端就知道了Q(x, y)，不需要服务器传输过来。还有在Server Params的签名是用证书里面的私钥签名的？还是ECDH生成的私钥Rb来签名？","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":525302,"discussion_content":"\n1.看一下握手流程图，1.2的client hello只发了随机数和密码套件列表，ecdhe参数是在server hello里用server key exchange发回来的。\n\n2.ecdhe只用于密钥交换，签名是服务器证书对应的私钥。注意证书里只有公钥，私钥是另外单独存储的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1629279874,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2740272,"avatar":"","nickname":"Geek_631159","note":"","ucode":"1FB21E4A7C2542","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":389790,"discussion_content":"谢谢老师，不过看报文Server key Exchange中，只有named curve，Pubkey，和signature，并没有参数啊？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1629432038,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":306257,"user_name":"孔维舸","can_delete":false,"product_type":"c1","uid":2028660,"ip_address":"","ucode":"FC0B598FA6E3F5","user_header":"https://static001.geekbang.org/account/avatar/00/1e/f4/74/77514393.jpg","comment_is_top":false,"comment_ctime":1628476194,"is_pvip":false,"replies":[{"id":"110922","content":"前5步正确，后面的理解的不太准确。<br><br>在tls协议里是用三个随机数生成master key，第三个随机数只是pre master。有了master key，用它再产生真正用来传输加密的会话密钥。","user_name":"作者回复","user_name_real":"罗剑锋","uid":"1181974","ctime":1628556993,"ip_address":"","comment_id":306257,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1628476194","product_id":100029001,"comment_content":"您好像我下面写的这个是第二个问题的答案吗？<br>TLS链接过程(RSA)<br>1、客户端使用tcp链接明文将自己的随机数、密码套件、tls版本号发送给服务端<br>2、服务端根据自己支持的密码套件从客户端的密码套件中选取一个最合适的密码套件，协商出tls版本，将协商好的密码套件、tls版本以及自己的随机数明文告诉客户端，并将自己的证书发送给客户端，并结束；<br>3、客户端收到证书之后开始走证书链逐级验证，确认证书的真实性；<br>4、 客户端生成一个用于对称加密的随机Key，并用证书内的公钥Pub进行加密，发送给服务端；<br>5、 服务端收到随机Key的密文，使用与公钥Pub配对的私钥Private进行解密，得到客户端真正想发送的随机Key；<br>6、 服务端使用客户端发送过来的随机Key对要传输的HTTP数据进行对称加密，将密文返回客户端；<br>7、客户端使用随机Key对称解密密文，得到HTTP数据明文；<br>8、后续HTTPS请求使用之前交换好的随机Key进行对称加解密。<br>","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":524687,"discussion_content":"前5步正确，后面的理解的不太准确。\n\n在tls协议里是用三个随机数生成master key，第三个随机数只是pre master。有了master key，用它再产生真正用来传输加密的会话密钥。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1628556993,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":301954,"user_name":"萧俊介","can_delete":false,"product_type":"c1","uid":2562929,"ip_address":"","ucode":"50D921EF4D5A7B","user_header":"https://static001.geekbang.org/account/avatar/00/27/1b/71/8972cd94.jpg","comment_is_top":false,"comment_ctime":1625993960,"is_pvip":false,"replies":[{"id":"109261","content":"这个只是比较通俗的说法，因为在ecdhe出现之前，最流行的rsa算法就是在key exchange里交换pre-master的，所以大家都这么说，叫习惯了。<br><br>从最终达成的结果来说，这种说法是正确的，不论我们用的是什么算法，最后的目的就是交换pre-master。","user_name":"作者回复","user_name_real":"罗剑锋","uid":"1181974","ctime":1625996885,"ip_address":"","comment_id":301954,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1625993960","product_id":100029001,"comment_content":"老师你好，我看了其他学员发的拓展链接发现 “Pre-Master” 应该是密钥+公钥+随机数计算出来的吧？而不是直接交换的，不知道我理解的对不对。如果是的话，「第三个随机数“Pre-Master”必须加密传输，绝对不能让黑客破解；」、「“Key Exchange”消息交换“Pre-Master”」这么说感觉很有误导性，因为这些地方交换的只是公钥而已。","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":523134,"discussion_content":"这个只是比较通俗的说法，因为在ecdhe出现之前，最流行的rsa算法就是在key exchange里交换pre-master的，所以大家都这么说，叫习惯了。\n\n从最终达成的结果来说，这种说法是正确的，不论我们用的是什么算法，最后的目的就是交换pre-master。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1625996885,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2562929,"avatar":"https://static001.geekbang.org/account/avatar/00/27/1b/71/8972cd94.jpg","nickname":"萧俊介","note":"","ucode":"50D921EF4D5A7B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":383235,"discussion_content":"谢谢老师的回复。看来我的理解是对的，希望这个提问能帮到和我一样，没看扩展链接比较懵逼的同学。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1626003627,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":301727,"user_name":"cake","can_delete":false,"product_type":"c1","uid":1966533,"ip_address":"","ucode":"55A7FC6CC1204C","user_header":"https://static001.geekbang.org/account/avatar/00/1e/01/c5/b48d25da.jpg","comment_is_top":false,"comment_ctime":1625823387,"is_pvip":false,"replies":[{"id":"109238","content":"可以参考答疑篇里的ecdhe算法介绍，是这个算法需要的公钥，不是身份认证的公钥，ecdhe保证公钥交换是安全的，外界无法计算得到共享秘密。","user_name":"作者回复","user_name_real":"罗剑锋","uid":"1181974","ctime":1625889695,"ip_address":"","comment_id":301727,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1625823387","product_id":100029001,"comment_content":"请问下老师 Pubkey: 3b39deaf00217894e... 这个是指的ECDHE的 Server Params吗 为什么这个是以 Pubkey形式展现的呢 被知道无妨吗","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":523074,"discussion_content":"可以参考答疑篇里的ecdhe算法介绍，是这个算法需要的公钥，不是身份认证的公钥，ecdhe保证公钥交换是安全的，外界无法计算得到共享秘密。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1625889695,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":291767,"user_name":"Ai普","can_delete":false,"product_type":"c1","uid":1057122,"ip_address":"","ucode":"637F2378FAFC96","user_header":"https://static001.geekbang.org/account/avatar/00/10/21/62/abb7bfe3.jpg","comment_is_top":false,"comment_ctime":1620469184,"is_pvip":false,"replies":[{"id":"105664","content":"理论上是可以的，但自己产生的公钥、证书是自签名的，服务器一般不会承认。","user_name":"作者回复","user_name_real":"罗剑锋","uid":"1181974","ctime":1620470209,"ip_address":"","comment_id":291767,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1620469184","product_id":100029001,"comment_content":"老师请问客户能否使用自己产生的公钥和CA进行双向认证","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":519566,"discussion_content":"理论上是可以的，但自己产生的公钥、证书是自签名的，服务器一般不会承认。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1620470209,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":291765,"user_name":"Ai普","can_delete":false,"product_type":"c1","uid":1057122,"ip_address":"","ucode":"637F2378FAFC96","user_header":"https://static001.geekbang.org/account/avatar/00/10/21/62/abb7bfe3.jpg","comment_is_top":false,"comment_ctime":1620468623,"is_pvip":false,"replies":[{"id":"105665","content":"finish不用签名，是对之前握手过程中的所有数据做个摘要，用的是PRF。","user_name":"作者回复","user_name_real":"罗剑锋","uid":"1181974","ctime":1620470254,"ip_address":"","comment_id":291765,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1620468623","product_id":100029001,"comment_content":"老师请问服务端请发送finish时候用什么证书对摘要进行签名呢","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":519564,"discussion_content":"finish不用签名，是对之前握手过程中的所有数据做个摘要，用的是PRF。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1620470254,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":291495,"user_name":"纽扣","can_delete":false,"product_type":"c1","uid":1313813,"ip_address":"","ucode":"870A1E731E1C02","user_header":"https://static001.geekbang.org/account/avatar/00/14/0c/15/ad1d202c.jpg","comment_is_top":false,"comment_ctime":1620308656,"is_pvip":false,"replies":[{"id":"105601","content":"贴一下rfc里的定义：<br>      struct {<br>          opaque verify_data[verify_data_length];<br>      } Finished;<br><br>      verify_data<br>         PRF(master_secret, finished_label, Hash(handshake_messages))<br>            [0..verify_data_length-1];<br><br>这里是用prf做了一个摘要，里面包含master_secret，但并没有用加密算法。","user_name":"作者回复","user_name_real":"罗剑锋","uid":"1181974","ctime":1620350023,"ip_address":"","comment_id":291495,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1620308656","product_id":100029001,"comment_content":"老师，请问finished阶段对摘要的对称加密是用master-secret还是会话秘钥呢？","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":519484,"discussion_content":"贴一下rfc里的定义：\n      struct {\n          opaque verify_data[verify_data_length];\n      } Finished;\n\n      verify_data\n         PRF(master_secret, finished_label, Hash(handshake_messages))\n            [0..verify_data_length-1];\n\n这里是用prf做了一个摘要，里面包含master_secret，但并没有用加密算法。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1620350023,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2608728,"avatar":"https://static001.geekbang.org/account/avatar/00/27/ce/58/71ed845f.jpg","nickname":"Dexter","note":"","ucode":"909CABC4AC4AC9","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":560875,"discussion_content":"但是chnage_cipher_spec后，不都是加密了了的数据吗？我理解用会话密钥加密了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1649478042,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":290794,"user_name":"小童","can_delete":false,"product_type":"c1","uid":1763395,"ip_address":"","ucode":"300444B520E79D","user_header":"https://static001.geekbang.org/account/avatar/00/1a/e8/43/f9c0faed.jpg","comment_is_top":false,"comment_ctime":1619753853,"is_pvip":false,"replies":[{"id":"105376","content":"随机数是随机产生的，之后要和服务器随机数、pre-master，这三个混合在一起，用摘要算法得到master secret。","user_name":"作者回复","user_name_real":"罗剑锋","uid":"1181974","ctime":1619773034,"ip_address":"","comment_id":290794,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1619753853","product_id":100029001,"comment_content":"老师问下，浏览器会首先发一个“Client Hello”消息，里面有客户端的版本号、支持的密码套件，还有一个随机数（Client Random。就是这个随机数是通过摘要算法计算的吗？","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":519291,"discussion_content":"随机数是随机产生的，之后要和服务器随机数、pre-master，这三个混合在一起，用摘要算法得到master secret。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1619773034,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":290331,"user_name":"后视镜","can_delete":false,"product_type":"c1","uid":1250406,"ip_address":"","ucode":"0975031017BA02","user_header":"https://static001.geekbang.org/account/avatar/00/13/14/66/70a6a206.jpg","comment_is_top":false,"comment_ctime":1619504181,"is_pvip":false,"replies":[{"id":"105261","content":"在交换密钥的过程中有服务器私钥的签名，保证数据不能被篡改，客户端收到数据后会拿证书验证，不通过就说明被攻击了。<br><br>可以再仔细看一下握手过程，可能是我对签名没有重点说，抱歉。","user_name":"作者回复","user_name_real":"罗剑锋","uid":"1181974","ctime":1619573999,"ip_address":"","comment_id":290331,"utype":1}],"discussion_count":3,"race_medal":0,"score":"1619504181","product_id":100029001,"comment_content":"想问下老师，ecdhe那种算密钥会存在中间人替换问题吗？我说说我的想法，既然明文传client param，那中间人拿到client param替换他mid param给服务端，那么他和服务端用server param和mid param算出来的pre master是B，和客户端用client param和server param算出来的是A，然后各自生成master secret，后面的通讯都经中间人传递。好像ecdhe无法识别client param传过来的就是客户端本人传过来的。rsa那种好像也是。麻烦老师，希望可以解答下，谢谢","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":519175,"discussion_content":"在交换密钥的过程中有服务器私钥的签名，保证数据不能被篡改，客户端收到数据后会拿证书验证，不通过就说明被攻击了。\n\n可以再仔细看一下握手过程，可能是我对签名没有重点说，抱歉。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1619573999,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1250406,"avatar":"https://static001.geekbang.org/account/avatar/00/13/14/66/70a6a206.jpg","nickname":"后视镜","note":"","ucode":"0975031017BA02","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":370942,"discussion_content":"我想通了，中间人无法通过server param和client param算出和客户端一样的 pre master，由于 server param 相当于公钥，还有个私钥在服务器自己手上，这个是无法获取的。但算pre master 如果中间人想扮演服务端角色通过client param和server param还差一个服务端ecdhe 的私钥。无法算出客户端一样的pre master","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1619588324,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1250406,"avatar":"https://static001.geekbang.org/account/avatar/00/13/14/66/70a6a206.jpg","nickname":"后视镜","note":"","ucode":"0975031017BA02","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":370933,"discussion_content":"老师客气了，感谢老师回答。rsa交换密钥我想清楚了，但ecdhe交换是不是最后的有个摘要验证，服务器会用私钥签名之前所发的全部握手数据，是这一步进行了数据摘要的验证吗？我想了下好像只有这一步才把中间人攻击避免了。有不对之处请老师指正。谢谢了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1619583789,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":290165,"user_name":"纽扣","can_delete":false,"product_type":"c1","uid":1313813,"ip_address":"","ucode":"870A1E731E1C02","user_header":"https://static001.geekbang.org/account/avatar/00/14/0c/15/ad1d202c.jpg","comment_is_top":false,"comment_ctime":1619411880,"is_pvip":false,"replies":[{"id":"105190","content":"数字信封不在TLS标准里，我大概搜了一下，其实就是用了对称加密和非对称加密计算。<br><br>发信人必须要用自己的私钥对信息生成签名，然后产生随机数作为对称密钥，加密信息形成密文，再用对方的公钥加密对称密钥，两个密文合在一起形成数字信封。<br><br>这里有发信人的私钥签名，也就验证了发信的身份。<br><br>简单的理解，可能有偏差，请谅解。","user_name":"作者回复","user_name_real":"罗剑锋","uid":"1181974","ctime":1619417677,"ip_address":"","comment_id":290165,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1619411880","product_id":100029001,"comment_content":"老师能讲讲数字信封的原理和应用场景吗？我看网上使用数字信封的流程中好像没有用到私钥签名，那是怎么保证发送人的身份的呢？","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":519128,"discussion_content":"数字信封不在TLS标准里，我大概搜了一下，其实就是用了对称加密和非对称加密计算。\n\n发信人必须要用自己的私钥对信息生成签名，然后产生随机数作为对称密钥，加密信息形成密文，再用对方的公钥加密对称密钥，两个密文合在一起形成数字信封。\n\n这里有发信人的私钥签名，也就验证了发信的身份。\n\n简单的理解，可能有偏差，请谅解。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1619417677,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1313813,"avatar":"https://static001.geekbang.org/account/avatar/00/14/0c/15/ad1d202c.jpg","nickname":"纽扣","note":"","ucode":"870A1E731E1C02","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":372396,"discussion_content":"谢谢老师","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1620307724,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":288060,"user_name":"张欣","can_delete":false,"product_type":"c1","uid":2448960,"ip_address":"","ucode":"557C42848C77E6","user_header":"https://static001.geekbang.org/account/avatar/00/25/5e/40/dee7906c.jpg","comment_is_top":false,"comment_ctime":1618283463,"is_pvip":false,"replies":[{"id":"104610","content":"<br>1.证书链是由根证书开始逐级往下验证，根验证一级，一级验证二级。<br><br>2.看后面的ECDHE算法介绍，里面应该讲清楚了，核心是离散对数的数学难题，破解成本高，对黑客不值得。","user_name":"作者回复","user_name_real":"罗剑锋","uid":"1181974","ctime":1618362019,"ip_address":"","comment_id":288060,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1618283463","product_id":100029001,"comment_content":"老师您好，有几个问题向您请教下：<br>1，客户端在验证服务端证书有效性时是从根证书往下的顺序验证，还是从服务端证书往根证书的顺序验证<br>2，还是那个ECDHE非对称的问题，看到留言区有人解答，但是没太懂。client param、server param以及两个随机数都可以被截取到。为什么说黑客通过这个算法得不到最终的master sercret。<br>多谢老师的讲解，学到很多东西","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":518502,"discussion_content":"\n1.证书链是由根证书开始逐级往下验证，根验证一级，一级验证二级。\n\n2.看后面的ECDHE算法介绍，里面应该讲清楚了，核心是离散对数的数学难题，破解成本高，对黑客不值得。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1618362019,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":287312,"user_name":"脱缰的野马__","can_delete":false,"product_type":"c1","uid":1447569,"ip_address":"","ucode":"D5F993E7232C61","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/WtHCCMoLJ2DvzqQwPYZyj2RlN7eibTLMHDMTSO4xIKjfKR1Eh9L98AMkkZY7FmegWyGLahRQJ5ibPzeeFtfpeSow/132","comment_is_top":false,"comment_ctime":1617876521,"is_pvip":false,"replies":[{"id":"104376","content":"这个之前也有很多同学在问。<br><br>确实，从理论上说ecdhe和rsa都可以抢先发数据，这么做只能说是协议的规定，不允许rsa走false start。<br><br>如果rsa非要抢先发，那么就是违反了协议，服务器可以不接收数据，结束握手。","user_name":"作者回复","user_name_real":"罗剑锋","uid":"1181974","ctime":1617932774,"ip_address":"","comment_id":287312,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1617876521","product_id":100029001,"comment_content":"老师你好，RSA握手过程中客户端为啥要等待服务端响应“Finished”消息之后，才能开始进行应用数据的请求，为啥ECDHE可以“TLS False Start”。这里没太明白，文中只说了“因为使用了 ECDHE”，老师能否再具体讲下原因嘛？我理解的是RSA握手过程中，客户端将“Client Key Exchange”消息发送给服务器，再发送Finshed消息之后应该也可以直接“TLS False Start”吧？不明白为啥","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":518266,"discussion_content":"这个之前也有很多同学在问。\n\n确实，从理论上说ecdhe和rsa都可以抢先发数据，这么做只能说是协议的规定，不允许rsa走false start。\n\n如果rsa非要抢先发，那么就是违反了协议，服务器可以不接收数据，结束握手。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1617932774,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":284155,"user_name":"Rick","can_delete":false,"product_type":"c1","uid":1502914,"ip_address":"","ucode":"9B41FCA5B4E526","user_header":"https://static001.geekbang.org/account/avatar/00/16/ee/c2/873cc8d9.jpg","comment_is_top":false,"comment_ctime":1616083431,"is_pvip":false,"replies":[{"id":"103095","content":"好像之前有同学也问过这样的问题，具体的原因不清楚，只能说是协议的约定吧。","user_name":"作者回复","user_name_real":"罗剑锋","uid":"1181974","ctime":1616120371,"ip_address":"","comment_id":284155,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1616083431","product_id":100029001,"comment_content":"“第二个，因为使用了 ECDHE，客户端可以不用等到服务器发回“Finished”确认握手完毕，立即就发出 HTTP 报文，省去了一个消息往返的时间浪费。这个叫“TLS False Start”，意思就是“抢跑”，和“TCP Fast Open”有点像，都是不等连接完全建立就提前发应用数据，提高传输的效率。”<br>请问为什么使用ECDHE就可以“抢跑”呢？而使用RSA不能抢跑？","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":517255,"discussion_content":"好像之前有同学也问过这样的问题，具体的原因不清楚，只能说是协议的约定吧。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1616120371,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":283657,"user_name":"脱缰的野马__","can_delete":false,"product_type":"c1","uid":1447569,"ip_address":"","ucode":"D5F993E7232C61","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/WtHCCMoLJ2DvzqQwPYZyj2RlN7eibTLMHDMTSO4xIKjfKR1Eh9L98AMkkZY7FmegWyGLahRQJ5ibPzeeFtfpeSow/132","comment_is_top":false,"comment_ctime":1615873321,"is_pvip":false,"replies":[{"id":"102983","content":"这一讲实际上就是上两节课的混合加密过程，用到了签名和密钥交换，只是用TLS协议给标准化了。<br><br>随机数交换其实就是密钥的交换，在tls协议里更加具体，前两节偏重于理论。","user_name":"作者回复","user_name_real":"罗剑锋","uid":"1181974","ctime":1615983579,"ip_address":"","comment_id":283657,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1615873321","product_id":100029001,"comment_content":"老师你好，有点迷糊了，上一讲和这一讲有点断节了，这一讲的链接过程中，没有上一讲的内容啊，反而变成了随机数的交换","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":517103,"discussion_content":"这一讲实际上就是上两节课的混合加密过程，用到了签名和密钥交换，只是用TLS协议给标准化了。\n\n随机数交换其实就是密钥的交换，在tls协议里更加具体，前两节偏重于理论。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1615983579,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":283348,"user_name":"小童","can_delete":false,"product_type":"c1","uid":1763395,"ip_address":"","ucode":"300444B520E79D","user_header":"https://static001.geekbang.org/account/avatar/00/1a/e8/43/f9c0faed.jpg","comment_is_top":false,"comment_ctime":1615719404,"is_pvip":false,"replies":[{"id":"102797","content":"ecdhe算法用的是临时公私钥，而这些信息的签名要用自己的私钥，与密钥交换算法无关。<br><br>可以是ecdsa或者rsa算法。","user_name":"作者回复","user_name_real":"罗剑锋","uid":"1181974","ctime":1615765271,"ip_address":"","comment_id":283348,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1615719404","product_id":100029001,"comment_content":"接下来是一个关键的操作，因为服务器选择了 ECDHE 算法，所以它会在证书后发送“Server Key Exchange”消息，里面是椭圆曲线的公钥（Server Params），用来实现密钥交换算法，再加上自己的私钥签名认证。 老师这个私钥是 ECDHE非对称加密算法生成的私钥吗？","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":517002,"discussion_content":"ecdhe算法用的是临时公私钥，而这些信息的签名要用自己的私钥，与密钥交换算法无关。\n\n可以是ecdsa或者rsa算法。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1615765271,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":283299,"user_name":"小童","can_delete":false,"product_type":"c1","uid":1763395,"ip_address":"","ucode":"300444B520E79D","user_header":"https://static001.geekbang.org/account/avatar/00/1a/e8/43/f9c0faed.jpg","comment_is_top":false,"comment_ctime":1615697357,"is_pvip":false,"replies":[{"id":"102798","content":"是的，可以参考答疑篇。","user_name":"作者回复","user_name_real":"罗剑锋","uid":"1181974","ctime":1615765287,"ip_address":"","comment_id":283299,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1615697357","product_id":100029001,"comment_content":"老师，那个根据ECDHE计算pre-master 是通过ECDHE的公钥(密码交换参数里面的公钥)计算的吗？","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":516983,"discussion_content":"是的，可以参考答疑篇。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1615765287,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":283289,"user_name":"小童","can_delete":false,"product_type":"c1","uid":1763395,"ip_address":"","ucode":"300444B520E79D","user_header":"https://static001.geekbang.org/account/avatar/00/1a/e8/43/f9c0faed.jpg","comment_is_top":false,"comment_ctime":1615692101,"is_pvip":false,"replies":[{"id":"102799","content":"可参考答疑篇。","user_name":"作者回复","user_name_real":"罗剑锋","uid":"1181974","ctime":1615765302,"ip_address":"","comment_id":283289,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1615692101","product_id":100029001,"comment_content":"密码套件在握手协议中作用:ECDHE 用来计算随机pre-master密钥。这个题目还真是不知道！","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":516981,"discussion_content":"可参考答疑篇。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1615765302,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":283279,"user_name":"小童","can_delete":false,"product_type":"c1","uid":1763395,"ip_address":"","ucode":"300444B520E79D","user_header":"https://static001.geekbang.org/account/avatar/00/1a/e8/43/f9c0faed.jpg","comment_is_top":false,"comment_ctime":1615685641,"is_pvip":false,"replies":[{"id":"102800","content":"good。","user_name":"作者回复","user_name_real":"罗剑锋","uid":"1181974","ctime":1615765341,"ip_address":"","comment_id":283279,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1615685641","product_id":100029001,"comment_content":"RSA握手过程:<br>1. 客户端向服务端发送Client Hello+Clinet random+密码套件列表;<br>2. 服务端接收到后向客户端发送Server Hello +Server random + 确定密码套件;<br>3. 服务端向客户端发送 证书;<br>4.服务端发送Server Hellon done;<br>5. 客户端验证证书和签名，确认服务端身份;<br>6. 客户端随机生成pre-master;<br>7.通过加密算法加密pre-master发送给服务端;<br>8.服务端根据 client random +server random+pre-master 进行计算出主密钥;<br>9. 客户端也是一样根据随机数和pre-master 计算出主密钥。<br>10.客户端发送 change cipher spec通知服务端后面通信 加密通信,发送finshed.结束握手。<br>11.服务端也一样通过发送change cipher spec 通知客户端 后面通信都是加密通信，发送finshed 结束握手。","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":516977,"discussion_content":"good。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1615765341,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":281448,"user_name":"Action","can_delete":false,"product_type":"c1","uid":1239234,"ip_address":"","ucode":"FFFD1537C6BB3C","user_header":"https://static001.geekbang.org/account/avatar/00/12/e8/c2/77a413a7.jpg","comment_is_top":false,"comment_ctime":1614753146,"is_pvip":false,"replies":[{"id":"102176","content":"tls必须在tcp握手之后，看图里就是最上面的syn、ack。","user_name":"作者回复","user_name_real":"罗剑锋","uid":"1181974","ctime":1614759571,"ip_address":"","comment_id":281448,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1614753146","product_id":100029001,"comment_content":"老师 tls握手是不是在tcp建立连接之前呀，看您画的ECDHE 握手过程 感觉是先进行三次握手，然后再进行tls握手呢？","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":516403,"discussion_content":"tls必须在tcp握手之后，看图里就是最上面的syn、ack。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1614759571,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":281222,"user_name":"BoyiKia","can_delete":false,"product_type":"c1","uid":1983680,"ip_address":"","ucode":"D37541B4451D6B","user_header":"https://static001.geekbang.org/account/avatar/00/1e/44/c0/cd2cd082.jpg","comment_is_top":false,"comment_ctime":1614649568,"is_pvip":false,"replies":[{"id":"102141","content":"是的，但这样的理解只适用于RSA。<br><br>最好还是要理解握手密钥交换的本质，关键是pre-master的产生。","user_name":"作者回复","user_name_real":"罗剑锋","uid":"1181974","ctime":1614684949,"ip_address":"","comment_id":281222,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1614649568","product_id":100029001,"comment_content":"老师你好，没有回复的功能。只能再问一次。<br> <br>对于您上条和我说的 在 RSA 算法交换的 preMaster 是客服端生成的随机数 ，那么我可以理解成  在这种形式下。生成最后的会话密钥，需要  2个客服端随机数 (clienthello 分组里面的+preMaster) 和1个服务器随机数吗。","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":516331,"discussion_content":"是的，但这样的理解只适用于RSA。\n\n最好还是要理解握手密钥交换的本质，关键是pre-master的产生。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1614684949,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":281213,"user_name":"BoyiKia","can_delete":false,"product_type":"c1","uid":1983680,"ip_address":"","ucode":"D37541B4451D6B","user_header":"https://static001.geekbang.org/account/avatar/00/1e/44/c0/cd2cd082.jpg","comment_is_top":false,"comment_ctime":1614647865,"is_pvip":false,"replies":[{"id":"102105","content":"<br>1.可以参考后面的答疑篇，这个是由ECDHE算法决定的，使用参数来生成pre-master。<br><br>2.rsa密钥交换比较简单，pre-master就是一个随机数，程序自己内部生成就可以了。","user_name":"作者回复","user_name_real":"罗剑锋","uid":"1181974","ctime":1614648627,"ip_address":"","comment_id":281213,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1614647865","product_id":100029001,"comment_content":"老师  请问下。<br> <br>1.  在使用ECDH密钥交换算法的过程中，为啥没有  用公钥加密参数  传到接收端，接收端用私钥解密的过程。   <br> <br>比如  RSA  交换的时候，premaster  就有这个过程。<br><br> 2.RSA 密钥交换时，这个preMaster  是如何生成的呢？","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":516327,"discussion_content":"\n1.可以参考后面的答疑篇，这个是由ECDHE算法决定的，使用参数来生成pre-master。\n\n2.rsa密钥交换比较简单，pre-master就是一个随机数，程序自己内部生成就可以了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1614648627,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":278838,"user_name":"Mr小公熊","can_delete":false,"product_type":"c1","uid":1624497,"ip_address":"","ucode":"D3A170E3DA03F7","user_header":"https://static001.geekbang.org/account/avatar/00/18/c9/b1/ef6e5707.jpg","comment_is_top":false,"comment_ctime":1613380472,"is_pvip":false,"replies":[{"id":"101375","content":"这个属于协议的约定，理论上false start是与加密算法无关的。","user_name":"作者回复","user_name_real":"罗剑锋","uid":"1181974","ctime":1613517779,"ip_address":"","comment_id":278838,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1613380472","product_id":100029001,"comment_content":"有个问题十分不解，为啥使用ECDHE密钥交换算法就能不等server端的ACK 直接加密要送http请求，而RSA密钥交换算法就得等到server端返回了ACK才能发起http请求呢?","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":515525,"discussion_content":"这个属于协议的约定，理论上false start是与加密算法无关的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1613517779,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":275246,"user_name":"牛","can_delete":false,"product_type":"c1","uid":2382521,"ip_address":"","ucode":"12C46025BBA2D3","user_header":"","comment_is_top":false,"comment_ctime":1611407811,"is_pvip":false,"replies":[{"id":"99926","content":"这个是传统的rsa交换秘钥的过程，在26讲里也讲过了。<br><br>这个不是协议的版本问题，而是选择的密钥交换算法问题。","user_name":"作者回复","user_name_real":"罗剑锋","uid":"1181974","ctime":1611536981,"ip_address":"","comment_id":275246,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1611407811","product_id":100029001,"comment_content":"我看到一个版本说pre-master是浏览器端随机生成的，然后用公钥加密发送给服务器端，等到服务器确认收到pre-master后，两端各自生成对称密钥，接着进行业务会话。<br>请问老师这是旧版本的HTTPS协议吗？如果是，是什么版本呢？","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":514280,"discussion_content":"这个是传统的rsa交换秘钥的过程，在26讲里也讲过了。\n\n这个不是协议的版本问题，而是选择的密钥交换算法问题。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1611536981,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":254416,"user_name":"打死也不说","can_delete":false,"product_type":"c1","uid":2148536,"ip_address":"","ucode":"3BAC355BCEE397","user_header":"https://static001.geekbang.org/account/avatar/00/20/c8/b8/14a35cda.jpg","comment_is_top":false,"comment_ctime":1603113617,"is_pvip":false,"replies":[{"id":"92875","content":"rsa没有Server Key Exchange，签名是在server hello等消息里，可以用wireshark打开抓包仔细看看。","user_name":"作者回复","user_name_real":"罗剑锋","uid":"1181974","ctime":1603156659,"ip_address":"","comment_id":254416,"utype":1}],"discussion_count":3,"race_medal":0,"score":"1603113617","product_id":100029001,"comment_content":"服务端的签名是在Server Key Exchange这个消息内吗？如果使用rsa没有这个消息怎么办。","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":507385,"discussion_content":"rsa没有Server Key Exchange，签名是在server hello等消息里，可以用wireshark打开抓包仔细看看。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1603156659,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":316094,"discussion_content":"服务器私钥对server hello的消息做签名认证，防止篡改。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1603358225,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2148536,"avatar":"https://static001.geekbang.org/account/avatar/00/20/c8/b8/14a35cda.jpg","nickname":"打死也不说","note":"","ucode":"3BAC355BCEE397","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":314416,"discussion_content":"看完握手过程没有明白服务端的私钥会加密什么信息，如果服务端没有使用私钥加密消息，岂不是没有所谓的签名信息？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1603156028,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":254396,"user_name":"打死也不说","can_delete":false,"product_type":"c1","uid":2148536,"ip_address":"","ucode":"3BAC355BCEE397","user_header":"https://static001.geekbang.org/account/avatar/00/20/c8/b8/14a35cda.jpg","comment_is_top":false,"comment_ctime":1603110525,"is_pvip":false,"replies":[{"id":"92873","content":"公钥用来验证私钥，也就是服务器是身份，还有解密私钥加密的数据，后续通讯就不用了。<br><br>可以再看一下前面的非对称加密算法的讲解。","user_name":"作者回复","user_name_real":"罗剑锋","uid":"1181974","ctime":1603155743,"ip_address":"","comment_id":254396,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1603110525","product_id":100029001,"comment_content":"请问证书里面的公钥在握手以及后续通讯过程的作用是什么？","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":507376,"discussion_content":"公钥用来验证私钥，也就是服务器是身份，还有解密私钥加密的数据，后续通讯就不用了。\n\n可以再看一下前面的非对称加密算法的讲解。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1603155743,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":247347,"user_name":" 尿布","can_delete":false,"product_type":"c1","uid":1476323,"ip_address":"","ucode":"D1C8BDA7540962","user_header":"https://static001.geekbang.org/account/avatar/00/16/86/e3/a31f6869.jpg","comment_is_top":false,"comment_ctime":1599664515,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1599664515","product_id":100029001,"comment_content":"TLS中记录协议原本定义由压缩方式，但后来发现存在安全漏洞（CRIME攻击），所以现在这个字段总司NULL，即不压缩","like_count":0},{"had_liked":false,"id":242709,"user_name":"may_huang","can_delete":false,"product_type":"c1","uid":1451623,"ip_address":"","ucode":"EAF989F18FC109","user_header":"https://static001.geekbang.org/account/avatar/00/16/26/67/c3d90f46.jpg","comment_is_top":false,"comment_ctime":1597821336,"is_pvip":true,"replies":[{"id":"89535","content":"就像它的名字，Master Secret是“主密钥”，还会派生出其他的密钥来承担会话密钥的责任，这是为了避免使用一个固定密钥通信带来的安全隐患。<br><br>具体可以再参考rfc。","user_name":"作者回复","user_name_real":"罗剑锋","uid":"1181974","ctime":1597884948,"ip_address":"","comment_id":242709,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1597821336","product_id":100029001,"comment_content":"老师请问Master Secret是后续对称加密中的会话密钥吗？","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":504080,"discussion_content":"就像它的名字，Master Secret是“主密钥”，还会派生出其他的密钥来承担会话密钥的责任，这是为了避免使用一个固定密钥通信带来的安全隐患。\n\n具体可以再参考rfc。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1597884948,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":236958,"user_name":"wimmy魏米","can_delete":false,"product_type":"c1","uid":1221563,"ip_address":"","ucode":"728B1845529CD4","user_header":"https://static001.geekbang.org/account/avatar/00/12/a3/bb/534f3642.jpg","comment_is_top":false,"comment_ctime":1595604006,"is_pvip":false,"replies":[{"id":"87586","content":"这个就是客户端实现的问题了，它需要在tls通信时调用底层接口去读取u盾里的证书，服务器会发出要求客户端证书的请求。","user_name":"作者回复","user_name_real":"罗剑锋","uid":"1181974","ctime":1595665511,"ip_address":"","comment_id":236958,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1595604006","product_id":100029001,"comment_content":"老师，您好。关于双向验证里面提到的u盾的问题，特别像网银登陆。浏览器是如何读取u盾里面的数字证书的？ 然后又是如何知道（在客户端可能存在多个证书的情况下），要把u盾里面的数字证书发给服务器","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":502263,"discussion_content":"这个就是客户端实现的问题了，它需要在tls通信时调用底层接口去读取u盾里的证书，服务器会发出要求客户端证书的请求。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1595665511,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":235763,"user_name":"叶紫真","can_delete":false,"product_type":"c1","uid":1547763,"ip_address":"","ucode":"9CD7567FDB7F1F","user_header":"https://static001.geekbang.org/account/avatar/00/17/9d/f3/3f6dd32b.jpg","comment_is_top":false,"comment_ctime":1595174965,"is_pvip":false,"replies":[{"id":"87064","content":"可以看后面的答疑篇，Pre-Master是用ecdhe算法交换的参数产生的，而不是直接明文传输，即使被黑客截获之前的明文，也是无法算出Pre-Master。","user_name":"作者回复","user_name_real":"罗剑锋","uid":"1181974","ctime":1595207534,"ip_address":"","comment_id":235763,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1595174965","product_id":100029001,"comment_content":"“Change Cipher Spec”之前传输的都是明文，那不是“Key Exchange”消息交换“Pre-Master”也会被黑客截获了？老师到底有没有认真备课额，怎么让人看不懂呢","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":501826,"discussion_content":"可以看后面的答疑篇，Pre-Master是用ecdhe算法交换的参数产生的，而不是直接明文传输，即使被黑客截获之前的明文，也是无法算出Pre-Master。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1595207534,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":235759,"user_name":"叶紫真","can_delete":false,"product_type":"c1","uid":1547763,"ip_address":"","ucode":"9CD7567FDB7F1F","user_header":"https://static001.geekbang.org/account/avatar/00/17/9d/f3/3f6dd32b.jpg","comment_is_top":false,"comment_ctime":1595174373,"is_pvip":false,"replies":[{"id":"87062","content":"这一节课主要是讲TLS的握手过程，具体的算法细节就省略了一些，见谅。<br><br>1.ecdhe算法可以看后面的答疑篇。<br><br>2.这些算法都是在握手的过程中协商确定的，也就是密码套件。客户端提供一个支持的列表，然后服务器自己选其中的一个。","user_name":"作者回复","user_name_real":"罗剑锋","uid":"1181974","ctime":1595207463,"ip_address":"","comment_id":235759,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1595174373","product_id":100029001,"comment_content":"没有说清楚怎样用非对称算法加密对称算法的具体实现，也没有说明哪些是在做非对称算法加密对称算法，以及怎么传递加密后的对称算法的","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":501822,"discussion_content":"这一节课主要是讲TLS的握手过程，具体的算法细节就省略了一些，见谅。\n\n1.ecdhe算法可以看后面的答疑篇。\n\n2.这些算法都是在握手的过程中协商确定的，也就是密码套件。客户端提供一个支持的列表，然后服务器自己选其中的一个。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1595207463,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":217180,"user_name":"海盗船长","can_delete":false,"product_type":"c1","uid":1363634,"ip_address":"","ucode":"ECB28BA21A4113","user_header":"https://static001.geekbang.org/account/avatar/00/14/ce/b2/1f914527.jpg","comment_is_top":false,"comment_ctime":1589433377,"is_pvip":false,"replies":[{"id":"80301","content":"签名私钥必然是通信的双方持有，单向认证通常就是服务器端的私钥，它在本地生成，不对外公开，对应的公钥被ca认证，打包成证书，在握手的时候传给客户端。<br><br>可以再看一下握手过程的示意图。","user_name":"作者回复","user_name_real":"chrono","uid":"1181974","ctime":1589433908,"ip_address":"","comment_id":217180,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1589433377","product_id":100029001,"comment_content":"老师你好，请教个问题。比如选择的密码套件：比如TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256，从文章中发现是用RSA的server params做签名。请问这里的私钥是在哪里生成的，是CA还是服务端的私钥？对应的公钥在哪里？","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":495064,"discussion_content":"签名私钥必然是通信的双方持有，单向认证通常就是服务器端的私钥，它在本地生成，不对外公开，对应的公钥被ca认证，打包成证书，在握手的时候传给客户端。\n\n可以再看一下握手过程的示意图。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1589433908,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":213775,"user_name":"BoyiKia","can_delete":false,"product_type":"c1","uid":1983680,"ip_address":"","ucode":"D37541B4451D6B","user_header":"https://static001.geekbang.org/account/avatar/00/1e/44/c0/cd2cd082.jpg","comment_is_top":false,"comment_ctime":1588558854,"is_pvip":false,"replies":[{"id":"79229","content":"公钥是和证书绑在一起的，黑客不能伪造CA发的证书，也就无法替换公钥。","user_name":"作者回复","user_name_real":"chrono","uid":"1181974","ctime":1588576478,"ip_address":"","comment_id":213775,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1588558854","product_id":100029001,"comment_content":"老师，证书是为了证明服务器公钥的正确性。但是，ssl握手的时候，服务器 会先发证书，然后发自己的公钥。 如果黑客，抓到了证书。然后给客服端发正确证书，再发黑客公钥。这种情况，怎么解决呢？","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":493868,"discussion_content":"公钥是和证书绑在一起的，黑客不能伪造CA发的证书，也就无法替换公钥。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1588576478,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":213597,"user_name":"好好好","can_delete":false,"product_type":"c1","uid":1546855,"ip_address":"","ucode":"EE1878ADC840B6","user_header":"https://static001.geekbang.org/account/avatar/00/17/9a/67/73f384f9.jpg","comment_is_top":false,"comment_ctime":1588486276,"is_pvip":false,"replies":[{"id":"79172","content":"混合加密的关键是交换密钥，而交换密钥的方式有很多。<br><br>前面说的加密会话密钥传递是一种方式，而TLS里的交换参数再生成密钥是另一种方式。<br><br>只要是通信的双方用非对称算法来安全地生成对称算法密钥，就是混合加密。","user_name":"作者回复","user_name_real":"chrono","uid":"1181974","ctime":1588487300,"ip_address":"","comment_id":213597,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1588486276","product_id":100029001,"comment_content":"之前说的混合加密是把会话秘钥用非对称传递过去，但是现在好像是两边自己各生成会话秘钥，这还是混合加密吗，希望老师解答一下。","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":493821,"discussion_content":"混合加密的关键是交换密钥，而交换密钥的方式有很多。\n\n前面说的加密会话密钥传递是一种方式，而TLS里的交换参数再生成密钥是另一种方式。\n\n只要是通信的双方用非对称算法来安全地生成对称算法密钥，就是混合加密。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1588487300,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":212413,"user_name":"zhangwei","can_delete":false,"product_type":"c1","uid":1246639,"ip_address":"","ucode":"B71CBA5311846F","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/PiajxSqBRaEIvrwfqAuRkaK8Pl2apHKFZxd5mjnFhROMNcg5qXUT4AxE2ZTTia5Hg6pmFM1vozq3vZiagJoaJ4Pyg/132","comment_is_top":false,"comment_ctime":1588121119,"is_pvip":false,"replies":[{"id":"78911","content":"看示意图，只在握手阶段使用，验证服务器的身份，后面就全用会话密钥，对称算法加密通信。","user_name":"作者回复","user_name_real":"chrono","uid":"1181974","ctime":1588123524,"ip_address":"","comment_id":212413,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1588121119","product_id":100029001,"comment_content":"老师，有个问题请帮忙解答下，数字签名是在握手协议中用到还是业务通信时用到呢？","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":493498,"discussion_content":"看示意图，只在握手阶段使用，验证服务器的身份，后面就全用会话密钥，对称算法加密通信。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1588123524,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":206060,"user_name":"张三","can_delete":false,"product_type":"c1","uid":1004092,"ip_address":"","ucode":"1155528FAE1546","user_header":"https://static001.geekbang.org/account/avatar/00/0f/52/3c/d6fcb93a.jpg","comment_is_top":false,"comment_ctime":1586782154,"is_pvip":false,"replies":[{"id":"76980","content":"是ecdhe算法的公钥，用来算出Pre-Master，不是身份认证的公钥。","user_name":"作者回复","user_name_real":"chrono","uid":"1181974","ctime":1586825416,"ip_address":"","comment_id":206060,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1586782154","product_id":100029001,"comment_content":"Client Params, Server Params 就是客户端和服务端各自的公钥啊？","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":491655,"discussion_content":"是ecdhe算法的公钥，用来算出Pre-Master，不是身份认证的公钥。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1586825416,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":202728,"user_name":"张三","can_delete":false,"product_type":"c1","uid":1004092,"ip_address":"","ucode":"1155528FAE1546","user_header":"https://static001.geekbang.org/account/avatar/00/0f/52/3c/d6fcb93a.jpg","comment_is_top":false,"comment_ctime":1586058744,"is_pvip":false,"replies":[{"id":"76042","content":"看浏览器的具体报错信息，证书无效的原因很多，比如过期、被撤销。","user_name":"作者回复","user_name_real":"chrono","uid":"1181974","ctime":1586222241,"ip_address":"","comment_id":202728,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1586058744","product_id":100029001,"comment_content":"最近刚好碰到一个https请求的问题，服务器端要求用https访问，可是浏览器显示服务器端的证书无效，而且用Apache httpclient访问也报错握手失败，客户端也手动设置了信任所有服务器端证书，不知道是哪个环节出了问题？","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":490664,"discussion_content":"看浏览器的具体报错信息，证书无效的原因很多，比如过期、被撤销。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1586222241,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":202154,"user_name":"明月","can_delete":false,"product_type":"c1","uid":1476588,"ip_address":"","ucode":"D3C649B954A519","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJayib1ZcRfOaoLsdsWZokiaO5tLAdC4uNAicQJRIVXrz9fIchib7QwXibnRrsJaoh5TUlia7faUf36g8Bw/132","comment_is_top":false,"comment_ctime":1585911579,"is_pvip":false,"replies":[{"id":"75576","content":"看示意图，各自算，得到相同的值。","user_name":"作者回复","user_name_real":"chrono","uid":"1181974","ctime":1585965147,"ip_address":"","comment_id":202154,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1585911579","product_id":100029001,"comment_content":"EDCHE是客户端和服务端都会自己分别算一次pre-master吗  还有mater","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":490520,"discussion_content":"看示意图，各自算，得到相同的值。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585965147,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":192746,"user_name":"Gasnerd","can_delete":false,"product_type":"c1","uid":1440263,"ip_address":"","ucode":"3630276571AF66","user_header":"https://static001.geekbang.org/account/avatar/00/15/fa/07/1d50f530.jpg","comment_is_top":false,"comment_ctime":1584870849,"is_pvip":false,"replies":[{"id":"73706","content":"涉及安全就会很复杂，考虑的东西很多，课程里已经是简化过了的，想要深入了解最好去看rfc。","user_name":"作者回复","user_name_real":"chrono","uid":"1181974","ctime":1584926676,"ip_address":"","comment_id":192746,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1584870849","product_id":100029001,"comment_content":"这节课信息量很大","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":488453,"discussion_content":"涉及安全就会很复杂，考虑的东西很多，课程里已经是简化过了的，想要深入了解最好去看rfc。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584926676,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":180979,"user_name":"青莲居士","can_delete":false,"product_type":"c1","uid":1374087,"ip_address":"","ucode":"DF269017EDD391","user_header":"https://static001.geekbang.org/account/avatar/00/14/f7/87/e7085d32.jpg","comment_is_top":false,"comment_ctime":1582452172,"is_pvip":false,"replies":[{"id":"70239","content":"请参考答疑篇，详细介绍了ecdhe算法。","user_name":"作者回复","user_name_real":"chrono","uid":"1181974","ctime":1582507497,"ip_address":"","comment_id":180979,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1582452172","product_id":100029001,"comment_content":"老师请问下 ECDHE、RSA 握手过程中， 浏览器、服务器 如何保证 通过 Pre-Master 、随机数C、随机数S 算出的 Master-Secret 是一样的 ？","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":484876,"discussion_content":"请参考答疑篇，详细介绍了ecdhe算法。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582507497,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":180370,"user_name":"HunterYuan","can_delete":false,"product_type":"c1","uid":1015256,"ip_address":"","ucode":"F8900C33D29AA7","user_header":"https://static001.geekbang.org/account/avatar/00/0f/7d/d8/d7c77764.jpg","comment_is_top":false,"comment_ctime":1582268781,"is_pvip":false,"replies":[{"id":"70034","content":"<br>1.对，这个命令就是用的rsa。因为非对称算法就那么几种，很容易选择。<br><br>2.可以看一下ssl&#47;tls里的密码套件，对称和非对称可以自由组合，但我建议参考前两讲，选择通用的aes和chacha，除非有其他的强制要求。<br><br>3.国密算法不在tls标准里，如果你选了那就在只能自己的小系统里用了，浏览器都使用tls，也就用不上。","user_name":"作者回复","user_name_real":"chrono","uid":"1181974","ctime":1582276577,"ip_address":"","comment_id":180370,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1582268781","product_id":100029001,"comment_content":"老师，我遇到了一个问题，不太理解，对于数据之间的加密算法如何选择呢？<br>openssl genrsa -des3 -passout pass:${name} -out ca.key 2048 <br>以上是我生成的根秘钥，这时候采用RSA，这个表明是存储秘钥算法是RSA，那么是不是说明非对称秘钥交换算法就是RSA呢？<br>还有如何选择对称加密算法呢？比如国密。这个时候是不是非对称秘钥交换算法的选择，会影响对称加密算法吗？<br>希望老师能够抽出宝贵时间作答，万分感谢。","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":484631,"discussion_content":"\n1.对，这个命令就是用的rsa。因为非对称算法就那么几种，很容易选择。\n\n2.可以看一下ssl/tls里的密码套件，对称和非对称可以自由组合，但我建议参考前两讲，选择通用的aes和chacha，除非有其他的强制要求。\n\n3.国密算法不在tls标准里，如果你选了那就在只能自己的小系统里用了，浏览器都使用tls，也就用不上。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582276577,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":176764,"user_name":"猫头鹰波波","can_delete":false,"product_type":"c1","uid":1019787,"ip_address":"","ucode":"573AC477FA869C","user_header":"https://static001.geekbang.org/account/avatar/00/0f/8f/8b/9080f1fa.jpg","comment_is_top":false,"comment_ctime":1581158731,"is_pvip":false,"replies":[{"id":"68625","content":"两端同时计算，根据算法，会得到相同的结果，可以参考一下示意图。","user_name":"作者回复","user_name_real":"chrono","uid":"1181974","ctime":1581206928,"ip_address":"","comment_id":176764,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1581158731","product_id":100029001,"comment_content":"请教下：Pre-Master的计算是在客户端完成的，还是服务端完成的呢，还是双方一起算，而且算出来的都是一样的？","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":483205,"discussion_content":"两端同时计算，根据算法，会得到相同的结果，可以参考一下示意图。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1581206928,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":172260,"user_name":"俊伟","can_delete":false,"product_type":"c1","uid":1111175,"ip_address":"","ucode":"7905B4F25637F4","user_header":"https://static001.geekbang.org/account/avatar/00/10/f4/87/644c0c5d.jpg","comment_is_top":false,"comment_ctime":1579142035,"is_pvip":true,"replies":[{"id":"66832","content":"这里指单对这个椭圆曲线的参数签名使用的是rsa+sha512，密码套件里的sha384用于消息认证和产生随机数（master secret）。","user_name":"作者回复","user_name_real":"chrono","uid":"1181974","ctime":1579150983,"ip_address":"","comment_id":172260,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1579142035","product_id":100029001,"comment_content":"老师我还有一个问题，抓包内容中，server key change中我看了server params中，有三个东西：<br>1.pubkey<br>2.Signature Algorithm: rsa_pkcs1_sha512<br>3.Signature<br>其中第二个，这里面的摘要算法是干什么用的？我看server hello 中服务器选择了TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384，这里面选择的是sha384，这个<br>server key change选择的sha512是干什么的呢？ ","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":481680,"discussion_content":"这里指单对这个椭圆曲线的参数签名使用的是rsa+sha512，密码套件里的sha384用于消息认证和产生随机数（master secret）。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579150983,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1111175,"avatar":"https://static001.geekbang.org/account/avatar/00/10/f4/87/644c0c5d.jpg","nickname":"俊伟","note":"","ucode":"7905B4F25637F4","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":136633,"discussion_content":"那就是先用rsa+sha512对server params进行摘要，然后发送报文的时候使用sha384对报文整体进行摘要计算是这个意思吧？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579153189,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":169362,"user_name":"Khirye","can_delete":false,"product_type":"c1","uid":1080985,"ip_address":"","ucode":"6C54C126FA54B8","user_header":"https://static001.geekbang.org/account/avatar/00/10/7e/99/c4302030.jpg","comment_is_top":false,"comment_ctime":1578322473,"is_pvip":false,"replies":[{"id":"65698","content":"不可否认基于私钥的私有性，即私钥保密，只能由一个人持有。<br><br>所以使用私钥签名，即保证了数据的完整性，又实现了身份认证和不可否认性，因为公钥验证签名，就可以证明使用的私钥，然后就关联证明了私钥持有人。<br><br>可以再看一下第25讲。","user_name":"作者回复","user_name_real":"chrono","uid":"1181974","ctime":1578360549,"ip_address":"","comment_id":169362,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1578322473","product_id":100029001,"comment_content":"老师您好，我想请问下，之前提到的的“不可否认”这一点具体是怎么实现的？我似乎还没有从文章中get到。感谢🙏！","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":480526,"discussion_content":"不可否认基于私钥的私有性，即私钥保密，只能由一个人持有。\n\n所以使用私钥签名，即保证了数据的完整性，又实现了身份认证和不可否认性，因为公钥验证签名，就可以证明使用的私钥，然后就关联证明了私钥持有人。\n\n可以再看一下第25讲。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578360549,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":159408,"user_name":"ddq432","can_delete":false,"product_type":"c1","uid":1131034,"ip_address":"","ucode":"C84F5727BA37B5","user_header":"https://static001.geekbang.org/account/avatar/00/11/42/1a/de91a790.jpg","comment_is_top":false,"comment_ctime":1575616849,"is_pvip":false,"replies":[{"id":"60928","content":"可参考前两讲，证书是使用ca的证书来验证是否合法的，走证书链，链的源头的自证明的根证书。<br><br>第三方也就是ca的公钥私钥是自己生成，自己签名的。著名的ca的证书都会被内置到操作系统或者浏览器里。<br><br>当然服务器也可以直接在证书链里发送根证书，但这样比较浪费带宽，一般不这样做。","user_name":"作者回复","user_name_real":"chrono","uid":"1181974","ctime":1575623106,"ip_address":"","comment_id":159408,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1575616849","product_id":100029001,"comment_content":"有一点不是很明白，服务器把证书给客户端之后，客户端是依据什么来判断 这个证书是合法的证书？它是根据什么匹配它自己是哪一家ca颁发的呢？还有，服务器的公钥是在这个证书里面的吧？只不过是被第三方的认为可靠的机构进用他们自己的私钥加密了，那第三方的公钥从哪里得到呢，是被直接内置到客户端里面的吗？我比较笨，希望老师解惑","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":477043,"discussion_content":"可参考前两讲，证书是使用ca的证书来验证是否合法的，走证书链，链的源头的自证明的根证书。\n\n第三方也就是ca的公钥私钥是自己生成，自己签名的。著名的ca的证书都会被内置到操作系统或者浏览器里。\n\n当然服务器也可以直接在证书链里发送根证书，但这样比较浪费带宽，一般不这样做。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1575623106,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":146614,"user_name":"book尾汁","can_delete":false,"product_type":"c1","uid":1446375,"ip_address":"","ucode":"AE2B8DFC643ACC","user_header":"https://static001.geekbang.org/account/avatar/00/16/11/e7/044a9a6c.jpg","comment_is_top":false,"comment_ctime":1572583413,"is_pvip":true,"replies":[{"id":"56693","content":"<br>1.可参见答疑篇，详细介绍了ECDHE算法。<br><br>2.master key顾名思义，只是主密钥，还会再派生出多个用途各不相同的密钥，例如客户端发送数据用client_write_key，这点课程里简单提了一下。<br><br>3.理解的有点小偏差，对称密钥，也就是会话密钥是由master key生成的，而master key是由之前密钥交换过程中的三个随机数生成的。前两个随机数公开，而第三个随机数Pre-Master是由ecdhe算法保证了交换安全。","user_name":"作者回复","user_name_real":"chrono","uid":"1181974","ctime":1572592420,"ip_address":"","comment_id":146614,"utype":1}],"discussion_count":3,"race_medal":0,"score":"1572583413","product_id":100029001,"comment_content":"使用ECDHE-RSA-AES256-GCM-SHA384加密套件进行TLS握手的过程<br>1 客户端向服务器端发送clienthello请求，请求的内容里包括客户端支持的TLS版本号、支持的加密套件列表、客户端随机数<br>2 收到客户端的请求后，服务器端向客户端发送serverhello请求，请求里包括服务器选择的TLS版本号、选择的加密套件、服务器端随机数。<br>3 服务器端接着向客户端发送自己的证书链<br>4 服务器向可客户端发送exchangekey请求，因为选择的的套件的密钥交换算法是ECDHE，所以请求里包括 密钥交换算法的椭圆曲线的名称、基点信息、以及交换算法所需要的一个参数公钥serverparam，然后服务器会对上面这些信息使用摘要算法SHA384做哈希，然后对哈希结果使用证书里的公钥对应的私钥进行加密，即签名来证实自己的身份<br>5 服务器发送server hello done<br>6客户端收到服务器的证书后会查找本地的根证书，从证书链的顶级，逐级向下验证，验证通过后，会向服务器端发送client key exchange请求，请求里的内容是椭圆曲线算法需要的另一个公钥client paramsEDCH<br>7 客户端发送change cipher spec接着通过 ECDHE的两个算法以及两个param算出 pre-master secret，并同过pre-master secret以及两个随机数，算出master-key，以及其他会话传输的密钥<br>8 客户端发送finished，并对之前发过的信息进行摘要，并使用master-key加密？<br>9 服务器收到请求后发送change cipher spec，会通过ECDHE算法以及两个param算出一个pre-master secret，然后利用客户端随机数、服务器随机数、pre-master secret得到server secret以及一系列得其他会话密钥。<br>10 服务器发送finished，并对之前发送的消息做摘要算法，并使用master-key加密<br><br>自此TLS握手阶段就完成了，后面使用master-key加密后的http协议进行通信<br><br>有三个疑问：<br>1 ， EDCHE算法的问题，都是两个参数，以及一个函数，而且都是明文传递的，为什么黑客得不到pre-master secret，难道还要其中一个param对应得私钥才行？<br>2    后面的http正文的加密是使用master-key吗，master-key是对称加密算法的密钥？<br>3    我们只选择了套件，对称加密的密钥是通过条件里的对称加密算法根据两个随机数以及对称加密赛算法生成的？","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":472939,"discussion_content":"\n1.可参见答疑篇，详细介绍了ECDHE算法。\n\n2.master key顾名思义，只是主密钥，还会再派生出多个用途各不相同的密钥，例如客户端发送数据用client_write_key，这点课程里简单提了一下。\n\n3.理解的有点小偏差，对称密钥，也就是会话密钥是由master key生成的，而master key是由之前密钥交换过程中的三个随机数生成的。前两个随机数公开，而第三个随机数Pre-Master是由ecdhe算法保证了交换安全。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1572592420,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":212129,"discussion_content":"抱歉才看到，因为极客的系统好像不反馈这种嵌套回复。我没有研究过流媒体协议，暂时帮不了你。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584937626,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1446375,"avatar":"https://static001.geekbang.org/account/avatar/00/16/11/e7/044a9a6c.jpg","nickname":"book尾汁","note":"","ucode":"AE2B8DFC643ACC","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":42316,"discussion_content":"谢谢老师的指点，昨天面试岗位有要求熟悉https，当时感觉补了一下，老师有开一门流媒体协议课的想法吗，感觉老师讲的深入浅出，很通俗易懂","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1572632380,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":146385,"user_name":"听雨","can_delete":false,"product_type":"c1","uid":1254493,"ip_address":"","ucode":"252754F9FCFF0C","user_header":"https://static001.geekbang.org/account/avatar/00/13/24/5d/65e61dcb.jpg","comment_is_top":false,"comment_ctime":1572511316,"is_pvip":false,"replies":[{"id":"56504","content":"可以参考一下第24讲和第42讲，非对称加密用于混合加密系统，安全地交换会话密钥。<br>","user_name":"作者回复","user_name_real":"chrono","uid":"1181974","ctime":1572512781,"ip_address":"","comment_id":146385,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1572511316","product_id":100029001,"comment_content":"老师，文中说的“椭圆曲线的公钥（Server Params），用来实现密钥交换算法”这句话是什么意思呀，公钥不是加密数据吗，怎么还有实现密钥交换算法的功能呢","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":472835,"discussion_content":"可以参考一下第24讲和第42讲，非对称加密用于混合加密系统，安全地交换会话密钥。\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1572512781,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":143786,"user_name":"子杨","can_delete":false,"product_type":"c1","uid":1236803,"ip_address":"","ucode":"EA7555EEE6DECE","user_header":"https://static001.geekbang.org/account/avatar/00/12/df/43/1aa8708a.jpg","comment_is_top":false,"comment_ctime":1571792167,"is_pvip":false,"replies":[{"id":"55494","content":"课程里的pcap抓包就是实际的例子，不过是在实验环境里，用wireshark就可以看。<br><br>可以自己在实验环境访问https网址，然后抓包慢慢分析。<br><br>真实的互联网页面会有很多链接，流量很杂，抓出来的包反而不太容易看出来过程。","user_name":"作者回复","user_name_real":"chrono","uid":"1181974","ctime":1571792667,"ip_address":"","comment_id":143786,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1571792167","product_id":100029001,"comment_content":"这里面确实不太好理解，老师可不可以用一个实际上网的例子来说明一下？","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":471687,"discussion_content":"课程里的pcap抓包就是实际的例子，不过是在实验环境里，用wireshark就可以看。\n\n可以自己在实验环境访问https网址，然后抓包慢慢分析。\n\n真实的互联网页面会有很多链接，流量很杂，抓出来的包反而不太容易看出来过程。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571792667,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":141768,"user_name":"- shadow -","can_delete":false,"product_type":"c1","uid":1676738,"ip_address":"","ucode":"97B68447A75354","user_header":"https://static001.geekbang.org/account/avatar/00/19/95/c2/afbb3f61.jpg","comment_is_top":false,"comment_ctime":1571220917,"is_pvip":false,"replies":[{"id":"54791","content":"不用事先安装，在用浏览器的时候选择允许访问就行了。","user_name":"作者回复","user_name_real":"chrono","uid":"1181974","ctime":1571273946,"ip_address":"","comment_id":141768,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1571220917","product_id":100029001,"comment_content":"请问老师，在做这个实验的时候，是需要先在系统中安装上一讲中的证书吗？证书的文件是哪个？","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":470878,"discussion_content":"不用事先安装，在用浏览器的时候选择允许访问就行了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571273946,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":140754,"user_name":"A2","can_delete":false,"product_type":"c1","uid":1500544,"ip_address":"","ucode":"33B07C2B0E2D3F","user_header":"","comment_is_top":false,"comment_ctime":1571043347,"is_pvip":false,"replies":[{"id":"54542","content":"这个我也能理解，安全篇涉及的都是密码学，概念很多，不是太好理解。<br><br>我想想是否能够再换一种更轻松点的方式来讲解，欢迎大家提意见，有机会我再更新。","user_name":"作者回复","user_name_real":"chrono","uid":"1181974","ctime":1571100833,"ip_address":"","comment_id":140754,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1571043347","product_id":100029001,"comment_content":"想说老师的文章明显没有前两部分好了！ 很多东西都是直接搬概念<br>因为看老师前几篇文章可以感觉出老师思路上的用心良苦<br>安全部分比之前更枯燥，看完文章，直接感受也是枯燥。","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":470540,"discussion_content":"这个我也能理解，安全篇涉及的都是密码学，概念很多，不是太好理解。\n\n我想想是否能够再换一种更轻松点的方式来讲解，欢迎大家提意见，有机会我再更新。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571100833,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":134828,"user_name":"蚂蚁内推+v","can_delete":false,"product_type":"c1","uid":1050508,"ip_address":"","ucode":"24B10AEE54B3FD","user_header":"https://static001.geekbang.org/account/avatar/00/10/07/8c/0d886dcc.jpg","comment_is_top":false,"comment_ctime":1568940678,"is_pvip":false,"replies":[{"id":"51736","content":"这个是由ECDHE或者说是DH算法的特性决定的，因为其中涉及了比较复杂的数学原理，不太好一下解释清楚，想了解它的细节可以搜一下DH算法相关的资料，有很多。<br><br>但我觉得除非是专门搞密码学，其实没有太大必要去了解。<br><br>已经有同学“彩色的沙漠”贴出了简单的描述，你可以参考。","user_name":"作者回复","user_name_real":"chrono","uid":"1181974","ctime":1568951146,"ip_address":"","comment_id":134828,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1568940678","product_id":100029001,"comment_content":"老师好，您回答其他同学问题，<br>  client key EXchange已经由密钥交换算法保证了安全，不需要做加密传输<br><br>这个不是很理解，希望老师能给详细解答一下！   ","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":467913,"discussion_content":"这个是由ECDHE或者说是DH算法的特性决定的，因为其中涉及了比较复杂的数学原理，不太好一下解释清楚，想了解它的细节可以搜一下DH算法相关的资料，有很多。\n\n但我觉得除非是专门搞密码学，其实没有太大必要去了解。\n\n已经有同学“彩色的沙漠”贴出了简单的描述，你可以参考。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1568951146,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":134191,"user_name":"蚂蚁内推+v","can_delete":false,"product_type":"c1","uid":1050508,"ip_address":"","ucode":"24B10AEE54B3FD","user_header":"https://static001.geekbang.org/account/avatar/00/10/07/8c/0d886dcc.jpg","comment_is_top":false,"comment_ctime":1568772731,"is_pvip":false,"replies":[{"id":"51473","content":"我的意思是中间人不持有服务器证书对应的私钥，不能伪造服务器的签名，所以客户端用证书就可以验证服务器是否是真实的。","user_name":"作者回复","user_name_real":"chrono","uid":"1181974","ctime":1568783391,"ip_address":"","comment_id":134191,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1568772731","product_id":100029001,"comment_content":"老师好，引用您之前给其他同学的留言<br>“如果客户端没有私钥认证，中间人可以伪装成客户端，但它没有服务器证书，不能伪装成服务器，所以客户端可以通过证书认证鉴别出中间人”     <br>问题：中间人可以把服务器返回给他的证书在发给客户端啊，这种客户端如何鉴别？","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":467647,"discussion_content":"我的意思是中间人不持有服务器证书对应的私钥，不能伪造服务器的签名，所以客户端用证书就可以验证服务器是否是真实的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1568783391,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":125514,"user_name":"Geek_fc5260","can_delete":false,"product_type":"c1","uid":1573098,"ip_address":"","ucode":"14878DA19DF6E1","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJyibojtJCnzAJtFibmyps3moFm9icxiccMFEaRiavbR5mcPtuIowmGonib2vpkWibVVO7US4CMBW8umb7WA/132","comment_is_top":false,"comment_ctime":1566197649,"is_pvip":false,"replies":[{"id":"46164","content":"不要着急，慢慢看，从流程图入手理解比较好。","user_name":"作者回复","user_name_real":"chrono","uid":"1181974","ctime":1566260137,"ip_address":"","comment_id":125514,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1566197649","product_id":100029001,"comment_content":"前端小白看完一遍还是有点迷糊，┭┮﹏┭┮","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":463591,"discussion_content":"不要着急，慢慢看，从流程图入手理解比较好。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566260137,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":125283,"user_name":"安排","can_delete":false,"product_type":"c1","uid":1260026,"ip_address":"","ucode":"F78CFA9624CAEF","user_header":"https://static001.geekbang.org/account/avatar/00/13/39/fa/a7edbc72.jpg","comment_is_top":false,"comment_ctime":1566138141,"is_pvip":false,"replies":[{"id":"46197","content":"私钥的签名对象是服务器发送的数据，因为在rfc里表述的比较复杂，所以我就给简化了。<br><br>想要知道详细的签名过程可以参考rfc。","user_name":"作者回复","user_name_real":"chrono","uid":"1181974","ctime":1566262304,"ip_address":"","comment_id":125283,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1566138141","product_id":100029001,"comment_content":"文中说的服务器的私钥签名认证，这个具体是对啥信息做的加密啊？上一讲是说先取摘要，再用私钥加密，这里的原始数据是啥啊？就是说对啥取得摘要啊？文中感觉没说清楚。","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":463510,"discussion_content":"私钥的签名对象是服务器发送的数据，因为在rfc里表述的比较复杂，所以我就给简化了。\n\n想要知道详细的签名过程可以参考rfc。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566262304,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":122750,"user_name":"Geek_cc73f2","can_delete":false,"product_type":"c1","uid":1426946,"ip_address":"","ucode":"364AD3A7AFFCF5","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/aiaSrhS44dUCfpycicJ6UWANe3aEkdibMFOOX2oXRo0amNwYxQM1dCKZpzfMdy3Z2ibwSSPu6ibFxnTvuDGzKiaLIClA/132","comment_is_top":false,"comment_ctime":1565511481,"is_pvip":false,"replies":[{"id":"45066","content":"随机数与密码套件无关，密码套件只是用来交换pre-master和验证身份。<br><br>你可以看一下master secret的生成公式，就是三个随机数，再用摘要算法，不涉及密钥交换算法和签名算法。","user_name":"作者回复","user_name_real":"chrono","uid":"1181974","ctime":1565571347,"ip_address":"","comment_id":122750,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1565511481","product_id":100029001,"comment_content":"老师，你好，有个问题想问下，为什么客户端一开始tls握手的时候就发了个随机数呢，这个随机数不应该是服务端确定用那个加密套件之后才能确定的吗，一开始就发一个随机数，会不会和后面加密套件里面的算法不一致呢，感谢。","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":462387,"discussion_content":"随机数与密码套件无关，密码套件只是用来交换pre-master和验证身份。\n\n你可以看一下master secret的生成公式，就是三个随机数，再用摘要算法，不涉及密钥交换算法和签名算法。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1565571347,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":121955,"user_name":"猫王者","can_delete":false,"product_type":"c1","uid":1248924,"ip_address":"","ucode":"224826F4BA8443","user_header":"https://static001.geekbang.org/account/avatar/00/13/0e/9c/cb9da823.jpg","comment_is_top":false,"comment_ctime":1565256752,"is_pvip":false,"replies":[{"id":"44854","content":"ecdhe算法是专门为交换密钥设计的，即使公钥被获取也是无法计算得到pre-master，具体的算法细节一下子讲不清楚，可以找一下相关的资料。","user_name":"作者回复","user_name_real":"chrono","uid":"1181974","ctime":1565312997,"ip_address":"","comment_id":121955,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1565256752","product_id":100029001,"comment_content":"“服务端按照密码套件的要求，也生成一个椭圆曲线的公钥（Server Params)”<br>这个server param 是不是抓包中看到的Pubkey呢？，如果是的话，可以这是明文的啊，同理客户端按照密码套件的要求也向服务端发送了client param，也就是明文的pubkey，然后算法也是已知的ECDHE算法，黑客不就可以利用这两个pubkey和已知的ECDHE算法算出pre-master了吗？","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":462024,"discussion_content":"ecdhe算法是专门为交换密钥设计的，即使公钥被获取也是无法计算得到pre-master，具体的算法细节一下子讲不清楚，可以找一下相关的资料。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1565312997,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]}]}