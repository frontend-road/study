{"id":207508,"title":"05 | 分布式事务：如何保证多个系统间的数据是一致的？","content":"<p>你好，我是李玥。</p><p>上节课，我和你一起通过账户系统学习了数据库事务，事务很好地解决了交易类系统的数据一致性问题。</p><p>事务的原子性和持久性可以确保在一个事务内，更新多条数据，要么都成功，要么都失败。在一个系统内部，我们可以使用数据库事务来保证数据一致性。那如果一笔交易，涉及到跨多个系统、多个数据库的时候，用单一的数据库事务就没办法解决了。</p><p>在之前大系统的时代，普遍的做法是，在设计时尽量避免这种跨系统跨数据库的交易。</p><p>但是，现在的技术趋势是云原生和微服务，微服务它的理念是什么？大系统被打散成多个小的微服务，每个微服务独立部署并且拥有自己的数据库，大数据库也被打散成多个小的数据库。跨越微服务和数据库的交易就成为一种越来越普遍的情况。我们的业务系统微服务化之后，不可避免地要面对跨系统的数据一致性问题。</p><p>如何来解决这种跨系统、跨数据库的数据一致性问题呢？你可能会脱口而出：分布式事务。但是，分布式事务可不像数据库事务那样，在开始和结尾分别加上begin和commit，剩下的问题数据库都可以帮我们搞定。在分布式环境下，没有这么简单的事儿，为什么？</p><p>因为在分布式环境中，一个交易将会被分布到不同的系统中，多个微服务进程内执行计算，在多个数据库中执行数据更新操作，这个场景比数据库事务支持的单进程单数据库场景复杂太多了。所以，并没有什么分布式事务服务或者组件能在分布式环境下，提供接近数据库事务的数据一致性保证。</p><!-- [[[read_end]]] --><p>今天这节课我们就来说一下，如何用分布式事务的方法，来解决微服务系统中，我们实际面临的分布式数据一致性问题。</p><h2>到底什么是分布式事务？</h2><p>在学习分布式事务这个概念之前，我先跟你说一下为什么一定要搞懂概念。我们这门课程是一门实战课，一般来说，我们更关注的是如何来解决实际问题，而不是理论和概念，所以你看，我们在讲解数据库事务的时候，讲的内容是如何用事务解决交易的问题，而没讲MySQL是如何实现ACID的。因为数据库已经把事务封装的非常好了，我们只需要掌握如何使用就可以很好地解决问题。</p><p>但分布式事务不是这样的，我刚刚说了，并没有一种分布式事务的服务或者组件，能帮我们很简单地就解决分布式系统下的数据一致性问题。我们在使用分布式事务时，更多的情况是，用分布式事务的理论来指导设计和开发，自行来解决数据一致性问题。也就是说，要解决分布式一致性问题，你必须掌握几种分布式事务的实现原理。</p><p>我们在讲解数据库事务时讲到了事务的ACID四个特性，我们知道即使是数据库事务，它考虑到性能的因素，大部分情况下不能也不需要百分之百地实现ACID，所以才有了事务四种隔离级别。</p><p>理论上，分布式事务也是事务，也需要遵从ACID四个特性，但实际情况是，在分布式系统中，因为必须兼顾性能和高可用，所以是不可能完全满足ACID的。我们常用的几种分布式事务的实现方法，都是“残血版”的事务，而且相比数据库事务，更加的“残血”。</p><p>分布式事务的解决方案有很多，比如：2PC、3PC、TCC、Saga和本地消息表等等。这些方法，它的强项和弱项都不一样，适用的场景也不一样，所以最好这些分布式事务你都能够掌握，这样才能在面临实际问题的时候选择合适的方法。这里面，2PC和本地消息表这两种分布式事务的解决方案，比较贴近于我们日常开发的业务系统。</p><h2>2PC：订单与优惠券的数据一致性问题</h2><p>2PC也叫二阶段提交，是一种常用的分布式事务实现方法。我们用订单和优惠券的例子来说明一下，如何用2PC来解决订单系统和促销系统的数据一致性问题。在我们购物下单时，如果使用了优惠券，订单系统和优惠券系统都要更新自己的数据，才能完成“在订单中使用优惠券”这个操作。</p><p>订单系统需要：</p><ol>\n<li>在“订单优惠券表”中写入订单关联的优惠券数据；</li>\n<li>在“订单表”中写入订单数据。</li>\n</ol><p>订单系统内两个操作的一致性问题可以直接使用数据库事务来解决。促销系统需要操作就比较简单，把刚刚使用的那张优惠券的状态更新成“已使用”就可以了。我们需要这两个系统的数据更新操作保持一致，要么都更新成功，要么都更新失败。</p><p>接下来我们来看2PC是怎么解决这个问题的。2PC引入了一个事务协调者的角色，来协调订单系统和促销系统，协调者对客户端提供一个完整的“使用优惠券下单”的服务，在这个服务的内部，协调者再分别调用订单和促销的相应服务。</p><p>所谓的二阶段指的是准备阶段和提交阶段。在准备阶段，协调者分别给订单系统和促销系统发送“准备”命令，订单和促销系统收到准备命令之后，开始执行准备操作。准备阶段都需要做哪些事儿呢？你可以理解为，除了提交数据库事务以外的所有工作，都要在准备阶段完成。比如说订单系统在准备阶段需要完成：</p><ol>\n<li>在订单库开启一个数据库事务；</li>\n<li>在“订单优惠券表”写入这条订单的优惠券记录；</li>\n<li>在“订单表”中写入订单数据。</li>\n</ol><p>注意，到这里我们没有提交订单数据库的事务，最后给事务协调者返回“准备成功”。类似的，促销服务在准备阶段，需要在促销库开启一个数据库事务，更新优惠券状态，但是暂时不要提交这个数据库事务，给协调者返回“准备成功”。协调者在收到两个系统“准备成功”的响应之后，开始进入第二阶段。</p><p>等两个系统都准备好了之后，进入提交阶段。提交阶段就比较简单了，协调者再给这两个系统发送“提交”命令，每个系统提交自己的数据库事务，然后给协调者返回“提交成功”响应，协调者收到所有响应之后，给客户端返回成功响应，整个分布式事务就结束了。以下是这个过程的时序图：</p><p><img src=\"https://static001.geekbang.org/resource/image/91/f2/9106c7e4e8303eec84ca1172ab3214f2.jpg?wh=784*605\" alt=\"\"></p><p>这是正常情况，接下来才是重点：异常情况下怎么办？</p><p>我们还是分两个阶段来说明。在准备阶段，如果任何一步出现错误或者是超时，协调者就会给两个系统发送“回滚事务”请求。每个系统在收到请求之后，回滚自己的数据库事务，分布式事务执行失败，两个系统的数据库事务都回滚了，相关的所有数据回滚到分布式事务执行之前的状态，就像这个分布式事务没有执行一样。以下是异常情况的时序图：</p><p><img src=\"https://static001.geekbang.org/resource/image/27/6a/27f6b617da547fd21edac826ae4bcb6a.jpg?wh=800*611\" alt=\"\"></p><p>如果准备阶段成功，进入提交阶段，这个时候就“只有华山一条路”，整个分布式事务<strong>只能成功，不能失败</strong>。</p><p>如果发生网络传输失败的情况，需要反复重试，直到提交成功为止。如果这个阶段发生宕机，包括两个数据库宕机或者订单服务、促销服务所在的节点宕机，还是有可能出现订单库完成了提交，但促销库因为宕机自动回滚，导致数据不一致的情况。但是，因为提交的过程非常简单，执行很快，出现这种情况的概率非常小，所以，从实用的角度来说，2PC这种分布式事务的方法，实际的数据一致性还是非常好的。</p><p>在实现2PC的时候，没必要单独启动一个事务协调服务，这个协调服务的工作最好和订单服务或者优惠券服务放在同一个进程里面，这样做有两个好处：</p><ul>\n<li>参与分布式事务的进程更少，故障点也就更少，稳定性更好；</li>\n<li>减少了一些远程调用，性能也更好一些。</li>\n</ul><p>2PC是一种强一致的设计，它可以保证原子性和隔离性。只要2PC事务完成，订单库和促销库中的数据一定是一致的状态，也就是我们总说的，要么都成功，要么都失败。</p><p>所以2PC比较适合那些对数据一致性要求比较高的场景，比如我们这个订单优惠券的场景，如果一致性保证不好，有可能会被黑产利用，一张优惠券反复使用，那样我们的损失就大了。</p><p>2PC也有很明显的缺陷，整个事务的执行过程需要阻塞服务端的线程和数据库的会话，所以，2PC在并发场景下的性能不会很高。并且，协调者是一个单点，一旦过程中协调者宕机，就会导致订单库或者促销库的事务会话一直卡在等待提交阶段，直到事务超时自动回滚。</p><p>卡住的这段时间内，数据库有可能会锁住一些数据，服务中会卡住一个数据库连接和线程，这些都会造成系统性能严重下降，甚至整个服务被卡住。</p><p><strong>所以，只有在需要强一致、并且并发量不大的场景下，才考虑使用2PC。</strong></p><h2>本地消息表：订单与购物车的数据一致性问题</h2><p>2PC它的适用场景其实是很窄的，更多的情况下，只要保证数据最终一致就可以了。比如说，在购物流程中，用户在购物车界面选好商品后，点击“去结算”按钮进入订单页面创建一个新订单。这个过程我们的系统其实做了两件事儿。</p><ul>\n<li>第一，订单系统需要创建一个新订单，订单关联的商品就是购物车中选择的那些商品。</li>\n<li>第二，创建订单成功后，购物车系统需要把订单中的这些商品从购物车里删掉。</li>\n</ul><p>这也是一个分布式事务问题，创建订单和清空购物车这两个数据更新操作需要保证，要么都成功，要么都失败。但是，清空购物车这个操作，它对一致性要求就没有扣减优惠券那么高，订单创建成功后，晚几秒钟再清空购物车，完全是可以接受的。只要保证经过一个小的延迟时间后，最终订单数据和购物车数据保持一致就可以了。</p><p>本地消息表非常适合解决这种分布式最终一致性的问题。我们一起来看一下，如何使用本地消息表来解决订单与购物车的数据一致性问题。</p><p>本地消息表的实现思路是这样的，订单服务在收到下单请求后，正常使用订单库的事务去更新订单的数据，并且，在执行这个数据库事务过程中，在本地记录一条消息。这个消息就是一个日志，内容就是“清空购物车”这个操作。因为这个日志是记录在本地的，这里面没有分布式的问题，那这就是一个普通的单机事务，那我们就可以让订单库的事务，来保证记录本地消息和订单库的一致性。完成这一步之后，就可以给客户端返回成功响应了。</p><p>然后，我们再用一个异步的服务，去读取刚刚记录的清空购物车的本地消息，调用购物车系统的服务清空购物车。购物车清空之后，把本地消息的状态更新成已完成就可以了。异步清空购物车这个过程中，如果操作失败了，可以通过重试来解决。最终，可以保证订单系统和购物车系统它们的数据是一致的。</p><p>这里面，本地消息表，你可以选择存在订单库中，也可以用文件的形式，保存在订单服务所在服务器的本地磁盘中，两种方式都是可以的，相对来说，放在订单库中更简单一些。</p><p>消息队列RocketMQ提供一种事务消息的功能，其实就是本地消息表思想的一个实现。使用事务消息可以达到和本地消息表一样的最终一致性，相比我们自己来实现本地消息表，使用起来更加简单，你也可以考虑使用。（我在<a href=\"https://time.geekbang.org/column/intro/212\">《消息队列高手课》</a>的专栏中的“<a href=\"https://time.geekbang.org/column/article/111269\">如何利用事务消息实现分布式事务？</a>”这节课中有详细的讲解。）</p><p>如果看事务的ACID四个特性，本地消息表这种方法，它只能满足D（持久性），A（原子性）C（一致性）、I（隔离性）都比较差，但是，它的优点非常突出。</p><p>首先，实现简单，在单机事务的基础上稍加改造就可以实现分布式事务，另外，本地消息表的性能非常好，和单机事务的性能几乎没有差别。在这个基础上，还提供了大部分情况下都能接受的“数据最终一致性”的保证，所以，本地消息表是更加实用的分布式事务实现方法。</p><p>当然，即使能接受数据最终一致，本地消息表也不是什么场景都可以适用的。它有一个前提条件就是，异步执行的那部分操作，不能有依赖的资源。比如说，我们下单的时候，除了要清空购物车以外，还需要锁定库存。</p><p>库存系统锁定库存这个操作，虽然可以接受数据最终一致，但是，锁定库存这个操作是有一个前提的，这个前提是：库存中得有货。这种情况就不适合使用本地消息表，不然就会出现用户下单成功后，系统的异步任务去锁定库存的时候，因为缺货导致锁定失败。这样的情况就很难处理了。</p><h2>小结</h2><p>这节课我们讲解了，如何用分布式事务的几种方法来解决分布式系统中的数据一致性问题。对于订单和优惠券这种需要强一致的分布式事务场景，可以采用2PC的方法来解决问题。</p><p>2PC它的优点是强一致，但是性能和可用性上都有一些缺陷。本地消息表适用性更加广泛，虽然在数据一致性上有所牺牲，只能满足最终一致性，但是有更好的性能，实现简单，系统的稳定性也很好，是一种非常实用的分布式事务的解决方案。</p><p>无论是哪种分布式事务方法，其实都是把一个分布式事务，拆分成多个本地事务。<strong>本地事务可以用数据库事务来解决，那分布式事务就专注于解决如何让这些本地事务保持一致的问题。</strong>我们在遇到分布式一致性问题的时候，也要基于这个思想来考虑问题，再结合实际的情况选择分布式事务的方法。</p><h2>思考题</h2><p>2PC也有一些改进版本，比如3PC、TCC这些，它们大体的思想和2PC是差不多的，解决了2PC的一些问题，但是也会带来新的问题，实现起来也更复杂，限于篇幅我们没法每个都详细地去讲解。在理解了2PC的基础上，课后请你自行去学习一下3PC和TCC，然后对比一下，2PC、3PC和TCC分别适用于什么样的业务场景？</p><p>欢迎你在留言区与我讨论，如果你觉得今天的内容对你有帮助，也欢迎把它分享给你的朋友。</p>","comments":[{"had_liked":false,"id":185377,"user_name":"李玥","can_delete":false,"product_type":"c1","uid":1501046,"ip_address":"","ucode":"B19E91EE248591","user_header":"https://static001.geekbang.org/account/avatar/00/16/e7/76/79c1f23a.jpg","comment_is_top":true,"comment_ctime":1583570378,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"9.2233722274168996e+18","product_id":100046801,"comment_content":"Hi，我是李玥。<br><br>这里说一下上节课的思考题：<br><br>课后希望你能动手执行一下我们今天这节课中给出的例子，看一下多个事务并发更新同一个账户时，RC 和 RR 两种不同的隔离级别，在行为上有什么不同？<br><br>这个思考题的主要目的还是希望你不要光是听和看，还要能真正动手去试一下，以便加深理解。RC和RR在并发更新数据的时候，都需要对数据加锁（一般是行锁）在二个事务同时更新一条记录的时候，先更新的那个事务会抢占到锁，在它结束事务之前，其它需要更新这条记录的事务都会卡住等待这个锁。这一点二种隔离级别是一样的。","like_count":45},{"had_liked":false,"id":185392,"user_name":"一剑","can_delete":false,"product_type":"c1","uid":1022127,"ip_address":"","ucode":"93ADD5B5215D4C","user_header":"https://static001.geekbang.org/account/avatar/00/0f/98/af/3945cea4.jpg","comment_is_top":false,"comment_ctime":1583573186,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"117547690178","product_id":100046801,"comment_content":"可以这么考虑：作为电商，可以容忍异常导致的多锁定库存，不能容忍少锁定库存（超卖）。本地消息表异步调用会导致超卖；2PC&#47;3PC同步性能调用性能太差。所以可以由调用方先后执行锁定库存及创建订单的接口：如果锁定库存成功，创建订单成功，返回成功；如果锁定库存成功，创建订单失败，返回失败，由调用方重试，可能会导致多锁定库存；如果锁定库存失败，则不再创建订单，返回失败，由调用方重试，可能会导致多锁定库存；那些因为异常导致的异常锁定，可以通过一些手段事后补偿，比如：找出长时间未释放的异常库存锁定，然后进行释放。","like_count":28,"discussions":[{"author":{"id":1251111,"avatar":"https://static001.geekbang.org/account/avatar/00/13/17/27/ec30d30a.jpg","nickname":"Jxin","note":"","ucode":"4C03928388C413","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":202348,"discussion_content":"以上是交易平台的oms系统。补充供应链侧的oms：\n供应链侧的oms无法用上述方法。因为一个订单的sku去哪个仓库占用库存这件事，是在合单过滤寻仓拆单等一系列操作后才确认的，这就意味着必须等上述操作走完才能开始占用库存创建物流单。如果不采用分布式事务，就得依赖库存服务的回调来告知oms系统创建物流单。而将这个创建物流单及后续操作的发起权限交由库存组感觉上是不合适的。因为库存服务基于oms是更基础的服务，可以认为是其下游，所以oms可以包含一些库存服务的业务，但库存服务不应该包含oms的业务。","likes_number":4,"is_delete":false,"is_hidden":false,"ctime":1583901292,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1036370,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/d0/52/014accaf.jpg","nickname":"划过天空阿忠","note":"","ucode":"9D9BEE73031E40","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":215294,"discussion_content":"我觉得没有区别，库存服务没有决定上层业务，库存服务只要告诉订单服务成功失败而已，订单服务会做它该做的事情（合单/寻仓/拆单也是订单服务做的事吧，和下单操作可以在同一个本地事务）","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585312863,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":189618,"user_name":"小袁","can_delete":false,"product_type":"c1","uid":1811495,"ip_address":"","ucode":"3F5D8721F577D9","user_header":"https://static001.geekbang.org/account/avatar/00/1b/a4/27/15e75982.jpg","comment_is_top":false,"comment_ctime":1584534697,"is_pvip":false,"replies":[{"id":"73113","content":"由于事务执行器有超时机制，数据库本身也有事务超时机制，如果是第一阶段失败或者超时的话，会自动回滚。<br><br>对于第二阶段的问题，如果db宕机，确实有可能出现数据不一致的问题，对于这种情况，可以用脚本根据业务做一些补偿处理。","user_name":"作者回复","user_name_real":"李玥","uid":"1501046","ctime":1584592514,"ip_address":"","comment_id":189618,"utype":1}],"discussion_count":3,"race_medal":0,"score":"83188913321","product_id":100046801,"comment_content":"老师为啥不说下2pc情况下，一个db宕机重启的问题呢？是不是由一个脚本定期扫描发现有哪些订单出现异常的呢？","like_count":19,"discussions":[{"author":{"id":1501046,"avatar":"https://static001.geekbang.org/account/avatar/00/16/e7/76/79c1f23a.jpg","nickname":"李玥","note":"","ucode":"B19E91EE248591","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":487749,"discussion_content":"由于事务执行器有超时机制，数据库本身也有事务超时机制，如果是第一阶段失败或者超时的话，会自动回滚。\n\n对于第二阶段的问题，如果db宕机，确实有可能出现数据不一致的问题，对于这种情况，可以用脚本根据业务做一些补偿处理。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584592514,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1500391,"avatar":"https://static001.geekbang.org/account/avatar/00/16/e4/e7/31944ee7.jpg","nickname":"千军万马万马@","note":"","ucode":"0BDAD22123435A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":556067,"discussion_content":"什么脚本？做什么补偿","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1647184958,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1798979,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/73/43/ae139b1f.jpg","nickname":"博","note":"","ucode":"F7CA69FF5D09BA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":282717,"discussion_content":"谁说不是呢","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1592055280,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":199245,"user_name":"stanley","can_delete":false,"product_type":"c1","uid":1683985,"ip_address":"","ucode":"EEA7CF31B9B431","user_header":"https://static001.geekbang.org/account/avatar/00/19/b2/11/7a3920ee.jpg","comment_is_top":false,"comment_ctime":1585484276,"is_pvip":false,"replies":[{"id":"74807","content":"这个过程就不需要再用事务保证了，否则就死循环了。<br><br>可以先清空购物车，再删除本地消息（一般都是更新状态）。即使出现不一致，购物车清了，本地消息表没更新成功，下次再执行一次清空购物车，也问题不大。","user_name":"作者回复","user_name_real":"李玥","uid":"1501046","ctime":1585531542,"ip_address":"","comment_id":199245,"utype":1}],"discussion_count":5,"race_medal":0,"score":"48830124532","product_id":100046801,"comment_content":"在本地消息表方案的例子中，后续需要去清空购物车，同时要把之前记录在本地的那一条记录删掉，这是不是另一个分布式事务的问题？","like_count":12,"discussions":[{"author":{"id":1501046,"avatar":"https://static001.geekbang.org/account/avatar/00/16/e7/76/79c1f23a.jpg","nickname":"李玥","note":"","ucode":"B19E91EE248591","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":489809,"discussion_content":"这个过程就不需要再用事务保证了，否则就死循环了。\n\n可以先清空购物车，再删除本地消息（一般都是更新状态）。即使出现不一致，购物车清了，本地消息表没更新成功，下次再执行一次清空购物车，也问题不大。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1585531542,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1886331,"avatar":"https://static001.geekbang.org/account/avatar/00/1c/c8/7b/153181d7.jpg","nickname":"夜辉","note":"","ucode":"9421385F51FF9E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":365984,"discussion_content":"那岂不是会发生添加到购物车的商品突然被删除","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1617936250,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":2040025,"avatar":"","nickname":"沈璐","note":"","ucode":"923B574059D77F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1886331,"avatar":"https://static001.geekbang.org/account/avatar/00/1c/c8/7b/153181d7.jpg","nickname":"夜辉","note":"","ucode":"9421385F51FF9E","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":376201,"discussion_content":"删的时候带购买纪录的Id","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1622013645,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":365984,"ip_address":""},"score":376201,"extra":""}]},{"author":{"id":1500391,"avatar":"https://static001.geekbang.org/account/avatar/00/16/e4/e7/31944ee7.jpg","nickname":"千军万马万马@","note":"","ucode":"0BDAD22123435A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":345305,"discussion_content":"这个想法真奇特","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1611710478,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2037841,"avatar":"","nickname":"huan","note":"","ucode":"C98A40D3667336","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":319094,"discussion_content":"用RocketMQ的事务消息可以避免这个问题","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1603941304,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":209907,"user_name":"几字凉了秋丶","can_delete":false,"product_type":"c1","uid":1178503,"ip_address":"","ucode":"B1B7A3726AD4E5","user_header":"https://static001.geekbang.org/account/avatar/00/11/fb/87/9c2dc94f.jpg","comment_is_top":false,"comment_ctime":1587634186,"is_pvip":false,"replies":[{"id":"78314","content":"一般是直接减掉，但需要记录锁定库存的商品、时间戳，后续超时未支付的情况下，再把库存释放出来。","user_name":"作者回复","user_name_real":"李玥","uid":"1501046","ctime":1587690875,"ip_address":"","comment_id":209907,"utype":1}],"discussion_count":2,"race_medal":0,"score":"35947372554","product_id":100046801,"comment_content":"老师，库存系统，锁定库存的一般操作是什么样的，可以说一说吗","like_count":8,"discussions":[{"author":{"id":1501046,"avatar":"https://static001.geekbang.org/account/avatar/00/16/e7/76/79c1f23a.jpg","nickname":"李玥","note":"","ucode":"B19E91EE248591","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":492894,"discussion_content":"一般是直接减掉，但需要记录锁定库存的商品、时间戳，后续超时未支付的情况下，再把库存释放出来。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1587690875,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1520538,"avatar":"https://static001.geekbang.org/account/avatar/00/17/33/9a/f295dea5.jpg","nickname":"李正g","note":"","ucode":"A7BEA03BB6537A","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":579807,"discussion_content":"应该不会直接减，是加占用数， 等订单出库后再同时减","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1657696920,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":186233,"user_name":"1","can_delete":false,"product_type":"c1","uid":1895904,"ip_address":"","ucode":"44133D009755C7","user_header":"https://static001.geekbang.org/account/avatar/00/1c/ed/e0/c63d6a80.jpg","comment_is_top":false,"comment_ctime":1583805546,"is_pvip":false,"replies":[{"id":"71955","content":"还是要自己实现的。","user_name":"作者回复","user_name_real":"李玥","uid":"1501046","ctime":1583821874,"ip_address":"","comment_id":186233,"utype":1}],"discussion_count":5,"race_medal":0,"score":"31648576618","product_id":100046801,"comment_content":"实现2pc是自己写吗？还是有第三方可以用？","like_count":7,"discussions":[{"author":{"id":1138576,"avatar":"https://static001.geekbang.org/account/avatar/00/11/5f/90/711efc88.jpg","nickname":"FuriousEric","note":"","ucode":"0A66DA938976F7","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":302789,"discussion_content":"可以用阿里云的GTS分布式事务中间件，1万笔事务/1块钱","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1599030963,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2640506,"avatar":"","nickname":"Geek_b213f7","note":"","ucode":"251E9C5F8A18E3","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":583894,"discussion_content":"可以用改善版2pc  tcc，开源的有bytetcc","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1660469795,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"湖南"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1501046,"avatar":"https://static001.geekbang.org/account/avatar/00/16/e7/76/79c1f23a.jpg","nickname":"李玥","note":"","ucode":"B19E91EE248591","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":486684,"discussion_content":"还是要自己实现的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1583821874,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1297887,"avatar":"https://static001.geekbang.org/account/avatar/00/13/cd/df/c520d418.jpg","nickname":"董俊俊","note":"","ucode":"732300A779660B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":414248,"discussion_content":"mycat等数据库中间件可以实现2pc","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1636701162,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1013160,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/75/a8/dfe4cade.jpg","nickname":"电光火石","note":"","ucode":"3AD33BB4AA940F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":202997,"discussion_content":"2PC一般不都是通过数据库自己的功能实现的吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1583981320,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":216156,"user_name":"乖，摸摸头","can_delete":false,"product_type":"c1","uid":1611745,"ip_address":"","ucode":"BD92741A11D3CD","user_header":"https://static001.geekbang.org/account/avatar/00/18/97/e1/0f4d90ff.jpg","comment_is_top":false,"comment_ctime":1589197661,"is_pvip":true,"replies":[{"id":"80335","content":"一般是先锁定库存，然后定时扫描未支付的订单，自动取消超时未支付订单，取消订单的流程中自然就会释放库存。<br><br>你会发现，很多秒杀活动要求支付时间都很短，就是这个原因。","user_name":"作者回复","user_name_real":"李玥","uid":"1501046","ctime":1589462368,"ip_address":"","comment_id":216156,"utype":1}],"discussion_count":2,"race_medal":0,"score":"27359001437","product_id":100046801,"comment_content":"锁定库存锁定，和用户余额 锁定  这种具体是怎么做的了？ 是直接减掉吗？ 比如我在下单的时候 库存减了，用户余额也减了，但是我没支付？这时我怎么处理了<br>","like_count":6,"discussions":[{"author":{"id":1501046,"avatar":"https://static001.geekbang.org/account/avatar/00/16/e7/76/79c1f23a.jpg","nickname":"李玥","note":"","ucode":"B19E91EE248591","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":494695,"discussion_content":"一般是先锁定库存，然后定时扫描未支付的订单，自动取消超时未支付订单，取消订单的流程中自然就会释放库存。\n\n你会发现，很多秒杀活动要求支付时间都很短，就是这个原因。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1589462368,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1886331,"avatar":"https://static001.geekbang.org/account/avatar/00/1c/c8/7b/153181d7.jpg","nickname":"夜辉","note":"","ucode":"9421385F51FF9E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":365990,"discussion_content":"用户余额不用锁定吧，真正支付时才扣减吧\n而且支付时需要选择支付方式","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1617936894,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":190426,"user_name":"旭东(Frank)","can_delete":false,"product_type":"c1","uid":1024486,"ip_address":"","ucode":"176FA629800062","user_header":"https://static001.geekbang.org/account/avatar/00/0f/a1/e6/50da1b2d.jpg","comment_is_top":false,"comment_ctime":1584659579,"is_pvip":false,"replies":[{"id":"73506","content":"理论上这两个RM是并行提交的，无所谓谁先谁后。要说细微区别，就是如果某一个数据库宕机后，数据不一致的情况会有区别。","user_name":"作者回复","user_name_real":"李玥","uid":"1501046","ctime":1584844913,"ip_address":"","comment_id":190426,"utype":1}],"discussion_count":1,"race_medal":0,"score":"27354463355","product_id":100046801,"comment_content":"老师好，订单和优惠券的两阶段提交，先提交优惠券还是先提交订单有没细微区别？","like_count":6,"discussions":[{"author":{"id":1501046,"avatar":"https://static001.geekbang.org/account/avatar/00/16/e7/76/79c1f23a.jpg","nickname":"李玥","note":"","ucode":"B19E91EE248591","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":487976,"discussion_content":"理论上这两个RM是并行提交的，无所谓谁先谁后。要说细微区别，就是如果某一个数据库宕机后，数据不一致的情况会有区别。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584844913,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":187736,"user_name":"Dovelol","can_delete":false,"product_type":"c1","uid":1253384,"ip_address":"","ucode":"9B5DDF7720F307","user_header":"https://static001.geekbang.org/account/avatar/00/13/20/08/bc06bc69.jpg","comment_is_top":false,"comment_ctime":1584201956,"is_pvip":false,"replies":[{"id":"72781","content":"你说的这种降级方案感觉像是降级成了本地消息表。<br>","user_name":"作者回复","user_name_real":"李玥","uid":"1501046","ctime":1584410021,"ip_address":"","comment_id":187736,"utype":1}],"discussion_count":9,"race_medal":0,"score":"27354005732","product_id":100046801,"comment_content":"老师好，想问下2pc性能不好，该如何优化呢？我听说蚂蚁金服有方案是在大促的高峰将2阶段的第二阶段延后到低峰在唤起执行，因为如果第一阶段资源已经预留，基本上最终状态也已经确定了，业界有这种方案吗？","like_count":7,"discussions":[{"author":{"id":1501046,"avatar":"https://static001.geekbang.org/account/avatar/00/16/e7/76/79c1f23a.jpg","nickname":"李玥","note":"","ucode":"B19E91EE248591","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":487219,"discussion_content":"你说的这种降级方案感觉像是降级成了本地消息表。\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584410021,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1886331,"avatar":"https://static001.geekbang.org/account/avatar/00/1c/c8/7b/153181d7.jpg","nickname":"夜辉","note":"","ucode":"9421385F51FF9E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":365987,"discussion_content":"感觉说的怪怪的\n2PC是一个整体\n听起来更像是本地事务预减了资源，待到低峰用本地消息表真正执行","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1617936647,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1433535,"avatar":"https://static001.geekbang.org/account/avatar/00/15/df/bf/96b50d1e.jpg","nickname":"😚 46","note":"","ucode":"EED0EBBBF80A43","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":254548,"discussion_content":"低峰唤起提交阶段，那高峰期所有请求都结束不了，线程和连接池都吃不消吧。应该是老师所说的降级成本地消息表吧。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1588334566,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1253384,"avatar":"https://static001.geekbang.org/account/avatar/00/13/20/08/bc06bc69.jpg","nickname":"Dovelol","note":"","ucode":"9B5DDF7720F307","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1433535,"avatar":"https://static001.geekbang.org/account/avatar/00/15/df/bf/96b50d1e.jpg","nickname":"😚 46","note":"","ucode":"EED0EBBBF80A43","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":254707,"discussion_content":"请求肯定都结束了，只是部分状态是一个中间状态，具体我也不了解。想问下你说的降级成本地消息表是怎么实现的呢？为啥说是降级成。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1588340873,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":254548,"ip_address":""},"score":254707,"extra":""},{"author":{"id":1433535,"avatar":"https://static001.geekbang.org/account/avatar/00/15/df/bf/96b50d1e.jpg","nickname":"😚 46","note":"","ucode":"EED0EBBBF80A43","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1253384,"avatar":"https://static001.geekbang.org/account/avatar/00/13/20/08/bc06bc69.jpg","nickname":"Dovelol","note":"","ucode":"9B5DDF7720F307","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":255079,"discussion_content":"如果是2pc请求不可能结束啊，因为还没提交呢，相当于也许操作还没处理完被挂起了。想要后续继续处理，要么是有状态的，把事务记录存储下来，低峰期再提交，那么其实就是有延迟的强一致性。把事务记录下来，不是和本地消息表很相似吗？只要事务能存储成功，就可以理解为准备阶段已完成且成功。然后低谷期提交，我的理解是可能把最后一步提交操作交给消息队列来实现削峰的。事务提交后，应该还有会推送消息给用户的操作，告诉用户操作成功了。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1588375583,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":254707,"ip_address":""},"score":255079,"extra":""}]},{"author":{"id":1060937,"avatar":"https://static001.geekbang.org/account/avatar/00/10/30/49/f9e37ced.jpg","nickname":"伟伟","note":"","ucode":"F0B393FC6E1098","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":223353,"discussion_content":"seata阿里有个开源方案","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1586218864,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1253384,"avatar":"https://static001.geekbang.org/account/avatar/00/13/20/08/bc06bc69.jpg","nickname":"Dovelol","note":"","ucode":"9B5DDF7720F307","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1060937,"avatar":"https://static001.geekbang.org/account/avatar/00/10/30/49/f9e37ced.jpg","nickname":"伟伟","note":"","ucode":"F0B393FC6E1098","race_medal":0,"user_type":1,"is_pvip":true},"discussion":{"id":223358,"discussion_content":"想问下Seata有我说的这种模式吗？还是说就是常规解决分布式事务的方案","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1586219332,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":223353,"ip_address":""},"score":223358,"extra":""}]},{"author":{"id":1036370,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/d0/52/014accaf.jpg","nickname":"划过天空阿忠","note":"","ucode":"9D9BEE73031E40","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":215298,"discussion_content":"将第二阶段的事务挂着不提交？听着怪怪的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585313084,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1253384,"avatar":"https://static001.geekbang.org/account/avatar/00/13/20/08/bc06bc69.jpg","nickname":"Dovelol","note":"","ucode":"9B5DDF7720F307","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1036370,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/d0/52/014accaf.jpg","nickname":"划过天空阿忠","note":"","ucode":"9D9BEE73031E40","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":215392,"discussion_content":"因为一阶段成功的话，已经预留锁定了资源，至于二阶段需要不需要commit不影响资源的使用。具体也没有了解太详细。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585320555,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":215298,"ip_address":""},"score":215392,"extra":""}]}]},{"had_liked":false,"id":185209,"user_name":"ple","can_delete":false,"product_type":"c1","uid":1120057,"ip_address":"","ucode":"E1C4519C325994","user_header":"https://static001.geekbang.org/account/avatar/00/11/17/39/3274257b.jpg","comment_is_top":false,"comment_ctime":1583516525,"is_pvip":false,"discussion_count":3,"race_medal":0,"score":"18763385709","product_id":100046801,"comment_content":"有一个问题，如果在订单生成的时候锁库存可以解决文章中提到的，本地消息表的缺陷么？消息表的确是不灵活","like_count":4,"discussions":[{"author":{"id":2296382,"avatar":"https://static001.geekbang.org/account/avatar/00/23/0a/3e/5b1b1b75.jpg","nickname":"流年","note":"","ucode":"8B579C6E466CB4","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":323296,"discussion_content":"库存这种觉得一致性比较高的，可以先扣减库存，扣减成功了再下单，下单如果失败了可以回滚库存嘛，最终数据是一致性的，也不会导致超卖","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1604912836,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1022127,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/98/af/3945cea4.jpg","nickname":"一剑","note":"","ucode":"93ADD5B5215D4C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":199028,"discussion_content":"订单系统和库存系统是两个独立系统，“在生成订单时候锁库存”也是一样是分布式事务，使用本地消息表就没法避免库存系统扣库存发现不够的情况吧。。除非改用2PC","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1583549325,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1120057,"avatar":"https://static001.geekbang.org/account/avatar/00/11/17/39/3274257b.jpg","nickname":"ple","note":"","ucode":"E1C4519C325994","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1022127,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/98/af/3945cea4.jpg","nickname":"一剑","note":"","ucode":"93ADD5B5215D4C","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":199090,"discussion_content":"这里的锁库存，我理解应该就是库存数量不再受到更改。不一定非要锁数据库。难道不能用分布式锁？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1583554207,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":199028,"ip_address":""},"score":199090,"extra":""}]}]},{"had_liked":false,"id":189659,"user_name":"ray","can_delete":false,"product_type":"c1","uid":1717235,"ip_address":"","ucode":"10962C711CBC11","user_header":"","comment_is_top":false,"comment_ctime":1584539257,"is_pvip":false,"replies":[{"id":"73115","content":"如果是HTTP协议的话，可以在RM（事务参与方）Session中，或者内存中维护进行中的事务，通过事务ID区分。<br><br>第二阶段提交命令从协调者发到RM上之后，根据事务ID查找对应的数据库会话，进行提交。","user_name":"作者回复","user_name_real":"李玥","uid":"1501046","ctime":1584592950,"ip_address":"","comment_id":189659,"utype":1}],"discussion_count":3,"race_medal":0,"score":"14469441145","product_id":100046801,"comment_content":"老师您好，<br>我对2pc有个疑问，如果是走http协定（发出response后连结就关闭了），实作上一般的程序要如何在参与者完成准备阶段后，持续将事务保持在未提交的状态，等待协调者告知可以提交事务？<br><br>谢谢老师的解答^^","like_count":4,"discussions":[{"author":{"id":1501046,"avatar":"https://static001.geekbang.org/account/avatar/00/16/e7/76/79c1f23a.jpg","nickname":"李玥","note":"","ucode":"B19E91EE248591","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":487758,"discussion_content":"如果是HTTP协议的话，可以在RM（事务参与方）Session中，或者内存中维护进行中的事务，通过事务ID区分。\n\n第二阶段提交命令从协调者发到RM上之后，根据事务ID查找对应的数据库会话，进行提交。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584592950,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1008395,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/63/0b/ad56aeb4.jpg","nickname":"二进制之路","note":"","ucode":"67C84B013147B1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":209871,"discussion_content":"那这里会有两个问题，一是提交时怎么找到这会话所在的机器，如果是微服务的话，一般是随机的，那么是不是要将这个会话持久化；另一个是，这个会话应该要设置超时时间吧，万一出问题得把连接释放了，否则DB连接泄露","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1584683406,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1589937,"avatar":"https://static001.geekbang.org/account/avatar/00/18/42/b1/3f1ad943.jpg","nickname":"Pierce","note":"","ucode":"9E120B593223EE","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":559068,"discussion_content":"我也想过这个问题，好像方案只能是跟老师说的一样","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1648601726,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":186891,"user_name":"etdick","can_delete":false,"product_type":"c1","uid":1487506,"ip_address":"","ucode":"E43D68000E92CA","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJiaiaQYkUHByDARl4ULduH8Y4hicOpMxGjzPZmJkXK9RYd1oVMICd0icCfarxI4Yvmiap2a8t3Eae3LMg/132","comment_is_top":false,"comment_ctime":1583946035,"is_pvip":false,"replies":[{"id":"72249","content":"京东有自己的弹性数据库，但不是简单的把MySQL跑在K8s中，存储类系统如果要容器化，一般需要先实现存储计算分离，把自己变成无状态的节点。这里面有很多问题需要解决，我们也在持续探索和尝试。","user_name":"作者回复","user_name_real":"李玥","uid":"1501046","ctime":1584064472,"ip_address":"","comment_id":186891,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10173880627","product_id":100046801,"comment_content":"老师，我想问问，JD有没有把MySQL的纳入k8S的管理。对数据库这样有状态的节点，k8S是否有问题。","like_count":2,"discussions":[{"author":{"id":1501046,"avatar":"https://static001.geekbang.org/account/avatar/00/16/e7/76/79c1f23a.jpg","nickname":"李玥","note":"","ucode":"B19E91EE248591","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":486906,"discussion_content":"京东有自己的弹性数据库，但不是简单的把MySQL跑在K8s中，存储类系统如果要容器化，一般需要先实现存储计算分离，把自己变成无状态的节点。这里面有很多问题需要解决，我们也在持续探索和尝试。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584064472,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":260035,"user_name":"流年","can_delete":false,"product_type":"c1","uid":2296382,"ip_address":"","ucode":"8B579C6E466CB4","user_header":"https://static001.geekbang.org/account/avatar/00/23/0a/3e/5b1b1b75.jpg","comment_is_top":false,"comment_ctime":1604912158,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"5899879454","product_id":100046801,"comment_content":"老师，为什么不发送个广播消息，然后其他服务来订阅这个消息来执行后续的业务操作呢？执行失败了重试不就好了","like_count":1,"discussions":[{"author":{"id":2791739,"avatar":"https://static001.geekbang.org/account/avatar/00/2a/99/3b/acbc0986.jpg","nickname":"记忆不寒凉","note":"","ucode":"AC1D0AA0740803","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":401144,"discussion_content":"这也是一个方案吧，引入消息队列就满足不了强一致性，但一般最终一致性满足就好了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1633575859,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1602944,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/PiajxSqBRaEJoLuP1VW98b1XWMQ8lFqesGf9Yhr67d8iavwvZrnBktwZzJib7WRruxQEv3pics8qqIcr1hLyyqQqYQ/132","nickname":"常惠源","note":"","ucode":"CFDD575C02C9BC","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":398559,"discussion_content":"有同样的疑问","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1632812889,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":224694,"user_name":"张三丰","can_delete":false,"product_type":"c1","uid":1155275,"ip_address":"","ucode":"3A6215A40B3B21","user_header":"https://static001.geekbang.org/account/avatar/00/11/a0/cb/aab3b3e7.jpg","comment_is_top":false,"comment_ctime":1591511173,"is_pvip":false,"replies":[{"id":"83103","content":"一般是事后审计和补偿来解决。","user_name":"作者回复","user_name_real":"李玥","uid":"1501046","ctime":1591791191,"ip_address":"","comment_id":224694,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5886478469","product_id":100046801,"comment_content":"如果出现下边的情况该怎么解决呢？<br><br><br>还是有可能出现订单库完成了提交，但促销库因为宕机自动回滚，导致数据不一致的情况。但是，因为提交的过程非常简单，执行很快，出现这种情况的概率非常小。","like_count":1,"discussions":[{"author":{"id":1501046,"avatar":"https://static001.geekbang.org/account/avatar/00/16/e7/76/79c1f23a.jpg","nickname":"李玥","note":"","ucode":"B19E91EE248591","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":497572,"discussion_content":"一般是事后审计和补偿来解决。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1591791191,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":214223,"user_name":"啸歌","can_delete":false,"product_type":"c1","uid":1113874,"ip_address":"","ucode":"D8C8963BB940F6","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83er2rgam9XfHbuSIZB4S3UG2GLrf9CLkiatDG62eEMicT4yprYdSAZET3kfqQBPxqBHkZw2KRhMdJX4Q/132","comment_is_top":false,"comment_ctime":1588680538,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"5883647834","product_id":100046801,"comment_content":"老师只说了2PC的缺点：<br>1、单点问题<br>2、数据不一致<br>3、性能问题<br>问题1：那如果我在高并发场景下就是需要强一致性，有什么解决方案呢？<br>问题2：那2PC具体是怎么落地的呢？协调者有哪些选择？<br>问题3：最后说了下单扣库存，这一步怎么保证一致性？放在redid减库存还是放在数据库里减库存呢？<br>老师讲的很精彩，但是意犹未尽呀！！！","like_count":1,"discussions":[{"author":{"id":2791739,"avatar":"https://static001.geekbang.org/account/avatar/00/2a/99/3b/acbc0986.jpg","nickname":"记忆不寒凉","note":"","ucode":"AC1D0AA0740803","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":401142,"discussion_content":"高并发还要强一致，有点强人所难了啊","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1633575692,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":211773,"user_name":"被过去推开","can_delete":false,"product_type":"c1","uid":1276690,"ip_address":"","ucode":"8B4F34FE93FD5B","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Cib5umA0W17N9pichI08pnrXAExdbyh7AVzH4nEhD6KN3FXuELk4LJJuqUPPD7xmIy9nq5Hjbgnzic7sVZG5BKiaUQ/132","comment_is_top":false,"comment_ctime":1588002728,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5882970024","product_id":100046801,"comment_content":"通读了两遍，收益良多。特别是本地消息表，不仅效率高，而且满足很多的场景。缺点就是不是强一致性","like_count":1},{"had_liked":false,"id":196791,"user_name":"划过天空阿忠","can_delete":false,"product_type":"c1","uid":1036370,"ip_address":"","ucode":"9D9BEE73031E40","user_header":"https://static001.geekbang.org/account/avatar/00/0f/d0/52/014accaf.jpg","comment_is_top":false,"comment_ctime":1585313950,"is_pvip":false,"replies":[{"id":"74836","content":"👍👍👍","user_name":"作者回复","user_name_real":"李玥","uid":"1501046","ctime":1585533536,"ip_address":"","comment_id":196791,"utype":1}],"discussion_count":5,"race_medal":0,"score":"5880281246","product_id":100046801,"comment_content":"就拿下单需要锁库存这个业务来说，下单接口调锁库存接口，锁定库存成功之后下单接口提交事务，锁定库存失败下单接口回滚事务。<br>其中最关键的一步是锁库存之后要重新调一下库存查询接口，检查是否真正锁定，若没有真正锁定，订单服务手动抛异常，回滚订单事务。<br><br>小弟浅薄理解，各位指点一下😄","like_count":2,"discussions":[{"author":{"id":1501046,"avatar":"https://static001.geekbang.org/account/avatar/00/16/e7/76/79c1f23a.jpg","nickname":"李玥","note":"","ucode":"B19E91EE248591","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":489389,"discussion_content":"👍👍👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585533536,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1350991,"avatar":"https://static001.geekbang.org/account/avatar/00/14/9d/4f/273ffb51.jpg","nickname":"小哪吒","note":"","ucode":"252087A733355C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":278017,"discussion_content":"将接口调用放在事务中感觉风险很大啊，网络波动引起的接口调用超时很容易拖垮数据库服务。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1591144577,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1433535,"avatar":"https://static001.geekbang.org/account/avatar/00/15/df/bf/96b50d1e.jpg","nickname":"😚 46","note":"","ucode":"EED0EBBBF80A43","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":254543,"discussion_content":"请教下，什么情况不会真正锁定呢？","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1588334257,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1075699,"avatar":"","nickname":"cysg","note":"","ucode":"EF5B255AA7AEB1","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":398592,"discussion_content":"会存在 调锁库存接口 成功，下单接口提交事务 失败的情况吧？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1632818170,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1886331,"avatar":"https://static001.geekbang.org/account/avatar/00/1c/c8/7b/153181d7.jpg","nickname":"夜辉","note":"","ucode":"9421385F51FF9E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":366002,"discussion_content":"检查是否真正锁定，如何检查呢？依靠什么数据呢？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1617938475,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":188492,"user_name":"winzheng","can_delete":false,"product_type":"c1","uid":1808505,"ip_address":"","ucode":"D78074036BB85D","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJaPyAQvQx7BpTFjmEyDkQXLEcL2lEGjsoookic3Z25SJY0omzNUA3xCKt2F0hBqbxZMmrXX9v4TWQ/132","comment_is_top":false,"comment_ctime":1584360625,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5879327921","product_id":100046801,"comment_content":"不论哪种方案服务要根据实际情况实践，去感受方案，直接想找一个组件来解决业务问题，只能是白日梦。","like_count":1},{"had_liked":false,"id":185282,"user_name":"hello","can_delete":false,"product_type":"c1","uid":1464199,"ip_address":"","ucode":"854500026E2187","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKhuGLVRYZibOTfMumk53Wn8Q0Rkg0o6DzTicbibCq42lWQoZ8lFeQvicaXuZa7dYsr9URMrtpXMVDDww/132","comment_is_top":false,"comment_ctime":1583552106,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"5878519402","product_id":100046801,"comment_content":"老师，您好，现在微服务越来越流行，导致系统动不动就微服务化，然而一般的开发人员常年都是CRUD根本不想动脑子，服务化后引入的事务问题，就想着能像操作本地事务那样一两个注解就搞定（无脑最好），这种想法嘛大家都认同，但真正到落地上面，限于自身小公司技术实力，也限于自身认知，一直没有找到特别满意的处理方式。我一直关注开源的方案（例如：阿里的seata，还一个是TiDB）,一个是在应用层解决事务，一个是在数据库底层解决事务，数据库底层解决事务，我比较认同，但限于自身对分布式共识算法的认知，对TiDB底层的原理知之甚少，而且目前业务体量还没到那个级别。老师能否在分布式存储事务方面给点建议或是可供参考的资料，多谢！","like_count":1,"discussions":[{"author":{"id":1297887,"avatar":"https://static001.geekbang.org/account/avatar/00/13/cd/df/c520d418.jpg","nickname":"董俊俊","note":"","ucode":"732300A779660B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":414260,"discussion_content":"分布式数据库中间就是屏蔽业务开发人员对分布式事务的了解啊","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1636704054,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":185242,"user_name":"约书亚","can_delete":false,"product_type":"c1","uid":1046714,"ip_address":"","ucode":"81EA27ADD9EC1A","user_header":"https://static001.geekbang.org/account/avatar/00/0f/f8/ba/14e05601.jpg","comment_is_top":false,"comment_ctime":1583545139,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5878512435","product_id":100046801,"comment_content":"其实我感觉本地事务表的设计思想 对比 rocketmq那种事务消息的设计思想还是有挺大差异的，不过他们的适用场景确实一致......","like_count":1},{"had_liked":false,"id":356371,"user_name":"C.Y","can_delete":false,"product_type":"c1","uid":1888264,"ip_address":"北京","ucode":"52124B03842244","user_header":"https://static001.geekbang.org/account/avatar/00/1c/d0/08/f6970238.jpg","comment_is_top":false,"comment_ctime":1662205225,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1662205225","product_id":100046801,"comment_content":"写得特别透彻","like_count":0},{"had_liked":false,"id":340123,"user_name":"摊牌","can_delete":false,"product_type":"c1","uid":1453182,"ip_address":"","ucode":"F142596BFE4594","user_header":"https://static001.geekbang.org/account/avatar/00/16/2c/7e/f1efd18b.jpg","comment_is_top":false,"comment_ctime":1648614806,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1648614806","product_id":100046801,"comment_content":"老师，有demo事例吗？","like_count":0},{"had_liked":false,"id":337664,"user_name":"张三丰","can_delete":false,"product_type":"c1","uid":1155275,"ip_address":"","ucode":"3A6215A40B3B21","user_header":"https://static001.geekbang.org/account/avatar/00/11/a0/cb/aab3b3e7.jpg","comment_is_top":false,"comment_ctime":1646963678,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1646963678","product_id":100046801,"comment_content":"我对老师下面这句话有疑问，2pc只有协调者具备超时机制，参与者是不具备超时机制的，所以参与者只能一直卡着，因为协调者已经挂了，不能发起超时回滚。<br><br><br><br>协调者是一个单点，一旦过程中协调者宕机，就会导致订单库或者促销库的事务会话一直卡在等待提交阶段，直到事务超时自动回滚。","like_count":0},{"had_liked":false,"id":332497,"user_name":"Geek7080","can_delete":false,"product_type":"c1","uid":2689637,"ip_address":"","ucode":"A421FFC9908BD8","user_header":"","comment_is_top":false,"comment_ctime":1643275357,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1643275357","product_id":100046801,"comment_content":"2PC中的协调者单点问题如何解决 以订单与优惠券为例 协调者已通知订单系统提交数据 正常应该通知优惠券系统提交数据 但此时协调者崩溃了","like_count":0},{"had_liked":false,"id":321190,"user_name":"董俊俊","can_delete":false,"product_type":"c1","uid":1297887,"ip_address":"","ucode":"732300A779660B","user_header":"https://static001.geekbang.org/account/avatar/00/13/cd/df/c520d418.jpg","comment_is_top":false,"comment_ctime":1636703125,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1636703125","product_id":100046801,"comment_content":"2pc不是由数据库层实现的吗？xa","like_count":0},{"had_liked":false,"id":307216,"user_name":"idiot","can_delete":false,"product_type":"c1","uid":2526391,"ip_address":"","ucode":"D7A6E980B530B4","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/fcftgBsticCicEEkuzB0GTkHIocX62YVTSvnhR1c94sccj42lVaYXrmcZyhzUI3l9NcvuN1rXLhXt2eBrZZ0Tw7A/132","comment_is_top":false,"comment_ctime":1628943277,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1628943277","product_id":100046801,"comment_content":"之前听过Paxos是比较普遍的分布式一致性协议，哪些场景适合，哪些场景不适合用Paxos呢？","like_count":0},{"had_liked":false,"id":265501,"user_name":"木木夕","can_delete":false,"product_type":"c1","uid":1526471,"ip_address":"","ucode":"EA5D709D0DE50E","user_header":"https://static001.geekbang.org/account/avatar/00/17/4a/c7/0cff4a59.jpg","comment_is_top":false,"comment_ctime":1606917022,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1606917022","product_id":100046801,"comment_content":"本地消息表，那个异步服务去清空购物车，在什么地方调异步服务？是在订单服务中？","like_count":0,"discussions":[{"author":{"id":1075038,"avatar":"https://static001.geekbang.org/account/avatar/00/10/67/5e/e0323566.jpg","nickname":"oyt","note":"","ucode":"E1E4F27FB3535F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":394303,"discussion_content":"单独开个任务去扫描本地消息表，根据消息去调用清空购物车的接口，若是清空成功则更新本地消息表为已处理（或者删除）。若清空购物车接口失败或超时，那本地消息表的记录就不会更新为成功状态，对于不是成功状态的本地消息可以根据需求采取相应的重试策略。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1631838492,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":252385,"user_name":"隰有荷","can_delete":false,"product_type":"c1","uid":1357944,"ip_address":"","ucode":"2BE9A32AB28963","user_header":"https://static001.geekbang.org/account/avatar/00/14/b8/78/2828195b.jpg","comment_is_top":false,"comment_ctime":1602264025,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1602264025","product_id":100046801,"comment_content":"在本地消息表的案例中，写本地消息这个动作是放在生成订单这个事务里，还是生成订单事务提交之后再写本地消息？看文章的意思是在提交事务之前写本地消息，那么如果提交订单的事务发生了回滚，是不是也要在回滚的时候删除这个本地消息？","like_count":0,"discussions":[{"author":{"id":2296382,"avatar":"https://static001.geekbang.org/account/avatar/00/23/0a/3e/5b1b1b75.jpg","nickname":"流年","note":"","ucode":"8B579C6E466CB4","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":323287,"discussion_content":"是的，写订单和本地消息是在一个本地事务里进行的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1604912379,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":241557,"user_name":"龙行秀","can_delete":false,"product_type":"c1","uid":1351066,"ip_address":"","ucode":"2DA088D199EA9D","user_header":"https://static001.geekbang.org/account/avatar/00/14/9d/9a/7f064a9f.jpg","comment_is_top":false,"comment_ctime":1597335854,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1597335854","product_id":100046801,"comment_content":"老师，你好，2PC如果遇到异常回退时又失败了该如何处理呢？是不是还是的最终一致性来解决？另外最终一致性有哪些常用的实现方式呢？","like_count":0},{"had_liked":false,"id":236312,"user_name":"李和桃","can_delete":false,"product_type":"c1","uid":1015877,"ip_address":"","ucode":"97E66953070EE0","user_header":"https://static001.geekbang.org/account/avatar/00/0f/80/45/d719f7df.jpg","comment_is_top":false,"comment_ctime":1595390054,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1595390054","product_id":100046801,"comment_content":"2PC的实现seata不是支持的吗?AT模式就是基于2PC的演变吧","like_count":0},{"had_liked":false,"id":231485,"user_name":"斜杠青年","can_delete":false,"product_type":"c1","uid":1177739,"ip_address":"","ucode":"D7AF02B8588549","user_header":"https://static001.geekbang.org/account/avatar/00/11/f8/8b/74d2ab6b.jpg","comment_is_top":false,"comment_ctime":1593686072,"is_pvip":true,"discussion_count":1,"race_medal":0,"score":"1593686072","product_id":100046801,"comment_content":"作者内容：本地消息表的实现思路是这样的，订单服务在收到下单请求后，正常使用订单库的事务去更新订单的数据，并且，在执行这个数据库事务过程中，在本地记录一条消息。这个消息就是一个日志，内容就是“清空购物车”这个操作。因为这个日志是记录在本地的，这里面没有分布式的问题，那这就是一个普通的单机事务，那我们就可以让订单库的事务，来保证记录本地消息和订单库的一致性。完成这一步之后，就可以给客户端返回成功响应了。然后，我们再用一个异步的服务，去读取刚刚记录的清空购物车的本地消息，调用购物车系统的服务清空购物车。购物车清空之后，把本地消息的状态更新成已完成就可以了。异步清空购物车这个过程中，如果操作失败了，可以通过重试来解决。最终，可以保证订单系统和购物车系统它们的数据是一致的。                                                                          <br> 我的理解：其实也可以等待订单创建成功后 异步触发 清空购物车的请求，请问我理解的做法和您的本地消息的方法，有和利弊的差异。","like_count":0,"discussions":[{"author":{"id":1461075,"avatar":"https://static001.geekbang.org/account/avatar/00/16/4b/53/f797f031.jpg","nickname":"无道win","note":"","ucode":"0C026BB03A53EA","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":325639,"discussion_content":"异步触发没办法保证一定成功，如果第一次因为网络问题执行失败的话，怎么去进行重试呢？\n通过本地消息表落一条消息的话，即使第一次处理失败，也可以通过job不断去处理，直到成功为止。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1605371161,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":202886,"user_name":"锐","can_delete":false,"product_type":"c1","uid":1110915,"ip_address":"","ucode":"A245BA96C9471F","user_header":"https://static001.geekbang.org/account/avatar/00/10/f3/83/e2612d81.jpg","comment_is_top":false,"comment_ctime":1586079664,"is_pvip":false,"replies":[{"id":"76063","content":"事务一定要和存储引擎结合起来才可以实现。对于业务系统来说，一般不会自己实现存储引擎，比如说自己设计一个文件结构，自己负责把数据保存在文件中。<br><br>所以，不太可能自行实现本地事务。","user_name":"作者回复","user_name_real":"李玥","uid":"1501046","ctime":1586223942,"ip_address":"","comment_id":202886,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1586079664","product_id":100046801,"comment_content":"有没有不依赖数据库事务的实现方式？如果依赖了数据库事务，服务集群或者数据库集群场景下要怎么解决呢","like_count":0,"discussions":[{"author":{"id":1501046,"avatar":"https://static001.geekbang.org/account/avatar/00/16/e7/76/79c1f23a.jpg","nickname":"李玥","note":"","ucode":"B19E91EE248591","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":490706,"discussion_content":"事务一定要和存储引擎结合起来才可以实现。对于业务系统来说，一般不会自己实现存储引擎，比如说自己设计一个文件结构，自己负责把数据保存在文件中。\n\n所以，不太可能自行实现本地事务。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1586223942,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":201139,"user_name":"A9","can_delete":false,"product_type":"c1","uid":1053211,"ip_address":"","ucode":"76D07F8EBE8DD0","user_header":"https://static001.geekbang.org/account/avatar/00/10/12/1b/f62722ca.jpg","comment_is_top":false,"comment_ctime":1585722400,"is_pvip":false,"replies":[{"id":"75373","content":"你可以看一下我在06的评论区中的回复。","user_name":"作者回复","user_name_real":"李玥","uid":"1501046","ctime":1585796077,"ip_address":"","comment_id":201139,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1585722400","product_id":100046801,"comment_content":"文中2PC的例子，是使用的服务级别的调用。订单系统需要调用促销系统的prepare，commit，异常需要调用促销系统的cancel。请问老师，这个在定义上来说不应该是TCC吗？","like_count":0,"discussions":[{"author":{"id":1501046,"avatar":"https://static001.geekbang.org/account/avatar/00/16/e7/76/79c1f23a.jpg","nickname":"李玥","note":"","ucode":"B19E91EE248591","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":490252,"discussion_content":"你可以看一下我在06的评论区中的回复。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585796077,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":194716,"user_name":"image","can_delete":false,"product_type":"c1","uid":1039069,"ip_address":"","ucode":"A45BFF284F8933","user_header":"https://static001.geekbang.org/account/avatar/00/0f/da/dd/1e5e7b0c.jpg","comment_is_top":false,"comment_ctime":1585099553,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1585099553","product_id":100046801,"comment_content":"分布式事务越来越重要了，有哪些开源实现可以推荐吗？","like_count":0},{"had_liked":false,"id":190211,"user_name":"向前走","can_delete":false,"product_type":"c1","uid":1112651,"ip_address":"","ucode":"8956E92DCEFB60","user_header":"https://static001.geekbang.org/account/avatar/00/10/fa/4b/c385f755.jpg","comment_is_top":false,"comment_ctime":1584615093,"is_pvip":false,"replies":[{"id":"73504","content":"你可以看一下我在下节课置顶留言中，关于这个问题的回复。","user_name":"作者回复","user_name_real":"李玥","uid":"1501046","ctime":1584844596,"ip_address":"","comment_id":190211,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1584615093","product_id":100046801,"comment_content":"二阶段提交和tcc有点像呀，怎么区分下呢，都是尝试提交，提交，回滚操作","like_count":0,"discussions":[{"author":{"id":1501046,"avatar":"https://static001.geekbang.org/account/avatar/00/16/e7/76/79c1f23a.jpg","nickname":"李玥","note":"","ucode":"B19E91EE248591","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":487914,"discussion_content":"你可以看一下我在下节课置顶留言中，关于这个问题的回复。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584844596,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":187710,"user_name":"smily","can_delete":false,"product_type":"c1","uid":1099875,"ip_address":"","ucode":"E2FDA059724A02","user_header":"https://static001.geekbang.org/account/avatar/00/10/c8/63/f94f9fda.jpg","comment_is_top":false,"comment_ctime":1584196603,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1584196603","product_id":100046801,"comment_content":"实物补偿机制怎么处理的","like_count":0},{"had_liked":false,"id":186977,"user_name":"电光火石","can_delete":false,"product_type":"c1","uid":1013160,"ip_address":"","ucode":"3AD33BB4AA940F","user_header":"https://static001.geekbang.org/account/avatar/00/0f/75/a8/dfe4cade.jpg","comment_is_top":false,"comment_ctime":1583981425,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1583981425","product_id":100046801,"comment_content":"老师好，在分布式事务的框架上面，不知道老师有没有一些推荐，毕竟这是个很通用的问题，每个业务系统自己做又感觉开销太大，谢谢了！","like_count":0,"discussions":[{"author":{"id":1433535,"avatar":"https://static001.geekbang.org/account/avatar/00/15/df/bf/96b50d1e.jpg","nickname":"😚 46","note":"","ucode":"EED0EBBBF80A43","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":254537,"discussion_content":"seata","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1588333788,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":186894,"user_name":"etdick","can_delete":false,"product_type":"c1","uid":1487506,"ip_address":"","ucode":"E43D68000E92CA","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJiaiaQYkUHByDARl4ULduH8Y4hicOpMxGjzPZmJkXK9RYd1oVMICd0icCfarxI4Yvmiap2a8t3Eae3LMg/132","comment_is_top":false,"comment_ctime":1583946837,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1583946837","product_id":100046801,"comment_content":"TCC最大缺点在于侵入业务代码。","like_count":0},{"had_liked":false,"id":186893,"user_name":"etdick","can_delete":false,"product_type":"c1","uid":1487506,"ip_address":"","ucode":"E43D68000E92CA","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJiaiaQYkUHByDARl4ULduH8Y4hicOpMxGjzPZmJkXK9RYd1oVMICd0icCfarxI4Yvmiap2a8t3Eae3LMg/132","comment_is_top":false,"comment_ctime":1583946416,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"1583946416","product_id":100046801,"comment_content":"两阶段提交，如果第一阶段提交成功，第二阶段提交失败。第一阶段无法回滚。所以一般用最终一致性，一般基于mq或者saga模型","like_count":0,"discussions":[{"author":{"id":1886331,"avatar":"https://static001.geekbang.org/account/avatar/00/1c/c8/7b/153181d7.jpg","nickname":"夜辉","note":"","ucode":"9421385F51FF9E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":366018,"discussion_content":"第一阶段是准备，不会真正执行\n第二阶段根据第一阶段准备的情况，执行或者回滚","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1617941017,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1036370,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/d0/52/014accaf.jpg","nickname":"划过天空阿忠","note":"","ucode":"9D9BEE73031E40","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":215304,"discussion_content":"第一阶段是开启事务，不存在提交成功或者回滚吧","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585313368,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":186485,"user_name":"james","can_delete":false,"product_type":"c1","uid":1049208,"ip_address":"","ucode":"5701899403917C","user_header":"https://static001.geekbang.org/account/avatar/00/10/02/78/23c56bce.jpg","comment_is_top":false,"comment_ctime":1583852216,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1583852216","product_id":100046801,"comment_content":"我认为不要总想着数据库事务，用redis，mongodb，es不都可以嘛，因此最通用的还是一个业务写两套接口，正向和反向取消","like_count":0,"discussions":[{"author":{"id":1206132,"avatar":"https://static001.geekbang.org/account/avatar/00/12/67/74/3db92b61.jpg","nickname":"一千年以后","note":"","ucode":"0FF27C1ADDE351","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":219259,"discussion_content":"嗯，和我的思路一致，我通常不采用事务来解决，我通常通过事后补偿来操作。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585748497,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":185872,"user_name":"1","can_delete":false,"product_type":"c1","uid":1895904,"ip_address":"","ucode":"44133D009755C7","user_header":"https://static001.geekbang.org/account/avatar/00/1c/ed/e0/c63d6a80.jpg","comment_is_top":false,"comment_ctime":1583717858,"is_pvip":false,"replies":[{"id":"71953","content":"一般我们都是用程序去执行SQL，通常执行结果会作为返回值，可以拿到。","user_name":"作者回复","user_name_real":"李玥","uid":"1501046","ctime":1583821511,"ip_address":"","comment_id":185872,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1583717858","product_id":100046801,"comment_content":"用sql的哪个方法可以判断sql是否会执行成功？","like_count":0,"discussions":[{"author":{"id":1501046,"avatar":"https://static001.geekbang.org/account/avatar/00/16/e7/76/79c1f23a.jpg","nickname":"李玥","note":"","ucode":"B19E91EE248591","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":486537,"discussion_content":"一般我们都是用程序去执行SQL，通常执行结果会作为返回值，可以拿到。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1583821511,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":185458,"user_name":"linlvdou","can_delete":false,"product_type":"c1","uid":1476939,"ip_address":"","ucode":"5A5E257E55A295","user_header":"https://static001.geekbang.org/account/avatar/00/16/89/4b/eaf4ca0f.jpg","comment_is_top":false,"comment_ctime":1583586809,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1583586809","product_id":100046801,"comment_content":"老师，请教一下，事务协调者是用什么方式来协调不同数据库的事务，谢谢","like_count":0},{"had_liked":false,"id":185295,"user_name":"滴流乱转小胖儿","can_delete":false,"product_type":"c1","uid":1231250,"ip_address":"","ucode":"4689236E65FE4E","user_header":"https://static001.geekbang.org/account/avatar/00/12/c9/92/6361802a.jpg","comment_is_top":false,"comment_ctime":1583554948,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1583554948","product_id":100046801,"comment_content":"感谢老师分享，想问下redisson 这种中间件，在分布式事务中使用的多么？","like_count":0,"discussions":[{"author":{"id":1908633,"avatar":"","nickname":"钟杨剑","note":"","ucode":"14A3105B542021","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":206681,"discussion_content":"redisson不是用来分布锁的么，事务管不了的","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1584426951,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":185268,"user_name":"旅途","can_delete":false,"product_type":"c1","uid":1212902,"ip_address":"","ucode":"5022477E8E9441","user_header":"https://static001.geekbang.org/account/avatar/00/12/81/e6/6cafed37.jpg","comment_is_top":false,"comment_ctime":1583550199,"is_pvip":false,"discussion_count":7,"race_medal":0,"score":"1583550199","product_id":100046801,"comment_content":"2pc提交阶段也是能回滚的吗？","like_count":0,"discussions":[{"author":{"id":1100300,"avatar":"https://static001.geekbang.org/account/avatar/00/10/ca/0c/bbcdd6aa.jpg","nickname":"蹦～沙卡拉卡","note":"","ucode":"DCA29164DD4669","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":209115,"discussion_content":"事务提交后是不能回滚的，所以第二步提交过程中，如果一个提交成功，一个提交失败，只能重复调用第二个的提交操作，或者人为补偿操作。 不能回滚第一个提交操作了。","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1584611475,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1212902,"avatar":"https://static001.geekbang.org/account/avatar/00/12/81/e6/6cafed37.jpg","nickname":"旅途","note":"","ucode":"5022477E8E9441","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1100300,"avatar":"https://static001.geekbang.org/account/avatar/00/10/ca/0c/bbcdd6aa.jpg","nickname":"蹦～沙卡拉卡","note":"","ucode":"DCA29164DD4669","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":209318,"discussion_content":"哦，谢谢","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584627261,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":209115,"ip_address":""},"score":209318,"extra":""}]},{"author":{"id":1005391,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/57/4f/6fb51ff1.jpg","nickname":"一步","note":"","ucode":"73CEA468CE70C3","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":199059,"discussion_content":"对的，是能回滚的，在执行分布式事务的时候，只要有一个节点说我这有问题，无法执行，就会给协调者发送无法准备好，然后协调者就会给所有参与事务的节点发送回滚的请求，让节点释放之前锁定的资源","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1583551887,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":4,"child_discussions":[{"author":{"id":1212902,"avatar":"https://static001.geekbang.org/account/avatar/00/12/81/e6/6cafed37.jpg","nickname":"旅途","note":"","ucode":"5022477E8E9441","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1005391,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/57/4f/6fb51ff1.jpg","nickname":"一步","note":"","ucode":"73CEA468CE70C3","race_medal":0,"user_type":1,"is_pvip":true},"discussion":{"id":200436,"discussion_content":"谢谢","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1583680225,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":199059,"ip_address":""},"score":200436,"extra":""},{"author":{"id":1036370,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/d0/52/014accaf.jpg","nickname":"划过天空阿忠","note":"","ucode":"9D9BEE73031E40","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1005391,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/57/4f/6fb51ff1.jpg","nickname":"一步","note":"","ucode":"73CEA468CE70C3","race_medal":0,"user_type":1,"is_pvip":true},"discussion":{"id":215306,"discussion_content":"事务已经提交了，还可以回滚？重新调取消接口吧","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585313551,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":199059,"ip_address":""},"score":215306,"extra":""},{"author":{"id":1206132,"avatar":"https://static001.geekbang.org/account/avatar/00/12/67/74/3db92b61.jpg","nickname":"一千年以后","note":"","ucode":"0FF27C1ADDE351","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1005391,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/57/4f/6fb51ff1.jpg","nickname":"一步","note":"","ucode":"73CEA468CE70C3","race_medal":0,"user_type":1,"is_pvip":true},"discussion":{"id":219260,"discussion_content":"事务提交不可以回滚的，亲","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1585748576,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":199059,"ip_address":""},"score":219260,"extra":""}]}]},{"had_liked":false,"id":185197,"user_name":"公号-技术夜未眠","can_delete":false,"product_type":"c1","uid":1013683,"ip_address":"","ucode":"83825B57CBD952","user_header":"https://static001.geekbang.org/account/avatar/00/0f/77/b3/991f3f9b.jpg","comment_is_top":false,"comment_ctime":1583511188,"is_pvip":true,"discussion_count":5,"race_medal":0,"score":"1583511188","product_id":100046801,"comment_content":"对于锁库存的事情，可以考虑先减库存，再生成订单的模式;这样可以减少资源依赖。","like_count":0,"discussions":[{"author":{"id":1276690,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Cib5umA0W17N9pichI08pnrXAExdbyh7AVzH4nEhD6KN3FXuELk4LJJuqUPPD7xmIy9nq5Hjbgnzic7sVZG5BKiaUQ/132","nickname":"被过去推开","note":"","ucode":"8B4F34FE93FD5B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":250454,"discussion_content":"从用户的角度看，下了订单后需要马上查看订单，但是此时订单表的数据可能还在异步生成中，这会影响用户体验的","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1588002485,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1886331,"avatar":"https://static001.geekbang.org/account/avatar/00/1c/c8/7b/153181d7.jpg","nickname":"夜辉","note":"","ucode":"9421385F51FF9E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":366020,"discussion_content":"仍然有资源依赖\n异步，多减扣库存，超卖\n同步，2PC，性能较低\n感觉后面会讲TCC，失败可以补偿业务，保证分布式事务的数据一致性","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1617941730,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1945605,"avatar":"https://static001.geekbang.org/account/avatar/00/1d/b0/05/c9da834e.jpg","nickname":"小人物大希望","note":"","ucode":"8EF313AA26D4B8","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":231460,"discussion_content":"这样还是无法使用本地消息表吧","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1586808097,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1022127,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/98/af/3945cea4.jpg","nickname":"一剑","note":"","ucode":"93ADD5B5215D4C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":199025,"discussion_content":"问题是业务的发起是从订单系统开始的，库存系统没有“下单”这件事吧","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1583549166,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1013683,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/77/b3/991f3f9b.jpg","nickname":"公号-技术夜未眠","note":"","ucode":"83825B57CBD952","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1022127,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/98/af/3945cea4.jpg","nickname":"一剑","note":"","ucode":"93ADD5B5215D4C","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":199809,"discussion_content":"业务逻辑的实现顺序可以由自己来定制的，可以灵活应用。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1583629562,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":199025,"ip_address":""},"score":199809,"extra":""}]}]}]}