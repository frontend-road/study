{"id":40582,"title":"40 | 从小工到专家：聊聊测试执行环境的架构设计（上）","content":"<p>你好，我是茹炳晟，今天我和你分享的主题是“从小工到专家：聊聊测试执行环境的架构设计（上）”。</p>\n<p>在上一篇文章中，我介绍了Selenium Grid的基础知识，以及如何搭建Selenium Grid。现在，你已经非常清楚，Selenium Grid的作用主要是承担了测试执行机器的角色，被用来执行实际的测试工作。但是，实际工程中的测试执行环境往往更复杂，而测试执行机器也只是其中的一个重要部分。</p>\n<p>因此，我们还需要控制发起测试的Jenkins，并管理测试用例执行和结果显示的系统。同时，为了更方便地与CI/CD流水线集成，我们还希望不同类型的测试发起过程可以有统一的接口。</p>\n<p>那么，从今天开始的两篇文章，我将由浅入深地和你聊聊测试执行环境中的基本概念，以及架构设计的思路。</p>\n<h2>什么是测试执行环境？</h2>\n<p>测试执行环境的定义有广义和狭义之分：</p>\n<ul>\n<li>狭义的测试执行环境，单单指测试执行的机器或者集群。比如，我在上一篇文章<a href=\"https://time.geekbang.org/column/article/40468\">《从小作坊到工厂：什么是Selenium Grid？如何搭建Selenium Grid？》</a>中介绍的Selenium Grid就是一个最经典的测试执行集群环境。</li>\n<li>广义的测试执行环境，除了包含具体执行测试的测试执行机以外，还包括测试执行的机器或者集群的创建与维护、测试执行集群的容量规划、测试发起的控制、测试用例的组织以及测试用例的版本控制等等。</li>\n</ul><!-- [[[read_end]]] -->\n<p>因此，<strong>广义的测试执行环境也被称为测试基础架构。而，我在测试基础架构这个系列里，要和你讨论的是广义上的测试执行环境。也就是说，我会和你重点讨论测试基础架构的概念和设计。</strong></p>\n<p>如果你是在一些小型的软件公司做测试工程师的话，可能并没有听说过“测试基础架构”这个概念，或者也只是停留在对其的一知半解上。但，实际情况是，无论小型的软件公司还是中大型的软件公司都存在测试基础架构。</p>\n<p>只是，在小型的软件公司，由于自动化测试的执行量相对较小，测试形式也相对单一，所以测试执行架构非常简单，可能只需要几台固定的专门用于测试执行的机器就可以了。那么，此时测试基础架构的表现形式就是测试执行环境。</p>\n<p>而对于中大型的软件公司，尤其是大型的全球化电商企业，由于需要执行的自动化测试用例数量非常多，再加上测试本身的多样性需求，测试基础架构的设计是否高效和稳定将直接影响产品是否可以快速迭代、发布上线。因此，中大型的软件公司都会在测试基础架构上有比较大的投入。</p>\n<p>一般情况下，中大型企业在测试基础架构上的投入，主要是为了解决以下这几方面的问题：</p>\n<ul>\n<li><strong>简化测试的执行过程</strong>。我们不用每次执行测试时，都必须先去准备测试执行机，因为测试执行机的获取就像日常获取水电一样方便了。</li>\n<li><strong>最大化测试执行机器的资源利用率</strong>，使得大量的测试执行机可以以服务的形式为公司层面的各个项目团队提供测试执行的能力。</li>\n<li><strong>提供大量测试用例的并发执行能力</strong>，使得我们可以在有限的时间内执行更多的测试用例。</li>\n<li><strong>提供测试用例的版本控制机制</strong>，使得测试执行的时候可以根据实际被测系统的软件版本自动选择对应的测试用例版本。</li>\n<li><strong>提供友好的用户界面</strong>，便于测试的统一管理、执行与结果展示。</li>\n<li><strong>提供了与CI/CD流水线的统一集成机制</strong>，从而可以很方便地在CI/CD流水线中发起测试调用。</li>\n</ul>\n<p>以此类推，如果你想要设计出高效的测试基础架构，就必须要从以下几个方面着手：</p>\n<p><strong>对使用者而言，测试基础架构的“透明性”</strong>。也就是说，测试基础架构的使用者，无需知道测试基础架构的内部设计细节，只要知道如何使用就行。</p>\n<p>我在上一篇文章中和你探讨的Selenium Grid，就是一个很好的案例。实际使用Selenium Grid时，你只需要知道Hub的地址，以及测试用例对操作系统和浏览器的要求就可以，而无需关注Selenium Grid到底有哪些Node，以及各个Node又是如何维护的技术细节。</p>\n<p><strong>对维护者而言，测试基础架构的“易维护性”</strong>。对于一些大型的测试而言，你需要维护的测试执行机的数量会相当大，比如Selenium的Node的数量达到成百上千台后，如果遇到WebDriver升级、浏览器升级、病毒软件升级的情况时，如何高效地管理数量庞大的测试执行机将会成为一大挑战。</p>\n<p>所以，早期基于物理机和虚拟机时，这个执行机的管理问题就非常严重。但是，出现了基于Docker的方案后，这些问题都因为Docker容器的技术优势而被轻松解决了。</p>\n<p><strong>对大量测试用例的执行而言，测试基础架构执行能力的“可扩展性”</strong>。这里的可扩展性指的是，测试执行集群的规模可以随着测试用例的数量自动扩容或者收缩。</p>\n<p>以Selenium Gird为例，可扩展性就是Node的数量和类型，可以根据测试用例的数量和类型进行自动调整。这里，建议你先记住这个概念，我还会在专栏的后续文章中详细展开。</p>\n<p><strong>随着移动App的普及，测试基础架构中的测试执行机需要支持移动终端和模拟器的测试执行</strong>。目前，很多的商业云测平台已经可以支持各种手机终端的测试执行了。其后台实现，基本都是采用的Appium + OpenSTF + Selenium Gird的方案。</p>\n<p>很多中小企业，因为技术水平以及研发成本的限制，一般直接使用这类商业解决方案。但是，对于大型企业来说，出于安全性和可控制性的考量，一般会选择自己搭建移动测试执行环境。</p>\n<p>理解了什么是测试执行环境后，我们再一起看看测试基础架构的设计吧。</p>\n<p>但是，这里我需要说明的是，我并不会以目前业界的最佳实践为例，和你讨论应该如何设计测试基础架构。</p>\n<p>为什么呢？因为这样做，虽然看似可以简单粗暴地解决实际问题，但是这中间涉及到的琐碎问题，将会淹没测试基础架构设计的主线，反而会让你更加困惑为什么我要这么做，而不能那么做。</p>\n<p>因此，本着“知其所以然”的原则，我还是会以遇到问题然后解决问题的思路，由浅入深地从最早期的测试基础架构说起，带你一起去经历一次测试基础架构设计思路的演进。在我看来，这样的思路，才是深入理解一门技术的有效途径，也希望你可以借此将测试基础架构的关键问题吃得更透。</p>\n<h2>早期的测试基础架构</h2>\n<p>早期的测试基础架构，会将测试用例存储在代码仓库中，然后是用Jenkins Job来Pull代码并完成测试的发起工作。如图1所示。</p>\n<p><img src=\"https://static001.geekbang.org/resource/image/f2/ba/f20e2df431199038d25e9cabcacc31ba.png?wh=547*439\" alt=\"\" /></p>\n<center>图1 早期的测试基础架构</center>\n<p>在这种架构下，自动化测试用例的开发和执行流程，是按照以下步骤执行的：</p>\n<ol>\n<li>\n<p><strong>自动化测试开发人员在本地机器开发和调试测试用例</strong>。这个开发和调试过程，通常是测试开发人员自己的工作电脑上进行。也就是说，他们在开发完测试用例后，会在本机执行测试用例。这些测试用例，会在本机打开指定的浏览器并访问被测网站的URL，然后发起业务操作，完成自动化测试。</p>\n</li>\n<li>\n<p><strong>将开发的测试用例代码，Push到代码仓库</strong>。如果自动化测试脚本在测试开发人员本地的电脑上顺利执行完成，那么接下来，我们就会将测试用例的代码Push到代码仓库，至此标志着自动化测试用例的开发工作已经完成。</p>\n</li>\n<li>\n<p><strong>在Jenkins中建立一个Job，用于发起测试的执行</strong>。这个Jenkins Job的主要工作是，先从测试用例代码仓库中Pull测试用例代码，并发起构建操作；然后，在远端或者本地固定的测试执行机上发起测试用例的执行。<br />\n这个Jenkins Job通常会将一些会发生变化的参数作为Job自身的输入参数。比如，远端或者本地固定的测试执行机的IP地址或者名字；再比如，被测系统有多套环境，需要指定被测系统的具体名字等。</p>\n</li>\n</ol>\n<p>这种测试架构，对于测试用例数量不多、被测系统软件版本不太复杂的场景的测试需求，基本都可以满足。但在实际使用时，你总会感觉哪里不太方便。</p>\n<p>比如，每次通过Jenkins Job发起测试时，你都需要填写测试用例需要在哪台测试执行机上执行。而此时，这台测试执行机是否处于可用状态，是否正在被其他测试用例占用都是不可知的，那么你就需要在测试发起前进行人为确认，或者开发一个执行机器环境检查的脚本帮你确认。并且，当远端测试执行机的IP或者名字有变化时，或者当远端测试执行机的数量有变动时，你都需要能提前获知这些信息。</p>\n<p>所以，这些局限性，也就决定了这种架构只能适用于小型项目。</p>\n<p>说到这里，你可能已经想到了，不是有Selenium Grid吗？我完全可以用Selenium Gird代替固定的测试执行机。没错，这就是测试基础架构的第一次的重大演进，也因此形成了目前已经被广泛使用的经典测试基础架构。</p>\n<h2>经典的测试基础架构</h2>\n<p>用Selenium Grid代替早期测试基础架构中的“远端或本地固定的测试执行机器”，就形成了经典的测试基础架构。其架构如图2所示。</p>\n<p><img src=\"https://static001.geekbang.org/resource/image/8e/8c/8e9da1055a174071903c785fcabdf78c.png?wh=799*550\" alt=\"\" /></p>\n<center>图2 经典的测试基础架构</center>\n<p>这样，你在每次发起测试时，就不再需要指定具体的测试执行机器了，只要提供固定的Selenium Hub地址就行，然后Selenium Hub就会自动帮你选择合适的测试执行机。</p>\n<p>同时，由于Selenium Grid中Node的数量可以按需添加，所以整体的测试执行任务比较重时，你就可以增加Grid中Node的数量。</p>\n<p>另外，Selenium还支持测试用例的并发执行，可以有效缩短整体的测试执行时间。</p>\n<p>所以，这种基于Selenium Grid的经典测试基础架构，已经被大量企业广泛采用。</p>\n<p>但是，随着测试用例数量的继续增加，传统的Selenium Grid方案在集群扩容、集群Node维护等方面遇到了瓶颈，并且Jenkins Job也因为测试用例的增加变得臃肿不堪。因此，变革经典的测试基础架构的呼声，也越来越高。</p>\n<p>为此，业界考虑将Selenium Grid迁移到Docker，并且提供便于Jenkins Job管理的统一测试执行平台。这也是我将在下一篇文章中，要和你继续讨论的话题。</p>\n<p>拭目以待吧。</p>\n<h2>总结</h2>\n<p>从广义上讲，测试执行环境除了包括测试执行机以外，还包括测试执行机的维护、集群的容量规划、测试发起的控制、测试用例的组织以及测试用例的版本控制等等。这也就是我要和你的测试基础架构的定义。</p>\n<p>从定义上，我们也可以看出在设计一个高效的测试基础架构，应该从这几个方面着手：</p>\n<ul>\n<li>保证对使用者的“透明性”；</li>\n<li>需要具备对维护者而言的“易维护性”；</li>\n<li>做到对大量测试用例并发执行的“可扩展性”；</li>\n<li>兼顾移动App对测试执行环境的需求。</li>\n</ul>\n<p>然后，我以遇到问题然后解决问题的思路，和你分享了早期的测试基础架构向经典的测试基础架构的演进。这个演变可以归纳为，用Selenium Grid代替早期测试基础架构中的“远端或本地固定的测试执行机器”，打破了因为需要人为指定并维护测试执行机，而只能适用于小型测试项目的局限性，从而形成了已被广泛使用的经典测试基础架构。</p>\n<p>而经典的测试基础架构，在测试用例持续增加时，也会面临诸如集群扩容、Jenkins Job臃肿不堪等等问题，于是基于Docker的测试基础架构便应运而生了。</p>\n<h2>思考题</h2>\n<p>你所在的团队是否在使用Selenium Grid？在实际使用过程中，你是否有遇到过什么瓶颈，又是如何解决的呢？</p>\n<p>感谢你的收听，欢迎你给我留言一起讨论。</p>\n<p></p>\n","neighbors":{"left":{"article_title":"39 | 从小作坊到工厂：什么是Selenium Grid？如何搭建Selenium Grid？","id":40468},"right":{"article_title":"41 | 从小工到专家：聊聊测试执行环境的架构设计（下）","id":40915}},"comments":[{"had_liked":false,"id":94874,"user_name":"口水窝","can_delete":false,"product_type":"c1","uid":1004838,"ip_address":"","ucode":"6028B5AA10D8A1","user_header":"https://static001.geekbang.org/account/avatar/00/0f/55/26/154f9578.jpg","comment_is_top":false,"comment_ctime":1557914423,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"14442816311","product_id":100009601,"comment_content":"大概loadrunner出现的初期，有控制机、执行机的概念，这个就相当于Selenium Grid的雏形。但是Selenium Grid还没实践过，现在的公司小，就我一个测试，还没兼顾到这个地位，加油，需要学习的更多。","like_count":3},{"had_liked":false,"id":28828,"user_name":"元让","can_delete":false,"product_type":"c1","uid":1007149,"ip_address":"","ucode":"C84195CE61A643","user_header":"https://static001.geekbang.org/account/avatar/00/0f/5e/2d/99b4675c.jpg","comment_is_top":false,"comment_ctime":1538154570,"is_pvip":false,"replies":[{"id":"10853","content":"gird目前依旧是最主流的分布式测试执行方案，不知道你说的技术老是指哪个方面？","user_name":"作者回复","user_name_real":"dhrbc","uid":"1002226","ctime":1538699200,"ip_address":"","comment_id":28828,"utype":1}],"discussion_count":2,"race_medal":0,"score":"10128089162","product_id":100009601,"comment_content":"没有，selenium  grid 除了分布式执行外没有更多优势，而且技术太老了","like_count":2,"discussions":[{"author":{"id":1002226,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/4a/f2/6ea13762.jpg","nickname":"茹炳晟","note":"","ucode":"1361AE1931E2DD","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":425386,"discussion_content":"gird目前依旧是最主流的分布式测试执行方案，不知道你说的技术老是指哪个方面？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1538699200,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1525036,"avatar":"https://static001.geekbang.org/account/avatar/00/17/45/2c/3c069703.jpg","nickname":"凛冬的寒风","note":"","ucode":"9170E678A9CB36","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":650,"discussion_content":"感觉越来越水了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1561880355,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":283603,"user_name":"陆培尔","can_delete":false,"product_type":"c1","uid":1095319,"ip_address":"","ucode":"B9AE067272513B","user_header":"https://static001.geekbang.org/account/avatar/00/10/b6/97/93e82345.jpg","comment_is_top":false,"comment_ctime":1615854963,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5910822259","product_id":100009601,"comment_content":"selenium grid之类的技术我理解都是k8没出来之前的产物，现在主流的流水线比如jenkins或者gitlab-ci，都支持和k8直接对接，每个job都会拉起一个pod进行构建或者测试，由k8进行整个集群的资源调度，测试任务不需要关心基础资源的情况","like_count":2},{"had_liked":false,"id":28422,"user_name":"Robert小七","can_delete":false,"product_type":"c1","uid":1165254,"ip_address":"","ucode":"6BBF4674673AF5","user_header":"https://static001.geekbang.org/account/avatar/00/11/c7/c6/35cc7c7c.jpg","comment_is_top":false,"comment_ctime":1538092534,"is_pvip":false,"replies":[{"id":"10855","content":"嗯嗯，规模不大的时候没有问题，但是当规模上去之后就不行了","user_name":"作者回复","user_name_real":"dhrbc","uid":"1002226","ctime":1538699251,"ip_address":"","comment_id":28422,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5833059830","product_id":100009601,"comment_content":"我们还在使用早期的方案，测试机器都是在本地","like_count":2,"discussions":[{"author":{"id":1002226,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/4a/f2/6ea13762.jpg","nickname":"茹炳晟","note":"","ucode":"1361AE1931E2DD","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":425261,"discussion_content":"嗯嗯，规模不大的时候没有问题，但是当规模上去之后就不行了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1538699251,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":336989,"user_name":"小呀么小二郎","can_delete":false,"product_type":"c1","uid":1326905,"ip_address":"","ucode":"149540DCFDF43E","user_header":"https://static001.geekbang.org/account/avatar/00/14/3f/39/b1558fc9.jpg","comment_is_top":false,"comment_ctime":1646538735,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1646538735","product_id":100009601,"comment_content":"没用过Selenium Grid，打卡学习～","like_count":0},{"had_liked":false,"id":251211,"user_name":"Geek_a4cca6","can_delete":false,"product_type":"c1","uid":2136813,"ip_address":"","ucode":"68B3E4FDECFFF0","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/5GQZCecntmOibVjWkMWVnibqXEZhAYnFiaRkgfAUGdrQBWzfXjqsYteLee6afDEjvBLBVa5uvtWYTTicwO2jKia0zOw/132","comment_is_top":false,"comment_ctime":1601424629,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1601424629","product_id":100009601,"comment_content":"我目前使用的是二台node机器在跑，后面运行一段时间后，发现多线程去跑，不太稳定，后面就改成了还是一台机器跑，我用的是pytesT多并发的方式，目的就是想平分测试用例到测试机，缩短运行时间，不知道是不是pytest的原因？","like_count":0},{"had_liked":false,"id":240235,"user_name":"捷后愚生","can_delete":false,"product_type":"c1","uid":1170483,"ip_address":"","ucode":"A1F935D39C8488","user_header":"https://static001.geekbang.org/account/avatar/00/11/dc/33/a68c6b26.jpg","comment_is_top":false,"comment_ctime":1596800246,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1596800246","product_id":100009601,"comment_content":"知道现在所在的公司有搭建了自动化测试平台，但是之前是不了解其整体架构和原理的，通过学习这篇文章，我想这些平台的基本架构跟老师文章所说的应该是差不多的，可能会有一些不同。","like_count":0,"discussions":[{"author":{"id":1672674,"avatar":"https://static001.geekbang.org/account/avatar/00/19/85/e2/540b91fa.jpg","nickname":"凯耐","note":"","ucode":"DF9C2170509BD0","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":318925,"discussion_content":"架构都一样，没什么大的区别","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1603884570,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":195237,"user_name":" Ella","can_delete":false,"product_type":"c1","uid":1164722,"ip_address":"","ucode":"50F2C364FA8C14","user_header":"https://static001.geekbang.org/account/avatar/00/11/c5/b2/31ddddd0.jpg","comment_is_top":false,"comment_ctime":1585148557,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1585148557","product_id":100009601,"comment_content":"selenium测试用例并发执行可以简单讲一下怎么实现吗？谢谢","like_count":0},{"had_liked":false,"id":195226,"user_name":" Ella","can_delete":false,"product_type":"c1","uid":1164722,"ip_address":"","ucode":"50F2C364FA8C14","user_header":"https://static001.geekbang.org/account/avatar/00/11/c5/b2/31ddddd0.jpg","comment_is_top":false,"comment_ctime":1585147887,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1585147887","product_id":100009601,"comment_content":"想了解为什么不用多进程实现并发测试，而是用Jenkins job并行？","like_count":0,"discussions":[{"author":{"id":1429232,"avatar":"https://static001.geekbang.org/account/avatar/00/15/ce/f0/39bb68a4.jpg","nickname":"超🚀","note":"","ucode":"77FF699535FE5E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":278779,"discussion_content":"jenkins job无人值守，可以定时持续执行，生成报告，发送信息，触发报警","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1591233609,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":192400,"user_name":"Geek_bd7eb1","can_delete":false,"product_type":"c1","uid":1250635,"ip_address":"","ucode":"E7B29EFBB41D64","user_header":"https://static001.geekbang.org/account/avatar/00/13/15/4b/dc4fb21c.jpg","comment_is_top":false,"comment_ctime":1584848859,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1584848859","product_id":100009601,"comment_content":"上一个公司就是用的早期的方案","like_count":0},{"had_liked":false,"id":134612,"user_name":"牺牲","can_delete":false,"product_type":"c1","uid":1619402,"ip_address":"","ucode":"5780E562A43494","user_header":"https://static001.geekbang.org/account/avatar/00/18/b5/ca/bba4d696.jpg","comment_is_top":false,"comment_ctime":1568878255,"is_pvip":false,"discussion_count":0,"race_medal":2,"score":"1568878255","product_id":100009601,"comment_content":"目前团队还未开展自动化测试，自动化仍在摸索中。","like_count":0},{"had_liked":false,"id":60437,"user_name":"年轻人的瞎折腾^.","can_delete":false,"product_type":"c1","uid":1266462,"ip_address":"","ucode":"179997C9622609","user_header":"https://static001.geekbang.org/account/avatar/00/13/53/1e/7d098b33.jpg","comment_is_top":false,"comment_ctime":1547472264,"is_pvip":false,"replies":[{"id":"26068","content":"这里本身并没有介绍docker本身的知识，主要是利用docker来搭建测试的执行环境","user_name":"作者回复","user_name_real":"dhrbc","uid":"1002226","ctime":1551502876,"ip_address":"","comment_id":60437,"utype":1}],"discussion_count":1,"race_medal":1,"score":"1547472264","product_id":100009601,"comment_content":"我们现在用的就是docker技术~但是具体的原理并不是很熟悉，可以听老师讲了~","like_count":0,"discussions":[{"author":{"id":1002226,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/4a/f2/6ea13762.jpg","nickname":"茹炳晟","note":"","ucode":"1361AE1931E2DD","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":436507,"discussion_content":"这里本身并没有介绍docker本身的知识，主要是利用docker来搭建测试的执行环境","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1551502876,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":40364,"user_name":"yingjin","can_delete":false,"product_type":"c1","uid":1171895,"ip_address":"","ucode":"DFA6252673E941","user_header":"https://static001.geekbang.org/account/avatar/00/11/e1/b7/21665459.jpg","comment_is_top":false,"comment_ctime":1542603919,"is_pvip":false,"replies":[{"id":"15933","content":"应该是不能的","user_name":"作者回复","user_name_real":"dhrbc","uid":"1002226","ctime":1543469974,"ip_address":"","comment_id":40364,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1542603919","product_id":100009601,"comment_content":"您好，我们公司也还在使用早期的方案，听了您的讲座对Selenium Grid很感兴趣。但是我们公司使用的UI自动化测试框架是微软的CodedUI，想问一下自动化框架使用的不是Selenium，还能使用Selenium Grid吗？","like_count":0,"discussions":[{"author":{"id":1002226,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/4a/f2/6ea13762.jpg","nickname":"茹炳晟","note":"","ucode":"1361AE1931E2DD","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":429496,"discussion_content":"应该是不能的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543469974,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]}]}