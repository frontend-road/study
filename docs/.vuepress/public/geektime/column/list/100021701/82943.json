{"id":82943,"title":"31丨关联规则挖掘（下）：导演如何选择演员？","content":"<p>上次我给你讲了关联规则挖掘的原理。关联规则挖掘在生活中有很多使用场景，不仅是商品的捆绑销售，甚至在挑选演员决策上，你也能通过关联规则挖掘看出来某个导演选择演员的倾向。</p><p>今天我来带你用Apriori算法做一个项目实战。你需要掌握的是以下几点：</p><ol>\n<li>\n<p>熟悉上节课讲到的几个重要概念：支持度、置信度和提升度；</p>\n</li>\n<li>\n<p>熟悉与掌握Apriori工具包的使用；</p>\n</li>\n<li>\n<p>在实际问题中，灵活运用。包括数据集的准备等。</p>\n</li>\n</ol><h2>如何使用Apriori工具包</h2><p>Apriori虽然是十大算法之一，不过在sklearn工具包中并没有它，也没有FP-Growth算法。这里教你个方法，来选择Python中可以使用的工具包，你可以通过<a href=\"https://pypi.org/\">https://pypi.org/</a> 搜索工具包。</p><p><img src=\"https://static001.geekbang.org/resource/image/76/c7/76a3b34beccbe7b69a11951b4efd80c7.png?wh=1726*767\" alt=\"\"><br>\n这个网站提供的工具包都是Python语言的，你能找到8个Python语言的Apriori工具包，具体选择哪个呢？建议你使用第二个工具包，即efficient-apriori。后面我会讲到为什么推荐这个工具包。</p><p>首先你需要通过pip install efficient-apriori 安装这个工具包。</p><p>然后看下如何使用它，核心的代码就是这一行：</p><pre><code>itemsets, rules = apriori(data, min_support,  min_confidence)\n</code></pre><p>其中data是我们要提供的数据集，它是一个list数组类型。min_support参数为最小支持度，在efficient-apriori工具包中用0到1的数值代表百分比，比如0.5代表最小支持度为50%。min_confidence是最小置信度，数值也代表百分比，比如1代表100%。</p><!-- [[[read_end]]] --><p>关于支持度、置信度和提升度，我们再来简单回忆下。</p><p>支持度指的是某个商品组合出现的次数与总次数之间的比例。支持度越高，代表这个组合出现的概率越大。</p><p>置信度是一个条件概念，就是在A发生的情况下，B发生的概率是多少。</p><p>提升度代表的是“商品A的出现，对商品B的出现概率提升了多少”。</p><p>接下来我们用这个工具包，跑一下上节课中讲到的超市购物的例子。下面是客户购买的商品列表：</p><p><img src=\"https://static001.geekbang.org/resource/image/a4/a6/a48f4a2961c3be811431418eb84aeaa6.png?wh=476*202\" alt=\"\"></p><p>具体实现的代码如下：</p><pre><code>from efficient_apriori import apriori\n# 设置数据集\ndata = [('牛奶','面包','尿布'),\n           ('可乐','面包', '尿布', '啤酒'),\n           ('牛奶','尿布', '啤酒', '鸡蛋'),\n           ('面包', '牛奶', '尿布', '啤酒'),\n           ('面包', '牛奶', '尿布', '可乐')]\n# 挖掘频繁项集和频繁规则\nitemsets, rules = apriori(data, min_support=0.5,  min_confidence=1)\nprint(itemsets)\nprint(rules)\n\n</code></pre><p>运行结果：</p><pre><code>{1: {('啤酒',): 3, ('尿布',): 5, ('牛奶',): 4, ('面包',): 4}, 2: {('啤酒', '尿布'): 3, ('尿布', '牛奶'): 4, ('尿布', '面包'): 4, ('牛奶', '面包'): 3}, 3: {('尿布', '牛奶', '面包'): 3}}\n[{啤酒} -&gt; {尿布}, {牛奶} -&gt; {尿布}, {面包} -&gt; {尿布}, {牛奶, 面包} -&gt; {尿布}]\n</code></pre><p>你能从代码中看出来，data是个List数组类型，其中每个值都可以是一个集合。实际上你也可以把data数组中的每个值设置为List数组类型，比如：</p><pre><code>data = [['牛奶','面包','尿布'],\n           ['可乐','面包', '尿布', '啤酒'],\n           ['牛奶','尿布', '啤酒', '鸡蛋'],\n           ['面包', '牛奶', '尿布', '啤酒'],\n           ['面包', '牛奶', '尿布', '可乐']]\n</code></pre><p>两者的运行结果是一样的，efficient-apriori 工具包把每一条数据集里的项式都放到了一个集合中进行运算，并没有考虑它们之间的先后顺序。因为实际情况下，同一个购物篮中的物品也不需要考虑购买的先后顺序。</p><p>而其他的Apriori算法可能会因为考虑了先后顺序，出现计算频繁项集结果不对的情况。所以这里采用的是efficient-apriori这个工具包。</p><h2>挖掘导演是如何选择演员的</h2><p>在实际工作中，数据集是需要自己来准备的，比如今天我们要挖掘导演是如何选择演员的数据情况，但是并没有公开的数据集可以直接使用。因此我们需要使用之前讲到的Python爬虫进行数据采集。</p><p>不同导演选择演员的规则是不同的，因此我们需要先指定导演。数据源我们选用豆瓣电影。</p><p>先来梳理下采集的工作流程。</p><p>首先我们先在<a href=\"https://movie.douban.com\">https://movie.douban.com</a>搜索框中输入导演姓名，比如“宁浩”。</p><p><img src=\"https://static001.geekbang.org/resource/image/ea/ef/eaba9861825a38b6fbd5af1bff7194ef.png?wh=1728*1150\" alt=\"\"><br>\n页面会呈现出来导演之前的所有电影，然后对页面进行观察，你能观察到以下几个现象：</p><ol>\n<li>\n<p>页面默认是15条数据反馈，第一页会返回16条。因为第一条数据实际上这个导演的概览，你可以理解为是一条广告的插入，下面才是真正的返回结果。</p>\n</li>\n<li>\n<p>每条数据的最后一行是电影的演出人员的信息，第一个人员是导演，其余为演员姓名。姓名之间用“/”分割。</p>\n</li>\n</ol><p>有了这些观察之后，我们就可以编写抓取程序了。在代码讲解中你能看出这两点观察的作用。抓取程序的目的是为了生成宁浩导演（你也可以抓取其他导演）的数据集，结果会保存在csv文件中。完整的抓取代码如下：</p><pre><code># -*- coding: utf-8 -*-\n# 下载某个导演的电影数据集\nfrom efficient_apriori import apriori\nfrom lxml import etree\nimport time\nfrom selenium import webdriver\nimport csv\ndriver = webdriver.Chrome()\n# 设置想要下载的导演 数据集\ndirector = u'宁浩'\n# 写CSV文件\nfile_name = './' + director + '.csv'\nbase_url = 'https://movie.douban.com/subject_search?search_text='+director+'&amp;cat=1002&amp;start='\nout = open(file_name,'w', newline='', encoding='utf-8-sig')\ncsv_write = csv.writer(out, dialect='excel')\nflags=[]\n# 下载指定页面的数据\ndef download(request_url):\n\tdriver.get(request_url)\n\ttime.sleep(1)\n\thtml = driver.find_element_by_xpath(&quot;//*&quot;).get_attribute(&quot;outerHTML&quot;)\n\thtml = etree.HTML(html)\n\t# 设置电影名称，导演演员 的XPATH\n\tmovie_lists = html.xpath(&quot;/html/body/div[@id='wrapper']/div[@id='root']/div[1]//div[@class='item-root']/div[@class='detail']/div[@class='title']/a[@class='title-text']&quot;)\n\tname_lists = html.xpath(&quot;/html/body/div[@id='wrapper']/div[@id='root']/div[1]//div[@class='item-root']/div[@class='detail']/div[@class='meta abstract_2']&quot;)\n\t# 获取返回的数据个数\n\tnum = len(movie_lists)\n\tif num &gt; 15: #第一页会有16条数据\n\t\t# 默认第一个不是，所以需要去掉\n\t\tmovie_lists = movie_lists[1:]\n\t\tname_lists = name_lists[1:]\n\tfor (movie, name_list) in zip(movie_lists, name_lists):\n\t\t# 会存在数据为空的情况\n\t\tif name_list.text is None: \n\t\t\tcontinue\n\t\t# 显示下演员名称\n\t\tprint(name_list.text)\n\t\tnames = name_list.text.split('/')\n\t\t# 判断导演是否为指定的director\n\t\tif names[0].strip() == director and movie.text not in flags:\n\t\t\t# 将第一个字段设置为电影名称\n\t\t\tnames[0] = movie.text\n\t\t\tflags.append(movie.text)\n\t\t\tcsv_write.writerow(names)\n\tprint('OK') # 代表这页数据下载成功\n\tprint(num)\n\tif num &gt;= 14: #有可能一页会有14个电影\n\t\t# 继续下一页\n\t\treturn True\n\telse:\n\t\t# 没有下一页\n\t\treturn False\n\n# 开始的ID为0，每页增加15\nstart = 0\nwhile start&lt;10000: #最多抽取1万部电影\n\trequest_url = base_url + str(start)\n\t# 下载数据，并返回是否有下一页\n\tflag = download(request_url)\n\tif flag:\n\t\tstart = start + 15\n\telse:\n\t\tbreak\nout.close()\nprint('finished')\n</code></pre><p>代码中涉及到了几个模块，我简单讲解下这几个模块。</p><p>在引用包这一段，我们使用csv工具包读写CSV文件，用efficient_apriori完成Apriori算法，用lxml进行XPath解析，time工具包可以让我们在模拟后有个适当停留，代码中我设置为1秒钟，等HTML数据完全返回后再进行HTML内容的获取。使用selenium的webdriver来模拟浏览器的行为。</p><p>在读写文件这一块，我们需要事先告诉python的open函数，文件的编码是utf-8-sig（对应代码：encoding=‘utf-8-sig’），这是因为我们会用到中文，为了避免编码混乱。</p><p>编写download函数，参数传入我们要采集的页面地址（request_url）。针对返回的HTML，我们需要用到之前讲到的Chrome浏览器的XPath Helper工具，来获取电影名称以及演出人员的XPath。我用页面返回的数据个数来判断当前所处的页面序号。如果数据个数&gt;15，也就是第一页，第一页的第一条数据是广告，我们需要忽略。如果数据个数=15，代表是中间页，需要点击“下一页”，也就是翻页。如果数据个数&lt;15，代表最后一页，没有下一页。</p><p>在程序主体部分，我们设置start代表抓取的ID，从0开始最多抓取1万部电影的数据（一个导演不会超过1万部电影），每次翻页start自动增加15，直到flag=False为止，也就是不存在下一页的情况。</p><p>你可以模拟下抓取的流程，获得指定导演的数据，比如我上面抓取的宁浩的数据。这里需要注意的是，豆瓣的电影数据可能是不全的，但基本上够我们用。</p><p><img src=\"https://static001.geekbang.org/resource/image/5e/16/5ea61131d1fce390040cf0edf6897a16.png?wh=1729*411\" alt=\"\"><br>\n有了数据之后，我们就可以用Apriori算法来挖掘频繁项集和关联规则，代码如下：</p><pre><code># -*- coding: utf-8 -*-\nfrom efficient_apriori import apriori\nimport csv\ndirector = u'宁浩'\nfile_name = './'+director+'.csv'\nlists = csv.reader(open(file_name, 'r', encoding='utf-8-sig'))\n# 数据加载\ndata = []\nfor names in lists:\n     name_new = []\n     for name in names:\n           # 去掉演员数据中的空格\n           name_new.append(name.strip())\n     data.append(name_new[1:])\n# 挖掘频繁项集和关联规则\nitemsets, rules = apriori(data, min_support=0.5,  min_confidence=1)\nprint(itemsets)\nprint(rules)\n</code></pre><p>代码中使用的apriori方法和开头中用Apriori获取购物篮规律的方法类似，比如代码中都设定了最小支持度和最小置信系数，这样我们可以找到支持度大于50%，置信系数为1的频繁项集和关联规则。</p><p>这是最后的运行结果：</p><pre><code>{1: {('徐峥',): 5, ('黄渤',): 6}, 2: {('徐峥', '黄渤'): 5}}\n[{徐峥} -&gt; {黄渤}]\n</code></pre><p>你能看出来，宁浩导演喜欢用徐峥和黄渤，并且有徐峥的情况下，一般都会用黄渤。你也可以用上面的代码来挖掘下其他导演选择演员的规律。</p><h2>总结</h2><p>Apriori算法的核心就是理解频繁项集和关联规则。在算法运算的过程中，还要重点掌握对支持度、置信度和提升度的理解。在工具使用上，你可以使用efficient-apriori这个工具包，它会把每一条数据中的项（item）放到一个集合（篮子）里来处理，不考虑项（item）之间的先后顺序。</p><p>在实际运用中你还需要灵活处理，比如导演如何选择演员这个案例，虽然工具的使用会很方便，但重要的还是数据挖掘前的准备过程，也就是获取某个导演的电影数据集。</p><p><img src=\"https://static001.geekbang.org/resource/image/28/9d/282c25e8651b3e0b675be7267d13629d.png?wh=1727*509\" alt=\"\"><br>\n最后给你留两道思考题吧。请你编写代码挖掘下张艺谋导演使用演员的频繁项集和关联规则，最小支持度可以设置为0.1或0.05。另外你认为Apriori算法中的最小支持度和最小置信度，一般设置为多少比较合理？</p><p>欢迎你在评论区与我分享你的答案，也欢迎点击“请朋友读”，把这篇文章分享给你的朋友或者同事。</p><p></p>","comments":[{"had_liked":false,"id":72934,"user_name":"mickey","can_delete":false,"product_type":"c1","uid":1051663,"ip_address":"","ucode":"8B490C2DDE4010","user_header":"https://static001.geekbang.org/account/avatar/00/10/0c/0f/93d1c8eb.jpg","comment_is_top":false,"comment_ctime":1551756568,"is_pvip":false,"replies":[{"id":64465,"content":"哈哈","user_name":"作者回复","user_name_real":"cy","uid":1306094,"ctime":1577619602,"ip_address":"","comment_id":72934,"utype":1}],"discussion_count":2,"race_medal":0,"score":2,"product_id":100021701,"comment_content":"最小支持度为0.1：\n{  1: {(&#39;倪大红&#39;,): 2, (&#39;刘德华&#39;,): 2, (&#39;姜文&#39;,): 2, (&#39;巩俐&#39;,): 5, (&#39;李雪健&#39;,): 2, (&#39;章子怡&#39;,): 3, (&#39;葛优&#39;,): 2, (&#39;郭涛&#39;,): 2, (&#39;陈道明&#39;,): 2}, \n   2: {(&#39;倪大红&#39;, &#39;巩俐&#39;): 2, (&#39;巩俐&#39;, &#39;郭涛&#39;): 2}}\n[{倪大红} -&gt; {巩俐}, {郭涛} -&gt; {巩俐}]\n\n最小支持度为0.05：\n太多了。。。。\n\n结论：不管男一号选谁，女一号必须是巩俐。","like_count":13},{"had_liked":false,"id":69721,"user_name":"third","can_delete":false,"product_type":"c1","uid":1025114,"ip_address":"","ucode":"9A37408A834F0B","user_header":"https://static001.geekbang.org/account/avatar/00/0f/a4/5a/e708e423.jpg","comment_is_top":false,"comment_ctime":1550818475,"is_pvip":false,"replies":[{"id":25528,"content":"对 和数据集特点有关系，不过数据集大的情况下，不好观察特征。我们可以通过设置最小值支持度和最小置信度来观察关联规则的结果。\n一般来说最小支持度常见的取值有0.5，0.1, 0.05。最小置信度常见的取值有1.0, 0.9, 0.8。可以通过尝试一些取值，然后观察关联结果的方式来调整最小值尺度和最小置信度的取值。","user_name":"编辑回复","user_name_real":"何昌梅","uid":1165037,"ctime":1551321529,"ip_address":"","comment_id":69721,"utype":2}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100021701,"comment_content":"个人的直觉感觉，这个应该跟数据集的大小和特点有关。\n\n","like_count":11,"discussions":[{"author":{"id":1306094,"avatar":"https://static001.geekbang.org/account/avatar/00/13/ed/ee/c4779b67.jpg","nickname":"cy","note":"","ucode":"50D653399A31F6","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":441832,"discussion_content":"哈哈","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577619602,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1919541,"avatar":"https://static001.geekbang.org/account/avatar/00/1d/4a/35/66caeed9.jpg","nickname":"完美坚持","note":"","ucode":"AE0261D8DDEF64","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":369009,"discussion_content":"铁打的巩俐，流水的男明星","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1618902765,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":87918,"user_name":"滢","can_delete":false,"product_type":"c1","uid":1221511,"ip_address":"","ucode":"971A6F20AF3F9A","user_header":"https://static001.geekbang.org/account/avatar/00/12/a3/87/c415e370.jpg","comment_is_top":false,"comment_ctime":1555753175,"is_pvip":false,"replies":[{"id":64236,"content":"Good Job 滢","user_name":"作者回复","user_name_real":"cy","uid":1306094,"ctime":1577615032,"ip_address":"","comment_id":87918,"utype":1}],"discussion_count":2,"race_medal":0,"score":2,"product_id":100021701,"comment_content":"选的张艺谋爬取数据，开始的时候设置min_support = 0.5 没有分析出项集，还以为是数据有错，结果发现是支持度设的太高来，没有达到条件的。好尴尬~ \n#第二步：用Apriori算法进行关联分析\n#数据加载\ndirector = &#39;张艺谋&#39;\n#写CSV文件\npath = &#39;&#47;Users&#47;apple&#47;Desktop&#47;GitHubProject&#47;Read mark&#47;数据分析&#47;geekTime&#47;data&#47;&#39;\nfile_name = path + director +&#39;.csv&#39;\nprint(file_name)\nlists = csv.reader(open(file_name, &#39;r&#39;, encoding=&#39;utf-8-sig&#39;))\ndata =[]\nfor names in lists:\n    name_new = []\n    for name in names:\n        name_new.append(name.strip())\n    if len(name_new[1:]) &gt;0:\n        data.append(name_new[1:])\nprint(&#39;data--&#39;,data)\n\n#挖掘频繁项集合关联规则\nitems,rules = apriori(data,min_support=0.05,min_confidence=1)\nprint(items)\nprint(rules)\n输出结果：\n{1: {(&#39;倪大红&#39;,): 3, (&#39;傅彪&#39;,): 2, (&#39;刘佩琦&#39;,): 2, (&#39;刘德华&#39;,): 2, (&#39;姜文&#39;,): 2, (&#39;孙红雷&#39;,): 3, (&#39;巩俐&#39;,): 9, (&#39;李保田&#39;,): 3, (&#39;李曼&#39;,): 2, (&#39;李雪健&#39;,): 5, (&#39;杨凤良&#39;,): 2, (&#39;牛犇&#39;,): 2, (&#39;章子怡&#39;,): 3, (&#39;葛优&#39;,): 3, (&#39;赵本山&#39;,): 2, (&#39;郭涛&#39;,): 2, (&#39;闫妮&#39;,): 2, (&#39;陈道明&#39;,): 2}, 2: {(&#39;倪大红&#39;, &#39;巩俐&#39;): 2, (&#39;傅彪&#39;, &#39;李雪健&#39;): 2, (&#39;刘佩琦&#39;, &#39;巩俐&#39;): 2, (&#39;孙红雷&#39;, &#39;赵本山&#39;): 2, (&#39;巩俐&#39;, &#39;李保田&#39;): 2, (&#39;巩俐&#39;, &#39;杨凤良&#39;): 2, (&#39;巩俐&#39;, &#39;葛优&#39;): 2, (&#39;巩俐&#39;, &#39;郭涛&#39;): 2, (&#39;李保田&#39;, &#39;李雪健&#39;): 2}}\n[{傅彪} -&gt; {李雪健}, {刘佩琦} -&gt; {巩俐}, {赵本山} -&gt; {孙红雷}, {杨凤良} -&gt; {巩俐}, {郭涛} -&gt; {巩俐}]","like_count":7,"discussions":[{"author":{"id":1306094,"avatar":"https://static001.geekbang.org/account/avatar/00/13/ed/ee/c4779b67.jpg","nickname":"cy","note":"","ucode":"50D653399A31F6","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":447647,"discussion_content":"Good Job 滢","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577615032,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1127175,"avatar":"https://static001.geekbang.org/account/avatar/00/11/33/07/8f351609.jpg","nickname":"JustDoDT","note":"","ucode":"6AF0B80F00EAEF","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":225556,"discussion_content":"from efficient_apriori import apriori\nimport csv\n\ndirector = &#39;宁浩&#39;\nfile_name = &#39;./&#39; + director + &#39;.csv&#39;\nlists = csv.reader(open(file_name, &#39;r&#39;, encoding=&#39;utf-8-sig&#39;))\n# 加载数据\ndata = []\nfor names in lists:\n    name_new = []\n    for name in names:\n        # 去掉演员数据中的空格\n        name_new.append(name.strip())\n    data.append(name_new[1:])\ndata = [tuple(i) for i in data if i != []]\n# 挖掘频繁项集和关联规则\nitemsets, rules = apriori(data, min_support=0.35, min_confidence=1)\nprint(itemsets)\nprint(rules)\n# 设置成0.35就和老师的答案一样了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1586361645,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":144663,"user_name":"一 青(๑• . •๑)ゝ","can_delete":false,"product_type":"c1","uid":1697211,"ip_address":"","ucode":"BB5DBB62B7CFFE","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/WRgI4eibxaZkRzOO7zBp49JcraBZIOQO9HNicYsxSV3yPZYeBAsG9m0j4wRJWfGBaDdw5Teiaibn6xhmyf43DmfjYg/132","comment_is_top":false,"comment_ctime":1571992054,"is_pvip":false,"replies":[{"id":59822,"content":"有一个工具包 import fptools as fp 你可以试试","user_name":"作者回复","user_name_real":"cy","uid":1306094,"ctime":1574757607,"ip_address":"","comment_id":144663,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100021701,"comment_content":"老师，FP-growth 在python有集成吗，，想用fp-growth试试","like_count":5,"discussions":[{"author":{"id":1306094,"avatar":"https://static001.geekbang.org/account/avatar/00/13/ed/ee/c4779b67.jpg","nickname":"cy","note":"","ucode":"50D653399A31F6","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":447647,"discussion_content":"Good Job 滢","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577615032,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1127175,"avatar":"https://static001.geekbang.org/account/avatar/00/11/33/07/8f351609.jpg","nickname":"JustDoDT","note":"","ucode":"6AF0B80F00EAEF","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":225556,"discussion_content":"from efficient_apriori import apriori\nimport csv\n\ndirector = &#39;宁浩&#39;\nfile_name = &#39;./&#39; + director + &#39;.csv&#39;\nlists = csv.reader(open(file_name, &#39;r&#39;, encoding=&#39;utf-8-sig&#39;))\n# 加载数据\ndata = []\nfor names in lists:\n    name_new = []\n    for name in names:\n        # 去掉演员数据中的空格\n        name_new.append(name.strip())\n    data.append(name_new[1:])\ndata = [tuple(i) for i in data if i != []]\n# 挖掘频繁项集和关联规则\nitemsets, rules = apriori(data, min_support=0.35, min_confidence=1)\nprint(itemsets)\nprint(rules)\n# 设置成0.35就和老师的答案一样了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1586361645,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":231620,"user_name":"Geeky_Ben","can_delete":false,"product_type":"c1","uid":1981878,"ip_address":"","ucode":"4889BFC8BF6EB3","user_header":"https://static001.geekbang.org/account/avatar/00/1e/3d/b6/e4a72acc.jpg","comment_is_top":false,"comment_ctime":1593737981,"is_pvip":false,"replies":[{"id":103707,"content":"if num &gt;= 14:\n    return True\nelse:\n    return False\n\n这部分代码需要在for循环外面。当for循环中有return时，一旦return运行，则for循环会被终止。","user_name":"作者回复","user_name_real":"cy","uid":1306094,"ctime":1617031884,"ip_address":"","comment_id":231620,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100021701,"comment_content":"请问一下各位大神，为什么我这个代码只把每一页的第一个电影的资料下载下来。我反复核对了很多次，跟导师的一样... 苦恼~~@@\nfrom efficient_apriori import apriori\nfrom lxml import etree\nimport time\nfrom selenium import webdriver\nfrom webdriver_manager.chrome import ChromeDriverManager\nimport csv\ndriver = webdriver.Chrome(ChromeDriverManager().install())\ndirector = u&#39;宁浩&#39;\nfile_name = &#39;.&#47;&#39; + director + &#39;.csv&#39;\nbase_url = &#39;https:&#47;&#47;movie.douban.com&#47;subject_search?search_text=&#39;+director+&#39;&amp;cat=1002&amp;start=&#39;\nout = open(file_name,&#39;w&#39;,newline = &#39;&#39;,encoding=&#39;utf-8-sig&#39;)\ncsv_write = csv.writer(out,dialect=&#39;excel&#39;)\nflags = []\n\ndef download(request_url):\n    driver.get(request_url)\n    time.sleep(1)\n    html = driver.find_element_by_xpath(&quot;&#47;&#47;*&quot;).get_attribute(&quot;outerHTML&quot;)\n    html = etree.HTML(html)\n    movie_lists = html.xpath(&quot;&#47;html&#47;body&#47;div[@id=&#39;wrapper&#39;]&#47;div[@id=&#39;root&#39;]&#47;div[1]&#47;&#47;div[@class=&#39;item-root&#39;]&#47;div[@class=&#39;detail&#39;]&#47;div[@class=&#39;title&#39;]&#47;a[@class=&#39;title-text&#39;]&quot;)\n    name_lists = html.xpath(&quot;&#47;html&#47;body&#47;div[@id=&#39;wrapper&#39;]&#47;div[@id=&#39;root&#39;]&#47;div[1]&#47;&#47;div[@class=&#39;item-root&#39;]&#47;div[@class=&#39;detail&#39;]&#47;div[@class=&#39;meta abstract_2&#39;]&quot;)\n    num = len(movie_lists)\n    if num &gt; 15:\n        movie_lists = movie_lists[1:]\n        name_lists = name_lists[1:]\n    for (movie,name_list) in zip(movie_lists,name_lists):\n        if name_list.text is None:\n            continue\n        print(name_list.text)\n        names = name_list.text.split(&#39;&#47;&#39;)\n        if names[0].strip() == director and movie.text not in flags:\n            names[0] = movie.text\n            flags.append(movie.text)\n            csv_write.writerow(names)\n        print(&#39;OK&#39;)\n        print(num)\n        if num &gt;= 14:\n            return True\n        else:\n            return False\nstart = 0\nwhile start &lt;10000:\n    request_url = base_url + str(start)\n    flag = download(request_url)\n    if flag:\n        start = start + 15\n    else:\n        break\nout.close()\nprint(&#39;Finished&#39;)\n","like_count":2,"discussions":[{"author":{"id":1306094,"avatar":"https://static001.geekbang.org/account/avatar/00/13/ed/ee/c4779b67.jpg","nickname":"cy","note":"","ucode":"50D653399A31F6","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":472061,"discussion_content":"有一个工具包 import fptools as fp 你可以试试","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574757607,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":204287,"user_name":"JustDoDT","can_delete":false,"product_type":"c1","uid":1127175,"ip_address":"","ucode":"6AF0B80F00EAEF","user_header":"https://static001.geekbang.org/account/avatar/00/11/33/07/8f351609.jpg","comment_is_top":false,"comment_ctime":1586359862,"is_pvip":false,"replies":[{"id":104317,"content":"感谢JustDoIt同学的分享，相似报错的同学可以看看","user_name":"作者回复","user_name_real":"cy","uid":1306094,"ctime":1617893255,"ip_address":"","comment_id":204287,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100021701,"comment_content":"Python3.6 遇到如下错误及解决方案：\n运行时报错：\nModuleNotFoundError: No module named &#39;dataclasses&#39;\n是因为efficient_apriori 依赖 dataclasses 安装 dataclasses 即可\npip install dataclasses","like_count":2,"discussions":[{"author":{"id":1306094,"avatar":"https://static001.geekbang.org/account/avatar/00/13/ed/ee/c4779b67.jpg","nickname":"cy","note":"","ucode":"50D653399A31F6","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":500377,"discussion_content":"if num &amp;gt;= 14:\n    return True\nelse:\n    return False\n\n这部分代码需要在for循环外面。当for循环中有return时，一旦return运行，则for循环会被终止。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1617031884,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":85087,"user_name":"普罗米修斯","can_delete":false,"product_type":"c1","uid":1354894,"ip_address":"","ucode":"6A76CC0061C272","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTID6xcHMMQdvZGvMMVHA2Y6xYpOyFO2VR2GTyFMbGS9BuWvZcEqHz62icGF6I4X6OCpokLeiaHo560A/132","comment_is_top":false,"comment_ctime":1554976074,"is_pvip":false,"replies":[{"id":64269,"content":"import fptools as fp 这个也可以","user_name":"作者回复","user_name_real":"cy","uid":1306094,"ctime":1577615765,"ip_address":"","comment_id":85087,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100021701,"comment_content":"如果要使用FP-Growth这个算法，是直接使用FP-Growth这个包吗？","like_count":2,"discussions":[{"author":{"id":1306094,"avatar":"https://static001.geekbang.org/account/avatar/00/13/ed/ee/c4779b67.jpg","nickname":"cy","note":"","ucode":"50D653399A31F6","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":491130,"discussion_content":"感谢JustDoIt同学的分享，相似报错的同学可以看看","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1617893255,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":74944,"user_name":"滢","can_delete":false,"product_type":"c1","uid":1221511,"ip_address":"","ucode":"971A6F20AF3F9A","user_header":"https://static001.geekbang.org/account/avatar/00/12/a3/87/c415e370.jpg","comment_is_top":false,"comment_ctime":1552318250,"is_pvip":false,"replies":[{"id":64435,"content":"看来你还是对统计学感兴趣，可以看下《统计数据会说谎》 这本不错，哈哈","user_name":"作者回复","user_name_real":"cy","uid":1306094,"ctime":1577619244,"ip_address":"","comment_id":74944,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100021701,"comment_content":"老师能推荐几本有关 概率论、统计学、运筹学的书嘛 ，感觉大学的课本比较枯燥","like_count":2,"discussions":[{"author":{"id":1306094,"avatar":"https://static001.geekbang.org/account/avatar/00/13/ed/ee/c4779b67.jpg","nickname":"cy","note":"","ucode":"50D653399A31F6","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":446554,"discussion_content":"import fptools as fp 这个也可以","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577615765,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":69745,"user_name":"third","can_delete":false,"product_type":"c1","uid":1025114,"ip_address":"","ucode":"9A37408A834F0B","user_header":"https://static001.geekbang.org/account/avatar/00/0f/a4/5a/e708e423.jpg","comment_is_top":false,"comment_ctime":1550826102,"is_pvip":false,"replies":[{"id":64512,"content":"Good Job","user_name":"作者回复","user_name_real":"cy","uid":1306094,"ctime":1577621110,"ip_address":"","comment_id":69745,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100021701,"comment_content":"感觉：1，张艺谋喜欢用那些组合的人\n2.某些组合出现的匹配率\n\n最小支持度为0.1，{1: {(&#39; 巩俐 &#39;,): 9, (&#39; 李雪健 &#39;,): 5}}\n\n最小支持度为0.05，{1: {(&#39; 葛优 &#39;,): 3, (&#39; 巩俐 &#39;,): 9, (&#39; 姜文 &#39;,): 2, (&#39; 郭涛 &#39;,): 2, (&#39; 李雪健 &#39;,): 5, (&#39; 陈维亚 &#39;,): 2, (&#39; 张继钢 &#39;,): 2, (&#39; 刘德华 &#39;,): 2, (&#39; 倪大红 &#39;,): 3, (&#39; 傅彪 &#39;,): 2, (&#39; 牛犇 &#39;,): 2, (&#39; 孙红雷 &#39;,): 2, (&#39; 闫妮 &#39;,): 2, (&#39; 陈道明 &#39;,): 2, (&#39; 赵本山 &#39;,): 2, (&#39; 杨凤良 &#39;,): 2, (&#39; 章子怡 &#39;,): 3, (&#39; 李保田 &#39;,): 3, (&#39; 刘佩琦 &#39;,): 2}, 2: {(&#39; 巩俐 &#39;, &#39; 李保田 &#39;): 2, (&#39; 巩俐 &#39;, &#39; 刘佩琦 &#39;): 2, (&#39; 葛优 &#39;, &#39; 巩俐 &#39;): 2, (&#39; 李雪健 &#39;, &#39; 傅彪 &#39;): 2, (&#39; 李雪健 &#39;, &#39; 李保田 &#39;): 2, (&#39; 巩俐 &#39;, &#39; 郭涛 &#39;): 2, (&#39; 陈维亚 &#39;, &#39; 张继钢 &#39;): 2, (&#39; 巩俐 &#39;, &#39; 杨凤良 &#39;): 2, (&#39; 巩俐 &#39;, &#39; 倪大红 &#39;): 2}}\n[{ 刘佩琦 } -&gt; { 巩俐 }, { 傅彪 } -&gt; { 李雪健 }, { 郭涛 } -&gt; { 巩俐 }, { 张继钢 } -&gt; { 陈维亚 }, { 陈维亚 } -&gt; { 张继钢 }, { 杨凤良 } -&gt; { 巩俐 }]","like_count":2,"discussions":[{"author":{"id":1306094,"avatar":"https://static001.geekbang.org/account/avatar/00/13/ed/ee/c4779b67.jpg","nickname":"cy","note":"","ucode":"50D653399A31F6","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":440260,"discussion_content":"Good Job","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577621110,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":78891,"user_name":"听妈妈的话","can_delete":false,"product_type":"c1","uid":1462417,"ip_address":"","ucode":"089D797A39C791","user_header":"https://static001.geekbang.org/account/avatar/00/16/50/91/0dd2b8ce.jpg","comment_is_top":false,"comment_ctime":1553270510,"is_pvip":false,"replies":[{"id":64374,"content":"Good Sharing","user_name":"作者回复","user_name_real":"cy","uid":1306094,"ctime":1577617954,"ip_address":"","comment_id":78891,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100021701,"comment_content":"我觉得mtime网上的电影信息更加全面，就从上面爬取的信息\n最小支持度为0.1:\n{1: {(&#39;倪大红&#39;,): 3, (&#39;孙红雷&#39;,): 3, (&#39;巩俐&#39;,): 9, (&#39;李保田&#39;,): 4, (&#39;李雪健&#39;,): 4, (&#39;章子怡&#39;,): 3, (&#39;葛优&#39;,): 3, (&#39;赵本山&#39;,): 3}, 2: {(&#39;巩俐&#39;, &#39;李保田&#39;): 3}}\n[]\n最小支持度为0.05:\n{1: {(&#39;丁嘉丽&#39;,): 2, (&#39;倪大红&#39;,): 3, (&#39;傅彪&#39;,): 2, (&#39;刘佩琦&#39;,): 2, (&#39;刘德华&#39;,): 2, (&#39;姜文&#39;,): 2, (&#39;孙红雷&#39;,): 3, (&#39;巩俐&#39;,): 9, (&#39;张艺谋&#39;,): 2, (&#39;李保田&#39;,): 4, (&#39;李雪健&#39;,): 4, (&#39;牛犇&#39;,): 2, (&#39;窦骁&#39;,): 2, (&#39;章子怡&#39;,): 3, (&#39;葛优&#39;,): 3, (&#39;董立范&#39;,): 2, (&#39;赵本山&#39;,): 3, (&#39;郑恺&#39;,): 2, (&#39;郭涛&#39;,): 2, (&#39;闫妮&#39;,): 2, (&#39;陈道明&#39;,): 2, (&#39;齐达内·苏阿内&#39;,): 2}, 2: {(&#39;倪大红&#39;, &#39;巩俐&#39;): 2, (&#39;傅彪&#39;, &#39;李雪健&#39;): 2, (&#39;刘佩琦&#39;, &#39;巩俐&#39;): 2, (&#39;孙红雷&#39;, &#39;赵本山&#39;): 2, (&#39;巩俐&#39;, &#39;李保田&#39;): 3, (&#39;巩俐&#39;, &#39;葛优&#39;): \n\n2, (&#39;巩俐&#39;, &#39;郭涛&#39;): 2, (&#39;李保田&#39;, &#39;李雪健&#39;): 2, (&#39;李雪健&#39;, &#39;赵本山&#39;): 2, (&#39;牛犇&#39;, &#39;董立范&#39;): 2}}\n[{傅彪} -&gt; {李雪健}, {刘佩琦} -&gt; {巩俐}, {郭涛} -&gt; {巩俐}, {董立范} -&gt; {牛犇}, {牛犇} -&gt; {董立范}]","like_count":1,"discussions":[{"author":{"id":1306094,"avatar":"https://static001.geekbang.org/account/avatar/00/13/ed/ee/c4779b67.jpg","nickname":"cy","note":"","ucode":"50D653399A31F6","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":440260,"discussion_content":"Good Job","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577621110,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":72934,"user_name":"mickey","can_delete":false,"product_type":"c1","uid":1051663,"ip_address":"","ucode":"8B490C2DDE4010","user_header":"https://static001.geekbang.org/account/avatar/00/10/0c/0f/93d1c8eb.jpg","comment_is_top":false,"comment_ctime":1551756568,"is_pvip":false,"replies":[{"id":64465,"content":"哈哈","user_name":"作者回复","user_name_real":"cy","uid":1306094,"ctime":1577619602,"ip_address":"","comment_id":72934,"utype":1}],"discussion_count":2,"race_medal":0,"score":2,"product_id":100021701,"comment_content":"最小支持度为0.1：\n{  1: {(&#39;倪大红&#39;,): 2, (&#39;刘德华&#39;,): 2, (&#39;姜文&#39;,): 2, (&#39;巩俐&#39;,): 5, (&#39;李雪健&#39;,): 2, (&#39;章子怡&#39;,): 3, (&#39;葛优&#39;,): 2, (&#39;郭涛&#39;,): 2, (&#39;陈道明&#39;,): 2}, \n   2: {(&#39;倪大红&#39;, &#39;巩俐&#39;): 2, (&#39;巩俐&#39;, &#39;郭涛&#39;): 2}}\n[{倪大红} -&gt; {巩俐}, {郭涛} -&gt; {巩俐}]\n\n最小支持度为0.05：\n太多了。。。。\n\n结论：不管男一号选谁，女一号必须是巩俐。","like_count":13,"discussions":[{"author":{"id":1306094,"avatar":"https://static001.geekbang.org/account/avatar/00/13/ed/ee/c4779b67.jpg","nickname":"cy","note":"","ucode":"50D653399A31F6","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":441832,"discussion_content":"哈哈","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577619602,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1919541,"avatar":"https://static001.geekbang.org/account/avatar/00/1d/4a/35/66caeed9.jpg","nickname":"完美坚持","note":"","ucode":"AE0261D8DDEF64","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":369009,"discussion_content":"铁打的巩俐，流水的男明星","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1618902765,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":69721,"user_name":"third","can_delete":false,"product_type":"c1","uid":1025114,"ip_address":"","ucode":"9A37408A834F0B","user_header":"https://static001.geekbang.org/account/avatar/00/0f/a4/5a/e708e423.jpg","comment_is_top":false,"comment_ctime":1550818475,"is_pvip":false,"replies":[{"id":25528,"content":"对 和数据集特点有关系，不过数据集大的情况下，不好观察特征。我们可以通过设置最小值支持度和最小置信度来观察关联规则的结果。\n一般来说最小支持度常见的取值有0.5，0.1, 0.05。最小置信度常见的取值有1.0, 0.9, 0.8。可以通过尝试一些取值，然后观察关联结果的方式来调整最小值尺度和最小置信度的取值。","user_name":"编辑回复","user_name_real":"何昌梅","uid":1165037,"ctime":1551321529,"ip_address":"","comment_id":69721,"utype":2}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100021701,"comment_content":"个人的直觉感觉，这个应该跟数据集的大小和特点有关。\n\n","like_count":11,"discussions":[{"author":{"id":1165037,"avatar":"https://static001.geekbang.org/account/avatar/00/11/c6/ed/89a2dc13.jpg","nickname":"丢了个丢丢丢","note":"","ucode":"BDD7E97E0E5E96","race_medal":0,"user_type":4,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":440244,"discussion_content":"对 和数据集特点有关系，不过数据集大的情况下，不好观察特征。我们可以通过设置最小值支持度和最小置信度来观察关联规则的结果。\n一般来说最小支持度常见的取值有0.5，0.1, 0.05。最小置信度常见的取值有1.0, 0.9, 0.8。可以通过尝试一些取值，然后观察关联结果的方式来调整最小值尺度和最小置信度的取值。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1551321529,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":4}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":87918,"user_name":"滢","can_delete":false,"product_type":"c1","uid":1221511,"ip_address":"","ucode":"971A6F20AF3F9A","user_header":"https://static001.geekbang.org/account/avatar/00/12/a3/87/c415e370.jpg","comment_is_top":false,"comment_ctime":1555753175,"is_pvip":false,"replies":[{"id":64236,"content":"Good Job 滢","user_name":"作者回复","user_name_real":"cy","uid":1306094,"ctime":1577615032,"ip_address":"","comment_id":87918,"utype":1}],"discussion_count":2,"race_medal":0,"score":2,"product_id":100021701,"comment_content":"选的张艺谋爬取数据，开始的时候设置min_support = 0.5 没有分析出项集，还以为是数据有错，结果发现是支持度设的太高来，没有达到条件的。好尴尬~ \n#第二步：用Apriori算法进行关联分析\n#数据加载\ndirector = &#39;张艺谋&#39;\n#写CSV文件\npath = &#39;&#47;Users&#47;apple&#47;Desktop&#47;GitHubProject&#47;Read mark&#47;数据分析&#47;geekTime&#47;data&#47;&#39;\nfile_name = path + director +&#39;.csv&#39;\nprint(file_name)\nlists = csv.reader(open(file_name, &#39;r&#39;, encoding=&#39;utf-8-sig&#39;))\ndata =[]\nfor names in lists:\n    name_new = []\n    for name in names:\n        name_new.append(name.strip())\n    if len(name_new[1:]) &gt;0:\n        data.append(name_new[1:])\nprint(&#39;data--&#39;,data)\n\n#挖掘频繁项集合关联规则\nitems,rules = apriori(data,min_support=0.05,min_confidence=1)\nprint(items)\nprint(rules)\n输出结果：\n{1: {(&#39;倪大红&#39;,): 3, (&#39;傅彪&#39;,): 2, (&#39;刘佩琦&#39;,): 2, (&#39;刘德华&#39;,): 2, (&#39;姜文&#39;,): 2, (&#39;孙红雷&#39;,): 3, (&#39;巩俐&#39;,): 9, (&#39;李保田&#39;,): 3, (&#39;李曼&#39;,): 2, (&#39;李雪健&#39;,): 5, (&#39;杨凤良&#39;,): 2, (&#39;牛犇&#39;,): 2, (&#39;章子怡&#39;,): 3, (&#39;葛优&#39;,): 3, (&#39;赵本山&#39;,): 2, (&#39;郭涛&#39;,): 2, (&#39;闫妮&#39;,): 2, (&#39;陈道明&#39;,): 2}, 2: {(&#39;倪大红&#39;, &#39;巩俐&#39;): 2, (&#39;傅彪&#39;, &#39;李雪健&#39;): 2, (&#39;刘佩琦&#39;, &#39;巩俐&#39;): 2, (&#39;孙红雷&#39;, &#39;赵本山&#39;): 2, (&#39;巩俐&#39;, &#39;李保田&#39;): 2, (&#39;巩俐&#39;, &#39;杨凤良&#39;): 2, (&#39;巩俐&#39;, &#39;葛优&#39;): 2, (&#39;巩俐&#39;, &#39;郭涛&#39;): 2, (&#39;李保田&#39;, &#39;李雪健&#39;): 2}}\n[{傅彪} -&gt; {李雪健}, {刘佩琦} -&gt; {巩俐}, {赵本山} -&gt; {孙红雷}, {杨凤良} -&gt; {巩俐}, {郭涛} -&gt; {巩俐}]","like_count":7,"discussions":[{"author":{"id":1165037,"avatar":"https://static001.geekbang.org/account/avatar/00/11/c6/ed/89a2dc13.jpg","nickname":"丢了个丢丢丢","note":"","ucode":"BDD7E97E0E5E96","race_medal":0,"user_type":4,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":440244,"discussion_content":"对 和数据集特点有关系，不过数据集大的情况下，不好观察特征。我们可以通过设置最小值支持度和最小置信度来观察关联规则的结果。\n一般来说最小支持度常见的取值有0.5，0.1, 0.05。最小置信度常见的取值有1.0, 0.9, 0.8。可以通过尝试一些取值，然后观察关联结果的方式来调整最小值尺度和最小置信度的取值。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1551321529,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":4}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":144663,"user_name":"一 青(๑• . •๑)ゝ","can_delete":false,"product_type":"c1","uid":1697211,"ip_address":"","ucode":"BB5DBB62B7CFFE","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/WRgI4eibxaZkRzOO7zBp49JcraBZIOQO9HNicYsxSV3yPZYeBAsG9m0j4wRJWfGBaDdw5Teiaibn6xhmyf43DmfjYg/132","comment_is_top":false,"comment_ctime":1571992054,"is_pvip":false,"replies":[{"id":59822,"content":"有一个工具包 import fptools as fp 你可以试试","user_name":"作者回复","user_name_real":"cy","uid":1306094,"ctime":1574757607,"ip_address":"","comment_id":144663,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100021701,"comment_content":"老师，FP-growth 在python有集成吗，，想用fp-growth试试","like_count":5,"discussions":[{"author":{"id":1306094,"avatar":"https://static001.geekbang.org/account/avatar/00/13/ed/ee/c4779b67.jpg","nickname":"cy","note":"","ucode":"50D653399A31F6","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":472061,"discussion_content":"有一个工具包 import fptools as fp 你可以试试","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574757607,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":231620,"user_name":"Geeky_Ben","can_delete":false,"product_type":"c1","uid":1981878,"ip_address":"","ucode":"4889BFC8BF6EB3","user_header":"https://static001.geekbang.org/account/avatar/00/1e/3d/b6/e4a72acc.jpg","comment_is_top":false,"comment_ctime":1593737981,"is_pvip":false,"replies":[{"id":103707,"content":"if num &gt;= 14:\n    return True\nelse:\n    return False\n\n这部分代码需要在for循环外面。当for循环中有return时，一旦return运行，则for循环会被终止。","user_name":"作者回复","user_name_real":"cy","uid":1306094,"ctime":1617031884,"ip_address":"","comment_id":231620,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100021701,"comment_content":"请问一下各位大神，为什么我这个代码只把每一页的第一个电影的资料下载下来。我反复核对了很多次，跟导师的一样... 苦恼~~@@\nfrom efficient_apriori import apriori\nfrom lxml import etree\nimport time\nfrom selenium import webdriver\nfrom webdriver_manager.chrome import ChromeDriverManager\nimport csv\ndriver = webdriver.Chrome(ChromeDriverManager().install())\ndirector = u&#39;宁浩&#39;\nfile_name = &#39;.&#47;&#39; + director + &#39;.csv&#39;\nbase_url = &#39;https:&#47;&#47;movie.douban.com&#47;subject_search?search_text=&#39;+director+&#39;&amp;cat=1002&amp;start=&#39;\nout = open(file_name,&#39;w&#39;,newline = &#39;&#39;,encoding=&#39;utf-8-sig&#39;)\ncsv_write = csv.writer(out,dialect=&#39;excel&#39;)\nflags = []\n\ndef download(request_url):\n    driver.get(request_url)\n    time.sleep(1)\n    html = driver.find_element_by_xpath(&quot;&#47;&#47;*&quot;).get_attribute(&quot;outerHTML&quot;)\n    html = etree.HTML(html)\n    movie_lists = html.xpath(&quot;&#47;html&#47;body&#47;div[@id=&#39;wrapper&#39;]&#47;div[@id=&#39;root&#39;]&#47;div[1]&#47;&#47;div[@class=&#39;item-root&#39;]&#47;div[@class=&#39;detail&#39;]&#47;div[@class=&#39;title&#39;]&#47;a[@class=&#39;title-text&#39;]&quot;)\n    name_lists = html.xpath(&quot;&#47;html&#47;body&#47;div[@id=&#39;wrapper&#39;]&#47;div[@id=&#39;root&#39;]&#47;div[1]&#47;&#47;div[@class=&#39;item-root&#39;]&#47;div[@class=&#39;detail&#39;]&#47;div[@class=&#39;meta abstract_2&#39;]&quot;)\n    num = len(movie_lists)\n    if num &gt; 15:\n        movie_lists = movie_lists[1:]\n        name_lists = name_lists[1:]\n    for (movie,name_list) in zip(movie_lists,name_lists):\n        if name_list.text is None:\n            continue\n        print(name_list.text)\n        names = name_list.text.split(&#39;&#47;&#39;)\n        if names[0].strip() == director and movie.text not in flags:\n            names[0] = movie.text\n            flags.append(movie.text)\n            csv_write.writerow(names)\n        print(&#39;OK&#39;)\n        print(num)\n        if num &gt;= 14:\n            return True\n        else:\n            return False\nstart = 0\nwhile start &lt;10000:\n    request_url = base_url + str(start)\n    flag = download(request_url)\n    if flag:\n        start = start + 15\n    else:\n        break\nout.close()\nprint(&#39;Finished&#39;)\n","like_count":2,"discussions":[{"author":{"id":1306094,"avatar":"https://static001.geekbang.org/account/avatar/00/13/ed/ee/c4779b67.jpg","nickname":"cy","note":"","ucode":"50D653399A31F6","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":500377,"discussion_content":"if num &amp;gt;= 14:\n    return True\nelse:\n    return False\n\n这部分代码需要在for循环外面。当for循环中有return时，一旦return运行，则for循环会被终止。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1617031884,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":204287,"user_name":"JustDoDT","can_delete":false,"product_type":"c1","uid":1127175,"ip_address":"","ucode":"6AF0B80F00EAEF","user_header":"https://static001.geekbang.org/account/avatar/00/11/33/07/8f351609.jpg","comment_is_top":false,"comment_ctime":1586359862,"is_pvip":false,"replies":[{"id":104317,"content":"感谢JustDoIt同学的分享，相似报错的同学可以看看","user_name":"作者回复","user_name_real":"cy","uid":1306094,"ctime":1617893255,"ip_address":"","comment_id":204287,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100021701,"comment_content":"Python3.6 遇到如下错误及解决方案：\n运行时报错：\nModuleNotFoundError: No module named &#39;dataclasses&#39;\n是因为efficient_apriori 依赖 dataclasses 安装 dataclasses 即可\npip install dataclasses","like_count":2,"discussions":[{"author":{"id":1306094,"avatar":"https://static001.geekbang.org/account/avatar/00/13/ed/ee/c4779b67.jpg","nickname":"cy","note":"","ucode":"50D653399A31F6","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":491130,"discussion_content":"感谢JustDoIt同学的分享，相似报错的同学可以看看","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1617893255,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":85087,"user_name":"普罗米修斯","can_delete":false,"product_type":"c1","uid":1354894,"ip_address":"","ucode":"6A76CC0061C272","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTID6xcHMMQdvZGvMMVHA2Y6xYpOyFO2VR2GTyFMbGS9BuWvZcEqHz62icGF6I4X6OCpokLeiaHo560A/132","comment_is_top":false,"comment_ctime":1554976074,"is_pvip":false,"replies":[{"id":64269,"content":"import fptools as fp 这个也可以","user_name":"作者回复","user_name_real":"cy","uid":1306094,"ctime":1577615765,"ip_address":"","comment_id":85087,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100021701,"comment_content":"如果要使用FP-Growth这个算法，是直接使用FP-Growth这个包吗？","like_count":2,"discussions":[{"author":{"id":1306094,"avatar":"https://static001.geekbang.org/account/avatar/00/13/ed/ee/c4779b67.jpg","nickname":"cy","note":"","ucode":"50D653399A31F6","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":446554,"discussion_content":"import fptools as fp 这个也可以","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577615765,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":74944,"user_name":"滢","can_delete":false,"product_type":"c1","uid":1221511,"ip_address":"","ucode":"971A6F20AF3F9A","user_header":"https://static001.geekbang.org/account/avatar/00/12/a3/87/c415e370.jpg","comment_is_top":false,"comment_ctime":1552318250,"is_pvip":false,"replies":[{"id":64435,"content":"看来你还是对统计学感兴趣，可以看下《统计数据会说谎》 这本不错，哈哈","user_name":"作者回复","user_name_real":"cy","uid":1306094,"ctime":1577619244,"ip_address":"","comment_id":74944,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100021701,"comment_content":"老师能推荐几本有关 概率论、统计学、运筹学的书嘛 ，感觉大学的课本比较枯燥","like_count":2,"discussions":[{"author":{"id":1306094,"avatar":"https://static001.geekbang.org/account/avatar/00/13/ed/ee/c4779b67.jpg","nickname":"cy","note":"","ucode":"50D653399A31F6","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":442751,"discussion_content":"看来你还是对统计学感兴趣，可以看下《统计数据会说谎》 这本不错，哈哈","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577619244,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":69745,"user_name":"third","can_delete":false,"product_type":"c1","uid":1025114,"ip_address":"","ucode":"9A37408A834F0B","user_header":"https://static001.geekbang.org/account/avatar/00/0f/a4/5a/e708e423.jpg","comment_is_top":false,"comment_ctime":1550826102,"is_pvip":false,"replies":[{"id":64512,"content":"Good Job","user_name":"作者回复","user_name_real":"cy","uid":1306094,"ctime":1577621110,"ip_address":"","comment_id":69745,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100021701,"comment_content":"感觉：1，张艺谋喜欢用那些组合的人\n2.某些组合出现的匹配率\n\n最小支持度为0.1，{1: {(&#39; 巩俐 &#39;,): 9, (&#39; 李雪健 &#39;,): 5}}\n\n最小支持度为0.05，{1: {(&#39; 葛优 &#39;,): 3, (&#39; 巩俐 &#39;,): 9, (&#39; 姜文 &#39;,): 2, (&#39; 郭涛 &#39;,): 2, (&#39; 李雪健 &#39;,): 5, (&#39; 陈维亚 &#39;,): 2, (&#39; 张继钢 &#39;,): 2, (&#39; 刘德华 &#39;,): 2, (&#39; 倪大红 &#39;,): 3, (&#39; 傅彪 &#39;,): 2, (&#39; 牛犇 &#39;,): 2, (&#39; 孙红雷 &#39;,): 2, (&#39; 闫妮 &#39;,): 2, (&#39; 陈道明 &#39;,): 2, (&#39; 赵本山 &#39;,): 2, (&#39; 杨凤良 &#39;,): 2, (&#39; 章子怡 &#39;,): 3, (&#39; 李保田 &#39;,): 3, (&#39; 刘佩琦 &#39;,): 2}, 2: {(&#39; 巩俐 &#39;, &#39; 李保田 &#39;): 2, (&#39; 巩俐 &#39;, &#39; 刘佩琦 &#39;): 2, (&#39; 葛优 &#39;, &#39; 巩俐 &#39;): 2, (&#39; 李雪健 &#39;, &#39; 傅彪 &#39;): 2, (&#39; 李雪健 &#39;, &#39; 李保田 &#39;): 2, (&#39; 巩俐 &#39;, &#39; 郭涛 &#39;): 2, (&#39; 陈维亚 &#39;, &#39; 张继钢 &#39;): 2, (&#39; 巩俐 &#39;, &#39; 杨凤良 &#39;): 2, (&#39; 巩俐 &#39;, &#39; 倪大红 &#39;): 2}}\n[{ 刘佩琦 } -&gt; { 巩俐 }, { 傅彪 } -&gt; { 李雪健 }, { 郭涛 } -&gt; { 巩俐 }, { 张继钢 } -&gt; { 陈维亚 }, { 陈维亚 } -&gt; { 张继钢 }, { 杨凤良 } -&gt; { 巩俐 }]","like_count":2,"discussions":[{"author":{"id":1306094,"avatar":"https://static001.geekbang.org/account/avatar/00/13/ed/ee/c4779b67.jpg","nickname":"cy","note":"","ucode":"50D653399A31F6","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":442751,"discussion_content":"看来你还是对统计学感兴趣，可以看下《统计数据会说谎》 这本不错，哈哈","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577619244,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":78891,"user_name":"听妈妈的话","can_delete":false,"product_type":"c1","uid":1462417,"ip_address":"","ucode":"089D797A39C791","user_header":"https://static001.geekbang.org/account/avatar/00/16/50/91/0dd2b8ce.jpg","comment_is_top":false,"comment_ctime":1553270510,"is_pvip":false,"replies":[{"id":64374,"content":"Good Sharing","user_name":"作者回复","user_name_real":"cy","uid":1306094,"ctime":1577617954,"ip_address":"","comment_id":78891,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100021701,"comment_content":"我觉得mtime网上的电影信息更加全面，就从上面爬取的信息\n最小支持度为0.1:\n{1: {(&#39;倪大红&#39;,): 3, (&#39;孙红雷&#39;,): 3, (&#39;巩俐&#39;,): 9, (&#39;李保田&#39;,): 4, (&#39;李雪健&#39;,): 4, (&#39;章子怡&#39;,): 3, (&#39;葛优&#39;,): 3, (&#39;赵本山&#39;,): 3}, 2: {(&#39;巩俐&#39;, &#39;李保田&#39;): 3}}\n[]\n最小支持度为0.05:\n{1: {(&#39;丁嘉丽&#39;,): 2, (&#39;倪大红&#39;,): 3, (&#39;傅彪&#39;,): 2, (&#39;刘佩琦&#39;,): 2, (&#39;刘德华&#39;,): 2, (&#39;姜文&#39;,): 2, (&#39;孙红雷&#39;,): 3, (&#39;巩俐&#39;,): 9, (&#39;张艺谋&#39;,): 2, (&#39;李保田&#39;,): 4, (&#39;李雪健&#39;,): 4, (&#39;牛犇&#39;,): 2, (&#39;窦骁&#39;,): 2, (&#39;章子怡&#39;,): 3, (&#39;葛优&#39;,): 3, (&#39;董立范&#39;,): 2, (&#39;赵本山&#39;,): 3, (&#39;郑恺&#39;,): 2, (&#39;郭涛&#39;,): 2, (&#39;闫妮&#39;,): 2, (&#39;陈道明&#39;,): 2, (&#39;齐达内·苏阿内&#39;,): 2}, 2: {(&#39;倪大红&#39;, &#39;巩俐&#39;): 2, (&#39;傅彪&#39;, &#39;李雪健&#39;): 2, (&#39;刘佩琦&#39;, &#39;巩俐&#39;): 2, (&#39;孙红雷&#39;, &#39;赵本山&#39;): 2, (&#39;巩俐&#39;, &#39;李保田&#39;): 3, (&#39;巩俐&#39;, &#39;葛优&#39;): \n\n2, (&#39;巩俐&#39;, &#39;郭涛&#39;): 2, (&#39;李保田&#39;, &#39;李雪健&#39;): 2, (&#39;李雪健&#39;, &#39;赵本山&#39;): 2, (&#39;牛犇&#39;, &#39;董立范&#39;): 2}}\n[{傅彪} -&gt; {李雪健}, {刘佩琦} -&gt; {巩俐}, {郭涛} -&gt; {巩俐}, {董立范} -&gt; {牛犇}, {牛犇} -&gt; {董立范}]","like_count":1,"discussions":[{"author":{"id":1306094,"avatar":"https://static001.geekbang.org/account/avatar/00/13/ed/ee/c4779b67.jpg","nickname":"cy","note":"","ucode":"50D653399A31F6","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":444275,"discussion_content":"Good Sharing","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577617954,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":71754,"user_name":"mickey","can_delete":false,"product_type":"c1","uid":1051663,"ip_address":"","ucode":"8B490C2DDE4010","user_header":"https://static001.geekbang.org/account/avatar/00/10/0c/0f/93d1c8eb.jpg","comment_is_top":false,"comment_ctime":1551426635,"is_pvip":false,"replies":[{"id":64484,"content":"python 3","user_name":"作者回复","user_name_real":"cy","uid":1306094,"ctime":1577619931,"ip_address":"","comment_id":71754,"utype":1}],"discussion_count":2,"race_medal":0,"score":3,"product_id":100021701,"comment_content":"安装工具包报错，请问怎样解决？\nE:\\DevelopTool\\Python\\Python27\\Scripts&gt;pip install efficient-apriori\nDEPRECATION: Python 2.7 will reach the end of its life on January 1st, 2020. Please upgrade your Python as Python 2.7 won&#39;t be maintained after that date. A future versio\nill drop support for Python 2.7.\nCollecting efficient-apriori\n  Using cached https:&#47;&#47;files.pythonhosted.org&#47;packages&#47;d2&#47;7b&#47;71c12582b2e1b561e76cf52239bcece4ced6aac9c93974b7fdede5f407e7&#47;efficient_apriori-0.4.5.tar.gz\n    Complete output from command python setup.py egg_info:\n    Traceback (most recent call last):\n      File &quot;&lt;string&gt;&quot;, line 1, in &lt;module&gt;\n      File &quot;c:\\users\\wujian\\appdata\\local\\temp\\pip-install-p5k8a3\\efficient-apriori\\setup.py&quot;, line 15, in &lt;module&gt;\n        from efficient_apriori import __version__\n      File &quot;c:\\users\\wujian\\appdata\\local\\temp\\pip-install-p5k8a3\\efficient-apriori\\efficient_apriori\\__init__.py&quot;, line 9, in &lt;module&gt;\n        from efficient_apriori.apriori import apriori\n      File &quot;c:\\users\\wujian\\appdata\\local\\temp\\pip-install-p5k8a3\\efficient-apriori\\efficient_apriori\\apriori.py&quot;, line 12\n        def apriori(transactions: typing.List[tuple], min_support: float=0.5,\n                                ^\n    SyntaxError: invalid syntax\n\n    ----------------------------------------\nCommand &quot;python setup.py egg_info&quot; failed with error code 1 in c:\\users\\wujian\\appdata\\local\\temp\\pip-install-p5k8a3\\efficient-apriori\\","like_count":1},{"had_liked":false,"id":70099,"user_name":"Geek_hve78z","can_delete":false,"product_type":"c1","uid":1015045,"ip_address":"","ucode":"386803B8FC2DD5","user_header":"https://static001.geekbang.org/account/avatar/00/0f/7d/05/4bad0c7c.jpg","comment_is_top":false,"comment_ctime":1550994584,"is_pvip":false,"replies":[{"id":64509,"content":"Good Job","user_name":"作者回复","user_name_real":"cy","uid":1306094,"ctime":1577620213,"ip_address":"","comment_id":70099,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100021701,"comment_content":"1）最小支持度设置为0.1\n{1: {(&#39;倪大红&#39;,): 3, (&#39;孙红雷&#39;,): 3, (&#39;巩俐&#39;,): 9, (&#39;李保田&#39;,): 3, (&#39;李雪健&#39;,): 4, (&#39;章子怡&#39;,): 3, (&#39;葛优&#39;,): 3}}\n[]\n2）最小支持度设置为0.05\n{1: {(&#39;倪大红&#39;,): 3, (&#39;傅彪&#39;,): 2, (&#39;刘佩琦&#39;,): 2, (&#39;刘德华&#39;,): 2, (&#39;姜文&#39;,): 2, (&#39;孙红雷&#39;,): 3, (&#39;巩俐&#39;,): 9, (&#39;李保田&#39;,): 3, (&#39;李雪健&#39;,): 4, (&#39;杨凤良&#39;,): 2, (&#39;牛犇&#39;,): 2, (&#39;章子怡&#39;,): 3, (&#39;葛优&#39;,): 3, (&#39;赵本山&#39;,): 2, (&#39;郭涛&#39;,): 2, (&#39;闫妮&#39;,): 2, (&#39;陈道明&#39;,): 2}, 2: {(&#39;倪大红&#39;, &#39;巩俐&#39;): 2, (&#39;傅彪&#39;, &#39;李雪健&#39;): 2, (&#39;刘佩琦&#39;, &#39;巩俐&#39;): 2, (&#39;孙红雷&#39;, &#39;赵本山&#39;): 2, (&#39;巩俐&#39;, &#39;李保田&#39;): 2, (&#39;巩俐&#39;, &#39;杨凤良&#39;): 2, (&#39;巩俐&#39;, &#39;葛优&#39;): 2, (&#39;巩俐&#39;, &#39;郭涛&#39;): 2, (&#39;李保田&#39;, &#39;李雪健&#39;): 2}}\n[{傅彪} -&gt; {李雪健}, {刘佩琦} -&gt; {巩俐}, {赵本山} -&gt; {孙红雷}, {杨凤良} -&gt; {巩俐}, {郭涛} -&gt; {巩俐}]","like_count":1,"discussions":[{"author":{"id":1306094,"avatar":"https://static001.geekbang.org/account/avatar/00/13/ed/ee/c4779b67.jpg","nickname":"cy","note":"","ucode":"50D653399A31F6","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":441315,"discussion_content":"python 3","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577619931,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1127175,"avatar":"https://static001.geekbang.org/account/avatar/00/11/33/07/8f351609.jpg","nickname":"JustDoDT","note":"","ucode":"6AF0B80F00EAEF","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":224304,"discussion_content":"这个时代，没有特殊需求，实在要用Python2的还是选Python3吧","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1586275535,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":69735,"user_name":"third","can_delete":false,"product_type":"c1","uid":1025114,"ip_address":"","ucode":"9A37408A834F0B","user_header":"https://static001.geekbang.org/account/avatar/00/0f/a4/5a/e708e423.jpg","comment_is_top":false,"comment_ctime":1550823344,"is_pvip":false,"replies":[{"id":25529,"content":"我的技巧就是不断的尝试，另外XPath是有自己规则的，99%的情况下都是以&#47;&#47;开头，因为想要匹配所有的元素，然后找一些关键的特征来进行匹配，比如class=&#39;item-root&#39;的节点，或者id=&#39;root&#39;都是很好的特征。通过观察id或class，可以自己编写XPath，这样写的XPath会更短。总之，都是要不断的尝试，才能找到自己想要找的内容。寻找XPath的过程就是一个找规律的过程。","user_name":"编辑回复","user_name_real":"何昌梅","uid":1165037,"ctime":1551321552,"ip_address":"","comment_id":69735,"utype":2}],"discussion_count":2,"race_medal":0,"score":3,"product_id":100021701,"comment_content":"对于Xpath的query的删除，来找到需要查找的内容，表示艰难。\n\n自己总结的是，\n1.保留div[1]\n2.删除名字比较长的class\n3.保留&#47;&#47;\n4.注意看右边的结果\n\n不知道该怎么删，有什么技巧吗？","like_count":1,"discussions":[{"author":{"id":1306094,"avatar":"https://static001.geekbang.org/account/avatar/00/13/ed/ee/c4779b67.jpg","nickname":"cy","note":"","ucode":"50D653399A31F6","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":440439,"discussion_content":"Good Job","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577620213,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":69674,"user_name":"白夜","can_delete":false,"product_type":"c1","uid":1354449,"ip_address":"","ucode":"7AABFA7C04EA34","user_header":"https://static001.geekbang.org/account/avatar/00/14/aa/d1/076482f3.jpg","comment_is_top":false,"comment_ctime":1550805874,"is_pvip":false,"replies":[{"id":25531,"content":"一般来说最小置信度都会大一些，比如1.0, 0.9或者0.8。最小支持度和数据集大小和特点有关，可以尝试一些数值来观察结果，比如0.1, 0.5","user_name":"编辑回复","user_name_real":"何昌梅","uid":1165037,"ctime":1551321614,"ip_address":"","comment_id":69674,"utype":2}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100021701,"comment_content":"最小支持度可以设置的小，而如果最小支持度小，置信度就要设置的相对大一点，不然即使提升度高，也有可能是巧合。这个参数跟数据量以及项的数量有关。\n理解对吗？\n\n\n# -*- coding: utf-8 -*-\nfrom efficient_apriori import apriori\nimport csv\nimport pprint\ndirector = u&#39;张艺谋&#39;\nfile_name = &#39;.&#47;&#39;+director+&#39;.csv&#39;\nlists = csv.reader(open(file_name, &#39;r&#39;, encoding=&#39;utf-8-sig&#39;))\n# 数据加载\ndata = []\nfor names in lists:\n     name_new = []\n     for name in names:\n           # 去掉演员数据中的空格\n           name_new.append(name.strip())\n     data.append(name_new[1:])\n# 挖掘频繁项集和关联规则\nitemsets, rules = apriori(data, min_support=0.05,  min_confidence=0.5)\n#data 是我们要提供的数据集，它是一个 list 数组类型。min_support 参数为最小支持度，在 efficient-apriori 工具包中用 0 到 1 的数值代表百分比，比如 0.5 代表最小支持度为 50%。min_confidence 是最小置信度，数值也代表百分比，比如 1 代表 100%。\npprint.pprint(itemsets)\nprint(rules)\n","like_count":1,"discussions":[{"author":{"id":1165037,"avatar":"https://static001.geekbang.org/account/avatar/00/11/c6/ed/89a2dc13.jpg","nickname":"丢了个丢丢丢","note":"","ucode":"BDD7E97E0E5E96","race_medal":0,"user_type":4,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":440221,"discussion_content":"一般来说最小置信度都会大一些，比如1.0, 0.9或者0.8。最小支持度和数据集大小和特点有关，可以尝试一些数值来观察结果，比如0.1, 0.5","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1551321614,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":4}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":282618,"user_name":"jion","can_delete":false,"product_type":"c1","uid":2223907,"ip_address":"","ucode":"2CD8EA789ADAB9","user_header":"https://static001.geekbang.org/account/avatar/00/21/ef/23/1f192e21.jpg","comment_is_top":false,"comment_ctime":1615341385,"is_pvip":false,"replies":[{"id":102997,"content":"from efficient_apriori import apriori返回的频繁项集结果中：\n外层字典的键1代表K=1的项集，它的值代表1项集中满足指定最小支持度和最小置信度条件的商品（即：演员）有哪些；\n内层字典，如：{(&#39;徐峥&#39;,): 5, (&#39;黄渤&#39;,): 6},它的键代表1项集中的商品（即：演员），它的值代表该商品（即：演员）出现在多少个订单（这里指电影）中，比如：黄渤这个演员出现在了6部电影中。","user_name":"作者回复","user_name_real":"cy","uid":1306094,"ctime":1615991734,"ip_address":"","comment_id":282618,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100021701,"comment_content":"你好，我想问一下文中计算的结果格式，1:代表啥然后字典里面(&#39;徐峥&#39;,): 5代表啥，可否对结果分析一下？\n{1: {(&#39;徐峥&#39;,): 5, (&#39;黄渤&#39;,): 6}, 2: {(&#39;徐峥&#39;, &#39;黄渤&#39;): 5}}\n[{徐峥} -&gt; {黄渤}]","like_count":0,"discussions":[{"author":{"id":1165037,"avatar":"https://static001.geekbang.org/account/avatar/00/11/c6/ed/89a2dc13.jpg","nickname":"丢了个丢丢丢","note":"","ucode":"BDD7E97E0E5E96","race_medal":0,"user_type":4,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":440221,"discussion_content":"一般来说最小置信度都会大一些，比如1.0, 0.9或者0.8。最小支持度和数据集大小和特点有关，可以尝试一些数值来观察结果，比如0.1, 0.5","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1551321614,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":4}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":204307,"user_name":"JustDoDT","can_delete":false,"product_type":"c1","uid":1127175,"ip_address":"","ucode":"6AF0B80F00EAEF","user_header":"https://static001.geekbang.org/account/avatar/00/11/33/07/8f351609.jpg","comment_is_top":false,"comment_ctime":1586361876,"is_pvip":false,"replies":[{"id":104323,"content":"Good Job!!! JustDoIt同学很认真！非常棒！！","user_name":"作者回复","user_name_real":"cy","uid":1306094,"ctime":1617895314,"ip_address":"","comment_id":204307,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100021701,"comment_content":"交作业\nhttps:&#47;&#47;github.com&#47;LearningChanging&#47;Data-analysis-in-action&#47;tree&#47;master&#47;31-%E5%85%B3%E8%81%94%E8%A7%84%E5%88%99%E6%8C%96%E6%8E%98%EF%BC%88%E4%B8%8B%EF%BC%89%EF%BC%9A%E5%AF%BC%E6%BC%94%E5%A6%82%E4%BD%95%E9%80%89%E6%8B%A9%E6%BC%94%E5%91%98%EF%BC%9F","like_count":0,"discussions":[{"author":{"id":1306094,"avatar":"https://static001.geekbang.org/account/avatar/00/13/ed/ee/c4779b67.jpg","nickname":"cy","note":"","ucode":"50D653399A31F6","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":516792,"discussion_content":"from efficient_apriori import apriori返回的频繁项集结果中：\n外层字典的键1代表K=1的项集，它的值代表1项集中满足指定最小支持度和最小置信度条件的商品（即：演员）有哪些；\n内层字典，如：{(&amp;#39;徐峥&amp;#39;,): 5, (&amp;#39;黄渤&amp;#39;,): 6},它的键代表1项集中的商品（即：演员），它的值代表该商品（即：演员）出现在多少个订单（这里指电影）中，比如：黄渤这个演员出现在了6部电影中。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1615991734,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":128484,"user_name":"FeiFei","can_delete":false,"product_type":"c1","uid":1045586,"ip_address":"","ucode":"01CD655DD4E56C","user_header":"https://static001.geekbang.org/account/avatar/00/0f/f4/52/10c4d863.jpg","comment_is_top":false,"comment_ctime":1566887695,"is_pvip":false,"replies":[{"id":53411,"content":"对 不同导演的数据集差别很大","user_name":"作者回复","user_name_real":"cy","uid":1306094,"ctime":1570434931,"ip_address":"","comment_id":128484,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100021701,"comment_content":"张艺谋的电影太发散，并不像宁浩，量少。并且也只集中在那么几个演员身上。","like_count":0,"discussions":[{"author":{"id":1306094,"avatar":"https://static001.geekbang.org/account/avatar/00/13/ed/ee/c4779b67.jpg","nickname":"cy","note":"","ucode":"50D653399A31F6","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":491137,"discussion_content":"Good Job!!! JustDoIt同学很认真！非常棒！！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1617895314,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":81033,"user_name":"陈奇","can_delete":false,"product_type":"c1","uid":1102507,"ip_address":"","ucode":"E4866AFD9D53B1","user_header":"https://static001.geekbang.org/account/avatar/00/10/d2/ab/55015ae6.jpg","comment_is_top":false,"comment_ctime":1553781340,"is_pvip":false,"replies":[{"id":64342,"content":"哈哈哈 明白了就好","user_name":"作者回复","user_name_real":"cy","uid":1306094,"ctime":1577617087,"ip_address":"","comment_id":81033,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100021701,"comment_content":"看了几遍，终于算是看懂了","like_count":0,"discussions":[{"author":{"id":1306094,"avatar":"https://static001.geekbang.org/account/avatar/00/13/ed/ee/c4779b67.jpg","nickname":"cy","note":"","ucode":"50D653399A31F6","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":445054,"discussion_content":"哈哈哈 明白了就好","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577617087,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":71869,"user_name":"mickey","can_delete":false,"product_type":"c1","uid":1051663,"ip_address":"","ucode":"8B490C2DDE4010","user_header":"https://static001.geekbang.org/account/avatar/00/10/0c/0f/93d1c8eb.jpg","comment_is_top":false,"comment_ctime":1551457298,"is_pvip":false,"replies":[{"id":64483,"content":"嗯 需要python3","user_name":"作者回复","user_name_real":"cy","uid":1306094,"ctime":1577619914,"ip_address":"","comment_id":71869,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100021701,"comment_content":"Efficient-Apriori\nAn efficient pure Python implementation of the Apriori algorithm.Works with Python 3.6 and 3.7.\n\nefficient-apriori在2.7下不能用，只能用于3.6和3.7。老师应该告知一下环境有所变化。","like_count":0,"discussions":[{"author":{"id":1306094,"avatar":"https://static001.geekbang.org/account/avatar/00/13/ed/ee/c4779b67.jpg","nickname":"cy","note":"","ucode":"50D653399A31F6","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":445054,"discussion_content":"哈哈哈 明白了就好","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577617087,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":176176,"user_name":"Miracle","can_delete":false,"product_type":"c1","uid":1758279,"ip_address":"","ucode":"74116B4D0C0760","user_header":"https://static001.geekbang.org/account/avatar/00/1a/d4/47/6d9f2da6.jpg","comment_is_top":false,"comment_ctime":1580979473,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":3,"product_id":100021701,"comment_content":"通过一天的学习，结合老师的讲解，算是关联规则入了一个门吧。 老师讲的真的很清晰了，并且实战也很好，大赞一个， 把笔记整理到博客了，又补充了几个实战项目，并且补充了一个mlxtend包实现apriori算法，并分析了不同。 https:&#47;&#47;blog.csdn.net&#47;wuzhongqiang&#47;article&#47;details&#47;104196194","like_count":4},{"had_liked":false,"id":71754,"user_name":"mickey","can_delete":false,"product_type":"c1","uid":1051663,"ip_address":"","ucode":"8B490C2DDE4010","user_header":"https://static001.geekbang.org/account/avatar/00/10/0c/0f/93d1c8eb.jpg","comment_is_top":false,"comment_ctime":1551426635,"is_pvip":false,"replies":[{"id":64484,"content":"python 3","user_name":"作者回复","user_name_real":"cy","uid":1306094,"ctime":1577619931,"ip_address":"","comment_id":71754,"utype":1}],"discussion_count":2,"race_medal":0,"score":3,"product_id":100021701,"comment_content":"安装工具包报错，请问怎样解决？\nE:\\DevelopTool\\Python\\Python27\\Scripts&gt;pip install efficient-apriori\nDEPRECATION: Python 2.7 will reach the end of its life on January 1st, 2020. Please upgrade your Python as Python 2.7 won&#39;t be maintained after that date. A future versio\nill drop support for Python 2.7.\nCollecting efficient-apriori\n  Using cached https:&#47;&#47;files.pythonhosted.org&#47;packages&#47;d2&#47;7b&#47;71c12582b2e1b561e76cf52239bcece4ced6aac9c93974b7fdede5f407e7&#47;efficient_apriori-0.4.5.tar.gz\n    Complete output from command python setup.py egg_info:\n    Traceback (most recent call last):\n      File &quot;&lt;string&gt;&quot;, line 1, in &lt;module&gt;\n      File &quot;c:\\users\\wujian\\appdata\\local\\temp\\pip-install-p5k8a3\\efficient-apriori\\setup.py&quot;, line 15, in &lt;module&gt;\n        from efficient_apriori import __version__\n      File &quot;c:\\users\\wujian\\appdata\\local\\temp\\pip-install-p5k8a3\\efficient-apriori\\efficient_apriori\\__init__.py&quot;, line 9, in &lt;module&gt;\n        from efficient_apriori.apriori import apriori\n      File &quot;c:\\users\\wujian\\appdata\\local\\temp\\pip-install-p5k8a3\\efficient-apriori\\efficient_apriori\\apriori.py&quot;, line 12\n        def apriori(transactions: typing.List[tuple], min_support: float=0.5,\n                                ^\n    SyntaxError: invalid syntax\n\n    ----------------------------------------\nCommand &quot;python setup.py egg_info&quot; failed with error code 1 in c:\\users\\wujian\\appdata\\local\\temp\\pip-install-p5k8a3\\efficient-apriori\\","like_count":1,"discussions":[{"author":{"id":1306094,"avatar":"https://static001.geekbang.org/account/avatar/00/13/ed/ee/c4779b67.jpg","nickname":"cy","note":"","ucode":"50D653399A31F6","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":441315,"discussion_content":"python 3","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577619931,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1127175,"avatar":"https://static001.geekbang.org/account/avatar/00/11/33/07/8f351609.jpg","nickname":"JustDoDT","note":"","ucode":"6AF0B80F00EAEF","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":224304,"discussion_content":"这个时代，没有特殊需求，实在要用Python2的还是选Python3吧","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1586275535,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":70099,"user_name":"Geek_hve78z","can_delete":false,"product_type":"c1","uid":1015045,"ip_address":"","ucode":"386803B8FC2DD5","user_header":"https://static001.geekbang.org/account/avatar/00/0f/7d/05/4bad0c7c.jpg","comment_is_top":false,"comment_ctime":1550994584,"is_pvip":false,"replies":[{"id":64509,"content":"Good Job","user_name":"作者回复","user_name_real":"cy","uid":1306094,"ctime":1577620213,"ip_address":"","comment_id":70099,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100021701,"comment_content":"1）最小支持度设置为0.1\n{1: {(&#39;倪大红&#39;,): 3, (&#39;孙红雷&#39;,): 3, (&#39;巩俐&#39;,): 9, (&#39;李保田&#39;,): 3, (&#39;李雪健&#39;,): 4, (&#39;章子怡&#39;,): 3, (&#39;葛优&#39;,): 3}}\n[]\n2）最小支持度设置为0.05\n{1: {(&#39;倪大红&#39;,): 3, (&#39;傅彪&#39;,): 2, (&#39;刘佩琦&#39;,): 2, (&#39;刘德华&#39;,): 2, (&#39;姜文&#39;,): 2, (&#39;孙红雷&#39;,): 3, (&#39;巩俐&#39;,): 9, (&#39;李保田&#39;,): 3, (&#39;李雪健&#39;,): 4, (&#39;杨凤良&#39;,): 2, (&#39;牛犇&#39;,): 2, (&#39;章子怡&#39;,): 3, (&#39;葛优&#39;,): 3, (&#39;赵本山&#39;,): 2, (&#39;郭涛&#39;,): 2, (&#39;闫妮&#39;,): 2, (&#39;陈道明&#39;,): 2}, 2: {(&#39;倪大红&#39;, &#39;巩俐&#39;): 2, (&#39;傅彪&#39;, &#39;李雪健&#39;): 2, (&#39;刘佩琦&#39;, &#39;巩俐&#39;): 2, (&#39;孙红雷&#39;, &#39;赵本山&#39;): 2, (&#39;巩俐&#39;, &#39;李保田&#39;): 2, (&#39;巩俐&#39;, &#39;杨凤良&#39;): 2, (&#39;巩俐&#39;, &#39;葛优&#39;): 2, (&#39;巩俐&#39;, &#39;郭涛&#39;): 2, (&#39;李保田&#39;, &#39;李雪健&#39;): 2}}\n[{傅彪} -&gt; {李雪健}, {刘佩琦} -&gt; {巩俐}, {赵本山} -&gt; {孙红雷}, {杨凤良} -&gt; {巩俐}, {郭涛} -&gt; {巩俐}]","like_count":1,"discussions":[{"author":{"id":1306094,"avatar":"https://static001.geekbang.org/account/avatar/00/13/ed/ee/c4779b67.jpg","nickname":"cy","note":"","ucode":"50D653399A31F6","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":440439,"discussion_content":"Good Job","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577620213,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":69735,"user_name":"third","can_delete":false,"product_type":"c1","uid":1025114,"ip_address":"","ucode":"9A37408A834F0B","user_header":"https://static001.geekbang.org/account/avatar/00/0f/a4/5a/e708e423.jpg","comment_is_top":false,"comment_ctime":1550823344,"is_pvip":false,"replies":[{"id":25529,"content":"我的技巧就是不断的尝试，另外XPath是有自己规则的，99%的情况下都是以&#47;&#47;开头，因为想要匹配所有的元素，然后找一些关键的特征来进行匹配，比如class=&#39;item-root&#39;的节点，或者id=&#39;root&#39;都是很好的特征。通过观察id或class，可以自己编写XPath，这样写的XPath会更短。总之，都是要不断的尝试，才能找到自己想要找的内容。寻找XPath的过程就是一个找规律的过程。","user_name":"编辑回复","user_name_real":"何昌梅","uid":1165037,"ctime":1551321552,"ip_address":"","comment_id":69735,"utype":2}],"discussion_count":2,"race_medal":0,"score":3,"product_id":100021701,"comment_content":"对于Xpath的query的删除，来找到需要查找的内容，表示艰难。\n\n自己总结的是，\n1.保留div[1]\n2.删除名字比较长的class\n3.保留&#47;&#47;\n4.注意看右边的结果\n\n不知道该怎么删，有什么技巧吗？","like_count":1,"discussions":[{"author":{"id":1165037,"avatar":"https://static001.geekbang.org/account/avatar/00/11/c6/ed/89a2dc13.jpg","nickname":"丢了个丢丢丢","note":"","ucode":"BDD7E97E0E5E96","race_medal":0,"user_type":4,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":440253,"discussion_content":"我的技巧就是不断的尝试，另外XPath是有自己规则的，99%的情况下都是以//开头，因为想要匹配所有的元素，然后找一些关键的特征来进行匹配，比如class=&amp;#39;item-root&amp;#39;的节点，或者id=&amp;#39;root&amp;#39;都是很好的特征。通过观察id或class，可以自己编写XPath，这样写的XPath会更短。总之，都是要不断的尝试，才能找到自己想要找的内容。寻找XPath的过程就是一个找规律的过程。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1551321552,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":4}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1187792,"avatar":"https://static001.geekbang.org/account/avatar/00/12/1f/d0/660502a4.jpg","nickname":"初","note":"","ucode":"E124D8A566DA43","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":647421,"discussion_content":"我一般用xpath helper。。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1720002399,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"上海","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":69674,"user_name":"白夜","can_delete":false,"product_type":"c1","uid":1354449,"ip_address":"","ucode":"7AABFA7C04EA34","user_header":"https://static001.geekbang.org/account/avatar/00/14/aa/d1/076482f3.jpg","comment_is_top":false,"comment_ctime":1550805874,"is_pvip":false,"replies":[{"id":25531,"content":"一般来说最小置信度都会大一些，比如1.0, 0.9或者0.8。最小支持度和数据集大小和特点有关，可以尝试一些数值来观察结果，比如0.1, 0.5","user_name":"编辑回复","user_name_real":"何昌梅","uid":1165037,"ctime":1551321614,"ip_address":"","comment_id":69674,"utype":2}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100021701,"comment_content":"最小支持度可以设置的小，而如果最小支持度小，置信度就要设置的相对大一点，不然即使提升度高，也有可能是巧合。这个参数跟数据量以及项的数量有关。\n理解对吗？\n\n\n# -*- coding: utf-8 -*-\nfrom efficient_apriori import apriori\nimport csv\nimport pprint\ndirector = u&#39;张艺谋&#39;\nfile_name = &#39;.&#47;&#39;+director+&#39;.csv&#39;\nlists = csv.reader(open(file_name, &#39;r&#39;, encoding=&#39;utf-8-sig&#39;))\n# 数据加载\ndata = []\nfor names in lists:\n     name_new = []\n     for name in names:\n           # 去掉演员数据中的空格\n           name_new.append(name.strip())\n     data.append(name_new[1:])\n# 挖掘频繁项集和关联规则\nitemsets, rules = apriori(data, min_support=0.05,  min_confidence=0.5)\n#data 是我们要提供的数据集，它是一个 list 数组类型。min_support 参数为最小支持度，在 efficient-apriori 工具包中用 0 到 1 的数值代表百分比，比如 0.5 代表最小支持度为 50%。min_confidence 是最小置信度，数值也代表百分比，比如 1 代表 100%。\npprint.pprint(itemsets)\nprint(rules)\n","like_count":1,"discussions":[{"author":{"id":1165037,"avatar":"https://static001.geekbang.org/account/avatar/00/11/c6/ed/89a2dc13.jpg","nickname":"丢了个丢丢丢","note":"","ucode":"BDD7E97E0E5E96","race_medal":0,"user_type":4,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":440253,"discussion_content":"我的技巧就是不断的尝试，另外XPath是有自己规则的，99%的情况下都是以//开头，因为想要匹配所有的元素，然后找一些关键的特征来进行匹配，比如class=&amp;#39;item-root&amp;#39;的节点，或者id=&amp;#39;root&amp;#39;都是很好的特征。通过观察id或class，可以自己编写XPath，这样写的XPath会更短。总之，都是要不断的尝试，才能找到自己想要找的内容。寻找XPath的过程就是一个找规律的过程。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1551321552,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":4}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1187792,"avatar":"https://static001.geekbang.org/account/avatar/00/12/1f/d0/660502a4.jpg","nickname":"初","note":"","ucode":"E124D8A566DA43","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":647421,"discussion_content":"我一般用xpath helper。。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1720002399,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"上海","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":282618,"user_name":"jion","can_delete":false,"product_type":"c1","uid":2223907,"ip_address":"","ucode":"2CD8EA789ADAB9","user_header":"https://static001.geekbang.org/account/avatar/00/21/ef/23/1f192e21.jpg","comment_is_top":false,"comment_ctime":1615341385,"is_pvip":false,"replies":[{"id":102997,"content":"from efficient_apriori import apriori返回的频繁项集结果中：\n外层字典的键1代表K=1的项集，它的值代表1项集中满足指定最小支持度和最小置信度条件的商品（即：演员）有哪些；\n内层字典，如：{(&#39;徐峥&#39;,): 5, (&#39;黄渤&#39;,): 6},它的键代表1项集中的商品（即：演员），它的值代表该商品（即：演员）出现在多少个订单（这里指电影）中，比如：黄渤这个演员出现在了6部电影中。","user_name":"作者回复","user_name_real":"cy","uid":1306094,"ctime":1615991734,"ip_address":"","comment_id":282618,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100021701,"comment_content":"你好，我想问一下文中计算的结果格式，1:代表啥然后字典里面(&#39;徐峥&#39;,): 5代表啥，可否对结果分析一下？\n{1: {(&#39;徐峥&#39;,): 5, (&#39;黄渤&#39;,): 6}, 2: {(&#39;徐峥&#39;, &#39;黄渤&#39;): 5}}\n[{徐峥} -&gt; {黄渤}]","like_count":0,"discussions":[{"author":{"id":1306094,"avatar":"https://static001.geekbang.org/account/avatar/00/13/ed/ee/c4779b67.jpg","nickname":"cy","note":"","ucode":"50D653399A31F6","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":516792,"discussion_content":"from efficient_apriori import apriori返回的频繁项集结果中：\n外层字典的键1代表K=1的项集，它的值代表1项集中满足指定最小支持度和最小置信度条件的商品（即：演员）有哪些；\n内层字典，如：{(&amp;#39;徐峥&amp;#39;,): 5, (&amp;#39;黄渤&amp;#39;,): 6},它的键代表1项集中的商品（即：演员），它的值代表该商品（即：演员）出现在多少个订单（这里指电影）中，比如：黄渤这个演员出现在了6部电影中。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1615991734,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":204307,"user_name":"JustDoDT","can_delete":false,"product_type":"c1","uid":1127175,"ip_address":"","ucode":"6AF0B80F00EAEF","user_header":"https://static001.geekbang.org/account/avatar/00/11/33/07/8f351609.jpg","comment_is_top":false,"comment_ctime":1586361876,"is_pvip":false,"replies":[{"id":104323,"content":"Good Job!!! JustDoIt同学很认真！非常棒！！","user_name":"作者回复","user_name_real":"cy","uid":1306094,"ctime":1617895314,"ip_address":"","comment_id":204307,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100021701,"comment_content":"交作业\nhttps:&#47;&#47;github.com&#47;LearningChanging&#47;Data-analysis-in-action&#47;tree&#47;master&#47;31-%E5%85%B3%E8%81%94%E8%A7%84%E5%88%99%E6%8C%96%E6%8E%98%EF%BC%88%E4%B8%8B%EF%BC%89%EF%BC%9A%E5%AF%BC%E6%BC%94%E5%A6%82%E4%BD%95%E9%80%89%E6%8B%A9%E6%BC%94%E5%91%98%EF%BC%9F","like_count":0,"discussions":[{"author":{"id":1306094,"avatar":"https://static001.geekbang.org/account/avatar/00/13/ed/ee/c4779b67.jpg","nickname":"cy","note":"","ucode":"50D653399A31F6","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":491137,"discussion_content":"Good Job!!! JustDoIt同学很认真！非常棒！！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1617895314,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":128484,"user_name":"FeiFei","can_delete":false,"product_type":"c1","uid":1045586,"ip_address":"","ucode":"01CD655DD4E56C","user_header":"https://static001.geekbang.org/account/avatar/00/0f/f4/52/10c4d863.jpg","comment_is_top":false,"comment_ctime":1566887695,"is_pvip":false,"replies":[{"id":53411,"content":"对 不同导演的数据集差别很大","user_name":"作者回复","user_name_real":"cy","uid":1306094,"ctime":1570434931,"ip_address":"","comment_id":128484,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100021701,"comment_content":"张艺谋的电影太发散，并不像宁浩，量少。并且也只集中在那么几个演员身上。","like_count":0,"discussions":[{"author":{"id":1306094,"avatar":"https://static001.geekbang.org/account/avatar/00/13/ed/ee/c4779b67.jpg","nickname":"cy","note":"","ucode":"50D653399A31F6","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":464968,"discussion_content":"对 不同导演的数据集差别很大","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1570434931,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":81033,"user_name":"陈奇","can_delete":false,"product_type":"c1","uid":1102507,"ip_address":"","ucode":"E4866AFD9D53B1","user_header":"https://static001.geekbang.org/account/avatar/00/10/d2/ab/55015ae6.jpg","comment_is_top":false,"comment_ctime":1553781340,"is_pvip":false,"replies":[{"id":64342,"content":"哈哈哈 明白了就好","user_name":"作者回复","user_name_real":"cy","uid":1306094,"ctime":1577617087,"ip_address":"","comment_id":81033,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100021701,"comment_content":"看了几遍，终于算是看懂了","like_count":0,"discussions":[{"author":{"id":1306094,"avatar":"https://static001.geekbang.org/account/avatar/00/13/ed/ee/c4779b67.jpg","nickname":"cy","note":"","ucode":"50D653399A31F6","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":464968,"discussion_content":"对 不同导演的数据集差别很大","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1570434931,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":71869,"user_name":"mickey","can_delete":false,"product_type":"c1","uid":1051663,"ip_address":"","ucode":"8B490C2DDE4010","user_header":"https://static001.geekbang.org/account/avatar/00/10/0c/0f/93d1c8eb.jpg","comment_is_top":false,"comment_ctime":1551457298,"is_pvip":false,"replies":[{"id":64483,"content":"嗯 需要python3","user_name":"作者回复","user_name_real":"cy","uid":1306094,"ctime":1577619914,"ip_address":"","comment_id":71869,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100021701,"comment_content":"Efficient-Apriori\nAn efficient pure Python implementation of the Apriori algorithm.Works with Python 3.6 and 3.7.\n\nefficient-apriori在2.7下不能用，只能用于3.6和3.7。老师应该告知一下环境有所变化。","like_count":0,"discussions":[{"author":{"id":1306094,"avatar":"https://static001.geekbang.org/account/avatar/00/13/ed/ee/c4779b67.jpg","nickname":"cy","note":"","ucode":"50D653399A31F6","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":441372,"discussion_content":"嗯 需要python3","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577619914,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":176176,"user_name":"Miracle","can_delete":false,"product_type":"c1","uid":1758279,"ip_address":"","ucode":"74116B4D0C0760","user_header":"https://static001.geekbang.org/account/avatar/00/1a/d4/47/6d9f2da6.jpg","comment_is_top":false,"comment_ctime":1580979473,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":3,"product_id":100021701,"comment_content":"通过一天的学习，结合老师的讲解，算是关联规则入了一个门吧。 老师讲的真的很清晰了，并且实战也很好，大赞一个， 把笔记整理到博客了，又补充了几个实战项目，并且补充了一个mlxtend包实现apriori算法，并分析了不同。 https:&#47;&#47;blog.csdn.net&#47;wuzhongqiang&#47;article&#47;details&#47;104196194","like_count":4,"discussions":[{"author":{"id":1306094,"avatar":"https://static001.geekbang.org/account/avatar/00/13/ed/ee/c4779b67.jpg","nickname":"cy","note":"","ucode":"50D653399A31F6","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":441372,"discussion_content":"嗯 需要python3","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577619914,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":114380,"user_name":"周志翔","can_delete":false,"product_type":"c1","uid":1464176,"ip_address":"","ucode":"22866A9A9650E6","user_header":"","comment_is_top":false,"comment_ctime":1563287422,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":4,"product_id":100021701,"comment_content":"为什么min_support只有设置成0.3才能得到老师的结果：\n{1: {(&#39;徐峥&#39;,): 5, (&#39;黄渤&#39;,): 6}, 2: {(&#39;徐峥&#39;, &#39;黄渤&#39;): 5}}\n[{徐峥} -&gt; {黄渤}]\n如果是0.5，只有{1: {(&#39;黄渤&#39;,): 6}}","like_count":2},{"had_liked":false,"id":389589,"user_name":"yanyu-xin","can_delete":false,"product_type":"c1","uid":1899757,"ip_address":"广东","ucode":"3AA389F9E4C236","user_header":"","comment_is_top":false,"comment_ctime":1712975396,"is_pvip":false,"replies":null,"discussion_count":2,"race_medal":0,"score":4,"product_id":100021701,"comment_content":"抓取程序生成宁浩导演的数据集的代码，发生异常: AttributeError &#39;WebDriver&#39; object has no attribute &#39;find_element_by_xpath&#39; File &quot;D:\\31.py&quot;, line 21, in download html = driver.find_element_by_xpath(&quot;&#47;&#47;*&quot;).get_attribute(&quot;outerHTML&quot;) ^ File &quot;D:\\31.py&quot;, line 59, in &lt;module&gt; flag = download(request_url) ^　AttributeError: &#39;WebDriver&#39; object has no attribute &#39;find_element_by_xpath&#39;　Pro Search　　4 steps completed\n这个异常AttributeError: &#39;WebDriver&#39; object has no attribute &#39;find_element_by_xpath&#39;发生的原因是在Selenium 4.3.0版本中，find_element_by_*和find_elements_by_*方法被弃用并移除了。这意味着不能再使用find_element_by_xpath这样的方法来查找页面元素了34。为了解决这个问题，需要使用新的方法来查找元素。根据Selenium 4.3.0的变更日志，应该使用find_element方法，配合By类来指定查找元素的方式。原来使用driver.find_element_by_xpath(&quot;&#47;&#47;a&quot;)的方式现在应该替换为driver.find_element(By.XPATH, &quot;&#47;&#47;a&quot;)34。这里是一个修正后的代码：\n\nfrom selenium.webdriver.common.by import By\n # 之前的写法 \n# html = driver.find_element_by_xpath(&quot;&#47;&#47;*&quot;).get_attribute(&quot;outerHTML&quot;) \n# 新的写法 \nhtml = driver.find_element(By.XPATH, &quot;&#47;&#47;*&quot;).get_attribute(&quot;outerHTML&quot;)","like_count":1},{"had_liked":false,"id":71432,"user_name":"JingZ","can_delete":false,"product_type":"c1","uid":1023464,"ip_address":"","ucode":"6F97895B2CC375","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/wJphZ3HcvhjVUyTWCIsCugzfQY5NAy6VJ0XoPLibDlcHWMswFmFe678zd0lUjFETia80NQhyQcVnGDlKgKPcRGyw/132","comment_is_top":false,"comment_ctime":1551341729,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":4,"product_id":100021701,"comment_content":"# 关联规则挖掘\n出现错误 selenium.common.exceptions.WebDriverException: Message: &#39;chromedriver&#39; executable needs to be in PATH. 参考https:&#47;&#47;blog.csdn.net&#47;liaoningxinmin&#47;article&#47;details&#47;82686185 按正常的套路Mac下载了Chromedriver，将解压好的文件放入&#47;usr&#47;local&#47;bin目录中，由于mac的很多目录都是隐藏的，所以我们按快捷键command+shift+g就可以打开这个目录，接着将解压好的驱动放入此目录即可\n\nmin_support=0.1\n频繁项集： {1: {(&#39;倪大红&#39;,): 3, (&#39;孙红雷&#39;,): 3, (&#39;巩俐&#39;,): 9, (&#39;李保田&#39;,): 3, (&#39;李雪健&#39;,): 4, (&#39;章子怡&#39;,): 3, (&#39;葛优&#39;,): 3}}\n关联规则： []\n\nmin_support=0.05\n频繁项集： {1: {(&#39;倪大红&#39;,): 3, (&#39;傅彪&#39;,): 2, (&#39;刘佩琦&#39;,): 2, (&#39;刘德华&#39;,): 2, (&#39;姜文&#39;,): 2, (&#39;孙红雷&#39;,): 3, (&#39;巩俐&#39;,): 9, (&#39;李保田&#39;,): 3, (&#39;李雪健&#39;,): 4, (&#39;杨凤良&#39;,): 2, (&#39;牛犇&#39;,): 2, (&#39;章子怡&#39;,): 3, (&#39;葛优&#39;,): 3, (&#39;赵本山&#39;,): 2, (&#39;郭涛&#39;,): 2, (&#39;闫妮&#39;,): 2, (&#39;陈道明&#39;,): 2}, 2: {(&#39;倪大红&#39;, &#39;巩俐&#39;): 2, (&#39;傅彪&#39;, &#39;李雪健&#39;): 2, (&#39;刘佩琦&#39;, &#39;巩俐&#39;): 2, (&#39;孙红雷&#39;, &#39;赵本山&#39;): 2, (&#39;巩俐&#39;, &#39;李保田&#39;): 2, (&#39;巩俐&#39;, &#39;杨凤良&#39;): 2, (&#39;巩俐&#39;, &#39;葛优&#39;): 2, (&#39;巩俐&#39;, &#39;郭涛&#39;): 2, (&#39;李保田&#39;, &#39;李雪健&#39;): 2}}\n关联规则： [{傅彪} -&gt; {李雪健}, {刘佩琦} -&gt; {巩俐}, {赵本山} -&gt; {孙红雷}, {杨凤良} -&gt; {巩俐}, {郭涛} -&gt; {巩俐}]","like_count":1},{"had_liked":false,"id":382620,"user_name":"静静呀","can_delete":false,"product_type":"c1","uid":3690337,"ip_address":"上海","ucode":"C0540C96A261BF","user_header":"https://static001.geekbang.org/account/avatar/00/38/4f/61/018352d4.jpg","comment_is_top":false,"comment_ctime":1697685761,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":4,"product_id":100021701,"comment_content":"selenium.common.exceptions.InvalidArgumentException: Message: invalid argument: invalid locator\n  (Session info: chrome=109.0.5414.120) 老师报错怎么解决","like_count":0},{"had_liked":false,"id":303445,"user_name":"竹梦","can_delete":false,"product_type":"c1","uid":2360919,"ip_address":"","ucode":"9C016572BF2E1E","user_header":"https://static001.geekbang.org/account/avatar/00/24/06/57/11f1dffd.jpg","comment_is_top":false,"comment_ctime":1626790709,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":4,"product_id":100021701,"comment_content":"{1: {(&#39;尿布&#39;,): 5, (&#39;牛奶&#39;,): 4, (&#39;面包&#39;,): 4, (&#39;啤酒&#39;,): 3}, 2: {(&#39;尿布&#39;, &#39;牛奶&#39;): 4, (&#39;尿布&#39;, &#39;面包&#39;): 4, (&#39;牛奶&#39;, &#39;面包&#39;): 3, (&#39;啤酒&#39;, &#39;尿布&#39;): 3}, 3: {(&#39;尿布&#39;, &#39;牛奶&#39;, &#39;面包&#39;): 3}}，请问老师这里面的数字代表什么含义呢？","like_count":0},{"had_liked":false,"id":289709,"user_name":"Soul of the Dragon","can_delete":false,"product_type":"c1","uid":2438011,"ip_address":"","ucode":"21603099E51B8A","user_header":"https://static001.geekbang.org/account/avatar/00/25/33/7b/9e012181.jpg","comment_is_top":false,"comment_ctime":1619148699,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":4,"product_id":100021701,"comment_content":"刚开始把支持度设为0.5，发现没有数据出现，可能是太高了，后来降低支持度才出现数据。老谋子是不是以前喜欢巩俐，现在喜欢刘浩存？\n另外问个问题，请问陈老师，Xpath的编写到底有什么样的规律？为什么不能直接复制网页中的XPath呢？","like_count":0},{"had_liked":false,"id":289173,"user_name":"完美坚持","can_delete":false,"product_type":"c1","uid":1919541,"ip_address":"","ucode":"AE0261D8DDEF64","user_header":"https://static001.geekbang.org/account/avatar/00/1d/4a/35/66caeed9.jpg","comment_is_top":false,"comment_ctime":1618902419,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":4,"product_id":100021701,"comment_content":"哈哈，这里把最小支持度的参数调低了，真的非常有必要。\n刚开始没有看到这个思考题，我自己想到的就是张艺谋，就直接做了。\n我刚开始设置 min_support=0.5,  min_confidence=1 跑出来的结果是空的，因为这个支持度设置得太高了。\n通过降低阈值，可以发现，张艺谋和巩俐的合作非常多，但是其它男明星就没有这么高频繁合作的，记得有一句玩笑话讲，“铁打的巩俐，流水的男明星”，很好地解释了这一点。","like_count":0},{"had_liked":false,"id":263939,"user_name":"非同凡想","can_delete":false,"product_type":"c1","uid":1934969,"ip_address":"","ucode":"713FD449A49D5A","user_header":"https://static001.geekbang.org/account/avatar/00/1d/86/79/066a062a.jpg","comment_is_top":false,"comment_ctime":1606299675,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":4,"product_id":100021701,"comment_content":"交作业：\n\nfrom selenium import webdriver\nfrom lxml import etree\nimport time\nimport csv\nimport pandas as pd\nfrom efficient_apriori import apriori\ndirector = &#39;张艺谋&#39;\nfile_name = director + &quot;.csv&quot;\n\ndef fetch_data(file_name):\n    already_deal_movies = set()\n\n    out = open(file_name, &#39;w&#39;, newline=&#39;&#39;, encoding=&#39;utf-8&#39;)\n    csv_writer = csv.writer(out)\n    for i in range(0, 151, 15):\n        url = &#39;https:&#47;&#47;search.douban.com&#47;movie&#47;subject_search?search_text=&#39; + director + &#39;&amp;cat=1002&amp;start=&#39; + str(i)\n        driver = webdriver.Chrome()\n        driver.get(url)\n        time.sleep(1)\n        html = etree.HTML(driver.page_source)\n        movie_name_pattern = &quot;&#47;&#47;div[@class=&#39;item-root&#39;]&#47;div[@class=&#39;detail&#39;]&#47;div[@class=&#39;title&#39;]&#47;a&quot;\n        movie_actors_pattern = &quot;&#47;&#47;div[@class=&#39;item-root&#39;]&#47;div[@class=&#39;detail&#39;]&#47;div[@class=&#39;meta abstract_2&#39;]&quot;\n\n        movie_list = html.xpath(movie_name_pattern)\n        actor_list = html.xpath(movie_actors_pattern)\n        movie_count = len(movie_list)\n        if (movie_count == 0): break\n        if (i == 0):\n            movie_list = movie_list[1:]\n            actor_list = actor_list[1:]\n        for movie, actors in zip(movie_list, actor_list):\n            if (actors.text is None or movie.text in already_deal_movies): continue\n            actor = actors.text.split(&#39;&#47;&#39;)\n            if (actor[0].strip() != director): continue\n            actor[0] = movie.text.strip()\n            csv_writer.writerow(actor)\n            already_deal_movies.add(movie.text)\n        driver.close()\n    out.close()\n\n#fetch_data(file_name)\n\nlists = csv.reader(open(file_name, &#39;r&#39;, encoding=&#39;utf-8&#39;))\n\n# 数据加载\ndata = []\nfor names in lists:\n    name_new = []\n    for name in names:\n        # 去掉演员数据中的空格\n        name_new.append(name.strip())\n    data.append(name_new[1:])\n# 挖掘频繁项集和关联规则\n# print(data)\nitemsets, rules = apriori(data, min_support=0.05)\nprint(itemsets)\nprint(rules)\n\n","like_count":0},{"had_liked":false,"id":192421,"user_name":"Untitled","can_delete":false,"product_type":"c1","uid":1039464,"ip_address":"","ucode":"8DD6ABA3E81A2E","user_header":"https://static001.geekbang.org/account/avatar/00/0f/dc/68/006ba72c.jpg","comment_is_top":false,"comment_ctime":1584849978,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":4,"product_id":100021701,"comment_content":"# 张艺谋 最小支持度=0.1的频繁项集：{1: {(&#39;巩俐&#39;,): 9, (&#39;李雪健&#39;,): 5}}，没有关联规则；\n最小支持度=0.05的频繁项集：\n{1: {(&#39;于和伟&#39;,): 2, (&#39;倪大红&#39;,): 3, (&#39;傅彪&#39;,): 2, (&#39;刘佩琦&#39;,): 2, (&#39;刘德华&#39;,): 2, (&#39;周冬雨&#39;,): 2, (&#39;姜文&#39;,): 2, (&#39;孙红雷&#39;,): 3, (&#39;巩俐&#39;,): 9, (&#39;张涵予&#39;,): 2, (&#39;张译&#39;,): 2, (&#39;李保田&#39;,): 3, (&#39;李曼&#39;,): 2, (&#39;李雪健&#39;,): 5, (&#39;杨凤良&#39;,): 2, (&#39;牛犇&#39;,): 2, (&#39;章子怡&#39;,): 3, (&#39;葛优&#39;,): 3, (&#39;赵本山&#39;,): 2, (&#39;郭涛&#39;,): 2, (&#39;闫妮&#39;,): 2, (&#39;陈道明&#39;,): 2}, 2: {(&#39;倪大红&#39;, &#39;巩俐&#39;): 2, (&#39;傅彪&#39;, &#39;李雪健&#39;): 2, (&#39;刘佩琦&#39;, &#39;巩俐&#39;): 2, (&#39;孙红雷&#39;, &#39;赵本山&#39;): 2, (&#39;巩俐&#39;, &#39;李保田&#39;): 2, (&#39;巩俐&#39;, &#39;杨凤良&#39;): 2, (&#39;巩俐&#39;, &#39;葛优&#39;): 2, (&#39;巩俐&#39;, &#39;郭涛&#39;): 2, (&#39;李保田&#39;, &#39;李雪健&#39;): 2}}\n关联规则：\n[{傅彪} -&gt; {李雪健}, {刘佩琦} -&gt; {巩俐}, {赵本山} -&gt; {孙红雷}, {杨凤良} -&gt; {巩俐}, {郭涛} -&gt; {巩俐}]\n","like_count":0},{"had_liked":false,"id":102528,"user_name":"大次狼","can_delete":false,"product_type":"c1","uid":1154660,"ip_address":"","ucode":"CE9EC8FCF47A7E","user_header":"https://static001.geekbang.org/account/avatar/00/11/9e/64/dd9328c5.jpg","comment_is_top":false,"comment_ctime":1560243884,"is_pvip":true,"replies":null,"discussion_count":1,"race_medal":0,"score":4,"product_id":100021701,"comment_content":"你好，想请问一个问题，用Efficient-Apriori 运行后的记过，除了支持度和执行度以外，他的返回结果还包括lift和conviction，其中lift指的是p(x,y)&#47;(p(x) * p(y))，x和y同时发生的概率除以x发生的概率再除以y发生的概率，这个值lift的值代表的含义是什么？还有conviction值得是P(not Y) &#47; P(not Y | X)代表的又是什么含义？谢谢","like_count":0,"discussions":[{"author":{"id":1822001,"avatar":"","nickname":"李闯","note":"","ucode":"E172D8827183FF","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":644853,"discussion_content":"牛啊朋友","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1715563614,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1899757,"avatar":"","nickname":"yanyu-xin","note":"","ucode":"3AA389F9E4C236","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1822001,"avatar":"","nickname":"李闯","note":"","ucode":"E172D8827183FF","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":644907,"discussion_content":"现在AI编程，特别是github可以自动编程的。\n另外很多AI工具，能解答很多编程问题的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1715605164,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":644853,"ip_address":"广东","group_id":0},"score":644907,"extra":""}]}]},{"had_liked":false,"id":114380,"user_name":"周志翔","can_delete":false,"product_type":"c1","uid":1464176,"ip_address":"","ucode":"22866A9A9650E6","user_header":"","comment_is_top":false,"comment_ctime":1563287422,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":4,"product_id":100021701,"comment_content":"为什么min_support只有设置成0.3才能得到老师的结果：\n{1: {(&#39;徐峥&#39;,): 5, (&#39;黄渤&#39;,): 6}, 2: {(&#39;徐峥&#39;, &#39;黄渤&#39;): 5}}\n[{徐峥} -&gt; {黄渤}]\n如果是0.5，只有{1: {(&#39;黄渤&#39;,): 6}}","like_count":2},{"had_liked":false,"id":389589,"user_name":"yanyu-xin","can_delete":false,"product_type":"c1","uid":1899757,"ip_address":"广东","ucode":"3AA389F9E4C236","user_header":"","comment_is_top":false,"comment_ctime":1712975396,"is_pvip":false,"replies":null,"discussion_count":2,"race_medal":0,"score":4,"product_id":100021701,"comment_content":"抓取程序生成宁浩导演的数据集的代码，发生异常: AttributeError &#39;WebDriver&#39; object has no attribute &#39;find_element_by_xpath&#39; File &quot;D:\\31.py&quot;, line 21, in download html = driver.find_element_by_xpath(&quot;&#47;&#47;*&quot;).get_attribute(&quot;outerHTML&quot;) ^ File &quot;D:\\31.py&quot;, line 59, in &lt;module&gt; flag = download(request_url) ^　AttributeError: &#39;WebDriver&#39; object has no attribute &#39;find_element_by_xpath&#39;　Pro Search　　4 steps completed\n这个异常AttributeError: &#39;WebDriver&#39; object has no attribute &#39;find_element_by_xpath&#39;发生的原因是在Selenium 4.3.0版本中，find_element_by_*和find_elements_by_*方法被弃用并移除了。这意味着不能再使用find_element_by_xpath这样的方法来查找页面元素了34。为了解决这个问题，需要使用新的方法来查找元素。根据Selenium 4.3.0的变更日志，应该使用find_element方法，配合By类来指定查找元素的方式。原来使用driver.find_element_by_xpath(&quot;&#47;&#47;a&quot;)的方式现在应该替换为driver.find_element(By.XPATH, &quot;&#47;&#47;a&quot;)34。这里是一个修正后的代码：\n\nfrom selenium.webdriver.common.by import By\n # 之前的写法 \n# html = driver.find_element_by_xpath(&quot;&#47;&#47;*&quot;).get_attribute(&quot;outerHTML&quot;) \n# 新的写法 \nhtml = driver.find_element(By.XPATH, &quot;&#47;&#47;*&quot;).get_attribute(&quot;outerHTML&quot;)","like_count":1,"discussions":[{"author":{"id":1822001,"avatar":"","nickname":"李闯","note":"","ucode":"E172D8827183FF","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":644853,"discussion_content":"牛啊朋友","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1715563614,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1899757,"avatar":"","nickname":"yanyu-xin","note":"","ucode":"3AA389F9E4C236","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1822001,"avatar":"","nickname":"李闯","note":"","ucode":"E172D8827183FF","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":644907,"discussion_content":"现在AI编程，特别是github可以自动编程的。\n另外很多AI工具，能解答很多编程问题的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1715605164,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":644853,"ip_address":"广东","group_id":0},"score":644907,"extra":""}]}]},{"had_liked":false,"id":71432,"user_name":"JingZ","can_delete":false,"product_type":"c1","uid":1023464,"ip_address":"","ucode":"6F97895B2CC375","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/wJphZ3HcvhjVUyTWCIsCugzfQY5NAy6VJ0XoPLibDlcHWMswFmFe678zd0lUjFETia80NQhyQcVnGDlKgKPcRGyw/132","comment_is_top":false,"comment_ctime":1551341729,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":4,"product_id":100021701,"comment_content":"# 关联规则挖掘\n出现错误 selenium.common.exceptions.WebDriverException: Message: &#39;chromedriver&#39; executable needs to be in PATH. 参考https:&#47;&#47;blog.csdn.net&#47;liaoningxinmin&#47;article&#47;details&#47;82686185 按正常的套路Mac下载了Chromedriver，将解压好的文件放入&#47;usr&#47;local&#47;bin目录中，由于mac的很多目录都是隐藏的，所以我们按快捷键command+shift+g就可以打开这个目录，接着将解压好的驱动放入此目录即可\n\nmin_support=0.1\n频繁项集： {1: {(&#39;倪大红&#39;,): 3, (&#39;孙红雷&#39;,): 3, (&#39;巩俐&#39;,): 9, (&#39;李保田&#39;,): 3, (&#39;李雪健&#39;,): 4, (&#39;章子怡&#39;,): 3, (&#39;葛优&#39;,): 3}}\n关联规则： []\n\nmin_support=0.05\n频繁项集： {1: {(&#39;倪大红&#39;,): 3, (&#39;傅彪&#39;,): 2, (&#39;刘佩琦&#39;,): 2, (&#39;刘德华&#39;,): 2, (&#39;姜文&#39;,): 2, (&#39;孙红雷&#39;,): 3, (&#39;巩俐&#39;,): 9, (&#39;李保田&#39;,): 3, (&#39;李雪健&#39;,): 4, (&#39;杨凤良&#39;,): 2, (&#39;牛犇&#39;,): 2, (&#39;章子怡&#39;,): 3, (&#39;葛优&#39;,): 3, (&#39;赵本山&#39;,): 2, (&#39;郭涛&#39;,): 2, (&#39;闫妮&#39;,): 2, (&#39;陈道明&#39;,): 2}, 2: {(&#39;倪大红&#39;, &#39;巩俐&#39;): 2, (&#39;傅彪&#39;, &#39;李雪健&#39;): 2, (&#39;刘佩琦&#39;, &#39;巩俐&#39;): 2, (&#39;孙红雷&#39;, &#39;赵本山&#39;): 2, (&#39;巩俐&#39;, &#39;李保田&#39;): 2, (&#39;巩俐&#39;, &#39;杨凤良&#39;): 2, (&#39;巩俐&#39;, &#39;葛优&#39;): 2, (&#39;巩俐&#39;, &#39;郭涛&#39;): 2, (&#39;李保田&#39;, &#39;李雪健&#39;): 2}}\n关联规则： [{傅彪} -&gt; {李雪健}, {刘佩琦} -&gt; {巩俐}, {赵本山} -&gt; {孙红雷}, {杨凤良} -&gt; {巩俐}, {郭涛} -&gt; {巩俐}]","like_count":1},{"had_liked":false,"id":382620,"user_name":"静静呀","can_delete":false,"product_type":"c1","uid":3690337,"ip_address":"上海","ucode":"C0540C96A261BF","user_header":"https://static001.geekbang.org/account/avatar/00/38/4f/61/018352d4.jpg","comment_is_top":false,"comment_ctime":1697685761,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":4,"product_id":100021701,"comment_content":"selenium.common.exceptions.InvalidArgumentException: Message: invalid argument: invalid locator\n  (Session info: chrome=109.0.5414.120) 老师报错怎么解决","like_count":0},{"had_liked":false,"id":303445,"user_name":"竹梦","can_delete":false,"product_type":"c1","uid":2360919,"ip_address":"","ucode":"9C016572BF2E1E","user_header":"https://static001.geekbang.org/account/avatar/00/24/06/57/11f1dffd.jpg","comment_is_top":false,"comment_ctime":1626790709,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":4,"product_id":100021701,"comment_content":"{1: {(&#39;尿布&#39;,): 5, (&#39;牛奶&#39;,): 4, (&#39;面包&#39;,): 4, (&#39;啤酒&#39;,): 3}, 2: {(&#39;尿布&#39;, &#39;牛奶&#39;): 4, (&#39;尿布&#39;, &#39;面包&#39;): 4, (&#39;牛奶&#39;, &#39;面包&#39;): 3, (&#39;啤酒&#39;, &#39;尿布&#39;): 3}, 3: {(&#39;尿布&#39;, &#39;牛奶&#39;, &#39;面包&#39;): 3}}，请问老师这里面的数字代表什么含义呢？","like_count":0},{"had_liked":false,"id":289709,"user_name":"Soul of the Dragon","can_delete":false,"product_type":"c1","uid":2438011,"ip_address":"","ucode":"21603099E51B8A","user_header":"https://static001.geekbang.org/account/avatar/00/25/33/7b/9e012181.jpg","comment_is_top":false,"comment_ctime":1619148699,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":4,"product_id":100021701,"comment_content":"刚开始把支持度设为0.5，发现没有数据出现，可能是太高了，后来降低支持度才出现数据。老谋子是不是以前喜欢巩俐，现在喜欢刘浩存？\n另外问个问题，请问陈老师，Xpath的编写到底有什么样的规律？为什么不能直接复制网页中的XPath呢？","like_count":0},{"had_liked":false,"id":289173,"user_name":"完美坚持","can_delete":false,"product_type":"c1","uid":1919541,"ip_address":"","ucode":"AE0261D8DDEF64","user_header":"https://static001.geekbang.org/account/avatar/00/1d/4a/35/66caeed9.jpg","comment_is_top":false,"comment_ctime":1618902419,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":4,"product_id":100021701,"comment_content":"哈哈，这里把最小支持度的参数调低了，真的非常有必要。\n刚开始没有看到这个思考题，我自己想到的就是张艺谋，就直接做了。\n我刚开始设置 min_support=0.5,  min_confidence=1 跑出来的结果是空的，因为这个支持度设置得太高了。\n通过降低阈值，可以发现，张艺谋和巩俐的合作非常多，但是其它男明星就没有这么高频繁合作的，记得有一句玩笑话讲，“铁打的巩俐，流水的男明星”，很好地解释了这一点。","like_count":0},{"had_liked":false,"id":263939,"user_name":"非同凡想","can_delete":false,"product_type":"c1","uid":1934969,"ip_address":"","ucode":"713FD449A49D5A","user_header":"https://static001.geekbang.org/account/avatar/00/1d/86/79/066a062a.jpg","comment_is_top":false,"comment_ctime":1606299675,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":4,"product_id":100021701,"comment_content":"交作业：\n\nfrom selenium import webdriver\nfrom lxml import etree\nimport time\nimport csv\nimport pandas as pd\nfrom efficient_apriori import apriori\ndirector = &#39;张艺谋&#39;\nfile_name = director + &quot;.csv&quot;\n\ndef fetch_data(file_name):\n    already_deal_movies = set()\n\n    out = open(file_name, &#39;w&#39;, newline=&#39;&#39;, encoding=&#39;utf-8&#39;)\n    csv_writer = csv.writer(out)\n    for i in range(0, 151, 15):\n        url = &#39;https:&#47;&#47;search.douban.com&#47;movie&#47;subject_search?search_text=&#39; + director + &#39;&amp;cat=1002&amp;start=&#39; + str(i)\n        driver = webdriver.Chrome()\n        driver.get(url)\n        time.sleep(1)\n        html = etree.HTML(driver.page_source)\n        movie_name_pattern = &quot;&#47;&#47;div[@class=&#39;item-root&#39;]&#47;div[@class=&#39;detail&#39;]&#47;div[@class=&#39;title&#39;]&#47;a&quot;\n        movie_actors_pattern = &quot;&#47;&#47;div[@class=&#39;item-root&#39;]&#47;div[@class=&#39;detail&#39;]&#47;div[@class=&#39;meta abstract_2&#39;]&quot;\n\n        movie_list = html.xpath(movie_name_pattern)\n        actor_list = html.xpath(movie_actors_pattern)\n        movie_count = len(movie_list)\n        if (movie_count == 0): break\n        if (i == 0):\n            movie_list = movie_list[1:]\n            actor_list = actor_list[1:]\n        for movie, actors in zip(movie_list, actor_list):\n            if (actors.text is None or movie.text in already_deal_movies): continue\n            actor = actors.text.split(&#39;&#47;&#39;)\n            if (actor[0].strip() != director): continue\n            actor[0] = movie.text.strip()\n            csv_writer.writerow(actor)\n            already_deal_movies.add(movie.text)\n        driver.close()\n    out.close()\n\n#fetch_data(file_name)\n\nlists = csv.reader(open(file_name, &#39;r&#39;, encoding=&#39;utf-8&#39;))\n\n# 数据加载\ndata = []\nfor names in lists:\n    name_new = []\n    for name in names:\n        # 去掉演员数据中的空格\n        name_new.append(name.strip())\n    data.append(name_new[1:])\n# 挖掘频繁项集和关联规则\n# print(data)\nitemsets, rules = apriori(data, min_support=0.05)\nprint(itemsets)\nprint(rules)\n\n","like_count":0},{"had_liked":false,"id":192421,"user_name":"Untitled","can_delete":false,"product_type":"c1","uid":1039464,"ip_address":"","ucode":"8DD6ABA3E81A2E","user_header":"https://static001.geekbang.org/account/avatar/00/0f/dc/68/006ba72c.jpg","comment_is_top":false,"comment_ctime":1584849978,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":4,"product_id":100021701,"comment_content":"# 张艺谋 最小支持度=0.1的频繁项集：{1: {(&#39;巩俐&#39;,): 9, (&#39;李雪健&#39;,): 5}}，没有关联规则；\n最小支持度=0.05的频繁项集：\n{1: {(&#39;于和伟&#39;,): 2, (&#39;倪大红&#39;,): 3, (&#39;傅彪&#39;,): 2, (&#39;刘佩琦&#39;,): 2, (&#39;刘德华&#39;,): 2, (&#39;周冬雨&#39;,): 2, (&#39;姜文&#39;,): 2, (&#39;孙红雷&#39;,): 3, (&#39;巩俐&#39;,): 9, (&#39;张涵予&#39;,): 2, (&#39;张译&#39;,): 2, (&#39;李保田&#39;,): 3, (&#39;李曼&#39;,): 2, (&#39;李雪健&#39;,): 5, (&#39;杨凤良&#39;,): 2, (&#39;牛犇&#39;,): 2, (&#39;章子怡&#39;,): 3, (&#39;葛优&#39;,): 3, (&#39;赵本山&#39;,): 2, (&#39;郭涛&#39;,): 2, (&#39;闫妮&#39;,): 2, (&#39;陈道明&#39;,): 2}, 2: {(&#39;倪大红&#39;, &#39;巩俐&#39;): 2, (&#39;傅彪&#39;, &#39;李雪健&#39;): 2, (&#39;刘佩琦&#39;, &#39;巩俐&#39;): 2, (&#39;孙红雷&#39;, &#39;赵本山&#39;): 2, (&#39;巩俐&#39;, &#39;李保田&#39;): 2, (&#39;巩俐&#39;, &#39;杨凤良&#39;): 2, (&#39;巩俐&#39;, &#39;葛优&#39;): 2, (&#39;巩俐&#39;, &#39;郭涛&#39;): 2, (&#39;李保田&#39;, &#39;李雪健&#39;): 2}}\n关联规则：\n[{傅彪} -&gt; {李雪健}, {刘佩琦} -&gt; {巩俐}, {赵本山} -&gt; {孙红雷}, {杨凤良} -&gt; {巩俐}, {郭涛} -&gt; {巩俐}]\n","like_count":0},{"had_liked":false,"id":102528,"user_name":"大次狼","can_delete":false,"product_type":"c1","uid":1154660,"ip_address":"","ucode":"CE9EC8FCF47A7E","user_header":"https://static001.geekbang.org/account/avatar/00/11/9e/64/dd9328c5.jpg","comment_is_top":false,"comment_ctime":1560243884,"is_pvip":true,"replies":null,"discussion_count":1,"race_medal":0,"score":4,"product_id":100021701,"comment_content":"你好，想请问一个问题，用Efficient-Apriori 运行后的记过，除了支持度和执行度以外，他的返回结果还包括lift和conviction，其中lift指的是p(x,y)&#47;(p(x) * p(y))，x和y同时发生的概率除以x发生的概率再除以y发生的概率，这个值lift的值代表的含义是什么？还有conviction值得是P(not Y) &#47; P(not Y | X)代表的又是什么含义？谢谢","like_count":0,"discussions":[{"author":{"id":1245080,"avatar":"https://static001.geekbang.org/account/avatar/00/12/ff/98/6e17646a.jpg","nickname":"桔子","note":"","ucode":"635DB29C04FD47","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":204343,"discussion_content":"lift是提升度的含义","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584157429,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":83361,"user_name":"滨滨","can_delete":false,"product_type":"c1","uid":1334567,"ip_address":"","ucode":"881EFA798BEE34","user_header":"https://static001.geekbang.org/account/avatar/00/14/5d/27/74e152d3.jpg","comment_is_top":false,"comment_ctime":1554545111,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":5,"product_id":100021701,"comment_content":"支持度：购买ABC这一商品组合，在所有商品组合中的出现概率\n\n置信度：购买A商品的条件下，购买B商品的概率\n\n提升度：购买A商品又购买B商品的概率，与所有购买了B商品的概率之比。也就是购买A商品对购买B商品的可能性提升能力。\n\n提升度＞1，说明相互促进\n等于1，没影响，\n＜1，相互排斥","like_count":0},{"had_liked":false,"id":75339,"user_name":"reverse","can_delete":false,"product_type":"c1","uid":1240138,"ip_address":"","ucode":"0B546E540DF096","user_header":"https://static001.geekbang.org/account/avatar/00/12/ec/4a/40a2ba79.jpg","comment_is_top":false,"comment_ctime":1552381514,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":5,"product_id":100021701,"comment_content":"极客时间数据分析实战45讲的详细笔记(包含markdown、图片、思维导图、代码)  https:&#47;&#47;github.com&#47;xiaomiwujiecao&#47;DataAnalysisInAction","like_count":0},{"had_liked":false,"id":83361,"user_name":"滨滨","can_delete":false,"product_type":"c1","uid":1334567,"ip_address":"","ucode":"881EFA798BEE34","user_header":"https://static001.geekbang.org/account/avatar/00/14/5d/27/74e152d3.jpg","comment_is_top":false,"comment_ctime":1554545111,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":5,"product_id":100021701,"comment_content":"支持度：购买ABC这一商品组合，在所有商品组合中的出现概率\n\n置信度：购买A商品的条件下，购买B商品的概率\n\n提升度：购买A商品又购买B商品的概率，与所有购买了B商品的概率之比。也就是购买A商品对购买B商品的可能性提升能力。\n\n提升度＞1，说明相互促进\n等于1，没影响，\n＜1，相互排斥","like_count":0},{"had_liked":false,"id":75339,"user_name":"reverse","can_delete":false,"product_type":"c1","uid":1240138,"ip_address":"","ucode":"0B546E540DF096","user_header":"https://static001.geekbang.org/account/avatar/00/12/ec/4a/40a2ba79.jpg","comment_is_top":false,"comment_ctime":1552381514,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":5,"product_id":100021701,"comment_content":"极客时间数据分析实战45讲的详细笔记(包含markdown、图片、思维导图、代码)  https:&#47;&#47;github.com&#47;xiaomiwujiecao&#47;DataAnalysisInAction","like_count":0}]}