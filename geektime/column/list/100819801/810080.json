{"id":810080,"title":"03｜AI产品的上层建筑：提示词工程、RAG与Agent","content":"<p>你好，我是产品二姐。</p><p>上节课我们拆解了AI产品的基础设施建设，这节课我们聊聊上层建筑。这部分是产品经理日常工作的重头戏，包含提示词、RAG和Agent构建。</p><p>用AI客服产品举例，这三者的作用是这样的：</p><ul>\n<li>\n<p>提示词能让客服很有礼貌。比如它会说：您好呀，很高兴为您服务。</p>\n</li>\n<li>\n<p>RAG能让客服很专业。当客户咨询某个产品具体的价格时，RAG能查阅相关价格手册，直接给出具体数值；如果没有RAG，客服只能傻白甜地说，“亲，请您查阅价格手册哦~”虽然礼貌，但并不解决实际问题。</p>\n</li>\n<li>\n<p>Agent能让客服很有执行力。当客户要求安排明天送货时，Agent能在系统里修改送货时间，并回复客户“我已经帮您修改明天送货”。</p>\n</li>\n</ul><p>这节课我会用最容易入门的方式带你理解以下概念，为后面的实战案例做好知识储备。</p><ul>\n<li>\n<p>提示词工程：我会讲述一个框架和两个技巧。</p>\n</li>\n<li>\n<p>RAG：我会带你“参观”RAG工厂的流水线作业。</p>\n</li>\n<li>\n<p>Agent：我会带你学习让Agent具备执行能力的两项技能。</p>\n</li>\n</ul><h2>提示词</h2><p>相信你在很多地方看到过关于提示词的知识，但是AI产品经理的提示词和日常我们所说的提示词有所不同。</p><p>第一个区别是目标不同，正如01节课中讲的：</p><ul>\n<li>\n<p>普通用户写提示词就像玩盲盒。对结果有所期待，但不要求确定。</p>\n</li>\n<li>\n<p>AI产品经理写提示词就像打靶。你是首先有一个确定的目标，再开始写提示词，直到提示词能打中靶心为止。</p>\n</li>\n</ul><!-- [[[read_end]]] --><p>第二个不同是使用工具不同。</p><ul>\n<li>\n<p>普通用户写提示词是在AI产品里写，比如Open AI的ChatGPT。</p>\n</li>\n<li>\n<p>AI产品经理写提示词是面向原生的大语言模型写，比如Open AI的GPT Playground。</p>\n</li>\n</ul><p>在这里，ChatGPT是OpenAI包装好的一个AI产品，ChatGPT里的每一次问答并不是直接发给模型，而是经过了包装才发给GPT模型。而GPT Playground里的对话才是直接发给GPT模型的。你可以把GPT理解为OpenAI提供的“毛坯房”，为了把这个“毛坯房”卖出去，OpenAI提供了一个“样板房”，就是ChatGPT。</p><p>下图是二者界面对比，ChatGPT看上去更加简洁，看上去就可以“拎包入住”；而GPT Playground 里会有很多设置项，更像是毛坯房里裸露的“水电管线”。</p><p><img src=\"https://static001.geekbang.org/resource/image/64/a8/644fc8d30332bff13b193f4a4894f0a8.png?wh=1920x1250\" alt=\"图片\"></p><h3>预备知识：准备环境</h3><p>那么在“毛坯房”里写提示词之前，我们先来介绍一下毛坯房里的“水电注意事项”。不过这里需要说明，每个模型厂商“水电注意事项”也不尽一致，在这里我列出部分模型的“毛坯房”可配置项和官方链接，其他模型大家直接参考官网。</p><p><img src=\"https://static001.geekbang.org/resource/image/bd/66/bde2c851f9b02c28d3025ee09668a066.png?wh=3604x3140\" alt=\"\"></p><blockquote>\n<p><a href=\"https://platform.openai.com/playground\">链接1</a>、<a href=\"https://open.bigmodel.cn/console/trialcenter\">链接2</a>、<a href=\"https://console.anthropic.com/workbench\">链接3</a>、<a href=\"https://help.aliyun.com/zh/dashscope/use-qwen-by-api#f09300c38f4nz\">链接4</a></p>\n</blockquote><p>其中，OpenAI的Playground配置项是目前最全的，我们就以此为例具体说明。</p><p>首先，左侧四个选项Chat、Assistants、TTS、Completion，可以视作面向不同场景开发的不同“户型”。</p><ul>\n<li>\n<p><strong>Chat：</strong>和模型直接对话，是调试提示词的主要模式。</p>\n</li>\n<li>\n<p><strong>Assistants：</strong>可以先创建聊天机器人角色，再用这个角色与模型对话。如果你的产品仅仅就是一个对话机器人的话，可以用这种模式来调试提示词。</p>\n</li>\n<li>\n<p><strong>TTS：</strong>是文本到语音，当模型收到你的消息时，会被朗诵出来。适用于语音输出的场景。</p>\n</li>\n<li>\n<p><strong>Completions：</strong>是指文本补全，经常用在代码补全的场景。</p>\n</li>\n</ul><p>我们以最基本的 <strong>Chat</strong> 模式来看一种模式下的右侧各种设置。</p><ul>\n<li>\n<p>Function：添加模型可以执行的自定义功能。</p>\n</li>\n<li>\n<p>Response format：指定对话输出的格式要求。比如要求以JSON格式输出，方便解析。方便下一步操作。</p>\n</li>\n<li>\n<p>Temprature：用来控制模型的创造力和随机性。温度越高，回答越发散；温度越低，回答越稳定。你可以想象，水的温度是100时，水分子以水蒸气的方式发散；而水温0度时，则相对稳定。实际上大语言模型的原理本身就起源于热力学模型，因此在这里沿用了温度的概念。</p>\n</li>\n<li>\n<p>Maximum Tokens：设置模型在单个响应中可以生成Token最大数量。</p>\n</li>\n<li>\n<p>Stop sequences：可以提供特定的短语或模式控制模型应停止生成文本。</p>\n</li>\n<li>\n<p>Top P：此参数影响模型输出的概率分布，专注于更可能的预测。</p>\n</li>\n<li>\n<p>Frequency penalty：降低模型出现重复单词或短语的可能性。</p>\n</li>\n<li>\n<p>Presence penalty：增加模型谈论新主题的可能性。</p>\n</li>\n</ul><p>在AI产品开发中，当我们向OpenAI发送请求时，需要带上以上设置好的参数。对于产品经理来说，我们调整好提示词后，需要同时把这些参数值的设置告诉开发同学。</p><p>配好环境后，我们就可以学习提示词框架和技巧了。</p><h3>提示词框架和技巧</h3><p>提示词技巧难度不高，网上也有很多资料。但随着实战深入，你会发现提示词更多的是一项“工程”。</p><p>比如对于不同模型，我们需要调整不同的提示词；对于同一场景，也需要需要调整提示词以达到最大化满足需求。</p><p>这节课我会以<strong>一个框架和两个技巧</strong>带你了解基本知识，后续再通过实战案例带你深入体会。</p><ul>\n<li><strong>一个入门框架</strong></li>\n</ul><p>提示词的框架就是提示词模板。框架是为了让我们更容易上手、方便记忆。在你充分实践后，就不必拘泥于框架了。网上有非常多的提示词框架（参考1），这里我以RTF框架为例说明。</p><p>RTF代表Role（角色），Task（任务）， Format（格式）。我们把上节课提到的客服场景用RTF框架写出来，就是下面这样的提示词。</p><pre><code class=\"language-markdown\">## Role&nbsp;&nbsp;\n情感标注人员&nbsp;&nbsp;\n## Task&nbsp;\n我给你的一句客户留言文字，请你判断出文字中的情绪。请你从以下选项中选择：&nbsp;\n1. 正面：表达了肯定、喜欢、赞赏、褒扬\n2. 负面：表达了否定、讨厌、贬低\n3. 中性：通常客观描述，没有主观意向， 没有肯定、喜欢、赞赏、褒扬，也没有否定、讨厌、贬低\n## Format\n严格按照以下格式输出：\n{\n\t\"客户留言\": \"客户留言内容\",\n\t\"情绪判断\": \"情绪判断结果\"\n}\n</code></pre><p>在撰写提示词时需要注意两条不成文的“习俗”。</p><ol>\n<li>\n<p><strong>提示词中的标记位参考</strong> <strong>Markdown</strong> <strong>语言来写</strong>。Markdown是一种带标记的语言，比如例子中 “##” 代表一个小标题，Markdown语言既能方便人来操作，又能让计算机很好理解。所以在提示词的撰写中广泛应用。你可以参考<a href=\"https://www.markdownguide.org/getting-started/\">Markdown 官方文档</a>学习。</p>\n</li>\n<li>\n<p><strong>输出格式结构化。</strong>上面的提示词特别规定了严格的输出格式（通常是JSON格式）。这是因为开发同学通常会对模型的输出做下一步处理，结构化输出会方便他们解析。如果你不熟悉JSON格式，可以借助ChatGPT来修改成JSON格式（比如下图）。</p>\n</li>\n</ol><p><img src=\"https://static001.geekbang.org/resource/image/9b/65/9b78c80bbb2715cee4b999236d06c365.png?wh=1888x1091\" alt=\"图片\"></p><p>在框架之外，我们还需要掌握提示词的两个基本技巧，Few-Shots、COT。</p><ul>\n<li><strong>技巧一： Few</strong><strong>-S</strong><strong>hots（少量样本提示）</strong></li>\n</ul><p>Few-Shots通俗来讲就是“举例子”。我们给刚才客服场景的提示词加上Few-Shots，就是下面这样的。</p><pre><code class=\"language-markdown\">// RTF 内容略...\n\n\n## few shots&nbsp;\n{\n\t\"客户留言\":\"今天我不在家，你们明天送货；\",\n\t\"情绪判断\":\"中性\"\n},\n{\n\t\"客户留言\":\"我就不相信你们卖的是正品，质量太差了！\",\n\t\"情绪判断\":\"负面\"\n},\n{\n\t\"客户留言\":\"收到您的差额退还了，你们的服务真快，谢谢！\",\n\t\"情绪判断\":\"正面\"\n}\n\n\n</code></pre><p>你可千万别小看举例子这个简单的操作，这可是正儿八经的学术话题。2020年OpenAI GPT-3论文的标题就是《Language Models are Few-Shot Learners》，论文中有一张图这样的：</p><p><img src=\"https://static001.geekbang.org/resource/image/34/e4/348b4b9065f2d30cf1bc18c9cd202ce4.png?wh=1034x580\" alt=\"图片\"></p><p>你看，在1750亿参数的大语言模型中：</p><ol>\n<li>\n<p>给出一个示例比不给示例的准确率从10%迅速提升到45%。</p>\n</li>\n<li>\n<p>给出10个示例比一个示例的准确率从45%提升到60%。</p>\n</li>\n<li>\n<p>给出10个以上示例效果会有所波动甚至下降。</p>\n</li>\n</ol><p>所以，少量样本数量不宜过少，但也不能过多。这也是提示词被称为是“工程”的一个原因：我们需要通过大量尝试，把最典型的例子放在提示词里。</p><p>Few-Shots论文让学术界见识到了大语言模型通过上下文就能“照猫画虎”地学习到示例里的能力，而当时大语言模型的推理能力还很弱。于是大家就开始思考：如果提示词当中给出推理步骤，是不是就能让大语言模型“照猫画虎”地学会推理呢？</p><p>这一思考就催生了提示词的第二个基本技巧：COT（思维链，Chain Of Thought）。</p><ul>\n<li><strong>技巧二： COT。</strong></li>\n</ul><p>思维链简单来说就是在提示词里加上“让我们一步步来，第一步……，第二步……”，主要用于推理场景，比如数学应用题计算，再比如规划旅程时中转站的时间要前后合理，这些都是推理场景。</p><p>这个简单的技巧放在提示词里确实有四两拔千金的效果。在COT开山论文里发现：对于参数量在十亿、百亿、千亿的大模型，采纳了COT的提示词在GSM8K数据集（加减乘除应用题）的测试中，准确率从20%直接干到50%，接近人类平均水平。正如论文标题所说的《COT点燃了大语言模型的推理能力》。</p><p><img src=\"https://static001.geekbang.org/resource/image/e6/b6/e632c6d1yy5509469663e84ac7d120b6.png?wh=1854x974\" alt=\"图片\"></p><p>所以，在推理场景下，COT的作用绝不可小觑。如果你了解更多关于COT的研究，可以参考<a href=\"https://zhuanlan.zhihu.com/p/589087074\">这篇文章</a>。上面说的提示词框架和两个提示词技巧还衍生出来了很多技巧，你可以参考2提示词指南网站上的内容学习。在后续的实战案例中，我们会以组合、嵌套的方式同时使用这些技巧。</p><p>接下来我们来了解AI产品上层建筑中的另外一项内容，RAG。</p><h2>RAG</h2><p>在本节课开头客服场景的例子里，我说的是RAG会让客服更专业，是因为它会查阅资料后给出回答。<strong>RAG本质上就是把搜索到的资料作为提示词的一部分发给大语言模型，让大语言模型有根据地输出内容，从而降低大模型“臆想答案”的概率。</strong>在OpenAI分享的案例中，通过对RAG技术的应用将回答准确率从45% 提升到了98%，可见RAG的重要性。</p><p>RAG的全称是 Retrieval Argumented Generation，中文是检索增强生成。意思是<strong>把检索（资料库）的结果发给大模型，以增强大模型的生成能力</strong>。</p><p>下面这张图就是一张RAG作业的流水线，行话叫Pipeline。这个流水线上有10个作业环节，只有精细打磨流水线上的每一个步骤，最后才能出来好的效果。</p><p><img src=\"https://static001.geekbang.org/resource/image/f9/22/f9fed251a86455b16877f74373f12722.png?wh=1920x794\" alt=\"图片\"></p><p>接下来，我们对这个 RAG Pipeline 中的各个环节做一个概念介绍。为了便于理解，这里都会拿“查阅资料库”来类比。</p><ol>\n<li>\n<p><strong>数据提取：</strong>类比于资料库的资料来源。主要目标是确保资料数据完整，除此之外，还可以新生成一些数据，比如利用大模型对资料进行 summary、打标签，让后续处理更高效。</p>\n</li>\n<li>\n<p><strong>分块(Chunking)</strong>：你可以想象成资料应该拆分到多细来存储，用梗话来说就是“对齐颗粒度”。比如按段落、句子拆，或者按照文章标题、某个标记来拆等等。</p>\n</li>\n<li>\n<p><strong>向量化（Embedding）</strong>：就是把拆分后的段落、句子、单词转换为计算机可处理的向量，向量化就是把一个物体拆成多个维度表达。</p>\n</li>\n</ol><p>比如一本书可以从以下八个维度去表达。</p><p><img src=\"https://static001.geekbang.org/resource/image/d7/62/d76e68be00fa425ed92c24d229fdc562.png?wh=1920x1197\" alt=\"图片\"></p><p>那么某一本特定的书《思考的快与慢》对应的向量值就是八维空间的一个点，计算机就是通过这些点来定义事物的。同样，语言文字也可以被向量化，且语言都已经有成熟的向量模型，比如智源的开源 embedding 模型 bge-large-zh-v1.5 有 1024 个维度。</p><ol start=\"4\">\n<li><strong>创建索引：</strong>类似把向量化后的资料块进行分类、整理，按照一定顺序放在对应位置后给出序号，方便后面的检索查找。索引可以建多个，比如书可以按照图书分类排序，也可以按照出版时间排序。</li>\n</ol><p><strong>至此，你的资料库终于建好了，接下来就是根据具体问题在这些资料库中查找了。</strong></p><ol start=\"5\">\n<li>\n<p><strong>检索环节（Retriever）</strong>：类似在资料库找相关资料。系统会根据用户的提问，在索引中查找最相关的数据块。找到和问题匹配度高的资料（注意此时还没有形成答案）。</p>\n</li>\n<li>\n<p><strong>第一轮检索评估</strong><strong>：</strong>大多数文章中会漏掉评估的环节，开发者往往也会忽视。要知道，没有评估等于盲走。这里的评估和传统搜索的评估是一样的，最核心的指标是召回率，即实际检索出的文本块数量/期待被检索的文本数量。</p>\n</li>\n</ol><p>讲到这里我们停一下。<strong>实际上到这一步之前，在技术上和互联网的搜索逻辑是类似的</strong><strong>，我们统称为“语义检索”阶段。</strong>这意味着如果你公司内部的知识库已经具备“语义搜索”能力，那么通过嫁接下面两步就可以实现基于 LLM 的问答应用了。</p><p>接下来的环节就是大语言模型 LLM 出来后特有的阶段。</p><ol start=\"7\">\n<li>\n<p><strong>重排序（Rerank）：</strong>语义检索出来的结果相当于是资料初筛，讲究的是效率。重排序顾名思义就是对初步检索结果进行重排序，从而得到更精确的结果。重排序也有开源闭源的模型供大家使用，比如Cohere等。</p>\n</li>\n<li>\n<p><strong>重排评测：</strong>和语义检索阶段一样，在重排序之后，我们也应该有一个评估，这里的评估机制和步骤6类似。</p>\n</li>\n<li>\n<p><strong>生成（Generator）：</strong>这一步对应的就是系统终于找到了最准确的资料，然后整理、总结资料，形成完整报告。实际上就是将重排序后的资料片段加上用户的提示词，提供给大型语言模型LLM，由 LLM 根据上下文生成最终的输出。在这个过程中，主要在提示词、上下文、意图识别方面下功夫。</p>\n</li>\n<li>\n<p><strong>终极评估：</strong>这一轮的评估指标和检索、重排序指标不一样，现在有专门用于评估 RAG 的框架 RAGAS （参考 <a href=\"https://docs.ragas.io/en/stable/\">RAGAS 官网</a>）。</p>\n</li>\n</ol><p>总的来说，RAG 流程玩的是一条流水线上的“组合拳”。对于应用开发者来说，比拼的就是对不同的场景该怎么打这套组合拳。<strong>有了RAG和提示词，相当于我们和大语言模型建立<strong><strong>起了</strong></strong>很好的沟通机制，当我们把事情沟通好之后呢，就可以借助大语言模型来“执行工作”了</strong>，这就轮到Agent出场了。</p><h2>Agent</h2><p>Agent并不是平行于RAG、提示词的概念，Agent本身就包含了RAG和提示词的应用。</p><p>在 <a href=\"http://time.geekbang.org/column/article/809292\">01节</a>中，我们知道Agent需要具备记忆、反思、规划和工具使用能力。这四项能力中，我把记忆、反思、规划总结为思考力，工具使用总结为执行力。思考力通过上述的提示词工程和RAG就可以获得，剩下的执行力，我们在这一小节讲述。</p><p>本节课开头的例子中，Agent能让客服直接安排退货这个行为，这就是执行力。那这是怎么做到的呢？你只要记住两项技能：Function calling和Re-Act，别急，我们一个个讲清楚。</p><h3>技能一：Function calling（函数调用）</h3><p>Function calling的中文意思是函数调用，是计算机语言里的一个概念。比如你使用Excel表里的公式SUM(C1,C2)代表将单元格C1，C2中的数字相加，在这里：</p><ul>\n<li>\n<p>自然语言是：将单元格C1，C2中的数字相加。</p>\n</li>\n<li>\n<p>自然语言被转换成函数调用就是：SUM(C1,C2)，函数调用可以直接被机器编译并运行。</p>\n</li>\n</ul><p>大语言模型的Function calling能力就是<strong>把自然语言指令转换为函数的调用指令，从而使自然语言指令可以被执行。</strong></p><p>当然，可以被机器运行的函数有很多种，比如Java函数、Python函数，而在AI产品中最常见的函数调用方式就是调用微服务架构下的各种API request。</p><p>下面就是以API request这种函数为例，通过提示词的方式让大语言模型完成函数调用的任务。</p><pre><code class=\"language-markdown\">## Instruction&nbsp;\n你是一个人工智能编程助手，根据用户请求和函数定义，调用函数来完成任务，并以代码格式进行回应，无需回复其他话语。请特别注意函数的定义。\n\n## 函数定义\n  tools = [\n  &nbsp; &nbsp; {\n  &nbsp; &nbsp; &nbsp; &nbsp; \"type\": \"function\",\n  &nbsp; &nbsp; &nbsp; &nbsp; \"function\": {\n  &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; \"name\": \"get_current_weather\",\n  &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; \"description\": \"Get the current weather in a given location\",\n  &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; \"parameters\": {\n  &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; \"type\": \"object\",\n  &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; \"properties\": {\n  &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; \"location\": {\n  &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; \"type\": \"string\",\n  &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; \"description\": \"The city and state, e.g. San Francisco, CA\",\n  &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; },\n  &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; },\n  &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; \"required\": [\"location\"],\n  &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }\n  &nbsp; &nbsp; &nbsp; &nbsp; }\n  &nbsp; &nbsp; }\n  ]\n\n## 用户请求\n  查一下今天北京的天气\n\n</code></pre><p>这个例子的提示词里有三个部分。</p><ol>\n<li>\n<p>任务：告诉大语言模型要完成指令转换的任务，这里的核心任务就是“根据用户请求和函数定义，调用函数来完成任务，并以代码格式进行回应”。</p>\n</li>\n<li>\n<p>函数定义：专业术语叫schema，即告诉大语言模型这个API request里有哪些参数，各个参数的名称、描述、数据类型等。这里最好遵循OpenAI自己的格式，这种格式也可以借助大语言模型来完成。</p>\n</li>\n<li>\n<p>用户请求：就是自然语言指令。</p>\n</li>\n</ol><p>我们把上述的例子输入给到Open AI的GPT Playground，GPT就会输出以下API Request，这就可以直接被机器运行。我们就实现了将自然语言指令转变为计算机可执行指令。</p><pre><code class=\"language-markdown\">```json\n{\n    \"function\": \"get_current_weather\",\n    \"parameters\": {\n        \"location\": \"北京\"\n    }\n}\n</code></pre><p>不过大语言模型在做这个可执行指令的转换时，充满了不确定性，除了调整提示词中instruction部分外，还需要一些机制来控制执行的准确性，这就需要赋予Agent的第二项技能：Re-Act。</p><h3>技能二： Re-Act</h3><p>Re-Act 的全称是：Reasoning and Act，推理并且执行，相当于是给行动装上了一个随机应变的机制。</p><p>回到上面的函数定义例子，假设API定义中要求第14行代码的字段“location”必须是英文字母，但我们发送的是汉字“北京”，API就会返回错误信息“location must be English”。这时大语言模型还会根据这个错误信息<strong>自动推理</strong>出此时需要将汉字“北京”改为拼音“Beijing”后，再去调用API。\b</p><pre><code class=\"language-markdown\">```json\n{\n    \"function\": \"get_current_weather\",\n    \"parameters\": {\n        \"location\": \"BeiJing\"\n    }\n}\n</code></pre><p>这就是<strong>推理并且执行，</strong>你瞧，大语言模型是不是很聪明呀。</p><p>在上面这个例子中，我们很容易就发现，在Agent进行推理执行的过程中，需要分享把观察到的报错信息也发给大语言模型，这就构成了Re-Act模式的提示词框架：Observation，Think，Act。</p><pre><code class=\"language-markdown\">## Observation：\n  API就会返回错误信息“location must be English”.\n## Think：\n  应该location这个字段的值转换为英文再发一次.将API request 当中的\"北京\"修改为\"BeiJing\".\n\n\n## Act：\n  ```json\n  {\n      \"function\": \"get_current_weather\",\n      \"parameters\": {\n          \"location\": \"BeiJing\"\n      }\n  }\n</code></pre><p>这种Observation-&gt;Think-&gt;Act的模式会一直循环，直到在Think步骤中认为Observation里的结果能达成用户诉求，或者循环次数达到了代码里规定的上限。可以说，Re-Act本质上就是一种提高Agent执行准确率的提示词模板。</p><p>听到这里，你会不觉得，哇~ 这也太厉害了吧，只要通过提示词能让大语言模型像个真人一样自主行动呢。不过这里我要泼点冷水：目前大语言模型的Reasoning 和 Act的准确率还不够高，就像刚刚走路的孩子，执行起来跌跌撞撞，但这种能力会越来越强。</p><p>另一方面，研究者在Re-Act基础之上，也衍生出了各种各样的花式提示词模板来提升Agent的执行准确率。类似于给孩子装上护具、穿上牵引带这类外围措施防止他们跌倒。我们在后续的实战案例中会根据需要使用到这些方式，在这里不再细讲。</p><h2>小结</h2><p>到这里，AI产品架构中的上层建筑就完成了简单介绍。针对三点，我们需要做到：</p><ul>\n<li>\n<p>提示词：以简单框架入门提示词，牢记Few shots、COT两项基本技巧。这是让应用层和大语言模型进行有效沟通的技巧。</p>\n</li>\n<li>\n<p>RAG：了解RAG流水线的每一个环节，之后我们才能在实战案例按照流水线来一一排查问题。</p>\n</li>\n<li>\n<p>Agent：通过函数调用具备执行力，通过以Re-Act为代表的Agent提示词模板提升执行准确率。</p>\n</li>\n</ul><p>到这里我们完成了第一章的<strong>产品经理必懂的AI技术原理</strong>的学习。一款AI产品通常有四层架构，这四层又可以归类为基础设施（算法、数据，大语言模型）和上层建筑。这部分AI产品经理必备的基础知识，也是打造所有AI产品的必备工具。相信你已经掌握了使用这些工具的方法，一定在实战中得心应手地使用这些工具，打造出优秀的AI产品。</p><h2>课后题</h2><p>注册堪称国内版OpenAI的<a href=\"https://open.bigmodel.cn/\">智谱大语言模型开放平台</a>（相当于智谱的API playground），并完成两个任务。</p><p>任务一： 从 <a href=\"https://huggingface.co/datasets/ought/raft/tree/main/data/twitter_complaints\">twitter数据集</a>中选取20条数据，写一条提示词，使模型输出结果与20条数据中的标注数据保持一致。注意使用Few shots。</p><p>任务二：将本节课中的《技能一：Function calling（函数调用）》部分提到的Function calling提示词模板输入到智谱大语言模型开放平台，看看输出的结果是否和OpenAI输出的一致，看看在function calling 领域，openAI和智谱是否有一定差距？</p><h2>参考</h2><ol>\n<li>\n<p><a href=\"https://waytoagi.feishu.cn/wiki/AgqOwLxsHib7LckWcN9cmhMLnkb?from=from_copylink\">提示词框架。</a></p>\n</li>\n<li>\n<p><a href=\"https://zhuanlan.zhihu.com/p/589087074\">有了Chain of Thought Prompting，大模型能做逻辑推理吗？</a></p>\n</li>\n<li>\n<p><a href=\"https://www.promptingguide.ai/techniques/cot\">提示词指南。</a></p>\n</li>\n</ol><p><a href=\"http://jsj.top/f/Hn56mu\">&gt;&gt;戳此加入课程交流群</a></p>","comments":[{"had_liked":false,"id":394567,"user_name":"qian","can_delete":false,"product_type":"c1","uid":3600643,"ip_address":"广东","ucode":"085F2E753C4A33","user_header":"https://static001.geekbang.org/account/avatar/00/36/f1/03/230f50e8.jpg","comment_is_top":false,"comment_ctime":1727169345,"is_pvip":false,"replies":[{"id":143221,"content":"目前为止最有趣留言，哈哈哈😁哈哈哈。是两条非常好的conner case，必须要记下","user_name":"作者回复","user_name_real":"编辑","uid":3885064,"ctime":1727192568,"ip_address":"北京","comment_id":394567,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100819801,"comment_content":"\n{\n&quot;客户留言&quot;: &quot;这手机真难用，五年还不坏，我要不要买的新。&quot;,\n&quot;情绪判断&quot;: &quot;负面&quot;\n},\n{\n&quot;客户留言&quot;: &quot;这手机真好，用两天就坏了，我又可以买新手机了&quot;,\n&quot;情绪判断&quot;: &quot;正面&quot;\n}","like_count":5,"discussions":[{"author":{"id":3885064,"avatar":"https://static001.geekbang.org/account/avatar/00/3b/48/08/e18b1a00.jpg","nickname":"哄哄","note":"","ucode":"F66093BE6A2953","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":651636,"discussion_content":"目前为止最有趣留言，哈哈哈😁哈哈哈。是两条非常好的conner case，必须要记下","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1727192568,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2,\"source\":0}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":394552,"user_name":"Grace 雨婷","can_delete":false,"product_type":"c1","uid":3964200,"ip_address":"北京","ucode":"FB486DFA232E11","user_header":"https://static001.geekbang.org/account/avatar/00/3c/7d/28/f138ab6f.jpg","comment_is_top":false,"comment_ctime":1727144501,"is_pvip":false,"replies":[{"id":143220,"content":"类比人脑思考来说，RAG像你的记忆，每次有新问题，你会先从记忆里唤醒（检索）你记忆里的相关话题。function call像是人类会使用工具的能力，这里的工具就是函数。二者没有包含关系，成本上也没有谁高谁低的比较。\n所以，把二者还是放在产品里举例，比如一个生活助手产品，非常理解你的生活习惯。你告诉ta：“哎呀，我好渴”，ta会从记忆里找到你上次口渴的时候你会定一杯奶茶（这里记忆唤醒是用RAG，ta把你的生活习惯以RAG的方式存储了起来），于是ta立马帮你定了一杯奶茶（这就是学会了订奶茶这个工具），这就是function call。\n一个产品经理要想做这样一个小助手，就要知道：怎么把这些记忆合理的存储起来，怎么正确的让小助手定到正确的奶茶。第一个问题在接下来的第一个实战案例会讲到（马上上新）；第二个问题会在第三个，第四个实战案例里讲","user_name":"作者回复","user_name_real":"编辑","uid":3885064,"ctime":1727189420,"ip_address":"北京","comment_id":394552,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100819801,"comment_content":"设计agent时，什么情况需用rag，什么情况需调用function call呢？\n是不是可以这么解释，function call中的能力，rag都具备，但funciton call的实现成本更低呢？","like_count":3,"discussions":[{"author":{"id":3885064,"avatar":"https://static001.geekbang.org/account/avatar/00/3b/48/08/e18b1a00.jpg","nickname":"哄哄","note":"","ucode":"F66093BE6A2953","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":651632,"discussion_content":"类比人脑思考来说，RAG像你的记忆，每次有新问题，你会先从记忆里唤醒（检索）你记忆里的相关话题。function call像是人类会使用工具的能力，这里的工具就是函数。二者没有包含关系，成本上也没有谁高谁低的比较。\n所以，把二者还是放在产品里举例，比如一个生活助手产品，非常理解你的生活习惯。你告诉ta：“哎呀，我好渴”，ta会从记忆里找到你上次口渴的时候你会定一杯奶茶（这里记忆唤醒是用RAG，ta把你的生活习惯以RAG的方式存储了起来），于是ta立马帮你定了一杯奶茶（这就是学会了订奶茶这个工具），这就是function call。\n一个产品经理要想做这样一个小助手，就要知道：怎么把这些记忆合理的存储起来，怎么正确的让小助手定到正确的奶茶。第一个问题在接下来的第一个实战案例会讲到（马上上新）；第二个问题会在第三个，第四个实战案例里讲","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1727189420,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2,\"source\":0}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":394526,"user_name":"熊猫哥","can_delete":false,"product_type":"c1","uid":1234932,"ip_address":"江苏","ucode":"08C3F5EFF4D0CC","user_header":"https://static001.geekbang.org/account/avatar/00/12/d7/f4/8447161d.jpg","comment_is_top":false,"comment_ctime":1727071571,"is_pvip":false,"replies":[{"id":143214,"content":"记下了，后面会有针对不同技术的产品实战。不过你的建议给我了一个启示就是后面可以考虑把一个产品剖析一下，我考虑加在后面的内容里，感谢建议🙌","user_name":"作者回复","user_name_real":"编辑","uid":3885064,"ctime":1727133464,"ip_address":"北京","comment_id":394526,"utype":1}],"discussion_count":2,"race_medal":0,"score":2,"product_id":100819801,"comment_content":"这一章干货满满，感谢二姐的付出。提个小建议，可以在文章的最后以一个实际功能为demo，把所有的知识点给串起来。这样理解起来可以更加的深刻了～","like_count":2,"discussions":[{"author":{"id":3885064,"avatar":"https://static001.geekbang.org/account/avatar/00/3b/48/08/e18b1a00.jpg","nickname":"哄哄","note":"","ucode":"F66093BE6A2953","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":651593,"discussion_content":"记下了，后面会有针对不同技术的产品实战。不过你的建议给我了一个启示就是后面可以考虑把一个产品剖析一下，我考虑加在后面的内容里，感谢建议🙌","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1727133464,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2,\"source\":0}","child_discussion_number":1,"child_discussions":[{"author":{"id":1234932,"avatar":"https://static001.geekbang.org/account/avatar/00/12/d7/f4/8447161d.jpg","nickname":"熊猫哥","note":"","ucode":"08C3F5EFF4D0CC","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":3885064,"avatar":"https://static001.geekbang.org/account/avatar/00/3b/48/08/e18b1a00.jpg","nickname":"哄哄","note":"","ucode":"F66093BE6A2953","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":651597,"discussion_content":"3Q~  期待ing～","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1727141088,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":651593,"ip_address":"江苏","group_id":0},"score":651597,"extra":""}]}]},{"had_liked":false,"id":394586,"user_name":"Geek_ee95b7","can_delete":false,"product_type":"c1","uid":3788527,"ip_address":"北京","ucode":"B70DA30CBAC971","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLhj6Z0G3D73hUOd5Paz03WB0560ftPGZg7MRx2FFYibRoKC7d79NymPLpWZzKIKCicyqzczDHopcNQ/132","comment_is_top":false,"comment_ctime":1727247748,"is_pvip":false,"replies":[{"id":143228,"content":"会有按照场景来体会提示词，以及提示词微调工程的案例，但并不会专门把提示词拿出来单独讲解哈。\n提示词工程的知识非常多，记住全部感觉有点难，我更多的是会收藏一些提示词的案例，技巧和资源，更多的时候是把这些资源当做手册，随用随翻。\n写好提示词之后我的做法就是写在PRD里和开发共享，在PRD评审的时候使用。但是我也听说一些公司的提示词是由算法或者工程的同学来写，产品经理出数据测试集（期待的输入输出对），然后算法和工程同学依据这个数据集来调优提示词。各个公司做法不一样，我更倾向于前者。\n另外来点加餐：现在也有提示词自动调优项目，github搜dspy 项目，对于要求很高的提示词，可以参考这个项目的做法。","user_name":"作者回复","user_name_real":"编辑","uid":3885064,"ctime":1727255997,"ip_address":"内蒙古","comment_id":394586,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100819801,"comment_content":"提示词这部分的内容，后面会详细讲解吗？ 例如，在准备好的环境里写好的提示词，怎么跟开发对接？","like_count":1,"discussions":[{"author":{"id":3885064,"avatar":"https://static001.geekbang.org/account/avatar/00/3b/48/08/e18b1a00.jpg","nickname":"哄哄","note":"","ucode":"F66093BE6A2953","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":651687,"discussion_content":"会有按照场景来体会提示词，以及提示词微调工程的案例，但并不会专门把提示词拿出来单独讲解哈。\n提示词工程的知识非常多，记住全部感觉有点难，我更多的是会收藏一些提示词的案例，技巧和资源，更多的时候是把这些资源当做手册，随用随翻。\n写好提示词之后我的做法就是写在PRD里和开发共享，在PRD评审的时候使用。但是我也听说一些公司的提示词是由算法或者工程的同学来写，产品经理出数据测试集（期待的输入输出对），然后算法和工程同学依据这个数据集来调优提示词。各个公司做法不一样，我更倾向于前者。\n另外来点加餐：现在也有提示词自动调优项目，github搜dspy 项目，对于要求很高的提示词，可以参考这个项目的做法。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1727255998,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"内蒙古","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2,\"source\":0}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":396044,"user_name":"Yuki","can_delete":false,"product_type":"c1","uid":3873061,"ip_address":"越南","ucode":"E0884481694500","user_header":"","comment_is_top":false,"comment_ctime":1732796555,"is_pvip":false,"replies":[{"id":143795,"content":"rag可以看看这两篇参考文章：https:&#47;&#47;mp.weixin.qq.com&#47;s&#47;BHjNZPRlpLMeuQOj4O0wRg\n\nhttps:&#47;&#47;mp.weixin.qq.com&#47;s&#47;2f3zDFGzhxnr4iUpiJ5alw\n\nfunction call的概念继续往后看，看看结合10-12看看能不能形象一点","user_name":"作者回复","user_name_real":"编辑","uid":3885064,"ctime":1732889997,"ip_address":"北京","comment_id":396044,"utype":1}],"discussion_count":2,"race_medal":0,"score":2,"product_id":100819801,"comment_content":"function call和rag我觉得有点抽象，不太理解，我需要学一下大模型开发的内容嘛（产品新人，会用coze和dify搭bot）","like_count":0,"discussions":[{"author":{"id":3885064,"avatar":"https://static001.geekbang.org/account/avatar/00/3b/48/08/e18b1a00.jpg","nickname":"哄哄","note":"","ucode":"F66093BE6A2953","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":654550,"discussion_content":"rag可以看看这两篇参考文章：https://mp.weixin.qq.com/s/BHjNZPRlpLMeuQOj4O0wRg\n\nhttps://mp.weixin.qq.com/s/2f3zDFGzhxnr4iUpiJ5alw\n\nfunction call的概念继续往后看，看看结合10-12看看能不能形象一点","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1732889997,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2,\"source\":0}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":3873061,"avatar":"","nickname":"Yuki","note":"","ucode":"E0884481694500","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":654561,"discussion_content":"好的，谢谢您啦","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1732925787,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"越南","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":395316,"user_name":"kevin","can_delete":false,"product_type":"c1","uid":3920101,"ip_address":"广东","ucode":"19E83C631DF25E","user_header":"https://static001.geekbang.org/account/avatar/00/3b/d0/e5/0a3ee17c.jpg","comment_is_top":false,"comment_ctime":1730193144,"is_pvip":false,"replies":[{"id":143512,"content":"🤗","user_name":"作者回复","user_name_real":"编辑","uid":3885064,"ctime":1730237172,"ip_address":"北京","comment_id":395316,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100819801,"comment_content":"@JenniferTilly Merry Christmas to as well. You get more stunning every year ��\n@NortonSupport Thanks much.\n@VerizonSupport all of a sudden I can&#39;t connect to my primary wireless network but guest one works\nAaaahhhhh!!!! My @Razer @PlayOverwatch d.va meka headset came in!!! I didn&#39;t even know it had shipped!!! So excited… https:&#47;&#47;t.co&#47;4gXy9xED8d\n@Lin_Manuel @jmessinaphoto @VAMNit Omg a little squish!!!!! Enjoy and congrats!!!! I miss mine being so young! ������\n@IanJamesPoulter What&#39;s your secret to poaching eggs? Mine NEVER look that good.\n@AWSSupport When will be able Kinesis Firehose compatible with Elasticsearch 6.0? Thank you!\n@NCIS_CBS https:&#47;&#47;t.co&#47;eeVL9Eu3bE\n@msetchell Via the settings? That’s how I do it on master T’s\nToday at work there was a low flying duck heading toward a crowd of people, and I yelled &quot;watch out! and I&#39;m very disappointed with myself.","like_count":0,"discussions":[{"author":{"id":3885064,"avatar":"https://static001.geekbang.org/account/avatar/00/3b/48/08/e18b1a00.jpg","nickname":"哄哄","note":"","ucode":"F66093BE6A2953","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":653095,"discussion_content":"🤗","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1730237173,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2,\"source\":0}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":394912,"user_name":"王璐","can_delete":false,"product_type":"c1","uid":1095945,"ip_address":"北京","ucode":"60B77F2E26964C","user_header":"https://static001.geekbang.org/account/avatar/00/10/b9/09/1ec29d54.jpg","comment_is_top":false,"comment_ctime":1728740232,"is_pvip":false,"replies":[{"id":143394,"content":"哈哈，正宗西北人，在外漂泊了二十几年，还会有些家乡“余音”～","user_name":"作者回复","user_name_real":"编辑","uid":3885064,"ctime":1728818630,"ip_address":"北京","comment_id":394912,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100819801,"comment_content":"0.75倍速加略带亲切的“西北”口音，像是心灵疗愈师，这节课得多听几遍","like_count":0,"discussions":[{"author":{"id":3885064,"avatar":"https://static001.geekbang.org/account/avatar/00/3b/48/08/e18b1a00.jpg","nickname":"哄哄","note":"","ucode":"F66093BE6A2953","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":652375,"discussion_content":"哈哈，正宗西北人，在外漂泊了二十几年，还会有些家乡“余音”～","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1728818630,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2,\"source\":0}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":394654,"user_name":"谢庭恩","can_delete":false,"product_type":"c1","uid":1898214,"ip_address":"湖南","ucode":"7AC11237E5A3B2","user_header":"https://static001.geekbang.org/account/avatar/00/1c/f6/e6/fc4d0ee3.jpg","comment_is_top":false,"comment_ctime":1727430138,"is_pvip":false,"replies":[{"id":143274,"content":"关于第一点和第二点，应该是智谱自己的函数调用格式输出，函数调用可以是json格式，也可以是Python函数格式。\n第三点试试通过提示词是否能达到你的要求。\n第四点，单看你这个例子应该不是，对于复杂API结构，可能需要更大参数规模的模型，比如chat glm plus最近表现还不错。\n第五点，是的「无奈」","user_name":"作者回复","user_name_real":"编辑","uid":3885064,"ctime":1727527411,"ip_address":"北京","comment_id":394654,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100819801,"comment_content":"将老师的Function calling提示词模板复制粘贴到智谱模型中，得到的是：\ndef get_current_weather(location):\n   # 模拟获取天气数据\n   weather_data = {\n       &quot;San Francisco, CA&quot;: &quot;Partly cloudy with a high of 60°F and a low of 50°F&quot;,\n       &quot;Beijing, CN&quot;: &quot;Sunny with a high of 72°F and a low of 52°F&quot;\n   }\n   return weather_data[location]\n\n# 调用函数获取北京天气\nweather_in_beijing = get_current_weather(&quot;Beijing, CN&quot;)\nprint(weather_in_beijing)\n\n思考：\n1. 智谱首先定义了一个python函数，然后模拟了个旧金山和北京的数据字典，最后还调用了这个函数；\n2. 而老师在上面的例子中，GPT Playground很爽快直接给了个json格式的请求；\n3. 我觉得关键在于智谱没有很好的理解我们最终想要的是一个请求，而不是一整套函数；\n4. 可能因为我用的免费版glm-4-flash么~ :)\n5. 另外想问下老师，要用GPT Playground是需要绑定美金支付账户么~","like_count":0,"discussions":[{"author":{"id":3885064,"avatar":"https://static001.geekbang.org/account/avatar/00/3b/48/08/e18b1a00.jpg","nickname":"哄哄","note":"","ucode":"F66093BE6A2953","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":651832,"discussion_content":"关于第一点和第二点，应该是智谱自己的函数调用格式输出，函数调用可以是json格式，也可以是Python函数格式。\n第三点试试通过提示词是否能达到你的要求。\n第四点，单看你这个例子应该不是，对于复杂API结构，可能需要更大参数规模的模型，比如chat glm plus最近表现还不错。\n第五点，是的「无奈」","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1727527411,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2,\"source\":0}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":394645,"user_name":"Geek_b423ca","can_delete":false,"product_type":"c1","uid":2722409,"ip_address":"湖南","ucode":"7194C578522EC3","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTI74Pu3vr51H6hxQoM6ma5MeE7S2YmaO4akhetGDaibkKZRichL1yuEyIPH9gsMZicNGangbVSmRkbVg/132","comment_is_top":false,"comment_ctime":1727419947,"is_pvip":false,"replies":[{"id":143267,"content":"通过大模型厂商的接口直接调用的。如果你在用coze dify这类工具，这些工具里你需要填入大模型厂商的给你的APIkey，这些key在登录模型厂商官网后台可以自主创建","user_name":"作者回复","user_name_real":"编辑","uid":3885064,"ctime":1727426641,"ip_address":"北京","comment_id":394645,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100819801,"comment_content":"rag 和 agent 在实际项目中，是怎么对接到大模型的呢？","like_count":0,"discussions":[{"author":{"id":3885064,"avatar":"https://static001.geekbang.org/account/avatar/00/3b/48/08/e18b1a00.jpg","nickname":"哄哄","note":"","ucode":"F66093BE6A2953","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":651795,"discussion_content":"通过大模型厂商的接口直接调用的。如果你在用coze dify这类工具，这些工具里你需要填入大模型厂商的给你的APIkey，这些key在登录模型厂商官网后台可以自主创建","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1727426642,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2,\"source\":0}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":394533,"user_name":"小虎子🐯","can_delete":false,"product_type":"c1","uid":2843479,"ip_address":"北京","ucode":"4C9530B3FB407B","user_header":"https://static001.geekbang.org/account/avatar/00/2b/63/57/cba4c68b.jpg","comment_is_top":false,"comment_ctime":1727081916,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":2,"product_id":100819801,"comment_content":"厉害厉害，老师讲得深入浅出，没有技术基础的小白也看懂啦","like_count":1},{"had_liked":false,"id":396638,"user_name":"姿态","can_delete":false,"product_type":"c1","uid":2367801,"ip_address":"上海","ucode":"089C8D187453AB","user_header":"https://static001.geekbang.org/account/avatar/00/24/21/39/cfc708ae.jpg","comment_is_top":false,"comment_ctime":1735177675,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":1,"score":3,"product_id":100819801,"comment_content":"老师讲的太好了，我个小白都看懂了。现在有个问题\nAi产品有必要让技术教一下怎么在代码环境测prompt吗？然后直接在代码里面调用模型API 测试效果，是不是和技术对接更方便点，还是说Ai产品一般都是直接在模型里面调prompt的","like_count":0},{"had_liked":false,"id":395315,"user_name":"kevin","can_delete":false,"product_type":"c1","uid":3920101,"ip_address":"广东","ucode":"19E83C631DF25E","user_header":"https://static001.geekbang.org/account/avatar/00/3b/d0/e5/0a3ee17c.jpg","comment_is_top":false,"comment_ctime":1730193139,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":3,"product_id":100819801,"comment_content":"## Role 情感标注人员\n## Goals 我给你的一些客户留言的句子，请你判断出每个句子中的情绪。请你只从以下选项中选择：\n1.正面：表达了肯定、喜欢、赞赏、褒扬\n2.负面：表达了否定、讨厌、贬低\n## few shots\n客户留言：Today at work there was a low flying duck heading toward a crowd of people, and I yelled &quot;watch out! and I&#39;m very disappointed with myself.情绪判断：正面.\n客户留言：@VerizonSupport all of a sudden I can&#39;t connect to my primary wireless network but guest one works.情绪判断：正面.\n客户留言：@nvidiacc I own two gtx 460 in sli. I want to try windows 8 dev preview. Which driver should I use. Can I use the windows 7 one.情绪判断：正面.\n客户留言：@ZARA_Care I&#39;ve been waiting on a reply to my tweets and DMs for days now?情绪判断：负面.\n##需要判断的语句\n@KristaMariePark Thank you for your interest! If you decide to cancel, you can call Customer Care at 1-800-NYTIMES.\nIf I can&#39;t get my 3rd pair of @beatsbydre powerbeats to work today I&#39;m doneski man. This is a slap in my balls. Your next @Bose @BoseService\n@EE On Rosneath Arial having good upload and download speeds but terrible latency 200ms. Why is this.\nCouples wallpaper, so cute. :) #BrothersAtHome\n@mckelldogs This might just be me, but-- eyedrops? Artificial tears are so useful when you&#39;re sleep-deprived and sp… https:&#47;&#47;t.co&#47;WRtNsokblG\n@Yelp can we get the exact calculations for a business rating (for example if its 4 stars but actually 4.2) or do we use a 3rd party site?\n@nationalgridus I have no water and the bill is current and paid. Can you do something about this?\nNever shopping at @MACcosmetics again. Every time I go in there, their employees are super rude&#47;condescending. I&#39;ll take my $$ to @Sephora\n\n\n","like_count":0}]}