{"id":648461,"title":"17 ｜ 让AI做决策，LangChain里的“中介”和“特工”","content":"<p>你好，我是徐文浩。</p><p>在<a href=\"https://time.geekbang.org/column/article/646363\">第 11 讲</a>里，我为你讲解了如何把各种资料的内容向量化，然后通过llama-index建立对应的索引，实现对我们自己的文本资料的问答。而在过去的3讲里面，我们又深入了解了如何使用Langchain。Langchain能够便于我们把AI对语言的理解和组织能力、外部各种资料或者SaaS的API，以及你自己撰写的代码整合到一起来。通过对这些能力的整合，我们就可以通过自然语言完成更加复杂的任务了，而不仅仅只是能闲聊。</p><p>不过，到目前为止。我们所有基于ChatGPT的应用，基本都是“单项技能”，比如前面关于“藤野先生”的问题，或者<a href=\"https://time.geekbang.org/column/article/648167\">上一讲</a>里查询最新的天气或者通过Python算算术。本质上都是限制AI只针对我们预先索引的数据，或者实时搜索的数据进行回答。</p><h2>支持多种单项能力，让AI做个选择题</h2><p>但是，如果我们真的想要做一个能跑在生产环境上的AI聊天机器人，我们需要的不只一个单项技能。它应该针对你自己的数据有很多个不同的“单项技能”，就拿我比较熟悉的电商领域来说，我们至少需要这样三个技能。</p><ol>\n<li>我们需要一个“导购咨询”的单项技能，能够查询自己商品库里的商品信息为用户做导购和推荐。</li>\n<li>然后需要一个“售中咨询”的单项技能，能够查询订单的物流轨迹，对买了东西还没有收到货的用户给出安抚和回复。</li>\n<li>最后还需要一个“FAQ”的单项技能，能够把整个电商网站的FAQ索引起来，当用户问到退货政策、运费、支付方式等问题的时候，我们可以从FAQ里面拿到对应的答案，回复给用户。</li>\n</ol><!-- [[[read_end]]] --><p>同时，对于这三个单项技能，AI要能够自己判断什么时候该用什么样的技能。而不是需要人工介入，或者写一堆if…else的代码。</p><p>在学习了这么多讲的内容之后，你可以先想想，你有没有什么办法可以通过ChatGPT做到这些呢？直接一次性提供三个“单项技能”，还要在三个单项技能之间选择合适的技能，的确不是靠简单的几行代码或者LLMChain能够解决的。</p><p>但是我们可以采用一个在写大型系统的时候常用的思路，就是“分而治之”。对于每一个单项技能，我们都可以通过之前几讲学习的内容，把它们变成一个LLMChain。然后，对于用户问的问题，我们不妨先问问AI，让它告诉我们应该选用哪一个LLMChain来回答问题好了。</p><p>我们在下面就写了这样一段代码，通过提示语让AI做一个选择题。</p><pre><code class=\"language-python\">import openai, os\n\nopenai.api_key = os.environ.get(\"OPENAI_API_KEY\")\n\nfrom langchain.prompts import PromptTemplate\nfrom langchain.llms import OpenAIChat\nfrom langchain.chains import LLMChain\n\nllm = OpenAIChat(max_tokens=2048, temperature=0.5)\nmultiple_choice = \"\"\"\n请针对 &gt;&gt;&gt; 和 &lt;&lt;&lt; 中间的用户问题，选择一个合适的工具去回答她的问题。只要用A、B、C的选项字母告诉我答案。\n如果你觉得都不合适，就选D。\n\n&gt;&gt;&gt;{question}&lt;&lt;&lt;\n\n我们有的工具包括：\nA. 一个能够查询商品信息，为用户进行商品导购的工具\nB. 一个能够查询订单信息，获得最新的订单情况的工具\nC. 一个能够搜索商家的退换货政策、运费、物流时长、支付渠道、覆盖国家的工具\nD. 都不合适\n\"\"\"\nmultiple_choice_prompt = PromptTemplate(template=multiple_choice, input_variables=[\"question\"])\nchoice_chain = LLMChain(llm=llm, prompt=multiple_choice_prompt, output_key=\"answer\")\n</code></pre><p>对应的，我们可以试试问不同的问题，看看它能不能选择一个正确的工具。</p><p>问题1：</p><pre><code class=\"language-python\">question = \"我想买一件衣服，但是不知道哪个款式好看，你能帮我推荐一下吗？\"\nprint(choice_chain(question))\n</code></pre><p>输出结果：</p><pre><code class=\"language-plain\">{'question': '我想买一件衣服，但是不知道哪个款式好看，你能帮我推荐一下吗？', 'answer': '\\n\\nA. 一个能够查询商品信息，为用户进行商品导购的工具。'}\n</code></pre><p>问题2：</p><pre><code class=\"language-python\">question = \"我有一张订单，订单号是 2022ABCDE，一直没有收到，能麻烦帮我查一下吗？\"\nprint(choice_chain(question)) \n</code></pre><p>输出结果：</p><pre><code class=\"language-plain\">{'question': '我有一张订单，订单号是 2022ABCDE，一直没有收到，能麻烦帮我查一下吗？', 'answer': '\\n\\nB. 一个能够查询订单信息，获得最新的订单情况的工具。'}\n</code></pre><p>问题3：</p><pre><code class=\"language-python\">question = \"请问你们的货，能送到三亚吗？大概需要几天？\"\nprint(choice_chain(question))\n</code></pre><p>输出结果：</p><pre><code class=\"language-plain\">{'question': '请问你们的货，能送到三亚吗？大概需要几天？', 'answer': '\\n\\nC. 一个能够搜索商家的退换货政策、运费、物流时长、支付渠道、覆盖国家的工具。'}\n</code></pre><p>问题4：</p><pre><code class=\"language-python\">question = \"今天天气怎么样？\"\nprint(choice_chain(question))\n</code></pre><p>输出结果：</p><pre><code class=\"language-plain\">{'question': '今天天气怎么样？', 'answer': '\\n\\nD. 都不合适，因为这个问题需要的是天气预报信息，我们需要提供一个天气预报查询工具或者引导用户去查看天气预报网站或应用程序。'}\n</code></pre><p>可以看到，我们试了四个问题，ChatGPT都给出了正确的答案。在拿到答案之后，你可以直接再通过一个TransformChain，去匹配返回结果的前缀，看看是A、B、C、D中的哪一个，再来决定后面可以去调用哪个LLMChain。</p><h2>Langchain里面的中介与特工：Agent</h2><p>这样一个“分治法”的思路，你在真实的业务场景中一定会遇到的。无论是哪行哪业的客服聊天机器人，其实都会有能够直接通过资料库就回答的用户问题，也会有和用户自己或者公司产品相关的信息，需要通过检索的方式来提供。所以，这样一个“先做一个选择题”的思路，Langchain就把它发扬光大了，建立起了Agent这个抽象概念。</p><p>Agent翻译成中文，有两个意思。一个叫做代理人，比如在美国你买房子、租房子，都要通过Real Estate Agent，也就是“房产代理”，其实就是我们这里说的“中介”。另一个意思，叫做“特工”，这是指Agent是有自主行动能力的，它可以根据你提出的要求，直接使用提供的工具采取行动。它不只是做完选择题就完事儿了，而是直接拿起选中的工具进行下一步的行动。Langchain的Agent其实这两个意思都包含，可以说名字取得是非常得当了。</p><p>下面我们来看看上面这个例子，我们怎么通过Langchain提供的Agent直接采取行动来解决问题。</p><pre><code class=\"language-python\">from langchain.agents import initialize_agent, Tool\nfrom langchain.llms import OpenAI\n\nllm = OpenAI(temperature=0)\n\ndef search_order(input: str) -&gt; str:\n    return \"订单状态：已发货；发货日期：2023-01-01；预计送达时间：2023-01-10\"\n\ndef recommend_product(input: str) -&gt; str:\n    return \"红色连衣裙\"\n\ndef faq(intput: str) -&gt; str:\n    return \"7天无理由退货\"\n\ntools = [\n    Tool(\n        name = \"Search Order\",func=search_order, \n        description=\"useful for when you need to answer questions about customers orders\"\n    ),\n    Tool(name=\"Recommend Product\", func=recommend_product, \n         description=\"useful for when you need to answer questions about product recommendations\"\n    ),\n    Tool(name=\"FAQ\", func=faq,\n         description=\"useful for when you need to answer questions about shopping policies, like return policy, shipping policy, etc.\"\n    )\n]\n\nagent = initialize_agent(tools, llm, agent=\"zero-shot-react-description\", verbose=True)\n</code></pre><p>这段代码由三个部分组成。</p><ol>\n<li>首先，我们定义了三个函数，分别叫做search_order、recommend_product 以及 faq。它们的输入都是一个字符串，输出是我们写好的对于问题的回答。</li>\n<li>然后，我们针对这三个函数，创建了一个Tool对象的数组，把这三个函数分别封装在了三个Tool对象里面。每一个Tool的对象，在函数之外，还定义了一个名字，并且定义了Tool的description。这个description就是告诉AI，这个Tool是干什么用的。就像这一讲一开始的那个例子一样，AI会根据问题以及这些描述来做选择题。</li>\n<li>最后，我们创建了一个agent对象，指定它会用哪些Tools、LLM对象以及agent的类型。在agent的类型这里，我们选择了zero-shot-react-description。这里的zero-shot就是指我们在课程一开始就讲过的“零样本分类”，也就是不给AI任何例子，直接让它根据自己的推理能力来做决策。而react description，指的是根据你对于Tool的描述（description）进行推理（Reasoning）并采取行动（Action）。</li>\n</ol><p>这里的这个ReAct，并不是来自Facebook的前端框架的名字，而是来自一篇Google Brain的论文 <a href=\"https://ai.googleblog.com/2022/11/react-synergizing-reasoning-and-acting.html\">ReAct: Synergizing Reasoning and Acting in Language Models</a>。有兴趣的话，你可以去阅读一下，了解具体的原理和思路。</p><p>在有了这个agent之后，我们不妨尝试一下，直接对着这个Agent，来重新问一遍刚才的三个问题。</p><p>问题1：</p><pre><code class=\"language-python\">question = \"我想买一件衣服，但是不知道哪个款式好看，你能帮我推荐一下吗？\"\nresult = agent.run(question)\nprint(result)\n</code></pre><p>输出结果：</p><pre><code class=\"language-plain\">&gt; Entering new AgentExecutor chain...\n I need to recommend a product.\nAction: Recommend Product\nAction Input: Clothes\nObservation: 红色连衣裙\nThought: I now know the final answer.\nFinal Answer: 我推荐红色连衣裙。\n</code></pre><p>问题2：</p><pre><code class=\"language-plain\">question = \"我有一张订单，订单号是 2022ABCDE，一直没有收到，能麻烦帮我查一下吗？\"\nresult = agent.run(question)\nprint(result)\n</code></pre><p>输出结果：</p><pre><code class=\"language-plain\">&gt; Entering new AgentExecutor chain...\n I need to find out the status of the order\nAction: Search Order\nAction Input: 2022ABCDE\nObservation: 订单状态：已发货；发货日期：2023-01-01；预计送达时间：2023-01-10\nThought: I now know the final answer\nFinal Answer: 您的订单 2022ABCDE 已发货，预计将于2023-01-10送达。\n&gt; Finished chain.\n您的订单 2022ABCDE 已发货，预计将于2023-01-10送达。\n</code></pre><p>问题3:</p><pre><code class=\"language-plain\">question = \"请问你们的货，能送到三亚吗？大概需要几天？\"\nresult = agent.run(question)\nprint(result)\n</code></pre><p>输出结果：</p><pre><code class=\"language-python\">\n&gt; Entering new AgentExecutor chain...\n I need to find out the shipping policy and delivery time\nAction: FAQ\nAction Input: Shipping policy and delivery time\nObservation: 7天无理由退货\nThought: I need to find out the delivery time\nAction: FAQ\nAction Input: Delivery time\nObservation: 7天无理由退货\nThought: I need to find out if we can deliver to Sanya\nAction: FAQ\nAction Input: Delivery to Sanya\nObservation: 7天无理由退货\nThought: I now know the final answer\nFinal Answer: 我们可以把货送到三亚，大概需要7天。\n&gt; Finished chain.\n我们可以把货送到三亚，大概需要7天。\n</code></pre><p>因为在代码里面，我们把Agent的Verbose模式打开了，所以在输出结果里面，你可以直接看到Agent整个思考的日志。从这里，你会发现几个有意思的现象。</p><p>第一个，是Agent每一步的操作，可以分成5个步骤，分别是Action、Action Input、Observation、Thought，最后输出一个Final Answer。</p><ol>\n<li>Action，就是根据用户的输入，选择应该选取哪一个Tool，然后行动。</li>\n<li>Action Input，就是根据需要使用的Tool，从用户的输入里提取出相关的内容，可以输入到Tool里面。</li>\n<li>Oberservation，就是观察通过使用Tool得到的一个输出结果。</li>\n<li>Thought，就是再看一眼用户的输入，判断一下该怎么做。</li>\n<li>Final Answer，就是Thought在看到Obersavation之后，给出的最终输出。</li>\n</ol><p>第二个，就是我们最后那个“货需要几天送到三亚”的问题，没有遵循上面的5个步骤，而是在第4步Thought之后，重新回到了Action。并且在这样反复三次之后，才不得已强行回答了问题。但是给出的答案，其实并不一定准确，因为我们的回答里面并没有说能不能送到三亚。</p><p>这一整个过程，其实也是通过一段Prompt来实现的，你可以去看一下Langchain源码里，<a href=\"https://github.com/hwchase17/langchain/blob/master/langchain/agents/mrkl/prompt.py\">mrkl 对应的 Prompt 的源代码</a>。</p><pre><code class=\"language-python\"># flake8: noqa\nPREFIX = \"\"\"Answer the following questions as best you can. You have access to the following tools:\"\"\"\nFORMAT_INSTRUCTIONS = \"\"\"Use the following format:\n\t\nQuestion: the input question you must answer\nThought: you should always think about what to do\nAction: the action to take, should be one of [{tool_names}]\nAction Input: the input to the action\nObservation: the result of the action\n... (this Thought/Action/Action Input/Observation can repeat N times)\nThought: I now know the final answer\nFinal Answer: the final answer to the original input question\"\"\"\nSUFFIX = \"\"\"Begin!\n\t\nQuestion: {input}\nThought:{agent_scratchpad}\"\"\"\n</code></pre><p>其实它就是把一系列的工具名称和对应的描述交给了OpenAI，让它根据用户输入的需求，选取对应的工具，然后提取用户输入中和用户相关的信息。本质上，只是我们上面让AI做选择题的一种扩展而已。</p><h3>通过max_iterations限制重试次数</h3><p>前面这个反复思考3次，其实是Agent本身的功能。因为实际很多逻辑处理，现在都是通过AI的大语言模型这个黑盒子自动进行的，有时候也不一定准。所以AI会在Thought的时候，看一下回答得是否靠谱，如果不靠谱的话，它会想一个办法重试。如果你希望AI不要不断重试，也不要强行回答，在觉得不靠谱的时候，试个一两次就停下来。那么，你在创建Agent的时候，设置 max_iterations 这个参数就好了。下面我们就把参数设置成2，看看效果会是怎么样的。</p><pre><code class=\"language-python\">agent = initialize_agent(tools, llm, agent=\"zero-shot-react-description\", max_iterations = 2, verbose=True)\nquestion = \"请问你们的货，能送到三亚吗？大概需要几天？\"\nresult = agent.run(question)\nprint(\"===\")\nprint(result)\nprint(\"===\")\n</code></pre><p>输出结果：</p><pre><code class=\"language-plain\">&gt; Entering new AgentExecutor chain...\n I need to find out the shipping policy\nAction: FAQ\nAction Input: Shipping policy\nObservation: 7天无理由退货\nThought: I need to find out the shipping time\nAction: FAQ\nAction Input: Shipping time\nObservation: 7天无理由退货\nThought:\n&gt; Finished chain.\n===\nAgent stopped due to max iterations.\n===\n</code></pre><p>可以看到，这个时候，AI重试了两次就不再重试。并且，也没有强行给出一个回答，而是告诉你，Agent因为max iterations的设置而中止了。这样，你可以把AI回答不上来的问题，切换给人工客服回答。</p><h3>通过VectorDBQA让Tool支持问答</h3><p>当然，这么简单的问题我们完全可以让AI答上来。现在答不上来的原因是无论我们问什么问题，FQA这个工具的回答都是7天无理由退货。而正确的方式其实也有，我们可以直接使用<a href=\"https://time.geekbang.org/column/article/647827\">第 15 讲</a>介绍的VectorDBQA这个LLMChain，把它也封装成一个Tool。</p><p>我们先把<a href=\"https://time.geekbang.org/column/article/647827\">第 15 讲</a>对应的代码搬运过来。</p><pre><code class=\"language-python\">from langchain.embeddings.openai import OpenAIEmbeddings\nfrom langchain.vectorstores import FAISS\nfrom langchain.text_splitter import SpacyTextSplitter\nfrom langchain import OpenAI, VectorDBQA\nfrom langchain.document_loaders import TextLoader\n\nllm = OpenAI(temperature=0)\nloader = TextLoader('./data/ecommerce_faq.txt')\ndocuments = loader.load()\ntext_splitter = SpacyTextSplitter(chunk_size=256, pipeline=\"zh_core_web_sm\")\ntexts = text_splitter.split_documents(documents)\n\nembeddings = OpenAIEmbeddings()\ndocsearch = FAISS.from_documents(texts, embeddings)\n\nfaq_chain = VectorDBQA.from_chain_type(llm=llm, vectorstore=docsearch, verbose=True)\n</code></pre><p>然后，把这LLMChain的run方法包装到一个Tool里面。</p><pre><code class=\"language-python\">from langchain.agents import tool\n\n@tool(\"FAQ\")\ndef faq(intput: str) -&gt; str:\n    \"\"\"\"useful for when you need to answer questions about shopping policies, like return policy, shipping policy, etc.\"\"\"\n    return faq_chain.run(intput)\n\ntools = [\n    Tool(\n        name = \"Search Order\",func=search_order, \n        description=\"useful for when you need to answer questions about customers orders\"\n    ),\n    Tool(name=\"Recommend Product\", func=recommend_product, \n         description=\"useful for when you need to answer questions about product recommendations\"\n    ),\n    faq\n]\n\nagent = initialize_agent(tools, llm, agent=\"zero-shot-react-description\", verbose=True)\n</code></pre><p>这里，我们对Tool的写法做了一些小小的改变，使得代码更加容易维护了。我们通过@tool 这个Python的decorator功能，将FAQ这个函数直接变成了Tool对象，这可以减少我们每次创建 Tools的时候都要指定name和description的工作。</p><p>接着，我们再通过Agent来运行一下刚才的问题，一样能够得到正确的答案。</p><pre><code class=\"language-python\">question = \"请问你们的货，能送到三亚吗？大概需要几天？\"\nresult = agent.run(question)\nprint(result)\n</code></pre><p>输出结果：</p><pre><code class=\"language-python\">&gt; Entering new AgentExecutor chain...\n I need to find out the shipping policy and delivery time.\nAction: FAQ\nAction Input: shipping policy and delivery time\n&gt; Entering new VectorDBQA chain...\n&gt; Finished chain.\nObservation:  一般情况下，大部分城市的订单在2-3个工作日内送达，偏远地区可能需要5-7个工作日。具体送货时间可能因订单商品、配送地址和物流公司而异。\nThought: I now know the final answer.\nFinal Answer: 一般情况下，大部分城市的订单在2-3个工作日内送达，偏远地区可能需要5-7个工作日。具体送货时间可能因订单商品、配送地址和物流公司而异。\n&gt; Finished chain.\n一般情况下，大部分城市的订单在2-3个工作日内送达，偏远地区可能需要5-7个工作日。具体送货时间可能因订单商品、配送地址和物流公司而异。\n</code></pre><p>对于商品的推荐，我们可以如法炮制，也把对应的商品信息，存到VectorStore里，然后通过<strong>先搜索后问答</strong>的方式来解决。对应的数据同样由ChatGPT出品，代码和上面的FAQ基本类似，我就不再一一重复了。</p><p>重新构建Agent：</p><pre><code class=\"language-python\">from langchain.text_splitter import CharacterTextSplitter\nfrom langchain.document_loaders import CSVLoader\n\nproduct_loader = CSVLoader('./data/ecommerce_products.csv')\nproduct_documents = product_loader.load()\nproduct_text_splitter = CharacterTextSplitter(chunk_size=1024, separator=\"\\n\")\nproduct_texts = product_text_splitter.split_documents(product_documents)\nproduct_search = FAISS.from_documents(product_texts, OpenAIEmbeddings())\nproduct_chain = VectorDBQA.from_chain_type(llm=llm, vectorstore=product_search, verbose=True)\n\n@tool(\"FAQ\")\ndef faq(intput: str) -&gt; str:\n    \"\"\"\"useful for when you need to answer questions about shopping policies, like return policy, shipping policy, etc.\"\"\"\n    return faq_chain.run(intput)\n\n@tool(\"Recommend Product\")\ndef recommend_product(input: str) -&gt; str:\n    \"\"\"\"useful for when you need to search and recommend products and recommend it to the user\"\"\"\n    return product_chain.run(input)\n\ntools = [\n    Tool(\n        name = \"Search Order\",func=search_order, \n        description=\"useful for when you need to answer questions about customers orders\"\n    ),\n    recommend_product, faq]\n\nagent = initialize_agent(tools, llm, agent=\"zero-shot-react-description\", verbose=True)\n\n</code></pre><p>询问Agent问题：</p><pre><code class=\"language-python\">question = \"我想买一件衣服，想要在春天去公园穿，但是不知道哪个款式好看，你能帮我推荐一下吗？\"\nanswer = agent.run(question)\nprint(answer)\n</code></pre><p>输出结果：</p><pre><code class=\"language-python\">&gt; Entering new AgentExecutor chain...\n I need to recommend a product to the user.\nAction: Recommend Product\nAction Input: Clothing for park in spring\n&gt; Entering new VectorDBQA chain...\n&gt; Finished chain.\nObservation:  休闲、简约风格的长款风衣，休闲、运动风格的长款卫衣，清新、甜美风格的长袖连衣裙都可以在春天去公园穿着。\nThought: I now know the final answer.\nFinal Answer: 休闲、简约风格的长款风衣，休闲、运动风格的长款卫衣，清新、甜美风格的长袖连衣裙都可以在春天去公园穿着。\n&gt; Finished chain.\n休闲、简约风格的长款风衣，休闲、运动风格的长款卫衣，清新、甜美风格的长袖连衣裙都可以在春天去公园穿着。\n</code></pre><h3>优化Prompt，让AI不要胡思乱想</h3><p>对于订单查询，使用向量检索就不太合适了，我们直接拿着订单号去数据库里查就好了。不过我们不是一个Python编程课，我就不为你演示怎么用Python写SQL了。我们偷个懒，就在对应的函数里造几条数据，根据用户输入的订单号不同，就返回不同的订单状态，找不到的话，就告诉用户找不到订单就好。</p><pre><code class=\"language-python\">import json\n\nORDER_1 = \"20230101ABC\"\nORDER_2 = \"20230101EFG\"\n\nORDER_1_DETAIL = {\n    \"order_number\": ORDER_1,\n    \"status\": \"已发货\",\n    \"shipping_date\" : \"2023-01-03\",\n    \"estimated_delivered_date\": \"2023-01-05\",\n} \n\nORDER_2_DETAIL = {\n    \"order_number\": ORDER_2,\n    \"status\": \"未发货\",\n    \"shipping_date\" : None,\n    \"estimated_delivered_date\": None,\n}\n\nimport re\n\n@tool(\"Search Order\")\ndef search_order(input:str)-&gt;str:\n    \"\"\"useful for when you need to answer questions about customers orders\"\"\"\n    if input.strip() == ORDER_1:\n        return json.dumps(ORDER_1_DETAIL)\n    elif input.strip() == ORDER_2:\n        return json.dumps(ORDER_2_DETAIL)\n    else:\n        return f\"对不起，根据{input}没有找到您的订单\"\n\ntools = [search_order,recommend_product, faq]\nagent = initialize_agent(tools, llm=OpenAI(temperature=0), agent=\"zero-shot-react-description\", verbose=True)\n</code></pre><p>然后，我们就可以试着来让Agent帮我们查一下订单号。</p><pre><code class=\"language-python\">question = \"我有一张订单，订单号是 2022ABCDE，一直没有收到，能麻烦帮我查一下吗？\"\nanswer = agent.run(question)\nprint(answer)\n</code></pre><p>输出结果：</p><pre><code class=\"language-plain\">\n&gt; Entering new AgentExecutor chain...\n I need to find out the status of the order.\nAction: Search Order\nAction Input: 2022ABCDE\nObservation: 对不起，根据2022ABCDE没有找到您的订单\nThought: I need to find out more information about the order.\nAction: Search Order\nAction Input: 2022ABCDE\nObservation: 对不起，根据2022ABCDE没有找到您的订单\nThought: I need to contact customer service for more information.\nAction: FAQ\nAction Input: 订单查询\n&gt; Entering new VectorDBQA chain...\n&gt; Finished chain.\nObservation: 要查询订单，请登录您的帐户，然后点击“我的订单”页面。在此页面上，您可以查看所有订单及其当前状态。如果您没有帐户，请使用订单确认电子邮件中的链接创建一个帐户。如果您有任何问题，请联系客服。\nThought: I now know the final answer.\nFinal Answer: 要查询订单，请登录您的帐户，然后点击“我的订单”页面。在此页面上，您可以查看所有订单及其当前状态。如果您没有帐户，请使用订单确认电子邮件中的链接创建一个帐户。如果您有任何问题，请联系客服。\n&gt; Finished chain.\n要查询订单，请登录您的帐户，然后点击“我的订单”页面。在此页面上，您可以查看所有订单及其当前状态。如果您没有帐户，请使用订单确认电子邮件中的链接创建一个帐户。如果您有任何问题，请联系客服。\n</code></pre><p>结果稍稍让人有些意外，我们输入了一个不存在的订单号，我们原本期望，AI能够告诉我们订单号找不到。但是，它却是在发现回复是找不到订单的时候，重复调用OpenAI的思考策略，并最终尝试从FAQ里拿一个查询订单的问题来敷衍用户。这并不是我们想要的，这也是以前很多“人工智障”类型的智能客服常常会遇到的问题，所以我们还是想个办法解决它。</p><p>解决的方法也不复杂，我们只需要调整一下search_order这个Tool的提示语。通过这个提示语，Agent会知道，这个工具就应该在找不到订单的时候，告诉用户找不到订单或者请它再次确认。这个时候，它就会根据这个答案去回复用户。下面是对应修改运行后的结果。</p><pre><code class=\"language-plain\">import re\n\n@tool(\"Search Order\")\ndef search_order(input:str)-&gt;str:\n    \"\"\"一个帮助用户查询最新订单状态的工具，并且能处理以下情况：\n    1. 在用户没有输入订单号的时候，会询问用户订单号\n    2. 在用户输入的订单号查询不到的时候，会让用户二次确认订单号是否正确\"\"\"\n    pattern = r\"\\d+[A-Z]+\"\n    match = re.search(pattern, input)\n\n    order_number = input\n    if match:\n        order_number = match.group(0)\n    else:\n        return \"请问您的订单号是多少？\"\n    if order_number == ORDER_1:\n        return json.dumps(ORDER_1_DETAIL)\n    elif order_number == ORDER_2:\n        return json.dumps(ORDER_2_DETAIL)\n    else:\n        return f\"对不起，根据{input}没有找到您的订单\"\n\ntools = [search_order,recommend_product, faq]\nagent = initialize_agent(tools, llm=OpenAI(temperature=0), agent=\"zero-shot-react-description\", verbose=True)\n\nquestion = \"我有一张订单，订单号是 2022ABCDE，一直没有收到，能麻烦帮我查一下吗？\"\nanswer = agent.run(question)\nprint(answer)\n</code></pre><p>输出结果：</p><pre><code class=\"language-plain\">&gt; Entering new AgentExecutor chain...\n 我需要查询订单状态\nAction: Search Order\nAction Input: 2022ABCDE\nObservation: 对不起，根据2022ABCDE没有找到您的订单\nThought: 我需要再次确认订单号是否正确\nAction: Search Order\nAction Input: 2022ABCDE\nObservation: 对不起，根据2022ABCDE没有找到您的订单\nThought: 我现在知道最终答案\nFinal Answer: 对不起，根据您输入的订单号2022ABCDE没有找到您的订单，请您再次确认订单号是否正确。\n&gt; Finished chain.\n对不起，根据您输入的订单号2022ABCDE没有找到您的订单，请您再次确认订单号是否正确。\n</code></pre><h3>通过多轮对话实现订单查询</h3><p>看起来，我们的客服聊天机器人已经搞定了。但是，其实我们还有几个可以优化的空间。</p><ol>\n<li>我们应该支持多轮聊天。因为用户不一定是在第一轮提问的时候，就给出了自己的订单号。</li>\n<li>我们其实可以直接让Search Order这个Tool，回答用户的问题，没有必要再让Agent思考一遍。</li>\n</ol><p>那我们就把代码再改造一下。</p><pre><code class=\"language-python\">import re\n\nanswer_order_info = PromptTemplate(\n    template=\"请把下面的订单信息回复给用户： \\n\\n {order}?\", input_variables=[\"order\"]\n)\nanswer_order_llm = LLMChain(llm=ChatOpenAI(temperature=0),  prompt=answer_order_info)\n\n@tool(\"Search Order\", return_direct=True)\ndef search_order(input:str)-&gt;str:\n    \"\"\"useful for when you need to answer questions about customers orders\"\"\"\n    pattern = r\"\\d+[A-Z]+\"\n    match = re.search(pattern, input)\n\n    order_number = input\n    if match:\n        order_number = match.group(0)\n    else:\n        return \"请问您的订单号是多少？\"\n    if order_number == ORDER_1:        \n        return answer_order_llm.run(json.dumps(ORDER_1_DETAIL))\n    elif order_number == ORDER_2:\n        return answer_order_llm.run(json.dumps(ORDER_2_DETAIL))\n    else:\n        return f\"对不起，根据{input}没有找到您的订单\"\n\nfrom langchain.memory import ConversationBufferMemory\nfrom langchain.chat_models import ChatOpenAI\n\ntools = [search_order,recommend_product, faq]\nchatllm=ChatOpenAI(temperature=0)\nmemory = ConversationBufferMemory(memory_key=\"chat_history\", return_messages=True)\nconversation_agent = initialize_agent(tools, chatllm, \n                                      agent=\"conversational-react-description\", \n                                      memory=memory, verbose=True)\n</code></pre><p>第一个改造还是在Search Order这个工具上的。首先，我们给这个Tool设置了一个参数，叫做 return_direct = True，这个参数是告诉AI，在拿到这个工具的回复之后，不要再经过Thought那一步思考，直接把我们的回答给到用户就好了。设了这个参数之后，你就会发现AI不会在没有得到一个订单号的时候继续去反复思考，尝试使用工具，而是会直接去询问用户的订单号。</p><p>伴随着这个修改，对于查询到的订单号，我们就不能直接返回一个JSON字符串了，而是通过answer_order_llm这个工具来组织语言文字。</p><p>第二个改造是我们使用的Agent，我们把Agent换成了converstional-react-description。这样我们就支持多轮对话了，同时我们也把对应的LLM换成了ChatOpenAI，这样成本更低。并且，我们还需要为这个Agent设置一下memory。</p><p>改造好之后，我们不妨来看看，这个AI现在是不是终于智能一点了。</p><p>问题1：</p><pre><code class=\"language-python\">question1 = \"我有一张订单，一直没有收到，能麻烦帮我查一下吗？\"\nanswer1 = conversation_agent.run(question1)\nprint(answer1)\n</code></pre><p>回答1：</p><pre><code class=\"language-python\">&gt; Entering new AgentExecutor chain...\nThought: Do I need to use a tool? Yes\nAction: Search Order\nAction Input: 我有一张订单，一直没有收到，能麻烦帮我查一下吗？\nObservation: 请问您的订单号是多少？\n\n&gt; Finished chain.\n请问您的订单号是多少？\n</code></pre><p>问题2：</p><pre><code class=\"language-python\">question2 = \"我的订单号是20230101ABC\"\nanswer2 = conversation_agent.run(question2)\nprint(answer2)\n</code></pre><p>回答2：</p><pre><code class=\"language-python\">&gt; Entering new AgentExecutor chain...\nThought: Do I need to use a tool? Yes\nAction: Search Order\nAction Input: 20230101ABC\nObservation: \n尊敬的用户，您的订单信息如下：\n订单号：20230101ABC\n订单状态：已发货\n发货日期：2023年1月3日\n预计送达日期：2023年1月5日\n如有任何疑问，请随时联系我们。感谢您的购买！\n\n&gt; Finished chain.\n\n尊敬的用户，您的订单信息如下：\n订单号：20230101ABC\n订单状态：已发货\n发货日期：2023年1月3日\n预计送达日期：2023年1月5日\n如有任何疑问，请随时联系我们。感谢您的购买！\n</code></pre><p>问题3:</p><pre><code class=\"language-python\">question3 = \"你们的退货政策是怎么样的？\"\nanswer3 = conversation_agent.run(question3)\nprint(answer3)\n</code></pre><p>回答3:</p><pre><code class=\"language-python\">&gt; Entering new AgentExecutor chain...\nThought: Do I need to use a tool? Yes\nAction: FAQ\nAction Input: 退货政策\n&gt; Entering new VectorDBQA chain...\n&gt; Finished chain.\nObservation: 自收到商品之日起7天内，如产品未使用、包装完好，您可以申请退货。某些特殊商品可能不支持退货，请在购买前查看商品详情页面的退货政策。\nThought:Do I need to use a tool? No\nAI: Our return policy allows for returns within 7 days of receiving the product, as long as the product is unused and in its original packaging. Some special products may not be eligible for returns, so please check the product details page before purchasing.\n&gt; Finished chain.\nOur return policy allows for returns within 7 days of receiving the product, as long as the product is unused and in its original packaging. Some special products may not be eligible for returns, so please check the product details page before purchasing.\n</code></pre><p>可以看到AI能够在多轮对话里面，明白用户的意思，给出合理的答案。不过，最后一个问题它是用英文回答的，那怎么让它用中文来回答呢？这个问题就作为这一节课的思考题留给你啦！</p><p>好了，现在你已经有了一个有基本功能的电商客服聊天机器人了。你只需要在现有的这个代码上做一些改造，将自己的数据源导入进去，就可以拿真实的用户问题去试一试，看看效果怎么样了。</p><h2>小结</h2><p>今天，我为你介绍了Langchain的Agent的基本功能。通过“先让AI做个选择题”的方式，Langchain让AI自动为我们选择合适的Tool去调用。<strong>我们可以把回答不同类型问题的LLMChain封装成不同的Tool，也可以直接让Tool去调用内部查询订单状态的功能</strong>。我也为你实际演示了将Agent、Memory、VectorStore、LLMChain组合在一起的过程，创建了一个有完整电商客服功能的聊天机器人。</p><p>我们对于Langchain的介绍也就告一段落了。作为大语言模型领域目前最火的一个开源项目，Langchain有非常丰富的功能。我这里介绍的也只是它的核心功能，它支持丰富的Tool、不同类型的VectorStore和内置的其他LLMChain，都等待你自己去<a href=\"https://langchain.readthedocs.io/en/latest/\">它的文档</a>里发掘了。</p><h2>思考题</h2><ol>\n<li>在这一讲的最后，我们的例子里，AI用英文回答了中文的FAQ问题，你能够尝试修改一下现在的代码，让AI用中文回复吗？</li>\n<li>上一讲里，我们介绍了EntityMemory，但是在这一讲里我们并没有通过EntityMemory获取并查询订单信息。你能研究一下 Langchain 的文档，思考一下如果我们想要使用EntityMemory的话，应该怎么做吗？</li>\n</ol><p>欢迎你把思考后的结果分享到评论区，也欢迎你把这一讲分享给感兴趣的朋友，我们下一讲再见！</p><h2>推荐阅读</h2><p>Langchain里面的zero-shot-react-description这个想法，来自一个知名的AI创业公司AI21 Labs的<a href=\"https://arxiv.org/pdf/2205.00445.pdf\">论文 MRKL Systems</a>。你有兴趣的话，可以去阅读一下。</p>","comments":[{"had_liked":false,"id":372658,"user_name":"孟健","can_delete":false,"product_type":"c1","uid":1373593,"ip_address":"广东","ucode":"E20ECD1823E877","user_header":"https://static001.geekbang.org/account/avatar/00/14/f5/99/5bf198e3.jpg","comment_is_top":false,"comment_ctime":1681424678,"is_pvip":false,"replies":[{"id":136118,"content":"对，其实都是和 ReAct 以及 MRKL 这两片论文的思路一脉相承的。其实看过点Langchain源码看那个基本上立刻就能想明白那个可以怎么做到。","user_name":"作者回复","user_name_real":"编辑","uid":1053568,"ctime":1681614665,"ip_address":"上海","comment_id":372658,"utype":1}],"discussion_count":3,"race_medal":0,"score":2,"product_id":100541001,"comment_content":"最近的autogpt，agentgpt是不是都是这个思路","like_count":8,"discussions":[{"author":{"id":1053568,"avatar":"https://static001.geekbang.org/account/avatar/00/10/13/80/8de66543.jpg","nickname":"徐文浩","note":"","ucode":"1D39AC564172E9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":613967,"discussion_content":"对，其实都是和 ReAct 以及 MRKL 这两片论文的思路一脉相承的。其实看过点Langchain源码看那个基本上立刻就能想明白那个可以怎么做到。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1681614665,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"上海","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2015537,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/c1/31/e991c364.jpg","nickname":"魔法海","note":"","ucode":"ACC78501A9980F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":613633,"discussion_content":"是的，只不过autogpt预设好了工具，prompt写的更好，不断循环去优化前面的回答，本质就是利用gpt不断地在chain上决策输出的过程","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1681436324,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"上海","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1520703,"avatar":"https://static001.geekbang.org/account/avatar/00/17/34/3f/4b6cd370.jpg","nickname":"Viktor","note":"","ucode":"DCAFD1DD5C6A0C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":613627,"discussion_content":"同问","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1681435094,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"四川","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":372718,"user_name":"一叶","can_delete":false,"product_type":"c1","uid":3577168,"ip_address":"福建","ucode":"21E5455D0814E5","user_header":"https://static001.geekbang.org/account/avatar/00/36/95/50/01199ae9.jpg","comment_is_top":false,"comment_ctime":1681466727,"is_pvip":false,"replies":[{"id":136097,"content":"👍，我其实就是想要大家\n1. 理解这件事情是通过Prompt来解决\n2. 去看一下Langchain的文档，看看怎么根据自己的需要修改Prompt","user_name":"作者回复","user_name_real":"编辑","uid":1053568,"ctime":1681613551,"ip_address":"上海","comment_id":372718,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100541001,"comment_content":"老师,这是我让让用中文回答的代码,你看下这样对不对? 或是说还有更加简单的方法?\n\n\n```python\nfrom langchain import LLMChain\nfrom langchain.agents import Tool, AgentExecutor, ZeroShotAgent\nimport os\n\n\nfrom langchain.chat_models import ChatOpenAI\n\n\ndef search_order(input: str) -&gt; str:\n    return &quot;订单状态：已发货；发货日期：2023-01-01；预计送达时间：2023-01-10&quot;\n\n\ndef recommend_product(input: str) -&gt; str:\n    return &quot;红色连衣裙&quot;\n\n\ndef faq(intput: str) -&gt; str:\n    return &quot;7天无理由退货&quot;\n\n\ntools = [\n    Tool(\n        name=&quot;Search Order&quot;, func=search_order,\n        description=&quot;useful for when you need to answer questions about customers orders&quot;  # 当您需要回答有关客户订单的问题时很有用\n    ),\n    Tool(name=&quot;Recommend Product&quot;, func=recommend_product,\n         description=&quot;useful for when you need to answer questions about product recommendations&quot;  # 你需要回答关于产品推荐的问题时很有用\n         ),\n    Tool(name=&quot;FAQ&quot;, func=faq,\n         description=&quot;useful for when you need to answer questions about shopping policies, like return policy, shipping policy, etc.&quot;\n         # 当您需要回答关于购物政策的问题时，例如退货政策、运输政策等，这将非常有用。\n         )\n]\n\nPREFIX = &quot;&quot;&quot;Answer the following questions as best you can. You have access to the following tools: (所有的回答都用中文返回)&quot;&quot;&quot;\n\nprompt_ = ZeroShotAgent.create_prompt(\n    tools,\n    prefix=PREFIX,\n    input_variables=[&quot;input&quot;, &quot;agent_scratchpad&quot;]\n)\n\nllm_chain = LLMChain(llm=ChatOpenAI(temperature=0), prompt=prompt_)\nagent = ZeroShotAgent(llm_chain=llm_chain, tools=tools, verbose=True)\n\nagent_chain = AgentExecutor.from_agent_and_tools(agent=agent, tools=tools, verbose=True)\nresult = agent_chain.run(&quot;我有一张订单，订单号是 2022ABCDE，一直没有收到，能麻烦帮我查一下吗？&quot;)\nprint(result)\n```\n","like_count":5,"discussions":[{"author":{"id":1053568,"avatar":"https://static001.geekbang.org/account/avatar/00/10/13/80/8de66543.jpg","nickname":"徐文浩","note":"","ucode":"1D39AC564172E9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":613938,"discussion_content":"👍，我其实就是想要大家\n1. 理解这件事情是通过Prompt来解决\n2. 去看一下Langchain的文档，看看怎么根据自己的需要修改Prompt","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1681613551,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"上海","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":373810,"user_name":"Leo","can_delete":false,"product_type":"c1","uid":1046404,"ip_address":"浙江","ucode":"30D61E85A98C45","user_header":"https://static001.geekbang.org/account/avatar/00/0f/f7/84/1c56c8a5.jpg","comment_is_top":false,"comment_ctime":1683191845,"is_pvip":false,"replies":[{"id":136823,"content":"1. 这个肯定不适合用embedding，简单的数据库SQL就可以了\n2. 这个应用涉及到PII这样的个人隐私信息，不要做，容易违法","user_name":"作者回复","user_name_real":"编辑","uid":1053568,"ctime":1684741447,"ip_address":"上海","comment_id":373810,"utype":1}],"discussion_count":2,"race_medal":0,"score":2,"product_id":100541001,"comment_content":"老师，我想基于这个做一个对人的检索，用户输入姓名、年龄、性别等能找到相关的人，这个用embedding index能实现吗？或者有其他思路可以实现吗？求解答","like_count":2,"discussions":[{"author":{"id":1053568,"avatar":"https://static001.geekbang.org/account/avatar/00/10/13/80/8de66543.jpg","nickname":"徐文浩","note":"","ucode":"1D39AC564172E9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":618990,"discussion_content":"1. 这个肯定不适合用embedding，简单的数据库SQL就可以了\n2. 这个应用涉及到PII这样的个人隐私信息，不要做，容易违法","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1684741447,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"上海","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":1,"child_discussions":[{"author":{"id":3682659,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Wiba6ReQVp446vhcibQYiah5tdWPiaYAwsr6dty9ZTcZS1yXW1x9OQqPpkQbz2qyWMLPIl1T89rep1tXXEC9TefdKCjt51Crvrh2KmSO5cbeZFk/132","nickname":"Geek_e3264b","note":"","ucode":"D6388103876BD8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1053568,"avatar":"https://static001.geekbang.org/account/avatar/00/10/13/80/8de66543.jpg","nickname":"徐文浩","note":"","ucode":"1D39AC564172E9","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":625147,"discussion_content":"🤣","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1691405019,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":618990,"ip_address":"北京","group_id":0},"score":625147,"extra":""}]}]},{"had_liked":false,"id":372987,"user_name":"李蕾","can_delete":false,"product_type":"c1","uid":1845939,"ip_address":"广东","ucode":"D91BF87565D518","user_header":"https://static001.geekbang.org/account/avatar/00/1c/2a/b3/81b09345.jpg","comment_is_top":false,"comment_ctime":1681894125,"is_pvip":false,"replies":[{"id":136474,"content":"可以去看一下对应文档，通过 ai_prefix 的参数来操作，而不需要整个PromptTemplate重写。","user_name":"作者回复","user_name_real":"编辑","uid":1053568,"ctime":1683085613,"ip_address":"上海","comment_id":372987,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100541001,"comment_content":"关于老师思考题的第一个问题，经过自己的尝试，比较简单的方式是在Template中明确要求必须用中文返回即可。\nanswer_order_info = PromptTemplate(    template=&quot;请把下面的订单信息用中文回复给用户： \\n\\n {order}?&quot;, input_variables=[&quot;order&quot;])\n我的第一想法和Geek_4ec46c一样，也是尝试着在Prompt中规定返回必须是中文，但是没有生效，可能是自己当前的功力不够导致的bug，哈哈","like_count":2,"discussions":[{"author":{"id":1053568,"avatar":"https://static001.geekbang.org/account/avatar/00/10/13/80/8de66543.jpg","nickname":"徐文浩","note":"","ucode":"1D39AC564172E9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":616707,"discussion_content":"可以去看一下对应文档，通过 ai_prefix 的参数来操作，而不需要整个PromptTemplate重写。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1683085613,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"上海","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":372861,"user_name":"树静风止","can_delete":false,"product_type":"c1","uid":1929509,"ip_address":"北京","ucode":"66089F1ECE811E","user_header":"https://static001.geekbang.org/account/avatar/00/1d/71/25/e9bad0b3.jpg","comment_is_top":false,"comment_ctime":1681733649,"is_pvip":false,"replies":[{"id":136248,"content":"欢迎宣传转发给你的朋友们😊","user_name":"作者回复","user_name_real":"编辑","uid":1053568,"ctime":1681793553,"ip_address":"上海","comment_id":372861,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100541001,"comment_content":"这么强大超期的课程，人怎么这么少呢","like_count":2,"discussions":[{"author":{"id":1053568,"avatar":"https://static001.geekbang.org/account/avatar/00/10/13/80/8de66543.jpg","nickname":"徐文浩","note":"","ucode":"1D39AC564172E9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":614447,"discussion_content":"欢迎宣传转发给你的朋友们😊","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1681793553,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"上海","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":372692,"user_name":"智能","can_delete":false,"product_type":"c1","uid":1353334,"ip_address":"北京","ucode":"1804A67D67DB51","user_header":"https://static001.geekbang.org/account/avatar/00/14/a6/76/b2a1065a.jpg","comment_is_top":false,"comment_ctime":1681443253,"is_pvip":false,"replies":[{"id":136115,"content":"其实比调度者更加“高级”，你可以认为我们其实是通过提示语，让ChatGPT模拟人思考问题的过程","user_name":"作者回复","user_name_real":"编辑","uid":1053568,"ctime":1681614510,"ip_address":"上海","comment_id":372692,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100541001,"comment_content":"所以这里chatGPT其实相当于一个调度者？识别用户意图然后调用其他应用","like_count":2,"discussions":[{"author":{"id":1053568,"avatar":"https://static001.geekbang.org/account/avatar/00/10/13/80/8de66543.jpg","nickname":"徐文浩","note":"","ucode":"1D39AC564172E9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":613962,"discussion_content":"其实比调度者更加“高级”，你可以认为我们其实是通过提示语，让ChatGPT模拟人思考问题的过程","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1681614510,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"上海","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":372681,"user_name":"Jacob.C","can_delete":false,"product_type":"c1","uid":1070253,"ip_address":"广东","ucode":"034998E7A7CCD1","user_header":"https://static001.geekbang.org/account/avatar/00/10/54/ad/6ee2b7cb.jpg","comment_is_top":false,"comment_ctime":1681436935,"is_pvip":false,"replies":[{"id":136100,"content":"那就用一个前两讲介绍过的 SequentialChain 作为LLMChain呀。Tool封装一下这个SequentialChain的LLMChain就好了。","user_name":"作者回复","user_name_real":"编辑","uid":1053568,"ctime":1681613743,"ip_address":"上海","comment_id":372681,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100541001,"comment_content":"老师，请问 agent 的 一个 tool如果需要 llm 做两件事再回来，应该怎么玩呢？","like_count":2,"discussions":[{"author":{"id":1053568,"avatar":"https://static001.geekbang.org/account/avatar/00/10/13/80/8de66543.jpg","nickname":"徐文浩","note":"","ucode":"1D39AC564172E9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":613942,"discussion_content":"那就用一个前两讲介绍过的 SequentialChain 作为LLMChain呀。Tool封装一下这个SequentialChain的LLMChain就好了。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1681613743,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"上海","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":372679,"user_name":"Jacob.C","can_delete":false,"product_type":"c1","uid":1070253,"ip_address":"广东","ucode":"034998E7A7CCD1","user_header":"https://static001.geekbang.org/account/avatar/00/10/54/ad/6ee2b7cb.jpg","comment_is_top":false,"comment_ctime":1681436674,"is_pvip":false,"replies":[{"id":136099,"content":"有个地方代码贴错了，编辑稍后会帮忙修正。Prompt没有更正之前是\n\n\n@tool(&quot;Search Order&quot;)\ndef search_order(input:str)-&gt;str:\n    &quot;&quot;&quot;useful for when you need to answer questions about customers orders&quot;&quot;&quot;\n    if input.strip() == ORDER_1:\n        return json.dumps(ORDER_1_DETAIL)\n    elif input.strip() == ORDER_2:\n        return json.dumps(ORDER_2_DETAIL)\n    else:\n        return f&quot;对不起，根据{input}没有找到您的订单&quot;","user_name":"作者回复","user_name_real":"编辑","uid":1053568,"ctime":1681613684,"ip_address":"上海","comment_id":372679,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100541001,"comment_content":"解决的方法也不复杂，我们只需要调整一下 search_order 这个 Tool 的提示语。通过这个提示语，Agent 会知道，这个工具就应该在找不到订单的时候，告诉用户找不到订单或者请它再次确认。这个时候，它就会根据这个答案去回复用户。下面是对应修改运行后的结果。\n\n老师这里两段代码实在看不出来修改了啥，麻烦看出来的人说明一下！","like_count":1,"discussions":[{"author":{"id":1053568,"avatar":"https://static001.geekbang.org/account/avatar/00/10/13/80/8de66543.jpg","nickname":"徐文浩","note":"","ucode":"1D39AC564172E9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":613940,"discussion_content":"有个地方代码贴错了，编辑稍后会帮忙修正。Prompt没有更正之前是\n\n\n@tool(&#34;Search Order&#34;)\ndef search_order(input:str)-&gt;str:\n    &#34;&#34;&#34;useful for when you need to answer questions about customers orders&#34;&#34;&#34;\n    if input.strip() == ORDER_1:\n        return json.dumps(ORDER_1_DETAIL)\n    elif input.strip() == ORDER_2:\n        return json.dumps(ORDER_2_DETAIL)\n    else:\n        return f&#34;对不起，根据{input}没有找到您的订单&#34;","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1681613684,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"上海","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":372672,"user_name":"Viktor","can_delete":false,"product_type":"c1","uid":1520703,"ip_address":"四川","ucode":"DCAFD1DD5C6A0C","user_header":"https://static001.geekbang.org/account/avatar/00/17/34/3f/4b6cd370.jpg","comment_is_top":false,"comment_ctime":1681435265,"is_pvip":false,"replies":[{"id":136102,"content":"👍","user_name":"作者回复","user_name_real":"编辑","uid":1053568,"ctime":1681613881,"ip_address":"上海","comment_id":372672,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100541001,"comment_content":"如果按照这个思路，我们还可以添加更多的功能，比如更细致的订单查询，商品咨询，修改收货地址等。只是这些功能如果每个都独立开发还是需要花费很多时间，所以这个时候就需要开发一个框架的工作流，在这个框架下面更方便做功能集成。点赞👍。","like_count":1,"discussions":[{"author":{"id":1053568,"avatar":"https://static001.geekbang.org/account/avatar/00/10/13/80/8de66543.jpg","nickname":"徐文浩","note":"","ucode":"1D39AC564172E9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":613944,"discussion_content":"👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1681613882,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"上海","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":372669,"user_name":"Oli张帆","can_delete":false,"product_type":"c1","uid":1338098,"ip_address":"北京","ucode":"6E60A370C3C14A","user_header":"https://static001.geekbang.org/account/avatar/00/14/6a/f2/db90fa96.jpg","comment_is_top":false,"comment_ctime":1681434788,"is_pvip":false,"replies":[{"id":136101,"content":"对，第一步是ZeroShot的。但是给出几个例子在整个场景的帮助可能有限，因为整个Template的Prompt里核心还是 Input，Action Input，Action Thought，Obersavation的链路。\n\n不过都值得动手在自己的场景试一下，因为LLM对于Prompt目前还是比较敏感的，不同Prompt的效果差异还是比较大的。","user_name":"作者回复","user_name_real":"编辑","uid":1053568,"ctime":1681613855,"ip_address":"上海","comment_id":372669,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100541001,"comment_content":"请教老师，第一步的Intent Detection，是不是算是zero shot的？在这种情况下，如果我给出几个输出的例子，强化一下它的输出形式，会不会效果更好？","like_count":1,"discussions":[{"author":{"id":1053568,"avatar":"https://static001.geekbang.org/account/avatar/00/10/13/80/8de66543.jpg","nickname":"徐文浩","note":"","ucode":"1D39AC564172E9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":613943,"discussion_content":"对，第一步是ZeroShot的。但是给出几个例子在整个场景的帮助可能有限，因为整个Template的Prompt里核心还是 Input，Action Input，Action Thought，Obersavation的链路。\n\n不过都值得动手在自己的场景试一下，因为LLM对于Prompt目前还是比较敏感的，不同Prompt的效果差异还是比较大的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1681613855,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"上海","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":374751,"user_name":"～鹏～","can_delete":false,"product_type":"c1","uid":1368961,"ip_address":"北京","ucode":"C653604F55E994","user_header":"https://static001.geekbang.org/account/avatar/00/14/e3/81/25bb6ba7.jpg","comment_is_top":false,"comment_ctime":1684384577,"is_pvip":false,"replies":[{"id":136792,"content":"ChatGLM的推理能力如果是 6B 的版本的话，目前还没有那么强。\n\n对于需要相对复杂推理能力的，目前看起来还是需要 openai 或者在 llama 比较大的模型上微调才能有一定效果 ","user_name":"作者回复","user_name_real":"编辑","uid":1053568,"ctime":1684720667,"ip_address":"新加坡","comment_id":374751,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100541001,"comment_content":"请问下我用chatglm我试了下上面写的agent例子，发现不支持，这个只能openai可以用吗","like_count":0,"discussions":[{"author":{"id":1053568,"avatar":"https://static001.geekbang.org/account/avatar/00/10/13/80/8de66543.jpg","nickname":"徐文浩","note":"","ucode":"1D39AC564172E9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":618924,"discussion_content":"ChatGLM的推理能力如果是 6B 的版本的话，目前还没有那么强。\n\n对于需要相对复杂推理能力的，目前看起来还是需要 openai 或者在 llama 比较大的模型上微调才能有一定效果 ","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1684720667,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"新加坡","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":373641,"user_name":"风","can_delete":false,"product_type":"c1","uid":1197790,"ip_address":"北京","ucode":"948CED7C8EFB21","user_header":"https://static001.geekbang.org/account/avatar/00/12/46/de/6f2ab154.jpg","comment_is_top":false,"comment_ctime":1682869273,"is_pvip":false,"replies":[{"id":136446,"content":"“思考”能力现在其他模型和OpenAI差距很大，而且GPT-3.5和GPT-4差距都不小，最好能用GPT-4","user_name":"作者回复","user_name_real":"编辑","uid":1053568,"ctime":1683082555,"ip_address":"上海","comment_id":373641,"utype":1}],"discussion_count":2,"race_medal":0,"score":3,"product_id":100541001,"comment_content":"你好，我尝试使用ChatGLM实现这一节的内容，但是效果很差，经常没办法像OpenAI那样进行“思考”，最后返回正常的结果。有什么好的办法吗？或者，有什么其他可用的中文LLM模型可以使用agent和tool实现类似的功能。","like_count":0,"discussions":[{"author":{"id":1053568,"avatar":"https://static001.geekbang.org/account/avatar/00/10/13/80/8de66543.jpg","nickname":"徐文浩","note":"","ucode":"1D39AC564172E9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":616668,"discussion_content":"“思考”能力现在其他模型和OpenAI差距很大，而且GPT-3.5和GPT-4差距都不小，最好能用GPT-4","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1683082555,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"上海","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1164626,"avatar":"https://static001.geekbang.org/account/avatar/00/11/c5/52/63008fc7.jpg","nickname":"xuwei","note":"","ucode":"07268C1743839F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":625093,"discussion_content":"是的，差距不是一点两点","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1691313888,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"上海","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":373094,"user_name":"江湖中人","can_delete":false,"product_type":"c1","uid":3022855,"ip_address":"浙江","ucode":"5D04FA57BD5C83","user_header":"https://static001.geekbang.org/account/avatar/00/2e/20/07/80337e76.jpg","comment_is_top":false,"comment_ctime":1682037033,"is_pvip":false,"replies":[{"id":136515,"content":"第17和18讲的内容就是为了解决这个问题的？第17讲对于客服问题的解法是否满足你的需求呢？","user_name":"作者回复","user_name_real":"编辑","uid":1053568,"ctime":1683091805,"ip_address":"上海","comment_id":373094,"utype":1}],"discussion_count":2,"race_medal":0,"score":3,"product_id":100541001,"comment_content":"老师，请教一下，如果想做一个特定行业的客服机器人，有一些私有的数据需要喂给AI，是有现成的东西可以用，还是利用我们课程学的东西去开发训练，可以大致梳理一下流程吗？很多有这种需求的但是对技术并不了解的人，他们要怎么做呢？","like_count":0,"discussions":[{"author":{"id":1053568,"avatar":"https://static001.geekbang.org/account/avatar/00/10/13/80/8de66543.jpg","nickname":"徐文浩","note":"","ucode":"1D39AC564172E9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":616756,"discussion_content":"第17和18讲的内容就是为了解决这个问题的？第17讲对于客服问题的解法是否满足你的需求呢？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1683091805,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"上海","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":1,"child_discussions":[{"author":{"id":3022855,"avatar":"https://static001.geekbang.org/account/avatar/00/2e/20/07/80337e76.jpg","nickname":"江湖中人","note":"","ucode":"5D04FA57BD5C83","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1053568,"avatar":"https://static001.geekbang.org/account/avatar/00/10/13/80/8de66543.jpg","nickname":"徐文浩","note":"","ucode":"1D39AC564172E9","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":616935,"discussion_content":"嗯嗯，提问的时候没完整看到这里，谢谢！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1683203586,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":616756,"ip_address":"浙江","group_id":0},"score":616935,"extra":""}]}]},{"had_liked":false,"id":372944,"user_name":"Geek_3d7708","can_delete":false,"product_type":"c1","uid":2601970,"ip_address":"浙江","ucode":"9F707F39739109","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTISHN4HwTsOicDUzB1jyzlxzriaI3S7tAfoPzicSfuTbxLxRjkCic2eBwRWxJTrwTpiaYP8Hg8vqWgNE2w/132","comment_is_top":false,"comment_ctime":1681830079,"is_pvip":false,"replies":[{"id":136470,"content":"1. 这个和Prompt有关，Langchain默认的Prompt是英文，会导致输出结果变成英文。这个你可以通过 ai_prefix 之类的参数，加入一段要求输出是中文的文本就好了。\n\n2. converstional-react-description 你需要指定对应的Tools是VBQA并且tools的description要能够让AI理解这个问题能够靠这个Tool来解决。","user_name":"作者回复","user_name_real":"编辑","uid":1053568,"ctime":1683085035,"ip_address":"上海","comment_id":372944,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100541001,"comment_content":"1、 LLM 换成了 ChatOpenAI，不知道怎么 回答过程都是英文了；\n2、converstional-react-description  采用这个，回答就不是从知识库了。 比如我用藤野显示，问鲁迅老师是谁？zero-shot-react-description 的时候，是藤野先生，但是换成converstional-react-description 就变成 陈寅格，不知道哪来的。","like_count":0,"discussions":[{"author":{"id":1053568,"avatar":"https://static001.geekbang.org/account/avatar/00/10/13/80/8de66543.jpg","nickname":"徐文浩","note":"","ucode":"1D39AC564172E9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":616699,"discussion_content":"1. 这个和Prompt有关，Langchain默认的Prompt是英文，会导致输出结果变成英文。这个你可以通过 ai_prefix 之类的参数，加入一段要求输出是中文的文本就好了。\n\n2. converstional-react-description 你需要指定对应的Tools是VBQA并且tools的description要能够让AI理解这个问题能够靠这个Tool来解决。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1683085036,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"上海","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":372926,"user_name":"xianbin.yang","can_delete":false,"product_type":"c1","uid":2151575,"ip_address":"浙江","ucode":"A9D26D0D649932","user_header":"https://static001.geekbang.org/account/avatar/00/20/d4/97/2f01be06.jpg","comment_is_top":false,"comment_ctime":1681806986,"is_pvip":false,"replies":[{"id":136529,"content":"有一个和朋友一起新做的微信公众号 “AI炼金术”，不过不保证长期更新……\n","user_name":"作者回复","user_name_real":"编辑","uid":1053568,"ctime":1683094803,"ip_address":"上海","comment_id":372926,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100541001,"comment_content":"老师，很喜欢您这个专栏，您除了这个专栏，还有其他的博客、社群或者知识星球吗？","like_count":0,"discussions":[{"author":{"id":1053568,"avatar":"https://static001.geekbang.org/account/avatar/00/10/13/80/8de66543.jpg","nickname":"徐文浩","note":"","ucode":"1D39AC564172E9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":616770,"discussion_content":"有一个和朋友一起新做的微信公众号 “AI炼金术”，不过不保证长期更新……\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1683094803,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"上海","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":372903,"user_name":"Geek_3d7708","can_delete":false,"product_type":"c1","uid":2601970,"ip_address":"中国香港","ucode":"9F707F39739109","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTISHN4HwTsOicDUzB1jyzlxzriaI3S7tAfoPzicSfuTbxLxRjkCic2eBwRWxJTrwTpiaYP8Hg8vqWgNE2w/132","comment_is_top":false,"comment_ctime":1681784745,"is_pvip":false,"replies":[{"id":136467,"content":"需要你自己为每一个客户单独维护Session，每个用户有一个自己的memory呀。","user_name":"作者回复","user_name_real":"编辑","uid":1053568,"ctime":1683084080,"ip_address":"上海","comment_id":372903,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100541001,"comment_content":"EntityMemory  每个不同的客户，保存的数据会不会冲突？ 比如A的数据，B也访问到了？","like_count":0,"discussions":[{"author":{"id":1053568,"avatar":"https://static001.geekbang.org/account/avatar/00/10/13/80/8de66543.jpg","nickname":"徐文浩","note":"","ucode":"1D39AC564172E9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":616693,"discussion_content":"需要你自己为每一个客户单独维护Session，每个用户有一个自己的memory呀。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1683084080,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"上海","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":372778,"user_name":"一叶","can_delete":false,"product_type":"c1","uid":3577168,"ip_address":"中国台湾","ucode":"21E5455D0814E5","user_header":"https://static001.geekbang.org/account/avatar/00/36/95/50/01199ae9.jpg","comment_is_top":false,"comment_ctime":1681611026,"is_pvip":false,"replies":[{"id":136094,"content":"编辑提醒我了，稿件里我粘贴代码的时候贴错了上面一段，稍后会修正过来。","user_name":"作者回复","user_name_real":"编辑","uid":1053568,"ctime":1681613379,"ip_address":"上海","comment_id":372778,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100541001,"comment_content":"解决的方法也不复杂，我们只需要调整一下 search_order 这个 Tool 的提示语。\n\n在这个位置的代码和上面的代码都是一样的,好像没有任何调整....... ( 老师是你没改好? ) \n","like_count":0,"discussions":[{"author":{"id":1053568,"avatar":"https://static001.geekbang.org/account/avatar/00/10/13/80/8de66543.jpg","nickname":"徐文浩","note":"","ucode":"1D39AC564172E9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":613935,"discussion_content":"编辑提醒我了，稿件里我粘贴代码的时候贴错了上面一段，稍后会修正过来。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1681613379,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"上海","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":372755,"user_name":"张弛","can_delete":false,"product_type":"c1","uid":1681607,"ip_address":"中国台湾","ucode":"77E0BC5D0667A8","user_header":"https://static001.geekbang.org/account/avatar/00/19/a8/c7/f57dadb9.jpg","comment_is_top":false,"comment_ctime":1681557308,"is_pvip":false,"replies":[{"id":136090,"content":"感谢提醒，我请编辑修正一下。","user_name":"作者回复","user_name_real":"编辑","uid":1053568,"ctime":1681613258,"ip_address":"上海","comment_id":372755,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100541001,"comment_content":"question3 = &quot;你们的退货政策是怎么样的？\n&quot;answer3 = conversation_agent.run(question3)\nprint(answer2)\n这段代码的第三行，print的参数错了，应该是answer3","like_count":0,"discussions":[{"author":{"id":1053568,"avatar":"https://static001.geekbang.org/account/avatar/00/10/13/80/8de66543.jpg","nickname":"徐文浩","note":"","ucode":"1D39AC564172E9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":613931,"discussion_content":"感谢提醒，我请编辑修正一下。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1681613258,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"上海","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":372754,"user_name":"张弛","can_delete":false,"product_type":"c1","uid":1681607,"ip_address":"中国台湾","ucode":"77E0BC5D0667A8","user_header":"https://static001.geekbang.org/account/avatar/00/19/a8/c7/f57dadb9.jpg","comment_is_top":false,"comment_ctime":1681557144,"is_pvip":false,"replies":[{"id":136091,"content":"感谢提醒，编辑提醒我了，稍后会修正一下。","user_name":"作者回复","user_name_real":"编辑","uid":1053568,"ctime":1681613284,"ip_address":"上海","comment_id":372754,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100541001,"comment_content":"question1 = &quot;我有一张订单，一直没有收到，能麻烦帮我查一下吗？&quot;\nanswer1 = conversation_agent.run(question)\nprint(answer1)\n这段代码的第二行的参数填错了，应该是question1","like_count":0,"discussions":[{"author":{"id":1053568,"avatar":"https://static001.geekbang.org/account/avatar/00/10/13/80/8de66543.jpg","nickname":"徐文浩","note":"","ucode":"1D39AC564172E9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":613932,"discussion_content":"感谢提醒，编辑提醒我了，稍后会修正一下。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1681613284,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"上海","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":372751,"user_name":"张弛","can_delete":false,"product_type":"c1","uid":1681607,"ip_address":"中国台湾","ucode":"77E0BC5D0667A8","user_header":"https://static001.geekbang.org/account/avatar/00/19/a8/c7/f57dadb9.jpg","comment_is_top":false,"comment_ctime":1681554689,"is_pvip":false,"replies":[{"id":136089,"content":"刚刚上传了，感谢提醒","user_name":"作者回复","user_name_real":"编辑","uid":1053568,"ctime":1681613143,"ip_address":"上海","comment_id":372751,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100541001,"comment_content":"老师您好！本次案例中的ecommerce_products.csv文件好像并未上传到github，麻烦补充，谢谢！","like_count":0,"discussions":[{"author":{"id":1053568,"avatar":"https://static001.geekbang.org/account/avatar/00/10/13/80/8de66543.jpg","nickname":"徐文浩","note":"","ucode":"1D39AC564172E9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":613930,"discussion_content":"刚刚上传了，感谢提醒","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1681613143,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"上海","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":372719,"user_name":"一叶","can_delete":false,"product_type":"c1","uid":3577168,"ip_address":"福建","ucode":"21E5455D0814E5","user_header":"https://static001.geekbang.org/account/avatar/00/36/95/50/01199ae9.jpg","comment_is_top":false,"comment_ctime":1681467920,"is_pvip":false,"replies":[{"id":136098,"content":"都放在Github里了呀\nhttps:&#47;&#47;github.com&#47;xuwenhao&#47;geektime-ai-course&#47;tree&#47;main&#47;data&#47;faq","user_name":"作者回复","user_name_real":"编辑","uid":1053568,"ctime":1681613582,"ip_address":"上海","comment_id":372719,"utype":1}],"discussion_count":1,"race_medal":0,"score":4,"product_id":100541001,"comment_content":"老师,你里面提到的faq的txt可以下载,或是给我们看下是什么格式吗?这样方便我们手动去跑一下代码","like_count":0,"discussions":[{"author":{"id":1053568,"avatar":"https://static001.geekbang.org/account/avatar/00/10/13/80/8de66543.jpg","nickname":"徐文浩","note":"","ucode":"1D39AC564172E9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":613939,"discussion_content":"都放在Github里了呀\nhttps://github.com/xuwenhao/geektime-ai-course/tree/main/data/faq","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1681613582,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"上海","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":372708,"user_name":"Evan","can_delete":false,"product_type":"c1","uid":1344281,"ip_address":"上海","ucode":"B877ABD0CF4661","user_header":"https://static001.geekbang.org/account/avatar/00/14/83/19/0a3fe8c1.jpg","comment_is_top":false,"comment_ctime":1681459445,"is_pvip":false,"replies":[{"id":136113,"content":"我看已经有评论里有同学给出我“设计”问题的想法了，还是需要通过Prompt来解决问题。","user_name":"作者回复","user_name_real":"编辑","uid":1053568,"ctime":1681614375,"ip_address":"上海","comment_id":372708,"utype":1}],"discussion_count":1,"race_medal":0,"score":4,"product_id":100541001,"comment_content":"最简单的办法是：再调用一次ChatGPT 就可以翻译一下如何？ \n但是老师肯定不是这样想得，\n是否能自定义回复内容","like_count":0,"discussions":[{"author":{"id":1053568,"avatar":"https://static001.geekbang.org/account/avatar/00/10/13/80/8de66543.jpg","nickname":"徐文浩","note":"","ucode":"1D39AC564172E9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":613958,"discussion_content":"我看已经有评论里有同学给出我“设计”问题的想法了，还是需要通过Prompt来解决问题。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1681614375,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"上海","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":372683,"user_name":"一叶","can_delete":false,"product_type":"c1","uid":3577168,"ip_address":"福建","ucode":"21E5455D0814E5","user_header":"https://static001.geekbang.org/account/avatar/00/36/95/50/01199ae9.jpg","comment_is_top":false,"comment_ctime":1681439154,"is_pvip":false,"replies":[{"id":136104,"content":"有一位同学在评论里已经有正确答案了，可以在ZeroShotAgent初始化的时候，指定一个Prefix的Prompt，指定要求用中文回答。","user_name":"作者回复","user_name_real":"编辑","uid":1053568,"ctime":1681613960,"ip_address":"上海","comment_id":372683,"utype":1}],"discussion_count":1,"race_medal":0,"score":4,"product_id":100541001,"comment_content":"老师，改成中文是不是要在每个tool的描述下说明要用中文回答？还是说要直接改他的原始内置指令？","like_count":0,"discussions":[{"author":{"id":1053568,"avatar":"https://static001.geekbang.org/account/avatar/00/10/13/80/8de66543.jpg","nickname":"徐文浩","note":"","ucode":"1D39AC564172E9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":613946,"discussion_content":"有一位同学在评论里已经有正确答案了，可以在ZeroShotAgent初始化的时候，指定一个Prefix的Prompt，指定要求用中文回答。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1681613960,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"上海","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":372673,"user_name":"Oli张帆","can_delete":false,"product_type":"c1","uid":1338098,"ip_address":"北京","ucode":"6E60A370C3C14A","user_header":"https://static001.geekbang.org/account/avatar/00/14/6a/f2/db90fa96.jpg","comment_is_top":false,"comment_ctime":1681435309,"is_pvip":false,"replies":[{"id":136125,"content":"当然可以，这个是产品综合体验的考虑了呀。很多时候用户并不喜欢这样菜单式的体验。","user_name":"作者回复","user_name_real":"编辑","uid":1053568,"ctime":1681615900,"ip_address":"上海","comment_id":372673,"utype":1}],"discussion_count":1,"race_medal":0,"score":4,"product_id":100541001,"comment_content":"在第一步检测用户的意图的时候，是否也可以直接提供一些“捷径”，让用户明确自己的目的，能省去让AI去检测意图这一步。比如，客户点击我要查询订单，就直接问他订单号，然后完成查询。客户点击“我要查询新闻”，就帮助他&#47;她创建query，完成查询。客户点击“用苏格拉底式诘问帮我理解这篇文章”，就直接调用相关的Agent和Context来完成多轮对话。","like_count":0,"discussions":[{"author":{"id":1053568,"avatar":"https://static001.geekbang.org/account/avatar/00/10/13/80/8de66543.jpg","nickname":"徐文浩","note":"","ucode":"1D39AC564172E9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":613975,"discussion_content":"当然可以，这个是产品综合体验的考虑了呀。很多时候用户并不喜欢这样菜单式的体验。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1681615900,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"上海","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":377162,"user_name":"Charles","can_delete":false,"product_type":"c1","uid":2559238,"ip_address":"上海","ucode":"8ACBA423B5A505","user_header":"https://static001.geekbang.org/account/avatar/00/27/0d/06/970cc957.jpg","comment_is_top":false,"comment_ctime":1688018416,"is_pvip":false,"replies":null,"discussion_count":5,"race_medal":0,"score":4,"product_id":100541001,"comment_content":"当 llm使用ChatOpenAI和agent=&quot;conversational-react-description&quot;，会报错。\nFile &quot;&#47;Users&#47;XXX&#47;opt&#47;anaconda3&#47;envs&#47;openai&#47;lib&#47;python3.10&#47;site-packages&#47;langchain&#47;agents&#47;conversational&#47;output_parser.py&quot;, line 23, in parse\n    raise OutputParserException(f&quot;Could not parse LLM output: `{text}`&quot;)\nlangchain.schema.OutputParserException: Could not parse LLM output: `Do I need to use a tool? No`\n\n使用agent=&quot;zero-shot-react-description&quot; 时，不会报错\n\n为什么呢？","like_count":2,"discussions":[{"author":{"id":1057012,"avatar":"https://static001.geekbang.org/account/avatar/00/10/20/f4/9112ddb5.jpg","nickname":"Eric","note":"","ucode":"F8247828C6D498","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":624591,"discussion_content":"我也碰到同样的问题","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1690763127,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"澳大利亚","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1884974,"avatar":"https://static001.geekbang.org/account/avatar/00/1c/c3/2e/38f304ab.jpg","nickname":"Berlin","note":"","ucode":"2F8E21AC1DDF5A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":623708,"discussion_content":"同样的错误","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1689762150,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1052728,"avatar":"https://static001.geekbang.org/account/avatar/00/10/10/38/bd7851db.jpg","nickname":"迪拉克海的鱼","note":"","ucode":"A9C2A3097FDE8B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":628333,"discussion_content":"我试了使用GPT-4不报错","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1695200829,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"重庆","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1052728,"avatar":"https://static001.geekbang.org/account/avatar/00/10/10/38/bd7851db.jpg","nickname":"迪拉克海的鱼","note":"","ucode":"A9C2A3097FDE8B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":628330,"discussion_content":"同样的问题,改了handle_parsing_errors没用","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1695199506,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"重庆","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1057012,"avatar":"https://static001.geekbang.org/account/avatar/00/10/20/f4/9112ddb5.jpg","nickname":"Eric","note":"","ucode":"F8247828C6D498","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":624619,"discussion_content":"找到了一个方法解决这个问题， 在intialize_agent的时候传入此参数： handle_parsing_errors=&#34;Check your output and make sure it conforms!&#34;。 就可以了。具体查看这个链接 https://python.langchain.com/docs/modules/agents/how_to/handle_parsing_errors","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1690778690,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"澳大利亚","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":383888,"user_name":"陈斌","can_delete":false,"product_type":"c1","uid":1149402,"ip_address":"广东","ucode":"AD6933D125C930","user_header":"https://static001.geekbang.org/account/avatar/00/11/89/da/136cdca6.jpg","comment_is_top":false,"comment_ctime":1699872690,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":4,"product_id":100541001,"comment_content":"Gpt 只是一个模型，在应用过程中关键的是去体会跟 gpt 交互时思考应该让 gpt采用什么样的策略回答问题，就是什么样的情况下用什么套话或者话术来回答。鉴别的工具和套话的模板就需要我们去自己开发。因为开放式问答的场景跟实际情况很不一样，虽然 gpt 可以节省人工，但毕竟跟人与人的交流不一样，对气氛的把握也没有那么精准。所以 gpt 的回答也不是万能，在接收客户提问的时候，要时刻注意对客户的情绪进行分析，如果发现客户负面情绪极度飙升，那么应该尽快切换回人工模式，而不能等待关键词的触发。","like_count":1},{"had_liked":false,"id":372670,"user_name":"Yezhiwei","can_delete":false,"product_type":"c1","uid":1005157,"ip_address":"北京","ucode":"31E8E33688CBEC","user_header":"https://static001.geekbang.org/account/avatar/00/0f/56/65/22a37a8e.jpg","comment_is_top":false,"comment_ctime":1681434887,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":4,"product_id":100541001,"comment_content":"谢谢老师哈，这篇文章牛皮plus","like_count":1},{"had_liked":false,"id":383163,"user_name":"海边停车","can_delete":false,"product_type":"c1","uid":1061062,"ip_address":"上海","ucode":"FF08D4A70B0459","user_header":"https://static001.geekbang.org/account/avatar/00/10/30/c6/441acafd.jpg","comment_is_top":false,"comment_ctime":1698582403,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":4,"product_id":100541001,"comment_content":"设置了return_direct = True，怎么流式返回Tool的observation？","like_count":0},{"had_liked":false,"id":381437,"user_name":"liuy1226","can_delete":false,"product_type":"c1","uid":1010724,"ip_address":"浙江","ucode":"676316D87C07AD","user_header":"https://static001.geekbang.org/account/avatar/00/0f/6c/24/f2dfbbec.jpg","comment_is_top":false,"comment_ctime":1695202688,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":4,"product_id":100541001,"comment_content":"question3 = &quot;你们的退货政策是怎么样的？&quot;\nanswer3 = conversation_agent.run(question3)\nprint(answer3)执行后出错，这个是什么原因OutputParserException: Could not parse LLM output: `Do I need to use a tool? No`","like_count":0},{"had_liked":false,"id":381434,"user_name":"liuy1226","can_delete":false,"product_type":"c1","uid":1010724,"ip_address":"浙江","ucode":"676316D87C07AD","user_header":"https://static001.geekbang.org/account/avatar/00/0f/6c/24/f2dfbbec.jpg","comment_is_top":false,"comment_ctime":1695201609,"is_pvip":false,"replies":null,"discussion_count":1,"race_medal":0,"score":4,"product_id":100541001,"comment_content":"这个agent和把多个文档放到一个向量库中问答有什么区别","like_count":0,"discussions":[{"author":{"id":1953765,"avatar":"","nickname":"Geek_d54869","note":"","ucode":"CF55462EF65B9E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":646977,"discussion_content":"这里也用到了向量库啊 VectorDBQA；只是这里agent可以通过思考力调用多个tool","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1719203446,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":381089,"user_name":"蝈蝈","can_delete":false,"product_type":"c1","uid":2444823,"ip_address":"湖北","ucode":"2B14CECEFD7F46","user_header":"https://static001.geekbang.org/account/avatar/00/25/4e/17/2e131ff0.jpg","comment_is_top":false,"comment_ctime":1694662959,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":5,"product_id":100541001,"comment_content":"可以单独设置某个tool里的max_iterations 次数吗？比如我想设置而总的agent 为3次，其中某一个tool为1次，请问老师这样有什么方式可以实现吗","like_count":0},{"had_liked":false,"id":380653,"user_name":"Geek_725520","can_delete":false,"product_type":"c1","uid":3624281,"ip_address":"广东","ucode":"617B9FACAD55E8","user_header":"","comment_is_top":false,"comment_ctime":1693937899,"is_pvip":false,"replies":null,"discussion_count":3,"race_medal":0,"score":5,"product_id":100541001,"comment_content":"question3 出现错误 `OutputParserException: Could not parse LLM output: `Do I need to use a tool? No``，该怎么处理呢？","like_count":0,"discussions":[{"author":{"id":3705704,"avatar":"https://static001.geekbang.org/account/avatar/00/38/8b/68/7b985768.jpg","nickname":"softnuggets","note":"","ucode":"6E294390F7ACC8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":628161,"discussion_content":"换成zero-shot-react-description可以","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1695021126,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"美国","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":3705704,"avatar":"https://static001.geekbang.org/account/avatar/00/38/8b/68/7b985768.jpg","nickname":"softnuggets","note":"","ucode":"6E294390F7ACC8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":628160,"discussion_content":"请问你解决这个错误了吗","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1695020610,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"美国","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2238528,"avatar":"https://static001.geekbang.org/account/avatar/00/22/28/40/82d748e6.jpg","nickname":"小理想。","note":"","ucode":"EDC35A907570DB","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":628093,"discussion_content":"我也出现这个问题啦","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1694935408,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":379380,"user_name":"Penguin Shi","can_delete":false,"product_type":"c1","uid":3646806,"ip_address":"广东","ucode":"477A24D7ECE09A","user_header":"https://static001.geekbang.org/account/avatar/00/37/a5/56/b3cf71a9.jpg","comment_is_top":false,"comment_ctime":1691848518,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":5,"product_id":100541001,"comment_content":"第三个需要修改的，是“通过多轮对话实现订单查询”后的第一个代码：\n\nfrom langchain import LLMChain, OpenAI, PromptTemplate\nfrom langchain.memory import ConversationBufferMemory\nfrom langchain.chat_models import ChatOpenAI\n\nimport re\n\nanswer_order_info = PromptTemplate(\n    template=&quot;请把下面的订单信息回复给用户： \\n\\n {order}?&quot;, input_variables=[&quot;order&quot;]\n)\nanswer_order_llm = LLMChain(llm=ChatOpenAI(temperature=0),  prompt=answer_order_info)\n\n@tool(&quot;Search Order&quot;, return_direct=True)\ndef search_order(input:str)-&gt;str:\n    &quot;&quot;&quot;useful for when you need to answer questions about customers orders&quot;&quot;&quot;\n    pattern = r&quot;\\d+[A-Z]+&quot;\n    match = re.search(pattern, input)\n\n    order_number = input\n    if match:\n        order_number = match.group(0)\n    else:\n        return &quot;请问您的订单号是多少？&quot;\n    if order_number == ORDER_1:        \n        return answer_order_llm.run(json.dumps(ORDER_1_DETAIL))\n    elif order_number == ORDER_2:\n        return answer_order_llm.run(json.dumps(ORDER_2_DETAIL))\n    else:\n        return f&quot;对不起，根据{input}没有找到您的订单&quot;\n\n\ntools = [search_order,recommend_product, faq]\nchatllm=ChatOpenAI(temperature=0)\nmemory = ConversationBufferMemory(memory_key=&quot;chat_history&quot;, return_messages=True)\nconversation_agent = initialize_agent(tools, chatllm, \n                                      agent=&quot;conversational-react-description&quot;, \n                                      memory=memory, verbose=True)","like_count":0},{"had_liked":false,"id":379379,"user_name":"Penguin Shi","can_delete":false,"product_type":"c1","uid":3646806,"ip_address":"广东","ucode":"477A24D7ECE09A","user_header":"https://static001.geekbang.org/account/avatar/00/37/a5/56/b3cf71a9.jpg","comment_is_top":false,"comment_ctime":1691848475,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":5,"product_id":100541001,"comment_content":"第二个需要需改的代码是：“对于商品的推荐，我们可以如法炮制，也把对应的商品信息，存到 VectorStore 里，然后通过先搜索后问答的方式来解决。对应的数据同样由 ChatGPT 出品，代码和上面的 FAQ 基本类似，我就不再一一重复了。重新构建 Agent：”\nfrom langchain.text_splitter import CharacterTextSplitter\nfrom langchain.document_loaders import CSVLoader\nfrom langchain.llms import OpenAI\nfrom langchain import FAISS\nfrom langchain.embeddings import OpenAIEmbeddings\nfrom langchain.text_splitter import SpacyTextSplitter\nfrom langchain.chains import RetrievalQA\nfrom langchain.document_loaders import TextLoader\nfrom langchain.vectorstores.base import VectorStoreRetriever\n\nproduct_loader = CSVLoader(&#39;.&#47;data&#47;ecommerce_products.csv&#39;)\nproduct_documents = product_loader.load()\nproduct_text_splitter = CharacterTextSplitter(chunk_size=1024, separator=&quot;\\n&quot;)\nproduct_texts = product_text_splitter.split_documents(product_documents)\nproduct_search = FAISS.from_documents(product_texts, OpenAIEmbeddings())\nretriever = VectorStoreRetriever(vectorstore=product_search)\nproduct_chain = RetrievalQA.from_llm(llm=llm, retriever=retriever, verbose=True)\n\n\n@tool(&quot;FAQ&quot;)\ndef faq(intput: str) -&gt; str:\n    &quot;&quot;&quot;&quot;useful for when you need to answer questions about shopping policies, like return policy, shipping policy, etc.&quot;&quot;&quot;\n    return faq_chain.run(intput)\n\n@tool(&quot;Recommend Product&quot;)\ndef recommend_product(input: str) -&gt; str:\n    &quot;&quot;&quot;&quot;useful for when you need to search and recommend products and recommend it to the user&quot;&quot;&quot;\n    return product_chain.run(input)\n\ntools = [\n    Tool(\n        name = &quot;Search Order&quot;,func=search_order, \n        description=&quot;useful for when you need to answer questions about customers orders&quot;\n    ),\n    recommend_product, faq]\n\nagent = initialize_agent(tools, llm, agent=&quot;zero-shot-react-description&quot;, verbose=True)\n","like_count":0},{"had_liked":false,"id":379378,"user_name":"Penguin Shi","can_delete":false,"product_type":"c1","uid":3646806,"ip_address":"广东","ucode":"477A24D7ECE09A","user_header":"https://static001.geekbang.org/account/avatar/00/37/a5/56/b3cf71a9.jpg","comment_is_top":false,"comment_ctime":1691848429,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":5,"product_id":100541001,"comment_content":"本节，有三处代码需要调整。\n第一处：“使用第 15 讲介绍的 VectorDBQA 这个 LLMChain，把它也封装成一个 Tool。我们先把第 15 讲对应的代码搬运过来。”后面15讲的代码，需要调整代码，\nfrom langchain.llms import OpenAI\nfrom langchain import FAISS\nfrom langchain.embeddings import OpenAIEmbeddings\nfrom langchain.text_splitter import SpacyTextSplitter\nfrom langchain.chains import RetrievalQA\nfrom langchain.document_loaders import TextLoader\nfrom langchain.vectorstores.base import VectorStoreRetriever\nllm = OpenAI(temperature=0)\nloader = TextLoader(&#39;.&#47;data&#47;ecommerce_faq.txt&#39;)\ndocuments = loader.load()\ntext_splitter = SpacyTextSplitter(chunk_size=256, pipeline=&quot;zh_core_web_sm&quot;)\ntexts = text_splitter.split_documents(documents)\n\nembeddings = OpenAIEmbeddings()\n\ndocsearch = FAISS.from_documents(texts, embeddings)\nretriever = VectorStoreRetriever(vectorstore=docsearch)\nfaq_chain = RetrievalQA.from_llm(llm=llm, retriever=retriever, verbose=True)\n","like_count":0},{"had_liked":false,"id":376334,"user_name":"石头","can_delete":false,"product_type":"c1","uid":1013081,"ip_address":"北京","ucode":"D72F9EDFABFFBA","user_header":"https://static001.geekbang.org/account/avatar/00/0f/75/59/bd80584f.jpg","comment_is_top":false,"comment_ctime":1686714638,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":5,"product_id":100541001,"comment_content":"conversation_agent = initialize_agent(tools, chat_llm, \n                                      agent=&quot;conversational-react-description&quot;, \n                                      memory=memory, verbose=True, ai_prefix=&#39;输出请用中文&#39;)\n输出的还是英文呢？这个怎么解决","like_count":0},{"had_liked":false,"id":372752,"user_name":"Toni","can_delete":false,"product_type":"c1","uid":3206957,"ip_address":"瑞士","ucode":"E6B2FACCC1E000","user_header":"https://static001.geekbang.org/account/avatar/00/30/ef/2d/757bb0d3.jpg","comment_is_top":false,"comment_ctime":1681555259,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":5,"product_id":100541001,"comment_content":"对思考题的思考:\n经多轮对话后(例子里的第三轮对话)，AI 用英文回答了中文的 FAQ 问题，你能够尝试修改一下现在的代码，让 AI 用中文回复吗？\n\n连续的三个问题:\n\nquestion1 = &quot;我有一张订单，一直没有收到，能麻烦帮我查一下吗？&quot;\nanswer1 = conversation_agent.run(question1)\nprint(answer1)\n\nquestion2 = &quot;我的订单号是20230101ABC&quot;\nanswer2 = conversation_agent.run(question2)\nprint(answer2)\n\nquestion3 = &quot;你们的退货政策是怎么样的？&quot;\nanswer3 = conversation_agent.run(question3)\nprint(answer3)\n\nAI 的回答:\n\n&gt; Entering new AgentExecutor chain...\nThought: Do I need to use a tool? Yes\nAction: Search Order\nAction Input: 订单号码\nObservation: 请问您的订单号是多少？\n&gt; Finished chain.\n请问您的订单号是多少？\n\n&gt; Entering new AgentExecutor chain...\nThought: Do I need to use a tool? Yes\nAction: Search Order\nAction Input: 20230101ABC\nObservation: 尊敬的用户，感谢您选择我们的服务。以下是您的订单信息：\n订单号码：20230101ABC\n订单状态：已发货\n发货日期：2023年1月3日\n预计送达日期：2023年1月5日\n如果您有任何疑问或需要进一步的帮助，请随时联系我们。祝您购物愉快！\n&gt; Finished chain.\n尊敬的用户，感谢您选择我们的服务。以下是您的订单信息：\n订单号码：20230101ABC\n订单状态：已发货\n发货日期：2023年1月3日\n预计送达日期：2023年1月5日\n如果您有任何疑问或需要进一步的帮助，请随时联系我们。祝您购物愉快！\n\n&gt; Entering new AgentExecutor chain...\nThought: Do I need to use a tool? Yes\nAction: FAQ\nAction Input: &quot;退货政策&quot;\n&gt; Entering new VectorDBQA chain...\n&gt; Finished chain.\nObservation:  自收到商品之日起7天内，如产品未使用、包装完好，您可以申请退货。某些特殊商品可能不支持退货，请在购买前查看商品详情页面的退货政策。\n&gt; Finished chain.\n 自收到商品之日起7天内，如产品未使用、包装完好，您可以申请退货。某些特殊商品可能不支持退货，请在购买前查看商品详情页面的退货政策。","like_count":0}]}