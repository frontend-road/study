{"id":181886,"title":"40 |  信息流设计（二）：通用信息流系统的拉模式要如何做？","content":"<p>你好，我是唐扬。</p><p>在前一节课中，我带你了解了如何用推模式来实现信息流系统，从中你应该了解到了推模式存在的问题，比如它在面对需要支撑很大粉丝数量的场景时，会出现消息推送延迟、存储成本高、方案可扩展性差等问题。虽然我们也会有一些应对的措施，比如说选择插入性能更高的数据库存储引擎来提升数据写入速度，降低数据推送延迟；定期删除冷数据以减小存储成本等等，但是由于微博大V用户粉丝量巨大，如果我们使用推模式实现信息流系统，那么只能缓解这些用户的微博推送延迟问题，没有办法彻底解决。</p><p>这个时候你可能会问了：那么有没有一种方案可以一劳永逸地解决这个问题呢？当然有了，你不妨试试用拉模式来实现微博信息流系统。那么具体要怎么做呢？</p><h2>如何使用拉模式设计信息流系统</h2><p>所谓拉模式，就是指用户主动拉取他关注的所有人的微博，将这些微博按照发布时间的倒序进行排序和聚合之后，生成信息流数据的方法。</p><p>按照这个思路实现微博信息流系统的时候你会发现：用户的收件箱不再有用，因为信息流数据不再出自收件箱，而是出自发件箱。发件箱里是用户关注的所有人数据的聚合。因此用户在发微博的时候就只需要写入自己的发件箱，而不再需要推送给粉丝的收件箱了，这样在获取信息流的时候，就要查询发件箱的数据了。</p><!-- [[[read_end]]] --><p>这个逻辑我还用SQL的形式直观地表达出来，方便你理解。假设用户A关注了用户B、C、D，那么当用户B发送一条微博的时候，他会执行这样的操作：</p><pre><code>insert into outbox(userId, feedId, create_time) values(&quot;B&quot;, $feedId, $current_time); //写入B的发件箱\n</code></pre><p>当用户A想要获取他的信息流的时候，就要聚合B、C、D三个用户收件箱的内容了：</p><pre><code>select feedId from outbox where userId in (select userId from follower where fanId = &quot;A&quot;) order by create_time desc\n</code></pre><p><strong>你看，拉模式的实现思想并不复杂，并且相比推模式来说，它有几点明显的优势。</strong></p><p>首先，拉模式彻底解决了推送延迟的问题，大V发微博的时候不再需要推送到粉丝的收件箱，自然就不存在延迟的问题了。</p><p>其次，存储成本大大降低了。在推模式下，谢娜的粉丝有1.2亿，那么谢娜发送一条微博就要被复制1.2亿条，写入到存储系统中。在拉模式下只保留了发件箱，微博数据不再需要复制，成本也就随之降低了。</p><p>最后，功能扩展性更好了。比如，微博增加了分组的功能，而你想把关注的A和B分成一个单独的组，那么A和B发布的微博就形成了一个新的信息流，这个信息流要如何实现呢？很简单，你只需要查询这个分组下所有用户（也就是A和B），然后查询这些用户的发件箱，再把发件箱中的数据，按照时间倒序重新排序聚合就好了。</p><pre><code>List&lt;Long&gt; uids = getFromGroup(groupId); //获取分组下的所有用户\nLong&lt;List&lt;Long&gt;&gt; ids = new ArrayList&lt;List&lt;Long&gt;&gt;();\nfor(Long id : uids) {\n  ids.add(getOutboxByUid(id)); //获取发件箱的内容id列表\n}\nreturn merge(ids); //合并排序所有的id\n</code></pre><p>拉模式之所以可以解决推模式下的所有问题，是因为在业务上关注数始终是有上限的，那么它是不是一个无懈可击的方案呢？<strong>当然不是，拉模式也会有一些问题，在我看来主要有这样两点。</strong></p><p>第一点，不同于推模式下获取信息流的时候，只是简单地查询收件箱中的数据，在拉模式下，我们需要对多个发件箱的数据做聚合，这个查询和聚合的成本比较高。微博的关注上限是2000，假如你关注了2000人，就要查询这2000人发布的微博信息，然后再对查询出来的信息做聚合。</p><p>那么，如何保证在毫秒级别完成这些信息的查询和聚合呢？答案还是缓存。我们可以把用户发布的微博ID放在缓存中，不过如果把全部用户的所有微博都缓存起来，消耗的硬件成本也是很高的。所以我们需要关注用户浏览信息流的特点，看看是否可能对缓存的存储成本做一些优化。</p><p>在实际执行中，我们对用户的浏览行为做了分析，发现97%的用户都是在浏览最近5天之内的微博，也就是说，用户很少翻看五天之前的微博内容，所以我们只缓存了每个用户最近5天发布的微博ID。假设我们部署6个缓存节点来存储这些微博ID，在每次聚合时并行从这几个缓存节点中批量查询多个用户的微博ID，获取到之后再在应用服务内存中排序后就好了，这就是对缓存的6次请求，可以保证在5毫秒之内返回结果。</p><p>第二，缓存节点的带宽成本比较高。你想一下，假设微博信息流的访问量是每秒10万次请求，也就是说，每个缓存节点每秒要被查询10万次。假设一共部署6个缓存节点，用户人均关注是90，平均来说每个缓存节点要存储15个用户的数据。如果每个人平均每天发布2条微博，5天就是发布10条微博，15个用户就要存储150个微博ID。每个微博ID要是8个字节，150个微博ID大概就是1kB的数据，单个缓存节点的带宽就是1kB * 10万 = 100MB，基本上跑满了机器网卡带宽了。<strong>那么我们要如何对缓存的带宽做优化呢？</strong></p><p>在<a href=\"https://time.geekbang.org/column/article/151949\">14讲</a>中我提到，部署多个缓存副本提升缓存可用性，其实，缓存副本也可以分摊带宽的压力。我们知道在部署缓存副本之后，请求会先查询副本中的数据，只有不命中的请求才会查询主缓存的数据。假如原本缓存带宽是100M，我们部署4组缓存副本，缓存副本的命中率是60%，那么主缓存带宽就降到100M * 40% = 40M，而每组缓存副本的带宽为100M / 4 = 25M，这样每一组缓存的带宽都降为可接受的范围之内了。</p><p><img src=\"https://static001.geekbang.org/resource/image/67/3a/679c081c73c30ccc6dafc3f2cae0a13a.jpg?wh=1142*713\" alt=\"\"></p><p>在经过了上面的优化之后，基本上完成了基于拉模式信息流系统方案的设计，你在设计自己的信息流系统时可以参考借鉴这个方案。另外，使用缓存副本来抗流量也是一种常见的缓存设计思路，你在项目中必要的时候也可以使用。</p><h2>推拉结合的方案是怎样的</h2><p>但是，有的同学可能会说：我在系统搭建初期已经基于推模式实现了一套信息流系统，如果把它推倒重新使用拉模式实现的话，系统的改造成本未免太高了。有没有一种基于推模式的折中的方案呢？</p><p>其实我在网易微博的时候，网易微博的信息流就是基于推模式来实现的，当用户的粉丝量大量上涨之后，<strong>我们通过对原有系统的改造实现了一套推拉结合的方案，也能够基本解决推模式存在的问题，具体怎么做呢？</strong></p><p>方案的核心在于大V用户在发布微博的时候，不再推送到全量用户，而是只推送给活跃的用户。这个方案在实现的时候有几个关键的点。</p><p>首先，我们要如何判断哪些是大V用户呢？或者说，哪些用户在发送微博时需要推送全量用户，哪些用户需要推送活跃用户呢？在我看来，还是应该以粉丝数作为判断标准，比如，粉丝数超过50万就算作大V，需要只推送活跃用户。</p><p>其次，我们要如何标记活跃用户呢？活跃用户可以定义为最近几天内在微博中有过操作的用户，比如说刷新过信息流、发布过微博、转发评论点赞过微博，关注过其他用户等等，一旦有用户有过这些操作，我们就把他标记为活跃的用户。</p><p>而对大V来说，我们可以存储一个活跃粉丝的列表，这个列表里面就是我们标记的活跃用户。当某一个用户从不活跃用户变为活跃用户时，我们会查询这个用户的关注者中哪些是大V，然后把这个用户写入到这些大V的活跃粉丝列表里面，这个活跃粉丝列表是定长的，如果活跃粉丝数量超过了长度，就把最先加入的粉丝从列表里剔除，这样可以保证推送的效率。</p><p>最后，一个用户被从活跃粉丝列表中剔除，或者是他从不活跃变成了活跃后，由于他不在大V用户的活跃粉丝列表中，所以也就不会收到微博的实时推送，因此，我们需要异步地把大V用户最近发布的微博插入到他的收件箱中，保证他的信息流数据的完整性。</p><p><img src=\"https://static001.geekbang.org/resource/image/4a/55/4a92721244bd0c696abbbe03dafa5955.jpg?wh=1142*674\" alt=\"\"></p><p>采用推拉结合的方式可以一定程度上弥补推模式的缺陷，不过也带来了一些维护的成本，比如说系统需要维护用户的在线状态，还需要多维护一套活跃的粉丝列表数据，在存储上的成本就更高了。</p><p>因此，这种方式一般适合中等体量的项目，当粉丝量级在百万左右，活跃粉丝数量在10万级别时，一般可以实现比较低的信息传播延迟以及信息流获取延迟，但是当你的粉丝数量继续上涨，流量不断提升之后，无论是活跃粉丝的存储还是推送的延迟都会成为瓶颈，所以改成拉模式会更好的支撑业务。</p><h2>课程小结</h2><p>以上就是本节课的全部内容了。本节课我带你了解了基于拉模式和推拉结合模式实现信息流系统的方案，这里你需要了解的几个重点是：</p><ol>\n<li>在拉模式下，我们只需要保存用户的发件箱，用户的信息流是通过聚合关注者发件箱数据来实现的；</li>\n<li>拉模式会有比较大的聚合成本，缓存节点也会存在带宽的瓶颈，所以我们可以通过一些权衡策略尽量减少获取数据的大小，以及部署缓存副本的方式来抗并发；</li>\n<li>推拉结合的模式核心是只推送活跃的粉丝用户，需要维护用户的在线状态以及活跃粉丝的列表，所以需要增加多余的空间成本来存储，这个你需要来权衡。</li>\n</ol><p>拉模式和推拉结合模式比较适合微博这种粉丝量很大的业务场景，因为它们都会有比较可控的消息推送延迟。你可以看到，在这两节课程中我们灵活使用数据库分库分表、缓存消息队列、发号器等技术，实现了基于推模式、拉模式以及推拉结合模式的信息流系统，你在做自己系统的方案设计时，应该充分发挥每种技术的优势，权衡业务自身的特性，最终实现技术和业务上的平衡，也就是既能在业务上满足用户需求，又能在技术上保证系统的高性能和高可用。</p><h2>一课一思</h2><p>在你的项目中是否有使用过拉模式来实现信息流系统呢？在方案设计过程中都遇到过哪些问题呢？你是如何解决的呢？欢迎在留言区与我一同讨论。</p><p>最后，感谢你的阅读，如果这篇文章让你有所收获，也欢迎你将它分享给更多的朋友。</p>","neighbors":{"left":{"article_title":"39 | 信息流设计（一）：通用信息流系统的推模式要如何做？","id":181091},"right":{"article_title":"结束语 | 学不可以已","id":182203}},"comments":[{"had_liked":false,"id":181204,"user_name":"👽","can_delete":false,"product_type":"c1","uid":1274117,"ip_address":"","ucode":"D313AF941B412D","user_header":"https://static001.geekbang.org/account/avatar/00/13/71/05/db554eba.jpg","comment_is_top":false,"comment_ctime":1582516715,"is_pvip":false,"replies":[{"id":"71114","content":"是的，微博的场景用拉比较合适","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1583115564,"ip_address":"","comment_id":181204,"utype":1}],"discussion_count":2,"race_medal":0,"score":"57417091563","product_id":100035801,"comment_content":"推 的概念近似于邮箱，杂志提供商，把杂志直接投到每订阅用户的邮箱里；<br>拉 的概念类似于广告牌，广告商只把自己的广告挂出来，而用户端来获取自己想看的广告内容；<br><br>起初用户量小，微博删除不频繁，可以用推。让邮递员挨个去送就好。<br>随着用户体量增大，邮递员跑步过来了。于是干脆直接改用广告牌的形式，直接发布，谁爱看谁看。<br><br>另外，就业务与现实中的例子的考量，个人认为拉更合适。因为收件箱的概念，只适用于不频繁的修改。类似于邮件，发到你邮箱里就是发到了。而微博，发到你收件箱了，如果删除了，还得从你收件箱里把邮件拿出来。就不是很合理。<br>","like_count":14,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":484958,"discussion_content":"是的，微博的场景用拉比较合适","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1583115564,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1592279,"avatar":"https://static001.geekbang.org/account/avatar/00/18/4b/d7/f46c6dfd.jpg","nickname":"William Ning","note":"","ucode":"4DB8D05E69E5F3","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":375071,"discussion_content":"而用户端来获取自己想看的广告内容；这里的客户端是谁？\n\n于是干脆直接改用广告牌的形式，直接发布，谁爱看谁看。 这里的谁爱看谁看，认为表述不当～","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1621474980,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":165432,"user_name":"小白哥哥","can_delete":false,"product_type":"c1","uid":1059593,"ip_address":"","ucode":"A02A297C7688A4","user_header":"https://static001.geekbang.org/account/avatar/00/10/2b/09/2171f9a3.jpg","comment_is_top":false,"comment_ctime":1577237294,"is_pvip":true,"replies":[{"id":"63082","content":"剔除了无非就是无法实时获取到消息，但是他还是会被加入到活跃粉丝列表中，而且，在刷新信息流的时候可以拉取大V的发件箱做数据补偿","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1577242777,"ip_address":"","comment_id":165432,"utype":1}],"discussion_count":1,"race_medal":0,"score":"40231942958","product_id":100035801,"comment_content":"“如果活跃粉丝数量超过了长度，就把最先加入的粉丝从列表里剔除”，这块是不是会有问题。<br>最先假如的活跃粉丝很可能一直是活跃的，因为长度有限的原因就把他挑出来会不会不太好。","like_count":10,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":479157,"discussion_content":"剔除了无非就是无法实时获取到消息，但是他还是会被加入到活跃粉丝列表中，而且，在刷新信息流的时候可以拉取大V的发件箱做数据补偿","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577242777,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":165721,"user_name":"旅途","can_delete":false,"product_type":"c1","uid":1212902,"ip_address":"","ucode":"5022477E8E9441","user_header":"https://static001.geekbang.org/account/avatar/00/12/81/e6/6cafed37.jpg","comment_is_top":false,"comment_ctime":1577289018,"is_pvip":false,"replies":[{"id":"63260","content":"1. 但是每一个缓存的带宽降低了<br>2. 不活跃用户是不推送，但是不活跃用户上线后会拉取发件箱，所以叫推拉结合","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1577348610,"ip_address":"","comment_id":165721,"utype":1}],"discussion_count":3,"race_medal":0,"score":"23052125498","product_id":100035801,"comment_content":"老师有两个地方没懂希望能解答下<br>1.缓存副本  100m缓存了60% 使用了60m带宽 ,主缓存 消耗剩下40%就是40m带宽 这样的话 加起来不还是100m带宽吗<br>2.推拉模式的例子,只有活跃用户是实时推送,不活跃用户异步推送,这样的话不是都使用的推模式吗？","like_count":5,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":479267,"discussion_content":"1. 但是每一个缓存的带宽降低了\n2. 不活跃用户是不推送，但是不活跃用户上线后会拉取发件箱，所以叫推拉结合","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577348610,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1153168,"avatar":"https://static001.geekbang.org/account/avatar/00/11/98/90/d9659fae.jpg","nickname":"心语心愿","note":"","ucode":"13BA3F5D5A46C9","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":555384,"discussion_content":"我也觉得说的有问题，无论是同步还是异步推，实际用的都是推，真正的推拉模式结合里的拉取应该是不活跃的用户自己上线之后再去拉取才对，而不是走的异步推送，前后矛盾都","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1646887481,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1111543,"avatar":"https://static001.geekbang.org/account/avatar/00/10/f5/f7/12559f36.jpg","nickname":"小易","note":"","ucode":"9C003B267635B5","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":102145,"discussion_content":"1.我的理解是基本缓存和缓存副本不在同一台服务器上，分布式缓存\n2.因为用到了收件箱，所以是推模式的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577326318,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":165620,"user_name":"QQ怪","can_delete":false,"product_type":"c1","uid":1211223,"ip_address":"","ucode":"1A39B8433D9208","user_header":"https://static001.geekbang.org/account/avatar/00/12/7b/57/a9b04544.jpg","comment_is_top":false,"comment_ctime":1577269508,"is_pvip":false,"replies":[{"id":"63151","content":"谢谢，我只是站在前人的肩膀上😂😂","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1577275771,"ip_address":"","comment_id":165620,"utype":1}],"discussion_count":1,"race_medal":0,"score":"23052105988","product_id":100035801,"comment_content":"这两篇真的实践出真理，好厉害老师","like_count":6,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":479231,"discussion_content":"谢谢，我只是站在前人的肩膀上😂😂","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577275771,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":202677,"user_name":"flycun","can_delete":false,"product_type":"c1","uid":1001231,"ip_address":"","ucode":"AE4C77CCE57D6B","user_header":"https://static001.geekbang.org/account/avatar/00/0f/47/0f/c1b51e25.jpg","comment_is_top":false,"comment_ctime":1586052593,"is_pvip":true,"replies":[{"id":"75850","content":"谢谢🙏","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1586089221,"ip_address":"","comment_id":202677,"utype":1}],"discussion_count":1,"race_medal":0,"score":"14470954481","product_id":100035801,"comment_content":"干货满满","like_count":4,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":490651,"discussion_content":"谢谢🙏","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1586089221,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":175370,"user_name":"nestle","can_delete":false,"product_type":"c1","uid":1762252,"ip_address":"","ucode":"469800BED81B54","user_header":"https://static001.geekbang.org/account/avatar/00/1a/e3/cc/0947ff0b.jpg","comment_is_top":false,"comment_ctime":1580695952,"is_pvip":false,"replies":[{"id":"68352","content":"当然了~","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1580872459,"ip_address":"","comment_id":175370,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10170630544","product_id":100035801,"comment_content":"请问缓存中只放微博ID，实际内容还要去DB查吗？","like_count":3,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":482708,"discussion_content":"当然了~","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1580872459,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":264496,"user_name":"null","can_delete":false,"product_type":"c1","uid":1024294,"ip_address":"","ucode":"F9039EFED6B55D","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/PiajxSqBRaELZPnUAiajaR5C25EDLWeJURggyiaOP5GGPe2qlwpQcm5e3ybib8OsP4tvddFDLVRSNNGL5I3SFPJHsA/132","comment_is_top":false,"comment_ctime":1606479507,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"5901446803","product_id":100035801,"comment_content":"当粉丝量级在百万左右，活跃粉丝数量在 10 万级别时，一般可以实现比较低的信息传播延迟以及信息流获取延迟，但是当你的粉丝数量继续上涨，流量不断提升之后，无论是活跃粉丝的存储还是推送的延迟都会成为瓶颈。<br><br><br>拉模式和推拉结合模式比较适合微博这种粉丝量很大的业务场景，因为它们都会有比较可控的消息推送延迟。<br><br><br>这两段是不是前后矛盾了？<br>前一段的意思是推拉结合模式，不太适合粉丝数量大的场景。<br>后一段又说推拉结合模式，比较适合微博这种大粉丝量的场景。","like_count":1,"discussions":[{"author":{"id":1886331,"avatar":"https://static001.geekbang.org/account/avatar/00/1c/c8/7b/153181d7.jpg","nickname":"夜辉","note":"","ucode":"9421385F51FF9E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":365064,"discussion_content":"当粉丝量级在百万左右，活跃粉丝数量在 10 万级别时，推拉结合模式\n量级再增大，建议使用拉模式","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1617699993,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":259552,"user_name":"静心","can_delete":false,"product_type":"c1","uid":1335457,"ip_address":"","ucode":"EB264FA6519FDA","user_header":"https://static001.geekbang.org/account/avatar/00/14/60/a1/8f003697.jpg","comment_is_top":false,"comment_ctime":1604753161,"is_pvip":true,"discussion_count":1,"race_medal":5,"score":"5899720457","product_id":100035801,"comment_content":"请教老师：select in 2000个用户，会不会有数据库查询的性能瓶颈？在毫秒级能查出来数据吗？用的是什么数据库？","like_count":1,"discussions":[{"author":{"id":2045659,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/36/db/03a41c33.jpg","nickname":"doosheng","note":"","ucode":"A4CDACDBEF855A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":555155,"discussion_content":"顶一下，没人回答一下吗","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1646788816,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":235114,"user_name":"rain","can_delete":false,"product_type":"c1","uid":1101263,"ip_address":"","ucode":"2BCA7AEE9F002E","user_header":"https://static001.geekbang.org/account/avatar/00/10/cd/cf/9525bed8.jpg","comment_is_top":false,"comment_ctime":1594895341,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5889862637","product_id":100035801,"comment_content":"如果关注了2000个用户，并行读redis会造成redis阻塞吧？","like_count":1},{"had_liked":false,"id":234536,"user_name":"X","can_delete":false,"product_type":"c1","uid":1102065,"ip_address":"","ucode":"B5CA13435613D8","user_header":"https://static001.geekbang.org/account/avatar/00/10/d0/f1/432e0476.jpg","comment_is_top":false,"comment_ctime":1594715352,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5889682648","product_id":100035801,"comment_content":"做过类似的系统，一开始用推的模式，用户每发布一条内容，就会全量写入到所有粉丝对应的timeline表中，这里用的是nosql，后来引入了大V的概念，如把粉丝数超过1W的即认定为大V，大V发布的内容不同步到粉丝的timeline表中，这样用户在刷信息流的时候就需要采用推拉结合的模式，即将timeline表中的数据与该用户关注的所有大V的发布内容全部查出来后做聚合，这样应该比单纯的拉模式的聚合成本要低。","like_count":1},{"had_liked":false,"id":233936,"user_name":"rumly","can_delete":false,"product_type":"c1","uid":1142273,"ip_address":"","ucode":"96F5FBC11FA9EB","user_header":"https://static001.geekbang.org/account/avatar/00/11/6e/01/a0df95a2.jpg","comment_is_top":false,"comment_ctime":1594523507,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5889490803","product_id":100035801,"comment_content":"文中提到：“我们对用户的浏览行为做了分析，发现 97% 的用户都是在浏览最近 5 天之内的微博，也就是说，用户很少翻看五天之前的微博内容，所以我们只缓存了每个用户最近 5 天发布的微博 ID”；那么对于另外的3%的用户该如何处理？走数据库查询吗？   另外，如果用户关注的人最近5天的更新只有1条，那么用户的首页如何展示？感谢。。。","like_count":1},{"had_liked":false,"id":195110,"user_name":"zenk","can_delete":false,"product_type":"c1","uid":1013669,"ip_address":"","ucode":"B235D5EBCF49BC","user_header":"https://static001.geekbang.org/account/avatar/00/0f/77/a5/c5ae871d.jpg","comment_is_top":false,"comment_ctime":1585137791,"is_pvip":true,"replies":[{"id":"75853","content":"谢谢🙏","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1586089249,"ip_address":"","comment_id":195110,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5880105087","product_id":100035801,"comment_content":"干货，深感老师功力深厚","like_count":1,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":488978,"discussion_content":"谢谢🙏","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1586089249,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":192752,"user_name":"kamida","can_delete":false,"product_type":"c1","uid":1904146,"ip_address":"","ucode":"16D7CA59870AC0","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/jXbwicoDwia7ooDfwBTRyvNYQkefnVwF1CMicMS8FqKfuFAdvVZo2pqc4ic0R9kSdHTIxaE6YyqxwX8BdNGv5PqSIw/132","comment_is_top":false,"comment_ctime":1584871160,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"5879838456","product_id":100035801,"comment_content":"redis在集群模式下好像是不支持多个key的 所以如果我们要找九十个用户的最近微博 是不是得一个用户一个用户的从redis查啊","like_count":2,"discussions":[{"author":{"id":1886331,"avatar":"https://static001.geekbang.org/account/avatar/00/1c/c8/7b/153181d7.jpg","nickname":"夜辉","note":"","ucode":"9421385F51FF9E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":365063,"discussion_content":"redis mget就是返回所有(一个或多个)给定 key 的值","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1617699849,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":191870,"user_name":"guyun","can_delete":false,"product_type":"c1","uid":1519606,"ip_address":"","ucode":"2A1D932496BF5E","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eoCHmb4h3vIr7FIbsibajkSdIIeaL9sWsHzrHItcich7ficeLUfLlmdaRA4ZrYKic4jZ3at6CSq7UNPtw/132","comment_is_top":false,"comment_ctime":1584801828,"is_pvip":false,"replies":[{"id":"73904","content":"其实并发不会到单个节点300万，一般整体核心缓存几十万的qps就差不多了<br>","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1585020565,"ip_address":"","comment_id":191870,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5879769124","product_id":100035801,"comment_content":"“在拉模式下只保留了发件箱，微博数据不再需要复制，成本也就随之降低了。”如果谢娜发送了一条微博，1.2亿粉丝中有2千万是活跃粉丝，其中3百万正在刷feed，单个node肯定扛不住这么高的读请求（因为是同一个热key）。那么只能用多个副本来解决分担了。但是假设一个副本能扛住10万读请求，那么岂不是要30个副本来抗？而且一个node上可能有多个热key存在。望老师赐教。","like_count":1,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":488275,"discussion_content":"其实并发不会到单个节点300万，一般整体核心缓存几十万的qps就差不多了\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585020565,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":186138,"user_name":"Li Yao","can_delete":false,"product_type":"c1","uid":1129838,"ip_address":"","ucode":"703E1E5505F70D","user_header":"https://static001.geekbang.org/account/avatar/00/11/3d/6e/60680aa4.jpg","comment_is_top":false,"comment_ctime":1583765304,"is_pvip":false,"replies":[{"id":"72206","content":"扩容主缓存会造成命中率下降，并且同一组缓存节点数不能过多","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1584019933,"ip_address":"","comment_id":186138,"utype":1}],"discussion_count":3,"race_medal":0,"score":"5878732600","product_id":100035801,"comment_content":"为什么必须用缓存副本，而不是水平扩容主缓存的方式来缓解网卡压力呢？","like_count":1,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":486641,"discussion_content":"扩容主缓存会造成命中率下降，并且同一组缓存节点数不能过多","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584019933,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1015754,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/7f/ca/ea85bfdd.jpg","nickname":"helloworld","note":"","ucode":"00DF2FEC58D2E6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":296562,"discussion_content":"为什么扩容主缓存会导致命中率下降呢？","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1596589446,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1886331,"avatar":"https://static001.geekbang.org/account/avatar/00/1c/c8/7b/153181d7.jpg","nickname":"夜辉","note":"","ucode":"9421385F51FF9E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":365069,"discussion_content":"感觉老师说的主缓存集群，同一组缓存节点数过大，会导致命中率下降\n\n单个缓存扩大内容肯定能提高命中率（极限想象是数据库所有的数据都在缓存中）\n但单机能用的最大内存是有限的（redis单节点最大10G），处理会更慢，而且持久化（rdb和aof）也会受到影响","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1617700627,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":174452,"user_name":"南山","can_delete":false,"product_type":"c1","uid":1119593,"ip_address":"","ucode":"94656FE4A6C378","user_header":"https://static001.geekbang.org/account/avatar/00/11/15/69/187b9968.jpg","comment_is_top":false,"comment_ctime":1580214636,"is_pvip":true,"replies":[{"id":"68365","content":"谢谢~","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1580873118,"ip_address":"","comment_id":174452,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5875181932","product_id":100035801,"comment_content":"春节把整个专栏理了一边，收获颇多，非常喜欢老师的实际案例的分享，结合理论，每篇都都值得细读借鉴。<br>后续希望有机会应用于实际工作！","like_count":2,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":482405,"discussion_content":"谢谢~","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1580873118,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":165452,"user_name":"黄海峰","can_delete":false,"product_type":"c1","uid":1275357,"ip_address":"","ucode":"E9340719BC96B2","user_header":"https://static001.geekbang.org/account/avatar/00/13/75/dd/9ead6e69.jpg","comment_is_top":false,"comment_ctime":1577239551,"is_pvip":false,"replies":[{"id":"63081","content":"谢谢，有帮助就好~","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1577242719,"ip_address":"","comment_id":165452,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5872206847","product_id":100035801,"comment_content":"这个专栏真的篇篇干货，每篇都能让我理通一些以前似懂非懂的疑惑，忍不住留言感恩一下","like_count":1,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":479165,"discussion_content":"谢谢，有帮助就好~","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577242719,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":337698,"user_name":"哆啦C梦丶cium","can_delete":false,"product_type":"c1","uid":1711294,"ip_address":"","ucode":"BED9D6BF0DED69","user_header":"https://static001.geekbang.org/account/avatar/00/1a/1c/be/bc686e38.jpg","comment_is_top":false,"comment_ctime":1646981606,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1646981606","product_id":100035801,"comment_content":"老师你好，请问下，用户上了微博后首次会拉取发件箱微博数据，后面如果用户关注的人刚好发了微博，用户这边是如何实时感知的并展示的？是定时轮训后端接口嘛？","like_count":0},{"had_liked":false,"id":264492,"user_name":"null","can_delete":false,"product_type":"c1","uid":1024294,"ip_address":"","ucode":"F9039EFED6B55D","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/PiajxSqBRaELZPnUAiajaR5C25EDLWeJURggyiaOP5GGPe2qlwpQcm5e3ybib8OsP4tvddFDLVRSNNGL5I3SFPJHsA/132","comment_is_top":false,"comment_ctime":1606478447,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1606478447","product_id":100035801,"comment_content":"原文：<br>最后，一个用户被从活跃粉丝列表中剔除，或者是他从不活跃变成了活跃后，由于他不在大 V 用户的活跃粉丝列表中，所以也就不会收到微博的实时推送，因此，我们需要异步地把大 V 用户最近发布的微博插入到他的收件箱中，保证他的信息流数据的完整性。<br><br>这一段是不是2两个表述不对的地方：<br>1. 他从不活跃变成了活跃后<br>从活跃变为不活跃？<br><br><br><br>2. 由于他不在大 V 用户的活跃粉丝列表中，所以也就不会收到微博的实时推送，因此，我们需要异步地把大 V 用户最近发布的微博插入到他的收件箱中，保证他的信息流数据的完整性。<br><br>写入收件箱，不就是推模式么？推模式是针对活跃用户的吧？非活跃粉丝，主动去 outbox 拉取并聚合消息。<br><br>还是说上述2点是我理解错了，谢谢！","like_count":0,"discussions":[{"author":{"id":1886331,"avatar":"https://static001.geekbang.org/account/avatar/00/1c/c8/7b/153181d7.jpg","nickname":"夜辉","note":"","ucode":"9421385F51FF9E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":365065,"discussion_content":"因为不活跃之前，用户需要主动拉才能获取完整的信息\n因为将他变为活跃用户之前，主动拉一次，补充之前没收到的信息","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1617700076,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":264329,"user_name":"null","can_delete":false,"product_type":"c1","uid":1024294,"ip_address":"","ucode":"F9039EFED6B55D","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/PiajxSqBRaELZPnUAiajaR5C25EDLWeJURggyiaOP5GGPe2qlwpQcm5e3ybib8OsP4tvddFDLVRSNNGL5I3SFPJHsA/132","comment_is_top":false,"comment_ctime":1606440775,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1606440775","product_id":100035801,"comment_content":"文章开始时，所用用户共用一个 outbox：<br>select feedId from outbox where userId in (select userId from follower where fanId = &quot;A&quot;) order by create_time desc<br><br>而之后介绍却是所有用户不再共用 outbox 表：<br>for(Long id : uids) {<br>  ids.add(getOutboxByUid(id)); &#47;&#47;获取发件箱的内容id列表<br>}<br><br><br>这是因为消息变多后，outbox 按 uid 分库分表了么？谢谢老师。","like_count":0,"discussions":[{"author":{"id":1886331,"avatar":"https://static001.geekbang.org/account/avatar/00/1c/c8/7b/153181d7.jpg","nickname":"夜辉","note":"","ucode":"9421385F51FF9E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":365068,"discussion_content":"outbox是表\nids是一个数组的数组，记录用户每个关注的人的所有微博\n业务逻辑跟底层存储逻辑不直接相关","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1617700294,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":215721,"user_name":"钱","can_delete":false,"product_type":"c1","uid":1009652,"ip_address":"","ucode":"2C92A243A463D4","user_header":"https://static001.geekbang.org/account/avatar/00/0f/67/f4/9a1feb59.jpg","comment_is_top":false,"comment_ctime":1589083960,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1589083960","product_id":100035801,"comment_content":"这种系统没做过，也许以后有机会吧！<br>先积累一下见识，见识一下思路，希望有机会玩一把！","like_count":0},{"had_liked":false,"id":186261,"user_name":"Geeker","can_delete":false,"product_type":"c1","uid":1896510,"ip_address":"","ucode":"937B190AE0EC6F","user_header":"https://static001.geekbang.org/account/avatar/00/1c/f0/3e/f9f021bf.jpg","comment_is_top":false,"comment_ctime":1583810898,"is_pvip":false,"replies":[{"id":"72205","content":"谢谢鼓励","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1584019869,"ip_address":"","comment_id":186261,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1583810898","product_id":100035801,"comment_content":" 👍  👍","like_count":0,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":486696,"discussion_content":"谢谢鼓励","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584019869,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":185565,"user_name":"高源","can_delete":false,"product_type":"c1","uid":1048887,"ip_address":"","ucode":"751B41FD38EF7D","user_header":"https://static001.geekbang.org/account/avatar/00/10/01/37/12e4c9c9.jpg","comment_is_top":false,"comment_ctime":1583635061,"is_pvip":false,"replies":[{"id":"72165","content":"可以看看服务端是不是还保留着原有客户端的连接","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1584011206,"ip_address":"","comment_id":185565,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1583635061","product_id":100035801,"comment_content":"老师最近遇到问题，就是开发的服务端环境win下，客户端嵌入式Linux，例如第一天服务端和客户端正常连接工作，从早上8点到下午17点，客户端电源关闭，非正常退出，服务端心跳检测客户端，客户端不在踢掉，一直开着服务端到第二天早上8点，客户端再次连接服务端，发现客户端反映是能连接上，但是发送数据包给服务端没回应，我查一下服务端日志没有异常，认真核查发现服务端连记录客户端连接的日志都没有，如果这个时候重启服务端马上正常一点问题没有了，此现象只有服务端长时间开着不退出，并且客户端不正常退出，才会有此现象，不知道怎么排查问题了，请教老师，谢谢","like_count":0,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":486418,"discussion_content":"可以看看服务端是不是还保留着原有客户端的连接","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584011206,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1048887,"avatar":"https://static001.geekbang.org/account/avatar/00/10/01/37/12e4c9c9.jpg","nickname":"高源","note":"","ucode":"751B41FD38EF7D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":203573,"discussion_content":"老师我现在怀疑是通过平时查看原有客户端连接是正常断开的，即使没断开，tcp最多4分钟就处理回收释放了，但socket我还是确定不了到底有问题没有，还一个接收处理解析数据包线程池，我十个模块就十个线程池，有并发问题，发生问题的时候也是没数据包进来解析，我现在也没啥好的工具和方法来排除掉，只能猜到这两点，因为现象不是总能出来，线程池也有不工作的时候吗，也不好排除","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584057838,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":178362,"user_name":"benny","can_delete":false,"product_type":"c1","uid":1123043,"ip_address":"","ucode":"E2F30AF0C808D9","user_header":"https://static001.geekbang.org/account/avatar/00/11/22/e3/510b69f9.jpg","comment_is_top":false,"comment_ctime":1581669409,"is_pvip":false,"replies":[{"id":"69657","content":"是的 大V的肯定会尽量保证缓存命中的","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1582001353,"ip_address":"","comment_id":178362,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1581669409","product_id":100035801,"comment_content":"可不可以去拉大v的feed，而且可以将这些feed的具体内容缓存，省去访问数据库-- 毕竟一个大V的feed会被很多粉丝看到。普通用户的feed推到收件箱，然后推拉结果再按照时间排序。","like_count":0,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":483774,"discussion_content":"是的 大V的肯定会尽量保证缓存命中的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582001353,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":177559,"user_name":"javaworker","can_delete":false,"product_type":"c1","uid":1056209,"ip_address":"","ucode":"ABF9DDDBD3BDBF","user_header":"https://static001.geekbang.org/account/avatar/00/10/1d/d1/f427b83e.jpg","comment_is_top":false,"comment_ctime":1581421991,"is_pvip":true,"replies":[{"id":"68987","content":"一个微博可能会存在多个列表中，如果列表中缓存了微博的内容，就会比较占空间","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1581490078,"ip_address":"","comment_id":177559,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1581421991","product_id":100035801,"comment_content":"老师，如果缓存只放微博ID的话，如果我关注的微博有100个新增微博，难道还要从缓存中查到100个微博ID，然后再访问数据库查处微博标题和内容吗？如果按微博ID分表后，是不是多好多次数据库访问，这样设计有什么好处吗？为什么不把微博标题和内容都放到缓存？这样就避免再次访问数据库了啊？劳烦老师指点","like_count":0,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":483465,"discussion_content":"一个微博可能会存在多个列表中，如果列表中缓存了微博的内容，就会比较占空间","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1581490078,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":171362,"user_name":"longslee","can_delete":false,"product_type":"c1","uid":1465986,"ip_address":"","ucode":"C24E32E5B1B6F5","user_header":"https://static001.geekbang.org/account/avatar/00/16/5e/82/438c8534.jpg","comment_is_top":false,"comment_ctime":1578908077,"is_pvip":false,"replies":[{"id":"66909","content":"阵亡了有很多年了","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1579228495,"ip_address":"","comment_id":171362,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1578908077","product_id":100035801,"comment_content":"打卡。看了两篇，然后我真不知道网易还有微博::&gt;_&lt;::","like_count":0,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":481315,"discussion_content":"阵亡了有很多年了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579228495,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1886331,"avatar":"https://static001.geekbang.org/account/avatar/00/1c/c8/7b/153181d7.jpg","nickname":"夜辉","note":"","ucode":"9421385F51FF9E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":365071,"discussion_content":"腾讯微博2020年底阵亡","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1617701291,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":166685,"user_name":"Jxin","can_delete":false,"product_type":"c1","uid":1251111,"ip_address":"","ucode":"4C03928388C413","user_header":"https://static001.geekbang.org/account/avatar/00/13/17/27/ec30d30a.jpg","comment_is_top":false,"comment_ctime":1577543410,"is_pvip":false,"replies":[{"id":"63853","content":"差不多吧 需要知道在哪一个节点上","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1577586497,"ip_address":"","comment_id":166685,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1577543410","product_id":100035801,"comment_content":"1.闲时非活跃列表的活跃用户的信息同步。这个感觉也可以有。一礼拜没登陆的用户可以跳过，这种用户登陆时拉能更好的优化数据传输。<br><br>2.分到6个缓存节点各自做批量拉取，能理解。但如果是redis集群，我是不是得再业务层再实现一套一样的分槽算法？","like_count":0,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":479590,"discussion_content":"差不多吧 需要知道在哪一个节点上","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577586497,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":166197,"user_name":"星空123","can_delete":false,"product_type":"c1","uid":1596920,"ip_address":"","ucode":"E998A7C585671B","user_header":"https://static001.geekbang.org/account/avatar/00/18/5d/f8/7de2c1cc.jpg","comment_is_top":false,"comment_ctime":1577414456,"is_pvip":false,"replies":[{"id":"63454","content":"谢谢关注，感谢一路相伴，祝君前程似锦","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1577491531,"ip_address":"","comment_id":166197,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1577414456","product_id":100035801,"comment_content":"老师666","like_count":0,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":479437,"discussion_content":"谢谢关注，感谢一路相伴，祝君前程似锦","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577491531,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":166092,"user_name":"阿土","can_delete":false,"product_type":"c1","uid":1183019,"ip_address":"","ucode":"2DBEAD80B0CA3C","user_header":"https://static001.geekbang.org/account/avatar/00/12/0d/2b/4814d3db.jpg","comment_is_top":false,"comment_ctime":1577385859,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1577385859","product_id":100035801,"comment_content":"老师你好，查询后数据聚合的时候，分页怎么做的呢？","like_count":0},{"had_liked":false,"id":165998,"user_name":"任鹏斌","can_delete":false,"product_type":"c1","uid":1104086,"ip_address":"","ucode":"34319B05EA6E74","user_header":"https://static001.geekbang.org/account/avatar/00/10/d8/d6/47da34bf.jpg","comment_is_top":false,"comment_ctime":1577360666,"is_pvip":false,"replies":[{"id":"63304","content":"感谢您的一路陪伴，㊗️前程似锦～","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1577397800,"ip_address":"","comment_id":165998,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1577360666","product_id":100035801,"comment_content":"打个卡结束了，第二遍好好总结下","like_count":0,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":479346,"discussion_content":"感谢您的一路陪伴，㊗️前程似锦～","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577397800,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":165825,"user_name":"高源","can_delete":false,"product_type":"c1","uid":1048887,"ip_address":"","ucode":"751B41FD38EF7D","user_header":"https://static001.geekbang.org/account/avatar/00/10/01/37/12e4c9c9.jpg","comment_is_top":false,"comment_ctime":1577327702,"is_pvip":false,"replies":[{"id":"63261","content":"说实话，我没看懂。。是说要传递日志和业务数据，然后要保证业务处理速度？<br><br>","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1577348817,"ip_address":"","comment_id":165825,"utype":1}],"discussion_count":5,"race_medal":0,"score":"1577327702","product_id":100035801,"comment_content":"老师向你请教问题，开发的服务端程序与客户端通信现在连接有10个，接收发送socket，现在客户端发送了日志或报警信息都是毫秒级的2到3毫秒的日志和报警上来，中间还有业务交互现在能收的过来，处理上用队列，而且涉及业务的要马上响应超时时间2秒，消息日志报警业务都上来，怎么提高处理速度，业务上有顺序的，提高吞吐率","like_count":0,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":479284,"discussion_content":"说实话，我没看懂。。是说要传递日志和业务数据，然后要保证业务处理速度？\n\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577348817,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1048887,"avatar":"https://static001.geekbang.org/account/avatar/00/10/01/37/12e4c9c9.jpg","nickname":"高源","note":"","ucode":"751B41FD38EF7D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":103822,"discussion_content":"服务端连接是硬件设备与硬件设备上的Linux嵌入式板子通信交互","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577396053,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1183019,"avatar":"https://static001.geekbang.org/account/avatar/00/12/0d/2b/4814d3db.jpg","nickname":"阿土","note":"","ucode":"2DBEAD80B0CA3C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":103808,"discussion_content":"像日志报警这类数据属于运维类的，可以将他们单独出来作为微服务与业务系统解耦，从而提升效率与稳定性","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577385411,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1048887,"avatar":"https://static001.geekbang.org/account/avatar/00/10/01/37/12e4c9c9.jpg","nickname":"高源","note":"","ucode":"751B41FD38EF7D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":102569,"discussion_content":"服务端接收下边多个客户端发来的日志，报警，还有业务信息。日志和报警是2到3毫秒1条信息量比较大的，另外业务这个还要保证正常回复客户端，不能超时了超时时间2秒。我的想法是接收到消息后如何现在使用并发队列处理的话发现cpu使用率达到20％，改成普通队列加锁处理，cpu不高了，但处理效率降低了，有没有两者都能满足的方法，就是消息进来马上处理完毕，后台和前端马上实时显示，我们这实时性要求高，提高服务端处理能力。例如现在10个客户端连接服务端2毫秒不停发消息给服务端，服务器马上都能处理掉","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577354672,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1048887,"avatar":"https://static001.geekbang.org/account/avatar/00/10/01/37/12e4c9c9.jpg","nickname":"高源","note":"","ucode":"751B41FD38EF7D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":102561,"discussion_content":"对的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577353937,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]}]}