{"id":268754,"title":"05｜多文件打开与缓冲区：复制粘贴的正确姿势","content":"<p>你好，我是吴咏炜。</p><p>在前面的几讲里，我们介绍了 Vim 的基本命令和配置。有了这些基本功，单个文件的基本编辑对你来说应该已经不成问题了。不过，显然我们在工作和生活中不可能只用一个文件包打天下，你肯定还会遇到需要同时编辑多个文件的情况。今天，我们就来细细讨论一下这个话题，什么是编辑多个文件的正确姿势。</p><p>先来假设一个简单的使用场景，我们现在需要在某个目录下的所有 .cpp 和 .h 文件开头贴入一段版权声明，该如何操作？</p><h2>单文件的打开方式</h2><h3>图形界面</h3><p>使用图形界面的话，我们可以在操作系统的资源管理器里进入到合适的目录，然后逐个使用 Vim 来打开文件。我们可以使用右键菜单（“Edit with Vim”、“Open with…”等），也可以直接把文件拖拽到 Vim 里。使用“文件 &gt; 打开”（File &gt; Open）菜单当然也是一种选择，但这需要你记住上次打开到第几个文件，并不如使用资源管理器方便。</p><p>使用这几种编辑方式的话，你可以把需要粘贴的内容放到操作系统的剪贴板里，然后在图形界面的 Vim 里用以下方法之一粘贴进去（当然，如果光标不在开头的话，先用鼠标或用 <code>gg</code>  命令跳转到开头）：</p><ul>\n<li>正常模式 Vim 命令 <code>\"+P</code>（意义我们后面再解释）</li>\n<li>快捷键 <code>&lt;D-V&gt;</code>（提醒：这是我们对 ⌘V 的标记方式；仅适用于 macOS）或 <code>&lt;S-Insert&gt;</code>（PC 键盘）</li>\n<li>鼠标右键加“粘贴”（Paste）</li>\n<li>菜单“编辑 &gt; 粘贴”（Edit &gt; Paste）</li>\n</ul><!-- [[[read_end]]] --><p>注意，如果你通常使用 Ctrl-V 键粘贴的话，这个快捷键在 Vim 里并不适用。即使你使用的是图形界面的 Vim 也是如此，因为这个键在 Vim 里有其他用途。顺便说一句，这个键在 Unix 终端上也一样是不能用作粘贴的。</p><p>显然，在远程连接到服务器上时，以上方法不可用，我们得考虑终端 Vim 的用法。</p><h3>终端 Vim</h3><p>如果直接把图形界面下的基本步骤，翻译成终端 Vim（非图形界面）的用法的话，应该是这样子的：</p><ol>\n<li>在终端里进入到目标目录下</li>\n<li>使用 <code>vim 文件名</code> 来逐一打开需要编辑的文件</li>\n<li>如果光标不在开头的话，用鼠标或 <code>gg</code>  命令跳转到开头</li>\n<li>使用命令 <code>i</code> 进入插入模式</li>\n<li>使用终端窗口的粘贴命令或快捷键（如 <code>&lt;S-Insert&gt;</code>）来粘贴内容</li>\n<li>按 <code>&lt;Esc&gt;</code> 回到正常模式并用 <code>ZZ</code> 存盘退出</li>\n</ol><p>或者，我们还可以采用下面的不退出 Vim 的处理方法：</p><ul>\n<li>打开文件使用 <code>:e 文件名</code>；可以使用 <code>&lt;C-D&gt;</code> 来查看有哪些文件，及用 <code>&lt;Tab&gt;</code> 进行自动完成</li>\n<li>存盘使用 <code>:w</code></li>\n</ul><p>但是如果粘贴的内容含缩进、而 Vim 又不够新的话，我们还会有特殊的麻烦。请继续往下看。</p><h4>Vim 老版本的特殊处理</h4><p><img src=\"https://static001.geekbang.org/resource/image/4b/0c/4b68d006f7f3b2003700b3001fb48f0c.png?wh=1468*1014\" alt=\"Fig5.1\" title=\"老版本 Vim 下直接粘贴可能出现的错误结果\"></p><p>上面的图片展示了 Vim 用户可能遇到的一种错误情况。这是因为对于终端 Vim 来说，一般而言，它是没法分辨用户输入和粘贴的。因此，在粘贴内容时，Vim 的很多功能，特别是和自动缩进相关的，就会和输入打架，导致最后的结果不对。</p><p>要解决这个问题，你就得让 Vim 知道，你到底是在输入还是在粘贴。Vim 有一个 <code>paste</code> 选项，就是用来切换输入/粘贴状态的。如果这个选项打开的话（<code>:set paste</code>），Vim 就认为你在粘贴，智能缩进、制表符转换等功能就不会修改粘贴的内容。</p><p>不过，手工设置该选项（及事后用 <code>set nopaste</code> 取消）是件烦人的事。所幸 xterm 里有一个“括号粘贴模式”（bracketed paste mode）可以帮 Vim 判断目前是输入还是粘贴。这个模式启用后，终端在发送剪贴板的内容之前和之后都会发送特殊的控制字符序列，来通知应用程序进行特殊的处理。</p><p>启用括号粘贴模式需要向 xterm 发送启用序列 <code>&lt;Esc&gt;[?2004h</code>，关闭括号粘贴模式需要向 xterm 发送关闭序列 <code>&lt;Esc&gt;[?2004l</code>；在启用了括号粘贴模式后，xterm 在发送剪贴板内容时会在前后分别加上开始粘贴序列 <code>&lt;Esc&gt;[200~</code> 和结束粘贴序列 <code>&lt;Esc&gt;[201~</code>。</p><p>Vim 8.0.0210 开始引入了对括号粘贴模式的支持。在兼容 xterm 的终端里进行粘贴时，你不再需要使用 <code>paste</code> 这个选项了。更棒的是，目前你甚至都不需要进入插入模式就可以粘贴了——这是不是就方便多了？</p><p>如果你使用的是 Vim 8.0.0210 之前的版本的话，那我们至少也可以通过代码来使得手工设置 <code>paste</code> 选项变得不必要。你可以在 vimrc 里加入下面的代码：</p><pre><code class=\"language-vim\">if !has('patch-8.0.210')\n  \" 进入插入模式时启用括号粘贴模式\n  let &amp;t_SI .= \"\\&lt;Esc&gt;[?2004h\"\n  \" 退出插入模式时停用括号粘贴模式\n  let &amp;t_EI .= \"\\&lt;Esc&gt;[?2004l\"\n  \" 见到 &lt;Esc&gt;[200~ 就调用 XTermPasteBegin\n  inoremap &lt;special&gt; &lt;expr&gt; &lt;Esc&gt;[200~ XTermPasteBegin()\n\n  function! XTermPasteBegin()\n    \" 设置使用 &lt;Esc&gt;[201~ 关闭粘贴模式\n    set pastetoggle=&lt;Esc&gt;[201~\n    \" 开启粘贴模式\n    set paste\n    return \"\"\n  endfunction\nendif\n</code></pre><p>这个功能虽然小，但解决了在远程连接上使用 Vim 粘贴代码的一个常见烦恼。因此，我认为你需要了解一下。</p><h4>“已经存在交换文件！”</h4><p>对每个文件单独使用一个 Vim 会话来编辑，很容易出现冲突的情况，所以你迟早会遇到“已经存在交换文件！”（Swap file “…” already exists!）的错误提示。出现这个提示，有两种可能的原因：</p><ol>\n<li>你上次编辑这个文件时，发生了意外崩溃。</li>\n<li>你已经在使用另外一个 Vim 会话编辑这个文件了。</li>\n</ol><p>原因不同，我们处理的策略自然也不相同。当进程 ID（process ID）后面没有“STILL RUNNING”这样的字样时，那就是情况 1；否则，就是情况 2 了。</p><p><img src=\"https://static001.geekbang.org/resource/image/d0/27/d09c693ab664af0853139d8f04eedd27.png?wh=1280*770\" alt=\"Fig5.2\" title=\"上次编辑这个文件时发生了意外崩溃的错误提示\"></p><p>上图中没有“STILL RUNNING”的字样，说明是情况 1。这时你需要按 <code>r</code> 来恢复上次的编辑状态——Vim 支持即使在你没有存盘的情况下仍然保存你的编辑状态，因而这种方法可以恢复你上次没有存盘的内容。</p><p>需要注意的是，在恢复之后，Vim 仍然不会删除崩溃时保留下来的那个交换文件。因此，在确定内容无误、保存文件之后，你需要重新再打开文件，并按 <code>d</code> 键把交换文件删除。当然，如果你确定目前保存的文件版本就是你想要的，也可以直接按 <code>d</code> 把交换文件删除、重新编辑文件。</p><p>反过来，如果你已经在另一个 Vim 会话里编辑文件的话，我们就会在进程 ID 后面看到“STILL RUNNING”的字样；同时，Vim 界面上也没有了删除（Delete）交换文件这一选项。</p><p><img src=\"https://static001.geekbang.org/resource/image/a4/6f/a45521128650b2824381de6f84911b6f.png?wh=1280*770\" alt=\"Fig5.3\" title=\"文件正在其他地方被编辑的错误提示\"></p><p>这时，大部分情况下我们应当使用 <code>q</code> 或 <code>a</code>（绝大部分情况下没有区别）放弃编辑，并找到目前已经打开的 Vim 窗口，从那里继续。少数情况下，我们只是要查看文件，那也可以选择 <code>o</code> 只读打开文件。需要使用 <code>e</code> 强行编辑的情况很少，需要非常谨慎——比如，你确认另外有 Vim 会话，但里面不会去做任何修改，这是我目前想得出来的唯一的合理需求。</p><p>如果我们使用图形界面 Vim 8 的话，Vim 支持在文件已经打开时自动切换到已经打开的 Vim 窗口上。这个功能在文件处于一个不活跃的标签页（下一讲会讨论标签页支持）时特别有用，因为 Vim 能把这个标签页自动切到最前面。不过，这个功能不是默认激活的，我们需要在 vimrc 中加入以下内容：</p><pre><code class=\"language-vim\">if v:version &gt;= 800\n  packadd! editexisting\nendif\n</code></pre><hr><p>好了，目前我们已经讨论了最简单、无聊、低效的工作方式。可以明显看到，不管是使用图形界面 Vim，还是终端 Vim，上面的方法本质上把 Vim 当成了记事本来用，完全没有体现出任何高效性或方便性。</p><p>既然使用号称“高效”的 Vim，我们当然就得有更加高效的做法。下面，我们以多文件打开为例加以说明。</p><h2>多文件的打开方式</h2><p>首先，我们需要知道，Vim 支持一次性打开多个文件，你只需要在命令行上写出多个文件即可，或者使用通配符。比如，就我们刚才所说的编辑场景，我们可以使用 <code>vim *.cpp *.h</code>。</p><p>有可能让你吃惊的是，输入这个命令之后，Vim 只打开了一个文件，那就是所有文件中的第一个。</p><p>原来，为了确保在配置较差的环境里仍然能够正常工作，Vim 绝对不会不必要地消耗内存，包括打开不必要立即打开的文件。所以在上面的命令后，Vim 建立了一个文件列表，并且暂时只打开其中的第一个文件。接下来，用户可以决定，要编辑哪个文件，或者查看列表，或者提前退出，等等。</p><p>为此，Vim 提供了以下命令：</p><ul>\n<li><code>:args</code>：可以显示“参数”，即需要编辑的多个文件的列表</li>\n<li><code>:args 文件名</code>：使用新的文件名替换参数列表</li>\n<li><code>:next</code>（可缩写为 <code>:n</code>）：打开下一个文件；如当前文件修改（未存盘）则会报错中止，但如果命令后面加 <code>!</code> 则会放弃修改内容，其他命令也类似</li>\n<li><code>:Next</code>（缩写 <code>:N</code>）或 <code>:previous</code>（缩写 <code>:prev</code>）：打开上一个文件</li>\n<li><code>:first</code> 或 <code>:rewind</code>：回到列表中的第一个文件</li>\n<li><code>:last</code>：打开列表中的最后一个文件</li>\n</ul><p>使用这些命令，我们的工作流当然就会发生变化了：</p><ol>\n<li>在终端里进入到目标目录下</li>\n<li>使用 <code>vim *.cpp *.h</code> 或 <code>gvim *.cpp *.h</code> 来打开需要编辑的文件</li>\n<li>对于第一个文件，使用之前的方法贴入所需的文本</li>\n<li>使用 <code>V</code> 进入行选择的可视模式，移动光标选中所需的文本，然后使用 <code>y</code> 复制选中的各行</li>\n<li>执行命令 <code>:set autowrite</code>，告诉 Vim 在切换文件时自动存盘</li>\n<li>执行命令 <code>:n|normal ggP</code>，切换到下一个文件并执行正常模式命令 <code>ggP</code>，跳转到文件开头并贴入文本</li>\n<li>确认修改无误后，键入 <code>:</code>、上箭头和回车，重复执行上面的命令</li>\n<li>待 Vim 报错说已经在最后一个文件里，使用 <code>:w</code> 存盘，或 <code>:wq</code>（抑或更快的 <code>ZZ</code>）存盘退出</li>\n</ol><p>注意，第 6 步可以拆成 <code>:n</code> 和 <code>ggP</code> 两步，但文件数量较多时，反复手工敲 <code>ggP</code> 也挺累的。因此，我这儿使用了 <code>normal</code> 命令，在命令行模式下执行正常模式命令，下面就可以直接重复切换命令加粘贴命令，我们的编辑效率也得以大大提升。</p><p><img src=\"https://static001.geekbang.org/resource/image/7b/cd/7b2341087d8a34471b9c1979acdcddcd.gif?wh=984*690\" alt=\"Fig5.4\" title=\"第 4 步到第 7 步的演示（注意倒数第二行的变化）\"></p><p>这种编辑方式，是不是就比之前的优越多了？</p><p>另外，Vim 还能解决一个 shell 相关的不一致性问题。如果我们要编辑的文件除了当前目录下的，还有所有子目录下的，在大部分 shell 下，包括 Linux 上缺省的 Bash，我们需要使用“*.cpp *.h **/*.cpp **/*.h”来挑选这些文件，重复、麻烦。Vim 在此处采用了类似于 Zsh 的简化语法，“**”也包含了当前目录。这样，我们只需把上面第 2 步改成下面这样即可：</p><ul>\n<li>键入 <code>vim</code> 进入 Vim，然后使用 <code>:args **/*.cpp **/*.h</code> 来打开需要编辑的文件</li>\n</ul><h3>缓冲区的管理和切换</h3><p>跟多文件相关又略微不同的一个概念是缓冲区（buffer）。它是 Vim 里的一个基本概念，和今天讲的很多其他内容有相关性和相似性，你也或迟或早终究会遇到它，我今天也一起概要描述一下。</p><p>Vim 里会对每一个已打开或要打开的文件创建一个缓冲区，这个缓冲区就是文件在 Vim 中的映射。在多文件编辑的时候你也会有同样数量的缓冲区。不过，缓冲区的数量常常会更高，因为你用 <code>:e</code> 等命令打开的文件不会改变“命令行参数”（只被命令行或 <code>:args</code> 命令修改），但同样会增加缓冲区的数量。</p><p>此外，<code>:args</code> 代表参数列表/文件列表，真的只是文件的列表而已。缓冲区中有更多信息的，最最基本的就是记忆了光标的位置。在 Vim 里，除了切换到下一个文件这样的批处理操作外，操作缓冲区的命令比简单操作文件的命令更为方便。</p><p>作为对比，我们来看一下文件列表和缓冲区列表的命令的结果。</p><p><img src=\"https://static001.geekbang.org/resource/image/0f/a4/0ff5249a78179117dfcda70715dc3aa4.png?wh=1396*172\" alt=\"Fig5.5\" title=\"文件列表命令 :args 的结果\"></p><p><img src=\"https://static001.geekbang.org/resource/image/33/08/3395a72ee4776c49748243fac411e008.png?wh=1396*344\" alt=\"Fig5.6\" title=\"缓冲区列表命令 :ls 的结果\"></p><p>可以看到，两者都展示了文件，都标示出了当前编辑的文件（分别使用方括号和“%a”）。不过，缓冲区列表中明显有更多的信息：</p><ul>\n<li>文件名前面有编号；我们也马上就会说到利用编号的命令。</li>\n<li>除了当前活跃文件的标记“%a”，还有个文件被标成了“#”，这表示最近的缓冲区；缓冲区列表里还可能有其他标记，如“+”表示缓冲区已经被修改。</li>\n<li>文件名后面有行号，表示光标在文件中的位置。</li>\n</ul><p>常用的缓冲区命令跟前面文件列表相关的命令有很大的相似性，因此我在这儿一起讲，可以帮助你记忆：</p><ul>\n<li><code>:buffers</code> 或 <code>:ls</code>：可以显示缓冲区的列表</li>\n<li><code>:buffer 缓冲区列表里的编号</code>（<code>:buffer</code> 可缩写为 <code>:b</code>）：跳转到编号对应的缓冲区；如当前缓冲区已被修改（未存盘）则会报错中止，但如果命令后面加 <code>!</code> 则会放弃修改内容；其他命令也类似</li>\n<li><code>:bdelete 缓冲区列表里的编号</code>（<code>:bdelete</code> 可缩写为 <code>:bd</code>）：删除编号对应的缓冲区；编号省略的话删除当前缓冲区</li>\n<li><code>:bnext</code>（缩写 <code>:bn</code>）：跳转到下一个缓冲区</li>\n<li><code>:bNext</code>（缩写 <code>:bN</code>）或 <code>:bprevious</code>（缩写 <code>:bp</code>）：跳转到上一个缓冲区</li>\n<li><code>:bfirst</code> 或 <code>:brewind</code>：跳转到缓冲区列表中的第一个文件</li>\n<li><code>:blast</code>：跳转到缓冲区列表中的最后一个文件</li>\n</ul><p>还有很常见的一种情况是，我们需要在两个文件之间切换。Vim 对最近编辑的文件（上面提到的列表里标有“#”的文件）有特殊的支持，使用快捷键 <code>&lt;C-^&gt;</code> 可以在最近的两个缓冲区之间来回切换。这个快捷键还有一个用法是在前面输入缓冲区的编号：比如，用 <code>1&lt;C-^&gt;</code> 可以跳转到第一个缓冲区（跟命令行模式的命令 <code>:bfirst</code> 或 <code>:b1</code> 效果相同）。</p><p>从实际使用的角度，使用缓冲区列表有点像打开最近使用的文件菜单（但缓冲区列表不会存盘），可以当作一种快速切换到最近使用的文件的方式。</p><p>缓冲区是文件在某个 Vim 会话里的映射。这意味着，如果某个 Vim 会话里不同的窗口或标签页（下一讲里会讨论）编辑的是同一个文件，它们对应到的也会是同一个缓冲区。更重要的是，文件/缓冲区的修改在同一个 Vim 会话里是完全同步的——这就不会像在多会话编辑时那样发生冲突和产生错误了。</p><h2>内容小结</h2><p>本讲通过讨论使用 Vim 在多个文件里粘贴代码的多种方法，我们学习了以下知识：</p><ul>\n<li>在图形界面和终端里，粘贴系统剪贴板的内容需要使用不同的方法：前者使用 Vim 命令，后者则需进入插入模式，使用终端的粘贴命令进行粘贴</li>\n<li>Vim 能在崩溃后恢复未存盘的内容，也能在多会话编辑同一个文件时检测到这种冲突</li>\n<li>在 Vim 里我们可以使用通配符“*.后缀”和“**/*.后缀”来打开多个文件</li>\n<li>使用 <code>:args</code> 命令我们可以展示或替换参数列表，使用 <code>:next</code> 等命令我们可以在这些参数指定的文件中切换</li>\n<li>使用 <code>:buffers</code> 或 <code>:ls</code> 命令我们可以展示缓冲区列表，即所有已编辑和将编辑的文件，使用 <code>:b</code> 和 <code>:bnext</code> 等命令我们可以在这些缓冲区中进行切换</li>\n</ul><p>今天讲到了一些命令行模式的命令，你应该可以看到，它们都是非常有规律的，最基本的操作就是“first”、“last”、“next”、“Next” 或 “previous”等英文单词，以及它们与前缀的组合。把命令行模式的命令记住，就能完成基本的编辑任务；至于像 <code>&lt;C-^&gt;</code> 这样的正常模式命令，万一记不住，也可以用命令行模式的命令来替代。但是，正常模式的命令更加高效，有助于提高你的编辑效率，所以最好通过多加练习来形成“肌肉记忆”。</p><p>对于配置文件，本讲只有很小的更改，对应的标签是 <code>l5-unix</code> 和 <code>l5-windows</code>。</p><h2>课后练习</h2><p>请在课后进行以下练习，熟悉今天所讲的内容：</p><ol>\n<li>用 Vim 打开一个文件，进行编辑（不存盘），然后将这个 Vim 进程 kill 掉；重新打开文件，恢复其中内容并存盘；再次打开文件，删除交换文件。</li>\n<li>用 Vim 打开一个文件，然后在另外一个终端窗口里再次打开这个文件，阅读冲突信息，然后退出编辑。</li>\n<li>使用 Vim 打开多个文件，逐个查看，然后退出。</li>\n</ol><p>我是吴咏炜，我们下一讲再见！</p>","comments":[{"had_liked":false,"id":239085,"user_name":"我来也","can_delete":false,"product_type":"c1","uid":1205253,"ip_address":"","ucode":"773D6104F56767","user_header":"https://static001.geekbang.org/account/avatar/00/12/64/05/6989dce6.jpg","comment_is_top":false,"comment_ctime":1596431527,"is_pvip":false,"replies":[{"id":"88337","content":"bufdo 是个很有用的命令。不过，你这么做还是有一定先决条件的：<br><br>1. 外面复制不能直接用，你需要使用 gg&quot;+P，而且这个不能适用于远程和纯终端版本。<br>2. 你需要打开 hidden 才能这么用。这又是个额外复杂性，而且有一定的坑。<br><br>此外，虽说这儿是批量修改，还是人眼要看一下的那种。如果真的完全不用看，用 sed 就好。","user_name":"作者回复","user_name_real":"吴咏炜","uid":"1645639","ctime":1596453797,"ip_address":"","comment_id":239085,"utype":1}],"discussion_count":5,"race_medal":0,"score":"31661202599","product_id":100055801,"comment_content":"关于文中批量在文件开头贴入内容的需求,应该还可以更简单点.<br>1. 打开需要修改的文件: `vi *.cpp *.h`<br>2. 在外面复制一段内容(或在vim中选中一段内容并用y命令复制到默认寄存器)<br>3. 在命令行模式中执行命令: `bufdo normal ggP` (批量在所有缓冲区中的文件上执行命令)<br>4. 回写所有文件: `:wa`.<br>至此,任务就完成了.<br><br>`bufdo`就是在缓冲区列表的每一个缓冲区里执行命令{cmd}.<br>与之对应的有`argdo`.<br>bufdo是针对缓冲区的.<br>argdo是针对参数列表的.<br>两者还是有明显的差别的.<br>查看所有列表时,一个是`buffers`,一个是`args`.<br>如果想在打开vi的情况下,正则导入文件,就不能用`vi *.h`,但是可以用`args *.h`.<br>","like_count":7,"discussions":[{"author":{"id":1645639,"avatar":"https://static001.geekbang.org/account/avatar/00/19/1c/47/53c48284.jpg","nickname":"吴咏炜","note":"","ucode":"8C24C10AEC779F","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":502973,"discussion_content":"bufdo 是个很有用的命令。不过，你这么做还是有一定先决条件的：\n\n1. 外面复制不能直接用，你需要使用 gg&amp;quot;+P，而且这个不能适用于远程和纯终端版本。\n2. 你需要打开 hidden 才能这么用。这又是个额外复杂性，而且有一定的坑。\n\n此外，虽说这儿是批量修改，还是人眼要看一下的那种。如果真的完全不用看，用 sed 就好。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1596453797,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1280841,"avatar":"https://static001.geekbang.org/account/avatar/00/13/8b/49/e5004a62.jpg","nickname":"zhxxu","note":"","ucode":"18C780A2525895","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":305575,"discussion_content":"怎么没有视频啊？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1600006696,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1205253,"avatar":"https://static001.geekbang.org/account/avatar/00/12/64/05/6989dce6.jpg","nickname":"我来也","note":"","ucode":"773D6104F56767","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1280841,"avatar":"https://static001.geekbang.org/account/avatar/00/13/8b/49/e5004a62.jpg","nickname":"zhxxu","note":"","ucode":"18C780A2525895","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":305576,"discussion_content":"评论区也没法贴视频吧😂","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1600007509,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":305575,"ip_address":""},"score":305576,"extra":""}]},{"author":{"id":1205253,"avatar":"https://static001.geekbang.org/account/avatar/00/12/64/05/6989dce6.jpg","nickname":"我来也","note":"","ucode":"773D6104F56767","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":296291,"discussion_content":"老师说的是,确实还需要开启`hidden`选项.\n不过这个选项我一直开着,就以为是默认选项了.\n\n在做批量修改之前,我一般会习惯性的用git把文件备份一次,等vim操作完了,保存好了,再用git diff核对一下.\n\n关于外面复制不能直接用的问题,也是有变通方法的.\n我一直是用的Mac下的纯终端版本,还是很方便与系统剪切板互通的.\n真的要是在远程环境,我会选择在vi中新开一个buffer,把内容贴上去,然后用vim的y命令,拷贝到vim的默认寄存器中.这样,在vim内部就可以通过ggP直接用了.\n\n在vim中,完成某一个功能确实有很多种方法.\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1596503982,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1645639,"avatar":"https://static001.geekbang.org/account/avatar/00/19/1c/47/53c48284.jpg","nickname":"吴咏炜","note":"","ucode":"8C24C10AEC779F","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":1205253,"avatar":"https://static001.geekbang.org/account/avatar/00/12/64/05/6989dce6.jpg","nickname":"我来也","note":"","ucode":"773D6104F56767","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":296547,"discussion_content":"还是不错的流程。估计你是读者中对Vim掌握最深的了吧。🤓","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1596586924,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":296291,"ip_address":""},"score":296547,"extra":""}]}]},{"had_liked":false,"id":239086,"user_name":"我来也","can_delete":false,"product_type":"c1","uid":1205253,"ip_address":"","ucode":"773D6104F56767","user_header":"https://static001.geekbang.org/account/avatar/00/12/64/05/6989dce6.jpg","comment_is_top":false,"comment_ctime":1596432049,"is_pvip":false,"replies":[{"id":"88338","content":"哈哈，tmux 又把问题进一步复杂化了……<br><br>注意我说的括号粘贴模式的主要使用场景是远程连接到服务器上，这种情况下，没有打通剪贴板这个选项……","user_name":"作者回复","user_name_real":"吴咏炜","uid":"1645639","ctime":1596454000,"ip_address":"","comment_id":239086,"utype":1}],"discussion_count":3,"race_medal":0,"score":"10186366641","product_id":100055801,"comment_content":"关于文中`启用括号粘贴模式`的内容,我稍微补充一下下.<br><br>针对在tmux中使用vim的同学,可能需要稍微调整下.<br>具体参见这篇文章:<br>[Automatically set paste mode in Vim when pasting in insert mode](https:&#47;&#47;coderwall.com&#47;p&#47;if9mda&#47;automatically-set-paste-mode-in-vim-when-pasting-in-insert-mode)<br><br>在我使用了一段时间该功能后,默默的把这个功能给关闭了.<br>还是用了最原始的方法,映射了F12在paste模式开启和关闭见切换.<br>原因是:有一定几率在粘贴后,把终端环境弄出问题.导致无法正常使用终端和退出vi.<br>反正我遇到的概率还是蛮大.我的环境是MacOS+iTerm2+Vim(8.2).<br><br>后来我发现,我在外面复制的内容,直接在vim中的普通模式中按`p`,一样不会触发vim的自动缩进.<br>由于我mac下的vim是与系统剪切板打通了的,所以还是蛮方便的.<br>","like_count":2,"discussions":[{"author":{"id":1645639,"avatar":"https://static001.geekbang.org/account/avatar/00/19/1c/47/53c48284.jpg","nickname":"吴咏炜","note":"","ucode":"8C24C10AEC779F","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":502974,"discussion_content":"哈哈，tmux 又把问题进一步复杂化了……\n\n注意我说的括号粘贴模式的主要使用场景是远程连接到服务器上，这种情况下，没有打通剪贴板这个选项……","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1596454000,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1205253,"avatar":"https://static001.geekbang.org/account/avatar/00/12/64/05/6989dce6.jpg","nickname":"我来也","note":"","ucode":"773D6104F56767","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":296308,"discussion_content":"其实远程连接到服务器上,也是可以打通剪切板的,只是很有点复杂.������\n参见:[Vim、Tmux、系统共用剪切板](https://harttle.land/2017/06/23/vim-tmux-clipboard.html)\n\n增加一个环节,肯定是会增加复杂度的.但相应的也会有所收获.\nTmux这个工具,针对经常需要跟服务器打交道的人,我还是非常非常推荐的.\n\n我借助它,可以实现重新连上服务器时,一条命令完全恢复之前的工作状态.\n(打开的vim依旧在那里,甚至Table,Window,Buffer,光标位置都不会变)\n如果再配合上tmuxinator,甚至可以在服务器重启时,一条命令恢复初始配置的工作状态.\n如果再配合上mosh,哎,甚至都不用担心因为网络临时终端,而需要重新登录远程服务器.\n\n像Mac这种常年不用关机的,远程终端可以常年保持在那.\n哪怕是Mac重启了,用tmuxinator也可以快速的恢复预定义的工作状态.\n\n正因为此,我的vim有很大几率是运行在tmux中的.","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1596506926,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1645639,"avatar":"https://static001.geekbang.org/account/avatar/00/19/1c/47/53c48284.jpg","nickname":"吴咏炜","note":"","ucode":"8C24C10AEC779F","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":1205253,"avatar":"https://static001.geekbang.org/account/avatar/00/12/64/05/6989dce6.jpg","nickname":"我来也","note":"","ucode":"773D6104F56767","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":296549,"discussion_content":"只要有自己的一套完整工作流就好。Vim知道是粘贴，确实也就不需要paste这样的选项了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1596587313,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":296308,"ip_address":""},"score":296549,"extra":""}]}]},{"had_liked":false,"id":318758,"user_name":"fei","can_delete":false,"product_type":"c1","uid":2126331,"ip_address":"","ucode":"36D802EB42FEF3","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJOUjOGRlYNY1TDZpso7LQEhMyqmgUqEW3sm5xWTHqhU5rUol8NeEOxLMQA5ib09Y8Yg97ziaqsKduA/132","comment_is_top":false,"comment_ctime":1635414911,"is_pvip":true,"replies":[{"id":"115693","content":"在 Vim 里，竖线是用来分隔多个命令的。用“:help :|”可以查看帮助文件。“:”代表命令模式的命令。<br><br>这些在“:help”的一开头就有说明的，我在文中没有重复这些信息。","user_name":"作者回复","user_name_real":"吴咏炜","uid":"1645639","ctime":1635642163,"ip_address":"","comment_id":318758,"utype":1}],"discussion_count":1,"race_medal":1,"score":"5930382207","product_id":100055801,"comment_content":"命令 :n|normal ggP，其中的&quot;|&quot;的用法没明白，Shell中是管道，用在这里是什么含义？是表示两个命令依次执行？这种用法的说明文档怎么查阅？","like_count":1,"discussions":[{"author":{"id":1645639,"avatar":"https://static001.geekbang.org/account/avatar/00/19/1c/47/53c48284.jpg","nickname":"吴咏炜","note":"","ucode":"8C24C10AEC779F","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":529371,"discussion_content":"在 Vim 里，竖线是用来分隔多个命令的。用“:help :|”可以查看帮助文件。“:”代表命令模式的命令。\n\n这些在“:help”的一开头就有说明的，我在文中没有重复这些信息。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1635642163,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":259175,"user_name":"IT蜗壳-Tango","can_delete":false,"product_type":"c1","uid":1000612,"ip_address":"","ucode":"92330844C1EF9C","user_header":"https://static001.geekbang.org/account/avatar/00/0f/44/a4/7a45d979.jpg","comment_is_top":false,"comment_ctime":1604646899,"is_pvip":true,"replies":[{"id":"94297","content":"多多练习就行……","user_name":"作者回复","user_name_real":"吴咏炜","uid":"1645639","ctime":1604714651,"ip_address":"","comment_id":259175,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5899614195","product_id":100055801,"comment_content":"这种专栏干货太多了，需要吸收一下，但是很有意思啊。加油","like_count":1,"discussions":[{"author":{"id":1645639,"avatar":"https://static001.geekbang.org/account/avatar/00/19/1c/47/53c48284.jpg","nickname":"吴咏炜","note":"","ucode":"8C24C10AEC779F","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":508871,"discussion_content":"多多练习就行……","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1604714651,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":239615,"user_name":"xavier","can_delete":false,"product_type":"c1","uid":1243128,"ip_address":"","ucode":"2F7918EA37ED9F","user_header":"https://static001.geekbang.org/account/avatar/00/12/f7/f8/3c0a6854.jpg","comment_is_top":false,"comment_ctime":1596598470,"is_pvip":false,"replies":[{"id":"88523","content":"谢谢。😇","user_name":"作者回复","user_name_real":"吴咏炜","uid":"1645639","ctime":1596623641,"ip_address":"","comment_id":239615,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5891565766","product_id":100055801,"comment_content":"感谢老师的倾囊相授。之前只会基本的一些操作，已经感觉到 vim 的高效。跟着老师学习，效率可以再提高 N 倍。期待后续课程。","like_count":1,"discussions":[{"author":{"id":1645639,"avatar":"https://static001.geekbang.org/account/avatar/00/19/1c/47/53c48284.jpg","nickname":"吴咏炜","note":"","ucode":"8C24C10AEC779F","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":503159,"discussion_content":"谢谢。😇","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1596623641,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":357716,"user_name":"谁家内存泄露了","can_delete":false,"product_type":"c1","uid":2436042,"ip_address":"上海","ucode":"CDDA3BE17FE40E","user_header":"https://static001.geekbang.org/account/avatar/00/25/2b/ca/71ff1fd7.jpg","comment_is_top":false,"comment_ctime":1663578225,"is_pvip":false,"replies":[{"id":"130351","content":"Vim 没有“导入”的概念啊。如果想要跳转之类的功能的话，需要看你的工程怎么设置。参见后面讨论 YouCompleteMe 等工具的部分。","user_name":"作者回复","user_name_real":"编辑","uid":"1645639","ctime":1664031889,"ip_address":"上海","comment_id":357716,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1663578225","product_id":100055801,"comment_content":"请问各位是如何使用vim打开工程项目的？<br>我们的项目需要多个git仓库大概是这样的树形结构<br><br>root<br>|<br>|——git1 |-inc<br>|            |-src<br>|<br>|——git2 |-inc<br>|            |-src<br>|<br>|——git3 |-inc<br>|\t      |-src<br>...<br><br>是一次性把所有的cpp和h导入吗？还是有其他好方法？","like_count":0,"discussions":[{"author":{"id":1645639,"avatar":"https://static001.geekbang.org/account/avatar/00/19/1c/47/53c48284.jpg","nickname":"吴咏炜","note":"","ucode":"8C24C10AEC779F","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":588731,"discussion_content":"Vim 没有“导入”的概念啊。如果想要跳转之类的功能的话，需要看你的工程怎么设置。参见后面讨论 YouCompleteMe 等工具的部分。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1664031890,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"上海"},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":306673,"user_name":"tequ1lAneio","can_delete":false,"product_type":"c1","uid":1936087,"ip_address":"","ucode":"41336E87FF2E1A","user_header":"https://static001.geekbang.org/account/avatar/00/1d/8a/d7/daabec34.jpg","comment_is_top":false,"comment_ctime":1628666790,"is_pvip":true,"replies":[{"id":"111083","content":"切换文件和切换缓冲区可以获得相近的效果，但它们不是一回事，用的命令也不一样。实际上专栏里已经写了，打开多文件时每个文件都有对应的缓冲区，但你完全可以建立新的缓冲区（打开新文件等），而不影响要打开的文件列表（:args）。:ls 的结果数量常常要多于 :args。","user_name":"作者回复","user_name_real":"吴咏炜","uid":"1645639","ctime":1628690008,"ip_address":"","comment_id":306673,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1628666790","product_id":100055801,"comment_content":"vim在同时打开多文件的时候，切换文件和切换缓冲区是一回事吗？他们操作的对象是什么呢？","like_count":0,"discussions":[{"author":{"id":1645639,"avatar":"https://static001.geekbang.org/account/avatar/00/19/1c/47/53c48284.jpg","nickname":"吴咏炜","note":"","ucode":"8C24C10AEC779F","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":524864,"discussion_content":"切换文件和切换缓冲区可以获得相近的效果，但它们不是一回事，用的命令也不一样。实际上专栏里已经写了，打开多文件时每个文件都有对应的缓冲区，但你完全可以建立新的缓冲区（打开新文件等），而不影响要打开的文件列表（:args）。:ls 的结果数量常常要多于 :args。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1628690008,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":248706,"user_name":"leaf","can_delete":false,"product_type":"c1","uid":1060139,"ip_address":"","ucode":"B2CFF00AFA7494","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKdzXiawss5gGiax48CJGAJpha4pJksPia7J7HsiatYwjBA9w1bkrDicXfQz1SthaG3w1KJ2ibOxpia5wfbQ/132","comment_is_top":false,"comment_ctime":1600267246,"is_pvip":false,"replies":[{"id":"91364","content":"我们主要用它来替换命令行给出的参数列表，即，执行 :args *.c 相当于你用 vim *.c 来启动 Vim。这样，我们就能使用 :next 等命令在多个文件中跳转。","user_name":"作者回复","user_name_real":"吴咏炜","uid":"1645639","ctime":1600388498,"ip_address":"","comment_id":248706,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1600267246","product_id":100055801,"comment_content":"老师请问:args命令是干什么的，没搞懂！","like_count":0,"discussions":[{"author":{"id":1645639,"avatar":"https://static001.geekbang.org/account/avatar/00/19/1c/47/53c48284.jpg","nickname":"吴咏炜","note":"","ucode":"8C24C10AEC779F","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":505719,"discussion_content":"我们主要用它来替换命令行给出的参数列表，即，执行 :args *.c 相当于你用 vim *.c 来启动 Vim。这样，我们就能使用 :next 等命令在多个文件中跳转。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1600388498,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":240938,"user_name":"三石","can_delete":false,"product_type":"c1","uid":2089595,"ip_address":"","ucode":"D3000ABA385BC5","user_header":"https://static001.geekbang.org/account/avatar/00/1f/e2/7b/e39951d2.jpg","comment_is_top":false,"comment_ctime":1597127026,"is_pvip":false,"replies":[{"id":"89078","content":"如果不介意参数列表的显示的话，用这一讲介绍的 3&lt;C-^&gt; 最快。<br><br>介意的话，用 :3argu 吧。或者记得住要跳几步的话，用 :2n。","user_name":"作者回复","user_name_real":"吴咏炜","uid":"1645639","ctime":1597149626,"ip_address":"","comment_id":240938,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1597127026","product_id":100055801,"comment_content":"现有a.py b.py c.py d.py四个文件<br>vim *.py 进入了a.py<br>需求从a.py 跳转到 c.py<br>方式1 如果用命令行模式多次 n才能到达c.py 这样很啰嗦<br>方式2 如果用命令行 c c.py的话<br>查看参数列表 参数列表显示当前还处于还在a.py上，不一致问题。<br>方式3 如果用 args c.py 虽然到达了，但修改了args参数列表。<br>此时命令行查看 args就只有c.py一个文件了。<br>想问下有没有好的方法跳转？","like_count":0,"discussions":[{"author":{"id":1645639,"avatar":"https://static001.geekbang.org/account/avatar/00/19/1c/47/53c48284.jpg","nickname":"吴咏炜","note":"","ucode":"8C24C10AEC779F","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":503599,"discussion_content":"如果不介意参数列表的显示的话，用这一讲介绍的 3&amp;lt;C-^&amp;gt; 最快。\n\n介意的话，用 :3argu 吧。或者记得住要跳几步的话，用 :2n。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1597149626,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":240491,"user_name":"瀚海星尘","can_delete":false,"product_type":"c1","uid":1024461,"ip_address":"","ucode":"90F418299EA3BF","user_header":"https://static001.geekbang.org/account/avatar/00/0f/a1/cd/2c513481.jpg","comment_is_top":false,"comment_ctime":1596945762,"is_pvip":false,"replies":[{"id":"88774","content":"😇","user_name":"作者回复","user_name_real":"吴咏炜","uid":"1645639","ctime":1596967210,"ip_address":"","comment_id":240491,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1596945762","product_id":100055801,"comment_content":"手动删除粘贴带来的缩进的生活终于结束了🙄","like_count":0,"discussions":[{"author":{"id":1645639,"avatar":"https://static001.geekbang.org/account/avatar/00/19/1c/47/53c48284.jpg","nickname":"吴咏炜","note":"","ucode":"8C24C10AEC779F","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":503465,"discussion_content":"😇","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1596967210,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1298279,"avatar":"https://static001.geekbang.org/account/avatar/00/13/cf/67/057e5d93.jpg","nickname":"flying","note":"","ucode":"69AB7872B36B23","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":298300,"discussion_content":"可以在命令行选中粘贴代码，用==处理好缩进，再删除错误的多余的括号。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1597240482,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":239821,"user_name":"25ma","can_delete":false,"product_type":"c1","uid":1303713,"ip_address":"","ucode":"AB5435B9DB52C9","user_header":"https://static001.geekbang.org/account/avatar/00/13/e4/a1/178387da.jpg","comment_is_top":false,"comment_ctime":1596672100,"is_pvip":false,"replies":[{"id":"88608","content":"不想匹配？我觉得最快的土办法就是你把那个文件临时更名一下吧。","user_name":"作者回复","user_name_real":"吴咏炜","uid":"1645639","ctime":1596707001,"ip_address":"","comment_id":239821,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1596672100","product_id":100055801,"comment_content":"老师你提及的 **&#47;*.cpp **&#47;*.h 这个方法用于操作多个文件的时候的确很好用，但是我在练习的过程中遇到一个问题，就是我当前目录下有某个目录或者cpp后缀的文件我不被匹配到，这时候该如何操作？","like_count":0,"discussions":[{"author":{"id":1645639,"avatar":"https://static001.geekbang.org/account/avatar/00/19/1c/47/53c48284.jpg","nickname":"吴咏炜","note":"","ucode":"8C24C10AEC779F","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":503235,"discussion_content":"不想匹配？我觉得最快的土办法就是你把那个文件临时更名一下吧。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1596707001,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":239537,"user_name":"pyhhou","can_delete":false,"product_type":"c1","uid":1256496,"ip_address":"","ucode":"31EF8D50CF91A5","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/ibZVAmmdAibBeVpUjzwId8ibgRzNk7fkuR5pgVicB5mFSjjmt2eNadlykVLKCyGA0GxGffbhqLsHnhDRgyzxcKUhjg/132","comment_is_top":false,"comment_ctime":1596569491,"is_pvip":false,"replies":[{"id":"88487","content":"Visual，不是 virtual。<br><br>我回头试试你说的。Mac 终端至少可以用 &lt;D-R&gt; 暂停发送鼠标事件（再按一次恢复）。","user_name":"作者回复","user_name_real":"吴咏炜","uid":"1645639","ctime":1596586300,"ip_address":"","comment_id":239537,"utype":1}],"discussion_count":6,"race_medal":0,"score":"1596569491","product_id":100055801,"comment_content":"根据当前的 vim 配置，如果在正常模式下。鼠标选择会造成 vim 进入 virtual 模式而不能用 &lt;D-C&gt; 进行复制，必须输入 : 进入到命令行模式下才可以复制。这样的操作放到 Mac 下是可以的，但是通过 Mac 的 terminal 去到远程 Ubuntu 命令行 server，发现如果进入到命令行模式就没有办法通过鼠标选中文字，也就不能复制，不知道有没有什么好的方法。<br><br>现在的场景是，去到两个远程机器，把一个机器上的文件的某部分文字复制到另一个机器上一个文件上。不知道除了手动照着敲还有没有什么更好的办法？","like_count":0,"discussions":[{"author":{"id":1645639,"avatar":"https://static001.geekbang.org/account/avatar/00/19/1c/47/53c48284.jpg","nickname":"吴咏炜","note":"","ucode":"8C24C10AEC779F","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":503133,"discussion_content":"Visual，不是 virtual。\n\n我回头试试你说的。Mac 终端至少可以用 &amp;lt;D-R&amp;gt; 暂停发送鼠标事件（再按一次恢复）。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1596586300,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1205253,"avatar":"https://static001.geekbang.org/account/avatar/00/12/64/05/6989dce6.jpg","nickname":"我来也","note":"","ucode":"773D6104F56767","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":296612,"discussion_content":"Mac下面的话,试试iTerm2终端吧.\n\n即使开启了vim的鼠标模式,也是可以用Option键配合鼠标选择复制内容的.\nOption+Cmd还可用于列式选择并复制.","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1596603012,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":4,"child_discussions":[{"author":{"id":1256496,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/ibZVAmmdAibBeVpUjzwId8ibgRzNk7fkuR5pgVicB5mFSjjmt2eNadlykVLKCyGA0GxGffbhqLsHnhDRgyzxcKUhjg/132","nickname":"pyhhou","note":"","ucode":"31EF8D50CF91A5","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1205253,"avatar":"https://static001.geekbang.org/account/avatar/00/12/64/05/6989dce6.jpg","nickname":"我来也","note":"","ucode":"773D6104F56767","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":296618,"discussion_content":"赞，感谢建议。看来不同终端规则还不一样，在 iTerm 使用 <D-R> 会让全屏文字直接消失。。。\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1596603849,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":296612,"ip_address":""},"score":296618,"extra":""},{"author":{"id":1205253,"avatar":"https://static001.geekbang.org/account/avatar/00/12/64/05/6989dce6.jpg","nickname":"我来也","note":"","ucode":"773D6104F56767","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1256496,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/ibZVAmmdAibBeVpUjzwId8ibgRzNk7fkuR5pgVicB5mFSjjmt2eNadlykVLKCyGA0GxGffbhqLsHnhDRgyzxcKUhjg/132","nickname":"pyhhou","note":"","ucode":"31EF8D50CF91A5","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":296670,"discussion_content":"这个是iterm的reset功能快捷键。😄","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1596619675,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":296618,"ip_address":""},"score":296670,"extra":""},{"author":{"id":1645639,"avatar":"https://static001.geekbang.org/account/avatar/00/19/1c/47/53c48284.jpg","nickname":"吴咏炜","note":"","ucode":"8C24C10AEC779F","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":1256496,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/ibZVAmmdAibBeVpUjzwId8ibgRzNk7fkuR5pgVicB5mFSjjmt2eNadlykVLKCyGA0GxGffbhqLsHnhDRgyzxcKUhjg/132","nickname":"pyhhou","note":"","ucode":"31EF8D50CF91A5","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":296942,"discussion_content":"我试了下，知道原先的问题是怎么回事了。按照目前的 Vim 配置，它在 Ubuntu 上运行的时候用的是 set mouse=a，不管你是不是远程。而你用的又是 Mac 的终端……\n\n由于从环境变量里只能看到这是个 SSH 连接，而看不到是 Mac，你只能要么这时候手工敲 set mouse=nvi，要么在 .vimrc 里令所有 SSH 连接过来的都用 set mouse=nvi：\n\nif has(&#39;mouse&#39;)\n  if has(&#39;gui_running&#39;) ||\n        \\(&amp;term =~ &#39;xterm&#39; &amp;&amp; !has(&#39;mac&#39;) &amp;&amp; $SSH_CLIENT == &#39;&#39;)\n    set mouse=a\n  else\n    set mouse=nvi\n  endif\nendif\n\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1596709640,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":296618,"ip_address":""},"score":296942,"extra":""}]}]},{"had_liked":false,"id":239486,"user_name":"一步","can_delete":false,"product_type":"c1","uid":1005391,"ip_address":"","ucode":"73CEA468CE70C3","user_header":"https://static001.geekbang.org/account/avatar/00/0f/57/4f/6fb51ff1.jpg","comment_is_top":false,"comment_ctime":1596546090,"is_pvip":true,"replies":[{"id":"88489","content":"我觉得把缓冲区理解为内存里的文件内容更直接点。","user_name":"作者回复","user_name_real":"吴咏炜","uid":"1645639","ctime":1596586413,"ip_address":"","comment_id":239486,"utype":1}],"discussion_count":4,"race_medal":0,"score":"1596546090","product_id":100055801,"comment_content":"是不是每个 正在用 vim 编辑的文件都会产生一个缓冲区 buffer, 然后文件改变未保存的时候会把修改的内容保存到缓冲区，在执行 : w 时再把缓冲区的内容保存到磁盘吗？","like_count":0,"discussions":[{"author":{"id":1645639,"avatar":"https://static001.geekbang.org/account/avatar/00/19/1c/47/53c48284.jpg","nickname":"吴咏炜","note":"","ucode":"8C24C10AEC779F","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":503115,"discussion_content":"我觉得把缓冲区理解为内存里的文件内容更直接点。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1596586413,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1205253,"avatar":"https://static001.geekbang.org/account/avatar/00/12/64/05/6989dce6.jpg","nickname":"我来也","note":"","ucode":"773D6104F56767","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":296496,"discussion_content":"你这个问题我也拿不准，看老师怎么答复吧。\n\n我知道的是这样：\nvim *.cpp打开多个文件时，只有切换到了对应的buffer，vim才会把文件加载到内存中。\n\n文件改变了但未保存时，肯定是修改了buffer中的内容，但是好像会间隔一段时间就会写一次临时文件（swp文件）。这样在vim异常退出后，还能保留部分上次编辑后未存盘的内容。\n\n:w肯定是会回写磁盘的了。\n具体是只同步buffer中修改的内容，还是整个文件，我也拿不准。\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1596555147,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1005391,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/57/4f/6fb51ff1.jpg","nickname":"一步","note":"","ucode":"73CEA468CE70C3","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1205253,"avatar":"https://static001.geekbang.org/account/avatar/00/12/64/05/6989dce6.jpg","nickname":"我来也","note":"","ucode":"773D6104F56767","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":296502,"discussion_content":"我vim之前只是简单的使用，原理的东西没有考虑过，看你的评论对vim挺熟悉的，也向你学习学习","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1596555725,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":296496,"ip_address":""},"score":296502,"extra":""},{"author":{"id":1205253,"avatar":"https://static001.geekbang.org/account/avatar/00/12/64/05/6989dce6.jpg","nickname":"我来也","note":"","ucode":"773D6104F56767","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1005391,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/57/4f/6fb51ff1.jpg","nickname":"一步","note":"","ucode":"73CEA468CE70C3","race_medal":0,"user_type":1,"is_pvip":true},"discussion":{"id":296504,"discussion_content":"我也只懂点皮毛。\n之前一直只会用vim看下日志。\n最近两年才完全切换到vim上来。\n\n最痛苦的是切换后的第一个星期，但是熬过了一个月，就好了。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1596556320,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":296502,"ip_address":""},"score":296504,"extra":""}]}]},{"had_liked":false,"id":239473,"user_name":"一步","can_delete":false,"product_type":"c1","uid":1005391,"ip_address":"","ucode":"73CEA468CE70C3","user_header":"https://static001.geekbang.org/account/avatar/00/0f/57/4f/6fb51ff1.jpg","comment_is_top":false,"comment_ctime":1596543118,"is_pvip":true,"replies":[{"id":"88488","content":"不支持。图形界面还是有些优势的。","user_name":"作者回复","user_name_real":"吴咏炜","uid":"1645639","ctime":1596586336,"ip_address":"","comment_id":239473,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1596543118","product_id":100055801,"comment_content":"图形界面 Vim 8 的话，Vim 支持在文件已经打开时自动切换到已经打开的 Vim 窗口上<br>----------------------<br>这个功能 终端 vim 支持吗？ 该怎么进行配置的？ ","like_count":0,"discussions":[{"author":{"id":1645639,"avatar":"https://static001.geekbang.org/account/avatar/00/19/1c/47/53c48284.jpg","nickname":"吴咏炜","note":"","ucode":"8C24C10AEC779F","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":503110,"discussion_content":"不支持。图形界面还是有些优势的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1596586336,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1205253,"avatar":"https://static001.geekbang.org/account/avatar/00/12/64/05/6989dce6.jpg","nickname":"我来也","note":"","ucode":"773D6104F56767","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":296499,"discussion_content":"终端不支持的吧。\n终端里一个vim就是一个进程，一个文件本来就是可以被多个vim同时打开的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1596555344,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":239064,"user_name":"ChamPly","can_delete":false,"product_type":"c1","uid":1072432,"ip_address":"","ucode":"B7FA8EB8DD8CD5","user_header":"https://static001.geekbang.org/account/avatar/00/10/5d/30/a9d12bdb.jpg","comment_is_top":false,"comment_ctime":1596425086,"is_pvip":false,"replies":[{"id":"88336","content":"都很多。能用图形界面我一般用图形界面，但很多时候只能远程连接，那就没办法了。","user_name":"作者回复","user_name_real":"吴咏炜","uid":"1645639","ctime":1596451865,"ip_address":"","comment_id":239064,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1596425086","product_id":100055801,"comment_content":"请问一下老师，您平时使用终端、gui哪个多一点呢？","like_count":0,"discussions":[{"author":{"id":1645639,"avatar":"https://static001.geekbang.org/account/avatar/00/19/1c/47/53c48284.jpg","nickname":"吴咏炜","note":"","ucode":"8C24C10AEC779F","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":502963,"discussion_content":"都很多。能用图形界面我一般用图形界面，但很多时候只能远程连接，那就没办法了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1596451865,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":239063,"user_name":"Geek_bob","can_delete":false,"product_type":"c1","uid":2056226,"ip_address":"","ucode":"BFDB4775C8048D","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Cu0zSHyib6sp2IFGXc7N3RZFpP3UXyCB3nAsCMKBCwzCf9iaN6cdeVWjdfOxe0u55cNgx9bSn7utiaUv5HLGSWklw/132","comment_is_top":false,"comment_ctime":1596424840,"is_pvip":false,"replies":[{"id":"88348","content":"图形界面 Vim 可以调你的配色方案。终端 Vim 就是在你的终端模拟器里设，跟 Vim 就没关系了。<br><br>比如，在图形界面里，要把光标设成绿色，可以用这个命令（一般是放在配色方案里的）：<br><br>highlight Cursor guifg=NONE guibg=Green<br><br>还参考这个链接：<br><br>https:&#47;&#47;unix.stackexchange.com&#47;questions&#47;72797&#47;how-do-i-highlight-the-current-line-and-the-cursor-in-vimrc","user_name":"作者回复","user_name_real":"吴咏炜","uid":"1645639","ctime":1596454541,"ip_address":"","comment_id":239063,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1596424840","product_id":100055801,"comment_content":"老师好，请问如何在 _vimrc中配置vim中光标的颜色。是set cursor吗 ？在帮助文档中没有找到。","like_count":0,"discussions":[{"author":{"id":1645639,"avatar":"https://static001.geekbang.org/account/avatar/00/19/1c/47/53c48284.jpg","nickname":"吴咏炜","note":"","ucode":"8C24C10AEC779F","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":502962,"discussion_content":"图形界面 Vim 可以调你的配色方案。终端 Vim 就是在你的终端模拟器里设，跟 Vim 就没关系了。\n\n比如，在图形界面里，要把光标设成绿色，可以用这个命令（一般是放在配色方案里的）：\n\nhighlight Cursor guifg=NONE guibg=Green\n\n还参考这个链接：\n\nhttps://unix.stackexchange.com/questions/72797/how-do-i-highlight-the-current-line-and-the-cursor-in-vimrc","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1596454541,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":239049,"user_name":"Geek_1ba5d9","can_delete":false,"product_type":"c1","uid":2073571,"ip_address":"","ucode":"F534BC8318133D","user_header":"","comment_is_top":false,"comment_ctime":1596422438,"is_pvip":false,"replies":[{"id":"88334","content":"不应该设成同一个。两个是不同系统，分别遵循Windows规则和Unix规则。简单起见，先只用其中一个。并且，如果用普通Windows版本，更建议用图形界面而不是终端版本。","user_name":"作者回复","user_name_real":"吴咏炜","uid":"1645639","ctime":1596451487,"ip_address":"","comment_id":239049,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1596422438","product_id":100055801,"comment_content":"您好，我想请问下，我在windows环境下，git bash里输入vim和cmd里输入vim，打开的是不同的vim。可以怎么设置成同一个吗","like_count":0,"discussions":[{"author":{"id":1645639,"avatar":"https://static001.geekbang.org/account/avatar/00/19/1c/47/53c48284.jpg","nickname":"吴咏炜","note":"","ucode":"8C24C10AEC779F","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":502954,"discussion_content":"不应该设成同一个。两个是不同系统，分别遵循Windows规则和Unix规则。简单起见，先只用其中一个。并且，如果用普通Windows版本，更建议用图形界面而不是终端版本。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1596451487,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":238983,"user_name":"Kevin⚡️Zhou","can_delete":false,"product_type":"c1","uid":1440772,"ip_address":"","ucode":"C0FC2673705212","user_header":"https://static001.geekbang.org/account/avatar/00/15/fc/04/d83a555e.jpg","comment_is_top":false,"comment_ctime":1596406529,"is_pvip":false,"replies":[{"id":"88260","content":"是。","user_name":"作者回复","user_name_real":"吴咏炜","uid":"1645639","ctime":1596413619,"ip_address":"","comment_id":238983,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1596406529","product_id":100055801,"comment_content":"&quot;如果某个 Vim 会话里不同的窗口或标签页（下一讲里会讨论）编辑的是同一个文件，它们对应到的也会是同一个缓冲区&quot;<br>老师, 这里的vim回话是指一个vim进程中是么?","like_count":0,"discussions":[{"author":{"id":1645639,"avatar":"https://static001.geekbang.org/account/avatar/00/19/1c/47/53c48284.jpg","nickname":"吴咏炜","note":"","ucode":"8C24C10AEC779F","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":502922,"discussion_content":"是。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1596413619,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":238971,"user_name":"唐龙","can_delete":false,"product_type":"c1","uid":1471657,"ip_address":"","ucode":"87A10AE04F2037","user_header":"https://static001.geekbang.org/account/avatar/00/16/74/a9/5eb3ebc6.jpg","comment_is_top":false,"comment_ctime":1596386201,"is_pvip":false,"replies":[{"id":"88259","content":"今后会遇到这种问题的人会越来越少了……","user_name":"作者回复","user_name_real":"吴咏炜","uid":"1645639","ctime":1596413570,"ip_address":"","comment_id":238971,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1596386201","product_id":100055801,"comment_content":"从别的地方粘贴代码，然后vim自动为我添加缩进的情况我遇到过，当时找到一行删四个空格，后面的用数字加点来完成，感觉~挺傻的。","like_count":0,"discussions":[{"author":{"id":1645639,"avatar":"https://static001.geekbang.org/account/avatar/00/19/1c/47/53c48284.jpg","nickname":"吴咏炜","note":"","ucode":"8C24C10AEC779F","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":502916,"discussion_content":"今后会遇到这种问题的人会越来越少了……","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1596413570,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1936087,"avatar":"https://static001.geekbang.org/account/avatar/00/1d/8a/d7/daabec34.jpg","nickname":"tequ1lAneio","note":"","ucode":"41336E87FF2E1A","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":388245,"discussion_content":"+1","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1628666753,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]}]}