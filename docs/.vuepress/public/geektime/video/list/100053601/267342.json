{"id":267342,"title":"32 | 总体架构设计","content":"<p><strong>课件和Demo地址</strong><br>\n<a href=\"https://gitee.com/geektime-geekbang/geektime-distributed\">https://gitee.com/geektime-geekbang/geektime-distributed</a></p>","comments":[{"had_liked":false,"id":238224,"user_name":"名贤集","can_delete":false,"product_type":"c3","uid":1033131,"ip_address":"","ucode":"220A754095BECE","user_header":"https://static001.geekbang.org/account/avatar/00/0f/c3/ab/c2ca35e6.jpg","comment_is_top":false,"comment_ctime":1596097490,"is_pvip":false,"replies":[{"id":88125,"content":"主要4点原因：\n1. 携程session数据总量大，如果全部存入redis缓存，成本比较高，而我们需要的是一套二级缓存机制，一级缓存常驻内存，存放当前活跃session数据，二级缓存可以持久化，存当前不活跃session数据，这样可以平衡性能和成本。\n2. 我们需要细粒度的埋点和监控，只有定制自研才能做到。\n3. 实现一个ASP.NET state server protocol+缓存并不复杂，我们完全可以在2～3月内搞定上线，如果引入redis，当然也可以架构设计出来一套类似系统，但是时间成本不会少多少，同时还是需要实现state server protocol，而且我们还需要监控维护redis。\n4. session server对携程这样体量的公司来说，太重要，不能出问题，定制自研我们的把控力会更大，可以做到全程白盒子，不留黑盒子。","user_name":"作者回复","user_name_real":"杨波","uid":1030344,"ctime":1596209087,"ip_address":"","comment_id":238224,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100053601,"comment_content":"session为何不直接存储在redis，为何要自己实现缓存呢？","like_count":6,"discussions":[{"author":{"id":1030344,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/b8/c8/c94d38a7.jpg","nickname":"杨波","note":"","ucode":"FA3418BB703BCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":502678,"discussion_content":"主要4点原因：\n1. 携程session数据总量大，如果全部存入redis缓存，成本比较高，而我们需要的是一套二级缓存机制，一级缓存常驻内存，存放当前活跃session数据，二级缓存可以持久化，存当前不活跃session数据，这样可以平衡性能和成本。\n2. 我们需要细粒度的埋点和监控，只有定制自研才能做到。\n3. 实现一个ASP.NET state server protocol+缓存并不复杂，我们完全可以在2～3月内搞定上线，如果引入redis，当然也可以架构设计出来一套类似系统，但是时间成本不会少多少，同时还是需要实现state server protocol，而且我们还需要监控维护redis。\n4. session server对携程这样体量的公司来说，太重要，不能出问题，定制自研我们的把控力会更大，可以做到全程白盒子，不留黑盒子。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1596209087,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":239518,"user_name":"不忘初心","can_delete":false,"product_type":"c3","uid":1117880,"ip_address":"","ucode":"5FE187B3F4EC39","user_header":"https://static001.geekbang.org/account/avatar/00/11/0e/b8/d91adbb3.jpg","comment_is_top":false,"comment_ctime":1596553288,"is_pvip":false,"replies":[{"id":88631,"content":"如果不采用二级缓存，全部基于redis，也可以实现SessionServer，只是需要采用不同的架构设计。\n\nSessionServer开发于2014年，当时的redis集群技术还不成熟，另外携程当时也没有专门的redis运维团队。\n\n我们自研的SessionServer也很轻量，开发工作量也不大，而且可以做精细化埋点监控，项目也挺成功的。\n\n","user_name":"作者回复","user_name_real":"杨波","uid":1030344,"ctime":1596729265,"ip_address":"","comment_id":239518,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100053601,"comment_content":"老师，假如后端存储使用了redis，那session server本地的二级缓存还有必要吗？","like_count":3,"discussions":[{"author":{"id":1030344,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/b8/c8/c94d38a7.jpg","nickname":"杨波","note":"","ucode":"FA3418BB703BCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":503126,"discussion_content":"如果不采用二级缓存，全部基于redis，也可以实现SessionServer，只是需要采用不同的架构设计。\n\nSessionServer开发于2014年，当时的redis集群技术还不成熟，另外携程当时也没有专门的redis运维团队。\n\n我们自研的SessionServer也很轻量，开发工作量也不大，而且可以做精细化埋点监控，项目也挺成功的。\n\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1596729265,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":250564,"user_name":"Johar","can_delete":false,"product_type":"c3","uid":1101969,"ip_address":"","ucode":"834136A6F64CDC","user_header":"https://static001.geekbang.org/account/avatar/00/10/d0/91/89123507.jpg","comment_is_top":false,"comment_ctime":1601132881,"is_pvip":false,"replies":[{"id":91757,"content":"你好，我们做分布式系统设计的时候，一般会做一个假设，就是每次出现故障的时候，假设一次只出现一个故障，不会两个故障同时发生(虽然理论上可能，但是几率极小)。所以我们假定session写入数据库失败，和该Session服务器同时又故障这两个故障不同时发生。如果不做这样的假设，那么还有可能超过两个以上同时故障的情况发生，这样就没完没了。\n\n即便session写入数据库失败，和该服务器又故障同时发生了，那会造成session数据丢失(假设这期间有session写入操作)，但是只是一个很小的时间窗口，SessionClient会很快重试其它SessionServer，也就是说数据丢失很少，概率也很小，所以我们认为这是可以接收的。\n\nsessionClient如果访问SessionServer失败，它会重试一定次数，超过一定阈值再切换到其它SessionServer做数据恢复。","user_name":"作者回复","user_name_real":"杨波","uid":1030344,"ctime":1601216466,"ip_address":"","comment_id":250564,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100053601,"comment_content":"波波老师，请教一下异步将session写入数据库失败，并且该服务器故障，会造成数据丢失，怎么处理的？另外就是说到某个session服务器故障后，sessionclient未感知前，也会访问失败，是否是通过多次重试的机制实现高可用？","like_count":2,"discussions":[{"author":{"id":1030344,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/b8/c8/c94d38a7.jpg","nickname":"杨波","note":"","ucode":"FA3418BB703BCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":506233,"discussion_content":"你好，我们做分布式系统设计的时候，一般会做一个假设，就是每次出现故障的时候，假设一次只出现一个故障，不会两个故障同时发生(虽然理论上可能，但是几率极小)。所以我们假定session写入数据库失败，和该Session服务器同时又故障这两个故障不同时发生。如果不做这样的假设，那么还有可能超过两个以上同时故障的情况发生，这样就没完没了。\n\n即便session写入数据库失败，和该服务器又故障同时发生了，那会造成session数据丢失(假设这期间有session写入操作)，但是只是一个很小的时间窗口，SessionClient会很快重试其它SessionServer，也就是说数据丢失很少，概率也很小，所以我们认为这是可以接收的。\n\nsessionClient如果访问SessionServer失败，它会重试一定次数，超过一定阈值再切换到其它SessionServer做数据恢复。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1601216466,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":238308,"user_name":"BigBang","can_delete":false,"product_type":"c3","uid":2054962,"ip_address":"","ucode":"5B9F6307BC02DC","user_header":"https://static001.geekbang.org/account/avatar/00/1f/5b/32/01ffe6f2.jpg","comment_is_top":false,"comment_ctime":1596118198,"is_pvip":false,"replies":[{"id":88126,"content":"可持久化缓存的数据可以存在磁盘上，磁盘的容量一般比内存大很多。","user_name":"作者回复","user_name_real":"杨波","uid":1030344,"ctime":1596209145,"ip_address":"","comment_id":238308,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100053601,"comment_content":"老师，可持久化缓存和内存有啥区别","like_count":2,"discussions":[{"author":{"id":1030344,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/b8/c8/c94d38a7.jpg","nickname":"杨波","note":"","ucode":"FA3418BB703BCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":502699,"discussion_content":"可持久化缓存的数据可以存在磁盘上，磁盘的容量一般比内存大很多。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1596209145,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":278321,"user_name":"tenyears","can_delete":false,"product_type":"c3","uid":1855229,"ip_address":"","ucode":"0CACA3D408FBBE","user_header":"https://static001.geekbang.org/account/avatar/00/1c/4e/fd/bce64518.jpg","comment_is_top":false,"comment_ctime":1612876544,"is_pvip":false,"replies":[{"id":101151,"content":"1. 这个ip是内部的，外网访问不到\n2. 实际系统对cookie中的ip信息有加密处理， \n所以没有特别的安全隐患。","user_name":"作者回复","user_name_real":"杨波","uid":1030344,"ctime":1612970367,"ip_address":"","comment_id":278321,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100053601,"comment_content":"cookie里面存有后端服务器IP等地址会不会有安全隐患","like_count":1,"discussions":[{"author":{"id":1030344,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/b8/c8/c94d38a7.jpg","nickname":"杨波","note":"","ucode":"FA3418BB703BCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":515345,"discussion_content":"1. 这个ip是内部的，外网访问不到\n2. 实际系统对cookie中的ip信息有加密处理， \n所以没有特别的安全隐患。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1612970367,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":262361,"user_name":"丁小明","can_delete":false,"product_type":"c3","uid":1207622,"ip_address":"","ucode":"CC23857B8D75D5","user_header":"https://static001.geekbang.org/account/avatar/00/12/6d/46/e16291f8.jpg","comment_is_top":false,"comment_ctime":1605699280,"is_pvip":false,"replies":[{"id":95199,"content":"存在服务器端，服务器端就变成有状态了，有状态系统很难升级维护，非常容易出错。\n\n服务器端的开发原则是尽量无状态，这样比较容易扩展，不容易出错。如果必须有状态，那么优先考虑集中状态。如果你搞成了需要状态同步的话，复杂性和出错概率会大大提升。","user_name":"作者回复","user_name_real":"杨波","uid":1030344,"ctime":1605714407,"ip_address":"","comment_id":262361,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100053601,"comment_content":"老师，是否可以将sessionid和服务器映射关系元数据存储在每个服务器节点上呢，并且客户端也缓存一份这样就不需要前端浏览器参与了。如果服务器扩容或者缩容重新同步元数据，客户端访问节点如果不存在，在重定向请求","like_count":1,"discussions":[{"author":{"id":1030344,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/b8/c8/c94d38a7.jpg","nickname":"杨波","note":"","ucode":"FA3418BB703BCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":509802,"discussion_content":"存在服务器端，服务器端就变成有状态了，有状态系统很难升级维护，非常容易出错。\n\n服务器端的开发原则是尽量无状态，这样比较容易扩展，不容易出错。如果必须有状态，那么优先考虑集中状态。如果你搞成了需要状态同步的话，复杂性和出错概率会大大提升。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1605714407,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":239623,"user_name":"飞翔","can_delete":false,"product_type":"c3","uid":1068571,"ip_address":"","ucode":"65AF6AF292DAD6","user_header":"https://static001.geekbang.org/account/avatar/00/10/4e/1b/f4b786b9.jpg","comment_is_top":false,"comment_ctime":1596599208,"is_pvip":false,"replies":[{"id":88634,"content":"你学得很仔细，异步写入有一个小的时间窗口，可能在用户更新还没有被写入后台DB前，SessionServer正好挂了，这个时候更新会丢失。\n\n实际使用中SessionSession自己挂概率非常小，即使发生也只是非常小的影响(异步写入时间窗是秒级)。另外，我们后面考虑后台用redis，SessionServer同步写穿透到redis，这样数据就不会丢失了。\n\n","user_name":"作者回复","user_name_real":"杨波","uid":1030344,"ctime":1596730078,"ip_address":"","comment_id":239623,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100053601,"comment_content":"老师sessionserver 是异步写入到数据库中 这时候sessionserver 挂了 不是还是会有数据丢失嘛","like_count":1,"discussions":[{"author":{"id":1030344,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/b8/c8/c94d38a7.jpg","nickname":"杨波","note":"","ucode":"FA3418BB703BCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":503165,"discussion_content":"你学得很仔细，异步写入有一个小的时间窗口，可能在用户更新还没有被写入后台DB前，SessionServer正好挂了，这个时候更新会丢失。\n\n实际使用中SessionSession自己挂概率非常小，即使发生也只是非常小的影响(异步写入时间窗是秒级)。另外，我们后面考虑后台用redis，SessionServer同步写穿透到redis，这样数据就不会丢失了。\n\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1596730078,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":293096,"user_name":"写点啥呢","can_delete":false,"product_type":"c3","uid":1065272,"ip_address":"","ucode":"C19032CF1C41BA","user_header":"https://static001.geekbang.org/account/avatar/00/10/41/38/4f89095b.jpg","comment_is_top":false,"comment_ctime":1621214974,"is_pvip":false,"replies":[{"id":107199,"content":"如果service client访问session server异常，并且重试3次还是异常，就可以判断后端服务挂掉，然后它就会重新选择1台可用的session server(从eureka获取可用session server ip列表)，进行session数据的恢复处理流程。\n\n因为这个设计没有引入raft之类分布式仲裁协议，所以不会出现脑裂。","user_name":"作者回复","user_name_real":"杨波","uid":1030344,"ctime":1622390077,"ip_address":"","comment_id":293096,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100053601,"comment_content":"请问老师，session client是如何确定后端服务挂掉的呢。如果仅是瞬间网络不可用，会不会出现类似“脑裂”的情况？比如多个seesion服务都有一个session id。服务是如何处理这种情况的？","like_count":0,"discussions":[{"author":{"id":1030344,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/b8/c8/c94d38a7.jpg","nickname":"杨波","note":"","ucode":"FA3418BB703BCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":520072,"discussion_content":"如果service client访问session server异常，并且重试3次还是异常，就可以判断后端服务挂掉，然后它就会重新选择1台可用的session server(从eureka获取可用session server ip列表)，进行session数据的恢复处理流程。\n\n因为这个设计没有引入raft之类分布式仲裁协议，所以不会出现脑裂。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1622390077,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":270581,"user_name":"美好时光海苔","can_delete":false,"product_type":"c3","uid":1904626,"ip_address":"","ucode":"CD4637BFC8A7C6","user_header":"https://static001.geekbang.org/account/avatar/00/1d/0f/f2/3f3c0946.jpg","comment_is_top":false,"comment_ctime":1609165474,"is_pvip":false,"replies":[{"id":98381,"content":"1. 一般同城的跨IDC可以使用光线链路(例如后面提到的波分多路复用光纤)，性能就像两个IDC在局域网内，性能完全没有问题。\n2. 电信的GSLB一般有策略状态，一般一个地区的IP都会被路由到同一个IDC，不会经常摆来摆去的，除非出现特殊情况(比如某个IDC的入口挂了），这个时候GSLB才会摆到另一个IDC。","user_name":"作者回复","user_name_real":"杨波","uid":1030344,"ctime":1609597311,"ip_address":"","comment_id":270581,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100053601,"comment_content":"老师，请教一个问题，在跨数据中心HA 摇摆策略中的例子，用户第二次请求从 DC2 web server -&gt; Session Server B (位于DC1)， 这种情况是否需要考虑 latency 延时呢？ 在刚开始老师你提到了 latency 的要求是 99% 小于 10ms， 这种跨数据中心的请求能保证低于10ms吗？ 因为课程中似乎没有提到GSLB 有状态，所以如果假设用户请求有一半都会forward到DC2， 那这种跨跨数据中心的延迟是不是会大大降低我们 定的 latency SLA ","like_count":0,"discussions":[{"author":{"id":1030344,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/b8/c8/c94d38a7.jpg","nickname":"杨波","note":"","ucode":"FA3418BB703BCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":512678,"discussion_content":"1. 一般同城的跨IDC可以使用光线链路(例如后面提到的波分多路复用光纤)，性能就像两个IDC在局域网内，性能完全没有问题。\n2. 电信的GSLB一般有策略状态，一般一个地区的IP都会被路由到同一个IDC，不会经常摆来摆去的，除非出现特殊情况(比如某个IDC的入口挂了），这个时候GSLB才会摆到另一个IDC。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1609597311,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":251697,"user_name":"Geek_27d75a","can_delete":false,"product_type":"c3","uid":2190299,"ip_address":"","ucode":"4658342ECE1866","user_header":"","comment_is_top":false,"comment_ctime":1601801230,"is_pvip":false,"replies":[{"id":92100,"content":"携程网站要求客户端浏览器启用cookie，否则Session不能正常工作。\n\n有些客户端浏览器虽然禁用了Cookie，但只是cookie不能持久化话，内存中还是有的，除非浏览器关闭，那么Cookie就没有了，下次必须重新登录获取Session。\n","user_name":"作者回复","user_name_real":"杨波","uid":1030344,"ctime":1602074393,"ip_address":"","comment_id":251697,"utype":1}],"discussion_count":2,"race_medal":0,"score":2,"product_id":100053601,"comment_content":"老师，浏览器Cookie中包含了SessionServe IP等信息安全吗？如果客户端浏览器禁止了Cookie呢","like_count":0,"discussions":[{"author":{"id":1030344,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/b8/c8/c94d38a7.jpg","nickname":"杨波","note":"","ucode":"FA3418BB703BCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":506587,"discussion_content":"携程网站要求客户端浏览器启用cookie，否则Session不能正常工作。\n\n有些客户端浏览器虽然禁用了Cookie，但只是cookie不能持久化话，内存中还是有的，除非浏览器关闭，那么Cookie就没有了，下次必须重新登录获取Session。\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1602074393,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1904626,"avatar":"https://static001.geekbang.org/account/avatar/00/1d/0f/f2/3f3c0946.jpg","nickname":"美好时光海苔","note":"","ucode":"CD4637BFC8A7C6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":338067,"discussion_content":"老师 关于这个问题我有一个followup, 从安全角度上，如果有人解析了cookie 并使用里面的IP  DDoS攻击同一个session server IP 这种情况需要考虑吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1609164479,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":244986,"user_name":"cysg","can_delete":false,"product_type":"c3","uid":1075699,"ip_address":"","ucode":"EF5B255AA7AEB1","user_header":"","comment_is_top":false,"comment_ctime":1598773743,"is_pvip":true,"replies":[{"id":90190,"content":"应该不会出现这种情况，如果B短暂不可用，Web应用的Session Client就会选另外一个SessionServer，比方说选C，然后将Session数据写入C(或者如果是读取的话，就通过后台DB读取Session数据，并缓存在C上)，然后这个被选的C的IP就会被写回到用户浏览器Cookie中，以后这个用户的Session就一直在C上。","user_name":"作者回复","user_name_real":"杨波","uid":1030344,"ctime":1598882700,"ip_address":"","comment_id":244986,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100053601,"comment_content":"写入到session server B失败了，然后随机选择另一台session server C进行写入。\n这个过程中，如果session server B不是挂掉，只是因为网络原因(网络分区)而失败。\n这样的话，对于同一个用户的session，在session server B和session server C上，是不是就不一致了？\n假如，稍后，该session由于种种原因又访问到session server B上。\n当然，这种概率其实很低。","like_count":0,"discussions":[{"author":{"id":1030344,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/b8/c8/c94d38a7.jpg","nickname":"杨波","note":"","ucode":"FA3418BB703BCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":504759,"discussion_content":"应该不会出现这种情况，如果B短暂不可用，Web应用的Session Client就会选另外一个SessionServer，比方说选C，然后将Session数据写入C(或者如果是读取的话，就通过后台DB读取Session数据，并缓存在C上)，然后这个被选的C的IP就会被写回到用户浏览器Cookie中，以后这个用户的Session就一直在C上。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1598882700,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":240523,"user_name":"千里不留行","can_delete":false,"product_type":"c3","uid":1099957,"ip_address":"","ucode":"7F9C518E6E0DFD","user_header":"https://static001.geekbang.org/account/avatar/00/10/c8/b5/b32ff06d.jpg","comment_is_top":false,"comment_ctime":1596960804,"is_pvip":false,"replies":[{"id":88949,"content":"你学得很仔细，扩容的时候一段时间内的确有负载不均衡的问题，但是Session是有过期时间的，默认20分钟，后面随着时间过去，Session会不断过期，然后重建，最终负载会自动变得均衡的。","user_name":"作者回复","user_name_real":"杨波","uid":1030344,"ctime":1597073117,"ip_address":"","comment_id":240523,"utype":1}],"discussion_count":2,"race_medal":0,"score":3,"product_id":100053601,"comment_content":"波波老师好。请教个问题，客户端第一次接入的时候是随机选择一个session server。 如果server做了扩容处理，继续随机选择的话，新加入的机器和老机器之间的负载是不一致的。这个当时是怎么处理的？ ","like_count":0,"discussions":[{"author":{"id":1030344,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/b8/c8/c94d38a7.jpg","nickname":"杨波","note":"","ucode":"FA3418BB703BCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":503476,"discussion_content":"你学得很仔细，扩容的时候一段时间内的确有负载不均衡的问题，但是Session是有过期时间的，默认20分钟，后面随着时间过去，Session会不断过期，然后重建，最终负载会自动变得均衡的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1597073117,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1904626,"avatar":"https://static001.geekbang.org/account/avatar/00/1d/0f/f2/3f3c0946.jpg","nickname":"美好时光海苔","note":"","ucode":"CD4637BFC8A7C6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":338072,"discussion_content":"老师，请教一个 followup 问题，设置rolling update 滚动更新的时间间隔是不是要考虑每20分钟更新一小部分 session server， 否则，如果比20分钟短，会不会造成过多的cache miss ","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1609164867,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":240510,"user_name":"Johar","can_delete":false,"product_type":"c3","uid":1101969,"ip_address":"","ucode":"834136A6F64CDC","user_header":"https://static001.geekbang.org/account/avatar/00/10/d0/91/89123507.jpg","comment_is_top":false,"comment_ctime":1596955129,"is_pvip":false,"replies":[{"id":88948,"content":"早期试点阶段DB的确是只有一个，但是由专门的DBA团队负责运维，并且是支持Master&#47;Slave高可用的。\n\n后面当session数据的量变大了，我们也是考虑对DB进行分片sharding分摊负载的。另外 session server也是分集群部署的，不同业务部门使用不同集群，也是可以分摊负载的。","user_name":"作者回复","user_name_real":"杨波","uid":1030344,"ctime":1597072924,"ip_address":"","comment_id":240510,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100053601,"comment_content":"老师，整体设计方案中session server db只有一个，有几个疑问:1.单个db没有考虑db的灾备，2.微服务中强调数据库和微服务放在一起，设计方案中是多个session server对应一个db是否合适？","like_count":0,"discussions":[{"author":{"id":1030344,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/b8/c8/c94d38a7.jpg","nickname":"杨波","note":"","ucode":"FA3418BB703BCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":503472,"discussion_content":"早期试点阶段DB的确是只有一个，但是由专门的DBA团队负责运维，并且是支持Master/Slave高可用的。\n\n后面当session数据的量变大了，我们也是考虑对DB进行分片sharding分摊负载的。另外 session server也是分集群部署的，不同业务部门使用不同集群，也是可以分摊负载的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1597072924,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":239633,"user_name":"飞翔","can_delete":false,"product_type":"c3","uid":1068571,"ip_address":"","ucode":"65AF6AF292DAD6","user_header":"https://static001.geekbang.org/account/avatar/00/10/4e/1b/f4b786b9.jpg","comment_is_top":false,"comment_ctime":1596599847,"is_pvip":false,"replies":[{"id":88706,"content":"这个严格来讲不是双写，是WriteBehind写后，后面的DB只是一个备份，备份数据一般也用不到，除非有SessionServer挂。写后失败和SessionServer挂同时发生的概率比较小，可以忽略。真发生，也只是少量用户Session丢失，重新登录即可。","user_name":"作者回复","user_name_real":"杨波","uid":1030344,"ctime":1596814449,"ip_address":"","comment_id":239633,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100053601,"comment_content":"客户端双写会有失败的情况 会数据不一致性 这个但是是怎么解决的呀","like_count":0,"discussions":[{"author":{"id":1030344,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/b8/c8/c94d38a7.jpg","nickname":"杨波","note":"","ucode":"FA3418BB703BCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":503170,"discussion_content":"这个严格来讲不是双写，是WriteBehind写后，后面的DB只是一个备份，备份数据一般也用不到，除非有SessionServer挂。写后失败和SessionServer挂同时发生的概率比较小，可以忽略。真发生，也只是少量用户Session丢失，重新登录即可。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1596814449,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":239629,"user_name":"飞翔","can_delete":false,"product_type":"c3","uid":1068571,"ip_address":"","ucode":"65AF6AF292DAD6","user_header":"https://static001.geekbang.org/account/avatar/00/10/4e/1b/f4b786b9.jpg","comment_is_top":false,"comment_ctime":1596599706,"is_pvip":false,"replies":[{"id":88705,"content":"SessionServer的写后WriteBehind到DB，可以考虑改造成写穿透WriteThrough到Redis，这是一个优化方案。","user_name":"作者回复","user_name_real":"杨波","uid":1030344,"ctime":1596814187,"ip_address":"","comment_id":239629,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100053601,"comment_content":"老师  还是觉得后端有个redis集群 吧session存在集群中不是更简单的方法嘛 ","like_count":0,"discussions":[{"author":{"id":1030344,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/b8/c8/c94d38a7.jpg","nickname":"杨波","note":"","ucode":"FA3418BB703BCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":503169,"discussion_content":"SessionServer的写后WriteBehind到DB，可以考虑改造成写穿透WriteThrough到Redis，这是一个优化方案。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1596814187,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":239627,"user_name":"飞翔","can_delete":false,"product_type":"c3","uid":1068571,"ip_address":"","ucode":"65AF6AF292DAD6","user_header":"https://static001.geekbang.org/account/avatar/00/10/4e/1b/f4b786b9.jpg","comment_is_top":false,"comment_ctime":1596599359,"is_pvip":false,"replies":[{"id":88635,"content":"一致性hash在client端有状态，而且扩容&#47;缩容时数据会搬家(重新分布)，比较复杂。\n\nSessionServer的实现是client端无状态的，简单。","user_name":"作者回复","user_name_real":"杨波","uid":1030344,"ctime":1596730426,"ip_address":"","comment_id":239627,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100053601,"comment_content":"还有 sessionserver还是可以用一致性hash的吧 如果serverdown 了之后 再去sql中查 不是和cookie的方法一样了嘛","like_count":0,"discussions":[{"author":{"id":1030344,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/b8/c8/c94d38a7.jpg","nickname":"杨波","note":"","ucode":"FA3418BB703BCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":503167,"discussion_content":"一致性hash在client端有状态，而且扩容/缩容时数据会搬家(重新分布)，比较复杂。\n\nSessionServer的实现是client端无状态的，简单。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1596730426,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":239621,"user_name":"飞翔","can_delete":false,"product_type":"c3","uid":1068571,"ip_address":"","ucode":"65AF6AF292DAD6","user_header":"https://static001.geekbang.org/account/avatar/00/10/4e/1b/f4b786b9.jpg","comment_is_top":false,"comment_ctime":1596598896,"is_pvip":false,"replies":[{"id":88633,"content":"额，你上网购物买得正爽，正准备付款，突然购物车莫名其妙被清空了，你不恼火？","user_name":"作者回复","user_name_real":"杨波","uid":1030344,"ctime":1596729609,"ip_address":"","comment_id":239621,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100053601,"comment_content":"老师 为啥 session 不能丢失呀  丢了 让用户重新登录一次 不就可以了嘛","like_count":0,"discussions":[{"author":{"id":1030344,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/b8/c8/c94d38a7.jpg","nickname":"杨波","note":"","ucode":"FA3418BB703BCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":503163,"discussion_content":"额，你上网购物买得正爽，正准备付款，突然购物车莫名其妙被清空了，你不恼火？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1596729609,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":239041,"user_name":"CrossOrigin","can_delete":false,"product_type":"c3","uid":1481744,"ip_address":"","ucode":"472ECAAC7573DA","user_header":"https://static001.geekbang.org/account/avatar/00/16/9c/10/14c70627.jpg","comment_is_top":false,"comment_ctime":1596420857,"is_pvip":false,"replies":[{"id":88626,"content":"1. session数据会过期，后台可以启任务定期清理DB中的过期数据，保证DB数据量不会太大。\n2. 经常变化也没有关系，因为SessionServer本身就是高性能的缓存，读写性能是都是ms毫秒级的，实时更新没有问题。","user_name":"作者回复","user_name_real":"杨波","uid":1030344,"ctime":1596727723,"ip_address":"","comment_id":239041,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100053601,"comment_content":"老师，\n1 异步写入DB的session ，数据库数据量会越来越大吧？\n2 用户session 数据应该是经常变化的，如何保证session的实时性\n","like_count":0,"discussions":[{"author":{"id":1030344,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/b8/c8/c94d38a7.jpg","nickname":"杨波","note":"","ucode":"FA3418BB703BCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":502952,"discussion_content":"1. session数据会过期，后台可以启任务定期清理DB中的过期数据，保证DB数据量不会太大。\n2. 经常变化也没有关系，因为SessionServer本身就是高性能的缓存，读写性能是都是ms毫秒级的，实时更新没有问题。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1596727723,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":238647,"user_name":"tt","can_delete":false,"product_type":"c3","uid":1489957,"ip_address":"","ucode":"7753B79AD5A9AC","user_header":"https://static001.geekbang.org/account/avatar/00/16/bc/25/1c92a90c.jpg","comment_is_top":false,"comment_ctime":1596248705,"is_pvip":false,"replies":[{"id":88480,"content":"这也是一种设计思路，这样Web服务器端需要维护一致性哈希状态，有点复杂。没有充分利用客户端的浏览器端可以帮忙记住一部分状态。","user_name":"作者回复","user_name_real":"杨波","uid":1030344,"ctime":1596558500,"ip_address":"","comment_id":238647,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100053601,"comment_content":"自研SESSION SERVER，考虑到水平扩容和高可用，我一开始想到的是集群中逻辑节点使用一致性哈希，为了高可靠，每个逻辑节点又由主备两个物理节点组成。\n\n这样的想法是不是和直接使用Redis 集群类似了。因为分片和数据自动重平衡是公共的需求，应该沉淀到中间件中去。","like_count":0,"discussions":[{"author":{"id":1030344,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/b8/c8/c94d38a7.jpg","nickname":"杨波","note":"","ucode":"FA3418BB703BCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":502812,"discussion_content":"这也是一种设计思路，这样Web服务器端需要维护一致性哈希状态，有点复杂。没有充分利用客户端的浏览器端可以帮忙记住一部分状态。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1596558500,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":325909,"user_name":"鲁·本","can_delete":false,"product_type":"c3","uid":1209939,"ip_address":"","ucode":"F1DEB30C21B48E","user_header":"https://static001.geekbang.org/account/avatar/00/12/76/53/21d62a23.jpg","comment_is_top":false,"comment_ctime":1639226691,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":3,"product_id":100053601,"comment_content":"老师，假设dc1写成功了，dc2写失败了，这种情怎么处理的","like_count":0},{"had_liked":false,"id":308418,"user_name":"GEEKBANG_8498104","can_delete":false,"product_type":"c3","uid":1702645,"ip_address":"","ucode":"CAF6D211B7BDBB","user_header":"","comment_is_top":false,"comment_ctime":1629614941,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":4,"product_id":100053601,"comment_content":"波波老师，怎么保证异步写请求一定成功？是有补偿机制吗？","like_count":0}]}