{"id":672238,"title":"08｜调用第三方：下游的接口不稳定性能又差怎么办？","content":"<p>你好，我是大明。今天我们来聊一个跟微服务架构有很强关联的话题：如何保证调用第三方接口的可用性。</p><p>到目前为止，我们可以看到任何一个系统，都难免要跟第三方打交道。</p><ul>\n<li>登录注册要跟微信开放平台打交道，接入扫码登录。</li>\n<li>金融要跟银行打交道，比如结算。</li>\n<li>重要功能发验证码，要跟短信服务商打交道。</li>\n<li>人脸识别、身份认证也要跟供应商打交道。</li>\n</ul><p><img src=\"https://static001.geekbang.org/resource/image/12/26/12a67b35cee3d228ecaf265c87d95426.png?wh=1920x787\" alt=\"图片\"></p><p>所以早期我就注意到很多人的简历上都写了自己对接过这一类的 API。但是我还注意到大多数人对接这些 API 的时候只是简单实现了功能。换句话来说，就是完全没有考虑可用性和容错之类的问题。</p><p>实际上，调用第三方接口是一个非常常见的场景，面试官很容易理解，所以在面试的时候你谈到这样的项目，很容易取得共鸣。而且你可以在上面应用非常多的微服务治理措施，和前面学过的内容形成呼应。</p><p>所以今天我就来和你深入讨论一下，如果你需要调用一些第三方接口，而你难以推动这个第三方接口的提供者做一些事情的时候，如何保证你的系统高可用。</p><h2>前置知识</h2><p>正常来说，和第三方平台打交道的是一个独立的模块还是一个独立的服务，取决于你维护的是一个单体应用还是微服务应用。</p><p><img src=\"https://static001.geekbang.org/resource/image/2d/b6/2d7c8fff9339e24709079caac6d824b6.png?wh=1920x1038\" alt=\"图片\"></p><p>对于自己系统内这样一个第三方模块或者第三方服务来说，它要解决的问题也很直观。</p><!-- [[[read_end]]] --><ul>\n<li>提供一个一致性抽象，屏蔽不同第三方平台 API 之间的差异。</li>\n<li>提供客户端治理，即提供调用第三方平台 API 的重试、限流等功能。</li>\n<li>提供可观测性支持。</li>\n<li>提供测试支持。</li>\n</ul><h3>一致性抽象</h3><p>这算是你这个模块或者服务最基本的目标。举个例子，如果你调用的是第三方支付平台，你们公司支持多种接入方式，包括微信支付、支付宝支付。</p><p>在这种情况下，业务方只希望调用你的某个接口，然后告诉你支付所需要的基本信息，比如说金额和方式。你这个接口的实现就能根据具体的支付方式发起调用，业务方完全不需要关心其中的任何细节。</p><p><img src=\"https://static001.geekbang.org/resource/image/34/4c/34384ebe0c3a50c27d1f9926aa23084c.png?wh=1920x1060\" alt=\"图片\"></p><p>这种一致性抽象会统一解决很多细节问题。比如不同的通信协议、不同的加密解密算法、不同的请求和响应格式、不同的身份认证和鉴权机制、不同的回调机制等等。这会带来两个好处。</p><ol>\n<li><strong>研发效率大幅提高，</strong>对于业务方来说他们不需要了解第三方的任何细节，所以他们接入一个第三方会是一件很简单的事情。</li>\n<li><strong>高可扩展性，</strong>你可以通过扩展接口的方式轻松接入新的第三方，而已有的业务完全不会受到影响。</li>\n</ol><p><img src=\"https://static001.geekbang.org/resource/image/37/67/378ce02ca7daebcf5d46a0938eb1cc67.png?wh=1920x692\" alt=\"图片\"></p><p>提供了一致性抽象之后，你就可以在这种一致性抽象上做很多事情，比如说客户端治理。</p><h3>客户端治理</h3><p>前面我们在讲熔断、降级、限流的时候，实际上都是在服务端或者网关进行的。那么这一次你就需要在客户端进行治理了。一般来说，客户端治理有两个关键措施：<strong>限流</strong>和<strong>重试</strong>。</p><p>就拿限流来说，大部分的第三方平台 API 为了保护自己的系统，是不允许你频繁发送请求的。比如说某些银行的接口只允许你一秒钟发送十个请求，多了就会拒绝服务。那么自然地，你其实可以在你发起调用之前就开启限流，这样就可以省去一次必然失败的调用。</p><p><img src=\"https://static001.geekbang.org/resource/image/c0/bd/c0495f7f18b1dbb7e462967ea8b3b0bd.png?wh=1920x753\" alt=\"图片\"></p><p>另外一个重要的措施是重试。当你调用第三方平台超时的时候，业务方肯定不希望你直接返回超时响应，因为他们还要自己处理超时，比如说发起重试等。</p><p><img src=\"https://static001.geekbang.org/resource/image/a0/fd/a06e5387c108899b8d8ab5d53cdc5dfd.png?wh=1920x1087\" alt=\"图片\"></p><p>所以你可以提供重试机制，并且可以对业务方保持透明。但你要小心的是，只有当第三方接口是幂等的时候你才能发起重试。</p><p>当你完成客户端治理之后，一般是不会出问题的。但万一业务出问题了怎么办？这时候你就需要可观测性支持，告诉你的业务方你的接口稳如泰山，把锅甩出去。</p><h3>可观测性支持</h3><p>第三方接口一般都不在你的控制范围内，所以你一定要做好监控，比如说接入 Prometheus 和SkyWalking 等工具。同时，你还要考虑提供便利的查询工具，让你自己和你的业务方都能够快速定位问题。</p><p>告警也是必不可少的。这些告警分成两类，一类是给你和你共同维护这个功能的同事使用的，另外一类是给业务方用的。例如，当监控系统发现第三方平台突然不可用了，那么它会发出两个告警，一个是告诉你出事了；另外一个则是通知业务方第三方平台目前不稳定，那么业务方就需要确认对他们业务的影响范围，以及他们是否需要启动一些容错措施。</p><p><img src=\"https://static001.geekbang.org/resource/image/ff/53/ff642b6de22yy785ae7d36e695003f53.png?wh=1920x1032\" alt=\"图片\"></p><p>可观测性做得好，定位和解决问题就会变得很简单。但是能不能进一步降低一点出问题的概率呢？</p><p>当然是可以的，你把测试支持做好，让你的业务方多测测，省得出了问题甩锅给你。</p><h3>测试支持</h3><p>测试支持的核心是你要提供<strong>mock服务</strong>。例如正常情况下，业务方调用你的接口，你会真的调用第三方API。但是在测试环境下，你就要考虑返回mock响应。</p><p>如果第三方平台还有回调机制，并且你在收到回调之后还要通知业务方，那么你还需要模拟这个回调。比如说微信支付接口后面会回调你的一个接口，告知你支付结果。</p><p><img src=\"https://static001.geekbang.org/resource/image/75/6d/7562f3a1bb1a663beb5ffd5f0e60996d.png?wh=1920x1027\" alt=\"图片\"></p><p>使用 mock 服务有很多好处。</p><ul>\n<li>没有额外开支。比如说发短信之类的，短信是收费的，那么测试服务如果能避免真的发送短信，多少也能省一点。</li>\n<li>不受制于第三方平台。有些第三方平台的认证和鉴权机制非常复杂，在测试环境要发起一次调用几乎不可能，那么只能用 mock 服务。</li>\n<li>你可以返回业务方任何预期的响应，包括成功响应、失败响应，甚至于你还能返回模拟第三方平台超时的响应。</li>\n</ul><p>如果考虑到压测之类的问题，那么这个 mock 功能就更加必不可少了，毕竟第三方是不可能配合你做压测的。</p><h2>面试准备</h2><p>如果你的业务需要和第三方平台打交道，那么你需要了解清楚以下信息。</p><ul>\n<li>你们是否构建了一个一致性的抽象，屏蔽了不同平台之间的差异？比如说你是和短信服务商打交道，如果你们公司决定换一家短信服务商，那么你需要做哪些事情，你的业务方能否不受影响？</li>\n<li>第三方平台有没有治理措施？比如说有没有限流机制，如果有是怎么限流的，你有没有针对这个限流做对应的客户端限流？</li>\n<li>你有没有在和第三方打交道的时候引入重试机制，以及重试几次，重试间隔如何，如果重试最终都失败了怎么办？</li>\n</ul><p>面试调用第三方这个话题的最佳策略就是将它包装成你整个系统可用性的关键一环。所以在面试官问到可用性相关内容的时候，或者直接问你是怎么和第三方打交道的时候，你就可以和他深入讨论这节课的内容。</p><p><img src=\"https://static001.geekbang.org/resource/image/89/62/89d6d4943ffc11911a133079e784c862.jpg?wh=2092x1416\" alt=\"\"></p><h2>基本思路</h2><p>面试官有些时候不一定会想到要深入考察你和第三方打交道的内容，因为可能他们公司做得就比较差，所以你要考虑主动出击。这种主动出击和前面的熔断、降级、限流、超时控制差不多。比如说你在自我介绍或者在项目介绍的时候，强调一下你的系统是一个<strong>高可用</strong>的微服务架构。</p><blockquote>\n<p>我的系统对可用性要求非常高，为此我综合使用了熔断、限流、降级、超时控制等措施。并且，我这个系统还有一个特别之处，就是它需要和很多第三方平台打交道。所以要想保证系统的可用性，我就需要保证和第三方打交道是高可用的。</p>\n</blockquote><p>这种话术你已经在前面的内容里见过了。当你将自己的项目说成是高可用的项目的时候，那么面试官肯定会逮着你往死里问高可用，那么你就能将话题全方位展开，并且限定在自己熟悉的战场内。</p><p>比如当你们聊到了调用第三方的时候，你可以考虑采用这个话术来介绍你的做法，关键词是<strong>前后对比</strong>。</p><blockquote>\n<p>我在刚接手这个项目的时候，这一块的设计和实现不太行。总体来说可扩展性、可用性、可观测性和可测试性都非常差。为了解决这个问题，全方位提高系统的可扩展性、可用性、可观测性和可测试性，我做了比较大的重构。<br>\n&nbsp;</p>\n<ol>\n<li>我重新设计了接口，提供了一个一致性抽象。（这里你可以补充你设计了哪些接口，然后强调一下效果）重构之后，研发效率提高了 30%，并且接入一个全新的第三方，也能对业务方做到完全没感知。</li>\n<li>我引入客户端治理措施，主要是限流和重试，并且针对一些特殊的第三方接口，我还设计了一些特殊的容错方案。</li>\n<li>我全方面接入了可观测性平台，包括 Prometheus 和 Skywalking，并且配置了告警。和原来比起来，现在能够做到快速响应故障了。</li>\n<li>我还进一步提供了测试工具，可以按照业务方的预期返回响应，比如说成功响应、失败响应以及模拟接口超时。针对压测，我也做了一些改进。</li>\n</ol>\n</blockquote><p><img src=\"https://static001.geekbang.org/resource/image/fe/a8/fe24e52f0f8bacddfcd525f9af49c3a8.png?wh=1920x681\" alt=\"图片\"></p><p>注意，在介绍任何一点的时候都要强调一下你最终取得的效果。这样能够凸显你在改进系统的时候是有计划的、成体系的。</p><p>另外这段话里面有一个地方你需要小心，就是研发效率提升30%，这是我举例子说的，而现实中研发效率是很难衡量的。所以你可以换一种说法，用具体例子来说明研发效率的提高。</p><blockquote>\n<p>在重构之前，原本我们公司的 A 组要接入我们的接口，搞了大概一个星期。后面重构之后，B 组接入我们的接口，只用了两天。而且稳定性更好，Bug 更少。</p>\n</blockquote><p>类似地，在告警那里你也可以强调在你完成重构前后的对比。</p><blockquote>\n<p>早期我们调用第三方接口的时候，缺乏监控和告警，以至于只有等用户出现问题联系客服的时候，或者业务方发现我们出现故障报告过来的时候，我们才知道出问题了。后面我们接入了监控和告警之后，在第三方接口出问题的短时间内，就能得到通知，然后快速启动各种容错预案，并且通知业务方和第三方。</p>\n</blockquote><p>最后你要进一步总结和引导。</p><blockquote>\n<p>在任何跟第三方打交道的场景之下，都要考虑好第三方崩溃的时候自己的系统怎么容错。公司或者部门内部的调用出现问题了，还可以推动同事快速修复。但是第三方是推不动的，所以只能是我们调用者考虑容错。</p>\n</blockquote><p>这里我依旧是留了一个话柄，就等着面试官来问怎么容错，这也就是我在亮点方案里面写的前两点，你可以考虑选择其中符合你业务的来回答。</p><h2>亮点方案</h2><p>这里我提供三个可以刷亮点的方向，分别是<strong>同步转异步、自动替换第三方和压测支持。</strong>你可以根据你的需要与面试的情况，选择其中一两个。</p><h3>同步转异步</h3><p>在一些不需要立刻拿到响应的场景，如果你发现第三方已经崩溃了，你可以将业务方的请求临时存储起来。等后面第三方恢复了再继续调用第三方处理。这种方案一般用于对时效性要求不高的业务。比如业务方只是要求你上报数据，不要求你立刻成功，那么你就可以采用这种方案。</p><p><img src=\"https://static001.geekbang.org/resource/image/54/4b/547aee02b70c135f3ccbd2503779224b.png?wh=1920x1031\" alt=\"图片\"></p><p>你可以仔细介绍你的容错方案，关键词就是<strong>同步转异步</strong>。</p><blockquote>\n<p>正常来说我们推送数据都是尽可能实时推过去，但是有些时候业务方推过来的数据太多，又或者第三方崩溃，那么我就会临时将数据存起来。后面第三方恢复过来了，再逐步将数据同步过去。这算是比较典型的同步转异步用法。</p>\n</blockquote><p>更进一步，你可以阐述对这个做法的进一步改进，关键词是<strong>解耦</strong>。</p><blockquote>\n<p>我们这种容错机制其实完全可以做成利用消息队列来彻底解耦的形式。在这种解耦的架构下，业务方不再是同步调用一个接口，而是把消息丢到消息队列里面。然后我们的服务不断消费消息，调用第三方接口处理业务。等处理完毕再将响应通过消息队列通知业务方。</p>\n</blockquote><p><img src=\"https://static001.geekbang.org/resource/image/86/99/8697172b4c7e1f2a2cc9d02ac11e2d99.png?wh=1920x665\" alt=\"图片\"></p><p>那么这种解耦的方式和直接调用的方式合并在一起，其实就是正常我们系统对接业务方的两个方案。所以你可以再次总结拔高一下。</p><blockquote>\n<p>同步调用与异步解耦两种方式，可以看作是对接不同业务方的通用范式。一般而言但凡能异步解耦的，我绝不搞什么同步调用。</p>\n</blockquote><h3>自动替换第三方</h3><p>这种策略和我在负载均衡里面提到的有些类似，即调用一个第三方的接口失败的时候，你可以考虑换一个第三方。</p><p>举例来说，你们公司有 A、B、C 三个短信供应商。现在你在选择使用 A 的时候，发现 A 一直返回失败的响应，或者说响应时间很长，那么你就可以考虑自动切换到 B 上。</p><p><img src=\"https://static001.geekbang.org/resource/image/7f/7d/7f5680e92e2740527582d405ccdyy57d.png?wh=1920x950\" alt=\"图片\"></p><p>但是这种策略是受制于公司的情况的，大多数时候公司是没有这种可以切换的服务供应商的。早期我就听过某司使用的短信服务商服务异常，导致网站在一段时间内都无法发送验证码，引发了严重事故。所以你可以这样介绍你的方案，关键词是<strong>自动替换</strong>。</p><blockquote>\n<p>为了进一步提高可用性，降低因为第三方故障引起事故的概率，我在调用第三方这里引入了自动替换机制。我们本来有多个第三方，相互之间是可以替换的，于是我就做了一个简单的自动切换机制。当我发现第三方接口出现故障的时候，就会切换到一个新的第三方。</p>\n</blockquote><p>这里有一些面试官可能会追问的点。</p><ol>\n<li>你怎么知道第三方出问题了？这个问题可以参考我们前面讲过多次的判断服务健康与否的方式，比如说用响应时间、错误率、超时率。那么自然可以将话题引导到熔断、降级、限流那边。</li>\n<li>如果全部可用的第三方都崩溃了怎么办？这种问题直接认怂就可以。因为一家出故障是小概率，多家同时出故障那就更是小概率事件了，在这种情况下你除了告警也没有别的办法了。也就是所谓的尽人事，听天命。</li>\n</ol><h3>压测支持</h3><p>每当你想搞压测的时候，你就会发现，所有的第三方接口都是压测路上的拦路虎。</p><p>正常来说，你不能指望第三方会配合你的压测。你可以设想，类似于微信之类的开放平台是不可能配合你搞什么压力测试的。甚至即便你是非常强硬的甲方，你想让乙方配合你做压力测试，也是不现实的。所以你只能考虑通过 mock 来提供压测支持。和正常的测试支持比起来，压测你需要做到三件事。</p><ul>\n<li>模拟第三方的响应时间。</li>\n<li>模拟触发你的容错机制。如果你采用了同步转异步这种容错机制，那么你需要确保在流量很大的情况下，你确实转异步了；如果你采用的是自动切换第三方，那你也要确保真的如同你设想的那样真的切换了新的第三方。</li>\n<li>流量分发。如果是在全链路压测的情况下，压测流量你会分发到 mock 逻辑，而真实业务请求你是真的调用第三方。</li>\n</ul><p><img src=\"https://static001.geekbang.org/resource/image/73/10/73cac15e253c7326f52cda9576196f10.png?wh=1920x874\" alt=\"图片\"></p><p>那么你在介绍你的测试支持的时候可以强调一下这个特性。</p><blockquote>\n<p>早期为了弄清楚服务的吞吐量和响应时间瓶颈，我搞过一些压测。但这些流量不能真的调用第三方，所以我为了解决压测这个问题，设计了两个东西。<br>\n&nbsp;<br>\n一个是模拟第三方的响应时间。不过这种模拟是比较简单的，就是在代码里面睡眠一段时间，这段时间是第三方接口的平均响应时间加上一个随机偏移量计算得出的。另一个是在并发非常高的情况下，会触发我的容错机制。<br>\n&nbsp;<br>\n而且我这里留好了接口，万一我们公司要做全链路压测了，我这边也可以根据链路元数据将压测流量转发到 mock 逻辑，而真实业务请求则会发起真实调用。</p>\n</blockquote><p>最后一段我是假设你并没有实际接触过全链路压测。如果你接触过，那么你就可以改成“你已经做到”，而不是“留好了接口”。</p><h2>面试思路总结</h2><p>这节课我们讨论了调用第三方平台接口如何保证可用性的问题。当你和第三方平台打交道的时候，要做到这四点：<strong>一致性抽象</strong>、<strong>客户端治理</strong>、<strong>可观测性支持</strong>和<strong>测试支持</strong>。同时在后面我进一步提供了<strong>同步转异步</strong>，<strong>自动替换第三方</strong>和<strong>压测支持</strong>三个亮点方案。</p><p>这节课的内容你也可以看作是我们前面讲的熔断、限流、降级和超时控制在一个具体场景下的综合运用。不管你们公司用不用得上这些治理手段，你都要自己去尝试一下，因为面试需要你用上这些治理手段。不然你的整个项目经历平平无奇，那么连面试的机会都难得，更加不要说刷出亮点了。</p><p>此外，在这节课还有一个点你需要额外注意，就是<strong>强调自己对研发效率的改进</strong>。研发效率是一个比较难量化的东西，所以你在面试的时候要想办法说服面试官相信你确实提高了研发效率。</p><p><img src=\"https://static001.geekbang.org/resource/image/fe/0f/fea784a0c5dc685a62bd5a9d9ba4930f.jpg?wh=2025x2036\" alt=\"\"></p><h2>思考题</h2><p>最后你来思考2个问题。</p><ul>\n<li>你们公司有没有出现什么因为第三方服务不可用引发的故障？后面你们有没有设计什么改进方案？</li>\n<li>你的工作经历中有没有什么内容主要是提高同事研发效率的？如果有，你是怎么向面试官介绍这个项目并且让他相信你确实提高了研发效率的？</li>\n</ul><p>欢迎你把你的答案分享在评论区，也欢迎你把这节课的内容分享给需要的朋友，我们下节课再见！</p>","neighbors":{"left":{"article_title":"07｜超时控制：怎么保证用户一定能在1s内拿到响应？","id":670877},"right":{"article_title":"09｜综合服务治理方案：怎么保证微服务应用的高可用？","id":672251}},"comments":[{"had_liked":false,"id":377318,"user_name":"我好像一点都不像程序员","can_delete":false,"product_type":"c1","uid":1435733,"ip_address":"广东","ucode":"F479190923355C","user_header":"https://static001.geekbang.org/account/avatar/00/15/e8/55/63189817.jpg","comment_is_top":false,"comment_ctime":1688315830,"is_pvip":false,"replies":[{"id":137508,"content":"大佬！你们公司这个方面算是做得非常仔细了，比很多大厂做得还要仔细了。监控这部分，我是没想到还可以分析性价比，学到了！","user_name":"作者回复","user_name_real":"编辑","uid":1176655,"ctime":1688369854,"ip_address":"中国台湾","comment_id":377318,"utype":1}],"discussion_count":4,"race_medal":0,"score":2,"product_id":100551601,"comment_content":"看文章的内容，让我想到我们部门负责的短信服务，它就需要接入多个短信供应商，并且保证高可用，因此它做了接口的抽象，一个发短信的接口可以支持指定供应商，不指定则根据系统设置的权重加上触达率以及价格成本选择最合适当前业务的供应商进行发送，如果某个供应商一直不可用，检测到也会暂时下线它，又由于公司的营销业务经常需要发大量的短信，因此我们又实现了批量定时短信能力，服务自己本身也实现了限流，重试，同时为了节约成本配合业务组压测，增加一个调试模式，此模式不会真正发送短信，也做了很多的数据面板可以分析哪个供应商的性价比最高，错误率多少，错误分类占比等，然后回答下第一个问题，公司用到的第三方服务都是比较成熟的产品，所以极少出现问题，如果出问题了，那么数据补偿或者业务补偿机制可以搞一下，如果第三方可以替换，比如短信提供商，那就要支持重试后自动替换，当然，为了安抚客户，最好是用比较友好的报错提示，不要直接报服务端的错误给到用户。","like_count":23,"discussions":[{"author":{"id":1176655,"avatar":"https://static001.geekbang.org/account/avatar/00/11/f4/4f/aa916c8c.jpg","nickname":"邓小明","note":"","ucode":"02243D1F7492A6","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":622509,"discussion_content":"大佬！你们公司这个方面算是做得非常仔细了，比很多大厂做得还要仔细了。监控这部分，我是没想到还可以分析性价比，学到了！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1688369854,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"中国台湾","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":1,"child_discussions":[{"author":{"id":1435733,"avatar":"https://static001.geekbang.org/account/avatar/00/15/e8/55/63189817.jpg","nickname":"我好像一点都不像程序员","note":"","ucode":"F479190923355C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1176655,"avatar":"https://static001.geekbang.org/account/avatar/00/11/f4/4f/aa916c8c.jpg","nickname":"邓小明","note":"","ucode":"02243D1F7492A6","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":622530,"discussion_content":"我很菜的，希望大佬多带带我","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1688381162,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":622509,"ip_address":"广东","group_id":0},"score":622530,"extra":""}]},{"author":{"id":2037522,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/YbUxEV3741vKZAiasOXggWucQbmicJwIjg3HDE58oyibYXbSop9QQFqZ7X6OhynDoo6rDHwzK8njSeJjN9hx3pJXg/132","nickname":"黄堃健","note":"","ucode":"B4AD5250A41B3A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":642566,"discussion_content":"大佬， 我很好奇如何实现接口的抽象，对接们部门负责的短信服务， 供应商1，供应商2提供的api是不一样。 是你内部根据接口的类型参数指定调用不同的api吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1713664970,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"广东","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1022318,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/99/6e/abb7bfe3.jpg","nickname":"景","note":"","ucode":"147E386502D9C0","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":623246,"discussion_content":"这评论要是有换行和分段就更好阅读了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1689225812,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"上海","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":377502,"user_name":"penbox","can_delete":false,"product_type":"c1","uid":1052938,"ip_address":"四川","ucode":"59C4F47ACCB7F2","user_header":"https://static001.geekbang.org/account/avatar/00/10/11/0a/59639f1f.jpg","comment_is_top":false,"comment_ctime":1688611492,"is_pvip":true,"replies":[{"id":137600,"content":"1. 这边如果你要去面试的话，就要搞清楚切换机制的细节，比如什么时候触发切换，会不会换回来，如果都失败了怎么办？有没有可能切换本身就失败了？是人手工切换还是自动切换？\n2. 这其实就是我说的很难说清楚研发效率。从你的描述里面，我能够感觉到应该是有提高的，但是就不清楚你究竟做到了什么地步。举个例子，就是同样的系统，你是做到了页面拖拉拽就生成一个新流程，还是说要写一大堆配置？还是说需要提供新接口实现。也就是难以证明我究竟提高了多少。因此你这一段话比较欠缺说服力。","user_name":"作者回复","user_name_real":"编辑","uid":1176655,"ctime":1688829656,"ip_address":"广东","comment_id":377502,"utype":1}],"discussion_count":2,"race_medal":0,"score":2,"product_id":100551601,"comment_content":"1. 你们公司有没有出现什么第三方服务不可用引发的故障？后面有没有设计什么改进方案？\n一个手机短信验证码登录的功能，遇到过因为短信服务商故障，导致系统有一个小时不能通过短信验证码登录。后续的改进方案就是引入另外一家短信服务商，并加入切换机制。\n2. 你的工作经历中有没有什么内容是提高同事研发效率的？如果有，你是怎么向面试官介绍这个项目并让他相信确实提高了研发效率？\n做过一个流程引擎的功能。\n在企业软件开发中，流程审批是一个很常见的功能，流程也经常需要根据甲方要求做调整。在引入流程引擎前，都是靠代码来实现流程的流转，代码中充斥着条件判断，混杂了业务逻辑和流程处理逻辑，很难看懂也很难进行流程调整。\n后来我引入了一套流程引擎，把流程和业务完全剥离开，代码变得更清爽，流程调整也变容易了。","like_count":4,"discussions":[{"author":{"id":1176655,"avatar":"https://static001.geekbang.org/account/avatar/00/11/f4/4f/aa916c8c.jpg","nickname":"邓小明","note":"","ucode":"02243D1F7492A6","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":622933,"discussion_content":"1. 这边如果你要去面试的话，就要搞清楚切换机制的细节，比如什么时候触发切换，会不会换回来，如果都失败了怎么办？有没有可能切换本身就失败了？是人手工切换还是自动切换？\n2. 这其实就是我说的很难说清楚研发效率。从你的描述里面，我能够感觉到应该是有提高的，但是就不清楚你究竟做到了什么地步。举个例子，就是同样的系统，你是做到了页面拖拉拽就生成一个新流程，还是说要写一大堆配置？还是说需要提供新接口实现。也就是难以证明我究竟提高了多少。因此你这一段话比较欠缺说服力。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1688829656,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"广东","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1568589,"avatar":"https://static001.geekbang.org/account/avatar/00/17/ef/4d/83a56dad.jpg","nickname":"Z.","note":"","ucode":"9C9C97C470D761","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":642041,"discussion_content":"这个流程引擎没有看懂提升了什么","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1713257424,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":389669,"user_name":"Geek_440fc7","can_delete":false,"product_type":"c1","uid":3876444,"ip_address":"上海","ucode":"990C9BFFCF911A","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/GPLUa1IFLd5wvoLPEia1ick2bznDf7ESvKH3baY6fkjNlwtBnFbU2jdNlhKJQCibOAaPEjp5A31MEgU7hJ9DBSqaJOvmlXSeAHBxmdAQ6FmXjM/132","comment_is_top":false,"comment_ctime":1713231801,"is_pvip":false,"replies":[{"id":141982,"content":"就是一般的微服务治理思路，什么熔断限流降级隔离分组，多活灾备，监控什么的搞一套，就差不多了。","user_name":"作者回复","user_name_real":"编辑","uid":1176655,"ctime":1715230996,"ip_address":"广东","comment_id":389669,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100551601,"comment_content":"如果是作为第三方提供上报接口，该如何保证高可用？","like_count":0,"discussions":[{"author":{"id":1176655,"avatar":"https://static001.geekbang.org/account/avatar/00/11/f4/4f/aa916c8c.jpg","nickname":"邓小明","note":"","ucode":"02243D1F7492A6","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":644402,"discussion_content":"就是一般的微服务治理思路，什么熔断限流降级隔离分组，多活灾备，监控什么的搞一套，就差不多了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1715230996,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"广东","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2,\"source\":0}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":385480,"user_name":"Geek_8755c4","can_delete":false,"product_type":"c1","uid":3787026,"ip_address":"北京","ucode":"B6B910794289B5","user_header":"","comment_is_top":false,"comment_ctime":1702728975,"is_pvip":false,"replies":[{"id":140754,"content":"没你想的那么难。压测这个就很难，因为第三方一般不会配合你做压测。你就可以用一个 Mock 服务来替换第三方，然后只测试自己这一部分。","user_name":"作者回复","user_name_real":"编辑","uid":1176655,"ctime":1704189188,"ip_address":"广东","comment_id":385480,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100551601,"comment_content":"那该如何做呢？如何实现这个过程呢？理论上讨论起来似乎很简单，但是怎么落地执行呀。比如：压测支持，该如何落地执行。","like_count":0,"discussions":[{"author":{"id":1176655,"avatar":"https://static001.geekbang.org/account/avatar/00/11/f4/4f/aa916c8c.jpg","nickname":"邓小明","note":"","ucode":"02243D1F7492A6","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":634913,"discussion_content":"没你想的那么难。压测这个就很难，因为第三方一般不会配合你做压测。你就可以用一个 Mock 服务来替换第三方，然后只测试自己这一部分。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1704189188,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"广东","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2,\"source\":0}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":385479,"user_name":"Geek_8755c4","can_delete":false,"product_type":"c1","uid":3787026,"ip_address":"北京","ucode":"B6B910794289B5","user_header":"","comment_is_top":false,"comment_ctime":1702725978,"is_pvip":false,"replies":[{"id":140753,"content":"日志 + prometheus + tracing，然后在类似 grafana 之类的框架里面配置好告警，","user_name":"作者回复","user_name_real":"编辑","uid":1176655,"ctime":1704189115,"ip_address":"广东","comment_id":385479,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100551601,"comment_content":"这个需要怎么做：如何做好监控呢？","like_count":0,"discussions":[{"author":{"id":1176655,"avatar":"https://static001.geekbang.org/account/avatar/00/11/f4/4f/aa916c8c.jpg","nickname":"邓小明","note":"","ucode":"02243D1F7492A6","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":634912,"discussion_content":"日志 + prometheus + tracing，然后在类似 grafana 之类的框架里面配置好告警，","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1704189115,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"广东","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2,\"source\":0}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":382522,"user_name":"Geek_680632","can_delete":false,"product_type":"c1","uid":3730160,"ip_address":"浙江","ucode":"9421FB33A0C6A9","user_header":"","comment_is_top":false,"comment_ctime":1697516288,"is_pvip":false,"replies":[{"id":139349,"content":"赞！\n2. 这个地方证据还是比较薄弱的，或者说你只说了自己做了什么，但是面试官看不出来效果。","user_name":"作者回复","user_name_real":"编辑","uid":1176655,"ctime":1697724482,"ip_address":"广东","comment_id":382522,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100551601,"comment_content":"1.调用第三方的路由是通过配置规则来确定的，第三方不可用导致出现失败订单，通过故障自动切换来解决这个问题；2.提供统一抽象接口，封装基础组件。","like_count":0,"discussions":[{"author":{"id":1176655,"avatar":"https://static001.geekbang.org/account/avatar/00/11/f4/4f/aa916c8c.jpg","nickname":"邓小明","note":"","ucode":"02243D1F7492A6","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":629852,"discussion_content":"赞！\n2. 这个地方证据还是比较薄弱的，或者说你只说了自己做了什么，但是面试官看不出来效果。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1697724483,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"广东","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":379358,"user_name":"lllweiz","can_delete":false,"product_type":"c1","uid":1142547,"ip_address":"广东","ucode":"4B14483E9BF0EB","user_header":"https://static001.geekbang.org/account/avatar/00/11/6f/13/53d3d41b.jpg","comment_is_top":false,"comment_ctime":1691808911,"is_pvip":false,"replies":[{"id":138260,"content":"赶紧刷 KPI ！","user_name":"作者回复","user_name_real":"编辑","uid":1176655,"ctime":1692078624,"ip_address":"广东","comment_id":379358,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100551601,"comment_content":"现在做的项目就是遇到了调用第三方导致的诸多问题，这篇文章让我恨恨地学习了，感谢大明","like_count":0,"discussions":[{"author":{"id":1176655,"avatar":"https://static001.geekbang.org/account/avatar/00/11/f4/4f/aa916c8c.jpg","nickname":"邓小明","note":"","ucode":"02243D1F7492A6","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":625696,"discussion_content":"赶紧刷 KPI ！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1692078624,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"广东","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":377430,"user_name":"码小呆","can_delete":false,"product_type":"c1","uid":2055809,"ip_address":"广东","ucode":"44532D6ABF9340","user_header":"https://static001.geekbang.org/account/avatar/00/1f/5e/81/82709d6e.jpg","comment_is_top":false,"comment_ctime":1688482009,"is_pvip":false,"replies":[{"id":137609,"content":"不是，是换实现。\n你可以理解为你有一个抽象地发送短信的接口，而后针对不同服务商有不同的实现。\n那么在实现层面上，比较简单的就是你用一个数组装着所有的实现，然后当一个调不通，你判定已经寄了的时候，就挪一下数组下标，用下一个实现。","user_name":"作者回复","user_name_real":"编辑","uid":1176655,"ctime":1688830700,"ip_address":"广东","comment_id":377430,"utype":1}],"discussion_count":5,"race_medal":0,"score":2,"product_id":100551601,"comment_content":"有一个疑问,短信自动切换是如何实现的,难道是定义了多套代码,然后判断第一个出现错误,然后就请求其他短信发送接口?","like_count":0,"discussions":[{"author":{"id":1176655,"avatar":"https://static001.geekbang.org/account/avatar/00/11/f4/4f/aa916c8c.jpg","nickname":"邓小明","note":"","ucode":"02243D1F7492A6","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":622942,"discussion_content":"不是，是换实现。\n你可以理解为你有一个抽象地发送短信的接口，而后针对不同服务商有不同的实现。\n那么在实现层面上，比较简单的就是你用一个数组装着所有的实现，然后当一个调不通，你判定已经寄了的时候，就挪一下数组下标，用下一个实现。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1688830700,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"广东","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1131592,"avatar":"https://static001.geekbang.org/account/avatar/00/11/44/48/fae317c1.jpg","nickname":"子休","note":"","ucode":"EDB61FB012C195","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":623869,"discussion_content":"这里其实就可以使用策略模式来实现，定义一个通用接口给外部调用。然后接口的实现里面，根据不同的输入参数来决定调用不同的实现类，如果没有明确的输入参数指定短信服务商，那就调用默认的，然后如果默认的服务商接口调用出错了，捕获异常，再调用其它实现类的方法实现，继续触发短信发送功能。","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1689932220,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"上海","group_id":0},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1344007,"avatar":"https://static001.geekbang.org/account/avatar/00/14/82/07/5940b400.jpg","nickname":"SaimSaim","note":"","ucode":"E4755472EF6C1E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1131592,"avatar":"https://static001.geekbang.org/account/avatar/00/11/44/48/fae317c1.jpg","nickname":"子休","note":"","ucode":"EDB61FB012C195","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":638681,"discussion_content":"责任链模式","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1709797236,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":623869,"ip_address":"广东","group_id":0},"score":638681,"extra":""}]},{"author":{"id":1568589,"avatar":"https://static001.geekbang.org/account/avatar/00/17/ef/4d/83a56dad.jpg","nickname":"Z.","note":"","ucode":"9C9C97C470D761","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":642042,"discussion_content":"这里是不是map也可以,通过设置defaultkey,和传入key来调用具体的实现\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1713257716,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1056111,"avatar":"https://static001.geekbang.org/account/avatar/00/10/1d/6f/0e552a48.jpg","nickname":"志文","note":"","ucode":"27547A5FC2A90D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":625293,"discussion_content":"有负载均衡的意思\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1691549918,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"福建","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":377373,"user_name":"3.0的A7","can_delete":false,"product_type":"c1","uid":1211991,"ip_address":"北京","ucode":"23C5F02B45CE39","user_header":"https://static001.geekbang.org/account/avatar/00/12/7e/57/8c1051b6.jpg","comment_is_top":false,"comment_ctime":1688393166,"is_pvip":false,"replies":[{"id":137525,"content":"1. 是的，正常来说，应该是走变更流程，代码 review，能避免很多问题。不过之前我们出现过的大对象，那就真的是没有预料到，因为从代码上是看不出来这里会有大对象，然后寄了。\n2. 你这里如果出去面试还是可以深入讨论你的平台是怎么设计的，","user_name":"作者回复","user_name_real":"编辑","uid":1176655,"ctime":1688454542,"ip_address":"中国台湾","comment_id":377373,"utype":1}],"discussion_count":2,"race_medal":0,"score":2,"product_id":100551601,"comment_content":"1、之前公司，有个同事操作不规范，查询把 公司阿里云的 redis 搞挂了，结果一连串服务都用不了了。改进方案是，打开了阿里云 redis 后台的一些个检测规则😵‍💫，其实正常是应该代码 review 的，这样就可以发现。还有现在公司，经常有个服务一发版，就导致别的服务不可用了，咱也不知道为啥。\n2、这个主要是写了写公共组件、平台给同事用。\n我主要是写了一个日至组件，通过该组件日志可以输出到指定位置，然后通过 filebeat kafka es 进行收集展示，用户还可以进行设置指定级别的日志告警，保证业务出错第一时间发现。\n还写了一个平台，吧啦吧啦","like_count":0,"discussions":[{"author":{"id":1176655,"avatar":"https://static001.geekbang.org/account/avatar/00/11/f4/4f/aa916c8c.jpg","nickname":"邓小明","note":"","ucode":"02243D1F7492A6","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":622593,"discussion_content":"1. 是的，正常来说，应该是走变更流程，代码 review，能避免很多问题。不过之前我们出现过的大对象，那就真的是没有预料到，因为从代码上是看不出来这里会有大对象，然后寄了。\n2. 你这里如果出去面试还是可以深入讨论你的平台是怎么设计的，","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1688454542,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"中国台湾","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2770150,"avatar":"https://static001.geekbang.org/account/avatar/00/2a/44/e6/2c97171c.jpg","nickname":"sheep","note":"","ucode":"DAC2036F08CE27","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":627824,"discussion_content":"开启阿里云 redis 后台检测规则，是用于告警使用的咩","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1694588672,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"广东","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":377324,"user_name":"peter","can_delete":false,"product_type":"c1","uid":1058183,"ip_address":"北京","ucode":"261C3FC001DE2D","user_header":"https://static001.geekbang.org/account/avatar/00/10/25/87/f3a69d1b.jpg","comment_is_top":false,"comment_ctime":1688346021,"is_pvip":false,"replies":[{"id":137507,"content":"1. 打个比方，正常的调用方向是 A 调用 B，那么回到就是 B 反过来调用 A。比如说，A 调用了 B 之后，B 没有立刻给出响应，而是过了一段时间之后，B 再调用 A 的一个接口告诉了 A  响应。在微信平台里面，你支付成功之后，微信会回调你的接口，告诉你结果。\n2. 这个你询问第三方接口就可以，一般他们都需要告诉你的。你也可以在研发阶段试试同一个请求过去会发生什么。\n3. 有些公司会一起使用。它们的侧重点不同，正常来说，一家公司里面 metrics 类的监控和 tracing 类的监控就是两个工具。从采集的数据上来说，它们会有一部分重复，但是问题并不大。\n4. 异步处理也可以有超时，比如说 A 调用 B，B 说一小时以内给你处理完，一小时没处理完，那么 B 就要告诉 A 超时了。异步超时一般是走回调通知机制。","user_name":"作者回复","user_name_real":"编辑","uid":1176655,"ctime":1688369759,"ip_address":"中国台湾","comment_id":377324,"utype":1}],"discussion_count":2,"race_medal":0,"score":2,"product_id":100551601,"comment_content":"请教老师几个问题：\nQ1：第一个图的“回调”是指什么？\n是本系统收到响应后调用自身的某个函数吗？回调的箭头是从第三方指向自身系统，难道是指第三方调用本系统的某个函数？\nQ2：怎么知道第三方是接口幂等的？\nQ3：公司会同时使用Prometheus和Skywalking吗？感觉都是监控的啊，用一个不就可以嘛。两个都用会重复吗？\nQ4：异步处理，会有超时时间吗？","like_count":0,"discussions":[{"author":{"id":1176655,"avatar":"https://static001.geekbang.org/account/avatar/00/11/f4/4f/aa916c8c.jpg","nickname":"邓小明","note":"","ucode":"02243D1F7492A6","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":622508,"discussion_content":"1. 打个比方，正常的调用方向是 A 调用 B，那么回到就是 B 反过来调用 A。比如说，A 调用了 B 之后，B 没有立刻给出响应，而是过了一段时间之后，B 再调用 A 的一个接口告诉了 A  响应。在微信平台里面，你支付成功之后，微信会回调你的接口，告诉你结果。\n2. 这个你询问第三方接口就可以，一般他们都需要告诉你的。你也可以在研发阶段试试同一个请求过去会发生什么。\n3. 有些公司会一起使用。它们的侧重点不同，正常来说，一家公司里面 metrics 类的监控和 tracing 类的监控就是两个工具。从采集的数据上来说，它们会有一部分重复，但是问题并不大。\n4. 异步处理也可以有超时，比如说 A 调用 B，B 说一小时以内给你处理完，一小时没处理完，那么 B 就要告诉 A 超时了。异步超时一般是走回调通知机制。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1688369759,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"中国台湾","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1131592,"avatar":"https://static001.geekbang.org/account/avatar/00/11/44/48/fae317c1.jpg","nickname":"子休","note":"","ucode":"EDB61FB012C195","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":623870,"discussion_content":"一般来说像一些比较大的第三方平台（比如企业微信），都会提供一个第三方平台配置页面给你配置回调函数的。作为接入方，登录到这个页面去，把自己公司的回调接口（一般是一个https的URL地址）配在指定的页面上即可。这样一来，第三方就知道回调到哪里去了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1689932387,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"上海","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":388997,"user_name":"zzZ😊","can_delete":false,"product_type":"c1","uid":1181168,"ip_address":"湖北","ucode":"F2F609A9556372","user_header":"https://static001.geekbang.org/account/avatar/00/12/05/f0/c30f76de.jpg","comment_is_top":false,"comment_ctime":1711354479,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":3,"product_id":100551601,"comment_content":"赞","like_count":0}]}