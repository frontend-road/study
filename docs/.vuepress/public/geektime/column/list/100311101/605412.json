{"id":605412,"title":"01｜编译和非编译模式：离开Vue工具，你还知道怎么用Vue 3吗？","content":"<p>你好，我是杨文坚。</p><p>在开始讲解今天课程之前，我们来想象一下这么一个场景：当Vue.js代码在生产环境中报错了，你该如何快速根据生产环境编译后的代码，进行问题定位和排错呢？</p><p>代入到这个场景中，你是否会感到无解？虽然说，得益于Vue.js丰富的“全家桶”式开发工具，我们能够低成本地直接使用开发项目，无需关心繁琐的项目构建配置，但这也很容易让新同学产生依赖，甚至误解。</p><p>比如误解Vue.js这类语法是浏览器默认就支持的，不清楚Vue.js代码在浏览器中实际的运行方式等等。这种浅尝辄止式的学习，会给我们实际的开发工作带来一些小麻烦。</p><p>所以，我们一定得清楚 Vue.js 在非编译的情况下是如何使用的，这样即便我们脱离了Vite、Webpack和Rollup等构建工具，也能让Vue.js 3在浏览器中正常运行。同时，你也可以通过这节课理解Vue.js的代码是如何进行编译，让浏览器识别运行的。</p><h2>Vue.js‌ 3 代码编译结果是什么样子的？</h2><p>在开始讲解Vue.js非编译模式的运行原理之前，我想先带你了解下Vue.js代码编译结果是怎样的。我们都知道，Vue.js代码经过编译后才能在浏览器运行，而且，Vue.js代码编译后的结果就是基于非编译语法来运行的。这能让你更好地理解Vue.js非编译模式的运行原理。</p><!-- [[[read_end]]] --><p>我在下图列举了一个简单的Vue.js 3组件，以及通过Vue.js构建工具编译出来的JavaScript代码结果：</p><p><img src=\"https://static001.geekbang.org/resource/image/cb/c3/cbb0f82bc37a784d0e5d8yy94fb341c3.png?wh=1858x1032\" alt=\"图片\"></p><p>你看，在这个Vue.js代码的编译过程中，主要进行了以下的操作流程：</p><ol>\n<li>把Vue.js代码里的模板编译成基于JavaScript代码描述的 VNode（虚拟节点）；</li>\n<li>把Vue.js代码里JavaScript逻辑代码，编译成运行时对应生命周期的逻辑代码；</li>\n<li>最后是把内置的CSS样式代码抽离出来。</li>\n</ol><p>从上面的描述，我们可以总结一下，<strong>Vue.js经过编译后产出是JavaScript和CSS代码，也就是浏览可以直接支持运行的代码</strong>。</p><p>上述提到的编译后的JavaScript和CSS代码，最终运行结果如下图所示：</p><p><img src=\"https://static001.geekbang.org/resource/image/77/48/77fb709d95e5e14c0133ed8538a8bc48.png?wh=1858x1014\" alt=\"图片\"></p><p>现在我将上述案例的完整Vue.js代码贴出来，让你能更加清晰地了解代码的内容。</p><pre><code class=\"language-xml\">&lt;template&gt;\n  &lt;div class=\"v-counter\"&gt;\n    &lt;div class=\"v-text\"&gt;{{ num }}&lt;/div&gt;\n    &lt;button class=\"v-btn\" @click=\"click\"&gt;点击数字加1&lt;/button&gt;\n  &lt;/div&gt;\n&lt;/template&gt;\n\n&lt;script setup&gt;\n  import { ref } from 'Vue.js'\n  const num = ref(0)\n  const click = () =&gt; {\n    num.value += 1;\n  }\n&lt;/script&gt;\n\n&lt;style&gt;\n  .v-counter {\n    width: 200px;\n    margin: 20px auto;\n    padding: 10px;\n    color: #666666;\n    box-shadow: 0px 0px 9px #00000066;\n    text-align: center;\n  }\n  .v-counter .v-text {\n    font-size: 28px;\n    font-weight: bolder;\n  }\n  .v-counter .v-btn {\n    font-size: 20px;\n    padding: 0 10px;\n    height: 32px;\n    cursor: pointer;\n  }\n&lt;/style&gt;\n</code></pre><p>上面贴出来的Vue.js 3 经过Vue.js 3官方的编译器编译结束后，核心的功能代码会编译出下面这样的结果。</p><pre><code class=\"language-javascript\">import { \n  toDisplayString, createElementVNode, openBlock,\n  createElementBlock, ref,\n} from \"Vue.js\";\n\nconst _hoisted_1 = { class: \"v-counter\" }\nconst _hoisted_2 = { class: \"v-text\" }\n\nconst __sfc__ = {\n  __name: 'App',\n  setup(__props) {\n    const num = ref(0)\n    const click = () =&gt; {\n      num.value += 1;\n    }\n    return (_ctx, _cache) =&gt; {\n      return (openBlock(), createElementBlock(\"div\", _hoisted_1, [\n        createElementVNode(\n          \"div\", _hoisted_2, toDisplayString(num.value), 1),\n        createElementVNode(\"button\", {\n          class: \"v-btn\",\n          onClick: click\n        }, \"点击数字加1\")\n      ]))\n    }\n  }\n\n}\n__sfc__.__file = \"counter.Vue.js\"\nexport default __sfc__\n</code></pre><p>这个最终结果可以直接在支持ES Modules的浏览器环境运行，还可以将其再次经过 ES6+ 语法的编译，最后成为能在浏览器直接运行的ES5代码。</p><p>我们经过上述Vue.js3代码案例，知道了Vue.js 3代码经过编译，最终能在浏览器运行的代码结果是纯粹的JavaScript和CSS，而且我们现在还可以反向从编译后的结果知道，Vue.js最终是用纯JavaScript来描述模板和逻辑内容，然后在浏览器中运行的。</p><p>这个编译后的结果，也就是最原始的Vue.js非编译模式的运行方式。接下来我们就来分析一下，Vue.js非编译模式是如何运行的。</p><h2>Vue.js非编译模式是如何运行的？</h2><p>在讲解非编译模式是如何运行之前，我们先来对比一下Vue.js3的非编译模式代码和Vue.js原生语法的关联。你先看下下面这张图：</p><p><img src=\"https://static001.geekbang.org/resource/image/e3/89/e3821a0bb89f29563cd78d794e59f089.png?wh=1860x1024\" alt=\"图片\"></p><p>我们可以看到，其实Vue.js 3组件的非编译代码也能直接跟Vue.js 3原生语法一一对应上，包括：</p><ul>\n<li>“模板”的对应关系；</li>\n<li>“生命周期逻辑代码”的对应关系。</li>\n</ul><p>可以这么理解，Vue.js原生语法有两大块核心内容，就是模板和逻辑。相应地，非编译模式也有模板和逻辑这两个部分。</p><p>在上述的Vue.js 3的setup语法的代码编译结果中，模板和逻辑是耦合在组件对象的setup方法里的，非编译的运行代码模板和逻辑交织在一起，看起来比较麻烦。其实这里也可以把setup的模板代码，抽出来放到独立的 render 方法里，如下图所示：</p><p><img src=\"https://static001.geekbang.org/resource/image/2f/7f/2f8496a6069184e5d426131fe018aa7f.png?wh=1876x902\" alt=\"图片\"></p><p>这样Vue.js非编译代码模板和逻辑分开，代码的可读性是不是也提高了不少呢？这里你有没有发现逻辑代码里，setup逻辑的非编译写法和原生写法很接近，但是模板写法都是各种 createElementVNode的VNode的API，是不是感觉很繁琐？如果所有的模板都用这么长的API来写，那可太崩溃了。</p><p>其实还有更奔溃的，现实就是VNode的API不止一个，这个createElementVNode只是用来书写HTML语法的VNode，还有其他API用来书写自定义的VNode等等。</p><p>那么问题来了，有没有更加简单的非编译写法？</p><h2>更简单的非编译模式写法</h2><p>我们前面讲了，用createElementVNode等API描述VNode，会带来很多书写模板代码的成本。Vue.js3本身提供了一种更加简便的API来统一描述VNode，而且不需要关心不同类型VNode的不同API，这个方法就是<strong>Vue.js.h</strong>。</p><p>下面我就以一张图来举例说明Vue.js.h 这种更加便捷的模板写法，你看下这里：</p><p><img src=\"https://static001.geekbang.org/resource/image/c5/0b/c5a09f3867946ed95b3a23676fa11b0b.png?wh=1824x984\" alt=\"图片\"></p><p>你可以看到，Vue.js.h的写法跟原始 VNode API写法相比，模板内容更加简短清晰。我们再来对比一下 Vue.js.h写法和Vue.js 3原生写法，如下图所示：</p><p><img src=\"https://static001.geekbang.org/resource/image/f3/f4/f379871143e55b6e26267713491a2bf4.png?wh=1852x980\" alt=\"图片\"></p><p>Vue.js.h与Vue.js 3原生写法相比，你会发现其实它也会多写一些API代码来描述模板。那么，我们还有更加方便的Vue.js非编译模式吗？</p><p>还真有！更加简单的非编译模式就是<strong>Template写法的非编译模式</strong>，如下图所示：</p><p><img src=\"https://static001.geekbang.org/resource/image/59/fb/59yye4ecd88c2bd3a1665f7df6e677fb.png?wh=1852x870\" alt=\"图片\"></p><p>你可以看到，非编译的Template写法跟原生Vue.js 3写法最为接近，可以直接用字符串写模板，达到模板代码和JavaScript逻辑代码的分离的效果。而且，不需要通过Webpack、Vite等构建器编译，就可以直接在浏览器上运行。</p><p>但是，Template的非编译写法真的是不需要编译吗？</p><p>非也。这里的“非编译”指的只是不需要在开发过程中编译，最终它还是需要编译成VNode才能在浏览器里运行，那么这个编译过程会在哪进行呢？</p><p>答案就是<strong>在浏览器里进行编译</strong>。由于是直接写模板代码，代码运行的时候有一个模板的编译过程，也就是会将字符串模板编译成VNode的结果，再执行VNode的渲染。对比Vue.js.h和直接的VNode的运行过程多了编译操作，同时使用的运行时也增加了编译代码。如果你想看更多种非编译模式的案例代码，也可以在<a href=\"https://github.com/FE-star/vue3-course/tree/main/chapter/01\">GitHub代码仓库</a>查看。</p><p>到现在我们介绍了这么多种非编译模式，可能你或多或少有些疑问，除了可以辅助排查错误，这些模式还有什么其他作用呢？</p><p>我们从上述内容可以看出，Vue.js的非编译模式直接可以书写出在浏览器运行的Vue.js代码，那是不是意味着我们可以跳过开发编译阶段，直接在浏览器里组装Vue.js的代码结构，动态渲染出想要页面功能呢？哈哈，答案是肯定的。</p><p>那么说到这里，你大概能猜到“组装结构 + 动态渲染”这个组合有什么用了吧？</p><p>这个组合适用于一切能在浏览器动态搭建的场景，就是低代码搭建页面的场景。换句话说，Vue.js的非编译写法可以直接用于低代码的核心解决方案中。比如，基于非编译的写法可以用来编写低代码平台搭建页面的组件运行时，阿里等大厂内部的基于React.js的低代码场景实现方式，也经常见到基于React.js的非编译写法来构造浏览器端的运行时。</p><h2>总结</h2><p>通过这节课的内容，你能了解到Vue.js 3的编译和非编译模式区别，更重要的是能知道Vue.js 3脱离了构建工具如何进行开发和在浏览器中运行。这些都是在后续学习和深入实践Vue.js 3项目必不可少的前置知识储备。</p><p>我们在使用一门技术框架时候，不仅需要熟悉官方提供的通用开发模式，也需要在离开了通用开发模式，还能掌握其他的方式来无缝衔接使用这个技术框架。这节课里的非编译模式就是脱离了官方推荐的编译开发模式进行的，在遇到Vue.js 3编译受限的时候，就可以快速选择这个非编译模式替代方案。</p><p>最后，你在学习一门技术框架的时候，也要注意了解技术框架的多种模式的使用方案，也就是从其他角度了解技术的特点，挖掘技术更多可能的场景，丰富自己解决问题的技术方案储备。比如，Vue.js非编译模式除了能够帮助理解Vue.js 3最终在浏览器运行代码的形式之外，还能辅助生产环境快速定位问题，快速反推到源码位置，以及快速开发纯静态页面，甚至还能为低代码搭建页面、运营页面动态渲染等提供解决方案和思路。</p><h2>思考题</h2><p>Vue.js 3非编译场景与Vue.js的JSX写法有什么联系吗？</p><p>期待你的分享。如果今天的课程让你有所收获，也欢迎把文章分享给有需要的朋友，我们下节课再见！</p><h3><a href=\"https://github.com/FE-star/vue3-course/tree/main/chapter/01\">完整的代码在这里</a></h3>","neighbors":{"left":{"article_title":"开篇词｜为何掌握了技术API，依然在项目中处处掣肘？","id":605398},"right":{"article_title":"02｜Webpack编译搭建：如何用Webpack初构建Vue 3项目？","id":605414}},"comments":[{"had_liked":false,"id":374331,"user_name":"Turalyon","can_delete":false,"product_type":"c1","uid":1091541,"ip_address":"重庆","ucode":"9B2D683CF011DA","user_header":"https://static001.geekbang.org/account/avatar/00/10/a7/d5/e1221995.jpg","comment_is_top":true,"comment_ctime":1683933965,"is_pvip":false,"replies":null,"discussion_count":2,"race_medal":0,"score":2,"product_id":100311101,"comment_content":"这个念经试的朗读听着脑瓜子疼","like_count":8,"discussions":[{"author":{"id":1556406,"avatar":"https://wx.qlogo.cn/mmopen/vi_32/iaXcnYOjwO39gSSyo0CprNeLxx6OF80KqPz69ErJKmibMSxn5YeM4VGD6ATBnUR045ibsYjQGlAAQo5r3iaTPydTbA/132","nickname":"docker131313","note":"","ucode":"5B24734D18B57C","race_medal":5,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":637924,"discussion_content":"说得有点对，感觉读得不怎么样","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1709106193,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"江苏","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1292431,"avatar":"https://static001.geekbang.org/account/avatar/00/13/b8/8f/fab96941.jpg","nickname":"HML","note":"","ucode":"34738B97303D46","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":633605,"discussion_content":"这种课程我都是只看文字的，看了你的评论，专门戴耳机播放感受了一下","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1702369412,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"山东","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":362870,"user_name":"风太大太大","can_delete":false,"product_type":"c1","uid":1368376,"ip_address":"江苏","ucode":"E0221487898D62","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/dCfVz7wIUT4fM7zQO3gIwXo3BGodP5FJuCdMxobZ5dXpzBeTXiaB3icoFqj22EbIGCu1xxd1FLo9xic0a2pGnunibg/132","comment_is_top":false,"comment_ctime":1669000985,"is_pvip":false,"replies":[{"id":132140,"content":"不错不错","user_name":"作者回复","user_name_real":"编辑","uid":3217031,"ctime":1669877543,"ip_address":"江苏","comment_id":362870,"utype":1}],"discussion_count":2,"race_medal":0,"score":2,"product_id":100311101,"comment_content":"Vue.js 3 非编译场景与 Vue.js 的 JSX 写法有什么联系吗？\njsx写法是一个语法糖，最后会通过编译工具（babel）转化成 “非编译模式”的代码","like_count":14,"discussions":[{"author":{"id":1657965,"avatar":"https://static001.geekbang.org/account/avatar/00/19/4c/6d/d7af1a94.jpg","nickname":"Jumping^O^Andrew","note":"","ucode":"DC693D7413FDC8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":647654,"discussion_content":"那既然jsx都是需要打包工具处理了，他还能叫非编","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1720403702,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"上海","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":3217031,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/TZnA0PlXExlp9byxOxCeOG6ia0ykwfpxqAq2vslTzL1z5ibTBsgf1nYx0bUXgrOTnSOnmdXQZZibYx9tRSPHFjibPQ/132","nickname":"文坚老师","note":"","ucode":"4E0C838B2A3725","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":595243,"discussion_content":"不错不错","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1669877543,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"江苏","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":363064,"user_name":"周大大","can_delete":false,"product_type":"c1","uid":1375190,"ip_address":"江苏","ucode":"1E8F5FB96BB1F1","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/XPWXccJiaGnF4AZuuWnH4SQpKibwAhnRDAlnpcCwKW6JjJHFCz6ldicfC6QMiaJefyGVl8jZpYWvEJicZ2eK5qibCldA/132","comment_is_top":false,"comment_ctime":1669190537,"is_pvip":false,"replies":[{"id":132142,"content":"基本都答到了","user_name":"作者回复","user_name_real":"编辑","uid":3217031,"ctime":1669877714,"ip_address":"江苏","comment_id":363064,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100311101,"comment_content":"不论是createElementVNode、h、template、jsx都是为了生成vnode。h和createElementVNode用js写dom方式不友好，但是灵活。template和jsx用html写dom方式友好，但是templated不够灵活。jsx不仅拥有友好的书写方式，而且还可以通过{}实现动态值。","like_count":11,"discussions":[{"author":{"id":3217031,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/TZnA0PlXExlp9byxOxCeOG6ia0ykwfpxqAq2vslTzL1z5ibTBsgf1nYx0bUXgrOTnSOnmdXQZZibYx9tRSPHFjibPQ/132","nickname":"文坚老师","note":"","ucode":"4E0C838B2A3725","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":595245,"discussion_content":"基本都答到了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1669877714,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"江苏","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":363066,"user_name":"莫比斯","can_delete":false,"product_type":"c1","uid":1039549,"ip_address":"江苏","ucode":"FC467871C8CA7D","user_header":"https://static001.geekbang.org/account/avatar/00/0f/dc/bd/ea9c16b8.jpg","comment_is_top":false,"comment_ctime":1669191174,"is_pvip":false,"replies":[{"id":132145,"content":"我觉得这样理解也是有道理的，但jsx比template的动态性要比template灵活一些，这个是最根本的差异。","user_name":"作者回复","user_name_real":"编辑","uid":3217031,"ctime":1669877969,"ip_address":"江苏","comment_id":363066,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100311101,"comment_content":"Vue.js 3 非编译场景与 Vue.js 的 JSX 写法有什么联系吗？\njsx的写法是来源自react，我想 Vue.js 的 JSX ，是可以帮助react开发者用熟悉的方式快速使用vue； Vue.js 的 JSX 写法 会编译转化成 Vue.js 3 非编译场景的代码；","like_count":2,"discussions":[{"author":{"id":3217031,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/TZnA0PlXExlp9byxOxCeOG6ia0ykwfpxqAq2vslTzL1z5ibTBsgf1nYx0bUXgrOTnSOnmdXQZZibYx9tRSPHFjibPQ/132","nickname":"文坚老师","note":"","ucode":"4E0C838B2A3725","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":595248,"discussion_content":"我觉得这样理解也是有道理的，但jsx比template的动态性要比template灵活一些，这个是最根本的差异。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1669877969,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"江苏","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":370683,"user_name":"L","can_delete":false,"product_type":"c1","uid":1228268,"ip_address":"上海","ucode":"26BB686671F7D4","user_header":"https://static001.geekbang.org/account/avatar/00/12/bd/ec/cc7abf0b.jpg","comment_is_top":false,"comment_ctime":1679108654,"is_pvip":true,"replies":[{"id":135454,"content":"“Vue.js的JSX 写法”最终也会经过编译，变成可以在浏览器里直接运行的“非编译写法”。\n\n对于低代码场景，“生产代码”的过程如果在“浏览器运行过程中”，也就是将json数据在浏览中“拼接Vue.js组件”，这个过程可能存在比较多的“计算过程”，同时生产的组件后带来的异常也很难定位排查。\n\n如果“生产代码”的过程是在低代码的“搭建过程”，那么可以基于json数据，转成“语法树”来生成实际的Vue.js组件，对比浏览器生产组件，可以减少一些“计算过程”的耗时。与此同时，搭建过程生产了试纸的Vue.js组件，在运行过程中遇到异常，也比较方便排查定位问题。","user_name":"作者回复","user_name_real":"编辑","uid":3217031,"ctime":1679835136,"ip_address":"浙江","comment_id":370683,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100311101,"comment_content":"Vue.js 3 非编译场景与 Vue.js 的 JSX 写法有什么联系吗？\njsx本质上还是需要走一段babel的编译过程，编译成vue可以识别的内容后再走vue的编译，好处是有的时候在编写代码的时候会更加的方便一点\n对与运行时编译我有一个疑问，现在很多时候一些低代码的实现并不在浏览器端产出新的代码，而是通过一些渲染器之类的设计将json数据渲染成组件，对比将json数据转成实际的代码再进行vue运行时编译的方案的优劣是什么呢？\n这样做性能会更加快并且后续的代码好维护吗？","like_count":1,"discussions":[{"author":{"id":3217031,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/TZnA0PlXExlp9byxOxCeOG6ia0ykwfpxqAq2vslTzL1z5ibTBsgf1nYx0bUXgrOTnSOnmdXQZZibYx9tRSPHFjibPQ/132","nickname":"文坚老师","note":"","ucode":"4E0C838B2A3725","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":610892,"discussion_content":"“Vue.js的JSX 写法”最终也会经过编译，变成可以在浏览器里直接运行的“非编译写法”。\n\n对于低代码场景，“生产代码”的过程如果在“浏览器运行过程中”，也就是将json数据在浏览中“拼接Vue.js组件”，这个过程可能存在比较多的“计算过程”，同时生产的组件后带来的异常也很难定位排查。\n\n如果“生产代码”的过程是在低代码的“搭建过程”，那么可以基于json数据，转成“语法树”来生成实际的Vue.js组件，对比浏览器生产组件，可以减少一些“计算过程”的耗时。与此同时，搭建过程生产了试纸的Vue.js组件，在运行过程中遇到异常，也比较方便排查定位问题。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1679835136,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"浙江","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":369981,"user_name":"power","can_delete":false,"product_type":"c1","uid":2771719,"ip_address":"广东","ucode":"44CEACD8482C5F","user_header":"https://static001.geekbang.org/account/avatar/00/2a/4b/07/791d0f5e.jpg","comment_is_top":false,"comment_ctime":1678200837,"is_pvip":false,"replies":[{"id":134947,"content":"您好，首先Vue.js的JSX语法只是一种“语法糖”，是为了方便开发者可以选择JSX的语法方式开发代码，最终也是编译成“非编译模式”的代码。","user_name":"作者回复","user_name_real":"编辑","uid":3217031,"ctime":1678522420,"ip_address":"浙江","comment_id":369981,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100311101,"comment_content":"Vue.js 3 非编译场景与 Vue.js 的 JSX 写法有什么联系吗？\njsx和vue.js3非编译场景都是为了表现vNode，jsx更方便开发者理解和书写，jsx最终会被编译成非编译模式","like_count":1,"discussions":[{"author":{"id":3217031,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/TZnA0PlXExlp9byxOxCeOG6ia0ykwfpxqAq2vslTzL1z5ibTBsgf1nYx0bUXgrOTnSOnmdXQZZibYx9tRSPHFjibPQ/132","nickname":"文坚老师","note":"","ucode":"4E0C838B2A3725","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":608561,"discussion_content":"您好，首先Vue.js的JSX语法只是一种“语法糖”，是为了方便开发者可以选择JSX的语法方式开发代码，最终也是编译成“非编译模式”的代码。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1678522421,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"浙江","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":363439,"user_name":"前端WLOP","can_delete":false,"product_type":"c1","uid":1800417,"ip_address":"北京","ucode":"23258059979352","user_header":"https://static001.geekbang.org/account/avatar/00/1b/78/e1/c6a3f7d0.jpg","comment_is_top":false,"comment_ctime":1669687170,"is_pvip":false,"replies":[{"id":132118,"content":"keynote ，绘图常用工具，图好看只能说明老师画图技巧到位😎","user_name":"编辑回复","user_name_real":"编辑","uid":2547771,"ctime":1669725660,"ip_address":"北京","comment_id":363439,"utype":2}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100311101,"comment_content":"示例图好好看 是用什么软件画的呀","like_count":1,"discussions":[{"author":{"id":2547771,"avatar":"https://static001.geekbang.org/account/avatar/00/26/e0/3b/8ec916b2.jpg","nickname":"多少","note":"","ucode":"0A6EF7AA6E4BB7","race_medal":0,"user_type":8,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":595098,"discussion_content":"keynote ，绘图常用工具，图好看只能说明老师画图技巧到位😎","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1669725660,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":8}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":363048,"user_name":"Geek_b640fe","can_delete":false,"product_type":"c1","uid":3227939,"ip_address":"江苏","ucode":"382E72C91230CA","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Pk7HVX99cBlSOicLoa8KN81xqHa4YzRQsu5PAGTlOJgvChtl7T6BE6gTOhiaVJIcNVxIsRO1libPjdkZ6Sq8Qlp1g/132","comment_is_top":false,"comment_ctime":1669185767,"is_pvip":false,"replies":[{"id":132143,"content":"就是代码不需要经过编译就可以运行，所以称为：浏览器可以直接运行","user_name":"作者回复","user_name_real":"编辑","uid":3217031,"ctime":1669877752,"ip_address":"江苏","comment_id":363048,"utype":1}],"discussion_count":2,"race_medal":0,"score":2,"product_id":100311101,"comment_content":"浏览器直接运行，是指谷歌浏览器调试控制台直接运行吗","like_count":0,"discussions":[{"author":{"id":3217031,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/TZnA0PlXExlp9byxOxCeOG6ia0ykwfpxqAq2vslTzL1z5ibTBsgf1nYx0bUXgrOTnSOnmdXQZZibYx9tRSPHFjibPQ/132","nickname":"文坚老师","note":"","ucode":"4E0C838B2A3725","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":595246,"discussion_content":"就是代码不需要经过编译就可以运行，所以称为：浏览器可以直接运行","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1669877752,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"江苏","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2647147,"avatar":"https://static001.geekbang.org/account/avatar/00/28/64/6b/d8ca3b18.jpg","nickname":"方剑鹏","note":"","ucode":"4F3C9227BA2681","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":595029,"discussion_content":"不是，这里指的是浏览器内核可以解析、运行这段代码（比如谷歌浏览器的V8引擎），与控制台无关。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1669647802,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":363047,"user_name":"Geek_b640fe","can_delete":false,"product_type":"c1","uid":3227939,"ip_address":"江苏","ucode":"382E72C91230CA","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Pk7HVX99cBlSOicLoa8KN81xqHa4YzRQsu5PAGTlOJgvChtl7T6BE6gTOhiaVJIcNVxIsRO1libPjdkZ6Sq8Qlp1g/132","comment_is_top":false,"comment_ctime":1669185668,"is_pvip":false,"replies":[{"id":132144,"content":"这是一种方法，只要不经过编译就能运行就是浏览器可以直接运行。比如写在html的script标签里没经过编译工具编译，也算是浏览器直接运行哈","user_name":"作者回复","user_name_real":"编辑","uid":3217031,"ctime":1669877869,"ip_address":"江苏","comment_id":363047,"utype":1}],"discussion_count":2,"race_medal":0,"score":2,"product_id":100311101,"comment_content":"浏览器直接运行，是指比如 google浏览器的调试控制台，直接复制运行下面的?\n\nimport { \n  toDisplayString, createElementVNode, openBlock,\n  createElementBlock, ref,\n} from &quot;Vue.js&quot;;\n\nconst _hoisted_1 = { class: &quot;v-counter&quot; }\nconst _hoisted_2 = { class: &quot;v-text&quot; }\n\nconst __sfc__ = {\n  __name: &#39;App&#39;,\n  setup(__props) {\n    const num = ref(0)\n    const click = () =&gt; {\n      num.value += 1;\n    }\n    return (_ctx, _cache) =&gt; {\n      return (openBlock(), createElementBlock(&quot;div&quot;, _hoisted_1, [\n        createElementVNode(\n          &quot;div&quot;, _hoisted_2, toDisplayString(num.value), 1),\n        createElementVNode(&quot;button&quot;, {\n          class: &quot;v-btn&quot;,\n          onClick: click\n        }, &quot;点击数字加1&quot;)\n      ]))\n    }\n  }\n\n}\n__sfc__.__file = &quot;counter.Vue.js&quot;\nexport default __sfc__","like_count":0,"discussions":[{"author":{"id":3217031,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/TZnA0PlXExlp9byxOxCeOG6ia0ykwfpxqAq2vslTzL1z5ibTBsgf1nYx0bUXgrOTnSOnmdXQZZibYx9tRSPHFjibPQ/132","nickname":"文坚老师","note":"","ucode":"4E0C838B2A3725","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":595247,"discussion_content":"这是一种方法，只要不经过编译就能运行就是浏览器可以直接运行。比如写在html的script标签里没经过编译工具编译，也算是浏览器直接运行哈","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1669877869,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"江苏","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1295598,"avatar":"https://static001.geekbang.org/account/avatar/00/13/c4/ee/f4fbc39c.jpg","nickname":"Stone","note":"","ucode":"CEF8F0628FBC32","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":594753,"discussion_content":"应该是你可以直接写个html，然后浏览器打开直接运行，不需要编译","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1669346813,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"江苏","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":393767,"user_name":"ifelse","can_delete":false,"product_type":"c1","uid":2550743,"ip_address":"浙江","ucode":"D0565908C99695","user_header":"https://static001.geekbang.org/account/avatar/00/26/eb/d7/90391376.jpg","comment_is_top":false,"comment_ctime":1724820503,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":3,"score":2,"product_id":100311101,"comment_content":"学习打卡","like_count":0},{"had_liked":false,"id":388068,"user_name":"陈彪","can_delete":false,"product_type":"c1","uid":1622429,"ip_address":"广东","ucode":"0787C68040EC14","user_header":"https://static001.geekbang.org/account/avatar/00/18/c1/9d/ecd6e2b3.jpg","comment_is_top":false,"comment_ctime":1709277508,"is_pvip":true,"replies":null,"discussion_count":0,"race_medal":0,"score":3,"product_id":100311101,"comment_content":"Vue.js 3的非编译场景与JSX写法之间的联系在于，JSX作为一种语法糖，它允许开发者使用类似HTML的标记语法来编写Vue组件。这种写法直观且易于理解，特别是对于熟悉HTML的开发者来说。JSX最终会被Babel编译器转换成Vue.js 3的非编译模式代码，这种代码是Vue.js虚拟DOM（vNode）的表现形式，是非编译场景下的标准写法。\n\n在非编译场景下，Vue.js 3使用&lt;template&gt;标签来编写模板代码，这些模板代码会被编译成JavaScript中的vNode对象。而使用JSX时，开发者可以直接编写出这些vNode的结构，从而在源代码中更清晰地看到最终渲染的HTML结构，这样做有以下好处：\n● 代码可读性：JSX的标记语法让代码更接近最终渲染的结果，提高了代码的可读性。\n● 开发体验：JSX可以提供更好的开发体验，例如在IDE中提供更好的自动完成和错误检查功能。\n● 递归组件：在处理递归组件时，JSX可以更容易地表达递归的模板结构。","like_count":0},{"had_liked":false,"id":372313,"user_name":"Michaels Geek","can_delete":false,"product_type":"c1","uid":1170008,"ip_address":"浙江","ucode":"72031A5FED7C64","user_header":"https://static001.geekbang.org/account/avatar/00/11/da/58/87ce3d95.jpg","comment_is_top":false,"comment_ctime":1680961284,"is_pvip":false,"replies":null,"discussion_count":1,"race_medal":0,"score":3,"product_id":100311101,"comment_content":"杨大大，非编译模式demo(demo-counter-with-h.html), Counter的setup为什么要return两次才能正常渲染呢？\n\n```\nconst Counter = {\n                setup() {\n                    const num = ref(0)\n                    const click = () =&gt; {\n                        num.value++\n                    }\n                    &#47;&#47; return 第一次\n                    return (_ctx, cache) =&gt; {\n                       &#47;&#47; return 第二次\n                        return h(&#39;div&#39;, {\n                            class: &#39;v-counter&#39;\n                        }, [\n                            h(&#39;div&#39;, {\n                                class: &#39;v-text&#39;\n                            }, toDisplayString(num.value)),\n                            h(&#39;button&#39;, {\n                                class: &#39;v-btn&#39;,\n                                onClick: click\n                            }, &#39;点击加1&#39;)\n                        ])\n                    }\n                }\n            }\n```","like_count":0,"discussions":[{"author":{"id":1388437,"avatar":"https://static001.geekbang.org/account/avatar/00/15/2f/95/db8dedde.jpg","nickname":"Akili","note":"","ucode":"286D58069F7D86","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":622884,"discussion_content":"setup是vue3组件的入口","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1688785556,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"日本","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":366441,"user_name":"🇴","can_delete":false,"product_type":"c1","uid":3228034,"ip_address":"上海","ucode":"91C2D9B5BC5346","user_header":"https://static001.geekbang.org/account/avatar/00/31/41/82/18d12e07.jpg","comment_is_top":false,"comment_ctime":1673786442,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":3,"product_id":100311101,"comment_content":"git仓库挂了","like_count":0},{"had_liked":false,"id":363641,"user_name":"鐘","can_delete":false,"product_type":"c1","uid":1518535,"ip_address":"中国台湾","ucode":"0106652D5F7BD9","user_header":"https://static001.geekbang.org/account/avatar/00/17/2b/c7/9c8647c8.jpg","comment_is_top":false,"comment_ctime":1669906568,"is_pvip":false,"replies":null,"discussion_count":1,"race_medal":0,"score":3,"product_id":100311101,"comment_content":"請問後續會介紹低代碼嗎? \n猜測低代碼平台是編譯模式(開發低代碼平台本身)和非編譯(資料庫資料轉換成組件)混用","like_count":0,"discussions":[{"author":{"id":3217031,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/TZnA0PlXExlp9byxOxCeOG6ia0ykwfpxqAq2vslTzL1z5ibTBsgf1nYx0bUXgrOTnSOnmdXQZZibYx9tRSPHFjibPQ/132","nickname":"文坚老师","note":"","ucode":"4E0C838B2A3725","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":595511,"discussion_content":"会讲搭建相关内容，算是一部分低代码内容，也可以看成低代码一小部分入门","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1670170484,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"江苏","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]}]}