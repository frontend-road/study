{"id":108887,"title":"26 | 实战（一）：怎么设计一个“画图”程序？","content":"<p>你好，我是七牛云许式伟。</p><p>到上一讲为止，桌面程序架构设计的基本结构就讲完了。直到现在为止，我们没有讨论任何与具体的应用业务逻辑本身相关的内容。这是因为探讨的内容是普适有效的设计理念，整个讨论会显得很抽象。</p><p>今天我们结合一个实际的应用案例，来回顾一下前面我们介绍的内容。</p><p>我们选择了做一个 “画图” 程序。选它主要的原因是画图程序比较常见，需求上不需要花费过多的时间来陈述。</p><p>我们前面说过，一个 B/S 结构的 Web 程序，基本上分下面几块内容。</p><ul>\n<li>Model 层：一个多用户（Multi-User）的 Model 层，和单租户的 Session-based Model。从服务端来说，Session-based Model 是一个很简单的转译层。但是从浏览器端来说，Session-based Model 是一个完整的单租户 DOM 模型。</li>\n<li>View 层：实际是 ViewModel 层，真正的 View 层被浏览器实现了。ViewModel 只有 View 层的数据和可被委托的事件。</li>\n<li>Controller 层：由多个相互解耦的 Controller 构成。切记不要让 Controller 之间相互知道对方，更不要让 View 知道某个具体的 Controller 存在。</li>\n</ul><p>画图程序的源代码可以在 Github 上下载，地址如下：</p><!-- [[[read_end]]] --><ul>\n<li><a href=\"https://github.com/qiniu/qpaint\">https://github.com/qiniu/qpaint</a></li>\n</ul><p>今天我们讨论浏览器端的 Model，View 和 Controller。</p><h2>Model 层</h2><p>我们先看 Model 层。浏览器端的 Model 层，代码就是一个 <a href=\"https://github.com/qiniu/qpaint/blob/v26/paintweb/www/dom.js\">dom.js</a> 文件。它是一棵 DOM 树，根节点为 QPaintDoc 类。整个 DOM 树的规格如下：</p><pre><code>class QLineStyle {\nproperties:\n  width: number\n  color: string\nmethods:\n  constructor(width: number, color: string)\n}\n\nclass QLine {\nproperties:\n  pt1, pt2: Points\n  lineStyle: QLineStyle\nmethods:\n  constructor(pt1, pt2: Point, lineStyle: QLineStyle)\n  onpaint(ctx: CanvasRenderingContext2D): void\n}\n\nclass QRect {\nproperties:\n  x, y, width, height: number\n  lineStyle: QLineStyle\nmethods:\n   constructor(r: Rect, lineStyle: QLineStyle)\n   onpaint(ctx: CanvasRenderingContext2D): void\n}\n\nclass QEllipse {\nproperties:\n  x, y, radiusX, radiusY: number\n  lineStyle: QLineStyle\nmethods:\n   constructor(x, y, radiusX, radiusY: number, lineStyle: QLineStyle)\n   onpaint(ctx: CanvasRenderingContext2D): void\n}\n\nclass QPath {\nproperties:\n  points: []Point\n  close: bool\n  lineStyle: QLineStyle\nmethods:\n   constructor(points: []Point, close: bool, lineStyle: QLineStyle)\n   onpaint(ctx: CanvasRenderingContext2D): void\n}\n\ninterface Shape {\n  onpaint(ctx: CanvasRenderingContext2D): void\n}\n\nclass QPaintDoc {\nmethods:\n  addShape(shape: Shape): void\n  onpaint(ctx: CanvasRenderingContext2D): void\n}\n</code></pre><p>目前这个 DOM 还是单机版本的，没有和服务端的 Session-based Model 连起来。关于怎么连，我们下一讲再讨论。</p><p>这个 Model 层的使用是非常容易理解的，也非常直观体现了业务。主要支持的能力有以下两个方面。</p><p>其一，添加图形（Shape），可以是 QLine，QRect，QEllipse，QPath 等等。</p><p>其二，绘制（onpaint）。前面我们介绍 MVC 的时候，我曾提到为了 View 层能够绘制，需要让 DOM 层把自己的数据暴露给 View 层。</p><p>但是从简洁的方式来说，是让 Model 层自己来绘制，这样就避免暴露 DOM 层的实现细节。虽然这样让 Model 层变得有那么一点点不纯粹，因为和 GDI 耦合了。但是我个人认为耦合 GDI 比暴露 DOM 的数据细节要好，因为 GDI 的接口通常来说更稳定。</p><p>依赖选择是考虑耦合的一个关键因素。在依赖选择上，我们会更倾向于依赖接口更为稳定的组件，因为这意味着我们的接口也更稳定。</p><h2>ViewModel 层</h2><p>我们再看 ViewModel 层。它的代码主要是一个 <a href=\"https://github.com/qiniu/qpaint/blob/v26/paintweb/www/index.htm\">index.htm</a> 文件和一个 <a href=\"https://github.com/qiniu/qpaint/blob/v26/paintweb/www/view.js\">view.js</a> 文件。index.htm 是总控文件，主要包含两个东西：</p><ul>\n<li>界面布局（Layout）；</li>\n<li>应用初始化（InitApplication），比如加载哪些 Controllers。</li>\n</ul><p>而 <a href=\"https://github.com/qiniu/qpaint/blob/v26/paintweb/www/view.js\">view.js</a> 是我们 ViewModel 层的核心，实现了 QPaintView 类。它的规格如下：</p><pre><code>interface Controller {\n  stop(): void\n  onpaint(ctx: CanvasRenderingContext2D): void\n}\n\nclass QPaintView {\nproperties:\n  doc: QPaintDoc\n  properties: {\n    lineWidth: number\n    lineColor: string\n  }\n  drawing: DOMElement\n  controllers: map[string]Controller\nmethods:\n  get currentKey: string\n  get lineStyle: QLineStyle\n  onpaint(ctx: CanvasRenderingContext2D): void\n  invalidateRect(rect: Rect): void\n  registerController(name: string, controller: Controller): void\n  invokeController(name: string): void\n  stopController(): void\n  getMousePos(event: DOMEvent): Point\nevents:\n  onmousedown: (event: DOMEvent):void\n  onmousemove: (event: DOMEvent):void\n  onmouseup: (event: DOMEvent):void\n  ondblclick: (event: DOMEvent):void\n  onkeydown: (event: DOMEvent):void\n}\n\nvar qview = new QPaintView()\n</code></pre><p>看起来 QPaintView 的内容有点多，我们归类一下：</p><p><strong>和 Model 层相关的，就只有 doc: QPaintDoc 这个成员。有了它就可以操作 Model 层了。</strong></p><p><strong>属于 ViewModel 层自身的，数据上只有 properties 和 drawing。</strong>其中 properties 是典型的 ViewModel 数据，用来表示当前用户选择的 lineWidth 和 lineColor 等。drawing 则是浏览器对 HTML 元素的抽象，通过它以及 JavaScript 全局的 document 对象就可以操作 HTML DOM 了。</p><p>当然 ViewModel 层一个很重要的责任是绘制。onpaint 和 invalidRect 都是绘制相关。invalidRect 是让界面的某个区域重新绘制。当前为了实现简单，我们总是整个 View 全部重新绘制。</p><p>前面我说过， Web 开发一个很重要的优势是不用自己处理局部更新问题，为什么这里我们却又要自己处理呢？原因是我们没有用浏览器的 Virtual View，整个 DOM 的数据组织完全自己管理，这样我们面临的问题就和传统桌面开发完全一致。</p><p>剩下来的就是 Controller 相关的了。主要功能有：</p><ul>\n<li>registerController（登记一个 Controller），invokeController（激活一个 Controller 成为当前 Controller），stopController（停止当前 Controller），View 层并不关心具体的 Controller 都有些什么，但是会对它们的行为规则进行定义；</li>\n<li>事件委托（delegate），允许 Controller 选择自己感兴趣的事件进行响应；</li>\n<li>getMousePos 只是一个辅助方法，用来获取鼠标事件中的鼠标位置。</li>\n</ul><p>View 层在 MVC 里面是承上启下的桥梁作用。所以 View 层的边界设定非常关键。</p><p>如果我们把实际绘制（onpaint）的工作交给 Model 层，那么 View 基本上就只是胶水层了。但是就算如此，View 层仍然承担了一些极其重要的责任。</p><ul>\n<li>屏蔽平台的差异。Model 层很容易做到平台无关，除了 GDI 会略微费劲一点；Controller 层除了有少量的界面需要处理平台差异外，大部分代码都是响应事件处理业务逻辑，只要 View 对事件的抽象得当，也是跨平台的。</li>\n<li>定义界面布局。不同尺寸的设备，界面交互也会不太一样，在 View 层来控制不同设备的整体界面布局比较妥当。</li>\n</ul><h2>Controller 层</h2><p>最后我们看下 Controller 层。Controller 层的文件有很多，这还是一些 Controller 因为实现相近被合并到一个文件。详细信息如下。</p><ul>\n<li>Menu, PropSelectors, MousePosTracker： <a href=\"https://github.com/qiniu/qpaint/blob/v26/paintweb/www/accel/menu.js\">accel/menu.js</a></li>\n<li>Create Path：<a href=\"https://github.com/qiniu/qpaint/blob/v26/paintweb/www/creator/path.js\">creator/path.js</a></li>\n<li>Create FreePath：<a href=\"https://github.com/qiniu/qpaint/blob/v26/paintweb/www/creator/freepath.js\">creator/freepath.js</a></li>\n<li>Create Line, Rect, Ellipse, Circle： <a href=\"https://github.com/qiniu/qpaint/blob/v26/paintweb/www/creator/rect.js\">creator/rect.js</a></li>\n</ul><p>其中，<a href=\"https://github.com/qiniu/qpaint/blob/v26/paintweb/www/accel/menu.js\">menu.js</a> 主要涉及各种命令菜单和状态显示用途的界面元素。用于创建各类图形（Shape），选择当前 lineWidth、lineColor，以及显示鼠标当前位置。</p><p>在创建图形这些菜单项上，有两点需要注意。</p><p>其一，菜单并不直接和各类创建图形的 Controller 打交道，而是调用 qview.invokeController 来激活对应的 Controller，这就避免了两类 Controller 相互耦合。</p><p>其二，虽然前面 Model 层支持的图形只有 QLine、QRect、QEllipse、QPath 等四种，但是界面表现有六种：Line、Rect、Ellipse、Circle、Path、FreePath 等等。这是非常正常的现象。同一个 DOM API 在 Controller 层往往会有多条实现路径。</p><p>选择当前 lineWidth、lineColor 操作的对象是 ViewModel 的数据，不是 Model。这一点前面几讲我们也有过交代。我们当时举的例子是 Selection。其实你把当前 lineWith、lineColor 看作是某种意义上的 Selection ，也是完全正确的认知。</p><p>鼠标位置跟踪（MousePosTracker）是一个极其简单，但也是一个很特殊的 Controller，它并不操作任何正统意义的数据（Model 或 ViewModel），而是操作输入的事件。</p><p>剩下来的几个 JavaScript 文件都是创建某种图形。它们的工作机理非常相似，我们可以随意选一个看一下。比如 QRectCreator 类，它的规格如下：</p><pre><code>class QRectCreator {\nmethods:\n  constructor(shapeType: string)\n  stop(): void\n  onpaint(ctx: CanvasRenderingContext2D): void\n  onmousedown: (event: DOMEvent):void\n  onmousemove: (event: DOMEvent):void\n  onmouseup: (event: DOMEvent):void\n  onkeydown: (event: DOMEvent):void\n}\n</code></pre><p>在初始化（构造）时，QRectCreator 要求传入一个 shapeType。这是因为 QRectCreator 实际上并不只是用于创建 Rect 图形，还支持 Line、Ellipse、Circle。只要通过选择两个 points 来构建的图形，都可以用 QRectCreator 这个 Controlller 来做。</p><p>QRectCreator 接管了 View 委托的 mousedown、mousemove、mouseup、keydown 事件。</p><p>其中，mousedown 事件记录下第一个 point，并由此开启了图形所需数据的收集过程，mouseup 收集第二个 point，随后后创建相应的 Shape 并加入到 DOM 中。keydown 做什么？它用来支持按 ESC 放弃创建图形的过程。</p><h2>架构思维上我们学习到什么？</h2><p>通过分析这个 “画图” 程序，你对此最大的收获是什么？欢迎留言就此问题进行交流。这里我也说说我自己想强调的点。</p><p>首先，这个程序没有依赖任何第三方库，是裸写的 JavaScript 代码。关于这一点，我想强调的是：</p><p>第一，这并不是去鼓励裸写 JavaScript 代码，这只是为了消除不同人的喜好差异，避免因为不熟悉某个库而导致难以理解代码的逻辑；</p><p>第二，大家写代码的时候，不要被框架绑架，框架不应该增加代码的耦合，否则这样的框架就应该丢了；更真实的情况是，你很可能是在用一个好框架，但是是不是真用好了，还是取决于你自己的思维。</p><p>从架构设计角度来说，在完成需求分析之后，我们就进入了架构的第二步：概要设计（或者也可以叫系统设计）。这个阶段的核心话题是分解子系统，我们关心的问题是下面这些。</p><ul>\n<li>每个子系统负责什么事情？</li>\n<li>它依赖哪些子系统？它能够少知道一些子系统的存在么？</li>\n<li>它们是通过什么接口耦合的？这个接口是否自然体现了两者的业务关系？它们之间的接口是否足够稳定？</li>\n</ul><p>MVC 是一个分解子系统的基本框架，它对于桌面程序尤为适用。通过今天对 “画图” 程序的解剖，我们基本能够建立桌面程序框架上非常一致的套路：</p><ul>\n<li>Model 层接口要自然体现业务逻辑；</li>\n<li>View 层连接 Model 与 Controller，它提供事件委托（delegate）方便 Controller 接收感兴趣的事件，但它不应该知道任何具体的 Controller；</li>\n<li>Controller 层中，每个 Controller 都彼此独立，一个 Controller 的职责基本上就是响应事件，然后调用 Model 或 ViewModel 的接口修改数据。</li>\n</ul><p>当然，这里没有讨论特定应用领域本身相关的架构问题。对于桌面程序而言，这件事通常发生在 Model 层。但对于我们今天的例子 “画图” 程序而言，Model 层比较简单，基本上还不太需要讨论。在后面，我们也可能会尝试把这个 “画图” 程序需求变复杂，看架构上应该怎么进行应对。</p><h2>结语</h2><p>今天我们结合一个大家非常熟悉的例子 “画图” 程序来介绍 MVC 架构。虽然我们基于 Web 开发，但是我们当前给出的画图程序本质上还是单机版的。</p><p>如果你对今天的内容有什么思考与解读，欢迎给我留言，我们一起讨论。下一讲我们将继续实战一个联网版本的画图程序。</p><p>如果你觉得有所收获，也欢迎把文章分享给你的朋友。感谢你的收听，我们下期再见。</p>","comments":[{"had_liked":false,"id":116359,"user_name":"田常发","can_delete":false,"product_type":"c1","uid":1501265,"ip_address":"","ucode":"909C82B9C36380","user_header":"https://static001.geekbang.org/account/avatar/00/16/e8/51/a5f2f8d6.jpg","comment_is_top":false,"comment_ctime":1563843960,"is_pvip":false,"replies":[{"id":"42527","content":"学什么语言都要设计模式。不过设计最重要的不是模式，而是关于解耦的思考","user_name":"作者回复","user_name_real":"许式伟-七牛云(已满)","uid":"1228022","ctime":1563844497,"ip_address":"","comment_id":116359,"utype":1}],"discussion_count":4,"race_medal":0,"score":"173362535800","product_id":100025201,"comment_content":"许老师，我想问一下，学go的话要不要去学一下，设计模式，有的话，您有没有什么资料可以推荐一下？","like_count":41,"discussions":[{"author":{"id":1228022,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bc/f6/e61d4b8f.jpg","nickname":"许式伟-七牛云(已满)","note":"","ucode":"1A2F8AA6F6DB54","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":459504,"discussion_content":"学什么语言都要设计模式。不过设计最重要的不是模式，而是关于解耦的思考","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1563844497,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1247684,"avatar":"https://static001.geekbang.org/account/avatar/00/13/09/c4/0907878e.jpg","nickname":"周波","note":"","ucode":"DB78B7C1A85482","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":370430,"discussion_content":"是的越来越觉得解耦分层的重要性","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1619409394,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1110039,"avatar":"https://static001.geekbang.org/account/avatar/00/10/f0/17/796a3d20.jpg","nickname":"言十年","note":"","ucode":"67B8B49C3A3B17","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":349446,"discussion_content":"喜欢作者的回答：设计最重要的不是模式，而是关于解耦的思考。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1613213287,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1543599,"avatar":"https://static001.geekbang.org/account/avatar/00/17/8d/af/01deb987.jpg","nickname":"xtepCool","note":"","ucode":"6181687E98524E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":349418,"discussion_content":"学习了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1613187740,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":116770,"user_name":"xiaobang","can_delete":false,"product_type":"c1","uid":1157508,"ip_address":"","ucode":"1735BDCFD61655","user_header":"https://static001.geekbang.org/account/avatar/00/11/a9/84/c87b51ce.jpg","comment_is_top":false,"comment_ctime":1563925137,"is_pvip":false,"replies":[{"id":"42725","content":"多谢建议","user_name":"作者回复","user_name_real":"许式伟-七牛云(已满)","uid":"1228022","ctime":1563933707,"ip_address":"","comment_id":116770,"utype":1}],"discussion_count":1,"race_medal":0,"score":"87463271057","product_id":100025201,"comment_content":"这一章看的有点卡，主要是因为对前端知识不熟悉。我看到js代码里面出现class关键字一度怀疑用的是什么语言。另外提一个建议，老师讲的时候能不能按照软件设计的过程来展开。比如开始做需求分析，这个画图程序要提供哪些功能，支持哪些图形等。然后列出平台对画图的支持，再描述在平台上直接硬写会写成什么样的程序，最后按mvc模式重构。我感觉这样能更好的表现设计的思路。","like_count":20,"discussions":[{"author":{"id":1228022,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bc/f6/e61d4b8f.jpg","nickname":"许式伟-七牛云(已满)","note":"","ucode":"1A2F8AA6F6DB54","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":459678,"discussion_content":"多谢建议","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1563933707,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":125067,"user_name":"Smallfly","can_delete":false,"product_type":"c1","uid":1013841,"ip_address":"","ucode":"D388D5E0249A69","user_header":"https://static001.geekbang.org/account/avatar/00/0f/78/51/4790e13e.jpg","comment_is_top":false,"comment_ctime":1566053984,"is_pvip":false,"replies":[{"id":"45869","content":"react.js =&gt; rect.js","user_name":"作者回复","user_name_real":"许式伟-七牛云(已满)","uid":"1228022","ctime":1566060100,"ip_address":"","comment_id":125067,"utype":1}],"discussion_count":3,"race_medal":0,"score":"61695596128","product_id":100025201,"comment_content":"下载源码并切换到 v26 分支，用浏览器打开 index.html 文件，可使用开发者工具进行断点调试。<br><br>绘制矩形的过程：<br><br> 1.\t点击 `Creat Rect` 按钮，激活 react.js(Controller);<br> 2.\tview.js(View) 接收到 drawing 的 onmousedown 事件，传递给事件的实现者 react.js；<br> 3.\treact.js 接收到 onmousedown 事件，记录起始点 p1；<br> 4.\t同理，react.js 接收到 onmousemove 事件，记录 p2, 并调用全局函数 invalidate 绘制；<br> 5.\tinvalidate 交给 qview.invalidateRect 处理（为什么不直接调用 qview.invalidateRect？)；<br> 6.\tqview.invalidateRect 调用 qview.onpaint，在 onpaint 中调用当前激活的 rect.js 的 onpaint 方法；<br> 7.\trect.js 中 onpaint 调用 buildShape() 创建 QRect(Model) 实例，然后调用该实例的 onpaint 方法绘制；<br> 8.\t绘制结束时 react.js 接收到 onmouseup 事件，把当前 model 实例存入 doc（Model)，保证重绘时能够再次绘制原来的图形；<br><br>MVC 角色的通信过程：<br><br>V -&gt; C -&gt; V -&gt; C -&gt; M","like_count":13,"discussions":[{"author":{"id":1228022,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bc/f6/e61d4b8f.jpg","nickname":"许式伟-七牛云(已满)","note":"","ucode":"1A2F8AA6F6DB54","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":463421,"discussion_content":"react.js =&amp;gt; rect.js","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566060100,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1108505,"avatar":"https://static001.geekbang.org/account/avatar/00/10/ea/19/14018371.jpg","nickname":"瓜瓜","note":"","ucode":"F90A5135A9BB4B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":136738,"discussion_content":"没有你这篇讲解，估计我是看不懂这篇了，感谢！","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1579160428,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1110039,"avatar":"https://static001.geekbang.org/account/avatar/00/10/f0/17/796a3d20.jpg","nickname":"言十年","note":"","ucode":"67B8B49C3A3B17","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":349447,"discussion_content":"代码下载了。感谢指南","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1613214209,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":115139,"user_name":"Linuxer","can_delete":false,"product_type":"c1","uid":1153978,"ip_address":"","ucode":"272D9D8089C3D6","user_header":"https://static001.geekbang.org/account/avatar/00/11/9b/ba/333b59e5.jpg","comment_is_top":false,"comment_ctime":1563499344,"is_pvip":false,"replies":[{"id":"42076","content":"controller本来就会耦合model和view。重点是controller之间不要耦合","user_name":"作者回复","user_name_real":"许式伟-七牛云(已满)","uid":"1228022","ctime":1563513130,"ip_address":"","comment_id":115139,"utype":1}],"discussion_count":1,"race_medal":0,"score":"53103106896","product_id":100025201,"comment_content":"由Controller来创建具体Shape这样会不会，model和controller又耦合了呢","like_count":12,"discussions":[{"author":{"id":1228022,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bc/f6/e61d4b8f.jpg","nickname":"许式伟-七牛云(已满)","note":"","ucode":"1A2F8AA6F6DB54","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":458984,"discussion_content":"controller本来就会耦合model和view。重点是controller之间不要耦合","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1563513130,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":125075,"user_name":"Smallfly","can_delete":false,"product_type":"c1","uid":1013841,"ip_address":"","ucode":"D388D5E0249A69","user_header":"https://static001.geekbang.org/account/avatar/00/0f/78/51/4790e13e.jpg","comment_is_top":false,"comment_ctime":1566055314,"is_pvip":false,"replies":[{"id":"45868","content":"👍","user_name":"作者回复","user_name_real":"许式伟-七牛云(已满)","uid":"1228022","ctime":1566059957,"ip_address":"","comment_id":125075,"utype":1}],"discussion_count":1,"race_medal":0,"score":"35925793682","product_id":100025201,"comment_content":"五讲画图程序已经讲完了，第一次只是泛泛而读，这次打算精读，并整理一下自己的理解。<br><br>第一讲的重点架构思想包括：<br><br> 1.\t为了避免 Model 知道 View 的实现细节，可以让 Model 耦合 GDI 接口。模块间通信如果避免不了耦合，就耦合稳定的模块，这个模块最好是系统的，因为系统模块相对于业务模块通常更加稳定；<br><br> 2.\tViewModel 持有 Model，并由 Controller 来更新 Model&#47;ViewModel；<br><br> 3.\tViewModel 定义 Controller 的行为规则，但并不关心 Controller 的具体行为。Controller 可以选择性的接管 ViewModel 的事件；<br><br> 4.\tViewModel 协调 Model 和 Controller，启到承上启下的作用，所以 ViewModel 职责的划分对程序的结构有比较大的影响；<br><br> 5.\tModel 的结构稳定，容易做到平台无关，ViewModel 会跟平台强关联；<br><br> 6.\t避免 Controller 之间的耦合，可以使用 ViewModel 作为通信中介者；<br><br> 7.\t相同的 Model 可能在 Controller 层有不同的展现方法；<br><br>本讲中 View 应该理解为 ViewModel，View 是不应该持有 Model 数据的，文中老师也说了网页的 View 是由浏览器实现的，个人觉得从严格意义上将，这不算是 MVC 模式，也不像 MVVM，应该叫 MVMC？<br><br>下载源码并切换到 v26 分支，用浏览器打开 index.html 文件，可使用开发者工具进行断点调试。","like_count":9,"discussions":[{"author":{"id":1228022,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bc/f6/e61d4b8f.jpg","nickname":"许式伟-七牛云(已满)","note":"","ucode":"1A2F8AA6F6DB54","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":463423,"discussion_content":"👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566059957,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":115380,"user_name":"八哥","can_delete":false,"product_type":"c1","uid":1012205,"ip_address":"","ucode":"ED2E09CBBFC060","user_header":"https://static001.geekbang.org/account/avatar/00/0f/71/ed/45ab9f03.jpg","comment_is_top":false,"comment_ctime":1563547922,"is_pvip":false,"discussion_count":0,"race_medal":1,"score":"35923286290","product_id":100025201,"comment_content":"CEO，js写的还这么好。厉害","like_count":8},{"had_liked":false,"id":122520,"user_name":"Geek_88604f","can_delete":false,"product_type":"c1","uid":1501234,"ip_address":"","ucode":"33DD1318E53814","user_header":"","comment_is_top":false,"comment_ctime":1565414203,"is_pvip":false,"replies":[{"id":"44960","content":"👍","user_name":"作者回复","user_name_real":"许式伟-七牛云(已满)","uid":"1228022","ctime":1565415966,"ip_address":"","comment_id":122520,"utype":1}],"discussion_count":2,"race_medal":0,"score":"18745283387","product_id":100025201,"comment_content":"        浏览器打开index.htm，首先创建canvas画布对象，后面的画图操作都是在画布对象上进行的。<br>        接着加载dom对象，注意这里并没有实例化dom对象。<br>        然后加载view对象，并且实例化view对象和dom对象。view对象中定义了事件处理规则，接管画布的事件处理，将onpaint委托给了doc和contraller，注意doc的onpaint和contraller的onpaint绘制的是不同的内容，还有就是定义了contraller的操作规则。<br>        接下来就是加载contraller，调用view的方法注册自己，并将事件处理委托给contraller。<br>        最后加载和显示菜单，定义contraller的鼠标点击事件，在点击事件中指定当前contraller。这样当鼠标在画布上移动时，通过层层委托（画布——view——contraller）最终触发contraller的invalidate，invalidate触发onpaint，onpaint触发doc.onpaint。<br>","like_count":4,"discussions":[{"author":{"id":1228022,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bc/f6/e61d4b8f.jpg","nickname":"许式伟-七牛云(已满)","note":"","ucode":"1A2F8AA6F6DB54","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":462286,"discussion_content":"👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1565415966,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1543599,"avatar":"https://static001.geekbang.org/account/avatar/00/17/8d/af/01deb987.jpg","nickname":"xtepCool","note":"","ucode":"6181687E98524E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":349416,"discussion_content":"学习了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1613187182,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":121158,"user_name":"Geek_88604f","can_delete":false,"product_type":"c1","uid":1501234,"ip_address":"","ucode":"33DD1318E53814","user_header":"","comment_is_top":false,"comment_ctime":1565067854,"is_pvip":false,"replies":[{"id":"44577","content":"是的","user_name":"作者回复","user_name_real":"许式伟-七牛云(已满)","uid":"1228022","ctime":1565096290,"ip_address":"","comment_id":121158,"utype":1}],"discussion_count":1,"race_medal":0,"score":"18744937038","product_id":100025201,"comment_content":"看了几遍捋一下思路:view接收到用户事件，把事件处理委托给controller，由controller来操作model。是这样的吗，老师？","like_count":4,"discussions":[{"author":{"id":1228022,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bc/f6/e61d4b8f.jpg","nickname":"许式伟-七牛云(已满)","note":"","ucode":"1A2F8AA6F6DB54","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":461655,"discussion_content":"是的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1565096290,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":124625,"user_name":"Halohoop","can_delete":false,"product_type":"c1","uid":1108517,"ip_address":"","ucode":"623C5E6AF7BCE0","user_header":"https://static001.geekbang.org/account/avatar/00/10/ea/25/75be8cdf.jpg","comment_is_top":false,"comment_ctime":1565930264,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10155864856","product_id":100025201,"comment_content":"划重点：“依赖选择是考虑耦合的一个关键因素。在依赖选择上，我们会更倾向于依赖接口更为稳定的组件，因为这意味着我们的接口也更稳定。”","like_count":2},{"had_liked":false,"id":115095,"user_name":"kyle","can_delete":false,"product_type":"c1","uid":1179158,"ip_address":"","ucode":"DB05C0F7D2C472","user_header":"https://static001.geekbang.org/account/avatar/00/11/fe/16/0f096793.jpg","comment_is_top":false,"comment_ctime":1563494381,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10153428973","product_id":100025201,"comment_content":"掉队了","like_count":2},{"had_liked":false,"id":312212,"user_name":"果粒橙","can_delete":false,"product_type":"c1","uid":1272730,"ip_address":"","ucode":"000B15E28C68B6","user_header":"https://static001.geekbang.org/account/avatar/00/13/6b/9a/786b1ed8.jpg","comment_is_top":false,"comment_ctime":1631685581,"is_pvip":false,"replies":[{"id":"113146","content":"这个没有用，只是用来防治浏览器不正确的缓存，在url变化后它就会重新请求服务器","user_name":"作者回复","user_name_real":"许式伟-七牛云(已满)","uid":"1228022","ctime":1631749617,"ip_address":"","comment_id":312212,"utype":1}],"discussion_count":1,"race_medal":4,"score":"5926652877","product_id":100025201,"comment_content":"index.html中的&lt;script src=&quot;creator&#47;path.js?v=7&quot;&gt;，v=7是怎么传给path.js的，起什么作用？没学过js不太懂","like_count":1,"discussions":[{"author":{"id":1228022,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bc/f6/e61d4b8f.jpg","nickname":"许式伟-七牛云(已满)","note":"","ucode":"1A2F8AA6F6DB54","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":526897,"discussion_content":"这个没有用，只是用来防治浏览器不正确的缓存，在url变化后它就会重新请求服务器","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1631749617,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":249920,"user_name":"浩然","can_delete":false,"product_type":"c1","uid":1378201,"ip_address":"","ucode":"FC771E92869796","user_header":"https://static001.geekbang.org/account/avatar/00/15/07/99/2c12c56c.jpg","comment_is_top":false,"comment_ctime":1600852971,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5895820267","product_id":100025201,"comment_content":"用户点击的时候(invokeController)激活某个Controller -&gt; Controller接管事件 -&gt; 通知View触发绘制 绘制完调用onmouseup事件 -&gt; 然后view通知M（qview.doc.addShape）<br>V-C-VM-M<br><br>M层做厚<br>V&#47;VM承上启下<br>C相互独立<br>供二次开发API放在VM层<br><br>为了理解老师讲的手动挪了一下代码 https:&#47;&#47;github.com&#47;jianghaoran116&#47;study-code&#47;tree&#47;mvc-26&#47;mvc ","like_count":1},{"had_liked":false,"id":172007,"user_name":"Geek_gooy","can_delete":false,"product_type":"c1","uid":1504570,"ip_address":"","ucode":"FC168C31530040","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLluwfFjxlCmg9p2rJVicBdBo6OYpN0EAotUguias8wc78WtAEPHsWic0880CqGwyNypy2KZqVpYhGiag/132","comment_is_top":false,"comment_ctime":1579069770,"is_pvip":false,"replies":[{"id":"66693","content":"多谢反馈","user_name":"作者回复","user_name_real":"许式伟-七牛云(已满)","uid":"1228022","ctime":1579078615,"ip_address":"","comment_id":172007,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5874037066","product_id":100025201,"comment_content":"听完画图的课，问题真的是一大堆。<br>不清楚这个画图程序最终是长什么样的，没有提前给出ui设计。<br><br>不知道程序的流程图。<br><br>不知道程序最终怎么发布，用户怎么使用。<br><br>知道用HTML.js.go语言，但不知道go语言扮演的是什么角色，对于一个没接触过go语言的人来说。<br><br>不理解所谓离线画图还要用地址加端口访问，这不是远程了吗。<br><br>……","like_count":1,"discussions":[{"author":{"id":1228022,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bc/f6/e61d4b8f.jpg","nickname":"许式伟-七牛云(已满)","note":"","ucode":"1A2F8AA6F6DB54","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":481579,"discussion_content":"多谢反馈","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579078615,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":120554,"user_name":"Geek_88604f","can_delete":false,"product_type":"c1","uid":1501234,"ip_address":"","ucode":"33DD1318E53814","user_header":"","comment_is_top":false,"comment_ctime":1564928306,"is_pvip":false,"replies":[{"id":"44219","content":"取得二维（2D）的 Canvas 上下文，用于绘制。详细参阅： https:&#47;&#47;developer.mozilla.org&#47;zh-CN&#47;docs&#47;Web&#47;API&#47;HTMLCanvasElement&#47;getContext","user_name":"作者回复","user_name_real":"许式伟-七牛云(已满)","uid":"1228022","ctime":1564943991,"ip_address":"","comment_id":120554,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5859895602","product_id":100025201,"comment_content":"view.js中&quot;let ctx = this.drawing.getContext(&quot;2d&quot;)&quot;，这段代码是什么意思？","like_count":1,"discussions":[{"author":{"id":1228022,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bc/f6/e61d4b8f.jpg","nickname":"许式伟-七牛云(已满)","note":"","ucode":"1A2F8AA6F6DB54","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":461382,"discussion_content":"取得二维（2D）的 Canvas 上下文，用于绘制。详细参阅： https://developer.mozilla.org/zh-CN/docs/Web/API/HTMLCanvasElement/getContext","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1564943991,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":119607,"user_name":"Jian","can_delete":false,"product_type":"c1","uid":1023040,"ip_address":"","ucode":"358133EC2AFEB0","user_header":"https://static001.geekbang.org/account/avatar/00/0f/9c/40/6323850e.jpg","comment_is_top":false,"comment_ctime":1564635955,"is_pvip":false,"replies":[{"id":"43889","content":"多谢建议","user_name":"作者回复","user_name_real":"许式伟-七牛云(已满)","uid":"1228022","ctime":1564646839,"ip_address":"","comment_id":119607,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5859603251","product_id":100025201,"comment_content":"最大的收获还是解耦。首先将应用程序进行抽象&#47;分层，然后通过中间的view层将model层和controller层串联在一起。<br>controller的使用，就像java中的interface，其有多重实现方式。<br>这是第二次读这篇文章了，因为没有接触过前端，不知道前端的实习方式。后面看懂了代码，但是如果能有个流程图样的粗略解释可能会更有利于理解吧。","like_count":1,"discussions":[{"author":{"id":1228022,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bc/f6/e61d4b8f.jpg","nickname":"许式伟-七牛云(已满)","note":"","ucode":"1A2F8AA6F6DB54","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":460975,"discussion_content":"多谢建议","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1564646839,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":115189,"user_name":"Luke","can_delete":false,"product_type":"c1","uid":1216016,"ip_address":"","ucode":"C34D4C44DBCE03","user_header":"https://static001.geekbang.org/account/avatar/00/12/8e/10/10092bb1.jpg","comment_is_top":false,"comment_ctime":1563504509,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5858471805","product_id":100025201,"comment_content":"保持跟进，目前只能说好像有点懂了，还是得在自己项目上多思考下，不是真的懂了","like_count":1},{"had_liked":false,"id":115088,"user_name":"Aaron Cheung","can_delete":false,"product_type":"c1","uid":1079816,"ip_address":"","ucode":"03972759C53667","user_header":"https://static001.geekbang.org/account/avatar/00/10/7a/08/4d3e47dd.jpg","comment_is_top":false,"comment_ctime":1563492970,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5858460266","product_id":100025201,"comment_content":"大前端 还是非常有价值 打卡","like_count":1},{"had_liked":false,"id":331857,"user_name":"FOCUS","can_delete":false,"product_type":"c1","uid":1140080,"ip_address":"","ucode":"DFE3078B632026","user_header":"https://static001.geekbang.org/account/avatar/00/11/65/70/7e137498.jpg","comment_is_top":false,"comment_ctime":1642836321,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1642836321","product_id":100025201,"comment_content":"先是层之间的切分，算作为层级的子系统；<br>层，其中的构成，层里面的子系统；<br>层与层之间的关系；<br><br>架构指导原则：<br>1&gt; 系统的稳定点与变化点;<br>2&gt; 减少耦合，如：controller 之间的等，models 的构成之间；<br>问题：<br>如何思考，以减少耦合？<br>如何区分稳定点和变化点？","like_count":0},{"had_liked":false,"id":327689,"user_name":"静心","can_delete":false,"product_type":"c1","uid":1335457,"ip_address":"","ucode":"EB264FA6519FDA","user_header":"https://static001.geekbang.org/account/avatar/00/14/60/a1/8f003697.jpg","comment_is_top":false,"comment_ctime":1640239128,"is_pvip":true,"discussion_count":0,"race_medal":5,"score":"1640239128","product_id":100025201,"comment_content":"感觉要想真正理解这篇文章需要先了解MVC、MVVM、MVP几种架构模型的区别。建议参考一下以下文章：https:&#47;&#47;draveness.me&#47;mvx&#47;","like_count":0},{"had_liked":false,"id":313044,"user_name":"méng","can_delete":false,"product_type":"c1","uid":1338665,"ip_address":"","ucode":"44DAD63C738E9F","user_header":"https://static001.geekbang.org/account/avatar/00/14/6d/29/ae69a30f.jpg","comment_is_top":false,"comment_ctime":1632226416,"is_pvip":false,"replies":[{"id":"113417","content":"v不会主动感知c。m+v构成只读的软件，然后v只是无脑委托事件交给c，c来实现真正意义上的用户交互","user_name":"作者回复","user_name_real":"许式伟-七牛云(已满)","uid":"1228022","ctime":1632266223,"ip_address":"","comment_id":313044,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1632226416","product_id":100025201,"comment_content":"看了一些评论，得到一个理解，不知道对不对：这里的mvc只讨论分工，相当于是把领域的功能按职责分工。model是业务的核心，它与平台无关。controller是领域服务，即根据具体的也许行为提供调度服务。view层则是针对具体的可视化平台响应操作。<br><br>v调用c调用m","like_count":0,"discussions":[{"author":{"id":1228022,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bc/f6/e61d4b8f.jpg","nickname":"许式伟-七牛云(已满)","note":"","ucode":"1A2F8AA6F6DB54","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":527208,"discussion_content":"v不会主动感知c。m+v构成只读的软件，然后v只是无脑委托事件交给c，c来实现真正意义上的用户交互","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1632266223,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1338665,"avatar":"https://static001.geekbang.org/account/avatar/00/14/6d/29/ae69a30f.jpg","nickname":"méng","note":"","ucode":"44DAD63C738E9F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":395797,"discussion_content":"有点理解了，v是不知道c的存在的，而c订阅v的事件进行处理","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1632357114,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":313042,"user_name":"méng","can_delete":false,"product_type":"c1","uid":1338665,"ip_address":"","ucode":"44DAD63C738E9F","user_header":"https://static001.geekbang.org/account/avatar/00/14/6d/29/ae69a30f.jpg","comment_is_top":false,"comment_ctime":1632225817,"is_pvip":false,"replies":[{"id":"113418","content":"在web中，从架构视角来说api服务层是model层（当然有很多公司不提供api服务层，这个时候应该认为model层由数据库实现，和单机软件controller直接访问变量的getter&#47;setter来说，属于贫血的model层。view层主要是模板引擎，它关注的是data（dom）如何渲染成html+js，并且让界面操作的事件关联上对应的controller。剩下来的东西基本上都应该归类为conroller层。对于胖前端（用js实现业务），js就是controller。对于胖后端（比如用php实现业务），php就是controller。这一层最重要的是解耦，如何让不同controller实现无关，不会彼此耦合得很死。","user_name":"作者回复","user_name_real":"许式伟-七牛云(已满)","uid":"1228022","ctime":1632266998,"ip_address":"","comment_id":313042,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1632225817","product_id":100025201,"comment_content":"老师，可能我习惯了web开发那套mvc，对于文章里提的mvc总感觉对不上号。这里边说的mvc是指一个类里边分别对应视图控制器模型的归类吗？","like_count":0,"discussions":[{"author":{"id":1228022,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bc/f6/e61d4b8f.jpg","nickname":"许式伟-七牛云(已满)","note":"","ucode":"1A2F8AA6F6DB54","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":527207,"discussion_content":"在web中，从架构视角来说api服务层是model层（当然有很多公司不提供api服务层，这个时候应该认为model层由数据库实现，和单机软件controller直接访问变量的getter/setter来说，属于贫血的model层。view层主要是模板引擎，它关注的是data（dom）如何渲染成html+js，并且让界面操作的事件关联上对应的controller。剩下来的东西基本上都应该归类为conroller层。对于胖前端（用js实现业务），js就是controller。对于胖后端（比如用php实现业务），php就是controller。这一层最重要的是解耦，如何让不同controller实现无关，不会彼此耦合得很死。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1632266998,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":293959,"user_name":"杨涛","can_delete":false,"product_type":"c1","uid":1082978,"ip_address":"","ucode":"2B6B6AEFFB54A3","user_header":"https://static001.geekbang.org/account/avatar/00/10/86/62/22e9aeb0.jpg","comment_is_top":false,"comment_ctime":1621650173,"is_pvip":false,"replies":[{"id":"106599","content":"大体看起来是这样的：<br><br>type Todolist interface {<br>    Add(...) *Todo<br>    ...<br>}<br><br>type Todo interface {<br>    ...<br>}<br>","user_name":"作者回复","user_name_real":"许式伟-七牛云(已满)","uid":"1228022","ctime":1621678838,"ip_address":"","comment_id":293959,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1621650173","product_id":100025201,"comment_content":"为什么model层是一个dom树呢？如果是一个todolist那它的model应该是什么呢？","like_count":0,"discussions":[{"author":{"id":1228022,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bc/f6/e61d4b8f.jpg","nickname":"许式伟-七牛云(已满)","note":"","ucode":"1A2F8AA6F6DB54","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":520447,"discussion_content":"大体看起来是这样的：\n\ntype Todolist interface {\n    Add(...) *Todo\n    ...\n}\n\ntype Todo interface {\n    ...\n}\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1621678838,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":1,"child_discussions":[{"author":{"id":1140080,"avatar":"https://static001.geekbang.org/account/avatar/00/11/65/70/7e137498.jpg","nickname":"FOCUS","note":"","ucode":"DFE3078B632026","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1228022,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bc/f6/e61d4b8f.jpg","nickname":"许式伟-七牛云(已满)","note":"","ucode":"1A2F8AA6F6DB54","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":547718,"discussion_content":"model 是一个 dom 树，是一个整体层面的抽象。类似一个契约。然后再实现其中的方法？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1642837622,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":520447,"ip_address":""},"score":547718,"extra":""}]}]},{"had_liked":false,"id":287881,"user_name":"Simon","can_delete":false,"product_type":"c1","uid":1914504,"ip_address":"","ucode":"A8A2E3E57BD029","user_header":"https://static001.geekbang.org/account/avatar/00/1d/36/88/20b6a6ee.jpg","comment_is_top":false,"comment_ctime":1618206152,"is_pvip":true,"replies":[{"id":"104566","content":"所有controller对他来说都是一视同仁，无差异的抽象接口表达的实例","user_name":"作者回复","user_name_real":"许式伟-七牛云(已满)","uid":"1228022","ctime":1618234668,"ip_address":"","comment_id":287881,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1618206152","product_id":100025201,"comment_content":"“View 层连接 Model 与 Controller，它提供事件委托（delegate）方便 Controller 接收感兴趣的事件，但它不应该知道任何具体的 Controller”  最后一句“不应该知道任何具体的 Controller”，“不应该知道”具体指什么？","like_count":0,"discussions":[{"author":{"id":1228022,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bc/f6/e61d4b8f.jpg","nickname":"许式伟-七牛云(已满)","note":"","ucode":"1A2F8AA6F6DB54","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":518453,"discussion_content":"所有controller对他来说都是一视同仁，无差异的抽象接口表达的实例","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1618234668,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":287808,"user_name":"不温暖啊不纯良","can_delete":false,"product_type":"c1","uid":2079117,"ip_address":"","ucode":"204474A214E00C","user_header":"https://static001.geekbang.org/account/avatar/00/1f/b9/8d/00bded19.jpg","comment_is_top":false,"comment_ctime":1618154793,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1618154793","product_id":100025201,"comment_content":"Model层是业务的体现，从这一层代码可以看出，这个画图程序都有哪些业务？vm层负责图形的绘制，c层负责控制启动、停止。","like_count":0},{"had_liked":false,"id":279000,"user_name":"青铜5 周群力","can_delete":false,"product_type":"c1","uid":1111965,"ip_address":"","ucode":"EA80B442EC8A68","user_header":"https://static001.geekbang.org/account/avatar/00/10/f7/9d/c7295d17.jpg","comment_is_top":false,"comment_ctime":1613533266,"is_pvip":false,"replies":[{"id":"101404","content":"这要看controller有没有临时状态。临时状态是指dom和view不感知的中间态。","user_name":"作者回复","user_name_real":"许式伟-七牛云(已满)","uid":"1228022","ctime":1613565016,"ip_address":"","comment_id":279000,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1613533266","product_id":100025201,"comment_content":"请教老师几个问题：<br>1. 为啥controller层设计成有状态的（比如QRectCreator、QPathCreator等对象内部存了点的坐标），因为直觉上我会觉得这些状态数据应该属于viewmodel层或者model层，而本文在controller层也放状态，就导致viewmodel&#47;model&#47;controller 三层都维护状态，感觉边界模糊。我本来对mvc的理解是view和model维护状态，controller作为一个衔接层、帮助view和model通信&#47;数据同步，但看了这个案例后变的分不清哪些数据该放哪一层了；<br>2. 既然model层耦合了GDI、由model层直接画界面，那么渲染的时候是不是就没必要model调view层的invalidate、view层又调回model层的onpaint、model层再操作GDI，这样循环调用我们直觉上就会觉得不好（比如系统设计的时候会避免循环依赖），是不是当数据变更时，直接model层自己调GDI就好了，没必要绕一圈通知view了<br>3. 操作GDI的逻辑，是否从model层剥离出来、放到viewmodel层或者presenter层更好？感觉这样看着更舒服……","like_count":0,"discussions":[{"author":{"id":1228022,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bc/f6/e61d4b8f.jpg","nickname":"许式伟-七牛云(已满)","note":"","ucode":"1A2F8AA6F6DB54","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":515591,"discussion_content":"这要看controller有没有临时状态。临时状态是指dom和view不感知的中间态。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1613565016,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":222261,"user_name":"被讨厌的勇气","can_delete":false,"product_type":"c1","uid":1547913,"ip_address":"","ucode":"AE3B3CA27D91A2","user_header":"https://static001.geekbang.org/account/avatar/00/17/9e/89/6e9c05d6.jpg","comment_is_top":false,"comment_ctime":1590729504,"is_pvip":false,"replies":[{"id":"81940","content":"前面介绍mvc的时候提过controller层会有辅助view。","user_name":"作者回复","user_name_real":"许式伟-七牛云(已满)","uid":"1228022","ctime":1590735470,"ip_address":"","comment_id":222261,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1590729504","product_id":100025201,"comment_content":"前面提到过，在Controller在做某些逻辑的过程中生成的View属于Controller层。<br>实战中将命令菜单和状态显示用途的界面元素也划分在Controller层，为什么？这个不属于Controller逻辑中生成的，这类按钮不应该属于View吗？是为了将不同的界面代码封装成几个文件吗？","like_count":0,"discussions":[{"author":{"id":1228022,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bc/f6/e61d4b8f.jpg","nickname":"许式伟-七牛云(已满)","note":"","ucode":"1A2F8AA6F6DB54","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":496732,"discussion_content":"前面介绍mvc的时候提过controller层会有辅助view。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1590735470,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":134350,"user_name":"Lukia","can_delete":false,"product_type":"c1","uid":1028698,"ip_address":"","ucode":"C19472337BCCC6","user_header":"https://static001.geekbang.org/account/avatar/00/0f/b2/5a/574f5bb0.jpg","comment_is_top":false,"comment_ctime":1568811693,"is_pvip":false,"replies":[{"id":"51524","content":"selection 最直白的理解是被选中的对象。","user_name":"作者回复","user_name_real":"许式伟-七牛云(已满)","uid":"1228022","ctime":1568824103,"ip_address":"","comment_id":134350,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1568811693","product_id":100025201,"comment_content":"许老师好，文中有很多地方都用Selection概念用来做类比。那么具体应该怎么去理解Selection这个概念呢？","like_count":0,"discussions":[{"author":{"id":1228022,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bc/f6/e61d4b8f.jpg","nickname":"许式伟-七牛云(已满)","note":"","ucode":"1A2F8AA6F6DB54","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":467712,"discussion_content":"selection 最直白的理解是被选中的对象。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1568824103,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":122913,"user_name":"Tesla","can_delete":false,"product_type":"c1","uid":1500742,"ip_address":"","ucode":"98629AFD9861EE","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKUcSLVV6ia3dibe7qvTu8Vic1PVs2EibxoUdx930MC7j2Q9A6s4eibMDZlcicMFY0D0icd3RrDorMChu0zw/132","comment_is_top":false,"comment_ctime":1565573069,"is_pvip":false,"replies":[{"id":"45191","content":"能够举一个实际的例子吗","user_name":"作者回复","user_name_real":"许式伟-七牛云(已满)","uid":"1228022","ctime":1565582894,"ip_address":"","comment_id":122913,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1565573069","product_id":100025201,"comment_content":"老师好，请问一下Controller之间不要知道彼此的意思，是不要知道彼此实现的细节吗？有很多时候，我会在一个controller方法里调用另一个方法，将功能组合再传到客户端，这样的做法好不好呢？","like_count":0,"discussions":[{"author":{"id":1228022,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bc/f6/e61d4b8f.jpg","nickname":"许式伟-七牛云(已满)","note":"","ucode":"1A2F8AA6F6DB54","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":462452,"discussion_content":"能够举一个实际的例子吗","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1565582894,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1500742,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKUcSLVV6ia3dibe7qvTu8Vic1PVs2EibxoUdx930MC7j2Q9A6s4eibMDZlcicMFY0D0icd3RrDorMChu0zw/132","nickname":"Tesla","note":"","ucode":"98629AFD9861EE","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":4597,"discussion_content":"比如说，我有一个兑换码兑换功能。可以在商品列表，选择使用兑换码换购商品（接口A）。也可以在兑换码列表，直接使用兑换码（接口B）。由于兑换码的种类很多，在调用接口B在判断兑换码是否可用以后，增加了一个回调方法通过反射执行不同的方法。如果是换购商品的兑换码，需要下订单，是再去调用接口A的。简言之，是系统的多个controller功能整合到了一个按钮  一个controller下。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1565584734,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":121644,"user_name":"YourSweetHeart","can_delete":false,"product_type":"c1","uid":1242122,"ip_address":"","ucode":"38843F447B03F2","user_header":"https://static001.geekbang.org/account/avatar/00/12/f4/0a/cf728857.jpg","comment_is_top":false,"comment_ctime":1565175750,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1565175750","product_id":100025201,"comment_content":"华龙点睛","like_count":0},{"had_liked":false,"id":121633,"user_name":"humor","can_delete":false,"product_type":"c1","uid":1181867,"ip_address":"","ucode":"9B48C4C7BEC92C","user_header":"https://static001.geekbang.org/account/avatar/00/12/08/ab/caec7bca.jpg","comment_is_top":false,"comment_ctime":1565171579,"is_pvip":false,"replies":[{"id":"44698","content":"不一样，画的东西是不同的东西。你可以注释掉这块的onpaint代码看下。","user_name":"作者回复","user_name_real":"许式伟-七牛云(已满)","uid":"1228022","ctime":1565183070,"ip_address":"","comment_id":121633,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1565171579","product_id":100025201,"comment_content":"为什么controller层和model层都有onpaint方法，这样controller层的onpaint方法不就多余了么","like_count":0,"discussions":[{"author":{"id":1228022,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bc/f6/e61d4b8f.jpg","nickname":"许式伟-七牛云(已满)","note":"","ucode":"1A2F8AA6F6DB54","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":461885,"discussion_content":"不一样，画的东西是不同的东西。你可以注释掉这块的onpaint代码看下。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1565183070,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":120957,"user_name":"Geek_88604f","can_delete":false,"product_type":"c1","uid":1501234,"ip_address":"","ucode":"33DD1318E53814","user_header":"","comment_is_top":false,"comment_ctime":1565018381,"is_pvip":false,"replies":[{"id":"44446","content":"controller","user_name":"作者回复","user_name_real":"许式伟-七牛云(已满)","uid":"1228022","ctime":1565019696,"ip_address":"","comment_id":120957,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1565018381","product_id":100025201,"comment_content":"不太明白是谁来触发invalidateRect的？","like_count":0,"discussions":[{"author":{"id":1228022,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bc/f6/e61d4b8f.jpg","nickname":"许式伟-七牛云(已满)","note":"","ucode":"1A2F8AA6F6DB54","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":461546,"discussion_content":"controller","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1565019696,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":117658,"user_name":"lu","can_delete":false,"product_type":"c1","uid":1504513,"ip_address":"","ucode":"73DDE01840B42B","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eps0D5NibFfFrQLJAtEJxJ9VQbUe7CLdDViavPYKMKvOCqwvqSDTOpXqsuicTQ1f2k47KAjfqEW99XwQ/132","comment_is_top":false,"comment_ctime":1564106514,"is_pvip":false,"replies":[{"id":"43139","content":"这个在27讲","user_name":"作者回复","user_name_real":"许式伟-七牛云(已满)","uid":"1228022","ctime":1564135282,"ip_address":"","comment_id":117658,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1564106514","product_id":100025201,"comment_content":"图形拖动或点击的时候，外面的虚线矩形框绘制是在哪里实现的？","like_count":0,"discussions":[{"author":{"id":1228022,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bc/f6/e61d4b8f.jpg","nickname":"许式伟-七牛云(已满)","note":"","ucode":"1A2F8AA6F6DB54","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":460074,"discussion_content":"这个在27讲","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1564135282,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1504513,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eps0D5NibFfFrQLJAtEJxJ9VQbUe7CLdDViavPYKMKvOCqwvqSDTOpXqsuicTQ1f2k47KAjfqEW99XwQ/132","nickname":"lu","note":"","ucode":"73DDE01840B42B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":3009,"discussion_content":"刚在QShapeSelector的onpaint里面看到了虚线矩形外框的实现，设计的很精致，厉害！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1564110030,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":117182,"user_name":"Longerian","can_delete":false,"product_type":"c1","uid":1032464,"ip_address":"","ucode":"0B74EE70D09A2A","user_header":"https://static001.geekbang.org/account/avatar/00/0f/c1/10/28d5a686.jpg","comment_is_top":false,"comment_ctime":1563982988,"is_pvip":false,"replies":[{"id":"42969","content":"文章中的类规格是伪代码，链接中的程序是js代码","user_name":"作者回复","user_name_real":"许式伟-七牛云(已满)","uid":"1228022","ctime":1564029804,"ip_address":"","comment_id":117182,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1563982988","product_id":100025201,"comment_content":"真的是js代码吗😂😂我还以为是伪代码","like_count":0,"discussions":[{"author":{"id":1228022,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bc/f6/e61d4b8f.jpg","nickname":"许式伟-七牛云(已满)","note":"","ucode":"1A2F8AA6F6DB54","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":459850,"discussion_content":"文章中的类规格是伪代码，链接中的程序是js代码","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1564029804,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":116496,"user_name":"Geek_88604f","can_delete":false,"product_type":"c1","uid":1501234,"ip_address":"","ucode":"33DD1318E53814","user_header":"","comment_is_top":false,"comment_ctime":1563858305,"is_pvip":false,"replies":[{"id":"42607","content":"是的","user_name":"作者回复","user_name_real":"许式伟-七牛云(已满)","uid":"1228022","ctime":1563860749,"ip_address":"","comment_id":116496,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1563858305","product_id":100025201,"comment_content":"controller层的onpaint最终调用的是model的onpaint吧？","like_count":0,"discussions":[{"author":{"id":1228022,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bc/f6/e61d4b8f.jpg","nickname":"许式伟-七牛云(已满)","note":"","ucode":"1A2F8AA6F6DB54","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":459567,"discussion_content":"是的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1563860749,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":116210,"user_name":"有只骆驼","can_delete":false,"product_type":"c1","uid":1500694,"ip_address":"","ucode":"5575A4CDB409DF","user_header":"https://static001.geekbang.org/account/avatar/00/16/e6/16/7c8ab10c.jpg","comment_is_top":false,"comment_ctime":1563802212,"is_pvip":false,"replies":[{"id":"42510","content":"看下今天发的是否符合你的需要","user_name":"作者回复","user_name_real":"许式伟-七牛云(已满)","uid":"1228022","ctime":1563807997,"ip_address":"","comment_id":116210,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1563802212","product_id":100025201,"comment_content":"要看多遍并动手操作才能更好消化。老师能否把脑图也放出来下撒","like_count":0,"discussions":[{"author":{"id":1228022,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bc/f6/e61d4b8f.jpg","nickname":"许式伟-七牛云(已满)","note":"","ucode":"1A2F8AA6F6DB54","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":459435,"discussion_content":"看下今天发的是否符合你的需要","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1563807997,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":115649,"user_name":"honnkyou","can_delete":false,"product_type":"c1","uid":1026608,"ip_address":"","ucode":"FD5EC4120EE803","user_header":"https://static001.geekbang.org/account/avatar/00/0f/aa/30/acc91f01.jpg","comment_is_top":false,"comment_ctime":1563682501,"is_pvip":false,"replies":[{"id":"42256","content":"我文章中有说。view层不想知道model层数据结构细节的话，最简单的方法就是把onpaint事件委托给model层。","user_name":"作者回复","user_name_real":"许式伟-七牛云(已满)","uid":"1228022","ctime":1563697271,"ip_address":"","comment_id":115649,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1563682501","product_id":100025201,"comment_content":"老师，Model层跟view层中都又onpaint，两个区别或者侧重是什么呢？","like_count":0,"discussions":[{"author":{"id":1228022,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bc/f6/e61d4b8f.jpg","nickname":"许式伟-七牛云(已满)","note":"","ucode":"1A2F8AA6F6DB54","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":459209,"discussion_content":"我文章中有说。view层不想知道model层数据结构细节的话，最简单的方法就是把onpaint事件委托给model层。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1563697271,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":115114,"user_name":"Linuxer","can_delete":false,"product_type":"c1","uid":1153978,"ip_address":"","ucode":"272D9D8089C3D6","user_header":"https://static001.geekbang.org/account/avatar/00/11/9b/ba/333b59e5.jpg","comment_is_top":false,"comment_ctime":1563497509,"is_pvip":false,"replies":[{"id":"42080","content":"实现了","user_name":"作者回复","user_name_real":"许式伟-七牛云(已满)","uid":"1228022","ctime":1563514150,"ip_address":"","comment_id":115114,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1563497509","product_id":100025201,"comment_content":"QPath 这些是不是要实现interface Shape ？","like_count":0,"discussions":[{"author":{"id":1228022,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bc/f6/e61d4b8f.jpg","nickname":"许式伟-七牛云(已满)","note":"","ucode":"1A2F8AA6F6DB54","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":458973,"discussion_content":"实现了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1563514150,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]}]}