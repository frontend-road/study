{"id":88546,"title":"45 | HTTP服务","content":"<h1>课件及源代码地址</h1><p><a href=\"https://gitee.com/geektime-geekbang/go_learning\">https://gitee.com/geektime-geekbang/go_learning</a></p><h2>书目推荐</h2><p><a href=\"time://mall?url=https%3A%2F%2Fh5.youzan.com%2Fv2%2Fgoods%2F1ycmk3uob0ryw\">《计算机程序的构造和解释》</a></p>","comments":[{"had_liked":false,"id":241153,"user_name":"卜凌峰","can_delete":false,"product_type":"c3","uid":2091390,"ip_address":"","ucode":"849C3C3ED367E8","user_header":"https://static001.geekbang.org/account/avatar/00/1f/e9/7e/5d02769c.jpg","comment_is_top":false,"comment_ctime":1597203797,"is_pvip":false,"replies":[{"id":89437,"content":"应该是你浏览器的问题吧。\n你采用命令行调用如下：\ncurl 127.0.0.1:8080\ncurl 127.0.0.1:8080&#47;\n结果都是一样的，只显示一次“hello world”","user_name":"作者回复","user_name_real":"ChaoCai2010","uid":1008262,"ctime":1597670155,"ip_address":"","comment_id":241153,"utype":1}],"discussion_count":2,"race_medal":0,"score":2,"product_id":100024001,"comment_content":"package main\n\nimport (\n\t&quot;fmt&quot;\n\t&quot;net&#47;http&quot;\n)\n\nfunc main()  {\n\thttp.HandleFunc(&quot;&#47;&quot;, func(rw http.ResponseWriter,r *http.Request) {\n\t\tfmt.Println(&quot;hello world&quot;)\n\t})\n\n\thttp.HandleFunc(&quot;&#47;hello&quot;, func(rw http.ResponseWriter,r *http.Request) {\n\t\tstr:=&quot;hello word&quot;\n\t\trw.Write([]byte(str))\n\t})\n\n\thttp.ListenAndServe(&quot;:8080&quot;,nil)\n}\n\n调用127.0.0.1:8080 会打印两次Hello world。\n调用127.0.0.1:8080&#47;hello则只会打印一次hello world。这个是什么策略呢 老师","like_count":0,"discussions":[{"author":{"id":1008262,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/62/86/632ad029.jpg","nickname":"蔡超","note":"","ucode":"4C281BBF511238","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":503659,"discussion_content":"应该是你浏览器的问题吧。\n你采用命令行调用如下：\ncurl 127.0.0.1:8080\ncurl 127.0.0.1:8080/\n结果都是一样的，只显示一次“hello world”","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1597670155,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1020525,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/92/6d/becd841a.jpg","nickname":"escray","note":"","ucode":"1F4204930E47C4","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":367112,"discussion_content":"我复现了一下你说的这个问题，你说的打印应该是在命令控制台上的打印，\n\n访问 127.0.0.1:8080 会打印两次；\n访问其他任何有路由的地址，都会打印一次；\n访问没有路由的空地址，打印一次\n……\n\n如果是使用 curl 127.0.0.1:8080，应该是没有回显\n\n你在 HandleFunc 里面写的是\n\nfmt.Println(&#34;hello world&#34;)\n\n而不是\n\nfmt.FPrintf(w, &#34;hello&#34;)\n\n应该还是 http.HandleFunc(&#34;/&#34;, func(...)) 来处理的请求，但是为什么打印两次我也不太清楚，应该和浏览器的运行机制有关。\n\n我的是 chrome 浏览器，go version go1.16.2 darwin/amd64\n\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1618274075,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":104085,"user_name":"春春家的雷雷","can_delete":false,"product_type":"c3","uid":1453138,"ip_address":"","ucode":"267A4726E5F95F","user_header":"","comment_is_top":false,"comment_ctime":1560643582,"is_pvip":false,"replies":[{"id":37650,"content":"哈哈，你的感觉没错","user_name":"作者回复","user_name_real":"ChaoCai2010","uid":1008262,"ctime":1560647632,"ip_address":"","comment_id":104085,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100024001,"comment_content":"超哥，感觉这节课刚开始很紧张呢😁","like_count":0,"discussions":[{"author":{"id":1008262,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/62/86/632ad029.jpg","nickname":"蔡超","note":"","ucode":"4C281BBF511238","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":454119,"discussion_content":"哈哈，你的感觉没错","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1560647632,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":85400,"user_name":"我爱北京天安门","can_delete":false,"product_type":"c3","uid":1201215,"ip_address":"","ucode":"1B36604F96EF89","user_header":"https://static001.geekbang.org/account/avatar/00/12/54/3f/46c3060a.jpg","comment_is_top":false,"comment_ctime":1555053250,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":2,"product_id":100024001,"comment_content":"落后了终于追上了 可以松口气了。0分06秒老师咽口水的声音 。。。萌萌的","like_count":12},{"had_liked":false,"id":86612,"user_name":"芝士老爹","can_delete":false,"product_type":"c3","uid":1071316,"ip_address":"","ucode":"5F2935967574D0","user_header":"https://static001.geekbang.org/account/avatar/00/10/58/d4/c52f9f6d.jpg","comment_is_top":false,"comment_ctime":1555411761,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":2,"product_id":100024001,"comment_content":"呃，测试的时候，注意浏览器缓存，别因为缓存影响结果。\n唉，不说了，都是泪。","like_count":2},{"had_liked":false,"id":138491,"user_name":"确认过眼神","can_delete":false,"product_type":"c3","uid":1245530,"ip_address":"","ucode":"E6D73A9D27A279","user_header":"https://static001.geekbang.org/account/avatar/00/13/01/5a/f7c989e4.jpg","comment_is_top":false,"comment_ctime":1570277598,"is_pvip":false,"replies":null,"discussion_count":1,"race_medal":0,"score":2,"product_id":100024001,"comment_content":"比如&#47;images会匹配...images后面是不是应该有个&#47;，对吧？","like_count":1,"discussions":[{"author":{"id":1251111,"avatar":"https://static001.geekbang.org/account/avatar/00/13/17/27/ec30d30a.jpg","nickname":"Jxin","note":"","ucode":"4C03928388C413","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":245764,"discussion_content":"我也觉得","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1587698230,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":288014,"user_name":"escray","can_delete":false,"product_type":"c3","uid":1020525,"ip_address":"","ucode":"1F4204930E47C4","user_header":"https://static001.geekbang.org/account/avatar/00/0f/92/6d/becd841a.jpg","comment_is_top":false,"comment_ctime":1618274734,"is_pvip":true,"replies":null,"discussion_count":0,"race_medal":0,"score":2,"product_id":100024001,"comment_content":"抄了一遍代码，比较怀念 Rails 里面相对简单的 Router 机制，不知道 Go 语言是否有类似的框架。即使没有，估计很快也会有人写出来一个的。\n\n有一个同学提问 \n\n```\nhttp.HandleFunc(&quot;&#47;&quot;, func(rw http.ResponseWriter,r *http.Request) {\n  fmt.Println(&quot;hello world&quot;)\n})\n```\n\n为什么访问的时候会在命令控制台上打印两次？我也不是特别清楚，但应该是和浏览器的访问机制有关。\n\n访问 127.0.0.1:8080 会打印两次；\n访问其他任何有路由的地址，都会打印一次；\n访问没有路由的空地址，打印一次\n\n按照路由规则，定义了根目录的 &quot;&#47;&quot; 之后，似乎是可以匹配任何路径的，在一定程度上部分解释了上面的问题，访问任何地址，都至少打印一次。\n\n另外，浏览器会屏蔽掉一些细节，比如 404 访问，一般会以空白页展示，可以考虑采用 \n\n```\ncurl -i  127.0.0:8080\n```\n\n来查看详细的 Response 头。","like_count":0},{"had_liked":false,"id":288012,"user_name":"escray","can_delete":false,"product_type":"c3","uid":1020525,"ip_address":"","ucode":"1F4204930E47C4","user_header":"https://static001.geekbang.org/account/avatar/00/0f/92/6d/becd841a.jpg","comment_is_top":false,"comment_ctime":1618274702,"is_pvip":true,"replies":null,"discussion_count":1,"race_medal":0,"score":2,"product_id":100024001,"comment_content":"抄了一遍代码，比较怀念 Rails 里面相对简单的 Router 机制，不知道 Go 语言是否有类似的框架。即使没有，估计很快也会有人写出来一个的。\n\n有一个同学提问 \n\n```\nhttp.HandleFunc(&quot;&#47;&quot;, func(rw http.ResponseWriter,r *http.Request) {\n  fmt.Println(&quot;hello world&quot;)\n})\n```\n\n为什么访问的时候会在命令控制台上打印两次？我也不是特别清楚，但应该是和浏览器的访问机制有关。\n\n访问 127.0.0.1:8080 会打印两次；\n访问其他任何有路由的地址，都会打印一次；\n访问没有路由的空地址，打印一次\n\n按照路由规则，定义了根目录的 &quot;&#47;&quot; 之后，似乎是可以匹配任何路径的，在一定程度上部分解释了上面的问题，访问任何地址，都至少打印一次。\n\n另外，浏览器会屏蔽掉一些细节，比如 404 访问，一般会以空白页展示，可以考虑采用 \n\n```\ncurl -i  127.0.0:8080\n```\n\n来查看详细的 Response 头。","like_count":0,"discussions":[{"author":{"id":1744250,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/9d/7a/36e56d8d.jpg","nickname":"目光之诚","note":"","ucode":"60EAEB93EC6858","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":545805,"discussion_content":"比如Chrome会发起两个请求，一个我们输入的地址，还有一个请求/favicon.ico。你可以用F12看看浏览器的请求。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1642054510,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":236821,"user_name":"郭星","can_delete":false,"product_type":"c3","uid":1182219,"ip_address":"","ucode":"8A0F5DF80E0C61","user_header":"https://static001.geekbang.org/account/avatar/00/12/0a/0b/985d3800.jpg","comment_is_top":false,"comment_ctime":1595557717,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":2,"product_id":100024001,"comment_content":"&quot;以&#47; 结尾的 URL 可以匹配它的任何⼦路径，⽐如 &#47;images 会匹配 &#47;images&#47;cute-cat.jpg&quot;  这句话我没有理解\n\thttp.HandleFunc(&quot;&#47;sub&#47;&quot;, func(writer http.ResponseWriter, request *http.Request) {\n\t\tfmt.Fprint(writer,&quot;  leafTree sub&quot;)\n\t})\n\n\thttp.HandleFunc(&quot;&#47;sub&#47;node&quot;, func(writer http.ResponseWriter, request *http.Request) {\n\t\tfmt.Fprint(writer,&quot;  leafNode sub&quot;)\n\t})\n当我访问 &#47;sub 时实际访问到的是 &#47;sub&#47;,并没有访问 &#47;sub&#47;node","like_count":0}]}