{"id":149899,"title":"12 | 缓存：数据库成为瓶颈后，动态数据的查询要如何加速？","content":"<p>你好，我是唐扬。</p><p>通过前面数据库篇的学习，你已经了解了在高并发大流量下，数据库层的演进过程以及库表设计上的考虑点。你的垂直电商系统在完成了对数据库的主从分离和分库分表之后，已经可以支撑十几万DAU了，整体系统的架构也变成了下面这样：</p><p><img src=\"https://static001.geekbang.org/resource/image/c1/20/c14a816c828434fe1695220b7abdbc20.jpg?wh=1142*465\" alt=\"\"></p><p>从整体上看，数据库分成了主库和从库，数据也被切分到多个数据库节点上。但随着并发的增加，存储数据量的增多，数据库的磁盘IO逐渐成了系统的瓶颈，我们需要一种访问更快的组件来降低请求响应时间，提升整体系统性能。这时我们就会使用缓存。<strong>那么什么是缓存，我们又该如何将它的优势最大化呢？</strong></p><p><strong>本节课是缓存篇的总纲，</strong>我将从缓存定义、缓存分类和缓存优势劣势三个方面全方位带你掌握缓存的设计思想和理念，再用剩下4节课的时间，带你针对性地掌握使用缓存的正确姿势，以便让你在实际工作中能够更好地使用缓存提升整体系统的性能。</p><p>接下来，让我们进入今天的课程吧！</p><h2>什么是缓存</h2><p>缓存，是一种存储数据的组件，它的作用是让对数据的请求更快地返回。</p><p>我们经常会把缓存放在内存中来存储， 所以有人就把内存和缓存画上了等号，这完全是外行人的见解。作为业内人士，你要知道在某些场景下我们可能还会使用SSD作为冷数据的缓存。比如说360开源的Pika就是使用SSD存储数据解决Redis的容量瓶颈的。</p><!-- [[[read_end]]] --><p>实际上，凡是位于速度相差较大的两种硬件之间，用于协调两者数据传输速度差异的结构，均可称之为缓存。那么说到这儿我们就需要知道常见硬件组件的延时情况是什么样的了，这样在做方案的时候可以对延迟有更直观的印象。幸运的是，业内已经有人帮我们总结出这些数据了，我将这些数据整理了一下，你可以看一下。</p><p><img src=\"https://static001.geekbang.org/resource/image/01/ad/0134f4cd9e0d6e8d57ebe35eb28c32ad.jpg?wh=1142*853\" alt=\"\"></p><p>从这些数据中，你可以看到，做一次内存寻址大概需要100ns，而做一次磁盘的查找则需要10ms。如果我们将做一次内存寻址的时间类比为一个课间，那么做一次磁盘查找相当于度过了大学的一个学期。可见，我们使用内存作为缓存的存储介质相比于以磁盘作为主要存储介质的数据库来说，性能上会提高多个数量级，同时也能够支撑更高的并发量。所以，内存是最常见的一种缓存数据的介质。</p><p>缓存作为一种常见的空间换时间的性能优化手段，在很多地方都有应用，我们先来看几个例子，相信你一定不会陌生。</p><h3>1.缓存案例</h3><p>Linux内存管理是通过一个叫做MMU（Memory Management Unit）的硬件，来实现从虚拟地址到物理地址的转换的，但是如果每次转换都要做这么复杂计算的话，无疑会造成性能的损耗，所以我们会借助一个叫做TLB（Translation Lookaside Buffer）的组件来缓存最近转换过的虚拟地址，和物理地址的映射。TLB就是一种缓存组件，缓存复杂运算的结果，就好比你做一碗色香味俱全的面条可能比较复杂，那么我们把做好的面条油炸处理一下做成方便面，你做方便面的话就简单多了，也快速多了。这个缓存组件比较底层，这里你只需要了解一下就可以了。</p><p>在大部分的笔记本，桌面电脑和服务器上都会有一个或者多个TLB组件，在不经意间帮助我们加快地址转换的速度。</p><p><strong>再想一下你平时经常刷的抖音。</strong>平台上的短视频实际上是使用内置的网络播放器来完成的。网络播放器接收的是数据流，将数据下载下来之后经过分离音视频流，解码等流程后输出到外设设备上播放。</p><p>如果我们在打开一个视频的时候才开始下载数据的话，无疑会增加视频的打开速度（我们叫首播时间），并且播放过程中会有卡顿。所以我们的播放器中通常会设计一些缓存的组件，在未打开视频时缓存一部分视频数据，比如我们打开抖音，服务端可能一次会返回三个视频信息，我们在播放第一个视频的时候，播放器已经帮我们缓存了第二、三个视频的部分数据，这样在看第二个视频的时候就可以给用户“秒开”的感觉。</p><p><strong>除此之外，我们熟知的HTTP协议也是有缓存机制的。</strong>当我们第一次请求静态的资源时，比如一张图片，服务端除了返回图片信息，在响应头里面还有一个“Etag”的字段。浏览器会缓存图片信息以及这个字段的值。当下一次再请求这个图片的时候，浏览器发起的请求头里面会有一个“If-None-Match”的字段，并且把缓存的“Etag”的值写进去发给服务端。服务端比对图片信息是否有变化，如果没有，则返回浏览器一个304的状态码，浏览器会继续使用缓存的图片信息。通过这种缓存协商的方式，可以减少网络传输的数据大小，从而提升页面展示的性能。</p><p><img src=\"https://static001.geekbang.org/resource/image/7a/81/7a2344bd27535936b4ad4d8519d9fd81.jpg?wh=1142*637\" alt=\"\"></p><h3>2.缓存与缓冲区</h3><p>讲了这么多缓存案例，想必你对缓存已经有了一个直观并且形象的了解了。除了缓存，我们在日常开发过程中还会经常听见一个相似的名词——缓冲区，那么，什么是缓冲区呢？缓冲和缓存只有一字之差，它们有什么区别呢？</p><p>我们知道，缓存可以提高低速设备的访问速度，或者减少复杂耗时的计算带来的性能问题。理论上说，我们可以通过缓存解决所有关于“慢”的问题，比如从磁盘随机读取数据慢，从数据库查询数据慢，只是不同的场景消耗的存储成本不同。</p><p><strong>缓冲区则是一块临时存储数据的区域，这些数据后面会被传输到其他设备上。</strong>缓冲区更像“消息队列篇”中即将提到的消息队列，用以弥补高速设备和低速设备通信时的速度差。比如，我们将数据写入磁盘时并不是直接刷盘，而是写到一块缓冲区里面，内核会标识这个缓冲区为脏。当经过一定时间或者脏缓冲区比例到达一定阈值时，由单独的线程把脏块刷新到硬盘上。这样避免了每次写数据都要刷盘带来的性能问题。</p><p><img src=\"https://static001.geekbang.org/resource/image/09/d1/09d6e75a62e5cb5b72d45337ca206ad1.jpg?wh=1142*827\" alt=\"\"></p><p>以上就是缓冲区和缓存的区别，从这个区别来看，上面提到的TLB的命名是有问题的，它应该是缓存而不是缓冲区。</p><p>现在你已经了解了缓存的含义，那么我们经常使用的缓存都有哪些？我们又该如何使用缓存，将它的优势最大化呢？</p><h2>缓存分类</h2><p>在我们日常开发中，常见的缓存主要就是<strong>静态缓存、分布式缓存和热点本地缓存</strong>这三种。</p><p>静态缓存在Web 1.0时期是非常著名的，它一般通过生成Velocity模板或者静态HTML文件来实现静态缓存，在Nginx上部署静态缓存可以减少对于后台应用服务器的压力。例如，我们在做一些内容管理系统的时候，后台会录入很多的文章，前台在网站上展示文章内容，就像新浪，网易这种门户网站一样。</p><p>当然，我们也可以把文章录入到数据库里面，然后前端展示的时候穿透查询数据库来获取数据，但是这样会对数据库造成很大的压力。虽然我们使用分布式缓存来挡读请求，但是对于像日均PV几十亿的大型门户网站来说，基于成本考虑仍然是不划算的。</p><p><strong>所以我们的解决思路是</strong>每篇文章在录入的时候渲染成静态页面，放置在所有的前端Nginx或者Squid等Web服务器上，这样用户在访问的时候会优先访问Web服务器上的静态页面，在对旧的文章执行一定的清理策略后，依然可以保证99%以上的缓存命中率。</p><p>这种缓存只能针对静态数据来缓存，对于动态请求就无能为力了。那么我们如何针对动态请求做缓存呢？<strong>这时你就需要分布式缓存了。</strong></p><p>分布式缓存的大名可谓是如雷贯耳了，我们平时耳熟能详的Memcached、Redis就是分布式缓存的典型例子。它们性能强劲，通过一些分布式的方案组成集群可以突破单机的限制。所以在整体架构中，分布式缓存承担着非常重要的角色（接下来的课程我会专门针对分布式缓存，带你了解分布式缓存的使用技巧以及高可用的方案，让你能在工作中对分布式缓存运用自如）。</p><p>对于静态的资源的缓存你可以选择静态缓存，对于动态的请求你可以选择分布式缓存，<strong>那么什么时候要考虑热点本地缓存呢？</strong></p><p><strong>答案是当我们遇到极端的热点数据查询的时候。</strong>热点本地缓存主要部署在应用服务器的代码中，用于阻挡热点查询对于分布式缓存节点或者数据库的压力。</p><p>比如某一位明星在微博上有了热点话题，“吃瓜群众”会到他(她)的微博首页围观，这就会引发这个用户信息的热点查询。这些查询通常会命中某一个缓存节点或者某一个数据库分区，短时间内会形成极高的热点查询。</p><p>那么我们会在代码中使用一些本地缓存方案，如HashMap，Guava Cache或者是Ehcache等，它们和应用程序部署在同一个进程中，优势是不需要跨网络调度，速度极快，所以可以用来阻挡短时间内的热点查询。<strong>来看个例子。</strong></p><p><strong>比方说</strong>你的垂直电商系统的首页有一些推荐的商品，这些商品信息是由编辑在后台录入和变更。你分析编辑录入新的商品或者变更某个商品的信息后，在页面的展示是允许有一些延迟的，比如说30秒的延迟，并且首页请求量最大，即使使用分布式缓存也很难抗住，所以你决定使用Guava Cache来将所有的推荐商品的信息缓存起来，并且设置每隔30秒重新从数据库中加载最新的所有商品。</p><p>首先，我们初始化Guava 的Loading Cache：</p><pre><code>CacheBuilder&lt;String, List&lt;Product&gt;&gt; cacheBuilder = CacheBuilder.newBuilder().maximumSize(maxSize).recordStats(); //设置缓存最大值\ncacheBuilder = cacheBuilder.refreshAfterWrite(30, TimeUnit.Seconds); //设置刷新间隔\n\nLoadingCache&lt;String, List&lt;Product&gt;&gt; cache = cacheBuilder.build(new CacheLoader&lt;String, List&lt;Product&gt;&gt;() {\n    @Override\n    public List&lt;Product&gt; load(String k) throws Exception {\n        return productService.loadAll(); // 获取所有商品\n    }\n});\n</code></pre><p>这样，你在获取所有商品信息的时候可以调用Loading Cache的get方法，就可以优先从本地缓存中获取商品信息，如果本地缓存不存在，会使用CacheLoader中的逻辑从数据库中加载所有的商品。</p><p>由于本地缓存是部署在应用服务器中，而我们应用服务器通常会部署多台，当数据更新时，我们不能确定哪台服务器本地中了缓存，更新或者删除所有服务器的缓存不是一个好的选择，所以我们通常会等待缓存过期。因此，这种缓存的有效期很短，通常为分钟或者秒级别，以避免返回前端脏数据。</p><h2>缓存的不足</h2><p>通过了解上面的内容，你不难发现，缓存的主要作用是提升访问速度，从而能够抗住更高的并发。那么，缓存是不是能够解决一切问题？显然不是。事物都是具有两面性的，缓存也不例外，我们要了解它的优势的同时也需要了解它有哪些不足，从而扬长避短，将它的作用发挥到最大。</p><p><strong>首先，缓存比较适合于读多写少的业务场景，并且数据最好带有一定的热点属性。</strong>这是因为缓存毕竟会受限于存储介质不可能缓存所有数据，那么当数据有热点属性的时候才能保证一定的缓存命中率。比如说类似微博、朋友圈这种20%的内容会占到80%的流量。所以，一旦当业务场景读少写多时或者没有明显热点时，比如在搜索的场景下，每个人搜索的词都会不同，没有明显的热点，那么这时缓存的作用就不明显了。</p><p><strong>其次，缓存会给整体系统带来复杂度，并且会有数据不一致的风险。</strong>当更新数据库成功，更新缓存失败的场景下，缓存中就会存在脏数据。对于这种场景，我们可以考虑使用较短的过期时间或者手动清理的方式来解决。</p><p><strong>再次，之前提到缓存通常使用内存作为存储介质，但是内存并不是无限的。</strong>因此，我们在使用缓存的时候要做数据存储量级的评估，对于可预见的需要消耗极大存储成本的数据，要慎用缓存方案。同时，缓存一定要设置过期时间，这样可以保证缓存中的会是热点数据。</p><p><strong>最后，缓存会给运维也带来一定的成本，</strong>运维需要对缓存组件有一定的了解，在排查问题的时候也多了一个组件需要考虑在内。</p><p>虽然有这么多的不足，但是缓存对于性能的提升是毋庸置疑的，我们在做架构设计的时候也需要把它考虑在内，只是在做具体方案的时候需要对缓存的设计有更细致的思考，才能最大化地发挥缓存的优势。</p><h2>课程小结</h2><p>这节课我带你了解了缓存的定义，常见缓存的分类以及缓存的不足。我想跟你强调的重点有以下几点：</p><ul>\n<li>\n<p>缓存可以有多层，比如上面提到的静态缓存处在负载均衡层，分布式缓存处在应用层和数据库层之间，本地缓存处在应用层。我们需要将请求尽量挡在上层，因为越往下层，对于并发的承受能力越差；</p>\n</li>\n<li>\n<p>缓存命中率是我们对于缓存最重要的一个监控项，越是热点的数据，缓存的命中率就越高。</p>\n</li>\n</ul><p>你还需要理解的是，缓存不仅仅是一种组件的名字，更是一种设计思想，你可以认为任何能够加速读请求的组件和设计方案都是缓存思想的体现。而这种加速通常是通过两种方式来实现：</p><ul>\n<li>\n<p>使用更快的介质，比方说课程中提到的内存；</p>\n</li>\n<li>\n<p>缓存复杂运算的结果，比方说前面TLB的例子就是缓存地址转换的结果。</p>\n</li>\n</ul><p>那么，当你在实际工作中碰到“慢”的问题时，缓存就是你第一时间需要考虑的。</p><h2>一课一思</h2><p>这节课讲了这么多缓存的例子，你在日常工作中看到了哪些使用了缓存思想的设计呢？欢迎在留言区留言与我一起讨论。</p><p>最后，感谢你的阅读，如果这篇文章让你有所收获，也欢迎你将它分享给更多的朋友。</p>","neighbors":{"left":{"article_title":"11 |   NoSQL：在高并发场景下，数据库和NoSQL如何做到互补？","id":147946},"right":{"article_title":"13 | 缓存的使用姿势（一）：如何选择缓存的读写策略？","id":150881}},"comments":[{"had_liked":false,"id":156298,"user_name":"被过去推开","can_delete":false,"product_type":"c1","uid":1276690,"ip_address":"","ucode":"8B4F34FE93FD5B","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Cib5umA0W17N9pichI08pnrXAExdbyh7AVzH4nEhD6KN3FXuELk4LJJuqUPPD7xmIy9nq5Hjbgnzic7sVZG5BKiaUQ/132","comment_is_top":false,"comment_ctime":1574852180,"is_pvip":false,"replies":[{"id":"60233","content":"谢谢~<br>","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1575015178,"ip_address":"","comment_id":156298,"utype":1}],"discussion_count":2,"race_medal":0,"score":"156193674836","product_id":100035801,"comment_content":"方便面那个比喻好评。缓存和缓冲区对应的英语是cache和buffer，buffer的存在是为了解决数据不能一次性读写完成或某次的数据量太小，io成本又太高的折中方案","like_count":37,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":476061,"discussion_content":"谢谢~\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1575015178,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1117992,"avatar":"https://static001.geekbang.org/account/avatar/00/11/0f/28/db077434.jpg","nickname":"杜do度","note":"","ucode":"0DB1E264D839F5","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":126572,"discussion_content":"这个解释好","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578530246,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":165554,"user_name":"咻的一下","can_delete":false,"product_type":"c1","uid":1246470,"ip_address":"","ucode":"172E8D30312470","user_header":"https://static001.geekbang.org/account/avatar/00/13/05/06/256413ad.jpg","comment_is_top":false,"comment_ctime":1577259544,"is_pvip":false,"replies":[{"id":"63156","content":"redis支持geohash，应该可以解决这个问题","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1577276487,"ip_address":"","comment_id":165554,"utype":1}],"discussion_count":5,"race_medal":0,"score":"100361507352","product_id":100035801,"comment_content":"涉及到排序分页的动态数据有没有什么好的缓存解决办法呢，比如外卖店铺首页，根据用户的配送距离进行排序分页显示，难道每个用户都缓存一份数据么，感觉缓存是不是不适用于这种场景","like_count":24,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":479202,"discussion_content":"redis支持geohash，应该可以解决这个问题","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577276487,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1066508,"avatar":"https://static001.geekbang.org/account/avatar/00/10/46/0c/773ba2f3.jpg","nickname":"下个目标45k","note":"","ucode":"193BA8C3AA9A61","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":330859,"discussion_content":"缓存key的生成策略需要带上接口的查询参数","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1606723383,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1297630,"avatar":"https://static001.geekbang.org/account/avatar/00/13/cc/de/e28c01e1.jpg","nickname":"剑八","note":"","ucode":"0A09F41DB8A4E7","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":559582,"discussion_content":"搜索","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1648823442,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1162113,"avatar":"https://static001.geekbang.org/account/avatar/00/11/bb/81/8260cbf6.jpg","nickname":"Geek_bbe25a","note":"","ucode":"A50329BE030715","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":298579,"discussion_content":"我也遇到这个问题，不知道怎么解决","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1597331001,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1202325,"avatar":"https://static001.geekbang.org/account/avatar/00/12/58/95/640b6465.jpg","nickname":"fmouse","note":"","ucode":"9A8858CFFAB858","race_medal":2,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":216940,"discussion_content":"redis geohash，这就去看下，谢谢老师","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585492894,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":141252,"user_name":"高志强","can_delete":false,"product_type":"c1","uid":1276563,"ip_address":"","ucode":"68737002043752","user_header":"https://static001.geekbang.org/account/avatar/00/13/7a/93/c9302518.jpg","comment_is_top":false,"comment_ctime":1571132220,"is_pvip":false,"replies":[{"id":"54643","content":"1.guava cache本身没有限制，注意看存大量是否对gc有影响<br>2. 股票的话，应该有分布式缓存，但是这个缓存更新频率高，需要用队列削峰填谷","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1571184425,"ip_address":"","comment_id":141252,"utype":1}],"discussion_count":9,"race_medal":0,"score":"83175510844","product_id":100035801,"comment_content":"老师，热点本地缓存使用组件 Guava Cache ，这个东西能存多大量呢，感觉像一个数据库，还有个问题一直困扰我，像股票之类的app页面数据时时刷新，这个是怎么做到的，是否用了缓存如何使用的缓存呢，希望老师能给解答，谢谢~","like_count":20,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":470702,"discussion_content":"1.guava cache本身没有限制，注意看存大量是否对gc有影响\n2. 股票的话，应该有分布式缓存，但是这个缓存更新频率高，需要用队列削峰填谷","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571184425,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1690913,"avatar":"","nickname":"菜鸟","note":"","ucode":"46F58768896D77","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":348976,"discussion_content":"换Caffeine cache试试，异步加载更平滑。guava触发重加载有一个主线程会等数据，caffeine全部都返回老值。淘汰机制也有优化，springboot2已经把guava替代了","likes_number":6,"is_delete":false,"is_hidden":false,"ctime":1612832637,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1165364,"avatar":"https://static001.geekbang.org/account/avatar/00/11/c8/34/fb871b2c.jpg","nickname":"海罗沃德","note":"","ucode":"8704F1D6980FA0","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":43369,"discussion_content":"股票APP如果是真“实时刷新”的，很可能用的不是http，而是使用websocket或者直接用原生安卓或者iOS的socket开长连接来实现实时数据，这是我的理解，希望对你有帮助","likes_number":5,"is_delete":false,"is_hidden":false,"ctime":1572870503,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1276563,"avatar":"https://static001.geekbang.org/account/avatar/00/13/7a/93/c9302518.jpg","nickname":"高志强","note":"","ucode":"68737002043752","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1165364,"avatar":"https://static001.geekbang.org/account/avatar/00/11/c8/34/fb871b2c.jpg","nickname":"海罗沃德","note":"","ucode":"8704F1D6980FA0","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":45090,"discussion_content":"好的，谢谢哈","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573003339,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":43369,"ip_address":""},"score":45090,"extra":""}]},{"author":{"id":1203520,"avatar":"https://static001.geekbang.org/account/avatar/00/12/5d/40/b8831a52.jpg","nickname":"EvanChen","note":"","ucode":"CEA223FEB2CADC","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":400542,"discussion_content":"股票，存储应该是用的时序数据库","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1633315871,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2756576,"avatar":"https://static001.geekbang.org/account/avatar/00/2a/0f/e0/b53a7701.jpg","nickname":"骑车上天空","note":"","ucode":"364365E2721122","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":582478,"discussion_content":"mark","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1659441945,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"广东"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2065035,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/82/8b/74996124.jpg","nickname":"Suarge","note":"","ucode":"89F0B968E472ED","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":324284,"discussion_content":"mark","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1605086014,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1074640,"avatar":"https://static001.geekbang.org/account/avatar/00/10/65/d0/c11d4a31.jpg","nickname":"滴水藏海","note":"","ucode":"9C1F9C91189F69","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":235524,"discussion_content":"mark","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1587043561,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1154101,"avatar":"https://static001.geekbang.org/account/avatar/00/11/9c/35/9dc79371.jpg","nickname":"你好旅行者","note":"","ucode":"5C72A428DC28F3","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":34030,"discussion_content":"关注一下你这个问题","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571153607,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":153101,"user_name":"fomy","can_delete":false,"product_type":"c1","uid":1125834,"ip_address":"","ucode":"CD87EA03B1F327","user_header":"https://static001.geekbang.org/account/avatar/00/11/2d/ca/02b0e397.jpg","comment_is_top":false,"comment_ctime":1574157862,"is_pvip":false,"replies":[{"id":"59020","content":"guava cache可以打印统计信息的","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1574294501,"ip_address":"","comment_id":153101,"utype":1}],"discussion_count":1,"race_medal":0,"score":"57408732710","product_id":100035801,"comment_content":"感谢老师的分享，让我知道了Java中可以使用Guava cache和Ehcache实现缓存过期的，也是对HashMap的一种补充吧。<br>有个问题问一下：缓存的命中率一般怎么统计的？有什么开源工具或者框架吗？","like_count":14,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":475043,"discussion_content":"guava cache可以打印统计信息的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574294501,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":208753,"user_name":"钱","can_delete":false,"product_type":"c1","uid":1009652,"ip_address":"","ucode":"2C92A243A463D4","user_header":"https://static001.geekbang.org/account/avatar/00/0f/67/f4/9a1feb59.jpg","comment_is_top":false,"comment_ctime":1587432512,"is_pvip":false,"replies":[{"id":"78061","content":"是的，缓存使用简单，但是深入难","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1587456653,"ip_address":"","comment_id":208753,"utype":1}],"discussion_count":2,"race_medal":0,"score":"44537105472","product_id":100035801,"comment_content":"浅显易懂，缓存目前是标配之一（互联网开发三剑客：RPC&#47;MQ&#47;REDIS），凡是需要提速的地方，也许缓存就能排上用场，至少缓存的思想必然会被用上。<br>好处：服务提速<br>坏处：数据不一致风险，引入复杂度。<br>原则，简单优先，能不用就不用，实在不行就需要好好考虑一凡了，缓存穿透怎么解决？缓存击穿怎么解决？缓存雪崩怎么解决？数据不一致性问题怎么解决？数据结构众多怎么选择合适的数据结构？缓存的key：value怎么设计？缓存怎么加载？过期时间怎么设置？补偿机制怎么设计？缓存具体选择什么方案？需不需要多层缓存？多层缓存的复杂度怎么控制？<br>希望，后面有提及这些，不过这些对于面试用处不大，面试会问各种底层结构？以及怎么优化的？怎么选择某种数据结构的？所有的一切，都是为了高性能而存在。","like_count":11,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":492607,"discussion_content":"是的，缓存使用简单，但是深入难","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1587456653,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1255277,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLDVXsv6JOOficLK07867AkAb21eoG5KBgYFmwhMXKJooU5B6iaIZwyDxExicokVQSiaKEwZ4qPicqVFcg/132","nickname":"拼yin世界","note":"","ucode":"9571428A12B72A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":406001,"discussion_content":"感觉，东西真的很深啊","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1634690690,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":142186,"user_name":"👽","can_delete":false,"product_type":"c1","uid":1274117,"ip_address":"","ucode":"D313AF941B412D","user_header":"https://static001.geekbang.org/account/avatar/00/13/71/05/db554eba.jpg","comment_is_top":false,"comment_ctime":1571306054,"is_pvip":false,"replies":[{"id":"54901","content":"是的","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1571360081,"ip_address":"","comment_id":142186,"utype":1}],"discussion_count":1,"race_medal":0,"score":"31636077126","product_id":100035801,"comment_content":"没有达到需要引用缓存需要的情况下，尽量不要过早使用缓存。<br>缓存的坑很多，并且维护成本极高。在处理缓存的适合需要多考虑很多问题。<br>曾经碰到这样的情况：<br>调用别人写的查询服务，但是查找到的数据却迟迟无法更新为最新数据。最后，重新写了直接查库的接口，才解决问题。<br>并且，缓存如果频繁更新，频繁失效 反而会带来性能的消耗。<br><br>再带上杨晓峰老师的一句话：“过早的优化是万恶之源&quot;","like_count":7,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":471024,"discussion_content":"是的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571360081,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":196544,"user_name":"lofaith","can_delete":false,"product_type":"c1","uid":1322553,"ip_address":"","ucode":"5DF6922BBF1AD5","user_header":"https://static001.geekbang.org/account/avatar/00/14/2e/39/7682b49e.jpg","comment_is_top":false,"comment_ctime":1585292439,"is_pvip":false,"replies":[{"id":"74988","content":"有做过这种keylist的存储，一般要么缓存整体，要么缓存前几页的热点数据","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1585610713,"ip_address":"","comment_id":196544,"utype":1}],"discussion_count":2,"race_medal":0,"score":"23060128919","product_id":100035801,"comment_content":"老师，热点缓存是存在本地内存之中吗，后台的列表数据有很多查询条件还有分页这种，能用缓存吗，如果能用，老师有什么好的缓存方案吗","like_count":6,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":489326,"discussion_content":"有做过这种keylist的存储，一般要么缓存整体，要么缓存前几页的热点数据","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585610713,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1033812,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/c6/54/fb1e84a3.jpg","nickname":"gushitong","note":"","ucode":"FB266646A31F4B","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":348910,"discussion_content":"keylist 是一种特殊的设计方案吗？Google 并没有查到","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1612773835,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":174934,"user_name":"尔冬橙","can_delete":false,"product_type":"c1","uid":1225224,"ip_address":"","ucode":"0B013A49BC18DA","user_header":"https://static001.geekbang.org/account/avatar/00/12/b2/08/92f42622.jpg","comment_is_top":false,"comment_ctime":1580464823,"is_pvip":false,"replies":[{"id":"68358","content":"我们认为越靠近用户的 越是上层，比如nginx在应用的上层，缓存在数据库的上层","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1580872627,"ip_address":"","comment_id":174934,"utype":1}],"discussion_count":1,"race_medal":0,"score":"23055301303","product_id":100035801,"comment_content":"老师您说的缓存挡在上层是，这里的上层下层是指？我记得网络分层应用层是最上层","like_count":5,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":482571,"discussion_content":"我们认为越靠近用户的 越是上层，比如nginx在应用的上层，缓存在数据库的上层","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1580872627,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":145203,"user_name":"helloworld","can_delete":false,"product_type":"c1","uid":1015754,"ip_address":"","ucode":"00DF2FEC58D2E6","user_header":"https://static001.geekbang.org/account/avatar/00/0f/7f/ca/ea85bfdd.jpg","comment_is_top":false,"comment_ctime":1572229483,"is_pvip":false,"replies":[{"id":"56128","content":"可以参考一下缓存的cache aside使用方式，或者保证最终一致性","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1572303141,"ip_address":"","comment_id":145203,"utype":1}],"discussion_count":4,"race_medal":0,"score":"23047065963","product_id":100035801,"comment_content":"接@饭团的疑问，当涉及到更新数据库时，如何保证数据库和缓存的一致性？通过在代码中加入逻辑判断或者是异常捕获从而确认当第一步更新成功后，再进行第二步？希望老师能给出稍微具体一点点的建议。感谢","like_count":5,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":472287,"discussion_content":"可以参考一下缓存的cache aside使用方式，或者保证最终一致性","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1572303141,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1599768,"avatar":"https://static001.geekbang.org/account/avatar/00/18/69/18/ca8a5c22.jpg","nickname":"收","note":"","ucode":"EC3338DB7AEF34","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":345514,"discussion_content":"\n在缓存和数据库并发双写入的场景中，可能会造成缓存和数据库不一致：\nA->cache\nB->cache\nB->DB\nA->DB\n\n最终DB 和 cache状态：\ncache: B\nDB: A\n\n如果不怕缓存失效瞬间被打穿，可以考虑惰性更新，简单的说：\n1. 缓存标记为脏，或者直接删除缓存。\n2. 写数据库成功，执行 4\n3. 写数据库不成功，执行结束\n4. 缓存标记为脏，或者直接删除缓存\n\n在下次读取时，发现缓存为脏或者未命中，再去数据库中查寻数据。\n为什么要两次标记？第一次标记，先保证缓存可以正常访问；第二次标记，保证并发执时，缓存更新到最后。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1611731778,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1886331,"avatar":"https://static001.geekbang.org/account/avatar/00/1c/c8/7b/153181d7.jpg","nickname":"夜辉","note":"","ucode":"9421385F51FF9E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1599768,"avatar":"https://static001.geekbang.org/account/avatar/00/18/69/18/ca8a5c22.jpg","nickname":"收","note":"","ucode":"EC3338DB7AEF34","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":364318,"discussion_content":"缓存标记为脏redis如何做到，加入一个脏数据集合？\n标记为脏的过程，发生了数据读取，会导致缓存数据更新为旧数据\n双写问题未得到解决，我对这块仍存疑","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1617442189,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":345514,"ip_address":""},"score":364318,"extra":""},{"author":{"id":1599768,"avatar":"https://static001.geekbang.org/account/avatar/00/18/69/18/ca8a5c22.jpg","nickname":"收","note":"","ucode":"EC3338DB7AEF34","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1886331,"avatar":"https://static001.geekbang.org/account/avatar/00/1c/c8/7b/153181d7.jpg","nickname":"夜辉","note":"","ucode":"9421385F51FF9E","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":542858,"discussion_content":"所以标记为脏两次，及时写入过程旧数据加载缓存，后面还会再次删除key，或者将key标记为脏","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1640865463,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":364318,"ip_address":""},"score":542858,"extra":""}]}]},{"had_liked":false,"id":140639,"user_name":"Keep-Moving","can_delete":false,"product_type":"c1","uid":1182631,"ip_address":"","ucode":"76F33C06E07A27","user_header":"https://static001.geekbang.org/account/avatar/00/12/0b/a7/6ef32187.jpg","comment_is_top":false,"comment_ctime":1571020007,"is_pvip":false,"replies":[{"id":"54397","content":"👍","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1571036972,"ip_address":"","comment_id":140639,"utype":1}],"discussion_count":1,"race_medal":0,"score":"23045856487","product_id":100035801,"comment_content":"#### 缓存的分类<br>* 静态缓存<br>* 分布式缓存<br>* 热点本地缓存<br><br>#### 缓存的不足<br>* 适用手读多写入的场景，并且数据最好有一定的热点属性<br>* 缓存会使系统更复杂，并且带来数据不一致的风险<br>* 缓存通常使用内存作为存储介质，但内存是有限的<br>* 缓存会增加运维的成本","like_count":5,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":470486,"discussion_content":"👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571036972,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":195257,"user_name":"与狼共舞","can_delete":false,"product_type":"c1","uid":1391144,"ip_address":"","ucode":"02AC04B43F0194","user_header":"https://static001.geekbang.org/account/avatar/00/15/3a/28/cf707831.jpg","comment_is_top":false,"comment_ctime":1585150608,"is_pvip":false,"replies":[{"id":"75196","content":"不一样，memcache是分布式的，guava是本地的","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1585703191,"ip_address":"","comment_id":195257,"utype":1}],"discussion_count":3,"race_medal":0,"score":"18765019792","product_id":100035801,"comment_content":"Guava cache这个我是头一次听说，这个难道比Memcache还快吗？","like_count":4,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":489010,"discussion_content":"不一样，memcache是分布式的，guava是本地的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585703191,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1009375,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/66/df/501ba989.jpg","nickname":"面试官问","note":"","ucode":"F9CE89589772F4","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":215095,"discussion_content":"Guava cache 是本地缓存，说白了就是一个 jar 包，Memcache 是分布式缓存，需要单独部署的。","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1585283627,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1391144,"avatar":"https://static001.geekbang.org/account/avatar/00/15/3a/28/cf707831.jpg","nickname":"与狼共舞","note":"","ucode":"02AC04B43F0194","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1009375,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/66/df/501ba989.jpg","nickname":"面试官问","note":"","ucode":"F9CE89589772F4","race_medal":0,"user_type":1,"is_pvip":true},"discussion":{"id":318151,"discussion_content":"谢谢指点","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1603666571,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":215095,"ip_address":""},"score":318151,"extra":""}]}]},{"had_liked":false,"id":141433,"user_name":"longslee","can_delete":false,"product_type":"c1","uid":1465986,"ip_address":"","ucode":"C24E32E5B1B6F5","user_header":"https://static001.geekbang.org/account/avatar/00/16/5e/82/438c8534.jpg","comment_is_top":false,"comment_ctime":1571152355,"is_pvip":false,"replies":[{"id":"54638","content":"其实不用监控热点数据，可以监控命中率就好了","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1571183928,"ip_address":"","comment_id":141433,"utype":1}],"discussion_count":1,"race_medal":0,"score":"18751021539","product_id":100035801,"comment_content":"打卡。老师好，请问服务在运行期的时候，如何临时向本地缓存HashMap里添加热点数据呢？如何在JVM中拿到这个HashMap的句柄？ MyBatis算不算带被动式缓存？<br>踩过的坑：缓存一定要设置TTL，55555血与泪的控诉，曾经以为自己写的清理程序可以保证，结果有bug，果断时刻发现redis内存爆炸了。","like_count":4,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":470751,"discussion_content":"其实不用监控热点数据，可以监控命中率就好了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571183928,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":140616,"user_name":"天凉好个秋","can_delete":false,"product_type":"c1","uid":1136145,"ip_address":"","ucode":"E11B5F990A4000","user_header":"https://static001.geekbang.org/account/avatar/00/11/56/11/5d113d5c.jpg","comment_is_top":false,"comment_ctime":1571016974,"is_pvip":false,"replies":[{"id":"54405","content":"就是这些组件和应用程序是在一个进程中，是在一套代码中","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1571038662,"ip_address":"","comment_id":140616,"utype":1}],"discussion_count":4,"race_medal":0,"score":"18750886158","product_id":100035801,"comment_content":"请问老师，“如 HashMap，Guava Cache 或者是。。。它们和应用程序部署在同一个进程中”，这句话不太理解，“同一个进程”指的是什么呢？如何实现的？","like_count":4,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":470471,"discussion_content":"就是这些组件和应用程序是在一个进程中，是在一套代码中","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571038662,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1184658,"avatar":"https://static001.geekbang.org/account/avatar/00/12/13/92/0b4c8e30.jpg","nickname":"飞翔","note":"","ucode":"0641211EE9DA5C","race_medal":1,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":32314,"discussion_content":"就是在java堆内存里有一块区域是存放数据缓存的，叫做本地缓存，例如mybatis的二级缓存默认实现是PerpetualCache，底层用的HashMap缓存数据，也可以自己配置ehcache作为二级缓存底层实现，他们都是在java进程内部的","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1571023829,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1136145,"avatar":"https://static001.geekbang.org/account/avatar/00/11/56/11/5d113d5c.jpg","nickname":"天凉好个秋","note":"","ucode":"E11B5F990A4000","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1184658,"avatar":"https://static001.geekbang.org/account/avatar/00/12/13/92/0b4c8e30.jpg","nickname":"飞翔","note":"","ucode":"0641211EE9DA5C","race_medal":1,"user_type":1,"is_pvip":false},"discussion":{"id":32462,"discussion_content":"谢大佬指点😁","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571039330,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":32314,"ip_address":""},"score":32462,"extra":""}]},{"author":{"id":1813857,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/ad/61/82266a1f.jpg","nickname":"李华","note":"","ucode":"4F7D333C7F126A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":159951,"discussion_content":"同一应用中，如何做到热点新闻用本应用hashmap等缓存，非热点应用不用本应用缓存？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1580740432,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":188851,"user_name":"趁早","can_delete":false,"product_type":"c1","uid":1031970,"ip_address":"","ucode":"949FB3AA250D80","user_header":"https://static001.geekbang.org/account/avatar/00/0f/bf/22/26530e66.jpg","comment_is_top":false,"comment_ctime":1584426418,"is_pvip":false,"replies":[{"id":"73100","content":"是的","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1584590752,"ip_address":"","comment_id":188851,"utype":1}],"discussion_count":1,"race_medal":0,"score":"14469328306","product_id":100035801,"comment_content":"Guava cache找不到之后再去热点缓存，如redis memcache里面找","like_count":3,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":487548,"discussion_content":"是的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584590752,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":144197,"user_name":"长期规划","can_delete":false,"product_type":"c1","uid":1019332,"ip_address":"","ucode":"5EF65E9115834B","user_header":"https://static001.geekbang.org/account/avatar/00/0f/8d/c4/6f97daea.jpg","comment_is_top":false,"comment_ctime":1571878040,"is_pvip":false,"replies":[{"id":"55635","content":"不是的 热点缓存在本地，没有网络交互，会支撑更高的并发","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1571883112,"ip_address":"","comment_id":144197,"utype":1}],"discussion_count":5,"race_medal":0,"score":"14456779928","product_id":100035801,"comment_content":"老师，我理解分布式缓区中，每个key只有一份，无备份，对于热点查询，key所在节点的压力大。热点本地缓存相当于key在每台应用服务器都有，分散了压力，对吗","like_count":3,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":471845,"discussion_content":"不是的 热点缓存在本地，没有网络交互，会支撑更高的并发","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571883112,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1015754,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/7f/ca/ea85bfdd.jpg","nickname":"helloworld","note":"","ucode":"00DF2FEC58D2E6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":40526,"discussion_content":"我的理解和@长期规划一样。老师的解释没有明白","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1572229716,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1500288,"avatar":"https://static001.geekbang.org/account/avatar/00/16/e4/80/9da16743.jpg","nickname":"梧桐","note":"","ucode":"CECEEABE6AD55A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1015754,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/7f/ca/ea85bfdd.jpg","nickname":"helloworld","note":"","ucode":"00DF2FEC58D2E6","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":298001,"discussion_content":"本地缓存直接从本地获取，而分布式缓存则需要多一次网络请求，多的请求就是额外的性能消耗","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1597139930,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":40526,"ip_address":""},"score":298001,"extra":""}]},{"author":{"id":2756576,"avatar":"https://static001.geekbang.org/account/avatar/00/2a/0f/e0/b53a7701.jpg","nickname":"骑车上天空","note":"","ucode":"364365E2721122","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":582479,"discussion_content":"说白了就是直接在进程中存一些数据，访问应用时直接用这部分数据","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1659442466,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"广东"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1762252,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/e3/cc/0947ff0b.jpg","nickname":"nestle","note":"","ucode":"469800BED81B54","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":161729,"discussion_content":"我觉得同一个key一般是哈希路由到同一台应用服务器，所以不存在分散压力一说吧。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1580915837,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":140653,"user_name":"小喵喵","can_delete":false,"product_type":"c1","uid":1062444,"ip_address":"","ucode":"FDBBB2A59DB8B6","user_header":"https://static001.geekbang.org/account/avatar/00/10/36/2c/8bd4be3a.jpg","comment_is_top":false,"comment_ctime":1571021656,"is_pvip":false,"replies":[{"id":"54403","content":"1. 是的<br>2. 缓存有stats工具，可以接入open-falcon<br>","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1571038620,"ip_address":"","comment_id":140653,"utype":1}],"discussion_count":1,"race_medal":0,"score":"14455923544","product_id":100035801,"comment_content":"1.多个数据库节点，指的是多台数据库服务器，每台数据库服务器部署的同一个数据库，只是每个数据库存的数据不一样吗？<br>2.缓存监控如何做呢？有什么业内第三方工具或者组件吗？","like_count":4,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":470495,"discussion_content":"1. 是的\n2. 缓存有stats工具，可以接入open-falcon\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571038620,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":147810,"user_name":"大卫","can_delete":false,"product_type":"c1","uid":1019127,"ip_address":"","ucode":"D861709E483793","user_header":"https://static001.geekbang.org/account/avatar/00/0f/8c/f7/a4de6f64.jpg","comment_is_top":false,"comment_ctime":1572909116,"is_pvip":false,"replies":[{"id":"57031","content":"可否依据uid做一层缓存？","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1572938853,"ip_address":"","comment_id":147810,"utype":1}],"discussion_count":5,"race_medal":0,"score":"10162843708","product_id":100035801,"comment_content":"老师，当调用第三方接口时，该接口是分众的，会根据mac、uid等跟用户绑定的参数去查询数据，如果并发量非常高，全部穿透到第三方接口导致访问很慢，或者第三方直接限流了，影响调用方，如果限流，只能返回一个兜底数据，算是降级了。<br>这样的场景该如何优化呢？","like_count":2,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":473313,"discussion_content":"可否依据uid做一层缓存？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1572938853,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1323868,"avatar":"https://static001.geekbang.org/account/avatar/00/14/33/5c/8c0a372a.jpg","nickname":"Fourty Seven","note":"","ucode":"DD213225842F68","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":43968,"discussion_content":"实时性要求不高的话，可以在你呢内部系统再缓存一份，然后定时去和三方去同步","likes_number":6,"is_delete":false,"is_hidden":false,"ctime":1572919575,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1255277,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLDVXsv6JOOficLK07867AkAb21eoG5KBgYFmwhMXKJooU5B6iaIZwyDxExicokVQSiaKEwZ4qPicqVFcg/132","nickname":"拼yin世界","note":"","ucode":"9571428A12B72A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1323868,"avatar":"https://static001.geekbang.org/account/avatar/00/14/33/5c/8c0a372a.jpg","nickname":"Fourty Seven","note":"","ucode":"DD213225842F68","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":406002,"discussion_content":"我们系统，之前，就是这么玩的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1634691304,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":43968,"ip_address":""},"score":406002,"extra":""}]},{"author":{"id":2756576,"avatar":"https://static001.geekbang.org/account/avatar/00/2a/0f/e0/b53a7701.jpg","nickname":"骑车上天空","note":"","ucode":"364365E2721122","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":582480,"discussion_content":"我就遇到过这种场景","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1659442537,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"广东"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1886331,"avatar":"https://static001.geekbang.org/account/avatar/00/1c/c8/7b/153181d7.jpg","nickname":"夜辉","note":"","ucode":"9421385F51FF9E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":364321,"discussion_content":"用户规模大嘛？数量变化大嘛？每次用户查询的数据结果几乎不变？\n数据量小，自己备份数据查询\n\n必须同步查询？\n可以异步查询嘛？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1617442847,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":140697,"user_name":"jc9090kkk","can_delete":false,"product_type":"c1","uid":1338831,"ip_address":"","ucode":"6C992D07A2E78F","user_header":"https://static001.geekbang.org/account/avatar/00/14/6d/cf/ec335526.jpg","comment_is_top":false,"comment_ctime":1571033582,"is_pvip":false,"replies":[{"id":"54398","content":"可以给缓存项设置比较小的过期时间，比如1天<br>否则就要手动清理了，scan + delete<br>而且缓存的内存最好是可以扩展，起码增加新的字段不需要变更key<br><br>但是不建议这么设置缓存，不知道你这么使用的话，命中率会有多少","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1571038461,"ip_address":"","comment_id":140697,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10160968174","product_id":100035801,"comment_content":"感谢老师的分享，对于缓存的应用在工作中碰过这样的情况，想问下老师有没有可以推荐的建议：<br>在搜索系统中，业务会将搜索的关键词+分类id+分页（前10页）+其他的筛选参数组成一个唯一key缓存到redis中，但是有时候会碰到业务变更导致当前的数据结构需要升级或者清理，所以就需要被迫的清理缓存数据，我使用的方式是升级缓存key的版本号，比如v1到v2，但是这样的方案有时候会导致服务器抖动，而且由于旧版本的缓存key非常多不好维护，只能等待旧的缓存数据自动过期同时也存在内存资源浪费的情况，对于这样的情况老师有什么好的建议或者解决办法吗？","like_count":2,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":470514,"discussion_content":"可以给缓存项设置比较小的过期时间，比如1天\n否则就要手动清理了，scan + delete\n而且缓存的内存最好是可以扩展，起码增加新的字段不需要变更key\n\n但是不建议这么设置缓存，不知道你这么使用的话，命中率会有多少","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571038461,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":291646,"user_name":"sotondolphin","can_delete":false,"product_type":"c1","uid":2306394,"ip_address":"","ucode":"136444B47ACDC5","user_header":"","comment_is_top":false,"comment_ctime":1620397805,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"5915365101","product_id":100035801,"comment_content":"缓存是给别人用的，提高自己的响应速度。缓冲是给自己用的，可以加速读取速度","like_count":1},{"had_liked":false,"id":248051,"user_name":"徐同学","can_delete":false,"product_type":"c1","uid":1027740,"ip_address":"","ucode":"0EF0A8E28C2E91","user_header":"https://static001.geekbang.org/account/avatar/00/0f/ae/9c/b1ef4502.jpg","comment_is_top":false,"comment_ctime":1599992846,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5894960142","product_id":100035801,"comment_content":"老师的文章写得很赞。Java中的Integer、Long等类中对于-128—127的缓存就都体现了缓存的思想。","like_count":1},{"had_liked":false,"id":140673,"user_name":"intomymind","can_delete":false,"product_type":"c1","uid":1105126,"ip_address":"","ucode":"B954C9BFEC8667","user_header":"https://static001.geekbang.org/account/avatar/00/10/dc/e6/cfb409ab.jpg","comment_is_top":false,"comment_ctime":1571026554,"is_pvip":false,"replies":[{"id":"54401","content":"可以统计，请求有没有热点，然后推论出缓存是否是热点","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1571038548,"ip_address":"","comment_id":140673,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5865993850","product_id":100035801,"comment_content":"老师，如何统计出数据是否为热点数据","like_count":1,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":470506,"discussion_content":"可以统计，请求有没有热点，然后推论出缓存是否是热点","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571038548,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":295366,"user_name":"凌霄","can_delete":false,"product_type":"c1","uid":1107786,"ip_address":"","ucode":"19C4BFB0298276","user_header":"https://static001.geekbang.org/account/avatar/00/10/e7/4a/4dfb565a.jpg","comment_is_top":false,"comment_ctime":1622384635,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1622384635","product_id":100035801,"comment_content":"那么我们会在代码中使用一些本地缓存方案，如 HashMap，Guava Cache 或者是 Ehcache 等，它们和应用程序部署在同一个进程中，优势是不需要跨网络调度，速度极快，所以可以用来阻挡短时间内的热点查询。<br><br><br>现在流行caffeine了！","like_count":0},{"had_liked":false,"id":274671,"user_name":"大鱼","can_delete":false,"product_type":"c1","uid":1352665,"ip_address":"","ucode":"1418EE18C4BDD4","user_header":"","comment_is_top":false,"comment_ctime":1611118355,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1611118355","product_id":100035801,"comment_content":"感觉咱们的浏览器文件夹也是类似的缓存：当我们要目标网站的时候先去自己的文件夹标签(hash分组)里面找一点，如果找不到可能就要搜索来遍历了 ：)","like_count":0},{"had_liked":false,"id":229028,"user_name":"xiaochao321","can_delete":false,"product_type":"c1","uid":1083596,"ip_address":"","ucode":"8F5AC46CD9400C","user_header":"https://static001.geekbang.org/account/avatar/00/10/88/cc/11b10a6f.jpg","comment_is_top":false,"comment_ctime":1592881956,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1592881956","product_id":100035801,"comment_content":"热点数据怎么提前预知？","like_count":0,"discussions":[{"author":{"id":1057380,"avatar":"https://static001.geekbang.org/account/avatar/00/10/22/64/a92e299b.jpg","nickname":"xdims","note":"","ucode":"935F1FA4C26866","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":325943,"discussion_content":"这个是根据你的业务场景来的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1605486224,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":227553,"user_name":"","can_delete":false,"product_type":"c1","uid":1990630,"ip_address":"","ucode":"82813BD666EFBD","user_header":"https://static001.geekbang.org/account/avatar/00/1e/5f/e6/8a5f9951.jpg","comment_is_top":false,"comment_ctime":1592407447,"is_pvip":true,"discussion_count":1,"race_medal":0,"score":"1592407447","product_id":100035801,"comment_content":"高并发场景下，库存怎么减，Redis有一致性问题，分布式锁有性能问题","like_count":0,"discussions":[{"author":{"id":1009831,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/68/a7/c3fd1fd9.jpg","nickname":"聪","note":"","ucode":"9D672A8580A945","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":312305,"discussion_content":"可以用单机redis 3个组成一个cluster, 每个redis都存一样的数据。这样client去同时做+-，拿到3个相同的结果就判断对, 要不然就判错。metrics加上error rate和latency。然后整体数据做sharding到多几个redis cluster上去。坏处就是cost高。需要很多cluster。\n\n或者你要强一致性，你可以试试用这个东西Apache Geode。 p2p架构，这样可以搭建在vm或者k8s stateful pod里面，我没用过，正在研究。不知道性能如何。看文档还可以。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1602658882,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":187754,"user_name":"王向华","can_delete":false,"product_type":"c1","uid":1890734,"ip_address":"","ucode":"DBDC26133CC05A","user_header":"https://static001.geekbang.org/account/avatar/00/1c/d9/ae/46f75278.jpg","comment_is_top":false,"comment_ctime":1584225732,"is_pvip":false,"replies":[{"id":"73109","content":"代码都在文中","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1584591112,"ip_address":"","comment_id":187754,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1584225732","product_id":100035801,"comment_content":"老师说的代码，在哪里可以下载到","like_count":0,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":487229,"discussion_content":"代码都在文中","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584591112,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":174932,"user_name":"尔冬橙","can_delete":false,"product_type":"c1","uid":1225224,"ip_address":"","ucode":"0B013A49BC18DA","user_header":"https://static001.geekbang.org/account/avatar/00/12/b2/08/92f42622.jpg","comment_is_top":false,"comment_ctime":1580464128,"is_pvip":false,"replies":[{"id":"68359","content":"是的，存储在本机的内存里","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1580872642,"ip_address":"","comment_id":174932,"utype":1}],"discussion_count":3,"race_medal":0,"score":"1580464128","product_id":100035801,"comment_content":"本地缓存是存在哪里？内存的告诉缓存中么？","like_count":0,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":482570,"discussion_content":"是的，存储在本机的内存里","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1580872642,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1112139,"avatar":"https://static001.geekbang.org/account/avatar/00/10/f8/4b/5ae62b10.jpg","nickname":"Geek_b04b12","note":"","ucode":"F8705A21FCDF09","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":290785,"discussion_content":"缓存又分为客户端缓存和服务器端缓存，这里讲的本地缓存，一般都是对于开发和运维来说的服务器端缓存\n","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1594605682,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1755152,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/VTPuhJb5xxuRwH1iblqrAe3De4PoETgNWibZRkLlhvszysdtpAvSPZFuYtsJfWJmoXOFFWnpR02W9NGIiammU8UPg/132","nickname":"Info_E","note":"","ucode":"97207B2CC4C776","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":550659,"discussion_content":"就是你平常写代码是 new hashMap 申请占用的那块内存，是你本机的内存","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1644658818,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":163197,"user_name":"Chiang","can_delete":false,"product_type":"c1","uid":1779409,"ip_address":"","ucode":"1AC4B1B66C77B0","user_header":"https://static001.geekbang.org/account/avatar/00/1b/26/d1/fc7016a7.jpg","comment_is_top":false,"comment_ctime":1576668756,"is_pvip":false,"replies":[{"id":"62128","content":"额，好像没有这个。","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1576734423,"ip_address":"","comment_id":163197,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1576668756","product_id":100035801,"comment_content":"CA-&gt;Netherlands-&gt;CA 是啥意思?","like_count":0,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":478291,"discussion_content":"额，好像没有这个。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1576734423,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1284815,"avatar":"https://static001.geekbang.org/account/avatar/00/13/9a/cf/d1811fcc.jpg","nickname":"heeeeeeyZ25","note":"","ucode":"C92DDDFFC445C9","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":261749,"discussion_content":"从美国加州发送网络请求到荷兰往返消耗的时间 lol","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1589001689,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":162467,"user_name":"长期规划","can_delete":false,"product_type":"c1","uid":1019332,"ip_address":"","ucode":"5EF65E9115834B","user_header":"https://static001.geekbang.org/account/avatar/00/0f/8d/c4/6f97daea.jpg","comment_is_top":false,"comment_ctime":1576543729,"is_pvip":false,"replies":[{"id":"62150","content":"可以这么说吧~","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1576736688,"ip_address":"","comment_id":162467,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1576543729","product_id":100035801,"comment_content":"老师前面讲的池化也是一种缓存","like_count":0,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":478058,"discussion_content":"可以这么说吧~","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1576736688,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":155882,"user_name":"yuan","can_delete":false,"product_type":"c1","uid":1207302,"ip_address":"","ucode":"EA3D0573478EC7","user_header":"https://static001.geekbang.org/account/avatar/00/12/6c/06/2ac17d5a.jpg","comment_is_top":false,"comment_ctime":1574773079,"is_pvip":false,"discussion_count":3,"race_medal":0,"score":"1574773079","product_id":100035801,"comment_content":"老师，如果写DB完了以后，服务挂了，没有更新缓存，那也也会造成不一致，这种不一致有方法避免吗？   难不成只能等缓存失效","like_count":0,"discussions":[{"author":{"id":1762252,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/e3/cc/0947ff0b.jpg","nickname":"nestle","note":"","ucode":"469800BED81B54","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":161732,"discussion_content":"我们是通过对比数据版本来发现不一致的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1580915948,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1009831,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/68/a7/c3fd1fd9.jpg","nickname":"聪","note":"","ucode":"9D672A8580A945","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1762252,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/e3/cc/0947ff0b.jpg","nickname":"nestle","note":"","ucode":"469800BED81B54","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":312306,"discussion_content":"所以每个data还要带上版本号吗","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1602658940,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":161732,"ip_address":""},"score":312306,"extra":""},{"author":{"id":1755152,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/VTPuhJb5xxuRwH1iblqrAe3De4PoETgNWibZRkLlhvszysdtpAvSPZFuYtsJfWJmoXOFFWnpR02W9NGIiammU8UPg/132","nickname":"Info_E","note":"","ucode":"97207B2CC4C776","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1762252,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/e3/cc/0947ff0b.jpg","nickname":"nestle","note":"","ucode":"469800BED81B54","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":354467,"discussion_content":"怎么比对版本呢？ 缓存和数据库比对么","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1615295794,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":161732,"ip_address":""},"score":354467,"extra":""}]}]},{"had_liked":false,"id":152206,"user_name":"乘坐Tornado的线程魔法师","can_delete":false,"product_type":"c1","uid":1132661,"ip_address":"","ucode":"C4C9915866E769","user_header":"https://static001.geekbang.org/account/avatar/00/11/48/75/02b4366a.jpg","comment_is_top":false,"comment_ctime":1573914648,"is_pvip":false,"replies":[{"id":"58715","content":"中了缓存是指命中了缓存","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1574121352,"ip_address":"","comment_id":152206,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1573914648","product_id":100035801,"comment_content":"对于下面这段话：<br><br>由于本地缓存是部署在应用服务器中，而我们应用服务器通常会部署多台，当数据更新时，我们不能确定哪台服务器本地中了缓存，更新或者删除所有服务器的缓存不是一个好的选择，所以我们通常会等待缓存过期。因此，这种缓存的有效期很短，通常为分钟或者秒级别，以避免返回前端脏数据。<br><br>数据更新是指的request请求将数据库里面的数据更新吗？每个请求过来时都会带着ip地址，就算是多台服务器负载均衡的话，应该是可以根据ip确定服务器的。为什么我们无法确定哪台服务器本地中了缓存呢？这个中了缓存是指？","like_count":0,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":474749,"discussion_content":"中了缓存是指命中了缓存","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574121352,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":147209,"user_name":"星空123","can_delete":false,"product_type":"c1","uid":1596920,"ip_address":"","ucode":"E998A7C585671B","user_header":"https://static001.geekbang.org/account/avatar/00/18/5d/f8/7de2c1cc.jpg","comment_is_top":false,"comment_ctime":1572839070,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1572839070","product_id":100035801,"comment_content":"我们项目用的全局变量。没有引入老师说的‘热点本地缓存使用组件 Guava Cache’。我们去了解下然后在项目中使用、谢谢老师","like_count":0},{"had_liked":false,"id":141724,"user_name":"岁寒","can_delete":false,"product_type":"c1","uid":1066921,"ip_address":"","ucode":"D062733384F4BF","user_header":"https://static001.geekbang.org/account/avatar/00/10/47/a9/3ace68b6.jpg","comment_is_top":false,"comment_ctime":1571215075,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1571215075","product_id":100035801,"comment_content":"redis简直是中小公司的开发利器～～","like_count":0},{"had_liked":false,"id":141512,"user_name":"西风吹北川","can_delete":false,"product_type":"c1","uid":1193111,"ip_address":"","ucode":"4DCFF5EF96224D","user_header":"https://static001.geekbang.org/account/avatar/00/12/34/97/7b181b68.jpg","comment_is_top":false,"comment_ctime":1571186876,"is_pvip":true,"replies":[{"id":"54652","content":"memcache不是部署在本地的，确实是hashmap，hashmap可以作为简单的本地缓存","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1571188590,"ip_address":"","comment_id":141512,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1571186876","product_id":100035801,"comment_content":"下面这段话的hashmap 应该是memcache<br><br>那么我们会在代码中使用一些本地缓存方案，如 HashMap，Guava Cache 或者是 Ehcache 等，它们和应用程序部署在同一个进程中，优势是不需要跨网络调度，速度极快，所以可以来阻挡短时间内的热点查询。","like_count":0,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":470778,"discussion_content":"memcache不是部署在本地的，确实是hashmap，hashmap可以作为简单的本地缓存","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571188590,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":141368,"user_name":"啊啊啊哦哦","can_delete":false,"product_type":"c1","uid":1309877,"ip_address":"","ucode":"68C7153ECAAC57","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/RNO4yZyBvic914hewmNNE8iblYDcfv5yGHZ9OnKuCuZXNmGR0F5qV3icKLT2xpMt66GyEpicZVvrmz8A6TIqt92MQg/132","comment_is_top":false,"comment_ctime":1571145529,"is_pvip":false,"replies":[{"id":"54641","content":"是指应用服务器，这个我之后注意区分","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1571184037,"ip_address":"","comment_id":141368,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1571145529","product_id":100035801,"comment_content":"老师web层是指web服务器nginx还是应用服务器对这个概念有点模糊","like_count":0,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":470735,"discussion_content":"是指应用服务器，这个我之后注意区分","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571184037,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":140688,"user_name":"斐波那契","can_delete":false,"product_type":"c1","uid":1464006,"ip_address":"","ucode":"85E2EBC01392B1","user_header":"https://static001.geekbang.org/account/avatar/00/16/56/c6/0b449bc6.jpg","comment_is_top":false,"comment_ctime":1571029893,"is_pvip":false,"replies":[{"id":"54399","content":"嗯，可以这么说~","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1571038478,"ip_address":"","comment_id":140688,"utype":1}],"discussion_count":3,"race_medal":0,"score":"1571029893","product_id":100035801,"comment_content":"对于思考题：oracle里面的oracle instance是不是就是类似缓存的思想？或者大部分关系新数据库里“视图”的作用就有点缓存的意思","like_count":0,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":470510,"discussion_content":"嗯，可以这么说~","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571038478,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1020525,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/92/6d/becd841a.jpg","nickname":"escray","note":"","ucode":"1F4204930E47C4","race_medal":5,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":310691,"discussion_content":"视图是缓存，特别是查询的缓存；Oracle 里面好像还有物理视图，更“缓存”。\n\n但是前面一句，说 Oracle 里面的 Oracle instance 类似缓存思想，这个看不太明白。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1601996063,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1464006,"avatar":"https://static001.geekbang.org/account/avatar/00/16/56/c6/0b449bc6.jpg","nickname":"斐波那契","note":"","ucode":"85E2EBC01392B1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1020525,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/92/6d/becd841a.jpg","nickname":"escray","note":"","ucode":"1F4204930E47C4","race_medal":5,"user_type":1,"is_pvip":true},"discussion":{"id":310700,"discussion_content":"oracle instance就是在oracle启动后加载进内存的实例 是管理oracle各个进程的 其中就包括了部分数据加载进内存 直接从内存中更改数据返回等","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1601997913,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":310691,"ip_address":""},"score":310700,"extra":""}]}]},{"had_liked":false,"id":140681,"user_name":"jack","can_delete":false,"product_type":"c1","uid":1182934,"ip_address":"","ucode":"D3DBD1DC490E1E","user_header":"https://static001.geekbang.org/account/avatar/00/12/0c/d6/2677ec43.jpg","comment_is_top":false,"comment_ctime":1571028164,"is_pvip":false,"replies":[{"id":"54400","content":"下一讲中的缓存多副本的方案可以使用，或者增加本地缓存","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1571038512,"ip_address":"","comment_id":140681,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1571028164","product_id":100035801,"comment_content":"老师，分布式缓存热key的处理有好的落地方案吗？","like_count":0,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":470508,"discussion_content":"下一讲中的缓存多副本的方案可以使用，或者增加本地缓存","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571038512,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]}]}