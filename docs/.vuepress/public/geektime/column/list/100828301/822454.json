{"id":822454,"title":"13｜如何评估LLaMA 3的检索增强效果？","content":"<p>你好，我是Tyler！</p><p>在上一节课中，我们讨论了如何通过优化RAG系统的在线检索能力，以确保生成的内容更加准确和及时。LLaMA 3 作为一个强大的语言模型，能够通过对生成结果进行评分，提升检索到的内容质量，从而帮助优化检索内容。</p><p>这节课，我们将深入探讨如何使用 LLaMA 3 来全面评估你的 RAG 系统表现，并逐步讲解操作方法和注意事项，帮助你更好地掌握这个过程。</p><h2>LLaMA 3 如何评估 RAG 系统？</h2><ol>\n<li><strong>生成内容是否忠于原始信息</strong></li>\n</ol><p>在评估生成内容的忠实性时，我们需要特别关注生成内容与检索到的信息之间的一致性。例如，假设我们的 RAG 系统接收到一个用户查询：“光合作用的基本过程是什么？”系统生成的回答可能是：“光合作用是植物利用阳光、二氧化碳和水合成葡萄糖并释放氧气的过程。它发生在植物的叶绿体内，主要分为光反应和暗反应两个阶段。”</p><p>接下来，我们需要将这段生成的回答与检索到的相关文档进行比较。检索到的文档可能包含的信息是：“光合作用是植物利用阳光、二氧化碳和水合成有机物的过程，释放出氧气。光合作用主要发生在植物的叶绿体，过程可分为光反应和暗反应两个阶段，光反应依赖于光能，而暗反应则利用光反应产生的能量。”</p><p>通过逐句对比这两个文本，我们可以看到生成的回答基本上准确地表达了光合作用的过程，并涵盖了主要组成部分，包括阳光、二氧化碳和氧气。然而，生成的回答却缺少了“合成有机物”这一重要术语，可能导致用户对光合作用的理解不够全面。</p><!-- [[[read_end]]] --><p>因此，为了更好地评估这一忠实性，我们可以利用 LLaMA 3 的自动打分功能。下面的示例代码展示了如何实现这个评估过程：</p><pre><code class=\"language-python\">import ollama\n\ndef evaluate_faithfulness(generated_answer, retrieved_document):\n    # 创建用于评估的提示\n    prompt = f\"请评估以下生成内容的忠实性，给出一个分数（1到10）并解释原因。\\n\\n\" \\\n             f\"生成内容：{generated_answer}\\n\\n\" \\\n             f\"检索到的文档：{retrieved_document}\\n\\n\" \\\n             \"请回答：\"\n\n    # 发送评估请求\n    response = ollama.chat(model='llama3.1', messages=[\n        {\n            'role': 'user',\n            'content': prompt,\n        },\n    ])\n\n    # 提取评估结果\n    evaluation_result = response['message']['content']\n\n    # 返回评估结果（分数和解释）\n    return evaluation_result\n\n# 用户查询\nuser_query = \"光合作用的基本过程是什么？\"\n\n# 生成回答\nresponse = ollama.chat(model='llama3.1', messages=[\n    {\n        'role': 'user',\n        'content': user_query,\n    },\n])\n\n# 获取生成的回答\ngenerated_answer = response['message']['content']\n\n# 假设检索到的相关文档\nretrieved_document = \"光合作用是植物利用阳光、二氧化碳和水合成有机物的过程，释放出氧气。光合作用主要发生在植物的叶绿体，过程可分为光反应和暗反应两个阶段，光反应依赖于光能，而暗反应则利用光反应产生的能量。\"\n\n# 评估忠实性\nfaithfulness_evaluation = evaluate_faithfulness(generated_answer, retrieved_document)\n\n# 输出评估结果\nprint(f\"生成回答: {generated_answer}\")\nprint(f\"忠实性评估结果: {faithfulness_evaluation}\")\n</code></pre><p>在这个过程中，LLaMA 3 可以为生成的回答提供一个忠实性分数，比如 8/10，表明内容在整体上是忠实的，但同时也揭示了缺失的细节。这样的评估不仅能确保生成内容基于真实数据，也能帮助我们识别并改进潜在的不足之处，从而提高用户的理解与满意度。</p><ol start=\"2\">\n<li><strong>判断生成内容是否有倾向性</strong></li>\n</ol><p>在评估生成内容的过程中，判断其倾向性也是至关重要的。倾向性不仅影响生成内容的客观性，还直接关系到用户对系统的信任和满意度。LLaMA 3 在这一环节发挥着关键作用，它能够有效识别生成内容中的倾向性，确保输出的答案与用户的意图高度一致，从而避免内容偏离主题。</p><p>为了进行有效的评估，我们首先利用 LLaMA 3 对生成内容进行倾向性打分。这一过程使我们能够精准识别出生成回答中是否存在过度解释或无关信息。例如，如果用户询问“如何提高工作效率”，而系统的回答却偏向于个人生活习惯的细节，这就表明生成内容存在倾向性偏离的风险。</p><p>在代码实现中，我们可以使用如下方式来评估生成内容的倾向性：</p><pre><code class=\"language-python\">import ollama\n\n# 用户查询\nuser_query = \"如何提高工作效率？\"\n\n# 假设这是系统生成的回答\ngenerated_response = \"\"\"\n要提高工作效率，可以考虑以下几个方面：\n1. 制定清晰的工作目标。\n2. 学会优先处理重要任务。\n3. 保持良好的作息习惯。\n4. 避免过多的社交媒体干扰。\n\"\"\"\n\n# 使用 LLaMA 3 进行倾向性分析\nresponse = ollama.chat(model='llama3.1', messages=[\n    {\n        'role': 'user',\n        'content': f\"请评估以下内容的倾向性。分析该回答是否与用户查询相符，是否包含任何偏离主题的细节或无关信息：\\n\\n{generated_response}\",\n    },\n])\n\n# 输出倾向性评估结果\nprint(response['message']['content'])\n</code></pre><p>通过获取倾向性打分后，评估的核心在于根据这些评分结果进行系统优化。通过分析评分，我们能够明确哪些部分未能有效回应用户的需求，并针对性地对生成模型进行调整。这不仅是对生成内容的直接评估，更是对整个系统在用户交互中的表现进行深度反思。</p><ol start=\"3\">\n<li><strong>评估上下文理解和逻辑推理</strong></li>\n</ol><p>在生成内容的评估过程中，理解上下文和进行逻辑推理是至关重要的。LLaMA 3 不仅能够分析文本的表面内容，还能深入挖掘生成内容在上下文理解和逻辑推理方面的表现，尤其在复杂的多轮对话中，这一点尤为关键。用户的提问通常基于之前的对话交流，系统若能准确理解上下文并做出逻辑合理的推理，才能生成符合用户期望的回答。</p><p>在实际评估中，我们可以通过 LLaMA 3 来分析生成内容是否与上下文保持一致。以用户的多轮对话为背景，LLaMA 3 可以给出一个 1 到 10 的一致性评分，并解释评分依据。例如，假设用户之前提到“我最近在处理一个新产品开发项目”，然后在后续提问中询问“我们还需要什么来完成这个项目？”，生成系统需要能回忆之前的对话并给出基于上下文的回答。如果系统提供的回答不能与之前的讨论内容保持连贯，或者逻辑上自相矛盾，便会在一致性评分中扣分。</p><p>为了进行有效的评估，我们可以使用如下代码对生成内容进行一致性打分：</p><pre><code class=\"language-python\">import ollama\n\n# 评估回答的一致性，返回1-10的评分\ndef evaluate_context_consistency_with_score(history_dialogue, user_query, generated_answer):\n    # 构建历史对话和生成的回答作为上下文\n    context = \"\\n\".join(history_dialogue) + f\"\\n用户当前问题: {user_query}\\n\"\n    query = (context + \n            f\"模型生成的回答: {generated_answer}\\n\\n\"\n            \"请根据上下文与生成回答的逻辑一致性进行评估，并给出1-10的评分（1表示完全不一致，10表示完全一致）。\"\n            \" 请解释评分的依据。\")\n\n    # 让 LLaMA 进行一致性评分\n    response = ollama.chat(model='llama3.1', messages=[{'role': 'user', 'content': query}])\n\n    return response['message']['content']\n\n# 示例使用（假设我们已有历史对话和生成的回答）\nhistory_dialogue = [\n    \"我最近一直在处理一个新产品开发项目。\",\n    \"这个项目的进展情况如何？\"\n]\nuser_query = \"我们还需要什么来完成这个项目？\"\ngenerated_answer = \"我们已经完成了设计阶段，现在只差市场调研和用户反馈。\"\n\n# 进行上下文一致性评估并获取评分\nconsistency_evaluation = evaluate_context_consistency_with_score(history_dialogue, user_query, generated_answer)\n\nprint(\"上下文一致性评分及解释:\", consistency_evaluation)\n</code></pre><p>通过上下文一致性评分的方式，不仅能定量分析模型的上下文理解能力，还能定性分析评分背后的逻辑。这种评估方式可以帮助我们发现系统在逻辑推理和多轮对话中的不足，进一步优化模型的表现，使其在复杂对话场景下更加自然流畅。</p><h3>LLaMA 评估中的注意事项</h3><p>最后，在使用 LLaMA 评估 LLaMA 的过程中，有几个重要的注意点需要关注。所谓“用 LLaMA 评估 LLaMA”，是指利用大模型的能力来为其自己生成的内容打分或评估。这其中存在一个悖论，我们称之为“既是运动员又是裁判员的问题”，因为模型既是生成者又是评估者。</p><p>为了解决这一问题，我们可以采用<strong>层级评估策略</strong>。这种策略的核心在于使用更大的模型来评估较小模型的表现。例如，我们可以用 LLaMA 3 的 70B 参数模型来评估 LLaMA 3 的 8B 参数模型，或者用 GPT-4o 来评估 GPT-4。这种方法确保评估能够产生有效的监督效果，因为上位模型通常具备更强的能力，能够更好地理解和判断下位模型的输出质量。</p><p>接下来，我们还要考虑到<strong>评估过程中的数据处理量</strong>，判断这套方案的可行性。通常所处理的数据量远小于在线推理时的用户请求量，因此使用参数量更大、性能更强的模型进行自动化评估是合理的。尽管这些大模型在推理时可能面临较高的计算成本，但在评估阶段，所消耗的资源相对较小。这种安排可以在不显著增加计算成本的前提下，确保评估的高质量。</p><p>通过对忠实性、倾向性、上下文理解和逻辑推理的综合评估，LLaMA 3 为 RAG 系统的表现提供了详细的反馈。在这些评估结果的基础上，我们可以进一步优化系统的各个部分。例如，如果系统在忠实性上得分较低，说明生成内容偏离了检索到的信息，这时我们可以改进模型的生成逻辑，确保回答更精确地引用原始文档信息。同样，如果倾向性评估显示生成内容偏离主题，调整生成模型的输出策略以保持专注性是关键。</p><p>最后一个问题是，如果我使用的是最大参数量的 LLaMA 3 模型，该如何评估它呢？可以放心，当前能够达到人类阅读速度的在线模型一般都在 30B 以内。更进一步，即便在资源充足的情况下，你能够使用 100B 以上的模型（甚至 Meta 在技术报告中提到正在准备的 400B 以上的模型），如果我们选择使用扮演各种角色的模型去评价单一角色的模型，这种方法是多智能体系统（多步推理）对单智能体系统（单步推理）的评估，也可以视为一种分层评估模式。此外，你在此时也可以考虑使用人类标注者，并结合在线用户的反馈来评估模型的表现。</p><h2>小结</h2><p>在这节课中，我们深入讨论了如何利用 LLaMA 3 来全面评估 RAG 系统。通过<strong>忠实性、倾向性、上下文理解和逻辑推理</strong>等多维度评估，LLaMA 3 为我们提供了一个强大的工具来改进生成系统的表现。同时，借助层级评估策略，我们能够克服“既是运动员又是裁判员”的问题，确保评估的客观性与公正性。</p><p>希望你能掌握 LLaMA 3 评估 RAG 系统的核心方法，并在实践中加以运用，进一步提升你的系统性能。在后面的课程中，我们还将学习如何用更多的方法去评价智能体的表现，如果你有任何问题或想要进一步讨论，欢迎随时在评论区留言！</p><h2>思考题</h2><ol>\n<li>\n<p>用模型评估模型会出现的哪些问题？</p>\n</li>\n<li>\n<p>如何让同一个模型在评估自己的时候尽可能的合理？</p>\n</li>\n</ol><p>欢迎你把思考后的结果分享到留言区，也欢迎你把这节课的内容分享给其他朋友，我们下节课再见！</p>","neighbors":{"left":{"article_title":"12｜如何利用 RAG 提升 Llama 问答系统准确性？","id":822445},"right":{"article_title":"14｜展望未来：LLaMA 3检索增强的潜力","id":824798}},"comments":[]}