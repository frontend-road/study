{"id":79319,"title":"JavaScript对象：面向对象还是基于对象？","content":"<p>你好，我是winter。</p><p>与其它的语言相比，JavaScript中的“对象”总是显得不那么合群。</p><p>一些新人在学习JavaScript面向对象时，往往也会有疑惑：</p><ul>\n<li>为什么JavaScript（直到ES6）有对象的概念，但是却没有像其他的语言那样，有类的概念呢；</li>\n<li>为什么在JavaScript对象里可以自由添加属性，而其他的语言却不能呢？</li>\n</ul><p>甚至，在一些争论中，有人强调：JavaScript并非“面向对象的语言”，而是“基于对象的语言”。这个说法一度流传甚广，而事实上，我至今遇到的持有这一说法的人中，无一能够回答“如何定义面向对象和基于对象”这个问题。</p><p>实际上，基于对象和面向对象两个形容词都出现在了JavaScript标准的各个版本当中。</p><p>我们可以先看看JavaScript标准对基于对象的定义，这个定义的具体内容是：“语言和宿主的基础设施由对象来提供，并且JavaScript程序即是一系列互相通讯的对象集合”。</p><p>这里的意思根本不是表达弱化的面向对象的意思，反而是表达对象对于语言的重要性。</p><p>那么，在本篇文章中，我会尝试让你去理解面向对象和JavaScript中的面向对象究竟是什么。</p><h2>什么是面向对象？</h2><p>我们先来说说什么是对象，因为翻译的原因，中文语境下我们很难理解“对象”的真正含义。事实上，Object（对象）在英文中，是一切事物的总称，这和面向对象编程的抽象思维有互通之处。</p><!-- [[[read_end]]] --><p>中文的“对象”却没有这样的普适性，我们在学习编程的过程中，更多是把它当作一个专业名词来理解。</p><p>但不论如何，我们应该认识到，对象并不是计算机领域凭空造出来的概念，它是顺着人类思维模式产生的一种抽象（于是面向对象编程也被认为是：更接近人类思维模式的一种编程范式）。</p><p>那么，我们先来看看在人类思维模式下，对象究竟是什么。</p><blockquote>\n<p><span class=\"reference\">对象这一概念在人类的幼儿期形成，这远远早于我们编程逻辑中常用的值、过程等概念。</span></p>\n<p><span class=\"reference\">在幼年期，我们总是先认识到某一个苹果能吃（这里的某一个苹果就是一个对象），继而认识到所有的苹果都可以吃（这里的所有苹果，就是一个类），再到后来我们才能意识到三个苹果和三个梨之间的联系，进而产生数字“3”（值）的概念。</span></p>\n</blockquote><p>在《面向对象分析与设计》这本书中，Grady Booch替我们做了总结，他认为，从人类的认知角度来说，对象应该是下列事物之一：</p><ol>\n<li>一个可以触摸或者可以看见的东西；</li>\n<li>人的智力可以理解的东西；</li>\n<li>可以指导思考或行动（进行想象或施加动作）的东西。</li>\n</ol><p>有了对象的自然定义后，我们就可以描述编程语言中的对象了。在不同的编程语言中，设计者也利用各种不同的语言特性来抽象描述对象，最为成功的流派是使用“类”的方式来描述对象，这诞生了诸如 C++、Java等流行的编程语言。</p><p>而 JavaScript 早年却选择了一个更为冷门的方式：原型（关于原型，我在下一篇文章会重点介绍，这里你留个印象就可以了）。这是我在前面说它不合群的原因之一。</p><p>然而很不幸，因为一些公司政治原因，JavaScript推出之时受管理层之命被要求模仿Java，所以，JavaScript创始人Brendan Eich在“原型运行时”的基础上引入了new、this等语言特性，使之“看起来更像Java”。</p><p>在 ES6 出现之前，大量的 JavaScript 程序员试图在原型体系的基础上，把JavaScript变得更像是基于类的编程，进而产生了很多所谓的“框架”，比如PrototypeJS、Dojo。</p><p>事实上，它们成为了某种JavaScript的古怪方言，甚至产生了一系列互不相容的社群，显然这样做的收益是远远小于损失的。</p><p>如果我们从运行时角度来谈论对象，就是在讨论JavaScript实际运行中的模型，这是由于任何代码执行都必定绕不开运行时的对象模型。</p><p>不过，幸运的是，从运行时的角度看，可以不必受到这些“基于类的设施”的困扰，这是因为任何语言运行时类的概念都是被弱化的。</p><p>首先我们来了解一下JavaScript是如何设计对象模型的。</p><h2>JavaScript 对象的特征</h2><p>在我看来，不论我们使用什么样的编程语言，我们都先应该去理解对象的本质特征（参考Grandy Booch《面向对象分析与设计》）。总结来看，对象有如下几个特点。</p><ul>\n<li>对象具有唯一标识性：即使完全相同的两个对象，也并非同一个对象。</li>\n<li>对象有状态：对象具有状态，同一对象可能处于不同状态之下。</li>\n<li>对象具有行为：即对象的状态，可能因为它的行为产生变迁。</li>\n</ul><p>我们先来看第一个特征，对象具有唯一标识性。一般而言，各种语言的对象唯一标识性都是用内存地址来体现的， 对象具有唯一标识的内存地址，所以具有唯一的标识。</p><p>所以，JavaScript程序员都知道，任何不同的JavaScript对象其实是互不相等的，我们可以看下面的代码，o1和o2初看是两个一模一样的对象，但是打印出来的结果却是false。</p><pre><code class=\"language-JavaScript\">    var o1 = { a: 1 };\n    var o2 = { a: 1 };\n    console.log(o1 == o2); // false\n</code></pre><p>关于对象的第二个和第三个特征“状态和行为”，不同语言会使用不同的术语来抽象描述它们，比如C++中称它们为“成员变量”和“成员函数”，Java中则称它们为“属性”和“方法”。</p><p>在 JavaScript中，将状态和行为统一抽象为“属性”，考虑到 JavaScript 中将函数设计成一种特殊对象（关于这点，我会在后面的文章中详细讲解，此处先不用细究），所以 JavaScript中的行为和状态都能用属性来抽象。</p><p>下面这段代码其实就展示了普通属性和函数作为属性的一个例子，其中o是对象，d是一个属性，而函数f也是一个属性，尽管写法不太相同，但是对JavaScript来说，d和f就是两个普通属性。</p><pre><code class=\"language-JavaScript\">    var o = { \n        d: 1,\n        f() {\n            console.log(this.d);\n        }    \n    };\n</code></pre><p>所以，总结一句话来看，在JavaScript中，对象的状态和行为其实都被抽象为了属性。如果你用过Java，一定不要觉得奇怪，尽管设计思路有一定差别，但是二者都很好地表现了对象的基本特征：标识性、状态和行为。</p><p><strong>在实现了对象基本特征的基础上, 我认为，JavaScript中对象独有的特色是：对象具有高度的动态性，这是因为JavaScript赋予了使用者在运行时为对象添改状态和行为的能力。</strong></p><p>我来举个例子，比如，JavaScript 允许运行时向对象添加属性，这就跟绝大多数基于类的、静态的对象设计完全不同。如果你用过Java或者其它别的语言，肯定会产生跟我一样的感受。</p><p>下面这段代码就展示了运行时如何向一个对象添加属性，一开始我定义了一个对象o，定义完成之后，再添加它的属性b，这样操作是完全没问题的。</p><pre><code class=\"language-JavaScript\">    var o = { a: 1 };\n    o.b = 2;\n    console.log(o.a, o.b); //1 2\n</code></pre><p>为了提高抽象能力，JavaScript的属性被设计成比别的语言更加复杂的形式，它提供了数据属性和访问器属性（getter/setter）两类。</p><h2>JavaScript对象的两类属性</h2><p>对JavaScript来说，属性并非只是简单的名称和值，JavaScript用一组特征（attribute）来描述属性（property）。</p><p>先来说第一类属性，数据属性。它比较接近于其它语言的属性概念。数据属性具有四个特征。</p><ul>\n<li>value：就是属性的值。</li>\n<li>writable：决定属性能否被赋值。</li>\n<li>enumerable：决定for in能否枚举该属性。</li>\n<li>configurable：决定该属性能否被删除或者改变特征值。</li>\n</ul><p>在大多数情况下，我们只关心数据属性的值即可。</p><p>第二类属性是访问器（getter/setter）属性，它也有四个特征。</p><ul>\n<li>getter：函数或undefined，在取属性值时被调用。</li>\n<li>setter：函数或undefined，在设置属性值时被调用。</li>\n<li>enumerable：决定for in能否枚举该属性。</li>\n<li>configurable：决定该属性能否被删除或者改变特征值。</li>\n</ul><p>访问器属性使得属性在读和写时执行代码，它允许使用者在写和读属性时，得到完全不同的值，它可以视为一种函数的语法糖。</p><p>我们通常用于定义属性的代码会产生数据属性，其中的writable、enumerable、configurable都默认为true。我们可以使用内置函数getOwnPropertyDescriptor来查看，如以下代码所示：</p><pre><code class=\"language-JavaScript\">    var o = { a: 1 };\n    o.b = 2;\n    //a和b皆为数据属性\n    Object.getOwnPropertyDescriptor(o,\"a\") // {value: 1, writable: true, enumerable: true, configurable: true}\n    Object.getOwnPropertyDescriptor(o,\"b\") // {value: 2, writable: true, enumerable: true, configurable: true}\n</code></pre><p>我们在这里使用了两种语法来定义属性，定义完属性后，我们用JavaScript的API来查看这个属性，我们可以发现，这样定义出来的属性都是数据属性，writeable、enumerable、configurable都是默认值为true。</p><p>如果我们要想改变属性的特征，或者定义访问器属性，我们可以使用 Object.defineProperty，示例如下：</p><pre><code>    var o = { a: 1 };\n    Object.defineProperty(o, &quot;b&quot;, {value: 2, writable: false, enumerable: false, configurable: true});\n    //a和b都是数据属性，但特征值变化了\n    Object.getOwnPropertyDescriptor(o,&quot;a&quot;); // {value: 1, writable: true, enumerable: true, configurable: true}\n    Object.getOwnPropertyDescriptor(o,&quot;b&quot;); // {value: 2, writable: false, enumerable: false, configurable: true}\n    o.b = 3;\n    console.log(o.b); // 2\n</code></pre><p>这里我们使用了Object.defineProperty来定义属性，这样定义属性可以改变属性的writable和enumerable。</p><p>我们同样用Object.getOwnPropertyDescriptor来查看，发现确实改变了writable和enumerable特征。因为writable特征为false，所以我们重新对b赋值，b的值不会发生变化。</p><p>在创建对象时，也可以使用 get 和 set 关键字来创建访问器属性，代码如下所示：</p><pre><code>    var o = { get a() { return 1 } };\n\n    console.log(o.a); // 1\n</code></pre><p>访问器属性跟数据属性不同，每次访问属性都会执行getter或者setter函数。这里我们的getter函数返回了1，所以o.a每次都得到1。</p><p>这样，我们就理解了，实际上JavaScript 对象的运行时是一个“属性的集合”，属性以字符串或者Symbol为key，以数据属性特征值或者访问器属性特征值为value。</p><p>对象是一个属性的索引结构（索引结构是一类常见的数据结构，我们可以把它理解为一个能够以比较快的速度用key来查找value的字典）。我们以上面的对象o为例，你可以想象一下“a”是key。</p><p><code>{writable:true,value:1,configurable:true,enumerable:true}</code>是value。我们在前面的类型课程中，已经介绍了Symbol类型，能够以Symbol为属性名，这是JavaScript对象的一个特色。</p><p>讲到了这里，如果你理解了对象的特征，也就不难理解我开篇提出来的问题。</p><p>你甚至可以理解为什么会有“JavaScript不是面向对象”这样的说法了。这是由于JavaScript的对象设计跟目前主流基于类的面向对象差异非常大。</p><p>可事实上，这样的对象系统设计虽然特别，但是JavaScript提供了完全运行时的对象系统，这使得它可以模仿多数面向对象编程范式（下一节课我们会给你介绍JavaScript中两种面向对象编程的范式：基于类和基于原型），所以它也是正统的面向对象语言。</p><p>JavaScript语言标准也已经明确说明，JavaScript是一门面向对象的语言，我想标准中能这样说，正是因为JavaScript的高度动态性的对象系统。</p><p>所以，我们应该在理解其设计思想的基础上充分挖掘它的能力，而不是机械地模仿其它语言。</p><h2>结语</h2><p>要想理解JavaScript对象，必须清空我们脑子里“基于类的面向对象”相关的知识，回到人类对对象的朴素认知和面向对象的语言无关基础理论，我们就能够理解JavaScript面向对象设计的思路。</p><p>在这篇文章中，我从对象的基本理论出发，和你理清了关于对象的一些基本概念，分析了JavaScript对象的设计思路。接下来又从运行时的角度，介绍了JavaScript对象的具体设计：具有高度动态性的属性集合。</p><p>很多人在思考JavaScript对象时，会带着已有的“对象”观来看问题，最后的结果当然就是“剪不断理还乱”了。</p><p>在后面的文章中，我会继续带你探索JavaScript对象的一些机制，看JavaScript如何基于这样的动态对象模型设计自己的原型系统，以及你熟悉的函数、类等基础设施。</p><p>你还知道哪些面向对象语言，它们的面向对象系统是怎样的？请留言告诉我吧！</p><h1>猜你喜欢</h1><p><a href=\"https://time.geekbang.org/course/intro/163?utm_term=zeusMTA7L&amp;utm_source=app&amp;utm_medium=chongxueqianduan&amp;utm_campaign=163-presell\"><img src=\"https://static001.geekbang.org/resource/image/1a/08/1a49758821bdbdf6f0a8a1dc5bf39f08.jpg?wh=1032*330\" alt=\"unpreview\"></a></p>","comments":[{"had_liked":false,"id":64355,"user_name":"风清不扬","can_delete":false,"product_type":"c1","uid":1337780,"ip_address":"","ucode":"A05A2C3496AE85","user_header":"https://static001.geekbang.org/account/avatar/00/14/69/b4/8d9630ca.jpg","comment_is_top":false,"comment_ctime":1548751601,"is_pvip":false,"discussion_count":10,"race_medal":0,"score":"615729074929","product_id":100023201,"comment_content":"php 是世界上最好的編程語言","like_count":144,"discussions":[{"author":{"id":1639941,"avatar":"https://static001.geekbang.org/account/avatar/00/19/06/05/61807392.jpg","nickname":"不苦不累，生活无味","note":"","ucode":"AB1BA48E6E1FC8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":16244,"discussion_content":"引战无聊","likes_number":8,"is_delete":false,"is_hidden":false,"ctime":1568878889,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2062573,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/78/ed/289cb5f3.jpg","nickname":"先生","note":"","ucode":"0E8122CFC4D84C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":294036,"discussion_content":"语言只是工具，用的好不好，才是最好的程序员","likes_number":4,"is_delete":false,"is_hidden":false,"ctime":1595767540,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1177086,"avatar":"https://static001.geekbang.org/account/avatar/00/11/f5/fe/b5d9bf92.jpg","nickname":"小克斯汪","note":"","ucode":"E17FCF2A757E6F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":165037,"discussion_content":"无聊","likes_number":4,"is_delete":false,"is_hidden":false,"ctime":1581250387,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1538585,"avatar":"https://static001.geekbang.org/account/avatar/00/17/7a/19/76d6de60.jpg","nickname":"极客之家","note":"","ucode":"C4184D96F5B222","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":330906,"discussion_content":"你这是想哗众取宠，当马保国？小伙子，你不讲行业道德。。。你大意了","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1606728546,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1747502,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/aa/2e/3c7cb95d.jpg","nickname":"小斧","note":"","ucode":"E50115CCCA1E80","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1538585,"avatar":"https://static001.geekbang.org/account/avatar/00/17/7a/19/76d6de60.jpg","nickname":"极客之家","note":"","ucode":"C4184D96F5B222","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":351356,"discussion_content":"马宝国、您好","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1614254160,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":330906,"ip_address":""},"score":351356,"extra":""}]},{"author":{"id":1167046,"avatar":"https://static001.geekbang.org/account/avatar/00/11/ce/c6/958212b5.jpg","nickname":"sugar","note":"","ucode":"454538FF253B5F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":98230,"discussion_content":"以前玩过一个叫坦克世界的游戏，论坛里常有人这样调侃：“我效率低，但是我不坑！”","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1577150142,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":2394141,"avatar":"","nickname":"Geek_aec2f9","note":"","ucode":"280693A6606020","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1167046,"avatar":"https://static001.geekbang.org/account/avatar/00/11/ce/c6/958212b5.jpg","nickname":"sugar","note":"","ucode":"454538FF253B5F","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":340571,"discussion_content":"老兵","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1610064431,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":98230,"ip_address":""},"score":340571,"extra":""}]},{"author":{"id":2822968,"avatar":"https://static001.geekbang.org/account/avatar/00/2b/13/38/fcd05270.jpg","nickname":"轻度","note":"","ucode":"B4FFCBE4C44158","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":409595,"discussion_content":"“你是干什么的？”\n“我是干屁h屁的！”","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1635471596,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1981653,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKEDxLO0wLibicicGMZJYOo4RlGlIrdM565hfUqJxcZtnPQLYjEMXdzRaVicAf6sNVSiasF3XxT2BNMLDw/132","nickname":"米店杀猪","note":"","ucode":"1BD5C32FC70F62","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":269937,"discussion_content":"太对了哥，哥太对","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1589966577,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1961902,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epneC3LXv0Ve2tCXPfvsXtRb5StVicNCEHUSfzneLYUDJ03B6ocINHzeLf94aw0dEkjLShSdK9NUoA/132","nickname":"Geek_8d73e3","note":"","ucode":"FF89629117B96C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1981653,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKEDxLO0wLibicicGMZJYOo4RlGlIrdM565hfUqJxcZtnPQLYjEMXdzRaVicAf6sNVSiasF3XxT2BNMLDw/132","nickname":"米店杀猪","note":"","ucode":"1BD5C32FC70F62","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":281857,"discussion_content":"一听就是老猴子了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1591834623,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":269937,"ip_address":""},"score":281857,"extra":""}]}]},{"had_liked":false,"id":64257,"user_name":"37°C^boy","can_delete":false,"product_type":"c1","uid":1377346,"ip_address":"","ucode":"2194633443AED6","user_header":"https://static001.geekbang.org/account/avatar/00/15/04/42/c0be8d43.jpg","comment_is_top":false,"comment_ctime":1548727615,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"426750489919","product_id":100023201,"comment_content":"这篇讲的思路太好了，追本溯源，娓娓道来。在这里不光能学到知识活着重温知识，还有关于学习和讲授的方法lun","like_count":99},{"had_liked":false,"id":64442,"user_name":"hhk","can_delete":false,"product_type":"c1","uid":1138826,"ip_address":"","ucode":"72EC677FBDC79B","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/gvfibNc3Bol6DzLMG5ia9wSLVYseoq326iae7TczmgmBj9u3Jwt8c0hl9KSzY4GNTFn0ic9m1ibzicqJ3aGzeQemec2Q/132","comment_is_top":false,"comment_ctime":1548789294,"is_pvip":false,"discussion_count":3,"race_medal":0,"score":"242066957870","product_id":100023201,"comment_content":"关键点在于是否可以在运行时动态改变对象<br><br>结合文章通篇看下来，觉得 JS 的 OO 和他基于类的 OO 不同之处，在于 JS 可以在运行时修改对象，而 class based 的类只能预先全部定义好，我们并不能在运行时动态修改类。在我理解来说，条条大路通罗马，面向对象是罗马，class based 是一条路，prototype based 是另一条路。而且 Symbol 的出现，暴露出了许多内置接口，让 JS 又在这条路上走了更远一些。（以前上学背面向对象的三个特征，封装，继承，多态，现在看一下突然觉得很对。。。<br><br>像我这种年轻一点的前端，很可能就只是相对熟悉 JS 而已，对于其他语言更多都是道听途说，计算机基础也比较薄弱，所以用来比较其实比较难。<br>只知道 class based 的大概有 Java，C++, C#, Python<br><br>另外，好奇 Symbol 是怎么实现的，希望老师以后能大概讲讲啦。暂时只想到这些，其他的还在消化","like_count":57,"discussions":[{"author":{"id":1625743,"avatar":"https://static001.geekbang.org/account/avatar/00/18/ce/8f/eec9f6ca.jpg","nickname":"余生还要走多久","note":"","ucode":"F4F53F93FB3320","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":287751,"discussion_content":"我也不懂Symbol是什么东西","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1593527987,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2754230,"avatar":"","nickname":"Geek_553abe","note":"","ucode":"9544B406B40DD0","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":399554,"discussion_content":"我也不懂symbol","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1632990358,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2036260,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/12/24/c597722e.jpg","nickname":"玉树临风","note":"","ucode":"BD228945199157","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":344959,"discussion_content":"讲的太好了叭，同样好奇symbol怎么实现的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1611630366,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":64598,"user_name":"米斯特菠萝","can_delete":false,"product_type":"c1","uid":1259824,"ip_address":"","ucode":"8AFB7F59F9014A","user_header":"https://static001.geekbang.org/account/avatar/00/13/39/30/f7df6ba7.jpg","comment_is_top":false,"comment_ctime":1548832916,"is_pvip":false,"discussion_count":4,"race_medal":0,"score":"169052557460","product_id":100023201,"comment_content":"好像winter老师没有回答过同学的提问，是我没看见吗？","like_count":39,"discussions":[{"author":{"id":1259824,"avatar":"https://static001.geekbang.org/account/avatar/00/13/39/30/f7df6ba7.jpg","nickname":"米斯特菠萝","note":"","ucode":"8AFB7F59F9014A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":279476,"discussion_content":"今天突然想起以前一个东西，wc！！！你也在这里啊 哈哈哈","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1591351095,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1818521,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/bf/99/27be7b11.jpg","nickname":"🌱","note":"","ucode":"ACDF731B94B392","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":181087,"discussion_content":"前提是有能问出值得回答的问题的同学","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582337017,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1997806,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/7b/ee/53124b75.jpg","nickname":"东坡芝士","note":"","ucode":"FF267B7E865AD2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1818521,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/bf/99/27be7b11.jpg","nickname":"🌱","note":"","ucode":"ACDF731B94B392","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":312291,"discussion_content":"值得回答不是很主观吗","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1602654051,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":181087,"ip_address":""},"score":312291,"extra":""}]},{"author":{"id":1659595,"avatar":"https://static001.geekbang.org/account/avatar/00/19/52/cb/ccde2022.jpg","nickname":"菠菜🤕","note":"","ucode":"6625BEF42E1FCB","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":15017,"discussion_content":"伯乐同学","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1568796185,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":64714,"user_name":"张汉桂-东莞","can_delete":false,"product_type":"c1","uid":1116277,"ip_address":"","ucode":"38657ABA59382A","user_header":"https://static001.geekbang.org/account/avatar/00/11/08/75/512b9f26.jpg","comment_is_top":false,"comment_ctime":1548866246,"is_pvip":false,"discussion_count":3,"race_medal":0,"score":"151872721606","product_id":100023201,"comment_content":"    var o = { get a() { return 1 } };<br>    console.log(o.a); &#47;&#47; 1<br><br>看到这段我就感到值了。我目前在用layui框架，根据layui文档的描述，只有执行var form = layui.form;这一句时才会下载form.js这个文件，我一直没能理解。这篇文章解除了我的疑惑，原来调用getter时可以不写括号()。谢谢老师！","like_count":35,"discussions":[{"author":{"id":1160107,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTI7iakTvMwXWBHCK6WicIV2M3yQMZ8BtBgYgzARcEjbEtcWfKsQ2JqpZianKibZ2D7l1D3rwyTOL56Pzw/132","nickname":"Jackchoumine","note":"","ucode":"B04B72E0D06FA8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":10834,"discussion_content":"let obj = {};\n// let _a=&#34;&#34;\nObject.defineProperty(obj, &#34;a&#34;, {\n  // value: 123,\n  // writable:true,\n  configurable: true,\n  // get: function() {\n  //   return &#34;这是访问器属性&#34;;\n  // }\n  set: function(newValue) {\n    console.log(newValue);\n    this.a = newValue;\n  }\n});\nconsole.log(obj);\nconsole.log(&#34;before&#34;, obj.a);\nobj.a = &#34;aaaa&#34;;\n这样报错了：\n Uncaught RangeError: Maximum call stack size exceeded","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1568316404,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1639941,"avatar":"https://static001.geekbang.org/account/avatar/00/19/06/05/61807392.jpg","nickname":"不苦不累，生活无味","note":"","ucode":"AB1BA48E6E1FC8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1160107,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTI7iakTvMwXWBHCK6WicIV2M3yQMZ8BtBgYgzARcEjbEtcWfKsQ2JqpZianKibZ2D7l1D3rwyTOL56Pzw/132","nickname":"Jackchoumine","note":"","ucode":"B04B72E0D06FA8","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":16249,"discussion_content":"你写个递归搞什么","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1568879406,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":10834,"ip_address":""},"score":16249,"extra":""},{"author":{"id":1384799,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eocyE7pjenvDhNpu26cNyS0HxHPeex6XLCzDOWT8hW2sx675hzeq3ssicObMdKQlicibNrwUPneFMGmg/132","nickname":"五十四","note":"","ucode":"1CCFD2BF844CB3","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1160107,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTI7iakTvMwXWBHCK6WicIV2M3yQMZ8BtBgYgzARcEjbEtcWfKsQ2JqpZianKibZ2D7l1D3rwyTOL56Pzw/132","nickname":"Jackchoumine","note":"","ucode":"B04B72E0D06FA8","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":21426,"discussion_content":"重复set当然会一直触发setter","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1569483111,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":10834,"ip_address":""},"score":21426,"extra":""}]}]},{"had_liked":false,"id":77731,"user_name":"王小宏music","can_delete":false,"product_type":"c1","uid":1378199,"ip_address":"","ucode":"4A892415C41291","user_header":"https://static001.geekbang.org/account/avatar/00/15/07/97/68388d28.jpg","comment_is_top":false,"comment_ctime":1552987860,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"104632202964","product_id":100023201,"comment_content":"var o = { get a() { return 1 } }<br>console.log(o.a); &#47;&#47; 1<br>肯定有同学对这里有疑问，解释一下吧， 这里边应用到了ES6的getter,setter属性， 为啥o.a，没写小括号呢？ 因为每次访问get，函数返回为1，作为一个value返回的，而非Obj中，调用某个方法，所以才没写成Obj.fun()的方式， 另外 老师下边有一句总结，很容易遗漏 ，每次访问，访问器属性，都会执行get,set方法","like_count":24,"discussions":[{"author":{"id":2104634,"avatar":"https://static001.geekbang.org/account/avatar/00/20/1d/3a/4af9e7cc.jpg","nickname":"hh","note":"","ucode":"B5F665D1A449BE","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":296333,"discussion_content":"额，纠正一下getter和setter方法是es5的。存取器属性不具有值(value)和可写性(writable)，他的值和可写性由 getter 和 setter 方法决定。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1596512457,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":64208,"user_name":"bitmxy","can_delete":false,"product_type":"c1","uid":1388126,"ip_address":"","ucode":"CF2AC24200F961","user_header":"https://wx.qlogo.cn/mmopen/vi_32/3Uk6JicOE0D8BC5SQbPHlIZ33llRPTmkDquCOLW1d5gibicrEb5P1UncZnBRAv9KPdjYyuAzs263KdXWQwp0Hp76A/132","comment_is_top":false,"comment_ctime":1548718604,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"104627933708","product_id":100023201,"comment_content":"JS的設計者原本是個Lisp程序員而且不怎麼喜歡Java面向對象，所以採用了原型。在當時基於原型比基於類的做法要靈活很多。<br>","like_count":24,"discussions":[{"author":{"id":1750628,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJUaOs097vUd4wh5GCqnPkHM6oR2TMIOI0xQEooL2EH6DpzdjsQbyRhsJuD0AyG3QkFcWq5icZlgmA/132","nickname":"rl58xz","note":"","ucode":"3409114D447098","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":540388,"discussion_content":"不喜欢java是对的，但是使用原型的原因是可能更动态吧，js的设计理念就是更动态简洁。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1640052125,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1639941,"avatar":"https://static001.geekbang.org/account/avatar/00/19/06/05/61807392.jpg","nickname":"不苦不累，生活无味","note":"","ucode":"AB1BA48E6E1FC8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":16256,"discussion_content":"谁说的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1568879639,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":66858,"user_name":"如斯","can_delete":false,"product_type":"c1","uid":1393087,"ip_address":"","ucode":"62A6244C4717D0","user_header":"https://static001.geekbang.org/account/avatar/00/15/41/bf/3afa1344.jpg","comment_is_top":false,"comment_ctime":1550030330,"is_pvip":false,"replies":[{"id":"23846","content":"这个问题问的很好，是这个东西在作怪：<br><br>typeof Object(Symbol(&quot;a&quot;))[Symbol.toPrimitive]()<br><br>","user_name":"作者回复","comment_id":66858,"uid":"1268524","ip_address":"","utype":1,"ctime":1550148807,"user_name_real":"winter"}],"discussion_count":5,"race_medal":0,"score":"96039310842","product_id":100023201,"comment_content":"有个疑惑哈，讲道理symbolObj对象也是对象。也可以调用symbolObj.toString方法（ symbolObj.toString()  &#47;&#47; &quot;Symbol(a)&quot; ）。<br>但为什么会 symbolObj+&#39;&#39; 会报错呢。<br>Uncaught TypeError: Cannot convert a Symbol value to a string at &lt;anonymous&gt;:1:10","like_count":23,"discussions":[{"author":{"id":1268524,"avatar":"https://static001.geekbang.org/account/avatar/00/13/5b/2c/12bfd3cd.jpg","nickname":"winter","note":"","ucode":"2B068EDEAFEB56","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":438948,"discussion_content":"这个问题问的很好，是这个东西在作怪：\n\ntypeof Object(Symbol(&amp;quot;a&amp;quot;))[Symbol.toPrimitive]()\n\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1550148807,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1580314,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eqYLIk6CAiaQQN9NVQUFuWyMz5ZsEvLcbWgibXSBXPiaYrqpggVgIRHMtoa8qCmoe4oSvico6sriaT4iaMg/132","nickname":"Geek_666","note":"","ucode":"C9882F35C0ACF5","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":186605,"discussion_content":"作者回答的typeof Object(Symbol(&#34;a&#34;))[Symbol.toPrimitive]()这句很精辟, \nsymbolObj + &#34;&#34; 会对symbolObj进行拆箱转换, 因为symbolObj对象上的Symbol.toPrimitive这个属性有值, 所以拆箱转换优先调用symbolObj[Symbol.toPrimitive]()而不是symbolObj.toString() ,调用结果是symbol类型, 最终symbol 加字符串会报错","likes_number":19,"is_delete":false,"is_hidden":false,"ctime":1582697859,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1624452,"avatar":"https://static001.geekbang.org/account/avatar/00/18/c9/84/899edb1f.jpg","nickname":"CatLoVEr","note":"","ucode":"9B8BA3321873A0","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":183839,"discussion_content":"let sy = Symbol(&#39;sy&#39;)\ntypeof sy.valueOf() // symbol\ntypeof sy.toString() // string\nsy[Symbol.toPrimitive]() === sy.valueOf() // true \n首先 Symbol.toPrimitive 返回的是 valueOf 的值\n然后问题是 symbol 与任何类型相加 结果都是 无法进行转换 不管是变成字符串","likes_number":4,"is_delete":false,"is_hidden":false,"ctime":1582524078,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1025093,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a4/45/3cb5cdc6.jpg","nickname":"拾迹","note":"","ucode":"38F367B77FF2D7","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":4550,"discussion_content":"这里可以参照老师讲过的拆箱转换，因为会先调用ToPrimitive，其返回值参与运算会报错","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1565536141,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1226692,"avatar":"https://static001.geekbang.org/account/avatar/00/12/b7/c4/422813bf.jpg","nickname":"蒲公英","note":"","ucode":"076183447A1D9E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":1463,"discussion_content":"Symbol 是一个原始类型的值，不是对象。Symbol 值不能与其他类型的值进行运算","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1562639547,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":65188,"user_name":"_(:з」∠)_","can_delete":false,"product_type":"c1","uid":1387478,"ip_address":"","ucode":"B4A43EB418A604","user_header":"https://static001.geekbang.org/account/avatar/00/15/2b/d6/945f0d82.jpg","comment_is_top":false,"comment_ctime":1549097531,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"70268574267","product_id":100023201,"comment_content":"太难了(눈_눈)<br>完全没看懂面向对象，有没有更加数学一点更加精确一点的定义啊。<br>( •̥́ ˍ •̀ू )","like_count":16,"discussions":[{"author":{"id":1750628,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJUaOs097vUd4wh5GCqnPkHM6oR2TMIOI0xQEooL2EH6DpzdjsQbyRhsJuD0AyG3QkFcWq5icZlgmA/132","nickname":"rl58xz","note":"","ucode":"3409114D447098","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":274122,"discussion_content":"对象是哲学层面的，O(∩_∩)O哈哈~","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1590543483,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1375156,"avatar":"https://static001.geekbang.org/account/avatar/00/14/fb/b4/afbaab2f.jpg","nickname":"徐三响","note":"","ucode":"6B30D451EBD60D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":83716,"discussion_content":"程序员缺乏抽象思维，很危险。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1576459660,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":66603,"user_name":"咩啊","can_delete":false,"product_type":"c1","uid":1383703,"ip_address":"","ucode":"5282B0E008AE9D","user_header":"https://static001.geekbang.org/account/avatar/00/15/1d/17/94e4c63a.jpg","comment_is_top":false,"comment_ctime":1549964963,"is_pvip":false,"discussion_count":4,"race_medal":0,"score":"65974474403","product_id":100023201,"comment_content":"请问“运行时”是指什么？一开始我以为是指“程序执行的时候”这一时间状态，但是在正文倒数第三段又有“但是 JavaScript 提供了完全运行时的对象系统，这使得它可以模仿多数面向对象编程范式”这一句，这里的“完全运行时”是什么意思？我上网查了一下，好像没有比较符合的解析。","like_count":16,"discussions":[{"author":{"id":1375156,"avatar":"https://static001.geekbang.org/account/avatar/00/14/fb/b4/afbaab2f.jpg","nickname":"徐三响","note":"","ucode":"6B30D451EBD60D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":83826,"discussion_content":"完全运行时是相对于其他一些基于类的面向对象语言来说的，比如java的对象系统分为编译阶段和运行时，运行时是“不允许”动态修改类的方法的，而javascript可以动态篡改对象里的方法，因为JS面向对象的实现，是“完全运行时的”。","likes_number":10,"is_delete":false,"is_hidden":false,"ctime":1576467757,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1608383,"avatar":"https://static001.geekbang.org/account/avatar/00/18/8a/bf/3f7c45c9.jpg","nickname":"X_L～","note":"","ucode":"6BD8C24750F86B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":373860,"discussion_content":"就是程序代码跑起来的时候，js任意随意的操控一个类 内部的属性和方法，而java 等语言却不行，只能通过事先预设好的进行，或者是通过反射等技术手段进行","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1620895793,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1141913,"avatar":"https://static001.geekbang.org/account/avatar/00/11/6c/99/c0572424.jpg","nickname":"🐑郑星星","note":"","ucode":"1676E1C5ECD6EB","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":41930,"discussion_content":"我以为是完全的运行时的对象系统","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1572535354,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1160107,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTI7iakTvMwXWBHCK6WicIV2M3yQMZ8BtBgYgzARcEjbEtcWfKsQ2JqpZianKibZ2D7l1D3rwyTOL56Pzw/132","nickname":"Jackchoumine","note":"","ucode":"B04B72E0D06FA8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":10652,"discussion_content":"我也不懂。。runtime??","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1568299618,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":64217,"user_name":"庖丁","can_delete":false,"product_type":"c1","uid":1390054,"ip_address":"","ucode":"AC43E049C5BDFF","user_header":"https://static001.geekbang.org/account/avatar/00/15/35/e6/5a05a2fb.jpg","comment_is_top":false,"comment_ctime":1548720541,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"53088328093","product_id":100023201,"comment_content":"我们应该在理解其设计思想的基础上充分挖掘它的能力，而不是机械地模仿其它语言。","like_count":12},{"had_liked":false,"id":139204,"user_name":"next_one","can_delete":false,"product_type":"c1","uid":1684851,"ip_address":"","ucode":"BF888DDFA0E739","user_header":"https://static001.geekbang.org/account/avatar/00/19/b5/73/7ed0cfb7.jpg","comment_is_top":false,"comment_ctime":1570586654,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"48815226910","product_id":100023201,"comment_content":"我理解的，重学前端专栏的意义是，从语言使用者的角度，转到语言实现者的角度，来看待语言的发展，通过对比其他语言，来阐述js语言本身的特性。重学的意义在于，多数开发者是语言使用者，而没有从语言实现者的角度，对语言本身有思考。有一种“不识庐山真面目，只缘身在此山中”的感觉。简单说，就是大多数人就是用用，没有想过（或者没有能力）去了解语言本身的来龙去脉。","like_count":11},{"had_liked":false,"id":64261,"user_name":"CC","can_delete":false,"product_type":"c1","uid":1021014,"ip_address":"","ucode":"2B732860C4231B","user_header":"https://static001.geekbang.org/account/avatar/00/0f/94/56/4b8395f6.jpg","comment_is_top":false,"comment_ctime":1548728035,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"48793368291","product_id":100023201,"comment_content":"我暂时接触的编程有限，JavaScript 是我接触的第一个面向对象语言。<br><br>由于缺少对其他语言的了解，winter 老师在文中的横向对比，感觉能让我更容易理解 JavaScript 的设计思路，以及 Object 这么设计的原因。<br><br>关于ECMAScript 2015 加入的 “类”，其实它并不是 JavaScript 新增的面向对象模式，它主要是语法糖的作用，只是一种特殊的函数，背后仍然是基于原型的设计思路。<br>","like_count":12},{"had_liked":false,"id":65006,"user_name":"费马","can_delete":false,"product_type":"c1","uid":1190201,"ip_address":"","ucode":"BCAAF9C16F0CC5","user_header":"https://static001.geekbang.org/account/avatar/00/12/29/39/0aec7827.jpg","comment_is_top":false,"comment_ctime":1548998509,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"40203704173","product_id":100023201,"comment_content":"这才理解数值属性和访问器属性！赞","like_count":9},{"had_liked":false,"id":69730,"user_name":"朋友","can_delete":false,"product_type":"c1","uid":1434695,"ip_address":"","ucode":"A169D5F3BCA769","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLCbzuoGvE6TMW7MIvL2RcKDN3omNrpss65wS6kabdYnhk33xtXUUeCTyjYRM6TUaQCibURWxaLGFA/132","comment_is_top":false,"comment_ctime":1550821512,"is_pvip":false,"replies":[{"id":"25826","content":"vue2.0确实用到了这个。","user_name":"作者回复","comment_id":69730,"uid":"1268524","ip_address":"","utype":1,"ctime":1551424826,"user_name_real":"winter"}],"discussion_count":3,"race_medal":0,"score":"31615592584","product_id":100023201,"comment_content":"getter setter实际应用的例子有哪些？ vue的数据，视图双向绑定算吗？","like_count":7,"discussions":[{"author":{"id":1268524,"avatar":"https://static001.geekbang.org/account/avatar/00/13/5b/2c/12bfd3cd.jpg","nickname":"winter","note":"","ucode":"2B068EDEAFEB56","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":440249,"discussion_content":"vue2.0确实用到了这个。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1551424826,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1579987,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/9zDgoFiclCic368WIk5GQskZ0mvaZauiaWJOUz6kWGMFaer2FBAWuBibof43YFTO2O5m79cjAvloNAP9aicSo3gSnDg/132","nickname":"Geek_5541c1","note":"","ucode":"627947E7BED072","race_medal":1,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":7841,"discussion_content":"computed 中的属性有getter 和setter ","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567689236,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":2341970,"avatar":"https://static001.geekbang.org/account/avatar/00/23/bc/52/23e7f154.jpg","nickname":"暗涌","note":"","ucode":"C19510B77133F7","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1579987,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/9zDgoFiclCic368WIk5GQskZ0mvaZauiaWJOUz6kWGMFaer2FBAWuBibof43YFTO2O5m79cjAvloNAP9aicSo3gSnDg/132","nickname":"Geek_5541c1","note":"","ucode":"627947E7BED072","race_medal":1,"user_type":1,"is_pvip":false},"discussion":{"id":329566,"discussion_content":"我最近刚用到$store作为中转站存个数。。。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1606404998,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":7841,"ip_address":""},"score":329566,"extra":""}]}]},{"had_liked":false,"id":64216,"user_name":"Scorpio","can_delete":false,"product_type":"c1","uid":1374652,"ip_address":"","ucode":"2DF4DEC831D4C0","user_header":"https://static001.geekbang.org/account/avatar/00/14/f9/bc/cbc0207b.jpg","comment_is_top":false,"comment_ctime":1548720535,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"31613491607","product_id":100023201,"comment_content":"感觉js出es6后，和java更像了。。","like_count":7,"discussions":[{"author":{"id":1608383,"avatar":"https://static001.geekbang.org/account/avatar/00/18/8a/bf/3f7c45c9.jpg","nickname":"X_L～","note":"","ucode":"6BD8C24750F86B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":373861,"discussion_content":"哈哈 动态语言天天想规范化 标准化 而 java这些静态语言 则 天天想 花里胡哨化","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1620895873,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":64512,"user_name":"白嗣","can_delete":false,"product_type":"c1","uid":1140026,"ip_address":"","ucode":"4F2AC31CEA2CA1","user_header":"https://static001.geekbang.org/account/avatar/00/11/65/3a/48f3f4e8.jpg","comment_is_top":false,"comment_ctime":1548814197,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"27318617973","product_id":100023201,"comment_content":"老师是否按照犀牛书的顺序讲解😁","like_count":6},{"had_liked":false,"id":64424,"user_name":"Smallfly","can_delete":false,"product_type":"c1","uid":1013841,"ip_address":"","ucode":"D388D5E0249A69","user_header":"https://static001.geekbang.org/account/avatar/00/0f/78/51/4790e13e.jpg","comment_is_top":false,"comment_ctime":1548773290,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"27318577066","product_id":100023201,"comment_content":"基于类的面向对象使用的是继承，而 Javascript 更像是组合。","like_count":6},{"had_liked":false,"id":230690,"user_name":"Mirror","can_delete":false,"product_type":"c1","uid":1395814,"ip_address":"","ucode":"DC2BB0778BA657","user_header":"https://static001.geekbang.org/account/avatar/00/15/4c/66/925c3289.jpg","comment_is_top":false,"comment_ctime":1593454483,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"14478356371","product_id":100023201,"comment_content":"做了几年的前端开发，算是老学生不算优等生。越来越讨厌JS目前的状态，被赋予了太多的责任和设计思想，借鉴了太多其他语言，新特性、新玩法层出不穷。     前端开发者太累了，真的太累了 。 一门被拿来玩玩的脚本语言承受了太多它不该承受的... ","like_count":4,"discussions":[{"author":{"id":1564786,"avatar":"https://static001.geekbang.org/account/avatar/00/17/e0/72/6e0314e7.jpg","nickname":"Ace","note":"","ucode":"C77191A6B18845","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":315004,"discussion_content":"同感！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1603231375,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":67566,"user_name":"靠人品去赢","can_delete":false,"product_type":"c1","uid":1301286,"ip_address":"","ucode":"7A20F9EBE847E1","user_header":"https://static001.geekbang.org/account/avatar/00/13/db/26/54f2c164.jpg","comment_is_top":false,"comment_ctime":1550197882,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"14435099770","product_id":100023201,"comment_content":"关于JS可以动态添加属性，反之Java就不行，分分钟给你一个报错。这个平时没注意，一对比确实觉得挺有意思。","like_count":3},{"had_liked":false,"id":230219,"user_name":"宋捷","can_delete":false,"product_type":"c1","uid":1333006,"ip_address":"","ucode":"7905BABF1D8DDD","user_header":"https://static001.geekbang.org/account/avatar/00/14/57/0e/36847d8c.jpg","comment_is_top":false,"comment_ctime":1593315675,"is_pvip":false,"discussion_count":3,"race_medal":0,"score":"10183250267","product_id":100023201,"comment_content":"什么时候Symbol作为属性的键去使用呢？实际的应用场景还比较模糊想不到，有同学和老师简单提示下吗？","like_count":2,"discussions":[{"author":{"id":2584128,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/cviaNUiaiaMq9eicjZTupibehtBk1sY9NKWuIsYjB5514Sj1IV3oKIhjicerlnl2FFicW1BEUUqHU1qn0lRdq8bWOzyag/132","nickname":"Geek_657e73","note":"","ucode":"E84B2E67C4C515","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":378324,"discussion_content":"es6的对象系统都是symbol作为属性的","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1623162090,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2922741,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLRCFV3dRy76oShPm5LFtYBZA81vGlRUtx9mplAOZIGTvBAByTia3qViajOFPORdAp0HFYGJWW95SIw/132","nickname":"Geek_8b9503","note":"","ucode":"E96120E65149E1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":555103,"discussion_content":"因为这样不会重复，有更多的可能性","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1646746678,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2033513,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/07/69/43cf2251.jpg","nickname":"Alan He","note":"","ucode":"A0780F4619D388","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":353267,"discussion_content":"同问","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1615103789,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":133022,"user_name":"Jackchoumine","can_delete":false,"product_type":"c1","uid":1160107,"ip_address":"","ucode":"B04B72E0D06FA8","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTI7iakTvMwXWBHCK6WicIV2M3yQMZ8BtBgYgzARcEjbEtcWfKsQ2JqpZianKibZ2D7l1D3rwyTOL56Pzw/132","comment_is_top":false,"comment_ctime":1568316339,"is_pvip":false,"replies":[{"id":"54039","content":"this.a = newValue; 这句递归调用了setter","user_name":"作者回复","comment_id":133022,"uid":"1268524","ip_address":"","utype":1,"ctime":1570772825,"user_name_real":"winter"}],"discussion_count":1,"race_medal":0,"score":"10158250931","product_id":100023201,"comment_content":"let obj = {};<br>&#47;&#47; let _a=&quot;&quot;<br>Object.defineProperty(obj, &quot;a&quot;, {<br>  &#47;&#47; value: 123,<br>  &#47;&#47; writable:true,<br>  configurable: true,<br>  &#47;&#47; get: function() {<br>  &#47;&#47;   return &quot;这是访问器属性&quot;;<br>  &#47;&#47; }<br>  set: function(newValue) {<br>    console.log(newValue);<br>    this.a = newValue;<br>  }<br>});<br>Object.defineProperty(obj, &quot;hi&quot;, {<br>  value: function() {<br>    console.log(&quot;Hello&quot;);<br>  },<br>  configurable: false<br>});<br>console.log(obj);<br>console.log(&quot;before&quot;, obj.a);<br>obj.a = &quot;aaaa&quot;;<br><br>为甚么这样报错了：xJAjOnELvGnk:55 Uncaught RangeError: Maximum call stack size exceeded.","like_count":2,"discussions":[{"author":{"id":1268524,"avatar":"https://static001.geekbang.org/account/avatar/00/13/5b/2c/12bfd3cd.jpg","nickname":"winter","note":"","ucode":"2B068EDEAFEB56","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":467223,"discussion_content":"this.a = newValue; 这句递归调用了setter","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1570772825,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":82905,"user_name":"cnzhujie","can_delete":false,"product_type":"c1","uid":1052552,"ip_address":"","ucode":"047955CDDE6153","user_header":"https://static001.geekbang.org/account/avatar/00/10/0f/88/6a262dc8.jpg","comment_is_top":false,"comment_ctime":1554346710,"is_pvip":false,"replies":[{"id":"30365","content":"不是的，基于类的面相对象只是一个派系。","user_name":"作者回复","comment_id":82905,"uid":"1268524","ip_address":"","utype":1,"ctime":1554805221,"user_name_real":"winter"}],"discussion_count":6,"race_medal":0,"score":"10144281302","product_id":100023201,"comment_content":"个人理解：面向对象就是万物皆为类，离开了类就活不了；比如Java里面，就算只写个main函数也要用class包裹起来。而基于对象说的是这门语言可以使用类和对象，但不使用类和对象也照样玩的转，比如c++、php、js。","like_count":2,"discussions":[{"author":{"id":1268524,"avatar":"https://static001.geekbang.org/account/avatar/00/13/5b/2c/12bfd3cd.jpg","nickname":"winter","note":"","ucode":"2B068EDEAFEB56","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":445773,"discussion_content":"不是的，基于类的面相对象只是一个派系。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1554805221,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1375156,"avatar":"https://static001.geekbang.org/account/avatar/00/14/fb/b4/afbaab2f.jpg","nickname":"徐三响","note":"","ucode":"6B30D451EBD60D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":83831,"discussion_content":"在编程领域，面向对象只是一个抽象概念，每门语言有其对“面向对象”的实现，正如winter老师所讲，“基于类”的面向对象实现，只是其中一个派系。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1576468308,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1192961,"avatar":"https://static001.geekbang.org/account/avatar/00/12/34/01/30ca98e6.jpg","nickname":"arronK","note":"","ucode":"58DC6FBF2CF0C1","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":328957,"discussion_content":"类只是一个模板。实际被使用的对象，可以基于模板创建，也可以基于其它方式创建。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1606285676,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1042089,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/e6/a9/b459efb7.jpg","nickname":"如故","note":"","ucode":"F6895792309942","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":281944,"discussion_content":"所以说 面向对象只是一种思想 类只是用来实现面向对象的一种方式 还有很多其他方式来实现面向对象？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1591844964,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1564786,"avatar":"https://static001.geekbang.org/account/avatar/00/17/e0/72/6e0314e7.jpg","nickname":"Ace","note":"","ucode":"C77191A6B18845","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1042089,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/e6/a9/b459efb7.jpg","nickname":"如故","note":"","ucode":"F6895792309942","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":315003,"discussion_content":"严格来说面向对象是一种编程范式，对应的另一种编程范式是面向过程。\n\n编程的本质实际上就是对人类现实世界的信息进行抽象，抽象成计算机可以理解的信息，面向对象就是一种抽象的方式。\n\n实现面向对象的机制主流都是基于类的，典型java,c++；另一种小众的就是基于原型，典型javascript。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1603231100,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":281944,"ip_address":""},"score":315003,"extra":""}]},{"author":{"id":1130053,"avatar":"https://static001.geekbang.org/account/avatar/00/11/3e/45/3879f334.jpg","nickname":"Tron","note":"","ucode":"2C4FC68C80A7DD","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":278868,"discussion_content":"面向对象只是个概念，有时并不需要类, 像golang里面就是通过struct + 函数 + 组合 来实现面向对象","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1591247085,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":74200,"user_name":"桂马","can_delete":false,"product_type":"c1","uid":1450689,"ip_address":"","ucode":"DC39D216449462","user_header":"https://static001.geekbang.org/account/avatar/00/16/22/c1/a662fadf.jpg","comment_is_top":false,"comment_ctime":1552140763,"is_pvip":false,"discussion_count":3,"race_medal":0,"score":"10142075355","product_id":100023201,"comment_content":"js是一个具有动态性的面向对象的语言，ES2015前主要以“prototype”面向对象编程，ES2015问世后主要以“class”实现面向对象编程，我想super也是借鉴Java的，以后js可能还会有interface，那就更灵活了","like_count":2,"discussions":[{"author":{"id":1438506,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJ9Y45QovHzGatCRAIdAaCmWuQIZv88zdDeWsbR8w58FX34a4g5PPdna4f5phodeKDia2kWNR9mjJA/132","nickname":"Friday","note":"","ucode":"AAC10610CF848D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":385622,"discussion_content":"<script>alert(&#39;test!&#39;)</script>","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1627183157,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1042089,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/e6/a9/b459efb7.jpg","nickname":"如故","note":"","ucode":"F6895792309942","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":281945,"discussion_content":"但是本质没有改变吧 还是基于原型","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1591845015,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1367097,"avatar":"https://static001.geekbang.org/account/avatar/00/14/dc/39/d1a02f3f.jpg","nickname":"singlestep","note":"","ucode":"088A9A97695F7F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":268464,"discussion_content":"class 只是一个语法糖, 本质还是 prototype ","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1589784809,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":67317,"user_name":"小小代码","can_delete":false,"product_type":"c1","uid":1290642,"ip_address":"","ucode":"F3D4E2C23FC9BD","user_header":"https://static001.geekbang.org/account/avatar/00/13/b1/92/f3dabcb1.jpg","comment_is_top":false,"comment_ctime":1550129179,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10140063771","product_id":100023201,"comment_content":"个人感觉JavaScript基于原型的面向对象设计比Java基于类的面向对象设计灵活","like_count":2},{"had_liked":false,"id":340735,"user_name":"Geek_f2de52","can_delete":false,"product_type":"c1","uid":2752272,"ip_address":"","ucode":"7FD93902A174A2","user_header":"","comment_is_top":false,"comment_ctime":1649086481,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"5944053777","product_id":100023201,"comment_content":"这篇看了之后真的颇有感触，学到了。javascript是一种面向对象的语言，但是又不是和我们熟知的java和C++语言采用完全相同的构建思路。java和C++的面向对象定义不同的静态类型，实例化产生对象。而javascript的对象是一个高度动态灵活的对象，可以在运行时动态增删属性。","like_count":1},{"had_liked":false,"id":256940,"user_name":"东坡芝士","can_delete":false,"product_type":"c1","uid":1997806,"ip_address":"","ucode":"FF267B7E865AD2","user_header":"https://static001.geekbang.org/account/avatar/00/1e/7b/ee/53124b75.jpg","comment_is_top":false,"comment_ctime":1603789778,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5898757074","product_id":100023201,"comment_content":"JS是面向对象，只是不同于其他主流面向对象的设计，在继承和多态特性上的编程范式不一致。他符合的是面向对象的思想，语言标准。","like_count":1},{"had_liked":false,"id":255226,"user_name":"半橙汁","can_delete":false,"product_type":"c1","uid":1477902,"ip_address":"","ucode":"BB93BB9CCB7FA2","user_header":"https://static001.geekbang.org/account/avatar/00/16/8d/0e/5e97bbef.jpg","comment_is_top":false,"comment_ctime":1603285201,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5898252497","product_id":100023201,"comment_content":"编程语言真就是一门通，门门通，就好像武侠小说里的顶尖高手，一法通，万法皆通~","like_count":1},{"had_liked":false,"id":232330,"user_name":"余生还要走多久","can_delete":false,"product_type":"c1","uid":1625743,"ip_address":"","ucode":"F4F53F93FB3320","user_header":"https://static001.geekbang.org/account/avatar/00/18/ce/8f/eec9f6ca.jpg","comment_is_top":false,"comment_ctime":1593958589,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5888925885","product_id":100023201,"comment_content":"由class派系去设计面向对象的并不能进行运行时修改类，而原型就可以，这就是两者的根本区别，那么还有什么区别，通过这个点会引发出很多的区别，另外利用原型设计，肯定性能查找方面比java好，但是可能不太适合做大型数据密集项目吧，这就是为什么后台语言不采用这种，不知道我说的对不对","like_count":1},{"had_liked":false,"id":232096,"user_name":"极客时间","can_delete":false,"product_type":"c1","uid":1545586,"ip_address":"","ucode":"A86DCA2384C6C0","user_header":"https://static001.geekbang.org/account/avatar/00/17/95/72/24d249cf.jpg","comment_is_top":false,"comment_ctime":1593853731,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5888821027","product_id":100023201,"comment_content":"JavaScript (JS) is a lightweight interpreted or JIT-compiled programming language with first-class functions. While it is most well-known as the scripting language for Web pages, many non-browser environments also use it, such as Node.js, Apache CouchDB and Adobe Acrobat. JavaScript is a prototype-based, multi-paradigm, dynamic language, supporting object-oriented, imperative, and declarative (e.g. functional programming) styles.","like_count":1},{"had_liked":false,"id":218262,"user_name":"非要我换名字","can_delete":false,"product_type":"c1","uid":2006936,"ip_address":"","ucode":"C0299798D0E429","user_header":"http://thirdwx.qlogo.cn/mmopen/ibxcyEpkUnt01g86jRQDQg8QJZibm5m5akHibeu0YG1TSYczsnSLkamG5LvRm3kGPYS21u6zu2h4KpY5KQS2BWjxviaJtcibI3ZzA/132","comment_is_top":false,"comment_ctime":1589766971,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"5884734267","product_id":100023201,"comment_content":"看了第一遍没懂，又重头仔细的看了一遍，最后终于明白了为什么javascript是面向对象了，因为它符合面向对象的特点，而且还具有自己独特的特点，可以在运行时改变和添加属性。和别的面向对象语言不同的是它们使用描述方式不同，java使用的是类，而javascript使用的是“原型”。同时看评论也学到不少，我也明白了layui中的调用方式了layui.from<br><br>花了一个半小时来消化这篇文章","like_count":1,"discussions":[{"author":{"id":2064274,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/7f/92/5ae6fd1f.jpg","nickname":"吴冠宇","note":"","ucode":"D031995C4D3FAF","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":296653,"discussion_content":"能不能详细讲讲layui调用layui.from的方式T^T","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1596614271,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":162152,"user_name":"徐三响","can_delete":false,"product_type":"c1","uid":1375156,"ip_address":"","ucode":"6B30D451EBD60D","user_header":"https://static001.geekbang.org/account/avatar/00/14/fb/b4/afbaab2f.jpg","comment_is_top":false,"comment_ctime":1576467509,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"5871434805","product_id":100023201,"comment_content":"感受到了winter老师的技术哲学","like_count":1,"discussions":[{"author":{"id":2020298,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/d3/ca/6bb366a0.jpg","nickname":"一次就上岸","note":"","ucode":"3A4BE3E2487F9B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":278994,"discussion_content":"个人感觉，就像是之前的某个大哥的评论，是从语言使用者的角度转换为语言设计者角度了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1591270460,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":103959,"user_name":"越陌度阡","can_delete":false,"product_type":"c1","uid":1513505,"ip_address":"","ucode":"A09CD34ABC8D5C","user_header":"https://static001.geekbang.org/account/avatar/00/17/18/21/b4876ef9.jpg","comment_is_top":false,"comment_ctime":1560574040,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5855541336","product_id":100023201,"comment_content":"有人回复php是最好的语言，那你跑来学Js干嘛？阿里都不用P(拍)H(黄)P(片)","like_count":1},{"had_liked":false,"id":70677,"user_name":"未来的胡先森","can_delete":false,"product_type":"c1","uid":1234682,"ip_address":"","ucode":"AFF193AC0E2E6C","user_header":"https://static001.geekbang.org/account/avatar/00/12/d6/fa/1f5bf642.jpg","comment_is_top":false,"comment_ctime":1551161856,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5846129152","product_id":100023201,"comment_content":"C# 中面向对象具有 3 个核心思想：<br>1、封装。例如：private 定义为私有。<br>2、继承。子类可以继承父类中的方法。<br>3、多态。例如：方法重载。","like_count":1},{"had_liked":false,"id":65574,"user_name":"让时间说真话","can_delete":false,"product_type":"c1","uid":1387656,"ip_address":"","ucode":"5C86450864189F","user_header":"https://static001.geekbang.org/account/avatar/00/15/2c/88/2a7fe1a9.jpg","comment_is_top":false,"comment_ctime":1549462605,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5844429901","product_id":100023201,"comment_content":"Js面相对象编程老师讲的很清楚。其实从编程角度讲js就是面向对象编程，可以使用prototype属性实现对象之间方法，属性的继承。Java是一种预编译面向对象编程，可以在类中定义属性，方法，如果该方法，属性没定义，程序运行到这里时就会报错。所以Js比java更灵活。","like_count":1},{"had_liked":false,"id":64587,"user_name":"Marvin","can_delete":false,"product_type":"c1","uid":1378026,"ip_address":"","ucode":"985D6CA5B9AD73","user_header":"https://static001.geekbang.org/account/avatar/00/15/06/ea/79f6671a.jpg","comment_is_top":false,"comment_ctime":1548830526,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"5843797822","product_id":100023201,"comment_content":"看了这一篇文章，理解了JS中的对象和java，或C++里面的对象的一些区别，应该说最大的区别就是：JS中的对象，可以设置访问器属性，对吧？<br>还想请问老师：我常听见周围学java或C的朋友说 什么什么一个类，什么什么对象。<br>那他们口中的这个“类”是什么？它和“对象”又有什么区别？<br>我是科班出身，但所学专业和编程并不太相关，参与过前端培训，至今已经从事前端工作2年了，但我始终觉得自己基础不扎实，学东西慢，比不上那些相关专业的学生。<br>请老师指教~","like_count":1,"discussions":[{"author":{"id":2632198,"avatar":"https://static001.geekbang.org/account/avatar/00/28/2a/06/da417908.jpg","nickname":"清风月明","note":"","ucode":"54C98300A9F4DA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":413626,"discussion_content":"那就不是科班出身","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1636529898,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":64550,"user_name":"白马","can_delete":false,"product_type":"c1","uid":1103540,"ip_address":"","ucode":"FD4DA715AC5984","user_header":"https://static001.geekbang.org/account/avatar/00/10/d6/b4/0808999d.jpg","comment_is_top":false,"comment_ctime":1548818881,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"5843786177","product_id":100023201,"comment_content":"我挺喜欢JS，就是因为其动态性，可能因为我是一个更喜欢自由的人。不过任何事情都有两面性。这种动态性也应该有一些问题和缺点吧，是什么呢？","like_count":1,"discussions":[{"author":{"id":1215113,"avatar":"https://static001.geekbang.org/account/avatar/00/12/8a/89/770ee11a.jpg","nickname":"肖志业","note":"","ucode":"374E0C708F1EBD","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":129676,"discussion_content":"JS的动态性的缺点，个人认为是 代码的执行效率会比较低，即常说的“慢”","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578726713,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":64396,"user_name":"Murphy","can_delete":false,"product_type":"c1","uid":1147233,"ip_address":"","ucode":"79DA803FD6CFCF","user_header":"https://static001.geekbang.org/account/avatar/00/11/81/61/41ae63f7.jpg","comment_is_top":false,"comment_ctime":1548765688,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"5843732984","product_id":100023201,"comment_content":"JavaScript 中对象独有的特色是：对象具有高度的动态性。<br>这就是 JavaScript 受大家喜爱的原因之一。<br>","like_count":1,"discussions":[{"author":{"id":1514125,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epsRcQM1w3rNmwkbMLwfyFnFRr5zcpYhc7assPRp0ahBd9c8xiaRd5vJ97Wo6ZibDQpIjml5pibVfF4w/132","nickname":"Rainbow","note":"","ucode":"2D09322310B6E2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":292,"discussion_content":"我讨厌Js,太恶心了。所以我来学js。因为工作需要","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1561431333,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":64381,"user_name":"OOOO","can_delete":false,"product_type":"c1","uid":1249966,"ip_address":"","ucode":"71A741BE420697","user_header":"https://static001.geekbang.org/account/avatar/00/13/12/ae/995b0adc.jpg","comment_is_top":false,"comment_ctime":1548760977,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5843728273","product_id":100023201,"comment_content":"讲的很好，js对象这一块一直存在知识盲点，现在感觉结构清晰了很多","like_count":1},{"had_liked":false,"id":64275,"user_name":"庖丁","can_delete":false,"product_type":"c1","uid":1390054,"ip_address":"","ucode":"AC43E049C5BDFF","user_header":"https://static001.geekbang.org/account/avatar/00/15/35/e6/5a05a2fb.jpg","comment_is_top":false,"comment_ctime":1548731538,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5843698834","product_id":100023201,"comment_content":"老师在 JavaScript 对象的特征那一部分有个笔下误，《面向对象分析与设计》的作者是Grady Booch 您多了一个n(Grandy) 。","like_count":1},{"had_liked":false,"id":64201,"user_name":"范饭飯","can_delete":false,"product_type":"c1","uid":1377461,"ip_address":"","ucode":"B3154837695063","user_header":"https://static001.geekbang.org/account/avatar/00/15/04/b5/98d77744.jpg","comment_is_top":false,"comment_ctime":1548694103,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5843661399","product_id":100023201,"comment_content":"第一","like_count":1},{"had_liked":false,"id":352070,"user_name":"Evan","can_delete":false,"product_type":"c1","uid":1319145,"ip_address":"","ucode":"B91EAA5C4004D6","user_header":"https://static001.geekbang.org/account/avatar/00/14/20/e9/0cc91f97.jpg","comment_is_top":false,"comment_ctime":1658372739,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1658372739","product_id":100023201,"comment_content":"还是有点绕，需多读几遍。","like_count":0},{"had_liked":false,"id":348975,"user_name":"。","can_delete":false,"product_type":"c1","uid":2941424,"ip_address":"","ucode":"14D3410B4D3FC8","user_header":"https://static001.geekbang.org/account/avatar/00/2c/e1/f0/d1a21941.jpg","comment_is_top":false,"comment_ctime":1655617408,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1655617408","product_id":100023201,"comment_content":"基于原型，面向对象","like_count":0},{"had_liked":false,"id":348539,"user_name":"木子初秋","can_delete":false,"product_type":"c1","uid":2893706,"ip_address":"","ucode":"6DDCB55232E1B3","user_header":"https://static001.geekbang.org/account/avatar/00/2c/27/8a/d65e34c4.jpg","comment_is_top":false,"comment_ctime":1655181774,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1655181774","product_id":100023201,"comment_content":"在以往的对于对象的认识基础上看到这篇文章，真是又通透太多了。","like_count":0},{"had_liked":false,"id":347642,"user_name":"哇哈哈哈","can_delete":false,"product_type":"c1","uid":2166167,"ip_address":"","ucode":"08B9F0F6E4EFAE","user_header":"https://static001.geekbang.org/account/avatar/00/21/0d/97/b2a0bf51.jpg","comment_is_top":false,"comment_ctime":1654245251,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1654245251","product_id":100023201,"comment_content":"数据属性和访问器属性有啥区别？","like_count":0},{"had_liked":false,"id":341523,"user_name":"news","can_delete":false,"product_type":"c1","uid":2541940,"ip_address":"","ucode":"6F7D5D421244D0","user_header":"https://static001.geekbang.org/account/avatar/00/26/c9/74/1eb4cfe2.jpg","comment_is_top":false,"comment_ctime":1649675001,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1649675001","product_id":100023201,"comment_content":"js两种数据类型：数据属性、访问属性。两者都具有4个特征","like_count":0},{"had_liked":false,"id":336898,"user_name":"周胜","can_delete":false,"product_type":"c1","uid":1974266,"ip_address":"","ucode":"BAE27CC6F67BB9","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83erw3icVIkgTwYx5H9gwOSHdVibjxvzrmSe8G3Cg7kOicjibkHaDeibkntE4kdhibj4KHM0zCzM07YlbbteA/132","comment_is_top":false,"comment_ctime":1646453516,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1646453516","product_id":100023201,"comment_content":"为了解释JavaScript是面向对象还是基于对象，首先理解什么是对象？对象应该路由唯一标识、状态和行为，接着应该如何去描述对象？JAVA，C++采用类来描述，而与JavaScript采用原型来描述，导致JavaScript极其不合群，虽然采用的方式不同，但都是面向对象的语言。另外，JavaScript对象和其他语言对象还有些特殊地方，JavaScript对象设计更为复杂，它运行时具有动态性，具有两种属性特征，数据属性和访问器属性","like_count":0},{"had_liked":false,"id":336390,"user_name":"Ningli Zhu","can_delete":false,"product_type":"c1","uid":2910851,"ip_address":"","ucode":"83593A013A9E82","user_header":"https://static001.geekbang.org/account/avatar/00/2c/6a/83/18b941ef.jpg","comment_is_top":false,"comment_ctime":1646125272,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1646125272","product_id":100023201,"comment_content":"const object2 = {<br>    property2: 40<br>  };<br>  <br>  const descriptor4 = Object.getOwnPropertyDescriptor(object2, &#39;property2&#39;);<br>  <br>  console.log(descriptor4.configurable);<br>  &#47;&#47; expected output: true<br>  <br>  console.log(descriptor4.value);<br>  &#47;&#47; expected output: 40<br><br>&#47;&#47; object2.property2 = 30<br>Object.defineProperty (object2,&#39;property2&#39;, {value:30, writable:false})<br><br>console.log(object2.property2);<br>  &#47;&#47; expected output: 30<br><br>  &#47;&#47;  ***以下不知道为什么赋值属性没有变？<br>console.log(descriptor4.writable)<br>console.log(descriptor4.value)<br>  ","like_count":0},{"had_liked":false,"id":324893,"user_name":"线形的眼泪","can_delete":false,"product_type":"c1","uid":1738194,"ip_address":"","ucode":"6C10436BD6BCE5","user_header":"https://static001.geekbang.org/account/avatar/00/1a/85/d2/04e36102.jpg","comment_is_top":false,"comment_ctime":1638705957,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1638705957","product_id":100023201,"comment_content":"壮哉我大JS","like_count":0},{"had_liked":false,"id":304013,"user_name":"Friday","can_delete":false,"product_type":"c1","uid":1438506,"ip_address":"","ucode":"AAC10610CF848D","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJ9Y45QovHzGatCRAIdAaCmWuQIZv88zdDeWsbR8w58FX34a4g5PPdna4f5phodeKDia2kWNR9mjJA/132","comment_is_top":false,"comment_ctime":1627183072,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1627183072","product_id":100023201,"comment_content":"老师说的特别好","like_count":0},{"had_liked":false,"id":296791,"user_name":"Geek_657e73","can_delete":false,"product_type":"c1","uid":2584128,"ip_address":"","ucode":"E84B2E67C4C515","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/cviaNUiaiaMq9eicjZTupibehtBk1sY9NKWuIsYjB5514Sj1IV3oKIhjicerlnl2FFicW1BEUUqHU1qn0lRdq8bWOzyag/132","comment_is_top":false,"comment_ctime":1623161716,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1623161716","product_id":100023201,"comment_content":"其实没这么复杂 在灵活性和传统型 作者选择了灵活性，真没那么高大上","like_count":0},{"had_liked":false,"id":294445,"user_name":"狼图腾","can_delete":false,"product_type":"c1","uid":1072093,"ip_address":"","ucode":"83D6F279AA5049","user_header":"https://static001.geekbang.org/account/avatar/00/10/5b/dd/a91dfdfa.jpg","comment_is_top":false,"comment_ctime":1621944892,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1621944892","product_id":100023201,"comment_content":"动态的对象模型，总结太到位了","like_count":0},{"had_liked":false,"id":285571,"user_name":"Monday","can_delete":false,"product_type":"c1","uid":1622271,"ip_address":"","ucode":"2459EB342F9915","user_header":"https://static001.geekbang.org/account/avatar/00/18/c0/ff/68fc4ae2.jpg","comment_is_top":false,"comment_ctime":1616902016,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1616902016","product_id":100023201,"comment_content":"谁说我们程序员找不到对象的，这不处处都是对象嘛","like_count":0},{"had_liked":false,"id":273038,"user_name":"昂💫","can_delete":false,"product_type":"c1","uid":2388963,"ip_address":"","ucode":"DBFA7AB0B199BC","user_header":"https://static001.geekbang.org/account/avatar/00/24/73/e3/b3304e2a.jpg","comment_is_top":false,"comment_ctime":1610418465,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1610418465","product_id":100023201,"comment_content":"面向对象：封装，继承，多态。<br>基于对象：只有封装，没有继承和多态。","like_count":0},{"had_liked":false,"id":260849,"user_name":"rookie","can_delete":false,"product_type":"c1","uid":1225665,"ip_address":"","ucode":"4428BC9BAC684D","user_header":"https://static001.geekbang.org/account/avatar/00/12/b3/c1/b96b5015.jpg","comment_is_top":false,"comment_ctime":1605144412,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1605144412","product_id":100023201,"comment_content":"js对象是可以在运行时动态添加属性的，个人认为，js不能说算是面向对象，而是基于对象。","like_count":0},{"had_liked":false,"id":230217,"user_name":"宋捷","can_delete":false,"product_type":"c1","uid":1333006,"ip_address":"","ucode":"7905BABF1D8DDD","user_header":"https://static001.geekbang.org/account/avatar/00/14/57/0e/36847d8c.jpg","comment_is_top":false,"comment_ctime":1593315318,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1593315318","product_id":100023201,"comment_content":"那新的es6后，引入了类的概念，js是为了现有的对象设计和通用的class设计共存吗？如果js现有的对象设计使用的还不错，为什么一定要把class引入？js的初衷不就是要比java简单点吗？","like_count":0,"discussions":[{"author":{"id":1564786,"avatar":"https://static001.geekbang.org/account/avatar/00/17/e0/72/6e0314e7.jpg","nickname":"Ace","note":"","ucode":"C77191A6B18845","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":315006,"discussion_content":"语法糖，降低新手理解原型的难度，使用class并没有改变js的面向对象机制。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1603231570,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":227544,"user_name":"james","can_delete":false,"product_type":"c1","uid":1232771,"ip_address":"","ucode":"AC42035106E5B9","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/yyibGRYCArsUNBfCAEAibua09Yb9D5AdO8TkCmXymhAepibqmlz0hzg06ggBLxyvXicnjqFVGr7zYF0rQoZ0aXCBAg/132","comment_is_top":false,"comment_ctime":1592404509,"is_pvip":false,"discussion_count":0,"race_medal":1,"score":"1592404509","product_id":100023201,"comment_content":"Java、C++、C#","like_count":0},{"had_liked":false,"id":226434,"user_name":"阳超","can_delete":false,"product_type":"c1","uid":1792066,"ip_address":"","ucode":"239037A8E3F055","user_header":"https://static001.geekbang.org/account/avatar/00/1b/58/42/640dd096.jpg","comment_is_top":false,"comment_ctime":1592101892,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1592101892","product_id":100023201,"comment_content":"对象是否比较的是内存地址","like_count":0},{"had_liked":false,"id":221287,"user_name":"困到清醒","can_delete":false,"product_type":"c1","uid":1384381,"ip_address":"","ucode":"1CD20C408C0BC9","user_header":"https://static001.geekbang.org/account/avatar/00/15/1f/bd/04100cb4.jpg","comment_is_top":false,"comment_ctime":1590463577,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1590463577","product_id":100023201,"comment_content":"嗷！终于看懂了，不要带着已有对象的概念去理解JavaScript的对象","like_count":0},{"had_liked":false,"id":218778,"user_name":"singlestep","can_delete":false,"product_type":"c1","uid":1367097,"ip_address":"","ucode":"088A9A97695F7F","user_header":"https://static001.geekbang.org/account/avatar/00/14/dc/39/d1a02f3f.jpg","comment_is_top":false,"comment_ctime":1589874658,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1589874658","product_id":100023201,"comment_content":"js 的属性和 oc 的属性好像, 都有类似特征值 描述这种概念","like_count":0},{"had_liked":false,"id":213066,"user_name":"贾飞雨","can_delete":false,"product_type":"c1","uid":1321770,"ip_address":"","ucode":"CBD8FD331B4173","user_header":"https://static001.geekbang.org/account/avatar/00/14/2b/2a/63af9b35.jpg","comment_is_top":false,"comment_ctime":1588294991,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1588294991","product_id":100023201,"comment_content":"原来是这个样子的，读了两遍！看的好开心<br>","like_count":0},{"had_liked":false,"id":205964,"user_name":"Yully","can_delete":false,"product_type":"c1","uid":1254946,"ip_address":"","ucode":"66034995A6282F","user_header":"https://static001.geekbang.org/account/avatar/00/13/26/22/dd505e6d.jpg","comment_is_top":false,"comment_ctime":1586764444,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1586764444","product_id":100023201,"comment_content":"面向对象语言：c++<br>c++是c增加了面向对象编程的语言，既可以是基于过程，也可以基于对象。还可以进行以继承和多态为特点的面向对象的程序设计。新增了不同于c的引用，不推荐使用指针。<br><br>","like_count":0},{"had_liked":false,"id":204409,"user_name":"曙光","can_delete":false,"product_type":"c1","uid":1476450,"ip_address":"","ucode":"04D65BF7F19845","user_header":"https://static001.geekbang.org/account/avatar/00/16/87/62/f99b5b05.jpg","comment_is_top":false,"comment_ctime":1586396924,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1586396924","product_id":100023201,"comment_content":"Object.getOwnPropertyDescriptor(o,&quot;a&quot;); 无法看到打印结果，需要console.log(Object.getOwnPropertyDescriptor(o,&quot;a&quot;)); 问题来了，为什么console.log(o),看不到这些信息呢？谷歌浏览器__proto__里也找不到writable等字样","like_count":0},{"had_liked":false,"id":200000,"user_name":"小玲子ida","can_delete":false,"product_type":"c1","uid":1177005,"ip_address":"","ucode":"A447EF847D375E","user_header":"https://static001.geekbang.org/account/avatar/00/11/f5/ad/2f7d5e50.jpg","comment_is_top":false,"comment_ctime":1585531331,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1585531331","product_id":100023201,"comment_content":"学过C#，相比而言，javascript是比较随意的一门语言，可以动态的增加属性，重新赋值可以改变属性类型，没那么多规范","like_count":0},{"had_liked":false,"id":191874,"user_name":"樊琳琪","can_delete":false,"product_type":"c1","uid":1538988,"ip_address":"","ucode":"990C0F8027FC5E","user_header":"https://static001.geekbang.org/account/avatar/00/17/7b/ac/13eaecf5.jpg","comment_is_top":false,"comment_ctime":1584801926,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1584801926","product_id":100023201,"comment_content":"动态添加属性这个例子举的很有代表性，理解了js的动态灵活；也学习了数据属性状态值和访问属性状态值，有点明白原理性的知识，第二遍看通彻很多","like_count":0},{"had_liked":false,"id":190669,"user_name":"樊琳琪","can_delete":false,"product_type":"c1","uid":1538988,"ip_address":"","ucode":"990C0F8027FC5E","user_header":"https://static001.geekbang.org/account/avatar/00/17/7b/ac/13eaecf5.jpg","comment_is_top":false,"comment_ctime":1584679853,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1584679853","product_id":100023201,"comment_content":"感觉有点理解原理了，但还是有穿不起来的地方，再看一遍","like_count":0},{"had_liked":false,"id":186749,"user_name":"Change","can_delete":false,"product_type":"c1","uid":1161260,"ip_address":"","ucode":"FB60D2378C9F02","user_header":"https://static001.geekbang.org/account/avatar/00/11/b8/2c/0f7baf3a.jpg","comment_is_top":false,"comment_ctime":1583916999,"is_pvip":false,"discussion_count":1,"race_medal":2,"score":"1583916999","product_id":100023201,"comment_content":"在这个例子中set方法中的c变量时如何与obj中的a变量匹配上的？<br>let obj = {};<br>Object.defineProperty(obj, &#39;a&#39;, {  configurable: true, enumerable: true,<br>set: function(newValue){<br>   c = newValue<br>},<br>get: function(){<br>    return c; <br>}});<br>obj.a = 3;<br>console.log(obj.a);","like_count":0,"discussions":[{"author":{"id":1126631,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/s0bx4WXQNkAJ3c3map0g6dlt3sKDgTtN7Ria96YoufjQcVVI8Shv5CN1jnK1ZTImNnlPcibRqvyiaUuhpIvV1TpnQ/132","nickname":"wingsico","note":"","ucode":"A91CB7B0497708","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":220691,"discussion_content":"你看一下window上应该有个c了，在全局环境创建了一个变量c","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585917255,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":181945,"user_name":"小盆友想家","can_delete":false,"product_type":"c1","uid":1878383,"ip_address":"","ucode":"933CEBB96C7855","user_header":"https://static001.geekbang.org/account/avatar/00/1c/a9/6f/e05910a9.jpg","comment_is_top":false,"comment_ctime":1582683833,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1582683833","product_id":100023201,"comment_content":"受益匪浅👏👏👏","like_count":0},{"had_liked":false,"id":169159,"user_name":"DreamFox","can_delete":false,"product_type":"c1","uid":1085068,"ip_address":"","ucode":"3D42D66CB4E128","user_header":"https://static001.geekbang.org/account/avatar/00/10/8e/8c/4c430896.jpg","comment_is_top":false,"comment_ctime":1578281612,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1578281612","product_id":100023201,"comment_content":"哦，知道了，数据属性和访问器属性是互斥的，不能同时设置","like_count":0,"discussions":[{"author":{"id":1293057,"avatar":"https://static001.geekbang.org/account/avatar/00/13/bb/01/568ac2d6.jpg","nickname":"K4SHIFZ","note":"","ucode":"BFB49AAC0E4C74","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":166515,"discussion_content":"不能同时设置同一个名称的getter和setter，但是可以设置同一名称的数据属性和getter或setter","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1581405613,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":169157,"user_name":"DreamFox","can_delete":false,"product_type":"c1","uid":1085068,"ip_address":"","ucode":"3D42D66CB4E128","user_header":"https://static001.geekbang.org/account/avatar/00/10/8e/8c/4c430896.jpg","comment_is_top":false,"comment_ctime":1578281317,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1578281317","product_id":100023201,"comment_content":"我想问个问题，数据属性和访问器属性中的enumerable、configurable属性是一样的吗，defineProperty的时候似乎只能写一个enumerable呀","like_count":0},{"had_liked":false,"id":137627,"user_name":"SEC","can_delete":false,"product_type":"c1","uid":1143087,"ip_address":"","ucode":"A29C8F8A0BC8EA","user_header":"https://static001.geekbang.org/account/avatar/00/11/71/2f/8751bd28.jpg","comment_is_top":false,"comment_ctime":1569808719,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1569808719","product_id":100023201,"comment_content":"老师讲得好，解惑","like_count":0},{"had_liked":false,"id":136554,"user_name":"junjun","can_delete":false,"product_type":"c1","uid":1547322,"ip_address":"","ucode":"1F7EE146B9BE04","user_header":"https://static001.geekbang.org/account/avatar/00/17/9c/3a/bfd73920.jpg","comment_is_top":false,"comment_ctime":1569471234,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1569471234","product_id":100023201,"comment_content":"什么叫运行时改变啊，我看文章中的例子也是提前添加的，我理解的运行是代码运行。","like_count":0},{"had_liked":false,"id":136254,"user_name":"啊哈小新","can_delete":false,"product_type":"c1","uid":1145272,"ip_address":"","ucode":"6F1A1532172681","user_header":"https://static001.geekbang.org/account/avatar/00/11/79/b8/206f9f10.jpg","comment_is_top":false,"comment_ctime":1569397162,"is_pvip":false,"replies":[{"id":"54034","content":"smalltalk是面向对象的鼻祖，面相对象的概念到今天已经有很大变化。<br>你可以把旧时代和新时代的OOP看做不同的东西。","user_name":"作者回复","user_name_real":"winter","uid":"1268524","ctime":1570772568,"ip_address":"","comment_id":136254,"utype":1}],"discussion_count":1,"race_medal":1,"score":"1569397162","product_id":100023201,"comment_content":"OC的面向对象思想简直就是反人类。。。一种基于消息发送的smalltalk风格。。。然鹅OC是比C++还早的面向对象语言。。。","like_count":0,"discussions":[{"author":{"id":1268524,"avatar":"https://static001.geekbang.org/account/avatar/00/13/5b/2c/12bfd3cd.jpg","nickname":"winter","note":"","ucode":"2B068EDEAFEB56","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":468528,"discussion_content":"smalltalk是面向对象的鼻祖，面相对象的概念到今天已经有很大变化。\n你可以把旧时代和新时代的OOP看做不同的东西。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1570772568,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":127411,"user_name":"卡洛斯(๑Ő௰Ő๑)","can_delete":false,"product_type":"c1","uid":1330852,"ip_address":"","ucode":"6F311BF03B76FD","user_header":"https://static001.geekbang.org/account/avatar/00/14/4e/a4/433305bb.jpg","comment_is_top":false,"comment_ctime":1566702163,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1566702163","product_id":100023201,"comment_content":"所以对象是一个具体的东西，而对象的抽象是对具体东西的归类。在不同的编程语言中，也会利用不同的语言特性来描述对象的抽象，最为成功的流派是使用 &quot;类&quot; 的方式来描述对象的抽象，比如 C++，OC，Java 等。<br><br>而 Javascript 早年却选择了一个更为冷门的方式：原型。这就是为什么它会有点不合群，而被误解不是面向对象语言的原因。","like_count":0},{"had_liked":false,"id":120157,"user_name":"稚鸿同学","can_delete":false,"product_type":"c1","uid":1212581,"ip_address":"","ucode":"989804DB990385","user_header":"https://static001.geekbang.org/account/avatar/00/12/80/a5/83b424bc.jpg","comment_is_top":false,"comment_ctime":1564801127,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1564801127","product_id":100023201,"comment_content":"这个章节，还可以结合 红宝书 的面向对象一起来看，也有一个好理解","like_count":0},{"had_liked":false,"id":118406,"user_name":"codeme","can_delete":false,"product_type":"c1","uid":1440156,"ip_address":"","ucode":"AFCD8B5CE0F4D3","user_header":"https://static001.geekbang.org/account/avatar/00/15/f9/9c/9aba170c.jpg","comment_is_top":false,"comment_ctime":1564361138,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1564361138","product_id":100023201,"comment_content":"数据属性和访问器属性分别是指什么呢","like_count":0},{"had_liked":false,"id":108049,"user_name":"切糕","can_delete":false,"product_type":"c1","uid":1185409,"ip_address":"","ucode":"DCD3C14CAC4ED3","user_header":"https://static001.geekbang.org/account/avatar/00/12/16/81/77f84354.jpg","comment_is_top":false,"comment_ctime":1561653698,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1561653698","product_id":100023201,"comment_content":"以前总是会将java中的属性和方法来理解js中的对象，而对于js来讲是只有属性的概念，没有个对象中的内置方法也是属性。","like_count":0},{"had_liked":false,"id":103408,"user_name":"Jaykey","can_delete":false,"product_type":"c1","uid":1167992,"ip_address":"","ucode":"535FEA1292D290","user_header":"https://static001.geekbang.org/account/avatar/00/11/d2/78/1f1b45f9.jpg","comment_is_top":false,"comment_ctime":1560429737,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1560429737","product_id":100023201,"comment_content":"有了对象的访问器、修改器，才有基于对象编程的方式，就是可以直接调用这些属性来完成事情。","like_count":0},{"had_liked":false,"id":101127,"user_name":"Geek_4874a9","can_delete":false,"product_type":"c1","uid":1446333,"ip_address":"","ucode":"B647CE9F61A8EE","user_header":"","comment_is_top":false,"comment_ctime":1559722710,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1559722710","product_id":100023201,"comment_content":"其实概括而言就是，衡量一个语言是否是面向对象的时候，应当是衡量这个语言是否符合面向对象的本质特征与设计思想，而不是用其他已有的面向对象的语言来作为衡量标准。","like_count":0},{"had_liked":false,"id":99378,"user_name":"青鸟","can_delete":false,"product_type":"c1","uid":1547020,"ip_address":"","ucode":"9D989911056674","user_header":"https://static001.geekbang.org/account/avatar/00/17/9b/0c/bcd2b32b.jpg","comment_is_top":false,"comment_ctime":1559202414,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1559202414","product_id":100023201,"comment_content":"老师好像还是没有解释什么是面向对象，面向对象感觉每个人的理解都不一样。面向对象对于winter老师来说，它是什么？","like_count":0},{"had_liked":false,"id":98657,"user_name":"geeker","can_delete":false,"product_type":"c1","uid":1387015,"ip_address":"","ucode":"F766C34215695C","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJCd0B2mjdiaT8GrsUN8vrulwvoibl1RMibriawn56pnb1mUibtcSe16lxicib41gpk53tZorayxmxlhoa1Q/132","comment_is_top":false,"comment_ctime":1559051849,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1559051849","product_id":100023201,"comment_content":"基于原型更灵活 给予类继承问题太多了","like_count":0},{"had_liked":false,"id":86066,"user_name":"阿东","can_delete":false,"product_type":"c1","uid":1500320,"ip_address":"","ucode":"E9393F62B4091D","user_header":"https://static001.geekbang.org/account/avatar/00/16/e4/a0/62a8b07e.jpg","comment_is_top":false,"comment_ctime":1555307457,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1555307457","product_id":100023201,"comment_content":"经常见到一种转换string为int的方法：<br>function  stringToInt(str) {<br>    return +str;<br>}","like_count":0},{"had_liked":false,"id":85693,"user_name":"Kimoon@","can_delete":false,"product_type":"c1","uid":1376712,"ip_address":"","ucode":"2909C4FBCE165F","user_header":"https://static001.geekbang.org/account/avatar/00/15/01/c8/3b8ffb13.jpg","comment_is_top":false,"comment_ctime":1555202392,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1555202392","product_id":100023201,"comment_content":"请问大佬~~，如何冻结对象，一般什么样的场景可以用到~","like_count":0},{"had_liked":false,"id":81659,"user_name":"K4SHIFZ","can_delete":false,"product_type":"c1","uid":1293057,"ip_address":"","ucode":"BFB49AAC0E4C74","user_header":"https://static001.geekbang.org/account/avatar/00/13/bb/01/568ac2d6.jpg","comment_is_top":false,"comment_ctime":1554000074,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1554000074","product_id":100023201,"comment_content":"基于原型的面向对象编程语言","like_count":0},{"had_liked":false,"id":76052,"user_name":"井中月","can_delete":false,"product_type":"c1","uid":1312804,"ip_address":"","ucode":"0773A893CC1846","user_header":"https://static001.geekbang.org/account/avatar/00/14/08/24/90f86c61.jpg","comment_is_top":false,"comment_ctime":1552526185,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1552526185","product_id":100023201,"comment_content":"老师，我有一个点没想明白，搜索了一下也没找到相关答案。就是本文所说的数据属性和访问器属性针对的是JS对象里面的数据吗？那么对于函数，是否也有在数据属性和访问器属性里面呢？因为，文章说JS对象是属性集合，意思是指将函数也归为了属性的概念里面。所以困惑，对象里面的函数与数据属性和访问器属性是否有关联。","like_count":0,"discussions":[{"author":{"id":1013841,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/78/51/4790e13e.jpg","nickname":"Smallfly","note":"","ucode":"D388D5E0249A69","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":25647,"discussion_content":"函数也是对象，所以也是属性，不做区分。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1570544517,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":74876,"user_name":"宅。","can_delete":false,"product_type":"c1","uid":1378772,"ip_address":"","ucode":"F5E718BDA0D089","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/ajNVdqHZLLBJ0gRU8UqYffk3LNC3fciajDPesFsxicS3ibtpJf0zHU8Dgmnicia4t6wpT9l3ZhlA1XHgf48y2cA6tqQ/132","comment_is_top":false,"comment_ctime":1552307920,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1552307920","product_id":100023201,"comment_content":"这么理解Lua写出面向对象也是基于原型链的面向对象了<br>local prototype = {name = &#39;&#39;, age = 1}<br>local b = setmetatable({ name = &#39;name&#39; }, { __index = prototype })","like_count":0},{"had_liked":false,"id":73243,"user_name":"某何","can_delete":false,"product_type":"c1","uid":1376742,"ip_address":"","ucode":"35EF57F870A928","user_header":"https://wx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKPKywXblNzu4W23Kjrxa7yr9oYNeszbzBRxp0M8XLEL0SPhaWt55ldrbUsFSJV1OBtruviaTmnrJg/132","comment_is_top":false,"comment_ctime":1551843851,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1551843851","product_id":100023201,"comment_content":"有点疑惑，数据属性的特征enumerable和configurable，与访问器属性的特征enumerable和configurable有什么区别，是一样的吗？ 文章里只举例改变了数据属性的特征enumerable和configurable。","like_count":0},{"had_liked":false,"id":68376,"user_name":"胡琦","can_delete":false,"product_type":"c1","uid":1027994,"ip_address":"","ucode":"2D39C38FAC7EE7","user_header":"https://static001.geekbang.org/account/avatar/00/0f/af/9a/23603936.jpg","comment_is_top":false,"comment_ctime":1550490817,"is_pvip":false,"replies":[{"id":"24349","content":"现代浏览器兼容性已经很好了。","user_name":"作者回复","user_name_real":"winter","uid":"1268524","ctime":1550553220,"ip_address":"","comment_id":68376,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1550490817","product_id":100023201,"comment_content":"配图是照猫画虎？<br>Object. defineProperty是不是有兼容性呢？","like_count":0,"discussions":[{"author":{"id":1268524,"avatar":"https://static001.geekbang.org/account/avatar/00/13/5b/2c/12bfd3cd.jpg","nickname":"winter","note":"","ucode":"2B068EDEAFEB56","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":439655,"discussion_content":"现代浏览器兼容性已经很好了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1550553220,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":66832,"user_name":"恋着歌","can_delete":false,"product_type":"c1","uid":1001048,"ip_address":"","ucode":"CFDC00CB9965D9","user_header":"https://static001.geekbang.org/account/avatar/00/0f/46/58/31205087.jpg","comment_is_top":false,"comment_ctime":1550026755,"is_pvip":false,"replies":[{"id":"23831","content":"错了，属性是属性，描述符是描述符。<br><br>描述符是用来描述属性的JavaScript对象型数据。","user_name":"作者回复","user_name_real":"winter","uid":"1268524","ctime":1550143222,"ip_address":"","comment_id":66832,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1550026755","product_id":100023201,"comment_content":"数据属性、访问器属性，也叫数据描述符、存取描述符，只能选择一种描述符，https:&#47;&#47;developer.mozilla.org&#47;zh-CN&#47;docs&#47;Web&#47;JavaScript&#47;Reference&#47;Global_Objects&#47;Object&#47;defineProperty","like_count":0,"discussions":[{"author":{"id":1268524,"avatar":"https://static001.geekbang.org/account/avatar/00/13/5b/2c/12bfd3cd.jpg","nickname":"winter","note":"","ucode":"2B068EDEAFEB56","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":438936,"discussion_content":"错了，属性是属性，描述符是描述符。\n\n描述符是用来描述属性的JavaScript对象型数据。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1550143222,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":65642,"user_name":"yansj","can_delete":false,"product_type":"c1","uid":1373798,"ip_address":"","ucode":"696CF632AF24F0","user_header":"","comment_is_top":false,"comment_ctime":1549532525,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1549532525","product_id":100023201,"comment_content":"访问属性在vue中还是比较常见的，但我没碰到过需要用数据属性的时候，哪位能说下经验吗","like_count":0},{"had_liked":false,"id":65245,"user_name":"吴小杰(づ｡◕‿‿◕｡)づ","can_delete":false,"product_type":"c1","uid":1380390,"ip_address":"","ucode":"5097BE8F428822","user_header":"https://static001.geekbang.org/account/avatar/00/15/10/26/279155aa.jpg","comment_is_top":false,"comment_ctime":1549159278,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1549159278","product_id":100023201,"comment_content":"写的很好，补充了以前的一些知识遗漏点。顺带给极客时间提个改进，文章左下角的红星，如果点亮了在阅读的时候会很刺眼，看着正文很容易扫到下面的红星。建议在设计上参考一下做的比较好的阅读类app（豆瓣，kindle）的做法哈，不然没法给winter老师点赞了:-)","like_count":0},{"had_liked":false,"id":64677,"user_name":"一路向北","can_delete":false,"product_type":"c1","uid":1017835,"ip_address":"","ucode":"DB0FF1C153C485","user_header":"https://static001.geekbang.org/account/avatar/00/0f/87/eb/20492a37.jpg","comment_is_top":false,"comment_ctime":1548856164,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1548856164","product_id":100023201,"comment_content":"以前没有理解面向对象，反而从这里理解通了。","like_count":0},{"had_liked":false,"id":64388,"user_name":"张祥儒","can_delete":false,"product_type":"c1","uid":1235656,"ip_address":"","ucode":"D66454D1E618C6","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/lIN14g64kVO1Y8AC5hpKOrpTQiagL9O3zqbgmdDWO8V6FSOZd7ZhqH0v4AQHLy4OWjvMcP2WnUmt7AHzo4cHsLQ/132","comment_is_top":false,"comment_ctime":1548762403,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1548762403","product_id":100023201,"comment_content":"winter老师，我想问下，课程会涉及编译原理系列的东西吗？词法分析，语法分析，以及解释执行，这些知识点！","like_count":0},{"had_liked":false,"id":64268,"user_name":"九月三秋","can_delete":false,"product_type":"c1","uid":1379842,"ip_address":"","ucode":"30857C27228AB5","user_header":"https://static001.geekbang.org/account/avatar/00/15/0e/02/c0c525f7.jpg","comment_is_top":false,"comment_ctime":1548730075,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1548730075","product_id":100023201,"comment_content":"大开眼界，很棒！","like_count":0},{"had_liked":false,"id":64256,"user_name":"warmlyice","can_delete":false,"product_type":"c1","uid":1133515,"ip_address":"","ucode":"AD7D72172B5A87","user_header":"https://static001.geekbang.org/account/avatar/00/11/4b/cb/48a7f660.jpg","comment_is_top":false,"comment_ctime":1548727586,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1548727586","product_id":100023201,"comment_content":"基于有限状态机(FSM)，好像某些正则引擎也是基于它","like_count":0},{"had_liked":false,"id":64255,"user_name":"37°C^boy","can_delete":false,"product_type":"c1","uid":1377346,"ip_address":"","ucode":"2194633443AED6","user_header":"https://static001.geekbang.org/account/avatar/00/15/04/42/c0be8d43.jpg","comment_is_top":false,"comment_ctime":1548727466,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1548727466","product_id":100023201,"comment_content":"看了这篇，感觉老师讲的思路太好了，追本溯源，娓娓道来，很容易接受，在这里学到的不光是知识，还有关于学习和讲授的方法路","like_count":0},{"had_liked":false,"id":64212,"user_name":"freestyle","can_delete":false,"product_type":"c1","uid":1377285,"ip_address":"","ucode":"7B6CA3CAA6309C","user_header":"https://static001.geekbang.org/account/avatar/00/15/04/05/4f52804e.jpg","comment_is_top":false,"comment_ctime":1548720106,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1548720106","product_id":100023201,"comment_content":"赶紧恶补一下js面向对象","like_count":0},{"had_liked":false,"id":64210,"user_name":"D-DRAGON","can_delete":false,"product_type":"c1","uid":1271642,"ip_address":"","ucode":"4EE25454E1E34E","user_header":"https://static001.geekbang.org/account/avatar/00/13/67/5a/1a316eff.jpg","comment_is_top":false,"comment_ctime":1548718784,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1548718784","product_id":100023201,"comment_content":"我得多拜读几遍消化","like_count":0}]}