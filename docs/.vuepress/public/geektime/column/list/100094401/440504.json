{"id":440504,"title":"11 | 路由：新一代vue-router带来什么变化","content":"<p>你好，我是大圣。</p><p>在上一讲中，我带你了解了Vuex这个数据管理框架的使用方法，以及Vue 3中数据管理框架的来源、实战细节和相关的原理。</p><p>其实项目中除了数据管理，路由系统也是非常核心的模块。所以在这一讲中，我会先带你了解一下前端开发方式的演变，让你明白前端路由因何而来，之后再讲解前端路由的实现原理。最后，我会再带你手写一个vue-router，并在这个过程中为你补充相关的实战要点，让你对如何用好vue-router有一个直观体验。</p><h2>前后端开发模式的演变</h2><p>在jQuery时代，对于大部分Web项目而言，前端都是不能控制路由的，而是需要依赖后端项目的路由系统。通常，前端项目也会部署在后端项目的模板里，整个项目执行的示意图如下：</p><p><img src=\"https://static001.geekbang.org/resource/image/26/2b/26ddd952f1f7d6dc3193af5be57e202b.jpg?wh=1569x462\" alt=\"图片\"></p><p>jQuery那个时代的前端工程师，都要学会在后端的模板，比如JSP，Smatry等里面写一些代码。但是在这个时代，前端工程师并不需要了解路由的概念。对于每次的页面跳转，都由后端开发人员来负责重新渲染模板。</p><p>前端依赖后端，并且前端不需要负责路由的这种开发方式，有很多的优点，比如开发速度会很快、后端也可以承担部分前端任务等，所以到现在还有很多公司的内部管理系统是这样的架构。当然，这种开发方式也有很多缺点，比如前后端项目无法分离、页面跳转由于需要重新刷新整个页面、等待时间较长等等，所以也会让交互体验下降。</p><!-- [[[read_end]]] --><p>为了提高页面的交互体验，很多前端工程师做了不同的尝试。在这个过程中，前端的开发模式发生了变化，项目的结构也发生了变化。下图所示的，是在目前的前端开发中，用户访问页面后代码执行的过程。</p><p><img src=\"https://static001.geekbang.org/resource/image/26/ec/2657d4eb129568d3c5b766e40eef60ec.jpg?wh=1920x435\" alt=\"图片\"></p><p>从上面的示意图中，我们可以看到：用户访问路由后，无论是什么URL地址，都直接渲染一个前端的入口文件index.html，然后就会在index.html文件中加载JS和CSS。之后，JavaScript获取当前的页面地址，以及当前路由匹配的组件，再去动态渲染当前页面即可。用户在页面上进行点击操作时，也不需要刷新页面，而是直接通过JS重新计算出匹配的路由渲染即可。</p><p>在前后两个示意图中，绿色的部分表示的就是前端负责的内容。而在后面这个架构下，前端获得了路由的控制权，在JavaScript中控制路由系统。也因此，页面跳转的时候就不需要刷新页面，网页的浏览体验也得到了提高。<strong>这种所有路由都渲染一个前端入口文件的方式，是单页面应用程序（SPA，single page application）应用的雏形。</strong></p><p>通过JavaScript动态控制数据去提高用户体验的方式并不新奇，Ajax让数据的获取不需要刷新页面，SPA应用让路由跳转也不需要刷新页面。这种开发的模式在jQuery时代就出来了，浏览器路由的变化可以通过pushState来操作，这种纯前端开发应用的方式，以前称之为Pjax （pushState+ Ajax）。之后，这种开发模式在MVVM框架的时代大放异彩，现在大部分使用Vue/React/Angular的应用都是这种架构。</p><p>SPA应用相比于模板的开发方式，对前端更加友好，比如：前端对项目的控制权更大了、交互体验也更加丝滑，更重要的是，前端项目终于可以独立出来单独部署了。</p><h2>前端路由的实现原理</h2><p>在讲完前端路由的执行逻辑之后，我们深入探索一下前端控制路由的实现原理。</p><p>现在，通过URL区分路由的机制上，有两种实现方式，一种是hash模式，通过URL中#后面的内容做区分，我们称之为hash-router；另外一个方式就是history模式，在这种方式下，路由看起来和正常的URL完全一致。</p><p>这两个不同的原理，在vue-router中对应两个函数，分别是createWebHashHistory和createWebHistory。</p><p><img src=\"https://static001.geekbang.org/resource/image/d0/d3/d07894f8b9df7c1afed10b730f8276d3.jpg?wh=1546x561\" alt=\"图片\"></p><h3>hash 模式</h3><p>单页应用在页面交互、页面跳转上都是无刷新的，这极大地提高了用户访问网页的体验。<strong>为了实现单页应用，前端路由<strong><strong>的需求也变得重要了起来</strong></strong>。</strong></p><p>类似于服务端路由，前端路由实现起来其实也很简单，就是匹配不同的 URL 路径，进行解析，然后动态地渲染出区域 HTML 内容。但是这样存在一个问题，就是 URL 每次变化的时候，都会造成页面的刷新。解决这一问题的思路便是在改变 URL 的情况下，保证页面的不刷新。</p><p>在 2014 年之前，大家是通过 hash 来实现前端路由，URL hash 中的 # 就是类似于下面代码中的这种 # ：</p><pre><code class=\"language-plain\">http://www.xxx.com/#/login\n</code></pre><p>之后，在进行页面跳转的操作时，hash 值的变化并不会导致浏览器页面的刷新，只是会触发hashchange事件。在下面的代码中，通过对hashchange事件的监听，我们就可以在fn函数内部进行动态地页面切换。</p><pre><code class=\"language-javascript\">window.addEventListener('hashchange',fn)\n</code></pre><h3>history 模式</h3><p>2014年之后，因为HTML5标准发布，浏览器多了两个API：pushState 和 replaceState。通过这两个 API ，我们可以改变 URL 地址，并且浏览器不会向后端发送请求，我们就能用另外一种方式实现前端路由**。</p><p>在下面的代码中，我们监听了popstate事件，可以监听到通过pushState修改路由的变化。并且在fn函数中，我们实现了页面的更新操作。</p><pre><code class=\"language-plain\">window.addEventListener('popstate', fn)\n</code></pre><h2>手写迷你vue-router</h2><p>明白了前端路由实现原理还不够，接下来我们一起写代码直观感受一下。这里我们准备设计一个使用hash模式的迷你vue-router。</p><p>现在，我们在src/router目录下新建一个grouter文件夹，并且在grouter文件夹内部新建index.js。有了<a href=\"https://time.geekbang.org/column/article/439588\">上一讲</a>手写Vuex的基础，我们就可以在index.js中写入下面的代码。</p><p>在代码中，我们首先实现了用Router类去管理路由，并且，我们使用createWebHashHistory来返回hash模式相关的监听代码，以及返回当前URL和监听hashchange事件的方法；然后，我们通过Router类的install方法注册了Router的实例，并对外暴露createRouter方法去创建Router实例；最后，我们还暴露了useRouter方法，去获取路由实例。</p><pre><code class=\"language-javascript\">import {ref,inject} from 'vue'\nconst ROUTER_KEY = '__router__'\n\nfunction createRouter(options){\n    return new Router(options)\n}\n\nfunction useRouter(){\n    return inject(ROUTER_KEY)\n}\nfunction createWebHashHistory(){\n    function bindEvents(fn){\n        window.addEventListener('hashchange',fn)\n    }\n    return {\n        bindEvents,\n        url:window.location.hash.slice(1) || '/'\n    }\n}\nclass Router{\n    constructor(options){\n        this.history = options.history\n        this.routes = options.routes\n        this.current = ref(this.history.url)\n\n        this.history.bindEvents(()=&gt;{\n            this.current.value = window.location.hash.slice(1)\n        })\n    }\n    install(app){\n        app.provide(ROUTER_KEY,this)\n    }\n}\n\nexport {createRouter,createWebHashHistory,useRouter}\n</code></pre><p>有了上面这段代码，我们回到src/router/index.js中，可以看到下面代码的使用方式，我们使用createWebHashHistory作为history参数，使用routes作为页面的参数传递给createRouter函数。</p><pre><code class=\"language-javascript\">import {\n    createRouter,\n    createWebHashHistory,\n} from './grouter/index'\nconst router = createRouter({\n  history: createWebHashHistory(),\n  routes\n})\n</code></pre><p>下一步，我们需要注册两个内置组件router-view和router-link。在createRouter创建的Router实例上，current返回当前的路由地址，并且使用ref包裹成响应式的数据。router-view组件的功能，就是current发生变化的时候，去匹配current地址对应的组件，然后动态渲染到router-view就可以了。</p><p>我们在src/router/grouter下新建RouterView.vue，写出下面的代码。在代码中，我们首先使用useRouter获取当前路由的实例；然后通过当前的路由，也就是router.current.value的值，在用户路由配置route中计算出匹配的组件；最后通过计算属性返回comp变量，在template内部使用component组件动态渲染。</p><pre><code class=\"language-xml\">&lt;template&gt;\n    &lt;component :is=\"comp\"&gt;&lt;/component&gt;\n&lt;/template&gt;\n&lt;script setup&gt;\n\nimport {computed } from 'vue'\nimport { useRouter } from '../grouter/index'\n\nlet router = useRouter()\n\nconst comp = computed(()=&gt;{\n    const route = router.routes.find(\n        (route) =&gt; route.path === router.current.value\n    )\n    return route?route.component : null\n})\n&lt;/script&gt;\n</code></pre><p>在上面的代码中，我们的目的是介绍vue-router的大致原理。之后，在课程的源码篇中，我们会在《前端路由原理：vue-router 源码剖析》这一讲完善这个函数的路由匹配逻辑，并让这个函数支持正则匹配。</p><p>有了RouterView组件后，我们再来实现router-link组件。我们在grouter下面新建文件RouterILink.vue，并写入下面的代码。代码中的template依然是渲染一个a标签，只是把a标签的href属性前面加了个一个#， 就实现了hash的修改。</p><pre><code class=\"language-xml\">&lt;template&gt;\n    &lt;a :href=\"'#'+props.to\"&gt;\n        &lt;slot /&gt;\n    &lt;/a&gt;\n&lt;/template&gt;\n\n&lt;script setup&gt;\nimport {defineProps} from 'vue'\nlet props = defineProps({\n    to:{type:String,required:true}\n})\n\n&lt;/script&gt;\n</code></pre><p>然后，回到grouter/index.js中，我们注册router-link和router-view这两个组件, 这样hash模式的迷你vue-router就算实现了。这里我演示了支持hash模式迷你vue-router，那你不妨进一步思考一下，history模式又该如何实现。</p><pre><code class=\"language-javascript\">import {ref,inject} from 'vue'\nimport RouterLink from './RouterLink.vue'\nimport RouterView from './RouterView.vue'\nclass Router{\n    ....\n    install(app){\n        app.provide(ROUTER_KEY,this)\n        app.component(\"router-link\",RouterLink)\n        app.component(\"router-view\",RouterView)\n    }\n}\n</code></pre><p><strong>实际上，vue-router还需要处理很多额外的任务，比如路由懒加载、路由的正则匹配等等</strong>。在今天了解了vue-router原理之后，等到课程最后一部分剖析vue-router源码的那一讲时，你就可以真正感受到“玩具版”的router和实战开发中的router的区别。</p><h2>vue-router实战要点</h2><p>了解了vue-router的原理后，我们再来介绍一下vue-router在实战中的几个常见功能。</p><p>首先是在<strong>路由匹配的语法</strong>上，vue-router支持动态路由。例如我们有一个用户页面，这个页面使用的是User组件，但是每个用户的信息都不一样，需要给每一个用户配置单独的路由入口，这时就可以按下面代码中的样式来配置路由。</p><p>在下面的代码中，冒号开头的id就是路由的动态部分，会同时匹配/user/dasheng和/user/geektime， 这一部分的详细内容你可以参考<a href=\"https://next.router.vuejs.org/zh/guide/essentials/route-matching-syntax.html\">官方文档的路由匹配语法部分</a>。</p><pre><code class=\"language-javascript\">const routes = [\n  { path: '/users/:id', component: User },\n]\n</code></pre><p>然后是在实战中，对于有些页面来说，只有管理员才可以访问，普通用户访问时，会提示没有权限。这时就需要用到vue-router的<strong>导航守卫功能</strong>了，也就是在访问路由页面之前进行权限认证，这样可以做到对页面的控制，也就是只允许某些用户可以访问。</p><p>此外，在项目庞大之后，如果首屏加载文件太大，那么就可能会影响到性能。这个时候，我们可以使用vue-router的<strong>动态导入功能</strong>，把不常用的路由组件单独打包，当访问到这个路由的时候再进行加载，这也是vue项目中常见的优化方式。</p><p>关于vue-router实战中的种种优化和注意点，在课程后续的15-19讲，也就是实战痛点中，我会借助实战场景，挨个给你讲解。</p><h2>总结</h2><p>好，这一讲的主要内容就讲完了，我们来总结一下今天学到的内容。首先，我们回顾了前后端开发模式的演变，也即前端项目经历的从最初的嵌入到后端内部发布，再到现在的前后端分离的过程，而这一过程也见证了前端SPA应用的发展。</p><p>然后，我们讲到了前端路由实现的两种方式，也即通过监听不同的浏览器事件，来实现hash模式和history模式。之后，根据这个原理，我们手写了一个迷你的vue-router，通过createRouter创建路由实例，并在app.use函数内部执行router-link和router-view组件的注册，最后在router-view组件内部动态的渲染组件。</p><p>在这一讲的最后，我还给你简单说明了一下vue-router实战中常见的一些痛点。vue-router进一步实战的内容，比如权限认证、页面懒加载等功能，在课程后面的15-19讲中还会详细展开。相信今天这一讲结束后，你一定对vue-router有了更加新的理解。</p><h2>思考题</h2><p>最后给你留个思考题，今天我们只用了大概60行代码，就实现了hash模式的迷你vue-router，那你还可以思考一下，支持history模式的迷你vue-router又该如何实现呢？</p><p>欢迎在留言区分享你的答案，也欢迎你把这一讲分享给你的朋友们，我们下一讲见！</p>","neighbors":{"left":{"article_title":"10 | 数据流：如何使用Vuex设计你的数据流","id":439588},"right":{"article_title":"12 | 调试：提高开发效率必备的Vue Devtools","id":442479}},"comments":[{"had_liked":false,"id":320850,"user_name":"ll","can_delete":false,"product_type":"c1","uid":1296458,"ip_address":"","ucode":"57C5DAC5B51036","user_header":"https://static001.geekbang.org/account/avatar/00/13/c8/4a/3a322856.jpg","comment_is_top":false,"comment_ctime":1636530738,"is_pvip":true,"replies":[{"id":"116507","content":"精品总结！！！","user_name":"作者回复","user_name_real":"花果山大圣","uid":"1003715","ctime":1636637746,"ip_address":"","comment_id":320850,"utype":1}],"discussion_count":4,"race_medal":0,"score":"173435222578","product_id":100094401,"comment_content":"本节又是收获满满，巩固加回顾了关于前端路由的整体知识结构，有一下几点：<br><br>1. 什么是路由<br>   所谓 router 是干什么的？是指 route 的，这里中文翻译的是 “路”。何为“路由”，可能是“路由哪里 <br>   来&quot;；这里的“路”，广义上来说是“资源”，可以是“页面”，也可以是 json 音视频等等。<br><br>   如果把路由具象化，它是这么个东西；你告诉它一串神秘的代码（地址，url等），它给你“宝贵的资<br>   源”，它就是个“指路的”。<br><br>   路由是“天然”存在的，因为我们所有在网上的行为本质都是向“某个地方”要“某些资源”<br><br> 2. 前后端路由的区别的补充<br>    传统方式与SPA“页面跳转”的问题涉及一个核心的问题，是“导航流程”，具体可以参考，李兵老师 <br>    《浏览器工作原理与实践》中导航流程一节。<br><br>    导航流程简单说，就是浏览器地址栏输入地址后，到浏览器准备渲染页面前这个阶段。开始流程的 <br>    一个标志，就是浏览器标签页标题左边开始转圈圈。<br><br>    传统的开发模式写出的页面，在每一次请求网络资源的过程，理论上都有这个流程。这可能就是两者 <br>    之间性能差异所在<br><br>    而 SPA 开发模式，网络资源用 XMLHttpRequest 调用，页面部分用JS“模拟”页面刷新。这里JS模拟部<br>    分就是现在所学 vue-router 的工作。<br><br> 3. 关于路由实现<br>    总结下，时间以2014年，HTML5标准作为分野，分两个部分<br>    – API：location.hash；Event：hashchange<br>    – API：history.pushState，history.replaceState；Event：popstate<br><br>    这个就是前端路由的实现核心，如果对具体API感兴趣，可以参考《Javascript 高级程序设计》第4<br>    版，12章，关于 BOM 的描述。<br><br>    大致意思是 hash 的改变不触发页面 reloads；pushState，replaceState 改变 history 也不触发<br>    reloads。浏览器的这种行为，是根据 HTML5 这个标准实现的<br><br>    然后，第一个API支持了路由的 hash 模式，在这之前 hash 的应用 &lt;a id=&quot;xxx&quot;&gt; 在页面中的定位，<br>    第二个API支持了路由的 history 模式，但这个需要后端配合调整下后端路由；为什么，试着将要跳 <br>    转的地址复制到浏览器地址栏，然后按回车，分析下页面渲染的过程，大概就清楚了。","like_count":40,"discussions":[{"author":{"id":1003715,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/50/c3/0aa50246.jpg","nickname":"花果山大圣","note":"","ucode":"25C0A36D628037","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":530143,"discussion_content":"精品总结！！！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1636637746,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2177627,"avatar":"https://static001.geekbang.org/account/avatar/00/21/3a/5b/e59f76a6.jpg","nickname":"婧子酱.","note":"","ucode":"B47F87EFA8F8F5","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":572563,"discussion_content":"膜拜了大佬 ","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1652858010,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1377886,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/M5jrJZliboJoN9cNp0iahPqwXe3Zf6CUeiaUMYY8icRY0Hvw9wZ36USS6tP2KE16n2lf8W0IhNWiaoBHUYyrwoT0vrg/132","nickname":"love star","note":"","ucode":"11B0D208BA7C7A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":561989,"discussion_content":"大佬，真大佬\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1649757863,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2050342,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/49/26/6cb8675a.jpg","nickname":"卍 美美菇凉  卐","note":"","ucode":"9E461AA8F0FA32","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":545064,"discussion_content":"大佬也太厉害了   评论还带推荐书籍的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1641817575,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":320755,"user_name":"Kevin","can_delete":false,"product_type":"c1","uid":1129186,"ip_address":"","ucode":"8FE9CE88EA0C57","user_header":"https://static001.geekbang.org/account/avatar/00/11/3a/e2/c48bd3b7.jpg","comment_is_top":false,"comment_ctime":1636505126,"is_pvip":false,"replies":[{"id":"116510","content":"history模式部署的时候，需要nginx新增配置，把所有路由都指向index.html","user_name":"作者回复","user_name_real":"花果山大圣","uid":"1003715","ctime":1636637860,"ip_address":"","comment_id":320755,"utype":1}],"discussion_count":4,"race_medal":0,"score":"27406308902","product_id":100094401,"comment_content":"关于webHashHistory,和webHistory 我这里有一个实践要注意的点，不知是否正确。<br>就是是否需要服务器这个角色参与。<br>whh，完全是在浏览器中完成的路由行为。<br>wh 可能是要有服务器参与的 <br>这一点，在最近的项目中，将vue项目打包直接放到Android assert目录下时，使用两种路由一个404, 一个正常，后续改成了whh了<br><br>请大佬，解惑。","like_count":6,"discussions":[{"author":{"id":1003715,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/50/c3/0aa50246.jpg","nickname":"花果山大圣","note":"","ucode":"25C0A36D628037","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":530102,"discussion_content":"history模式部署的时候，需要nginx新增配置，把所有路由都指向index.html","likes_number":5,"is_delete":false,"is_hidden":false,"ctime":1636637860,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1129186,"avatar":"https://static001.geekbang.org/account/avatar/00/11/3a/e2/c48bd3b7.jpg","nickname":"Kevin","note":"","ucode":"8FE9CE88EA0C57","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":413595,"discussion_content":"早上到公司，找了一个前段的大佬问了一下这个问题，得到的回复大概意思是：\nwh模式，是一个标准的url，后面的ng会负责重定向到特定的页面，然后这特定的页面，应该就是index.html，由于这个index加载了route组件，因此可以处理路由信息。\nwhh的方式，#是一个纯前段的方式，一般ng不做处理。\n\n现在为啥都使用wh呢？\n1）更好看，更标准的链接\n2）能玩的花样更多了，比如ssr，SEO等等。\n3）算是一种协议的进步，浏览器为了让自己更好，算是进步","likes_number":4,"is_delete":false,"is_hidden":false,"ctime":1636520539,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1465310,"avatar":"https://static001.geekbang.org/account/avatar/00/16/5b/de/152f1c2c.jpg","nickname":"Warn","note":"","ucode":"F2F7FCDB0940D0","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":413614,"discussion_content":"Vue是单入口，也就是index.html。wh是URL模式（然而这个URL对应的入口是找不到的），所以需要通过nginx之类的配置下，把wh模式下的url转发到index.html。\n简单理解应该差不多是这样","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1636527320,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1198158,"avatar":"https://static001.geekbang.org/account/avatar/00/12/48/4e/51896855.jpg","nickname":"落风","note":"","ucode":"D70B221D22A439","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":532838,"discussion_content":"hash在url中是锚点的角色，并不是决定服务端读取资源的路径，一般来说，只在浏览器生效","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1637717796,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"user_type\":1}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":336217,"user_name":"艾瑞","can_delete":false,"product_type":"c1","uid":1595064,"ip_address":"","ucode":"F948D3BE23E8BE","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/18yCkSMTZyw78cUmquiceycC9lDnUFqFO1dU44jG0j9lCr7LB0oDOQ5uMylBNarIAzOnbrR4Vfdab6wO4FQIQLw/132","comment_is_top":false,"comment_ctime":1646013087,"is_pvip":false,"discussion_count":4,"race_medal":0,"score":"14530914975","product_id":100094401,"comment_content":"老师 想问下hash模式和history模式在实际项目开发怎么去选择用哪个呢","like_count":3,"discussions":[{"author":{"id":2159152,"avatar":"https://static001.geekbang.org/account/avatar/00/20/f2/30/5b677e8d.jpg","nickname":"Yvan","note":"","ucode":"DA5BB215E65ED3","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":590326,"discussion_content":"history需要后端配合，history不兼容低端浏览器，\nhash路由唯一的缺点就是看着不像一个正常的url地址，hash本来不是用来做路由的，做路由是他的副业，history是专业做路由的，新出的，但不兼容出之前的浏览器","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1665658913,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"北京"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1785361,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/3e/11/29a7e7be.jpg","nickname":"含个奶嘴闯天下","note":"","ucode":"60152F24D56E3B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":585321,"discussion_content":"这个应该还是根据需求了，如果没有特殊要求或者没有会配置的啥就用hash ,否则hsitory","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1661481565,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"北京"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2826951,"avatar":"https://static001.geekbang.org/account/avatar/00/2b/22/c7/b2b45f7c.jpg","nickname":"李志豪","note":"","ucode":"7A141FCA70B639","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":581347,"discussion_content":"hsitory\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1658734709,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1133464,"avatar":"https://static001.geekbang.org/account/avatar/00/11/4b/98/20ff3f6a.jpg","nickname":"这个需求做不了","note":"","ucode":"2BC0A306550D45","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":576086,"discussion_content":"老师也不会 ","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1655274695,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":320982,"user_name":"Geek_4578dc","can_delete":false,"product_type":"c1","uid":2820898,"ip_address":"","ucode":"CC5E01CC76DF2D","user_header":"","comment_is_top":false,"comment_ctime":1636610368,"is_pvip":false,"replies":[{"id":"116499","content":"第一部分的演示代码在这里了，欢迎发现bug提pr<br>https:&#47;&#47;github.com&#47;shengxinjing&#47;geektime-vue-course","user_name":"作者回复","user_name_real":"花果山大圣","uid":"1003715","ctime":1636637557,"ip_address":"","comment_id":320982,"utype":1}],"discussion_count":1,"race_medal":0,"score":"14521512256","product_id":100094401,"comment_content":"大圣 实战代码仓库地址 能发一下吗","like_count":3,"discussions":[{"author":{"id":1003715,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/50/c3/0aa50246.jpg","nickname":"花果山大圣","note":"","ucode":"25C0A36D628037","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":530177,"discussion_content":"第一部分的演示代码在这里了，欢迎发现bug提pr\nhttps://github.com/shengxinjing/geektime-vue-course","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1636637557,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":348239,"user_name":"拖鞋","can_delete":false,"product_type":"c1","uid":1089424,"ip_address":"","ucode":"09985C731090A3","user_header":"https://static001.geekbang.org/account/avatar/00/10/9f/90/4656119a.jpg","comment_is_top":false,"comment_ctime":1654857094,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10244791686","product_id":100094401,"comment_content":"补充一下 vue-router 4.x 已经废弃了 hashchange 统一使用 popstate","like_count":3},{"had_liked":false,"id":347356,"user_name":"郭庆","can_delete":false,"product_type":"c1","uid":1646349,"ip_address":"","ucode":"8ED0EC937C0C1A","user_header":"https://static001.geekbang.org/account/avatar/00/19/1f/0d/576f1266.jpg","comment_is_top":false,"comment_ctime":1653966919,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10243901511","product_id":100094401,"comment_content":"history.pushState()并不会触发监听的popstate事件，得自己手动改current.value的值。。。<br>","like_count":2},{"had_liked":false,"id":346930,"user_name":"二饼","can_delete":false,"product_type":"c1","uid":2415448,"ip_address":"","ucode":"48120565D135F7","user_header":"https://static001.geekbang.org/account/avatar/00/24/db/58/a7a0a85b.jpg","comment_is_top":false,"comment_ctime":1653542380,"is_pvip":true,"discussion_count":0,"race_medal":1,"score":"5948509676","product_id":100094401,"comment_content":"大圣在评论区提到的：history 有利于 seo，这一点我以前使用一些博客页面生成工具上有体会，hash 不便于 seo，为了便于搜索引擎爬虫的爬取必须得做站点地图。","like_count":1},{"had_liked":false,"id":330383,"user_name":"Jerry.L","can_delete":false,"product_type":"c1","uid":2887218,"ip_address":"","ucode":"782E07A98104F5","user_header":"https://static001.geekbang.org/account/avatar/00/2c/0e/32/df72d0c1.jpg","comment_is_top":false,"comment_ctime":1641959929,"is_pvip":false,"replies":[{"id":"120648","content":"最新的vue compiler会内置defineProps，不需要import也可以直接使用，我后来感觉导入的话演示代码会帮助理解","user_name":"作者回复","user_name_real":"编辑","uid":"1003715","ctime":1642212801,"ip_address":"","comment_id":330383,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5936927225","product_id":100094401,"comment_content":"大圣老师，我跟你一样的代码，为什么在命令行提示：[@vue&#47;compiler-sfc] `defineProps` is a compiler macro and no longer needs to be imported.然后在浏览器控制台又提示：Uncaught SyntaxError: The requested module &#39;&#47;src&#47;router&#47;grouter&#47;index.js&#39; does not provide an export named &#39;default&#39;。","like_count":1,"discussions":[{"author":{"id":1003715,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/50/c3/0aa50246.jpg","nickname":"花果山大圣","note":"","ucode":"25C0A36D628037","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":546178,"discussion_content":"最新的vue compiler会内置defineProps，不需要import也可以直接使用，我后来感觉导入的话演示代码会帮助理解","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1642212801,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":325149,"user_name":"挙","can_delete":false,"product_type":"c1","uid":1377239,"ip_address":"","ucode":"0BE7D1D0C8A874","user_header":"https://static001.geekbang.org/account/avatar/00/15/03/d7/33eabc6a.jpg","comment_is_top":false,"comment_ctime":1638843115,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"5933810411","product_id":100094401,"comment_content":"【2014 年之后，因为 HTML5 标准发布，浏览器多了两个 API：pushState 和 replaceState。】虽然2014年正式发布，但2008年草案发布后就很多浏览器支持了，连ie10都支持它","like_count":1},{"had_liked":false,"id":324990,"user_name":"Aaron","can_delete":false,"product_type":"c1","uid":1203490,"ip_address":"","ucode":"05B21694762045","user_header":"https://static001.geekbang.org/account/avatar/00/12/5d/22/5aed3202.jpg","comment_is_top":false,"comment_ctime":1638772462,"is_pvip":true,"replies":[{"id":"118328","content":"感谢提醒 我纠正一下","user_name":"作者回复","user_name_real":"编辑","uid":"1003715","ctime":1639398368,"ip_address":"","comment_id":324990,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5933739758","product_id":100094401,"comment_content":"老师好，调用 pushState replaceState 并不会触发 popstate 事件，监听通常需要 hack 这两个 api。<br>https:&#47;&#47;developer.mozilla.org&#47;en-US&#47;docs&#47;Web&#47;API&#47;PopStateEvent#:~:text=Note%3A%20Just%20calling%20history.pushState()%20or%20history.replaceState()%20won%27t%20trigger%20a%20popstate%20event.","like_count":1,"discussions":[{"author":{"id":1003715,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/50/c3/0aa50246.jpg","nickname":"花果山大圣","note":"","ucode":"25C0A36D628037","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":538317,"discussion_content":"感谢提醒 我纠正一下","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1639398368,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":322933,"user_name":"风一样","can_delete":false,"product_type":"c1","uid":2818001,"ip_address":"","ucode":"5EA5129D487E43","user_header":"https://static001.geekbang.org/account/avatar/00/2a/ff/d1/7a4a6f4f.jpg","comment_is_top":false,"comment_ctime":1637663267,"is_pvip":false,"replies":[{"id":"117373","content":"app.use的时候会执行，可以看下这个文档https:&#47;&#47;v3.cn.vuejs.org&#47;api&#47;application-api.html#use","user_name":"作者回复","user_name_real":"编辑","uid":"1003715","ctime":1637932827,"ip_address":"","comment_id":322933,"utype":1}],"discussion_count":3,"race_medal":0,"score":"5932630563","product_id":100094401,"comment_content":"老师请问Router对象的install，是在哪里用呢？在源码中没有看到，还有install函数的参数，是什么对象呢？","like_count":1,"discussions":[{"author":{"id":1003715,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/50/c3/0aa50246.jpg","nickname":"花果山大圣","note":"","ucode":"25C0A36D628037","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":533681,"discussion_content":"app.use的时候会执行，可以看下这个文档https://v3.cn.vuejs.org/api/application-api.html#use","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1637932827,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2818001,"avatar":"https://static001.geekbang.org/account/avatar/00/2a/ff/d1/7a4a6f4f.jpg","nickname":"风一样","note":"","ucode":"5EA5129D487E43","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":533687,"discussion_content":"谢谢","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1637933019,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1240598,"avatar":"https://static001.geekbang.org/account/avatar/00/12/ee/16/c467d227.jpg","nickname":"Sure","note":"","ucode":"89983259D714F1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":533342,"discussion_content":"vue-core源码中，会调用对应插件的install方法","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1637841815,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"user_type\":1}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":322078,"user_name":"balabla","can_delete":false,"product_type":"c1","uid":1678218,"ip_address":"","ucode":"A8790AA2A034D5","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIdLUtkvdNcLTEebUx5rY36rzibJjMeiazPbIvGtNWWKE0iafVpNticFNFakUHVKjEy6ztqn3TX002ueQ/132","comment_is_top":false,"comment_ctime":1637159346,"is_pvip":false,"replies":[{"id":"116990","content":"vue-router4主要原理上的变化，就是路由有了类似css选择器优先级的算法，在vue-router3的时候，多个路由命中一个路由，具体哪个生效需要看注册顺序，如果动态注册路由就会比较麻烦，这是vuerouter4解决的一个很重要的昌吉给你<br><br>vue3响应式和vue2的defineReactive原理不同，不过用起来有些类似","user_name":"作者回复","user_name_real":"编辑","uid":"1003715","ctime":1637242482,"ip_address":"","comment_id":322078,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5932126642","product_id":100094401,"comment_content":"大圣老师，看完之后，仍有几个问题，求翻牌+1<br>1.能说下vue-router3.x到vue-router4.x有什么需要重点关注的地方嘛<br>2.vue-router3.x和vue-router4.x 从底层实现原理上，是否有变化<br>3.代码里current 的响应式用的 ref 和用vue.util.definereactive 效果一样嘛","like_count":1,"discussions":[{"author":{"id":1003715,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/50/c3/0aa50246.jpg","nickname":"花果山大圣","note":"","ucode":"25C0A36D628037","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":531153,"discussion_content":"vue-router4主要原理上的变化，就是路由有了类似css选择器优先级的算法，在vue-router3的时候，多个路由命中一个路由，具体哪个生效需要看注册顺序，如果动态注册路由就会比较麻烦，这是vuerouter4解决的一个很重要的昌吉给你\n\nvue3响应式和vue2的defineReactive原理不同，不过用起来有些类似","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1637242482,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":321984,"user_name":"香橙派来的","can_delete":false,"product_type":"c1","uid":2761281,"ip_address":"","ucode":"8ABB95ACBE86DC","user_header":"https://static001.geekbang.org/account/avatar/00/2a/22/41/f179e7b5.jpg","comment_is_top":false,"comment_ctime":1637126737,"is_pvip":false,"replies":[{"id":"118414","content":"RouterILnk拼错了，少了一个i ，应该是RouterILink.vue","user_name":"作者回复","user_name_real":"编辑","uid":"1003715","ctime":1639404850,"ip_address":"","comment_id":321984,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5932094033","product_id":100094401,"comment_content":"有了 RouterView 组件后，我们再来实现 router-link 组件。我们在 grouter 下面新建文件 RouterILnk.vue，并写入下面的代码。代码中的 template 依然是渲染一个 a 标签，只是把 a 标签的 href 属性前面加了个一个 #， 就实现了 hash 的修改。<br><br>老师，这一段中的 “新建文件RouterILnk.vue ” 与下文的注册 “import RouterLink from &#39;.&#47;RouterLink.vue&#39; ”的文件名字对不上，应该是打错了，会找不到资源","like_count":1,"discussions":[{"author":{"id":1003715,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/50/c3/0aa50246.jpg","nickname":"花果山大圣","note":"","ucode":"25C0A36D628037","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":538429,"discussion_content":"RouterILnk拼错了，少了一个i ，应该是RouterILink.vue","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1639404850,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":321027,"user_name":"@","can_delete":false,"product_type":"c1","uid":1985141,"ip_address":"","ucode":"B308157E3FA393","user_header":"https://static001.geekbang.org/account/avatar/00/1e/4a/75/51435f4b.jpg","comment_is_top":false,"comment_ctime":1636624747,"is_pvip":false,"replies":[{"id":"116497","content":"3.2开始之后其实不需要import了，不过这里确实应该加上，方便理解<br>第一部分的演示代码在这里了，欢迎发现bug提pr<br>https:&#47;&#47;github.com&#47;shengxinjing&#47;geektime-vue-course<br>","user_name":"作者回复","user_name_real":"花果山大圣","uid":"1003715","ctime":1636637527,"ip_address":"","comment_id":321027,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5931592043","product_id":100094401,"comment_content":"<br>&lt;template&gt;<br>    &lt;a :href=&quot;&#39;#&#39;+props.to&quot;&gt;<br>        &lt;slot &#47;&gt;<br>    &lt;&#47;a&gt;<br>&lt;&#47;template&gt;<br><br>&lt;script setup&gt;<br>let props = defineProps({<br>    to:{type:String,required:true}<br>})<br><br>&lt;&#47;script&gt;<br><br>这里是否需要引入下defineProps，大段代码部分能否内部写点注释<br>建议老师跟着文章里的代码打一遍，看看能不能跑通<br>代码上 有些马虎  是否是从课件里粘出来的时候整漏了","like_count":1,"discussions":[{"author":{"id":1003715,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/50/c3/0aa50246.jpg","nickname":"花果山大圣","note":"","ucode":"25C0A36D628037","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":530189,"discussion_content":"3.2开始之后其实不需要import了，不过这里确实应该加上，方便理解\n第一部分的演示代码在这里了，欢迎发现bug提pr\nhttps://github.com/shengxinjing/geektime-vue-course\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1636637527,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":321001,"user_name":"关关君","can_delete":false,"product_type":"c1","uid":1562774,"ip_address":"","ucode":"98EAD61438860A","user_header":"https://static001.geekbang.org/account/avatar/00/17/d8/96/dcf52430.jpg","comment_is_top":false,"comment_ctime":1636615102,"is_pvip":false,"replies":[{"id":"116498","content":"有demo代码地址不","user_name":"作者回复","user_name_real":"花果山大圣","uid":"1003715","ctime":1636637551,"ip_address":"","comment_id":321001,"utype":1}],"discussion_count":4,"race_medal":0,"score":"5931582398","product_id":100094401,"comment_content":"很早啊就知道History这个API了但是没用过也用不上，但今天用History写路由的时候，看了API才发现使用history.pushState()方法的时候不会触发 popstate 这个事件，只有当浏览器操作行为的时候才会触发，就比如back forward。<br>所以在实现的时候调用完pushState之后我手动修改的current.value 的值才成功了。","like_count":1,"discussions":[{"author":{"id":1003715,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/50/c3/0aa50246.jpg","nickname":"花果山大圣","note":"","ucode":"25C0A36D628037","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":530183,"discussion_content":"有demo代码地址不","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1636637551,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2546490,"avatar":"https://static001.geekbang.org/account/avatar/00/26/db/3a/58a1da4f.jpg","nickname":"王帅兵","note":"","ucode":"5353D7E86962EE","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":567276,"discussion_content":"所以代码中的 bindEvent 并没有实际作用，起作用的只有 push时 对 current 的赋值","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1650873278,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1678218,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIdLUtkvdNcLTEebUx5rY36rzibJjMeiazPbIvGtNWWKE0iafVpNticFNFakUHVKjEy6ztqn3TX002ueQ/132","nickname":"balabla","note":"","ucode":"A8790AA2A034D5","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":531071,"discussion_content":"我也遇到类似问题，我是通过var popStateEvent = new PopStateEvent(&#39;popstate&#39;,);\n    dispatchEvent(popStateEvent); 来触发popstate ，正解是如何触发","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1637220137,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"user_type\":1}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1562774,"avatar":"https://static001.geekbang.org/account/avatar/00/17/d8/96/dcf52430.jpg","nickname":"关关君","note":"","ucode":"98EAD61438860A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":414235,"discussion_content":"https://github.com/yanbinkwan/ViteApp/blob/main/src/router/grouter/index.js#L53\n","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1636698827,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":320938,"user_name":"海阔天空","can_delete":false,"product_type":"c1","uid":1327016,"ip_address":"","ucode":"16C87A0052A08B","user_header":"https://static001.geekbang.org/account/avatar/00/14/3f/a8/8da58e53.jpg","comment_is_top":false,"comment_ctime":1636587983,"is_pvip":false,"replies":[{"id":"116502","content":"对的 history路由也更有利于seo","user_name":"作者回复","user_name_real":"花果山大圣","uid":"1003715","ctime":1636637649,"ip_address":"","comment_id":320938,"utype":1}],"discussion_count":2,"race_medal":0,"score":"5931555279","product_id":100094401,"comment_content":"现在一般都用history路由了吧，history路由与html5的配合更好，能充分利用html5的特性，比如html5中监听滚动条的状态等，history都可以监听","like_count":1,"discussions":[{"author":{"id":1003715,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/50/c3/0aa50246.jpg","nickname":"花果山大圣","note":"","ucode":"25C0A36D628037","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":530169,"discussion_content":"对的 history路由也更有利于seo","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1636637649,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1828678,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIYy2cA4FibyrwrIfHxBa5OqCwIaya8icuTT9TpxbECSeeqicdtpbMcEweEb8Wq7hLjnZOaI8FgbOquA/132","nickname":"Latency","note":"","ucode":"936D3582CCA3FD","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":414925,"discussion_content":"都是用history路由吗 那为啥现在很多vue项目都还是hash模式的 可以讲解一下吗~","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1636939329,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":320897,"user_name":"拼搏、进取","can_delete":false,"product_type":"c1","uid":2818717,"ip_address":"","ucode":"C8BB52028C1B5E","user_header":"https://static001.geekbang.org/account/avatar/00/2b/02/9d/566b9065.jpg","comment_is_top":false,"comment_ctime":1636546604,"is_pvip":false,"replies":[{"id":"116505","content":"第一部分的演示代码在这里了，欢迎发现bug提pr<br>https:&#47;&#47;github.com&#47;shengxinjing&#47;geektime-vue-course","user_name":"作者回复","user_name_real":"花果山大圣","uid":"1003715","ctime":1636637672,"ip_address":"","comment_id":320897,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5931513900","product_id":100094401,"comment_content":"const comp = computed(()=&gt;{<br>    const route = router.routes[0].children.find(<br>        (route) =&gt; route.path === router.current.value    )<br><br>    return route?route.component : null<br>})<br>大圣老师， router.routes[0].children，这里报错了。我改成outer.routes.find()......","like_count":1,"discussions":[{"author":{"id":1003715,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/50/c3/0aa50246.jpg","nickname":"花果山大圣","note":"","ucode":"25C0A36D628037","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":530158,"discussion_content":"第一部分的演示代码在这里了，欢迎发现bug提pr\nhttps://github.com/shengxinjing/geektime-vue-course","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1636637672,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":320795,"user_name":"一线蓝光","can_delete":false,"product_type":"c1","uid":2826802,"ip_address":"","ucode":"CDF0FF31756774","user_header":"https://static001.geekbang.org/account/avatar/00/2b/22/32/10c26ee4.jpg","comment_is_top":false,"comment_ctime":1636513307,"is_pvip":false,"replies":[{"id":"116508","content":"这一段写的多余了，不需要使用children，这是后面实战代码中的路由配置了，第一部分的演示代码在这里了，欢迎发现bug提pr<br>https:&#47;&#47;github.com&#47;shengxinjing&#47;geektime-vue-course","user_name":"作者回复","user_name_real":"花果山大圣","uid":"1003715","ctime":1636637772,"ip_address":"","comment_id":320795,"utype":1}],"discussion_count":2,"race_medal":0,"score":"5931480603","product_id":100094401,"comment_content":"在计算匹配的组件时，我们直接取得 children 匹配即可。这里我使用children匹配不上，直接使用router.routes进行的匹配， 麻烦问下是什么原因呢","like_count":1,"discussions":[{"author":{"id":1296458,"avatar":"https://static001.geekbang.org/account/avatar/00/13/c8/4a/3a322856.jpg","nickname":"ll","note":"","ucode":"57C5DAC5B51036","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":413630,"discussion_content":"可能是故意埋得”坑“，起提醒作用。代码不涉及子路由实现，直接遍历routes就好","likes_number":4,"is_delete":false,"is_hidden":false,"ctime":1636530994,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1003715,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/50/c3/0aa50246.jpg","nickname":"花果山大圣","note":"","ucode":"25C0A36D628037","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":530117,"discussion_content":"这一段写的多余了，不需要使用children，这是后面实战代码中的路由配置了，第一部分的演示代码在这里了，欢迎发现bug提pr\nhttps://github.com/shengxinjing/geektime-vue-course","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1636637772,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":359584,"user_name":"Yvan","can_delete":false,"product_type":"c1","uid":2159152,"ip_address":"北京","ucode":"DA5BB215E65ED3","user_header":"https://static001.geekbang.org/account/avatar/00/20/f2/30/5b677e8d.jpg","comment_is_top":false,"comment_ctime":1665659112,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1665659112","product_id":100094401,"comment_content":"如果有手写history路由就更好了","like_count":0},{"had_liked":false,"id":334660,"user_name":"子铭","can_delete":false,"product_type":"c1","uid":1156419,"ip_address":"","ucode":"221383803E5732","user_header":"https://static001.geekbang.org/account/avatar/00/11/a5/43/d32dd35a.jpg","comment_is_top":false,"comment_ctime":1645064005,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1645064005","product_id":100094401,"comment_content":"从模板到单面应用之间，是不是还少了一个多页应用，多页应用也是可以独立部署的，而且也属于jquery时代的。","like_count":0},{"had_liked":false,"id":323624,"user_name":"weineel","can_delete":false,"product_type":"c1","uid":1049741,"ip_address":"","ucode":"6DC6EF4F256A53","user_header":"https://static001.geekbang.org/account/avatar/00/10/04/8d/005c2ff3.jpg","comment_is_top":false,"comment_ctime":1638027592,"is_pvip":true,"discussion_count":0,"race_medal":2,"score":"1638027592","product_id":100094401,"comment_content":"function createWebHashHistory(){<br>    function bindEvents(fn){<br>        window.addEventListener(&#39;hashchange&#39;,fn)<br>    }<br>    return {<br>        bindEvents,<br>        &#47;&#47; 改成 url: () =&gt; window.location.hash.slice(1) || &#39;&#47;&#39;<br>        url:window.location.hash.slice(1) || &#39;&#47;&#39;<br>    }<br>}<br><br>在 Router 的构造函数里就改成函数取 url,面向接口编程。<br>this.history.bindEvents(()=&gt;{<br>    this.current.value = this.history.url()<br> })<br><br>那么实现history 模式就简单了，只要实现一个 createWebHistory 函数返回用 state api 实现的 bindEvents，和 url 函数的对象就好了。","like_count":0},{"had_liked":false,"id":323472,"user_name":"Devo Zou","can_delete":false,"product_type":"c1","uid":2815108,"ip_address":"","ucode":"1203CDA305E8C1","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/8NIo06kqG0V5GL2UvFVBVkkuKdhT3BjO8ZUIibvXmFSgc0tvsOiaH9IibchvMKtpdnfKfFckuhdcicyghVV30BDhicA/132","comment_is_top":false,"comment_ctime":1637919385,"is_pvip":false,"replies":[{"id":"117366","content":"#去掉其实不是，history模式的话需要拦截默认的点击事件，走pushState，a标签默认就会刷新页面","user_name":"作者回复","user_name_real":"编辑","uid":"1003715","ctime":1637932539,"ip_address":"","comment_id":323472,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1637919385","product_id":100094401,"comment_content":"function createWebHistory() {<br>  function bindEvents(fn) {<br>    window.addEventListener(&quot;popstate&quot;, fn);<br>  }<br>  return {<br>    bindEvents,<br>    url: window.location.pathname || &quot;&#47;&quot;,<br>  };<br>}<br><br>另外再把RouterLink里面的a标签href的 &#39;#&#39; 去掉就可以实现history 模式了。不知道这样实现对不对[捂脸]<br>","like_count":0,"discussions":[{"author":{"id":1003715,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/50/c3/0aa50246.jpg","nickname":"花果山大圣","note":"","ucode":"25C0A36D628037","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":533674,"discussion_content":"#去掉其实不是，history模式的话需要拦截默认的点击事件，走pushState，a标签默认就会刷新页面","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1637932539,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":321039,"user_name":"bugu","can_delete":false,"product_type":"c1","uid":1862545,"ip_address":"","ucode":"FEBF82A876C979","user_header":"https://static001.geekbang.org/account/avatar/00/1c/6b/91/168e10a1.jpg","comment_is_top":false,"comment_ctime":1636629263,"is_pvip":true,"replies":[{"id":"116493","content":"https:&#47;&#47;github.com&#47;shengxinjing&#47;geektime-vue-course","user_name":"作者回复","user_name_real":"花果山大圣","uid":"1003715","ctime":1636637384,"ip_address":"","comment_id":321039,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1636629263","product_id":100094401,"comment_content":"本期bug题解：https:&#47;&#47;github.com&#47;HaoChunYang&#47;vue3-class&#47;blob&#47;main&#47;todo-list&#47;src&#47;router&#47;hrouter&#47;RouterView.vue<br>哈哈","like_count":0,"discussions":[{"author":{"id":1003715,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/50/c3/0aa50246.jpg","nickname":"花果山大圣","note":"","ucode":"25C0A36D628037","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":530197,"discussion_content":"https://github.com/shengxinjing/geektime-vue-course","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1636637384,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":320761,"user_name":"不必在乎我是谁","can_delete":false,"product_type":"c1","uid":1378396,"ip_address":"","ucode":"BEEC7DBD50AE9A","user_header":"https://static001.geekbang.org/account/avatar/00/15/08/5c/5c160dcf.jpg","comment_is_top":false,"comment_ctime":1636507167,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1636507167","product_id":100094401,"comment_content":"一楼一楼","like_count":0},{"had_liked":false,"id":320753,"user_name":"Pride and Prejudice","can_delete":false,"product_type":"c1","uid":2461995,"ip_address":"","ucode":"048B07345D90F2","user_header":"https://static001.geekbang.org/account/avatar/00/25/91/2b/d919ae25.jpg","comment_is_top":false,"comment_ctime":1636504805,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1636504805","product_id":100094401,"comment_content":"👍🏻","like_count":0}]}