{"id":740985,"title":"参考文献","content":"\n<p>[1] tree swing pictures[EB/OL].</p>\n<p>[2] MCCONNELL S. 代码大全（第2 版）[M]. 金戈, 汤凌, 陈硕, 等译. 北京: 电子出版社, 2006.</p>\n<p>[3] ABELSON H, SUSSMAN G J, SUSSMAN J. 计算机程序的构造和解释[M]. 裘宗燕, 译. 北京: 机械工业出版社, 2004.</p>\n<p>[4] BOEHM B W. A spiral model of software development and enhancement[J]. Computer, 1988, 21(5): 61-72.</p>\n<p>[5] RUBEY R J. the complete pasta theory of software[EB/OL].</p>\n<p>[6] 杨冠宝. 阿里巴巴Java 开发手册[M]. 北京: 电子工业出版社, 2018.</p>\n<p>[7] BECK K. 解析极限编程：拥抱变化[M]. 唐东铭, 译. 北京: 人民邮电出版社, 2002.</p>\n<p>[8] FOWLER M. 重构：改善既有代码的设计[M]. 熊节, 译. 北京: 人民邮电出版社, 2010.</p>\n<p>[9] MYERS G J. Reliable software through composite design[M]. [S.l.]: Petrocelli/Charter, 1975.</p><!-- [[[read_end]]] -->\n<p>[10] HUNT A, THOMAS D. 程序员修炼之道[M]. 马维达, 译. 北京: 电子工业出版社, 2004.</p>\n<p>[11] BELLON S, KOSCHKE R. Detection of software clones—tool comparison experiment[C]//the 1st IEEE International Workshop on Source Code Analysis and Manipulation. 2002.</p>\n<p>[12] ROY C K, CORDY J R. A survey on software clone detection research: 2007-541[R]. [S.l.]: School of Computing, Queen's University, 2007.</p>\n<p>[13] VARNEY L R. Interface-oriented programming[J]. University of California, Los Angles Computer Science Department Technical Report TR040016, 2004.</p>\n<p>[14] Depends Contributors. Depends: a fast, comprehensive code dependency analysis tool[EB/OL].</p>\n<p>[15] 纳西姆·尼古拉斯·塔勒布. 反脆弱——如何从不确定性中获益[M]. 雨珂, 译. 北京: 中信出版社, 2014.</p>\n<p>[16] COHN M. 用户故事与敏捷方法[M]. 石永超, 张博超, 译. 北京: 清华大学出版社, 2010.</p>\n<p>[17] ADZIC G, BISSET M, POPPENDIECK T. Impact mapping[M]. [S.l.]: Provoking Thoughts, 2012.</p>\n<p>[18] RUMBAUGH J, JACOBSON I, BOOCH G. UML 用户指南[M]. 孟祥文, 邵维忠, 麻志毅, 等译. 北京: 机械工业出版社, 2001.</p>\n<p>[19] LARMAN C. UML 和模式应用[M]. 李洋, 郑䶮, 译. 北京: 机械工业出版社, 2006.</p>\n<p>[20] LARMAN C. 敏捷建模: 极限编程和统一过程的有效实践[M]. 张嘉路, 译. 北京: 机械工业出版社, 2003.</p>\n<p>[21] BRANDOLIN A. Introducing eventstorming[M]. [S.l.]: LeanPub, 2015-2019.</p>\n<p>[22] ADZIC G. 实例化需求：团队如何交付正确的软件[M]. 张昌贵, 张博超, 石永超, 译. 北京: 人民邮电出版社, 2012.</p>\n<p>[23] EVANS E. 领域驱动设计[M]. 赵俐, 盛海艳, 刘霞, 译. 北京: 人民邮电出版社, 2010.</p>\n<p>[24] ISO/IEC. Systems and software engineering - architecture description: ISO 42010:2011[S]. [S.l.:s.n.], 2010.</p>\n<p>[25] ISO/IEC. Systems and software engineering: Systems and software quality requirements and evaluation (square) —system and software quality models: ISO 25010:2010[S]. [S.l.:s.n.], 2010.</p>\n<p>[26] DOUGLASS B P. 实时设计模式[M]. 麦中凡, 译. 北京: 北京航空航天大学出版社, 2004.</p>\n<p>[27] ALEXANDER C. The timeless way of building[M]. New york: Oxford university press, 1979.</p>\n<p>[28] GAMMA E, HELM R, JOHNSON R, 等. 设计模式：可复用面向对象软件的基础[M]. 李英军, 马晓星, 蔡敏, 等译. 北京: 机械工业出版社, 2000.</p>\n<p>[29] MARTIN R C. 架构整洁之道[M]. 孙宇聪, 译. 北京: 电子工业出版社, 2018.</p>\n<p>[30] LISKOV B. Data abstraction and hierarchy[J]. SIGPLAN Notices, 1988, 23(5).</p>\n<p>[31] MARTIN R C. 敏捷软件开发：原则、模式与实践[M]. 邓辉, 译. 北京: 清华大学出版社, 2003.</p>\n<p>[32] MEYER B. Object-oriented software construction: volume 1[M]. [S.l.]: Prentice Hall, 1988.</p>\n<p>[33] BECK K, JOHNSON R. Patterns generate architectures[C]//European Conference on Object-Oriented Programming. Springer, 1994: 139-149.</p>\n<p>[34] BUSCHMANN F, MEUNIER R, ROHNERT H, 等. 面向模式的软件架构第1 卷[M]. 贲可荣, 郭福亮, 译. 北京: 机械工业出版社, 2003.</p>\n<p>[35] FOWLER M. 企业应用架构模式[M]. 王怀民, 周斌, 译. 北京: 机械工业出版社, 2010.</p>\n<p>[36] 袁英杰. 变化驱动：正交设计[EB/OL].</p>\n<p>[37] COCKBURN A. Hexagonal architecture[EB/OL].</p>\n<p>[38] IEEE SWEBOK board. Guide to the software engineering body of knowledge, version 3.0[EB/OL]. 2014.</p>\n<p>[39] ROOK P. Controling software projects[J]. Software Engineering Journal, 1986, 1(1): 716.</p>\n<p>[40] FOWLER M. 领域特定语言[M]. ThoughtWorks 中国, 译. 北京: 机械工业出版社, 2013.</p>\n<p>[41] EVANS E. Domaindriven design reference: Definitions and pattern summaries[M]. [S.l.]: Dog Ear Publishing, 2014.</p>\n<p>[42] COAD P, DE LUCA J, LEFEBVRE E. Java modeling in color with uml: Enterprise components and process[M]. [S.l.]: Prentice Hall, 1996.</p>\n<p>[43] LEWIS J, FOWLER M. Microservices: a definition of this new architectural term[EB/OL].</p>\n<p>[44] W. 爱德华兹·戴明. 戴明论质量管理：以全新视野来解决组织及企业的顽症[M]. 钟汉清, 戴久永, 译. 海口: 海南出版社, 2003.</p>\n<p>[45] WHITTAKER J A. 探索式软件测试[M]. 方敏, 张胜, 译. 北京: 清华大学出版社, 2010.</p>\n<p>[46] MITCHELL R, MCKIM J. Design By Contract 原则与实践[M]. 孟岩, 译. 北京: 人民邮电出版社, 2003.</p>\n<p>[47] 10 tips to guide you toward effective peer code review[EB/OL].</p>\n<p>[48] SADOWSKI C, SÖDERBERG E, CHURCH L, et al. Detection of software clones—tool comparison experiment[C]//ICSE-SEIP '18: Proceedings of the 40th International Conference on Software Engineering: Software Engineering in Practice. [S.l.:s.n.], 2018.</p>\n<p>[49] MCCABE T. A complexity measure[J]. IEEE Transactions on Software Engineering, 1976, SE-2: 308-320.</p>\n<p>[50] CAMPBELL G A. Cognitive complexity: An overview and evaluation[C]//Proceedings of the 2018 International Conference on Technical Debt. [S.l.:s.n.], 2018: 57-58.</p>\n<p>[51] BALDWIN C Y, CLARK K B. Design rules: The power of modularity[M]. [S.l.]: MIT Press, 2000.</p>\n<p>[52] MO R, CAI Y, KAZMAN R, et al. Architecture anti-patterns: Automatically detectable violations of design principles[J]. IEEE Transactions on Software Engineering, 2019.</p>\n<p>[53] MO R, CAI Y, KAZMAN R, et al. Decoupling level: a new metric for architectural maintenance complexity[C]//2016 IEEE/ACM 38th International Conference on Software Engineering (ICSE). [S.l.]: IEEE, 2016: 499-510.</p>\n<p>[54] MACCORMACK A, RUSNAK J, BALDWIN C Y. Exploring the structure of complex software designs:an empirical study of open source and proprietary code[C]//Management Science: 152(7). [S.l.:s.n.], 2006.6: 1015-1030.</p>\n<p>[55] CHIDAMBER S R, KEMERER C F. A metrics suite for object oriented design[J]. IEEE Transactions on Software Engineering, 1994.</p>\n<p>[56] WILSON J Q, KELLING G L. Broken windows[J]. Atlantic monthly, 1982, 249(3): 29-38.</p>\n<p>[57] MARTIN R C. Professionalism and testdriven development[J]. IEEE Software, 2007, 24(3): 32-36.</p>\n<p>[58] BECK K. 测试驱动开发[M]. 孙平平, 张小龙, 译. 北京: 中国电力出版社, 2004.</p>\n<p>[59] G·波利亚. 怎样解题：数学思维的新方法[M]. 涂泓, 冯承天, 译. 上海: 上海科技教育出版社, 2007.</p>\n<p>[60] 詹姆斯P. 沃麦克, 丹尼尔T. 琼斯, 丹尼尔·鲁斯. 改变世界的机器[M]. 沈希瑾, 译. 北京: 商务印书馆, 1999.</p>\n<p>[61] 詹姆斯P. 沃麦克, 丹尼尔T. 琼斯. 精益思想[M]. 沈希瑾, 译. 北京: 机械工业出版社, 2008.</p>\n<p>[62] BROOKS F, KUGLER H. No silver bullet - essence and accidents of software engineering[J]. Computer, 1987, 20(4): 10-19.</p>\n\n<br style=\"page-break-after:always\" />","neighbors":{"left":{"article_title":"第 12 章 精益思想和高效编程","id":740984},"right":{"article_title":"作者简介","id":740986}},"comments":[]}