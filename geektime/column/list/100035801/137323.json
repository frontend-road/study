{"id":137323,"title":"01 | 高并发系统：它的通用设计方法是什么？","content":"<p>我们知道，高并发代表着大流量，高并发系统设计的魅力就在于我们能够凭借自己的聪明才智设计巧妙的方案，从而抵抗巨大流量的冲击，带给用户更好的使用体验。这些方案好似能操纵流量，让流量更加平稳地被系统中的服务和组件处理。</p><p>来做个简单的比喻吧。</p><p>从古至今，长江和黄河流域水患不断，远古时期大禹曾拓宽河道，清除淤沙让流水更加顺畅；都江堰作为史上最成功的治水案例之一，用引流将岷江之水分流到多个支流中，以分担水流压力；三门峡和葛洲坝通过建造水库将水引入水库先存储起来，然后再想办法把水库中的水缓缓地排出去，以此提高下游的抗洪能力。</p><p>而我们在应对高并发大流量时也会采用类似“抵御洪水”的方案，归纳起来共有三种方法。</p><ul>\n<li>\n<p>Scale-out（横向扩展）：分而治之是一种常见的高并发系统设计方法，采用分布式部署的方式把流量分流开，让每个服务器都承担一部分并发和流量。</p>\n</li>\n<li>\n<p>缓存：使用缓存来提高系统的性能，就好比用“拓宽河道”的方式抵抗高并发大流量的冲击。</p>\n</li>\n<li>\n<p>异步：在某些场景下，未处理完成之前我们可以让请求先返回，在数据准备好之后再通知请求方，这样可以在单位时间内处理更多的请求。</p>\n</li>\n</ul><p>简单介绍了这三种方法之后，我再详细地带你了解一下，这样当你在设计高并发系统时就可以有考虑的方向了。当然了，这三种方法会细化出更多的内容，我会在后面的课程中深入讲解。</p><!-- [[[read_end]]] --><p>首先，我们先来了解第一种方法：<strong>Scale-out。</strong></p><h2>Scale-up vs Scale-out</h2><p>著名的“摩尔定律”是由Intel的创始人之一戈登·摩尔于1965年提出的。这个定律提到集成电路上可容纳的晶体管的数量约每隔两年会增加一倍。</p><p>后来，Intel首席执行官大卫·豪斯提出“18个月”的说法，即预计18个月会将芯片的性能提升一倍，这个说法广为流传。</p><p>摩尔定律虽然描述的是芯片的发展速度，但我们可以延伸为整体的硬件性能，从20世纪后半叶开始，计算机硬件的性能是指数级演进的。</p><p>直到现在，摩尔定律依然生效，在半个世纪以来的CPU发展过程中，芯片厂商靠着在有限面积上做更小的晶体管的黑科技，大幅度地提升着芯片的性能。从第一代集成电路上只有十几个晶体管，到现在一个芯片上动辄几十亿晶体管的数量，摩尔定律指引着芯片厂商完成了技术上的飞跃。</p><p>但是有专家预测，摩尔定律可能在未来几年之内不再生效，原因是目前的芯片技术已经做到了5nm级别，在工艺上可以突破的空间不大，可能达不到摩尔定律提到的每18个月翻一番的速度了。此时，双核和多核技术的产生拯救了摩尔定律，这些技术的思路是将多个CPU核心压在一个芯片上，从而大大提升CPU的并行处理能力。</p><p>我们在高并发系统设计上也沿用了同样的思路，将类似追逐摩尔定律不断提升CPU性能的方案叫做Scale-up（纵向扩展），把类似CPU多核心的方案叫做Scale-out，这两种思路在实现方式上是完全不同的。</p><ul>\n<li>\n<p>Scale-up通过购买性能更好的硬件来提升系统的并发处理能力，比方说目前系统4核4G每秒可以处理200次请求，那么如果要处理400次请求呢？很简单，我们把机器的硬件提升到8核8G（硬件资源的提升可能不是线性的，这里仅为参考）。</p>\n</li>\n<li>\n<p>Scale-out则是另外一个思路，它通过将多个低性能的机器组成一个分布式集群来共同抵御高并发流量的冲击。沿用刚才的例子，我们可以使用两台4核4G的机器来处理那400次请求。</p>\n</li>\n</ul><p><strong>那么什么时候选择Scale-up，什么时候选择Scale-out呢？</strong>一般来讲，在我们系统设计初期会考虑使用Scale-up的方式，因为这种方案足够简单，所谓能用堆砌硬件解决的问题就用硬件来解决，但是当系统并发超过了单机的极限时，我们就要使用Scale-out的方式。</p><p>Scale-out虽然能够突破单机的限制，但也会引入一些复杂问题。比如，如果某个节点出现故障如何保证整体可用性？当多个节点有状态需要同步时如何保证状态信息在不同节点的一致性？如何做到使用方无感知的增加和删除节点？其中每一个问题都涉及很多的知识点，我会在后面的课程中深入地讲解，这里暂时不展开了。</p><p>说完了Scale-out，我们再来看看高并发系统设计的另一种方法：<strong>缓存。</strong></p><h2>使用缓存提升性能</h2><p>Web 2.0是缓存的时代，这一点毋庸置疑。缓存遍布在系统设计的每个角落，从操作系统到浏览器，从数据库到消息队列，任何略微复杂的服务和组件中你都可以看到缓存的影子。我们使用缓存的主要作用是提升系统的访问性能，在高并发的场景下就可以支撑更多用户的同时访问。</p><p>那么为什么缓存可以大幅度提升系统的性能呢？我们知道数据是放在持久化存储中的，一般的持久化存储都是使用磁盘作为存储介质的，而普通磁盘数据由机械手臂、磁头、转轴、盘片组成，盘片又分为磁道、柱面和扇区，盘片构造图我放在下面了。</p><p>盘片是存储介质，每个盘片被划分为多个同心圆，信息都被存储在同心圆之中，这些同心圆就是磁道。在磁盘工作时盘片是在高速旋转的，机械手臂驱动磁头沿着径向移动，在磁道上读取所需要的数据。我们把磁头寻找信息花费的时间叫做寻道时间。</p><p><img src=\"https://static001.geekbang.org/resource/image/88/02/88a27d1b7a0f55917e59486137ab3002.jpg?wh=1142*764\" alt=\"\"></p><p>普通磁盘的寻道时间是10ms左右，而相比于磁盘寻道花费的时间，CPU执行指令和内存寻址的时间都是在ns（纳秒）级别，从千兆网卡上读取数据的时间是在μs（微秒）级别。所以在整个计算机体系中磁盘是最慢的一环，甚至比其它的组件要慢几个数量级。因此我们通常使用以内存作为存储介质的缓存，以此提升性能。</p><p>当然，缓存的语义已经丰富了很多，我们可以将任何降低响应时间的中间存储都称为缓存。缓存的思想遍布很多设计领域，比如在操作系统中CPU有多级缓存，文件有Page Cache缓存，你应该有所了解。</p><h2>异步处理</h2><p><strong>异步</strong>也是一种常见的高并发设计方法，我们在很多文章和演讲中都能听到这个名词，与之共同出现的还有它的反义词：同步。比如分布式服务框架Dubbo中有同步方法调用和异步方法调用，IO模型中有同步IO和异步IO。</p><p><strong>那么什么是同步，什么是异步呢？</strong>以方法调用为例，同步调用代表调用方要阻塞等待被调用方法中的逻辑执行完成。这种方式下，当被调用方法响应时间较长时，会造成调用方长久的阻塞，在高并发下会造成整体系统性能下降甚至发生雪崩。</p><p>异步调用恰恰相反，调用方不需要等待方法逻辑执行完成就可以返回执行其他的逻辑，在被调用方法执行完毕后再通过回调、事件通知等方式将结果反馈给调用方。</p><p>异步调用在大规模高并发系统中被大量使用，<strong>比如我们熟知的12306网站。</strong>当我们订票时，页面会显示系统正在排队，这个提示就代表着系统在异步处理我们的订票请求。在12306系统中查询余票、下单和更改余票状态都是比较耗时的操作，可能涉及多个内部系统的互相调用，如果是同步调用就会像12306刚刚上线时那样，高峰期永远不可能下单成功。</p><p>而采用异步的方式，后端处理时会把请求丢到消息队列中，同时快速响应用户，告诉用户我们正在排队处理，然后释放出资源来处理更多的请求。订票请求处理完之后，再通知用户订票成功或者失败。</p><p>处理逻辑后移到异步处理程序中，Web服务的压力小了，资源占用的少了，自然就能接收更多的用户订票请求，系统承受高并发的能力也就提升了。</p><p><img src=\"https://static001.geekbang.org/resource/image/07/09/0756d48f746590894b6e96ae4e4f7609.jpg?wh=1142*459\" alt=\"\"></p><p>既然我们了解了这三种方法，那么是不是意味着在高并发系统设计中，开发一个系统时要把这些方法都用上呢？当然不是，系统的设计是不断演进的。</p><p><strong>罗马不是一天建成的，系统的设计也是如此。</strong>不同量级的系统有不同的痛点，也就有不同的架构设计的侧重点。<strong>如果都按照百万、千万并发来设计系统，电商一律向淘宝看齐，IM全都学习微信和QQ，那么这些系统的命运一定是灭亡。</strong></p><p>因为淘宝、微信的系统虽然能够解决同时百万、千万人同时在线的需求，但其内部的复杂程度也远非我们能够想象的。盲目地追从只能让我们的架构复杂不堪，最终难以维护。就拿从单体架构往服务化演进来说，淘宝也是在经历了多年的发展后，发现系统整体的扩展能力出现问题时，开始启动服务化改造项目的。</p><p><strong>我之前也踩过一些坑，</strong>参与的一个创业项目在初始阶段就采用了服务化的架构，但由于当时人力有限，团队技术积累不足，因此在实际项目开发过程中，发现无法驾驭如此复杂的架构，也出现了问题难以定位、系统整体性能下降等多方面的问题，甚至连系统宕机了都很难追查到根本原因，最后不得不把服务做整合，回归到简单的单体架构中。</p><p>所以我建议一般系统的演进过程应该遵循下面的思路：</p><ul>\n<li>\n<p>最简单的系统设计满足业务需求和流量现状，选择最熟悉的技术体系。</p>\n</li>\n<li>\n<p>随着流量的增加和业务的变化修正架构中存在问题的点，如单点问题、横向扩展问题、性能无法满足需求的组件。在这个过程中，选择社区成熟的、团队熟悉的组件帮助我们解决问题，在社区没有合适解决方案的前提下才会自己造轮子。</p>\n</li>\n<li>\n<p>当对架构的小修小补无法满足需求时，考虑重构、重写等大的调整方式以解决现有的问题。</p>\n</li>\n</ul><p><strong>以淘宝为例，</strong>当时在业务从0到1的阶段是通过购买的方式快速搭建了系统。而后，随着流量的增长，淘宝做了一系列的技术改造来提升高并发处理能力，比如数据库存储引擎从MyISAM迁移到InnoDB，数据库做分库分表，增加缓存，启动中间件研发等。</p><p>当这些都无法满足时就考虑对整体架构做大规模重构，比如说著名的“五彩石”项目让淘宝的架构从单体演进为服务化架构。正是通过逐步的技术演进，淘宝才进化出如今承担过亿QPS的技术架构。</p><p>归根结底一句话：<strong>高并发系统的演进应该是循序渐进，以解决系统中存在的问题为目的和驱动力的。</strong></p><h2>课程小结</h2><p>在今天的课程中，我带着你了解了高并发系统设计的三种通用方法：<strong>Scale-out、缓存和异步。</strong>这三种方法可以在做方案设计时灵活地运用，但它不是具体实施的方案，而是三种思想，在实际运用中会千变万化。</p><p>就拿Scale-out来说，数据库一主多从、分库分表、存储分片都是它的实际应用方案。而我们需要注意的是，在应对高并发大流量的时候，系统是可以通过增加机器来承担流量冲击的，至于要采用什么样的方案还是要具体问题具体分析。</p><h2>一课一思</h2><p>高并发系统演进是一个渐进的过程，并非一蹴而就的，那么你在系统演进过程中积累了哪些经验又踩到了哪些坑呢？欢迎在留言区与我一同交流。</p><p>最后，感谢你的阅读，如果这篇文章让你有所收获，也欢迎你将它分享给更多的朋友。</p>","comments":[{"had_liked":false,"id":134209,"user_name":"老男孩","can_delete":false,"product_type":"c1","uid":1134514,"ip_address":"","ucode":"CEC6D47412F620","user_header":"https://static001.geekbang.org/account/avatar/00/11/4f/b2/1e8b5616.jpg","comment_is_top":false,"comment_ctime":1568775520,"is_pvip":false,"replies":[{"id":"51530","content":"说的真好！","user_name":"作者回复","comment_id":134209,"uid":"1448977","ip_address":"","utype":1,"ctime":1568849406,"user_name_real":"唐扬"}],"discussion_count":5,"race_medal":0,"score":"667288706400","product_id":100035801,"comment_content":"martin fowler好像曾经说过，能使用单体解决的问题，就不要采用分布式。不能为了技术而技术，采用分布式固然可以分流用户请求，提高系统的响应能力，但同样也带来了复杂性。软件开发最终的目的是商业利益。非常赞成老师的观点，罗马城不是一天就建立起来的。架构的工作应该是阶段性，解决阶段性系统的复杂性。如果单体跑的很好，或者通过scale up方式在成本可控的情况能解决就不要想着诗和远方，因为系统内部的进程间调用，肯定比不同物理机的进程之间调用要快。","like_count":156,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":467654,"discussion_content":"说的真好！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1568849406,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1018972,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/8c/5c/3f164f66.jpg","nickname":"亚林","note":"","ucode":"4A5A6D24314B79","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":392809,"discussion_content":"架构是演化出来的，不是设计出来的。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1631148626,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1251111,"avatar":"https://static001.geekbang.org/account/avatar/00/13/17/27/ec30d30a.jpg","nickname":"Jxin","note":"","ucode":"4C03928388C413","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":20031,"discussion_content":"环境不一样，大佬可是写了重构的大神，人家负责的项目鲁棒性和快速发展互联网留下的遗产是两码事。如果现有的项目和团队老而嫩。那么牺牲结构复杂度来换取逻辑复杂度的下降，助力业务继续快速发展又有何不可呢。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1569250336,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1067936,"avatar":"https://static001.geekbang.org/account/avatar/00/10/4b/a0/3fa531e5.jpg","nickname":"Vicente","note":"","ucode":"6A5D34F72DF059","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":535572,"discussion_content":"有个点觉得要提一下，scale out 并不等同于分布式，集群也是 scale out 的一种方式。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1638467958,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1019506,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/8e/72/63c94eee.jpg","nickname":"黄马","note":"","ucode":"93E391B4678EC2","race_medal":1,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":183931,"discussion_content":"主要是还是对业务未来的预期，团队资源的判断","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582533871,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":134385,"user_name":"陈靖","can_delete":false,"product_type":"c1","uid":1147418,"ip_address":"","ucode":"8C9596A54DB5C8","user_header":"https://static001.geekbang.org/account/avatar/00/11/82/1a/64ec25ff.jpg","comment_is_top":false,"comment_ctime":1568815545,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"237792016825","product_id":100035801,"comment_content":"之前做的创业项目也是遇到盲目优化的问题，系统最核心的撮合结算服务，刚开始只能100次每秒，后来为了优化到百万级，花了大量时间研究各种方案，做了大量的性能测试，耽误了很长时间推向市场，结果最终优化到了不到一万tps，但后面真正上线的结果可能不到也就100tps，所以真正的需求是市场需求，不是一开始就冲着最牛逼的方案搞，线上的需求远比一开始的预想复杂，没足够的资源和动力，绝对不要折腾，不过时刻准备好可能会出现的瓶颈是必要的，免得半夜宕机，慌得一比","like_count":56,"discussions":[{"author":{"id":1255382,"avatar":"https://static001.geekbang.org/account/avatar/00/13/27/d6/30456009.jpg","nickname":"大象蚂蚁","note":"","ucode":"0066D9CD979C39","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":83846,"discussion_content":"多么痛的领悟，我们的系统也正在遭遇着这个过程，迟迟不推向市场。都替老板心疼研发的经费","likes_number":4,"is_delete":false,"is_hidden":false,"ctime":1576469457,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1340120,"avatar":"https://static001.geekbang.org/account/avatar/00/14/72/d8/9eedbc5e.jpg","nickname":"FreeMason","note":"","ucode":"3D58AC2F9AB345","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":36348,"discussion_content":"典型的过度设计","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571365903,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":134538,"user_name":"Luciano李鑫","can_delete":false,"product_type":"c1","uid":1329995,"ip_address":"","ucode":"5FBE5F86FD5B2C","user_header":"https://static001.geekbang.org/account/avatar/00/14/4b/4b/97926cba.jpg","comment_is_top":false,"comment_ctime":1568861191,"is_pvip":false,"replies":[{"id":"51814","content":"这个商品应该是放在单一的redis节点里面的吧，放在多个节点里面不好维护一致性。那么如果在流量或者带宽方面超过单个节点的限制咋办？是否要考虑动态和静态数据的隔离？是否要考虑降低redis的写流量峰值？所以流量大了，自然方案就复杂了~","user_name":"作者回复","comment_id":134538,"uid":"1448977","ip_address":"","utype":1,"ctime":1568977323,"user_name_real":"唐扬"}],"discussion_count":19,"race_medal":0,"score":"164777618439","product_id":100035801,"comment_content":"代部落伙伴问个问题：关于秒杀这种场景我想的是用redis的list不就完全可以实现吗。活动开始前，先把要抢的N个商品push到list中。活动开始后，每来一个请求就从list中pop一个商品出去，当list为空后直接返回“已抢光”的响应，由于可秒杀的商品数量并不多，能通过的请求也可以采用同步的方式进行，这样不是既简单又快速。可是我搜了一下网上的方案，都特别的复杂，请问这种方式有什么问题吗？","like_count":39,"discussions":[{"author":{"id":1488298,"avatar":"https://static001.geekbang.org/account/avatar/00/16/b5/aa/73412d33.jpg","nickname":"jcky～～～","note":"","ucode":"EAE046FD5C8E82","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":41034,"discussion_content":"没有人问业务问题吗？那一个人都抢光了怎么办？","likes_number":5,"is_delete":false,"is_hidden":false,"ctime":1572332549,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1518310,"avatar":"https://static001.geekbang.org/account/avatar/00/17/2a/e6/c788257f.jpg","nickname":"geek_arong2048","note":"","ucode":"AB575BE100E4A9","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":531729,"discussion_content":"把大象塞到冰箱也只要三步：打开冰箱、放进去、关好冰箱，这是最核心和基础的步骤，但是每一步考虑到场景和业务的复杂性，设计都完全不一样","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1637398079,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"user_type\":1}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":467796,"discussion_content":"这个商品应该是放在单一的redis节点里面的吧，放在多个节点里面不好维护一致性。那么如果在流量或者带宽方面超过单个节点的限制咋办？是否要考虑动态和静态数据的隔离？是否要考虑降低redis的写流量峰值？所以流量大了，自然方案就复杂了~","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1568977323,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1009831,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/68/a7/c3fd1fd9.jpg","nickname":"聪","note":"","ucode":"9D672A8580A945","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":311664,"discussion_content":"rong说的对啊。sentinel和redis cluster都是有数据层面的主从。有主从就有异步主从复制，从而导致数据不一致问题。如果把主从去掉，只保留一份数据，这样如何保证HA？所以必须要有主从。另外单个master的读写压力太大，即使读写奋力，写压力也够受了。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1602452493,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1035111,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/cb/67/5a3f9ae8.jpg","nickname":"王腾飞","note":"","ucode":"6D4F81620470E2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":54390,"discussion_content":"这相当于在抢门票，后面真正的压力，还是在用门票上。就是压力在真正的售卖处理上。\nredis干这活完全没压力。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1574297653,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1356083,"avatar":"https://static001.geekbang.org/account/avatar/00/14/b1/33/8993eae0.jpg","nickname":"黄展志","note":"","ucode":"EBA342CD89072D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":39502,"discussion_content":"数据分在不同的分片节点上，每个节点做主从，通过sentinel实现高可用，整个redis是无中心节点的集群，是否可行？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571932759,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1130934,"avatar":"https://static001.geekbang.org/account/avatar/00/11/41/b6/abb7bfe3.jpg","nickname":"人在江湖飘","note":"","ucode":"FF0D992B5EFCDE","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":36371,"discussion_content":"如果流量或者带宽超过单节点的限制，可以开启多个Redis实例，比如有100个sku需要抢，那就用四个Redis实例(每台服务器一个实例)，每个实例25个sku.在通过代码连接到随机的某个Redis上。  但是也要注意的是如果某个实例数据取完了，就要去别的队列取。连接Redis这一块逻辑比较复杂。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571369352,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1072275,"avatar":"https://static001.geekbang.org/account/avatar/00/10/5c/93/2217c49e.jpg","nickname":"风痕","note":"","ucode":"F287D58E7A3DD5","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":22032,"discussion_content":"如果直接用异步呢？秒杀请求提交后丢进消息队列，异步化处理","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1569563245,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1274495,"avatar":"https://static001.geekbang.org/account/avatar/00/13/72/7f/5da093c5.jpg","nickname":"水目沾","note":"","ucode":"FDD1D15C277D58","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1072275,"avatar":"https://static001.geekbang.org/account/avatar/00/10/5c/93/2217c49e.jpg","nickname":"风痕","note":"","ucode":"F287D58E7A3DD5","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":36821,"discussion_content":"传统的方案就是异步：采用消息队列的方式","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571448402,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":22032,"ip_address":""},"score":36821,"extra":""}]},{"author":{"id":1666930,"avatar":"https://static001.geekbang.org/account/avatar/00/19/6f/72/5392293a.jpg","nickname":"惠武","note":"","ucode":"CC1A3BE10B095A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":17245,"discussion_content":"这个方案是有前提的，redis是没有集群部署。单master的redis，QPS压力上来，不一定坑得住","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1568959409,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":9,"child_discussions":[{"author":{"id":1329995,"avatar":"https://static001.geekbang.org/account/avatar/00/14/4b/4b/97926cba.jpg","nickname":"Luciano李鑫","note":"","ucode":"5FBE5F86FD5B2C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1666930,"avatar":"https://static001.geekbang.org/account/avatar/00/19/6f/72/5392293a.jpg","nickname":"惠武","note":"","ucode":"CC1A3BE10B095A","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":17256,"discussion_content":"集群部署呢 有什么问题","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1568960813,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":17245,"ip_address":""},"score":17256,"extra":""},{"author":{"id":1672805,"avatar":"https://static001.geekbang.org/account/avatar/00/19/86/65/ff4d03db.jpg","nickname":"老乡长","note":"","ucode":"887F4C1012C7F9","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1329995,"avatar":"https://static001.geekbang.org/account/avatar/00/14/4b/4b/97926cba.jpg","nickname":"Luciano李鑫","note":"","ucode":"5FBE5F86FD5B2C","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":17656,"discussion_content":"一致性的问题","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1568973730,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":17256,"ip_address":""},"score":17656,"extra":""},{"author":{"id":1128740,"avatar":"https://static001.geekbang.org/account/avatar/00/11/39/24/ab14f6cf.jpg","nickname":"rong","note":"","ucode":"637A27C532D817","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1672805,"avatar":"https://static001.geekbang.org/account/avatar/00/19/86/65/ff4d03db.jpg","nickname":"老乡长","note":"","ucode":"887F4C1012C7F9","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":18882,"discussion_content":"redis集群，不同的数据分在不同的redis实例上，不同数据之间不需要一致啊为什么会有一致性问题呢？我觉得非集群的redis主从，主和从上的数据都是一样的，才会有一致性问题吧。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1569117698,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":17656,"ip_address":""},"score":18882,"extra":""}]}]},{"had_liked":false,"id":134220,"user_name":"吕宗胜ZJU","can_delete":false,"product_type":"c1","uid":1112605,"ip_address":"","ucode":"9CD5CCBABF3D68","user_header":"https://static001.geekbang.org/account/avatar/00/10/fa/1d/5dc4ba61.jpg","comment_is_top":false,"comment_ctime":1568777238,"is_pvip":false,"discussion_count":5,"race_medal":0,"score":"126122828822","product_id":100035801,"comment_content":"高并发除了横向扩容，缓存和异步化，系统还需要做好保护，比如限流降级，过载保护。甚至高并发的问题更是一个系统性问题，从前端到服务端，从产品设计上都要考虑进来。不过这块就比较业务化了，不是常规的操作","like_count":30,"discussions":[{"author":{"id":1067936,"avatar":"https://static001.geekbang.org/account/avatar/00/10/4b/a0/3fa531e5.jpg","nickname":"Vicente","note":"","ucode":"6A5D34F72DF059","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":535573,"discussion_content":"限流降级，过载保护应该是归属于高可用的范畴","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1638468404,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1046038,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/f6/16/ff382f79.jpg","nickname":"Hero-H🐝","note":"","ucode":"3053B9280854F9","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":579947,"discussion_content":"你这个属于高可用的范畴","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1657783125,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1261493,"avatar":"https://static001.geekbang.org/account/avatar/00/13/3f/b5/5fe77e16.jpg","nickname":"不经意间","note":"","ucode":"C39D98697ACB8B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":85609,"discussion_content":"高并发系统的通用设计方法","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1576559649,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1274495,"avatar":"https://static001.geekbang.org/account/avatar/00/13/72/7f/5da093c5.jpg","nickname":"水目沾","note":"","ucode":"FDD1D15C277D58","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":36820,"discussion_content":"高并发解决方案可以朝三个方向考虑：高性能、高可用和高扩展","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571448277,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1340120,"avatar":"https://static001.geekbang.org/account/avatar/00/14/72/d8/9eedbc5e.jpg","nickname":"FreeMason","note":"","ucode":"3D58AC2F9AB345","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":36345,"discussion_content":"细看内容。唐老师在长江黄河例子里，已经对你写的讲的很清楚了。  \n再有老师讲的是解决问题的思想，你提的是解决问题的手段。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571365745,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":134131,"user_name":"榕","can_delete":false,"product_type":"c1","uid":1053178,"ip_address":"","ucode":"4611A40E21ECEB","user_header":"https://static001.geekbang.org/account/avatar/00/10/11/fa/e0dcc1bf.jpg","comment_is_top":false,"comment_ctime":1568765652,"is_pvip":false,"replies":[{"id":"51425","content":"说的真好！","user_name":"作者回复","comment_id":134131,"uid":"1448977","ip_address":"","utype":1,"ctime":1568768597,"user_name_real":"唐扬"}],"discussion_count":1,"race_medal":0,"score":"74583209684","product_id":100035801,"comment_content":"1.技术在不断演进，演进的目的和内驱动力是解决当前系统存在的问题，过早过度设计大多只会延误系统的发展。一切都以实际情况和需要出发，一步步优化，一步步演进，个人能力提升也是同样的道理。<br>2.高并发系统设计通用方法:水平拓展，缓存，异步。这只是指导思想，如何更巧妙的运用才是最具魅力的。","like_count":16,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":467623,"discussion_content":"说的真好！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1568768597,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":134430,"user_name":"黑暗浪子","can_delete":false,"product_type":"c1","uid":1014691,"ip_address":"","ucode":"FBB8C24EBEC5BB","user_header":"https://static001.geekbang.org/account/avatar/00/0f/7b/a3/82b2a73e.jpg","comment_is_top":false,"comment_ctime":1568823315,"is_pvip":true,"discussion_count":0,"race_medal":1,"score":"65993332755","product_id":100035801,"comment_content":"现阶段大多数公司其实都没机会碰到高并发。很多时候我们学习它，只是为了将来有一天要用到时候不会一脸懵。继续学习～期待以后的精彩分享","like_count":16},{"had_liked":false,"id":134107,"user_name":"逍遥法外","can_delete":false,"product_type":"c1","uid":1103533,"ip_address":"","ucode":"75458730192696","user_header":"https://static001.geekbang.org/account/avatar/00/10/d6/ad/52df3832.jpg","comment_is_top":false,"comment_ctime":1568761553,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"57403336401","product_id":100035801,"comment_content":"架构设计的过程中要识别每个阶段的复杂度，有针对的做架构设计。避免过度设计带来的成本上升。这个原则和李运华老师的架构课讲的架构设计的原则不谋而合。😄","like_count":13},{"had_liked":false,"id":134163,"user_name":"三年过后","can_delete":false,"product_type":"c1","uid":1283157,"ip_address":"","ucode":"5E9106C5F11BED","user_header":"https://static001.geekbang.org/account/avatar/00/13/94/55/afc64956.jpg","comment_is_top":false,"comment_ctime":1568769213,"is_pvip":false,"replies":[{"id":"51531","content":"后面课程会有一些关键知识点的案例介绍的","user_name":"作者回复","comment_id":134163,"uid":"1448977","ip_address":"","utype":1,"ctime":1568849521,"user_name_real":"唐扬"}],"discussion_count":9,"race_medal":0,"score":"53108376765","product_id":100035801,"comment_content":"老师讲得很好！不过，还是觉得偏理论较多。例如，讲到踩过很多坑，这些坑没有一些案例说明和后来的解决问题方案。比如，之前负责的支付系统项目，在流量不是很大的情况下，就引入了zk集群(3台)zk集群所在的线上服务，存在一台宕机，整个线上支付都不可用。后面解决：只好切回单体服务","like_count":12,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":467636,"discussion_content":"后面课程会有一些关键知识点的案例介绍的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1568849521,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1356083,"avatar":"https://static001.geekbang.org/account/avatar/00/14/b1/33/8993eae0.jpg","nickname":"黄展志","note":"","ucode":"EBA342CD89072D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":39501,"discussion_content":"一般是奇数组合，保证过半选举，挂了一台，应该是可用的哈，配置是否正确？","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1571932243,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1105161,"avatar":"https://static001.geekbang.org/account/avatar/00/10/dd/09/feca820a.jpg","nickname":"helloworld","note":"","ucode":"1EECCA0F43E278","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":18630,"discussion_content":"能力没跟上先进的架构","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1569074415,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1253384,"avatar":"https://static001.geekbang.org/account/avatar/00/13/20/08/bc06bc69.jpg","nickname":"Dovelol","note":"","ucode":"9B5DDF7720F307","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":16473,"discussion_content":"单体服务，宕机了怎么办。。这不是和你三台结果一样。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1568894773,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1188503,"avatar":"https://static001.geekbang.org/account/avatar/00/12/22/97/708e590a.jpg","nickname":"la la la","note":"","ucode":"C039AC398EAE07","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":16270,"discussion_content":"台数奇数配置","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1568880821,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1365988,"avatar":"https://static001.geekbang.org/account/avatar/00/14/d7/e4/0cd835d1.jpg","nickname":"yuny","note":"","ucode":"D4A1475B86A03B","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":15970,"discussion_content":"三台集群  一台宕机，为什么就都不可用了？你配置好了吗","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1568865939,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1253732,"avatar":"https://static001.geekbang.org/account/avatar/00/13/21/64/4bd7f522.jpg","nickname":"Kevin","note":"","ucode":"328E37E2579B03","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":15673,"discussion_content":"选不出来master了吧","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1568824832,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1283157,"avatar":"https://static001.geekbang.org/account/avatar/00/13/94/55/afc64956.jpg","nickname":"三年过后","note":"","ucode":"5E9106C5F11BED","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1253732,"avatar":"https://static001.geekbang.org/account/avatar/00/13/21/64/4bd7f522.jpg","nickname":"Kevin","note":"","ucode":"328E37E2579B03","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":16173,"discussion_content":"对的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1568874482,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":15673,"ip_address":""},"score":16173,"extra":""},{"author":{"id":1014665,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/7b/89/34f2cbcc.jpg","nickname":"杨宇","note":"","ucode":"EB74DF6E269F03","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1283157,"avatar":"https://static001.geekbang.org/account/avatar/00/13/94/55/afc64956.jpg","nickname":"三年过后","note":"","ucode":"5E9106C5F11BED","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":26475,"discussion_content":"ZK选举的要求是过半数存活，3台剩2台是可以正常选举的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1570603568,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":16173,"ip_address":""},"score":26475,"extra":""}]}]},{"had_liked":false,"id":142136,"user_name":"李冲","can_delete":false,"product_type":"c1","uid":1254530,"ip_address":"","ucode":"C8C12308B0FDDA","user_header":"https://static001.geekbang.org/account/avatar/00/13/24/82/b5808a60.jpg","comment_is_top":false,"comment_ctime":1571298929,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"48815939185","product_id":100035801,"comment_content":"有些基础概念的理解是很重要的。也许自己看到那几个词语会认为已经理解了背后的意思，其实不是这样的。专业知识真的会出现不知道自己不知道得情况，也许是翻译的锅，也许是缺少交流，也许是没真的看懂。为了避免这种错误，特地写下自己的理解并结合生活中的例子去宜家买东西来解释。若果理解错了，还请大家指出，以便做到正确的理解。<br><br>scale up是把店面建成旗舰店，面积大展区多收银台多服务区人手多。边逛边体验，喜欢的就丢到购物车，逛完去收银台买单去服务台开发票走人，无论哪个环节顾客几乎都不用等。<br>scale out 就是一家店不够就开多几家，把顾客分流到不同的店里去，尽量让各个分店的体验接近旗舰店。<br>cache 缓存的理解跟文章不一样，缓存的基础是系统有热点，有少数东西的使用率特别高。对宜家的例子来说缓存就像top10的热卖商品的专用摊位，整个店里有几个关键的路口都有摆上。这些销量占比非常大的产品顾客很容易扔进购物车，而不需要像购买普通商品那样跑到哪层楼哪个区哪个货架才能拿到，这加速了顾客的购买过程。<br>asyn 异步这个话题有点大。理解估计也有不少偏差，明确的说目前服务器上用的最好的linux的epoll是同步的，可以选择阻塞或者不阻塞。真正的异步IO实现有linux的aio（出来的晚，目前还不好用）和windows的IOCP。对于宜家来讲开纸质发票就是同步的，一堆人排队把小票给服务人员后在服务台等机器出发票。而开电子发票是异步的，顾客直接回家，想开票的时候扫描小票上的二维码填写发票信息，等一段时间邮箱就会提示收到电子发票了。","like_count":12,"discussions":[{"author":{"id":1066007,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKODTphVILAIhSe12svgFMZebQojDTslUKXYaTqcEDicnyzvu4kFnKXW76GicEXU2CtAttmxveF1WLg/132","nickname":"中中哥","note":"","ucode":"2836F4D139E254","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":229874,"discussion_content":"我觉的这几个比喻都挺恰当","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1586696804,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":134126,"user_name":"马留","can_delete":false,"product_type":"c1","uid":1513768,"ip_address":"","ucode":"B3C0ED5C1F86DE","user_header":"https://static001.geekbang.org/account/avatar/00/17/19/28/f4b4ed22.jpg","comment_is_top":false,"comment_ctime":1568764764,"is_pvip":false,"replies":[{"id":"51426","content":"scale-out可以理解为引流和分流；缓存的作用是提速，拓宽河道的作用也是提速，所以有一些的关联","user_name":"作者回复","comment_id":134126,"uid":"1448977","ip_address":"","utype":1,"ctime":1568768762,"user_name_real":"唐扬"}],"discussion_count":4,"race_medal":0,"score":"48813405020","product_id":100035801,"comment_content":"老师，你把“缓存”比喻成“拓宽河道”，个人觉得是不妥当的，应是建水库更好些。拓宽河道比较类似Scale-out","like_count":11,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":467622,"discussion_content":"scale-out可以理解为引流和分流；缓存的作用是提速，拓宽河道的作用也是提速，所以有一些的关联","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1568768762,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1274117,"avatar":"https://static001.geekbang.org/account/avatar/00/13/71/05/db554eba.jpg","nickname":"👽","note":"","ucode":"D313AF941B412D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":14556,"discussion_content":"我对缓存的理解一直偏向于人的大脑。常用的知识体系，例如：常联系的人的联系方式是可以用大脑记忆的，而不常用的联系方式就只能通过记通讯录的方式去记录。\n\n而大脑的读取速度就非常快，而去查通讯录就像是磁盘寻找磁盘磁道的过程。翻开通讯录，按照拼音排序，找到对应的拼音字母开头，然后再往下翻。","likes_number":6,"is_delete":false,"is_hidden":false,"ctime":1568770656,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1183019,"avatar":"https://static001.geekbang.org/account/avatar/00/12/0d/2b/4814d3db.jpg","nickname":"阿土","note":"","ucode":"2DBEAD80B0CA3C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1274117,"avatar":"https://static001.geekbang.org/account/avatar/00/13/71/05/db554eba.jpg","nickname":"👽","note":"","ucode":"D313AF941B412D","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":20712,"discussion_content":"这个比喻很贴切","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1569348117,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":14556,"ip_address":""},"score":20712,"extra":""}]},{"author":{"id":1365988,"avatar":"https://static001.geekbang.org/account/avatar/00/14/d7/e4/0cd835d1.jpg","nickname":"yuny","note":"","ucode":"D4A1475B86A03B","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":15972,"discussion_content":"建水库，应该是 消息队列吧","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1568866156,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":134094,"user_name":"蓝魔丶","can_delete":false,"product_type":"c1","uid":1219438,"ip_address":"","ucode":"2AE4359E263558","user_header":"https://static001.geekbang.org/account/avatar/00/12/9b/6e/edd2da0c.jpg","comment_is_top":false,"comment_ctime":1568739065,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"40223444729","product_id":100035801,"comment_content":"我们公司一开始就采用了微服务架构方案，但在实施过程中却缺乏架构演进和优化过程，在支撑业务的同时也造成了很多运维和技术痛点","like_count":9,"discussions":[{"author":{"id":1146244,"avatar":"https://static001.geekbang.org/account/avatar/00/11/7d/84/7ec46b3f.jpg","nickname":"阿庄","note":"","ucode":"F93635DE7D8293","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":307388,"discussion_content":"一样，三五个人的小项目硬是要上微服务。leader初心是好的，想让我们学点新技术，然鹅结果就是没有问题硬是给自己制造问题。商业是逐利的啊。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1600614982,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":135824,"user_name":"yuan","can_delete":false,"product_type":"c1","uid":1207302,"ip_address":"","ucode":"EA3D0573478EC7","user_header":"https://static001.geekbang.org/account/avatar/00/12/6c/06/2ac17d5a.jpg","comment_is_top":false,"comment_ctime":1569286399,"is_pvip":false,"replies":[{"id":"52084","content":"内部实现会用到缓存的思想，Kafka会用到pagecache","user_name":"作者回复","comment_id":135824,"uid":"1448977","ip_address":"","utype":1,"ctime":1569297380,"user_name_real":"唐扬"}],"discussion_count":2,"race_medal":0,"score":"35929024767","product_id":100035801,"comment_content":"老师，消息队列用到缓存，之前没有听说过这个，请问哪种消息队列用到缓存？","like_count":8,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":468350,"discussion_content":"内部实现会用到缓存的思想，Kafka会用到pagecache","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1569297380,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1985184,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/GjFJHox9V8qh53zIrExw4NK0KG9WBvRH8RJVjm9jp78RSpWfa2xzyq11dTNItpK2icQniaK4bibTv6ksRGiasjTvMg/132","nickname":"Adong0678","note":"","ucode":"845EECDFDE6233","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":280834,"discussion_content":"缓存是解决应用层和数据层数据处理速度不对等，通过内存数据副本向上层提速。消息队列——缓冲数据，向下降速。它两是都有数据，都要“缓存”。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1591618409,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":149067,"user_name":"鞠小军","can_delete":false,"product_type":"c1","uid":1117744,"ip_address":"","ucode":"F945863EC472B2","user_header":"https://static001.geekbang.org/account/avatar/00/11/0e/30/e613d032.jpg","comment_is_top":false,"comment_ctime":1573134675,"is_pvip":false,"replies":[{"id":"57324","content":"👍","user_name":"作者回复","comment_id":149067,"uid":"1448977","ip_address":"","utype":1,"ctime":1573169641,"user_name_real":"唐扬"}],"discussion_count":2,"race_medal":0,"score":"27342938451","product_id":100035801,"comment_content":"总结：高并发设计三种思路<br>1、横向扩展<br>2、缓存<br>3、异步<br><br>首先，不能为了设计而设计，不要过度设计。单机满足业务需求就不要分布式，架构不能盲目，架构一定是逐步演进的，而且是随着业务的需求逐步进行的。<br><br>三种思路理解要宽泛。比如横向扩展可以是集群，可以是主从分离，也可以是分库分表等等。<br><br>缓存呢其实无处不在，比如CPU的一级缓存、二级缓存、三级缓存，操作系统缓存（如windows的page.sys文件），mybatis的一级缓存，二级缓存等等。<br><br>异步就是解藕操作，比如将订单成交的消息我需要保证准确性而不是实时性，因此就先放入消息队列中，消息被消费的时候在进行业务的处理，这样就可以提高并发请数量","like_count":6,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":473728,"discussion_content":"👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573169641,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2288362,"avatar":"https://static001.geekbang.org/account/avatar/00/22/ea/ea/77a59153.jpg","nickname":"耶马","note":"","ucode":"3A3CF67B016CDB","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":546275,"discussion_content":"课代表\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1642262275,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":134461,"user_name":"MYG","can_delete":false,"product_type":"c1","uid":1670483,"ip_address":"","ucode":"B8EF7BA8F22ABB","user_header":"https://static001.geekbang.org/account/avatar/00/19/7d/53/7a0399a4.jpg","comment_is_top":false,"comment_ctime":1568851908,"is_pvip":false,"replies":[{"id":"51709","content":"好嘞，以后我会注意的：）","user_name":"作者回复","comment_id":134461,"uid":"1448977","ip_address":"","utype":1,"ctime":1568935984,"user_name_real":"唐扬"}],"discussion_count":1,"race_medal":0,"score":"27338655684","product_id":100035801,"comment_content":"讲得真好！小建议，对于一些关键的术语可不可以像我们讲scale-out一样，同时使用中文和英文呢？比如cache，async，这样可以方便将来同时查阅中英文文献。","like_count":6,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":467758,"discussion_content":"好嘞，以后我会注意的：）","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1568935984,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":142651,"user_name":"水目沾","can_delete":false,"product_type":"c1","uid":1274495,"ip_address":"","ucode":"FDD1D15C277D58","user_header":"https://static001.geekbang.org/account/avatar/00/13/72/7f/5da093c5.jpg","comment_is_top":false,"comment_ctime":1571448172,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"18751317356","product_id":100035801,"comment_content":"架构设计三原则：简单原则、合适原则和演进原则","like_count":5},{"had_liked":false,"id":136827,"user_name":"标","can_delete":false,"product_type":"c1","uid":1136272,"ip_address":"","ucode":"D7FDCF388DE02C","user_header":"https://static001.geekbang.org/account/avatar/00/11/56/90/bfb92de9.jpg","comment_is_top":false,"comment_ctime":1569541103,"is_pvip":false,"replies":[{"id":"52486","content":"比如说如果要更新缓存就向一个消息队列里发一个消息，tomcat消费消息后清除本地缓存。不过更多的是等待缓存自己过期，或者定期更新缓存","user_name":"作者回复","comment_id":136827,"uid":"1448977","ip_address":"","utype":1,"ctime":1569545585,"user_name_real":"唐扬"}],"discussion_count":1,"race_medal":0,"score":"18749410287","product_id":100035801,"comment_content":"老师，多级缓存中，redis层的好处理，但是Nginx缓存，tomcat本地缓存，都是多台机器分布式部署，该如何及时主动更新","like_count":4,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":468813,"discussion_content":"比如说如果要更新缓存就向一个消息队列里发一个消息，tomcat消费消息后清除本地缓存。不过更多的是等待缓存自己过期，或者定期更新缓存","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1569545585,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":134118,"user_name":"业余草","can_delete":false,"product_type":"c1","uid":1126538,"ip_address":"","ucode":"99BDC1E629049D","user_header":"https://static001.geekbang.org/account/avatar/00/11/30/8a/b5ca7286.jpg","comment_is_top":false,"comment_ctime":1568763368,"is_pvip":false,"replies":[{"id":"51427","content":"架构演变是没有终点的：）","user_name":"作者回复","comment_id":134118,"uid":"1448977","ip_address":"","utype":1,"ctime":1568768792,"user_name_real":"唐扬"}],"discussion_count":6,"race_medal":0,"score":"18748632552","product_id":100035801,"comment_content":"微服务不是架构演变的终点！<br><br>https:&#47;&#47;mp.weixin.qq.com&#47;s&#47;TAHtAreMkxjWLfW1jSP88w","like_count":4,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":467619,"discussion_content":"架构演变是没有终点的：）","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1568768792,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1164531,"avatar":"https://static001.geekbang.org/account/avatar/00/11/c4/f3/92f654f1.jpg","nickname":"Bug? Feature!","note":"","ucode":"F8FA8A0094FBA0","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":28299,"discussion_content":"哪里都能看到你打广告","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1570690462,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1126538,"avatar":"https://static001.geekbang.org/account/avatar/00/11/30/8a/b5ca7286.jpg","nickname":"业余草","note":"","ucode":"99BDC1E629049D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1164531,"avatar":"https://static001.geekbang.org/account/avatar/00/11/c4/f3/92f654f1.jpg","nickname":"Bug? Feature!","note":"","ucode":"F8FA8A0094FBA0","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":28480,"discussion_content":"？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1570700020,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":28299,"ip_address":""},"score":28480,"extra":""}]},{"author":{"id":1669764,"avatar":"","nickname":"Geek_liuhaiyi","note":"","ucode":"242E301FAE0B37","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":14960,"discussion_content":"课后有老师解答吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1568791434,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1126538,"avatar":"https://static001.geekbang.org/account/avatar/00/11/30/8a/b5ca7286.jpg","nickname":"业余草","note":"","ucode":"99BDC1E629049D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1669764,"avatar":"","nickname":"Geek_liuhaiyi","note":"","ucode":"242E301FAE0B37","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":15010,"discussion_content":"？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1568795607,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":14960,"ip_address":""},"score":15010,"extra":""}]},{"author":{"id":1667213,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Ia8qXKLnJJbHjsYNQnlQguAM9YHiaBLWgSlDeGjVOrVTwibLmGqur0wMO0S8f2eC2PjPicIlUqNvNTbDa4yZMCDjg/132","nickname":"RogerRoger","note":"","ucode":"B22D39549F2BD0","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":14557,"discussion_content":"“Evolutionary Architecture”","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1568770793,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":134099,"user_name":"兔2🐰🍃","can_delete":false,"product_type":"c1","uid":1096984,"ip_address":"","ucode":"1FEDA044BB6CBD","user_header":"https://static001.geekbang.org/account/avatar/00/10/bd/18/2af6bf4b.jpg","comment_is_top":false,"comment_ctime":1568741622,"is_pvip":false,"replies":[{"id":"51428","content":"优秀！这个我确实没有了解很多，感谢提醒：）","user_name":"作者回复","comment_id":134099,"uid":"1448977","ip_address":"","utype":1,"ctime":1568768823,"user_name_real":"唐扬"}],"discussion_count":3,"race_medal":0,"score":"18748610806","product_id":100035801,"comment_content":"目前的芯片技术已经到达5nm级别了，最近台积电生产的高通骁龙875，使用的是5nm工艺制造，晶体管密度提升到1.713亿&#47;mm²（这个数据看到时也惊讶到了），比7nm提升70%左右，大概2021年的手机上会普遍起来。","like_count":4,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":467616,"discussion_content":"优秀！这个我确实没有了解很多，感谢提醒：）","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1568768823,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1713937,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/27/11/a9ea2f9f.jpg","nickname":"老学校老男孩","note":"","ucode":"CE6F26EAFB84B1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":225464,"discussion_content":"123","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1586359479,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1465986,"avatar":"https://static001.geekbang.org/account/avatar/00/16/5e/82/438c8534.jpg","nickname":"longslee","note":"","ucode":"C24E32E5B1B6F5","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":24180,"discussion_content":"嗯再小下去要解决量子遂穿效应了，不过既然说到量子那么如果量子计算机被研制出来了那简直是秒杀.....","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1570026064,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":145447,"user_name":"长期规划","can_delete":false,"product_type":"c1","uid":1019332,"ip_address":"","ucode":"5EF65E9115834B","user_header":"https://static001.geekbang.org/account/avatar/00/0f/8d/c4/6f97daea.jpg","comment_is_top":false,"comment_ctime":1572274527,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"14457176415","product_id":100035801,"comment_content":"总结和思考：处理高并发三板斧，水平扩展，缓冲，异步。<br>水平扩展：水平扩展其实就是拆分，目的是将高并发流量拆分低并发流量。兵法上好像也有这招，将大批敌人切成孤立的几块，个个歼灭。拆分可以从很多维度拆，比如按功能拆分为多个服务；应用层按流量拆分到多个应用服务器；DB层拆分为读和写，还有数据拆分多片；等等。拆分后的节点，分为两种：等价结节和非等价节点，等价结节也称为冗余，可以相互代替，比如同一服务的多台应用服务器，DB的多台读库，冗余除了可以提高并发性能外，还能提高可用性，一箭双雕；非等价节点，节点功能不可相互替代，比如一个大系统拆分为多个子服务，DB数据分片。<br>缓存：水平扩展就是拆分，分散压力，但水平扩展拆分的粒度也是有限的，冗余的话，也不能增加很多，因为要一致性。如果最细粒度的数据并发量还很高，读写慢，而瓶颈一般是DB，比如热点数据，此时可以考虑使用缓存，其实就是加一层速度更快的硬件。不知道缓存是否有必要冗余（一主多从），当并发量极高时可能需要吧？<br>异步：指的应该是MQ，对于高并发，有些不要求实时响应，比如之前做线上借贷放款时，对稳定性要求大大高于实时性。另外，他还有解耦功能，解决的是系统扩展性问题。","like_count":2},{"had_liked":false,"id":136654,"user_name":"行者","can_delete":false,"product_type":"c1","uid":1063734,"ip_address":"","ucode":"EA31201A7C5AE1","user_header":"https://static001.geekbang.org/account/avatar/00/10/3b/36/2d61e080.jpg","comment_is_top":false,"comment_ctime":1569487947,"is_pvip":false,"discussion_count":4,"race_medal":0,"score":"14454389835","product_id":100035801,"comment_content":"谢谢老师分享。<br>系统设计的时候，不能一心求大，而是应该有多少人做多少饭，避免不必要的浪费。<br>拿做饭举例，假设现在有1口锅，可以一次给10人做饭。<br>突然有一天要给100人做饭，<br>scale-out，扩展到10口锅来做饭；<br>缓存，1口锅在人来之前做10次；<br>异步，人来了，让大家先等着，做饭给大家端过去，不要在都在锅边等着。","like_count":3,"discussions":[{"author":{"id":1359701,"avatar":"https://static001.geekbang.org/account/avatar/00/14/bf/55/198c6104.jpg","nickname":"小伟","note":"","ucode":"124953423491E2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":22896,"discussion_content":"异步应该是大家可以在锅边也可以在别的地方，等着或者做别的事，饭做好了会被别人端给你。同步异步的区别在于事情做好了谁去获取结果，等不等是阻塞和非阻塞。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1569725239,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1356083,"avatar":"https://static001.geekbang.org/account/avatar/00/14/b1/33/8993eae0.jpg","nickname":"黄展志","note":"","ucode":"EBA342CD89072D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1359701,"avatar":"https://static001.geekbang.org/account/avatar/00/14/bf/55/198c6104.jpg","nickname":"小伟","note":"","ucode":"124953423491E2","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":39505,"discussion_content":"同步就是闲等，异步就是忙等","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571932962,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":22896,"ip_address":""},"score":39505,"extra":""}]},{"author":{"id":1659112,"avatar":"https://static001.geekbang.org/account/avatar/00/19/50/e8/8ac78069.jpg","nickname":"꧁ཉི༗Wind༗ཉི꧂","note":"","ucode":"4F923BC35609FB","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":38857,"discussion_content":"分析的挺好","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571842268,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1043497,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/ec/29/bd1efa05.jpg","nickname":"若尘2B","note":"","ucode":"CE2007712D1BE6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":23840,"discussion_content":"赞，阻塞和、非阻塞与同步、异步一句话描述的很贴切","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1569912965,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":134982,"user_name":"雾里看花","can_delete":false,"product_type":"c1","uid":1131769,"ip_address":"","ucode":"8AD84201568798","user_header":"https://static001.geekbang.org/account/avatar/00/11/44/f9/8939732e.jpg","comment_is_top":false,"comment_ctime":1568968693,"is_pvip":false,"replies":[{"id":"51802","content":"拓宽河道可以认为是加快水流速度，和缓存加速的思想差不多一致","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1568974647,"ip_address":"","comment_id":134982,"utype":1}],"discussion_count":3,"race_medal":0,"score":"14453870581","product_id":100035801,"comment_content":"为什么说缓存是拓宽河道呢？","like_count":3,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":467987,"discussion_content":"拓宽河道可以认为是加快水流速度，和缓存加速的思想差不多一致","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1568974647,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1067936,"avatar":"https://static001.geekbang.org/account/avatar/00/10/4b/a0/3fa531e5.jpg","nickname":"Vicente","note":"","ucode":"6A5D34F72DF059","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":535574,"discussion_content":"缓存使用代理商来形容可能会跟容易理解些","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1638468764,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1505221,"avatar":"https://static001.geekbang.org/account/avatar/00/16/f7/c5/ffe52e87.jpg","nickname":"阿拉西恩木","note":"","ucode":"A3A62175137D3D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":220892,"discussion_content":"扩大数据存储方式，加快水流","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585928152,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":134564,"user_name":"jc9090kkk","can_delete":false,"product_type":"c1","uid":1338831,"ip_address":"","ucode":"6C992D07A2E78F","user_header":"https://static001.geekbang.org/account/avatar/00/14/6d/cf/ec335526.jpg","comment_is_top":false,"comment_ctime":1568866914,"is_pvip":false,"replies":[{"id":"51712","content":"是的，说的没错，比如心跳机制就很难做到业务级别，只能做到通信级别","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1568936126,"ip_address":"","comment_id":134564,"utype":1}],"discussion_count":3,"race_medal":0,"score":"14453768802","product_id":100035801,"comment_content":"感谢老师的分享，分享下个人的经历吧，之前在金融科技创业公司工作过，刚开始的时候，系统的复杂度有限，基本都是单机，随着业务量慢慢变大，系统变得笨重，响应时间变慢，因为系统中包含很多模块+redis缓存，比如订单模块，风控模块，资金池模块，用户模块等等，最后慢慢一步步进行解耦，将订单模块和+用户模块解耦做服务化（PHP技术栈），风控模块解耦做服务化（Java技术栈），中间各个服务用RPC接口进行数据交互，加上服务化的心跳检测，整个系统的响应时间才慢慢降下去，不过也出现了一些问题，比如系统和系统之间的rpc调用在后面出现一些问题，主要是业务的bug定位的时候，需要追踪，整个定位流程时间成本比较高，当时也没有接入日志采集的服务，当时还不知道kafka，所以没用，后面发现服务化之间的心跳检测也不靠谱，有时候明明响应时间已经上升了，但是心跳检测确实正常的，像这样的外部检测机制都伴有随机性。。。","like_count":3,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":467810,"discussion_content":"是的，说的没错，比如心跳机制就很难做到业务级别，只能做到通信级别","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1568936126,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1067936,"avatar":"https://static001.geekbang.org/account/avatar/00/10/4b/a0/3fa531e5.jpg","nickname":"Vicente","note":"","ucode":"6A5D34F72DF059","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":535575,"discussion_content":"我对心跳问题的原因颇感兴趣，能想到的最大可能是时延？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1638469004,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1095740,"avatar":"https://static001.geekbang.org/account/avatar/00/10/b8/3c/1a294619.jpg","nickname":"Panda","note":"","ucode":"911A200C7B18BE","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":51084,"discussion_content":"这种服务化之后  你就需要一个 &#34;鹰眼&#34; => 链路追踪","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573809055,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":134252,"user_name":"由莫","can_delete":false,"product_type":"c1","uid":1293063,"ip_address":"","ucode":"20B24BA3CBBE2B","user_header":"https://static001.geekbang.org/account/avatar/00/13/bb/07/0188bf41.jpg","comment_is_top":false,"comment_ctime":1568783492,"is_pvip":false,"replies":[{"id":"51532","content":"当时考虑的是拓宽河道是让水流更快，和缓存思想比较接近","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1568849587,"ip_address":"","comment_id":134252,"utype":1}],"discussion_count":4,"race_medal":0,"score":"14453685380","product_id":100035801,"comment_content":"把缓存比喻成拓宽河道不合理。从另外的角度来看，拓宽河道就是增加流量的带宽。这跟缓存放在一起说感觉让人对缓存有误解。","like_count":4,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":467674,"discussion_content":"当时考虑的是拓宽河道是让水流更快，和缓存思想比较接近","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1568849587,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1398577,"avatar":"https://static001.geekbang.org/account/avatar/00/15/57/31/6772744d.jpg","nickname":"ちよくん","note":"","ucode":"B71E9B16E4408F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":99425,"discussion_content":"我也认为拓宽河道是增大流量，增加带宽","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1577199781,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1004349,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/53/3d/1189e48a.jpg","nickname":"微思","note":"","ucode":"853C48AA183A7B","race_medal":4,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":25151,"discussion_content":"同意由莫的观点","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1570437202,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1004192,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/52/a0/d308434e.jpg","nickname":"StarKing","note":"","ucode":"EB825CFA70AC1F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":16950,"discussion_content":"拓宽只能引入更高流量，缓存其实不像案例所想。不太有可比性。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1568936524,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":134238,"user_name":"吃饭饭","can_delete":false,"product_type":"c1","uid":1231549,"ip_address":"","ucode":"95CFA07CDA2957","user_header":"https://static001.geekbang.org/account/avatar/00/12/ca/bd/a51ae4b2.jpg","comment_is_top":false,"comment_ctime":1568780619,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"14453682507","product_id":100035801,"comment_content":"我更喜欢从成本和用户量的角度去考虑架构的实现方案，细想一下，正好迎合了老师的循序渐进。","like_count":3},{"had_liked":false,"id":203146,"user_name":"钱","can_delete":false,"product_type":"c1","uid":1009652,"ip_address":"","ucode":"2C92A243A463D4","user_header":"https://static001.geekbang.org/account/avatar/00/0f/67/f4/9a1feb59.jpg","comment_is_top":false,"comment_ctime":1586144311,"is_pvip":false,"replies":[{"id":"78256","content":"👍","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1587623592,"ip_address":"","comment_id":203146,"utype":1}],"discussion_count":2,"race_medal":0,"score":"10176078903","product_id":100035801,"comment_content":"讨论很激烈，很棒，证明能引起共鸣。<br>小结一下：<br>1：技术是服务于业务的，不过技术不行，也是服务不好的，所以，无论个人还是国家都想要更好更先进的技术<br>2：架构是需要演进的，不是一撮而就的<br>3：分布式技术就是为了解决大流量高并发的问题的，核心思路，一是水平扩展，二是缓存化，三是异步化<br>4：高并发问题说通俗点就是流量多，多到一台机器根本扛不住的程度，此时该咋弄？弄咋办?其实没啥法子，一个就是用更牛逼的机器，另一个就是多个机器一起扛，前一种思路根本上是走不通的，因为单机性能和容量即使再强也有极限，没得选啦！就只能用多个机器扛，后面的所有技术都是为了使多个机器像一个机器一样工作，原理需要操作系统考虑的事情，外溢出来交给开发工程师来考虑啦！<br>5：道理都是相通的，想一想怎么快速收麦子?怎么快速除草?怎么应对洪涝?那高并发系统的问题也是需要这样来思考的","like_count":2,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":490783,"discussion_content":"👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1587623592,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2897079,"avatar":"","nickname":"绛府邀","note":"","ucode":"FA228D8A6D56BE","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":547910,"discussion_content":"差不多，于此止步。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1642930118,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":135431,"user_name":"mahaitao617","can_delete":false,"product_type":"c1","uid":1338716,"ip_address":"","ucode":"D199FD825488EA","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/sw9JHZsxtw5viaYoBlmC0UvM9NPHf1YG48fR6iaG8BbvgN1KpjlJ5dzYmDmbxSBDbzP2r9tGo020PXWWwlcCUssA/132","comment_is_top":false,"comment_ctime":1569159680,"is_pvip":false,"replies":[{"id":"51958","content":"这是一个异步的过程。接收到用户请求，响应用户正在排队中。然后丢一个消息给消息队列，消息队列里面做订票的操作，订票成功或者失败后再通知用户","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1569201959,"ip_address":"","comment_id":135431,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10159094272","product_id":100035801,"comment_content":"消息队列那个图能讲的详细点嘛？例如请求放入队列中之后再异步处理这个过程整个过程，谢谢老师","like_count":2,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":468189,"discussion_content":"这是一个异步的过程。接收到用户请求，响应用户正在排队中。然后丢一个消息给消息队列，消息队列里面做订票的操作，订票成功或者失败后再通知用户","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1569201959,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":134181,"user_name":"一步","can_delete":false,"product_type":"c1","uid":1005391,"ip_address":"","ucode":"73CEA468CE70C3","user_header":"https://static001.geekbang.org/account/avatar/00/0f/57/4f/6fb51ff1.jpg","comment_is_top":false,"comment_ctime":1568771565,"is_pvip":true,"discussion_count":0,"race_medal":1,"score":"10158706157","product_id":100035801,"comment_content":"Scale-out 横向扩展<br>Scale-up 纵向扩展","like_count":2},{"had_liked":false,"id":134155,"user_name":"平步青云","can_delete":false,"product_type":"c1","uid":1667103,"ip_address":"","ucode":"5024A00CEED6E3","user_header":"https://static001.geekbang.org/account/avatar/00/19/70/1f/15e5356b.jpg","comment_is_top":false,"comment_ctime":1568768078,"is_pvip":false,"replies":[{"id":"51535","content":"一定要选择社区成熟，团队熟悉的技术，否则后期维护是大问题","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1568849910,"ip_address":"","comment_id":134155,"utype":1}],"discussion_count":2,"race_medal":0,"score":"10158702670","product_id":100035801,"comment_content":"最近做项目也准备采用微服务架构，今天看老师这么一说，我还是注意下，毕竟微服务架构还不是特别熟，团队技术能力都一般，还是选择成熟，熟悉的架构了","like_count":2,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":467633,"discussion_content":"一定要选择社区成熟，团队熟悉的技术，否则后期维护是大问题","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1568849910,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1670644,"avatar":"https://static001.geekbang.org/account/avatar/00/19/7d/f4/08999596.jpg","nickname":"帥","note":"","ucode":"7A9F4F0E84A6D6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":15422,"discussion_content":"不使用，永远不会熟哦！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1568819552,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":207403,"user_name":"发光的卢咪","can_delete":false,"product_type":"c1","uid":1402153,"ip_address":"","ucode":"9E0CA3D879DF24","user_header":"https://static001.geekbang.org/account/avatar/00/15/65/29/6fca8610.jpg","comment_is_top":false,"comment_ctime":1587083265,"is_pvip":false,"replies":[{"id":"78085","content":"是的","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1587472825,"ip_address":"","comment_id":207403,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5882050561","product_id":100035801,"comment_content":"如无必要，勿增实体。","like_count":1,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":492111,"discussion_content":"是的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1587472825,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":192321,"user_name":"sipom","can_delete":false,"product_type":"c1","uid":1074197,"ip_address":"","ucode":"80411DC49CFA57","user_header":"https://static001.geekbang.org/account/avatar/00/10/64/15/9c9ca35c.jpg","comment_is_top":false,"comment_ctime":1584846554,"is_pvip":false,"replies":[{"id":"73896","content":"赞总结","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1585019793,"ip_address":"","comment_id":192321,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5879813850","product_id":100035801,"comment_content":"Scale-out、缓存和异步，应用多机集群、数据库&#47;缓存分库分表、rpc异步调用、消息队列。","like_count":1,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":488369,"discussion_content":"赞总结","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585019793,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":184956,"user_name":"周曙光爱学习","can_delete":false,"product_type":"c1","uid":1022920,"ip_address":"","ucode":"98EAB6EBAB34B6","user_header":"https://static001.geekbang.org/account/avatar/00/0f/9b/c8/665100a3.jpg","comment_is_top":false,"comment_ctime":1583458127,"is_pvip":false,"replies":[{"id":"72212","content":"👍","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1584020130,"ip_address":"","comment_id":184956,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5878425423","product_id":100035801,"comment_content":"我们回塞缓存的逻辑是查寻满足某种条件的全量数据，这种情况在并发请求的时候如果缓存miss可能会造成db压力，所以采用了异步回塞缓存方案，查询数据回塞前判断缓存是否存在，这样其实只有一次查询全量数据的请求避免了db压力问题","like_count":1,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":486188,"discussion_content":"👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584020130,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":182006,"user_name":"每天进步一点点","can_delete":false,"product_type":"c1","uid":1665009,"ip_address":"","ucode":"CA4ED086A01D81","user_header":"https://static001.geekbang.org/account/avatar/00/19/67/f1/1d90f41f.jpg","comment_is_top":false,"comment_ctime":1582691007,"is_pvip":false,"replies":[{"id":"71101","content":"点赞和礼物是实时消息，基本上是会设计一个接入层来保持长连接，消息从接入层接入之后，会发送到消息队列中做异步处理，然后再通过长连接推送给所有人","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1583115214,"ip_address":"","comment_id":182006,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5877658303","product_id":100035801,"comment_content":"请问老师可以分析一下如果是直播或者短视频类型的应用该如何入手设计高并发吗？个人感觉首先快速看到视频流是缓存，但是像点赞和礼物实时性要求也非常高，是通过消息中间件吗？然后消息中间件的状态转换是需要用socket之类的协议动态发送给前端吗？🙏新手疑惑多多，项目和学业需要，感谢优质课程和大牛老师！","like_count":1,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":485196,"discussion_content":"点赞和礼物是实时消息，基本上是会设计一个接入层来保持长连接，消息从接入层接入之后，会发送到消息队列中做异步处理，然后再通过长连接推送给所有人","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1583115214,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":161872,"user_name":"Aaron","can_delete":false,"product_type":"c1","uid":1600291,"ip_address":"","ucode":"18AA1D86F7F4CE","user_header":"https://static001.geekbang.org/account/avatar/00/18/6b/23/ddad5282.jpg","comment_is_top":false,"comment_ctime":1576386526,"is_pvip":true,"replies":[{"id":"62172","content":"自己踩过的坑，记忆会更深刻~","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1576744695,"ip_address":"","comment_id":161872,"utype":1}],"discussion_count":2,"race_medal":0,"score":"5871353822","product_id":100035801,"comment_content":"在公司做项目的时候，服务器用的是阿里云服务器，3台，最初的时候域名指向其中一台服务器A， 然后这台服务A做内部负载均衡，以为这种形式会运行的很稳定。但用户上来以后， 发现单台服务器的带宽不能满足，经常收到报警，特别是在高峰期的时候，报警特别频繁。后来新购买了一台阿里云的SLB，通过阿里云的SLB结局了带宽报警的问题。 这种情况下可以平滑的加减后台服务器的数量。这是实际的项目中踩过的坑，也是因为之前并没有这种经验。","like_count":1,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":477887,"discussion_content":"自己踩过的坑，记忆会更深刻~","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1576744695,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1113469,"avatar":"https://static001.geekbang.org/account/avatar/00/10/fd/7d/a4bda9ce.jpg","nickname":"B 612 星球来客","note":"","ucode":"CBFB05B1F1B178","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":298683,"discussion_content":"不对啊，阿里服务器内网连接也受带宽限制么？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1597377812,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":151890,"user_name":"Panda","can_delete":false,"product_type":"c1","uid":1095740,"ip_address":"","ucode":"911A200C7B18BE","user_header":"https://static001.geekbang.org/account/avatar/00/10/b8/3c/1a294619.jpg","comment_is_top":false,"comment_ctime":1573807272,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5868774568","product_id":100035801,"comment_content":"架构是演进的  不是过度设计的    在合适的业务场景 选择适合的系统架构   就是性价比最高的","like_count":1},{"had_liked":false,"id":141502,"user_name":"zcqshine","can_delete":false,"product_type":"c1","uid":1007000,"ip_address":"","ucode":"9DABA78369344E","user_header":"https://static001.geekbang.org/account/avatar/00/0f/5d/98/98fe8de3.jpg","comment_is_top":false,"comment_ctime":1571185975,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"5866153271","product_id":100035801,"comment_content":"说说我们项目中目前踩过的一个坑，我们系统里只有几个表需要分表来分担单表压力，不需要分库，而为了这个目的我们引入了分裤分表组件，后来在使用的过程中发现这个组件对SQL语句的限制比较多，反而把问题复杂化了，还不如自己计算出具体的表以后直接查库，而且分表规则很明确，自己算表很简单。现在在考虑抽时间把这个组件移除掉","like_count":1,"discussions":[{"author":{"id":1007000,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/5d/98/98fe8de3.jpg","nickname":"zcqshine","note":"","ucode":"9DABA78369344E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":48733,"discussion_content":"已经移除掉sharding-jdbc了，神清气爽了","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1573522191,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":134256,"user_name":"vigo","can_delete":false,"product_type":"c1","uid":1086295,"ip_address":"","ucode":"036CEE5F3FABE7","user_header":"https://static001.geekbang.org/account/avatar/00/10/93/57/3ffdfc8d.jpg","comment_is_top":false,"comment_ctime":1568785083,"is_pvip":false,"replies":[{"id":"51528","content":"你说的很对","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1568849340,"ip_address":"","comment_id":134256,"utype":1}],"discussion_count":3,"race_medal":0,"score":"5863752379","product_id":100035801,"comment_content":"脱离业务的架构都是伪命题，只要结合实际业务而设计的架构才是靠谱的方案，虽然有时候看起来不那么高大上。","like_count":1,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":467678,"discussion_content":"你说的很对","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1568849340,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1356083,"avatar":"https://static001.geekbang.org/account/avatar/00/14/b1/33/8993eae0.jpg","nickname":"黄展志","note":"","ucode":"EBA342CD89072D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":39512,"discussion_content":"公司需要的是商业上的成功，而不是技术上的成功，技术上的成功是辅助商业的，一切都要看业务结果，脱离实际业务的技术都是耍流氓","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571933359,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1274495,"avatar":"https://static001.geekbang.org/account/avatar/00/13/72/7f/5da093c5.jpg","nickname":"水目沾","note":"","ucode":"FDD1D15C277D58","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":36822,"discussion_content":"合适的才是最好的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571448590,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":134251,"user_name":"fcb的鱼","can_delete":false,"product_type":"c1","uid":1243901,"ip_address":"","ucode":"88667EBF09CEC0","user_header":"https://static001.geekbang.org/account/avatar/00/12/fa/fd/ec24cba7.jpg","comment_is_top":false,"comment_ctime":1568783332,"is_pvip":false,"replies":[{"id":"51529","content":"其实就是多核让摩尔定律延续下来","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1568849374,"ip_address":"","comment_id":134251,"utype":1}],"discussion_count":2,"race_medal":0,"score":"5863750628","product_id":100035801,"comment_content":"关于摩尔定律那块有些疑问：前边有讲到，当前芯片集成了足够多的晶体管，但是因为已经足够的薄，所以再可发挥的空间不多了！后边又说，多个cpu集成到一个芯片上拯救了摩尔定律！没太明白这块的关系！","like_count":1,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":467673,"discussion_content":"其实就是多核让摩尔定律延续下来","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1568849374,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1105161,"avatar":"https://static001.geekbang.org/account/avatar/00/10/dd/09/feca820a.jpg","nickname":"helloworld","note":"","ucode":"1EECCA0F43E278","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":18640,"discussion_content":"多核相对于单核也是横向扩展","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1569075301,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":134176,"user_name":"👽","can_delete":false,"product_type":"c1","uid":1274117,"ip_address":"","ucode":"D313AF941B412D","user_header":"https://static001.geekbang.org/account/avatar/00/13/71/05/db554eba.jpg","comment_is_top":false,"comment_ctime":1568770473,"is_pvip":false,"replies":[{"id":"51534","content":"是的，要根据业务需求使用不同的架构","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1568849713,"ip_address":"","comment_id":134176,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5863737769","product_id":100035801,"comment_content":"杨晓峰的专栏里提到过：“过早的优化是万恶之源。”<br>目前就职于一家小公司，其系统架构就存在着巨大的问题。<br>采用的缓存是 memcached ，并对齐有复杂的技术设计。<br>但是因为其项目比较老，团队技术体系也不够成熟，并且最主要的问题是【项目的体量以及并发量很低】，自认为并没有引进缓存技术的必要。<br>现在带来的结果是，新的接口直接选择查库，而老的接口又会因为缓存会有些许问题。给项目带来 了维护困难等一系列问题（当然，问题的根本不止缓存问题这一个），一切的技术选型与扩展都要基于业务需求，不能单纯为了扩展而扩展。","like_count":1,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":467640,"discussion_content":"是的，要根据业务需求使用不同的架构","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1568849713,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":342456,"user_name":"再见理想","can_delete":false,"product_type":"c1","uid":1245999,"ip_address":"","ucode":"FAC88B3F6F6DFD","user_header":"https://static001.geekbang.org/account/avatar/00/13/03/2f/0a5e0751.jpg","comment_is_top":false,"comment_ctime":1650274511,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1650274511","product_id":100035801,"comment_content":"高并发系统的演进是循序渐进的，是以解决系统中的问题为目的和驱动力的。<br>1.横向扩展<br>2.增加缓存<br>3.异步处理","like_count":0},{"had_liked":false,"id":336327,"user_name":"Geek_c30021","can_delete":false,"product_type":"c1","uid":2655567,"ip_address":"","ucode":"2BADC5296CE4B4","user_header":"","comment_is_top":false,"comment_ctime":1646098561,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1646098561","product_id":100035801,"comment_content":"并行也属于通用设计方法之一吗","like_count":0},{"had_liked":false,"id":316690,"user_name":"青年祭司","can_delete":false,"product_type":"c1","uid":1259156,"ip_address":"","ucode":"C88EDAE3FF09AE","user_header":"https://static001.geekbang.org/account/avatar/00/13/36/94/0b969588.jpg","comment_is_top":false,"comment_ctime":1634513876,"is_pvip":false,"discussion_count":0,"race_medal":5,"score":"1634513876","product_id":100035801,"comment_content":"读写次数相当的请求也适合这些通用方法吗","like_count":0},{"had_liked":false,"id":311262,"user_name":"亚林","can_delete":false,"product_type":"c1","uid":1018972,"ip_address":"","ucode":"4A5A6D24314B79","user_header":"https://static001.geekbang.org/account/avatar/00/0f/8c/5c/3f164f66.jpg","comment_is_top":false,"comment_ctime":1631148987,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1631148987","product_id":100035801,"comment_content":"听隔壁波波老师说：“架构是演进出来的，不是设计出来的”","like_count":0},{"had_liked":false,"id":307325,"user_name":"葳蕤自生光","can_delete":false,"product_type":"c1","uid":2179563,"ip_address":"","ucode":"E7A58CDCAB7D7E","user_header":"https://static001.geekbang.org/account/avatar/00/21/41/eb/e6d0b6ea.jpg","comment_is_top":false,"comment_ctime":1629027517,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1629027517","product_id":100035801,"comment_content":"Scaling out = adding more components in parallel to spread out a load.<br>文中对scaling out的解释有点偏差，我理解的是水平扩容，或者叫横向扩展，就是通过对同一个服务部署多个实例来进行负载均衡。","like_count":0},{"had_liked":false,"id":305497,"user_name":"钟小强","can_delete":false,"product_type":"c1","uid":1433570,"ip_address":"","ucode":"012B705562FDE9","user_header":"https://static001.geekbang.org/account/avatar/00/15/df/e2/c6d9cb4c.jpg","comment_is_top":false,"comment_ctime":1627997861,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1627997861","product_id":100035801,"comment_content":"没有最好的设计，只有最合适的设计。目前开发的是一个量化程序，使用单体架构+分层，不同层之间的通信时间压缩到ms量级，时间过长则考虑是否有分层的必要。有一大部分功能分层的原因是由于网络限制的原因。","like_count":0},{"had_liked":false,"id":301525,"user_name":"belief","can_delete":false,"product_type":"c1","uid":1765541,"ip_address":"","ucode":"563EDA9F2C9214","user_header":"https://static001.geekbang.org/account/avatar/00/1a/f0/a5/ff758400.jpg","comment_is_top":false,"comment_ctime":1625728085,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1625728085","product_id":100035801,"comment_content":"长见识，开拓眼界，CURD的境界不一样了","like_count":0},{"had_liked":false,"id":289868,"user_name":"俊伟","can_delete":false,"product_type":"c1","uid":1111175,"ip_address":"","ucode":"7905B4F25637F4","user_header":"https://static001.geekbang.org/account/avatar/00/10/f4/87/644c0c5d.jpg","comment_is_top":false,"comment_ctime":1619238795,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1619238795","product_id":100035801,"comment_content":"总结：<br>高并发解决思路：<br>1.scale out横向扩展<br>2.加缓存<br>3.使用异步<br>高并发系统的设计要因地制宜，已解决当前系统问题为主要任务，不要过度设计","like_count":0},{"had_liked":false,"id":270692,"user_name":"大鱼","can_delete":false,"product_type":"c1","uid":1352665,"ip_address":"","ucode":"1418EE18C4BDD4","user_header":"","comment_is_top":false,"comment_ctime":1609218601,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1609218601","product_id":100035801,"comment_content":"有一个非常高IO的离线系统，当时做的方案是做单机scale-up的方案，当发现单机也有瓶颈时，果断切换成scale-out的方案，这个时候引入一些新的问题，比如运维，节点监控，新方案能解决当下最紧急的性能问题，不过也会带来一些其它问题","like_count":0},{"had_liked":false,"id":261323,"user_name":"dandy","can_delete":false,"product_type":"c1","uid":1583740,"ip_address":"","ucode":"5EE976FCBD9215","user_header":"https://static001.geekbang.org/account/avatar/00/18/2a/7c/0d6a87c4.jpg","comment_is_top":false,"comment_ctime":1605271715,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1605271715","product_id":100035801,"comment_content":"老师你好，12306异步处理订单图，这个是用什么工具画的呢","like_count":0},{"had_liked":false,"id":249838,"user_name":"许凯","can_delete":false,"product_type":"c1","uid":1604645,"ip_address":"","ucode":"4F11AD41CB0244","user_header":"https://static001.geekbang.org/account/avatar/00/18/7c/25/70134099.jpg","comment_is_top":false,"comment_ctime":1600827840,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1600827840","product_id":100035801,"comment_content":"缓存可能更像是高架桥，将上游的一部分水直接带过薄弱的地带","like_count":0},{"had_liked":false,"id":243161,"user_name":"　　　　　　　　","can_delete":false,"product_type":"c1","uid":1174056,"ip_address":"","ucode":"A68855A9893CC3","user_header":"https://static001.geekbang.org/account/avatar/00/11/ea/28/9d621043.jpg","comment_is_top":false,"comment_ctime":1597979045,"is_pvip":false,"replies":[{"id":"90314","content":"可能是后端服务慢了，或者是dubbo线程池配置不合理","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1599009529,"ip_address":"","comment_id":243161,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1597979045","product_id":100035801,"comment_content":"这边有一个dao层服务总是不定时出现几秒dubbo线程池满的情况 头疼","like_count":0,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":504204,"discussion_content":"可能是后端服务慢了，或者是dubbo线程池配置不合理","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1599009529,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":238552,"user_name":"范闲","can_delete":false,"product_type":"c1","uid":1073125,"ip_address":"","ucode":"F21FD7DF6BA53C","user_header":"https://static001.geekbang.org/account/avatar/00/10/5f/e5/54325854.jpg","comment_is_top":false,"comment_ctime":1596197420,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1596197420","product_id":100035801,"comment_content":"老师，这里举的异步的例子都是系统和系统间的调用。那如果是系统内怎么做异步呢？<br>1. Callback<br>2.多线程+Callback<br><br>但是这两个都有个问题，callback也是会阻塞的。如果有A B C D四个流程，B C D分别依赖于前一个的输出，这种callback就会调用栈太深，容易爆栈。<br><br>最近对异步编程模式产生了些疑问，应该怎么解决？","like_count":0,"discussions":[{"author":{"id":1067936,"avatar":"https://static001.geekbang.org/account/avatar/00/10/4b/a0/3fa531e5.jpg","nickname":"Vicente","note":"","ucode":"6A5D34F72DF059","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":535576,"discussion_content":"进程内的异步使用多线程或者队列，如果流程彼此有强依赖的话更适用同步调用。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1638469537,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":234515,"user_name":"哑言","can_delete":false,"product_type":"c1","uid":2057048,"ip_address":"","ucode":"A063B16FDC82CD","user_header":"https://static001.geekbang.org/account/avatar/00/1f/63/58/3f13d983.jpg","comment_is_top":false,"comment_ctime":1594712145,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"1594712145","product_id":100035801,"comment_content":"简单说一下我遇到的数据库分库的原因：<br>因业务是区域化，某一区域有一个或多个供应商，因商品的属性问题，商品仅能在该区域下发布，而这些商品也只能是该区域下的用户才能够购买。<br>优点：<br>1.扩展新的区域，只需要添加供应商，数据库分库的编码即可。<br>2.无论业务还是数据，方便管理<br>...<br>缺点：<br>1.因区域间地势不规则，配送区域有所差异<br>2.用户跨区域购买，或A区域购买B区域商品（送货地址），此时涉及到数据双写<br>...","like_count":0,"discussions":[{"author":{"id":1886331,"avatar":"https://static001.geekbang.org/account/avatar/00/1c/c8/7b/153181d7.jpg","nickname":"夜辉","note":"","ucode":"9421385F51FF9E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":363981,"discussion_content":"前提条件说的是商品仅能在该区域下发布，而这些商品也只能是该区域下的用户才能够购买\n但缺点张淑红却有用户跨区域购买？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1617339862,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":2057048,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/63/58/3f13d983.jpg","nickname":"哑言","note":"","ucode":"A063B16FDC82CD","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1886331,"avatar":"https://static001.geekbang.org/account/avatar/00/1c/c8/7b/153181d7.jpg","nickname":"夜辉","note":"","ucode":"9421385F51FF9E","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":556924,"discussion_content":"这个比较类似我遇到的如下业务场景：\n背景：电商平台卖纸板一类\n业务要求：本地区购买及配送\n业务实际情况这个人换了地区买，因为系统做的分布式，导致信息存储不在一起。\n解决方法：\n技术上：用户订单查询所有区域信息（不建议）\n需求上：用户注册时，保定一个区域，用于存放数据（需实际了解业务痛点），再优化可以通过收货路线规划，算法。解决跨区域比本区域更近，价格优惠的问题","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1647573267,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":363981,"ip_address":""},"score":556924,"extra":""}]}]},{"had_liked":false,"id":233119,"user_name":"idea","can_delete":false,"product_type":"c1","uid":1252848,"ip_address":"","ucode":"621921030982C0","user_header":"https://static001.geekbang.org/account/avatar/00/13/1d/f0/59702429.jpg","comment_is_top":false,"comment_ctime":1594221533,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1594221533","product_id":100035801,"comment_content":"最近工作中正好在做系统重构工作，原先的系统由于模块拆分过细，导致微服务泛滥，现在又要将服务进行整合，技术还是得为业务服务。","like_count":0,"discussions":[{"author":{"id":1067936,"avatar":"https://static001.geekbang.org/account/avatar/00/10/4b/a0/3fa531e5.jpg","nickname":"Vicente","note":"","ucode":"6A5D34F72DF059","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":535577,"discussion_content":"粒度问题","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1638469661,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":215593,"user_name":"忆水寒","can_delete":false,"product_type":"c1","uid":1147453,"ip_address":"","ucode":"E3F86BD8AA8903","user_header":"https://static001.geekbang.org/account/avatar/00/11/82/3d/356fc3d6.jpg","comment_is_top":false,"comment_ctime":1589027971,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1589027971","product_id":100035801,"comment_content":"优秀","like_count":0},{"had_liked":false,"id":214913,"user_name":"梅子黄时雨","can_delete":false,"product_type":"c1","uid":1015938,"ip_address":"","ucode":"9F788D09C2E9E7","user_header":"https://static001.geekbang.org/account/avatar/00/0f/80/82/3c21b30c.jpg","comment_is_top":false,"comment_ctime":1588847267,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1588847267","product_id":100035801,"comment_content":"系统也像生物一样，是会成长的。","like_count":0},{"had_liked":false,"id":203292,"user_name":"随风","can_delete":false,"product_type":"c1","uid":1244248,"ip_address":"","ucode":"86A78303C9AB9D","user_header":"https://static001.geekbang.org/account/avatar/00/12/fc/58/90b7b363.jpg","comment_is_top":false,"comment_ctime":1586167566,"is_pvip":false,"replies":[{"id":"78260","content":"👍","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1587623672,"ip_address":"","comment_id":203292,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1586167566","product_id":100035801,"comment_content":"多少的量才算得上高并发，平时设计框架的时候以什么标准去衡量系统，什么样的场景下需要缓从，什么样的场景下需要消息对列，在我们设计之初能做决定","like_count":0,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":490820,"discussion_content":"👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1587623672,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":202234,"user_name":"阿拉西恩木","can_delete":false,"product_type":"c1","uid":1505221,"ip_address":"","ucode":"A3A62175137D3D","user_header":"https://static001.geekbang.org/account/avatar/00/16/f7/c5/ffe52e87.jpg","comment_is_top":false,"comment_ctime":1585928314,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1585928314","product_id":100035801,"comment_content":"讲得非常好  我们系统 数据库cpu占用不高，但有时候还是请求很慢（多节点），尤其是有慢sql的时候，但数据显示cpu占用不高，不知为什么？","like_count":0,"discussions":[{"author":{"id":1067936,"avatar":"https://static001.geekbang.org/account/avatar/00/10/4b/a0/3fa531e5.jpg","nickname":"Vicente","note":"","ucode":"6A5D34F72DF059","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":535578,"discussion_content":"cpu 高多数是计算多的情况下出现的，请求慢也可能是数据量大所致","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1638469779,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":196501,"user_name":"王家峥","can_delete":false,"product_type":"c1","uid":1921648,"ip_address":"","ucode":"73C711B528D348","user_header":"","comment_is_top":false,"comment_ctime":1585286630,"is_pvip":false,"replies":[{"id":"75856","content":"谢谢，加油💪","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1586089276,"ip_address":"","comment_id":196501,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1585286630","product_id":100035801,"comment_content":"老师讲的蛮好的，思路比较清晰，逐渐带入，赞一个","like_count":0,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":489315,"discussion_content":"谢谢，加油💪","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1586089276,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":192323,"user_name":"sipom","can_delete":false,"product_type":"c1","uid":1074197,"ip_address":"","ucode":"80411DC49CFA57","user_header":"https://static001.geekbang.org/account/avatar/00/10/64/15/9c9ca35c.jpg","comment_is_top":false,"comment_ctime":1584846663,"is_pvip":false,"replies":[{"id":"73895","content":"谢谢🙏","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1585019786,"ip_address":"","comment_id":192323,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1584846663","product_id":100035801,"comment_content":"“能使用单体解决的问题，就不要采用分布式。不能为了技术而技术，采用分布式固然可以分流用户请求，提高系统的响应能力，但同样也带来了复杂性。软件开发最终的目的是商业利益。罗马城不是一天就建立起来的。架构的工作应该是阶段性，解决阶段性系统的复杂性。”  理性、理智的观点！说得非常好👌","like_count":0,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":488370,"discussion_content":"谢谢🙏","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585019786,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":186484,"user_name":"来","can_delete":false,"product_type":"c1","uid":1048433,"ip_address":"","ucode":"2612C1D888ED03","user_header":"https://static001.geekbang.org/account/avatar/00/0f/ff/71/c492b7fa.jpg","comment_is_top":false,"comment_ctime":1583852048,"is_pvip":true,"replies":[{"id":"72202","content":"👍","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1584019845,"ip_address":"","comment_id":186484,"utype":1}],"discussion_count":1,"race_medal":1,"score":"1583852048","product_id":100035801,"comment_content":"缓存，异步，水平扩展，实现高并发系统的三板斧。缓存，异步这两种方法是尽可能的提高单台服务器的处理能力，水平扩展则是可以让更多的服务器来一起处理请求。","like_count":0,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":486775,"discussion_content":"👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584019845,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":181561,"user_name":"kevin","can_delete":false,"product_type":"c1","uid":1199192,"ip_address":"","ucode":"918EFC033B1630","user_header":"https://static001.geekbang.org/account/avatar/00/12/4c/58/25152fa9.jpg","comment_is_top":false,"comment_ctime":1582559679,"is_pvip":false,"replies":[{"id":"71106","content":"赞","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1583115379,"ip_address":"","comment_id":181561,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1582559679","product_id":100035801,"comment_content":"高并发系统的通用设计方式：<br>1. 扩展能力（通过硬件能力的提升单机负载能力或者是通过叠加机器将请求分发到不同的机器上来扩大整体的能力）；<br>2. 缓存，缓存通常是为了解决数据存储中间压力和瓶颈，将数据放到缓存中，减少对存储的压力，提高本身的能力；<br>3. 对于一些写操作的场景增加异步的处理方式，减少用户同步等待的时间；","like_count":0,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":485034,"discussion_content":"赞","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1583115379,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":170801,"user_name":"学习学个屁","can_delete":false,"product_type":"c1","uid":1049017,"ip_address":"","ucode":"DF2D61E6FB2FCE","user_header":"https://static001.geekbang.org/account/avatar/00/10/01/b9/73435279.jpg","comment_is_top":false,"comment_ctime":1578726444,"is_pvip":false,"replies":[{"id":"66199","content":"是这个路径","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1578736831,"ip_address":"","comment_id":170801,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1578726444","product_id":100035801,"comment_content":"单体<br>单体到单体集群<br>单体到微服务集群","like_count":0,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":481116,"discussion_content":"是这个路径","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578736831,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2436100,"avatar":"https://static001.geekbang.org/account/avatar/00/25/2c/04/a4115813.jpg","nickname":"无懈可击","note":"","ucode":"35F4FA7F71094D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":348131,"discussion_content":"现在只要不是老项目基本都是微服务或者伪微服务了，否则根本留不住人或者团队不支持，都会说技术这么落后","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1612435106,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":166241,"user_name":"李心宇🦉","can_delete":false,"product_type":"c1","uid":1208306,"ip_address":"","ucode":"C381CA80170D5B","user_header":"https://static001.geekbang.org/account/avatar/00/12/6f/f2/1f77b0bd.jpg","comment_is_top":false,"comment_ctime":1577421884,"is_pvip":false,"replies":[{"id":"63462","content":"可以用长连接","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1577492338,"ip_address":"","comment_id":166241,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1577421884","product_id":100035801,"comment_content":"老师请问，12306异步生成订单的例子里，您没有讲解创建订单的结果如何通知客户端呢？另外，长连接或者轮训这两种方式也会增加服务端开销，为何异步＋轮训比同步要好，希望老师给描述一个具体的例子，多谢。","like_count":0,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":479453,"discussion_content":"可以用长连接","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577492338,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":164406,"user_name":"Daniel","can_delete":false,"product_type":"c1","uid":1767163,"ip_address":"","ucode":"C081ADEFF02C2A","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/jA97yib7VetVLH5vAU7Q1OAKFiaXyDhibBRFYDKdOxhNMOEHmNlACOzqyLjR1gtlribyRicFc0ClIyx1o0ld7WOyMNw/132","comment_is_top":false,"comment_ctime":1576980157,"is_pvip":false,"replies":[{"id":"63003","content":"加油💪","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1577196477,"ip_address":"","comment_id":164406,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1576980157","product_id":100035801,"comment_content":"打卡","like_count":0,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":478751,"discussion_content":"加油💪","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577196477,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":164130,"user_name":"威特","can_delete":false,"product_type":"c1","uid":1627041,"ip_address":"","ucode":"A04D08D3859792","user_header":"https://static001.geekbang.org/account/avatar/00/18/d3/a1/e5a3ce79.jpg","comment_is_top":false,"comment_ctime":1576892618,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1576892618","product_id":100035801,"comment_content":"我们的系统现在也在进行架构升级，之前也是堆在一起的单点系统，现在业务激增需要拆分各个服务模块，进行微服务和分布式部署。由于现有系统还在跑业务，需要双系统运运行写双库，有时两个库的数据同步延迟特别长，这种情况该咋办","like_count":0},{"had_liked":false,"id":163880,"user_name":"Daniel","can_delete":false,"product_type":"c1","uid":1767163,"ip_address":"","ucode":"C081ADEFF02C2A","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/jA97yib7VetVLH5vAU7Q1OAKFiaXyDhibBRFYDKdOxhNMOEHmNlACOzqyLjR1gtlribyRicFc0ClIyx1o0ld7WOyMNw/132","comment_is_top":false,"comment_ctime":1576817893,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1576817893","product_id":100035801,"comment_content":"并发+MQ+数据仓库，怎么保证幂等","like_count":0},{"had_liked":false,"id":160987,"user_name":"技术修行者","can_delete":false,"product_type":"c1","uid":1013147,"ip_address":"","ucode":"28CA41A1214D6B","user_header":"https://static001.geekbang.org/account/avatar/00/0f/75/9b/611e74ab.jpg","comment_is_top":false,"comment_ctime":1576073349,"is_pvip":true,"discussion_count":0,"race_medal":5,"score":"1576073349","product_id":100035801,"comment_content":"开篇的理论较多些，可以理解。<br>构建高并发系统的三种套路：<br>1. 横向扩展<br>2. 缓存<br>3. 异步<br>上面每一种方法都有很多需要仔细考虑的事情。<br>在开始设计系统的时候，没有必要在流量很小的情况下就将系统设计的特别复杂，但是这并不代表我们可以不了解复杂系统是怎么设计的，因为架构是需要不断演进的。","like_count":0},{"had_liked":false,"id":155850,"user_name":"梅子黄时雨","can_delete":false,"product_type":"c1","uid":1015938,"ip_address":"","ucode":"9F788D09C2E9E7","user_header":"https://static001.geekbang.org/account/avatar/00/0f/80/82/3c21b30c.jpg","comment_is_top":false,"comment_ctime":1574767019,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1574767019","product_id":100035801,"comment_content":"横向扩展做成了集群，就会出现session如何存储的问题，我们当初是使用了tomcat的复制功能，后来又进一步做成了用独立的组件来存放。","like_count":0},{"had_liked":false,"id":145876,"user_name":"无形","can_delete":false,"product_type":"c1","uid":1016889,"ip_address":"","ucode":"B740E2A68A17A5","user_header":"https://static001.geekbang.org/account/avatar/00/0f/84/39/c8772466.jpg","comment_is_top":false,"comment_ctime":1572397913,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1572397913","product_id":100035801,"comment_content":"横向扩展，数据一致性如何保证？<br>加缓存，缓存失效怎么办？缓存穿透如何处理？","like_count":0},{"had_liked":false,"id":142466,"user_name":"FreeMason","can_delete":false,"product_type":"c1","uid":1340120,"ip_address":"","ucode":"3D58AC2F9AB345","user_header":"https://static001.geekbang.org/account/avatar/00/14/72/d8/9eedbc5e.jpg","comment_is_top":false,"comment_ctime":1571373949,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1571373949","product_id":100035801,"comment_content":"具体问题具体分析，横向扩展、纵向扩展、缓存、异步等都只是解决问题的思想，分布式、分库分表、限流、本地缓存、服务器缓存、多级缓存、MQ 队列异步、Swoole 等都只是手段<br>既然目的是解决业务项目中实际存在滴问题，解决问题的最好方案不就是简单吗？<br>在能解决问题的情况下，考虑低复杂性、高维护性、高扩展性、低成本，总之越简单越好<br><br>","like_count":0},{"had_liked":false,"id":141554,"user_name":"下个目标45k","can_delete":false,"product_type":"c1","uid":1066508,"ip_address":"","ucode":"193BA8C3AA9A61","user_header":"https://static001.geekbang.org/account/avatar/00/10/46/0c/773ba2f3.jpg","comment_is_top":false,"comment_ctime":1571190345,"is_pvip":false,"replies":[{"id":"54678","content":"是的~","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1571193758,"ip_address":"","comment_id":141554,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1571190345","product_id":100035801,"comment_content":"过早优化只能是浪费资源和时间 , 作为一个技术人员应该对系统的承载能力有清晰的认识才是最重要的.","like_count":0,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":470796,"discussion_content":"是的~","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571193758,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":140566,"user_name":"123O321","can_delete":false,"product_type":"c1","uid":1698858,"ip_address":"","ucode":"F365A630A2E1DA","user_header":"","comment_is_top":false,"comment_ctime":1571005752,"is_pvip":false,"replies":[{"id":"54329","content":"额 11年，学海无涯苦作舟","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1571010058,"ip_address":"","comment_id":140566,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1571005752","product_id":100035801,"comment_content":"大牛,你用了多少年到今天这个水平?","like_count":0,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":470446,"discussion_content":"额 11年，学海无涯苦作舟","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571010058,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":139300,"user_name":"行则将至","can_delete":false,"product_type":"c1","uid":1542987,"ip_address":"","ucode":"DB972F2DF059C4","user_header":"https://static001.geekbang.org/account/avatar/00/17/8b/4b/fa52d222.jpg","comment_is_top":false,"comment_ctime":1570606447,"is_pvip":false,"replies":[{"id":"53784","content":"可以，那样你的库存就放在缓存里，只能放在单一缓存节点上（否则要到多个节点扣减库存，会有一致性问题），那么这个缓存节点可能是瓶颈","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1570665506,"ip_address":"","comment_id":139300,"utype":1}],"discussion_count":3,"race_medal":1,"score":"1570606447","product_id":100035801,"comment_content":"老师，秒杀活动。用户点击秒杀，先是扣减缓存，然后设置超时时间，用户在规定时间内没有支付，就恢复缓存的库存。用户支付成功，异步扣减数据库的库存。这样的流程有问题吗？<br>","like_count":0,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":469885,"discussion_content":"可以，那样你的库存就放在缓存里，只能放在单一缓存节点上（否则要到多个节点扣减库存，会有一致性问题），那么这个缓存节点可能是瓶颈","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1570665506,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2344609,"avatar":"https://static001.geekbang.org/account/avatar/00/23/c6/a1/3bdcde91.jpg","nickname":"向陽花开花向陽🌸","note":"","ucode":"9FDD01BE0E42CD","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":334110,"discussion_content":"如果使用redis做缓存，并且使用哨兵机制，那这个一致性问题还需要考虑吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1607744676,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1542987,"avatar":"https://static001.geekbang.org/account/avatar/00/17/8b/4b/fa52d222.jpg","nickname":"行则将至","note":"","ucode":"DB972F2DF059C4","race_medal":1,"user_type":1,"is_pvip":false},"reply_author":{"id":2344609,"avatar":"https://static001.geekbang.org/account/avatar/00/23/c6/a1/3bdcde91.jpg","nickname":"向陽花开花向陽🌸","note":"","ucode":"9FDD01BE0E42CD","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":334621,"discussion_content":"一致性就不用考虑了。但还是要考虑写入的瓶颈。因为哨兵模式也只有一台redis对外提供写服务。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1607918962,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":334110,"ip_address":""},"score":334621,"extra":""}]}]},{"had_liked":false,"id":138215,"user_name":"匆匆","can_delete":false,"product_type":"c1","uid":1685532,"ip_address":"","ucode":"747023F7281B78","user_header":"https://static001.geekbang.org/account/avatar/00/19/b8/1c/d8cbe364.jpg","comment_is_top":false,"comment_ctime":1570102645,"is_pvip":false,"replies":[{"id":"53187","content":"调用方一般是有资源限制的，比方说调用方会有一个线程池，或者有内存限制。那么，正常情况下调用完成之后资源可以释放给后面的调用使用。一旦出现慢请求，调用资源不释放，调用方就会资源占满。这样可能整个调用链路上的多个服务都会受影响，甚至影响整体服务","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1570148219,"ip_address":"","comment_id":138215,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1570102645","product_id":100035801,"comment_content":"同步调用代表调用方要阻塞等待被调用方法中的逻辑执行完成。这种方式下，当被调用方法响应时间较长时，会造成调用方长久的阻塞，在高并发下会造成整体系统性能下降甚至发生雪崩。 <br>唐老师，请问这种情况为什么会发生雪崩？","like_count":0,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":469439,"discussion_content":"调用方一般是有资源限制的，比方说调用方会有一个线程池，或者有内存限制。那么，正常情况下调用完成之后资源可以释放给后面的调用使用。一旦出现慢请求，调用资源不释放，调用方就会资源占满。这样可能整个调用链路上的多个服务都会受影响，甚至影响整体服务","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1570148219,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":138113,"user_name":"longslee","can_delete":false,"product_type":"c1","uid":1465986,"ip_address":"","ucode":"C24E32E5B1B6F5","user_header":"https://static001.geekbang.org/account/avatar/00/16/5e/82/438c8534.jpg","comment_is_top":false,"comment_ctime":1570026755,"is_pvip":false,"replies":[{"id":"53120","content":"是的，项目初期，数据量没有上来，确实没必要做分库分表","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1570060976,"ip_address":"","comment_id":138113,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1570026755","product_id":100035801,"comment_content":"以前有个项目，不知为何突然一上来就要求分库分表，然而有2个问题，一是切分的规则大多是路由切分，各紧密业务被切的支离破碎，比如一个地区的相关表分在了不同的库上- -，2是维护人员又不是新型思维，出了问题去查数据的时候，可酸爽了要查遍各个库","like_count":0,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":469392,"discussion_content":"是的，项目初期，数据量没有上来，确实没必要做分库分表","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1570060976,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":138112,"user_name":"longslee","can_delete":false,"product_type":"c1","uid":1465986,"ip_address":"","ucode":"C24E32E5B1B6F5","user_header":"https://static001.geekbang.org/account/avatar/00/16/5e/82/438c8534.jpg","comment_is_top":false,"comment_ctime":1570025968,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1570025968","product_id":100035801,"comment_content":"哈哈哈，老师你好可能我们项目比较low，客户非得配给我们一个分布式的Postgresql，然而传统业务思想还是在数据库应用上，准确来说是从Oracle的SQL过渡过来，那么在分布式数据库上跑那些SQL尤其是聚合，可想而知。","like_count":0},{"had_liked":false,"id":137094,"user_name":"旅途","can_delete":false,"product_type":"c1","uid":1212902,"ip_address":"","ucode":"5022477E8E9441","user_header":"https://static001.geekbang.org/account/avatar/00/12/81/e6/6cafed37.jpg","comment_is_top":false,"comment_ctime":1569595062,"is_pvip":false,"replies":[{"id":"52806","content":"其实就是请求放入消息队列后就响应用户，然后再通过通知的方式来通知用户","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1569739604,"ip_address":"","comment_id":137094,"utype":1}],"discussion_count":8,"race_medal":0,"score":"1569595062","product_id":100035801,"comment_content":"<br>问一下 老师  请求放入消息队列 然后异步返回 这个http协议能做到吗","like_count":0,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":468938,"discussion_content":"其实就是请求放入消息队列后就响应用户，然后再通过通知的方式来通知用户","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1569739604,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1208222,"avatar":"https://static001.geekbang.org/account/avatar/00/12/6f/9e/5c41ff1c.jpg","nickname":"蓝莲花","note":"","ucode":"69CA73B9BAEBE3","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":23131,"discussion_content":"HTTP不能，如果用HTTP，一般是提交返回后，之后采用轮询的方式定期去服务器查询状态，看任务是否执行完成了。（轮询里面又分为长轮询和短轮询，根据实际情况取舍）","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1569758172,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1212902,"avatar":"https://static001.geekbang.org/account/avatar/00/12/81/e6/6cafed37.jpg","nickname":"旅途","note":"","ucode":"5022477E8E9441","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1208222,"avatar":"https://static001.geekbang.org/account/avatar/00/12/6f/9e/5c41ff1c.jpg","nickname":"蓝莲花","note":"","ucode":"69CA73B9BAEBE3","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":31531,"discussion_content":"感谢！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1570934488,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":23131,"ip_address":""},"score":31531,"extra":""},{"author":{"id":1212902,"avatar":"https://static001.geekbang.org/account/avatar/00/12/81/e6/6cafed37.jpg","nickname":"旅途","note":"","ucode":"5022477E8E9441","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1208222,"avatar":"https://static001.geekbang.org/account/avatar/00/12/6f/9e/5c41ff1c.jpg","nickname":"蓝莲花","note":"","ucode":"69CA73B9BAEBE3","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":31538,"discussion_content":"一直轮询这个也太复杂了吧，还不如不异步了呢","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1570934882,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":23131,"ip_address":""},"score":31538,"extra":""}]},{"author":{"id":1342487,"avatar":"https://static001.geekbang.org/account/avatar/00/14/7c/17/97419c7e.jpg","nickname":"悟·空","note":"","ucode":"0EB3BD9377D9EF","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":22263,"discussion_content":"消息队列不是放的请求本身吧？是不是可以理解为业务数据，从通信协议里拿到的数据，当业务数据入队后，服务端直接响应业务请求，这样就不用等业务数据处理后再返回了。这里的异步我理解为是业务处理响应，和通信协议无关，不知道是否有出入，希望交流！","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1569603598,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1212902,"avatar":"https://static001.geekbang.org/account/avatar/00/12/81/e6/6cafed37.jpg","nickname":"旅途","note":"","ucode":"5022477E8E9441","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1342487,"avatar":"https://static001.geekbang.org/account/avatar/00/14/7c/17/97419c7e.jpg","nickname":"悟·空","note":"","ucode":"0EB3BD9377D9EF","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":31534,"discussion_content":"服务端直接响应，那等服务处理完了之后是怎么返回的呢","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1570934555,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":22263,"ip_address":""},"score":31534,"extra":""},{"author":{"id":1196234,"avatar":"https://static001.geekbang.org/account/avatar/00/12/40/ca/1313a90b.jpg","nickname":"退役的球童","note":"","ucode":"CD5157830D9606","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1212902,"avatar":"https://static001.geekbang.org/account/avatar/00/12/81/e6/6cafed37.jpg","nickname":"旅途","note":"","ucode":"5022477E8E9441","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":53956,"discussion_content":"这个就是之前那位朋友说的，要么客户端主动轮询拉（短连接，ajax），要么客户端等着服务端推（长连接，比如web socket）","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574241206,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":31534,"ip_address":""},"score":53956,"extra":""}]},{"author":{"id":1212902,"avatar":"https://static001.geekbang.org/account/avatar/00/12/81/e6/6cafed37.jpg","nickname":"旅途","note":"","ucode":"5022477E8E9441","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":31536,"discussion_content":"老师，还是没懂，服务器把业务异步处理完后是怎么返回给调用者的呢","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1570934842,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":136331,"user_name":"_","can_delete":false,"product_type":"c1","uid":1546600,"ip_address":"","ucode":"4D52F6A84CB5DB","user_header":"https://static001.geekbang.org/account/avatar/00/17/99/68/40ff2d7e.jpg","comment_is_top":false,"comment_ctime":1569410330,"is_pvip":false,"replies":[{"id":"52271","content":"多种商品都可以写入队列，在队列处理的时候查询不同商品的库存就好了。没有买就给一个超时的时间然后解除锁定的库存","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1569421787,"ip_address":"","comment_id":136331,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1569410330","product_id":100035801,"comment_content":"那你这种方案对多种商品怎么处理呢？如果用户最后没有买又要怎么处理呢？","like_count":0,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":468574,"discussion_content":"多种商品都可以写入队列，在队列处理的时候查询不同商品的库存就好了。没有买就给一个超时的时间然后解除锁定的库存","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1569421787,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":136213,"user_name":"黄小咸","can_delete":false,"product_type":"c1","uid":1324680,"ip_address":"","ucode":"FBEA89F7E7D556","user_header":"https://static001.geekbang.org/account/avatar/00/14/36/88/7ed30552.jpg","comment_is_top":false,"comment_ctime":1569385436,"is_pvip":true,"replies":[{"id":"52279","content":"是的呢~","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1569421939,"ip_address":"","comment_id":136213,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1569385436","product_id":100035801,"comment_content":"打卡，高并发系统的演进应该循序渐进，架构不应该脱离业务","like_count":0,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":468509,"discussion_content":"是的呢~","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1569421939,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":135636,"user_name":"Gojustforfun","can_delete":false,"product_type":"c1","uid":1187021,"ip_address":"","ucode":"7513A40F27344F","user_header":"https://static001.geekbang.org/account/avatar/00/12/1c/cd/8d552516.jpg","comment_is_top":false,"comment_ctime":1569232036,"is_pvip":true,"replies":[{"id":"52025","content":"应该说分布式系统是为了解决高并发而做的","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1569239991,"ip_address":"","comment_id":135636,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1569232036","product_id":100035801,"comment_content":"这么看来，高并发系统是分布式系统的子集？","like_count":0,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":468283,"discussion_content":"应该说分布式系统是为了解决高并发而做的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1569239991,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1359701,"avatar":"https://static001.geekbang.org/account/avatar/00/14/bf/55/198c6104.jpg","nickname":"小伟","note":"","ucode":"124953423491E2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":22897,"discussion_content":"分布式是手段，解决高并发问题是目的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1569725314,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":135462,"user_name":"大雄","can_delete":false,"product_type":"c1","uid":1307188,"ip_address":"","ucode":"45B96AF48DF134","user_header":"https://static001.geekbang.org/account/avatar/00/13/f2/34/03282f4d.jpg","comment_is_top":false,"comment_ctime":1569169531,"is_pvip":false,"replies":[{"id":"51946","content":"python说实话我了解的不多，不敢妄自评论。不过语言只是工具，没有适不适合高并发一说，只是有适合的场景，比如java就比较适合做业务逻辑复杂的前端应用，c++就适合做一些基础的组件，其它如php，golang都是比较适合的语言，在大厂中也有广泛应用","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1569199665,"ip_address":"","comment_id":135462,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1569169531","product_id":100035801,"comment_content":"唐老师好，感谢您的讲解。我想请教下高并发与编程语言相关度高么，是否有适合或不适合高并发的语言一说？您能否介绍下python语言在高并发领域的优缺点或者前景呢？java语言是高并发的最优选择么？多谢！","like_count":0,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":468205,"discussion_content":"python说实话我了解的不多，不敢妄自评论。不过语言只是工具，没有适不适合高并发一说，只是有适合的场景，比如java就比较适合做业务逻辑复杂的前端应用，c++就适合做一些基础的组件，其它如php，golang都是比较适合的语言，在大厂中也有广泛应用","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1569199665,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1886331,"avatar":"https://static001.geekbang.org/account/avatar/00/1c/c8/7b/153181d7.jpg","nickname":"夜辉","note":"","ucode":"9421385F51FF9E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":363985,"discussion_content":"应该是java就比较适合做业务逻辑复杂的后端应用吧","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1617340606,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":135434,"user_name":"郝炎峰","can_delete":false,"product_type":"c1","uid":1122368,"ip_address":"","ucode":"84F0392C96225A","user_header":"https://static001.geekbang.org/account/avatar/00/11/20/40/aad3cbeb.jpg","comment_is_top":false,"comment_ctime":1569159943,"is_pvip":false,"replies":[{"id":"51920","content":"其实一个意思：）","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1569162516,"ip_address":"","comment_id":135434,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1569159943","product_id":100035801,"comment_content":"&quot;缓存&quot;这个中文翻译跟台湾的翻译&quot;快取&quot;比差多了","like_count":0,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":468191,"discussion_content":"其实一个意思：）","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1569162516,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":135274,"user_name":"helloworld","can_delete":false,"product_type":"c1","uid":1015754,"ip_address":"","ucode":"00DF2FEC58D2E6","user_header":"https://static001.geekbang.org/account/avatar/00/0f/7f/ca/ea85bfdd.jpg","comment_is_top":false,"comment_ctime":1569115503,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1569115503","product_id":100035801,"comment_content":"横向扩容，缓存，异步，支撑高并发系统的三大法宝。打卡02。","like_count":0},{"had_liked":false,"id":134962,"user_name":"Cola_","can_delete":false,"product_type":"c1","uid":1264718,"ip_address":"","ucode":"99996D04CA4171","user_header":"https://static001.geekbang.org/account/avatar/00/13/4c/4e/91267714.jpg","comment_is_top":false,"comment_ctime":1568963248,"is_pvip":false,"replies":[{"id":"51804","content":"是的~","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1568974671,"ip_address":"","comment_id":134962,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1568963248","product_id":100035801,"comment_content":"scale-up scale-out 缓存 异步处理都是处理高并发的指导思想<br>实际运用中要结合业务和实际情况做更精细的计划","like_count":0,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":467979,"discussion_content":"是的~","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1568974671,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":134706,"user_name":"刺客","can_delete":false,"product_type":"c1","uid":1098916,"ip_address":"","ucode":"607ABD2F2B5898","user_header":"https://static001.geekbang.org/account/avatar/00/10/c4/a4/b9b12d71.jpg","comment_is_top":false,"comment_ctime":1568899822,"is_pvip":true,"replies":[{"id":"51700","content":"限流降级也很有用，后面课程会有介绍的","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1568935716,"ip_address":"","comment_id":134706,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1568899822","product_id":100035801,"comment_content":"这三种方法可以在做方案设计时灵活地运用，但它不是具体实施的方案，而是三种思想，在实际运用中会千变万化。<br><br>以前了解的高并发三板斧，缓存，限流，降级，今天又学习了新知识","like_count":0,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":467870,"discussion_content":"限流降级也很有用，后面课程会有介绍的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1568935716,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":134696,"user_name":"y3","can_delete":false,"product_type":"c1","uid":1128084,"ip_address":"","ucode":"C93F8EC2AAACF6","user_header":"https://static001.geekbang.org/account/avatar/00/11/36/94/5aecb0ef.jpg","comment_is_top":false,"comment_ctime":1568896815,"is_pvip":false,"replies":[{"id":"51699","content":"是的，架构要随着场景变化","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1568935683,"ip_address":"","comment_id":134696,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1568896815","product_id":100035801,"comment_content":"唐老师讲得很好，在学习本次课程后，才意识到。做架构没有银弹。","like_count":0,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":467866,"discussion_content":"是的，架构要随着场景变化","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1568935683,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":134654,"user_name":"路人甲","can_delete":false,"product_type":"c1","uid":1480119,"ip_address":"","ucode":"B720984454AFAF","user_header":"https://static001.geekbang.org/account/avatar/00/16/95/b7/15e157ec.jpg","comment_is_top":false,"comment_ctime":1568886823,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1568886823","product_id":100035801,"comment_content":"学习ing...","like_count":0},{"had_liked":false,"id":134640,"user_name":"高平","can_delete":false,"product_type":"c1","uid":1181186,"ip_address":"","ucode":"D27CFA5330352F","user_header":"https://static001.geekbang.org/account/avatar/00/12/06/02/bdcce5cd.jpg","comment_is_top":false,"comment_ctime":1568884608,"is_pvip":false,"replies":[{"id":"51701","content":"说的没错","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1568935724,"ip_address":"","comment_id":134640,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1568884608","product_id":100035801,"comment_content":"系统设计，就是化繁为简的过程。一切都是为了业务服务","like_count":0,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":467839,"discussion_content":"说的没错","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1568935724,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":134623,"user_name":"la la la","can_delete":false,"product_type":"c1","uid":1188503,"ip_address":"","ucode":"C039AC398EAE07","user_header":"https://static001.geekbang.org/account/avatar/00/12/22/97/708e590a.jpg","comment_is_top":false,"comment_ctime":1568881202,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1568881202","product_id":100035801,"comment_content":"打卡学习","like_count":0},{"had_liked":false,"id":134585,"user_name":"习惯说","can_delete":false,"product_type":"c1","uid":1235385,"ip_address":"","ucode":"5429FAF60E4FBA","user_header":"https://static001.geekbang.org/account/avatar/00/12/d9/b9/e21b699a.jpg","comment_is_top":false,"comment_ctime":1568873473,"is_pvip":false,"replies":[{"id":"51703","content":"😄","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1568935741,"ip_address":"","comment_id":134585,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1568873473","product_id":100035801,"comment_content":"等待他的只有灭亡，灭亡哥🤪","like_count":0,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":467816,"discussion_content":"😄","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1568935741,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":134567,"user_name":"guoguo 👻","can_delete":false,"product_type":"c1","uid":1025664,"ip_address":"","ucode":"874B0A1E0F7DEA","user_header":"https://static001.geekbang.org/account/avatar/00/0f/a6/80/6ff7ea5f.jpg","comment_is_top":false,"comment_ctime":1568867705,"is_pvip":false,"replies":[{"id":"51702","content":"谢谢","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1568935735,"ip_address":"","comment_id":134567,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1568867705","product_id":100035801,"comment_content":"感觉不错 期待后面的内容","like_count":0,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":467811,"discussion_content":"谢谢","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1568935735,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":134552,"user_name":"小小征","can_delete":false,"product_type":"c1","uid":1358930,"ip_address":"","ucode":"335380EFE0FC61","user_header":"https://static001.geekbang.org/account/avatar/00/14/bc/52/52745d32.jpg","comment_is_top":false,"comment_ctime":1568863746,"is_pvip":false,"replies":[{"id":"51704","content":"这个……是小编的功劳😄","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1568935755,"ip_address":"","comment_id":134552,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1568863746","product_id":100035801,"comment_content":"老师的画图工具是什么啊，感觉很好看啊。","like_count":0,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":467801,"discussion_content":"这个……是小编的功劳😄","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1568935755,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":134526,"user_name":"马什么梅","can_delete":false,"product_type":"c1","uid":1665192,"ip_address":"","ucode":"251B100AC229EE","user_header":"https://static001.geekbang.org/account/avatar/00/19/68/a8/1fa41264.jpg","comment_is_top":false,"comment_ctime":1568859094,"is_pvip":true,"replies":[{"id":"51708","content":"一定会有用的","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1568935962,"ip_address":"","comment_id":134526,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1568859094","product_id":100035801,"comment_content":"培训中，长长见识，希望以后可以用到这些东西","like_count":0,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":467788,"discussion_content":"一定会有用的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1568935962,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":134519,"user_name":"老王","can_delete":false,"product_type":"c1","uid":1010108,"ip_address":"","ucode":"7672E14FD99164","user_header":"https://static001.geekbang.org/account/avatar/00/0f/69/bc/defd41a9.jpg","comment_is_top":false,"comment_ctime":1568857755,"is_pvip":false,"replies":[{"id":"51706","content":"其实这几个概念是不同层次的，同步异步关注消息通信机制，阻塞非阻塞关注的是程序如何处理结果。","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1568935941,"ip_address":"","comment_id":134519,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1568857755","product_id":100035801,"comment_content":"同步异步概念的解释不准确，实际解释的是堵塞非堵塞","like_count":0,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":467785,"discussion_content":"其实这几个概念是不同层次的，同步异步关注消息通信机制，阻塞非阻塞关注的是程序如何处理结果。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1568935941,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":134480,"user_name":"fomy","can_delete":false,"product_type":"c1","uid":1125834,"ip_address":"","ucode":"CD87EA03B1F327","user_header":"https://static001.geekbang.org/account/avatar/00/11/2d/ca/02b0e397.jpg","comment_is_top":false,"comment_ctime":1568854271,"is_pvip":false,"replies":[{"id":"51710","content":"没错，在没有准备好服务化的时候，单体架构会更简单","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1568936023,"ip_address":"","comment_id":134480,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1568854271","product_id":100035801,"comment_content":"过早引入微服务架构，造成了系统复杂度。系统拆分粒度太细，需要解决分布式事务问题。但是分布式事务的解决方案无疑增加系统复杂度，最后被迫做系统的整合。","like_count":0,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":467764,"discussion_content":"没错，在没有准备好服务化的时候，单体架构会更简单","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1568936023,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":134456,"user_name":"旭东(Frank)","can_delete":false,"product_type":"c1","uid":1024486,"ip_address":"","ucode":"176FA629800062","user_header":"https://static001.geekbang.org/account/avatar/00/0f/a1/e6/50da1b2d.jpg","comment_is_top":false,"comment_ctime":1568849810,"is_pvip":false,"replies":[{"id":"51705","content":"是的，异步也要处理结果的","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1568935798,"ip_address":"","comment_id":134456,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1568849810","product_id":100035801,"comment_content":"很多人用异步，都是调完直接撒手不关心了，都没有回调方法。这个真是对异步的特大误解。","like_count":0,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":467756,"discussion_content":"是的，异步也要处理结果的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1568935798,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":134396,"user_name":"W。","can_delete":false,"product_type":"c1","uid":1470784,"ip_address":"","ucode":"E906B1B065BCDC","user_header":"https://static001.geekbang.org/account/avatar/00/16/71/40/a363b799.jpg","comment_is_top":false,"comment_ctime":1568818692,"is_pvip":false,"replies":[{"id":"51527","content":"是语音和文字的","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1568849295,"ip_address":"","comment_id":134396,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1568818692","product_id":100035801,"comment_content":"这门课是视频讲，还是就这样听语音呢","like_count":0,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":467728,"discussion_content":"是语音和文字的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1568849295,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":134325,"user_name":"。不是结尾","can_delete":false,"product_type":"c1","uid":1670193,"ip_address":"","ucode":"4C77F119A1002E","user_header":"https://static001.geekbang.org/account/avatar/00/19/7c/31/bd1b6a89.jpg","comment_is_top":false,"comment_ctime":1568806063,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1568806063","product_id":100035801,"comment_content":"感觉来看这个的, 应该都是项目中遇到高并发的问题","like_count":0},{"had_liked":false,"id":134319,"user_name":"qitao","can_delete":false,"product_type":"c1","uid":1365714,"ip_address":"","ucode":"EEB88C46D6DAF1","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLamEuaeZHo2mxbianvrL4ZMlgthjj61zib3lHerp739olBJHVa2QJVxvQW6dgf0bS6iaC4GIzt4O8jA/132","comment_is_top":false,"comment_ctime":1568805339,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1568805339","product_id":100035801,"comment_content":"第一天第二次打卡","like_count":0},{"had_liked":false,"id":134294,"user_name":"王炸","can_delete":false,"product_type":"c1","uid":1317921,"ip_address":"","ucode":"2D84F2B35284A1","user_header":"https://static001.geekbang.org/account/avatar/00/14/1c/21/9d5e4bef.jpg","comment_is_top":false,"comment_ctime":1568796572,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1568796572","product_id":100035801,"comment_content":"没毛病，就这么点东西，缓存异步外加监控降级限流什么的。其实内容不多。","like_count":0},{"had_liked":false,"id":134206,"user_name":"丁乐洪","can_delete":false,"product_type":"c1","uid":1264392,"ip_address":"","ucode":"549CE57AB20B49","user_header":"https://static001.geekbang.org/account/avatar/00/13/4b/08/52954cd7.jpg","comment_is_top":false,"comment_ctime":1568775317,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1568775317","product_id":100035801,"comment_content":"单体系统，更新和部署比较麻烦，运维比较简单<br>微服务，更新和部署比较敏捷，运维比较麻烦<br>公司架构是运维是与技术开发是独立的部门，微服务的监控问题还是没有很好解决。<br><br>微服务的监控报警这些功能没有归属，功能升级没人关心，线上出问题，救火比较多。<br><br>老师有没有对公司架构有啥建议，不过改公司部门架构不好推送","like_count":0,"discussions":[{"author":{"id":1105161,"avatar":"https://static001.geekbang.org/account/avatar/00/10/dd/09/feca820a.jpg","nickname":"helloworld","note":"","ucode":"1EECCA0F43E278","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":18656,"discussion_content":"微服务架构就应该由开发部门自己管理，所谓自己生的孩子当然自己最懂。运维部门就做点网络、服务器、操作系统等级别的基础运维就行了，他们也没有技术能力去维护复杂的系统。所以我的观点是，应用运维的活由开发人员自己干，这也是devops的一种理念吧","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1569075734,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":134200,"user_name":"nick","can_delete":false,"product_type":"c1","uid":1193298,"ip_address":"","ucode":"12A522100DE574","user_header":"https://static001.geekbang.org/account/avatar/00/12/35/52/bc63d1ef.jpg","comment_is_top":false,"comment_ctime":1568773628,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1568773628","product_id":100035801,"comment_content":"如何合理的设计数据库拆分，解决联表、跨库查询等的问题","like_count":0},{"had_liked":false,"id":134182,"user_name":"Dale","can_delete":false,"product_type":"c1","uid":1010056,"ip_address":"","ucode":"DD4717C06E417D","user_header":"https://static001.geekbang.org/account/avatar/00/0f/69/88/528442b0.jpg","comment_is_top":false,"comment_ctime":1568771661,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1568771661","product_id":100035801,"comment_content":"如今在云计算时代，系统大都是分布式服务，采用横向扩展，多个地域服务分布，大大提高系统并发性能","like_count":0},{"had_liked":false,"id":134170,"user_name":"夜空中最亮的星","can_delete":false,"product_type":"c1","uid":1267566,"ip_address":"","ucode":"ADC3E7B6789955","user_header":"https://static001.geekbang.org/account/avatar/00/13/57/6e/b6795c44.jpg","comment_is_top":false,"comment_ctime":1568769810,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1568769810","product_id":100035801,"comment_content":"已学习<br>","like_count":0},{"had_liked":false,"id":134169,"user_name":"Lugyedo","can_delete":false,"product_type":"c1","uid":1011793,"ip_address":"","ucode":"EB5E456B638E70","user_header":"https://static001.geekbang.org/account/avatar/00/0f/70/51/f1825adb.jpg","comment_is_top":false,"comment_ctime":1568769759,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1568769759","product_id":100035801,"comment_content":"scale-out、缓存、异步在现在的分布式系统中都是常用的方法了，关键是怎么这三个协调好","like_count":0}]}