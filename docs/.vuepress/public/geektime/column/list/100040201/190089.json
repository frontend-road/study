{"id":190089,"title":"24 | 负载均衡架构：如何用10行代码实现一个负载均衡服务？","content":"<p>负载均衡是互联网系统架构中必不可少的一个技术。通过负载均衡，可以将高并发的用户请求分发到多台应用服务器组成的一个服务器集群上，利用更多的服务器资源处理高并发下的计算压力。</p><p>那么负载均衡是如何实现的，如何将不同的请求分发到不同的服务器上呢？</p><p>早期，实现负载均衡需要使用专门的负载均衡硬件设备，这些硬件通常比较昂贵。随着互联网的普及，越来越多的企业需要部署自己的互联网应用系统，而这些专用的负载均衡硬件对他们来说成本太高，于是出现了各种通过软件实现负载均衡的技术方案。</p><h2>HTTP重定向负载均衡</h2><p>HTTP重定向负载均衡是一种比较简单的负载均衡技术实现。来自用户的HTTP请求到达负载均衡服务器以后，负载均衡服务器根据某种负载均衡算法计算得到一个应用服务器的地址，通过HTTP状态码302重定向响应，将新的IP地址发送给用户浏览器，用户浏览器收到重定向响应以后，重新发送请求到真正的应用服务器，以此来实现负载均衡。</p><p><img src=\"https://static001.geekbang.org/resource/image/74/4f/74d1a57c8d5b168501e15cc92da0034f.png?wh=1056*800\" alt=\"\"></p><p>这种负载均衡实现方法比较简单，如果是用Java开发的话，只需要在Servlet代码中调用响应重定向方法就可以了。在简化的情况下，只需要不到十行代码就可以实现一个HTTP重定向负载均衡服务器。</p><p>HTTP重定向负载均衡的优点是设计比较简单，但是它的缺点也比较明显，一方面用户完成一次访问，就需要请求两次数据中心，一次请求负载均衡服务器，一次是请求应用服务器，请求处理性能会受很大的影响。</p><!-- [[[read_end]]] --><p>另一个问题是因为响应要重定向到真正的应用服务器，所以需要把应用服务器的IP地址暴露给外部用户，这样可能会带来安全性的问题。负载均衡服务器通常不部署应用代码，也会关闭不必要的访问端口，设置比较严格的防火墙权限，通常安全性更好一点。因此，一个互联网系统通常只将负载均衡服务器的IP地址对外暴露，供用户访问，而应用服务器则只是用内网IP，外部访问者无法直接连接应用服务器。但是使用HTTP重定向负载均衡，应用服务器不得不使用公网IP，外部访问者可以直接连接到应用服务器，系统的安全性会降低。</p><p>因此HTTP重定向负载均衡在实践中很少使用。</p><h2>DNS负载均衡</h2><p>另一种实现负载均衡的技术方案是DNS负载均衡。我们知道浏览器或者App应用访问数据中心的时候，通常是用域名进行访问，HTTP协议则必须知道IP地址才能建立通信连接，那么域名是如何转换成IP地址的呢？就是通过DNS服务器来完成。当用户从浏览器发起HTTP请求的时候，首先要到DNS域名服务器进行域名解析，解析得到IP地址以后，用户才能够根据IP地址建立HTTP连接，访问真正的数据中心的应用服务器，这时候就可以在DNS域名解析的时候进行负载均衡，也就是说，不同的用户进行域名解析的时候，返回不同的IP地址，从而实现负载均衡。</p><p><img src=\"https://static001.geekbang.org/resource/image/6c/c7/6c504d347d9aa2bca5dedc3e9d750dc7.png?wh=1082*802\" alt=\"\"></p><p>从上面的架构图可以看到，DNS负载均衡和HTTP重定向负载均衡似乎很像。那么DNS会不会有性能问题和安全性问题呢？</p><p>首先和HTTP重定向不同，用户不需要每次请求都进行DNS域名解析，第一次解析后，域名缓存在本机，后面较长一段时间都不会再进行域名解析了，因此性能方面不会是问题。</p><p>其次，如果如图中所示，域名解析直接得到应用服务器的IP地址，确实会存在安全性问题。但是大型互联网应用通常并不直接通过DNS解析得到应用服务器IP地址，而是解析得到负载均衡服务器的IP地址。也就是说，大型网互联网应用需要两次负载均衡，一次通过DNS负载均衡，用户请求访问数据中心负载均衡服务器集群的某台机器，然后这台负载均衡服务器再进行一次负载均衡，将用户请求分发到应用服务器集群的某台服务器上。通过这种方式，应用服务器不需要用公网IP将自己暴露给外部访问者，避免了安全性问题。</p><p>DNS域名解析是域名服务商提供的一项基本服务，几乎所有的域名服务商都支持域名解析负载均衡，只需要在域名服务商的服务控制台进行一下配置，不需要开发代码进行部署，就可以拥有DNS负载均衡服务了。目前大型的互联网应用，淘宝、百度、Google等全部使用DNS负载均衡。比如用不同的电脑ping <a href=\"http://www.baidu.com\">www.baidu.com</a>就可以看到，不同电脑得到的IP地址是不同的。</p><h2>反向代理负载均衡</h2><p>我在<a href=\"https://time.geekbang.org/column/article/188667\">第22篇</a>，缓存架构中提到用户请求到达数据中心以后，最先到达的就是反向代理服务器。反向代理服务器查找本机是否有请求的资源，如果有就直接返回资源数据，如果没有，就将请求发送给后面的应用服务器继续处理。事实上，发送请求给应用服务器的时候，就可以进行负载均衡，将不同的用户请求分发到不同的服务器上面去。Nginx这样的HTTP服务器就会同时提供反向代理与负载均衡功能。</p><p><img src=\"https://static001.geekbang.org/resource/image/d6/43/d656da82d725cb206dbcf7cebb420e43.png?wh=1116*784\" alt=\"\"></p><p>反向代理服务器是工作在HTTP协议层之上的，所以它代理的也是HTTP的请求和响应。作为互联网应用层的一个协议，HTTP协议相对说来比较重，效率比较低，所以反向代理负载均衡通常用在小规模的互联网系统上，只有几台或者十几台服务器的规模。</p><h2>IP负载均衡</h2><p>反向代理负载均衡是工作在应用层网络协议上的负载均衡，因此也叫应用层负载均衡。应用层负载均衡之下的负载均衡方法是在TCP/IP协议的IP层进行负载均衡，IP层是网络通讯协议的网络层，所以有时候叫网络层负载均衡。它的主要工作原理是当用户的请求到达负载均衡服务器以后，负载均衡服务器会对网络层的数据包的IP地址进行转换，修改IP地址，将其修改为应用服务器的IP地址，然后把数据包重新发送出去，请求数据就会到达应用服务器。</p><p><img src=\"https://static001.geekbang.org/resource/image/a6/dc/a62e851bec43aac1a30cc45db11abbdc.png?wh=1368*750\" alt=\"\"></p><p>IP负载均衡不需要在HTTP协议层工作，可以在操作系统内核直接修改IP数据包的地址，因此，效率比应用层的反向代理负载均衡高得多。但是它依然有一个缺陷，不管是请求还是响应的数据包，都要通过负载均衡服务器进行IP地址转换，才能够正确地把请求数据分发到应用服务器，或者正确地将响应数据包发送到用户端程序。请求的数据通常比较小，一个URL或者是一个简单的表单，但是响应的数据不管是HTML还是图片，或者是JS、CSS这样的资源文件通常都会比较大，因此负载均衡服务器会成为响应数据的流量瓶颈。</p><h2>数据链路层负载均衡</h2><p>数据链路层负载均衡可以解决响应数据量大而导致的负载均衡服务器输出带宽不足的问题。也就是说，负载均衡服务器并不修改数据包的IP地址，而是修改数据链路层里的网卡mac地址，在数据链路层实现负载均衡。而应用服务器和负载均衡服务器都使用相同的虚拟IP地址，这样IP路由就不会受到影响，但是网卡会根据自己的mac地址，选择负载均衡服务器发送到自己网卡的数据包，交给对应的应用程序去处理，处理结束以后，当把响应的数据包发送到网络上的时候，因为IP地址没有修改过，所以这个响应会直接到达用户的浏览器，而不会再经过负载均衡服务器。</p><p><img src=\"https://static001.geekbang.org/resource/image/e4/4c/e4cc84d4c9f7d76082df4163ac8d414c.png?wh=1476*820\" alt=\"\"></p><p>链路层负载均衡避免响应数据再经过负载均衡服务器，因而可以承受较大的数据传输压力，所以，目前大型互联网应用基本都使用链路层负载均衡。</p><p>Linux上实现IP负载均衡和链路层负载均衡的技术是LVS，目前LVS的功能已经集成到Linux中了，通过Linux可以直接配置实现这两种负载均衡。</p><h2>小结</h2><p>负载均衡技术在早期刚出现的时候，设备昂贵，使用复杂，只有大企业才用得起、用得上，但是到了今天，随着互联网技术的发展与普及，负载均衡已经是最常用的分布式技术之一了，使用也非常简单。如果使用云计算平台，只需要在控制台点击几下，就可以配置实现一个负载均衡了。即使是自己部署一个负载均衡服务器，不管是直接用Linux还是用Nginx，也不是很复杂。</p><p>我在这里主要描述的是负载均衡的网络技术架构。事实上，实现一个负载均衡，还需要关注负载均衡的算法，也就是说，当一个请求到达负载均衡服务器的时候，负载均衡服务器该选择集群中的哪一台服务器将请求发送给它？</p><p>目前主要的负载均衡算法有轮询、随机、最少连接几种。轮询就是将请求轮流发给应用服务器，随机就是将请求随机发送给任一台应用服务器，最少连接则是根据应用服务器当前正在处理的连接数，将请求分发给最少连接的服务器。</p><h2>思考题</h2><p>利用HTTP重定向只需要很少代码就可以完成一个简化的负载均衡，你能否利用你熟悉的编程语言写一个简化的HTTP重定向负载均衡demo？</p><p>欢迎你在评论区写下你的答案，我会和你一起交流，也欢迎把这篇文章分享给你的朋友或者同事，一起交流一下。</p>","comments":[{"had_liked":false,"id":183471,"user_name":"Paul Shan","can_delete":false,"product_type":"c1","uid":1593140,"ip_address":"","ucode":"32D99989028284","user_header":"","comment_is_top":false,"comment_ctime":1583047960,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"70302524696","product_id":100040201,"comment_content":"负载均衡是为了让不同服务器处理不同的请求，在服务器上平均分配任务，如何分配任务就成了不同解决方案本质所在。HTTP重定向是用专门的HTTP服务器来对每个请求分配服务器，这样每个请求需要两次HTTP访问，效率低下。DNS负载均衡是在IP地址和域名映射转化的地方做文章，效率明显提升。DNS只解决公网上的负载均衡，服务器集群内部也需要负载均衡。这项任务有三种解决方案，分别在HTTP层，IP层和数据链路层做文章。HTTP层属于高层协议，也就是所有协议都处理一遍才知道最终要去那个应用服务器，而且不在内核中处理，效率最差。IP层的路由分发效率高一点，因为不用打开HTTP层了，而且全在内核中解析。但是IP是服务器的全局地址，在这一层做分发，势必每个包的接和收都得分发。数据链路层的负载均衡效率更高，原因在于一方面不用再打开到IP层了，而且IP地址没改过，包回来的时候就不用再处理了，这样就大大减轻了负载均衡服务器的工作量。","like_count":16},{"had_liked":false,"id":251999,"user_name":"escray","can_delete":false,"product_type":"c1","uid":1020525,"ip_address":"","ucode":"1F4204930E47C4","user_header":"https://static001.geekbang.org/account/avatar/00/0f/92/6d/becd841a.jpg","comment_is_top":false,"comment_ctime":1602046487,"is_pvip":true,"discussion_count":0,"race_medal":1,"score":"48846686743","product_id":100040201,"comment_content":"专栏好像没有提到硬件负载均衡 F5 或者 A10，虽然贵，但是性能强大，支持百万以上并发，并且还具备防火墙、防 DDoS 攻击等安全功能。<br><br>实现了 IP 负载均衡和链路层负载均衡的 LVS 是 4 层负载均衡，与协议无关，性能是十万级，传说可达 80 万&#47;秒；<br><br>应用层负载均衡，Nginx 是 7 层负载均衡，可以支持 HTTP、E-mail 协议，性能大概是 5 万&#47;秒。<br><br>大概一般的互联网平台，如果用户的地理分布比较广泛，那么先上 DNS 的地理级别负载均衡（域名商提供，一般免费）；<br><br>如果流量正的很大，或者土豪，那么就在当地机房上集群级别的硬件负载均衡 F5，在我的印象里面，似乎维基百科也没有使用硬件负载均衡；<br><br>进入当地机房以后，可以再使用机器级别的负载均衡 Nginx 将用户请求发送给及群众的某台机器。<br><br>也可以采用级联的方式，一级用 F5，二级用 LVS，三级用 Nginx。我觉的一般人用不到这个方案。<br><br>参考《从零开始学架构》中有关高性能负载均衡的章节。","like_count":11},{"had_liked":false,"id":174832,"user_name":"旅途","can_delete":false,"product_type":"c1","uid":1212902,"ip_address":"","ucode":"5022477E8E9441","user_header":"https://static001.geekbang.org/account/avatar/00/12/81/e6/6cafed37.jpg","comment_is_top":false,"comment_ctime":1580409098,"is_pvip":false,"replies":[{"id":"67945","content":"是的，应用服务器和负载均衡服务器IP地址一样","user_name":"作者回复","comment_id":174832,"uid":"1007349","ip_address":"","utype":1,"ctime":1580437255,"user_name_real":"李智慧"}],"discussion_count":3,"race_medal":0,"score":"18760278282","product_id":100040201,"comment_content":"智慧老师 问一个问题 mac负载均衡能直接返回客户端是因为 和负载均衡节点一样配置了外网ip吗？这块客户端和服务端的交互  感觉还是不太清晰  麻烦您再详细讲下","like_count":4,"discussions":[{"author":{"id":1007349,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/5e/f5/018907ac.jpg","nickname":"李智慧","note":"","ucode":"8C9980C438AFD1","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":482537,"discussion_content":"是的，应用服务器和负载均衡服务器IP地址一样","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1580437255,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1109389,"avatar":"https://static001.geekbang.org/account/avatar/00/10/ed/8d/377c106a.jpg","nickname":"KW💤","note":"","ucode":"290DD7016F4EE0","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":395503,"discussion_content":"那这样是否每台机器会有安全问题？外面是直连应用服务器了？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1632311235,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1037070,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/d3/0e/d2f9dd72.jpg","nickname":"孙梦华🙄🙄","note":"","ucode":"2017F0E865416C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":366363,"discussion_content":"这是不是就是虚拟IP技术啊？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1618043388,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":172561,"user_name":"苏志辉","can_delete":false,"product_type":"c1","uid":1068927,"ip_address":"","ucode":"39B25CE21C04EE","user_header":"https://static001.geekbang.org/account/avatar/00/10/4f/7f/5dc11380.jpg","comment_is_top":false,"comment_ctime":1579223869,"is_pvip":false,"replies":[{"id":"67032","content":"谢谢指正，尽快修正~","user_name":"作者回复","comment_id":172561,"uid":"1007349","ip_address":"","utype":1,"ctime":1579317966,"user_name_real":"李智慧"}],"discussion_count":1,"race_medal":0,"score":"10169158461","product_id":100040201,"comment_content":"IP层负载均衡为什么返回的不是网关地址而是200.10.10.1","like_count":2,"discussions":[{"author":{"id":1007349,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/5e/f5/018907ac.jpg","nickname":"李智慧","note":"","ucode":"8C9980C438AFD1","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":481775,"discussion_content":"谢谢指正，尽快修正~","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579317966,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":358614,"user_name":"不要挑战自己的智商","can_delete":false,"product_type":"c1","uid":2063114,"ip_address":"美国","ucode":"4910FF07C35DC5","user_header":"https://static001.geekbang.org/account/avatar/00/1f/7b/0a/b65e1fae.jpg","comment_is_top":false,"comment_ctime":1664496068,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"5959463364","product_id":100040201,"comment_content":"1， HTTP 302 Redirection LB:  the client app needs to send the requests twice to reach the target server. IP of application server is exposed to public, thus weaken the security. This method is rarely used. <br><br>2.  DNS LB. Widly used. Configured at the DNS provider table. No coding. <br><br>3. reserse proxy: works on HTTP layer, needs to open and parse the HTTP protocol. Serves as a cache in front of the applicaiton server. <br><br>4. IP LB. More efficient than reverse proxy. By chaning the destination IP to a private IP, the request is forwarded to the target server. Meanwhile, all responses have to go through this<br>LB, which adding more load to this single point.  <br><br>5. Link layer LB: LB and server have same IP, different mac address. The responses would not need to pass through the LB, but going to client directly. ","like_count":1},{"had_liked":false,"id":197485,"user_name":"非同凡想","can_delete":false,"product_type":"c1","uid":1934969,"ip_address":"","ucode":"713FD449A49D5A","user_header":"https://static001.geekbang.org/account/avatar/00/1d/86/79/066a062a.jpg","comment_is_top":false,"comment_ctime":1585381420,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"5880348716","product_id":100040201,"comment_content":"nginx与lvs该怎么选，有不有什么原则？","like_count":1,"discussions":[{"author":{"id":1049017,"avatar":"https://static001.geekbang.org/account/avatar/00/10/01/b9/73435279.jpg","nickname":"学习学个屁","note":"","ucode":"DF2D61E6FB2FCE","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":218374,"discussion_content":"Lvs","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585653445,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1049017,"avatar":"https://static001.geekbang.org/account/avatar/00/10/01/b9/73435279.jpg","nickname":"学习学个屁","note":"","ucode":"DF2D61E6FB2FCE","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":218373,"discussion_content":"Nginx是应用层  kvs是传输层 传输层效率高点。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585653436,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":174964,"user_name":"天天向上","can_delete":false,"product_type":"c1","uid":1282639,"ip_address":"","ucode":"D0914D4FD82272","user_header":"https://static001.geekbang.org/account/avatar/00/13/92/4f/ff04156a.jpg","comment_is_top":false,"comment_ctime":1580481706,"is_pvip":true,"replies":[{"id":"68152","content":"可以这么说。主要是处理HTTP协议需要消耗更多的计算机资源。","user_name":"作者回复","comment_id":174964,"uid":"1007349","ip_address":"","utype":1,"ctime":1580695835,"user_name_real":"李智慧"}],"discussion_count":1,"race_medal":0,"score":"5875449002","product_id":100040201,"comment_content":"HTTP层比IP层多了处理环节，因此说HTTP 协议相对说来比较重？！","like_count":1,"discussions":[{"author":{"id":1007349,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/5e/f5/018907ac.jpg","nickname":"李智慧","note":"","ucode":"8C9980C438AFD1","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":482585,"discussion_content":"可以这么说。主要是处理HTTP协议需要消耗更多的计算机资源。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1580695835,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":321993,"user_name":"丶二月二","can_delete":false,"product_type":"c1","uid":1709094,"ip_address":"","ucode":"AAE7C0A7892F80","user_header":"https://static001.geekbang.org/account/avatar/00/1a/14/26/62036dff.jpg","comment_is_top":false,"comment_ctime":1637129995,"is_pvip":false,"replies":[{"id":"117507","content":"重定向是HTTP协议约定的，是由客户端发起的，需要客户端处理。","user_name":"作者回复","comment_id":321993,"uid":"1007349","ip_address":"","utype":1,"ctime":1638150247,"user_name_real":"编辑"}],"discussion_count":3,"race_medal":0,"score":"1637129995","product_id":100040201,"comment_content":"请教下，写了一个简易的HTTP重定向负载均衡，发现客户端没有主动将body发给重定向后的url，有什么参数可以控制嘛？还是只能客户端内部做逻辑处理","like_count":0,"discussions":[{"author":{"id":1007349,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/5e/f5/018907ac.jpg","nickname":"李智慧","note":"","ucode":"8C9980C438AFD1","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":534251,"discussion_content":"重定向是HTTP协议约定的，是由客户端发起的，需要客户端处理。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1638150247,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":1,"child_discussions":[{"author":{"id":1709094,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/14/26/62036dff.jpg","nickname":"丶二月二","note":"","ucode":"AAE7C0A7892F80","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1007349,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/5e/f5/018907ac.jpg","nickname":"李智慧","note":"","ucode":"8C9980C438AFD1","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":534260,"discussion_content":"好的，蟹蟹老师！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1638151558,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":534251,"ip_address":""},"score":534260,"extra":""}]},{"author":{"id":1258589,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIBicEibaY3wha6ibzQATjIq4dvbtPoP0vMicasl52MgfjicKQFOdibVViaDnBpWt6wtcOhxFx5emiajUXpZg/132","nickname":"zqnba","note":"","ucode":"20000DAD8C92F1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":586807,"discussion_content":"服务器返回http status code 307/308 的话，客户端一般是会主动发body的(POST 的话)。但是仍然不带authentication header。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1662523457,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"日本"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":277544,"user_name":"鱼","can_delete":false,"product_type":"c1","uid":1487584,"ip_address":"","ucode":"89EC9CE3AD0281","user_header":"https://static001.geekbang.org/account/avatar/00/16/b2/e0/d856f5a4.jpg","comment_is_top":false,"comment_ctime":1612450029,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1612450029","product_id":100040201,"comment_content":"LVS工作在IP层和链路层，为什么常常被称作4层负载均衡呢？","like_count":0,"discussions":[{"author":{"id":1263977,"avatar":"https://static001.geekbang.org/account/avatar/00/13/49/69/c0fcf4e8.jpg","nickname":"def","note":"","ucode":"39BDBEA0560C13","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":351091,"discussion_content":"鄙人认为这是参照OSI网络分层模型提出来的，LVS主要根据IP地址和端口号来进行负载均衡，相对应的网络模型分层为第三层IP层和第四层的传输层。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1614152112,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":255358,"user_name":"JRich","can_delete":false,"product_type":"c1","uid":1114901,"ip_address":"","ucode":"66AE9D61533960","user_header":"https://static001.geekbang.org/account/avatar/00/11/03/15/293a185d.jpg","comment_is_top":false,"comment_ctime":1603328539,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1603328539","product_id":100040201,"comment_content":"老师，我不太理解网络层负载均衡修改了目标ip而源ip地址未改啊，应用服务器处理完不能直接给客户端响应吗？或者说客户端要校验响应的源ip和请求的目标ip是否一致吗？","like_count":0,"discussions":[{"author":{"id":1197685,"avatar":"https://static001.geekbang.org/account/avatar/00/12/46/75/9f80409f.jpg","nickname":"追梦","note":"","ucode":"634A19055525B3","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":340289,"discussion_content":"一般出于安全性考虑，负载均衡服务器和应用服务器之间会走内网，内网机房一般不配置外网访问权限，所以即使负载均衡服务器不修改源IP（外网IP）也无法访问","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1609944918,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":224634,"user_name":"吃饭睡觉打酱油","can_delete":false,"product_type":"c1","uid":1071668,"ip_address":"","ucode":"95EC98C2B5045B","user_header":"https://static001.geekbang.org/account/avatar/00/10/5a/34/4cbadca6.jpg","comment_is_top":false,"comment_ctime":1591491459,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1591491459","product_id":100040201,"comment_content":"老师，请问下，数据链路层负载均衡时，应用服务器集群里面的服务器在网络上也是对外暴露的么？","like_count":0},{"had_liked":false,"id":183731,"user_name":"探索无止境","can_delete":false,"product_type":"c1","uid":1044178,"ip_address":"","ucode":"91D2A9907DFA79","user_header":"https://static001.geekbang.org/account/avatar/00/0f/ee/d2/7024431c.jpg","comment_is_top":false,"comment_ctime":1583121296,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1583121296","product_id":100040201,"comment_content":"老师您好，目前lvs和nginx都可以实现第四层负载均衡，在技术选型上您是如何思考做权衡的？","like_count":0,"discussions":[{"author":{"id":1066546,"avatar":"https://static001.geekbang.org/account/avatar/00/10/46/32/2bb481d2.jpg","nickname":"Leo","note":"","ucode":"1075986F8D116D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":236597,"discussion_content":"实现不同,效率高lvs,部署简单nginx","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1587107188,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":180449,"user_name":"Frank","can_delete":false,"product_type":"c1","uid":1419276,"ip_address":"","ucode":"FAACCA4E6D481F","user_header":"https://static001.geekbang.org/account/avatar/00/15/a8/0c/82ba8ef9.jpg","comment_is_top":false,"comment_ctime":1582282592,"is_pvip":false,"discussion_count":3,"race_medal":0,"score":"1582282592","product_id":100040201,"comment_content":"咨询一个问题：数据链路层负载，应用服务器和负载均衡服务器都使用相同的虚拟 IP 地址，这样 IP 会不会发生冲突？","like_count":0,"discussions":[{"author":{"id":1020525,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/92/6d/becd841a.jpg","nickname":"escray","note":"","ucode":"1F4204930E47C4","race_medal":1,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":310776,"discussion_content":"不会有 IP 冲突，因为内网和外网分别是不同的网段，负载均衡服务器应该是有两个以上的网卡，分别设置 IP 地址。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1602045651,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1419276,"avatar":"https://static001.geekbang.org/account/avatar/00/15/a8/0c/82ba8ef9.jpg","nickname":"Frank","note":"","ucode":"FAACCA4E6D481F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":204333,"discussion_content":"可能是这样的，虽然ip地址相同，但是目标mac地址不匹配的情况，只有目标Mac地址与目标ip都匹配上才能负载过去","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1584155825,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1023762,"avatar":"","nickname":"开心小毛","note":"","ucode":"9D57A2773759F3","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":203936,"discussion_content":"我的理解是，每个应用服务器的MAC地址对应一个内网IP, 链路层负载就是Port Forwarding ","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1584103321,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":172823,"user_name":"奔奔奔跑","can_delete":false,"product_type":"c1","uid":1210265,"ip_address":"","ucode":"F86EC205DCAACE","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Gswh7ibY4tubXhp0BXOmV2pXZ3XsXic1d942ZMAEgWrRSF99bDskOTsG1g172ibORXxSCWTn9HWUX5vSSUVWU5I4A/132","comment_is_top":false,"comment_ctime":1579326367,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1579326367","product_id":100040201,"comment_content":"智慧老师，请问一个内核限流是什么技术？和Linux集成了LVS有一些联系吗？<br>","like_count":0}]}