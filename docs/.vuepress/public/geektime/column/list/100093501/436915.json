{"id":436915,"title":"11｜代码块与作用域：如何保证变量不会被遮蔽？","content":"<p>你好，我是Tony Bai。</p><p>在上一节课，我们学习了变量的几种声明形式，还掌握了不同类型的变量应该采用哪种声明形式。在这一节课里，我们还是继续聊聊有关变量的事情。聊什么呢？别急，我们从一个Go变量遮蔽（Variable Shadowing）的问题说起。</p><p>什么是变量遮蔽呢？我们来看下面这段示例代码：</p><pre><code class=\"language-plain\">var a = 11\n\nfunc foo(n int) {\n\ta := 1\n\ta += n\n}\n\nfunc main() {\n\tfmt.Println(\"a =\", a) // 11\n\tfoo(5)\n\tfmt.Println(\"after calling foo, a =\", a) // 11\n}\n</code></pre><p>你可以看到，在这段代码中，函数foo调用前后，包级变量a的值都没有发生变化。这是因为，虽然foo函数中也使用了变量a，但是foo函数中的变量a遮蔽了外面的包级变量a，这使得包级变量a没有参与到foo函数的逻辑中，所以就没有发生变化了。</p><p>变量遮蔽是Go开发人员在日常开发工作中最容易犯的编码错误之一，它低级又不容易查找，常常会让你陷入漫长的调试过程。上面的实例较为简单，你可以通过肉眼很快找到问题所在，但一旦遇到更为复杂的变量遮蔽的问题，你就可能会被折腾很久，甚至只能通过工具才能帮助捕捉问题所在。</p><!-- [[[read_end]]] --><p>变量遮蔽只是个引子，我真正想跟你说的是<strong>代码块</strong>（Block，也可译作词法块）和<strong>作用域</strong>（Scope）这两个概念，因为要想彻底保证不出现变量遮蔽问题，我们需要深入了解这两个概念以及其背后的规则。</p><p>现在了，我们就来先学习一下代码块与作用域的概念。</p><h2>代码块与作用域</h2><p>我们先来解析一下Go里面的代码块。</p><p>Go语言中的代码块是包裹在一对大括号内部的声明和语句序列，如果一对大括号内部没有任何声明或其他语句，我们就把它叫做<strong>空代码块</strong>。Go代码块支持嵌套，我们可以在一个代码块中嵌入多个层次的代码块，如下面示例代码所示：</p><pre><code class=\"language-plain\">func foo() { //代码块1\n    { // 代码块2\n        { // 代码块3\n            { // 代码块4\n\n            }\n        }\n    }\n}\n</code></pre><p>在这个示例中，函数foo的函数体是最外层的代码块，这里我们将它编号为“代码块1”。而且，在它的函数体内部，又嵌套了三层代码块，由外向内看分别为代码块2、代码块3以及代码块4。</p><p>像代码块1到代码块4这样的代码块，它们都是由两个肉眼可见的且配对的大括号包裹起来的，我们称这样的代码块为显式代码块（Explicit Blocks）。既然提到了显式代码块，我们肯定也不能忽略另外一类代码块的存在，也就是隐式代码块（Implicit Block）。顾名思义，隐式代码块没有显式代码块那样的肉眼可见的配对大括号包裹，我们无法通过大括号来识别隐式代码块。</p><p>虽然隐式代码块身着“隐身衣”，但我们也不是没有方法来识别它，因为Go语言规范对现存的几类隐式代码块做了明确的定义，你可以先花一两分钟看看下面这张图\b。</p><p><img src=\"https://static001.geekbang.org/resource/image/3d/85/3d02138cf8f8a7a85fe0cfe5c29a6585.jpg?wh=1920x1047\" alt=\"图片\"></p><p>我们按代码块范围从大到小，逐一说明一下。</p><p>首先是位于最外层的<strong>宇宙代码块（Universe Block）</strong>，它囊括的范围最大，所有Go源码都在这个隐式代码块中，你也可以将该隐式代码块想象为在所有Go代码的最外层加一对大括号，就像图中最外层的那对大括号那样。</p><p>在<strong>宇宙代码块</strong>内部嵌套了<strong>包代码块（Package Block）</strong>，每个Go包都对应一个隐式包代码块，每个包代码块包含了该包中的所有Go源码，不管这些代码分布在这个包里的多少个的源文件中。</p><p>我们再往里面看，在包代码块的内部嵌套着若干<strong>文件代码块（File Block）</strong>，每个Go源文件都对应着一个文件代码块，也就是说一个Go包如果有多个源文件，那么就会有多个对应的文件代码块。</p><p>再下一个级别的隐式代码块就在控制语句层面了，包括if、for与switch。我们可以把每个控制语句都视为在它自己的隐式代码块里。不过你要注意，这里的控制语句隐式代码块与控制语句使用大括号包裹的显式代码块并不是一个代码块。你再看一下前面的图，switch控制语句的隐式代码块的位置是在它显式代码块的外面的。</p><p>最后，位于最内层的隐式代码块是switch或select语句的每个case/default子句中，虽然没有大括号包裹，但实质上，每个子句都自成一个代码块。</p><p>有了这些代码块的概念后，你能更好理解作用域的概念了。作用域的概念是针对标识符的，不局限于变量。每个标识符都有自己的作用域，而<strong>一个标识符的作用域就是指这个标识符在被声明后可以被有效使用的源码区域</strong>。</p><p>显然，作用域是一个编译期的概念，也就是说，编译器在编译过程中会对每个标识符的作用域进行检查，对于在标识符作用域外使用该标识符的行为会给出编译错误的报错。</p><p>不过，我们可以使用代码块的概念来划定每个标识符的作用域。这个划定原则是什么呢？原则就是<strong>声明于外层代码块中的标识符，其作用域包括所有内层代码块</strong>。而且，这一原则同时适于显式代码块与隐式代码块。现在，对照上面的示意图，我们再举一些典型的例子，让你对作用域这个抽象的概念有更进一步的了解。</p><p><strong>首先，我们来看看位于最外层的宇宙隐式代码块的标识符。</strong></p><p>我们先来看第一个问题：我们要怎么声明这一区域的标识符呢？</p><p>这个问题的答案是，我们并不能声明这一块的标识符，因为这一区域是Go语言<strong>预定义标识符</strong>的自留地。这里我整理了Go语言当前版本定义里的所有预定义标识符，你可以看看下面这张表：</p><p><img src=\"https://static001.geekbang.org/resource/image/01/95/01b8135e83c9fc39afcecdb26d4e1495.jpg?wh=1920x748\" alt=\"图片\"></p><p>由于这些预定义标识符位于包代码块的外层，所以它们的作用域是范围最大的，对于开发者而言，它们的作用域就是源代码中的任何位置。不过，这些预定义标识符不是关键字，我们同样可以在内层代码块中声明同名的标识符。</p><p><strong>那现在第二个问题就来了：既然宇宙代码块里存在预定义标识符，而且宇宙代码块的下一层是包代码块，那还有哪些标识符具有包代码块级作用域呢？</strong></p><p>答案是，包顶层声明中的常量、类型、变量或函数（不包括方法）对应的标识符的作用域是包代码块。</p><p>不过，对于作用域为包代码块的标识符，我需要你知道一个特殊情况。那就是当一个包A导入另外一个包B后，包A仅可以使用被导入包包B中的导出标识符（Exported Identifier）。</p><p>这是为什么呢？而且，什么是导出标识符呢？</p><p>按照Go语言定义，一个标识符要成为导出标识符需同时具备两个条件：一是这个标识符声明在包代码块中，或者它是一个字段名或方法名；二是它名字第一个字符是一个大写的Unicode字符。这两个条件缺一不可。</p><p>从我们前面的讲解中，你一定发现了大部分在包顶层声明的标识符都具有包代码块范围的作用域，那<strong>还有标识符的作用域是文件代码块范围的吗？</strong></p><p>确实不多了。但还有一个，我一说你肯定会有一种恍然大悟的感觉，它就是导入的包名。也就是说，如果一个包A有两个源文件要实现，而且这两个源文件中的代码都依赖包B中的标识符，那么这两个源文件都需要导入包B。</p><p>在源文件层面，去掉拥有包代码块作用域的标识符后，剩余的就都是一个个函数/方法的实现了。在这些函数/方法体中，标识符作用域划分原则更为简单，因为我们可以凭借肉眼可见的、配对的大括号来明确界定一个标识符的作用域范围，我们来看下面这个示例：</p><pre><code class=\"language-plain\">func (t T) M1(x int) (err error) {\n// 代码块1\n    m := 13\n\n    // 代码块1是包含m、t、x和err三个标识符的最内部代码块\n    { // 代码块2\n        \n        // \"代码块2\"是包含类型bar标识符的最内部的那个包含代码块\n        type bar struct {} // 类型标识符bar的作用域始于此\n        { // 代码块3\n            \n            // \"代码块3\"是包含变量a标识符的最内部的那个包含代码块\n            a := 5 // a作用域开始于此\n            {  // 代码块4 \n                //... ...\n            }\n            // a作用域终止于此\n        }\n        // 类型标识符bar的作用域终止于此\n    }\n    // m、t、x和err的作用域终止于此\n}\n</code></pre><p>我们可以看到，上面示例中定义了类型T的一个方法M1，方法接收器(receiver)变量t、函数参数x，以及返回值变量err对应的标识符的作用域范围是M1函数体对应的显式代码块1。虽然t、x和err并没有被函数体的大括号所显式包裹，但它们属于函数定义的一部分，所以作用域依旧是代码块1。</p><p>说完了函数体外部的诸如函数参数、返回值等元素的作用域后，我们现在就来分析<strong>函数体内部的那些语法元素</strong>。</p><p>函数内部声明的常量或变量对应的标识符的作用域范围开始于常量或变量声明语句的末尾，并终止于其最内部的那个包含块的末尾。在上述例子中，变量m、自定义类型bar以及在代码块3中声明的变量a均符合这个划分规则。</p><p>接下来，我们再看看<strong>位于控制语句隐式代码块中的标识符的作用域划分</strong>。我们以下面这个if条件分支语句为例来分析一下：</p><pre><code class=\"language-plain\">func bar() {\n    if a := 1; false {\n    } else if b := 2; false {\n    } else if c := 3; false {\n    } else {\n        println(a, b, c)\n    }\n}\n</code></pre><p>这是一个复杂的“if - else if - else”条件分支语句结构，根据我们前面讲过的隐式代码块规则，我们将上面示例中隐式代码块转换为显式代码块后，会得到下面这段等价的代码：</p><pre><code class=\"language-plain\">func bar() {\n    { // 等价于第一个if的隐式代码块\n        a := 1 // 变量a作用域始于此\n        if false {\n\n        } else {\n            { // 等价于第一个else if的隐式代码块\n                b := 2 // 变量b的作用域始于此\n                if false {\n\n                } else {\n                    { // 等价于第二个else if的隐式代码块\n                        c := 3 // 变量c作用域始于此\n                        if false {\n\n                        } else {\n                            println(a, b, c)\n                        }\n                        // 变量c的作用域终止于此\n                    }\n                }\n                // 变量b的作用域终止于此\n            }\n        }\n        // 变量a作用域终止于此\n    }\n}\n</code></pre><p>我们看到，经过这么一个等价转换，各个声明于if表达式中的变量的作用域就变得一目了然了。声明于不同层次的隐式代码块中的变量a、b和c的实际作用域都位于最内层的else显式代码块之外，于是在println的那个显式代码块中，变量a、b、c都是合法的，而且还保持了初始值。</p><p>好了，到这里我们已经了解代码块与作用域的概念与规则了，那么我们要怎么利用这些知识避免在实际编码中的变量遮蔽问题呢？避免变量遮蔽的原则又是什么呢？</p><h2>避免变量遮蔽的原则</h2><p>变量是标识符的一种，所以我们前面说的标识符的作用域规则同样适用于变量。在前面的讲述中，我们已经知道了，一个变量的作用域起始于其声明所在的代码块，并且可以一直扩展到嵌入到该代码块中的所有内层代码块，而正是这样的作用域规则，成为了滋生“变量遮蔽问题”的土壤。</p><p>变量遮蔽问题的根本原因，就是内层代码块中声明了一个与外层代码块同名且同类型的变量，这样，内层代码块中的同名变量就会替代那个外层变量，参与此层代码块内的相关计算，我们也就说内层变量遮蔽了外层同名变量。现在，我们先来看一下这个示例代码，它就存在着多种变量遮蔽的问题：</p><pre><code class=\"language-plain\">... ...\n var a int = 2020\n  \n func checkYear() error {\n     err := errors.New(\"wrong year\")\n \n     switch a, err := getYear(); a {\n     case 2020:\n         fmt.Println(\"it is\", a, err)\n     case 2021:\n         fmt.Println(\"it is\", a)\n         err = nil\n     }\n     fmt.Println(\"after check, it is\", a)\n     return err\n }\n \n type new int\n \n func getYear() (new, error) {\n     var b int16 = 2021\n     return new(b), nil\n }\n\n func main() {\n     err := checkYear()\n     if err != nil {\n         fmt.Println(\"call checkYear error:\", err)\n         return\n     }\n     fmt.Println(\"call checkYear ok\")\n }\n</code></pre><p>这个变量遮蔽的例子还是有点复杂的，为了讲解方便，我给代码加上了行编号。我们首先运行一下这个例子：</p><pre><code class=\"language-plain\">$go run complex.go\nit is 2021\nafter check, it is 2020\ncall checkYear error: wrong year\n</code></pre><p>我们可以看到，第20行定义的getYear函数返回了正确的年份(2021)，但是checkYear在结尾却输出“after check, it is 2020”，并且返回的err并非为nil，这显然是变量遮蔽的“锅”！</p><p>根据我们前面给出的变量遮蔽的根本原因，我们来“找找茬”，看看上面这段代码究竟有几处变量遮蔽问题（包括标识符遮蔽问题）。</p><p><strong>第一个问题：遮蔽预定义标识符。</strong></p><p>面对上面代码，我们一眼就看到了位于第18行的new，这本是Go语言的一个预定义标识符，但上面示例代码呢，却用new这个名字定义了一个新类型，于是new这个标识符就被遮蔽了。如果这个时候你在main函数下方放上下面代码：</p><pre><code class=\"language-plain\">p := new(int)\n*p = 11\n</code></pre><p>你就会收到Go编译器的错误提示：“type int is not an expression”，如果没有意识到new被遮蔽掉，这个提示就会让你不知所措。不过，在上面示例代码中，遮蔽new并不是示例未按预期输出结果的真实原因，我们还得继续往下看。</p><p><strong>这时我们发现了第二个问题：遮蔽包代码块中的变量。</strong></p><p>你看，位于第7行的switch语句在它自身的隐式代码块中，通过短变量声明形式重新声明了一个变量a，这个变量a就遮蔽了外层包代码块中的包级变量a，这就是打印“after check, it is 2020”的原因。包级变量a没有如预期那样被getYear的返回值赋值为正确的年份2021，2021被赋值给了遮蔽它的switch语句隐式代码块中的那个新声明的a。</p><p><strong>不过，同一行里，其实还有第三个问题：遮蔽外层显式代码块中的变量。</strong></p><p>同样还是第7行的switch语句，除了声明一个新的变量a之外，它还声明了一个名为err的变量，这个变量就遮蔽了第4行checkYear函数在显式代码块中声明的err变量，这导致第12行的nil赋值动作作用到了switch隐式代码块中的err变量上，而不是外层checkYear声明的本地变量err变量上，后者并非nil，这样checkYear虽然从getYear得到了正确的年份值，但却返回了一个错误给main函数，这直接导致了main函数打印了错误：“call checkYear error: wrong year”。</p><p>通过这个示例，我们也可以看到，短变量声明与控制语句的结合十分容易导致变量遮蔽问题，并且很不容易识别，因此在日常go代码开发中你要尤其注意两者结合使用的地方。</p><p>不过，依靠肉眼识别变量遮蔽问题终归不是长久之计，有没有工具可以帮助我们识别这类问题呢？其实是有的，下面我们就来介绍一下可以检测变量遮蔽问题的工具。</p><h2>利用工具检测变量遮蔽问题</h2><p>Go官方提供了go vet工具可以用于对Go源码做一系列静态检查，在Go 1.14版以前默认支持变量遮蔽检查，Go 1.14版之后，变量遮蔽检查的插件就需要我们单独安装了，安装方法如下：</p><pre><code class=\"language-plain\">$go install golang.org/x/tools/go/analysis/passes/shadow/cmd/shadow@latest\ngo: downloading golang.org/x/tools v0.1.5\ngo: downloading golang.org/x/mod v0.4.2\n</code></pre><p>一旦安装成功，我们就可以通过go vet扫描代码并检查这里面有没有变量遮蔽的问题了。我们现在就来检查一下前面的示例代码，看看效果怎么样。执行检查的命令如下：</p><pre><code class=\"language-plain\">$go vet -vettool=$(which shadow) -strict complex.go \n./complex.go:13:12: declaration of \"err\" shadows declaration at line 11\n</code></pre><p>我们看到，go vet只给出了err变量被遮蔽的提示，变量a以及预定义标识符new被遮蔽的情况并没有给出提示。可以看到，工具确实可以辅助检测，但也不是万能的，不能穷尽找出代码中的所有问题，所以你还是要深入理解代码块与作用域的概念，尽可能在日常编码时就主动规避掉所有遮蔽问题。</p><h2>小结</h2><p>好了，今天的课讲到这里就结束了，现在我们一起来回顾一下吧。</p><p>在这一讲中，我们学习了另外两个变量相关的概念：代码块与作用域。</p><p>代码块有显式与隐式之分，显式代码块就是包裹在一对配对大括号内部的语句序列，而隐式代码块则不容易肉眼分辨，它是通过Go语言规范明确规定的。隐式代码块有五种，分别是宇宙代码块、包代码块、文件代码块、分支控制语句隐式代码块，以及switch/select的子句隐式代码块，理解隐式代码块是理解代码块概念以及后续作用域概念的前提与基础。</p><p>作用域的概念是Go源码编译过程中标识符（包括变量）的一个属性。Go编译器会校验每个标识符的作用域，如果它的使用范围超出其作用域，编译器会报错。</p><p>不过呢，我们可以使用代码块的概念来划定每个标识符的作用域。划定原则就是声明于外层代码块中的标识符，其作用域包括所有内层代码块。但是，Go的这种作用域划定也带来了变量遮蔽问题。简单的遮蔽问题，我们通过分析代码可以很快找出，复杂的遮蔽问题，即便是通过go vet这样的静态代码分析工具也难于找全。</p><p>因此，我们只有了解变量遮蔽问题本质，在日常编写代码时注意同名变量的声明，注意短变量声明与控制语句的结合，才能从根源上尽量避免变量遮蔽问题的发生。</p><h2>思考题</h2><p>今天的思考题，你知道怎么来修正我们这节课最后那个复杂的变量遮蔽的例子吗？期待在留言区见到你的答案。</p><p>感谢你和我一起学习，也欢迎你把这节课分享给更多对Go语言感兴趣的朋友。我是Tony Bai，我们下节课见。</p>","neighbors":{"left":{"article_title":"10｜变量声明：静态语言有别于动态语言的重要特征","id":435858},"right":{"article_title":"12｜基本数据类型：Go原生支持的数值类型有哪些？","id":439782}},"comments":[{"had_liked":false,"id":320186,"user_name":"lesserror","can_delete":false,"product_type":"c1","uid":1351076,"ip_address":"","ucode":"25A54D1165FCF6","user_header":"https://static001.geekbang.org/account/avatar/00/14/9d/a4/e481ae48.jpg","comment_is_top":false,"comment_ctime":1636111970,"is_pvip":false,"replies":[{"id":116272,"content":"👍","user_name":"作者回复","user_name_real":"Tony Bai","uid":1026224,"ctime":1636427036,"ip_address":"","comment_id":320186,"utype":1}],"discussion_count":7,"race_medal":0,"score":2,"product_id":100093501,"comment_content":"关于这一块儿的知识其实还挺绕的。\n\n不同代码块中的重名变量与变量重声明中的变量区别到底在哪儿？为了方便描述，我就把不同代码块中的重名变量叫做“可重名变量”吧。注意，在同一个代码块中不允许出现重名的变量，这违背了 Go 语言的语法。关于这两者的表象和机理，我们已经讨论得足够充分了。你现在可以说出几条区别？请想一想，然后再看下面的列表。\n\n1. 变量重声明中的变量一定是在某一个代码块内的。注意，这里的“某一个代码块内”并不包含它的任何子代码块，否则就变成了“多个代码块之间”。而可重名变量指的正是在多个代码块之间由相同的标识符代表的变量。\n\n2. 变量重声明是对同一个变量的多次声明，这里的变量只有一个。而可重名变量中涉及的变量肯定是有多个的。\n\n3. 不论对变量重声明多少次，其类型必须始终一致，具体遵从它第一次被声明时给定的类型。而可重名变量之间不存在类似的限制，它们的类型可以是任意的。\n\n4. 如果可重名变量所在的代码块之间，存在直接或间接的嵌套关系，那么它们之间一定会存在“屏蔽”的现象。但是这种现象绝对不会在变量重声明的场景下出现。","like_count":12},{"had_liked":false,"id":320074,"user_name":"Amosヾ","can_delete":false,"product_type":"c1","uid":1567014,"ip_address":"","ucode":"833F6FCB4042AD","user_header":"https://static001.geekbang.org/account/avatar/00/17/e9/26/472e16e4.jpg","comment_is_top":false,"comment_ctime":1636076212,"is_pvip":true,"replies":[{"id":116244,"content":"不重名肯定不会遮蔽。但是实际编码中，一些常用的功能变量，比如表示错误的err、表示下标的i，表示key和value的k、v等，如果要做不同命名，很容易在代码中出现大量的k1,v1,k2,v2等，阅读起来总是感觉缺少了一些优雅感。不知你是否有同感。","user_name":"作者回复","user_name_real":"Tony Bai","uid":1026224,"ctime":1636422100,"ip_address":"","comment_id":320074,"utype":1}],"discussion_count":5,"race_medal":0,"score":2,"product_id":100093501,"comment_content":"可不可以通过变量尽量不重名来避免变量遮蔽呢？","like_count":9,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":529910,"discussion_content":"👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1636427036,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":3017168,"avatar":"https://static001.geekbang.org/account/avatar/00/2e/09/d0/8609bddc.jpg","nickname":"戒贪嗔痴","note":"","ucode":"D53EA3525DBD71","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":574759,"discussion_content":"还是看代码理解吧，你这车的，鬼扯","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1654322476,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1592279,"avatar":"https://static001.geekbang.org/account/avatar/00/18/4b/d7/f46c6dfd.jpg","nickname":"William Ning","note":"","ucode":"4DB8D05E69E5F3","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":572777,"discussion_content":"就一个字，越说越绕～","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1652952197,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2806043,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLBFkSq1oiaEMRjtyyv4ZpCI0OuaSsqs04ODm0OkZF6QhsAh3SvqhxibS2n7PLAVZE3QRSn5Hic0DyXg/132","nickname":"ddh","note":"","ucode":"8E852375365F16","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":413638,"discussion_content":"不仔细看都被你绕进去了，可重名变量，变量重声明。。。 为啥开发中感觉自然而然感觉很简单的问题，这总结的猛的一看，看不懂。。。 是不是我基础不扎实！！！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1636532004,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":3,"child_discussions":[{"author":{"id":1351076,"avatar":"https://static001.geekbang.org/account/avatar/00/14/9d/a4/e481ae48.jpg","nickname":"lesserror","note":"","ucode":"25A54D1165FCF6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2806043,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLBFkSq1oiaEMRjtyyv4ZpCI0OuaSsqs04ODm0OkZF6QhsAh3SvqhxibS2n7PLAVZE3QRSn5Hic0DyXg/132","nickname":"ddh","note":"","ucode":"8E852375365F16","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":414867,"discussion_content":"哈哈哈","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1636905564,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":413638,"ip_address":"","group_id":0},"score":414867,"extra":""},{"author":{"id":2354184,"avatar":"https://static001.geekbang.org/account/avatar/00/23/ec/08/68cf2f1b.jpg","nickname":"116153","note":"","ucode":"FDB596BA11A24C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2806043,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLBFkSq1oiaEMRjtyyv4ZpCI0OuaSsqs04ODm0OkZF6QhsAh3SvqhxibS2n7PLAVZE3QRSn5Hic0DyXg/132","nickname":"ddh","note":"","ucode":"8E852375365F16","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":560397,"discussion_content":"同感，本来就是一个变量多次赋值问题，讲了这么多新名词，反而变复杂了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1649314437,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":413638,"ip_address":"","group_id":0},"score":560397,"extra":""},{"author":{"id":1435913,"avatar":"https://static001.geekbang.org/account/avatar/00/15/e9/09/e39fde92.jpg","nickname":"cczywyc","note":"","ucode":"C4141007379250","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2806043,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLBFkSq1oiaEMRjtyyv4ZpCI0OuaSsqs04ODm0OkZF6QhsAh3SvqhxibS2n7PLAVZE3QRSn5Hic0DyXg/132","nickname":"ddh","note":"","ucode":"8E852375365F16","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":563885,"discussion_content":"他这里的这个评论是抄的另外一个go专栏的老师总结的，这里确实搞了很多新名词，太绕了","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1650103899,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":413638,"ip_address":"","group_id":0},"score":563885,"extra":""}]}]},{"had_liked":false,"id":324443,"user_name":"扣剑书生","can_delete":false,"product_type":"c1","uid":2855599,"ip_address":"","ucode":"6F5FD189D2916C","user_header":"https://static001.geekbang.org/account/avatar/00/2b/92/af/ad02ae4b.jpg","comment_is_top":false,"comment_ctime":1638436144,"is_pvip":false,"replies":[{"id":117976,"content":"👍","user_name":"作者回复","user_name_real":"编辑","uid":1026224,"ctime":1638829862,"ip_address":"","comment_id":324443,"utype":1}],"discussion_count":6,"race_medal":0,"score":2,"product_id":100093501,"comment_content":"func checkYear() error {\n\terr := errors.New(&quot;wrong year&quot;)\n\n\t&#47;&#47; 短变量形式，屏蔽了外层的包级变量 a，代替 其接收值\n\t&#47;&#47; err代替上面 的 err接收值\n\t\n\t&#47;&#47; 接收放在 switch 作用域外 \n\ta, err := getYear()\n\n\tswitch a {\n\tcase 2020:\n\t\tfmt.Println(&quot;哦哦哦it is&quot;, a, err)\n\tcase 2021:\n\t\tfmt.Println(&quot;it is&quot;, a)\n\t\terr = nil\n\t}\n\tfmt.Println(&quot;after check, it is&quot;, a)\n\treturn err\n}","like_count":8,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":529863,"discussion_content":"不重名肯定不会遮蔽。但是实际编码中，一些常用的功能变量，比如表示错误的err、表示下标的i，表示key和value的k、v等，如果要做不同命名，很容易在代码中出现大量的k1,v1,k2,v2等，阅读起来总是感觉缺少了一些优雅感。不知你是否有同感。","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1636422100,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1479120,"avatar":"https://static001.geekbang.org/account/avatar/00/16/91/d0/35bc62b1.jpg","nickname":"无咎","note":"","ucode":"B9759B5646F3AB","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":602084,"discussion_content":"代码块的变量作用域是在编译器实现的，一是为了安全，二是可读性问题。尽量写简洁短小的代码来避免变量遮蔽问题。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1675663712,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1819176,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/c2/28/32fdc447.jpg","nickname":"newchaos","note":"","ucode":"EBC1909694A0F4","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":653574,"discussion_content":"mark","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1731238735,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1592279,"avatar":"https://static001.geekbang.org/account/avatar/00/18/4b/d7/f46c6dfd.jpg","nickname":"William Ning","note":"","ucode":"4DB8D05E69E5F3","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":556375,"discussion_content":"又看了一遍，果然看一遍是记不住的，平时主要写PHP代码，因为只支持函数作用域，所以，不会出现上面的问题，而且使用重名的变量好处之一，减少内存占用。\n所以，老师，同学，我想问，划分这么细的作用域的目的是什么呢？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1647334082,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1592279,"avatar":"https://static001.geekbang.org/account/avatar/00/18/4b/d7/f46c6dfd.jpg","nickname":"William Ning","note":"","ucode":"4DB8D05E69E5F3","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":553552,"discussion_content":"哈哈 我觉得还好呀","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1645965442,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":321245,"user_name":"文经","can_delete":false,"product_type":"c1","uid":1072346,"ip_address":"","ucode":"2C059BD2A4276B","user_header":"https://static001.geekbang.org/account/avatar/00/10/5c/da/0a8bc27b.jpg","comment_is_top":false,"comment_ctime":1636724269,"is_pvip":true,"replies":[{"id":116792,"content":"也算是一个办法。前提是明确规则，且大家都遵守。这样才能在协作中，减少遮蔽问题的发生频度。","user_name":"作者回复","user_name_real":"Tony Bai","uid":1026224,"ctime":1636966243,"ip_address":"","comment_id":321245,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100093501,"comment_content":"约定号包级别的变量用长的名字，越是局部的变量用越短小的名字，应该能够解决一大部分变量zhe遮蔽的问题。","like_count":7,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":530250,"discussion_content":"也算是一个办法。前提是明确规则，且大家都遵守。这样才能在协作中，减少遮蔽问题的发生频度。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1636966243,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":320292,"user_name":"程旭阳","can_delete":false,"product_type":"c1","uid":1027691,"ip_address":"","ucode":"54BEAD957CEF21","user_header":"https://static001.geekbang.org/account/avatar/00/0f/ae/6b/b72b0d90.jpg","comment_is_top":false,"comment_ctime":1636204353,"is_pvip":true,"replies":[{"id":116269,"content":"正确✅","user_name":"作者回复","user_name_real":"Tony Bai","uid":1026224,"ctime":1636426577,"ip_address":"","comment_id":320292,"utype":1}],"discussion_count":3,"race_medal":0,"score":2,"product_id":100093501,"comment_content":"go1.17.1 `type new int`会报错： \ncannot assign new to a (type int) in multiple assignment\ncannot use new value as type int in assignment\n修改为 `type new = int` 之后不再报错\n\n思考题解决方法：\npackage main\n\nimport (\n    &quot;fmt&quot;\n    &quot;errors&quot;\n)\n\nvar a int = 2020\n\nfunc checkYear() error {\n\n    err := errors.New(&quot;wrong year&quot;)\n\n    switch a, err = getYear(); a {\n    case 2020:\n        fmt.Println(&quot;it is&quot;, a, err)\n    case 2021:\n        fmt.Println(&quot;it is&quot;, a)\n        err = nil\n    }\n    fmt.Println(&quot;after check, it is&quot;, a)\n    return err\n}\n\ntype year = int\n\nfunc getYear() (year, error) {\n    var b int16 = 2021\n    return year(b), nil\n}\n\nfunc main() {\n    err := checkYear()\n    if err != nil {\n        fmt.Println(&quot;call checkYear error:&quot;, err)\n        return\n    }\n    fmt.Println(&quot;call checkYear ok&quot;)\n}","like_count":6,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":554576,"discussion_content":"好问题！不过这是编程语言设计范畴的问题，我不是编程语言设计专家，不能从原理上给予解释。但从目前情况来看，似乎没有哪门编程语言禁止不同作用域的同名变量声明，显然这是一个语言设计与实现的惯例。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1646472374,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":364354,"user_name":"子杨","can_delete":false,"product_type":"c1","uid":1236803,"ip_address":"辽宁","ucode":"EA7555EEE6DECE","user_header":"https://static001.geekbang.org/account/avatar/00/12/df/43/1aa8708a.jpg","comment_is_top":false,"comment_ctime":1670890106,"is_pvip":false,"replies":[{"id":132521,"content":"预定义标识符可以被重新定义。\n\n比如\nvar new int = 5\n\n这时new就是一个变量。\n\n但关键字不可以做标识符。\n\n你不能用for作为变量名：\n\nvar for int  = 5 &#47;&#47; error","user_name":"作者回复","user_name_real":"编辑","uid":1026224,"ctime":1671141282,"ip_address":"辽宁","comment_id":364354,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100093501,"comment_content":"「作者回复: 一旦“禁止用预定义标识符定义新类型或者变量的行为”，那么new这样的预定义标识符就和关键字没啥区别了。」\n\n想请问老师，预定义标识符和关键字的区别是啥？","like_count":5,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":616849,"discussion_content":"正解✅","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1683154100,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"辽宁","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":336437,"user_name":"Rayjun","can_delete":false,"product_type":"c1","uid":1002514,"ip_address":"","ucode":"61A3D1A3D03569","user_header":"https://static001.geekbang.org/account/avatar/00/0f/4c/12/f0c145d4.jpg","comment_is_top":false,"comment_ctime":1646146202,"is_pvip":false,"replies":[{"id":123108,"content":"好问题！不过这是编程语言设计范畴的问题，我不是编程语言设计专家，不能从原理上给予解释。但从目前情况来看，似乎没有哪门编程语言禁止不同作用域的同名变量声明，显然这是一个语言设计与实现的惯例。","user_name":"作者回复","user_name_real":"编辑","uid":1026224,"ctime":1646472373,"ip_address":"","comment_id":336437,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100093501,"comment_content":"老师，这里我还有一个问题，我发现如果是在同级的作用域中，声明两个一样的变量就会报错，但是在不同级的作用域中就不会，那么 go 语言为何不禁止同名变量的声明，这样不就可以解决变量遮蔽的问题么","like_count":4,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":584784,"discussion_content":"其实这是一个编程通用原则，利于提升可读性","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1661135535,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":373588,"user_name":"615","can_delete":false,"product_type":"c1","uid":1159871,"ip_address":"北京","ucode":"1F04CDC9966F72","user_header":"https://static001.geekbang.org/account/avatar/00/11/b2/bf/aea9e7c6.jpg","comment_is_top":false,"comment_ctime":1682722728,"is_pvip":false,"replies":[{"id":136550,"content":"正解✅","user_name":"作者回复","user_name_real":"编辑","uid":1026224,"ctime":1683154100,"ip_address":"辽宁","comment_id":373588,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100093501,"comment_content":"刚细翻看了下go语言圣经，switch里的a和err确实是新声明的而不存在赋值行为，因为重新赋值行为只存在于变量已经在相同block中声明过。","like_count":3,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":616849,"discussion_content":"正解✅","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1683154100,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"辽宁","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":355098,"user_name":"🐎","can_delete":false,"product_type":"c1","uid":1054094,"ip_address":"北京","ucode":"DD325A4DD40153","user_header":"https://static001.geekbang.org/account/avatar/00/10/15/8e/8fc00a53.jpg","comment_is_top":false,"comment_ctime":1661076618,"is_pvip":false,"replies":[{"id":129211,"content":"其实这是一个编程通用原则，利于提升可读性","user_name":"作者回复","user_name_real":"编辑","uid":1026224,"ctime":1661135535,"ip_address":"北京","comment_id":355098,"utype":1}],"discussion_count":1,"race_medal":1,"score":2,"product_id":100093501,"comment_content":"感觉和js一样，变量就近使用","like_count":3,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":584784,"discussion_content":"其实这是一个编程通用原则，利于提升可读性","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1661135535,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":320268,"user_name":"Rayjun","can_delete":false,"product_type":"c1","uid":1002514,"ip_address":"","ucode":"61A3D1A3D03569","user_header":"https://static001.geekbang.org/account/avatar/00/0f/4c/12/f0c145d4.jpg","comment_is_top":false,"comment_ctime":1636188969,"is_pvip":false,"replies":[{"id":116271,"content":"有一点提醒一下：既然我们知道了new是预定义的标识符，我们在日常编写代码中尽量要避免重新定义new.","user_name":"作者回复","user_name_real":"Tony Bai","uid":1026224,"ctime":1636426850,"ip_address":"","comment_id":320268,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100093501,"comment_content":"修改两个地方，把 a 的类型改成 new，并 去掉 switch 那的一个引号\n\nvar a new = 2020 \n\nfunc checkYear() error { \n\terr := errors.New(&quot;wrong year&quot;) \n\tswitch a, err = getYear(); a { \n\tcase 2020: \n\t\tfmt.Println(&quot;it is&quot;, a, err) \n\tcase 2021: \n\t\tfmt.Println(&quot;it is&quot;, a) \n\t\terr = nil \n\t} \n\tfmt.Println(&quot;after check, it is&quot;, a) \n\treturn err \n} \n\ntype new int \n\nfunc getYear() (new, error) { \n\tvar b int16 = 2021 \n\treturn new(b), nil \n} \n\nfunc main() { \n\terr := checkYear() \n\tif err != nil { \n\t\tfmt.Println(&quot;call checkYear error:&quot;, err) \n\t\treturn \n\t} \n\tfmt.Println(&quot;call checkYear ok&quot;) \n}","like_count":3,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":529934,"discussion_content":"有一点提醒一下：既然我们知道了new是预定义的标识符，我们在日常编写代码中尽量要避免重新定义new.","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1636426850,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":320186,"user_name":"lesserror","can_delete":false,"product_type":"c1","uid":1351076,"ip_address":"","ucode":"25A54D1165FCF6","user_header":"https://static001.geekbang.org/account/avatar/00/14/9d/a4/e481ae48.jpg","comment_is_top":false,"comment_ctime":1636111970,"is_pvip":false,"replies":[{"id":116272,"content":"👍","user_name":"作者回复","user_name_real":"Tony Bai","uid":1026224,"ctime":1636427036,"ip_address":"","comment_id":320186,"utype":1}],"discussion_count":7,"race_medal":0,"score":2,"product_id":100093501,"comment_content":"关于这一块儿的知识其实还挺绕的。\n\n不同代码块中的重名变量与变量重声明中的变量区别到底在哪儿？为了方便描述，我就把不同代码块中的重名变量叫做“可重名变量”吧。注意，在同一个代码块中不允许出现重名的变量，这违背了 Go 语言的语法。关于这两者的表象和机理，我们已经讨论得足够充分了。你现在可以说出几条区别？请想一想，然后再看下面的列表。\n\n1. 变量重声明中的变量一定是在某一个代码块内的。注意，这里的“某一个代码块内”并不包含它的任何子代码块，否则就变成了“多个代码块之间”。而可重名变量指的正是在多个代码块之间由相同的标识符代表的变量。\n\n2. 变量重声明是对同一个变量的多次声明，这里的变量只有一个。而可重名变量中涉及的变量肯定是有多个的。\n\n3. 不论对变量重声明多少次，其类型必须始终一致，具体遵从它第一次被声明时给定的类型。而可重名变量之间不存在类似的限制，它们的类型可以是任意的。\n\n4. 如果可重名变量所在的代码块之间，存在直接或间接的嵌套关系，那么它们之间一定会存在“屏蔽”的现象。但是这种现象绝对不会在变量重声明的场景下出现。","like_count":12,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":529910,"discussion_content":"👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1636427036,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":3017168,"avatar":"https://static001.geekbang.org/account/avatar/00/2e/09/d0/8609bddc.jpg","nickname":"戒贪嗔痴","note":"","ucode":"D53EA3525DBD71","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":574759,"discussion_content":"还是看代码理解吧，你这车的，鬼扯","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1654322476,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1592279,"avatar":"https://static001.geekbang.org/account/avatar/00/18/4b/d7/f46c6dfd.jpg","nickname":"William Ning","note":"","ucode":"4DB8D05E69E5F3","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":572777,"discussion_content":"就一个字，越说越绕～","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1652952197,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2806043,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLBFkSq1oiaEMRjtyyv4ZpCI0OuaSsqs04ODm0OkZF6QhsAh3SvqhxibS2n7PLAVZE3QRSn5Hic0DyXg/132","nickname":"ddh","note":"","ucode":"8E852375365F16","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":413638,"discussion_content":"不仔细看都被你绕进去了，可重名变量，变量重声明。。。 为啥开发中感觉自然而然感觉很简单的问题，这总结的猛的一看，看不懂。。。 是不是我基础不扎实！！！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1636532004,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":3,"child_discussions":[{"author":{"id":1351076,"avatar":"https://static001.geekbang.org/account/avatar/00/14/9d/a4/e481ae48.jpg","nickname":"lesserror","note":"","ucode":"25A54D1165FCF6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2806043,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLBFkSq1oiaEMRjtyyv4ZpCI0OuaSsqs04ODm0OkZF6QhsAh3SvqhxibS2n7PLAVZE3QRSn5Hic0DyXg/132","nickname":"ddh","note":"","ucode":"8E852375365F16","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":414867,"discussion_content":"哈哈哈","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1636905564,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":413638,"ip_address":"","group_id":0},"score":414867,"extra":""},{"author":{"id":2354184,"avatar":"https://static001.geekbang.org/account/avatar/00/23/ec/08/68cf2f1b.jpg","nickname":"116153","note":"","ucode":"FDB596BA11A24C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2806043,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLBFkSq1oiaEMRjtyyv4ZpCI0OuaSsqs04ODm0OkZF6QhsAh3SvqhxibS2n7PLAVZE3QRSn5Hic0DyXg/132","nickname":"ddh","note":"","ucode":"8E852375365F16","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":560397,"discussion_content":"同感，本来就是一个变量多次赋值问题，讲了这么多新名词，反而变复杂了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1649314437,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":413638,"ip_address":"","group_id":0},"score":560397,"extra":""},{"author":{"id":1435913,"avatar":"https://static001.geekbang.org/account/avatar/00/15/e9/09/e39fde92.jpg","nickname":"cczywyc","note":"","ucode":"C4141007379250","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2806043,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLBFkSq1oiaEMRjtyyv4ZpCI0OuaSsqs04ODm0OkZF6QhsAh3SvqhxibS2n7PLAVZE3QRSn5Hic0DyXg/132","nickname":"ddh","note":"","ucode":"8E852375365F16","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":563885,"discussion_content":"他这里的这个评论是抄的另外一个go专栏的老师总结的，这里确实搞了很多新名词，太绕了","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1650103899,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":413638,"ip_address":"","group_id":0},"score":563885,"extra":""}]}]},{"had_liked":false,"id":320074,"user_name":"Amosヾ","can_delete":false,"product_type":"c1","uid":1567014,"ip_address":"","ucode":"833F6FCB4042AD","user_header":"https://static001.geekbang.org/account/avatar/00/17/e9/26/472e16e4.jpg","comment_is_top":false,"comment_ctime":1636076212,"is_pvip":true,"replies":[{"id":116244,"content":"不重名肯定不会遮蔽。但是实际编码中，一些常用的功能变量，比如表示错误的err、表示下标的i，表示key和value的k、v等，如果要做不同命名，很容易在代码中出现大量的k1,v1,k2,v2等，阅读起来总是感觉缺少了一些优雅感。不知你是否有同感。","user_name":"作者回复","user_name_real":"Tony Bai","uid":1026224,"ctime":1636422100,"ip_address":"","comment_id":320074,"utype":1}],"discussion_count":5,"race_medal":0,"score":2,"product_id":100093501,"comment_content":"可不可以通过变量尽量不重名来避免变量遮蔽呢？","like_count":9,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":529863,"discussion_content":"不重名肯定不会遮蔽。但是实际编码中，一些常用的功能变量，比如表示错误的err、表示下标的i，表示key和value的k、v等，如果要做不同命名，很容易在代码中出现大量的k1,v1,k2,v2等，阅读起来总是感觉缺少了一些优雅感。不知你是否有同感。","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1636422100,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1479120,"avatar":"https://static001.geekbang.org/account/avatar/00/16/91/d0/35bc62b1.jpg","nickname":"无咎","note":"","ucode":"B9759B5646F3AB","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":602084,"discussion_content":"代码块的变量作用域是在编译器实现的，一是为了安全，二是可读性问题。尽量写简洁短小的代码来避免变量遮蔽问题。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1675663712,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1819176,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/c2/28/32fdc447.jpg","nickname":"newchaos","note":"","ucode":"EBC1909694A0F4","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":653574,"discussion_content":"mark","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1731238735,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1592279,"avatar":"https://static001.geekbang.org/account/avatar/00/18/4b/d7/f46c6dfd.jpg","nickname":"William Ning","note":"","ucode":"4DB8D05E69E5F3","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":556375,"discussion_content":"又看了一遍，果然看一遍是记不住的，平时主要写PHP代码，因为只支持函数作用域，所以，不会出现上面的问题，而且使用重名的变量好处之一，减少内存占用。\n所以，老师，同学，我想问，划分这么细的作用域的目的是什么呢？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1647334082,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1592279,"avatar":"https://static001.geekbang.org/account/avatar/00/18/4b/d7/f46c6dfd.jpg","nickname":"William Ning","note":"","ucode":"4DB8D05E69E5F3","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":553552,"discussion_content":"哈哈 我觉得还好呀","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1645965442,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":324443,"user_name":"扣剑书生","can_delete":false,"product_type":"c1","uid":2855599,"ip_address":"","ucode":"6F5FD189D2916C","user_header":"https://static001.geekbang.org/account/avatar/00/2b/92/af/ad02ae4b.jpg","comment_is_top":false,"comment_ctime":1638436144,"is_pvip":false,"replies":[{"id":117976,"content":"👍","user_name":"作者回复","user_name_real":"编辑","uid":1026224,"ctime":1638829862,"ip_address":"","comment_id":324443,"utype":1}],"discussion_count":6,"race_medal":0,"score":2,"product_id":100093501,"comment_content":"func checkYear() error {\n\terr := errors.New(&quot;wrong year&quot;)\n\n\t&#47;&#47; 短变量形式，屏蔽了外层的包级变量 a，代替 其接收值\n\t&#47;&#47; err代替上面 的 err接收值\n\t\n\t&#47;&#47; 接收放在 switch 作用域外 \n\ta, err := getYear()\n\n\tswitch a {\n\tcase 2020:\n\t\tfmt.Println(&quot;哦哦哦it is&quot;, a, err)\n\tcase 2021:\n\t\tfmt.Println(&quot;it is&quot;, a)\n\t\terr = nil\n\t}\n\tfmt.Println(&quot;after check, it is&quot;, a)\n\treturn err\n}","like_count":8,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":536603,"discussion_content":"👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1638829862,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2831170,"avatar":"","nickname":"Geek_8de965","note":"","ucode":"75880FD1790C37","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":576424,"discussion_content":"这样写的话，a和包变量不是同一个，但是err和局部变量是同一个。并且我试了下，:=这种方式，左侧必须至少有一个新变量声明，否则编译不过","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1655536682,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2831170,"avatar":"","nickname":"Geek_8de965","note":"","ucode":"75880FD1790C37","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":629651,"discussion_content":"cool","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1697468565,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":576424,"ip_address":"广东","group_id":0},"score":629651,"extra":""}]},{"author":{"id":1917663,"avatar":"https://static001.geekbang.org/account/avatar/00/1d/42/df/a034455d.jpg","nickname":"罗耀龙@坐忘","note":"","ucode":"3CEA258DE7F3C7","race_medal":2,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":618501,"discussion_content":"漏了，gerYear返回的第一项是new，但a是int","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1684295540,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"广东","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1592279,"avatar":"https://static001.geekbang.org/account/avatar/00/18/4b/d7/f46c6dfd.jpg","nickname":"William Ning","note":"","ucode":"4DB8D05E69E5F3","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":572783,"discussion_content":"FYI\n不能简单将a, err := getYear();提到switch外面，否则输出不一致，需要加个{}包裹起来\n\n下面是修改的代码，输出结果保持一致\nfunc checkYearExplain() error {\n\terr := errors.New(&#34;wrong year&#34;)\n\n\t{\n\t\ta, err := getYear()\n\t\tswitch a {\n\t\tcase 2020:\n\t\t\t{\n\t\t\t\tfmt.Println(&#34;it is&#34;, a, err)\n\t\t\t}\n\t\tcase 2021:\n\t\t\t{\n\t\t\t\tfmt.Println(&#34;it is&#34;, a)\n\t\t\t\terr = nil\n\t\t\t}\n\t\t}\n\t}\n\n\tfmt.Println(&#34;after check, it is&#34;, a)\n\treturn err\n}\n\n➜  golearning go run demo1.go \nit is 2021\nafter check, it is 2020\ncall checkYear error: wrong year\n➜  golearning go run demo1.go\nit is 2021\nafter check, it is 2020\ncall checkYear error: wrong year\n➜  golearning ","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1652953061,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1976226,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/27/a2/7a988137.jpg","nickname":"Air 航迹","note":"","ucode":"AAE48AF6E82EF6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1592279,"avatar":"https://static001.geekbang.org/account/avatar/00/18/4b/d7/f46c6dfd.jpg","nickname":"William Ning","note":"","ucode":"4DB8D05E69E5F3","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":608958,"discussion_content":"你这样的话，a还是回到被屏蔽的状态","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1678759112,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":572783,"ip_address":"山东","group_id":0},"score":608958,"extra":""}]}]},{"had_liked":false,"id":321245,"user_name":"文经","can_delete":false,"product_type":"c1","uid":1072346,"ip_address":"","ucode":"2C059BD2A4276B","user_header":"https://static001.geekbang.org/account/avatar/00/10/5c/da/0a8bc27b.jpg","comment_is_top":false,"comment_ctime":1636724269,"is_pvip":true,"replies":[{"id":116792,"content":"也算是一个办法。前提是明确规则，且大家都遵守。这样才能在协作中，减少遮蔽问题的发生频度。","user_name":"作者回复","user_name_real":"Tony Bai","uid":1026224,"ctime":1636966243,"ip_address":"","comment_id":321245,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100093501,"comment_content":"约定号包级别的变量用长的名字，越是局部的变量用越短小的名字，应该能够解决一大部分变量zhe遮蔽的问题。","like_count":7,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":536603,"discussion_content":"👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1638829862,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2831170,"avatar":"","nickname":"Geek_8de965","note":"","ucode":"75880FD1790C37","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":576424,"discussion_content":"这样写的话，a和包变量不是同一个，但是err和局部变量是同一个。并且我试了下，:=这种方式，左侧必须至少有一个新变量声明，否则编译不过","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1655536682,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2831170,"avatar":"","nickname":"Geek_8de965","note":"","ucode":"75880FD1790C37","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":629651,"discussion_content":"cool","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1697468565,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":576424,"ip_address":"广东","group_id":0},"score":629651,"extra":""}]},{"author":{"id":1917663,"avatar":"https://static001.geekbang.org/account/avatar/00/1d/42/df/a034455d.jpg","nickname":"罗耀龙@坐忘","note":"","ucode":"3CEA258DE7F3C7","race_medal":2,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":618501,"discussion_content":"漏了，gerYear返回的第一项是new，但a是int","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1684295540,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"广东","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1592279,"avatar":"https://static001.geekbang.org/account/avatar/00/18/4b/d7/f46c6dfd.jpg","nickname":"William Ning","note":"","ucode":"4DB8D05E69E5F3","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":572783,"discussion_content":"FYI\n不能简单将a, err := getYear();提到switch外面，否则输出不一致，需要加个{}包裹起来\n\n下面是修改的代码，输出结果保持一致\nfunc checkYearExplain() error {\n\terr := errors.New(&#34;wrong year&#34;)\n\n\t{\n\t\ta, err := getYear()\n\t\tswitch a {\n\t\tcase 2020:\n\t\t\t{\n\t\t\t\tfmt.Println(&#34;it is&#34;, a, err)\n\t\t\t}\n\t\tcase 2021:\n\t\t\t{\n\t\t\t\tfmt.Println(&#34;it is&#34;, a)\n\t\t\t\terr = nil\n\t\t\t}\n\t\t}\n\t}\n\n\tfmt.Println(&#34;after check, it is&#34;, a)\n\treturn err\n}\n\n➜  golearning go run demo1.go \nit is 2021\nafter check, it is 2020\ncall checkYear error: wrong year\n➜  golearning go run demo1.go\nit is 2021\nafter check, it is 2020\ncall checkYear error: wrong year\n➜  golearning ","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1652953061,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1976226,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/27/a2/7a988137.jpg","nickname":"Air 航迹","note":"","ucode":"AAE48AF6E82EF6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1592279,"avatar":"https://static001.geekbang.org/account/avatar/00/18/4b/d7/f46c6dfd.jpg","nickname":"William Ning","note":"","ucode":"4DB8D05E69E5F3","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":608958,"discussion_content":"你这样的话，a还是回到被屏蔽的状态","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1678759112,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":572783,"ip_address":"山东","group_id":0},"score":608958,"extra":""}]}]},{"had_liked":false,"id":320292,"user_name":"程旭阳","can_delete":false,"product_type":"c1","uid":1027691,"ip_address":"","ucode":"54BEAD957CEF21","user_header":"https://static001.geekbang.org/account/avatar/00/0f/ae/6b/b72b0d90.jpg","comment_is_top":false,"comment_ctime":1636204353,"is_pvip":true,"replies":[{"id":116269,"content":"正确✅","user_name":"作者回复","user_name_real":"Tony Bai","uid":1026224,"ctime":1636426577,"ip_address":"","comment_id":320292,"utype":1}],"discussion_count":3,"race_medal":0,"score":2,"product_id":100093501,"comment_content":"go1.17.1 `type new int`会报错： \ncannot assign new to a (type int) in multiple assignment\ncannot use new value as type int in assignment\n修改为 `type new = int` 之后不再报错\n\n思考题解决方法：\npackage main\n\nimport (\n    &quot;fmt&quot;\n    &quot;errors&quot;\n)\n\nvar a int = 2020\n\nfunc checkYear() error {\n\n    err := errors.New(&quot;wrong year&quot;)\n\n    switch a, err = getYear(); a {\n    case 2020:\n        fmt.Println(&quot;it is&quot;, a, err)\n    case 2021:\n        fmt.Println(&quot;it is&quot;, a)\n        err = nil\n    }\n    fmt.Println(&quot;after check, it is&quot;, a)\n    return err\n}\n\ntype year = int\n\nfunc getYear() (year, error) {\n    var b int16 = 2021\n    return year(b), nil\n}\n\nfunc main() {\n    err := checkYear()\n    if err != nil {\n        fmt.Println(&quot;call checkYear error:&quot;, err)\n        return\n    }\n    fmt.Println(&quot;call checkYear ok&quot;)\n}","like_count":6,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":529942,"discussion_content":"正确✅","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1636426577,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1006786,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/5c/c2/8ffd2ad0.jpg","nickname":"qqq","note":"","ucode":"91B0ACF8CBE7BD","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":555913,"discussion_content":"switch 关键字那一行少了个冒号，声明变成了赋值","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1647099077,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1592279,"avatar":"https://static001.geekbang.org/account/avatar/00/18/4b/d7/f46c6dfd.jpg","nickname":"William Ning","note":"","ucode":"4DB8D05E69E5F3","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":572784,"discussion_content":"type new int 我本地执行，并没有看到报错？TBD\n\n➜  golearning go run demo1.go\nit is 2021\nafter check, it is 2020\ncall checkYear error: wrong year\n➜  golearning go version\ngo version go1.17.6 darwin/amd64\n➜  golearning ","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1652953197,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":364354,"user_name":"子杨","can_delete":false,"product_type":"c1","uid":1236803,"ip_address":"辽宁","ucode":"EA7555EEE6DECE","user_header":"https://static001.geekbang.org/account/avatar/00/12/df/43/1aa8708a.jpg","comment_is_top":false,"comment_ctime":1670890106,"is_pvip":false,"replies":[{"id":132521,"content":"预定义标识符可以被重新定义。\n\n比如\nvar new int = 5\n\n这时new就是一个变量。\n\n但关键字不可以做标识符。\n\n你不能用for作为变量名：\n\nvar for int  = 5 &#47;&#47; error","user_name":"作者回复","user_name_real":"编辑","uid":1026224,"ctime":1671141282,"ip_address":"辽宁","comment_id":364354,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100093501,"comment_content":"「作者回复: 一旦“禁止用预定义标识符定义新类型或者变量的行为”，那么new这样的预定义标识符就和关键字没啥区别了。」\n\n想请问老师，预定义标识符和关键字的区别是啥？","like_count":5,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":596624,"discussion_content":"预定义标识符可以被重新定义。\n\n比如\nvar new int = 5\n\n这时new就是一个变量。\n\n但关键字不可以做标识符。\n\n你不能用for作为变量名：\n\nvar for int  = 5 // error","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1671141282,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"辽宁","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":336437,"user_name":"Rayjun","can_delete":false,"product_type":"c1","uid":1002514,"ip_address":"","ucode":"61A3D1A3D03569","user_header":"https://static001.geekbang.org/account/avatar/00/0f/4c/12/f0c145d4.jpg","comment_is_top":false,"comment_ctime":1646146202,"is_pvip":false,"replies":[{"id":123108,"content":"好问题！不过这是编程语言设计范畴的问题，我不是编程语言设计专家，不能从原理上给予解释。但从目前情况来看，似乎没有哪门编程语言禁止不同作用域的同名变量声明，显然这是一个语言设计与实现的惯例。","user_name":"作者回复","user_name_real":"编辑","uid":1026224,"ctime":1646472373,"ip_address":"","comment_id":336437,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100093501,"comment_content":"老师，这里我还有一个问题，我发现如果是在同级的作用域中，声明两个一样的变量就会报错，但是在不同级的作用域中就不会，那么 go 语言为何不禁止同名变量的声明，这样不就可以解决变量遮蔽的问题么","like_count":4,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":530250,"discussion_content":"也算是一个办法。前提是明确规则，且大家都遵守。这样才能在协作中，减少遮蔽问题的发生频度。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1636966243,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":373588,"user_name":"615","can_delete":false,"product_type":"c1","uid":1159871,"ip_address":"北京","ucode":"1F04CDC9966F72","user_header":"https://static001.geekbang.org/account/avatar/00/11/b2/bf/aea9e7c6.jpg","comment_is_top":false,"comment_ctime":1682722728,"is_pvip":false,"replies":[{"id":136550,"content":"正解✅","user_name":"作者回复","user_name_real":"编辑","uid":1026224,"ctime":1683154100,"ip_address":"辽宁","comment_id":373588,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100093501,"comment_content":"刚细翻看了下go语言圣经，switch里的a和err确实是新声明的而不存在赋值行为，因为重新赋值行为只存在于变量已经在相同block中声明过。","like_count":3,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":529942,"discussion_content":"正确✅","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1636426577,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1006786,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/5c/c2/8ffd2ad0.jpg","nickname":"qqq","note":"","ucode":"91B0ACF8CBE7BD","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":555913,"discussion_content":"switch 关键字那一行少了个冒号，声明变成了赋值","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1647099077,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1592279,"avatar":"https://static001.geekbang.org/account/avatar/00/18/4b/d7/f46c6dfd.jpg","nickname":"William Ning","note":"","ucode":"4DB8D05E69E5F3","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":572784,"discussion_content":"type new int 我本地执行，并没有看到报错？TBD\n\n➜  golearning go run demo1.go\nit is 2021\nafter check, it is 2020\ncall checkYear error: wrong year\n➜  golearning go version\ngo version go1.17.6 darwin/amd64\n➜  golearning ","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1652953197,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":355098,"user_name":"🐎","can_delete":false,"product_type":"c1","uid":1054094,"ip_address":"北京","ucode":"DD325A4DD40153","user_header":"https://static001.geekbang.org/account/avatar/00/10/15/8e/8fc00a53.jpg","comment_is_top":false,"comment_ctime":1661076618,"is_pvip":false,"replies":[{"id":129211,"content":"其实这是一个编程通用原则，利于提升可读性","user_name":"作者回复","user_name_real":"编辑","uid":1026224,"ctime":1661135535,"ip_address":"北京","comment_id":355098,"utype":1}],"discussion_count":1,"race_medal":1,"score":2,"product_id":100093501,"comment_content":"感觉和js一样，变量就近使用","like_count":3,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":596624,"discussion_content":"预定义标识符可以被重新定义。\n\n比如\nvar new int = 5\n\n这时new就是一个变量。\n\n但关键字不可以做标识符。\n\n你不能用for作为变量名：\n\nvar for int  = 5 // error","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1671141282,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"辽宁","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":320268,"user_name":"Rayjun","can_delete":false,"product_type":"c1","uid":1002514,"ip_address":"","ucode":"61A3D1A3D03569","user_header":"https://static001.geekbang.org/account/avatar/00/0f/4c/12/f0c145d4.jpg","comment_is_top":false,"comment_ctime":1636188969,"is_pvip":false,"replies":[{"id":116271,"content":"有一点提醒一下：既然我们知道了new是预定义的标识符，我们在日常编写代码中尽量要避免重新定义new.","user_name":"作者回复","user_name_real":"Tony Bai","uid":1026224,"ctime":1636426850,"ip_address":"","comment_id":320268,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100093501,"comment_content":"修改两个地方，把 a 的类型改成 new，并 去掉 switch 那的一个引号\n\nvar a new = 2020 \n\nfunc checkYear() error { \n\terr := errors.New(&quot;wrong year&quot;) \n\tswitch a, err = getYear(); a { \n\tcase 2020: \n\t\tfmt.Println(&quot;it is&quot;, a, err) \n\tcase 2021: \n\t\tfmt.Println(&quot;it is&quot;, a) \n\t\terr = nil \n\t} \n\tfmt.Println(&quot;after check, it is&quot;, a) \n\treturn err \n} \n\ntype new int \n\nfunc getYear() (new, error) { \n\tvar b int16 = 2021 \n\treturn new(b), nil \n} \n\nfunc main() { \n\terr := checkYear() \n\tif err != nil { \n\t\tfmt.Println(&quot;call checkYear error:&quot;, err) \n\t\treturn \n\t} \n\tfmt.Println(&quot;call checkYear ok&quot;) \n}","like_count":3,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":554576,"discussion_content":"好问题！不过这是编程语言设计范畴的问题，我不是编程语言设计专家，不能从原理上给予解释。但从目前情况来看，似乎没有哪门编程语言禁止不同作用域的同名变量声明，显然这是一个语言设计与实现的惯例。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1646472374,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":339792,"user_name":"史努比","can_delete":false,"product_type":"c1","uid":1922171,"ip_address":"","ucode":"20D1EC05778BC6","user_header":"https://static001.geekbang.org/account/avatar/00/1d/54/7b/780c04ff.jpg","comment_is_top":false,"comment_ctime":1648387627,"is_pvip":false,"replies":[{"id":124189,"content":"我倒是觉得“宇宙代码块”更形象生动罒ω罒。否则go官方也不会用universe block，而会用global block了。\n\n另外代码块不要与作用域混淆。包代码块中声明的首字母大写的标识符实际是也是拥有全局作用域的，可以被任意其他代码所引用的。","user_name":"作者回复","user_name_real":"编辑","uid":1026224,"ctime":1648425359,"ip_address":"","comment_id":339792,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100093501,"comment_content":"Universe Block是不是翻译成“全局代码块”更贴切一些，“宇宙代码块”总觉得怪怪的。","like_count":2},{"had_liked":false,"id":330851,"user_name":"独钓寒江","can_delete":false,"product_type":"c1","uid":2812836,"ip_address":"","ucode":"53C15891B7E800","user_header":"https://static001.geekbang.org/account/avatar/00/2a/eb/a4/b247e9b7.jpg","comment_is_top":false,"comment_ctime":1642223902,"is_pvip":false,"replies":[{"id":121587,"content":"一旦“禁止用预定义标识符定义新类型或者变量的行为”，那么new这样的预定义标识符就和关键字没啥区别了。","user_name":"作者回复","user_name_real":"编辑","uid":1026224,"ctime":1643521917,"ip_address":"","comment_id":330851,"utype":1}],"discussion_count":2,"race_medal":0,"score":3,"product_id":100093501,"comment_content":"“位于第 18 行的 new，这本是 Go 语言的一个预定义标识符，但上面示例代码呢，却用 new 这个名字定义了一个新类型，于是 new 这个标识符就被遮蔽了”\n为什么不禁止用预定义标识符定义新类型或者变量的行为呢？","like_count":2,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":558630,"discussion_content":"我倒是觉得“宇宙代码块”更形象生动罒ω罒。否则go官方也不会用universe block，而会用global block了。\n\n另外代码块不要与作用域混淆。包代码块中声明的首字母大写的标识符实际是也是拥有全局作用域的，可以被任意其他代码所引用的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1648425359,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":383250,"user_name":"Geek_754270","can_delete":false,"product_type":"c1","uid":3735875,"ip_address":"重庆","ucode":"2297D9F5B14618","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/qwqPnn095yDuc6uycMwCt7TIBibFXriaPS9BrMXic6tcNg1OlAiaR8YDeiaO5uDictZJFfnaL81rVflyeibTTR5qNibFCg/132","comment_is_top":false,"comment_ctime":1698747953,"is_pvip":false,"replies":[{"id":139597,"content":"在同一个block中，第二次出现的error没有被重新声明，它就是第一次声明的error。a, error := test2()这一句仅仅是新声明了变量a，但这一句使用test2函数的返回值对error变量做了重新赋值。","user_name":"作者回复","user_name_real":"作者","uid":1026224,"ctime":1698757802,"ip_address":"辽宁","comment_id":383250,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100093501,"comment_content":"\nfunc test ()error{\nerror:=errors.new(&quot;第一次申明error变量&quot;)\na,error:=test2()\nfmt.print(a,error)\n}老师我想问一下这串代码里的error是被申明了两次吗？如果不是哪有该怎么理解这里第二次出现的error呢？如果是的话那编译为什么能通。","like_count":1,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":549028,"discussion_content":"一旦“禁止用预定义标识符定义新类型或者变量的行为”，那么new这样的预定义标识符就和关键字没啥区别了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1643521917,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":1,"child_discussions":[{"author":{"id":3502094,"avatar":"","nickname":"Geek_d1947f","note":"","ucode":"CA29ECDAB5E93A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":605514,"discussion_content":"请问老师，把new定义为关键字的话会有什么影响呢？违背了Go尽可能少的关键字原则吗","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1676699287,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":549028,"ip_address":"湖北","group_id":0},"score":605514,"extra":""}]}]},{"had_liked":false,"id":381913,"user_name":"长林啊","can_delete":false,"product_type":"c1","uid":1707743,"ip_address":"四川","ucode":"B75CB4919FF25A","user_header":"https://static001.geekbang.org/account/avatar/00/1a/0e/df/a64b3146.jpg","comment_is_top":false,"comment_ctime":1696215261,"is_pvip":false,"replies":[{"id":139177,"content":"✅","user_name":"作者回复","user_name_real":"编辑","uid":1026224,"ctime":1696670672,"ip_address":"北京","comment_id":381913,"utype":1}],"discussion_count":1,"race_medal":1,"score":3,"product_id":100093501,"comment_content":"package main\n\nimport (\n\t&quot;errors&quot;\n\t&quot;fmt&quot;\n)\n\nvar a int = 2020\n\nfunc checkYear() error {\n\terr := errors.New(&quot;wrong year&quot;)\n\t&#47;&#47; 使用变量遮蔽外层作用域的变量\n\ta, err := getYear()\n\n\tswitch a {\n\tcase 2020:\n\t\tfmt.Println(&quot;it is&quot;, a, err)\n\tcase 2021:\n\t\tfmt.Println(&quot;it is&quot;, a)\n\t\terr = nil\n\t}\n\tfmt.Println(&quot;after check, it is&quot;, a)\n\treturn err\n}\n\ntype new int\n\nfunc getYear() (new, error) {\n\tvar b int16 = 2021\n\treturn new(b), nil\n}\n\nfunc main() {\n\terr := checkYear()\n\tif err != nil {\n\t\tfmt.Println(&quot;call checkYear error:&quot;, err)\n\t\treturn\n\t}\n\tfmt.Println(&quot;call checkYear ok&quot;)\n}","like_count":1,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":630648,"discussion_content":"在同一个block中，第二次出现的error没有被重新声明，它就是第一次声明的error。a, error := test2()这一句仅仅是新声明了变量a，但这一句使用test2函数的返回值对error变量做了重新赋值。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1698757802,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"辽宁","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":379395,"user_name":"Geek_7806de","can_delete":false,"product_type":"c1","uid":3690368,"ip_address":"广东","ucode":"218888061D1471","user_header":"","comment_is_top":false,"comment_ctime":1691899455,"is_pvip":false,"replies":[{"id":138234,"content":"很多语言都允许的。比如c、c++、java。只能说利弊兼有。","user_name":"作者回复","user_name_real":"编辑","uid":1026224,"ctime":1691983803,"ip_address":"北京","comment_id":379395,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100093501,"comment_content":"go竟然会允许变量重名，不知道设计者怎么想的","like_count":1,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":629106,"discussion_content":"✅","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1696670672,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":373587,"user_name":"615","can_delete":false,"product_type":"c1","uid":1159871,"ip_address":"北京","ucode":"1F04CDC9966F72","user_header":"https://static001.geekbang.org/account/avatar/00/11/b2/bf/aea9e7c6.jpg","comment_is_top":false,"comment_ctime":1682720964,"is_pvip":false,"replies":[{"id":136549,"content":"因为不在一个block(代码块)里。","user_name":"作者回复","user_name_real":"编辑","uid":1026224,"ctime":1683154087,"ip_address":"辽宁","comment_id":373587,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100093501,"comment_content":"请问老师，go语言圣经里说，短变量声明具有重新赋值的作用，上面的例子为什么不可能是创建局部变量a，重新赋值err呢？或者是创建局部变量err，重新赋值a呢？","like_count":1,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":625611,"discussion_content":"很多语言都允许的。比如c、c++、java。只能说利弊兼有。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1691983804,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":357861,"user_name":"Min","can_delete":false,"product_type":"c1","uid":1325498,"ip_address":"北京","ucode":"068EBBA531BB21","user_header":"https://static001.geekbang.org/account/avatar/00/14/39/ba/a2b48904.jpg","comment_is_top":false,"comment_ctime":1663689824,"is_pvip":false,"replies":[{"id":130249,"content":"👍。感谢补充，我个人很少使用windows，所以代码都是在mac或linux上执行的。","user_name":"作者回复","user_name_real":"编辑","uid":1026224,"ctime":1663745222,"ip_address":"北京","comment_id":357861,"utype":1}],"discussion_count":2,"race_medal":0,"score":3,"product_id":100093501,"comment_content":"记录下在 Windows Gitbash 终端使用 go vet 遇到的坑：\n\n$ go vet -vettool=$(which shadow) -strict main.go\nshadow: open C:\\Users\\myangvgo\\go\\bin\\shadow: The system cannot find the file specified.\ngo: error obtaining buildID for C:\\Users\\myangvgo\\go\\bin\\shadow: exit status 1\n\n原因是 shadow 在 windows 下叫 shadow.exe，而不是 Unix 系统下的 shadow。解决办法就是加上.exe\n\n$ go vet -vettool=$(which shadow).exe -strict main.go\n# command-line-arguments\n.\\main.go:14:12: declaration of &quot;err&quot; shadows declaration at line 11\n","like_count":1,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":616848,"discussion_content":"因为不在一个block(代码块)里。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1683154087,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"辽宁","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":350077,"user_name":"He","can_delete":false,"product_type":"c1","uid":2175841,"ip_address":"","ucode":"7F5FF5BEE48AF1","user_header":"https://static001.geekbang.org/account/avatar/00/21/33/61/16505a1a.jpg","comment_is_top":false,"comment_ctime":1656557879,"is_pvip":false,"replies":[{"id":127393,"content":"👍","user_name":"作者回复","user_name_real":"编辑","uid":1026224,"ctime":1656598472,"ip_address":"","comment_id":350077,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100093501,"comment_content":"package main\n\nimport (\n\t&quot;errors&quot;\n\t&quot;fmt&quot;\n)\nvar a int = 2020\n\nfunc checkYear() error {\n\terr := errors.New(&quot;wrong year&quot;)\n\tvar a new\n\tswitch a, err = getYear(); a {\t&#47;&#47; 重新声明，使用赋值\n\tcase 2020:\n\t\tfmt.Println(&quot;it is&quot;, a, err)\n\tcase 2021:\n\t\tfmt.Println(&quot;it is&quot;, a)\n\t\terr = nil\n\t}\n\tfmt.Println(&quot;after check, it is&quot;, a)\n\treturn err\n}\n\ntype new int\n\nfunc getYear() (new, error) {\n\tvar b int16 = 2021\n\treturn new(b), nil\n}\n\nfunc main() {\n\terr := checkYear()\n\tif err != nil {\n\t\tfmt.Println(&quot;call checkYear error:&quot;, err)\n\t\treturn\n\t}\n\tfmt.Println(&quot;call checkYear ok&quot;)\n}","like_count":1,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":578244,"discussion_content":"👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1656598472,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":344388,"user_name":"westfall","can_delete":false,"product_type":"c1","uid":1632773,"ip_address":"","ucode":"F3F5CB7DF695FC","user_header":"https://static001.geekbang.org/account/avatar/00/18/ea/05/9976b871.jpg","comment_is_top":false,"comment_ctime":1651503662,"is_pvip":false,"replies":[{"id":125766,"content":"安装后的shadow一般在$GOPATH&#47;bin下，如果没有显式设置GOPATH，则在~&#47;go&#47;bin下。如果该目录没有被加入到PATH环境变量中，which命令是找不到shadow的。","user_name":"作者回复","user_name_real":"编辑","uid":1026224,"ctime":1651700881,"ip_address":"","comment_id":344388,"utype":1}],"discussion_count":2,"race_medal":0,"score":3,"product_id":100093501,"comment_content":"奇怪了，mac 上执行 \ngo install golang.org&#47;x&#47;tools&#47;go&#47;analysis&#47;passes&#47;shadow&#47;cmd&#47;shadow@latest \n安装成功之后，执行 which shadow 总是 shadow not found","like_count":1,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":578244,"discussion_content":"👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1656598472,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":342634,"user_name":"时间带走初心","can_delete":false,"product_type":"c1","uid":2640610,"ip_address":"","ucode":"EE593130177745","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTI2doZU8iaFwEWjyVB095OxmUxGN0ZFJNhicDpAneHEaHWicOa3ClHbZ0rs5gtTIPI1OicxYL68icGmNmg/132","comment_is_top":false,"comment_ctime":1650375537,"is_pvip":false,"replies":[{"id":125225,"content":"这个命令行不适用windows，windows下默认没有which这个命令。你可以在windows下安装一个linux虚拟机或用wsl2安装一个ubuntu来运行上面命令。","user_name":"作者回复","user_name_real":"编辑","uid":1026224,"ctime":1650493814,"ip_address":"","comment_id":342634,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100093501,"comment_content":"老师,想请问一下为啥在window下执行go vet -vettool=$(which shadow) -strict complex.go 会出现这样的提示which : 无法将“which”项识别为 cmdlet、函数、脚本文件或可运行程序的名称\n。请检查名称的拼写，如果包括路径，请确保路径正确，然后再试一次。\n所在位置 行:1 字符: 19","like_count":1,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":570195,"discussion_content":"安装后的shadow一般在$GOPATH/bin下，如果没有显式设置GOPATH，则在~/go/bin下。如果该目录没有被加入到PATH环境变量中，which命令是找不到shadow的。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1651700882,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":1,"child_discussions":[{"author":{"id":1632773,"avatar":"https://static001.geekbang.org/account/avatar/00/18/ea/05/9976b871.jpg","nickname":"westfall","note":"","ucode":"F3F5CB7DF695FC","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":570264,"discussion_content":"原来如此，感谢老师！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1651720224,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":570195,"ip_address":"","group_id":0},"score":570264,"extra":""}]}]},{"had_liked":false,"id":339792,"user_name":"史努比","can_delete":false,"product_type":"c1","uid":1922171,"ip_address":"","ucode":"20D1EC05778BC6","user_header":"https://static001.geekbang.org/account/avatar/00/1d/54/7b/780c04ff.jpg","comment_is_top":false,"comment_ctime":1648387627,"is_pvip":false,"replies":[{"id":124189,"content":"我倒是觉得“宇宙代码块”更形象生动罒ω罒。否则go官方也不会用universe block，而会用global block了。\n\n另外代码块不要与作用域混淆。包代码块中声明的首字母大写的标识符实际是也是拥有全局作用域的，可以被任意其他代码所引用的。","user_name":"作者回复","user_name_real":"编辑","uid":1026224,"ctime":1648425359,"ip_address":"","comment_id":339792,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100093501,"comment_content":"Universe Block是不是翻译成“全局代码块”更贴切一些，“宇宙代码块”总觉得怪怪的。","like_count":2,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":558630,"discussion_content":"我倒是觉得“宇宙代码块”更形象生动罒ω罒。否则go官方也不会用universe block，而会用global block了。\n\n另外代码块不要与作用域混淆。包代码块中声明的首字母大写的标识符实际是也是拥有全局作用域的，可以被任意其他代码所引用的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1648425359,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":330851,"user_name":"独钓寒江","can_delete":false,"product_type":"c1","uid":2812836,"ip_address":"","ucode":"53C15891B7E800","user_header":"https://static001.geekbang.org/account/avatar/00/2a/eb/a4/b247e9b7.jpg","comment_is_top":false,"comment_ctime":1642223902,"is_pvip":false,"replies":[{"id":121587,"content":"一旦“禁止用预定义标识符定义新类型或者变量的行为”，那么new这样的预定义标识符就和关键字没啥区别了。","user_name":"作者回复","user_name_real":"编辑","uid":1026224,"ctime":1643521917,"ip_address":"","comment_id":330851,"utype":1}],"discussion_count":2,"race_medal":0,"score":3,"product_id":100093501,"comment_content":"“位于第 18 行的 new，这本是 Go 语言的一个预定义标识符，但上面示例代码呢，却用 new 这个名字定义了一个新类型，于是 new 这个标识符就被遮蔽了”\n为什么不禁止用预定义标识符定义新类型或者变量的行为呢？","like_count":2,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":549028,"discussion_content":"一旦“禁止用预定义标识符定义新类型或者变量的行为”，那么new这样的预定义标识符就和关键字没啥区别了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1643521917,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":1,"child_discussions":[{"author":{"id":3502094,"avatar":"","nickname":"Geek_d1947f","note":"","ucode":"CA29ECDAB5E93A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":605514,"discussion_content":"请问老师，把new定义为关键字的话会有什么影响呢？违背了Go尽可能少的关键字原则吗","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1676699287,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":549028,"ip_address":"湖北","group_id":0},"score":605514,"extra":""}]}]},{"had_liked":false,"id":383250,"user_name":"Geek_754270","can_delete":false,"product_type":"c1","uid":3735875,"ip_address":"重庆","ucode":"2297D9F5B14618","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/qwqPnn095yDuc6uycMwCt7TIBibFXriaPS9BrMXic6tcNg1OlAiaR8YDeiaO5uDictZJFfnaL81rVflyeibTTR5qNibFCg/132","comment_is_top":false,"comment_ctime":1698747953,"is_pvip":false,"replies":[{"id":139597,"content":"在同一个block中，第二次出现的error没有被重新声明，它就是第一次声明的error。a, error := test2()这一句仅仅是新声明了变量a，但这一句使用test2函数的返回值对error变量做了重新赋值。","user_name":"作者回复","user_name_real":"作者","uid":1026224,"ctime":1698757802,"ip_address":"辽宁","comment_id":383250,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100093501,"comment_content":"\nfunc test ()error{\nerror:=errors.new(&quot;第一次申明error变量&quot;)\na,error:=test2()\nfmt.print(a,error)\n}老师我想问一下这串代码里的error是被申明了两次吗？如果不是哪有该怎么理解这里第二次出现的error呢？如果是的话那编译为什么能通。","like_count":1,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":630648,"discussion_content":"在同一个block中，第二次出现的error没有被重新声明，它就是第一次声明的error。a, error := test2()这一句仅仅是新声明了变量a，但这一句使用test2函数的返回值对error变量做了重新赋值。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1698757802,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"辽宁","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":381913,"user_name":"长林啊","can_delete":false,"product_type":"c1","uid":1707743,"ip_address":"四川","ucode":"B75CB4919FF25A","user_header":"https://static001.geekbang.org/account/avatar/00/1a/0e/df/a64b3146.jpg","comment_is_top":false,"comment_ctime":1696215261,"is_pvip":false,"replies":[{"id":139177,"content":"✅","user_name":"作者回复","user_name_real":"编辑","uid":1026224,"ctime":1696670672,"ip_address":"北京","comment_id":381913,"utype":1}],"discussion_count":1,"race_medal":1,"score":3,"product_id":100093501,"comment_content":"package main\n\nimport (\n\t&quot;errors&quot;\n\t&quot;fmt&quot;\n)\n\nvar a int = 2020\n\nfunc checkYear() error {\n\terr := errors.New(&quot;wrong year&quot;)\n\t&#47;&#47; 使用变量遮蔽外层作用域的变量\n\ta, err := getYear()\n\n\tswitch a {\n\tcase 2020:\n\t\tfmt.Println(&quot;it is&quot;, a, err)\n\tcase 2021:\n\t\tfmt.Println(&quot;it is&quot;, a)\n\t\terr = nil\n\t}\n\tfmt.Println(&quot;after check, it is&quot;, a)\n\treturn err\n}\n\ntype new int\n\nfunc getYear() (new, error) {\n\tvar b int16 = 2021\n\treturn new(b), nil\n}\n\nfunc main() {\n\terr := checkYear()\n\tif err != nil {\n\t\tfmt.Println(&quot;call checkYear error:&quot;, err)\n\t\treturn\n\t}\n\tfmt.Println(&quot;call checkYear ok&quot;)\n}","like_count":1,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":629106,"discussion_content":"✅","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1696670672,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":379395,"user_name":"Geek_7806de","can_delete":false,"product_type":"c1","uid":3690368,"ip_address":"广东","ucode":"218888061D1471","user_header":"","comment_is_top":false,"comment_ctime":1691899455,"is_pvip":false,"replies":[{"id":138234,"content":"很多语言都允许的。比如c、c++、java。只能说利弊兼有。","user_name":"作者回复","user_name_real":"编辑","uid":1026224,"ctime":1691983803,"ip_address":"北京","comment_id":379395,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100093501,"comment_content":"go竟然会允许变量重名，不知道设计者怎么想的","like_count":1,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":625611,"discussion_content":"很多语言都允许的。比如c、c++、java。只能说利弊兼有。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1691983804,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":373587,"user_name":"615","can_delete":false,"product_type":"c1","uid":1159871,"ip_address":"北京","ucode":"1F04CDC9966F72","user_header":"https://static001.geekbang.org/account/avatar/00/11/b2/bf/aea9e7c6.jpg","comment_is_top":false,"comment_ctime":1682720964,"is_pvip":false,"replies":[{"id":136549,"content":"因为不在一个block(代码块)里。","user_name":"作者回复","user_name_real":"编辑","uid":1026224,"ctime":1683154087,"ip_address":"辽宁","comment_id":373587,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100093501,"comment_content":"请问老师，go语言圣经里说，短变量声明具有重新赋值的作用，上面的例子为什么不可能是创建局部变量a，重新赋值err呢？或者是创建局部变量err，重新赋值a呢？","like_count":1,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":616848,"discussion_content":"因为不在一个block(代码块)里。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1683154087,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"辽宁","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":357861,"user_name":"Min","can_delete":false,"product_type":"c1","uid":1325498,"ip_address":"北京","ucode":"068EBBA531BB21","user_header":"https://static001.geekbang.org/account/avatar/00/14/39/ba/a2b48904.jpg","comment_is_top":false,"comment_ctime":1663689824,"is_pvip":false,"replies":[{"id":130249,"content":"👍。感谢补充，我个人很少使用windows，所以代码都是在mac或linux上执行的。","user_name":"作者回复","user_name_real":"编辑","uid":1026224,"ctime":1663745222,"ip_address":"北京","comment_id":357861,"utype":1}],"discussion_count":2,"race_medal":0,"score":3,"product_id":100093501,"comment_content":"记录下在 Windows Gitbash 终端使用 go vet 遇到的坑：\n\n$ go vet -vettool=$(which shadow) -strict main.go\nshadow: open C:\\Users\\myangvgo\\go\\bin\\shadow: The system cannot find the file specified.\ngo: error obtaining buildID for C:\\Users\\myangvgo\\go\\bin\\shadow: exit status 1\n\n原因是 shadow 在 windows 下叫 shadow.exe，而不是 Unix 系统下的 shadow。解决办法就是加上.exe\n\n$ go vet -vettool=$(which shadow).exe -strict main.go\n# command-line-arguments\n.\\main.go:14:12: declaration of &quot;err&quot; shadows declaration at line 11\n","like_count":1,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":588406,"discussion_content":"👍。感谢补充，我个人很少使用windows，所以代码都是在mac或linux上执行的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1663745222,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1042208,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/e7/20/70a95f94.jpg","nickname":"潮汐","note":"","ucode":"F5E4F6DF9CEA9E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":626084,"discussion_content":"需要先将的shadow的所在bin目录(${GOPATH}/bin)添加到path环境变量中，再执行go vet -vettool=$(which shadow) -strict main.go 是可以的（使用git bash窗口）","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1692523460,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"广东","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":350077,"user_name":"He","can_delete":false,"product_type":"c1","uid":2175841,"ip_address":"","ucode":"7F5FF5BEE48AF1","user_header":"https://static001.geekbang.org/account/avatar/00/21/33/61/16505a1a.jpg","comment_is_top":false,"comment_ctime":1656557879,"is_pvip":false,"replies":[{"id":127393,"content":"👍","user_name":"作者回复","user_name_real":"编辑","uid":1026224,"ctime":1656598472,"ip_address":"","comment_id":350077,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100093501,"comment_content":"package main\n\nimport (\n\t&quot;errors&quot;\n\t&quot;fmt&quot;\n)\nvar a int = 2020\n\nfunc checkYear() error {\n\terr := errors.New(&quot;wrong year&quot;)\n\tvar a new\n\tswitch a, err = getYear(); a {\t&#47;&#47; 重新声明，使用赋值\n\tcase 2020:\n\t\tfmt.Println(&quot;it is&quot;, a, err)\n\tcase 2021:\n\t\tfmt.Println(&quot;it is&quot;, a)\n\t\terr = nil\n\t}\n\tfmt.Println(&quot;after check, it is&quot;, a)\n\treturn err\n}\n\ntype new int\n\nfunc getYear() (new, error) {\n\tvar b int16 = 2021\n\treturn new(b), nil\n}\n\nfunc main() {\n\terr := checkYear()\n\tif err != nil {\n\t\tfmt.Println(&quot;call checkYear error:&quot;, err)\n\t\treturn\n\t}\n\tfmt.Println(&quot;call checkYear ok&quot;)\n}","like_count":1,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":588406,"discussion_content":"👍。感谢补充，我个人很少使用windows，所以代码都是在mac或linux上执行的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1663745222,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1042208,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/e7/20/70a95f94.jpg","nickname":"潮汐","note":"","ucode":"F5E4F6DF9CEA9E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":626084,"discussion_content":"需要先将的shadow的所在bin目录(${GOPATH}/bin)添加到path环境变量中，再执行go vet -vettool=$(which shadow) -strict main.go 是可以的（使用git bash窗口）","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1692523460,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"广东","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":344388,"user_name":"westfall","can_delete":false,"product_type":"c1","uid":1632773,"ip_address":"","ucode":"F3F5CB7DF695FC","user_header":"https://static001.geekbang.org/account/avatar/00/18/ea/05/9976b871.jpg","comment_is_top":false,"comment_ctime":1651503662,"is_pvip":false,"replies":[{"id":125766,"content":"安装后的shadow一般在$GOPATH&#47;bin下，如果没有显式设置GOPATH，则在~&#47;go&#47;bin下。如果该目录没有被加入到PATH环境变量中，which命令是找不到shadow的。","user_name":"作者回复","user_name_real":"编辑","uid":1026224,"ctime":1651700881,"ip_address":"","comment_id":344388,"utype":1}],"discussion_count":2,"race_medal":0,"score":3,"product_id":100093501,"comment_content":"奇怪了，mac 上执行 \ngo install golang.org&#47;x&#47;tools&#47;go&#47;analysis&#47;passes&#47;shadow&#47;cmd&#47;shadow@latest \n安装成功之后，执行 which shadow 总是 shadow not found","like_count":1,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":570195,"discussion_content":"安装后的shadow一般在$GOPATH/bin下，如果没有显式设置GOPATH，则在~/go/bin下。如果该目录没有被加入到PATH环境变量中，which命令是找不到shadow的。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1651700882,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":1,"child_discussions":[{"author":{"id":1632773,"avatar":"https://static001.geekbang.org/account/avatar/00/18/ea/05/9976b871.jpg","nickname":"westfall","note":"","ucode":"F3F5CB7DF695FC","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":570264,"discussion_content":"原来如此，感谢老师！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1651720224,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":570195,"ip_address":"","group_id":0},"score":570264,"extra":""}]}]},{"had_liked":false,"id":342634,"user_name":"时间带走初心","can_delete":false,"product_type":"c1","uid":2640610,"ip_address":"","ucode":"EE593130177745","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTI2doZU8iaFwEWjyVB095OxmUxGN0ZFJNhicDpAneHEaHWicOa3ClHbZ0rs5gtTIPI1OicxYL68icGmNmg/132","comment_is_top":false,"comment_ctime":1650375537,"is_pvip":false,"replies":[{"id":125225,"content":"这个命令行不适用windows，windows下默认没有which这个命令。你可以在windows下安装一个linux虚拟机或用wsl2安装一个ubuntu来运行上面命令。","user_name":"作者回复","user_name_real":"编辑","uid":1026224,"ctime":1650493814,"ip_address":"","comment_id":342634,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100093501,"comment_content":"老师,想请问一下为啥在window下执行go vet -vettool=$(which shadow) -strict complex.go 会出现这样的提示which : 无法将“which”项识别为 cmdlet、函数、脚本文件或可运行程序的名称\n。请检查名称的拼写，如果包括路径，请确保路径正确，然后再试一次。\n所在位置 行:1 字符: 19","like_count":1,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":565544,"discussion_content":"这个命令行不适用windows，windows下默认没有which这个命令。你可以在windows下安装一个linux虚拟机或用wsl2安装一个ubuntu来运行上面命令。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1650493814,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":338563,"user_name":"肖肖","can_delete":false,"product_type":"c1","uid":1034524,"ip_address":"","ucode":"6BB1DC60110435","user_header":"https://static001.geekbang.org/account/avatar/00/0f/c9/1c/596749c8.jpg","comment_is_top":false,"comment_ctime":1647573128,"is_pvip":true,"replies":[{"id":123864,"content":"用最新的go 1.18版本在macos下跑了一下，原文中的命令没有问题：\n\ngo vet -vettool=$(which shadow) -strict complex.go\n# command-line-arguments\n.&#47;complex.go:13:12: declaration of &quot;err&quot; shadows declaration at line 11\n\n不加-strict也是可以的：\n\n$go vet -vettool=$(which shadow)  complex.go \n# command-line-arguments\n.&#47;complex.go:13:12: declaration of &quot;err&quot; shadows declaration at line 11\n\n","user_name":"作者回复","user_name_real":"编辑","uid":1026224,"ctime":1647824964,"ip_address":"","comment_id":338563,"utype":1}],"discussion_count":1,"race_medal":0,"score":4,"product_id":100093501,"comment_content":"这个问题有人碰到过吗，该怎么解决呢。 \n不加-strict 就是好的，但不会报变量遮蔽提示；而加了 -strict 就会报错\ngo vet -vettool=$(which shaow) -strict test.go \nflag provided but not defined: -strict","like_count":1},{"had_liked":false,"id":338169,"user_name":"William Ning","can_delete":false,"product_type":"c1","uid":1592279,"ip_address":"","ucode":"4DB8D05E69E5F3","user_header":"https://static001.geekbang.org/account/avatar/00/18/4b/d7/f46c6dfd.jpg","comment_is_top":false,"comment_ctime":1647334119,"is_pvip":false,"replies":[{"id":123641,"content":"要问就是语言设计需要:)。","user_name":"作者回复","user_name_real":"编辑","uid":1026224,"ctime":1647401041,"ip_address":"","comment_id":338169,"utype":1}],"discussion_count":1,"race_medal":0,"score":4,"product_id":100093501,"comment_content":"外层评论一下：\n\n又看了一遍，果然看一遍是记不住的，平时主要写PHP代码，因为只支持函数作用域，所以，不会出现上面的问题，而且使用重名的变量好处之一，减少内存占用。\n所以，老师，同学，我想问，划分这么细的作用域的目的是什么呢？","like_count":1,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":556491,"discussion_content":"要问就是语言设计需要:)。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1647401042,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":336289,"user_name":"Rayjun","can_delete":false,"product_type":"c1","uid":1002514,"ip_address":"","ucode":"61A3D1A3D03569","user_header":"https://static001.geekbang.org/account/avatar/00/0f/4c/12/f0c145d4.jpg","comment_is_top":false,"comment_ctime":1646052046,"is_pvip":false,"replies":[{"id":122903,"content":"文中说过啊，像函数&#47;方法都是用肉眼可见的大括号括起的，是显式代码块。","user_name":"作者回复","user_name_real":"编辑","uid":1026224,"ctime":1646057020,"ip_address":"","comment_id":336289,"utype":1}],"discussion_count":2,"race_medal":0,"score":4,"product_id":100093501,"comment_content":"为啥没有函数&#47;方法代码块呢？","like_count":1,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":553761,"discussion_content":"文中说过啊，像函数/方法都是用肉眼可见的大括号括起的，是显式代码块。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1646057020,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1002514,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/4c/12/f0c145d4.jpg","nickname":"Rayjun","note":"","ucode":"61A3D1A3D03569","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":553967,"discussion_content":"是的，是我看文章不仔细","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1646145988,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":320418,"user_name":"Calvin","can_delete":false,"product_type":"c1","uid":1603004,"ip_address":"","ucode":"0EEF5B207623B5","user_header":"https://static001.geekbang.org/account/avatar/00/18/75/bc/89d88775.jpg","comment_is_top":false,"comment_ctime":1636300195,"is_pvip":false,"replies":[{"id":116265,"content":"你是在什么os下执行的？是在命令行终端下执行的么？","user_name":"作者回复","user_name_real":"Tony Bai","uid":1026224,"ctime":1636425366,"ip_address":"","comment_id":320418,"utype":1}],"discussion_count":3,"race_medal":0,"score":4,"product_id":100093501,"comment_content":"老师，为什么我按文章中这样安装了变量屏蔽检查的插件之后执行会报错（我的 go 版本是 1.17.3)：\nwhich : 无法将“which”项识别为 cmdlet、函数、脚本文件或可运行程序的名称。请检查名称的拼写，如果包括路径，请确保路径正确，然后再试一次。\n所在位置 行:1 字符: 19\n+ go vet -vettool=$(which bodyclose) main.go\n+                   ~~~~~\n    + CategoryInfo          : ObjectNotFound: (which:String) [], CommandNotFoundException\n    + FullyQualifiedErrorId : CommandNotFoundException","like_count":1,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":553761,"discussion_content":"文中说过啊，像函数/方法都是用肉眼可见的大括号括起的，是显式代码块。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1646057020,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1002514,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/4c/12/f0c145d4.jpg","nickname":"Rayjun","note":"","ucode":"61A3D1A3D03569","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":553967,"discussion_content":"是的，是我看文章不仔细","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1646145988,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":320363,"user_name":"qinsi","can_delete":false,"product_type":"c1","uid":1667175,"ip_address":"","ucode":"090D9C4068FF12","user_header":"https://static001.geekbang.org/account/avatar/00/19/70/67/0c1359c2.jpg","comment_is_top":false,"comment_ctime":1636277680,"is_pvip":true,"replies":[{"id":116268,"content":"你这种似乎就不适合在if的initstmt中进行val1,val2,val3的声明，是否可以拿到外面去呢？\n","user_name":"作者回复","user_name_real":"Tony Bai","uid":1026224,"ctime":1636426516,"ip_address":"","comment_id":320363,"utype":1}],"discussion_count":1,"race_medal":0,"score":4,"product_id":100093501,"comment_content":"if语句的隐式代码块导致在if的初始化语句中声明的变量都只能在if的显式代码块中处理，这就很容易写出嵌套的if：\n\n```go\nif val1, ok := getVal1(); ok {\n  if val2, ok := getVal2(); ok {\n    if val3, ok := getVal3(); ok {\n      val := val1 + val2 + val3\n      ...\n```\n\n有没有什么简洁的去掉嵌套的写法？","like_count":1,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":529968,"discussion_content":"你这种似乎就不适合在if的initstmt中进行val1,val2,val3的声明，是否可以拿到外面去呢？\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1636426516,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":320092,"user_name":"郭纯","can_delete":false,"product_type":"c1","uid":1314521,"ip_address":"","ucode":"2613860B4642C4","user_header":"https://static001.geekbang.org/account/avatar/00/14/0e/d9/e61ce097.jpg","comment_is_top":false,"comment_ctime":1636080692,"is_pvip":false,"replies":[{"id":116246,"content":"这是一个取舍问题，在可能变量遮蔽与代码优雅性方面的取舍。","user_name":"作者回复","user_name_real":"Tony Bai","uid":1026224,"ctime":1636422299,"ip_address":"","comment_id":320092,"utype":1}],"discussion_count":2,"race_medal":0,"score":4,"product_id":100093501,"comment_content":"其实定义变量的时候加前缀可以解决变量遮蔽的问题。但是这样会造成生命变量体积变大。如果配合短前缀还是可以的。但是这样需要整体的团队一起配合。 比如。local_. global_.   前缀。 还有尽量不要在 if switch。select  控制语句定义变量。 if a:=10;b &gt; 10 {} 这样的写法。","like_count":1,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":529968,"discussion_content":"你这种似乎就不适合在if的initstmt中进行val1,val2,val3的声明，是否可以拿到外面去呢？\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1636426516,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":393985,"user_name":"Geek_maohq","can_delete":false,"product_type":"c1","uid":1521537,"ip_address":"上海","ucode":"33C54B2CA829C8","user_header":"","comment_is_top":false,"comment_ctime":1725499068,"is_pvip":false,"replies":[{"id":143131,"content":"目前不能。只能通过go vet检查。","user_name":"作者回复","user_name_real":"编辑","uid":1026224,"ctime":1726441220,"ip_address":"辽宁","comment_id":393985,"utype":1}],"discussion_count":1,"race_medal":0,"score":4,"product_id":100093501,"comment_content":"这个问题不能通过编译器解决吗？外层定义的变量a，其作用域是包含函数代码块的，在函数内再定义变量a不就等于定义了两个同名的变量吗？编译器应该是可检查出来的，我知道其他语言是可以的","like_count":0,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":529869,"discussion_content":"这是一个取舍问题，在可能变量遮蔽与代码优雅性方面的取舍。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1636422299,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1592279,"avatar":"https://static001.geekbang.org/account/avatar/00/18/4b/d7/f46c6dfd.jpg","nickname":"William Ning","note":"","ucode":"4DB8D05E69E5F3","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":553553,"discussion_content":"赞同，确实是一个取舍问题。编程本身从来就是一个取舍问题。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1645965716,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":392716,"user_name":"安石","can_delete":false,"product_type":"c1","uid":1508755,"ip_address":"浙江","ucode":"185AD0046CF1C2","user_header":"https://static001.geekbang.org/account/avatar/00/17/05/93/3c3f2a6d.jpg","comment_is_top":false,"comment_ctime":1721615441,"is_pvip":false,"replies":[{"id":142703,"content":"👍","user_name":"作者回复","user_name_real":"编辑","uid":1026224,"ctime":1721678237,"ip_address":"辽宁","comment_id":392716,"utype":1}],"discussion_count":2,"race_medal":0,"score":4,"product_id":100093501,"comment_content":"其实不是很绕哈哈，熟悉js的话","like_count":0,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":648481,"discussion_content":"👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1721678237,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"辽宁","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2,\"source\":0}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1043824,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/ed/70/dafc8858.jpg","nickname":"孟谦","note":"","ucode":"7504C438D973D3","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":650830,"discussion_content":"块级作用域","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1725698990,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":390466,"user_name":"人言有力","can_delete":false,"product_type":"c1","uid":1690736,"ip_address":"浙江","ucode":"3708FBBFB641FE","user_header":"https://static001.geekbang.org/account/avatar/00/19/cc/70/64045bc0.jpg","comment_is_top":false,"comment_ctime":1715400155,"is_pvip":false,"replies":[{"id":142041,"content":"👍","user_name":"作者回复","user_name_real":"编辑","uid":1026224,"ctime":1715419017,"ip_address":"北京","comment_id":390466,"utype":1}],"discussion_count":1,"race_medal":0,"score":4,"product_id":100093501,"comment_content":"本节讲解了变量作用域与变量遮蔽问题\n1. 变量作用域划分有显式代码块和隐式代码块两种\na.显式代码块即大括号包含的代码，其变量声明作用域，从声明到大括号止\nb.隐式代码块包含宇宙代码块（整个go语言，主要是语言预留标识符如int、true等等非关键字的）、包代码块（如源文件顶层声明的变量、常量、类型、函数）、文件代码块（基本就一个包导入标识符）和控制语句代码块（如switch、if等）还有控制语句子代码块（如switch语句的case子句等）\n\n2.变量遮蔽是指存在包含关系的不同级别的代码块分别定义了重名标识符时，在低等级的代码块中会遮蔽高等级的标识符，造成非预期结果。\n本质上还是重复标识符惹的祸，尽管可用通过go vet工具进行检查，不如编译器直接报错避免这类问题。\n\n3.思考题，如何避免变量遮蔽？\n一言以蔽之，对于复杂源文件，每个变量命名尽量和执行逻辑相关，赋予关联语义，避免重复。\n\n... ...\n var globalYear int = 2020\n  \n func checkYear() error {\n     checkYearErr := errors.New(&quot;wrong year&quot;)\n \n     switch year, getYearErr := getYear(); year {\n     case 2020:\n         fmt.Println(&quot;it is&quot;, year, getYearErr)\n     case 2021:\n         fmt.Println(&quot;it is&quot;, year)\n         checkYearErr = nil\n     }\n     fmt.Println(&quot;after check, it is&quot;, globalYear)\n     return checkYearErr\n }\n \n type new int\n \n func getYear() (new, error) {\n     var b int16 = 2021\n     return new(b), nil\n }\n\n func main() {\n     err := checkYear()\n     if err != nil {\n         fmt.Println(&quot;call checkYear error:&quot;, err)\n         return\n     }\n     fmt.Println(&quot;call checkYear ok&quot;)\n }","like_count":0,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":648481,"discussion_content":"👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1721678237,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"辽宁","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2,\"source\":0}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1043824,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/ed/70/dafc8858.jpg","nickname":"孟谦","note":"","ucode":"7504C438D973D3","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":650830,"discussion_content":"块级作用域","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1725698990,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":380562,"user_name":"Jayleonc","can_delete":false,"product_type":"c1","uid":2865750,"ip_address":"美国","ucode":"9643B83F09DB31","user_header":"https://static001.geekbang.org/account/avatar/00/2b/ba/56/1cbe8c04.jpg","comment_is_top":false,"comment_ctime":1693821493,"is_pvip":false,"replies":[{"id":138646,"content":"👍","user_name":"作者回复","user_name_real":"编辑","uid":1026224,"ctime":1694230181,"ip_address":"辽宁","comment_id":380562,"utype":1}],"discussion_count":1,"race_medal":1,"score":4,"product_id":100093501,"comment_content":"我在一个外国人的课程里面学到过类似文章中提到的 “变量遮蔽” 的内容，其实就是值语义和指针语义的区别。文章提到的变量遮蔽，原因就是值语义，当变量传递到函数中，go 重新开辟了一块内存，将值拷贝了一份。全局的 a，不会因为 foo 函数而改变，变量地址就不一样。如果学习了值语义和指针语义的相关内容，这一块就非常容易理解了。","like_count":0,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":627517,"discussion_content":"👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1694230181,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"辽宁","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":338563,"user_name":"肖肖","can_delete":false,"product_type":"c1","uid":1034524,"ip_address":"","ucode":"6BB1DC60110435","user_header":"https://static001.geekbang.org/account/avatar/00/0f/c9/1c/596749c8.jpg","comment_is_top":false,"comment_ctime":1647573128,"is_pvip":true,"replies":[{"id":123864,"content":"用最新的go 1.18版本在macos下跑了一下，原文中的命令没有问题：\n\ngo vet -vettool=$(which shadow) -strict complex.go\n# command-line-arguments\n.&#47;complex.go:13:12: declaration of &quot;err&quot; shadows declaration at line 11\n\n不加-strict也是可以的：\n\n$go vet -vettool=$(which shadow)  complex.go \n# command-line-arguments\n.&#47;complex.go:13:12: declaration of &quot;err&quot; shadows declaration at line 11\n\n","user_name":"作者回复","user_name_real":"编辑","uid":1026224,"ctime":1647824964,"ip_address":"","comment_id":338563,"utype":1}],"discussion_count":1,"race_medal":0,"score":4,"product_id":100093501,"comment_content":"这个问题有人碰到过吗，该怎么解决呢。 \n不加-strict 就是好的，但不会报变量遮蔽提示；而加了 -strict 就会报错\ngo vet -vettool=$(which shaow) -strict test.go \nflag provided but not defined: -strict","like_count":1,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":557446,"discussion_content":"用最新的go 1.18版本在macos下跑了一下，原文中的命令没有问题：\n\ngo vet -vettool=$(which shadow) -strict complex.go\n# command-line-arguments\n./complex.go:13:12: declaration of &#34;err&#34; shadows declaration at line 11\n\n不加-strict也是可以的：\n\n$go vet -vettool=$(which shadow)  complex.go \n# command-line-arguments\n./complex.go:13:12: declaration of &#34;err&#34; shadows declaration at line 11\n\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1647824965,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":338169,"user_name":"William Ning","can_delete":false,"product_type":"c1","uid":1592279,"ip_address":"","ucode":"4DB8D05E69E5F3","user_header":"https://static001.geekbang.org/account/avatar/00/18/4b/d7/f46c6dfd.jpg","comment_is_top":false,"comment_ctime":1647334119,"is_pvip":false,"replies":[{"id":123641,"content":"要问就是语言设计需要:)。","user_name":"作者回复","user_name_real":"编辑","uid":1026224,"ctime":1647401041,"ip_address":"","comment_id":338169,"utype":1}],"discussion_count":1,"race_medal":0,"score":4,"product_id":100093501,"comment_content":"外层评论一下：\n\n又看了一遍，果然看一遍是记不住的，平时主要写PHP代码，因为只支持函数作用域，所以，不会出现上面的问题，而且使用重名的变量好处之一，减少内存占用。\n所以，老师，同学，我想问，划分这么细的作用域的目的是什么呢？","like_count":1,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":557446,"discussion_content":"用最新的go 1.18版本在macos下跑了一下，原文中的命令没有问题：\n\ngo vet -vettool=$(which shadow) -strict complex.go\n# command-line-arguments\n./complex.go:13:12: declaration of &#34;err&#34; shadows declaration at line 11\n\n不加-strict也是可以的：\n\n$go vet -vettool=$(which shadow)  complex.go \n# command-line-arguments\n./complex.go:13:12: declaration of &#34;err&#34; shadows declaration at line 11\n\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1647824965,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":336289,"user_name":"Rayjun","can_delete":false,"product_type":"c1","uid":1002514,"ip_address":"","ucode":"61A3D1A3D03569","user_header":"https://static001.geekbang.org/account/avatar/00/0f/4c/12/f0c145d4.jpg","comment_is_top":false,"comment_ctime":1646052046,"is_pvip":false,"replies":[{"id":122903,"content":"文中说过啊，像函数&#47;方法都是用肉眼可见的大括号括起的，是显式代码块。","user_name":"作者回复","user_name_real":"编辑","uid":1026224,"ctime":1646057020,"ip_address":"","comment_id":336289,"utype":1}],"discussion_count":2,"race_medal":0,"score":4,"product_id":100093501,"comment_content":"为啥没有函数&#47;方法代码块呢？","like_count":1,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":556491,"discussion_content":"要问就是语言设计需要:)。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1647401042,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":320418,"user_name":"Calvin","can_delete":false,"product_type":"c1","uid":1603004,"ip_address":"","ucode":"0EEF5B207623B5","user_header":"https://static001.geekbang.org/account/avatar/00/18/75/bc/89d88775.jpg","comment_is_top":false,"comment_ctime":1636300195,"is_pvip":false,"replies":[{"id":116265,"content":"你是在什么os下执行的？是在命令行终端下执行的么？","user_name":"作者回复","user_name_real":"Tony Bai","uid":1026224,"ctime":1636425366,"ip_address":"","comment_id":320418,"utype":1}],"discussion_count":3,"race_medal":0,"score":4,"product_id":100093501,"comment_content":"老师，为什么我按文章中这样安装了变量屏蔽检查的插件之后执行会报错（我的 go 版本是 1.17.3)：\nwhich : 无法将“which”项识别为 cmdlet、函数、脚本文件或可运行程序的名称。请检查名称的拼写，如果包括路径，请确保路径正确，然后再试一次。\n所在位置 行:1 字符: 19\n+ go vet -vettool=$(which bodyclose) main.go\n+                   ~~~~~\n    + CategoryInfo          : ObjectNotFound: (which:String) [], CommandNotFoundException\n    + FullyQualifiedErrorId : CommandNotFoundException","like_count":1,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":529983,"discussion_content":"你是在什么os下执行的？是在命令行终端下执行的么？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1636425366,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":2,"child_discussions":[{"author":{"id":1603004,"avatar":"https://static001.geekbang.org/account/avatar/00/18/75/bc/89d88775.jpg","nickname":"Calvin","note":"","ucode":"0EEF5B207623B5","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":531864,"discussion_content":"在windows11下，goland里面的terminal (windows powershell)","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1637427061,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":529983,"ip_address":"","group_id":0},"score":531864,"extra":"{\"user_type\":1}"},{"author":{"id":2323716,"avatar":"https://static001.geekbang.org/account/avatar/00/23/75/04/d26cd437.jpg","nickname":"lemon","note":"","ucode":"47626025C55E5E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1603004,"avatar":"https://static001.geekbang.org/account/avatar/00/18/75/bc/89d88775.jpg","nickname":"Calvin","note":"","ucode":"0EEF5B207623B5","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":533021,"discussion_content":"which是linux的命令","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1637757031,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":531864,"ip_address":"","group_id":0},"score":533021,"extra":"{\"user_type\":1}"}]}]},{"had_liked":false,"id":320363,"user_name":"qinsi","can_delete":false,"product_type":"c1","uid":1667175,"ip_address":"","ucode":"090D9C4068FF12","user_header":"https://static001.geekbang.org/account/avatar/00/19/70/67/0c1359c2.jpg","comment_is_top":false,"comment_ctime":1636277680,"is_pvip":true,"replies":[{"id":116268,"content":"你这种似乎就不适合在if的initstmt中进行val1,val2,val3的声明，是否可以拿到外面去呢？\n","user_name":"作者回复","user_name_real":"Tony Bai","uid":1026224,"ctime":1636426516,"ip_address":"","comment_id":320363,"utype":1}],"discussion_count":1,"race_medal":0,"score":4,"product_id":100093501,"comment_content":"if语句的隐式代码块导致在if的初始化语句中声明的变量都只能在if的显式代码块中处理，这就很容易写出嵌套的if：\n\n```go\nif val1, ok := getVal1(); ok {\n  if val2, ok := getVal2(); ok {\n    if val3, ok := getVal3(); ok {\n      val := val1 + val2 + val3\n      ...\n```\n\n有没有什么简洁的去掉嵌套的写法？","like_count":1,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":529983,"discussion_content":"你是在什么os下执行的？是在命令行终端下执行的么？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1636425366,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":2,"child_discussions":[{"author":{"id":1603004,"avatar":"https://static001.geekbang.org/account/avatar/00/18/75/bc/89d88775.jpg","nickname":"Calvin","note":"","ucode":"0EEF5B207623B5","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":531864,"discussion_content":"在windows11下，goland里面的terminal (windows powershell)","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1637427061,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":529983,"ip_address":"","group_id":0},"score":531864,"extra":"{\"user_type\":1}"},{"author":{"id":2323716,"avatar":"https://static001.geekbang.org/account/avatar/00/23/75/04/d26cd437.jpg","nickname":"lemon","note":"","ucode":"47626025C55E5E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1603004,"avatar":"https://static001.geekbang.org/account/avatar/00/18/75/bc/89d88775.jpg","nickname":"Calvin","note":"","ucode":"0EEF5B207623B5","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":533021,"discussion_content":"which是linux的命令","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1637757031,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":531864,"ip_address":"","group_id":0},"score":533021,"extra":"{\"user_type\":1}"}]}]},{"had_liked":false,"id":320092,"user_name":"郭纯","can_delete":false,"product_type":"c1","uid":1314521,"ip_address":"","ucode":"2613860B4642C4","user_header":"https://static001.geekbang.org/account/avatar/00/14/0e/d9/e61ce097.jpg","comment_is_top":false,"comment_ctime":1636080692,"is_pvip":false,"replies":[{"id":116246,"content":"这是一个取舍问题，在可能变量遮蔽与代码优雅性方面的取舍。","user_name":"作者回复","user_name_real":"Tony Bai","uid":1026224,"ctime":1636422299,"ip_address":"","comment_id":320092,"utype":1}],"discussion_count":2,"race_medal":0,"score":4,"product_id":100093501,"comment_content":"其实定义变量的时候加前缀可以解决变量遮蔽的问题。但是这样会造成生命变量体积变大。如果配合短前缀还是可以的。但是这样需要整体的团队一起配合。 比如。local_. global_.   前缀。 还有尽量不要在 if switch。select  控制语句定义变量。 if a:=10;b &gt; 10 {} 这样的写法。","like_count":1,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":529869,"discussion_content":"这是一个取舍问题，在可能变量遮蔽与代码优雅性方面的取舍。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1636422299,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1592279,"avatar":"https://static001.geekbang.org/account/avatar/00/18/4b/d7/f46c6dfd.jpg","nickname":"William Ning","note":"","ucode":"4DB8D05E69E5F3","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":553553,"discussion_content":"赞同，确实是一个取舍问题。编程本身从来就是一个取舍问题。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1645965716,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":393985,"user_name":"Geek_maohq","can_delete":false,"product_type":"c1","uid":1521537,"ip_address":"上海","ucode":"33C54B2CA829C8","user_header":"","comment_is_top":false,"comment_ctime":1725499068,"is_pvip":false,"replies":[{"id":143131,"content":"目前不能。只能通过go vet检查。","user_name":"作者回复","user_name_real":"编辑","uid":1026224,"ctime":1726441220,"ip_address":"辽宁","comment_id":393985,"utype":1}],"discussion_count":1,"race_medal":0,"score":4,"product_id":100093501,"comment_content":"这个问题不能通过编译器解决吗？外层定义的变量a，其作用域是包含函数代码块的，在函数内再定义变量a不就等于定义了两个同名的变量吗？编译器应该是可检查出来的，我知道其他语言是可以的","like_count":0,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":651184,"discussion_content":"目前不能。只能通过go vet检查。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1726441220,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"辽宁","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2,\"source\":0}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":392716,"user_name":"安石","can_delete":false,"product_type":"c1","uid":1508755,"ip_address":"浙江","ucode":"185AD0046CF1C2","user_header":"https://static001.geekbang.org/account/avatar/00/17/05/93/3c3f2a6d.jpg","comment_is_top":false,"comment_ctime":1721615441,"is_pvip":false,"replies":[{"id":142703,"content":"👍","user_name":"作者回复","user_name_real":"编辑","uid":1026224,"ctime":1721678237,"ip_address":"辽宁","comment_id":392716,"utype":1}],"discussion_count":2,"race_medal":0,"score":4,"product_id":100093501,"comment_content":"其实不是很绕哈哈，熟悉js的话","like_count":0,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":651184,"discussion_content":"目前不能。只能通过go vet检查。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1726441220,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"辽宁","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2,\"source\":0}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":390466,"user_name":"人言有力","can_delete":false,"product_type":"c1","uid":1690736,"ip_address":"浙江","ucode":"3708FBBFB641FE","user_header":"https://static001.geekbang.org/account/avatar/00/19/cc/70/64045bc0.jpg","comment_is_top":false,"comment_ctime":1715400155,"is_pvip":false,"replies":[{"id":142041,"content":"👍","user_name":"作者回复","user_name_real":"编辑","uid":1026224,"ctime":1715419017,"ip_address":"北京","comment_id":390466,"utype":1}],"discussion_count":1,"race_medal":0,"score":4,"product_id":100093501,"comment_content":"本节讲解了变量作用域与变量遮蔽问题\n1. 变量作用域划分有显式代码块和隐式代码块两种\na.显式代码块即大括号包含的代码，其变量声明作用域，从声明到大括号止\nb.隐式代码块包含宇宙代码块（整个go语言，主要是语言预留标识符如int、true等等非关键字的）、包代码块（如源文件顶层声明的变量、常量、类型、函数）、文件代码块（基本就一个包导入标识符）和控制语句代码块（如switch、if等）还有控制语句子代码块（如switch语句的case子句等）\n\n2.变量遮蔽是指存在包含关系的不同级别的代码块分别定义了重名标识符时，在低等级的代码块中会遮蔽高等级的标识符，造成非预期结果。\n本质上还是重复标识符惹的祸，尽管可用通过go vet工具进行检查，不如编译器直接报错避免这类问题。\n\n3.思考题，如何避免变量遮蔽？\n一言以蔽之，对于复杂源文件，每个变量命名尽量和执行逻辑相关，赋予关联语义，避免重复。\n\n... ...\n var globalYear int = 2020\n  \n func checkYear() error {\n     checkYearErr := errors.New(&quot;wrong year&quot;)\n \n     switch year, getYearErr := getYear(); year {\n     case 2020:\n         fmt.Println(&quot;it is&quot;, year, getYearErr)\n     case 2021:\n         fmt.Println(&quot;it is&quot;, year)\n         checkYearErr = nil\n     }\n     fmt.Println(&quot;after check, it is&quot;, globalYear)\n     return checkYearErr\n }\n \n type new int\n \n func getYear() (new, error) {\n     var b int16 = 2021\n     return new(b), nil\n }\n\n func main() {\n     err := checkYear()\n     if err != nil {\n         fmt.Println(&quot;call checkYear error:&quot;, err)\n         return\n     }\n     fmt.Println(&quot;call checkYear ok&quot;)\n }","like_count":0,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":644679,"discussion_content":"👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1715419018,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2,\"source\":0}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":380562,"user_name":"Jayleonc","can_delete":false,"product_type":"c1","uid":2865750,"ip_address":"美国","ucode":"9643B83F09DB31","user_header":"https://static001.geekbang.org/account/avatar/00/2b/ba/56/1cbe8c04.jpg","comment_is_top":false,"comment_ctime":1693821493,"is_pvip":false,"replies":[{"id":138646,"content":"👍","user_name":"作者回复","user_name_real":"编辑","uid":1026224,"ctime":1694230181,"ip_address":"辽宁","comment_id":380562,"utype":1}],"discussion_count":1,"race_medal":1,"score":4,"product_id":100093501,"comment_content":"我在一个外国人的课程里面学到过类似文章中提到的 “变量遮蔽” 的内容，其实就是值语义和指针语义的区别。文章提到的变量遮蔽，原因就是值语义，当变量传递到函数中，go 重新开辟了一块内存，将值拷贝了一份。全局的 a，不会因为 foo 函数而改变，变量地址就不一样。如果学习了值语义和指针语义的相关内容，这一块就非常容易理解了。","like_count":0,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":644679,"discussion_content":"👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1715419018,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2,\"source\":0}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":380263,"user_name":"哲里哲里","can_delete":false,"product_type":"c1","uid":1606741,"ip_address":"上海","ucode":"E43FA22B52F3B4","user_header":"https://static001.geekbang.org/account/avatar/00/18/84/55/34055533.jpg","comment_is_top":false,"comment_ctime":1693290303,"is_pvip":false,"replies":[{"id":138488,"content":"代码见多了，你就知道有大把的人的确是这样写代码的。当然这里只是一个示例。我见过一个if... else if ... else ... 有数千行。","user_name":"作者回复","user_name_real":"编辑","uid":1026224,"ctime":1693306399,"ip_address":"北京","comment_id":380263,"utype":1}],"discussion_count":1,"race_medal":0,"score":5,"product_id":100093501,"comment_content":"func bar() {\n    if a := 1; false {\n    } else if b := 2; false {\n    } else if c := 3; false {\n    } else {\n        println(a, b, c)\n    }\n}\n\n一般不会这样写代码吧？","like_count":0},{"had_liked":false,"id":380179,"user_name":"码小呆","can_delete":false,"product_type":"c1","uid":2055809,"ip_address":"广东","ucode":"44532D6ABF9340","user_header":"https://static001.geekbang.org/account/avatar/00/1f/5e/81/82709d6e.jpg","comment_is_top":false,"comment_ctime":1693150646,"is_pvip":false,"replies":[{"id":138463,"content":"👍","user_name":"作者回复","user_name_real":"编辑","uid":1026224,"ctime":1693218838,"ip_address":"北京","comment_id":380179,"utype":1}],"discussion_count":1,"race_medal":0,"score":5,"product_id":100093501,"comment_content":"个人认为,编程中,一个方法内,不应该存在相同的变量名,我觉得,这算是规范的一种","like_count":0,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":626727,"discussion_content":"代码见多了，你就知道有大把的人的确是这样写代码的。当然这里只是一个示例。我见过一个if... else if ... else ... 有数千行。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1693306399,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":378799,"user_name":"谢小路","can_delete":false,"product_type":"c1","uid":1035064,"ip_address":"广东","ucode":"C9FE2EB10DC105","user_header":"https://static001.geekbang.org/account/avatar/00/0f/cb/38/4c9cfdf4.jpg","comment_is_top":false,"comment_ctime":1690796156,"is_pvip":false,"replies":[{"id":138033,"content":"的确很难避免。要么书写代码时注意，要么用go vet的额外的shadow检查插件来检查一下。","user_name":"作者回复","user_name_real":"编辑","uid":1026224,"ctime":1690856908,"ip_address":"北京","comment_id":378799,"utype":1}],"discussion_count":1,"race_medal":0,"score":5,"product_id":100093501,"comment_content":"朋友们，err 这个变量在项目开发中是不是很难绝对避免遮蔽。一方面大家约定俗成缩写是 err ，一方面 err 在 go 中又到处是这样处理错误。","like_count":0,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":626632,"discussion_content":"👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1693218838,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":378741,"user_name":"fuyusakaiori","can_delete":false,"product_type":"c1","uid":2882488,"ip_address":"北京","ucode":"D35F65CE2AA387","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/9ibU6VISIQfHUKgLkvf34l7fw88WWaLhvFiajQA31bIoELAFSSeBGBmddGbVFsiceonibnmyAtgc4Fr21pYtVca8ibw/132","comment_is_top":false,"comment_ctime":1690709325,"is_pvip":false,"replies":[{"id":137997,"content":"从技术角度来说，compiler是完全可以做到不允许遮蔽的。但允许变量遮蔽，带来的是变量命名的灵活性。是否允许，看语言设计者的考量。一时想不出哪门语言完全禁止变量遮蔽的情况了。","user_name":"作者回复","user_name_real":"编辑","uid":1026224,"ctime":1690720227,"ip_address":"辽宁","comment_id":378741,"utype":1}],"discussion_count":1,"race_medal":0,"score":5,"product_id":100093501,"comment_content":"有没有可能，这个所谓的变量遮蔽这种情况，编译器就不应该允许它存在？允许这种情况，然后又出个vet工具检查，不如从一开始就杜绝这种情况，外部作用域声明过的变量名字，内部作用域明显就不该再使用","like_count":0,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":624689,"discussion_content":"的确很难避免。要么书写代码时注意，要么用go vet的额外的shadow检查插件来检查一下。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1690856908,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":377890,"user_name":"大神博士","can_delete":false,"product_type":"c1","uid":1195144,"ip_address":"上海","ucode":"8C4318095949F0","user_header":"https://static001.geekbang.org/account/avatar/00/12/3c/88/6bef27d6.jpg","comment_is_top":false,"comment_ctime":1689483357,"is_pvip":false,"replies":[{"id":137732,"content":"👍","user_name":"作者回复","user_name_real":"编辑","uid":1026224,"ctime":1689560962,"ip_address":"北京","comment_id":377890,"utype":1}],"discussion_count":1,"race_medal":0,"score":5,"product_id":100093501,"comment_content":"阿坑坑～，错了重新来 😜","like_count":0,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":624576,"discussion_content":"从技术角度来说，compiler是完全可以做到不允许遮蔽的。但允许变量遮蔽，带来的是变量命名的灵活性。是否允许，看语言设计者的考量。一时想不出哪门语言完全禁止变量遮蔽的情况了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1690720227,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"辽宁","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":375571,"user_name":"111","can_delete":false,"product_type":"c1","uid":2046189,"ip_address":"北京","ucode":"7ACA555BDC139B","user_header":"","comment_is_top":false,"comment_ctime":1685668602,"is_pvip":false,"replies":[{"id":137089,"content":"👍","user_name":"作者回复","user_name_real":"编辑","uid":1026224,"ctime":1685693841,"ip_address":"北京","comment_id":375571,"utype":1}],"discussion_count":1,"race_medal":0,"score":5,"product_id":100093501,"comment_content":"和其他语言差别不大，就是“隐式代码块”需要注意一下。\n","like_count":0,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":620002,"discussion_content":"👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1685693841,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":375291,"user_name":"lesserror","can_delete":false,"product_type":"c1","uid":1351076,"ip_address":"广东","ucode":"25A54D1165FCF6","user_header":"https://static001.geekbang.org/account/avatar/00/14/9d/a4/e481ae48.jpg","comment_is_top":false,"comment_ctime":1685256110,"is_pvip":false,"replies":[{"id":136965,"content":"1. Method不能以独立个体被调用，它要么依附在类型上(method expression)，要么依附在变量上被调用，其作用域与其依附的变量有关，与自身的导出或非导出也有关系。\n2. 包代码块中声明的标识符就包含了函数名啊。包代码块标识符：类型、常量、变量、函数。\n\n哈哈，btw，你这是在重新温习一遍专栏？","user_name":"作者回复","user_name_real":"编辑","uid":1026224,"ctime":1685327599,"ip_address":"北京","comment_id":375291,"utype":1}],"discussion_count":2,"race_medal":0,"score":5,"product_id":100093501,"comment_content":"Tony bai 老师，文中有两处没有太理解。\n\n1. “包顶层声明中的常量、类型、变量或函数（不包括方法）对应的标识符的作用域是包代码块。” 这里为什么不包括方法呢？\n\n2. “一个标识符要成为导出标识符需同时具备两个条件：一是这个标识符声明在包代码块中，或者它是一个字段名或方法名；二是它名字第一个字符是一个大写的 Unicode 字符。这两个条件缺一不可。”  这里为什么又不包含函数呢？","like_count":0,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":620002,"discussion_content":"👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1685693841,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":370366,"user_name":"Air 航迹","can_delete":false,"product_type":"c1","uid":1976226,"ip_address":"山东","ucode":"AAE48AF6E82EF6","user_header":"https://static001.geekbang.org/account/avatar/00/1e/27/a2/7a988137.jpg","comment_is_top":false,"comment_ctime":1678760490,"is_pvip":false,"replies":[{"id":135119,"content":"👍","user_name":"作者回复","user_name_real":"编辑","uid":1026224,"ctime":1678858837,"ip_address":"北京","comment_id":370366,"utype":1}],"discussion_count":1,"race_medal":0,"score":5,"product_id":100093501,"comment_content":"首先，我也是想到将a,err的定义放在switch作用外，但是那样的话，a的遮蔽问题解决了，但err的输出跟预期不符。\n然后，没有得到预期err输出的原因，是err变量还存在遮蔽的问题，switch语块是对赋值了getYear方法第二个返回值的err进行的处理，没影响最先定义的err := errors.New(&quot;wrong year&quot;)\n最后，可以不获取getYear方法中的返回值，这样就不会产生err的遮蔽，或者可以将a, err := getYear()放到err = errors.New(&quot;wrong year&quot;)前面，然后将err按前面的语句重新赋值\n下面是不将getYear的第二个返回值赋值到err的checkYear写法：\n\nfunc checkYear() error {\n\terr := errors.New(&quot;wrong year&quot;)\n\ta, _ := getYear()\n\tswitch a {\n\tcase 2020:\n\t\tfmt.Println(&quot;it is&quot;, a, err)\n\tcase 2021:\n\t\tfmt.Println(&quot;it is&quot;, a)\n\t\terr = nil\n\t}\n\tfmt.Println(&quot;after check, it is&quot;, a)\n\treturn err\n}","like_count":0,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":609175,"discussion_content":"👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1678858837,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":336909,"user_name":"Kepler","can_delete":false,"product_type":"c1","uid":1214303,"ip_address":"","ucode":"0C9CA3DB8B3CF0","user_header":"https://static001.geekbang.org/account/avatar/00/12/87/5f/6bf8b74a.jpg","comment_is_top":false,"comment_ctime":1646463198,"is_pvip":false,"replies":[{"id":123236,"content":"可以按你的方式修改并run一下，如果没判断错的话，会报编译错误。再想想💪。","user_name":"作者回复","user_name_real":"编辑","uid":1026224,"ctime":1646722560,"ip_address":"","comment_id":336909,"utype":1}],"discussion_count":3,"race_medal":0,"score":5,"product_id":100093501,"comment_content":"去掉第7行的:","like_count":0,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":555017,"discussion_content":"可以按你的方式修改并run一下，如果没判断错的话，会报编译错误。再想想💪。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1646722560,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":1,"child_discussions":[{"author":{"id":1214303,"avatar":"https://static001.geekbang.org/account/avatar/00/12/87/5f/6bf8b74a.jpg","nickname":"Kepler","note":"","ucode":"0C9CA3DB8B3CF0","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":555269,"discussion_content":"嗯，老师我是试了下，果然不行。原因在于第一个返回值类型new 和int 不能直接赋值。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1646828230,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":555017,"ip_address":"","group_id":0},"score":555269,"extra":""}]},{"author":{"id":1214303,"avatar":"https://static001.geekbang.org/account/avatar/00/12/87/5f/6bf8b74a.jpg","nickname":"Kepler","note":"","ucode":"0C9CA3DB8B3CF0","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":555271,"discussion_content":"改成type new = int ","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1646828325,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":320105,"user_name":"liaomars","can_delete":false,"product_type":"c1","uid":2104856,"ip_address":"","ucode":"4FCA97EE9FB57D","user_header":"https://static001.geekbang.org/account/avatar/00/20/1e/18/9d1f1439.jpg","comment_is_top":false,"comment_ctime":1636082545,"is_pvip":false,"replies":[{"id":116249,"content":"会不会让问题变得复杂化:)，我们已经知道了遮蔽问题，把遮蔽问题消除了就好了。","user_name":"作者回复","user_name_real":"Tony Bai","uid":1026224,"ctime":1636422571,"ip_address":"","comment_id":320105,"utype":1}],"discussion_count":1,"race_medal":0,"score":5,"product_id":100093501,"comment_content":"老师是不是可以用闭包来解决这个问题？","like_count":0,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":529876,"discussion_content":"会不会让问题变得复杂化:)，我们已经知道了遮蔽问题，把遮蔽问题消除了就好了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1636422571,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":380263,"user_name":"哲里哲里","can_delete":false,"product_type":"c1","uid":1606741,"ip_address":"上海","ucode":"E43FA22B52F3B4","user_header":"https://static001.geekbang.org/account/avatar/00/18/84/55/34055533.jpg","comment_is_top":false,"comment_ctime":1693290303,"is_pvip":false,"replies":[{"id":138488,"content":"代码见多了，你就知道有大把的人的确是这样写代码的。当然这里只是一个示例。我见过一个if... else if ... else ... 有数千行。","user_name":"作者回复","user_name_real":"编辑","uid":1026224,"ctime":1693306399,"ip_address":"北京","comment_id":380263,"utype":1}],"discussion_count":1,"race_medal":0,"score":5,"product_id":100093501,"comment_content":"func bar() {\n    if a := 1; false {\n    } else if b := 2; false {\n    } else if c := 3; false {\n    } else {\n        println(a, b, c)\n    }\n}\n\n一般不会这样写代码吧？","like_count":0,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":626727,"discussion_content":"代码见多了，你就知道有大把的人的确是这样写代码的。当然这里只是一个示例。我见过一个if... else if ... else ... 有数千行。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1693306399,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":380179,"user_name":"码小呆","can_delete":false,"product_type":"c1","uid":2055809,"ip_address":"广东","ucode":"44532D6ABF9340","user_header":"https://static001.geekbang.org/account/avatar/00/1f/5e/81/82709d6e.jpg","comment_is_top":false,"comment_ctime":1693150646,"is_pvip":false,"replies":[{"id":138463,"content":"👍","user_name":"作者回复","user_name_real":"编辑","uid":1026224,"ctime":1693218838,"ip_address":"北京","comment_id":380179,"utype":1}],"discussion_count":1,"race_medal":0,"score":5,"product_id":100093501,"comment_content":"个人认为,编程中,一个方法内,不应该存在相同的变量名,我觉得,这算是规范的一种","like_count":0,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":626632,"discussion_content":"👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1693218838,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":378799,"user_name":"谢小路","can_delete":false,"product_type":"c1","uid":1035064,"ip_address":"广东","ucode":"C9FE2EB10DC105","user_header":"https://static001.geekbang.org/account/avatar/00/0f/cb/38/4c9cfdf4.jpg","comment_is_top":false,"comment_ctime":1690796156,"is_pvip":false,"replies":[{"id":138033,"content":"的确很难避免。要么书写代码时注意，要么用go vet的额外的shadow检查插件来检查一下。","user_name":"作者回复","user_name_real":"编辑","uid":1026224,"ctime":1690856908,"ip_address":"北京","comment_id":378799,"utype":1}],"discussion_count":1,"race_medal":0,"score":5,"product_id":100093501,"comment_content":"朋友们，err 这个变量在项目开发中是不是很难绝对避免遮蔽。一方面大家约定俗成缩写是 err ，一方面 err 在 go 中又到处是这样处理错误。","like_count":0,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":624689,"discussion_content":"的确很难避免。要么书写代码时注意，要么用go vet的额外的shadow检查插件来检查一下。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1690856908,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":378741,"user_name":"fuyusakaiori","can_delete":false,"product_type":"c1","uid":2882488,"ip_address":"北京","ucode":"D35F65CE2AA387","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/9ibU6VISIQfHUKgLkvf34l7fw88WWaLhvFiajQA31bIoELAFSSeBGBmddGbVFsiceonibnmyAtgc4Fr21pYtVca8ibw/132","comment_is_top":false,"comment_ctime":1690709325,"is_pvip":false,"replies":[{"id":137997,"content":"从技术角度来说，compiler是完全可以做到不允许遮蔽的。但允许变量遮蔽，带来的是变量命名的灵活性。是否允许，看语言设计者的考量。一时想不出哪门语言完全禁止变量遮蔽的情况了。","user_name":"作者回复","user_name_real":"编辑","uid":1026224,"ctime":1690720227,"ip_address":"辽宁","comment_id":378741,"utype":1}],"discussion_count":1,"race_medal":0,"score":5,"product_id":100093501,"comment_content":"有没有可能，这个所谓的变量遮蔽这种情况，编译器就不应该允许它存在？允许这种情况，然后又出个vet工具检查，不如从一开始就杜绝这种情况，外部作用域声明过的变量名字，内部作用域明显就不该再使用","like_count":0,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":624576,"discussion_content":"从技术角度来说，compiler是完全可以做到不允许遮蔽的。但允许变量遮蔽，带来的是变量命名的灵活性。是否允许，看语言设计者的考量。一时想不出哪门语言完全禁止变量遮蔽的情况了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1690720227,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"辽宁","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":377890,"user_name":"大神博士","can_delete":false,"product_type":"c1","uid":1195144,"ip_address":"上海","ucode":"8C4318095949F0","user_header":"https://static001.geekbang.org/account/avatar/00/12/3c/88/6bef27d6.jpg","comment_is_top":false,"comment_ctime":1689483357,"is_pvip":false,"replies":[{"id":137732,"content":"👍","user_name":"作者回复","user_name_real":"编辑","uid":1026224,"ctime":1689560962,"ip_address":"北京","comment_id":377890,"utype":1}],"discussion_count":1,"race_medal":0,"score":5,"product_id":100093501,"comment_content":"阿坑坑～，错了重新来 😜","like_count":0,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":623485,"discussion_content":"👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1689560962,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":375571,"user_name":"111","can_delete":false,"product_type":"c1","uid":2046189,"ip_address":"北京","ucode":"7ACA555BDC139B","user_header":"","comment_is_top":false,"comment_ctime":1685668602,"is_pvip":false,"replies":[{"id":137089,"content":"👍","user_name":"作者回复","user_name_real":"编辑","uid":1026224,"ctime":1685693841,"ip_address":"北京","comment_id":375571,"utype":1}],"discussion_count":1,"race_medal":0,"score":5,"product_id":100093501,"comment_content":"和其他语言差别不大，就是“隐式代码块”需要注意一下。\n","like_count":0,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":623485,"discussion_content":"👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1689560962,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":375291,"user_name":"lesserror","can_delete":false,"product_type":"c1","uid":1351076,"ip_address":"广东","ucode":"25A54D1165FCF6","user_header":"https://static001.geekbang.org/account/avatar/00/14/9d/a4/e481ae48.jpg","comment_is_top":false,"comment_ctime":1685256110,"is_pvip":false,"replies":[{"id":136965,"content":"1. Method不能以独立个体被调用，它要么依附在类型上(method expression)，要么依附在变量上被调用，其作用域与其依附的变量有关，与自身的导出或非导出也有关系。\n2. 包代码块中声明的标识符就包含了函数名啊。包代码块标识符：类型、常量、变量、函数。\n\n哈哈，btw，你这是在重新温习一遍专栏？","user_name":"作者回复","user_name_real":"编辑","uid":1026224,"ctime":1685327599,"ip_address":"北京","comment_id":375291,"utype":1}],"discussion_count":2,"race_medal":0,"score":5,"product_id":100093501,"comment_content":"Tony bai 老师，文中有两处没有太理解。\n\n1. “包顶层声明中的常量、类型、变量或函数（不包括方法）对应的标识符的作用域是包代码块。” 这里为什么不包括方法呢？\n\n2. “一个标识符要成为导出标识符需同时具备两个条件：一是这个标识符声明在包代码块中，或者它是一个字段名或方法名；二是它名字第一个字符是一个大写的 Unicode 字符。这两个条件缺一不可。”  这里为什么又不包含函数呢？","like_count":0,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":619590,"discussion_content":"1. Method不能以独立个体被调用，它要么依附在类型上(method expression)，要么依附在变量上被调用，其作用域与其依附的变量有关，与自身的导出或非导出也有关系。\n2. 包代码块中声明的标识符就包含了函数名啊。包代码块标识符：类型、常量、变量、函数。\n\n哈哈，btw，你这是在重新温习一遍专栏？","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1685327599,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":1,"child_discussions":[{"author":{"id":1351076,"avatar":"https://static001.geekbang.org/account/avatar/00/14/9d/a4/e481ae48.jpg","nickname":"lesserror","note":"","ucode":"25A54D1165FCF6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":619597,"discussion_content":"嗯，重温一遍还是收获满满。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1685329564,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":619590,"ip_address":"广东","group_id":0},"score":619597,"extra":""}]}]},{"had_liked":false,"id":370366,"user_name":"Air 航迹","can_delete":false,"product_type":"c1","uid":1976226,"ip_address":"山东","ucode":"AAE48AF6E82EF6","user_header":"https://static001.geekbang.org/account/avatar/00/1e/27/a2/7a988137.jpg","comment_is_top":false,"comment_ctime":1678760490,"is_pvip":false,"replies":[{"id":135119,"content":"👍","user_name":"作者回复","user_name_real":"编辑","uid":1026224,"ctime":1678858837,"ip_address":"北京","comment_id":370366,"utype":1}],"discussion_count":1,"race_medal":0,"score":5,"product_id":100093501,"comment_content":"首先，我也是想到将a,err的定义放在switch作用外，但是那样的话，a的遮蔽问题解决了，但err的输出跟预期不符。\n然后，没有得到预期err输出的原因，是err变量还存在遮蔽的问题，switch语块是对赋值了getYear方法第二个返回值的err进行的处理，没影响最先定义的err := errors.New(&quot;wrong year&quot;)\n最后，可以不获取getYear方法中的返回值，这样就不会产生err的遮蔽，或者可以将a, err := getYear()放到err = errors.New(&quot;wrong year&quot;)前面，然后将err按前面的语句重新赋值\n下面是不将getYear的第二个返回值赋值到err的checkYear写法：\n\nfunc checkYear() error {\n\terr := errors.New(&quot;wrong year&quot;)\n\ta, _ := getYear()\n\tswitch a {\n\tcase 2020:\n\t\tfmt.Println(&quot;it is&quot;, a, err)\n\tcase 2021:\n\t\tfmt.Println(&quot;it is&quot;, a)\n\t\terr = nil\n\t}\n\tfmt.Println(&quot;after check, it is&quot;, a)\n\treturn err\n}","like_count":0,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":609175,"discussion_content":"👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1678858837,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":336909,"user_name":"Kepler","can_delete":false,"product_type":"c1","uid":1214303,"ip_address":"","ucode":"0C9CA3DB8B3CF0","user_header":"https://static001.geekbang.org/account/avatar/00/12/87/5f/6bf8b74a.jpg","comment_is_top":false,"comment_ctime":1646463198,"is_pvip":false,"replies":[{"id":123236,"content":"可以按你的方式修改并run一下，如果没判断错的话，会报编译错误。再想想💪。","user_name":"作者回复","user_name_real":"编辑","uid":1026224,"ctime":1646722560,"ip_address":"","comment_id":336909,"utype":1}],"discussion_count":3,"race_medal":0,"score":5,"product_id":100093501,"comment_content":"去掉第7行的:","like_count":0,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":555017,"discussion_content":"可以按你的方式修改并run一下，如果没判断错的话，会报编译错误。再想想💪。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1646722560,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":1,"child_discussions":[{"author":{"id":1214303,"avatar":"https://static001.geekbang.org/account/avatar/00/12/87/5f/6bf8b74a.jpg","nickname":"Kepler","note":"","ucode":"0C9CA3DB8B3CF0","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":555269,"discussion_content":"嗯，老师我是试了下，果然不行。原因在于第一个返回值类型new 和int 不能直接赋值。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1646828230,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":555017,"ip_address":"","group_id":0},"score":555269,"extra":""}]},{"author":{"id":1214303,"avatar":"https://static001.geekbang.org/account/avatar/00/12/87/5f/6bf8b74a.jpg","nickname":"Kepler","note":"","ucode":"0C9CA3DB8B3CF0","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":555271,"discussion_content":"改成type new = int ","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1646828325,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":320105,"user_name":"liaomars","can_delete":false,"product_type":"c1","uid":2104856,"ip_address":"","ucode":"4FCA97EE9FB57D","user_header":"https://static001.geekbang.org/account/avatar/00/20/1e/18/9d1f1439.jpg","comment_is_top":false,"comment_ctime":1636082545,"is_pvip":false,"replies":[{"id":116249,"content":"会不会让问题变得复杂化:)，我们已经知道了遮蔽问题，把遮蔽问题消除了就好了。","user_name":"作者回复","user_name_real":"Tony Bai","uid":1026224,"ctime":1636422571,"ip_address":"","comment_id":320105,"utype":1}],"discussion_count":1,"race_medal":0,"score":5,"product_id":100093501,"comment_content":"老师是不是可以用闭包来解决这个问题？","like_count":0,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":619590,"discussion_content":"1. Method不能以独立个体被调用，它要么依附在类型上(method expression)，要么依附在变量上被调用，其作用域与其依附的变量有关，与自身的导出或非导出也有关系。\n2. 包代码块中声明的标识符就包含了函数名啊。包代码块标识符：类型、常量、变量、函数。\n\n哈哈，btw，你这是在重新温习一遍专栏？","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1685327599,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":1,"child_discussions":[{"author":{"id":1351076,"avatar":"https://static001.geekbang.org/account/avatar/00/14/9d/a4/e481ae48.jpg","nickname":"lesserror","note":"","ucode":"25A54D1165FCF6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":619597,"discussion_content":"嗯，重温一遍还是收获满满。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1685329564,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":619590,"ip_address":"广东","group_id":0},"score":619597,"extra":""}]}]},{"had_liked":false,"id":320104,"user_name":"奕","can_delete":false,"product_type":"c1","uid":1005391,"ip_address":"","ucode":"73CEA468CE70C3","user_header":"https://static001.geekbang.org/account/avatar/00/0f/57/4f/6fb51ff1.jpg","comment_is_top":false,"comment_ctime":1636082435,"is_pvip":false,"replies":[{"id":116248,"content":"不妨展开说说，你提到的变量命名语义化是指用尽量表意的长命名么？比如the_name_of_that_person替代n？","user_name":"作者回复","user_name_real":"Tony Bai","uid":1026224,"ctime":1636422418,"ip_address":"","comment_id":320104,"utype":1}],"discussion_count":3,"race_medal":0,"score":6,"product_id":100093501,"comment_content":"变量命名语义化 就可以避免很多问题","like_count":0,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":529875,"discussion_content":"不妨展开说说，你提到的变量命名语义化是指用尽量表意的长命名么？比如the_name_of_that_person替代n？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1636422418,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1005391,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/57/4f/6fb51ff1.jpg","nickname":"奕","note":"","ucode":"73CEA468CE70C3","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":413243,"discussion_content":"根据变量在对应代码块中的位置，所起到的作用语意化。必要的时候可以进行前缀缩写，大家对前缀缩写的规则达成一致就可以","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1636423675,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1627670,"avatar":"https://static001.geekbang.org/account/avatar/00/18/d6/16/107f0d04.jpg","nickname":"山青","note":"","ucode":"904AE3C23D3B92","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1005391,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/57/4f/6fb51ff1.jpg","nickname":"奕","note":"","ucode":"73CEA468CE70C3","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":552405,"discussion_content":"object-c就是这样的语义化的语言 自解释、写完代码不用写注释 而且苹果也很提倡这样干","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1645450642,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":413243,"ip_address":"","group_id":0},"score":552405,"extra":""}]}]},{"had_liked":false,"id":321021,"user_name":"Geek_b6da5d","can_delete":false,"product_type":"c1","uid":2840222,"ip_address":"","ucode":"5DD79D2367ADA4","user_header":"","comment_is_top":false,"comment_ctime":1636623179,"is_pvip":false,"replies":null,"discussion_count":2,"race_medal":0,"score":6,"product_id":100093501,"comment_content":"goland其实能够看出变量的作用域 颜色上是不一样的 ","like_count":35},{"had_liked":false,"id":363104,"user_name":"我是熊大","can_delete":false,"product_type":"c1","uid":1208327,"ip_address":"北京","ucode":"4BCE42C2C64E55","user_header":"https://static001.geekbang.org/account/avatar/00/12/70/07/bb4e6568.jpg","comment_is_top":false,"comment_ctime":1669220019,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":6,"product_id":100093501,"comment_content":"老师讲的晦涩了，作用域问题，这么讲不好理解，本质就是：局部量优先于全局变量","like_count":14},{"had_liked":false,"id":320556,"user_name":"进化菌","can_delete":false,"product_type":"c1","uid":1276861,"ip_address":"","ucode":"B30A5F78BB4171","user_header":"https://static001.geekbang.org/account/avatar/00/13/7b/bd/ccb37425.jpg","comment_is_top":false,"comment_ctime":1636377931,"is_pvip":true,"replies":null,"discussion_count":0,"race_medal":4,"score":6,"product_id":100093501,"comment_content":"这么来看的话，代码还是不要嵌套太深的好，同文件中的变量命名也尽量不重名，大概率能减少变量遮蔽的问题。","like_count":6},{"had_liked":false,"id":320196,"user_name":"aoe","can_delete":false,"product_type":"c1","uid":1121758,"ip_address":"","ucode":"1C6201EDB4E954","user_header":"https://static001.geekbang.org/account/avatar/00/11/1d/de/62bfa83f.jpg","comment_is_top":false,"comment_ctime":1636115610,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":6,"product_id":100093501,"comment_content":"不使用一样的名字就行啊","like_count":3},{"had_liked":false,"id":320190,"user_name":"罗杰","can_delete":false,"product_type":"c1","uid":1320487,"ip_address":"","ucode":"96BAFAA147341F","user_header":"https://static001.geekbang.org/account/avatar/00/14/26/27/eba94899.jpg","comment_is_top":false,"comment_ctime":1636113323,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":6,"product_id":100093501,"comment_content":"这节课适应在电脑上阅读，而且要用心看","like_count":3},{"had_liked":false,"id":333979,"user_name":"我好像一点都不像程序员","can_delete":false,"product_type":"c1","uid":1435733,"ip_address":"","ucode":"F479190923355C","user_header":"https://static001.geekbang.org/account/avatar/00/15/e8/55/63189817.jpg","comment_is_top":false,"comment_ctime":1644650967,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":6,"product_id":100093501,"comment_content":"学会了一个新的名词：变量遮蔽\n实际上就是一篇讲变量作用域的文章。和其他语言其实没有差太多。","like_count":1},{"had_liked":false,"id":350079,"user_name":"He","can_delete":false,"product_type":"c1","uid":2175841,"ip_address":"","ucode":"7F5FF5BEE48AF1","user_header":"https://static001.geekbang.org/account/avatar/00/21/33/61/16505a1a.jpg","comment_is_top":false,"comment_ctime":1656557957,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":6,"product_id":100093501,"comment_content":"package main\n\nimport (\n\t&quot;errors&quot;\n\t&quot;fmt&quot;\n)\nvar a int = 2020\n\nfunc checkYear() error {\n\terr := errors.New(&quot;wrong year&quot;)\n\tvar a new\t&#47;&#47;\t声明 a\n\tswitch a, err = getYear(); a {\t&#47;&#47; 不创建新变量，使用赋值操作\n\tcase 2020:\n\t\tfmt.Println(&quot;it is&quot;, a, err)\n\tcase 2021:\n\t\tfmt.Println(&quot;it is&quot;, a)\n\t\terr = nil\n\t}\n\tfmt.Println(&quot;after check, it is&quot;, a)\n\treturn err\n}\n\ntype new int\n\nfunc getYear() (new, error) {\n\tvar b int16 = 2021\n\treturn new(b), nil\n}\n\nfunc main() {\n\terr := checkYear()\n\tif err != nil {\n\t\tfmt.Println(&quot;call checkYear error:&quot;, err)\n\t\treturn\n\t}\n\tfmt.Println(&quot;call checkYear ok&quot;)\n}","like_count":0},{"had_liked":false,"id":334037,"user_name":"Geek_7254f2","can_delete":false,"product_type":"c1","uid":2275448,"ip_address":"","ucode":"D5770398168983","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTK4iaBTGZFCibGEWH3YavQO3e1FB9wnODiaYzexxGqTWRMiay6THfZNVSLDaIOz5RClHefVIYibZxm8G2Q/132","comment_is_top":false,"comment_ctime":1644684674,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":6,"product_id":100093501,"comment_content":"如果原来有c语言基础或java基础再或者别的语言基础，这一节很好理解，如果真的0基础，那确实很难了","like_count":0},{"had_liked":false,"id":320878,"user_name":"际遇。","can_delete":false,"product_type":"c1","uid":1169428,"ip_address":"","ucode":"E6BAE87225743B","user_header":"https://static001.geekbang.org/account/avatar/00/11/d8/14/d7d7af20.jpg","comment_is_top":false,"comment_ctime":1636537320,"is_pvip":false,"replies":null,"discussion_count":1,"race_medal":0,"score":6,"product_id":100093501,"comment_content":"通篇读下来，确实没有理解这里“我们一眼就看到了位于第 18 行的 new，这本是 Go 语言的一个预定义标识符，但上面示例代码呢，却用 new 这个名字定义了一个新类型，于是 new 这个标识符就被遮蔽了。”的意思。那文中应该把下面的func函数用大括号和type new int放在一起防止遮蔽么？","like_count":0,"discussions":[{"author":{"id":2611193,"avatar":"https://static001.geekbang.org/account/avatar/00/27/d7/f9/4c08ed90.jpg","nickname":"邵康","note":"","ucode":"B7E84309EE9C43","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":574415,"discussion_content":"goland YYDS","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1654049942,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1019807,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/8f/9f/e49b68ea.jpg","nickname":"幽弥狂","note":"","ucode":"5AECEA7D6ADF33","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":568451,"discussion_content":"还真是哟 666","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1651139689,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":320104,"user_name":"奕","can_delete":false,"product_type":"c1","uid":1005391,"ip_address":"","ucode":"73CEA468CE70C3","user_header":"https://static001.geekbang.org/account/avatar/00/0f/57/4f/6fb51ff1.jpg","comment_is_top":false,"comment_ctime":1636082435,"is_pvip":false,"replies":[{"id":116248,"content":"不妨展开说说，你提到的变量命名语义化是指用尽量表意的长命名么？比如the_name_of_that_person替代n？","user_name":"作者回复","user_name_real":"Tony Bai","uid":1026224,"ctime":1636422418,"ip_address":"","comment_id":320104,"utype":1}],"discussion_count":3,"race_medal":0,"score":6,"product_id":100093501,"comment_content":"变量命名语义化 就可以避免很多问题","like_count":0,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":529875,"discussion_content":"不妨展开说说，你提到的变量命名语义化是指用尽量表意的长命名么？比如the_name_of_that_person替代n？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1636422418,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1005391,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/57/4f/6fb51ff1.jpg","nickname":"奕","note":"","ucode":"73CEA468CE70C3","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":413243,"discussion_content":"根据变量在对应代码块中的位置，所起到的作用语意化。必要的时候可以进行前缀缩写，大家对前缀缩写的规则达成一致就可以","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1636423675,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1627670,"avatar":"https://static001.geekbang.org/account/avatar/00/18/d6/16/107f0d04.jpg","nickname":"山青","note":"","ucode":"904AE3C23D3B92","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1005391,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/57/4f/6fb51ff1.jpg","nickname":"奕","note":"","ucode":"73CEA468CE70C3","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":552405,"discussion_content":"object-c就是这样的语义化的语言 自解释、写完代码不用写注释 而且苹果也很提倡这样干","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1645450642,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":413243,"ip_address":"","group_id":0},"score":552405,"extra":""}]}]},{"had_liked":false,"id":321021,"user_name":"Geek_b6da5d","can_delete":false,"product_type":"c1","uid":2840222,"ip_address":"","ucode":"5DD79D2367ADA4","user_header":"","comment_is_top":false,"comment_ctime":1636623179,"is_pvip":false,"replies":null,"discussion_count":2,"race_medal":0,"score":6,"product_id":100093501,"comment_content":"goland其实能够看出变量的作用域 颜色上是不一样的 ","like_count":35,"discussions":[{"author":{"id":2611193,"avatar":"https://static001.geekbang.org/account/avatar/00/27/d7/f9/4c08ed90.jpg","nickname":"邵康","note":"","ucode":"B7E84309EE9C43","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":574415,"discussion_content":"goland YYDS","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1654049942,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1019807,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/8f/9f/e49b68ea.jpg","nickname":"幽弥狂","note":"","ucode":"5AECEA7D6ADF33","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":568451,"discussion_content":"还真是哟 666","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1651139689,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":363104,"user_name":"我是熊大","can_delete":false,"product_type":"c1","uid":1208327,"ip_address":"北京","ucode":"4BCE42C2C64E55","user_header":"https://static001.geekbang.org/account/avatar/00/12/70/07/bb4e6568.jpg","comment_is_top":false,"comment_ctime":1669220019,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":6,"product_id":100093501,"comment_content":"老师讲的晦涩了，作用域问题，这么讲不好理解，本质就是：局部量优先于全局变量","like_count":14},{"had_liked":false,"id":320556,"user_name":"进化菌","can_delete":false,"product_type":"c1","uid":1276861,"ip_address":"","ucode":"B30A5F78BB4171","user_header":"https://static001.geekbang.org/account/avatar/00/13/7b/bd/ccb37425.jpg","comment_is_top":false,"comment_ctime":1636377931,"is_pvip":true,"replies":null,"discussion_count":0,"race_medal":4,"score":6,"product_id":100093501,"comment_content":"这么来看的话，代码还是不要嵌套太深的好，同文件中的变量命名也尽量不重名，大概率能减少变量遮蔽的问题。","like_count":6},{"had_liked":false,"id":320196,"user_name":"aoe","can_delete":false,"product_type":"c1","uid":1121758,"ip_address":"","ucode":"1C6201EDB4E954","user_header":"https://static001.geekbang.org/account/avatar/00/11/1d/de/62bfa83f.jpg","comment_is_top":false,"comment_ctime":1636115610,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":6,"product_id":100093501,"comment_content":"不使用一样的名字就行啊","like_count":3},{"had_liked":false,"id":320190,"user_name":"罗杰","can_delete":false,"product_type":"c1","uid":1320487,"ip_address":"","ucode":"96BAFAA147341F","user_header":"https://static001.geekbang.org/account/avatar/00/14/26/27/eba94899.jpg","comment_is_top":false,"comment_ctime":1636113323,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":6,"product_id":100093501,"comment_content":"这节课适应在电脑上阅读，而且要用心看","like_count":3},{"had_liked":false,"id":333979,"user_name":"我好像一点都不像程序员","can_delete":false,"product_type":"c1","uid":1435733,"ip_address":"","ucode":"F479190923355C","user_header":"https://static001.geekbang.org/account/avatar/00/15/e8/55/63189817.jpg","comment_is_top":false,"comment_ctime":1644650967,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":6,"product_id":100093501,"comment_content":"学会了一个新的名词：变量遮蔽\n实际上就是一篇讲变量作用域的文章。和其他语言其实没有差太多。","like_count":1},{"had_liked":false,"id":350079,"user_name":"He","can_delete":false,"product_type":"c1","uid":2175841,"ip_address":"","ucode":"7F5FF5BEE48AF1","user_header":"https://static001.geekbang.org/account/avatar/00/21/33/61/16505a1a.jpg","comment_is_top":false,"comment_ctime":1656557957,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":6,"product_id":100093501,"comment_content":"package main\n\nimport (\n\t&quot;errors&quot;\n\t&quot;fmt&quot;\n)\nvar a int = 2020\n\nfunc checkYear() error {\n\terr := errors.New(&quot;wrong year&quot;)\n\tvar a new\t&#47;&#47;\t声明 a\n\tswitch a, err = getYear(); a {\t&#47;&#47; 不创建新变量，使用赋值操作\n\tcase 2020:\n\t\tfmt.Println(&quot;it is&quot;, a, err)\n\tcase 2021:\n\t\tfmt.Println(&quot;it is&quot;, a)\n\t\terr = nil\n\t}\n\tfmt.Println(&quot;after check, it is&quot;, a)\n\treturn err\n}\n\ntype new int\n\nfunc getYear() (new, error) {\n\tvar b int16 = 2021\n\treturn new(b), nil\n}\n\nfunc main() {\n\terr := checkYear()\n\tif err != nil {\n\t\tfmt.Println(&quot;call checkYear error:&quot;, err)\n\t\treturn\n\t}\n\tfmt.Println(&quot;call checkYear ok&quot;)\n}","like_count":0},{"had_liked":false,"id":334037,"user_name":"Geek_7254f2","can_delete":false,"product_type":"c1","uid":2275448,"ip_address":"","ucode":"D5770398168983","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTK4iaBTGZFCibGEWH3YavQO3e1FB9wnODiaYzexxGqTWRMiay6THfZNVSLDaIOz5RClHefVIYibZxm8G2Q/132","comment_is_top":false,"comment_ctime":1644684674,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":6,"product_id":100093501,"comment_content":"如果原来有c语言基础或java基础再或者别的语言基础，这一节很好理解，如果真的0基础，那确实很难了","like_count":0},{"had_liked":false,"id":320878,"user_name":"际遇。","can_delete":false,"product_type":"c1","uid":1169428,"ip_address":"","ucode":"E6BAE87225743B","user_header":"https://static001.geekbang.org/account/avatar/00/11/d8/14/d7d7af20.jpg","comment_is_top":false,"comment_ctime":1636537320,"is_pvip":false,"replies":null,"discussion_count":1,"race_medal":0,"score":6,"product_id":100093501,"comment_content":"通篇读下来，确实没有理解这里“我们一眼就看到了位于第 18 行的 new，这本是 Go 语言的一个预定义标识符，但上面示例代码呢，却用 new 这个名字定义了一个新类型，于是 new 这个标识符就被遮蔽了。”的意思。那文中应该把下面的func函数用大括号和type new int放在一起防止遮蔽么？","like_count":0,"discussions":[{"author":{"id":2323716,"avatar":"https://static001.geekbang.org/account/avatar/00/23/75/04/d26cd437.jpg","nickname":"lemon","note":"","ucode":"47626025C55E5E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":533020,"discussion_content":"个人理解：new是一个预定义标识符，或者说是关键字，用来新建一个对象，而type new int意思是自定义了一种数据类型叫new，本质是int类型，之后定义变量可以写成var x new也就相当于var x int;作者的例子里面的遮蔽体现出来的是本来的new关键字被遮蔽了，失去了它原本的作用，遮蔽以后例子中new(b)的含义变成了将b显示转换成new这个数据类型；“把下面的func函数用大括号和type new int放在一起防止遮蔽”这样做只是把new这个自定义type的作用域限定在了大括号范围内，范围外的new关键字应该是不会被遮蔽的，但最根本的解决方式还是不要用关键字来作为自定义数据类型的名字","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1637756912,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"user_type\":1}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":320042,"user_name":"功夫熊猫","can_delete":false,"product_type":"c1","uid":2732243,"ip_address":"","ucode":"D124F4FA4E816F","user_header":"https://static001.geekbang.org/account/avatar/00/29/b0/d3/200e82ff.jpg","comment_is_top":false,"comment_ctime":1636050344,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":7,"product_id":100093501,"comment_content":"如果第一个例子中的中第四句如果是a=1的话，而不是a:=1.，应该会变。","like_count":0},{"had_liked":false,"id":320042,"user_name":"功夫熊猫","can_delete":false,"product_type":"c1","uid":2732243,"ip_address":"","ucode":"D124F4FA4E816F","user_header":"https://static001.geekbang.org/account/avatar/00/29/b0/d3/200e82ff.jpg","comment_is_top":false,"comment_ctime":1636050344,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":7,"product_id":100093501,"comment_content":"如果第一个例子中的中第四句如果是a=1的话，而不是a:=1.，应该会变。","like_count":0}]}