{"id":6086,"title":"56 | 管理设计篇之“网关模式”","content":"<p>你好，我是陈皓，网名左耳朵耗子。</p>\n<p>前面，我们讲了Sidecar和Service Mesh这两种设计模式，它们都是在不侵入业务逻辑的情况下，把控制面（control plane）和数据面（data plane）的处理解耦分离。但是这两种模式都让我们的运维成本变得特别大，因为每个服务都需要一个Sidecar，这让本来就复杂的分布式系统的架构就更为复杂和难以管理了。</p>\n<p>在谈Service Mesh的时候，我们提到了Gateway。我个人觉得并不需要为每个服务的实例都配置上一个Sidecar。其实，一个服务集群配上一个Gateway就可以了，或是一组类似的服务配置上一个Gateway。</p>\n<p>这样一来，Gateway方式下的架构，可以细到为每一个服务的实例配置一个自己的Gateway，也可以粗到为一组服务配置一个，甚至可以粗到为整个架构配置一个接入的Gateway。于是，整个系统架构的复杂度就会变得简单可控起来。</p>\n<p><img src=\"https://static001.geekbang.org/resource/image/96/55/9618e7b3df119b07355891c76a741455.jpg?wh=3663x2226\" alt=\"\" /><br />\n这张图展示了一个多层Gateway架构，其中有一个总的Gateway接入所有的流量，并分发给不同的子系统，还有第二级Gateway用于做各个子系统的接入Gateway。可以看到，网关所管理的服务粒度可粗可细。通过网关，我们可以把分布式架构组织成一个星型架构，由网络对服务的请求进行路由和分发，也可以架构成像Servcie Mesh那样的网格架构，或者只是为了适配某些服务的Sidecar……</p>\n<p>但是，我们也可以看到，这样一来，Sidecar就不再那么轻量了，而且很有可能会变得比较重了。</p>\n<p>总的来说，Gateway是一个服务器，也可以说是进入系统的唯一节点。这跟面向对象设计模式中的Facade模式很像。Gateway封装内部系统的架构，并且提供API给各个客户端。它还可能有其他功能，如授权、监控、负载均衡、缓存、熔断、降级、限流、请求分片和管理、静态响应处理，等等。</p>\n<p>下面，我们来谈谈一个好的网关应该有哪些设计功能。</p>\n<!-- [[[read_end]]] -->\n<h1>网关模式设计</h1>\n<p>一个网关需要有以下的功能。</p>\n<ul>\n<li>\n<p><strong>请求路由</strong>。因为不再是Sidecar了，所以网关一定要有请求路由的功能。这样一来，对于调用端来说，也是一件非常方便的事情。因为调用端不需要知道自己需要用到的其它服务的地址，全部统一地交给Gateway来处理。</p>\n</li>\n<li>\n<p><strong>服务注册</strong>。为了能够代理后面的服务，并把请求路由到正确的位置上，网关应该有服务注册功能，也就是后端的服务实例可以把其提供服务的地址注册、取消注册。一般来说，注册也就是注册一些API接口。比如，HTTP的Restful请求，可以注册相应API的URI、方法、HTTP头。 这样，Gateway就可以根据接收到的请求中的信息来决定路由到哪一个后端的服务上。</p>\n</li>\n<li>\n<p><strong>负载均衡</strong>。因为一个网关可以接收多个服务实例，所以网关还需要在各个对等的服务实例上做负载均衡策略。简单点就是直接Round-Robin轮询，复杂点的可以设置上权重进行分发，再复杂一点还可以做到session粘连。</p>\n</li>\n<li>\n<p><strong>弹力设计</strong>。网关还可以把弹力设计中的那些异步、重试、幂等、流控、熔断、监视等都可以实现进去。这样，同样可以像Service Mesh那样，让应用服务只关心自己的业务逻辑（或是说数据面上的事）而不是控制逻辑（控制面）。</p>\n</li>\n<li>\n<p><strong>安全方面</strong>。SSL加密及证书管理、Session验证、授权、数据校验，以及对请求源进行恶意攻击的防范。错误处理越靠前的位置就是越好，所以，网关可以做到一个全站的接入组件来对后端的服务进行保护。</p>\n</li>\n</ul>\n<p>当然，网关还可以做更多更有趣的事情，比如：</p>\n<ul>\n<li>\n<p><strong>灰度发布</strong>。网关完全可以做到对相同服务不同版本的实例进行导流，还可以收集相关的数据。这样对于软件质量的提升，甚至产品试错都有非常积极的意义。</p>\n</li>\n<li>\n<p><strong>API聚合</strong>。使用网关可以将多个单独请求聚合成一个请求。在微服务体系的架构中，因为服务变小了，所以一个明显的问题是，客户端可能需要多次请求才能得到所有的数据。这样一来，客户端与后端之间的频繁通信会对应用程序的性能和规模产生非常不利的影响。于是，我们可以让网关来帮客户端请求多个后端的服务（有些场景下完全可以并发请求），然后把后端服务的响应结果拼装起来，回传给客户端（当然，这个过程也可以做成异步的，但这需要客户端的配合）。</p>\n</li>\n<li>\n<p><strong>API编排</strong>。同样在微服务的架构下，要走完一个完整的业务流程，我们需要调用一系列API，就像一种工作流一样，这个事完全可以通过网页来编排这个业务流程。我们可能通过一个DSL来定义和编排不同的API，也可以通过像AWS Lambda服务那样的方式来串联不同的API。</p>\n</li>\n</ul>\n<h1>Gateway、Sidecar和Service Mesh</h1>\n<p>通过上面的描述，我们可以看到，网关、边车和Service Mesh是非常像的三种设计模式，很容易混淆。因此，我在这里想明确一下这三种设计模式的特点、场景和区别。</p>\n<p>首先，Sidecar的方式主要是用来改造已有服务。我们知道，要在一个架构中实施一些架构变更时，需要业务方一起过来进行一些改造。然而业务方的事情比较多，像架构上的变更会低优先级处理，这就导致架构变更的“政治复杂度”太高。而通过Sidecar的方式，我们可以适配应用服务，成为应用服务进出请求的代理。这样，我们就可以干很多对于业务方完全透明的事情了。</p>\n<p>当Sidecar在架构中越来越多时，需要我们对Sidecar进行统一的管理。于是，我们为Sidecar增加了一个全局的中心控制器，就出现了我们的Service Mesh。在中心控制器出现以后，我们发现，可以把非业务功能的东西全部实现在Sidecar和Controller中，于是就成了一个网格。业务方只需要把服务往这个网格中一放就好了，与其它服务的通讯、服务的弹力等都不用管了，像一个服务的PaaS平台。</p>\n<p>然而，Service Mesh的架构和部署太过于复杂，会让我们运维层面上的复杂度变大。为了简化这个架构的复杂度，我认为Sidecar的粒度应该是可粗可细的，这样更为方便。但我认为，Gateway更为适合，而且Gateway只负责进入的请求，不像Sidecar还需要负责对外的请求。因为Gateway可以把一组服务给聚合起来，所以服务对外的请求可以交给对方服务的Gateway。于是，我们只需要用一个负责进入请求的Gateway来简化需要同时负责进出请求的Sidecar的复杂度。</p>\n<p>总而言之，我觉得Gateway的方式比Sidecar和Service Mesh更好。当然，具体问题还要具体分析。</p>\n<h1>网关的设计重点</h1>\n<p>第一点是<strong>高性能</strong>。在技术设计上，网关不应该也不能成为性能的瓶颈。对于高性能，最好使用高性能的编程语言来实现，如C、C++、Go和Java。网关对后端的请求，以及对前端的请求的服务一定要使用异步非阻塞的 I/O 来确保后端延迟不会导致应用程序中出现性能问题。C和C++可以参看Linux下的epoll和Windows的I/O Completion Port的异步IO模型，Java下如Netty、Vert.x、Spring Reactor的NIO框架。当然，我还是更喜欢Go语言的goroutine 加 channel玩法。</p>\n<p>第二点是<strong>高可用</strong>。因为所有的流量或调用经过网关，所以网关必须成为一个高可用的技术组件，它的稳定直接关系到了所有服务的稳定。网关如果没有设计，就会变成一个单点故障。因此，一个好的网关至少要做到以下几点。</p>\n<ul>\n<li><strong>集群化</strong>。网关要成为一个集群，其最好可以自己组成一个集群，并可以自己同步集群数据，而不需要依赖于一个第三方系统来同步数据。</li>\n<li><strong>服务化</strong>。网关还需要做到在不间断的情况下修改配置，一种是像Nginx reload配置那样，可以做到不停服务，另一种是最好做到服务化。也就是说，得要有自己的Admin API来在运行时修改自己的配置。</li>\n<li><strong>持续化</strong>。比如重启，就是像Nginx那样优雅地重启。有一个主管请求分发的主进程。当我们需要重启时，新的请求被分配到新的进程中，而老的进程处理完正在处理的请求后就退出。</li>\n</ul>\n<p>第三点是<strong>高扩展</strong>。因为网关需要承接所有的业务流量和请求，所以一定会有或多或少的业务逻辑。而我们都知道，业务逻辑是多变和不确定的。比如，需要在网关上加入一些和业务相关的东西。因此，一个好的Gateway还需要是可以扩展的，并能进行二次开发的。当然，像Nginx那样通过Module进行二次开发的固然可以。但我还是觉得应该做成像AWS Lambda那样的方式，也就是所谓的Serverless或FaaS（Function as a Service）那样的方式。</p>\n<p>另外，在<strong>运维方面</strong>，网关应该有以下几个设计原则。</p>\n<ul>\n<li>\n<p><strong>业务松耦合，协议紧耦合</strong>。在业务设计上，网关不应与后面的服务之间形成服务耦合，也不应该有业务逻辑。网关应该是在网络应用层上的组件，不应该处理通讯协议体，只应该解析和处理通讯协议头。另外，除了服务发现外，网关不应该有第三方服务的依赖。</p>\n</li>\n<li>\n<p><strong>应用监视，提供分析数据</strong>。网关上需要考虑应用性能的监控，除了有相应后端服务的高可用的统计之外，还需要使用Tracing ID实施分布式链路跟踪，并统计好一定时间内每个API的吞吐量、响应时间和返回码，以便启动弹力设计中的相应策略。</p>\n</li>\n<li>\n<p><strong>用弹力设计保护后端服务</strong>。网关上一定要实现熔断、限流、重试和超时等弹力设计。如果一个或多个服务调用花费的时间过长，那么可接受超时并返回一部分数据，或是返回一个网关里的缓存的上一次成功请求的数据。你可以考虑一下这样的设计。</p>\n</li>\n<li>\n<p><strong>DevOps</strong>。因为网关这个组件太关键了，所以需要DevOps这样的东西，将其发生故障的概率降到最低。这个软件需要经过精良的测试，包括功能和性能的测试，还有浸泡测试。还需要有一系列自动化运维的管控工具。</p>\n</li>\n</ul>\n<p>在整体的<strong>架构方面</strong>，有如下一些注意事项。</p>\n<ul>\n<li>\n<p>不要在网关中的代码里内置聚合后端服务的功能，而应考虑将聚合服务放在网关核心代码之外。可以使用Plugin的方式，也可以放在网关后面形成一个Serverless服务。</p>\n</li>\n<li>\n<p>网关应该靠近后端服务，并和后端服务使用同一个内网，这样可以保证网关和后端服务调用的低延迟，并可以减少很多网络上的问题。这里多说一句，网关处理的静态内容应该靠近用户（应该放到CDN上），而网关和此时的动态服务应该靠近后端服务。</p>\n</li>\n<li>\n<p>网关也需要做容量扩展，所以需要成为一个集群来分担前端带来的流量。这一点，要么通过DNS轮询的方式实现，要么通过CDN来做流量调度，或者通过更为底层的性能更高的负载均衡设备。</p>\n</li>\n<li>\n<p>对于服务发现，可以做一个时间不长的缓存，这样不需要每次请求都去查一下相关的服务所在的地方。当然，如果你的系统不复杂，可以考虑把服务发现的功能直接集成进网关中。</p>\n</li>\n<li>\n<p>为网关考虑bulkhead设计方式。用不同的网关服务不同的后端服务，或是用不同的网关服务前端不同的客户。</p>\n</li>\n</ul>\n<p>另外，因为网关是为用户请求和后端服务的桥接装置，所以需要考虑一些安全方面的事宜。具体如下：</p>\n<ul>\n<li>\n<p><strong>加密数据</strong>。可以把SSL相关的证书放到网关上，由网关做统一的SSL传输管理。</p>\n</li>\n<li>\n<p><strong>校验用户的请求</strong>。一些基本的用户验证可以放在网关上来做，比如用户是否已登录，用户请求中的token是否合法等。但是，我们需要权衡一下，网关是否需要校验用户的输入。因为这样一来，网关就需要从只关心协议头，到需要关心协议体。而协议体中的东西一方面不像协议头是标准的，另一方面解析协议体还要耗费大量的运行时间，从而降低网关的性能。对此，我想说的是，看具体需求，一方面如果协议体是标准的，那么可以干；另一方面，对于解析协议所带来的性能问题，需要做相应的隔离。</p>\n</li>\n<li>\n<p><strong>检测异常访问</strong>。网关需要检测一些异常访问，比如，在一段比较短的时间内请求次数超过一定数值；还比如，同一客户端的4xx请求出错率太高……对于这样的一些请求访问，网关一方面要把这样的请求屏蔽掉，另一方面需要发出警告，有可能会是一些比较重大的安全问题，如被黑客攻击。</p>\n</li>\n</ul>\n<h1>小结</h1>\n<p>好了，我们来总结一下今天分享的主要内容。首先，网关模式能代替边车模式，区别是它将分布在各个服务边上的边车换成了集中式的网关。网关不必管理所有服务节点，而是可以根据需要，为指定的服务集群配上网关，也可以在网关前面加上更高层的网关，从而构造出一个星型的结构。</p>\n<p>接着，我列举了网关模式的功能特性。然后，我介绍了网关模式的设计重点。由于网关的功能比较多，因此在设计上要考虑的点也比较多，需要我们仔细思考和斟酌。下节课，我们讲述部署升级策略。希望对你有帮助。</p>\n<p>也欢迎你分享一下你接触到的分布式系统有没有用到网关？网关的功能如何？有没有把服务的弹力设计做在里面？</p>\n<p>文末给出了《分布式系统设计模式》系列文章的目录，希望你能在这个列表里找到自己感兴趣的内容。</p>\n<ul>\n<li>弹力设计篇\n<ul>\n<li><a href=\"https://time.geekbang.org/column/article/3912\">认识故障和弹力设计</a></li>\n<li><a href=\"https://time.geekbang.org/column/article/3917\">隔离设计Bulkheads</a></li>\n<li><a href=\"https://time.geekbang.org/column/article/3926\">异步通讯设计Asynchronous</a></li>\n<li><a href=\"https://time.geekbang.org/column/article/4050\">幂等性设计Idempotency</a></li>\n<li><a href=\"https://time.geekbang.org/column/article/4086\">服务的状态State</a></li>\n<li><a href=\"https://time.geekbang.org/column/article/4087\">补偿事务Compensating Transaction</a></li>\n<li><a href=\"https://time.geekbang.org/column/article/4121\">重试设计Retry</a></li>\n<li><a href=\"https://time.geekbang.org/column/article/4241\">熔断设计Circuit Breaker</a></li>\n<li><a href=\"https://time.geekbang.org/column/article/4245\">限流设计Throttle</a></li>\n<li><a href=\"https://time.geekbang.org/column/article/4252\">降级设计degradation</a></li>\n<li><a href=\"https://time.geekbang.org/column/article/4253\">弹力设计总结</a></li>\n</ul>\n</li>\n<li>管理设计篇\n<ul>\n<li><a href=\"https://time.geekbang.org/column/article/5175\">分布式锁Distributed Lock</a></li>\n<li><a href=\"https://time.geekbang.org/column/article/5819\">配置中心Configuration Management</a></li>\n<li><a href=\"https://time.geekbang.org/column/article/5909\">边车模式Sidecar</a></li>\n<li><a href=\"https://time.geekbang.org/column/article/5920\">服务网格Service Mesh</a></li>\n<li><a href=\"https://time.geekbang.org/column/article/6086\">网关模式Gateway</a></li>\n<li><a href=\"https://time.geekbang.org/column/article/6283\">部署升级策略</a></li>\n</ul>\n</li>\n<li>性能设计篇\n<ul>\n<li><a href=\"https://time.geekbang.org/column/article/6282\">缓存Cache</a></li>\n<li><a href=\"https://time.geekbang.org/column/article/7036\">异步处理Asynchronous</a></li>\n<li><a href=\"https://time.geekbang.org/column/article/7045\">数据库扩展</a></li>\n<li><a href=\"https://time.geekbang.org/column/article/7047\">秒杀Flash Sales</a></li>\n<li><a href=\"https://time.geekbang.org/column/article/7086\">边缘计算Edge Computing</a></li>\n</ul>\n</li>\n</ul>\n","neighbors":{"left":{"article_title":"55 | 管理设计篇之“服务网格”","id":5920},"right":{"article_title":"57 | 管理设计篇之“部署升级策略”","id":6283}},"comments":[{"had_liked":false,"id":7125,"user_name":"于斯人也","can_delete":false,"product_type":"c1","uid":1001227,"ip_address":"","ucode":"F40A74F87EA2C9","user_header":"https://static001.geekbang.org/account/avatar/00/0f/47/0b/f9cf6d51.jpg","comment_is_top":false,"comment_ctime":1525306314,"is_pvip":false,"discussion_count":7,"race_medal":0,"score":"70244783050","product_id":100002201,"comment_content":"微服务之间的&quot;内部&quot;互相调用是否经过gateway","like_count":17,"discussions":[{"author":{"id":1033066,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/c3/6a/3272e095.jpg","nickname":"李春恒","note":"","ucode":"F2DCA19EC66DC1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":74810,"discussion_content":"外部用户---〉网关---〉内部服务\n内部服务根据自己公司的微服务调用方式直接调就行了，要么rpc调用（注册中心获取provider地址列表），要么http rest这种","likes_number":8,"is_delete":false,"is_hidden":false,"ctime":1575689571,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1274328,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLicryBoLjDicckia0c5bkOoAlYoR2I9NMK8BiaD7HCGxhS1eM9YSfDuUJuZC90uwv9FvHIVSsBoxFgZw/132","nickname":"MwumLi","note":"","ucode":"9A8A72334ADF6E","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1033066,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/c3/6a/3272e095.jpg","nickname":"李春恒","note":"","ucode":"F2DCA19EC66DC1","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":588571,"discussion_content":"如果直接调用，那内部服务怎么知道其他内部服务地址了\n要知道还不得走网关，不然就得内部服务还得关心与服务中心逻辑","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1663855422,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":74810,"ip_address":"陕西"},"score":588571,"extra":""}]},{"author":{"id":1000015,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/42/4f/ff1ac464.jpg","nickname":"又双叒叕是一年啊","note":"","ucode":"E067320E537DEE","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":350,"discussion_content":"个人觉得不用，服务注册发现可以直接掉，我觉得网关应该是对外网的流量接入层做分发操作","likes_number":7,"is_delete":false,"is_hidden":false,"ctime":1561467815,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1395853,"avatar":"","nickname":"胖头欧巴","note":"","ucode":"97EF28759A4E4A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":375546,"discussion_content":"不用，走rpc就行了","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1621740363,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2093865,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eoSEMDsdweasYxH9srXJCINWRgZrlkbMze029lplkw5gKC24MMCUOftA1l9eIyrffk2hnCOnyk3Xw/132","nickname":"Geek_5eb141","note":"","ucode":"3D8065C1F2E849","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":320751,"discussion_content":"不用，我们使用rpc","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1604469213,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2863356,"avatar":"","nickname":"qiaoxingxing","note":"","ucode":"4C1D68FBDAB0E4","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":538189,"discussion_content":"基于spring cloud开发, 内部调用不走网关; ","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1639363266,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2443837,"avatar":"https://static001.geekbang.org/account/avatar/00/25/4a/3d/b96f090c.jpg","nickname":"黑白灰","note":"","ucode":"C5B4B4DE4ACFC0","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":376163,"discussion_content":"可以走gateway进行负载均衡","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1621998921,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":8630,"user_name":"nut","can_delete":false,"product_type":"c1","uid":1097164,"ip_address":"","ucode":"C7F484AF275F09","user_header":"https://static001.geekbang.org/account/avatar/00/10/bd/cc/f25b9524.jpg","comment_is_top":false,"comment_ctime":1526349158,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"53065956710","product_id":100002201,"comment_content":"分享一下我们用到的网关，工作中内网微服务主要是HSF，而网关对我们来说，是服务对外开放给外部用户的渠道，他帮我们实现了软件商的资格审核备案，API调用权限管理，用户和软件商的三方授权，调用健康度管理，用户纬度的限流熔断，API内部协议和外部协议之间的转换，全球网络专线的优化，API纬度的监控告警。<br><br>大家工作中的网关都是什么用途呢？","like_count":13,"discussions":[{"author":{"id":1065775,"avatar":"https://static001.geekbang.org/account/avatar/00/10/43/2f/4ff46e78.jpg","nickname":"刘会俊","note":"","ucode":"DFC7B41EA6AF57","race_medal":2,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":366840,"discussion_content":"有点像是TOP","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1618203878,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2286129,"avatar":"","nickname":"Geek_82f894","note":"","ucode":"5CDB8E76CCC984","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":320905,"discussion_content":"TOP 网关？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1604501845,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":7183,"user_name":"约书亚","can_delete":false,"product_type":"c1","uid":1046714,"ip_address":"","ucode":"81EA27ADD9EC1A","user_header":"https://static001.geekbang.org/account/avatar/00/0f/f8/ba/14e05601.jpg","comment_is_top":false,"comment_ctime":1525319066,"is_pvip":false,"discussion_count":4,"race_medal":0,"score":"23000155546","product_id":100002201,"comment_content":"<br><br>关于网关看了很多资料，也有项目实践，但始终很困惑，请点播一二<br>从我收集的资料来看，微服务网关一般有如下作用：路由&#47;流控，鉴权，协议转换，服务聚合&#47;编排，监控，日志，熔断，限流...<br>我现在的架构，前面nginx只做路由，下游接“不同大业务块的网关”，这个网关简单理解就是人工编码的应用，未采用zuul，kong一类开源组件，做以上所有工作，我一直觉得以上设计和其他文章中对网关的定义差异很大，仿佛他们的网关能通过一个统一框架实现所有事情，除了聚合&#47;编排<br>我的疑问是，能不能说鉴权算不算一种业务逻辑？因为有的鉴权比较复杂，聚合和编排是否更涉及到了业务逻辑？如果整个系统只有在用户-系统的边界有一&#47;几个网关，如果其中包含了大量的鉴权和聚合&#47;编排，那就太臃肿了？既然网关的功能这么复杂，现在的主流框架主要还是解决性能和路由的问题，那还要他们干什么呢？随便一个高效的web框架不是也可以么？（只考虑7层）<br>那在我们设计系统中，在思考“网关到底要承载哪些功能”时，什么样的参数是要重点考虑的呢？有什<br>建议极客时间的所有课程增加定期答疑的环节<br>","like_count":6,"discussions":[{"author":{"id":1046714,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/f8/ba/14e05601.jpg","nickname":"约书亚","note":"","ucode":"81EA27ADD9EC1A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":543979,"discussion_content":"同感。\n这这评论3年半了，期间实践过多个不同项目的网关，最大的体会就是鉴权不属于网关。也有在网关上做鉴权的效果还不错的经历，但那个比较特殊，项目小。\n微服务设计模式买了好久，看了不足1/3，惭愧，我去翻翻这段","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1641372044,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1108958,"avatar":"https://static001.geekbang.org/account/avatar/00/10/eb/de/b0cfc4a6.jpg","nickname":"干脆面君","note":"","ucode":"2E220B400D4F96","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":7849,"discussion_content":"此网关非彼网关。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1567690910,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2863356,"avatar":"","nickname":"qiaoxingxing","note":"","ucode":"4C1D68FBDAB0E4","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":538188,"discussion_content":"《Microservice Patterns》建议网关只处理认证, 鉴权由后端服务处理; \n公司开发的网关处理了的鉴权, 实现了统一的&#34;认证鉴权&#34;, 但是网关和后端服务强耦合; ","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1639363167,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1046714,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/f8/ba/14e05601.jpg","nickname":"约书亚","note":"","ucode":"81EA27ADD9EC1A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2863356,"avatar":"","nickname":"qiaoxingxing","note":"","ucode":"4C1D68FBDAB0E4","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":543980,"discussion_content":"同感。\n这这评论3年半了，期间实践过多个不同项目的网关，最大的体会就是鉴权不属于网关。也有在网关上做鉴权的效果还不错的经历，但那个比较特殊，项目小。\n微服务设计模式买了好久，看了不足1/3，惭愧，我去翻翻这段","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1641372062,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":538188,"ip_address":""},"score":543980,"extra":""}]}]},{"had_liked":false,"id":7261,"user_name":"Ken","can_delete":false,"product_type":"c1","uid":1069703,"ip_address":"","ucode":"C330584F6DE3B6","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKGRpeljInKjibYj7TvZQwu3lwcHOsh3DMdsCJZGibt0onUQibeK1AOGBf60ZopfKDhBrLibKVzW3Xlicg/132","comment_is_top":false,"comment_ctime":1525359073,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"18705228257","product_id":100002201,"comment_content":"一直对服务聚合有比较多的疑问，聚合可能包括以下三种情况，假设后端服务A和B。第一种：简单的A+B的返回，第二种：A+B返回还需进一步数据转换再返回，第三种：需要先访问A，依赖A的结果再调用B。以上三种方式，哪些适合在网关层聚合处理？网关聚合处理有什么比较好的参考实现？","like_count":4,"discussions":[{"author":{"id":2542376,"avatar":"https://static001.geekbang.org/account/avatar/00/26/cb/28/21a8a29e.jpg","nickname":"夏天","note":"","ucode":"5F224DDAC94DFF","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":379541,"discussion_content":"第一种","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1623945260,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":7163,"user_name":"cornor","can_delete":false,"product_type":"c1","uid":1021877,"ip_address":"","ucode":"AB5B7E161576C8","user_header":"https://static001.geekbang.org/account/avatar/00/0f/97/b5/663cde8b.jpg","comment_is_top":false,"comment_ctime":1525311583,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"18705180767","product_id":100002201,"comment_content":"我们线上的服务分布式，用的是云平台上的负载均衡。模式类似于网关，不过缺少网关的流量控制，弹力设计等。接下来准备用go实现一个网关，把我们的架构升级一下","like_count":3},{"had_liked":false,"id":12730,"user_name":"👻wusir 👻","can_delete":false,"product_type":"c1","uid":1004693,"ip_address":"","ucode":"050D2921D87C5E","user_header":"https://static001.geekbang.org/account/avatar/00/0f/54/95/25a64f8a.jpg","comment_is_top":false,"comment_ctime":1528987175,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"14413889063","product_id":100002201,"comment_content":"耗叔，我正在做一个接入层的网关，看了你的这篇文章有个疑问，我在实现token bucket的时候发现：既然网关需要集群化，那么限流这样一个需要对api集中计算速率的事情，怎么在网关集群的多节点中共享这种高并发的调用纪录呢？我现在采用redis+lua脚本实现全局限流的，但是我也不想依赖于redis这样一个三方缓存系统，请问有什么好的建议么？盼复。另外如果可以的话，读者群是否可以pick一下我，谢谢！","like_count":4,"discussions":[{"author":{"id":1000015,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/42/4f/ff1ac464.jpg","nickname":"又双叒叕是一年啊","note":"","ucode":"E067320E537DEE","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":379,"discussion_content":"有读者群？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1561515253,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":168917,"user_name":"文刂 氵共 超","can_delete":false,"product_type":"c1","uid":1282813,"ip_address":"","ucode":"C2CE1512D23012","user_header":"https://static001.geekbang.org/account/avatar/00/13/92/fd/6b0e58fe.jpg","comment_is_top":false,"comment_ctime":1578216491,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10168151083","product_id":100002201,"comment_content":"坚持学习，学习笔记 https:&#47;&#47;mubu.com&#47;colla&#47;72fdck5DY00","like_count":2},{"had_liked":false,"id":64777,"user_name":"宝爷","can_delete":false,"product_type":"c1","uid":1153664,"ip_address":"","ucode":"DD517FA7EB59AB","user_header":"https://static001.geekbang.org/account/avatar/00/11/9a/80/2bf8d7fc.jpg","comment_is_top":false,"comment_ctime":1548905626,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"10138840218","product_id":100002201,"comment_content":"我这边的Gateway设计包含了权限验证，协议路由，防刷等功能，这里的观点在服务间都是tcp长连接的应用场景下是比较合适的【游戏业务，需要有一些服务端主动推送给客户端的高实时性需求】。<br>协议路由这块我是用一个配置来规划每个协议应该发往哪里，发送的路由规则也是可配置的，Gateway后端的服务之间的通讯都是通过Gateway转发，通过一套内部协议进行转发，服务间的调用相当于调用一个sendToServer(serverid, msg, ...)。<br>个人认为这样的好处是简化了业务服务的处理，只需要关注Gateway，而不需要知道其他服务的更详细的信息，完全屏蔽了其他服务的部署情况。且简化了网络结构，如果后面的服务直接需要互联那么这个只有一两层的树状结构就会变成网状结构，他们之间的异常处理，重连等等就会变得复杂难以维护。<br>如果是基于http的微服务，那我认为通过注册中心获取服务，然后直接调用也是可以的，但经过Gateway去做这件事情可以有更大的控制力。","like_count":2,"discussions":[{"author":{"id":2651290,"avatar":"https://static001.geekbang.org/account/avatar/00/28/74/9a/580d35a5.jpg","nickname":"用户7437721993","note":"","ucode":"0E16E6CFA4D225","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":379832,"discussion_content":"k8s里面的addons不都是这样么","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1624179157,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":26243,"user_name":"邹","can_delete":false,"product_type":"c1","uid":1157130,"ip_address":"","ucode":"8B4993F36C7885","user_header":"https://static001.geekbang.org/account/avatar/00/11/a8/0a/1709fc45.jpg","comment_is_top":false,"comment_ctime":1537526028,"is_pvip":false,"discussion_count":3,"race_medal":0,"score":"10127460620","product_id":100002201,"comment_content":"陈硕在知乎上说：epoll是同步的","like_count":2,"discussions":[{"author":{"id":1690242,"avatar":"https://static001.geekbang.org/account/avatar/00/19/ca/82/85f6a1a2.jpg","nickname":"番茄炒西红柿","note":"","ucode":"13F47BABAB2110","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":143473,"discussion_content":"同步非阻塞，linux不支持真正的异步，只有window才支持","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1579509319,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1221682,"avatar":"https://static001.geekbang.org/account/avatar/00/12/a4/32/4fac3a6c.jpg","nickname":"晓丹","note":"","ucode":"A90E8888A161C4","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":81887,"discussion_content":"同步非阻塞，你看他的api，仍然需要selector检测","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1576291620,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1155414,"avatar":"https://static001.geekbang.org/account/avatar/00/11/a1/56/ad5dba39.jpg","nickname":"moliniao","note":"","ucode":"D38D159E960FFA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":5956,"discussion_content":"同步非阻塞","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566551014,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":7173,"user_name":"邓志国","can_delete":false,"product_type":"c1","uid":1043844,"ip_address":"","ucode":"380AE67ED7B9D7","user_header":"https://static001.geekbang.org/account/avatar/00/0f/ed/84/0b8e2d25.jpg","comment_is_top":false,"comment_ctime":1525314743,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10115249335","product_id":100002201,"comment_content":"感觉网关应该分两种，一种对内，基本不变，和业务逻辑无关。一种对外，实现api组合鉴权等。这两部分诉求不同，放一起是否很难做？","like_count":2},{"had_liked":false,"id":211993,"user_name":"少盐","can_delete":false,"product_type":"c1","uid":1305743,"ip_address":"","ucode":"BCC7E264B75702","user_header":"https://static001.geekbang.org/account/avatar/00/13/ec/8f/8299495a.jpg","comment_is_top":false,"comment_ctime":1588043711,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"5883011007","product_id":100002201,"comment_content":"gateway的需要做的工作太多了，会不会导致臃肿，或者成为瓶颈","like_count":1,"discussions":[{"author":{"id":2009734,"avatar":"","nickname":"一墨","note":"","ucode":"2EFB72EEC69FE2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":280762,"discussion_content":"是的, 所以菜肴根据具体情况折衷处理","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1591608953,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":150578,"user_name":"尘埃观世界","can_delete":false,"product_type":"c1","uid":1107635,"ip_address":"","ucode":"4EC86C32468B45","user_header":"https://static001.geekbang.org/account/avatar/00/10/e6/b3/c0edfd54.jpg","comment_is_top":false,"comment_ctime":1573561830,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"5868529126","product_id":100002201,"comment_content":"而且 Gateway 只负责进入的请求，不像 Sidecar 还需要负责对外的请求? <br><br>不是很明白这句的意思.还望解释下. ","like_count":1,"discussions":[{"author":{"id":1554638,"avatar":"https://static001.geekbang.org/account/avatar/00/17/b8/ce/0abbb54d.jpg","nickname":"俊毓","note":"","ucode":"F150D39D00FAAC","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":139776,"discussion_content":"边车的部署方式，除了会像常见的nginx应用场景那样，负责进来的请求流量的代理和分发。它还会在内部通过类似iptable的方式拦截服务对第三方服务的请求，统一管理服务内出去的请求流量。这样做的话，服务网格就是一个对全网环境都很清楚的服务网关所有进出流量都是通过它统一管理","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1579317170,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":115116,"user_name":"edisonhuang","can_delete":false,"product_type":"c1","uid":1530167,"ip_address":"","ucode":"BB2F639A779F96","user_header":"https://static001.geekbang.org/account/avatar/00/17/59/37/bd2de0a4.jpg","comment_is_top":false,"comment_ctime":1563497586,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5858464882","product_id":100002201,"comment_content":"网关是进入系统的唯一入口，需要完成服务路由，服务注册，负载均衡，可弹力伸缩，并且保证安全性。需要是高性能，高可用和高扩展的。实施过程也要避免和业务层面有耦合，而应专注在通讯层面的内容","like_count":1},{"had_liked":false,"id":320759,"user_name":"方勇(gopher)","can_delete":false,"product_type":"c1","uid":1290625,"ip_address":"","ucode":"D199911C4CFEF5","user_header":"https://static001.geekbang.org/account/avatar/00/13/b1/81/13f23d1e.jpg","comment_is_top":false,"comment_ctime":1636506411,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1636506411","product_id":100002201,"comment_content":"目前只用Kong做入口流量网关","like_count":0},{"had_liked":false,"id":307956,"user_name":"Thyyyy","can_delete":false,"product_type":"c1","uid":2066246,"ip_address":"","ucode":"EF90097F54784E","user_header":"https://static001.geekbang.org/account/avatar/00/1f/87/46/125e5997.jpg","comment_is_top":false,"comment_ctime":1629337780,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1629337780","product_id":100002201,"comment_content":"百度开源的BFE是不是就可以理解成gateway模式的一种实践","like_count":0},{"had_liked":false,"id":171217,"user_name":"lordrobert","can_delete":false,"product_type":"c1","uid":1056368,"ip_address":"","ucode":"C14B45BCC32F9D","user_header":"https://static001.geekbang.org/account/avatar/00/10/1e/70/35403a95.jpg","comment_is_top":false,"comment_ctime":1578883195,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1578883195","product_id":100002201,"comment_content":"API编排部分不太理解，业务流程不应该有业务处理吗，为什么要在网关处理？<br>还有aws的lambda怎么来串联不同api?以及为何要这样做？","like_count":0},{"had_liked":false,"id":170489,"user_name":"知行合一","can_delete":false,"product_type":"c1","uid":1521486,"ip_address":"","ucode":"2B8E634FC4CFB7","user_header":"https://static001.geekbang.org/account/avatar/00/17/37/4e/5c3153b2.jpg","comment_is_top":false,"comment_ctime":1578620890,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1578620890","product_id":100002201,"comment_content":"正在实现自己的网关，现在主要是服务路由，服务注册发现，认证，加解密，降级等功能，学习了本文发现自己还有很长的路要走。","like_count":0},{"had_liked":false,"id":106712,"user_name":"靠人品去赢","can_delete":false,"product_type":"c1","uid":1301286,"ip_address":"","ucode":"7A20F9EBE847E1","user_header":"https://static001.geekbang.org/account/avatar/00/13/db/26/54f2c164.jpg","comment_is_top":false,"comment_ctime":1561376829,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1561376829","product_id":100002201,"comment_content":"这篇文章只看文章原文，会有一个内容很少的错觉，但是看一眼音频的长度，知道这并不简单。","like_count":0,"discussions":[{"author":{"id":2362704,"avatar":"","nickname":"多多学习","note":"","ucode":"8149297EC0C5B9","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":336241,"discussion_content":"什么意思，语音和文章不一样吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1608538056,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":7752,"user_name":"沫沫（美丽人生）","can_delete":false,"product_type":"c1","uid":1051023,"ip_address":"","ucode":"FC73BF0D79E3FD","user_header":"https://static001.geekbang.org/account/avatar/00/10/09/8f/ad6039b6.jpg","comment_is_top":false,"comment_ctime":1525697748,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1525697748","product_id":100002201,"comment_content":"老师晚上好，我们最近想开发一个这样的SaaS软件，用户可以绑定不同的邮件帐号（如QQ和163等），可以在我们的邮箱里接收邮件，也可以发送邮件，并且用户的邮件也需要存储在我们的服务器上（数据安全及数据同步策略），这方面有有一些开源的项目可以做二次开发吗?如果没有，能否讲讲邮件服务器开发方面的核心技术及思路呢?如果有相关的资料，也可以推荐给我。万分感谢，盼复！","like_count":0},{"had_liked":false,"id":7262,"user_name":"Ken","can_delete":false,"product_type":"c1","uid":1069703,"ip_address":"","ucode":"C330584F6DE3B6","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKGRpeljInKjibYj7TvZQwu3lwcHOsh3DMdsCJZGibt0onUQibeK1AOGBf60ZopfKDhBrLibKVzW3Xlicg/132","comment_is_top":false,"comment_ctime":1525359196,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1525359196","product_id":100002201,"comment_content":"一直纠结是否要在网关层做业务参数校验，看了文中的说明，大概了解了处理的原则，感谢！","like_count":0}]}