{"id":93130,"title":"05 | 思考题解读：如何实现可自我迭代的计算机？","content":"<p>你好，我是七牛云许式伟。</p><p>在“<a href=\"https://time.geekbang.org/column/article/91425\">03 | 汇编：编程语言的诞生</a>”中，我给出了一个架构思考题：</p><p><strong>第一台以键盘+显示器为标准输入输出的现代计算机出现后，一个最小功能集，但计算能力可自我迭代的计算机应该是什么样的？</strong></p><p>从需求上来说，我们期望它有如下能力。</p><ul>\n<li>键盘和显示器的驱动程序。</li>\n<li>当时最主流的外置存储设备（不一定是现代的硬盘）的驱动程序。</li>\n<li>一个汇编程序编辑器。可从存储中读取汇编程序代码，修改并保存到存储中。</li>\n<li>一个汇编编译器。可将汇编程序代码编译成机器代码程序，并保存到存储中。</li>\n<li>支持执行一段保存在外置存储设备中的机器代码程序。</li>\n</ul><p>那么，它的变化点和稳定点分别是什么？为此，你会怎么设计，设计出哪些子系统，每个子系统的规格是什么？扩展性上有哪些考虑？</p><h2>需求分析</h2><p>我们前面谈架构思维时提到：<strong>做架构，第一件事情要学会做需求分析</strong>。</p><p>需求分析的重要性怎么形容都不过分。准确的需求分析是做出良好架构设计的基础。我个人认为，架构师在整个架构的过程中，至少应该花费三分之一的精力在需求分析上。</p><p>这也是为什么很多非常优秀的架构师换到一个新领域后，一上来并不能保证一定能够设计出良好的架构，而是往往需要经过几次迭代才趋于稳定，原因就在于：领域的需求理解是需要一个过程的，对客户需求的理解不可能一蹴而就。</p><!-- [[[read_end]]] --><p>所以，一个优秀的架构师除了需要“在心里对需求反复推敲”的严谨态度外，对客户反馈的尊重之心也至关重要。只有心里装着客户，才能理解好需求，做好架构。</p><p>前面我们也强调过：在需求分析时，要区分需求的变化点和稳定点。稳定点往往是系统的核心能力，而变化点则需要对应地去考虑扩展性上的设计。</p><p>那么今天我们来实战一番，要实现一个最小化的计算能力可自我迭代的计算机，我们怎么做需求分析。</p><h2>怎么实现可自我迭代的计算机？</h2><p>通过前面对计算机工作原理的分析，我们已经知道，计算机分为三大类的零部件：</p><ul>\n<li>中央处理器；</li>\n<li>存储；</li>\n<li>输入输出设备。</li>\n</ul><p>中央处理器作为“计算”能力的核心，我们已经对它的工作范畴解剖清晰，这里不提。</p><p>存储，一方面作为“计算”的输入输出，另一方面作为“计算”本身的承载（也就是程序），主要的变数在后者。存储上的程序主要是：</p><ul>\n<li>计算机主板ROM上的启动程序（BIOS）；</li>\n<li>外置存储上的软件。</li>\n</ul><p>接下来我们要考虑清楚的是：BIOS 负责做什么，外置存储上的软件负责做什么。这里我们先不展开。</p><p>输入输出设备，除了键盘和显示器外，还有外置存储。键盘和显示器我们只需要准备好对应的驱动程序，并没有特别需要考虑的内容。主要的变数在外置存储上。</p><p>外置存储在我们为它准备好了驱动程序后，就可以对它进行数据的读写了，但是我们接着需要考虑的问题是：我们准备把外置存储的数据格式设计成什么样？</p><p>回答这个问题前，先回顾下我们要做什么。目前我们已知的功能需求有如下这些。</p><ul>\n<li>键盘和显示器的驱动程序。</li>\n<li>外置存储设备的驱动程序。</li>\n<li>汇编程序编辑器。可从外置存储中读取汇编程序代码，修改并保存到外置存储中。</li>\n<li>汇编编译器。可将汇编程序代码编译成机器代码程序，并保存到外置存储中。</li>\n<li>支持执行一段保存在外置存储设备中的机器代码程序。</li>\n</ul><p>我们可以看到，外置存储需要保存的内容有：</p><ul>\n<li>\n<p>汇编程序的源代码；</p>\n</li>\n<li>\n<p>汇编编译器编译出来的可执行程序。</p>\n</li>\n</ul><p>可见，外置存储它不应该只能保存一个文件，而是应该是多个。既然是多个，就需要组织这些文件。那么，怎么组织呢？</p><p>今天我们当然知道，操作系统的设计者们设计了文件系统这样的东西，来组织这些文件。虽然文件系统的种类有很多（比如：FAT32、NTFS、EXT3、EXT4 等等），但是它们有统一的抽象：文件系统是一颗树；节点要么是目录，要么是文件；文件必然是叶节点；根节点是目录，目录可以有子节点。</p><p>但是，文件系统（File System）是否是唯一的可能性？当然不是。键值存储（Key-Value 存储）也挺好，尤其是早期外置存储容量很可能极其有限的情况下。可以做这样统一的抽象：</p><ul>\n<li>每个文件都有一个名字（Key），通过名字（Key）可以唯一定位该文件，以进行文件内容的读写；</li>\n<li>为了方便管理文件，可以对文件名做模糊查询（List），查询（List）操作支持通配符（比如我们现在习惯用的<code>*</code>和<code>?</code>）；</li>\n<li>未来外置存储的空间有可能很大，需要考虑文件管理的延展性问题；可以考虑允许每个文件设定额外的元数据（Meta），例如创建时间、编辑时间、最后访问时间、以及其他用户自定义的元数据。通过元数据我们也可以检索（Search）到我们感兴趣的文件。</li>\n</ul><p>聊完了外置存储，让我们再回来看看 BIOS 和外置存储的软件怎么分工。</p><p>首先，BIOS 和外置存储上的软件分工的标准是什么？BIOS 是刻在计算机主板ROM上的启动程序，它的变更非常麻烦。所以 BIOS 负责的事情最好越少越好，只做最稳定不变的事情。</p><p>我们一一来看当前已知的需求。</p><p><strong>首先是外部设备的驱动程序</strong>：键盘和显示器的驱动程序、外置存储设备的驱动程序。一方面，只要键盘、显示器、外置存储没有大的演进，驱动程序就不变，所以这块是稳定的；另一方面，它们是 BIOS 干其他业务的基础。所以，这个事情 BIOS 必然会做。</p><p><strong>其次是汇编程序编辑器。</strong>编辑器的需求是模糊的，虽然我们知道它支持用户来编写程序，但是整个编辑器的操作范式是什么样的，没有规定。所以它不像是给键盘写一个驱动程序那样，是一个确定性的需求，而有很多额外的交互细节，需要去进一步明确。</p><p>你可以留意下自己日常使用的编辑器，去试着列一下它们的功能列表。你会发现小小的编辑器，功能远比你接触的大部分常规软件要多得多。</p><p><strong>再次是汇编编译器。</strong>汇编编译器从输入输出来看，似乎需求相对确定。输入的是汇编源代码，输出的是可执行程序。但认真分析你会发现，它实际上也有很大的不确定性。</p><p>其一，CPU 会增加指令，这时候汇编指令也会相应地增加。对于大部分应用程序，CPU 新增的指令如果自己用不到，可以当它不存在。但是汇编语言及编译器需要完整呈现 CPU 的能力，因此需要及时跟进。</p><p>其二，虽然汇编指令基本上和机器指令一一对应，但是它毕竟是面向程序员的生产力工具，所以汇编语言还是会演进出一些高阶的语法，比如宏汇编指令。</p><p>所谓宏汇编指令，就是用一个命令去取代一小段汇编指令序列，它和C语言里面的宏非常类似。所以汇编语言并不是稳定的东西，它和其他高级语言类似，也会迭代变化。这就意味着汇编编译器也需要相应地迭代变化。</p><p><strong>最后，执行一段保存在外置存储设备中的机器代码程序。</strong>这个需求看似比较明确，但是实际上需求也需要进一步细化。它究竟是基于外置存储的物理地址来执行程序，还是基于文件系统中的文件（文件内容逻辑上连续，但是物理上很可能不连续）来执行程序？</p><p>实现上，这两者有很大的不同。前者只需要依赖外置存储的驱动程序就可以完成，后者则还需要额外理解文件系统的格式才能做到。</p><p>那么，BIOS 到底怎么把执行控制权交到外置存储呢？</p><p>在学冯·诺依曼结构的时候，我们提到过，CPU 加电启动时，它会从存储的一个固定地址开始执行指令，这个固定地址指向的正是 BIOS 程序。</p><p>类似的，我们的 BIOS 也可以认定一个外置存储的固定地址来加载程序并执行，而无需关心磁盘的数据格式是什么样的。这个固定地址所在的数据区域，我们可以把它叫做引导区。</p><p>引导区的存在非常重要，它实际上是 BIOS 与操作系统的边界。</p><p>对于 BIOS 来说，执行外置存储上的程序能力肯定是需要具备的，否则它没有办法把执行权交给外置存储。但是这个能力可以是非常简约的。BIOS 只需要执行引导区的程序，这个程序并不长，完全可以直接读入到内存中，然后再执行。</p><p>我们是否需要基于文件系统中的文件来执行程序的能力？答案是需要。因为汇编编译器编译后的程序在外置存储中，需要有人能够去执行它。</p><p>综上，我们确认 BIOS 需要负责的事情是：</p><ul>\n<li>键盘和显示器的驱动程序；</li>\n<li>外置存储设备的驱动程序；</li>\n<li>支持执行外置存储中引导区的机器代码程序；</li>\n<li>跳转到外置存储的固定地址，把执行权交给该地址上的引导程序。</li>\n</ul><p>而汇编程序编辑器、汇编编译器 ，以及支持执行文件系统中的程序，则不应该由 BIOS 来负责。</p><p>那么，外置存储上的引导程序拿到执行权后干什么呢？</p><p>我们再来总结下当前我们遇到的需求。</p><ul>\n<li>需要有人负责支持外置存储的数据格式，提供统一的功能给其他程序使用。无论它是文件系统，还是Key-Value存储系统。</li>\n<li>需要有人提供管理外置存储的基础能力，比如查询（List）一下外置存储里面都有些什么文件。它可以实现为一个独立的程序，比如我们命名为 ls。</li>\n<li>需要有人执行外置存储上的可执行程序。它可以实现为一个独立的程序，比如我们命名为 sh。</li>\n<li>汇编程序编辑器。其实这个程序和汇编语言没什么关系，就是一个纯正的文本编辑器。我们可以把这个程序命名为 vi。</li>\n<li>汇编编译器。它可以实现为一个独立的程序，比如我们命名为 asm。</li>\n</ul><p>引导程序拿到执行权后，我们不管它额外做了哪些事情，最终它要把执行权交给 sh 程序。因为，sh 程序算得上是可自我迭代的计算机扩展性的体现：通过 sh 程序来执行外置存储上的任意程序，这也相当于在扩展 CPU 的指令集。</p><h2>结语</h2><p>我们来回顾一下今天的内容。一个最小功能集、计算能力可自我迭代的计算机，它的变化点和稳定点分别是什么？为此，你会怎么设计，设计出哪些子系统，每个子系统的规格是什么？扩展性上有哪些考虑？</p><p>需求的变化点在于下面这几点。</p><ul>\n<li>外置存储的数据格式。对此，我们设计文件系统（或Key-Value存储）子系统来负责这件事情。另外，我们也提供了 ls 程序来管理外置存储中的文件。</li>\n<li>用户最终拿到这个计算机后，会迭代出什么能力。对此，我们设计了 sh 程序，让它支持在外置存储上执行任何应用程序。</li>\n<li>编辑器的交互范式。对此，我们设计了 vi 程序，让它迭代编辑器的能力。</li>\n<li>汇编语言的使用范式。对此，我们设计了 asm 程序，让它响应 CPU 指令集的迭代，以及汇编语言进化的迭代。</li>\n</ul><p>最终，我们设计出来的“可自我迭代的计算机”，它的系统架构看起来是这样的：</p><p><img src=\"https://static001.geekbang.org/resource/image/95/47/95183755588918ff21a76b747a96b247.png?wh=1920*1108\" alt=\"\"></p><p>你的需求分析和系统设计跟上面的架构一致吗？</p><p>不一致非常正常，架构并无标准答案。但通过对比别人的方案与自己的不同之处，可以加深你对架构设计在决策上的体会。</p><p>另外，在 “可自我迭代的计算机” 这样相对模糊需求的细化过程中，也会很自然出现不太一样的理解，这些都是正常的，这也是需求分析的重要性所在，它本身就是一个需求从模糊到细化并最终清晰定义的过程。</p><p>如果你觉得系统过于复杂，不知道如何下手，也不要紧，设计“一个可自我迭代的计算机” 的确是一个复杂的系统，它并不是一个非常适合架构新手的任务。但是我仍然希望通过这样一个例子的剖析，你对需求分析中稳定点和变化点的判断有所感悟。</p><p>如果你有什么样的想法和疑问，欢迎你给我留言，我们一起讨论。如果你觉得有所收获，也欢迎把文章分享给你的朋友。感谢你的收听，我们下期再见。</p>","neighbors":{"left":{"article_title":"04 | 编程语言的进化","id":92419},"right":{"article_title":"06 | 操作系统进场","id":93315}},"comments":[{"had_liked":false,"id":90937,"user_name":"Enthusiasm","can_delete":false,"product_type":"c1","uid":1504776,"ip_address":"","ucode":"FEAA522C24A6D5","user_header":"https://static001.geekbang.org/account/avatar/00/16/f6/08/ecf5d724.jpg","comment_is_top":false,"comment_ctime":1556748341,"is_pvip":false,"replies":[{"id":"32619","content":"很赞的总结","user_name":"作者回复","user_name_real":"许式伟-七牛云(已满)","uid":"1228022","ctime":1556770589,"ip_address":"","comment_id":90937,"utype":1}],"discussion_count":3,"race_medal":0,"score":"667276679221","product_id":100025201,"comment_content":"总结：设计系统架构的前提是用户需求分析，用户需求包括分析出稳定需求点和变化需求点。从功能上看，稳定需求点一般是实现偏核心需求的需求点，变化需求点往往是实现偏扩展性需求的需求点。从层次结构上看，稳定需求点往往在系统层次的底层，而变化需求点往往在更加抽象层（上层）。从从属关系上看，稳定点需要提供功能给变化点使用，变化点调用稳定点提供的功能。从时间顺序看，稳定需求往往先现是变化点实现的基础，变化点通过调用已经实现的稳定点提供的功能来实现更为抽象的功能。<br>系统架构类似于一个栈的结构，人机交互（变化点）放在栈顶，底层工作（稳定点）置于栈底。<br>这节课程让我联想到网络中的OSI 7层模型。大概其也体现了这种软件架构思想。好处就是架构清晰，职责明确，功能规范等等。<br>以往我认为的架构设计类似上面的描述，描述起来类似按自顶向下顺序，采用分治思想完成。但许老师的方法又有些巧：架构好比搭积木，许老师是先有了很多积木（需求点），然后把再确定这些积木放在哪一层次的格子里。这简化了架构设计的难度，好比用市场经济代替计划经济，很有趣。<br>架构设计博大精深，灵活多变，初学课程的我们，对架构设计的学习，也只能算是盲人摸象。","like_count":156,"discussions":[{"author":{"id":1228022,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bc/f6/e61d4b8f.jpg","nickname":"许式伟-七牛云(已满)","note":"","ucode":"1A2F8AA6F6DB54","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":448732,"discussion_content":"很赞的总结","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1556770589,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1650748,"avatar":"https://static001.geekbang.org/account/avatar/00/19/30/3c/0668d6ae.jpg","nickname":"盘胧","note":"","ucode":"5386CC4C92ECC2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":408751,"discussion_content":"卧槽有点 一切皆哲学的意思了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1635317846,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1299038,"avatar":"https://static001.geekbang.org/account/avatar/00/13/d2/5e/b5362ca9.jpg","nickname":"老黄","note":"","ucode":"6F32D6BAD9C220","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":67818,"discussion_content":"总结的真厉害","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1575180379,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":92403,"user_name":"s","can_delete":false,"product_type":"c1","uid":1509114,"ip_address":"","ucode":"5FAD8408395A61","user_header":"https://static001.geekbang.org/account/avatar/00/17/06/fa/3d15ad73.jpg","comment_is_top":false,"comment_ctime":1557248687,"is_pvip":false,"replies":[{"id":"33036","content":"这是我听到的最好的赞美，感谢。能够唤醒人们对架构之美的追求，无疑是我最大的动力。","user_name":"作者回复","user_name_real":"许式伟-七牛云(已满)","uid":"1228022","ctime":1557252556,"ip_address":"","comment_id":92403,"utype":1}],"discussion_count":2,"race_medal":0,"score":"315089861295","product_id":100025201,"comment_content":"已经很久没有看到这么赞的文章了，起初踏入编程的大门就是想创造，在我眼里设计一个项目仿佛完成一个完美的艺术品。工作了以后感觉这份激情渐渐的被磨平，面对客户需求，仅仅是 &quot;他指哪，我打哪&quot;，软件的产出仅仅只是换钱的砝码。这篇文章又把我的梦想拉了回来。技术能解决的问题都不叫问题，唯独思想的升华是无价的，万分感激!","like_count":74,"discussions":[{"author":{"id":1228022,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bc/f6/e61d4b8f.jpg","nickname":"许式伟-七牛云(已满)","note":"","ucode":"1A2F8AA6F6DB54","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":449243,"discussion_content":"这是我听到的最好的赞美，感谢。能够唤醒人们对架构之美的追求，无疑是我最大的动力。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1557252556,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1202575,"avatar":"https://static001.geekbang.org/account/avatar/00/12/59/8f/5f882e65.jpg","nickname":"Yo","note":"","ucode":"A0877C2A03DDEF","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":330325,"discussion_content":"唤起被工作磨掉的激情","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1606569372,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":92564,"user_name":"山口谈退隐去了","can_delete":false,"product_type":"c1","uid":1098641,"ip_address":"","ucode":"5025A27DC9EBCE","user_header":"https://static001.geekbang.org/account/avatar/00/10/c3/91/c0578c04.jpg","comment_is_top":false,"comment_ctime":1557302029,"is_pvip":false,"replies":[{"id":"33093","content":"赞，很多人都有这个误区，以解决方案代替需求。要清醒认知这一点并不容易。","user_name":"作者回复","user_name_real":"许式伟-七牛云(已满)","uid":"1228022","ctime":1557308748,"ip_address":"","comment_id":92564,"utype":1}],"discussion_count":2,"race_medal":0,"score":"276435208973","product_id":100025201,"comment_content":"看完这篇文章让我想起了在一本育儿书上看到过这么一句话：“当人们使用‘需求’这个词的时候，他们所说的常常是一个能够满足需求的解决方案而不是需求本身”。而需求分析就是为了找到问题，然后告诉人们，你其实还可以这么做而不是你应该这么做。","like_count":65,"discussions":[{"author":{"id":1228022,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bc/f6/e61d4b8f.jpg","nickname":"许式伟-七牛云(已满)","note":"","ucode":"1A2F8AA6F6DB54","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":449321,"discussion_content":"赞，很多人都有这个误区，以解决方案代替需求。要清醒认知这一点并不容易。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1557308748,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1162210,"avatar":"https://static001.geekbang.org/account/avatar/00/11/bb/e2/fe68798b.jpg","nickname":"大迎","note":"","ucode":"F6F41431A92391","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":358216,"discussion_content":"深有体会，一个需求点解决方案无法自拔代表需求本身","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1615947873,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":90584,"user_name":"梦醒十分","can_delete":false,"product_type":"c1","uid":1043585,"ip_address":"","ucode":"33830A5A73DDF8","user_header":"https://static001.geekbang.org/account/avatar/00/0f/ec/81/2127e215.jpg","comment_is_top":false,"comment_ctime":1556584321,"is_pvip":false,"replies":[{"id":"32438","content":"从无到有到万物，我们这个课的脉络之一就是重新从零构建整个信息世界，这一点在开篇词中提到过，这一点非常非常关键。另一个脉络是架构思维的递进，这一章重点是需求分析。这两个脉络相辅相成，交织在一起。","user_name":"作者回复","user_name_real":"许式伟-七牛云(已满)","uid":"1228022","ctime":1556586509,"ip_address":"","comment_id":90584,"utype":1}],"discussion_count":1,"race_medal":0,"score":"126110635905","product_id":100025201,"comment_content":"老师授课知识的角度很有深度，更贴切的说是一种思维方式，这种深度思考，从事情的本质重新推演与复盘的思考方式是很值得学习的。因为我们大部分人应该都没有想过自己去重新设计一个计算机的实现。","like_count":30,"discussions":[{"author":{"id":1228022,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bc/f6/e61d4b8f.jpg","nickname":"许式伟-七牛云(已满)","note":"","ucode":"1A2F8AA6F6DB54","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":448581,"discussion_content":"从无到有到万物，我们这个课的脉络之一就是重新从零构建整个信息世界，这一点在开篇词中提到过，这一点非常非常关键。另一个脉络是架构思维的递进，这一章重点是需求分析。这两个脉络相辅相成，交织在一起。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1556586509,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":90938,"user_name":"Enthusiasm","can_delete":false,"product_type":"c1","uid":1504776,"ip_address":"","ucode":"FEAA522C24A6D5","user_header":"https://static001.geekbang.org/account/avatar/00/16/f6/08/ecf5d724.jpg","comment_is_top":false,"comment_ctime":1556751293,"is_pvip":false,"replies":[{"id":"32618","content":"硬件系统就是“稳定点”，软件系统就是“变化点”。挺好的总结。","user_name":"作者回复","user_name_real":"许式伟-七牛云(已满)","uid":"1228022","ctime":1556770474,"ip_address":"","comment_id":90938,"utype":1}],"discussion_count":1,"race_medal":0,"score":"78866162621","product_id":100025201,"comment_content":"“活到老学到老”啊，突然意识到，不光是软件架构如此，连计算机系统架构也是如此。<br>我们从小学计算机，每门计算机课程的第一课总是概述“计算机由硬件系统和软件系统构成”。<br>今天，许老师通过抽象出“稳定点”和“变化点”的概念，从另一个角度带给我对这句话更深的理解，才让明白这句话的真正含义。<br>原来，所谓的硬件系统就是“稳定点”，软件系统就是“变化点”。<br>原来，一句最最平淡无奇的描述，一个最最基础的系统，也蕴含着“架构思维”。<br>万事万物其实是相通的，我的梦想就是，透过这些表象的描述，看到思想的本质。","like_count":18,"discussions":[{"author":{"id":1228022,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bc/f6/e61d4b8f.jpg","nickname":"许式伟-七牛云(已满)","note":"","ucode":"1A2F8AA6F6DB54","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":448733,"discussion_content":"硬件系统就是“稳定点”，软件系统就是“变化点”。挺好的总结。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1556770474,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":90716,"user_name":"WL","can_delete":false,"product_type":"c1","uid":1173771,"ip_address":"","ucode":"6277DCD776B87E","user_header":"https://static001.geekbang.org/account/avatar/00/11/e9/0b/1171ac71.jpg","comment_is_top":false,"comment_ctime":1556616029,"is_pvip":false,"replies":[{"id":"32486","content":"指功能可以越来越强大，是活的机器，而不是能力固定的机器","user_name":"作者回复","user_name_real":"许式伟-七牛云(已满)","uid":"1228022","ctime":1556627120,"ip_address":"","comment_id":90716,"utype":1}],"discussion_count":1,"race_medal":0,"score":"78866027357","product_id":100025201,"comment_content":"请问一下老师, 03和05两篇文章中的&quot;可自我迭代的计算机&quot;中的&quot;可自我迭代&quot;是啥意思, 是指的是计算机可以执行各种各样的外部程序吗?","like_count":18,"discussions":[{"author":{"id":1228022,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bc/f6/e61d4b8f.jpg","nickname":"许式伟-七牛云(已满)","note":"","ucode":"1A2F8AA6F6DB54","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":448625,"discussion_content":"指功能可以越来越强大，是活的机器，而不是能力固定的机器","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1556627120,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":90611,"user_name":"程序员小跃","can_delete":false,"product_type":"c1","uid":1015483,"ip_address":"","ucode":"25BB96E0791A60","user_header":"https://static001.geekbang.org/account/avatar/00/0f/7e/bb/947c329a.jpg","comment_is_top":false,"comment_ctime":1556587812,"is_pvip":true,"replies":[{"id":"32440","content":"做任何事情，首先要有正确的姿势，然后就是千锤百炼、熟能生巧了。","user_name":"作者回复","user_name_real":"许式伟-七牛云(已满)","uid":"1228022","ctime":1556588192,"ip_address":"","comment_id":90611,"utype":1}],"discussion_count":1,"race_medal":0,"score":"44506260772","product_id":100025201,"comment_content":"拿到一个需求，需要做明确的需求分析，这是对我目前水平来说最有用的方式。文中讲的需求分析，让我受益很深。<br><br>不过实践部分，有点吃力，还需要细细品味才行。","like_count":11,"discussions":[{"author":{"id":1228022,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bc/f6/e61d4b8f.jpg","nickname":"许式伟-七牛云(已满)","note":"","ucode":"1A2F8AA6F6DB54","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":448594,"discussion_content":"做任何事情，首先要有正确的姿势，然后就是千锤百炼、熟能生巧了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1556588192,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":90711,"user_name":"裴海港","can_delete":false,"product_type":"c1","uid":1038992,"ip_address":"","ucode":"2A17A0B4816BED","user_header":"https://static001.geekbang.org/account/avatar/00/0f/da/90/0b74748f.jpg","comment_is_top":false,"comment_ctime":1556614490,"is_pvip":false,"replies":[{"id":"32488","content":"这个例子的确有点复杂。不过这些概念引入的时候都有相应的内容介绍，而且也是理解计算机很重要的基础，所以在例子类型上没有刻意避免。您可以说一下哪个概念比较难以理解，这样我可以多补充一下相关背景知识。","user_name":"作者回复","user_name_real":"许式伟-七牛云(已满)","uid":"1228022","ctime":1556627602,"ip_address":"","comment_id":90711,"utype":1}],"discussion_count":1,"race_medal":0,"score":"31621385562","product_id":100025201,"comment_content":"我觉得拿一个软件系统的架构作为例子是不是更好，因为对于有些人来说，BIOS，ROM，文件系统，驱动程序这些过于抽象，难有代入感，不便于消化吸收。","like_count":7,"discussions":[{"author":{"id":1228022,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bc/f6/e61d4b8f.jpg","nickname":"许式伟-七牛云(已满)","note":"","ucode":"1A2F8AA6F6DB54","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":448623,"discussion_content":"这个例子的确有点复杂。不过这些概念引入的时候都有相应的内容介绍，而且也是理解计算机很重要的基础，所以在例子类型上没有刻意避免。您可以说一下哪个概念比较难以理解，这样我可以多补充一下相关背景知识。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1556627602,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":90915,"user_name":"ljf10000","can_delete":false,"product_type":"c1","uid":1494064,"ip_address":"","ucode":"44957329A61EAE","user_header":"https://wx.qlogo.cn/mmopen/vi_32/DYAIOgq83eop9WylZJicLQ5wib49kcMPqCTRT1aThh6mMAVl6qseLwbVOLhicVLjZCxCoyQd5CrrHHibs2CVPaoK3g/132","comment_is_top":false,"comment_ctime":1556721640,"is_pvip":false,"replies":[{"id":"32620","content":"对的","user_name":"作者回复","user_name_real":"许式伟-七牛云(已满)","uid":"1228022","ctime":1556770656,"ip_address":"","comment_id":90915,"utype":1}],"discussion_count":1,"race_medal":0,"score":"27326525416","product_id":100025201,"comment_content":"内置&#47;外置存储是这样划分？内置存储应该是ram&#47;rom&#47;flash这些cpu可直接寻址的设备，其它不可直接寻址的设备是外置存储。CPU启动必然是从一个非易失的内置存储上某条指令开始。","like_count":6,"discussions":[{"author":{"id":1228022,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bc/f6/e61d4b8f.jpg","nickname":"许式伟-七牛云(已满)","note":"","ucode":"1A2F8AA6F6DB54","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":448719,"discussion_content":"对的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1556770656,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":90823,"user_name":"Geek_88604f","can_delete":false,"product_type":"c1","uid":1501234,"ip_address":"","ucode":"33DD1318E53814","user_header":"","comment_is_top":false,"comment_ctime":1556677866,"is_pvip":false,"replies":[{"id":"32567","content":"ls会调用文件系统，文件系统会调用外置存储的驱动程序，驱动程序会调用cpu的端口io指令。","user_name":"作者回复","user_name_real":"许式伟-七牛云(已满)","uid":"1228022","ctime":1556679772,"ip_address":"","comment_id":90823,"utype":1}],"discussion_count":1,"race_medal":0,"score":"27326481642","product_id":100025201,"comment_content":"请问许老师，用户执行ls命令的时候，从系统架构图上看各模块之间是如何交互的？","like_count":7,"discussions":[{"author":{"id":1228022,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bc/f6/e61d4b8f.jpg","nickname":"许式伟-七牛云(已满)","note":"","ucode":"1A2F8AA6F6DB54","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":448675,"discussion_content":"ls会调用文件系统，文件系统会调用外置存储的驱动程序，驱动程序会调用cpu的端口io指令。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1556679772,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":90768,"user_name":"ljf10000","can_delete":false,"product_type":"c1","uid":1494064,"ip_address":"","ucode":"44957329A61EAE","user_header":"https://wx.qlogo.cn/mmopen/vi_32/DYAIOgq83eop9WylZJicLQ5wib49kcMPqCTRT1aThh6mMAVl6qseLwbVOLhicVLjZCxCoyQd5CrrHHibs2CVPaoK3g/132","comment_is_top":false,"comment_ctime":1556633377,"is_pvip":false,"replies":[{"id":"32546","content":"1、不包括内存。外置存储（外存）是指cpu不直接支持的存储。cpu直接支持的叫内置存储，包括：寄存器、内存（RAM）、主板上的ROM。<br><br>2、cpu并没有直接执行外置存储上指令的能力。它通过支持虚拟内存做到支持外置存储的。虚拟内存在某一个页不存在的时候发生缺页中断，缺页中断由某个函数响应，再把缺的页从外存读进来。","user_name":"作者回复","user_name_real":"许式伟-七牛云(已满)","uid":"1228022","ctime":1556663731,"ip_address":"","comment_id":90768,"utype":1}],"discussion_count":2,"race_medal":0,"score":"27326437153","product_id":100025201,"comment_content":"1。这里外置存储应该包括我们平常所说的内存和硬盘。现在允许cpu直接执行存储上的指令，除了内存，可能大家熟悉的只有flash了。<br><br>2。如果没有cpu直接执行外置存储上指令的能力，就是有sh也没用，毕竟sh也是保存在外置存储上。","like_count":6,"discussions":[{"author":{"id":1228022,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bc/f6/e61d4b8f.jpg","nickname":"许式伟-七牛云(已满)","note":"","ucode":"1A2F8AA6F6DB54","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":448644,"discussion_content":"1、不包括内存。外置存储（外存）是指cpu不直接支持的存储。cpu直接支持的叫内置存储，包括：寄存器、内存（RAM）、主板上的ROM。\n\n2、cpu并没有直接执行外置存储上指令的能力。它通过支持虚拟内存做到支持外置存储的。虚拟内存在某一个页不存在的时候发生缺页中断，缺页中断由某个函数响应，再把缺的页从外存读进来。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1556663731,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1276613,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/gmP4Yh00MZPwNvr4UQdLeXaX3TVyZEEp195S3vD3Sfl1xz5jBr1474Mt6w5OPr0KsrnQObfLRy5PkKNFjSBiasA/132","nickname":"大头爸爸","note":"","ucode":"131E25DB04D222","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":229584,"discussion_content":"记得CPU可以直接执行NOR Flash程序?","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1586667588,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":112059,"user_name":"老男孩","can_delete":false,"product_type":"c1","uid":1134514,"ip_address":"","ucode":"CEC6D47412F620","user_header":"https://static001.geekbang.org/account/avatar/00/11/4f/b2/1e8b5616.jpg","comment_is_top":false,"comment_ctime":1562662066,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"23037498546","product_id":100025201,"comment_content":"第一遍没明白，看了第二遍似乎明白点了。中央处理器-&gt;bios-&gt;操作系统-&gt;中间件-&gt;我们编写的可执行的机器码。控制权是通过一种约定或者是抽象一层一层向外扩展，稳定性也是从里到外逐渐衰减。可以完成的功能是也从极简到复杂多样化。我们在设计的时候应该找到稳定点和变化点，或者是稳定层或者变化层，变化的依赖稳定的抽象，而是不是稳定依赖变化。极简及稳定，复杂及变化。","like_count":5},{"had_liked":false,"id":90747,"user_name":"涵","can_delete":false,"product_type":"c1","uid":1502742,"ip_address":"","ucode":"BB8575DB13F1E0","user_header":"https://static001.geekbang.org/account/avatar/00/16/ee/16/742956ac.jpg","comment_is_top":false,"comment_ctime":1556625170,"is_pvip":false,"replies":[{"id":"32485","content":"挺好的问题。这里的文件系统子系统，它的交付物是什么？假设还没有操作系统这样的基础软件，它是否可以是包（package）？我觉得是可以的，虽然这样无法实现文件锁这样的多进程协同能力，但是我们实现的是单进程的计算机，不需要有文件锁这种东西。","user_name":"作者回复","user_name_real":"许式伟-七牛云(已满)","uid":"1228022","ctime":1556626910,"ip_address":"","comment_id":90747,"utype":1}],"discussion_count":1,"race_medal":0,"score":"18736494354","product_id":100025201,"comment_content":"请问老师，最终架构图中的文件系统和现实中的操作系统是什么关系?文件系统是否是操作系统的一个子系统?或者说操作系统是否就是从文件系统中衍生出来的具有更多功能的文件系统?谢谢!","like_count":4,"discussions":[{"author":{"id":1228022,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bc/f6/e61d4b8f.jpg","nickname":"许式伟-七牛云(已满)","note":"","ucode":"1A2F8AA6F6DB54","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":448635,"discussion_content":"挺好的问题。这里的文件系统子系统，它的交付物是什么？假设还没有操作系统这样的基础软件，它是否可以是包（package）？我觉得是可以的，虽然这样无法实现文件锁这样的多进程协同能力，但是我们实现的是单进程的计算机，不需要有文件锁这种东西。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1556626910,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":97111,"user_name":"王聪 Claire","can_delete":false,"product_type":"c1","uid":1090310,"ip_address":"","ucode":"0D9CC82C9F44D4","user_header":"https://static001.geekbang.org/account/avatar/00/10/a3/06/9fa93074.jpg","comment_is_top":false,"comment_ctime":1558591443,"is_pvip":false,"replies":[{"id":"34724","content":"对的","user_name":"作者回复","user_name_real":"许式伟-七牛云(已满)","uid":"1228022","ctime":1558603664,"ip_address":"","comment_id":97111,"utype":1}],"discussion_count":1,"race_medal":0,"score":"14443493331","product_id":100025201,"comment_content":"请问一下BIOS程序的这两条功能：1. 支持执行外置存储中引导区的机器代码程序； 2. 跳转到外置存储的固跳转到外置存储的固定地址，把执行权交给该地址上的引导程序。其实是一件事情，就是加载外置存储固定地址引导区的程序并在内存中执行。对吗？多谢。","like_count":2,"discussions":[{"author":{"id":1228022,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bc/f6/e61d4b8f.jpg","nickname":"许式伟-七牛云(已满)","note":"","ucode":"1A2F8AA6F6DB54","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":451142,"discussion_content":"对的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1558603664,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":90718,"user_name":"gopherliu","can_delete":false,"product_type":"c1","uid":1202971,"ip_address":"","ucode":"0254E9A95B71C3","user_header":"https://static001.geekbang.org/account/avatar/00/12/5b/1b/78a937d8.jpg","comment_is_top":false,"comment_ctime":1556616127,"is_pvip":true,"replies":[{"id":"32490","content":"账号密码，这个是个选择权的问题，确实是产品经理和架构师要考虑的点。现在蛮多软件都直接接微信或支付宝账号的。用户数据属于用户有点理想化，因为数据是在使用软件过程中产生的，更多只能通过法律途径解决，而挺难技术层面解决。","user_name":"作者回复","user_name_real":"许式伟-七牛云(已满)","uid":"1228022","ctime":1556627806,"ip_address":"","comment_id":90718,"utype":1}],"discussion_count":2,"race_medal":0,"score":"14441518015","product_id":100025201,"comment_content":"我突然想起个事，关于稳定点和变化点。各个银行的手机app大同小异，有必要每个银行都造一遍轮子？甚至就是所有的手机app都是基本的那一套。最为稳定的一点就是：账户密码。这玩意有必要每个app来一份吗？难道就不能有一个每个人单独的、唯一的数字身份？为了争夺用户，却给用户带来的更多的麻烦。还有，用户的数据为啥就不能属于用户自己的呢，被各大互联网巨头利用过来、利用过去的。对于此，许老师有何看法？","like_count":3,"discussions":[{"author":{"id":1228022,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bc/f6/e61d4b8f.jpg","nickname":"许式伟-七牛云(已满)","note":"","ucode":"1A2F8AA6F6DB54","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":448626,"discussion_content":"账号密码，这个是个选择权的问题，确实是产品经理和架构师要考虑的点。现在蛮多软件都直接接微信或支付宝账号的。用户数据属于用户有点理想化，因为数据是在使用软件过程中产生的，更多只能通过法律途径解决，而挺难技术层面解决。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1556627806,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1485562,"avatar":"https://static001.geekbang.org/account/avatar/00/16/aa/fa/3ad0a689.jpg","nickname":"廖师虎","note":"","ucode":"1297068AE141DA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":54994,"discussion_content":"数据确权可用区块链解决","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574330989,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":136279,"user_name":"嚆同学","can_delete":false,"product_type":"c1","uid":1018329,"ip_address":"","ucode":"5F5BFE47B3302C","user_header":"https://static001.geekbang.org/account/avatar/00/0f/89/d9/abb7bfe3.jpg","comment_is_top":false,"comment_ctime":1569402626,"is_pvip":false,"replies":[{"id":"52216","content":"语言分内核和库（扩展）。内核是表达方式，库是领域知识或科技成果。语言内核在第二层，库在应用层。","user_name":"作者回复","user_name_real":"许式伟-七牛云(已满)","uid":"1228022","ctime":1569408574,"ip_address":"","comment_id":136279,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10159337218","product_id":100025201,"comment_content":"架构图中，汇编语言放在第二层不太理解，虽说可以理解为是CPU指令的高层次包装，我感觉应该放在最上层，请老师指正？","like_count":2,"discussions":[{"author":{"id":1228022,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bc/f6/e61d4b8f.jpg","nickname":"许式伟-七牛云(已满)","note":"","ucode":"1A2F8AA6F6DB54","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":468539,"discussion_content":"语言分内核和库（扩展）。内核是表达方式，库是领域知识或科技成果。语言内核在第二层，库在应用层。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1569408574,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":90594,"user_name":"gbfa","can_delete":false,"product_type":"c1","uid":1156523,"ip_address":"","ucode":"7FC55B99F4B780","user_header":"","comment_is_top":false,"comment_ctime":1556585584,"is_pvip":false,"replies":[{"id":"32442","content":"后面会涉及这块，这本身也是这个专栏的一个关键脉络。","user_name":"作者回复","user_name_real":"许式伟-七牛云(已满)","uid":"1228022","ctime":1556588375,"ip_address":"","comment_id":90594,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10146520176","product_id":100025201,"comment_content":"文章中提到做架构第一步是需求分析，那后面如何将需求逐步过渡到具体实现，能否提炼出几个比较通用的步骤？","like_count":2,"discussions":[{"author":{"id":1228022,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bc/f6/e61d4b8f.jpg","nickname":"许式伟-七牛云(已满)","note":"","ucode":"1A2F8AA6F6DB54","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":448586,"discussion_content":"后面会涉及这块，这本身也是这个专栏的一个关键脉络。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1556588375,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":107283,"user_name":"Smallfly","can_delete":false,"product_type":"c1","uid":1013841,"ip_address":"","ucode":"D388D5E0249A69","user_header":"https://static001.geekbang.org/account/avatar/00/0f/78/51/4790e13e.jpg","comment_is_top":false,"comment_ctime":1561511453,"is_pvip":false,"replies":[{"id":"38920","content":"1、适应cpu对汇编语言开发团队，已经是新功能了，这是变化；<br>2、宏不会增加指令，只是一种代码模板，宏机制是汇编语言的一个新功能，用来提供更高阶的编程范式。","user_name":"作者回复","user_name_real":"许式伟-七牛云(已满)","uid":"1228022","ctime":1561561144,"ip_address":"","comment_id":107283,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5856478749","product_id":100025201,"comment_content":"许老师，对于汇编编译器的需求不确定性我不是很能理解：<br><br>1. CPU 增加指令，需要更换 CPU，也就是升级硬件，升级硬件的同时可以升级汇编编译器。对用户来说汇编编译器就像是 CPU 的说明书，不需要可编程。<br><br>2. 汇编编译器为什么需要根据宏编译指令迭代呢？如果是，这说明宏不是抽象的设计，会导致汇编指令无限膨胀。就像计算器提供加减乘除，不管怎么组合，计算器都能完成任务，而不应该用加减乘除组合出一个计算器算不出来的东西。<br><br><br>综合这两点看，似乎汇编编译器也应该是稳定的需求。","like_count":1,"discussions":[{"author":{"id":1228022,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bc/f6/e61d4b8f.jpg","nickname":"许式伟-七牛云(已满)","note":"","ucode":"1A2F8AA6F6DB54","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":455451,"discussion_content":"1、适应cpu对汇编语言开发团队，已经是新功能了，这是变化；\n2、宏不会增加指令，只是一种代码模板，宏机制是汇编语言的一个新功能，用来提供更高阶的编程范式。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1561561144,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":107256,"user_name":"Smallfly","can_delete":false,"product_type":"c1","uid":1013841,"ip_address":"","ucode":"D388D5E0249A69","user_header":"https://static001.geekbang.org/account/avatar/00/0f/78/51/4790e13e.jpg","comment_is_top":false,"comment_ctime":1561508944,"is_pvip":false,"replies":[{"id":"38799","content":"是的","user_name":"作者回复","user_name_real":"许式伟-七牛云(已满)","uid":"1228022","ctime":1561511302,"ip_address":"","comment_id":107256,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5856476240","product_id":100025201,"comment_content":"BIOS 从外置存储固定地址加载程序并执行，那是不是说，外置存储必须要在这个地址上放置引导程序。是 BIOS 要求外置存储必须遵循的协议。","like_count":1,"discussions":[{"author":{"id":1228022,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bc/f6/e61d4b8f.jpg","nickname":"许式伟-七牛云(已满)","note":"","ucode":"1A2F8AA6F6DB54","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":455440,"discussion_content":"是的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1561511302,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":93634,"user_name":"乘风","can_delete":false,"product_type":"c1","uid":1115724,"ip_address":"","ucode":"0420C5535DACB7","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLwSoTjHPX5tm4whBSfoZLX6toZxrZGUaLABQywKNf4MDc9toK3QSV7Z99ATcGicFCysoleQ5ISzmw/132","comment_is_top":false,"comment_ctime":1557540970,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5852508266","product_id":100025201,"comment_content":"老师写的确实是经典，自身功力不够不能了解其中的脉络。看了几遍，感觉懂了一些，又感觉没懂，对这几遍做一个总结吧：<br>1.需求分析是架构设计中最重要的事，只有彻底的分析清楚需求才能明白系统内部的部件和各部件之间的交互流程，清晰的展现系统工作流程。<br>2.如何去分析一个需求。首先考虑系统的整体，然后对整体进行细分，细分的过程还意味着重新组合，把每一个需求点都分析到位，找出其中的稳定和变化点。<br>3.稳定点和变化点。稳定点是系统的核心能力，比如上文提到的驱动程序、执行程序的能力，而变化点是基于稳定点的上层功能（大部分），考虑开放性设计，比如编译器、外置存储都可能会快速迭代，所以我能否认为驱动程序是一种标准规范，对外体现是这个标准，内部实现仍然是根据标准完成的，只是实现方式不同。<br>4.计算机的启动过程。计算机通电后会到固定地址（ROM主板）执行一段BIOS程序，BIOS程序可以将执行能力交给外置存储上的程序。外置存储存储的程序使计算机拥有自我迭代的能力。<br>很感谢老师的文章。<br><br><br><br>","like_count":1},{"had_liked":false,"id":91064,"user_name":"Y.sl","can_delete":false,"product_type":"c1","uid":1512800,"ip_address":"","ucode":"3486DAA6866A10","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIc44zibpZJoRp9oKMfS4on4XgpVibQVBHQtwqABtqOibxsQicp5vX06ibOxCNueG3SL1Lzec1PAtJC32A/132","comment_is_top":false,"comment_ctime":1556843377,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5851810673","product_id":100025201,"comment_content":"看完许老师的架构课，再看各位朋友的评论以及老师的回复，又有了更深的理解。","like_count":1},{"had_liked":false,"id":90958,"user_name":"猿工匠","can_delete":false,"product_type":"c1","uid":1112986,"ip_address":"","ucode":"82FA8DE6C28936","user_header":"https://static001.geekbang.org/account/avatar/00/10/fb/9a/72f7b184.jpg","comment_is_top":false,"comment_ctime":1556759402,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5851726698","product_id":100025201,"comment_content":"厉害👍，动手学习计算机结构设计和系统。学习了。","like_count":1},{"had_liked":false,"id":90916,"user_name":"大光","can_delete":false,"product_type":"c1","uid":1473507,"ip_address":"","ucode":"4DA7886930062D","user_header":"https://static001.geekbang.org/account/avatar/00/16/7b/e3/825a9e05.jpg","comment_is_top":false,"comment_ctime":1556722395,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5851689691","product_id":100025201,"comment_content":"渐入佳境，起初感觉讲的太缥缈，逐渐理解是为了从最原始，最根源，从无到有👍","like_count":1},{"had_liked":false,"id":90813,"user_name":"明翼","can_delete":false,"product_type":"c1","uid":1068361,"ip_address":"","ucode":"E77F86BEB3D5C1","user_header":"https://static001.geekbang.org/account/avatar/00/10/4d/49/28e73b9c.jpg","comment_is_top":false,"comment_ctime":1556673372,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5851640668","product_id":100025201,"comment_content":"例子很复杂，和我设想的很不一样","like_count":1},{"had_liked":false,"id":90636,"user_name":"吴小智","can_delete":false,"product_type":"c1","uid":1310798,"ip_address":"","ucode":"C7C9F58B5C9F7B","user_header":"https://static001.geekbang.org/account/avatar/00/14/00/4e/be2b206b.jpg","comment_is_top":false,"comment_ctime":1556593215,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5851560511","product_id":100025201,"comment_content":"老师的 level 确实很高，看问题的角度很到位，也很独特，学习了。","like_count":1},{"had_liked":false,"id":90628,"user_name":"糖果屋","can_delete":false,"product_type":"c1","uid":1035908,"ip_address":"","ucode":"7D76B735CF0D0E","user_header":"https://static001.geekbang.org/account/avatar/00/0f/ce/84/d60ac57a.jpg","comment_is_top":false,"comment_ctime":1556590746,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5851558042","product_id":100025201,"comment_content":"个人理解是对需求进行拆分，大的抽象需求拆分成多个明确的具体需求；再确定具体需求的变化点与稳定点。难点就是最初具体需求拆分粒度、需求接口规划、需求之间的管理等。随着系统的复杂度越来越高，需求的拆分也要随之变化。<br>学习老师的思想，期待老师的方法论<br>","like_count":1},{"had_liked":false,"id":90616,"user_name":"jueyoq","can_delete":false,"product_type":"c1","uid":1129625,"ip_address":"","ucode":"5CD5A9CF9B5B1C","user_header":"https://static001.geekbang.org/account/avatar/00/11/3c/99/6080d269.jpg","comment_is_top":false,"comment_ctime":1556589188,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5851556484","product_id":100025201,"comment_content":"马斯克： 这就是我说的 第一性原理呀 许老师 么么哒","like_count":1},{"had_liked":false,"id":90585,"user_name":"Barry","can_delete":false,"product_type":"c1","uid":1003308,"ip_address":"","ucode":"79117738B2B26E","user_header":"https://static001.geekbang.org/account/avatar/00/0f/4f/2c/a17b23f7.jpg","comment_is_top":false,"comment_ctime":1556584517,"is_pvip":false,"replies":[{"id":"32439","content":"的确如此，但是系统也不是越微越好，后面我们会谈系统分解粒度的问题。","user_name":"作者回复","user_name_real":"许式伟-七牛云(已满)","uid":"1228022","ctime":1556586568,"ip_address":"","comment_id":90585,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5851551813","product_id":100025201,"comment_content":"如果一个系统过于复杂，那么就需要剥离出一个个服务，来最终实现整个系统的服务。这样的好处就是每个小的服务之间互不干扰，迭代优化等都可以独立进行。看到这篇文章讲的计算机架构的设计，我就联想到了微服务","like_count":1,"discussions":[{"author":{"id":1228022,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bc/f6/e61d4b8f.jpg","nickname":"许式伟-七牛云(已满)","note":"","ucode":"1A2F8AA6F6DB54","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":448582,"discussion_content":"的确如此，但是系统也不是越微越好，后面我们会谈系统分解粒度的问题。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1556586568,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":90580,"user_name":"Linuxer","can_delete":false,"product_type":"c1","uid":1153978,"ip_address":"","ucode":"272D9D8089C3D6","user_header":"https://static001.geekbang.org/account/avatar/00/11/9b/ba/333b59e5.jpg","comment_is_top":false,"comment_ctime":1556584006,"is_pvip":false,"replies":[{"id":"32437","content":"上面的分层是思路逐步从抽象到具体，当然，大部分也的确成为一个实实在在的子系统。","user_name":"作者回复","user_name_real":"许式伟-七牛云(已满)","uid":"1228022","ctime":1556586293,"ip_address":"","comment_id":90580,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5851551302","product_id":100025201,"comment_content":"这里是通过分层来隔离稳定点和变化点?","like_count":1,"discussions":[{"author":{"id":1228022,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bc/f6/e61d4b8f.jpg","nickname":"许式伟-七牛云(已满)","note":"","ucode":"1A2F8AA6F6DB54","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":448578,"discussion_content":"上面的分层是思路逐步从抽象到具体，当然，大部分也的确成为一个实实在在的子系统。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1556586293,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":90575,"user_name":"Aaron Cheung","can_delete":false,"product_type":"c1","uid":1079816,"ip_address":"","ucode":"03972759C53667","user_header":"https://static001.geekbang.org/account/avatar/00/10/7a/08/4d3e47dd.jpg","comment_is_top":false,"comment_ctime":1556583529,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5851550825","product_id":100025201,"comment_content":"打卡05 fighting","like_count":1},{"had_liked":false,"id":322118,"user_name":"Eternal","can_delete":false,"product_type":"c1","uid":1188023,"ip_address":"","ucode":"EA6FE7CC98F740","user_header":"https://static001.geekbang.org/account/avatar/00/12/20/b7/bdb3bcf0.jpg","comment_is_top":false,"comment_ctime":1637196350,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1637196350","product_id":100025201,"comment_content":"第三遍来思考，冯的模型真的是精妙绝伦，无中生有，生万物","like_count":0},{"had_liked":false,"id":318263,"user_name":"escray","can_delete":false,"product_type":"c1","uid":1020525,"ip_address":"","ucode":"1F4204930E47C4","user_header":"https://static001.geekbang.org/account/avatar/00/0f/92/6d/becd841a.jpg","comment_is_top":false,"comment_ctime":1635218949,"is_pvip":true,"replies":[{"id":"115434","content":"图书管理的确是键值存储，只不过可能是多键值的，这就是数据库的由来了","user_name":"作者回复","user_name_real":"许式伟-七牛云(已满)","uid":"1228022","ctime":1635245669,"ip_address":"","comment_id":318263,"utype":1}],"discussion_count":1,"race_medal":2,"score":"1635218949","product_id":100025201,"comment_content":"看到许老师回复了昨天的留言，还是挺开心的，我争取成为刷完整个专栏的售前。<br><br>准确的需求分析是做出良好架构设计的基础，其实也是所有软件项目的基础。架构师需要花费三分之一的精力在需求分析上，那么作为售前，可能得二分之一或者三分之二了。目前来看，手头项目的困境，也是在于需求不清晰。<br><br>之前试着回答过思考题，不过没有想到有关文件系统或者键值存储的问题。图书馆在物理上是不是也是键值存储？如果只能根据书名来查找图书，那么肯定符合键值存储的范围；如果是按照类别呢？<br><br>我的答案和老师解答之间的差别，体现了我与优秀架构师之间的差距。<br><br>了解过一些计算机的基础知识，所以对于本篇的内容并不陌生，BIOS、引导区、文件系统，都是熟悉的陌生人，但是如何抽丝剥茧的分析“实现最小化可自我迭代的计算机”，这个就是我力所不及的事情了。<br><br>我看到的稳定点通常是流程上的，而不是功能上的，可能还是分析的不够深入。","like_count":0,"discussions":[{"author":{"id":1228022,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bc/f6/e61d4b8f.jpg","nickname":"许式伟-七牛云(已满)","note":"","ucode":"1A2F8AA6F6DB54","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":529158,"discussion_content":"图书管理的确是键值存储，只不过可能是多键值的，这就是数据库的由来了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1635245669,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":284606,"user_name":"不温暖啊不纯良","can_delete":false,"product_type":"c1","uid":2079117,"ip_address":"","ucode":"204474A214E00C","user_header":"https://static001.geekbang.org/account/avatar/00/1f/b9/8d/00bded19.jpg","comment_is_top":false,"comment_ctime":1616385352,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1616385352","product_id":100025201,"comment_content":"看完这篇有回头看了看自己之前的留言,严格的来说是算不上设计架构的,因为不够具体,没有自己分析在实际运行中需要考虑的细节.看完这篇文章有些感悟.<br>在写字之前思考是最重要且最必要的;<br><br>在开发之前设计是最重要且最必要的;<br><br>在设计之前分析需求是最重要且最必要的;<br><br>在做任何事情前选择是最重要且最必要的;<br>","like_count":0},{"had_liked":false,"id":284343,"user_name":"KK","can_delete":false,"product_type":"c1","uid":1971872,"ip_address":"","ucode":"370CFF973F7A34","user_header":"https://static001.geekbang.org/account/avatar/00/1e/16/a0/5dbd5bd5.jpg","comment_is_top":false,"comment_ctime":1616203660,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1616203660","product_id":100025201,"comment_content":"回忆以前做过51单片机最小系统了","like_count":0},{"had_liked":false,"id":278542,"user_name":"言十年","can_delete":false,"product_type":"c1","uid":1110039,"ip_address":"","ucode":"67B8B49C3A3B17","user_header":"https://static001.geekbang.org/account/avatar/00/10/f0/17/796a3d20.jpg","comment_is_top":false,"comment_ctime":1613034519,"is_pvip":true,"replies":[{"id":"101201","content":"sh不是操作系统，它通常不是操作系统内核的一部分，而是我们通常说的“桌面”。","user_name":"作者回复","user_name_real":"许式伟-七牛云(已满)","uid":"1228022","ctime":1613045024,"ip_address":"","comment_id":278542,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1613034519","product_id":100025201,"comment_content":"sh应该就是操作系统了。","like_count":0,"discussions":[{"author":{"id":1228022,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bc/f6/e61d4b8f.jpg","nickname":"许式伟-七牛云(已满)","note":"","ucode":"1A2F8AA6F6DB54","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":515419,"discussion_content":"sh不是操作系统，它通常不是操作系统内核的一部分，而是我们通常说的“桌面”。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1613045024,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":227871,"user_name":"墨灵","can_delete":false,"product_type":"c1","uid":1409700,"ip_address":"","ucode":"185D70CA20BEEE","user_header":"https://static001.geekbang.org/account/avatar/00/15/82/a4/a92c6eca.jpg","comment_is_top":false,"comment_ctime":1592499477,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1592499477","product_id":100025201,"comment_content":"醍醐灌顶，茅塞顿开，豁然开朗，终于知其所以然了。","like_count":0},{"had_liked":false,"id":224278,"user_name":"Goal","can_delete":false,"product_type":"c1","uid":1307012,"ip_address":"","ucode":"C337CD4C7E07B0","user_header":"https://static001.geekbang.org/account/avatar/00/13/f1/84/7d21bd9e.jpg","comment_is_top":false,"comment_ctime":1591332728,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1591332728","product_id":100025201,"comment_content":"牛，这种讲解方式很新颖呀！","like_count":0},{"had_liked":false,"id":215281,"user_name":"亢（知行合一的路上）","can_delete":false,"product_type":"c1","uid":1347013,"ip_address":"","ucode":"958AF7C96EB9E8","user_header":"https://static001.geekbang.org/account/avatar/00/14/8d/c5/898b13b4.jpg","comment_is_top":false,"comment_ctime":1588947144,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1588947144","product_id":100025201,"comment_content":"架构设计时，需要深刻理解需求，找到稳定点和变化点。易变的模块，要抽象出接口，上层应用依赖于接口。<br>能区分稳定点和变化点，比如何隔离变化点更重要。有点像，如果做的事情方向就是错的，方法再好也无济于事。","like_count":0},{"had_liked":false,"id":214317,"user_name":"Aaron","can_delete":false,"product_type":"c1","uid":1115556,"ip_address":"","ucode":"C88012265B19E5","user_header":"https://static001.geekbang.org/account/avatar/00/11/05/a4/b11ca857.jpg","comment_is_top":false,"comment_ctime":1588723871,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1588723871","product_id":100025201,"comment_content":"最小功能集，和可自我迭代为啥需要汇编语言的东西，直接机器语言就好了呀，拙见","like_count":0},{"had_liked":false,"id":194512,"user_name":"有米","can_delete":false,"product_type":"c1","uid":1005042,"ip_address":"","ucode":"C9A10B7A67BC12","user_header":"https://static001.geekbang.org/account/avatar/00/0f/55/f2/ba68d931.jpg","comment_is_top":false,"comment_ctime":1585064104,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1585064104","product_id":100025201,"comment_content":"不稳定依赖稳定，比如实现依赖接口","like_count":0},{"had_liked":false,"id":185735,"user_name":"选我。。。","can_delete":false,"product_type":"c1","uid":1379474,"ip_address":"","ucode":"E8093FE5CFCD9D","user_header":"https://static001.geekbang.org/account/avatar/00/15/0c/92/aab2706b.jpg","comment_is_top":false,"comment_ctime":1583673051,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1583673051","product_id":100025201,"comment_content":"太牛了<br>","like_count":0},{"had_liked":false,"id":182087,"user_name":"🍃Edward","can_delete":false,"product_type":"c1","uid":1204780,"ip_address":"","ucode":"4115CD128A6B4F","user_header":"https://static001.geekbang.org/account/avatar/00/12/62/2c/1145ba50.jpg","comment_is_top":false,"comment_ctime":1582706227,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1582706227","product_id":100025201,"comment_content":"看完架构设计的思路和中台方法论有点像，架构是个演化过程，不是刚开始就能设计出完美的架构，随着需求的变化，业务的复杂度慢慢的会发生变化，但是输入越多，类似大数据分析，能够沉淀的稳定能力就越多越可靠，中台也就诞生了，犹如一朵花既要向下扎根，又要向上开花。","like_count":0},{"had_liked":false,"id":176190,"user_name":"幻灰龙","can_delete":false,"product_type":"c1","uid":1046202,"ip_address":"","ucode":"AFEDCC997C2FF6","user_header":"https://static001.geekbang.org/account/avatar/00/0f/f6/ba/09ab72d2.jpg","comment_is_top":false,"comment_ctime":1580983080,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1580983080","product_id":100025201,"comment_content":"打卡第六篇。一种资源，首先需要对该资源建模。第二它是某个消费者的提供者，消费者只要反复读取并消耗这种资源。第三，需要组件来创建和更新该资源。消费者可以直接使用它，也可以把它组合在其他资源里，间接地被使用，这又涉及到关系。","like_count":0},{"had_liked":false,"id":170831,"user_name":"Geek_gooy","can_delete":false,"product_type":"c1","uid":1504570,"ip_address":"","ucode":"FC168C31530040","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLluwfFjxlCmg9p2rJVicBdBo6OYpN0EAotUguias8wc78WtAEPHsWic0880CqGwyNypy2KZqVpYhGiag/132","comment_is_top":false,"comment_ctime":1578733837,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1578733837","product_id":100025201,"comment_content":"<br>按下开机按钮，执行权在按钮&gt;&gt;&gt;&gt;&gt;&gt;<br>CPU加电执行，执行权在CPU&gt;&gt;&gt;&gt;&gt;&gt;<br>BIOS固定地址程序，执行权在BIOS (稳定职责：1.键盘显示器驱动；2.外置存储驱动；3.执行外置存储程序的能力；4.跳转外置存储固定地址引导区，交出执行权）&gt;&gt;&gt;&gt;&gt;&gt;<br>外置存储固定地址引导区程序，执行权在外置存储程序(不太稳定的职责：1.文件子系统；2.文件子系统管理程序ls；3.编辑器vi和编译器asm；4.执行外置存储程序的命令sh）","like_count":0},{"had_liked":false,"id":159080,"user_name":"sswrock","can_delete":false,"product_type":"c1","uid":1683896,"ip_address":"","ucode":"9D8DA794D7378D","user_header":"https://static001.geekbang.org/account/avatar/00/19/b1/b8/9ff50118.jpg","comment_is_top":false,"comment_ctime":1575534512,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1575534512","product_id":100025201,"comment_content":"哲学上也提到：「提问」 本身要比「答案」重要的多（苏格拉底一生就是提问中度过的），因为答案千千万、不唯一而且还不一定有答案（比如：宇宙有限还是无限？）<br><br>系统架构的「需求」可以类比为提的问题，寻根问源，因时制宜的权衡、trade off而做的思考  也许才是最重要的","like_count":0},{"had_liked":false,"id":144305,"user_name":"丁丁历险记","can_delete":false,"product_type":"c1","uid":1661704,"ip_address":"","ucode":"A43829E454C067","user_header":"https://static001.geekbang.org/account/avatar/00/19/5b/08/b0b0db05.jpg","comment_is_top":false,"comment_ctime":1571892195,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1571892195","product_id":100025201,"comment_content":"哈哈，我家里的开发环境和配图一样，然后桌子可升降。","like_count":0},{"had_liked":false,"id":126885,"user_name":"Geek_Heiko","can_delete":false,"product_type":"c1","uid":1469881,"ip_address":"","ucode":"54B0D22008F7EC","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/VfE7OiboMc7SKwOiczAJDWo3T4WJn0dVW8yPEpVRUFtk6ib0DUicN1eDfpel1UAgp8ia4kqEjXSVXOVHcoZKXhq7k4w/132","comment_is_top":false,"comment_ctime":1566517415,"is_pvip":false,"replies":[{"id":"46906","content":"你是说在android上开发android程序的平台有没有对吧？我理解是有的，但是都还不太主流。","user_name":"作者回复","user_name_real":"许式伟-七牛云(已满)","uid":"1228022","ctime":1566518600,"ip_address":"","comment_id":126885,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1566517415","product_id":100025201,"comment_content":"许老师，我想问下，我们能在本身运行 Android 的设备上开发 Android 设备上开发是应用程序？目前并没有了解到相关的内容，通过本节课的学习，我能否理解为是因为是平台上没有对应的&quot;编辑器&quot;和&quot;编译器&quot;呢？现在有人做了相关的工作了吗？为什么呢？","like_count":0,"discussions":[{"author":{"id":1228022,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bc/f6/e61d4b8f.jpg","nickname":"许式伟-七牛云(已满)","note":"","ucode":"1A2F8AA6F6DB54","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":464224,"discussion_content":"你是说在android上开发android程序的平台有没有对吧？我理解是有的，但是都还不太主流。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566518600,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1469881,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/VfE7OiboMc7SKwOiczAJDWo3T4WJn0dVW8yPEpVRUFtk6ib0DUicN1eDfpel1UAgp8ia4kqEjXSVXOVHcoZKXhq7k4w/132","nickname":"Geek_Heiko","note":"","ucode":"54B0D22008F7EC","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":5869,"discussion_content":"嗯嗯，是的，好的，谢谢许老师。主要结合老师本节的知识联想到了&#34;鸿蒙&#34;还有&#34;儿童编程&#34;，然后站在上层用户的角度去想了下，或许通过良好的桌面应用去实现用户的&#34;可迭代&#34;（我这里应该是实现某一个场景的一堆应用程序和应用管理）会更为合适些，期待学习接下来的章节~","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566519770,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":117390,"user_name":"geekjp","can_delete":false,"product_type":"c1","uid":1496313,"ip_address":"","ucode":"381C9447E3DA59","user_header":"https://static001.geekbang.org/account/avatar/00/16/d4/f9/af35847f.jpg","comment_is_top":false,"comment_ctime":1564038798,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1564038798","product_id":100025201,"comment_content":"许老师，能您好！您的数学演绎笔记目前还有保留吗？","like_count":0},{"had_liked":false,"id":115389,"user_name":"Jian","can_delete":false,"product_type":"c1","uid":1023040,"ip_address":"","ucode":"358133EC2AFEB0","user_header":"https://static001.geekbang.org/account/avatar/00/0f/9c/40/6323850e.jpg","comment_is_top":false,"comment_ctime":1563551956,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1563551956","product_id":100025201,"comment_content":"这是我看的第三遍了，或许是我愚笨，每次都能发现之前有遗漏的地方，每次都有新的理解。大概就是“看山是山，看水是水—&gt;看山不是山，看水不是水—-&gt;看山还是山，看水还是水”","like_count":0},{"had_liked":false,"id":113057,"user_name":"小雨","can_delete":false,"product_type":"c1","uid":1007970,"ip_address":"","ucode":"A6332734063CC5","user_header":"https://static001.geekbang.org/account/avatar/00/0f/61/62/72296b09.jpg","comment_is_top":false,"comment_ctime":1562892416,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1562892416","product_id":100025201,"comment_content":"计算机演化具有历史性，感觉linux举例更易于理解😄。","like_count":0},{"had_liked":false,"id":106058,"user_name":"blkleaf","can_delete":false,"product_type":"c1","uid":1043472,"ip_address":"","ucode":"F56D436E54A2A3","user_header":"https://static001.geekbang.org/account/avatar/00/0f/ec/10/384ae4ce.jpg","comment_is_top":false,"comment_ctime":1561161292,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1561161292","product_id":100025201,"comment_content":"无论是计算机还是其他领域，架构能力非一日之功，而计算机体系因其复杂度之高，发展之迅速，需求演化之剧烈，其架构设计尤为有挑战；对需求分析意识的树立与强调，对需求稳定点和变化点的把握与界定，是架构师的关键能力；许总的文章高屋建瓴，厚积薄发，自己思考很深入，更能激发读者的反思！无论是刚入行的程序员，还是多年经验的架构师，该课程文章都值得反复阅读。","like_count":0},{"had_liked":false,"id":105416,"user_name":"利","can_delete":false,"product_type":"c1","uid":1346711,"ip_address":"","ucode":"561249904EEED5","user_header":"https://static001.geekbang.org/account/avatar/00/14/8c/97/f00593ab.jpg","comment_is_top":false,"comment_ctime":1560995219,"is_pvip":false,"replies":[{"id":"38172","content":"第二层是对第一层的细化与包装","user_name":"作者回复","user_name_real":"许式伟-七牛云(已满)","uid":"1228022","ctime":1561006893,"ip_address":"","comment_id":105416,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1560995219","product_id":100025201,"comment_content":"老师 这个分层 你的逻辑是什么 为什么这么分 关于 从下往上的第二层没有明白 对于分层你有什么好的经验 谢谢","like_count":0,"discussions":[{"author":{"id":1228022,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bc/f6/e61d4b8f.jpg","nickname":"许式伟-七牛云(已满)","note":"","ucode":"1A2F8AA6F6DB54","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":454674,"discussion_content":"第二层是对第一层的细化与包装","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1561006893,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":105065,"user_name":"Lrwin","can_delete":false,"product_type":"c1","uid":1180503,"ip_address":"","ucode":"5E394E36419C56","user_header":"https://static001.geekbang.org/account/avatar/00/12/03/57/31595f22.jpg","comment_is_top":false,"comment_ctime":1560910148,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1560910148","product_id":100025201,"comment_content":"这个文章的高度，让我重新对软件设计有了重新的认识、。感谢","like_count":0},{"had_liked":false,"id":99716,"user_name":"fumeck.com🍋🌴summer sky","can_delete":false,"product_type":"c1","uid":1134567,"ip_address":"","ucode":"6349BF32257990","user_header":"https://static001.geekbang.org/account/avatar/00/11/4f/e7/7e51052a.jpg","comment_is_top":false,"comment_ctime":1559284226,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1559284226","product_id":100025201,"comment_content":"这绝对是最有深入与广度的课程之一.简浅易懂又不乏深度，想必老师花费了不少心血赞","like_count":0},{"had_liked":false,"id":95838,"user_name":"Geek_gooy","can_delete":false,"product_type":"c1","uid":1504570,"ip_address":"","ucode":"FC168C31530040","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLluwfFjxlCmg9p2rJVicBdBo6OYpN0EAotUguias8wc78WtAEPHsWic0880CqGwyNypy2KZqVpYhGiag/132","comment_is_top":false,"comment_ctime":1558199705,"is_pvip":false,"replies":[{"id":"34275","content":"1 这个有问题，冯诺依曼的存储是指内置存储，包括rom（非易失的）和ram（易失的）。外存（磁盘等）是输入输出设备。但是当我们聊架构时，关注的重点是非易失的存储，包括rom和外存。而ram更像是计算的中间变量，不是架构关注点。","user_name":"作者回复","user_name_real":"许式伟-七牛云(已满)","uid":"1228022","ctime":1558226051,"ip_address":"","comment_id":95838,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1558199705","product_id":100025201,"comment_content":"1、冯诺依曼中的存储指的是持久化的存储，比如光盘磁盘，rom等，非易失的ram。<br>2、通过文件系统来管理存储的数据。<br>3、内存缺页中断方式间接使用外置存储(也是经过文件系统来访问？）。<br>4、内置BIOS程序 跳转 外置引导程序 等待用户使用sh命令执行其它外置程序。<br>5、需求的稳定点和变化点可以想成一个栈结构，稳定点在底层。<br>6、说需求时可能说的是需求的一个实现方案，而不是需求本身。要分清这个很难。","like_count":0,"discussions":[{"author":{"id":1228022,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bc/f6/e61d4b8f.jpg","nickname":"许式伟-七牛云(已满)","note":"","ucode":"1A2F8AA6F6DB54","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":450613,"discussion_content":"1 这个有问题，冯诺依曼的存储是指内置存储，包括rom（非易失的）和ram（易失的）。外存（磁盘等）是输入输出设备。但是当我们聊架构时，关注的重点是非易失的存储，包括rom和外存。而ram更像是计算的中间变量，不是架构关注点。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1558226051,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":94438,"user_name":"KAKAROTS","can_delete":false,"product_type":"c1","uid":1495938,"ip_address":"","ucode":"34DEC1B8FC44CD","user_header":"https://static001.geekbang.org/account/avatar/00/16/d3/82/5c54e368.jpg","comment_is_top":false,"comment_ctime":1557811296,"is_pvip":false,"replies":[{"id":"33763","content":"程序是在持久化存储上的，计算是在内置存储上进行的","user_name":"作者回复","user_name_real":"许式伟-七牛云(已满)","uid":"1228022","ctime":1557815132,"ip_address":"","comment_id":94438,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1557811296","product_id":100025201,"comment_content":"在本文中所讲到的计算机三大零部件中的存储指的是持久化存储了对吗？而在之前冯诺依曼体系中的存储指的就是内置存储对吗？","like_count":0,"discussions":[{"author":{"id":1228022,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bc/f6/e61d4b8f.jpg","nickname":"许式伟-七牛云(已满)","note":"","ucode":"1A2F8AA6F6DB54","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":450067,"discussion_content":"程序是在持久化存储上的，计算是在内置存储上进行的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1557815132,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":94365,"user_name":"KAKAROTS","can_delete":false,"product_type":"c1","uid":1495938,"ip_address":"","ucode":"34DEC1B8FC44CD","user_header":"https://static001.geekbang.org/account/avatar/00/16/d3/82/5c54e368.jpg","comment_is_top":false,"comment_ctime":1557796564,"is_pvip":false,"replies":[{"id":"33725","content":"这里是指持久化的存储，程序最初一定在持久化存储里面，加载到内置存储","user_name":"作者回复","user_name_real":"许式伟-七牛云(已满)","uid":"1228022","ctime":1557800700,"ip_address":"","comment_id":94365,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1557796564","product_id":100025201,"comment_content":"冯诺依曼体系的存储指的是内置存储，那在文中所说到的存储上的主要程序是rom上的bios和外置存储的软件程序，这里是不是矛盾？","like_count":0,"discussions":[{"author":{"id":1228022,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bc/f6/e61d4b8f.jpg","nickname":"许式伟-七牛云(已满)","note":"","ucode":"1A2F8AA6F6DB54","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":450038,"discussion_content":"这里是指持久化的存储，程序最初一定在持久化存储里面，加载到内置存储","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1557800700,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":93261,"user_name":"乘风","can_delete":false,"product_type":"c1","uid":1115724,"ip_address":"","ucode":"0420C5535DACB7","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLwSoTjHPX5tm4whBSfoZLX6toZxrZGUaLABQywKNf4MDc9toK3QSV7Z99ATcGicFCysoleQ5ISzmw/132","comment_is_top":false,"comment_ctime":1557448587,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1557448587","product_id":100025201,"comment_content":"读完一遍，惊叹于大师的分析，可做珍藏多读回顾","like_count":0},{"had_liked":false,"id":91784,"user_name":"dwz","can_delete":false,"product_type":"c1","uid":1214951,"ip_address":"","ucode":"46041F26EDE2EE","user_header":"https://static001.geekbang.org/account/avatar/00/12/89/e7/eae1a2cc.jpg","comment_is_top":false,"comment_ctime":1557107554,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1557107554","product_id":100025201,"comment_content":"读了老师几期课程，由于初次学习架构设计，刚开始有点模糊，多读几次后感觉架构设计，就是根据用户需求，设计不同的模块以及其规格，功能划分！！！因此不同内功的设计者设计出来的架构就会千差万别，可能入门不难，难就难在怎么设计出即满足用户需求，也能适应未来的变化-稳定点&amp;变化点！","like_count":0},{"had_liked":false,"id":91271,"user_name":"Xinfenglee","can_delete":false,"product_type":"c1","uid":1482670,"ip_address":"","ucode":"FA064F6660DF9C","user_header":"https://static001.geekbang.org/account/avatar/00/16/9f/ae/04f329ee.jpg","comment_is_top":false,"comment_ctime":1556959300,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1556959300","product_id":100025201,"comment_content":"需求变化点和稳定点 在实际设计中怎么区分出来 我自己感觉有些会模凌两可 我既可以是放在稳定点 也可以是需求变化点 ","like_count":0},{"had_liked":false,"id":90820,"user_name":"蘑菇","can_delete":false,"product_type":"c1","uid":1036105,"ip_address":"","ucode":"7842565EBEEC92","user_header":"https://static001.geekbang.org/account/avatar/00/0f/cf/49/c9d8318d.jpg","comment_is_top":false,"comment_ctime":1556676029,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1556676029","product_id":100025201,"comment_content":"需求分析的重点是先分清系统的稳定点和变化点，稳定点就是系统的核心价值，变化点要支持扩展。不过具体怎么划分，粒度怎么把握，还需要多些例子，多些实践才有感觉。","like_count":0},{"had_liked":false,"id":90750,"user_name":"Jiayp","can_delete":false,"product_type":"c1","uid":1118751,"ip_address":"","ucode":"2BB5F063ACEB87","user_header":"https://static001.geekbang.org/account/avatar/00/11/12/1f/798b1642.jpg","comment_is_top":false,"comment_ctime":1556625854,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1556625854","product_id":100025201,"comment_content":"nice！","like_count":0},{"had_liked":false,"id":90626,"user_name":"晓凉","can_delete":false,"product_type":"c1","uid":1220647,"ip_address":"","ucode":"2D1130C3DACE1A","user_header":"https://static001.geekbang.org/account/avatar/00/12/a0/27/bdc6307d.jpg","comment_is_top":false,"comment_ctime":1556590640,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1556590640","product_id":100025201,"comment_content":"考虑vi,asm,sh,ls抽象出公共逻辑作为一层，这一层定义各个程序应该遵循的规范，并提供一些基础能力。","like_count":0},{"had_liked":false,"id":90624,"user_name":"觉","can_delete":false,"product_type":"c1","uid":1503600,"ip_address":"","ucode":"95E85D30E92170","user_header":"https://static001.geekbang.org/account/avatar/00/16/f1/70/bca09d2d.jpg","comment_is_top":false,"comment_ctime":1556590205,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1556590205","product_id":100025201,"comment_content":"感恩大佬分享 随喜大佬","like_count":0},{"had_liked":false,"id":90598,"user_name":"Tesla","can_delete":false,"product_type":"c1","uid":1500742,"ip_address":"","ucode":"98629AFD9861EE","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKUcSLVV6ia3dibe7qvTu8Vic1PVs2EibxoUdx930MC7j2Q9A6s4eibMDZlcicMFY0D0icd3RrDorMChu0zw/132","comment_is_top":false,"comment_ctime":1556585874,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1556585874","product_id":100025201,"comment_content":"读完感觉只有需求是固定的，而实现需求的方法都是可变的的","like_count":0},{"had_liked":false,"id":90579,"user_name":"Jade","can_delete":false,"product_type":"c1","uid":1085638,"ip_address":"","ucode":"E07CCF10497AD3","user_header":"https://wx.qlogo.cn/mmopen/vi_32/icRpVCFkicVnBiatPIZy4uiaoiba8ZODxclF00R6Tphsn55kdMtBYJtialcokIu3f4qJzx7QQR98ibVH4ndZ48E2o9vRQ/132","comment_is_top":false,"comment_ctime":1556583782,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1556583782","product_id":100025201,"comment_content":"棒棒哒","like_count":0}]}