{"id":12036,"title":"13 | 解构 : 特殊的数据拆箱方式","content":"<h1>源代码及 PDF 课件地址：</h1><p><strong><a href=\"https://gitee.com/geektime-geekbang/KotlinPrimer\">https://gitee.com/geektime-geekbang/KotlinPrimer</a></strong></p>","comments":[{"had_liked":false,"id":38542,"user_name":"victoriest","can_delete":false,"product_type":"c3","uid":1023394,"ip_address":"","ucode":"7B4232B0FB88F6","user_header":"https://static001.geekbang.org/account/avatar/00/0f/9d/a2/d8a708cc.jpg","comment_is_top":false,"comment_ctime":1542072992,"is_pvip":false,"replies":[{"id":15173,"content":"要解构的属性，必须要有operator修饰","user_name":"作者回复","user_name_real":"kymjs张涛","uid":1009146,"ctime":1542962103,"ip_address":"","comment_id":38542,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100009801,"comment_content":"User类里的operator与本节的知识点, 解构. 有什么直接的关系么?","like_count":3,"discussions":[{"author":{"id":1009146,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/65/fa/2b4d2f26.jpg","nickname":"kymjs张涛","note":"","ucode":"EFE7AF4C0D4FE8","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":428741,"discussion_content":"要解构的属性，必须要有operator修饰","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1542962103,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":275597,"user_name":"锅ke24","can_delete":false,"product_type":"c3","uid":1150086,"ip_address":"","ucode":"74DA5ADA00921A","user_header":"https://static001.geekbang.org/account/avatar/00/11/8c/86/7ebf0053.jpg","comment_is_top":false,"comment_ctime":1611598335,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":2,"product_id":100009801,"comment_content":"解构的目的在于方便遍历","like_count":1},{"had_liked":false,"id":176561,"user_name":"大木","can_delete":false,"product_type":"c3","uid":1141518,"ip_address":"","ucode":"6664E525C54A28","user_header":"https://static001.geekbang.org/account/avatar/00/11/6b/0e/37605758.jpg","comment_is_top":false,"comment_ctime":1581087463,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":2,"product_id":100009801,"comment_content":"operator 为什么我现在不需要这个修饰也可以解构","like_count":1},{"had_liked":false,"id":98243,"user_name":"遥远的救世主","can_delete":false,"product_type":"c3","uid":1181334,"ip_address":"","ucode":"4CC436479CAA21","user_header":"https://static001.geekbang.org/account/avatar/00/12/06/96/4273bb09.jpg","comment_is_top":false,"comment_ctime":1558940788,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":2,"product_id":100009801,"comment_content":"operator和ComponentN()解构声明常用于遍历map集合","like_count":1},{"had_liked":false,"id":320809,"user_name":"Napsterwan","can_delete":false,"product_type":"c3","uid":1075918,"ip_address":"","ucode":"20912EEFBF8AA8","user_header":"https://static001.geekbang.org/account/avatar/00/10/6a/ce/9f98d518.jpg","comment_is_top":false,"comment_ctime":1636517366,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":2,"product_id":100009801,"comment_content":"通过对比 Kotlin 字节码来看，直接将 User 定义为 data class 其实就实现了 component1、component2 方法；与直接定义为 class 自己去实现 operator fun component1() = age，效果是一样的；\n\n只是因为定义为 data class 后，User 不能再被继承，而如果是自己添加 operator fun component1() 的话，可以添加 open 关键字，使 User 类不 final，请问这是故意为之吗？","like_count":0}]}