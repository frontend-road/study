{"id":139474,"title":"03 | 系统设计目标（一）：如何提升系统性能？","content":"<p>提到互联网系统设计，你可能听到最多的词儿就是“三高”，也就是“高并发”“高性能”“高可用”，它们是互联网系统架构设计永恒的主题。在前两节课中，我带你了解了高并发系统设计的含义，意义以及分层设计原则，接下来，我想带你整体了解一下高并发系统设计的目标，然后在此基础上，进入我们今天的话题：如何提升系统的性能？</p><h2>高并发系统设计的三大目标：高性能、高可用、可扩展</h2><p><strong>高并发，</strong>是指运用设计手段让系统能够处理更多的用户并发请求，也就是承担更大的流量。它是一切架构设计的背景和前提，脱离了它去谈性能和可用性是没有意义的。很显然嘛，你在每秒一次请求和每秒一万次请求，两种不同的场景下，分别做到毫秒级响应时间和五个九（99.999%）的可用性，无论是设计难度还是方案的复杂度，都不是一个级别的。</p><p><strong>而性能和可用性，</strong>是我们实现高并发系统设计必须考虑的因素。</p><p>性能反映了系统的使用体验，想象一下，同样承担每秒一万次请求的两个系统，一个响应时间是毫秒级，一个响应时间在秒级别，它们带给用户的体验肯定是不同的。</p><p>可用性则表示系统可以正常服务用户的时间。我们再类比一下，还是两个承担每秒一万次的系统，一个可以做到全年不停机、无故障，一个隔三差五宕机维护，如果你是用户，你会选择使用哪一个系统呢？答案不言而喻。</p><!-- [[[read_end]]] --><p>另一个耳熟能详的名词叫<strong>“可扩展性”，</strong>它同样是高并发系统设计需要考虑的因素。为什么呢？我来举一个具体的例子。</p><p>流量分为平时流量和峰值流量两种，峰值流量可能会是平时流量的几倍甚至几十倍，在应对峰值流量的时候，我们通常需要在架构和方案上做更多的准备。<strong>这就是淘宝会花费大半年的时间准备双十一，也是在面对“明星离婚”等热点事件时，看起来无懈可击的微博系统还是会出现服务不可用的原因。</strong>而易于扩展的系统能在短时间内迅速完成扩容，更加平稳地承担峰值流量。</p><p>高性能、高可用和可扩展，是我们在做高并发系统设计时追求的三个目标，我会用三节课的时间，带你了解在高并发大流量下如何设计高性能、高可用和易于扩展的系统。</p><p>了解完这些内容之后，我们正式进入今天的话题：如何提升系统的性能？</p><h2>性能优化原则</h2><p>“天下武功，唯快不破”。性能是系统设计成功与否的关键，实现高性能也是对程序员个人能力的挑战。不过在了解实现高性能的方法之前，我们先明确一下性能优化的原则。</p><p><strong>首先，性能优化一定不能盲目，一定是问题导向的。</strong>脱离了问题，盲目地提早优化会增加系统的复杂度，浪费开发人员的时间，也因为某些优化可能会对业务上有些折中的考虑，所以也会损伤业务。</p><p><strong>其次，性能优化也遵循“八二原则”，</strong>即你可以用20%的精力解决80%的性能问题。所以我们在优化过程中一定要抓住主要矛盾，优先优化主要的性能瓶颈点。</p><p><strong>再次，性能优化也要有数据支撑。</strong>在优化过程中，你要时刻了解你的优化让响应时间减少了多少，提升了多少的吞吐量。</p><p><strong>最后，性能优化的过程是持续的。</strong>高并发的系统通常是业务逻辑相对复杂的系统，那么在这类系统中出现的性能问题通常也会有多方面的原因。因此，我们在做性能优化的时候要明确目标，比方说，支撑每秒1万次请求的吞吐量下响应时间在10ms，那么我们就需要持续不断地寻找性能瓶颈，制定优化方案，直到达到目标为止。</p><p>在以上四个原则的指引下，掌握常见性能问题的排查方式和优化手段，就一定能让你在设计高并发系统时更加游刃有余。</p><h2>性能的度量指标</h2><p>性能优化的第三点原则中提到，对于性能我们需要有度量的标准，有了数据才能明确目前存在的性能问题，也能够用数据来评估性能优化的效果。<strong>所以明确性能的度量指标十分重要。</strong></p><p>一般来说，度量性能的指标是系统接口的响应时间，但是单次的响应时间是没有意义的，你需要知道一段时间的性能情况是什么样的。所以，我们需要收集这段时间的响应时间数据，然后依据一些统计方法计算出特征值，这些特征值就能够代表这段时间的性能情况。我们常见的特征值有以下几类。</p><ul>\n<li>平均值</li>\n</ul><p>顾名思义，平均值是把这段时间所有请求的响应时间数据相加，再除以总请求数。平均值可以在一定程度上反应这段时间的性能，但它敏感度比较差，如果这段时间有少量慢请求时，在平均值上并不能如实地反应。</p><p>举个例子，假设我们在30s内有10000次请求，每次请求的响应时间都是1ms，那么这段时间响应时间平均值也是1ms。这时，当其中100次请求的响应时间变成了100ms，那么整体的响应时间是(100 * 100 + 9900 * 1) / 10000 = 1.99ms。你看，虽然从平均值上来看仅仅增加了不到1ms，但是实际情况是有1%的请求（100/10000）的响应时间已经增加了100倍。<strong>所以，平均值对于度量性能来说只能作为一个参考。</strong></p><ul>\n<li>最大值</li>\n</ul><p>这个更好理解，就是这段时间内所有请求响应时间最长的值，但它的问题又在于过于敏感了。</p><p>还拿上面的例子来说，如果10000次请求中只有一次请求的响应时间达到100ms，那么这段时间请求的响应耗时的最大值就是100ms，性能损耗为原先的百分之一，这种说法明显是不准确的。</p><ul>\n<li>分位值</li>\n</ul><p>分位值有很多种，比如90分位、95分位、75分位。以90分位为例，我们把这段时间请求的响应时间从小到大排序，假如一共有100个请求，那么排在第90位的响应时间就是90分位值。分位值排除了偶发极慢请求对于数据的影响，能够很好地反应这段时间的性能情况，分位值越大，对于慢请求的影响就越敏感。</p><p><img src=\"https://static001.geekbang.org/resource/image/1e/1e/1eb73981dfb18cfde5088c96d0c5cf1e.jpg?wh=1142*298\" alt=\"\"></p><p>在我来看，分位值是最适合作为时间段内，响应时间统计值来使用的，在实际工作中也应用最多。除此之外，平均值也可以作为一个参考值来使用。</p><p>我在上面提到，脱离了并发来谈性能是没有意义的，我们通常使用<strong>吞吐量</strong>或者<strong>响应时间</strong>来度量并发和流量，使用吞吐量的情况会更多一些。但是你要知道，这两个指标是呈倒数关系的。</p><p>这很好理解，响应时间1s时，吞吐量是每秒1次，响应时间缩短到10ms，那么吞吐量就上升到每秒100次。所以，一般我们度量性能时都会同时兼顾吞吐量和响应时间，比如我们设立性能优化的目标时通常会这样表述：在每秒1万次的请求量下，响应时间99分位值在10ms以下。</p><p>那么，响应时间究竟控制在多长时间比较合适呢？这个不能一概而论。</p><p>从用户使用体验的角度来看，200ms是第一个分界点：接口的响应时间在200ms之内，用户是感觉不到延迟的，就像是瞬时发生的一样。而1s是另外一个分界点：接口的响应时间在1s之内时，虽然用户可以感受到一些延迟，但却是可以接受的，超过1s之后用户就会有明显等待的感觉，等待时间越长，用户的使用体验就越差。所以，健康系统的99分位值的响应时间通常需要控制在200ms之内，而不超过1s的请求占比要在99.99%以上。</p><p>现在你了解了性能的度量指标，那我们再来看一看，随着并发的增长我们实现高性能的思路是怎样的。</p><h2>高并发下的性能优化</h2><p>假如说，你现在有一个系统，这个系统中处理核心只有一个，执行的任务的响应时间都在10ms，它的吞吐量是在每秒100次。那么我们如何来优化性能从而提高系统的并发能力呢？主要有两种思路：一种是提高系统的处理核心数，另一种是减少单次任务的响应时间。</p><p><strong>1.提高系统的处理核心数</strong></p><p>提高系统的处理核心数就是增加系统的并行处理能力，这个思路是优化性能最简单的途径。拿上一个例子来说，你可以把系统的处理核心数增加为两个，并且增加一个进程，让这两个进程跑在不同的核心上。这样从理论上，你系统的吞吐量可以增加一倍。当然了，在这种情况下，吞吐量和响应时间就不是倒数关系了，而是：吞吐量=并发进程数/响应时间。</p><p>计算机领域的阿姆达尔定律（Amdahl’s law）是吉恩·阿姆达尔在1967年提出的。它描述了并发进程数与响应时间之间的关系，含义是在固定负载下，并行计算的加速比，也就是并行化之后效率提升情况，可以用下面公式来表示：</p><blockquote>\n<p>(Ws + Wp) / (Ws + Wp/s)</p>\n</blockquote><p>其中，Ws表示任务中的串行计算量，Wp表示任务中的并行计算量，s表示并行进程数。从这个公式我们可以推导出另外一个公式：</p><blockquote>\n<p>1/(1-p+p/s)</p>\n</blockquote><p>其中，s还是表示并行进程数，p表示任务中并行部分的占比。当p为1时，也就是完全并行时，加速比与并行进程数相等；当p为0时，即完全串行时，加速比为1，也就是说完全无加速；当s趋近于无穷大的时候，加速比就等于1/(1-p)，你可以看到它完全和p成正比。特别是，当p为1时，加速比趋近于无穷大。</p><p>以上公式的推导过程有些复杂，你只需要记住结论就好了。</p><p>我们似乎找到了解决问题的银弹，是不是无限制地增加处理核心数就能无限制地提升性能，从而提升系统处理高并发的能力呢？很遗憾，随着并发进程数的增加，并行的任务对于系统资源的争抢也会愈发严重。在某一个临界点上继续增加并发进程数，反而会造成系统性能的下降，这就是性能测试中的拐点模型。</p><p><img src=\"https://static001.geekbang.org/resource/image/23/3f/2379fce36fa3453a0326e62e4d5a333f.jpg?wh=1142*799\" alt=\"\"></p><p>从图中你可以发现，并发用户数处于轻压力区时，响应时间平稳，吞吐量和并发用户数线性相关。而当并发用户数处于重压力区时，系统资源利用率到达极限，吞吐量开始有下降的趋势，响应时间也会略有上升。这个时候，再对系统增加压力，系统就进入拐点区，处于超负荷状态，吞吐量下降，响应时间大幅度上升。</p><p>所以我们在评估系统性能时通常需要做压力测试，目的就是找到系统的“拐点”，从而知道系统的承载能力，也便于找到系统的瓶颈，持续优化系统性能。</p><p>说完了提升并行能力，我们再看看优化性能的另一种方式：减少单次任务响应时间。</p><p><strong>2.减少单次任务响应时间</strong></p><p>想要减少任务的响应时间，首先要看你的系统是CPU密集型还是IO密集型的，因为不同类型的系统性能优化方式不尽相同。</p><p>CPU密集型系统中，需要处理大量的CPU运算，那么选用更高效的算法或者减少运算次数就是这类系统重要的优化手段。比方说，如果系统的主要任务是计算Hash值，那么这时选用更高性能的Hash算法就可以大大提升系统的性能。发现这类问题的主要方式，是通过一些Profile工具来找到消耗CPU时间最多的方法或者模块，比如Linux的perf、eBPF等。</p><p>IO密集型系统指的是系统的大部分操作是在等待IO完成，这里IO指的是磁盘IO和网络IO。我们熟知的系统大部分都属于IO密集型，比如数据库系统、缓存系统、Web系统。这类系统的性能瓶颈可能出在系统内部，也可能是依赖的其他系统，而发现这类性能瓶颈的手段主要有两类。</p><p>第一类是采用工具，Linux的工具集很丰富，完全可以满足你的优化需要，比如网络协议栈、网卡、磁盘、文件系统、内存，等等。这些工具的用法很多，你可以在排查问题的过程中逐渐积累。除此之外呢，一些开发语言还有针对语言特性的分析工具，比如说Java语言就有其专属的内存分析工具。</p><p>另外一类手段就是可以通过监控来发现性能问题。在监控中我们可以对任务的每一个步骤做分时的统计，从而找到任务的哪一步消耗了更多的时间。这一部分在演进篇中会有专门的介绍，这里就不再展开了。</p><p>那么找到了系统的瓶颈点，我们要如何优化呢？优化方案会随着问题的不同而不同。比方说，如果是数据库访问慢，那么就要看是不是有锁表的情况、是不是有全表扫描、索引加的是否合适、是否有JOIN操作、需不需要加缓存，等等；如果是网络的问题，就要看网络的参数是否有优化的空间，抓包来看是否有大量的超时重传，网卡是否有大量丢包等。</p><p>总而言之，“兵来将挡水来土掩”，我们需要制定不同的性能优化方案来应对不同的性能问题。</p><h2>课程小结</h2><p>今天，我带你了解了性能的原则、度量指标，以及在高并发下优化性能的基本思路。性能优化是一个很大的话题，只用短短一讲是完全不够的，所以我会在后面的课程中详细介绍其中的某些方面，比方说我们如何用缓存优化系统的读取性能，如何使用消息队列优化系统的写入性能等等。</p><p>有时候你在遇到性能问题的时候会束手无策，从今天的课程中你可以得到一些启示，在这里我给你总结出几点：</p><ul>\n<li>数据优先，你做一个新的系统在上线之前一定要把性能监控系统做好；</li>\n<li>掌握一些性能优化工具和方法，这就需要在工作中不断地积累；</li>\n<li>计算机基础知识很重要，比如说网络知识、操作系统知识等等，掌握了基础知识才能让你在优化过程中抓住性能问题的关键，也能在性能优化过程中游刃有余。</li>\n</ul><h2>一课一思</h2><p>在课程中我们提到了一些性能优化的原则和基本的思考点，那么你在日常工作中有哪些性能优化的手段和经验呢？欢迎在留言区与我分享你的经验。</p><p>最后，感谢你的阅读，如果这篇文章让你有所收获，也欢迎你将它分享给更多的朋友。</p>","comments":[{"had_liked":false,"id":135610,"user_name":"肖大保健","can_delete":false,"product_type":"c1","uid":1306868,"ip_address":"","ucode":"E3209A00C1B954","user_header":"https://static001.geekbang.org/account/avatar/00/13/f0/f4/22dbe2d9.jpg","comment_is_top":false,"comment_ctime":1569228022,"is_pvip":false,"replies":[{"id":"52050","content":"基础篇会偏理论知识多一些，主要是想给大家一些高并发知识的概要介绍，这部分案例偏少，我们在做课程设计的时候考虑到了，从我的角度，这部分内容是必讲的，并且我敢说这种讲法你在外面是找不到的，都是我的经验总结。<br><br>案例我们会从演进篇开始加入，思路是从一个简易系统到一个复杂系统的高并发演进之路。我很想把这个内容做好，所以类似的反馈还请大家都提给我，我和极客时间团队讨论后会根据情况做优化。<br><br>之所以把这个留言放出来也是这样，希望能得到大家的监督，我们一起学好高并发知识。分享就是学习，从和大家的交流离我也在成长。","user_name":"编辑回复","user_name_real":"郭蕾","uid":"1000473","ctime":1569284272,"ip_address":"","comment_id":135610,"utype":2}],"discussion_count":9,"race_medal":0,"score":"783253275894","product_id":100035801,"comment_content":"讲的太宽泛了，请具体实例化，这种文章在网上到处能找到，建议多点干货","like_count":183,"discussions":[{"author":{"id":1000473,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/44/19/17fadc62.jpg","nickname":"郭蕾","note":"","ucode":"34F4C07D1C5FE8","race_medal":0,"user_type":8,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":468269,"discussion_content":"基础篇会偏理论知识多一些，主要是想给大家一些高并发知识的概要介绍，这部分案例偏少，我们在做课程设计的时候考虑到了，从我的角度，这部分内容是必讲的，并且我敢说这种讲法你在外面是找不到的，都是我的经验总结。\n\n案例我们会从演进篇开始加入，思路是从一个简易系统到一个复杂系统的高并发演进之路。我很想把这个内容做好，所以类似的反馈还请大家都提给我，我和极客时间团队讨论后会根据情况做优化。\n\n之所以把这个留言放出来也是这样，希望能得到大家的监督，我们一起学好高并发知识。分享就是学习，从和大家的交流离我也在成长。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1569284272,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":4}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1202174,"avatar":"https://static001.geekbang.org/account/avatar/00/12/57/fe/beab006d.jpg","nickname":"Jasper","note":"","ucode":"A07ABF45D39089","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":45402,"discussion_content":"其实当你自己有一定的知识储备，然后学完后面的课程，你会发现老师讲的一字一句都很有启发，你觉得宽泛可能只是你对高并发的场景暂时毫无概念","likes_number":8,"is_delete":false,"is_hidden":false,"ctime":1573034221,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1033096,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/c3/88/d16816a8.jpg","nickname":"如来神掌","note":"","ucode":"45E20FF935BD2F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":306785,"discussion_content":"不要着急，理论是一定要讲的，不然实践的时候很多概念都不懂，一讲就蒙圈，回头又问这又问那的就不好玩了。","likes_number":5,"is_delete":false,"is_hidden":false,"ctime":1600390071,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1206477,"avatar":"https://static001.geekbang.org/account/avatar/00/12/68/cd/9751311b.jpg","nickname":"asone","note":"","ucode":"9A907165E76479","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":24315,"discussion_content":"既然是系统的学习，肯定得先搭起一个整体的思路，清楚概念，再来慢慢细化。后来的实践才会有迹可循……","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1570093390,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1062848,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83ersGSic8ib7OguJv6CJiaXY0s4n9C7Z51sWxTTljklFpq3ZAIWXoFTPV5oLo0GMTkqW5sYJRRnibNqOJQ/132","nickname":"walle斌","note":"","ucode":"0DB3243004951F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":384856,"discussion_content":"别着急  这种本来就是先从理论一点点切进去的。。上来就是实战的，随手一搜就是一大把，但是并不是所有的都是成体系的，不是吗？ 一点点看。。。理论结合实践，实践反过来践行理论，并按照理论持续优化迭代实践。。","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1626773863,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1008397,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/63/0d/abb7bfe3.jpg","nickname":"SoftArrow","note":"","ucode":"EAEF3F4F076B63","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":20801,"discussion_content":"讲的太宽泛了，请具体实例化，这种文章在网上到处能找到，建议多点干货","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1569378240,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1119490,"avatar":"https://static001.geekbang.org/account/avatar/00/11/15/02/66f65388.jpg","nickname":"雷霹雳的爸爸","note":"","ucode":"99BBA6D83DD11F","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":43016,"discussion_content":"没看到后面，基础篇讲讲概念没问题，文章结构再组织组织可能会更好吧","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1572841873,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1025067,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a4/2b/3ba9f64b.jpg","nickname":"Devin","note":"","ucode":"7BDCD517BD8DD2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":41403,"discussion_content":"学习不要太急躁  一个系统性的课程必然需要有始有终","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1572420225,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1985184,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/GjFJHox9V8qh53zIrExw4NK0KG9WBvRH8RJVjm9jp78RSpWfa2xzyq11dTNItpK2icQniaK4bibTv6ksRGiasjTvMg/132","nickname":"Adong0678","note":"","ucode":"845EECDFDE6233","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":280875,"discussion_content":"哈哈，你们想多了，","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1591623479,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":135772,"user_name":"Jxin","can_delete":false,"product_type":"c1","uid":1251111,"ip_address":"","ucode":"4C03928388C413","user_header":"https://static001.geekbang.org/account/avatar/00/13/17/27/ec30d30a.jpg","comment_is_top":false,"comment_ctime":1569259619,"is_pvip":false,"replies":[{"id":"52044","content":"给你点赞👍<br>","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1569279207,"ip_address":"","comment_id":135772,"utype":1}],"discussion_count":10,"race_medal":0,"score":"478310629475","product_id":100035801,"comment_content":"1.业务价值-&gt;承载高并发-&gt;性能优化。一切的前提是业务价值需要。如果没有足够的价值，那么可读性才是第一，性能在需要的地方是no.1，但不需要的地方可能就是倒数第一稞。当下技术框架出来的软件差不到哪去，没有这种及时响应诉求的地方，削峰下慢慢跑就是了。（工作需要，常在缺少价值的地方着手性能优化，让我对这种就为个数字的操作很反感。要知道，异步，并发编程，逻辑缓存，算法真的会加剧系统的复杂度，得不偿失。如果没那个价值，简单才是王道）<br><br>2.提高并发度。要么加硬件，要么降低服务响应时间。做为开发，我们的目光更聚焦在降低响应时间这块。<br>1.采用非阻塞的rpc调用（高效的远端请求模式，采用容器的覆盖网络我认为也算）<br>2.将计算密集和io密集的的逻辑分割开，单独线程池，调整线程比例压榨单机性能（或者说找拐点）。<br>3.做缓存，io耗时的缓存和计算耗时的缓存（多级缓存，数据压缩降低带宽）。<br>4.采用享元模式，用好对象池和本地线程空间，尽量减少对象创建与销毁的开销，提高复用。<br>5.业务拆分，像状态变化后的外部系统通知，业务监控，es或solr等副本数据同步等操作，无需在主流程中做的事都拆掉。走canal监听表数据变化，推mq保最终一致的方式从业务项目完全解偶出来。<br>6.fork_join，分而治之的处理大任务。并发编程，采用多线程并行的方式处理业务。（规避伪共享，减小锁力度，采用合适的锁）。<br>7.数据库配置优化，查询优化。（存储优化比较头疼，毕竟不按业务拆单点跑不掉，单点性能就要命。基本只能内存库先行，后台同步数据做持久。然后内存库多副本，自修复，保留一系列自修复失败的修复手段）","like_count":112,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":468335,"discussion_content":"给你点赞👍\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1569279207,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1062848,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83ersGSic8ib7OguJv6CJiaXY0s4n9C7Z51sWxTTljklFpq3ZAIWXoFTPV5oLo0GMTkqW5sYJRRnibNqOJQ/132","nickname":"walle斌","note":"","ucode":"0DB3243004951F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":384859,"discussion_content":"说的好。。尤其一开始说的。。kiss原则。。现在太多研发喜欢在代码炫技了。。不反感你炫技，但是一设计上确实需要，不是为了炫而炫   二写好注释，三 做好UT以及性能比较  四 出了问题有迅速解决的手段","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1626774639,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1251835,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/oiboHpgukqib2ASXeU0H7W1ibgRMqyrNE5KaWicicPEDy0ia8YdoneZAtvW0EFIiaqZJp2OS4dnweOgXaJ5EjJicicEqic5A/132","nickname":"覃钰栋","note":"","ucode":"19080C463658EF","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1062848,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83ersGSic8ib7OguJv6CJiaXY0s4n9C7Z51sWxTTljklFpq3ZAIWXoFTPV5oLo0GMTkqW5sYJRRnibNqOJQ/132","nickname":"walle斌","note":"","ucode":"0DB3243004951F","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":550657,"discussion_content":"第四点是我们开发容易忽略的，兜底方案很重要。要不出了事就炸锅","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1644658051,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":384859,"ip_address":""},"score":550657,"extra":""}]},{"author":{"id":1297887,"avatar":"https://static001.geekbang.org/account/avatar/00/13/cd/df/c520d418.jpg","nickname":"董俊俊","note":"","ucode":"732300A779660B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":401792,"discussion_content":"课代表","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1633741391,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1253310,"avatar":"https://static001.geekbang.org/account/avatar/00/13/1f/be/551454e0.jpg","nickname":"zxy","note":"","ucode":"FFAA3F6667305D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":372248,"discussion_content":"厉害👍，mark","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1620259801,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2357566,"avatar":"https://static001.geekbang.org/account/avatar/00/23/f9/3e/0d5f27c4.jpg","nickname":"肥猫不开心","note":"","ucode":"FA9204B84913C0","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":358859,"discussion_content":"大佬啊你这还需要学吗","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1616065432,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1002332,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIfk5OeeGFBKX6ehZTAfwicDHa6Yy9WEn1zIq1iaDYN261N3w5C6fPkLex3L65tqU4q2HeTt05v8LKw/132","nickname":"penny19","note":"","ucode":"1171AC487B1263","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":306071,"discussion_content":"明白人，给你个赞","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1600160234,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1985184,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/GjFJHox9V8qh53zIrExw4NK0KG9WBvRH8RJVjm9jp78RSpWfa2xzyq11dTNItpK2icQniaK4bibTv6ksRGiasjTvMg/132","nickname":"Adong0678","note":"","ucode":"845EECDFDE6233","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":280876,"discussion_content":"总结大师","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1591623518,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1097416,"avatar":"https://static001.geekbang.org/account/avatar/00/10/be/c8/7c5f324f.jpg","nickname":"港岛妹夫","note":"","ucode":"9F6AAA29B60D8F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":46243,"discussion_content":"高手","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573134770,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1359878,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/ajNVdqHZLLDuUeF7u9lAY3qmfKSfDBQzCJuveFVyIGE7D1PEI8ZQ1kTScwvRdruYHff0zpEnJWlsYicLlWGvcTg/132","nickname":"小虎","note":"","ucode":"66CCAB2C757B3C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":20940,"discussion_content":"好厉害","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1569400973,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":135842,"user_name":"平步青云","can_delete":false,"product_type":"c1","uid":1667103,"ip_address":"","ucode":"5024A00CEED6E3","user_header":"https://static001.geekbang.org/account/avatar/00/19/70/1f/15e5356b.jpg","comment_is_top":false,"comment_ctime":1569287982,"is_pvip":false,"replies":[{"id":"52083","content":"好的 后面演进篇中会有案例","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1569297333,"ip_address":"","comment_id":135842,"utype":1}],"discussion_count":1,"race_medal":0,"score":"181957914414","product_id":100035801,"comment_content":"既然老师愿意把这门课做好，作为学员提几点建议：<br>1.每一章都会有一个中心，几个侧重点，建议关键部分文字加粗或者字号加大一点，让重心更醒目。一遍看下来，几乎啥都没记住。<br>2.条理清晰，有时候你会发现，用1.2.3这种编号作用非常明显。这点得到做的挺好的，我都购买的有课程。<br>3.技术文章，理论讲太多，都觉得是鸡汤，看了就忘，或者说作用不大，理论大家能查阅资料，也算是理解一星半点。大家的问题都在于没把理论作用于实践中，如果每一章讲完理论后能够以实际应用辅助讲一下，可以说事半功倍。<br>4.我说话很直接，真正的高手也不会购买课程，购买课程的也是大家在这块有短板，希望通过这门课解决一些项目中的问题。按照2&#47;8原则，百分之八十的人项目中都没有大并发，这种系统设计和运用，大家缺乏经验。讲解时候，浅显易懂，案例分享很关键，百分之八十人看懂了，能应用了，那这门课非常成功了。<br>5.希望高手之间多讨论或者辩论，其实在你们的讨论中，可以学到很多，开拓视野，举一反三。希望评论中只要不是骂人，违反国家政策，涉及到问题本身讨论的，尽量显示出来。","like_count":43,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":468355,"discussion_content":"好的 后面演进篇中会有案例","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1569297333,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":146286,"user_name":"无形","can_delete":false,"product_type":"c1","uid":1016889,"ip_address":"","ucode":"B740E2A68A17A5","user_header":"https://static001.geekbang.org/account/avatar/00/0f/84/39/c8772466.jpg","comment_is_top":false,"comment_ctime":1572489939,"is_pvip":true,"replies":[{"id":"56578","content":"赞，经验丰富老司机：）","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1572565811,"ip_address":"","comment_id":146286,"utype":1}],"discussion_count":12,"race_medal":0,"score":"117536606931","product_id":100035801,"comment_content":"之前做广告检索遇到的问题，倒排索引存在Redis，每次都要请求Redis，但是并发时，Redis连接数太大，甚至打开文件数过大，后采用Redis连接池，Redis连接数得到控制，而且响应更快，后来随着并发数的增大，连接池资源耗尽，而且Redis也有并发限制，数据传输导致大量占用带宽，响应时间更久，因此，又使用了本地缓存，每次请求先请求本地缓存，找不到再请求Redis，缓存到本地，缓存更新时通过消息队列来通知程序更新本地缓存，这样节省了大量的和Redis之间的请求耗时和带宽占用，性能有了数倍的提升。后面还有很多优化，性能优化不是一蹴而就的，每个阶段面对的场景是不一样的，需要找到每个瓶颈点针对性的优化","like_count":28,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":472782,"discussion_content":"赞，经验丰富老司机：）","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1572565811,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1720984,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/42/98/184c8d00.jpg","nickname":"Monkey·D·Li","note":"","ucode":"8662D1CA783FCD","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":336575,"discussion_content":"一看就是开发一线的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1608627503,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1009831,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/68/a7/c3fd1fd9.jpg","nickname":"聪","note":"","ucode":"9D672A8580A945","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":311667,"discussion_content":"redis server端我做过调整tcp_backlog的优化，性能提升不少","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1602456781,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1016889,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/84/39/c8772466.jpg","nickname":"无形","note":"","ucode":"B740E2A68A17A5","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1009831,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/68/a7/c3fd1fd9.jpg","nickname":"聪","note":"","ucode":"9D672A8580A945","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":311752,"discussion_content":"是个思路，Redis是由其他部门提供的集群，我们不具有可操作性","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1602482482,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":311667,"ip_address":""},"score":311752,"extra":""},{"author":{"id":1009831,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/68/a7/c3fd1fd9.jpg","nickname":"聪","note":"","ucode":"9D672A8580A945","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1016889,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/84/39/c8772466.jpg","nickname":"无形","note":"","ucode":"B740E2A68A17A5","race_medal":0,"user_type":1,"is_pvip":true},"discussion":{"id":311922,"discussion_content":"联系他们让他们改 帮助你们测试 要求老板出面 push这事完成","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1602528443,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":311752,"ip_address":""},"score":311922,"extra":""}]},{"author":{"id":1033096,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/c3/88/d16816a8.jpg","nickname":"如来神掌","note":"","ucode":"45E20FF935BD2F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":306861,"discussion_content":"不引入MQ, 让本地缓存的时间短一点，当然会有短暂的不一致，在业务允许的情况下可以这么做。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1600405846,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1583740,"avatar":"https://static001.geekbang.org/account/avatar/00/18/2a/7c/0d6a87c4.jpg","nickname":"dandy","note":"","ucode":"5EE976FCBD9215","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":278064,"discussion_content":"多大的qps，如果redis扛不住，是否可以在redis系统做优化，比如集群，分片，都应该可以扛住。当然，你说的缓存也能解决，但是引入缓存又引入了诸多问题","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1591146341,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1016889,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/84/39/c8772466.jpg","nickname":"无形","note":"","ucode":"B740E2A68A17A5","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1583740,"avatar":"https://static001.geekbang.org/account/avatar/00/18/2a/7c/0d6a87c4.jpg","nickname":"dandy","note":"","ucode":"5EE976FCBD9215","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":278074,"discussion_content":"Redis组件是由基础服务提供的，不在我们可操作范围之内","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1591147083,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":278064,"ip_address":""},"score":278074,"extra":""}]},{"author":{"id":1439903,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKw8ictgYcqf6kicJ4RlmicgKvCAGLTQFmmvCWwGzGJeY5SJ8KxXNtNh12FI0IzJNYfUx1PbJcHriadbA/132","nickname":"王三好","note":"","ucode":"7528CB2B1EFA4B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":235566,"discussion_content":"你应该开这们课程","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1587044865,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1132930,"avatar":"https://static001.geekbang.org/account/avatar/00/11/49/82/c5fc60c5.jpg","nickname":"/dev","note":"","ucode":"12E4F0E00AA504","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":206294,"discussion_content":"“缓存更新时通过消息队列来通知程序更新本地缓存”：请教一下为什么选择使用消息队列而不是RPC调用呢？另外如何保证消息队列高可用呢？比如Redis已更新，但发送MQ时出错？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584374503,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1016889,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/84/39/c8772466.jpg","nickname":"无形","note":"","ucode":"B740E2A68A17A5","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1132930,"avatar":"https://static001.geekbang.org/account/avatar/00/11/49/82/c5fc60c5.jpg","nickname":"/dev","note":"","ucode":"12E4F0E00AA504","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":206826,"discussion_content":"\n基础设施不完善，没有rpc，能用的只有mq，而且mq在消息量级比较大的时候确实出现过问题，是在疫情期间免费公益讲座服务里，广播模式消息量级翻倍，推送延迟、偶有消费不到的问题，后改用kafka好很多，对于发送mq失败的问题，打了日志，我们又做了一个日志监控服务（也是从零做起来的😂），会根据一定的频次和日志级别进行聚合，进行钉钉通知，有问题的话再去改，以前没有这方面的经验，我也没有什么好的建议，你有的话欢迎交流","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1584448571,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":206294,"ip_address":""},"score":206826,"extra":""},{"author":{"id":1583740,"avatar":"https://static001.geekbang.org/account/avatar/00/18/2a/7c/0d6a87c4.jpg","nickname":"dandy","note":"","ucode":"5EE976FCBD9215","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1132930,"avatar":"https://static001.geekbang.org/account/avatar/00/11/49/82/c5fc60c5.jpg","nickname":"/dev","note":"","ucode":"12E4F0E00AA504","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":278062,"discussion_content":"mq本身就是不稳定的，如果你的系统想通过mq做到强依赖的话，那肯定会有问题的，建议是通过自己的设计，比如对账，重试等，来保证最终一致性即可","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1591146209,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":206294,"ip_address":""},"score":278062,"extra":""}]}]},{"had_liked":false,"id":135546,"user_name":"Cola_","can_delete":false,"product_type":"c1","uid":1264718,"ip_address":"","ucode":"99996D04CA4171","user_header":"https://static001.geekbang.org/account/avatar/00/13/4c/4e/91267714.jpg","comment_is_top":false,"comment_ctime":1569207970,"is_pvip":false,"replies":[{"id":"51982","content":"👍👍","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1569221447,"ip_address":"","comment_id":135546,"utype":1}],"discussion_count":2,"race_medal":0,"score":"108943390370","product_id":100035801,"comment_content":"高并发：高性能（响应时间）、高可用（down机、故障、维护）、可扩展（应急扩容）<br>响应时间（平均值、最大值、分位值），响应为1s，吞吐量为每秒1次，响应缩短到10ms，吞吐量上升到每秒100次，从用户体验来说：200ms分界点，1s为另一个分界点，健康系统的99分位值的响应时间控制在200ms以内，不超过1s的请求占比要超过99.99%<br>高并发下的性能优化手段：<br>1.提高系统的处理核心数（吞吐量=核心数(并发进程数)&#47;响应时间(s)）<br>  但并非无限增加核心数就可以增加吞吐量，随着进程数增加，并行的任务对于资源的争夺也增加，在某 <br>  个临界点，进程增加导致系统的性能下降，这就是性能测试中的拐点模型，所以在评估系统性能时，需要做压力测试，找到拐点<br>2.减少单次任务响应时间<br>cpu密集型：优化算法<br>io密集型：1.采用工具，linux的工具集<br>              2.通过监控，对任务的每一个步骤做分时统计，从而找到任务中哪一步小号消耗了更多的时间<br><br><br>","like_count":25,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":468241,"discussion_content":"👍👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1569221447,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1099445,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c6/b5/e2304f0b.jpg","nickname":"can","note":"","ucode":"435B4D49C681B6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":20107,"discussion_content":"并行","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1569267619,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":203183,"user_name":"钱","can_delete":false,"product_type":"c1","uid":1009652,"ip_address":"","ucode":"2C92A243A463D4","user_header":"https://static001.geekbang.org/account/avatar/00/0f/67/f4/9a1feb59.jpg","comment_is_top":false,"comment_ctime":1586151004,"is_pvip":false,"replies":[{"id":"78258","content":"加油~","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1587623640,"ip_address":"","comment_id":203183,"utype":1}],"discussion_count":3,"race_medal":0,"score":"61715693148","product_id":100035801,"comment_content":"哈哈，看评论“真正的高手也不会购买课程”，扎心啦！😄，不过事实也应该是如此的。<br>我猜测一下，真正的高手在干嘛！<br>第一技术负责人，负责一些核心项目<br>第二技术专家，写书出专栏<br>第三开源项目贡献者，参与和贡献过知名的开源项目<br>第四技术社区或知名项目的领导者<br>第五知名公司CTO，在用技术改变世界<br>第六技术大神一门语言或一个框架的开创者<br>不过根据2&#47;8原则，猜测80%的人都不在这个范围内，这就是极客时间存在的意义。<br>我想表达啥呢？极客时间对我帮助还是非常大的，我也从业多年，不过比较遗憾没到高手的行列。技术是我养家糊口的工具，跟一些作者年龄相近实力却相差甚远，花几十元和他们聊聊，基本收获都是大于付出的钱的。相信极客时间的过滤功能，希望自己能够早日不用再购买课程。😅<br>","like_count":15,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":490790,"discussion_content":"加油~","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1587623640,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1261360,"avatar":"https://static001.geekbang.org/account/avatar/00/13/3f/30/23f6b413.jpg","nickname":"五十九秒","note":"","ucode":"1F34F62193CFF6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":374249,"discussion_content":"购买的好多专栏都有看到你的身影，志同道合呢。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1621081733,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1140175,"avatar":"https://static001.geekbang.org/account/avatar/00/11/65/cf/326c0eea.jpg","nickname":"x-ray","note":"","ucode":"8363F0C4D0AC0B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":308975,"discussion_content":"极客还是很棒的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1601134749,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":136188,"user_name":"星星","can_delete":false,"product_type":"c1","uid":1666537,"ip_address":"","ucode":"4741E5B018396B","user_header":"https://static001.geekbang.org/account/avatar/00/19/6d/e9/3e1c559a.jpg","comment_is_top":false,"comment_ctime":1569379543,"is_pvip":false,"replies":[{"id":"52270","content":"一般使用线上流量引流的工具，tcpcopy, goreplay<br>","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1569421415,"ip_address":"","comment_id":136188,"utype":1}],"discussion_count":2,"race_medal":0,"score":"53108987095","product_id":100035801,"comment_content":"老师你好，高并发 有什么好的模拟工具？","like_count":12,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":468500,"discussion_content":"一般使用线上流量引流的工具，tcpcopy, goreplay\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1569421415,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1439903,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKw8ictgYcqf6kicJ4RlmicgKvCAGLTQFmmvCWwGzGJeY5SJ8KxXNtNh12FI0IzJNYfUx1PbJcHriadbA/132","nickname":"王三好","note":"","ucode":"7528CB2B1EFA4B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":235587,"discussion_content":"jmeter","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1587045234,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":135621,"user_name":"吃饭饭","can_delete":false,"product_type":"c1","uid":1231549,"ip_address":"","ucode":"95CFA07CDA2957","user_header":"https://static001.geekbang.org/account/avatar/00/12/ca/bd/a51ae4b2.jpg","comment_is_top":false,"comment_ctime":1569230320,"is_pvip":false,"replies":[{"id":"52498","content":"QPS指的是每秒查询请求数；TPS指的是每秒执行事务数，偏向于写请求。<br>这些常识虽然有些零散，不过是正确的：）","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1569547860,"ip_address":"","comment_id":135621,"utype":1}],"discussion_count":1,"race_medal":0,"score":"31634001392","product_id":100035801,"comment_content":"<br>老师能普及一下常见的术语吗？比如 QPS 和 TPS。日常优化不从服务器谈，只说 Review 的一些常识，避免循环调用，热点数据提前预热，可以加入利用内存缓存一些配置数据等等，不知道理解的对不对：）","like_count":7,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":468275,"discussion_content":"QPS指的是每秒查询请求数；TPS指的是每秒执行事务数，偏向于写请求。\n这些常识虽然有些零散，不过是正确的：）","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1569547860,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":165045,"user_name":"长期规划","can_delete":false,"product_type":"c1","uid":1019332,"ip_address":"","ucode":"5EF65E9115834B","user_header":"https://static001.geekbang.org/account/avatar/00/0f/8d/c4/6f97daea.jpg","comment_is_top":false,"comment_ctime":1577152142,"is_pvip":false,"replies":[{"id":"63045","content":"👍","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1577239481,"ip_address":"","comment_id":165045,"utype":1}],"discussion_count":1,"race_medal":0,"score":"27346955918","product_id":100035801,"comment_content":"从全局看，高性能需要全链路检查，常用方法是拆分，精简，换硬件等。拆分如读写分离，分片等，精简如进程→线程→协程，HTTP→RPC，换硬件如内存替换硬盘等。从编程角度，还可以使用合适的数据结构和算法","like_count":6,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":478999,"discussion_content":"👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577239481,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":136746,"user_name":"sun","can_delete":false,"product_type":"c1","uid":1076100,"ip_address":"","ucode":"0358B9288D4018","user_header":"https://static001.geekbang.org/account/avatar/00/10/6b/84/d1e6eac9.jpg","comment_is_top":false,"comment_ctime":1569502116,"is_pvip":false,"replies":[{"id":"52490","content":"这。。","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1569546566,"ip_address":"","comment_id":136746,"utype":1}],"discussion_count":3,"race_medal":0,"score":"27339305892","product_id":100035801,"comment_content":"日常工作中，项目优化的不够好，那就对部门进行优化⁽⁽ଘ😇ଓ⁾⁾","like_count":6,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":468783,"discussion_content":"这。。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1569546566,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1018972,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/8c/5c/3f164f66.jpg","nickname":"亚林","note":"","ucode":"4A5A6D24314B79","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":393556,"discussion_content":"正己化人 是工友们很重要的能力；尤其是开发者","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1631495371,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1985184,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/GjFJHox9V8qh53zIrExw4NK0KG9WBvRH8RJVjm9jp78RSpWfa2xzyq11dTNItpK2icQniaK4bibTv6ksRGiasjTvMg/132","nickname":"Adong0678","note":"","ucode":"845EECDFDE6233","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":280879,"discussion_content":"对，人是系统优化最大的障碍，把老板优化了，你想咋优化就咋优化","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1591624097,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":135808,"user_name":"高源","can_delete":false,"product_type":"c1","uid":1048887,"ip_address":"","ucode":"751B41FD38EF7D","user_header":"https://static001.geekbang.org/account/avatar/00/10/01/37/12e4c9c9.jpg","comment_is_top":false,"comment_ctime":1569284543,"is_pvip":false,"replies":[{"id":"52088","content":"找问题的话主要有三个方法，监控，工具和压测<br><br>压测和监控后面会有介绍，工具要依靠自己的积累，在文章中也有介绍","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1569297937,"ip_address":"","comment_id":135808,"utype":1}],"discussion_count":2,"race_medal":0,"score":"27339088319","product_id":100035801,"comment_content":"从小到大从浅入深，老师我最想知道的是开发的系统如何找出程序瓶颈，问题具体出现在哪，用什么工具或者方法解决了，从而在后期有机会设计高并发高可用系统的时候根据实际情况来下手","like_count":6,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":468347,"discussion_content":"找问题的话主要有三个方法，监控，工具和压测\n\n压测和监控后面会有介绍，工具要依靠自己的积累，在文章中也有介绍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1569297937,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1048887,"avatar":"https://static001.geekbang.org/account/avatar/00/10/01/37/12e4c9c9.jpg","nickname":"高源","note":"","ucode":"751B41FD38EF7D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":20377,"discussion_content":"感谢老师的回复，我是比较喜欢问个底的，例如开发的服务器端程序，具体上限和响应能力如何，有问题了如何进行修改代码能够解决问题，做到自己有底呵😊","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1569307157,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":135901,"user_name":"Geek_Rex","can_delete":false,"product_type":"c1","uid":1674816,"ip_address":"","ucode":"A1432D6A0C5A3F","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/PiajxSqBRaEKms5faiaqcTQ0fmqZoAfsVPeZQYZib7CIWJfLCvSLWia1XaoNGpP2M9G2woDdvaIVUYfWPBJa8nLs9A/132","comment_is_top":false,"comment_ctime":1569295758,"is_pvip":false,"replies":[{"id":"52139","content":"access log有记录响应时间的，可以收集起来做成监控","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1569372306,"ip_address":"","comment_id":135901,"utype":1}],"discussion_count":1,"race_medal":0,"score":"23044132238","product_id":100035801,"comment_content":"请问通过什么工具可以测试WEBAPI的响应时间？","like_count":5,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":468376,"discussion_content":"access log有记录响应时间的，可以收集起来做成监控","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1569372306,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":183400,"user_name":"小袁","can_delete":false,"product_type":"c1","uid":1811495,"ip_address":"","ucode":"3F5D8721F577D9","user_header":"https://static001.geekbang.org/account/avatar/00/1b/a4/27/15e75982.jpg","comment_is_top":false,"comment_ctime":1583033256,"is_pvip":false,"replies":[{"id":"71089","content":"谢谢~","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1583114818,"ip_address":"","comment_id":183400,"utype":1}],"discussion_count":1,"race_medal":0,"score":"18762902440","product_id":100035801,"comment_content":"大家不要觉得虚，看这些理论的时候，多想想自己负责的系统犯过什么傻逼的问题就能举一反三。适逢公司的架构不够用，我先过来重温一下这些理论再考虑优化。","like_count":5,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":485678,"discussion_content":"谢谢~","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1583114818,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":135499,"user_name":"饭团","can_delete":false,"product_type":"c1","uid":1332557,"ip_address":"","ucode":"E24F240CC91BE8","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83erbY9UsqHZhhVoI69yXNibBBg0TRdUVsKLMg2UZ1R3NJxXdMicqceI5yhdKZ5Ad6CJYO0XpFHlJzIYQ/132","comment_is_top":false,"comment_ctime":1569199486,"is_pvip":false,"replies":[{"id":"51984","content":"这个在后面课程会有介绍哦：）","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1569221536,"ip_address":"","comment_id":135499,"utype":1}],"discussion_count":3,"race_medal":0,"score":"18749068670","product_id":100035801,"comment_content":"嗯，老师说的数据优先，我觉得最重要！一切的优化前提都是在数据的支撑下进行！请问老师一般系统的性能指标都问怎么统计？<br>比如最大响应时间，平均响应时间！分位值统计方式，我们可以在请求开始和请求返回时做时间统计！写入log之后定时分析log得到！<br>系统cpu指标，内存指标，io指标这种是定时通过系统函数获取信息统计吗？<br>其实我想问老师的是，一般高并发系统都统计系统的哪些指标？","like_count":4,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":468217,"discussion_content":"这个在后面课程会有介绍哦：）","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1569221536,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1128084,"avatar":"https://static001.geekbang.org/account/avatar/00/11/36/94/5aecb0ef.jpg","nickname":"y3","note":"","ucode":"C93F8EC2AAACF6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":20151,"discussion_content":"请问唐老师，性能监控您建议是自己开发的，还是采用第三方的。您有哪些推荐的开源第三方监控系统呢？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1569284847,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1332557,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83erbY9UsqHZhhVoI69yXNibBBg0TRdUVsKLMg2UZ1R3NJxXdMicqceI5yhdKZ5Ad6CJYO0XpFHlJzIYQ/132","nickname":"饭团","note":"","ucode":"E24F240CC91BE8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":19829,"discussion_content":"好的，老师","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1569229723,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":135525,"user_name":"Maxwell","can_delete":false,"product_type":"c1","uid":1211320,"ip_address":"","ucode":"D28CC11C99F0CE","user_header":"https://static001.geekbang.org/account/avatar/00/12/7b/b8/6f47ba1b.jpg","comment_is_top":false,"comment_ctime":1569204079,"is_pvip":false,"replies":[{"id":"51983","content":"可以考虑cache aside的方式来使用缓存，后面会介绍：）","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1569221498,"ip_address":"","comment_id":135525,"utype":1}],"discussion_count":1,"race_medal":0,"score":"14454105967","product_id":100035801,"comment_content":"老师，在高并发时涉及到要更改公用的值，考虑到数据库的并发量的瓶颈，采用缓存来抗并发，但此时数据一致性的保证一般什么方案？","like_count":3,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":468231,"discussion_content":"可以考虑cache aside的方式来使用缓存，后面会介绍：）","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1569221498,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":263548,"user_name":"下个目标45k","can_delete":false,"product_type":"c1","uid":1066508,"ip_address":"","ucode":"193BA8C3AA9A61","user_header":"https://static001.geekbang.org/account/avatar/00/10/46/0c/773ba2f3.jpg","comment_is_top":false,"comment_ctime":1606181963,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"10196116555","product_id":100035801,"comment_content":"排查性能问题思维框架<br>1. 问题导向，首先要做的就是定位到瓶颈在哪里，解决问题最重要的是弄清楚问题本身。java web可以使用arthas非常方便。<br>2. 二八原则，系统性能瓶颈数量大概率会存在多个，抓住主要矛盾。<br>3. 数据，数据指标不会骗人，直觉是不准的。<br>4. 持续，随着项目在不断迭代意味着性能瓶颈点也在不断变化，需要持续性的进行观察。<br><br>以上四点其实是环环相扣，缺一不可。是不是有点精益创业方法论的感觉了😂<br><br>上面有朋友提到文章理论知识过多缺少实践，不必心急。理论是道，实践是术，理论实践结合是最好的，但前提是对于理论我们有深入思考理解，否则就有点搞错主次了。有句话形容的很好，道为根本 术为道之动。<br><br>让我们掌握基础的理论，形成自己的思维框架，我想这才是作者的初衷。","like_count":3,"discussions":[{"author":{"id":1533298,"avatar":"","nickname":"Geek_518e2c","note":"","ucode":"A92ACAE6967A5C","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":583679,"discussion_content":"两年过去了，好奇45K的目标达成没","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1660288670,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"上海"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":136300,"user_name":"Luciano李鑫","can_delete":false,"product_type":"c1","uid":1329995,"ip_address":"","ucode":"5FBE5F86FD5B2C","user_header":"https://static001.geekbang.org/account/avatar/00/14/4b/4b/97926cba.jpg","comment_is_top":false,"comment_ctime":1569404785,"is_pvip":false,"replies":[{"id":"52273","content":"表述不清楚，应该是吞吐量和响应时间","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1569421813,"ip_address":"","comment_id":136300,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10159339377","product_id":100035801,"comment_content":"“我们通常使用吞吐量或者同时在线用户数来度量并发和流量，使用吞吐量的情况会更多一些。但是你要知道，这两个指标是呈倒数关系”<br>这个地方是不是有问题，吞吐量和在线用户数是倒数关系？？<br>","like_count":2,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":468554,"discussion_content":"表述不清楚，应该是吞吐量和响应时间","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1569421813,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":192331,"user_name":"sipom","can_delete":false,"product_type":"c1","uid":1074197,"ip_address":"","ucode":"80411DC49CFA57","user_header":"https://static001.geekbang.org/account/avatar/00/10/64/15/9c9ca35c.jpg","comment_is_top":false,"comment_ctime":1584846913,"is_pvip":false,"replies":[{"id":"73894","content":"👍","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1585019777,"ip_address":"","comment_id":192331,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5879814209","product_id":100035801,"comment_content":"代码层：采用高效算法，避免低效代码；应用层：多线程&#47;多进程并发；数据库&#47;缓存：分库分表并发；系统层：多节点、多套系统并发&#47;负载均衡","like_count":1,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":488373,"discussion_content":"👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585019777,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":153401,"user_name":"M","can_delete":false,"product_type":"c1","uid":1437769,"ip_address":"","ucode":"1A756D9AFCEB48","user_header":"https://static001.geekbang.org/account/avatar/00/15/f0/49/889f9ef6.jpg","comment_is_top":false,"comment_ctime":1574230351,"is_pvip":false,"replies":[{"id":"59014","content":"压测在32节中讲到","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1574294335,"ip_address":"","comment_id":153401,"utype":1}],"discussion_count":2,"race_medal":0,"score":"5869197647","product_id":100035801,"comment_content":"老师问一下，目前做线上压测有什么工具吗，或者通常用什么方法来做呢？","like_count":1,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":475153,"discussion_content":"压测在32节中讲到","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574294335,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1437769,"avatar":"https://static001.geekbang.org/account/avatar/00/15/f0/49/889f9ef6.jpg","nickname":"M","note":"","ucode":"1A756D9AFCEB48","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":54654,"discussion_content":"谢谢","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574307975,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":149774,"user_name":"billow","can_delete":false,"product_type":"c1","uid":1008350,"ip_address":"","ucode":"6D58AEA45BA6A3","user_header":"https://static001.geekbang.org/account/avatar/00/0f/62/de/57cbb843.jpg","comment_is_top":false,"comment_ctime":1573373712,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5868341008","product_id":100035801,"comment_content":"说个以前看过的一篇讲高性能server开发需要注意的点：<br>上下文切换<br>数据拷贝<br>内存分配<br>锁竞争","like_count":1},{"had_liked":false,"id":141534,"user_name":"虫子","can_delete":false,"product_type":"c1","uid":1389601,"ip_address":"","ucode":"DF65980B8DF8C7","user_header":"https://static001.geekbang.org/account/avatar/00/15/34/21/11cf22de.jpg","comment_is_top":false,"comment_ctime":1571188762,"is_pvip":false,"replies":[{"id":"54680","content":"这个不太好这么估算，要依据你的业务的复杂度。比如你业务比较重，那么单机支持的并发肯定就少。<br><br>所以好的办法是通过线上压测来评估","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1571193846,"ip_address":"","comment_id":141534,"utype":1}],"discussion_count":2,"race_medal":0,"score":"5866156058","product_id":100035801,"comment_content":"老师，一个系统支持的并发数峰值通常如何估算？如果通过nginx增加负载均衡后，提升多少，又如何估算?","like_count":1,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":470789,"discussion_content":"这个不太好这么估算，要依据你的业务的复杂度。比如你业务比较重，那么单机支持的并发肯定就少。\n\n所以好的办法是通过线上压测来评估","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571193846,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":1,"child_discussions":[{"author":{"id":2419928,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/PCGPouib3kwBQYuYZmiag8N2ETm9JoBw5OaAm6XfVH6Nzkib43UDLxPuYNyNHnpHU8brLaOAQFog4t1trP6awlgUg/132","nickname":"火山九日","note":"","ucode":"1BC109A77AE0EE","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":545389,"discussion_content":"老师，线上运行的项目如何做压测呢","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1641947512,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":470789,"ip_address":""},"score":545389,"extra":""}]}]},{"had_liked":false,"id":140588,"user_name":"博弈","can_delete":false,"product_type":"c1","uid":1433344,"ip_address":"","ucode":"B1A69837E41972","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/EcYNib1bnDf5dz6JcrE8AoyZYMdqic2VNmbBtCcVZTO9EoDZZxqlQDEqQKo6klCCmklOtN9m0dTd2AOXqSneJYLw/132","comment_is_top":false,"comment_ctime":1571012675,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5865979971","product_id":100035801,"comment_content":"希望这些理论知识能穿插在实际案例中来讲解比较好，多一些实际项目的案例，大家缺乏的应该是实际项目中的运用","like_count":1},{"had_liked":false,"id":138243,"user_name":"longslee","can_delete":false,"product_type":"c1","uid":1465986,"ip_address":"","ucode":"C24E32E5B1B6F5","user_header":"https://static001.geekbang.org/account/avatar/00/16/5e/82/438c8534.jpg","comment_is_top":false,"comment_ctime":1570112440,"is_pvip":false,"replies":[{"id":"53188","content":"👍👍👍","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1570148277,"ip_address":"","comment_id":138243,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5865079736","product_id":100035801,"comment_content":"思考时间：老师我们目前还是传统项目，所以瓶颈大部分在数据库上（即使是分布式，通过对调用链监控，发现对单体方法也以SQL问题居多），基本上解决了top SQL就能好一大半，而top SQL又大多是表关联之间和索引的优化；也有特例，咱们选用Java，对JVM监控也能看出一些问题，比如锁争用太高限制线程数增加的吞吐量增加。最后，咱还可以从业务着手，通过数学推演，减少不必要的环节。","like_count":1,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":469451,"discussion_content":"👍👍👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1570148277,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":137714,"user_name":"此方彼方Francis","can_delete":false,"product_type":"c1","uid":1001390,"ip_address":"","ucode":"73E6C93CF1FE39","user_header":"https://static001.geekbang.org/account/avatar/00/0f/47/ae/0a5f7a56.jpg","comment_is_top":false,"comment_ctime":1569828572,"is_pvip":false,"replies":[{"id":"53064","content":"是的，没错，重要的是了解背后的原理","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1569979891,"ip_address":"","comment_id":137714,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5864795868","product_id":100035801,"comment_content":"支持一下老师，个人觉得，做事情，知道怎么做是一回事儿，知道这么做背后的指导思想又是另外一回事。","like_count":1,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":469226,"discussion_content":"是的，没错，重要的是了解背后的原理","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1569979891,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":135845,"user_name":"大雄","can_delete":false,"product_type":"c1","uid":1371593,"ip_address":"","ucode":"4AF29A183AB495","user_header":"https://static001.geekbang.org/account/avatar/00/14/ed/c9/9abdd4c6.jpg","comment_is_top":false,"comment_ctime":1569288126,"is_pvip":false,"replies":[{"id":"52082","content":"多核技术对于cpu核心来说也可以认为是水平扩展","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1569297263,"ip_address":"","comment_id":135845,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5864255422","product_id":100035801,"comment_content":"提高系统核数就从硬件角度出发，应该可以包含两方面:一是单纯地将单台服务器由1核变为多核，垂直扩展；也可以是部署负载均衡集群，进行水平扩展。","like_count":1,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":468357,"discussion_content":"多核技术对于cpu核心来说也可以认为是水平扩展","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1569297263,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":135669,"user_name":"糖包","can_delete":false,"product_type":"c1","uid":1549240,"ip_address":"","ucode":"8CF974BAEB576D","user_header":"https://static001.geekbang.org/account/avatar/00/17/a3/b8/00976fb7.jpg","comment_is_top":false,"comment_ctime":1569237823,"is_pvip":false,"replies":[{"id":"52027","content":"只看过阿里的Seata，不过好像除了像支付宝和阿里这样对于一致性要求比较高的项目，分布式事务使用的不多吧","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1569240587,"ip_address":"","comment_id":135669,"utype":1}],"discussion_count":2,"race_medal":0,"score":"5864205119","product_id":100035801,"comment_content":"老师，麻烦问下分布式架构下分布式事务是需要怎么处理，有好的成熟的框架可以采用么？","like_count":1,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":468296,"discussion_content":"只看过阿里的Seata，不过好像除了像支付宝和阿里这样对于一致性要求比较高的项目，分布式事务使用的不多吧","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1569240587,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1195216,"avatar":"https://static001.geekbang.org/account/avatar/00/12/3c/d0/6991b248.jpg","nickname":"坚持是一种品质","note":"","ucode":"BADD72CD8356C6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":19992,"discussion_content":"可以使用LCN作为分布式事务解决方案，代码注入量相比TCC等要少的多","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1569246715,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":349931,"user_name":"Austin Meng","can_delete":false,"product_type":"c1","uid":1106708,"ip_address":"","ucode":"ADD863FB8D4B24","user_header":"https://static001.geekbang.org/account/avatar/00/10/e3/14/30d210c5.jpg","comment_is_top":false,"comment_ctime":1656461626,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1656461626","product_id":100035801,"comment_content":"大的方面就是两点，单进程提升效率（选用更强劲cpu，优化算法，多线程），多进程提升整体吞吐（运行更多节点）。两个方面都要找到合适的平衡点","like_count":0},{"had_liked":false,"id":346856,"user_name":"Soyoger","can_delete":false,"product_type":"c1","uid":2967576,"ip_address":"","ucode":"D4D7BD0ABC4491","user_header":"https://static001.geekbang.org/account/avatar/00/2d/48/18/e524f344.jpg","comment_is_top":false,"comment_ctime":1653474134,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1653474134","product_id":100035801,"comment_content":"简单说几句，课程从理论角度来说，讲的还是比较通俗易懂，也很有针对性，稍微做过研发的基本都能理解，有些还可能接触过；但是，从实际工程经验来看，如何发现、测试出系统性能瓶颈和性能指标，反而是一个更大的工程问题，涉及到系统基础配置、环境线上和测试环境是否一致，如何测？如何mock测试数据，如何测试和线上数据能区分开，测试数据不会污染线上库等，如何课程把这些也讲清楚就好了，这些虽然看起来可能是测试工程师的活，其实不是，架构和研发要比测试工程师更应该注意。","like_count":0},{"had_liked":false,"id":333586,"user_name":"Info_E","can_delete":false,"product_type":"c1","uid":1755152,"ip_address":"","ucode":"97207B2CC4C776","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/VTPuhJb5xxuRwH1iblqrAe3De4PoETgNWibZRkLlhvszysdtpAvSPZFuYtsJfWJmoXOFFWnpR02W9NGIiammU8UPg/132","comment_is_top":false,"comment_ctime":1644412505,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1644412505","product_id":100035801,"comment_content":"增加机器咱就不想了，主要从降低单次访问时间来入手。<br>1. 代码层面<br>     连接池；多线程；<br>2. 系统设计层面<br>     读多-加缓存，写多-加MQ<br>3. 数据库优化层面<br>     sql优化；索引优化；分库分表；读写分离<br><br>大概只想到这么多吧，还是得从数据出发，看有没有必要优化","like_count":0},{"had_liked":false,"id":332120,"user_name":"绛府邀","can_delete":false,"product_type":"c1","uid":2897079,"ip_address":"","ucode":"FA228D8A6D56BE","user_header":"","comment_is_top":false,"comment_ctime":1643028203,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1643028203","product_id":100035801,"comment_content":"先试着理解，然后在实践中恍然大悟。","like_count":0},{"had_liked":false,"id":324504,"user_name":"喜世","can_delete":false,"product_type":"c1","uid":1281431,"ip_address":"","ucode":"95C25A01D6298D","user_header":"https://static001.geekbang.org/account/avatar/00/13/8d/97/1f3948be.jpg","comment_is_top":false,"comment_ctime":1638460670,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1638460670","product_id":100035801,"comment_content":"请问提高系统的处理核心数，是指增加CPU核心吗","like_count":0},{"had_liked":false,"id":312305,"user_name":"RANGER","can_delete":false,"product_type":"c1","uid":1186517,"ip_address":"","ucode":"C712798780CCA0","user_header":"https://static001.geekbang.org/account/avatar/00/12/1a/d5/b18cc2fc.jpg","comment_is_top":false,"comment_ctime":1631723370,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1631723370","product_id":100035801,"comment_content":"能发对于优化具体展开讲讲，给些实际案例？","like_count":0},{"had_liked":false,"id":311827,"user_name":"亚林","can_delete":false,"product_type":"c1","uid":1018972,"ip_address":"","ucode":"4A5A6D24314B79","user_header":"https://static001.geekbang.org/account/avatar/00/0f/8c/5c/3f164f66.jpg","comment_is_top":false,"comment_ctime":1631495924,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1631495924","product_id":100035801,"comment_content":"阿姆达尔定律，性能测试拐点模型；平均值，最大值，分位值，三个性能度量指标不同特点。学到了","like_count":0},{"had_liked":false,"id":311823,"user_name":"亚林","can_delete":false,"product_type":"c1","uid":1018972,"ip_address":"","ucode":"4A5A6D24314B79","user_header":"https://static001.geekbang.org/account/avatar/00/0f/8c/5c/3f164f66.jpg","comment_is_top":false,"comment_ctime":1631495059,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1631495059","product_id":100035801,"comment_content":"成体系的理论基础还是很重要的","like_count":0},{"had_liked":false,"id":308098,"user_name":"小写丶H","can_delete":false,"product_type":"c1","uid":1721694,"ip_address":"","ucode":"30DF5C21E23425","user_header":"","comment_is_top":false,"comment_ctime":1629388277,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1629388277","product_id":100035801,"comment_content":"怎么衡量系统的并发数？","like_count":0},{"had_liked":false,"id":305734,"user_name":"钟小强","can_delete":false,"product_type":"c1","uid":1433570,"ip_address":"","ucode":"012B705562FDE9","user_header":"https://static001.geekbang.org/account/avatar/00/15/df/e2/c6d9cb4c.jpg","comment_is_top":false,"comment_ctime":1628139489,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1628139489","product_id":100035801,"comment_content":"三高：高并发，高性能，高可用。<br>设计高并发系统的三要素：高性能，高可用，可扩展。<br>性能优化原则：<br>1.问题导向<br>2.二八原则。20%的精力解决80%的问题<br>3.数据支撑<br>4.持续<br>性能度量的指标：平均值，最大值，分位值。<br>吞吐量度量并发，响应时间度量流量。这两个指标呈 吞吐量 = 并发进程数 &#47; 响应时间。","like_count":0},{"had_liked":false,"id":295529,"user_name":"小德","can_delete":false,"product_type":"c1","uid":1239693,"ip_address":"","ucode":"F541817F301EE6","user_header":"https://static001.geekbang.org/account/avatar/00/12/ea/8d/2e1b6705.jpg","comment_is_top":false,"comment_ctime":1622462052,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1622462052","product_id":100035801,"comment_content":"假大空，水军请滚","like_count":0},{"had_liked":false,"id":289815,"user_name":"石头","can_delete":false,"product_type":"c1","uid":2586341,"ip_address":"","ucode":"EB3C9A277C7B0C","user_header":"","comment_is_top":false,"comment_ctime":1619187952,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1619187952","product_id":100035801,"comment_content":"嗨，你好。<br>个人认为，1&#47;平均响应时间 x 并发度=吞吐量。<br>比如服务p99是10ms，并不能说我的系统吞吐量是100。并发度取决于整个系统能承受的并发度，也就是同时处理的请求数。这样才能得到真正的吞吐量。<br>所以单独考虑看响应时间也得不到系统的吞吐量，吞吐量最终会取决于系统里最脆弱的一环。比如数据库，redis，或者是网络。这些系统能扛住多少吞吐，又取决于它的实际实现，但是这些系统往往可以拓展，通过压测可以得到它的值，这也是基础组件号称自己能扛住多少吞吐，同时保证多少p99的数据来源。","like_count":0},{"had_liked":false,"id":279949,"user_name":"废材姑娘","can_delete":false,"product_type":"c1","uid":1047537,"ip_address":"","ucode":"6AFB48B2A4939A","user_header":"https://static001.geekbang.org/account/avatar/00/0f/fb/f1/a2cde35e.jpg","comment_is_top":false,"comment_ctime":1614011082,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1614011082","product_id":100035801,"comment_content":"我们在压测时，只提出要求TPS达到多少多少，这个是如何衡量系统性能的呢？不关注响应时间、也不管并发数量","like_count":0},{"had_liked":false,"id":271954,"user_name":"隼","can_delete":false,"product_type":"c1","uid":1090566,"ip_address":"","ucode":"0D6C905E3CC339","user_header":"https://static001.geekbang.org/account/avatar/00/10/a4/06/f2ad8d79.jpg","comment_is_top":false,"comment_ctime":1609894379,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1609894379","product_id":100035801,"comment_content":"性能指标要跟并发量一起讲吧，2w并发99.99%响应20ms和200w并发99.99%响应20ms不一样","like_count":0},{"had_liked":false,"id":270952,"user_name":"大鱼","can_delete":false,"product_type":"c1","uid":1352665,"ip_address":"","ucode":"1418EE18C4BDD4","user_header":"","comment_is_top":false,"comment_ctime":1609328125,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1609328125","product_id":100035801,"comment_content":"实际中工作用的最多的：<br><br>1.  异步<br>2. 多进程<br>3. 缓存","like_count":0},{"had_liked":false,"id":251294,"user_name":"aoe","can_delete":false,"product_type":"c1","uid":1121758,"ip_address":"","ucode":"1C6201EDB4E954","user_header":"https://static001.geekbang.org/account/avatar/00/11/1d/de/62bfa83f.jpg","comment_is_top":false,"comment_ctime":1601452438,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1601452438","product_id":100035801,"comment_content":"学到了拐点区，专业","like_count":0},{"had_liked":false,"id":250725,"user_name":"Eve","can_delete":false,"product_type":"c1","uid":2055298,"ip_address":"","ucode":"37047AA1DFE74E","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/PiajxSqBRaEJCRVKYChlD0vcbSUOFbSvfGLYBHZJEdbIulkm9oPjn3UZrqdxu0q6cdJDDUQgwicpweEIlmuZRbicw/132","comment_is_top":false,"comment_ctime":1601202633,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1601202633","product_id":100035801,"comment_content":"对于分位值的理解：90分位表示90%的数据都小于等于这个值，请问老师这样理解是否正确？","like_count":0},{"had_liked":false,"id":239442,"user_name":"冰","can_delete":false,"product_type":"c1","uid":2104541,"ip_address":"","ucode":"685BB45108D2DB","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTI7paIUwnxWN99xhC2omNeAIbKY0FhYX3ibAh85FZqQphlr97UewO51FyqeIjSg31dZ6p7S8tgKk5Q/132","comment_is_top":false,"comment_ctime":1596532693,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1596532693","product_id":100035801,"comment_content":"作者您好，我想问一下是进程抢先cpu的核心还是线程，如果我是32核的机器，我得部署32个进程才能把cpu的性能发挥到最大吗？还是说我只部署一个进程。进程内的线程可以随机抢占这32个核心呢？","like_count":0},{"had_liked":false,"id":202375,"user_name":"王先森","can_delete":false,"product_type":"c1","uid":1022267,"ip_address":"","ucode":"1AF1A395107479","user_header":"https://static001.geekbang.org/account/avatar/00/0f/99/3b/791d0f5e.jpg","comment_is_top":false,"comment_ctime":1585979502,"is_pvip":false,"replies":[{"id":"75833","content":"是协议比较通用简单","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1586088451,"ip_address":"","comment_id":202375,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1585979502","product_id":100035801,"comment_content":"老师问个问题，我们公司之前是用rpc方式调用其他端接口，现在全部迁移为http方式，网上查到的全部是说http调式简单，rpc定位问题难，请问能简单说下为啥么，业务语言是php","like_count":0,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":490572,"discussion_content":"是协议比较通用简单","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1586088451,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":201302,"user_name":"callmebaby","can_delete":false,"product_type":"c1","uid":1222959,"ip_address":"","ucode":"E4B9817F7F221A","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLAqN8yGhXKdUS9nLhEiapfesLdjEdBDJZhClibxOicYCpAeic92oIFYQnicywAF5lPROSIia6HWSrrF8pA/132","comment_is_top":false,"comment_ctime":1585747555,"is_pvip":false,"replies":[{"id":"75827","content":"👍","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1586087654,"ip_address":"","comment_id":201302,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1585747555","product_id":100035801,"comment_content":"目前项目上mysql 优化总结，查询慢日志、查看慢语句是否有索引，在不分表分库的情况下，可以先用分区，然后加内存，根据业务数据滚动存储。用中间件分库分表增加了很多复杂性，可能先考虑把不太重要的表拆库","like_count":0,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":490294,"discussion_content":"👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1586087654,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":190808,"user_name":"lofaith","can_delete":false,"product_type":"c1","uid":1322553,"ip_address":"","ucode":"5DF6922BBF1AD5","user_header":"https://static001.geekbang.org/account/avatar/00/14/2e/39/7682b49e.jpg","comment_is_top":false,"comment_ctime":1584694653,"is_pvip":false,"replies":[{"id":"73902","content":"👍","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1585020116,"ip_address":"","comment_id":190808,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1584694653","product_id":100035801,"comment_content":"高并发，高性能，高可用，高扩展<br>高并发设计原则：<br>有数据支撑，有问题导向，要循序渐进。<br>性能度量指标：<br>200ms最好，1s也可以接受<br>高并发优化方法：<br>1.提升核心数，相当于scale-out<br>要注意压力测试，经过拐点之后反而糟糕<br>2.减少单次任务响应时间<br>分为io密集型和cpu密集型，有不同的方法","like_count":0,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":488058,"discussion_content":"👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585020116,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":185582,"user_name":"周曙光爱学习","can_delete":false,"product_type":"c1","uid":1022920,"ip_address":"","ucode":"98EAB6EBAB34B6","user_header":"https://static001.geekbang.org/account/avatar/00/0f/9b/c8/665100a3.jpg","comment_is_top":false,"comment_ctime":1583637780,"is_pvip":false,"replies":[{"id":"72166","content":"是一段时间所有请求响应时间的第90分位的值","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1584011235,"ip_address":"","comment_id":185582,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1583637780","product_id":100035801,"comment_content":"90分位值指的是每次采样处于第90位的平均值吗？？","like_count":0,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":486427,"discussion_content":"是一段时间所有请求响应时间的第90分位的值","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584011235,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":171022,"user_name":"teressa","can_delete":false,"product_type":"c1","uid":1666695,"ip_address":"","ucode":"9AA0C6D45CEC1E","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLXQyKrqDG9ATu8ZYDT6iclkAQjcXicSbKEgV3t3c6qOmfO9Hu4vjqWZQyAWenqhVvY153fY4YQA1JQ/132","comment_is_top":false,"comment_ctime":1578823913,"is_pvip":true,"replies":[{"id":"66911","content":"可以看cpu和io的占比","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1579228559,"ip_address":"","comment_id":171022,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1578823913","product_id":100035801,"comment_content":"老师，如果一个后端服务，既有cpu计算（例如计算hash值），又有大量的网络io，如果判断我的系统性能瓶颈到底是cpu还是io呢？","like_count":0,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":481203,"discussion_content":"可以看cpu和io的占比","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579228559,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1607565,"avatar":"https://static001.geekbang.org/account/avatar/00/18/87/8d/7a654f2a.jpg","nickname":"ROOT","note":"","ucode":"3EB41234E12174","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":180035,"discussion_content":"怎么看呢？有啥手段不？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582272785,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":154956,"user_name":"woshicai","can_delete":false,"product_type":"c1","uid":1596907,"ip_address":"","ucode":"B7B990F7D01277","user_header":"https://static001.geekbang.org/account/avatar/00/18/5d/eb/c6a53103.jpg","comment_is_top":false,"comment_ctime":1574604812,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1574604812","product_id":100035801,"comment_content":"coroutine替代thread ；<br>优点：优化内存<br>缺点：增加代码复杂性","like_count":0},{"had_liked":false,"id":151681,"user_name":"fomy","can_delete":false,"product_type":"c1","uid":1125834,"ip_address":"","ucode":"CD87EA03B1F327","user_header":"https://static001.geekbang.org/account/avatar/00/11/2d/ca/02b0e397.jpg","comment_is_top":false,"comment_ctime":1573778878,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573778878","product_id":100035801,"comment_content":"性能优化手段：<br>1.横向扩展。如服务应用采用分布式设计，方便后期横向扩展；数据库使用分库分表；缓存使用集群部署；MQ使用集群等等。<br>2.应用增加缓存，减少数据库的IO查询。<br>3.数据库优化，比如加索引，索引优化。","like_count":0},{"had_liked":false,"id":147218,"user_name":"雷霹雳的爸爸","can_delete":false,"product_type":"c1","uid":1119490,"ip_address":"","ucode":"99BBA6D83DD11F","user_header":"https://static001.geekbang.org/account/avatar/00/11/15/02/66f65388.jpg","comment_is_top":false,"comment_ctime":1572842344,"is_pvip":true,"replies":[{"id":"57041","content":"是的 这个是总纲，后面会有详细介绍","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1572940537,"ip_address":"","comment_id":147218,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1572842344","product_id":100035801,"comment_content":"可能是题目定在“设计”上了，所以看课程目录，关于这期提到的很重要的度量、监控，估计只有维护篇里面有几讲（30，31，32）会集中介绍，略显遗憾了，希望能看到内容的更好组织和能提供充分的参考扩展阅读信息","like_count":0,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":473204,"discussion_content":"是的 这个是总纲，后面会有详细介绍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1572940537,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":144923,"user_name":"旭东(Frank)","can_delete":false,"product_type":"c1","uid":1024486,"ip_address":"","ucode":"176FA629800062","user_header":"https://static001.geekbang.org/account/avatar/00/0f/a1/e6/50da1b2d.jpg","comment_is_top":false,"comment_ctime":1572096396,"is_pvip":false,"replies":[{"id":"55944","content":"高可靠就是高可用","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1572220121,"ip_address":"","comment_id":144923,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1572096396","product_id":100035801,"comment_content":"互联网的三高，为什么没有高可靠，高可靠指定银行才会作为系统目标吗？","like_count":0,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":472167,"discussion_content":"高可靠就是高可用","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1572220121,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":139403,"user_name":"长期规划","can_delete":false,"product_type":"c1","uid":1019332,"ip_address":"","ucode":"5EF65E9115834B","user_header":"https://static001.geekbang.org/account/avatar/00/0f/8d/c4/6f97daea.jpg","comment_is_top":false,"comment_ctime":1570627649,"is_pvip":false,"replies":[{"id":"53778","content":"可以这么说吧","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1570665248,"ip_address":"","comment_id":139403,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1570627649","product_id":100035801,"comment_content":"方法一是增加并行处理器（如多线程，协程，多核，多机器）<br>方法二是降低每次响应时间<br>其实方法一只是方法二的一种解决办法而已，对于方法二，并不总能用方法一解决，比如数据库查询因为没用索引而慢，那这种问题用方法一无能为力。<br>","like_count":0,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":469929,"discussion_content":"可以这么说吧","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1570665248,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":137572,"user_name":"stg609","can_delete":false,"product_type":"c1","uid":1073025,"ip_address":"","ucode":"FB70A75A891BB8","user_header":"https://static001.geekbang.org/account/avatar/00/10/5f/81/1c614f4a.jpg","comment_is_top":false,"comment_ctime":1569799227,"is_pvip":false,"replies":[{"id":"52870","content":"基本的方式就是加分步耗时的日志，使用一些工具来profile，使用一些监控工具来监控依赖资源和组件的性能","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1569807244,"ip_address":"","comment_id":137572,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1569799227","product_id":100035801,"comment_content":"老师，能介绍下当发现性能差（比如吞吐量很低），如何定位性能瓶颈在哪吗？尤其在微服务分布式环境","like_count":0,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":469157,"discussion_content":"基本的方式就是加分步耗时的日志，使用一些工具来profile，使用一些监控工具来监控依赖资源和组件的性能","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1569807244,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":136733,"user_name":"行者","can_delete":false,"product_type":"c1","uid":1063734,"ip_address":"","ucode":"EA31201A7C5AE1","user_header":"https://static001.geekbang.org/account/avatar/00/10/3b/36/2d61e080.jpg","comment_is_top":false,"comment_ctime":1569500751,"is_pvip":false,"replies":[{"id":"52471","content":"是的~","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1569513053,"ip_address":"","comment_id":136733,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1569500751","product_id":100035801,"comment_content":"谢谢老师分享。<br>扩展一个知识点，阿姆达尔定律，简单的理解就是每次优化系统最耗时的部分。<br>应用在工作中，就是当我们要优化系统性能时，找到系统中最耗时的步骤，优化，这样可以最大效能提升服务性能。","like_count":0,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":468779,"discussion_content":"是的~","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1569513053,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":136199,"user_name":"小可","can_delete":false,"product_type":"c1","uid":1006735,"ip_address":"","ucode":"8834AF621FA67D","user_header":"https://static001.geekbang.org/account/avatar/00/0f/5c/8f/551b5624.jpg","comment_is_top":false,"comment_ctime":1569380971,"is_pvip":false,"replies":[{"id":"52282","content":"额，不能分页吗。","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1569422219,"ip_address":"","comment_id":136199,"utype":1}],"discussion_count":4,"race_medal":0,"score":"1569380971","product_id":100035801,"comment_content":"老师好，请教一下，我这边有一个http接口，返回一批id，每个id长度20，数据在千万级，估算有200MB，有什么好的办法进行优化？","like_count":0,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":468503,"discussion_content":"额，不能分页吗。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1569422219,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1123043,"avatar":"https://static001.geekbang.org/account/avatar/00/11/22/e3/510b69f9.jpg","nickname":"benny","note":"","ucode":"E2F30AF0C808D9","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":24235,"discussion_content":"不用http接口 用rpc","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1570065685,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1066508,"avatar":"https://static001.geekbang.org/account/avatar/00/10/46/0c/773ba2f3.jpg","nickname":"下个目标45k","note":"","ucode":"193BA8C3AA9A61","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1123043,"avatar":"https://static001.geekbang.org/account/avatar/00/11/22/e3/510b69f9.jpg","nickname":"benny","note":"","ucode":"E2F30AF0C808D9","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":328568,"discussion_content":"数据量大换个传输协议还是没有解决问题，换个角度来看能不能返回一个文件地址让调用方自己来处理呢？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1606182087,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":24235,"ip_address":""},"score":328568,"extra":""}]},{"author":{"id":1006735,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/5c/8f/551b5624.jpg","nickname":"小可","note":"","ucode":"8834AF621FA67D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":21246,"discussion_content":"除了分页，还有其他办法吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1569458260,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":136158,"user_name":"Fourty Seven","can_delete":false,"product_type":"c1","uid":1323868,"ip_address":"","ucode":"DD213225842F68","user_header":"https://static001.geekbang.org/account/avatar/00/14/33/5c/8c0a372a.jpg","comment_is_top":false,"comment_ctime":1569375046,"is_pvip":false,"replies":[{"id":"52268","content":"也可以是升级机器配置","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1569421359,"ip_address":"","comment_id":136158,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1569375046","product_id":100035801,"comment_content":"1. 提高系统的处理核心数，这个是堆机器吗？","like_count":0,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":468486,"discussion_content":"也可以是升级机器配置","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1569421359,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1012843,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/74/6b/a98162a1.jpg","nickname":"winner_0715","note":"","ucode":"A033A30539181F","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":21272,"discussion_content":"水平扩展是堆机器","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1569461645,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":135982,"user_name":"乾隆","can_delete":false,"product_type":"c1","uid":1202304,"ip_address":"","ucode":"F176751BE51DF3","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/vkicsiaqEiaSOJicY60iaNYibtGvfsjZoricdtJAWGeFANtFcOjpJXFJia5bayLFrwmFf6t2WiaSPnICJKiaMWSHibWXGYI7Q/132","comment_is_top":false,"comment_ctime":1569319837,"is_pvip":false,"replies":[{"id":"52121","content":"后面课程中有提到","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1569330808,"ip_address":"","comment_id":135982,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1569319837","product_id":100035801,"comment_content":"数据体现性能这块，我觉得可以好好讲讲","like_count":0,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":468411,"discussion_content":"后面课程中有提到","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1569330808,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":135878,"user_name":"码力不足","can_delete":false,"product_type":"c1","uid":1631005,"ip_address":"","ucode":"8319956D67F861","user_header":"https://wx.qlogo.cn/mmopen/vi_32/yoTG87qicuhbNacuWFF1MWxeCCA8bzWO9Tfk7CcM9Hl9o8e3PJp4qvXF250Y5gp5ibyR13xIbPia6qcicFv0PQINzA/132","comment_is_top":false,"comment_ctime":1569291829,"is_pvip":false,"replies":[{"id":"52120","content":"是有研究数据说明的，不过元珊瑚橘是100ms，200ms是我的经验值，我觉得是可以适当放宽的","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1569330791,"ip_address":"","comment_id":135878,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1569291829","product_id":100035801,"comment_content":"老师您好，请教一下，响应时间200ms以内用户感觉不到延迟，打到1s之后会有明显的感知，这两个临界值是如何确定？经验值？还是大量数据得到的结果？","like_count":0,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":468366,"discussion_content":"是有研究数据说明的，不过元珊瑚橘是100ms，200ms是我的经验值，我觉得是可以适当放宽的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1569330791,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":135830,"user_name":"不经意间","can_delete":false,"product_type":"c1","uid":1261493,"ip_address":"","ucode":"C39D98697ACB8B","user_header":"https://static001.geekbang.org/account/avatar/00/13/3f/b5/5fe77e16.jpg","comment_is_top":false,"comment_ctime":1569287100,"is_pvip":false,"replies":[{"id":"52085","content":"：）","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1569297393,"ip_address":"","comment_id":135830,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1569287100","product_id":100035801,"comment_content":"感谢普及","like_count":0,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":468351,"discussion_content":"：）","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1569297393,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":135686,"user_name":"亦知码蚁","can_delete":false,"product_type":"c1","uid":1238245,"ip_address":"","ucode":"400344A6E1207F","user_header":"https://static001.geekbang.org/account/avatar/00/12/e4/e5/82132920.jpg","comment_is_top":false,"comment_ctime":1569240776,"is_pvip":false,"replies":[{"id":"52034","content":"吞吐量和响应时间……","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1569242963,"ip_address":"","comment_id":135686,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1569240776","product_id":100035801,"comment_content":"我在上面提到，脱离了并发来谈性能是没有意义的，我们通常使用吞吐量或者同时在线用户数来度量并发和流量，使用吞吐量的情况会更多一些。但是你要知道，这两个指标是呈倒数关系的。<br><br>这两个指标是哪两个？ 吞吐量和在线用户数？","like_count":0,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":468303,"discussion_content":"吞吐量和响应时间……","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1569242963,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":135518,"user_name":"Lugyedo","can_delete":false,"product_type":"c1","uid":1011793,"ip_address":"","ucode":"EB5E456B638E70","user_header":"https://static001.geekbang.org/account/avatar/00/0f/70/51/f1825adb.jpg","comment_is_top":false,"comment_ctime":1569202304,"is_pvip":true,"replies":[{"id":"52026","content":"Cache aside可以解决部分问题，后面有讲到","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1569240034,"ip_address":"","comment_id":135518,"utype":1}],"discussion_count":5,"race_medal":0,"score":"1569202304","product_id":100035801,"comment_content":"我们在分布式系统中用了缓存，有时会发现缓存数据不一致，这种情况有什么比较好的高并发方案呢","like_count":0,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":468227,"discussion_content":"Cache aside可以解决部分问题，后面有讲到","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1569240034,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1437292,"avatar":"https://static001.geekbang.org/account/avatar/00/15/ee/6c/246fa0d1.jpg","nickname":"Mr.差不多","note":"","ucode":"946555FCAE710B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":19867,"discussion_content":"关于数据库与缓存的读写一致方案\n\n先更新数据库、后删除缓存 利用延时双删策略加上任务队列应该就能保证了高并发了\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1569233034,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1011793,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/70/51/f1825adb.jpg","nickname":"Lugyedo","note":"","ucode":"EB5E456B638E70","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1437292,"avatar":"https://static001.geekbang.org/account/avatar/00/15/ee/6c/246fa0d1.jpg","nickname":"Mr.差不多","note":"","ucode":"946555FCAE710B","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":19967,"discussion_content":"数据更新成功后，缓存删除失败怎么办","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1569243964,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":19867,"ip_address":""},"score":19967,"extra":""}]},{"author":{"id":1089131,"avatar":"https://static001.geekbang.org/account/avatar/00/10/9e/6b/3f8b9f9f.jpg","nickname":"if err ≠ nil { }","note":"","ucode":"486CF386650982","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":19840,"discussion_content":"你问的是 缓存与数据库不一致的解决方案？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1569230341,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1011793,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/70/51/f1825adb.jpg","nickname":"Lugyedo","note":"","ucode":"EB5E456B638E70","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1089131,"avatar":"https://static001.geekbang.org/account/avatar/00/10/9e/6b/3f8b9f9f.jpg","nickname":"if err ≠ nil { }","note":"","ucode":"486CF386650982","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":19968,"discussion_content":"是的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1569243971,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":19840,"ip_address":""},"score":19968,"extra":""}]}]}]}