{"id":69859,"title":"03 | 基础篇：经常说的 CPU 上下文切换是什么意思？（上）","content":"<p>你好，我是倪朋飞。</p><p>上一节，我给你讲了要怎么理解平均负载（ Load Average），并用三个案例展示了不同场景下平均负载升高的分析方法。这其中，多个进程竞争 CPU 就是一个经常被我们忽视的问题。</p><p>我想你一定很好奇，进程在竞争 CPU 的时候并没有真正运行，为什么还会导致系统的负载升高呢？看到今天的主题，你应该已经猜到了，CPU 上下文切换就是罪魁祸首。</p><p>我们都知道，Linux 是一个多任务操作系统，它支持远大于 CPU 数量的任务同时运行。当然，这些任务实际上并不是真的在同时运行，而是因为系统在很短的时间内，将 CPU 轮流分配给它们，造成多任务同时运行的错觉。</p><p>而在每个任务运行前，CPU 都需要知道任务从哪里加载、又从哪里开始运行，也就是说，需要系统事先帮它设置好 <strong>CPU 寄存器和程序计数器</strong>（Program Counter，PC）。</p><p>CPU 寄存器，是 CPU 内置的容量小、但速度极快的内存。而程序计数器，则是用来存储 CPU 正在执行的指令位置、或者即将执行的下一条指令位置。它们都是 CPU 在运行任何任务前，必须的依赖环境，因此也被叫做 <strong>CPU 上下文</strong>。</p><p><img src=\"https://static001.geekbang.org/resource/image/98/5f/98ac9df2593a193d6a7f1767cd68eb5f.png?wh=438*345\" alt=\"\"></p><p>知道了什么是 CPU 上下文，我想你也很容易理解 <strong>CPU 上下文切换</strong>。CPU 上下文切换，就是先把前一个任务的 CPU 上下文（也就是 CPU 寄存器和程序计数器）保存起来，然后加载新任务的上下文到这些寄存器和程序计数器，最后再跳转到程序计数器所指的新位置，运行新任务。</p><!-- [[[read_end]]] --><p>而这些保存下来的上下文，会存储在系统内核中，并在任务重新调度执行时再次加载进来。这样就能保证任务原来的状态不受影响，让任务看起来还是连续运行。</p><p>我猜肯定会有人说，CPU 上下文切换无非就是更新了 CPU 寄存器的值嘛，但这些寄存器，本身就是为了快速运行任务而设计的，为什么会影响系统的 CPU 性能呢？</p><p>在回答这个问题前，不知道你有没有想过，操作系统管理的这些“任务”到底是什么呢？</p><p>也许你会说，任务就是进程，或者说任务就是线程。是的，进程和线程正是最常见的任务。但是除此之外，还有没有其他的任务呢？</p><p>不要忘了，硬件通过触发信号，会导致中断处理程序的调用，也是一种常见的任务。</p><p>所以，<span class=\"orange\">根据任务的不同</span>，CPU 的上下文切换就可以分为几个不同的场景，也就是<strong>进程上下文切换</strong>、<strong>线程上下文切换</strong>以及<strong>中断上下文切换</strong>。</p><p>这节课我就带你来看看，怎么理解这几个不同的上下文切换，以及它们为什么会引发 CPU 性能相关问题。</p><h2>进程上下文切换</h2><p>Linux 按照特权等级，把进程的运行空间分为内核空间和用户空间，分别对应着下图中， CPU 特权等级的 Ring 0 和 Ring 3。</p><ul>\n<li>\n<p>内核空间（Ring 0）具有最高权限，可以直接访问所有资源；</p>\n</li>\n<li>\n<p>用户空间（Ring 3）只能访问受限资源，不能直接访问内存等硬件设备，必须通过系统调用陷入到内核中，才能访问这些特权资源。</p>\n</li>\n</ul><p><img src=\"https://static001.geekbang.org/resource/image/4d/a7/4d3f622f272c49132ecb9760310ce1a7.png?wh=321*312\" alt=\"\"></p><p>换个角度看，也就是说，进程既可以在用户空间运行，又可以在内核空间中运行。进程在用户空间运行时，被称为进程的用户态，而陷入内核空间的时候，被称为进程的内核态。</p><p>从用户态到内核态的转变，需要通过<strong>系统调用</strong>来完成。比如，当我们查看文件内容时，就需要多次系统调用来完成：首先调用 open() 打开文件，然后调用 read() 读取文件内容，并调用 write() 将内容写到标准输出，最后再调用 close() 关闭文件。</p><p>那么，系统调用的过程有没有发生 CPU 上下文的切换呢？答案自然是肯定的。</p><p>CPU 寄存器里原来用户态的指令位置，需要先保存起来。接着，为了执行内核态代码，CPU 寄存器需要更新为内核态指令的新位置。最后才是跳转到内核态运行内核任务。</p><p>而系统调用结束后，CPU寄存器需要<strong>恢复</strong>原来保存的用户态，然后再切换到用户空间，继续运行进程。<span class=\"orange\">所以，一次系统调用的过程，其实是发生了两次 CPU 上下文切换。</span></p><p>不过，需要注意的是，系统调用过程中，并不会涉及到虚拟内存等进程用户态的资源，也不会切换进程。这跟我们通常所说的进程上下文切换是不一样的：</p><ul>\n<li>\n<p>进程上下文切换，是指从一个进程切换到另一个进程运行。</p>\n</li>\n<li>\n<p>而系统调用过程中一直是同一个进程在运行。</p>\n</li>\n</ul><p>所以，<strong>系统调用过程通常称为特权模式切换，而不是上下文切换</strong>。但实际上，系统调用过程中，CPU 的上下文切换还是无法避免的。</p><p>那么，进程上下文切换跟系统调用又有什么区别呢？</p><p>首先，你需要知道，进程是由内核来管理和调度的，进程的切换只能发生在内核态。所以，进程的上下文不仅包括了虚拟内存、栈、全局变量等用户空间的资源，还包括了内核堆栈、寄存器等内核空间的状态。</p><p>因此，进程的上下文切换就比系统调用时多了一步：在保存当前进程的内核状态和CPU寄存器之前，需要先把该进程的虚拟内存、栈等保存下来；而加载了下一进程的内核态后，还需要刷新进程的虚拟内存和用户栈。</p><p>如下图所示，保存上下文和恢复上下文的过程并不是“免费”的，需要内核在 CPU 上运行才能完成。</p><p><img src=\"https://static001.geekbang.org/resource/image/39/6b/395666667d77e718da63261be478a96b.png?wh=966*186\" alt=\"\"></p><p>根据<a href=\"https://blog.tsunanet.net/2010/11/how-long-does-it-take-to-make-context.html\"> Tsuna </a>的测试报告，每次上下文切换都需要几十纳秒到数微秒的 CPU 时间。这个时间还是相当可观的，特别是在进程上下文切换次数较多的情况下，很容易导致 CPU 将大量时间耗费在寄存器、内核栈以及虚拟内存等资源的保存和恢复上，进而大大缩短了真正运行进程的时间。这也正是上一节中我们所讲的，导致平均负载升高的一个重要因素。</p><p>另外，我们知道， Linux 通过 TLB（Translation Lookaside Buffer）来管理虚拟内存到物理内存的映射关系。当虚拟内存更新后，TLB 也需要刷新，内存的访问也会随之变慢。特别是在多处理器系统上，缓存是被多个处理器共享的，刷新缓存不仅会影响当前处理器的进程，还会影响共享缓存的其他处理器的进程。</p><p>知道了进程上下文切换潜在的性能问题后，我们再来看，究竟什么时候会切换进程上下文。</p><p>显然，进程切换时才需要切换上下文，换句话说，只有在进程调度的时候，才需要切换上下文。Linux 为每个 CPU 都维护了一个就绪队列，将活跃进程（即正在运行和正在等待CPU的进程）按照优先级和等待 CPU 的时间排序，然后选择最需要 CPU 的进程，也就是优先级最高和等待CPU时间最长的进程来运行。</p><p>那么，进程在什么时候才会被调度到 CPU 上运行呢？</p><p>最容易想到的一个时机，就是进程执行完终止了，它之前使用的CPU会释放出来，这个时候再从就绪队列里，拿一个新的进程过来运行。<span class=\"orange\">其实还有很多其他场景，也会触发进程调度，在这里我给你逐个梳理下</span>。</p><p>其一，为了保证所有进程可以得到公平调度，CPU时间被划分为一段段的时间片，这些时间片再被轮流分配给各个进程。这样，当某个进程的时间片耗尽了，就会被系统挂起，切换到其它正在等待 CPU 的进程运行。</p><p>其二，进程在系统资源不足（比如内存不足）时，要等到资源满足后才可以运行，这个时候进程也会被挂起，并由系统调度其他进程运行。</p><p>其三，当进程通过睡眠函数  sleep 这样的方法将自己主动挂起时，自然也会重新调度。</p><p>其四，当有优先级更高的进程运行时，为了保证高优先级进程的运行，当前进程会被挂起，由高优先级进程来运行。</p><p>最后一个，发生硬件中断时，CPU上的进程会被中断挂起，转而执行内核中的中断服务程序。</p><p>了解这几个场景是非常有必要的，因为一旦出现上下文切换的性能问题，它们就是幕后凶手。</p><h2>线程上下文切换</h2><p>说完了进程的上下文切换，我们再来看看线程相关的问题。</p><p>线程与进程最大的区别在于，<strong>线程是调度的基本单位，而进程则是资源拥有的基本单位</strong>。说白了，所谓内核中的任务调度，实际上的调度对象是线程；而进程只是给线程提供了虚拟内存、全局变量等资源。所以，对于线程和进程，我们可以这么理解：</p><ul>\n<li>\n<p>当进程只有一个线程时，可以认为进程就等于线程。</p>\n</li>\n<li>\n<p>当进程拥有多个线程时，这些线程会共享相同的虚拟内存和全局变量等资源。这些资源在上下文切换时是不需要修改的。</p>\n</li>\n<li>\n<p>另外，线程也有自己的私有数据，比如栈和寄存器等，这些在上下文切换时也是需要保存的。</p>\n</li>\n</ul><p>这么一来，线程的上下文切换其实就可以分为两种情况：</p><p>第一种， 前后两个线程属于不同进程。此时，因为资源不共享，所以切换过程就跟进程上下文切换是一样。</p><p>第二种，前后两个线程属于同一个进程。此时，因为虚拟内存是共享的，所以在切换时，虚拟内存这些资源就保持不动，只需要切换线程的私有数据、寄存器等不共享的数据。</p><p>到这里你应该也发现了，虽然同为上下文切换，但同进程内的线程切换，要比多进程间的切换消耗更少的资源，而这，也正是多线程代替多进程的一个优势。</p><h2>中断上下文切换</h2><p>除了前面两种上下文切换，还有一个场景也会切换 CPU 上下文，那就是中断。</p><p>为了快速响应硬件的事件，<strong>中断处理会打断进程的正常调度和执行</strong>，转而调用中断处理程序，响应设备事件。而在打断其他进程时，就需要将进程当前的状态保存下来，这样在中断结束后，进程仍然可以从原来的状态恢复运行。</p><p>跟进程上下文不同，中断上下文切换并不涉及到进程的用户态。所以，即便中断过程打断了一个正处在用户态的进程，也不需要保存和恢复这个进程的虚拟内存、全局变量等用户态资源。中断上下文，其实只包括内核态中断服务程序执行所必需的状态，包括CPU 寄存器、内核堆栈、硬件中断参数等。</p><p><strong>对同一个 CPU 来说，中断处理比进程拥有更高的优先级</strong>，所以中断上下文切换并不会与进程上下文切换同时发生。同样道理，由于中断会打断正常进程的调度和执行，所以大部分中断处理程序都短小精悍，以便尽可能快的执行结束。</p><p>另外，跟进程上下文切换一样，中断上下文切换也需要消耗CPU，切换次数过多也会耗费大量的 CPU，甚至严重降低系统的整体性能。所以，当你发现中断次数过多时，就需要注意去排查它是否会给你的系统带来严重的性能问题。</p><h2>小结</h2><p>总结一下，不管是哪种场景导致的上下文切换，你都应该知道：</p><ol>\n<li>\n<p>CPU 上下文切换，是保证 Linux 系统正常工作的核心功能之一，一般情况下不需要我们特别关注。</p>\n</li>\n<li>\n<p>但过多的上下文切换，会把CPU时间消耗在寄存器、内核栈以及虚拟内存等数据的保存和恢复上，从而缩短进程真正运行的时间，导致系统的整体性能大幅下降。</p>\n</li>\n</ol><p>今天主要为你介绍这几种上下文切换的工作原理，下一节，我将继续案例实战，说说上下文切换问题的分析方法。</p><h2>思考</h2><p>最后，我想邀请你一起来聊聊，你所理解的 CPU 上下文切换。你可以结合今天的内容，总结自己的思路和看法，写下你的学习心得。</p><p>欢迎在留言区和我讨论。</p><p><img src=\"https://static001.geekbang.org/resource/image/56/52/565d66d658ad23b2f4997551db153852.jpg?wh=1110*549\" alt=\"\"></p>","comments":[{"had_liked":false,"id":43406,"user_name":"D白菜","can_delete":false,"product_type":"c1","uid":1304391,"ip_address":"","ucode":"8DC343172AB781","user_header":"https://static001.geekbang.org/account/avatar/00/13/e7/47/d0715205.jpg","comment_is_top":false,"comment_ctime":1543223388,"is_pvip":false,"replies":[{"id":"15547","content":"👍课代表来了<br><br>（1）系统调用属于同进程内的CPU上下文切换；<br>（2）分别是CPU用来存储指令和下一条要执行指令的寄存器","user_name":"作者回复","comment_id":43406,"uid":"1001282","ip_address":"","utype":1,"ctime":1543240518,"user_name_real":"倪朋飞"}],"discussion_count":8,"race_medal":0,"score":"860536682588","product_id":100020901,"comment_content":"今天的课抽象的东西很多，还需要时间理解消化。对学习做了个简单的总结，初学者有何很多地方理解不对，请老师和童鞋们多多指正。<br>1、多任务竞争CPU，cpu变换任务的时候进行CPU上下文切换(context switch)。CPU执行任务有4种方式：进程、线程、或者硬件通过触发信号导致中断的调用。<br>2、当切换任务的时候，需要记录任务当前的状态和获取下一任务的信息和地址(指针)，这就是上下文的内容。因此，上下文是指某一时间点CPU寄存器(CPU register)和程序计数器(PC)的内容, 广义上还包括内存中进程的虚拟地址映射信息.<br>3、上下文切换的过程：<br>      (1)记录当前任务的上下文(即寄存器和计算器等所有的状态)；<br>      (2)找到新任务的上下文并加载；<br>      (3)切换到新任务的程序计算器位置，恢复其任务。<br>4、根据任务的执行形式，相应的下上文切换，有进程上下文切换、线程上下文切换、以及中断上下文切换三类。<br>5、进程和线程的区别：<br>进程是资源分配和执行的基本单位；线程是任务调度和运行的基本单位。线程没有资源，进程给指针提供虚拟内存、栈、变量等共享资源，而线程可以共享进程的资源。<br>6、进程上下文切换：是指从一个进程切换到另一个进程。<br>(1)进程运行态为内核运行态和进程运行态。内核空间态资源包括内核的堆栈、寄存器等；用户空间态资源包括虚拟内存、栈、变量、正文、数据等<br>(2)系统调用(软中断)在内核态完成的，需要进行2次CPU上下文切换(用户空间--&gt;内核空间--&gt;用户空间)，不涉及用户态资源，也不会切换进程。<br>(3)进程是由内核来管理和调度的，进程的切换只能发生在内核态。所以，进程的上下文不仅包括了用户空间的资源，也包括内核空间资源。<br>(4)进程的上下文切换过程：<br>   (a)接收到切换信号，挂起进程，记录当前进程的虚拟内存、栈等资源存储;<br>   (b)将这个进程在 CPU 中的上下文状态存储于起来;<br>   (c)然后在内存中检索下一个进程的上下文;<br>   (d)并将其加载到 CPU的寄存器中恢复;<br>   (3)还需要刷新进程的虚拟内存和用户栈;<br>   (f)最后跳转到程序计数器所指向的位置（即跳转到进程被中断时的代码行），以恢复该进程。<br>(5)、下列将会触发进程上下文切换的场景：<br>  (a)、根据调度策略，将CPU时间划片为对应的时间片，当时间片耗尽，当前进程必须挂起。<br>  (b)、资源不足的，在获取到足够资源之前进程挂起。<br>  (c)、进程sleep挂起进程。<br>  (d)、高优先级进程导致当前进度挂起<br>  (e)、硬件中断，导致当前进程挂起<br>7、线程上下文切换：<br>(1)、不通进程之间的线程上下文切换，其过程和进程上下文切换大致相同。<br>(2)、进程内部的线程进上下文切换。不需要切换进程的用户资源，只需要切换线程私有的数据和寄存器等。这会比进程上下文进程切换消耗的资源少，所以多线程相比多进程的优势。<br>8、中断上下文切换<br>快速响应硬件的事件，中断处理会打断进程的正常调度和执行。同一CPU内，硬件中断优先级高于进程。切换过程类似于系统调用的时候，不涉及到用户运行态资源。但大量的中断上下文切换同样可能引发性能问题。<br><br>有些疑惑，想请教老师，<br>(1)从用户态和内核态之间的转变过程通过系统调用，那么系统调用属于一种上下文切换吗？如果是上下文切换，属于哪一类上下文切换呢，和进程上下文切换的关系是什么？<br>(2)指令寄存器和程序计算器，这两个东东比较模糊。<br>","like_count":200,"discussions":[{"author":{"id":1128717,"avatar":"https://static001.geekbang.org/account/avatar/00/11/39/0d/8c94305d.jpg","nickname":"刀仔","note":"","ucode":"708F9C0C7312BE","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":742,"discussion_content":"程序计数器更准确的说是存储下一条指令的地址的寄存器吧","likes_number":10,"is_delete":false,"is_hidden":false,"ctime":1562032199,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1359045,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIrj8pKz1TFapSzQdajhUaDyVO5aOPPztAYQbnFXBQz1uaBezEVv8YicuiauVgq25nXeVKJuiaK4XuEQ/132","nickname":"Libra1023","note":"","ucode":"FBC7E14FDF660D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1128717,"avatar":"https://static001.geekbang.org/account/avatar/00/11/39/0d/8c94305d.jpg","nickname":"刀仔","note":"","ucode":"708F9C0C7312BE","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":537240,"discussion_content":"刀兄","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1639010917,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":742,"ip_address":""},"score":537240,"extra":""}]},{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":430375,"discussion_content":"👍课代表来了\n\n（1）系统调用属于同进程内的CPU上下文切换；\n（2）分别是CPU用来存储指令和下一条要执行指令的寄存器","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1543240518,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":1,"child_discussions":[{"author":{"id":2535283,"avatar":"https://static001.geekbang.org/account/avatar/00/26/af/73/6bc60f7a.jpg","nickname":"爱丽包°","note":"","ucode":"125325E82EE6D2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":563015,"discussion_content":"老师，我觉得这个系统调用更像中断上下文切换，系统调用算软中断吧，比如进程这时候需要使用系统资源就转入到系统调用程序，内核执行完成之后再返回用户态，这里系统调用作为进程的一个环节由内核代理执行，不知道我理解的对不对","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1649925250,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":430375,"ip_address":""},"score":563015,"extra":""}]},{"author":{"id":1542225,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epgicWspzcNEVutVJDzjz02fLWAY9bGaCQ5dZ9MtpibUKibiaUcQzd33283e50uQk4JHS1c91J16N1Licw/132","nickname":"yangkun0824","note":"","ucode":"FD5751DE5F2CCF","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":880,"discussion_content":"建议学习下计算机组成这么课程，你就能明白CPU寄存器和程序计数器的作用","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1562135730,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2041073,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eqoZBeUmZFEJWO9BETIVkRJZTpFiag5BIxpVSIkZe1hH1Rkq1rEXLMcevf7s5IIwHWia9sp7w6WNEWg/132","nickname":"Geek_a65f6c","note":"","ucode":"03FC094154E566","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":298216,"discussion_content":"课代表迅速而果断","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1597220640,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1274464,"avatar":"https://static001.geekbang.org/account/avatar/00/13/72/60/288023be.jpg","nickname":"YU","note":"","ucode":"4EE45D6FC2862F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":233699,"discussion_content":"程序计数器算是一个抽象的概念，比如在x86 中通过EIP:IP","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1586939970,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1683130,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLWIUF31dicT1YBTxWNX0uvbMxl15UwdlwFicGhNo0DsQ7CbM6k16EQxK7bwSMcicLGMdYto4jGPTvrg/132","nickname":"乾坤瞬间","note":"","ucode":"15BDCF29CBF8EB","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":57339,"discussion_content":"课代表你好","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574598823,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":79579,"user_name":"小花","can_delete":false,"product_type":"c1","uid":1401483,"ip_address":"","ucode":"BFF0A1A59FD35D","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/umxqic2CHGySYhT47Rz03ePCloIZ7X21dCLZMVo82m2gjhJdJVqYt3AOdZUXg1roTNSRibkj2g5eia76cbFdxjliag/132","comment_is_top":false,"comment_ctime":1553508962,"is_pvip":false,"replies":[{"id":"29033","content":"赞，太形象了","user_name":"作者回复","comment_id":79579,"uid":"1001282","ip_address":"","utype":1,"ctime":1553524972,"user_name_real":"倪朋飞"}],"discussion_count":4,"race_medal":0,"score":"400985467490","product_id":100020901,"comment_content":"进程切换我想到了很多年前在银行柜台办理业务的情形。<br>1：银行分配各个窗口给来办理业务的人<br>2：如果只有1个窗口开放（系统资源不足），大部分都得等<br>3：如果正在办理业务的突然说自己不办了（sleep）,那他就去旁边再想想（等）<br>4：如果突然来了个VIP客户，可以强行插队<br>5：如果突然断电了（中断），都得等。。","like_count":93,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":444546,"discussion_content":"赞，太形象了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1553524972,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1340730,"avatar":"https://static001.geekbang.org/account/avatar/00/14/75/3a/a7596c06.jpg","nickname":"大大","note":"","ucode":"3A3DC9AC382651","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":299949,"discussion_content":"这不是刘超大佬趣谈操作系统么？怎么变成你的了","likes_number":5,"is_delete":false,"is_hidden":false,"ctime":1597886925,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2079262,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/ba/1e/aa10f942.jpg","nickname":"蓝冰白夜","note":"","ucode":"20D56A17ED3FEE","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":293509,"discussion_content":"2、对应文章里的意思，应该是正在办理业务发现自己材料没带齐（其他资源不足），先去旁边等。","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1595561600,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1971295,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/14/5f/6a2af829.jpg","nickname":"悟明","note":"","ucode":"082FB4AAC5B69C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":240647,"discussion_content":"哈哈。还涉及到进程抢占。很形象。👍🏻","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1587380843,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":43426,"user_name":"龙猫","can_delete":false,"product_type":"c1","uid":1228191,"ip_address":"","ucode":"F0FC59632BC6F6","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJB6kaR6vXGP95RvKy6GnmT33EEAkoPJrUCENE0ankWfKicm6QMbfw6yiadNJlIPZEIlPYgIm8mYEwg/132","comment_is_top":false,"comment_ctime":1543225532,"is_pvip":false,"discussion_count":5,"race_medal":0,"score":"216291590332","product_id":100020901,"comment_content":"怎么知道cpu是耗费在上下文切换呢？","like_count":50,"discussions":[{"author":{"id":1711975,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/1f/67/d8c69191.jpg","nickname":"谢艺华","note":"","ucode":"08A50F4D66ECCA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":56625,"discussion_content":"是不是可以对比用户态和内核态使用的CPU 资源，剩下的就是上下文切换的消耗","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1574504204,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":2110718,"avatar":"https://static001.geekbang.org/account/avatar/00/20/34/fe/e5429b02.jpg","nickname":"glimmer","note":"","ucode":"48A16C52FB4C45","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1711975,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/1f/67/d8c69191.jpg","nickname":"谢艺华","note":"","ucode":"08A50F4D66ECCA","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":373185,"discussion_content":"不能这么想吧，上下文切换也是在内核态中实现的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1620644401,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":56625,"ip_address":""},"score":373185,"extra":""}]},{"author":{"id":1971295,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/14/5f/6a2af829.jpg","nickname":"悟明","note":"","ucode":"082FB4AAC5B69C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":240644,"discussion_content":"我的理解是耗费在进程上下文切换，其实这个时间是少的可怜的，对于实际的CPU占用率几乎可以忽略。那么为何频繁的上下文切换会导致性能问题呢，可能是由于进程数量太多了，或者中断太多，从而引起性能问题，因为这样必然导致进程调度的延迟性。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1587380590,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":3065276,"avatar":"","nickname":"Geek_b3b8da","note":"","ucode":"5461CD95B1D764","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":590884,"discussion_content":"top可以看到","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1666149710,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"浙江"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1793361,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/5d/51/87fc7ef9.jpg","nickname":"Issac慜","note":"","ucode":"690B69FC1C0BB2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":415173,"discussion_content":"是不是需要结合其他指标，对比着来看。如果多个指标都增加的很快。多半就只能看程序的作用了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1637020950,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":53607,"user_name":"Q","can_delete":false,"product_type":"c1","uid":1047423,"ip_address":"","ucode":"785546C617D3DF","user_header":"https://static001.geekbang.org/account/avatar/00/0f/fb/7f/746a6f5e.jpg","comment_is_top":false,"comment_ctime":1545700455,"is_pvip":false,"replies":[{"id":"19510","content":"👍","user_name":"作者回复","comment_id":53607,"uid":"1001282","ip_address":"","utype":1,"ctime":1545730269,"user_name_real":"倪朋飞"}],"discussion_count":3,"race_medal":0,"score":"173344392295","product_id":100020901,"comment_content":"学习总结:<br><br>* 上下文切换是什么？<br>上下文切换是对任务当前运行状态的暂存和恢复<br>* CPU为什么要进行上下文切换？<br>当多个进程竞争CPU的时候，CPU为了保证每个进程能公平被调度运行，采取了处理任务时间分片的机制，轮流处理多个进程，由于CPU处理速度非常快，在人类的感官上认为是并行处理，实际是&quot;伪&quot;并行，同一时间只有一个任务在运行处理。<br>* 上下文切换主要消耗什么资源，为什么说上下文切换次数过多不可取？<br>根据 Tsuna 的测试报告，每次上下文切换都需要几十纳秒到到微秒的CPU时间，这些时间对CPU来说，就好比人类对1分钟或10分钟的感觉概念。在分秒必争的计算机处理环境下，浪费太多时间在切换上，只能会降低真正处理任务的时间，表象上导致延时、排队、卡顿现象发生。<br>* 上下文切换分几种？<br>进程上下文切换、线程上下文切换、中断上下文切换<br>* 什么情况下会触发上下文切换？<br>系统调用、进程状态转换(运行、就绪、阻塞)、时间片耗尽、系统资源不足、sleep、优先级调度、硬件中断等<br>* 线程上下文切换和进程上下文切换的最大区别？<br>线程是调度的基本单位，进程是资源拥有的基本单位，同属一个进程的线程，发生上下文切换，只切换线程的私有数据，共享数据不变，因此速度非常快。<br>* 中断上下文切换，如何理解？<br>为了快速响应硬件的事件(如USB接入)，中断处理会打断进程的正常调度和执行，转而调用中断处理程序，响应设备事件。而打断其它进程执行时，需要进行上下文切换。中断事件过多，会无谓的消耗CPU资源，导致进程处理时间延长。<br>* 有哪些减少上下文切换的技术用例？<br>数据库连接池（复用连接）、合理设置应用的最大进程，线程数、直接内存访问DMA、零拷贝技术","like_count":40,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":434203,"discussion_content":"👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1545730269,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1170843,"avatar":"https://static001.geekbang.org/account/avatar/00/11/dd/9b/0bc44a78.jpg","nickname":"yyl","note":"","ucode":"1741DACDFCA9AF","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":295552,"discussion_content":"我也是这么想的，通过引入问题来阅读文章，哈哈","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1596246607,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1402505,"avatar":"https://static001.geekbang.org/account/avatar/00/15/66/89/af017dba.jpg","nickname":"鱼君","note":"","ucode":"40F1A109B9ECE0","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":42818,"discussion_content":"谢谢分析，太棒了；","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1572786719,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":43810,"user_name":"炀","can_delete":false,"product_type":"c1","uid":1104339,"ip_address":"","ucode":"85046B416F6CF1","user_header":"https://static001.geekbang.org/account/avatar/00/10/d9/d3/63742921.jpg","comment_is_top":false,"comment_ctime":1543300727,"is_pvip":false,"replies":[{"id":"15855","content":"😊很棒的比喻","user_name":"作者回复","comment_id":43810,"uid":"1001282","ip_address":"","utype":1,"ctime":1543412364,"user_name_real":"倪朋飞"}],"discussion_count":1,"race_medal":0,"score":"126097352311","product_id":100020901,"comment_content":"cpu上下文切换就好比一个人有好多朋友要拜访，有的朋友房子大（进程），进进出出里三层外三层，有的朋友住帐篷（线程），就拉开帐篷聊聊天，有的朋友就隔着窗户说两句话打个照面路过（中断）","like_count":30,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":430507,"discussion_content":"😊很棒的比喻","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543412364,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":43209,"user_name":"石维康","can_delete":false,"product_type":"c1","uid":1067564,"ip_address":"","ucode":"E39ED8416B2C01","user_header":"https://static001.geekbang.org/account/avatar/00/10/4a/2c/f8451d77.jpg","comment_is_top":false,"comment_ctime":1543196074,"is_pvip":false,"discussion_count":3,"race_medal":0,"score":"91737509290","product_id":100020901,"comment_content":"课程内容中说&quot;用户空间（Ring 3）只能访问受限资源，不能直接访问内存等..&quot;，其实在用户态，还是可以直接访问属于用户态的内存的吧","like_count":21,"discussions":[{"author":{"id":1790420,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/51/d4/80b9c97a.jpg","nickname":"MW","note":"","ucode":"8EEAF9A258ABE4","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":94872,"discussion_content":"可以访问某些内存，不能访问任意内存。","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1576996677,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1633024,"avatar":"https://static001.geekbang.org/account/avatar/00/18/eb/00/6e06a3d9.jpg","nickname":"Jason","note":"","ucode":"995C563D154A65","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":387415,"discussion_content":"用户态确实可以访问用户态的某些内存，但是无法访问内核态的内存。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1628156307,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2288440,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/bnE6A7diaOmMbOSYnu11Be9WibOSdSCs1ibRpiavUJ0q2vE1XGoicDLufZziato07AgNd43B8LetSOIOCibw0uO9zrqJw/132","nickname":"Geek_340f72","note":"","ucode":"04143CCC5430A5","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":352072,"discussion_content":"内核态的高段位可以访问任意内存地址","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1614590665,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":43109,"user_name":"MoFanDon","can_delete":false,"product_type":"c1","uid":1053363,"ip_address":"","ucode":"F8A9D26EA0171D","user_header":"https://static001.geekbang.org/account/avatar/00/10/12/b3/9e8f4b4f.jpg","comment_is_top":false,"comment_ctime":1543165246,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"78852576574","product_id":100020901,"comment_content":"以前的确是没怎么注意 CPU上下文切换，进程上下文切换 是不同的。学习了。","like_count":18,"discussions":[{"author":{"id":2288440,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/bnE6A7diaOmMbOSYnu11Be9WibOSdSCs1ibRpiavUJ0q2vE1XGoicDLufZziato07AgNd43B8LetSOIOCibw0uO9zrqJw/132","nickname":"Geek_340f72","note":"","ucode":"04143CCC5430A5","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":352062,"discussion_content":"CPU上下文切换是统称，上下文包含了，系统调用，进程切换，线程切换，中断切换","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1614586700,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1971295,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/14/5f/6a2af829.jpg","nickname":"悟明","note":"","ucode":"082FB4AAC5B69C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":240650,"discussion_content":"CPU上下文切换是统称吧，上下文切换只有进程和中断上下文切换这两种?","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1587380915,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":44808,"user_name":"地心引力","can_delete":false,"product_type":"c1","uid":1332297,"ip_address":"","ucode":"B5BCF5EF0C73C2","user_header":"https://static001.geekbang.org/account/avatar/00/14/54/49/ede4ab2f.jpg","comment_is_top":false,"comment_ctime":1543495585,"is_pvip":false,"replies":[{"id":"16013","content":"不是不保存进程上下文，而是不需要刷新虚拟内存这些用户空间的数据，但具体到内核中的状态肯定还是要刷新的","user_name":"作者回复","comment_id":44808,"uid":"1001282","ip_address":"","utype":1,"ctime":1543538137,"user_name_real":"倪朋飞"}],"discussion_count":2,"race_medal":0,"score":"57378070433","product_id":100020901,"comment_content":"进程调用系统调用，从用户态切换到内核态需要保存进程的上下文，而中断发生时，中断处理程序也是在内核态运行，但此时为什么就不需要保存进程的上下文呢，这种差别的本质原因是什么，望老师指教","like_count":13,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":430839,"discussion_content":"不是不保存进程上下文，而是不需要刷新虚拟内存这些用户空间的数据，但具体到内核中的状态肯定还是要刷新的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543538137,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1962353,"avatar":"https://static001.geekbang.org/account/avatar/00/1d/f1/71/fe740383.jpg","nickname":"吴昌顺","note":"","ucode":"E3E9A3E6BB4CCC","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":374582,"discussion_content":"内核空间是所有进程虚拟内存空间共享的","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1621255650,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":43491,"user_name":"衣申人","can_delete":false,"product_type":"c1","uid":1115777,"ip_address":"","ucode":"887FE9109B97DE","user_header":"https://static001.geekbang.org/account/avatar/00/11/06/81/28418795.jpg","comment_is_top":false,"comment_ctime":1543233363,"is_pvip":false,"discussion_count":8,"race_medal":0,"score":"53082840915","product_id":100020901,"comment_content":"老师您好，有三个问题不是很理解：<br><br>1.系统调用的过程是上下文切换的话，那么函数调用是不是也可以叫上下文切换？<br>2.进程上下文切换，还需要刷新虚拟内存，是什么意思呢？上下文切换应该是把进程在cpu中的状态信息保存到内存，然后读取另一个进程内存中的状态信息到cpu，为什么涉及虚拟内存的刷新？还会影响到TLB？<br>3.CPU时间片是固定大小的吗？如果是，那么如果每个进程都正常获得时间片和到期释放，那么不管进程数量多少，是不是单位时间内的上下文切换次数是一定的？<br><br>盼望老师解答，谢谢。","like_count":12,"discussions":[{"author":{"id":1634222,"avatar":"","nickname":"Geek_685522","note":"","ucode":"8B3635D004787E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":5243,"discussion_content":"问题2，虚拟内存不需要刷新的，TLB是mmu里页表的缓存，刷新是加快映射速度。","likes_number":5,"is_delete":false,"is_hidden":false,"ctime":1566112593,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1805809,"avatar":"","nickname":"ccz 开发(谢不邀)","note":"","ucode":"B8803B050AAC68","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":132466,"discussion_content":"问题1：如果不是系统函数，不用更换上下文，只是对函数的参数、函数内变量进行进栈出栈，把CS的值换成函数入口的地址而已","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1578911179,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":3,"child_discussions":[{"author":{"id":1112955,"avatar":"https://static001.geekbang.org/account/avatar/00/10/fb/7b/2d4b38fb.jpg","nickname":"Jialin","note":"","ucode":"12583269732A75","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1805809,"avatar":"","nickname":"ccz 开发(谢不邀)","note":"","ucode":"B8803B050AAC68","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":197046,"discussion_content":"如果函数调用是类似open、read和write等系统IO函数，则属于同进程内CPU上下文切换，如果是普通函数调用，则属于线程间CPU上下文切换，因为涉及到栈内数据保存，如递归调用。","likes_number":5,"is_delete":false,"is_hidden":false,"ctime":1583400016,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":132466,"ip_address":""},"score":197046,"extra":""},{"author":{"id":1263977,"avatar":"https://static001.geekbang.org/account/avatar/00/13/49/69/c0fcf4e8.jpg","nickname":"def","note":"","ucode":"39BDBEA0560C13","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1112955,"avatar":"https://static001.geekbang.org/account/avatar/00/10/fb/7b/2d4b38fb.jpg","nickname":"Jialin","note":"","ucode":"12583269732A75","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":361748,"discussion_content":"你这说得好像进行普通函数调用一定要切换线程一样...","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1616744305,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":197046,"ip_address":""},"score":361748,"extra":""},{"author":{"id":1263977,"avatar":"https://static001.geekbang.org/account/avatar/00/13/49/69/c0fcf4e8.jpg","nickname":"def","note":"","ucode":"39BDBEA0560C13","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1112955,"avatar":"https://static001.geekbang.org/account/avatar/00/10/fb/7b/2d4b38fb.jpg","nickname":"Jialin","note":"","ucode":"12583269732A75","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":361750,"discussion_content":"如果程序就是以一个主线程来执行呢？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1616744390,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":197046,"ip_address":""},"score":361750,"extra":""}]},{"author":{"id":1239482,"avatar":"https://static001.geekbang.org/account/avatar/00/12/e9/ba/7c6f8514.jpg","nickname":"shadow_","note":"","ucode":"B9BF7E913312B3","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":580466,"discussion_content":"1. 系统调用通过80号中断从用户态进入内核态执行内核代码，所以需要保存用户态上下文。普通函数调用只需要在栈中压入参数，压入返回地址，通过call指令调用开始执行函数代码，若函数有返回值，还会更改上下文eax/rax寄存器。此过程不涉及特权级转移，不需要保存上下文，没有上下文切换一说。\n2. 进程上下文切换，就切换了进程，进程的虚拟地址是独立的，每个进程的页表都不同，进程切换时，需要激活进程页表，需要重新加载CR3寄存器，TLB可以手动更新，或者当CR3重新加载时会清空。\n3. cpu时间片应该不是固定的，应该跟进程优先级有关，优先级越高的分配时间片越多。很多时候并不能“持续”执行，可能需要等待其他资源被阻塞，可能自己让出cpu，可能被中断去执行其他任务，这些都会上下文切换。就算进程“正常”获得和释放时间片，进程越多，单位时间被调度上cpu执行的次数就越少，切换上下文次数也不一样","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1658196063,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1659275,"avatar":"https://static001.geekbang.org/account/avatar/00/19/51/8b/e3b827b7.jpg","nickname":"羿达","note":"","ucode":"48559E9D480C34","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":197156,"discussion_content":"问题3 :时间片的大小是一样的,但是每一个进程分配到的总时间是多少取决于CPU调度算法","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1583410203,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":2903968,"avatar":"","nickname":"Geek_9e1c1a","note":"","ucode":"A79B61F7118DF6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1659275,"avatar":"https://static001.geekbang.org/account/avatar/00/19/51/8b/e3b827b7.jpg","nickname":"羿达","note":"","ucode":"48559E9D480C34","race_medal":0,"user_type":1,"is_pvip":true},"discussion":{"id":576538,"discussion_content":"不对吧，现代的操作系统都有优先级之分的进程，例如像多级反馈队列调度算法，当优先级越高时时间片越短，同时兼顾了长作业和短作业","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1655638269,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":197156,"ip_address":""},"score":576538,"extra":""}]}]},{"had_liked":false,"id":44971,"user_name":"玉剑冰锋","can_delete":false,"product_type":"c1","uid":1214202,"ip_address":"","ucode":"8EA56A71BA5B22","user_header":"https://static001.geekbang.org/account/avatar/00/12/86/fa/4bcd7365.jpg","comment_is_top":false,"comment_ctime":1543536759,"is_pvip":false,"discussion_count":4,"race_medal":0,"score":"40198242423","product_id":100020901,"comment_content":"Ring1和Ring2代表啥意思？","like_count":9,"discussions":[{"author":{"id":1135604,"avatar":"https://static001.geekbang.org/account/avatar/00/11/53/f4/e277325d.jpg","nickname":"bin.chen","note":"","ucode":"5BA49358AB8A1A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":297174,"discussion_content":"对于操作系统操作的权限，目前是4个级别也就是r0 r1 r2 r3 ，我们常用因特尔的只有r0和r3两个操作权限划分 有的硬件层面就支持这个权限级别的划分了\n\n划分权限的原因是保证程序的健壮性(是个人都能操作内核 那岂不是很不安全)\n\nR0是内核态(有自己单独的内存空间) R3是用户态\n\n用户态到内核态的执行实质上就是调用内核提供的函数 大概是200多个 比如我们常见的read() write()等这些函数","likes_number":5,"is_delete":false,"is_hidden":false,"ctime":1596793954,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1037041,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/d2/f1/c071cffa.jpg","nickname":"一只特立独行的猪","note":"","ucode":"421D0A6FE29127","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":254133,"discussion_content":"ring2: 库 ring3：系统调用","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1588297212,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1110470,"avatar":"https://static001.geekbang.org/account/avatar/00/10/f1/c6/6f39a982.jpg","nickname":"Yuhui","note":"","ucode":"811933B016179F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":3171,"discussion_content":"https://en.wikipedia.org/wiki/Protection_ring\nhttps://stackoverflow.com/questions/6710040/cpu-privilege-rings-why-rings-1-and-2-arent-used","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1564252803,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1007575,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/5f/d7/4e036beb.jpg","nickname":"AE","note":"","ucode":"57E32DCEC92245","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":198103,"discussion_content":"运行级别","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1583472596,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":43218,"user_name":"Maxwell","can_delete":false,"product_type":"c1","uid":1086275,"ip_address":"","ucode":"720A00AD472616","user_header":"https://static001.geekbang.org/account/avatar/00/10/93/43/0e84492d.jpg","comment_is_top":false,"comment_ctime":1543197069,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"40197902733","product_id":100020901,"comment_content":"上下文切换多高算高呢？","like_count":9,"discussions":[{"author":{"id":1759325,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/d8/5d/07dfb3b5.jpg","nickname":"杯莫停","note":"","ucode":"4FA1D5CBBEF702","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":300788,"discussion_content":"像Kafka这种高吞吐量的流式系统，每取一次数据都是一次IO，每次都消耗几微秒。你给几微妙乘个亿乘个几亿，我觉得这样就很高了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1598264638,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":43175,"user_name":"sotey","can_delete":false,"product_type":"c1","uid":1221689,"ip_address":"","ucode":"7D3B7E45FC18BA","user_header":"https://static001.geekbang.org/account/avatar/00/12/a4/39/6a5cd1d8.jpg","comment_is_top":false,"comment_ctime":1543194397,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"40197900061","product_id":100020901,"comment_content":"交作业: 老师，在我的理解，CPU上下文是指程序执行的指令和环境变量和内存位置，上下文切换是CPU把当前正在执行的程序上下文从CPU内容(寄存器和计数器)保存到内存，内存的分层结构这里暂不关注(因为我也一知半解)，再把需要执行的程序从内存里保存的上下文加载到CPU内(寄存器)交给CPU执行。进程和线程以及中断其实大致过程是一样的，由于离内核的距离不同，需要切换的内容量不同，因此切换效率是不同的。以上为今天的作业，请老师审阅。","like_count":9},{"had_liked":false,"id":43295,"user_name":"DigDeeply","can_delete":false,"product_type":"c1","uid":1239008,"ip_address":"","ucode":"113F4D755A1FEC","user_header":"https://static001.geekbang.org/account/avatar/00/12/e7/e0/33521e13.jpg","comment_is_top":false,"comment_ctime":1543208025,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"27313011801","product_id":100020901,"comment_content":"请老师帮忙解答一个疑问，在 Kubernetes 编排的这种虚拟化技术中，当给某个容器限定只有一个 CPU 时，容器内的镜像是拥有 24 CPU 的，那么在这种情况下，业务内是当成只存在一个 CPU 使用，还是 拥有 24 个，但每个 CPU 的能力只有一个正常CPU的 1&#47;24 ？不同的使用方式，应该会影响到 CPU 的上下文切换。","like_count":6,"discussions":[{"author":{"id":1458200,"avatar":"https://static001.geekbang.org/account/avatar/00/16/40/18/cc3804e2.jpg","nickname":"沈洪彬","note":"","ucode":"F9911236D0BA1C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":365447,"discussion_content":"可以制定cpu，一般cgroup采用默认也是调度到一个cpu上，不会每个cpu的1.24","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1617802041,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":43123,"user_name":"耿长学","can_delete":false,"product_type":"c1","uid":1309948,"ip_address":"","ucode":"C7A262812854D4","user_header":"https://static001.geekbang.org/account/avatar/00/13/fc/fc/1e235814.jpg","comment_is_top":false,"comment_ctime":1543188114,"is_pvip":false,"discussion_count":3,"race_medal":0,"score":"27312991890","product_id":100020901,"comment_content":"老师，推荐基本性能相关的书籍吧","like_count":6,"discussions":[{"author":{"id":1302228,"avatar":"https://static001.geekbang.org/account/avatar/00/13/de/d4/b83c4185.jpg","nickname":"David.cui","note":"","ucode":"AB46F310403612","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":157228,"discussion_content":"性能之巅","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1580457171,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1183397,"avatar":"https://static001.geekbang.org/account/avatar/00/12/0e/a5/1666123a.jpg","nickname":"Mr  liu","note":"","ucode":"8936037342AD84","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":293463,"discussion_content":"我每次看性能之巅都觉得有收获","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1595551557,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1335362,"avatar":"https://static001.geekbang.org/account/avatar/00/14/60/42/ed42e7cd.jpg","nickname":"simoom","note":"","ucode":"6AE2EED1295F9E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":276135,"discussion_content":"但是说实话性能之巅也料不多","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1590825774,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":102742,"user_name":"设置昵称","can_delete":false,"product_type":"c1","uid":1504058,"ip_address":"","ucode":"1FB53E126036EB","user_header":"https://static001.geekbang.org/account/avatar/00/16/f3/3a/63cf1d0e.jpg","comment_is_top":false,"comment_ctime":1560300910,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"23035137390","product_id":100020901,"comment_content":"本文的核心观点<br><br>任务的调度导致的上下文切换并不是免费的，其需要保存和恢复操作，而这些保存和恢复操作都需要内核在CPU上运行才能够完成，因此我们就需要分析当系统负载高时，上下文切换的贡献有多大？<br><br>下面将对上一句话进行解析<br>1. 任务<br>任务广泛的说是执行某些功能的程序，分为进程，线程，中断程序<br>2.任务的调度（上下文切换）<br>任务的调度主要是执行保存和恢复操作，针对任务的不同，其保存和恢复的对象又略有不同。<br>a) 任务是系统调用<br>当任务是系统调用时，其本质是同一个进程从用户态转换到内核态的过程，因此，该上下文切换仅设计到内核空间的状态，如核堆栈，寄存器。<br>b) 当任务是进程<br>当任务是进程时，其时从一个进程到另一个进程的切换。因此其不仅要保存内核空间状态，还需要把偶才能用户空间的状态，如全局变量，虚拟内存等<br>c) 当任务是线程<br>只需要弄清线程和进程的区别即可<br>线程是调度的基本单位，进程是资源拥有的基本单位。说白了，所谓内核中的任务调度，实际上的调度对象是线程；而进程只是给线程提供了虚拟内存、全局变量等资源。<br>d) 当任务是中断<br>见原文<br><br>----------------------------------------------------------------------------------------------------------<br>上下文的切换是由内核来决定的，主要分为主动切换和被动切换<br>主动切换：进程主动释放CPU资源，主要包含以下几种情况。<br>a) 程序本身，如sleep函数，<br>b) 进程需要等待一些其他资源如io，才能继续进行下去<br>c) ...<br>被动切换：由内核强制切换进程，主要包括以下几种情况。<br>a) 时间片调度时，时间片的时间到了<br>b) 出现了一个中断<br>c) 出来高优先级进程<br>d）...","like_count":5},{"had_liked":false,"id":62937,"user_name":"Juinn","can_delete":false,"product_type":"c1","uid":1334226,"ip_address":"","ucode":"257796850A6CD9","user_header":"https://static001.geekbang.org/account/avatar/00/14/5b/d2/34a8c79c.jpg","comment_is_top":false,"comment_ctime":1548210339,"is_pvip":false,"replies":[{"id":"22339","content":"在Linux中没用到","user_name":"作者回复","comment_id":62937,"uid":"1001282","ip_address":"","utype":1,"ctime":1548252039,"user_name_real":"倪朋飞"}],"discussion_count":2,"race_medal":0,"score":"23023046819","product_id":100020901,"comment_content":"ring1和ring2是干嘛的？","like_count":5,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":437412,"discussion_content":"在Linux中没用到","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1548252039,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1014729,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/7b/c9/75c9002e.jpg","nickname":"Shawn","note":"","ucode":"B95D7B54465DE4","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":301465,"discussion_content":"当前应该只有虚拟化技术用到了这两层。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1598532574,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":43819,"user_name":"王晓冉","can_delete":false,"product_type":"c1","uid":1132893,"ip_address":"","ucode":"9E0BE5EF04121A","user_header":"https://static001.geekbang.org/account/avatar/00/11/49/5d/fd0c908c.jpg","comment_is_top":false,"comment_ctime":1543303888,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"23018140368","product_id":100020901,"comment_content":"内核堆栈能详细介绍下吗？","like_count":5},{"had_liked":false,"id":43642,"user_name":"glinuxer","can_delete":false,"product_type":"c1","uid":1148218,"ip_address":"","ucode":"0FD861CB2AA5A7","user_header":"https://static001.geekbang.org/account/avatar/00/11/85/3a/bb885be4.jpg","comment_is_top":false,"comment_ctime":1543269414,"is_pvip":false,"replies":[{"id":"15860","content":"👍感谢指出","user_name":"作者回复","comment_id":43642,"uid":"1001282","ip_address":"","utype":1,"ctime":1543412732,"user_name_real":"倪朋飞"}],"discussion_count":1,"race_medal":1,"score":"23018105894","product_id":100020901,"comment_content":"“其一，为了保证所有进程可以得到公平调度，CPU 时间被划分为一段段的时间片，这些时间片再被轮流分配给各个进程。”。<br>CFS 调度器没有时间片的概念了，叫做虚拟运行时间。","like_count":5,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":430442,"discussion_content":"👍感谢指出","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543412732,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":43483,"user_name":"Bugsy","can_delete":false,"product_type":"c1","uid":1326227,"ip_address":"","ucode":"3604777745C1B1","user_header":"https://static001.geekbang.org/account/avatar/00/14/3c/93/88febcb3.jpg","comment_is_top":false,"comment_ctime":1543232235,"is_pvip":false,"replies":[{"id":"15540","content":"👍 后续推荐一些书籍","user_name":"作者回复","comment_id":43483,"uid":"1001282","ip_address":"","utype":1,"ctime":1543239779,"user_name_real":"倪朋飞"}],"discussion_count":1,"race_medal":0,"score":"23018068715","product_id":100020901,"comment_content":"因为内核态是cpu的一种特权模式，在这种模式下，内核可以访问系统资源（包括内存、cpu和其他IO设备），所以cpu上下文切换（包括进程上下文切换、线程上下文切换和中断切换）均是发生在内核态。<br>对于应用程序，在最开始都是运行在用户态，当程序中需要调用或者使用系统资源时（包括内存、cpu和其他io设备），由于受到安全性限制，他们只能能通过系统调用来运行部分内核的代码实现对系统资源的调用使用，这个过程就是从用户态陷入内核态的过程，在系统调用过程中一直是在同一个进程中实现。简短总结下，老师有没有其他资料可以推荐学习下。","like_count":5,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":430396,"discussion_content":"👍 后续推荐一些书籍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543239779,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":43339,"user_name":"蔡泳","can_delete":false,"product_type":"c1","uid":1048571,"ip_address":"","ucode":"B7CA97683337B2","user_header":"https://static001.geekbang.org/account/avatar/00/0f/ff/fb/2f99df3e.jpg","comment_is_top":false,"comment_ctime":1543216965,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"23018053445","product_id":100020901,"comment_content":"hello，对您这句话有些许不理解<br>&#39;因此，进程的上下文切换就比系统调用时多了一步：在保存当前进程的内核状态和 CPU 寄存器之前，需要先把该进程的虚拟内存、栈等保存下来；而加载了下一进程的内核态后，还需要刷新进程的虚拟内存和用户栈。&#39;<br>不理解的地方有：<br>1. 进程上下文切换前，需要先保存虚拟内存，具体而言这个&#39;虚拟内存&#39;在内存中的如何表示的？<br>2. 虚拟内存是如何被保存，恢复的？<br><br>我有个人的理解，但不知是否正确，如下：<br>1. 内核维护了一个进程id到虚拟内存的表，通过进程id可以查询当前进程对应的虚拟内存，通过虚拟内存又可以对应到物理内存地址上<br>2. 进程运行过程中会对上面虚拟内存进行修改，比如内存映射新增了某段虚拟内存到物理内存的映射，所以进程切换需要对这些修改进行保存？具体而言怎么保存的不清楚了","like_count":5,"discussions":[{"author":{"id":2126939,"avatar":"https://static001.geekbang.org/account/avatar/00/20/74/5b/6c63e85f.jpg","nickname":"出手无招","note":"","ucode":"9EFBBA6AA16CD3","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":302744,"discussion_content":"同样的疑惑，虚拟内存怎么保护和恢复的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1599018110,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":43159,"user_name":"王崧霁","can_delete":false,"product_type":"c1","uid":1317115,"ip_address":"","ucode":"4F3284634293A8","user_header":"https://static001.geekbang.org/account/avatar/00/14/18/fb/c1334976.jpg","comment_is_top":false,"comment_ctime":1543193807,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"23018030287","product_id":100020901,"comment_content":"进程是资源分配的最小单位，线程是任务调度执行的最小单位，每个进程都有一个主线程，从这个角度说是不是只有线程的上下文切换，而所谓进程上下文切换实则是进程之间获取地址空间等资源的系统调用; 中断分硬中断和软中断，他们的上下文切换又有什么区别哪?","like_count":5,"discussions":[{"author":{"id":3065276,"avatar":"","nickname":"Geek_b3b8da","note":"","ucode":"5461CD95B1D764","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":590887,"discussion_content":"硬中断处理速度快负责把网卡数据拷贝到内存当中，软中断是运行在内核态里面的线程负责后续的执行","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1666150516,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"浙江"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":222660,"user_name":"Sdylan","can_delete":false,"product_type":"c1","uid":1008503,"ip_address":"","ucode":"4589D0D0FA9275","user_header":"https://static001.geekbang.org/account/avatar/00/0f/63/77/423345ab.jpg","comment_is_top":false,"comment_ctime":1590882897,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"18770752081","product_id":100020901,"comment_content":"跟进程上下文不同，中断上下文切换并不涉及到进程的用户态。所以，即便中断过程打断了一个正处在用户态的进程，也不需要保存和恢复这个进程的虚拟内存、全局变量等用户态资源。<br>———————-<br>这段话不理解呀，既然中断过来，处理完中断。系统不保存之前的运行的进程或线程上下文，如何恢复到中断前的状态","like_count":4,"discussions":[{"author":{"id":1107484,"avatar":"https://static001.geekbang.org/account/avatar/00/10/e6/1c/9d3744ee.jpg","nickname":"小李讲源码","note":"","ucode":"2573037D7C82C8","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":560864,"discussion_content":"其实一个进程的内存布局包含用户态和内核态，所以可以理解为中断是发生在同一个进程内的上下文切换过程。可以理解为是系统调用那块。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1649473756,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":122503,"user_name":"肖韬","can_delete":false,"product_type":"c1","uid":1059962,"ip_address":"","ucode":"BBCDBFD08C8B8E","user_header":"https://static001.geekbang.org/account/avatar/00/10/2c/7a/f2e63f58.jpg","comment_is_top":false,"comment_ctime":1565409028,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"18745278212","product_id":100020901,"comment_content":"老师，问一个问题<br><br>在保存当前进程的内核状态和 CPU 寄存器之前，需要先把该进程的虚拟内存、栈等保存下来；而加载了下一进程的内核态后，还需要刷新进程的虚拟内存和用户栈。<br><br>进程的虚拟内存这些数据保存在哪里呢？是保存虚拟内存的地址还是内容？","like_count":4},{"had_liked":false,"id":43151,"user_name":"骑车吃火锅","can_delete":false,"product_type":"c1","uid":1303591,"ip_address":"","ucode":"6C00EEB90AD539","user_header":"https://static001.geekbang.org/account/avatar/00/13/e4/27/73359af3.jpg","comment_is_top":false,"comment_ctime":1543192607,"is_pvip":false,"discussion_count":3,"race_medal":0,"score":"18723061791","product_id":100020901,"comment_content":"如果是上下文切换比较吃CPU，那么我理解一秒内，两个线程之间互相切换与几百个甚至上千个线程互相切换的对系统的开销应该是一样的？","like_count":4,"discussions":[{"author":{"id":2032032,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/01/a0/07ca2bd2.jpg","nickname":"一路顺风","note":"","ucode":"D46B7F92D65189","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":293585,"discussion_content":"如果老师能回答一下这个问题就好了，线程多导致同一个线程两次被调度的时间间隔增大，响应变慢？对于切换来说切换2个和2000个对系统开销不同在哪里呢 @老师","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1595587383,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1107484,"avatar":"https://static001.geekbang.org/account/avatar/00/10/e6/1c/9d3744ee.jpg","nickname":"小李讲源码","note":"","ucode":"2573037D7C82C8","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":560862,"discussion_content":"对于系统肯定也不一样啊，比如2个CPU，现在有两个线程，线程CPU占用的百分比是百分百，而2000个线程，每个线程CPU占用百分比是0.1%，其余99.9%的时间都处于等待，但是CPU却是在一直运行来回切换的。那第一种情况CPU不需要来回切换，并且线程处理完，CPU也就休息了。就像是2个人招待2个人和2千人的区别，对系统的开销肯定也不一样啊。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1649473428,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1308321,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJia2mqq4pWHVYtN9fXZ91iajnE0ib3JqQejD9oo7kusbY64uDPrib1yOBzowoFCA4ORHUDF3HEWCZIMQ/132","nickname":"perkyoung","note":"","ucode":"9EFB0BC6A6D5D6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":395397,"discussion_content":"也有同样的疑问，cpu要做的事情就是执行不同的进程，2个和2000个对于cpu来说有区别吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1632299182,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":43149,"user_name":"Linuxer","can_delete":false,"product_type":"c1","uid":1153978,"ip_address":"","ucode":"272D9D8089C3D6","user_header":"https://static001.geekbang.org/account/avatar/00/11/9b/ba/333b59e5.jpg","comment_is_top":false,"comment_ctime":1543192403,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"14428094291","product_id":100020901,"comment_content":"进程上下文切换包括，进程之间上下文切换，线程之间上下文切换，中断上下文切换。其中跨进程的线程上下文切换等同进程上下文切换，前面关于cpu寄存器，全局变量等需不需要保存都好理解，只是中断上下文切换为什么不需要保存虚拟内存和全局变量等?","like_count":3,"discussions":[{"author":{"id":1448147,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/ueWNR1W4WibG9o7sa3Wv6by4VwM15rJCOGfxZ3nX0tj9ic8nTcofFUICBrXICgomJfRblVMHUQELFoKKMLUmPk0Q/132","nickname":"不懈前行","note":"","ucode":"237C22578E1AF6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":200271,"discussion_content":"中断上下文切换类似于系统调用，它们都只涉及CPU上下文的切换（即CPU状态寄存器和PC指针）；不同点在于系统调用是在同一个进程内部发生的切换，中断是在同一个进程的外部发生的切换；这两种切换至始至终都只涉及到一个进程，所以不存在进程间上下文切换，所以无需进行用户态进程的虚拟内存、用户栈以及全局资源的刷新和切换。","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1583673511,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1661451,"avatar":"https://static001.geekbang.org/account/avatar/00/19/5a/0b/d8449f5b.jpg","nickname":"keen","note":"","ucode":"CEF1606AA9EA1A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":10968,"discussion_content":"我理解是关机 那些进程的数据都没有了吧，也不知道对不","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1568345209,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":124286,"user_name":"Costar","can_delete":false,"product_type":"c1","uid":1596027,"ip_address":"","ucode":"995C4BA715A151","user_header":"","comment_is_top":false,"comment_ctime":1565853641,"is_pvip":false,"replies":[{"id":"45964","content":"是的👍","user_name":"作者回复","user_name_real":"倪朋飞","uid":"1001282","ctime":1566132690,"ip_address":"","comment_id":124286,"utype":1}],"discussion_count":2,"race_medal":0,"score":"10155788233","product_id":100020901,"comment_content":"因此，进程的上下文切换就比系统调用时多了一步：在保存当前进程的内核状态和CPU寄存器之前，需要先把改进程的虚拟内存、栈等保持下来；而加载了下一进程的内核态后，还需要刷新进程的虚拟内存和用户栈。<br>====&gt;&gt;&gt;&gt;&gt;&gt;&gt;<br>以上表述，请问，进程间切换，需要把进程的虚拟内存、栈保存到哪里去？ <br>我认为进程的虚拟内存、栈的数据本质是一直在 物理内存里的，进程切换，只要把 重新加载页表（映射关系）向MMU提供新的信息，进程的实际数据不需要动的。<br>当然CPU上下文还是要替换的。<br><br>","like_count":2,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":463098,"discussion_content":"是的👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566132690,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1926057,"avatar":"https://static001.geekbang.org/account/avatar/00/1d/63/a9/abed781e.jpg","nickname":"李維道","note":"","ucode":"9A16ECAB2522E3","race_medal":5,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":588688,"discussion_content":"进程切换真正额外的开销是重新加载 page table ","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1663999321,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"中国台湾"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":65766,"user_name":"sunsweet","can_delete":false,"product_type":"c1","uid":1027879,"ip_address":"","ucode":"787F9E1EC6A67E","user_header":"https://static001.geekbang.org/account/avatar/00/0f/af/27/76489618.jpg","comment_is_top":false,"comment_ctime":1549630723,"is_pvip":false,"replies":[{"id":"23256","content":"差不多，不过最后两个应该要看具体情况的","user_name":"作者回复","user_name_real":"倪朋飞","uid":"1001282","ctime":1549636687,"ip_address":"","comment_id":65766,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10139565315","product_id":100020901,"comment_content":"开销排名：进程上线文切换&gt;同进程线程上线文切换&gt;中断上线文切换&gt;内核模式切换&gt;协程上线文切换&gt;用户态函数调用上下文切换<br>对吗？？？","like_count":2,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":438578,"discussion_content":"差不多，不过最后两个应该要看具体情况的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1549636687,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":62343,"user_name":"杨晓","can_delete":false,"product_type":"c1","uid":1368911,"ip_address":"","ucode":"99F7FE3B5A9FA1","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/9L7RSS4HNFbWiaCxQ9SMPJfKk5hkD31WandSzdEydvsWfSz2ibjkwQkBqCRV26Czm7ZzBC14bTumYyY02ByUrPiaQ/132","comment_is_top":false,"comment_ctime":1548035329,"is_pvip":false,"replies":[{"id":"22135","content":"嗯嗯 留言中有大量的经验分享和交流","user_name":"作者回复","user_name_real":"倪朋飞","uid":"1001282","ctime":1548116391,"ip_address":"","comment_id":62343,"utype":1}],"discussion_count":2,"race_medal":0,"score":"10137969921","product_id":100020901,"comment_content":"对于我这种小白来说，看留言也是一种学习","like_count":2,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":437175,"discussion_content":"嗯嗯 留言中有大量的经验分享和交流","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1548116391,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1805809,"avatar":"","nickname":"ccz 开发(谢不邀)","note":"","ucode":"B8803B050AAC68","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":133604,"discussion_content":"一个好的社区、学习氛围很重要～！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578974238,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":47263,"user_name":"张德","can_delete":false,"product_type":"c1","uid":1101929,"ip_address":"","ucode":"31FE63E8725EFC","user_header":"https://static001.geekbang.org/account/avatar/00/10/d0/69/5dbdc245.jpg","comment_is_top":false,"comment_ctime":1544093612,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10134028204","product_id":100020901,"comment_content":"打卡打卡  小白变大神","like_count":2},{"had_liked":false,"id":45881,"user_name":"赵强强","can_delete":false,"product_type":"c1","uid":1073596,"ip_address":"","ucode":"1B8AE07484C69A","user_header":"https://static001.geekbang.org/account/avatar/00/10/61/bc/88a905a5.jpg","comment_is_top":false,"comment_ctime":1543810242,"is_pvip":false,"replies":[{"id":"16420","content":"都是算到系统时间里面，","user_name":"作者回复","user_name_real":"倪朋飞","uid":"1001282","ctime":1543830959,"ip_address":"","comment_id":45881,"utype":1}],"discussion_count":2,"race_medal":0,"score":"10133744834","product_id":100020901,"comment_content":"倪老师，您好，有两个问题想咨询：<br>1、上下文切换（保存当前进程状态，恢复下一个进程状态）的时间是算到cpu system时间里的吗?<br>2、中断上下文切换，上下文切换时间和中断处理程序运行时间分别算在哪个字段呢？","like_count":2,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":431252,"discussion_content":"都是算到系统时间里面，","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543830959,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2110718,"avatar":"https://static001.geekbang.org/account/avatar/00/20/34/fe/e5429b02.jpg","nickname":"glimmer","note":"","ucode":"48A16C52FB4C45","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":373189,"discussion_content":"原来算在系统时间上的啊","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1620645631,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":358078,"user_name":"Geek_e2b0f9","can_delete":false,"product_type":"c1","uid":1602650,"ip_address":"北京","ucode":"CAB31078DDB515","user_header":"","comment_is_top":false,"comment_ctime":1663900170,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5958867466","product_id":100020901,"comment_content":"进程重启,cache会被再利用吗?目前遇到的问题是,每次重启需要重新去磁盘读取,是页表的原因吗?","like_count":1},{"had_liked":false,"id":289469,"user_name":"98K","can_delete":false,"product_type":"c1","uid":2574197,"ip_address":"","ucode":"34523632D71821","user_header":"https://static001.geekbang.org/account/avatar/00/27/47/75/61da4ecf.jpg","comment_is_top":false,"comment_ctime":1619028911,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"5913996207","product_id":100020901,"comment_content":"”但过多的上下文切换，会把 CPU 时间消耗在寄存器、内核栈以及虚拟内存等数据的保存和恢复上，从而缩短进程真正运行的时间，导致系统的整体性能大幅下降。“ <br>----------------------------------------------------------------------------------------<br>不管是不是内核，CPU获得堆栈里的内容都是通过寄存器内的地址拿到的吧? 堆栈本来就是保存在内存中为什么要恢复跟保存呢?","like_count":1,"discussions":[{"author":{"id":2140027,"avatar":"","nickname":"Geek_e4cf2e","note":"","ucode":"375F165BA9FA38","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":414195,"discussion_content":"保存的是发生中断那一时刻的寄存器信息，后面去处理中断任务，寄存器需要用来保存数据，如果之前不保存到栈上，那么寄存器数据就会被覆盖，将来执行完中断就没法返回了。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1636687771,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2743289,"avatar":"","nickname":"Geek_a60fe7","note":"","ucode":"17F1E989B779EC","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":390347,"discussion_content":"我也想问这个问题呢，可惜没人答疑了。而且中断上下文切换不用保存用户态数据，那怎么恢复呢？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1629793007,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":235438,"user_name":"cafebabe","can_delete":false,"product_type":"c1","uid":1068863,"ip_address":"","ucode":"A4CC63708A2629","user_header":"https://static001.geekbang.org/account/avatar/00/10/4f/3f/43b56751.jpg","comment_is_top":false,"comment_ctime":1595036078,"is_pvip":false,"replies":[{"id":"87271","content":"1. 这个展开内存比较多，建议找本操作系统书籍看一下。这些上下文的保存分为两种：内核内存和寄存器。内存的工作原理可以参考后面的“内存性能篇”。<br>2. 我们专栏第15篇降到虚拟内存的工作原理。","user_name":"作者回复","user_name_real":"倪朋飞","uid":"1001282","ctime":1595344294,"ip_address":"","comment_id":235438,"utype":1}],"discussion_count":3,"race_medal":0,"score":"5890003374","product_id":100020901,"comment_content":"你好倪老师，学习完本课后有几点疑问请教下：<br>1、三种上下文切换都会涉及到CPU寄存器，程序计数器的保存和恢复，分别是保存到哪里，从哪里恢复？是直接对物理内存操作？还是涉及到虚拟内存？<br>2、进程切换会涉及到用户态资源切换，是怎么操作虚拟内存？这里还不理解，麻烦给点解释或者有参考资料","like_count":1,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":501719,"discussion_content":"1. 这个展开内存比较多，建议找本操作系统书籍看一下。这些上下文的保存分为两种：内核内存和寄存器。内存的工作原理可以参考后面的“内存性能篇”。\n2. 我们专栏第15篇降到虚拟内存的工作原理。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1595344294,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":3065276,"avatar":"","nickname":"Geek_b3b8da","note":"","ucode":"5461CD95B1D764","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":590894,"discussion_content":"我理解的是cpu无法直接操作内存，必须经过mmu，mmu是虚拟机内存和物理机内存映射的管理器理解为路由表一样，tlb是mmu里面的缓存命中率，如果cpu先访问一级缓存，有就返回，没有到二级缓存，三级缓存，要是都没有需要访问外置内存，需要先到mmu，mmu里面查看tlb，如果tlb命中了就给cpu返回，如果没有命中需要去物理机内存当中进行查找了，cpu里面有寄存器，缓存，cpu计算单元，通过总线去连接物理机内存，程序通过编译后把数据转换成二进制的数据放在内存，等待cpu过来取，寄存器是一个高速存储数据的，计数器里面是cpu执行下一个操作保存指令的地方，寄存器分为：\n指令寄存器(IR)\n程序计数器(PC)\n地址寄存器(AR)\n数据寄存器(DR)\n累加寄存器(AC)\n程序状态字寄存器(PSW)\n\n总线有4种\n控制总线  用二进制信号对所有连接在系统总线上设备的行为进行同步\n地址总线  用于保持指令和数据的地址\n数据总线  cpu到内存\nio总线    cpu到磁盘io\n\ncpu类型\nx86\nintel、AMD\n\nPowerPC\nARM（ibm）\n\nMPIS、SPARC、Alpha\n\ncpu架构\nnuma\nsmp\nmpp\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1666151497,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"浙江"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1324202,"avatar":"https://static001.geekbang.org/account/avatar/00/14/34/aa/431de942.jpg","nickname":"dbtiger","note":"","ucode":"05E8447593318C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":540137,"discussion_content":"这个确实是个好问题。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1639969689,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":228465,"user_name":"jiang4357291","can_delete":false,"product_type":"c1","uid":1761912,"ip_address":"","ucode":"992E2436C69601","user_header":"","comment_is_top":false,"comment_ctime":1592703359,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"5887670655","product_id":100020901,"comment_content":"一直都有疑问的一点，既然这些任务并不是真正的在并行，只是系统给我们的错觉而已，那我们在多线程编程中为什么还需要加锁？？反正永远不会真正并行，加锁的意义在哪呢？","like_count":1,"discussions":[{"author":{"id":1063979,"avatar":"https://static001.geekbang.org/account/avatar/00/10/3c/2b/1a8660e9.jpg","nickname":"Zubin","note":"","ucode":"7390CD129F106E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":294742,"discussion_content":"多核 CPU 在运行时是真正的并行","likes_number":4,"is_delete":false,"is_hidden":false,"ctime":1595986502,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1245002,"avatar":"https://static001.geekbang.org/account/avatar/00/12/ff/4a/10891eb4.jpg","nickname":"孙大胜","note":"","ucode":"514B76A2D4E88F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":303554,"discussion_content":"加锁主要是为了保证操作的原子性。如果有两个线程都需要往同一个缓冲区写内容，底层的执行过程是值拷贝，修改，回写。比如说线程1首先被调度，在线程1回写前，如果线程1被线程2抢占，此时没有锁的保护，cpu会去调度线程2，线程2执行完后，该缓冲区内容被修改，此时再回到线程1完成回写的操作，这次回写是基于线程2操作之前的值。正是由于操作的非原子性导致同一片内存的值不是期望值，最终发生错误。","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1599297062,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":208558,"user_name":"悟明","can_delete":false,"product_type":"c1","uid":1971295,"ip_address":"","ucode":"082FB4AAC5B69C","user_header":"https://static001.geekbang.org/account/avatar/00/1e/14/5f/6a2af829.jpg","comment_is_top":false,"comment_ctime":1587380761,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"5882348057","product_id":100020901,"comment_content":"我的理解是CPU耗费在进程上下文切换，其实这个时间是少的可怜的，对于实际的CPU占用率几乎可以忽略。那么为何频繁的上下文切换会导致性能问题呢，可能是由于进程数量太多了，或者中断太多，从而引起性能问题，因为这样必然导致进程调度的延迟性。当前调度器为了保证公平性，进程是会按照一定的算法逻辑选择下一个进程调度，也不是让其他进程得不到调度。所以进程多，那就只能频繁切换了。如果系统实时进程多的话，基本上普通进程就没机会运行了，也会导致普通进程调度延迟增大。","like_count":1,"discussions":[{"author":{"id":1129668,"avatar":"https://static001.geekbang.org/account/avatar/00/11/3c/c4/7c2bf312.jpg","nickname":"草根","note":"","ucode":"7C97CB09A4D8F1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":540127,"discussion_content":"一条指令在系统执行中只需要占用几纳秒，而进程的切换需要好几个微妙，不是一个数量级的。所以上下文切换回占用大量的指令执行时间，所以系统性能会下降","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1639967458,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":172499,"user_name":"Jaime","can_delete":false,"product_type":"c1","uid":1078333,"ip_address":"","ucode":"904192CC4E916F","user_header":"https://static001.geekbang.org/account/avatar/00/10/74/3d/54bbc1df.jpg","comment_is_top":false,"comment_ctime":1579192748,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"5874160044","product_id":100020901,"comment_content":"上下文切换可以总结为内核内部的切换和用户态到内核态的切换。其中中断上下文是发生在内核态，包括了cpu寄存器，内核堆栈。系统调用，进程切换，不同进程的线程切换，从用户态切换到内核态，切换的资源包括了虚拟内存，堆栈，全局变量。相同进程的线程切换只需要保存线程私有数据。","like_count":1},{"had_liked":false,"id":145538,"user_name":"周曙光爱学习","can_delete":false,"product_type":"c1","uid":1022920,"ip_address":"","ucode":"98EAB6EBAB34B6","user_header":"https://static001.geekbang.org/account/avatar/00/0f/9b/c8/665100a3.jpg","comment_is_top":false,"comment_ctime":1572312095,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5867279391","product_id":100020901,"comment_content":"go语言的goroutine在这方面做了很多优化","like_count":1},{"had_liked":false,"id":129556,"user_name":"高木小英子","can_delete":false,"product_type":"c1","uid":1505914,"ip_address":"","ucode":"26CDD7E85722D9","user_header":"https://static001.geekbang.org/account/avatar/00/16/fa/7a/faa053e2.jpg","comment_is_top":false,"comment_ctime":1567153864,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"5862121160","product_id":100020901,"comment_content":"“进程的上下文不仅包括了虚拟内存、栈、全局变量等用户空间的资源，还包括了内核堆栈、寄存器等内核空间的状态。”不太理解这句话。<br>我的理解是进程的用户空间资源就是进程虚拟内存空间，进程的虚拟内存空间包含了栈和全局变量，为什么在这里将虚拟内存、栈和全局变量并列为进程用户空间的资源？","like_count":1,"discussions":[{"author":{"id":1825232,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83ersRGspOZwfckQcnzQxOzUYdw36wufiaQIic4hfmPrN5arOTuPF7aTz0leNSibs8C3nc3aDuh8CcMtOw/132","nickname":"curry30","note":"","ucode":"2A4F51CEE36F7A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":382915,"discussion_content":"同问，这里的描述感觉不太严谨","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1625791380,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":125179,"user_name":"Geek_685522","can_delete":false,"product_type":"c1","uid":1634222,"ip_address":"","ucode":"8B3635D004787E","user_header":"","comment_is_top":false,"comment_ctime":1566112364,"is_pvip":false,"replies":[{"id":"45962","content":"是的，只需要保存映射关系","user_name":"作者回复","user_name_real":"倪朋飞","uid":"1001282","ctime":1566132613,"ip_address":"","comment_id":125179,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5861079660","product_id":100020901,"comment_content":"进程切换，当真需要保存虚拟内存里的数据？保存到那呢？切换的过程，只要保证页表里的映射关系就可以了吧？","like_count":1,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":463465,"discussion_content":"是的，只需要保存映射关系","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566132613,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":108812,"user_name":"你好呀","can_delete":false,"product_type":"c1","uid":1049361,"ip_address":"","ucode":"2E97656410BACA","user_header":"https://static001.geekbang.org/account/avatar/00/10/03/11/f58c6278.jpg","comment_is_top":false,"comment_ctime":1561887652,"is_pvip":false,"replies":[{"id":"39655","content":"嗯","user_name":"作者回复","user_name_real":"倪朋飞","uid":"1001282","ctime":1562060254,"ip_address":"","comment_id":108812,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5856854948","product_id":100020901,"comment_content":"什么时候发生不同进程线程的上下文切换？  时间片由一个进程到另一个进程？","like_count":1,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":456127,"discussion_content":"嗯","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1562060254,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":81430,"user_name":"冷雨","can_delete":false,"product_type":"c1","uid":1082022,"ip_address":"","ucode":"2ED2978575862F","user_header":"https://static001.geekbang.org/account/avatar/00/10/82/a6/01ee14d5.jpg","comment_is_top":false,"comment_ctime":1553912689,"is_pvip":false,"replies":[{"id":"29580","content":"不是的，用户进程不会创建内核线程，内核线程是指一直都运行在内核态的任务","user_name":"作者回复","user_name_real":"倪朋飞","uid":"1001282","ctime":1554001716,"ip_address":"","comment_id":81430,"utype":1}],"discussion_count":3,"race_medal":0,"score":"5848879985","product_id":100020901,"comment_content":"老师你好，比如一个用户进城里面有三个线程，在内核里面是同时创建三个对应的内核线程么？之前看资料说内核线程就是轻量级进程，所以对内核来说都是轻量级进程之间的切换带动不同用户进程或线程的切换？","like_count":1,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":445194,"discussion_content":"不是的，用户进程不会创建内核线程，内核线程是指一直都运行在内核态的任务","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1554001716,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1477630,"avatar":"https://static001.geekbang.org/account/avatar/00/16/8b/fe/f2b2ae63.jpg","nickname":"t-mac","note":"","ucode":"F648100D8D7C8F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":292119,"discussion_content":"老师理解有错误， 比如java进程的线程直接对应内核线程,","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1595085101,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1061306,"avatar":"https://static001.geekbang.org/account/avatar/00/10/31/ba/35b3b16c.jpg","nickname":"Marsman","note":"","ucode":"A108E7A0A59FAC","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1477630,"avatar":"https://static001.geekbang.org/account/avatar/00/16/8b/fe/f2b2ae63.jpg","nickname":"t-mac","note":"","ucode":"F648100D8D7C8F","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":331949,"discussion_content":"老师说的内核线程是指threadd fork出来的中括号括起来的内核线程，用 ps -f --ppid 2 列出来的就是内核线程；   你说的java进程的线程直接对应的是操作系统的线程； ","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1607009968,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":292119,"ip_address":""},"score":331949,"extra":""}]}]},{"had_liked":false,"id":79161,"user_name":"frank_","can_delete":false,"product_type":"c1","uid":1452570,"ip_address":"","ucode":"658DBBC9BE337F","user_header":"","comment_is_top":false,"comment_ctime":1553393096,"is_pvip":false,"replies":[{"id":"29058","content":"会影响的","user_name":"作者回复","user_name_real":"倪朋飞","uid":"1001282","ctime":1553526894,"ip_address":"","comment_id":79161,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5848360392","product_id":100020901,"comment_content":"请教一下老师，软中断算不算一种任务呢？它的上下文切换会不会影响CPU利用率呢？","like_count":1,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":444377,"discussion_content":"会影响的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1553526894,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":64533,"user_name":"阿施","can_delete":false,"product_type":"c1","uid":1327983,"ip_address":"","ucode":"77FF80A6E37D3B","user_header":"https://static001.geekbang.org/account/avatar/00/14/43/6f/1e3c4476.jpg","comment_is_top":false,"comment_ctime":1548816139,"is_pvip":false,"replies":[{"id":"22977","content":"实际上细分一下，对一个CPU来说，就是两个线程之间的切换，所以跟文中也是对应的。只是如果看多次的话，可能一会是进程间，一会又是进程内，这就不确定了。","user_name":"作者回复","user_name_real":"倪朋飞","uid":"1001282","ctime":1548943045,"ip_address":"","comment_id":64533,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5843783435","product_id":100020901,"comment_content":"你好，文中提到线程上下文切换有两种方式，即同进程的两个不同线程之间切换，以及两个不同进程的线程之间切换。我想请教下，如果存在两个进程，且都含有多个线程，当发生第二种线程上下文切换时，和进程间上下文切换有哪些区别，谢谢？","like_count":1,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":438053,"discussion_content":"实际上细分一下，对一个CPU来说，就是两个线程之间的切换，所以跟文中也是对应的。只是如果看多次的话，可能一会是进程间，一会又是进程内，这就不确定了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1548943045,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":63981,"user_name":"啊啊啊哦哦","can_delete":false,"product_type":"c1","uid":1309877,"ip_address":"","ucode":"68C7153ECAAC57","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/RNO4yZyBvic914hewmNNE8iblYDcfv5yGHZ9OnKuCuZXNmGR0F5qV3icKLT2xpMt66GyEpicZVvrmz8A6TIqt92MQg/132","comment_is_top":false,"comment_ctime":1548636838,"is_pvip":false,"replies":[{"id":"22958","content":"切换都是在内核态的。如果使用了协程，那才是用户态切换","user_name":"作者回复","user_name_real":"倪朋飞","uid":"1001282","ctime":1548941068,"ip_address":"","comment_id":63981,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5843604134","product_id":100020901,"comment_content":"单进程多线程情况下。  线程的切换在用户态切换。还是在内核态切换","like_count":1,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":437792,"discussion_content":"切换都是在内核态的。如果使用了协程，那才是用户态切换","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1548941068,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":53395,"user_name":"WL","can_delete":false,"product_type":"c1","uid":1173771,"ip_address":"","ucode":"6277DCD776B87E","user_header":"https://static001.geekbang.org/account/avatar/00/11/e9/0b/1171ac71.jpg","comment_is_top":false,"comment_ctime":1545637950,"is_pvip":false,"replies":[{"id":"19439","content":"中断是处理硬件异步信号的一种机制，比如按下一个按键、收到一个网络数据包就分别会由键盘和网卡向系统发起一个中断信号，系统会调用中断处理程序来处理","user_name":"作者回复","user_name_real":"倪朋飞","uid":"1001282","ctime":1545694800,"ip_address":"","comment_id":53395,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5840605246","product_id":100020901,"comment_content":"想请教一下老师文章中的中断处理这个概念具体是什么意思，什么情况下回发生， 是谁主动发起的吗？","like_count":1,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":434126,"discussion_content":"中断是处理硬件异步信号的一种机制，比如按下一个按键、收到一个网络数据包就分别会由键盘和网卡向系统发起一个中断信号，系统会调用中断处理程序来处理","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1545694800,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":52605,"user_name":"Im Robin","can_delete":false,"product_type":"c1","uid":1183477,"ip_address":"","ucode":"924B7DC8CD38EF","user_header":"https://static001.geekbang.org/account/avatar/00/12/0e/f5/c4a26e84.jpg","comment_is_top":false,"comment_ctime":1545451480,"is_pvip":false,"replies":[{"id":"19188","content":"注意内存和寄存器是不同的资源，无论什么样的上下文切换，很多CPU寄存器总是要更新的（比如PC）；而虚拟内存则不一定，因为进程的虚拟内存空间都有用户和内核两部分，切换到内核态时，地址空间不切换就可以直接访问内核态内存。接下来的文章还会讲内存问题的分析方法","user_name":"作者回复","user_name_real":"倪朋飞","uid":"1001282","ctime":1545536192,"ip_address":"","comment_id":52605,"utype":1}],"discussion_count":2,"race_medal":0,"score":"5840418776","product_id":100020901,"comment_content":"老师你好，对中断上下文切换，理解有点问题：文中提到，中断即使打断了一个正在处于用户态的进程，也不需要保存和回复这个进程的虚拟内存。。。等资源。<br>----------------------------------------------------------------------------------<br>我理解CPU要让出来处理中断，应该保存用户态进程的上下文并把他变成SLEEP之类的状态，然后处理完中断再重新加载回来执行，如果没有这个过程，那么内核处理完中断后是如何恢复执行之前的用户态进程的呢？难道在处理硬件中断过程当中不需要使用PC或者寄存器之类的资源吗，不是很理解，麻烦老师给予解答，谢谢","like_count":1,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":433918,"discussion_content":"注意内存和寄存器是不同的资源，无论什么样的上下文切换，很多CPU寄存器总是要更新的（比如PC）；而虚拟内存则不一定，因为进程的虚拟内存空间都有用户和内核两部分，切换到内核态时，地址空间不切换就可以直接访问内核态内存。接下来的文章还会讲内存问题的分析方法","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1545536192,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1298046,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKZicicibGibtR5zAia782Ajc5I5BN3F3tjAdlibATIknHv67gbxeH21N7B6vbgwLjYb1miaLKhqicptB5ibYw/132","nickname":"阿飞","note":"","ucode":"F8B1FC8521264D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":413328,"discussion_content":"x86下用户态和内核态地址空间是隔离的，用户空间都小于0xfffff800000000000，内核空间都大于0xffff80000000。中断处理程序只会操作大于0xffff80000000内存地址，所以不需要保存进程的用户态资源","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1636447628,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":51833,"user_name":"小成","can_delete":false,"product_type":"c1","uid":1350143,"ip_address":"","ucode":"1BC685767B0FBD","user_header":"https://static001.geekbang.org/account/avatar/00/14/99/ff/046495bb.jpg","comment_is_top":false,"comment_ctime":1545268283,"is_pvip":false,"replies":[{"id":"18891","content":"可以的","user_name":"作者回复","user_name_real":"倪朋飞","uid":"1001282","ctime":1545313377,"ip_address":"","comment_id":51833,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5840235579","product_id":100020901,"comment_content":"老师，想问一下，同一个进程内的不同线程能被不同的CPU核心运行吗？","like_count":1,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":433640,"discussion_content":"可以的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1545313377,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":49587,"user_name":"JuCY","can_delete":false,"product_type":"c1","uid":1038800,"ip_address":"","ucode":"43689B65128039","user_header":"https://static001.geekbang.org/account/avatar/00/0f/d9/d0/baffc852.jpg","comment_is_top":false,"comment_ctime":1544738029,"is_pvip":true,"replies":[{"id":"17838","content":"嗯嗯","user_name":"作者回复","user_name_real":"倪朋飞","uid":"1001282","ctime":1544745459,"ip_address":"","comment_id":49587,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5839705325","product_id":100020901,"comment_content":"作者想表达的应该是，用户空间不能申请内存，只能访问内核申请好的内存。用户态的内存是虚拟的，只有真正申请了内存才是可访问的","like_count":1,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":432672,"discussion_content":"嗯嗯","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1544745459,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":48963,"user_name":"kevinsu","can_delete":false,"product_type":"c1","uid":1078506,"ip_address":"","ucode":"BAD46B815D6A5C","user_header":"https://static001.geekbang.org/account/avatar/00/10/74/ea/10661bdc.jpg","comment_is_top":false,"comment_ctime":1544582262,"is_pvip":false,"replies":[{"id":"17680","content":"是的","user_name":"作者回复","user_name_real":"倪朋飞","uid":"1001282","ctime":1544661301,"ip_address":"","comment_id":48963,"utype":1}],"discussion_count":2,"race_medal":0,"score":"5839549558","product_id":100020901,"comment_content":"可以这样理解吗？cpu频繁上下文切换的话，导致cpu干正经事儿的时间少了。","like_count":1,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":432438,"discussion_content":"是的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1544661301,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1324202,"avatar":"https://static001.geekbang.org/account/avatar/00/14/34/aa/431de942.jpg","nickname":"dbtiger","note":"","ucode":"05E8447593318C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":540151,"discussion_content":"空耗","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1639972367,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":47847,"user_name":"kylin","can_delete":false,"product_type":"c1","uid":1271076,"ip_address":"","ucode":"780D9FD4F21976","user_header":"https://static001.geekbang.org/account/avatar/00/13/65/24/5bcb858d.jpg","comment_is_top":false,"comment_ctime":1544235940,"is_pvip":false,"replies":[{"id":"17856","content":"CPU寄存器有很多，PC是其中一种，篇幅限制不可能展开。建议找CPU体系结构的书看一下","user_name":"作者回复","user_name_real":"倪朋飞","uid":"1001282","ctime":1544747134,"ip_address":"","comment_id":47847,"utype":1}],"discussion_count":2,"race_medal":0,"score":"5839203236","product_id":100020901,"comment_content":"老师好，有一点不明白，程序计数器是不是指令寄存器？那程序寄存器是cpu寄存器的一种？<br>概念上是不是cpu寄存器包含程序计数器？","like_count":1,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":431906,"discussion_content":"CPU寄存器有很多，PC是其中一种，篇幅限制不可能展开。建议找CPU体系结构的书看一下","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1544747134,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":3065276,"avatar":"","nickname":"Geek_b3b8da","note":"","ucode":"5461CD95B1D764","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":590921,"discussion_content":"指令寄存器(IR)\n程序计数器(PC)\n地址寄存器(AR)\n数据寄存器(DR)\n累加寄存器(AC)\n程序状态字寄存器(PSW)","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1666168989,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"浙江"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":46669,"user_name":"赵强强","can_delete":false,"product_type":"c1","uid":1073596,"ip_address":"","ucode":"1B8AE07484C69A","user_header":"https://static001.geekbang.org/account/avatar/00/10/61/bc/88a905a5.jpg","comment_is_top":false,"comment_ctime":1543970481,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5838937777","product_id":100020901,"comment_content":"倪老师，进程调度时间片轮转受CONFIG_HZ控制，线程呢?因为本节实验非自愿线程上下文切换次数每秒高达10万次，这个调度频率好高。","like_count":1},{"had_liked":false,"id":44923,"user_name":"北卡","can_delete":false,"product_type":"c1","uid":1218128,"ip_address":"","ucode":"2D947A61689FC6","user_header":"https://static001.geekbang.org/account/avatar/00/12/96/50/bde525b1.jpg","comment_is_top":false,"comment_ctime":1543508473,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5838475769","product_id":100020901,"comment_content":"课代表牛逼","like_count":1},{"had_liked":false,"id":43547,"user_name":"Karis0901","can_delete":false,"product_type":"c1","uid":1321483,"ip_address":"","ucode":"D908D7F77ADE2A","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIfQHOCVibxib3GfYKUZonqCibM8Weic5BIOJDGz4QjcBDUYkQPK9tThzibF0Rdd704z85zZl3fQy7H8xw/132","comment_is_top":false,"comment_ctime":1543239339,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5838206635","product_id":100020901,"comment_content":"1、主要的概念是：任务、cpu上下文、cpu上下文切换、资源。<br>2、任务类型有：进程、线程和中断任务<br>3、cpu上下文：是任务在cpu上运行的状态，包括cpu中寄存器(Register)和程序计数器(PC)的值。任务的cpu上下文是保存在内核中的。<br>4、cpu上下文切换：按照三种任务类型，有三种切换场景：<br>（1）进程cpu上下文切换：进程内特权模式切换，比如IO操作就涉及用户态和内核态之间转换的系统调用过程；进程间切换则涉及更多资源，不仅爆了cpu上下文，还包括进程的虚拟内存和栈；<br>（2）线程cpu上下文切换：区分进程内的线程切换和进程间的线程切换。前者因为共享进程内的虚拟内存，需要切换的资源少；后者同进程切换。<br>（3）中断的cpu上下文切换：不需要保存进程的用户态，也不需要保存此进程的内核态资源（虚拟内存和全局变量等资源），只需要保存中断任务的状态。中断任务的优先级更高。<br><br>总结：cpu上下文切换过程中涉及任务的资源越多，对性能的影响越大！","like_count":1},{"had_liked":false,"id":43315,"user_name":"学习学习再学习","can_delete":false,"product_type":"c1","uid":1291177,"ip_address":"","ucode":"7F85F036A150A8","user_header":"https://static001.geekbang.org/account/avatar/00/13/b3/a9/46cbb52f.jpg","comment_is_top":false,"comment_ctime":1543211854,"is_pvip":false,"replies":[{"id":"15553","content":"嗯，后续也会介绍这类问题的分析思路","user_name":"作者回复","user_name_real":"倪朋飞","uid":"1001282","ctime":1543240804,"ip_address":"","comment_id":43315,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5838179150","product_id":100020901,"comment_content":"遇到过一个案例，有一次开发写的代码有问题，导致每个用户登录的时候都会请求某个通过 os:cmd 执行的操作，监控图上很明显用户登录高峰时上下文切换特别高，strace 和 systemtap 轮番撸了几天才查到问题。","like_count":1,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":430358,"discussion_content":"嗯，后续也会介绍这类问题的分析思路","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543240804,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":43197,"user_name":"黄隆","can_delete":false,"product_type":"c1","uid":1095130,"ip_address":"","ucode":"3674CDC7663042","user_header":"https://static001.geekbang.org/account/avatar/00/10/b5/da/016731f1.jpg","comment_is_top":false,"comment_ctime":1543195564,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"5838162860","product_id":100020901,"comment_content":"一直不明白线程调度和进程调度有什么不同，从本文好像了解到了一点","like_count":1,"discussions":[{"author":{"id":3065276,"avatar":"","nickname":"Geek_b3b8da","note":"","ucode":"5461CD95B1D764","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":590922,"discussion_content":"运行任务主要是线程，进行时给线程提供各种资源的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1666169063,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"浙江"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":43195,"user_name":"行者","can_delete":false,"product_type":"c1","uid":1063734,"ip_address":"","ucode":"EA31201A7C5AE1","user_header":"https://static001.geekbang.org/account/avatar/00/10/3b/36/2d61e080.jpg","comment_is_top":false,"comment_ctime":1543195290,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5838162586","product_id":100020901,"comment_content":"补充下中断这个点，<br>中断分为软中断和硬件中断，软中断有内存溢出等问题处理恢复，硬中断是处理硬件设备发出信号，比如鼠标点击事件。<br>中断具有更好的优先级，需要及时处理。","like_count":1},{"had_liked":false,"id":43172,"user_name":"行者","can_delete":false,"product_type":"c1","uid":1063734,"ip_address":"","ucode":"EA31201A7C5AE1","user_header":"https://static001.geekbang.org/account/avatar/00/10/3b/36/2d61e080.jpg","comment_is_top":false,"comment_ctime":1543194289,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5838161585","product_id":100020901,"comment_content":"我理解过多的cpu切换，会导致过多的加载不同内存到cpu缓存中，而加载缓存需要等待，花费更多的时间。<br>今天收获到一个点，调度的是线程，之前一直以为是进程。<br>联想到go中的协程，go不鼓励大家直接使用线程而是协程，目的就是避免过多的上下文切换。","like_count":1},{"had_liked":false,"id":43122,"user_name":"Linux云计算网络","can_delete":false,"product_type":"c1","uid":1114062,"ip_address":"","ucode":"8E1F8B049D3C95","user_header":"https://static001.geekbang.org/account/avatar/00/10/ff/ce/73ee54bf.jpg","comment_is_top":false,"comment_ctime":1543188105,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5838155401","product_id":100020901,"comment_content":"mark","like_count":1},{"had_liked":false,"id":43103,"user_name":"十三","can_delete":false,"product_type":"c1","uid":1196791,"ip_address":"","ucode":"D3EFE8729DDE8A","user_header":"https://static001.geekbang.org/account/avatar/00/12/42/f7/9dce9a7b.jpg","comment_is_top":false,"comment_ctime":1543162961,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5838130257","product_id":100020901,"comment_content":"『D4打卡』<br><br>今天学了进程上下文切换、线程上下文切换、中断上下文切换。进程上下文切换和系统调用的区别。<br>另外，刚刚发现，原来进程、线程我一直都不是特别清楚，尴尬，白学白用了这么久的感觉","like_count":1},{"had_liked":false,"id":43098,"user_name":"湖湘志","can_delete":false,"product_type":"c1","uid":1285578,"ip_address":"","ucode":"C8B069B3AD4FEA","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83erJR5Kj0Xm6LykFHLaWqHjQiaroVxgdoGI7uHEGz2D3PfibWNkBYP23QLzFmcuicgKLbqUch0ZJ2ZNOA/132","comment_is_top":false,"comment_ctime":1543161723,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5838129019","product_id":100020901,"comment_content":"沙发D3","like_count":1},{"had_liked":false,"id":360624,"user_name":"zwm","can_delete":false,"product_type":"c1","uid":1787187,"ip_address":"山东","ucode":"BDF98B3A1CD406","user_header":"https://static001.geekbang.org/account/avatar/00/1b/45/33/cdea4bca.jpg","comment_is_top":false,"comment_ctime":1666695775,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1666695775","product_id":100020901,"comment_content":"2022&#47;10&#47;25","like_count":0},{"had_liked":false,"id":351065,"user_name":"Geek_f93234","can_delete":false,"product_type":"c1","uid":1769504,"ip_address":"","ucode":"1E5DC903A5429E","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJGXndj5N66z9BL1ic9GibZzWWgoVeWaWTL2XUnCYic7iba2kAEvN9WfjmlXELD5lqt8IJ1P023N5ZWicg/132","comment_is_top":false,"comment_ctime":1657508816,"is_pvip":false,"discussion_count":0,"race_medal":1,"score":"1657508816","product_id":100020901,"comment_content":"day3","like_count":0},{"had_liked":false,"id":350829,"user_name":"Geek_f93234","can_delete":false,"product_type":"c1","uid":1769504,"ip_address":"","ucode":"1E5DC903A5429E","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJGXndj5N66z9BL1ic9GibZzWWgoVeWaWTL2XUnCYic7iba2kAEvN9WfjmlXELD5lqt8IJ1P023N5ZWicg/132","comment_is_top":false,"comment_ctime":1657246391,"is_pvip":false,"discussion_count":0,"race_medal":1,"score":"1657246391","product_id":100020901,"comment_content":"day3<br>怎么判断是中断上下文切换是正常的呢？还是上下文切换太多了导致CPU使用率升高","like_count":0},{"had_liked":false,"id":349901,"user_name":"有原","can_delete":false,"product_type":"c1","uid":2927617,"ip_address":"","ucode":"BA2B4911E66EDB","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/wFFLMkicZicdsG0H4oETYokjdZvg9kzhbU31KGRDBNDc1cDZPa8tnOz0D9TNAibia4wLkLObnAGhvhksKsRibZnSKXA/132","comment_is_top":false,"comment_ctime":1656419431,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1656419431","product_id":100020901,"comment_content":"有操作系统基础理解起来会更容易一点，总结下来就是：中断上下文切换&lt;线程上下文切换（同进程）&lt;进程上下文切换","like_count":0},{"had_liked":false,"id":348670,"user_name":"Geek_9e1c1a","can_delete":false,"product_type":"c1","uid":2903968,"ip_address":"","ucode":"A79B61F7118DF6","user_header":"","comment_is_top":false,"comment_ctime":1655292673,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1655292673","product_id":100020901,"comment_content":"Linux 通过 TLB（Translation Lookaside Buffer）来管理虚拟内存到物理内存的映射关系<br><br>这个说法感觉不对，虚拟内存到物理内存的映射关系应该是在页表当中，而页表是存放于物理内存中，根据局部性原理，tlb只是缓存了最近访问的页表，加快了访问","like_count":0},{"had_liked":false,"id":347571,"user_name":"一默","can_delete":false,"product_type":"c1","uid":1163974,"ip_address":"","ucode":"F23A6E42DFD0C4","user_header":"https://static001.geekbang.org/account/avatar/00/11/c2/c6/88d0c7b2.jpg","comment_is_top":false,"comment_ctime":1654161582,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1654161582","product_id":100020901,"comment_content":"老师，请教一下，中断什么时候发生？","like_count":0},{"had_liked":false,"id":341942,"user_name":"爱丽包°","can_delete":false,"product_type":"c1","uid":2535283,"ip_address":"","ucode":"125325E82EE6D2","user_header":"https://static001.geekbang.org/account/avatar/00/26/af/73/6bc60f7a.jpg","comment_is_top":false,"comment_ctime":1649926270,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1649926270","product_id":100020901,"comment_content":"老师，进程调度的时机中第二和第三不是一样的嘛，第二是等待资源，主动放弃CPU进入睡眠态","like_count":0},{"had_liked":false,"id":337687,"user_name":"fx","can_delete":false,"product_type":"c1","uid":2334235,"ip_address":"","ucode":"CA9066014707F3","user_header":"https://static001.geekbang.org/account/avatar/00/23/9e/1b/7abfa59f.jpg","comment_is_top":false,"comment_ctime":1646975089,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1646975089","product_id":100020901,"comment_content":"cpu的程序计数器PC和jvm的程序计数器是什么关系","like_count":0},{"had_liked":false,"id":337305,"user_name":"Sudouble","can_delete":false,"product_type":"c1","uid":1365574,"ip_address":"","ucode":"B369B09DAF8D20","user_header":"https://static001.geekbang.org/account/avatar/00/14/d6/46/5eb5261b.jpg","comment_is_top":false,"comment_ctime":1646742574,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1646742574","product_id":100020901,"comment_content":"CPU上下文切换，主要由进程、线程触发，切换时将CPU寄存器、PC指针、堆栈中的值缓存到一个固定的数据结构中。当再次来到时，进行恢复。","like_count":0},{"had_liked":false,"id":335423,"user_name":"加勒比海带","can_delete":false,"product_type":"c1","uid":1180186,"ip_address":"","ucode":"129E060503085A","user_header":"https://static001.geekbang.org/account/avatar/00/12/02/1a/f7d899f2.jpg","comment_is_top":false,"comment_ctime":1645514198,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1645514198","product_id":100020901,"comment_content":"老师你好，这里说的“需要先把该进程的虚拟内存、栈等保存下来；而加载了下一进程的内核态后，还需要刷新进程的虚拟内存和用户栈“中，保存的进程虚拟内存是指保存进程已经分配的物理内存中存储的内容吗？还有这些内容是保存在哪里呢？难道额外开辟一片空间保存吗？","like_count":0},{"had_liked":false,"id":328048,"user_name":"Mr.weng","can_delete":false,"product_type":"c1","uid":2629661,"ip_address":"","ucode":"BC53450056CE9E","user_header":"https://static001.geekbang.org/account/avatar/00/28/20/1d/9b4c8b33.jpg","comment_is_top":false,"comment_ctime":1640502207,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1640502207","product_id":100020901,"comment_content":"系统调用产生的是用户模式切换带来的函数调用栈开销，进程切换还涉及到资源的切换。进程切换触发的情况有四种：1、公平调度场景下，分到当前进行的时间片执行完，发生进程上下文切换；2、进程执行过程中申请不到系统资源，进程被挂起，发生进程上下文切换；3、进程执行过程中执行了睡眠sleep等释放CPU资源的操作，发生进程上下文切换；4、中断产生时，进程发生上下文切换。线程上下文切换开销小，也分两种情况：1、不同进程的线程发生切换，等同于进程上下文切换；2、同一个进程内的切成发生切换，只涉及线程私有数据发生切换，共享资源不发生切换。","like_count":0},{"had_liked":false,"id":327165,"user_name":"dbtiger","can_delete":false,"product_type":"c1","uid":1324202,"ip_address":"","ucode":"05E8447593318C","user_header":"https://static001.geekbang.org/account/avatar/00/14/34/aa/431de942.jpg","comment_is_top":false,"comment_ctime":1639965863,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1639965863","product_id":100020901,"comment_content":"我所理解的 CPU 上下文切换：<br>领导给你分配了一个计划中的任务（进程），给你分配了电脑、资金、办公网络等（虚拟化内存），然后你按deadline将任务拆分成几个小段（线程）进行。但是突然老板找到你，给你插了个非常重要紧急的任务。这个时候你就会做上下文切换（先保存进行了一会领导安排的活的进度），然后切换到老板给的紧急任务上。这里在保存先前任务的过程会消耗工时（CPU 时间消耗在寄存器、内核栈以及虚拟内存等数据的保存和恢复上）","like_count":0},{"had_liked":false,"id":324961,"user_name":"李俊-John","can_delete":false,"product_type":"c1","uid":1595855,"ip_address":"","ucode":"AE9056C59D60D6","user_header":"https://static001.geekbang.org/account/avatar/00/18/59/cf/168ac16d.jpg","comment_is_top":false,"comment_ctime":1638758323,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1638758323","product_id":100020901,"comment_content":"“进程的上下文不仅包括了虚拟内存、栈、全局变量等用户空间的资源“，栈和全局变量不是对应到虚拟内存中的栈段和数据段吗？而文章中所表述的虚拟内存、栈、全局变量似乎是同层级的","like_count":0},{"had_liked":false,"id":324131,"user_name":"江心洋","can_delete":false,"product_type":"c1","uid":1627535,"ip_address":"","ucode":"89B4E8BC2DBC6D","user_header":"https://static001.geekbang.org/account/avatar/00/18/d5/8f/2a89f97d.jpg","comment_is_top":false,"comment_ctime":1638320279,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1638320279","product_id":100020901,"comment_content":"曾经系统查询数据，长时间没反应，top看了一下，其中发现cpu其中一个核占用达到100%，其他不高，后来发现oracle有锁表，老师能否分析一下，为什么单独一个核是100%呢？","like_count":0},{"had_liked":false,"id":323719,"user_name":"insist","can_delete":false,"product_type":"c1","uid":1054536,"ip_address":"","ucode":"1EE2800A900BA7","user_header":"https://static001.geekbang.org/account/avatar/00/10/17/48/3ab39c86.jpg","comment_is_top":false,"comment_ctime":1638114549,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1638114549","product_id":100020901,"comment_content":"cpu上下文包括:寄存器值、程序计数器<br>cpu上下文切换可以分为:进程上下文切换、线程上线文切换和上下文切换","like_count":0},{"had_liked":false,"id":321047,"user_name":"Issac慜","can_delete":false,"product_type":"c1","uid":1793361,"ip_address":"","ucode":"690B69FC1C0BB2","user_header":"https://static001.geekbang.org/account/avatar/00/1b/5d/51/87fc7ef9.jpg","comment_is_top":false,"comment_ctime":1636632143,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1636632143","product_id":100020901,"comment_content":"所以，如果对于一个网络设备，当流量达到系统的上限时，会导致系统的响应变慢。因为内核是通过中断的方式从驱动获取的。为了优化这个问题，所以便产生了现在的DPDK等技术，不知道理解的对不对","like_count":0},{"had_liked":false,"id":317697,"user_name":"","can_delete":false,"product_type":"c1","uid":2095026,"ip_address":"","ucode":"79DB151C0BFC63","user_header":"https://static001.geekbang.org/account/avatar/00/1f/f7/b2/b9d2d7d8.jpg","comment_is_top":false,"comment_ctime":1634893304,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1634893304","product_id":100020901,"comment_content":" CPU 上下文: <br>每个任务运行前，CPU 都需要知道任务从哪里加载、又从哪里开始运行，也就是说，需要系统事先帮它设置好 CPU 寄存器和程序计数器（Program Counter，PC）<br><br>CPU 寄存器，是 CPU 内置的容量小、但速度极快的内存。而程序计数器，则是用来存储 CPU 正在执行的指令位置、或者即将执行的下一条指令位置。它们都是 CPU 在运行任何任务前，必须的依赖环境，因此也被叫做 CPU 上下文。<br><br><br><br>CPU 上下文切换<br>就是先把前一个任务的 CPU 上下文（也就是 CPU 寄存器和程序计数器）保存到系统内核中，然后加载新任务的上下文到这些寄存器和程序计数器，最后再跳转到程序计数器所指的新位置，运行新任务<br><br><br><br>根据任务的不同，CPU 的上下文切换可以分为进程上下文切换、线程上下文切换以及中断上下文切换几个不同的场景。<br><br>进程上下文切换<br>系统调用：系统调用前后，进程需要从用户态到内核态的转换，CPU 寄存器需要保存及恢复切换的上下文信息。一次系统调用的过程，其实是发生了两次 CPU 上下文切换<br><br>进程上下文切换：进程是由内核来管理和调度的，进程的切换只能发生在内核态。所以，进程的上下文不仅包括了虚拟内存、栈、全局变量等用户空间的资源，还包括了内核堆栈、寄存器等内核空间的状态。进程的上下文切换就比系统调用时多了一步：在保存当前进程的内核状态和 CPU 寄存器之前，需要先把该进程的虚拟内存、栈等保存下来；而加载了下一进程的内核态后，还需要刷新进程的虚拟内存和用户栈。<br><br><br><br>上下文切换的性能<br>每次上下文切换都需要几十纳秒到数微秒的 CPU 时间。这个时间还是相当可观的，特别是在进程上下文切换次数较多的情况下，很容易导致 CPU 将大量时间耗费在寄存器、内核栈以及虚拟内存等资源的保存和恢复上，进而大大缩短了真正运行进程的时间<br><br>Linux 通过 TLB（Translation Lookaside Buffer）来管理虚拟内存到物理内存的映射关系。当虚拟内存更新后，TLB 也需要刷新，内存的访问也会随之变慢。特别是在多处理器系统上，缓存是被多个处理器共享的，刷新缓存不仅会影响当前处理器的进程，还会影响共享缓存的其他处理器的进程<br><br><br><br>切换时机<br>一，为了保证所有进程可以得到公平调度，CPU 时间被划分为一段段的时间片，这些时间片再被轮流分配给各个进程。这样，当某个进程的时间片耗尽了，就会被系统挂起，切换到其它正在等待 CPU 的进程运行<br><br>二，进程在系统资源不足（比如内存不足）时，要等到资源满足后才可以运行，这个时候进程也会被挂起，并由系统调度其他进程运行<br><br>三，当进程通过睡眠函数 sleep 这样的方法将自己主动挂起时，自然也会重新调度<br><br>四，当有优先级更高的进程运行时，为了保证高优先级进程的运行，当前进程会被挂起，由高优先级进程来运行<br><br>五，发生硬件中断时，CPU 上的进程会被中断挂起，转而执行内核中的中断服务程序<br><br>线程上下文切换<br>线程是调度的基本单位，而进程则是资源拥有的基本单位。<br><br>当进程拥有多个线程时，这些线程会共享相同的虚拟内存和全局变量等资源。这些资源在上下文切换时是不需要修改的<br><br>线程也有自己的私有数据，比如栈和寄存器等，这些在上下文切换时也是需要保存的<br><br>不同进程的上下文切换：因为资源不共享，所以切换过程就跟进程上下文切换是一样<br><br>同一进程下的上下文切换：虚拟内存这些共享资源就保持不动，只需要切换线程的私有数据、寄存器等不共享的数据<br><br><br><br>中断上下文切换<br>为了快速响应硬件的事件，中断处理会打断进程的正常调度和执行，转而调用中断处理程序，响应设备事件。而在打断其他进程时，就需要将进程当前的状态保存下来，这样在中断结束后，进程仍然可以从原来的状态恢复运行<br><br>中断上下文切换只涉及到内核态的进程。中断上下文，其实只包括内核态中断服务程序执行所必需的状态，包括 CPU 寄存器、内核堆栈、硬件中断参数等<br><br>对同一个 CPU 来说，中断处理比进程拥有更高的优先级，所以中断上下文切换并不会与进程上下文切换同时发生<br><br>中断上下文切换也需要消耗 CPU，切换次数过多也会耗费大量的 CPU，甚至严重降低系统的整体性能。所以，当你发现中断次数过多时，就需要注意去排查它是否会给你的系统带来严重的性能问题","like_count":0},{"had_liked":false,"id":316645,"user_name":"张策","can_delete":false,"product_type":"c1","uid":1434941,"ip_address":"","ucode":"471F3A9D1F158F","user_header":"https://static001.geekbang.org/account/avatar/00/15/e5/3d/e9cf1a67.jpg","comment_is_top":false,"comment_ctime":1634472781,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1634472781","product_id":100020901,"comment_content":"cpu上下文切换通常是由以下三种情况引起：1）进程上下文切换；2）线程上下文切换；3）中断。进程内发生系统调用可以触发cpu上下文的切换。进程之前的切换也会触发。进程空间划分为内核空间和用户空间，当程序需要访问io，线程切换会进行系统调用，因为这些系统只允许内核态访问。触发进程上下文切换的场景：1）进程运行完毕；2）cpu为进程分配的时间片使用完；3）进程调用sleep让出时间片；4）进程运行的资源不足被挂起；5）让出cpu给高优先级的进程运行；6）中断发生。进程上下文的切换不仅需要cpu的上下文的切换，也需要切换虚拟内存、正文、数据。线程上下文的切换：1）不同进程间的线程的上下文切换需要cpu切换，也需要虚拟内存登切换；2）相同进程内的线程切换只需要切换线程间的栈和寄存器，虚拟内存登不需要切换。中断切换：中断的优先级大于正在运行的程序，当有中断发生需要立马处理中断，此时会触发cpu的上下文切换。","like_count":0},{"had_liked":false,"id":315872,"user_name":"Ansyear","can_delete":false,"product_type":"c1","uid":1629257,"ip_address":"","ucode":"489CE96852EA2C","user_header":"https://static001.geekbang.org/account/avatar/00/18/dc/49/43ae1627.jpg","comment_is_top":false,"comment_ctime":1634028507,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1634028507","product_id":100020901,"comment_content":"Ubuntu 16.04使用sysbench测试为啥b始终是0，没有中断数据呢？","like_count":0},{"had_liked":false,"id":313931,"user_name":"格局","can_delete":false,"product_type":"c1","uid":2481167,"ip_address":"","ucode":"EDF3736A1FAA8C","user_header":"https://static001.geekbang.org/account/avatar/00/25/dc/0f/4d38b101.jpg","comment_is_top":false,"comment_ctime":1632746649,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1632746649","product_id":100020901,"comment_content":"”跟进程上下文不同，中断上下文切换并不涉及到进程的用户态。所以，即便中断过程打断了一个正处在用户态的进程，也不需要保存和恢复这个进程的虚拟内存、全局变量等用户态资源。“ 那么被打断的用户态进程，怎么恢复呢？没有保存的数据会丢失吗？","like_count":0},{"had_liked":false,"id":307877,"user_name":"Rs先生","can_delete":false,"product_type":"c1","uid":1649120,"ip_address":"","ucode":"4B09A979E106F9","user_header":"https://static001.geekbang.org/account/avatar/00/19/29/e0/35835788.jpg","comment_is_top":false,"comment_ctime":1629290598,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1629290598","product_id":100020901,"comment_content":"老师，这里是有一个疑惑的？由于系统资源不足而产生的抢占式调度与中断有什么区别？文章中的解释是系统资源不足而产生的抢占式调度的进程会被挂起，到资源满足后继续运行。但是系统资源不足而产生的抢占式调度难道不是中断的一种嘛？","like_count":0},{"had_liked":false,"id":304489,"user_name":"懒猫","can_delete":false,"product_type":"c1","uid":2538092,"ip_address":"","ucode":"094F30C802C0F6","user_header":"","comment_is_top":false,"comment_ctime":1627453107,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1627453107","product_id":100020901,"comment_content":"很棒！这不只是一门性能优化课","like_count":0},{"had_liked":false,"id":302927,"user_name":"Geek_842f07","can_delete":false,"product_type":"c1","uid":2698987,"ip_address":"","ucode":"ED772AF755FE7E","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/WP4Ge8ABcINFkccKaNYKibicFnI0JAoojBBAUGrichNeRAgzm5RGbHG7GqYrFX3ELEzenuEbicQHJy2HZ72RxSOuMA/132","comment_is_top":false,"comment_ctime":1626437035,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1626437035","product_id":100020901,"comment_content":"cpu上下文切换可以分为线程上下文切换, 进程上下文切换, 中断上下文切换, 上下文切换会占用系统资源, 影响系统性能, 上下文切换是Linux系统实现的核心功能之一,但是需要注意过多的切换可能是严重影响系统性能, 这时候就需要对系统进行分析, 或者是减少切换或者是增加系统资源等<br>还谈到了线程和进程的关系, 线程是系统资源调度的基本单位, 线程是资源拥有的基本单位,但进程只有一个线程时, 可以近似的认为进程就是线程, 而当进程拥有多个线程时, 此时同一个进程的线程可以共享进程的公共资源, 而当然线程也有自己私有的数据, 寄存器等. 所以线程上下文切换比进程上下文切换代价消耗系统资源更少一些","like_count":0},{"had_liked":false,"id":298919,"user_name":"Daniel","can_delete":false,"product_type":"c1","uid":1479124,"ip_address":"","ucode":"73EBE735898072","user_header":"https://static001.geekbang.org/account/avatar/00/16/91/d4/4a047e41.jpg","comment_is_top":false,"comment_ctime":1624374288,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1624374288","product_id":100020901,"comment_content":"今天的课程线路我整理如下：上下文、CPU上下文切换、进程上下文切换、线程上下文切换、中断上下文切换。<br>上下文：我理解为正常运行所依赖的环境<br>CPU上下文切换：CPU需要寄存器和程序计数器，才能够在新位置执行新指令，所以CPU上下文切换也就是保存当前寄存器和程序计数器，载入新值，执行完任务后，恢复原来的值；<br><br>进程上下文切换：进程所需要的资源还包括虚拟内存、栈、全局变量等，那么线程算不算进程的资源，进程切换也会切换线程吗？进程切换了肯定要执行新任务，所以对应的CPU也要进行切换，是否只能是当前这个进程所在的CPU去执行新任务，所以要切换？<br><br>线程上下文切换：线程是CPU的基础调度单元，但是线程是共享进行的虚拟内存空间的，所以线程依赖的环境是当前线程的寄存器和线程栈，如果切换的是不同进程下的线程，那么还要切换整个进程上下文。<br><br>中断上下文切换：中断应该只能是硬件进行触发的吧，只要进行CPU上下文切换，应该就满足了吧？中断里面的变量是存在内核的堆栈里面的吗？","like_count":0},{"had_liked":false,"id":295362,"user_name":"咸鱼不想练肱二","can_delete":false,"product_type":"c1","uid":2624876,"ip_address":"","ucode":"55874FA11A455E","user_header":"https://static001.geekbang.org/account/avatar/00/28/0d/6c/f707a7ca.jpg","comment_is_top":false,"comment_ctime":1622383879,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1622383879","product_id":100020901,"comment_content":"没看课程之前我还以为进程的上下文切换是进程的上文切换到下文，看了才知道原来是将下降进程的上下文切换成上升进程的上下文","like_count":0},{"had_liked":false,"id":292101,"user_name":"疯人","can_delete":false,"product_type":"c1","uid":1586002,"ip_address":"","ucode":"D1B28ED5FFE9A9","user_header":"https://static001.geekbang.org/account/avatar/00/18/33/52/77516e4c.jpg","comment_is_top":false,"comment_ctime":1620692781,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1620692781","product_id":100020901,"comment_content":"我理解的上下文切换：<br>进程：两个不同进程任务之间切换，如进程1正在执行任务，突然进程2要执行任务（高优先级），进程1只能先存储，等待进程2运行完成后（没其高优先级进程、时间片没到）再重新运行。进程之间回来切换需要消耗系统资源，如CPU、内存<br>线程：跟进程差不多。线程间切换消耗系统资源比进程切换要少，毕竟线程是在进程中切换的。<br>中断：如键盘一个操作，会造成中断。中断带来的切换，可能会造成低负载、高利用率的情况。<br>","like_count":0},{"had_liked":false,"id":289545,"user_name":"随心而至","can_delete":false,"product_type":"c1","uid":1097836,"ip_address":"","ucode":"31866865255101","user_header":"https://static001.geekbang.org/account/avatar/00/10/c0/6c/29be1864.jpg","comment_is_top":false,"comment_ctime":1619074630,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1619074630","product_id":100020901,"comment_content":"这门课更适合在学完Richard Stevens三卷本，深入理解计算机系统（CSAPP）之后学习。有了那些基础，再学本专栏，融汇贯通，利用工具定位和解决Linux性能问题。","like_count":0},{"had_liked":false,"id":289514,"user_name":"Heaven","can_delete":false,"product_type":"c1","uid":1694207,"ip_address":"","ucode":"FA33FBCC66C911","user_header":"https://static001.geekbang.org/account/avatar/00/19/d9/ff/b23018a6.jpg","comment_is_top":false,"comment_ctime":1619059115,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1619059115","product_id":100020901,"comment_content":"常见的中断任务是指的键鼠输入等外部输入,故优先级高","like_count":0},{"had_liked":false,"id":289240,"user_name":"98K","can_delete":false,"product_type":"c1","uid":2574197,"ip_address":"","ucode":"34523632D71821","user_header":"https://static001.geekbang.org/account/avatar/00/27/47/75/61da4ecf.jpg","comment_is_top":false,"comment_ctime":1618930065,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1618930065","product_id":100020901,"comment_content":"进程间线程切换的上下文切换为什么要更新虚拟地址呢?  虚拟地址不是由寄存器内的段选择因子计算来的么? 更新了段选择因子不就可以了么?","like_count":0,"discussions":[{"author":{"id":1825232,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83ersRGspOZwfckQcnzQxOzUYdw36wufiaQIic4hfmPrN5arOTuPF7aTz0leNSibs8C3nc3aDuh8CcMtOw/132","nickname":"curry30","note":"","ucode":"2A4F51CEE36F7A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":382945,"discussion_content":"应该是指虚拟内存和物理内存的映射关系表即页表，每个进程是不一样的，进程切换的时候是要刷新这个页表到CPU缓存的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1625803480,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":287586,"user_name":"Kernel Panic คิดถึง","can_delete":false,"product_type":"c1","uid":1520133,"ip_address":"","ucode":"F521D8C937DA04","user_header":"https://static001.geekbang.org/account/avatar/00/17/32/05/c125cc62.jpg","comment_is_top":false,"comment_ctime":1618040714,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1618040714","product_id":100020901,"comment_content":"运行在CPU上的任务，依赖系统帮它在CPU上设置好CPU寄存器和程序计数器， CPU 在运行任务前所依赖的环境，被叫做 CPU 上下文。<br>CPU上下文切换就是把当前任务的上下文（CPU寄存器和程序计数器）保存起来，加载新任务的上下文到CPU寄存器和程序计数器，跳转到程序计数器所批的新位置，运行新任务。<br>保存下来的上下文，会储存在系统内核中，并在任务重新调度执行时重新加载进来。<br>操作系统管理的任务包括:进程，线程，系统调用(软中断)，硬件中断(硬中断)等。<br>根据任务的不同，CPU上下文切换分为:进程上下文切换，线程上下文切换，中断上下文切换。<br>进程的运行空间分为内核空间和用户空间。<br>从用户态到内核态的转变，需要通过系统调用来完成。<br>一次系统调用的过程，其实是发生了两次 CPU 上下文切换(用户态--&gt;内核态--&gt;用户态)。<br>进程上下文切换包括进程间的上下文切换和系统调用(进程内的CPU上下文切换，称特权模式切换)。<br>进程间的上下文切换只能发生在内核态，先保存该进程的虚拟内存、栈等用户态资源，再保存当前进程的内核状态和 CPU 寄存器，加载新进程的内核态，刷新新进程的虚拟内存和用户栈等用户态资源(刷新缓存操作，影响到内存访问速度变慢)，CPU上下文在进程间的内核态中切换。(进程间上下文切换过程:保存当前进程用户态资源--&gt;保存当前进程内核态上下文--&gt;加载新进程内核态上下文--&gt;刷新新进程用户态资源)<br>系统调用属于进程内的上下文切换，因为同属一个进程，并不会涉及到虚拟内存等进程用户态的资源保存和恢复步骤(不进行刷新缓存操作，不影响内存访问速度)，也不会切换进程，但涉及用户态到内核态的转变，CPU上下文在进程内的用户态和内核态间切换(系统调用过程:保存当前进程用户态上下文&lt;CPU寄存器和程序计数器&gt; --&gt; 加载内核态上下文 --&gt; 恢复当前进程用户态上下文)<br>线程是调度的基本单位，而进程则是资源拥有的基本单位。<br>内核中的任务调度，实际上的调度对象是线程；而进程只是给线程提供了虚拟内存、全局变量等共享资源。<br>进程间的线程上下文切换，因为资源不共享，切换过程跟进程切换一样(切换过程:保存当前进程用户态--&gt;保存当前进程内核态--&gt;保存当前线程私有数据、寄存器等数据--&gt;加载新进程内核态--&gt;加载新进程用户态--&gt;加载新进程中线程私有数据、寄存器等数据)<br>进程内的线程上下文切换，因为虚拟内存是共享的，在切换时，虚拟内存这些资源就保持不动，只需要切换线程的私有数据、寄存器等不共享的数据。<br>中断上下文切换并不涉及到进程的用户态。所以，即便中断过程打断了一个正处在用户态的进程，也不需要保存和恢复这个进程的虚拟内存、全局变量等用户态资源。中断上下文，其实只包括内核态中断服务程序执行所必需的状态，包括 CPU 寄存器、内核堆栈、硬件中断参数等(中断上下文切换过程:保存当前进程的内核态上下文--&gt;加载中断服务程序的内核态上下文--&gt;恢复当前进程的内核态上下文)<br>对同一个 CPU 来说，中断处理比进程拥有更高的优先级<br>进程调度的时机:CPU时间片的耗尽，系统资源不足，sleep函数的调用，运行高优先级进程，硬中断的触发。","like_count":0},{"had_liked":false,"id":282624,"user_name":"babala","can_delete":false,"product_type":"c1","uid":1856958,"ip_address":"","ucode":"F0F06865D328A6","user_header":"https://static001.geekbang.org/account/avatar/00/1c/55/be/23b0fa67.jpg","comment_is_top":false,"comment_ctime":1615343053,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1615343053","product_id":100020901,"comment_content":"虚拟化四个虚拟机，两台安装maridb，同时压数据库另外一台虚拟机假死。cpu硬件中断很高。虚拟机的cpu和核是绑定单独分配的，怎么着手解决。","like_count":0},{"had_liked":false,"id":278235,"user_name":"骆正祺","can_delete":false,"product_type":"c1","uid":2026062,"ip_address":"","ucode":"881DBB7EBA3FBE","user_header":"https://static001.geekbang.org/account/avatar/00/1e/ea/4e/2b982851.jpg","comment_is_top":false,"comment_ctime":1612838765,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1612838765","product_id":100020901,"comment_content":"跟进程上下文不同，中断上下文切换并不涉及到进程的用户态。所以，即便中断过程打断了一个正处在用户态的进程，也不需要保存和恢复这个进程的虚拟内存、全局变量等用户态资源。中断上下文，其实只包括内核态中断服务程序执行所必需的状态，包括 CPU 寄存器、内核堆栈、硬件中断参数等  -----  为啥不需要保存和恢复这个进程的虚拟内存？","like_count":0},{"had_liked":false,"id":277798,"user_name":"🐍nbboy","can_delete":false,"product_type":"c1","uid":1058235,"ip_address":"","ucode":"BEE4EA5ABE966F","user_header":"https://static001.geekbang.org/account/avatar/00/10/25/bb/038d5de6.jpg","comment_is_top":false,"comment_ctime":1612595135,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1612595135","product_id":100020901,"comment_content":"所以，即便中断过程打断了一个正处在用户态的进程，也不需要保存和恢复这个进程的虚拟内存、全局变量等用户态资源。<br><br>老师这句话有个疑问，如果不保存这些信息，中断执行好后，怎么回来继续执行呢？","like_count":0},{"had_liked":false,"id":277272,"user_name":"Monday","can_delete":false,"product_type":"c1","uid":1250907,"ip_address":"","ucode":"77B9BACC783598","user_header":"https://static001.geekbang.org/account/avatar/00/13/16/5b/83a35681.jpg","comment_is_top":false,"comment_ctime":1612340303,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1612340303","product_id":100020901,"comment_content":"我理解一个进程的时间片耗尽后，下一个时间片也可能继续运行吧。","like_count":0},{"had_liked":false,"id":277268,"user_name":"Monday","can_delete":false,"product_type":"c1","uid":1250907,"ip_address":"","ucode":"77B9BACC783598","user_header":"https://static001.geekbang.org/account/avatar/00/13/16/5b/83a35681.jpg","comment_is_top":false,"comment_ctime":1612339011,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1612339011","product_id":100020901,"comment_content":"而这些保存下来的上下文，会存储在系统内核中，并在任务重新调度执行时再次加载进来。这样就能保证任务原来的状态不受影响，让任务看起来还是连续运行。<br><br>上下文难道不是内存中？ 我理解内核也是一个运行的程序，也是要跑在硬件上的。比如内存，寄存器等中。。。","like_count":0},{"had_liked":false,"id":271207,"user_name":"pythonista","can_delete":false,"product_type":"c1","uid":1493954,"ip_address":"","ucode":"CE117439281B93","user_header":"https://static001.geekbang.org/account/avatar/00/16/cb/c2/abd584db.jpg","comment_is_top":false,"comment_ctime":1609469383,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1609469383","product_id":100020901,"comment_content":"特别是在多处理器系统上，缓存是被多个处理器共享的－－－－－－－－这个说法有问题吧？一级和二级缓存是每个cpu独有的,3级缓存和物理内存是多个cpu共享的. 刷新缓存可能需要在多个cpu间进行缓存同步.<br>","like_count":0},{"had_liked":false,"id":271087,"user_name":"HelloGodbyeHello","can_delete":false,"product_type":"c1","uid":1365484,"ip_address":"","ucode":"E51EBE9DCBE10B","user_header":"https://static001.geekbang.org/account/avatar/00/14/d5/ec/8eff588b.jpg","comment_is_top":false,"comment_ctime":1609397582,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1609397582","product_id":100020901,"comment_content":"Linux 是一个多任务操作系统，它支持远大于 CPU 数量的任务同时运行。当然，这些任务实际上并不是真的在同时运行，而是因为系统在很短的时间内，将 CPU 轮流分配给它们，造成多任务同时运行的错觉。所以多核cpu在linux操作系统其实还是单核的效果？","like_count":0},{"had_liked":false,"id":269965,"user_name":"zero","can_delete":false,"product_type":"c1","uid":1453477,"ip_address":"","ucode":"043A2592D72B82","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKDfO7wKibzpwibe77IMkrYWW6KWuOTFESP90VvCQKIupibAQuchdRibVvGpsB6b8bNIZicp7Fia7cqZx8Q/132","comment_is_top":false,"comment_ctime":1608864065,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1608864065","product_id":100020901,"comment_content":"每次上下文切换都需要几十纳秒到数微秒的 CPU 时间<br>---<br>这个没有很理解。这个成本是一次CPU上下文切换的成本？还是一次进程上下文切换到的成本？ 我理解一次进程上下文切换包括了多次CPU上下文切换","like_count":0},{"had_liked":false,"id":269412,"user_name":"Geek_065895","can_delete":false,"product_type":"c1","uid":2136069,"ip_address":"","ucode":"2E6FCCC78E5767","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/rxz5aKicRkvqWmt6c6c7eayHvh577uibBTVQzcJKwSTqI9FaxZSRlx7NRVw4atWpqER8ncA5jErQb3wb4cPzZxlA/132","comment_is_top":false,"comment_ctime":1608636037,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1608636037","product_id":100020901,"comment_content":"03总结<br>关键词:CPU上下文切换,进程上下文切换,线程上下文切换,中断上下文切换,系统调用<br><br><br>知识点:<br>\t1. CPU上下文切换:CPU 上下文切换，就是先把前一个任务的 CPU 上下文（也就是 CPU 寄存器和程序计数器）保存起来，然后加载新任务的上下文到这些寄存器和程序计数器，最后再跳转到程序计数器所指的新位置，运行新任务。<br>\t2. 进程上下文切换:切换开销大,要在用户空间和内核空间更新.而且TLB也需要更新<br>\t3. 线程上下文切换:如果线程属于同一进程,开销小.只需要进行CPU更新<br>\t4. 中断上下文切换:只在内核空间更新<br>\t5. 系统调用:从用户空间到内核空间的转换,发生两次CPU上下文切换<br>","like_count":0},{"had_liked":false,"id":266115,"user_name":"╰ kenny","can_delete":false,"product_type":"c1","uid":1646810,"ip_address":"","ucode":"DE567B830E8106","user_header":"https://static001.geekbang.org/account/avatar/00/19/20/da/94169280.jpg","comment_is_top":false,"comment_ctime":1607174365,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1607174365","product_id":100020901,"comment_content":"您好咨询个问题<br>引用&quot;CPU 上下文切换，就是先把前一个任务的 CPU 上下文（也就是 CPU 寄存器和程序计数器）保存起来，然后加载新任务的上下文到这些寄存器和程序计数器，最后再跳转到程序计数器所指的新位置，运行新任务。&quot;<br>其中“加载新任务的上下文到这些寄存器和程序计数器”，新任务的上下文指的是？新任务的CPU上下文吗？那&quot;加载到这些寄存器和程序计数器&quot;中这些指的是？为什么要把新任务的CPU上下文加载到寄存器和程序计数器？","like_count":0},{"had_liked":false,"id":263585,"user_name":"张涛","can_delete":false,"product_type":"c1","uid":1825417,"ip_address":"","ucode":"78B1A95F89E6DA","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83errr36kXHkxMhIEGgDibzrdwIQaBhxQBORfOqw5ibQIV4rznfCLssqJTJaVSoyVPHM5eWuiahKx5elwQ/132","comment_is_top":false,"comment_ctime":1606190118,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1606190118","product_id":100020901,"comment_content":"讲了几种上下文切换的时间消耗差异性；要深入理解的话，得去看一看CPU架构相关知识，然后再分析下Linux内核在进程切换、中断发生时的具体处理方式","like_count":0},{"had_liked":false,"id":263580,"user_name":"张涛","can_delete":false,"product_type":"c1","uid":1825417,"ip_address":"","ucode":"78B1A95F89E6DA","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83errr36kXHkxMhIEGgDibzrdwIQaBhxQBORfOqw5ibQIV4rznfCLssqJTJaVSoyVPHM5eWuiahKx5elwQ/132","comment_is_top":false,"comment_ctime":1606188224,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1606188224","product_id":100020901,"comment_content":"”我想你一定很好奇，进程在竞争 CPU 的时候并没有真正运行，为什么还会导致系统的负载升高呢？看到今天的主题，你应该已经猜到了，CPU 上下文切换就是罪魁祸首。“这里有点疑惑，负载不是等待CPU习性进程数+不可中断进程数；竞争CPU怎么会导致负载升高哦","like_count":0},{"had_liked":false,"id":262614,"user_name":"莫非","can_delete":false,"product_type":"c1","uid":1407358,"ip_address":"","ucode":"91F564D1C5671E","user_header":"https://static001.geekbang.org/account/avatar/00/15/79/7e/11d3bb67.jpg","comment_is_top":false,"comment_ctime":1605780379,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1605780379","product_id":100020901,"comment_content":"有没有比中断处理更高优先级得处理？中断处理会被打断么？如果打断了还会被唤醒么？","like_count":0},{"had_liked":false,"id":254506,"user_name":"一粒","can_delete":false,"product_type":"c1","uid":1582813,"ip_address":"","ucode":"FB5F583CC6AE3C","user_header":"https://static001.geekbang.org/account/avatar/00/18/26/dd/d58156b1.jpg","comment_is_top":false,"comment_ctime":1603120881,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1603120881","product_id":100020901,"comment_content":"老师，内核态时进程会用到用户态时的内存资源吗","like_count":0},{"had_liked":false,"id":253603,"user_name":"牛牛01","can_delete":false,"product_type":"c1","uid":1134722,"ip_address":"","ucode":"3D6A0B0283EF43","user_header":"https://static001.geekbang.org/account/avatar/00/11/50/82/eb5713bb.jpg","comment_is_top":false,"comment_ctime":1602810447,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1602810447","product_id":100020901,"comment_content":"感谢老师、收获挺多的~、我理解的上下文切换:<br>1. CPU上下文切换可能是三种原因导致的: <br>   1) 进程上下文切换<br>   2) 线程上下文切换<br>   3) 响应中断<br>2. 那么它们之间有什么区别呢 ?<br>   1) 中断上下文不涉及用户态、即时被打断的是正在运行中的用户态进程、也不需要保存用户态的资源, 只需要保存CPU寄存器、内核堆栈、中断参数等<br>   2) 进程上下文切换一定是发生在内核态(进程是由内核管理和调度的), 所以进程切换需要保存的资源包括用户态资源(虚拟内存、堆栈信息、全局变量等) 和 内核资源(CPU寄存器、内核堆栈、程序计数器等)<br>   3) 线程上下文切换, 线程切换分为两种. (线程是调度的基本单位、进程是资源的基本单位)<br>       一种是 一个进程只有一个线程, 这种就等价于进程切换<br>       一种是 一个进程有多个线程, 同属于一个进程的线程切换, 就不需要保存虚拟内存、全部变量等信息、只需要保存线程私有的程序计数器、寄存器等私有资源  和 内核资源<br>3. 那么思考一下、什么情况下会导致进程重新调度 ？<br>   1). 进程运行完成、自然终止<br>   2). CPU时间片耗尽<br>   3). 系统资源不足、先调度其它进程<br>   4). 调用sleep主动挂起<br>   5). 有优先级较高的进程需要调度<br>   6). 响应系统中断<br>总之, CPU上下文的切换是需要资源的、如果大量的上下文切换、会导致CPU时间大量的耗在寄存器、计数器、虚拟内存等资源的保存和恢复上, 从而进程真正运行的时间减少, 如果上下文切换很频繁、我们需要及时排查原因<br>       ","like_count":0},{"had_liked":false,"id":253534,"user_name":"记忆","can_delete":false,"product_type":"c1","uid":1316682,"ip_address":"","ucode":"503DBE662BF544","user_header":"https://static001.geekbang.org/account/avatar/00/14/17/4a/d8fd5563.jpg","comment_is_top":false,"comment_ctime":1602769591,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1602769591","product_id":100020901,"comment_content":"调度系统为每个调度任务分配的执行时间一般是多少啊老师？","like_count":0},{"had_liked":false,"id":253219,"user_name":"ds00hy","can_delete":false,"product_type":"c1","uid":2221813,"ip_address":"","ucode":"CE35C035E420AC","user_header":"https://static001.geekbang.org/account/avatar/00/21/e6/f5/0757977c.jpg","comment_is_top":false,"comment_ctime":1602654366,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1602654366","product_id":100020901,"comment_content":"有一个问题不是很理解，老师文中说：“即便中断过程打断了一个正处在用户态的进程，也不需要保存和恢复这个进程的虚拟内存、全局变量等用户态资源。”  如果不保存的话，是中断过程不会影响虚拟内存等用户态资源吗？因此等中断操作结束了，然后转换到之前被中断的进程的时候，这些用户资源对进程而言没有任何变化，就可以直接使用了吗？","like_count":0},{"had_liked":false,"id":247590,"user_name":"bbnb","can_delete":false,"product_type":"c1","uid":2160520,"ip_address":"","ucode":"B4ECF691C1584B","user_header":"https://static001.geekbang.org/account/avatar/00/20/f7/88/d39764dd.jpg","comment_is_top":false,"comment_ctime":1599749299,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1599749299","product_id":100020901,"comment_content":"老师，进程的上下文切换不会涉及用户态和内核态之间的转换，那线程呢","like_count":0},{"had_liked":false,"id":245715,"user_name":"jacky","can_delete":false,"product_type":"c1","uid":1043375,"ip_address":"","ucode":"CA680B02320539","user_header":"https://static001.geekbang.org/account/avatar/00/0f/eb/af/b893c7e2.jpg","comment_is_top":false,"comment_ctime":1599034340,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1599034340","product_id":100020901,"comment_content":"上下文切换不可避免，但多少切换是合理的？我一直有个疑问，线程过载会导致频繁的上下文切换，然后用vmstat去查看，cs 列有一串数字，但怎么知道这个值合不合理呢？","like_count":0},{"had_liked":false,"id":245483,"user_name":"送过快递的码农","can_delete":false,"product_type":"c1","uid":1587666,"ip_address":"","ucode":"66EA81B3BADC73","user_header":"https://static001.geekbang.org/account/avatar/00/18/39/d2/845c0e39.jpg","comment_is_top":false,"comment_ctime":1598957201,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1598957201","product_id":100020901,"comment_content":"我有个问题啊 比如有段java代码<br>for(int i=0;i&lt;10000;i++){<br>     System.out.println(&quot;Hello World!&quot;);<br>}<br>是不是发生了20000次上下文切换 我们每次System.out.println()语句，都会系统调用，每次都会从用户态切换倒内核态，执行完再内核态切换倒用户态继续执行（每次都是用户线程切换内核线程，内核线程再切换用户线程，这是我的理解） 所以是20000次上下文切换","like_count":0},{"had_liked":false,"id":244071,"user_name":"数学汤家凤","can_delete":false,"product_type":"c1","uid":2029485,"ip_address":"","ucode":"DE84E777C384AD","user_header":"https://static001.geekbang.org/account/avatar/00/1e/f7/ad/4fd4d867.jpg","comment_is_top":false,"comment_ctime":1598372054,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1598372054","product_id":100020901,"comment_content":"老师好，进程上下文切换要切换虚拟内存这一点我有点懵<br>1. 切换虚拟内存的意思是把原来的写入磁盘，再把磁盘中的写入内存吗？<br>2. 如果是 1. 的意思，切换到进程 2 把原先的进程 1 中在内存的数据写入磁盘，再从磁盘中把进程 2 的数据读入内存咯？<br>3. 同一个进程的虚拟内存也不一定全部读入内存，当物理内存不足时，也会把部分数据写入磁盘，腾出空间吧？那按照 1. 的定义，这就算没有切换进程，但虚拟内存也在切换呀。。。","like_count":0},{"had_liked":false,"id":243795,"user_name":"凯","can_delete":false,"product_type":"c1","uid":1405256,"ip_address":"","ucode":"60DB11CF72C7B0","user_header":"https://static001.geekbang.org/account/avatar/00/15/71/48/44df7f4e.jpg","comment_is_top":false,"comment_ctime":1598278516,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1598278516","product_id":100020901,"comment_content":"https:&#47;&#47;www.yuque.com&#47;docs&#47;share&#47;5e7f68b1-6251-4c48-8dac-2950595a86dd?inner=oHnKA   3种类型的切换是不是可以按照这个表中理解，不过感觉怪怪的","like_count":0,"discussions":[{"author":{"id":1363634,"avatar":"https://static001.geekbang.org/account/avatar/00/14/ce/b2/1f914527.jpg","nickname":"海盗船长","note":"","ucode":"ECB28BA21A4113","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":332477,"discussion_content":"凯，内容不存在或无权限访问","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1607234821,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":243743,"user_name":"杯莫停","can_delete":false,"product_type":"c1","uid":1759325,"ip_address":"","ucode":"4FA1D5CBBEF702","user_header":"https://static001.geekbang.org/account/avatar/00/1a/d8/5d/07dfb3b5.jpg","comment_is_top":false,"comment_ctime":1598262548,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1598262548","product_id":100020901,"comment_content":"这篇干货有点多，读完后根据自己的理解，加上老师的图我写了一篇博客。以前只知道上下文切换的概念，不知道原理。看完这个后感觉收获了不少。至少跟别人吹牛也有的吹了。","like_count":0},{"had_liked":false,"id":240394,"user_name":"叶林生--Tab","can_delete":false,"product_type":"c1","uid":1264437,"ip_address":"","ucode":"EA376AE0D2639A","user_header":"https://static001.geekbang.org/account/avatar/00/13/4b/35/a6565494.jpg","comment_is_top":false,"comment_ctime":1596886376,"is_pvip":false,"replies":[{"id":"88785","content":"针对用户空间的","user_name":"作者回复","user_name_real":"倪朋飞","uid":"1001282","ctime":1596977336,"ip_address":"","comment_id":240394,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1596886376","product_id":100020901,"comment_content":"线程的切换中需要保存当前线程的栈信息，这个栈是否是包含了用户空间的栈和内核空间的栈，还是只是保存了用户空间的线程栈？","like_count":0,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":503427,"discussion_content":"针对用户空间的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1596977336,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":239988,"user_name":"wy","can_delete":false,"product_type":"c1","uid":1801722,"ip_address":"","ucode":"DC799CA81F73BE","user_header":"https://static001.geekbang.org/account/avatar/00/1b/7d/fa/4f058648.jpg","comment_is_top":false,"comment_ctime":1596707146,"is_pvip":false,"replies":[{"id":"88788","content":"可以参考一下第9篇中断的工作原理 ","user_name":"作者回复","user_name_real":"倪朋飞","uid":"1001282","ctime":1596977777,"ip_address":"","comment_id":239988,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1596707146","product_id":100020901,"comment_content":"跟进程上下文不同，中断上下文切换并不涉及到进程的用户态。所以，即便中断过程打断了一个正处在用户态的进程，也不需要保存和恢复这个进程的虚拟内存、全局变量等用户态资源。<br><br>这里没看懂，烦请老师解释下。谢谢","like_count":0,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":503296,"discussion_content":"可以参考一下第9篇中断的工作原理 ","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1596977777,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":238160,"user_name":"万历十五年","can_delete":false,"product_type":"c1","uid":1122150,"ip_address":"","ucode":"3D8CF5DF847AE8","user_header":"https://static001.geekbang.org/account/avatar/00/11/1f/66/59e0647a.jpg","comment_is_top":false,"comment_ctime":1596083168,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1596083168","product_id":100020901,"comment_content":"飞哥，系统调用应该也会有可能产生进程切换吧？我的理解是因为在系统调用中由内核态返回时会发生一次调度，此时有可能返回到相同进程，也有可能返回到其他进程，不知这样理解是否正确？","like_count":0},{"had_liked":false,"id":236414,"user_name":"J.Smile","can_delete":false,"product_type":"c1","uid":1336475,"ip_address":"","ucode":"C4D98DFDBF7584","user_header":"https://static001.geekbang.org/account/avatar/00/14/64/9b/0b578b08.jpg","comment_is_top":false,"comment_ctime":1595410453,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1595410453","product_id":100020901,"comment_content":"总结：<br>--CPU上下文是什么？<br>CPU 寄存器，是 CPU 内置的容量小、但速度极快的内存。而程序计数器，则是用来存储 <br>CPU 正在执行的指令位置、或者即将执行的下一条指令位置。<br>它们都是 CPU 在运行任何任务前，必须的依赖环境，因此也被叫做 CPU 上下文<br>在每个任务运行前，CPU 都需要知道任务从哪里加载、又从哪里开始运行，也就是说，需要系统事先帮它设置好 CPU 寄存器和程序计数器<br><br>--CPU上下文切换的过程。<br>\tCPU 上下文切换，就是先把前一个任务的 CPU 上下文（也就是 CPU 寄存器和程序计数器）保存起来，然后加载新任务的上下文到这些寄存器和程序计数器，最后再跳转到程序计数器所指的新位置，运行新任务。而这些保存下来的上下文，会存储在系统内核中，并在任务重新调度执行时再次加载进来。这样就能保证任务原来的状态不受影响，让任务看起来还是连续运行。<br><br><br>--CPU上下文切换的场景：<br>\t根据任务的不同，CPU 的上下文切换就可以分为几个不同的场景，也就是进程上下文切换、线程上下文切换以及中断上下文切换。<br><br><br>--用户态和内核态<br>\t进程既可以在用户空间运行，又可以在内核空间中运行。<br>\t进程在用户空间运行时，被称为进程的用户态，而陷入内核空间的时候，被称为进程的内核态。<br>从用户态到内核态的转变，需要通过系统调用。<br><br><br>--用户系统调用过程涉及的cpu上下文切换：<br>1 保存cpu寄存器中原来用户态指令位置。<br>2 更新cpu寄存器中为内核态指令位置。<br>3 跳转到内核态执行内核任务。<br>4 系统调用结束，cpu寄存器恢复原来用户态数据。<br>5 切换到用户空间，继续运行进程。<br><br><br>--系统调用与进程上下文切换的不同点：<br>①- 进程上下文切换，是特权模式切换，是指从一个进程切换到另一个进程运行。进程的切换只能发生在内核态。<br>- 系统调用过程中一直是同一个进程在运行，在运行中进程cpu上下文切换。<br>②进程的上下文切换就比系统调用时多了一步：在保存当前进程的内核状态和 CPU 寄存器之前，需要先把该进程的虚拟内存、栈等保存下来；而加载了下一进程的内核态后，还需要刷新进程的虚拟内存和用户栈。<br>③ 存上下文和恢复上下文的过程并不是“免费”的，需要内核在 CPU 上运行才能完成。每次上下文切换都需要几十纳秒到数微秒的 CPU 时间。在进程上下文切换次数较多的情况下，很容易导致 CPU 将大量时间耗费在寄存器、内核栈以及虚拟内存等资源的保存和恢复上，进而大大缩短了真正运行进程的时间------导致系统负载升高。<br>④进程上下文的切换是在进程调度时进程的，Linux 为每个 CPU 都维护了一个就绪队列，将活跃进程（即正在运行和正在等待 CPU 的进程）按照优先级和等待 CPU 的时间排序，然后选择优先级最高和等待 CPU 时间最长的进程来运行。<br><br><br>-- 进程调度触发场景：<br>① cpu分配时间片给各个进程，时间片用完，cpu切换调度进程。<br>②进程资源不足被挂起，cpu切换调度进程。<br>③进程sleep休眠主动挂起，cpu切换调度进程。<br>④更高优先级运行，挂起低优先级进程。<br>⑤硬件中断事件发生，cpu上的进程中断挂起，转而执行内核中断服务程序。<br><br><br><br>--进程和线程的区别与联系+线程上下文切换<br>①线程是调度的基本单位，而进程则是资源拥有的基本单位。<br>②内核调度对象是线程；而进程只是给线程提供了虚拟内存、全局变量等资源。<br>③当进程只有一个线程时，可以认为进程就等于线程。<br>④当进程拥有多个线程时，多线程共享虚拟内存、全局变量等资源；线程上下文切换不需要修改资源。<br>⑤线程也有自己的私有数据，比如栈和寄存器；这些私有资源在线程上下文切换时是需要保存的。<br><br><br>-- 中断上下文切换<br>① 中断发生时，系统打断其他进程，保存当前进程状态。<br>②但不需要保存进程的虚拟内存、全局变量，只需要保存内核态中断服务程序执行所必需的状态，包括 CPU 寄存器、内核堆栈、硬件中断参数等<br>③对同一个 CPU 来说，中断处理比进程拥有更高的优先级，中断上下文切换也需要消耗 CPU。<br>","like_count":0},{"had_liked":false,"id":236297,"user_name":"Dr.阿立","can_delete":false,"product_type":"c1","uid":2070893,"ip_address":"","ucode":"40D3D8F8210FE0","user_header":"https://static001.geekbang.org/account/avatar/00/1f/99/6d/9d3e3675.jpg","comment_is_top":false,"comment_ctime":1595387329,"is_pvip":false,"replies":[{"id":"87361","content":"是的，非常准确","user_name":"作者回复","user_name_real":"倪朋飞","uid":"1001282","ctime":1595427721,"ip_address":"","comment_id":236297,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1595387329","product_id":100020901,"comment_content":"其四，当有优先级更高的进程运行时，为了保证高优先级进程的运行，当前进程会被挂起，由高优先级进程来运行。<br>关于这一点，我个人理解，优先级高的进程应该是获取更多的时间片吧，而当实时进程需要运行的时候才会挂起当前非实时进程，linux内核机制是抢占式的吧？","like_count":0,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":502021,"discussion_content":"是的，非常准确","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1595427721,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":236080,"user_name":"酸辣土豆丝","can_delete":false,"product_type":"c1","uid":1751234,"ip_address":"","ucode":"0E3E4AFB31E1E6","user_header":"https://static001.geekbang.org/account/avatar/00/1a/b8/c2/d1904d74.jpg","comment_is_top":false,"comment_ctime":1595307908,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1595307908","product_id":100020901,"comment_content":"CPU上下文切换，本质是不同程序的运行切换，而不同的程序切换，分为进程之间切换，线程之间切换，底层硬件中断","like_count":0},{"had_liked":false,"id":235951,"user_name":"Star","can_delete":false,"product_type":"c1","uid":1074562,"ip_address":"","ucode":"B7607FC3E4A7C6","user_header":"https://static001.geekbang.org/account/avatar/00/10/65/82/a1370ec4.jpg","comment_is_top":false,"comment_ctime":1595254388,"is_pvip":false,"replies":[{"id":"87251","content":"进程调度是操作系统的基本功能，切换只能在内核态发生。内核态的程序也是一样的，Linux上也会运行很多内核线程负责不同的操作系统功能。","user_name":"作者回复","user_name_real":"倪朋飞","uid":"1001282","ctime":1595342983,"ip_address":"","comment_id":235951,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1595254388","product_id":100020901,"comment_content":"进程或线程，切换只发生在内核态？如果程序一直在内核态有个耗时的操作，cpu怎么调度的？","like_count":0,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":501894,"discussion_content":"进程调度是操作系统的基本功能，切换只能在内核态发生。内核态的程序也是一样的，Linux上也会运行很多内核线程负责不同的操作系统功能。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1595342983,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":235560,"user_name":"t-mac","can_delete":false,"product_type":"c1","uid":1477630,"ip_address":"","ucode":"F648100D8D7C8F","user_header":"https://static001.geekbang.org/account/avatar/00/16/8b/fe/f2b2ae63.jpg","comment_is_top":false,"comment_ctime":1595085628,"is_pvip":false,"replies":[{"id":"87263","content":"1. 内核维护每个进程时需要知道每个进程的状态并且通过CPU寄存器来调度进程运行。<br>2. 请参考后面的内存性能篇。","user_name":"作者回复","user_name_real":"倪朋飞","uid":"1001282","ctime":1595343676,"ip_address":"","comment_id":235560,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1595085628","product_id":100020901,"comment_content":"“首先，你需要知道，进程是由内核来管理和调度的，进程的切换只能发生在内核态。所以，进程的上下文不仅包括了虚拟内存、栈、全局变量等用户空间的资源，还包括了内核堆栈、寄存器等内核空间的状态。因此，进程的上下文切换就比系统调用时多了一步：在保存当前进程的内核状态和 CPU 寄存器之前，需要先把该进程的虚拟内存、栈等保存下来；而加载了下一进程的内核态后，还需要刷新进程的虚拟内存和用户栈。”<br>这里不太明白 还望老师解答 ， <br>1. 进程的上下文为啥会包括内核空间的状态？ <br>2. 这里刷新进程的虚拟内存具体是操作啥呢？<br>","like_count":0,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":501767,"discussion_content":"1. 内核维护每个进程时需要知道每个进程的状态并且通过CPU寄存器来调度进程运行。\n2. 请参考后面的内存性能篇。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1595343676,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":235267,"user_name":"董飞","can_delete":false,"product_type":"c1","uid":1693828,"ip_address":"","ucode":"4A4A13C4A971E3","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/6Be8vjNk03LEXMl52vONOQvdKTL1MWPR6OsAGEDsHIZXw9FibW8c4YtNL6HAmB8wRkDNIEx15xawJ9PWLW4y1UA/132","comment_is_top":false,"comment_ctime":1594956682,"is_pvip":false,"replies":[{"id":"87357","content":"推荐找一本操作系统书籍看一下中断的原理","user_name":"作者回复","user_name_real":"倪朋飞","uid":"1001282","ctime":1595427214,"ip_address":"","comment_id":235267,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1594956682","product_id":100020901,"comment_content":"老师，什么原因会导致中断呢？","like_count":0,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":501664,"discussion_content":"推荐找一本操作系统书籍看一下中断的原理","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1595427214,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":235264,"user_name":"董飞","can_delete":false,"product_type":"c1","uid":1693828,"ip_address":"","ucode":"4A4A13C4A971E3","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/6Be8vjNk03LEXMl52vONOQvdKTL1MWPR6OsAGEDsHIZXw9FibW8c4YtNL6HAmB8wRkDNIEx15xawJ9PWLW4y1UA/132","comment_is_top":false,"comment_ctime":1594955394,"is_pvip":false,"replies":[{"id":"87358","content":"进程和线程切换这叫进程调度，跟中断不是一个含义。推荐翻一下操作系统书籍，了解一下中断的含义。","user_name":"作者回复","user_name_real":"倪朋飞","uid":"1001282","ctime":1595427385,"ip_address":"","comment_id":235264,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1594955394","product_id":100020901,"comment_content":"老师，有个问题。进程切换进程，不同程序的线程切换都会中断吗？中断是不是伴随着上下文切换？中断会导致上下文切换，中断和上下文切换还有什么关系？<br>","like_count":0,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":501662,"discussion_content":"进程和线程切换这叫进程调度，跟中断不是一个含义。推荐翻一下操作系统书籍，了解一下中断的含义。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1595427385,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":233544,"user_name":"qmq","can_delete":false,"product_type":"c1","uid":2056745,"ip_address":"","ucode":"7F1405C08D20C4","user_header":"","comment_is_top":false,"comment_ctime":1594350641,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1594350641","product_id":100020901,"comment_content":"即便中断过程打断了一个正处在用户态的进程，也不需要保存和恢复这个进程的虚拟内存、全局变量等用户态资源<br>这一部分不是很理解","like_count":0},{"had_liked":false,"id":233144,"user_name":"FD","can_delete":false,"product_type":"c1","uid":2052521,"ip_address":"","ucode":"ED396BD322489E","user_header":"https://static001.geekbang.org/account/avatar/00/1f/51/a9/741b5ad9.jpg","comment_is_top":false,"comment_ctime":1594250334,"is_pvip":false,"replies":[{"id":"86947","content":"这里的意思是中断在内核态执行，不需要保存和恢复用户态进程的现场。","user_name":"作者回复","user_name_real":"倪朋飞","uid":"1001282","ctime":1594995234,"ip_address":"","comment_id":233144,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1594250334","product_id":100020901,"comment_content":"“跟进程上下文不同，中断上下文切换并不涉及到进程的用户态。所以，即便中断过程打断了一个正处在用户态的进程，也不需要保存和恢复这个进程的虚拟内存、全局变量等用户态资源。”这点不是太明白，既然中断发生，那被中断的程序的现场不是也需要保护吗？不保护的话，中断执行完，怎么恢复程序？","like_count":0,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":500911,"discussion_content":"这里的意思是中断在内核态执行，不需要保存和恢复用户态进程的现场。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1594995234,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":230479,"user_name":"生活不如诗","can_delete":false,"product_type":"c1","uid":1139515,"ip_address":"","ucode":"FD48EABEEC52B7","user_header":"https://static001.geekbang.org/account/avatar/00/11/63/3b/c5cd68ab.jpg","comment_is_top":false,"comment_ctime":1593397890,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1593397890","product_id":100020901,"comment_content":"cpu发生上下文切换导致导致性能下降的原因是因为cpu进行上下文切换的时候会把进程的寄存器，内核栈和虚拟内存进行保存，然后恢复另一个进程的寄存器，内核栈和虚拟内存。这些资源在进行切换的时候会消耗几十纳秒到微秒的cpu时间，如果频发发生上下文切换，会导致系统性能下降。<br>上下文切换分如下情形：<br> 1. 进程上下文切换；<br> 2. 线程上下文切换；<br> 3. 中断上下文切换；<br>进程上下文切换的5种情况：<br> 1. 分配给进程的cpu时间片用完会导致进程挂起；<br> 2. 进程运行所需的资源得不到满足，会挂起进程，等资源满足再切换回来；<br> 3. 遇到优先级高的进程，会挂起；<br> 4. 进程调用sleep()，会主动挂起；<br> 5. 遇到硬件终端，会主动挂起，转而执行内核中的中断程序；<br>线程上下文切换：<br> 1. 不同进程的不同线程切换，和进程切换是一样的；<br> 2. 同进程的不同线程切换的情况，线程的虚拟内存不会切换，只会切换寄存器，私有数据和线程不共享的数据。所以线程上下文切换比进程上下文切换对性能影响要下；<br>中断上下文切换：<br> 1. 为了快速响应硬件事件，会发生中断上下文切换。中断上下文切换即时打断了正在运行的用户态进程，也不需要保存进程的虚拟内存，全局变量等用户态资源","like_count":0},{"had_liked":false,"id":227458,"user_name":"sky","can_delete":false,"product_type":"c1","uid":1008071,"ip_address":"","ucode":"9FE5F43055D3AB","user_header":"https://static001.geekbang.org/account/avatar/00/0f/61/c7/b64ac05e.jpg","comment_is_top":false,"comment_ctime":1592384672,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1592384672","product_id":100020901,"comment_content":"我有个疑问,CPU 的上下文切换就可以分为几个不同的场景，也就是进程上下文切换、线程上下文切换以及中断上下文切换, 那么 当进程处于用户态对文件读写操作发生的2次CPU 切换是上面三者中的哪种呢? 1:应该处于同一个进程内  2:也没有开启新线程  3:这里是发生中断了么?属于中断上下文切换?","like_count":0},{"had_liked":false,"id":224026,"user_name":"leo","can_delete":false,"product_type":"c1","uid":2029512,"ip_address":"","ucode":"C86E58D9FDFD87","user_header":"","comment_is_top":false,"comment_ctime":1591258450,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1591258450","product_id":100020901,"comment_content":"当有网络请求或网络数据到达服务器时，这时候是否会发生中断上下文切换，还是进程上下文切换，来处理网络请求？","like_count":0},{"had_liked":false,"id":223282,"user_name":"Trident","can_delete":false,"product_type":"c1","uid":1609530,"ip_address":"","ucode":"53E6788CF33398","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/l4nngwyggBGqeMXC0micwO8bM1hSttgQXa1Y5frJSqWa8NibDhia5icwPcHM5wOpV3hfsf0UicDY0ypFqnQ3iarG0T1w/132","comment_is_top":false,"comment_ctime":1591055589,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1591055589","product_id":100020901,"comment_content":"请问下老师：进程上下文切换，线程上下文切换，硬件中断切换这些有没有可以监控的工具或者衡量指标？","like_count":0},{"had_liked":false,"id":221475,"user_name":"独一无二","can_delete":false,"product_type":"c1","uid":1692320,"ip_address":"","ucode":"A7DE0EA2BD8FE3","user_header":"https://static001.geekbang.org/account/avatar/00/19/d2/a0/c8714628.jpg","comment_is_top":false,"comment_ctime":1590504379,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1590504379","product_id":100020901,"comment_content":"CPU 寄存器里原来用户态的指令位置，需要先保存起来。接着，为了执行内核态代码，CPU 寄存器需要更新为内核态指令的新位置。最后才是跳转到内核态运行内核任务；<br><br>老师：这里是不是应该为“CPU计数器” 而非CPU寄存器？寄存器和计数器有什么关系？","like_count":0},{"had_liked":false,"id":221418,"user_name":"Mr_李冲","can_delete":false,"product_type":"c1","uid":1631606,"ip_address":"","ucode":"61FAF80BA5FB0B","user_header":"https://static001.geekbang.org/account/avatar/00/18/e5/76/5d0b66aa.jpg","comment_is_top":false,"comment_ctime":1590496706,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1590496706","product_id":100020901,"comment_content":"我把上下文切换比作一段时间内看很多本书（进程&#47;线程）（不鼓励这种来回切换的看书方式），打开书最重要的两个步骤就是翻到上次看到的位置（程序计数器）以及回忆当时书里面的内容（寄存器）。这样每次换书看的时候都需要先将看上一本书的心得体会记下来，然后用一个书签标记看到的位置，接着切换到下一本书时，找到书签位置并回忆上次看到这时书里面的内容，才能接着看下去（CPU执行指令）。那么这个过程就叫做上下文切换。","like_count":0},{"had_liked":false,"id":219832,"user_name":"大春","can_delete":false,"product_type":"c1","uid":1322294,"ip_address":"","ucode":"0C2DB9601699AE","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKV7whdOgaEs29qvv2muoo7RBGjtpGa57yl6KT7Q2ux551ykGElQhiaUOFwwOX1PndLeqcWNNX0Pgg/132","comment_is_top":false,"comment_ctime":1590108673,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1590108673","product_id":100020901,"comment_content":"系统调用属于中断上下文吧，通过中断的方式陷入内核态，通过系统调用号找到回调函数","like_count":0},{"had_liked":false,"id":219526,"user_name":"Kevin","can_delete":false,"product_type":"c1","uid":2011420,"ip_address":"","ucode":"E4C8F4F6B20CB6","user_header":"https://static001.geekbang.org/account/avatar/00/1e/b1/1c/80bcdc8d.jpg","comment_is_top":false,"comment_ctime":1590036352,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1590036352","product_id":100020901,"comment_content":"倪老师，您好，在线程切换时，您说到前后两个线程不在同一进程，这种情况可以举个例子吗？我认为这种case就是进程切换了","like_count":0},{"had_liked":false,"id":216837,"user_name":"阿飞","can_delete":false,"product_type":"c1","uid":1298046,"ip_address":"","ucode":"F8B1FC8521264D","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKZicicibGibtR5zAia782Ajc5I5BN3F3tjAdlibATIknHv67gbxeH21N7B6vbgwLjYb1miaLKhqicptB5ibYw/132","comment_is_top":false,"comment_ctime":1589353104,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1589353104","product_id":100020901,"comment_content":"发生进程上下文切换的场景，提到有硬件中断的切换，这和中断上下文切换是一回事吗","like_count":0},{"had_liked":false,"id":209172,"user_name":"扩散性百万咸面包","can_delete":false,"product_type":"c1","uid":1905171,"ip_address":"","ucode":"6D703D51553B42","user_header":"https://static001.geekbang.org/account/avatar/00/1d/12/13/e103a6e3.jpg","comment_is_top":false,"comment_ctime":1587517053,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1587517053","product_id":100020901,"comment_content":"高度凝练一下：进程上下文切换cost最高，设计缓存刷新，虚拟内存、所有寄存器保存和恢复。中断切换一般由系统调用导致，用户态到内核态，不需要完全保存恢复，只需要设置内核执行的资源。","like_count":0},{"had_liked":false,"id":209080,"user_name":"小伟","can_delete":false,"product_type":"c1","uid":1043401,"ip_address":"","ucode":"B631E56A112BDC","user_header":"https://static001.geekbang.org/account/avatar/00/0f/eb/c9/b1b233cf.jpg","comment_is_top":false,"comment_ctime":1587485942,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1587485942","product_id":100020901,"comment_content":"有个疑问：上下文切换会影响内存io吗？","like_count":0},{"had_liked":false,"id":208271,"user_name":"黑色毛衣","can_delete":false,"product_type":"c1","uid":1135912,"ip_address":"","ucode":"FF7E235F91BA5C","user_header":"https://static001.geekbang.org/account/avatar/00/11/55/28/31b0cf2f.jpg","comment_is_top":false,"comment_ctime":1587311305,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1587311305","product_id":100020901,"comment_content":"虚拟内存的叫法是不是不准确？虚拟内存是为了解决物理内存不足的问题。但是这里的描述，更像是内存资源。。。","like_count":0},{"had_liked":false,"id":207809,"user_name":"陳先森","can_delete":false,"product_type":"c1","uid":1229006,"ip_address":"","ucode":"0F7AC617E3FE90","user_header":"https://static001.geekbang.org/account/avatar/00/12/c0/ce/fc41ad5e.jpg","comment_is_top":false,"comment_ctime":1587184976,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1587184976","product_id":100020901,"comment_content":"又来打卡一遍。温故而知新","like_count":0},{"had_liked":false,"id":204336,"user_name":"张念申","can_delete":false,"product_type":"c1","uid":1227624,"ip_address":"","ucode":"3B7A0D21089DBB","user_header":"https://static001.geekbang.org/account/avatar/00/12/bb/68/8120c2ad.jpg","comment_is_top":false,"comment_ctime":1586368747,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1586368747","product_id":100020901,"comment_content":"对于操作系统来说，一个任务就是一个进程（Process），比如打开一个浏览器就是启动一个浏览器进程，打开一个记事本就启动了一个记事本进程，打开两个记事本就启动了两个记事本进程，打开一个Word就启动了一个Word进程。有些进程还不止同时干一件事，比如Word，它可以同时进行打字、拼写检查、打印等事情。在一个进程内部，要同时干多件事，就需要同时运行多个“子任务”，我们把进程内的这些“子任务”称为线程（Thread）。由于每个进程至少要干一件事，所以，一个进程至少有一个线程。像Word这种复杂的进程可以有多个线程，多个线程可以同时执行，多线程的执行方式和多进程是一样的，也是由操作系统在多个线程之间快速切换，让每个线程都短暂地交替运行，看起来就像同时执行一样。真正地同时执行多线程需要多核CPU才可能实现。","like_count":0},{"had_liked":false,"id":194245,"user_name":"破芸","can_delete":false,"product_type":"c1","uid":1321896,"ip_address":"","ucode":"EB972881289985","user_header":"https://static001.geekbang.org/account/avatar/00/14/2b/a8/0322b4ae.jpg","comment_is_top":false,"comment_ctime":1585040677,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1585040677","product_id":100020901,"comment_content":"系统调用也不需要保存进程的用户态，中断上下文切换也不需要保存进程的用户态，这两者的区别是保存的内核状态不同，有没有实质性的区别呢？","like_count":0},{"had_liked":false,"id":192310,"user_name":"天斓海琼","can_delete":false,"product_type":"c1","uid":1488931,"ip_address":"","ucode":"0BD579B063C72C","user_header":"https://static001.geekbang.org/account/avatar/00/16/b8/23/85c7911c.jpg","comment_is_top":false,"comment_ctime":1584846098,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1584846098","product_id":100020901,"comment_content":"听完CPU上下文，有种豁然开朗的感觉","like_count":0},{"had_liked":false,"id":191638,"user_name":"斩月","can_delete":false,"product_type":"c1","uid":1516214,"ip_address":"","ucode":"9C5ADBCD4DEDD9","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIHib1LQqcflrt3hGRHJcxugqQ7dbT64A6JXsJoTYDNueuoO36qicePtbbaaHNicD65qaw3GMhazvQWg/132","comment_is_top":false,"comment_ctime":1584786245,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1584786245","product_id":100020901,"comment_content":"打卡","like_count":0},{"had_liked":false,"id":191077,"user_name":"Bryan","can_delete":false,"product_type":"c1","uid":1037208,"ip_address":"","ucode":"BA9D6A278609F3","user_header":"https://static001.geekbang.org/account/avatar/00/0f/d3/98/60d13550.jpg","comment_is_top":false,"comment_ctime":1584729210,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1584729210","product_id":100020901,"comment_content":"感觉这篇文章是我看过的讲进程切换和线程切换最好的文章了，而且这是我第一次考虑到中断的上下文切换","like_count":0},{"had_liked":false,"id":190571,"user_name":"怀揣梦想的学渣","can_delete":false,"product_type":"c1","uid":1916685,"ip_address":"","ucode":"2349B9F4F6FDE3","user_header":"https://static001.geekbang.org/account/avatar/00/1d/3f/0d/1e8dbb2c.jpg","comment_is_top":false,"comment_ctime":1584669493,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1584669493","product_id":100020901,"comment_content":"如果在学校里学过操作系统原理，编译原理，组成原理，对这部分理解就会轻松很多。","like_count":0},{"had_liked":false,"id":190135,"user_name":"痞子胥","can_delete":false,"product_type":"c1","uid":1617678,"ip_address":"","ucode":"3701A981FFF083","user_header":"","comment_is_top":false,"comment_ctime":1584606003,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1584606003","product_id":100020901,"comment_content":"老师文中:而这些保存下来的上下文，会存储在系统内核中，并在任务重新调度执行时再次加载进来。这样就能保证任务原来的状态不受影响，让任务看起来还是连续运行。这句话的-------并在任务重新调度执行时再次加载进来 没明白<br><br><br>1:并在任务重新调度执行时是在内核里调度还是内核外调度？<br>2:并在任务重新调度执行时再次加载进来     再次加载是加载在哪里?<br>","like_count":0},{"had_liked":false,"id":185059,"user_name":"AE","can_delete":false,"product_type":"c1","uid":1007575,"ip_address":"","ucode":"57E32DCEC92245","user_header":"https://static001.geekbang.org/account/avatar/00/0f/5f/d7/4e036beb.jpg","comment_is_top":false,"comment_ctime":1583474622,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1583474622","product_id":100020901,"comment_content":"自己理解整理：<br><br>CPU上下文切换是什么意思？<br>什么是进程上下文切换？<br>什么是系统上下文切换？<br>进程上下文切换跟系统调用又有什么区别呢？<br>什么是线程上下文切换？他的过程是是如何变化的？<br>什么是中断上下文切换？他的过程是是如何变化的？<br>出现上下文切换的性能问题，哪些情况会触发进程上下文切换的场景？<br>编辑文件过程CPU内部处理如何变化的？（描述不够准确，如果可以请帮忙改正）<br>NGINX 用户访问页面，系统调用CPU过程是如何变化的？（描述不够准确，如果可以请帮忙改正）<br>多任务竞争CPU，cpu变换任务的时候进行CPU上下文切换(context switch)。CPU执行任务有哪几种方式？<br>根据任务的执行形式，相应的下上文切换有哪些？","like_count":0},{"had_liked":false,"id":185055,"user_name":"AE","can_delete":false,"product_type":"c1","uid":1007575,"ip_address":"","ucode":"57E32DCEC92245","user_header":"https://static001.geekbang.org/account/avatar/00/0f/5f/d7/4e036beb.jpg","comment_is_top":false,"comment_ctime":1583474005,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1583474005","product_id":100020901,"comment_content":"自己理解整理解答如下即可：<br><br>CPU上下文切换是什么意思？<br>什么是进程上下文切换？<br>什么是系统上下文切换？<br>进程上下文切换跟系统调用又有什么区别呢？<br>什么是线程上下文切换？他的过程是是如何变化的？<br>什么是中断上下文切换？他的过程是是如何变化的？<br>我们编辑文件过程CPU内部处理如何变化的？（不知道怎么描述这个问题，如果不对请帮我改正）<br>NGINX 用户访问页面，系统调用CPU过程是如何变化的？（不知道怎么描述这个问题，如果不对请帮我改正）<br>N","like_count":0},{"had_liked":false,"id":182968,"user_name":"Akon","can_delete":false,"product_type":"c1","uid":1889038,"ip_address":"","ucode":"F0DA31C4BB4947","user_header":"https://static001.geekbang.org/account/avatar/00/1c/d3/0e/ef771277.jpg","comment_is_top":false,"comment_ctime":1582900076,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1582900076","product_id":100020901,"comment_content":"大佬，能否讲讲中断打断进程进入中断上下文内核具体发生了什么，中断上下文和进程上下文是否共享内核虚拟地址空间（32位系统3-4g），同时纠正一个问题，中断上下文打断进程上下文是否需要保存进程栈需要看处理器平台，arm中断有自己的中断栈，x86中断会使用被打断的进程的堆栈，这样x86中断使用完进程堆栈后会影响进程的地址空间吗","like_count":0},{"had_liked":false,"id":179869,"user_name":"郭梦丹","can_delete":false,"product_type":"c1","uid":1856374,"ip_address":"","ucode":"3E38BF34C8EFEB","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLkhgYnYZBdhZULF8z9PRm8vpr4niamkiaoXm7CJEVf1y74UIW3hX2sLFpFEnCUBh9S3RC7xWl10hibg/132","comment_is_top":false,"comment_ctime":1582114048,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1582114048","product_id":100020901,"comment_content":"Cpu上下文切换，cpu时间被划分为多个时间片段来支持linux支持多进程并发运行的状态。中断上下文切换优先级别大于进程上下文切换，不同进程上下文切换耗费资源大于同进程不同线程上下文切换。","like_count":0},{"had_liked":false,"id":179252,"user_name":"Geek_f1933b","can_delete":false,"product_type":"c1","uid":1799937,"ip_address":"","ucode":"9045A7ED2B2A69","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKSVGSo9leSm0vhtHgzIOL7uaJhOcaImuIzLIrVhXUNPmhd9HGIxs0nWIQm5RTCEjwJ6IuG3moOdQ/132","comment_is_top":false,"comment_ctime":1581945443,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1581945443","product_id":100020901,"comment_content":"老师，请教个问题，关于CPU上下文切换涉及到的资源，梳理了一下，老师帮忙看看是不是有问题。<br>设计资源：<br>用户态：虚拟内存、全局变量等<br>进程态：CPU寄存器、内核堆栈，硬件终端参数<br>进程：虚拟内存，全局变量等资源<br>线程：私有数据、CPU寄存器等<br>CPU的上下文： 寄存器、程序计数器。","like_count":0},{"had_liked":false,"id":178263,"user_name":"安排","can_delete":false,"product_type":"c1","uid":1260026,"ip_address":"","ucode":"F78CFA9624CAEF","user_header":"https://static001.geekbang.org/account/avatar/00/13/39/fa/a7edbc72.jpg","comment_is_top":false,"comment_ctime":1581645673,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1581645673","product_id":100020901,"comment_content":"进程上下文切换的时间算在进程的头上吗？","like_count":0},{"had_liked":false,"id":173702,"user_name":"王金刚","can_delete":false,"product_type":"c1","uid":1813219,"ip_address":"","ucode":"FD8D6D19310DC7","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eq3fQlPJzwQRfpg2AlCpaD1znKGeBDX8D4JrJ6KJhuzonicU7FLNelZYDFQzsclNEcdVGzCSUKls3w/132","comment_is_top":false,"comment_ctime":1579664245,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1579664245","product_id":100020901,"comment_content":"线程上线文切换中“第一种， 前后两个线程属于不同进程。此时，因为资源不共享，所以切换过程就跟进程上下文切换是一样。”<br>这个不就是进程间的切换了吗<br>他只是不通进程的线程","like_count":0},{"had_liked":false,"id":170709,"user_name":"笑","can_delete":false,"product_type":"c1","uid":1741098,"ip_address":"","ucode":"689A435818403A","user_header":"https://static001.geekbang.org/account/avatar/00/1a/91/2a/c0fb21fa.jpg","comment_is_top":false,"comment_ctime":1578670542,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1578670542","product_id":100020901,"comment_content":"打卡，Day 2，今天讲的上下文切换有点抽象，还需好好消化理解。有三种上下文切换类型，进程上下文切换、线程上下文切换和中断上下文切换。","like_count":0},{"had_liked":false,"id":167713,"user_name":"旭东(Frank)","can_delete":false,"product_type":"c1","uid":1024486,"ip_address":"","ucode":"176FA629800062","user_header":"https://static001.geekbang.org/account/avatar/00/0f/a1/e6/50da1b2d.jpg","comment_is_top":false,"comment_ctime":1577920906,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1577920906","product_id":100020901,"comment_content":"请问LINUX有线程的概念吗？","like_count":0},{"had_liked":false,"id":160951,"user_name":"洛子墟","can_delete":false,"product_type":"c1","uid":1036273,"ip_address":"","ucode":"CFC500D00F0B9B","user_header":"https://static001.geekbang.org/account/avatar/00/0f/cf/f1/bf63fef6.jpg","comment_is_top":false,"comment_ctime":1576068999,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1576068999","product_id":100020901,"comment_content":"那系统怎么解决由于键盘录入文章而导致大量的中断发生，然后导致CPU频道切换上下文？","like_count":0},{"had_liked":false,"id":160799,"user_name":"刘友淙","can_delete":false,"product_type":"c1","uid":1620058,"ip_address":"","ucode":"97F3A69A308313","user_header":"","comment_is_top":false,"comment_ctime":1576033812,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1576033812","product_id":100020901,"comment_content":"D3打卡","like_count":0},{"had_liked":false,"id":158619,"user_name":"拯救地球好累","can_delete":false,"product_type":"c1","uid":1339022,"ip_address":"","ucode":"7643439601EF4C","user_header":"https://static001.geekbang.org/account/avatar/00/14/6e/8e/5d309a85.jpg","comment_is_top":false,"comment_ctime":1575423551,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1575423551","product_id":100020901,"comment_content":"CPU的上下文切换：进程上下文切换、线程上下文切换、中断上下文切换<br>系统调用（特权模式切换）：同进程在用户态和内核态之间发生的两次上下文切换<br>多个进程之间的上下文切换和系统调用的区别：前者对于虚拟内存、栈的切换，其实差别就是前者切换了进程，而和进程绑定的虚拟内存到物理内存映射的页表、维护当前进程栈顶和当前栈帧信息的寄存器需要对应切换到另一个进程<br>进程上下文切换的overhead：保存和恢复寄存器等资源上的消耗 &amp; 页表更新后引发的更多缺页异常 &amp; 缓存刷新后导致的命中率变低<br>进程上下文切换的时机：当前进程执行结束 | 当前进程时间片耗尽 | 当前进程因请求系统资源而被挂起 | 当前进程的主动挂起 | 高优先级进程的抢占<br>线程上下文切换：同进程内线程上下文切换、不同进程间线程上下文切换<br>中断上下文切换与多个进程上下文切换区别：类似于系统调用，中断上下文切换不涉及用户态多个进程间的切换，因此不需要对虚拟内存和栈等信息进行保存和恢复","like_count":0},{"had_liked":false,"id":157956,"user_name":"尔冬橙","can_delete":false,"product_type":"c1","uid":1225224,"ip_address":"","ucode":"0B013A49BC18DA","user_header":"https://static001.geekbang.org/account/avatar/00/12/b2/08/92f42622.jpg","comment_is_top":false,"comment_ctime":1575289911,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1575289911","product_id":100020901,"comment_content":"用户态的资源也要加载到cpu上运行么","like_count":0},{"had_liked":false,"id":157332,"user_name":"尔冬橙","can_delete":false,"product_type":"c1","uid":1225224,"ip_address":"","ucode":"0B013A49BC18DA","user_header":"https://static001.geekbang.org/account/avatar/00/12/b2/08/92f42622.jpg","comment_is_top":false,"comment_ctime":1575111517,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1575111517","product_id":100020901,"comment_content":"我想问下：<br>1、进程上下文切换时，用户态虚拟内存等资源保存在哪里？<br>2、系统调用后从内核态到用户态，是怎样一个过程，还需要系统调用么？","like_count":0},{"had_liked":false,"id":154929,"user_name":"乾坤瞬间","can_delete":false,"product_type":"c1","uid":1683130,"ip_address":"","ucode":"15BDCF29CBF8EB","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLWIUF31dicT1YBTxWNX0uvbMxl15UwdlwFicGhNo0DsQ7CbM6k16EQxK7bwSMcicLGMdYto4jGPTvrg/132","comment_is_top":false,"comment_ctime":1574599393,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1574599393","product_id":100020901,"comment_content":"之前没有注意上下文切换在计算机体系中的重要作用。通过这一讲，能够体会出，计算机的上下文切换保证了计算机应用程序有组织，有记录，稳定，无误地执行任务。<br>上下文切换根据任务形式的不同可以大体分为三类，进程，线程，中断上下文的切换<br>其中中断上下文的切换优先级比其他切换更高，更纯粹，可以达到更好的任务执行切换操作<br>进程级别的任务切换会导致内核态和用户态所有资源的切换，所以切换是三种中最昂贵的一种<br>线程级别的上下文切换，由于线程与线程之间是同属于同进程的并共享全局变量，因此可以对全局变量不做切换处理，提高了切换的速度，在性能方面在三者中的中间位置<br>","like_count":0},{"had_liked":false,"id":153568,"user_name":"在路上","can_delete":false,"product_type":"c1","uid":1143372,"ip_address":"","ucode":"335960F683C23C","user_header":"https://static001.geekbang.org/account/avatar/00/11/72/4c/4d636a23.jpg","comment_is_top":false,"comment_ctime":1574260041,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1574260041","product_id":100020901,"comment_content":"即便中断过程打断了一个正处在用户态的进程，也不需要保存和恢复这个进程的虚拟内存、全局变量等用户态资源。中断上下文，其实只包括内核态中断服务程序执行所必需的状态，包括 CPU 寄存器、内核堆栈、硬件中断参数等。<br>这段话有些不明白，那中断结束后怎么来运行原先的进程呢？","like_count":0},{"had_liked":false,"id":148936,"user_name":"橄榄树","can_delete":false,"product_type":"c1","uid":1030751,"ip_address":"","ucode":"74F6272CD0B3D0","user_header":"https://static001.geekbang.org/account/avatar/00/0f/ba/5f/bab32b7a.jpg","comment_is_top":false,"comment_ctime":1573112937,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573112937","product_id":100020901,"comment_content":"倪老师 <br>一次系统调用的两次上下文切换，是不是指用户态到内核态的切换和再从内核态切回到用户态？","like_count":0},{"had_liked":false,"id":144656,"user_name":"Eleven","can_delete":false,"product_type":"c1","uid":1168452,"ip_address":"","ucode":"FB4A0C8CA732BE","user_header":"https://static001.geekbang.org/account/avatar/00/11/d4/44/0ec958f4.jpg","comment_is_top":false,"comment_ctime":1571990917,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1571990917","product_id":100020901,"comment_content":"老师，我由于是非科班出身，这一块看起来只是在被动的接受知识，看的比较懵，有什么好的建议么？","like_count":0,"discussions":[{"author":{"id":1805809,"avatar":"","nickname":"ccz 开发(谢不邀)","note":"","ucode":"B8803B050AAC68","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":133594,"discussion_content":"网上搜XXX学习线路图之类的，然后打关卡，收人头～如果网上找学习课程一定要找有项目实战的，如果是为了找工作，学一段时间后尽量找公司，然后继续深入学习，非科班找到公司可能不大靠谱，看你自己的时间安排","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578973709,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":143679,"user_name":"Dym","can_delete":false,"product_type":"c1","uid":1205036,"ip_address":"","ucode":"7E521F01A4D823","user_header":"","comment_is_top":false,"comment_ctime":1571755316,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1571755316","product_id":100020901,"comment_content":"1、为什么需要上下文切换<br><br>Linux是支持多任务多用户的操作系统，在Linux能保证多个任务一起执行，最主要是由上下文切换机制所支持的，因为CPU执行指令时间很快，在多个任务(进程或线程)之间来回的执行，对于我们来说是并行操作，实际上串行的执行的。当执行任务A时一定时间后维护好执行任务A的现场，然后继续执行任务B一定时间后又切换到执行任务A。这样反反复复进行进程或线程的挂起和调度，来保证多个任务一起推进。<br><br><br>2、上下文切换带来的性能开销<br><br><br>当进程A满足切换条件(详细见3)时需要挂起进程A，去执行进程B，这个时候需要保存进程A的虚拟内存、栈、PC(程序计数器)等信息，当重新执行进程A时接着往下执行。<br><br>如果是同个进程下的线程发生上下文切换时，性能开销会比进程之间切换要小，因为每个线程共享进程虚拟内存，所以在线程发生上下文切换时只需要保存PC、栈等寄存器相关的信息就可以。这也是系统把线程作为CPU调度的最小单位。<br><br><br>3、发生切换时机<br><br>* 当进程(线程)用完了CPU分配的时间片时<br>* 当进程(线程)所需要的资源(内存不足、锁)不满足时<br>* 主动调用sleep时<br>* 优先级更高的进程(线程)产生时 (例如中断请求，当向磁盘请求读数据时，CPU并不会一直等待数据，而是会通过磁盘驱动器注册中断程序，当磁盘数据就绪了就会向CPU发生中断请求，这个时候CPU放下手上活来处理这次请求)<br>","like_count":0},{"had_liked":false,"id":140292,"user_name":"核桃","can_delete":false,"product_type":"c1","uid":1385204,"ip_address":"","ucode":"7AB05270CBCCCB","user_header":"https://static001.geekbang.org/account/avatar/00/15/22/f4/9fd6f8f0.jpg","comment_is_top":false,"comment_ctime":1570872191,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1570872191","product_id":100020901,"comment_content":"第二次回过头来看这个，其实上下文切换会导致性能出现问题的根本原因之一是进程切换的时候，会发生一系列的段页缺失，真正的寄存器的切换还好一点，但是段页缺失需要从内存甚至磁盘里面获取数据的话，这个延迟就很恐怖了。所以为了解决这个问题，现在协程的概念就火起来了，尽量避免线程上下文切换等等。","like_count":0},{"had_liked":false,"id":138670,"user_name":"啊Q说雨","can_delete":false,"product_type":"c1","uid":1311169,"ip_address":"","ucode":"3AA29134CC3971","user_header":"https://static001.geekbang.org/account/avatar/00/14/01/c1/c625c5d1.jpg","comment_is_top":false,"comment_ctime":1570416994,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1570416994","product_id":100020901,"comment_content":"上下文切换多少对系统性能有影响，有没一个参考值，比如4核CPU，多少","like_count":0},{"had_liked":false,"id":135254,"user_name":"李大海™","can_delete":false,"product_type":"c1","uid":1238188,"ip_address":"","ucode":"97CDA4F8978A2D","user_header":"https://static001.geekbang.org/account/avatar/00/12/e4/ac/d691e3b7.jpg","comment_is_top":false,"comment_ctime":1569088652,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1569088652","product_id":100020901,"comment_content":"进程的切换只发生在内核态. 怎么理解。通常所说的进程切换怎么和内核产生关系？这个不太明白","like_count":0},{"had_liked":false,"id":131777,"user_name":"lupguo","can_delete":false,"product_type":"c1","uid":1009098,"ip_address":"","ucode":"1B55A01DF78647","user_header":"https://static001.geekbang.org/account/avatar/00/0f/65/ca/38dcd55a.jpg","comment_is_top":false,"comment_ctime":1567905348,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1567905348","product_id":100020901,"comment_content":"中断是允许嵌套的，硬件中断是可能被打断的，应该是基于中断事件的优先级和重要程度决定是否关中断延迟中断响应。系统调用、异常、硬件中断，都会引起系统的中断响应，和相关中断服务例程的处理。比如可能存在异常服务处理过程中还出现异常。<br>","like_count":0},{"had_liked":false,"id":130852,"user_name":"魔法嘉嘉","can_delete":false,"product_type":"c1","uid":1061870,"ip_address":"","ucode":"F8106CF9AEA291","user_header":"https://static001.geekbang.org/account/avatar/00/10/33/ee/5722c123.jpg","comment_is_top":false,"comment_ctime":1567560197,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1567560197","product_id":100020901,"comment_content":"https:&#47;&#47;images.app.goo.gl&#47;wr7H5iDuMGdv6BAKA","like_count":0,"discussions":[{"author":{"id":1363634,"avatar":"https://static001.geekbang.org/account/avatar/00/14/ce/b2/1f914527.jpg","nickname":"海盗船长","note":"","ucode":"ECB28BA21A4113","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":332480,"discussion_content":"地址错误","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1607236452,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":128819,"user_name":"eee","can_delete":false,"product_type":"c1","uid":1518555,"ip_address":"","ucode":"AA7D49A78662FF","user_header":"https://static001.geekbang.org/account/avatar/00/17/2b/db/427472ff.jpg","comment_is_top":false,"comment_ctime":1566967413,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1566967413","product_id":100020901,"comment_content":"对cpu来说都是更换寄存器和pc中的内容， cpu是如何区别到底这次是进行同进程的上下文切换还是不同进程的上线文切换？或者说切换到的内容是谁决定的？","like_count":0},{"had_liked":false,"id":124293,"user_name":"Costar","can_delete":false,"product_type":"c1","uid":1596027,"ip_address":"","ucode":"995C4BA715A151","user_header":"","comment_is_top":false,"comment_ctime":1565854918,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1565854918","product_id":100020901,"comment_content":"现在有了","like_count":0},{"had_liked":false,"id":121172,"user_name":"小韩","can_delete":false,"product_type":"c1","uid":1188863,"ip_address":"","ucode":"6CDE03F432607E","user_header":"https://static001.geekbang.org/account/avatar/00/12/23/ff/701c6f4d.jpg","comment_is_top":false,"comment_ctime":1565070508,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1565070508","product_id":100020901,"comment_content":"cpu上下文切换，了解了","like_count":0},{"had_liked":false,"id":121136,"user_name":"陈年玖","can_delete":false,"product_type":"c1","uid":1622991,"ip_address":"","ucode":"89753FD1566575","user_header":"https://static001.geekbang.org/account/avatar/00/18/c3/cf/4e8ac944.jpg","comment_is_top":false,"comment_ctime":1565062978,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1565062978","product_id":100020901,"comment_content":"如果断时间内两三分钟  网络出现丢包  或者cpu跑高  这个 除了定时任务之外还有其他的可能性吗 ？？？  top后的各方面的数据都是正常 的   对排查这方面还真的是无语 ","like_count":0},{"had_liked":false,"id":120521,"user_name":"lanco","can_delete":false,"product_type":"c1","uid":1188352,"ip_address":"","ucode":"C24A0A8716C78C","user_header":"https://static001.geekbang.org/account/avatar/00/12/22/00/abb7bfe3.jpg","comment_is_top":false,"comment_ctime":1564921693,"is_pvip":true,"replies":[{"id":"44393","content":"👍","user_name":"作者回复","user_name_real":"倪朋飞","uid":"1001282","ctime":1565014665,"ip_address":"","comment_id":120521,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1564921693","product_id":100020901,"comment_content":"这篇文章的内容想要深入需要涉及到的底层会很多，对着《深入理解计算机系统》来学习会更好的学习","like_count":0,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":461371,"discussion_content":"👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1565014665,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":119877,"user_name":"afterdream","can_delete":false,"product_type":"c1","uid":1619795,"ip_address":"","ucode":"701AD039459191","user_header":"https://static001.geekbang.org/account/avatar/00/18/b7/53/823f647c.jpg","comment_is_top":false,"comment_ctime":1564716806,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1564716806","product_id":100020901,"comment_content":"回想起上一篇load average，我做了一个实验<br>（1）stress -c 1，使用top查看，Tasks running值会比之前高——也就是说活跃的进程数高了——load average也就增加了<br>（2）stress -i 1，使用top查看，Tasks running值和之前差不多，但是S中多了一个D状态的进程——也就是说活跃的进程数也增加了——load average同样升高<br>（3）stress -c 8同时创建多个任务，那活跃进程自然增多，为什么今天又说cpu上下文切换才是原因。<br><br>难道，不管是CPU密集型还是IO密集型，或者多进程等待，他们给我们最直观的是活跃进程数增多，但是最最根本的原因是上下文切换（几十ns——几个us，数值相对可观）多了，才导致load average增大？？？","like_count":0},{"had_liked":false,"id":113537,"user_name":"会飞的鱼","can_delete":false,"product_type":"c1","uid":1567083,"ip_address":"","ucode":"82E83A7F2F9123","user_header":"https://static001.geekbang.org/account/avatar/00/17/e9/6b/a52282b8.jpg","comment_is_top":false,"comment_ctime":1563071993,"is_pvip":false,"replies":[{"id":"41984","content":"请参考04下篇","user_name":"作者回复","user_name_real":"倪朋飞","uid":"1001282","ctime":1563456886,"ip_address":"","comment_id":113537,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1563071993","product_id":100020901,"comment_content":"老师好，请问怎么排查性能是耗在cpu上下文切换上了？是用top命令查看后，如果%sys值高，就说明有太多的cpu上下文切换吗？","like_count":0,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":458265,"discussion_content":"请参考04下篇","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1563456886,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":112639,"user_name":"飞翔","can_delete":false,"product_type":"c1","uid":1068571,"ip_address":"","ucode":"65AF6AF292DAD6","user_header":"https://static001.geekbang.org/account/avatar/00/10/4e/1b/f4b786b9.jpg","comment_is_top":false,"comment_ctime":1562782293,"is_pvip":true,"replies":[{"id":"42004","content":"发生中断的时候","user_name":"作者回复","user_name_real":"倪朋飞","uid":"1001282","ctime":1563459431,"ip_address":"","comment_id":112639,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1562782293","product_id":100020901,"comment_content":"什么时候会发生中断上下文切换？","like_count":0,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":457831,"discussion_content":"发生中断的时候","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1563459431,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":112524,"user_name":"民工哦","can_delete":false,"product_type":"c1","uid":1255160,"ip_address":"","ucode":"6B6585EBBFC18A","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/NnefngARTSPK2qLfYenRjDCNSv7NdGpia05NowusiarIvglJibkJn1WMnj2EzicgBay3XWbWpiaCfQJVr3PAeXcghzw/132","comment_is_top":false,"comment_ctime":1562751560,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1562751560","product_id":100020901,"comment_content":"学习一波操作系统，讲的很清晰明了~~","like_count":0},{"had_liked":false,"id":105931,"user_name":"chen泽林¹⁵⁶²⁶¹⁸⁷³³⁹","can_delete":false,"product_type":"c1","uid":1467095,"ip_address":"","ucode":"AE2EF979F847B2","user_header":"https://static001.geekbang.org/account/avatar/00/16/62/d7/5bfdecf2.jpg","comment_is_top":false,"comment_ctime":1561106110,"is_pvip":false,"replies":[{"id":"38373","content":"是的","user_name":"作者回复","user_name_real":"倪朋飞","uid":"1001282","ctime":1561215571,"ip_address":"","comment_id":105931,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1561106110","product_id":100020901,"comment_content":"请问属于不同进程的线程切换， 从而导致进程切换， 是不是这样理解。","like_count":0,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":454876,"discussion_content":"是的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1561215571,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":102881,"user_name":"Butter Fly","can_delete":false,"product_type":"c1","uid":1564473,"ip_address":"","ucode":"D2B488B465FC3C","user_header":"https://static001.geekbang.org/account/avatar/00/17/df/39/6ead11bc.jpg","comment_is_top":false,"comment_ctime":1560320057,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1560320057","product_id":100020901,"comment_content":"打卡","like_count":0},{"had_liked":false,"id":98946,"user_name":"Geek_c6ddac","can_delete":false,"product_type":"c1","uid":1541981,"ip_address":"","ucode":"D028582C11DD1A","user_header":"https://static001.geekbang.org/account/avatar/00/17/87/5d/99be81ee.jpg","comment_is_top":false,"comment_ctime":1559117901,"is_pvip":false,"replies":[{"id":"35816","content":"不会的，注意进程在运行但不一定“活跃”","user_name":"作者回复","user_name_real":"倪朋飞","uid":"1001282","ctime":1559280589,"ip_address":"","comment_id":98946,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1559117901","product_id":100020901,"comment_content":"老师，正常情况下服务器上每个CPU上面活跃的进程数应该都超过1吧，那不是很容易就过载了？","like_count":0,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":451901,"discussion_content":"不会的，注意进程在运行但不一定“活跃”","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1559280589,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":97811,"user_name":"君哥聊技术","can_delete":false,"product_type":"c1","uid":1325816,"ip_address":"","ucode":"2C9A22BCE4C79E","user_header":"https://static001.geekbang.org/account/avatar/00/14/3a/f8/c1a939e7.jpg","comment_is_top":false,"comment_ctime":1558782722,"is_pvip":false,"replies":[{"id":"34979","content":"嗯嗯，多处理器共享的是三级缓存","user_name":"作者回复","user_name_real":"倪朋飞","uid":"1001282","ctime":1558794196,"ip_address":"","comment_id":97811,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1558782722","product_id":100020901,"comment_content":"特别是在多处理器系统上，缓存是被多个处理器共享的，刷新缓存不仅会影响当前处理器的进程，还会影响共享缓存的其他处理器的进程。<br><br>这儿的缓存肯定不是cpu一二级缓存吧？具体是什么呢？<br>","like_count":0,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":451433,"discussion_content":"嗯嗯，多处理器共享的是三级缓存","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1558794196,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":97369,"user_name":"余香。","can_delete":false,"product_type":"c1","uid":1536433,"ip_address":"","ucode":"0C1EF944A889F2","user_header":"https://static001.geekbang.org/account/avatar/00/17/71/b1/89a7cf9c.jpg","comment_is_top":false,"comment_ctime":1558661271,"is_pvip":false,"replies":[{"id":"34968","content":"如果进程没有退出只是正常切到另一个进程，上下文肯定还需要保存的；但如果进程退出了，那么它的资源就会回收起来。","user_name":"作者回复","user_name_real":"倪朋飞","uid":"1001282","ctime":1558793652,"ip_address":"","comment_id":97369,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1558661271","product_id":100020901,"comment_content":"老师，有个问题想咨询一下：您在进程切换的场景中提到了  前一个进程执行完毕后会调度一个新的进程来运行，那前一个运行完毕的进程是否还需要保存它的上下文？或者您可以解释下一个进程运行完毕后内核会如何处理它   感谢！","like_count":0,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":451251,"discussion_content":"如果进程没有退出只是正常切到另一个进程，上下文肯定还需要保存的；但如果进程退出了，那么它的资源就会回收起来。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1558793652,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":91881,"user_name":"龙小宝","can_delete":false,"product_type":"c1","uid":1321192,"ip_address":"","ucode":"39A3FBD4040508","user_header":"https://static001.geekbang.org/account/avatar/00/14/28/e8/a0936291.jpg","comment_is_top":false,"comment_ctime":1557126015,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1557126015","product_id":100020901,"comment_content":"老师您好，文章讲的思路很清晰调条理，我这里有两个问题：<br>1、所有的状态保存（包括用户态的变量，虚拟机内存，内核态的寄存器、程序计数器）都是由cpu进行保存的吗？还是 有各个进程保存？<br>2、cpu时间分片然后轮流给各个进程使用，假如cpu时间分了5片，分配给某一个进程的只是其中一片还是几片呢？ ","like_count":0},{"had_liked":false,"id":91147,"user_name":"zklkycg2012","can_delete":false,"product_type":"c1","uid":1231779,"ip_address":"","ucode":"F1E22C88EC4033","user_header":"https://static001.geekbang.org/account/avatar/00/12/cb/a3/d1567b0b.jpg","comment_is_top":false,"comment_ctime":1556881463,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1556881463","product_id":100020901,"comment_content":"打卡~","like_count":0},{"had_liked":false,"id":88585,"user_name":"郑李孔明","can_delete":false,"product_type":"c1","uid":1066493,"ip_address":"","ucode":"9FDA73054A3019","user_header":"https://static001.geekbang.org/account/avatar/00/10/45/fd/92264546.jpg","comment_is_top":false,"comment_ctime":1555947643,"is_pvip":false,"replies":[{"id":"31955","content":"看变化趋势","user_name":"作者回复","user_name_real":"倪朋飞","uid":"1001282","ctime":1556113482,"ip_address":"","comment_id":88585,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1555947643","product_id":100020901,"comment_content":"请问怎么判断中断次数是否过多呢？","like_count":0,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":447837,"discussion_content":"看变化趋势","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1556113482,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":88213,"user_name":"上善若水","can_delete":false,"product_type":"c1","uid":1122544,"ip_address":"","ucode":"42D2C732E3E6EF","user_header":"https://static001.geekbang.org/account/avatar/00/11/20/f0/84f3cbe0.jpg","comment_is_top":false,"comment_ctime":1555894987,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1555894987","product_id":100020901,"comment_content":"计算机为了实现并行处理的效果，必然会进行上下文切换。上下文切换的场景通常有进程间，线程间和硬件中断等上下文切换。对于软件来说，同进程里的不同线程间进行上下文切换只需要保存和恢复线程私有状态，无需保存进程级别的共享变量。所以切换消耗资源较少。这也是多线程编程更轻量级，性能优于多进程的原因。","like_count":0},{"had_liked":false,"id":88017,"user_name":"柯察金","can_delete":false,"product_type":"c1","uid":1115149,"ip_address":"","ucode":"F722BF8FCD2C47","user_header":"https://static001.geekbang.org/account/avatar/00/11/04/0d/3dc5683a.jpg","comment_is_top":false,"comment_ctime":1555813869,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1555813869","product_id":100020901,"comment_content":"老师，内核空间与用户空间怎么理解，我怎么觉得有点像远程调用","like_count":0},{"had_liked":false,"id":86872,"user_name":"Geek_c33c8e","can_delete":false,"product_type":"c1","uid":1467234,"ip_address":"","ucode":"A5B70E0A346BDC","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/BpprxVMjsB0Ok4wGunDLHOLEI9wJX5HIEVsqs2EaXpuODfM7tuiaNfjPcxKWc60TwTaJnTuSicGMicib4r4um02qicQ/132","comment_is_top":false,"comment_ctime":1555468730,"is_pvip":false,"replies":[{"id":"31283","content":"程序计数器是CPU寄存器的一种，CPU寄存器还有很多类型，具体的可以参考计算机体系结构的书籍","user_name":"作者回复","user_name_real":"倪朋飞","uid":"1001282","ctime":1555499978,"ip_address":"","comment_id":86872,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1555468730","product_id":100020901,"comment_content":"老师，CPU 寄存器和程序计数器的区别是什么，程序计算器是保存正在执行或将要执行的指令，CPU寄存器保存什么？<br>","like_count":0,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":447222,"discussion_content":"程序计数器是CPU寄存器的一种，CPU寄存器还有很多类型，具体的可以参考计算机体系结构的书籍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1555499978,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":84775,"user_name":"Geek_testingstar","can_delete":false,"product_type":"c1","uid":1483028,"ip_address":"","ucode":"C005B3AAB52A05","user_header":"https://static001.geekbang.org/account/avatar/00/16/a1/14/7512cbd7.jpg","comment_is_top":false,"comment_ctime":1554905841,"is_pvip":false,"replies":[{"id":"30633","content":"推荐找一本体系结构的书看一下","user_name":"作者回复","user_name_real":"倪朋飞","uid":"1001282","ctime":1555074536,"ip_address":"","comment_id":84775,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1554905841","product_id":100020901,"comment_content":"倪朋飞老师能详细讲解一下文章中第一张图片中各部分代表的含义和整体工作过程吗？谢谢","like_count":0,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":446443,"discussion_content":"推荐找一本体系结构的书看一下","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1555074536,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":82175,"user_name":"lynd","can_delete":false,"product_type":"c1","uid":1179633,"ip_address":"","ucode":"CC4CC26E2CE9B0","user_header":"https://static001.geekbang.org/account/avatar/00/11/ff/f1/8e9d8e97.jpg","comment_is_top":false,"comment_ctime":1554134882,"is_pvip":false,"replies":[{"id":"29851","content":"不一定，要看切换前后的热点是不是变了","user_name":"作者回复","user_name_real":"倪朋飞","uid":"1001282","ctime":1554211410,"ip_address":"","comment_id":82175,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1554134882","product_id":100020901,"comment_content":"请问在cpu上下文切换时，cpu的两级缓存会重刷吗？","like_count":0,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":445499,"discussion_content":"不一定，要看切换前后的热点是不是变了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1554211410,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1187321,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLwSoTjHPX5tuvQ44WvwibibVoAdUSia3EdXP4fR3nyJUhLWUmVxl3jibMuVb8uZViaRsy5nAyzicBN06VA/132","nickname":"小豆角","note":"","ucode":"93FBADEB249C46","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":104455,"discussion_content":"“只有内核才可以直接访问物理内存“，普通进程要访问物理内存需要通过页表映射，对吗","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577435407,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":79939,"user_name":"rain","can_delete":false,"product_type":"c1","uid":1101263,"ip_address":"","ucode":"2BCA7AEE9F002E","user_header":"https://static001.geekbang.org/account/avatar/00/10/cd/cf/9525bed8.jpg","comment_is_top":false,"comment_ctime":1553577318,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1553577318","product_id":100020901,"comment_content":"打卡","like_count":0},{"had_liked":false,"id":78350,"user_name":"JJj","can_delete":false,"product_type":"c1","uid":1196463,"ip_address":"","ucode":"EA53F2CEAFCFF1","user_header":"https://static001.geekbang.org/account/avatar/00/12/41/af/4307867a.jpg","comment_is_top":false,"comment_ctime":1553132554,"is_pvip":false,"replies":[{"id":"28764","content":"会恢复执行，不过也有可能刚好碰到进程调度，调度的时候当然还会保存用户态状态","user_name":"作者回复","user_name_real":"倪朋飞","uid":"1001282","ctime":1553318371,"ip_address":"","comment_id":78350,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1553132554","product_id":100020901,"comment_content":"您好，请问下，一个任务在运行时被中断，中断不保存用户态资源。那中断结束后是会继续执行该任务吗？不然该任务的用户态资源岂不是丢失了？","like_count":0,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":444060,"discussion_content":"会恢复执行，不过也有可能刚好碰到进程调度，调度的时候当然还会保存用户态状态","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1553318371,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":76385,"user_name":"冰凌","can_delete":false,"product_type":"c1","uid":1394578,"ip_address":"","ucode":"5C9EADFEDBF4E5","user_header":"https://static001.geekbang.org/account/avatar/00/15/47/92/f6a832c3.jpg","comment_is_top":false,"comment_ctime":1552581060,"is_pvip":false,"replies":[{"id":"28057","content":"👍","user_name":"作者回复","user_name_real":"倪朋飞","uid":"1001282","ctime":1552750590,"ip_address":"","comment_id":76385,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1552581060","product_id":100020901,"comment_content":"1. CPU上下文切换是保证Linux系统正常工作的核心功能之一，Linux多任务操作系统主要原因之一就是因为将CPU执行时间划分为时间片，轮流将这些时间片分配给多个任务执行，造成多个任务同时执行的效果。<br><br>2. CPU上下文切换为啥会造成系统负载增加？<br>          频繁的上下文切换会把时间用在寄存器／内核栈／以及虚拟内存等数据的保存和恢复上，从而缩短进程真正执行的时间，导致系统的整体性能下降<br><br>3. CPU上下文切换的场景有哪些？<br>          根据任务的不同，CPU上下文切换包括进程上下文切换／线程上下文切换以及中断上下文切换。<br><br>4. 进程上下文切换和系统调用的区别？<br>          首先，系统调用完成的是用户到内核态的转变，系统调用需要将用户态的指令位置先保存起来，然后将CPU寄存器更新为内核态指令的新位置，然后开始执行内核态代码，而调用结束后，需要恢复用户态指令的位置继续执行。所以一次系统调用发生了两次CPU上下文切换。<br>          但是，系统调用发生在同一个进程当中，通常称为“特权模式的切换”，而不是上下文切换<br>        进程上下文切换，从一个进程切换到另外一个进程执行。需要完成进程上下文的切换，而进程上下文包括了虚拟内存／栈／全局变量等用户态空间的资源，还包括了内核堆栈／寄存器等内核空间的状态。<br>        同时进程上下文切换发生在进程调度的时候<br><br>5. 进程上下文切换发生的场景有哪些？<br>          （1）CPU时间片正常用完<br>          （2）资源不足被挂起<br>          （3）进程通过sleep主动将自己挂起<br>          （4）更高级优先级进程运行，被调度程度挂起<br>          （5）中断<br><br>6. 线程上下文切换的理解？<br>          线程是调度的基本单位，进程是资源拥有的基本单位<br>* 进程中只有一个线程，线程等同于进程<br>* 多个线程时，线程共享进程的虚拟内存和全局变量等资源，这些在线程上下文切换时候是不需要修改的<br>* 线程可以有自己的私有数据，比如栈和寄存器，这些在上下文切换时是需要保存和替换的<br><br>    因此线程上下文切换包括两种情况：<br>        （1）两个线程同属于一个进程，线程切换只需要切换线程私有的数据，同属的进程虚拟内存和全局变量共享资源保持不变<br>        （2）两个线程属于不同进程，线程切换就和进程上下文切换一致了<br><br>7. 中断上下文切换理解？<br>          中断会打断进程的正常执行和调度。<br>          中断上下文只包括内核态中断服务程序执行所必须的状态，包括CPU寄存器／内核堆栈／硬件中断参数等，因此中断打断一个正在执行的用户态进程，是不需要保存这个进程的虚拟内核／全局变量等资源的，但是会替换内核态的一些资源，所以还是会涉及到CPU上下文的切换。","like_count":0,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":443283,"discussion_content":"👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1552750590,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":75330,"user_name":"anchor","can_delete":false,"product_type":"c1","uid":1083124,"ip_address":"","ucode":"24EECD40CC54C2","user_header":"https://static001.geekbang.org/account/avatar/00/10/86/f4/331f33a7.jpg","comment_is_top":false,"comment_ctime":1552380140,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1552380140","product_id":100020901,"comment_content":"之前面试被问为什么java的synchronize比lock慢,没答上来,面试者说前者需要恢复上下文(java6后有优化),浪费时间,结合今天的内容加深了理解","like_count":0},{"had_liked":false,"id":74661,"user_name":"小小鸟","can_delete":false,"product_type":"c1","uid":1102550,"ip_address":"","ucode":"11C15D267DE457","user_header":"https://static001.geekbang.org/account/avatar/00/10/d2/d6/d393593d.jpg","comment_is_top":false,"comment_ctime":1552274703,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1552274703","product_id":100020901,"comment_content":"打卡0311","like_count":0},{"had_liked":false,"id":74433,"user_name":"🐾mc🐾","can_delete":false,"product_type":"c1","uid":1030759,"ip_address":"","ucode":"CE47F9316D6E14","user_header":"https://static001.geekbang.org/account/avatar/00/0f/ba/67/c764be06.jpg","comment_is_top":false,"comment_ctime":1552225542,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1552225542","product_id":100020901,"comment_content":"Mark","like_count":0},{"had_liked":false,"id":74286,"user_name":"0.0","can_delete":false,"product_type":"c1","uid":1344624,"ip_address":"","ucode":"E497C5B0A8580C","user_header":"https://static001.geekbang.org/account/avatar/00/14/84/70/6573ec64.jpg","comment_is_top":false,"comment_ctime":1552178857,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1552178857","product_id":100020901,"comment_content":"上下文切换使用的cpu不算在cpu使用率里面么，如果算的话，cpu使用和系统负载就能对应起来吧，cpu使用率高负载就高吧","like_count":0},{"had_liked":false,"id":73477,"user_name":"JJj","can_delete":false,"product_type":"c1","uid":1196463,"ip_address":"","ucode":"EA53F2CEAFCFF1","user_header":"https://static001.geekbang.org/account/avatar/00/12/41/af/4307867a.jpg","comment_is_top":false,"comment_ctime":1551914013,"is_pvip":false,"replies":[{"id":"27323","content":"不是的，进程调度原本就是内核的职责，不需要系统调用","user_name":"作者回复","user_name_real":"倪朋飞","uid":"1001282","ctime":1552348282,"ip_address":"","comment_id":73477,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1551914013","product_id":100020901,"comment_content":"用户态到内核态需要系统调用，内核态才能进行进程切换。那用户态的进程要切换，既要完成系统调用又要完成进程切换？","like_count":0,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":442104,"discussion_content":"不是的，进程调度原本就是内核的职责，不需要系统调用","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1552348282,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":73290,"user_name":"HZero","can_delete":false,"product_type":"c1","uid":1422389,"ip_address":"","ucode":"9D742B64C732B8","user_header":"https://static001.geekbang.org/account/avatar/00/15/b4/35/60a12989.jpg","comment_is_top":false,"comment_ctime":1551852301,"is_pvip":false,"replies":[{"id":"26756","content":"对的，改的只是映射关系，包括TLB","user_name":"作者回复","user_name_real":"倪朋飞","uid":"1001282","ctime":1551885609,"ip_address":"","comment_id":73290,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1551852301","product_id":100020901,"comment_content":"请教老师一个问题：在进程或线程切换的时候，对于虚拟空间的资源，如用户栈、堆、映射区、内核栈等这些应该只要保持不被修改就可以吧，只要保存mm_struct的指针就可以了吧，那么在进程切换的时候这里应该几乎不花费时间吧？","like_count":0,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":442006,"discussion_content":"对的，改的只是映射关系，包括TLB","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1551885609,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":72761,"user_name":"Geek_144313","can_delete":false,"product_type":"c1","uid":1433435,"ip_address":"","ucode":"AAD5B7ABAAF46C","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTI6YQqjOk5gJQ6xEz9N15BOB4cbxoUMPzL0y5ibA4ia7pqkRic6nzwmoPFNHlHdFh2pJELiabWSia6Zmsg/132","comment_is_top":false,"comment_ctime":1551712392,"is_pvip":false,"replies":[{"id":"26736","content":"没有，这个逻辑不能倒着推：系统调用会有上下文切换，但反之不成立","user_name":"作者回复","user_name_real":"倪朋飞","uid":"1001282","ctime":1551882880,"ip_address":"","comment_id":72761,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1551712392","product_id":100020901,"comment_content":"针对单核cpu，单进程单线程，前面说到进程上下文切换会涉及系统调用，但是后面说到单进程单线程切换和进程上下文切换一样，那么我不理解的是，系统调用必然是会引发上下文切换，CPU调度也必然会引发上下文切换，但是上下文切换难道和系统调用是必然联系吗？望解答","like_count":0,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":441729,"discussion_content":"没有，这个逻辑不能倒着推：系统调用会有上下文切换，但反之不成立","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1551882880,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":72758,"user_name":"Geek_144313","can_delete":false,"product_type":"c1","uid":1433435,"ip_address":"","ucode":"AAD5B7ABAAF46C","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTI6YQqjOk5gJQ6xEz9N15BOB4cbxoUMPzL0y5ibA4ia7pqkRic6nzwmoPFNHlHdFh2pJELiabWSia6Zmsg/132","comment_is_top":false,"comment_ctime":1551711913,"is_pvip":false,"replies":[{"id":"26735","content":"不是的，调度是内核的职责，系统调用会调度，还有很多其他需要调度的时机（比如CPU的负载均衡）","user_name":"作者回复","user_name_real":"倪朋飞","uid":"1001282","ctime":1551882799,"ip_address":"","comment_id":72758,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1551711913","product_id":100020901,"comment_content":"老师好,可以说CPU调度就会进行上下文切换，那么是否可以说CPU调度就会进行系统调用呢（假如进程为单线程）","like_count":0,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":441727,"discussion_content":"不是的，调度是内核的职责，系统调用会调度，还有很多其他需要调度的时机（比如CPU的负载均衡）","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1551882799,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":72755,"user_name":"Mr_杨","can_delete":false,"product_type":"c1","uid":1008065,"ip_address":"","ucode":"AD31C2320DF6A2","user_header":"https://static001.geekbang.org/account/avatar/00/0f/61/c1/9ad88d67.jpg","comment_is_top":false,"comment_ctime":1551710712,"is_pvip":false,"replies":[{"id":"26733","content":"不算多","user_name":"作者回复","user_name_real":"倪朋飞","uid":"1001282","ctime":1551882710,"ip_address":"","comment_id":72755,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1551710712","product_id":100020901,"comment_content":"vmstat 上下文切换2W是不是太多了，us:40多，id50左右，","like_count":0,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":441726,"discussion_content":"不算多","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1551882710,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":72598,"user_name":"群书","can_delete":false,"product_type":"c1","uid":1437036,"ip_address":"","ucode":"BA9EE71D2D818A","user_header":"https://static001.geekbang.org/account/avatar/00/15/ed/6c/6fb35017.jpg","comment_is_top":false,"comment_ctime":1551675745,"is_pvip":true,"replies":[{"id":"26332","content":"是的，只是叫法不同。也可以理解为系统调用包括了CPU上下文切换的过程","user_name":"作者回复","user_name_real":"倪朋飞","uid":"1001282","ctime":1551706691,"ip_address":"","comment_id":72598,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1551675745","product_id":100020901,"comment_content":"系统调用过程通常称为特权模式切换，而不是上下文切换。但实际上，系统调用过程中，CPU 的上下文切换还是无法避免的。<br>这句话我不能理解，到底是不是上下文切换呢？","like_count":0,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":441648,"discussion_content":"是的，只是叫法不同。也可以理解为系统调用包括了CPU上下文切换的过程","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1551706691,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":71549,"user_name":"Boy-struggle","can_delete":false,"product_type":"c1","uid":1402286,"ip_address":"","ucode":"94113E2837DC29","user_header":"https://static001.geekbang.org/account/avatar/00/15/65/ae/9727318e.jpg","comment_is_top":false,"comment_ctime":1551367042,"is_pvip":false,"replies":[{"id":"26303","content":"不是线程会关中断，而是驱动程序。长时间关闭中断的确会导致很严重的问题，所以中断处理程序（特别是上半部）都需要快速结束，耗时的任务放到下半部才处理。","user_name":"作者回复","user_name_real":"倪朋飞","uid":"1001282","ctime":1551703066,"ip_address":"","comment_id":71549,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1551367042","product_id":100020901,"comment_content":"为什么有的线程会关闭中断，这样是不是与之前讨论的优先级冲突？而且长时间关闭中断会触发NMI导致服务器重启，查看内调用栈发现是线程R状态锁死cpu，调用点是mp2sas，这是什么原因？","like_count":0,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":441196,"discussion_content":"不是线程会关中断，而是驱动程序。长时间关闭中断的确会导致很严重的问题，所以中断处理程序（特别是上半部）都需要快速结束，耗时的任务放到下半部才处理。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1551703066,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":69816,"user_name":"仙道","can_delete":false,"product_type":"c1","uid":1402218,"ip_address":"","ucode":"3F3B35929E08C9","user_header":"https://static001.geekbang.org/account/avatar/00/15/65/6a/67f55083.jpg","comment_is_top":false,"comment_ctime":1550851243,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1550851243","product_id":100020901,"comment_content":"打卡，周末还是要抽空操作下看过的东西","like_count":0},{"had_liked":false,"id":69382,"user_name":"平安喜乐","can_delete":false,"product_type":"c1","uid":1102350,"ip_address":"","ucode":"B97D8944B0B035","user_header":"https://static001.geekbang.org/account/avatar/00/10/d2/0e/26bf35a4.jpg","comment_is_top":false,"comment_ctime":1550731656,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1550731656","product_id":100020901,"comment_content":"打卡","like_count":0},{"had_liked":false,"id":68110,"user_name":"李亮亮","can_delete":false,"product_type":"c1","uid":1116508,"ip_address":"","ucode":"290907F930B261","user_header":"https://static001.geekbang.org/account/avatar/00/11/09/5c/b5d79d20.jpg","comment_is_top":false,"comment_ctime":1550415359,"is_pvip":false,"replies":[{"id":"24370","content":"是的，可以这么理解","user_name":"作者回复","user_name_real":"倪朋飞","uid":"1001282","ctime":1550570061,"ip_address":"","comment_id":68110,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1550415359","product_id":100020901,"comment_content":"老师，感觉系统调用跟中断上下文切换区别不大，如果我没记错系统调用也成为软中断，采用的也是中断方式。","like_count":0,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":439519,"discussion_content":"是的，可以这么理解","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1550570061,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":67834,"user_name":"小花","can_delete":false,"product_type":"c1","uid":1401483,"ip_address":"","ucode":"BFF0A1A59FD35D","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/umxqic2CHGySYhT47Rz03ePCloIZ7X21dCLZMVo82m2gjhJdJVqYt3AOdZUXg1roTNSRibkj2g5eia76cbFdxjliag/132","comment_is_top":false,"comment_ctime":1550292887,"is_pvip":false,"replies":[{"id":"24050","content":"不是的，8个线程不一定都是活跃的（CPU总是占用100%）。","user_name":"作者回复","user_name_real":"倪朋飞","uid":"1001282","ctime":1550326559,"ip_address":"","comment_id":67834,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1550292887","product_id":100020901,"comment_content":"关于多线程问题，8个逻辑cpu，是不是最好只开8个线程。。这样可以减少线程上下文的切换。。。","like_count":0,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":439391,"discussion_content":"不是的，8个线程不一定都是活跃的（CPU总是占用100%）。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1550326559,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":67388,"user_name":"bruce bao","can_delete":false,"product_type":"c1","uid":1020381,"ip_address":"","ucode":"D4722704372856","user_header":"https://static001.geekbang.org/account/avatar/00/0f/91/dd/d2d02871.jpg","comment_is_top":false,"comment_ctime":1550138052,"is_pvip":false,"replies":[{"id":"24032","content":"会的，实际上是映射表的更新，更新后刷新TLB会影响内存的访问速度","user_name":"作者回复","user_name_real":"倪朋飞","uid":"1001282","ctime":1550325209,"ip_address":"","comment_id":67388,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1550138052","product_id":100020901,"comment_content":"对下面的话有个疑问：上下文切换中保存&#47;加载用户态的虚拟内存会造成虚拟内存的更新吗？会使内存访问变慢吗？<br><br>&quot;Linux 通过 TLB（Translation Lookaside Buffer）来管理虚拟内存到物理内存的映射关系。当虚拟内存更新后，TLB 也需要刷新，内存的访问也会随之变慢&quot;","like_count":0,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":439172,"discussion_content":"会的，实际上是映射表的更新，更新后刷新TLB会影响内存的访问速度","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1550325209,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":65763,"user_name":"sunsweet","can_delete":false,"product_type":"c1","uid":1027879,"ip_address":"","ucode":"787F9E1EC6A67E","user_header":"https://static001.geekbang.org/account/avatar/00/0f/af/27/76489618.jpg","comment_is_top":false,"comment_ctime":1549630310,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1549630310","product_id":100020901,"comment_content":"cpu上下文切换还有用户态函数调用的上下文切换，这是最轻量级的，嘿嘿","like_count":0},{"had_liked":false,"id":65758,"user_name":"sunsweet","can_delete":false,"product_type":"c1","uid":1027879,"ip_address":"","ucode":"787F9E1EC6A67E","user_header":"https://static001.geekbang.org/account/avatar/00/0f/af/27/76489618.jpg","comment_is_top":false,"comment_ctime":1549627197,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1549627197","product_id":100020901,"comment_content":"今天才明白 为什么要尽量少的调用系统调用，原来陷入内核态也有不小的额外开销，虽然比进程上下文切换开销小很多。满满的干货，感谢老师","like_count":0},{"had_liked":false,"id":65093,"user_name":"lq","can_delete":false,"product_type":"c1","uid":1112815,"ip_address":"","ucode":"1C9D741B906403","user_header":"https://static001.geekbang.org/account/avatar/00/10/fa/ef/9d3fcb40.jpg","comment_is_top":false,"comment_ctime":1549036438,"is_pvip":false,"replies":[{"id":"23135","content":"👍","user_name":"作者回复","user_name_real":"倪朋飞","uid":"1001282","ctime":1549160957,"ip_address":"","comment_id":65093,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1549036438","product_id":100020901,"comment_content":"总结：上下文切换包括 进程上下文切换，线程上下文切换，响应中断事件的上下文切换（如鼠标按键等），用户态进程陷入内核时进行系统调用时的上下文切换（如打开文件）。<br>进程上下文切换需要保存当前进程虚拟内存，cpu寄存器，pc寄存器等的上下文信息。<br>线程上下文切换包括不同进程的上下文切换与同一进程的上下文切换，不同进程的切换等同进程上下文切换。同一进程中的线程上下文切换需要保存当前线程的堆栈，pc寄存器等信息。<br>中断及系统调用上下文切换不涉及用户态上下文切换，仅切换内核态上下文","like_count":0,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":438317,"discussion_content":"👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1549160957,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":64999,"user_name":"L33K","can_delete":false,"product_type":"c1","uid":1046063,"ip_address":"","ucode":"2F8E105F44E347","user_header":"https://static001.geekbang.org/account/avatar/00/0f/f6/2f/d3f1dae6.jpg","comment_is_top":false,"comment_ctime":1548995050,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1548995050","product_id":100020901,"comment_content":"mark","like_count":0},{"had_liked":false,"id":64640,"user_name":"梦回汉唐","can_delete":false,"product_type":"c1","uid":1321581,"ip_address":"","ucode":"9C66E35165F813","user_header":"https://static001.geekbang.org/account/avatar/00/14/2a/6d/0e436c1c.jpg","comment_is_top":false,"comment_ctime":1548839712,"is_pvip":false,"replies":[{"id":"22987","content":"是的，但是虚拟内存到物理内存的映射是由TLB管理的。进程切换后，这个映射关系就需要刷新。","user_name":"作者回复","user_name_real":"倪朋飞","uid":"1001282","ctime":1548943868,"ip_address":"","comment_id":64640,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1548839712","product_id":100020901,"comment_content":"老师好，我有个疑问没明白。进程上下文切换的时候，为什么需要刷新虚拟内存，进而刷新TLB。在我理解，进程上下文切换，保存虚拟内存的地址，当该进程再次切换回来的时候，只需要照当上次保存的虚拟内存地址就可以找到物理内存了，这个刷新是什么意思呢？","like_count":0,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":438113,"discussion_content":"是的，但是虚拟内存到物理内存的映射是由TLB管理的。进程切换后，这个映射关系就需要刷新。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1548943868,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":63021,"user_name":"曾经瘦过","can_delete":false,"product_type":"c1","uid":1240106,"ip_address":"","ucode":"57C32575A1C1FD","user_header":"https://static001.geekbang.org/account/avatar/00/12/ec/2a/b11d5ad8.jpg","comment_is_top":false,"comment_ctime":1548229769,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1548229769","product_id":100020901,"comment_content":"打卡  学习到了  我是做android 开发的 android 底层是linux 系统，不熟悉 linux 限制了我的发展，希望能够借此机会同时提高一下linux的能力，这些文件 命令感觉对android 进行性能优化的时候有很多帮助","like_count":0},{"had_liked":false,"id":63000,"user_name":"Juinn","can_delete":false,"product_type":"c1","uid":1334226,"ip_address":"","ucode":"257796850A6CD9","user_header":"https://static001.geekbang.org/account/avatar/00/14/5b/d2/34a8c79c.jpg","comment_is_top":false,"comment_ctime":1548223821,"is_pvip":false,"replies":[{"id":"22338","content":"不是的","user_name":"作者回复","user_name_real":"倪朋飞","uid":"1001282","ctime":1548252017,"ip_address":"","comment_id":63000,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1548223821","product_id":100020901,"comment_content":"系统调用的上下文切换的类型是中断上下文切换么？","like_count":0,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":437433,"discussion_content":"不是的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1548252017,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":60997,"user_name":"Allen","can_delete":false,"product_type":"c1","uid":1248304,"ip_address":"","ucode":"56F10976A79D20","user_header":"https://static001.geekbang.org/account/avatar/00/13/0c/30/a2e7728a.jpg","comment_is_top":false,"comment_ctime":1547602172,"is_pvip":false,"replies":[{"id":"22316","content":"其他进程需要的资源可能还是充足的","user_name":"作者回复","user_name_real":"倪朋飞","uid":"1001282","ctime":1548249698,"ip_address":"","comment_id":60997,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1547602172","product_id":100020901,"comment_content":"其二，进程在系统资源不足（比如内存不足）时，要等到资源满足后才可以运行，这个时候进程也会被挂起，并由系统调度其他进程运行。<br>老师，文中提到这句话不是很理解，既然内存资源不足，就算调度其他的进程也不能运行，为何还要进行进程调度？","like_count":0,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":436701,"discussion_content":"其他进程需要的资源可能还是充足的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1548249698,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":57975,"user_name":"closer","can_delete":false,"product_type":"c1","uid":1368990,"ip_address":"","ucode":"69F38480DF8491","user_header":"https://static001.geekbang.org/account/avatar/00/14/e3/9e/b26da70d.jpg","comment_is_top":false,"comment_ctime":1546954904,"is_pvip":false,"replies":[{"id":"20989","content":"好像没有直接的工具，不过从原理上，所有切换到会涉及CPU上下文；Linux调度的单位是线程，所以进程切换也肯定对应某个线程的切换；而进程则还要多了虚拟内存的切换，所以还可以参考内存管理观察","user_name":"作者回复","user_name_real":"倪朋飞","uid":"1001282","ctime":1547027717,"ip_address":"","comment_id":57975,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1546954904","product_id":100020901,"comment_content":"老师 我请问下 有没有命令可以看到，上下文切换到底是进程切换 线程切换 还是CPU切换等等。谢谢","like_count":0,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":435857,"discussion_content":"好像没有直接的工具，不过从原理上，所有切换到会涉及CPU上下文；Linux调度的单位是线程，所以进程切换也肯定对应某个线程的切换；而进程则还要多了虚拟内存的切换，所以还可以参考内存管理观察","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1547027717,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":54968,"user_name":"花开蝶自来","can_delete":false,"product_type":"c1","uid":1358144,"ip_address":"","ucode":"767D55E7A82975","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKibu8C3CeYGF6JCBribiaEPia5gibaQnj9icryPVwoF6ibosmdicXJIhBEUdn0aDwZQ32oTyJL86DgDswhAg/132","comment_is_top":false,"comment_ctime":1545990037,"is_pvip":false,"replies":[{"id":"19913","content":"虚拟内存的映射关系，也就是页表和TLB","user_name":"作者回复","user_name_real":"倪朋飞","uid":"1001282","ctime":1546001797,"ip_address":"","comment_id":54968,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1545990037","product_id":100020901,"comment_content":"不太懂虚拟内存的保存是指什么？内存本来就在ram中，还需要怎么保存？保存指向这些内存空间的元数据保存吗？","like_count":0,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":434633,"discussion_content":"虚拟内存的映射关系，也就是页表和TLB","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1546001797,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":54962,"user_name":"花开蝶自来","can_delete":false,"product_type":"c1","uid":1358144,"ip_address":"","ucode":"767D55E7A82975","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKibu8C3CeYGF6JCBribiaEPia5gibaQnj9icryPVwoF6ibosmdicXJIhBEUdn0aDwZQ32oTyJL86DgDswhAg/132","comment_is_top":false,"comment_ctime":1545989255,"is_pvip":false,"replies":[{"id":"19914","content":"内核管理的内存中","user_name":"作者回复","user_name_real":"倪朋飞","uid":"1001282","ctime":1546001816,"ip_address":"","comment_id":54962,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1545989255","product_id":100020901,"comment_content":"“这些保存下来的上下文，会存储在系统内核中” 意思是内核的内存区吗，系统进程使用的内存区？","like_count":0,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":434631,"discussion_content":"内核管理的内存中","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1546001816,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":53510,"user_name":"管清麟","can_delete":false,"product_type":"c1","uid":1198013,"ip_address":"","ucode":"7CA1651D0DE257","user_header":"https://static001.geekbang.org/account/avatar/00/12/47/bd/5c34df95.jpg","comment_is_top":false,"comment_ctime":1545660255,"is_pvip":false,"replies":[{"id":"19393","content":"进程的虚拟内存，后面内存部分会讲的","user_name":"作者回复","user_name_real":"倪朋飞","uid":"1001282","ctime":1545664273,"ip_address":"","comment_id":53510,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1545660255","product_id":100020901,"comment_content":"这里虚拟内存指的是什么？swap吗？还有栈是啥？","like_count":0,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":434162,"discussion_content":"进程的虚拟内存，后面内存部分会讲的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1545664273,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":53509,"user_name":"管清麟","can_delete":false,"product_type":"c1","uid":1198013,"ip_address":"","ucode":"7CA1651D0DE257","user_header":"https://static001.geekbang.org/account/avatar/00/12/47/bd/5c34df95.jpg","comment_is_top":false,"comment_ctime":1545660213,"is_pvip":false,"replies":[{"id":"19394","content":"👍","user_name":"作者回复","user_name_real":"倪朋飞","uid":"1001282","ctime":1545664278,"ip_address":"","comment_id":53509,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1545660213","product_id":100020901,"comment_content":"打卡第四天","like_count":0,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":434161,"discussion_content":"👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1545664278,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":53110,"user_name":"GaoLiaoLiao","can_delete":false,"product_type":"c1","uid":1106798,"ip_address":"","ucode":"CF83BC257CDE51","user_header":"https://static001.geekbang.org/account/avatar/00/10/e3/6e/a905ef6d.jpg","comment_is_top":false,"comment_ctime":1545602477,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1545602477","product_id":100020901,"comment_content":"内核堆栈是指什么呢，是指kernel stack吗？还是指kernel heap + kernel stack?<br>","like_count":0},{"had_liked":false,"id":52234,"user_name":"13001236383","can_delete":false,"product_type":"c1","uid":1247035,"ip_address":"","ucode":"5A1213A1B2466D","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLx1Jz78aibuoJEWdLTsDhucnVDTvkkeRX2w6ZJWXp0h7Zfe7GM6vKAx3jNhFhJJaElDCicyHpf1e9Q/132","comment_is_top":false,"comment_ctime":1545353687,"is_pvip":false,"replies":[{"id":"19084","content":"内存后面会讲的","user_name":"作者回复","user_name_real":"倪朋飞","uid":"1001282","ctime":1545386417,"ip_address":"","comment_id":52234,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1545353687","product_id":100020901,"comment_content":"请教下内核态和用户态分别在CPU和内存的具体提现，CPU的ring0和ring3抽象的是指令的区别？内存是操作系统专为内核划分的内核区间？","like_count":0,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":433795,"discussion_content":"内存后面会讲的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1545386417,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":52023,"user_name":"颜培攀","can_delete":false,"product_type":"c1","uid":1246561,"ip_address":"","ucode":"AC8839AB6C69F8","user_header":"https://static001.geekbang.org/account/avatar/00/13/05/61/fc303f93.jpg","comment_is_top":false,"comment_ctime":1545296506,"is_pvip":true,"replies":[{"id":"18880","content":"请参考第09篇软中断的含义","user_name":"作者回复","user_name_real":"倪朋飞","uid":"1001282","ctime":1545312742,"ip_address":"","comment_id":52023,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1545296506","product_id":100020901,"comment_content":"软件中断。是一条CPU指令，用以自陷一个中断。由于软中断指令通常要运行一个切换CPU至内核态（Kernel Mode&#47;Ring 0）的子例程，它常被用作实现系统调用（System call）。","like_count":0,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":433704,"discussion_content":"请参考第09篇软中断的含义","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1545312742,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":52019,"user_name":"Only now","can_delete":false,"product_type":"c1","uid":1038574,"ip_address":"","ucode":"C617473A03AE27","user_header":"https://static001.geekbang.org/account/avatar/00/0f/d8/ee/6e7c2264.jpg","comment_is_top":false,"comment_ctime":1545295390,"is_pvip":false,"replies":[{"id":"18882","content":"👍","user_name":"作者回复","user_name_real":"倪朋飞","uid":"1001282","ctime":1545312753,"ip_address":"","comment_id":52019,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1545295390","product_id":100020901,"comment_content":"mark ","like_count":0,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":433701,"discussion_content":"👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1545312753,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":50127,"user_name":"孙成子","can_delete":false,"product_type":"c1","uid":1317819,"ip_address":"","ucode":"7DF58E9202FC60","user_header":"https://static001.geekbang.org/account/avatar/00/14/1b/bb/4a749b6c.jpg","comment_is_top":false,"comment_ctime":1544875150,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1544875150","product_id":100020901,"comment_content":"Ｄ3","like_count":0},{"had_liked":false,"id":48490,"user_name":"刘军","can_delete":false,"product_type":"c1","uid":1341396,"ip_address":"","ucode":"52792A3F0F8A4F","user_header":"https://static001.geekbang.org/account/avatar/00/14/77/d4/4f770702.jpg","comment_is_top":false,"comment_ctime":1544452324,"is_pvip":false,"replies":[{"id":"17330","content":"可以的，比如多核系统可以并行运行不同的进程或者线程","user_name":"作者回复","user_name_real":"倪朋飞","uid":"1001282","ctime":1544487522,"ip_address":"","comment_id":48490,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1544452324","product_id":100020901,"comment_content":"老师，请教个入门级问题，操作系统同一时间能运行多个进程吗，还是说只能执行一个进程但是一个进程可以有多个线程。","like_count":0,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":432205,"discussion_content":"可以的，比如多核系统可以并行运行不同的进程或者线程","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1544487522,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":48389,"user_name":"soooldier","can_delete":false,"product_type":"c1","uid":1000746,"ip_address":"","ucode":"04EC4C01DD06FD","user_header":"https://static001.geekbang.org/account/avatar/00/0f/45/2a/c4413de4.jpg","comment_is_top":false,"comment_ctime":1544433935,"is_pvip":false,"replies":[{"id":"17345","content":"这是几核的系统？试试mpstat -P ALL 是不是每个CPU都是这样？","user_name":"作者回复","user_name_real":"倪朋飞","uid":"1001282","ctime":1544488505,"ip_address":"","comment_id":48389,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1544433935","product_id":100020901,"comment_content":"老师您好，在上节执行stress -c 8 --timeout 600的例子中，模拟的是进程在竞争CPU的过程中造成上下文切换次数变多从而导致LOAD增高。但通过vmstat查看cs的次数只比正常情况高3到4倍左右，且通过mpstat查看%sys很低，全都是%usr（上下文切换发生在内核态，应该%sys高才对），请问这是什么原因呢？","like_count":0,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":432158,"discussion_content":"这是几核的系统？试试mpstat -P ALL 是不是每个CPU都是这样？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1544488505,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":47962,"user_name":"小老鼠","can_delete":false,"product_type":"c1","uid":1257460,"ip_address":"","ucode":"C663A0C863A515","user_header":"https://static001.geekbang.org/account/avatar/00/13/2f/f4/2dede51a.jpg","comment_is_top":false,"comment_ctime":1544268748,"is_pvip":false,"replies":[{"id":"17074","content":"不是的，也有可能业务的负载加重、中断增多这些外部因素引起的。","user_name":"作者回复","user_name_real":"倪朋飞","uid":"1001282","ctime":1544312342,"ip_address":"","comment_id":47962,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1544268748","product_id":100020901,"comment_content":"发生CPU上下文切换，一定是程序代码的问题吗？","like_count":0,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":431961,"discussion_content":"不是的，也有可能业务的负载加重、中断增多这些外部因素引起的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1544312342,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":47926,"user_name":"Gaoyc","can_delete":false,"product_type":"c1","uid":1303119,"ip_address":"","ucode":"0320CEE480B4C5","user_header":"https://static001.geekbang.org/account/avatar/00/13/e2/4f/0748c63e.jpg","comment_is_top":false,"comment_ctime":1544258141,"is_pvip":false,"replies":[{"id":"17855","content":"这些没有展开，可以找一下CPU体系结构的书或者文章看看","user_name":"作者回复","user_name_real":"倪朋飞","uid":"1001282","ctime":1544746998,"ip_address":"","comment_id":47926,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1544258141","product_id":100020901,"comment_content":"老师课程中涉及到cpu的结构这块，memory和GR这两块从课程上理解应该是寄存器和计数器，其中计数器包括几层？(图上显示r0到rn),寄存器是一块连续的cpu内存还是伴随计数器个数行成的内存？图中其它区域是应该怎么理解？","like_count":0,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":431948,"discussion_content":"这些没有展开，可以找一下CPU体系结构的书或者文章看看","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1544746998,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":47860,"user_name":"一念无明","can_delete":false,"product_type":"c1","uid":1324487,"ip_address":"","ucode":"2BDEC60A3590A1","user_header":"https://static001.geekbang.org/account/avatar/00/14/35/c7/9e292197.jpg","comment_is_top":false,"comment_ctime":1544238135,"is_pvip":false,"replies":[{"id":"17059","content":"1. 记不清确切的测试结果了，大致上单次上下文切换过程可能就需要花费数毫秒的时间<br><br>2. 数据库的模型更多的是历史原因以及可维护性的问题（比如多线程要比多进程难维护的多）","user_name":"作者回复","user_name_real":"倪朋飞","uid":"1001282","ctime":1544280461,"ip_address":"","comment_id":47860,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1544238135","product_id":100020901,"comment_content":"老师，有几个问题，希望可以抽时间解答一番：文中说到，多进程的线程切换相比单进程的线程切换会消耗更多资源，但是这块的性能损耗究竟会有多大呢？有没有相应的性能测试结果供参考？另外很多数据库产品采用单进程多线程的设计（比如mysql），而不是多进程（比如oracle），是不是就在考量这个？<br><br>","like_count":0,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":431916,"discussion_content":"1. 记不清确切的测试结果了，大致上单次上下文切换过程可能就需要花费数毫秒的时间\n\n2. 数据库的模型更多的是历史原因以及可维护性的问题（比如多线程要比多进程难维护的多）","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1544280461,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":47629,"user_name":"如果","can_delete":false,"product_type":"c1","uid":1320638,"ip_address":"","ucode":"138A3EEEE50850","user_header":"","comment_is_top":false,"comment_ctime":1544168181,"is_pvip":false,"replies":[{"id":"17012","content":"这是操作系统的工作，sys高","user_name":"作者回复","user_name_real":"倪朋飞","uid":"1001282","ctime":1544193435,"ip_address":"","comment_id":47629,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1544168181","product_id":100020901,"comment_content":"DAY3<br>请问老师：cpu的上下文切换导致CPU使用率过高时，是体现在%usr，%sys中的那一项增高？","like_count":0,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":431840,"discussion_content":"这是操作系统的工作，sys高","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1544193435,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":47513,"user_name":"流血的手指","can_delete":false,"product_type":"c1","uid":1012632,"ip_address":"","ucode":"D50D16BF7B0B37","user_header":"","comment_is_top":false,"comment_ctime":1544149276,"is_pvip":false,"replies":[{"id":"17858","content":"都有，但切换的东西不同，线程是调度时的CPU，而进程则是资源，比如虚拟内存","user_name":"作者回复","user_name_real":"倪朋飞","uid":"1001282","ctime":1544747589,"ip_address":"","comment_id":47513,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1544149276","product_id":100020901,"comment_content":"线程是调度的基本单位。是不是意味着，其实没有进程的切换，或者说进程的切换其实就是线程的跨进程切换？","like_count":0,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":431789,"discussion_content":"都有，但切换的东西不同，线程是调度时的CPU，而进程则是资源，比如虚拟内存","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1544747589,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":47281,"user_name":"DAN","can_delete":false,"product_type":"c1","uid":1322215,"ip_address":"","ucode":"E08589F3048012","user_header":"https://static001.geekbang.org/account/avatar/00/14/2c/e7/92d3c765.jpg","comment_is_top":false,"comment_ctime":1544099381,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1544099381","product_id":100020901,"comment_content":"签到","like_count":0},{"had_liked":false,"id":47223,"user_name":"朱雯","can_delete":false,"product_type":"c1","uid":1035744,"ip_address":"","ucode":"064C45FBF6B51F","user_header":"https://static001.geekbang.org/account/avatar/00/0f/cd/e0/c85bb948.jpg","comment_is_top":false,"comment_ctime":1544080796,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1544080796","product_id":100020901,"comment_content":"这章的内容也太多了吧，做了一个小小的总结<br>1:问题引出：io密集，cpu密集或者进程太多会导致负载高，先讨论进程太多的问题<br>进程在竞争cpu的时候并没有真正的运行，原因在于cpu的上下文切换<br><br>linux多进程真像： 并非同时运行，而是在相当短的时间内，将cpu分配给他们，从而实现多个任务同时运行的错觉<br>任务运行前:cpu做的事情是什么？1:设置好cpu寄存器和程序计数器，cpu寄存器，速度极其快的内存 2：cpu计数器(pc)，记录什么时候加载，从哪里运。被称之为cpu上下文<br><br>上下文切换含义：把上一个cpu的上文保存，然后跳转到程序计数器的新位置，进行新任务。<br>任务的划分：1进程间的上下文切换，线程间的上下文切换，中断上下文切换<br><br><br><br>问题：为什么专门为任务切换的cpu会因为寄存器的数据更新而影响负载的变化<br><br><br>任务上下文切换的场景有哪些：进程cpu切换，线程cpu切换，中断上下文切换<br><br><br>进程上下文切换如何影响负载升高：<br>基础知识：<br>什么是系统调用：ring0(内核空间) ring3(用户空间)，进程在用户空间执行称之为用户态，在内核空间执行，称之为内核态。用户态到内核态度使用，称之为系统调用。也叫特权模式切换<br><br>进程上下文切换:切换进程，切换上下文，同时包括切换用户态的各种虚拟资源。<br><br>进程切换的方式：在内核态进行切换，切换的内容包括，虚拟内存，栈，全部变量等用户空间资源，还包括内核堆，寄存器等内核空间状态<br><br>出现问题的原因:上下文切换需要几十纳秒到几微秒的cpu时间，这个时间对cpu来说相当漫长。特别是进程切换时许你内存，栈等用户空间资源的保存需要大量的时间。第二tlb(虚拟内存到物理内存的映射)，也是需要刷新的，所以进程的切换是很容易导致cpu使用率上升的<br><br>ps:进程调度的的原理和方式：<br>1:进程运行完<br>2:时间片运行<br>3:资源不足，停止，比如内存不足。<br>4:高优先级抢占<br>5:硬件中断，<br><br>线程上下文切换如何影响负载升高：<br>1:线程不是资源分配的基本单位，所以线程的切换分两种<br>第一种:切换线程的同时切换进程，影响原因和进程间切换是一样的<br>第二种：不切换进程，那么只需要保存一部分上下文，而没有用户资源的切换<br><br>中断上下文切换：<br>1:基础知识：中断的优先级别高于进程<br>2:中断不会打断正常调度和执行，所以不需要保存用户资源<br>3:如果频繁出现中断，对cpu消耗也是很大","like_count":0},{"had_liked":false,"id":47131,"user_name":"明天早点睡","can_delete":false,"product_type":"c1","uid":1125007,"ip_address":"","ucode":"FDBFEFBB264DFC","user_header":"https://static001.geekbang.org/account/avatar/00/11/2a/8f/666669f8.jpg","comment_is_top":false,"comment_ctime":1544061086,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1544061086","product_id":100020901,"comment_content":"打卡","like_count":0},{"had_liked":false,"id":46965,"user_name":"小强","can_delete":false,"product_type":"c1","uid":1294353,"ip_address":"","ucode":"154A18AD4028F3","user_header":"https://static001.geekbang.org/account/avatar/00/13/c0/11/3d59119f.jpg","comment_is_top":false,"comment_ctime":1544011139,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1544011139","product_id":100020901,"comment_content":"打卡","like_count":0},{"had_liked":false,"id":46442,"user_name":"Vicky🐣🐣🐣","can_delete":false,"product_type":"c1","uid":1266840,"ip_address":"","ucode":"F659F178A2FF34","user_header":"https://static001.geekbang.org/account/avatar/00/13/54/98/52ca7053.jpg","comment_is_top":false,"comment_ctime":1543927279,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1543927279","product_id":100020901,"comment_content":"1.关于中断这里，希望老师能再细讲一下<br>2.如果说线程是调度的基本单位，那么文中所说的CPU把时间切片分配，就是分配给线程吗？<br><br>受益匪浅，谢谢老师","like_count":0},{"had_liked":false,"id":46140,"user_name":"蒋良权","can_delete":false,"product_type":"c1","uid":1236189,"ip_address":"","ucode":"5A355D37948D59","user_header":"https://static001.geekbang.org/account/avatar/00/12/dc/dd/cf9e4ade.jpg","comment_is_top":false,"comment_ctime":1543852860,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1543852860","product_id":100020901,"comment_content":"老师，cpu对进程和线程的调度有什么联系么？我有以下几个疑问:<br>1.线程是cpu调度的基本单元，那么我们所说的进程调度是不是等同于对线程调度，线程调度是不是也等同于对进程的调度（假设前后调度的两个线程不属于同个进程）？<br>2.进程调度中有进程的优先级，线程调度中也有线程的优先级，假设不同进程中的两个线程调度，这两个线程都拥有不同的优先级，且所属进程也有不同的优先级，那调度的时候以哪个优先级为准呢？<br><br>","like_count":0},{"had_liked":false,"id":46047,"user_name":"蒋良权","can_delete":false,"product_type":"c1","uid":1236189,"ip_address":"","ucode":"5A355D37948D59","user_header":"https://static001.geekbang.org/account/avatar/00/12/dc/dd/cf9e4ade.jpg","comment_is_top":false,"comment_ctime":1543838642,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1543838642","product_id":100020901,"comment_content":"老师，进程上下文切换是不是主要就是不同进程中的两个线程的上下文切换？","like_count":0},{"had_liked":false,"id":45924,"user_name":"f","can_delete":false,"product_type":"c1","uid":1027733,"ip_address":"","ucode":"8849D39F700E4B","user_header":"https://static001.geekbang.org/account/avatar/00/0f/ae/95/d1b13c9e.jpg","comment_is_top":false,"comment_ctime":1543819494,"is_pvip":false,"replies":[{"id":"16418","content":"会的","user_name":"作者回复","user_name_real":"倪朋飞","uid":"1001282","ctime":1543830827,"ip_address":"","comment_id":45924,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1543819494","product_id":100020901,"comment_content":"打卡<br><br>老师，是否提供些参考资料，书籍","like_count":0,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":431273,"discussion_content":"会的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543830827,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":45796,"user_name":"mark","can_delete":false,"product_type":"c1","uid":1332461,"ip_address":"","ucode":"7135BC57978AAA","user_header":"https://wx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJ6U2qqpFnTbI6gn864YdOIxebTOoJdR6ibwYfUQxwXtl9KjUOJfdJ2aWgsUBYyj5jKqUESluKcUMg/132","comment_is_top":false,"comment_ctime":1543797563,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1543797563","product_id":100020901,"comment_content":"科班出身可能比较容易理解，看来要消化消化了","like_count":0},{"had_liked":false,"id":45792,"user_name":"型火🔥","can_delete":false,"product_type":"c1","uid":1003205,"ip_address":"","ucode":"C2322918B31E60","user_header":"https://static001.geekbang.org/account/avatar/00/0f/4e/c5/78626367.jpg","comment_is_top":false,"comment_ctime":1543797015,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1543797015","product_id":100020901,"comment_content":"D3 mark","like_count":0},{"had_liked":false,"id":45777,"user_name":"悬铃木（赵岩）","can_delete":false,"product_type":"c1","uid":1327862,"ip_address":"","ucode":"BB8285E938EE7B","user_header":"https://static001.geekbang.org/account/avatar/00/14/42/f6/6532d23d.jpg","comment_is_top":false,"comment_ctime":1543794803,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1543794803","product_id":100020901,"comment_content":"运行空间分为内核空间和用户空间，对空间这个概念不是很理解","like_count":0},{"had_liked":false,"id":45747,"user_name":"狼行天下","can_delete":false,"product_type":"c1","uid":1099643,"ip_address":"","ucode":"3C1D0BABB41F3D","user_header":"https://static001.geekbang.org/account/avatar/00/10/c7/7b/2c8db475.jpg","comment_is_top":false,"comment_ctime":1543766887,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1543766887","product_id":100020901,"comment_content":"很好，值得多读多用。","like_count":0},{"had_liked":false,"id":45728,"user_name":"Aaron_涛","can_delete":false,"product_type":"c1","uid":1180617,"ip_address":"","ucode":"067F3CBB1F036C","user_header":"https://static001.geekbang.org/account/avatar/00/12/03/c9/9a9d82ab.jpg","comment_is_top":false,"comment_ctime":1543760683,"is_pvip":false,"replies":[{"id":"16304","content":"这涉及到CPU寄存器的细节了，文中没有展开。实际上，寄存器还可以细化更细的分类，比如通用寄存器、段寄存器等，具体可以参考计算机组成原理书籍","user_name":"作者回复","user_name_real":"倪朋飞","uid":"1001282","ctime":1543796106,"ip_address":"","comment_id":45728,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1543760683","product_id":100020901,"comment_content":"老师，cpu寄存器和PC计数器，分别存放什么呢，pc计数器是放下一条指令的地址，cpu寄存器呢","like_count":0,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":431178,"discussion_content":"这涉及到CPU寄存器的细节了，文中没有展开。实际上，寄存器还可以细化更细的分类，比如通用寄存器、段寄存器等，具体可以参考计算机组成原理书籍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543796106,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":45704,"user_name":"小虎","can_delete":false,"product_type":"c1","uid":1033083,"ip_address":"","ucode":"31438B30CF7910","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/GkMk4gBlfZcljsY3Vqu7w8ZkxBfe8WTz1ySnPTJARKXF0FpCr3HqlicIHQlItib9m7iaxLESkmBNpoiaY81EUUzQrA/132","comment_is_top":false,"comment_ctime":1543755736,"is_pvip":false,"replies":[{"id":"16308","content":"一个是上下文会保存上一个任务（这里是进程）的状态，所以可以恢复回去；第二个是中断运行在内核态，只需要访问内核空间内存","user_name":"作者回复","user_name_real":"倪朋飞","uid":"1001282","ctime":1543796890,"ip_address":"","comment_id":45704,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1543755736","product_id":100020901,"comment_content":"为什么中断不用关心进程用户态，保存虚拟内存和全局变量后面中断完成后还可以回到原来进程执行的状态继续执行？求老师解答","like_count":0,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":431166,"discussion_content":"一个是上下文会保存上一个任务（这里是进程）的状态，所以可以恢复回去；第二个是中断运行在内核态，只需要访问内核空间内存","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543796890,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":45486,"user_name":"gentleman♥️","can_delete":false,"product_type":"c1","uid":1119062,"ip_address":"","ucode":"0BAC746A70038C","user_header":"https://static001.geekbang.org/account/avatar/00/11/13/56/6a062937.jpg","comment_is_top":false,"comment_ctime":1543652808,"is_pvip":false,"replies":[{"id":"16331","content":"👍","user_name":"作者回复","user_name_real":"倪朋飞","uid":"1001282","ctime":1543798023,"ip_address":"","comment_id":45486,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1543652808","product_id":100020901,"comment_content":"说一下 我的看法 <br>1.进程实际上 就说有用户态和内核态的 用户态有自己的状态和内核态也有自己的状态 进程调用最终还说要去调用内核cpu的，所以在切换过程中要保留用户态和内核态的状态啊，要不我下次接着执行，怎么知道上次运行在哪里了，总不可能你一个进程运行到底吧，其他进程就不用运行了吗，那用户还玩个屁的多任务啊，还想看电影又听歌，想多了吧；两个状态的资源都要维护，成本当然就高罗<br>2.而线程就说内核cpu层的操作了，而内核的切换，就只要保留内核层的一些状态数据的记录了，成本就少些嘛，是吧<br>3.中断切换的话，说白了，我运行的好好的，你突然来个网络中断什么，我就要去先去处理网络中断啊，等下再下执行你，不是也要先保留我的一些状态吧，要不恢复网络的时候，我怎么知道，我上次看的电影到哪里了<br>对不对 欢迎老师指正","like_count":0,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":431062,"discussion_content":"👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543798023,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":45476,"user_name":"蒋良权","can_delete":false,"product_type":"c1","uid":1236189,"ip_address":"","ucode":"5A355D37948D59","user_header":"https://static001.geekbang.org/account/avatar/00/12/dc/dd/cf9e4ade.jpg","comment_is_top":false,"comment_ctime":1543651357,"is_pvip":false,"replies":[{"id":"16333","content":"不是的，线程才是调度的基本单位","user_name":"作者回复","user_name_real":"倪朋飞","uid":"1001282","ctime":1543798182,"ip_address":"","comment_id":45476,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1543651357","product_id":100020901,"comment_content":"老师，同一个进程内的线程上下文切换是不是发生在操作系统分配给这个进程的同一个执行时间片内。","like_count":0,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":431055,"discussion_content":"不是的，线程才是调度的基本单位","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543798182,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":45418,"user_name":"why","can_delete":false,"product_type":"c1","uid":1012937,"ip_address":"","ucode":"C9E796E53F6F5E","user_header":"https://static001.geekbang.org/account/avatar/00/0f/74/c9/d3439ca4.jpg","comment_is_top":false,"comment_ctime":1543635380,"is_pvip":false,"replies":[{"id":"16334","content":"进程看到的只是虚拟地址，这些空间最终都是由系统映射为物理地址。进程切换的时候虚拟地址变了也需要切换这些映射关系","user_name":"作者回复","user_name_real":"倪朋飞","uid":"1001282","ctime":1543798629,"ip_address":"","comment_id":45418,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1543635380","product_id":100020901,"comment_content":"老师，在进程切换的过程中会先保存进程的虚拟内存和栈空间，加载下一个进程需要刷新它的虚拟内存和栈空间。我了解到的是虚拟内存和栈空间是分配给进程的，由进程独立管理，为什么还需要像寄存器这些信息一样切换呢。","like_count":0,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":431028,"discussion_content":"进程看到的只是虚拟地址，这些空间最终都是由系统映射为物理地址。进程切换的时候虚拟地址变了也需要切换这些映射关系","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543798629,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":45310,"user_name":"钢","can_delete":false,"product_type":"c1","uid":1106184,"ip_address":"","ucode":"A49848BF63A579","user_header":"https://static001.geekbang.org/account/avatar/00/10/e1/08/3dc76043.jpg","comment_is_top":false,"comment_ctime":1543583326,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1543583326","product_id":100020901,"comment_content":"为什么上下文会占用cpu， 函数调用也是上下文切换，哪一种上下文最花时间， 如何查看每项上下文花费时间呢","like_count":0},{"had_liked":false,"id":45152,"user_name":"glennut","can_delete":false,"product_type":"c1","uid":1018949,"ip_address":"","ucode":"C2DA003561454B","user_header":"https://static001.geekbang.org/account/avatar/00/0f/8c/45/e3e2dfbf.jpg","comment_is_top":false,"comment_ctime":1543550950,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1543550950","product_id":100020901,"comment_content":"老师 ring1和ring2表示的是什么空间呢？","like_count":0},{"had_liked":false,"id":45109,"user_name":"Eric","can_delete":false,"product_type":"c1","uid":1140494,"ip_address":"","ucode":"8FFC6764ED327B","user_header":"https://static001.geekbang.org/account/avatar/00/11/67/0e/2a51a2df.jpg","comment_is_top":false,"comment_ctime":1543547066,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1543547066","product_id":100020901,"comment_content":"时间片用完以后不是被挂起吧？难道不是PCB挂到就绪队列？","like_count":0},{"had_liked":false,"id":45108,"user_name":"senlin.wang","can_delete":false,"product_type":"c1","uid":1314713,"ip_address":"","ucode":"B441411994C320","user_header":"https://static001.geekbang.org/account/avatar/00/14/0f/99/95627ed6.jpg","comment_is_top":false,"comment_ctime":1543546996,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1543546996","product_id":100020901,"comment_content":"调度说的好像不够准确，现在2.6以上都是cfs调度，不在用时间片了吧","like_count":0},{"had_liked":false,"id":44907,"user_name":"草剑","can_delete":false,"product_type":"c1","uid":1026310,"ip_address":"","ucode":"C6DA55E7E1B701","user_header":"https://static001.geekbang.org/account/avatar/00/0f/a9/06/9811fb65.jpg","comment_is_top":false,"comment_ctime":1543505752,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1543505752","product_id":100020901,"comment_content":"打卡","like_count":0},{"had_liked":false,"id":44842,"user_name":"芳","can_delete":false,"product_type":"c1","uid":1317914,"ip_address":"","ucode":"79416F03142ADB","user_header":"https://static001.geekbang.org/account/avatar/00/14/1c/1a/b6fd60e1.jpg","comment_is_top":false,"comment_ctime":1543499122,"is_pvip":false,"replies":[{"id":"16010","content":"1. 整体包括CPU、内存、IO等等<br>2. 参考第4篇","user_name":"作者回复","user_name_real":"倪朋飞","uid":"1001282","ctime":1543537715,"ip_address":"","comment_id":44842,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1543499122","product_id":100020901,"comment_content":"但过多的上下文切换，会把 CPU 时间消耗在寄存器、内核栈以及虚拟内存等数据的保存和恢复上，从而缩短进程真正运行的时间，导致系统的整体性能大幅下降。<br>疑问：<br>1、这里的系统的整体性能指标是什么？是CPU使用率吗？<br>2、我怎么知道系统性能不高是由于过多的CPU上下文切换的呢？也就是cpu的上下文切换我如何观察呢？","like_count":0,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":430848,"discussion_content":"1. 整体包括CPU、内存、IO等等\n2. 参考第4篇","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543537715,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":44800,"user_name":"冰块","can_delete":false,"product_type":"c1","uid":1272694,"ip_address":"","ucode":"36DC4B5DDA267A","user_header":"https://static001.geekbang.org/account/avatar/00/13/6b/76/357291e1.jpg","comment_is_top":false,"comment_ctime":1543494566,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1543494566","product_id":100020901,"comment_content":"老师您好 请教下<br>中断到来的时候 假定此时进程运行在用户态：<br>被打断进程的上下文是由谁来保存的？<br>保存到哪里了？<br>它是怎么知道要保存到这里的？<br>能稍微具体解释一下吗 谢谢","like_count":0},{"had_liked":false,"id":44770,"user_name":"__花祭.","can_delete":false,"product_type":"c1","uid":1316386,"ip_address":"","ucode":"0096FC909CF015","user_header":"https://static001.geekbang.org/account/avatar/00/14/16/22/efc16d64.jpg","comment_is_top":false,"comment_ctime":1543489485,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1543489485","product_id":100020901,"comment_content":"打卡day04","like_count":0},{"had_liked":false,"id":44550,"user_name":"划时代","can_delete":false,"product_type":"c1","uid":1061454,"ip_address":"","ucode":"9554CE2F83B77F","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/2o1Izf2YyJSnnI0ErZ51pYRlnrmibqUTaia3tCU1PjMxuwyXSKOLUYiac2TQ5pd5gNGvS81fVqKWGvDsZLTM8zhWg/132","comment_is_top":false,"comment_ctime":1543456699,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1543456699","product_id":100020901,"comment_content":"以前学过进程线程切换，系统调用，中断等底层原理，但没有从CPU上下文切换的角度统一梳理和理解，受教了。我的问题：中断可分为硬件中断和软中断，这里是指硬件中断吧？从中断的角度看epoll的处理过程，是否硬件中断和软中断都会发生？","like_count":0},{"had_liked":false,"id":44394,"user_name":"李建贵","can_delete":false,"product_type":"c1","uid":1114814,"ip_address":"","ucode":"BC967D4C3F4F50","user_header":"https://static001.geekbang.org/account/avatar/00/11/02/be/bc2ca09d.jpg","comment_is_top":false,"comment_ctime":1543419360,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1543419360","product_id":100020901,"comment_content":"学习了老师讲解的内容，理解了大学时候操作系统教材上晦涩难懂的概念！","like_count":0},{"had_liked":false,"id":44391,"user_name":"大飞","can_delete":false,"product_type":"c1","uid":1320080,"ip_address":"","ucode":"2D98888FC63CA9","user_header":"","comment_is_top":false,"comment_ctime":1543418892,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1543418892","product_id":100020901,"comment_content":"d1打卡","like_count":0},{"had_liked":false,"id":44379,"user_name":"风清扬笑","can_delete":false,"product_type":"c1","uid":1028152,"ip_address":"","ucode":"C0494B7A97A628","user_header":"https://static001.geekbang.org/account/avatar/00/0f/b0/38/076fa6c1.jpg","comment_is_top":false,"comment_ctime":1543416653,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1543416653","product_id":100020901,"comment_content":"0<br><br>你好老师，既然CPU上下文切换有比较大的开销，那么我们在部署的时候如果能尽量避免这种情况的话，也算性能上的优化了吧，具体点，比如线程数量不能超过cpu核心数，这一块能不能具体讲解下<br><br>2018-11-27<br><br> 作者回复<br><br>实际的线上系统还会执行IO，而IO的时候可以把CPU让出来给其他线程使用，所以线程一般比CPU核数多。<br><br>---------------------------------------------<br><br>对，这里我了解到的分IO密集型线程还是计算密集型，那么针对这两种情况，应该如何去分配线程数量，有什么方法，希望老师讲解下","like_count":0},{"had_liked":false,"id":44367,"user_name":"安泰宏","can_delete":false,"product_type":"c1","uid":1101738,"ip_address":"","ucode":"BEA10CE9E7FADF","user_header":"https://static001.geekbang.org/account/avatar/00/10/cf/aa/3aae3e09.jpg","comment_is_top":false,"comment_ctime":1543415164,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1543415164","product_id":100020901,"comment_content":"感觉如果学了汇编语言，这些好像比较容易理解","like_count":0},{"had_liked":false,"id":44254,"user_name":"叨科","can_delete":false,"product_type":"c1","uid":1318322,"ip_address":"","ucode":"59FF212F7B2040","user_header":"","comment_is_top":false,"comment_ctime":1543395121,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1543395121","product_id":100020901,"comment_content":"这节课程太抽象了，需慢慢理解消化","like_count":0},{"had_liked":false,"id":44195,"user_name":"李建贵","can_delete":false,"product_type":"c1","uid":1114814,"ip_address":"","ucode":"BC967D4C3F4F50","user_header":"https://static001.geekbang.org/account/avatar/00/11/02/be/bc2ca09d.jpg","comment_is_top":false,"comment_ctime":1543381447,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1543381447","product_id":100020901,"comment_content":"打卡","like_count":0},{"had_liked":false,"id":44166,"user_name":"樊海涛","can_delete":false,"product_type":"c1","uid":1323249,"ip_address":"","ucode":"0B04D5985EE0E1","user_header":"https://static001.geekbang.org/account/avatar/00/14/30/f1/bf7fd8d2.jpg","comment_is_top":false,"comment_ctime":1543376918,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1543376918","product_id":100020901,"comment_content":"感觉底层的东西还是很抽象，要是有一些通俗易懂的列子来解释下就更好啦，结合实例来学习理论是较有效的办法；","like_count":0},{"had_liked":false,"id":44092,"user_name":"一禅小和尚","can_delete":false,"product_type":"c1","uid":1182806,"ip_address":"","ucode":"5A2A0875DE062A","user_header":"https://static001.geekbang.org/account/avatar/00/12/0c/56/02fba09b.jpg","comment_is_top":false,"comment_ctime":1543368632,"is_pvip":false,"replies":[{"id":"15831","content":"中断的问题后续还会细讲","user_name":"作者回复","user_name_real":"倪朋飞","uid":"1001282","ctime":1543410598,"ip_address":"","comment_id":44092,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1543368632","product_id":100020901,"comment_content":"打卡，关于进城、线程、CPU上下文切换以及硬中断导致的上下文切换，讲的很到位，通过学习也很清楚了，那么软中断和硬中断有区别么？什么区别？信号量导致的中断是什么级别的，类似于进程？还是线程？或者硬中断。还是有点傻傻分不清楚，还请倪老师烦心了😊","like_count":0,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":430625,"discussion_content":"中断的问题后续还会细讲","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543410598,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":43955,"user_name":"怀朔","can_delete":false,"product_type":"c1","uid":1006865,"ip_address":"","ucode":"52FAC1C2FD37B6","user_header":"https://static001.geekbang.org/account/avatar/00/0f/5d/11/e1f36640.jpg","comment_is_top":false,"comment_ctime":1543335112,"is_pvip":false,"replies":[{"id":"15845","content":"思考一下多线程的好处是什么？","user_name":"作者回复","user_name_real":"倪朋飞","uid":"1001282","ctime":1543411398,"ip_address":"","comment_id":43955,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1543335112","product_id":100020901,"comment_content":"不知道 我有没有理解错 .mysql因为是多线程的 所以他无法cpu并行","like_count":0,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":430568,"discussion_content":"思考一下多线程的好处是什么？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543411398,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1324202,"avatar":"https://static001.geekbang.org/account/avatar/00/14/34/aa/431de942.jpg","nickname":"dbtiger","note":"","ucode":"05E8447593318C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":540176,"discussion_content":"同属一个进程的线程，发生上下文切换，只切换线程的私有数据，共享数据不变","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1639981578,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":43932,"user_name":"风清扬笑","can_delete":false,"product_type":"c1","uid":1028152,"ip_address":"","ucode":"C0494B7A97A628","user_header":"https://static001.geekbang.org/account/avatar/00/0f/b0/38/076fa6c1.jpg","comment_is_top":false,"comment_ctime":1543329418,"is_pvip":false,"replies":[{"id":"15847","content":"实际的线上系统还会执行IO，而IO的时候可以把CPU让出来给其他线程使用，所以线程一般比CPU核数多。","user_name":"作者回复","user_name_real":"倪朋飞","uid":"1001282","ctime":1543411765,"ip_address":"","comment_id":43932,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1543329418","product_id":100020901,"comment_content":"你好老师，既然CPU上下文切换有比较大的开销，那么我们在部署的时候如果能尽量避免这种情况的话，也算性能上的优化了吧，具体点，比如线程数量不能超过cpu核心数，这一块能不能具体讲解下","like_count":0,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":430556,"discussion_content":"实际的线上系统还会执行IO，而IO的时候可以把CPU让出来给其他线程使用，所以线程一般比CPU核数多。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543411765,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":43908,"user_name":"学习者","can_delete":false,"product_type":"c1","uid":1017684,"ip_address":"","ucode":"3BF2B29656C1CF","user_header":"https://static001.geekbang.org/account/avatar/00/0f/87/54/727379d8.jpg","comment_is_top":false,"comment_ctime":1543321995,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1543321995","product_id":100020901,"comment_content":"第四篇  打卡","like_count":0},{"had_liked":false,"id":43891,"user_name":"蚂蚁内推+v","can_delete":false,"product_type":"c1","uid":1050508,"ip_address":"","ucode":"24B10AEE54B3FD","user_header":"https://static001.geekbang.org/account/avatar/00/10/07/8c/0d886dcc.jpg","comment_is_top":false,"comment_ctime":1543318824,"is_pvip":false,"replies":[{"id":"15851","content":"中断的优先级更高","user_name":"作者回复","user_name_real":"倪朋飞","uid":"1001282","ctime":1543412086,"ip_address":"","comment_id":43891,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1543318824","product_id":100020901,"comment_content":"跟进程上下文切换不同，中断上下文切换并不涉及到进程的用户态。所以，即便中断过程打断了一个正在用户态的进程，也不需要保存和恢复这个进程的虚拟内存、全局变量等用户态资源。<br>——————————————————————————————————————<br>如果中断打断了一个正在陷入内核态的进程呢？<br>","like_count":0,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":430538,"discussion_content":"中断的优先级更高","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543412086,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":43852,"user_name":"9527","can_delete":false,"product_type":"c1","uid":1032735,"ip_address":"","ucode":"04B51C09E3C7B8","user_header":"https://static001.geekbang.org/account/avatar/00/0f/c2/1f/343f2dec.jpg","comment_is_top":false,"comment_ctime":1543310011,"is_pvip":false,"replies":[{"id":"15853","content":"中断数没有绝对的参考值，软中断还会细讲","user_name":"作者回复","user_name_real":"倪朋飞","uid":"1001282","ctime":1543412205,"ip_address":"","comment_id":43852,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1543310011","product_id":100020901,"comment_content":"老师好，您说的中断就是像unix里面发送出信号吧<br>这个应该是属于软中断，那么怎么通过命令区分是硬件中断还是软件中断呢？<br>我man vmstat 有这么一段<br>   System<br>       in: The number of interrupts per second, including the clock.<br>       cs: The number of context switches per second.<br>这里的in应该是软中断+硬件中断的总和吧<br><br>我写了一个fork死循环<br>while(1) { fork(); }<br>然后中断这个指标狂涨了十几倍，从100多到5000多<br>所以我想问下，正常的中断数一秒多少是合理的呢？<br>另外如何区分硬件中断和软件中断呢？这两个中断一般是什么值比较合理呢？","like_count":0,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":430522,"discussion_content":"中断数没有绝对的参考值，软中断还会细讲","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543412205,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":43814,"user_name":"allan","can_delete":false,"product_type":"c1","uid":1142819,"ip_address":"","ucode":"CA0BE868AA9FF5","user_header":"https://static001.geekbang.org/account/avatar/00/11/70/23/972dcd30.jpg","comment_is_top":false,"comment_ctime":1543302309,"is_pvip":false,"replies":[{"id":"15854","content":"有些内容没有展开，可以学完虚拟内存再回来理解这里的差别。","user_name":"作者回复","user_name_real":"倪朋飞","uid":"1001282","ctime":1543412323,"ip_address":"","comment_id":43814,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1543302309","product_id":100020901,"comment_content":"进程的上下文切换就比系统调用时多了一步，这里的区别感觉理解的不是很透彻。<br>","like_count":0,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":430509,"discussion_content":"有些内容没有展开，可以学完虚拟内存再回来理解这里的差别。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543412323,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":43766,"user_name":"樊海涛","can_delete":false,"product_type":"c1","uid":1323249,"ip_address":"","ucode":"0B04D5985EE0E1","user_header":"https://static001.geekbang.org/account/avatar/00/14/30/f1/bf7fd8d2.jpg","comment_is_top":false,"comment_ctime":1543290623,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1543290623","product_id":100020901,"comment_content":"day4打卡","like_count":0},{"had_liked":false,"id":43705,"user_name":"米雄雄","can_delete":false,"product_type":"c1","uid":1197009,"ip_address":"","ucode":"FBDF8D3D4BF8FA","user_header":"https://static001.geekbang.org/account/avatar/00/12/43/d1/3dd582a8.jpg","comment_is_top":false,"comment_ctime":1543282501,"is_pvip":false,"replies":[{"id":"15857","content":"会被其他线程占用","user_name":"作者回复","user_name_real":"倪朋飞","uid":"1001282","ctime":1543412422,"ip_address":"","comment_id":43705,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1543282501","product_id":100020901,"comment_content":"老师，在一个进程中，当有多个线程，之前一个线程拥有cpu,现在它进行io操作，乃么这个cpu会被这个进程中其他需要cpu的线程使用，还是会被闲置？","like_count":0,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":430466,"discussion_content":"会被其他线程占用","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543412422,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1604435,"avatar":"https://static001.geekbang.org/account/avatar/00/18/7b/53/b74e744b.jpg","nickname":"杨孟凡","note":"","ucode":"392ED5FA73368C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":165892,"discussion_content":"只有一个线程咋办  会继续占着吗？毕竟uninteruptable啊","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1581339960,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":43695,"user_name":"Glen","can_delete":false,"product_type":"c1","uid":1318413,"ip_address":"","ucode":"13693860B3613C","user_header":"https://static001.geekbang.org/account/avatar/00/14/1e/0d/f8ad03fb.jpg","comment_is_top":false,"comment_ctime":1543281736,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1543281736","product_id":100020901,"comment_content":"打卡","like_count":0},{"had_liked":false,"id":43694,"user_name":"狂飙的蜗牛","can_delete":false,"product_type":"c1","uid":1227358,"ip_address":"","ucode":"0F57A6F7DEF567","user_header":"https://static001.geekbang.org/account/avatar/00/12/ba/5e/a299e7d5.jpg","comment_is_top":false,"comment_ctime":1543281657,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1543281657","product_id":100020901,"comment_content":"实际应用中，怎么才能减少cpu上下文切换的开销？<br>减少进程数量？减少线程数量？怎么平衡？<br>怎么感知性能是耗在cpu上下文切换上？<br>","like_count":0},{"had_liked":false,"id":43687,"user_name":"benet","can_delete":false,"product_type":"c1","uid":1315481,"ip_address":"","ucode":"4E209E597770D1","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJbxgpjzibnOhul9n2XPLIRkGX76Z0hj8hXl7v7cNBzSribAwwFicbaKtYjNxJz5MttZz14JaTJ81szw/132","comment_is_top":false,"comment_ctime":1543280992,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1543280992","product_id":100020901,"comment_content":"打卡","like_count":0},{"had_liked":false,"id":43665,"user_name":"雷击周","can_delete":false,"product_type":"c1","uid":1142486,"ip_address":"","ucode":"E3509357BEEBCF","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/mg86W2NaRPXXRUk0Q7M3Pm1CNson0HAejpP3pbxsbmXlib2uRIZQ7nSicUvphU1iagAEAnPCxiax6MLLh4iaIOKHnWg/132","comment_is_top":false,"comment_ctime":1543279131,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1543279131","product_id":100020901,"comment_content":"D4打卡","like_count":0},{"had_liked":false,"id":43632,"user_name":"渡渡鸟_linux","can_delete":false,"product_type":"c1","uid":1227772,"ip_address":"","ucode":"099BB11A3201D3","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83ernR4NKI5tejJAV3HMTF3gszBBUAjkjLO2QYic2gx5dMGelFv4LWibib7CUGexmMcMp5HiaaibmOH3dyHg/132","comment_is_top":false,"comment_ctime":1543249613,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1543249613","product_id":100020901,"comment_content":"1. CPU寄存器与CPU三级缓存是什么关系？<br>2. 对于内存、寄存器和程序计数器，不知道我的理解可正确：<br>   (1) 用户态和内核态数据存放在内存中；寄存器存放CPU指令执行的状态；PC是指向内存中指令队列的指针<br>   (2) 对于CPU上下文切换时，上一个指令寄存器中的数据会被保存到内存中，然后PC会指向下一个指令，下一个指令的寄存器信息被加载入寄存器中<br>3. 这里有两点我不确定:<br>   (1) 寄存器以及进程的内核态、用户态数据是不是都是暂存在内存中？<br>   (2) 内核对不同状态如R,D,S的进程是如何维护其队列的？为啥大多数服务器即使进程数好几千，处于R状态的只有一两个，而stress就能创建多个处于R状态的进程呢？","like_count":0},{"had_liked":false,"id":43618,"user_name":"喻冠霖","can_delete":false,"product_type":"c1","uid":1316823,"ip_address":"","ucode":"42F3052399F47F","user_header":"https://static001.geekbang.org/account/avatar/00/14/17/d7/3807c938.jpg","comment_is_top":false,"comment_ctime":1543246890,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1543246890","product_id":100020901,"comment_content":"老师今天的课程有一个问题。其实linux相对于很多操作系统而言，对线程的支援并不好，它无论进城还是线程都是一个函数创建的，只是线程会带共享内存等参数。那么这样当。linux发生线程切换的时候，是否也需要保存共享的内存，栈等信息，然后再加载调度线程的这些资源呢？虽然两者是一样的。换句话说，linux本身的进程就足够轻量了，所以线程也是一种进程，执行线程切换进行的是进程切换，不知道这个理解对不对","like_count":0},{"had_liked":false,"id":43611,"user_name":"元天夫","can_delete":false,"product_type":"c1","uid":1315599,"ip_address":"","ucode":"A453A2EBA77780","user_header":"","comment_is_top":false,"comment_ctime":1543246085,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1543246085","product_id":100020901,"comment_content":"D4，学习了","like_count":0},{"had_liked":false,"id":43604,"user_name":"Avanpourm","can_delete":false,"product_type":"c1","uid":1209121,"ip_address":"","ucode":"BFB50D27734A7A","user_header":"https://static001.geekbang.org/account/avatar/00/12/73/21/302f108d.jpg","comment_is_top":false,"comment_ctime":1543244898,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1543244898","product_id":100020901,"comment_content":"进程的切换好比极速飞驰的跑车刹车下来换轮胎~重新加速总是要时间的^O^","like_count":0},{"had_liked":false,"id":43603,"user_name":"LinkMaq","can_delete":false,"product_type":"c1","uid":1188916,"ip_address":"","ucode":"DAE1B33BA933E5","user_header":"https://static001.geekbang.org/account/avatar/00/12/24/34/df01c000.jpg","comment_is_top":false,"comment_ctime":1543244543,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1543244543","product_id":100020901,"comment_content":"第一次关注到CPU的上下文切换主要还是因为在配置PHP Worker进程数的时候，由于worker数量配置太大导致日常cpu频繁上下文切换造成load间歇性飚高，但是cpu的使用率都一直低。","like_count":0},{"had_liked":false,"id":43584,"user_name":"祥伟","can_delete":false,"product_type":"c1","uid":1314639,"ip_address":"","ucode":"BB7D89109FC8BD","user_header":"https://static001.geekbang.org/account/avatar/00/14/0f/4f/5040f415.jpg","comment_is_top":false,"comment_ctime":1543242322,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1543242322","product_id":100020901,"comment_content":"学习，赞","like_count":0},{"had_liked":false,"id":43579,"user_name":"yang","can_delete":false,"product_type":"c1","uid":1141387,"ip_address":"","ucode":"42FC9AC363D1FC","user_header":"","comment_is_top":false,"comment_ctime":1543241940,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1543241940","product_id":100020901,"comment_content":"不论是CPU还是进程间上下文切换都是要花费时间的，而这部分时间过多也可以造成系统负载高，如果监控发现CPU的时间消耗在切换上，那我们可以在一个系统上只跑一个用户进程(docker)可以避免CPU过多的时间花费在切换上","like_count":0},{"had_liked":false,"id":43564,"user_name":"xfan","can_delete":false,"product_type":"c1","uid":1315147,"ip_address":"","ucode":"48ED8D498D7F56","user_header":"https://static001.geekbang.org/account/avatar/00/14/11/4b/fa64f061.jpg","comment_is_top":false,"comment_ctime":1543240836,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1543240836","product_id":100020901,"comment_content":"辛苦了老师，你在百忙之中，抽出时间来写，我又怎能偷懒！","like_count":0},{"had_liked":false,"id":43554,"user_name":"饼子","can_delete":false,"product_type":"c1","uid":1085953,"ip_address":"","ucode":"981A44836A5216","user_header":"https://static001.geekbang.org/account/avatar/00/10/92/01/c723d180.jpg","comment_is_top":false,"comment_ctime":1543239725,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1543239725","product_id":100020901,"comment_content":"老师，CPU调度时间片是固定的吗？","like_count":0},{"had_liked":false,"id":43553,"user_name":"我来也","can_delete":false,"product_type":"c1","uid":1205253,"ip_address":"","ucode":"773D6104F56767","user_header":"https://static001.geekbang.org/account/avatar/00/12/64/05/6989dce6.jpg","comment_is_top":false,"comment_ctime":1543239641,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1543239641","product_id":100020901,"comment_content":"实实在在遇到过因为上下文切换过于频繁，导致系统负载超高的情况。当时是c程序里有while（1）｛usleep（1）｝导致系统软中断有100w+次每秒。在物理机上时进程cpu负载不到1%，而上了云服务器后空跑的cpu负载都有30%+。后来延长usleep的时间就明显的缓解了。usleep的单位是纳秒，之前以为是毫秒。","like_count":0},{"had_liked":false,"id":43551,"user_name":"大胃高怕飞","can_delete":false,"product_type":"c1","uid":1047735,"ip_address":"","ucode":"EEC5151E1A8062","user_header":"https://static001.geekbang.org/account/avatar/00/0f/fc/b7/6cef8bf0.jpg","comment_is_top":false,"comment_ctime":1543239535,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1543239535","product_id":100020901,"comment_content":"打卡","like_count":0},{"had_liked":false,"id":43516,"user_name":"krugle","can_delete":false,"product_type":"c1","uid":1045770,"ip_address":"","ucode":"60A7D9189C01BE","user_header":"https://static001.geekbang.org/account/avatar/00/0f/f5/0a/077b9922.jpg","comment_is_top":false,"comment_ctime":1543235156,"is_pvip":false,"replies":[{"id":"15538","content":"是的，Linux内核管理着整个系统","user_name":"作者回复","user_name_real":"倪朋飞","uid":"1001282","ctime":1543239664,"ip_address":"","comment_id":43516,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1543235156","product_id":100020901,"comment_content":"有几点不懂，cpu陷入内核，内核不是指系统层面软件的吗，进程切换，系统本身也是进程把，有谁来控制这些呢，这几个问题比较大，不知道具体的知识哪里来的，要是有通俗易懂的书就好了","like_count":0,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":430412,"discussion_content":"是的，Linux内核管理着整个系统","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543239664,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":43475,"user_name":"maoxiajun","can_delete":false,"product_type":"c1","uid":1198843,"ip_address":"","ucode":"CB4926BC81B3B1","user_header":"https://static001.geekbang.org/account/avatar/00/12/4a/fb/70f14340.jpg","comment_is_top":false,"comment_ctime":1543231121,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1543231121","product_id":100020901,"comment_content":"lesson3打卡","like_count":0},{"had_liked":false,"id":43467,"user_name":"卡塔库里","can_delete":false,"product_type":"c1","uid":1083464,"ip_address":"","ucode":"9A85DB54BBC9B2","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eqQ4Qib7yhHB882X9AmcUSbh2AAgOL3u2YAqibYfARRb1nxe5hw8ZBiaKR35bJiaic8UvThAzLhv5yzcsg/132","comment_is_top":false,"comment_ctime":1543230200,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1543230200","product_id":100020901,"comment_content":"打卡","like_count":0},{"had_liked":false,"id":43458,"user_name":"哇哦","can_delete":false,"product_type":"c1","uid":1250599,"ip_address":"","ucode":"1F16B9150E93C3","user_header":"https://static001.geekbang.org/account/avatar/00/13/15/27/c5e4ec99.jpg","comment_is_top":false,"comment_ctime":1543229137,"is_pvip":false,"replies":[{"id":"15542","content":"调度的单位是线程。这个地方还没有介绍到线程，所以用了进程。","user_name":"作者回复","user_name_real":"倪朋飞","uid":"1001282","ctime":1543239905,"ip_address":"","comment_id":43458,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1543229137","product_id":100020901,"comment_content":"文章内容上说 时间片被轮流分配给各个进程,我以前看到好像都是时间片分配给线程额。难道是先分配给进程然后再分配给线程？<br><br>","like_count":0,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":430389,"discussion_content":"调度的单位是线程。这个地方还没有介绍到线程，所以用了进程。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543239905,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":43452,"user_name":"ninuxer","can_delete":false,"product_type":"c1","uid":1243135,"ip_address":"","ucode":"5394ADAF2667D6","user_header":"https://wx.qlogo.cn/mmopen/vi_32/PiajxSqBRaEKQMM4m7NHuicr55aRiblTSEWIYe0QqbpyHweaoAbG7j2v7UUElqqeP3Ihrm3UfDPDRb1Hv8LvPwXqA/132","comment_is_top":false,"comment_ctime":1543228185,"is_pvip":false,"replies":[{"id":"15544","content":"👍","user_name":"作者回复","user_name_real":"倪朋飞","uid":"1001282","ctime":1543240039,"ip_address":"","comment_id":43452,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1543228185","product_id":100020901,"comment_content":"打卡day4，底层的东西，要真正理解还是比较抽象，期待下篇实践后结合起来，能结合起来，让理解具体化，形象化","like_count":0,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":430387,"discussion_content":"👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543240039,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":43451,"user_name":"pebble","can_delete":false,"product_type":"c1","uid":1022021,"ip_address":"","ucode":"871930CB227C68","user_header":"https://static001.geekbang.org/account/avatar/00/0f/98/45/318ba48a.jpg","comment_is_top":false,"comment_ctime":1543228109,"is_pvip":false,"replies":[{"id":"15545","content":"性能更多的是关注进程和中断的上下文切换","user_name":"作者回复","user_name_real":"倪朋飞","uid":"1001282","ctime":1543240178,"ip_address":"","comment_id":43451,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1543228109","product_id":100020901,"comment_content":"cpu<br>上下文切换，从描述，感觉就是一个函数调用的成本了，而函数调用在程序里太多了，单独再讨论它，是否有价值，不知道理解的对不对","like_count":0,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":430386,"discussion_content":"性能更多的是关注进程和中断的上下文切换","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543240178,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":43374,"user_name":"discoverer-tab","can_delete":false,"product_type":"c1","uid":1006560,"ip_address":"","ucode":"3CE83781933FED","user_header":"https://static001.geekbang.org/account/avatar/00/0f/5b/e0/d27145c8.jpg","comment_is_top":false,"comment_ctime":1543220686,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1543220686","product_id":100020901,"comment_content":"cpu切换包括进程cpu切换，线程cpu切换，中断程序cpu切换。进程cpu切换的调度条件：cpu时间片用完、上一个进程资源不足、上一个进程sleep、当前进程优先级更高、硬件抢断执行内核服务程序。<br>中断程序优先级比进程更高，也因此中断程序执行倾向于耗时少速度快以节约cpu。","like_count":0},{"had_liked":false,"id":43364,"user_name":"huicpc0215","can_delete":false,"product_type":"c1","uid":1298500,"ip_address":"","ucode":"84A7F671696A88","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/g4wzd5sQZzAc6ard9NlXXhRTbFkhmAPiachHEpslZaL3eGNiczGS05XB39sv1QVAiaXbNFhng36IpnxNWibKZ6yRuw/132","comment_is_top":false,"comment_ctime":1543219657,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1543219657","product_id":100020901,"comment_content":"老师您好，我想问一下，既然都讲到了线程和进程，可以在讲点协程么？ 协程会进行上下文切换么？  协程上下文切换是如何进行的 ？","like_count":0},{"had_liked":false,"id":43349,"user_name":"discoverer-tab","can_delete":false,"product_type":"c1","uid":1006560,"ip_address":"","ucode":"3CE83781933FED","user_header":"https://static001.geekbang.org/account/avatar/00/0f/5b/e0/d27145c8.jpg","comment_is_top":false,"comment_ctime":1543218220,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1543218220","product_id":100020901,"comment_content":"系统调用过程中，发生两次cpu上下文切换，发生在系统内核态和用户态之间。进程进行中会发生多次系统调用。进程上下文切换会保存当前进程共享给其所有线程的虚拟内存、全局变量，随后加载切换进程的虚拟内存、全局变量。","like_count":0},{"had_liked":false,"id":43340,"user_name":"discoverer-tab","can_delete":false,"product_type":"c1","uid":1006560,"ip_address":"","ucode":"3CE83781933FED","user_header":"https://static001.geekbang.org/account/avatar/00/0f/5b/e0/d27145c8.jpg","comment_is_top":false,"comment_ctime":1543217111,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1543217111","product_id":100020901,"comment_content":"cpu上下文切换是用户态内核态的切换","like_count":0},{"had_liked":false,"id":43313,"user_name":"AAA","can_delete":false,"product_type":"c1","uid":1309946,"ip_address":"","ucode":"8E612EEA059A84","user_header":"https://static001.geekbang.org/account/avatar/00/13/fc/fa/a5c17356.jpg","comment_is_top":false,"comment_ctime":1543211654,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1543211654","product_id":100020901,"comment_content":"有什么好的方法可以减少频繁的上下文切换呢？","like_count":0},{"had_liked":false,"id":43308,"user_name":"半斤八两","can_delete":false,"product_type":"c1","uid":1067622,"ip_address":"","ucode":"973F074F0E899E","user_header":"https://static001.geekbang.org/account/avatar/00/10/4a/66/d3d19642.jpg","comment_is_top":false,"comment_ctime":1543210292,"is_pvip":false,"replies":[{"id":"15556","content":"线程和中断的上下文切换都是在CPU上下文切换的基础上操作了更多的数据，而特权模式切换只要看是不是通过系统调用陷入到了内核态运行","user_name":"作者回复","user_name_real":"倪朋飞","uid":"1001282","ctime":1543241073,"ip_address":"","comment_id":43308,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1543210292","product_id":100020901,"comment_content":"老师您好，请问下同一个进程的两个线程之间上下文切换涉及到CPU上下文切换吗，涉及到用户态和内核态的切换吗~","like_count":0,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":430354,"discussion_content":"线程和中断的上下文切换都是在CPU上下文切换的基础上操作了更多的数据，而特权模式切换只要看是不是通过系统调用陷入到了内核态运行","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543241073,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":43298,"user_name":"Allen","can_delete":false,"product_type":"c1","uid":1252639,"ip_address":"","ucode":"2F3959A717BE10","user_header":"https://static001.geekbang.org/account/avatar/00/13/1d/1f/6bc10297.jpg","comment_is_top":false,"comment_ctime":1543208711,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1543208711","product_id":100020901,"comment_content":"『day3』  以前的理解上下文只停留在保存前一个进程的p堆栈信息，利用pc指针和cpu的寄存器值的变化，来保存现场和恢复场景。<br><br> 请教下老师：保存进程的虚拟内存，指的是保存进程堆信息吗？","like_count":0},{"had_liked":false,"id":43294,"user_name":"梁中华","can_delete":false,"product_type":"c1","uid":1006789,"ip_address":"","ucode":"52FE40242CBAD0","user_header":"https://static001.geekbang.org/account/avatar/00/0f/5c/c5/1231d633.jpg","comment_is_top":false,"comment_ctime":1543208017,"is_pvip":true,"discussion_count":0,"race_medal":1,"score":"1543208017","product_id":100020901,"comment_content":"有一次我们做线上虚拟机进行java服务压测，发现软中断占据了大量的CPU 资源最高的时候能站到将近3成，这是什么原因？怎么这么耗资源？","like_count":0},{"had_liked":false,"id":43292,"user_name":"张挺","can_delete":false,"product_type":"c1","uid":1038954,"ip_address":"","ucode":"CDF8549440926D","user_header":"https://static001.geekbang.org/account/avatar/00/0f/da/6a/91bd13de.jpg","comment_is_top":false,"comment_ctime":1543207777,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1543207777","product_id":100020901,"comment_content":"您好，软中断和硬中断的区别是什么呢？谢谢","like_count":0},{"had_liked":false,"id":43289,"user_name":"海","can_delete":false,"product_type":"c1","uid":1146176,"ip_address":"","ucode":"0239D583C3ECCA","user_header":"https://static001.geekbang.org/account/avatar/00/11/7d/40/bdcf7fa0.jpg","comment_is_top":false,"comment_ctime":1543206984,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1543206984","product_id":100020901,"comment_content":"D4打卡。看了今天的文章，对上下文切换，进程，线程的理解又深入一步。还需要再看几遍，并且多看看其他相关文章，加深理解","like_count":0},{"had_liked":false,"id":43230,"user_name":"asdf100","can_delete":false,"product_type":"c1","uid":1043738,"ip_address":"","ucode":"39D8D71453E575","user_header":"https://static001.geekbang.org/account/avatar/00/0f/ed/1a/ce7f7d54.jpg","comment_is_top":false,"comment_ctime":1543197897,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1543197897","product_id":100020901,"comment_content":"用户空间（Ring 3）只能访问受限资源，不能直接访问内存等硬件设备，必须通过系统调用陷入到内核中，才能访问这些特权资源。<br>-----<br>陷入到内核什么意思？","like_count":0},{"had_liked":false,"id":43229,"user_name":"wrztye","can_delete":false,"product_type":"c1","uid":1316296,"ip_address":"","ucode":"3214C625D64520","user_header":"https://static001.geekbang.org/account/avatar/00/14/15/c8/a14d8a01.jpg","comment_is_top":false,"comment_ctime":1543197892,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1543197892","product_id":100020901,"comment_content":"请问下，协程的切换和线程的有什么区别？","like_count":0},{"had_liked":false,"id":43227,"user_name":"二三子也","can_delete":false,"product_type":"c1","uid":1245787,"ip_address":"","ucode":"69C7D86583277D","user_header":"https://static001.geekbang.org/account/avatar/00/13/02/5b/ce326cfc.jpg","comment_is_top":false,"comment_ctime":1543197716,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1543197716","product_id":100020901,"comment_content":"Flag","like_count":0},{"had_liked":false,"id":43207,"user_name":"Maxwell","can_delete":false,"product_type":"c1","uid":1086275,"ip_address":"","ucode":"720A00AD472616","user_header":"https://static001.geekbang.org/account/avatar/00/10/93/43/0e84492d.jpg","comment_is_top":false,"comment_ctime":1543196053,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1543196053","product_id":100020901,"comment_content":"如果CPU利用率低又有哪些原因呢？","like_count":0},{"had_liked":false,"id":43206,"user_name":"星辰","can_delete":false,"product_type":"c1","uid":1103880,"ip_address":"","ucode":"48B44C54161C96","user_header":"https://static001.geekbang.org/account/avatar/00/10/d8/08/87afa2aa.jpg","comment_is_top":false,"comment_ctime":1543196047,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1543196047","product_id":100020901,"comment_content":"老师好，<br><br>cpu切换属于系统级别、底层切换，保障了系统的正常运行，比如鼠标键盘 打开关闭某个系统级别的程序。<br><br>进程切换是可以重点去优化的，尽量将多进程换成多线程 这样 同进程下多个线程切换的损耗会比多进程少很多。<br><br><br><br>","like_count":0},{"had_liked":false,"id":43204,"user_name":"Maxwell","can_delete":false,"product_type":"c1","uid":1086275,"ip_address":"","ucode":"720A00AD472616","user_header":"https://static001.geekbang.org/account/avatar/00/10/93/43/0e84492d.jpg","comment_is_top":false,"comment_ctime":1543195976,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1543195976","product_id":100020901,"comment_content":"上下文切换会导致CPU利用率高吗？","like_count":0},{"had_liked":false,"id":43202,"user_name":"我是钢铁侠","can_delete":false,"product_type":"c1","uid":1219888,"ip_address":"","ucode":"78D00BF06BEABA","user_header":"https://static001.geekbang.org/account/avatar/00/12/9d/30/7c33565d.jpg","comment_is_top":false,"comment_ctime":1543195836,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1543195836","product_id":100020901,"comment_content":"老师，在不涉及源码的情况下（我知道这几乎不可能），有没有内核或linux原理方面的书籍推荐呢","like_count":0},{"had_liked":false,"id":43201,"user_name":"Zenppl","can_delete":false,"product_type":"c1","uid":1322987,"ip_address":"","ucode":"093795428BADB7","user_header":"https://static001.geekbang.org/account/avatar/00/14/2f/eb/5dceac8a.jpg","comment_is_top":false,"comment_ctime":1543195715,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1543195715","product_id":100020901,"comment_content":"打卡","like_count":0},{"had_liked":false,"id":43194,"user_name":"问题究竟系边度","can_delete":false,"product_type":"c1","uid":1095284,"ip_address":"","ucode":"CA4F2C9A84F867","user_header":"https://static001.geekbang.org/account/avatar/00/10/b6/74/c63449b1.jpg","comment_is_top":false,"comment_ctime":1543195259,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1543195259","product_id":100020901,"comment_content":"能否说一下，多种中断同时按序发生时，上下文是怎么处理的","like_count":0},{"had_liked":false,"id":43190,"user_name":"walker","can_delete":false,"product_type":"c1","uid":1324219,"ip_address":"","ucode":"FA5B2400A53730","user_header":"https://static001.geekbang.org/account/avatar/00/14/34/bb/0b971fca.jpg","comment_is_top":false,"comment_ctime":1543195087,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1543195087","product_id":100020901,"comment_content":"中断和上下文切换多少时才算不正常呢","like_count":0},{"had_liked":false,"id":43185,"user_name":"zkwKevin","can_delete":false,"product_type":"c1","uid":1241908,"ip_address":"","ucode":"F2FFC29B456D26","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/AnGcicHHShBFzjPAAaqOgYzicibaRnFictZTc6taianFGiaZRxpJNWictb5TkYGibCF7jy82pUaibDIzXS7asbz11ErhrLw/132","comment_is_top":false,"comment_ctime":1543194904,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1543194904","product_id":100020901,"comment_content":"老师好，如果老师能举一个具体的例子讲下什么时候会有进程的上下文切换就好了。我容易把它和系统调用搞混，因为是一届运维，不写这个层面的代码，即便查了资料也很晕，进程之间应该是很私密的呀，为何会发生切换呢","like_count":0},{"had_liked":false,"id":43174,"user_name":"拉欧","can_delete":false,"product_type":"c1","uid":1206605,"ip_address":"","ucode":"40996A8093A95F","user_header":"https://static001.geekbang.org/account/avatar/00/12/69/4d/81c44f45.jpg","comment_is_top":false,"comment_ctime":1543194354,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1543194354","product_id":100020901,"comment_content":"这期的内容很硬核","like_count":0},{"had_liked":false,"id":43163,"user_name":"一文字","can_delete":false,"product_type":"c1","uid":1043535,"ip_address":"","ucode":"B3FE7F01DBFB15","user_header":"https://static001.geekbang.org/account/avatar/00/0f/ec/4f/84415aa2.jpg","comment_is_top":false,"comment_ctime":1543193951,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1543193951","product_id":100020901,"comment_content":"醍醐灌顶，再去翻一下Linux内核","like_count":0},{"had_liked":false,"id":43153,"user_name":"王涛","can_delete":false,"product_type":"c1","uid":1315326,"ip_address":"","ucode":"6241F08634D342","user_header":"https://static001.geekbang.org/account/avatar/00/14/11/fe/de00d8d8.jpg","comment_is_top":false,"comment_ctime":1543192750,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1543192750","product_id":100020901,"comment_content":"D3打卡","like_count":0},{"had_liked":false,"id":43145,"user_name":"Dale","can_delete":false,"product_type":"c1","uid":1010056,"ip_address":"","ucode":"DD4717C06E417D","user_header":"https://static001.geekbang.org/account/avatar/00/0f/69/88/528442b0.jpg","comment_is_top":false,"comment_ctime":1543191860,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1543191860","product_id":100020901,"comment_content":"Linux是多用户多任务操作系统，cpu是共享资源，多进程或线程根据操作系统不同的调度策略轮徇是使用CPU，下一次执行必须要能够知道上次执行到哪里了，因此需要CPU内部存储需要保存每个进程或线程的状态。","like_count":0},{"had_liked":false,"id":43135,"user_name":"Amark","can_delete":false,"product_type":"c1","uid":1121326,"ip_address":"","ucode":"E5F48633654002","user_header":"https://static001.geekbang.org/account/avatar/00/11/1c/2e/93812642.jpg","comment_is_top":false,"comment_ctime":1543191139,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1543191139","product_id":100020901,"comment_content":"打卡","like_count":0},{"had_liked":false,"id":43129,"user_name":"马殿军","can_delete":false,"product_type":"c1","uid":1048707,"ip_address":"","ucode":"97FE6251C04E6D","user_header":"https://static001.geekbang.org/account/avatar/00/10/00/83/9329a697.jpg","comment_is_top":false,"comment_ctime":1543189425,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1543189425","product_id":100020901,"comment_content":"好👌","like_count":0},{"had_liked":false,"id":43127,"user_name":"小球就是饭二妞🐷🐷","can_delete":false,"product_type":"c1","uid":1135053,"ip_address":"","ucode":"68A25ABE3263F1","user_header":"https://static001.geekbang.org/account/avatar/00/11/51/cd/443cc3be.jpg","comment_is_top":false,"comment_ctime":1543188796,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1543188796","product_id":100020901,"comment_content":"有些概念是不是只是Linux 有的啊，用户态神马的","like_count":0},{"had_liked":false,"id":43125,"user_name":"solar","can_delete":false,"product_type":"c1","uid":1316091,"ip_address":"","ucode":"D5BE087E264401","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/dwehJHP4ycAfDb9MoudXb4QSt7YgmISqwwsa928XZ6aTWqwWh0kx0iatjocSibLa7iajXmbGlJ5svegY3P6LfKJ0w/132","comment_is_top":false,"comment_ctime":1543188317,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1543188317","product_id":100020901,"comment_content":"上下文切换一直拥有概念，但是没有理解的这么细，受教了~~","like_count":0}]}