{"id":6458,"title":"01 | 架构到底是指什么？","content":"<p>你好，我是华仔。</p><p>2018年，我发布了《从0开始学架构》这门课程，分享了我之前在电信业务和移动互联网业务方面的经验和感悟。</p><p>后来，我转岗去了蚂蚁国际，从事更加复杂的支付业务。为什么说支付业务更加复杂？因为它涉及的关联方多、业务流程长、业务模型复杂，对安全、高可用、高性能等都有更高的要求。我有幸参与了一个海外钱包从0到1的建设过程，积累了不少实战经验，于是对复杂业务的架构设计有了新的理解。</p><p>2020年，因为身体等原因，我离开了蚂蚁国际，之后就一边休养身体，一边系统地总结梳理过去的经验，先后创作了《大厂晋升指南》和《架构实战营》。在打磨课程和与各位同学交流的过程中，我对于架构学习的难点和应用的痛点，又有了新的心得体会。</p><p>因此，我决定更新这门课程的部分内容，把这些新的收获也全部分享出来，希望能帮助你与时俱进地提升架构水平。</p><h2>架构到底是指什么</h2><p>对于技术人员来说，“架构”是一个再常见不过的词了。我们会对新员工培训整个系统的架构，参加架构设计评审，学习业界开源系统（例如MySQL和Hadoop）的架构，研究大公司的架构实现（例如微信架构和淘宝架构）……</p><p>虽然“架构”这个词很常见，但如果深究一下，“架构”到底是指什么，大部分人就搞不清楚了。例如以下这些问题，你能够准确地回答吗？</p><!-- [[[read_end]]] --><ol>\n<li>微信有架构，微信的登录系统也有架构，微信的支付系统也有架构，当我们谈微信架构时，到底是在谈什么架构？</li>\n<li>Linux有架构，MySQL有架构，JVM也有架构，使用Java开发、MySQL存储、跑在Linux上的业务系统也有架构，应该关注哪个架构呢？</li>\n<li>架构和框架是什么关系？有什么区别？</li>\n</ol><p>身为架构师，如果你连架构的定义都搞不清楚，那么无论是自己设计架构、给别人讲解架构，还是学习别人的架构，都会暴露问题，要么无从下手，要么张冠李戴。这无疑会成为你面试、晋升和带领团队工作时的绊脚石。</p><p>比如有些同学明明在系统架构上做了不少有价值的工作，但是在给晋升面试的评委讲解的时候，只会说“我们是微服务架构”，然后就不知道讲什么了。结果得到的评价大打折扣，晋升失败，非常可惜。</p><p>要想准确地理解架构的定义，关键就在于把三组容易混淆的概念梳理清楚：</p><ol>\n<li>系统与子系统</li>\n<li>模块与组件</li>\n<li>框架与架构</li>\n</ol><h2>系统与子系统</h2><p>我们先来看维基百科定义的“系统”：</p><blockquote>\n<p>系统泛指由一群有关联的个体组成，根据某种规则运作，能完成个别元件不能单独完成的工作的群体。它的意思是“总体”“整体”或“联盟”。</p>\n</blockquote><p>我来提炼一下里面的关键内容。</p><ol>\n<li><strong>关联</strong>：系统是由一群有关联的个体组成的，没有关联的个体堆在一起不能成为一个系统。例如，把一个发动机和一台PC放在一起不能称之为一个系统，把发动机、底盘、轮胎、车架组合起来才能成为一台汽车。</li>\n<li><strong>规则</strong>：系统内的个体需要按照指定的规则运作，而不是单个个体各自为政。规则规定了系统内个体分工和协作的方式。例如，汽车发动机负责产生动力，然后通过变速器和传动轴，将动力输出到车轮上，从而驱动汽车前进。</li>\n<li><strong>能力</strong>：系统能力与个体能力有本质的差别，系统能力不是个体能力之和，而是产生了新的能力。例如，汽车能够载重前进，而发动机、变速器、传动轴、车轮本身都不具备这样的能力。</li>\n</ol><p>我们再来看子系统的定义：</p><blockquote>\n<p>子系统也是由一群有关联的个体所组成的系统，多半会是更大系统中的一部分。</p>\n</blockquote><p>其实，子系统的定义和系统定义是一样的，只是观察的角度有差异，一个系统可能是另外一个更大系统的子系统。</p><p>按照这个定义，系统和子系统比较容易理解，我们以微信为例来做一个分析：</p><ol>\n<li>微信本身是一个系统，包含聊天、登录、支付、朋友圈等子系统。</li>\n<li>朋友圈这个系统又包括动态、评论、点赞等子系统。</li>\n<li>评论这个系统可能又包括防刷子系统、审核子系统、发布子系统、存储子系统。</li>\n<li>评论审核子系统不再包含业务意义上的子系统，而是包括各个模块或者组件，这些模块或者组件本身也是另外一个维度上的系统。例如，MySQL、Redis等是存储系统，但不是业务子系统。</li>\n</ol><p>现在，我们可以回答第一个问题了。一个系统的架构，只包括<strong>顶层</strong>这一个层级的架构，而不包括下属子系统层级的架构。所以微信架构，就是指微信系统这个层级的架构。当然，微信的子系统，比如支付系统，也有它自己的架构，同样只包括<strong>顶层</strong>。</p><h2>模块与组件</h2><p>模块和组件两个概念在实际工作中很容易混淆，我们经常能够听到类似这样的说法：</p><ul>\n<li>MySQL模块主要负责存储数据，而Elasticsearch模块主要负责数据搜索。</li>\n<li>我们有安全加密组件、有审核组件。</li>\n<li>App的下载模块使用了第三方的组件。</li>\n</ul><p>造成这种现象的主要原因是，模块与组件的定义并不好理解，也不能很好地进行区分。我们来看看这两者在维基百科上的定义：</p><blockquote>\n<p>软件模块（Module）是一套一致而互相有紧密关连的软件组织。它分别包含了程序和数据结构两部分。现代软件开发往往利用模块作为合成的单位。模块的接口表达了由该模块提供的功能和调用它时所需的元素。模块是可能分开被编写的单位。这使它们可再用和允许人员同时协作、编写及研究不同的模块。<br>\n软件组件定义为自包含的、可编程的、可重用的、与语言无关的软件单元，软件组件可以很容易被用于组装应用程序中。</p>\n</blockquote><p>可能你看完这两个定义后一头雾水，还是不知道这两者有什么区别。造成这种现象的根本原因是，<strong>模块和组件都是系统的组成部分，只是从不同的角度拆分系统而已</strong>。</p><p>从业务逻辑的角度来拆分系统后，得到的单元就是“模块”；从物理部署的角度来拆分系统后，得到的单元就是“组件”。划分模块的主要目的是职责分离；划分组件的主要目的是单元复用。</p><p>其实，“组件”的英文Component也可翻译成中文的“零件”一词。“零件”更容易理解一些，它是一个物理的概念，并且具备“独立且可替换”的特点。</p><p>我以一个最简单的网站系统来为例。假设我们要做一个学生信息管理系统，这个系统从逻辑的角度来拆分，可以分为“登录注册模块”“个人信息模块”和“个人成绩模块”；从物理的角度来拆分，可以拆分为Nginx、Web服务器和MySQL。</p><p>现在，我们可以回答第二个问题了。如果你是业务系统的架构师，首先需要思考怎么从业务逻辑的角度把系统拆分成一个个模块<strong>角色</strong>，其次需要思考怎么从物理部署的角度把系统拆分成组件<strong>角色，</strong>例如选择MySQL作为存储系统。但是对于MySQL内部的体系架构（Parser、Optimizer、Caches&amp;Buffers和Storage Engines等），你其实是可以不用关注的，也不需要在你的业务系统架构中展现这些内容。</p><h2>框架与架构</h2><p>框架是和架构比较相似的概念，且两者有较强的关联关系，所以在实际工作中，这两个概念有时我们容易分不清楚。参考维基百科上框架与架构的定义，我来解释两者的区别。</p><blockquote>\n<p>软件框架（Software framework）通常指的是为了实现某个业界标准或完成特定基本任务的软件组件规范，也指为了实现某个软件组件规范时，提供规范所要求之基础功能的软件产品。</p>\n</blockquote><p>我来提炼一下其中关键部分：</p><ol>\n<li>框架是组件规范：例如，MVC就是一种最常见的开发规范，类似的还有MVP、MVVM、J2EE等框架。</li>\n<li>框架提供基础功能的产品：例如，Spring MVC是MVC的开发框架，除了满足MVC的规范，Spring提供了很多基础功能来帮助我们实现功能，包括注解（@Controller等）、Spring Security、Spring JPA等很多基础功能。</li>\n</ol><blockquote>\n<p>软件架构指软件系统的“基础结构”，创造这些基础结构的准则，以及对这些结构的描述。</p>\n</blockquote><p>单纯从定义的角度来看，框架和架构的区别还是比较明显的：<strong>框架关注的是“规范”，架构关注的是“结构”</strong>。</p><p>框架的英文是Framework，架构的英文是Architecture，Spring MVC的英文文档标题就是“Web MVC framework”。</p><p>虽然如此，在实际工作中我们却经常碰到一些似是而非的说法，例如：</p><ul>\n<li>我们的系统是MVC架构。</li>\n<li>我们需要将Android App重构为MVP架构。</li>\n<li>我们的系统基于SSH框架开发。</li>\n<li>我们是SSH的架构。</li>\n<li>XX系统是基于Spring MVC框架开发，标准的MVC架构。<br>\n……</li>\n</ul><p>究竟什么说法是对的，什么说法是错的呢？</p><p>其实这些说法都是对的。造成这种现象的根本原因隐藏于架构的定义中，关键就是“基础结构”这个概念，并没有明确说是从什么角度来分解的。采用不同的角度或者维度，可以将系统划分为不同的结构，其实我在“模块与组件”中的“学生管理系统”示例已经包含了这点。</p><p>从业务逻辑的角度分解，“学生管理系统”的架构是：</p><p><img src=\"https://static001.geekbang.org/resource/image/af/a8/af3f5d6afe79d8c37b727606f749a1a8.jpg?wh=1920x422\" alt=\"图片\"></p><p>从物理部署的角度分解，“学生管理系统”的架构是：</p><p><img src=\"https://static001.geekbang.org/resource/image/28/69/28ca0b7912ea0dda4a9fd4ceec75bf69.jpg?wh=1920x941\" alt=\"图片\"></p><p>从开发规范的角度分解，“学生管理系统”可以采用标准的MVC框架来开发，因此架构又变成了MVC架构：</p><p><img src=\"https://static001.geekbang.org/resource/image/3e/1d/3e5f788e9dceb7f2cd9eb79d0d92fd1d.jpg?wh=1920x717\" alt=\"图片\"></p><p>这些“架构”，都是“学生管理系统”正确的架构，只是从不同的角度来分解而已，这也是IBM的RUP将软件架构视图分为著名的“<strong>4+1视图</strong>”的原因。</p><p>现在，我们可以回答第三个问题了。框架是一整套开发规范，架构是某一套开发规范下的具体落地方案，包括各个模块之间的<strong>组合关系</strong>以及它们协同起来完成功能的<strong>运作规则</strong>。</p><h2>重新定义架构：4R架构</h2><p>参考维基百科的定义，再结合我自己的一些理解和思考，我将软件架构重新定义为：<strong>软件架构指软件系统的顶层（Rank）结构，它定义了系统由哪些角色（Role）组成，角色之间的关系（Relation）和运作规则（Rule）。</strong></p><p><img src=\"https://static001.geekbang.org/resource/image/67/c1/670a502889683719f63846762a710ec1.jpg?wh=1920x466\" alt=\"图片\"></p><p>因为这个定义中的4个关键词，都可以用R开头的英文单词来表示，分别是Rank、Role、Relation和Rule，所以我把定义简称为“4R架构定义”，每个R的详细解释如下。</p><p>第一个R，Rank。它是指软件架构是分层的，对应“系统”和“子系统”的分层关系。通常情况下，我们只需要关注某一层的架构，最多展示相邻两层的架构，而不需要把每一层的架构全部糅杂在一起。无论是架构设计还是画架构图，都应该采取“自顶向下，逐步细化”的方式。以微信为例，Rank的含义如下所示：</p><p><img src=\"https://static001.geekbang.org/resource/image/45/b1/452ce48209b1e9ea77484e68dbb8f0b1.jpg?wh=1920x931\" alt=\"图片\"></p><p>注：L0\\L1\\L2指层级，一个L0往下可以分解多个L1，一个L1可以往下分解多个L2，以此类推，一般建议不超过5层（L0~L4）。</p><p>第二个R，Role。它是指软件系统包含哪些角色，每个角色都会负责系统的一部分功能。架构设计最重要的工作之一就是将系统拆分为多个角色。最常见的微服务拆分其实就是将整体复杂的<strong>业务系统</strong>按照业务领域的方式，拆分为多个微服务，每个微服务就是系统的一个角色。</p><p>第三个R，Relation。它是指软件系统的角色之间的关系，对应到架构图中其实就是连接线，角色之间的关系不能乱连，任何关系最后都需要代码来实现，包括连接方式（HTTP、TCP、UDP和串口等）、数据协议（JSON、XML和二进制等）以及具体的接口等。</p><p>第四个R，Rule。它是指软件系统角色之间如何协作来完成系统功能。我们在前面解读什么是“系统”的时候提到过：系统能力不是个体能力之和，而是产生了新的能力。那么这个新能力具体如何完成的呢？具体哪些角色参与了这个新能力呢？这就是Rule所要表达的内容。在架构设计的时候，核心的业务场景都需要设计Rule。</p><p>在实际工作中，为了方便理解，Rank、Role和Relation是通过系统架构图来展示的，而Rule是通过系统序列图（System Sequence Diagram）来展示的。</p><p>我们以一个简化的支付系统为例，支付系统架构图如下所示：</p><p><img src=\"https://static001.geekbang.org/resource/image/95/fc/952cdceaa1bd5ed9f5fb039733dabafc.jpg?wh=1920x1002\" alt=\"图片\"></p><p>“扫码支付”这个核心场景的系统序列图如下所示：</p><p><img src=\"https://static001.geekbang.org/resource/image/0e/ea/0e7a35a01b62e5590566c09eff6b19ea.jpg?wh=1920x1080\" alt=\"图片\"></p><h2>小结</h2><p>今天我为你梳理了与架构有关的几个容易混淆的概念，包括系统与子系统、模块与组件、框架与架构，并且提炼出了4R架构定义，希望对你有所帮助。</p><p>这就是今天的全部内容，留一道思考题给你吧。你原来理解的架构是如何定义的？对比我今天讲的架构定义，你觉得差异在哪里？</p><p>欢迎你把答案写到留言区，和我一起讨论。相信经过深度思考的回答，也会让你对知识的理解更加深刻。（编辑乱入：精彩的留言有机会获得丰厚福利哦！）</p>","neighbors":{"left":{"article_title":"开篇词 | 照着做，你也能成为架构师！","id":6354},"right":{"article_title":"02 | 架构设计的历史背景","id":6463}},"comments":[{"had_liked":false,"id":6676,"user_name":"公号-技术夜未眠","can_delete":false,"product_type":"c1","uid":1013683,"ip_address":"","ucode":"83825B57CBD952","user_header":"https://static001.geekbang.org/account/avatar/00/0f/77/b3/991f3f9b.jpg","comment_is_top":false,"comment_ctime":1524890215,"is_pvip":true,"replies":[{"id":"1913","content":"精炼！","user_name":"作者回复","comment_id":6676,"uid":"1098920","ip_address":"","utype":1,"ctime":1524906887,"user_name_real":"华仔@阿里游戏"}],"discussion_count":21,"race_medal":0,"score":"9291539151463","product_id":100006601,"comment_content":"架构是顶层设计；框架是面向编程或配置的半成品；组件是从技术维度上的复用；模块是从业务维度上职责的划分；系统是相互协同可运行的实体。","like_count":2164,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":417117,"discussion_content":"精炼！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1524906887,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1153702,"avatar":"https://static001.geekbang.org/account/avatar/00/11/9a/a6/3bddb98c.jpg","nickname":"大叶枫","note":"","ucode":"224AC5533889AD","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":208736,"discussion_content":"看来你买了很多课程啊，小伙\n","likes_number":4,"is_delete":false,"is_hidden":false,"ctime":1584579113,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1059152,"avatar":"https://static001.geekbang.org/account/avatar/00/10/29/50/2b2e6875.jpg","nickname":"慕士塔格","note":"","ucode":"B30AA3F6EDC4BF","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1153702,"avatar":"https://static001.geekbang.org/account/avatar/00/11/9a/a6/3bddb98c.jpg","nickname":"大叶枫","note":"","ucode":"224AC5533889AD","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":212048,"discussion_content":"总结的好","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1584928744,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":208736,"ip_address":""},"score":212048,"extra":""}]},{"author":{"id":1691257,"avatar":"https://static001.geekbang.org/account/avatar/00/19/ce/79/fa72b7bb.jpg","nickname":"严文文   Chris","note":"","ucode":"2E1279453AF891","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":373965,"discussion_content":"我以前所理解的架构就是，一个系统的结构，这个结构里面包含了模块组件等元素，您的观点丰富了我对于架构元素，关联，含义的认知。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1620953981,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1088286,"avatar":"https://static001.geekbang.org/account/avatar/00/10/9b/1e/cd2bcace.jpg","nickname":"搬砖工程师","note":"","ucode":"955313BDF35A24","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":551464,"discussion_content":"mark","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1645021197,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1402254,"avatar":"https://static001.geekbang.org/account/avatar/00/15/65/8e/d0c3bed3.jpg","nickname":"kg200704","note":"","ucode":"C58729CE07CCA9","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":543975,"discussion_content":"精炼的回答！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1641370542,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2038103,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/19/57/17c31255.jpg","nickname":"江小渔201008","note":"","ucode":"A06FEA0D916362","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":395778,"discussion_content":"设计模式和架构，框架的关系是??","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1632352058,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1173203,"avatar":"https://static001.geekbang.org/account/avatar/00/11/e6/d3/4256d416.jpg","nickname":"^_^","note":"","ucode":"7E4FBA3237B91E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":379919,"discussion_content":"到位","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1624246226,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2638408,"avatar":"https://static001.geekbang.org/account/avatar/00/28/42/48/06b166e4.jpg","nickname":"James.Huang","note":"","ucode":"C6732427128196","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":376225,"discussion_content":"总结不错","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1622028274,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1022997,"avatar":"","nickname":"neoduan","note":"","ucode":"23B15BCA67068D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":367097,"discussion_content":"牛","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1618269921,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2049652,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/46/74/0f6bdc0d.jpg","nickname":"老姚","note":"","ucode":"61D8F2095DB538","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":359764,"discussion_content":"说得好","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1616287781,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1057611,"avatar":"https://static001.geekbang.org/account/avatar/00/10/23/4b/5578cbd1.jpg","nickname":"IsaacGao","note":"","ucode":"95C640D185A060","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":352592,"discussion_content":"🐴","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1614777687,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1978018,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/2e/a2/83e17528.jpg","nickname":"胡不归","note":"","ucode":"CC614DFB06E495","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":352413,"discussion_content":"马克","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1614732211,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1269502,"avatar":"https://static001.geekbang.org/account/avatar/00/13/5e/fe/3aca24e2.jpg","nickname":"极客up","note":"","ucode":"B7EC64BC3BAD11","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":352285,"discussion_content":"马克","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1614672648,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1046751,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/f8/df/0baef94a.jpg","nickname":"常青","note":"","ucode":"9DF445A3161F38","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":338743,"discussion_content":"少了一个规则描述","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1609369105,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1515294,"avatar":"https://static001.geekbang.org/account/avatar/00/17/1f/1e/35897c64.jpg","nickname":"。","note":"","ucode":"9B546734C73CFB","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":335497,"discussion_content":"mark","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1608207528,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1336475,"avatar":"https://static001.geekbang.org/account/avatar/00/14/64/9b/0b578b08.jpg","nickname":"J.Smile","note":"","ucode":"C4D98DFDBF7584","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":331257,"discussion_content":"精辟","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1606816635,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1256954,"avatar":"https://static001.geekbang.org/account/avatar/00/13/2d/fa/54d66720.jpg","nickname":"小梁编程汇","note":"","ucode":"41609524588B36","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":330466,"discussion_content":"牛","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1606629534,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1317115,"avatar":"https://static001.geekbang.org/account/avatar/00/14/18/fb/c1334976.jpg","nickname":"王崧霁","note":"","ucode":"4F3284634293A8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":295549,"discussion_content":"到位","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1596245787,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1015754,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/7f/ca/ea85bfdd.jpg","nickname":"helloworld","note":"","ucode":"00DF2FEC58D2E6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":287824,"discussion_content":"精辟","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1593564795,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1228452,"avatar":"https://static001.geekbang.org/account/avatar/00/12/be/a4/32866c50.jpg","nickname":"Avril","note":"","ucode":"E6E60A26B72076","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":231577,"discussion_content":"优秀","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1586824868,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":6662,"user_name":"每天都在找小黄车","can_delete":false,"product_type":"c1","uid":1099779,"ip_address":"","ucode":"2CF9E3160B840B","user_header":"https://static001.geekbang.org/account/avatar/00/10/c8/03/1863b35e.jpg","comment_is_top":false,"comment_ctime":1524884775,"is_pvip":false,"replies":[{"id":"1915","content":"极客时间卧虎藏龙，里面的用户个个都很有才，口才又好，长得又帅，我超喜欢😂","user_name":"作者回复","comment_id":6662,"uid":"1098920","ip_address":"","utype":1,"ctime":1524907127,"user_name_real":"华仔@阿里游戏"}],"discussion_count":15,"race_medal":0,"score":"4485470741799","product_id":100006601,"comment_content":"搬砖的：“头，我们要造什么？”；（做什么系统？）<br>\r工程师：“龙之梦商城”；（XXX系统，比如微博系统）<br>\r搬砖的：“图纸画出来了嘛？”；（架构是怎么设计的？）<br>\r工程师：“一楼主要以女性消费为主体、二楼以大众娱乐为主体、三楼以美食为主体”；（相当于微博系统中的各个子系统，比如评论子系统、动态子系统、消息子系统）<br>\r搬砖的：“头，说人话”；<br>\r工程师：“一楼有卖衣服、化妆品的，二楼有唱歌、看电影的，三楼有吃的”；（【模块】按照逻辑区分，比如存储数据模块、搜索模块、消息推送模块）<br>\r搬砖的：“有没有很知名的店啊？”；<br>\r工程师：“有的，一楼有香奈儿、优衣库...、二楼有好乐迪、万达影院....、三楼有海底捞、避风塘.....”；（【组件】按照物理区分，存储数据模块对应Mysql、搜索模块对应ElasticSearch、 消息推送模块对应Kafka）<br>\r搬砖的：“对了，头，商城大门有啥需要叮嘱的施工规范不？或有啥简化施工工艺的新技术嘛？”；（有框架的可以用吗？）<br>\r工程师猛吸了一口烟，把烟头扔在地上，用皮鞋左右撵了两下，缓缓从嘴里崩出四个字。\r“老样子吧”。（Spring全家桶甩起来）","like_count":1045,"discussions":[{"author":{"id":1173203,"avatar":"https://static001.geekbang.org/account/avatar/00/11/e6/d3/4256d416.jpg","nickname":"^_^","note":"","ucode":"7E4FBA3237B91E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":379920,"discussion_content":"技术来源于生活","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1624246343,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1048188,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83ep8ibEQqN1Slfh9Vg0YJcXcico7NKfl9evCeMpNKZCVE2KWtz3f404LejIsGFFzcubpW5WvhC9ibYevQ/132","nickname":"子榕","note":"","ucode":"943C2A27B9D7C5","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":273674,"discussion_content":"建议把&#34;工程师&#34; 换成 &#34;架构师&#34; 就完美啦，哈哈哈","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1590487411,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":417115,"discussion_content":"极客时间卧虎藏龙，里面的用户个个都很有才，口才又好，长得又帅，我超喜欢😂","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1524907127,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2619322,"avatar":"https://static001.geekbang.org/account/avatar/00/27/f7/ba/08044ec3.jpg","nickname":"张平","note":"","ucode":"4A600617F69991","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":387926,"discussion_content":"牛逼，不当导演埋没了啊","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1628499434,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1485623,"avatar":"https://static001.geekbang.org/account/avatar/00/16/ab/37/d5d78db6.jpg","nickname":"马荒兵乱","note":"","ucode":"8C19F44C3A903A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":355290,"discussion_content":"太有才了","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1615394265,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1618464,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLOEVETmcbX593BJXuB6qHggjZvEKwcDOcm41cqjqGyu5l28eqXmJDwbWiaCXrGzAAUKCuCtPpnaRw/132","nickname":"cdchen","note":"","ucode":"96C6F3844E4A4F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":320356,"discussion_content":"最形象的比喻，没有之一","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1604327453,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1518348,"avatar":"https://static001.geekbang.org/account/avatar/00/17/2b/0c/f4bdb520.jpg","nickname":"Dr. Wong","note":"","ucode":"0CEF58927E69E8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":385693,"discussion_content":"全是打工人\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1627211432,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1227606,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bb/56/a506a165.jpg","nickname":"蓝萧","note":"","ucode":"DE125B56BF7818","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":362604,"discussion_content":"子系统与模块有何区别，这里好像没区别","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1616990400,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1809686,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/9d/16/a2fb8136.jpg","nickname":"季某人","note":"","ucode":"1EEF2A58C3BD79","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1227606,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bb/56/a506a165.jpg","nickname":"蓝萧","note":"","ucode":"DE125B56BF7818","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":362907,"discussion_content":"应该是子系统包含模块吧，这为道友所写的对应应该就是一楼以女性消费为主体，然后这个主体包括:卖衣服、化妆品","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1617070913,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":362604,"ip_address":""},"score":362907,"extra":""},{"author":{"id":1227606,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bb/56/a506a165.jpg","nickname":"蓝萧","note":"","ucode":"DE125B56BF7818","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1809686,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/9d/16/a2fb8136.jpg","nickname":"季某人","note":"","ucode":"1EEF2A58C3BD79","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":362919,"discussion_content":"应该是可以相互包含的关系。一个大的逻辑业务模块可能包含很多子系统。一个子系统又包含其内部的各种逻辑模块","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1617072962,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":362907,"ip_address":""},"score":362919,"extra":""}]},{"author":{"id":1915449,"avatar":"","nickname":"just","note":"","ucode":"9FEF587876068C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":350415,"discussion_content":"有框架的可以用吗？\n\n形象","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1613867136,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1046429,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/f7/9d/be04b331.jpg","nickname":"落叶飞逝的恋","note":"","ucode":"F9A95DB28BCF1E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":299748,"discussion_content":"人才","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1597806282,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1447569,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/WtHCCMoLJ2DvzqQwPYZyj2RlN7eibTLMHDMTSO4xIKjfKR1Eh9L98AMkkZY7FmegWyGLahRQJ5ibPzeeFtfpeSow/132","nickname":"脱缰的野马__","note":"","ucode":"D5F993E7232C61","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":288103,"discussion_content":"工程师穿的皮鞋吗？有点偏门啊，假的！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1593653066,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1015754,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/7f/ca/ea85bfdd.jpg","nickname":"helloworld","note":"","ucode":"00DF2FEC58D2E6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":287823,"discussion_content":"形象，太","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1593564775,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1452626,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/PvD4ZpoY41ltqyxZq6Xxl0zmpb9jEPYibBRE5TSe87ec788cBHYWEYl2Rsy7BVZNjNFcWP95TCB4Iopv5HKWrjw/132","nickname":"乄恰似一种蜕变","note":"","ucode":"E0E2E5F7CFF85A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":37315,"discussion_content":"简洁实用，容易理解。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571578323,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":6647,"user_name":"Ivan","can_delete":false,"product_type":"c1","uid":1103623,"ip_address":"","ucode":"B6C3207C26BDC5","user_header":"https://static001.geekbang.org/account/avatar/00/10/d7/07/0de57e61.jpg","comment_is_top":false,"comment_ctime":1524879814,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"431021609414","product_id":100006601,"comment_content":"框架是规矩，架构是按照规矩做规划。系统是学校，子系统是班级，模块是学生老师，组件是课桌椅。每一层级的作用意义和范围不一样，要求和可复用度也不一样","like_count":100,"discussions":[{"author":{"id":1172362,"avatar":"https://static001.geekbang.org/account/avatar/00/11/e3/8a/ed8d1b63.jpg","nickname":"梧桐秋雨","note":"","ucode":"9D6AC6BA1E4259","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":573451,"discussion_content":"我也觉得这个比喻不对","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1653441414,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2041687,"avatar":"","nickname":"InfoQ_7e7252441205","note":"","ucode":"8C493C60E336C0","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":560446,"discussion_content":"好像说得不对，你这个定义只考虑到了系统的关键功能，但事实上架构除了关注核心功能外，还要考虑关键dfx","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1649332277,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":10284,"user_name":"景三","can_delete":false,"product_type":"c1","uid":1132040,"ip_address":"","ucode":"77B43E3E0497A6","user_header":"https://static001.geekbang.org/account/avatar/00/11/46/08/ddcf2752.jpg","comment_is_top":false,"comment_ctime":1527438382,"is_pvip":false,"replies":[{"id":"3232","content":"很形象😂","user_name":"作者回复","comment_id":10284,"uid":"1098920","ip_address":"","utype":1,"ctime":1527475858,"user_name_real":"华仔"}],"discussion_count":6,"race_medal":0,"score":"345124822062","product_id":100006601,"comment_content":"用人来比喻，架构是骨头，搭起整个软件。框架是大脑，约束软件应该怎么做。模块是吃喝拉撒走，负责不同的功能。组件是躯干四肢头，组成一个人。而子系统就是呼吸系统运动系统，属于软件的一部分，独立工作却又遵从指挥","like_count":81,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":418423,"discussion_content":"很形象😂","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1527475858,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1028301,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/b0/cd/c54572fe.jpg","nickname":"沐雪","note":"","ucode":"0C42BF0D75FD9B","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":549109,"discussion_content":"模块里是否还包括 呼吸？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1643556614,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1531297,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/8X8KBXpjt3Z9gJvFNKZL0EqfBFf1RT1qoCkpWJaokibiaqeJUWPiaYgdXW0ZQsoTseicUibyAh2Yvic5B6zKicBRmibCew/132","nickname":"Ryan Xu","note":"","ucode":"A8751AB56C4A30","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":374947,"discussion_content":"棒","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1621416571,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1701051,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTK28icgzo9R0rT9h0Q7iaYkJQtCPa0oriaDfFdaQMUibnnH7BW2CU9yKwDUvou63AmoGGIPgZJDyjMRJA/132","nickname":"菜鸟葫芦娃","note":"","ucode":"B402A23D3F1381","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":368203,"discussion_content":"深入浅出","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1618614753,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1922378,"avatar":"https://static001.geekbang.org/account/avatar/00/1d/55/4a/8a841200.jpg","nickname":"ACK","note":"","ucode":"C5D09B18DEF151","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":347457,"discussion_content":"一听就清晰多了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1612234994,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1029549,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/b5/ad/381c57be.jpg","nickname":"李俊超","note":"","ucode":"C70D72BA6E92F3","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":294529,"discussion_content":"结合人体来梳理架构是一个很好的比喻","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1595918951,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":6697,"user_name":"顿晓","can_delete":false,"product_type":"c1","uid":1001788,"ip_address":"","ucode":"5D81B28560A2E8","user_header":"https://static001.geekbang.org/account/avatar/00/0f/49/3c/fe7be5cc.jpg","comment_is_top":false,"comment_ctime":1524904509,"is_pvip":true,"replies":[{"id":"1906","content":"你已经开始解剖架构的本质了，后面章节会讨论这个话题。<br>通常“架构”还是用作名词，动词就用“架构设计”，有的观点用“构架”，有点拗口和容易混淆，所以我一般宁愿用“架构设计”","user_name":"作者回复","comment_id":6697,"uid":"1098920","ip_address":"","utype":1,"ctime":1524905646,"user_name_real":"华仔@阿里游戏"}],"discussion_count":1,"race_medal":0,"score":"336532353597","product_id":100006601,"comment_content":"我们要做的东西都能抽象为一个系统，架构既可做动词也可做名词，作为动词就代表系统的设计，作为名词就代表系统的表现形式。<br>所以架构首先继承了系统的属性：<br>0、系统整体有价值<br>1、由多个有关系的个体组成<br>2、涌现，整体大于个体之和，也就是文中说的“流”出来的新的价值<br>系统的架构从无到有由人来执行，所以也具备人思考和交流的属性：<br>0、思维带宽较小，不能同时考虑很多事情，需要把系统做分解（模块和组件）<br>1、线性思想和交流，多维关系要降级到二维关系（4+1视图等多种方法论）<br>2、人作为个体的个性化-也即多样性，架构没用统一标准，适合自己&#47;团队&#47;公司最重要。","like_count":78,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":417129,"discussion_content":"你已经开始解剖架构的本质了，后面章节会讨论这个话题。\n通常“架构”还是用作名词，动词就用“架构设计”，有的观点用“构架”，有点拗口和容易混淆，所以我一般宁愿用“架构设计”","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1524905646,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":6823,"user_name":"wocow","can_delete":false,"product_type":"c1","uid":1021989,"ip_address":"","ucode":"7335B115FCA06C","user_header":"https://static001.geekbang.org/account/avatar/00/0f/98/25/93977b53.jpg","comment_is_top":false,"comment_ctime":1524984257,"is_pvip":false,"replies":[{"id":"1926","content":"提炼了精华，赞","user_name":"作者回复","comment_id":6823,"uid":"1098920","ip_address":"","utype":1,"ctime":1525017265,"user_name_real":"华仔@阿里游戏"}],"discussion_count":2,"race_medal":0,"score":"280697858497","product_id":100006601,"comment_content":"系统与子系统：系统是由一系列有关联，按特定规则组成的个体，并且产生新的能力，而系统与子系统则是观察的交角度不同<br><br>模块与组件：模块是从逻辑角度去看待，而组件是从物理角度去看待<br><br>框架与架构：框架是规范也是约束，可以理解为封闭性的话题，定义好，让别人如何去使用，而架构是一种结构，是一种开放性的话题，如何去设计组织架构，如何让架构更具有拓展性，减少沟通错误成本","like_count":65,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":417149,"discussion_content":"提炼了精华，赞","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1525017265,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2094062,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIgXlnRwqBvzlSWTrv4eZ4hSOhXnr6NOKzVFUIHJbhIEjpkvSjlJEg3xf3Th7uKcUw9I200QDpbdg/132","nickname":"AngryShoes","note":"","ucode":"28E4485EE997AA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":350188,"discussion_content":"也可以这么理解，模块是业务角度去看待，组件是从技术角度去看待","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1613741286,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":9622,"user_name":"Joker","can_delete":false,"product_type":"c1","uid":1119395,"ip_address":"","ucode":"9E5D6A5E963F15","user_header":"https://static001.geekbang.org/account/avatar/00/11/14/a3/0782e181.jpg","comment_is_top":false,"comment_ctime":1526991661,"is_pvip":false,"replies":[{"id":"3000","content":"非常正确：问题，模块，规则，系统，架构四要素😃","user_name":"作者回复","comment_id":9622,"uid":"1098920","ip_address":"","utype":1,"ctime":1527056486,"user_name_real":"华仔"}],"discussion_count":1,"race_medal":0,"score":"151850847021","product_id":100006601,"comment_content":"是不是可以这么认为，就是做架构就是对于解决一个或者一类问题，构建一个系统，你需要为这个系统根据业务划分模块，需要加入能组合起来的组件和框架，然后你需要构建一系列规则，让这些组件和框架跑起来，各自发挥各自的能力，来实现一个个模块，然后这些模块又组合起来成了整个系统，所以做架构需要很熟悉业务，会业务逻辑划分，要熟悉很多框架，组件，知道他们的能力，熟悉怎么组合他们完美的运作起来！","like_count":35,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":418140,"discussion_content":"非常正确：问题，模块，规则，系统，架构四要素😃","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1527056486,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":15217,"user_name":"小龙","can_delete":false,"product_type":"c1","uid":1164657,"ip_address":"","ucode":"E80483FA8EFF05","user_header":"https://static001.geekbang.org/account/avatar/00/11/c5/71/f16f123f.jpg","comment_is_top":false,"comment_ctime":1531016559,"is_pvip":false,"replies":[{"id":"5198","content":"点赞","user_name":"作者回复","comment_id":15217,"uid":"1098920","ip_address":"","utype":1,"ctime":1531122028,"user_name_real":"华仔"}],"discussion_count":1,"race_medal":0,"score":"121790100847","product_id":100006601,"comment_content":"框架和架构其实不一定有什么关联关系。架构是为了实现某个功能而设计的一种结构方式。虽然架构一词高大上，但你只要实现了自己的功能，你的结构就是架构。有了架构，你就有了工作的思路和方向。框架是实现功能的一种规范，你必须在这种规范下工作。注意，定义中说框架是定义组建的规范，所以框架里面不一定非得有组建和模块。<br>模块是从职责划分的角度来观察，实现某个功能的职责，称之为模块。比如登陆模块。要实现的某个功能，我们一般称之为模块。<br>组件的本质是可以独立实现某项功能的零件。它的特点是独立，可替换<br>组件与模块的区别是，组件可能是为了实现模块而实现的。但是实现功能的模块不能称为组件。 ","like_count":28,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":420289,"discussion_content":"点赞","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1531122028,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":6660,"user_name":"tick","can_delete":false,"product_type":"c1","uid":1106123,"ip_address":"","ucode":"D2C864306C06CB","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKOASyV1lpdkW6It8WQltNGj9021PTibqOwRUTccaSUEM1GmQThOTIRp9Eu7XNZZFfGGNveLbUSw9Q/132","comment_is_top":false,"comment_ctime":1524884480,"is_pvip":false,"replies":[{"id":"1916","content":"子系统是独立运行的，模块是子系统的逻辑组成部分，如果学生管理系统规模很大（例如在线学校），需要支撑每秒上万的登录请求，那么学生管理的登录模块一样可以升级为子系统。","user_name":"作者回复","comment_id":6660,"uid":"1098920","ip_address":"","utype":1,"ctime":1524907287,"user_name_real":"华仔@阿里游戏"}],"discussion_count":1,"race_medal":0,"score":"74539328512","product_id":100006601,"comment_content":"微信是系统，微信的登录是子系统，<br>学生管理是系统，学生管理的登录就是模块，这是为什么呢，模块和子系统啥区别?","like_count":17,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":417114,"discussion_content":"子系统是独立运行的，模块是子系统的逻辑组成部分，如果学生管理系统规模很大（例如在线学校），需要支撑每秒上万的登录请求，那么学生管理的登录模块一样可以升级为子系统。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1524907287,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":7656,"user_name":"余红松-北京","can_delete":false,"product_type":"c1","uid":1118528,"ip_address":"","ucode":"D764A0E06F77E4","user_header":"https://static001.geekbang.org/account/avatar/00/11/11/40/16455a03.jpg","comment_is_top":false,"comment_ctime":1525610957,"is_pvip":false,"discussion_count":4,"race_medal":0,"score":"61655153101","product_id":100006601,"comment_content":"# 阅读笔记<br>- 关于系统：<br>  系统和子系统其实都是系统，只不过在本业务里边的分层不同，只有顶层为系统，其他都为子系统，就像目录树一样，看你目录最深有多少层，<br>- 模块向虚(逻辑)，组件向实(代码)。<br>- 框架向虚(规范)，架构向实(结构)。","like_count":14,"discussions":[{"author":{"id":2014779,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/be/3b/0f8a18d0.jpg","nickname":"bugtrap","note":"","ucode":"3F72E444326DD7","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":288401,"discussion_content":"框架向实吧，框架是面向或配置的半成品","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1593742293,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1725691,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/54/fb/d533b03e.jpg","nickname":"Andy","note":"","ucode":"BDA2AEB353ECC4","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2014779,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/be/3b/0f8a18d0.jpg","nickname":"bugtrap","note":"","ucode":"3F72E444326DD7","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":570890,"discussion_content":"是的，框架向实","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1651986193,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":288401,"ip_address":""},"score":570890,"extra":""}]},{"author":{"id":2855082,"avatar":"","nickname":"Geek6348","note":"","ucode":"FCE3D35F968276","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":591525,"discussion_content":"系统和子系统的叫法其实是是一个相对的叫法。比如我们常接触到的智慧办公系统，OA系统相对智慧办公系统它就是一个子系统。但相对OA系统，新闻发布系统就是OA系统的子系统。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1666613353,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"湖南"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1009329,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/66/b1/791d0f5e.jpg","nickname":"公号-生活点亮技术","note":"","ucode":"F807829A146624","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":323823,"discussion_content":"模块向虚(逻辑)，组件向实(代码) ","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1605004310,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":13577,"user_name":"线条","can_delete":false,"product_type":"c1","uid":1125120,"ip_address":"","ucode":"E447F22B8FD4F9","user_header":"https://static001.geekbang.org/account/avatar/00/11/2b/00/d568d9d1.jpg","comment_is_top":false,"comment_ctime":1529819089,"is_pvip":false,"replies":[{"id":"4575","content":"理解正确","user_name":"作者回复","comment_id":13577,"uid":"1098920","ip_address":"","utype":1,"ctime":1529892779,"user_name_real":"华仔"}],"discussion_count":1,"race_medal":0,"score":"44479492049","product_id":100006601,"comment_content":"系统根据业务或功能划分为各个模块，某些模块可能又被升级为子系统; 模块中可能使用了很多组件来实现某些具体功能 ; 同时，也可能使用了某些框架来作为开发的基础，而架构则描述了各个子系统或模块间如何协调工作。不知这么理解合理不？","like_count":10,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":419692,"discussion_content":"理解正确","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1529892779,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":6966,"user_name":"今夕是何年","can_delete":false,"product_type":"c1","uid":1111847,"ip_address":"","ucode":"2825454A7A1588","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/7SOblVZ7dNJ88wkeYR0HklxdR9VuiaQ0GMscAnrlic6EjvRZS52m4n1VPypwZFsmabbJ4STZRbHFfVZE24Jjqr1w/132","comment_is_top":false,"comment_ctime":1525184886,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"44474857846","product_id":100006601,"comment_content":"架构是顶层设计，框架是具体实现。","like_count":10},{"had_liked":false,"id":6593,"user_name":"feiyue","can_delete":false,"product_type":"c1","uid":1108601,"ip_address":"","ucode":"9F03995FEEBF98","user_header":"https://static001.geekbang.org/account/avatar/00/10/ea/79/f9ab5768.jpg","comment_is_top":false,"comment_ctime":1524874956,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"44474547916","product_id":100006601,"comment_content":"大道至简。架构是宏观整体，框架是微观组成。","like_count":10},{"had_liked":false,"id":7323,"user_name":"雪甫","can_delete":false,"product_type":"c1","uid":1018524,"ip_address":"","ucode":"02E44157C3A232","user_header":"https://static001.geekbang.org/account/avatar/00/0f/8a/9c/d172e67b.jpg","comment_is_top":false,"comment_ctime":1525398709,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"35885137077","product_id":100006601,"comment_content":"我认为的架构必然结合公司或组织内部的沟通和组织形式、业务的行业规范和发展方向、研发和运维理念以及技术能力，所以软件架构我认为首先是3个层次的：业务架构、应用架构、技术架构。业务架构 是公司或组织内部 当前的沟通模式，换句话说用户的流程是什么？他们怎么用？也就是业务需求。应用架构是把用户的需求按照行业标准、产品规划和当前的研发能力进行结合得出最合适的功能设计，产品需求是这中间的一个产出；技术架构就是技术通常程序员说的架构，各个系统怎么有机的结合的一起，怎么快速的运维和故障处理。 ","like_count":8},{"had_liked":false,"id":6635,"user_name":"CHaNniNG","can_delete":false,"product_type":"c1","uid":1103943,"ip_address":"","ucode":"6D2654D0950FB9","user_header":"https://static001.geekbang.org/account/avatar/00/10/d8/47/1825ffee.jpg","comment_is_top":false,"comment_ctime":1524878309,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"35884616677","product_id":100006601,"comment_content":"关于华仔的思考题，本人刚刚接触架构，之前作为开发人员理解的架构不是很深入，基本是按照各个技术组件的组合方式来理解的，架构做得好不好，主要看技术组件能否组合得好，并满足业务特性；今天听了华仔的讲解，发现我之前忽略的业务模块的组成这一方面而单单考虑技术点了，架构其实是可以从多个角度来进行阐述的。华仔的讲解让我对架构的概念有了更加清晰和全面的了解，谢谢华仔","like_count":8},{"had_liked":false,"id":6671,"user_name":"felix","can_delete":false,"product_type":"c1","uid":1102511,"ip_address":"","ucode":"4809C6C10D8592","user_header":"https://static001.geekbang.org/account/avatar/00/10/d2/af/6423e1c2.jpg","comment_is_top":false,"comment_ctime":1524889605,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"31589660677","product_id":100006601,"comment_content":"之前理解的架构就包含2部分，逻辑架构和物理架构，现在知道了还有开发架构","like_count":7},{"had_liked":false,"id":229936,"user_name":"wudy","can_delete":false,"product_type":"c1","uid":2045302,"ip_address":"","ucode":"6E6FDA75B3885A","user_header":"https://static001.geekbang.org/account/avatar/00/1f/35/76/dbab2ce0.jpg","comment_is_top":false,"comment_ctime":1593220925,"is_pvip":false,"replies":[{"id":"85270","content":"总结挺好的","user_name":"作者回复","comment_id":229936,"uid":"1098920","ip_address":"","utype":1,"ctime":1593516075,"user_name_real":"华仔"}],"discussion_count":1,"race_medal":0,"score":"23068057405","product_id":100006601,"comment_content":"框架偏技术，就像作者所说的是一种开发规范，是一种开发思路，应用于系统或子系统中，使得开发人员能快速设计出程序编写的代码组织结构；而架构相对偏业务一点，是针对业务需求，分解整个系统，梳理出数据流转逻辑，有哪些子系统、子模块、组件组成，他们之间的相互关系是怎么样的，需要更多的考虑未来需求的变化，考虑系统的可扩展性，可靠性，容错性等。","like_count":5,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":499705,"discussion_content":"总结挺好的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1593516075,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":6655,"user_name":"Tunan","can_delete":false,"product_type":"c1","uid":1088242,"ip_address":"","ucode":"6252BD0691D948","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eohLylNXf5qWFbJFEHJjhicmcmQlgL36bwjbtNFwzU6mekZeic3eGJw3NdaKC9d1ziaiaEJnr0SO9QbCA/132","comment_is_top":false,"comment_ctime":1524882545,"is_pvip":false,"replies":[{"id":"1917","content":"这种理解适合业务系统架构设计，对于一些高性能高可用的架构不是很合适，单纯的功能划分并不能够保证高性能高可用，只能保证功能完成。","user_name":"作者回复","comment_id":6655,"uid":"1098920","ip_address":"","utype":1,"ctime":1524907405,"user_name_real":"华仔@阿里游戏"}],"discussion_count":1,"race_medal":0,"score":"22999719025","product_id":100006601,"comment_content":"我理解的架构就是功能划分，最后让整个软件成为架子，模块是乐高积木。在遵循已定接口规范下能按照产品需求自由组合模块之间的IO以达到需求效果。","like_count":5,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":417113,"discussion_content":"这种理解适合业务系统架构设计，对于一些高性能高可用的架构不是很合适，单纯的功能划分并不能够保证高性能高可用，只能保证功能完成。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1524907405,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":6617,"user_name":"理想","can_delete":false,"product_type":"c1","uid":1035713,"ip_address":"","ucode":"B6CD0EB5EAD7EF","user_header":"https://static001.geekbang.org/account/avatar/00/0f/cd/c1/d79c9de2.jpg","comment_is_top":false,"comment_ctime":1524877115,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"18704746299","product_id":100006601,"comment_content":"我理解的架构，是通过不同分工合作和识别不同生命周期为了一个组织或特定的目的而形成的树状结构，这种结构有利于在有限的时间内使组织内的角色完成相关的工作，从而达到业务增长的目的。而作者的这个架构应该更多地理解为软件架构，但是局限在顶层是否合适，还要看后续的文章内容阐述。","like_count":4},{"had_liked":false,"id":6598,"user_name":"海格","can_delete":false,"product_type":"c1","uid":1062217,"ip_address":"","ucode":"B38B4E49AAD740","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKagLyKbgMsyKTrLplWu3iauiaGh97dhwFbfQ7RSoCx1SYiaL3icV3UsA5njaUVIYV01a1d2gBzf4CCbQ/132","comment_is_top":false,"comment_ctime":1524875226,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"18704744410","product_id":100006601,"comment_content":"老师您好，我是一名运维，我讲讲对运维架构理解吧，运维架构指，业务系统所用到的中间价，在运维视角合理的规划，实现可靠性，高性能的为业务系统提供支撑功能。还有一个就是把运维的日常工作柔和起来做一个运维平台，这个平台实现简单，高效的完成运维的日常工作听完老师今天的分享，我的理解就是把一个系统更加细化具体的分析出来，然后逐个实现，再整合，完成我们想让系统完成的功能。","like_count":4},{"had_liked":false,"id":273358,"user_name":"RMB","can_delete":false,"product_type":"c1","uid":2272121,"ip_address":"","ucode":"5D1F54B93EB5D3","user_header":"https://static001.geekbang.org/account/avatar/00/22/ab/79/e293456e.jpg","comment_is_top":false,"comment_ctime":1610549980,"is_pvip":false,"replies":[{"id":"99084","content":"理解到位","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1610613748,"ip_address":"","comment_id":273358,"utype":1}],"discussion_count":1,"race_medal":0,"score":"14495451868","product_id":100006601,"comment_content":"框架，能被大家高度认可，且可以快速搭建应用，能让程序员把精力主要放在实现业务逻辑上的逻辑体，简单说就是规范、高效；<br>架构，小到单个系统的不同组件，大到多个系统的多个组件，目标都是为了完成一个特定的目标而组合到一起的。","like_count":3,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":513575,"discussion_content":"理解到位","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1610613748,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":144889,"user_name":"吕宗胜ZJU","can_delete":false,"product_type":"c1","uid":1112605,"ip_address":"","ucode":"9CD5CCBABF3D68","user_header":"https://static001.geekbang.org/account/avatar/00/10/fa/1d/5dc4ba61.jpg","comment_is_top":false,"comment_ctime":1572081421,"is_pvip":false,"replies":[{"id":"56223","content":"这个理解主要适合业务开发","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1572330421,"ip_address":"","comment_id":144889,"utype":1}],"discussion_count":1,"race_medal":0,"score":"14456983309","product_id":100006601,"comment_content":"我从事业务开发，我理解的架构是把业务进行模块化拆分，模块间做到职责分离和低耦合；模块内做到高扩展和高内聚；再把复用性强的模块或者功能提炼成组件、平台或者中台；同时从稳定性、高性能出发考虑如何搭建监控系统、反馈系统、降级系统等等基础组件。","like_count":3,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":472155,"discussion_content":"这个理解主要适合业务开发","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1572330421,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":6678,"user_name":"Ken","can_delete":false,"product_type":"c1","uid":1069703,"ip_address":"","ucode":"C330584F6DE3B6","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKGRpeljInKjibYj7TvZQwu3lwcHOsh3DMdsCJZGibt0onUQibeK1AOGBf60ZopfKDhBrLibKVzW3Xlicg/132","comment_is_top":false,"comment_ctime":1524891165,"is_pvip":false,"replies":[{"id":"1912","content":"这种方式适合描述较复杂的后台架构，有的系统不一定有子系统的概念，但它们一样有架构，例如我们可以说mysql的架构，jvm的架构，linux的架构","user_name":"作者回复","user_name_real":"华仔@阿里游戏","uid":"1098920","ctime":1524906626,"ip_address":"","comment_id":6678,"utype":1}],"discussion_count":1,"race_medal":0,"score":"14409793053","product_id":100006601,"comment_content":"系统架构主要描述一个系统有哪些子系统构成，每个子系统的职责，以及子系统之间如何交互。<br>从技术角度来说，系统架构也会描述系统的技术栈，技术选型，以及高层次的业务流程。","like_count":3,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":417118,"discussion_content":"这种方式适合描述较复杂的后台架构，有的系统不一定有子系统的概念，但它们一样有架构，例如我们可以说mysql的架构，jvm的架构，linux的架构","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1524906626,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":6640,"user_name":"Suclogger","can_delete":false,"product_type":"c1","uid":1093447,"ip_address":"","ucode":"ADD35A2B841257","user_header":"https://static001.geekbang.org/account/avatar/00/10/af/47/b9c0111a.jpg","comment_is_top":false,"comment_ctime":1524878964,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"14409780852","product_id":100006601,"comment_content":"我觉得架构的定义也可以从逻辑和物理上拆分，从逻辑视角出发，可以认为是业务的各个模块的定义，从物理视角出发，可以认为是各个模块的实现之间是一一种什么方式交互合作。感谢作者的精彩分享，就是演讲者对专有单词的读音还要改善，比如nginx。","like_count":3},{"had_liked":false,"id":6619,"user_name":"弄花香满衣","can_delete":false,"product_type":"c1","uid":1102394,"ip_address":"","ucode":"7B967B9B506FC2","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eo5TodrC8rdWMIIIBtZX3IYlK2kXa47HeVicO0USkAIgRHia3OAs4L93kGMyJfGu928DK40YCUKDCXQ/132","comment_is_top":false,"comment_ctime":1524877259,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"14409779147","product_id":100006601,"comment_content":"我理解的架构包括网络、机房、存储、容器、系统实现；其中系统实现约等于框架，比如经常用的MVC框架、redis、RPC等等","like_count":3},{"had_liked":false,"id":324366,"user_name":"shawn","can_delete":false,"product_type":"c1","uid":1516046,"ip_address":"","ucode":"1A52A00A0A6610","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIkkg9icSGleYMAnwlb7A9MMJYOdovl8kOCA0asMkDe6grPNF74ib0prQMicicJTNa1WsdpMJ4p1CWkUQ/132","comment_is_top":false,"comment_ctime":1638407065,"is_pvip":false,"replies":[{"id":"117718","content":"对的，不同角度混合的话，架构图看起来不太协调，看起来比较乱<br>","user_name":"作者回复","user_name_real":"编辑","uid":"1098920","ctime":1638420794,"ip_address":"","comment_id":324366,"utype":1}],"discussion_count":2,"race_medal":0,"score":"10228341657","product_id":100006601,"comment_content":"写的很好，有一次画架构图，一个图里同时出现了模块和组件，然后就被批了，当时不懂为啥不对，现在懂了。","like_count":2,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":535368,"discussion_content":"对的，不同角度混合的话，架构图看起来不太协调，看起来比较乱\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1638420794,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1028301,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/b0/cd/c54572fe.jpg","nickname":"沐雪","note":"","ucode":"0C42BF0D75FD9B","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":549113,"discussion_content":"我曾经也是这么干的，现在知道了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1643557333,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":208356,"user_name":"cwfighter","can_delete":false,"product_type":"c1","uid":1099467,"ip_address":"","ucode":"1328C8A43EAD1B","user_header":"https://static001.geekbang.org/account/avatar/00/10/c6/cb/c7541d52.jpg","comment_is_top":false,"comment_ctime":1587344522,"is_pvip":false,"replies":[{"id":"79015","content":"理解对的，模块独立出系统后就是微服务了","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1588162934,"ip_address":"","comment_id":208356,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10177279114","product_id":100006601,"comment_content":"工作常说的模块和服务是不是等价概念？业务复杂后一个模块被拆分为多个模块，就进化成了子系统？？不知道理解的对不对","like_count":2,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":492433,"discussion_content":"理解对的，模块独立出系统后就是微服务了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1588162934,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":79229,"user_name":"follaw","can_delete":false,"product_type":"c1","uid":1312822,"ip_address":"","ucode":"82A4275A34A6C8","user_header":"https://static001.geekbang.org/account/avatar/00/14/08/36/401ce5e8.jpg","comment_is_top":false,"comment_ctime":1553409813,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10143344405","product_id":100006601,"comment_content":"架构是设计师，框架是工程师","like_count":2},{"had_liked":false,"id":74278,"user_name":"小小杨","can_delete":false,"product_type":"c1","uid":1105218,"ip_address":"","ucode":"7E4DC9A782FFD6","user_header":"https://static001.geekbang.org/account/avatar/00/10/dd/42/4a82631e.jpg","comment_is_top":false,"comment_ctime":1552172573,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10142107165","product_id":100006601,"comment_content":"架构核心降系统分解，分解后的功能及协着关系定义。<br>   好的架构必须切合需求，合理分解，分解的合理及粒度体现架构的水平。架构让后续的技术选型，组件复用，详细设计变得更加清晰。","like_count":2},{"had_liked":false,"id":68641,"user_name":"Monday","can_delete":false,"product_type":"c1","uid":1250907,"ip_address":"","ucode":"77B9BACC783598","user_header":"https://static001.geekbang.org/account/avatar/00/13/16/5b/83a35681.jpg","comment_is_top":false,"comment_ctime":1550564235,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10140498827","product_id":100006601,"comment_content":"看了3遍，听了5遍，对架构的理解还是只能停留在文字上！","like_count":2},{"had_liked":false,"id":34515,"user_name":"Mr.Lee","can_delete":false,"product_type":"c1","uid":1240758,"ip_address":"","ucode":"F732D98D262703","user_header":"https://static001.geekbang.org/account/avatar/00/12/ee/b6/f99db3e7.jpg","comment_is_top":false,"comment_ctime":1540196662,"is_pvip":false,"replies":[{"id":"12295","content":"不能这么理解，架构可以是多个子系统组成，也可以是多个模块组成","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1540201431,"ip_address":"","comment_id":34515,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10130131254","product_id":100006601,"comment_content":"架构可以理解为是有多个框架组成的吗？","like_count":2,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":427234,"discussion_content":"不能这么理解，架构可以是多个子系统组成，也可以是多个模块组成","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1540201431,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":30789,"user_name":"Leo","can_delete":false,"product_type":"c1","uid":1250126,"ip_address":"","ucode":"A32AB092B7CE70","user_header":"https://static001.geekbang.org/account/avatar/00/13/13/4e/f6da63fb.jpg","comment_is_top":false,"comment_ctime":1538997605,"is_pvip":false,"replies":[{"id":"11219","content":"不要这样理解，产品边界理解起来很泛，不同的人之间交流困难","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1539132515,"ip_address":"","comment_id":30789,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10128932197","product_id":100006601,"comment_content":"从产品经理的角度看：架构能否理解成产品的边界？","like_count":2,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":426100,"discussion_content":"不要这样理解，产品边界理解起来很泛，不同的人之间交流困难","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1539132515,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":22163,"user_name":"南山","can_delete":false,"product_type":"c1","uid":1119593,"ip_address":"","ucode":"94656FE4A6C378","user_header":"https://static001.geekbang.org/account/avatar/00/11/15/69/187b9968.jpg","comment_is_top":false,"comment_ctime":1535517229,"is_pvip":true,"replies":[{"id":"7988","content":"一看就是做业务后台的😄","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1535608725,"ip_address":"","comment_id":22163,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10125451821","product_id":100006601,"comment_content":"原来的理解是一个系统的架构，分层，再按照模块来划分，再混合存储，中间件，负载，高科用这些揉和在一起，没有清晰的认识。","like_count":2,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":423025,"discussion_content":"一看就是做业务后台的😄","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1535608725,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":8321,"user_name":"阿飞","can_delete":false,"product_type":"c1","uid":1086104,"ip_address":"","ucode":"5D31D03003988C","user_header":"https://static001.geekbang.org/account/avatar/00/10/92/98/064ce708.jpg","comment_is_top":false,"comment_ctime":1526091734,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10116026326","product_id":100006601,"comment_content":"模块是单一系统中的一个单元，组件可以存在各个系统中的，多个模块组成一个系统，独立运行的模块就是各个子系统，多个子系统组成一个系统","like_count":2},{"had_liked":false,"id":7089,"user_name":"卫什么","can_delete":false,"product_type":"c1","uid":1112217,"ip_address":"","ucode":"CC4FC09FF4F340","user_header":"https://static001.geekbang.org/account/avatar/00/10/f8/99/b9978b44.jpg","comment_is_top":false,"comment_ctime":1525267761,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10115202353","product_id":100006601,"comment_content":"国家算一个系统，下面有很多的子系统，这些子系统内部又有很多其他系统。子系统相互关联又共通作用，维护国家运行。<br><br>模块算逻辑划分，国家的组成经济，政治，文化，国防，教育……。<br>组件算物理划分，三省六部等等。<br><br>框架算规范，三权分立，或者皇权天授，或者君主立宪，或者基本人权<br><br>构架算顶层设计 三省六部，三级议会，上下议院，等等","like_count":2},{"had_liked":false,"id":6802,"user_name":"joedong","can_delete":false,"product_type":"c1","uid":1107758,"ip_address":"","ucode":"022376E65FB045","user_header":"https://static001.geekbang.org/account/avatar/00/10/e7/2e/f3f5310a.jpg","comment_is_top":false,"comment_ctime":1524969021,"is_pvip":false,"replies":[{"id":"1931","content":"软件架构和建筑架构貌似类似，实质上有本质区别，后面会阐述","user_name":"作者回复","user_name_real":"华仔@阿里游戏","uid":"1098920","ctime":1525017763,"ip_address":"","comment_id":6802,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10114903613","product_id":100006601,"comment_content":"个人觉得架构是复杂事物构建过程中产生的需求，而且不仅是效率上的，还是必要性上，都需要架构的支撑。以此引申出的架构设计，架构搭建，架构维护升级等架构相关工作。<br>类比建筑行业里面的架构，如果没有好的架构支撑，就无法搭建稳固的建筑&quot;产品&quot;。而且架构将不可变的要素跟可变的要素进行了分离，使到建筑的例如外观，装饰，内部空间等的变化(短时内)成为可能。<br>所以回到软件产品(系统)，架构的引入，确实也起到了类似的作用。而且越通用的架构越低层，但是同时也未必产品构建效率和产品整体性能较佳，所以需要根据不同类型的产品进行架构设计。比如网页显示型产品(web)跟功能调用型(输出类似json等数据)的，就会有不同的架构设计。","like_count":2,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":417141,"discussion_content":"软件架构和建筑架构貌似类似，实质上有本质区别，后面会阐述","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1525017763,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":6665,"user_name":"可见度户","can_delete":false,"product_type":"c1","uid":1101668,"ip_address":"","ucode":"8E2DB063726BF2","user_header":"https://static001.geekbang.org/account/avatar/00/10/cf/64/dafc62fa.jpg","comment_is_top":false,"comment_ctime":1524887908,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10114822500","product_id":100006601,"comment_content":"之前理解的架构:<br>主要从业务和技术两方面，业务是对业务模块进行划分，由多个业务模块有机组合成一个大的软件系统；技术方面主要是考虑系统的分层及组件依赖关系，是从技术的角度去把握如何能过支撑业务模块，最后是从系统部署和运行角度考虑物理结构；<br>现在理解的架构:<br>理解了系统，子系统，模块，组件，框架等架构中必然涉及到的一些概念和之间的区别，其实框架就是对上述这些东西的合理的组合，来满足业务需求，从而形成下来的一个逐渐演变的逻辑结构，文中提到的4+1视图能过很好的从不同角度观察系统架构，架构不再是一个概念，而是在不同视角有不同的展现形式，我们只有把每个视角都做到合理切满足业务需求，组合起来应该就是一个合理的整体架构。<br>个人愚见，望网友和老师指导，感谢老师分享","like_count":2},{"had_liked":false,"id":6633,"user_name":"常江舟","can_delete":false,"product_type":"c1","uid":1031422,"ip_address":"","ucode":"75376392A1F5D4","user_header":"https://static001.geekbang.org/account/avatar/00/0f/bc/fe/b43be33e.jpg","comment_is_top":false,"comment_ctime":1524878211,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"10114812803","product_id":100006601,"comment_content":"我原来理解的架构<br>1.如果是单体应用这种，拿MVC来说，不管是前端还是后台，我说是MVC风格，各种前后端框架比如spring mvc,angular是各种风格的实现。这个时候别人问我软件的架构是什么，我说就是单体应用架构，顶多再描述一下，系统是动静分离，还有用到了哪些组件，原来我对组件的定义就是ngix,mysql,tomcat这些。这一点和今天老师讲的差不多<br>2.如果是分布式系统这种复杂的软件系统，别人问及架构。我会比较多地描述系统该系统整理分为哪几块，对应老师今天说的子系统的定义，而没有像老师一样，从业务逻辑和物理视图，开发角度等不同的面去描述。如果问及具体的某一块，我会比较多地描述其上下游依赖关系，在高性能，高可用方面怎么做的。总结一下，感觉自己的定义比较含糊，除非写文档的时候才会做几张业务架构图，和中间件相关的技术架构图。老师给的定义很清楚，而工程上也确实需要这样的定义，真是学到了。特别是联想到RUP那句话，让我恍然大悟！","like_count":2},{"had_liked":false,"id":6613,"user_name":"撒哈拉的海马","can_delete":false,"product_type":"c1","uid":1088994,"ip_address":"","ucode":"2F0C3811664D2E","user_header":"https://static001.geekbang.org/account/avatar/00/10/9d/e2/4c822d9c.jpg","comment_is_top":false,"comment_ctime":1524876810,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10114811402","product_id":100006601,"comment_content":"我理解的架构，针对特定的需求，选择某种技术或某些技术簇，并设计出一套解决此问题的串联方法和规则，用来定义各系统和子系统的能力以及它们之间的交互串联规则说明和方法。","like_count":2},{"had_liked":false,"id":6597,"user_name":"刚子","can_delete":false,"product_type":"c1","uid":1017080,"ip_address":"","ucode":"7B55EC80A7A4A9","user_header":"https://static001.geekbang.org/account/avatar/00/0f/84/f8/c22d32b4.jpg","comment_is_top":false,"comment_ctime":1524875145,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10114809737","product_id":100006601,"comment_content":"之前理解的架构定义是可以很恰当的满足当前业务需求的要求，让人看起来很自然<br><br>另外老师文章中提到的架构关注的结构，而框架关注的是规范，仔细想来，的确如此，架构设计完成之后好比大厦的构造图，而框架好比使用架构某一部分需要遵守的规范<br><br>个人想法，多多交流😀😀","like_count":2},{"had_liked":false,"id":318372,"user_name":"偷鱼的喵大仙","can_delete":false,"product_type":"c1","uid":1514277,"ip_address":"","ucode":"640A04F8CCB567","user_header":"https://static001.geekbang.org/account/avatar/00/17/1b/25/f22d26a6.jpg","comment_is_top":false,"comment_ctime":1635261189,"is_pvip":false,"replies":[{"id":"115565","content":"规范是架构的一部分，比如说架构设计的时候规定微服务之间通讯采用gRPC或者dubbo；框架就是具体的规范实现方案，比如说Spring Boot是MVC框架","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1635413633,"ip_address":"","comment_id":318372,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5930228485","product_id":100006601,"comment_content":"在某种意义上来说，我觉得架构有时候也是一种规范，但是这种规范更多是针对业务进行编码的规范，让不同的业务都遵循既定的流程，而业务程序员要在此流程的基础上进行具体代码的实现。<br><br>而框架，我认为更偏向于具体技术点的规范，范围可能比架构的范围要细分一些，采用好的框架会大大提升开发的效率。<br><br>组件针对与整个系统来说，只是一个功能点的实现，多个组件的完美结合可能会实现一个完整的业务系统。<br><br>个人的一点拙见，大佬指教🐶","like_count":1,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":529210,"discussion_content":"规范是架构的一部分，比如说架构设计的时候规定微服务之间通讯采用gRPC或者dubbo；框架就是具体的规范实现方案，比如说Spring Boot是MVC框架","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1635413633,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":305510,"user_name":"极爷","can_delete":false,"product_type":"c1","uid":1780383,"ip_address":"","ucode":"24BE33FFA7331F","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIEJ8h4x6vRmjYgvdeXle4iazib9cCYR4skiaj6xk17KuquGFXliag266MXZsTx1h2hICloE9EMAbcLIA/132","comment_is_top":false,"comment_ctime":1628004463,"is_pvip":false,"replies":[{"id":"110481","content":"很有创意，点赞：）","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1628038629,"ip_address":"","comment_id":305510,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5922971759","product_id":100006601,"comment_content":"通过“人”这个系统来理解系统，模块，组件，框架，架构。<br>1.从业务逻辑角度拆分，“人”的架构：脑，手，身体，脚。<br>2.从物理部署的角度拆分，“人”的架构：上皮组织，结缔组织，肌肉组织，神经组织。<br>3.从开发规范的角度拆分，“人”的架构：吃饭，睡觉，思考，行走。<br><br>软件架构是软件系统的顶层结构。<br>结构可以分不同的角度拆解，<br>从业务逻辑上来拆解，得到的单元是“模块”，<br>从物理部署上来拆解，得到的单元是“组件”，<br>从开发规范上来拆解，得到的是“框架”。<br>","like_count":1,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":524410,"discussion_content":"很有创意，点赞：）","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1628038629,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":285724,"user_name":"蓝萧","can_delete":false,"product_type":"c1","uid":1227606,"ip_address":"","ucode":"DE125B56BF7818","user_header":"https://static001.geekbang.org/account/avatar/00/12/bb/56/a506a165.jpg","comment_is_top":false,"comment_ctime":1616990806,"is_pvip":false,"replies":[{"id":"103694","content":"如果你把登录独立成子系统了，那肯定可以的。<br><br>是否独立运行不一定是模块的划分标准，例如电商中台里面的“交易中心”也是一个“模块”，但这个模块的范围就大很多了。","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1617013863,"ip_address":"","comment_id":285724,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5911958102","product_id":100006601,"comment_content":"子系统与模块有何区别？模块是对系统进行逻辑拆分，比如登陆模块，那叫登陆子系统是不是也行。系统是一个可以运行的实体，那么是不是可以这么理解：可以独立运行的登陆部分可以称之为登陆子系统，而不能独立运行的登陆部分只能叫模块。","like_count":1,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":517765,"discussion_content":"如果你把登录独立成子系统了，那肯定可以的。\n\n是否独立运行不一定是模块的划分标准，例如电商中台里面的“交易中心”也是一个“模块”，但这个模块的范围就大很多了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1617013863,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":277979,"user_name":"一一一一一","can_delete":false,"product_type":"c1","uid":1691453,"ip_address":"","ucode":"4D962E70BDA645","user_header":"https://static001.geekbang.org/account/avatar/00/19/cf/3d/83520ac3.jpg","comment_is_top":false,"comment_ctime":1612689135,"is_pvip":false,"replies":[{"id":"100928","content":"你的问题在后续的内容会覆盖到。","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1612757278,"ip_address":"","comment_id":277979,"utype":1}],"discussion_count":1,"race_medal":1,"score":"5907656431","product_id":100006601,"comment_content":"一。&quot;架构&quot;到底是什么？<br>1.系统与子系统：<br>\t系统：系统泛指由一群有关联的个体组成，通过一定规则来完成单独个体无法完成的工作的群体。<br>  \t\t关键字：关联，规则，新的能力。<br>\t<br>\t子系统：子系统本质上也是由一群有关联个体组成的系统，多半为更大系统的一部分。<br>\t<br>\t子系统与系统本质没有任何区别，只是观察角度有差异，一个系统可能是更大系统的子系统。<br><br>\t系统是业务意义上的架构，当系统细化到一定粒度以后，会转化为模块和组件，模块和组件是技术意义上的架构。<br><br> 2. 模块与组件<br>\t模块：逻辑角度的拆分，职责分离，是系统的拆分。eg：信息管理模块<br>\t组件：物理角度的拆分，单元复用，是模块的实现手段。eg：mysql<br> 3. 架构与框架<br>\t架构：软件系统的顶层结构，架构核心是思想，是框架的理论基础。<br>\t\t（1）架构需要明确系统需要包含哪些&quot;个体&quot;（子系统，模块，组件等）。<br>\t\t（2）架构需要明确&quot;个体&quot;运作和协作的规则。<br>\t框架：架构的具体实现<br>\t<br><br>个人理解：<br>\t架构并不是一个空泛的概念。架构是围绕系统的核心思想产生的理论体系，需要定义系统的个体组成和协作方式，但并不关注具体的实现。当体系落地以后，形成的便是框架。<br>\t问题：<br>\t\t系统如何拆分子系统？<br>\t\t如何区分子系统和模块？<br>\t\t如何判断架构是否合理？<br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br>","like_count":1,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":515234,"discussion_content":"你的问题在后续的内容会覆盖到。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1612757278,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":257440,"user_name":"Geek_92f9aa","can_delete":false,"product_type":"c1","uid":2268981,"ip_address":"","ucode":"494ED580892F47","user_header":"","comment_is_top":false,"comment_ctime":1603972539,"is_pvip":false,"replies":[{"id":"94078","content":"我自己觉得写的不够优美������","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1604388696,"ip_address":"","comment_id":257440,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5898939835","product_id":100006601,"comment_content":"专家真是不一样，语言表达竟如此通顺。","like_count":1,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":508333,"discussion_content":"我自己觉得写的不够优美������","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1604388696,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":241220,"user_name":"Andy","can_delete":false,"product_type":"c1","uid":1447283,"ip_address":"","ucode":"708042A35424DC","user_header":"https://static001.geekbang.org/account/avatar/00/16/15/73/e5e4b245.jpg","comment_is_top":false,"comment_ctime":1597218186,"is_pvip":false,"replies":[{"id":"89616","content":"这个认识深刻多了������","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1597984030,"ip_address":"","comment_id":241220,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5892185482","product_id":100006601,"comment_content":"好东西需要反复学习的，再回头来回答一下问题吧<br>对于架构而言，我最初的理解就是将其与框架结合在了一起，也就是框架即架构，架构即框架，这应该最初的想法。毕竟最初，自己站的层次不够高，只能从技术的角度去理解架构，以为只要会搭建了MVC框架就是架构师了。实际上，我只是从物理的角度理解了架构。但是，架构，强调地是组织结构，是从业务逻辑、物理技术、组件规范等等不同维度去综合考虑的，这很像多元思维模型，也就是任何事物都不是只由一个维度决定。学习之后，我个人以为，架构和系统可以说，两者很像，只不过，系统，强调关联各个个体，让他们组合在一起形成化学反应，形成1+1&gt;2的强大作用，架构强调结构，如何将各个不同个人，在结构能够更好的融合，形成更大的助力。这就是我对于架构的重新认识。","like_count":1,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":503677,"discussion_content":"这个认识深刻多了������","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1597984030,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":220148,"user_name":"美国的华莱士","can_delete":false,"product_type":"c1","uid":1217699,"ip_address":"","ucode":"879C4FD53C72C5","user_header":"https://static001.geekbang.org/account/avatar/00/12/94/a3/c8bcb28b.jpg","comment_is_top":false,"comment_ctime":1590188648,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5885155944","product_id":100006601,"comment_content":"举个例子,如下:<br>A生产方---B销售方---C购买方(这三者是最基本的架构,因为它实现了一个完整的逻辑)<br>ABC都是一整个业务架构上的模块 每个模块又分为各个子模块 比如说生产需要工厂设备和员工等等,销售需要售后等等<br>服务于模块以及子模块的都可以叫做组件,它可能不是热业务但是必须要有,比如说售后中的退款组件,我可能很少用到,但是它服务于售后模块是必须要有的<br><br>而框架其实放在业务中也可以理解为架构,但是在开发中一般指支撑代码使用逻辑的准则,服务于开发,使开发快速契合业务的需求,而不至于乱套(因为它已经告诉你它的标准使用准则)<br>","like_count":1},{"had_liked":false,"id":52170,"user_name":"张金宇","can_delete":false,"product_type":"c1","uid":1355708,"ip_address":"","ucode":"069F51173A257D","user_header":"https://static001.geekbang.org/account/avatar/00/14/af/bc/dab0a9e8.jpg","comment_is_top":false,"comment_ctime":1545322955,"is_pvip":false,"replies":[{"id":"18969","content":"加油👍👍","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1545349736,"ip_address":"","comment_id":52170,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5840290251","product_id":100006601,"comment_content":"既买了书，又买了专栏，原因是内容质量确实高，需要在不同场景下反复看。我在今年年初正式如愿由程序员转向了架构师的路线，实为可喜，但是深知能力离心目中的架构师还有很大距离，需要不断提升。<br><br>由于是实战打出来的，明白脑子里的很多套路都是在术的层面，所以急需“悟道”，毕竟《天道》里有句话讲的好，“有道无术，术尚可求 ; 有术无道，止于术”。<br>","like_count":1,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":433768,"discussion_content":"加油👍👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1545349736,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":32594,"user_name":"小Z","can_delete":false,"product_type":"c1","uid":1262239,"ip_address":"","ucode":"7B5C0A31F49CEC","user_header":"https://static001.geekbang.org/account/avatar/00/13/42/9f/8fedb02d.jpg","comment_is_top":false,"comment_ctime":1539618338,"is_pvip":false,"replies":[{"id":"11897","content":"是的，但要注意“顶层”两个字，不要陷入细节","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1539651500,"ip_address":"","comment_id":32594,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5834585634","product_id":100006601,"comment_content":"架构是顶层架构 说的再通俗点 就是说这个东西是怎样组成的吗？","like_count":1,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":426829,"discussion_content":"是的，但要注意“顶层”两个字，不要陷入细节","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1539651500,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":19790,"user_name":"文竹","can_delete":false,"product_type":"c1","uid":1103167,"ip_address":"","ucode":"74413B1975976B","user_header":"https://static001.geekbang.org/account/avatar/00/10/d5/3f/80bf4841.jpg","comment_is_top":false,"comment_ctime":1534070087,"is_pvip":false,"replies":[{"id":"6913","content":"逻辑视图和物理视图用的比较多","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1534126313,"ip_address":"","comment_id":19790,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5829037383","product_id":100006601,"comment_content":"我原理理解的架构是这样的：基本上等同于物理视角的架构，比如一个学生管理系统包含前端，后端服务，redis,mysql。<br><br>从本文中学到了，可以从多个角度来看系统就会得出不同的架构即顶层系统结构，比如4+1架构图。<br><br><br>那么有一个问题，一般在架构设计过程中，我们需要使用哪些视角的架构呢？","like_count":1,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":421985,"discussion_content":"逻辑视图和物理视图用的比较多","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1534126313,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":10367,"user_name":"千年孤独","can_delete":false,"product_type":"c1","uid":1037215,"ip_address":"","ucode":"282CA1A68E8774","user_header":"https://static001.geekbang.org/account/avatar/00/0f/d3/9f/36ea3be4.jpg","comment_is_top":false,"comment_ctime":1527508516,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5822475812","product_id":100006601,"comment_content":"顶层结构=金字塔结构。纵横有序，方可牢固。","like_count":1},{"had_liked":false,"id":8167,"user_name":"田震宁","can_delete":false,"product_type":"c1","uid":1119913,"ip_address":"","ucode":"E2AB816BEA7599","user_header":"https://static001.geekbang.org/account/avatar/00/11/16/a9/6a1e26b9.jpg","comment_is_top":false,"comment_ctime":1525937074,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5820904370","product_id":100006601,"comment_content":"An architecture is the the abstract design concept of an application. Basically, a structure of the moving parts and how they&#39;re connected.<br>A framework is a pre-built general or special purpose architecture that&#39;s designed to be extended.<br>If an architecture is the design of a structure, a framework is the architecture of a foundation. Frameworks are specifically designed to be built on or extended.","like_count":1},{"had_liked":false,"id":6703,"user_name":"Cc.王小鱼","can_delete":false,"product_type":"c1","uid":1106486,"ip_address":"","ucode":"6F924599D85EF2","user_header":"https://static001.geekbang.org/account/avatar/00/10/e2/36/b0002a07.jpg","comment_is_top":false,"comment_ctime":1524906565,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5819873861","product_id":100006601,"comment_content":"&#47;&#47;架构是对某一类系统的抽象定义，就好比一辆汽车的设计图;<br>&#47;&#47;框架是一组可重用，易扩展，经过良好的测试的软件组件。就如同组装汽车的流水线，我们不用理会汽车轮胎的生产过程，发动机的生产过程，xxx生产过程，只需要把各个生产出来的组件交给组装汽车的流水线（框架），那么就可以把汽车生产出来，说白了框架就是一个经过良好测试的生产机器;","like_count":1},{"had_liked":false,"id":6699,"user_name":"🔰夏天的味道","can_delete":false,"product_type":"c1","uid":1069105,"ip_address":"","ucode":"3CA1DE1ADC95F0","user_header":"https://static001.geekbang.org/account/avatar/00/10/50/31/98e2c8e9.jpg","comment_is_top":false,"comment_ctime":1524905468,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5819872764","product_id":100006601,"comment_content":"我理解系统是业务所关心的，需要做出什么东西。架构是工程师所关心的，如何将这个系统落地。","like_count":1},{"had_liked":false,"id":6684,"user_name":"云辉","can_delete":false,"product_type":"c1","uid":1103058,"ip_address":"","ucode":"0E67E8E8421294","user_header":"https://static001.geekbang.org/account/avatar/00/10/d4/d2/96dbfa5a.jpg","comment_is_top":false,"comment_ctime":1524894257,"is_pvip":false,"replies":[{"id":"1910","content":"我能看懂你说的，但这句话太抽象，一般我不会跟别人这样介绍和解释，因为“纬度”指什么，“抽象”指什么，“定义”指什么，很难一目了然的看懂😂","user_name":"作者回复","user_name_real":"华仔@阿里游戏","uid":"1098920","ctime":1524906275,"ip_address":"","comment_id":6684,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5819861553","product_id":100006601,"comment_content":"架构就是对系统进行各个纬度的抽象定义，也就是老师说的顶层结构吧","like_count":1,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":417121,"discussion_content":"我能看懂你说的，但这句话太抽象，一般我不会跟别人这样介绍和解释，因为“纬度”指什么，“抽象”指什么，“定义”指什么，很难一目了然的看懂😂","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1524906275,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":6663,"user_name":"HZX","can_delete":false,"product_type":"c1","uid":1057281,"ip_address":"","ucode":"87A320D62DBA0E","user_header":"https://static001.geekbang.org/account/avatar/00/10/22/01/f109a5bf.jpg","comment_is_top":false,"comment_ctime":1524885630,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5819852926","product_id":100006601,"comment_content":"框架是构建目标系统的基础设施。为目标系统的构建提供约束与支撑。约束规避风险，支撑节约成本。<br><br>架构是部分组成整体的协作机制。","like_count":1},{"had_liked":false,"id":6651,"user_name":"白马","can_delete":false,"product_type":"c1","uid":1103540,"ip_address":"","ucode":"FD4DA715AC5984","user_header":"https://static001.geekbang.org/account/avatar/00/10/d6/b4/0808999d.jpg","comment_is_top":false,"comment_ctime":1524881219,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5819848515","product_id":100006601,"comment_content":"我原来认为系统架构是指软件系统的结构，结构应该包含两部分内容，一是组成部分，第二是各个部分之间的关系。我觉得我所理解的组成部分就是这节课程中所说的系统，子系统，模块，组件，而至于各个部分之间的关系究竟有哪些我还不是很清楚。","like_count":1},{"had_liked":false,"id":6634,"user_name":"罗烽","can_delete":false,"product_type":"c1","uid":1104625,"ip_address":"","ucode":"B55A6A441A3863","user_header":"https://static001.geekbang.org/account/avatar/00/10/da/f1/738bcb98.jpg","comment_is_top":false,"comment_ctime":1524878239,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5819845535","product_id":100006601,"comment_content":"之前理解的架构：<br>很模糊，总觉得是所有功能模块化，都是从业务角度上去说的，然后在想实现这些模块，需要什么语言，什么数据库，没有仔细理解过什么是架构（还比较年轻，没经历过这些设计吧😂）<br>今天的理解：<br>架构，系统顶层结构。模块化，是从业务角度来划分系统，而组件，则是可复用的单元（应该是类似中间件）。而我们要处理的就是一个新的业务，从模块上划分，它的结构是什么样的，哪个模块可以复用什么组件。","like_count":1},{"had_liked":false,"id":6630,"user_name":"Even","can_delete":false,"product_type":"c1","uid":1022409,"ip_address":"","ucode":"E3B1F9916D2D1B","user_header":"https://static001.geekbang.org/account/avatar/00/0f/99/c9/5dc9fa46.jpg","comment_is_top":false,"comment_ctime":1524878002,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5819845298","product_id":100006601,"comment_content":"以前对架构的概念比较模糊，只知道物理架构图和逻辑架构图，关于架构这个词很好人都没有讲清楚，今天听了运华的分析，对架构这个概念有了更清晰的理解。","like_count":1},{"had_liked":false,"id":6623,"user_name":"cruise","can_delete":false,"product_type":"c1","uid":1103817,"ip_address":"","ucode":"AD59E09E8B8D88","user_header":"https://static001.geekbang.org/account/avatar/00/10/d7/c9/3788deeb.jpg","comment_is_top":false,"comment_ctime":1524877672,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5819844968","product_id":100006601,"comment_content":"一直对这些概念都不是很清晰，跟客户沟通时，有时候也把客户弄的晕头转向，呵呵，倒是让他们感觉很高深的样子。李老师讲完后，的确清晰了不少，但仍需要多看几遍。另外在工作中也要有意识的正确运用这些概念和词语。<br>谢谢李老师，👍","like_count":1},{"had_liked":false,"id":6620,"user_name":"叮咚叮咚","can_delete":false,"product_type":"c1","uid":1081083,"ip_address":"","ucode":"1F950965A4421C","user_header":"https://static001.geekbang.org/account/avatar/00/10/7e/fb/f6152110.jpg","comment_is_top":false,"comment_ctime":1524877365,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5819844661","product_id":100006601,"comment_content":"个人简单理解 不知道对不<br>逻辑架构：关注业务模块以及模块间的关键和其他系统间的交互<br>物理架构：系统的物理网络部署拓扑 关注系统的物理组件 例如 负载均衡 存储 消息通讯<br>开发架构: 关注系统开发使用框架","like_count":1},{"had_liked":false,"id":6618,"user_name":"Yulean","can_delete":false,"product_type":"c1","uid":1107791,"ip_address":"","ucode":"CFE14FDA0AF19E","user_header":"https://static001.geekbang.org/account/avatar/00/10/e7/4f/6a975e47.jpg","comment_is_top":false,"comment_ctime":1524877217,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5819844513","product_id":100006601,"comment_content":"我理解的架构有两个层次，：<br>1）是文章中提到的物理部署架构，从用户端—ngix—web 站点—ngix—wcf—db整个流程模块所涉及到的架构设计；<br>2）是系统内部模块与其他系统交互的架构，有点类似文章中的业务架构和系统使用框架两块结合在一起产生的东西。<br>问题是，在脑海中描绘当前所负责系统的架构时，经常不知道以什么为边界，或者说以什么做最小颗粒度？","like_count":1},{"had_liked":false,"id":6610,"user_name":"何磊","can_delete":false,"product_type":"c1","uid":1047604,"ip_address":"","ucode":"78934C3ED4A342","user_header":"https://static001.geekbang.org/account/avatar/00/0f/fc/34/c733b116.jpg","comment_is_top":false,"comment_ctime":1524876420,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5819843716","product_id":100006601,"comment_content":"我以前的理解更多是站在物理角度划分，比如一个电商系统:<br>1.webserver怎么配置，如何去做负载，如何防刷；<br>2.持久划采用什么技术，怎么做主从，如何数据保证一致性；<br>3.缓存结构如何设计，如何部署；<br>4.通过代码利用以前的物理资源完成业务逻辑，把他们整个起来。<br>以上就是我以前理解的架构，<br>通过阅读本文，我觉得架构其实可以用多个角度来看待，它的包含可以根据角度不同而不同。<br>而还有个比较懵的疑问:感觉架构既可以包含系统，而每个系统又有自己的架构。二者也许不仅仅是包含与不包含那么简单。再去读一遍理解下。","like_count":1},{"had_liked":false,"id":6588,"user_name":"邓呵呵","can_delete":false,"product_type":"c1","uid":1104040,"ip_address":"","ucode":"ACE06D60E04642","user_header":"https://static001.geekbang.org/account/avatar/00/10/d8/a8/ac0bd149.jpg","comment_is_top":false,"comment_ctime":1524873891,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5819841187","product_id":100006601,"comment_content":"我理解的架构就是对一个新系统或者功能需求给出一个新的或者基于当前环境最优方案，方案包括使用哪些中间件和框架，以及环境中可能出现的极端复杂情况及解决方案，我的视角可能比较偏开发一些","like_count":1},{"had_liked":false,"id":6587,"user_name":"winston","can_delete":false,"product_type":"c1","uid":1099717,"ip_address":"","ucode":"4CCDCEEA9F5B7B","user_header":"https://static001.geekbang.org/account/avatar/00/10/c7/c5/f7ed670c.jpg","comment_is_top":false,"comment_ctime":1524873639,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5819840935","product_id":100006601,"comment_content":"之前理解的架构，是为了支撑业务发展，采取的技术集合。","like_count":1},{"had_liked":false,"id":357881,"user_name":"一步两步","can_delete":false,"product_type":"c1","uid":2151836,"ip_address":"广东","ucode":"B59D1F5293B5C2","user_header":"https://static001.geekbang.org/account/avatar/00/20/d5/9c/842eda55.jpg","comment_is_top":false,"comment_ctime":1663728439,"is_pvip":false,"replies":[{"id":"130312","content":"一点就通，赞 ：）","user_name":"作者回复","user_name_real":"编辑","uid":"1098920","ctime":1663899828,"ip_address":"广东","comment_id":357881,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1663728439","product_id":100006601,"comment_content":"重新定义架构：4R 架构，写得好啊，终于理解项目中架构图和序列图这个设计的思想了，解决了我的困惑。以前工作的时候总要求这样画图，也模仿着画，好像也懂了但又没全懂，就是不清楚为什么这样做。","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":588610,"discussion_content":"一点就通，赞 ：）","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1663899828,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"广东"},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":357739,"user_name":"暮光谷","can_delete":false,"product_type":"c1","uid":1506587,"ip_address":"广东","ucode":"5A8BF90CCA46ED","user_header":"https://static001.geekbang.org/account/avatar/00/16/fd/1b/65c26382.jpg","comment_is_top":false,"comment_ctime":1663590684,"is_pvip":true,"replies":[{"id":"130315","content":"分层其实不是完整的架构，因为同层之间的角色关系都没有展现出来，上下层的关系也不是N对N的","user_name":"作者回复","user_name_real":"编辑","uid":"1098920","ctime":1663900252,"ip_address":"广东","comment_id":357739,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1663590684","product_id":100006601,"comment_content":"原来以为架构是按照目录划分的组织方式，包括存储层，服务层，业务层。不同层次可以上级调用下级。<br><br>后来搞前端，发现一个重要区别是不同组件的消息传递要比一般后端复杂得多，消息传递可能在兄弟组件之间，在父子组件，在祖先后代组件传递。为了方便规范传递方式，业内尝试过统一管理state方式，制定统一的消息传递步骤的方式。在父组件定义子孙组件可以直接访问的对象的方式。通过usehook来根据某个细分领域在分享state的方式。而在后端，不同角色的联系方式主要是直接调用。<br><br>看完第一节课之后，有很多共鸣，在做一件事情的时候，要知道这件事是什么，能做什么，不能做什么。可以有几种角度去观察它。我知道了4R这四种观察架构的角度。架构是处理不同角色的划分和组织方式的方法。架构分层，每层有角色，角色之间有组织方式和联系方式。","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":588613,"discussion_content":"分层其实不是完整的架构，因为同层之间的角色关系都没有展现出来，上下层的关系也不是N对N的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1663900252,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"广东"},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":356587,"user_name":"公号-生活点亮技术","can_delete":false,"product_type":"c1","uid":1009329,"ip_address":"日本","ucode":"F807829A146624","user_header":"https://static001.geekbang.org/account/avatar/00/0f/66/b1/791d0f5e.jpg","comment_is_top":false,"comment_ctime":1662442832,"is_pvip":true,"replies":[{"id":"129853","content":"业务分析太简单了，仅仅得出“高可用、高性能”这么笼统的要求，实际上高性能到底要多高？TPS 1K，10K，100K ？ 业务上为什么要弹性？业务高峰和平均值到底差多少？核酸什么时候会高峰？你要设计一个全国统一的核酸系统，还是某个城市用到的核酸系统？是一二线线城市2000万人这种，还是几百万人的城市？ 总体来说就是：复杂度分析这部分太粗浅了","user_name":"作者回复","user_name_real":"作者","uid":"1098920","ctime":1662609965,"ip_address":"日本","comment_id":356587,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1662442832","product_id":100006601,"comment_content":"学习课程后，按理解也拆解了一翻，有时间帮助指正指正<br><br>https:&#47;&#47;mp.weixin.qq.com&#47;s&#47;gkmGIXWrlqZhlMbPDUqD7Q","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":586923,"discussion_content":"业务分析太简单了，仅仅得出“高可用、高性能”这么笼统的要求，实际上高性能到底要多高？TPS 1K，10K，100K ？ 业务上为什么要弹性？业务高峰和平均值到底差多少？核酸什么时候会高峰？你要设计一个全国统一的核酸系统，还是某个城市用到的核酸系统？是一二线线城市2000万人这种，还是几百万人的城市？ 总体来说就是：复杂度分析这部分太粗浅了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1662609965,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"日本"},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1009329,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/66/b1/791d0f5e.jpg","nickname":"公号-生活点亮技术","note":"","ucode":"F807829A146624","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":586927,"discussion_content":"qps这些，按目前的设计，只需要加redis配置，加polardb配置就可以。\n再补上压测+相关中间件的规格就可以了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1662611154,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"北京"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":356416,"user_name":"咖啡不加糖","can_delete":false,"product_type":"c1","uid":2400955,"ip_address":"广东","ucode":"4D6F1F80382C63","user_header":"https://static001.geekbang.org/account/avatar/00/24/a2/bb/cf822570.jpg","comment_is_top":false,"comment_ctime":1662284977,"is_pvip":false,"replies":[{"id":"129796","content":"对的，架构是分层的","user_name":"作者回复","user_name_real":"编辑","uid":"1098920","ctime":1662427650,"ip_address":"广东","comment_id":356416,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1662284977","product_id":100006601,"comment_content":"我原本对架构的理解只是局限于项目需要分成三层Controller、Service及Dao，当然也杂糅了一个大系统中各种子系统一起组成一个大系统这种理解。<br>今天这篇文章有打开我的新世界，文章提到每个系统都有架构，大系统下有大的架构，小系统里面也有小的架构，例如三层架构其实可以理解为一个具体服务里面的架构，这并不是错的，而是架构在不同范围内的具体实现。","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":586664,"discussion_content":"对的，架构是分层的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1662427651,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"广东"},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":354301,"user_name":"李晨","can_delete":false,"product_type":"c1","uid":2716735,"ip_address":"广东","ucode":"D734DE3B9A5A2D","user_header":"https://static001.geekbang.org/account/avatar/00/29/74/3f/5c9fd08f.jpg","comment_is_top":false,"comment_ctime":1660270416,"is_pvip":true,"replies":[{"id":"129484","content":"你这个理解已经非常接近了，很少有人能达到这种理解程度","user_name":"作者回复","user_name_real":"编辑","uid":"1098920","ctime":1661762995,"ip_address":"广东","comment_id":354301,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1660270416","product_id":100006601,"comment_content":"我原来理解的架构：<br>1、层级关系<br>2、模块划分（或者说是子系统划分）<br>3、模块之间的关系（或者说子系统之间的关系）<br><br>缺少了RULE这个维度。","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":585679,"discussion_content":"你这个理解已经非常接近了，很少有人能达到这种理解程度","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1661762995,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"广东"},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":354171,"user_name":"Geek_4a6e69","can_delete":false,"product_type":"c1","uid":2882400,"ip_address":"广东","ucode":"EE003DDF8BC99D","user_header":"","comment_is_top":false,"comment_ctime":1660140895,"is_pvip":true,"replies":[{"id":"128834","content":"系统架构是指系统逻辑上分成那些组成部分<br>业务架构是指系统提供哪些业务<br>应用架构师指系统包含哪些应用","user_name":"作者回复","user_name_real":"编辑","uid":"1098920","ctime":1660208302,"ip_address":"广东","comment_id":354171,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1660140895","product_id":100006601,"comment_content":"老师，请问下你这里的系统架构 和 业务架构和应用架构的区别是， 他更像业务架构还是应用架构？","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":583572,"discussion_content":"系统架构是指系统逻辑上分成那些组成部分\n业务架构是指系统提供哪些业务\n应用架构师指系统包含哪些应用","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1660208302,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"广东"},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":354033,"user_name":"龙程飞","can_delete":false,"product_type":"c1","uid":3066648,"ip_address":"广东","ucode":"B3D995C442ACBC","user_header":"https://static001.geekbang.org/account/avatar/00/2e/cb/18/37da064b.jpg","comment_is_top":false,"comment_ctime":1660033646,"is_pvip":false,"replies":[{"id":"128828","content":"很形象","user_name":"作者回复","user_name_real":"编辑","uid":"1098920","ctime":1660208075,"ip_address":"广东","comment_id":354033,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1660033646","product_id":100006601,"comment_content":"架构是摩天大楼的设计图纸，框架是钢筋混凝土结构......；<br>架构是应县木塔的设计图纸，框架是实木斗拱榫卯结构......；<br>","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":583566,"discussion_content":"很形象","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1660208075,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"广东"},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":353212,"user_name":"等风来🎧","can_delete":false,"product_type":"c1","uid":1804087,"ip_address":"广东","ucode":"B6BB8714A0B019","user_header":"https://static001.geekbang.org/account/avatar/00/1b/87/37/b071398c.jpg","comment_is_top":false,"comment_ctime":1659268418,"is_pvip":false,"replies":[{"id":"128453","content":"从业务逻辑的角度来拆分系统后，得到的单元就是“模块”；从物理部署的角度来拆分系统后，得到的单元就是“组件”。划分模块的主要目的是职责分离；划分组件的主要目的是单元复用。其实，“组件”的英文 Component 也可翻译成中文的“零件”一词。“零件”更容易理解一些，它是一个物理的概念，并且具备“独立且可替换”的特点。","user_name":"作者回复","user_name_real":"编辑","uid":"1098920","ctime":1659361642,"ip_address":"广东","comment_id":353212,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1659268418","product_id":100006601,"comment_content":"老师，对于模块和组件这两个概念。英文分别对应module和component 。<br>我在《Fundamentals of Software Architecture》这本书上，看到的解释是，component是module的物理打包模式。在《架构整洁之道》这本书上，module 和component这两个单词也是混着用，没有具体说明，差异。   <br>英文维基上说，组件层次更高，是整个系统的一部分，模块是单个程序的一部分。所以是理解的角度不同吗。还有模块化是构建模块的方式还是组建的方式呢？","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":582311,"discussion_content":"从业务逻辑的角度来拆分系统后，得到的单元就是“模块”；从物理部署的角度来拆分系统后，得到的单元就是“组件”。划分模块的主要目的是职责分离；划分组件的主要目的是单元复用。其实，“组件”的英文 Component 也可翻译成中文的“零件”一词。“零件”更容易理解一些，它是一个物理的概念，并且具备“独立且可替换”的特点。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1659361642,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"广东"},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":352498,"user_name":"杨恒","can_delete":false,"product_type":"c1","uid":3066545,"ip_address":"","ucode":"057CCB97B56740","user_header":"https://static001.geekbang.org/account/avatar/00/2e/ca/b1/044d3e98.jpg","comment_is_top":false,"comment_ctime":1658731519,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1658731519","product_id":100006601,"comment_content":"框架是Class, 架构是 Instance。当然这个 是很理想的情况，大多数情况下还得extends 一下。","like_count":0},{"had_liked":false,"id":352241,"user_name":"张森森 Samuel","can_delete":false,"product_type":"c1","uid":2393825,"ip_address":"","ucode":"51441BF55DFE7B","user_header":"https://static001.geekbang.org/account/avatar/00/24/86/e1/4d1ce218.jpg","comment_is_top":false,"comment_ctime":1658475123,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1658475123","product_id":100006601,"comment_content":"⚙ 重点笔记<br><br>一、三组混淆概念：<br><br>1、系统是相互协同可运行的实体。子系统的定义和系统定义是一样的，只是观察的角度有差异，一个系统可能是另外一个更大系统的子系统。<br><br>2、模块是从业务的职责角度进行划分；组件（ Component ）是从技术维度上的复用。<br><br>3、架构（Architecture）**关注的是“结构”，**一个系统的架构，只包括**顶层**这一个层级的架构，而不包括下属子系统层级的架构。**框架（**Framework**）关注的是“规范”，**一般是面向编程或配置的半成品。框架是一整套开发规范，架构是某一套开发规范下的具体落地方案，包括各个模块之间的**组合关系**以及它们协同起来完成功能的**运作规则**。<br><br>二、4R<br><br>1、**Rank。**它是指软件架构是分层的，对应“系统”和“子系统”的分层关系。（系统架构图）<br><br>2、**Role。**它是指软件系统包含哪些角色，每个角色都会负责系统的一部分功能。微服务就是角色的拆分。（系统架构图）<br><br>3、Relation。它是指软件系统的角色之间的关系，对应到架构图中其实就是连接线。（系统架构图）<br><br>4、Rule。它是指软件系统角色之间如何协作来完成系统功能。（系统序列图（System Sequence Diagram））<br>","like_count":0},{"had_liked":false,"id":352038,"user_name":"Geek_ea57a9","can_delete":false,"product_type":"c1","uid":3027207,"ip_address":"","ucode":"47E22D0FB87E04","user_header":"","comment_is_top":false,"comment_ctime":1658362527,"is_pvip":false,"replies":[{"id":"128084","content":"应用就是指你发布的能够运行的程序，应用架构就是你有多少个这个样的应用，相互之间关系如何","user_name":"作者回复","user_name_real":"编辑","uid":"1098920","ctime":1658394840,"ip_address":"","comment_id":352038,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1658362527","product_id":100006601,"comment_content":"应用架构怎么理解，是不是对应我们的业务架构。","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":580886,"discussion_content":"应用就是指你发布的能够运行的程序，应用架构就是你有多少个这个样的应用，相互之间关系如何","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1658394840,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":350159,"user_name":"Chloe","can_delete":false,"product_type":"c1","uid":2461116,"ip_address":"","ucode":"221F5E44EBDD57","user_header":"https://static001.geekbang.org/account/avatar/00/25/8d/bc/a2d2340a.jpg","comment_is_top":false,"comment_ctime":1656625415,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1656625415","product_id":100006601,"comment_content":"System-SubSystem<br>Architecture-Framework<br>Module(Service)-Component(Physical)<br>4R: Rank Role(Module) Relation(System Architecture Diagram) Rule(System Sequence Diagram)","like_count":0},{"had_liked":false,"id":348784,"user_name":"Geek_41eb27","can_delete":false,"product_type":"c1","uid":3029167,"ip_address":"","ucode":"B17A04A7783583","user_header":"","comment_is_top":false,"comment_ctime":1655389936,"is_pvip":false,"replies":[{"id":"127010","content":"不是中台，但中台也有架构","user_name":"作者回复","user_name_real":"编辑","uid":"1098920","ctime":1655454769,"ip_address":"","comment_id":348784,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1655389936","product_id":100006601,"comment_content":"感觉又有点像业务中台，将共同功能单独到独立模块","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":576350,"discussion_content":"不是中台，但中台也有架构","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1655454770,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":348783,"user_name":"Geek_41eb27","can_delete":false,"product_type":"c1","uid":3029167,"ip_address":"","ucode":"B17A04A7783583","user_header":"","comment_is_top":false,"comment_ctime":1655389856,"is_pvip":false,"replies":[{"id":"127009","content":"你可以理解为将你的微服务包装成一个一个的Operator放到Flink上去运行和调度，不过那个是一个设想，目前没有应用架构这么做的。","user_name":"作者回复","user_name_real":"编辑","uid":"1098920","ctime":1655454750,"ip_address":"","comment_id":348783,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1655389856","product_id":100006601,"comment_content":"老师你好，我在知乎上看到你说的slink架构，非常感兴趣，可是还没有很理解，感觉像一个任务调度系统，怎么形成完整的功能呢？","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":576349,"discussion_content":"你可以理解为将你的微服务包装成一个一个的Operator放到Flink上去运行和调度，不过那个是一个设想，目前没有应用架构这么做的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1655454751,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":347731,"user_name":"Geek_8d898d","can_delete":false,"product_type":"c1","uid":3019834,"ip_address":"","ucode":"02230FE897C017","user_header":"","comment_is_top":false,"comment_ctime":1654355761,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1654355761","product_id":100006601,"comment_content":"good","like_count":0},{"had_liked":false,"id":347728,"user_name":"Geek_8d898d","can_delete":false,"product_type":"c1","uid":3019834,"ip_address":"","ucode":"02230FE897C017","user_header":"","comment_is_top":false,"comment_ctime":1654355352,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1654355352","product_id":100006601,"comment_content":"Good","like_count":0},{"had_liked":false,"id":347070,"user_name":"A君","can_delete":false,"product_type":"c1","uid":1940105,"ip_address":"","ucode":"FE96F089C2312C","user_header":"https://static001.geekbang.org/account/avatar/00/1d/9a/89/babe8b52.jpg","comment_is_top":false,"comment_ctime":1653665070,"is_pvip":true,"replies":[{"id":"126653","content":"基本接近文中讲的意思了","user_name":"作者回复","user_name_real":"编辑","uid":"1098920","ctime":1653980332,"ip_address":"","comment_id":347070,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1653665070","product_id":100006601,"comment_content":"软件是分层的，架构是就应该只关注目标的顶层模块是做什么的，它们之间传递什么格式的数据。这些可以用软件架构图来表示。另外，还需要知道图中各组件以哪种规则运转起来，这可以通过时序图来展现。","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":574331,"discussion_content":"基本接近文中讲的意思了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1653980332,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":346627,"user_name":"Geek_39beed","can_delete":false,"product_type":"c1","uid":2759335,"ip_address":"","ucode":"49C0DD14948FB4","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q3auHgzwzM51gBRKaobibKVvRRv2j7ntFEa1WeAHJFm6HxcaNB4JLlbEjlmNJAIDKNErEfCuV5haD85zwXGJ5AA/132","comment_is_top":false,"comment_ctime":1653298382,"is_pvip":false,"replies":[{"id":"126494","content":"对的","user_name":"作者回复","user_name_real":"编辑","uid":"1098920","ctime":1653616478,"ip_address":"","comment_id":346627,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1653298382","product_id":100006601,"comment_content":"架构是一种顶层设计，从业务场景来拆分系统，得到模块，从物理部署来拆分得到组件。","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":573704,"discussion_content":"对的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1653616478,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":346481,"user_name":"Geek_652490","can_delete":false,"product_type":"c1","uid":1817165,"ip_address":"","ucode":"0612EE1FD02AF1","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/0qP9dQyibmPu1JUAan9bXEXZBAaOetRStstIcQDXZUFdU9jHb5W3RlNfCBI0kVkZzZTf6NbXwSY4IQqOsVSNQibw/132","comment_is_top":false,"comment_ctime":1653191602,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1653191602","product_id":100006601,"comment_content":"你原来理解的架构是如何定义的？对比我今天讲的架构定义，你觉得差异在哪里？<br>- 以前更多认为架构是技术选型。差异在于技术角度看待架构只是架构的一个小层面。","like_count":0},{"had_liked":false,"id":344348,"user_name":"GaGi","can_delete":false,"product_type":"c1","uid":1099053,"ip_address":"","ucode":"CC8D22E1DD8CA2","user_header":"https://static001.geekbang.org/account/avatar/00/10/c5/2d/1eebfc3c.jpg","comment_is_top":false,"comment_ctime":1651484675,"is_pvip":false,"replies":[{"id":"125853","content":"支付业务是我做过的最复杂的业务了","user_name":"作者回复","user_name_real":"编辑","uid":"1098920","ctime":1651822568,"ip_address":"","comment_id":344348,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1651484675","product_id":100006601,"comment_content":"再次看回第一篇，今年我也转岗去到一个与支付相关的部门（也是一个从0开始的项目），也认同作者说的“支付”技术的复杂性","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":570574,"discussion_content":"支付业务是我做过的最复杂的业务了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1651822569,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":342978,"user_name":"吕凯 🌴","can_delete":false,"product_type":"c1","uid":1038841,"ip_address":"","ucode":"46A355ED5E67F0","user_header":"https://static001.geekbang.org/account/avatar/00/0f/d9/f9/f5d0dbc8.jpg","comment_is_top":false,"comment_ctime":1650558934,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1650558934","product_id":100006601,"comment_content":"架构是为了解决软件系统的复杂性，让内部个模块之间可以相互协作，共同完成软件系统的功能","like_count":0},{"had_liked":false,"id":342652,"user_name":"Leefox","can_delete":false,"product_type":"c1","uid":1206261,"ip_address":"","ucode":"5C434B0F7A2743","user_header":"https://static001.geekbang.org/account/avatar/00/12/67/f5/fe8cbe05.jpg","comment_is_top":false,"comment_ctime":1650382589,"is_pvip":false,"replies":[{"id":"125200","content":"框 和 构 这个解读厉害了","user_name":"作者回复","user_name_real":"编辑","uid":"1098920","ctime":1650421491,"ip_address":"","comment_id":342652,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1650382589","product_id":100006601,"comment_content":"框架和架构，区别在两个字：框和构，一个是确定可实施的范围，另一个是确定实施的具体结构。具体结构又有很多种实现形式，可能是多个业务模块，可能是一个系统等；而框架则规范管理这些实施的规章制度。","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":565254,"discussion_content":"框 和 构 这个解读厉害了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1650421491,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":340771,"user_name":"Breeze","can_delete":false,"product_type":"c1","uid":2962899,"ip_address":"","ucode":"8B6711F5B9D112","user_header":"https://static001.geekbang.org/account/avatar/00/2d/35/d3/8de43dd5.jpg","comment_is_top":false,"comment_ctime":1649128914,"is_pvip":true,"replies":[{"id":"124608","content":"正解","user_name":"作者回复","user_name_real":"编辑","uid":"1098920","ctime":1649206180,"ip_address":"","comment_id":340771,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1649128914","product_id":100006601,"comment_content":"架构是根据具体的业务场景而设计的，解决需求问题；框架是开发规范和组件的集合，为了提升开发效率、质量、和性能。","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":560118,"discussion_content":"正解","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1649206180,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":339879,"user_name":"wont","can_delete":false,"product_type":"c1","uid":2956657,"ip_address":"","ucode":"F9CBCC8410084B","user_header":"https://static001.geekbang.org/account/avatar/00/2d/1d/71/86c54fb7.jpg","comment_is_top":false,"comment_ctime":1648449666,"is_pvip":true,"replies":[{"id":"124536","content":"差不多，框架本质上就是成熟的工具","user_name":"作者回复","user_name_real":"编辑","uid":"1098920","ctime":1648893575,"ip_address":"","comment_id":339879,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1648449666","product_id":100006601,"comment_content":"我理解的架构就是一套解决方案，用于解决实际的业务问题；框架就当它是个工具而已。","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":559721,"discussion_content":"差不多，框架本质上就是成熟的工具","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1648893575,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":339732,"user_name":"William Ning","can_delete":false,"product_type":"c1","uid":1592279,"ip_address":"","ucode":"4DB8D05E69E5F3","user_header":"https://static001.geekbang.org/account/avatar/00/18/4b/d7/f46c6dfd.jpg","comment_is_top":false,"comment_ctime":1648347397,"is_pvip":true,"replies":[{"id":"124197","content":"学习本身也是渐进的，学到后面，你又会有新的理解 ：）","user_name":"作者回复","user_name_real":"编辑","uid":"1098920","ctime":1648430396,"ip_address":"","comment_id":339732,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1648347397","product_id":100006601,"comment_content":"思考题：<br>以前：<br>原来理解的系统架构是杂乱无章的，首先是从顶层开始，全局下是一个总系统架构<br>当然也会将总系统架构，拆分为多个子系统架构，本身系统这个词，就带有范畴，是一个相对词，<br>作为理科生，学习过生物学，应知道，系统&#47;生态的都是相对而言，有大小范围。<br><br>也理解系统有组成部分的，有时叫模块，也是子系统，有组件，通常是对第三方开源项目组件，如【关系型数据库】MySQL，【web server】Nginx，【NoSQL】Redis，【搜索引擎】ES，【消息队列】Kafka等，或者自己研发的组件。<br><br>然后就是他们之间的提供的服务接口，相互调用关系，这里面包含了根据不同业务场景下的业务逻辑规则。<br><br>最后就是组装成总系统架构的服务能力，当然这其中还涉及高可用，高可靠，服务监控等措施，<br>设计到一些技术名词，如单体，集群，分布式，容器化， devops等。<br>反正是挺杂的，或者说，认为只要能达到目的，提供需要的服务能力，就是实现了架构，不同的公司，架构基本是不同，这里面涉及到个体性，也同样代表了多样性，<br>至于实现的架构，是否满足高并发，高可用，高可靠，易扩展，易维护等优点，则是架构演进的下一个目标，当然我认为技术能力强的架构师，是可以在架构之初，就能实现某些指标的。 <br>这些都是自己接触，然后结合自己的认知，得出的直观感受。<br><br>现在：<br>根据老师的讲解，与划分，系统性地学习，会更加清楚，同时也能进一步确认自己理解偏差有多大，<br>不过，感觉偏差也不是很大，当然现在依然不是很清楚，至少要我说，我有点说得不是很清楚，还是继续学习，这是一个过程，需要反复学习反馈思考纠正的过程。 任何知识的学习应该都是这样，没有一下都能学习完整，并且无误的知识&#47;技能，因为世界很大，世界在变。<br><br>说的有点乱，随性发表，谢谢～～ ","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":558645,"discussion_content":"学习本身也是渐进的，学到后面，你又会有新的理解 ：）","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1648430397,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":1,"child_discussions":[{"author":{"id":1592279,"avatar":"https://static001.geekbang.org/account/avatar/00/18/4b/d7/f46c6dfd.jpg","nickname":"William Ning","note":"","ucode":"4DB8D05E69E5F3","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":558711,"discussion_content":"嗯嗯～","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1648436804,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":558645,"ip_address":""},"score":558711,"extra":""}]}]},{"had_liked":false,"id":339487,"user_name":"William Ning","can_delete":false,"product_type":"c1","uid":1592279,"ip_address":"","ucode":"4DB8D05E69E5F3","user_header":"https://static001.geekbang.org/account/avatar/00/18/4b/d7/f46c6dfd.jpg","comment_is_top":false,"comment_ctime":1648127919,"is_pvip":true,"replies":[{"id":"124191","content":"每个人都是自己人生的设计师 ：）","user_name":"作者回复","user_name_real":"编辑","uid":"1098920","ctime":1648430064,"ip_address":"","comment_id":339487,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1648127919","product_id":100006601,"comment_content":"我想说学习框架的人，挺多的。另外其实，每个人都是架构师，想想你每天的生活就知道了～","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":558639,"discussion_content":"每个人都是自己人生的设计师 ：）","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1648430064,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1592279,"avatar":"https://static001.geekbang.org/account/avatar/00/18/4b/d7/f46c6dfd.jpg","nickname":"William Ning","note":"","ucode":"4DB8D05E69E5F3","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":558712,"discussion_content":"嗯嗯～","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1648436825,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":337054,"user_name":"if...else...","can_delete":false,"product_type":"c1","uid":2550743,"ip_address":"","ucode":"D0565908C99695","user_header":"https://static001.geekbang.org/account/avatar/00/26/eb/d7/90391376.jpg","comment_is_top":false,"comment_ctime":1646571126,"is_pvip":false,"replies":[{"id":"123230","content":"这个定义可以应用到软件系统架构，也可以用来分析你所在的组织架构","user_name":"作者回复","user_name_real":"编辑","uid":"1098920","ctime":1646701877,"ip_address":"","comment_id":337054,"utype":1}],"discussion_count":1,"race_medal":4,"score":"1646571126","product_id":100006601,"comment_content":"收获4R架构定义","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":554963,"discussion_content":"这个定义可以应用到软件系统架构，也可以用来分析你所在的组织架构","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1646701877,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":332886,"user_name":"易飞","can_delete":false,"product_type":"c1","uid":2630424,"ip_address":"","ucode":"32AC28754237F7","user_header":"https://static001.geekbang.org/account/avatar/00/28/23/18/4284361f.jpg","comment_is_top":false,"comment_ctime":1643785950,"is_pvip":false,"replies":[{"id":"121702","content":"一般P7+以上才会自己画业务架构，在一些汇报的场景可以看到业务架构。","user_name":"作者回复","user_name_real":"编辑","uid":"1098920","ctime":1644027773,"ip_address":"","comment_id":332886,"utype":1},{"id":"121703","content":"一般P7+以上才会自己画业务架构，在一些汇报的场景可以看到业务架构。","user_name":"作者回复","user_name_real":"编辑","uid":"1098920","ctime":1644027773,"ip_address":"","comment_id":332886,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1643785950","product_id":100006601,"comment_content":"我之前理解的架构有代码架构，部署架构，就是没有业务架构。。","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":549484,"discussion_content":"一般P7+以上才会自己画业务架构，在一些汇报的场景可以看到业务架构。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1644027773,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":549483,"discussion_content":"一般P7+以上才会自己画业务架构，在一些汇报的场景可以看到业务架构。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1644027773,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":332786,"user_name":"quietwater","can_delete":false,"product_type":"c1","uid":1055029,"ip_address":"","ucode":"C25E2CD356D3F9","user_header":"https://static001.geekbang.org/account/avatar/00/10/19/35/be8372be.jpg","comment_is_top":false,"comment_ctime":1643605770,"is_pvip":true,"replies":[{"id":"121699","content":"不同领域都有架构师，还有诸如数据库架构师等","user_name":"作者回复","user_name_real":"编辑","uid":"1098920","ctime":1644027611,"ip_address":"","comment_id":332786,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1643605770","product_id":100006601,"comment_content":"老师，架构师有很多分类，能否解释一下各种架构师分类的异同。比如系统架构师，业务架构师，软件架构师，数据架构师，微服务架构师，云平台架构师等等。","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":549480,"discussion_content":"不同领域都有架构师，还有诸如数据库架构师等","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1644027611,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":332706,"user_name":"庄小P","can_delete":false,"product_type":"c1","uid":1489063,"ip_address":"","ucode":"A71FA01F713790","user_header":"","comment_is_top":false,"comment_ctime":1643510523,"is_pvip":false,"replies":[{"id":"121695","content":"对的，框架就是某个场景下的最佳实践。","user_name":"作者回复","user_name_real":"编辑","uid":"1098920","ctime":1644027429,"ip_address":"","comment_id":332706,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1643510523","product_id":100006601,"comment_content":"之前认为架构就是将系统拆分出各个模块，而框架从今天的理解来看，就是一种最佳实践。","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":549476,"discussion_content":"对的，框架就是某个场景下的最佳实践。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1644027429,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":332705,"user_name":"沐雪","can_delete":false,"product_type":"c1","uid":1028301,"ip_address":"","ucode":"0C42BF0D75FD9B","user_header":"https://static001.geekbang.org/account/avatar/00/0f/b0/cd/c54572fe.jpg","comment_is_top":false,"comment_ctime":1643510116,"is_pvip":true,"replies":[{"id":"121696","content":"第3点是“架构设计”的内容了，不是架构本身的定义。","user_name":"作者回复","user_name_real":"编辑","uid":"1098920","ctime":1644027516,"ip_address":"","comment_id":332705,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1643510116","product_id":100006601,"comment_content":"再未读这篇文章之前，我理解的架构是：  <br>画个图纸，图纸上有<br>1、各个子系统&#47;模块，以及他们之间关联关系；<br>2、物理拓扑图；<br>3、重难点分析和解决方案；","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":549477,"discussion_content":"第3点是“架构设计”的内容了，不是架构本身的定义。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1644027516,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":332688,"user_name":"宁斌","can_delete":false,"product_type":"c1","uid":2863568,"ip_address":"","ucode":"BA79B21E4402C5","user_header":"https://static001.geekbang.org/account/avatar/00/2b/b1/d0/178b7de0.jpg","comment_is_top":false,"comment_ctime":1643474537,"is_pvip":false,"replies":[{"id":"121698","content":"框架也关注how呀","user_name":"作者回复","user_name_real":"编辑","uid":"1098920","ctime":1644027560,"ip_address":"","comment_id":332688,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1643474537","product_id":100006601,"comment_content":"框架主要关注WHAT<br>架构主要关注HOW","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":549479,"discussion_content":"框架也关注how呀","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1644027560,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":332604,"user_name":"谁都会变","can_delete":false,"product_type":"c1","uid":1195017,"ip_address":"","ucode":"9965748F7EBB57","user_header":"https://static001.geekbang.org/account/avatar/00/12/3c/09/b7f0eac6.jpg","comment_is_top":false,"comment_ctime":1643363104,"is_pvip":true,"replies":[{"id":"121548","content":"你负责那一层，那一层就是你看到的和需要关注的顶层","user_name":"作者回复","user_name_real":"作者","uid":"1098920","ctime":1643452036,"ip_address":"","comment_id":332604,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1643363104","product_id":100006601,"comment_content":"架构是顶层设计。这个顶层设计是什么呢，包括哪些方面呢？有没有更实的概念呀","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":548939,"discussion_content":"你负责那一层，那一层就是你看到的和需要关注的顶层","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1643452036,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":331358,"user_name":"Geek_e192d1","can_delete":false,"product_type":"c1","uid":2876075,"ip_address":"","ucode":"5ED5C031F69E87","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/6KqGYKQjgiae28TfeQKpWiciavCapwicnatudRticXsw947n8WWjboyHDRWCvZGz0HEwhrmsvPYiavkTMkwdviahGQtqw/132","comment_is_top":false,"comment_ctime":1642561317,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1642561317","product_id":100006601,"comment_content":"关联是连接器，能力是组件或模块，规则是业务决定的组成规则","like_count":0},{"had_liked":false,"id":331355,"user_name":"刘恩德","can_delete":false,"product_type":"c1","uid":1542736,"ip_address":"","ucode":"A92D3BA6CA546E","user_header":"https://static001.geekbang.org/account/avatar/00/17/8a/50/1ac12c3c.jpg","comment_is_top":false,"comment_ctime":1642560573,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1642560573","product_id":100006601,"comment_content":"架构是系统的所使用组件协作运行的总体描述; <br>差异: 未区分子系统和系统; 未明确个体的含义, 可能是组件, 模块, 子系统","like_count":0},{"had_liked":false,"id":329019,"user_name":"蓝士钦","can_delete":false,"product_type":"c1","uid":1229516,"ip_address":"","ucode":"726EB5C8EF1249","user_header":"https://static001.geekbang.org/account/avatar/00/12/c2/cc/ca22bb7c.jpg","comment_is_top":false,"comment_ctime":1641028807,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1641028807","product_id":100006601,"comment_content":"架构是指系统的顶层结构。<br>在软件架构设计中，需要明确系统顶层结构中所包含的个体和个体之间的协作方式。<br>个体可以是子系统，组件和模块等。<br>系统：由一群有关联的个体组成，需要指明个体之间的协作方式，个体功能组合后能产生新的功能。<br>子系统：与系统的概念一样，观察的角度不同，一个系统可以是另一个更大系统的子系统。<br>模块：从业务维度上的职责划分。<br>组件：从技术维度上的功能复用。","like_count":0},{"had_liked":false,"id":325506,"user_name":"grey927","can_delete":false,"product_type":"c1","uid":1202782,"ip_address":"","ucode":"833E02ED835B4A","user_header":"https://static001.geekbang.org/account/avatar/00/12/5a/5e/a897cb0d.jpg","comment_is_top":false,"comment_ctime":1639010228,"is_pvip":false,"replies":[{"id":"118114","content":"因为这是一个系统里的不同部分，没有拆分成多个子系统，你可以理解为一个一个的package就是模块，或者maven的module也可以是模块","user_name":"作者回复","user_name_real":"编辑","uid":"1098920","ctime":1639025597,"ip_address":"","comment_id":325506,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1639010228","product_id":100006601,"comment_content":"&gt; 我以一个最简单的网站系统来为例。假设我们要做一个学生信息管理系统，这个系统从逻辑的角度来拆分，可以分为“登录注册模块”“个人信息模块”“个人成绩模块”。<br><br>李老师，我有个问题，为什么学生管理系统这里，就变成了模块了，前面拆分微信的时候，却是子系统呢？<br>","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":537308,"discussion_content":"因为这是一个系统里的不同部分，没有拆分成多个子系统，你可以理解为一个一个的package就是模块，或者maven的module也可以是模块","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1639025597,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":325397,"user_name":"尹深","can_delete":false,"product_type":"c1","uid":1664124,"ip_address":"","ucode":"B48812FBA67882","user_header":"https://static001.geekbang.org/account/avatar/00/19/64/7c/dc4304b4.jpg","comment_is_top":false,"comment_ctime":1638943600,"is_pvip":false,"replies":[{"id":"118209","content":"架构设计三原则之一，后面会讲","user_name":"作者回复","user_name_real":"编辑","uid":"1098920","ctime":1639273044,"ip_address":"","comment_id":325397,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1638943600","product_id":100006601,"comment_content":"最合适的技术界面目前面临的问题","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":537930,"discussion_content":"架构设计三原则之一，后面会讲","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1639273044,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":325267,"user_name":"跫音","can_delete":false,"product_type":"c1","uid":1959666,"ip_address":"","ucode":"E700CF1E8BCB15","user_header":"https://static001.geekbang.org/account/avatar/00/1d/e6/f2/f72e2399.jpg","comment_is_top":false,"comment_ctime":1638885824,"is_pvip":true,"replies":[{"id":"118061","content":"这个理解不适合中间件系统，例如Redis、Kafka、MySQL这些","user_name":"作者回复","user_name_real":"编辑","uid":"1098920","ctime":1638934668,"ip_address":"","comment_id":325267,"utype":1}],"discussion_count":1,"race_medal":1,"score":"1638885824","product_id":100006601,"comment_content":"之前我一直觉得架构分为技术架构和业务架构，技术架构更偏向于规范，而业务架构更偏向于子系统","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":537016,"discussion_content":"这个理解不适合中间件系统，例如Redis、Kafka、MySQL这些","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1638934668,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":324800,"user_name":"逆向","can_delete":false,"product_type":"c1","uid":1089426,"ip_address":"","ucode":"745C18035146C2","user_header":"https://static001.geekbang.org/account/avatar/00/10/9f/92/a3150976.jpg","comment_is_top":false,"comment_ctime":1638630912,"is_pvip":false,"replies":[{"id":"117926","content":"中间件系统就可以认为没有业务设计","user_name":"作者回复","user_name_real":"编辑","uid":"1098920","ctime":1638786484,"ip_address":"","comment_id":324800,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1638630912","product_id":100006601,"comment_content":"原来的理解中，架构包含业务设计方案和技术实现方案两部分","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":536449,"discussion_content":"中间件系统就可以认为没有业务设计","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1638786484,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":320250,"user_name":"小明🥤","can_delete":false,"product_type":"c1","uid":2812644,"ip_address":"","ucode":"4DF0181D94F313","user_header":"https://static001.geekbang.org/account/avatar/00/2a/ea/e4/1cbcb8d4.jpg","comment_is_top":false,"comment_ctime":1636173176,"is_pvip":false,"replies":[{"id":"116161","content":"正解","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1636291804,"ip_address":"","comment_id":320250,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1636173176","product_id":100006601,"comment_content":"架构是为了在特定场景实现特定业务而设计的大系统。模块是组成大系统的各个子系统。组件是实现子系统的“零件”。框架是组件组装与运行的具体操作规范。","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":529928,"discussion_content":"正解","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1636291804,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":320220,"user_name":"术子米德","can_delete":false,"product_type":"c1","uid":1898023,"ip_address":"","ucode":"382EA7E2AF0B56","user_header":"https://static001.geekbang.org/account/avatar/00/1c/f6/27/c27599ae.jpg","comment_is_top":false,"comment_ctime":1636149749,"is_pvip":true,"replies":[{"id":"116163","content":"架构师是一个综合要求比较高的岗位 ：）","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1636291921,"ip_address":"","comment_id":320220,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1636149749","product_id":100006601,"comment_content":"🤔☕️🤔☕️🤔<br>* 转身遇见你，系统架构师<br>* 系统架构师在你身后，他是软件实现设计的后盾和保障<br>* 软件实现设计，根据遇到的需求，基于现有架构设计，开展实现设计，不明白需求和约束，问架构师，不明白现有架构设计，问架构师，不明白现有架构解决不了的需求，问架构师<br>* 如果概要设计解决如何（HOW）分工协作，如果详细设计解决如何（HOW）具体实现，那么架构设计就告诉概要和详细设计方，什么（WHAT)设计元素及其之间的关系，可以怎样解决需求问题，哪些可用于设计，哪些不能用于设计，为何（WHY)如此设计能有效解决需求问题，还得回答各式各样期待从产品利润中获益的各方的为什么（WHY），为何如此这般这般如此的架构设计，才是利润率最高的各种质疑<br>","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":529921,"discussion_content":"架构师是一个综合要求比较高的岗位 ：）","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1636291921,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":319072,"user_name":"厚子","can_delete":false,"product_type":"c1","uid":1079662,"ip_address":"","ucode":"023C6CD2903896","user_header":"https://static001.geekbang.org/account/avatar/00/10/79/6e/0f84ea02.jpg","comment_is_top":false,"comment_ctime":1635566649,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1635566649","product_id":100006601,"comment_content":"框架是对具有通用功能进行的抽象、封装、开源，供大家使用，避免重复造“轮子”","like_count":0},{"had_liked":false,"id":319071,"user_name":"厚子","can_delete":false,"product_type":"c1","uid":1079662,"ip_address":"","ucode":"023C6CD2903896","user_header":"https://static001.geekbang.org/account/avatar/00/10/79/6e/0f84ea02.jpg","comment_is_top":false,"comment_ctime":1635566445,"is_pvip":false,"replies":[{"id":"115700","content":"这个理解不对 ：）","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1635646447,"ip_address":"","comment_id":319071,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1635566445","product_id":100006601,"comment_content":"感觉架构就是为了使系统落地所使用的技术栈","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":529488,"discussion_content":"这个理解不对 ：）","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1635646447,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":318333,"user_name":"一句话说明白","can_delete":false,"product_type":"c1","uid":1170857,"ip_address":"","ucode":"1284DCB3C6FBE6","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83erceWvmqarmrcPx527BdNkGMOQUgiaBz21XRySvJqxxN96Wt8CJUpR084LLE82ErX5UtkN9Chwib31A/132","comment_is_top":false,"comment_ctime":1635245985,"is_pvip":true,"replies":[{"id":"115450","content":"基本没有关系，架构有架构的设计原则，SOLID和设计模式是面向对象设计和开发用的。","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1635254422,"ip_address":"","comment_id":318333,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1635245985","product_id":100006601,"comment_content":"华仔，有几个概念一直混淆，这里的架构和设计模式设计原则有关系吗？面试中常提的系统设计，又属于这里的架构还是设计模式呢？","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":529194,"discussion_content":"基本没有关系，架构有架构的设计原则，SOLID和设计模式是面向对象设计和开发用的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1635254422,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":317464,"user_name":"韩伟","can_delete":false,"product_type":"c1","uid":2234510,"ip_address":"","ucode":"178EB0F150E83E","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLic05rAy6osrkrxlHfbZ1bnc9fITbbaQXFO6TnfaDUPgJgiciacBIdDdsJ9W6sLHwdTGNe1wwxj3MOw/132","comment_is_top":false,"comment_ctime":1634804661,"is_pvip":false,"replies":[{"id":"115081","content":"架构不一定是从物理的角度来看系统，也可以从逻辑的角度来看，其它几个概念理解都是OK的","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1634861966,"ip_address":"","comment_id":317464,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1634804661","product_id":100006601,"comment_content":"我的理解不知道是不是精确：<br>架构：物理体的结合（服务器、数据库、网络、软件等的构成体），为了实现系统的功能<br>框架：某种开发体系的规则<br>模块：组成系统的逻辑单元<br>组件：开发中可复用的功能体<br>","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":528826,"discussion_content":"架构不一定是从物理的角度来看系统，也可以从逻辑的角度来看，其它几个概念理解都是OK的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1634861966,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":317422,"user_name":"一个坏人","can_delete":false,"product_type":"c1","uid":1032305,"ip_address":"","ucode":"4AF05BF008095A","user_header":"https://static001.geekbang.org/account/avatar/00/0f/c0/71/c83d8b15.jpg","comment_is_top":false,"comment_ctime":1634792596,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1634792596","product_id":100006601,"comment_content":"模块(module)：compile-time dependencies<br>组件(component):  execution-time dependencies<br>逻辑视角拆分系统---&gt; 模块<br>物理视角采访系统---&gt; 组件<br>软件架构的出现的历史必然性。<br>第一次软件危机（20世纪60年代），”软件质量低下，项目无法如期完成、项目严重超支等“ 问题引出了”结构化编程“(自顶向下、逐步细化、模块化)，将复杂度分散。<br>第二场软件危机（20世纪80年代），“扩展难的问题” 引出了“面向对象编程”，创造了“对象”概念。<br>到了20世纪90年代，“软件架构”开始流行，创造了“组件”概念。<br>“模块”，“对象”，“组件”本质都是达到一定规模的软件进行拆分，差别只是随着软件复杂度越来越高，拆分的粒度越来越粗，拆分的层次越来越高。<br><br>软件架构指软件系统的顶层结构，是为了解决软件系统复杂度带来的问题。<br>软件架构指软件系统的“基础结构”，创造这些基础结构的准则，以及对这些结构的描述。<br><br>系统：A system is a group of interacting or interrelated elements that act according to a set of rules to form a unified whole.<br>关键词：一组      有关联  个体（子系统）  规则  整体<br>1、系统是有结构的。一个系统是其构成要素的集合，这些要素相互关联、相互制约。系统内各要素之间相对稳定的联系方式，组织秩序，失控关系的内置表现形式就是系统的结构（结构是指事物自身各要素之间的相互关系和相互作用的方式，包括构成事物要素的数量比例，排列次序，结合方式和因发展而引起事物变化。结构是事物的存在形式。）。<br>2、系统有一定的功能或者说系统要有一定的目的性。系统的功能是指系统与外部环境相互联系和相互作用时表现出的性质和能力。<br>3、系统的各主量和的贡献大于各主量贡献的和，即 1+1 &gt; 2 。","like_count":0},{"had_liked":false,"id":314107,"user_name":"Geek_1ecdef","can_delete":false,"product_type":"c1","uid":2786980,"ip_address":"","ucode":"4027AE850F76F4","user_header":"","comment_is_top":false,"comment_ctime":1632840446,"is_pvip":false,"replies":[{"id":"113845","content":"并不是每次架构设计都要考虑复用的，例如Nginx、Redis这些架构","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1632970107,"ip_address":"","comment_id":314107,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1632840446","product_id":100006601,"comment_content":"我原来理解的架构是：为了完成某个目标或产品，给出的一种方案或最优解，而且往往是可以复用的。","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":527571,"discussion_content":"并不是每次架构设计都要考虑复用的，例如Nginx、Redis这些架构","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1632970107,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":311318,"user_name":"Drake敏","can_delete":false,"product_type":"c1","uid":2734734,"ip_address":"","ucode":"38366767EFDC90","user_header":"https://static001.geekbang.org/account/avatar/00/29/ba/8e/4645afae.jpg","comment_is_top":false,"comment_ctime":1631171306,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1631171306","product_id":100006601,"comment_content":"理解的就是需要有一整套完成的组件和系统数据库才能算得上是系统。框架主要是壳子，组件主要是系统的部件，模块是系统的各类模块，系统是实体","like_count":0},{"had_liked":false,"id":308639,"user_name":"CheungQ","can_delete":false,"product_type":"c1","uid":1139072,"ip_address":"","ucode":"E7C63CB09A4B40","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJaSCBXj0KzibYfaTrP9LkgRRpCdePNPoR9TKzhXbjeHVhCYdIicdicAyoZkNUQuricIpltfGzhrjnn4Q/132","comment_is_top":false,"comment_ctime":1629714580,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1629714580","product_id":100006601,"comment_content":"系统这个词很有意思，可以理解为把很多繁杂的线头系在一起统筹管理","like_count":0},{"had_liked":false,"id":307464,"user_name":"Alvin","can_delete":false,"product_type":"c1","uid":1061976,"ip_address":"","ucode":"ECA64F2913024A","user_header":"https://static001.geekbang.org/account/avatar/00/10/34/58/957ca791.jpg","comment_is_top":false,"comment_ctime":1629112552,"is_pvip":false,"replies":[{"id":"111343","content":"专栏里面没有讲画架构图的章节，架构实战营的视频课讲了 ：）","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1629163964,"ip_address":"","comment_id":307464,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1629112552","product_id":100006601,"comment_content":"老师能出一章架构图的画法吗？没看到标准，自己画的没底","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":525155,"discussion_content":"专栏里面没有讲画架构图的章节，架构实战营的视频课讲了 ：）","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1629163964,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":306314,"user_name":"Ted","can_delete":false,"product_type":"c1","uid":1395162,"ip_address":"","ucode":"89A8202074C0B7","user_header":"https://static001.geekbang.org/account/avatar/00/15/49/da/8b4e1408.jpg","comment_is_top":false,"comment_ctime":1628492180,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1628492180","product_id":100006601,"comment_content":"之前以为的架构只是狭隘的MVC分层架构。。数据、服务、UI。 今天最大的收获是，明白了架构是分 逻辑维度和物理维度的","like_count":0},{"had_liked":false,"id":302478,"user_name":"风语","can_delete":false,"product_type":"c1","uid":1265422,"ip_address":"","ucode":"A0CC0C7D904610","user_header":"https://static001.geekbang.org/account/avatar/00/13/4f/0e/6856f485.jpg","comment_is_top":false,"comment_ctime":1626234955,"is_pvip":false,"replies":[{"id":"109520","content":"你已经把架构要做的事情列出来了 ：）","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1626313547,"ip_address":"","comment_id":302478,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1626234955","product_id":100006601,"comment_content":"架构是面向系统的实践，设计理念则是实践中总结出来的经验。实践内容通常包括系统内职责划分、模块拆分、通信解偶、边界保留等问题的考量。","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":523322,"discussion_content":"你已经把架构要做的事情列出来了 ：）","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1626313547,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":302173,"user_name":"Wayne👿","can_delete":false,"product_type":"c1","uid":2694146,"ip_address":"","ucode":"A8AD5481052D9F","user_header":"https://static001.geekbang.org/account/avatar/00/29/1c/02/5aa8b087.jpg","comment_is_top":false,"comment_ctime":1626105137,"is_pvip":false,"replies":[{"id":"109329","content":"框架是按照某个规范或者标准实现的基础架构","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1626138994,"ip_address":"","comment_id":302173,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1626105137","product_id":100006601,"comment_content":"我理解的架构就是一个开放性的话题，任何系统都有架构。任何人也都可以去为自己的系统设计架构。好的架构，能够让程序具有高可用，高性能和可扩展的能力。框架更多的指人们根据以往的经验，总结出的一套比较好的架构设计规范。有时候也可以理解为一种设计比较好的架构。（不知道这个理解是不是正确，欢迎讨论）。","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":523207,"discussion_content":"框架是按照某个规范或者标准实现的基础架构","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1626138994,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":301020,"user_name":"danny_lklk","can_delete":false,"product_type":"c1","uid":2166211,"ip_address":"","ucode":"EE87C7FB6CD4F6","user_header":"https://static001.geekbang.org/account/avatar/00/21/0d/c3/6d3c50aa.jpg","comment_is_top":false,"comment_ctime":1625486659,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1625486659","product_id":100006601,"comment_content":"架构包含三个部分：<br>组成系统的基本元素、元素之间关系构成的结构集；<br>在环境中体现出来的基本属性；<br>以及设计与演进的原则。","like_count":0},{"had_liked":false,"id":299723,"user_name":"baye","can_delete":false,"product_type":"c1","uid":1620140,"ip_address":"","ucode":"CB6F18C9995F8F","user_header":"https://static001.geekbang.org/account/avatar/00/18/b8/ac/92b70376.jpg","comment_is_top":false,"comment_ctime":1624835851,"is_pvip":false,"replies":[{"id":"108707","content":"正解","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1624846310,"ip_address":"","comment_id":299723,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1624835851","product_id":100006601,"comment_content":"架构是软件系统的顶层结构，是关于系统的组成，以及各个组成部分之间如何交互的描述","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":522519,"discussion_content":"正解","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1624846310,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":298749,"user_name":"八百","can_delete":false,"product_type":"c1","uid":1253530,"ip_address":"","ucode":"79F1F79ADF5A00","user_header":"https://static001.geekbang.org/account/avatar/00/13/20/9a/3b1c65fd.jpg","comment_is_top":false,"comment_ctime":1624287423,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1624287423","product_id":100006601,"comment_content":"看了之后没有太多感觉，感觉像没看。。。","like_count":0},{"had_liked":false,"id":297035,"user_name":"万历十五年","can_delete":false,"product_type":"c1","uid":1122150,"ip_address":"","ucode":"3D8CF5DF847AE8","user_header":"https://static001.geekbang.org/account/avatar/00/11/1f/66/59e0647a.jpg","comment_is_top":false,"comment_ctime":1623288855,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1623288855","product_id":100006601,"comment_content":"1.为解决目标问题构建系统，<br>2.系统的逻辑功能部分就是功能模块，<br>3.模块的实现采用符合某种规范的框架（使用框架的直接好处就是可以加快开发速度，某种程度上说框架也是模式），<br>4.逻辑功能被实现之后就可以作为组件，采用不同的实现方法或者说实现规范的组件虽然都具有相同的逻辑功能，但运行效率，资源消耗是有区别的，所以组件是可替换的，比如不同的数据库连接池就可以视为不同的组件<br>5.架构就是从不同的角度分解系统：逻辑角度分解就是模块的关系，物理角度的分解就是组件关系，实现角度就是框架关系","like_count":0},{"had_liked":false,"id":292770,"user_name":"大聖","can_delete":false,"product_type":"c1","uid":2485664,"ip_address":"","ucode":"5FD991D883BE78","user_header":"https://static001.geekbang.org/account/avatar/00/25/ed/a0/cc89c128.jpg","comment_is_top":false,"comment_ctime":1620972235,"is_pvip":false,"replies":[{"id":"106041","content":"业务问题不一定是系统复杂度所在，很多时候业务问题就是设计一个业务流程就可以了","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1621040633,"ip_address":"","comment_id":292770,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1620972235","product_id":100006601,"comment_content":"我原来理解的架构是服务于业务，为了解决业务问题。先对整个业务或者说要解决的问题进行拆解，这样就有了子系统以及更细的模块，同时理清子系统以及模块的功能、规则和关联。有了整个前提以后，开始顶层设计，这样就是一个软件架构了。","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":519953,"discussion_content":"业务问题不一定是系统复杂度所在，很多时候业务问题就是设计一个业务流程就可以了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1621040633,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":289582,"user_name":"露露的小毛豆","can_delete":false,"product_type":"c1","uid":2176581,"ip_address":"","ucode":"71376E5B1A36E9","user_header":"https://static001.geekbang.org/account/avatar/00/21/36/45/58dd8b2a.jpg","comment_is_top":false,"comment_ctime":1619089304,"is_pvip":false,"replies":[{"id":"105075","content":"模块和组件的划分不太正确，<br>模块应该是：住宅、绿化、供水、供电、供气、消防<br>组件：供水、供电、供气、消防","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1619139072,"ip_address":"","comment_id":289582,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1619089304","product_id":100006601,"comment_content":"跨行业的联想<br>系统：住宅小区<br>子系统：住宅楼、地下停车场、垃圾回收站<br>模块：物业、安保、售楼处、超市<br>组件：给排水系统、电梯、电力设施、网络、燃气<br>框架：建筑行业的国标规范；以实现规范的某某CAD插件<br>架构：不同维度的小区的结构设计图、施工图","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":518957,"discussion_content":"模块和组件的划分不太正确，\n模块应该是：住宅、绿化、供水、供电、供气、消防\n组件：供水、供电、供气、消防","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1619139072,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":288666,"user_name":"Geek_b6e6bc","can_delete":false,"product_type":"c1","uid":2559741,"ip_address":"","ucode":"0F09EFE0BF48BD","user_header":"","comment_is_top":false,"comment_ctime":1618588710,"is_pvip":false,"replies":[{"id":"104821","content":"你的理解主要是架构的分类和作用","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1618713654,"ip_address":"","comment_id":288666,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1618588710","product_id":100006601,"comment_content":"老师你好  我分享一下我之前理解的架构，因为软件开发当中的复杂性，包括任何事物只要复杂之后都需要架构，如果没有架构就会像一团密密麻麻的线绳缠在一起，没有头和尾，所以这个时候需要架构去规范，去整理，去分解成小的 简单的 子模块，来对外表达；<br>架构有业务架构 应用架构 技术架构 ，顺序是先有业务架构，应用架构是业务架构的落地，应用架构需要技术架构来实现，业务架构解决的是业务复杂性的问题，但是因为业务架构的拆分带来了技术架构的的复杂性问题，因为架构里子元素需要互相协作完成功能，假如不拆分业务那么技术实现是简单的，业务确实复杂的，那么应用架构的划分和设计就是去平衡和取舍业务架构和技术架构带来的复杂性和问题。这是我对架构的理解","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":518701,"discussion_content":"你的理解主要是架构的分类和作用","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1618713654,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":286437,"user_name":"Geek_fa4c11","can_delete":false,"product_type":"c1","uid":2547758,"ip_address":"","ucode":"8624645B6B8ED1","user_header":"","comment_is_top":false,"comment_ctime":1617315082,"is_pvip":false,"replies":[{"id":"104055","content":"原来的理解基本也正确 ：）","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1617327507,"ip_address":"","comment_id":286437,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1617315082","product_id":100006601,"comment_content":"原来理解的架构：项目分成了几块，这些块之间的关系，共同完成了一个系统<br>现在的差不多，只是具体概念以及区别细化了些","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":517989,"discussion_content":"原来的理解基本也正确 ：）","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1617327507,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":286247,"user_name":"maybe","can_delete":false,"product_type":"c1","uid":1475528,"ip_address":"","ucode":"93D160F617E750","user_header":"https://static001.geekbang.org/account/avatar/00/16/83/c8/5ce842f6.jpg","comment_is_top":false,"comment_ctime":1617208150,"is_pvip":false,"discussion_count":0,"race_medal":4,"score":"1617208150","product_id":100006601,"comment_content":"原来对架构的概念很是模糊，只是觉得是一种指导软件开发的一个方案，像盖房子做设计图一样，通过4+1的方式进行描述。今天总算有比较具体的认知。<br>架构：系统的基础结构，对结构的行为准则，和对结构的描述。<br>系统：由相关的模块、组件、子系统组合而成，创造出新的能力，这些能力都不是单个模块、组件、子系统能提供的，是个有机组合。<br>子系统：和系统一样的，只是观察视角不一样。<br>模块：逻辑概念，系统的逻辑组成部分。比如登录模块、存储模块。<br>组件：物理概念，系统的物理组成部分，可以替换。比如存储组件是mysql，搜索组件是es<br>框架：框架一种规范的实现，提供一些基础功能。比如j2ee框架、Spring mvc是实现了mvc模式的一种框架","like_count":0},{"had_liked":false,"id":284713,"user_name":"菠萝吹雪—Code","can_delete":false,"product_type":"c1","uid":1650378,"ip_address":"","ucode":"A5B2FC661EE17D","user_header":"https://static001.geekbang.org/account/avatar/00/19/2e/ca/469f7266.jpg","comment_is_top":false,"comment_ctime":1616425979,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1616425979","product_id":100006601,"comment_content":"这篇预习完了","like_count":0},{"had_liked":false,"id":283267,"user_name":"Allan","can_delete":false,"product_type":"c1","uid":1310388,"ip_address":"","ucode":"8DA4DBECC2C45C","user_header":"https://static001.geekbang.org/account/avatar/00/13/fe/b4/295338e7.jpg","comment_is_top":false,"comment_ctime":1615651829,"is_pvip":false,"replies":[{"id":"102764","content":"很多东西细想一下，背后都有很多窍门，MVC既可以是一个框架，也可以说是架构","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1615710072,"ip_address":"","comment_id":283267,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1615651829","product_id":100006601,"comment_content":"之前理解的架构：就拿我们现在工作来说，我们经常在开发中或者给别人说我们用什么的时候，我就经常说我们用的开发架构是 pulsar消息队列 + flink计算引擎 + 一些如hbase es等作为存储。我可能理解的架构就是一个系统的组成部分。今天老师说了 顶层结构让我更加有些明白，架构就是宏观的一个大结构，然后里面我们可以针对每一部分系统进行细分。而之前的框架，我之前没有仔细想过，想到自己多说的 mvc框架，但也没有细想自己为啥要这么说，今天才知道 真的是一个规范标准。","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":516974,"discussion_content":"很多东西细想一下，背后都有很多窍门，MVC既可以是一个框架，也可以说是架构","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1615710072,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":283211,"user_name":"Teanmy","can_delete":false,"product_type":"c1","uid":1209599,"ip_address":"","ucode":"89F466CC698583","user_header":"","comment_is_top":false,"comment_ctime":1615622258,"is_pvip":false,"replies":[{"id":"102763","content":"你的理解把几个核心元素都涵盖了，包括：元素、连结、某些功用","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1615710004,"ip_address":"","comment_id":283211,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1615622258","product_id":100006601,"comment_content":"架构，是一系列子元素按照某种方式互相配合连结在一起达到某些功用的整体。比如，业务架构，微信就可以拆成IM、朋友圈、支付等业务；物理架构，则是整个完整的物理部署架构图；开发架构，可以是MVC；。。。。。。","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":516962,"discussion_content":"你的理解把几个核心元素都涵盖了，包括：元素、连结、某些功用","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1615710004,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":282984,"user_name":"吴海桃","can_delete":false,"product_type":"c1","uid":1134835,"ip_address":"","ucode":"B6C3578833AABF","user_header":"https://wx.qlogo.cn/mmopen/vi_32/UQgJ4oRibTu54uclciaLLZg0heALZlKjzJ0zMarpR6zfHRROoE2pIrz1U9icNlKibGOUkutCGicB4AcjibsV6HoUCQzg/132","comment_is_top":false,"comment_ctime":1615510246,"is_pvip":false,"replies":[{"id":"102708","content":"后面你会收获更多，包括架构原则、模式、设计流程等 ：）","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1615538911,"ip_address":"","comment_id":282984,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1615510246","product_id":100006601,"comment_content":"对架构的想法一直处于老师所说的要有超高技术才可以接触，这个误解差点让我废了，老师这篇文章让我理解很多。","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":516898,"discussion_content":"后面你会收获更多，包括架构原则、模式、设计流程等 ：）","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1615538911,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":282888,"user_name":"始一而终","can_delete":false,"product_type":"c1","uid":2509704,"ip_address":"","ucode":"3C5A7DAE258BB9","user_header":"https://static001.geekbang.org/account/avatar/00/26/4b/88/ae4daf01.jpg","comment_is_top":false,"comment_ctime":1615452667,"is_pvip":false,"replies":[{"id":"102687","content":"可以这么理解，但是要注意，模块并不必然包含组件。<br>模块也可以是代码里的一个package，或者maven工程里面的一个module","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1615509931,"ip_address":"","comment_id":282888,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1615452667","product_id":100006601,"comment_content":"模块是从逻辑角度对系统的再次划分，也可以是某个复杂子系统的再次划分，而组件是实现模块功能的组成零件，(包括硬件组件和软件组件).请作者纠正？","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":516868,"discussion_content":"可以这么理解，但是要注意，模块并不必然包含组件。\n模块也可以是代码里的一个package，或者maven工程里面的一个module","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1615509931,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":282863,"user_name":"-_-|||","can_delete":false,"product_type":"c1","uid":1328142,"ip_address":"","ucode":"94B21594658BF9","user_header":"https://static001.geekbang.org/account/avatar/00/14/44/0e/ce14b7d3.jpg","comment_is_top":false,"comment_ctime":1615443984,"is_pvip":false,"replies":[{"id":"102688","content":"框架既包含设计规范，也可以是按照某个规范构建的软件产品，例如Spring Boot就是一个MVC框架","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1615509977,"ip_address":"","comment_id":282863,"utype":1}],"discussion_count":1,"race_medal":1,"score":"1615443984","product_id":100006601,"comment_content":"架构应该是系统设计，框架是为了更好的实现功能","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":516860,"discussion_content":"框架既包含设计规范，也可以是按照某个规范构建的软件产品，例如Spring Boot就是一个MVC框架","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1615509977,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":281599,"user_name":"半夏","can_delete":false,"product_type":"c1","uid":1216710,"ip_address":"","ucode":"50A2C4CF8F85EA","user_header":"https://static001.geekbang.org/account/avatar/00/12/90/c6/0ba1789a.jpg","comment_is_top":false,"comment_ctime":1614822551,"is_pvip":false,"replies":[{"id":"102250","content":"是的，横看成岭侧成峰，架构也是一样","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1614832217,"ip_address":"","comment_id":281599,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1614822551","product_id":100006601,"comment_content":"我以前所理解的架构有业务架构，系统架构，组建架构..<br><br>听完课有另外一种理解，<br>站在不同角度，应该有不一样的顶层架构<br>如大数据架构应该是数据输入到输出的加工中涉及系统，子系统，模块，组建的架构","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":516451,"discussion_content":"是的，横看成岭侧成峰，架构也是一样","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1614832217,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":280919,"user_name":"shark","can_delete":false,"product_type":"c1","uid":1203926,"ip_address":"","ucode":"312FB80175C8FF","user_header":"https://static001.geekbang.org/account/avatar/00/12/5e/d6/87189c9d.jpg","comment_is_top":false,"comment_ctime":1614482599,"is_pvip":false,"replies":[{"id":"101982","content":"基本正确","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1614497021,"ip_address":"","comment_id":280919,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1614482599","product_id":100006601,"comment_content":"个人理解：架构就是软件的基础结构，定义系统的组成模块，描述各模块间的逻辑关系。","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":516244,"discussion_content":"基本正确","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1614497021,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":280585,"user_name":"MasterSkills","can_delete":false,"product_type":"c1","uid":1691106,"ip_address":"","ucode":"61CD6A433417F0","user_header":"https://static001.geekbang.org/account/avatar/00/19/cd/e2/1e36d797.jpg","comment_is_top":false,"comment_ctime":1614255181,"is_pvip":true,"replies":[{"id":"101866","content":"框架的核心在于“框”，也就是说框架已经“框定”了你的实现方式和边界。<br><br>其它的理解都很正确，尤其是MVC既是框架又是架构这个点，很多人都没有理解到。","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1614300557,"ip_address":"","comment_id":280585,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1614255181","product_id":100006601,"comment_content":"“架构”核心在于“构”字，指的是构成或者组成，描述了各个部分的构成，或者是由哪几部分组成。“设计架构”会用到各种架构设计理念、方法、原则等，例如熟知的“单一职责原则”就可以作为架构设计的原则。MVC等都属于软件架构设计的成品，具有通用性。<br>“框架”核心在于“架”，可以认为是架子，具有自定义性、通用性，例如我们可以放任何种类的书在书架上。MVC（Model、View、Controller）画成图就是架构，它与你选择开发技术和平台都无关。我们把MVC架构，也就是我们画的M、V、C三部分的构成图，落实到开发就是框架，例如ASP.NET MVC就是框架，它实现了抽象的MVC架构，包括View、Controller等，.NET帮我们实现了网络访问、视图展示与路由等功能，这是我们做软件的基础，也就是&quot;架子&quot;，我们可以借助它做自己想要的，也就是我们可以在书架上放任何书，前提是“书架能放的下”。ASP.NET MVC这个框架只是MVC架构或者说抽象模型的一种实现，我们同样可以在Android开发或者其它开发中采用MVC架构。","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":516145,"discussion_content":"框架的核心在于“框”，也就是说框架已经“框定”了你的实现方式和边界。\n\n其它的理解都很正确，尤其是MVC既是框架又是架构这个点，很多人都没有理解到。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1614300557,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1691106,"avatar":"https://static001.geekbang.org/account/avatar/00/19/cd/e2/1e36d797.jpg","nickname":"MasterSkills","note":"","ucode":"61CD6A433417F0","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":351552,"discussion_content":"感谢😊","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1614322503,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":280521,"user_name":"李兴振","can_delete":false,"product_type":"c1","uid":2004552,"ip_address":"","ucode":"78E54478F38DC1","user_header":"https://static001.geekbang.org/account/avatar/00/1e/96/48/a0c6a06c.jpg","comment_is_top":false,"comment_ctime":1614240617,"is_pvip":false,"replies":[{"id":"101829","content":"开发设计角度也有多种划分角度，例如按照逻辑划分，按照组件划分","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1614246130,"ip_address":"","comment_id":280521,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1614240617","product_id":100006601,"comment_content":"架构图常用的：逻辑视图架构，从功能角度划分；部署视图架构，从物理部署位置角度划分；还有老师提到的其它4+1视图。我目前想学习是从开发设计的角度，来划分的系统架构，真正的顶层设计。","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":516121,"discussion_content":"开发设计角度也有多种划分角度，例如按照逻辑划分，按照组件划分","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1614246130,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":279379,"user_name":"TristanDong","can_delete":false,"product_type":"c1","uid":1199392,"ip_address":"","ucode":"632B5E364C8AA8","user_header":"https://static001.geekbang.org/account/avatar/00/12/4d/20/9f430641.jpg","comment_is_top":false,"comment_ctime":1613743404,"is_pvip":false,"replies":[{"id":"101536","content":"组件可以是模块的组成部分，这个理解是正确的，也不与文中的描述冲突。<br><br>例如：用户模块可以用MySQL组件来存储数据，搜索模块用Elasticsearch组件来存储数据。","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1613812942,"ip_address":"","comment_id":279379,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1613743404","product_id":100006601,"comment_content":"不是特别认同对于组件和模块的描述，文中提及“软件组件定义为自包含的、可编程的、可重用的、与语言无关的软件单元，软件组件可以很容易被用于组装应用程序中”，从“自包含和”和“很容易被用于组装应用程序中”两处可以得出，组件可以是模块的组成部分，颗粒度可小于模块，这与后一篇的最后对的内容也有出入。","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":515714,"discussion_content":"组件可以是模块的组成部分，这个理解是正确的，也不与文中的描述冲突。\n\n例如：用户模块可以用MySQL组件来存储数据，搜索模块用Elasticsearch组件来存储数据。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1613812942,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1199392,"avatar":"https://static001.geekbang.org/account/avatar/00/12/4d/20/9f430641.jpg","nickname":"TristanDong","note":"","ucode":"632B5E364C8AA8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":350580,"discussion_content":"多谢解答","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1613922681,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":278475,"user_name":"刘震","can_delete":false,"product_type":"c1","uid":1836971,"ip_address":"","ucode":"64D0A2BA0F4A03","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIWFAJGwjiadzt3Cv7Wgv3jqcpu113lbuhBEKIEDEqaF615bGPr0Fib5eDlyIeUxm7XE7SbiavdMyI0w/132","comment_is_top":false,"comment_ctime":1612961417,"is_pvip":false,"replies":[{"id":"101365","content":"你目前接触的系统可能复杂度还不太高，所以在你看来可能差不多。","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1613482539,"ip_address":"","comment_id":278475,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1612961417","product_id":100006601,"comment_content":"是因为存在这两个概念，所以需要这两个名词进行区分，还是因为有了这两个名词，所以需要进行区分解释？<br>看了这么多大佬的解释，目前就“我”的理解来看，架构和框架，就保留一个名词，似乎对“我”的阅读也不会产生多大的影响。<br>这种原因有可能是：对架构的理解还停留在低层次的阶段，架构和框架之间“很模糊”的区分度对我来说并不重要，只有达到某种高度后，这种区分的重要性才会显现出来。","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":515396,"discussion_content":"你目前接触的系统可能复杂度还不太高，所以在你看来可能差不多。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1613482539,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":278311,"user_name":"DFighting","can_delete":false,"product_type":"c1","uid":1233193,"ip_address":"","ucode":"F3BA2426FF8582","user_header":"https://static001.geekbang.org/account/avatar/00/12/d1/29/1b1234ed.jpg","comment_is_top":false,"comment_ctime":1612867553,"is_pvip":true,"replies":[{"id":"101115","content":"架构也可以从物理上进行划分的","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1612919803,"ip_address":"","comment_id":278311,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1612867553","product_id":100006601,"comment_content":"我以前理解的架构就是偏向逻辑但不偏离硬件的结构，无论是系统，子系统，模块啥的吧，因为这些逻辑上的划分都是为了实现或大或小的一部分功能，而实现这些功能必不可少需要依赖相关支撑的硬件","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":515343,"discussion_content":"架构也可以从物理上进行划分的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1612919803,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":277116,"user_name":"慢慢de","can_delete":false,"product_type":"c1","uid":1468533,"ip_address":"","ucode":"D3AD4B73D7A695","user_header":"https://static001.geekbang.org/account/avatar/00/16/68/75/b9608b02.jpg","comment_is_top":false,"comment_ctime":1612263566,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1612263566","product_id":100006601,"comment_content":"件架构指软件系统的顶层结构。<br>这个定义看似很简单，但包含的信息很丰富，基本上把系统、子系统、模块、组件、架构等概念都串起来了，我来详细解释一下。<br>首先，“系统是一群关联个体组成”，这些“个体”可以是“子系统”“模块”“组件”等；架构需要明确系统包含哪些“个体”。<br>其次，系统中的个体需要“根据某种规则”运作，架构需要明确个体运作和协作的规则。<br>第三，维基百科定义的架构用到了“基础结构”这个说法，我改为“顶层结构”，可以更好地区分系统和子系统，避免将系统架构和子系统架构混淆在一起导致架构层次混乱。","like_count":0},{"had_liked":false,"id":270447,"user_name":"Geek_123","can_delete":false,"product_type":"c1","uid":1641026,"ip_address":"","ucode":"9D8FB86A577D2E","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJxiaYGMly2iaflE1rK7XiaLbytUuh13DeibHK2tt8ymj1ZwdmWRETQ0sgRCYOBGMNAnq5G5ibv5KfxAQg/132","comment_is_top":false,"comment_ctime":1609130002,"is_pvip":false,"replies":[{"id":"98098","content":"架构不能是抽象的，架构一定要能够落到实处，不然的话就没什么意义","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1609155281,"ip_address":"","comment_id":270447,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1609130002","product_id":100006601,"comment_content":"我理解的架构是技术的选型，系统内部和外部间的通讯，系统边界的划分。差异在于架构应该是抽象的，不应该是具体的，是顶层设计，不涉及具体的设计。不一定要创新，要根据自己的业务特点，进行选型给取舍。","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":512630,"discussion_content":"架构不能是抽象的，架构一定要能够落到实处，不然的话就没什么意义","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1609155281,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":269821,"user_name":"VIP💋丶梹爷.com 🚀","can_delete":false,"product_type":"c1","uid":1161164,"ip_address":"","ucode":"0F1F33035A1BBF","user_header":"https://static001.geekbang.org/account/avatar/00/11/b7/cc/b807b303.jpg","comment_is_top":false,"comment_ctime":1608797671,"is_pvip":false,"replies":[{"id":"98103","content":"正解","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1609155422,"ip_address":"","comment_id":269821,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1608797671","product_id":100006601,"comment_content":"觉得，组件应该是技术功能性的，可以封装抽象出来复用的工具","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":512408,"discussion_content":"正解","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1609155422,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":267897,"user_name":"叶绘落","can_delete":false,"product_type":"c1","uid":1652234,"ip_address":"","ucode":"81A249CC67B9A9","user_header":"https://static001.geekbang.org/account/avatar/00/19/36/0a/a14b6af4.jpg","comment_is_top":false,"comment_ctime":1607989136,"is_pvip":false,"replies":[{"id":"97293","content":"赞 ：）","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1607997371,"ip_address":"","comment_id":267897,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1607989136","product_id":100006601,"comment_content":"系统和子系统的定义，取决于从哪个层面出发去做对比分析。<br><br>比如拿人体和肝肾做对比，那么人体就是整体，肝肾就是局部，也就是说，人体是系统，肝肾是子系统。<br><br>因为我们是从人体这个层面出发，与其局部，也就是肝肾做对比，所以局部相对整体而言，当然就是子系统和系统的关系了。<br><br>所以从通过对比，我们可以得到一个非常清晰的包含关系，肝肾属于人体，局部属于整体，子系统属于系统。","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":511777,"discussion_content":"赞 ：）","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1607997371,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":267581,"user_name":"Adrian","can_delete":false,"product_type":"c1","uid":1063422,"ip_address":"","ucode":"C11789EA4AFC69","user_header":"https://static001.geekbang.org/account/avatar/00/10/39/fe/99465085.jpg","comment_is_top":false,"comment_ctime":1607833968,"is_pvip":false,"replies":[{"id":"97250","content":"是的，自顶向下，不同层级的系统都有架构","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1607910620,"ip_address":"","comment_id":267581,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1607833968","product_id":100006601,"comment_content":"架构是顶层设计很赞同，同时架构应该是分层的","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":511684,"discussion_content":"是的，自顶向下，不同层级的系统都有架构","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1607910620,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":261787,"user_name":"旗袍码农","can_delete":false,"product_type":"c1","uid":2285446,"ip_address":"","ucode":"7BDBDB852C7E69","user_header":"https://static001.geekbang.org/account/avatar/00/22/df/86/f14946db.jpg","comment_is_top":false,"comment_ctime":1605523696,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1605523696","product_id":100006601,"comment_content":"架构是按照业务需求的框架设计，框架是按照标准的实现设计😀","like_count":0},{"had_liked":false,"id":260447,"user_name":"公号-生活点亮技术","can_delete":false,"product_type":"c1","uid":1009329,"ip_address":"","ucode":"F807829A146624","user_header":"https://static001.geekbang.org/account/avatar/00/0f/66/b1/791d0f5e.jpg","comment_is_top":false,"comment_ctime":1605009443,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1605009443","product_id":100006601,"comment_content":"从逻辑的角度来拆分系统后，得到的单元就是“模块”；从物理的角度来拆分系统后，得到的单元就是“组件”。划分模块的主要目的是职责分离---业务角度的复用；划分组件的主要目的是单元复用---代码层面的复用。","like_count":0},{"had_liked":false,"id":260433,"user_name":"公号-生活点亮技术","can_delete":false,"product_type":"c1","uid":1009329,"ip_address":"","ucode":"F807829A146624","user_header":"https://static001.geekbang.org/account/avatar/00/0f/66/b1/791d0f5e.jpg","comment_is_top":false,"comment_ctime":1605003867,"is_pvip":true,"replies":[{"id":"95074","content":"是的","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1605594794,"ip_address":"","comment_id":260433,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1605003867","product_id":100006601,"comment_content":"框架是一种架构或模式在实现层面的落地","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":509191,"discussion_content":"是的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1605594794,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":255516,"user_name":"flyCoder","can_delete":false,"product_type":"c1","uid":1074897,"ip_address":"","ucode":"82FB7B60775978","user_header":"https://static001.geekbang.org/account/avatar/00/10/66/d1/8664c464.jpg","comment_is_top":false,"comment_ctime":1603363726,"is_pvip":true,"replies":[{"id":"93165","content":"建议看三遍������","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1603422277,"ip_address":"","comment_id":255516,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1603363726","product_id":100006601,"comment_content":"重新看这篇专栏，又对架构有了新的理解，不同的视角，不同的架构。","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":507740,"discussion_content":"建议看三遍������","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1603422277,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":252775,"user_name":"leesper","can_delete":false,"product_type":"c1","uid":1351104,"ip_address":"","ucode":"CC76320571BECA","user_header":"https://static001.geekbang.org/account/avatar/00/14/9d/c0/cb5341ec.jpg","comment_is_top":false,"comment_ctime":1602484252,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1602484252","product_id":100006601,"comment_content":"架构设计是系统如何分解为子系统，子系统如何设计的艺术","like_count":0},{"had_liked":false,"id":250212,"user_name":"文中月","can_delete":false,"product_type":"c1","uid":2206394,"ip_address":"","ucode":"F0D72F96C10F6B","user_header":"https://static001.geekbang.org/account/avatar/00/21/aa/ba/849989dd.jpg","comment_is_top":false,"comment_ctime":1600993456,"is_pvip":false,"replies":[{"id":"91866","content":"系统架构是统称，包括：业务架构，应用架构，部署架构，逻辑架构等，从不同的角度去描述系统就得到不同的架构","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1601431256,"ip_address":"","comment_id":250212,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1600993456","product_id":100006601,"comment_content":"系统架构这个词是不是就不太对？<br>应用架构，业务架构是不是就是一种划分形式？","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":506154,"discussion_content":"系统架构是统称，包括：业务架构，应用架构，部署架构，逻辑架构等，从不同的角度去描述系统就得到不同的架构","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1601431256,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":246612,"user_name":"婕妤","can_delete":false,"product_type":"c1","uid":2165704,"ip_address":"","ucode":"5D2F52DB1C0E88","user_header":"https://static001.geekbang.org/account/avatar/00/21/0b/c8/9b094b32.jpg","comment_is_top":false,"comment_ctime":1599438783,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1599438783","product_id":100006601,"comment_content":"架构是从各种可能角度对软件结构的描述。","like_count":0},{"had_liked":false,"id":245330,"user_name":"escray","can_delete":false,"product_type":"c1","uid":1020525,"ip_address":"","ucode":"1F4204930E47C4","user_header":"https://static001.geekbang.org/account/avatar/00/0f/92/6d/becd841a.jpg","comment_is_top":false,"comment_ctime":1598915132,"is_pvip":true,"replies":[{"id":"90272","content":"框架是一种实现规范","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1598946045,"ip_address":"","comment_id":245330,"utype":1}],"discussion_count":1,"race_medal":2,"score":"1598915132","product_id":100006601,"comment_content":"IBM RUP 软件架构 4+1 视图：<br><br>* 逻辑视图 Logic View，面向对象模型，功能需求<br>* 处理视图 Process View，运行时的并发和同步，运行时质量（性能、可伸缩、安全……）<br>* 开发视图 Development View，开发环境下静态组织，开发期质量（可扩展、可移植、易理解……）<br>* 物理视图 Physical view，硬件分布，安装和部署需求<br>* 用户场景 Scenarios<br><br>能画好这个 4+1 视图，那么对于需求的理解也就比较到位了，其中逻辑视图和物理视图用的比较多一些。<br><br>运用RUP 4+1视图方法进行软件架构设计<br>https:&#47;&#47;www.ibm.com&#47;developerworks&#47;cn&#47;rational&#47;06&#47;r-wenyu&#47;index.html<br><br>&gt; 软件架构指软件系统的顶层结构<br><br>我之前对于软件架构的理解比较模糊，一方面更接近于手脚架之类的辅助框架，另一方面类似与系统的抽象结构。我觉的将框架和架构分开是比较合乎逻辑的，架构似乎更抽象一些，而框架偏向于实现。","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":504854,"discussion_content":"框架是一种实现规范","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1598946045,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":245012,"user_name":"我爱小婷婷吖","can_delete":false,"product_type":"c1","uid":1261696,"ip_address":"","ucode":"A084363938D809","user_header":"https://static001.geekbang.org/account/avatar/00/13/40/80/6238efb8.jpg","comment_is_top":false,"comment_ctime":1598782693,"is_pvip":false,"replies":[{"id":"90274","content":"大道相通","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1598946104,"ip_address":"","comment_id":245012,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1598782693","product_id":100006601,"comment_content":"看了下面评论我个人觉得这个架构和我小时候跟我爸在老家盖房子一样先确定好盖什么样的房子 是钢筋混凝土还是砖房等 不管是哪一种都需要一个支撑点 当处理好这些点 房子也就出来了 架构也是一样选好技术 处理好单元 模块 子系统等这些就盖房子的点 它们都不会单一存在除非瞎写着玩。","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":504769,"discussion_content":"大道相通","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1598946104,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":243793,"user_name":"piboye","can_delete":false,"product_type":"c1","uid":1066752,"ip_address":"","ucode":"7CFD8712857A85","user_header":"https://static001.geekbang.org/account/avatar/00/10/47/00/3202bdf0.jpg","comment_is_top":false,"comment_ctime":1598277685,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1598277685","product_id":100006601,"comment_content":"逻辑架构和物理架构，单体应用更侧重逻辑架构，微服务更多要考虑物理架构带来的影响","like_count":0},{"had_liked":false,"id":240537,"user_name":"Geek_123","can_delete":false,"product_type":"c1","uid":1641026,"ip_address":"","ucode":"9D8FB86A577D2E","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJxiaYGMly2iaflE1rK7XiaLbytUuh13DeibHK2tt8ymj1ZwdmWRETQ0sgRCYOBGMNAnq5G5ibv5KfxAQg/132","comment_is_top":false,"comment_ctime":1596962861,"is_pvip":false,"replies":[{"id":"89613","content":"是的，架构没那么神秘","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1597983982,"ip_address":"","comment_id":240537,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1596962861","product_id":100006601,"comment_content":"之前理解的架构：架构是一种很高深的东西，看不见，摸不到，只是远远的敬畏，而不敢进行接触。<br>现在的理解：软件架构和城市规划差不多，是各个方面调研和协调的结果。没有架构，软件也能运行，但是不是很顺畅，扩展性不强。","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":503480,"discussion_content":"是的，架构没那么神秘","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1597983982,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":236942,"user_name":"Jiantao","can_delete":false,"product_type":"c1","uid":1163504,"ip_address":"","ucode":"444580EC5EF109","user_header":"https://static001.geekbang.org/account/avatar/00/11/c0/f0/1aabc056.jpg","comment_is_top":false,"comment_ctime":1595597601,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1595597601","product_id":100006601,"comment_content":"架构是顶层设计；框架是面向编程或配置的半成品；组件是从技术维度上的复用；模块是从业务维度上职责的划分；系统是相互协同可运行的实体。#cp","like_count":0},{"had_liked":false,"id":236207,"user_name":"陈诚","can_delete":false,"product_type":"c1","uid":1498273,"ip_address":"","ucode":"BF0905C6539C06","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKbt3JKCxyeRvkfXMSlkbHlwFqPjXw5kZAXxzKhC8aRtNUyUl7nfmMdnZh88oibfOChuNPCODPMyibQ/132","comment_is_top":false,"comment_ctime":1595345214,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1595345214","product_id":100006601,"comment_content":"我理解的架构是从业务和技术角度来看待。也就是系统架构对应业务角度，采用了哪些组件（比如nginx、mysql、springMVC）是从技术角度来看。","like_count":0},{"had_liked":false,"id":236125,"user_name":"helloworld","can_delete":false,"product_type":"c1","uid":1015754,"ip_address":"","ucode":"00DF2FEC58D2E6","user_header":"https://static001.geekbang.org/account/avatar/00/0f/7f/ca/ea85bfdd.jpg","comment_is_top":false,"comment_ctime":1595322206,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1595322206","product_id":100006601,"comment_content":"1. 通过从不同的角度对“学生信息管理系统”的描述，从而得出了不同的描述方式；不同的描述方式（术语）其实说的是同一个东西<br>2. 我所理解的架构是从技术角度来考虑的：<br>1）一个系统的技术栈组成是什么<br>2）各个模块是如何交互的<br>3）项目的部署形式什么样的<br>4）如果是B&#47;S架构的话是前后端段分离还是前后端不分离","like_count":0},{"had_liked":false,"id":235644,"user_name":"慎独明强","can_delete":false,"product_type":"c1","uid":1965699,"ip_address":"","ucode":"DC2F7F2C0C8F60","user_header":"https://static001.geekbang.org/account/avatar/00/1d/fe/83/df562574.jpg","comment_is_top":false,"comment_ctime":1595135418,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1595135418","product_id":100006601,"comment_content":"架构：我的理解，整个自己负责系统有哪些模块，上下游有哪些模块，各模块之间是怎么交互的，用了哪些中间组件。这就是我们系统的架构","like_count":0},{"had_liked":false,"id":232108,"user_name":"fangxuan","can_delete":false,"product_type":"c1","uid":1073369,"ip_address":"","ucode":"3870F2BF5679A2","user_header":"https://static001.geekbang.org/account/avatar/00/10/60/d9/829ac53b.jpg","comment_is_top":false,"comment_ctime":1593856618,"is_pvip":false,"discussion_count":0,"race_medal":1,"score":"1593856618","product_id":100006601,"comment_content":"我原先理解的架构就是一个系统中各个模块(组件、子系统)之间的组织关系","like_count":0},{"had_liked":false,"id":231432,"user_name":"jiao","can_delete":false,"product_type":"c1","uid":1042677,"ip_address":"","ucode":"381AE675D9FA7D","user_header":"https://static001.geekbang.org/account/avatar/00/0f/e8/f5/e758b7b6.jpg","comment_is_top":false,"comment_ctime":1593675890,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1593675890","product_id":100006601,"comment_content":"感觉业务架构偏向于：系统涉及的模块和组建，以及它们的关联关系。 <br>系统型的架构偏向于：将问题一层层尽可能最下化抽象，由这些抽象层以及它们之间的数据流关系组成。","like_count":0},{"had_liked":false,"id":231221,"user_name":"C.","can_delete":false,"product_type":"c1","uid":1390396,"ip_address":"","ucode":"8573488D4EBAC4","user_header":"https://static001.geekbang.org/account/avatar/00/15/37/3c/614fc975.jpg","comment_is_top":false,"comment_ctime":1593610674,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1593610674","product_id":100006601,"comment_content":"架构是把大杂烩拆开，可以是物理也可以是逻辑。","like_count":0},{"had_liked":false,"id":230943,"user_name":"我的喵","can_delete":false,"product_type":"c1","uid":1736650,"ip_address":"","ucode":"A7435BDBDD2587","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKyuuhxu0HH4cIKCClCqx0LTurCCYWmNcFwfTWV5te5afsibp2yuDmC9mibEHx0Xy8QlvqvMWWcAib8g/132","comment_is_top":false,"comment_ctime":1593527797,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1593527797","product_id":100006601,"comment_content":"我理解架构就是在设计系统时考虑怎么按照业务去划分模块，模块之间的依赖关系，进而在实现功能模块时决定选择什么组件。如果模块复杂可以升级为子系统，那么子系统重复步骤也拥有自己的架构。","like_count":0,"discussions":[{"author":{"id":1736650,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKyuuhxu0HH4cIKCClCqx0LTurCCYWmNcFwfTWV5te5afsibp2yuDmC9mibEHx0Xy8QlvqvMWWcAib8g/132","nickname":"我的喵","note":"","ucode":"A7435BDBDD2587","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":287750,"discussion_content":"不知道是否理解的正确，希望华仔可以答复一下","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1593527927,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":230367,"user_name":"M1racle","can_delete":false,"product_type":"c1","uid":1057144,"ip_address":"","ucode":"CFA981F34AFDA8","user_header":"https://static001.geekbang.org/account/avatar/00/10/21/78/732a2e33.jpg","comment_is_top":false,"comment_ctime":1593355810,"is_pvip":true,"replies":[{"id":"85269","content":"是的，这是业务模块的设计方法","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1593516059,"ip_address":"","comment_id":230367,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1593355810","product_id":100006601,"comment_content":"我所理解的架构是数据结构的设计，需求的分析拆解，以及对于需求的具体实现，这么看来我的理解更像是一个模块的设计","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":499853,"discussion_content":"是的，这是业务模块的设计方法","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1593516059,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":230068,"user_name":"向阳敲代码","can_delete":false,"product_type":"c1","uid":1395307,"ip_address":"","ucode":"B20EE2EA52CF43","user_header":"https://static001.geekbang.org/account/avatar/00/15/4a/6b/55f6f275.jpg","comment_is_top":false,"comment_ctime":1593250158,"is_pvip":false,"replies":[{"id":"85030","content":"基础一般是指底层或者下层，顶层意味着可以自顶向下进行逐层分解，例如微信有架构，微信的朋友圈也有架构","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1593388410,"ip_address":"","comment_id":230068,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1593250158","product_id":100006601,"comment_content":"原来对架构的理解，就是简单的的认为是MVC，MVVM，MVP等。<br><br>和讲之后的架构差异在于，更体系化了，更深层次的了解并剖析了之前没有意识并思考的 系统，个体，关联，模块，组件，规则，结构这些概念定义。很受益匪浅。<br><br>有一个不太理解的地方，如下:<br><br>&quot;第三，维基百科定义的架构用到了“基础结构”这个说法，我改为“顶层结构”，可以更好地区分系统和子系统，避免将系统架构和子系统架构混淆在一起导致架构层次混乱。&quot;<br><br>不理解的地方是 为何 &quot;基础结构&quot; 改为 &quot;顶层结构&quot; 的说法，反而能更好区分 系统和 子系统呢？<br><br>望作者大佬回复。感谢😊","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":499751,"discussion_content":"基础一般是指底层或者下层，顶层意味着可以自顶向下进行逐层分解，例如微信有架构，微信的朋友圈也有架构","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1593388410,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":229186,"user_name":"黑洞","can_delete":false,"product_type":"c1","uid":1451364,"ip_address":"","ucode":"840A4330B1B2F0","user_header":"https://static001.geekbang.org/account/avatar/00/16/25/64/d66ea739.jpg","comment_is_top":false,"comment_ctime":1592919193,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1592919193","product_id":100006601,"comment_content":"我认为架构是比框架更宽更广的概念。比如我们开发windows客户端软件，你可以采用MFC框架，也可以用Qt框架，也可以用VCL框架或者其他插件框架，但是采用多进程还是多线程，支持什么网络协议，是否采用COM技术或者CORBA技术，支持多用户还是单用户，安全隐私问题如何保证，等等则是架构问题。","like_count":0},{"had_liked":false,"id":227541,"user_name":"杰飞Harry","can_delete":false,"product_type":"c1","uid":1555013,"ip_address":"","ucode":"175DDAB485BEEB","user_header":"https://static001.geekbang.org/account/avatar/00/17/ba/45/77d230b4.jpg","comment_is_top":false,"comment_ctime":1592404109,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1592404109","product_id":100006601,"comment_content":"之前理解的架构:除了逻辑事件之外的基础收 发 存等是架构。","like_count":0},{"had_liked":false,"id":226890,"user_name":"懵not萌de","can_delete":false,"product_type":"c1","uid":1538657,"ip_address":"","ucode":"58871D47527212","user_header":"https://static001.geekbang.org/account/avatar/00/17/7a/61/c2ffe31a.jpg","comment_is_top":false,"comment_ctime":1592224618,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1592224618","product_id":100006601,"comment_content":"其实架构种类挺多的，模块化开发的面向对象的，到大规模的面向服务的，以及现在比较常见的微服务的…架构的诞生往往伴随着时代的发展。早期功能单一的时候架构往往只注重于组件结合模式，随着系统功能的复杂化，一个产品往往有各种功能，则要从系统去整合进行层次化开发，层次化开发遇到性能瓶颈了，就考虑把一个系统抽象成各个子系统共同运行","like_count":0},{"had_liked":false,"id":226814,"user_name":"周彬","can_delete":false,"product_type":"c1","uid":1518339,"ip_address":"","ucode":"5F8ACBAED8E1E3","user_header":"https://static001.geekbang.org/account/avatar/00/17/2b/03/a190dd3e.jpg","comment_is_top":false,"comment_ctime":1592208924,"is_pvip":false,"replies":[{"id":"83680","content":"且看后文分解😁","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1592302953,"ip_address":"","comment_id":226814,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1592208924","product_id":100006601,"comment_content":"架构是指软件架构吧？  和负责网络 或 操作系统 或 数据库的 基础架构，是不同的概念吧？","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":498374,"discussion_content":"且看后文分解😁","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1592302953,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":226795,"user_name":"wesley","can_delete":false,"product_type":"c1","uid":1107003,"ip_address":"","ucode":"D55BE5B3320C2D","user_header":"https://static001.geekbang.org/account/avatar/00/10/e4/3b/9c3afa01.jpg","comment_is_top":false,"comment_ctime":1592205634,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1592205634","product_id":100006601,"comment_content":"和建房子一样，架构是结构，是顶层设计。框架是规范，是指南。","like_count":0},{"had_liked":false,"id":217320,"user_name":"程序员小岑","can_delete":false,"product_type":"c1","uid":1004089,"ip_address":"","ucode":"ECDE8A03AB3A31","user_header":"https://static001.geekbang.org/account/avatar/00/0f/52/39/3cc59148.jpg","comment_is_top":false,"comment_ctime":1589464601,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1589464601","product_id":100006601,"comment_content":"“系统是一群关联个体组成”，这些“个体”可以是“子系统”“模块”“组件”等；架构需要明确系统包含哪些“个体”。其次，系统中的个体需要“根据某种规则”运作，架构需要明确个体运作和协作的规则。","like_count":0},{"had_liked":false,"id":217318,"user_name":"程序员小岑","can_delete":false,"product_type":"c1","uid":1004089,"ip_address":"","ucode":"ECDE8A03AB3A31","user_header":"https://static001.geekbang.org/account/avatar/00/0f/52/39/3cc59148.jpg","comment_is_top":false,"comment_ctime":1589464551,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1589464551","product_id":100006601,"comment_content":"架构定义的是多个子系统如何组合，框架更多的是单个系统内是如何组合的","like_count":0},{"had_liked":false,"id":217315,"user_name":"程序员小岑","can_delete":false,"product_type":"c1","uid":1004089,"ip_address":"","ucode":"ECDE8A03AB3A31","user_header":"https://static001.geekbang.org/account/avatar/00/0f/52/39/3cc59148.jpg","comment_is_top":false,"comment_ctime":1589464458,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1589464458","product_id":100006601,"comment_content":"我原先理解的架构就是，多个系统按各自的职责进行拆分，并根据职能进行分层，可复用的部分下沉。","like_count":0},{"had_liked":false,"id":214842,"user_name":"一光年","can_delete":false,"product_type":"c1","uid":1576620,"ip_address":"","ucode":"779FEC7C42C1F7","user_header":"https://static001.geekbang.org/account/avatar/00/18/0e/ac/198a5c0c.jpg","comment_is_top":false,"comment_ctime":1588829999,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1588829999","product_id":100006601,"comment_content":"架构是对重复性业务的抽象和未来业务拓展的前瞻，强调的是架构师过去的行业经验和对未来行业的预见能力。","like_count":0},{"had_liked":false,"id":213735,"user_name":"蔚","can_delete":false,"product_type":"c1","uid":1350352,"ip_address":"","ucode":"9DE79853A826A0","user_header":"https://static001.geekbang.org/account/avatar/00/14/9a/d0/dd1ce0d0.jpg","comment_is_top":false,"comment_ctime":1588527422,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1588527422","product_id":100006601,"comment_content":"我理解的架构是   用什么框架来做系统","like_count":0},{"had_liked":false,"id":205361,"user_name":"fromk7","can_delete":false,"product_type":"c1","uid":1618629,"ip_address":"","ucode":"0EE21A43A6701D","user_header":"http://thirdwx.qlogo.cn/mmopen/2kpMNDYsSfCibibkl1x62jWtAIjQ0E7KWnS2dwnvRFAzbGkic2PUqGshmag6XWn3Uxf5OJmulYeDXdBpiaxG0G0bhHLCxDJWld56/132","comment_is_top":false,"comment_ctime":1586598117,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1586598117","product_id":100006601,"comment_content":"架构是各组件&#47;系统的组合规范","like_count":0},{"had_liked":false,"id":202421,"user_name":"L","can_delete":false,"product_type":"c1","uid":1950798,"ip_address":"","ucode":"DE805C7442AA3F","user_header":"https://static001.geekbang.org/account/avatar/00/1d/c4/4e/3a25dedf.jpg","comment_is_top":false,"comment_ctime":1585986572,"is_pvip":false,"replies":[{"id":"76108","content":"你用spring boot来开发，spring boot就是框架，不管你架构是拆分为两个还是三个子系统系统","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1586255736,"ip_address":"","comment_id":202421,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1585986572","product_id":100006601,"comment_content":"老师 不是很理解框架和架构的区别。<br>就学生管理系统来说的话 如何以架构的思想来描述，又如何以框架的概念来阐述","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":490580,"discussion_content":"你用spring boot来开发，spring boot就是框架，不管你架构是拆分为两个还是三个子系统系统","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1586255736,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":198612,"user_name":"南湾小猪","can_delete":false,"product_type":"c1","uid":1273951,"ip_address":"","ucode":"B8D3208F33310A","user_header":"https://static001.geekbang.org/account/avatar/00/13/70/5f/bcf802bb.jpg","comment_is_top":false,"comment_ctime":1585459710,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1585459710","product_id":100006601,"comment_content":"我原来理解的架构就是整个系统由某些模块组成，这些模块选择了某些具体技术栈来实现。","like_count":0},{"had_liked":false,"id":196030,"user_name":"Mark","can_delete":false,"product_type":"c1","uid":1078374,"ip_address":"","ucode":"719442E6ED8A91","user_header":"https://static001.geekbang.org/account/avatar/00/10/74/66/451b6b79.jpg","comment_is_top":false,"comment_ctime":1585231849,"is_pvip":false,"replies":[{"id":"74876","content":"合适的，正好可以拿ssm来验证我的内容","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1585539790,"ip_address":"","comment_id":196030,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1585231849","product_id":100006601,"comment_content":"刚刚学会ssm的初学者，合适学习架构吗？","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":489213,"discussion_content":"合适的，正好可以拿ssm来验证我的内容","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585539790,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":192528,"user_name":"霸蛮人","can_delete":false,"product_type":"c1","uid":1929137,"ip_address":"","ucode":"EAB5F275D69490","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/73JN7HxoDAxjPmSWlaGydX6Cpico0aWNIP6mHYibB5BsYcLRt3f7Lm3ZgvtLYWTnBKm9D8bicZI7Q02UTicTiaXycLA/132","comment_is_top":false,"comment_ctime":1584857549,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1584857549","product_id":100006601,"comment_content":"架构是针对特定目标，对资源进行有效组合的形式。<br>框架是针对某类目标，抽象出来的通用的资源组织形式，可以看成是一种优秀的、成熟的架构。","like_count":0},{"had_liked":false,"id":192017,"user_name":"长街","can_delete":false,"product_type":"c1","uid":1929903,"ip_address":"","ucode":"1389AADC2859CB","user_header":"https://static001.geekbang.org/account/avatar/00/1d/72/af/474fc618.jpg","comment_is_top":false,"comment_ctime":1584812266,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1584812266","product_id":100006601,"comment_content":"打卡","like_count":0},{"had_liked":false,"id":191051,"user_name":"杨小松","can_delete":false,"product_type":"c1","uid":1111742,"ip_address":"","ucode":"D89CAA76C60C13","user_header":"https://static001.geekbang.org/account/avatar/00/10/f6/be/e5b04e7d.jpg","comment_is_top":false,"comment_ctime":1584720294,"is_pvip":false,"replies":[{"id":"74892","content":"温故知新","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1585540675,"ip_address":"","comment_id":191051,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1584720294","product_id":100006601,"comment_content":"再学一遍","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":488106,"discussion_content":"温故知新","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585540675,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":188584,"user_name":"Next","can_delete":false,"product_type":"c1","uid":1748213,"ip_address":"","ucode":"D5ADDF248A9504","user_header":"https://static001.geekbang.org/account/avatar/00/1a/ac/f5/2f97e279.jpg","comment_is_top":false,"comment_ctime":1584371707,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1584371707","product_id":100006601,"comment_content":"我对架构的理解<br>    - 通过代码结构、服务部署结构提升代码或业务的可扩展性、可维护性、可读性、可用性，降级开发运维成本<br>    - 架构是自顶向下设计的<br>    - 架构的对象是系统，需要明确并划分包含的子系统、模块、组件，明确各个组成单元的个体运作和协作规则","like_count":0},{"had_liked":false,"id":182801,"user_name":"业余爱好者","can_delete":false,"product_type":"c1","uid":1482915,"ip_address":"","ucode":"A890935A982988","user_header":"https://static001.geekbang.org/account/avatar/00/16/a0/a3/8da99bb0.jpg","comment_is_top":false,"comment_ctime":1582868588,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1582868588","product_id":100006601,"comment_content":"之前知识使用架构这个词，但是从没细想过这个词的含义。知识就是经不住问，一问，理解没理解就一清二楚了。<br><br>从业务这个层次看，模块可以理解为一个服务。组件是一个服务中的一个部分，承担部分功能，依赖与模块存在。<br><br>框架是为了加快开发，是一种半成品，在开发期起作用。<br><br>架构是一个运行中的实体，用于为用户提供服务。","like_count":0},{"had_liked":false,"id":181932,"user_name":"谭方敏","can_delete":false,"product_type":"c1","uid":1710960,"ip_address":"","ucode":"728DC7ECB7C902","user_header":"https://static001.geekbang.org/account/avatar/00/1a/1b/70/547042ee.jpg","comment_is_top":false,"comment_ctime":1582682236,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1582682236","product_id":100006601,"comment_content":"架构：结构，<br>框架：规范，<br>模块：逻辑上划分，用于分清职责。<br>组件：物理上划分，用于重复利用。<br><br>架构注重于系统性，比如软件顶层结构，<br>而框架注重于局部性，比如软件部分功能。<br><br><br>","like_count":0},{"had_liked":false,"id":175603,"user_name":"北极的大企鹅","can_delete":false,"product_type":"c1","uid":1045577,"ip_address":"","ucode":"8935346D08E109","user_header":"https://static001.geekbang.org/account/avatar/00/0f/f4/49/2add4f6b.jpg","comment_is_top":false,"comment_ctime":1580778903,"is_pvip":false,"replies":[{"id":"69946","content":"这个就是从不同的角度去看系统","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1582192325,"ip_address":"","comment_id":175603,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1580778903","product_id":100006601,"comment_content":"架构就是在做资源的平衡,记得架构好像还有划分什么基础架构,系统架构,业务架构,这个可以谈谈吗,实际工作面试的时候,要怎么选择,和发现自己擅长哪个","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":482821,"discussion_content":"这个就是从不同的角度去看系统","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582192325,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1045577,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/f4/49/2add4f6b.jpg","nickname":"北极的大企鹅","note":"","ucode":"8935346D08E109","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":183663,"discussion_content":"那实际工作面试架构的话，要怎么知道选的这个架构是自己想做的那个架构，这里不是很清楚","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582507153,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":170016,"user_name":"Nextep","can_delete":false,"product_type":"c1","uid":1210913,"ip_address":"","ucode":"6F34D8BDAC0015","user_header":"https://static001.geekbang.org/account/avatar/00/12/7a/21/7623745d.jpg","comment_is_top":false,"comment_ctime":1578493044,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1578493044","product_id":100006601,"comment_content":"正如作者写的，计算机起源于国外，好好理解几个单词的真实含义就理解透测了，感谢作者！","like_count":0},{"had_liked":false,"id":169507,"user_name":"徐大恺","can_delete":false,"product_type":"c1","uid":1251755,"ip_address":"","ucode":"7E9B64FC5C0B45","user_header":"https://static001.geekbang.org/account/avatar/00/13/19/ab/0f258dbb.jpg","comment_is_top":false,"comment_ctime":1578366893,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1578366893","product_id":100006601,"comment_content":"总结一下：<br>系统是一群关联个体，在架构规则的组织约束下，并且在具有一定能力的基础框架的支撑下，有机结合，提供超出个体能力范围以外的新的能力用于解决复杂的业务场景下的需求","like_count":0},{"had_liked":false,"id":163352,"user_name":"Geek_steven_wang","can_delete":false,"product_type":"c1","uid":1477120,"ip_address":"","ucode":"8CC8F4C9726191","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTI8mFt5wSkia31qc8paRg2uPSB6AuEBDricrSxvFBuTpP3NnnflekpJ7wqvN0nRrJyu7zVbzd7Lwjxw/132","comment_is_top":false,"comment_ctime":1576710524,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1576710524","product_id":100006601,"comment_content":"软件架构指软件系统的顶层结构，架构设计就是对此结构的判断、拆解、组装、取舍，使其满足业务对该系统的最核心架构需求（高可用、高性能、可扩展等）","like_count":0},{"had_liked":false,"id":156534,"user_name":"Geek_1a7057","can_delete":false,"product_type":"c1","uid":1748664,"ip_address":"","ucode":"6A244037A612C8","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/fNVk5gZGGvQeic4wU2T4s5lkO85elfUKHLr2HBBVc63TbJ9xyOUAQeWia0VjBqOfonRrLAXNMIjMiaLFZpV8PiahJQ/132","comment_is_top":false,"comment_ctime":1574906848,"is_pvip":false,"replies":[{"id":"63229","content":"设计模式是编码层面的，架构和设计模式没有关系，同一个架构，你可以用面向过程的技术和语言去实现，也可以用面向对象的技术与语言来实现","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1577329045,"ip_address":"","comment_id":156534,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1574906848","product_id":100006601,"comment_content":"一直认为架构和设计模式有关，而设计模式是和业务有关，和mvc这种程序框架没直接关系。貌似又不是顶层设计的概念，老师，我哪里理解错了吗？","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":476145,"discussion_content":"设计模式是编码层面的，架构和设计模式没有关系，同一个架构，你可以用面向过程的技术和语言去实现，也可以用面向对象的技术与语言来实现","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577329045,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":151493,"user_name":"lanco","can_delete":false,"product_type":"c1","uid":1188352,"ip_address":"","ucode":"C24A0A8716C78C","user_header":"https://static001.geekbang.org/account/avatar/00/12/22/00/abb7bfe3.jpg","comment_is_top":false,"comment_ctime":1573730625,"is_pvip":true,"replies":[{"id":"59070","content":"非常有必要，否则大家心里的画像不一样那怎么交流，是不是鸡同鸭讲一样？","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1574303523,"ip_address":"","comment_id":151493,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1573730625","product_id":100006601,"comment_content":"在我看来没必要去特定对这些抽象词语下概念，大家心里有一个画像认知就好","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":474499,"discussion_content":"非常有必要，否则大家心里的画像不一样那怎么交流，是不是鸡同鸭讲一样？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574303523,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":142905,"user_name":"乄恰似一种蜕变","can_delete":false,"product_type":"c1","uid":1452626,"ip_address":"","ucode":"E0E2E5F7CFF85A","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/PvD4ZpoY41ltqyxZq6Xxl0zmpb9jEPYibBRE5TSe87ec788cBHYWEYl2Rsy7BVZNjNFcWP95TCB4Iopv5HKWrjw/132","comment_is_top":false,"comment_ctime":1571579268,"is_pvip":false,"replies":[{"id":"55448","content":"加油","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1571747212,"ip_address":"","comment_id":142905,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1571579268","product_id":100006601,"comment_content":"没有学习架构之前，没有特意都去了解架构，原来就是把架构简单都分成业务架构和技术架构，对模块和组件对概念也比较模糊。看完这篇文章，才对这些容易混淆对概念有一个了解，学到知识了。","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":471319,"discussion_content":"加油","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571747212,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":140622,"user_name":"有米","can_delete":false,"product_type":"c1","uid":1005042,"ip_address":"","ucode":"C9A10B7A67BC12","user_header":"https://static001.geekbang.org/account/avatar/00/0f/55/f2/ba68d931.jpg","comment_is_top":false,"comment_ctime":1571017595,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1571017595","product_id":100006601,"comment_content":"架构是抽象的与实现语言无关。框架通常是某一类语言对于架构的实现，是组成架构的一部分。","like_count":0},{"had_liked":false,"id":133677,"user_name":"张晓畅歌","can_delete":false,"product_type":"c1","uid":1262402,"ip_address":"","ucode":"F16199F559C9BC","user_header":"https://static001.geekbang.org/account/avatar/00/13/43/42/e230b518.jpg","comment_is_top":false,"comment_ctime":1568633786,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1568633786","product_id":100006601,"comment_content":"架构应该是一个总体结构，类似一个总体布局，规划了子系统或者模块的数量，以及协作方式。框架类似于基础设施，如房子的地基，比如spring框架，在这个框架下加入功能使其成为有血有肉可用的系统。按照功能或者业务划分为不同模块，当然模块或者几个关联比较紧密的模块组成一个系统。多个系统协作构成一个更大的系统。有很多模块和系统可能公用的叫做组建，例如缓存和MySQL组建。","like_count":0},{"had_liked":false,"id":131919,"user_name":"小白超","can_delete":false,"product_type":"c1","uid":1113951,"ip_address":"","ucode":"D6980D5E88485D","user_header":"","comment_is_top":false,"comment_ctime":1567968231,"is_pvip":false,"replies":[{"id":"50490","content":"正确","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1568034292,"ip_address":"","comment_id":131919,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1567968231","product_id":100006601,"comment_content":"以前没有按照不同的角度来看待系统，现在我总结为：业务逻辑角度（登录，聊天，朋友圈），功能模块角度（存储，web server，搜索），物理模块角度（MySQL, Nginx, gunicorn）欢迎大家指正","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":466679,"discussion_content":"正确","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1568034292,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":127254,"user_name":"钱","can_delete":false,"product_type":"c1","uid":1009652,"ip_address":"","ucode":"2C92A243A463D4","user_header":"https://static001.geekbang.org/account/avatar/00/0f/67/f4/9a1feb59.jpg","comment_is_top":false,"comment_ctime":1566623896,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1566623896","product_id":100006601,"comment_content":"有句话叫——不要听她说什么，要仔细的看她做什么。<br><br>为此我专门把我的工位搬到了我们架构师的对面，据我观察，架构师就是需要自己给出选项并且从中选一个，当然需要说明她的选择依据，除架构师以外的程序员需要做的作文题，架构选定了方向我们要长篇大论的按照这个主题写出来。<br>另外，还发现架构不需要开早会、不需要写周报、选定方向后可以继续研究技术，为下一次拍板定方案补充更多的支撑依据。","like_count":0},{"had_liked":false,"id":125510,"user_name":"舒偌一","can_delete":false,"product_type":"c1","uid":1053833,"ip_address":"","ucode":"C1F87ED4E84FD9","user_header":"https://static001.geekbang.org/account/avatar/00/10/14/89/229bb890.jpg","comment_is_top":false,"comment_ctime":1566197180,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1566197180","product_id":100006601,"comment_content":"架构是为了解决具体问题而设计的一种结构，类似于建筑设计图。","like_count":0},{"had_liked":false,"id":122997,"user_name":"剑八","can_delete":false,"product_type":"c1","uid":1297630,"ip_address":"","ucode":"0A09F41DB8A4E7","user_header":"https://static001.geekbang.org/account/avatar/00/13/cc/de/e28c01e1.jpg","comment_is_top":false,"comment_ctime":1565584905,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1565584905","product_id":100006601,"comment_content":"架构就是系统的架子<br>架构包含了组件，框架，实体","like_count":0},{"had_liked":false,"id":122417,"user_name":"fomy","can_delete":false,"product_type":"c1","uid":1125834,"ip_address":"","ucode":"CD87EA03B1F327","user_header":"https://static001.geekbang.org/account/avatar/00/11/2d/ca/02b0e397.jpg","comment_is_top":false,"comment_ctime":1565362243,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1565362243","product_id":100006601,"comment_content":"车是一个系统，包括电路子系统、控制子系统。其中包括刹车、报警等模块等。其中发动机、油缸等是一个个组件。框架是各种造车的规范，比如车的最大的长、宽、高等。架构是整体车的结构。","like_count":0},{"had_liked":false,"id":121674,"user_name":"Geek_5aa3a1","can_delete":false,"product_type":"c1","uid":1589327,"ip_address":"","ucode":"DDDBA4425379FA","user_header":"","comment_is_top":false,"comment_ctime":1565181148,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1565181148","product_id":100006601,"comment_content":"我原来理解的架构，就是把各个子系统（服务）如何进行关联及调用关系，用到什么数据存储组件。","like_count":0},{"had_liked":false,"id":121645,"user_name":"云师兄","can_delete":false,"product_type":"c1","uid":1205777,"ip_address":"","ucode":"EB19F80070FE23","user_header":"https://static001.geekbang.org/account/avatar/00/12/66/11/f7408e3e.jpg","comment_is_top":false,"comment_ctime":1565175885,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1565175885","product_id":100006601,"comment_content":"角度不同分拆的也不同。之前分拆为系统，子系统，模块，组件，框架。现在合为架构也是符合技术的演进方向","like_count":0},{"had_liked":false,"id":119503,"user_name":"uncleof3","can_delete":false,"product_type":"c1","uid":1101825,"ip_address":"","ucode":"7CAB05DF8EEFFC","user_header":"https://static001.geekbang.org/account/avatar/00/10/d0/01/12f2b05a.jpg","comment_is_top":false,"comment_ctime":1564620124,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1564620124","product_id":100006601,"comment_content":"1.架构是什么？核心是拆分<br>2.为什么架构也不是软件危机的银弹？软件最终是为了解决系统诉求，诉求多变，资源多变，架构师要做的是规划，平衡，找到问题","like_count":0},{"had_liked":false,"id":118275,"user_name":"啦啦啦","can_delete":false,"product_type":"c1","uid":1131687,"ip_address":"","ucode":"6B12EC90A62525","user_header":"https://static001.geekbang.org/account/avatar/00/11/44/a7/171c1e86.jpg","comment_is_top":false,"comment_ctime":1564307205,"is_pvip":false,"replies":[{"id":"43766","content":"加油","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1564568213,"ip_address":"","comment_id":118275,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1564307205","product_id":100006601,"comment_content":"二刷","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":460339,"discussion_content":"加油","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1564568213,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":114080,"user_name":"客舟听雨来coding","can_delete":false,"product_type":"c1","uid":1026219,"ip_address":"","ucode":"753F4B779CC416","user_header":"https://static001.geekbang.org/account/avatar/00/0f/a8/ab/5d25cd32.jpg","comment_is_top":false,"comment_ctime":1563236660,"is_pvip":true,"replies":[{"id":"41830","content":"这个递归最后终结于代码😀","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1563356127,"ip_address":"","comment_id":114080,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1563236660","product_id":100006601,"comment_content":"原来理解的架构是系统的分层，清晰划分各层职责，没有从更加高层的角度去关注系统各层间的协作和运作规则。对系统中的子系统、模块、组件没有关注到。<br><br>现在理解的架构是对现实问题解决方案的一种愿景。在这愿景下我们的架构是对相实现实问题的通用解决方案，对细枝末节则由系统内部更加细粒度的成员，比如模块，组件来进行解决。所以，模块和组件或者子系统又有自己的一套架构来解决系统下的细枝末节问题。可以看来，这是一个递归的过程。<br><br>可以看出，这个递归其实是没有跳出的时候，所以也解释了为什么好的架构是演进出来的。因为不断遇到问题，不断的解决。","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":458506,"discussion_content":"这个递归最后终结于代码😀","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1563356127,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":109414,"user_name":"连凯","can_delete":false,"product_type":"c1","uid":1285674,"ip_address":"","ucode":"646B49BD6AED24","user_header":"https://static001.geekbang.org/account/avatar/00/13/9e/2a/4ec51bfe.jpg","comment_is_top":false,"comment_ctime":1562030619,"is_pvip":false,"replies":[{"id":"39889","content":"加油，坚持学完","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1562193695,"ip_address":"","comment_id":109414,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1562030619","product_id":100006601,"comment_content":"太棒了，彻底搞明白了这些容易混淆的概念，一下子豁然开朗，看来作者道行很深啊！","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":456400,"discussion_content":"加油，坚持学完","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1562193695,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":105891,"user_name":"夕林语","can_delete":false,"product_type":"c1","uid":1264180,"ip_address":"","ucode":"B57681D0C73E1B","user_header":"https://static001.geekbang.org/account/avatar/00/13/4a/34/1faac99b.jpg","comment_is_top":false,"comment_ctime":1561100402,"is_pvip":false,"discussion_count":0,"race_medal":2,"score":"1561100402","product_id":100006601,"comment_content":"我原来理解的架构就是实现一个软件系统用什么样的框架，选择什么样的框架让当前的系统更容易实现，综合考虑各种因素，比如：人力成本、技术水平、公司技术栈、时间成本等","like_count":0},{"had_liked":false,"id":95874,"user_name":"鲁班大师","can_delete":false,"product_type":"c1","uid":1179156,"ip_address":"","ucode":"4F9615DF87B031","user_header":"https://static001.geekbang.org/account/avatar/00/11/fe/14/f1532dec.jpg","comment_is_top":false,"comment_ctime":1558239407,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1558239407","product_id":100006601,"comment_content":"我理解架构是一种指导软件开发的思想，期望达成的目标有高性能，高可用，可扩展等…框架则是解决某类问题的一个集合，而功能模块则是在架构和框架的基础上搭建而成。","like_count":0},{"had_liked":false,"id":90706,"user_name":"不似旧日","can_delete":false,"product_type":"c1","uid":1161271,"ip_address":"","ucode":"DF4C5E3AB9570C","user_header":"https://static001.geekbang.org/account/avatar/00/11/b8/37/98991aeb.jpg","comment_is_top":false,"comment_ctime":1556613670,"is_pvip":false,"replies":[{"id":"33307","content":"坚持就是胜利✌","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1557459098,"ip_address":"","comment_id":90706,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1556613670","product_id":100006601,"comment_content":"今天开始我的架构学习之旅了","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":448622,"discussion_content":"坚持就是胜利✌","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1557459098,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":90387,"user_name":"开始学习吧","can_delete":false,"product_type":"c1","uid":1400873,"ip_address":"","ucode":"1EB24E7FB1C738","user_header":"https://static001.geekbang.org/account/avatar/00/15/60/29/db34c475.jpg","comment_is_top":false,"comment_ctime":1556506808,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1556506808","product_id":100006601,"comment_content":"架构是如果组织并协同组件等个体, 框架是定义如何规范具体的业务实现,更关注于代码<br>","like_count":0},{"had_liked":false,"id":85602,"user_name":"凌","can_delete":false,"product_type":"c1","uid":1120319,"ip_address":"","ucode":"D0AA0C787EE004","user_header":"https://static001.geekbang.org/account/avatar/00/11/18/3f/7b33cd3c.jpg","comment_is_top":false,"comment_ctime":1555138644,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1555138644","product_id":100006601,"comment_content":"我原来理解的架构是选取一些组件，加上业务规则，通过编码实现某个功能。现在的理解不是这样，架构是整个系统的顶层结构：它包括了系统与子系统，模块和组件，使用到的框架（面向编程或者配置的半成品）。","like_count":0},{"had_liked":false,"id":84352,"user_name":"客舟听雨来coding","can_delete":false,"product_type":"c1","uid":1026219,"ip_address":"","ucode":"753F4B779CC416","user_header":"https://static001.geekbang.org/account/avatar/00/0f/a8/ab/5d25cd32.jpg","comment_is_top":false,"comment_ctime":1554854186,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1554854186","product_id":100006601,"comment_content":"框架是一套开发规范，不同的框架有不同的开发规范。比如，Spring有它自己的开发规范，我们在配置视图解析，IOC等的时候需要遵循Spring的规范。Struts2也有它的规范，我们在配置一些配置文件的时候需要遵循Struts2开发规范。<br><br>架构是软件系统的最基础的软件模型，我们可以使用不同的框架，组件等来塑造模型，于是一个可用软件系统就诞生了","like_count":0},{"had_liked":false,"id":82620,"user_name":"xuery","can_delete":false,"product_type":"c1","uid":1027584,"ip_address":"","ucode":"F461B61BE06131","user_header":"https://static001.geekbang.org/account/avatar/00/0f/ae/00/025f37e7.jpg","comment_is_top":false,"comment_ctime":1554260852,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1554260852","product_id":100006601,"comment_content":"之前的理解架构主要从两个角度：<br>系统的技术架构是什么？app&#47;web-nginx-应用-mysql&#47;redis<br>系统的业务架构是什么？各个子模块相互交互，一起组成整个大的系统","like_count":0},{"had_liked":false,"id":79917,"user_name":"北极洲","can_delete":false,"product_type":"c1","uid":1475655,"ip_address":"","ucode":"CC21BF96F2FBE4","user_header":"https://static001.geekbang.org/account/avatar/00/16/84/47/4ecd214f.jpg","comment_is_top":false,"comment_ctime":1553573846,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1553573846","product_id":100006601,"comment_content":"原来理解的架构就只是代码的结构，除此之外还得从业务逻辑层面，部署层面，网络拓扑层再拓展","like_count":0},{"had_liked":false,"id":79097,"user_name":"aNthony","can_delete":false,"product_type":"c1","uid":1126450,"ip_address":"","ucode":"5C7777F3B18C1F","user_header":"https://static001.geekbang.org/account/avatar/00/11/30/32/e5e7ba6f.jpg","comment_is_top":false,"comment_ctime":1553351662,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1553351662","product_id":100006601,"comment_content":"个人理解：架构是结构，建筑的架构是钢筋架子；组件是具体某类钢筋，某类混凝土，某类材料；系统是整个大楼，子系统是大楼的大堂。架构这个词更偏向业务，业务是什么样的，架构就成为什么样，框架更偏向技术，把技术归类整合，形成了框架。","like_count":0},{"had_liked":false,"id":78568,"user_name":"blaz","can_delete":false,"product_type":"c1","uid":1327695,"ip_address":"","ucode":"E1B70ECA8F3338","user_header":"https://static001.geekbang.org/account/avatar/00/14/42/4f/9484d806.jpg","comment_is_top":false,"comment_ctime":1553176721,"is_pvip":true,"replies":[{"id":"28703","content":"这个是业务系统的通常做法，其他系统不一定这样做","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1553298842,"ip_address":"","comment_id":78568,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1553176721","product_id":100006601,"comment_content":"我理解的架构：先是理清业务，将之分成各个独立的子系统或者模块，每个子系统或模块实现的技术选型","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":444147,"discussion_content":"这个是业务系统的通常做法，其他系统不一定这样做","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1553298842,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":78154,"user_name":"✨贾颜睿💋","can_delete":false,"product_type":"c1","uid":1117611,"ip_address":"","ucode":"B969D241E6C0B9","user_header":"https://static001.geekbang.org/account/avatar/00/11/0d/ab/45180fcb.jpg","comment_is_top":false,"comment_ctime":1553080821,"is_pvip":false,"replies":[{"id":"28704","content":"不是我的，是专业的录音人员😂","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1553298975,"ip_address":"","comment_id":78154,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1553080821","product_id":100006601,"comment_content":"声音还蛮好听的~☺️","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":443986,"discussion_content":"不是我的，是专业的录音人员😂","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1553298975,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":74576,"user_name":"北风一叶","can_delete":false,"product_type":"c1","uid":1087302,"ip_address":"","ucode":"30310E66341D2A","user_header":"https://static001.geekbang.org/account/avatar/00/10/97/46/fe1f21d8.jpg","comment_is_top":false,"comment_ctime":1552259278,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1552259278","product_id":100006601,"comment_content":"模块：是对一个业务功能的描述<br>组件：是实现这个模块用到的技术","like_count":0},{"had_liked":false,"id":74575,"user_name":"北风一叶","can_delete":false,"product_type":"c1","uid":1087302,"ip_address":"","ucode":"30310E66341D2A","user_header":"https://static001.geekbang.org/account/avatar/00/10/97/46/fe1f21d8.jpg","comment_is_top":false,"comment_ctime":1552259184,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1552259184","product_id":100006601,"comment_content":"架构：是你的软件由什么部分，哪些内容按什么方式组织起来的<br>框架：是面向开发者，或者说开发层面的规范<br>系统：是从逻辑层面对软件的描述<br>","like_count":0},{"had_liked":false,"id":72920,"user_name":"江流","can_delete":false,"product_type":"c1","uid":1343480,"ip_address":"","ucode":"D1FDC0777BF88B","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTL23Wicb0gO9RIYCXOiajnCf92RDd0MOOGuFxx4ZKQpDDlMgLbZecMDdnfCEIPQkbebgBuic2SXfm0Gw/132","comment_is_top":false,"comment_ctime":1551755359,"is_pvip":false,"replies":[{"id":"27916","content":"定义是统一的，描述可以多个角度","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1552624812,"ip_address":"","comment_id":72920,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1551755359","product_id":100006601,"comment_content":"最近我也在想架构这个东西, 领悟一点就是:架构不能从一个维度说清楚的,所有都是通过多个维度一起来解释","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":441828,"discussion_content":"定义是统一的，描述可以多个角度","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1552624812,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":71376,"user_name":"小伟","can_delete":false,"product_type":"c1","uid":1359701,"ip_address":"","ucode":"124953423491E2","user_header":"https://static001.geekbang.org/account/avatar/00/14/bf/55/198c6104.jpg","comment_is_top":false,"comment_ctime":1551331267,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1551331267","product_id":100006601,"comment_content":"    结构化、面向对象和软件工程只是初步解决了当时遇到的问题。如结构化解决了当时最棘手的代码混乱无序的问题，但对可用性、可扩展性、可维护性等现代软件设计理念没有涉及。其中的原因有几点：<br>1. 历史发展有其规律，从简单到复杂，从肤浅到深入。人类的眼界和认识也是如此，再有前瞻性也不可能预测到还未理解的领域。60年代设计密码的人不可能理解超算的威力，80年代的人不可能理解电子支付的普及等等。所以一般只能着手解决当前问题。<br>2.业务复杂度几何倍数增加。微信、支付宝几乎融合了银行、医疗、教育、保险、出行、餐饮、娱乐等生活中必备的所有信息，其业务复杂度与单一功能的系统无法相比。软件的目的也是为业务提供服务，业务复杂度的升高也倒逼软件支撑能力的提升，问题也就纷至沓来，现有设计已捉襟见肘。<br>   不止是软件，没有一劳永逸的事。古代所谓其功于一役只是看当时的几十年，时间放宽到到百年，征伐从未停止。所谓分久必合，合久必分，自然规律，无法改变。<br>   至于架构，我们学习架构是为了洞悉软件发展的规律，从而有针对性的解决问题。","like_count":0},{"had_liked":false,"id":71307,"user_name":"康斯坦丁","can_delete":false,"product_type":"c1","uid":1368096,"ip_address":"","ucode":"C130E800E8D5C9","user_header":"https://static001.geekbang.org/account/avatar/00/14/e0/20/003190c1.jpg","comment_is_top":false,"comment_ctime":1551317833,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1551317833","product_id":100006601,"comment_content":"1 我理解的架构设计，最关注的是运行架构、逻辑架构，架构即各个组件和组件之间的交互.<br>2 对比差异:  帮我厘清组件和模块 以及 框架的概念. 但是对架构的理解没有感觉到明显的区别.","like_count":0},{"had_liked":false,"id":68736,"user_name":"晓晨同学","can_delete":false,"product_type":"c1","uid":1413041,"ip_address":"","ucode":"236AEEB786E2CE","user_header":"https://static001.geekbang.org/account/avatar/00/15/8f/b1/7b697ed4.jpg","comment_is_top":false,"comment_ctime":1550588908,"is_pvip":false,"replies":[{"id":"27890","content":"不同观察角度得出来的架构","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1552624164,"ip_address":"","comment_id":68736,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1550588908","product_id":100006601,"comment_content":"请问老师业务架构跟技术架构的区别是什么呢","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":439824,"discussion_content":"不同观察角度得出来的架构","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1552624164,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":63622,"user_name":"云师兄","can_delete":false,"product_type":"c1","uid":1205777,"ip_address":"","ucode":"EB19F80070FE23","user_header":"https://static001.geekbang.org/account/avatar/00/12/66/11/f7408e3e.jpg","comment_is_top":false,"comment_ctime":1548418324,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1548418324","product_id":100006601,"comment_content":"架构是软件的顶层结构：<br>1.架构由一部分个体组成：子系统，模块，组件<br>2.架构内有运行规则：每个个体都需要按照规则协同合作<br>3.架构是软件的顶层结构<br><br>系统与子系统：看待角度不同<br>模块与组件：是系统一部分，拆分角度不同。模块关注逻辑层面，功能划分，组件关注物理层面，单元复用<br>框架与架构：框架关注规范，架构关注结构","like_count":0},{"had_liked":false,"id":62567,"user_name":"付志波","can_delete":false,"product_type":"c1","uid":1378093,"ip_address":"","ucode":"3842BD04E255DE","user_header":"https://static001.geekbang.org/account/avatar/00/15/07/2d/eab19d59.jpg","comment_is_top":false,"comment_ctime":1548114663,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1548114663","product_id":100006601,"comment_content":"原来理解的架构就是个很笼统的概念，就是看成一些软件按照一定层次组成的系统类似于上层中层底层的方式。感觉文中提到的经典4+1视图才应该是一个完备的架构展示方法。","like_count":0},{"had_liked":false,"id":58154,"user_name":"曹宇","can_delete":false,"product_type":"c1","uid":1354271,"ip_address":"","ucode":"0CDF9B3806FB32","user_header":"https://static001.geekbang.org/account/avatar/00/14/aa/1f/38b1bb9e.jpg","comment_is_top":false,"comment_ctime":1547003689,"is_pvip":true,"replies":[{"id":"21468","content":"后面有讲解，你这个架构理解适合业务系统架构，对其它的不一定适应","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1547429948,"ip_address":"","comment_id":58154,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1547003689","product_id":100006601,"comment_content":"老师你好，以下是我对架构设计的粗浅理解，望老师指出理解偏差的地方。<br>设计一个具体的系统，首先从两个层次分析：<br><br>1. 业务需求&#47;功能（对外体现的系统能力）<br><br>1.1 框架制定（分析需求边界、能力范围，制定约束和规范），包括：具体功能，可靠性，性能，可服务性（易用性）展开<br><br>1.2 子系统或者具体模块的框架制定，步骤同1.1，同时明确模块间关系，交互流程（业务流程）。<br><br>2. 满足业务的具体内部实现 （为满足系统能力，内部使用的相关组件及技术）<br><br>2.1 架构设计 （根据制定的框架，设计满足其能力总体组件结构），包括：确定组件结构（从计算、存储、网络方面考虑）选择应用组件（例如，选用MVC结构或者分布式架构或者微服务结构）。<br><br>2.2 子系统或者具体模块组件选择和实现，明确模块间消息通信形象，数据流向（数据流）<br><br>第三方组件，了解组件能力，包括（功能和限制）<br><br>自主开发，明确能力<br><br>代码设计层次： 算法（时间复杂度，空间复杂度）。<br><br>代码实现层次：UT，code review，串讲。静态检查，动态检查, CICD<br><br>","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":435933,"discussion_content":"后面有讲解，你这个架构理解适合业务系统架构，对其它的不一定适应","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1547429948,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":56739,"user_name":"Geek_b8f728","can_delete":false,"product_type":"c1","uid":1262889,"ip_address":"","ucode":"A2CEA11A496492","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIwfpclhibqJnGJaKFSAnmy5PGhZWKsNJaIUfwNrqoAibNuFXfInEslrXQ4GibCgpagXLwc4WFmlicoQQ/132","comment_is_top":false,"comment_ctime":1546532605,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1546532605","product_id":100006601,"comment_content":"以为的架构：在对项目性能与功能需要的认识基础上，选择对应合适的框架、存储系统、开发语言、中间件等，所组成的一个项目实体。<br>对比讲师的定义是体现了系统与子系统的特性而突出了最主要的结构。","like_count":0},{"had_liked":false,"id":55967,"user_name":"快乐的萤火虫","can_delete":false,"product_type":"c1","uid":1363757,"ip_address":"","ucode":"B3A042BA21D070","user_header":"https://static001.geekbang.org/account/avatar/00/14/cf/2d/52c7a5f5.jpg","comment_is_top":false,"comment_ctime":1546356300,"is_pvip":false,"replies":[{"id":"20283","content":"可以这样理解，例如电脑分为硬盘，cpu，内存等子部件","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1546433386,"ip_address":"","comment_id":55967,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1546356300","product_id":100006601,"comment_content":"老师，软件架构指的是软件的顶层结构，那么对于硬件芯片来说，架构指的是芯片的顶层结构，它会包含具体的哪些“个体”模块等，以及个体间分工协作运行的规则，能这样理解吗？","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":434902,"discussion_content":"可以这样理解，例如电脑分为硬盘，cpu，内存等子部件","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1546433386,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":55329,"user_name":"快乐的萤火虫","can_delete":false,"product_type":"c1","uid":1363757,"ip_address":"","ucode":"B3A042BA21D070","user_header":"https://static001.geekbang.org/account/avatar/00/14/cf/2d/52c7a5f5.jpg","comment_is_top":false,"comment_ctime":1546132007,"is_pvip":false,"replies":[{"id":"20098","content":"对硬件没什么经验，个人理解应该是不适合的，因为软件和硬件核心差别在于硬件不可变，一旦设计成型出厂后是没法改的","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1546310432,"ip_address":"","comment_id":55329,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1546132007","product_id":100006601,"comment_content":"老师，我做芯片设计的，觉得您讲的很好，你讲的一些通用的架构设计原则应该是能运用到硬件芯片设计上的吧？因为我看您举例都是以软件举例的，所以请教一下","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":434742,"discussion_content":"对硬件没什么经验，个人理解应该是不适合的，因为软件和硬件核心差别在于硬件不可变，一旦设计成型出厂后是没法改的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1546310432,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1363757,"avatar":"https://static001.geekbang.org/account/avatar/00/14/cf/2d/52c7a5f5.jpg","nickname":"快乐的萤火虫","note":"","ucode":"B3A042BA21D070","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":62360,"discussion_content":"这个老师说的对的，你后面讲的有点不太适合芯片，前面有的东西芯片还是能借鉴一些，芯片同样是根据问题，划分模块和接口，指定运行的规则，最后形成系统的，这样看来和软件是不冲突的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574836922,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":54786,"user_name":"达达","can_delete":false,"product_type":"c1","uid":1087892,"ip_address":"","ucode":"46F8E0DD55758C","user_header":"https://static001.geekbang.org/account/avatar/00/10/99/94/7fb3b61d.jpg","comment_is_top":false,"comment_ctime":1545962661,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1545962661","product_id":100006601,"comment_content":"架构:<br><br>用积木模块，或积木模型，搭建自己的城堡<br><br>框架:<br><br>用积木模块，按标准化搭建的，常用的，成型的，积木模型<br>","like_count":0},{"had_liked":false,"id":52365,"user_name":"刘滨涛(陆逾)","can_delete":false,"product_type":"c1","uid":1196178,"ip_address":"","ucode":"1BC816E0A43D7C","user_header":"https://static001.geekbang.org/account/avatar/00/12/40/92/e2988de4.jpg","comment_is_top":false,"comment_ctime":1545368513,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1545368513","product_id":100006601,"comment_content":"从业务上看架构是一个个业务模块按照一定的规则组合起来，从技术上看架构是一个个系统或者技术产品按照业务规则组合起来，框架则是编程过程中的提供某个领域的一个开发规范的半成品。","like_count":0},{"had_liked":false,"id":50022,"user_name":"silence","can_delete":false,"product_type":"c1","uid":1078543,"ip_address":"","ucode":"3A99760438DE19","user_header":"https://static001.geekbang.org/account/avatar/00/10/75/0f/1f64a5b4.jpg","comment_is_top":false,"comment_ctime":1544842584,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1544842584","product_id":100006601,"comment_content":"站在不同的高度，看到的内容和成分不同，最底层是文件，然后是组件，再是模块，再是框架。框架是实现方法，系统是实现后的功能表现。而架构是对实现的一种抽象思维！","like_count":0},{"had_liked":false,"id":49760,"user_name":"陈海莲","can_delete":false,"product_type":"c1","uid":1100098,"ip_address":"","ucode":"5159307F17BD2A","user_header":"https://static001.geekbang.org/account/avatar/00/10/c9/42/1def04bf.jpg","comment_is_top":false,"comment_ctime":1544765263,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1544765263","product_id":100006601,"comment_content":"终于半懂了框架和架构了","like_count":0},{"had_liked":false,"id":49545,"user_name":"杰之7","can_delete":false,"product_type":"c1","uid":1297232,"ip_address":"","ucode":"F7DA2E21085332","user_header":"https://static001.geekbang.org/account/avatar/00/13/cb/50/66d0bd7f.jpg","comment_is_top":false,"comment_ctime":1544709751,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1544709751","product_id":100006601,"comment_content":"通过这讲的阅读学习，了解了架构的相关概念。通过在学习的过程中，与实际的例子结合来对比学习，这样就更容易理解。老师通过微信的例子，例如朋友圈，语音通话等是一个个子系统，子系统下面可以进行进一步的划分，朋友圈下有留言系统，留言系统还有审核系统，审核系统下还有各个模块，这样我们就将系统与子系统区分开来。<br>对于模块与组件，模块更多的是完成某一功能，组件更多的是一个单元。在架构与框架上，架构可以理解为结构，框架可以理解为规范。总之，理解概念更多的结合实际的例子，这样更能加深我们的理解。<br>","like_count":0},{"had_liked":false,"id":43912,"user_name":"2K4","can_delete":false,"product_type":"c1","uid":1330290,"ip_address":"","ucode":"8D40B21598B02E","user_header":"https://static001.geekbang.org/account/avatar/00/14/4c/72/8cb99c53.jpg","comment_is_top":false,"comment_ctime":1543322555,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1543322555","product_id":100006601,"comment_content":"感觉之前自己对架构的理解更多的是停留在物理逻辑这个层面","like_count":0},{"had_liked":false,"id":43888,"user_name":"pupiep","can_delete":false,"product_type":"c1","uid":1332004,"ip_address":"","ucode":"DF0329A2D75870","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTI6J3aB8SFk2lBWzCIWL23zMPgZYEmNhMrlAhe3Y2rrlA4VaQ6ZHj4aiaOPykaicwN9ib7iaxdGpPic3Dg/132","comment_is_top":false,"comment_ctime":1543318396,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1543318396","product_id":100006601,"comment_content":"架构是顶层设计，框架相当于组织规约，系统和子系统是站得高度不同，模块是具体功能，组件是物理组成","like_count":0},{"had_liked":false,"id":43534,"user_name":"李健","can_delete":false,"product_type":"c1","uid":1326948,"ip_address":"","ucode":"AC5469BF734B90","user_header":"https://static001.geekbang.org/account/avatar/00/14/3f/64/3f161fff.jpg","comment_is_top":false,"comment_ctime":1543237409,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1543237409","product_id":100006601,"comment_content":"架构师系统的顶层设计，框架是系统的功能实现。<br>组件是技术上的划分，模块是业务上的划分","like_count":0},{"had_liked":false,"id":42957,"user_name":"gxy","can_delete":false,"product_type":"c1","uid":1173593,"ip_address":"","ucode":"52A40BA4478849","user_header":"https://static001.geekbang.org/account/avatar/00/11/e8/59/9377987e.jpg","comment_is_top":false,"comment_ctime":1543118770,"is_pvip":false,"replies":[{"id":"15491","content":"我原来也是各种概念混淆的😄","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1543216157,"ip_address":"","comment_id":42957,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1543118770","product_id":100006601,"comment_content":"自己原先对架构没有定义，架构图就理解为框架图，听了之后，感觉有了系统的理解","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":430261,"discussion_content":"我原来也是各种概念混淆的😄","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543216157,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":42881,"user_name":"任重道远","can_delete":false,"product_type":"c1","uid":1325715,"ip_address":"","ucode":"BDA98B670E70D7","user_header":"https://static001.geekbang.org/account/avatar/00/14/3a/93/2d4f2988.jpg","comment_is_top":false,"comment_ctime":1543070927,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1543070927","product_id":100006601,"comment_content":"架构规定了整个业务该分成哪些功能模块，而各个功能模块又用哪些技术组合到一起共同实现整体业务。","like_count":0},{"had_liked":false,"id":41900,"user_name":"kndy","can_delete":false,"product_type":"c1","uid":1263111,"ip_address":"","ucode":"BD483A296892C7","user_header":"https://static001.geekbang.org/account/avatar/00/13/46/07/8a98ade8.jpg","comment_is_top":false,"comment_ctime":1542869658,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1542869658","product_id":100006601,"comment_content":"架构是顶层设计，包括组成成员及其运行规则","like_count":0},{"had_liked":false,"id":38900,"user_name":"gkb111","can_delete":false,"product_type":"c1","uid":1224217,"ip_address":"","ucode":"9B3154BCC9046B","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLLUic3XzxET3L3QXxcTbeg96GMx1HkiaiaZdudchmOmtPnuEPHK5vYEeMkvJR098XljMbXDialYib3z6w/132","comment_is_top":false,"comment_ctime":1542158611,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1542158611","product_id":100006601,"comment_content":"架构是组件的集合，而框架有可能只是一种架构的实现。","like_count":0},{"had_liked":false,"id":37443,"user_name":"小狮子辛巴","can_delete":false,"product_type":"c1","uid":1088420,"ip_address":"","ucode":"B9676851AF3370","user_header":"https://static001.geekbang.org/account/avatar/00/10/9b/a4/ddb31c5b.jpg","comment_is_top":false,"comment_ctime":1541586952,"is_pvip":false,"replies":[{"id":"13619","content":"图纸只是最后的结果呈现，为什么设计这个户型，用这些材料才是关键","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1541752260,"ip_address":"","comment_id":37443,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1541586952","product_id":100006601,"comment_content":"我原来理解的架构就相当于盖房子的图纸.<br>什么户型，哪里用什么材质。厨房怎么走向，厕所怎么抽风等。<br>","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":428340,"discussion_content":"图纸只是最后的结果呈现，为什么设计这个户型，用这些材料才是关键","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1541752260,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":35821,"user_name":"AmosWooo","can_delete":false,"product_type":"c1","uid":1191605,"ip_address":"","ucode":"481780ABC37013","user_header":"https://static001.geekbang.org/account/avatar/00/12/2e/b5/5f1c7ae1.jpg","comment_is_top":false,"comment_ctime":1540814905,"is_pvip":false,"replies":[{"id":"12753","content":"因为比较少用C++或者C来做业务开发，PHP, JAVA, Ruby……凡是用来开发业务系统的，都有框架","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1540820864,"ip_address":"","comment_id":35821,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1540814905","product_id":100006601,"comment_content":"一直有种感觉: 框架这种规范大多出现在前端开发中，后端除去Java，Python，框架很少，比如C&#47;Cpp，貌似就没什么框架，开源的除外","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":427676,"discussion_content":"因为比较少用C++或者C来做业务开发，PHP, JAVA, Ruby……凡是用来开发业务系统的，都有框架","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1540820864,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":34365,"user_name":"追忆似水年华","can_delete":false,"product_type":"c1","uid":1083395,"ip_address":"","ucode":"FB6C3EDC6988B6","user_header":"https://static001.geekbang.org/account/avatar/00/10/88/03/805c8e0e.jpg","comment_is_top":false,"comment_ctime":1540128166,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1540128166","product_id":100006601,"comment_content":"软件架构：软件系统的顶层结构。首先系统的意义比较广泛，但通常都有一个共性，可以独立运行且系统功能是所有组成部分一起表现出来的新特性。汽车是一个系统，但相对来说单独一台发动机不是，单独一个传动器，单独一个水箱都不是一个系统，也不是一个子系统因为他们并没有表现出独立运行的新特性。那系统都是由什么构成的呢？大的系统是由很多子系统构成，子系统也是一个单独的可运行的系统，那么较小的系统应该是由系统的业务功能（业务是广义的）出发，从逻辑角度来看是由很多模块构成，模块是职责分离的基于功能来划分，是垂直视角，因为每个模块可能使用所有物理组件；从物理角度来看，系统当然是由大量可替换可重复使用的组件（组件有小和大）构成，如nginx，tomcat，mysql，加密解密jar包，只是水平视角（每个组件（零件）在不同位置）；而有的组件可能会使用某种框架（规范）来实现或有的组件本身也是一个独立的系统。","like_count":0},{"had_liked":false,"id":31645,"user_name":"苏上","can_delete":false,"product_type":"c1","uid":1078021,"ip_address":"","ucode":"1BF95E16FE3EFD","user_header":"https://static001.geekbang.org/account/avatar/00/10/73/05/84d50eb1.jpg","comment_is_top":false,"comment_ctime":1539252940,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1539252940","product_id":100006601,"comment_content":"系统与子系统、模块与组件、框架与架构，理解这几个概念真的太重要了。<br>在软件生命周期中，需要从不同角度去解读系统，输出软件架构视图。4+1视图得好好掌握。<br><br>","like_count":0},{"had_liked":false,"id":31332,"user_name":"lucoffee","can_delete":false,"product_type":"c1","uid":1133208,"ip_address":"","ucode":"27D20476D21D34","user_header":"https://static001.geekbang.org/account/avatar/00/11/4a/98/1c318d41.jpg","comment_is_top":false,"comment_ctime":1539152693,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1539152693","product_id":100006601,"comment_content":"这是我第一次学习架构这个词。","like_count":0},{"had_liked":false,"id":31318,"user_name":"MJ","can_delete":false,"product_type":"c1","uid":1237145,"ip_address":"","ucode":"FCEC0C21444D2A","user_header":"https://static001.geekbang.org/account/avatar/00/12/e0/99/5d603697.jpg","comment_is_top":false,"comment_ctime":1539148982,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1539148982","product_id":100006601,"comment_content":"网络架构，是模块和组件的总系统","like_count":0},{"had_liked":false,"id":31311,"user_name":"Dylan","can_delete":false,"product_type":"c1","uid":1040236,"ip_address":"","ucode":"58064D0C9F9F5F","user_header":"https://static001.geekbang.org/account/avatar/00/0f/df/6c/5af32271.jpg","comment_is_top":false,"comment_ctime":1539147027,"is_pvip":false,"replies":[{"id":"11264","content":"一点不晚😄","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1539149828,"ip_address":"","comment_id":31311,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1539147027","product_id":100006601,"comment_content":"刚看完第一节课，重新整理了一下之前对这几个概念的理解，感觉来晚了～<br>还有这里的评论也很精彩～","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":426288,"discussion_content":"一点不晚😄","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1539149828,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":31243,"user_name":"Leo","can_delete":false,"product_type":"c1","uid":1250126,"ip_address":"","ucode":"A32AB092B7CE70","user_header":"https://static001.geekbang.org/account/avatar/00/13/13/4e/f6da63fb.jpg","comment_is_top":false,"comment_ctime":1539135521,"is_pvip":false,"replies":[{"id":"11235","content":"业务复杂度也是复杂度的一种呢，我是放在可扩展里面讲的，不同的系统有不同的复杂度，例如nginx的复杂度就是高性能，淘宝的复杂度是高性能高可用加业务复杂度，架构本身不是产品边界，产品边界决定架构","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1539136313,"ip_address":"","comment_id":31243,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1539135521","product_id":100006601,"comment_content":"老师，我还想深入理解一下，您说的架构解决的是系统复杂度问题，那除了技术复杂度外，业务复杂度也是应该关注的，而业务复杂度就是我说的产品边界，换个理论的词来说就是领域模型，所以，从产品或者业务的角度看架构的话，能否说架构就是产品边界呢？当然，为了清晰化，在定义产品边界的时候，产品经理需要通过清晰的模型来表达业务范围","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":426263,"discussion_content":"业务复杂度也是复杂度的一种呢，我是放在可扩展里面讲的，不同的系统有不同的复杂度，例如nginx的复杂度就是高性能，淘宝的复杂度是高性能高可用加业务复杂度，架构本身不是产品边界，产品边界决定架构","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1539136313,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":30544,"user_name":"李皮皮皮皮皮","can_delete":false,"product_type":"c1","uid":1200281,"ip_address":"","ucode":"3BF1DEE4A12359","user_header":"https://static001.geekbang.org/account/avatar/00/12/50/99/44378317.jpg","comment_is_top":false,"comment_ctime":1538917260,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1538917260","product_id":100006601,"comment_content":"软件架构是软件系统的顶层结构👍","like_count":0},{"had_liked":false,"id":30232,"user_name":"大大大懒猫","can_delete":false,"product_type":"c1","uid":1206648,"ip_address":"","ucode":"D0D88B65F43603","user_header":"https://static001.geekbang.org/account/avatar/00/12/69/78/303bc602.jpg","comment_is_top":false,"comment_ctime":1538733209,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1538733209","product_id":100006601,"comment_content":"架构类似建筑的设计图，框架类似设计理念，系统和模块是功能上的划分和细化，组件是可复用的实现具体功能的业务逻辑，组件可以构成模块和系统，系统和模块也可以是其他架构中的组件","like_count":0},{"had_liked":false,"id":28965,"user_name":"清源","can_delete":false,"product_type":"c1","uid":1221524,"ip_address":"","ucode":"AE6904A8E6C36C","user_header":"https://static001.geekbang.org/account/avatar/00/12/a3/94/2a241c90.jpg","comment_is_top":false,"comment_ctime":1538209922,"is_pvip":false,"replies":[{"id":"10420","content":"架构当然要面向业务，要不要漂亮真不一定，看后面的架构原则😊","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1538213891,"ip_address":"","comment_id":28965,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1538209922","product_id":100006601,"comment_content":"感觉架构就是面向业务的，就是去做一件事，怎样做才能做得漂亮","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":425447,"discussion_content":"架构当然要面向业务，要不要漂亮真不一定，看后面的架构原则😊","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1538213891,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":28961,"user_name":"清源","can_delete":false,"product_type":"c1","uid":1221524,"ip_address":"","ucode":"AE6904A8E6C36C","user_header":"https://static001.geekbang.org/account/avatar/00/12/a3/94/2a241c90.jpg","comment_is_top":false,"comment_ctime":1538208874,"is_pvip":false,"replies":[{"id":"10421","content":"技术选型是架构设计一部分","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1538213919,"ip_address":"","comment_id":28961,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1538208874","product_id":100006601,"comment_content":"我之前以为架构就是技术选型，例如数据库用什么，连接用什么，UI展示用什么等","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":425444,"discussion_content":"技术选型是架构设计一部分","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1538213919,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":25613,"user_name":"雪熊","can_delete":false,"product_type":"c1","uid":1201795,"ip_address":"","ucode":"4B9C976546A263","user_header":"https://static001.geekbang.org/account/avatar/00/12/56/83/efb4d9da.jpg","comment_is_top":false,"comment_ctime":1537399321,"is_pvip":false,"replies":[{"id":"9446","content":"不是每个架构都要求四高的，事实同时满足四高的架构成本会非常高","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1537495026,"ip_address":"","comment_id":25613,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1537399321","product_id":100006601,"comment_content":"我原来理解的架构就是组件之间的关系，架构师的职责就是设计组件的各种关系并保证高可靠高可用高安全高性能，肤浅了。","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":424361,"discussion_content":"不是每个架构都要求四高的，事实同时满足四高的架构成本会非常高","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1537495026,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":25190,"user_name":"神龙大侠886","can_delete":false,"product_type":"c1","uid":1104724,"ip_address":"","ucode":"ACC7D3C07B41DD","user_header":"https://static001.geekbang.org/account/avatar/00/10/db/54/6b5dd4a3.jpg","comment_is_top":false,"comment_ctime":1537264864,"is_pvip":false,"replies":[{"id":"9255","content":"这已经是我梳理后的，写作的时候为了明确这一堆东东，搞了一两周","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1537342011,"ip_address":"","comment_id":25190,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1537264864","product_id":100006601,"comment_content":"老铁666，都把我绕晕了","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":424217,"discussion_content":"这已经是我梳理后的，写作的时候为了明确这一堆东东，搞了一两周","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1537342011,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":22862,"user_name":"Geek_2b5152","can_delete":false,"product_type":"c1","uid":1181785,"ip_address":"","ucode":"22A519C22E70D3","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJXib1Wiaj6KKt8GNhpv9cqxqQqQnyoWgxKLJJ33F5ia5KJliaZHglzkbqx3Mb238oaTlwWWmb99B56lg/132","comment_is_top":false,"comment_ctime":1536021134,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1536021134","product_id":100006601,"comment_content":"感谢作者分享","like_count":0},{"had_liked":false,"id":22616,"user_name":"deer","can_delete":false,"product_type":"c1","uid":1197495,"ip_address":"","ucode":"DCC45BB256768B","user_header":"https://static001.geekbang.org/account/avatar/00/12/45/b7/37ac4656.jpg","comment_is_top":false,"comment_ctime":1535857208,"is_pvip":false,"replies":[{"id":"8194","content":"架构的图网上很多，关键是要理解为什么架构是这样，有什么优点和缺点","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1535956980,"ip_address":"","comment_id":22616,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1535857208","product_id":100006601,"comment_content":"收获颇多，建议老师最好结合那个学生管理系统的例子多画些图来讲，一般的系统的架构是什么样子，学生量很大(网校)应该怎么去区分...","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":423191,"discussion_content":"架构的图网上很多，关键是要理解为什么架构是这样，有什么优点和缺点","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1535956980,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":20960,"user_name":"petit_kayak","can_delete":false,"product_type":"c1","uid":1025214,"ip_address":"","ucode":"6889CCCBFA0180","user_header":"https://static001.geekbang.org/account/avatar/00/0f/a4/be/39cc22f5.jpg","comment_is_top":false,"comment_ctime":1534832287,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1534832287","product_id":100006601,"comment_content":"在我看来，某一层级的架构就是它的直接子模块的组合模式，包括形式、交互方式和公共服务的定义","like_count":0},{"had_liked":false,"id":20648,"user_name":"Tomma","can_delete":false,"product_type":"c1","uid":1210172,"ip_address":"","ucode":"869F0EDA22A86C","user_header":"https://static001.geekbang.org/account/avatar/00/12/77/3c/ef32220c.jpg","comment_is_top":false,"comment_ctime":1534642615,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1534642615","product_id":100006601,"comment_content":"我理解的架构，就是从逻辑视图（横向广度）出发，可以将系统划分为为哪些模块，各个模块有什么内在是联系，以及如何划分服务，再从物理视图（纵向深度）出发，看系统可以分为哪些层，每一层可以采用哪些组件来完成。最后看一下系统可能的瓶颈在哪里，以及如何解决。","like_count":0},{"had_liked":false,"id":20348,"user_name":"李杰","can_delete":false,"product_type":"c1","uid":1206355,"ip_address":"","ucode":"5DD85DFB2C2BC2","user_header":"https://static001.geekbang.org/account/avatar/00/12/68/53/7165b1cc.jpg","comment_is_top":false,"comment_ctime":1534388446,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1534388446","product_id":100006601,"comment_content":"架构是系统的顶层设计，即要高屋建瓴，又要兼顾实际。<br><br>在工作中，常常把对架构的片面理解(自身的关注点)，当成了架构的全部，还为此与他人争论，有点盲人摸象的感觉。<br><br>文中提到了逻辑架构、开发架构、物理架构，在实际工作中，可以理解为4+1视图。要看清楚一个系统的架构，需要不同的视角，需要聚焦，这方面可以参考六顶思考帽。","like_count":0},{"had_liked":false,"id":20298,"user_name":"hello","can_delete":false,"product_type":"c1","uid":1102652,"ip_address":"","ucode":"E04A474CAF6D26","user_header":"https://static001.geekbang.org/account/avatar/00/10/d3/3c/ab6425f7.jpg","comment_is_top":false,"comment_ctime":1534368355,"is_pvip":false,"replies":[{"id":"7124","content":"架构师的范畴更广一些","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1534387903,"ip_address":"","comment_id":20298,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1534368355","product_id":100006601,"comment_content":"架构是系统的整体设计，它将系统的多个关联个体组合在一起，以一定的规则运行，并对内或对外提供各种服务。比如把mysql，redis，ngnix等个体在一起，架构的目的是选择更合适当前业务场景的，运行效率更好的软件或者硬件，将他们以最好的方式组合在一起以提供服务。框架是为了实现某个业务场景或者某个标准规范而抽象的基础软件服务，比如某个公司为了适应自己的业务发展自己开发的底层框架，比如实现了mvc的laravel框架。框架的作用是提供一些基础的软件服务，主要是为了让业务代码能更好组合在一起，相当于一种规范。组件为了复用提炼出来的软件单元，它的主要点是复用。<br>#以前理解的架构师应该是框架师。😄","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":422194,"discussion_content":"架构师的范畴更广一些","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1534387903,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":20104,"user_name":"kimi","can_delete":false,"product_type":"c1","uid":1208537,"ip_address":"","ucode":"74855DF1BC1353","user_header":"https://static001.geekbang.org/account/avatar/00/12/70/d9/08e4fbb5.jpg","comment_is_top":false,"comment_ctime":1534260512,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1534260512","product_id":100006601,"comment_content":"我的理解架构就是模块、组件的组装，即顶层设计，框架就是规范或有基础功能的规范","like_count":0},{"had_liked":false,"id":19881,"user_name":"beiler","can_delete":false,"product_type":"c1","uid":1192989,"ip_address":"","ucode":"0A62FE86617486","user_header":"https://static001.geekbang.org/account/avatar/00/12/34/1d/169cd800.jpg","comment_is_top":false,"comment_ctime":1534135152,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1534135152","product_id":100006601,"comment_content":"除了阅读作者的笔记，看评论可以说是答疑了","like_count":0},{"had_liked":false,"id":19804,"user_name":"木木","can_delete":false,"product_type":"c1","uid":1205341,"ip_address":"","ucode":"B446FD36734E75","user_header":"https://static001.geekbang.org/account/avatar/00/12/64/5d/de0536e8.jpg","comment_is_top":false,"comment_ctime":1534080526,"is_pvip":false,"replies":[{"id":"6910","content":"严格意义来说，架构不是地基，地基也是架构的一部分而已，架构是整栋房子的结构，包括地基，楼层，布局等","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1534126160,"ip_address":"","comment_id":19804,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1534080526","product_id":100006601,"comment_content":"架构是一个整体，就好比一栋房子的地基，规划好房子的格局，能承受多少层等。<br>其次，我理解的框架是一种工具或者组件，以此来快速帮助我们来实现这个架构<br>架构其实也是不断地在变化和演进的。会随着业务阶段、层级的需求而不断地演化。","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":421989,"discussion_content":"严格意义来说，架构不是地基，地基也是架构的一部分而已，架构是整栋房子的结构，包括地基，楼层，布局等","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1534126160,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":19769,"user_name":"oscarwin","can_delete":false,"product_type":"c1","uid":1131956,"ip_address":"","ucode":"492430BA342593","user_header":"https://static001.geekbang.org/account/avatar/00/11/45/b4/ec66d499.jpg","comment_is_top":false,"comment_ctime":1534056561,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1534056561","product_id":100006601,"comment_content":"架构是一个系统的顶层设计，从不同的角度划分这个系统的架构，会有不同的结果。框架是为了遵循一套固定的协议或者方法而生成的半成品系统。组件是从技术上可以复用的零件，比如消息队列。模块是从业务角度去拆分一个系统。","like_count":0},{"had_liked":false,"id":19761,"user_name":"钱","can_delete":false,"product_type":"c1","uid":1009652,"ip_address":"","ucode":"2C92A243A463D4","user_header":"https://static001.geekbang.org/account/avatar/00/0f/67/f4/9a1feb59.jpg","comment_is_top":false,"comment_ctime":1534044587,"is_pvip":false,"replies":[{"id":"6920","content":"最后一段话很关键，架构师要求技术广度和深度并重","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1534127001,"ip_address":"","comment_id":19761,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1534044587","product_id":100006601,"comment_content":"小结<br><br>1:架构-这个词语不好理解，换成架构设计好理解一些，是软件开发之初对于使用什么技术，系统设计成什么样子，各个功能模块或子系统如何协助的一种规划<br><br>2:框架-是面向编程或配置的半成品，业务无关且必须的代码开发已经被其他牛逼的人或团队给做了，我们只需要按照框架的规则填充业务相关的代码就可以了<br><br>3:组件-是从技术维度上的复用，某些常用的功能无需二次开发，可直接复用已有的<br><br>4:模块-是从业务维度上职责的划分，不同的模块处理不同业务，分开来开发和使用，用于降低复杂度<br><br>5:系统-是相互协同可运行的实体，可大可小，复杂或简单都可以，也即是我们最终想要的东西，是软件组成的最核心的部分<br><br>架构设计，我觉得除了设计的方法论，技术的积累也是必须的，而且是前提，否则怎么对比孰优孰劣，该选择什么放弃什么，怎么清楚哪些技术能支持多久，还有成本、工期、实现的复杂度等问题也需要考虑一并考虑。","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":421970,"discussion_content":"最后一段话很关键，架构师要求技术广度和深度并重","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1534127001,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":19655,"user_name":"Home","can_delete":false,"product_type":"c1","uid":1206045,"ip_address":"","ucode":"18B00EA4D60868","user_header":"https://static001.geekbang.org/account/avatar/00/12/67/1d/58425d0b.jpg","comment_is_top":false,"comment_ctime":1533948961,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1533948961","product_id":100006601,"comment_content":"架构就是系统的总体布局，明确需要承担具体职责的部件。","like_count":0},{"had_liked":false,"id":19366,"user_name":"snail","can_delete":false,"product_type":"c1","uid":1203666,"ip_address":"","ucode":"B63F6759935A74","user_header":"https://static001.geekbang.org/account/avatar/00/12/5d/d2/12f58a80.jpg","comment_is_top":false,"comment_ctime":1533787376,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1533787376","product_id":100006601,"comment_content":"架构是什么？<br><br>首先理解系统和子系统、模块和组件、框架和架构。<br><br>系统与子系统：<br>\t系统泛指由一群有关联的个体【点】组成，根据某种规则运作【线联系】，能完成个别元件不能单独完成的工作的群体。<br>\t子系统也是由一群有关联的个体所组成的系统，多半会是更大系统的一部分【个人觉得系统和子系统的关系是在一个高的层面还是在一个下面细的层面】。<br><br>模块与组件：<br>\t软件从逻辑的角度来拆分系统后，得到的单元是“模块“ - Module。<br>\t软件从物理的角度来拆分系统后，得到的单元是”组件“ - Component。<br><br>框架和架构：<br>\t框架 - Framework<br>\t架构 - Architecture<br><br>重新定义架构：软件架构指软件系统的顶层结构。<br><br><br>思考题：原来理解的架构是如何定义的？<br>       为了完成一个具体的业务而在逻辑上拆分出系统、子系统和模块；在实现上选择适合的框架和组件并连通；在部署上规划出多机之间的关系。对架构的定义从角度和层面两个维度。","like_count":0},{"had_liked":false,"id":18766,"user_name":"Arthur.Li","can_delete":false,"product_type":"c1","uid":1005824,"ip_address":"","ucode":"EC2436A5136C13","user_header":"https://static001.geekbang.org/account/avatar/00/0f/59/00/6d14972a.jpg","comment_is_top":false,"comment_ctime":1533564207,"is_pvip":false,"replies":[{"id":"6571","content":"有用就好😄","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1533577488,"ip_address":"","comment_id":18766,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1533564207","product_id":100006601,"comment_content":"看了这节课对架构的概念更深刻了。以前只是模模糊糊的知道架构是对一个系统做整体规划的，现在学到了架构应该从业务逻辑上，物理上等去考虑，以前也想过，到没有这么细致","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":421645,"discussion_content":"有用就好😄","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1533577488,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":17766,"user_name":"湛蓝露白","can_delete":false,"product_type":"c1","uid":1125429,"ip_address":"","ucode":"46CD8F7E40B117","user_header":"https://static001.geekbang.org/account/avatar/00/11/2c/35/931cd1cc.jpg","comment_is_top":false,"comment_ctime":1532944411,"is_pvip":false,"replies":[{"id":"6183","content":"实际应用不多，所以没有特别讲","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1532996755,"ip_address":"","comment_id":17766,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1532944411","product_id":100006601,"comment_content":"4+1视图这个很关键，建议作者以实际系统为例讲一讲怎么分析，怎么画","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":421263,"discussion_content":"实际应用不多，所以没有特别讲","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1532996755,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":17630,"user_name":"wuhulala","can_delete":false,"product_type":"c1","uid":1191143,"ip_address":"","ucode":"6DBF2C9E19B930","user_header":"https://static001.geekbang.org/account/avatar/00/12/2c/e7/3c0eba8b.jpg","comment_is_top":false,"comment_ctime":1532799639,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1532799639","product_id":100006601,"comment_content":"架构 是整个系统的生命周期 而系统的实现则是由一些框架搭积木而成","like_count":0},{"had_liked":false,"id":16786,"user_name":"liyue326","can_delete":false,"product_type":"c1","uid":1184938,"ip_address":"","ucode":"35BA356593C5A7","user_header":"https://static001.geekbang.org/account/avatar/00/12/14/aa/6df49a3f.jpg","comment_is_top":false,"comment_ctime":1532185904,"is_pvip":false,"replies":[{"id":"5841","content":"可扩展性是其中一种","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1532255396,"ip_address":"","comment_id":16786,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1532185904","product_id":100006601,"comment_content":"之前的理解就是技术选型 可扩展性。too young to simple","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":420925,"discussion_content":"可扩展性是其中一种","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1532255396,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":15960,"user_name":"乘风","can_delete":false,"product_type":"c1","uid":1115724,"ip_address":"","ucode":"0420C5535DACB7","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLwSoTjHPX5tm4whBSfoZLX6toZxrZGUaLABQywKNf4MDc9toK3QSV7Z99ATcGicFCysoleQ5ISzmw/132","comment_is_top":false,"comment_ctime":1531698727,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1531698727","product_id":100006601,"comment_content":"首先按需分类，有哪些模块、哪些组件，哪些模块还可以抽出来作为组件使用，然后组装:模块和模块、模块和组件按一定的规则组装，组装之后就是系统，我理解的架构是，分类、职责、运行条件，","like_count":0},{"had_liked":false,"id":15890,"user_name":"蔡","can_delete":false,"product_type":"c1","uid":1177128,"ip_address":"","ucode":"E019D9BB3E173E","user_header":"https://static001.geekbang.org/account/avatar/00/11/f6/28/e325c641.jpg","comment_is_top":false,"comment_ctime":1531616511,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1531616511","product_id":100006601,"comment_content":"架构，框架，系统，子系统，模块，组件。顶层结构，关联，规则","like_count":0},{"had_liked":false,"id":15860,"user_name":"Linky","can_delete":false,"product_type":"c1","uid":1041563,"ip_address":"","ucode":"E73732031C2ADA","user_header":"https://static001.geekbang.org/account/avatar/00/0f/e4/9b/f86885c7.jpg","comment_is_top":false,"comment_ctime":1531564738,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1531564738","product_id":100006601,"comment_content":"架构是是对系统的最抽象的最上层的设计，<br>框架是已经存在的解决某类问题的规范","like_count":0},{"had_liked":false,"id":14742,"user_name":"tangfengr","can_delete":false,"product_type":"c1","uid":1170016,"ip_address":"","ucode":"46D604A9E783E4","user_header":"https://static001.geekbang.org/account/avatar/00/11/da/60/d386a8a3.jpg","comment_is_top":false,"comment_ctime":1530626349,"is_pvip":false,"replies":[{"id":"4988","content":"你说的比较适合比较大的业务系统，一些小的系统可能都不需要模块划分，一些中间件系统也不一定划分为具体模块","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1530667690,"ip_address":"","comment_id":14742,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1530626349","product_id":100006601,"comment_content":"我理解的架构主要是从业务模块划分，技术实现两个方面。业务模块也像搭积木，每个积木块要承载一定的功能，尽量做到边界清晰，沟通简单。技术实现方面要考虑性能要求，网络规划，安全要求，针对这些要求选择适合的技术栈或者框架，综合考虑其他环境条件选择一个技术方案。这个过程需要了解特定框架的优劣点，积累素材，确保用起来不会有后遗症。","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":420114,"discussion_content":"你说的比较适合比较大的业务系统，一些小的系统可能都不需要模块划分，一些中间件系统也不一定划分为具体模块","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1530667690,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":14637,"user_name":"IvanEye","can_delete":false,"product_type":"c1","uid":1073960,"ip_address":"","ucode":"037BEDDB9AAEA2","user_header":"https://static001.geekbang.org/account/avatar/00/10/63/28/76d9f3f2.jpg","comment_is_top":false,"comment_ctime":1530580752,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1530580752","product_id":100006601,"comment_content":"您好，想请教个问题。架构模式和架构风格有什么区别?<br>我找了些资料，说法各异，有说只是说法不同，有说模式解决了特定问题。但没有确切的区分。<br>我理解的是：架构模式类似设计模式，是解决特定问题的套路。架构风格只是限定了一些约束，并不解决特定问题。<br>就像书法，横平竖直是模式，宋体黑体是风格。","like_count":0},{"had_liked":false,"id":13752,"user_name":"Steven⁰⁰⁸","can_delete":false,"product_type":"c1","uid":1111138,"ip_address":"","ucode":"0729C9F79B45EC","user_header":"https://static001.geekbang.org/account/avatar/00/10/f4/62/13b54c68.jpg","comment_is_top":false,"comment_ctime":1529974690,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1529974690","product_id":100006601,"comment_content":"现在做一个系统，系统下有多个模块：单点登录、监控、运营、升级等，现在利用maven multiple module模式开发，基础实体或者说通用实体被抽离到base  module,各系统间调用通过spring cloud提供服务接口调用，但现问题是各系统间还有很多重复的代码  ，请老师指导下","like_count":0},{"had_liked":false,"id":13601,"user_name":"ye_ibl","can_delete":false,"product_type":"c1","uid":1162299,"ip_address":"","ucode":"3ACEFB66801637","user_header":"","comment_is_top":false,"comment_ctime":1529842001,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1529842001","product_id":100006601,"comment_content":"架构：一个系统由什么子系统组成，各个子系统负责什么功能，各子系统之间怎么沟通，就是这个系统的结构<br>框架：一种软件开发的规范，带有系统开发的基础功能。","like_count":0},{"had_liked":false,"id":13600,"user_name":"ye_ibl","can_delete":false,"product_type":"c1","uid":1162299,"ip_address":"","ucode":"3ACEFB66801637","user_header":"","comment_is_top":false,"comment_ctime":1529842000,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1529842000","product_id":100006601,"comment_content":"架构：一个系统由什么子系统组成，各个子系统负责什么功能，各子系统之间怎么沟通，就是这个系统的结构<br>框架：一种软件开发的规范，带有系统开发的基础功能。","like_count":0},{"had_liked":false,"id":13088,"user_name":"IvanEye","can_delete":false,"product_type":"c1","uid":1073960,"ip_address":"","ucode":"037BEDDB9AAEA2","user_header":"https://static001.geekbang.org/account/avatar/00/10/63/28/76d9f3f2.jpg","comment_is_top":false,"comment_ctime":1529369262,"is_pvip":false,"replies":[{"id":"4337","content":"你这个定义比较难理解，实际上有点像是定义了“架构设计”","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1529376341,"ip_address":"","comment_id":13088,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1529369262","product_id":100006601,"comment_content":"个人觉得架构包含两个层面：架构过程和架构结果。<br>过程是特定约束下的一个个的决策，结果是最终交付。<br>所以我总结的架构是：特定约束下的决策结果。","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":419531,"discussion_content":"你这个定义比较难理解，实际上有点像是定义了“架构设计”","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1529376341,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":12952,"user_name":"明翼","can_delete":false,"product_type":"c1","uid":1068361,"ip_address":"","ucode":"E77F86BEB3D5C1","user_header":"https://static001.geekbang.org/account/avatar/00/10/4d/49/28e73b9c.jpg","comment_is_top":false,"comment_ctime":1529203376,"is_pvip":false,"replies":[{"id":"4348","content":"架构图有不同维度，从物理的视角观察架构，就画组件，从逻辑的视角观察架构，就画模块，更多可以看参考架构4+1视图","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1529377219,"ip_address":"","comment_id":12952,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1529203376","product_id":100006601,"comment_content":"老师请教个问题，画架构图我们一般是以模块为单位话还是以组件那？","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":419475,"discussion_content":"架构图有不同维度，从物理的视角观察架构，就画组件，从逻辑的视角观察架构，就画模块，更多可以看参考架构4+1视图","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1529377219,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":12228,"user_name":"poetess","can_delete":false,"product_type":"c1","uid":1145750,"ip_address":"","ucode":"240159FB179205","user_header":"https://static001.geekbang.org/account/avatar/00/11/7b/96/95a6e13a.jpg","comment_is_top":false,"comment_ctime":1528704278,"is_pvip":false,"replies":[{"id":"4031","content":"web服务器就是你说的应用服务器","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1528715466,"ip_address":"","comment_id":12228,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1528704278","product_id":100006601,"comment_content":"架构图那块，Nginx下边不应该是应用服务器嘛，新手有点懵","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":419168,"discussion_content":"web服务器就是你说的应用服务器","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1528715466,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":12184,"user_name":"怪物猎人5.0","can_delete":false,"product_type":"c1","uid":1016749,"ip_address":"","ucode":"3B29051AD1F477","user_header":"https://static001.geekbang.org/account/avatar/00/0f/83/ad/d3cb8dc5.jpg","comment_is_top":false,"comment_ctime":1528672899,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1528672899","product_id":100006601,"comment_content":"之前的理解是软件架构就像是人的骨骼一样，把各种软件组成部分系统的组织在一起 优化在一起  从而更好的达到业务的目的。","like_count":0},{"had_liked":false,"id":11511,"user_name":"mαnajay","can_delete":false,"product_type":"c1","uid":1067450,"ip_address":"","ucode":"6DE9FBD1BEC8AD","user_header":"https://static001.geekbang.org/account/avatar/00/10/49/ba/23c9246a.jpg","comment_is_top":false,"comment_ctime":1528166319,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1528166319","product_id":100006601,"comment_content":"我们所说的系统是对所做业务总量上的一个宏达的定义，系统是由业务模块构成，模块一般是同一业务范围的概念，所以特别复杂的子模块也可以称为一个子系统。而模块由多种组件构成，组件一般为技术角度可重用的功能单元。","like_count":0},{"had_liked":false,"id":11386,"user_name":"探索无止境","can_delete":false,"product_type":"c1","uid":1044178,"ip_address":"","ucode":"91D2A9907DFA79","user_header":"https://static001.geekbang.org/account/avatar/00/0f/ee/d2/7024431c.jpg","comment_is_top":false,"comment_ctime":1528108917,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1528108917","product_id":100006601,"comment_content":"提个建议，后续的朗读能不能跟开篇一样的音量，音量太小听起来不方便","like_count":0},{"had_liked":false,"id":11120,"user_name":"堵车","can_delete":false,"product_type":"c1","uid":1145404,"ip_address":"","ucode":"7BC1E50A4F8D3D","user_header":"https://static001.geekbang.org/account/avatar/00/11/7a/3c/87e015f8.jpg","comment_is_top":false,"comment_ctime":1527863764,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1527863764","product_id":100006601,"comment_content":"模块和组件不太理解。模块是能实现某一功能的独立代码组，组件也是。但我认为模块和组件不能以逻辑和物理来区分。物理一般指的是磁盘，内存。比如分布式数据库，就是逻辑上是一个数据库，物理上存在不同地方的数据库集合。我可以这么理解模块和组件吗？组件强调被复用功能代码。模块强调是被调用的功能代码。比如连接池是一个组件，用户登录是个模块。","like_count":0},{"had_liked":false,"id":10873,"user_name":"Geek_b22d0b","can_delete":false,"product_type":"c1","uid":1145819,"ip_address":"","ucode":"510982EC0BC4EE","user_header":"https://static001.geekbang.org/account/avatar/00/11/7b/db/7c02beb9.jpg","comment_is_top":false,"comment_ctime":1527729906,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1527729906","product_id":100006601,"comment_content":"架构就是类似人体结构，是多维立体系统，分为逻辑层神经系统从中心到边缘，物理层骨骼肌肉，应用层五官功能等，所有层组合起来的结构，也可以理解为建筑结构，软件本身也是来源于真实世界，也是实际生活中的系统架构映射！","like_count":0},{"had_liked":false,"id":10756,"user_name":"JUNE","can_delete":false,"product_type":"c1","uid":1128603,"ip_address":"","ucode":"7F066D70DA6F6F","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJMrh2ibBfsLfBFKzpqrzqVKjfotegNz0ZGfdcVWY0SeJxG89NHsZmvHrqxrp2RNRcHsbWJI3rIn0Q/132","comment_is_top":false,"comment_ctime":1527688261,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1527688261","product_id":100006601,"comment_content":"我理解的组件是独立的、可复用、可扩展的。<br><br>而模块是按照功能逻辑拆分的不可单独运作的单元。<br><br>还有那个MVC的图，为什么View被两个箭头指着，View不应该指向Controller吗？求解","like_count":0},{"had_liked":false,"id":10610,"user_name":"may","can_delete":false,"product_type":"c1","uid":1144127,"ip_address":"","ucode":"9050097DC82BDE","user_header":"https://static001.geekbang.org/account/avatar/00/11/75/3f/3dbc7333.jpg","comment_is_top":false,"comment_ctime":1527611628,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1527611628","product_id":100006601,"comment_content":"架构要明白系统有哪些个体构造，个体之间是如何运作得","like_count":0},{"had_liked":false,"id":10473,"user_name":"wessonwang","can_delete":false,"product_type":"c1","uid":1000441,"ip_address":"","ucode":"A9BA5E3A3F278E","user_header":"https://static001.geekbang.org/account/avatar/00/0f/43/f9/723ee153.jpg","comment_is_top":false,"comment_ctime":1527557794,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1527557794","product_id":100006601,"comment_content":"讨论架构，<br>先是要明确在什么粒度（层面）讨论的，比如是要讨论一个公司的业务架构，还是要讨论一个订单系统。<br>明确好粒度后，架构讨论的就是系统相关主体（某一粒度&#47;层面）之间的交互与依赖关系了。","like_count":0},{"had_liked":false,"id":10372,"user_name":"千年孤独","can_delete":false,"product_type":"c1","uid":1037215,"ip_address":"","ucode":"282CA1A68E8774","user_header":"https://static001.geekbang.org/account/avatar/00/0f/d3/9f/36ea3be4.jpg","comment_is_top":false,"comment_ctime":1527510563,"is_pvip":false,"replies":[{"id":"3296","content":"这是从维基百科摘录的，某个组件按照mvc框架来构建","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1527549344,"ip_address":"","comment_id":10372,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1527510563","product_id":100006601,"comment_content":"“框架是组件的规范”这句话我觉得有些不够恰当，应该是“框架是模块的规范”。MVC是框架，而框架是一种逻辑概念，从逻辑角度看MVC框架的子部分就应该被称为“模块”。","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":418458,"discussion_content":"这是从维基百科摘录的，某个组件按照mvc框架来构建","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1527549344,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":10309,"user_name":"Geek_59a17f","can_delete":false,"product_type":"c1","uid":1119733,"ip_address":"","ucode":"61D49D5983AD3E","user_header":"https://static001.geekbang.org/account/avatar/00/11/15/f5/4fb5284b.jpg","comment_is_top":false,"comment_ctime":1527469664,"is_pvip":false,"replies":[{"id":"3226","content":"不是我读的，是专业的播音员读的😂😂","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1527473877,"ip_address":"","comment_id":10309,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1527469664","product_id":100006601,"comment_content":"理解了模块和组建的区别，框架和架构的定义。<br>老师的声音很好听。<br>","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":418434,"discussion_content":"不是我读的，是专业的播音员读的😂😂","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1527473877,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":10154,"user_name":"硅谷居士","can_delete":false,"product_type":"c1","uid":1018463,"ip_address":"","ucode":"BD3D3BA142F280","user_header":"https://static001.geekbang.org/account/avatar/00/0f/8a/5f/c60d0ffe.jpg","comment_is_top":false,"comment_ctime":1527311802,"is_pvip":false,"replies":[{"id":"3166","content":"通常的说法叫做“质量需求”","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1527374737,"ip_address":"","comment_id":10154,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1527311802","product_id":100006601,"comment_content":"架构关注非功能性需求","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":418363,"discussion_content":"通常的说法叫做“质量需求”","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1527374737,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":9901,"user_name":"伟迪","can_delete":false,"product_type":"c1","uid":1110973,"ip_address":"","ucode":"7DFE9E5DD5BA8E","user_header":"https://static001.geekbang.org/account/avatar/00/10/f3/bd/a4a92017.jpg","comment_is_top":false,"comment_ctime":1527151011,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1527151011","product_id":100006601,"comment_content":"我认为，架构是在某个前提条件下，对整个计算机软件结构的离散 抽象设计。离散是分散能力，抽象的是合并能力。既然是抽象离散，每个人离散抽象的方式不同，如果这个架构没有前提要求，所以任何人对一个软件的架构设计都是对的。但是，现实中每个开发任务总会有前提条件，比如常见的这个软件需要有可扩展性，有可复用性等，架构设计因此才有了评判标准。","like_count":0},{"had_liked":false,"id":9750,"user_name":"andy","can_delete":false,"product_type":"c1","uid":1128241,"ip_address":"","ucode":"DAFDEE299AEA48","user_header":"https://static001.geekbang.org/account/avatar/00/11/37/31/53b449e9.jpg","comment_is_top":false,"comment_ctime":1527061709,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1527061709","product_id":100006601,"comment_content":"框架里面都有自己的架构思想吧？比如spring框架","like_count":0},{"had_liked":false,"id":9707,"user_name":"代码狂徒","can_delete":false,"product_type":"c1","uid":1030100,"ip_address":"","ucode":"F5918543E90321","user_header":"https://static001.geekbang.org/account/avatar/00/0f/b7/d4/abb7bfe3.jpg","comment_is_top":false,"comment_ctime":1527039588,"is_pvip":false,"replies":[{"id":"2990","content":"里面有3张图呢，虽然简单，但也是架构","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1527055701,"ip_address":"","comment_id":9707,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1527039588","product_id":100006601,"comment_content":"大神，针对您所提出的相关定义，是不是也可以用图的形式显示出来，比如本篇结尾的定义，这样可能更直观，因为有可能我们在各自的理解中产生跑偏，","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":418173,"discussion_content":"里面有3张图呢，虽然简单，但也是架构","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1527055701,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":9391,"user_name":"howie6879","can_delete":false,"product_type":"c1","uid":1067317,"ip_address":"","ucode":"2C22144D922CBA","user_header":"https://static001.geekbang.org/account/avatar/00/10/49/35/53f278f3.jpg","comment_is_top":false,"comment_ctime":1526860666,"is_pvip":false,"replies":[{"id":"2831","content":"应该是“框架”","user_name":"作者回复","user_name_real":"华仔@阿里游戏","uid":"1098920","ctime":1526872527,"ip_address":"","comment_id":9391,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1526860666","product_id":100006601,"comment_content":"系统是基于 Spring MVC 框架开发 语音读的是架构开发 读错了还是写错了？","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":418056,"discussion_content":"应该是“框架”","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1526872527,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":9273,"user_name":"万历十五年","can_delete":false,"product_type":"c1","uid":1122150,"ip_address":"","ucode":"3D8CF5DF847AE8","user_header":"https://static001.geekbang.org/account/avatar/00/11/1f/66/59e0647a.jpg","comment_is_top":false,"comment_ctime":1526721030,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1526721030","product_id":100006601,"comment_content":"系统的架构就是结构。从逻辑角度看，整个系统由各具特色的子系统组成，每个子系统都是提供特定功能的模块；从物理角度看，整个系统由不同的硬件组成，这些硬件也称为组件。这些逻辑模块或物理组件的组合规范，称为框架。","like_count":0},{"had_liked":false,"id":9255,"user_name":"轩辕十四","can_delete":false,"product_type":"c1","uid":1120272,"ip_address":"","ucode":"693B77D884950F","user_header":"https://static001.geekbang.org/account/avatar/00/11/18/10/731b4319.jpg","comment_is_top":false,"comment_ctime":1526706841,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1526706841","product_id":100006601,"comment_content":"框架约束怎么做，哪些事能做，哪些不能做;<br>架构侧重拓扑和信息流转","like_count":0},{"had_liked":false,"id":9191,"user_name":"Jet","can_delete":false,"product_type":"c1","uid":1069220,"ip_address":"","ucode":"14E20049D9BE5A","user_header":"https://static001.geekbang.org/account/avatar/00/10/50/a4/508b36a7.jpg","comment_is_top":false,"comment_ctime":1526657960,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1526657960","product_id":100006601,"comment_content":"顶层结构……的顶层如何理解？","like_count":0},{"had_liked":false,"id":9073,"user_name":"李笑天","can_delete":false,"product_type":"c1","uid":1132855,"ip_address":"","ucode":"6EDC2F311C0514","user_header":"https://static001.geekbang.org/account/avatar/00/11/49/37/54aa43a7.jpg","comment_is_top":false,"comment_ctime":1526605150,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1526605150","product_id":100006601,"comment_content":"运用框架开发模块组成系统，系统依赖组件，子系统相互协作组成更大的系统","like_count":0},{"had_liked":false,"id":8951,"user_name":"hj","can_delete":false,"product_type":"c1","uid":1111036,"ip_address":"","ucode":"BE9326735A729B","user_header":"","comment_is_top":false,"comment_ctime":1526537536,"is_pvip":false,"discussion_count":0,"race_medal":4,"score":"1526537536","product_id":100006601,"comment_content":"软件架构=业务模块&#47;组件定义+调用关系【接口】+框架","like_count":0},{"had_liked":false,"id":8725,"user_name":"missa","can_delete":false,"product_type":"c1","uid":1033417,"ip_address":"","ucode":"485CB229C4C556","user_header":"https://static001.geekbang.org/account/avatar/00/0f/c4/c9/90c8a53e.jpg","comment_is_top":false,"comment_ctime":1526387011,"is_pvip":false,"replies":[{"id":"2609","content":"这是部署架构","user_name":"作者回复","user_name_real":"华仔@阿里游戏","uid":"1098920","ctime":1526437714,"ip_address":"","comment_id":8725,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1526387011","product_id":100006601,"comment_content":"自己理解的架构是从服务器到数据库再到业务代码。怎么部署分布它们。它们之间又去怎么通信等等","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":417834,"discussion_content":"这是部署架构","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1526437714,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":8429,"user_name":"彡工鸟","can_delete":false,"product_type":"c1","uid":1108881,"ip_address":"","ucode":"37867BF7151F33","user_header":"https://static001.geekbang.org/account/avatar/00/10/eb/91/12612612.jpg","comment_is_top":false,"comment_ctime":1526208727,"is_pvip":false,"replies":[{"id":"2485","content":"标明更好理解呢","user_name":"作者回复","user_name_real":"华仔@阿里游戏","uid":"1098920","ctime":1526253886,"ip_address":"","comment_id":8429,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1526208727","product_id":100006601,"comment_content":"回过头来再读一遍，就物理的部署架构来说，是不是不应该标明具体技术组件呢？例如说nginx-web容器-mysql中的nginx和mysql，应该nginx替换为web服务器或者反向代理或者负载均衡(就看对这一层的具体定位了)。同理mysql应该替换为存储，甚至更具体的主备，主备备","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":417715,"discussion_content":"标明更好理解呢","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1526253886,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":8421,"user_name":"^_^","can_delete":false,"product_type":"c1","uid":1088001,"ip_address":"","ucode":"EE5DAC03CFC2EE","user_header":"https://static001.geekbang.org/account/avatar/00/10/9a/01/1489f98d.jpg","comment_is_top":false,"comment_ctime":1526204646,"is_pvip":false,"replies":[{"id":"2488","content":"最好别这样理解，太虚了，不懂的人还是不懂😃","user_name":"作者回复","user_name_real":"华仔@阿里游戏","uid":"1098920","ctime":1526254207,"ip_address":"","comment_id":8421,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1526204646","product_id":100006601,"comment_content":"架构是连接业务和IT的桥梁","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":417709,"discussion_content":"最好别这样理解，太虚了，不懂的人还是不懂😃","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1526254207,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":8354,"user_name":"孙振超","can_delete":false,"product_type":"c1","uid":1101755,"ip_address":"","ucode":"0F9EABC6125350","user_header":"https://static001.geekbang.org/account/avatar/00/10/cf/bb/22af0e52.jpg","comment_is_top":false,"comment_ctime":1526112511,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1526112511","product_id":100006601,"comment_content":"架构是决定系统有那些组件组成以及这些组件的关系。在实际的工作中又会有业务架构和技术架构的区分，也可以简化为分层模块图，层与层之间相互依赖，层内的模块组合起来为上一层提供服务。","like_count":0},{"had_liked":false,"id":8204,"user_name":"张彦军","can_delete":false,"product_type":"c1","uid":1122442,"ip_address":"","ucode":"BA57157ED2A3FD","user_header":"https://static001.geekbang.org/account/avatar/00/11/20/8a/6a0e960b.jpg","comment_is_top":false,"comment_ctime":1525966230,"is_pvip":false,"replies":[{"id":"2408","content":"4+1视图挺有用，但一般团队不会这么正规的操作，通常情况下会挑选最重要的一两个方面展开","user_name":"作者回复","user_name_real":"华仔@阿里游戏","uid":"1098920","ctime":1526005329,"ip_address":"","comment_id":8204,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1525966230","product_id":100006601,"comment_content":"架构，软件或系统的顶层设计。它是为某一需求或某一业务的实现或落地，而采取的构件及构件间联系的设计，一般会画一个架构图，依据的标准 规范，层次结构，包括硬件支撑环境等。<br>我考过了软考中系统架构师的考试，记得里面有逻辑视图 实现视图 部署视图 用例视图，但感觉缺乏学以致用。<br>谈一下我对架构和框架的理解：框架是为减少相似业务的重复开发，在遵守某一规范下，形成的具有基础功能的软件系统。基于此框架开发，只要遵守其规范，应该是更快，更稳定。框架实现时，本身需要事先架构好，里面有架构的约束，架构的东西。","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":417627,"discussion_content":"4+1视图挺有用，但一般团队不会这么正规的操作，通常情况下会挑选最重要的一两个方面展开","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1526005329,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":8175,"user_name":"zjhiphop","can_delete":false,"product_type":"c1","uid":1007091,"ip_address":"","ucode":"F4B8FF50364214","user_header":"https://static001.geekbang.org/account/avatar/00/0f/5d/f3/e12aee93.jpg","comment_is_top":false,"comment_ctime":1525947806,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1525947806","product_id":100006601,"comment_content":"我之前理解的架构设计是在一定约束条件下选择的符合某种规范的结构设计","like_count":0},{"had_liked":false,"id":8145,"user_name":"fatme","can_delete":false,"product_type":"c1","uid":1034451,"ip_address":"","ucode":"75A805D2BB2AD1","user_header":"https://static001.geekbang.org/account/avatar/00/0f/c8/d3/3020ae46.jpg","comment_is_top":false,"comment_ctime":1525923070,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1525923070","product_id":100006601,"comment_content":"软件架构指软件系统的顶层结构。由于软件系统可以在不同层次上划分为子系统，所以每个软件子系统都有自己的架构。而框架的基础是某种规范，规范也包括了结构部分，所以框架隐含了某种架构，框架是这种架构的逻辑实现(规范)和物理实现(基础功能)。另一方面，由于现代的软件系统越来越复杂，不存在包含系统所有方面的规范。所以，对于复杂的系统来说，某个规范只会应用到这个系统的一部分。这样，对应的框架只会影响到某个子系统。对于这样的复杂系统来说，内部会包含多个框架，甚至多种规范。它的顶层结构，也就是架构，是跨越规范和框架的。而对于简单的系统，它的架构往往等同于它使用的框架所隐含的架构。","like_count":0},{"had_liked":false,"id":8073,"user_name":"山泉","can_delete":false,"product_type":"c1","uid":1098753,"ip_address":"","ucode":"418E0A033C37E7","user_header":"https://static001.geekbang.org/account/avatar/00/10/c4/01/d79862b7.jpg","comment_is_top":false,"comment_ctime":1525908919,"is_pvip":false,"replies":[{"id":"2383","content":"希望你“醍醐灌顶”，别“提壶”灌顶，皮一下很开心😂😂","user_name":"作者回复","user_name_real":"华仔@阿里游戏","uid":"1098920","ctime":1525944144,"ip_address":"","comment_id":8073,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1525908919","product_id":100006601,"comment_content":"从逻辑的角度来拆分系统后，得到的单元就是“模块”；从物理的角度来拆分系统后，得到的单元就是“组件”。老师还举了例子，提壶灌顶的感觉，赞！","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":417571,"discussion_content":"希望你“醍醐灌顶”，别“提壶”灌顶，皮一下很开心😂😂","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1525944144,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":8065,"user_name":"show","can_delete":false,"product_type":"c1","uid":1044073,"ip_address":"","ucode":"CA742454B6F828","user_header":"https://static001.geekbang.org/account/avatar/00/0f/ee/69/39d0a2b2.jpg","comment_is_top":false,"comment_ctime":1525890049,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1525890049","product_id":100006601,"comment_content":"之前容易将模块和组件混淆。现在很清楚了。模块是一种功能上的逻辑划分。组件是物理划分，组件是可重用的，可以集成到系统中的产品。","like_count":0},{"had_liked":false,"id":8036,"user_name":"高阳路人","can_delete":false,"product_type":"c1","uid":1017091,"ip_address":"","ucode":"E7AC074945CC1E","user_header":"https://static001.geekbang.org/account/avatar/00/0f/85/03/eb460eda.jpg","comment_is_top":false,"comment_ctime":1525869417,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1525869417","product_id":100006601,"comment_content":"从逻辑的角度来拆分系统后，得到的单元就是“模块”；从物理的角度来拆分系统后，得到的单元就是“组件”。划分模块的主要目的是职责分离；划分组件的主要目的是单元复用。","like_count":0},{"had_liked":false,"id":7977,"user_name":"孔祥帅","can_delete":false,"product_type":"c1","uid":1109294,"ip_address":"","ucode":"1F3B39CA97AFE5","user_header":"https://static001.geekbang.org/account/avatar/00/10/ed/2e/d4bdf643.jpg","comment_is_top":false,"comment_ctime":1525828367,"is_pvip":false,"replies":[{"id":"2316","content":"框架和架构意思不同","user_name":"作者回复","user_name_real":"华仔@阿里游戏","uid":"1098920","ctime":1525848852,"ip_address":"","comment_id":7977,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1525828367","product_id":100006601,"comment_content":"个人理解，要区分级别，然后才能谈框架和架构。代码级别谈框架，系统级别谈架构。其实架构和框架意思是一样的的，只是指定的级别不同","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":417532,"discussion_content":"框架和架构意思不同","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1525848852,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":7940,"user_name":"杨陆伟","can_delete":false,"product_type":"c1","uid":1108457,"ip_address":"","ucode":"3BC968447406EB","user_header":"https://static001.geekbang.org/account/avatar/00/10/e9/e9/1f95e422.jpg","comment_is_top":false,"comment_ctime":1525792330,"is_pvip":true,"replies":[{"id":"2319","content":"这是为了说明简单","user_name":"作者回复","user_name_real":"华仔@阿里游戏","uid":"1098920","ctime":1525849013,"ip_address":"","comment_id":7940,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1525792330","product_id":100006601,"comment_content":"从物理角度拆分，分为nginx，mysql，web服务器这些组件，这里说的有点牵强，为了概念而概念了。其他都还挺好","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":417523,"discussion_content":"这是为了说明简单","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1525849013,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":7935,"user_name":"aslong龙","can_delete":false,"product_type":"c1","uid":1125377,"ip_address":"","ucode":"E98B905FCED558","user_header":"https://static001.geekbang.org/account/avatar/00/11/2c/01/f8bf4d7f.jpg","comment_is_top":false,"comment_ctime":1525789089,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1525789089","product_id":100006601,"comment_content":"我一直觉得架构是很抽象的概念，当别人问我自己做的产品架构是什么样的时候，我往往会从分层的角度来解释，最底层是业务无关的模块，中间层是与业务有关联的功能模块，顶层就是各个产品应用模块，也不知道这样理解是否合适。订阅这个专栏就是希望跟着老师认真地学习架构知识，成为一名架构师。","like_count":0},{"had_liked":false,"id":7767,"user_name":"Enjoystudy","can_delete":false,"product_type":"c1","uid":1028212,"ip_address":"","ucode":"179ECDFA5F518B","user_header":"https://static001.geekbang.org/account/avatar/00/0f/b0/74/f553f094.jpg","comment_is_top":false,"comment_ctime":1525705763,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1525705763","product_id":100006601,"comment_content":"架构决定各子系统如何交互，如何协作，框架是很多前人总结的开发经验然后总结出的一套可复用的代码，便于更好的搭建子系统，组件是子系统内对各功能模块的划分，组件大了可以抽取出来单独部署，就变成了子系统","like_count":0},{"had_liked":false,"id":7756,"user_name":"苟哥","can_delete":false,"product_type":"c1","uid":1102877,"ip_address":"","ucode":"A139076C94496D","user_header":"https://static001.geekbang.org/account/avatar/00/10/d4/1d/4af48531.jpg","comment_is_top":false,"comment_ctime":1525702270,"is_pvip":false,"replies":[{"id":"2244","content":"正确，但这只是从分层协议角度来拆解架构，还有其他角度","user_name":"作者回复","user_name_real":"华仔@阿里游戏","uid":"1098920","ctime":1525728972,"ip_address":"","comment_id":7756,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1525702270","product_id":100006601,"comment_content":"拿web应用来说，我之前理解的架构是从硬件设备（例如服务器配置）到应用层等7层协议的综合解决方案的设计，不知道这样理解可行否","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":417470,"discussion_content":"正确，但这只是从分层协议角度来拆解架构，还有其他角度","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1525728972,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":7754,"user_name":"文竹","can_delete":false,"product_type":"c1","uid":1103167,"ip_address":"","ucode":"74413B1975976B","user_header":"https://static001.geekbang.org/account/avatar/00/10/d5/3f/80bf4841.jpg","comment_is_top":false,"comment_ctime":1525701403,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1525701403","product_id":100006601,"comment_content":"听完了，对这六个概念，系统&#47;子系统，架构&#47;框架，模块&#47;组件还是很模糊。感觉这六个概念在特定场景可以相互转换似的。","like_count":0},{"had_liked":false,"id":7746,"user_name":"张立春","can_delete":false,"product_type":"c1","uid":1124382,"ip_address":"","ucode":"D8B4523B95D839","user_header":"https://static001.geekbang.org/account/avatar/00/11/28/1e/76e19bd3.jpg","comment_is_top":false,"comment_ctime":1525693453,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1525693453","product_id":100006601,"comment_content":"这是技术得到专栏吗！非常喜欢！","like_count":0},{"had_liked":false,"id":7724,"user_name":"QuincySx","can_delete":false,"product_type":"c1","uid":1123049,"ip_address":"","ucode":"F33848E1A4AF26","user_header":"https://static001.geekbang.org/account/avatar/00/11/22/e9/32f5fa34.jpg","comment_is_top":false,"comment_ctime":1525676111,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1525676111","product_id":100006601,"comment_content":"我曾经理解的架构<br>我之前以为架构就是组件功能的清晰划分，之前的想法很简单","like_count":0},{"had_liked":false,"id":7678,"user_name":"Dear。","can_delete":false,"product_type":"c1","uid":1035607,"ip_address":"","ucode":"FF9BD22F77CE8C","user_header":"https://static001.geekbang.org/account/avatar/00/0f/cd/57/94d49207.jpg","comment_is_top":false,"comment_ctime":1525620062,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1525620062","product_id":100006601,"comment_content":"个人浅见是 <br>架构是如何把需要做的业务系统&#47;中间件 等按一定的方式做出来,用合适的技术去做合适的事儿,满足一定的场景;<br>框架是一个模板,或者类似半成品,有助于我们更好的去实现系统&#47;中间件等.但是框架其实不是必须品.比如mvc,如果我们不用spring mvc等开源框架,其实也可以用servlet.","like_count":0},{"had_liked":false,"id":7676,"user_name":"JasonZ","can_delete":false,"product_type":"c1","uid":1104818,"ip_address":"","ucode":"992193AE44C39C","user_header":"https://static001.geekbang.org/account/avatar/00/10/db/b2/29b4f22b.jpg","comment_is_top":false,"comment_ctime":1525618828,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1525618828","product_id":100006601,"comment_content":"现在主要做的都是业务架构设计。都是从业务的角度出发，业务单元模块化。然后所谓的微服务架构设计。没有从功能模块去设计，这就是没有中后台的概念","like_count":0},{"had_liked":false,"id":7515,"user_name":"孙晓明","can_delete":false,"product_type":"c1","uid":1117094,"ip_address":"","ucode":"CAD28E4D5A3E76","user_header":"https://static001.geekbang.org/account/avatar/00/11/0b/a6/b234aa79.jpg","comment_is_top":false,"comment_ctime":1525504412,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1525504412","product_id":100006601,"comment_content":"架构是 对如何实现一个系统进行说明，可以分3个纬度：物理结构，逻辑结构，系统质量（QoS）。物理结构纬度从底向上分为硬件、操作系统、中间件、应用系统等部分；逻辑结构分为客户层、表示层、业务层、持久层、资源层等；系统质量指性能、可靠性、可用性、可扩展性、可升级性、安全等等一系列的非功能需求。三个纬度可以组成一个立方体结构，纬度之间都有相互关系。","like_count":0},{"had_liked":false,"id":7489,"user_name":"fan","can_delete":false,"product_type":"c1","uid":1067186,"ip_address":"","ucode":"8456B863D28A2C","user_header":"https://static001.geekbang.org/account/avatar/00/10/48/b2/e6e79a2e.jpg","comment_is_top":false,"comment_ctime":1525493001,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1525493001","product_id":100006601,"comment_content":"架构是对事物宏观，整体得认识。逻辑架构：认识事物看不见得部分（模块），物理架构：认识事物有形可见得部分（组件）。而框架就是实现架构过程中需要遵守的规范和约定。","like_count":0},{"had_liked":false,"id":7467,"user_name":"波波安","can_delete":false,"product_type":"c1","uid":1002452,"ip_address":"","ucode":"2A677908E5A75D","user_header":"https://static001.geekbang.org/account/avatar/00/0f/4b/d4/b7719327.jpg","comment_is_top":false,"comment_ctime":1525488160,"is_pvip":false,"discussion_count":0,"race_medal":1,"score":"1525488160","product_id":100006601,"comment_content":"软件架构是指系统的顶层结构，应该从全局考虑。以前考虑的架构多数从技术角度出发，从课程中学到架构可以从不同角度分解，课程中说到的有物理部署角度，业务逻辑角度，技术规范角度等。","like_count":0},{"had_liked":false,"id":7456,"user_name":"simiam","can_delete":false,"product_type":"c1","uid":1024546,"ip_address":"","ucode":"0827C6D8BD0444","user_header":"https://static001.geekbang.org/account/avatar/00/0f/a2/22/5a71322d.jpg","comment_is_top":false,"comment_ctime":1525486726,"is_pvip":false,"replies":[{"id":"2152","content":"架构和具体功能分不开，架构的复杂度分析来源于对功能的理解和剖析。<br><br>做完架构设计后有方案设计，方案设计就是具体的功能设计。","user_name":"作者回复","user_name_real":"华仔@阿里游戏","uid":"1098920","ctime":1525500640,"ip_address":"","comment_id":7456,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1525486726","product_id":100006601,"comment_content":"听了华哥的文章对几个概念有了新的认知。我之前一想到架构，脑袋中浮现的是一个分层的框图。马上会想每一层应该提供什么功能。请问下什么时候才会考虑具体功能呢？","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":417349,"discussion_content":"架构和具体功能分不开，架构的复杂度分析来源于对功能的理解和剖析。\n\n做完架构设计后有方案设计，方案设计就是具体的功能设计。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1525500640,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":7453,"user_name":"小河","can_delete":false,"product_type":"c1","uid":1109751,"ip_address":"","ucode":"9C2E34943CADFE","user_header":"https://static001.geekbang.org/account/avatar/00/10/ee/f7/e9dc9bda.jpg","comment_is_top":false,"comment_ctime":1525485579,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1525485579","product_id":100006601,"comment_content":"第一天：学习了系统与子系统、模块与组件、框架与架构、架构的概念等内容，系统是整个项目，子系统是相对于更大系统的说法，模块是业务逻辑角度的拆分目的是职责分离，组件是物理角度拆分目的是单元复用，框架是规范ssm，架构是结构，架构（顶层结构）可以分为很多层面：<br>比如从业务逻辑角度模块登录、朋友圈等，<br>从物理部署角度组件nginx-web服务器mysql等、<br>从开发规范角度MVC。<br><br>附加：<br>系统是由一群有关联的个体组成。<br>系统内的个体需要按照指定的规则运行，规定了个体分工和协作的方式。<br>系统能力与个能能力之和有本质区别。<br>框架是组件规范MVC，<br>是提供基础功能的产品 spring security、spring jpa。<br>","like_count":0},{"had_liked":false,"id":7447,"user_name":"明才","can_delete":false,"product_type":"c1","uid":1098917,"ip_address":"","ucode":"17F5A9E7FB777C","user_header":"https://static001.geekbang.org/account/avatar/00/10/c4/a5/c8cb87cc.jpg","comment_is_top":false,"comment_ctime":1525484384,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1525484384","product_id":100006601,"comment_content":"我所理解的架构是，过程性和结构性。过程性是指架构设计是一个过程，输入是业务输出是架构。结构性指的是架构包括了开发架构，数据存储架构，网络架构，部署架构，安全架构，可以扩展到面向用户的信息架构。架构需要解决的问题是扩展性，可用性，性能，安全几个关键问题。而架构的表达，可以文字，表格，更重要的是图片，很多情况下是以上的组合。","like_count":0},{"had_liked":false,"id":7442,"user_name":"张志佳","can_delete":false,"product_type":"c1","uid":1009650,"ip_address":"","ucode":"BBF2F7AB38378F","user_header":"https://static001.geekbang.org/account/avatar/00/0f/67/f2/abb7bfe3.jpg","comment_is_top":false,"comment_ctime":1525482994,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1525482994","product_id":100006601,"comment_content":"架构是解决领域问题流程和结构的高度抽象，模块是流程视角的分类，组件是结构视角的分类，而框架是这个架构的一种实现（不用语言特性可能实现有差异）","like_count":0},{"had_liked":false,"id":7408,"user_name":"VictorXu","can_delete":false,"product_type":"c1","uid":1119287,"ip_address":"","ucode":"CFFEFF87D0963A","user_header":"https://static001.geekbang.org/account/avatar/00/11/14/37/eaedae1f.jpg","comment_is_top":false,"comment_ctime":1525449593,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1525449593","product_id":100006601,"comment_content":"架构，设计规范;框架，实现规范;module,业务逻辑层次的划分，解耦;component,一般是功能组件，复用，如果需要也可以当做module来用","like_count":0},{"had_liked":false,"id":7404,"user_name":"冯江涛","can_delete":false,"product_type":"c1","uid":1102750,"ip_address":"","ucode":"BE1FDB5835F223","user_header":"https://static001.geekbang.org/account/avatar/00/10/d3/9e/a930f0cd.jpg","comment_is_top":false,"comment_ctime":1525448411,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1525448411","product_id":100006601,"comment_content":"原来理解的架构认为是为应用层实现提供基础支撑的一套规范，这其实应该算是框架的一部分功能吧，有点管中窥豹；我现在理解的架构应该是为实现系统功能整合各个模块组件，为整个系统提供骨架支撑，可能这样理解也有偏差，希望能跟着老师领悟到更多的架构知识","like_count":0},{"had_liked":false,"id":7403,"user_name":"Laughing","can_delete":false,"product_type":"c1","uid":1002134,"ip_address":"","ucode":"F68F1E000CA800","user_header":"https://static001.geekbang.org/account/avatar/00/0f/4a/96/99466a06.jpg","comment_is_top":false,"comment_ctime":1525448153,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1525448153","product_id":100006601,"comment_content":"在我的认知中：架构偏向于系统整体的结构，包括世纪的应该怎么配合运作，可以实现更好的流程，并且具有良好的性能；而框架也是更注重于快速实现一种需求的工具或者规范，从而达到快速开发的目的，增加对业务的关注度。","like_count":0},{"had_liked":false,"id":7392,"user_name":"Daniel Xu","can_delete":false,"product_type":"c1","uid":1119890,"ip_address":"","ucode":"14CE4803917C1A","user_header":"https://static001.geekbang.org/account/avatar/00/11/16/92/193cb14f.jpg","comment_is_top":false,"comment_ctime":1525442069,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1525442069","product_id":100006601,"comment_content":"当看到架构一般是新人入职第一堂课，很有同感，每次都是项目经理简单的用流程图画出产品的架构，自己理解的架构是一群有着自己独特功能的模块通过数据为纽带，实现一个新的功能的结构体。里面有若干子系统。每个子系统从逻辑角度，可用性角度，稳定性角度，已集群方式呈现出来。有个问题想请教华老师，目前公有云aws在推荐serverless架构，您对这种架构怎么理解！谢谢","like_count":0},{"had_liked":false,"id":7385,"user_name":"韩博恒","can_delete":false,"product_type":"c1","uid":1119917,"ip_address":"","ucode":"00919C9D748CD0","user_header":"https://static001.geekbang.org/account/avatar/00/11/16/ad/553dc35c.jpg","comment_is_top":false,"comment_ctime":1525438415,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1525438415","product_id":100006601,"comment_content":"框架是规范，架构是设计，通俗而言，以盖楼为例：房子基础就是架构，图纸就是框架。不过今天进来听听华仔讲解，更深入的了解框架与架构的区别，系统与子系统、模块与组件等。作为程序员，总是逻辑和实现，很想跨出一步，深入学习架构","like_count":0},{"had_liked":false,"id":7379,"user_name":"JRich","can_delete":false,"product_type":"c1","uid":1114901,"ip_address":"","ucode":"66AE9D61533960","user_header":"https://static001.geekbang.org/account/avatar/00/11/03/15/293a185d.jpg","comment_is_top":false,"comment_ctime":1525433662,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1525433662","product_id":100006601,"comment_content":"我所理解的架构就是系统从上而下的设计，搭的一个架子，包含了系统需要的所有组件，然后只需要往里面填充业务逻辑即可。","like_count":0},{"had_liked":false,"id":7357,"user_name":"sam","can_delete":false,"product_type":"c1","uid":1000417,"ip_address":"","ucode":"8D48F4B9045947","user_header":"https://static001.geekbang.org/account/avatar/00/0f/43/e1/b7be5560.jpg","comment_is_top":false,"comment_ctime":1525422289,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1525422289","product_id":100006601,"comment_content":"“从逻辑的角度来拆分系统后，得到的单元就是“模块”；从物理的角度来拆分系统后，得到的单元就是“组件”。划分模块的主要目的是职责分离；划分组件的主要目的是单元复用。”  这段话豁然开朗，也是项目管理的精髓啊","like_count":0},{"had_liked":false,"id":7351,"user_name":"不在迷津","can_delete":false,"product_type":"c1","uid":1058207,"ip_address":"","ucode":"E1D5CC0376D398","user_header":"https://static001.geekbang.org/account/avatar/00/10/25/9f/23be52d1.jpg","comment_is_top":false,"comment_ctime":1525413300,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1525413300","product_id":100006601,"comment_content":"架构是基于我们选择某个或多个框架的规则，然后在这个规则下面把我们的各个模块或者组件可复用和可组装的去实现我们的各个业务逻辑，来保证系统稳定快速运行，同时也可以方便的扩展新的业务。","like_count":0},{"had_liked":false,"id":7349,"user_name":"在路上","can_delete":false,"product_type":"c1","uid":1118559,"ip_address":"","ucode":"0BEC28E0772A39","user_header":"https://static001.geekbang.org/account/avatar/00/11/11/5f/0d24dba2.jpg","comment_is_top":false,"comment_ctime":1525410103,"is_pvip":false,"replies":[{"id":"2121","content":"这只是架构设计在可扩展性方面的应用","user_name":"作者回复","user_name_real":"华仔@阿里游戏","uid":"1098920","ctime":1525478746,"ip_address":"","comment_id":7349,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1525410103","product_id":100006601,"comment_content":"我原来理解的架构就是，把一个大的业务系统，从业务的角度，按照高内聚低耦合的原则，拆分成不同的小模块，每个模块都可以作为一个微服务，然后定义不同微服务之间的接口规范。还要根据业务特点，考虑服务的技术选型，还要解决一些关键问题，比如，一致性啊，怎么进行分布式存储啊，等等问题吧","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":417317,"discussion_content":"这只是架构设计在可扩展性方面的应用","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1525478746,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":7333,"user_name":"西园公子","can_delete":false,"product_type":"c1","uid":1107318,"ip_address":"","ucode":"C8A09C45A7DB5B","user_header":"https://static001.geekbang.org/account/avatar/00/10/e5/76/342f31cc.jpg","comment_is_top":false,"comment_ctime":1525403260,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1525403260","product_id":100006601,"comment_content":"我觉得框架是一种规范，让你依照这个规范来进行发挥创造，架构是指对整体项目的规划，对各种结构的构思，从而完成。","like_count":0},{"had_liked":false,"id":7237,"user_name":"A2020","can_delete":false,"product_type":"c1","uid":1067308,"ip_address":"","ucode":"8CDF5486B84EA3","user_header":"https://static001.geekbang.org/account/avatar/00/10/49/2c/b920ea41.jpg","comment_is_top":false,"comment_ctime":1525351434,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1525351434","product_id":100006601,"comment_content":"     框架~规范，架构~结构，这样来区分就清晰明了了。<br>     之前在我的印象中，我对架构的认识一个容器，能承载业务的容器，选择架构时需要根据所需业务来进行选择。","like_count":0},{"had_liked":false,"id":7228,"user_name":"留声机【玫瑰】","can_delete":false,"product_type":"c1","uid":1115508,"ip_address":"","ucode":"FF83D58740A887","user_header":"https://static001.geekbang.org/account/avatar/00/11/05/74/58613ad4.jpg","comment_is_top":false,"comment_ctime":1525346616,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1525346616","product_id":100006601,"comment_content":"以前不太懂什么框架、架构之间的区别。现在弄懂了几个概念——系统、架构、框架子系统，组件，感触颇深。个人认为，有这样的解惑平台是真心不错","like_count":0},{"had_liked":false,"id":7193,"user_name":"三军","can_delete":false,"product_type":"c1","uid":1115689,"ip_address":"","ucode":"C1BCA262D7DE6C","user_header":"https://static001.geekbang.org/account/avatar/00/11/06/29/bf619df8.jpg","comment_is_top":false,"comment_ctime":1525323996,"is_pvip":false,"replies":[{"id":"2067","content":"框架不是施工图哦，框架是样板工程","user_name":"作者回复","user_name_real":"华仔@阿里游戏","uid":"1098920","ctime":1525349617,"ip_address":"","comment_id":7193,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1525323996","product_id":100006601,"comment_content":"架构是城市规划图，框架是具体施工图，系统是各个关联的事物组成的区域（功能区），模块是所谓的工业区、科技园、大学城，组件是施工材料。","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":417272,"discussion_content":"框架不是施工图哦，框架是样板工程","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1525349617,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":7150,"user_name":"Forrest Li","can_delete":false,"product_type":"c1","uid":1014880,"ip_address":"","ucode":"E5F3999FD888D1","user_header":"https://static001.geekbang.org/account/avatar/00/0f/7c/60/0d508466.jpg","comment_is_top":false,"comment_ctime":1525310042,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1525310042","product_id":100006601,"comment_content":"这些概念围绕系统做的多角度拆解：系统强调功能，架构描述结构，模块与组件分别是从逻辑与物理角度的划分，而框架更像是一个工具箱，包含着根据规范实现的具体工具。","like_count":0},{"had_liked":false,"id":7147,"user_name":"有渔@蔡","can_delete":false,"product_type":"c1","uid":1099829,"ip_address":"","ucode":"4AB669229892C8","user_header":"","comment_is_top":false,"comment_ctime":1525308995,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1525308995","product_id":100006601,"comment_content":"宇宙万物就是上帝编写的绝妙架构。适者生存的生物，它的身体架构是当前环境下最优的。人，和人体的每个器官都是优美的架构。","like_count":0},{"had_liked":false,"id":7109,"user_name":"SHLOMA","can_delete":false,"product_type":"c1","uid":1066000,"ip_address":"","ucode":"50C0FF9C3E0FFD","user_header":"https://static001.geekbang.org/account/avatar/00/10/44/10/7bfc89a8.jpg","comment_is_top":false,"comment_ctime":1525301282,"is_pvip":false,"replies":[{"id":"2028","content":"都是逻辑角度，子系统的层次高一些，而且系统具备独立运行的特性","user_name":"作者回复","user_name_real":"华仔@阿里游戏","uid":"1098920","ctime":1525312722,"ip_address":"","comment_id":7109,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1525301282","product_id":100006601,"comment_content":"李老师，子系统与模块，这两个感觉很相近，都是从逻辑角度划分，对吗？","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":417237,"discussion_content":"都是逻辑角度，子系统的层次高一些，而且系统具备独立运行的特性","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1525312722,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":7084,"user_name":"淡云天","can_delete":false,"product_type":"c1","uid":1109218,"ip_address":"","ucode":"90A13E2A0570FF","user_header":"https://static001.geekbang.org/account/avatar/00/10/ec/e2/79780894.jpg","comment_is_top":false,"comment_ctime":1525264905,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1525264905","product_id":100006601,"comment_content":"架构是整体，框架是组件。将一系列的框架组装在一起，实现功能性需求就是架构。架构的过程更加类似于DIY，所以说架构在于选择。。。","like_count":0},{"had_liked":false,"id":7022,"user_name":"煎饼果子小神","can_delete":false,"product_type":"c1","uid":1100980,"ip_address":"","ucode":"8CA7F8AF6716B4","user_header":"https://static001.geekbang.org/account/avatar/00/10/cc/b4/c6566bc0.jpg","comment_is_top":false,"comment_ctime":1525228493,"is_pvip":false,"replies":[{"id":"1970","content":"据说极客时间会有福利😄","user_name":"作者回复","user_name_real":"华仔@阿里游戏","uid":"1098920","ctime":1525234613,"ip_address":"","comment_id":7022,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1525228493","product_id":100006601,"comment_content":"我感觉作者应该请评论区里面精彩评论的人吃饭啊，回答的好好啊，作者给出规范定义，评论区的大神们又形象的描述，想记不住都不行。。。","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":417205,"discussion_content":"据说极客时间会有福利😄","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1525234613,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":7017,"user_name":"复醉","can_delete":false,"product_type":"c1","uid":1005365,"ip_address":"","ucode":"E7B3C7964E532F","user_header":"https://static001.geekbang.org/account/avatar/00/0f/57/35/36346b0d.jpg","comment_is_top":false,"comment_ctime":1525226278,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1525226278","product_id":100006601,"comment_content":"业务架构、产品架构、技术架构、应用架构、信息架构，这几种架构的差别是？<br><br>个人理解业务架构更多聚焦业务功能；产品架构和应用架构比较像，对业务进行一定程度抽象，综合考虑可拓展、可复用等特性，划分系统边界、系统角色，梳理系统间关系、系统内关系；信息架构定义不太清晰；技术架构中关于系统和子系统划分、模块划分、概念定义是否需要与产品架构统一，这个比较困惑，各有利弊。","like_count":0},{"had_liked":false,"id":7016,"user_name":"王小强·Steven","can_delete":false,"product_type":"c1","uid":1100101,"ip_address":"","ucode":"40A7178F17801F","user_header":"https://static001.geekbang.org/account/avatar/00/10/c9/45/719231cb.jpg","comment_is_top":false,"comment_ctime":1525226072,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1525226072","product_id":100006601,"comment_content":"如果物理属性是组件的必备属性，那么很多组件都不具备。一般谈起组件，都是强调它的业务无关性和可重用，自包含也更多是指功能自包含，而非物理部署的自包含。所以把物理作为组件的必备属性，不敢苟同，也望解惑？","like_count":0},{"had_liked":false,"id":7013,"user_name":"老王","can_delete":false,"product_type":"c1","uid":1054710,"ip_address":"","ucode":"02AA850A7A9767","user_header":"https://static001.geekbang.org/account/avatar/00/10/17/f6/87aac8c1.jpg","comment_is_top":false,"comment_ctime":1525225685,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1525225685","product_id":100006601,"comment_content":"我之前所理解的架构是:代码是如何组织的？比如一个新人刚加入项目组，他总是想搞清楚代码结构，然而由于经验有限，总是不得要领，如果编码能力也差的话，就会受困于各种细节，这样就会只见树木不见森林。架构设计只所以需要很多年才能掌握，是不是因为新人总是在森林里面走，而没有机会去规划一片森林呢？","like_count":0},{"had_liked":false,"id":6988,"user_name":"夏天39度","can_delete":false,"product_type":"c1","uid":1104979,"ip_address":"","ucode":"A929B422255547","user_header":"https://static001.geekbang.org/account/avatar/00/10/dc/53/ccb62ea0.jpg","comment_is_top":false,"comment_ctime":1525216883,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1525216883","product_id":100006601,"comment_content":"框架用来定义规范简化开发，一定层度上能提高开发效率。架构是一个整体设计概念，架构决定了系统的瓶颈。","like_count":0},{"had_liked":false,"id":6985,"user_name":"ncicheng","can_delete":false,"product_type":"c1","uid":1061450,"ip_address":"","ucode":"A22815C4E3712C","user_header":"https://static001.geekbang.org/account/avatar/00/10/32/4a/2dc9cfde.jpg","comment_is_top":false,"comment_ctime":1525215808,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1525215808","product_id":100006601,"comment_content":"架构设计就是体系结构设计，DoDAF也是一种架构设计方法，一般是采用多视图的方式描述复杂系统。<br>框架是规范的具体实现，不是唯一的。","like_count":0},{"had_liked":false,"id":6980,"user_name":"飞龙在天","can_delete":false,"product_type":"c1","uid":1108375,"ip_address":"","ucode":"C71FB0F7782517","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTK3nCbqUphLx0cgQ3ib4uN5nibziamJKWEV5URXbNJGmEv2C5b4m812iczArvcpQOP4FqWmJ5oLWCO1VQ/132","comment_is_top":false,"comment_ctime":1525190655,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1525190655","product_id":100006601,"comment_content":"我理解的架构是，在一定的环境下，让系统满足特定功能与非功能需求的方式方法。","like_count":0},{"had_liked":false,"id":6970,"user_name":"好好学习","can_delete":false,"product_type":"c1","uid":1110299,"ip_address":"","ucode":"327552B5924389","user_header":"https://static001.geekbang.org/account/avatar/00/10/f1/1b/d3165de8.jpg","comment_is_top":false,"comment_ctime":1525185869,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1525185869","product_id":100006601,"comment_content":"我理解的架构，从0到1的过程，包括定义规则，定义运作方式。而框架和你的认知一样，是一种规范","like_count":0},{"had_liked":false,"id":6954,"user_name":"汪恒伟","can_delete":false,"product_type":"c1","uid":1112742,"ip_address":"","ucode":"F0C3AD3418D1EA","user_header":"https://static001.geekbang.org/account/avatar/00/10/fa/a6/caf44a65.jpg","comment_is_top":false,"comment_ctime":1525171062,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1525171062","product_id":100006601,"comment_content":"架构有业务，有功能分工，对于产品研发而言，架构应该是最先确定的，系统+子系统+中间件=架构，而框架，我更多的还是从开发角度去理解，框架是为了更好的开发，而定义的一种约定。","like_count":0},{"had_liked":false,"id":6936,"user_name":"TH","can_delete":false,"product_type":"c1","uid":1053413,"ip_address":"","ucode":"C5EA20546DC09C","user_header":"https://static001.geekbang.org/account/avatar/00/10/12/e5/592d9324.jpg","comment_is_top":false,"comment_ctime":1525150025,"is_pvip":true,"replies":[{"id":"2001","content":"模式就是某类相似问题的共同解决方案，简单来说就是套路","user_name":"作者回复","user_name_real":"华仔@阿里游戏","uid":"1098920","ctime":1525261923,"ip_address":"","comment_id":6936,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1525150025","product_id":100006601,"comment_content":"讲得非常好，指点迷津的感觉。个人理解，这些概念都可以从物理角度和逻辑角度来看待，在不同的语境中使用不同的术语。架构是一个高层次的综合体，也是老师提出“顶层结构”的意义，其不仅仅是一种实现方式和规范，还包含了理念和方法论。有一点疑问，“模式”相较于文中提及的几个概念是什么样的定义和关系？","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":417181,"discussion_content":"模式就是某类相似问题的共同解决方案，简单来说就是套路","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1525261923,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":6910,"user_name":"无名","can_delete":false,"product_type":"c1","uid":1102290,"ip_address":"","ucode":"34498F55252C4B","user_header":"https://static001.geekbang.org/account/avatar/00/10/d1/d2/ed16f7c0.jpg","comment_is_top":false,"comment_ctime":1525139023,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1525139023","product_id":100006601,"comment_content":"模糊的概念有些许清晰","like_count":0},{"had_liked":false,"id":6899,"user_name":"千年准一会","can_delete":false,"product_type":"c1","uid":1050791,"ip_address":"","ucode":"B6F1E663FEBBF0","user_header":"","comment_is_top":false,"comment_ctime":1525136497,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1525136497","product_id":100006601,"comment_content":"我理解的架构，应该是描述系统内有多少个子系统，子系统又由什么模块组成，描述需要多细的程度，就看系统的复杂度了","like_count":0},{"had_liked":false,"id":6888,"user_name":"于宏亮","can_delete":false,"product_type":"c1","uid":1101680,"ip_address":"","ucode":"6D20F87E4AD975","user_header":"https://static001.geekbang.org/account/avatar/00/10/cf/70/2730dcba.jpg","comment_is_top":false,"comment_ctime":1525104405,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1525104405","product_id":100006601,"comment_content":"我的理解：架构是思想，是抽象的。框架是实现架构的工具，有使用规范和说明，是具体的。","like_count":0},{"had_liked":false,"id":6887,"user_name":"不记年","can_delete":false,"product_type":"c1","uid":1045945,"ip_address":"","ucode":"287E40C68356DC","user_header":"https://static001.geekbang.org/account/avatar/00/0f/f5/b9/888fe350.jpg","comment_is_top":false,"comment_ctime":1525104323,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1525104323","product_id":100006601,"comment_content":"系统是个体的组合，系统内个体遵循定义好的规则运作，使系统可以展现出特有的能力，这个能力是系统内单独个体所不具有的。<br>子系统是对系统在业务角度上的分割，子系统具备系统也是一个系统。<br>模块和子系统的概念相似，个人认为更多的是语义上的区别，子系统的概念更大一些。对子系统的划分可以称之为模块。<br>组件和框架，都是从实现角度上看的不同程度的复用。框架是实现基本的功能(多少控制)，供人往里填业务。而组件可以直接拿来就用。<br>架构，对系统，子系统，模块划分。框架，组件的选择的描述","like_count":0},{"had_liked":false,"id":6872,"user_name":"丶Zero灬","can_delete":false,"product_type":"c1","uid":1073556,"ip_address":"","ucode":"B0C24B7071DABF","user_header":"https://static001.geekbang.org/account/avatar/00/10/61/94/cc6c693d.jpg","comment_is_top":false,"comment_ctime":1525085081,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1525085081","product_id":100006601,"comment_content":"原来理解的架构只包含了模块和组件，更关注功能（或者说看得见的）忽略了规则各部门的协作（看不见的）。","like_count":0},{"had_liked":false,"id":6859,"user_name":"OnE","can_delete":false,"product_type":"c1","uid":1006058,"ip_address":"","ucode":"5D10DB1CBE6DCF","user_header":"https://static001.geekbang.org/account/avatar/00/0f/59/ea/38c063d5.jpg","comment_is_top":false,"comment_ctime":1525058049,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1525058049","product_id":100006601,"comment_content":"架构，类似于体系结构(系统结构)，都是Architecture，是顶层设计，前者为软件，后者为硬件。","like_count":0},{"had_liked":false,"id":6856,"user_name":"紫荆王朝","can_delete":false,"product_type":"c1","uid":1106066,"ip_address":"","ucode":"FC9F7FBEEB7311","user_header":"https://static001.geekbang.org/account/avatar/00/10/e0/92/b678133e.jpg","comment_is_top":false,"comment_ctime":1525055997,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1525055997","product_id":100006601,"comment_content":"架构是对系统进行追求合理的一种梳理划分，就像秦始皇划分天下三十六个郡为了更好的治理（模块化），用对应行政机构进行管理（组件）。就像更为早期实行诸侯分封制进行模块化，架构是为了系统的最优设计","like_count":0},{"had_liked":false,"id":6850,"user_name":"oracle3","can_delete":false,"product_type":"c1","uid":1099710,"ip_address":"","ucode":"8C36613AD141EC","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/xGMAMkFvqUicT1Tn2ibn6U5sw6skmU753Jqc45dOPIDJsr1wTickNALFiaAJfl89OeNGGjicfuACndN4l5596NhPHfw/132","comment_is_top":false,"comment_ctime":1525048956,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1525048956","product_id":100006601,"comment_content":"架构一般先从物理层面分层，再从逻辑层面分模块，再用mvc，mvp这些框架规范开发，几个方面的集成才是完整的架构，不知道这个观点对不对？","like_count":0},{"had_liked":false,"id":6846,"user_name":"风继续吹","can_delete":false,"product_type":"c1","uid":1111073,"ip_address":"","ucode":"BD339FE0211FD1","user_header":"https://static001.geekbang.org/account/avatar/00/10/f4/21/b2933c3c.jpg","comment_is_top":false,"comment_ctime":1525045825,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1525045825","product_id":100006601,"comment_content":"模块更多从业务功能方面切分，组件更多从技术方面切分（我理解为函数的另一种叫法），如加密组件、通讯组件等，达到技术编程的可复用性～","like_count":0},{"had_liked":false,"id":6845,"user_name":"BearyW","can_delete":false,"product_type":"c1","uid":1111255,"ip_address":"","ucode":"FC85025BE45E46","user_header":"https://static001.geekbang.org/account/avatar/00/10/f4/d7/c95904a2.jpg","comment_is_top":false,"comment_ctime":1525045465,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1525045465","product_id":100006601,"comment_content":"我一直的想法就是，架构是需要设计的，设计各子系统，模块之间的关系。而框架的关系是已经固定的，主要是应用上去。","like_count":0},{"had_liked":false,"id":6844,"user_name":"fish007","can_delete":false,"product_type":"c1","uid":1104203,"ip_address":"","ucode":"A3625A49573826","user_header":"https://static001.geekbang.org/account/avatar/00/10/d9/4b/013e19b7.jpg","comment_is_top":false,"comment_ctime":1525044333,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1525044333","product_id":100006601,"comment_content":"以汽车为例讲解可能更容易理解，整体-系统，功能-模块，组件-零件，架构-内部结构，框架-可复用结构，对吗？","like_count":0},{"had_liked":false,"id":6839,"user_name":"任锋","can_delete":false,"product_type":"c1","uid":1086592,"ip_address":"","ucode":"8C32C85A61C426","user_header":"https://static001.geekbang.org/account/avatar/00/10/94/80/70e483f6.jpg","comment_is_top":false,"comment_ctime":1525018859,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1525018859","product_id":100006601,"comment_content":"非常感谢华仔的回复，看到您的回复，简直醍醐灌顶，对于开发来说，很少知道物理结构是什么样的，比如我们所了解到我们网站的物理结构，首先是web服务 用的nginx（具体多少台服务器 不太清楚）存储用的mysql集群 一主多从 （也不知道有多少台服务器，运维说我们连接的是代理地址 后面会平均分配到各个存储服务器上去） redis缓存集群用的是rediscluster. (12台服务器）😄 软件架构后面在自己梳理一下。非常希望能加您的微信 renf_cd.","like_count":0},{"had_liked":false,"id":6835,"user_name":"YEROM","can_delete":false,"product_type":"c1","uid":1061136,"ip_address":"","ucode":"D5FD8FC04A11B5","user_header":"https://static001.geekbang.org/account/avatar/00/10/31/10/4e2617dd.jpg","comment_is_top":false,"comment_ctime":1525013869,"is_pvip":false,"replies":[{"id":"1923","content":"数据架构，业务架构，安全架构都是架构的一类，只是从不同的角度观察系统而已，通常情况下不太可能用一个架构就能够涵盖所有的角度","user_name":"作者回复","user_name_real":"华仔@阿里游戏","uid":"1098920","ctime":1525016976,"ip_address":"","comment_id":6835,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1525013869","product_id":100006601,"comment_content":"软件架构我觉得基本就是你讲的内容。不过其他部分，比如业务架构、数据架构、安全架构等，也是更大的一个架构范畴。如果中小公司，这些架构可以包含到软件架构里，没有太大影响，但是大型公司就不一样了。","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":417153,"discussion_content":"数据架构，业务架构，安全架构都是架构的一类，只是从不同的角度观察系统而已，通常情况下不太可能用一个架构就能够涵盖所有的角度","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1525016976,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":6829,"user_name":"江南皮革厂研发中心保安队长","can_delete":false,"product_type":"c1","uid":1099584,"ip_address":"","ucode":"231419643A5CC5","user_header":"https://static001.geekbang.org/account/avatar/00/10/c7/40/66a203cd.jpg","comment_is_top":false,"comment_ctime":1524994562,"is_pvip":false,"replies":[{"id":"1924","content":"名正才能言顺，否则一堆人聊的很开心，结果大家说的都不是同一个东西，那就没有意义了","user_name":"作者回复","user_name_real":"华仔@阿里游戏","uid":"1098920","ctime":1525017047,"ip_address":"","comment_id":6829,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1524994562","product_id":100006601,"comment_content":"受教了，概念虽然不是我们需要钻牛角尖的点，但是需要在实践和案例中正确地回归概念，这样才能有更好的视角去理解新知识和新技术！","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":417151,"discussion_content":"名正才能言顺，否则一堆人聊的很开心，结果大家说的都不是同一个东西，那就没有意义了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1525017047,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":6828,"user_name":"phoneone","can_delete":false,"product_type":"c1","uid":1111563,"ip_address":"","ucode":"43A3DB2427B14E","user_header":"https://static001.geekbang.org/account/avatar/00/10/f6/0b/5656988d.jpg","comment_is_top":false,"comment_ctime":1524993571,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1524993571","product_id":100006601,"comment_content":"架构是针对系统来说的，这个系统包括系统的子系统；指明系统有什么，该怎么运作；如何划分层次！","like_count":0},{"had_liked":false,"id":6827,"user_name":"phoneone","can_delete":false,"product_type":"c1","uid":1111563,"ip_address":"","ucode":"43A3DB2427B14E","user_header":"https://static001.geekbang.org/account/avatar/00/10/f6/0b/5656988d.jpg","comment_is_top":false,"comment_ctime":1524993568,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1524993568","product_id":100006601,"comment_content":"架构是针对系统来说的，这个系统包括系统的子系统；指明系统有什么，该怎么运作；如何划分层次！","like_count":0},{"had_liked":false,"id":6824,"user_name":"caiyun","can_delete":false,"product_type":"c1","uid":1072194,"ip_address":"","ucode":"E36B27674F1322","user_header":"","comment_is_top":false,"comment_ctime":1524984798,"is_pvip":false,"replies":[{"id":"1925","content":"框架理解为半成品不太好，理解为模具更好一点，软件架构也不等于框架，组件与业务逻辑也是有关系的","user_name":"作者回复","user_name_real":"华仔@阿里游戏","uid":"1098920","ctime":1525017222,"ip_address":"","comment_id":6824,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1524984798","product_id":100006601,"comment_content":"架构分为系统架构和软件架构；框架是系统的半成品，将共通处理在框架中实现，提高开发效率和品质；一定程度上软件架构类似等于框架；模块是从业务逻辑层面进行的划分；组件是与业务逻辑无关的共通处理的实现。四者交织在一起，构成系统开发的基石。","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":417150,"discussion_content":"框架理解为半成品不太好，理解为模具更好一点，软件架构也不等于框架，组件与业务逻辑也是有关系的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1525017222,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":6814,"user_name":"Tom","can_delete":false,"product_type":"c1","uid":1109832,"ip_address":"","ucode":"00EEDE4CB11776","user_header":"","comment_is_top":false,"comment_ctime":1524978880,"is_pvip":false,"replies":[{"id":"1929","content":"这个就是4+1视图的观点，但实际应用过程中，很少每次都全部画出来，而且这是描述方法，不是设计方法","user_name":"作者回复","user_name_real":"华仔@阿里游戏","uid":"1098920","ctime":1525017534,"ip_address":"","comment_id":6814,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1524978880","product_id":100006601,"comment_content":"我所理解的架构：\r<br>架构是系统的基础结构。各层面上，结构体现为顶级单元以及他们之间的关联关系。\r<br>• 逻辑层面上，最终用户看到的功能集，功能由哪些子系统、顶级模块等逻辑单元，以及关联关系组成。\r<br>• 开发层面上，程序员怎么实现，所看到的子系统、包图、框架、类库以及总体代码结构。\r<br>• 物理层面上，系统运维工程师要部署哪些组件、组件的拓扑结构，可部署单元有：Nginx&#47;web server&#47;db&#47;cache&#47;mq等等各种用途的单元。\r<br>• 运行层面上，是系统处理及通讯的动态过程，运行性能、并发、分布式情况。","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":417145,"discussion_content":"这个就是4+1视图的观点，但实际应用过程中，很少每次都全部画出来，而且这是描述方法，不是设计方法","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1525017534,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":6813,"user_name":"张玮(大圣)","can_delete":false,"product_type":"c1","uid":1111343,"ip_address":"","ucode":"D567C4BE87D116","user_header":"https://static001.geekbang.org/account/avatar/00/10/f5/2f/56117bab.jpg","comment_is_top":false,"comment_ctime":1524978711,"is_pvip":false,"replies":[{"id":"1930","content":"这已经是我见过的最易懂的呢😂<br>俗话说师傅领进门，修行靠个人，我主要还是提炼核心和关键点，更多细节还需要自己体会，当然随着后面的章节逐步展开，也许很多疑问也就慢慢解决了","user_name":"作者回复","user_name_real":"华仔@阿里游戏","uid":"1098920","ctime":1525017699,"ip_address":"","comment_id":6813,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1524978711","product_id":100006601,"comment_content":"另外补充下：其实朗读的同学技术名词发音是对的，只是长期读错的我们没搞对哈，<br><br>多谢运华做的这个分享，提个意见：能否再把一些原理说的更易懂，再次提炼，可能对我们理解的知识又是一个升级！","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":417144,"discussion_content":"这已经是我见过的最易懂的呢😂\n俗话说师傅领进门，修行靠个人，我主要还是提炼核心和关键点，更多细节还需要自己体会，当然随着后面的章节逐步展开，也许很多疑问也就慢慢解决了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1525017699,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":6812,"user_name":"张玮(大圣)","can_delete":false,"product_type":"c1","uid":1111343,"ip_address":"","ucode":"D567C4BE87D116","user_header":"https://static001.geekbang.org/account/avatar/00/10/f5/2f/56117bab.jpg","comment_is_top":false,"comment_ctime":1524977857,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1524977857","product_id":100006601,"comment_content":"框架，framework 人们长期解决一类问题形成的一种固定功能工具<br><br>架构，architecture 如何让组成部分按既定规则，要求工作，可以借助框架，当没有类似框架时，需要自力更生","like_count":0},{"had_liked":false,"id":6801,"user_name":"卫江","can_delete":false,"product_type":"c1","uid":1101226,"ip_address":"","ucode":"DE2F7A6916F1A9","user_header":"https://static001.geekbang.org/account/avatar/00/10/cd/aa/33d48789.jpg","comment_is_top":false,"comment_ctime":1524968215,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1524968215","product_id":100006601,"comment_content":"架构是抽象的思想和设计，框架是具体的一些实现！","like_count":0},{"had_liked":false,"id":6800,"user_name":"Mario","can_delete":false,"product_type":"c1","uid":1111208,"ip_address":"","ucode":"34B9D39C949446","user_header":"https://static001.geekbang.org/account/avatar/00/10/f4/a8/15501a28.jpg","comment_is_top":false,"comment_ctime":1524967919,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1524967919","product_id":100006601,"comment_content":"框架：是简答题；<br>架构：是命题作文；<br>","like_count":0},{"had_liked":false,"id":6798,"user_name":"胖胖的程序猿","can_delete":false,"product_type":"c1","uid":1110423,"ip_address":"","ucode":"2C0B0F3A83F5D6","user_header":"https://static001.geekbang.org/account/avatar/00/10/f1/97/e3bbbb14.jpg","comment_is_top":false,"comment_ctime":1524966262,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1524966262","product_id":100006601,"comment_content":"本人是做Java后台开发，从后台服务理解的架构: 从业务角度去进行系统拆分，拆分成多个子系统独立部署，子系统之间利用框架如 dubbo,hsf,springcloud，mq消息等框架来进行交互，，每个子系统内部实现又按照一些功能的划分进行分割模块，每个子系统可能有自己的数据库和表，按照mvc和一些设计模式来是实现功能，必要时用到redis缓存一些高频数据，再利用nginx负载均衡，集群等技术保证一些可用性。听起来更多像是一些技术的堆砌。","like_count":0},{"had_liked":false,"id":6795,"user_name":"微笑的向日葵","can_delete":false,"product_type":"c1","uid":1099151,"ip_address":"","ucode":"90659BD4413DF1","user_header":"https://static001.geekbang.org/account/avatar/00/10/c5/8f/80443115.jpg","comment_is_top":false,"comment_ctime":1524965917,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1524965917","product_id":100006601,"comment_content":"系统是产品，比如微信是一个社交产品；<br>架构是有效合理的整合子系统，如用户子系统，支付子系统等等，由于微信比较复杂是一个多机系统，一般的办公系统是单机系统用它的开发框架表示也可以；<br>子系统是各个模块和组件为了实现子系统的业务功能如登录功能就有登录组件，oauth2授权组件等<br>组件和模块都是子系统的功能单元<br>","like_count":0},{"had_liked":false,"id":6794,"user_name":"周龙亭","can_delete":false,"product_type":"c1","uid":1004577,"ip_address":"","ucode":"21BD0DD15CFCA3","user_header":"https://static001.geekbang.org/account/avatar/00/0f/54/21/8c13a2b4.jpg","comment_is_top":false,"comment_ctime":1524965887,"is_pvip":false,"replies":[{"id":"1932","content":"这是典型的业务架构，中间件，基础软件就不能这么理解，例如mysql的架构","user_name":"作者回复","user_name_real":"华仔@阿里游戏","uid":"1098920","ctime":1525017828,"ip_address":"","comment_id":6794,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1524965887","product_id":100006601,"comment_content":"我理解的架构首先是对业务系统的抽象，把具体的业务系统用技术的手段表达出来。把整体系统拆分成一个个子系统，定义子系统之间的交互方式。然后做技术上的选型，开发语言，开发框架，数据库，缓存等的选择。","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":417140,"discussion_content":"这是典型的业务架构，中间件，基础软件就不能这么理解，例如mysql的架构","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1525017828,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":6792,"user_name":"focusOn","can_delete":false,"product_type":"c1","uid":1000419,"ip_address":"","ucode":"35B80F9F7C316C","user_header":"https://static001.geekbang.org/account/avatar/00/0f/43/e3/abb7bfe3.jpg","comment_is_top":false,"comment_ctime":1524964182,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1524964182","product_id":100006601,"comment_content":"架构和框架没有直接关系，架构的目的是以一个大局观的角度去考虑，寻找最优解！框架只是实现你架构的一种技术选型。","like_count":0},{"had_liked":false,"id":6790,"user_name":"darkleo","can_delete":false,"product_type":"c1","uid":1023395,"ip_address":"","ucode":"126DF780822654","user_header":"https://static001.geekbang.org/account/avatar/00/0f/9d/a3/a780d006.jpg","comment_is_top":false,"comment_ctime":1524963984,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1524963984","product_id":100006601,"comment_content":"架构是结构，业务上得逻辑拆分结构，物理上得结构，代码实现里的结构。<br>框架则是规范，标准。<br>模块：业务的逻辑拆分。模块也可以当组件来开发。<br>组件：物理的拆分，可插拔。<br>","like_count":0},{"had_liked":false,"id":6789,"user_name":"清泉","can_delete":false,"product_type":"c1","uid":1102743,"ip_address":"","ucode":"28EAE68B33A140","user_header":"https://static001.geekbang.org/account/avatar/00/10/d3/97/953a9f5a.jpg","comment_is_top":false,"comment_ctime":1524963684,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1524963684","product_id":100006601,"comment_content":"架构是用来描述系统结构的。它明确了系统里应该有哪些个体，以及这些个体之间按照什么规则协作。架构在描述系统上有多个视角，可以是业务逻辑上的、物理部署上的以及开发规范上的等","like_count":0},{"had_liked":false,"id":6788,"user_name":"天天向上卡索","can_delete":false,"product_type":"c1","uid":1009850,"ip_address":"","ucode":"E3724C3B39BD3F","user_header":"https://static001.geekbang.org/account/avatar/00/0f/68/ba/c0cf8bf3.jpg","comment_is_top":false,"comment_ctime":1524962252,"is_pvip":false,"replies":[{"id":"1933","content":"系统和子系统类似一个俄罗斯套娃，可以分多层，下层的系统是上层的子系统","user_name":"作者回复","user_name_real":"华仔@阿里游戏","uid":"1098920","ctime":1525017936,"ip_address":"","comment_id":6788,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1524962252","product_id":100006601,"comment_content":"架构包括物理架构和逻辑架构，物理架构一般是指机房，网络，服务器等方面的架构，逻辑机构一般指业务架构，系统如何划分为对应子系统，逻辑上由哪些子系统及模块组成。<br>系统和子系统感觉有时候没有明确的界限，有可能一个系统也是另一个系统的子系统，但对于系统内内部各部分而言又算是一个系统，不知道是不是这样，还请多多指教","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":417139,"discussion_content":"系统和子系统类似一个俄罗斯套娃，可以分多层，下层的系统是上层的子系统","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1525017936,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":6784,"user_name":"lm","can_delete":false,"product_type":"c1","uid":1039989,"ip_address":"","ucode":"D75BF033184C28","user_header":"https://static001.geekbang.org/account/avatar/00/0f/de/75/30476503.jpg","comment_is_top":false,"comment_ctime":1524942996,"is_pvip":false,"replies":[{"id":"1934","content":"没错，就是“架构”，架构需要明确规则，框架也要明确规则","user_name":"作者回复","user_name_real":"华仔@阿里游戏","uid":"1098920","ctime":1525018107,"ip_address":"","comment_id":6784,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1524942996","product_id":100006601,"comment_content":"“其次，系统中的个体需要“根据某种规则”运作，架构需要明确个体运作和协作的规则。”<br>我猜华哥这里的“架构”应该是“框架”😝","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":417138,"discussion_content":"没错，就是“架构”，架构需要明确规则，框架也要明确规则","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1525018107,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":6783,"user_name":"LRG-","can_delete":false,"product_type":"c1","uid":1090110,"ip_address":"","ucode":"497C983B36A4A2","user_header":"https://static001.geekbang.org/account/avatar/00/10/a2/3e/7d9812f2.jpg","comment_is_top":false,"comment_ctime":1524942732,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1524942732","product_id":100006601,"comment_content":"我理解架构有点像化学中原子构成分子，达到一种稳定的状态，原子不同的空间排列方式出来的分子就有不同的特性。框架是套规范，符合规定的特性就可以说用了那个框架，框架可以迭代细化下去，spring是基于DI框架，通用注册系统基于spring框架...","like_count":0},{"had_liked":false,"id":6780,"user_name":"任锋","can_delete":false,"product_type":"c1","uid":1086592,"ip_address":"","ucode":"8C32C85A61C426","user_header":"https://static001.geekbang.org/account/avatar/00/10/94/80/70e483f6.jpg","comment_is_top":false,"comment_ctime":1524934522,"is_pvip":false,"replies":[{"id":"1935","content":"图中的图都是架构图，只是比较简单，麻雀虽小五脏俱全😄","user_name":"作者回复","user_name_real":"华仔@阿里游戏","uid":"1098920","ctime":1525018156,"ip_address":"","comment_id":6780,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1524934522","product_id":100006601,"comment_content":"希望老师能给一张架构图看看，看了这篇文章我理解感觉又不太理解，因为顶层结构，我想知道架构图怎么画。有没有真实系统案例分享一下。谢谢🙏","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":417137,"discussion_content":"图中的图都是架构图，只是比较简单，麻雀虽小五脏俱全😄","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1525018156,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":6779,"user_name":"任锋","can_delete":false,"product_type":"c1","uid":1086592,"ip_address":"","ucode":"8C32C85A61C426","user_header":"https://static001.geekbang.org/account/avatar/00/10/94/80/70e483f6.jpg","comment_is_top":false,"comment_ctime":1524934174,"is_pvip":false,"replies":[{"id":"1936","content":"面试最好都讲，有的面试官对物理结构比较关注，有的对逻辑结构比较关注","user_name":"作者回复","user_name_real":"华仔@阿里游戏","uid":"1098920","ctime":1525018216,"ip_address":"","comment_id":6779,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1524934174","product_id":100006601,"comment_content":"您好 华仔，我理解的架构是两种，第一从软件结构来分，第二从物理结构方面分。面试 一般问你们网站是什么架构？我是不是应该从软件结构方面来回答呢？ ","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":417136,"discussion_content":"面试最好都讲，有的面试官对物理结构比较关注，有的对逻辑结构比较关注","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1525018216,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":6778,"user_name":"沉默的雪人","can_delete":false,"product_type":"c1","uid":1107012,"ip_address":"","ucode":"1154625C92B54B","user_header":"https://static001.geekbang.org/account/avatar/00/10/e4/44/c4eadde0.jpg","comment_is_top":false,"comment_ctime":1524933900,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1524933900","product_id":100006601,"comment_content":"架构就是一个软件系统的顶层结构，我原来就是这么理解的。","like_count":0},{"had_liked":false,"id":6776,"user_name":"tomsong2018","can_delete":false,"product_type":"c1","uid":1073918,"ip_address":"","ucode":"58077D49B23BAF","user_header":"https://static001.geekbang.org/account/avatar/00/10/62/fe/ade69bda.jpg","comment_is_top":false,"comment_ctime":1524933360,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1524933360","product_id":100006601,"comment_content":"字面理解框架，搭建架子，重复造轮子。架构就是这个架子里面主要有什么。","like_count":0},{"had_liked":false,"id":6775,"user_name":"lecury","can_delete":false,"product_type":"c1","uid":1107378,"ip_address":"","ucode":"14EFC32076D4E1","user_header":"https://static001.geekbang.org/account/avatar/00/10/e5/b2/02199798.jpg","comment_is_top":false,"comment_ctime":1524933256,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1524933256","product_id":100006601,"comment_content":"我理解的架构是：描述组成整个系统的个体，以及个体之间的关系。","like_count":0},{"had_liked":false,"id":6773,"user_name":"青色烟雨","can_delete":false,"product_type":"c1","uid":1110920,"ip_address":"","ucode":"5FC505E5CAD0D1","user_header":"","comment_is_top":false,"comment_ctime":1524932283,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1524932283","product_id":100006601,"comment_content":"模块是逻辑维度，组件物理维度划分","like_count":0},{"had_liked":false,"id":6769,"user_name":"YunliangChen","can_delete":false,"product_type":"c1","uid":1092211,"ip_address":"","ucode":"C29C530B57156A","user_header":"https://static001.geekbang.org/account/avatar/00/10/aa/73/60607907.jpg","comment_is_top":false,"comment_ctime":1524926983,"is_pvip":false,"replies":[{"id":"1938","content":"欲知后事如何，请听后面分解","user_name":"作者回复","user_name_real":"华仔@阿里游戏","uid":"1098920","ctime":1525018319,"ip_address":"","comment_id":6769,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1524926983","product_id":100006601,"comment_content":"传统的架构和微服务架构有什么区别和联系","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":417134,"discussion_content":"欲知后事如何，请听后面分解","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1525018319,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":6766,"user_name":"张小洋","can_delete":false,"product_type":"c1","uid":1108899,"ip_address":"","ucode":"53DDB506993F92","user_header":"https://static001.geekbang.org/account/avatar/00/10/eb/a3/cf40911d.jpg","comment_is_top":false,"comment_ctime":1524922917,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1524922917","product_id":100006601,"comment_content":"我理解的，系统是为了满足一系列业务需求的，能work的系统不难做，但是work的很好的系统不容易，尤其是随着需求的变化，如何保证系统能work且持续work，甚至能指引需求给需求更大的空间。<br><br>老师提到了规范，我想规范就是那保证系统不畸形的良药，但是如何设计规范，希望能听到业务、技术等方面的建议。尤其是作为技术从业者，如何和产品、运营等角色协作好，既能满足需求，又能有所沉淀。","like_count":0},{"had_liked":false,"id":6764,"user_name":"陈奇","can_delete":false,"product_type":"c1","uid":1102507,"ip_address":"","ucode":"E4866AFD9D53B1","user_header":"https://static001.geekbang.org/account/avatar/00/10/d2/ab/55015ae6.jpg","comment_is_top":false,"comment_ctime":1524921698,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1524921698","product_id":100006601,"comment_content":"架构就是系统的说明书。架构也指构架系统的能力。不过我最以为然的定义是，架构是业务和技术实现之间的桥梁。","like_count":0},{"had_liked":false,"id":6763,"user_name":"苏本东","can_delete":false,"product_type":"c1","uid":1107338,"ip_address":"","ucode":"8E97AE524B4CD1","user_header":"https://static001.geekbang.org/account/avatar/00/10/e5/8a/9795f8e4.jpg","comment_is_top":false,"comment_ctime":1524921689,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1524921689","product_id":100006601,"comment_content":"我的理解是：框架确定工程实施标准，不能超出框架规定的框框；架构确定整个工程的构成部分和他们之间的协作关系。框架内敛，架构外放。<br>","like_count":0},{"had_liked":false,"id":6761,"user_name":"Panda","can_delete":false,"product_type":"c1","uid":1095740,"ip_address":"","ucode":"911A200C7B18BE","user_header":"https://static001.geekbang.org/account/avatar/00/10/b8/3c/1a294619.jpg","comment_is_top":false,"comment_ctime":1524920820,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1524920820","product_id":100006601,"comment_content":"框架是图纸  组件是建材","like_count":0},{"had_liked":false,"id":6729,"user_name":"Tom","can_delete":false,"product_type":"c1","uid":1109832,"ip_address":"","ucode":"00EEDE4CB11776","user_header":"","comment_is_top":false,"comment_ctime":1524919097,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1524919097","product_id":100006601,"comment_content":"一、先来说下子系统与模块<br>为什么是子系统而不是模块呢？两者的关系与区别？<br>1、逻辑视角上，都是逻辑单元，子系统是更高一级的逻辑单元，子系统是模块的集合，系统是子系统、模块的集合。<br>    子系统内部各模块间比子系统外的模块有更高的内聚，这是划分子系统主要因素。<br>2、物理视图上，子系统是可部署组件，模块不是可部署组件。子系统、系统可以只包含一个模块。<br><br>我的理解如上，如有误感谢指正一下，谢谢！","like_count":0},{"had_liked":false,"id":6728,"user_name":"君不得闲","can_delete":false,"product_type":"c1","uid":1101581,"ip_address":"","ucode":"718AA2C9B410BB","user_header":"https://static001.geekbang.org/account/avatar/00/10/cf/0d/f4150547.jpg","comment_is_top":false,"comment_ctime":1524919036,"is_pvip":false,"discussion_count":0,"race_medal":1,"score":"1524919036","product_id":100006601,"comment_content":"我觉得架构就是通过抽象的概念把一个大规模的系统的一些共同点提炼出来形成一个个子系统，一个个子系统再细分成很多模块，慢慢的到一个个职责单一的接口和实现多个接口的业务。","like_count":0},{"had_liked":false,"id":6727,"user_name":"amy","can_delete":false,"product_type":"c1","uid":1106631,"ip_address":"","ucode":"C6DAA11AFD3EC9","user_header":"https://static001.geekbang.org/account/avatar/00/10/e2/c7/f671bd93.jpg","comment_is_top":false,"comment_ctime":1524918811,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1524918811","product_id":100006601,"comment_content":"架构从上到下开始设计系统，子系统，模块等，选择合适的框架，组件，使各个模块能组合成功能正常的子系统，再把子系统组合成系统","like_count":0},{"had_liked":false,"id":6725,"user_name":"ericzx","can_delete":false,"product_type":"c1","uid":1107362,"ip_address":"","ucode":"9A973FE5016C0D","user_header":"https://static001.geekbang.org/account/avatar/00/10/e5/a2/908ba254.jpg","comment_is_top":false,"comment_ctime":1524917727,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1524917727","product_id":100006601,"comment_content":"原来理解的架构比较狭隘，更多从代码的设计上考虑。只要我的设计实现能够应对需求的不断变化，而不用或很少修改代码，就是一个好的架构。读完文章后，现在的理解是架构对业务的需求进行划分，整体上定义一个顶层系统，再拆分实现不同需求的子系统。再对每个子系统从逻辑上进行功能模块的划分，物理上根据业务特点进行组件的选取，然后从规范上选取技术框架。最后根据某些规则进行系统的关联。完成整个系统的架构。","like_count":0},{"had_liked":false,"id":6720,"user_name":"dDDbbD","can_delete":false,"product_type":"c1","uid":1109682,"ip_address":"","ucode":"41816045419532","user_header":"","comment_is_top":false,"comment_ctime":1524916892,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1524916892","product_id":100006601,"comment_content":"我理解框架是说我们可以在承重墙和柱子构建的框中搭建我们的房间，强调的是框的范围功能；架构是说我们从房间的功能考虑柱子和墙及搭建的结构，强调的是结构关系。","like_count":0},{"had_liked":false,"id":6719,"user_name":"叔鱼","can_delete":false,"product_type":"c1","uid":1048657,"ip_address":"","ucode":"22F5B99179C02D","user_header":"https://static001.geekbang.org/account/avatar/00/10/00/51/4739206f.jpg","comment_is_top":false,"comment_ctime":1524916160,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1524916160","product_id":100006601,"comment_content":"谢谢华哥。听了分享之后对系统和框架的理解深入了很多。我之前理解的架构，这里特指软件系统的架构，就是：为了提供某种能力，你设计了一套系统，这个系统有内部多个提供不同功能的模块协作组成，而架构就是：你选择了(开发了)哪些特定功能的模块，这些模块分别完成什么职责，你把这些模块『架』在这个系统的什么位置，他们之间怎么交互协作和分工，通过把这些模块『架』在不同的位置形成了一种结构，并定义这些模块之间交互协作的规则，从而形成一个能给你提供目标能力的系统。","like_count":0},{"had_liked":false,"id":6718,"user_name":"娟子","can_delete":false,"product_type":"c1","uid":1081752,"ip_address":"","ucode":"67943B5FE05C38","user_header":"https://static001.geekbang.org/account/avatar/00/10/81/98/2bf97547.jpg","comment_is_top":false,"comment_ctime":1524916127,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1524916127","product_id":100006601,"comment_content":"以前觉得架构很高大上，觉得很难学，读了老师的文章，对架构的概念了解，一直觉得架构是各个模块组合而成的","like_count":0},{"had_liked":false,"id":6714,"user_name":"招耳","can_delete":false,"product_type":"c1","uid":1001825,"ip_address":"","ucode":"D163E1A6377CF6","user_header":"https://static001.geekbang.org/account/avatar/00/0f/49/61/abb7bfe3.jpg","comment_is_top":false,"comment_ctime":1524913491,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1524913491","product_id":100006601,"comment_content":"架构关注的是大的架子，框架是针对架子的某个地方的实现","like_count":0},{"had_liked":false,"id":6713,"user_name":"亚林","can_delete":false,"product_type":"c1","uid":1018972,"ip_address":"","ucode":"4A5A6D24314B79","user_header":"https://static001.geekbang.org/account/avatar/00/0f/8c/5c/3f164f66.jpg","comment_is_top":false,"comment_ctime":1524913360,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1524913360","product_id":100006601,"comment_content":"架构是抽象性的思想，框架是对架构的实现；系统，子系统都是对业务的抽象分解确定；模块更是从业务上面的分解和技术功能上面的定义，模块是从具体技术的落地方案。","like_count":0},{"had_liked":false,"id":6708,"user_name":"加油","can_delete":false,"product_type":"c1","uid":1100555,"ip_address":"","ucode":"56BBBC79006D59","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/e3TIKUiaUMfWNnoDPvydj00GAlxPmHYOlnk65OWhLDTrNXxNMqVEIHiajq3ws1gvWHToqq1mXR3QLwyUGGU2ibCpQ/132","comment_is_top":false,"comment_ctime":1524911563,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1524911563","product_id":100006601,"comment_content":"老师，感觉目前好多加厚文章和公司架构都是各种流行技术堆砌，对于新人如何入门","like_count":0},{"had_liked":false,"id":6707,"user_name":"王旭东","can_delete":false,"product_type":"c1","uid":1108106,"ip_address":"","ucode":"61950FD5D5BFF9","user_header":"https://static001.geekbang.org/account/avatar/00/10/e8/8a/e3032578.jpg","comment_is_top":false,"comment_ctime":1524911308,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1524911308","product_id":100006601,"comment_content":"架构由基础结构替换为顶层结构，这里的顶层结构是不是也应该有划分，比如整个业务系统有顶层结构，存储系统也有顶层结构，整体在一起也有顶层结构。<br><br>我理解的框架就是就是一种标准或者规范，一种技术手段，相对更偏向业务系统层面。<br>架构是一种结构，定义系统整体结构，我理解就像要建一所学校，架构就是设计图纸。<br><br>从大的方向上感觉架构是包含框架的，但是从小了说框架里好像又包含架构…","like_count":0},{"had_liked":false,"id":6706,"user_name":"CrazyCodes","can_delete":false,"product_type":"c1","uid":1081205,"ip_address":"","ucode":"C9C0E72522EB5B","user_header":"https://static001.geekbang.org/account/avatar/00/10/7f/75/551c5d6c.jpg","comment_is_top":false,"comment_ctime":1524909255,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1524909255","product_id":100006601,"comment_content":"架构是模块与模块，系统与系统的完美结合，达到最好的效果。这样理解对吗？老师","like_count":0},{"had_liked":false,"id":6704,"user_name":"九脉一谷","can_delete":false,"product_type":"c1","uid":1028636,"ip_address":"","ucode":"507F1EA001396C","user_header":"https://static001.geekbang.org/account/avatar/00/0f/b2/1c/48558abc.jpg","comment_is_top":false,"comment_ctime":1524907407,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1524907407","product_id":100006601,"comment_content":"我理解的架构从业务功能划分需要包含哪些功能模块，基于这些功能模块需要考虑选型什么样的框架和组件来支撑业务功能。","like_count":0},{"had_liked":false,"id":6695,"user_name":"影浅","can_delete":false,"product_type":"c1","uid":1092847,"ip_address":"","ucode":"14A0F8F43D7433","user_header":"https://static001.geekbang.org/account/avatar/00/10/ac/ef/998fee63.jpg","comment_is_top":false,"comment_ctime":1524902729,"is_pvip":false,"replies":[{"id":"1907","content":"严格意义来说，框架还不是板砖，而是板砖模具；架构也不是将框架串起来的约定，架构中可以没有框架","user_name":"作者回复","user_name_real":"华仔@阿里游戏","uid":"1098920","ctime":1524905783,"ip_address":"","comment_id":6695,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1524902729","product_id":100006601,"comment_content":"其实我一直的理解里，框架和架构没硬性的关系连接，框架只是实现一套系统的一种板砖，架构就是把他们串联起来的一种规则约定😿，不过组件与模块看来我的理解一直是对的","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":417128,"discussion_content":"严格意义来说，框架还不是板砖，而是板砖模具；架构也不是将框架串起来的约定，架构中可以没有框架","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1524905783,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":6694,"user_name":"DeathKnightH","can_delete":false,"product_type":"c1","uid":1058526,"ip_address":"","ucode":"632E00A01247A3","user_header":"","comment_is_top":false,"comment_ctime":1524900340,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1524900340","product_id":100006601,"comment_content":"原来理解的架构:比较片面，简单来说就是系统分了哪几个模块，每个模块里面代码是如何分层，如何组织到一起，没有整体的观念。<br><br>现在理解的架构:软件系统的顶层结构，以囊括整个软件系统的角度看，架构需要描述系统的组成，包括所有的子系统以及组成系统的“个体”，还要定义“个体”之间的交互规则。","like_count":0},{"had_liked":false,"id":6691,"user_name":"qqp","can_delete":false,"product_type":"c1","uid":1102989,"ip_address":"","ucode":"9AB3B453AC84FD","user_header":"https://static001.geekbang.org/account/avatar/00/10/d4/8d/a58b18b4.jpg","comment_is_top":false,"comment_ctime":1524899269,"is_pvip":false,"replies":[{"id":"1908","content":"描述没错，但比较容易与面向对象混淆，另外，系统的静态结构和元素的粒度和层级需要明确，否则微信有架构，微信登录系统也有架构，很多人会混淆","user_name":"作者回复","user_name_real":"华仔@阿里游戏","uid":"1098920","ctime":1524905981,"ip_address":"","comment_id":6691,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1524899269","product_id":100006601,"comment_content":"这个描述我认为最合适：架构描述了系统的静态结构和动态行为，系统元素，元素外部属性，以及元素间的关联关系。","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":417126,"discussion_content":"描述没错，但比较容易与面向对象混淆，另外，系统的静态结构和元素的粒度和层级需要明确，否则微信有架构，微信登录系统也有架构，很多人会混淆","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1524905981,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":6688,"user_name":"Lave","can_delete":false,"product_type":"c1","uid":1002228,"ip_address":"","ucode":"F7A50D9C0CA84F","user_header":"https://static001.geekbang.org/account/avatar/00/0f/4a/f4/8d7d8a85.jpg","comment_is_top":false,"comment_ctime":1524897189,"is_pvip":false,"replies":[{"id":"1909","content":"前端可以有架构，后端也有架构，合起来又是一个大架构，所以全栈工程师不等于架构师，但架构师确实要在横向技术方面都有一定的积累才能更好的进行架构设计","user_name":"作者回复","user_name_real":"华仔@阿里游戏","uid":"1098920","ctime":1524906120,"ip_address":"","comment_id":6688,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1524897189","product_id":100006601,"comment_content":"我之前理解的架构是一套业务系统的完整解决方案。而现在对架构的理解更加明晰了。现在流行说全栈工程师，全栈工程师可以从不同纬度看问题，提出各种解决方案，我觉得就是架构师。","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":417124,"discussion_content":"前端可以有架构，后端也有架构，合起来又是一个大架构，所以全栈工程师不等于架构师，但架构师确实要在横向技术方面都有一定的积累才能更好的进行架构设计","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1524906120,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":6680,"user_name":"小飞哥 ‍超級會員","can_delete":false,"product_type":"c1","uid":1110049,"ip_address":"","ucode":"417F9563B3005B","user_header":"https://static001.geekbang.org/account/avatar/00/10/f0/21/104b9565.jpg","comment_is_top":false,"comment_ctime":1524892591,"is_pvip":false,"replies":[{"id":"1911","content":"分层是常见的架构设计方式，但并不一定每个架构都是分层架构，例如微信的业务顶层架构，是按照逻辑分类的，分为朋友圈，摇一摇，聊天，支付等，并不存在明显的层次关系","user_name":"作者回复","user_name_real":"华仔@阿里游戏","uid":"1098920","ctime":1524906477,"ip_address":"","comment_id":6680,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1524892591","product_id":100006601,"comment_content":"我认为架构是分层，系统是每个分层的模块。而系统的业务又可以分模块，每个模块是功能的集合。现在好多人说功能模块化，就是把功能再次细分！","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":417120,"discussion_content":"分层是常见的架构设计方式，但并不一定每个架构都是分层架构，例如微信的业务顶层架构，是按照逻辑分类的，分为朋友圈，摇一摇，聊天，支付等，并不存在明显的层次关系","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1524906477,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":6677,"user_name":"marvel","can_delete":false,"product_type":"c1","uid":1107020,"ip_address":"","ucode":"03D43662439066","user_header":"https://static001.geekbang.org/account/avatar/00/10/e4/4c/8cc27d83.jpg","comment_is_top":false,"comment_ctime":1524890297,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1524890297","product_id":100006601,"comment_content":"架构是描述逻辑组件之间，物理组件之间的关系，框架是描述开发、运维约定的规范","like_count":0},{"had_liked":false,"id":6675,"user_name":"笑地","can_delete":false,"product_type":"c1","uid":1103478,"ip_address":"","ucode":"2CD6F5BCAAC2C8","user_header":"https://static001.geekbang.org/account/avatar/00/10/d6/76/be6fc02e.jpg","comment_is_top":false,"comment_ctime":1524890147,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1524890147","product_id":100006601,"comment_content":"我原来理解架构像是人体的物理组成（头、手）和虚拟组成（消化系统、神经系统）","like_count":0},{"had_liked":false,"id":6673,"user_name":"不過勝負","can_delete":false,"product_type":"c1","uid":1099321,"ip_address":"","ucode":"A1CB36404DB884","user_header":"https://static001.geekbang.org/account/avatar/00/10/c6/39/0b837f63.jpg","comment_is_top":false,"comment_ctime":1524889904,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1524889904","product_id":100006601,"comment_content":"背景需要+目标实现效果来诠释架构。","like_count":0},{"had_liked":false,"id":6672,"user_name":"不過勝負","can_delete":false,"product_type":"c1","uid":1099321,"ip_address":"","ucode":"A1CB36404DB884","user_header":"https://static001.geekbang.org/account/avatar/00/10/c6/39/0b837f63.jpg","comment_is_top":false,"comment_ctime":1524889851,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1524889851","product_id":100006601,"comment_content":"三角形具有稳定性；那么，三角形在某些领域或场景下，它就是一种架构。","like_count":0},{"had_liked":false,"id":6669,"user_name":"buoge","can_delete":false,"product_type":"c1","uid":1018506,"ip_address":"","ucode":"646FC6717A09BF","user_header":"https://static001.geekbang.org/account/avatar/00/0f/8a/8a/7c1baa25.jpg","comment_is_top":false,"comment_ctime":1524888808,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1524888808","product_id":100006601,"comment_content":"框架关注的是“规范”，架构关注的是“结构”","like_count":0},{"had_liked":false,"id":6668,"user_name":"文兵","can_delete":false,"product_type":"c1","uid":1106610,"ip_address":"","ucode":"4502F6DF2DB8F5","user_header":"https://static001.geekbang.org/account/avatar/00/10/e2/b2/e2781e20.jpg","comment_is_top":false,"comment_ctime":1524888805,"is_pvip":false,"replies":[{"id":"1914","content":"架构不等于框架的整合，我们很多系统都不用框架的😂","user_name":"作者回复","user_name_real":"华仔@阿里游戏","uid":"1098920","ctime":1524906979,"ip_address":"","comment_id":6668,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1524888805","product_id":100006601,"comment_content":"我理解的框架就是spring hibernet之类的，架构就是这些框架的整合","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":417116,"discussion_content":"架构不等于框架的整合，我们很多系统都不用框架的😂","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1524906979,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":6667,"user_name":"文兵","can_delete":false,"product_type":"c1","uid":1106610,"ip_address":"","ucode":"4502F6DF2DB8F5","user_header":"https://static001.geekbang.org/account/avatar/00/10/e2/b2/e2781e20.jpg","comment_is_top":false,"comment_ctime":1524888804,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1524888804","product_id":100006601,"comment_content":"我理解的框架就是spring hibernet之类的，架构就是这些框架的整合","like_count":0},{"had_liked":false,"id":6657,"user_name":"yeshu🏂","can_delete":false,"product_type":"c1","uid":1100158,"ip_address":"","ucode":"A6EA77C57E720A","user_header":"https://static001.geekbang.org/account/avatar/00/10/c9/7e/590a7326.jpg","comment_is_top":false,"comment_ctime":1524883425,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1524883425","product_id":100006601,"comment_content":"架构是建造楼房的钢筋结构，确认好户型，有哪些房间，房间用途，对应着业务有哪些，业务代码放在哪。mvc等框架是室内设计，确认布线，家具摆放，对应的是业务具体实现代码，怎么写，放在哪。","like_count":0},{"had_liked":false,"id":6656,"user_name":"麦子","can_delete":false,"product_type":"c1","uid":1109408,"ip_address":"","ucode":"264DEE5D984FD6","user_header":"https://static001.geekbang.org/account/avatar/00/10/ed/a0/23f08b6a.jpg","comment_is_top":false,"comment_ctime":1524883243,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1524883243","product_id":100006601,"comment_content":"之前理解的架构是比如我要做一个管理系统 然后从前台到后台都用什么框架  至于模块什么的都没有考虑","like_count":0},{"had_liked":false,"id":6653,"user_name":"a1vin-tian","can_delete":false,"product_type":"c1","uid":1094909,"ip_address":"","ucode":"7401DD4378EEF8","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epneC3LXv0Ve7uxqLTrCZz05qXuibna7FH1BXcDNNLPOIYic9Oo0wRB1picKeX1HiaOzfpTnvr0K4lBMw/132","comment_is_top":false,"comment_ctime":1524882444,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1524882444","product_id":100006601,"comment_content":"我之前理解的架构是指系统之间有哪些逻辑架构，各个逻辑结构是怎么交互。 最后每个模块用什么物理组件去实现。","like_count":0},{"had_liked":false,"id":6650,"user_name":"王虹凯","can_delete":false,"product_type":"c1","uid":1018862,"ip_address":"","ucode":"CA01E64E125CFF","user_header":"https://static001.geekbang.org/account/avatar/00/0f/8b/ee/56823fd7.jpg","comment_is_top":false,"comment_ctime":1524880209,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1524880209","product_id":100006601,"comment_content":"架构，<br>之前的理解：就是技术栈，忽略了整体结构这个概念。 <br>现在的理解：架构其实是从整体来看一个系统，他的各个业务功能组成部分是定制的业务模块还是成熟的组件。<br>我感觉差异是：感觉之前理解的不具有系统性，属于‘野路子’，只是开发生涯中的积累，现在把概念系统性的补了一下。有种顺畅的感觉！","like_count":0},{"had_liked":false,"id":6649,"user_name":"星火燎原","can_delete":false,"product_type":"c1","uid":1101373,"ip_address":"","ucode":"15AD8E3006E107","user_header":"https://static001.geekbang.org/account/avatar/00/10/ce/3d/385b8263.jpg","comment_is_top":false,"comment_ctime":1524880050,"is_pvip":false,"replies":[{"id":"1918","content":"这个理解一般适应于业务系统开发，例如ERP，运营系统等，其主要特点是业务复杂多变，可扩展要求高，对高性能高可用要求不高。","user_name":"作者回复","user_name_real":"华仔@阿里游戏","uid":"1098920","ctime":1524907625,"ip_address":"","comment_id":6649,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1524880050","product_id":100006601,"comment_content":"我的经验是所谓架构是在深刻理解业务基础上，以完成整个系统业务功能为目标，且具有扩展能力的基础结构。","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":417111,"discussion_content":"这个理解一般适应于业务系统开发，例如ERP，运营系统等，其主要特点是业务复杂多变，可扩展要求高，对高性能高可用要求不高。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1524907625,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":6646,"user_name":"小柯","can_delete":false,"product_type":"c1","uid":1099867,"ip_address":"","ucode":"4A3CE7FA3A5F5B","user_header":"https://static001.geekbang.org/account/avatar/00/10/c8/5b/28338470.jpg","comment_is_top":false,"comment_ctime":1524879771,"is_pvip":false,"replies":[{"id":"1919","content":"微服务是一种架构设计方法，适应于业务领域，但不等于架构本身，例如redis本身也是有架构的，不会把redis用微服务的方式实现","user_name":"作者回复","user_name_real":"华仔@阿里游戏","uid":"1098920","ctime":1524907736,"ip_address":"","comment_id":6646,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1524879771","product_id":100006601,"comment_content":"微服务，整个系统的架构由各个子系统共同组成，每个独立的子系统的架构指的是具体的数据模型设计、提供的接口（子系统的提供的服务）、调用的服务（与其他子系统的调度），已经采用的技术栈、组件等，过子系统的架构评审，主要也是过以上几点，有时候还会讨论具体子系统的边界问题。愚见，求指正。","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":417110,"discussion_content":"微服务是一种架构设计方法，适应于业务领域，但不等于架构本身，例如redis本身也是有架构的，不会把redis用微服务的方式实现","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1524907736,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":6645,"user_name":"王维","can_delete":false,"product_type":"c1","uid":1091684,"ip_address":"","ucode":"836E6CDB1A56BA","user_header":"https://static001.geekbang.org/account/avatar/00/10/a8/64/965e0d9b.jpg","comment_is_top":false,"comment_ctime":1524879621,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1524879621","product_id":100006601,"comment_content":"从不同的角度来描写软件的结构，就是架构","like_count":0},{"had_liked":false,"id":6642,"user_name":"Kyle","can_delete":false,"product_type":"c1","uid":1106079,"ip_address":"","ucode":"44198A0BEC5FB2","user_header":"https://static001.geekbang.org/account/avatar/00/10/e0/9f/9259a6b9.jpg","comment_is_top":false,"comment_ctime":1524879139,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1524879139","product_id":100006601,"comment_content":"我以前理解的架构是这样的：它是一个系统全局的概念，它用来描述系统实现的具体物理组织以及各个组织之间的关联关系。我以前觉得要理解业务逻辑的话还是画用例图好些，像大佬提到的逻辑层次上的架构我觉得似乎无益于业务逻辑的理解，因为业务逻辑是个“流程性”的东西，所以从未想到过还有这层面的架构。","like_count":0},{"had_liked":false,"id":6639,"user_name":"纯爷们","can_delete":false,"product_type":"c1","uid":1105976,"ip_address":"","ucode":"E2F81E5076C850","user_header":"https://static001.geekbang.org/account/avatar/00/10/e0/38/c7b1e502.jpg","comment_is_top":false,"comment_ctime":1524878861,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1524878861","product_id":100006601,"comment_content":"架构是站在宏观上来定义的。框架相对来说小一层。系统子系统也理解的差不多。但是自己说不出来，😅","like_count":0},{"had_liked":false,"id":6638,"user_name":"Tony🐑","can_delete":false,"product_type":"c1","uid":1108084,"ip_address":"","ucode":"B53491FA20D340","user_header":"https://static001.geekbang.org/account/avatar/00/10/e8/74/ceb084a2.jpg","comment_is_top":false,"comment_ctime":1524878568,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1524878568","product_id":100006601,"comment_content":"我之前理解的架构是指：系统的分层，全局异常处理，负载均衡策略这些所有相关的东西。","like_count":0},{"had_liked":false,"id":6632,"user_name":"凌霄","can_delete":false,"product_type":"c1","uid":1107786,"ip_address":"","ucode":"19C4BFB0298276","user_header":"https://static001.geekbang.org/account/avatar/00/10/e7/4a/4dfb565a.jpg","comment_is_top":false,"comment_ctime":1524878140,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1524878140","product_id":100006601,"comment_content":"还是太抽象，名次定义","like_count":0},{"had_liked":false,"id":6631,"user_name":"马克","can_delete":false,"product_type":"c1","uid":1106597,"ip_address":"","ucode":"C1D35AB8373444","user_header":"https://static001.geekbang.org/account/avatar/00/10/e2/a5/05276fad.jpg","comment_is_top":false,"comment_ctime":1524878037,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1524878037","product_id":100006601,"comment_content":"此次是第一次明确的接触架构领域，工作当中虽然有涉及，但是没有明确的概念。以前对架构的概念很模糊，理解为模块和功能的组合，也构思过怎样设计一个高性能，可扩展的架构，但是实现很难，基础不扎实。希望此次能够在李老师的讲解下，满载而归。","like_count":0},{"had_liked":false,"id":6629,"user_name":"stevensafin","can_delete":false,"product_type":"c1","uid":1053553,"ip_address":"","ucode":"CC692A740C5FD5","user_header":"https://static001.geekbang.org/account/avatar/00/10/13/71/3762b089.jpg","comment_is_top":false,"comment_ctime":1524877937,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1524877937","product_id":100006601,"comment_content":"系统与子系统的理解这个比较正确，与作者理解相同，组件与模块一直没有理解到组件的真谛，通过作者的文章，有了一定理解，感觉还是不够透彻，框架与架构我理解是框架是架构的实现架构的一种工具","like_count":0},{"had_liked":false,"id":6626,"user_name":"吕浩","can_delete":false,"product_type":"c1","uid":1108201,"ip_address":"","ucode":"7BD7A96FE7C86A","user_header":"https://static001.geekbang.org/account/avatar/00/10/e8/e9/bc6b56c0.jpg","comment_is_top":false,"comment_ctime":1524877788,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1524877788","product_id":100006601,"comment_content":"之前没有4+1视图的概念，工作中单独的画过软件架构图和硬件部署架构图，并没有认识到它们之间应该是有关联的。","like_count":0},{"had_liked":false,"id":6625,"user_name":"李志博","can_delete":false,"product_type":"c1","uid":1009109,"ip_address":"","ucode":"F3C72573B3C112","user_header":"https://static001.geekbang.org/account/avatar/00/0f/65/d5/88beb15a.jpg","comment_is_top":false,"comment_ctime":1524877738,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1524877738","product_id":100006601,"comment_content":"读到最后，也就是说，架构是一个大系统下的一级子系统之间如何协作？","like_count":0},{"had_liked":false,"id":6622,"user_name":"刘亚维","can_delete":false,"product_type":"c1","uid":1102809,"ip_address":"","ucode":"CF8B52E10C83A6","user_header":"https://static001.geekbang.org/account/avatar/00/10/d3/d9/69976056.jpg","comment_is_top":false,"comment_ctime":1524877570,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1524877570","product_id":100006601,"comment_content":"个人理解的架构是一个软件整体的结构和各职能模块（完成不同类型业务的组件）之间的调用关系。框架是指由外部或者内部实现的种能够提供特定功能的软件或者组件。","like_count":0},{"had_liked":false,"id":6616,"user_name":"void","can_delete":false,"product_type":"c1","uid":1101905,"ip_address":"","ucode":"A415DECDE9A56F","user_header":"https://static001.geekbang.org/account/avatar/00/10/d0/51/e2d79ec5.jpg","comment_is_top":false,"comment_ctime":1524877005,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1524877005","product_id":100006601,"comment_content":"开源中间件的选择，语言选择，比如用Java还是pathon还是go，性能优化，开发基础组件","like_count":0},{"had_liked":false,"id":6614,"user_name":"cuiz1688","can_delete":false,"product_type":"c1","uid":1101500,"ip_address":"","ucode":"25BD602BF8DCDF","user_header":"https://static001.geekbang.org/account/avatar/00/10/ce/bc/167fe313.jpg","comment_is_top":false,"comment_ctime":1524876905,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1524876905","product_id":100006601,"comment_content":"对这些概念的解读很透彻","like_count":0},{"had_liked":false,"id":6612,"user_name":"Regular","can_delete":false,"product_type":"c1","uid":1025998,"ip_address":"","ucode":"80B3EA083534CA","user_header":"https://static001.geekbang.org/account/avatar/00/0f/a7/ce/7ee0d672.jpg","comment_is_top":false,"comment_ctime":1524876759,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1524876759","product_id":100006601,"comment_content":"我以前对这些概念很模糊，尤其是模块和组件，说不出其中的区别。老师讲得很清晰，首先明确“概念”，后面才能避免模糊。","like_count":0},{"had_liked":false,"id":6611,"user_name":"ikel","can_delete":false,"product_type":"c1","uid":1009002,"ip_address":"","ucode":"1D5CE7803C1C2B","user_header":"https://static001.geekbang.org/account/avatar/00/0f/65/6a/be36c108.jpg","comment_is_top":false,"comment_ctime":1524876624,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1524876624","product_id":100006601,"comment_content":"我以前认为架构就是框架","like_count":0},{"had_liked":false,"id":6609,"user_name":"天晴","can_delete":false,"product_type":"c1","uid":1103790,"ip_address":"","ucode":"7554D3578CAA70","user_header":"https://static001.geekbang.org/account/avatar/00/10/d7/ae/58df134f.jpg","comment_is_top":false,"comment_ctime":1524876283,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1524876283","product_id":100006601,"comment_content":"哥，我还在框架层面，得加油了","like_count":0},{"had_liked":false,"id":6608,"user_name":"鲁大师","can_delete":false,"product_type":"c1","uid":1045959,"ip_address":"","ucode":"226FE28A51E7BC","user_header":"https://static001.geekbang.org/account/avatar/00/0f/f5/c7/df52355d.jpg","comment_is_top":false,"comment_ctime":1524876241,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1524876241","product_id":100006601,"comment_content":"咱们这个课应该是架构师扫盲课，大家的志向如果是想成为架构师，还是得结合课程自己多努力。","like_count":0},{"had_liked":false,"id":6605,"user_name":"特特","can_delete":false,"product_type":"c1","uid":1107537,"ip_address":"","ucode":"7DA74D37EA7B80","user_header":"","comment_is_top":false,"comment_ctime":1524876089,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1524876089","product_id":100006601,"comment_content":"框架更加具体，更偏向于技术，比如spring，而架构是系统的体系结构比如mvc架构","like_count":0},{"had_liked":false,"id":6604,"user_name":"anchor","can_delete":false,"product_type":"c1","uid":1083124,"ip_address":"","ucode":"24EECD40CC54C2","user_header":"https://static001.geekbang.org/account/avatar/00/10/86/f4/331f33a7.jpg","comment_is_top":false,"comment_ctime":1524876022,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1524876022","product_id":100006601,"comment_content":"之前理解的架构就是定义软件的规范，看了此文对这个规范的内容理解更深更具体了   包含什么 按什么维度 站在哪个层次等","like_count":0},{"had_liked":false,"id":6603,"user_name":"Up","can_delete":false,"product_type":"c1","uid":1032969,"ip_address":"","ucode":"3AACE765021AB5","user_header":"https://static001.geekbang.org/account/avatar/00/0f/c3/09/ee1b7ac0.jpg","comment_is_top":false,"comment_ctime":1524875889,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1524875889","product_id":100006601,"comment_content":"您好，看了您的文章，发现我之前理解的架构更多是框架层，而没有上升到架构层面。比如一个项目由几个子系统组成，某个系统由负载层，nignx层，springboot，mysql组成。我想问下，架构和框架的“边界”如何把握，避免过度设计","like_count":0},{"had_liked":false,"id":6601,"user_name":"huazsh","can_delete":false,"product_type":"c1","uid":1100866,"ip_address":"","ucode":"FDD79FB48F4046","user_header":"https://static001.geekbang.org/account/avatar/00/10/cc/42/13aaddfb.jpg","comment_is_top":false,"comment_ctime":1524875754,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1524875754","product_id":100006601,"comment_content":"之前所理解的系统架构就是说由哪些业务模块组成以及之间的关联调用关系","like_count":0},{"had_liked":false,"id":6600,"user_name":"Maiza","can_delete":false,"product_type":"c1","uid":1007248,"ip_address":"","ucode":"D6911CDAC0D8C7","user_header":"https://static001.geekbang.org/account/avatar/00/0f/5e/90/5f79859b.jpg","comment_is_top":false,"comment_ctime":1524875726,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1524875726","product_id":100006601,"comment_content":"某某大神说过，架构即职责分离 😀","like_count":0},{"had_liked":false,"id":6596,"user_name":"闻人","can_delete":false,"product_type":"c1","uid":1102584,"ip_address":"","ucode":"E4970C0D944243","user_header":"https://static001.geekbang.org/account/avatar/00/10/d2/f8/d5006178.jpg","comment_is_top":false,"comment_ctime":1524875085,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1524875085","product_id":100006601,"comment_content":"发现一直以来对架构的认识不深，单单以为架构就是Nginx、Tomcat、MySQL，Redis这些东西组成的产物","like_count":0},{"had_liked":false,"id":6595,"user_name":"MyKings","can_delete":false,"product_type":"c1","uid":1099132,"ip_address":"","ucode":"E823E9F968F7F0","user_header":"https://static001.geekbang.org/account/avatar/00/10/c5/7c/5e0cd651.jpg","comment_is_top":false,"comment_ctime":1524874973,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1524874973","product_id":100006601,"comment_content":"我的理解：<br><br>      架构是为了解决某个或某种问题而编写的“图表”方案，该方案按照不同纬度(如：业务纬度，开发纬度，物理纬度)的需求展开设计，并保证由该方案完成的系统可稳定运行并可容易扩展。","like_count":0},{"had_liked":false,"id":6594,"user_name":"猎人","can_delete":false,"product_type":"c1","uid":1099869,"ip_address":"","ucode":"01494F9A3CB267","user_header":"https://static001.geekbang.org/account/avatar/00/10/c8/5d/ecec00d4.jpg","comment_is_top":false,"comment_ctime":1524874970,"is_pvip":false,"discussion_count":0,"race_medal":3,"score":"1524874970","product_id":100006601,"comment_content":"架构描述系统内部以及系统之间的关系，框架描述的是一套规则和约束，一个架构里面有很多种关联的框架","like_count":0},{"had_liked":false,"id":6592,"user_name":"郭涛","can_delete":false,"product_type":"c1","uid":1085298,"ip_address":"","ucode":"238800B59497E0","user_header":"https://static001.geekbang.org/account/avatar/00/10/8f/72/8d7d872b.jpg","comment_is_top":false,"comment_ctime":1524874697,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1524874697","product_id":100006601,"comment_content":"架构是指软件系统的顶层结构，那就是说不存在子系统的架构师了吗。","like_count":0},{"had_liked":false,"id":6591,"user_name":"SuperXL__","can_delete":false,"product_type":"c1","uid":1108942,"ip_address":"","ucode":"661E5285F7101E","user_header":"https://static001.geekbang.org/account/avatar/00/10/eb/ce/bb28aa38.jpg","comment_is_top":false,"comment_ctime":1524874601,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1524874601","product_id":100006601,"comment_content":"原来理解架构只是软件层面上的，物理层面的没想过","like_count":0},{"had_liked":false,"id":6590,"user_name":"jason","can_delete":false,"product_type":"c1","uid":1099677,"ip_address":"","ucode":"72B60BD688CA3A","user_header":"https://static001.geekbang.org/account/avatar/00/10/c7/9d/d420bf6e.jpg","comment_is_top":false,"comment_ctime":1524873964,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1524873964","product_id":100006601,"comment_content":"类比其他行业，架构一词也会用到，它描述一个系统的组成部分的结构，相互作用关系。软件系统架构也比较类似，不过它有特定的一些东西，比如框架，组件等。！","like_count":0},{"had_liked":false,"id":6586,"user_name":"jeanne","can_delete":false,"product_type":"c1","uid":1077412,"ip_address":"","ucode":"20920FCF7CE907","user_header":"https://static001.geekbang.org/account/avatar/00/10/70/a4/51e46876.jpg","comment_is_top":false,"comment_ctime":1524873418,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1524873418","product_id":100006601,"comment_content":"原来理解的架构更像系统和子系统的关系，从开发角度来看，更像是模块和层级。","like_count":0},{"had_liked":false,"id":6584,"user_name":"峰","can_delete":false,"product_type":"c1","uid":1056019,"ip_address":"","ucode":"C53CB64E8E7D19","user_header":"https://static001.geekbang.org/account/avatar/00/10/1d/13/31ea1b0b.jpg","comment_is_top":false,"comment_ctime":1524872824,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1524872824","product_id":100006601,"comment_content":"之前的理解是：软件系统中的各个组成部分直接的关系。","like_count":0}]}