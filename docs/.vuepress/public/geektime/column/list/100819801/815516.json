{"id":815516,"title":"08｜意图识别：做一个善于倾听的企业级AI搜索助手","content":"<p>你好，我是产品二姐。</p><p>在前两个案例中，我们构建的产品是解决单一场景的问题，在技术上分别侧重RAG、提示词工程单项技术的运用。但在产品经理这个岗位上，我们也会遇到另外一种情况，尤其是对某些大型企业客户，也就是KA（Key Account）客户，他们往往需要的是<strong>一整套解决方案。</strong></p><p>接下来的这个案例就属于这种情况，咱们会利用3节课的内容一起设计一个完整的企业级知识管理AI升级解决方案。</p><p>你将会看到：</p><p>第一节，我会从企业级的AI搜索应用这个需求谈起，对AI搜索这类产品做一个全景概览，重点讲述AI搜索类产品中<strong>意图识别</strong>。这相当于首先让你的产品学会倾听、理解用户的真实意图。而意图识别也是各种“对话类”产品中的必做部分。</p><p>第二节，在倾听、理解后，就是转述用户诉求，即 <strong>Query 重写</strong>，以便于最大化地检索到匹配的内容。</p><p>第三节，在这部分会用提示词工程，让<strong>Agent</strong> 具备规划、反思能力、工具使用能力，也就是 <a href=\"http://time.geekbang.org/column/article/809292\">01节</a>提到的，让Agent从第二级迈向第三级。</p><p>这三节结束之后，你可以通过同样的思路举一反三来解决企业中70%的知识类场景，并且整个案例会进阶使用到RAG、提示词、Agent设计这三项工程类技术。在你未来的岗位上，可以灵活运用，随时拿出来作为参考。</p><!-- [[[read_end]]] --><h2>需求发现</h2><p>2024年初，有个叫Perplexity的AI搜索产品获得千万用户的使用，并被英伟达CEO黄仁勋推荐，得到广泛传播。</p><p>我用两句话来对比AI搜索与传统搜索的区别：</p><ul>\n<li>\n<p>在Google里，用户输入的是陈述性的关键词，比如“陕西省申报绿色矿山规定”，得到的是若干个网址链接。</p>\n</li>\n<li>\n<p>而在Perplexity里，用户输入的是What、Why、How的问句，比如“陕西省申报绿色矿山有什么要求”，得到的直接是一个答案。</p>\n</li>\n</ul><p><img src=\"https://static001.geekbang.org/resource/image/38/5a/38ba0aa80a7377d6b406376b48b0515a.png?wh=1920x909\" alt=\"图片\"></p><p>如果我们将知识管理分为“知识获取 -&gt; 知识调用 -&gt; 知识生产”三个步骤，那么AI搜索就是将传统搜索的<strong>知识获取升级到知识调用，<strong><strong>把</strong></strong>计算机对知识的处理能力整体向前推进了一步。</strong></p><p>AI搜索在C端市场的运用也刺激了企业用户的诉求，我们的客户很自然地就想到了将AI搜索用在企业的私域中。尤其是在大型企业的运作中，每家企业都有自己的私有知识，而公域的AI搜索不能解决企业内部的问题。</p><p>在这样的需求诞生的同时，我们也看到前阿里达摩院副总裁贾扬清在一次Demo中使用500行代码就实现了AI搜索，并且将代码开源。</p><p>有需求，有开源的实现方法，就促成了项目的启动。</p><h2>AI搜索背后的技术实现</h2><p>AI搜索中最核心的技术是RAG， 但它比我们在<a href=\"https://time.geekbang.org/column/article/810577\">第一个案例</a>中的RAG更加复杂。我用一个图来对比一下我们之前讲的简单RAG和AI搜索里的步骤。为了更加强调二者的不同，我省略了图中RAG的详细步骤，如果需要复习RAG流程的同学可以参考 <a href=\"https://time.geekbang.org/column/article/810080\">03节</a>的内容。</p><p><img src=\"https://static001.geekbang.org/resource/image/12/36/121bd48a53c6281532e3ab7cfdc6b136.png?wh=1920x2904\" alt=\"图片\"></p><p>在这张图里，你会看到企业私域AI搜索、公域AI搜索和RAG搜索相比，有两处不同。</p><p><strong>第一处不同是</strong>，<strong><strong>在检索数据源之前，企业私域AI搜索需要对用户输入的Query做三次处理</strong>。</strong></p><ol>\n<li>\n<p>意图识别。</p>\n</li>\n<li>\n<p>Query重写。</p>\n</li>\n<li>\n<p>Query路由。</p>\n</li>\n</ol><p>前两步本质上是将自然语言转换为适合大语言模型提示词，你可以理解为语言的预处理。而第三步Query路由就像是一个问题分发器。比如当用户的问题和HR相关，就去HR知识向量库里去寻找；如果和技术相关，就去技术知识向量库里去找；如果同时和两个向量库相关，那么也可以同时去两个向量库里寻找。</p><p><strong>第二处不同是资料来源不同。</strong></p><ul>\n<li>\n<p>简单RAG的资料来源是<strong>用户指定的文档</strong>。</p>\n</li>\n<li>\n<p>对于公域AI搜索来说，资料来源是<strong>搜索引擎给出的结果</strong>。</p>\n</li>\n<li>\n<p>对于企业来说，大部分情况下，资料来源是<strong>企业内部的知识库</strong>；当然如果企业知识原本有比较好的搜索支持（比如有的企业会直接使用Algolia这类的企业级Search服务来支持企业内部wiki的搜索），也可以是<strong>原有企业知识库里的搜索结果</strong>。</p>\n</li>\n</ul><p>注意，资料的来源会根据企业自身情况不同而不同，我们在这里就不进行详细论述。这节课我们重点说意图识别。</p><h2>企业AI搜索中意图识别</h2><p>简单来说，意图识别就是让计算机从语言表述中探查用户真正想要做的事情。</p><p><strong>我们通常的做法是首先定义意图分类，然后将用户意图进行分类，按照分类选择不同的解决路径</strong><strong>。</strong>因此，在特定场景下，意图识别更准确的叫法应该是“意图分类”。</p><p>比如在银行客服这个场景，可能会定义以下几个类别：</p><ul>\n<li>\n<p>存款</p>\n</li>\n<li>\n<p>取款</p>\n</li>\n<li>\n<p>查询</p>\n</li>\n<li>\n<p>理财</p>\n</li>\n<li>\n<p>办理银行卡</p>\n</li>\n<li>\n<p>其他</p>\n</li>\n<li>\n<p>不相关</p>\n</li>\n</ul><p>我们需要将用户的意图分在这几类业务中，然后导向不同的路径去执行后续业务流程。</p><p>实际上，意图识别的诞生最初就是为了服务对话机器人这类场景。因为在对话里，<strong>用户的输入不是通过点击某个确定页面、按钮、选项来实现的，而是通过任意语言来实现的</strong>。类似的企业内部AI搜索这个场景里，用户的输入同样也存在很强的不确定性。</p><p>在这种情况下，意图识别会有两个好处。</p><p>一是分类有助于在AI搜索的后续流程中展开不同的处理方式。比如当用户输入“招商银行官网”时，直接输出官网网址即可，无需展开AI探索的过程；当用户输入“招商银行有哪些稳健的理财产品”时，则全网搜索这个问题，再进行总结。</p><p>二是可以把它想象成问题过滤的阶段，比如在银行场景中，当用户输入 “xxx的父亲是谁”之类不相关的问题时，可以把这些“噪音提问”过滤掉，无需占用内部资源。</p><p>在大语言模型还没有被广泛认可的时候，意图识别是自然语言处理学科中的一大复杂工程， 算法工程师们要针对不同场景训练不同模型。这个训练过程有以下五步，其中每一步又都会细分出一些选项。</p><p><img src=\"https://static001.geekbang.org/resource/image/f3/d5/f300b374738523e9f3afa21eb219fbd5.png?wh=1920x221\" alt=\"图片\"></p><p>而在大模型出来之后，这样的分类能很轻松地通过几句提示词来解决。</p><pre><code class=\"language-markdown\">## task：\n用意图标记来自对话的用户消息。仅使用意图的名称进行回复。\n\n这些意图标记必须是从以下选项中选择一个或多个：\n- 存款\n- 取款\n- 查询\n- 理财\n- 办理银行卡\n- 其他\n- 不相关\n## Few shots\n对话：\"存1000到我的尾号是3432的储蓄卡\"\nIntent: 存款\n...[略]\n\n## input\n对话：\"最近有什么稳定收益的理财产品\"\nIntent: \n</code></pre><p>而且，随着用户使用的次数变多，我们还会收集到新的意图分类，再把这些新的意图分类更新到意图列表里，通过这个迭代过程，意图识别的分类会越来越多，也会变得越来越准确。</p><p>于是，意图识别就变成了下面这样的流程。</p><p><img src=\"https://static001.geekbang.org/resource/image/0a/b0/0a3c86284cb9179a88ecbea1c8a45eb0.png?wh=1416x644\" alt=\"图片\"></p><p>通过这种对比我们可以看到，大语言模型不仅颠覆了旧有方法中的选择机器学习模型、训练模型、评估模型这三个步骤，同时由于语义理解能力的增强，意图分类能力也会更强。颠覆且更强，这就是典型的技术革命出现的标志。</p><p>接下来，我们再借着这节课的“企业AI知识搜索”案例，来看看怎么进行意图识别。</p><ol>\n<li><strong>定义意图分类</strong></li>\n</ol><p>借用上个案例场景扫描的思路，我们甚至可以把所有知识类场景作为意图分类的定义，这种分类是按后续的回答流程来分类的。比如数据分析类的意图，可能要走查询数据库的流程，而咨询总结类的意图，要走查询当天专业新闻的流程。</p><p><img src=\"https://static001.geekbang.org/resource/image/7d/98/7d4409d7b44d41bb279885813ea68998.png?wh=1920x1495\" alt=\"图片\"></p><ol start=\"2\">\n<li><strong>撰写提示词，让LLM分类用户意图</strong></li>\n</ol><p>我们简单定义上述分类，并将表格中的例子作为提示词的few-shots，然后使用大语言模型，即可对用户的提问进行意图识别。</p><pre><code class=\"language-markdown\">## Role：意图识别能手\n## Task：\n对用户的要求和语言能进行分类，分类包含以下种类\n{分类列表}\n如果不在分类列表里，将intent 定义为\"其他\"。\n如果用户询问私人生活问题时，将intent 定义为\"不相关\"\n## Few shots:\nUser: 审查一下这个文档是否符合公司的对外宣传规范\nIntent: 合规审查\nUser: 本月公司的订单总额\nIntent: 内部生产数据\n/* [略]*/\n\n## 格式\n/*[定义输出格式]*/\n## initilization\n{\n  \"User\": {User request}\n  \"Intent\":\n}\n</code></pre><p>当然，我们还有其他方法来获得分类，比如：</p><ul>\n<li>\n<p>如果企业内部有原有的搜索记录，则可以从历史的搜索关键词开始突破，通过人工+大语言模型辅助的方式来总结出分类。</p>\n</li>\n<li>\n<p>如果企业的知识库有较好的垂直分割，则可以按照垂直业务总结出HR、IT、财务报销、销售知识、售后等类别。</p>\n</li>\n</ul><ol start=\"3\">\n<li><strong>意图分类迭代</strong></li>\n</ol><p>随着用户使用次数的增多，我们不断收集用户搜索行为，将意图识别做得越来越准，让AI搜索工具的倾听、洞察需求的能力越来越强，之后的AI搜索才能在企业应用时输出准确的答案。</p><p>到这里可以看到，原有的意图识别过程在大语言模型出来之后，在速度和效率上几乎是有百倍的提升。</p><h2>阶段复盘</h2><p>最后，我想总结一下这一节课中产品经理的具体工作。</p><p>一是需求发现：从一个toC应用爆发发现了toB应用的诉求。其实，toB的场景往往不容易被人看到，这就导致我们在做toB场景的时候往往难以下手。从toC应用中参考是一个寻找场景的方法。比如Google搜索就带动了企业内搜索的工具Agolia等一批公司的诞生，这在AI行业也是类似的。</p><p>二是需要为AI产品的意图识别收集有效的数据，选择合适的维度来定义意图分类，并调教好提示词让大模型能正确识别意图。意图识别的应用范围非常广，学会了如何做AI搜索里的意图识别，其他场景的意图识别也可以举一反三。这一部分类似于之前在互联网产品经理时的数据洞察工作，产品经理需要从已有的业务诉求和数据中持续观察、总结。</p><p>那么，当AI搜索工具通过意图识别学会倾听之后，接下来就是让它学会将自己的理解用适合机器检索的方式表达出来，也就是Query重写和Query路由。我们下节课继续。</p><p></p><h2><strong>课后题</strong></h2><p>在这个案例中，我们看到了一个企业构建私域AI搜索的过程，其实用同样的方法，你也可以用Coze 或者Dify 像我们在第一个案例中一样，打造一个自己个人的私域AI搜索。</p><p></p><p>你可以将你熟悉的语料，比如你关注的微信公众号内容、知乎问答等按照领域分类，然后将你平时在学习、工作中遇到的问题积累起来，也按照这个领域进行分类；这样你就得到一系列的“问题 &lt;-&gt; 意图分类”数据对。</p><p>然后，选定一个大模型（比如智谱的ChatGLM)，看看模型是否能对你的问题进行准确的意图识别，如果不能，考虑修改你的提示词，直到可以准确识别为止。</p><p>这样你就完成了打造个人私域AI搜索的第一步，为下一节的练习做好准备。</p><p>欢迎你在留言区和我交流。如果觉得有所收获，也可以把课程分享给更多的朋友一起学习。我们下节课见！</p><p><a href=\"http://jsj.top/f/Hn56mu\">&gt;&gt;戳此加入课程交流群</a></p>","comments":[{"had_liked":false,"id":394925,"user_name":"Geek_940b02","can_delete":false,"product_type":"c1","uid":3970331,"ip_address":"北京","ucode":"E293E7A68DEAFB","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/oQZ3rnHKdFrWgJDwABx9AfiaGckeCls8ajJQibgtTUmmvahQVtDJI1u2LsFiafkoSQduFqO2djJ26T85zy5Kdy4uw/132","comment_is_top":false,"comment_ctime":1728825770,"is_pvip":false,"replies":[{"id":143395,"content":"感谢支持和信任，先让我把课程写完😊","user_name":"作者回复","user_name_real":"编辑","uid":3885064,"ctime":1728877177,"ip_address":"内蒙古","comment_id":394925,"utype":1}],"discussion_count":3,"race_medal":0,"score":2,"product_id":100819801,"comment_content":"您有开训练营的计划吗？您啥时候开训练营肯定二话不说就下单～","like_count":4,"discussions":[{"author":{"id":3885064,"avatar":"https://static001.geekbang.org/account/avatar/00/3b/48/08/e18b1a00.jpg","nickname":"哄哄","note":"","ucode":"F66093BE6A2953","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":652403,"discussion_content":"感谢支持和信任，先让我把课程写完😊","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1728877178,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"内蒙古","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2,\"source\":0}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":3963030,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTI1hzL4ViaAkGy4ohf84TPTnAMeE1gjtgpsFENN7pYic6xfficRTsFp1Pmxa5A3uuagTyWzxmbWtj0eQ/132","nickname":"Hyemi tech","note":"","ucode":"30DE5B7586FE17","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":652432,"discussion_content":"同求~","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1728904901,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1021719,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/97/17/2e8e70cf.jpg","nickname":"LLM流浪猫","note":"","ucode":"C2A5B3CD32F1F4","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":652715,"discussion_content":"同求","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1729508301,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"广东","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]}]}