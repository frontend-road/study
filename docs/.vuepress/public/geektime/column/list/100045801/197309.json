{"id":197309,"title":"06 | 接口测试平台：工具和框架不可以兼容？","content":"<p>你好，我是陈磊。很高兴在接口测试课程中再次遇见你。</p><p>到目前为止，我们的课程重点介绍了完成测试任务的两种接口测试手段，第一种是使用如Postman这样的工具，第二种是打造属于你自己的测试框架。上节课我们还一起学习了RESTful风格的接口，并针对它的特点完善了我们自己的测试框架。</p><p>这节课我就教你如何用工具和框架的组合搭建接口测试平台，让你能更快速地完成测试任务。</p><h2>工具的便捷性与框架的灵活性可以兼得</h2><p>说到这儿，你一定有一个困惑，在前面我先讲了Postman这款非常好用的HTTP测试工具，后来又讲了怎么自己动手封装接口测试框架，它们各有特点，比如工具有便捷性，框架有灵活性，这无疑是两条都可以通向罗马的路，是两种都可以完成接口测试工作的方法，那学会一个不就可以了，为什么两个都要学会呢？</p><p>而且工具和框架，这两件事看起来互不相干，甚至有些互相排斥，那么这两种接口测试技术手段能相互支持，能融合到一起吗？下面我就来回答这个问题。</p><p>其实，工具和框架，这两条通向罗马的路可以并成一条快速通道，让你大踏步进军罗马。所以我既建议你要掌握一款好用的工具比如Postman，也建议你用自己的技术沉淀出自己的框架，如果你能正确地混合使用它们，实质上就可以搭建起一个接口测试平台，帮你更快速地完成测试任务。</p><!-- [[[read_end]]] --><p>在脚本的设计过程中，这样做有两个好处。</p><p>一是能充分发挥Postman界面化的优势，快速完成大量的脚本撰写工作；二是通过你自己的框架完成测试脚本的执行，所有的过程代码都会存储到你自己的代码仓，这样，既可以留下测试的过程资产，也便于版本控制，这也为持续集成、持续交付等平台提供了无人值守的、按需驱动测试的途径。<br>\n<img src=\"https://static001.geekbang.org/resource/image/d2/06/d2658558e998a79c9bded28fb129cd06.jpg?wh=1142*2143\" alt=\"\"></p><p>此外，这样做也可以提升团队的工作效率。</p><p>在我的团队中，有一些小伙伴很不喜欢写代码，相反，他们更喜欢使用工具，工具用得也非常溜，我相信在你的团队中也会存在这样的情况。但是，仅仅依靠工具，只能一个人完成一件事情，这并不方便团队内部的团队合作、交接和技术积累。</p><p>但是，我们又没有办法让所有人一下子都喜欢上写代码，那么该如何降低代码编写门槛呢？通过工具和框架搭建接口测试平台，其实就是一个很好的解决方案。这样，你既可以让你的团队有技术积累，又能给团队中一些编码能力比较薄弱的小伙伴学习时间，最重要的一点是，这不会影响整个工作的进度。</p><h2>工具的便捷性可得</h2><p>不知道在学完前面的课程后，你是不是还用过自己的Postman，当你再次打开Postman的时候会发现，你之前用它来完成的测试脚本是被保存下来了的，就如下图所示：</p><p><img src=\"https://static001.geekbang.org/resource/image/f0/f0/f08eff06a9649715d683ac72793878f0.png?wh=2558*1020\" alt=\"\"></p><p>可以看到，我上次使用Postman测试“战场”系统的脚本还是存在的，如果你忘记了，可以在课后看一看你用来做测试的Postman，再分别看看那四个请求。</p><p>到这里，我想请你先闭上眼睛回想一下，你之前使用Postman做接口测试的整个流程，是不是清晰可见？你也可以同时回忆一下，你用自己封装的Common类，编写“战场”系统测试脚本的过程。你会发现，和工具的使用过程相比，在这里你不太容易回想出自己每一步都做了什么。</p><p>这也是UI操作和代码操作的区别之一，UI操作更加直观，可以在你的脑海里留下更深刻的印象；而代码操作给人留下的印象就比较模糊，但是，通过用代码写脚本来完成接口测试，比较便于维护、团队合作以及留存。</p><p>讲到这你肯定会问：“你把用Postman类工具完成接口测试，以及自我封装测试框架这两种方法各打五十大板，那它们到底哪个好？”其实我的目的并不是想让你分出个好坏，好坏之分都是相对的，每个人的习惯和喜好都不相同，但是我们却可以把它们的优点都利用好，把这两种技术的优势都发挥出来。</p><p>我们利用Postman设计接口测试直观、快速的优势，将它变成接口测试脚本的初始脚本的编写工具，其实Postman也可以配置Chrome插件录制请求，这些在Postman官方已经有很详细的介绍，所以我就不在这里详细讲解了，如果你感兴趣，课后可以自行学习。</p><p>我们以之前的测试脚本为例，选择第一个单接口接口测试的脚本，在右侧点击Code按钮。</p><p><img src=\"https://static001.geekbang.org/resource/image/c8/f3/c800540c1ca21ef7d362bacc88bbc8f3.png?wh=2558*686\" alt=\"\"></p><p>在弹出框中，你可以选择各式各样技术栈的测试脚本，在这里，我们还是用在之前例子中所选取的Python，我们框架的依赖库是Requests，这样你就可以看到显示出的代码了，就如下图所示。看到这些代码，你是不是已经开始觉得，通过这样的处理来编写脚本更加容易。</p><p><img src=\"https://static001.geekbang.org/resource/image/21/95/2174ecbad6cefba4d166f12a1f21aa95.png?wh=1494*1146\" alt=\"\"></p><p>由此可见，和写代码相比，使用Postman来设计接口测试要更容易使用，对于代码基础比较薄弱的测试工程师来说，这种方法也更容易掌握。</p><h2>框架的灵活性亦可得</h2><p>在刚刚高兴的心情慢慢冷静下来以后，你是不是在心里默默地埋怨我？既然有这么简单的方法，为什么还一直让你学习一门编码技术，还建议你如果什么都不会，可以学习一下Python？这是因为工具生成的代码可读性特别差，也并不适合我们将它作为团队的技术积累留存。</p><p>现在，我们一起看一看由工具生成的代码。先来看看第一个接口首页单接口对应的代码：</p><pre><code>import requests\n\n\nurl = &quot;http://127.0.0.1:12356&quot;\n\n\nheaders = {\n    'cache-control': &quot;no-cache&quot;,\n    'Postman-Token': &quot;8c6247bb-744a-43d3-b27d-9e51af923c5d&quot;\n    }\n\n\nresponse = requests.request(&quot;GET&quot;, url, headers=headers)\n\n\nprint(response.text）\n</code></pre><p>上面的这个代码你是不是似曾相识？这就和我们第一次写的第一个接口的单接口测试代码一样，是一个流水账一样的脚本，这些代码如果原模原样地存到你的代码仓中，对你再次使用它没什么好处。那么在这基础上，我们可以将它修改成自己框架的脚本，就如下面这段代码所示：</p><pre><code>   # 引入你的框架\n   from common  import Common\n   #访问uri\n    uri_index = &quot;/&quot;\n    #调用你的Common类\n    comm = Common('http://127.0.0.1:12356')\n    # 完成方法\n    response_login = comm.get(uri_index)\n    # 打印response结果\n    print('Response内容：' + response_login.text)\n</code></pre><p>这个代码你是不是很亲切？Common类可是我们的老朋友了。那么接下来，我们再看看第二个接口登录的单接口测试脚本，你可以用相同的方法，找到它的Python代码，为了方便有些不是很方便打开自己Postman的同学，我把对应的代码放到了下面：</p><pre><code>import requests\n\n\nurl = &quot;http://127.0.0.1:12356/login&quot;\n\n\npayload = &quot;username=criss&amp;password=criss&quot;\n\n\nheaders = {\n\n\n'cache-control': &quot;no-cache&quot;,\n\n\n'Postman-Token': &quot;fdc805e1-4406-4191-ae44-ab002e475e03&quot;\n\n\n}\n\n\nresponse = requests.request(&quot;POST&quot;, url, data=payload, headers=headers)\n\n\nprint(response.text)\n</code></pre><p>如果你还记得我在测试代码及框架那一节课（也就是<a href=\"https://time.geekbang.org/column/article/195483\">04</a>）中讲的内容，就会发现，它和那里最开始部分的代码实现几乎一致，这和我们自己手动写的代码最大区别就是，它少了很多注释，而多出一些访问头信息，也就是上面代码的headers。</p><p>headers在我们“战场”系统的测试中并不是必须传递的参数，但是Postman这种工具会将其添加默认值传递给服务器。这是由这个工具添加的，你在写脚本时，如果它是非必填的，你可以忽略它。但是，工具这么做是为了匹配所有的情况，所以它会做一些和我们这次测试不相干的工作。</p><p>难道说Postman这么好的功能，对我们来说就没有一点好处吗？其实我们在上面代码的基础上，将其修改成引入我们自己框架的测试代码，完成修改后，再推送到接口测试项目的代码仓中，就如下面这个代码所示：</p><pre><code>from common import Common\nuri = &quot;/login&quot;\npayload = &quot;username=criss&amp;password=criss&quot;\ncomm = Common('http://127.0.0.1:12356')\nresponse_login = comm.post(uri_login,params=payload)\nprint('Response内容：' + response_login.text)\n</code></pre><p>这也无疑加快了我们测试脚本的编写，在上面这个过程中，我们也很容易再次发现需要封装到框架中的公共方法，这样循环下来，就加快了我们测试脚本的积累速度，同时我们也就可以有更多时间用在框架的维护上了。</p><p>通过代码的改写和封装，我们就可以将工具生成的代码完美结合到我们的框架中了，当我们需要修改已经存储在代码仓库的脚本时，我们只需pull 代码仓的代码，就可以看到易读、易维护的测试脚本了。</p><h2>总结</h2><p>我们今天的课程到这里就结束了，现在你闭上眼睛回顾一下，如果你的头脑中就只有用Postman快速编写脚本，自己框架留存执行的话，只能说明你今天学习得很认真，但是并没接受我想告诉你的主旨思想。</p><p>我今天以Postman工具和你自己的框架相结合的例子，告诉你如何建立一个你自己的测试平台，你可以通过三步完成工具加框架的组合方式：</p><ol>\n<li>借助Postman这类工具的易学、易操作的特点，将它变成你测试脚本中快速创建的脚本撰写工具；</li>\n<li>利用工具提供的导出代码功能，将其导出成我们流程化的测试代码；</li>\n<li>通过我们自己的框架，改写我们通过工具导出的脚本。</li>\n</ol><p>最后，你的测试脚本可以存入代码仓中为持续集成平台提供持续验证，这就完成了一套简单又灵活的接口测试平台的建设。</p><p>实际上，在本节课中，我更希望帮你建立一种解决问题思路，测试工程师的技术普遍会稍微弱于开发工程师，你要善于利用各种技术手段来帮助自己解决问题。</p><p>无论你团队中的小伙伴是用Postman生成测试脚本，再通过修改集成自己的框架，还是直接通过框架写测试脚本，它们都殊途同归，都是以最终统一的方式推送到了代码仓库中。这样，就不会让代码能力变成阻塞最终工作的一个关键节点，同时，这对于使用Postman编写脚本的小伙伴来说，他们也会越来越熟悉自己的框架，逐渐提升自己的技术能力，并加强自己的代码能力。</p><h2>思考题</h2><p>今天的课程中，我们把“战场”系统的测试脚本又拿出来测试了一次，不知道你是不是有点厌烦了，今天我仅仅给你演示了第一个和第二个单接口测试脚本，它们从工具到框架的演变过程，那么，你可以将后面的两个单接口测试脚本自己完成，并在留言区回复给我吗？如果你已经开始将这个方法应用到你的工作中了，那么我也希望你能将自己在使用过程中的心得体会分享给我。</p><p>我是陈磊，欢迎你在留言区留言分享你的观点，如果这篇文章让你有新的启发，也欢迎你把文章分享给你的朋友，我们一起来探讨和学习。</p>","neighbors":{"left":{"article_title":"05 | 案例：测试框架如何才能支持RESTful风格的接口？","id":195503},"right":{"article_title":"07 | WebSocket接口：如何测试一个完全陌生的协议接口？","id":198704}},"comments":[{"had_liked":false,"id":178270,"user_name":"一叶知秋","can_delete":false,"product_type":"c1","uid":1445189,"ip_address":"","ucode":"15A95FA86B7AE4","user_header":"https://static001.geekbang.org/account/avatar/00/16/0d/45/b88a1794.jpg","comment_is_top":false,"comment_ctime":1581648055,"is_pvip":false,"replies":[{"id":"69173","content":"您好，您的思路也很好，是一种解决问题的方法。继续加油完成你的实践过程，期待您成功后来分享您的实践心得和技术细节。","user_name":"作者回复","user_name_real":"Criss@陈磊","uid":"1064280","ctime":1581672207,"ip_address":"","comment_id":178270,"utype":1}],"discussion_count":2,"race_medal":0,"score":"61711190199","product_id":100045801,"comment_content":"我有过一个类似的实践，将postman中所有的接口信息导出到一个名为postman.josn文件中，然后用python脚本提炼出一个接口名称、请求方式、body等等信息 然后存入数据库中，然后接口自动化时的请求主体信息从数据库获取，新建领一张测试用例表（主要是存储payload信息的，针对输入做用例）从而可以配置化地做接口自动化，目前我还没有全部完成，老师你觉得这个方案可行吗。","like_count":15,"discussions":[{"author":{"id":1064280,"avatar":"https://static001.geekbang.org/account/avatar/00/10/3d/58/377289a8.jpg","nickname":"陈磊@Criss","note":"","ucode":"AF0A1CEA749698","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":483737,"discussion_content":"您好，您的思路也很好，是一种解决问题的方法。继续加油完成你的实践过程，期待您成功后来分享您的实践心得和技术细节。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1581672207,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1639125,"avatar":"https://static001.geekbang.org/account/avatar/00/19/02/d5/c3a8af62.jpg","nickname":"Beck","note":"","ucode":"F6349920F511D7","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":298733,"discussion_content":"httprunner不是在做这种事情吗？以yaml或者json的形式来存储测试数据，个人觉得直接拿来用就可以啦~","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1597391086,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":181940,"user_name":"钱","can_delete":false,"product_type":"c1","uid":1009652,"ip_address":"","ucode":"2C92A243A463D4","user_header":"https://static001.geekbang.org/account/avatar/00/0f/67/f4/9a1feb59.jpg","comment_is_top":false,"comment_ctime":1582683125,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"18762552309","product_id":100045801,"comment_content":"过，通过现成的工具加快自己代码的编写，重点在于时刻保持这种思维吧！","like_count":5,"discussions":[{"author":{"id":2538092,"avatar":"","nickname":"懒猫","note":"","ucode":"094F30C802C0F6","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":385245,"discussion_content":"哈哈哈，我一来评论区首先就是找你","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1626953217,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1163974,"avatar":"https://static001.geekbang.org/account/avatar/00/11/c2/c6/88d0c7b2.jpg","nickname":"一默","note":"","ucode":"F23A6E42DFD0C4","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":200614,"discussion_content":"谢谢，向你学习。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1583689969,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":178836,"user_name":"、Attention","can_delete":false,"product_type":"c1","uid":1856449,"ip_address":"","ucode":"F421C723ABD055","user_header":"https://static001.geekbang.org/account/avatar/00/1c/53/c1/a230ecd3.jpg","comment_is_top":false,"comment_ctime":1581838648,"is_pvip":false,"replies":[{"id":"69449","content":"谢谢，正则表达式是可以完成的，也可以用json库将其变成对象进行处理","user_name":"作者回复","user_name_real":"Criss@陈磊","uid":"1064280","ctime":1581857061,"ip_address":"","comment_id":178836,"utype":1}],"discussion_count":1,"race_medal":0,"score":"14466740536","product_id":100045801,"comment_content":"!&#47;usr&#47;bin&#47;env python<br># -*- coding: utf-8 -*-<br><br>from common import Common<br><br>comm = Common(&#39;http:&#47;&#47;127.0.0.1:12356&#39;)<br><br>uri_selectEq = &#39;&#47;selectEq&#39;<br>payload = &quot;equipmentid=10003&quot;<br>response_selectEq = comm.post(uri_selectEq, params=payload)<br>print(response_selectEq.text.encode(&#39;utf8&#39;))<br><br>uri_kill = &#39;&#47;kill&#39;<br>payload = &quot;enemyid=20001&amp;equipmentid=10003&quot;<br>response_kill = comm.post(uri_kill, params=payload)<br>print(response_kill.text.encode(&#39;utf8&#39;))<br><br>老师，后两个接口参数是之前接口的返回值，那我如果要参数化，是要用正则去提取返回值吗？","like_count":3,"discussions":[{"author":{"id":1064280,"avatar":"https://static001.geekbang.org/account/avatar/00/10/3d/58/377289a8.jpg","nickname":"陈磊@Criss","note":"","ucode":"AF0A1CEA749698","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":483988,"discussion_content":"谢谢，正则表达式是可以完成的，也可以用json库将其变成对象进行处理","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1581857061,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":177808,"user_name":"滚球兽","can_delete":false,"product_type":"c1","uid":1245653,"ip_address":"","ucode":"A17C44D9FF1DFA","user_header":"https://static001.geekbang.org/account/avatar/00/13/01/d5/1363742c.jpg","comment_is_top":false,"comment_ctime":1581504900,"is_pvip":false,"replies":[{"id":"69026","content":"您好，挡板系统也是我们常说的mock服务，但是更专业的交付叫 test double。我会在最后一节课介绍一个简单易用的mock框架。我比较推荐使用一个比较流行的框架完成比如 mockito、javamock等，很好用又很简单，除非必须自己研发否则现在开源的这些已经很优秀了","user_name":"作者回复","user_name_real":"Criss@陈磊","uid":"1064280","ctime":1581515192,"ip_address":"","comment_id":177808,"utype":1}],"discussion_count":1,"race_medal":0,"score":"14466406788","product_id":100045801,"comment_content":"挡板服务开发框架一般有哪些呢？列举一下么？想做个挡板服务<br>","like_count":4,"discussions":[{"author":{"id":1064280,"avatar":"https://static001.geekbang.org/account/avatar/00/10/3d/58/377289a8.jpg","nickname":"陈磊@Criss","note":"","ucode":"AF0A1CEA749698","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":483552,"discussion_content":"您好，挡板系统也是我们常说的mock服务，但是更专业的交付叫 test double。我会在最后一节课介绍一个简单易用的mock框架。我比较推荐使用一个比较流行的框架完成比如 mockito、javamock等，很好用又很简单，除非必须自己研发否则现在开源的这些已经很优秀了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1581515192,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":181573,"user_name":"技术修行者","can_delete":false,"product_type":"c1","uid":1013147,"ip_address":"","ucode":"28CA41A1214D6B","user_header":"https://static001.geekbang.org/account/avatar/00/0f/75/9b/611e74ab.jpg","comment_is_top":false,"comment_ctime":1582561924,"is_pvip":true,"discussion_count":0,"race_medal":1,"score":"10172496516","product_id":100045801,"comment_content":"通过工具和自建测试框架相结合，提高测试case创建效率，是一个很好的思路，希望能对广大测试同学有所启发。<br><br>关于如何将测试用例导入到自建框架中，我建议中间能通过程序做一些自动化转换，我们可以定制规则，将更快速的生成测试用例，例如，将工具导出的测试用例，直接保存到db，然后批量读取db，根据设置的规则生成新的基于自建框架的测试用例。","like_count":2},{"had_liked":false,"id":177633,"user_name":"Middleware","can_delete":false,"product_type":"c1","uid":1072015,"ip_address":"","ucode":"C0028293ECDD47","user_header":"https://static001.geekbang.org/account/avatar/00/10/5b/8f/4b0ab5db.jpg","comment_is_top":false,"comment_ctime":1581438852,"is_pvip":true,"replies":[{"id":"68969","content":"谢谢支持","user_name":"作者回复","user_name_real":"Criss Chan","uid":"1064280","ctime":1581463291,"ip_address":"","comment_id":177633,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10171373444","product_id":100045801,"comment_content":"学到了，用了这么久 Postman 原来还可以这样？👍👍","like_count":2,"discussions":[{"author":{"id":1064280,"avatar":"https://static001.geekbang.org/account/avatar/00/10/3d/58/377289a8.jpg","nickname":"陈磊@Criss","note":"","ucode":"AF0A1CEA749698","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":483493,"discussion_content":"谢谢支持","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1581463291,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":193157,"user_name":"smallfish","can_delete":false,"product_type":"c1","uid":1923145,"ip_address":"","ucode":"EF05549772CF8E","user_header":"https://static001.geekbang.org/account/avatar/00/1d/58/49/985d98c8.jpg","comment_is_top":false,"comment_ctime":1584885138,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5879852434","product_id":100045801,"comment_content":"这个思想很值得学习，现实的工作场景也确实如此，有代码薄弱的同事，有代码能力较强的，各有各喜欢使用的方式来完成测试工作。但可以通过postman的代码导出功能，将已有的用例导入到代码仓库中，逐步维护起来，这样我们就可以从繁杂的回归测试工作中抽离出来，提高工作效率。学到了","like_count":1},{"had_liked":false,"id":179814,"user_name":"派森","can_delete":false,"product_type":"c1","uid":1169937,"ip_address":"","ucode":"063AC75FA77EFB","user_header":"https://static001.geekbang.org/account/avatar/00/11/da/11/bdffffa6.jpg","comment_is_top":false,"comment_ctime":1582103885,"is_pvip":true,"replies":[{"id":"69854","content":"录制回放可以使用poatman的方式，在框架中我知道httprunner支持但是具体我并没有深入研究过，您可以考察一下是不是适合您team。","user_name":"作者回复","user_name_real":"Criss@陈磊","uid":"1064280","ctime":1582122505,"ip_address":"","comment_id":179814,"utype":1}],"discussion_count":2,"race_medal":0,"score":"5877071181","product_id":100045801,"comment_content":"大佬，因为有时研发现场开发的接口，连个文档都没有，时间太紧张，没有精力去编写自动化用例，但是回归测试又必不可少，如果全部手工操作，测试组的压力很大，本身我们是有基于RF的Web测试框架，但是不适用这种模式，所以就想到利用接口的录制和回放，想省去编写用例和代码这部分工作，这块有没有好用稳定的框架或者工具介绍下啊","like_count":1,"discussions":[{"author":{"id":1064280,"avatar":"https://static001.geekbang.org/account/avatar/00/10/3d/58/377289a8.jpg","nickname":"陈磊@Criss","note":"","ucode":"AF0A1CEA749698","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":484412,"discussion_content":"录制回放可以使用poatman的方式，在框架中我知道httprunner支持但是具体我并没有深入研究过，您可以考察一下是不是适合您team。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582122505,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1169937,"avatar":"https://static001.geekbang.org/account/avatar/00/11/da/11/bdffffa6.jpg","nickname":"派森","note":"","ucode":"063AC75FA77EFB","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":178468,"discussion_content":"在功能测试完成之后，直接现场录制，方便后续回归，主要是没时间编写自动化用例，直接录制，直接回放","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582166296,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":178373,"user_name":"京都念慈菴","can_delete":false,"product_type":"c1","uid":1744834,"ip_address":"","ucode":"2A310A91069A5E","user_header":"https://static001.geekbang.org/account/avatar/00/1a/9f/c2/3d1c2f88.jpg","comment_is_top":false,"comment_ctime":1581672017,"is_pvip":false,"replies":[{"id":"69209","content":"谢谢，太棒了，我希望你能在我的课程中有所得，也感谢你的留言","user_name":"作者回复","user_name_real":"Criss@陈磊","uid":"1064280","ctime":1581688607,"ip_address":"","comment_id":178373,"utype":1}],"discussion_count":2,"race_medal":0,"score":"5876639313","product_id":100045801,"comment_content":"自己开发能力基本没有，但是之前看过一些纯代码构建测试框架的教程，一直无法坚持下去，用了工具又觉得有时候很受局限，真没想过把他们并存，现在我能即开始这些工作又能同时提升自己开发能力，将他们结合在一起","like_count":1,"discussions":[{"author":{"id":1064280,"avatar":"https://static001.geekbang.org/account/avatar/00/10/3d/58/377289a8.jpg","nickname":"陈磊@Criss","note":"","ucode":"AF0A1CEA749698","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":483780,"discussion_content":"谢谢，太棒了，我希望你能在我的课程中有所得，也感谢你的留言","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1581688607,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1168269,"avatar":"https://static001.geekbang.org/account/avatar/00/11/d3/8d/f4ab1eab.jpg","nickname":"zero","note":"","ucode":"B5D2A838392DF2","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":211252,"discussion_content":"学习了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584832959,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":345804,"user_name":"IT小村","can_delete":false,"product_type":"c1","uid":1330357,"ip_address":"","ucode":"BDFEE0D821CB6E","user_header":"https://static001.geekbang.org/account/avatar/00/14/4c/b5/fcede1a9.jpg","comment_is_top":false,"comment_ctime":1652602983,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1652602983","product_id":100045801,"comment_content":"这确实不错","like_count":0},{"had_liked":false,"id":344533,"user_name":"东方不败之鸭梨","can_delete":false,"product_type":"c1","uid":2062975,"ip_address":"","ucode":"C590EEC03BCFFC","user_header":"https://static001.geekbang.org/account/avatar/00/1f/7a/7f/4bce9aff.jpg","comment_is_top":false,"comment_ctime":1651635361,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1651635361","product_id":100045801,"comment_content":"简单 就是通过postman导出代码，再改一改。","like_count":0},{"had_liked":false,"id":264609,"user_name":"捷后愚生","can_delete":false,"product_type":"c1","uid":1170483,"ip_address":"","ucode":"A1F935D39C8488","user_header":"https://static001.geekbang.org/account/avatar/00/11/dc/33/a68c6b26.jpg","comment_is_top":false,"comment_ctime":1606544465,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1606544465","product_id":100045801,"comment_content":"其实，对于熟悉敲代码的人来说，还是直接敲代码比先在postman中生产脚本再修改要快","like_count":0},{"had_liked":false,"id":227759,"user_name":"晓","can_delete":false,"product_type":"c1","uid":1474453,"ip_address":"","ucode":"ABC33200A3F16B","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eq6pWvKsV4rzUrwMQ2G6YnrxTjU9XkEdG03SJ1kcJ2mH2NUCwAOiciarDib4vjK6o8r58MJjVTvANjrg/132","comment_is_top":false,"comment_ctime":1592471309,"is_pvip":false,"replies":[{"id":"84059","content":"您好，第一个问题：用什么工具都可以，你的想法也很棒。第二个问题：对于工具，这两个都差不多，还是要仰仗于你自己team的基础，没必要因为选择一个工具付出太多的团队成本。","user_name":"作者回复","user_name_real":"CrissChan","uid":"1064280","ctime":1592541216,"ip_address":"","comment_id":227759,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1592471309","product_id":100045801,"comment_content":"老师，如果把postman换成jmeter，再加上自己设计的测试框架，也应该是可以的吧。再请问一下，对于web平台的接口测试，postman和jmeter倒底哪个更合适 些呢？","like_count":0,"discussions":[{"author":{"id":1064280,"avatar":"https://static001.geekbang.org/account/avatar/00/10/3d/58/377289a8.jpg","nickname":"陈磊@Criss","note":"","ucode":"AF0A1CEA749698","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":498769,"discussion_content":"您好，第一个问题：用什么工具都可以，你的想法也很棒。第二个问题：对于工具，这两个都差不多，还是要仰仗于你自己team的基础，没必要因为选择一个工具付出太多的团队成本。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1592541216,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":208616,"user_name":"小老鼠","can_delete":false,"product_type":"c1","uid":1257460,"ip_address":"","ucode":"C663A0C863A515","user_header":"https://static001.geekbang.org/account/avatar/00/13/2f/f4/2dede51a.jpg","comment_is_top":false,"comment_ctime":1587391445,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1587391445","product_id":100045801,"comment_content":"框架已搭好，还不如直接上代码来得快。另外还需要釆用数据驱动，postman有能力吗？","like_count":0,"discussions":[{"author":{"id":1330305,"avatar":"https://static001.geekbang.org/account/avatar/00/14/4c/81/34398512.jpg","nickname":"PCC","note":"","ucode":"BA27B7737E232B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":309422,"discussion_content":"有时迭代的速度比较快，靠代码维护用例有时没有工具直接生成来的快，追不上迭代速度。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1601286190,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":199841,"user_name":"Pyel","can_delete":false,"product_type":"c1","uid":1000293,"ip_address":"","ucode":"7551BD8A7AC5F1","user_header":"https://static001.geekbang.org/account/avatar/00/0f/43/65/bf57c323.jpg","comment_is_top":false,"comment_ctime":1585496815,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1585496815","product_id":100045801,"comment_content":"Postman真的很好用，绝对的利器！","like_count":0},{"had_liked":false,"id":197964,"user_name":"Geek_a859b9","can_delete":false,"product_type":"c1","uid":1936961,"ip_address":"","ucode":"0B6D83A2BB7B8D","user_header":"","comment_is_top":false,"comment_ctime":1585405421,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1585405421","product_id":100045801,"comment_content":"有童鞋的留言很棒，结合数据库来做。传统的Excel管理还是有很多弊端。结果和过程如果能做成HTML版本的就厉害了","like_count":0},{"had_liked":false,"id":181553,"user_name":"王富贵","can_delete":false,"product_type":"c1","uid":1817493,"ip_address":"","ucode":"9DFE938B8C6B63","user_header":"https://static001.geekbang.org/account/avatar/00/1b/bb/95/d40474a4.jpg","comment_is_top":false,"comment_ctime":1582558674,"is_pvip":false,"replies":[{"id":"70350","content":"目前我还没有发现这个功能，不知道最新版本中是否支持这种批量导出，但是批量导出会不会在修改脚本的时候会产生会乱呢？我确实也没有怎么考虑过该问题，如果你有类似时间欢迎留言给我。谢谢","user_name":"作者回复","user_name_real":"CrissChan","uid":"1064280","ctime":1582599219,"ip_address":"","comment_id":181553,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1582558674","product_id":100045801,"comment_content":"postman能批量导出python脚本吗","like_count":0,"discussions":[{"author":{"id":1064280,"avatar":"https://static001.geekbang.org/account/avatar/00/10/3d/58/377289a8.jpg","nickname":"陈磊@Criss","note":"","ucode":"AF0A1CEA749698","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":485030,"discussion_content":"目前我还没有发现这个功能，不知道最新版本中是否支持这种批量导出，但是批量导出会不会在修改脚本的时候会产生会乱呢？我确实也没有怎么考虑过该问题，如果你有类似时间欢迎留言给我。谢谢","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582599219,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":179317,"user_name":"aoe","can_delete":false,"product_type":"c1","uid":1121758,"ip_address":"","ucode":"1C6201EDB4E954","user_header":"https://static001.geekbang.org/account/avatar/00/11/1d/de/62bfa83f.jpg","comment_is_top":false,"comment_ctime":1581960748,"is_pvip":false,"replies":[{"id":"69628","content":"谢谢您的支持。","user_name":"作者回复","user_name_real":"Criss@陈磊","uid":"1064280","ctime":1581988656,"ip_address":"","comment_id":179317,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1581960748","product_id":100045801,"comment_content":"作为一个Java程序员，看了老师的这篇文章，感觉非常适合推动自动化测试，让不懂代码的测试小姐姐快速入门，提升战斗力。","like_count":0,"discussions":[{"author":{"id":1064280,"avatar":"https://static001.geekbang.org/account/avatar/00/10/3d/58/377289a8.jpg","nickname":"陈磊@Criss","note":"","ucode":"AF0A1CEA749698","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":484199,"discussion_content":"谢谢您的支持。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1581988656,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":178384,"user_name":"hello","can_delete":false,"product_type":"c1","uid":1464199,"ip_address":"","ucode":"854500026E2187","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKhuGLVRYZibOTfMumk53Wn8Q0Rkg0o6DzTicbibCq42lWQoZ8lFeQvicaXuZa7dYsr9URMrtpXMVDDww/132","comment_is_top":false,"comment_ctime":1581675738,"is_pvip":false,"replies":[{"id":"69207","content":"您好，接口测试的依赖问题确实有问题。因此需要使用mock来解决，我会在后续课程中讲解mock 服务，并推荐一个简单容易使用的mock工具。","user_name":"作者回复","user_name_real":"Criss@陈磊","uid":"1064280","ctime":1581688495,"ip_address":"","comment_id":178384,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1581675738","product_id":100045801,"comment_content":"老师，请教个问题，接口测试是否依赖特写的环境，对应环境中产生及依赖的数据该如何维护，多谢","like_count":0,"discussions":[{"author":{"id":1064280,"avatar":"https://static001.geekbang.org/account/avatar/00/10/3d/58/377289a8.jpg","nickname":"陈磊@Criss","note":"","ucode":"AF0A1CEA749698","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":483787,"discussion_content":"您好，接口测试的依赖问题确实有问题。因此需要使用mock来解决，我会在后续课程中讲解mock 服务，并推荐一个简单容易使用的mock工具。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1581688495,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":177983,"user_name":"小鱼儿🐠","can_delete":false,"product_type":"c1","uid":1414023,"ip_address":"","ucode":"AD9BDD79F0A379","user_header":"https://static001.geekbang.org/account/avatar/00/15/93/87/7ac6bab2.jpg","comment_is_top":false,"comment_ctime":1581565692,"is_pvip":false,"replies":[{"id":"69069","content":"谢谢您的支持，希望在专栏里面你有所得，更期望把你的想法和体会告诉我，一起进步学习。","user_name":"作者回复","user_name_real":"Criss@陈磊","uid":"1064280","ctime":1581579628,"ip_address":"","comment_id":177983,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1581565692","product_id":100045801,"comment_content":"自从写脚步就比较排斥工具，通过这节课学到了工具的另类作用，赞👍","like_count":0,"discussions":[{"author":{"id":1064280,"avatar":"https://static001.geekbang.org/account/avatar/00/10/3d/58/377289a8.jpg","nickname":"陈磊@Criss","note":"","ucode":"AF0A1CEA749698","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":483624,"discussion_content":"谢谢您的支持，希望在专栏里面你有所得，更期望把你的想法和体会告诉我，一起进步学习。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1581579628,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":177870,"user_name":"happychap","can_delete":false,"product_type":"c1","uid":1388033,"ip_address":"","ucode":"C872B959BF2F3D","user_header":"https://static001.geekbang.org/account/avatar/00/15/2e/01/14a478bb.jpg","comment_is_top":false,"comment_ctime":1581518793,"is_pvip":true,"replies":[{"id":"69060","content":"谢谢您，谢谢支持，您比我总结的更抽象，说明你也是个测试的技术老手。谢谢支持","user_name":"作者回复","user_name_real":"Criss@陈磊","uid":"1064280","ctime":1581570705,"ip_address":"","comment_id":177870,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1581518793","product_id":100045801,"comment_content":"这种方式可以轻松将gui工具的成果入代码仓，与ci打通，挺不错的。不过也存在一个小缺点，莫接口发生部分变化，你得针对该接口重新撸一遍，单接口以前的转换成果就没办法复用了。<br>关键收获还是老师提出的思路，举一反三会有更大的收获。","like_count":0,"discussions":[{"author":{"id":1064280,"avatar":"https://static001.geekbang.org/account/avatar/00/10/3d/58/377289a8.jpg","nickname":"陈磊@Criss","note":"","ucode":"AF0A1CEA749698","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":483576,"discussion_content":"谢谢您，谢谢支持，您比我总结的更抽象，说明你也是个测试的技术老手。谢谢支持","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1581570705,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":177699,"user_name":"安明","can_delete":false,"product_type":"c1","uid":1740254,"ip_address":"","ucode":"4BD5A39240FDC9","user_header":"https://static001.geekbang.org/account/avatar/00/1a/8d/de/ab8846be.jpg","comment_is_top":false,"comment_ctime":1581476515,"is_pvip":false,"replies":[{"id":"68992","content":"您说的特别好，也是一个很好的问题。这种方法很适合基础薄弱的小伙伴，其实也可以给代码大神使用。这是因为速度和质量效能才是我们不断的在推广提高的，这是一个快递完成脚本撰写的方法。谢谢您的留言","user_name":"作者回复","user_name_real":"Criss Chan","uid":"1064280","ctime":1581493828,"ip_address":"","comment_id":177699,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1581476515","product_id":100045801,"comment_content":"目前这篇文章只是方便了一个不会编码的人员、，利用postman工具生成脚本。例如：脚本的执行、参数化数据、response的测试脚本，这些代码，还是要在自己的框架基础上自行编写。怎么和postman工具结合呢？？","like_count":0,"discussions":[{"author":{"id":1064280,"avatar":"https://static001.geekbang.org/account/avatar/00/10/3d/58/377289a8.jpg","nickname":"陈磊@Criss","note":"","ucode":"AF0A1CEA749698","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":483510,"discussion_content":"您说的特别好，也是一个很好的问题。这种方法很适合基础薄弱的小伙伴，其实也可以给代码大神使用。这是因为速度和质量效能才是我们不断的在推广提高的，这是一个快递完成脚本撰写的方法。谢谢您的留言","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1581493828,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]}]}