{"id":113440,"title":"33 | MySQL调优之SQL语句：如何写出高性能SQL语句？","content":"<p>你好，我是刘超。</p><p>从今天开始，我将带你一起学习MySQL的性能调优。MySQL数据库是互联网公司使用最为频繁的数据库之一，不仅仅因为它开源免费，MySQL卓越的性能、稳定的服务以及活跃的社区都成就了它的核心竞争力。</p><p>我们知道，应用服务与数据库的交互主要是通过SQL语句来实现的。在开发初期，我们更加关注的是使用SQL实现业务功能，然而系统上线后，随着生产环境数据的快速增长，之前写的很多SQL语句就开始暴露出性能问题。</p><p>在这个阶段中，<span class=\"orange\">我们应该尽量避免一些慢SQL语句的实现。</span>但话说回来，SQL语句慢的原因千千万，除了一些常规的慢SQL语句可以直接规避，其它的一味去规避也不是办法，我们还要学会如何去分析、定位到其根本原因，并<span class=\"orange\">总结一些常用的SQL调优方法</span>，以备不时之需。</p><p>那么今天我们就重点看看慢SQL语句的几种常见诱因，从这点出发，找到最佳方法，开启高性能SQL语句的大门。</p><h2>慢SQL语句的几种常见诱因</h2><h3>1. 无索引、索引失效导致慢查询</h3><p>如果在一张几千万数据的表中以一个没有索引的列作为查询条件，大部分情况下查询会非常耗时，这种查询毫无疑问是一个慢SQL查询。所以对于大数据量的查询，我们需要建立适合的索引来优化查询。</p><!-- [[[read_end]]] --><p>虽然我们很多时候建立了索引，但在一些特定的场景下，索引还有可能会失效，所以索引失效也是导致慢查询的主要原因之一。针对这点的调优，我会在第34讲中详解。</p><h3>2. 锁等待</h3><p>我们常用的存储引擎有  InnoDB  和  MyISAM，前者支持行锁和表锁，后者只支持表锁。</p><p>如果数据库操作是基于表锁实现的，试想下，如果一张订单表在更新时，需要锁住整张表，那么其它大量数据库操作（包括查询）都将处于等待状态，这将严重影响到系统的并发性能。</p><p>这时，InnoDB  存储引擎支持的行锁更适合高并发场景。但在使用 InnoDB  存储引擎时，我们要特别注意行锁升级为表锁的可能。在批量更新操作时，行锁就很可能会升级为表锁。</p><p>MySQL认为如果对一张表使用大量行锁，会导致事务执行效率下降，从而可能造成其它事务长时间锁等待和更多的锁冲突问题发生，致使性能严重下降，所以MySQL会将行锁升级为表锁。还有，行锁是基于索引加的锁，如果我们在更新操作时，条件索引失效，那么行锁也会升级为表锁。</p><p>因此，基于表锁的数据库操作，会导致SQL阻塞等待，从而影响执行速度。在一些更新操作（insert\\update\\delete）大于或等于读操作的情况下，MySQL不建议使用MyISAM存储引擎。</p><p>除了锁升级之外，行锁相对表锁来说，虽然粒度更细，并发能力提升了，但也带来了新的问题，那就是死锁。因此，在使用行锁时，我们要注意避免死锁。关于死锁，我还会在第35讲中详解。</p><h3>3. 不恰当的SQL语句</h3><p>使用不恰当的SQL语句也是慢SQL最常见的诱因之一。例如，习惯使用&lt;SELECT *&gt;，&lt;SELECT COUNT(*)&gt; SQL语句，在大数据表中使用&lt;LIMIT M,N&gt;分页查询，以及对非索引字段进行排序等等。</p><h2>优化SQL语句的步骤</h2><p>通常，我们在执行一条SQL语句时，要想知道这个SQL先后查询了哪些表，是否使用了索引，这些数据从哪里获取到，获取到数据遍历了多少行数据等等，我们可以通过EXPLAIN命令来查看这些执行信息。这些执行信息被统称为执行计划。</p><h3>1. 通过EXPLAIN分析SQL执行计划</h3><p>假设现在我们使用EXPLAIN命令查看当前SQL是否使用了索引，先通过SQL EXPLAIN导出相应的执行计划如下：</p><p><img src=\"https://static001.geekbang.org/resource/image/bd/f8/bd11fa15122956719289afea2464eff8.jpg?wh=1974*308\" alt=\"\"></p><p>下面对图示中的每一个字段进行一个说明，从中你也能收获到很多零散的知识点。</p><ul>\n<li>id：每个执行计划都有一个id，如果是一个联合查询，这里还将有多个id。</li>\n<li>select_type：表示SELECT查询类型，常见的有SIMPLE（普通查询，即没有联合查询、子查询）、PRIMARY（主查询）、UNION（UNION中后面的查询）、SUBQUERY（子查询）等。</li>\n<li>table：当前执行计划查询的表，如果给表起别名了，则显示别名信息。</li>\n<li>partitions：访问的分区表信息。</li>\n<li>type：表示从表中查询到行所执行的方式，查询方式是SQL优化中一个很重要的指标，结果值从好到差依次是：system &gt; const &gt; eq_ref &gt; ref &gt; range &gt; index &gt; ALL。</li>\n</ul><p><img src=\"https://static001.geekbang.org/resource/image/8f/0b/8fc6cb3338945524fb09a092f396fa0b.jpg?wh=2240*318\" alt=\"\"></p><ul>\n<li>system/const：表中只有一行数据匹配，此时根据索引查询一次就能找到对应的数据。</li>\n</ul><p><img src=\"https://static001.geekbang.org/resource/image/b5/2b/b5ea0778ff22bdde10a57edfc353712b.jpg?wh=2230*352\" alt=\"\"></p><ul>\n<li>eq_ref：使用唯一索引扫描，常见于多表连接中使用主键和唯一索引作为关联条件。</li>\n</ul><p><img src=\"https://static001.geekbang.org/resource/image/d3/50/d390d8c7bb90bdbf26775265ad451c50.jpg?wh=2232*320\" alt=\"\"></p><ul>\n<li>ref：非唯一索引扫描，还可见于唯一索引最左原则匹配扫描。</li>\n</ul><p><img src=\"https://static001.geekbang.org/resource/image/40/a4/4020416795c991f68fb057b3e6b80ca4.jpg?wh=2230*316\" alt=\"\"></p><ul>\n<li>range：索引范围扫描，比如，&lt;，&gt;，between等操作。</li>\n</ul><p><img src=\"https://static001.geekbang.org/resource/image/7f/c7/7f7a40f88150117f6fe0bb56f52da6c7.jpg?wh=2224*322\" alt=\"\"></p><ul>\n<li>index：索引全表扫描，此时遍历整个索引树。</li>\n</ul><p><img src=\"https://static001.geekbang.org/resource/image/d3/7b/d3d7221fec38845145ac0f365196427b.jpg?wh=2228*326\" alt=\"\"></p><ul>\n<li>ALL：表示全表扫描，需要遍历全表来找到对应的行。</li>\n<li>possible_keys：可能使用到的索引。</li>\n<li>key：实际使用到的索引。</li>\n<li>key_len：当前使用的索引的长度。</li>\n<li>ref：关联id等信息。</li>\n<li>rows：查找到记录所扫描的行数。</li>\n<li>filtered：查找到所需记录占总扫描记录数的比例。</li>\n<li>Extra：额外的信息。</li>\n</ul><h3>2. 通过Show Profile分析SQL执行性能</h3><p>上述通过  EXPLAIN  分析执行计划，仅仅是停留在分析SQL的外部的执行情况，如果我们想要深入到MySQL内核中，从执行线程的状态和时间来分析的话，这个时候我们就可以选择Profile。</p><p>Profile除了可以分析执行线程的状态和时间，还支持进一步选择ALL、CPU、MEMORY、BLOCK IO、CONTEXT SWITCHES等类型来查询SQL语句在不同系统资源上所消耗的时间。以下是相关命令的注释：</p><pre><code>SHOW PROFILE [type [, type] ... ]\n[FOR QUERY n]\n[LIMIT row_count [OFFSET offset]]\n\ntype参数：\n| ALL：显示所有开销信息\n| BLOCK IO：阻塞的输入输出次数\n| CONTEXT SWITCHES：上下文切换相关开销信息\n| CPU：显示CPU的相关开销信息 \n| IPC：接收和发送消息的相关开销信息\n| MEMORY ：显示内存相关的开销，目前无用\n| PAGE FAULTS ：显示页面错误相关开销信息\n| SOURCE ：列出相应操作对应的函数名及其在源码中的调用位置(行数) \n| SWAPS：显示swap交换次数的相关开销信息\n</code></pre><p>值得注意的是，MySQL是在5.0.37版本之后才支持Show Profile功能的，如果你不太确定的话，可以通过select @@have_profiling查询是否支持该功能，如下图所示：</p><p><img src=\"https://static001.geekbang.org/resource/image/76/45/76a42789a838dfd6b1735c41dd9f8c45.jpg?wh=2032*306\" alt=\"\"></p><p>最新的MySQL版本是默认开启Show Profile功能的，但在之前的旧版本中是默认关闭该功能的，你可以通过set语句在Session级别开启该功能：</p><p><img src=\"https://static001.geekbang.org/resource/image/84/91/840fbe1ecdf7526fdc818f4639e22091.jpg?wh=2100*318\" alt=\"\"></p><p>Show Profiles只显示最近发给服务器的SQL语句，默认情况下是记录最近已执行的15条记录，我们可以重新设置profiling_history_size增大该存储记录，最大值为100。</p><p><img src=\"https://static001.geekbang.org/resource/image/54/4f/5488fde01df647508d60b9a77cd1f14f.jpg?wh=1382*1000\" alt=\"\"></p><p>获取到Query_ID之后，我们再通过Show Profile for Query ID语句，就能够查看到对应Query_ID的SQL语句在执行过程中线程的每个状态所消耗的时间了：</p><p><img src=\"https://static001.geekbang.org/resource/image/dc/23/dc7e4046ddd22438c21690e5bc38c123.jpg?wh=1576*1082\" alt=\"\"></p><p>通过以上分析可知：SELECT COUNT(*) FROM `order`; SQL语句在Sending data状态所消耗的时间最长，这是因为在该状态下，MySQL线程开始读取数据并返回到客户端，此时有大量磁盘I/O操作。</p><h2>常用的SQL优化</h2><p>在使用一些常规的SQL时，如果我们通过一些方法和技巧来优化这些SQL的实现，在性能上就会比使用常规通用的实现方式更加优越，甚至可以将SQL语句的性能提升到另一个数量级。</p><h3>1. 优化分页查询</h3><p>通常我们是使用&lt;LIMIT M,N&gt; +合适的order by来实现分页查询，这种实现方式在没有任何索引条件支持的情况下，需要做大量的文件排序操作（file sort），性能将会非常得糟糕。如果有对应的索引，通常刚开始的分页查询效率会比较理想，但越往后，分页查询的性能就越差。</p><p>这是因为我们在使用LIMIT的时候，偏移量M在分页越靠后的时候，值就越大，数据库检索的数据也就越多。例如 LIMIT 10000,10这样的查询，数据库需要查询10010条记录，最后返回10条记录。也就是说将会有10000条记录被查询出来没有被使用到。</p><p>我们模拟一张10万数量级的order表，进行以下分页查询：</p><pre><code>select * from `demo`.`order` order by order_no limit 10000, 20;\n</code></pre><p>通过EXPLAIN分析可知：该查询使用到了索引，扫描行数为10020行，但所用查询时间为0.018s，相对来说时间偏长了。</p><p><img src=\"https://static001.geekbang.org/resource/image/80/fe/80efe0ba8feb86baa20834fd48c302fe.jpg?wh=2018*318\" alt=\"\"></p><p><img src=\"https://static001.geekbang.org/resource/image/58/1c/58e2377b2adcded4c454d410bbab7d1c.jpg?wh=2078*332\" alt=\"\"></p><ul>\n<li>利用子查询优化分页查询</li>\n</ul><p>以上分页查询的问题在于，我们查询获取的10020行数据结果都返回给我们了，我们能否先查询出所需要的20行数据中的最小ID值，然后通过偏移量返回所需要的20行数据给我们呢？我们可以通过索引覆盖扫描，使用子查询的方式来实现分页查询：</p><pre><code>select * from `demo`.`order` where id&gt; (select id from `demo`.`order` order by order_no limit 10000, 1)  limit 20;\n</code></pre><p>通过EXPLAIN分析可知：子查询遍历索引的范围跟上一个查询差不多，而主查询扫描了更多的行数，但执行时间却减少了，只有0.004s。这就是因为返回行数只有20行了，执行效率得到了明显的提升。</p><p><img src=\"https://static001.geekbang.org/resource/image/10/2e/10e46817482166d205f319cd0512942e.jpg?wh=2034*318\" alt=\"\"></p><p><img src=\"https://static001.geekbang.org/resource/image/49/bb/492ddbbe2ef47d63a6dc797fd44c16bb.jpg?wh=2070*308\" alt=\"\"></p><h3>2. 优化SELECT COUNT(*)</h3><p>COUNT()是一个聚合函数，主要用来统计行数，有时候也用来统计某一列的行数量（不统计NULL值的行）。我们平时最常用的就是COUNT(*)和COUNT(1)这两种方式了，其实两者没有明显的区别，在拥有主键的情况下，它们都是利用主键列实现了行数的统计。</p><p>但COUNT()函数在MyISAM和InnoDB存储引擎所执行的原理是不一样的，通常在没有任何查询条件下的COUNT(*)，MyISAM的查询速度要明显快于InnoDB。</p><p>这是因为MyISAM存储引擎记录的是整个表的行数，在COUNT(*)查询操作时无需遍历表计算，直接获取该值即可。而在InnoDB存储引擎中就需要扫描表来统计具体的行数。而当带上where条件语句之后，MyISAM跟InnoDB就没有区别了，它们都需要扫描表来进行行数的统计。</p><p>如果对一张大表经常做SELECT COUNT(*)操作，这肯定是不明智的。那么我们该如何对大表的COUNT()进行优化呢？</p><ul>\n<li>使用近似值</li>\n</ul><p>有时候某些业务场景并不需要返回一个精确的COUNT值，此时我们可以使用近似值来代替。我们可以使用EXPLAIN对表进行估算，要知道，执行EXPLAIN并不会真正去执行查询，而是返回一个估算的近似值。</p><ul>\n<li>增加汇总统计</li>\n</ul><p>如果需要一个精确的COUNT值，我们可以额外新增一个汇总统计表或者缓存字段来统计需要的COUNT值，这种方式在新增和删除时有一定的成本，但却可以大大提升COUNT()的性能。</p><h3>3. 优化SELECT *</h3><p>我曾经看过很多同事习惯在只查询一两个字段时，都使用select * from table where xxx这样的SQL语句，这种写法在特定的环境下会存在一定的性能损耗。</p><p>MySQL常用的存储引擎有MyISAM和InnoDB，其中InnoDB在默认创建主键时会创建主键索引，而主键索引属于聚簇索引，即在存储数据时，索引是基于B +树构成的，具体的行数据则存储在叶子节点。</p><p>而MyISAM默认创建的主键索引、二级索引以及InnoDB的二级索引都属于非聚簇索引，即在存储数据时，索引是基于B +树构成的，而叶子节点存储的是主键值。</p><p>假设我们的订单表是基于InnoDB存储引擎创建的，且存在order_no、status两列组成的组合索引。此时，我们需要根据订单号查询一张订单表的status，如果我们使用select * from order where order_no='xxx’来查询，则先会查询组合索引，通过组合索引获取到主键ID，再通过主键ID去主键索引中获取对应行所有列的值。</p><p>如果我们使用select order_no, status from order where order_no='xxx’来查询，则只会查询组合索引，通过组合索引获取到对应的order_no和status的值。如果你对这些索引还不够熟悉，请重点关注之后的第34讲，那一讲会详述数据库索引的相关内容。</p><h2>总结</h2><p>在开发中，我们要尽量写出高性能的SQL语句，但也无法避免一些慢SQL语句的出现，或因为疏漏，或因为实际生产环境与开发环境有所区别，这些都是诱因。面对这种情况，我们可以打开慢SQL配置项，记录下都有哪些SQL超过了预期的最大执行时间。首先，我们可以通过以下命令行查询是否开启了记录慢SQL的功能，以及最大的执行时间是多少：</p><pre><code>Show variables like 'slow_query%';\nShow variables like 'long_query_time';\n</code></pre><p>如果没有开启，我们可以通过以下设置来开启：</p><pre><code>set global slow_query_log='ON'; //开启慢SQL日志\nset global slow_query_log_file='/var/lib/mysql/test-slow.log';//记录日志地址\nset global long_query_time=1;//最大执行时间\n</code></pre><p>除此之外，很多数据库连接池中间件也有分析慢SQL的功能。总之，我们要在编程中避免低性能的SQL操作出现，除了要具备一些常用的SQL优化技巧之外，还要充分利用一些SQL工具，实现SQL性能分析与监控。</p><h2>思考题</h2><p>假设有一张订单表order，主要包含了主键订单编码order_no、订单状态status、提交时间create_time等列，并且创建了status列索引和create_time列索引。此时通过创建时间降序获取状态为1的订单编码，以下是具体实现代码：</p><pre><code>select order_no from order where status =1 order by create_time desc\n</code></pre><p><span class=\"orange\">你知道其中的问题所在吗？我们又该如何优化？</span></p><p>期待在留言区看到你的答案。也欢迎你点击“请朋友读”，把今天的内容分享给身边的朋友，邀请他一起讨论。</p><p></p>","neighbors":{"left":{"article_title":"32 | 答疑课堂：模块五思考题集锦","id":112160},"right":{"article_title":"34 | MySQL调优之事务：高并发场景下的数据库事务调优","id":114194}},"comments":[{"had_liked":false,"id":121056,"user_name":"张学磊","can_delete":false,"product_type":"c1","uid":1250029,"ip_address":"","ucode":"F545F384A6F1E1","user_header":"https://wx.qlogo.cn/mmopen/vi_32/DYAIOgq83eotSSnZic41tGkbflx0ogIg3ia6g2muFY1hCgosL2t3icZm7I8Ax1hcv1jNgr6vrZ53dpBuGhaoc6DKg/132","comment_is_top":false,"comment_ctime":1565053359,"is_pvip":false,"replies":[{"id":"44509","content":"非常准确！","user_name":"作者回复","user_name_real":"刘超","uid":"1228576","ctime":1565060763,"ip_address":"","comment_id":121056,"utype":1}],"discussion_count":13,"race_medal":0,"score":"379522175407","product_id":100028001,"comment_content":"status和create_time单独建索引，在查询时只会遍历status索引对数据进行过滤，不会用到create_time列索引，将符合条件的数据返回到server层，在server对数据通过快排算法进行排序，Extra列会出现file sort；应该利用索引的有序性，在status和create_time列建立联合索引，这样根据status过滤后的数据就是按照create_time排好序的，避免在server层排序","like_count":89,"discussions":[{"author":{"id":1228576,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bf/20/19d42715.jpg","nickname":"刘超","note":"","ucode":"CD56F93596E818","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":461597,"discussion_content":"非常准确！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1565060763,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1155275,"avatar":"https://static001.geekbang.org/account/avatar/00/11/a0/cb/aab3b3e7.jpg","nickname":"张三丰","note":"","ucode":"3A6215A40B3B21","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":24515,"discussion_content":"题目要求是降序，你这么做很可能是升序吧","likes_number":4,"is_delete":false,"is_hidden":false,"ctime":1570163619,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1225224,"avatar":"https://static001.geekbang.org/account/avatar/00/12/b2/08/92f42622.jpg","nickname":"尔冬橙","note":"","ucode":"0B013A49BC18DA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":187555,"discussion_content":"那什么时候才会走order by后面的索引","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1582732952,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2532285,"avatar":"","nickname":"Geek_926921","note":"","ucode":"51C3B0178D77E1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":575545,"discussion_content":"这个主要原因还是MySQL只会执行一个范围最小的索引，这里的order_no是主键，所以主键索引优先","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1654930713,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1365206,"avatar":"https://static001.geekbang.org/account/avatar/00/14/d4/d6/1d4543ac.jpg","nickname":"云海","note":"","ucode":"0C6CA0BE58EA21","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":342960,"discussion_content":"为什么 不会用到create_time列索引呢？什么时候会用到呢","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1610888054,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2060756,"avatar":"","nickname":"在下蟑螂王","note":"","ucode":"E66A65A327095A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":299177,"discussion_content":"兄弟你漏了查询字段，要回表查的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1597587258,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":5,"child_discussions":[{"author":{"id":1937062,"avatar":"https://static001.geekbang.org/account/avatar/00/1d/8e/a6/c3286b61.jpg","nickname":"Java垒墙工程师","note":"","ucode":"E76AE44A9C76AE","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2060756,"avatar":"","nickname":"在下蟑螂王","note":"","ucode":"E66A65A327095A","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":306249,"discussion_content":"主键不用回表","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1600229254,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":299177,"ip_address":""},"score":306249,"extra":""},{"author":{"id":2060756,"avatar":"","nickname":"在下蟑螂王","note":"","ucode":"E66A65A327095A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1937062,"avatar":"https://static001.geekbang.org/account/avatar/00/1d/8e/a6/c3286b61.jpg","nickname":"Java垒墙工程师","note":"","ucode":"E76AE44A9C76AE","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":306274,"discussion_content":"啊，他没说按主键查","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1600238103,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":306249,"ip_address":""},"score":306274,"extra":""},{"author":{"id":1937062,"avatar":"https://static001.geekbang.org/account/avatar/00/1d/8e/a6/c3286b61.jpg","nickname":"Java垒墙工程师","note":"","ucode":"E76AE44A9C76AE","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2060756,"avatar":"","nickname":"在下蟑螂王","note":"","ucode":"E66A65A327095A","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":306328,"discussion_content":"返回结果是主键订单编码 order_no","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1600247590,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":306274,"ip_address":""},"score":306328,"extra":""}]},{"author":{"id":1119593,"avatar":"https://static001.geekbang.org/account/avatar/00/11/15/69/187b9968.jpg","nickname":"南山","note":"","ucode":"94656FE4A6C378","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":5144,"discussion_content":"innodb的话对多个文件不是归并排序吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566010229,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1250029,"avatar":"https://wx.qlogo.cn/mmopen/vi_32/DYAIOgq83eotSSnZic41tGkbflx0ogIg3ia6g2muFY1hCgosL2t3icZm7I8Ax1hcv1jNgr6vrZ53dpBuGhaoc6DKg/132","nickname":"张学磊","note":"","ucode":"F545F384A6F1E1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1119593,"avatar":"https://static001.geekbang.org/account/avatar/00/11/15/69/187b9968.jpg","nickname":"南山","note":"","ucode":"94656FE4A6C378","race_medal":0,"user_type":1,"is_pvip":true},"discussion":{"id":5206,"discussion_content":"如果从server层取出的数据在内存中可以放的下，就在内存中使用快速排序，如果内存放不下就利用磁盘使用归并排序","likes_number":7,"is_delete":false,"is_hidden":false,"ctime":1566048759,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":5144,"ip_address":""},"score":5206,"extra":""}]}]},{"had_liked":false,"id":131838,"user_name":"大俊stan","can_delete":false,"product_type":"c1","uid":1125370,"ip_address":"","ucode":"BD0CB5FC790DDB","user_header":"https://static001.geekbang.org/account/avatar/00/11/2b/fa/1cde88d4.jpg","comment_is_top":false,"comment_ctime":1567932443,"is_pvip":false,"discussion_count":5,"race_medal":0,"score":"87467278363","product_id":100028001,"comment_content":"count(*) 的速度是最快的innodb自己有优化","like_count":19,"discussions":[{"author":{"id":1494622,"avatar":"https://static001.geekbang.org/account/avatar/00/16/ce/5e/b103d538.jpg","nickname":"大明猩","note":"","ucode":"61D330B42AE3C4","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":393081,"discussion_content":"45讲是说count(*)有优化，但是名字是count(*)这么慢，我该怎么办？采用的措施确实有使用表存储，你们再去看看吧","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1631241928,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2167240,"avatar":"https://static001.geekbang.org/account/avatar/00/21/11/c8/889846a7.jpg","nickname":"黑白颠倒","note":"","ucode":"E79D2540C3F668","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":415022,"discussion_content":"但是还是没有MAX（id）快","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1636965707,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":2411196,"avatar":"https://static001.geekbang.org/account/avatar/00/24/ca/bc/5d490954.jpg","nickname":"爱狗","note":"","ucode":"9D5A3153C82B62","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2167240,"avatar":"https://static001.geekbang.org/account/avatar/00/21/11/c8/889846a7.jpg","nickname":"黑白颠倒","note":"","ucode":"E79D2540C3F668","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":535344,"discussion_content":"那万一没用的软删除呢，id和count是不是对不上了呀","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1638415929,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":415022,"ip_address":""},"score":535344,"extra":""}]},{"author":{"id":1008582,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/63/c6/d6ea3df3.jpg","nickname":"林肯","note":"","ucode":"D2C97220230DE5","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":339315,"discussion_content":"是的，MySQL45讲中也有提到","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1609600684,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2064639,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/80/ff/89ef5b24.jpg","nickname":"吴 云","note":"","ucode":"8C77F1413B024E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":306557,"discussion_content":"我记得也是，count * 在MySQL已经做过优化了 是很快的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1600317142,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":121775,"user_name":"Kian.Lee","can_delete":false,"product_type":"c1","uid":1086568,"ip_address":"","ucode":"3FB08A00F2DFD7","user_header":"https://static001.geekbang.org/account/avatar/00/10/94/68/56794ea3.jpg","comment_is_top":false,"comment_ctime":1565222833,"is_pvip":false,"discussion_count":4,"race_medal":5,"score":"70284699569","product_id":100028001,"comment_content":"我在实际项目中使用“select order_no from order where status =1 order by id desc<br>” 代替此功能，id为bigint ，也少维护一个索引（create_time）😁","like_count":16,"discussions":[{"author":{"id":1027789,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/ae/cd/3bffed26.jpg","nickname":"kitten","note":"","ucode":"E451DE087CB7CE","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":50514,"discussion_content":"时间越靠后的，ID越大，我也是这样用的","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1573731355,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1225224,"avatar":"https://static001.geekbang.org/account/avatar/00/12/b2/08/92f42622.jpg","nickname":"尔冬橙","note":"","ucode":"0B013A49BC18DA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":586583,"discussion_content":"不一定要自增，但是要连续递增，不然页分裂合并很严重","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1662354261,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"湖南"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2162705,"avatar":"https://static001.geekbang.org/account/avatar/00/21/00/11/1a11b6f7.jpg","nickname":"Galeno  Lu","note":"","ucode":"75203F6E17CB40","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":306034,"discussion_content":"那如果id不是连续自增长的呢？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1600152262,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1086568,"avatar":"https://static001.geekbang.org/account/avatar/00/10/94/68/56794ea3.jpg","nickname":"Kian.Lee","note":"","ucode":"3FB08A00F2DFD7","race_medal":5,"user_type":1,"is_pvip":false},"reply_author":{"id":2162705,"avatar":"https://static001.geekbang.org/account/avatar/00/21/00/11/1a11b6f7.jpg","nickname":"Galeno  Lu","note":"","ucode":"75203F6E17CB40","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":306321,"discussion_content":"如果不是自增长，最好是“生成算法”也要保证后生成的id比前面的id大，如果保证不了那就只能create_time建索引了。","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1600247075,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":306034,"ip_address":""},"score":306321,"extra":""}]}]},{"had_liked":false,"id":121080,"user_name":"QQ怪","can_delete":false,"product_type":"c1","uid":1211223,"ip_address":"","ucode":"1A39B8433D9208","user_header":"https://static001.geekbang.org/account/avatar/00/12/7b/57/a9b04544.jpg","comment_is_top":false,"comment_ctime":1565055057,"is_pvip":false,"replies":[{"id":"44507","content":"对的，为了避免文件排序的发生。因为查询时我们只能用到status索引，如果要对create_time进行排序，则需要使用文件排序filesort。<br><br>filesort是通过相应的排序算法将取得的数据在内存中进行排序，如果内存不够则会使用磁盘文件作为辅助。虽然在一些场景中，filesort并不是特别消耗性能，但是我们可以避免filesort就尽量避免。<br><br>","user_name":"作者回复","user_name_real":"刘超","uid":"1228576","ctime":1565060722,"ip_address":"","comment_id":121080,"utype":1}],"discussion_count":2,"race_medal":0,"score":"70284531793","product_id":100028001,"comment_content":"对staus和create_time建立联合索引","like_count":16,"discussions":[{"author":{"id":1228576,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bf/20/19d42715.jpg","nickname":"刘超","note":"","ucode":"CD56F93596E818","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":461611,"discussion_content":"对的，为了避免文件排序的发生。因为查询时我们只能用到status索引，如果要对create_time进行排序，则需要使用文件排序filesort。\n\nfilesort是通过相应的排序算法将取得的数据在内存中进行排序，如果内存不够则会使用磁盘文件作为辅助。虽然在一些场景中，filesort并不是特别消耗性能，但是我们可以避免filesort就尽量避免。\n\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1565060722,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1211223,"avatar":"https://static001.geekbang.org/account/avatar/00/12/7b/57/a9b04544.jpg","nickname":"QQ怪","note":"","ucode":"1A39B8433D9208","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":4016,"discussion_content":"老师解释的真棒👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1565061025,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":122914,"user_name":"Jian","can_delete":false,"product_type":"c1","uid":1023040,"ip_address":"","ucode":"358133EC2AFEB0","user_header":"https://static001.geekbang.org/account/avatar/00/0f/9c/40/6323850e.jpg","comment_is_top":false,"comment_ctime":1565573090,"is_pvip":false,"replies":[{"id":"50397","content":"可以这么理解","user_name":"作者回复","user_name_real":"刘超","uid":"1228576","ctime":1567947956,"ip_address":"","comment_id":122914,"utype":1}],"discussion_count":3,"race_medal":0,"score":"65990082530","product_id":100028001,"comment_content":"因为好久没有做SQL相关的开发了，所以开始没有特别明白【利用子查询优化分页查询】这里面的意思。我来说下自己的想法，请您检证。我看到您贴的截图中，优化后的sql语句，扫描的行数（rows列）分别是90409和10001，多余前一个较慢的查询，可见扫描行数，不是这个性能的主要原因。我推测这个是由于limit [m],n的实现方法导致的，即MySql会把m+n的数据都取出来，然后返回n个数据给用户。如果用第二种SQL语句，子查询只是获得一个id，虽然扫描了很多行，但都是在索引上进行的，切不需要回表获取内容。外查询是根据id获取数据20条内容，速度自然就会快了。我认为这里性能提高的原因还是居于索引的恰当使用。","like_count":15,"discussions":[{"author":{"id":1228576,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bf/20/19d42715.jpg","nickname":"刘超","note":"","ucode":"CD56F93596E818","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":462453,"discussion_content":"可以这么理解","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567947956,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1962297,"avatar":"https://static001.geekbang.org/account/avatar/00/1d/f1/39/b0960780.jpg","nickname":"恶魔果实","note":"","ucode":"691CD833C984AC","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":318970,"discussion_content":"为什么id >= 取出来的id取出来的结果限制20条就是对的呢？order by order_no， id的结果应该乱序的啊","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1603894241,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1926759,"avatar":"","nickname":"赵玉闯","note":"","ucode":"82E85AC08206EA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":283185,"discussion_content":"没毛病，我也是这么想的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1592207673,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":182244,"user_name":"尔冬橙","can_delete":false,"product_type":"c1","uid":1225224,"ip_address":"","ucode":"0B013A49BC18DA","user_header":"https://static001.geekbang.org/account/avatar/00/12/b2/08/92f42622.jpg","comment_is_top":false,"comment_ctime":1582732503,"is_pvip":false,"replies":[{"id":"71179","content":"数据库需要查询 10020 条记录，最后返回 20 条记录，也就是说将会有 10000 条记录被查询出来没有被使用到。子查询是select id from `demo`.`order` order by order_no limit 10000, 1虽然会扫描10000条数据，但并不会查询出10000条数据，最终查询出来的是一个id值，而这个id值又是主键。","user_name":"作者回复","user_name_real":"刘超","uid":"1228576","ctime":1583157515,"ip_address":"","comment_id":182244,"utype":1}],"discussion_count":1,"race_medal":0,"score":"44532405463","product_id":100028001,"comment_content":"老师，分页查询优化那一块，单从扫描函数看，采用子查询和不采用子查询扫描总行数是差不多的，而不采用子查询，第一个主查询就是返回10020条记录，采用子查询只返回20条记录？我理解是结果集有多少行就是返回多少记录。是因为子查询不返回记录么，它不也扫描了10000行么？","like_count":11,"discussions":[{"author":{"id":1228576,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bf/20/19d42715.jpg","nickname":"刘超","note":"","ucode":"CD56F93596E818","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":485266,"discussion_content":"数据库需要查询 10020 条记录，最后返回 20 条记录，也就是说将会有 10000 条记录被查询出来没有被使用到。子查询是select id from `demo`.`order` order by order_no limit 10000, 1虽然会扫描10000条数据，但并不会查询出10000条数据，最终查询出来的是一个id值，而这个id值又是主键。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1583157515,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":133197,"user_name":"钱","can_delete":false,"product_type":"c1","uid":1009652,"ip_address":"","ucode":"2C92A243A463D4","user_header":"https://static001.geekbang.org/account/avatar/00/0f/67/f4/9a1feb59.jpg","comment_is_top":false,"comment_ctime":1568440761,"is_pvip":false,"replies":[{"id":"51107","content":"我与丁奇结论没有相反，丁奇是建议你在这些count类型中选择使用count(*)，而我是建议不要在大表中做count(*)。丁奇老师讲解了COUNT(*)的原理，我相信他也会建议你不要在一个大表中频繁COUNT(*)。","user_name":"作者回复","user_name_real":"刘超","uid":"1228576","ctime":1568533946,"ip_address":"","comment_id":133197,"utype":1}],"discussion_count":4,"race_medal":0,"score":"31633211833","product_id":100028001,"comment_content":"课后思考及问题<br>1：按照效率排序的话，count(字段)&lt;count(主键 id)&lt;count(1)≈count(*)，所以我建议你，尽量使用 count(*)。——MySQL，丁奇老师的结论<br>如果对一张大表经常做 SELECT COUNT(*) 操作，这肯定是不明智的。——刘老师的结论<br>同样的问题，不同的老师给出了截然相反的结论，我希望有一天两位老师可以讨论一下为什么?<br>刘老师具体没讲COUNT(*)的原理，我倾向于认为丁奇老师的结论是正确的。","like_count":7,"discussions":[{"author":{"id":1228576,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bf/20/19d42715.jpg","nickname":"刘超","note":"","ucode":"CD56F93596E818","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":467290,"discussion_content":"我与丁奇结论没有相反，丁奇是建议你在这些count类型中选择使用count(*)，而我是建议不要在大表中做count(*)。丁奇老师讲解了COUNT(*)的原理，我相信他也会建议你不要在一个大表中频繁COUNT(*)。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1568533946,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1086724,"avatar":"https://static001.geekbang.org/account/avatar/00/10/95/04/dc153120.jpg","nickname":"paopao","note":"","ucode":"4D8247A5B57894","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":45009,"discussion_content":"数据量大的时候，count也会慢，别问我咋知道的，差点把生产库查挂","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1573000217,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1307497,"avatar":"https://static001.geekbang.org/account/avatar/00/13/f3/69/7039d03f.jpg","nickname":"书策稠浊","note":"","ucode":"A29875CE15FDA3","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":388561,"discussion_content":"一个是比较四种方式的查询效率，一个是说大表不要去查，两件不同的事。在大表的情况下，用哪种方式都不行，就不应该查。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1628835470,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1024294,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/PiajxSqBRaELZPnUAiajaR5C25EDLWeJURggyiaOP5GGPe2qlwpQcm5e3ybib8OsP4tvddFDLVRSNNGL5I3SFPJHsA/132","nickname":"null","note":"","ucode":"F9039EFED6B55D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":372205,"discussion_content":"老铁，明显是你理解有误。丁奇老师是说在 count 的 4 种形式，尽量用 count(*)。\n刘老师是针对大表的前提，不推荐经常做 count(*)操作。\n两者的前提条件都不同，自然不能相提并论。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1620225258,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":243465,"user_name":"起点","can_delete":false,"product_type":"c1","uid":1442123,"ip_address":"","ucode":"A54A6D21383B23","user_header":"https://static001.geekbang.org/account/avatar/00/16/01/4b/196a7d8a.jpg","comment_is_top":false,"comment_ctime":1598145887,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"23072982367","product_id":100028001,"comment_content":"sql慢通常是两种情况<br>    1.sql没有使用到索引。<br>    2.因为sql语句使用了粗粒度的锁，导致大量的锁等待，所以也会让sql变慢。<br><br>怎样对慢sql进行分析<br>1.使用explain分析sql的索引使用情况。<br>2.使用show profile 指令分析sql的资源损耗情况<br><br>常用的sql优化<br>1.对于limit 的优化。<br>案例中优化的逻辑（子查询使用了覆盖索引，jion的sql需要把匹配的数据都拿到，再从数据中拿到10000到10010条的数据。子查询的案例中是先获取到符合条件的数据id条件，然后从主查询中查询过滤直接得到符合条件的20条数据）<br><br>2.对于count的优化。<br>可用explain获取近似值。<br>可冗余一个统计字段<br><br>思考题的sql问题在于<br>status和create_time分别是两个索引，而sql查询的时候只能用到一个索引，所以思考题的sql肯定会用create_time的索引（因为status列的离散性不高），而通过crete_time索引是无法获取到status的值的，所以又必须通过聚集索引获得status的值，然后再对status进行过滤，获得最终结果。<br>思考题可通过组合索引优化，把status和create_time建立为一个组合索引，这个时候就只需要通过这个组合索引就能过滤掉所有条件，而且索引中已经包含了需要查询显示的列，这里又会使用覆盖索引，索引无须查询聚集索引进行回表操作。<br><br>完全理解老师的优化案例还需要一定基础知识才行。参考下面这篇文章可帮大家补充一些sql优化的基础原则。<br>sql优化原则<br>https:&#47;&#47;mp.weixin.qq.com&#47;s&#47;u3FOsTroEo6eqKIrfoBBSQ","like_count":5},{"had_liked":false,"id":121024,"user_name":"迎风劲草","can_delete":false,"product_type":"c1","uid":1511787,"ip_address":"","ucode":"66EDA6C0B12A44","user_header":"https://static001.geekbang.org/account/avatar/00/17/11/6b/8034959a.jpg","comment_is_top":false,"comment_ctime":1565051356,"is_pvip":false,"replies":[{"id":"44512","content":"建立联合索引没错，还有就是避免文件排序的问题。","user_name":"作者回复","user_name_real":"刘超","uid":"1228576","ctime":1565060881,"ip_address":"","comment_id":121024,"utype":1}],"discussion_count":3,"race_medal":1,"score":"23039887836","product_id":100028001,"comment_content":"创建 status create_time order_no 联合索引，避免回表","like_count":5,"discussions":[{"author":{"id":1228576,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bf/20/19d42715.jpg","nickname":"刘超","note":"","ucode":"CD56F93596E818","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":461580,"discussion_content":"建立联合索引没错，还有就是避免文件排序的问题。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1565060881,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2317053,"avatar":"","nickname":"Geek_0db287","note":"","ucode":"6006B0FAB3B46F","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":553707,"discussion_content":"这个是不是不用order_no 加这个字段去创建联合索引  因为这个字段是主键","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1646036923,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1066251,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/0Qp9pxHBvgdZAveKzsvUFFUicCJfe7ONzhC7jSNFQDNFvg0jRMXuqqZOdxG1qKosylUYrpIHUR2Q76w5m4HtVkg/132","nickname":"Aaron","note":"","ucode":"B0C504A76297C7","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":50829,"discussion_content":"按照status create_time order_no这样的顺序，能一举两得解决重排序和回表的问题。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573778555,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":147232,"user_name":"mumu","can_delete":false,"product_type":"c1","uid":1371095,"ip_address":"","ucode":"E409BDA36091A3","user_header":"https://static001.geekbang.org/account/avatar/00/14/eb/d7/712912a7.jpg","comment_is_top":false,"comment_ctime":1572849165,"is_pvip":false,"replies":[{"id":"57613","content":"这里我们就默认orderno是递增的，而且是随着id自增长递增","user_name":"作者回复","user_name_real":"刘超","uid":"1228576","ctime":1573384404,"ip_address":"","comment_id":147232,"utype":1}],"discussion_count":2,"race_medal":0,"score":"18752718349","product_id":100028001,"comment_content":"<br>select * from `demo`.`order` where id&gt; (select id from `demo`.`order` order by order_no limit 10000, 1)  limit 20;，老师您好，我不懂这样写为什么是正确的，为什么id&gt;子查询结果的20条就是按order_no排序所需的20条？","like_count":4,"discussions":[{"author":{"id":1228576,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bf/20/19d42715.jpg","nickname":"刘超","note":"","ucode":"CD56F93596E818","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":473212,"discussion_content":"这里我们就默认orderno是递增的，而且是随着id自增长递增","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573384404,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":1,"child_discussions":[{"author":{"id":2908614,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJv3lRK4wdwF9weh2gyWuHzHsjlo7aIHHl0VQbOdXicLOh6V4ympzDsibyg9Ex1XYqQESYzKrTpx43w/132","nickname":"Geek_fef902","note":"","ucode":"9D737F24B12A70","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1228576,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bf/20/19d42715.jpg","nickname":"刘超","note":"","ucode":"CD56F93596E818","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":570047,"discussion_content":"老师！那是否可以用：select * from `demo`.`order` where order_no&gt; (select order_no from `demo`.`order` order by order_no limit 10000, 1)  limit 20？还有要是这个no要是字符串的情况，也适用这种优化吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1651647104,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":473212,"ip_address":""},"score":570047,"extra":""}]}]},{"had_liked":false,"id":138323,"user_name":"张三丰","can_delete":false,"product_type":"c1","uid":1155275,"ip_address":"","ucode":"3A6215A40B3B21","user_header":"https://static001.geekbang.org/account/avatar/00/11/a0/cb/aab3b3e7.jpg","comment_is_top":false,"comment_ctime":1570163867,"is_pvip":false,"replies":[{"id":"53308","content":"只要有序的，就不会再重复排序了，只是一个升降序的问题了","user_name":"作者回复","user_name_real":"刘超","uid":"1228576","ctime":1570346256,"ip_address":"","comment_id":138323,"utype":1}],"discussion_count":2,"race_medal":0,"score":"18750033051","product_id":100028001,"comment_content":"就算使用了联合索引，也避免不了排序吧，因为题目要求的是降序，联合索引是保证第一个索引有序的前提下再保证第二个索引有序，那么这个有序是升序，如果没记错的话。","like_count":4,"discussions":[{"author":{"id":1228576,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bf/20/19d42715.jpg","nickname":"刘超","note":"","ucode":"CD56F93596E818","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":469483,"discussion_content":"只要有序的，就不会再重复排序了，只是一个升降序的问题了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1570346256,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1937062,"avatar":"https://static001.geekbang.org/account/avatar/00/1d/8e/a6/c3286b61.jpg","nickname":"Java垒墙工程师","note":"","ucode":"E76AE44A9C76AE","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":306336,"discussion_content":"降序可以倒着链表查","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1600248285,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":136417,"user_name":"尔冬橙","can_delete":false,"product_type":"c1","uid":1225224,"ip_address":"","ucode":"0B013A49BC18DA","user_header":"https://static001.geekbang.org/account/avatar/00/12/b2/08/92f42622.jpg","comment_is_top":false,"comment_ctime":1569427272,"is_pvip":false,"replies":[{"id":"53068","content":"使用limit 10000，1，所以需要顺序扫描到10001行，所以我们尽量使用主键递增的方式，直接将主查询换成select * from `demo`.`order` where id&gt; 10000 limit 20,避免扫描带来的性能问题。<br>","user_name":"作者回复","user_name_real":"刘超","uid":"1228576","ctime":1569981105,"ip_address":"","comment_id":136417,"utype":1}],"discussion_count":1,"race_medal":0,"score":"14454329160","product_id":100028001,"comment_content":"为什么分页查询优化那块，主查询扫描这么多行？","like_count":3,"discussions":[{"author":{"id":1228576,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bf/20/19d42715.jpg","nickname":"刘超","note":"","ucode":"CD56F93596E818","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":468621,"discussion_content":"使用limit 10000，1，所以需要顺序扫描到10001行，所以我们尽量使用主键递增的方式，直接将主查询换成select * from `demo`.`order` where id&amp;gt; 10000 limit 20,避免扫描带来的性能问题。\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1569981105,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":122189,"user_name":"Geek_002ff7","can_delete":false,"product_type":"c1","uid":1524069,"ip_address":"","ucode":"0D769F8E89E5E8","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJ9WPJDCXbpOSCL7PxPic9TP2l2ahyGiakia6iaziaO0BicVUibyN4ymicckTzaKzhdZrU9W3GkpsmpBnfiaibg/132","comment_is_top":false,"comment_ctime":1565314228,"is_pvip":false,"replies":[{"id":"45122","content":"下一讲则会讲到","user_name":"作者回复","user_name_real":"刘超","uid":"1228576","ctime":1565575374,"ip_address":"","comment_id":122189,"utype":1}],"discussion_count":1,"race_medal":0,"score":"14450216116","product_id":100028001,"comment_content":"真实情况一般不会在status上单独建索引，因为status大部分都是重复值，数据库一般走全表扫描了，感觉漏讲了索引失效的情况","like_count":3,"discussions":[{"author":{"id":1228576,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bf/20/19d42715.jpg","nickname":"刘超","note":"","ucode":"CD56F93596E818","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":462138,"discussion_content":"下一讲则会讲到","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1565575374,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":221689,"user_name":"石妖","can_delete":false,"product_type":"c1","uid":1230322,"ip_address":"","ucode":"C6DD9EFEDD2416","user_header":"https://static001.geekbang.org/account/avatar/00/12/c5/f2/fccf87bb.jpg","comment_is_top":false,"comment_ctime":1590566384,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10180500976","product_id":100028001,"comment_content":"思考题中，由于status区分度较低，无论是否有索引，以status为条件进行查询大概率是进行全表扫描，而且联合索引有一定的局限性（最左匹配），所以我觉得没有必要在status上添加索引。而create_time因为是排序字段，可以利用索引有序性优化查询速度。所以，我建议是只在create_time添加索引即可","like_count":2},{"had_liked":false,"id":185578,"user_name":"IT橘子","can_delete":false,"product_type":"c1","uid":1066932,"ip_address":"","ucode":"1DBEE96BAF8B0B","user_header":"https://static001.geekbang.org/account/avatar/00/10/47/b4/e8b3f53f.jpg","comment_is_top":false,"comment_ctime":1583637402,"is_pvip":false,"replies":[{"id":"72179","content":"是的，id是自增长的","user_name":"作者回复","user_name_real":"刘超","uid":"1228576","ctime":1584014963,"ip_address":"","comment_id":185578,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10173571994","product_id":100028001,"comment_content":"老师，常用的SQL优化-1.优化分页查询中利用子查询优化分页查询成立的条件是不是order_no建立了唯一索引，即order_no与id（主键）一一对应，并且在order_no的索引上，id是严格单调递增的？","like_count":2,"discussions":[{"author":{"id":1228576,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bf/20/19d42715.jpg","nickname":"刘超","note":"","ucode":"CD56F93596E818","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":486423,"discussion_content":"是的，id是自增长的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584014963,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":134758,"user_name":"行则将至","can_delete":false,"product_type":"c1","uid":1542987,"ip_address":"","ucode":"DB972F2DF059C4","user_header":"https://static001.geekbang.org/account/avatar/00/17/8b/4b/fa52d222.jpg","comment_is_top":false,"comment_ctime":1568909709,"is_pvip":false,"replies":[{"id":"51869","content":"&gt;=即可，强调优化思路，具体的细节老师这边没有把控好，多多包涵","user_name":"作者回复","user_name_real":"刘超","uid":"1228576","ctime":1569054209,"ip_address":"","comment_id":134758,"utype":1}],"discussion_count":2,"race_medal":1,"score":"10158844301","product_id":100028001,"comment_content":"select * from `demo`.`order` where id&gt; (select id from `demo`.`order` order by order_no limit 10000, 1)  limit 20;<br>老师，这个优化后的查询，您是先查询出来的第10001条数据的id，然后 id 大于此值。获取20条数据。这样获取的值不对啊，我试了。这样获取的是10002到10021的数据了，不是10001到10020的数据。子查询获取的值减一就对了","like_count":2,"discussions":[{"author":{"id":1228576,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bf/20/19d42715.jpg","nickname":"刘超","note":"","ucode":"CD56F93596E818","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":467889,"discussion_content":"&amp;gt;=即可，强调优化思路，具体的细节老师这边没有把控好，多多包涵","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1569054209,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1001023,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/46/3f/7825378a.jpg","nickname":"无名氏","note":"","ucode":"D1F322E386430E","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":252677,"discussion_content":"可以建议编辑改掉，这个＞我也琢磨半天。。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1588173370,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":128991,"user_name":"张德","can_delete":false,"product_type":"c1","uid":1101929,"ip_address":"","ucode":"31FE63E8725EFC","user_header":"https://static001.geekbang.org/account/avatar/00/10/d0/69/5dbdc245.jpg","comment_is_top":false,"comment_ctime":1567002596,"is_pvip":false,"replies":[{"id":"48189","content":"答案已给出","user_name":"作者回复","user_name_real":"刘超","uid":"1228576","ctime":1567130448,"ip_address":"","comment_id":128991,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5861969892","product_id":100028001,"comment_content":"没看别人评论  我来说一下  直接查状态为1的订单  索引的区分度太低","like_count":1,"discussions":[{"author":{"id":1228576,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bf/20/19d42715.jpg","nickname":"刘超","note":"","ucode":"CD56F93596E818","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":465214,"discussion_content":"答案已给出","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567130448,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":122210,"user_name":"拒绝","can_delete":false,"product_type":"c1","uid":1335155,"ip_address":"","ucode":"CB0264C4D3FE17","user_header":"https://static001.geekbang.org/account/avatar/00/14/5f/73/bb3dc468.jpg","comment_is_top":false,"comment_ctime":1565316506,"is_pvip":false,"replies":[{"id":"45116","content":"为了避免文件排序的发生。因为查询时我们只能用到status索引，如果要对create_time进行排序，则需要使用文件排序filesort。","user_name":"作者回复","user_name_real":"刘超","uid":"1228576","ctime":1565575229,"ip_address":"","comment_id":122210,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5860283802","product_id":100028001,"comment_content":"感觉要建立联合索引，但不知具体原因","like_count":1,"discussions":[{"author":{"id":1228576,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bf/20/19d42715.jpg","nickname":"刘超","note":"","ucode":"CD56F93596E818","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":462151,"discussion_content":"为了避免文件排序的发生。因为查询时我们只能用到status索引，如果要对create_time进行排序，则需要使用文件排序filesort。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1565575229,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":121101,"user_name":"LW","can_delete":false,"product_type":"c1","uid":1325297,"ip_address":"","ucode":"89820332658E98","user_header":"https://static001.geekbang.org/account/avatar/00/14/38/f1/996a070d.jpg","comment_is_top":false,"comment_ctime":1565058558,"is_pvip":false,"replies":[{"id":"44508","content":"对的","user_name":"作者回复","user_name_real":"刘超","uid":"1228576","ctime":1565060730,"ip_address":"","comment_id":121101,"utype":1}],"discussion_count":2,"race_medal":0,"score":"5860025854","product_id":100028001,"comment_content":"order_no创建主键，status+create_time创建联合索引","like_count":1,"discussions":[{"author":{"id":1228576,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bf/20/19d42715.jpg","nickname":"刘超","note":"","ucode":"CD56F93596E818","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":461626,"discussion_content":"对的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1565060730,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1066251,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/0Qp9pxHBvgdZAveKzsvUFFUicCJfe7ONzhC7jSNFQDNFvg0jRMXuqqZOdxG1qKosylUYrpIHUR2Q76w5m4HtVkg/132","nickname":"Aaron","note":"","ucode":"B0C504A76297C7","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":50834,"discussion_content":"每张表最好都要有一个自增主键，不要用业务字段最为表主键。最好的方式是status create_time order_no 一起创建联合索引，解决了重新排序问题，又解决了回表查询的问题","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1573778967,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":121046,"user_name":"nimil","can_delete":false,"product_type":"c1","uid":1197925,"ip_address":"","ucode":"19933068972746","user_header":"https://static001.geekbang.org/account/avatar/00/12/47/65/cce8eb34.jpg","comment_is_top":false,"comment_ctime":1565052780,"is_pvip":false,"replies":[{"id":"44510","content":"不会，没有使用到索引。","user_name":"作者回复","user_name_real":"刘超","uid":"1228576","ctime":1565060789,"ip_address":"","comment_id":121046,"utype":1}],"discussion_count":2,"race_medal":0,"score":"5860020076","product_id":100028001,"comment_content":"select * from table limit 1 这种sql语句会走主键索引么，我看explain里边没有任何索引记录","like_count":1,"discussions":[{"author":{"id":1228576,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bf/20/19d42715.jpg","nickname":"刘超","note":"","ucode":"CD56F93596E818","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":461591,"discussion_content":"不会，没有使用到索引。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1565060789,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1307497,"avatar":"https://static001.geekbang.org/account/avatar/00/13/f3/69/7039d03f.jpg","nickname":"书策稠浊","note":"","ucode":"A29875CE15FDA3","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":388563,"discussion_content":"这种全表扫描的走不走主键索引没啥区别，但是具体是怎么走的呢","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1628836193,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":121036,"user_name":"密码123456","can_delete":false,"product_type":"c1","uid":1126593,"ip_address":"","ucode":"9889463CC0EA71","user_header":"https://static001.geekbang.org/account/avatar/00/11/30/c1/2dde6700.jpg","comment_is_top":false,"comment_ctime":1565052401,"is_pvip":false,"replies":[{"id":"51152","content":"Oracle目前依然非常实用，性能也非常强大，只是商业版的，需要付费。","user_name":"作者回复","user_name_real":"刘超","uid":"1228576","ctime":1568542001,"ip_address":"","comment_id":121036,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5860019697","product_id":100028001,"comment_content":"有Oracle吗？oracle感觉用的人不多了，是不是要被淘汰了？","like_count":1,"discussions":[{"author":{"id":1228576,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bf/20/19d42715.jpg","nickname":"刘超","note":"","ucode":"CD56F93596E818","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":461587,"discussion_content":"Oracle目前依然非常实用，性能也非常强大，只是商业版的，需要付费。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1568542001,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":348585,"user_name":"Tattoo","can_delete":false,"product_type":"c1","uid":1036503,"ip_address":"","ucode":"CE926AC8582C96","user_header":"https://static001.geekbang.org/account/avatar/00/0f/d0/d7/a09ef784.jpg","comment_is_top":false,"comment_ctime":1655215426,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1655215426","product_id":100028001,"comment_content":"mark：status和create_time单独建索引，在查询时只会遍历status索引对数据进行过滤，不会用到create_time列索引，将符合条件的数据返回到server层，在server对数据通过快排算法进行排序，Extra列会出现file sort；应该利用索引的有序性，在status和create_time列建立联合索引，这样根据status过滤后的数据就是按照create_time排好序的，避免在server层排序","like_count":0},{"had_liked":false,"id":344856,"user_name":"002","can_delete":false,"product_type":"c1","uid":2815574,"ip_address":"","ucode":"01EA40EC0A024D","user_header":"https://static001.geekbang.org/account/avatar/00/2a/f6/56/519489f4.jpg","comment_is_top":false,"comment_ctime":1651824155,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1651824155","product_id":100028001,"comment_content":"先排序 后条件查询","like_count":0},{"had_liked":false,"id":340684,"user_name":"Geek_5d68ab","can_delete":false,"product_type":"c1","uid":2767290,"ip_address":"","ucode":"30EEDCB7B8B10C","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLyfaTNuvbkiclibb8EuNOiaI2sicPgB0icmOB7f81POSbchoRickQpDxXC3p83D41icIppbHXJ4Vx1j3ulw/132","comment_is_top":false,"comment_ctime":1649045859,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1649045859","product_id":100028001,"comment_content":"<br>select * from `demo`.`order` where id&gt; (select id from `demo`.`order` order by order_no limit 10000, 1)  limit 20;<br>这个sql需要在id和order_no都是单调递增的情况下才能有效","like_count":0},{"had_liked":false,"id":337894,"user_name":"太阳与冰","can_delete":false,"product_type":"c1","uid":2742520,"ip_address":"","ucode":"C2B97279BD66C7","user_header":"https://static001.geekbang.org/account/avatar/00/29/d8/f8/a775cde7.jpg","comment_is_top":false,"comment_ctime":1647139924,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1647139924","product_id":100028001,"comment_content":"我觉得这里结合底层索引和data数据结构和算法讲会更好理解一点","like_count":0},{"had_liked":false,"id":335929,"user_name":"李朋飞","can_delete":false,"product_type":"c1","uid":2531669,"ip_address":"","ucode":"F2D6E2C721F472","user_header":"","comment_is_top":false,"comment_ctime":1645774563,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1645774563","product_id":100028001,"comment_content":"你好作者，关于分页查询优化的那个结论，是不是要有一个前提，前提就是订单号和id都是升序排序的才可以，如果订单号是乱序的，这种优化方式是不是就导致分页有问题了。","like_count":0},{"had_liked":false,"id":308232,"user_name":"学习学个屁","can_delete":false,"product_type":"c1","uid":1049017,"ip_address":"","ucode":"DF2D61E6FB2FCE","user_header":"https://static001.geekbang.org/account/avatar/00/10/01/b9/73435279.jpg","comment_is_top":false,"comment_ctime":1629462984,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1629462984","product_id":100028001,"comment_content":"<br>select order_no from order where status =1 order by create_time desc  语句查询<br>创建了索引 status,create_time_desc 联合索引 <br>数据量大时候，status的基数会很大，innodeb会发现走次索引代价和权标扫描一样，查询会不走索引，会直接去全表扫描<br>另外还会去回表，然后再做一次查询，查询到订单号 order_no<br>另外数据量大时候，采用 create_time 排序，create_time没有索引，排序会很慢，排序大小超过内存buffer文件大小，会使用磁盘排序，往往会耗费很长时间<br><br><br><br>解决办法：<br><br>建立的索引不是很好，应该创建create_time,status，order_no 联合索引，而且不需要回表查询<br><br>使用时间间隔分页查询，同时排序也会走索引排序<br><br>","like_count":0},{"had_liked":false,"id":308230,"user_name":"学习学个屁","can_delete":false,"product_type":"c1","uid":1049017,"ip_address":"","ucode":"DF2D61E6FB2FCE","user_header":"https://static001.geekbang.org/account/avatar/00/10/01/b9/73435279.jpg","comment_is_top":false,"comment_ctime":1629462870,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1629462870","product_id":100028001,"comment_content":"<br>select order_no from order where status =1 order by create_time desc  语句查询<br>创建了索引 status,create_time_desc 联合索引 <br>数据量大时候，status的基数会很大，innodeb会发现走次索引代价和权标扫描一样，查询会不走索引，会直接去全表扫描<br>另外还会去回表，然后再做一次查询，查询到订单号 order_no<br>另外数据量大时候，采用 create_time 排序，create_time没有索引，排序会很慢，排序大小超过内存buffer文件大小，会使用磁盘排序，往往会耗费很长时间<br><br><br><br>解决办法：<br><br>建立的索引不是很好，应该创建create_time,status，order_no 联合索引，而且不需要回表查询<br><br>使用时间间隔分页查询，同时排序也会走索引排序<br><br>","like_count":0},{"had_liked":false,"id":291355,"user_name":"null","can_delete":false,"product_type":"c1","uid":1024294,"ip_address":"","ucode":"F9039EFED6B55D","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/PiajxSqBRaELZPnUAiajaR5C25EDLWeJURggyiaOP5GGPe2qlwpQcm5e3ybib8OsP4tvddFDLVRSNNGL5I3SFPJHsA/132","comment_is_top":false,"comment_ctime":1620225704,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1620225704","product_id":100028001,"comment_content":"select * from `demo`.`order` where id&gt; (select id from `demo`.`order` order by order_no limit 10000, 1)  limit 20;<br><br>最外层查询为什么要查询 90409 行吖？<br>是因为在 B+ 树定位到叶子节点距离子查询的 id 值，仍然需要遍历 9 万多次么？","like_count":0},{"had_liked":false,"id":281569,"user_name":"def","can_delete":false,"product_type":"c1","uid":1263977,"ip_address":"","ucode":"39BDBEA0560C13","user_header":"https://static001.geekbang.org/account/avatar/00/13/49/69/c0fcf4e8.jpg","comment_is_top":false,"comment_ctime":1614796863,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1614796863","product_id":100028001,"comment_content":"通过覆盖索引查询可以减少回表","like_count":0},{"had_liked":false,"id":269148,"user_name":"Geek_964b0f","can_delete":false,"product_type":"c1","uid":2295031,"ip_address":"","ucode":"D6AEDAEF609020","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/sQV132p5s2Nicia1wJPiafJtMP5ic0kwpzntdkibInNScCeic0ZvDE7y90nCM7rGDaZ2DiaRlYjhoplOpJVGlbibkToAPg/132","comment_is_top":false,"comment_ctime":1608538948,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1608538948","product_id":100028001,"comment_content":"思考题题中对于创建时间的排序需要花费大量时间，这里需要建立索引，但是单独的create_time索引无法命中，这里需要建立status和create_time的联合索引","like_count":0},{"had_liked":false,"id":264955,"user_name":"Khirye","can_delete":false,"product_type":"c1","uid":1080985,"ip_address":"","ucode":"6C54C126FA54B8","user_header":"https://static001.geekbang.org/account/avatar/00/10/7e/99/c4302030.jpg","comment_is_top":false,"comment_ctime":1606720895,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1606720895","product_id":100028001,"comment_content":"为啥我show profile for query id里，没有看到sending data这一项呢？","like_count":0},{"had_liked":false,"id":257673,"user_name":"james","can_delete":false,"product_type":"c1","uid":1049208,"ip_address":"","ucode":"5701899403917C","user_header":"https://static001.geekbang.org/account/avatar/00/10/02/78/23c56bce.jpg","comment_is_top":false,"comment_ctime":1604052768,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1604052768","product_id":100028001,"comment_content":"explain 的 all 和 index 啥区别? 数据本身就已经在聚簇索引中, 所谓的 all 全表代表了什么 ","like_count":0},{"had_liked":false,"id":232608,"user_name":"黄平","can_delete":false,"product_type":"c1","uid":1142708,"ip_address":"","ucode":"2207224A09735C","user_header":"https://static001.geekbang.org/account/avatar/00/11/6f/b4/4aefe4c0.jpg","comment_is_top":false,"comment_ctime":1594049531,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1594049531","product_id":100028001,"comment_content":"使用近似值：使用 EXPLAIN 对表进行估算，怎么拿到结果呢？","like_count":0},{"had_liked":false,"id":212679,"user_name":"无名氏","can_delete":false,"product_type":"c1","uid":1001023,"ip_address":"","ucode":"D1F322E386430E","user_header":"https://static001.geekbang.org/account/avatar/00/0f/46/3f/7825378a.jpg","comment_is_top":false,"comment_ctime":1588173792,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1588173792","product_id":100028001,"comment_content":"<br>「select * from `demo`.`order` where id&gt; (select id from `demo`.`order` order by order_no limit 10000, 1)  limit 20;  」这里的“&gt;”得改成“&gt;=”。","like_count":0},{"had_liked":false,"id":211380,"user_name":"春暖花开","can_delete":false,"product_type":"c1","uid":1070300,"ip_address":"","ucode":"D6E4A16B9739CF","user_header":"https://static001.geekbang.org/account/avatar/00/10/54/dc/cc1f6865.jpg","comment_is_top":false,"comment_ctime":1587955305,"is_pvip":false,"replies":[{"id":"78605","content":"是的，主键索引中，所有行数据都存储在叶子节点，叶子节点空间越小，跨页的概率也就越小，性能也就越好","user_name":"作者回复","user_name_real":"刘超","uid":"1228576","ctime":1587986665,"ip_address":"","comment_id":211380,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1587955305","product_id":100028001,"comment_content":"我们平时最常用的就是 COUNT(*) 和 COUNT(1) 这两种方式了，其实两者没有明显的区别，在拥有主键的情况下，它们都是利用主键列实现了行数的统计<br>这个是不是一般使用占用内存最小的是索引统计？  一般二级索引比主键索引占用空间更小","like_count":0,"discussions":[{"author":{"id":1228576,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bf/20/19d42715.jpg","nickname":"刘超","note":"","ucode":"CD56F93596E818","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":493262,"discussion_content":"是的，主键索引中，所有行数据都存储在叶子节点，叶子节点空间越小，跨页的概率也就越小，性能也就越好","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1587986665,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":191069,"user_name":".","can_delete":false,"product_type":"c1","uid":1083502,"ip_address":"","ucode":"83F583994F4F72","user_header":"https://static001.geekbang.org/account/avatar/00/10/88/6e/3bd860d3.jpg","comment_is_top":false,"comment_ctime":1584723239,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1584723239","product_id":100028001,"comment_content":"1、explain和show profile查看定位sql问题<br>2、count存库或模糊查询<br>3、limit n,m +order by 利用子查询和索引覆盖<br>4、mysql行锁是基于索引的，不走索引会退化成表锁","like_count":0},{"had_liked":false,"id":189984,"user_name":"hello","can_delete":false,"product_type":"c1","uid":1464199,"ip_address":"","ucode":"854500026E2187","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKhuGLVRYZibOTfMumk53Wn8Q0Rkg0o6DzTicbibCq42lWQoZ8lFeQvicaXuZa7dYsr9URMrtpXMVDDww/132","comment_is_top":false,"comment_ctime":1584588892,"is_pvip":false,"replies":[{"id":"74174","content":"有过滤条件的情况下只要保证过滤条件使用索引即可","user_name":"作者回复","user_name_real":"刘超","uid":"1228576","ctime":1585137849,"ip_address":"","comment_id":189984,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1584588892","product_id":100028001,"comment_content":"老师请教您一个问题，文中“优化SELECT COUNT(*)”，如果需要精确COUNT值时，可以额外新增一个汇总统计表来统计需要的COUNT值，如果COUTN时有条件过滤，这种如何操作的呀？多谢！","like_count":0,"discussions":[{"author":{"id":1228576,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bf/20/19d42715.jpg","nickname":"刘超","note":"","ucode":"CD56F93596E818","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":487846,"discussion_content":"有过滤条件的情况下只要保证过滤条件使用索引即可","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585137849,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":133598,"user_name":"man1s","can_delete":false,"product_type":"c1","uid":1466953,"ip_address":"","ucode":"FFDB6B52F65A1B","user_header":"https://static001.geekbang.org/account/avatar/00/16/62/49/6332c99b.jpg","comment_is_top":false,"comment_ctime":1568618124,"is_pvip":false,"replies":[{"id":"51394","content":"这里解释的有问题，已修正，是一个匹配行。","user_name":"作者回复","user_name_real":"刘超","uid":"1228576","ctime":1568722414,"ip_address":"","comment_id":133598,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1568618124","product_id":100028001,"comment_content":"创建create_time + status 的组合索引<br>问：老湿，执行计划中的const&#47;system 你说B+树的第一层就可以返回，可是只有叶子节点才存储数据呀<br>","like_count":0,"discussions":[{"author":{"id":1228576,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bf/20/19d42715.jpg","nickname":"刘超","note":"","ucode":"CD56F93596E818","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":467441,"discussion_content":"这里解释的有问题，已修正，是一个匹配行。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1568722414,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":127731,"user_name":"陈影","can_delete":false,"product_type":"c1","uid":1543220,"ip_address":"","ucode":"E53A6D308B6548","user_header":"https://static001.geekbang.org/account/avatar/00/17/8c/34/c0aef91d.jpg","comment_is_top":false,"comment_ctime":1566785823,"is_pvip":false,"replies":[{"id":"50385","content":"这个id是自增长id","user_name":"作者回复","user_name_real":"刘超","uid":"1228576","ctime":1567945057,"ip_address":"","comment_id":127731,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1566785823","product_id":100028001,"comment_content":"select * from `demo`.`order` where id&gt; (select id from `demo`.`order` order by order_no limit 10000, 1)  limit 20;<br>老师，这个子查询找到了按照order_no排序第10001行数据的id，这个id是按照这种排序递增的吗？主查询是怎么找到这种排序方式下第10001-10020行数据的？","like_count":0,"discussions":[{"author":{"id":1228576,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bf/20/19d42715.jpg","nickname":"刘超","note":"","ucode":"CD56F93596E818","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":464626,"discussion_content":"这个id是自增长id","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567945057,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":121850,"user_name":"东方奇骥","can_delete":false,"product_type":"c1","uid":1354850,"ip_address":"","ucode":"DEE7085F7E55A4","user_header":"https://static001.geekbang.org/account/avatar/00/14/ac/62/37912d51.jpg","comment_is_top":false,"comment_ctime":1565234531,"is_pvip":true,"replies":[{"id":"44870","content":"这个涉及到返回记录的大小，前者会返回10020条行记录，而后者只返回20条记录。","user_name":"作者回复","user_name_real":"刘超","uid":"1228576","ctime":1565314740,"ip_address":"","comment_id":121850,"utype":1}],"discussion_count":4,"race_medal":0,"score":"1565234531","product_id":100028001,"comment_content":"select * from `demo`.`order` order by order_no limit 10000, 20;<br>select * from `demo`.`order` where id&gt; (select id from `demo`.`order` order by order_no limit 10000, 1)  limit 20;  老师，感觉自己没完全弄明白，就是用子查询快那么多，但是子查询里，不是也要扫描10001行？还是说子查询里只查了id，不需要回行，所以速度快？<br>","like_count":0,"discussions":[{"author":{"id":1228576,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bf/20/19d42715.jpg","nickname":"刘超","note":"","ucode":"CD56F93596E818","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":461976,"discussion_content":"这个涉及到返回记录的大小，前者会返回10020条行记录，而后者只返回20条记录。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1565314740,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1330640,"avatar":"https://static001.geekbang.org/account/avatar/00/14/4d/d0/85d15c5d.jpg","nickname":"Yorn-chu","note":"","ucode":"8B7DD27DCD28D1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":16483,"discussion_content":"mysql innodb的索引分为聚簇索引和辅助索引，辅助索引树的叶子放着主键ID。第一种情况下，数据库会先走辅助索引获取主键id，再去主键索引树获取数据，实际上IO 了10020次；第二种情况下，数据库先走辅助索引获取主键id，扫描了10001行并取出叶子节点（即主键id），此时并没有执行IO，而是执行主查询，主查询直接扫描主键索引树（连续有序存储，扫描速度极快），扫描出20个id对应的叶子节点执行IO。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1568895987,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":2908614,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJv3lRK4wdwF9weh2gyWuHzHsjlo7aIHHl0VQbOdXicLOh6V4ympzDsibyg9Ex1XYqQESYzKrTpx43w/132","nickname":"Geek_fef902","note":"","ucode":"9D737F24B12A70","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1330640,"avatar":"https://static001.geekbang.org/account/avatar/00/14/4d/d0/85d15c5d.jpg","nickname":"Yorn-chu","note":"","ucode":"8B7DD27DCD28D1","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":570049,"discussion_content":"我觉得楼主的意思是为什么里面的limit 10000,1能这么快，不是也要查询一万多行么","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1651647587,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":16483,"ip_address":""},"score":570049,"extra":""}]},{"author":{"id":1121459,"avatar":"https://static001.geekbang.org/account/avatar/00/11/1c/b3/6d10ba4f.jpg","nickname":"Running Man","note":"","ucode":"4DD2F6AF71327E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":5143,"discussion_content":"这个排序取20条数据，取出的20条数据并没有按照order_no排序，假设前提没声明。order_no生成策略是怎样的？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566007722,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":121077,"user_name":"撒旦的堕落","can_delete":false,"product_type":"c1","uid":1116864,"ip_address":"","ucode":"15F6AA41EE556F","user_header":"https://static001.geekbang.org/account/avatar/00/11/0a/c0/401c240e.jpg","comment_is_top":false,"comment_ctime":1565054951,"is_pvip":false,"replies":[{"id":"44511","content":"这里主要是filesort问题","user_name":"作者回复","user_name_real":"刘超","uid":"1228576","ctime":1565060826,"ip_address":"","comment_id":121077,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1565054951","product_id":100028001,"comment_content":"订单状态字段的离散度很低  不适合做索引<br>因为离散度低   而又没有分页  所以当表数据量大的时候 查询出来的数量也有可能很大  <br>创建时间倒序 可以换成主键倒序 去除掉时间字段的索引  <br>根据状态查询 个人觉得可以从业务入手  将相同状态的数据保存到一张表  想听听老师的意见","like_count":0,"discussions":[{"author":{"id":1228576,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bf/20/19d42715.jpg","nickname":"刘超","note":"","ucode":"CD56F93596E818","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":461610,"discussion_content":"这里主要是filesort问题","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1565060826,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":121017,"user_name":"门窗小二","can_delete":false,"product_type":"c1","uid":1006424,"ip_address":"","ucode":"0BF3780C247F22","user_header":"","comment_is_top":false,"comment_ctime":1565050684,"is_pvip":true,"replies":[{"id":"44515","content":"对的，赞","user_name":"作者回复","user_name_real":"刘超","uid":"1228576","ctime":1565061302,"ip_address":"","comment_id":121017,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1565050684","product_id":100028001,"comment_content":"创建status，创建时间及订单号联合索引，其中创建时间制定降序，这样避免产生filesort及回表！不知道是否正确？","like_count":0,"discussions":[{"author":{"id":1228576,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bf/20/19d42715.jpg","nickname":"刘超","note":"","ucode":"CD56F93596E818","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":461577,"discussion_content":"对的，赞","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1565061302,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":121013,"user_name":"我知道了嗯","can_delete":false,"product_type":"c1","uid":1138471,"ip_address":"","ucode":"9186EC1F32C490","user_header":"https://static001.geekbang.org/account/avatar/00/11/5f/27/a6873bc9.jpg","comment_is_top":false,"comment_ctime":1565050351,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1565050351","product_id":100028001,"comment_content":"感觉订单状态不需要索引","like_count":0},{"had_liked":false,"id":120997,"user_name":"Zed","can_delete":false,"product_type":"c1","uid":1184951,"ip_address":"","ucode":"09947C76F55A46","user_header":"https://static001.geekbang.org/account/avatar/00/12/14/b7/bb6a1fd4.jpg","comment_is_top":false,"comment_ctime":1565047876,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1565047876","product_id":100028001,"comment_content":"这里感觉有俩缺陷<br>1、会全表排序<br>2、订单状态过滤效果不佳","like_count":0}]}