{"id":89613,"title":"58 | 答疑（六）：容器冷启动如何性能分析？","content":"<p>你好，我是倪朋飞。</p><p>专栏更新至今，咱们专栏最后一部分——综合案例模块也要告一段落了。很高兴看到你没有掉队，仍然在积极学习思考、实践操作，并热情地分享你在实际环境中，遇到过的各种性能问题的分析思路以及优化方法。</p><p>今天是性能优化答疑的第六期。照例，我从综合案例模块的留言中，摘出了一些典型问题，作为今天的答疑内容，集中回复。为了便于你学习理解，它们并不是严格按照文章顺序排列的。每个问题，我都附上了留言区提问的截屏。如果你需要回顾内容原文，可以扫描每个问题右下方的二维码查看。</p><h2>问题1：容器冷启动性能分析</h2><p><img src=\"https://static001.geekbang.org/resource/image/be/0c/be00340409bdc188fe7e807996c7e70c.png?wh=1125*1342\" alt=\"\"></p><p>在<a href=\"https://time.geekbang.org/column/article/84953\">为什么应用容器化后，启动慢了很多</a>中，我们一起分析了容器化所导致的应用程序启动缓慢的问题。简单回顾一下当时的案例，Docker 通过 Cgroups 给容器设置了内存限制，但是容器并未意识到 ，所以还是分配了过多内存，导致被系统 OOM 杀死。</p><p>这个案例的根源实际上比较简单，Tony 同学就此提了一个更深入的问题。</p><p>我们知道，容器为应用程序的管理带来了巨大的便捷，诸如 Serverless（只关注应用的运行，而无需关注服务器）、FaaS（Function as a Service）等新型的软件架构，也都基于容器技术来构建。不过，虽然容器启动已经很快了，但在启动新容器，也就是冷启动的时候，启动时间相对于应用程序的性能要求来说，还是过长了。</p><!-- [[[read_end]]] --><p>那么，应该怎么来分析和优化冷启动的性能呢？</p><p>这个问题最核心的一点，其实就是要弄清楚，启动时间到底都花在哪儿了。一般来说，一个 Serverless 服务的启动，包括：</p><ul>\n<li>\n<p>事件触发（比如收到新的HTTP调用请求）；</p>\n</li>\n<li>\n<p>资源调度；</p>\n</li>\n<li>\n<p>镜像拉取；</p>\n</li>\n<li>\n<p>网络配置；</p>\n</li>\n<li>\n<p>启动应用等几个过程。</p>\n</li>\n</ul><p>这几个过程所消耗的时间，都可以通过链路跟踪的方式来监控，进而就可以定位出耗时最多的一个或者多个流程。</p><p>紧接着，针对耗时最多的流程，我们可以通过应用程序监控或者动态追踪的方法，定位出耗时最多的子模块，这样也就找出了要优化的瓶颈点。</p><p>比如，镜像拉取流程，可以通过缓存热点镜像来减少镜像拉取时间；网络配置流程，可以通过网络资源预分配进行加速；而资源调度和容器启动，也可以通过复用预先创建好的容器来进行优化。</p><h2>问题2：CPU火焰图和内存火焰图有什么不同？</h2><p><img src=\"https://static001.geekbang.org/resource/image/90/38/90a871e0dad35f71f80f1efdc9be5538.png?wh=1125*1228\" alt=\"\"></p><p>在<a href=\"https://time.geekbang.org/column/article/86330\">内核线程 CPU 利用率过高的案例</a>中，我们一起通过 perf 和火焰图工具，生成了内核热点函数调用栈的动态矢量图，并定位出性能问题发生时，执行最为频繁的内核函数。</p><p>由于案例分析中，我们主要关注的是 CPU 的繁忙情况，所以这时候生成的火焰图，被称为 on-CPU 火焰图。事实上，除此之外，还有 off-CPU、内存等不同的火焰图，分别表示 CPU 的阻塞和内存的分配释放情况。</p><p>所以，李逍遥同学提了出一个很好的问题：同样都是火焰图，CPU 火焰图和内存火焰图，在生成数据时到底有什么不同？</p><p>这个问题，恰好问到了最核心的点上。CPU 火焰图和内存火焰图，最大的差别其实就是数据来源的不同，也就是函数堆栈不同，而火焰图的格式还是完全一样的。</p><ul>\n<li>\n<p>对 CPU 火焰图来说，采集的数据主要是消耗 CPU 的函数；</p>\n</li>\n<li>\n<p>而对内存火焰图来说，采集的数据主要是内存分配、释放、换页等内存管理函数。</p>\n</li>\n</ul><p>举个例子，我们在使用 perf record 时，默认的采集事件 cpu-cycles ，就是采集 on-CPU 数据，而生成的火焰图就是 CPU 火焰图。通过 perf record -e page-fault 将采集事件换成 page-fault 后，就可以采集内存缺页的数据，生成的火焰图自然就成了内存火焰图。</p><h2>问题3：perf probe失败怎么办？</h2><p><img src=\"https://static001.geekbang.org/resource/image/45/27/45e3bd4566d77fa9c5677b7ea9a82827.png?wh=1125*1690\" alt=\"\"></p><p>在<a href=\"https://time.geekbang.org/column/article/86710\">动态追踪怎么用</a>中，我们一起通过几个案例，学习了 perf、bcc 等动态追踪工具的使用方法。这些动态追踪方法，可以在不修改代码、不重启服务的情况下，让你动态了解应用程序或内核的执行过程。这对于排查情况复杂、难复现的问题尤其有效。</p><p>在使用动态追踪工具时，由于十六进制格式的函数地址并不容易理解，就需要我们借助调试信息，将它们转换为更直观的函数名。对于内核来说，我已经多次提到过，需要安装 debuginfo。不过，针对应用程序又该怎么办呢？</p><p>这里其实有两种方法。</p><p>第一种方法，假如应用程序提供了调试信息软件包，那你就可以直接安装来使用。比如，对于我们案例中的 bash 来说，就可以通过下面的命令，来安装它的调试信息：</p><pre><code># Ubuntu\napt-get install -y bash-dbgsym\n\n# Centos\ndebuginfo-install bash\n</code></pre><p>第二种方法，使用源码重新编译应用程序，并开启编译器的调试信息开关，比如可以为 gcc 增加 -g 选项。</p><h2>问题4：RED法监控微服务应用</h2><p><img src=\"https://static001.geekbang.org/resource/image/31/30/310b2bd6af3628b3fd3c85cd83a34530.png?wh=1125*1090\" alt=\"\"></p><p>在<a href=\"https://time.geekbang.org/column/article/87980\">系统监控的综合思路</a>中，我为你介绍了监控系统资源性能时常用的 USE 法。USE 法把系统资源的性能指标，简化成了三类：使用率、饱和度以及错误数。三者之中任一类别的指标过高时，都代表相应的系统资源可能有性能瓶颈。</p><p>不过，对应用程序的监控来说，这些指标显然就不合适了。因为应用程序的核心指标，是请求数、错误数和响应时间。那该怎么办呢？这其实，正是 Adam 同学在留言中提到的 RED 方法。</p><p>RED 方法，是 Weave Cloud 在监控微服务性能时，结合 Prometheus 监控，所提出的一种监控思路——即对微服务来说，监控它们的请求数（Rate）、错误数（Errors）以及响应时间（Duration）。所以，RED 方法适用于微服务应用的监控，而 USE 方法适用于系统资源的监控。</p><h2>问题5：深入内核的方法</h2><p><img src=\"https://static001.geekbang.org/resource/image/73/13/73bdcda4daf3da8b1706ed480bffe413.png?wh=1125*2287\" alt=\"\"><img src=\"https://static001.geekbang.org/resource/image/fe/98/fedc0101abec096969b021a7306de798.png?wh=1125*1174\" alt=\"\"></p><p>在定位性能问题时，我们通过 perf、ebpf、systemtap 等各种方法排查时，很可能会发现，问题的热点在内核中的某个函数中。而青石和xfan的问题，就是如何去了解、深入 Linux 内核的原理，特别是想弄清楚，性能工具展示的内核函数到底是什么含义。</p><p>其实，要了解内核函数的含义，最好的方法，就是去查询所用内核版本的源代码。这里，我推荐 <a href=\"https://elixir.bootlin.com\">https://elixir.bootlin.com</a> 这个网站。使用方法也很简单，从左边选择内核版本，再通过内核函数名称去搜索就可以了。</p><p>之所以推荐这个网站，是因为它不仅可以让你快速搜索函数定位，还为所有的函数、变量、宏定义等，都提供了快速跳转的功能。这样，当你看到不明白的函数或变量时，点击就可以跳转到相应的定义处。</p><p>此外，对于 eBPF来说，除了可以通过内核源码来了解，我更推荐你从 <a href=\"https://github.com/iovisor/bcc\">BPF Compiler Collection (BCC)</a> 这个项目开始。BCC 提供了很多短小的示例，可以帮你快速了解 eBPF 的工作原理，并熟悉 eBPF 程序的开发思路。了解这些基本的用法后，再去深入 eBPF 的内部，就会轻松很多。</p><p>今天我主要回答这些问题，同时也欢迎你继续在留言区写下疑问和感想，我会持续不断地在留言区跟你交流。希望借助每一次的答疑和交流，可以和你一起，把专栏中的各种知识转化为你的能力。</p>","comments":[{"had_liked":false,"id":177174,"user_name":"Adam","can_delete":false,"product_type":"c1","uid":1305633,"ip_address":"","ucode":"338BA720880E4F","user_header":"https://static001.geekbang.org/account/avatar/00/13/ec/21/b0fe1bfd.jpg","comment_is_top":false,"comment_ctime":1581315072,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"74595759104","product_id":100020901,"comment_content":"学到尾声了，极客时间学过的课程中感觉质量最高的就属于这篇和张磊的k8s了。","like_count":17,"discussions":[{"author":{"id":1333523,"avatar":"https://static001.geekbang.org/account/avatar/00/14/59/13/ff6f3ed5.jpg","nickname":"王章涛","note":"","ucode":"6EC55EC116A58D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":552767,"discussion_content":"我刚好都看了，我还以为极客都是这水平呢，太高了","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1645592825,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":112710,"user_name":"lyonger","can_delete":false,"product_type":"c1","uid":1313840,"ip_address":"","ucode":"E89A75DADEA2A1","user_header":"https://static001.geekbang.org/account/avatar/00/14/0c/30/bb4bfe9d.jpg","comment_is_top":false,"comment_ctime":1562808723,"is_pvip":false,"discussion_count":3,"race_medal":0,"score":"40217514387","product_id":100020901,"comment_content":"本专栏懂的人已经年薪百万，然而我才刚开始。另外专栏确实很不错，我会推荐给我的好朋友，同时很感谢老师和对这个专栏给予支持的其他工作者。另外，非常非常希望能把我们这些专栏学习者放入同一个微信群，后面可以多讨论和交流。","like_count":9,"discussions":[{"author":{"id":1336475,"avatar":"https://static001.geekbang.org/account/avatar/00/14/64/9b/0b578b08.jpg","nickname":"J.Smile","note":"","ucode":"C4D98DFDBF7584","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":300367,"discussion_content":"为什么没人回复呢","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1598065865,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1051042,"avatar":"https://static001.geekbang.org/account/avatar/00/10/09/a2/40f83a42.jpg","nickname":"tony","note":"","ucode":"C8AB60BD90327B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":4033,"discussion_content":"有微信群吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1565073247,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1313840,"avatar":"https://static001.geekbang.org/account/avatar/00/14/0c/30/bb4bfe9d.jpg","nickname":"lyonger","note":"","ucode":"E89A75DADEA2A1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1051042,"avatar":"https://static001.geekbang.org/account/avatar/00/10/09/a2/40f83a42.jpg","nickname":"tony","note":"","ucode":"C8AB60BD90327B","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":4200,"discussion_content":"微信群只能成员邀请进入。可以先添加小明同学微信，微信号为:geektime002，然后请他拉你入群就可以啦。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1565225366,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":4033,"ip_address":""},"score":4200,"extra":""}]}]},{"had_liked":false,"id":283840,"user_name":"Podman","can_delete":false,"product_type":"c1","uid":1801003,"ip_address":"","ucode":"1C9C7EA8C28ED7","user_header":"https://static001.geekbang.org/account/avatar/00/1b/7b/2b/97e4d599.jpg","comment_is_top":false,"comment_ctime":1615953700,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10205888292","product_id":100020901,"comment_content":"坚持了一个多月，老师的课程弥补了我很多知识盲区，也指明了后续需要学习的一些方向！感谢老师！也希望老师后续能出更多的精品课程！","like_count":3},{"had_liked":false,"id":261981,"user_name":"Q","can_delete":false,"product_type":"c1","uid":1047423,"ip_address":"","ucode":"785546C617D3DF","user_header":"https://static001.geekbang.org/account/avatar/00/0f/fb/7f/746a6f5e.jpg","comment_is_top":false,"comment_ctime":1605596396,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10195530988","product_id":100020901,"comment_content":"拖了一年多，花了半个月看完。收获匪浅，最大收获就是，敢于去啃内核方面的书籍了，原理知识非常重要！（家里堆了好几本内核方面的书籍，都是看了一点就丢在哪里吃灰，实在看不动看不懂，怕了怕了）。做Linux系统运维有5年了，一直徘徊在应用层面，对性能优化只能说懂点毛毛雨吧，很高兴能遇到这么好的课程，真的能提升功力！ -- 12月再二刷一遍","like_count":3},{"had_liked":false,"id":249480,"user_name":"Jxin","can_delete":false,"product_type":"c1","uid":1251111,"ip_address":"","ucode":"4C03928388C413","user_header":"https://static001.geekbang.org/account/avatar/00/13/17/27/ec30d30a.jpg","comment_is_top":false,"comment_ctime":1600670251,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10190604843","product_id":100020901,"comment_content":"完结收工，受益良多。感谢大佬的付出。","like_count":2},{"had_liked":false,"id":241871,"user_name":"Don Wang","can_delete":false,"product_type":"c1","uid":1319529,"ip_address":"","ucode":"1853365FA279F2","user_header":"https://static001.geekbang.org/account/avatar/00/14/22/69/09f7a8a2.jpg","comment_is_top":false,"comment_ctime":1597479867,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10187414459","product_id":100020901,"comment_content":"这个专栏买来有一年半呢，终于在这半个月啃完了！  又是笔记，又是实验，收获巨大！<br><br>","like_count":3},{"had_liked":false,"id":100149,"user_name":"Musisan","can_delete":false,"product_type":"c1","uid":1500498,"ip_address":"","ucode":"A9A9FE56AABEBA","user_header":"https://static001.geekbang.org/account/avatar/00/16/e5/52/35bc9c07.jpg","comment_is_top":false,"comment_ctime":1559460533,"is_pvip":false,"replies":[{"id":"36182","content":"👍","user_name":"作者回复","comment_id":100149,"uid":"1001282","ip_address":"","utype":1,"ctime":1559563208,"user_name_real":"倪朋飞"}],"discussion_count":1,"race_medal":0,"score":"10149395125","product_id":100020901,"comment_content":"都别拦我，我要返回去再走一遍","like_count":2,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":452427,"discussion_content":"👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1559563208,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":278627,"user_name":"Wade_阿伟","can_delete":false,"product_type":"c1","uid":1688629,"ip_address":"","ucode":"5AE2E846A13443","user_header":"https://static001.geekbang.org/account/avatar/00/19/c4/35/2cc10d43.jpg","comment_is_top":false,"comment_ctime":1613139089,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5908106385","product_id":100020901,"comment_content":"专栏五大模块都跟下来了，收获真的很大，很值。后面结合性能之巅和内核一起深入学习，继续巩固。","like_count":2},{"had_liked":false,"id":84420,"user_name":"涛涛","can_delete":false,"product_type":"c1","uid":1180810,"ip_address":"","ucode":"747C4B1F20A2D3","user_header":"https://static001.geekbang.org/account/avatar/00/12/04/8a/ff94bd60.jpg","comment_is_top":false,"comment_ctime":1554859718,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5849827014","product_id":100020901,"comment_content":"真的学到不少，又一个很值的专栏","like_count":1},{"had_liked":false,"id":84364,"user_name":"ninuxer","can_delete":false,"product_type":"c1","uid":1243135,"ip_address":"","ucode":"5394ADAF2667D6","user_header":"https://wx.qlogo.cn/mmopen/vi_32/PiajxSqBRaEKQMM4m7NHuicr55aRiblTSEWIYe0QqbpyHweaoAbG7j2v7UUElqqeP3Ihrm3UfDPDRb1Hv8LvPwXqA/132","comment_is_top":false,"comment_ctime":1554855291,"is_pvip":false,"replies":[{"id":"30636","content":"嗯。如果是要监控应用内部的运行状态，推荐还是基于java client构建自己的exporter","user_name":"作者回复","comment_id":84364,"uid":"1001282","ip_address":"","utype":1,"ctime":1555075204,"user_name_real":"倪朋飞"}],"discussion_count":1,"race_medal":0,"score":"5849822587","product_id":100020901,"comment_content":"打卡day62<br>说到应用监控，求问容器内的java进程有什么合适的监控方式么，目前有针对容器本身的cadcisor+prometheus+grafana，如果要在此基础上监控容器内java进程，是不是用prometheus的jmx-exporter合适点？","like_count":2,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":446332,"discussion_content":"嗯。如果是要监控应用内部的运行状态，推荐还是基于java client构建自己的exporter","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1555075204,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":352201,"user_name":"maple-0406","can_delete":false,"product_type":"c1","uid":1197608,"ip_address":"","ucode":"7191D06449B6B6","user_header":"https://static001.geekbang.org/account/avatar/00/12/46/28/14ef7207.jpg","comment_is_top":false,"comment_ctime":1658454131,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1658454131","product_id":100020901,"comment_content":"mark","like_count":0},{"had_liked":false,"id":337972,"user_name":"不负青春不负己🤘","can_delete":false,"product_type":"c1","uid":1363671,"ip_address":"","ucode":"A6DD8E8B20EA6E","user_header":"https://static001.geekbang.org/account/avatar/00/14/ce/d7/5315f6ce.jpg","comment_is_top":false,"comment_ctime":1647191301,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1647191301","product_id":100020901,"comment_content":"mark 一下,终于学完了：）","like_count":0},{"had_liked":false,"id":328058,"user_name":"简迷离","can_delete":false,"product_type":"c1","uid":1141025,"ip_address":"","ucode":"9236C06F516B41","user_header":"https://static001.geekbang.org/account/avatar/00/11/69/21/7db9faf1.jpg","comment_is_top":false,"comment_ctime":1640506696,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1640506696","product_id":100020901,"comment_content":"刷新了我的认知，谢谢倪老师，值得多刷几遍","like_count":0},{"had_liked":false,"id":284264,"user_name":"stark","can_delete":false,"product_type":"c1","uid":1143399,"ip_address":"","ucode":"ADC5C2AE5B97C8","user_header":"https://static001.geekbang.org/account/avatar/00/11/72/67/aa52812a.jpg","comment_is_top":false,"comment_ctime":1616144070,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1616144070","product_id":100020901,"comment_content":"收获很大，","like_count":0},{"had_liked":false,"id":213982,"user_name":"我来也","can_delete":false,"product_type":"c1","uid":1205253,"ip_address":"","ucode":"773D6104F56767","user_header":"https://static001.geekbang.org/account/avatar/00/12/64/05/6989dce6.jpg","comment_is_top":false,"comment_ctime":1588607458,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1588607458","product_id":100020901,"comment_content":"最近在学习severless，搜索到了这篇文章。<br>想不到老师对这个也有提到。<br><br>不过云厂商冷启动的时间对开发者个人来说完全是透明的，只有触发了我们定义的函数才能看到日志。<br>而前面一连串的流程，我们想看都看不到。<br><br>不过老师的思路看起来没毛病。","like_count":0},{"had_liked":false,"id":86058,"user_name":"大坏狐狸","can_delete":false,"product_type":"c1","uid":1325678,"ip_address":"","ucode":"5044F89A505C5B","user_header":"https://static001.geekbang.org/account/avatar/00/14/3a/6e/e39e90ca.jpg","comment_is_top":false,"comment_ctime":1555306877,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1555306877","product_id":100020901,"comment_content":"我终于走到这里了。","like_count":0},{"had_liked":false,"id":85395,"user_name":"Adam","can_delete":false,"product_type":"c1","uid":1305633,"ip_address":"","ucode":"338BA720880E4F","user_header":"https://static001.geekbang.org/account/avatar/00/13/ec/21/b0fe1bfd.jpg","comment_is_top":false,"comment_ctime":1555052298,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1555052298","product_id":100020901,"comment_content":"受益匪浅。","like_count":0},{"had_liked":false,"id":84460,"user_name":"我来也","can_delete":false,"product_type":"c1","uid":1205253,"ip_address":"","ucode":"773D6104F56767","user_header":"https://static001.geekbang.org/account/avatar/00/12/64/05/6989dce6.jpg","comment_is_top":false,"comment_ctime":1554867160,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1554867160","product_id":100020901,"comment_content":"[D58打卡]<br>不知不觉，专栏真的接近尾声了。😢","like_count":0}]}