{"id":91007,"title":"02 | 大厦基石：无生有，有生万物","content":"<p>你好，我是七牛云许式伟。</p><p>在上一讲中，我们把“构建一个应用程序”类比成“构建一座大厦”，并从宏观全局的视角剖析了应用程序这座大厦的构成。今天，我们将更加近距离地去解剖这座大厦的地基：冯·诺依曼体系结构。</p><h2>解剖架构的关键点是什么？</h2><p>在解剖之前，我想和你先谈谈“解剖学”：<strong>我们应该如何去分析架构设计中涉及的每一个零部件。换一句话说，当我们设计或分析一个零部件时，我们会关心哪些问题。</strong></p><p><strong>第一个问题，是需求。</strong>这个零部件的作用是什么？它能被用来做哪些事情？（某种意义上来说更重要的是）它不会被用来做哪些事情？</p><p>你可能会说，呀，这个问题很简单，既然我设计了这个零部件，自然知道它是用来干嘛的。但实质上这里真正艰难的是“为什么”：为何这个零件被设计成用来干这些事情的，而不是多干一点事情，或者为什么不是少干某些事情？</p><p><strong>第二个问题，是规格。</strong>这个零部件接口是什么样的？它如何与其他零件连接在一起的？</p><p>规格是零部件的连接需求的抽象。符合规格的零部件可以有非常多种可能的实现方案，但是，一旦规格中某个条件不能满足了，它就无法正常完成与其他零件的连接，以达到预期的需求目标。</p><p>规格的约束条件会非常多样化，可能是外观（比如形状和颜色），可能是交互方式（比如用键盘、鼠标，或者语音和触摸屏），也可能是质量（比如硬度、耐热性等等）。</p><!-- [[[read_end]]] --><p>那么，冯·诺依曼体系结构的需求和规格又是什么样的呢？</p><h2>为“解决一切的问题”而生</h2><p>冯·诺依曼体系结构不但是应用程序这座大厦的地基，同时也是整个信息科技的地基。</p><p><strong>当我们去审视整个信息科技时，仅把它形容为一座大厦显得如此不贴切，甚至你也不能用“一个城市”去形容它，事实上，它更像是一个无中生有的全新世界：在其中，有个体、有族群、有生态，还有喜怒哀乐。</strong></p><p>冯·诺依曼体系结构的迷人之处在于，从需求来说，它想解决一切问题。解决一切可以用“计算”来解决的问题。</p><p>“计算”的边界在哪里？今天我们还没有人能够真正说得清。计算能不能解决“智能”的问题？通过计算能力，计算机是否终有一天可以获得和人类一样的智能？</p><p>今天人工智能热潮的兴起，证明对于这个问题我们很乐观：计算终将解决智能的问题。尽管我们不能确定什么时候能够达到，但是让人欣慰的是，我们一直在进步 —— 如果人类智能无法完成进一步的进化，那么我们就一直一直在前进，最终无限逼近甚至超越人类智能。</p><p>甚至有科幻小说家设想（例如在Google的“AlphaGo”大热后，霍炬和西乔创作的漫画“BetaCat”），计算机演进出超过人类的智能是生物进化的一个自然演进路径，它将取代人类成为新的食物链顶端，并最终基于其悠久的生命力，去完成人类有限生命无法实现的星际航行之路。</p><h2>冯·诺依曼体系的规格</h2><p>为了实现“解决一切可以用‘计算’来解决的问题”这个目标，冯·诺依曼引入了三类基础零部件：</p><ul>\n<li>中央处理器；</li>\n<li>存储；</li>\n<li>输入输出设备。</li>\n</ul><p>首先我们来看看存储。它负责存放计算涉及的相关数据，作为计算的输入参数和输出结果。</p><p>我们日常见到的存储设备非常的多样化。比如：中央处理器自己内置的寄存器、内存、传统机械硬盘、USB固态硬盘、光盘等等。</p><p>从中央处理器的角度，存储可简单分为两类：一类是内置支持的存储，通过常规的处理器指令可直接访问，比如寄存器、内存、计算机主板的ROM。一类是外置存储，它们属于输入输出设备。中央处理器本身并不能直接读写其中的数据。</p><p>冯·诺依曼体系中涉及的“存储”，指的是中央处理器内置支持的存储。</p><p>我们再来看看输入输出设备。它是计算机开放性的体现，大大拓展了计算机的能力。每个设备通过一个端口与中央处理器连接。通过这个端口地址，中央处理器可以和设备进行数据交换。数据交换涉及的数据格式由设备定义，中央处理器并不理解。</p><p>但这并不影响设备的接入。设备数据交换的发起方（设备使用方）通常理解并可以解释所接收的数据含义。为了方便使用，设备厂商或操作系统厂商通常会提供设备相关的驱动程序，把设备数据交换的细节隐藏起来，设备的使用方只需要调用相关的接口函数就可以操作设备。</p><p>最后我们来看看中央处理器。它负责程序（指令序列）的执行。指令序列在哪里？也存放在存储里面。计算机加电启动后，中央处理器从一个固定的存储地址开始执行。</p><p>中央处理器支持的指令大体如下（我们在第一篇文章中也曾提到过）：</p><ul>\n<li>计算类，也就是支持我们大家都熟知的各类数学运算，如加减乘除、sin/cos等等；</li>\n<li>I/O类，从存储读写数据，从输入输出设备读数据、写数据；</li>\n<li>指令跳转类，在满足特定条件下跳转到新的当前程序执行位置、调用自定义的函数。</li>\n</ul><p>和“解决一切可以用‘计算’来解决的问题”这个伟大的目标相比，冯·诺依曼体系的三类零部件的规格设计显得如此精简。</p><p>为什么这么简洁的规格设计，居然可以解决这么复杂的需求？</p><h2>需求是怎么被满足的？</h2><p>我们来设想一下：假如今天让我们从零开始设计一个叫电脑的东西，我们的目标是“解决一切可以用‘计算’来解决的问题”。</p><p>对于这么含糊的需求，如果你是“电脑”这个产品的主架构师，你会如何应对？</p><p>让我们来分析一下。</p><p>一方面，需求的变化点在于，要解决的问题是五花八门包罗万象的。如何以某种稳定但可扩展的架构来支持这样的变化？而另一方面，需求的稳定之处在于，电脑的核心能力是固定的，怎么表达电脑的核心能力？</p><p>电脑的核心能力是“计算”。什么是计算？计算就是对一个数据（输入）进行变换，变为另一个数据（输出）。在数学中我们把它叫“函数”。如下：</p><blockquote>\n<p>y = F(x)</p>\n</blockquote><p>这里 x、y 是数据。它们可能只是一个简单的数值，也可能是文本、图片、视频，各种我们对现实问题进行参数化建模后的测量值，当然也可能是多个输入数据。但无论它的逻辑含义为何，物理上都可以以一段连续的字节内容来表达。用 Go 的语法表达就是：</p><pre><code>func F(x []byte) (y []byte)\n</code></pre><p>那么 x、y 物理上在哪里？思路推理到这里，“存储” 这个概念自然就产生了：存储，就是存放计算所要操作的数据的所在。</p><p>下面的问题是：一个具体的计算（也就是 F 函数）怎么表达？</p><p>这里的难点在于，F 对于电脑的架构师来说是未知的。那么，怎么设计一种系统架构让用户可以表达任意复杂的计算（函数）？</p><p>逻辑上来看，无论多复杂的自定义函数，都可以通过下面这些元素的组合来定义：</p><ul>\n<li>内置函数，比如整数或小数运算（加减乘除、sin/cos等）；</li>\n<li>循环和条件分支；</li>\n<li>子函数（也是自定义函数）。</li>\n</ul><p>这样一来，对于任意的一个具体的计算（自定义函数）来说，都可以用一组指令序列来表达。</p><p>那么函数 F 物理上在哪里？以指令序列形式存放在存储里面。所以，存储不只存放计算所要操作的数据，也存放“计算”本身。</p><p>只是，存储里面存放的“计算”只是数据，需要有人理解并执行这些数据背后的计算行为，才变成真正意义的“计算”。这个执行者，就是中央处理器（CPU）。它支持很多计算指令，包括执行内置函数、循环和条件分支、执行子函数等。</p><p>所以，有了中央处理器+存储，就可以支持任意复杂的“计算”了。</p><p><img src=\"https://static001.geekbang.org/resource/image/cf/37/cf77b8fbe8a559cecbb264c390bc7337.png?wh=1920*763\" alt=\"\"></p><p>只是如果电脑只有“中央处理器+存储”，那它就如同一个人只有头脑而没有四肢五官，尽管很可能很聪明，但是这种聪明无法展现出来，因为它没法和现实世界发生交互。</p><p>交互，抽象来看就是输入和输出。对人来说，输入靠的是五官：眼睛看、耳朵听、鼻子闻、舌头尝，以及肌肤接触产生的触觉。输出靠语言（说话）和各种动作，如微笑、眨眼、皱眉、手势等等。</p><p>对于电脑来说，输入输出的需求就更多了，不只是四肢五官，而可能是千肢万官。</p><p>从输入需求来说，可能采集静态图像、声音、视频；也可能采集结构化数据，如GPS位置、脉搏、心电图、温度、湿度等；还可能是用户控制指令如键盘按键、鼠标、触摸屏动作等。</p><p>从输出需求来说，可能是向屏幕输出信息；也可能是播放声音；还可能是执行某项动作，如交通灯开关、汽车马达转动、打印机打印等。</p><p>但不管是什么样交互用途的器官（设备），我们要做的只是定义好统一的数据交换协议。这个数据交换机制，和网络上两台电脑通过互联网，需要通过某种数据交换协议进行通讯，需求上没有实质性的差别。</p><p>也就是说，除了纯正的“计算”能力外，中央处理器还要有“数据交换”能力（或者叫IO能力）。最终，<strong>电脑可以被看做由 “中央处理器+存储+一系列的输入输出设备”</strong> 构成。如下图：</p><p><img src=\"https://static001.geekbang.org/resource/image/28/a9/28ef9c0241c5c34abb85148453379fa9.png?wh=1920*981\" alt=\"\"></p><p>尽管输入输出设备引入的最初灵感可能是来自于“交互”，但是当我们去审视输入输出设备到底是什么的时候，我们很自然发现，它能够做的不单单是交互。</p><p>比如常见的外置存储如机械硬盘、光盘等，它们也是输入输出设备，但并不是用于交互，而是显著提升了电脑处理的数据体量。</p><p>输入输出设备从根本上解决的问题是什么？</p><p>是电脑无限可能的扩展能力。</p><p>最重要的一点，输入输出设备和电脑是完全异构的。输入输出设备对电脑来说就只是实现了某项能力的黑盒子。</p><p>这个黑盒子内部如何？没有规定。它可以只是一个原始的数字化的元器件，也可以是另一台冯·诺依曼架构的电脑，还可以是完全不同架构的电脑，比如GPU电脑、量子计算机。</p><p>你可以发现，引入了输入输出设备的电脑，不再只能做狭义上的“计算”（也就是数学意义上的计算），如果我们把交互能力也看做一种计算能力的话，电脑理论上能够解决的“计算”问题变得无所不包。</p><h2>架构思维上我们学习到什么？</h2><p>架构的第一步是需求分析。从需求分析角度来说，关键要抓住需求的稳定点和变化点。需求的稳定点，往往是系统的核心价值点；而需求的变化点，则往往需要相应去做开放性设计。</p><p>对于“电脑”这个产品而言，需求的稳定点是电脑的“计算”能力。需求的变化点，一是用户“计算”需求的多样性，二是用户交互方式的多样性。</p><p>电脑的“计算”能力，最终体现为中央处理器的指令集，这是需求相对稳定的部分。</p><p>用户“计算”需求的多样性，最终是通过在存储中的指令序列实现。计算机加电启动后，中央处理器并不是按自己固有的“计算”过程进行，而是从一个固定的存储地址加载指令序列执行。</p><p>通常，这个固定的存储地址指向计算机主板的ROM上的一段启动程序（BIOS）。这段启动程序通常包含以下这些内容。</p><ul>\n<li>存储设备的驱动程序，用以识别常规的外置存储设备，比如硬盘、光驱、U盘。</li>\n<li>基础外部设备的驱动程序，比如键盘、鼠标、显示器（显卡）。</li>\n<li>设备和启动配置的基础管理能力。</li>\n<li>在外置存储上执行程序的能力（中央处理器只支持在内存上执行程序，当然它也为在外置存储执行程序提供了一些支持，比如内存页缺失的中断处理）。</li>\n<li>将执行权转移到外置存储（第一次安装操作系统的时候可能是光驱甚至是网络存储，平常通常是硬盘）上的操作系统启动程序。这样，操作系统就开始干活了。</li>\n</ul><p>这样一来，“计算”需求的多样性只需要通过调整计算机主板上的BIOS程序，乃至外置存储中的操作系统启动程序就可以实现，而不必去修改中央处理器本身。</p><p>用户交互方式的多样性，则通过定义外部设备与中央处理器的数据交换协议实现。</p><p>当我们把所有的变化点从电脑的最核心部件中央处理器剥离后，中央处理器的需求变得极其稳定，可独立作为产品进行其核心价值的演进。</p><h2>结语</h2><p>总结一下，今天，我们近距离地去解剖了整个信息世界地基：冯·诺依曼体系结构。</p><p>冯·诺依曼体系结构的不凡之处在于，它想“解决一切可以用‘计算’来解决的问题”。</p><p>为了实现这个目标，冯·诺依曼引入了三类基础零部件：中央处理器、存储、输入输出设备。所有计算机都可以看做由 “中央处理器+存储+一系列的输入输出设备” 构成。</p><p>为了方便理解，我在尝试用 Go 语言模拟来实现冯·诺依曼架构体系的电脑：</p><ul>\n<li><a href=\"https://github.com/qiniu/arch/tree/master/von\">https://github.com/qiniu/arch/tree/master/von</a></li>\n</ul><p>如果你对此感兴趣，欢迎 fork 并对其进行修改迭代。</p><p>如果你对今天的内容有什么思考与解读，欢迎给我留言，我们一起讨论。如果你觉得有所收获，也欢迎把文章分享给你的朋友。感谢你的收听，我们下期再见。</p>","comments":[{"had_liked":false,"id":87930,"user_name":"青石","can_delete":false,"product_type":"c1","uid":1215531,"ip_address":"","ucode":"B0056AD6453322","user_header":"https://static001.geekbang.org/account/avatar/00/12/8c/2b/3ab96998.jpg","comment_is_top":false,"comment_ctime":1555756950,"is_pvip":false,"replies":[{"id":"31620","content":"很通透","user_name":"作者回复","user_name_real":"许式伟-七牛云(已满)","uid":"1228022","ctime":1555759488,"ip_address":"","comment_id":87930,"utype":1}],"discussion_count":7,"race_medal":0,"score":"413872617366","product_id":100025201,"comment_content":"《倚天屠龙记》里有个很有意思的桥段，张三丰问了张无忌三次，第一次问：我刚刚演练的太极剑法你还记得多少呢？无忌答还记得一大半，过了一会儿张三丰又问：现在还记得多少呢？无忌答还记得一小半。再过了一会，张三丰又问：这次还记得多少呢？张无忌答全忘记了。张三丰神秘的一笑，说道：现在你可以和他们去打了。<br><br>前人的经验、个人的经历，就像武功招式，打法套路，关键时刻起着指导作用，但真正架构看的是内功心法，如何灵活运用，招式的拆分再组合，无招胜有招。<br><br>经历过拿锤子找钉子的困惑，现在更习惯放空自己，根据用户需求、业务痛点来设计，同时适度考虑部分扩展问题。<br><br>总结下来，觉得适度很重要，再合适的时间做适合的事情。","like_count":97,"discussions":[{"author":{"id":1228022,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bc/f6/e61d4b8f.jpg","nickname":"许式伟-七牛云(已满)","note":"","ucode":"1A2F8AA6F6DB54","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":447652,"discussion_content":"很通透","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1555759488,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2313071,"avatar":"https://static001.geekbang.org/account/avatar/00/23/4b/6f/50be543b.jpg","nickname":"景南鑫 Rock.J","note":"","ucode":"C611E784D391F5","race_medal":1,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":361628,"discussion_content":"这个无招胜有招，的确是高阶思维。但是，经常被多数人乱用，举个例子，为啥华为方面引入老外的IPD的时候，任总说我们先固化再优化，人性本身总是想对已有的规则修改为自己好做的模式。厨师只有把各种刀用熟后，心里才不会去记做什么事情用什么刀。对入门者切记！","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1616720490,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1025067,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a4/2b/3ba9f64b.jpg","nickname":"Devin","note":"","ucode":"7BDCD517BD8DD2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":53271,"discussion_content":"启发：架构设计不是拿锤子找钉子，而是有钉子需要找合适的锤子（铁锤、木锤、气抢等各种各样已有的锤子，甚至是定制锤子）","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1574152889,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1368322,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/PiajxSqBRaEJzq1o2hSDQFYBp8GuIYrxSKjWVzWr7rpnZQZhyIQrjSiaribb2mVRdpJz8zKMgNk7D25TaNzdPzEHg/132","nickname":"你是不是傻","note":"","ucode":"FAC0FC8C459E79","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":374660,"discussion_content":"学习设计模式也有这种感觉，各种模式就是招式，原则理解透彻了，就不用记忆各种模式了，遇到问题基于原则去解决就好了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1621305917,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1204963,"avatar":"https://static001.geekbang.org/account/avatar/00/12/62/e3/13967a53.jpg","nickname":"邓志宇","note":"","ucode":"8BFCA3A8EBE88E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":358987,"discussion_content":"这一下就说通透了 有时候，就是想的太多，什么是适度设计，只能通过经验去把握","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1616080678,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1005042,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/55/f2/ba68d931.jpg","nickname":"有米","note":"","ucode":"C9A10B7A67BC12","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":221272,"discussion_content":"也有可能存在看不见的钉子，需要你去找出来，然后再锤","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585997529,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1376654,"avatar":"https://static001.geekbang.org/account/avatar/00/15/01/8e/48e7c474.jpg","nickname":"一路向北","note":"","ucode":"54D8F1687AE1ED","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":8843,"discussion_content":"高人啊👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1568081765,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":87520,"user_name":"明翼","can_delete":false,"product_type":"c1","uid":1068361,"ip_address":"","ucode":"E77F86BEB3D5C1","user_header":"https://static001.geekbang.org/account/avatar/00/10/4d/49/28e73b9c.jpg","comment_is_top":false,"comment_ctime":1555632131,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"297908375555","product_id":100025201,"comment_content":"笔记：老师通过对冯诺依曼计算机架构体系的剖析，让我们了解在为支持复杂的计算时候，大师是如何将计算的核心设计为跳转，通用计算等简单核心功能的CPU；<br>通过对外设接口的抽象隔离了复杂的而又有无限可能的外设；<br>方便存取指令和数据的内存。<br>简单来说就是找到变化部分，通过抽象接口层来隔离变化，让核心部件功能单一化","like_count":69,"discussions":[{"author":{"id":1368322,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/PiajxSqBRaEJzq1o2hSDQFYBp8GuIYrxSKjWVzWr7rpnZQZhyIQrjSiaribb2mVRdpJz8zKMgNk7D25TaNzdPzEHg/132","nickname":"你是不是傻","note":"","ucode":"FAC0FC8C459E79","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":374662,"discussion_content":"越抽象越稳定，解决一切可以用计算解决的问题，计算是什么，输入计算输出，所以，设计成这样无懈可击。越抽象做的越事情越少，扩展能力越强，工作中还得找合适的度。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1621306231,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":87540,"user_name":"tingye","can_delete":false,"product_type":"c1","uid":1391463,"ip_address":"","ucode":"54F7A44066DF5D","user_header":"https://static001.geekbang.org/account/avatar/00/15/3b/67/c188d3bc.jpg","comment_is_top":false,"comment_ctime":1555633828,"is_pvip":false,"discussion_count":5,"race_medal":0,"score":"289318442660","product_id":100025201,"comment_content":"计算机专业第一课应该讲这个，然后才能知道学习算法，数据结构，编译原理，操作系统，网络通信的意义，都是核心能力的外围","like_count":67,"discussions":[{"author":{"id":2425798,"avatar":"https://static001.geekbang.org/account/avatar/00/25/03/c6/6d06cd09.jpg","nickname":"丸子里藏豆沙","note":"","ucode":"2B443B69FACFB0","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":358205,"discussion_content":"你怕不是计算机专业的，或者说没好好上课。。。计算机系第一门专业课就是计算机导论。通讲计算机体系，我们还上了软件设计与算法分析🌚🌚","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1615946570,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2295858,"avatar":"","nickname":"Geek_22f1b4","note":"","ucode":"80EB628EA875B2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":340327,"discussion_content":"可以看看csapp这本书","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1609979839,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2285946,"avatar":"https://static001.geekbang.org/account/avatar/00/22/e1/7a/b206cded.jpg","nickname":"人在江湖龙在江湖","note":"","ucode":"20850038573DAE","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":324811,"discussion_content":"有天赋的又有几个人，大部分写程序是因为写程序工资高，大部分程序员一辈子能写好程序就可以了，信息技术产业作为全球最大的几个行业之一，完全可以容纳几百万个高薪程序员。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1605173878,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1347425,"avatar":"https://static001.geekbang.org/account/avatar/00/14/8f/61/8c28ae2b.jpg","nickname":"D","note":"","ucode":"10A0F1F79156B7","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":323169,"discussion_content":"要是之前没学冯诺依曼体系，计算机组成原理那些基础知识，看这个不是直接懵了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1604891874,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1863154,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/iaMia0X5uB8LBegSbaycrWkTsTrqQvtjuC1KVN6ibaNibibaNxmKNF6MWNY3BfLDomBf7KqicSAQ8ibGTw5xZG0xXUReA/132","nickname":"李寿俊","note":"","ucode":"7F01E38F08EE64","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":261581,"discussion_content":"你这是已经弄懂了那些基础知识才会有此感慨，没学过cpu架构的人，没有后续开发的一些感悟，听不懂这一段的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1588985041,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":87517,"user_name":"冰糕不冰","can_delete":false,"product_type":"c1","uid":1134761,"ip_address":"","ucode":"B754FE464BA426","user_header":"https://static001.geekbang.org/account/avatar/00/11/50/a9/3f8c7418.jpg","comment_is_top":false,"comment_ctime":1555631641,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"164764388889","product_id":100025201,"comment_content":"这不仅仅传授的是招式，这是一种意境！这样的举例分析确实让人眼前一亮。","like_count":38},{"had_liked":false,"id":87536,"user_name":"crazier.huang","can_delete":false,"product_type":"c1","uid":1495472,"ip_address":"","ucode":"F23F74AC51CC70","user_header":"https://static001.geekbang.org/account/avatar/00/16/d1/b0/09134acd.jpg","comment_is_top":false,"comment_ctime":1555633443,"is_pvip":false,"replies":[{"id":"31563","content":"挺好的问题。需求分析的重要性怎么形容都不过分。准确的需求分析是做出良好架构设计的基础。很多优秀的架构师之所以换到一个新领域一上来并不一定能够设计出好的架构，往往需要经过几次迭代才趋于稳定，原因在于新领域的需求理解需要一个过程。除了心里对需求的反复推敲的严谨态度外，对客户反馈的尊重之心也至关重要。","user_name":"作者回复","user_name_real":"许式伟-七牛云(已满)","uid":"1228022","ctime":1555682343,"ip_address":"","comment_id":87536,"utype":1}],"discussion_count":2,"race_medal":0,"score":"147584521507","product_id":100025201,"comment_content":"如何来确定需求中哪些是稳定的？对架构角度，关注需求到什么层次吗？","like_count":34,"discussions":[{"author":{"id":1228022,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bc/f6/e61d4b8f.jpg","nickname":"许式伟-七牛云(已满)","note":"","ucode":"1A2F8AA6F6DB54","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":447497,"discussion_content":"挺好的问题。需求分析的重要性怎么形容都不过分。准确的需求分析是做出良好架构设计的基础。很多优秀的架构师之所以换到一个新领域一上来并不一定能够设计出好的架构，往往需要经过几次迭代才趋于稳定，原因在于新领域的需求理解需要一个过程。除了心里对需求的反复推敲的严谨态度外，对客户反馈的尊重之心也至关重要。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1555682343,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1333094,"avatar":"https://static001.geekbang.org/account/avatar/00/14/57/66/e57bdb18.jpg","nickname":"liliumss","note":"","ucode":"A52AC5042F3115","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":50420,"discussion_content":"就是说要实践几个领域","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573718846,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":87529,"user_name":"公号-技术夜未眠","can_delete":false,"product_type":"c1","uid":1013683,"ip_address":"","ucode":"83825B57CBD952","user_header":"https://static001.geekbang.org/account/avatar/00/0f/77/b3/991f3f9b.jpg","comment_is_top":false,"comment_ctime":1555633189,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"100339880997","product_id":100025201,"comment_content":"输入–计算–存储–输出<br>输入–存储–计算–输出<br>以上两种抽象的计算模型在我们的每个函数、组件、服务、分层设计中是一脉相承的。大道至简，我理解这既是架构设计的套路，也是架构设计的第一性原理","like_count":23},{"had_liked":false,"id":87515,"user_name":"fy","can_delete":false,"product_type":"c1","uid":1152186,"ip_address":"","ucode":"EDB661C3A05910","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/jsMMDDzhbsTzhicsGZiaeV0PWSnAS0fBlb1r6CsuB32vr3hRwV9UubmfHQx45v7jtaXajPlQ8kQ17b3zpQzHmqVw/132","comment_is_top":false,"comment_ctime":1555631483,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"78865042811","product_id":100025201,"comment_content":"赞赞，用这么浅显的语言阐释了冯若依曼体系结构的用来“解决了一切可以‘计算’的问题”，同时理清楚了冯若依曼架构的由来，计算，存储，输入输出。这三者之间的联系。通过多样变化的需求，抽象出来说明冯若伊曼哪部分是稳定的，哪部分是变化的！","like_count":18},{"had_liked":false,"id":87612,"user_name":"苟范儿","can_delete":false,"product_type":"c1","uid":1364883,"ip_address":"","ucode":"B06B86765512FA","user_header":"https://static001.geekbang.org/account/avatar/00/14/d3/93/bef5a186.jpg","comment_is_top":false,"comment_ctime":1555640917,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"70275117653","product_id":100025201,"comment_content":"看到了数学公式 y = F(x) ，突然发现这个中学就接触的简单公式蕴含的内容十分丰富。再看老师这么结合冯诺伊曼的体系结构 ，y = F(x)  实际上代表的是一种世界观，所有看见的（输入 x ），都可以理解（函数 F）出新的东西（输出 y）。<br>另外，最初的编程课学的循环、条件、顺序几种结构，看似简单，却是程序的根基，不管有多少编程语言，这几种结构从来都没变过。<br>","like_count":16,"discussions":[{"author":{"id":2653668,"avatar":"https://static001.geekbang.org/account/avatar/00/28/7d/e4/3e9eccc7.jpg","nickname":"LL","note":"","ucode":"A6312274DF27C1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":378286,"discussion_content":"高中的时候就在疑惑这个F到底是什么，到现在才彻底理解了它，可以是程序、逻辑、算法、乃至任何一种工具","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1623148078,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":87576,"user_name":"kyushu","can_delete":false,"product_type":"c1","uid":1212429,"ip_address":"","ucode":"9E04E3F8CB5145","user_header":"https://static001.geekbang.org/account/avatar/00/12/80/0d/dc3f4fe9.jpg","comment_is_top":false,"comment_ctime":1555637020,"is_pvip":false,"replies":[{"id":"31505","content":"是的，架构设计切记见招拆招","user_name":"作者回复","user_name_real":"许式伟-七牛云(已满)","uid":"1228022","ctime":1555646154,"ip_address":"","comment_id":87576,"utype":1}],"discussion_count":1,"race_medal":0,"score":"65980146460","product_id":100025201,"comment_content":"需求分析：站的角度很重要。架构设计也一样，总是提高一个level去看待，才能不局限于当前。","like_count":15,"discussions":[{"author":{"id":1228022,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bc/f6/e61d4b8f.jpg","nickname":"许式伟-七牛云(已满)","note":"","ucode":"1A2F8AA6F6DB54","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":447514,"discussion_content":"是的，架构设计切记见招拆招","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1555646154,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":87964,"user_name":"燕羽阳","can_delete":false,"product_type":"c1","uid":1015063,"ip_address":"","ucode":"AF9430187F66EE","user_header":"https://static001.geekbang.org/account/avatar/00/0f/7d/17/179b24f4.jpg","comment_is_top":false,"comment_ctime":1555769016,"is_pvip":false,"replies":[{"id":"31630","content":"多谢推荐","user_name":"作者回复","user_name_real":"许式伟-七牛云(已满)","uid":"1228022","ctime":1555774098,"ip_address":"","comment_id":87964,"utype":1}],"discussion_count":1,"race_medal":0,"score":"61685311160","product_id":100025201,"comment_content":"推荐一本书《系统架构，复杂系统的产品设计与开发》<br>书中提到了 形式、功能和涌现等概念。<br>形式是物理组成，每个形式有自己的功能。这里对应文中的规格。<br>涌现是指系统整体展现的功能、性能等。应当是1+1&gt;2。有点类似于解决文中的需求。<br>","like_count":14,"discussions":[{"author":{"id":1228022,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bc/f6/e61d4b8f.jpg","nickname":"许式伟-七牛云(已满)","note":"","ucode":"1A2F8AA6F6DB54","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":447665,"discussion_content":"多谢推荐","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1555774098,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":87505,"user_name":"军舰","can_delete":false,"product_type":"c1","uid":1221705,"ip_address":"","ucode":"C7E97415F5196A","user_header":"https://static001.geekbang.org/account/avatar/00/12/a4/49/1c8598d1.jpg","comment_is_top":false,"comment_ctime":1555629460,"is_pvip":false,"replies":[{"id":"31510","content":"🤝","user_name":"作者回复","user_name_real":"许式伟-七牛云(已满)","uid":"1228022","ctime":1555646759,"ip_address":"","comment_id":87505,"utype":1}],"discussion_count":1,"race_medal":0,"score":"61685171604","product_id":100025201,"comment_content":"在学校学习计算机原理的时候，感觉那么枯燥难懂，被老师以架构视角进行解读感觉超级简单，不过一下子还很难搞懂，接下来研究一下老师精心准备的代码，希望可以站在架构的角度搞懂一二。","like_count":14,"discussions":[{"author":{"id":1228022,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bc/f6/e61d4b8f.jpg","nickname":"许式伟-七牛云(已满)","note":"","ucode":"1A2F8AA6F6DB54","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":447491,"discussion_content":"🤝","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1555646759,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":87786,"user_name":"虫大侠","can_delete":false,"product_type":"c1","uid":1496150,"ip_address":"","ucode":"C4D52D077A4222","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/THibHz67lwAAo3LPoyVATEFIVaCXzM9EP3PrRNSOlxBGOudQBeaMwBUric4ibAicluxHtpWw7YibFUTyIUuibViaFicluQ/132","comment_is_top":false,"comment_ctime":1555694420,"is_pvip":false,"replies":[{"id":"31575","content":"架构无速成之路，一靠匠心，二靠悟心。所谓悟心，反复梳理脉络后之顿悟哉。","user_name":"作者回复","user_name_real":"许式伟-七牛云(已满)","uid":"1228022","ctime":1555696676,"ip_address":"","comment_id":87786,"utype":1}],"discussion_count":2,"race_medal":0,"score":"57390269268","product_id":100025201,"comment_content":"道理不外乎如是, 从业一段时间的,基本可以明了其中的运转逻辑;<br>难点在于,对于业务的把控,有点像是中医的望闻问切一样,很难get到计算机科学的严谨性规律,可以一以贯之;<br>个人理解还是要踩坑, 经历过了, 思考过了之后, 有了切肤之痛之后形成的架构观;<br>觉得架构的技能, 有点过于依赖于经验的积累, 鲜少有速成的道路;<br>靠天分,靠一两句话, 抑或几篇课程, 能够让自己走上正途, 还是无法让自己做到游刃有余;<br>个人理解, 这还是一门复杂学科.  [唉😔唉]","like_count":13,"discussions":[{"author":{"id":1228022,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bc/f6/e61d4b8f.jpg","nickname":"许式伟-七牛云(已满)","note":"","ucode":"1A2F8AA6F6DB54","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":447600,"discussion_content":"架构无速成之路，一靠匠心，二靠悟心。所谓悟心，反复梳理脉络后之顿悟哉。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1555696676,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1515149,"avatar":"https://static001.geekbang.org/account/avatar/00/17/1e/8d/5b242931.jpg","nickname":"Fish","note":"","ucode":"C20719F8B0F7C8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":351987,"discussion_content":"确实需要在实践中踩坑","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1614559348,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":87545,"user_name":"Barry","can_delete":false,"product_type":"c1","uid":1003308,"ip_address":"","ucode":"79117738B2B26E","user_header":"https://static001.geekbang.org/account/avatar/00/0f/4f/2c/a17b23f7.jpg","comment_is_top":false,"comment_ctime":1555634035,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"53095241587","product_id":100025201,"comment_content":"写的真好，真正理解的人才能用最浅显易懂文字来描述","like_count":12},{"had_liked":false,"id":88191,"user_name":"阿辉","can_delete":false,"product_type":"c1","uid":1217960,"ip_address":"","ucode":"7ED9EDC136FD38","user_header":"https://static001.geekbang.org/account/avatar/00/12/95/a8/708f1a65.jpg","comment_is_top":false,"comment_ctime":1555892461,"is_pvip":false,"replies":[{"id":"31722","content":"划重点","user_name":"作者回复","user_name_real":"许式伟-七牛云(已满)","uid":"1228022","ctime":1555901048,"ip_address":"","comment_id":88191,"utype":1}],"discussion_count":2,"race_medal":0,"score":"44505565421","product_id":100025201,"comment_content":"以冯诺依曼架构为例子，引发架构思想。<br>架构思维上我们学习到什么？<br>架构的第一步是需求分析。从需求分析角度来说，关键要抓住需求的稳定点和变化点。需求的稳定点，往往是系统的核心价值点；而需求的变化点，则往往需要相应去做开放性设计。<br>这就话值得我们在架构时不断的思考。","like_count":10,"discussions":[{"author":{"id":1228022,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bc/f6/e61d4b8f.jpg","nickname":"许式伟-七牛云(已满)","note":"","ucode":"1A2F8AA6F6DB54","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":447763,"discussion_content":"划重点","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1555901048,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1515149,"avatar":"https://static001.geekbang.org/account/avatar/00/17/1e/8d/5b242931.jpg","nickname":"Fish","note":"","ucode":"C20719F8B0F7C8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":351988,"discussion_content":"需求的变化点也需要能很好的支持。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1614559475,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":87512,"user_name":"fy","can_delete":false,"product_type":"c1","uid":1152186,"ip_address":"","ucode":"EDB661C3A05910","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/jsMMDDzhbsTzhicsGZiaeV0PWSnAS0fBlb1r6CsuB32vr3hRwV9UubmfHQx45v7jtaXajPlQ8kQ17b3zpQzHmqVw/132","comment_is_top":false,"comment_ctime":1555630777,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"40210336441","product_id":100025201,"comment_content":"赞👍，用最简单浅显的语言来说明冯若依曼体系结构，说明解决计算","like_count":9},{"had_liked":false,"id":89045,"user_name":"划时代","can_delete":false,"product_type":"c1","uid":1061454,"ip_address":"","ucode":"9554CE2F83B77F","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/2o1Izf2YyJSnnI0ErZ51pYRlnrmibqUTaia3tCU1PjMxuwyXSKOLUYiac2TQ5pd5gNGvS81fVqKWGvDsZLTM8zhWg/132","comment_is_top":false,"comment_ctime":1556068511,"is_pvip":false,"replies":[{"id":"31893","content":"可惜我不是科班出身","user_name":"作者回复","user_name_real":"许式伟-七牛云(已满)","uid":"1228022","ctime":1556076741,"ip_address":"","comment_id":89045,"utype":1}],"discussion_count":2,"race_medal":0,"score":"35915806879","product_id":100025201,"comment_content":"《程序员的自我修养》开篇也讲冯诺依曼体系，发现科班出身都喜欢讲。","like_count":8,"discussions":[{"author":{"id":1228022,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bc/f6/e61d4b8f.jpg","nickname":"许式伟-七牛云(已满)","note":"","ucode":"1A2F8AA6F6DB54","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":447991,"discussion_content":"可惜我不是科班出身","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1556076741,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1667175,"avatar":"https://static001.geekbang.org/account/avatar/00/19/70/67/0c1359c2.jpg","nickname":"qinsi","note":"","ucode":"090D9C4068FF12","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":362591,"discussion_content":"科班出身的话就会讲图灵机和可计算理论了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1616987287,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":87784,"user_name":"虫大侠","can_delete":false,"product_type":"c1","uid":1496150,"ip_address":"","ucode":"C4D52D077A4222","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/THibHz67lwAAo3LPoyVATEFIVaCXzM9EP3PrRNSOlxBGOudQBeaMwBUric4ibAicluxHtpWw7YibFUTyIUuibViaFicluQ/132","comment_is_top":false,"comment_ctime":1555693812,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"35915432180","product_id":100025201,"comment_content":"这篇文章,应该放到大学计算机专业教科书的第一篇中的,应该可以拯救一波煎熬之中的童鞋的 [🐶]","like_count":8},{"had_liked":false,"id":87811,"user_name":"Geek_e55641","can_delete":false,"product_type":"c1","uid":1081875,"ip_address":"","ucode":"63201F64CC5FC2","user_header":"","comment_is_top":false,"comment_ctime":1555722542,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"31620493614","product_id":100025201,"comment_content":"这一篇真的很有感觉，曾经也用这种模式来解构一门程序语言，把编程语言理解成对计算机的抽象，其实解决的都是同样的问题，计算(运算，函数，控制逻辑)，存储(赋值，传递，存储解构)，io(流，响应) ，交互(网络传输)。迫不及待期待后面的课程了！","like_count":7},{"had_liked":false,"id":87601,"user_name":"CoderLim","can_delete":false,"product_type":"c1","uid":1029523,"ip_address":"","ucode":"4A856891BE98E5","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKY0ibA4DWA9Bf6MuicKhyEt0yDXvAzG21xnOUHNLDwuic2icxpesyeXc1AMboeZEW97e8SuZdzIBefqA/132","comment_is_top":false,"comment_ctime":1555639840,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"31620410912","product_id":100025201,"comment_content":"1、解剖架构的关键是需求和规格；<br>2、需求的关键是稳定点和变化点；<br>3、举个栗子，从冯体系理解架构；","like_count":7},{"had_liked":false,"id":87535,"user_name":"上善若水","can_delete":false,"product_type":"c1","uid":1122544,"ip_address":"","ucode":"42D2C732E3E6EF","user_header":"https://static001.geekbang.org/account/avatar/00/11/20/f0/84f3cbe0.jpg","comment_is_top":false,"comment_ctime":1555633428,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"31620404500","product_id":100025201,"comment_content":"力透纸背","like_count":7},{"had_liked":false,"id":88200,"user_name":"翅膀","can_delete":false,"product_type":"c1","uid":1142350,"ip_address":"","ucode":"F5169AD26A41B6","user_header":"https://static001.geekbang.org/account/avatar/00/11/6e/4e/034e2943.jpg","comment_is_top":false,"comment_ctime":1555893267,"is_pvip":false,"replies":[{"id":"31723","content":"有趣的说法，我后面第一章总结也会提到这一点","user_name":"作者回复","user_name_real":"许式伟-七牛云(已满)","uid":"1228022","ctime":1555901104,"ip_address":"","comment_id":88200,"utype":1}],"discussion_count":1,"race_medal":0,"score":"27325697043","product_id":100025201,"comment_content":"这是许老师想法的有损压缩，背后的事情n多。但能还原出来的估计没多少人。我是不行","like_count":6,"discussions":[{"author":{"id":1228022,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bc/f6/e61d4b8f.jpg","nickname":"许式伟-七牛云(已满)","note":"","ucode":"1A2F8AA6F6DB54","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":447765,"discussion_content":"有趣的说法，我后面第一章总结也会提到这一点","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1555901104,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":87561,"user_name":"朱成亮","can_delete":false,"product_type":"c1","uid":1008920,"ip_address":"","ucode":"669B049357B3FA","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJqWuvuicHD7RVlEDJamWNmwVdkjeH4pLxPXoicwqbnpOibI1MFFz9SIVJmQeKSZQRP9np1NUV3wpmnA/132","comment_is_top":false,"comment_ctime":1555635700,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"27325439476","product_id":100025201,"comment_content":"架构第一关键点是理解和分析需求，弄明白需求中核心和可扩展；然后针对性的设计系统来解决这两个问题。","like_count":6},{"had_liked":false,"id":87534,"user_name":"梦醒十分","can_delete":false,"product_type":"c1","uid":1043585,"ip_address":"","ucode":"33830A5A73DDF8","user_header":"https://static001.geekbang.org/account/avatar/00/0f/ec/81/2127e215.jpg","comment_is_top":false,"comment_ctime":1555633379,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"27325437155","product_id":100025201,"comment_content":"艺术家应该窃取灵感，老师是让我们懂的如何窃取冯.诺依曼的灵感。厉害👍","like_count":6},{"had_liked":false,"id":87501,"user_name":"宋文杰","can_delete":false,"product_type":"c1","uid":1034773,"ip_address":"","ucode":"2F5425B179F471","user_header":"https://static001.geekbang.org/account/avatar/00/0f/ca/15/e3f9fb4e.jpg","comment_is_top":false,"comment_ctime":1555628861,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"27325432637","product_id":100025201,"comment_content":"写的也太棒了，谢谢老师","like_count":6},{"had_liked":false,"id":88041,"user_name":"糊李糊涂","can_delete":false,"product_type":"c1","uid":1197625,"ip_address":"","ucode":"E0F6064CBA32B1","user_header":"https://static001.geekbang.org/account/avatar/00/12/46/39/e545c885.jpg","comment_is_top":false,"comment_ctime":1555822703,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"23030659183","product_id":100025201,"comment_content":"当年学冯诺依曼，先来这么一下子，老师就不用苦苦相逼了！！！！","like_count":5},{"had_liked":false,"id":87742,"user_name":"梦翼","can_delete":false,"product_type":"c1","uid":1265322,"ip_address":"","ucode":"C1D63EAD25960B","user_header":"https://static001.geekbang.org/account/avatar/00/13/4e/aa/3a4708f2.jpg","comment_is_top":false,"comment_ctime":1555677006,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"23030513486","product_id":100025201,"comment_content":"看完文章，想起这么一句话“事情不会在出现问题的层面得到解决，只有上升到更高的层面才会得到解决”。老师站在高处，为我们全方位，多角度地讲解了计算机体系。","like_count":5},{"had_liked":false,"id":94596,"user_name":"Geek_gooy","can_delete":false,"product_type":"c1","uid":1504570,"ip_address":"","ucode":"FC168C31530040","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLluwfFjxlCmg9p2rJVicBdBo6OYpN0EAotUguias8wc78WtAEPHsWic0880CqGwyNypy2KZqVpYhGiag/132","comment_is_top":false,"comment_ctime":1557847957,"is_pvip":false,"replies":[{"id":"33855","content":"稳定点和变化点是相对我们要设计的系统而言的。所以参考点很重要。一个系统的变化点可能是另一个系统的稳定点。","user_name":"作者回复","user_name_real":"许式伟-七牛云(已满)","uid":"1228022","ctime":1557880641,"ip_address":"","comment_id":94596,"utype":1}],"discussion_count":1,"race_medal":0,"score":"18737717141","product_id":100025201,"comment_content":"需求的稳定点。<br>经分析，对设计电脑来说CPU是稳定的，所以CPU可以单独抽出来做产品，所以有inter，ibm。<br>那么存储呢，这也是一个稳定点，所以存储也可以单独抽出来做产品，所以你看辣么多卖存储的公司。<br>还有么？是不是外设也是一个稳定点，既然和CPU的数据交换都定死了，所以外设也可以单独抽出来做产品，你看辣么多做外设的公司。<br><br>那不稳定点是程序指令序列吗？这个需求对CPU来说也是稳定的，所以出现了辣么多软件开发公司。<br><br>那设计一个电脑不稳定点在哪里？显然已经没有了，因为我们把要计算的各类需求用一个稳定的程序指令序列来代替了。<br>所以是不是可以理解为，我们分析需求，目的就是把稳定点找出来，再把不稳定点转化成稳定点。","like_count":4,"discussions":[{"author":{"id":1228022,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bc/f6/e61d4b8f.jpg","nickname":"许式伟-七牛云(已满)","note":"","ucode":"1A2F8AA6F6DB54","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":450126,"discussion_content":"稳定点和变化点是相对我们要设计的系统而言的。所以参考点很重要。一个系统的变化点可能是另一个系统的稳定点。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1557880641,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":112620,"user_name":"sam","can_delete":false,"product_type":"c1","uid":1000417,"ip_address":"","ucode":"8D48F4B9045947","user_header":"https://static001.geekbang.org/account/avatar/00/0f/43/e1/b7be5560.jpg","comment_is_top":false,"comment_ctime":1562772846,"is_pvip":false,"replies":[{"id":"40955","content":"👍","user_name":"作者回复","user_name_real":"许式伟-七牛云(已满)","uid":"1228022","ctime":1562774384,"ip_address":"","comment_id":112620,"utype":1}],"discussion_count":1,"race_medal":0,"score":"14447674734","product_id":100025201,"comment_content":"整个信息科技是一个无中生有的全新世界，而整个全新世界的基石就是冯.诺依曼体系结构。<br><br>通过不断推出新形式的“计算”来推进这个全新世界的发展。<br><br>这篇太抽象了，我看了5~6遍，整理出来一份思维图，有兴趣的朋友可以浏览：https:&#47;&#47;www.processon.com&#47;view&#47;link&#47;5d260520e4b07917e2dd4c35 ","like_count":3,"discussions":[{"author":{"id":1228022,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bc/f6/e61d4b8f.jpg","nickname":"许式伟-七牛云(已满)","note":"","ucode":"1A2F8AA6F6DB54","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":457822,"discussion_content":"👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1562774384,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":92979,"user_name":"爱科幻爱魔法细节控","can_delete":false,"product_type":"c1","uid":1275753,"ip_address":"","ucode":"BEECFA102FA711","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eoAgs66iaTKNaTZtFJibhNWYhudlpv39r6gmy5Joj3DB32VZvrYqcguOYExVjfJ7UQHr5AXvjMceia3g/132","comment_is_top":false,"comment_ctime":1557372124,"is_pvip":false,"replies":[{"id":"33172","content":"1、第一个是函数、第二个是动作，含义有所区别。<br>2、CPU 是计算单元，输入输出设备数据交换是需要经过存储的，不一定是内存，也可以是寄存器。<br>3、外存的文件cpu并不支持直接执行，而是操作系统负责，详细见 “07 | 软件运行机制及内存管理” 这一节。","user_name":"作者回复","user_name_real":"许式伟-七牛云(已满)","uid":"1228022","ctime":1557375407,"ip_address":"","comment_id":92979,"utype":1}],"discussion_count":1,"race_medal":0,"score":"14442274012","product_id":100025201,"comment_content":"老师，请问：<br>1.BIOS启动程序包含的内容里，“在外置存储上执行程序的能力”和“将执行权转移到外置存储上的操作系统启动程序”是不是同一个内容（在外置存储上执行程序的能力和执行权转移到外存）；<br>2.中央处理器支持的指令里的I&#47;O类的“从存储读写数据，从输入输出设备读数据、写数据”输入设备可以直接写数据到CPU，需不需要经过内存；<br>3.内置函数如加减乘除,sin,cos等计算保存在CPU里，一个“计算”的执行，执行者是CPU，执行位置是内存。假设执行文件的指令是“exec”，外存里有一个可执行文件“文件1”，那在输入“exec 文件1”后，执行过程是：CPU解析到exec指令，CPU通过内存到外存找到“文件1”，读入到内存，然后在内存里执行文件。是这样的吗？","like_count":3,"discussions":[{"author":{"id":1228022,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bc/f6/e61d4b8f.jpg","nickname":"许式伟-七牛云(已满)","note":"","ucode":"1A2F8AA6F6DB54","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":449447,"discussion_content":"1、第一个是函数、第二个是动作，含义有所区别。\n2、CPU 是计算单元，输入输出设备数据交换是需要经过存储的，不一定是内存，也可以是寄存器。\n3、外存的文件cpu并不支持直接执行，而是操作系统负责，详细见 “07 | 软件运行机制及内存管理” 这一节。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1557375407,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":87833,"user_name":"Being","can_delete":false,"product_type":"c1","uid":1152227,"ip_address":"","ucode":"80A8783927B650","user_header":"https://static001.geekbang.org/account/avatar/00/11/94/e3/ed118550.jpg","comment_is_top":false,"comment_ctime":1555726485,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"14440628373","product_id":100025201,"comment_content":"以前学习计算机的原理，往往就一头扎到细节里折腾好久，而今天跟着老师从宏观角度一步步走进，似乎理解是顺其自然的。架构思维给予了我一些学习上的灵感。","like_count":3},{"had_liked":false,"id":87554,"user_name":"庄小P","can_delete":false,"product_type":"c1","uid":1489063,"ip_address":"","ucode":"A71FA01F713790","user_header":"","comment_is_top":false,"comment_ctime":1555635149,"is_pvip":false,"replies":[{"id":"31507","content":"架构设计本身和语言关系不大，只不过七牛云是用Go的，所以例子会有少量Go代码，没有学过不影响理解。","user_name":"作者回复","user_name_real":"许式伟-七牛云(已满)","uid":"1228022","ctime":1555646434,"ip_address":"","comment_id":87554,"utype":1}],"discussion_count":1,"race_medal":0,"score":"14440537037","product_id":100025201,"comment_content":"请问老师为啥是用Go语言呢？Go语言主要用来开发什么呢？","like_count":3,"discussions":[{"author":{"id":1228022,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bc/f6/e61d4b8f.jpg","nickname":"许式伟-七牛云(已满)","note":"","ucode":"1A2F8AA6F6DB54","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":447502,"discussion_content":"架构设计本身和语言关系不大，只不过七牛云是用Go的，所以例子会有少量Go代码，没有学过不影响理解。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1555646434,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":87551,"user_name":"polly","can_delete":false,"product_type":"c1","uid":1496444,"ip_address":"","ucode":"E990ACF1CC31DF","user_header":"https://static001.geekbang.org/account/avatar/00/16/d5/7c/848bdbc4.jpg","comment_is_top":false,"comment_ctime":1555634557,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"14440536445","product_id":100025201,"comment_content":"抽象的东西被老师解释的浅显易懂","like_count":3},{"had_liked":false,"id":89336,"user_name":"二师兄","can_delete":false,"product_type":"c1","uid":1027034,"ip_address":"","ucode":"679D497472F5D2","user_header":"https://static001.geekbang.org/account/avatar/00/0f/ab/da/ab32124c.jpg","comment_is_top":false,"comment_ctime":1556156110,"is_pvip":false,"replies":[{"id":"31995","content":"需求是因，规格是果","user_name":"作者回复","user_name_real":"许式伟-七牛云(已满)","uid":"1228022","ctime":1556165369,"ip_address":"","comment_id":89336,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10146090702","product_id":100025201,"comment_content":"需求是零部件功能，对应英语是requirement；规格是零部件之间连接规范？对应英语是specification？我总觉得两者有区别，但是又没有太大区别。感觉规格就是告诉别人怎么用，包含了功能吧。","like_count":2,"discussions":[{"author":{"id":1228022,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bc/f6/e61d4b8f.jpg","nickname":"许式伟-七牛云(已满)","note":"","ucode":"1A2F8AA6F6DB54","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":448094,"discussion_content":"需求是因，规格是果","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1556165369,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":89020,"user_name":"Jade","can_delete":false,"product_type":"c1","uid":1085638,"ip_address":"","ucode":"E07CCF10497AD3","user_header":"https://wx.qlogo.cn/mmopen/vi_32/icRpVCFkicVnBiatPIZy4uiaoiba8ZODxclF00R6Tphsn55kdMtBYJtialcokIu3f4qJzx7QQR98ibVH4ndZ48E2o9vRQ/132","comment_is_top":false,"comment_ctime":1556066561,"is_pvip":false,"replies":[{"id":"31866","content":"广义的计算包含有副作用的函数（有io的函数）。因为数据交换本身也是计算的需求，否则计算没有办法与现实世界相互作用。任何工具都需要解决现实问题才有用。计算器还有交互按钮呢，并不是只有纯正的计算。","user_name":"作者回复","user_name_real":"许式伟-七牛云(已满)","uid":"1228022","ctime":1556067626,"ip_address":"","comment_id":89020,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10146001153","product_id":100025201,"comment_content":"你可以发现，引入了输入输出设备的电脑，不再只能做狭义上的“计算”（也就是数学意义上的计算），如果我们把交互能力也看做一种计算能力的话，电脑理论上能够解决的“计算”问题变得无所不包。<br><br>交互能力也看做一种计算能力？这句话怎么理解呢？这种交互不就是输入和输出？哪有计算","like_count":2,"discussions":[{"author":{"id":1228022,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bc/f6/e61d4b8f.jpg","nickname":"许式伟-七牛云(已满)","note":"","ucode":"1A2F8AA6F6DB54","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":447984,"discussion_content":"广义的计算包含有副作用的函数（有io的函数）。因为数据交换本身也是计算的需求，否则计算没有办法与现实世界相互作用。任何工具都需要解决现实问题才有用。计算器还有交互按钮呢，并不是只有纯正的计算。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1556067626,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":88119,"user_name":"gebitang","can_delete":false,"product_type":"c1","uid":1006545,"ip_address":"","ucode":"E4DA6FCE19059E","user_header":"https://static001.geekbang.org/account/avatar/00/0f/5b/d1/99d8b8a6.jpg","comment_is_top":false,"comment_ctime":1555853867,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10145788459","product_id":100025201,"comment_content":"这篇见功力啊。分析架构的起源。从无到有，再到万物。","like_count":2},{"had_liked":false,"id":88040,"user_name":"许三七","can_delete":false,"product_type":"c1","uid":1275468,"ip_address":"","ucode":"A036D6932B876C","user_header":"https://static001.geekbang.org/account/avatar/00/13/76/4c/d588779d.jpg","comment_is_top":false,"comment_ctime":1555822374,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10145756966","product_id":100025201,"comment_content":"为什么冯诺依曼架构能解决一切可计算的问题，是不是从计算理论图灵机引入比较更深刻？","like_count":2},{"had_liked":false,"id":87998,"user_name":"刘为红","can_delete":false,"product_type":"c1","uid":1102333,"ip_address":"","ucode":"A7026457DF958D","user_header":"https://static001.geekbang.org/account/avatar/00/10/d1/fd/1cdfef42.jpg","comment_is_top":false,"comment_ctime":1555806321,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10145740913","product_id":100025201,"comment_content":"冯·诺依曼体系结构是对计算机计算需求完美的抽象，我们做架构时也需要根据需求，区分变化部分和不变部分，合理的抽象后，进行系统的划分和模块的划分，一切设计的目的都是为了应对变化，关键是如何做到不变应万变","like_count":2},{"had_liked":false,"id":87927,"user_name":"nil","can_delete":false,"product_type":"c1","uid":1507193,"ip_address":"","ucode":"0F5D298C1CBB74","user_header":"https://static001.geekbang.org/account/avatar/00/16/ff/79/3b38c9e1.jpg","comment_is_top":false,"comment_ctime":1555755526,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10145690118","product_id":100025201,"comment_content":"一语道破冯诺依曼体系架构的精髓，老师功底深厚，对知识认识的深刻让我佩服，好好向牛人学习！","like_count":2},{"had_liked":false,"id":87883,"user_name":"来碗绿豆汤","can_delete":false,"product_type":"c1","uid":1070051,"ip_address":"","ucode":"B0AB63B8D9729F","user_header":"https://static001.geekbang.org/account/avatar/00/10/53/e3/39dcfb11.jpg","comment_is_top":false,"comment_ctime":1555742691,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10145677283","product_id":100025201,"comment_content":"需求分析最重要的是抓住需求的稳定点和变化点；稳定点是项目的立项之本，变化点是应对未来新需求的，只有这样的系统才能经得住时间的考验","like_count":2},{"had_liked":false,"id":87845,"user_name":"探索无止境","can_delete":false,"product_type":"c1","uid":1044178,"ip_address":"","ucode":"91D2A9907DFA79","user_header":"https://static001.geekbang.org/account/avatar/00/0f/ee/d2/7024431c.jpg","comment_is_top":false,"comment_ctime":1555730855,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10145665447","product_id":100025201,"comment_content":"这会是一个非常优秀的专栏，思想有高度且关键是清晰，不会让人不明觉厉，作者的功力真的不是盖的，如果可以每周更新三篇就完美了。","like_count":2},{"had_liked":false,"id":87836,"user_name":"一路向北","can_delete":false,"product_type":"c1","uid":1017835,"ip_address":"","ucode":"DB0FF1C153C485","user_header":"https://static001.geekbang.org/account/avatar/00/0f/87/eb/20492a37.jpg","comment_is_top":false,"comment_ctime":1555727497,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10145662089","product_id":100025201,"comment_content":"从开始学计算机就知道冯诺依曼，但是这么重要性以及这么深刻的领会才第一次。需要迭代，顿悟！","like_count":2},{"had_liked":false,"id":87767,"user_name":"小先生","can_delete":false,"product_type":"c1","uid":1055214,"ip_address":"","ucode":"E5F2052E0323C0","user_header":"https://static001.geekbang.org/account/avatar/00/10/19/ee/e395a35e.jpg","comment_is_top":false,"comment_ctime":1555687578,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10145622170","product_id":100025201,"comment_content":"如何解剖架构？<br>分析其中的稳定点和变化点。<br>中央处理器功能稳定。<br><br>外部输入输出和计算能力。<br><br>目标实现能以计算解决问题的。","like_count":2},{"had_liked":false,"id":87703,"user_name":"SICUN","can_delete":false,"product_type":"c1","uid":1254261,"ip_address":"","ucode":"22A384904EB9E9","user_header":"https://static001.geekbang.org/account/avatar/00/13/23/75/2b599841.jpg","comment_is_top":false,"comment_ctime":1555664955,"is_pvip":false,"replies":[{"id":"31543","content":"嗯，这是江湖地位不一样，毕竟没有多少人有机会去做整个信息科技的设计师","user_name":"作者回复","user_name_real":"许式伟-七牛云(已满)","uid":"1228022","ctime":1555668982,"ip_address":"","comment_id":87703,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10145599547","product_id":100025201,"comment_content":"老师您好，请问对于本文中讲的对于需求来说 冯·诺依曼体系结构是为解决一切而生，和架构设计中对于需求来说预测什么不会发生，这两者从表面看是有冲突的，请问这块应该如何理解呢？ 还望解惑，谢谢","like_count":2,"discussions":[{"author":{"id":1228022,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bc/f6/e61d4b8f.jpg","nickname":"许式伟-七牛云(已满)","note":"","ucode":"1A2F8AA6F6DB54","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":447570,"discussion_content":"嗯，这是江湖地位不一样，毕竟没有多少人有机会去做整个信息科技的设计师","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1555668982,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":87660,"user_name":"honnkyou","can_delete":false,"product_type":"c1","uid":1026608,"ip_address":"","ucode":"FD5EC4120EE803","user_header":"https://static001.geekbang.org/account/avatar/00/0f/aa/30/acc91f01.jpg","comment_is_top":false,"comment_ctime":1555653335,"is_pvip":false,"replies":[{"id":"31526","content":"是使用该设备的程序。这个程序可以自己直接操作设备端口（但是实际很少这么做），也可以调用设备驱动程序提供的包装的函数（我们不必关注是谁提供最这个函数）。","user_name":"作者回复","user_name_real":"许式伟-七牛云(已满)","uid":"1228022","ctime":1555655749,"ip_address":"","comment_id":87660,"utype":1}],"discussion_count":2,"race_medal":0,"score":"10145587927","product_id":100025201,"comment_content":"设备数据交换的发起方（设备使用方）通常理解并可以解释所接收的数据含义。<br>这句中的设备发起方值的是什么呢？是调用设备的函数，还是其他什么？<br>","like_count":2,"discussions":[{"author":{"id":1228022,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bc/f6/e61d4b8f.jpg","nickname":"许式伟-七牛云(已满)","note":"","ucode":"1A2F8AA6F6DB54","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":447553,"discussion_content":"是使用该设备的程序。这个程序可以自己直接操作设备端口（但是实际很少这么做），也可以调用设备驱动程序提供的包装的函数（我们不必关注是谁提供最这个函数）。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1555655749,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1248472,"avatar":"https://wx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTK8o3aJz4NdqOCWvTjIPGmRWHt5xicwKGGGRd5icCoiauvvtnEtST0ljsuM23wiaYbZLknASvXmmqfg1w/132","nickname":"茅延安","note":"","ucode":"317626CFFBC81C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":27694,"discussion_content":"比如游戏调用显卡驱动？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1570674762,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":87567,"user_name":"javaadu","can_delete":false,"product_type":"c1","uid":1000519,"ip_address":"","ucode":"8C0B140F1C8992","user_header":"https://static001.geekbang.org/account/avatar/00/0f/44/47/3ddb94d0.jpg","comment_is_top":false,"comment_ctime":1555636030,"is_pvip":true,"replies":[{"id":"31506","content":"讲架构就不谈不影响架构理解的细节了。对于第二个问题，我个人没有把握，文中表达的不完全是我自己个人的看法。","user_name":"作者回复","user_name_real":"许式伟-七牛云(已满)","uid":"1228022","ctime":1555646314,"ip_address":"","comment_id":87567,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10145570622","product_id":100025201,"comment_content":"没有讲到与非门，略遗憾；<br>计算机有其极限，进化为超智能生物不太可能","like_count":2,"discussions":[{"author":{"id":1228022,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bc/f6/e61d4b8f.jpg","nickname":"许式伟-七牛云(已满)","note":"","ucode":"1A2F8AA6F6DB54","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":447510,"discussion_content":"讲架构就不谈不影响架构理解的细节了。对于第二个问题，我个人没有把握，文中表达的不完全是我自己个人的看法。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1555646314,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":87510,"user_name":"Aaron Cheung","can_delete":false,"product_type":"c1","uid":1079816,"ip_address":"","ucode":"03972759C53667","user_header":"https://static001.geekbang.org/account/avatar/00/10/7a/08/4d3e47dd.jpg","comment_is_top":false,"comment_ctime":1555630557,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10145565149","product_id":100025201,"comment_content":"打卡 02","like_count":2},{"had_liked":false,"id":87508,"user_name":"seven","can_delete":false,"product_type":"c1","uid":1497664,"ip_address":"","ucode":"C56B6C5B49F92B","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eormD148QmKBDmkkDxeiabyttI4SWODqWXdWNt1U9tsiclNdOxMzIzNjr6a3BorakJAmVo5gUb4icrmg/132","comment_is_top":false,"comment_ctime":1555630470,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10145565062","product_id":100025201,"comment_content":"打卡","like_count":2},{"had_liked":false,"id":104252,"user_name":"Winqandy","can_delete":false,"product_type":"c1","uid":1442117,"ip_address":"","ucode":"579DDD6027A577","user_header":"https://static001.geekbang.org/account/avatar/00/16/01/45/a4e39d67.jpg","comment_is_top":false,"comment_ctime":1560698292,"is_pvip":false,"replies":[{"id":"37776","content":"你这个业务主要在解决什么问题？这个问题应该是最稳定的，否则相当于你们没有一个要解决的核心问题。","user_name":"作者回复","user_name_real":"许式伟-七牛云(已满)","uid":"1228022","ctime":1560735518,"ip_address":"","comment_id":104252,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5855665588","product_id":100025201,"comment_content":"老师，请问一个问题，如何抓住业务需求的稳定点呢，业务需求不是经常变化的吗？","like_count":2,"discussions":[{"author":{"id":1228022,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bc/f6/e61d4b8f.jpg","nickname":"许式伟-七牛云(已满)","note":"","ucode":"1A2F8AA6F6DB54","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":454188,"discussion_content":"你这个业务主要在解决什么问题？这个问题应该是最稳定的，否则相当于你们没有一个要解决的核心问题。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1560735518,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":98007,"user_name":"xiaobang","can_delete":false,"product_type":"c1","uid":1157508,"ip_address":"","ucode":"1735BDCFD61655","user_header":"https://static001.geekbang.org/account/avatar/00/11/a9/84/c87b51ce.jpg","comment_is_top":false,"comment_ctime":1558870661,"is_pvip":false,"replies":[{"id":"35067","content":"这还真不知道","user_name":"作者回复","user_name_real":"许式伟-七牛云(已满)","uid":"1228022","ctime":1558880672,"ip_address":"","comment_id":98007,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5853837957","product_id":100025201,"comment_content":"冯.诺伊曼体系是设计时就奔满足一切计算这个目标去的，还是设计完才发现满足一切计算的目标？<br>另外，冯.诺伊曼体系是受图灵机模型启发做出来的吗","like_count":1,"discussions":[{"author":{"id":1228022,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bc/f6/e61d4b8f.jpg","nickname":"许式伟-七牛云(已满)","note":"","ucode":"1A2F8AA6F6DB54","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":451510,"discussion_content":"这还真不知道","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1558880672,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":89821,"user_name":"有风的林子","can_delete":false,"product_type":"c1","uid":1073748,"ip_address":"","ucode":"134BF057F13D1C","user_header":"https://static001.geekbang.org/account/avatar/00/10/62/54/cd487e91.jpg","comment_is_top":false,"comment_ctime":1556272824,"is_pvip":false,"replies":[{"id":"32194","content":"欢迎一起搞起","user_name":"作者回复","user_name_real":"许式伟-七牛云(已满)","uid":"1228022","ctime":1556291729,"ip_address":"","comment_id":89821,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5851240120","product_id":100025201,"comment_content":"&gt; 尝试用 Go 语言模拟来实现冯·诺依曼架构体系的电脑。<br>貌似很有意思的一个想法。","like_count":1,"discussions":[{"author":{"id":1228022,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bc/f6/e61d4b8f.jpg","nickname":"许式伟-七牛云(已满)","note":"","ucode":"1A2F8AA6F6DB54","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":448272,"discussion_content":"欢迎一起搞起","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1556291729,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":88492,"user_name":"William","can_delete":false,"product_type":"c1","uid":1241365,"ip_address":"","ucode":"4499F99B180102","user_header":"https://static001.geekbang.org/account/avatar/00/12/f1/15/8fcf8038.jpg","comment_is_top":false,"comment_ctime":1555928335,"is_pvip":true,"discussion_count":0,"race_medal":2,"score":"5850895631","product_id":100025201,"comment_content":"大道至简。需求分析抓住需求的稳定点和变化点，精彩至极，期待后面的内容！","like_count":1},{"had_liked":false,"id":87976,"user_name":"Yayu","can_delete":false,"product_type":"c1","uid":1058015,"ip_address":"","ucode":"5E7842458D8229","user_header":"https://static001.geekbang.org/account/avatar/00/10/24/df/645f8087.jpg","comment_is_top":false,"comment_ctime":1555775038,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5850742334","product_id":100025201,"comment_content":"本节最大收获——如何条理分明得对一个复杂系统抽丝剥茧。<br>架构设计的第一步是需求分析，需求分析主要去分析落实需求中的稳定点（系统的核心价值点）和变化点（需要开发性设计）。有了这些需求，才会设计各个零部件去构建一个可以充分实现需求的架构系统。<br>面对整个系统中的各个零部件，也可以从需求和规格两方面去分析。其中“规格是连接需求的抽象”总结的真是精简到位，充分表达了接口、协议等功能地位。<br>","like_count":1},{"had_liked":false,"id":87937,"user_name":"ljinshuan","can_delete":false,"product_type":"c1","uid":1353103,"ip_address":"","ucode":"9C2B65CFDCF1E0","user_header":"https://static001.geekbang.org/account/avatar/00/14/a5/8f/23e9c701.jpg","comment_is_top":false,"comment_ctime":1555760371,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"5850727667","product_id":100025201,"comment_content":"写得真好，冯诺依曼体系这个例子非常恰当。听完一下子就理解了架构设计的一个核心理念：模块化，职责明确。<br><br>","like_count":1},{"had_liked":false,"id":87923,"user_name":"易林林","can_delete":false,"product_type":"c1","uid":1049836,"ip_address":"","ucode":"27F84A3FCBBCAD","user_header":"https://static001.geekbang.org/account/avatar/00/10/04/ec/0539c89d.jpg","comment_is_top":false,"comment_ctime":1555754550,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5850721846","product_id":100025201,"comment_content":"软件开发多年，发现重点不是学会了多少技能，而是掌握了多少基础核心的理论并能融会贯通的实践才是重点。看了许老师的这篇文章，真正让人感受到了什么是大道至简，并且有种返璞归真的感觉。","like_count":1},{"had_liked":false,"id":87748,"user_name":"yixiaojxx","can_delete":false,"product_type":"c1","uid":1504599,"ip_address":"","ucode":"D5DB810A85DA6B","user_header":"","comment_is_top":false,"comment_ctime":1555678804,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5850646100","product_id":100025201,"comment_content":"本来只想着如何设计自己的项目架构的，没想到还有这么深的基础知识没掌握，继续努力！！","like_count":1},{"had_liked":false,"id":87745,"user_name":"程序员小跃","can_delete":false,"product_type":"c1","uid":1015483,"ip_address":"","ucode":"25BB96E0791A60","user_header":"https://static001.geekbang.org/account/avatar/00/0f/7e/bb/947c329a.jpg","comment_is_top":false,"comment_ctime":1555678061,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"5850645357","product_id":100025201,"comment_content":"自认为计算机理论啥的学过，应该能懂一点计算机的知识。结果这个冯·诺依曼体系结构就把我震撼了，我还是没学好计算机啊，哈哈","like_count":1},{"had_liked":false,"id":87727,"user_name":"胡鹏","can_delete":false,"product_type":"c1","uid":1326455,"ip_address":"","ucode":"52644EC57FA4DB","user_header":"https://static001.geekbang.org/account/avatar/00/14/3d/77/45e5e06d.jpg","comment_is_top":false,"comment_ctime":1555673000,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5850640296","product_id":100025201,"comment_content":"今日get: 冯诺依曼体系架构，解决一切可以通过计算解决的问题","like_count":1},{"had_liked":false,"id":87711,"user_name":"AlfredLover","can_delete":false,"product_type":"c1","uid":1042354,"ip_address":"","ucode":"A3A998F362CC37","user_header":"https://static001.geekbang.org/account/avatar/00/0f/e7/b2/334bc992.jpg","comment_is_top":false,"comment_ctime":1555666886,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"5850634182","product_id":100025201,"comment_content":"计算机只能做三件事：输入、计算、输出。<br>程序=指令+数据","like_count":1},{"had_liked":false,"id":87671,"user_name":"Delia","can_delete":false,"product_type":"c1","uid":1442969,"ip_address":"","ucode":"C8AB6171FBC3B5","user_header":"https://static001.geekbang.org/account/avatar/00/16/04/99/2d804b8d.jpg","comment_is_top":false,"comment_ctime":1555656828,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5850624124","product_id":100025201,"comment_content":"由抽象到具体，由基础到专业，期待后续的课程。","like_count":1},{"had_liked":false,"id":87669,"user_name":"吴小智","can_delete":false,"product_type":"c1","uid":1310798,"ip_address":"","ucode":"C7C9F58B5C9F7B","user_header":"https://static001.geekbang.org/account/avatar/00/14/00/4e/be2b206b.jpg","comment_is_top":false,"comment_ctime":1555656584,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5850623880","product_id":100025201,"comment_content":"老师的段位，吾等望尘莫及啊，举例太深刻了，赞，值了","like_count":1},{"had_liked":false,"id":87668,"user_name":"刘鑫","can_delete":false,"product_type":"c1","uid":1498168,"ip_address":"","ucode":"E68F4055841876","user_header":"https://static001.geekbang.org/account/avatar/00/16/dc/38/b06b5e00.jpg","comment_is_top":false,"comment_ctime":1555656548,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5850623844","product_id":100025201,"comment_content":"感想：这一课虽然没学到新的知识，但是许老师以架构师的视角，重新审视冯.诺依曼体系，并且能够跨学科地阐述，看得出作者深厚的计算机功底和多年的思考。对我来说最大的收获把抽象的体系表达的简洁，易懂，值得学习！","like_count":1},{"had_liked":false,"id":87585,"user_name":"觉","can_delete":false,"product_type":"c1","uid":1503600,"ip_address":"","ucode":"95E85D30E92170","user_header":"https://static001.geekbang.org/account/avatar/00/16/f1/70/bca09d2d.jpg","comment_is_top":false,"comment_ctime":1555638395,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5850605691","product_id":100025201,"comment_content":"感恩大佬分享 随喜大佬","like_count":1},{"had_liked":false,"id":87550,"user_name":"Hurt","can_delete":false,"product_type":"c1","uid":1050946,"ip_address":"","ucode":"DCE7428CCF08EF","user_header":"https://static001.geekbang.org/account/avatar/00/10/09/42/1f762b72.jpg","comment_is_top":false,"comment_ctime":1555634478,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5850601774","product_id":100025201,"comment_content":"打卡3","like_count":1},{"had_liked":false,"id":87514,"user_name":"陈光","can_delete":false,"product_type":"c1","uid":1007685,"ip_address":"","ucode":"48FD5FBD0F6319","user_header":"https://static001.geekbang.org/account/avatar/00/0f/60/45/c6302327.jpg","comment_is_top":false,"comment_ctime":1555631126,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5850598422","product_id":100025201,"comment_content":"上微机原理课时还讲过一个哈佛体系结构，它本质上是不是还是冯 诺依曼体系结构？","like_count":1},{"had_liked":false,"id":352159,"user_name":"松鼠君","can_delete":false,"product_type":"c1","uid":1135269,"ip_address":"","ucode":"F39C661B685E75","user_header":"https://static001.geekbang.org/account/avatar/00/11/52/a5/d4c6e23d.jpg","comment_is_top":false,"comment_ctime":1658412416,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1658412416","product_id":100025201,"comment_content":"冯诺依曼体系的本质是一个函数。","like_count":0},{"had_liked":false,"id":350068,"user_name":"知行合一","can_delete":false,"product_type":"c1","uid":1090784,"ip_address":"","ucode":"563C4A71D80DA1","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJwQvLGE4dMsF4JU0svW3DtGbodpjskbY65FdwF13JdtBYZfgL2IXHlHrdejWzHdjT0RibEIfib4QYA/132","comment_is_top":false,"comment_ctime":1656553353,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1656553353","product_id":100025201,"comment_content":"写的真好啊","like_count":0},{"had_liked":false,"id":336513,"user_name":"Peter Yu","can_delete":false,"product_type":"c1","uid":1077598,"ip_address":"","ucode":"D56786A6E85321","user_header":"https://static001.geekbang.org/account/avatar/00/10/71/5e/5393a76d.jpg","comment_is_top":false,"comment_ctime":1646196793,"is_pvip":true,"replies":[{"id":"122990","content":"👍","user_name":"作者回复","user_name_real":"编辑","uid":"1228022","ctime":1646206461,"ip_address":"","comment_id":336513,"utype":1}],"discussion_count":1,"race_medal":4,"score":"1646196793","product_id":100025201,"comment_content":"今日课堂心得：<br>做好架构，关键要识别【不变】和【可变】的部分，【不变】的部分作为基础内核来设计，【可变】的部分要做好可扩展的方案","like_count":0,"discussions":[{"author":{"id":1228022,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bc/f6/e61d4b8f.jpg","nickname":"许式伟-七牛云(已满)","note":"","ucode":"1A2F8AA6F6DB54","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":554077,"discussion_content":"👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1646206462,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":318121,"user_name":"escray","can_delete":false,"product_type":"c1","uid":1020525,"ip_address":"","ucode":"1F4204930E47C4","user_header":"https://static001.geekbang.org/account/avatar/00/0f/92/6d/becd841a.jpg","comment_is_top":false,"comment_ctime":1635155956,"is_pvip":true,"discussion_count":0,"race_medal":2,"score":"1635155956","product_id":100025201,"comment_content":"也写过一些需求规格说明书，但是没怎么想过要把需求和规格分别来看，一般来说需求讲得多一些，但是规格就不那么重视了。<br><br>冯诺依曼体系结构的需求是解决一切可以用计算解决的问题，规格是输入、输出、存储，数据交换设计的数据格式由设备定义。<br><br>中央处理器和存储，可以支持任意复杂的计算；输入输出设备解决了交互问题，并且提升了所能处理的数据体量。<br><br>电脑稳定的计算能力，体现为中央处理器的指令集，最终落实到“加法器”？启动程序也是相对稳定的，变化的部分体现在对于输入数据的处理，以及多样化的输出形式。<br><br>看了一眼 github 上的 von 代码，几乎看不太懂，不过估计多看几遍就好了。","like_count":0},{"had_liked":false,"id":307959,"user_name":"Victor","can_delete":false,"product_type":"c1","uid":1112292,"ip_address":"","ucode":"B36A1C55456F33","user_header":"https://static001.geekbang.org/account/avatar/00/10/f8/e4/611f0cd8.jpg","comment_is_top":false,"comment_ctime":1629339085,"is_pvip":false,"replies":[{"id":"111571","content":"👍","user_name":"作者回复","user_name_real":"许式伟-七牛云(已满)","uid":"1228022","ctime":1629413371,"ip_address":"","comment_id":307959,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1629339085","product_id":100025201,"comment_content":"架构的第一步是需求分析， 关键是捉住稳定点和变化点，类似于“开闭原则”：对修改关闭，就是设计稳定的模型，对拓展开放，就是要设计易于拓展的规格接口。","like_count":0,"discussions":[{"author":{"id":1228022,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bc/f6/e61d4b8f.jpg","nickname":"许式伟-七牛云(已满)","note":"","ucode":"1A2F8AA6F6DB54","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":525351,"discussion_content":"👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1629413371,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":303779,"user_name":"南北","can_delete":false,"product_type":"c1","uid":2407719,"ip_address":"","ucode":"34288BDEF9D74D","user_header":"https://static001.geekbang.org/account/avatar/00/24/bd/27/3f349c83.jpg","comment_is_top":false,"comment_ctime":1626999608,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1626999608","product_id":100025201,"comment_content":"区分需求的稳定点和变化点，基于稳定点设计基础架构，保证架构色稳定，针对变化点进行设计，保证架构的开放性。","like_count":0},{"had_liked":false,"id":288677,"user_name":"酸辣土豆丝","can_delete":false,"product_type":"c1","uid":1751234,"ip_address":"","ucode":"0E3E4AFB31E1E6","user_header":"https://static001.geekbang.org/account/avatar/00/1a/b8/c2/d1904d74.jpg","comment_is_top":false,"comment_ctime":1618623225,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1618623225","product_id":100025201,"comment_content":"需求分析一直是正的分析，能够做什么，以后要想着对立面，不能做什么。需求分析分成两部分一部分是稳定，不变化的部分，另一部分是变化的，不稳定的部分","like_count":0},{"had_liked":false,"id":284868,"user_name":"睡懒觉的薛定谔","can_delete":false,"product_type":"c1","uid":1402845,"ip_address":"","ucode":"1B02DA8DA3AF56","user_header":"https://static001.geekbang.org/account/avatar/00/15/67/dd/9e295be0.jpg","comment_is_top":false,"comment_ctime":1616503881,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1616503881","product_id":100025201,"comment_content":"这章听了4分钟，有点想法就赶快发出来了。<br><br>记得在《量子物理史话》中曾经写到，晚年的爱因斯坦一直致力于找到一种终极理论，可以解释一切物理现象。但最终，没有成功。<br><br>而冯诺依曼的伟大之处在于，他在最开始的时候，就为计算机做出了做优雅的抽象，后来者只需要现在他的肩膀上，就可以看到无尽的海洋。","like_count":0},{"had_liked":false,"id":284784,"user_name":"大博哥","can_delete":false,"product_type":"c1","uid":1779439,"ip_address":"","ucode":"779BCC82BA094F","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eoa8DU2icq1cNZTiaLm12G9nibaHDewH36NEQLyKiblZFwia7yLFdLlOFU8C85tVuBHhibKPjMRBLAeF5KA/132","comment_is_top":false,"comment_ctime":1616470518,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1616470518","product_id":100025201,"comment_content":"通勤路上听了一两次，有些内容始终无法理解。今天对照文稿通读了一次，才发现许大师的整体结构脉络，通篇看完，算是抓住了本节课的精髓：稳定点和变化点的识别和设计。","like_count":0},{"had_liked":false,"id":284389,"user_name":"不温暖啊不纯良","can_delete":false,"product_type":"c1","uid":2079117,"ip_address":"","ucode":"204474A214E00C","user_header":"https://static001.geekbang.org/account/avatar/00/1f/b9/8d/00bded19.jpg","comment_is_top":false,"comment_ctime":1616224219,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1616224219","product_id":100025201,"comment_content":"用人体架构，来类比计算机基础架构真是恰到好处。我甚至会相信冯诺伊曼，在设计计算机基础架构的时候就是参考了人体结构的设计。于是我就想，在整个计算机的发展史中，难道就没有其他架构的计算机发明吗？为什么最后是冯诺依曼的计算机架构统治了信息世界？<br><br>记得之前听过一个进化史上的猜想，说长颈鹿的脖子为什么会那么长呢？原因是因为基因突变，可能长颈鹿，在基因突变之前脖子很短，但是随着环境的变迁，地上的食物越来越少，后来那些脖子没变长的长颈鹿就都被饿死了，但脖子变长的长颈鹿因为可以够得上高处的食物就活了下来，于是他们的后代也就变成了长脖子的长颈鹿，物竞天择，适者生存。<br><br>这不禁让我思考，只有那些适应性特别强的设计才能够活得长久，时代在变，人类的需求也在变，但计算机依然不过时，因为计算机的基础架构是和人一样的基础架构，只有人，才能够和人一样与时俱进，只有人才能满足人的需求。<br><br>虽然跟着老师的讲解能够理解这些优秀设计由什么组成？为什么优秀？但如果让自我面对这样一个问题时，虽然可能能够按照这种设计思路，照猫画虎的设计一番，但换一个需求就不行了，比如解决一切能用货币解决的问题？一下子就没思路了。","like_count":0},{"had_liked":false,"id":283917,"user_name":"tom","can_delete":false,"product_type":"c1","uid":1352891,"ip_address":"","ucode":"B5CA5BA5ED49FF","user_header":"https://static001.geekbang.org/account/avatar/00/14/a4/bb/dc8e1d69.jpg","comment_is_top":false,"comment_ctime":1615983592,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1615983592","product_id":100025201,"comment_content":"一生二 二生三 三生万物","like_count":0},{"had_liked":false,"id":281672,"user_name":"Geek_e8d915","can_delete":false,"product_type":"c1","uid":1619408,"ip_address":"","ucode":"C75F74F03968F9","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eobMqRRhZp4awpvWJFj4ePk9H2P0NicDnuZ1vKcQCS1VQqtbwxt2UN8icUuXwVVBbicD7726UfwrU3pQ/132","comment_is_top":false,"comment_ctime":1614845237,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1614845237","product_id":100025201,"comment_content":"大道至简！<br>突然从这个结构想到了linux内核的设计！一个思路一脉相承","like_count":0},{"had_liked":false,"id":276468,"user_name":"谢小路","can_delete":false,"product_type":"c1","uid":1035064,"ip_address":"","ucode":"C9FE2EB10DC105","user_header":"https://static001.geekbang.org/account/avatar/00/0f/cb/38/4c9cfdf4.jpg","comment_is_top":false,"comment_ctime":1611941336,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1611941336","product_id":100025201,"comment_content":"做通用型的方案还是很难的，要有非常抽象的思维。大部分实际工作的程序员是解决具体需求，实现的需求都是属于架构中变化的部分。而整体架构，分层，轻易是不会变的。","like_count":0},{"had_liked":false,"id":274469,"user_name":"201201255","can_delete":false,"product_type":"c1","uid":1989883,"ip_address":"","ucode":"04EB224B2DB692","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/LtHjTGlnOMYwm7C1LZEIWpvys5ya8rwYnBqegs9ibdKiciavnCXwqCzatg9RKzDY2qcDjnVqbk6mfR36ROAwY54fg/132","comment_is_top":false,"comment_ctime":1611030663,"is_pvip":false,"replies":[{"id":"99630","content":"存储是很特殊的io设备","user_name":"作者回复","user_name_real":"许式伟-七牛云(已满)","uid":"1228022","ctime":1611049934,"ip_address":"","comment_id":274469,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1611030663","product_id":100025201,"comment_content":"如果把存储也看成输入输出，是不是冯的结构就只有计算和IO了呢？","like_count":0,"discussions":[{"author":{"id":1228022,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bc/f6/e61d4b8f.jpg","nickname":"许式伟-七牛云(已满)","note":"","ucode":"1A2F8AA6F6DB54","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":514026,"discussion_content":"存储是很特殊的io设备","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1611049934,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":245652,"user_name":"张浩_house","can_delete":false,"product_type":"c1","uid":1021258,"ip_address":"","ucode":"B733234B133607","user_header":"https://static001.geekbang.org/account/avatar/00/0f/95/4a/a145c675.jpg","comment_is_top":false,"comment_ctime":1599016651,"is_pvip":false,"replies":[{"id":"90369","content":"算力调度基本上会统一到k8s","user_name":"作者回复","user_name_real":"许式伟-七牛云(已满)","uid":"1228022","ctime":1599054895,"ip_address":"","comment_id":245652,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1599016651","product_id":100025201,"comment_content":"大数据、机器学习领域有许多调度相关的：Yarn调度、Spark的调度、Mesos调度、k8s调度、Tensorflow调度、还有许多针对这些框架开发的统一通用的调度，是不是可以抽象出一个核心的稳定的调度架构设计，去针对不同的场景保持开放性设计。","like_count":0,"discussions":[{"author":{"id":1228022,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bc/f6/e61d4b8f.jpg","nickname":"许式伟-七牛云(已满)","note":"","ucode":"1A2F8AA6F6DB54","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":504943,"discussion_content":"算力调度基本上会统一到k8s","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1599054895,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":233737,"user_name":"junyou","can_delete":false,"product_type":"c1","uid":1711365,"ip_address":"","ucode":"2496E93AA43BFD","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/KhQRc8hIxHHyPV3Og2Fc5u2TBxvRelcAiagFZL1eAaJN6wvtAeVAqp7d9WpuSg540P2gBZ7xKABbVZqSicKOvT2Q/132","comment_is_top":false,"comment_ctime":1594428987,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1594428987","product_id":100025201,"comment_content":"笔记：稳定点和变化点还是考验对需求的理解，还有遵从单一职责准则。感概计算机真的是个伟大的发明，彻底帮人类解决了计算这个问题","like_count":0},{"had_liked":false,"id":231046,"user_name":"铁血骑士","can_delete":false,"product_type":"c1","uid":1126938,"ip_address":"","ucode":"490EC62B9ADABF","user_header":"https://static001.geekbang.org/account/avatar/00/11/32/1a/78fce652.jpg","comment_is_top":false,"comment_ctime":1593571329,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1593571329","product_id":100025201,"comment_content":"架构的第一步，需求分析，找到需求的稳定点与变化点。<br>稳定点：系统的核心价值点。<br>变化点：开放性设计。<br>对于电脑产品而言，解决一切用“计算”来解决的问题，<br>稳定点：计算能力<br>变化点：计算和交互多样性。<br>计算多样性：计算机主板启动程序(BIOS)，外置操作系统启动程序。<br>交互多样性：定义数据交换协议。","like_count":0},{"had_liked":false,"id":213858,"user_name":"亢（知行合一的路上）","can_delete":false,"product_type":"c1","uid":1347013,"ip_address":"","ucode":"958AF7C96EB9E8","user_header":"https://static001.geekbang.org/account/avatar/00/14/8d/c5/898b13b4.jpg","comment_is_top":false,"comment_ctime":1588578537,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1588578537","product_id":100025201,"comment_content":"老师通过介绍冯·诺依曼解决一切计算需求的方式，让我对需求的稳定点和变化点有了进一步的认识。<br>我们作为个体，也要有自己的核心价值，可以稳定地向外界输出价值，自己不擅长的，通过接口调用外部的服务。","like_count":0},{"had_liked":false,"id":213533,"user_name":"吕大山","can_delete":false,"product_type":"c1","uid":1990779,"ip_address":"","ucode":"A33499AF921939","user_header":"","comment_is_top":false,"comment_ctime":1588466856,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1588466856","product_id":100025201,"comment_content":"为什么我脑子里总会产生那种，计算机的交互仅仅只是一种行为模式的信号输入输出，而像人这种智能体的更为复杂一些，我知道对此的理解不正确，但是直觉总是让我去这么理解，不知道您能不能理解我的感受","like_count":0},{"had_liked":false,"id":208520,"user_name":"88591","can_delete":false,"product_type":"c1","uid":1254656,"ip_address":"","ucode":"04CE3E46455185","user_header":"https://static001.geekbang.org/account/avatar/00/13/25/00/3afbab43.jpg","comment_is_top":false,"comment_ctime":1587375088,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1587375088","product_id":100025201,"comment_content":"从另一种高度来理解计算机，最终的结果是很简单，但是这个过程是很难的。比如怎么确定稳定因素，怎么提取共性，怎么确定最小组件，怎么提供扩展性。老师讲的很棒，开阔了思维与视野。","like_count":0},{"had_liked":false,"id":202641,"user_name":"IV0id","can_delete":false,"product_type":"c1","uid":1042717,"ip_address":"","ucode":"32C200B62B83EF","user_header":"https://static001.geekbang.org/account/avatar/00/0f/e9/1d/102caf26.jpg","comment_is_top":false,"comment_ctime":1586022377,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1586022377","product_id":100025201,"comment_content":"冯诺依曼体系结构架构设计<br>需求：解决一切可以用“计算”来解决的问题<br>需求稳定点：计算能力<br>需求变化点：1）计算需求多样性大；2）用户交互形式多样性大<br>解决方法：将核心计算能力剥离出来，采用中央处理器实现，中央处理器对外暴露的明接口有2个：同存储器的交互接口和同IO设备的交互接口；计算需求多样性由用户依据中央处理器指令集的能力自行撰写指令段实现，由存储器负责保存，通过同中央处理器设定的交互接口实现多样性指令段；用户交互形式多样性由各种IO外设提供，各IO外设通过中央处理器暴露的接口同中央处理器进行交互","like_count":0},{"had_liked":false,"id":200920,"user_name":"小熊","can_delete":false,"product_type":"c1","uid":1634686,"ip_address":"","ucode":"9E4CD1DA292076","user_header":"https://static001.geekbang.org/account/avatar/00/18/f1/7e/8925aba5.jpg","comment_is_top":false,"comment_ctime":1585674371,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1585674371","product_id":100025201,"comment_content":"学习打卡","like_count":0},{"had_liked":false,"id":199038,"user_name":"獨自去遠方","can_delete":false,"product_type":"c1","uid":1503941,"ip_address":"","ucode":"E246B33F397441","user_header":"https://static001.geekbang.org/account/avatar/00/16/f2/c5/2a441c27.jpg","comment_is_top":false,"comment_ctime":1585477324,"is_pvip":false,"replies":[{"id":"74768","content":"👍","user_name":"作者回复","user_name_real":"许式伟-七牛云(已满)","uid":"1228022","ctime":1585496623,"ip_address":"","comment_id":199038,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1585477324","product_id":100025201,"comment_content":"剖析架构的关键点<br>\t需求<br>\t\t作用<br>\t\t做什么<br>\t\t不做什么\t\t<br>\t规格<br>\t\t接口为了做什么<br>\t\t接口通过什么方式连接<br>为了解决一切问题<br>\t信息科技世界：个体、族群、生态--全新世界<br>\t通过计算来解决所有问题--》目标<br>\t\t计算的边界<br><br>冯诺依曼规格<br>\t中央处理器<br>\t\t支持的指令分类<br>\t\t\t计算类<br>\t\t\tIO类<br>\t\t\t指令跳转类<br>\t\t接收数据和指令进行计算<br>\t\t\t数据和指令存放在储存中<br>\t存储：中央处理器内置支持的储存（感觉应该是寄存器）<br>\t输入输出: 扩展了计算机的能力<br>\t\t计算结果可以作为另一个结构的输入<br>\t\t结构体可以通过输入输出进行连接<br>\t\t驱动程序<br>\t\t\t数据格式由外部设备定义，设备使用方可以解释做所接受的数据通过驱动程序<br><br>如何满足需求<br>\t？设计一个电脑，目标：解决一切可以用计算来解决的问题<br><br>\t分析<br>\t\t需求的变化点<br>\t\t\t要解决的问题非常广泛，需要稳定可扩展的架构<br>\t\t\t\t规格设置<br>\t\t\t\t\tcpu、储存<br>\t\t\t\t输出输出 进行扩展<br><br>\t\t\t核心能力是计算，如何表达计算<br>\t\t\t\t函数<br><br>架构思维<br>\t1.需求分析<br>\t\t稳定点（系统的核心价值点）、变化点（开放性设计）<br>\t计算机启动过程<br>\t\t处理器从一个固定存储地址（主板ROM BIOS）运行启动程序：包含内容<br>\t\t\t存储设备驱动：硬盘等<br>\t\t\t基础外部设备：鼠标等<br>\t\t\t执行权转移到外部设备，从外部设备启动操作系统","like_count":0,"discussions":[{"author":{"id":1228022,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bc/f6/e61d4b8f.jpg","nickname":"许式伟-七牛云(已满)","note":"","ucode":"1A2F8AA6F6DB54","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":489784,"discussion_content":"👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585496623,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":193925,"user_name":"活水","can_delete":false,"product_type":"c1","uid":1154935,"ip_address":"","ucode":"8A93734B62AF04","user_header":"https://static001.geekbang.org/account/avatar/00/11/9f/77/3a8fb89f.jpg","comment_is_top":false,"comment_ctime":1584983633,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1584983633","product_id":100025201,"comment_content":"降维与升维的观点，看到的东西就和以前不一样了。","like_count":0},{"had_liked":false,"id":193425,"user_name":"shiziwen","can_delete":false,"product_type":"c1","uid":1016917,"ip_address":"","ucode":"ADADC770D82D66","user_header":"https://static001.geekbang.org/account/avatar/00/0f/84/55/1e40bd61.jpg","comment_is_top":false,"comment_ctime":1584892466,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1584892466","product_id":100025201,"comment_content":"讲得很基础，跟我预想的架构师的知识体系有些不同，期待学完课程后，有不一样的收获","like_count":0},{"had_liked":false,"id":188594,"user_name":"KiSoo","can_delete":false,"product_type":"c1","uid":1692371,"ip_address":"","ucode":"7CE57DB7550BC1","user_header":"https://static001.geekbang.org/account/avatar/00/19/d2/d3/d5f64b56.jpg","comment_is_top":false,"comment_ctime":1584372873,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1584372873","product_id":100025201,"comment_content":"驱动由设备的厂商提供。这个可以类比为 Framework与业务模块进行通信时，数据格式&#47;通信方案由业务模块提供。","like_count":0},{"had_liked":false,"id":175849,"user_name":"Jack","can_delete":false,"product_type":"c1","uid":1062530,"ip_address":"","ucode":"E2D6427C2E65B6","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/1dqCdNfN3fwbWl9JGEiamPW2Nqy53msKRZQRASEszfdsYEgbGwSVJy2S6EhJbmH5htbuwWZUYuicskRM7Jw2ibiaUA/132","comment_is_top":false,"comment_ctime":1580869770,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1580869770","product_id":100025201,"comment_content":"有输入必有输出，不然就是没用的功能，分析需求的时候，可以类似的倒推，需求真正的来源和原貌","like_count":0},{"had_liked":false,"id":175307,"user_name":"幻灰龙","can_delete":false,"product_type":"c1","uid":1046202,"ip_address":"","ucode":"AFEDCC997C2FF6","user_header":"https://static001.geekbang.org/account/avatar/00/0f/f6/ba/09ab72d2.jpg","comment_is_top":false,"comment_ctime":1580649636,"is_pvip":false,"replies":[{"id":"68176","content":"我觉得大方向应该是明确的。细节的规格经过几年迭代后稳定下来。","user_name":"作者回复","user_name_real":"许式伟-七牛云(已满)","uid":"1228022","ctime":1580718349,"ip_address":"","comment_id":175307,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1580649636","product_id":100025201,"comment_content":"打卡第三篇，可是我想其实第一个吃螃蟹的人，并没有套路可循，也不是从分离稳定和不稳定一开始就有这么清晰的设计，这还是不一样的，有些是经历无数实验和草稿，如果有天才的一开始就设计良好，那是极少数的，并且一定有着极好的品味。","like_count":0,"discussions":[{"author":{"id":1228022,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bc/f6/e61d4b8f.jpg","nickname":"许式伟-七牛云(已满)","note":"","ucode":"1A2F8AA6F6DB54","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":482686,"discussion_content":"我觉得大方向应该是明确的。细节的规格经过几年迭代后稳定下来。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1580718349,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":162500,"user_name":"sam700000","can_delete":false,"product_type":"c1","uid":1069133,"ip_address":"","ucode":"C2ABDDC56B2D50","user_header":"https://static001.geekbang.org/account/avatar/00/10/50/4d/db91e218.jpg","comment_is_top":false,"comment_ctime":1576546114,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1576546114","product_id":100025201,"comment_content":"如果是我自己当年想计算机的设计，让我最受启发的东西是钢琴","like_count":0},{"had_liked":false,"id":160782,"user_name":"郑允安","can_delete":false,"product_type":"c1","uid":1017698,"ip_address":"","ucode":"BBC34B2E5CFDF4","user_header":"https://static001.geekbang.org/account/avatar/00/0f/87/62/abb7bfe3.jpg","comment_is_top":false,"comment_ctime":1576032071,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1576032071","product_id":100025201,"comment_content":"架构思维：稳定点和变化点。","like_count":0},{"had_liked":false,"id":158626,"user_name":"J.Smile","can_delete":false,"product_type":"c1","uid":1336475,"ip_address":"","ucode":"C4D98DFDBF7584","user_header":"https://static001.geekbang.org/account/avatar/00/14/64/9b/0b578b08.jpg","comment_is_top":false,"comment_ctime":1575424139,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1575424139","product_id":100025201,"comment_content":"架构设计关注点:稳定与变化","like_count":0},{"had_liked":false,"id":151433,"user_name":"liliumss","can_delete":false,"product_type":"c1","uid":1333094,"ip_address":"","ucode":"A52AC5042F3115","user_header":"https://static001.geekbang.org/account/avatar/00/14/57/66/e57bdb18.jpg","comment_is_top":false,"comment_ctime":1573718749,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573718749","product_id":100025201,"comment_content":"谢谢，基本上计算机组成原理说的很清楚了 ，老冯牛逼","like_count":0},{"had_liked":false,"id":151334,"user_name":"liliumss","can_delete":false,"product_type":"c1","uid":1333094,"ip_address":"","ucode":"A52AC5042F3115","user_header":"https://static001.geekbang.org/account/avatar/00/14/57/66/e57bdb18.jpg","comment_is_top":false,"comment_ctime":1573701254,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1573701254","product_id":100025201,"comment_content":"关于人工智能。。。我相信被创造者超越不了创造者 所谓超越也是个别项目的超越 期核心领域--说回人类  创造力，情感，直觉，一定是无法超越的，<br>而为什么生物学家来修改人类基因是非常严重的，---设计人类的创造者设定好的东西，你取修改你没有创造者的那个能量层次，修改后往往适得其反，非常严重的后果","like_count":0,"discussions":[{"author":{"id":2774631,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/PMxC3hj0bIzo9Y7ibibKqUcJNlc3Hw7UnCIBicUJHjBdoWIn4MUVFRUmJWR4hxHSBdFLldYvncccC8mvaK5s4ibxQA/132","nickname":"Geek_520815","note":"","ucode":"F7487A6F0BD1F3","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":408915,"discussion_content":"无稽之谈， 基因编辑 理解成 高级医疗 即可， 被创造者 总是 可以 超越创造者","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1635342469,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":149183,"user_name":"草芽","can_delete":false,"product_type":"c1","uid":1032081,"ip_address":"","ucode":"82B6B9BBFC9243","user_header":"https://static001.geekbang.org/account/avatar/00/0f/bf/91/c58ca431.jpg","comment_is_top":false,"comment_ctime":1573174125,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573174125","product_id":100025201,"comment_content":"计算（中央处理器），存储，输入输出","like_count":0},{"had_liked":false,"id":145320,"user_name":"吴双","can_delete":false,"product_type":"c1","uid":1179655,"ip_address":"","ucode":"87B32F443485D2","user_header":"https://static001.geekbang.org/account/avatar/00/12/00/07/8e3ceda8.jpg","comment_is_top":false,"comment_ctime":1572250264,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1572250264","product_id":100025201,"comment_content":"老师的教学思路，和本人的学习思路一脉相承，最近在研究计算机的发展，由底层到上层，每个阶段的发展史。计算机体系学科还涉及物理、数学。上大学时候，没对这些进行理解，教材知识也较为空洞，现在想想，每一门学科都是有必要的。","like_count":0},{"had_liked":false,"id":144884,"user_name":"啊潮","can_delete":false,"product_type":"c1","uid":1074344,"ip_address":"","ucode":"3F9C9E016D47E8","user_header":"https://static001.geekbang.org/account/avatar/00/10/64/a8/5043f088.jpg","comment_is_top":false,"comment_ctime":1572081171,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1572081171","product_id":100025201,"comment_content":"架构的第一步是需求分析。从需求分析角度来说，关键要抓住需求的稳定点和变化点。需求的稳定点，往往是系统的核心价值点；而需求的变化点，则往往需要相应去做开放性设计。","like_count":0},{"had_liked":false,"id":140424,"user_name":"舒偌一","can_delete":false,"product_type":"c1","uid":1053833,"ip_address":"","ucode":"C1F87ED4E84FD9","user_header":"https://static001.geekbang.org/account/avatar/00/10/14/89/229bb890.jpg","comment_is_top":false,"comment_ctime":1570937158,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1570937158","product_id":100025201,"comment_content":"关键词：需求、稳定的、变化点、规格。","like_count":0},{"had_liked":false,"id":136007,"user_name":"嚆同学","can_delete":false,"product_type":"c1","uid":1018329,"ip_address":"","ucode":"5F5BFE47B3302C","user_header":"https://static001.geekbang.org/account/avatar/00/0f/89/d9/abb7bfe3.jpg","comment_is_top":false,"comment_ctime":1569327052,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1569327052","product_id":100025201,"comment_content":"老师功力深厚，感觉现在才理解冯·诺依曼体系结构的魅力所在。","like_count":0},{"had_liked":false,"id":128650,"user_name":"soong","can_delete":false,"product_type":"c1","uid":1049954,"ip_address":"","ucode":"E3BECF2088F3D9","user_header":"https://static001.geekbang.org/account/avatar/00/10/05/62/0a4e5831.jpg","comment_is_top":false,"comment_ctime":1566923296,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1566923296","product_id":100025201,"comment_content":"关于冯•诺伊曼体系结构的解读很精彩，关于系统架构设计的思考，给出了很清晰的指引！涵盖了面、深入到点，颇有收获！","like_count":0},{"had_liked":false,"id":128069,"user_name":"啊一大狗","can_delete":false,"product_type":"c1","uid":1003926,"ip_address":"","ucode":"0D7629E65A61A1","user_header":"https://static001.geekbang.org/account/avatar/00/0f/51/96/53ffbb95.jpg","comment_is_top":false,"comment_ctime":1566827226,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1566827226","product_id":100025201,"comment_content":"对大数据架构和无服务器架构很有启发","like_count":0},{"had_liked":false,"id":120110,"user_name":"LYy","can_delete":false,"product_type":"c1","uid":1102062,"ip_address":"","ucode":"8D5C39B9531E71","user_header":"https://static001.geekbang.org/account/avatar/00/10/d0/ee/f5c5e191.jpg","comment_is_top":false,"comment_ctime":1564793892,"is_pvip":true,"replies":[{"id":"44105","content":"👍","user_name":"作者回复","user_name_real":"许式伟-七牛云(已满)","uid":"1228022","ctime":1564799198,"ip_address":"","comment_id":120110,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1564793892","product_id":100025201,"comment_content":"变与不变: 抽象出系统中核心稳定的部分和容易变化的部分 对变化的部分设计对接协议(抽象层) ","like_count":0,"discussions":[{"author":{"id":1228022,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bc/f6/e61d4b8f.jpg","nickname":"许式伟-七牛云(已满)","note":"","ucode":"1A2F8AA6F6DB54","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":461202,"discussion_content":"👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1564799198,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":116517,"user_name":"宋晓明","can_delete":false,"product_type":"c1","uid":1146507,"ip_address":"","ucode":"DC866DCE2FBA9E","user_header":"https://static001.geekbang.org/account/avatar/00/11/7e/8b/3cc461b3.jpg","comment_is_top":false,"comment_ctime":1563862400,"is_pvip":false,"replies":[{"id":"42611","content":"架构和语言无关","user_name":"作者回复","user_name_real":"许式伟-七牛云(已满)","uid":"1228022","ctime":1563864373,"ip_address":"","comment_id":116517,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1563862400","product_id":100025201,"comment_content":"不会武功招式，只会内功心法，能不能走远？之前一直走py路线，后来发现大部分架构是基本都是java出身，说实话，我个人不太喜欢java，最近研究go，为了架构难道还要苦练java？","like_count":0,"discussions":[{"author":{"id":1228022,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bc/f6/e61d4b8f.jpg","nickname":"许式伟-七牛云(已满)","note":"","ucode":"1A2F8AA6F6DB54","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":459571,"discussion_content":"架构和语言无关","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1563864373,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":110252,"user_name":"grey927","can_delete":false,"product_type":"c1","uid":1202782,"ip_address":"","ucode":"833E02ED835B4A","user_header":"https://static001.geekbang.org/account/avatar/00/12/5a/5e/a897cb0d.jpg","comment_is_top":false,"comment_ctime":1562214835,"is_pvip":false,"replies":[{"id":"40014","content":"1、首先这三点已经包含数学中的所有运算组合。另外如果真不能，比如z(x)不能用现有的函数组合来表示，其实还有一个终极办法就是考虑扩展cpu指令，增加z函数；<br>2、我觉得计算机是个工程，不是自然科学。所以只要工程上能够解决90%以上的常规计算问题就好。严谨解决所有计算问题是不可能的，比如实数表示这样一个基础问题都做不到，浮点数只能表示有限个实数，但是科学中实数是无穷多的。","user_name":"作者回复","user_name_real":"许式伟-七牛云(已满)","uid":"1228022","ctime":1562233076,"ip_address":"","comment_id":110252,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1562214835","product_id":100025201,"comment_content":"许老师，文中说：逻辑上来看，无论多复杂的自定义函数，都可以通过下面这些元素的组合来定义......<br>我的问题是：<br>1. 如何证明您说的这三点可以满足无论多复杂的自定义函数？<br>2. 如果我作为一个从零开始制造电脑的人，我要怎么去证明：完成所有计算问题的最小指令集？翻译成系统架构师的问题就是：我要怎么证明&#47;抽象最小的模块去满足一个系统最复杂的需求（也就是您说的优美的冯诺伊曼架构）<br>","like_count":0,"discussions":[{"author":{"id":1228022,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bc/f6/e61d4b8f.jpg","nickname":"许式伟-七牛云(已满)","note":"","ucode":"1A2F8AA6F6DB54","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":456787,"discussion_content":"1、首先这三点已经包含数学中的所有运算组合。另外如果真不能，比如z(x)不能用现有的函数组合来表示，其实还有一个终极办法就是考虑扩展cpu指令，增加z函数；\n2、我觉得计算机是个工程，不是自然科学。所以只要工程上能够解决90%以上的常规计算问题就好。严谨解决所有计算问题是不可能的，比如实数表示这样一个基础问题都做不到，浮点数只能表示有限个实数，但是科学中实数是无穷多的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1562233076,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":109285,"user_name":"呆猫","can_delete":false,"product_type":"c1","uid":1228759,"ip_address":"","ucode":"69E256E6A19225","user_header":"https://static001.geekbang.org/account/avatar/00/12/bf/d7/9e2c8648.jpg","comment_is_top":false,"comment_ctime":1561992903,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1561992903","product_id":100025201,"comment_content":"通过老师以冯·诺依曼体系为例对架构的分析，让我对架构有了重新的认识","like_count":0},{"had_liked":false,"id":105564,"user_name":"勤劳的小蜜蜂","can_delete":false,"product_type":"c1","uid":1584464,"ip_address":"","ucode":"0EB04F2A1242EC","user_header":"https://static001.geekbang.org/account/avatar/00/18/2d/50/ed1a4a56.jpg","comment_is_top":false,"comment_ctime":1561032213,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1561032213","product_id":100025201,"comment_content":"读后感：<br>冯.诺依曼计算机架构体系之所以这么经典，在于他的抽象性，很好的提取出计算机体系的三大共性(CPU&#47;存储&#47;输入输出)。因为他足够抽象，便可以解决大部分问题，但是应用框架并不是可以完全抽象的，因为应用是去解决具体的问题&#47;需求，因而需要具体问题具体分析，并掌握好其中的度。","like_count":0},{"had_liked":false,"id":105298,"user_name":"三水","can_delete":false,"product_type":"c1","uid":1017781,"ip_address":"","ucode":"11837CF38FD9BB","user_header":"https://static001.geekbang.org/account/avatar/00/0f/87/b5/dd0353f4.jpg","comment_is_top":false,"comment_ctime":1560957440,"is_pvip":false,"replies":[{"id":"38140","content":"嗯，很多东西一通百通","user_name":"作者回复","user_name_real":"许式伟-七牛云(已满)","uid":"1228022","ctime":1560996324,"ip_address":"","comment_id":105298,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1560957440","product_id":100025201,"comment_content":"这篇内容对理解Apache Beam的设计非常有帮助，感觉如出一辙，谢谢老师！","like_count":0,"discussions":[{"author":{"id":1228022,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bc/f6/e61d4b8f.jpg","nickname":"许式伟-七牛云(已满)","note":"","ucode":"1A2F8AA6F6DB54","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":454626,"discussion_content":"嗯，很多东西一通百通","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1560996324,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":104553,"user_name":"Geek__2099","can_delete":false,"product_type":"c1","uid":1457784,"ip_address":"","ucode":"01444B60F18A66","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83ep8unibCib9rdHib0D6Rf6TjecPQu1yic0G9sjzriczlTcwGHP6DaxtEmHyN7pCrD9zV7OSegyf7EUBvaA/132","comment_is_top":false,"comment_ctime":1560775758,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1560775758","product_id":100025201,"comment_content":"谢谢。需求的稳定点和变化点，来源于需求本身。之所以稳定，源于所代表事物的存在形态和生存机制是不变的。比如人总要穿衣服，总要买衣服穿。因此服装生产，交易就是稳定点。即稳定点源于事物存续的意义。<br>而事物存续的意义从何而来?源自事物的诞生之时。它的出现，世界的运作机制和现象发生了变化。一旦形态有了固化的可能，存续的意义就此形成。所有的一切均将围饶这个意义展开。是生存还是灭亡?还是为了更高的意义?只有当意识回到无意义的起点时，知识才能不再成为陷阱和拖累，意义才能有涌现的可能。万紫千红，千姿百态!<br>","like_count":0},{"had_liked":false,"id":103707,"user_name":"Jason","can_delete":false,"product_type":"c1","uid":1322811,"ip_address":"","ucode":"02C3847652D3CF","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKHfQPjwdyOLYsbF6T2rUSILRc3VsNmMcNJkEEd3TvbfcYProhE8jrKD7EozLTpJ94N7SnbBcTnOA/132","comment_is_top":false,"comment_ctime":1560495540,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1560495540","product_id":100025201,"comment_content":"哈哈哈，之前就听说七牛的核心是用Go写的，没想到老师您还用Go模拟了一个冯诺依曼","like_count":0},{"had_liked":false,"id":94271,"user_name":"张浩","can_delete":false,"product_type":"c1","uid":1001225,"ip_address":"","ucode":"DBEAFFB7660813","user_header":"https://static001.geekbang.org/account/avatar/00/0f/47/09/316b0aa1.jpg","comment_is_top":false,"comment_ctime":1557757540,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1557757540","product_id":100025201,"comment_content":"冯诺依曼体系想解决一切可以通过计算解决的问题，通过三个部分组成，包括中央处理器、存储、各种各样的输入输出设备。","like_count":0},{"had_liked":false,"id":91702,"user_name":"MIT_LSP","can_delete":false,"product_type":"c1","uid":1512788,"ip_address":"","ucode":"9191A8502EAEB9","user_header":"","comment_is_top":false,"comment_ctime":1557077511,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1557077511","product_id":100025201,"comment_content":"    架构就是创建一个全新世界，赞！架构思维任何地方都可用到，就像人类世界秩序的架构和软件架构的底层思维是相同，只要具备架构思维加上对应的专业知识就可以成为任何领域的构建者。<br>    对于人类个体都是具备不同思想的个体，但是却有共同的需求，如最基本的生存需求可以看做软件架构的基础需求也是不变的部分，当生存需求无法满足时就容易造成秩序的崩溃。在满足基本情况下个体就会产生精神层面上的需求，这个精神需求虽然每个个体不同，但是可以找出绝大部分人可接受的共同部分，并且可以被引导（通过教育导向，在软件应用中表现为培养用户的用户习惯），如尊重、被需要、个人欲望的满足方式（大部分可通过金钱来获得）。对于具有区域特性需求，又可以针对区域进行细分归纳共同需求，如不同国家所制定出的不同政策、不同城市的饮食习惯等。但是对于极少数个体的特别性需求是可以放弃不做考虑的。同时在构造国家政策、法律时可以借鉴其他国家的成功案例（如软件架构中借鉴其他架构方案的思想），再结合实际情况制定出最匹配的方案。<br>    从个体角度来说，个体化程度越高（就是尽量满足每个个体个性化需求）满意度越高，但是意味着复杂性越高，成本越大，往往投入与产出不成正比，甚至是不能实现的，所以这个度要把握。架构从需求角度来看其实也是需要妥协的。","like_count":0},{"had_liked":false,"id":90781,"user_name":"松鼠君","can_delete":false,"product_type":"c1","uid":1135269,"ip_address":"","ucode":"F39C661B685E75","user_header":"https://static001.geekbang.org/account/avatar/00/11/52/a5/d4c6e23d.jpg","comment_is_top":false,"comment_ctime":1556639116,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1556639116","product_id":100025201,"comment_content":"计算机的核心功能可以归纳为函数的变换","like_count":0},{"had_liked":false,"id":90690,"user_name":"Panda","can_delete":false,"product_type":"c1","uid":1095740,"ip_address":"","ucode":"911A200C7B18BE","user_header":"https://static001.geekbang.org/account/avatar/00/10/b8/3c/1a294619.jpg","comment_is_top":false,"comment_ctime":1556610847,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1556610847","product_id":100025201,"comment_content":"冯·诺依曼 计算机之父","like_count":0},{"had_liked":false,"id":90144,"user_name":"乘风","can_delete":false,"product_type":"c1","uid":1115724,"ip_address":"","ucode":"0420C5535DACB7","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLwSoTjHPX5tm4whBSfoZLX6toZxrZGUaLABQywKNf4MDc9toK3QSV7Z99ATcGicFCysoleQ5ISzmw/132","comment_is_top":false,"comment_ctime":1556430552,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1556430552","product_id":100025201,"comment_content":"架构设计的核心是区分：稳定点和变化点，变化点根据基础规范抽象封装与稳定点进行交互，而看待这一问题需要自顶向下看，了解整个流程从而做判断","like_count":0},{"had_liked":false,"id":89722,"user_name":"辉","can_delete":false,"product_type":"c1","uid":1501682,"ip_address":"","ucode":"704D414FCB3B3F","user_header":"https://static001.geekbang.org/account/avatar/00/16/e9/f2/228b3a6f.jpg","comment_is_top":false,"comment_ctime":1556249863,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1556249863","product_id":100025201,"comment_content":"虽然字数不多，但能感受到每行字里包含信息量是惊人的，需静下心来细细理解发散。<br>一点点总结:从产品的角度对计算机的基础架构-冯.若依曼的阐释，核心组成：中央处理器、存储、输入输出设备，cpu是产品的核心，输入输出是产品的多样性的体验，存储让cpu得到了解放，专注于自己的核心业务。","like_count":0},{"had_liked":false,"id":89671,"user_name":"😊","can_delete":false,"product_type":"c1","uid":1117765,"ip_address":"","ucode":"11BE441160E411","user_header":"https://static001.geekbang.org/account/avatar/00/11/0e/45/3b86d20a.jpg","comment_is_top":false,"comment_ctime":1556242205,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1556242205","product_id":100025201,"comment_content":"看来，是时候去修炼一波go了。。","like_count":0},{"had_liked":false,"id":89191,"user_name":"anchor","can_delete":false,"product_type":"c1","uid":1083124,"ip_address":"","ucode":"24EECD40CC54C2","user_header":"https://static001.geekbang.org/account/avatar/00/10/86/f4/331f33a7.jpg","comment_is_top":false,"comment_ctime":1556101878,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1556101878","product_id":100025201,"comment_content":"架构—需求 自顶向下，规格 自底向上；找到固定和变化的点；将固定点提供产品，变化点通过提供的基础功能来构建","like_count":0},{"had_liked":false,"id":89062,"user_name":"王布斯","can_delete":false,"product_type":"c1","uid":1141005,"ip_address":"","ucode":"F435E512E4DDC3","user_header":"https://static001.geekbang.org/account/avatar/00/11/69/0d/7ba74474.jpg","comment_is_top":false,"comment_ctime":1556070776,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1556070776","product_id":100025201,"comment_content":"我是主要做Go的，看到老大出课了，马上就买了，希望有所收获","like_count":0},{"had_liked":false,"id":89028,"user_name":"无法言喻.","can_delete":false,"product_type":"c1","uid":1322328,"ip_address":"","ucode":"7F375BE388D4FC","user_header":"https://static001.geekbang.org/account/avatar/00/14/2d/58/aa35c402.jpg","comment_is_top":false,"comment_ctime":1556067101,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1556067101","product_id":100025201,"comment_content":"把一个需求拆成稳定性和变化性的两部分，稳定性的部分用高内聚，变化性的部分用高耦合。但是拆分方式感觉经验不足。","like_count":0},{"had_liked":false,"id":89013,"user_name":"Panda","can_delete":false,"product_type":"c1","uid":1095740,"ip_address":"","ucode":"911A200C7B18BE","user_header":"https://static001.geekbang.org/account/avatar/00/10/b8/3c/1a294619.jpg","comment_is_top":false,"comment_ctime":1556065724,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1556065724","product_id":100025201,"comment_content":"基础知识见真章","like_count":0},{"had_liked":false,"id":88969,"user_name":"贝如科技","can_delete":false,"product_type":"c1","uid":1507584,"ip_address":"","ucode":"2B792C68D7A081","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eqT1ykjFve5LJmVhfTXicibvFaAq4aTERwic63YSzW0YZ8IooaDV6aDPprva70HGkwbAicm6XNcmDYhLw/132","comment_is_top":false,"comment_ctime":1556035895,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1556035895","product_id":100025201,"comment_content":"y=F(x) 让我想到MapReduce","like_count":0},{"had_liked":false,"id":88915,"user_name":"花花大脸猫","can_delete":false,"product_type":"c1","uid":1117318,"ip_address":"","ucode":"8ABDB3F7F4FB0F","user_header":"https://static001.geekbang.org/account/avatar/00/11/0c/86/8e52afb8.jpg","comment_is_top":false,"comment_ctime":1556026488,"is_pvip":true,"discussion_count":0,"race_medal":1,"score":"1556026488","product_id":100025201,"comment_content":"不得不说，老师使用冯诺依曼体系，作为讲解架构的起始点，确实是印象深刻，让人耳目一新！","like_count":0},{"had_liked":false,"id":88680,"user_name":"天天向上","can_delete":false,"product_type":"c1","uid":1031113,"ip_address":"","ucode":"5948D359734193","user_header":"https://static001.geekbang.org/account/avatar/00/0f/bb/c9/37924ad4.jpg","comment_is_top":false,"comment_ctime":1555982382,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1555982382","product_id":100025201,"comment_content":"稳定的需求 设计 稳定的组件<br>多样性需求 存储为指令序列 用稳定组件执行之","like_count":0},{"had_liked":false,"id":88663,"user_name":"朝格格","can_delete":false,"product_type":"c1","uid":1496921,"ip_address":"","ucode":"9FE4508D7523A0","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTK3ibqOLLCVQZwyHQJJvq58wQg0g9bo95Ahm9l4DrW9PiawiaXGYyiaQZ3AhuuJZc42aPzFXF9gHr97ibQ/132","comment_is_top":false,"comment_ctime":1555980636,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1555980636","product_id":100025201,"comment_content":"需求分清固定不变的核心需求和变化的可扩展的需求，可扩展的需求设计成开放的","like_count":0},{"had_liked":false,"id":88659,"user_name":"zh","can_delete":false,"product_type":"c1","uid":1181098,"ip_address":"","ucode":"73D2287552B17B","user_header":"https://static001.geekbang.org/account/avatar/00/12/05/aa/cc1dd8de.jpg","comment_is_top":false,"comment_ctime":1555980395,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1555980395","product_id":100025201,"comment_content":"需求一般由稳定点和变化点组成，变化的部分需要开放性设计，如各种外部设备。如何确定稳定点与变化点，是比较难把握的部分。许老师有什么建议吗？","like_count":0},{"had_liked":false,"id":88453,"user_name":"李浩","can_delete":false,"product_type":"c1","uid":1142600,"ip_address":"","ucode":"CE9504817A6D64","user_header":"https://static001.geekbang.org/account/avatar/00/11/6f/48/cb24cde6.jpg","comment_is_top":false,"comment_ctime":1555921571,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1555921571","product_id":100025201,"comment_content":"这样的分析之前从没想到过，收藏了代码，试着看下","like_count":0},{"had_liked":false,"id":88350,"user_name":"钱塘","can_delete":false,"product_type":"c1","uid":1175263,"ip_address":"","ucode":"EB51C25738320A","user_header":"https://static001.geekbang.org/account/avatar/00/11/ee/df/77969c7d.jpg","comment_is_top":false,"comment_ctime":1555909248,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1555909248","product_id":100025201,"comment_content":"单单这一篇就值不只99了","like_count":0},{"had_liked":false,"id":88204,"user_name":"王建","can_delete":false,"product_type":"c1","uid":1153792,"ip_address":"","ucode":"68000818D8AA41","user_header":"https://static001.geekbang.org/account/avatar/00/11/9b/00/8c1b9631.jpg","comment_is_top":false,"comment_ctime":1555894468,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1555894468","product_id":100025201,"comment_content":"读后感<br><br>谁计算         cpu<br>怎么计算    变化的指令，从各种存储读取数据(指令  算数计算  跳转)  <br>解决什么问题  指令包含的计算问题","like_count":0},{"had_liked":false,"id":88168,"user_name":"零度","can_delete":false,"product_type":"c1","uid":1325714,"ip_address":"","ucode":"EABD32B1E8323C","user_header":"https://static001.geekbang.org/account/avatar/00/14/3a/92/b8f3b0b6.jpg","comment_is_top":false,"comment_ctime":1555865416,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1555865416","product_id":100025201,"comment_content":"大晚上的听完了老许的课程，作为一个非科班的互联网从业者而言，有种醍醐灌顶的通透感！","like_count":0},{"had_liked":false,"id":88148,"user_name":"Ghoul Zhou","can_delete":false,"product_type":"c1","uid":1107457,"ip_address":"","ucode":"07E6FEE43E1D61","user_header":"https://static001.geekbang.org/account/avatar/00/10/e6/01/0ccb7a7c.jpg","comment_is_top":false,"comment_ctime":1555858697,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1555858697","product_id":100025201,"comment_content":"“从需求分析角度来说，关键要抓住需求的稳定点和变化点。”<br>这个我要实践下，还真没下意识考虑过。","like_count":0},{"had_liked":false,"id":87852,"user_name":"烟云","can_delete":false,"product_type":"c1","uid":1504583,"ip_address":"","ucode":"6212417DCB6387","user_header":"https://static001.geekbang.org/account/avatar/00/16/f5/47/34822f40.jpg","comment_is_top":false,"comment_ctime":1555732050,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1555732050","product_id":100025201,"comment_content":"有基础的听这个课，就有顿悟和通透的感觉","like_count":0},{"had_liked":false,"id":87752,"user_name":"kevin","can_delete":false,"product_type":"c1","uid":1199192,"ip_address":"","ucode":"918EFC033B1630","user_header":"https://static001.geekbang.org/account/avatar/00/12/4c/58/25152fa9.jpg","comment_is_top":false,"comment_ctime":1555680326,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1555680326","product_id":100025201,"comment_content":"大师的思考和讲解干净利落，请问怎样像你一样优秀","like_count":0},{"had_liked":false,"id":87688,"user_name":"逝水逆流年","can_delete":false,"product_type":"c1","uid":1494662,"ip_address":"","ucode":"50C507D318E752","user_header":"https://static001.geekbang.org/account/avatar/00/16/ce/86/95b6dd61.jpg","comment_is_top":false,"comment_ctime":1555660726,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1555660726","product_id":100025201,"comment_content":"有意思，膜拜大神","like_count":0},{"had_liked":false,"id":87568,"user_name":"海盗船长","can_delete":false,"product_type":"c1","uid":1363634,"ip_address":"","ucode":"ECB28BA21A4113","user_header":"https://static001.geekbang.org/account/avatar/00/14/ce/b2/1f914527.jpg","comment_is_top":false,"comment_ctime":1555636105,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1555636105","product_id":100025201,"comment_content":"打卡","like_count":0},{"had_liked":false,"id":87489,"user_name":"军舰","can_delete":false,"product_type":"c1","uid":1221705,"ip_address":"","ucode":"C7E97415F5196A","user_header":"https://static001.geekbang.org/account/avatar/00/12/a4/49/1c8598d1.jpg","comment_is_top":false,"comment_ctime":1555611802,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1555611802","product_id":100025201,"comment_content":"终于等来了，听的模模糊糊，明天再看一遍。睡觉💤","like_count":0}]}