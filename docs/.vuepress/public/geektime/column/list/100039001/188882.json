{"id":188882,"title":"33 | 理论五：让你最快速地改善代码质量的20条编程规范（下）","content":"<p>上两节课，我们讲了命名和注释、代码风格，今天我们来讲一些比较实用的编程技巧，帮你切实地提高代码可读性。这部分技巧比较琐碎，也很难罗列全面，我仅仅总结了一些我认为比较关键的，更多的技巧需要你在实践中自己慢慢总结、积累。</p><p>话不多说，让我们正式开始今天的学习吧！</p><h2>1.把代码分割成更小的单元块</h2><p>大部分人阅读代码的习惯都是，先看整体再看细节。所以，我们要有模块化和抽象思维，善于将大块的复杂逻辑提炼成类或者函数，屏蔽掉细节，让阅读代码的人不至于迷失在细节中，这样能极大地提高代码的可读性。不过，只有代码逻辑比较复杂的时候，我们其实才建议提炼类或者函数。毕竟如果提炼出的函数只包含两三行代码，在阅读代码的时候，还得跳过去看一下，这样反倒增加了阅读成本。</p><p>这里我举一个例子来进一步解释一下。代码具体如下所示。重构前，在invest()函数中，最开始的那段关于时间处理的代码，是不是很难看懂？重构之后，我们将这部分逻辑抽象成一个函数，并且命名为isLastDayOfMonth，从名字就能清晰地了解它的功能，判断今天是不是当月的最后一天。这里，我们就是通过将复杂的逻辑代码提炼成函数，大大提高了代码的可读性。</p><pre><code>// 重构前的代码\npublic void invest(long userId, long financialProductId) {\n  Calendar calendar = Calendar.getInstance();\n  calendar.setTime(date);\n  calendar.set(Calendar.DATE, (calendar.get(Calendar.DATE) + 1));\n  if (calendar.get(Calendar.DAY_OF_MONTH) == 1) {\n    return;\n  }\n  //...\n}\n\n// 重构后的代码：提炼函数之后逻辑更加清晰\npublic void invest(long userId, long financialProductId) {\n  if (isLastDayOfMonth(new Date())) {\n    return;\n  }\n  //...\n}\n\npublic boolean isLastDayOfMonth(Date date) {\n  Calendar calendar = Calendar.getInstance();\n  calendar.setTime(date);\n  calendar.set(Calendar.DATE, (calendar.get(Calendar.DATE) + 1));\n  if (calendar.get(Calendar.DAY_OF_MONTH) == 1) {\n   return true;\n  }\n  return false;\n}\n</code></pre><!-- [[[read_end]]] --><h2>2.避免函数参数过多</h2><p>我个人觉得，函数包含3、4个参数的时候还是能接受的，大于等于5个的时候，我们就觉得参数有点过多了，会影响到代码的可读性，使用起来也不方便。针对参数过多的情况，一般有2种处理方法。</p><ul>\n<li>考虑函数是否职责单一，是否能通过拆分成多个函数的方式来减少参数。示例代码如下所示：</li>\n</ul><pre><code>public User getUser(String username, String telephone, String email);\n\n// 拆分成多个函数\npublic User getUserByUsername(String username);\npublic User getUserByTelephone(String telephone);\npublic User getUserByEmail(String email);\n</code></pre><ul>\n<li>将函数的参数封装成对象。示例代码如下所示：</li>\n</ul><pre><code>public void postBlog(String title, String summary, String keywords, String content, String category, long authorId);\n\n// 将参数封装成对象\npublic class Blog {\n  private String title;\n  private String summary;\n  private String keywords;\n  private Strint content;\n  private String category;\n  private long authorId;\n}\npublic void postBlog(Blog blog);\n</code></pre><p>除此之外，如果函数是对外暴露的远程接口，将参数封装成对象，还可以提高接口的兼容性。在往接口中添加新的参数的时候，老的远程接口调用者有可能就不需要修改代码来兼容新的接口了。</p><h2>3.勿用函数参数来控制逻辑</h2><p>不要在函数中使用布尔类型的标识参数来控制内部逻辑，true的时候走这块逻辑，false的时候走另一块逻辑。这明显违背了单一职责原则和接口隔离原则。我建议将其拆成两个函数，可读性上也要更好。我举个例子来说明一下。</p><pre><code>public void buyCourse(long userId, long courseId, boolean isVip);\n\n// 将其拆分成两个函数\npublic void buyCourse(long userId, long courseId);\npublic void buyCourseForVip(long userId, long courseId);\n</code></pre><p>不过，如果函数是private私有函数，影响范围有限，或者拆分之后的两个函数经常同时被调用，我们可以酌情考虑保留标识参数。示例代码如下所示：</p><pre><code>// 拆分成两个函数的调用方式\nboolean isVip = false;\n//...省略其他逻辑...\nif (isVip) {\n  buyCourseForVip(userId, courseId);\n} else {\n  buyCourse(userId, courseId);\n}\n\n// 保留标识参数的调用方式更加简洁\nboolean isVip = false;\n//...省略其他逻辑...\nbuyCourse(userId, courseId, isVip);\n</code></pre><p>除了布尔类型作为标识参数来控制逻辑的情况外，还有一种“根据参数是否为null”来控制逻辑的情况。针对这种情况，我们也应该将其拆分成多个函数。拆分之后的函数职责更明确，不容易用错。具体代码示例如下所示：</p><pre><code>public List&lt;Transaction&gt; selectTransactions(Long userId, Date startDate, Date endDate) {\n  if (startDate != null &amp;&amp; endDate != null) {\n    // 查询两个时间区间的transactions\n  }\n  if (startDate != null &amp;&amp; endDate == null) {\n    // 查询startDate之后的所有transactions\n  }\n  if (startDate == null &amp;&amp; endDate != null) {\n    // 查询endDate之前的所有transactions\n  }\n  if (startDate == null &amp;&amp; endDate == null) {\n    // 查询所有的transactions\n  }\n}\n\n// 拆分成多个public函数，更加清晰、易用\npublic List&lt;Transaction&gt; selectTransactionsBetween(Long userId, Date startDate, Date endDate) {\n  return selectTransactions(userId, startDate, endDate);\n}\n\npublic List&lt;Transaction&gt; selectTransactionsStartWith(Long userId, Date startDate) {\n  return selectTransactions(userId, startDate, null);\n}\n\npublic List&lt;Transaction&gt; selectTransactionsEndWith(Long userId, Date endDate) {\n  return selectTransactions(userId, null, endDate);\n}\n\npublic List&lt;Transaction&gt; selectAllTransactions(Long userId) {\n  return selectTransactions(userId, null, null);\n}\n\nprivate List&lt;Transaction&gt; selectTransactions(Long userId, Date startDate, Date endDate) {\n  // ...\n}\n</code></pre><h2>4.函数设计要职责单一</h2><p>我们在前面讲到单一职责原则的时候，针对的是类、模块这样的应用对象。实际上，对于函数的设计来说，更要满足单一职责原则。相对于类和模块，函数的粒度比较小，代码行数少，所以在应用单一职责原则的时候，没有像应用到类或者模块那样模棱两可，能多单一就多单一。</p><p>具体的代码示例如下所示：</p><pre><code>public boolean checkUserIfExisting(String telephone, String username, String email)  { \n  if (!StringUtils.isBlank(telephone)) {\n    User user = userRepo.selectUserByTelephone(telephone);\n    return user != null;\n  }\n  \n  if (!StringUtils.isBlank(username)) {\n    User user = userRepo.selectUserByUsername(username);\n    return user != null;\n  }\n  \n  if (!StringUtils.isBlank(email)) {\n    User user = userRepo.selectUserByEmail(email);\n    return user != null;\n  }\n  \n  return false;\n}\n\n// 拆分成三个函数\npublic boolean checkUserIfExistingByTelephone(String telephone);\npublic boolean checkUserIfExistingByUsername(String username);\npublic boolean checkUserIfExistingByEmail(String email);\n</code></pre><h2>5.移除过深的嵌套层次</h2><p>代码嵌套层次过深往往是因为if-else、switch-case、for循环过度嵌套导致的。我个人建议，嵌套最好不超过两层，超过两层之后就要思考一下是否可以减少嵌套。过深的嵌套本身理解起来就比较费劲，除此之外，嵌套过深很容易因为代码多次缩进，导致嵌套内部的语句超过一行的长度而折成两行，影响代码的整洁。</p><p>解决嵌套过深的方法也比较成熟，有下面4种常见的思路。</p><ul>\n<li>去掉多余的if或else语句。代码示例如下所示：</li>\n</ul><pre><code>// 示例一\npublic double caculateTotalAmount(List&lt;Order&gt; orders) {\n  if (orders == null || orders.isEmpty()) {\n    return 0.0;\n  } else { // 此处的else可以去掉\n    double amount = 0.0;\n    for (Order order : orders) {\n      if (order != null) {\n        amount += (order.getCount() * order.getPrice());\n      }\n    }\n    return amount;\n  }\n}\n\n// 示例二\npublic List&lt;String&gt; matchStrings(List&lt;String&gt; strList,String substr) {\n  List&lt;String&gt; matchedStrings = new ArrayList&lt;&gt;();\n  if (strList != null &amp;&amp; substr != null) {\n    for (String str : strList) {\n      if (str != null) { // 跟下面的if语句可以合并在一起\n        if (str.contains(substr)) {\n          matchedStrings.add(str);\n        }\n      }\n    }\n  }\n  return matchedStrings;\n}\n</code></pre><ul>\n<li>使用编程语言提供的continue、break、return关键字，提前退出嵌套。代码示例如下所示：</li>\n</ul><pre><code>// 重构前的代码\npublic List&lt;String&gt; matchStrings(List&lt;String&gt; strList,String substr) {\n  List&lt;String&gt; matchedStrings = new ArrayList&lt;&gt;();\n  if (strList != null &amp;&amp; substr != null){ \n    for (String str : strList) {\n      if (str != null &amp;&amp; str.contains(substr)) {\n        matchedStrings.add(str);\n        // 此处还有10行代码...\n      }\n    }\n  }\n  return matchedStrings;\n}\n\n// 重构后的代码：使用continue提前退出\npublic List&lt;String&gt; matchStrings(List&lt;String&gt; strList,String substr) {\n  List&lt;String&gt; matchedStrings = new ArrayList&lt;&gt;();\n  if (strList != null &amp;&amp; substr != null){ \n    for (String str : strList) {\n      if (str == null || !str.contains(substr)) {\n        continue; \n      }\n      matchedStrings.add(str);\n      // 此处还有10行代码...\n    }\n  }\n  return matchedStrings;\n}\n</code></pre><ul>\n<li>调整执行顺序来减少嵌套。具体的代码示例如下所示：</li>\n</ul><pre><code>// 重构前的代码\npublic List&lt;String&gt; matchStrings(List&lt;String&gt; strList,String substr) {\n  List&lt;String&gt; matchedStrings = new ArrayList&lt;&gt;();\n  if (strList != null &amp;&amp; substr != null) {\n    for (String str : strList) {\n      if (str != null) {\n        if (str.contains(substr)) {\n          matchedStrings.add(str);\n        }\n      }\n    }\n  }\n  return matchedStrings;\n}\n\n// 重构后的代码：先执行判空逻辑，再执行正常逻辑\npublic List&lt;String&gt; matchStrings(List&lt;String&gt; strList,String substr) {\n  if (strList == null || substr == null) { //先判空\n    return Collections.emptyList();\n  }\n\n  List&lt;String&gt; matchedStrings = new ArrayList&lt;&gt;();\n  for (String str : strList) {\n    if (str != null) {\n      if (str.contains(substr)) {\n        matchedStrings.add(str);\n      }\n    }\n  }\n  return matchedStrings;\n}\n</code></pre><ul>\n<li>将部分嵌套逻辑封装成函数调用，以此来减少嵌套。具体的代码示例如下所示：</li>\n</ul><pre><code>// 重构前的代码\npublic List&lt;String&gt; appendSalts(List&lt;String&gt; passwords) {\n  if (passwords == null || passwords.isEmpty()) {\n    return Collections.emptyList();\n  }\n  \n  List&lt;String&gt; passwordsWithSalt = new ArrayList&lt;&gt;();\n  for (String password : passwords) {\n    if (password == null) {\n      continue;\n    }\n    if (password.length() &lt; 8) {\n      // ...\n    } else {\n      // ...\n    }\n  }\n  return passwordsWithSalt;\n}\n\n// 重构后的代码：将部分逻辑抽成函数\npublic List&lt;String&gt; appendSalts(List&lt;String&gt; passwords) {\n  if (passwords == null || passwords.isEmpty()) {\n    return Collections.emptyList();\n  }\n\n  List&lt;String&gt; passwordsWithSalt = new ArrayList&lt;&gt;();\n  for (String password : passwords) {\n    if (password == null) {\n      continue;\n    }\n    passwordsWithSalt.add(appendSalt(password));\n  }\n  return passwordsWithSalt;\n}\n\nprivate String appendSalt(String password) {\n  String passwordWithSalt = password;\n  if (password.length() &lt; 8) {\n    // ...\n  } else {\n    // ...\n  }\n  return passwordWithSalt;\n}\n</code></pre><p>除此之外，常用的还有通过使用多态来替代if-else、switch-case条件判断的方法。这个思路涉及代码结构的改动，我们会在后面的章节中讲到，这里就暂时不展开说明了。</p><h2>6.学会使用解释性变量</h2><p>常用的用解释性变量来提高代码的可读性的情况有下面2种。</p><ul>\n<li>常量取代魔法数字。示例代码如下所示：</li>\n</ul><pre><code>public double CalculateCircularArea(double radius) {\n  return (3.1415) * radius * radius;\n}\n\n// 常量替代魔法数字\npublic static final Double PI = 3.1415;\npublic double CalculateCircularArea(double radius) {\n  return PI * radius * radius;\n}\n</code></pre><ul>\n<li>使用解释性变量来解释复杂表达式。示例代码如下所示：</li>\n</ul><pre><code>if (date.after(SUMMER_START) &amp;&amp; date.before(SUMMER_END)) {\n  // ...\n} else {\n  // ...\n}\n\n// 引入解释性变量后逻辑更加清晰\nboolean isSummer = date.after(SUMMER_START)&amp;&amp;date.before(SUMMER_END);\nif (isSummer) {\n  // ...\n} else {\n  // ...\n} \n</code></pre><h2>重点回顾</h2><p>好了，今天的内容到此就讲完了。除了今天讲的编程技巧，前两节课我们还分别讲解了命名与注释、代码风格。现在，我们一块来回顾复习一下这三节课的重点内容。</p><p><strong>1.关于命名</strong></p><ul>\n<li>命名的关键是能准确达意。对于不同作用域的命名，我们可以适当地选择不同的长度。</li>\n<li>我们可以借助类的信息来简化属性、函数的命名，利用函数的信息来简化函数参数的命名。</li>\n<li>命名要可读、可搜索。不要使用生僻的、不好读的英文单词来命名。命名要符合项目的统一规范，也不要用些反直觉的命名。</li>\n<li>接口有两种命名方式：一种是在接口中带前缀“I”；另一种是在接口的实现类中带后缀“Impl”。对于抽象类的命名，也有两种方式，一种是带上前缀“Abstract”，一种是不带前缀。这两种命名方式都可以，关键是要在项目中统一。</li>\n</ul><p><strong>2.关于注释</strong></p><ul>\n<li>注释的内容主要包含这样三个方面：做什么、为什么、怎么做。对于一些复杂的类和接口，我们可能还需要写明“如何用”。</li>\n<li>类和函数一定要写注释，而且要写得尽可能全面详细。函数内部的注释要相对少一些，一般都是靠好的命名、提炼函数、解释性变量、总结性注释来提高代码可读性。</li>\n</ul><p><strong>3.关于代码风格</strong></p><ul>\n<li>函数、类多大才合适？函数的代码行数不要超过一屏幕的大小，比如50行。类的大小限制比较难确定。</li>\n<li>一行代码多长最合适？最好不要超过IDE的显示宽度。当然，也不能太小，否则会导致很多稍微长点的语句被折成两行，也会影响到代码的整洁，不利于阅读。</li>\n<li>善用空行分割单元块。对于比较长的函数，为了让逻辑更加清晰，可以使用空行来分割各个代码块。</li>\n<li>四格缩进还是两格缩进？我个人比较推荐使用两格缩进，这样可以节省空间，尤其是在代码嵌套层次比较深的情况下。不管是用两格缩进还是四格缩进，一定不要用tab键缩进。</li>\n<li>大括号是否要另起一行？将大括号放到跟上一条语句同一行，可以节省代码行数。但是将大括号另起新的一行的方式，左右括号可以垂直对齐，哪些代码属于哪一个代码块，更加一目了然。</li>\n<li>类中成员怎么排列？在Google Java编程规范中，依赖类按照字母序从小到大排列。类中先写成员变量后写函数。成员变量之间或函数之间，先写静态成员变量或函数，后写普通变量或函数，并且按照作用域大小依次排列。</li>\n</ul><p><strong>4.关于编码技巧</strong></p><ul>\n<li>将复杂的逻辑提炼拆分成函数和类。</li>\n<li>通过拆分成多个函数或将参数封装为对象的方式，来处理参数过多的情况。</li>\n<li>函数中不要使用参数来做代码执行逻辑的控制。</li>\n<li>函数设计要职责单一。</li>\n<li>移除过深的嵌套层次，方法包括：去掉多余的if或else语句，使用continue、break、return关键字提前退出嵌套，调整执行顺序来减少嵌套，将部分嵌套逻辑抽象成函数。</li>\n<li>用字面常量取代魔法数。</li>\n<li>用解释性变量来解释复杂表达式，以此提高代码可读性。</li>\n</ul><p><strong>5.统一编码规范</strong></p><p>除了这三节讲到的比较细节的知识点之外，最后，还有一条非常重要的，那就是，项目、团队，甚至公司，一定要制定统一的编码规范，并且通过Code Review督促执行，这对提高代码质量有立竿见影的效果。</p><h2>课堂讨论</h2><p>到此为止，我们整个20条编码规范就讲完了。不知道你掌握了多少呢？除了今天我提到的这些，还有哪些其他的编程技巧，可以明显改善代码的可读性？</p><p>试着在留言区总结罗列一下，和同学一起交流和分享。如果有收获，也欢迎你把这篇文章分享给你的朋友。</p>","comments":[{"had_liked":false,"id":172530,"user_name":"再见孙悟空","can_delete":false,"product_type":"c1","uid":1025518,"ip_address":"","ucode":"57E12A2F9CD915","user_header":"https://static001.geekbang.org/account/avatar/00/0f/a5/ee/6bbac848.jpg","comment_is_top":false,"comment_ctime":1579220632,"is_pvip":false,"discussion_count":10,"race_medal":0,"score":"366651440792","product_id":100039001,"comment_content":"不要在函数中使用布尔类型的标识参数来控制内部逻辑，true 的时候走这块逻辑，false 的时候走另一块逻辑。这明显违背了单一职责原则和接口隔离原则。我建议将其拆成两个函数，可读性上也要更好。这个深有感触","like_count":86,"discussions":[{"author":{"id":1118242,"avatar":"https://static001.geekbang.org/account/avatar/00/11/10/22/910f705c.jpg","nickname":"改名不换人","note":"","ucode":"7E25577829FA0F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":231891,"discussion_content":"这种事儿我是常干啊 以后得多注意","likes_number":6,"is_delete":false,"is_hidden":false,"ctime":1586836333,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1332256,"avatar":"https://static001.geekbang.org/account/avatar/00/14/54/20/90ad5247.jpg","nickname":"NiceBen","note":"","ucode":"793679E3520E84","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":348070,"discussion_content":"最近写的代码中，就有用到一个flag参数，用于逻辑总判断是否为自动还是手动。单独抽取的话有很多重复代码；","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1612422048,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":2588697,"avatar":"https://static001.geekbang.org/account/avatar/00/27/80/19/ac06db0b.jpg","nickname":"New","note":"","ucode":"406DF65BD05FAA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1332256,"avatar":"https://static001.geekbang.org/account/avatar/00/14/54/20/90ad5247.jpg","nickname":"NiceBen","note":"","ucode":"793679E3520E84","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":373271,"discussion_content":"可以把重复代码抽成函数","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1620667210,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":348070,"ip_address":""},"score":373271,"extra":""}]},{"author":{"id":2188142,"avatar":"https://static001.geekbang.org/account/avatar/00/21/63/6e/6b971571.jpg","nickname":"Z宇锤锤","note":"","ucode":"7DB36E986A7A51","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":541873,"discussion_content":"是的。在函数名字上直接写业务含义，感觉就不会耗费很多精力去深入条件到底想表达什么意思。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1640589253,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2347137,"avatar":"https://static001.geekbang.org/account/avatar/00/23/d0/81/d5c8e46e.jpg","nickname":"snake","note":"","ucode":"47BFFE4D048156","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":341165,"discussion_content":"我偶尔也会这样用。。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1610335163,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1160213,"avatar":"https://static001.geekbang.org/account/avatar/00/11/b4/15/2e6716d7.jpg","nickname":"可爱的饲养员","note":"","ucode":"A5B6A4A4110E0C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":291693,"discussion_content":"再见2009","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1594909452,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1477359,"avatar":"https://static001.geekbang.org/account/avatar/00/16/8a/ef/ac2937ac.jpg","nickname":"Geek_342489","note":"","ucode":"40610664021607","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":146271,"discussion_content":"我也是，尤其是前端展示，可能整体逻辑是一样的，只是对不同的人展示不同的文案，不过我想了一下，我其实可以把这段逻辑抽出来单独的调用，在调用相同的逻辑之前或之后，先用 if-else 去分别调用对应的逻辑，不过争哥说了如果是私有函数偶尔用一下无伤大雅，如果暴露出来，就很不好了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579606244,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1161271,"avatar":"https://static001.geekbang.org/account/avatar/00/11/b8/37/98991aeb.jpg","nickname":"不似旧日","note":"","ucode":"DF4C5E3AB9570C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":141227,"discussion_content":"我经常这样做😅，因为只有一段代码不一样，如果不用就不能复用性代码。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579403700,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1132304,"avatar":"https://static001.geekbang.org/account/avatar/00/11/47/10/2d673601.jpg","nickname":"好饿早知道送外卖了","note":"","ucode":"AED22DB5BF8FC7","race_medal":2,"user_type":1,"is_pvip":false},"reply_author":{"id":1161271,"avatar":"https://static001.geekbang.org/account/avatar/00/11/b8/37/98991aeb.jpg","nickname":"不似旧日","note":"","ucode":"DF4C5E3AB9570C","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":170064,"discussion_content":"日后每个人都改过一遍这个代码，就有意思了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1581667554,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":141227,"ip_address":""},"score":170064,"extra":""},{"author":{"id":1810576,"avatar":"https://wx.qlogo.cn/mmopen/vi_32/eLNeJNaEkwGSK7xvtamMibVLMy2MpbIqX3iaEhT7JtSnTRMRTwZ2j4HX7WAapiashbiaBDVriaXKSP0Oeic6ZAEVEXag/132","nickname":"M","note":"","ucode":"06F26E1D62E9C9","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1161271,"avatar":"https://static001.geekbang.org/account/avatar/00/11/b8/37/98991aeb.jpg","nickname":"不似旧日","note":"","ucode":"DF4C5E3AB9570C","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":194312,"discussion_content":"一样，一般以后不会改动的，我也会这种，两种逻辑，通过标识区分","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1583204649,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":141227,"ip_address":""},"score":194312,"extra":""}]}]},{"had_liked":false,"id":172713,"user_name":"🐾","can_delete":false,"product_type":"c1","uid":1087256,"ip_address":"","ucode":"D0AD0260351C31","user_header":"https://static001.geekbang.org/account/avatar/00/10/97/18/a5218104.jpg","comment_is_top":false,"comment_ctime":1579259143,"is_pvip":false,"replies":[{"id":"67741","content":"可以看下这篇文章：<br>https:&#47;&#47;mp.weixin.qq.com&#47;s&#47;0eOm3dBOlFUy8Si1_k7OAw<br><br>代码中的很多低级质量问题不需要人工去审查，java开发有很多现成的工具可以使用，比如：checkstyle，findbugs, pmd, jacaco, sonar等。<br><br>Checkstyle,findbugs,pmd是静态代码分析工具，通过分析源代码或者字节码，找出代码的缺陷，比如参数不匹配，有歧义的嵌套语句，错误的递归，非法计算，可能出现的空指针引用等等。三者都可以集成到gradle等构建工具中。<br><br>Jacoco是一种单元测试覆盖率统计工具，也可以集成到gradle等构建工具中，可以生成漂亮的测试覆盖率统计报表，同时Eclipse提供了插件可以EclEmma可以直观的在IDE中查看单元测试的覆盖情况。<br><br>Sonar Sonar 是一个用于代码质量管理的平台。可以在一个统一的平台上显示管理静态分析，单元测试覆盖率等质量报告。","user_name":"作者回复","user_name_real":"王争","uid":"1190123","ctime":1580118397,"ip_address":"","comment_id":172713,"utype":1}],"discussion_count":10,"race_medal":0,"score":"263572264199","product_id":100039001,"comment_content":"老师晚上好、关于代码规范这块，是不是有好的Java开发脚手架推荐呢？我发现公司的代码没有统一的脚手架，各小组重复造轮子，想规范化这块，但又不知道有哪些通用的脚手架。","like_count":62,"discussions":[{"author":{"id":1266482,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/IIkdC2gohpcibib0AJvSdnJQefAuQYGlLySQOticThpF7Ck9WuDUQLJlgZ7ic13LIFnGBXXbMsSP3nZsbibBN98ZjGA/132","nickname":"batman","note":"","ucode":"73C30ACFC0D612","race_medal":1,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":156746,"discussion_content":"https://mp.weixin.qq.com/s/0eOm3dBOlFUy8Si1_k7OAw链接失效了","likes_number":6,"is_delete":false,"is_hidden":false,"ctime":1580395039,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1190123,"avatar":"https://static001.geekbang.org/account/avatar/00/12/28/eb/af064421.jpg","nickname":"王争","note":"","ucode":"2B611BE0E0EDD4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":481829,"discussion_content":"可以看下这篇文章：\nhttps://mp.weixin.qq.com/s/0eOm3dBOlFUy8Si1_k7OAw\n\n代码中的很多低级质量问题不需要人工去审查，java开发有很多现成的工具可以使用，比如：checkstyle，findbugs, pmd, jacaco, sonar等。\n\nCheckstyle,findbugs,pmd是静态代码分析工具，通过分析源代码或者字节码，找出代码的缺陷，比如参数不匹配，有歧义的嵌套语句，错误的递归，非法计算，可能出现的空指针引用等等。三者都可以集成到gradle等构建工具中。\n\nJacoco是一种单元测试覆盖率统计工具，也可以集成到gradle等构建工具中，可以生成漂亮的测试覆盖率统计报表，同时Eclipse提供了插件可以EclEmma可以直观的在IDE中查看单元测试的覆盖情况。\n\nSonar Sonar 是一个用于代码质量管理的平台。可以在一个统一的平台上显示管理静态分析，单元测试覆盖率等质量报告。","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1580118397,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":2,"child_discussions":[{"author":{"id":1359781,"avatar":"https://static001.geekbang.org/account/avatar/00/14/bf/a5/7b27cdbd.jpg","nickname":"yuansteel","note":"","ucode":"C02D440EF829E9","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1190123,"avatar":"https://static001.geekbang.org/account/avatar/00/12/28/eb/af064421.jpg","nickname":"王争","note":"","ucode":"2B611BE0E0EDD4","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":565224,"discussion_content":"https://mp.weixin.qq.com/s/0eOm3dBOlFUy8Si1_k7OAw链接失效了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1650417339,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":481829,"ip_address":""},"score":565224,"extra":""},{"author":{"id":1359781,"avatar":"https://static001.geekbang.org/account/avatar/00/14/bf/a5/7b27cdbd.jpg","nickname":"yuansteel","note":"","ucode":"C02D440EF829E9","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1190123,"avatar":"https://static001.geekbang.org/account/avatar/00/12/28/eb/af064421.jpg","nickname":"王争","note":"","ucode":"2B611BE0E0EDD4","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":565226,"discussion_content":"老师，辛苦再发个链接","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1650417370,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":481829,"ip_address":""},"score":565226,"extra":""}]},{"author":{"id":1112490,"avatar":"https://static001.geekbang.org/account/avatar/00/10/f9/aa/3e80212e.jpg","nickname":"龙猫","note":"","ucode":"FD726CC969EF9C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":348609,"discussion_content":"sonar很好用，可以和git集成","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1612666156,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1037406,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/d4/5e/b8bfa75d.jpg","nickname":"辰星","note":"","ucode":"C05AF875B85718","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":337685,"discussion_content":"链接失效了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1609041651,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1145270,"avatar":"https://static001.geekbang.org/account/avatar/00/11/79/b6/faaa95a2.jpg","nickname":"航哥很帅","note":"","ucode":"23A1CB2A3723AF","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":332889,"discussion_content":"链接无法访问。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1607387197,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1401377,"avatar":"https://static001.geekbang.org/account/avatar/00/15/62/21/7a382e8f.jpg","nickname":"若未","note":"","ucode":"DFC63F476793A9","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":300965,"discussion_content":"sonar还不错,可以改掉大部分坏习惯","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1598344236,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1161271,"avatar":"https://static001.geekbang.org/account/avatar/00/11/b8/37/98991aeb.jpg","nickname":"不似旧日","note":"","ucode":"DF4C5E3AB9570C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":141237,"discussion_content":"你们公司没有架构么？ ","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579404238,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1087256,"avatar":"https://static001.geekbang.org/account/avatar/00/10/97/18/a5218104.jpg","nickname":"🐾","note":"","ucode":"D0AD0260351C31","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1161271,"avatar":"https://static001.geekbang.org/account/avatar/00/11/b8/37/98991aeb.jpg","nickname":"不似旧日","note":"","ucode":"DF4C5E3AB9570C","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":141312,"discussion_content":"么有，各小组各自为营。业务之间都是通过接口传输。如果有新的项目，需要相关开发人员自己从头又搭一个。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579411160,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":141237,"ip_address":""},"score":141312,"extra":""}]}]},{"had_liked":false,"id":172495,"user_name":"黄林晴","can_delete":false,"product_type":"c1","uid":1362631,"ip_address":"","ucode":"B15C38AECDA88F","user_header":"https://static001.geekbang.org/account/avatar/00/14/ca/c7/00e544c2.jpg","comment_is_top":false,"comment_ctime":1579190681,"is_pvip":false,"discussion_count":23,"race_medal":0,"score":"164787947929","product_id":100039001,"comment_content":"打卡<br>明天最后一天上班<br>就放假了","like_count":38},{"had_liked":false,"id":172606,"user_name":"守拙","can_delete":false,"product_type":"c1","uid":1738326,"ip_address":"","ucode":"F594B2DA3F6D4F","user_header":"https://static001.geekbang.org/account/avatar/00/1a/86/56/509535da.jpg","comment_is_top":false,"comment_ctime":1579233426,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"100363481234","product_id":100039001,"comment_content":"课堂讨论:<br><br>简单说一个本人常用的改善项目可读性的方法:<br>在每一个module&#47;package下编写一个description.md,简要说明是做什么的,有哪些需要注意的地方.<br><br>不会花很多时间,但可以提高项目整体的可维护性.","like_count":24},{"had_liked":false,"id":172767,"user_name":"Jxin","can_delete":false,"product_type":"c1","uid":1251111,"ip_address":"","ucode":"4C03928388C413","user_header":"https://static001.geekbang.org/account/avatar/00/13/17/27/ec30d30a.jpg","comment_is_top":false,"comment_ctime":1579277469,"is_pvip":false,"discussion_count":5,"race_medal":0,"score":"66003786909","product_id":100039001,"comment_content":"1.先提问题：<br>第一块代码里面，存在一点瑕疵:if (calendar.get(Calendar.DAY_OF_MONTH) == 1) { return true; } return false;<br>直接 return calendar.get(Calendar.DAY_OF_MONTH) == 1 ;  即可。<br>2.请老师谈谈你的看法<br>A.boolean isSummer = date.after(SUMMER_START)&amp;&amp;date.before(SUMMER_END);if (isSummer){}；<br>这个场景是定义“isSummer”这个临时变量，还是if(date.after(SUMMER_START)&amp;&amp;date.before(SUMMER_END)){};好点。<br>看过&lt;重构&gt;第三版，里面其实偏向于用函数代替临时变量（变量是魔鬼）。但这可能就会有这种if里面包含比较长的函数调用的场景，可读性其实不好，有点做了两件事的味道。但在代码重构上是比较好的，毕竟没有变量滥用带来的不确定性。拿捏不准，我最后是跟着&lt;重构&gt;的思路走。但这里特请栏主谈谈自己的看法。<br><br>B.boolean isSummer = date.after(SUMMER_START)&amp;&amp;date.before(SUMMER_END); 是否需要写成final boolean isSummer。我的习惯对不可变临时变量都会加final，事实上我基本没有可变临时变量，对可变临时变量很敏感。final会导致语句行变长，但能规范代码，具有明确语义，方便其他人阅读和扩展（约束了行为）。这个也拿捏不准，栏主怎么看？<br><br>C.类中成员属性按字母大小顺序排列。这个感觉不是很合理。拿订单类为例，我会让金额相关字段，地址相关字段，和状态相关字段分隔开各自聚合在一块。这时候就没办法按字母大小排，但语义更强。当然，对金额和地址字段，其实属于值对象，可以单独成类（存对象序列化）。但老项目难有这种设计，往往是一张表平级包含一切。所以这个按大小排序的规范，感觉太“任性”了。 <br><br>3.其他编程规范，篇幅有限，而且是死的东西，不罗列了。感兴趣的同学有时间看看&lt;Effective java&gt;（一礼拜），没时间就看看&lt;阿里开发手册&gt;（2小时）。平时工作重视Sonar的每个告警，慢慢积累就好了。","like_count":16},{"had_liked":false,"id":172569,"user_name":"青青子衿","can_delete":false,"product_type":"c1","uid":1438102,"ip_address":"","ucode":"4A388A3BA70C29","user_header":"https://static001.geekbang.org/account/avatar/00/15/f1/96/9571fa3d.jpg","comment_is_top":false,"comment_ctime":1579225269,"is_pvip":false,"discussion_count":11,"race_medal":0,"score":"61708767413","product_id":100039001,"comment_content":"个人以为还有善用和合理运用各个编程语言提供的语法糖和语言特性。比如Java开发，工作中有的老程序员不喜欢不适应lambda表达式，实际上合理恰当的使用lambda表达式可以让代码简洁明了","like_count":14,"discussions":[{"author":{"id":1982711,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/40/f7/e62bbc62.jpg","nickname":"zh","note":"","ucode":"98772B1B6C6E06","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":341012,"discussion_content":"lambda表达式简洁是简洁，但很多时候并不明了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1610261938,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1768828,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/fd/7c/6ba1a1fd.jpg","nickname":"低调","note":"","ucode":"2C24C4A8B232E6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":321369,"discussion_content":"lambda用起来坑也多哦，考虑性能和逃逸分析，用好的不多，门槛也有，函数式编程会长时间争论下去","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1604570932,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1236320,"avatar":"https://static001.geekbang.org/account/avatar/00/12/dd/60/a6a4f79a.jpg","nickname":"笨鸟","note":"","ucode":"68029ADA76AA5A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":309083,"discussion_content":"使用lambda表达式增加了老程序员对代码理解的成本","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1601187274,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":3,"child_discussions":[{"author":{"id":1438102,"avatar":"https://static001.geekbang.org/account/avatar/00/15/f1/96/9571fa3d.jpg","nickname":"青青子衿","note":"","ucode":"4A388A3BA70C29","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1236320,"avatar":"https://static001.geekbang.org/account/avatar/00/12/dd/60/a6a4f79a.jpg","nickname":"笨鸟","note":"","ucode":"68029ADA76AA5A","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":309266,"discussion_content":"这不是理由，程序员就要不断学习","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1601248373,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":309083,"ip_address":""},"score":309266,"extra":""},{"author":{"id":1236320,"avatar":"https://static001.geekbang.org/account/avatar/00/12/dd/60/a6a4f79a.jpg","nickname":"笨鸟","note":"","ucode":"68029ADA76AA5A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1438102,"avatar":"https://static001.geekbang.org/account/avatar/00/15/f1/96/9571fa3d.jpg","nickname":"青青子衿","note":"","ucode":"4A388A3BA70C29","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":309278,"discussion_content":"并不是每个程序员都认同","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1601252244,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":309266,"ip_address":""},"score":309278,"extra":""},{"author":{"id":1438102,"avatar":"https://static001.geekbang.org/account/avatar/00/15/f1/96/9571fa3d.jpg","nickname":"青青子衿","note":"","ucode":"4A388A3BA70C29","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1236320,"avatar":"https://static001.geekbang.org/account/avatar/00/12/dd/60/a6a4f79a.jpg","nickname":"笨鸟","note":"","ucode":"68029ADA76AA5A","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":309351,"discussion_content":"是吗？哈哈哈","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1601263907,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":309278,"ip_address":""},"score":309351,"extra":""}]},{"author":{"id":1360093,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLEIsgI4ub1VOKWtVOfouAzSqx8Yt8ibQEsAnwNJsJHmuJzzpQqG79HullvYwpic8hgiclgON2GwXSjw/132","nickname":"cv0cv0","note":"","ucode":"93FF9277F03FD0","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":220591,"discussion_content":"推荐使用 kotlin。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585902915,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1077127,"avatar":"https://static001.geekbang.org/account/avatar/00/10/6f/87/669263b4.jpg","nickname":"陈金鑫","note":"","ucode":"609A24832CA80C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1360093,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLEIsgI4ub1VOKWtVOfouAzSqx8Yt8ibQEsAnwNJsJHmuJzzpQqG79HullvYwpic8hgiclgON2GwXSjw/132","nickname":"cv0cv0","note":"","ucode":"93FF9277F03FD0","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":325276,"discussion_content":"为啥不推Scala?","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1605261858,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":220591,"ip_address":""},"score":325276,"extra":""},{"author":{"id":1360093,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLEIsgI4ub1VOKWtVOfouAzSqx8Yt8ibQEsAnwNJsJHmuJzzpQqG79HullvYwpic8hgiclgON2GwXSjw/132","nickname":"cv0cv0","note":"","ucode":"93FF9277F03FD0","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1077127,"avatar":"https://static001.geekbang.org/account/avatar/00/10/6f/87/669263b4.jpg","nickname":"陈金鑫","note":"","ucode":"609A24832CA80C","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":358825,"discussion_content":"scale用来写啥？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1616056364,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":325276,"ip_address":""},"score":358825,"extra":""}]},{"author":{"id":1398824,"avatar":"https://static001.geekbang.org/account/avatar/00/15/58/28/c86340ca.jpg","nickname":"达文西","note":"","ucode":"01C1063F23D634","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":138417,"discussion_content":"lambda表达式用顺手之后真的是神器","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579240629,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1161044,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIcUUoxHNRJLZ9TzY2flSkjiboM4urZYLuApeAw0HTdMXzG40ZDsTcbDFWPfscD6ic6Uj1xkXmQicScA/132","nickname":"时光","note":"","ucode":"E9EDB0C3CA5254","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1398824,"avatar":"https://static001.geekbang.org/account/avatar/00/15/58/28/c86340ca.jpg","nickname":"达文西","note":"","ucode":"01C1063F23D634","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":378861,"discussion_content":"同意，很优雅","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1623470011,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":138417,"ip_address":""},"score":378861,"extra":""}]}]},{"had_liked":false,"id":172500,"user_name":"linlong","can_delete":false,"product_type":"c1","uid":1736463,"ip_address":"","ucode":"294F267F62A9E1","user_header":"https://static001.geekbang.org/account/avatar/00/1a/7f/0f/4874788e.jpg","comment_is_top":false,"comment_ctime":1579193058,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"53118800610","product_id":100039001,"comment_content":"一般大公司都有自己的编程规范，但执行的效果取决于commiter，而最终还是项目交付进度决定的。","like_count":12,"discussions":[{"author":{"id":1188524,"avatar":"https://static001.geekbang.org/account/avatar/00/12/22/ac/fc8e435a.jpg","nickname":"郭凯强","note":"","ucode":"002F58C3640560","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":137934,"discussion_content":"真相了哈哈","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579219502,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":177584,"user_name":"Monday","can_delete":false,"product_type":"c1","uid":1250907,"ip_address":"","ucode":"77B9BACC783598","user_header":"https://static001.geekbang.org/account/avatar/00/13/16/5b/83a35681.jpg","comment_is_top":false,"comment_ctime":1581428815,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"48826069071","product_id":100039001,"comment_content":"为没有代码规范的我们项目，默哀三分钟。<br>","like_count":12,"discussions":[{"author":{"id":1132304,"avatar":"https://static001.geekbang.org/account/avatar/00/11/47/10/2d673601.jpg","nickname":"好饿早知道送外卖了","note":"","ucode":"AED22DB5BF8FC7","race_medal":2,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":170067,"discussion_content":"没有规范无所谓，只要保持好底线。代码就不至于烂到无可救药~","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1581667646,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1236320,"avatar":"https://static001.geekbang.org/account/avatar/00/12/dd/60/a6a4f79a.jpg","nickname":"笨鸟","note":"","ucode":"68029ADA76AA5A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1132304,"avatar":"https://static001.geekbang.org/account/avatar/00/11/47/10/2d673601.jpg","nickname":"好饿早知道送外卖了","note":"","ucode":"AED22DB5BF8FC7","race_medal":2,"user_type":1,"is_pvip":false},"discussion":{"id":309085,"discussion_content":"改离职人员的代码可就由不得你了,增加一个功能,想顺便优化一下,一看得重写所有","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1601187343,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":170067,"ip_address":""},"score":309085,"extra":""}]}]},{"had_liked":false,"id":172545,"user_name":"失火的夏天","can_delete":false,"product_type":"c1","uid":1241770,"ip_address":"","ucode":"10C6E66EB2A65F","user_header":"https://static001.geekbang.org/account/avatar/00/12/f2/aa/32fc0d54.jpg","comment_is_top":false,"comment_ctime":1579222084,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"40233927748","product_id":100039001,"comment_content":"for里面有时候会出现下标0的特殊判断，这个时候就把0下标单独拉出去玩，for从下标1开始。<br><br>我发现我的代码风格居然和争哥有点像，我仿佛在膨胀😁","like_count":10},{"had_liked":false,"id":177726,"user_name":"疯","can_delete":false,"product_type":"c1","uid":1371660,"ip_address":"","ucode":"A4FA44A6F573A4","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epgjuGZNgB6sSJmCIhyfMEbI1x1UbKdUuLudWucGLqib2b2Ob2CeO66x4pV9REHguxbCqgTwzSpWaQ/132","comment_is_top":false,"comment_ctime":1581481859,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"27351285635","product_id":100039001,"comment_content":"文章中：3. 勿用函数参数来控制逻辑，文中意思尽量要拆分接口，但实际业务判断某个参数的时候会加段逻辑处理包含才其中，但是其他逻辑是一致的，拆分的话是否与DRY原则有矛盾，若接口本身是public的呢，是否需要拆分，这个度要怎么把握？","like_count":6},{"had_liked":false,"id":172529,"user_name":"刘大明","can_delete":false,"product_type":"c1","uid":1035081,"ip_address":"","ucode":"83C063FBD9BF2B","user_header":"https://static001.geekbang.org/account/avatar/00/0f/cb/49/0b9ffc8e.jpg","comment_is_top":false,"comment_ctime":1579220505,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"27349024281","product_id":100039001,"comment_content":"1.命名长度问题<br>2.利用上下文简化命名<br>3.命名要可读，可搜索<br>4.如何命名接口和抽象类<br>5.注释应该怎么写<br>6.注释是不是越多越好<br>7.类和函数多大才合适<br>8.一行代码多长才合适<br>9.善于用空行分隔符<br>10.缩进是两格还是四格<br>11.大括号是否需要另起一行<br>12.类中成员的排列顺序<br>13.代码应该分割成更小的单元块<br>14.函数参数不要过多<br>15.不要用函数参数来控制逻辑<br>16.函数设计要职责单一<br>17.移除过深的嵌套<br>18.学会使用解释性变量<br>19.<br>20.统一编码规范<br>这些都是开发过程中，让代码更好的一些编码规范<br>我自己在项目开发过程中也会时刻注意是否符合规范。<br>自己在项目中还遇到很多人提交代码不写注释，<br>因为重构很多注释掉的代码不删除<br>重复代码不提取公共类<br>临时代码随意修改，随意提交线上等等很多代码混乱问题。<br>从自身做起，让代码更加整洁，提交的代码尽量减少代码的坏味道。","like_count":6,"discussions":[{"author":{"id":1035081,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/cb/49/0b9ffc8e.jpg","nickname":"刘大明","note":"","ucode":"83C063FBD9BF2B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":141558,"discussion_content":"哈哈。19项确实没有。争哥也没有写。是的，先做好自己。一起加油。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579430759,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1015483,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/7e/bb/947c329a.jpg","nickname":"程序员小跃","note":"","ucode":"25BB96E0791A60","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":141478,"discussion_content":"19项漏啦。我得到启发：改善代码从我做起，才能去要求别人。所以，先把自己的做好","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579423366,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":172528,"user_name":"连边","can_delete":false,"product_type":"c1","uid":1391748,"ip_address":"","ucode":"54B5DA38449728","user_header":"https://static001.geekbang.org/account/avatar/00/15/3c/84/608f679b.jpg","comment_is_top":false,"comment_ctime":1579220453,"is_pvip":false,"discussion_count":11,"race_medal":0,"score":"14464122341","product_id":100039001,"comment_content":"作为一名phper，这里有很多话想说，但是最后汇成一句话，没有什么参数不是一个数组不能解决的。解决函数嵌套那块，挺实用的。","like_count":3,"discussions":[{"author":{"id":1526729,"avatar":"https://static001.geekbang.org/account/avatar/00/17/4b/c9/2daae009.jpg","nickname":"南田稗草💯","note":"","ucode":"105285DCF44991","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":573692,"discussion_content":"我用map传惨代码扩展性极好🥹","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1653612083,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1200650,"avatar":"https://static001.geekbang.org/account/avatar/00/12/52/0a/65976e95.jpg","nickname":"kougazhang","note":"","ucode":"E9AD678FCEC75D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":539170,"discussion_content":"把参数裹在数组里，牛🐮！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1639630416,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1236320,"avatar":"https://static001.geekbang.org/account/avatar/00/12/dd/60/a6a4f79a.jpg","nickname":"笨鸟","note":"","ucode":"68029ADA76AA5A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":309086,"discussion_content":"php的数组?干什么用的?","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1601187411,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1813775,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/JicGWj4ujfKW2BibbV2BIdiaRVv1SLMCjnriaHjhiaP9Ey751wBp8rwUxJI4Y7eZZb3eHTHbyLXUa8m3a4Dy0QIANTA/132","nickname":"rxliuli","note":"","ucode":"557481BFA3F7B4","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":197318,"discussion_content":"+1: 对于 ts 而言，没有什么参数是一个对象（可以通过解构取值）或元组（应该类似 PHP 中的数组吧）解决不了的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1583417354,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1608798,"avatar":"https://static001.geekbang.org/account/avatar/00/18/8c/5e/8cb6fad1.jpg","nickname":"cbping","note":"","ucode":"16D891E80A352B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":154747,"discussion_content":"调用者会一脸懵逼的！到底是接受多少个参数？那些必须？key写错了？…","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1580179550,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1015483,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/7e/bb/947c329a.jpg","nickname":"程序员小跃","note":"","ucode":"25BB96E0791A60","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":141476,"discussion_content":"秀，我把后端程序用php换成Java的时候，就被array搞的团团转","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579423203,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1228471,"avatar":"https://static001.geekbang.org/account/avatar/00/12/be/b7/638b5d30.jpg","nickname":"白泗小林","note":"","ucode":"CEF6A23B70947D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1015483,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/7e/bb/947c329a.jpg","nickname":"程序员小跃","note":"","ucode":"25BB96E0791A60","race_medal":0,"user_type":1,"is_pvip":true},"discussion":{"id":141509,"discussion_content":"作为java程序员 我在改PHP 代码的时候 也被array 搞的团团转","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579426867,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":141476,"ip_address":""},"score":141509,"extra":""}]},{"author":{"id":1161271,"avatar":"https://static001.geekbang.org/account/avatar/00/11/b8/37/98991aeb.jpg","nickname":"不似旧日","note":"","ucode":"DF4C5E3AB9570C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":141234,"discussion_content":"php看Java的代码能领略到要领么","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579404115,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1391748,"avatar":"https://static001.geekbang.org/account/avatar/00/15/3c/84/608f679b.jpg","nickname":"连边","note":"","ucode":"54B5DA38449728","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1161271,"avatar":"https://static001.geekbang.org/account/avatar/00/11/b8/37/98991aeb.jpg","nickname":"不似旧日","note":"","ucode":"DF4C5E3AB9570C","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":141258,"discussion_content":"还好，我原来是做java的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579405777,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":141234,"ip_address":""},"score":141258,"extra":""}]},{"author":{"id":1161271,"avatar":"https://static001.geekbang.org/account/avatar/00/11/b8/37/98991aeb.jpg","nickname":"不似旧日","note":"","ucode":"DF4C5E3AB9570C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":141233,"discussion_content":"不愧是最好的语言","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579404089,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1094597,"avatar":"https://static001.geekbang.org/account/avatar/00/10/b3/c5/7fc124e2.jpg","nickname":"Liam","note":"","ucode":"1D15D3B64F2606","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":138065,"discussion_content":"不愧是php","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579223244,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":227906,"user_name":"黄林晴","can_delete":false,"product_type":"c1","uid":1362631,"ip_address":"","ucode":"B15C38AECDA88F","user_header":"https://static001.geekbang.org/account/avatar/00/14/ca/c7/00e544c2.jpg","comment_is_top":false,"comment_ctime":1592525591,"is_pvip":false,"replies":[{"id":"84975","content":"你说的没错，关键看这个标记位的判断是放到上层逻辑还是下层逻辑，理论上讲，这种“ugly”的代码尽量放到上层。","user_name":"作者回复","user_name_real":"王争","uid":"1190123","ctime":1593310757,"ip_address":"","comment_id":227906,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10182460183","product_id":100039001,"comment_content":"老师好 现在我是开始二刷 意识到一个问题就是识不要用标记位来控制代码的执行逻辑 但拆分多个函数不也要先判断标记位再执行对应的方法吗","like_count":3,"discussions":[{"author":{"id":1190123,"avatar":"https://static001.geekbang.org/account/avatar/00/12/28/eb/af064421.jpg","nickname":"王争","note":"","ucode":"2B611BE0E0EDD4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":498828,"discussion_content":"你说的没错，关键看这个标记位的判断是放到上层逻辑还是下层逻辑，理论上讲，这种“ugly”的代码尽量放到上层。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1593310757,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":173980,"user_name":"javaadu","can_delete":false,"product_type":"c1","uid":1000519,"ip_address":"","ucode":"8C0B140F1C8992","user_header":"https://static001.geekbang.org/account/avatar/00/0f/44/47/3ddb94d0.jpg","comment_is_top":false,"comment_ctime":1579847182,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"10169781774","product_id":100039001,"comment_content":"打卡30:今日学习《设计模式之美》第33节，主要收获是：复习了改善代码可读性的编程技巧<br>1. 避免多层嵌套、避免复杂的逻辑控制关系，移除过深的嵌套层次，方法包括：去掉多余的 if 或 else 语句，使用 continue、break、return 关键字提前退出嵌套，调整执行顺序来减少嵌套，将部分嵌套逻辑抽象成函数。<br>2. 函数的职责要单一，避免用boolean变量做参数控制函数内部的逻辑<br>3. 尽量抽取出不相关的子问题<br>4. 配合《编写可读代码的艺术》和《代码整洁之道》一起阅读更好","like_count":2},{"had_liked":false,"id":172792,"user_name":"桂城老托尼","can_delete":false,"product_type":"c1","uid":1306032,"ip_address":"","ucode":"139E4B8EE88B79","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJcxSpNMqwqyicMvdOSr9ic0p1ABiauHnv7g7YQVSJuoHPoQbYDu3YzdpgmSAk2KricUBQ5yibWBWIq75w/132","comment_is_top":false,"comment_ctime":1579313627,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10169248219","product_id":100039001,"comment_content":"感谢争哥分享<br>文中提交的技巧都是实际工作中code的原则，可以作为CR时代码规范项的参考标准。 <br>以前经常踩 问题3 的，主要理论依据就是对外隐藏更多的细节，但违反了单一职责。<br>还有更多的代码规约方面的， Google Java代码规约  和 Alibaba Java 代码开发规范 其实都可以作为案头必备手册了，安利一下。 ","like_count":2},{"had_liked":false,"id":244619,"user_name":"小情绪","can_delete":false,"product_type":"c1","uid":1020311,"ip_address":"","ucode":"92D8081DB8DB45","user_header":"https://static001.geekbang.org/account/avatar/00/0f/91/97/3762ca10.jpg","comment_is_top":false,"comment_ctime":1598596930,"is_pvip":false,"replies":[{"id":"90134","content":"Android是收购的吧������","user_name":"作者回复","user_name_real":"王争","uid":"1190123","ctime":1598833903,"ip_address":"","comment_id":244619,"utype":1}],"discussion_count":2,"race_medal":0,"score":"5893564226","product_id":100039001,"comment_content":"王争老师，我瞅了一眼Android的java层源代码，类里面的import包没有按字母从小到大，作用域也没有按大小依次排列，是不是Google并不是严格执行这套标准，还是别的原因？","like_count":1},{"had_liked":false,"id":224225,"user_name":"张三丰","can_delete":false,"product_type":"c1","uid":1155275,"ip_address":"","ucode":"3A6215A40B3B21","user_header":"https://static001.geekbang.org/account/avatar/00/11/a0/cb/aab3b3e7.jpg","comment_is_top":false,"comment_ctime":1591319506,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"5886286802","product_id":100039001,"comment_content":"这段代码有违反DRY原则的嫌疑。<br><br>public List&lt;Transaction&gt; selectTransactions(Long userId, Date startDate, Date endDate) {<br>  if (startDate != null &amp;&amp; endDate != null) {<br>    &#47;&#47; 查询两个时间区间的transactions<br>  }<br>  if (startDate != null &amp;&amp; endDate == null) {<br>    &#47;&#47; 查询startDate之后的所有transactions<br>  }<br>  if (startDate == null &amp;&amp; endDate != null) {<br>    &#47;&#47; 查询endDate之前的所有transactions<br>  }<br>  if (startDate == null &amp;&amp; endDate == null) {<br>    &#47;&#47; 查询所有的transactions<br>  }<br>}<br><br>&#47;&#47; 拆分成多个public函数，更加清晰、易用<br>public List&lt;Transaction&gt; selectTransactionsBetween(Long userId, Date startDate, Date endDate) {<br>  return selectTransactions(userId, startDate, endDate);<br>}<br><br>public List&lt;Transaction&gt; selectTransactionsStartWith(Long userId, Date startDate) {<br>  return selectTransactions(userId, startDate, null);<br>}<br><br>public List&lt;Transaction&gt; selectTransactionsEndWith(Long userId, Date endDate) {<br>  return selectTransactions(userId, null, endDate);<br>}<br><br>public List&lt;Transaction&gt; selectAllTransactions(Long userId) {<br>  return selectTransactions(userId, null, null);<br>}<br><br>private List&lt;Transaction&gt; selectTransactions(Long userId, Date startDate, Date endDate) {<br>  &#47;&#47; ...<br>}","like_count":1,"discussions":[{"author":{"id":1075267,"avatar":"https://static001.geekbang.org/account/avatar/00/10/68/43/1fe64086.jpg","nickname":"zero_","note":"","ucode":"14D3AD3D997112","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":588950,"discussion_content":"这块代码有点搞不明白","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1664249370,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"广东"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":182609,"user_name":"Geek_deb968","can_delete":false,"product_type":"c1","uid":1440025,"ip_address":"","ucode":"2305597B009AF3","user_header":"https://static001.geekbang.org/account/avatar/00/15/f9/19/7c3b12ee.jpg","comment_is_top":false,"comment_ctime":1582815280,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"5877782576","product_id":100039001,"comment_content":"我感觉最难实现的还是，在不断变化的需求代码重用及原先的命名跟不上变化了","like_count":1},{"had_liked":false,"id":174809,"user_name":"batman","can_delete":false,"product_type":"c1","uid":1266482,"ip_address":"","ucode":"73C30ACFC0D612","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/IIkdC2gohpcibib0AJvSdnJQefAuQYGlLySQOticThpF7Ck9WuDUQLJlgZ7ic13LIFnGBXXbMsSP3nZsbibBN98ZjGA/132","comment_is_top":false,"comment_ctime":1580394936,"is_pvip":true,"discussion_count":1,"race_medal":1,"score":"5875362232","product_id":100039001,"comment_content":"老师公司制定的统一编码规范长什么样子，能不能供大家学习学习","like_count":1,"discussions":[{"author":{"id":1055334,"avatar":"https://static001.geekbang.org/account/avatar/00/10/1a/66/2d9db9ed.jpg","nickname":"苦行僧","note":"","ucode":"726024A9A9CF44","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":278824,"discussion_content":"看看阿里的java开发规范","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1591238890,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":172701,"user_name":"李小四","can_delete":false,"product_type":"c1","uid":1112747,"ip_address":"","ucode":"2A766BE16B276B","user_header":"https://static001.geekbang.org/account/avatar/00/10/fa/ab/0d39e745.jpg","comment_is_top":false,"comment_ctime":1579253654,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5874220950","product_id":100039001,"comment_content":"设计模式_33<br>使用参数作为控制逻辑，这一点深有感触，除了故意设计成这样，还有一些是改成这样的(不想改程序结构，或者不能改)，在原来的基础上扩展功能，这样加一个用于控制逻辑的参数，程序就分成了两部分；如果后面再加，代码分成2^n个部分，而是会有大量的重复代码，同一个逻辑要该好几个地方，很容易忘。<br><br>对于代码质量，我有些个人的心得就是：写完代码之后，再看看，如果发现“不舒服”的地方，多想一想。","like_count":1},{"had_liked":false,"id":172517,"user_name":"Chen","can_delete":false,"product_type":"c1","uid":1503113,"ip_address":"","ucode":"C1128558AB5BC4","user_header":"https://static001.geekbang.org/account/avatar/00/16/ef/89/8c73a24d.jpg","comment_is_top":false,"comment_ctime":1579218005,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"5874185301","product_id":100039001,"comment_content":"函数中不要使用参数来做代码执行逻辑的控制。我之前写代码从来没关注到这点，学习了","like_count":1,"discussions":[{"author":{"id":1385377,"avatar":"https://static001.geekbang.org/account/avatar/00/15/23/a1/b08f3ee7.jpg","nickname":"何妨","note":"","ucode":"EC3983BFF7992A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":137975,"discussion_content":"这个还是要看情况，函数影响范围小而且总成对出现还是合起来好些，文中也提到了。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1579221189,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":354014,"user_name":"付磊","can_delete":false,"product_type":"c1","uid":1924882,"ip_address":"上海","ucode":"719BD0B72FF2AF","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/aXnFBB3XD3lwB3jf1A0PQqT66aJy4yycbRupJI3ia2CUFMuLsvYthM41TDopIIjL8kz7k2xE5vrAtQggQ6Jt8Zw/132","comment_is_top":false,"comment_ctime":1660016119,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1660016119","product_id":100039001,"comment_content":"关于老师说的第四点，函数设计要职责单一这个代码案例我认为不是很好，判断用户是否存在本身就是一个单一的事情,内部三个判断是属于用户是否存在不可少的判断，这样可读性会更好也更容易理解一些，当然如果确实有业务需要调用其中某个判断，那么可以将其抽出一个函数，当然用户是否存在这个函数也不可少，只是从硬编码改成了调用刚刚抽的函数","like_count":0},{"had_liked":false,"id":350299,"user_name":"谁都会变","can_delete":false,"product_type":"c1","uid":1195017,"ip_address":"","ucode":"9965748F7EBB57","user_header":"https://static001.geekbang.org/account/avatar/00/12/3c/09/b7f0eac6.jpg","comment_is_top":false,"comment_ctime":1656763352,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1656763352","product_id":100039001,"comment_content":"那个if else得处理逻辑没看懂，不可以这样写吗，有大佬能讲讲吗","like_count":0},{"had_liked":false,"id":327948,"user_name":"idiot","can_delete":false,"product_type":"c1","uid":2526391,"ip_address":"","ucode":"D7A6E980B530B4","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/fcftgBsticCicEEkuzB0GTkHIocX62YVTSvnhR1c94sccj42lVaYXrmcZyhzUI3l9NcvuN1rXLhXt2eBrZZ0Tw7A/132","comment_is_top":false,"comment_ctime":1640417463,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1640417463","product_id":100039001,"comment_content":"“3. 勿用函数参数来控制逻辑”，里面的例子没看懂。selectTransactions那个例子，拆分之后还是要调用一个公共的selectTransactions，这个新的公共函数不还是要判断null做不同分支处理吗？唯一区别是这个公共函数可以变成private，给用户用的是拆分后的不带控制参数的接口。<br>对于主体逻辑一致，只有很小差异的情况，如果不通过参数控制，想不明白怎么才能避免产生重复代码。","like_count":0},{"had_liked":false,"id":326886,"user_name":"BUG始终快我一步","can_delete":false,"product_type":"c1","uid":2869991,"ip_address":"","ucode":"230981531A30E2","user_header":"https://static001.geekbang.org/account/avatar/00/2b/ca/e7/454f7f0e.jpg","comment_is_top":false,"comment_ctime":1639733216,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1639733216","product_id":100039001,"comment_content":"java语言中可以将一些静态常量的名字设为 中文嘛?  因为有的时候可能是为了进行判断业务逻辑 感觉都是用0123那种进行判断 代码可读性太差 中文会影响项目执行速度嘛?    小公司 没有外国程序员","like_count":0},{"had_liked":false,"id":325456,"user_name":"锟斤拷","can_delete":false,"product_type":"c1","uid":2445197,"ip_address":"","ucode":"194F4082A2546A","user_header":"https://static001.geekbang.org/account/avatar/00/25/4f/8d/36311efc.jpg","comment_is_top":false,"comment_ctime":1638961607,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1638961607","product_id":100039001,"comment_content":"不错，今天的内容很实用","like_count":0},{"had_liked":false,"id":316229,"user_name":"charmsongo","can_delete":false,"product_type":"c1","uid":1609051,"ip_address":"","ucode":"4FBEE716E93A1A","user_header":"https://static001.geekbang.org/account/avatar/00/18/8d/5b/383a49e4.jpg","comment_is_top":false,"comment_ctime":1634207573,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1634207573","product_id":100039001,"comment_content":"1、把代码分割成更小的单元块<br>\t模块和类职责单一，方法逻辑提取主干，抽取方法包装细节，最好业务流程顺下来，方便理解<br>2、避免函数参数过多<br>\t函数参数大于5个时就要考虑重构函数了<br>\t考虑函数是否单一，能否拆分<br>\t考虑参数是否可以封装成对象。对外暴露的接口参数是对象好处是，添加参数可能对外部调用是无损的<br>3、勿用函数参数来控制逻辑<br>\t最好不用true、false来作为入参控制函数内部流程，破环函数单一性，最好拆分2个函数，除非函数是私有的，并且2个逻辑同时存在<br>4、函数设计要职责单一<br>\t函数对外提供的功能能多单一就多单一<br>5、移除过深的嵌套层次<br>\t编程语言提供的 continue、break、return 关键字，提前退出嵌套<br>\t可以通过卫语言，调整执行顺序来减少嵌套<br>\t将部分嵌套逻辑封装成函数调用，以此来减少嵌套。<br>6.、学会使用解释性变量<br>\t常量取代魔法参数<br>\t使用解释性变量来解释复杂表达式","like_count":0},{"had_liked":false,"id":291491,"user_name":"😳","can_delete":false,"product_type":"c1","uid":1452857,"ip_address":"","ucode":"9AFB87EF308539","user_header":"https://static001.geekbang.org/account/avatar/00/16/2b/39/19041d78.jpg","comment_is_top":false,"comment_ctime":1620306299,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1620306299","product_id":100039001,"comment_content":"不要给变量名起魔术字，比如1，l，o，0","like_count":0},{"had_liked":false,"id":288566,"user_name":"Graham","can_delete":false,"product_type":"c1","uid":1994570,"ip_address":"","ucode":"C2545DE16EC3DD","user_header":"","comment_is_top":false,"comment_ctime":1618540373,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1618540373","product_id":100039001,"comment_content":"函数的参数不要超过4，5个，<br>对于boolean 类型的参数，如果要用它去做判断条件，<br>还不如在外层的时候，<br>if (! flag):<br>   return;<br>##<br>callYourFunc()","like_count":0},{"had_liked":false,"id":286292,"user_name":"云","can_delete":false,"product_type":"c1","uid":2107468,"ip_address":"","ucode":"705DF6B2A7654B","user_header":"https://static001.geekbang.org/account/avatar/00/20/28/4c/afe2ab34.jpg","comment_is_top":false,"comment_ctime":1617242319,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1617242319","product_id":100039001,"comment_content":"关于代码条件判断逻辑过多，一般都是早退原则。 ","like_count":0},{"had_liked":false,"id":278122,"user_name":"辉","can_delete":false,"product_type":"c1","uid":1697810,"ip_address":"","ucode":"0D7B2C24BA8BD2","user_header":"https://static001.geekbang.org/account/avatar/00/19/e8/12/74f387c8.jpg","comment_is_top":false,"comment_ctime":1612770081,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1612770081","product_id":100039001,"comment_content":"关于编程规范，有需要的可以去参考阿里的java开发手册。那里面讲的更加细致。","like_count":0},{"had_liked":false,"id":277720,"user_name":"猴精鸭","can_delete":false,"product_type":"c1","uid":1514660,"ip_address":"","ucode":"7513DC4138E031","user_header":"https://static001.geekbang.org/account/avatar/00/17/1c/a4/202dde43.jpg","comment_is_top":false,"comment_ctime":1612529225,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1612529225","product_id":100039001,"comment_content":"基本上都是我平时开发是遵守的规范突然，觉得自己好厉害，哈哈哈","like_count":0},{"had_liked":false,"id":263935,"user_name":"淤白","can_delete":false,"product_type":"c1","uid":1206503,"ip_address":"","ucode":"D1E65DC40DAF68","user_header":"https://static001.geekbang.org/account/avatar/00/12/68/e7/ee47d0e2.jpg","comment_is_top":false,"comment_ctime":1606298174,"is_pvip":false,"replies":[{"id":"96085","content":"加油","user_name":"作者回复","user_name_real":"王争","uid":"1190123","ctime":1606700685,"ip_address":"","comment_id":263935,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1606298174","product_id":100039001,"comment_content":"Tap键、CodeReview没有做到，别的都在无意识之间做到了，打个卡。。。","like_count":0,"discussions":[{"author":{"id":1190123,"avatar":"https://static001.geekbang.org/account/avatar/00/12/28/eb/af064421.jpg","nickname":"王争","note":"","ucode":"2B611BE0E0EDD4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":510356,"discussion_content":"加油","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1606700685,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":258870,"user_name":"低调","can_delete":false,"product_type":"c1","uid":1768828,"ip_address":"","ucode":"2C24C4A8B232E6","user_header":"https://static001.geekbang.org/account/avatar/00/1a/fd/7c/6ba1a1fd.jpg","comment_is_top":false,"comment_ctime":1604570992,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1604570992","product_id":100039001,"comment_content":"函数的行数建议参考编译器方法内联优化的知识一起说下","like_count":0},{"had_liked":false,"id":257741,"user_name":"郑大钱","can_delete":false,"product_type":"c1","uid":1503067,"ip_address":"","ucode":"114CF48056880E","user_header":"https://static001.geekbang.org/account/avatar/00/16/ef/5b/ff28088f.jpg","comment_is_top":false,"comment_ctime":1604111902,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1604111902","product_id":100039001,"comment_content":"激动的心，颤抖的手，我几乎都做到了，有木有！<br>对于“避免过深的嵌套”很有感触，记得是在一个技术晚宴上，老大说：<br>我们搞技术的人呀，对技术还是要有一点洁癖，写出来的代码要规整。正面看整洁，转90度看，依然要保持整洁。不要因为嵌套过度让代码看起来坑坑洼洼的。<br>自此以后一段时间，我都把代码规整当作写好代码的目标，也总结出了和文章类似的技巧：<br>1. 合并条件，移除不必要的if else<br>2. 调整执行顺序<br>3. 提前退出嵌套<br>4. 将嵌套逻辑单独封装<br>现在回想起来，当时的优化嵌套深度也是一个可一集中资源优化的点，也是一个好的战略。","like_count":0},{"had_liked":false,"id":255826,"user_name":"大力水手Jerry","can_delete":false,"product_type":"c1","uid":1227840,"ip_address":"","ucode":"E4A6C71E275DB5","user_header":"https://static001.geekbang.org/account/avatar/00/12/bc/40/2279cfb5.jpg","comment_is_top":false,"comment_ctime":1603439876,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1603439876","product_id":100039001,"comment_content":"这节课的几条规范大致可分为三类：<br>1. 模块化。自顶向下的分解，利用解释性变量（定义常量、解释性变量、新的子函数）都是模块化的体现<br>2. 语义单一性。函数的功能单一的深层原因是应保持对象（变量、函数、类）的语义唯一，避免上层使用者考虑过多细节<br>3. 减少嵌套。关键是将退出的判断条件提前。","like_count":0},{"had_liked":false,"id":250655,"user_name":"笨鸟","can_delete":false,"product_type":"c1","uid":1236320,"ip_address":"","ucode":"68029ADA76AA5A","user_header":"https://static001.geekbang.org/account/avatar/00/12/dd/60/a6a4f79a.jpg","comment_is_top":false,"comment_ctime":1601187513,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1601187513","product_id":100039001,"comment_content":"勿用参数判断逻辑,我想问一下,根据这个参数判断的逻辑只有一行不一样,这样也需要另起一个吗?重构离职女同事的代码,一脸懵逼,几乎一模一样的函数写了一堆...","like_count":0},{"had_liked":false,"id":250291,"user_name":"Viva5649","can_delete":false,"product_type":"c1","uid":1334628,"ip_address":"","ucode":"9781D8FDBD426A","user_header":"https://static001.geekbang.org/account/avatar/00/14/5d/64/9602fa2c.jpg","comment_is_top":false,"comment_ctime":1601014549,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1601014549","product_id":100039001,"comment_content":"当时买设计模式这门课的时候，没想到还有跟这么多与设计原则和编程规范相关的内容，看到现在感触还是很深的，在许多内容上有很强烈的共鸣。我个人是个强迫症，对于代码风格十分的挑剔，很庆幸的是自己在工作过程养成的许多习惯都与课程中提到的设计原则和编程规范不谋而合。然而在实际工作中，大多数的同事还是属于那种不注重细节只管实现功能的类型，不仅有工作了几年的熟练工，还有工作了10年以上的老员工，团队内也几乎不进行CodeReview，只有偶尔的线上代码审核。希望自己在今后能够在团队中多做些设计模式方面内容的分享，起到带头作用，把优秀的编程思想传播给更多的同事。","like_count":0},{"had_liked":false,"id":246957,"user_name":"宇天飞","can_delete":false,"product_type":"c1","uid":1126444,"ip_address":"","ucode":"3FB37D1E2DAA61","user_header":"https://static001.geekbang.org/account/avatar/00/11/30/2c/06375913.jpg","comment_is_top":false,"comment_ctime":1599540820,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1599540820","product_id":100039001,"comment_content":"空格，将格式更清晰，","like_count":0},{"had_liked":false,"id":241523,"user_name":"记事本","can_delete":false,"product_type":"c1","uid":1362659,"ip_address":"","ucode":"76F2CAFA309437","user_header":"https://static001.geekbang.org/account/avatar/00/14/ca/e3/447aff89.jpg","comment_is_top":false,"comment_ctime":1597322887,"is_pvip":true,"replies":[{"id":"89209","content":"文章中有解释<br>","user_name":"作者回复","user_name_real":"王争","uid":"1190123","ctime":1597408590,"ip_address":"","comment_id":241523,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1597322887","product_id":100039001,"comment_content":"为什么不能用tab缩进？","like_count":0},{"had_liked":false,"id":236900,"user_name":"漂浮群岛","can_delete":false,"product_type":"c1","uid":1308388,"ip_address":"","ucode":"395F8E168562F6","user_header":"https://static001.geekbang.org/account/avatar/00/13/f6/e4/b6ad9bbd.jpg","comment_is_top":false,"comment_ctime":1595580193,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1595580193","product_id":100039001,"comment_content":"使用解释性变量替代复杂表达式很受用！！","like_count":0},{"had_liked":false,"id":232509,"user_name":"冬渐暖","can_delete":false,"product_type":"c1","uid":1586800,"ip_address":"","ucode":"907E41AAE9A36C","user_header":"https://static001.geekbang.org/account/avatar/00/18/36/70/00122b24.jpg","comment_is_top":false,"comment_ctime":1594024066,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1594024066","product_id":100039001,"comment_content":"一行代码多长最合适？最好不要超过 IDE 的显示宽度。<br>平时写完代码的时候都会ctrl+alt+l格式化部分代码的，所以不会超过一行的哈哈<br><br>&#47;&#47; <br>针对   “3. 勿用函数参数来控制逻辑”的“根据参数是否为 null”来控制逻辑的情况”  和“4. 函数设计要职责单一”<br>记得你之前说 “设计接口的时候，我们要多思考一下，这样的接口设计是否足够通用，是否能够做到在替换具体的接口实现的时候，不需要任何接口定义的改动。” <br>这样是否满足你说的接口要有通用性，现在又功能单一。。。<br>&#47;&#47; <br>还有“5. 移除过深的嵌套层次”中的，“用编程语言提供的 continue、break、return 关键字，提前退出嵌套。”<br>用这些会不会加大代码的阅读难度?因为这个和三目运算符一样，经常用的人容易理解，但是后台不一定所有人都和自己一样<br><br>","like_count":0},{"had_liked":false,"id":229158,"user_name":"微末凡尘","can_delete":false,"product_type":"c1","uid":1099525,"ip_address":"","ucode":"25EDFD0914D0F4","user_header":"https://static001.geekbang.org/account/avatar/00/10/c7/05/19c5c255.jpg","comment_is_top":false,"comment_ctime":1592911074,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1592911074","product_id":100039001,"comment_content":"尽可能把判断错误很明显的代码写在前面，减少if else","like_count":0},{"had_liked":false,"id":229155,"user_name":"微末凡尘","can_delete":false,"product_type":"c1","uid":1099525,"ip_address":"","ucode":"25EDFD0914D0F4","user_header":"https://static001.geekbang.org/account/avatar/00/10/c7/05/19c5c255.jpg","comment_is_top":false,"comment_ctime":1592910605,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1592910605","product_id":100039001,"comment_content":"合理使用语言本身自带的函数和特性，也可以有效的提高代码的整洁度，比如php语言中可以使用array_map代替foreach循环","like_count":0},{"had_liked":false,"id":220754,"user_name":"未来小娃","can_delete":false,"product_type":"c1","uid":1047329,"ip_address":"","ucode":"477D166EBB6B70","user_header":"https://static001.geekbang.org/account/avatar/00/0f/fb/21/d017438c.jpg","comment_is_top":false,"comment_ctime":1590319372,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1590319372","product_id":100039001,"comment_content":"【设计模式笔记33】20200524<br>今天主要对“不要使用参数“控制代码逻辑深有感触，首先这么做有什么问题呢？首先肯定是不满足单一职责原则，其次增加了使用成本。因为只要使用了布尔参数必然要做的就不止一件事了，你可能会说都是一类的，但是如果要新增了一种标识是不是还有可能增加参数呢，这样影响就很大了。方法也很简单拆分为多个函数或者通过参数对象，要注意的是参数对象内部最好不要有布尔参数。最近在做组内的开发规范制定，联想到的一个问题是通过参数修改字段属性，这种做法也不好，参数是引用类型那么传递的是引用地址，修改后后面的函数拿到的值就不是原始的了，一般这种需要修改对象属性的情况可以考虑引入额外的上下文对象解决","like_count":0},{"had_liked":false,"id":219666,"user_name":"达文西","can_delete":false,"product_type":"c1","uid":1398824,"ip_address":"","ucode":"01C1063F23D634","user_header":"https://static001.geekbang.org/account/avatar/00/15/58/28/c86340ca.jpg","comment_is_top":false,"comment_ctime":1590060327,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1590060327","product_id":100039001,"comment_content":"都是非常实用的编程技巧","like_count":0},{"had_liked":false,"id":219229,"user_name":"feifei","can_delete":false,"product_type":"c1","uid":1258380,"ip_address":"","ucode":"BFA3BE8D8773A7","user_header":"https://static001.geekbang.org/account/avatar/00/13/33/8c/23eef8d7.jpg","comment_is_top":false,"comment_ctime":1589969119,"is_pvip":false,"replies":[{"id":"86625","content":"你说的没错！拆太细、太小的函数，也没意思，读代码的时候跳来跳去，容易打断思路","user_name":"作者回复","user_name_real":"王争","uid":"1190123","ctime":1594783919,"ip_address":"","comment_id":219229,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1589969119","product_id":100039001,"comment_content":"这个if else拆的函数太多了，类就大了，类大了，同样阅读性很差，找一个方法，翻来翻去的，所以我觉得只要方法不是太长，就不必要拆开多个小的方法，老师觉得呢","like_count":0,"discussions":[{"author":{"id":1190123,"avatar":"https://static001.geekbang.org/account/avatar/00/12/28/eb/af064421.jpg","nickname":"王争","note":"","ucode":"2B611BE0E0EDD4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":495726,"discussion_content":"你说的没错！拆太细、太小的函数，也没意思，读代码的时候跳来跳去，容易打断思路","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1594783919,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":219070,"user_name":"L!en6o","can_delete":false,"product_type":"c1","uid":1054472,"ip_address":"","ucode":"E0931CB8998260","user_header":"https://static001.geekbang.org/account/avatar/00/10/17/08/566fb246.jpg","comment_is_top":false,"comment_ctime":1589939385,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1589939385","product_id":100039001,"comment_content":"回头看此文章，发现自己不知不觉都已经符合了全文提到的几点。","like_count":0},{"had_liked":false,"id":218317,"user_name":"炫炫","can_delete":false,"product_type":"c1","uid":1358609,"ip_address":"","ucode":"FDC7A0C6E08B02","user_header":"https://static001.geekbang.org/account/avatar/00/14/bb/11/7069b8eb.jpg","comment_is_top":false,"comment_ctime":1589778298,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1589778298","product_id":100039001,"comment_content":"不要在函数中使用布尔类型的标识参数来控制内部逻辑，true 的时候走这块逻辑，false 的时候走另一块逻辑。这明显违背了单一职责原则和接口隔离原则。我建议将其拆成两个函数，可读性上也要更好。这个深有感触","like_count":0},{"had_liked":false,"id":215821,"user_name":"阿毅","can_delete":false,"product_type":"c1","uid":1126482,"ip_address":"","ucode":"5B006F905A1FDE","user_header":"https://static001.geekbang.org/account/avatar/00/11/30/52/7880dcf0.jpg","comment_is_top":false,"comment_ctime":1589111081,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1589111081","product_id":100039001,"comment_content":"关于代码层级，还有其他的方法，比如：<br>1、逆向思维，不要老是判断 != null , 而是要用逆向思维，判断 == null 的情况；<br>2、使用卫语句；<br>3、封装为函数；<br>4、使用设计模式解决 多个if的问题。","like_count":0},{"had_liked":false,"id":203423,"user_name":"墨鱼","can_delete":false,"product_type":"c1","uid":1022720,"ip_address":"","ucode":"8FB5E4DCB8A024","user_header":"https://static001.geekbang.org/account/avatar/00/0f/9b/00/654be3f7.jpg","comment_is_top":false,"comment_ctime":1586187923,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1586187923","product_id":100039001,"comment_content":"赞同争哥说的，统一用一套标准，然后 codereview。<br><br>","like_count":0},{"had_liked":false,"id":197756,"user_name":"秋风画扇","can_delete":false,"product_type":"c1","uid":1132356,"ip_address":"","ucode":"5BCBC1422C51EC","user_header":"https://static001.geekbang.org/account/avatar/00/11/47/44/964aa665.jpg","comment_is_top":false,"comment_ctime":1585396983,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1585396983","product_id":100039001,"comment_content":"看多了优秀的开源代码，就能很轻松的找出坏味道。跟练书法一个道理，多看好的作品审美能力也会提升。","like_count":0},{"had_liked":false,"id":196573,"user_name":"成活","can_delete":false,"product_type":"c1","uid":1734795,"ip_address":"","ucode":"F8840EE4DC3969","user_header":"https://static001.geekbang.org/account/avatar/00/1a/78/8b/421cb2c4.jpg","comment_is_top":false,"comment_ctime":1585293912,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1585293912","product_id":100039001,"comment_content":"这三章讲的规范我大多数都有遵守，感人。虽然无力改变项目中*一样的逻辑，但遇到能改的规范问题还是顺手给改了","like_count":0},{"had_liked":false,"id":186352,"user_name":"雷小鸿","can_delete":false,"product_type":"c1","uid":1368897,"ip_address":"","ucode":"424DC9A532FFD7","user_header":"https://static001.geekbang.org/account/avatar/00/14/e3/41/bd0e3a04.jpg","comment_is_top":false,"comment_ctime":1583829419,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1583829419","product_id":100039001,"comment_content":"把多的参数方法，拆分成短的，多个方法。把在一个方法里面一直判断的方法，拆分成多个单个独立的方法，这点以后得注意以前注意的少！","like_count":0},{"had_liked":false,"id":184756,"user_name":"安静","can_delete":false,"product_type":"c1","uid":1212634,"ip_address":"","ucode":"7C4DB6D81A48EB","user_header":"https://static001.geekbang.org/account/avatar/00/12/80/da/9c0c458c.jpg","comment_is_top":false,"comment_ctime":1583396745,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1583396745","product_id":100039001,"comment_content":"这些规范正是很多开发团队忽略的东西，一味得快速响应业务需求，而造成垃圾代码太多，这些章节单看好像都很通俗简单，但是作为一个团队leader，真的要将这些规范融入到团队管理中，不能觉得这些是小事情而忽略。而且看完这些章节之后，我觉得在项目设计初期，类图的呈现真的很重要。还有就是code review真的很重要，leader可以了解熟悉业务需求的实现细节，实施者也能从code review中学到很多。","like_count":0},{"had_liked":false,"id":183876,"user_name":"Heaven","can_delete":false,"product_type":"c1","uid":1694207,"ip_address":"","ucode":"FA33FBCC66C911","user_header":"https://static001.geekbang.org/account/avatar/00/19/d9/ff/b23018a6.jpg","comment_is_top":false,"comment_ctime":1583152454,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1583152454","product_id":100039001,"comment_content":"对于这个问题,我想了很久,觉得可以从函数内部的结构入手,除了擅长使用空行外,还尽量将相同类型的变量放在一起,我个人风格就是将可以封装的初始化new的对象,放在一开始,并逐个介绍一下,方便阅读者去理解,还有就是书写配置文件的时候,对于相同的配置项,比如配置一些外部url,可以将其的公用ip抽取出来,形成一个公用的配置项,然后其配置项直接引用即可,方便日后的修改<br>我个人还有一个问题,对于老师说的通过true或者false,参数是否为null来控制函数逻辑,在传统MVC三层架构中,我们需要和前端交互时候,能否在Controller层,让其传入true或者false这样的一个参数,然后我在Controller层判断完成后调用不同的Service层方法,或者创建不同的Domain类.这样是否可行?不然的话,我需要暴露更多的接口给页面,反而让前段和我更难适配<br>","like_count":0},{"had_liked":false,"id":183813,"user_name":"去777","can_delete":false,"product_type":"c1","uid":1608726,"ip_address":"","ucode":"8EF8CF537ABED3","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/eVgcqg5p554rB5Oxs5uOBRtiaTkaGJoPf8IODUWdRPicgUonTtCyK0YJ8t0hTAtHoSMAr8jZNWwJgQtMu5NMcS0w/132","comment_is_top":false,"comment_ctime":1583139159,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1583139159","product_id":100039001,"comment_content":"魔法数字 哈哈哈","like_count":0,"discussions":[{"author":{"id":1488356,"avatar":"https://static001.geekbang.org/account/avatar/00/16/b5/e4/e6faf686.jpg","nickname":"握了个大蚂蚱","note":"","ucode":"AD34AD4FA37371","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":297602,"discussion_content":"可爱","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1596982202,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":181546,"user_name":"否极泰来","can_delete":false,"product_type":"c1","uid":1439355,"ip_address":"","ucode":"C249173266251A","user_header":"https://static001.geekbang.org/account/avatar/00/15/f6/7b/b6abcbbe.jpg","comment_is_top":false,"comment_ctime":1582556968,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1582556968","product_id":100039001,"comment_content":"不要在函数中使用布尔类型的标识参数来控制内部逻辑，true 的时候走这块逻辑，false 的时候走另一块逻辑。<br>这个我经常干。。。以后改改吧～","like_count":0},{"had_liked":false,"id":179229,"user_name":"Joker","can_delete":false,"product_type":"c1","uid":1156592,"ip_address":"","ucode":"126AF848001A1E","user_header":"https://static001.geekbang.org/account/avatar/00/11/a5/f0/8648c464.jpg","comment_is_top":false,"comment_ctime":1581940755,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1581940755","product_id":100039001,"comment_content":"看到函数多参数的解决方法，就想到以前项目，项目负责人就喜欢吧多个参数封装到一个map里面，然后各种put，get，转换。。","like_count":0},{"had_liked":false,"id":178714,"user_name":"helloworld","can_delete":false,"product_type":"c1","uid":1015754,"ip_address":"","ucode":"00DF2FEC58D2E6","user_header":"https://static001.geekbang.org/account/avatar/00/0f/7f/ca/ea85bfdd.jpg","comment_is_top":false,"comment_ctime":1581783737,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1581783737","product_id":100039001,"comment_content":"印象深刻的有：函数不要通过参数的值的判断来执行不同的逻辑；可以将一些逻辑提取为函数减少if-else嵌套；可以通过函数重载的形式来减少函数参数的个数","like_count":0},{"had_liked":false,"id":177682,"user_name":"wind","can_delete":false,"product_type":"c1","uid":1297833,"ip_address":"","ucode":"872D0C7F98D296","user_header":"https://static001.geekbang.org/account/avatar/00/13/cd/a9/f89d841c.jpg","comment_is_top":false,"comment_ctime":1581473051,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1581473051","product_id":100039001,"comment_content":"那个continue的例子我觉得改之前和改之后没啥区别啊? <br>10行代码在if里又不会走到.<br><br>还有我数来数去加上统一规范也才19条, 没有20条啊?","like_count":0},{"had_liked":false,"id":176751,"user_name":"DullBird","can_delete":false,"product_type":"c1","uid":1110494,"ip_address":"","ucode":"80E2FD5F9687CB","user_header":"https://static001.geekbang.org/account/avatar/00/10/f1/de/3ebcbb3f.jpg","comment_is_top":false,"comment_ctime":1581154829,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1581154829","product_id":100039001,"comment_content":"对于不要把控制逻辑参数暴露出来，而是拆分成多个方案。这个点。我有点疑惑。<br>1. 比方说有个组织查询组织下人的抽象，暴露了listUserByNode()的接口<br>2. 组织包括(部门-员工),(班级-学生),由于某种原因，有4张表，部门表，员工，班级，学生。<br>3. 如果我只想查询学生的时候 调用 listUserByNode()，传入type=student，但是由于底层表是分离的，实际上执行了另一段代码。只不过调用方认为这只是个筛选条件。<br><br>还有是最近在看Dubbo，dubbo里面用的 spi机制，我感觉也是把控制留给了参数，实现对外代码通用。只不过它是用多态实现，我们有时候方法逻辑简单。就用if...else解决了。这点不是特别能理解。","like_count":0},{"had_liked":false,"id":173729,"user_name":"xuanyuan","can_delete":false,"product_type":"c1","uid":1113737,"ip_address":"","ucode":"1EC79B9372868F","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTI2icbib62icXtibTkThtyRksbuJLoTLMts7zook2S30MiaBtbz0f5JskwYicwqXkhpYfvCpuYkcvPTibEaQ/132","comment_is_top":false,"comment_ctime":1579671097,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1579671097","product_id":100039001,"comment_content":"英雄所见略同。除了每行缩进不一样之外，其他全部一致。能跟这样的人一起工作是最幸福的事。","like_count":0},{"had_liked":false,"id":173582,"user_name":"落叶飞逝的恋","can_delete":false,"product_type":"c1","uid":1046429,"ip_address":"","ucode":"F9A95DB28BCF1E","user_header":"https://static001.geekbang.org/account/avatar/00/0f/f7/9d/be04b331.jpg","comment_is_top":false,"comment_ctime":1579600857,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1579600857","product_id":100039001,"comment_content":"关于Java代码规范这块建议参考《阿里巴巴Java开发手册》，每个点都比较细","like_count":0},{"had_liked":false,"id":173575,"user_name":"牛顿的烈焰激光剑","can_delete":false,"product_type":"c1","uid":1042022,"ip_address":"","ucode":"C57018C65DAFB3","user_header":"https://static001.geekbang.org/account/avatar/00/0f/e6/66/fbbf0bb1.jpg","comment_is_top":false,"comment_ctime":1579599201,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1579599201","product_id":100039001,"comment_content":"关于代码可读性，除非公司导入了提供统一的布局配置文件，否则绝对不要用 IDE 的全选代码再自动格式化。我以前有个 leader 就是这么干的，后来他就转行了。","like_count":0},{"had_liked":false,"id":173092,"user_name":"程序员小跃","can_delete":false,"product_type":"c1","uid":1015483,"ip_address":"","ucode":"25BB96E0791A60","user_header":"https://static001.geekbang.org/account/avatar/00/0f/7e/bb/947c329a.jpg","comment_is_top":false,"comment_ctime":1579423274,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1579423274","product_id":100039001,"comment_content":"最后一节课里的很多小细节我都是对号入座了，这也就间接说明我来了，是一件正确的事情。<br><br>来这里，把很多对号入座的错误都找出来，并一一改进，那我还有什么遗憾的呢","like_count":0},{"had_liked":false,"id":173035,"user_name":"郡鸿","can_delete":false,"product_type":"c1","uid":1241201,"ip_address":"","ucode":"7A6298D288E078","user_header":"https://static001.geekbang.org/account/avatar/00/12/f0/71/c7b0a1f8.jpg","comment_is_top":false,"comment_ctime":1579415585,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1579415585","product_id":100039001,"comment_content":"最近正好在重构以前打的项目，这节课上讲的东西都用过，特别是for循环嵌套重构的问题。可以用sonarLint进行代码扫描","like_count":0},{"had_liked":false,"id":172903,"user_name":"Michael","can_delete":false,"product_type":"c1","uid":1274787,"ip_address":"","ucode":"C233DF1D224EC1","user_header":"https://static001.geekbang.org/account/avatar/00/13/73/a3/2b077607.jpg","comment_is_top":false,"comment_ctime":1579355354,"is_pvip":true,"replies":[{"id":"67740","content":"是的，我改下，多谢指出","user_name":"作者回复","user_name_real":"王争","uid":"1190123","ctime":1580118181,"ip_address":"","comment_id":172903,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1579355354","product_id":100039001,"comment_content":"public void getUser<br>这个返回值和函数命名好像不是很搭哦","like_count":0},{"had_liked":false,"id":172853,"user_name":"肥而不腻","can_delete":false,"product_type":"c1","uid":1435246,"ip_address":"","ucode":"3E6786A82A6DD6","user_header":"https://static001.geekbang.org/account/avatar/00/15/e6/6e/062da5e4.jpg","comment_is_top":false,"comment_ctime":1579335364,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1579335364","product_id":100039001,"comment_content":"日常地铁打卡！","like_count":0},{"had_liked":false,"id":172768,"user_name":"Jian","can_delete":false,"product_type":"c1","uid":1107305,"ip_address":"","ucode":"17ED4919F22DEC","user_header":"https://static001.geekbang.org/account/avatar/00/10/e5/69/719ec5d0.jpg","comment_is_top":false,"comment_ctime":1579278273,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1579278273","product_id":100039001,"comment_content":" 现在在公司code review的人都不会很认真的看，特别是代码量多的时候","like_count":0},{"had_liked":false,"id":172754,"user_name":"辣么大","can_delete":false,"product_type":"c1","uid":1396951,"ip_address":"","ucode":"AB308B6DCA0108","user_header":"https://static001.geekbang.org/account/avatar/00/15/50/d7/f82ed283.jpg","comment_is_top":false,"comment_ctime":1579273794,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1579273794","product_id":100039001,"comment_content":"项目建立合理的目录结构和文件组织，保持清晰的文件组织结构可以使代码更易读和可维护。","like_count":0},{"had_liked":false,"id":172741,"user_name":"Frank","can_delete":false,"product_type":"c1","uid":1018370,"ip_address":"","ucode":"7A488CC6FE15E7","user_header":"https://static001.geekbang.org/account/avatar/00/0f/8a/02/828938c9.jpg","comment_is_top":false,"comment_ctime":1579270151,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1579270151","product_id":100039001,"comment_content":"今天从这边文章中学到了很多技巧，也纠正了以前我在实际开发中常用的一些不好的开发习惯：如使用布尔类型的变量来控制代码执行逻辑。以前觉得写在一起就行了，没必要拆分。现在学习了单一职责原则后，才发现原来多数人写这种代码时将其拆分是这个原因。还有就是以前经常写多层嵌套的代码，导致代码可读性很差。这些“坏习惯”都走过一遍了。感谢同事对自己的代码的review，也给我提出了一些宝贵的建议，使自己意识到自己写的不好的地方，以此来不断改进。","like_count":0},{"had_liked":false,"id":172716,"user_name":"君哥聊技术","can_delete":false,"product_type":"c1","uid":1325816,"ip_address":"","ucode":"2C9A22BCE4C79E","user_header":"https://static001.geekbang.org/account/avatar/00/14/3a/f8/c1a939e7.jpg","comment_is_top":false,"comment_ctime":1579262719,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1579262719","product_id":100039001,"comment_content":"最开心的事情就是我的很多想法跟文中一样，继续努力","like_count":0},{"had_liked":false,"id":172703,"user_name":"东方奇骥","can_delete":false,"product_type":"c1","uid":1354850,"ip_address":"","ucode":"DEE7085F7E55A4","user_header":"https://static001.geekbang.org/account/avatar/00/14/ac/62/37912d51.jpg","comment_is_top":false,"comment_ctime":1579254533,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1579254533","product_id":100039001,"comment_content":"这些规范公司也都在提，特别期待后面的实战部分。","like_count":0},{"had_liked":false,"id":172694,"user_name":"严","can_delete":false,"product_type":"c1","uid":1775076,"ip_address":"","ucode":"9704161D1B317C","user_header":"","comment_is_top":false,"comment_ctime":1579252287,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1579252287","product_id":100039001,"comment_content":"跟上大部队的脚步咯","like_count":0},{"had_liked":false,"id":172678,"user_name":"天空","can_delete":false,"product_type":"c1","uid":1268892,"ip_address":"","ucode":"9C721B726A55D1","user_header":"https://static001.geekbang.org/account/avatar/00/13/5c/9c/c5528d9f.jpg","comment_is_top":false,"comment_ctime":1579250131,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1579250131","product_id":100039001,"comment_content":"发现写代码就跟玩拼图一样，每个方法是一个功能，然后再把每个方法组合到一块就是一个业务！！！","like_count":0},{"had_liked":false,"id":172671,"user_name":"编程界的小学生","can_delete":false,"product_type":"c1","uid":1593289,"ip_address":"","ucode":"4A5BE9A5E877FA","user_header":"https://static001.geekbang.org/account/avatar/00/18/4f/c9/9f51fd27.jpg","comment_is_top":false,"comment_ctime":1579248902,"is_pvip":false,"replies":[{"id":"67742","content":"没太看懂你说的😂","user_name":"作者回复","user_name_real":"王争","uid":"1190123","ctime":1580118539,"ip_address":"","comment_id":172671,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1579248902","product_id":100039001,"comment_content":"&#47;&#47; 拆分成三个函数<br>public boolean checkUserIfExistingByTelephone(String telephone);<br>public boolean checkUserIfExistingByUsername(String username);<br>public boolean checkUserIfExistingByEmail(String email);<br><br>这种的，不也得判断是不是空吗？不是空的话调用。 是不是可以把判断 放到每个小方法里面，是空就false","like_count":0,"discussions":[{"author":{"id":1190123,"avatar":"https://static001.geekbang.org/account/avatar/00/12/28/eb/af064421.jpg","nickname":"王争","note":"","ucode":"2B611BE0E0EDD4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":481815,"discussion_content":"没太看懂你说的😂","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1580118539,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1314724,"avatar":"https://static001.geekbang.org/account/avatar/00/14/0f/a4/0b49469f.jpg","nickname":"木子00","note":"","ucode":"8F78CA722EB29B","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":277605,"discussion_content":"意思是：怎么根据参数的不同，调用这三个函数。\n反过来说：还不是要根据参数的不同，判断调用哪个吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1591078347,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":172616,"user_name":"知行合一","can_delete":false,"product_type":"c1","uid":1521486,"ip_address":"","ucode":"2B8E634FC4CFB7","user_header":"https://static001.geekbang.org/account/avatar/00/17/37/4e/5c3153b2.jpg","comment_is_top":false,"comment_ctime":1579236640,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1579236640","product_id":100039001,"comment_content":"学习了一些自己之前注意不到的问题，也希望在团队里能真正实行这些规范，提高代码质量就是提高效率，减少出错的概率。","like_count":0},{"had_liked":false,"id":172612,"user_name":"迁橘","can_delete":false,"product_type":"c1","uid":1492125,"ip_address":"","ucode":"8FE37B7CA6CB74","user_header":"https://static001.geekbang.org/account/avatar/00/16/c4/9d/7c4dbcd9.jpg","comment_is_top":false,"comment_ctime":1579235965,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1579235965","product_id":100039001,"comment_content":"打卡，一大早起开赶车回家，路上不忘来看","like_count":0},{"had_liked":false,"id":172595,"user_name":"睁眼看世界","can_delete":false,"product_type":"c1","uid":1206388,"ip_address":"","ucode":"F94CF34BC5B2AC","user_header":"https://static001.geekbang.org/account/avatar/00/12/68/74/461b202d.jpg","comment_is_top":false,"comment_ctime":1579229420,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1579229420","product_id":100039001,"comment_content":"打卡，所有的规范都是参考，重要的是写出可读、可维护、可扩展的代码。期待争哥后续通过设计模式改造多重嵌套的问题。","like_count":0},{"had_liked":false,"id":172584,"user_name":"William","can_delete":false,"product_type":"c1","uid":1346215,"ip_address":"","ucode":"55F5D9DEE485B1","user_header":"https://static001.geekbang.org/account/avatar/00/14/8a/a7/674c1864.jpg","comment_is_top":false,"comment_ctime":1579227952,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1579227952","product_id":100039001,"comment_content":"函数中大量代码逻辑相同，我会选择使用标识来区分逻辑.","like_count":0},{"had_liked":false,"id":172562,"user_name":"斜杠ing...","can_delete":false,"product_type":"c1","uid":1676247,"ip_address":"","ucode":"C4AE866AC8B9AE","user_header":"https://static001.geekbang.org/account/avatar/00/19/93/d7/93c8f92a.jpg","comment_is_top":false,"comment_ctime":1579223886,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1579223886","product_id":100039001,"comment_content":"代码整洁之道这本书很值得看看啊","like_count":0},{"had_liked":false,"id":172560,"user_name":"Jackey","can_delete":false,"product_type":"c1","uid":1063751,"ip_address":"","ucode":"125DE81993FEDD","user_header":"https://static001.geekbang.org/account/avatar/00/10/3b/47/f6c772a1.jpg","comment_is_top":false,"comment_ctime":1579223834,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1579223834","product_id":100039001,"comment_content":"关键在于reviewer吧，不要放过不好的代码","like_count":0},{"had_liked":false,"id":172559,"user_name":"J.Smile","can_delete":false,"product_type":"c1","uid":1336475,"ip_address":"","ucode":"C4D98DFDBF7584","user_header":"https://static001.geekbang.org/account/avatar/00/14/64/9b/0b578b08.jpg","comment_is_top":false,"comment_ctime":1579223760,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1579223760","product_id":100039001,"comment_content":"打卡，今天天气突然变冷了，女朋友公司年会不让吃早餐，还得按时过去，但是过去的距离多了一倍！唉！我要好好学习，找个好公司！","like_count":0},{"had_liked":false,"id":172554,"user_name":"小晏子","can_delete":false,"product_type":"c1","uid":1132337,"ip_address":"","ucode":"3AAA6FB5ACB6AE","user_header":"https://static001.geekbang.org/account/avatar/00/11/47/31/f35367c8.jpg","comment_is_top":false,"comment_ctime":1579222944,"is_pvip":false,"discussion_count":0,"race_medal":1,"score":"1579222944","product_id":100039001,"comment_content":"老师讲的有理有据，赞！暂时想不出其他的技巧，但是有些推荐的做法，一个是避免使用奇技淫巧show技能，因为别人可能看不懂，比如非要使用meta programming；另一个是使用相关语言的通用做法，比如python编程就使用pythonic的做法，java编程就是java推荐的做法。","like_count":0},{"had_liked":false,"id":172539,"user_name":"何妨","can_delete":false,"product_type":"c1","uid":1385377,"ip_address":"","ucode":"EC3983BFF7992A","user_header":"https://static001.geekbang.org/account/avatar/00/15/23/a1/b08f3ee7.jpg","comment_is_top":false,"comment_ctime":1579221443,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1579221443","product_id":100039001,"comment_content":"总的来说，规范不是教条，其起到的是指引作用规范作用。最重要的还是要在对的时间对的地方写对的代码，大家加油","like_count":0},{"had_liked":false,"id":172533,"user_name":"安静的boy","can_delete":false,"product_type":"c1","uid":1196475,"ip_address":"","ucode":"F5F44B75228A85","user_header":"https://static001.geekbang.org/account/avatar/00/12/41/bb/21ce60d2.jpg","comment_is_top":false,"comment_ctime":1579220810,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1579220810","product_id":100039001,"comment_content":"对于第四点，函数的职业要统一，我是认同的。但是列举的例子，我个人认为判断的逻辑并不是很复杂，将所有判断逻辑放在一块写也是合理的，阅读起来也更方便些。如果逻辑很复杂，代码很多，封装起来更好点。","like_count":0},{"had_liked":false,"id":172526,"user_name":"Kang","can_delete":false,"product_type":"c1","uid":1237655,"ip_address":"","ucode":"088A8DA0A16BDE","user_header":"https://static001.geekbang.org/account/avatar/00/12/e2/97/dfadcc92.jpg","comment_is_top":false,"comment_ctime":1579220016,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1579220016","product_id":100039001,"comment_content":"打卡","like_count":0},{"had_liked":false,"id":172530,"user_name":"再见孙悟空","can_delete":false,"product_type":"c1","uid":1025518,"ip_address":"","ucode":"57E12A2F9CD915","user_header":"https://static001.geekbang.org/account/avatar/00/0f/a5/ee/6bbac848.jpg","comment_is_top":false,"comment_ctime":1579220632,"is_pvip":false,"discussion_count":10,"race_medal":0,"score":"366651440792","product_id":100039001,"comment_content":"不要在函数中使用布尔类型的标识参数来控制内部逻辑，true 的时候走这块逻辑，false 的时候走另一块逻辑。这明显违背了单一职责原则和接口隔离原则。我建议将其拆成两个函数，可读性上也要更好。这个深有感触","like_count":86,"discussions":[{"author":{"id":1118242,"avatar":"https://static001.geekbang.org/account/avatar/00/11/10/22/910f705c.jpg","nickname":"改名不换人","note":"","ucode":"7E25577829FA0F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":231891,"discussion_content":"这种事儿我是常干啊 以后得多注意","likes_number":6,"is_delete":false,"is_hidden":false,"ctime":1586836333,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1332256,"avatar":"https://static001.geekbang.org/account/avatar/00/14/54/20/90ad5247.jpg","nickname":"NiceBen","note":"","ucode":"793679E3520E84","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":348070,"discussion_content":"最近写的代码中，就有用到一个flag参数，用于逻辑总判断是否为自动还是手动。单独抽取的话有很多重复代码；","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1612422048,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":2588697,"avatar":"https://static001.geekbang.org/account/avatar/00/27/80/19/ac06db0b.jpg","nickname":"New","note":"","ucode":"406DF65BD05FAA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1332256,"avatar":"https://static001.geekbang.org/account/avatar/00/14/54/20/90ad5247.jpg","nickname":"NiceBen","note":"","ucode":"793679E3520E84","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":373271,"discussion_content":"可以把重复代码抽成函数","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1620667210,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":348070,"ip_address":""},"score":373271,"extra":""}]},{"author":{"id":2188142,"avatar":"https://static001.geekbang.org/account/avatar/00/21/63/6e/6b971571.jpg","nickname":"Z宇锤锤","note":"","ucode":"7DB36E986A7A51","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":541873,"discussion_content":"是的。在函数名字上直接写业务含义，感觉就不会耗费很多精力去深入条件到底想表达什么意思。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1640589253,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2347137,"avatar":"https://static001.geekbang.org/account/avatar/00/23/d0/81/d5c8e46e.jpg","nickname":"snake","note":"","ucode":"47BFFE4D048156","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":341165,"discussion_content":"我偶尔也会这样用。。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1610335163,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1160213,"avatar":"https://static001.geekbang.org/account/avatar/00/11/b4/15/2e6716d7.jpg","nickname":"可爱的饲养员","note":"","ucode":"A5B6A4A4110E0C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":291693,"discussion_content":"再见2009","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1594909452,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1477359,"avatar":"https://static001.geekbang.org/account/avatar/00/16/8a/ef/ac2937ac.jpg","nickname":"Geek_342489","note":"","ucode":"40610664021607","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":146271,"discussion_content":"我也是，尤其是前端展示，可能整体逻辑是一样的，只是对不同的人展示不同的文案，不过我想了一下，我其实可以把这段逻辑抽出来单独的调用，在调用相同的逻辑之前或之后，先用 if-else 去分别调用对应的逻辑，不过争哥说了如果是私有函数偶尔用一下无伤大雅，如果暴露出来，就很不好了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579606244,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1161271,"avatar":"https://static001.geekbang.org/account/avatar/00/11/b8/37/98991aeb.jpg","nickname":"不似旧日","note":"","ucode":"DF4C5E3AB9570C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":141227,"discussion_content":"我经常这样做😅，因为只有一段代码不一样，如果不用就不能复用性代码。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579403700,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1132304,"avatar":"https://static001.geekbang.org/account/avatar/00/11/47/10/2d673601.jpg","nickname":"好饿早知道送外卖了","note":"","ucode":"AED22DB5BF8FC7","race_medal":2,"user_type":1,"is_pvip":false},"reply_author":{"id":1161271,"avatar":"https://static001.geekbang.org/account/avatar/00/11/b8/37/98991aeb.jpg","nickname":"不似旧日","note":"","ucode":"DF4C5E3AB9570C","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":170064,"discussion_content":"日后每个人都改过一遍这个代码，就有意思了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1581667554,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":141227,"ip_address":""},"score":170064,"extra":""},{"author":{"id":1810576,"avatar":"https://wx.qlogo.cn/mmopen/vi_32/eLNeJNaEkwGSK7xvtamMibVLMy2MpbIqX3iaEhT7JtSnTRMRTwZ2j4HX7WAapiashbiaBDVriaXKSP0Oeic6ZAEVEXag/132","nickname":"M","note":"","ucode":"06F26E1D62E9C9","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1161271,"avatar":"https://static001.geekbang.org/account/avatar/00/11/b8/37/98991aeb.jpg","nickname":"不似旧日","note":"","ucode":"DF4C5E3AB9570C","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":194312,"discussion_content":"一样，一般以后不会改动的，我也会这种，两种逻辑，通过标识区分","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1583204649,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":141227,"ip_address":""},"score":194312,"extra":""}]}]},{"had_liked":false,"id":172713,"user_name":"🐾","can_delete":false,"product_type":"c1","uid":1087256,"ip_address":"","ucode":"D0AD0260351C31","user_header":"https://static001.geekbang.org/account/avatar/00/10/97/18/a5218104.jpg","comment_is_top":false,"comment_ctime":1579259143,"is_pvip":false,"replies":[{"id":"67741","content":"可以看下这篇文章：<br>https:&#47;&#47;mp.weixin.qq.com&#47;s&#47;0eOm3dBOlFUy8Si1_k7OAw<br><br>代码中的很多低级质量问题不需要人工去审查，java开发有很多现成的工具可以使用，比如：checkstyle，findbugs, pmd, jacaco, sonar等。<br><br>Checkstyle,findbugs,pmd是静态代码分析工具，通过分析源代码或者字节码，找出代码的缺陷，比如参数不匹配，有歧义的嵌套语句，错误的递归，非法计算，可能出现的空指针引用等等。三者都可以集成到gradle等构建工具中。<br><br>Jacoco是一种单元测试覆盖率统计工具，也可以集成到gradle等构建工具中，可以生成漂亮的测试覆盖率统计报表，同时Eclipse提供了插件可以EclEmma可以直观的在IDE中查看单元测试的覆盖情况。<br><br>Sonar Sonar 是一个用于代码质量管理的平台。可以在一个统一的平台上显示管理静态分析，单元测试覆盖率等质量报告。","user_name":"作者回复","comment_id":172713,"uid":"1190123","ip_address":"","utype":1,"ctime":1580118397,"user_name_real":"王争"}],"discussion_count":10,"race_medal":0,"score":"263572264199","product_id":100039001,"comment_content":"老师晚上好、关于代码规范这块，是不是有好的Java开发脚手架推荐呢？我发现公司的代码没有统一的脚手架，各小组重复造轮子，想规范化这块，但又不知道有哪些通用的脚手架。","like_count":62,"discussions":[{"author":{"id":1266482,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/IIkdC2gohpcibib0AJvSdnJQefAuQYGlLySQOticThpF7Ck9WuDUQLJlgZ7ic13LIFnGBXXbMsSP3nZsbibBN98ZjGA/132","nickname":"batman","note":"","ucode":"73C30ACFC0D612","race_medal":1,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":156746,"discussion_content":"https://mp.weixin.qq.com/s/0eOm3dBOlFUy8Si1_k7OAw链接失效了","likes_number":6,"is_delete":false,"is_hidden":false,"ctime":1580395039,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1190123,"avatar":"https://static001.geekbang.org/account/avatar/00/12/28/eb/af064421.jpg","nickname":"王争","note":"","ucode":"2B611BE0E0EDD4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":481829,"discussion_content":"可以看下这篇文章：\nhttps://mp.weixin.qq.com/s/0eOm3dBOlFUy8Si1_k7OAw\n\n代码中的很多低级质量问题不需要人工去审查，java开发有很多现成的工具可以使用，比如：checkstyle，findbugs, pmd, jacaco, sonar等。\n\nCheckstyle,findbugs,pmd是静态代码分析工具，通过分析源代码或者字节码，找出代码的缺陷，比如参数不匹配，有歧义的嵌套语句，错误的递归，非法计算，可能出现的空指针引用等等。三者都可以集成到gradle等构建工具中。\n\nJacoco是一种单元测试覆盖率统计工具，也可以集成到gradle等构建工具中，可以生成漂亮的测试覆盖率统计报表，同时Eclipse提供了插件可以EclEmma可以直观的在IDE中查看单元测试的覆盖情况。\n\nSonar Sonar 是一个用于代码质量管理的平台。可以在一个统一的平台上显示管理静态分析，单元测试覆盖率等质量报告。","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1580118397,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":2,"child_discussions":[{"author":{"id":1359781,"avatar":"https://static001.geekbang.org/account/avatar/00/14/bf/a5/7b27cdbd.jpg","nickname":"yuansteel","note":"","ucode":"C02D440EF829E9","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1190123,"avatar":"https://static001.geekbang.org/account/avatar/00/12/28/eb/af064421.jpg","nickname":"王争","note":"","ucode":"2B611BE0E0EDD4","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":565224,"discussion_content":"https://mp.weixin.qq.com/s/0eOm3dBOlFUy8Si1_k7OAw链接失效了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1650417339,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":481829,"ip_address":""},"score":565224,"extra":""},{"author":{"id":1359781,"avatar":"https://static001.geekbang.org/account/avatar/00/14/bf/a5/7b27cdbd.jpg","nickname":"yuansteel","note":"","ucode":"C02D440EF829E9","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1190123,"avatar":"https://static001.geekbang.org/account/avatar/00/12/28/eb/af064421.jpg","nickname":"王争","note":"","ucode":"2B611BE0E0EDD4","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":565226,"discussion_content":"老师，辛苦再发个链接","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1650417370,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":481829,"ip_address":""},"score":565226,"extra":""}]},{"author":{"id":1112490,"avatar":"https://static001.geekbang.org/account/avatar/00/10/f9/aa/3e80212e.jpg","nickname":"龙猫","note":"","ucode":"FD726CC969EF9C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":348609,"discussion_content":"sonar很好用，可以和git集成","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1612666156,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1037406,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/d4/5e/b8bfa75d.jpg","nickname":"辰星","note":"","ucode":"C05AF875B85718","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":337685,"discussion_content":"链接失效了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1609041651,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1145270,"avatar":"https://static001.geekbang.org/account/avatar/00/11/79/b6/faaa95a2.jpg","nickname":"航哥很帅","note":"","ucode":"23A1CB2A3723AF","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":332889,"discussion_content":"链接无法访问。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1607387197,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1401377,"avatar":"https://static001.geekbang.org/account/avatar/00/15/62/21/7a382e8f.jpg","nickname":"若未","note":"","ucode":"DFC63F476793A9","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":300965,"discussion_content":"sonar还不错,可以改掉大部分坏习惯","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1598344236,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1161271,"avatar":"https://static001.geekbang.org/account/avatar/00/11/b8/37/98991aeb.jpg","nickname":"不似旧日","note":"","ucode":"DF4C5E3AB9570C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":141237,"discussion_content":"你们公司没有架构么？ ","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579404238,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1087256,"avatar":"https://static001.geekbang.org/account/avatar/00/10/97/18/a5218104.jpg","nickname":"🐾","note":"","ucode":"D0AD0260351C31","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1161271,"avatar":"https://static001.geekbang.org/account/avatar/00/11/b8/37/98991aeb.jpg","nickname":"不似旧日","note":"","ucode":"DF4C5E3AB9570C","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":141312,"discussion_content":"么有，各小组各自为营。业务之间都是通过接口传输。如果有新的项目，需要相关开发人员自己从头又搭一个。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579411160,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":141237,"ip_address":""},"score":141312,"extra":""}]}]},{"had_liked":false,"id":172495,"user_name":"黄林晴","can_delete":false,"product_type":"c1","uid":1362631,"ip_address":"","ucode":"B15C38AECDA88F","user_header":"https://static001.geekbang.org/account/avatar/00/14/ca/c7/00e544c2.jpg","comment_is_top":false,"comment_ctime":1579190681,"is_pvip":false,"discussion_count":23,"race_medal":0,"score":"164787947929","product_id":100039001,"comment_content":"打卡<br>明天最后一天上班<br>就放假了","like_count":38,"discussions":[{"author":{"id":1115128,"avatar":"https://static001.geekbang.org/account/avatar/00/11/03/f8/f98df0a7.jpg","nickname":"vaccywen","note":"","ucode":"077FDB50831921","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":285722,"discussion_content":"万万没想到，这个假期有点长","likes_number":7,"is_delete":false,"is_hidden":false,"ctime":1592920381,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1228518,"avatar":"https://static001.geekbang.org/account/avatar/00/12/be/e6/7808520d.jpg","nickname":"Edward Lee","note":"","ucode":"156223F1D7E94A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":181366,"discussion_content":"却万万没想到放假到3月份","likes_number":5,"is_delete":false,"is_hidden":false,"ctime":1582365395,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1133194,"avatar":"https://static001.geekbang.org/account/avatar/00/11/4a/8a/c1069412.jpg","nickname":"makermade","note":"","ucode":"03386B90CB8F20","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":226541,"discussion_content":"哈哈哈，开工没","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1586435908,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1258674,"avatar":"https://static001.geekbang.org/account/avatar/00/13/34/b2/1e593de7.jpg","nickname":"QFann","note":"","ucode":"910DD5C907E347","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":138198,"discussion_content":"24号放假的我投来了羡慕的目光！！！","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1579228054,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1484184,"avatar":"https://static001.geekbang.org/account/avatar/00/16/a5/98/a65ff31a.jpg","nickname":"djfhchdh","note":"","ucode":"E71D75328CE398","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":138132,"discussion_content":"不看最后一句，以为是退休了呢","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1579225331,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1362631,"avatar":"https://static001.geekbang.org/account/avatar/00/14/ca/c7/00e544c2.jpg","nickname":"黄林晴","note":"","ucode":"B15C38AECDA88F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1484184,"avatar":"https://static001.geekbang.org/account/avatar/00/16/a5/98/a65ff31a.jpg","nickname":"djfhchdh","note":"","ucode":"E71D75328CE398","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":138188,"discussion_content":"😂","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579227352,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":138132,"ip_address":""},"score":138188,"extra":""}]},{"author":{"id":1045577,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/f4/49/2add4f6b.jpg","nickname":"北极的大企鹅","note":"","ucode":"8935346D08E109","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":376518,"discussion_content":"明天周末了\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1622172117,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1310192,"avatar":"https://static001.geekbang.org/account/avatar/00/13/fd/f0/67ed878c.jpg","nickname":"拙言","note":"","ucode":"40179CFED35579","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":175685,"discussion_content":"都是上班开始来争哥这里打卡。哈哈","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1581989890,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1015483,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/7e/bb/947c329a.jpg","nickname":"程序员小跃","note":"","ucode":"25BB96E0791A60","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":141474,"discussion_content":"我怀疑你是来招人的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579423151,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1362631,"avatar":"https://static001.geekbang.org/account/avatar/00/14/ca/c7/00e544c2.jpg","nickname":"黄林晴","note":"","ucode":"B15C38AECDA88F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1015483,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/7e/bb/947c329a.jpg","nickname":"程序员小跃","note":"","ucode":"25BB96E0791A60","race_medal":0,"user_type":1,"is_pvip":true},"discussion":{"id":141623,"discussion_content":"哈哈哈\n我是打工的\n哪有那个资格招人\n坐标合肥 感兴趣的可以内推\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579434780,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":141474,"ip_address":""},"score":141623,"extra":""},{"author":{"id":1015483,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/7e/bb/947c329a.jpg","nickname":"程序员小跃","note":"","ucode":"25BB96E0791A60","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1362631,"avatar":"https://static001.geekbang.org/account/avatar/00/14/ca/c7/00e544c2.jpg","nickname":"黄林晴","note":"","ucode":"B15C38AECDA88F","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":147821,"discussion_content":"哈哈，太远了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579676771,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":141623,"ip_address":""},"score":147821,"extra":""}]},{"author":{"id":1161271,"avatar":"https://static001.geekbang.org/account/avatar/00/11/b8/37/98991aeb.jpg","nickname":"不似旧日","note":"","ucode":"DF4C5E3AB9570C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":141224,"discussion_content":"卧槽我要上到23号","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579403614,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1211223,"avatar":"https://static001.geekbang.org/account/avatar/00/12/7b/57/a9b04544.jpg","nickname":"QQ怪","note":"","ucode":"1A39B8433D9208","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":138219,"discussion_content":"我也是","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579229514,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1457464,"avatar":"https://static001.geekbang.org/account/avatar/00/16/3d/38/6f02a4b9.jpg","nickname":"your problem？","note":"","ucode":"6E096E7958CFD7","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":138197,"discussion_content":"？？？我们还要上到20号，烦死了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579228003,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1065849,"avatar":"https://static001.geekbang.org/account/avatar/00/10/43/79/18073134.jpg","nickname":"test","note":"","ucode":"9A4973E591DD12","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":138010,"discussion_content":"这是什么神仙公司","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579222462,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1362631,"avatar":"https://static001.geekbang.org/account/avatar/00/14/ca/c7/00e544c2.jpg","nickname":"黄林晴","note":"","ucode":"B15C38AECDA88F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1065849,"avatar":"https://static001.geekbang.org/account/avatar/00/10/43/79/18073134.jpg","nickname":"test","note":"","ucode":"9A4973E591DD12","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":138190,"discussion_content":"现在放假 元宵节之后上班😉","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1579227386,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":138010,"ip_address":""},"score":138190,"extra":""}]},{"author":{"id":1241770,"avatar":"https://static001.geekbang.org/account/avatar/00/12/f2/aa/32fc0d54.jpg","nickname":"失火的夏天","note":"","ucode":"10C6E66EB2A65F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":138002,"discussion_content":"我怀疑你和我在一家公司😅","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579222113,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1362631,"avatar":"https://static001.geekbang.org/account/avatar/00/14/ca/c7/00e544c2.jpg","nickname":"黄林晴","note":"","ucode":"B15C38AECDA88F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1241770,"avatar":"https://static001.geekbang.org/account/avatar/00/12/f2/aa/32fc0d54.jpg","nickname":"失火的夏天","note":"","ucode":"10C6E66EB2A65F","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":138186,"discussion_content":"大声的告诉我你公司的缩写","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579227328,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":138002,"ip_address":""},"score":138186,"extra":""},{"author":{"id":1241770,"avatar":"https://static001.geekbang.org/account/avatar/00/12/f2/aa/32fc0d54.jpg","nickname":"失火的夏天","note":"","ucode":"10C6E66EB2A65F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1362631,"avatar":"https://static001.geekbang.org/account/avatar/00/14/ca/c7/00e544c2.jpg","nickname":"黄林晴","note":"","ucode":"B15C38AECDA88F","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":138619,"discussion_content":"你是元宵之后上班，那肯定就不和我在一家了，哈哈😄。公司缩写yyyc","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579256712,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":138186,"ip_address":""},"score":138619,"extra":""}]},{"author":{"id":1385377,"avatar":"https://static001.geekbang.org/account/avatar/00/15/23/a1/b08f3ee7.jpg","nickname":"何妨","note":"","ucode":"EC3983BFF7992A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":137971,"discussion_content":"今天上午最后一天，就放假了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579221081,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1362631,"avatar":"https://static001.geekbang.org/account/avatar/00/14/ca/c7/00e544c2.jpg","nickname":"黄林晴","note":"","ucode":"B15C38AECDA88F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1385377,"avatar":"https://static001.geekbang.org/account/avatar/00/15/23/a1/b08f3ee7.jpg","nickname":"何妨","note":"","ucode":"EC3983BFF7992A","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":138187,"discussion_content":"一起玩耍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579227341,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":137971,"ip_address":""},"score":138187,"extra":""}]},{"author":{"id":1237655,"avatar":"https://static001.geekbang.org/account/avatar/00/12/e2/97/dfadcc92.jpg","nickname":"Kang","note":"","ucode":"088A8DA0A16BDE","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":137943,"discussion_content":"羡慕","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579220038,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1259525,"avatar":"https://static001.geekbang.org/account/avatar/00/13/38/05/67aae6c8.jpg","nickname":"Rainbow","note":"","ucode":"248A7E2C05E4DE","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":137919,"discussion_content":"啥公司这么早放假","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579218389,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":172606,"user_name":"守拙","can_delete":false,"product_type":"c1","uid":1738326,"ip_address":"","ucode":"F594B2DA3F6D4F","user_header":"https://static001.geekbang.org/account/avatar/00/1a/86/56/509535da.jpg","comment_is_top":false,"comment_ctime":1579233426,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"100363481234","product_id":100039001,"comment_content":"课堂讨论:<br><br>简单说一个本人常用的改善项目可读性的方法:<br>在每一个module&#47;package下编写一个description.md,简要说明是做什么的,有哪些需要注意的地方.<br><br>不会花很多时间,但可以提高项目整体的可维护性.","like_count":24},{"had_liked":false,"id":172767,"user_name":"Jxin","can_delete":false,"product_type":"c1","uid":1251111,"ip_address":"","ucode":"4C03928388C413","user_header":"https://static001.geekbang.org/account/avatar/00/13/17/27/ec30d30a.jpg","comment_is_top":false,"comment_ctime":1579277469,"is_pvip":false,"discussion_count":5,"race_medal":0,"score":"66003786909","product_id":100039001,"comment_content":"1.先提问题：<br>第一块代码里面，存在一点瑕疵:if (calendar.get(Calendar.DAY_OF_MONTH) == 1) { return true; } return false;<br>直接 return calendar.get(Calendar.DAY_OF_MONTH) == 1 ;  即可。<br>2.请老师谈谈你的看法<br>A.boolean isSummer = date.after(SUMMER_START)&amp;&amp;date.before(SUMMER_END);if (isSummer){}；<br>这个场景是定义“isSummer”这个临时变量，还是if(date.after(SUMMER_START)&amp;&amp;date.before(SUMMER_END)){};好点。<br>看过&lt;重构&gt;第三版，里面其实偏向于用函数代替临时变量（变量是魔鬼）。但这可能就会有这种if里面包含比较长的函数调用的场景，可读性其实不好，有点做了两件事的味道。但在代码重构上是比较好的，毕竟没有变量滥用带来的不确定性。拿捏不准，我最后是跟着&lt;重构&gt;的思路走。但这里特请栏主谈谈自己的看法。<br><br>B.boolean isSummer = date.after(SUMMER_START)&amp;&amp;date.before(SUMMER_END); 是否需要写成final boolean isSummer。我的习惯对不可变临时变量都会加final，事实上我基本没有可变临时变量，对可变临时变量很敏感。final会导致语句行变长，但能规范代码，具有明确语义，方便其他人阅读和扩展（约束了行为）。这个也拿捏不准，栏主怎么看？<br><br>C.类中成员属性按字母大小顺序排列。这个感觉不是很合理。拿订单类为例，我会让金额相关字段，地址相关字段，和状态相关字段分隔开各自聚合在一块。这时候就没办法按字母大小排，但语义更强。当然，对金额和地址字段，其实属于值对象，可以单独成类（存对象序列化）。但老项目难有这种设计，往往是一张表平级包含一切。所以这个按大小排序的规范，感觉太“任性”了。 <br><br>3.其他编程规范，篇幅有限，而且是死的东西，不罗列了。感兴趣的同学有时间看看&lt;Effective java&gt;（一礼拜），没时间就看看&lt;阿里开发手册&gt;（2小时）。平时工作重视Sonar的每个告警，慢慢积累就好了。","like_count":16,"discussions":[{"author":{"id":1681459,"avatar":"https://static001.geekbang.org/account/avatar/00/19/a8/33/b71635c1.jpg","nickname":"锋子","note":"","ucode":"89FFA85BDB1C99","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":327380,"discussion_content":"第一个没感觉瑕疵，看用处吧，有时候单步调试不喜欢return一个函数，除非很直观。 第二点新增一个变量主要是一个语义，让人阅读代码就知道你这一串是做什么用的，你看阿里开发手册应该又提到，复杂判断抽出来用变量装。   ","likes_number":4,"is_delete":false,"is_hidden":false,"ctime":1605806633,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1944895,"avatar":"https://static001.geekbang.org/account/avatar/00/1d/ad/3f/b5eabecf.jpg","nickname":"王川","note":"","ucode":"AED1548E793EB3","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":339865,"discussion_content":"第2个问题我喜欢这么干，当这个判断条件只使用一次的时候，我会直接在 if() 里面写成表达式的形式。如果这个条件会多次使用且作用域局限于当前作用域时，我会使用一个变量来进行保存。如果这个判断条件会在多个作用域使用，那么应该抽离成函数~","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1609828930,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1251111,"avatar":"https://static001.geekbang.org/account/avatar/00/13/17/27/ec30d30a.jpg","nickname":"Jxin","note":"","ucode":"4C03928388C413","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1944895,"avatar":"https://static001.geekbang.org/account/avatar/00/1d/ad/3f/b5eabecf.jpg","nickname":"王川","note":"","ucode":"AED1548E793EB3","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":339935,"discussion_content":"复杂条件直接抽函数，目的是隔离复杂性。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1609845792,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":339865,"ip_address":""},"score":339935,"extra":""}]},{"author":{"id":2286788,"avatar":"https://static001.geekbang.org/account/avatar/00/22/e4/c4/065f8c0c.jpg","nickname":"Tom-TTC","note":"","ucode":"36AB0797D6FD3A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":333076,"discussion_content":"C问题是大佬理解错了吧😄，栏主说的是依赖类的import顺序是按字母表，没说类的属性按字母表排列。( ´･･)ﾉ(._.`)","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1607428469,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1251111,"avatar":"https://static001.geekbang.org/account/avatar/00/13/17/27/ec30d30a.jpg","nickname":"Jxin","note":"","ucode":"4C03928388C413","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2286788,"avatar":"https://static001.geekbang.org/account/avatar/00/22/e4/c4/065f8c0c.jpg","nickname":"Tom-TTC","note":"","ucode":"36AB0797D6FD3A","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":333107,"discussion_content":"如果是import。那就无视我这个吧。只是import都靠ide自动排了，应该没有拿出来讨论的必要哈。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1607433955,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":333076,"ip_address":""},"score":333107,"extra":""}]}]},{"had_liked":false,"id":172569,"user_name":"青青子衿","can_delete":false,"product_type":"c1","uid":1438102,"ip_address":"","ucode":"4A388A3BA70C29","user_header":"https://static001.geekbang.org/account/avatar/00/15/f1/96/9571fa3d.jpg","comment_is_top":false,"comment_ctime":1579225269,"is_pvip":false,"discussion_count":11,"race_medal":0,"score":"61708767413","product_id":100039001,"comment_content":"个人以为还有善用和合理运用各个编程语言提供的语法糖和语言特性。比如Java开发，工作中有的老程序员不喜欢不适应lambda表达式，实际上合理恰当的使用lambda表达式可以让代码简洁明了","like_count":14},{"had_liked":false,"id":172500,"user_name":"linlong","can_delete":false,"product_type":"c1","uid":1736463,"ip_address":"","ucode":"294F267F62A9E1","user_header":"https://static001.geekbang.org/account/avatar/00/1a/7f/0f/4874788e.jpg","comment_is_top":false,"comment_ctime":1579193058,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"53118800610","product_id":100039001,"comment_content":"一般大公司都有自己的编程规范，但执行的效果取决于commiter，而最终还是项目交付进度决定的。","like_count":12,"discussions":[{"author":{"id":1188524,"avatar":"https://static001.geekbang.org/account/avatar/00/12/22/ac/fc8e435a.jpg","nickname":"郭凯强","note":"","ucode":"002F58C3640560","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":137934,"discussion_content":"真相了哈哈","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579219502,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":177584,"user_name":"Monday","can_delete":false,"product_type":"c1","uid":1250907,"ip_address":"","ucode":"77B9BACC783598","user_header":"https://static001.geekbang.org/account/avatar/00/13/16/5b/83a35681.jpg","comment_is_top":false,"comment_ctime":1581428815,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"48826069071","product_id":100039001,"comment_content":"为没有代码规范的我们项目，默哀三分钟。<br>","like_count":12,"discussions":[{"author":{"id":1701867,"avatar":"https://static001.geekbang.org/account/avatar/00/19/f7/eb/e7127bb8.jpg","nickname":"，","note":"","ucode":"A5543C8DFEB198","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":349478,"discussion_content":"去年月薪涨了五千，今年涨了接近一万，感觉还没有达到极限，好好学习还是有出路的，各位不要轻易放弃","likes_number":6,"is_delete":false,"is_hidden":false,"ctime":1613228050,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1190123,"avatar":"https://static001.geekbang.org/account/avatar/00/12/28/eb/af064421.jpg","nickname":"王争","note":"","ucode":"2B611BE0E0EDD4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":498879,"discussion_content":"可以看看我写的这篇文章：\nhttps://mp.weixin.qq.com/s/uKkQMIWTtAmvsEYZCxvZeg","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1593310469,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1701867,"avatar":"https://static001.geekbang.org/account/avatar/00/19/f7/eb/e7127bb8.jpg","nickname":"，","note":"","ucode":"A5543C8DFEB198","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":286861,"discussion_content":"有看过,感觉我在通用的领域学到的知识,像数据结构与算法,设计模式,原则,代码规范,计算机网络这些,基本都能用上,但是垂直的领域里学的东西,虚拟机,数据库这些,却很少能用于工作中,我现在打算重新夯实基础,沉淀通用的能力,等以后有机会再拾起垂直领域的内容,多谢老师","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1593312872,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1005381,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/57/45/c418ea5c.jpg","nickname":"指尖流逝","note":"","ucode":"417009F674FAF1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":320664,"discussion_content":"我也是这样","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1604448676,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1015483,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/7e/bb/947c329a.jpg","nickname":"程序员小跃","note":"","ucode":"25BB96E0791A60","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":314696,"discussion_content":"感觉你写的就是我自己呀","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1603186984,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2050594,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/4a/22/c5656a13.jpg","nickname":"晴天","note":"","ucode":"658ED170B2DC40","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":312338,"discussion_content":"原来我不是一个孤单的人，还有其他人也这样，看个几遍，过一段时间就忘了，只有个大概印象，遇到问题时只能够记得在哪里有解决方案。刚开始我还很焦虑，现在也是忘了就忘了吧。只是面试感觉很吃亏","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1602666840,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1187562,"avatar":"https://static001.geekbang.org/account/avatar/00/12/1e/ea/c68ab947.jpg","nickname":"luanheart","note":"","ucode":"8C65DBD826146E","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":312175,"discussion_content":"mark","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1602602753,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1001970,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/49/f2/25cfa472.jpg","nickname":"寒溪","note":"","ucode":"67B9F1A1C15A20","race_medal":1,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":292379,"discussion_content":"mark","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1595209802,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":172545,"user_name":"失火的夏天","can_delete":false,"product_type":"c1","uid":1241770,"ip_address":"","ucode":"10C6E66EB2A65F","user_header":"https://static001.geekbang.org/account/avatar/00/12/f2/aa/32fc0d54.jpg","comment_is_top":false,"comment_ctime":1579222084,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"40233927748","product_id":100039001,"comment_content":"for里面有时候会出现下标0的特殊判断，这个时候就把0下标单独拉出去玩，for从下标1开始。<br><br>我发现我的代码风格居然和争哥有点像，我仿佛在膨胀😁","like_count":10},{"had_liked":false,"id":177726,"user_name":"疯","can_delete":false,"product_type":"c1","uid":1371660,"ip_address":"","ucode":"A4FA44A6F573A4","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epgjuGZNgB6sSJmCIhyfMEbI1x1UbKdUuLudWucGLqib2b2Ob2CeO66x4pV9REHguxbCqgTwzSpWaQ/132","comment_is_top":false,"comment_ctime":1581481859,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"27351285635","product_id":100039001,"comment_content":"文章中：3. 勿用函数参数来控制逻辑，文中意思尽量要拆分接口，但实际业务判断某个参数的时候会加段逻辑处理包含才其中，但是其他逻辑是一致的，拆分的话是否与DRY原则有矛盾，若接口本身是public的呢，是否需要拆分，这个度要怎么把握？","like_count":6,"discussions":[{"author":{"id":1016299,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/81/eb/04c16c3e.jpg","nickname":"silence_wh","note":"","ucode":"95FB5D6C02EC89","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":293477,"discussion_content":"很赞同。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1595555063,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":172529,"user_name":"刘大明","can_delete":false,"product_type":"c1","uid":1035081,"ip_address":"","ucode":"83C063FBD9BF2B","user_header":"https://static001.geekbang.org/account/avatar/00/0f/cb/49/0b9ffc8e.jpg","comment_is_top":false,"comment_ctime":1579220505,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"27349024281","product_id":100039001,"comment_content":"1.命名长度问题<br>2.利用上下文简化命名<br>3.命名要可读，可搜索<br>4.如何命名接口和抽象类<br>5.注释应该怎么写<br>6.注释是不是越多越好<br>7.类和函数多大才合适<br>8.一行代码多长才合适<br>9.善于用空行分隔符<br>10.缩进是两格还是四格<br>11.大括号是否需要另起一行<br>12.类中成员的排列顺序<br>13.代码应该分割成更小的单元块<br>14.函数参数不要过多<br>15.不要用函数参数来控制逻辑<br>16.函数设计要职责单一<br>17.移除过深的嵌套<br>18.学会使用解释性变量<br>19.<br>20.统一编码规范<br>这些都是开发过程中，让代码更好的一些编码规范<br>我自己在项目开发过程中也会时刻注意是否符合规范。<br>自己在项目中还遇到很多人提交代码不写注释，<br>因为重构很多注释掉的代码不删除<br>重复代码不提取公共类<br>临时代码随意修改，随意提交线上等等很多代码混乱问题。<br>从自身做起，让代码更加整洁，提交的代码尽量减少代码的坏味道。","like_count":6,"discussions":[{"author":{"id":1190123,"avatar":"https://static001.geekbang.org/account/avatar/00/12/28/eb/af064421.jpg","nickname":"王争","note":"","ucode":"2B611BE0E0EDD4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":498846,"discussion_content":"👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1593310633,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":172528,"user_name":"连边","can_delete":false,"product_type":"c1","uid":1391748,"ip_address":"","ucode":"54B5DA38449728","user_header":"https://static001.geekbang.org/account/avatar/00/15/3c/84/608f679b.jpg","comment_is_top":false,"comment_ctime":1579220453,"is_pvip":false,"discussion_count":11,"race_medal":0,"score":"14464122341","product_id":100039001,"comment_content":"作为一名phper，这里有很多话想说，但是最后汇成一句话，没有什么参数不是一个数组不能解决的。解决函数嵌套那块，挺实用的。","like_count":3,"discussions":[{"author":{"id":1190123,"avatar":"https://static001.geekbang.org/account/avatar/00/12/28/eb/af064421.jpg","nickname":"王争","note":"","ucode":"2B611BE0E0EDD4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":498822,"discussion_content":"你去我公众号里找找😂 “小争哥”","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1592525089,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":227906,"user_name":"黄林晴","can_delete":false,"product_type":"c1","uid":1362631,"ip_address":"","ucode":"B15C38AECDA88F","user_header":"https://static001.geekbang.org/account/avatar/00/14/ca/c7/00e544c2.jpg","comment_is_top":false,"comment_ctime":1592525591,"is_pvip":false,"replies":[{"id":"84975","content":"你说的没错，关键看这个标记位的判断是放到上层逻辑还是下层逻辑，理论上讲，这种“ugly”的代码尽量放到上层。","user_name":"作者回复","comment_id":227906,"uid":"1190123","ip_address":"","utype":1,"ctime":1593310757,"user_name_real":"王争"}],"discussion_count":1,"race_medal":0,"score":"10182460183","product_id":100039001,"comment_content":"老师好 现在我是开始二刷 意识到一个问题就是识不要用标记位来控制代码的执行逻辑 但拆分多个函数不也要先判断标记位再执行对应的方法吗","like_count":3,"discussions":[{"author":{"id":1190123,"avatar":"https://static001.geekbang.org/account/avatar/00/12/28/eb/af064421.jpg","nickname":"王争","note":"","ucode":"2B611BE0E0EDD4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":498828,"discussion_content":"你说的没错，关键看这个标记位的判断是放到上层逻辑还是下层逻辑，理论上讲，这种“ugly”的代码尽量放到上层。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1593310757,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":173980,"user_name":"javaadu","can_delete":false,"product_type":"c1","uid":1000519,"ip_address":"","ucode":"8C0B140F1C8992","user_header":"https://static001.geekbang.org/account/avatar/00/0f/44/47/3ddb94d0.jpg","comment_is_top":false,"comment_ctime":1579847182,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"10169781774","product_id":100039001,"comment_content":"打卡30:今日学习《设计模式之美》第33节，主要收获是：复习了改善代码可读性的编程技巧<br>1. 避免多层嵌套、避免复杂的逻辑控制关系，移除过深的嵌套层次，方法包括：去掉多余的 if 或 else 语句，使用 continue、break、return 关键字提前退出嵌套，调整执行顺序来减少嵌套，将部分嵌套逻辑抽象成函数。<br>2. 函数的职责要单一，避免用boolean变量做参数控制函数内部的逻辑<br>3. 尽量抽取出不相关的子问题<br>4. 配合《编写可读代码的艺术》和《代码整洁之道》一起阅读更好","like_count":2},{"had_liked":false,"id":172792,"user_name":"桂城老托尼","can_delete":false,"product_type":"c1","uid":1306032,"ip_address":"","ucode":"139E4B8EE88B79","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJcxSpNMqwqyicMvdOSr9ic0p1ABiauHnv7g7YQVSJuoHPoQbYDu3YzdpgmSAk2KricUBQ5yibWBWIq75w/132","comment_is_top":false,"comment_ctime":1579313627,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10169248219","product_id":100039001,"comment_content":"感谢争哥分享<br>文中提交的技巧都是实际工作中code的原则，可以作为CR时代码规范项的参考标准。 <br>以前经常踩 问题3 的，主要理论依据就是对外隐藏更多的细节，但违反了单一职责。<br>还有更多的代码规约方面的， Google Java代码规约  和 Alibaba Java 代码开发规范 其实都可以作为案头必备手册了，安利一下。 ","like_count":2},{"had_liked":false,"id":244619,"user_name":"小情绪","can_delete":false,"product_type":"c1","uid":1020311,"ip_address":"","ucode":"92D8081DB8DB45","user_header":"https://static001.geekbang.org/account/avatar/00/0f/91/97/3762ca10.jpg","comment_is_top":false,"comment_ctime":1598596930,"is_pvip":false,"replies":[{"id":"90134","content":"Android是收购的吧������","user_name":"作者回复","comment_id":244619,"uid":"1190123","ip_address":"","utype":1,"ctime":1598833903,"user_name_real":"王争"}],"discussion_count":2,"race_medal":0,"score":"5893564226","product_id":100039001,"comment_content":"王争老师，我瞅了一眼Android的java层源代码，类里面的import包没有按字母从小到大，作用域也没有按大小依次排列，是不是Google并不是严格执行这套标准，还是别的原因？","like_count":1,"discussions":[{"author":{"id":1190123,"avatar":"https://static001.geekbang.org/account/avatar/00/12/28/eb/af064421.jpg","nickname":"王争","note":"","ucode":"2B611BE0E0EDD4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":504638,"discussion_content":"Android是收购的吧������","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1598833903,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1007013,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/5d/a5/e35e15eb.jpg","nickname":"大壮哥","note":"","ucode":"340296B9B54032","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":404040,"discussion_content":"Android操作系统最初由Andy Rubin开发，主要支持手机。2005年8月由Google收购注资","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1634213917,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":224225,"user_name":"张三丰","can_delete":false,"product_type":"c1","uid":1155275,"ip_address":"","ucode":"3A6215A40B3B21","user_header":"https://static001.geekbang.org/account/avatar/00/11/a0/cb/aab3b3e7.jpg","comment_is_top":false,"comment_ctime":1591319506,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"5886286802","product_id":100039001,"comment_content":"这段代码有违反DRY原则的嫌疑。<br><br>public List&lt;Transaction&gt; selectTransactions(Long userId, Date startDate, Date endDate) {<br>  if (startDate != null &amp;&amp; endDate != null) {<br>    &#47;&#47; 查询两个时间区间的transactions<br>  }<br>  if (startDate != null &amp;&amp; endDate == null) {<br>    &#47;&#47; 查询startDate之后的所有transactions<br>  }<br>  if (startDate == null &amp;&amp; endDate != null) {<br>    &#47;&#47; 查询endDate之前的所有transactions<br>  }<br>  if (startDate == null &amp;&amp; endDate == null) {<br>    &#47;&#47; 查询所有的transactions<br>  }<br>}<br><br>&#47;&#47; 拆分成多个public函数，更加清晰、易用<br>public List&lt;Transaction&gt; selectTransactionsBetween(Long userId, Date startDate, Date endDate) {<br>  return selectTransactions(userId, startDate, endDate);<br>}<br><br>public List&lt;Transaction&gt; selectTransactionsStartWith(Long userId, Date startDate) {<br>  return selectTransactions(userId, startDate, null);<br>}<br><br>public List&lt;Transaction&gt; selectTransactionsEndWith(Long userId, Date endDate) {<br>  return selectTransactions(userId, null, endDate);<br>}<br><br>public List&lt;Transaction&gt; selectAllTransactions(Long userId) {<br>  return selectTransactions(userId, null, null);<br>}<br><br>private List&lt;Transaction&gt; selectTransactions(Long userId, Date startDate, Date endDate) {<br>  &#47;&#47; ...<br>}","like_count":1,"discussions":[{"author":{"id":1075267,"avatar":"https://static001.geekbang.org/account/avatar/00/10/68/43/1fe64086.jpg","nickname":"zero_","note":"","ucode":"14D3AD3D997112","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":588950,"discussion_content":"这块代码有点搞不明白","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1664249370,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"广东"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":182609,"user_name":"Geek_deb968","can_delete":false,"product_type":"c1","uid":1440025,"ip_address":"","ucode":"2305597B009AF3","user_header":"https://static001.geekbang.org/account/avatar/00/15/f9/19/7c3b12ee.jpg","comment_is_top":false,"comment_ctime":1582815280,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"5877782576","product_id":100039001,"comment_content":"我感觉最难实现的还是，在不断变化的需求代码重用及原先的命名跟不上变化了","like_count":1},{"had_liked":false,"id":174809,"user_name":"batman","can_delete":false,"product_type":"c1","uid":1266482,"ip_address":"","ucode":"73C30ACFC0D612","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/IIkdC2gohpcibib0AJvSdnJQefAuQYGlLySQOticThpF7Ck9WuDUQLJlgZ7ic13LIFnGBXXbMsSP3nZsbibBN98ZjGA/132","comment_is_top":false,"comment_ctime":1580394936,"is_pvip":true,"discussion_count":1,"race_medal":1,"score":"5875362232","product_id":100039001,"comment_content":"老师公司制定的统一编码规范长什么样子，能不能供大家学习学习","like_count":1,"discussions":[{"author":{"id":1055334,"avatar":"https://static001.geekbang.org/account/avatar/00/10/1a/66/2d9db9ed.jpg","nickname":"苦行僧","note":"","ucode":"726024A9A9CF44","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":278824,"discussion_content":"看看阿里的java开发规范","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1591238890,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":172701,"user_name":"李小四","can_delete":false,"product_type":"c1","uid":1112747,"ip_address":"","ucode":"2A766BE16B276B","user_header":"https://static001.geekbang.org/account/avatar/00/10/fa/ab/0d39e745.jpg","comment_is_top":false,"comment_ctime":1579253654,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5874220950","product_id":100039001,"comment_content":"设计模式_33<br>使用参数作为控制逻辑，这一点深有感触，除了故意设计成这样，还有一些是改成这样的(不想改程序结构，或者不能改)，在原来的基础上扩展功能，这样加一个用于控制逻辑的参数，程序就分成了两部分；如果后面再加，代码分成2^n个部分，而是会有大量的重复代码，同一个逻辑要该好几个地方，很容易忘。<br><br>对于代码质量，我有些个人的心得就是：写完代码之后，再看看，如果发现“不舒服”的地方，多想一想。","like_count":1},{"had_liked":false,"id":172517,"user_name":"Chen","can_delete":false,"product_type":"c1","uid":1503113,"ip_address":"","ucode":"C1128558AB5BC4","user_header":"https://static001.geekbang.org/account/avatar/00/16/ef/89/8c73a24d.jpg","comment_is_top":false,"comment_ctime":1579218005,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"5874185301","product_id":100039001,"comment_content":"函数中不要使用参数来做代码执行逻辑的控制。我之前写代码从来没关注到这点，学习了","like_count":1,"discussions":[{"author":{"id":1385377,"avatar":"https://static001.geekbang.org/account/avatar/00/15/23/a1/b08f3ee7.jpg","nickname":"何妨","note":"","ucode":"EC3983BFF7992A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":137975,"discussion_content":"这个还是要看情况，函数影响范围小而且总成对出现还是合起来好些，文中也提到了。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1579221189,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":354014,"user_name":"付磊","can_delete":false,"product_type":"c1","uid":1924882,"ip_address":"上海","ucode":"719BD0B72FF2AF","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/aXnFBB3XD3lwB3jf1A0PQqT66aJy4yycbRupJI3ia2CUFMuLsvYthM41TDopIIjL8kz7k2xE5vrAtQggQ6Jt8Zw/132","comment_is_top":false,"comment_ctime":1660016119,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1660016119","product_id":100039001,"comment_content":"关于老师说的第四点，函数设计要职责单一这个代码案例我认为不是很好，判断用户是否存在本身就是一个单一的事情,内部三个判断是属于用户是否存在不可少的判断，这样可读性会更好也更容易理解一些，当然如果确实有业务需要调用其中某个判断，那么可以将其抽出一个函数，当然用户是否存在这个函数也不可少，只是从硬编码改成了调用刚刚抽的函数","like_count":0},{"had_liked":false,"id":350299,"user_name":"谁都会变","can_delete":false,"product_type":"c1","uid":1195017,"ip_address":"","ucode":"9965748F7EBB57","user_header":"https://static001.geekbang.org/account/avatar/00/12/3c/09/b7f0eac6.jpg","comment_is_top":false,"comment_ctime":1656763352,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1656763352","product_id":100039001,"comment_content":"那个if else得处理逻辑没看懂，不可以这样写吗，有大佬能讲讲吗","like_count":0},{"had_liked":false,"id":327948,"user_name":"idiot","can_delete":false,"product_type":"c1","uid":2526391,"ip_address":"","ucode":"D7A6E980B530B4","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/fcftgBsticCicEEkuzB0GTkHIocX62YVTSvnhR1c94sccj42lVaYXrmcZyhzUI3l9NcvuN1rXLhXt2eBrZZ0Tw7A/132","comment_is_top":false,"comment_ctime":1640417463,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1640417463","product_id":100039001,"comment_content":"“3. 勿用函数参数来控制逻辑”，里面的例子没看懂。selectTransactions那个例子，拆分之后还是要调用一个公共的selectTransactions，这个新的公共函数不还是要判断null做不同分支处理吗？唯一区别是这个公共函数可以变成private，给用户用的是拆分后的不带控制参数的接口。<br>对于主体逻辑一致，只有很小差异的情况，如果不通过参数控制，想不明白怎么才能避免产生重复代码。","like_count":0},{"had_liked":false,"id":326886,"user_name":"BUG始终快我一步","can_delete":false,"product_type":"c1","uid":2869991,"ip_address":"","ucode":"230981531A30E2","user_header":"https://static001.geekbang.org/account/avatar/00/2b/ca/e7/454f7f0e.jpg","comment_is_top":false,"comment_ctime":1639733216,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1639733216","product_id":100039001,"comment_content":"java语言中可以将一些静态常量的名字设为 中文嘛?  因为有的时候可能是为了进行判断业务逻辑 感觉都是用0123那种进行判断 代码可读性太差 中文会影响项目执行速度嘛?    小公司 没有外国程序员","like_count":0},{"had_liked":false,"id":325456,"user_name":"锟斤拷","can_delete":false,"product_type":"c1","uid":2445197,"ip_address":"","ucode":"194F4082A2546A","user_header":"https://static001.geekbang.org/account/avatar/00/25/4f/8d/36311efc.jpg","comment_is_top":false,"comment_ctime":1638961607,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1638961607","product_id":100039001,"comment_content":"不错，今天的内容很实用","like_count":0},{"had_liked":false,"id":316229,"user_name":"charmsongo","can_delete":false,"product_type":"c1","uid":1609051,"ip_address":"","ucode":"4FBEE716E93A1A","user_header":"https://static001.geekbang.org/account/avatar/00/18/8d/5b/383a49e4.jpg","comment_is_top":false,"comment_ctime":1634207573,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1634207573","product_id":100039001,"comment_content":"1、把代码分割成更小的单元块<br>\t模块和类职责单一，方法逻辑提取主干，抽取方法包装细节，最好业务流程顺下来，方便理解<br>2、避免函数参数过多<br>\t函数参数大于5个时就要考虑重构函数了<br>\t考虑函数是否单一，能否拆分<br>\t考虑参数是否可以封装成对象。对外暴露的接口参数是对象好处是，添加参数可能对外部调用是无损的<br>3、勿用函数参数来控制逻辑<br>\t最好不用true、false来作为入参控制函数内部流程，破环函数单一性，最好拆分2个函数，除非函数是私有的，并且2个逻辑同时存在<br>4、函数设计要职责单一<br>\t函数对外提供的功能能多单一就多单一<br>5、移除过深的嵌套层次<br>\t编程语言提供的 continue、break、return 关键字，提前退出嵌套<br>\t可以通过卫语言，调整执行顺序来减少嵌套<br>\t将部分嵌套逻辑封装成函数调用，以此来减少嵌套。<br>6.、学会使用解释性变量<br>\t常量取代魔法参数<br>\t使用解释性变量来解释复杂表达式","like_count":0},{"had_liked":false,"id":291491,"user_name":"😳","can_delete":false,"product_type":"c1","uid":1452857,"ip_address":"","ucode":"9AFB87EF308539","user_header":"https://static001.geekbang.org/account/avatar/00/16/2b/39/19041d78.jpg","comment_is_top":false,"comment_ctime":1620306299,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1620306299","product_id":100039001,"comment_content":"不要给变量名起魔术字，比如1，l，o，0","like_count":0},{"had_liked":false,"id":288566,"user_name":"Graham","can_delete":false,"product_type":"c1","uid":1994570,"ip_address":"","ucode":"C2545DE16EC3DD","user_header":"","comment_is_top":false,"comment_ctime":1618540373,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1618540373","product_id":100039001,"comment_content":"函数的参数不要超过4，5个，<br>对于boolean 类型的参数，如果要用它去做判断条件，<br>还不如在外层的时候，<br>if (! flag):<br>   return;<br>##<br>callYourFunc()","like_count":0},{"had_liked":false,"id":286292,"user_name":"云","can_delete":false,"product_type":"c1","uid":2107468,"ip_address":"","ucode":"705DF6B2A7654B","user_header":"https://static001.geekbang.org/account/avatar/00/20/28/4c/afe2ab34.jpg","comment_is_top":false,"comment_ctime":1617242319,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1617242319","product_id":100039001,"comment_content":"关于代码条件判断逻辑过多，一般都是早退原则。 ","like_count":0},{"had_liked":false,"id":278122,"user_name":"辉","can_delete":false,"product_type":"c1","uid":1697810,"ip_address":"","ucode":"0D7B2C24BA8BD2","user_header":"https://static001.geekbang.org/account/avatar/00/19/e8/12/74f387c8.jpg","comment_is_top":false,"comment_ctime":1612770081,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1612770081","product_id":100039001,"comment_content":"关于编程规范，有需要的可以去参考阿里的java开发手册。那里面讲的更加细致。","like_count":0},{"had_liked":false,"id":277720,"user_name":"猴精鸭","can_delete":false,"product_type":"c1","uid":1514660,"ip_address":"","ucode":"7513DC4138E031","user_header":"https://static001.geekbang.org/account/avatar/00/17/1c/a4/202dde43.jpg","comment_is_top":false,"comment_ctime":1612529225,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1612529225","product_id":100039001,"comment_content":"基本上都是我平时开发是遵守的规范突然，觉得自己好厉害，哈哈哈","like_count":0},{"had_liked":false,"id":263935,"user_name":"淤白","can_delete":false,"product_type":"c1","uid":1206503,"ip_address":"","ucode":"D1E65DC40DAF68","user_header":"https://static001.geekbang.org/account/avatar/00/12/68/e7/ee47d0e2.jpg","comment_is_top":false,"comment_ctime":1606298174,"is_pvip":false,"replies":[{"id":"96085","content":"加油","user_name":"作者回复","comment_id":263935,"uid":"1190123","ip_address":"","utype":1,"ctime":1606700685,"user_name_real":"王争"}],"discussion_count":1,"race_medal":0,"score":"1606298174","product_id":100039001,"comment_content":"Tap键、CodeReview没有做到，别的都在无意识之间做到了，打个卡。。。","like_count":0,"discussions":[{"author":{"id":1190123,"avatar":"https://static001.geekbang.org/account/avatar/00/12/28/eb/af064421.jpg","nickname":"王争","note":"","ucode":"2B611BE0E0EDD4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":510356,"discussion_content":"加油","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1606700685,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":258870,"user_name":"低调","can_delete":false,"product_type":"c1","uid":1768828,"ip_address":"","ucode":"2C24C4A8B232E6","user_header":"https://static001.geekbang.org/account/avatar/00/1a/fd/7c/6ba1a1fd.jpg","comment_is_top":false,"comment_ctime":1604570992,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1604570992","product_id":100039001,"comment_content":"函数的行数建议参考编译器方法内联优化的知识一起说下","like_count":0},{"had_liked":false,"id":257741,"user_name":"郑大钱","can_delete":false,"product_type":"c1","uid":1503067,"ip_address":"","ucode":"114CF48056880E","user_header":"https://static001.geekbang.org/account/avatar/00/16/ef/5b/ff28088f.jpg","comment_is_top":false,"comment_ctime":1604111902,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1604111902","product_id":100039001,"comment_content":"激动的心，颤抖的手，我几乎都做到了，有木有！<br>对于“避免过深的嵌套”很有感触，记得是在一个技术晚宴上，老大说：<br>我们搞技术的人呀，对技术还是要有一点洁癖，写出来的代码要规整。正面看整洁，转90度看，依然要保持整洁。不要因为嵌套过度让代码看起来坑坑洼洼的。<br>自此以后一段时间，我都把代码规整当作写好代码的目标，也总结出了和文章类似的技巧：<br>1. 合并条件，移除不必要的if else<br>2. 调整执行顺序<br>3. 提前退出嵌套<br>4. 将嵌套逻辑单独封装<br>现在回想起来，当时的优化嵌套深度也是一个可一集中资源优化的点，也是一个好的战略。","like_count":0},{"had_liked":false,"id":255826,"user_name":"大力水手Jerry","can_delete":false,"product_type":"c1","uid":1227840,"ip_address":"","ucode":"E4A6C71E275DB5","user_header":"https://static001.geekbang.org/account/avatar/00/12/bc/40/2279cfb5.jpg","comment_is_top":false,"comment_ctime":1603439876,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1603439876","product_id":100039001,"comment_content":"这节课的几条规范大致可分为三类：<br>1. 模块化。自顶向下的分解，利用解释性变量（定义常量、解释性变量、新的子函数）都是模块化的体现<br>2. 语义单一性。函数的功能单一的深层原因是应保持对象（变量、函数、类）的语义唯一，避免上层使用者考虑过多细节<br>3. 减少嵌套。关键是将退出的判断条件提前。","like_count":0},{"had_liked":false,"id":250655,"user_name":"笨鸟","can_delete":false,"product_type":"c1","uid":1236320,"ip_address":"","ucode":"68029ADA76AA5A","user_header":"https://static001.geekbang.org/account/avatar/00/12/dd/60/a6a4f79a.jpg","comment_is_top":false,"comment_ctime":1601187513,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1601187513","product_id":100039001,"comment_content":"勿用参数判断逻辑,我想问一下,根据这个参数判断的逻辑只有一行不一样,这样也需要另起一个吗?重构离职女同事的代码,一脸懵逼,几乎一模一样的函数写了一堆...","like_count":0},{"had_liked":false,"id":250291,"user_name":"Viva5649","can_delete":false,"product_type":"c1","uid":1334628,"ip_address":"","ucode":"9781D8FDBD426A","user_header":"https://static001.geekbang.org/account/avatar/00/14/5d/64/9602fa2c.jpg","comment_is_top":false,"comment_ctime":1601014549,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1601014549","product_id":100039001,"comment_content":"当时买设计模式这门课的时候，没想到还有跟这么多与设计原则和编程规范相关的内容，看到现在感触还是很深的，在许多内容上有很强烈的共鸣。我个人是个强迫症，对于代码风格十分的挑剔，很庆幸的是自己在工作过程养成的许多习惯都与课程中提到的设计原则和编程规范不谋而合。然而在实际工作中，大多数的同事还是属于那种不注重细节只管实现功能的类型，不仅有工作了几年的熟练工，还有工作了10年以上的老员工，团队内也几乎不进行CodeReview，只有偶尔的线上代码审核。希望自己在今后能够在团队中多做些设计模式方面内容的分享，起到带头作用，把优秀的编程思想传播给更多的同事。","like_count":0},{"had_liked":false,"id":246957,"user_name":"宇天飞","can_delete":false,"product_type":"c1","uid":1126444,"ip_address":"","ucode":"3FB37D1E2DAA61","user_header":"https://static001.geekbang.org/account/avatar/00/11/30/2c/06375913.jpg","comment_is_top":false,"comment_ctime":1599540820,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1599540820","product_id":100039001,"comment_content":"空格，将格式更清晰，","like_count":0},{"had_liked":false,"id":241523,"user_name":"记事本","can_delete":false,"product_type":"c1","uid":1362659,"ip_address":"","ucode":"76F2CAFA309437","user_header":"https://static001.geekbang.org/account/avatar/00/14/ca/e3/447aff89.jpg","comment_is_top":false,"comment_ctime":1597322887,"is_pvip":true,"replies":[{"id":"89209","content":"文章中有解释<br>","user_name":"作者回复","comment_id":241523,"uid":"1190123","ip_address":"","utype":1,"ctime":1597408590,"user_name_real":"王争"}],"discussion_count":1,"race_medal":0,"score":"1597322887","product_id":100039001,"comment_content":"为什么不能用tab缩进？","like_count":0,"discussions":[{"author":{"id":1190123,"avatar":"https://static001.geekbang.org/account/avatar/00/12/28/eb/af064421.jpg","nickname":"王争","note":"","ucode":"2B611BE0E0EDD4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":503762,"discussion_content":"文章中有解释\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1597408590,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":236900,"user_name":"漂浮群岛","can_delete":false,"product_type":"c1","uid":1308388,"ip_address":"","ucode":"395F8E168562F6","user_header":"https://static001.geekbang.org/account/avatar/00/13/f6/e4/b6ad9bbd.jpg","comment_is_top":false,"comment_ctime":1595580193,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1595580193","product_id":100039001,"comment_content":"使用解释性变量替代复杂表达式很受用！！","like_count":0},{"had_liked":false,"id":232509,"user_name":"冬渐暖","can_delete":false,"product_type":"c1","uid":1586800,"ip_address":"","ucode":"907E41AAE9A36C","user_header":"https://static001.geekbang.org/account/avatar/00/18/36/70/00122b24.jpg","comment_is_top":false,"comment_ctime":1594024066,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1594024066","product_id":100039001,"comment_content":"一行代码多长最合适？最好不要超过 IDE 的显示宽度。<br>平时写完代码的时候都会ctrl+alt+l格式化部分代码的，所以不会超过一行的哈哈<br><br>&#47;&#47; <br>针对   “3. 勿用函数参数来控制逻辑”的“根据参数是否为 null”来控制逻辑的情况”  和“4. 函数设计要职责单一”<br>记得你之前说 “设计接口的时候，我们要多思考一下，这样的接口设计是否足够通用，是否能够做到在替换具体的接口实现的时候，不需要任何接口定义的改动。” <br>这样是否满足你说的接口要有通用性，现在又功能单一。。。<br>&#47;&#47; <br>还有“5. 移除过深的嵌套层次”中的，“用编程语言提供的 continue、break、return 关键字，提前退出嵌套。”<br>用这些会不会加大代码的阅读难度?因为这个和三目运算符一样，经常用的人容易理解，但是后台不一定所有人都和自己一样<br><br>","like_count":0},{"had_liked":false,"id":229158,"user_name":"微末凡尘","can_delete":false,"product_type":"c1","uid":1099525,"ip_address":"","ucode":"25EDFD0914D0F4","user_header":"https://static001.geekbang.org/account/avatar/00/10/c7/05/19c5c255.jpg","comment_is_top":false,"comment_ctime":1592911074,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1592911074","product_id":100039001,"comment_content":"尽可能把判断错误很明显的代码写在前面，减少if else","like_count":0},{"had_liked":false,"id":229155,"user_name":"微末凡尘","can_delete":false,"product_type":"c1","uid":1099525,"ip_address":"","ucode":"25EDFD0914D0F4","user_header":"https://static001.geekbang.org/account/avatar/00/10/c7/05/19c5c255.jpg","comment_is_top":false,"comment_ctime":1592910605,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1592910605","product_id":100039001,"comment_content":"合理使用语言本身自带的函数和特性，也可以有效的提高代码的整洁度，比如php语言中可以使用array_map代替foreach循环","like_count":0},{"had_liked":false,"id":220754,"user_name":"未来小娃","can_delete":false,"product_type":"c1","uid":1047329,"ip_address":"","ucode":"477D166EBB6B70","user_header":"https://static001.geekbang.org/account/avatar/00/0f/fb/21/d017438c.jpg","comment_is_top":false,"comment_ctime":1590319372,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1590319372","product_id":100039001,"comment_content":"【设计模式笔记33】20200524<br>今天主要对“不要使用参数“控制代码逻辑深有感触，首先这么做有什么问题呢？首先肯定是不满足单一职责原则，其次增加了使用成本。因为只要使用了布尔参数必然要做的就不止一件事了，你可能会说都是一类的，但是如果要新增了一种标识是不是还有可能增加参数呢，这样影响就很大了。方法也很简单拆分为多个函数或者通过参数对象，要注意的是参数对象内部最好不要有布尔参数。最近在做组内的开发规范制定，联想到的一个问题是通过参数修改字段属性，这种做法也不好，参数是引用类型那么传递的是引用地址，修改后后面的函数拿到的值就不是原始的了，一般这种需要修改对象属性的情况可以考虑引入额外的上下文对象解决","like_count":0},{"had_liked":false,"id":219666,"user_name":"达文西","can_delete":false,"product_type":"c1","uid":1398824,"ip_address":"","ucode":"01C1063F23D634","user_header":"https://static001.geekbang.org/account/avatar/00/15/58/28/c86340ca.jpg","comment_is_top":false,"comment_ctime":1590060327,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1590060327","product_id":100039001,"comment_content":"都是非常实用的编程技巧","like_count":0},{"had_liked":false,"id":219229,"user_name":"feifei","can_delete":false,"product_type":"c1","uid":1258380,"ip_address":"","ucode":"BFA3BE8D8773A7","user_header":"https://static001.geekbang.org/account/avatar/00/13/33/8c/23eef8d7.jpg","comment_is_top":false,"comment_ctime":1589969119,"is_pvip":false,"replies":[{"id":"86625","content":"你说的没错！拆太细、太小的函数，也没意思，读代码的时候跳来跳去，容易打断思路","user_name":"作者回复","comment_id":219229,"uid":"1190123","ip_address":"","utype":1,"ctime":1594783919,"user_name_real":"王争"}],"discussion_count":1,"race_medal":0,"score":"1589969119","product_id":100039001,"comment_content":"这个if else拆的函数太多了，类就大了，类大了，同样阅读性很差，找一个方法，翻来翻去的，所以我觉得只要方法不是太长，就不必要拆开多个小的方法，老师觉得呢","like_count":0,"discussions":[{"author":{"id":1190123,"avatar":"https://static001.geekbang.org/account/avatar/00/12/28/eb/af064421.jpg","nickname":"王争","note":"","ucode":"2B611BE0E0EDD4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":495726,"discussion_content":"你说的没错！拆太细、太小的函数，也没意思，读代码的时候跳来跳去，容易打断思路","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1594783919,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":219070,"user_name":"L!en6o","can_delete":false,"product_type":"c1","uid":1054472,"ip_address":"","ucode":"E0931CB8998260","user_header":"https://static001.geekbang.org/account/avatar/00/10/17/08/566fb246.jpg","comment_is_top":false,"comment_ctime":1589939385,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1589939385","product_id":100039001,"comment_content":"回头看此文章，发现自己不知不觉都已经符合了全文提到的几点。","like_count":0},{"had_liked":false,"id":218317,"user_name":"炫炫","can_delete":false,"product_type":"c1","uid":1358609,"ip_address":"","ucode":"FDC7A0C6E08B02","user_header":"https://static001.geekbang.org/account/avatar/00/14/bb/11/7069b8eb.jpg","comment_is_top":false,"comment_ctime":1589778298,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1589778298","product_id":100039001,"comment_content":"不要在函数中使用布尔类型的标识参数来控制内部逻辑，true 的时候走这块逻辑，false 的时候走另一块逻辑。这明显违背了单一职责原则和接口隔离原则。我建议将其拆成两个函数，可读性上也要更好。这个深有感触","like_count":0},{"had_liked":false,"id":215821,"user_name":"阿毅","can_delete":false,"product_type":"c1","uid":1126482,"ip_address":"","ucode":"5B006F905A1FDE","user_header":"https://static001.geekbang.org/account/avatar/00/11/30/52/7880dcf0.jpg","comment_is_top":false,"comment_ctime":1589111081,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1589111081","product_id":100039001,"comment_content":"关于代码层级，还有其他的方法，比如：<br>1、逆向思维，不要老是判断 != null , 而是要用逆向思维，判断 == null 的情况；<br>2、使用卫语句；<br>3、封装为函数；<br>4、使用设计模式解决 多个if的问题。","like_count":0},{"had_liked":false,"id":203423,"user_name":"墨鱼","can_delete":false,"product_type":"c1","uid":1022720,"ip_address":"","ucode":"8FB5E4DCB8A024","user_header":"https://static001.geekbang.org/account/avatar/00/0f/9b/00/654be3f7.jpg","comment_is_top":false,"comment_ctime":1586187923,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1586187923","product_id":100039001,"comment_content":"赞同争哥说的，统一用一套标准，然后 codereview。<br><br>","like_count":0},{"had_liked":false,"id":197756,"user_name":"秋风画扇","can_delete":false,"product_type":"c1","uid":1132356,"ip_address":"","ucode":"5BCBC1422C51EC","user_header":"https://static001.geekbang.org/account/avatar/00/11/47/44/964aa665.jpg","comment_is_top":false,"comment_ctime":1585396983,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1585396983","product_id":100039001,"comment_content":"看多了优秀的开源代码，就能很轻松的找出坏味道。跟练书法一个道理，多看好的作品审美能力也会提升。","like_count":0},{"had_liked":false,"id":196573,"user_name":"成活","can_delete":false,"product_type":"c1","uid":1734795,"ip_address":"","ucode":"F8840EE4DC3969","user_header":"https://static001.geekbang.org/account/avatar/00/1a/78/8b/421cb2c4.jpg","comment_is_top":false,"comment_ctime":1585293912,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1585293912","product_id":100039001,"comment_content":"这三章讲的规范我大多数都有遵守，感人。虽然无力改变项目中*一样的逻辑，但遇到能改的规范问题还是顺手给改了","like_count":0},{"had_liked":false,"id":186352,"user_name":"雷小鸿","can_delete":false,"product_type":"c1","uid":1368897,"ip_address":"","ucode":"424DC9A532FFD7","user_header":"https://static001.geekbang.org/account/avatar/00/14/e3/41/bd0e3a04.jpg","comment_is_top":false,"comment_ctime":1583829419,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1583829419","product_id":100039001,"comment_content":"把多的参数方法，拆分成短的，多个方法。把在一个方法里面一直判断的方法，拆分成多个单个独立的方法，这点以后得注意以前注意的少！","like_count":0},{"had_liked":false,"id":184756,"user_name":"安静","can_delete":false,"product_type":"c1","uid":1212634,"ip_address":"","ucode":"7C4DB6D81A48EB","user_header":"https://static001.geekbang.org/account/avatar/00/12/80/da/9c0c458c.jpg","comment_is_top":false,"comment_ctime":1583396745,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1583396745","product_id":100039001,"comment_content":"这些规范正是很多开发团队忽略的东西，一味得快速响应业务需求，而造成垃圾代码太多，这些章节单看好像都很通俗简单，但是作为一个团队leader，真的要将这些规范融入到团队管理中，不能觉得这些是小事情而忽略。而且看完这些章节之后，我觉得在项目设计初期，类图的呈现真的很重要。还有就是code review真的很重要，leader可以了解熟悉业务需求的实现细节，实施者也能从code review中学到很多。","like_count":0},{"had_liked":false,"id":183876,"user_name":"Heaven","can_delete":false,"product_type":"c1","uid":1694207,"ip_address":"","ucode":"FA33FBCC66C911","user_header":"https://static001.geekbang.org/account/avatar/00/19/d9/ff/b23018a6.jpg","comment_is_top":false,"comment_ctime":1583152454,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1583152454","product_id":100039001,"comment_content":"对于这个问题,我想了很久,觉得可以从函数内部的结构入手,除了擅长使用空行外,还尽量将相同类型的变量放在一起,我个人风格就是将可以封装的初始化new的对象,放在一开始,并逐个介绍一下,方便阅读者去理解,还有就是书写配置文件的时候,对于相同的配置项,比如配置一些外部url,可以将其的公用ip抽取出来,形成一个公用的配置项,然后其配置项直接引用即可,方便日后的修改<br>我个人还有一个问题,对于老师说的通过true或者false,参数是否为null来控制函数逻辑,在传统MVC三层架构中,我们需要和前端交互时候,能否在Controller层,让其传入true或者false这样的一个参数,然后我在Controller层判断完成后调用不同的Service层方法,或者创建不同的Domain类.这样是否可行?不然的话,我需要暴露更多的接口给页面,反而让前段和我更难适配<br>","like_count":0},{"had_liked":false,"id":183813,"user_name":"去777","can_delete":false,"product_type":"c1","uid":1608726,"ip_address":"","ucode":"8EF8CF537ABED3","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/eVgcqg5p554rB5Oxs5uOBRtiaTkaGJoPf8IODUWdRPicgUonTtCyK0YJ8t0hTAtHoSMAr8jZNWwJgQtMu5NMcS0w/132","comment_is_top":false,"comment_ctime":1583139159,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1583139159","product_id":100039001,"comment_content":"魔法数字 哈哈哈","like_count":0,"discussions":[{"author":{"id":1488356,"avatar":"https://static001.geekbang.org/account/avatar/00/16/b5/e4/e6faf686.jpg","nickname":"握了个大蚂蚱","note":"","ucode":"AD34AD4FA37371","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":297602,"discussion_content":"可爱","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1596982202,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":181546,"user_name":"否极泰来","can_delete":false,"product_type":"c1","uid":1439355,"ip_address":"","ucode":"C249173266251A","user_header":"https://static001.geekbang.org/account/avatar/00/15/f6/7b/b6abcbbe.jpg","comment_is_top":false,"comment_ctime":1582556968,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1582556968","product_id":100039001,"comment_content":"不要在函数中使用布尔类型的标识参数来控制内部逻辑，true 的时候走这块逻辑，false 的时候走另一块逻辑。<br>这个我经常干。。。以后改改吧～","like_count":0},{"had_liked":false,"id":179229,"user_name":"Joker","can_delete":false,"product_type":"c1","uid":1156592,"ip_address":"","ucode":"126AF848001A1E","user_header":"https://static001.geekbang.org/account/avatar/00/11/a5/f0/8648c464.jpg","comment_is_top":false,"comment_ctime":1581940755,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1581940755","product_id":100039001,"comment_content":"看到函数多参数的解决方法，就想到以前项目，项目负责人就喜欢吧多个参数封装到一个map里面，然后各种put，get，转换。。","like_count":0},{"had_liked":false,"id":178714,"user_name":"helloworld","can_delete":false,"product_type":"c1","uid":1015754,"ip_address":"","ucode":"00DF2FEC58D2E6","user_header":"https://static001.geekbang.org/account/avatar/00/0f/7f/ca/ea85bfdd.jpg","comment_is_top":false,"comment_ctime":1581783737,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1581783737","product_id":100039001,"comment_content":"印象深刻的有：函数不要通过参数的值的判断来执行不同的逻辑；可以将一些逻辑提取为函数减少if-else嵌套；可以通过函数重载的形式来减少函数参数的个数","like_count":0},{"had_liked":false,"id":177682,"user_name":"wind","can_delete":false,"product_type":"c1","uid":1297833,"ip_address":"","ucode":"872D0C7F98D296","user_header":"https://static001.geekbang.org/account/avatar/00/13/cd/a9/f89d841c.jpg","comment_is_top":false,"comment_ctime":1581473051,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1581473051","product_id":100039001,"comment_content":"那个continue的例子我觉得改之前和改之后没啥区别啊? <br>10行代码在if里又不会走到.<br><br>还有我数来数去加上统一规范也才19条, 没有20条啊?","like_count":0},{"had_liked":false,"id":176751,"user_name":"DullBird","can_delete":false,"product_type":"c1","uid":1110494,"ip_address":"","ucode":"80E2FD5F9687CB","user_header":"https://static001.geekbang.org/account/avatar/00/10/f1/de/3ebcbb3f.jpg","comment_is_top":false,"comment_ctime":1581154829,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1581154829","product_id":100039001,"comment_content":"对于不要把控制逻辑参数暴露出来，而是拆分成多个方案。这个点。我有点疑惑。<br>1. 比方说有个组织查询组织下人的抽象，暴露了listUserByNode()的接口<br>2. 组织包括(部门-员工),(班级-学生),由于某种原因，有4张表，部门表，员工，班级，学生。<br>3. 如果我只想查询学生的时候 调用 listUserByNode()，传入type=student，但是由于底层表是分离的，实际上执行了另一段代码。只不过调用方认为这只是个筛选条件。<br><br>还有是最近在看Dubbo，dubbo里面用的 spi机制，我感觉也是把控制留给了参数，实现对外代码通用。只不过它是用多态实现，我们有时候方法逻辑简单。就用if...else解决了。这点不是特别能理解。","like_count":0},{"had_liked":false,"id":173729,"user_name":"xuanyuan","can_delete":false,"product_type":"c1","uid":1113737,"ip_address":"","ucode":"1EC79B9372868F","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTI2icbib62icXtibTkThtyRksbuJLoTLMts7zook2S30MiaBtbz0f5JskwYicwqXkhpYfvCpuYkcvPTibEaQ/132","comment_is_top":false,"comment_ctime":1579671097,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1579671097","product_id":100039001,"comment_content":"英雄所见略同。除了每行缩进不一样之外，其他全部一致。能跟这样的人一起工作是最幸福的事。","like_count":0},{"had_liked":false,"id":173582,"user_name":"落叶飞逝的恋","can_delete":false,"product_type":"c1","uid":1046429,"ip_address":"","ucode":"F9A95DB28BCF1E","user_header":"https://static001.geekbang.org/account/avatar/00/0f/f7/9d/be04b331.jpg","comment_is_top":false,"comment_ctime":1579600857,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1579600857","product_id":100039001,"comment_content":"关于Java代码规范这块建议参考《阿里巴巴Java开发手册》，每个点都比较细","like_count":0},{"had_liked":false,"id":173575,"user_name":"牛顿的烈焰激光剑","can_delete":false,"product_type":"c1","uid":1042022,"ip_address":"","ucode":"C57018C65DAFB3","user_header":"https://static001.geekbang.org/account/avatar/00/0f/e6/66/fbbf0bb1.jpg","comment_is_top":false,"comment_ctime":1579599201,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1579599201","product_id":100039001,"comment_content":"关于代码可读性，除非公司导入了提供统一的布局配置文件，否则绝对不要用 IDE 的全选代码再自动格式化。我以前有个 leader 就是这么干的，后来他就转行了。","like_count":0},{"had_liked":false,"id":173092,"user_name":"程序员小跃","can_delete":false,"product_type":"c1","uid":1015483,"ip_address":"","ucode":"25BB96E0791A60","user_header":"https://static001.geekbang.org/account/avatar/00/0f/7e/bb/947c329a.jpg","comment_is_top":false,"comment_ctime":1579423274,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1579423274","product_id":100039001,"comment_content":"最后一节课里的很多小细节我都是对号入座了，这也就间接说明我来了，是一件正确的事情。<br><br>来这里，把很多对号入座的错误都找出来，并一一改进，那我还有什么遗憾的呢","like_count":0},{"had_liked":false,"id":173035,"user_name":"郡鸿","can_delete":false,"product_type":"c1","uid":1241201,"ip_address":"","ucode":"7A6298D288E078","user_header":"https://static001.geekbang.org/account/avatar/00/12/f0/71/c7b0a1f8.jpg","comment_is_top":false,"comment_ctime":1579415585,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1579415585","product_id":100039001,"comment_content":"最近正好在重构以前打的项目，这节课上讲的东西都用过，特别是for循环嵌套重构的问题。可以用sonarLint进行代码扫描","like_count":0},{"had_liked":false,"id":172903,"user_name":"Michael","can_delete":false,"product_type":"c1","uid":1274787,"ip_address":"","ucode":"C233DF1D224EC1","user_header":"https://static001.geekbang.org/account/avatar/00/13/73/a3/2b077607.jpg","comment_is_top":false,"comment_ctime":1579355354,"is_pvip":true,"replies":[{"id":"67740","content":"是的，我改下，多谢指出","user_name":"作者回复","comment_id":172903,"uid":"1190123","ip_address":"","utype":1,"ctime":1580118181,"user_name_real":"王争"}],"discussion_count":1,"race_medal":0,"score":"1579355354","product_id":100039001,"comment_content":"public void getUser<br>这个返回值和函数命名好像不是很搭哦","like_count":0,"discussions":[{"author":{"id":1190123,"avatar":"https://static001.geekbang.org/account/avatar/00/12/28/eb/af064421.jpg","nickname":"王争","note":"","ucode":"2B611BE0E0EDD4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":481897,"discussion_content":"是的，我改下，多谢指出","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1580118181,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":172853,"user_name":"肥而不腻","can_delete":false,"product_type":"c1","uid":1435246,"ip_address":"","ucode":"3E6786A82A6DD6","user_header":"https://static001.geekbang.org/account/avatar/00/15/e6/6e/062da5e4.jpg","comment_is_top":false,"comment_ctime":1579335364,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1579335364","product_id":100039001,"comment_content":"日常地铁打卡！","like_count":0},{"had_liked":false,"id":172768,"user_name":"Jian","can_delete":false,"product_type":"c1","uid":1107305,"ip_address":"","ucode":"17ED4919F22DEC","user_header":"https://static001.geekbang.org/account/avatar/00/10/e5/69/719ec5d0.jpg","comment_is_top":false,"comment_ctime":1579278273,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1579278273","product_id":100039001,"comment_content":" 现在在公司code review的人都不会很认真的看，特别是代码量多的时候","like_count":0},{"had_liked":false,"id":172754,"user_name":"辣么大","can_delete":false,"product_type":"c1","uid":1396951,"ip_address":"","ucode":"AB308B6DCA0108","user_header":"https://static001.geekbang.org/account/avatar/00/15/50/d7/f82ed283.jpg","comment_is_top":false,"comment_ctime":1579273794,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1579273794","product_id":100039001,"comment_content":"项目建立合理的目录结构和文件组织，保持清晰的文件组织结构可以使代码更易读和可维护。","like_count":0},{"had_liked":false,"id":172741,"user_name":"Frank","can_delete":false,"product_type":"c1","uid":1018370,"ip_address":"","ucode":"7A488CC6FE15E7","user_header":"https://static001.geekbang.org/account/avatar/00/0f/8a/02/828938c9.jpg","comment_is_top":false,"comment_ctime":1579270151,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1579270151","product_id":100039001,"comment_content":"今天从这边文章中学到了很多技巧，也纠正了以前我在实际开发中常用的一些不好的开发习惯：如使用布尔类型的变量来控制代码执行逻辑。以前觉得写在一起就行了，没必要拆分。现在学习了单一职责原则后，才发现原来多数人写这种代码时将其拆分是这个原因。还有就是以前经常写多层嵌套的代码，导致代码可读性很差。这些“坏习惯”都走过一遍了。感谢同事对自己的代码的review，也给我提出了一些宝贵的建议，使自己意识到自己写的不好的地方，以此来不断改进。","like_count":0},{"had_liked":false,"id":172716,"user_name":"君哥聊技术","can_delete":false,"product_type":"c1","uid":1325816,"ip_address":"","ucode":"2C9A22BCE4C79E","user_header":"https://static001.geekbang.org/account/avatar/00/14/3a/f8/c1a939e7.jpg","comment_is_top":false,"comment_ctime":1579262719,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1579262719","product_id":100039001,"comment_content":"最开心的事情就是我的很多想法跟文中一样，继续努力","like_count":0},{"had_liked":false,"id":172703,"user_name":"东方奇骥","can_delete":false,"product_type":"c1","uid":1354850,"ip_address":"","ucode":"DEE7085F7E55A4","user_header":"https://static001.geekbang.org/account/avatar/00/14/ac/62/37912d51.jpg","comment_is_top":false,"comment_ctime":1579254533,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1579254533","product_id":100039001,"comment_content":"这些规范公司也都在提，特别期待后面的实战部分。","like_count":0},{"had_liked":false,"id":172694,"user_name":"严","can_delete":false,"product_type":"c1","uid":1775076,"ip_address":"","ucode":"9704161D1B317C","user_header":"","comment_is_top":false,"comment_ctime":1579252287,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1579252287","product_id":100039001,"comment_content":"跟上大部队的脚步咯","like_count":0},{"had_liked":false,"id":172678,"user_name":"天空","can_delete":false,"product_type":"c1","uid":1268892,"ip_address":"","ucode":"9C721B726A55D1","user_header":"https://static001.geekbang.org/account/avatar/00/13/5c/9c/c5528d9f.jpg","comment_is_top":false,"comment_ctime":1579250131,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1579250131","product_id":100039001,"comment_content":"发现写代码就跟玩拼图一样，每个方法是一个功能，然后再把每个方法组合到一块就是一个业务！！！","like_count":0},{"had_liked":false,"id":172671,"user_name":"编程界的小学生","can_delete":false,"product_type":"c1","uid":1593289,"ip_address":"","ucode":"4A5BE9A5E877FA","user_header":"https://static001.geekbang.org/account/avatar/00/18/4f/c9/9f51fd27.jpg","comment_is_top":false,"comment_ctime":1579248902,"is_pvip":false,"replies":[{"id":"67742","content":"没太看懂你说的😂","user_name":"作者回复","comment_id":172671,"uid":"1190123","ip_address":"","utype":1,"ctime":1580118539,"user_name_real":"王争"}],"discussion_count":2,"race_medal":0,"score":"1579248902","product_id":100039001,"comment_content":"&#47;&#47; 拆分成三个函数<br>public boolean checkUserIfExistingByTelephone(String telephone);<br>public boolean checkUserIfExistingByUsername(String username);<br>public boolean checkUserIfExistingByEmail(String email);<br><br>这种的，不也得判断是不是空吗？不是空的话调用。 是不是可以把判断 放到每个小方法里面，是空就false","like_count":0,"discussions":[{"author":{"id":1190123,"avatar":"https://static001.geekbang.org/account/avatar/00/12/28/eb/af064421.jpg","nickname":"王争","note":"","ucode":"2B611BE0E0EDD4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":481815,"discussion_content":"没太看懂你说的😂","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1580118539,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1314724,"avatar":"https://static001.geekbang.org/account/avatar/00/14/0f/a4/0b49469f.jpg","nickname":"木子00","note":"","ucode":"8F78CA722EB29B","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":277605,"discussion_content":"意思是：怎么根据参数的不同，调用这三个函数。\n反过来说：还不是要根据参数的不同，判断调用哪个吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1591078347,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":172616,"user_name":"知行合一","can_delete":false,"product_type":"c1","uid":1521486,"ip_address":"","ucode":"2B8E634FC4CFB7","user_header":"https://static001.geekbang.org/account/avatar/00/17/37/4e/5c3153b2.jpg","comment_is_top":false,"comment_ctime":1579236640,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1579236640","product_id":100039001,"comment_content":"学习了一些自己之前注意不到的问题，也希望在团队里能真正实行这些规范，提高代码质量就是提高效率，减少出错的概率。","like_count":0},{"had_liked":false,"id":172612,"user_name":"迁橘","can_delete":false,"product_type":"c1","uid":1492125,"ip_address":"","ucode":"8FE37B7CA6CB74","user_header":"https://static001.geekbang.org/account/avatar/00/16/c4/9d/7c4dbcd9.jpg","comment_is_top":false,"comment_ctime":1579235965,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1579235965","product_id":100039001,"comment_content":"打卡，一大早起开赶车回家，路上不忘来看","like_count":0},{"had_liked":false,"id":172595,"user_name":"睁眼看世界","can_delete":false,"product_type":"c1","uid":1206388,"ip_address":"","ucode":"F94CF34BC5B2AC","user_header":"https://static001.geekbang.org/account/avatar/00/12/68/74/461b202d.jpg","comment_is_top":false,"comment_ctime":1579229420,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1579229420","product_id":100039001,"comment_content":"打卡，所有的规范都是参考，重要的是写出可读、可维护、可扩展的代码。期待争哥后续通过设计模式改造多重嵌套的问题。","like_count":0},{"had_liked":false,"id":172584,"user_name":"William","can_delete":false,"product_type":"c1","uid":1346215,"ip_address":"","ucode":"55F5D9DEE485B1","user_header":"https://static001.geekbang.org/account/avatar/00/14/8a/a7/674c1864.jpg","comment_is_top":false,"comment_ctime":1579227952,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1579227952","product_id":100039001,"comment_content":"函数中大量代码逻辑相同，我会选择使用标识来区分逻辑.","like_count":0},{"had_liked":false,"id":172562,"user_name":"斜杠ing...","can_delete":false,"product_type":"c1","uid":1676247,"ip_address":"","ucode":"C4AE866AC8B9AE","user_header":"https://static001.geekbang.org/account/avatar/00/19/93/d7/93c8f92a.jpg","comment_is_top":false,"comment_ctime":1579223886,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1579223886","product_id":100039001,"comment_content":"代码整洁之道这本书很值得看看啊","like_count":0},{"had_liked":false,"id":172560,"user_name":"Jackey","can_delete":false,"product_type":"c1","uid":1063751,"ip_address":"","ucode":"125DE81993FEDD","user_header":"https://static001.geekbang.org/account/avatar/00/10/3b/47/f6c772a1.jpg","comment_is_top":false,"comment_ctime":1579223834,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1579223834","product_id":100039001,"comment_content":"关键在于reviewer吧，不要放过不好的代码","like_count":0},{"had_liked":false,"id":172559,"user_name":"J.Smile","can_delete":false,"product_type":"c1","uid":1336475,"ip_address":"","ucode":"C4D98DFDBF7584","user_header":"https://static001.geekbang.org/account/avatar/00/14/64/9b/0b578b08.jpg","comment_is_top":false,"comment_ctime":1579223760,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1579223760","product_id":100039001,"comment_content":"打卡，今天天气突然变冷了，女朋友公司年会不让吃早餐，还得按时过去，但是过去的距离多了一倍！唉！我要好好学习，找个好公司！","like_count":0},{"had_liked":false,"id":172554,"user_name":"小晏子","can_delete":false,"product_type":"c1","uid":1132337,"ip_address":"","ucode":"3AAA6FB5ACB6AE","user_header":"https://static001.geekbang.org/account/avatar/00/11/47/31/f35367c8.jpg","comment_is_top":false,"comment_ctime":1579222944,"is_pvip":false,"discussion_count":0,"race_medal":1,"score":"1579222944","product_id":100039001,"comment_content":"老师讲的有理有据，赞！暂时想不出其他的技巧，但是有些推荐的做法，一个是避免使用奇技淫巧show技能，因为别人可能看不懂，比如非要使用meta programming；另一个是使用相关语言的通用做法，比如python编程就使用pythonic的做法，java编程就是java推荐的做法。","like_count":0},{"had_liked":false,"id":172539,"user_name":"何妨","can_delete":false,"product_type":"c1","uid":1385377,"ip_address":"","ucode":"EC3983BFF7992A","user_header":"https://static001.geekbang.org/account/avatar/00/15/23/a1/b08f3ee7.jpg","comment_is_top":false,"comment_ctime":1579221443,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1579221443","product_id":100039001,"comment_content":"总的来说，规范不是教条，其起到的是指引作用规范作用。最重要的还是要在对的时间对的地方写对的代码，大家加油","like_count":0},{"had_liked":false,"id":172533,"user_name":"安静的boy","can_delete":false,"product_type":"c1","uid":1196475,"ip_address":"","ucode":"F5F44B75228A85","user_header":"https://static001.geekbang.org/account/avatar/00/12/41/bb/21ce60d2.jpg","comment_is_top":false,"comment_ctime":1579220810,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1579220810","product_id":100039001,"comment_content":"对于第四点，函数的职业要统一，我是认同的。但是列举的例子，我个人认为判断的逻辑并不是很复杂，将所有判断逻辑放在一块写也是合理的，阅读起来也更方便些。如果逻辑很复杂，代码很多，封装起来更好点。","like_count":0},{"had_liked":false,"id":172526,"user_name":"Kang","can_delete":false,"product_type":"c1","uid":1237655,"ip_address":"","ucode":"088A8DA0A16BDE","user_header":"https://static001.geekbang.org/account/avatar/00/12/e2/97/dfadcc92.jpg","comment_is_top":false,"comment_ctime":1579220016,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1579220016","product_id":100039001,"comment_content":"打卡","like_count":0}]}