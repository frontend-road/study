{"id":499975,"title":"26｜节点四：任务边界划分应该遵循哪些信条？","content":"<p>你好，我是郭东白。上节课我们讲了统一语义和需求确认，这是架构规划的前两个环节。至此，多数的问题域都应该有且仅有一个执行域了。那么接下来，我们就来讲更细粒度的任务边界划分，这也是架构规划的第三个环节。</p><p>上节课我们讲到了从问题域到执行域的映射，是个粗粒度的映射关系。不过有些任务无法在粗粒度的划分下完成需求到执行的映射，比如我们上节课提到的边界冲突的情况。</p><p>总的来说，这种粗粒度的映射会面临三方面的挑战。如下：</p><ol>\n<li>粒度划分是基于现有执行域的，这种划分导致我们的架构设计会受到执行团队组织结构的约束。也就是康威定律对架构设计的干扰。</li>\n<li>无论我们怎么努力，依然会在架构活动中碰到执行域划分没有执行团队，或者有多个执行团队的情况。</li>\n<li>执行域是非常粗粒度的任务划分，但部分有边界冲突的跨领域任务，需要在更细粒度的任务层面上做执行边界的划分。</li>\n</ol><p>那么如何应对这三方面的挑战呢？答案是<strong>进行任务边界的划分</strong>。</p><p>我们可以把这些需求拆分成研发任务，并分配给执行者。而这些任务的组合和边界，最终会决定长期的技术架构。因而这个步骤，可能是架构师能对长期架构设计产生最大影响的一个环节了。所以深度理解从需求到任务到承接的关系，以及学会如何分配自己的注意力，就是你这节课要掌握的重要技能。</p><!-- [[[read_end]]] --><p>那么怎么进行任务边界的划分呢？我们前面提到了架构环境建设。从根本上来说，如果能结合架构环境建设，在团队中建立架构信条，那么任务边界的划分就容易得多了。</p><p>那么这节课，我们先来讲任务边界划分应该具备的几个信条。下节课我们再来讲具体怎么做任务边界的划分。</p><h2>信条一：任务边界可以打破现有的执行边界。</h2><p>我们先来区分一下“需求”和“任务”这两个概念：</p><ul>\n<li>需求是一个问题域概念，来自用户；</li>\n<li>任务是一个执行域概念，来自内部的分工合作。</li>\n</ul><p>所以这个信条是指，任务分配虽然应当尊重当前问题域到执行域的映射，但却<strong>不需要完全遵照</strong>这个映射。在一个架构活动中，架构师更应该从用户思维出发，把任务交给能完成这项任务的团队。</p><p>这里特别强调一下，在架构活动中，<strong>任务边界的划分是暂时性的</strong>，不是永久性的。任务边界的划分不同于执行域的划分。执行域的划分是个组织分工概念。每个实体团队在组织架构中有明确的执行域定位。执行域的划分，关系到管理者和团队的利益，是个极为敏感的问题。架构师没有权力更改执行域的划分。</p><p>之所以强调暂时性，是因为这个任务边界划分，不一定影响长期的组织边界和团队定位。在这个短暂的架构活动中，你作为架构师应该有任务边界划分的<strong>全部授权。</strong></p><p>我个人就有过类似的经历，需要与多个部门的大佬合作，去进行公司的一个大改造。但我没有获得任何任务边界划分的授权。最后的情形就是，这些大佬的确派了团队来参加架构活动，但是他们所有的代码与设计，一律向各自的部门看齐。</p><p>毕竟这个任务自顶向下施压而来的，大佬们并不看好，都想让自己的团队尽快完事儿然后撤出，根本不愿意接受各自团队例行之外的任务。看起来熙熙攘攘一大堆人，其实最后就是把现有的代码搬了个家而已。我后来反思，还不如干脆不组织这个架构活动，让团队开个服务接口算了。</p><p>反过来，如果你作为一个架构师，提前有了任务边界划分的授权，那么参与架构活动的人员，都将受你这个架构师的分配。这样一来，要解决的问题就简单很多了。</p><p>在有些企业中，每个团队只服务一个用户角色，承接所有来自用户的需求。那么我们这个信条就允许你在架构活动中打破这种边界，从而找到全局更优的架构设计。</p><p>举个例子。在实物电商场景中，买家、商家、平台运营者、物流商、人工客服、机器人客服等多个角色，都要查看物流状态。而每个角色的入口应用，如果各自都能调用底层的物流接口，来实现自己的物流状态查询的业务逻辑。那么这个逻辑就会散落到各处，变得很难维护。</p><p>但是如果能打破现有的执行域边界，那么你就可以设计并实现一个共享的物流状态查询服务了。</p><h2>信条二：任务边界划分有确定的决策优先级</h2><p>任务边界划分有多种方案，这就意味着你必须有一个甄别方案优劣的决策逻辑。这个逻辑决定了你在多个划分方案之间，将会如何打分或者排序。常见的选择是：</p><ol>\n<li>最大化项目目标的完成度；</li>\n<li>最大化技术方案的结构性；</li>\n<li>最小化整体成本；</li>\n<li>最大化团队的长期稳定性；</li>\n<li>最大化团队的短期稳定性；</li>\n<li>最大化决策者或者赞助者的满意度。</li>\n</ol><p>在目标确认环节，如果你能把这些工作都做到位了，那么前四项几乎是等价的。</p><p>需要注意的是，这六项选择的排序仅仅是我的个人建议，并没有对错之分。如果是在特殊场景下，你可以根据场景需要来进行排序。</p><p>比如在缺省的情况下，我建议你将第一个选项作为这个信条的核心部分。那么这个信条的完整表述就是：</p><blockquote>\n<p>信条二：任务边界划分以最大化项目目标的完成度为第一优先级。</p>\n</blockquote><p>哪怕你被决策者明确告知，应该用另外一个选项作为这个信条的一部分，那么第一个选项也可以作为一个约束条件。这时候完整的信条内容就是：</p><blockquote>\n<p>信条二：任务边界划分以最小化整体成本为第一优先级，但是不能牺牲项目目标的完成度。</p>\n</blockquote><p>之所以建议你这么做，是因为架构师必须持有这个视角：<strong>在给定的架构活动目标之下， 要以最大化架构活动的成功来做任务边界划分。</strong></p><h2>信条三：最小化架构目标之外的抽象</h2><p>架构师经常有做抽象的冲动，导致架构设计中经常会出现不必要的抽象。也就是大家常说的盖楼倾向。</p><p>从我的经验来看，在一个高速迭代的互联网业务中，业务探索的方向变化大，模式更迭快，多层架构抽象往往是得不偿失的。而更好的办法则是做<strong>阶段性的重构</strong>。</p><p>多层架构抽象与阶段性重构这两者的区别在于：</p><ol>\n<li>前者是在业务模式还没有稳定下来之前做架构抽象。</li>\n<li>后者是在业务模式已经稳定且有明确浪费的情况下，然后对重点领域做针对性的重构。这就是重构架构目标之内的抽象。</li>\n</ol><p>拿我们上节课提到的电商项目来举例。实物商家和发行商的概念与模型，看起来非常类似，两个角色都是在处理产品、货品和商品之间的关系。</p><p>你可能认为中台是个稳赚不赔的事情，所以想做个商家中台，来抽象实物商家和数字发行商。而一旦深入到细节，你会发现细分场景的差异非常大。</p><ul>\n<li>实物商家的核心需求有入驻、店铺创建、店铺运营、方向调整和退出。而数字发行商的核心需求有签约、内容发布、运营和退出。</li>\n<li>店铺管理者角色的运营需求有上下架、爆款打造、私域运营、大促、转化分析、进销存管理和售前中后服务等。而数字发行商的运营需求，则是上下架、营销内容创作、粉丝运营、周边生态建设等。</li>\n</ul><p>每个需求也会因为运营商和商家的成交量与内容的不同，需要操作的界面也不大相同。 然后你再细化一层，到了最细的商品上下架环节。你会发现上下架的动作，在两个角色中是完全不一样的：</p><ul>\n<li>对于售卖实物商品的商家来说，上下架的动作是商品详细描述的填写，图片文字和视频的上传，类目的选择和确认，Listing的属性标准的验证，价格和内容的风控审核，以及商品Listing到商品的关系绑定的过程，等等。</li>\n<li>而对于数字商品，则是数字商品的元数据填写，从第三方获取数字商品的图片和文字信息，信息质量的验证，从供应商指定的文件传输渠道获取源文件，对源文件的编转码和加密，源文件到CDN的分发，等等。</li>\n</ul><p>通过这个案例你会发现，很多架构师在不了解细节时就做抽象，那么效率提升最终只能停留在假设阶段。你可能没有意识到，<strong>抽象会提升系统的复杂度，自动削弱系统的迭代效率和稳定性</strong>。因此，我非常反对没有任何数据支撑和可度量目标驱动的架构抽象。</p><p>总的来说，这个信条的核心就是不要在架构活动中制造出新的抽象任务。这个信条的价值就在于简化架构规划的内容，减少执行者的工作量。</p><h2>信条四：任务边界划分时要最大化隔离</h2><p>任务梳理是一个自顶向下的过程，要求我们不能停留在表面的理解上，而要抽取出核心实体，以及针对这些实体的相关操作，并把这些操作隔离出来。</p><p>有的人分不太清楚“隔离”和“抽象”，这其实是两个完全不同的概念：</p><ul>\n<li>隔离是把两个实体的相关的任务分开来，确保独立封装和实现。</li>\n<li>而抽象是在两个实体之上抽象出第三个实体，共享部分任务和实现。</li>\n</ul><p>我认为抽象这件事情可以后置，等业务稳定了、看清楚了再说。而隔离则不能等，要尽早做。因为隔离后的实体和操作，未来都可以被分别抽象。而对于一个巨石应用来说，就只能做重构了。</p><p>比如刚才我们提到的电商案例中，上下架过程中的主要实体有商家、供应商、链接、类目、商品、元数据、源文件等。提到的主要操作有类目选择、属性验证、商品风控、获取文件、编转码、内容加密等。在合适的场景下，这些实体和操作都可以中台化或者FaaS化掉。</p><p>到这里，你或许能发现第三和第四条信条是有共通之处的，它们的核心都在于<strong>不用过分抽象，但必须要隔离。</strong></p><h2>信条五：任务边界划分要面向未来最优</h2><p>作为架构师，要明确知道你的引导会对技术和组织边界产生哪些长期的影响。所以在任务边界划分时有一个至关重要的问题，那就是怎么运用康威定律：“<strong>设计系统的结构和产生这些设计的组织的沟通结构是同构的”。</strong></p><p>你可能觉得还是不要打破现有的组织和沟通边界。只有在边界划分上最大化与现有边界的重叠度，这样才能最小化自己的执行风险。</p><p>这个想法有一定的道理。不过，一个大型的架构活动，是企业从旧架构过渡到新架构的最好机会。所以在这个过程中，你可以在一段时间内把不同团队放在同一个办公区，让大家一起做项目，从而最大化组织沟通的连通性。</p><p>这种几乎全连通的环境，可以加速你寻找到最优的边界划分。而这种最优边界是面向未来的最优，是能够最小化未来团队间依赖的边界划分策略。因为这是基于用户需求的变化，基于技术趋势、竞争态势和数据模型的演变而得到的。</p><p>举个例子。如果财务团队从来没有与平台商家团队有过沟通，意味着这两个系统还没有打通。那么财务团队为企业建设的业财一体化的进销存能力，就不会把平台商家作为一个可能的用户来考虑。与此同时，业财系统也不会被设计成多租户，以撬动商家提升企业的资金效率。</p><p>但是如果你把一个商家账务系统交给财务团队去实现，那么你在这两个领域和团队之间就建设了一个沟通渠道，也为面向未来架构的设计埋下了一颗好的种子。在我看来，这才是你作为架构师先知先觉的能力。架构师要想在业务和产品同学之前看到技术为企业创造机会的可能性，这就是一个非常好的契机。这就是为什么我在这节课一开始时就提到了，<strong>这可能是你作为架构师，能对长期架构设计产生最大影响的环节了。</strong></p><p>不过你可能会好奇，既然这个信条这么重要，为什么还把它排在最末尾呢？难道是优先级不高吗？</p><p>原因是这样的。国内互联网行业竞争激烈，资源缺乏，监管环境的变化也非常快。所以面向未来，说起来容易做起来难。加上真正的机会少之又少，所以我不希望让这个信条对你产生误导，让你试图在每一把沙子里找金子。</p><p>你在经验不足的时候这么做了，不但不能带来长期突破，反倒会导致更大的浪费。但是等你有了一两个成功案例，对尺度有所心得之后，那么就可以根据企业所处的阶段来调整这个信条的优先级了。</p><h2>其他信条</h2><p>这些信条的存在，会让棘手情形转化成集体决策，而不是你个人的决策。而且这些决策，只是暂时在架构活动中生效，不会改变现有的权力格局。因此会提升参与者的接受度，即使有个人或者团队冲突存在。</p><p>当然，你也可以试图添加更多的信条。不过总的原则是，在任务边界划分的过程中，<strong>从用户需求出发，在架构目标统一的信条下，最终达成切实可行的、从需求到任务到承接关系的划分。这才是边界划分的王道</strong>。</p><p>如果信条无法在限定时间内完成划分，那也可以采用霸道的方法。请决策者把任务强制部署下去，靠一些额外激励或者惩罚手段来达到目标。在这个阶段，时间非常宝贵，你不能耽误太久。</p><h2>小结</h2><p>我们这节课给出了一些信条，以及这些信条背后的思考原则。除了理解这些信条。我建议你这时候再回过头去，重新读一下架构环境建设这节课。结合这节课的内容，来重新理解一下这些信条。目的是除了理解这些信条外，还要进一步去理解制定信条背后的思考，最后试图制定自己的信条。</p><p>这也是我在课程开篇词中就讲过的，我写这个课程是想“授人与渔”。</p><h2>思考题</h2><p>三个思考题，不过第一题非常重要，是这节课的一部分。</p><ol>\n<li>信条是有优先级的。这节课中我故意把前四个信条的顺序打乱了。如果真正使用这些信条的话，我不会按照文章中的顺序来列出。你认为在一个互联网企业中，更合理的顺序会是什么？</li>\n<li>如果在这五个信条的基础上再增加一个信条，你会增加什么呢？为什么？如果一定要减少一个信条，你会哪一条呢？为什么？</li>\n<li>你做过任务边界划分吗？有了这些信条，你觉得你的划分任务会变得简单吗？为什么？</li>\n</ol><p><img src=\"https://static001.geekbang.org/resource/image/21/34/2108467408f6cf0743d667237d7e2234.jpeg?wh=1500x1798\" alt=\"\"></p><p>如果这节课对你有帮助，欢迎你把课程转发给你的同事或朋友。顺便打个小广告，我刚开了个人抖音号，我会定期发表一些比较新、但是不一定那么成熟的观点。欢迎在抖音上搜索“郭东白”并关注，也欢迎你的批评指正。我们下节课再见！</p>","neighbors":{"left":{"article_title":"25｜节点四：架构规划之需求确认","id":500007},"right":{"article_title":"27｜节点四：架构规划之划分任务边界","id":503193}},"comments":[{"had_liked":false,"id":340446,"user_name":"本一","can_delete":false,"product_type":"c1","uid":2351492,"ip_address":"","ucode":"217D882F254F1E","user_header":"https://static001.geekbang.org/account/avatar/00/23/e1/84/580c52a4.jpg","comment_is_top":false,"comment_ctime":1648816857,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"10238751449","product_id":100099801,"comment_content":"如果是我，应该是按2 4 1 3这样，先规划决策优先级的原则，然后做内聚性设计，再考虑打破现有组织结构，然后考虑是不是过度设计的问题","like_count":3,"discussions":[{"author":{"id":3178106,"avatar":"","nickname":"Geek_90a68f","note":"","ucode":"F2012D444E6E1C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":587967,"discussion_content":"2 4 1 3 +1","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1663409955,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"四川"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":339972,"user_name":"李二木","can_delete":false,"product_type":"c1","uid":1103091,"ip_address":"","ucode":"30E03BB84ADB27","user_header":"https://static001.geekbang.org/account/avatar/00/10/d4/f3/129d6dfe.jpg","comment_is_top":false,"comment_ctime":1648519171,"is_pvip":true,"replies":[{"id":"124336","content":"还是挺常见的。 架构师做到后面说话都像律师。 否则会在API上留太多的迂回空间。 ","user_name":"作者回复","comment_id":339972,"uid":"2574960","ip_address":"","utype":1,"ctime":1648556212,"user_name_real":"编辑"}],"discussion_count":1,"race_medal":0,"score":"10238453763","product_id":100099801,"comment_content":"说一个最近在团队内部任务划分的坑。当时任务划分不够细粒度，可以理解为稍微有点抽象，任务划分时没有异议，但是等到找对方要接口时，双方就开始各抒己见说是该功能点是对方的。事后反思了下。还是任务划分不够细致。任务应该要划分到不可分割，然后指定责任人。免得事后扯皮。","like_count":2,"discussions":[{"author":{"id":2574960,"avatar":"https://static001.geekbang.org/account/avatar/00/27/4a/70/c16655c6.jpg","nickname":"郭东白～Dongbai","note":"","ucode":"A91E32F405A5A0","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":559007,"discussion_content":"还是挺常见的。 架构师做到后面说话都像律师。 否则会在API上留太多的迂回空间。 ","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1648556212,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":340719,"user_name":"术子米德","can_delete":false,"product_type":"c1","uid":1898023,"ip_address":"","ucode":"382EA7E2AF0B56","user_header":"https://static001.geekbang.org/account/avatar/00/1c/f6/27/c27599ae.jpg","comment_is_top":false,"comment_ctime":1649075219,"is_pvip":true,"replies":[{"id":"124931","content":"增加信条：“粒度划分越难的地方，越可能是最有潜力的地方”，所谓的越难过越得过。某个点的粒度难划分，可能是这个点本身我们不熟悉，这次下来弄明白，我们的能力就增长，还可能是我们的组织结构不合理，这次行动下来，可以优化组织。<br>挺有道理的。 ","user_name":"作者回复","comment_id":340719,"uid":"2574960","ip_address":"","utype":1,"ctime":1649924739,"user_name_real":"编辑"}],"discussion_count":2,"race_medal":0,"score":"5944042515","product_id":100099801,"comment_content":"🤔☕️🤔☕️🤔<br>* 📖：需求转化为任务，实现从问题域到执行域的映射。如果遇到粒度划分问题的挑战，解决之道是进行任务边界的划分。这几个信条该具备：可打破现有执行边界、有确定的决策优先级、最小化架构目标之外的抽象、最大化隔离、面向未来最优。<br>    * 🤔：这个需求大家是否都清楚，跟这个需求是否大家都认可，这中间可能是个巨大的裂缝。我自己的经验，这个裂缝里刚开始可能只有空气，后面会有水灌进去，最终会变成酱缸。产生这样的情况，一方面可能来自历史的缘故，导致各种不信任，另一方面更可能是利益无关或利益冲突。这些问题，看似非技术问题，是否可以通过架构来解决，或者架构能对此改善？以我现在的认知，如果此时的架构，仅指技术架构，这顶多解决在如何，即How层面做到最优。如果把组织架构和业务架构放进来，前者，组织架构去解决我们是什么，即What层面认清自己到底要什么，后者，业务架构去解决我们如何能赚钱，即Why层面认清为何能赚到当下和未来的钱。前提条件，那就是大家都能有这样的共识，或者，大家都认可某人的领导力，由他来带领大家跨过裂缝，这样就有机会打破现有的执行边界。只要执行边界能打破，后面的共识建立起来，就是大家都坐在圆桌上讨论，而不再是在每个峡谷对面呼喊，还假装没听到的样子。<br>    * 🤔：增加信条：“粒度划分越难的地方，越可能是最有潜力的地方”，所谓的越难过越得过。某个点的粒度难划分，可能是这个点本身我们不熟悉，这次下来弄明白，我们的能力就增长，还可能是我们的组织结构不合理，这次行动下来，可以优化组织。<br>    * 🤔：去掉抽象，不会妨碍太多，过渡关注抽象，反而绊手绊脚。如果一个业务持续有发展，持续有新需求和变化，那么在这个过程里去抽象还来得及。最担心的就是，刚开始抽象得特别完美，然后就没有然后。<br>","like_count":1,"discussions":[{"author":{"id":2574960,"avatar":"https://static001.geekbang.org/account/avatar/00/27/4a/70/c16655c6.jpg","nickname":"郭东白～Dongbai","note":"","ucode":"A91E32F405A5A0","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":563010,"discussion_content":"增加信条：“粒度划分越难的地方，越可能是最有潜力的地方”，所谓的越难过越得过。某个点的粒度难划分，可能是这个点本身我们不熟悉，这次下来弄明白，我们的能力就增长，还可能是我们的组织结构不合理，这次行动下来，可以优化组织。\n挺有道理的。 ","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1649924739,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1484174,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/cZN9xAaxlYHXTIGibcxP7HGNLWrorU5hw3ic7b6p2fe0JyE9yynibvWPW1CUJQl3iaMib79HOVjPnOkgW8msbMFImdw/132","nickname":"金石","note":"","ucode":"1A4A246812B60F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":565113,"discussion_content":"精辟","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1650387954,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":340114,"user_name":"罗均","can_delete":false,"product_type":"c1","uid":2859088,"ip_address":"","ucode":"AA8F5D6B13D3E6","user_header":"https://static001.geekbang.org/account/avatar/00/2b/a0/50/390187f3.jpg","comment_is_top":false,"comment_ctime":1648608861,"is_pvip":false,"replies":[{"id":"124941","content":"谢谢回复啊","user_name":"作者回复","comment_id":340114,"uid":"2574960","ip_address":"","utype":1,"ctime":1649926307,"user_name_real":"编辑"}],"discussion_count":1,"race_medal":0,"score":"5943576157","product_id":100099801,"comment_content":"东白老师的课程实在太精彩了！学生没有在互联网行业待过，从传统制造业的经验看，四个信条的顺序应该是：<br>1. 信条四：任务边界划分时要最大化隔离。<br>2. 信条二：任务边界划分有确定的决策优先级。<br>3. 信条一：任务边界可以打破现有的执行边界。<br>4. 信条三：最小化架构目标之外的抽象。<br><br>关于老师总结的五个信条，学生反复思量，也无法对此增加或减少。期待有大神与老师碰出思想的火花。<br><br>在实践过程中，学生觉得隔离和决策优先级最重要。没有清晰的隔离分析，就很难做判断决策的优先级。","like_count":1,"discussions":[{"author":{"id":2574960,"avatar":"https://static001.geekbang.org/account/avatar/00/27/4a/70/c16655c6.jpg","nickname":"郭东白～Dongbai","note":"","ucode":"A91E32F405A5A0","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":563028,"discussion_content":"谢谢回复啊","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1649926307,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":352864,"user_name":"亚林","can_delete":false,"product_type":"c1","uid":1018972,"ip_address":"陕西","ucode":"4A5A6D24314B79","user_header":"https://static001.geekbang.org/account/avatar/00/0f/8c/5c/3f164f66.jpg","comment_is_top":false,"comment_ctime":1658988694,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1658988694","product_id":100099801,"comment_content":"很多架构师在不了解细节时就做抽象，那么效率提升最终只能停留在假设阶段。你可能没有意识到，抽象会提升系统的复杂度，自动削弱系统的迭代效率和稳定性。因此，我非常反对没有任何数据支撑和可度量目标驱动的架构抽象。<br><br>这个经常遇到。","like_count":0},{"had_liked":false,"id":348201,"user_name":"潜水的鲸","can_delete":false,"product_type":"c1","uid":1220999,"ip_address":"","ucode":"59890A87E1886C","user_header":"https://static001.geekbang.org/account/avatar/00/12/a1/87/6805cb85.jpg","comment_is_top":false,"comment_ctime":1654844260,"is_pvip":false,"replies":[{"id":"126885","content":"谢谢！","user_name":"作者回复","comment_id":348201,"uid":"2574960","ip_address":"","utype":1,"ctime":1654935164,"user_name_real":"编辑"}],"discussion_count":1,"race_medal":0,"score":"1654844260","product_id":100099801,"comment_content":"2、4、3、1<br>线确定目标和优先级，然后做重点隔离和影响隔离，加少不必要的工作降低工作的复杂度，最后打破组织结构。最后一项是最困难的，有很多执行层面之外的阻力。不是有很大收益和关键性作用，不要触碰。","like_count":0,"discussions":[{"author":{"id":2574960,"avatar":"https://static001.geekbang.org/account/avatar/00/27/4a/70/c16655c6.jpg","nickname":"郭东白～Dongbai","note":"","ucode":"A91E32F405A5A0","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":575553,"discussion_content":"谢谢！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1654935164,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":345591,"user_name":"，","can_delete":false,"product_type":"c1","uid":1701867,"ip_address":"","ucode":"A5543C8DFEB198","user_header":"https://static001.geekbang.org/account/avatar/00/19/f7/eb/e7127bb8.jpg","comment_is_top":false,"comment_ctime":1652417092,"is_pvip":true,"replies":[{"id":"126338","content":"谢谢输入啊。 ","user_name":"作者回复","comment_id":345591,"uid":"2574960","ip_address":"","utype":1,"ctime":1652947926,"user_name_real":"编辑"}],"discussion_count":1,"race_medal":0,"score":"1652417092","product_id":100099801,"comment_content":"老师的这几个信条,在我看来是从不同的角度出发考虑的问题。<br>   譬如<br>       信条一,任务边界可以打破现有的执行边界,这条是从项目经理跟产品经理的角度出发,对开发任务的合理划分和分配;<br>      <br>      信条二,任务边界划分有确定的决策优先级,是从CTO的角度出发,遵循之前定下的架构目标;<br><br>       信条三,最小化架构目标之外的抽象;信条四,任务边界划分时要最大化隔离;信条五：任务边界划分要面向未来最优,则与Robert C. Martin在&lt;&lt;架构整洁之道&gt;&gt;里提出的SOLID架构原则暗合。其实就是我们老生常谈的架构师,从产出合理的解决方案的视角出发得到的结论,做架构要符合单一职责(一套代码面向一类人的需求)和接口隔离(面向不同人群需求的代码需要彻底隔离开),依赖倒置等原则(为未来留出抽象空间)。<br><br>       如果从这个角度来看,思考题1说的是,研发资源有限性,架构目标合理性跟解决方案合理性之间取舍,三者并不是有你就没有我的关系,而是你中有我,我中有你的关系,因此三者不应该是稳定不变的状态,而是不停地在变,有一个动态平衡的过程,资源紧缺那就先优先级高的事情,感觉目标不合理了,不断地纠正目标,解决方案则一定要按照架构原则,围绕着架构目标来做,不然的话即便短期有收益,长远来看还是会给系统留下坏味道。","like_count":0,"discussions":[{"author":{"id":2574960,"avatar":"https://static001.geekbang.org/account/avatar/00/27/4a/70/c16655c6.jpg","nickname":"郭东白～Dongbai","note":"","ucode":"A91E32F405A5A0","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":572755,"discussion_content":"谢谢输入啊。 ","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1652947926,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":344425,"user_name":"预测师","can_delete":false,"product_type":"c1","uid":1843734,"ip_address":"","ucode":"6EA12E34ECCF32","user_header":"https://static001.geekbang.org/account/avatar/00/1c/22/16/a94ea4da.jpg","comment_is_top":false,"comment_ctime":1651547302,"is_pvip":false,"replies":[{"id":"126275","content":"信条一般不是基于客观规律， 而是基于信仰（belief)或者是判断的（In our age, luck favors those who takes risks）的， 是一群人共同的选择。 <br>原则我们这篇文章里面里面是指“guiding principle&quot;，就是指导原则， 也就是这群人在选择信条过程中的信仰或者是判断， 是用来约束这些信条的。  比如说亚马逊的客户第一， 就是约束其他部门信条的原则。 <br>对比我们在模块一里面的生存法则， 是基于客观规律的。 违背就要付出代价，和你主观意愿无关。 <br> <br>谢谢这个问题啊。 非常好！","user_name":"作者回复","comment_id":344425,"uid":"2574960","ip_address":"","utype":1,"ctime":1652859164,"user_name_real":"编辑"}],"discussion_count":1,"race_medal":0,"score":"1651547302","product_id":100099801,"comment_content":"郭老师，信条和原则的区别是什么，那么多指导架构的名词，如何理解其抽象层次？","like_count":0,"discussions":[{"author":{"id":2574960,"avatar":"https://static001.geekbang.org/account/avatar/00/27/4a/70/c16655c6.jpg","nickname":"郭东白～Dongbai","note":"","ucode":"A91E32F405A5A0","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":572570,"discussion_content":"信条一般不是基于客观规律， 而是基于信仰（belief)或者是判断的（In our age, luck favors those who takes risks）的， 是一群人共同的选择。 \n原则我们这篇文章里面里面是指“guiding principle&#34;，就是指导原则， 也就是这群人在选择信条过程中的信仰或者是判断， 是用来约束这些信条的。  比如说亚马逊的客户第一， 就是约束其他部门信条的原则。 \n对比我们在模块一里面的生存法则， 是基于客观规律的。 违背就要付出代价，和你主观意愿无关。 \n \n谢谢这个问题啊。 非常好！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1652859164,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":342675,"user_name":"小兵","can_delete":false,"product_type":"c1","uid":1150486,"ip_address":"","ucode":"682674AE91FE68","user_header":"https://static001.geekbang.org/account/avatar/00/11/8e/16/7d97a36f.jpg","comment_is_top":false,"comment_ctime":1650416332,"is_pvip":false,"replies":[{"id":"125232","content":"我自己的感觉你要的不存在。 <br>最好的例子是内容电商。 十年前没有人相信有内容电商这件事情。 当然的智能手机侧的体验、全网带宽、内容生产的生态都不够好。 <br>现在就完全变掉了。 这种变化导致之前内容是内容，电商是电商， 两者是完全两个不同的领域。  而现在内容和电商结合， 这两个领域的融合导致边界发生了根本的变化。 <br>再跨越一步， 如果说元宇宙成为人交互&#47;娱乐的主流， 那么电商和元宇宙结合又完全不同。 ","user_name":"作者回复","comment_id":342675,"uid":"2574960","ip_address":"","utype":1,"ctime":1650513470,"user_name_real":"编辑"}],"discussion_count":1,"race_medal":0,"score":"1650416332","product_id":100099801,"comment_content":"小小杠一下，按照这个信条，在落地执行层面还需要思考很多。有没有那种更具备执行信性的方法论，来指导我们划分各个边界。当然事实上我在其他书也没看到非常清晰的方法论，所以最后还是更多基于对业务的认知逐步修正","like_count":0,"discussions":[{"author":{"id":2574960,"avatar":"https://static001.geekbang.org/account/avatar/00/27/4a/70/c16655c6.jpg","nickname":"郭东白～Dongbai","note":"","ucode":"A91E32F405A5A0","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":565677,"discussion_content":"我自己的感觉你要的不存在。 \n最好的例子是内容电商。 十年前没有人相信有内容电商这件事情。 当然的智能手机侧的体验、全网带宽、内容生产的生态都不够好。 \n现在就完全变掉了。 这种变化导致之前内容是内容，电商是电商， 两者是完全两个不同的领域。  而现在内容和电商结合， 这两个领域的融合导致边界发生了根本的变化。 \n再跨越一步， 如果说元宇宙成为人交互/娱乐的主流， 那么电商和元宇宙结合又完全不同。 ","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1650513470,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":340119,"user_name":"Steven","can_delete":false,"product_type":"c1","uid":1253652,"ip_address":"","ucode":"3FE64459842015","user_header":"https://static001.geekbang.org/account/avatar/00/13/21/14/423a821f.jpg","comment_is_top":false,"comment_ctime":1648611228,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1648611228","product_id":100099801,"comment_content":"问题1，我觉得是要区分产品阶段的：<br>如果是启动和成长阶段，则二、四、三、一。<br>如果成长阶段中后期到成熟阶段，信条一的优先级要提高了，可以二、一、四、三。","like_count":0},{"had_liked":false,"id":340038,"user_name":"spark","can_delete":false,"product_type":"c1","uid":1116667,"ip_address":"","ucode":"2F128E884F400F","user_header":"https://static001.geekbang.org/account/avatar/00/11/09/fb/52a662b2.jpg","comment_is_top":false,"comment_ctime":1648550668,"is_pvip":false,"replies":[{"id":"124337","content":"为啥抽象能力和逆向思维是一个能力？  没太看懂。。。","user_name":"作者回复","comment_id":340038,"uid":"2574960","ip_address":"","utype":1,"ctime":1648556331,"user_name_real":"编辑"}],"discussion_count":2,"race_medal":0,"score":"1648550668","product_id":100099801,"comment_content":"郭老师，take away~~~做不好这件事情的“阻力”：2个重点，思维方式的完整性、格局见识。1个能力，抽象能力~~~逆向思维，不具备这些能力一定做不好这个工作，我有一个领导，总是纠结边界划分和抽象的层次，把我“恶心”离职。1万小时技术，积累不超过5000小时的技术，就做不好这个事情，需要成为半个专家才行~~~<br>","like_count":0,"discussions":[{"author":{"id":2574960,"avatar":"https://static001.geekbang.org/account/avatar/00/27/4a/70/c16655c6.jpg","nickname":"郭东白～Dongbai","note":"","ucode":"A91E32F405A5A0","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":559008,"discussion_content":"为啥抽象能力和逆向思维是一个能力？  没太看懂。。。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1648556331,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1116667,"avatar":"https://static001.geekbang.org/account/avatar/00/11/09/fb/52a662b2.jpg","nickname":"spark","note":"","ucode":"2F128E884F400F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":559013,"discussion_content":"分开说。逆向思维是思维方式，自顶向下、以终为始、证伪比证实重要的思维方式。抽象是能力，不过需要目标和问题的复杂度证明。举个例子，冯.诺依曼设计图灵机器时，抽象了三个组件，计算器和控制器、储存、输入输出设备，抽象时需要思考组件不能做什么，能做什么，为什么是这样抽象~~~","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1648559561,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":340018,"user_name":"BIZ_UI_3","can_delete":false,"product_type":"c1","uid":1655948,"ip_address":"","ucode":"1B9718610A5A59","user_header":"","comment_is_top":false,"comment_ctime":1648541269,"is_pvip":false,"replies":[{"id":"124335","content":"这个信条的目的就是要反康威定律。  否则一旦组织不进化， 架构进化也就完全停止了。 <br>","user_name":"作者回复","comment_id":340018,"uid":"2574960","ip_address":"","utype":1,"ctime":1648556131,"user_name_real":"编辑"}],"discussion_count":0,"race_medal":0,"score":"1648541269","product_id":100099801,"comment_content":"“信条一：任务边界可以打破现有的执行边界。” —— 这是否意味着某种团队职责不明确的情况？是否需要执行反康威定律的工作。。。","like_count":0},{"had_liked":false,"id":339999,"user_name":"陈桐","can_delete":false,"product_type":"c1","uid":1116024,"ip_address":"","ucode":"2CA191619968EE","user_header":"https://static001.geekbang.org/account/avatar/00/11/07/78/6e4e06ba.jpg","comment_is_top":false,"comment_ctime":1648533418,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1648533418","product_id":100099801,"comment_content":"讲得太好了，郭老师，已经拜读完，及时更新😀","like_count":0}]}