{"id":138948,"title":"20 | 大名⿍⿍的select：看我如何同时感知多个I/O事件","content":"<p>你好，我是盛延敏，这里是网络编程实战的第20讲，欢迎回来。</p><p>这一讲是性能篇的第一讲。在性能篇里，我们将把注意力放到如何设计高并发高性能的网络服务器程序上。我希望通过这一模块的学习，让你能够掌握多路复用、异步I/O、多线程等知识，从而可以写出支持并发10K以上的高性能网络服务器程序。</p><p>还等什么呢？让我们开始吧。</p><h2>什么是I/O多路复用</h2><p>在<a href=\"https://time.geekbang.org/column/article/126126\">第11讲</a>中，我们设计了这样一个应用程序，该程序从标准输入接收数据输入，然后通过套接字发送出去，同时，该程序也通过套接字接收对方发送的数据流。</p><p>我们可以使用fgets方法等待标准输入，但是一旦这样做，就没有办法在套接字有数据的时候读出数据；我们也可以使用read方法等待套接字有数据返回，但是这样做，也没有办法在标准输入有数据的情况下，读入数据并发送给对方。</p><p>I/O多路复用的设计初衷就是解决这样的场景。我们可以把标准输入、套接字等都看做I/O的一路，多路复用的意思，就是在任何一路I/O有“事件”发生的情况下，通知应用程序去处理相应的I/O事件，这样我们的程序就变成了“多面手”，在同一时刻仿佛可以处理多个I/O事件。</p><p>像刚才的例子，使用I/O复用以后，如果标准输入有数据，立即从标准输入读入数据，通过套接字发送出去；如果套接字有数据可以读，立即可以读出数据。</p><!-- [[[read_end]]] --><p>select函数就是这样一种常见的I/O多路复用技术，我们将在后面继续讲解其他的多路复用技术。使用select函数，通知内核挂起进程，当一个或多个I/O事件发生后，控制权返还给应用程序，由应用程序进行I/O事件的处理。</p><p>这些I/O事件的类型非常多，比如：</p><ul>\n<li>标准输入文件描述符准备好可以读。</li>\n<li>监听套接字准备好，新的连接已经建立成功。</li>\n<li>已连接套接字准备好可以写。</li>\n<li>如果一个I/O事件等待超过了10秒，发生了超时事件。</li>\n</ul><h2>select函数的使用方法</h2><p>select函数的使用方法有点复杂，我们先看一下它的声明：</p><pre><code>int select(int maxfd, fd_set *readset, fd_set *writeset, fd_set *exceptset, const struct timeval *timeout);\n\n返回：若有就绪描述符则为其数目，若超时则为0，若出错则为-1\n</code></pre><p>在这个函数中，maxfd表示的是待测试的描述符基数，它的值是待测试的最大描述符加1。比如现在的select待测试的描述符集合是{0,1,4}，那么maxfd就是5，为啥是5，而不是4呢? 我会在下面进行解释。</p><p>紧接着的是三个描述符集合，分别是读描述符集合readset、写描述符集合writeset和异常描述符集合exceptset，这三个分别通知内核，在哪些描述符上检测数据可以读，可以写和有异常发生。</p><p>那么如何设置这些描述符集合呢？以下的宏可以帮助到我们。</p><pre><code>void FD_ZERO(fd_set *fdset);　　　　　　\nvoid FD_SET(int fd, fd_set *fdset);　　\nvoid FD_CLR(int fd, fd_set *fdset);　　　\nint  FD_ISSET(int fd, fd_set *fdset);\n</code></pre><p>如果你刚刚入门，理解这些宏可能有些困难。没有关系，我们可以这样想象，下面一个向量代表了一个描述符集合，其中，这个向量的每个元素都是二进制数中的0或者1。</p><pre><code>a[maxfd-1], ..., a[1], a[0]\n</code></pre><p>我们按照这样的思路来理解这些宏：</p><ul>\n<li>FD_ZERO用来将这个向量的所有元素都设置成0；</li>\n<li>FD_SET用来把对应套接字fd的元素，a[fd]设置成1；</li>\n<li>FD_CLR用来把对应套接字fd的元素，a[fd]设置成0；</li>\n<li>FD_ISSET对这个向量进行检测，判断出对应套接字的元素a[fd]是0还是1。</li>\n</ul><p>其中0代表不需要处理，1代表需要处理。</p><p>怎么样，是不是感觉豁然开朗了？</p><p>实际上，很多系统是用一个整型数组来表示一个描述字集合的，一个32位的整型数可以表示32个描述字，例如第一个整型数表示0-31描述字，第二个整型数可以表示32-63描述字，以此类推。</p><p>这个时候再来理解为什么描述字集合{0,1,4}，对应的maxfd是5，而不是4，就比较方便了。</p><p>因为这个向量对应的是下面这样的：</p><pre><code>a[4],a[3],a[2],a[1],a[0]\n</code></pre><p>待测试的描述符个数显然是5， 而不是4。</p><p>三个描述符集合中的每一个都可以设置成空，这样就表示不需要内核进行相关的检测。</p><p>最后一个参数是timeval结构体时间：</p><pre><code>struct timeval {\n  long   tv_sec; /* seconds */\n  long   tv_usec; /* microseconds */\n};\n</code></pre><p>这个参数设置成不同的值，会有不同的可能：</p><p>第一个可能是设置成空(NULL)，表示如果没有I/O事件发生，则select一直等待下去。</p><p>第二个可能是设置一个非零的值，这个表示等待固定的一段时间后从select阻塞调用中返回，这在<a href=\"https://time.geekbang.org/column/article/127900\">第12讲</a>超时的例子里曾经使用过。</p><p>第三个可能是将tv_sec和tv_usec都设置成0，表示根本不等待，检测完毕立即返回。这种情况使用得比较少。</p><h2>程序例子</h2><p>下面是一个具体的程序例子，我们通过这个例子来理解select函数。</p><pre><code>int main(int argc, char **argv) {\n    if (argc != 2) {\n        error(1, 0, &quot;usage: select01 &lt;IPaddress&gt;&quot;);\n    }\n    int socket_fd = tcp_client(argv[1], SERV_PORT);\n\n    char recv_line[MAXLINE], send_line[MAXLINE];\n    int n;\n\n    fd_set readmask;\n    fd_set allreads;\n    FD_ZERO(&amp;allreads);\n    FD_SET(0, &amp;allreads);\n    FD_SET(socket_fd, &amp;allreads);\n\n    for (;;) {\n        readmask = allreads;\n        int rc = select(socket_fd + 1, &amp;readmask, NULL, NULL, NULL);\n\n        if (rc &lt;= 0) {\n            error(1, errno, &quot;select failed&quot;);\n        }\n\n        if (FD_ISSET(socket_fd, &amp;readmask)) {\n            n = read(socket_fd, recv_line, MAXLINE);\n            if (n &lt; 0) {\n                error(1, errno, &quot;read error&quot;);\n            } else if (n == 0) {\n                error(1, 0, &quot;server terminated \\n&quot;);\n            }\n            recv_line[n] = 0;\n            fputs(recv_line, stdout);\n            fputs(&quot;\\n&quot;, stdout);\n        }\n\n        if (FD_ISSET(STDIN_FILENO, &amp;readmask)) {\n            if (fgets(send_line, MAXLINE, stdin) != NULL) {\n                int i = strlen(send_line);\n                if (send_line[i - 1] == '\\n') {\n                    send_line[i - 1] = 0;\n                }\n\n                printf(&quot;now sending %s\\n&quot;, send_line);\n                size_t rt = write(socket_fd, send_line, strlen(send_line));\n                if (rt &lt; 0) {\n                    error(1, errno, &quot;write failed &quot;);\n                }\n                printf(&quot;send bytes: %zu \\n&quot;, rt);\n            }\n        }\n    }\n\n}\n</code></pre><p>程序的12行通过FD_ZERO初始化了一个描述符集合，这个描述符读集合是空的：</p><p><img src=\"https://static001.geekbang.org/resource/image/ce/68/cea07eee264c1abf69c04aacfae56c68.png?wh=628*192\" alt=\"\"><br>\n接下来程序的第13和14行，分别使用FD_SET将描述符0，即标准输入，以及连接套接字描述符3设置为待检测：</p><p><img src=\"https://static001.geekbang.org/resource/image/71/f2/714f4fb84ab9afb39e51f6bcfc18def2.png?wh=640*200\" alt=\"\"><br>\n接下来的16-51行是循环检测，这里我们没有阻塞在fgets或read调用，而是通过select来检测套接字描述字有数据可读，或者标准输入有数据可读。比如，当用户通过标准输入使得标准输入描述符可读时，返回的readmask的值为：</p><p><img src=\"https://static001.geekbang.org/resource/image/b9/bd/b90d1df438847d5e11d80485a23817bd.png?wh=632*194\" alt=\"\"><br>\n这个时候select调用返回，可以使用FD_ISSET来判断哪个描述符准备好可读了。如上图所示，这个时候是标准输入可读，37-51行程序读入后发送给对端。</p><p>如果是连接描述字准备好可读了，第24行判断为真，使用read将套接字数据读出。</p><p>我们需要注意的是，这个程序的17-18行非常重要，初学者很容易在这里掉坑里去。</p><p>第17行是每次测试完之后，重新设置待测试的描述符集合。你可以看到上面的例子，在select测试之前的数据是{0,3}，select测试之后就变成了{0}。</p><p>这是因为select调用每次完成测试之后，内核都会修改描述符集合，通过修改完的描述符集合来和应用程序交互，应用程序使用FD_ISSET来对每个描述符进行判断，从而知道什么样的事件发生。</p><p>第18行则是使用socket_fd+1来表示待测试的描述符基数。切记需要+1。</p><h2>套接字描述符就绪条件</h2><p>当我们说select测试返回，某个套接字准备好可读，表示什么样的事件发生呢？</p><p>第一种情况是套接字接收缓冲区有数据可以读，如果我们使用read函数去执行读操作，肯定不会被阻塞，而是会直接读到这部分数据。</p><p>第二种情况是对方发送了FIN，使用read函数执行读操作，不会被阻塞，直接返回0。</p><p>第三种情况是针对一个监听套接字而言的，有已经完成的连接建立，此时使用accept函数去执行不会阻塞，直接返回已经完成的连接。</p><p>第四种情况是套接字有错误待处理，使用read函数去执行读操作，不阻塞，且返回-1。</p><p>总结成一句话就是，内核通知我们套接字有数据可以读了，使用read函数不会阻塞。</p><p>不知道你是不是和我一样，刚开始理解某个套接字可写的时候，会有一个错觉，总是从应用程序角度出发去理解套接字可写，我开始是这样想的，当应用程序完成相应的计算，有数据准备发送给对端了，可以往套接字写，对应的就是套接字可写。</p><p>其实这个理解是非常不正确的，select检测套接字可写，<strong>完全是基于套接字本身的特性来说</strong>的，具体来说有以下几种情况。</p><p>第一种是套接字发送缓冲区足够大，如果我们使用阻塞套接字进行write操作，将不会被阻塞，直接返回。</p><p>第二种是连接的写半边已经关闭，如果继续进行写操作将会产生SIGPIPE信号。</p><p>第三种是套接字上有错误待处理，使用write函数去执行写操作，不阻塞，且返回-1。</p><p>总结成一句话就是，内核通知我们套接字可以往里写了，使用write函数就不会阻塞。</p><h2>总结</h2><p>今天我讲了select函数的使用。select函数提供了最基本的I/O多路复用方法，在使用select时，我们需要建立两个重要的认识：</p><ul>\n<li>描述符基数是当前最大描述符+1；</li>\n<li>每次select调用完成之后，记得要重置待测试集合。</li>\n</ul><h2>思考题</h2><p>和往常一样，给你布置两道思考题：</p><p>第一道， select可以对诸如UNIX管道(pipe)这样的描述字进行检测么？如果可以，检测的就绪条件是什么呢？</p><p>第二道，根据我们前面的描述，一个描述符集合哪些描述符被设置为1，需要进行检测是完全可以知道的，你认为select函数里一定需要传入描述字基数这个值么？请你分析一下这样设计的目的又是什么呢？</p><p>欢迎你在评论区写下你的思考，也欢迎把这篇文章分享给你的朋友或者同事，一起交流一下。</p>","comments":[{"had_liked":false,"id":183305,"user_name":"鸠摩·智","can_delete":false,"product_type":"c1","uid":1211909,"ip_address":"","ucode":"6CD93CD1DB6955","user_header":"https://static001.geekbang.org/account/avatar/00/12/7e/05/431d380f.jpg","comment_is_top":false,"comment_ctime":1582990742,"is_pvip":false,"replies":[{"id":"71047","content":"赞，为大家找到了原始的出处，证明我不是在瞎BB，哈哈。","user_name":"作者回复","user_name_real":"froghui","uid":"1618647","ctime":1583053892,"ip_address":"","comment_id":183305,"utype":1}],"discussion_count":3,"race_medal":1,"score":"199151486358","product_id":100032701,"comment_content":"我一直很好奇，为啥说select函数对fd有1024的限制，找了点资料共勉：<br>首先，man select，搜索FD_SETSIZE会看到如下的内容<br>An fd_set is a fixed size buffer. Executing FD_CLR() or FD_SET() with a value of fd that is negative or is equal to or larger than FD_SETSIZE will result in undefined behavior. Moreover, POSIX requires fd to be a valid file descriptor.<br>其中最关键的是FD_SETSIZE，是在bitmap位图运算的时候会受到他的影响<br>其次，sys&#47;select.h头文件有如下定义：<br>#define FD_SETSIZE __FD_SETSIZE<br>typesizes.h头文件有如下定义：<br>#define __FD_SETSIZE 1024<br><br>由此，终于看到了1024的准确限制。<br><br>同时man里也说明了一个限制，不是0-1023的fd会导致未定义的行为。","like_count":47,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":485641,"discussion_content":"赞，为大家找到了原始的出处，证明我不是在瞎BB，哈哈。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1583053892,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1147282,"avatar":"https://static001.geekbang.org/account/avatar/00/11/81/92/d6fb906f.jpg","nickname":"寻找无双","note":"","ucode":"2BDC263DE6CC92","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":297064,"discussion_content":"前几天面试就被问到这个问题了","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1596765111,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2046036,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/sOuSC65kXWdWBAIIs6uXAD41Ed8Wo8tib81LLVOQJ2oK23TgPDy6x0PGmp7rXwLR3BHOicaKx1zib1DyfpCITK3dw/132","nickname":"GeekYanger","note":"","ucode":"E674B7D25261CC","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":408791,"discussion_content":"插眼","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1635325121,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":135461,"user_name":"安排","can_delete":false,"product_type":"c1","uid":1260026,"ip_address":"","ucode":"F78CFA9624CAEF","user_header":"https://static001.geekbang.org/account/avatar/00/13/39/fa/a7edbc72.jpg","comment_is_top":false,"comment_ctime":1569169230,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"83173547854","product_id":100032701,"comment_content":"第一道：可以，就绪条件是有数据可读(检测可读事件)。是否可以监测可写事件不太清楚，没有实验过。<br><br>第二道：不一定需要传入，那样的话内核中for循环需要遍历整个集合，效率低。传入基数可以减小遍历范围，提高效率。<br><br>当然，api既然设计成这样了，那肯定需要传入一个数了。","like_count":19,"discussions":[{"author":{"id":2123892,"avatar":"https://static001.geekbang.org/account/avatar/00/20/68/74/aea478ba.jpg","nickname":"我是管小亮","note":"","ucode":"A1C624CF9E1CA3","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":299372,"discussion_content":"对，正常就是遍历整个文件描述符集合，但是可以维护一个数组的方式，这样就可以提高效率！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1597668021,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":135551,"user_name":"Keep-Moving","can_delete":false,"product_type":"c1","uid":1182631,"ip_address":"","ucode":"76F33C06E07A27","user_header":"https://static001.geekbang.org/account/avatar/00/12/0b/a7/6ef32187.jpg","comment_is_top":false,"comment_ctime":1569208662,"is_pvip":false,"replies":[{"id":"52323","content":"逐个解释一下： <br>1.FD_ZERO(&amp;allreads);  <br>所有的位置设置为0；<br>  <br>2. FD_SET(0, &amp;allreads);<br>将描述字0的对应位置设置为1；<br>  <br>3.FD_SET(socket_fd, &amp;allreads);<br>将监听套接字的对应位置设置为1。<br><br>这样就得到了allreads = {0, 3}。<br><br>","user_name":"作者回复","user_name_real":"froghui","uid":"1618647","ctime":1569463973,"ip_address":"","comment_id":135551,"utype":1}],"discussion_count":9,"race_medal":0,"score":"61698750806","product_id":100032701,"comment_content":"allreads = {0, 3};<br>老师，这一步是怎么实现的？没看出来<br>","like_count":15,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":468243,"discussion_content":"逐个解释一下： \n1.FD_ZERO(&amp;amp;allreads);  \n所有的位置设置为0；\n  \n2. FD_SET(0, &amp;amp;allreads);\n将描述字0的对应位置设置为1；\n  \n3.FD_SET(socket_fd, &amp;amp;allreads);\n将监听套接字的对应位置设置为1。\n\n这样就得到了allreads = {0, 3}。\n\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1569463973,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1119247,"avatar":"https://static001.geekbang.org/account/avatar/00/11/14/0f/91f0194d.jpg","nickname":"海生","note":"","ucode":"27E459D96E9E55","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":118771,"discussion_content":"这里面in,out,error 是3个标准接口。分别占用了0到2这几个位置，所以fd从3开始。","likes_number":18,"is_delete":false,"is_hidden":false,"ctime":1578190352,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1063228,"avatar":"https://static001.geekbang.org/account/avatar/00/10/39/3c/065c042e.jpg","nickname":"hifly","note":"","ucode":"C9F4726FCD79DE","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":55746,"discussion_content":"监听套接字是3 是怎么来的啊  socket(AF_INET, SOCK_STREAM, 0) 调用这个函数时返回的不是任意整数或者-1吗","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1574393940,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":3,"child_discussions":[{"author":{"id":1652836,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epKJlW7sqts2ZbPuhMbseTAdvHWnrc4ficAeSZyKibkvn6qyxflPrkKKU3mH6XCNmYvDg11tB6y0pxg/132","nickname":"pc","note":"","ucode":"1AD538B9A900B6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1063228,"avatar":"https://static001.geekbang.org/account/avatar/00/10/39/3c/065c042e.jpg","nickname":"hifly","note":"","ucode":"C9F4726FCD79DE","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":280720,"discussion_content":"我理解的3只是举个例子，实际值是“fd”","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1591605778,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":55746,"ip_address":""},"score":280720,"extra":""},{"author":{"id":2123892,"avatar":"https://static001.geekbang.org/account/avatar/00/20/68/74/aea478ba.jpg","nickname":"我是管小亮","note":"","ucode":"A1C624CF9E1CA3","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1063228,"avatar":"https://static001.geekbang.org/account/avatar/00/10/39/3c/065c042e.jpg","nickname":"hifly","note":"","ucode":"C9F4726FCD79DE","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":299370,"discussion_content":"文件描述符中的0,1,2分别是in，out，error，是系统占用的，所以fd是从3开始的","likes_number":4,"is_delete":false,"is_hidden":false,"ctime":1597667932,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":55746,"ip_address":""},"score":299370,"extra":""},{"author":{"id":2681478,"avatar":"https://static001.geekbang.org/account/avatar/00/28/ea/86/3451bd1b.jpg","nickname":"LoganSong","note":"","ucode":"31D5B52B9ED411","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2123892,"avatar":"https://static001.geekbang.org/account/avatar/00/20/68/74/aea478ba.jpg","nickname":"我是管小亮","note":"","ucode":"A1C624CF9E1CA3","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":383321,"discussion_content":"0, 1, 2 分别对应的是stdin,stdout, stderr, 是POSIX 定义的, 新创建的FD是从3开始的, FD最多1024个","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1626058196,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":299370,"ip_address":""},"score":383321,"extra":""}]},{"author":{"id":1182631,"avatar":"https://static001.geekbang.org/account/avatar/00/12/0b/a7/6ef32187.jpg","nickname":"Keep-Moving","note":"","ucode":"76F33C06E07A27","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":21799,"discussion_content":"3Q","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1569535470,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1074310,"avatar":"https://static001.geekbang.org/account/avatar/00/10/64/86/f5a9403a.jpg","nickname":"多襄丸","note":"","ucode":"1AA1497C5A293C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1182631,"avatar":"https://static001.geekbang.org/account/avatar/00/12/0b/a7/6ef32187.jpg","nickname":"Keep-Moving","note":"","ucode":"76F33C06E07A27","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":21905,"discussion_content":"你看懂了吗? 给我讲一下可以吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1569552240,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":21799,"ip_address":""},"score":21905,"extra":""},{"author":{"id":1184919,"avatar":"https://static001.geekbang.org/account/avatar/00/12/14/97/8a3aa317.jpg","nickname":"疾风知劲草","note":"","ucode":"B6E73CA240AA29","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1074310,"avatar":"https://static001.geekbang.org/account/avatar/00/10/64/86/f5a9403a.jpg","nickname":"多襄丸","note":"","ucode":"1AA1497C5A293C","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":225815,"discussion_content":"首先这里的需求是要知道哪几个套接字被设置为1，在其他编程语言里，一般都会用字典来保存这个信息，key是套接字，value是1。但是使用数组来保存这个信息明显更优，因为key是整数。此时，套接字作为索引，1是对应位置的元素。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1586398852,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":21905,"ip_address":""},"score":225815,"extra":""}]}]},{"had_liked":false,"id":147222,"user_name":"无名","can_delete":false,"product_type":"c1","uid":1110113,"ip_address":"","ucode":"2D2E877CF97138","user_header":"https://static001.geekbang.org/account/avatar/00/10/f0/61/68462a07.jpg","comment_is_top":false,"comment_ctime":1572845155,"is_pvip":false,"replies":[{"id":"57480","content":"实际上，只要有一个字节可以被写入，就是状态可写的。","user_name":"作者回复","user_name_real":"froghui","uid":"1618647","ctime":1573281999,"ip_address":"","comment_id":147222,"utype":1}],"discussion_count":4,"race_medal":0,"score":"53112452707","product_id":100032701,"comment_content":"对于套接字可写状态中说的：套接字发送缓冲区足够大，怎么样算足够大呢？","like_count":13,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":473206,"discussion_content":"实际上，只要有一个字节可以被写入，就是状态可写的。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1573281999,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":1,"child_discussions":[{"author":{"id":1256121,"avatar":"https://static001.geekbang.org/account/avatar/00/13/2a/b9/2bf8cc89.jpg","nickname":"无名氏","note":"","ucode":"584E697AE276AB","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":573060,"discussion_content":"老师 如果进程需要发送的数据字节数大于发送缓存空闲数，是会一直阻塞等进程发完吧","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1653188353,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":473206,"ip_address":""},"score":573060,"extra":""}]},{"author":{"id":1738119,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/85/87/727142bc.jpg","nickname":"MacBao","note":"","ucode":"8CF51C3688C8F6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":306361,"discussion_content":"老师，现在发送缓冲区只有一个byte空闲，如果阻塞方式调用write写大于一个byte的数据，会阻塞吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1600255481,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1014061,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/79/2d/dbb5570f.jpg","nickname":"huadanian","note":"","ucode":"A986E1DB777428","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1738119,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/85/87/727142bc.jpg","nickname":"MacBao","note":"","ucode":"8CF51C3688C8F6","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":531699,"discussion_content":"write函数首先将进程需要发送的数据先放在进程缓冲区中，然后向socket的发送缓冲区进行拷贝，在此，可能出现这样情况，即当进程缓冲区中的数据量大于此时发送缓冲区中所能接受的数据量时，若此时处于阻塞模式，应用进程将会被挂起，直到进程缓冲区中的数据全部拷贝到发送缓冲区中，注意此时内核也不会返回write函数，因此，在阻塞模式下，若write函数正常返回，这也并不代表数据已经完成被对方进程接收，至多只能说明数据已经被发送缓冲区完全接受；若是处于非阻塞模式，此时write操作将会失败，内核会立即返回EAGAIN错误。(https://blog.csdn.net/qhaiwyy/article/details/18659353?spm=1001.2101.3001.6650.1&amp;utm_medium=distribute.pc_relevant.none-task-blog-2%7Edefault%7ECTRLIST%7Edefault-1.no_search_link&amp;depth_1-utm_source=distribute.pc_relevant.none-task-blog-2%7Edefault%7ECTRLIST%7Edefault-1.no_search_link）","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1637390838,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":306361,"ip_address":""},"score":531699,"extra":"{\"user_type\":1}"}]}]},{"had_liked":false,"id":154804,"user_name":"钱","can_delete":false,"product_type":"c1","uid":1009652,"ip_address":"","ucode":"2C92A243A463D4","user_header":"https://static001.geekbang.org/account/avatar/00/0f/67/f4/9a1feb59.jpg","comment_is_top":false,"comment_ctime":1574568183,"is_pvip":false,"replies":[{"id":"60386","content":"总结得已经很到位了呀","user_name":"作者回复","user_name_real":"froghui","uid":"1618647","ctime":1575189295,"ip_address":"","comment_id":154804,"utype":1}],"discussion_count":4,"race_medal":0,"score":"48819208439","product_id":100032701,"comment_content":"1：I&#47;O 多路复用的设计初衷就是解决这样的场景，把标准输入、套接字等都看做 I&#47;O 的一路，多路复用的意思，就是在任何一路 I&#47;O 有“事件”发生的情况下，通知应用程序去处理相应的 I&#47;O 事件，这样我们的程序就变成了“多面手”，在同一时刻仿佛可以处理多个 I&#47;O 事件。<br>2：select 函数就是这样一种常见的 I&#47;O 多路复用技术，使用 select 函数，通知内核挂起进程，当一个或多个 I&#47;O 事件发生后，控制权返还给应用程序，由应用程序进行 I&#47;O 事件的处理。<br><br>int select(int maxfd, fd_set *readset, fd_set *writeset, fd_set *exceptset, const struct timeval *timeout);<br><br>返回：若有就绪描述符则为其数目，若超时则为 0，若出错则为 -1<br><br>在这个函数中，maxfd 表示的是待测试的描述符基数，它的值是待测试的最大描述符加 1。<br>紧接着的是三个描述符集合，分别是读描述符集合 readset、写描述符集合 writeset 和异常描述符集合 exceptset，这三个分别通知内核，在哪些描述符上检测数据可以读，可以写和有异常发生。<br>三个描述符集合中的每一个都可以设置成空，这样就表示不需要内核进行相关的检测。<br>timeout设置成不同的值，会有不同的可能：<br>第一个可能是设置成空 (NULL)，表示如果没有 I&#47;O 事件发生，则 select 一直等待下去。<br>第二个可能是设置一个非零的值，这个表示等待固定的一段时间后从 select 阻塞调用中返回。<br>第三个可能是将 tv_sec 和 tv_usec 都设置成 0，表示根本不等待，检测完毕立即返回。这种情况使用得比较少。<br><br>3：内核通知我们套接字有数据可以读了，使用 read 函数不会阻塞。<br>内核通知我们套接字可以往里写了，使用 write 函数就不会阻塞。<br><br>读了几遍，感觉还是没有抓住核心，所以，就将文中的要点摘录下来。<br>对IO多路复用的大概理解是，通过select函数去监听一组文件描述符，如果有事件就绪就交给应用程序去做对应的处理。","like_count":11,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":475584,"discussion_content":"总结得已经很到位了呀","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1575189295,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2377498,"avatar":"https://static001.geekbang.org/account/avatar/00/24/47/1a/5ffbedbf.jpg","nickname":"浅紫、彼岸花开","note":"","ucode":"E1C482DDC07A5A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":568745,"discussion_content":"进程挂起了？应该不会阻塞吧","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1651220452,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2123892,"avatar":"https://static001.geekbang.org/account/avatar/00/20/68/74/aea478ba.jpg","nickname":"我是管小亮","note":"","ucode":"A1C624CF9E1CA3","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":299375,"discussion_content":"IO多路复用和阻塞IO的区别就是多路复用可以多路阻塞IO！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1597668339,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1326455,"avatar":"https://static001.geekbang.org/account/avatar/00/14/3d/77/45e5e06d.jpg","nickname":"胡鹏","note":"","ucode":"52644EC57FA4DB","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":235083,"discussion_content":"文章粗略看一下, 就看你的总结我觉得就够了☺","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1587017734,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":269022,"user_name":"乔丹","can_delete":false,"product_type":"c1","uid":1217413,"ip_address":"","ucode":"D832A9F97A0C7E","user_header":"https://static001.geekbang.org/account/avatar/00/12/93/85/f5d9474c.jpg","comment_is_top":false,"comment_ctime":1608474709,"is_pvip":false,"replies":[{"id":"98869","content":"1.这里是举一个例子，因为0,1,2分别是标准输入，标准输出和标准错误，3是接下来的第一个常见描述字。<br><br>2.select确实不能支持大于1024的描述字。","user_name":"作者回复","user_name_real":"froghui","uid":"1618647","ctime":1610285613,"ip_address":"","comment_id":269022,"utype":1}],"discussion_count":1,"race_medal":0,"score":"44558147669","product_id":100032701,"comment_content":"老师，两个疑问：<br>1. 为什么socket_fd一定是3呢？ <br>2. 如果socket_fd = 2000, 那么传入select函数的值就是2001了， 这样不是大于1024了吗？<br>这个点我没有想通。","like_count":10,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":512117,"discussion_content":"1.这里是举一个例子，因为0,1,2分别是标准输入，标准输出和标准错误，3是接下来的第一个常见描述字。\n\n2.select确实不能支持大于1024的描述字。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1610285613,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":136926,"user_name":"无名","can_delete":false,"product_type":"c1","uid":1110113,"ip_address":"","ucode":"2D2E877CF97138","user_header":"https://static001.geekbang.org/account/avatar/00/10/f0/61/68462a07.jpg","comment_is_top":false,"comment_ctime":1569555220,"is_pvip":false,"replies":[{"id":"52781","content":"是的，感谢指出。","user_name":"作者回复","user_name_real":"froghui","uid":"1618647","ctime":1569724013,"ip_address":"","comment_id":136926,"utype":1}],"discussion_count":1,"race_medal":0,"score":"40224260884","product_id":100032701,"comment_content":"size_t rt = write(socket_fd, send_line, strlen(send_line));<br>if (rt &lt; 0) {<br>     error(1, errno, &quot;write failed &quot;);<br> }<br>这个代码中有错吧，应该将size_t改为sszie_t，size_t为unsigned long，这样错误-1被转换了。","like_count":9,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":468866,"discussion_content":"是的，感谢指出。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1569724013,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":135502,"user_name":"莫珣","can_delete":false,"product_type":"c1","uid":1117933,"ip_address":"","ucode":"CAFE6F2AC5C177","user_header":"https://static001.geekbang.org/account/avatar/00/11/0e/ed/1c662e93.jpg","comment_is_top":false,"comment_ctime":1569199602,"is_pvip":false,"replies":[{"id":"52327","content":"第一个问题，我理解是加不进去的，你不妨设计一个程序验证一下。<br><br>第二个问题，首先，这个值是可以调整的，我记得默认值即使1个byte，也就是说有数据就可以感知到；第二，如果一直达不到接收watermark，我理解不是一个正常的网络交互过程，正常的网络交互肯定是像流一样，不断有数据接收。","user_name":"作者回复","user_name_real":"froghui","uid":"1618647","ctime":1569464371,"ip_address":"","comment_id":135502,"utype":1}],"discussion_count":2,"race_medal":0,"score":"31633970674","product_id":100032701,"comment_content":"我有些疑问，select的FD数组大小默认是1024，但是Linux的文件描述符大小一定不是1024，假设现在使用ulimit将一个进程可以打开的文件数设置成了65535，那么大于1024的文件描述符怎么加到FD数组中去呢，如果按照文本里说的，文件描述符代表数组下标的话不就加不进去了？<br><br>第二个问题，套接字有两个属性，接收低水位线和发送低水位线，当接收缓冲区中待接收的字节数大于接收低水位线，一个可读事件产生，那么如果永远都不能达到接收低水位线呢？<br>","like_count":7,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":468218,"discussion_content":"第一个问题，我理解是加不进去的，你不妨设计一个程序验证一下。\n\n第二个问题，首先，这个值是可以调整的，我记得默认值即使1个byte，也就是说有数据就可以感知到；第二，如果一直达不到接收watermark，我理解不是一个正常的网络交互过程，正常的网络交互肯定是像流一样，不断有数据接收。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1569464371,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1117933,"avatar":"https://static001.geekbang.org/account/avatar/00/11/0e/ed/1c662e93.jpg","nickname":"莫珣","note":"","ucode":"CAFE6F2AC5C177","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":21306,"discussion_content":"第二个问题当时其实是想一个连接里最后一个分节的数据，发完就要断开连接这种情况。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1569465394,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":207279,"user_name":"awmthink","can_delete":false,"product_type":"c1","uid":1331202,"ip_address":"","ucode":"742915BBCE7111","user_header":"https://static001.geekbang.org/account/avatar/00/14/50/02/cce1cf67.jpg","comment_is_top":false,"comment_ctime":1587040955,"is_pvip":false,"replies":[{"id":"77713","content":"写描述符是当发送套接字缓冲区有空间时，要知道，应用程序不是什么时刻都可以不断网发送套接字缓冲区打收据，这样会把缓冲区打爆，所以多路复用写的意思就是告诉应用程序什么时候应该往发送套接字缓冲区打数据。","user_name":"作者回复","user_name_real":"froghui","uid":"1618647","ctime":1587303625,"ip_address":"","comment_id":207279,"utype":1}],"discussion_count":1,"race_medal":0,"score":"27356844731","product_id":100032701,"comment_content":"老师，哪种场景下需要多路复用　“写描述符”　呢？ 什么时候能写应用程序不知道吗？","like_count":6,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":492070,"discussion_content":"写描述符是当发送套接字缓冲区有空间时，要知道，应用程序不是什么时刻都可以不断网发送套接字缓冲区打收据，这样会把缓冲区打爆，所以多路复用写的意思就是告诉应用程序什么时候应该往发送套接字缓冲区打数据。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1587303625,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":167018,"user_name":"麻雀","can_delete":false,"product_type":"c1","uid":1257751,"ip_address":"","ucode":"67CD60D3E705B9","user_header":"https://static001.geekbang.org/account/avatar/00/13/31/17/02fc18b1.jpg","comment_is_top":false,"comment_ctime":1577670766,"is_pvip":false,"replies":[{"id":"65481","content":"第一，是可以的。这个机制是操作系统实现的，你可以把操作系统理解成一个&quot;巨大&quot;的无限循环处理器，无论是有数据需要读写，还是有新的套接字连接达到，这个巨大的无限循环处理器都是可以快速感知到(通过各种软硬件机制，比如中断)，这样你就可以明白，它的内部并不是多线程实现的。<br><br>第二，你的理解是正确的，就是对每个位来设置0或者1。","user_name":"作者回复","user_name_real":"froghui","uid":"1618647","ctime":1578213926,"ip_address":"","comment_id":167018,"utype":1}],"discussion_count":1,"race_medal":0,"score":"18757539950","product_id":100032701,"comment_content":"您好，<br>第一，想问下select是不是能够在处理数据的同时继续轮询（监听）是否有新的套接字来到，它的内部是不是多线程呢？因为accept就是因为单线程在处理数据时，不能对这段时间内到来的套接字进行监听。 <br>第二，FD_SET它是一个unsigned long数组，那么它怎么实现Bitmap，只是对数组的每个元素例如fd_set[10]对文件描述符为10的套接字来数据的时候设置为1吗？","like_count":4,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":479715,"discussion_content":"第一，是可以的。这个机制是操作系统实现的，你可以把操作系统理解成一个&amp;quot;巨大&amp;quot;的无限循环处理器，无论是有数据需要读写，还是有新的套接字连接达到，这个巨大的无限循环处理器都是可以快速感知到(通过各种软硬件机制，比如中断)，这样你就可以明白，它的内部并不是多线程实现的。\n\n第二，你的理解是正确的，就是对每个位来设置0或者1。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578213926,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":218895,"user_name":"rongyefeng","can_delete":false,"product_type":"c1","uid":1959482,"ip_address":"","ucode":"9A15D947E9D645","user_header":"https://static001.geekbang.org/account/avatar/00/1d/e6/3a/382cf024.jpg","comment_is_top":false,"comment_ctime":1589894796,"is_pvip":false,"replies":[{"id":"80982","content":"如果从套接字特性来说，确实是阻塞套接字，已经提交勘误。","user_name":"作者回复","user_name_real":"froghui","uid":"1618647","ctime":1589977315,"ip_address":"","comment_id":218895,"utype":1}],"discussion_count":1,"race_medal":0,"score":"14474796684","product_id":100032701,"comment_content":"“第一种是套接字发送缓冲区足够大，如果我们使用非阻塞套接字进行 write 操作，将不会被阻塞，直接返回。”<br>老师，请问这里是不是应该写成“如果我们使用阻塞套接字进行write操作......”才对？","like_count":3,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":495618,"discussion_content":"如果从套接字特性来说，确实是阻塞套接字，已经提交勘误。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1589977315,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":240578,"user_name":"imsunv","can_delete":false,"product_type":"c1","uid":1068968,"ip_address":"","ucode":"A8D3E16BC4E837","user_header":"https://static001.geekbang.org/account/avatar/00/10/4f/a8/fa10583f.jpg","comment_is_top":false,"comment_ctime":1596981846,"is_pvip":true,"replies":[{"id":"89335","content":"不会阻塞，write函数会返回实际写入缓冲区的字节大小。实际上的策略就是&quot;尽最大可能&quot;写入。","user_name":"作者回复","user_name_real":"froghui","uid":"1618647","ctime":1597584148,"ip_address":"","comment_id":240578,"utype":1}],"discussion_count":2,"race_medal":0,"score":"10186916438","product_id":100032701,"comment_content":"内核通知我们套接字可以往里写了，使用 write 函数就不会阻塞 。<br>那么如果写的内容超过了 缓冲区的大小，会阻塞么","like_count":2,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":503491,"discussion_content":"不会阻塞，write函数会返回实际写入缓冲区的字节大小。实际上的策略就是&amp;quot;尽最大可能&amp;quot;写入。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1597584148,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1025505,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a5/e1/6c300c33.jpg","nickname":"hp++","note":"","ucode":"533F7137D6090D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":300077,"discussion_content":"不堵塞  返回已写入字节数 然后剩下的继续write?","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1597929588,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":236608,"user_name":"小仙女","can_delete":false,"product_type":"c1","uid":2069778,"ip_address":"","ucode":"543DD387C634D0","user_header":"https://static001.geekbang.org/account/avatar/00/1f/95/12/33028a3f.jpg","comment_is_top":false,"comment_ctime":1595476945,"is_pvip":false,"replies":[{"id":"87601","content":"你罗列的是文件描述符的种类，这个是没错的。不过fd_set是通过mask位来表示描述字的。","user_name":"作者回复","user_name_real":"froghui","uid":"1618647","ctime":1595680057,"ip_address":"","comment_id":236608,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10185411537","product_id":100032701,"comment_content":"int select(int maxfd, fd_set *readset, fd_set *writeset, fd_set *exceptset, const struct timeval *timeout);<br>这里的fd_set 是什么结构<br><br>0:标准输入<br>1：标准输出<br>2：标准错误<br>3：socket<br><br>是这样吗？？<br>","like_count":2,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":502139,"discussion_content":"你罗列的是文件描述符的种类，这个是没错的。不过fd_set是通过mask位来表示描述字的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1595680057,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":169999,"user_name":"skye","can_delete":false,"product_type":"c1","uid":1027840,"ip_address":"","ucode":"C55C9F52C78A00","user_header":"https://static001.geekbang.org/account/avatar/00/0f/af/00/9b49f42b.jpg","comment_is_top":false,"comment_ctime":1578490840,"is_pvip":false,"replies":[{"id":"68065","content":"我明白你想表达的是select之后处理事件的时候可能会阻塞，导致select不到其他事件，这点理解是对的。<br><br>至于单线程处理是不是一定没有阻塞(死锁我不太明白这里指的是具体什么情况)，我倒觉得不一定，当然，非阻塞效果可能更好一些。","user_name":"作者回复","user_name_real":"froghui","uid":"1618647","ctime":1580630657,"ip_address":"","comment_id":169999,"utype":1}],"discussion_count":2,"race_medal":0,"score":"10168425432","product_id":100032701,"comment_content":"用select做多路复用，如果不用多线程，其中一路阻塞或者死锁了，那其它路就无法处理了，所以单线程处理的前提时没有阻塞和死锁，这样理解对吗？","like_count":2,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":480801,"discussion_content":"我明白你想表达的是select之后处理事件的时候可能会阻塞，导致select不到其他事件，这点理解是对的。\n\n至于单线程处理是不是一定没有阻塞(死锁我不太明白这里指的是具体什么情况)，我倒觉得不一定，当然，非阻塞效果可能更好一些。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1580630657,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1261959,"avatar":"https://static001.geekbang.org/account/avatar/00/13/41/87/46d7e1c2.jpg","nickname":"Better me","note":"","ucode":"CADF08D357489A","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":387018,"discussion_content":"感觉和单线程处理的Redis有点像，其基于内存操作速度很快，很少阻塞才适合用单线程实现","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1627953203,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":148512,"user_name":"打奥特曼的小怪兽","can_delete":false,"product_type":"c1","uid":1060596,"ip_address":"","ucode":"DE9FF2D598BED2","user_header":"https://static001.geekbang.org/account/avatar/00/10/2e/f4/1e4d6941.jpg","comment_is_top":false,"comment_ctime":1573022965,"is_pvip":false,"replies":[{"id":"57486","content":"我的意思就是00001001，在bit位上设置为1, 转换为10进制就是9。","user_name":"作者回复","user_name_real":"froghui","uid":"1618647","ctime":1573282885,"ip_address":"","comment_id":148512,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10162957557","product_id":100032701,"comment_content":"关于 FD_SET() 函数，debug看了下内存结构，{0,3} 如果设置了，实际上存储的是 2^0 + 2^3 = 9,并不会像图示的在每个位置上设置1。","like_count":2,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":473516,"discussion_content":"我的意思就是00001001，在bit位上设置为1, 转换为10进制就是9。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573282885,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":142770,"user_name":"我也曾是少年","can_delete":false,"product_type":"c1","uid":1503970,"ip_address":"","ucode":"8E2EA108C24E9F","user_header":"https://static001.geekbang.org/account/avatar/00/16/f2/e2/f48d094a.jpg","comment_is_top":false,"comment_ctime":1571502259,"is_pvip":false,"discussion_count":3,"race_medal":0,"score":"10161436851","product_id":100032701,"comment_content":"老师，我看了一部分开源代码，golang的，我发现大多数有名的项目他们并发写套接字的时候，都是用一个阻塞对列，既向一个没有容量的channel中写，只有接收端接了，发送端才会继续往下面走，我觉得别人这么做肯定是有原因的，但是我摸不透，所以将这问题定位到并发写套接字上，不知老师对这问题怎么看","like_count":2,"discussions":[{"author":{"id":1041685,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKPIrGvZ9qJOmfwy37ruzpKQXlTxA1WACHiaPWEq59tR3ID6Dp9qo7L7nlbic4TiamCSribxwqV7IKKSg/132","nickname":"Seven","note":"","ucode":"78266D8828B61B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":57057,"discussion_content":"我是写 golang 的, 我来说一下我的理解\n如果 channel 不设置为 1, 如果消费端 未去消费, channel 会增加. 如果此时 消费端, 错误退出, 这时可能丢失的只是 1 个消息, 而生产者, 因为 channel 阻塞, 此时是不会往 channel 写入数据, 生产者也不会生成过多数据, 生产者可以做相应的操作","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1574562737,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1503970,"avatar":"https://static001.geekbang.org/account/avatar/00/16/f2/e2/f48d094a.jpg","nickname":"我也曾是少年","note":"","ucode":"8E2EA108C24E9F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1041685,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKPIrGvZ9qJOmfwy37ruzpKQXlTxA1WACHiaPWEq59tR3ID6Dp9qo7L7nlbic4TiamCSribxwqV7IKKSg/132","nickname":"Seven","note":"","ucode":"78266D8828B61B","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":65755,"discussion_content":"那那为什么，不直接写套接字呢？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1575026816,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":57057,"ip_address":""},"score":65755,"extra":""}]},{"author":{"id":1478098,"avatar":"https://static001.geekbang.org/account/avatar/00/16/8d/d2/8a6be8d8.jpg","nickname":"程序员班吉","note":"","ucode":"BD48CF7649609A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":350616,"discussion_content":"在golang里，channel的size大小并不会提高并发度。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1613957700,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":324624,"user_name":"Navelwort、","can_delete":false,"product_type":"c1","uid":1196524,"ip_address":"","ucode":"DE32C73A7D894C","user_header":"https://static001.geekbang.org/account/avatar/00/12/41/ec/d0e2bfa4.jpg","comment_is_top":false,"comment_ctime":1638520930,"is_pvip":false,"replies":[{"id":"117834","content":"是的。","user_name":"作者回复","user_name_real":"编辑","uid":"1618647","ctime":1638691426,"ip_address":"","comment_id":324624,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5933488226","product_id":100032701,"comment_content":"如果select 检测到可写事件，但是缓冲区还不够大，不能完成应用层数据的全部拷贝，如果是阻塞类套接字，那write函数还是会阻塞吧？","like_count":1,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":536108,"discussion_content":"是的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1638691426,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":245388,"user_name":"нáпの゛","can_delete":false,"product_type":"c1","uid":1130666,"ip_address":"","ucode":"834FA877EFBAF7","user_header":"https://static001.geekbang.org/account/avatar/00/11/40/aa/49bbb007.jpg","comment_is_top":false,"comment_ctime":1598929387,"is_pvip":false,"replies":[{"id":"90589","content":"基本正确哦。","user_name":"作者回复","user_name_real":"froghui","uid":"1618647","ctime":1599399623,"ip_address":"","comment_id":245388,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5893896683","product_id":100032701,"comment_content":"第一道题，理解管道也是文件，往管道输入数据和输出数据对应可读可写的就绪条件。<br>第二道题，我理解fd_set本身是数组，如果不传入描述字基数，无法得知fd_set的具体大小，应该是无法进行遍历操作的。","like_count":2,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":504868,"discussion_content":"基本正确哦。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1599399623,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":207373,"user_name":"Joker","can_delete":false,"product_type":"c1","uid":1156592,"ip_address":"","ucode":"126AF848001A1E","user_header":"https://static001.geekbang.org/account/avatar/00/11/a5/f0/8648c464.jpg","comment_is_top":false,"comment_ctime":1587061388,"is_pvip":false,"replies":[{"id":"77714","content":"哈哈，这也可以。","user_name":"作者回复","user_name_real":"froghui","uid":"1618647","ctime":1587303641,"ip_address":"","comment_id":207373,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5882028684","product_id":100032701,"comment_content":"小明原来只在一个家书店里等着，后来发现等着无聊，回家，然后在去书店等；后来发现别的书店，索性就好几家一起问，问了这个去下一家，看看哪家书到了，就先买哪一家的。","like_count":2,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":492102,"discussion_content":"哈哈，这也可以。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1587303641,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":135609,"user_name":"向东","can_delete":false,"product_type":"c1","uid":1200181,"ip_address":"","ucode":"9F621FBF115620","user_header":"https://static001.geekbang.org/account/avatar/00/12/50/35/079d04c8.jpg","comment_is_top":false,"comment_ctime":1569227886,"is_pvip":false,"replies":[{"id":"52322","content":"32位整数，一共有32个bit位，每个bit位可以表示两种状态，0或者1，如果开启检测就将bit设置为1，否则设置为0。像下面这样：<br>00000000 00000000 00000000 10010010<br><br>这个32bit分别表示了描述字7，4和1设置为1，其他的设置为0。这里表示的对应描述字0-31。","user_name":"作者回复","user_name_real":"froghui","uid":"1618647","ctime":1569463801,"ip_address":"","comment_id":135609,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5864195182","product_id":100032701,"comment_content":"32位整数，那么该数组的第一个元素对应于描述字0~31，第二个元素对应于描述字32~63，依此类推。 没读懂，解答一下？多谢🙏","like_count":1,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":468268,"discussion_content":"32位整数，一共有32个bit位，每个bit位可以表示两种状态，0或者1，如果开启检测就将bit设置为1，否则设置为0。像下面这样：\n00000000 00000000 00000000 10010010\n\n这个32bit分别表示了描述字7，4和1设置为1，其他的设置为0。这里表示的对应描述字0-31。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1569463801,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":353107,"user_name":"dll","can_delete":false,"product_type":"c1","uid":1264401,"ip_address":"北京","ucode":"5773CBC8BFB91F","user_header":"https://static001.geekbang.org/account/avatar/00/13/4b/11/d7e08b5b.jpg","comment_is_top":false,"comment_ctime":1659171704,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1659171704","product_id":100032701,"comment_content":"select 里的测试的描述字，要小于1024，但是普通的文件描述字或者socket描述字，不一定能小于这个1024，不能理解为什么文里是3","like_count":0},{"had_liked":false,"id":348124,"user_name":"Sancho","can_delete":false,"product_type":"c1","uid":1436391,"ip_address":"","ucode":"78849913082622","user_header":"https://static001.geekbang.org/account/avatar/00/15/ea/e7/9ce305ec.jpg","comment_is_top":false,"comment_ctime":1654761969,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1654761969","product_id":100032701,"comment_content":"FD_SET 用来把对应套接字 fd 的元素，a[fd]设置成 1；<br>FD_ISSET 对这个向量进行检测，判断出对应套接字的元素 a[fd]是 0 还是 1。<br><br>文中这两句经验证是有问题，验证如下：<br>1.服务启动时，代码会阻塞在第18行。说明当前没有I&#47;O事件发，也即说明没有描述符就绪。<br>2.如果FD_SET用来把对应套接字 fd 的元素，a[fd]设置成 1，那代码第13，14行不就把0、socket_fd设置成了1<br>3.第17号之后，select为啥没有就绪的套接字？<br><br>man select解释是这样的：<br>FD_SET()<br>    This macro adds the file descriptor fd to set.  <br>    Adding a file descriptor that is already present in the set is a no-op, <br>    and does not produce an error.","like_count":0},{"had_liked":false,"id":340548,"user_name":"程序员班吉","can_delete":false,"product_type":"c1","uid":1478098,"ip_address":"","ucode":"BD48CF7649609A","user_header":"https://static001.geekbang.org/account/avatar/00/16/8d/d2/8a6be8d8.jpg","comment_is_top":false,"comment_ctime":1648893851,"is_pvip":false,"replies":[{"id":"124553","content":"stdin技术fd为0的文件字，这两个set方法，告诉了select关心的描述字:<br><br>FD_SET(0, &amp;allreads);<br>FD_SET(socket_fd, &amp;allreads);","user_name":"作者回复","user_name_real":"编辑","uid":"1618647","ctime":1648989259,"ip_address":"","comment_id":340548,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1648893851","product_id":100032701,"comment_content":"有个地方没搞明白，明明监听了stdin和socket_fd，但for循环里的select传入的只有socket_fd + 1， 那select 是如何知道stdin的状态的呢？","like_count":0,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":559822,"discussion_content":"stdin技术fd为0的文件字，这两个set方法，告诉了select关心的描述字:\n\nFD_SET(0, &amp;allreads);\nFD_SET(socket_fd, &amp;allreads);","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1648989259,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":329549,"user_name":"菜鸡互啄","can_delete":false,"product_type":"c1","uid":2765079,"ip_address":"","ucode":"59162B81398399","user_header":"https://static001.geekbang.org/account/avatar/00/2a/31/17/ab2c27a6.jpg","comment_is_top":false,"comment_ctime":1641395196,"is_pvip":false,"replies":[{"id":"120805","content":"实战中最好设置为non-blocking的。这里只是讲解select的用法，所以就没有过早的讲述non-blocking。","user_name":"作者回复","user_name_real":"编辑","uid":"1618647","ctime":1642310335,"ip_address":"","comment_id":329549,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1641395196","product_id":100032701,"comment_content":"老师你好 看github上面的代码 塞进set的描述字没有设置非阻塞的。看相关资料 最佳实践是说要设置成非阻塞的。原因是select返回时并不能完全保证read读到数据 也有可能会阻塞。老师认可吗","like_count":0,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":546445,"discussion_content":"实战中最好设置为non-blocking的。这里只是讲解select的用法，所以就没有过早的讲述non-blocking。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1642310335,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":328399,"user_name":"Janus Pen","can_delete":false,"product_type":"c1","uid":2667580,"ip_address":"","ucode":"70B3F972739278","user_header":"https://static001.geekbang.org/account/avatar/00/28/b4/3c/e4a08d98.jpg","comment_is_top":false,"comment_ctime":1640702451,"is_pvip":false,"replies":[{"id":"119876","content":"我感觉你没有仔细读。<br>select 调用每次完成测试之后，内核都会修改描述符集合，通过修改完的描述符集合来和应用程序交互，应用程序使用 FD_ISSET 来对每个描述符进行判断，从而知道什么样的事件发生。<br>也就是说，之前是{0,3}，经过select之后，变成{0}，表示的是套接字0有事件发生。","user_name":"作者回复","user_name_real":"编辑","uid":"1618647","ctime":1641115800,"ip_address":"","comment_id":328399,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1640702451","product_id":100032701,"comment_content":"两个疑问：<br>我感觉select没想讲清楚；<br>1、第 17 行是每次测试完之后，重新设置待测试的描述符集合。你可以看到上面的例子，在 select 测试之前的数据是{0,3}，select 测试之后就变成了{0}。那24行还判断什么了，结果肯定是0;<br>2、13和14行吧allreads[0] 和 allreads[3]设置成了1；FD_ISSET 对这个向量进行检测，判断出对应套接字的元素 a[fd]是 0 还是 1。本来就是1，经过select处理后，对这个1有什么影响？FD_ISSET判断感觉没有意义","like_count":0,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":543384,"discussion_content":"我感觉你没有仔细读。\nselect 调用每次完成测试之后，内核都会修改描述符集合，通过修改完的描述符集合来和应用程序交互，应用程序使用 FD_ISSET 来对每个描述符进行判断，从而知道什么样的事件发生。\n也就是说，之前是{0,3}，经过select之后，变成{0}，表示的是套接字0有事件发生。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1641115800,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":314100,"user_name":"Running man","can_delete":false,"product_type":"c1","uid":2075086,"ip_address":"","ucode":"F3357D6696A5C1","user_header":"https://static001.geekbang.org/account/avatar/00/1f/a9/ce/23f2e185.jpg","comment_is_top":false,"comment_ctime":1632835565,"is_pvip":false,"replies":[{"id":"114042","content":"也可以。<br>我明白你的意思，每次处理完之后需要重置set，你说的是对的，可以看看第22章就是这么做的。<br>这里没有考虑多个I&#47;O套接字，所以放在外面也是work的。","user_name":"作者回复","user_name_real":"froghui","uid":"1618647","ctime":1633576667,"ip_address":"","comment_id":314100,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1632835565","product_id":100032701,"comment_content":"这里FD_SET应该放在循环体内部吧","like_count":0,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":527569,"discussion_content":"也可以。\n我明白你的意思，每次处理完之后需要重置set，你说的是对的，可以看看第22章就是这么做的。\n这里没有考虑多个I/O套接字，所以放在外面也是work的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1633576667,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":307885,"user_name":"勿更改任何信息","can_delete":false,"product_type":"c1","uid":2028955,"ip_address":"","ucode":"B4949BEB8B2AFD","user_header":"","comment_is_top":false,"comment_ctime":1629292496,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1629292496","product_id":100032701,"comment_content":"Unix Network Programming","like_count":0},{"had_liked":false,"id":297520,"user_name":"vv_test","can_delete":false,"product_type":"c1","uid":1685884,"ip_address":"","ucode":"1D164B2F034E2B","user_header":"https://static001.geekbang.org/account/avatar/00/19/b9/7c/afe6f1eb.jpg","comment_is_top":false,"comment_ctime":1623594347,"is_pvip":false,"replies":[{"id":"108670","content":"你可以验证下","user_name":"作者回复","user_name_real":"froghui","uid":"1618647","ctime":1624804917,"ip_address":"","comment_id":297520,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1623594347","product_id":100032701,"comment_content":"第二道我是这样理解的，因为fd_set大部分是底层是数组维护，那么程序为了扩展性，一般会设置得比较大，比如初始化是10，那么其实当前是只用到了4，那传入基数是不是就可以把后面的忽略掉了。回头再来验证一下。","like_count":0,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":521844,"discussion_content":"你可以验证下","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1624804917,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":251615,"user_name":"YUAN","can_delete":false,"product_type":"c1","uid":2153838,"ip_address":"","ucode":"98EF68EEE21893","user_header":"https://static001.geekbang.org/account/avatar/00/20/dd/6e/8f6f79d2.jpg","comment_is_top":false,"comment_ctime":1601725587,"is_pvip":false,"replies":[{"id":"92059","content":"内核构造位向量，是一个静态全量的数据结构，而如果使用set，就必须使用链表或指针或其他的方法，构建一个可变化的动态数据结构，这恐怕是最早实现的时候一个取舍。","user_name":"作者回复","user_name_real":"froghui","uid":"1618647","ctime":1601871616,"ip_address":"","comment_id":251615,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1601725587","product_id":100032701,"comment_content":"为什么把fd_set用位向量实现，用set实现不就不需要对无用位进行测试了吗？例如我想检测0和1023。我只要检测两个位，但是使用fd_set就要检测1024个。","like_count":0,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":506565,"discussion_content":"内核构造位向量，是一个静态全量的数据结构，而如果使用set，就必须使用链表或指针或其他的方法，构建一个可变化的动态数据结构，这恐怕是最早实现的时候一个取舍。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1601871616,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":245376,"user_name":"нáпの゛","can_delete":false,"product_type":"c1","uid":1130666,"ip_address":"","ucode":"834FA877EFBAF7","user_header":"https://static001.geekbang.org/account/avatar/00/11/40/aa/49bbb007.jpg","comment_is_top":false,"comment_ctime":1598927484,"is_pvip":false,"replies":[{"id":"90588","content":"是的。","user_name":"作者回复","user_name_real":"froghui","uid":"1618647","ctime":1599399272,"ip_address":"","comment_id":245376,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1598927484","product_id":100032701,"comment_content":"老师，如果放了1024个句柄，相当于要把句柄集合存起来，遍历每一个判断FD_ISSET 做处理是吗？","like_count":0,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":504865,"discussion_content":"是的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1599399272,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":239618,"user_name":"keepgoing","can_delete":false,"product_type":"c1","uid":1471387,"ip_address":"","ucode":"A2FE0687FB17E0","user_header":"https://static001.geekbang.org/account/avatar/00/16/73/9b/67a38926.jpg","comment_is_top":false,"comment_ctime":1596598568,"is_pvip":false,"replies":[{"id":"89392","content":"rc == return code","user_name":"作者回复","user_name_real":"froghui","uid":"1618647","ctime":1597639877,"ip_address":"","comment_id":239618,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1596598568","product_id":100032701,"comment_content":"老师经常喜欢用rc作变量名，想求问一下这个rc是哪两个单词的缩写~","like_count":0,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":503161,"discussion_content":"rc == return code","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1597639877,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1233225,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJcZh2daicchErrjK9LO3iaP0kQR11J9U8WxcZ2XMBHvy7dmspQkbDa24xS9Arib84df9j1rh66k34BA/132","nickname":"Luooke6002","note":"","ucode":"B7A9D17892F16B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":297066,"discussion_content":"我猜是return code~","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1596765381,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":214377,"user_name":"ABC","can_delete":false,"product_type":"c1","uid":1203803,"ip_address":"","ucode":"B8FCB5FD947E88","user_header":"https://static001.geekbang.org/account/avatar/00/12/5e/5b/c7e9fa5f.jpg","comment_is_top":false,"comment_ctime":1588733677,"is_pvip":false,"replies":[{"id":"79832","content":"我也没怎么见过，网上搜了下，这里有段哈佛大学的telnet里面的代码，用到了exceptset:<br><br><br>&#47;*<br> * Check a descriptor to see if out of band data exists on it.<br> *&#47;<br>int stilloob(int s)\t\t&#47;* socket number *&#47;<br>{<br>    static struct timeval timeout = { 0, 0 };<br>    fd_set\texcepts;<br>    int value;<br> <br>    do {<br>\tFD_ZERO(&amp;excepts);<br>\tFD_SET(s, &amp;excepts);<br>\tvalue = select(s+1, (fd_set *)0, (fd_set *)0, &amp;excepts, &amp;timeout);<br>    } while ((value == -1) &amp;&amp; (errno == EINTR));<br> <br>    if (value &lt; 0) {<br>\tfatalperror(pty, &quot;select&quot;);<br>    }<br>    if (FD_ISSET(s, &amp;excepts)) {<br>\treturn 1;<br>    } else {<br>\treturn 0;<br>    }<br>}","user_name":"作者回复","user_name_real":"froghui","uid":"1618647","ctime":1589099377,"ip_address":"","comment_id":214377,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1588733677","product_id":100032701,"comment_content":"可读 可写的监控我看里面包含了一些异常情况，那exceptset这个一般在什么场景使用？","like_count":0,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":494039,"discussion_content":"我也没怎么见过，网上搜了下，这里有段哈佛大学的telnet里面的代码，用到了exceptset:\n\n\n/*\n * Check a descriptor to see if out of band data exists on it.\n */\nint stilloob(int s)\t\t/* socket number */\n{\n    static struct timeval timeout = { 0, 0 };\n    fd_set\texcepts;\n    int value;\n \n    do {\n\tFD_ZERO(&amp;amp;excepts);\n\tFD_SET(s, &amp;amp;excepts);\n\tvalue = select(s+1, (fd_set *)0, (fd_set *)0, &amp;amp;excepts, &amp;amp;timeout);\n    } while ((value == -1) &amp;amp;&amp;amp; (errno == EINTR));\n \n    if (value &amp;lt; 0) {\n\tfatalperror(pty, &amp;quot;select&amp;quot;);\n    }\n    if (FD_ISSET(s, &amp;amp;excepts)) {\n\treturn 1;\n    } else {\n\treturn 0;\n    }\n}","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1589099377,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":182197,"user_name":"jackstraw","can_delete":false,"product_type":"c1","uid":1137207,"ip_address":"","ucode":"C967D2D6158F99","user_header":"https://static001.geekbang.org/account/avatar/00/11/5a/37/8775d714.jpg","comment_is_top":false,"comment_ctime":1582727536,"is_pvip":false,"replies":[{"id":"71033","content":"你误解了，这里没有说是阻塞或非阻塞套集字，而是说套接字准备好读，是可以通过read来完成；套接字准备好可以写，是可以通过write操作来完成。","user_name":"作者回复","user_name_real":"froghui","uid":"1618647","ctime":1583052590,"ip_address":"","comment_id":182197,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1582727536","product_id":100032701,"comment_content":"1. 套接字准备好读的就绪条件第一条，为啥是通过非阻塞套接字进行write操作，直接返回；不应该是阻塞套接字么？<br>2. 套接字准备好读的就绪条件第三条，为啥是通过write读操作啊","like_count":0,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":485249,"discussion_content":"你误解了，这里没有说是阻塞或非阻塞套集字，而是说套接字准备好读，是可以通过read来完成；套接字准备好可以写，是可以通过write操作来完成。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1583052590,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":163081,"user_name":"zhang","can_delete":false,"product_type":"c1","uid":1256330,"ip_address":"","ucode":"BFA19BED5A5322","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/PiajxSqBRaEIRm3kWsgiaEXjO0rr0Aiav7o89StFTFSXbLTkEmiaibmnw8EQTejibrtzKla0emibePT0R0KXjFRIpfXrQ/132","comment_is_top":false,"comment_ctime":1576654165,"is_pvip":false,"replies":[{"id":"63911","content":"我刚刚回答了。这个时候需要使用管道或者socketpair来做。","user_name":"作者回复","user_name_real":"froghui","uid":"1618647","ctime":1577604561,"ip_address":"","comment_id":163081,"utype":1}],"discussion_count":3,"race_medal":0,"score":"1576654165","product_id":100032701,"comment_content":"问一个关于writefds的问题。有两个线程，以及一块要发送的内存buffer。第一个线程是创建了socket，设置为none blocking，并在select监听，代码类似select(max_fd+1, &amp;read_fds, &amp;write_fds, NULL, NULL)，在监听到writefds中if(FD_ISSET(client.sd, &amp;write_fds))，从内存buffer中取出数据发送出去。第二个线程写入了一些字节到内存buffer，但怎么唤醒第一个线程还处于阻塞的select？<br>我试验第二个线程写入字节到内存buffer后调用FD_ZERO(&amp;write_fds);FD_SET(client.sd, &amp;write_fds);。第一个线程的if(FD_ISSET(client.sd, &amp;write_fds)) { processSendRingBuf(); FD_ZERO(&amp;write_fds); }。但并没有唤醒select。","like_count":0,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":478241,"discussion_content":"我刚刚回答了。这个时候需要使用管道或者socketpair来做。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577604561,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1256330,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/PiajxSqBRaEIRm3kWsgiaEXjO0rr0Aiav7o89StFTFSXbLTkEmiaibmnw8EQTejibrtzKla0emibePT0R0KXjFRIpfXrQ/132","nickname":"zhang","note":"","ucode":"BFA19BED5A5322","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":88885,"discussion_content":"我看github代码，发现您是使用的sockerpair做的，应该和eventfd一样吧？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1576737296,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1256330,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/PiajxSqBRaEIRm3kWsgiaEXjO0rr0Aiav7o89StFTFSXbLTkEmiaibmnw8EQTejibrtzKla0emibePT0R0KXjFRIpfXrQ/132","nickname":"zhang","note":"","ucode":"BFA19BED5A5322","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":88884,"discussion_content":"是否可以用eventfd来做，创建的wake_fd添加到select的readfds中。第二个线程写入buffer后，write这个wake_fd，这样第一个线程select就会被readfds的wake_fd事件唤醒，之后接着检查有writefds事件就从buffer取出数据发送。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1576737222,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":152601,"user_name":"zmysang","can_delete":false,"product_type":"c1","uid":1642663,"ip_address":"","ucode":"8A98057E7819DD","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/tjhOILHBAmlx6YiaTZJzqzxn1uyB6XpdvGDIZhBn127TYEcoLLzxRiaKvtVd3HllQqPx7cqf2YmibyBUgGGGJPDkw/132","comment_is_top":false,"comment_ctime":1574048366,"is_pvip":false,"replies":[{"id":"59324","content":"是的。","user_name":"作者回复","user_name_real":"froghui","uid":"1618647","ctime":1574497753,"ip_address":"","comment_id":152601,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1574048366","product_id":100032701,"comment_content":"为什么描述字集合{0,1,4}，对应的 maxfd 是 5，而不是 4，就比较方便了。因为这个向量对应的是下面这样的：a[4],a[3],a[2],a[1],a[0]，待测试的描述符个数显然是 5。<br>请问老师这里的意思是假设待检测的描述字集合是{0，100}，那么实际上select函数会判断0-100这101个fd中值为1的fd,然后对其检测吗？","like_count":0,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":474872,"discussion_content":"是的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574497753,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":144702,"user_name":"GeekAmI","can_delete":false,"product_type":"c1","uid":1005030,"ip_address":"","ucode":"232C0B6DFB9F56","user_header":"https://static001.geekbang.org/account/avatar/00/0f/55/e6/87197b10.jpg","comment_is_top":false,"comment_ctime":1572001202,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1572001202","product_id":100032701,"comment_content":"问题2：没有看过源码，猜测应该有循环挂载描述符对应事件的过程。如果不传的话，可能只能按照最大的循环了(1024)，作为系统函数，执行效率需要优化到极致...","like_count":0},{"had_liked":false,"id":136909,"user_name":"多襄丸","can_delete":false,"product_type":"c1","uid":1074310,"ip_address":"","ucode":"1AA1497C5A293C","user_header":"https://static001.geekbang.org/account/avatar/00/10/64/86/f5a9403a.jpg","comment_is_top":false,"comment_ctime":1569551837,"is_pvip":false,"replies":[{"id":"52783","content":"是的，应该是a[0]=0,a[1]=0，全部置为0.","user_name":"作者回复","user_name_real":"froghui","uid":"1618647","ctime":1569724653,"ip_address":"","comment_id":136909,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1569551837","product_id":100032701,"comment_content":"老师 我问两个基础问题啊:<br><br>1. 实际上，很多系统是用一个整型数组来表示一个描述字集合的，一个 32 位的整型数可以表示 32 个描述字，例如第一个整型数表示 0-31 描述字，第二个整型数可以表示 32-63 描述字，以此类推。<br><br>意思是: int num;<br>              int arr[num];<br>              arr[0] 表示0～31描述字<br>              arr[1] 表示32～63描数字<br>              ……<br>             arr[num-1] 表示 nun-1*32 ~ num-1*32 + 1描述字 <br>这样吗？<br><br>2. 这个时候再来理解为什么描述字集合{0,1,4}，对应的 maxfd 是 5，而不是 4，就比较方便了。<br><br>因为这个向量对应的是下面这样的：<br><br>\t<br>a[4],a[3],a[2],a[1],a[0]<br>复制代码<br><br>待测试的描述符个数显然是 5， 而不是 4。<br><br>三个描述符集合中的每一个都可以设置成空，这样就表示不需要内核进行相关的检测。<br><br>这里的意思是 a[0] = NULL a[1] = NULL a[4] = NULL <br>是这个意思吗？<br><br>","like_count":0,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":468857,"discussion_content":"是的，应该是a[0]=0,a[1]=0，全部置为0.","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1569724653,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":135949,"user_name":"传说中的成大大","can_delete":false,"product_type":"c1","uid":1236766,"ip_address":"","ucode":"103543D6E706BF","user_header":"https://static001.geekbang.org/account/avatar/00/12/df/1e/cea897e8.jpg","comment_is_top":false,"comment_ctime":1569312697,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1569312697","product_id":100032701,"comment_content":"第一问 我记得管道是写了以后必须要等待对方读走才可以继续进行写操作,所以可以用select进行检测的<br>第二问 要从怎么存储描述符集合当做的描述符来理解, 利用数组下标随机访问的特性,来提高运行效率,毕竟是内核运行的","like_count":0},{"had_liked":false,"id":135739,"user_name":"Better me","can_delete":false,"product_type":"c1","uid":1261959,"ip_address":"","ucode":"CADF08D357489A","user_header":"https://static001.geekbang.org/account/avatar/00/13/41/87/46d7e1c2.jpg","comment_is_top":false,"comment_ctime":1569250385,"is_pvip":true,"replies":[{"id":"52321","content":"maxfd表示的是&quot;个数&quot;，比如这里{0,1,4}，它对应的个数应用是5。就像一个大小为5的数组，每个数组元素的下标分别是{0,1,2,3,4}，数组的&quot;个数&quot;是4+1=5。","user_name":"作者回复","user_name_real":"froghui","uid":"1618647","ctime":1569463597,"ip_address":"","comment_id":135739,"utype":1}],"discussion_count":3,"race_medal":0,"score":"1569250385","product_id":100032701,"comment_content":"比如现在的 select 待测试的描述符集合是{0,1,4}，那么 maxfd 就是 5。这个不太懂，老师能在解释下吗","like_count":0,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":468320,"discussion_content":"maxfd表示的是&amp;quot;个数&amp;quot;，比如这里{0,1,4}，它对应的个数应用是5。就像一个大小为5的数组，每个数组元素的下标分别是{0,1,2,3,4}，数组的&amp;quot;个数&amp;quot;是4+1=5。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1569463597,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1081922,"avatar":"https://static001.geekbang.org/account/avatar/00/10/82/42/8b04d489.jpg","nickname":"刘丹","note":"","ucode":"66594D1C957E15","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":20297,"discussion_content":"最大值+1, 也就是4+1=5","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1569299945,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1261959,"avatar":"https://static001.geekbang.org/account/avatar/00/13/41/87/46d7e1c2.jpg","nickname":"Better me","note":"","ucode":"CADF08D357489A","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1081922,"avatar":"https://static001.geekbang.org/account/avatar/00/10/82/42/8b04d489.jpg","nickname":"刘丹","note":"","ucode":"66594D1C957E15","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":20305,"discussion_content":"嗯了解了，这里是多个描述符集合轮询处理吗","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1569300381,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":20297,"ip_address":""},"score":20305,"extra":""}]}]},{"had_liked":false,"id":135495,"user_name":"Linuxer","can_delete":false,"product_type":"c1","uid":1153978,"ip_address":"","ucode":"272D9D8089C3D6","user_header":"https://static001.geekbang.org/account/avatar/00/11/9b/ba/333b59e5.jpg","comment_is_top":false,"comment_ctime":1569198581,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"1569198581","product_id":100032701,"comment_content":"第二题是为了减少检测的范围吧","like_count":0,"discussions":[{"author":{"id":2123892,"avatar":"https://static001.geekbang.org/account/avatar/00/20/68/74/aea478ba.jpg","nickname":"我是管小亮","note":"","ucode":"A1C624CF9E1CA3","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":299394,"discussion_content":"对的，只遍历基数个数即可，不然要遍历整个文件描述符","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1597672910,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1200181,"avatar":"https://static001.geekbang.org/account/avatar/00/12/50/35/079d04c8.jpg","nickname":"向东","note":"","ucode":"9F621FBF115620","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":19880,"discussion_content":"假如是最大描述符集是1024，大概看作一个二维数组：\nfdset[32][32]\n\nfdset[32][32]={0,1,2,......31},{32,33,......63}......{ 992,993......,1023}\n描述符最大值是和系统设置有关\n“描述字集”的整数数组的整数和“描述字”（注意一个有“集”，一个没有）的值是不同的，不要把搞混了，“描述字集”的整数数组的一个整数，代表了32个&#34;描述字&#34;，只需关心是0或者1，不需要关心具体的值。我还是没明白，求老师讲强一下这块1024这块，谢谢🙏","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1569233836,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]}]}