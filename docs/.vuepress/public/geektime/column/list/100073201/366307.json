{"id":366307,"title":"21 | 数据备份：异常情况下，如何确保数据安全？","content":"<p>你好，我是朱晓峰。今天，我来和你聊一聊数据备份。</p><p>数据备份，对咱们技术人员来说十分重要。当成千上万的用户，每天使用我们开发的应用做着他们的日常工作的时候，数据的安全性就不光是你一个人的事了。要是有一天，突然发生了某种意想不到的情况，导致数据库服务器上的数据全部丢失，所有使用这个应用的人都会受到严重影响。</p><p>所以，我们必须“未雨绸缪”，及时把数据备份到安全的地方。这样，当突发的异常来临时，我们就能把数据及时恢复回来，就不会造成太大损失。</p><p>MySQL的数据备份有2种，一种是物理备份，通过把数据文件复制出来，达到备份的目的；另外一种是逻辑备份，通过把描述数据库结构和内容的信息保存起来，达到备份的目的。逻辑备份这种方式是免费的，广泛得到使用；而物理备份的方式需要收费，用得比较少。所以，这节课我重点和你聊聊逻辑备份。</p><p>我还会给你介绍一下MySQL中的数据备份工具mysqldump、数据恢复的命令行客户端工具mysql，以及数据表中数据导出到文件和从文件导入的SQL语句，帮助你提高你所开发的应用中的数据安全性。</p><h2>如何进行数据备份？</h2><p>首先，我们来学习下用于数据备份的工具mysqldump。它总共有三种模式：</p><ol>\n<li>备份数据库中的表；</li>\n<li>备份整个数据库；</li>\n<li>备份整个数据库服务器。</li>\n</ol><!-- [[[read_end]]] --><p>接下来，我就来介绍下这3种备份的具体方法。</p><h3>如何备份数据库中的表？</h3><p>mysqldump备份数据库中的表的语法结构是：</p><pre><code>mysqldump -h 服务器 -u 用户 -p 密码 数据库名称 [表名称 … ] &gt; 备份文件名称\n</code></pre><p>我简单解释一下这里的核心内容。</p><ul>\n<li>“-h”后面跟的服务器名称，如果省略，默认是本机“localhost”。</li>\n<li>“-u”后面跟的是用户名。</li>\n<li>“-p”后面跟的是密码，如果省略，执行的时候系统会提示录入密码。</li>\n</ul><p>我举个小例子，带你看看怎么使用这个工具。</p><p>假设数据库demo中有2个表，分别是商品信息表（demo.goodsmaster）和会员表（demo.membermaster）。</p><p>商品信息表：</p><p><img src=\"https://static001.geekbang.org/resource/image/9c/45/9cd746385988ee32d8813ffbb12ed645.jpeg?wh=1373*637\" alt=\"\"></p><p>会员表：</p><p><img src=\"https://static001.geekbang.org/resource/image/bd/87/bd0e205b0893773944275861ae9b6e87.jpeg?wh=1881*627\" alt=\"\"></p><p>现在，我需要把数据库demo备份到文件中，就可以用下面的代码实现：</p><pre><code>H:\\&gt;mysqldump -u root -p demo goodsmaster membermaster &gt; test.sql\nEnter password: *****\n</code></pre><p>这个指令的意思，就是备份本机数据库服务器上demo数据库中的商品信息表和会员信息表的所有信息。</p><p><strong>备份文件是以文本格式保存的</strong>，我们可以用记事本打开，看一下备份的内容：</p><pre><code>-- MySQL dump 10.13 Distrib 8.0.23, for Win64 (x86_64)\n--\n-- Host: localhost Database: demo -- 表示从本地进行备份，数据库是demo\n-- ------------------------------------------------------\n-- Server version 8.0.23\n \n/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;\n/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;\n/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;\n/*!50503 SET NAMES utf8mb4 */;\n/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;\n/*!40103 SET TIME_ZONE='+00:00' */;\n/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;\n/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;\n/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;\n/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;\n \n--\n-- Table structure for table `goodsmaster` -- 商品信息表的结构\n--\n \nDROP TABLE IF EXISTS `goodsmaster`;\n/*!40101 SET @saved_cs_client = @@character_set_client */;\n/*!50503 SET character_set_client = utf8mb4 */;\nCREATE TABLE `goodsmaster` (\n`itemnumber` int NOT NULL,\n`barcode` text,\n`goodsname` text,\n`specification` text,\n`unit` text,\n`salesprice` decimal(10,2) DEFAULT NULL,\nPRIMARY KEY (`itemnumber`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;\n/*!40101 SET character_set_client = @saved_cs_client */;\n \n--\n-- Dumping data for table `goodsmaster` -- 商品信息表的内容\n--\n \nLOCK TABLES `goodsmaster` WRITE;\n/*!40000 ALTER TABLE `goodsmaster` DISABLE KEYS */;\nINSERT INTO `goodsmaster` VALUES (1,'0001','书','16开','本',89.00),(2,'0002','笔','10支装','包',5.00),(3,'0003','橡皮',NULL,'个',3.00);\n/*!40000 ALTER TABLE `goodsmaster` ENABLE KEYS */;\nUNLOCK TABLES;\n \n--\n-- Table structure for table `membermaster` -- 会员表的结构\n--\n \nDROP TABLE IF EXISTS `membermaster`;\n/*!40101 SET @saved_cs_client = @@character_set_client */;\n/*!50503 SET character_set_client = utf8mb4 */;\nCREATE TABLE `membermaster` (\n`id` int NOT NULL AUTO_INCREMENT,\n`cardno` char(8) NOT NULL,\n`membername` text,\n`memberphone` text,\n`memberpid` text,\n`memberaddress` text,\n`sex` text,\n`birthday` datetime DEFAULT NULL,\nPRIMARY KEY (`id`)\n) ENGINE=InnoDB AUTO_INCREMENT=4 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;\n/*!40101 SET character_set_client = @saved_cs_client */;\n \n--\n-- Dumping data for table `membermaster` -- 会员表的内容\n--\n \nLOCK TABLES `membermaster` WRITE;\n/*!40000 ALTER TABLE `membermaster` DISABLE KEYS */;\nINSERT INTO `membermaster` VALUES ('10000001','张三','13812345678','110123200001017890','北京','男','2000-01-01 00:00:00',1),('10000002','李四','13512345678','123123199001012356','上海','女','1990-01-01 00:00:00',2);\n/*!40000 ALTER TABLE `membermaster` ENABLE KEYS */;\nUNLOCK TABLES;\n/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;\n \n/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;\n/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;\n/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;\n/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;\n/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;\n/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;\n/*!40111 SET SQL_NOTES=@OLD_SQL_NOTES */;\n \n-- Dump completed on 2021-04-11 10:43:04\n</code></pre><p>从这个文件中，我们可以看到，它相当于一个SQL执行脚本，里面包括了创建商品信息表和会员表的SQL语句，以及把表里的数据插入到这两个表中的SQL语句。这样一来，商品信息表和会员信息表的结构信息和全部数据信息就都备份出来了。</p><p>下面我来介绍一下备份整个数据库的方法。</p><h3>如何备份数据库？</h3><p>mysqldump备份数据库的语法结构是：</p><pre><code>mysqldump -h 服务器 -u 用户 -p 密码 --databases 数据库名称 … &gt; 备份文件名\n</code></pre><p>举个小例子，假设我现在需要对本机的数据库服务器中的2个数据库demo和demo1进行备份，就可以用下面的指令：</p><pre><code>H:\\&gt;mysqldump -u root -p --databases demo demo1 &gt; test1.sql\nEnter password: *****\n</code></pre><p>现在，我们来查看一下备份文件的内容：</p><pre><code>-- MySQL dump 10.13 Distrib 8.0.23, for Win64 (x86_64)\n--\n-- Host: localhost Database: demo\n-- ------------------------------------------------------\n-- Server version 8.0.23\n \n/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;\n/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;\n/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;\n/*!50503 SET NAMES utf8mb4 */;\n/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;\n/*!40103 SET TIME_ZONE='+00:00' */;\n/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;\n/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;\n/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;\n/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;\n \n--\n-- Current Database: `demo` -- 备份数据库demo\n--\n \nCREATE DATABASE /*!32312 IF NOT EXISTS*/ `demo` /*!40100 DEFAULT CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci */ /*!80016 DEFAULT ENCRYPTION='N' */;\n \nUSE `demo`; -- 备份数据库中的表\n \n--\n-- Table structure for table `dailystatistics`\n--\n \nDROP TABLE IF EXISTS `dailystatistics`;\n/*!40101 SET @saved_cs_client = @@character_set_client */;\n/*!50503 SET character_set_client = utf8mb4 */;\nCREATE TABLE `dailystatistics` (\n`id` int NOT NULL AUTO_INCREMENT,\n`itemnumber` int DEFAULT NULL,\n`quantity` decimal(10,3) DEFAULT NULL,\n`actualvalue` decimal(10,2) DEFAULT NULL,\n`cost` decimal(10,2) DEFAULT NULL,\n`profit` decimal(10,2) DEFAULT NULL,\n`profitratio` decimal(10,4) DEFAULT NULL,\n`salesdate` datetime DEFAULT NULL,\nPRIMARY KEY (`id`),\nKEY `index_dailystatistic_salesdate` (`salesdate`),\nKEY `index_dailystatistic_itemnumber` (`itemnumber`)\n) ENGINE=InnoDB AUTO_INCREMENT=17 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;\n/*!40101 SET character_set_client = @saved_cs_client */;\n \n--\n-- Dumping data for table `dailystatistics`\n--\n \nLOCK TABLES `dailystatistics` WRITE;\n/*!40000 ALTER TABLE `dailystatistics` DISABLE KEYS */;\nINSERT INTO `dailystatistics` VALUES (15,1,3.000,267.00,100.50,166.50,0.6236,'2020-12-01 00:00:00'),(16,2,2.000,10.00,7.00,3.00,0.3000,'2020-12-01 00:00:00');\n/*!40000 ALTER TABLE `dailystatistics` ENABLE KEYS */;\nUNLOCK TABLES;\n \n-- 这里省略了其他表的备份语句\n--\n-- Current Database: `demo1` -- 备份数据库demo1\n--\n \nCREATE DATABASE /*!32312 IF NOT EXISTS*/ `demo1` /*!40100 DEFAULT CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci */ /*!80016 DEFAULT ENCRYPTION='N' */;\n \nUSE `demo1`;\n/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;\n \n/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;\n/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;\n/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;\n/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;\n/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;\n/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;\n/*!40111 SET SQL_NOTES=@OLD_SQL_NOTES */;\n \n-- Dump completed on 2021-04-11 11:02:09\n</code></pre><p>可以看到，这个文件里面包含了创建数据库demo和demo1的SQL语句，以及创建数据库中所有表、插入所有表中原有数据的SQL语句。</p><h3>如何备份整个数据库服务器？</h3><p>mysqldump备份整个数据库服务器的语法结构是：</p><pre><code>mysqldump -h 服务器 -u 用户 -p 密码 --all-databases &gt; 备份文件名\n</code></pre><p>举个小例子，假设我要把本机上整个MySQL服务器备份下来，可以用下面的代码：</p><pre><code>H:\\&gt;mysqldump -u root -p --all-databases &gt; test2.sql\nEnter password: *****\n</code></pre><p>这个指令表示，备份本机上运行的MySQL数据库服务器的全部内容，包含系统数据库和用户创建的数据库中的库结构信息、表结构信息和表里的数据。这种备份方式会把系统数据库也全部备份出来，而且消耗的资源也比较多，一般来说没有必要，我就不展开细说了。</p><p>备份文件有了，如何用它进行数据恢复呢？下面我就来给你介绍下具体的方法。</p><h2>如何进行数据恢复？</h2><p>mysqldump的备份文件包含了创建数据库、数据表，以及插入数据表里原有数据的SQL语句，我们可以直接运行这些SQL语句，来进行数据恢复。</p><p>数据恢复的方法主要有2种：</p><ul>\n<li>使用“mysql”命令行客户端工具进行数据恢复；</li>\n<li>使用“SOURCE”语句进行数据恢复。</li>\n</ul><p>使用“mysql”命令行客户端工具，进行数据恢复的命令如下：</p><pre><code>H:\\&gt;mysql -u root -p demo &lt; test.sql\nEnter password: *****\n</code></pre><p>我来简单介绍下这个数据恢复命令。</p><ul>\n<li>mysql是一个命令行客户端工具，可以与MySQL服务器之间进行连接，执行SQL语句。</li>\n<li>“-u”后面跟的是用户。</li>\n<li>“-p”后面跟的是密码。</li>\n</ul><p>在这个命令里面，我指定了数据库，因为备份文件test.sql里面只有数据表的备份信息，需要指定恢复到哪个数据库中。如果使用的备份文件备份的是数据库的信息（比如test1.sql），或者是整个MySQL数据库服务器的信息（比如test2.sql），则不需要指定数据库。</p><p>第二种数据恢复的方法是，使用“SOURCE”语句恢复数据，语法结构如下：</p><pre><code>SOURCE 备份文件名\n</code></pre><p>举个小例子，刚才我们对商品信息表和会员信息表进行了备份，现在想用备份的文件进行恢复，就可以用下面的语句：</p><pre><code>mysql&gt; USE demo;\nDatabase changed\nmysql&gt; SOURCE H:\\\\test.sql\nQuery OK, 0 rows affected (0.00 sec)\n</code></pre><p>注意，这里需要先用“USE”语句把当前的数据库变更为demo，这样商品信息表和会员表才能恢复到正确的数据库里面。否则，可能会恢复错误。</p><p>除此之外，你还可以通过这种方式，用整个数据库的备份文件把数据库恢复回来，甚至是用整个数据库服务器的备份文件，恢复整个MySQL服务器。</p><p>到这里，我们就掌握了备份和恢复整个数据库服务器、数据库和数据库中的表的方法。不过，有的时候，我们只关心表里的数据本身，希望能够把表里的数据，按照一定的格式保存下来。这个时候，mysqldump就不够用了。所以，接下来我再给你介绍下MySQL数据导出和导入的方法。</p><h2>如何导出和导入表里的数据？</h2><p>先来学习下怎么把一个表的数据按照一定的格式，导出成一个文件。</p><h3>SELECT语句导出数据</h3><p>使用“SELECT … INTO OUTFILE”语句导出数据表的语法结构是：</p><pre><code>SELECT 字段列表 INTO OUTFILE 文件名称\nFIELDS TERMINATED BY 字符\nLINES TERMINATED BY 字符\nFROM 表名;\n</code></pre><p>我来解释下这段代码。</p><ul>\n<li>INTO OUTFILE 文件名称，表示查询的结果保存到文件名称指定的文件中；</li>\n<li>FIELDS TERMINATED BY 字符，表示列之间的分隔符是“字符”；</li>\n<li>LINES TERMINATED BY 字符，表示行之间的分隔符是“字符”。</li>\n</ul><p>举个小例子，假设我们要把商品信息表导出到文件H:\\goodsmaster.txt中，该如何实现呢？按照我刚刚介绍的语法结构来尝试一下：</p><pre><code>mysql&gt; SELECT * INTO OUTFILE 'H:\\goodsmaster.txt'\n-&gt; FIELDS TERMINATED BY ','\n-&gt; LINES TERMINATED BY '\\n'\n-&gt; FROM demo.goodsmaster;\nERROR 1290 (HY000): The MySQL server is running with the --secure-file-priv option so it cannot execute this statement\n</code></pre><p>结果，系统提示错误。其实，这是因为<strong>服务器的“secure-file-priv”参数选项，不允许把文件写入到H:\\goodsmaster.txt中</strong>。那怎么解决这个问题呢？</p><p>这个时候，我们可以通过MySQL的配置文件my.ini，来查看一下“secure-file-priv”参数的设定，并且按照这个参数设定的要求准备导入文件。</p><p>打开C:\\ProgramData\\MySQL\\MySQL Server 8.0\\my.ini，找到“secure-file-priv”参数设定，如下所示：</p><pre><code># Secure File Priv.\nsecure-file-priv=&quot;C:/ProgramData/MySQL/MySQL Server 8.0/Uploads&quot;\n</code></pre><p>这个意思是说，只能把数据导出到“C:/ProgramData/MySQL/MySQL Server 8.0/Uploads”这个文件夹中，所以，如果我们把数据导出到H:\\goodsmaster.txt中，就违反了系统参数的设定，导致发生错误。</p><p>现在，我们来修改一下数据导出的SQL语句，把导出文件的路径改到系统要求的文件目录，看看结果如何：</p><pre><code>mysql&gt; SELECT * INTO OUTFILE 'C:/ProgramData/MySQL/MySQL Server 8.0/Uploads/goodsmaster.txt'\n-&gt; FIELDS TERMINATED BY ','\n-&gt; LINES TERMINATED BY '\\n'\n-&gt; FROM demo.goodsmaster;\nQuery OK, 3 rows affected (0.00 sec)\n</code></pre><p>结果显示，执行成功了。下面我们来看一下结果文件的内容：</p><pre><code>1,0001,书,16开,本,89.00\n2,0002,笔,10支装,包,5.00\n3,0003,橡皮,\\N,个,3.00\n</code></pre><p>很显然，这很符合我们希望的导出格式：行与行之间用回车“\\n”分隔，列与列之间用逗号“,”分隔。</p><p>到这里，我们就知道怎么把数据表中的数据按照一定的格式导出到文件了。那在实际工作中，我们还经常需要把一定格式的数据从文件中导入到数据表中。</p><p>“LOAD DATA”语句，就是MySQL提供的一种快速数据读入的方法，在实际工作中常用于大量数据的导入，效率极高。</p><h3>使用“LOAD DATA”语句导入数据</h3><p>“LOAD DATA”是与“SELECT … INTO OUTFILE”相对应的数据导入语句。语句结构是：</p><pre><code>LOAD DATA INFILE 文件名\nINTO TABLE 表名\nFIELDS TERMINATED BY 字符\nLINES TERMINATED BY 字符;\n</code></pre><p>我举个小例子来演示一下“LOAD DATA”语句是如何工作的。</p><p>还是以我们刚才导出的那个文件goodsmaster.txt为例，现在我们把这个文件内的数据导入到商品信息表（demo.goodsmaster）中去。</p><p>为了演示方便，我会先把demo.goodsmaster中的数据先删除，然后使用“LOAD DATA”语句，把刚才的导出文件goodsmaster.txt的内容导入进来，再与删除之前的数据进行对比，来验证“LOAD DATA”语句的执行效果。</p><p>首先，我们把商品信息表中的数据删除：</p><pre><code>mysql&gt; DELETE FROM demo.goodsmaster\n-&gt; WHERE itemnumber&gt;0;\nQuery OK, 3 rows affected (0.03 sec) \n</code></pre><p>然后，我们尝试把文件goodsmaster.txt中的数据导入进来：</p><pre><code>mysql&gt; LOAD DATA INFILE 'C:/ProgramData/MySQL/MySQL Server 8.0/Uploads/goodsmaster.txt'\n-&gt; INTO TABLE demo.goodsmaster\n-&gt; FIELDS TERMINATED BY ','\n-&gt; LINES TERMINATED BY '\\n';\nQuery OK, 3 rows affected (0.02 sec)\nRecords: 3 Deleted: 0 Skipped: 0 Warnings: 0\n</code></pre><p>结果显示，导入成功了。我们再查看一下数据表中的内容：</p><pre><code>mysql&gt; SELECT * FROM demo.goodsmaster;\n+------------+---------+-----------+---------------+------+------------+\n| itemnumber | barcode | goodsname | specification | unit | salesprice |\n+------------+---------+-----------+---------------+------+------------+\n| 1 | 0001 | 书 | 16开 | 本 | 89.00 |\n| 2 | 0002 | 笔 | 10支装 | 包 | 5.00 |\n| 3 | 0003 | 橡皮 | NULL | 个 | 3.00 |\n+------------+---------+-----------+---------------+------+------------+\n3 rows in set (0.00 sec)\n</code></pre><p>结果显示，与我们删除之前的数据完全一致。这说明，“LOAD DATA”语句成功导入了数据文件goodsmaster.txt中的数据。</p><h2>总结</h2><p>今天，我们重点学习了数据备份，包括数据备份的工具mysqldump，以及用命令行客户端工具“mysql”和SQL语句“SOURCE”进行数据恢复的方法。同时，我还给你介绍了用于导出数据表中数据的语句“SELECT … INTO OUTFILE”和导入的语句“LOAD DATA”。这些都是你在备份数据时必不可少的，对确保数据的安全性至关重要。</p><p>最后提醒你一点，“LOAD DATA”是很好用的工具，因为它的数据导入速度是非常惊人的。一个400万条数据的文件，用“LOAD DATA”语句，只需要几分钟就可以完成，而其他的方法，比如使用Workbench来导入数据，就需要花费好几个小时。</p><h2>思考题</h2><p>这节课，我介绍了数据导出语句“SELECT … INTO OUTFILE”，并且在第一次数据导出时遇到了一个系统参数“secure-file-priv”设定的目录与导出文件目录不一致，从而导致导出失败的问题。最后，我通过修改导出文件的文件夹，解决了这个问题。</p><p>我想请你思考一下，如果还是想把导出文件保存到H:\\目录下，有没有办法实现呢？</p><p>欢迎在留言区写下你的思考和答案，我们一起交流讨论。如果你觉得今天的内容对你有所帮助，也欢迎你分享给你的朋友或同事，我们下节课见。</p>","neighbors":{"left":{"article_title":"20 | 日志（下）：系统故障，如何恢复数据？","id":366296},"right":{"article_title":"22 | 范式：如何消除冗余，实现高效存取？","id":367615}},"comments":[{"had_liked":false,"id":293652,"user_name":"朱晓峰","can_delete":false,"product_type":"c1","uid":2356905,"ip_address":"","ucode":"D2F84F44329C29","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLZKoB7sooIiaCHqcdNGI97WI3ZJLJph4mibIiat1qRvrBmkicZTEYvyT5iax1vlLFFgk2xgUibmnWvkicWA/132","comment_is_top":true,"comment_ctime":1621478835,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"9.2233720384763003e+18","product_id":100073201,"comment_content":"你好，我是朱晓峰，下面我就来公布一下上节课思考题的答案：<br><br>上节课，我们学习了日志（下）。下面是思考题的答案：<br><br>这段二进制日志包括了2个SQL操作，第一个是从数据表demo.goodsmaster中删除一条记录，第二个是向数据表demo.goodsmaster中插入一条记录。起始位置：627，截止位置：1125 <br>","like_count":0},{"had_liked":false,"id":334252,"user_name":"SharpBB","can_delete":false,"product_type":"c1","uid":2014573,"ip_address":"","ucode":"D30C5B798B8E8C","user_header":"https://static001.geekbang.org/account/avatar/00/1e/bd/6d/7010f98e.jpg","comment_is_top":false,"comment_ctime":1644828302,"is_pvip":true,"replies":[{"id":"123498","content":"好的","user_name":"作者回复","user_name_real":"编辑","uid":"2356905","ctime":1647075723,"ip_address":"","comment_id":334252,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10234762894","product_id":100073201,"comment_content":"1.三种模式的数据备份<br>\t备份数据库中的表<br>\t\tmysqldump -h 服务器 -u 用户 -p 数据库名称 表1,表2 &gt; 备份文件名称<br>\t备份数据库<br>\t\tmysqldump -h 服务器 -u 用户 -p --databases 数据库名称 &gt; 备份文件名<br>\t\t其实就是将里面的库表都创建了<br>\t备份整个数据库服务器<br>\t\tmysqldump -h 服务器 -u 用户 -p  --all-databases &gt; 备份文件名<br>\t\t一般来讲没有必要<br>2.数据恢复<br>\t使用mysql命令<br>\t\tmysql -u root -p demo &lt; test.sql<br>\t\t\t如果备份的是数据库 那么就不需要加demo<br>\t使用source命令<br>\t\tSOURCE &#47;home&#47;demo.sql<br>\t\t\t后面跟的是linux下的备份文件地址<br>\t\t\t如果是恢复数据表 则先用 use demo;<br>3.数据导出导入<br>\t导出<br>\t\tselect * into outfile &#39;&#47;home&#47;user.txt&#39; <br>fields terminated by &#39;,&#39; <br>lines terminated by &#39;\\n&#39; from demo.user;<br>\t\t\t先查找linux下my.cnf文件位置  mysql --help | grep &#39;my.cnf&#39;<br>\t\t\t配置文件里设置 secure-file-priv=&#39;&#47;home&#39;<br>\t\t\t再将home的权限设置为 chomd 777 否则权限会受阻<br>\t导入<br>\t\tload data infile &#39;&#47;home&#47;user.txt&#39; into table user <br>fields terminated by &#39;,&#39; lines terminated by &#39;\\n&#39;;<br>\t\t\t注意要加绝对路径<br>\t\t\tload data是效率非常高 推荐使用！","like_count":3,"discussions":[{"author":{"id":2356905,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLZKoB7sooIiaCHqcdNGI97WI3ZJLJph4mibIiat1qRvrBmkicZTEYvyT5iax1vlLFFgk2xgUibmnWvkicWA/132","nickname":"朱晓峰","note":"","ucode":"D2F84F44329C29","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":555812,"discussion_content":"好的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1647075723,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":290394,"user_name":"lesserror","can_delete":false,"product_type":"c1","uid":1351076,"ip_address":"","ucode":"25A54D1165FCF6","user_header":"https://static001.geekbang.org/account/avatar/00/14/9d/a4/e481ae48.jpg","comment_is_top":false,"comment_ctime":1619524986,"is_pvip":false,"replies":[{"id":"106478","content":"是的","user_name":"作者回复","user_name_real":"朱晓峰","uid":"2356905","ctime":1621561733,"ip_address":"","comment_id":290394,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5914492282","product_id":100073201,"comment_content":"敲黑板了，几百万数据使用 LOAD DATA  命令回复只需几分钟，可以说是属于黑科技了，长见识了。<br><br>课程中讲到的命令，公司运维经常使用。今天跟着敲了一遍，加深了印象。<br><br>无论什么规模的项目，一定要学会数据的及时、准确的备份，数据就是公司最重要的财产。","like_count":2,"discussions":[{"author":{"id":2356905,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLZKoB7sooIiaCHqcdNGI97WI3ZJLJph4mibIiat1qRvrBmkicZTEYvyT5iax1vlLFFgk2xgUibmnWvkicWA/132","nickname":"朱晓峰","note":"","ucode":"D2F84F44329C29","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":519193,"discussion_content":"是的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1621561733,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":334253,"user_name":"SharpBB","can_delete":false,"product_type":"c1","uid":2014573,"ip_address":"","ucode":"D30C5B798B8E8C","user_header":"https://static001.geekbang.org/account/avatar/00/1e/bd/6d/7010f98e.jpg","comment_is_top":false,"comment_ctime":1644828816,"is_pvip":true,"replies":[{"id":"123497","content":"不建议用docker创建MySQL","user_name":"作者回复","user_name_real":"编辑","uid":"2356905","ctime":1647075708,"ip_address":"","comment_id":334253,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1644828816","product_id":100073201,"comment_content":"老师  问一个问题 我用root账户登录 在用docker创建mysql  进入容器内操作mysql 导出文件 但是发现没有权限 随即将权限改成777就可以了 但是这个权限是跟什么有关的呢 为什么不是最高权限？","like_count":0,"discussions":[{"author":{"id":2356905,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLZKoB7sooIiaCHqcdNGI97WI3ZJLJph4mibIiat1qRvrBmkicZTEYvyT5iax1vlLFFgk2xgUibmnWvkicWA/132","nickname":"朱晓峰","note":"","ucode":"D2F84F44329C29","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":555811,"discussion_content":"不建议用docker创建MySQL","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1647075708,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":295858,"user_name":"Hale","can_delete":false,"product_type":"c1","uid":1129731,"ip_address":"","ucode":"1925955343FE94","user_header":"https://static001.geekbang.org/account/avatar/00/11/3d/03/b2d9a084.jpg","comment_is_top":false,"comment_ctime":1622621749,"is_pvip":true,"replies":[{"id":"109145","content":"还是权限问题，你可以先查看一下MySQL中的系统变量设定，比如：<br>mysql&gt; show variables like &#39;%secure%&#39;;<br>+--------------------------+-----------------------+<br>| Variable_name            | Value                 |<br>+--------------------------+-----------------------+<br>| require_secure_transport | OFF                   |<br>| secure_file_priv         | &#47;var&#47;lib&#47;mysql-files&#47; |<br>+--------------------------+-----------------------+<br>2 rows in set (0.00 sec)<br>这样就知道secure_file_priv的目标文件夹是&#47;var&#47;lib&#47;mysql-files&#47;，然后把导出文件写到这个文件夹中，应该可以执行成功：<br>mysql&gt; select * into outfile &#39;&#47;var&#47;lib&#47;mysql-files&#47;a.txt&#39; from demo.goodsmaster;<br>Query OK, 2 rows affected (0.00 sec)<br>查看一下：<br># cat &#47;var&#47;lib&#47;mysql-files&#47;a.txt<br>1       铅笔<br>2       橡皮<br><br>","user_name":"作者回复","user_name_real":"朱晓峰","uid":"2356905","ctime":1625715894,"ip_address":"","comment_id":295858,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1622621749","product_id":100073201,"comment_content":"ERROR 1 (HY000) at line 1: Can&#39;t create&#47;write to file &#39;&#47;root&#47;a.txt&#39; (Errcode: 13 - Permission denied)<br><br>在linux下试了，a.txt增加了可执行权限，还是报错","like_count":0,"discussions":[{"author":{"id":2356905,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLZKoB7sooIiaCHqcdNGI97WI3ZJLJph4mibIiat1qRvrBmkicZTEYvyT5iax1vlLFFgk2xgUibmnWvkicWA/132","nickname":"朱晓峰","note":"","ucode":"D2F84F44329C29","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":521242,"discussion_content":"还是权限问题，你可以先查看一下MySQL中的系统变量设定，比如：\nmysql&amp;gt; show variables like &amp;#39;%secure%&amp;#39;;\n+--------------------------+-----------------------+\n| Variable_name            | Value                 |\n+--------------------------+-----------------------+\n| require_secure_transport | OFF                   |\n| secure_file_priv         | /var/lib/mysql-files/ |\n+--------------------------+-----------------------+\n2 rows in set (0.00 sec)\n这样就知道secure_file_priv的目标文件夹是/var/lib/mysql-files/，然后把导出文件写到这个文件夹中，应该可以执行成功：\nmysql&amp;gt; select * into outfile &amp;#39;/var/lib/mysql-files/a.txt&amp;#39; from demo.goodsmaster;\nQuery OK, 2 rows affected (0.00 sec)\n查看一下：\n# cat /var/lib/mysql-files/a.txt\n1       铅笔\n2       橡皮\n\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1625715894,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":290317,"user_name":"小明针不戳","can_delete":false,"product_type":"c1","uid":2016188,"ip_address":"","ucode":"64D729196221E2","user_header":"https://static001.geekbang.org/account/avatar/00/1e/c3/bc/77549ce4.jpg","comment_is_top":false,"comment_ctime":1619495335,"is_pvip":true,"replies":[{"id":"106475","content":"请参考思考题答案","user_name":"作者回复","user_name_real":"朱晓峰","uid":"2356905","ctime":1621561610,"ip_address":"","comment_id":290317,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1619495335","product_id":100073201,"comment_content":"可以修改my.ini 文件的secure-file-priv参数,指定为H盘,之后重启数据库","like_count":1,"discussions":[{"author":{"id":2356905,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLZKoB7sooIiaCHqcdNGI97WI3ZJLJph4mibIiat1qRvrBmkicZTEYvyT5iax1vlLFFgk2xgUibmnWvkicWA/132","nickname":"朱晓峰","note":"","ucode":"D2F84F44329C29","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":519171,"discussion_content":"请参考思考题答案","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1621561610,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":290277,"user_name":"giteebravo","can_delete":false,"product_type":"c1","uid":1005290,"ip_address":"","ucode":"C087E8D6B5A98B","user_header":"https://static001.geekbang.org/account/avatar/00/0f/56/ea/32608c44.jpg","comment_is_top":false,"comment_ctime":1619483041,"is_pvip":false,"replies":[{"id":"106474","content":"请参考思考题答案","user_name":"作者回复","user_name_real":"朱晓峰","uid":"2356905","ctime":1621561599,"ip_address":"","comment_id":290277,"utype":1}],"discussion_count":3,"race_medal":1,"score":"1619483041","product_id":100073201,"comment_content":"<br>本节需要掌握两点：<br><br>1. 备份和恢复整个数据库服务器、数据库和数据库中的表的方法。<br>2. MySQL 数据导出和导入的方法。<br><br><br>思考题：<br><br>如果还是想把导出文件保存到 H:\\ 目录下，有没有办法实现呢？<br>------------<br>答：直接修改 “secure-file-priv” 设定的目录。<br>","like_count":0,"discussions":[{"author":{"id":2356905,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLZKoB7sooIiaCHqcdNGI97WI3ZJLJph4mibIiat1qRvrBmkicZTEYvyT5iax1vlLFFgk2xgUibmnWvkicWA/132","nickname":"朱晓峰","note":"","ucode":"D2F84F44329C29","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":519158,"discussion_content":"请参考思考题答案","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1621561599,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1183639,"avatar":"https://static001.geekbang.org/account/avatar/00/12/0f/97/372d8628.jpg","nickname":"星空下","note":"","ucode":"473643B567674A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":370743,"discussion_content":"数据的备份用的多  感觉导入导出很少用的到","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1619523390,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1005290,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/56/ea/32608c44.jpg","nickname":"giteebravo","note":"","ucode":"C087E8D6B5A98B","race_medal":1,"user_type":1,"is_pvip":false},"reply_author":{"id":1183639,"avatar":"https://static001.geekbang.org/account/avatar/00/12/0f/97/372d8628.jpg","nickname":"星空下","note":"","ucode":"473643B567674A","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":370764,"discussion_content":"\n会用到的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1619527148,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":370743,"ip_address":""},"score":370764,"extra":""}]}]}]}