{"id":173668,"title":"02 | 程序员也要关心整个系统和公司成本吗？","content":"<p>你好，我是庄振运。</p><p>上一讲我们谈了，作为一个程序员，你所负责的软件模块的性能是很重要的。如果写的程序性能不好，轻则通不过开发过程中的性能测试这一关，严重的话，还会为以后的业务生产环境埋下很多地雷和炸弹，随时会踩响和爆炸，从而影响公司的业务和运营。</p><p>代码性能的重要性，不仅仅局限于程序员所直接负责的软件模块，它对其他相关软件模块、模块所在的应用程序、单机系统的设计、互联网服务的质量、公司的运营成本，甚至对我们共同生活的地球都很重要。</p><p>这一讲，我们就来说说这几个方面。为了方便说清这几方面的关系，我画了下面这张图。</p><p><img src=\"https://static001.geekbang.org/resource/image/10/3c/1076d5164429beb91bfb4e790f8d2a3c.jpg?wh=2622*1474?wh=2622*1474?wh=2622*1474?wh=2622*1474?wh=2622*1474\" alt=\"\"></p><p>我来简单解释一下这张图：</p><ul>\n<li>首先，红色模块是我们负责的模块（标示0），它和其他模块一起构成了整个应用程序（标示1）；</li>\n<li>这个应用程序运行在服务器和OS上面，构成了一个单机系统（标示2）；</li>\n<li>几个单机系统一起组成一个互联网服务（标示3），来面向客户；</li>\n<li>这个服务和其他服务一起，需要公司的硬件容量支持，从而占用公司的商业成本（标示4）；</li>\n<li>最后，别忘了，我们共同生活在这个可爱的绿色星球上。</li>\n</ul><h2>应用程序的性能（标示1）</h2><p><img src=\"https://static001.geekbang.org/resource/image/10/3c/1076d5164429beb91bfb4e790f8d2a3c.jpg?wh=2622*1474?wh=2622*1474?wh=2622*1474?wh=2622*1474?wh=2622*1474\" alt=\"\"></p><p>我们先从标示0和1开始，也就是模块和应用程序。</p><p>我们每个人负责的代码模块，一般都不是孤立存在的，都要和其他模块交互。模块之间是唇齿相依的。如果一个模块性能不好，一定会在某种情况下影响到其他模块，甚至是整个程序的性能和服务质量。唇亡齿寒的道理我们都懂，所以每个软件模块的性能都需要严格把关。</p><!-- [[[read_end]]] --><p>具体到我们自己的模块来说，或许在开发、测试的环境中，这个模块看起来运行正常，但等到了生产环境，一旦流量上去，性能不好的模块很快就会被曝光。尤其是在流量很高的时候，如果性能不佳，公司的运维同事一定会疲于奔命，更甚者会导致公司业务受损，这时性质就很严重了。</p><p>很多性能问题都会被根因分析。如果根因分析定位到是某人所负责的模块拖了大家的后腿，写这个模块的程序员不仅会被其他程序员鄙视，还可能会被老板找去“喝茶”。</p><p>回到性能问题上。性能问题可以表现在很多指标上，比如吞吐量（Throughput），服务延迟（Latency)，可靠性（Reliability)，延展性（Scalability）等等。根据模块所在的应用程序的性质，其中的一个或者几个指标会相对比较重要些。举个简单的例子，如果一个应用程序所在的互联网服务是面向终端客户的（比如微信用户），那么客户的服务延迟一定是极为重要的性能指标。</p><p>具体来说，假如端到端的服务延迟有最大的延迟允许，比如不能超过2秒钟，那么这个服务所需要的应用程序或者微服务，一般也都会有自己的最大延迟预算。假设这个端到端服务需要三个微服务或应用程序来串联，那么，每个应用程序都会分到一定的延迟预算，比如最大1秒。</p><p>同理，我们所负责的模块也会根据程序的逻辑设计分到相应的延迟预算，比如300毫秒，如下图红色模块所示。</p><p><img src=\"https://static001.geekbang.org/resource/image/38/8a/38553b84376fa3add7bcbc44cebec78a.jpg?wh=2622*1472\" alt=\"\"></p><p>这种情况下，如果我们的模块在流量适度变大时，处理时间超过300毫秒的预算，那这个模块的延展性显然就不够了，很可能会导致整个端到端服务的延迟超标。</p><h2>单机系统的性能（标示2）</h2><p>讨论完了模块和程序，我们再看看单机系统。</p><p><img src=\"https://static001.geekbang.org/resource/image/10/3c/1076d5164429beb91bfb4e790f8d2a3c.jpg?wh=2622*1474?wh=2622*1474?wh=2622*1474?wh=2622*1474?wh=2622*1474\" alt=\"\"></p><p>我们的模块所在的应用程序（或者微服务），是运行在服务器的硬件和操作系统上面的。对这台服务器而言，这是个单机系统，包括软件和硬件的整个垂直全栈。现在的系统都非常复杂，软硬件之间的交互也复杂而微妙，并且随着各个构件的升级而经常变化。</p><p>单机系统的软硬件构件包括操作系统、程序库、存储系统、CPU、内存、还有网络等等。这些构件都会或多或少地影响上层程序的性能。</p><p>我举一个简单的例子，这个例子在后面的文章中还会仔细介绍。在我以前的公司，曾经有一个应用程序需要不断地把数据同步写到底层存储系统。这个应用程序后来被发现有性能问题，我们花了很多时间去做分析，后来终于找到原因。</p><p>这个性能问题的表现是：数据同步写入的延迟有时候会非常高。原因是<strong>底层的存储系统同时服务好几个应用程序</strong>。</p><p>由于底层存储系统有各方面的限制，当多个应用程序同时使用这个存储系统时，每个应用程序延迟方面的性能并不能得到保证，因此导致了某个应用程序的读写被严重推迟，并最终导致了后者的性能问题。</p><p>更进一步到设计层面来讲，从我们负责的模块和应用程序角度来看，<strong>对下层的软硬件构件越是了解，就越有可能设计出性能优越的模块和应用程序</strong>。</p><p>比如，很多数据存储方面的服务和应用程序在设计时，需要仔细考虑各种存储系统的技术趋势和性能特征。这些性能特征包括存储速度、价格、容量大小、易失性等。比如传统的DRAM内存就是一种存储，它速度很快，但是价格贵、容量小，并且所存数据不能长期保存，一断电数据就会丢失。</p><p>最近几年一种新的非易失性内存（NVM，Non-volatile Memory）的出现，打破了这一传统，数据可以长期保持，但是速度稍微慢一些。同样的，传统的硬盘存储容量大、价格低，但是速度最慢。最近几年固态硬盘（SSD） 的大量采用，在很多新设计的在线系统中已经作为标准配置，几乎取代了传统硬盘。</p><p>我们程序员作为自己模块甚至整个应用程序的设计者，如果能充分考虑这些硬件的性能特征和技术趋势，就可以设计出性能好、高效率的软件。</p><p>下面这张表格我列举了四种存储硬件，分别是传统DRAM内存、NVM内存、硬盘和固态硬盘；并且比较了它们的五个指标。</p><p><img src=\"https://static001.geekbang.org/resource/image/50/23/5061b7cf9e91d10f584da89dab2a0323.jpg?wh=2620*1472\" alt=\"\"></p><h2>互联网服务的性能（标示3）</h2><p><img src=\"https://static001.geekbang.org/resource/image/10/3c/1076d5164429beb91bfb4e790f8d2a3c.jpg?wh=2622*1474?wh=2622*1474?wh=2622*1474?wh=2622*1474?wh=2622*1474\" alt=\"\"></p><p>现代的互联网服务往往需要很多模块交互，并且客户流量会很大。我们所在的应用程序和系统经常只是整个互联网大服务的一部分，会有上游服务对我们产生请求，我们也会对下游服务发送请求。</p><p>比如下面的图示，我们所在的服务模块用红色标识，上游服务模块用绿色标识，下游服务模块用黄色标识。</p><p><img src=\"https://static001.geekbang.org/resource/image/3e/18/3e13c191e41aa0a206fa194c72027518.jpg?wh=2622*1472\" alt=\"\"></p><p>从公司运营的角度来看，整个互联网大服务的性能才是我们每个程序员真正关心和负责的。我们每人都需要从这个大局出发来考虑和分析问题，来设计自己的模块以及各种交互机制。否则，可能会出现我们的模块本身看起来设计得不错，但却对上下游模块造成不好的影响，进而影响整个大服务的性能。我来举一个真实的案例。</p><p>这个案例是从一次生产环境下的服务问题中发现的。某个下游模块出现延展性问题，服务的延迟变大，上游模块发出的请求排了很长的队。这个时候上游模块已经感觉到下游的性能问题，因为对下游请求的处理延迟已经大幅度增加了。</p><p>此时上游模块本应该怎么做呢？</p><p>它应该降低对下游模块的请求速度，从而减轻下游模块的负担。但是案例中的上游模块设计没有考虑到这一点。不但没有降低请求速度，反而发送了更多的请求，以求得更快的回答。这样无异于火上浇油，最后导致下游模块彻底挂掉，引发了整个服务的瘫痪。</p><p>后来我们学到的教训就是，串联的服务模块中，上游模块必须摒弃这样雪上加霜的服务异常尝试，应该采用<strong>指数退避机制</strong>（Exponential Backoff ），通过快速地降低请求速度来帮助下游模块恢复（上游模块对下游资源进行重试请求的时间间隔，要随着失败次数的增加而指数加长）。</p><h2>公司的成本（标示4）</h2><p><img src=\"https://static001.geekbang.org/resource/image/10/3c/1076d5164429beb91bfb4e790f8d2a3c.jpg?wh=2622*1474?wh=2622*1474?wh=2622*1474?wh=2622*1474?wh=2622*1474\" alt=\"\"></p><p>我们所负责的互联网服务的性能直接影响公司的成本。</p><p>一个高性能的服务，在服务同等数量的客户时，需要的成本会比较小。具体来说，如果我们的服务是计算密集型，那么就应该尽量优化算法和数据结构等方面来降低CPU的使用量，这样就可以用尽量少的服务器来完成同样的需求，从而降低公司的成本。</p><p>现如今是大数据时代，公司在服务器和数据中心以及网络等容量方面的支出是很可观的。尤其是大的公司比如脸书，腾讯等，公司有很多的数据中心和几百万台的服务器。如果公司的每个服务都做到高性能，替公司节省的运营成本是非常巨大的。</p><p>同时，面向互联网服务的容量规划和效率管理也很重要。如果能科学地管理容量，准确地预测未来需求，并逐步提升容量的效率，就能把公司这方面的成本管理和节省好，从而不至于浪费资金在不必要的多余容量上。</p><h2>我们共同的绿色地球</h2><p>最后，让我们跳出“我们的公司”这样的小格局，放眼全球，甚至我们人类的大格局。我们只有一个共同的地球，我们有责任让她保持绿色。</p><p>现在的时代，感谢互联网的发展和大数据时代的来临，全球各公司的数据中心已经在消耗大量的能源。从咱们国家来看，2018年，国内的数据中心用掉的电量比整个上海市用电量还大，占全国用电量的2.3%。全球来看也类似，数据中心在2018年消耗了全球3%以上的电量。这个耗电量已经是差不多整个英国全国用电量的两倍。更严重的是，这样的用电还在飞速增长，差不多每三年或四年就翻一倍！</p><p>所以，我们每个人，其实都负有责任来降低能源消耗。虽然生活中有多种方式可以降低能源消耗，我们的日常工作其实也是重要的一环。如果每个人能把负责的代码优化一下，服务高效一些，我们就是在拯救我们共同的地球，让她永葆绿色！</p><h2>总结</h2><p>对代码和程序的性能优化，以及对系统容量的效率提升，和我们共同关心爱护的东西息息相关。从代码模块，到整个系统，到互联网服务，到公司运营，再到我们的社会，都依赖于我们每个人的责任和贡献。</p><p>你和我或许是一介普通工程师和程序员，但人们常说“位卑未敢忘忧国”。我们虽然没必要拔高到忧国忧民的高度，但是也要认真做好我们的份内份外的事情。</p><h2>思考题</h2><ul>\n<li>回顾你最近接触过的软件模块或者正在写的代码，有没有和其他的系统模块有交互关系，它们之间是如何交互的？</li>\n<li>如果你的模块性能不好（不管是响应时间很慢，还是发出过多请求），有没有可能对其他系统模块造成影响？这个影响会不会造成整个系统和服务的严重后果甚至瘫痪？</li>\n</ul><p>欢迎你在留言区分享自己的思考，与我和其他同学一起讨论，也欢迎你把文章分享给自己的朋友。</p>","neighbors":{"left":{"article_title":"01 | 程序员为什么要关心代码性能？","id":171590},"right":{"article_title":"03 |  导读：专栏是怎么设计的？需要哪些知识？","id":173670}},"comments":[{"had_liked":false,"id":158774,"user_name":"西西弗与卡夫卡","can_delete":false,"product_type":"c1","uid":1001710,"ip_address":"","ucode":"B4C27B8335B76A","user_header":"https://static001.geekbang.org/account/avatar/00/0f/48/ee/872ad07e.jpg","comment_is_top":false,"comment_ctime":1575449145,"is_pvip":true,"replies":[{"id":"60795","content":"没错；双重保护最好。","user_name":"作者回复","user_name_real":"zhenyun2010","uid":"1272838","ctime":1575473530,"ip_address":"","comment_id":158774,"utype":1}],"discussion_count":1,"race_medal":0,"score":"65999958585","product_id":100041101,"comment_content":"上游系统不做避让设计，异常情况下就是自己对自己发起了DDoS攻击。下游系统也要做熔断设计，以保护自己。","like_count":16,"discussions":[{"author":{"id":1272838,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/nicib8gqImzrCGJYyJW3QEmsvtDcfuLe02wm55HBdC2mAHt1mqc6wT7I9GHyByS19zQRBiaZx2EeXKnyvslCZd4tQ/132","nickname":"zhenyun2010","note":"","ucode":"567187932468D8","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":476840,"discussion_content":"没错；双重保护最好。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1575473530,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":159040,"user_name":"Liang Xu","can_delete":false,"product_type":"c1","uid":1476654,"ip_address":"","ucode":"5EA7072BF69B1A","user_header":"https://static001.geekbang.org/account/avatar/00/16/88/2e/7efef4f0.jpg","comment_is_top":false,"comment_ctime":1575521990,"is_pvip":false,"replies":[{"id":"60875","content":"很好的思考。好的退避机制会引入随机数来决定行为，可以避免和极大地降低周期性的可能。","user_name":"作者回复","user_name_real":"zhenyun2010","uid":"1272838","ctime":1575557082,"ip_address":"","comment_id":159040,"utype":1}],"discussion_count":1,"race_medal":0,"score":"40230227654","product_id":100041101,"comment_content":"想到了Bufferbloat 显现. 如果很多人同时应用下游服务, 一遇到堵塞就开始减少请求, 这样就是所有人都减少. 一段时间之后是不是就产生周期性的算力需求? 学网络的时候学的","like_count":9,"discussions":[{"author":{"id":1272838,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/nicib8gqImzrCGJYyJW3QEmsvtDcfuLe02wm55HBdC2mAHt1mqc6wT7I9GHyByS19zQRBiaZx2EeXKnyvslCZd4tQ/132","nickname":"zhenyun2010","note":"","ucode":"567187932468D8","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":476927,"discussion_content":"很好的思考。好的退避机制会引入随机数来决定行为，可以避免和极大地降低周期性的可能。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1575557082,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":158095,"user_name":"Middleware","can_delete":false,"product_type":"c1","uid":1072015,"ip_address":"","ucode":"C0028293ECDD47","user_header":"https://static001.geekbang.org/account/avatar/00/10/5b/8f/4b0ab5db.jpg","comment_is_top":false,"comment_ctime":1575332673,"is_pvip":true,"replies":[{"id":"60583","content":"哈哈，说得没错哦. :) ","user_name":"作者回复","user_name_real":"zhenyun2010","uid":"1272838","ctime":1575337853,"ip_address":"","comment_id":158095,"utype":1}],"discussion_count":1,"race_medal":0,"score":"35935071041","product_id":100041101,"comment_content":"为了国家，为了地球，优化优化代码吧","like_count":8,"discussions":[{"author":{"id":1272838,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/nicib8gqImzrCGJYyJW3QEmsvtDcfuLe02wm55HBdC2mAHt1mqc6wT7I9GHyByS19zQRBiaZx2EeXKnyvslCZd4tQ/132","nickname":"zhenyun2010","note":"","ucode":"567187932468D8","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":476629,"discussion_content":"哈哈，说得没错哦. :) ","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1575337853,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":158225,"user_name":"glutton","can_delete":false,"product_type":"c1","uid":1200223,"ip_address":"","ucode":"F73A9EC0C83E53","user_header":"https://static001.geekbang.org/account/avatar/00/12/50/5f/d10a39c4.jpg","comment_is_top":false,"comment_ctime":1575353757,"is_pvip":false,"replies":[{"id":"60653","content":"谢谢留言和建议。我会尽量满足要求。学完后欢迎和我交流感想。SSD和硬盘的价格和性能其实一直在变（技术演化很快），所以只能给出大体对比，你可以Google搜索一下最新的价格以及每个厂商&#47;型号的性能。如果有具体的问题（比如性能指标），我也可以看看帮你找找。","user_name":"作者回复","user_name_real":"zhenyun2010","uid":"1272838","ctime":1575382535,"ip_address":"","comment_id":158225,"utype":1}],"discussion_count":3,"race_medal":0,"score":"23050190237","product_id":100041101,"comment_content":"老师好，刚刚看到上新的这个课，就出手啦，目前正在做这方面的工作，特别缺少这种系统的讲解<br>1，我负责的系统，是整个公司服务链路中重要一环，目前全链路延时在200ms左右，允许给我们系统的最大时延是50ms（极端情况跨异地数据中心）<br>2，刚刚看到机械硬盘、SSD等对比，希望后续的课程，能详细列出成本、性能数据，以供参考<br>3，希望能多讲一些实例，比如某系统架构演化过程，全面的展现设计思考方式、限制条件等<br>最后，这是我下定决心要学完的一门课，也是我第一次发了留言的课，盼更新！祝顺利！","like_count":5,"discussions":[{"author":{"id":1272838,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/nicib8gqImzrCGJYyJW3QEmsvtDcfuLe02wm55HBdC2mAHt1mqc6wT7I9GHyByS19zQRBiaZx2EeXKnyvslCZd4tQ/132","nickname":"zhenyun2010","note":"","ucode":"567187932468D8","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":476680,"discussion_content":"谢谢留言和建议。我会尽量满足要求。学完后欢迎和我交流感想。SSD和硬盘的价格和性能其实一直在变（技术演化很快），所以只能给出大体对比，你可以Google搜索一下最新的价格以及每个厂商/型号的性能。如果有具体的问题（比如性能指标），我也可以看看帮你找找。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1575382535,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1287598,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/PiajxSqBRaEIFXDPTbibYhEIAuOX3Dcpk70t82yT45qgyOU1Hl35gFf3TM27EfdWFf0DCnricVReNcwx6RBmicTibgA/132","nickname":"郭士禄","note":"","ucode":"169382EC4A6C06","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":82847,"discussion_content":"不在乎成本，直接nvm。网络上可以用rdma方式，性能更好","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1576390524,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1156361,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/FKOOSx20SicFFSfA7eY7hOcEMI5M160bv9lyQJ0GiafKrRibSh7UsCnrQicOw9oV9LmbSiaEDa2XeK81KibJncVuiaqTA/132","nickname":"银河系","note":"","ucode":"9D8EB9E00A0012","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":70584,"discussion_content":"真的假的50  ms时延","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1575371089,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":179620,"user_name":"大名府卢员外","can_delete":false,"product_type":"c1","uid":1480941,"ip_address":"","ucode":"A2EBEF5ADCD0F9","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/ia5Tiav3icxKhgPY3cticZSDSib1crqqlfRxlckDWOtdAWePXR3hkANUsfIgO2RZgnEumsRAwDesy6UjtQthibeGIOTQ/132","comment_is_top":false,"comment_ctime":1582040172,"is_pvip":true,"replies":[{"id":"69773","content":"不太明白，你是说那张有5个指标的图吗？","user_name":"作者回复","user_name_real":"zhenyun2010","uid":"1272838","ctime":1582083299,"ip_address":"","comment_id":179620,"utype":1}],"discussion_count":3,"race_medal":0,"score":"14466942060","product_id":100041101,"comment_content":"老师 文中四种存储介质一图ssd的应该比hdd的读写速度要快 而且我感觉图中两者应该调换一下","like_count":3,"discussions":[{"author":{"id":1272838,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/nicib8gqImzrCGJYyJW3QEmsvtDcfuLe02wm55HBdC2mAHt1mqc6wT7I9GHyByS19zQRBiaZx2EeXKnyvslCZd4tQ/132","nickname":"zhenyun2010","note":"","ucode":"567187932468D8","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":484330,"discussion_content":"不太明白，你是说那张有5个指标的图吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582083299,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1048065,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/fe/01/3f3ae95e.jpg","nickname":"怪盗キッド","note":"","ucode":"D96BC268F5FB6C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":262429,"discussion_content":"同意","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1589096501,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1480941,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/ia5Tiav3icxKhgPY3cticZSDSib1crqqlfRxlckDWOtdAWePXR3hkANUsfIgO2RZgnEumsRAwDesy6UjtQthibeGIOTQ/132","nickname":"大名府卢员外","note":"","ucode":"A2EBEF5ADCD0F9","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":179383,"discussion_content":"是的 存储介质比较那张图","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582212955,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":184123,"user_name":"钱","can_delete":false,"product_type":"c1","uid":1009652,"ip_address":"","ucode":"2C92A243A463D4","user_header":"https://static001.geekbang.org/account/avatar/00/0f/67/f4/9a1feb59.jpg","comment_is_top":false,"comment_ctime":1583228812,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10173163404","product_id":100041101,"comment_content":"我所负责的系统和其他系统打交道，基本是RPC或MQ的方式，RPC的方式假设性能不好，肯定会影响到其他系统，甚至会影响订单的生产计划。<br>不过假设基本不成立，因为有性能压测护航，哈哈😄<br><br>作为程序员主要是通过优化代码的方式来优化性能，针对公司而言机器多了成本必然高，如果能够通过优化代码逻辑调整代码架构的方式来提高性能减少一些机器，确实能为公司剩下一些成本。公司应该设计一个激励措施，以我个人的经验来看，如果设计好会有立杆见影的效果，毕竟任何代码都有优化空间而且空间还不小。","like_count":2},{"had_liked":false,"id":158714,"user_name":"Q","can_delete":false,"product_type":"c1","uid":1047423,"ip_address":"","ucode":"785546C617D3DF","user_header":"https://static001.geekbang.org/account/avatar/00/0f/fb/7f/746a6f5e.jpg","comment_is_top":false,"comment_ctime":1575439278,"is_pvip":false,"replies":[{"id":"60796","content":"你是问开发和运维的有效配合吗？这方面有好几处：<br>-程序设计阶段，他们最好征询你们的意见，因为你们知道硬件，系统和容量；一般来收开发人员不太关心这些。<br>-程序测试阶段。你们要和他们密切交互，将“问题”扼杀在摇篮里。<br>-部署阶段。你们主导，但是需要经常让他们改进发现的问题。<br>-运行阶段。比如修Bug就是。","user_name":"作者回复","user_name_real":"zhenyun2010","uid":"1272838","ctime":1575473758,"ip_address":"","comment_id":158714,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10165373870","product_id":100041101,"comment_content":"作为运维工程师，请问老师该怎么在性能工程领域帮助开发同事？ 实现自我的成长。希望老师能在接下来的一些课能具体谈谈这方面的东西。","like_count":2,"discussions":[{"author":{"id":1272838,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/nicib8gqImzrCGJYyJW3QEmsvtDcfuLe02wm55HBdC2mAHt1mqc6wT7I9GHyByS19zQRBiaZx2EeXKnyvslCZd4tQ/132","nickname":"zhenyun2010","note":"","ucode":"567187932468D8","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":476823,"discussion_content":"你是问开发和运维的有效配合吗？这方面有好几处：\n-程序设计阶段，他们最好征询你们的意见，因为你们知道硬件，系统和容量；一般来收开发人员不太关心这些。\n-程序测试阶段。你们要和他们密切交互，将“问题”扼杀在摇篮里。\n-部署阶段。你们主导，但是需要经常让他们改进发现的问题。\n-运行阶段。比如修Bug就是。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1575473758,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":158430,"user_name":"梅子黄时雨","can_delete":false,"product_type":"c1","uid":1015938,"ip_address":"","ucode":"9F788D09C2E9E7","user_header":"https://static001.geekbang.org/account/avatar/00/0f/80/82/3c21b30c.jpg","comment_is_top":false,"comment_ctime":1575369537,"is_pvip":false,"replies":[{"id":"60651","content":"你历史一定学得很好。哈哈","user_name":"作者回复","user_name_real":"zhenyun2010","uid":"1272838","ctime":1575382289,"ip_address":"","comment_id":158430,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10165304129","product_id":100041101,"comment_content":"我看完就一句话深深地映入我脑海——多快好省。","like_count":2,"discussions":[{"author":{"id":1272838,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/nicib8gqImzrCGJYyJW3QEmsvtDcfuLe02wm55HBdC2mAHt1mqc6wT7I9GHyByS19zQRBiaZx2EeXKnyvslCZd4tQ/132","nickname":"zhenyun2010","note":"","ucode":"567187932468D8","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":476723,"discussion_content":"你历史一定学得很好。哈哈","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1575382289,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":158210,"user_name":"Jxin","can_delete":false,"product_type":"c1","uid":1251111,"ip_address":"","ucode":"4C03928388C413","user_header":"https://static001.geekbang.org/account/avatar/00/13/17/27/ec30d30a.jpg","comment_is_top":false,"comment_ctime":1575350180,"is_pvip":false,"replies":[{"id":"60657","content":"恩，具体的系统真的事很复杂，要考虑各种因素。指数退让其实道理很直白易懂；实践起来也容易。基本道理就是如果不能及时获得下游回答，就假设下游很忙，那就降低请求速度（用指数方式降低，比如每次降低一半）。比如超时等待可以持续增加。","user_name":"作者回复","user_name_real":"zhenyun2010","uid":"1272838","ctime":1575382855,"ip_address":"","comment_id":158210,"utype":1}],"discussion_count":2,"race_medal":0,"score":"10165284772","product_id":100041101,"comment_content":"1.我负责的系统模块是一个老项目的子系统。各服务间rpc调用超时均为6s。这会导致只要系统中任意一个子系统出现问题，由于这个6s等待的存在，就会导致所有关系方线程资源都被占用着。于是我调小了超时时间。然后快速失败却更加剧了故障系统的故障。最终我在入口处用mq销峰控制消费速率或则说任务并行度，借此保障系统稳定。然而，这依旧是有问题的，存在很大的浪费。因为如果瓶颈系统能支撑，单机能并行200的任务，而不能支撑就只能限流在50，这之间的资源浪费实属可惜。瓶颈系统优化又管不到，我倒是愿意研究，但职责有界，连代码都看不到。这种情况就比较无力了。<br><br>2.对老师提到的“指数退避机制”很感兴趣，有具体落地的技术方案吗？<br><br>","like_count":2,"discussions":[{"author":{"id":1272838,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/nicib8gqImzrCGJYyJW3QEmsvtDcfuLe02wm55HBdC2mAHt1mqc6wT7I9GHyByS19zQRBiaZx2EeXKnyvslCZd4tQ/132","nickname":"zhenyun2010","note":"","ucode":"567187932468D8","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":476672,"discussion_content":"恩，具体的系统真的事很复杂，要考虑各种因素。指数退让其实道理很直白易懂；实践起来也容易。基本道理就是如果不能及时获得下游回答，就假设下游很忙，那就降低请求速度（用指数方式降低，比如每次降低一半）。比如超时等待可以持续增加。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1575382855,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1251111,"avatar":"https://static001.geekbang.org/account/avatar/00/13/17/27/ec30d30a.jpg","nickname":"Jxin","note":"","ucode":"4C03928388C413","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":71182,"discussion_content":"这样退，业务有损。也许遥测流量实现阀值自动扩容会好些。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1575387472,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":158091,"user_name":"董飞","can_delete":false,"product_type":"c1","uid":1693828,"ip_address":"","ucode":"4A4A13C4A971E3","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/6Be8vjNk03LEXMl52vONOQvdKTL1MWPR6OsAGEDsHIZXw9FibW8c4YtNL6HAmB8wRkDNIEx15xawJ9PWLW4y1UA/132","comment_is_top":false,"comment_ctime":1575331763,"is_pvip":false,"replies":[{"id":"60585","content":"这个专栏里面应该会有些答案帮助。","user_name":"作者回复","user_name_real":"zhenyun2010","uid":"1272838","ctime":1575337970,"ip_address":"","comment_id":158091,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10165266355","product_id":100041101,"comment_content":"老师，您好。我是做测试的，怎样往性能测试工程师发展？具体都要学什么？编程要学到什么程度？谢谢老师解答。","like_count":2,"discussions":[{"author":{"id":1272838,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/nicib8gqImzrCGJYyJW3QEmsvtDcfuLe02wm55HBdC2mAHt1mqc6wT7I9GHyByS19zQRBiaZx2EeXKnyvslCZd4tQ/132","nickname":"zhenyun2010","note":"","ucode":"567187932468D8","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":476627,"discussion_content":"这个专栏里面应该会有些答案帮助。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1575337970,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":157951,"user_name":"夜空中最亮的星","can_delete":false,"product_type":"c1","uid":1267566,"ip_address":"","ucode":"ADC3E7B6789955","user_header":"https://static001.geekbang.org/account/avatar/00/13/57/6e/b6795c44.jpg","comment_is_top":false,"comment_ctime":1575288980,"is_pvip":false,"replies":[{"id":"60574","content":":) 终于找到组织了！","user_name":"作者回复","user_name_real":"zhenyun2010","uid":"1272838","ctime":1575330311,"ip_address":"","comment_id":157951,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10165223572","product_id":100041101,"comment_content":"作为运维工程师 终于找到了下一个方向 性能工程师","like_count":2,"discussions":[{"author":{"id":1272838,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/nicib8gqImzrCGJYyJW3QEmsvtDcfuLe02wm55HBdC2mAHt1mqc6wT7I9GHyByS19zQRBiaZx2EeXKnyvslCZd4tQ/132","nickname":"zhenyun2010","note":"","ucode":"567187932468D8","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":476593,"discussion_content":":) 终于找到组织了！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1575330311,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":162195,"user_name":"han","can_delete":false,"product_type":"c1","uid":1245221,"ip_address":"","ucode":"9F57929588D2B7","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJKr0jFhAf5MmL7zBzB7ZsmzEunI82MjULLPhgMd3Tc6d7GBuZHogd15IT1a1YLCMibouV5B2rDvKg/132","comment_is_top":false,"comment_ctime":1576474773,"is_pvip":false,"replies":[{"id":"61833","content":"后面会有和数据库相关的一些内容；不过数据库这个领域也好宽（比如各种各样的数据库）。","user_name":"作者回复","user_name_real":"zhenyun2010","uid":"1272838","ctime":1576558223,"ip_address":"","comment_id":162195,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5871442069","product_id":100041101,"comment_content":"大家工作中接触最多的应该是跟数据库的交互😀，不确定在不在课程讨论的范畴中，后面会不会讲到？","like_count":1,"discussions":[{"author":{"id":1272838,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/nicib8gqImzrCGJYyJW3QEmsvtDcfuLe02wm55HBdC2mAHt1mqc6wT7I9GHyByS19zQRBiaZx2EeXKnyvslCZd4tQ/132","nickname":"zhenyun2010","note":"","ucode":"567187932468D8","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":477978,"discussion_content":"后面会有和数据库相关的一些内容；不过数据库这个领域也好宽（比如各种各样的数据库）。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1576558223,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":348535,"user_name":"追风筝的人","can_delete":false,"product_type":"c1","uid":1488020,"ip_address":"","ucode":"2993D60F94C396","user_header":"https://static001.geekbang.org/account/avatar/00/16/b4/94/2796de72.jpg","comment_is_top":false,"comment_ctime":1655177491,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1655177491","product_id":100041101,"comment_content":"可是多快好省做不到，好就不可能省，毕竟成本在那放着， 就像nosql的CAP  不可能都满足。鱼与熊掌不可得兼。","like_count":0},{"had_liked":false,"id":348534,"user_name":"追风筝的人","can_delete":false,"product_type":"c1","uid":1488020,"ip_address":"","ucode":"2993D60F94C396","user_header":"https://static001.geekbang.org/account/avatar/00/16/b4/94/2796de72.jpg","comment_is_top":false,"comment_ctime":1655177367,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1655177367","product_id":100041101,"comment_content":"家国天下，兼济天下","like_count":0},{"had_liked":false,"id":260108,"user_name":"雄鹰","can_delete":false,"product_type":"c1","uid":1786819,"ip_address":"","ucode":"67E0C4BDE7F6F2","user_header":"https://static001.geekbang.org/account/avatar/00/1b/43/c3/2c53acd7.jpg","comment_is_top":false,"comment_ctime":1604925131,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1604925131","product_id":100041101,"comment_content":"看到老师讲到的“指数退避机制”，想起以前现网遇到一个请求数据异常的问题，下游服务出问题了，不断的重试请求，结果导致服务器CPU的资源耗尽","like_count":0},{"had_liked":false,"id":244469,"user_name":"型火🔥","can_delete":false,"product_type":"c1","uid":1003205,"ip_address":"","ucode":"C2322918B31E60","user_header":"https://static001.geekbang.org/account/avatar/00/0f/4e/c5/78626367.jpg","comment_is_top":false,"comment_ctime":1598527268,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1598527268","product_id":100041101,"comment_content":"格局好大","like_count":0},{"had_liked":false,"id":186842,"user_name":"benny","can_delete":false,"product_type":"c1","uid":1123043,"ip_address":"","ucode":"E2F30AF0C808D9","user_header":"https://static001.geekbang.org/account/avatar/00/11/22/e3/510b69f9.jpg","comment_is_top":false,"comment_ctime":1583937027,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1583937027","product_id":100041101,"comment_content":"比特币是不是就是费电","like_count":0},{"had_liked":false,"id":158293,"user_name":"Linuxer","can_delete":false,"product_type":"c1","uid":1153978,"ip_address":"","ucode":"272D9D8089C3D6","user_header":"https://static001.geekbang.org/account/avatar/00/11/9b/ba/333b59e5.jpg","comment_is_top":false,"comment_ctime":1575359658,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1575359658","product_id":100041101,"comment_content":"回顾你最近接触过的软件模块或者正在写的代码，有没有和其他的系统模块有交互关系，它们之间是如何交互的？<br>RPC、接口（其实RPC也算接口） 这两种方式 <br><br>如果你的模块性能不好（不管是响应时间很慢，还是发出过多请求），有没有可能对其他系统模块造成影响？这个影响会不会造成整个系统和服务的严重后果甚至瘫痪？<br>错误一直重试，结果导致整个系统瘫痪，最后采用了文章中提到的指数退避机制","like_count":0},{"had_liked":false,"id":157979,"user_name":"abctao","can_delete":false,"product_type":"c1","uid":1764162,"ip_address":"","ucode":"49D8CC22DCC38F","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIDlm1kyfBS5M8SfDZaNQd02ac8AlvkJakFzgWfe7UPLkwfBicHpbe4xHk8o64Znic6fV4fBDIHBOMg/132","comment_is_top":false,"comment_ctime":1575293217,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1575293217","product_id":100041101,"comment_content":"期待后续讲解，谢谢！","like_count":0}]}