{"id":126339,"title":"09 | 块级作用域：var缺陷以及为什么要引入let和const？","content":"<p>在前面<a href=\"https://time.geekbang.org/column/article/119046\">《07 | 变量提升：JavaScript代码是按顺序执行的吗？》</a>这篇文章中，我们已经讲解了JavaScript中变量提升的相关内容，<strong>正是由于JavaScript存在变量提升这种特性，从而导致了很多与直觉不符的代码，这也是JavaScript的一个重要设计缺陷</strong>。</p><p>虽然ECMAScript6（以下简称ES6）已经通过引入块级作用域并配合let、const关键字，来避开了这种设计缺陷，但是由于JavaScript需要保持向下兼容，所以变量提升在相当长一段时间内还会继续存在。这也加大了你理解概念的难度，因为既要理解新的机制，又要理解变量提升这套机制，关键这两套机制还是同时运行在“一套”系统中的。</p><p>但如果抛开JavaScript的底层去理解这些，那么你大概率会很难深入理解其概念。俗话说，“断病要断因，治病要治根”，所以为了便于你更好地理解和学习，今天我们这篇文章会先“<strong>探病因</strong>”——分析为什么在JavaScript中会存在变量提升，以及变量提升所带来的问题；然后再来“<strong>开药方</strong>”——介绍如何通过<strong>块级作用域并配合let和const关键字</strong>来修复这种缺陷。</p><h2>作用域（scope）</h2><p>为什么JavaScript中会存在变量提升这个特性，而其他语言似乎都没有这个特性呢？要讲清楚这个问题，我们就得先从作用域讲起。</p><!-- [[[read_end]]] --><p><strong>作用域是指在程序中定义变量的区域，该位置决定了变量的生命周期。通俗地理解，作用域就是变量与函数的可访问范围，即作用域控制着变量和函数的可见性和生命周期。</strong></p><p>在ES6之前，ES的作用域只有两种：全局作用域和函数作用域。</p><ul>\n<li><strong>全局作用域</strong>中的对象在代码中的任何地方都能访问，其生命周期伴随着页面的生命周期。</li>\n<li><strong>函数作用域</strong>就是在函数内部定义的变量或者函数，并且定义的变量或者函数只能在函数内部被访问。函数执行结束之后，函数内部定义的变量会被销毁。</li>\n</ul><p>在ES6之前，JavaScript只支持这两种作用域，相较而言，其他语言则都普遍支持<strong>块级作用域</strong>。块级作用域就是使用一对大括号包裹的一段代码，比如函数、判断语句、循环语句，甚至单独的一个{}都可以被看作是一个块级作用域。</p><p>为了更好地理解块级作用域，你可以参考下面的一些示例代码：</p><pre><code>//if块\nif(1){}\n\n//while块\nwhile(1){}\n\n//函数块\nfunction foo(){}\n \n//for循环块\nfor(let i = 0; i&lt;100; i++){}\n\n//单独一个块\n{}\n</code></pre><p>简单来讲，如果一种语言支持块级作用域，那么其代码块内部定义的变量在代码块外部是访问不到的，并且等该代码块中的代码执行完成之后，代码块中定义的变量会被销毁。你可以看下面这段C代码：</p><pre><code>char* myname = &quot;极客时间&quot;;\nvoid showName() {\n  printf(&quot;%s \\n&quot;,myname);\n  if(0){\n    char* myname = &quot;极客邦&quot;;\n  }\n}\n\nint main(){\n   showName();\n   return 0;\n}\n</code></pre><p>上面这段C代码执行后，最终打印出来的是上面全局变量myname的值，之所以这样，是因为C语言是支持块级作用域的，所以if块里面定义的变量是不能被if块外面的语句访问到的。</p><p>和Java、C/C++不同，<strong>ES6之前是不支持块级作用域的</strong>，因为当初设计这门语言的时候，并没有想到JavaScript会火起来，所以只是按照最简单的方式来设计。没有了块级作用域，再把作用域内部的变量统一提升无疑是最快速、最简单的设计，不过这也直接导致了函数中的变量无论是在哪里声明的，在编译阶段都会被提取到执行上下文的变量环境中，所以这些变量在整个函数体内部的任何地方都是能被访问的，这也就是JavaScript中的变量提升。</p><h2>变量提升所带来的问题</h2><p>由于变量提升作用，使用JavaScript来编写和其他语言相同逻辑的代码，都有可能会导致不一样的执行结果。那为什么会出现这种情况呢？主要有以下两种原因。</p><h3>1. 变量容易在不被察觉的情况下被覆盖掉</h3><p>比如我们重新使用JavaScript来实现上面那段C代码，实现后的JavaScript代码如下：</p><pre><code>var myname = &quot;极客时间&quot;\nfunction showName(){\n  console.log(myname);\n  if(0){\n   var myname = &quot;极客邦&quot;\n  }\n  console.log(myname);\n}\nshowName()\n</code></pre><p>执行上面这段代码，打印出来的是undefined，而并没有像前面C代码那样打印出来“极客时间”的字符串。为什么输出的内容是undefined呢？我们再来分析一下。</p><p>首先当刚执行到showName函数调用时，执行上下文和调用栈的状态是怎样的？具体分析过程你可以回顾<a href=\"https://time.geekbang.org/column/article/120257\">《08 | 调用栈：为什么JavaScript代码会出现栈溢出？》</a>这篇文章的分析过程，这里我就直接展示出来了，最终的调用栈状态如下图所示：</p><p><img src=\"https://static001.geekbang.org/resource/image/94/c9/944aaeaeb9ee50feea3c7d218acdd5c9.png?wh=1142*710\" alt=\"\"></p><center><span class=\"reference\">开始执行showName函数时的调用栈</span></center><p>showName函数的执行上下文创建后，JavaScript引擎便开始执行showName函数内部的代码了。首先执行的是：</p><pre><code>console.log(myname);\n</code></pre><p>执行这段代码需要使用变量myname，结合上面的调用栈状态图，你可以看到这里有两个myname变量：一个在全局执行上下文中，其值是“极客时间”；另外一个在showName函数的执行上下文中，其值是undefined。那么到底该使用哪个呢？</p><p>相信做过JavaScript开发的同学都能轻松回答出来答案：“当然是<strong>先使用函数执行上下文里面的变量</strong>啦！”的确是这样，这是因为在函数执行过程中，JavaScript会优先从当前的执行上下文中查找变量，由于变量提升，当前的执行上下文中就包含了变量myname，而值是undefined，所以获取到的myname的值就是undefined。</p><p>这输出的结果和其他大部分支持块级作用域的语言都不一样，比如上面C语言输出的就是全局变量，所以这会很容易造成误解，特别是在你会一些其他语言的基础之上，再来学习JavaScript，你会觉得这种结果很不自然。</p><h3>2. 本应销毁的变量没有被销毁</h3><p>接下来我们再来看下面这段让人误解更大的代码：</p><pre><code>function foo(){\n  for (var i = 0; i &lt; 7; i++) {\n  }\n  console.log(i); \n}\nfoo()\n</code></pre><p>如果你使用C语言或者其他的大部分语言实现类似代码，在for循环结束之后，i就已经被销毁了，但是在JavaScript代码中，i的值并未被销毁，所以最后打印出来的是7。</p><p>这同样也是由变量提升而导致的，在创建执行上下文阶段，变量i就已经被提升了，所以当for循环结束之后，变量i并没有被销毁。</p><p>这依旧和其他支持块级作用域的语言表现是不一致的，所以必然会给一些人造成误解。</p><h2>ES6是如何解决变量提升带来的缺陷</h2><p>上面我们介绍了变量提升而带来的一系列问题，为了解决这些问题，<strong>ES6引入了let和const关键字</strong>，从而使JavaScript也能像其他语言一样拥有了块级作用域。</p><p>关于let和const的用法，你可以参考下面代码：</p><pre><code>let x = 5\nconst y = 6\nx = 7\ny = 9 //报错，const声明的变量不可以修改\n</code></pre><p>从这段代码你可以看出来，两者之间的区别是，使用let关键字声明的变量是可以被改变的，而使用const声明的变量其值是不可以被改变的。但不管怎样，两者都可以生成块级作用域，为了简单起见，在下面的代码中，我统一使用let关键字来演示。</p><p>那么接下来，我们就通过实际的例子来分析下，ES6是如何通过块级作用域来解决上面的问题的。</p><p>你可以先参考下面这段存在变量提升的代码：</p><pre><code>function varTest() {\n  var x = 1;\n  if (true) {\n    var x = 2;  // 同样的变量!\n    console.log(x);  // 2\n  }\n  console.log(x);  // 2\n}\n</code></pre><p>在这段代码中，有两个地方都定义了变量x，第一个地方在函数块的顶部，第二个地方在if块的内部，由于var的作用范围是整个函数，所以在编译阶段，会生成如下的执行上下文：</p><p><img src=\"https://static001.geekbang.org/resource/image/45/bf/4501368679083f3a8e1a9e4a8e316dbf.png?wh=1142*513\" alt=\"\"></p><center><span class=\"reference\">varTest函数的执行上下文</span></center><p>从执行上下文的变量环境中可以看出，最终只生成了一个变量x，函数体内所有对x的赋值操作都会直接改变变量环境中的x值。</p><p>所以上述代码最后通过console.log(x)输出的是2，而对于相同逻辑的代码，其他语言最后一步输出的值应该是1，因为在if块里面的声明不应该影响到块外面的变量。</p><p>既然支持块级作用域和不支持块级作用域的代码执行逻辑是不一样的，那么接下来我们就来改造上面的代码，让其支持块级作用域。</p><p>这个改造过程其实很简单，只需要把var关键字替换为let关键字，改造后的代码如下：</p><pre><code>function letTest() {\n  let x = 1;\n  if (true) {\n    let x = 2;  // 不同的变量\n    console.log(x);  // 2\n  }\n  console.log(x);  // 1\n}\n</code></pre><p>执行这段代码，其输出结果就和我们的预期是一致的。这是因为let关键字是支持块级作用域的，所以在编译阶段，JavaScript引擎并不会把if块中通过let声明的变量存放到变量环境中，这也就意味着在if块通过let声明的关键字，并不会提升到全函数可见。所以在if块之内打印出来的值是2，跳出语块之后，打印出来的值就是1了。这种就非常<strong>符合我们的编程习惯了：作用域块内声明的变量不影响块外面的变量</strong>。</p><h2>JavaScript是如何支持块级作用域的</h2><p>现在你知道了ES可以通过使用let或者const关键字来实现块级作用域，不过你是否有过这样的疑问：“在同一段代码中，ES6是如何做到既要支持变量提升的特性，又要支持块级作用域的呢？”</p><p>那么接下来，我们就要<strong>站在执行上下文的角度</strong>来揭开答案。</p><p>你已经知道JavaScript引擎是通过变量环境实现函数级作用域的，那么ES6又是如何在函数级作用域的基础之上，实现对块级作用域的支持呢？你可以先看下面这段代码：</p><pre><code>function foo(){\n    var a = 1\n    let b = 2\n    {\n      let b = 3\n      var c = 4\n      let d = 5\n      console.log(a)\n      console.log(b)\n    }\n    console.log(b) \n    console.log(c)\n    console.log(d)\n}   \nfoo()\n</code></pre><p>当执行上面这段代码的时候，JavaScript引擎会先对其进行编译并创建执行上下文，然后再按照顺序执行代码，关于如何创建执行上下文我们在前面的文章中已经分析过了，但是现在的情况有点不一样，我们引入了let关键字，let关键字会创建块级作用域，那么let关键字是如何影响执行上下文的呢？</p><p>接下来我们就来一步步分析上面这段代码的执行流程。</p><p><strong>第一步是编译并创建执行上下文</strong>，下面是我画出来的执行上下文示意图，你可以参考下：</p><p><img src=\"https://static001.geekbang.org/resource/image/f9/67/f9f67f2f53437218baef9dc724bd4c67.png?wh=1142*647\" alt=\"\"></p><center><span class=\"reference\">刚执行时foo函数的执行上下文</span></center><p>通过上图，我们可以得出以下结论：</p><ul>\n<li>函数内部通过var声明的变量，在编译阶段全都被存放到<strong>变量环境</strong>里面了。</li>\n<li>通过let声明的变量，在编译阶段会被存放到<strong>词法环境（Lexical Environment）</strong>中。</li>\n<li>在函数的作用域块内部，通过let声明的变量并没有被存放到词法环境中。</li>\n</ul><p>接下来，<strong>第二步继续执行代码</strong>，当执行到代码块里面时，变量环境中a的值已经被设置成了1，词法环境中b的值已经被设置成了2，这时候函数的执行上下文就如下图所示：</p><p><img src=\"https://static001.geekbang.org/resource/image/7e/fa/7e0f7bc362e0dea21d27dc5fb08d06fa.png?wh=1142*654\" alt=\"\"></p><center><span class=\"reference\">执行foo函数内部作用域块时的执行上下文</span></center><p>从图中可以看出，当进入函数的作用域块时，作用域块中通过let声明的变量，会被存放在词法环境的一个单独的区域中，这个区域中的变量并不影响作用域块外面的变量，比如在作用域外面声明了变量b，在该作用域块内部也声明了变量b，当执行到作用域内部时，它们都是独立的存在。</p><p>其实，在词法环境内部，维护了一个小型栈结构，栈底是函数最外层的变量，进入一个作用域块后，就会把该作用域块内部的变量压到栈顶；当作用域执行完成之后，该作用域的信息就会从栈顶弹出，这就是词法环境的结构。需要注意下，我这里所讲的变量是指通过let或者const声明的变量。</p><p>再接下来，当执行到作用域块中的<code>console.log(a)</code>这行代码时，就需要在词法环境和变量环境中查找变量a的值了，具体查找方式是：沿着词法环境的栈顶向下查询，如果在词法环境中的某个块中查找到了，就直接返回给JavaScript引擎，如果没有查找到，那么继续在变量环境中查找。</p><p>这样一个变量查找过程就完成了，你可以参考下图：</p><p><img src=\"https://static001.geekbang.org/resource/image/06/08/06c06a756632acb12aa97b3be57bb908.png?wh=1142*557\" alt=\"\"></p><center><span class=\"reference\">变量查找过程</span></center><p>从上图你可以清晰地看出变量查找流程，不过要完整理解查找变量或者查找函数的流程，就涉及到作用域链了，这个我们会在下篇文章中做详细介绍。</p><p>当作用域块执行结束之后，其内部定义的变量就会从词法环境的栈顶弹出，最终执行上下文如下图所示：</p><p><img src=\"https://static001.geekbang.org/resource/image/d4/28/d4f99640d62feba4202aa072f6369d28.png?wh=1142*722\" alt=\"\"></p><center><span class=\"reference\">作用域执行完成示意图</span></center><p>通过上面的分析，想必你已经理解了词法环境的结构和工作机制，块级作用域就是通过词法环境的栈结构来实现的，而变量提升是通过变量环境来实现，通过这两者的结合，JavaScript引擎也就同时支持了变量提升和块级作用域了。</p><h2>总结</h2><p>好了，今天的内容就讲到这里，下面我来简单总结下今天的内容。</p><p>由于JavaScript的变量提升存在着变量覆盖、变量污染等设计缺陷，所以ES6引入了块级作用域关键字来解决这些问题。</p><p>之后我们还通过对变量环境和词法环境的介绍，分析了JavaScript引擎是如何同时支持变量提升和块级作用域的。</p><p>既然聊到了作用域，那最后我们再简单聊下编程语言吧。经常有人争论什么编程语言是世界上最好的语言，但如果站在语言本身来说，我觉得这种争论没有意义，因为语言是工具，而工具是用来创造价值的，至于能否创造价值或创造多大价值不完全由语言本身的特性决定。这么说吧，即便一门设计不那么好的语言，它也可能拥有非常好的生态，比如有完善的框架、非常多的落地应用，又或者能够给开发者带来更多的回报，这些都是评判因素。</p><p>如果站在语言层面来谈，每种语言其实都是在相互借鉴对方的优势，协同进化，比如JavaScript引进了块级作用域、迭代器和协程，其底层虚拟机的实现和Java、Python又是非常相似，也就是说如果你理解了JavaScript协程和JavaScript中的虚拟机，其实你也就理解了Java、Python中的协程和虚拟机的实现机制。</p><p>所以说，语言本身好坏不重要，重要的是能为开发者创造价值。</p><h2>思考时间</h2><p>下面给你留个思考题，看下面这样一段代码：</p><pre><code>let myname= '极客时间'\n{\n  console.log(myname) \n  let myname= '极客邦'\n}\n</code></pre><p>你能通过分析词法环境，得出来最终的打印结果吗？</p><p>欢迎在留言区与我分享你的想法，也欢迎你在留言区记录你的思考过程。感谢阅读，如果你觉得这篇文章对你有帮助的话，也欢迎把它分享给更多的朋友。</p>","neighbors":{"left":{"article_title":"08 | 调用栈：为什么JavaScript代码会出现栈溢出？","id":120257},"right":{"article_title":"10 | 作用域链和闭包 ：代码中出现相同的变量，JavaScript引擎是如何选择的？","id":127495}},"comments":[{"had_liked":false,"id":127275,"user_name":"coolseaman","can_delete":false,"product_type":"c1","uid":1213148,"ip_address":"","ucode":"D2569CD01853B6","user_header":"https://static001.geekbang.org/account/avatar/00/12/82/dc/5dbbe598.jpg","comment_is_top":false,"comment_ctime":1566630471,"is_pvip":false,"replies":[{"id":"47105","content":"很好，这个答案大家可以参考下","user_name":"作者回复","comment_id":127275,"uid":"1141464","ip_address":"","utype":1,"ctime":1566649084,"user_name_real":"李兵"}],"discussion_count":35,"race_medal":0,"score":"2106100605511","product_id":100033601,"comment_content":"【最终打印结果】：VM6277:3 Uncaught ReferenceError: Cannot access &#39;myname&#39; before initialization<br>【分析原因】：在块作用域内，let声明的变量被提升，但变量只是创建被提升，初始化并没有被提升，在初始化之前使用变量，就会形成一个暂时性死区。<br>【拓展】<br>var的创建和初始化被提升，赋值不会被提升。<br>let的创建被提升，初始化和赋值不会被提升。<br>function的创建、初始化和赋值均会被提升。","like_count":491,"discussions":[{"author":{"id":1141464,"avatar":"https://static001.geekbang.org/account/avatar/00/11/6a/d8/228449c9.jpg","nickname":"李兵","note":"","ucode":"3F3D3F6E20209E","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":464409,"discussion_content":"很好，这个答案大家可以参考下","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566649084,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":2,"child_discussions":[{"author":{"id":2987278,"avatar":"https://static001.geekbang.org/account/avatar/00/2d/95/0e/3f513c4b.jpg","nickname":"橘子","note":"","ucode":"53D8BF125A6D62","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1141464,"avatar":"https://static001.geekbang.org/account/avatar/00/11/6a/d8/228449c9.jpg","nickname":"李兵","note":"","ucode":"3F3D3F6E20209E","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":569173,"discussion_content":"老师 感觉这位同学说的很有争议 let不是不存在变量提升吗 我的理解是执行到\nconsole.log(myname) 时 词法环境中已经有myname 并被初始化为undefined 但是在未执行到let myname= &#39;极客邦&#39; 时 v8会阻止访问变量myname，所以报错","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1651338286,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":464409,"ip_address":""},"score":569173,"extra":""},{"author":{"id":1673843,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83erXRaa98A3zjLDkOibUJV1254aQ4EYFTbSLJuEvD0nXicMNA8pLoxOfHf5kPTbGLXNicg8CPFH3Tn0mA/132","nickname":"Geek_115bc8","note":"","ucode":"71FBC9F02AFE1B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2987278,"avatar":"https://static001.geekbang.org/account/avatar/00/2d/95/0e/3f513c4b.jpg","nickname":"橘子","note":"","ucode":"53D8BF125A6D62","race_medal":0,"user_type":1,"is_pvip":true},"discussion":{"id":569540,"discussion_content":"如果你这样以为，那么再全局中myname已经放进了词法环境中了。那么在块中访问myname时，就应该是“极客时间”了。但是他并没有。所以他在创建的时候肯定是提升了，并且被加入了词法环境中的。","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1651475319,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":569173,"ip_address":""},"score":569540,"extra":""}]},{"author":{"id":1053875,"avatar":"https://static001.geekbang.org/account/avatar/00/10/14/b3/b6e1817a.jpg","nickname":"趁你还年轻233","note":"","ucode":"B7CC120EF42980","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":373311,"discussion_content":"这个答案有错误。let和const并不存在变量提升。\n\n\nlet和const不会像var一样变量声明提升！\n\n原因是：const，let存在temporal dead zone！\n\n因此不能let ，const赋值前使用变量。\n\n在说变量提升之前，先了解一个概念，Temporal Dead Zone，指的是从block创建到初始化完成之间的时间。用var不会存在Temporal Dead Zone，因为用var声明的变量，初始值立即默认赋予undefined，不会像let这样，存在Temporal Dead Zone，不会立即为其赋undefined，所以会报ReferenceError错误。\n\nfunction do_something() {\n    console.log(bar); // undefined\n    console.log(foo); // ReferenceRrror\n    var bar = 1;\n    let foo = 2;\n}","likes_number":13,"is_delete":false,"is_hidden":false,"ctime":1620695587,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":3,"child_discussions":[{"author":{"id":2286113,"avatar":"https://static001.geekbang.org/account/avatar/00/22/e2/21/60adf96b.jpg","nickname":"stone","note":"","ucode":"65816E57253D0F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1053875,"avatar":"https://static001.geekbang.org/account/avatar/00/10/14/b3/b6e1817a.jpg","nickname":"趁你还年轻233","note":"","ucode":"B7CC120EF42980","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":385762,"discussion_content":"说得没有问题","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1627266556,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":373311,"ip_address":""},"score":385762,"extra":""},{"author":{"id":2004749,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIib8v6esIeeiaRbts7jrGQdFJpvE3Umm5GYibespJLBaZhiacXDplWMOafo5Q0f0LLZeA794d2EBYhNw/132","nickname":"王泽龙","note":"","ucode":"7C5B0F2F67FD2A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2286113,"avatar":"https://static001.geekbang.org/account/avatar/00/22/e2/21/60adf96b.jpg","nickname":"stone","note":"","ucode":"65816E57253D0F","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":391108,"discussion_content":"有问题。。。 \n为其赋undefined，只是不能够访问","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1630296993,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":385762,"ip_address":""},"score":391108,"extra":""},{"author":{"id":1590225,"avatar":"https://static001.geekbang.org/account/avatar/00/18/43/d1/b3a8165b.jpg","nickname":"Guan-Ym","note":"","ucode":"1C015C36876A5A","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1053875,"avatar":"https://static001.geekbang.org/account/avatar/00/10/14/b3/b6e1817a.jpg","nickname":"趁你还年轻233","note":"","ucode":"B7CC120EF42980","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":570325,"discussion_content":"有问题，是会变量提升，如果不会变量提升，就不会报错，根据从词法环境到变量环境的查询顺序，应该得到 “极客时间” 这个值。","likes_number":4,"is_delete":false,"is_hidden":false,"ctime":1651732105,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":373311,"ip_address":""},"score":570325,"extra":""}]},{"author":{"id":1694310,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83erIjcViatJ0npo1GiaDYEjlz5bS1VQmWvS2n9AzSLthQOSVDMVjv8sZ2zf2QNk74zpjyUrXWZFon9DQ/132","nickname":"Geek_a77079","note":"","ucode":"FD28837D33DEDD","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":46226,"discussion_content":"牛逼的回答，应该是分创建，初始化，赋值三个步骤，不然按照文章提到的变量从词法环境到变量环境的查询方向，理论上还是可以打印出myname。正因为let没有初始化，所以暂时性死区中使用变量就会报错","likes_number":12,"is_delete":false,"is_hidden":false,"ctime":1573133222,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2713559,"avatar":"https://static001.geekbang.org/account/avatar/00/29/67/d7/3c6056b4.jpg","nickname":"（ ´^ิω^ิ｀）","note":"","ucode":"2ED3FE965401EA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":386248,"discussion_content":"也就是说编译的时候已经创建了变量，但是被设置为不可访问，执行初始化后才能访问","likes_number":5,"is_delete":false,"is_hidden":false,"ctime":1627481840,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1346571,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKmR5MWEFXdicmO0S784v3lTqH4BzoKk4YiaDqA9icTFtxL49nR2mFRl5FibQNgWF5bD6mFe30K6zAcCw/132","nickname":"小疯子一头","note":"","ucode":"93EE20AD7612A1","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":331969,"discussion_content":"let and const declarations define variables that are scoped to the running execution context’s LexicalEnvironment. The variables are created when their containing Lexical Environment is instantiated but may not be accessed in any way until the variable’s LexicalBinding is evaluated. A variable defined by a LexicalBinding with an Initializer is assigned the value of its Initializer’s AssignmentExpression when the LexicalBinding is evaluated, not when the variable is created. If a LexicalBinding in a let declaration does not have an Initializer the variable is assigned the value undefined when the LexicalBinding is evaluated.","likes_number":4,"is_delete":false,"is_hidden":false,"ctime":1607031739,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":2547575,"avatar":"https://static001.geekbang.org/account/avatar/00/26/df/77/f79c21be.jpg","nickname":"🙃","note":"","ucode":"B6C88EC4080C54","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1346571,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKmR5MWEFXdicmO0S784v3lTqH4BzoKk4YiaDqA9icTFtxL49nR2mFRl5FibQNgWF5bD6mFe30K6zAcCw/132","nickname":"小疯子一头","note":"","ucode":"93EE20AD7612A1","race_medal":0,"user_type":1,"is_pvip":true},"discussion":{"id":366797,"discussion_content":"你好，你这里的引用文档地址在哪呢，可以说下么，谢谢。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1618193242,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":331969,"ip_address":""},"score":366797,"extra":""},{"author":{"id":2253986,"avatar":"https://static001.geekbang.org/account/avatar/00/22/64/a2/bdef4943.jpg","nickname":"lh","note":"","ucode":"10460E22F07D3A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2547575,"avatar":"https://static001.geekbang.org/account/avatar/00/26/df/77/f79c21be.jpg","nickname":"🙃","note":"","ucode":"B6C88EC4080C54","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":370800,"discussion_content":"https://262.ecma-international.org/6.0/#sec-let-and-const-declarations","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1619534317,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":366797,"ip_address":""},"score":370800,"extra":""}]},{"author":{"id":1589947,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eqXKSvfaeicog2Ficx4W3pNeA1KRLOS7iaFy2uoxCDoYpGkGnP6KPGecKia6Dr3MtCkNGpHxAzmTMd0LA/132","nickname":"Geek_East","note":"","ucode":"A1A7CBF9B8FB2D","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":73946,"discussion_content":"实际上 let会被提升，只是初始化为uninitialized","likes_number":4,"is_delete":false,"is_hidden":false,"ctime":1575615513,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2787007,"avatar":"https://static001.geekbang.org/account/avatar/00/2a/86/bf/ab7d29ef.jpg","nickname":"熊凡","note":"","ucode":"16C87093C96C4A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":402855,"discussion_content":"是不是可以这么理解，\nvar在编译阶段完成了创建和初始化操作，初始化值是undefined，执行阶段赋值；\nlet在编译阶段只在词法环境创建操作，初始化前myname无法被使用，执行阶段初始化和赋值同时进行；\nfunction在编译阶段完成了创建初始化和赋值，执行阶段当前作用域内任意位置都可调用","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1633957622,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1330834,"avatar":"https://static001.geekbang.org/account/avatar/00/14/4e/92/574226f4.jpg","nickname":"李继庠","note":"","ucode":"76E911D68AF37D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":381009,"discussion_content":"这边有篇相关英文文章对于 创建, 初始化 和 赋值 这三个步骤进行的解释\nhttps://www.sitepoint.com/how-to-declare-variables-javascript/\n\nDeclaration: The variable is registered using a given name within the corresponding scope (explained below – e.g. inside a function).\n\nInitialization: When you declare a variable it is automatically initialized, which means memory is allocated for the variable by the JavaScript engine.\n\nAssignment: This is when a specific value is assigned to the variable.","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1624865801,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2539250,"avatar":"https://static001.geekbang.org/account/avatar/00/26/be/f2/60711467.jpg","nickname":"光影","note":"","ucode":"CE6EF591D3A7B5","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":387561,"discussion_content":"那看起来就是变量没有初始化去做右值查询就会报错","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1628245931,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1630111,"avatar":"https://static001.geekbang.org/account/avatar/00/18/df/9f/6db75dff.jpg","nickname":"Random","note":"","ucode":"4E164C8CF487FA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2539250,"avatar":"https://static001.geekbang.org/account/avatar/00/26/be/f2/60711467.jpg","nickname":"光影","note":"","ucode":"CE6EF591D3A7B5","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":388320,"discussion_content":"firefox中进行debug，可以明确的看到未初始化的提示，也暗示了变量要在内部初始化，所以初始化就是去默认赋值为undefined，let没执行到那行之前词法环境中已经存在变量了，但是不是undefined，是未初始化状态，也就是TDZ","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1628694640,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":387561,"ip_address":""},"score":388320,"extra":""}]},{"author":{"id":1388319,"avatar":"https://static001.geekbang.org/account/avatar/00/15/2f/1f/f95bd8c9.jpg","nickname":"余文郁","note":"","ucode":"A51117A929EBD8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":42480,"discussion_content":"创建和初始化区别是啥呢","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1572678839,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1816697,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/b8/79/a4dbe9ee.jpg","nickname":"blueBean","note":"","ucode":"6A68D2414BD904","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1388319,"avatar":"https://static001.geekbang.org/account/avatar/00/15/2f/1f/f95bd8c9.jpg","nickname":"余文郁","note":"","ucode":"A51117A929EBD8","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":193171,"discussion_content":"初始化会赋值undefined","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1583133790,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":42480,"ip_address":""},"score":193171,"extra":""}]},{"author":{"id":1115164,"avatar":"https://static001.geekbang.org/account/avatar/00/11/04/1c/db5ac4f9.jpg","nickname":"Jay","note":"","ucode":"9BD73DCFB2E1CC","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":7462,"discussion_content":"不是可以从栈顶到栈底搜索然后搜索环境变量吗？为什么会有暂时死区的存在？求解。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1567515383,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1381062,"avatar":"https://static001.geekbang.org/account/avatar/00/15/12/c6/c6fab5d8.jpg","nickname":"Sobine","note":"","ucode":"8E90C825D54839","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1115164,"avatar":"https://static001.geekbang.org/account/avatar/00/11/04/1c/db5ac4f9.jpg","nickname":"Jay","note":"","ucode":"9BD73DCFB2E1CC","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":282341,"discussion_content":"在自己的词法环境中找到了myname，myname被提升了，只是没有初始化undefined。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1591947776,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":7462,"ip_address":""},"score":282341,"extra":""}]},{"author":{"id":2012017,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/WKgD4vjLMhG5Tb0wFrYQ3prJpMSQgb1iabUNyPEk6cHDVWgHJCOicLVx38Ax3xqB2BrzpIpvlrPMCWjgNL6icXicPg/132","nickname":"过客","note":"","ucode":"335CF35D9E5CC6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":414746,"discussion_content":"也就是说，变量环境中的会被初始化，词法环境中的不会初始化。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1636884139,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1984990,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLZlG6Z7ibxbJwTIr40GuFkK0jtiaicyqHXcZ11rmMJVfyChCKMZ34tXx0VficVREblOuI7u2SMvticypA/132","nickname":"dxp","note":"","ucode":"5C1AD2CDB06521","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":371147,"discussion_content":"觉得解答的很经典。只是有个问题，照你这么说，为什么老师文中说，编译并创建执行上下文时，let声明的变量存放在词法环境，此时这个变量的值赋了undefined？？不是很理解","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1619664359,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1244819,"avatar":"https://static001.geekbang.org/account/avatar/00/12/fe/93/31869247.jpg","nickname":"Presbyter🎱","note":"","ucode":"E52F076FE898DA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":206683,"discussion_content":"const 和let也一样吗","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584427033,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1816697,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/b8/79/a4dbe9ee.jpg","nickname":"blueBean","note":"","ucode":"6A68D2414BD904","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":193174,"discussion_content":"大佬，为什么不是输出undefined呢？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1583134126,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1243584,"avatar":"https://static001.geekbang.org/account/avatar/00/12/f9/c0/20b4a205.jpg","nickname":"啊哈哈","note":"","ucode":"A8542946C03707","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1816697,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/b8/79/a4dbe9ee.jpg","nickname":"blueBean","note":"","ucode":"6A68D2414BD904","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":281088,"discussion_content":"创建被提升，初始化没有被提升，变量初始化之前存在暂时性死区，变量不可被访问。","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1591669949,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":193174,"ip_address":""},"score":281088,"extra":""}]},{"author":{"id":1162123,"avatar":"https://static001.geekbang.org/account/avatar/00/11/bb/8b/028bbe52.jpg","nickname":"戡玉","note":"","ucode":"398F0C0367E795","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":162597,"discussion_content":"因此，通过代码测试时会发现，如果在let声明之前就打印的话，会报Cannot access &#39;b&#39; before initialization（初始化前不能访问b），也就是说，尽管将其提到词法环境里了，但是游览器的作用域栏里是看不到这个let声明项的，因为还没赋值undefind。如果在let声明之前打印的是一个固定数字，没触发死区原理，在游览器的作用域栏是可以看到有block b = undefind的。因此，暂时性死区是发生在初始化之前，let b创是创建了的，只是你看不到和无法调试。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1580999192,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1147347,"avatar":"https://static001.geekbang.org/account/avatar/00/11/81/d3/f0a88806.jpg","nickname":"🍐 🍾 🔆","note":"","ucode":"1B7C90800AD4D0","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":62860,"discussion_content":"都是大佬啊 都知道TDZ呀 ","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574862933,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1628484,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTL7KMU6r5CquSI5kQlcaLuwph9HCSWcClT0YSmbon1Vov5ZcJpOCrc8WHEbfLrxbFedTjsEWuhgiaw/132","nickname":"Geek_6b0898","note":"","ucode":"3C2C89FE432097","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":47158,"discussion_content":"说的是啊，创建和初始化的区别是什么","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573285029,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1816697,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/b8/79/a4dbe9ee.jpg","nickname":"blueBean","note":"","ucode":"6A68D2414BD904","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1628484,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTL7KMU6r5CquSI5kQlcaLuwph9HCSWcClT0YSmbon1Vov5ZcJpOCrc8WHEbfLrxbFedTjsEWuhgiaw/132","nickname":"Geek_6b0898","note":"","ucode":"3C2C89FE432097","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":193170,"discussion_content":"创建变量a，初始化是给变量a赋值undefined","likes_number":6,"is_delete":false,"is_hidden":false,"ctime":1583133714,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":47158,"ip_address":""},"score":193170,"extra":""}]},{"author":{"id":1046304,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/f7/20/e2dfa9c2.jpg","nickname":"花儿与少年","note":"","ucode":"E2D685737E4F1B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":8217,"discussion_content":"let声明不会被提升","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567835541,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1634416,"avatar":"https://static001.geekbang.org/account/avatar/00/18/f0/70/a6306bbb.jpg","nickname":"wtl","note":"","ucode":"F7FE9A5A3D825D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":6948,"discussion_content":"其实就是 let 和 const  的暂时性死区","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567186242,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":3,"child_discussions":[{"author":{"id":1816697,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/b8/79/a4dbe9ee.jpg","nickname":"blueBean","note":"","ucode":"6A68D2414BD904","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1634416,"avatar":"https://static001.geekbang.org/account/avatar/00/18/f0/70/a6306bbb.jpg","nickname":"wtl","note":"","ucode":"F7FE9A5A3D825D","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":210150,"discussion_content":"死区就死区为什么是暂时性死区呢","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584710784,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":6948,"ip_address":""},"score":210150,"extra":""},{"author":{"id":1391354,"avatar":"https://static001.geekbang.org/account/avatar/00/15/3a/fa/21f64eaa.jpg","nickname":"mimof9","note":"","ucode":"C83B3E2CD62BBD","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1816697,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/b8/79/a4dbe9ee.jpg","nickname":"blueBean","note":"","ucode":"6A68D2414BD904","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":222353,"discussion_content":"暂时性死区这个词我是从了阮一峰老师的ES6标准入门中看到的，个人感觉没必要整这么个专业词汇。在变量声明之前就使用变量，本身就是不合理的，ES6的块级作用域把这个问题修复了，又引入这么个专业说法，有点儿画蛇添足的感觉","likes_number":7,"is_delete":false,"is_hidden":false,"ctime":1586139147,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":210150,"ip_address":""},"score":222353,"extra":""},{"author":{"id":2539250,"avatar":"https://static001.geekbang.org/account/avatar/00/26/be/f2/60711467.jpg","nickname":"光影","note":"","ucode":"CE6EF591D3A7B5","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1816697,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/b8/79/a4dbe9ee.jpg","nickname":"blueBean","note":"","ucode":"6A68D2414BD904","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":387559,"discussion_content":"可能是因为你不这样写他就不是死区，这样写就是死区，所以定义为暂时的吧🤣","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1628245831,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":210150,"ip_address":""},"score":387559,"extra":""}]}]},{"had_liked":true,"id":127249,"user_name":"朙","can_delete":false,"product_type":"c1","uid":1623308,"ip_address":"","ucode":"55FE217C4CEDCC","user_header":"https://static001.geekbang.org/account/avatar/00/18/c5/0c/03bd4b4e.jpg","comment_is_top":false,"comment_ctime":1566621552,"is_pvip":false,"replies":[{"id":"47108","content":"执行函数时才有进行编译，抽象语法树(AST）在进入函数阶段就生成了，并且函数内部作用域是已经明确了，所以进入块级作用域不会有编译过程，只不过通过let或者const声明的变量会在进入块级作用域的时被创建，但是在该变量没有赋值之前，引用该变量JavaScript引擎会抛出错误---这就是“暂时性死区”","user_name":"作者回复","comment_id":127249,"uid":"1141464","ip_address":"","utype":1,"ctime":1566650171,"user_name_real":"李兵"}],"discussion_count":10,"race_medal":0,"score":"280739495792","product_id":100033601,"comment_content":"这篇真的是神作啊。 有一个疑问，在abcd那个例子里，第一步&lt;编译并创建执行上下文&gt;的图里并没有块级作用域的b=undefined; d=undefined。而在第二步里&lt;继续执行代码&gt;的图中才出现b=undefined; d=undefined。想问下这个块级作用域的b=undefined; d=undefined是不是应该在第一步的编译阶段里就有。还是说在执行阶段像函数那样，块级作用域会有一个自己的编译阶段<br><br>","like_count":65,"discussions":[{"author":{"id":1141464,"avatar":"https://static001.geekbang.org/account/avatar/00/11/6a/d8/228449c9.jpg","nickname":"李兵","note":"","ucode":"3F3D3F6E20209E","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":464397,"discussion_content":"执行函数时才有进行编译，抽象语法树(AST）在进入函数阶段就生成了，并且函数内部作用域是已经明确了，所以进入块级作用域不会有编译过程，只不过通过let或者const声明的变量会在进入块级作用域的时被创建，但是在该变量没有赋值之前，引用该变量JavaScript引擎会抛出错误---这就是“暂时性死区”","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566650171,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":1,"child_discussions":[{"author":{"id":1531784,"avatar":"https://static001.geekbang.org/account/avatar/00/17/5f/88/ed9acee8.jpg","nickname":"大掌柜〈海棠依旧〉","note":"","ucode":"023DF965D55B7A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1141464,"avatar":"https://static001.geekbang.org/account/avatar/00/11/6a/d8/228449c9.jpg","nickname":"李兵","note":"","ucode":"3F3D3F6E20209E","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":556845,"discussion_content":"这里那为什么还需要有undefined呢？要么就是只是创建定赋值，或者赋值成功？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1647533131,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":464397,"ip_address":""},"score":556845,"extra":""}]},{"author":{"id":1625651,"avatar":"https://static001.geekbang.org/account/avatar/00/18/ce/33/09498236.jpg","nickname":"Geek_1b6022","note":"","ucode":"EBDDEF36DE58DF","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":346486,"discussion_content":"不知道可不可以这么理解，let和const声明的变量在执行上下文中应该和 var一样，有创建，也有初始化成undefined。区别就是V8虚拟机没有把let和const的初始化行为“提升”（可能是因为要创造块级作用域），所以会存在暂时性死区。不能直接把初始化没有提升等同于没有初始化。提不提升是V8虚拟机说了算的。但是为什么暂时性死区中会报“before initialization”这个错误？这个“before initialization”应该是指可执行代码中的initialization（初始化第一次赋值），并不是指执行上下文中的变量没有初始化。V8这么报错的目的是想让开发者规范写代码，在初始化之后调用变量。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1611972291,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1930698,"avatar":"https://static001.geekbang.org/account/avatar/00/1d/75/ca/4c127da3.jpg","nickname":"Emma","note":"","ucode":"C2D31142AF7288","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":212663,"discussion_content":"老师想问一下在形成ast和作用域的时候，函数没有被调用，函数的作用域此时应该是不知道的吧？只有调用函数了，才能知道函数的作用域，这里会讲外部的作用域放到一个栈底部，然后将函数作用域推到这个栈中吧？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585002687,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":2258397,"avatar":"https://static001.geekbang.org/account/avatar/00/22/75/dd/9affd4d5.jpg","nickname":"九千七","note":"","ucode":"1E385C88B3401A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1930698,"avatar":"https://static001.geekbang.org/account/avatar/00/1d/75/ca/4c127da3.jpg","nickname":"Emma","note":"","ucode":"C2D31142AF7288","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":342256,"discussion_content":"函数作用域是在函数创建的时候就有了，而不是在调用的时候","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1610624997,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":212663,"ip_address":""},"score":342256,"extra":""},{"author":{"id":1938247,"avatar":"https://static001.geekbang.org/account/avatar/00/1d/93/47/ef2c3c4e.jpg","nickname":"何江涛","note":"","ucode":"844470733623BF","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1930698,"avatar":"https://static001.geekbang.org/account/avatar/00/1d/75/ca/4c127da3.jpg","nickname":"Emma","note":"","ucode":"C2D31142AF7288","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":573237,"discussion_content":"函数被调用时，才会编译，编译时变量提升，形成变量环境和执行上下文。有了执行上下文就可以压入栈顶，之后正式执行函数内部代码。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1653287624,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":212663,"ip_address":""},"score":573237,"extra":""}]},{"author":{"id":1046304,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/f7/20/e2dfa9c2.jpg","nickname":"花儿与少年","note":"","ucode":"E2D685737E4F1B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":51553,"discussion_content":"问李老师:这里说的块作用域内 引用没被赋值的let 变量会报错。 let a; 这样也叫赋值吗","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573896493,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1231133,"avatar":"https://static001.geekbang.org/account/avatar/00/12/c9/1d/c7586cfc.jpg","nickname":"Zkerhcy","note":"","ucode":"43A883F6FB6070","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1046304,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/f7/20/e2dfa9c2.jpg","nickname":"花儿与少年","note":"","ucode":"E2D685737E4F1B","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":155730,"discussion_content":"执行到这样的let语句时，就是初始化为undefined，相当于赋值了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1580279633,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":51553,"ip_address":""},"score":155730,"extra":""},{"author":{"id":1557433,"avatar":"https://static001.geekbang.org/account/avatar/00/17/c3/b9/c177ce04.jpg","nickname":"弓","note":"","ucode":"A83780FE6AC7A6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1231133,"avatar":"https://static001.geekbang.org/account/avatar/00/12/c9/1d/c7586cfc.jpg","nickname":"Zkerhcy","note":"","ucode":"43A883F6FB6070","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":336357,"discussion_content":"感觉词法作用域里面直接写b；更像是创建的意思吧，后面等于undefined实在不好接受","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1608556488,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":155730,"ip_address":""},"score":336357,"extra":""}]},{"author":{"id":1241365,"avatar":"https://static001.geekbang.org/account/avatar/00/12/f1/15/8fcf8038.jpg","nickname":"William","note":"","ucode":"4499F99B180102","race_medal":2,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":6052,"discussion_content":"同问！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566638561,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":true,"id":127851,"user_name":"YBB","can_delete":false,"product_type":"c1","uid":1585967,"ip_address":"","ucode":"1507DBFE008715","user_header":"https://static001.geekbang.org/account/avatar/00/18/33/2f/84f7d587.jpg","comment_is_top":false,"comment_ctime":1566800663,"is_pvip":false,"replies":[{"id":"47391","content":"对的，你的理解没错<br><br>函数只会在第一次执行的时候被编译，所以编译时变量环境和词法环境最顶层数据已经确定了。<br><br>当执行到块级作用域的时候，块级作用域中通过let和const申明的变量会被追加到词法环境中，当这个块执行结束之后，追加到词法作用域的内容又会销毁掉。<br><br>","user_name":"作者回复","comment_id":127851,"uid":"1141464","ip_address":"","utype":1,"ctime":1566803619,"user_name_real":"李兵"}],"discussion_count":4,"race_medal":0,"score":"259264838423","product_id":100033601,"comment_content":"有个问题，在一个块级作用域中，let和const声明的变量是在编译阶段被压入栈中还是执行阶段被压入栈中？在文中的表述来看，第一个let声明的变量是在编译阶段就压入栈中的，但是后面的变量又感觉是在执行是压入栈中，有点混乱。","like_count":60,"discussions":[{"author":{"id":1141464,"avatar":"https://static001.geekbang.org/account/avatar/00/11/6a/d8/228449c9.jpg","nickname":"李兵","note":"","ucode":"3F3D3F6E20209E","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":464677,"discussion_content":"对的，你的理解没错\n\n函数只会在第一次执行的时候被编译，所以编译时变量环境和词法环境最顶层数据已经确定了。\n\n当执行到块级作用域的时候，块级作用域中通过let和const申明的变量会被追加到词法环境中，当这个块执行结束之后，追加到词法作用域的内容又会销毁掉。\n\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566803619,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1991463,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/63/27/deefd03f.jpg","nickname":"HucerF","note":"","ucode":"68F847741F8D8D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":269166,"discussion_content":"个人认为，只有在调用函数内部的函数时，内部的函数才会被编译吧","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1589874290,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1313840,"avatar":"https://static001.geekbang.org/account/avatar/00/14/0c/30/bb4bfe9d.jpg","nickname":"lyonger","note":"","ucode":"E89A75DADEA2A1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":336032,"discussion_content":"函数第一次执行怎么理解，是指编译阶段的执行吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1608459619,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1374421,"avatar":"https://static001.geekbang.org/account/avatar/00/14/f8/d5/fd04fcbc.jpg","nickname":"Kite","note":"","ucode":"9DACE8E0EC84A6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":244544,"discussion_content":"意思是函数内部的函数不会再被编译吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1587610821,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":170997,"user_name":"Tim","can_delete":false,"product_type":"c1","uid":1742972,"ip_address":"","ucode":"F51593465157E4","user_header":"https://static001.geekbang.org/account/avatar/00/1a/98/7c/07e6e7b7.jpg","comment_is_top":false,"comment_ctime":1578815969,"is_pvip":false,"replies":[{"id":"66389","content":"变量初始化和创建再上上一节《变量提升：JavaScript代码是按顺序执行的吗？》中已经讲过了，<br>我们将到了一个变量编译阶段和执行阶段分别要做那些事情。 <br><br>这一节主要是将var和let的区别以及底层实现机制的，我看你的疑问是下面这个问题：<br>function test(){<br>    console.log(a)<br>        let a = 7;<br>}<br>test()<br><br>执行test的时候，编译阶段a已经在内存中，为什么提前访问不了？<br><br>这主要是因为V8虚拟机做了限制，虽然a在内存中，但是当你在let a 之前访问a时，根据ECMAScript定义，虚拟机会阻止的访问！<br><br>如果你还有其它具体的问题，欢迎继续提出！<br>","user_name":"作者回复","comment_id":170997,"uid":"1141464","ip_address":"","utype":1,"ctime":1578892243,"user_name_real":"李兵"}],"discussion_count":11,"race_medal":0,"score":"212032213473","product_id":100033601,"comment_content":"看得很生气，全篇文章不提变量的「创建」「初始化」「赋值」这三种区别，把创建和初始化揉在一起了，也是看了精选留言里第一条评论之后Google才查找到，否则刚开始我真的不理解为啥都已经在词法环境找到了变量却报错了！按照这种理论的话，是否说明词法环境只有变量，并没有等于undefined？<br>真的不需要更新一下吗？？？？？","like_count":49,"discussions":[{"author":{"id":1167767,"avatar":"https://static001.geekbang.org/account/avatar/00/11/d1/97/3abdd9cd.jpg","nickname":"stanny","note":"","ucode":"DD2BB91548A881","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":370034,"discussion_content":"我来补充下 为什么v8 要在uninitialized 阶段报错 \n\n是因为const 不允许前后有两个状态～\n","likes_number":9,"is_delete":false,"is_hidden":false,"ctime":1619258943,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1382182,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q3auHgzwzM6rm3uu73Fq87HVnSzNfrjkCOib0tzicK8KzNTQpQ4sHAfA2RYobPy503zMVNxTMCEXSEErIGYlkC8Q/132","nickname":"是谁走漏了风声","note":"","ucode":"F922F8E1EC070B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1167767,"avatar":"https://static001.geekbang.org/account/avatar/00/11/d1/97/3abdd9cd.jpg","nickname":"stanny","note":"","ucode":"DD2BB91548A881","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":540605,"discussion_content":"赞同","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1640094644,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":370034,"ip_address":""},"score":540605,"extra":""}]},{"author":{"id":1742972,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/98/7c/07e6e7b7.jpg","nickname":"Tim","note":"","ucode":"F51593465157E4","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":182798,"discussion_content":"谢谢老师的回复，老师这么解释以后我理解了，是我自己理解的有偏差！还有就是我太扣字眼的问题了~期待老师的新课！","likes_number":6,"is_delete":false,"is_hidden":false,"ctime":1582457633,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1141464,"avatar":"https://static001.geekbang.org/account/avatar/00/11/6a/d8/228449c9.jpg","nickname":"李兵","note":"","ucode":"3F3D3F6E20209E","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":481198,"discussion_content":"变量初始化和创建再上上一节《变量提升：JavaScript代码是按顺序执行的吗？》中已经讲过了，\n我们将到了一个变量编译阶段和执行阶段分别要做那些事情。 \n\n这一节主要是将var和let的区别以及底层实现机制的，我看你的疑问是下面这个问题：\nfunction test(){\n    console.log(a)\n        let a = 7;\n}\ntest()\n\n执行test的时候，编译阶段a已经在内存中，为什么提前访问不了？\n\n这主要是因为V8虚拟机做了限制，虽然a在内存中，但是当你在let a 之前访问a时，根据ECMAScript定义，虚拟机会阻止的访问！\n\n如果你还有其它具体的问题，欢迎继续提出！\n","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1578892243,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":1,"child_discussions":[{"author":{"id":2987278,"avatar":"https://static001.geekbang.org/account/avatar/00/2d/95/0e/3f513c4b.jpg","nickname":"橘子","note":"","ucode":"53D8BF125A6D62","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1141464,"avatar":"https://static001.geekbang.org/account/avatar/00/11/6a/d8/228449c9.jpg","nickname":"李兵","note":"","ucode":"3F3D3F6E20209E","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":569162,"discussion_content":"看了评论有点懵一个问题 let声明的变量到底有没有在编译阶段被初始化为undefined","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1651334820,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":481198,"ip_address":""},"score":569162,"extra":""}]},{"author":{"id":1446810,"avatar":"https://static001.geekbang.org/account/avatar/00/16/13/9a/842a9dc6.jpg","nickname":"求求你，别卷了！","note":"","ucode":"8F7DE1DF8A0B29","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":390346,"discussion_content":"看评论学的更多","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1629792829,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1625453,"avatar":"https://static001.geekbang.org/account/avatar/00/18/cd/6d/928b0ffd.jpg","nickname":"、轻","note":"","ucode":"30713196ED1AA6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":375705,"discussion_content":"学到了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1621825004,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1806296,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJkkCeRqSibC9qFI0govYb4tT7scTQDIoNwlV229T9BPqFhWUMCFv3OzOoecicmE88khiauJSkcC8WqA/132","nickname":"Harvey","note":"","ucode":"34B03C370302B2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":285081,"discussion_content":"老师 虽然a在内存中了，但是没有被赋值undefined吧？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1592732734,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":3,"child_discussions":[{"author":{"id":1374181,"avatar":"https://static001.geekbang.org/account/avatar/00/14/f7/e5/ec543f3b.jpg","nickname":"张宗伟","note":"","ucode":"1447A20C7A8982","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1806296,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJkkCeRqSibC9qFI0govYb4tT7scTQDIoNwlV229T9BPqFhWUMCFv3OzOoecicmE88khiauJSkcC8WqA/132","nickname":"Harvey","note":"","ucode":"34B03C370302B2","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":346856,"discussion_content":"在浏览器中打断点时，scope中看到是已经赋值 undefined 了。","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1612085031,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":285081,"ip_address":""},"score":346856,"extra":""},{"author":{"id":2368903,"avatar":"https://static001.geekbang.org/account/avatar/00/24/25/87/b1ab2ea3.jpg","nickname":"魏先森","note":"","ucode":"9053D8BA8FFD13","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1374181,"avatar":"https://static001.geekbang.org/account/avatar/00/14/f7/e5/ec543f3b.jpg","nickname":"张宗伟","note":"","ucode":"1447A20C7A8982","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":357355,"discussion_content":"是的，在console那句打印，可以看见a :undifined 了，我们可以认为是v8禁止访问了","likes_number":4,"is_delete":false,"is_hidden":false,"ctime":1615791678,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":346856,"ip_address":""},"score":357355,"extra":""},{"author":{"id":2012017,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/WKgD4vjLMhG5Tb0wFrYQ3prJpMSQgb1iabUNyPEk6cHDVWgHJCOicLVx38Ax3xqB2BrzpIpvlrPMCWjgNL6icXicPg/132","nickname":"过客","note":"","ucode":"335CF35D9E5CC6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2368903,"avatar":"https://static001.geekbang.org/account/avatar/00/24/25/87/b1ab2ea3.jpg","nickname":"魏先森","note":"","ucode":"9053D8BA8FFD13","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":414750,"discussion_content":"赋值undefined算不算初始化呢？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1636884948,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":357355,"ip_address":""},"score":414750,"extra":""}]}]},{"had_liked":false,"id":127591,"user_name":"晓小东","can_delete":false,"product_type":"c1","uid":1194643,"ip_address":"","ucode":"93F9462EAAA63C","user_header":"https://static001.geekbang.org/account/avatar/00/12/3a/93/d7be8a1a.jpg","comment_is_top":false,"comment_ctime":1566745463,"is_pvip":true,"replies":[{"id":"47234","content":"赞","user_name":"作者回复","comment_id":127591,"uid":"1141464","ip_address":"","utype":1,"ctime":1566773180,"user_name_real":"李兵"}],"discussion_count":3,"race_medal":0,"score":"113235895159","product_id":100033601,"comment_content":"在ES3开始，try &#47;catch 分句结构中也具有块作用域。补充……","like_count":26,"discussions":[{"author":{"id":1141464,"avatar":"https://static001.geekbang.org/account/avatar/00/11/6a/d8/228449c9.jpg","nickname":"李兵","note":"","ucode":"3F3D3F6E20209E","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":464563,"discussion_content":"赞","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566773180,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2056440,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/60/f8/659c3799.jpg","nickname":"朱重八","note":"","ucode":"EA15E85C15B752","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":299916,"discussion_content":"try {\n    var a = 7772;\n    throw Error(&#39;eee&#39;);\n} catch (e) {\n    var b = 9993\n}\nconsole.log(a, b) // 7772 9993\n\n你这里说的块级作用域是指的var？我试了下并不是啊","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1597854215,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1474386,"avatar":"https://static001.geekbang.org/account/avatar/00/16/7f/52/6af41d32.jpg","nickname":"tiutiu","note":"","ucode":"4AB10D2003D66B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2056440,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/60/f8/659c3799.jpg","nickname":"朱重八","note":"","ucode":"EA15E85C15B752","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":311704,"discussion_content":"应该指的是 &#39;e&#39; 是在catch块中把🤔","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1602467550,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":299916,"ip_address":""},"score":311704,"extra":""}]}]},{"had_liked":false,"id":127220,"user_name":"李懂","can_delete":false,"product_type":"c1","uid":1330436,"ip_address":"","ucode":"539E6639042C88","user_header":"https://static001.geekbang.org/account/avatar/00/14/4d/04/5e0d3713.jpg","comment_is_top":false,"comment_ctime":1566613491,"is_pvip":false,"replies":[{"id":"47113","content":"暂时性死去是语法规定的，也就是说虽然通过let声明的变量已经在词法环境中了，但是在没有赋值之前，访问该变量JavaScript引擎就会抛出一个错误。","user_name":"作者回复","comment_id":127220,"uid":"1141464","ip_address":"","utype":1,"ctime":1566650825,"user_name_real":"李兵"}],"discussion_count":7,"race_medal":0,"score":"78876024819","product_id":100033601,"comment_content":"执行上下文是在编译时创建的，在执行代码的时候已经有词法环境了，而且变量已经默认初始化了undefiend，为什么还会存在暂时性死区，老师解答一下！","like_count":18,"discussions":[{"author":{"id":1241365,"avatar":"https://static001.geekbang.org/account/avatar/00/12/f1/15/8fcf8038.jpg","nickname":"William","note":"","ucode":"4499F99B180102","race_medal":2,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":6050,"discussion_content":"推测文中的 “第二步，继续执行代码” 下面的那张图有误，当JS引擎刚执行到内部代码块时，词法环境栈顶的“块上下文”里面应该什么都没有，而不该是如图所示，有两个undefined。","likes_number":9,"is_delete":false,"is_hidden":false,"ctime":1566638366,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1024392,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a1/88/35512b90.jpg","nickname":"Domoke","note":"","ucode":"E7EE26B2C0347B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1241365,"avatar":"https://static001.geekbang.org/account/avatar/00/12/f1/15/8fcf8038.jpg","nickname":"William","note":"","ucode":"4499F99B180102","race_medal":2,"user_type":1,"is_pvip":true},"discussion":{"id":23402,"discussion_content":"按照老师的解释，这是一种语法规定，虽然是undefined，但是调用就是会抛异常，不知道我理解的是否正确","likes_number":5,"is_delete":false,"is_hidden":false,"ctime":1569812974,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":6050,"ip_address":""},"score":23402,"extra":""}]},{"author":{"id":1241365,"avatar":"https://static001.geekbang.org/account/avatar/00/12/f1/15/8fcf8038.jpg","nickname":"William","note":"","ucode":"4499F99B180102","race_medal":2,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":6051,"discussion_content":"JS引擎执行到let之后，才初始化变量并申请内存","likes_number":4,"is_delete":false,"is_hidden":false,"ctime":1566638498,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1141464,"avatar":"https://static001.geekbang.org/account/avatar/00/11/6a/d8/228449c9.jpg","nickname":"李兵","note":"","ucode":"3F3D3F6E20209E","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":464382,"discussion_content":"暂时性死去是语法规定的，也就是说虽然通过let声明的变量已经在词法环境中了，但是在没有赋值之前，访问该变量JavaScript引擎就会抛出一个错误。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1566650825,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1308710,"avatar":"https://static001.geekbang.org/account/avatar/00/13/f8/26/e0bd8d24.jpg","nickname":"Crystal","note":"","ucode":"1481B20843D690","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":388959,"discussion_content":"老师的“在没有赋值之前” 是不对的，应该是没有初始化之前存在暂时性死区。 let b; console.log(b); b = 2; 这样，进入这个作用域时，已经创建了 b ,在词法环境存在b = undefined, 但是没有初始化， 执行 let b; 之后变量初始化完成，就不会报错了，而是打印 undefined","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1629078602,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1024485,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a1/e5/1956d405.jpg","nickname":"17丶A","note":"","ucode":"F8BBAC339FC8AE","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":277545,"discussion_content":"老师。如果这么解释的话\n{\n    b = 2;\n    console.log(b);\n    let b;\n}\n不就应该理解为不会报错了吗？应该是执行到let之后，才初始化变量并申请内存的吧？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1591069379,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":2056440,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/60/f8/659c3799.jpg","nickname":"朱重八","note":"","ucode":"EA15E85C15B752","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1024485,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a1/e5/1956d405.jpg","nickname":"17丶A","note":"","ucode":"F8BBAC339FC8AE","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":303654,"discussion_content":"这个的报错是：VM16929:3 Uncaught ReferenceError: Cannot access &#39;b&#39; before initialization，位置是`b = 2`那里报出来的，这里用的应该是LHS查找（You Don&#39;t Know JS里说的），但是并没有创建一个全局变量（如果你在赋值前加个var，也是这一行会报错说：Uncaught SyntaxError: Identifier &#39;b&#39; has already been declared，感觉上就是在一个有let声明的地方，let优先级更高，所以这里的赋值也必须等到实际声明之后），感觉上就是只有执行到let语句之后才会允许你使用你使用b，不管是赋值还是打印，具体就得看代码实现了","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1599323978,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":277545,"ip_address":""},"score":303654,"extra":""}]}]},{"had_liked":false,"id":130827,"user_name":"…Lucky","can_delete":false,"product_type":"c1","uid":1554358,"ip_address":"","ucode":"14D4AB225CB567","user_header":"https://static001.geekbang.org/account/avatar/00/17/b7/b6/d01f8727.jpg","comment_is_top":false,"comment_ctime":1567557729,"is_pvip":false,"discussion_count":5,"race_medal":0,"score":"40222263393","product_id":100033601,"comment_content":"老师，按照最后的思考题。let，const会在编译阶段创建，但不赋值。但是上面几个图中都是直接赋值的undefined。这是否矛盾<br>？","like_count":9,"discussions":[{"author":{"id":1625651,"avatar":"https://static001.geekbang.org/account/avatar/00/18/ce/33/09498236.jpg","nickname":"Geek_1b6022","note":"","ucode":"EBDDEF36DE58DF","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":35612,"discussion_content":"在JavaScript里，一个变量声明了之后不管有没有初始化都可以引用。但是在引用或打印未初始化的变量时，需要用一个“标签”来表明这个变量没有被初始化。又不能用空字符串来表明，因为空字符串也是字符串，所以创造js的人决定用undefined来表明。可以理解成undefined不是值，而是变量的一个“状态”。","likes_number":4,"is_delete":false,"is_hidden":false,"ctime":1571294514,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":3,"child_discussions":[{"author":{"id":1816697,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/b8/79/a4dbe9ee.jpg","nickname":"blueBean","note":"","ucode":"6A68D2414BD904","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1625651,"avatar":"https://static001.geekbang.org/account/avatar/00/18/ce/33/09498236.jpg","nickname":"Geek_1b6022","note":"","ucode":"EBDDEF36DE58DF","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":349673,"discussion_content":"那怎么区分赋值为undefined和未赋值","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1613446904,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":35612,"ip_address":""},"score":349673,"extra":""},{"author":{"id":1106877,"avatar":"https://static001.geekbang.org/account/avatar/00/10/e3/bd/4f1f432c.jpg","nickname":"向上","note":"","ucode":"C9D3001AD1B045","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1816697,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/b8/79/a4dbe9ee.jpg","nickname":"blueBean","note":"","ucode":"6A68D2414BD904","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":387184,"discussion_content":"为什么要区分呢？\n未赋值可以理解为默认值是 undefined。\n就如vue组件props的参数设置了default值是1。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1628039753,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":349673,"ip_address":""},"score":387184,"extra":""},{"author":{"id":1230416,"avatar":"https://static001.geekbang.org/account/avatar/00/12/c6/50/78b81553.jpg","nickname":"lfe","note":"","ucode":"006AF1C623627B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1625651,"avatar":"https://static001.geekbang.org/account/avatar/00/18/ce/33/09498236.jpg","nickname":"Geek_1b6022","note":"","ucode":"EBDDEF36DE58DF","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":549281,"discussion_content":"这是自圆其说吗","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1643808843,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":35612,"ip_address":""},"score":549281,"extra":""}]},{"author":{"id":1173517,"avatar":"https://static001.geekbang.org/account/avatar/00/11/e8/0d/fcd95db8.jpg","nickname":"Lifelong Learning","note":"","ucode":"3E39BED3E13FB4","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":53251,"discussion_content":"在js中其实在访问不存在的变量时,如果在程序中以let,const声明了该变量,那么该变量是不允许被访问的,只有var声明的变量可以被访问,且值是undefined","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1574150452,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":true,"id":127290,"user_name":"William","can_delete":false,"product_type":"c1","uid":1241365,"ip_address":"","ucode":"4499F99B180102","user_header":"https://static001.geekbang.org/account/avatar/00/12/f1/15/8fcf8038.jpg","comment_is_top":false,"comment_ctime":1566636879,"is_pvip":true,"replies":[{"id":"47104","content":"使用let&#47;const声明的变量，伴随着词法环境被创建，但只有在变量的词法绑定(LexicalBinding)已经被求值运算后，才能够被访问。<br><br>你也可以在let b声明之前断点下，看看scope中的值有没有，你会看scope中的值已经存在了。","user_name":"作者回复","comment_id":127290,"uid":"1141464","ip_address":"","utype":1,"ctime":1566648991,"user_name_real":"李兵"}],"discussion_count":8,"race_medal":2,"score":"40221342543","product_id":100033601,"comment_content":"第二步，继续执行代码。 这张图我觉得有错误，当进入foo函数内部的代码块之后，并没有了编译阶段，此时，新创建的栈顶块级作用域的内容为空，而并没有 b = undefined 和 d = undefined 两项内容。 执行完 let b = 3 之后，分配内存，块级作用域出现 b = 3 一项。 执行 let d = 5 之后，为d分配内存，栈顶块级作用域增加一项 d = 5。","like_count":9,"discussions":[{"author":{"id":1241365,"avatar":"https://static001.geekbang.org/account/avatar/00/12/f1/15/8fcf8038.jpg","nickname":"William","note":"","ucode":"4499F99B180102","race_medal":2,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":6093,"discussion_content":"function foo(){\n  var a = 1\n  let b = 2\n  {\n    let b = 3\n    console.log(d)\n    var c = 4\n    let d = 5\n    console.log(a)\n    console.log(b)\n  }\n  console.log(b) \n  console.log(c)\n}   \nfoo()\n\n这段代码scope，执行到 let b = 3 时，只有 b = undefined一行，没有变量d。","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1566664839,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1162123,"avatar":"https://static001.geekbang.org/account/avatar/00/11/bb/8b/028bbe52.jpg","nickname":"戡玉","note":"","ucode":"398F0C0367E795","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1241365,"avatar":"https://static001.geekbang.org/account/avatar/00/12/f1/15/8fcf8038.jpg","nickname":"William","note":"","ucode":"4499F99B180102","race_medal":2,"user_type":1,"is_pvip":true},"discussion":{"id":162548,"discussion_content":"我试验了，老师说的没错；你这个情况是暂时性死区这个机制导致的，如果你区块内的打印换成纯粹字符串，然后断点，你会发现底部d已经是undefind了，但是如果你顶部直接用d的时候，作用域则没创建这个d=undefind；这大概就是暂时性死区做了控制了把，因为其实你这个程序代码报错，提升的也是Cannot access &#39;b&#39; before initialization（初始化前不能访问），如果你不提前访问，它是会初始化为undefind的，你访问了，这个初始化步骤就被死区原理截断了。变量 创建=>初始化=>赋值，死区截断是在初始化之前，所以你看不到作用域里有那个初始化为undefind的项","likes_number":6,"is_delete":false,"is_hidden":false,"ctime":1580997327,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":6093,"ip_address":""},"score":162548,"extra":""},{"author":{"id":2056440,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/60/f8/659c3799.jpg","nickname":"朱重八","note":"","ucode":"EA15E85C15B752","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1162123,"avatar":"https://static001.geekbang.org/account/avatar/00/11/bb/8b/028bbe52.jpg","nickname":"戡玉","note":"","ucode":"398F0C0367E795","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":299918,"discussion_content":"function foo(){\n    var a = 1\n    let b = 2\n    {\n      let b = 3\n      debugger; // 这里直接控制台打印d是undefined\n      console.log(b) // 但是如果是在代码中直接像这样去打印d，就会报`Uncaught ReferenceError: Cannot access &#39;d&#39; before initialization`这个错，所以其实是浏览器做了控制，虽然初始化了undefined，但是就是不给你提前在代码中使用\n      var c = 4\n      let d = 5\n      console.log(a)\n      console.log(b)\n    }\n    console.log(b) \n    console.log(c)\n}   \nfoo()\n\n我试验了是这样的","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1597855455,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":162548,"ip_address":""},"score":299918,"extra":""}]},{"author":{"id":1141464,"avatar":"https://static001.geekbang.org/account/avatar/00/11/6a/d8/228449c9.jpg","nickname":"李兵","note":"","ucode":"3F3D3F6E20209E","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":464419,"discussion_content":"使用let/const声明的变量，伴随着词法环境被创建，但只有在变量的词法绑定(LexicalBinding)已经被求值运算后，才能够被访问。\n\n你也可以在let b声明之前断点下，看看scope中的值有没有，你会看scope中的值已经存在了。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1566648991,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":1,"child_discussions":[{"author":{"id":1230416,"avatar":"https://static001.geekbang.org/account/avatar/00/12/c6/50/78b81553.jpg","nickname":"lfe","note":"","ucode":"006AF1C623627B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1141464,"avatar":"https://static001.geekbang.org/account/avatar/00/11/6a/d8/228449c9.jpg","nickname":"李兵","note":"","ucode":"3F3D3F6E20209E","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":549282,"discussion_content":"词法绑定是啥概念？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1643809005,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":464419,"ip_address":""},"score":549282,"extra":""}]},{"author":{"id":1241365,"avatar":"https://static001.geekbang.org/account/avatar/00/12/f1/15/8fcf8038.jpg","nickname":"William","note":"","ucode":"4499F99B180102","race_medal":2,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":6096,"discussion_content":"function foo(){\n  var a = 1\n  let b = 2\n  {\n    let b = 3\n    console.log(b)\n    var c = 4\n    let d = 5\n    console.log(a)\n    console.log(b)\n  }\n  console.log(b) \n  console.log(c)\n}   \nfoo()\n\n\n这段代码 debug看 scope，又有 d = undefined 了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566665392,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1241365,"avatar":"https://static001.geekbang.org/account/avatar/00/12/f1/15/8fcf8038.jpg","nickname":"William","note":"","ucode":"4499F99B180102","race_medal":2,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":6095,"discussion_content":"语法分析后，JS引擎根据 AST 和 代码来执行吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566665357,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1241365,"avatar":"https://static001.geekbang.org/account/avatar/00/12/f1/15/8fcf8038.jpg","nickname":"William","note":"","ucode":"4499F99B180102","race_medal":2,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":6094,"discussion_content":"感谢老师解答，涉及到具体TMZ的实现上了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566665313,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":129855,"user_name":"爱吃锅巴的沐泡","can_delete":false,"product_type":"c1","uid":1244560,"ip_address":"","ucode":"27451E4F1A22D4","user_header":"https://static001.geekbang.org/account/avatar/00/12/fd/90/ae39017f.jpg","comment_is_top":false,"comment_ctime":1567306180,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"31632077252","product_id":100033601,"comment_content":"对文中foo()函数的分析和一些问题：<br>           我调试了一下，①断点打在 let b = 2，此时的scope中只有local：a = 1，b = undefined，c = undefined；并没有block，这应该说明js是解释性语言，一句一执行的。<br>           ②当断点走到 let b = 3时，这时进入了作用域，scope中有了block：b = undefined，d = undefined，这应该说明在进入作用域之前AST已经生成，并确定了作用域的范围。<br>           问题：1、老师提到在进入作用域时let声明的变量被创建，结合断点可以证明，那么是不是说 let声明的变量在该作用域内提升了，但没有提升赋值语句？因为在②处已经有了d = undefined。<br>           问题：2、把foo()中的作用域变形如下：<br>                           {<br>                                  let b = 3<br>                                  console.log(d)<br>                                  var c = 4<br>                                  let d = 5<br>                                  console.log(a)<br>                                  console.log(b)<br>                             }<br>                   当断点走到 let b = 3处，scope的block中只有b = undefined，并没有d = undefined，是因为“暂时性死区”是js在语法上的设置，防止访问声明前的变量，而在进入作用域之前就会有语法树的生成，所以在编译到console.log(d)时，遇到错误，所以没有在词法环境中创建变量d。这样分析是否正确？","like_count":7,"discussions":[{"author":{"id":1740548,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/8f/04/508f860b.jpg","nickname":"学习使人进步","note":"","ucode":"D959566A25D759","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":120921,"discussion_content":"“有空来我家吃饭？”用来客气客气，但AST分析发现，那人本来就打算来我家吃饭，那我还是“不客气”了吧，以免说了“有空来我家吃饭？”却又不让人家来吃饭。\n放到代码理解，我认为d = undefined中的“undefined”表示一种状态，而不是值。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578304958,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":127355,"user_name":"小锅锅","can_delete":false,"product_type":"c1","uid":1623119,"ip_address":"","ucode":"A6E87261955BDB","user_header":"https://static001.geekbang.org/account/avatar/00/18/c4/4f/fdd51040.jpg","comment_is_top":false,"comment_ctime":1566662822,"is_pvip":false,"replies":[{"id":"47245","content":"c语言都没这概念，因为你在定义之前使用一个变量，首先过不了c语言的编译","user_name":"作者回复","comment_id":127355,"uid":"1141464","ip_address":"","utype":1,"ctime":1566773918,"user_name_real":"李兵"}],"discussion_count":1,"race_medal":0,"score":"31631433894","product_id":100033601,"comment_content":"老师，听你对比了c语言，既然let const存在暂时性死区，那么c语言的变量也存在同样的暂时性死区报错吗？","like_count":7,"discussions":[{"author":{"id":1141464,"avatar":"https://static001.geekbang.org/account/avatar/00/11/6a/d8/228449c9.jpg","nickname":"李兵","note":"","ucode":"3F3D3F6E20209E","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":464455,"discussion_content":"c语言都没这概念，因为你在定义之前使用一个变量，首先过不了c语言的编译","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566773918,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":127250,"user_name":"朙","can_delete":false,"product_type":"c1","uid":1623308,"ip_address":"","ucode":"55FE217C4CEDCC","user_header":"https://static001.geekbang.org/account/avatar/00/18/c5/0c/03bd4b4e.jpg","comment_is_top":false,"comment_ctime":1566621809,"is_pvip":false,"replies":[{"id":"47112","content":"对的，第一个分析的没问题<br>第二个let不会产生变量提升","user_name":"作者回复","comment_id":127250,"uid":"1141464","ip_address":"","utype":1,"ctime":1566650738,"user_name_real":"李兵"}],"discussion_count":2,"race_medal":0,"score":"31631392881","product_id":100033601,"comment_content":"if(0){ var myname = &quot; 极客邦 &quot;} 这段代码里的if条件是false很有意思。是说编译阶段不管if会不会执行。里面的代码都会编译，因此这里的myname变量提升，从而导致上面的console.log(myname)输出undefined吗？ <br>另外let 声明的变量会提升吗？","like_count":7,"discussions":[{"author":{"id":1141464,"avatar":"https://static001.geekbang.org/account/avatar/00/11/6a/d8/228449c9.jpg","nickname":"李兵","note":"","ucode":"3F3D3F6E20209E","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":464398,"discussion_content":"对的，第一个分析的没问题\n第二个let不会产生变量提升","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566650738,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1785291,"avatar":"","nickname":"Geek_82307c","note":"","ucode":"D1118EB397377B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":578463,"discussion_content":"老师，不应该是let会产生变量提升，但是因为暂时性死区访问不了吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1656780081,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":208374,"user_name":"宗麒麟","can_delete":false,"product_type":"c1","uid":1385772,"ip_address":"","ucode":"AC15E3AFAECE3B","user_header":"https://static001.geekbang.org/account/avatar/00/15/25/2c/8f61089f.jpg","comment_is_top":false,"comment_ctime":1587346496,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"23062182976","product_id":100033601,"comment_content":"精选留言也好多精品啊，老师看到应该也很欣慰吧","like_count":5,"discussions":[{"author":{"id":1566826,"avatar":"https://static001.geekbang.org/account/avatar/00/17/e8/6a/6438c61b.jpg","nickname":"小、sen","note":"","ucode":"0FEB3465198330","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":260994,"discussion_content":"评论也很精彩\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1588924801,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":197450,"user_name":"阿郑","can_delete":false,"product_type":"c1","uid":1495155,"ip_address":"","ucode":"BBAC6BFCAFC762","user_header":"https://static001.geekbang.org/account/avatar/00/16/d0/73/06ed7823.jpg","comment_is_top":false,"comment_ctime":1585379164,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"18765248348","product_id":100033601,"comment_content":"ES6明确规定，如果区块中存在let和const命令，这个区块对这些命令声明的变量，从一开始就形成了封闭作用域。凡是在声明之前就使用这些变量，就会报错。<br>总之，在代码块内，使用let命令声明变量之前，该变量都是不可用的。这在语法上，称为“暂时性死区”（temporal dead zone，简称TDZ）<br>因此，思考题中的那段代码，执行会报错：<br>Uncaught SyntaxError: Identifier &#39;myname&#39; has already been declared<br>    at &lt;anonymous&gt;:1:1","like_count":4},{"had_liked":false,"id":174908,"user_name":"sugar","can_delete":false,"product_type":"c1","uid":1167046,"ip_address":"","ucode":"454538FF253B5F","user_header":"https://static001.geekbang.org/account/avatar/00/11/ce/c6/958212b5.jpg","comment_is_top":false,"comment_ctime":1580455099,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"18760324283","product_id":100033601,"comment_content":"想问一下，js代码中这种写法：｛ var a =<br> 100； ｝，和不加外边这层大括号，有什么区别吗？我看到vue的源码中有很多这样的用法，却没明白目的是啥","like_count":4,"discussions":[{"author":{"id":1967577,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/05/d9/0a897f97.jpg","nickname":"shulan","note":"","ucode":"67B94F659DD201","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":257553,"discussion_content":"没区别，你看的源码应该是经过构建工具编译过的，没经过编译的源码中有大量环境的判断，在编译过后环境判断消失，if{}判断环境变成{}","likes_number":5,"is_delete":false,"is_hidden":false,"ctime":1588588323,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1167046,"avatar":"https://static001.geekbang.org/account/avatar/00/11/ce/c6/958212b5.jpg","nickname":"sugar","note":"","ucode":"454538FF253B5F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1967577,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/05/d9/0a897f97.jpg","nickname":"shulan","note":"","ucode":"67B94F659DD201","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":257694,"discussion_content":"嗯 后来我已经在stackoverflow上看到了类似的qa 有关react的也有人这么问","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1588600346,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":257553,"ip_address":""},"score":257694,"extra":""}]}]},{"had_liked":false,"id":193617,"user_name":"love star","can_delete":false,"product_type":"c1","uid":1377886,"ip_address":"","ucode":"11B0D208BA7C7A","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/M5jrJZliboJoN9cNp0iahPqwXe3Zf6CUeiaUMYY8icRY0Hvw9wZ36USS6tP2KE16n2lf8W0IhNWiaoBHUYyrwoT0vrg/132","comment_is_top":false,"comment_ctime":1584934296,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"14469836184","product_id":100033601,"comment_content":"第三次看老师的文章，之前好多点都忽略了，五体投地，惊为天人。<br>复盘的重要性。<br>希望 V8 也能给我知识栈一样的扩充","like_count":3,"discussions":[{"author":{"id":1531784,"avatar":"https://static001.geekbang.org/account/avatar/00/17/5f/88/ed9acee8.jpg","nickname":"大掌柜〈海棠依旧〉","note":"","ucode":"023DF965D55B7A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":556849,"discussion_content":"质量咋样","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1647536092,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":127611,"user_name":"hzj.","can_delete":false,"product_type":"c1","uid":1365557,"ip_address":"","ucode":"ACE09C43A46EEF","user_header":"https://static001.geekbang.org/account/avatar/00/14/d6/35/9b213d2f.jpg","comment_is_top":false,"comment_ctime":1566748476,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"14451650364","product_id":100033601,"comment_content":"这就是 let 的暂时死区~","like_count":3},{"had_liked":false,"id":223452,"user_name":"风语菡","can_delete":false,"product_type":"c1","uid":1027182,"ip_address":"","ucode":"E96C91E47FEF77","user_header":"https://static001.geekbang.org/account/avatar/00/0f/ac/6e/2a272fce.jpg","comment_is_top":false,"comment_ctime":1591092282,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"10181026874","product_id":100033601,"comment_content":"function foo (){  <br>let myname= &#39;极客时间&#39;<br>{<br>  console.log(myname) <br>  let myname= &#39;极客邦&#39;<br>}<br>}<br>foo();<br>执行上面代码输出的结果是：VM5498:5 Uncaught ReferenceError: Cannot access &#39;myname&#39; before initialization<br>    at foo (&lt;anonymous&gt;:5:15)<br>    at &lt;anonymous&gt;:9:1<br>foo @ VM5498:5<br>(anonymous) @ VM5498:9<br><br>若执行下面代码；<br>let myname= &#39;极客时间&#39;<br>{<br>  console.log(myname) <br>  let myname= &#39;极客邦&#39;<br>}<br>则输出的结果是：Uncaught SyntaxError: Identifier &#39;myname&#39; has already been declared<br><br>想请教下，为嘛这两段代码报的错不一致，在函数作用域内，报的是referenceError,而在全局作用域报的是syntaxError。用词法环境分析，有点不太明白","like_count":2,"discussions":[{"author":{"id":1382808,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/YI3GrbPjVs9WpXxtX1Vp8kOiaK5zc8gsxuVjnwhlZO6eWGD1pFviaIlU6rLWBZ54CBQCJh3pdXy0TLwotGsTfk9A/132","nickname":"yuxina","note":"","ucode":"0B312C8A00E50C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":401964,"discussion_content":"建议重新刷新浏览器去跑代码，出现重复声明的错误，是因为前面看文章跑过包含myname声明的代码了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1633774381,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2547859,"avatar":"https://static001.geekbang.org/account/avatar/00/26/e0/93/c512e343.jpg","nickname":"云销雨霁","note":"","ucode":"0F3F5867B9EC82","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":385518,"discussion_content":"Uncaught ReferenceError: Cannot access &#39;myname&#39; before initialization\n我试了，chrome 已经修复","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1627109141,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":171518,"user_name":"爱吃锅巴的沐泡","can_delete":false,"product_type":"c1","uid":1244560,"ip_address":"","ucode":"27451E4F1A22D4","user_header":"https://static001.geekbang.org/account/avatar/00/12/fd/90/ae39017f.jpg","comment_is_top":false,"comment_ctime":1578960354,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"10168894946","product_id":100033601,"comment_content":"老师您好，对于Y  s留言用户的问题，我想接着问：  ES5标准文档中规定，<br>         执行环境包括：词法环境、变量环境、this绑定。<br>         其中执行环境的词法环境和变量环境组件始终为词法环境对象。当创建一个执行环境时，其词法环境组件和变量环境组件最初是同一个值。在该执行环境相关联的代码的执行过程中，变量环境组件永远不变，而词法环境组件有可能改变。<br><br>问题1：变量环境组件永远不变，而词法环境组件有可能改变。               <br>          这里您给出的解释是说词法环境里会有块级作用域的进入和退出，但这是ES5的规范呀，还没有作用域的概念呀，这里不解？<br>          变量环境组件为什么永久不变？<br><br>问题2：创建执行环境时，变量环境和词法环境最初是同一个值，想知道这个值具体是指什么值？<br><br>问题3：我理解的ES5中 变量环境中存储的是提升的变量和函数声明(都是类似var  xx=undefined;    function  funname(){})，所以变量环境是不变的，在执行过程中变量的变化是在词法环境中体现的，词法环境管理着静态作用域的。   到了ES6，有了let和const，是不是就把原来词法环境中变化的变量转移到了变量环境中，把let和const的变化放到了现在的词法环境中。<br><br>希望老师能举个例子或者画个图，详细分析一下在ES5中变量环境和词法环境中变量的变化？<br>ES5和ES6的执行环境的区别是啥？<br><br>问题有点多，但是网上写的和规范内容都不一样，感觉不靠谱，请老师解答！<br>","like_count":2,"discussions":[{"author":{"id":2680454,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJiaWQI7tUfDVmScfCgZIur1B511eHdNsQyjTzQucAOJZrnJfYrEyA1dGOcnZUoqYRzwsbNjlftGhQ/132","nickname":"Geek_21be37","note":"","ucode":"0C761733E11912","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":381863,"discussion_content":"问题2：这个值是函数内部属性【【scope】】\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1625245893,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1959211,"avatar":"https://static001.geekbang.org/account/avatar/00/1d/e5/2b/59bde898.jpg","nickname":"Jack.Huang","note":"","ucode":"FD089E25D93A26","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":285183,"discussion_content":"在ES5规范中，var声明的变量和函数定义会存在变量环境中，ES6规范中，变量环境只存放var声明的变量，函数定义与let，const声明的变量会存在词法环境中。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1592755921,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":166743,"user_name":"-_-|||","can_delete":false,"product_type":"c1","uid":1328142,"ip_address":"","ucode":"94B21594658BF9","user_header":"https://static001.geekbang.org/account/avatar/00/14/44/0e/ce14b7d3.jpg","comment_is_top":false,"comment_ctime":1577583376,"is_pvip":false,"discussion_count":0,"race_medal":1,"score":"5872550672","product_id":100033601,"comment_content":"文中”通过 let 声明的变量，在编译阶段会被存放到词法环境（Lexical Environment）中。<br>在函数的作用域内部，通过 let 声明的变量并没有被存放到词法环境中。”，第二段”通过 let 声明的变量并没有被存放到词法环境中”，可是上图中画的声明的变量b已经放到词法环境中了，只不过没有赋值，所以是不是写错了，应该是没有赋值，而不是没有放到词法环境中。","like_count":1},{"had_liked":false,"id":159402,"user_name":"Geek_East","can_delete":false,"product_type":"c1","uid":1589947,"ip_address":"","ucode":"A1A7CBF9B8FB2D","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eqXKSvfaeicog2Ficx4W3pNeA1KRLOS7iaFy2uoxCDoYpGkGnP6KPGecKia6Dr3MtCkNGpHxAzmTMd0LA/132","comment_is_top":false,"comment_ctime":1575615466,"is_pvip":true,"replies":[{"id":"60927","content":"这是两样不同的东西，一个表示一个表示函数运行时的上下文，一个表示词法作用域！<br><br>我会在下篇介绍V8的专栏中详细分析这块内容！","user_name":"作者回复","comment_id":159402,"uid":"1141464","ip_address":"","utype":1,"ctime":1575622798,"user_name_real":"李兵"}],"discussion_count":1,"race_medal":0,"score":"5870582762","product_id":100033601,"comment_content":"我想，理解execution context和scope的区别是理解这个问题的一个关键；很多时候执行上下文和作用域都混着说","like_count":1,"discussions":[{"author":{"id":1141464,"avatar":"https://static001.geekbang.org/account/avatar/00/11/6a/d8/228449c9.jpg","nickname":"李兵","note":"","ucode":"3F3D3F6E20209E","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":477037,"discussion_content":"这是两样不同的东西，一个表示一个表示函数运行时的上下文，一个表示词法作用域！\n\n我会在下篇介绍V8的专栏中详细分析这块内容！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1575622798,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":133962,"user_name":"Kyeon","can_delete":false,"product_type":"c1","uid":1611794,"ip_address":"","ucode":"2F1B07584597E0","user_header":"https://static001.geekbang.org/account/avatar/00/18/98/12/60a9a434.jpg","comment_is_top":false,"comment_ctime":1568708068,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"5863675364","product_id":100033601,"comment_content":"老师好，看到您在评论中说let并不会变量提升。那么，课后题浏览器报Cannot access &#39;myname&#39; before initialization，看起来像是引擎已经知道有myname这么个变量了。但是如果按照let变量不会提升的话，那引擎是怎么知道myname这个变量尚未初始化的呢？谢谢～","like_count":1,"discussions":[{"author":{"id":1049741,"avatar":"https://static001.geekbang.org/account/avatar/00/10/04/8d/005c2ff3.jpg","nickname":"weineel","note":"","ucode":"6DC6EF4F256A53","race_medal":2,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":19868,"discussion_content":"变量提升指的是编译时把 var 声明的变量放到变量环境，进入块级作用域是不编译的，所以不存在变量提升。进入块级作用域的时候会先把 const/let 声明的变量绑定到词法环境(即引擎已经知道有这么个变量了)，但是在没有执行到声明的那一行时，是不能访问的，暂时性死区就是描述这种现象的术语。","likes_number":14,"is_delete":false,"is_hidden":false,"ctime":1569233252,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":129466,"user_name":"无名","can_delete":false,"product_type":"c1","uid":1110113,"ip_address":"","ucode":"2D2E877CF97138","user_header":"https://static001.geekbang.org/account/avatar/00/10/f0/61/68462a07.jpg","comment_is_top":false,"comment_ctime":1567133791,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5862101087","product_id":100033601,"comment_content":"1&lt;script type=&quot;text&#47;javascript&quot;&gt;<br>2\tlet myname = &quot;outer name&quot;; <br>3\t{    <br>4\t\tlet myage = 10;<br>5\t\tlet myclazz = &quot;1(4)班&quot;;<br>6\t\tconsole.log(myname); <br>7\t\tlet myname = &#39;inner name&#39;;<br>8\t}<br>9&lt;&#47;script&gt;<br><br>老师，对于以上代码，我有些疑惑：<br>1、断点到2的位置时：<br>\t我的理解：myname 应该在【词法环境】中创建了【Script区】，里面：myname=undefined<br>\t实际上：没有看到myname=undefined，执行完2时，才在右边的【Script区】中显示myname=&quot;outer name&quot;; <br><br>2、断点到4的位置时：<br>\t我的理解：myage、myclazz、myname应该在【词法环境】中创建了【Block区】，里面：myage=undefined、myclazz=undefined、myname=undefined；然后执行完4时，myage=10；然后执行完5时，myclazz = &quot;1(4)班&quot;；然后执行到6时，报Cannot access &#39;myname&#39; before initialization （原因是【暂时性死区】）；<br>\t实际上：在【词法环境】中是创建了【Block区】，但只看到了myage=undefined、myclazz=undefined；没有看到myname=undefined。","like_count":1},{"had_liked":false,"id":127199,"user_name":"蓝配鸡","can_delete":false,"product_type":"c1","uid":1348738,"ip_address":"","ucode":"C79A7CA8885B7C","user_header":"https://static001.geekbang.org/account/avatar/00/14/94/82/d0a417ba.jpg","comment_is_top":false,"comment_ctime":1566608596,"is_pvip":false,"replies":[{"id":"47115","content":"还要考虑暂时性死区的问题，这个我在文中没介绍，可以自行搜索下。可以参考下其它评论。","user_name":"作者回复","user_name_real":"李兵","uid":"1141464","ctime":1566651018,"ip_address":"","comment_id":127199,"utype":1}],"discussion_count":3,"race_medal":0,"score":"5861575892","product_id":100033601,"comment_content":"let myname= &#39;极客时间&#39;<br>{<br>  console.log(myname) <br>  let myname= &#39;极客邦&#39;<br>}<br><br>编译过程：<br>生成执行上下文压入栈<br>变量环境为空<br>词法环境中myname=undefined压入栈<br><br>执行过程：<br>词法环境中myname=极客时间<br>新开一个 myname =undefined 压入词法环境栈<br>查找myname并输出undefined <br>赋值当前栈头上myname=极客邦<br>pop栈头<br><br>结束<br><br>","like_count":1,"discussions":[{"author":{"id":1141464,"avatar":"https://static001.geekbang.org/account/avatar/00/11/6a/d8/228449c9.jpg","nickname":"李兵","note":"","ucode":"3F3D3F6E20209E","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":464371,"discussion_content":"还要考虑暂时性死区的问题，这个我在文中没介绍，可以自行搜索下。可以参考下其它评论。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566651018,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1241365,"avatar":"https://static001.geekbang.org/account/avatar/00/12/f1/15/8fcf8038.jpg","nickname":"William","note":"","ucode":"4499F99B180102","race_medal":2,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":6047,"discussion_content":"我推测进入foo函数的代码块之后，JS执行引擎在词法环境的栈顶创建一个新的执行上下文之后，并不会 把 myname = undefined 压入当前执行上下文，因为这时候已经没有编译器的事情了。  JS引擎执行 let mayname = &#39;极客邦’ 之后，才会为 myname 变量申请内存空间，然后把 mayname = &#39;极客邦’ 压入到当前执行上下文中。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1566637454,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1241365,"avatar":"https://static001.geekbang.org/account/avatar/00/12/f1/15/8fcf8038.jpg","nickname":"William","note":"","ucode":"4499F99B180102","race_medal":2,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":6046,"discussion_content":"如果按照这个流程的话，输出结果应该为 undefined 了。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1566637143,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":127195,"user_name":"爱吃锅巴的沐泡","can_delete":false,"product_type":"c1","uid":1244560,"ip_address":"","ucode":"27451E4F1A22D4","user_header":"https://static001.geekbang.org/account/avatar/00/12/fd/90/ae39017f.jpg","comment_is_top":false,"comment_ctime":1566606819,"is_pvip":false,"replies":[{"id":"47116","content":"暂时性死区，你可以参考下其它评论","user_name":"作者回复","user_name_real":"李兵","uid":"1141464","ctime":1566651198,"ip_address":"","comment_id":127195,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5861574115","product_id":100033601,"comment_content":"有个疑问：<br>在思考题中，<br>1、执行到console.log(myname)这句话时，编译阶段已经完成，那么词法环境中的栈顶 是不是已经有了该作用域块了，let myname =‘极客邦’  是不是也已经在栈顶的作用域快中了？<br>2、执行到console.log(myname)这句话时，是按着从词法环境栈顶到栈底到变量环境的顺序查找，栈底已经存在了函数级的 let myname了，那为什么还是会报错呢？","like_count":1,"discussions":[{"author":{"id":1141464,"avatar":"https://static001.geekbang.org/account/avatar/00/11/6a/d8/228449c9.jpg","nickname":"李兵","note":"","ucode":"3F3D3F6E20209E","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":464369,"discussion_content":"暂时性死区，你可以参考下其它评论","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566651198,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":127188,"user_name":"mfist","can_delete":false,"product_type":"c1","uid":1373624,"ip_address":"","ucode":"4F99F422C23FB4","user_header":"https://static001.geekbang.org/account/avatar/00/14/f5/b8/9f165f4b.jpg","comment_is_top":false,"comment_ctime":1566601433,"is_pvip":false,"replies":[{"id":"47057","content":"对的，你的分析没问题，这两行都会报错","user_name":"作者回复","user_name_real":"李兵","uid":"1141464","ctime":1566602364,"ip_address":"","comment_id":127188,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5861568729","product_id":100033601,"comment_content":"1. 在块级作用域中，从｛开始到let myname= &#39;极客邦&#39; 代码之间会形成一个暂时性死区，如果中间去访问变量myname，会报初始化之前不能访问myname的错误。Uncaught ReferenceError<br><br>2. 另外上面的一个foo函数也会报d没有定义吧，d在块级作用域中声明，在外面是访问不到的<br>function foo(){<br>    var a = 1<br>    let b = 2<br>    {<br>      let b = 3<br>      var c = 4<br>      let d = 5<br>      console.log(a)<br>      console.log(b)<br>    }<br>    console.log(b) <br>    console.log(c)<br>    console.log(d)<br>}   <br>foo()<br>","like_count":1,"discussions":[{"author":{"id":1141464,"avatar":"https://static001.geekbang.org/account/avatar/00/11/6a/d8/228449c9.jpg","nickname":"李兵","note":"","ucode":"3F3D3F6E20209E","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":464365,"discussion_content":"对的，你的分析没问题，这两行都会报错","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566602364,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":127184,"user_name":"pyhhou","can_delete":false,"product_type":"c1","uid":1256496,"ip_address":"","ucode":"31EF8D50CF91A5","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/ibZVAmmdAibBeVpUjzwId8ibgRzNk7fkuR5pgVicB5mFSjjmt2eNadlykVLKCyGA0GxGffbhqLsHnhDRgyzxcKUhjg/132","comment_is_top":false,"comment_ctime":1566592744,"is_pvip":false,"replies":[{"id":"47056","content":"不写分号，代码更加清晰<br><br>另外这段代码就是会报错的，因为涉及到另外一个知识点，我在文中没有介绍，letl和const要在声明之后才能使用，很多人称这个为“暂时性死区”！<br><br>通过题目实践下会加深印象。","user_name":"作者回复","user_name_real":"李兵","uid":"1141464","ctime":1566602311,"ip_address":"","comment_id":127184,"utype":1}],"discussion_count":5,"race_medal":0,"score":"5861560040","product_id":100033601,"comment_content":"思考题中，在 node 环境中 run 的话，console.log(myname) 这一行会报错，但是在网上的一些 JavaScript 的 editor 中 run，输出就是 undefined。一开始没有 run 代码，把词法环境当作变量环境来分析的话，我认为会输出 undefined，可能在 node 环境下，词法环境中可能还是会有逻辑去判断一个声明是在运行代码前还是后，比如<br>let a;<br>console.log(a);    &#47;&#47; undefined<br><br>如果声明在运行之后就会报错：<br>console.log(a);  &#47;&#47; 报错<br>let a;<br><br>想请教老师的一点细节方面的问题，就是平时写 JavaScript 代码每行结束后需要带上分号吗？看老师您这里写的代码有很多结束都没有带分号，但是之前看到过一篇文章说 JavaScript 里面是通过分号去判断一个语句的结束，不知道这一点在实际的开发中是否有影响？<br>","like_count":1,"discussions":[{"author":{"id":1141464,"avatar":"https://static001.geekbang.org/account/avatar/00/11/6a/d8/228449c9.jpg","nickname":"李兵","note":"","ucode":"3F3D3F6E20209E","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":464363,"discussion_content":"不写分号，代码更加清晰\n\n另外这段代码就是会报错的，因为涉及到另外一个知识点，我在文中没有介绍，letl和const要在声明之后才能使用，很多人称这个为“暂时性死区”！\n\n通过题目实践下会加深印象。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566602311,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1110113,"avatar":"https://static001.geekbang.org/account/avatar/00/10/f0/61/68462a07.jpg","nickname":"无名","note":"","ucode":"2D2E877CF97138","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":6828,"discussion_content":"不写分号，对压缩js文件会有影响吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567132751,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1456392,"avatar":"https://static001.geekbang.org/account/avatar/00/16/39/08/09055b47.jpg","nickname":"淡","note":"","ucode":"6856CA319DE2F0","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":6435,"discussion_content":"从其他语言过来的，不写分号会难受，￣□￣｜｜","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566898688,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1373624,"avatar":"https://static001.geekbang.org/account/avatar/00/14/f5/b8/9f165f4b.jpg","nickname":"mfist","note":"","ucode":"4F99F422C23FB4","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":6011,"discussion_content":"1. 关于加不加分好，前端是分为两派的。有人支持加，有人觉得不加好。\n2. JavaScript有完善进行分句的判断规则，所以尤大神（vue作者）支持不加。但是看react源码又是加分号的。两者没有好坏之分，只是个人习惯差异。\n3. 关于加不加分号，winter专栏有一篇文章专门讲的，可以去看下。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566604775,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1256496,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/ibZVAmmdAibBeVpUjzwId8ibgRzNk7fkuR5pgVicB5mFSjjmt2eNadlykVLKCyGA0GxGffbhqLsHnhDRgyzxcKUhjg/132","nickname":"pyhhou","note":"","ucode":"31EF8D50CF91A5","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1373624,"avatar":"https://static001.geekbang.org/account/avatar/00/14/f5/b8/9f165f4b.jpg","nickname":"mfist","note":"","ucode":"4F99F422C23FB4","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":6334,"discussion_content":"好的，感谢建议👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566834957,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":6011,"ip_address":""},"score":6334,"extra":""}]}]},{"had_liked":false,"id":358902,"user_name":"Herman","can_delete":false,"product_type":"c1","uid":1235569,"ip_address":"浙江","ucode":"6728A2B034CB59","user_header":"https://static001.geekbang.org/account/avatar/00/12/da/71/a0121a65.jpg","comment_is_top":false,"comment_ctime":1664986074,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1664986074","product_id":100033601,"comment_content":"关于留言一可以看看这个 https:&#47;&#47;zhuanlan.zhihu.com&#47;p&#47;47155064","like_count":0},{"had_liked":false,"id":351058,"user_name":"不二","can_delete":false,"product_type":"c1","uid":1253124,"ip_address":"","ucode":"B018B32EDB44E5","user_header":"https://static001.geekbang.org/account/avatar/00/13/1f/04/1cddf65b.jpg","comment_is_top":false,"comment_ctime":1657505862,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1657505862","product_id":100033601,"comment_content":"老师，有个疑问希望解答， 为什么要涉及声明提升这块，文章刚开始说到是与es6之前没有块级作用域有关的，但是好像没有get到没有块级作用域和声明提升这块的联系是什么？","like_count":0},{"had_liked":false,"id":336958,"user_name":"一七","can_delete":false,"product_type":"c1","uid":2930028,"ip_address":"","ucode":"681C7720FAB84B","user_header":"https://static001.geekbang.org/account/avatar/00/2c/b5/6c/18c5b2ed.jpg","comment_is_top":false,"comment_ctime":1646491041,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1646491041","product_id":100033601,"comment_content":"感觉没有必要纠结let声明的变量在编译阶段给了什么值，反正提前访问会报错，是undefined还是什么的不重要","like_count":0},{"had_liked":false,"id":332893,"user_name":"蝉生","can_delete":false,"product_type":"c1","uid":2298181,"ip_address":"","ucode":"27FDB6F222DB14","user_header":"https://static001.geekbang.org/account/avatar/00/23/11/45/8cf3f7ba.jpg","comment_is_top":false,"comment_ctime":1643792707,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1643792707","product_id":100033601,"comment_content":"let&#47;const在初始化时会被置为&lt;uninitialized&gt;标志位，在没有执行到let xxx 或 let xxx = ???（赋值行）的具体行时，提前读取变量会报ReferenceError的错误。（这个特性又叫暂时性死区）<br>var在初始化时先被赋值为undefined，即使没有执行到赋值行，仍可以读取var变量(undefined)。","like_count":0},{"had_liked":false,"id":327469,"user_name":"hao-kuai","can_delete":false,"product_type":"c1","uid":1272354,"ip_address":"","ucode":"DFDFDDDBA4503C","user_header":"https://static001.geekbang.org/account/avatar/00/13/6a/22/527904b2.jpg","comment_is_top":false,"comment_ctime":1640142026,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1640142026","product_id":100033601,"comment_content":"总结：<br>1. var 声明的变量进入变量环境<br>2. let、const 声明的变量进入词法环境<br>3. 变量查找顺序是：词法环境--变量环境<br>4. var 变量提升：最近的函数作用域--全局作用域<br>5.  let、const 变量“提升”：块级作用域--函数作用域--全局作用域（提升表现为中断变量查找顺序）","like_count":0},{"had_liked":false,"id":326415,"user_name":"Yvan","can_delete":false,"product_type":"c1","uid":2159152,"ip_address":"","ucode":"DA5BB215E65ED3","user_header":"https://static001.geekbang.org/account/avatar/00/20/f2/30/5b677e8d.jpg","comment_is_top":false,"comment_ctime":1639521189,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1639521189","product_id":100033601,"comment_content":"为什么先查找词法环境再查找变量环境，如果规定就是这样，这么重要的概念应该特别说明一下吧。","like_count":0},{"had_liked":false,"id":324400,"user_name":"秋裤布里克","can_delete":false,"product_type":"c1","uid":1451861,"ip_address":"","ucode":"FE7D3F9F272861","user_header":"https://static001.geekbang.org/account/avatar/00/16/27/55/5811575e.jpg","comment_is_top":false,"comment_ctime":1638415723,"is_pvip":false,"discussion_count":4,"race_medal":0,"score":"1638415723","product_id":100033601,"comment_content":"李兵老师您好，之所以现在才留言是因为最近恰好在重温这一块，遇到一个问题，有一个点让我想了两天也没有想通，所以如果您看到的话，希望能得到您的指点：<br>{<br>  a = 1<br>  function a() {}<br>  a = 2<br>  console.log(a) <br>}<br>console.log(a) <br>我们知道在块里，function a 会提升，同时在全局隐式的创建一个变量a。当执行到a=1的时候，全局的a被重置为1。我的疑惑在于当执行到a=2时，为什么全局的a没有被重置为2.最后打印出来的a还是1。希望您能帮我解答这个问题，解决困扰我好几天的问题，谢谢<br>","like_count":0,"discussions":[{"author":{"id":1564786,"avatar":"https://static001.geekbang.org/account/avatar/00/17/e0/72/6e0314e7.jpg","nickname":"Ace","note":"","ucode":"C77191A6B18845","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":547918,"discussion_content":"楼上说的对，在块级作用域中声明函数会做特殊处理，function a() {} 可以看做是 let a = function () {}，a = 1 创建的是全局变量 a，a = 2 修改的是局部变量 a，所以块级作用域内部打印的是 2，外部打印的是 1。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1642933010,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":2166409,"avatar":"","nickname":"Geek_556f65","note":"","ucode":"9BF640F25C2EBF","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1564786,"avatar":"https://static001.geekbang.org/account/avatar/00/17/e0/72/6e0314e7.jpg","nickname":"Ace","note":"","ucode":"C77191A6B18845","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":584930,"discussion_content":"按照你的推理，a=1不应该是给块作用域的词法环境的function a 提升声明的变量a赋值为1吗","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1661230136,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":547918,"ip_address":"上海"},"score":584930,"extra":""}]},{"author":{"id":1661407,"avatar":"https://static001.geekbang.org/account/avatar/00/19/59/df/2e50f06c.jpg","nickname":"simple","note":"","ucode":"A43F540AE58A9B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":538562,"discussion_content":"第7讲评论区有个类似的提问，老师的回复是 “ES6规定块级作用域内部声明的函数，和通过let声明变量的行为类似。”，所以a=2应该是块级作用域值。\n","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1639446802,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2998738,"avatar":"https://static001.geekbang.org/account/avatar/00/2d/c1/d2/4471188d.jpg","nickname":"MYY","note":"","ucode":"22F8DAE2291116","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":586327,"discussion_content":"https://stackoverflow.com/questions/58619924/function-declaration-in-block-moving-temporary-value-outside-of-block 可以参考下","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1662108718,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"广东"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":314868,"user_name":"Leon","can_delete":false,"product_type":"c1","uid":2444746,"ip_address":"","ucode":"B019C257540168","user_header":"https://static001.geekbang.org/account/avatar/00/25/4d/ca/e1dc8911.jpg","comment_is_top":false,"comment_ctime":1633513302,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1633513302","product_id":100033601,"comment_content":"请问 {<br>        function a(){}<br>        a = 123;<br>        console.log(a)<br>    }<br>    console.log(a)<br>和 <br>{<br>    a = 123;<br>        function a(){}<br>        console.log(a)<br>    }<br>    console.log(a)<br>运行结果为什么会不一样呢？","like_count":0},{"had_liked":false,"id":313489,"user_name":"HXL","can_delete":false,"product_type":"c1","uid":2631455,"ip_address":"","ucode":"97298EEC95BFCA","user_header":"https://static001.geekbang.org/account/avatar/00/28/27/1f/42059b0f.jpg","comment_is_top":false,"comment_ctime":1632462632,"is_pvip":true,"discussion_count":1,"race_medal":0,"score":"1632462632","product_id":100033601,"comment_content":"协程是对应 js 中的什么呢，我记得fiber就是协程","like_count":0,"discussions":[{"author":{"id":1564786,"avatar":"https://static001.geekbang.org/account/avatar/00/17/e0/72/6e0314e7.jpg","nickname":"Ace","note":"","ucode":"C77191A6B18845","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":548418,"discussion_content":"对应 ES6 的 Generator","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1643187818,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":309533,"user_name":"静✨","can_delete":false,"product_type":"c1","uid":1658413,"ip_address":"","ucode":"1B33229C206339","user_header":"https://static001.geekbang.org/account/avatar/00/19/4e/2d/06d3f9f5.jpg","comment_is_top":false,"comment_ctime":1630218073,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1630218073","product_id":100033601,"comment_content":"学java的人看着真的觉得匪夷所思…这些东西在java里肯定都过不了编译(","like_count":0},{"had_liked":false,"id":306057,"user_name":"取货码K523","can_delete":false,"product_type":"c1","uid":1384786,"ip_address":"","ucode":"799E4860DD72B9","user_header":"https://static001.geekbang.org/account/avatar/00/15/21/52/6dd38474.jpg","comment_is_top":false,"comment_ctime":1628324032,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1628324032","product_id":100033601,"comment_content":"这个时间来看是不是晚了。","like_count":0},{"had_liked":false,"id":300842,"user_name":"秋风起","can_delete":false,"product_type":"c1","uid":2373679,"ip_address":"","ucode":"F9B0C8A78258FC","user_header":"https://static001.geekbang.org/account/avatar/00/24/38/2f/29f93fcf.jpg","comment_is_top":false,"comment_ctime":1625402627,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1625402627","product_id":100033601,"comment_content":"老师，如文中所说，块级作用域内声明的let和const变量在执行阶段入栈。作用域的策略在程序执行时才知道，是否可以理解为一种动态作用域呢？词法作用域不是静态作用域吗？很困惑，还请老师解答一下。","like_count":0},{"had_liked":false,"id":292109,"user_name":"趁你还年轻233","can_delete":false,"product_type":"c1","uid":1053875,"ip_address":"","ucode":"B7CC120EF42980","user_header":"https://static001.geekbang.org/account/avatar/00/10/14/b3/b6e1817a.jpg","comment_is_top":false,"comment_ctime":1620695657,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1620695657","product_id":100033601,"comment_content":"最高赞答案有问题：let和const并不存在变量提升。<br><br><br>let和const不会像var一样变量声明提升！<br><br>原因是：const，let存在temporal dead zone！<br><br>因此不能let ，const赋值前使用变量。<br><br>在说变量提升之前，先了解一个概念，Temporal Dead Zone，指的是从block创建到初始化完成之间的时间。用var不会存在Temporal Dead Zone，因为用var声明的变量，初始值立即默认赋予undefined，不会像let这样，存在Temporal Dead Zone，不会立即为其赋undefined，所以会报ReferenceError错误。<br><br>function do_something() {<br>    console.log(bar); &#47;&#47; undefined<br>    console.log(foo); &#47;&#47; ReferenceRrror<br>    var bar = 1;<br>    let foo = 2;<br>}<br><br>很久之前我写过一篇类似的博客：https:&#47;&#47;juejin.cn&#47;post&#47;6844903729204822024<br>","like_count":0},{"had_liked":false,"id":286901,"user_name":"错夕","can_delete":false,"product_type":"c1","uid":1111184,"ip_address":"","ucode":"7452E1D7B38236","user_header":"https://static001.geekbang.org/account/avatar/00/10/f4/90/00e44acd.jpg","comment_is_top":false,"comment_ctime":1617674293,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1617674293","product_id":100033601,"comment_content":"块级作用域通过 词法环境实现 有相关资料推荐吗","like_count":0},{"had_liked":false,"id":286094,"user_name":"Roger","can_delete":false,"product_type":"c1","uid":1385748,"ip_address":"","ucode":"AFFF9B1DC8FB19","user_header":"https://static001.geekbang.org/account/avatar/00/15/25/14/fb7382de.jpg","comment_is_top":false,"comment_ctime":1617155368,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1617155368","product_id":100033601,"comment_content":"&#39;use strict&#39;;<br>(function () {<br>    debugger;<br>    console.log(a);<br>    let a = 13;<br>})(); <br>加了断点，打印就是undefined了，在chrome 的Local面板也能看到是undefined。老师能讲一下debug对代码运行的影响吗","like_count":0},{"had_liked":false,"id":281688,"user_name":"蓝歌","can_delete":false,"product_type":"c1","uid":1237534,"ip_address":"","ucode":"319E856456231D","user_header":"https://static001.geekbang.org/account/avatar/00/12/e2/1e/1e0bee32.jpg","comment_is_top":false,"comment_ctime":1614847934,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"1614847934","product_id":100033601,"comment_content":"function f() {<br>    var a = &#39;极客学院&#39;;<br>    {<br>        a = &#39;极客邦&#39;;<br>        function a () {}<br>        a = &#39;空空如也&#39;<br>    }<br>    console.log(a) &#47;&#47; 极客邦<br>}<br>f()<br>按照变量提升为什么在chrome浏览器中输出的是 极客邦 呢？","like_count":0,"discussions":[{"author":{"id":1273044,"avatar":"https://static001.geekbang.org/account/avatar/00/13/6c/d4/85ef1463.jpg","nickname":"路漫漫","note":"","ucode":"F70F1DC612DE9D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":539160,"discussion_content":"这个你有答案了吗","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1639625601,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1656342,"avatar":"https://static001.geekbang.org/account/avatar/00/19/46/16/7eab6017.jpg","nickname":"undefined","note":"","ucode":"8114385B49FDFE","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":353004,"discussion_content":"这个你有答案了吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1614945442,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":276708,"user_name":"张宗伟","can_delete":false,"product_type":"c1","uid":1374181,"ip_address":"","ucode":"1447A20C7A8982","user_header":"https://static001.geekbang.org/account/avatar/00/14/f7/e5/ec543f3b.jpg","comment_is_top":false,"comment_ctime":1612085572,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1612085572","product_id":100033601,"comment_content":"老师您好！有一些疑问请教一下：<br>1. 通过例子中函数foo中执行 console.log(a)结果是 1，说明 变量环境 和 词法环境 是相通的，只是在逻辑&#47;理解上有这个区分？<br>2. 文中留到最后的思考题，执行会报错，但是按照正常的思维，应该是 “极客时间”。解释都是 TDZ，是不是说明 变量提升 还是存在，这样做是为什么兼容之前的吗？","like_count":0},{"had_liked":false,"id":276487,"user_name":"Geek_1b6022","can_delete":false,"product_type":"c1","uid":1625651,"ip_address":"","ucode":"EBDDEF36DE58DF","user_header":"https://static001.geekbang.org/account/avatar/00/18/ce/33/09498236.jpg","comment_is_top":false,"comment_ctime":1611971525,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1611971525","product_id":100033601,"comment_content":"是不是可以这么理解，用let和const声明的变量在变量环境或词法环境中会被创建并且初始化成undefined，和var一样。不同的是let和const变量的“初始化”这个作用没有被V8虚拟机“提升”，所以会出现“暂时性死区”。不能直接认为初始化没被提升就等同于let和const变量没有初始化。提不提升是V8虚拟机说了算的。","like_count":0},{"had_liked":false,"id":269353,"user_name":"Febeoro","can_delete":false,"product_type":"c1","uid":1862428,"ip_address":"","ucode":"E38D446F570615","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLVOtDbD1x5k3t3icqkV3dC9YsWVxlXZ3ekmFG3ps1wBtGymbq39xiaXZruf5OxshyGSQbRyicsQQxdQ/132","comment_is_top":false,"comment_ctime":1608621180,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1608621180","product_id":100033601,"comment_content":"https:&#47;&#47;blog.csdn.net&#47;itKingOne&#47;article&#47;details&#47;77505124 可以看看这个，感觉更清楚","like_count":0},{"had_liked":false,"id":268428,"user_name":"不二","can_delete":false,"product_type":"c1","uid":1253124,"ip_address":"","ucode":"B018B32EDB44E5","user_header":"https://static001.geekbang.org/account/avatar/00/13/1f/04/1cddf65b.jpg","comment_is_top":false,"comment_ctime":1608193147,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1608193147","product_id":100033601,"comment_content":"&#47;&#47;案例3<br>function Foo() {<br>    for (var i = 0; i &lt; 5; i++) {<br>        setTimeout(function timer() {<br>            console.log(i); &#47;&#47;<br>        }, 1000);<br>    }<br>}<br>Foo(); &#47;&#47;1s后连续输出 5 5 5 5 5<br><br><br>&#47;&#47; 案例4：变种一下，把var变成let<br>function Foo() {<br>    for (let i = 0; i &lt; 5; i++) {<br>        setTimeout(function timer() {<br>            console.log(i);<br>        }, 1000);<br>    }<br>}<br>Foo(); &#47;&#47;1s后输出： 1 2 3 4 5<br><br><br>老师，一定要帮我解答一下这个问题，for循环，如果是let的话，i变量在执行上下文中词法环境如何存储的？我目前的理解是： 例如循环了5次，那么就会在词法环境中的栈中压入5个i，值依次是012345， 而不是只压一个i，然后遍历去改变i的值，如果是这样的话，就和var没区别啦，我这样理解有问题吗？<br><br>","like_count":0,"discussions":[{"author":{"id":2653213,"avatar":"https://static001.geekbang.org/account/avatar/00/28/7c/1d/81902e6a.jpg","nickname":"..................东","note":"","ucode":"03E333B1FF226A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":390993,"discussion_content":"我的理解是let i是定义在块的内部，循环5次，就是定义了5个块。每次块的初始值都不同，循环展开后类似于\n{     let i = 0\n        setTimeout(function timer() {\n            console.log(i);\n        }, 1000);\n    },\n\n{     let i = 1\n        setTimeout(function timer() {\n            console.log(i);\n        }, 1000);\n  },\n\n{     let i = 2\n        setTimeout(function timer() {\n            console.log(i);\n        }, 1000);\n  },\n\n...\n\n因为每次执行完一个块后 都会销毁词法环境中的变量，所以就可以重复定义了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1630221543,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":260793,"user_name":"上海彭鱼晏","can_delete":false,"product_type":"c1","uid":1374715,"ip_address":"","ucode":"F21C391263DA23","user_header":"https://static001.geekbang.org/account/avatar/00/14/f9/fb/04faa152.jpg","comment_is_top":false,"comment_ctime":1605107275,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1605107275","product_id":100033601,"comment_content":"老师，我有一个问题：就是，既然存在变量环境跟词法环境两种机制，那么我如果使用var跟 let 声明同一个变量的话却会抱错，不是两个变量在编译阶段放入两个环境吗，为啥会抱错呢。<br><br>比如 var age= 18; let age=18;编译阶段不是应该在变量环境跟词法环境分别放入一个age，然后为两个环境的age分别复制18。还望老师看到了解惑下，谢谢","like_count":0,"discussions":[{"author":{"id":1531784,"avatar":"https://static001.geekbang.org/account/avatar/00/17/5f/88/ed9acee8.jpg","nickname":"大掌柜〈海棠依旧〉","note":"","ucode":"023DF965D55B7A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":556850,"discussion_content":"知道咋回事了吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1647536364,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":257439,"user_name":"Geek_e407de","can_delete":false,"product_type":"c1","uid":2022053,"ip_address":"","ucode":"2C4EB18C112941","user_header":"","comment_is_top":false,"comment_ctime":1603972523,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1603972523","product_id":100033601,"comment_content":"想问一下如何确定的引擎先从此法环境里面去找再去找变量环境里面的","like_count":0},{"had_liked":false,"id":253313,"user_name":"coder","can_delete":false,"product_type":"c1","uid":1136797,"ip_address":"","ucode":"4F9A006DA78074","user_header":"https://static001.geekbang.org/account/avatar/00/11/58/9d/91d795cf.jpg","comment_is_top":false,"comment_ctime":1602681709,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1602681709","product_id":100033601,"comment_content":"if(0){<br>    var a = &quot;hello&quot;<br>}<br>console.log(a)<br>这里的话 if 应该是不会运行的，但是却声明了变量，是为什么呢？","like_count":0,"discussions":[{"author":{"id":2253274,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/s2nyPmahlvzN3adQPbINnJK1SlIzx8CkckxpeSuKvGF3JEHeKmVyo0YIKJ6mia6M8WiaFRn5EM2wOqjxmTKPFQyg/132","nickname":"Geek_b581e2","note":"","ucode":"EA2B7CD6A90A4D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":335996,"discussion_content":"应该是编译阶段不管if会不会执行，里面的代码都会编译，因此a变量提升","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1608449600,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":250577,"user_name":"心有余悸","can_delete":false,"product_type":"c1","uid":2011565,"ip_address":"","ucode":"215D0A96A4FC46","user_header":"https://static001.geekbang.org/account/avatar/00/1e/b1/ad/b937cfde.jpg","comment_is_top":false,"comment_ctime":1601136393,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1601136393","product_id":100033601,"comment_content":"我有个疑问，在函数内部，let声明的变量在编译阶段是否在创建和初始化也被提升了，不然为什么在编译阶段的词法作用域中会存在b = undefined，然后在块级作用域中，用let 声明的变量是不是只是创建被提升，因为如果不存在提升的话，那么以最后给出的例子来说，输出的应该是全局的“极客时间”，而不是报错，VM6277:3 Uncaught ReferenceError: Cannot access &#39;myname&#39; before initialization(myname不能在初始化前使用)，报错既然说是初始化前使用，说明已经该变量被创建了，否则应该报错（myname未定义）才对。所以，所谓的暂时性死区指的就是在变量在创建与的初始化或这一段时间间隔内，如果访问已创建但未初始化的变量，就会包暂时性死区错误，而在初始化或赋值过后再访问该变量就不存在暂时性死区了。以上是我的个人理解，如若不对，请帮我补充改正，谢谢","like_count":0},{"had_liked":false,"id":248065,"user_name":"悠米","can_delete":false,"product_type":"c1","uid":1377073,"ip_address":"","ucode":"7669A317A34FA9","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/mX9k3VNGc2mZkfTmI9zia209EugGkpFyLXl8ia1HcnhJCrAsoJ2UliaHQaeDjKOkoCaQOia6iaoj1Dkv3gZqsONlaMg/132","comment_is_top":false,"comment_ctime":1599997629,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1599997629","product_id":100033601,"comment_content":"看了其他资料说，函数声明是存储在词法环境中的，但是看文中的图，都将函数声明放在了变量环境中了，不知道是不是有出入？","like_count":0},{"had_liked":false,"id":243744,"user_name":"‏5102","can_delete":false,"product_type":"c1","uid":2116537,"ip_address":"","ucode":"476092AB890CF2","user_header":"https://static001.geekbang.org/account/avatar/00/20/4b/b9/2449c7b7.jpg","comment_is_top":false,"comment_ctime":1598263177,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1598263177","product_id":100033601,"comment_content":"问一下老师，词法环境是栈结构保存变量，那变量环境是以什么结构保存变量的呢？变量环境查找变量也是按照一定顺序查找当前环境的变量吗，类似词法环境的栈查询变量？","like_count":0,"discussions":[{"author":{"id":1564786,"avatar":"https://static001.geekbang.org/account/avatar/00/17/e0/72/6e0314e7.jpg","nickname":"Ace","note":"","ucode":"C77191A6B18845","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":548420,"discussion_content":"变量环境是应对象的形式","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1643188096,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":240454,"user_name":"A君","can_delete":false,"product_type":"c1","uid":1940105,"ip_address":"","ucode":"FE96F089C2312C","user_header":"https://static001.geekbang.org/account/avatar/00/1d/9a/89/babe8b52.jpg","comment_is_top":false,"comment_ctime":1596937275,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1596937275","product_id":100033601,"comment_content":"词法环境，为let关键字修饰的变量提供了变量提升的上下文环境，让块级作用域得以实现，let关键字修饰的变量不会有键值对存在环境变量对象中。","like_count":0},{"had_liked":false,"id":239392,"user_name":"太白北路","can_delete":false,"product_type":"c1","uid":1516144,"ip_address":"","ucode":"3C7E54D38408A3","user_header":"https://static001.geekbang.org/account/avatar/00/17/22/70/ab911260.jpg","comment_is_top":false,"comment_ctime":1596521985,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1596521985","product_id":100033601,"comment_content":"老师，为什么要设计成暂时性死区呢，这样设计有什么好处吗，还是要规避什么问题？为什么不直接去父级作用域取值？","like_count":0},{"had_liked":false,"id":236198,"user_name":"Geek_a76a82","can_delete":false,"product_type":"c1","uid":2067497,"ip_address":"","ucode":"FC5F5F6F7B05C9","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/ajNVdqHZLLCxCicqmeiaOmHStZ4OsOYk9QAE176Uf1Wg20myCseTHCPluF5LS5Nzibu3icdN40qFPGkibcp2gD7xjwA/132","comment_is_top":false,"comment_ctime":1595342419,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1595342419","product_id":100033601,"comment_content":"老师您好 对于for循环i的定义范围我不是很明白。如您所说 var定义i会被提升  那for此时是不具备块级作用域的。那么 此时i就是全局的吗 所以可以在for之外访问到。let定义的i for就成了块级作用域。此时for结束i被销毁 是这样吗？","like_count":0},{"had_liked":false,"id":234698,"user_name":"净天尘","can_delete":false,"product_type":"c1","uid":2031172,"ip_address":"","ucode":"9F0DE284E1D7DB","user_header":"https://static001.geekbang.org/account/avatar/00/1e/fe/44/4048e866.jpg","comment_is_top":false,"comment_ctime":1594775765,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1594775765","product_id":100033601,"comment_content":" var myname = &#39;极客时间&#39;<br>        function showName() {<br>            console.log(myname)<br>&#47;&#47;这里感觉需要把0 改成1  因为if(0) 本来就是false <br>            if (0) {  <br>                var myname = &#39;极客邦&#39;<br>            }<br>            console.log(myname)<br>        }<br>        showName()","like_count":0},{"had_liked":false,"id":234173,"user_name":"法正","can_delete":false,"product_type":"c1","uid":1145659,"ip_address":"","ucode":"D4F8890AEF12D3","user_header":"https://static001.geekbang.org/account/avatar/00/11/7b/3b/a54cb4e5.jpg","comment_is_top":false,"comment_ctime":1594609552,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1594609552","product_id":100033601,"comment_content":"老师请问下面的代码为什么能正确执行呢？<br>function a () {<br>    return myname;<br>}<br>a();<br>let myname= &#39;极客邦&#39;;<br>这里的 a 函数在 myname 变量赋值前被调用，a 函数返回的 myname 不应该出现暂时性死区吗？<br>如果在块级作用域中，就会报暂时性死区的错误：<br>{<br>    function a () {<br>        return myname;<br>    }<br>    a();<br>    let myname= &#39;极客邦&#39;<br>}","like_count":0},{"had_liked":false,"id":232968,"user_name":"Simon少明","can_delete":false,"product_type":"c1","uid":1358133,"ip_address":"","ucode":"F7ABE6DE4E55DE","user_header":"https://static001.geekbang.org/account/avatar/00/14/b9/35/96fb49d6.jpg","comment_is_top":false,"comment_ctime":1594178951,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1594178951","product_id":100033601,"comment_content":"执行上下文和作用域其实很相似，前者其实就是作用域的底层实现方式，而后者是一种概念，一种规则，我们看代码时普遍使用作用域这种规则来写代码，而老师是通过执行上下文和调用栈的说明白作用域原来是这样的。","like_count":0},{"had_liked":false,"id":232710,"user_name":"昵称","can_delete":false,"product_type":"c1","uid":1486529,"ip_address":"","ucode":"38C14BF83EAC1C","user_header":"https://static001.geekbang.org/account/avatar/00/16/ae/c1/76a9237f.jpg","comment_is_top":false,"comment_ctime":1594094106,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1594094106","product_id":100033601,"comment_content":"文章中的例子，为何在编译阶段，在函数的作用域块内部的通过 let 声明的变量并没有被存放到词法环境中，而是在执行阶段时 在词法环境创建一个栈结构把这些变量直接压入栈中并赋值？ 在执行阶段，函数的作用域块内部的通过let 声明的变量的声明和赋值是同时进行的吗？  而变量环境中的变量是在编译阶段声明，在执行阶段赋值。","like_count":0},{"had_liked":false,"id":231382,"user_name":"爱烤火的鱼","can_delete":false,"product_type":"c1","uid":1311458,"ip_address":"","ucode":"A12B4551D3B086","user_header":"https://static001.geekbang.org/account/avatar/00/14/02/e2/f646601b.jpg","comment_is_top":false,"comment_ctime":1593660714,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1593660714","product_id":100033601,"comment_content":"在let声明前,使用变量，是存在暂时性死区报错，精选留言的第一个同学总结的很好！其中let的创建被提升，初始化和赋值不会被提升。我完全认同！但是我有个疑问是:既然变量是先编译，所以遇到myname会被初始化为undefined，看了老师留下的作业代码，console.log(myname)应该是可执行代码。前几章讲到，先编译，再执行可执行代码。所以，console.log(myname)应该是undefined，因为在编译阶段已经初始化。但为什么会报错，还是强调那个主题:暂时性死区！声明前不能使用。可能有人觉得不对，在编译阶段myname明明初始化为undefined。我个人结合精选留言第一个同学的答案认为:在编译阶段JavaScript会有个代码语法审查机制。在扫描到你的代码存在暂时性死区，声明前使用的话，会报错！应该这时候并没有被初始化为undefined，因为已经报错了！以上个人愚见，如有出入，请批评指正。","like_count":0,"discussions":[{"author":{"id":2253274,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/s2nyPmahlvzN3adQPbINnJK1SlIzx8CkckxpeSuKvGF3JEHeKmVyo0YIKJ6mia6M8WiaFRn5EM2wOqjxmTKPFQyg/132","nickname":"Geek_b581e2","note":"","ucode":"EA2B7CD6A90A4D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":336004,"discussion_content":"let myname = &#39;极客时间&#39;\n        {\n            let a = 1;\n            // 暂存性死区\n            console.log(myname)\n            let myname = &#39;极客邦&#39;\n        }\n可是如果你在let a=1;打断点看scope，可以看到a: undefined，myname: undefined。感觉像有赋值为undefined，但是因为检查到提前使用未声明的变量，所以报错了，不知道是不是这样","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1608450636,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":231066,"user_name":"彷徨","can_delete":false,"product_type":"c1","uid":1216246,"ip_address":"","ucode":"AA89A7268B7126","user_header":"https://static001.geekbang.org/account/avatar/00/12/8e/f6/6b9d7cc0.jpg","comment_is_top":false,"comment_ctime":1593573346,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1593573346","product_id":100033601,"comment_content":"受益匪浅","like_count":0},{"had_liked":false,"id":230549,"user_name":"James","can_delete":false,"product_type":"c1","uid":1513489,"ip_address":"","ucode":"953966DEFE4461","user_header":"https://static001.geekbang.org/account/avatar/00/17/18/11/f1f37801.jpg","comment_is_top":false,"comment_ctime":1593415628,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1593415628","product_id":100033601,"comment_content":"if（1）{}这里if没有块级作用域的啊","like_count":0},{"had_liked":false,"id":224708,"user_name":"james","can_delete":false,"product_type":"c1","uid":1232771,"ip_address":"","ucode":"AC42035106E5B9","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/yyibGRYCArsUNBfCAEAibua09Yb9D5AdO8TkCmXymhAepibqmlz0hzg06ggBLxyvXicnjqFVGr7zYF0rQoZ0aXCBAg/132","comment_is_top":false,"comment_ctime":1591517662,"is_pvip":false,"discussion_count":0,"race_medal":1,"score":"1591517662","product_id":100033601,"comment_content":"【最终打印结果】：VM6277:3 Uncaught ReferenceError: Cannot access &#39;myname&#39; before initialization<br>【分析原因】：在块作用域内，let声明的变量被提升，但变量只是创建被提升，初始化并没有被提升，在初始化之前使用变量，就会形成一个暂时性死区。<br>【拓展】<br>var的创建和初始化被提升，赋值不会被提升。<br>let的创建被提升，初始化和赋值不会被提升。<br>function的创建、初始化和赋值均会被提升。","like_count":0},{"had_liked":false,"id":221891,"user_name":"江谢木","can_delete":false,"product_type":"c1","uid":1563403,"ip_address":"","ucode":"E1B1B0F0F03D41","user_header":"https://static001.geekbang.org/account/avatar/00/17/db/0b/f0ded153.jpg","comment_is_top":false,"comment_ctime":1590629169,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1590629169","product_id":100033601,"comment_content":"老师，let重复声明变量，let和var的变量同名，会怎么处理呢？","like_count":0,"discussions":[{"author":{"id":2033513,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/07/69/43cf2251.jpg","nickname":"Alan He","note":"","ucode":"A0780F4619D388","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":361826,"discussion_content":"报错，但比如var a=1;var a=2;最后是a=2","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1616764828,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":217717,"user_name":"Faye","can_delete":false,"product_type":"c1","uid":1293886,"ip_address":"","ucode":"7E8351CB61A764","user_header":"https://static001.geekbang.org/account/avatar/00/13/be/3e/aef2c613.jpg","comment_is_top":false,"comment_ctime":1589596251,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1589596251","product_id":100033601,"comment_content":"undefined.<br>编译阶段，第一行myName 赋默认值undefined在词法环境中，块级内部是一个新的词法栈，新的变量myName，默认值为undefined，然后执行块级的代码，从最顶端查找myName为undefined，打印出来，而后给其赋值&#39;极客邦&#39;，执行完毕销毁该栈。最后留下值为&#39;极客时间&#39;的myName在栈最底部。","like_count":0},{"had_liked":false,"id":216090,"user_name":"Geek_D","can_delete":false,"product_type":"c1","uid":1998099,"ip_address":"","ucode":"6C0BFD5DA01E2C","user_header":"https://static001.geekbang.org/account/avatar/00/1e/7d/13/fde557d3.jpg","comment_is_top":false,"comment_ctime":1589188796,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1589188796","product_id":100033601,"comment_content":"let在跨级作用域内也会和var一样被提升，但是不会初始化，访问会报错","like_count":0},{"had_liked":false,"id":211915,"user_name":"不想说什么","can_delete":false,"product_type":"c1","uid":1178833,"ip_address":"","ucode":"D6EC4588E8FC4A","user_header":"https://static001.geekbang.org/account/avatar/00/11/fc/d1/3aeba287.jpg","comment_is_top":false,"comment_ctime":1588038067,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1588038067","product_id":100033601,"comment_content":"第一步是编译并创建执行上下文 这句话下面的图在编译阶段词法环境的变量被赋值b=undefined，应该不会初始化呀，let变量会提升但是不会初始化呀，如果初始化了，我们在定义b变量之前就能访问。","like_count":0},{"had_liked":false,"id":206320,"user_name":"Geek_9eb349","can_delete":false,"product_type":"c1","uid":1292063,"ip_address":"","ucode":"B775AEB884A227","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83ep82iaEB1iaiaNrK6FF9Gm5a4qKFB7ztn27QH7RWeia1IYbaNhtsblXQpMh1dc9qH6ZibzO7OF1IqXs8dg/132","comment_is_top":false,"comment_ctime":1586839328,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1586839328","product_id":100033601,"comment_content":"感觉用词法环境还是不能为什么会出现deadzone","like_count":0},{"had_liked":false,"id":205009,"user_name":"穿秋裤的男孩","can_delete":false,"product_type":"c1","uid":1748640,"ip_address":"","ucode":"D0F48C66377893","user_header":"https://static001.geekbang.org/account/avatar/00/1a/ae/a0/707350ef.jpg","comment_is_top":false,"comment_ctime":1586507187,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1586507187","product_id":100033601,"comment_content":"文中把let &#47; const声明的变量初始化为undefined感觉有点不妥，let &#47; const 只提升不初始化的。","like_count":0,"discussions":[{"author":{"id":2286113,"avatar":"https://static001.geekbang.org/account/avatar/00/22/e2/21/60adf96b.jpg","nickname":"stone","note":"","ucode":"65816E57253D0F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":371145,"discussion_content":"可以断点看下，scope 里面显示 let 和 const 定义的变量值已经是 undefined","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1619664204,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":183788,"user_name":"blueBean","can_delete":false,"product_type":"c1","uid":1816697,"ip_address":"","ucode":"6A68D2414BD904","user_header":"https://static001.geekbang.org/account/avatar/00/1b/b8/79/a4dbe9ee.jpg","comment_is_top":false,"comment_ctime":1583134611,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1583134611","product_id":100033601,"comment_content":"所以词法环境里变量的取值到底是不是undefined,如果是undefined怎么会报错，难道不应该直接返回undefined吗？","like_count":0},{"had_liked":false,"id":178812,"user_name":"云中歌","can_delete":false,"product_type":"c1","uid":1806446,"ip_address":"","ucode":"F2F0AED74159D2","user_header":"https://static001.geekbang.org/account/avatar/00/1b/90/6e/d729672d.jpg","comment_is_top":false,"comment_ctime":1581833329,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1581833329","product_id":100033601,"comment_content":"刚执行时 foo 函数的执行上下文那张图为什么b=undefined，前面不是说不变量提升吗，还有变量查找的那张图，假如我把let b = 3放console.log(b)为什么会报错b没有定义，按变量查找的图显示的话，应该打印出2啊，求老师讲解一下","like_count":0},{"had_liked":false,"id":178299,"user_name":"randy","can_delete":false,"product_type":"c1","uid":1305087,"ip_address":"","ucode":"4D9E37745E6111","user_header":"","comment_is_top":false,"comment_ctime":1581654315,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1581654315","product_id":100033601,"comment_content":"const funcs = []<br>for (let a = 1; a&lt;10; ++a){ funcs.push(() =&gt; console.log(a)) }<br>执行指挥， funcs中的每一项都有不同的 a，这个是怎么办到的呢","like_count":0,"discussions":[{"author":{"id":2253274,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/s2nyPmahlvzN3adQPbINnJK1SlIzx8CkckxpeSuKvGF3JEHeKmVyo0YIKJ6mia6M8WiaFRn5EM2wOqjxmTKPFQyg/132","nickname":"Geek_b581e2","note":"","ucode":"EA2B7CD6A90A4D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":336005,"discussion_content":"同问","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1608450808,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":170091,"user_name":"玉皇大亮","can_delete":false,"product_type":"c1","uid":1019849,"ip_address":"","ucode":"5C4FDF1FDCF8A9","user_header":"https://static001.geekbang.org/account/avatar/00/0f/8f/c9/833d5060.jpg","comment_is_top":false,"comment_ctime":1578529061,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1578529061","product_id":100033601,"comment_content":"打印错误： Uncaught ReferenceError: Cannot access &#39;myname&#39; before initialization，说明在大括号{}内的块级作用域中，myName变量的声明是会被提升的，但是同var不同的是，仅仅是声明提升了，但是赋值没有提升，所以没有初始化","like_count":0},{"had_liked":false,"id":167307,"user_name":"不二","can_delete":false,"product_type":"c1","uid":1253124,"ip_address":"","ucode":"B018B32EDB44E5","user_header":"https://static001.geekbang.org/account/avatar/00/13/1f/04/1cddf65b.jpg","comment_is_top":false,"comment_ctime":1577760414,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1577760414","product_id":100033601,"comment_content":"通过var 声明的变量，在编译阶段，会存储在变量环境中，此时值为undefined，然后访问的时候，值为undefined。<br>通过let声明的变量，在编译阶段，会存储在词法环境中，此时值其实也为undefined， 只不过js隐藏此时不允许访问，提示 “暂时性死区”的错误。<br>例如：<br>console.log(a); &#47;&#47;结果为undefined<br>console.log(b); &#47;&#47; Uncaught ReferenceError: Cannot access &#39;b&#39; before initialization<br>var a = 1;<br>let b = 1;","like_count":0},{"had_liked":false,"id":159726,"user_name":"Geek_East","can_delete":false,"product_type":"c1","uid":1589947,"ip_address":"","ucode":"A1A7CBF9B8FB2D","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eqXKSvfaeicog2Ficx4W3pNeA1KRLOS7iaFy2uoxCDoYpGkGnP6KPGecKia6Dr3MtCkNGpHxAzmTMd0LA/132","comment_is_top":false,"comment_ctime":1575763881,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1575763881","product_id":100033601,"comment_content":"在变量环境中，是不是也是一个小型栈结构呢？看spec好像变量环境也是一个词法环境。","like_count":0},{"had_liked":false,"id":158268,"user_name":"-_-|||","can_delete":false,"product_type":"c1","uid":1328142,"ip_address":"","ucode":"94B21594658BF9","user_header":"https://static001.geekbang.org/account/avatar/00/14/44/0e/ce14b7d3.jpg","comment_is_top":false,"comment_ctime":1575359201,"is_pvip":false,"discussion_count":1,"race_medal":1,"score":"1575359201","product_id":100033601,"comment_content":"也就是编译时，块级作用域不编译。只有在执行时会为块级作用域临时创建词法环境。","like_count":0,"discussions":[{"author":{"id":1742972,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/98/7c/07e6e7b7.jpg","nickname":"Tim","note":"","ucode":"F51593465157E4","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":129736,"discussion_content":"我觉得说的不对，如果块级作用域不编译，那里面的var是怎么提升的呢？\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578733163,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":158237,"user_name":"-_-|||","can_delete":false,"product_type":"c1","uid":1328142,"ip_address":"","ucode":"94B21594658BF9","user_header":"https://static001.geekbang.org/account/avatar/00/14/44/0e/ce14b7d3.jpg","comment_is_top":false,"comment_ctime":1575355663,"is_pvip":false,"discussion_count":0,"race_medal":1,"score":"1575355663","product_id":100033601,"comment_content":"我印像中词法环境是那种树形结构的对象，查找时好像是遍历树。这里说是栈结构，疑惑。","like_count":0},{"had_liked":false,"id":157763,"user_name":"Bence Zhu","can_delete":false,"product_type":"c1","uid":1064396,"ip_address":"","ucode":"AC87914449FC8C","user_header":"https://static001.geekbang.org/account/avatar/00/10/3d/cc/38b3089b.jpg","comment_is_top":false,"comment_ctime":1575256536,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1575256536","product_id":100033601,"comment_content":"for (let i = 0; i &lt; 7; i++) {}<br>老师，为什么每次循环，i都有一个新域 ？","like_count":0,"discussions":[{"author":{"id":1589947,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eqXKSvfaeicog2Ficx4W3pNeA1KRLOS7iaFy2uoxCDoYpGkGnP6KPGecKia6Dr3MtCkNGpHxAzmTMd0LA/132","nickname":"Geek_East","note":"","ucode":"A1A7CBF9B8FB2D","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":75676,"discussion_content":"每次循环都是一个新的block","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1575765038,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":155245,"user_name":"vianem","can_delete":false,"product_type":"c1","uid":1748290,"ip_address":"","ucode":"59A2D19426ABC4","user_header":"","comment_is_top":false,"comment_ctime":1574671277,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1574671277","product_id":100033601,"comment_content":"词法环境跟词法作用域是不是一个东西？","like_count":0,"discussions":[{"author":{"id":1589947,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eqXKSvfaeicog2Ficx4W3pNeA1KRLOS7iaFy2uoxCDoYpGkGnP6KPGecKia6Dr3MtCkNGpHxAzmTMd0LA/132","nickname":"Geek_East","note":"","ucode":"A1A7CBF9B8FB2D","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":75677,"discussion_content":"词法环境是具体实现，词法作用域是规则","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1575765062,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":149450,"user_name":"空山鸟语","can_delete":false,"product_type":"c1","uid":1375838,"ip_address":"","ucode":"BA9993D7A4DC80","user_header":"https://static001.geekbang.org/account/avatar/00/14/fe/5e/9b723d19.jpg","comment_is_top":false,"comment_ctime":1573222501,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1573222501","product_id":100033601,"comment_content":"文中“没有了块级作用域，再把作用域内部的变量统一提升无疑是最快速、最简单的设计，不过这也直接导致了函数中的变量无论是在哪里声明的，在编译阶段都会被提取到执行上下文的变量环境中，所以这些变量在整个函数体内部的任何地方都是能被访问的，这也就是 JavaScript 中的变量提升。”<br>这段文字中没有块级作用域，再把变量提升是最简单的设计。这句话不理解，哪位大神帮忙解释下呗，谢谢！","like_count":0,"discussions":[{"author":{"id":1037744,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/d5/b0/3b24bd1d.jpg","nickname":"古小静","note":"","ucode":"084290B81A5AE1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":51169,"discussion_content":"开始js并没有很大的应用场景，所以变量和函数声明并不多，这样编译时变量提升把所有的变量放在一起维护，对设计者来说是方便的，对用户而言，在任何地方都可以取到和修改无疑是也最简单的。全局变量是双刃剑，后面也造成了变量很难维护的局面。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1573819623,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":144940,"user_name":"凭实力写bug","can_delete":false,"product_type":"c1","uid":1235611,"ip_address":"","ucode":"6F772551F18935","user_header":"https://static001.geekbang.org/account/avatar/00/12/da/9b/e0ef47df.jpg","comment_is_top":false,"comment_ctime":1572106185,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1572106185","product_id":100033601,"comment_content":"理解了let为什么可以生成块级作用域，当是没讲let是怎么解决变量提升的，let也被遇编译了，为什么我在let之前还是属于 not default","like_count":0},{"had_liked":false,"id":142027,"user_name":"Sean","can_delete":false,"product_type":"c1","uid":1272789,"ip_address":"","ucode":"BC0715BF423613","user_header":"https://static001.geekbang.org/account/avatar/00/13/6b/d5/0e4b70a2.jpg","comment_is_top":false,"comment_ctime":1571280875,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1571280875","product_id":100033601,"comment_content":"老师，想确认一下，文中的【变量环境】就是常说的变量对象VO吧？","like_count":0,"discussions":[{"author":{"id":1311758,"avatar":"https://static001.geekbang.org/account/avatar/00/14/04/0e/87adea1d.jpg","nickname":"DENG永青","note":"","ucode":"FBBAF46E858596","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":38728,"discussion_content":"我也想知道","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571825098,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":141529,"user_name":"kael","can_delete":false,"product_type":"c1","uid":1199523,"ip_address":"","ucode":"03BDFB5B0450B0","user_header":"https://static001.geekbang.org/account/avatar/00/12/4d/a3/75e53a20.jpg","comment_is_top":false,"comment_ctime":1571188277,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1571188277","product_id":100033601,"comment_content":"全文包括上一节似乎都没写什么是词法环境，只是每张图都带上这个词法环境？","like_count":0},{"had_liked":false,"id":137967,"user_name":"花儿与少年","can_delete":false,"product_type":"c1","uid":1046304,"ip_address":"","ucode":"E2D685737E4F1B","user_header":"https://static001.geekbang.org/account/avatar/00/0f/f7/20/e2dfa9c2.jpg","comment_is_top":false,"comment_ctime":1569944469,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1569944469","product_id":100033601,"comment_content":"提问： 执行流进入一个代码块（大括号）会经历 先编译，再执行两个阶段吗？<br>我的理解：不会，执行到代码块内的 let 变量声明时再将其放到词法环境。<br>","like_count":0},{"had_liked":false,"id":137666,"user_name":"花儿与少年","can_delete":false,"product_type":"c1","uid":1046304,"ip_address":"","ucode":"E2D685737E4F1B","user_header":"https://static001.geekbang.org/account/avatar/00/0f/f7/20/e2dfa9c2.jpg","comment_is_top":false,"comment_ctime":1569814954,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1569814954","product_id":100033601,"comment_content":"请教老师 Es规范里有个词法环境记录，应该是对应环境变量对象。但是老师单独把存放块作用域变量的环境叫词法环境，这个说法是否准确","like_count":0,"discussions":[{"author":{"id":1379119,"avatar":"https://static001.geekbang.org/account/avatar/00/15/0b/2f/6efc3051.jpg","nickname":"GY","note":"","ucode":"764214512E67C1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":23566,"discussion_content":"同样疑惑啊，看文档是说let和const的值时存放在声明式环境记录中","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1569836234,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":137388,"user_name":"Geek_761448","can_delete":false,"product_type":"c1","uid":1468475,"ip_address":"","ucode":"4C720CC7CB581F","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/q0yUmgr5jpdukc2TsOZ85NrXiaicKESL6GD7dmK5LpiaJnts7ySNqGBkX4zFvBpKoXVJ8qZZxWnpLADk5R5XFnWPA/132","comment_is_top":false,"comment_ctime":1569728073,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1569728073","product_id":100033601,"comment_content":"老师,问个问题.全局生成的变量会怎么进行编译.比如a=10.<br>还有能否解答这个问题:<br>{<br>function f(){}<br>f = 10<br>}<br>console.log(f) &#47;&#47;ƒ f(){}<br>{<br>z = 20<br>function z(){}<br>}<br>console.log(z) &#47;&#47;20","like_count":0},{"had_liked":false,"id":136931,"user_name":"mmma","can_delete":false,"product_type":"c1","uid":1339268,"ip_address":"","ucode":"0F04CE9BDAA319","user_header":"https://static001.geekbang.org/account/avatar/00/14/6f/84/5b56dba2.jpg","comment_is_top":false,"comment_ctime":1569555856,"is_pvip":false,"replies":[{"id":"52519","content":"词法环境就是用来实现块级作用域的","user_name":"作者回复","user_name_real":"李兵","uid":"1141464","ctime":1569558792,"ip_address":"","comment_id":136931,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1569555856","product_id":100033601,"comment_content":"为什么不创建一个块级执行上下文，而是放入词法环境？","like_count":0,"discussions":[{"author":{"id":1141464,"avatar":"https://static001.geekbang.org/account/avatar/00/11/6a/d8/228449c9.jpg","nickname":"李兵","note":"","ucode":"3F3D3F6E20209E","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":468869,"discussion_content":"词法环境就是用来实现块级作用域的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1569558792,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":136692,"user_name":"成","can_delete":false,"product_type":"c1","uid":1374608,"ip_address":"","ucode":"1FBEFCD573A20E","user_header":"https://static001.geekbang.org/account/avatar/00/14/f9/90/5cd5d680.jpg","comment_is_top":false,"comment_ctime":1569491634,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1569491634","product_id":100033601,"comment_content":"请问这里的变量环境和词法环境是如何区分的呢？之所以把块级变量创建在词法环境是为了与之前的var变量进行区分吗？","like_count":0},{"had_liked":false,"id":135225,"user_name":"半瓶水（Herwt）","can_delete":false,"product_type":"c1","uid":1623560,"ip_address":"","ucode":"4B307AE7EE15EB","user_header":"https://static001.geekbang.org/account/avatar/00/18/c6/08/628774e8.jpg","comment_is_top":false,"comment_ctime":1569071062,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1569071062","product_id":100033601,"comment_content":"chromeV75: <br>报错：VM1953:1 Uncaught SyntaxError: Identifier &#39;myname&#39; has already been declared<br>    at &lt;anonymous&gt;:1:1<br>已经声明，不能重复声明；<br>let 在同一层块级作用域内，不能重复被声明<br>不像var,可以让后面var声明的覆盖之前var声明的同一变量","like_count":0},{"had_liked":false,"id":132669,"user_name":"假面猫","can_delete":false,"product_type":"c1","uid":1482252,"ip_address":"","ucode":"5E72C3FA56B9C7","user_header":"https://static001.geekbang.org/account/avatar/00/16/9e/0c/2008b3ed.jpg","comment_is_top":false,"comment_ctime":1568189482,"is_pvip":false,"replies":[{"id":"50922","content":"对的，就是这个结果，你需要搞清楚为什么出现这个问题","user_name":"作者回复","user_name_real":"李兵","uid":"1141464","ctime":1568279043,"ip_address":"","comment_id":132669,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1568189482","product_id":100033601,"comment_content":"let myname= &#39;极客时间&#39;<br>{<br>  console.log(myname) <br>  let myname= &#39;极客邦&#39;<br>}<br>VM20209:3 Uncaught ReferenceError: myname is not defined<br>    at &lt;anonymous&gt;:3:15<br><br>奇怪，我在控制台输入竟然是 myname 未定义。","like_count":0,"discussions":[{"author":{"id":1141464,"avatar":"https://static001.geekbang.org/account/avatar/00/11/6a/d8/228449c9.jpg","nickname":"李兵","note":"","ucode":"3F3D3F6E20209E","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":467061,"discussion_content":"对的，就是这个结果，你需要搞清楚为什么出现这个问题","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1568279043,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":132654,"user_name":"拖鞋","can_delete":false,"product_type":"c1","uid":1089424,"ip_address":"","ucode":"09985C731090A3","user_header":"https://static001.geekbang.org/account/avatar/00/10/9f/90/4656119a.jpg","comment_is_top":false,"comment_ctime":1568186600,"is_pvip":false,"replies":[{"id":"50919","content":"因为let和const有个暂时性死区的设置，所以必须的先声明，再使用","user_name":"作者回复","user_name_real":"李兵","uid":"1141464","ctime":1568278803,"ip_address":"","comment_id":132654,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1568186600","product_id":100033601,"comment_content":"  console.log(a)<br>      var a= 1<br><br>      console.log(a)<br>      let a = 1<br>老师按照您词法环境的解释  这俩中写法应该执行结果是一样的啊","like_count":0,"discussions":[{"author":{"id":1141464,"avatar":"https://static001.geekbang.org/account/avatar/00/11/6a/d8/228449c9.jpg","nickname":"李兵","note":"","ucode":"3F3D3F6E20209E","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":467054,"discussion_content":"因为let和const有个暂时性死区的设置，所以必须的先声明，再使用","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1568278803,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":132092,"user_name":"Kim","can_delete":false,"product_type":"c1","uid":1516373,"ip_address":"","ucode":"2AB25CFC6B9997","user_header":"https://static001.geekbang.org/account/avatar/00/17/23/55/6284a309.jpg","comment_is_top":false,"comment_ctime":1568021561,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1568021561","product_id":100033601,"comment_content":"如果能把execution context中的细节讲出来，就太完美了。","like_count":0},{"had_liked":false,"id":130655,"user_name":"黄榆","can_delete":false,"product_type":"c1","uid":1040176,"ip_address":"","ucode":"AA979FCDD4A33A","user_header":"https://static001.geekbang.org/account/avatar/00/0f/df/30/95743ba5.jpg","comment_is_top":false,"comment_ctime":1567502429,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1567502429","product_id":100033601,"comment_content":"http:&#47;&#47;dmitrysoshnikov.com&#47;notes&#47;note-4-two-words-about-hoisting&#47;#summary 这篇文章描述了js设计变量提升的两个原因：1、函数循环调用 2、变量定义优化，从中可以得出只函数提升有必要，var 提升则没有必要反而会造成一些问题。<br>既然设计了let避开变量提升，那为什么在刚进入代码块就创建所有let变量，而不是在执行遇到let时才创建？<br>另一个问题，为什么大部分语言使用词法作用域？","like_count":0},{"had_liked":false,"id":129575,"user_name":"肥嘟嘟左卫门","can_delete":false,"product_type":"c1","uid":1358889,"ip_address":"","ucode":"BA6D8E04C6B2CE","user_header":"https://static001.geekbang.org/account/avatar/00/14/bc/29/c248bfd1.jpg","comment_is_top":false,"comment_ctime":1567156929,"is_pvip":false,"replies":[{"id":"48323","content":"你用了for循环了啊，循环了5次，每个元素的事件都响应了一遍","user_name":"作者回复","user_name_real":"李兵","uid":"1141464","ctime":1567164405,"ip_address":"","comment_id":129575,"utype":1}],"discussion_count":3,"race_medal":0,"score":"1567156929","product_id":100033601,"comment_content":"老师，您好，想问一个问题，为什么下面这段代码可以分别打印出 0，1，2，3，4，这里明明是只声明了一个 i 啊<br>var liList = document.querySelectorAll(&#39;li&#39;) &#47;&#47; 共5个li<br>for( let i=0; i&lt;liList.length; i++){<br>  liList[i].onclick = function(){<br>    console.log(i)<br>  }<br>}","like_count":0,"discussions":[{"author":{"id":1141464,"avatar":"https://static001.geekbang.org/account/avatar/00/11/6a/d8/228449c9.jpg","nickname":"李兵","note":"","ucode":"3F3D3F6E20209E","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":465551,"discussion_content":"你用了for循环了啊，循环了5次，每个元素的事件都响应了一遍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567164405,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1141464,"avatar":"https://static001.geekbang.org/account/avatar/00/11/6a/d8/228449c9.jpg","nickname":"李兵","note":"","ucode":"3F3D3F6E20209E","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":6955,"discussion_content":"这个就是块级作用了，let支持块级作用的原因","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567214330,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1358889,"avatar":"https://static001.geekbang.org/account/avatar/00/14/bc/29/c248bfd1.jpg","nickname":"肥嘟嘟左卫门","note":"","ucode":"BA6D8E04C6B2CE","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":6905,"discussion_content":"可能我没有表达清楚，我的意思是为什么用var的话只能打印出5，但是用let可以分别打印出来，我不太明白是否let 也有变量提升","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567167731,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":127976,"user_name":"Chao","can_delete":false,"product_type":"c1","uid":1108745,"ip_address":"","ucode":"DD7742F5537521","user_header":"https://static001.geekbang.org/account/avatar/00/10/eb/09/ba5f0135.jpg","comment_is_top":false,"comment_ctime":1566815931,"is_pvip":false,"replies":[{"id":"47424","content":"是的","user_name":"作者回复","user_name_real":"李兵","uid":"1141464","ctime":1566822016,"ip_address":"","comment_id":127976,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1566815931","product_id":100033601,"comment_content":"思考题带来一个 临时死区的概念 ","like_count":0,"discussions":[{"author":{"id":1141464,"avatar":"https://static001.geekbang.org/account/avatar/00/11/6a/d8/228449c9.jpg","nickname":"李兵","note":"","ucode":"3F3D3F6E20209E","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":464729,"discussion_content":"是的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566822016,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":127948,"user_name":"Y ｓ.","can_delete":false,"product_type":"c1","uid":1382198,"ip_address":"","ucode":"1405F31DA79EC2","user_header":"https://static001.geekbang.org/account/avatar/00/15/17/36/19ac6798.jpg","comment_is_top":false,"comment_ctime":1566813450,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1566813450","product_id":100033601,"comment_content":"这行代码时，就需要在词法环境和变量环境中查找变量 a 的值了，具体查找方式是：沿着词法环境的栈顶向下查询，如果在词法环境中的某个块中查找到了，就直接返回给 JavaScript 引擎，如果没有查找到，那么继续在变量环境中查找。<br><br>老师，这个有文档定义吗？我想看看","like_count":0},{"had_liked":false,"id":127824,"user_name":"木棉","can_delete":false,"product_type":"c1","uid":1084629,"ip_address":"","ucode":"8A637B7435BF24","user_header":"https://static001.geekbang.org/account/avatar/00/10/8c/d5/398b31fe.jpg","comment_is_top":false,"comment_ctime":1566798603,"is_pvip":false,"replies":[{"id":"47392","content":"理解的没问题","user_name":"作者回复","user_name_real":"李兵","uid":"1141464","ctime":1566803654,"ip_address":"","comment_id":127824,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1566798603","product_id":100033601,"comment_content":"ES6 明确规定，如果区块中存在let和const命令，这个区块对这些命令声明的变量，从一开始就形成了封闭作用域。凡是在声明之前就使用这些变量，就会报错。","like_count":0,"discussions":[{"author":{"id":1141464,"avatar":"https://static001.geekbang.org/account/avatar/00/11/6a/d8/228449c9.jpg","nickname":"李兵","note":"","ucode":"3F3D3F6E20209E","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":464668,"discussion_content":"理解的没问题","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566803654,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":127764,"user_name":"Y ｓ.","can_delete":false,"product_type":"c1","uid":1382198,"ip_address":"","ucode":"1405F31DA79EC2","user_header":"https://static001.geekbang.org/account/avatar/00/15/17/36/19ac6798.jpg","comment_is_top":false,"comment_ctime":1566788975,"is_pvip":false,"replies":[{"id":"47383","content":"变量环境和词法环境结构一样的，都是从词法环境结构来的，所以叫两个词法环境对象<br><br>词法环境中，进入或者退出一个块级作用域，里面的数据都会改变","user_name":"作者回复","user_name_real":"李兵","uid":"1141464","ctime":1566802304,"ip_address":"","comment_id":127764,"utype":1}],"discussion_count":3,"race_medal":0,"score":"1566788975","product_id":100033601,"comment_content":"老师您好，ES5标准文档中规定，执行环境包括：词法环境、变量环境、this绑定。并且解释道：其中执行环境的词法环境和变量环境组件始终为词法环境对象。当创建一个执行环境时，其词法环境组件和变量环境组件最初是同一个值。在该执行环境相关联的代码的执行过程中，变量环境组件永远不变，而词法环境组件有可能改变。<br><br>我想知道为何说：变量环境组件永远不变，而词法环境组件有可能改变。为什么需要两个词法环境对象？一个不行吗？什么时候使用词法组件，什么时候使用变量组件呢？","like_count":0,"discussions":[{"author":{"id":1141464,"avatar":"https://static001.geekbang.org/account/avatar/00/11/6a/d8/228449c9.jpg","nickname":"李兵","note":"","ucode":"3F3D3F6E20209E","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":464644,"discussion_content":"变量环境和词法环境结构一样的，都是从词法环境结构来的，所以叫两个词法环境对象\n\n词法环境中，进入或者退出一个块级作用域，里面的数据都会改变","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566802304,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1382198,"avatar":"https://static001.geekbang.org/account/avatar/00/15/17/36/19ac6798.jpg","nickname":"Y ｓ.","note":"","ucode":"1405F31DA79EC2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":6238,"discussion_content":"词法环境中，进入或者退出一个块级作用域，里面的数据都会改变 指的是 变量环境和词法环境都会改变吗？？ 那是不是可以说明他俩指向的都是同一个词法环境呢？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566805468,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1382198,"avatar":"https://static001.geekbang.org/account/avatar/00/15/17/36/19ac6798.jpg","nickname":"Y ｓ.","note":"","ucode":"1405F31DA79EC2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":6237,"discussion_content":"FunctionDeclaration： 运行中的执行环境的 VariableEnvironment 传递为 Scope\nFunctionExpression：运行中的执行环境的 LexicalEnvironment 传递为 Scope\n\n上面这是es5规范，  对于最新的es6是什么呢，在文档上没有找到FunctionDeclaration的scope定义，  FunctionExpression的定义没有改变","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566805358,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":127436,"user_name":"Angus","can_delete":false,"product_type":"c1","uid":1377467,"ip_address":"","ucode":"7CC3BA1550FB5B","user_header":"https://static001.geekbang.org/account/avatar/00/15/04/bb/5e5c37c1.jpg","comment_is_top":false,"comment_ctime":1566710370,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1566710370","product_id":100033601,"comment_content":"具体什么是词法环境","like_count":0},{"had_liked":false,"id":127401,"user_name":"tokey","can_delete":false,"product_type":"c1","uid":1337746,"ip_address":"","ucode":"5278487F37D4EC","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJS0jwYKhjm1hq96go05J4R7XDd5FFXXaoyIfX9TgoI3mLURAu2ET72SvYGM2iaET7IV3WDvMibAVfw/132","comment_is_top":false,"comment_ctime":1566698248,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1566698248","product_id":100033601,"comment_content":"老师，那什么是“运行时”啊？","like_count":0,"discussions":[{"author":{"id":1231133,"avatar":"https://static001.geekbang.org/account/avatar/00/12/c9/1d/c7586cfc.jpg","nickname":"Zkerhcy","note":"","ucode":"43A883F6FB6070","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":155737,"discussion_content":"英文是 Runtime, 可以简单理解为代码的一个执行环境，比如 NodeJS 就是 JavaScript的一个运行时","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1580281134,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":127389,"user_name":"徐承银","can_delete":false,"product_type":"c1","uid":1623836,"ip_address":"","ucode":"8500992DCD9232","user_header":"https://static001.geekbang.org/account/avatar/00/18/c7/1c/3bec7786.jpg","comment_is_top":false,"comment_ctime":1566693546,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1566693546","product_id":100033601,"comment_content":"老师问个问题，循环内let声明的变量，词法作用域结构是怎样的？如果是在一个栈里面，为什么循环内异步打印变量，打印的是不同的值？谢谢","like_count":0,"discussions":[{"author":{"id":1651618,"avatar":"https://static001.geekbang.org/account/avatar/00/19/33/a2/585be249.jpg","nickname":"草原上的骆驼🐫","note":"","ucode":"F0B12CB1FEED84","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":13103,"discussion_content":"是不是每一次循环，都会在词法环境中创建一个let声明的i，按照老师所讲的，词法环境中会维持一个栈结构，每次都是入栈，被弹出的过程，也就是说for循环中的i每次循环都会分开入栈和出栈，所以每次都会打印出不同的结果。也不知道我的理解是否正确。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1568640993,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":127351,"user_name":"😁陈哲奇","can_delete":false,"product_type":"c1","uid":1121237,"ip_address":"","ucode":"3EFD41A04C923C","user_header":"https://static001.geekbang.org/account/avatar/00/11/1b/d5/0cae2c5b.jpg","comment_is_top":false,"comment_ctime":1566661530,"is_pvip":true,"replies":[{"id":"47247","content":"看个人情况，如果是放学不久不建议去看，如果是老鸟了，有些搜索不到的内容倒是可以去ecmascript去查查的。","user_name":"作者回复","user_name_real":"李兵","uid":"1141464","ctime":1566774038,"ip_address":"","comment_id":127351,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1566661530","product_id":100033601,"comment_content":"我想问问老师，这类知识大部分书籍都不会提及，ECMA Script的规范文档应该有描述这些内容，建不建议通过阅读这个文档来学习呢？","like_count":0,"discussions":[{"author":{"id":1141464,"avatar":"https://static001.geekbang.org/account/avatar/00/11/6a/d8/228449c9.jpg","nickname":"李兵","note":"","ucode":"3F3D3F6E20209E","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":464453,"discussion_content":"看个人情况，如果是放学不久不建议去看，如果是老鸟了，有些搜索不到的内容倒是可以去ecmascript去查查的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566774038,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":127273,"user_name":"Hurry","can_delete":false,"product_type":"c1","uid":1138560,"ip_address":"","ucode":"12FEE2A50CC667","user_header":"https://static001.geekbang.org/account/avatar/00/11/5f/80/51269d88.jpg","comment_is_top":false,"comment_ctime":1566630217,"is_pvip":false,"replies":[{"id":"47117","content":"嗯 变量环境和词法环境的分析没有问题了，还有个暂时性死区的特性还要了解了，你可以参考下其它评论。","user_name":"作者回复","user_name_real":"李兵","uid":"1141464","ctime":1566651277,"ip_address":"","comment_id":127273,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1566630217","product_id":100033601,"comment_content":"简单画个图<br><br>-------- 代码执行上下文 ----------<br><br>---- 变量环境 ---  ---- 词法环境 ----<br><br>                             --------------<br>                             name = undefined<br>                             --------------<br><br>                             --------------<br>                              name = ’极客帮‘<br>                             --------------","like_count":0,"discussions":[{"author":{"id":1141464,"avatar":"https://static001.geekbang.org/account/avatar/00/11/6a/d8/228449c9.jpg","nickname":"李兵","note":"","ucode":"3F3D3F6E20209E","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":464408,"discussion_content":"嗯 变量环境和词法环境的分析没有问题了，还有个暂时性死区的特性还要了解了，你可以参考下其它评论。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566651277,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":127235,"user_name":"许童童","can_delete":false,"product_type":"c1","uid":1003005,"ip_address":"","ucode":"4B799C0C6BC678","user_header":"https://static001.geekbang.org/account/avatar/00/0f/4d/fd/0aa0e39f.jpg","comment_is_top":false,"comment_ctime":1566617050,"is_pvip":false,"replies":[{"id":"47109","content":"分析的没问题","user_name":"作者回复","user_name_real":"李兵","uid":"1141464","ctime":1566650309,"ip_address":"","comment_id":127235,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1566617050","product_id":100033601,"comment_content":"思考题：<br>当运行到块级作用域时，先预编译，词法环境中会生成 myname = undefined，然后console.log会先在词法环境中找，当遇到undefined时，报错：不能使用未初始化前使用‘myname’。","like_count":0,"discussions":[{"author":{"id":1141464,"avatar":"https://static001.geekbang.org/account/avatar/00/11/6a/d8/228449c9.jpg","nickname":"李兵","note":"","ucode":"3F3D3F6E20209E","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":464393,"discussion_content":"分析的没问题","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566650309,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1622524,"avatar":"https://static001.geekbang.org/account/avatar/00/18/c1/fc/ac3760ed.jpg","nickname":"sugus","note":"","ucode":"CAF009F622338A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":6122,"discussion_content":"那js引擎怎么知道是初始化的undefined还是赋值的undefined呢？","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1566715417,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":127219,"user_name":"ヾ(◍°∇°◍)ﾉﾞ","can_delete":false,"product_type":"c1","uid":1044175,"ip_address":"","ucode":"89545632BDA56E","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJOBwR7MCVqwZbPA5RQ2mjUjd571jUXUcBCE7lY5vSMibWn8D5S4PzDZMaAhRPdnRBqYbVOBTJibhJg/132","comment_is_top":false,"comment_ctime":1566613337,"is_pvip":false,"replies":[{"id":"47141","content":"原生支持的在执行的过程中也需要编译啊，我没有太搞清楚你的问题。","user_name":"作者回复","user_name_real":"李兵","uid":"1141464","ctime":1566657431,"ip_address":"","comment_id":127219,"utype":1}],"discussion_count":3,"race_medal":0,"score":"1566613337","product_id":100033601,"comment_content":"js的新标准哪些是浏览器原生支持，哪些需要编译后支持的呢？","like_count":0,"discussions":[{"author":{"id":1141464,"avatar":"https://static001.geekbang.org/account/avatar/00/11/6a/d8/228449c9.jpg","nickname":"李兵","note":"","ucode":"3F3D3F6E20209E","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":464381,"discussion_content":"原生支持的在执行的过程中也需要编译啊，我没有太搞清楚你的问题。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566657431,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1044175,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJOBwR7MCVqwZbPA5RQ2mjUjd571jUXUcBCE7lY5vSMibWn8D5S4PzDZMaAhRPdnRBqYbVOBTJibhJg/132","nickname":"ヾ(◍°∇°◍)ﾉﾞ","note":"","ucode":"89545632BDA56E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":6183,"discussion_content":"我的意思好多语法不是在node本地预先翻译才能用的吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566748049,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1141464,"avatar":"https://static001.geekbang.org/account/avatar/00/11/6a/d8/228449c9.jpg","nickname":"李兵","note":"","ucode":"3F3D3F6E20209E","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":1044175,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJOBwR7MCVqwZbPA5RQ2mjUjd571jUXUcBCE7lY5vSMibWn8D5S4PzDZMaAhRPdnRBqYbVOBTJibhJg/132","nickname":"ヾ(◍°∇°◍)ﾉﾞ","note":"","ucode":"89545632BDA56E","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":6234,"discussion_content":"那个语言转换比如es6—》ES5，压缩，代码混淆的并不是真正执行语言级的上的编译！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566803209,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":6183,"ip_address":""},"score":6234,"extra":""}]}]},{"had_liked":false,"id":127207,"user_name":"ytd","can_delete":false,"product_type":"c1","uid":1038790,"ip_address":"","ucode":"C6AEA2D19E447A","user_header":"https://static001.geekbang.org/account/avatar/00/0f/d9/c6/8be8664d.jpg","comment_is_top":false,"comment_ctime":1566611575,"is_pvip":false,"replies":[{"id":"47114","content":"Cannot access &#39;myname&#39; before initialization<br>意思是虽然该变量已经在词法环境中了，但是还没有被赋值，所以不能使用！ 这也是JavaScript语法层面的标准，JavaScript引擎是按照标准来实现的。","user_name":"作者回复","user_name_real":"李兵","uid":"1141464","ctime":1566650926,"ip_address":"","comment_id":127207,"utype":1}],"discussion_count":3,"race_medal":0,"score":"1566611575","product_id":100033601,"comment_content":"```js<br>let myname= &#39;极客时间&#39;<br>{<br>  console.log(myname)  &#47;&#47; 报错，在chrome下会报Uncaught ReferenceError: Cannot access &#39;myname&#39; before initialization<br>  let myname= &#39;极客邦&#39;<br>}<br>```<br>let声明的变量在编译阶段会被加入执行上下文的词法环境，而且不会被提升到作用域的顶部（这也就是块级作用域原理）<br>或者可以这么说：myname直到`let myname= &#39;极客邦&#39;`声明语句被执行时才被初始化<br>所以，在声明之前访问let声明的变量会报错。不知道这么理解合不合理？<br>但是浏览器的报错感觉有些让人疑惑，`Cannot access &#39;myname&#39; before initialization<br>`，变量在初始化之前不能访问，那么既然let声明的变量未被提升，为什么不报变量未定义错误呢？期待老师的解惑。","like_count":0,"discussions":[{"author":{"id":1141464,"avatar":"https://static001.geekbang.org/account/avatar/00/11/6a/d8/228449c9.jpg","nickname":"李兵","note":"","ucode":"3F3D3F6E20209E","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":464375,"discussion_content":"Cannot access &amp;#39;myname&amp;#39; before initialization\n意思是虽然该变量已经在词法环境中了，但是还没有被赋值，所以不能使用！ 这也是JavaScript语法层面的标准，JavaScript引擎是按照标准来实现的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566650926,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1622524,"avatar":"https://static001.geekbang.org/account/avatar/00/18/c1/fc/ac3760ed.jpg","nickname":"sugus","note":"","ucode":"CAF009F622338A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":6124,"discussion_content":"那可不可以这么理解let，被创建（提升）了，未被初始化（报错）","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566715698,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1038790,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/d9/c6/8be8664d.jpg","nickname":"ytd","note":"","ucode":"C6AEA2D19E447A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":6068,"discussion_content":"嗯，明白了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566651765,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]}]}