{"id":112036,"title":"30 | 时代之风（上）：HTTP/2特性概览","content":"<p>在<a href=\"https://time.geekbang.org/column/article/103746\">第14讲</a>里，我们看到HTTP有两个主要的缺点：安全不足和性能不高。</p><p>刚结束的“安全篇”里的HTTPS，通过引入SSL/TLS在安全上达到了“极致”，但在性能提升方面却是乏善可陈，只优化了握手加密的环节，对于整体的数据传输没有提出更好的改进方案，还只能依赖于“长连接”这种“落后”的技术（参见<a href=\"https://time.geekbang.org/column/article/104949\">第17讲</a>）。</p><p>所以，在HTTPS逐渐成熟之后，HTTP就向着性能方面开始“发力”，走出了另一条进化的道路。</p><p>在<a href=\"https://time.geekbang.org/column/article/97837\">第1讲</a>的HTTP历史中你也看到了，“秦失其鹿，天下共逐之”，Google率先发明了SPDY协议，并应用于自家的浏览器Chrome，打响了HTTP性能优化的“第一枪”。</p><p>随后互联网标准化组织IETF以SPDY为基础，综合其他多方的意见，终于推出了HTTP/1的继任者，也就是今天的主角“HTTP/2”，在性能方面有了一个大的飞跃。</p><h2>为什么不是HTTP/2.0</h2><p>你一定很想知道，为什么HTTP/2不像之前的“1.0”“1.1”那样叫“2.0”呢？</p><p>这个也是很多初次接触HTTP/2的人问的最多的一个问题，对此HTTP/2工作组特别给出了解释。</p><p>他们认为以前的“1.0”“1.1”造成了很多的混乱和误解，让人在实际的使用中难以区分差异，所以就决定HTTP协议不再使用小版本号（minor version），只使用大版本号（major version），从今往后HTTP协议不会出现HTTP/2.0、2.1，只会有“HTTP/2”“HTTP/3”……</p><!-- [[[read_end]]] --><p>这样就可以明确无误地辨别出协议版本的“跃进程度”，让协议在一段较长的时期内保持稳定，每当发布新版本的HTTP协议都会有本质的不同，绝不会有“零敲碎打”的小改良。</p><h2>兼容HTTP/1</h2><p>由于HTTPS已经在安全方面做的非常好了，所以HTTP/2的唯一目标就是改进性能。</p><p>但它不仅背负着众多的期待，同时还背负着HTTP/1庞大的历史包袱，所以协议的修改必须小心谨慎，兼容性是首要考虑的目标，否则就会破坏互联网上无数现有的资产，这方面TLS已经有了先例（为了兼容TLS1.2不得不进行“伪装”）。</p><p>那么，HTTP/2是怎么做的呢？</p><p>因为必须要保持功能上的兼容，所以HTTP/2把HTTP分解成了“<span class=\"orange\">语义</span>”和“<span class=\"orange\">语法</span>”两个部分，“语义”层不做改动，与HTTP/1完全一致（即RFC7231）。比如请求方法、URI、状态码、头字段等概念都保留不变，这样就消除了再学习的成本，基于HTTP的上层应用也不需要做任何修改，可以无缝转换到HTTP/2。</p><p>特别要说的是，与HTTPS不同，HTTP/2没有在URI里引入新的协议名，仍然用“http”表示明文协议，用“https”表示加密协议。</p><p>这是一个非常了不起的决定，可以让浏览器或者服务器去自动升级或降级协议，免去了选择的麻烦，让用户在上网的时候都意识不到协议的切换，实现平滑过渡。</p><p>在“语义”保持稳定之后，HTTP/2在“语法”层做了“天翻地覆”的改造，完全变更了HTTP报文的传输格式。</p><h2>头部压缩</h2><p>首先，HTTP/2对报文的头部做了一个“大手术”。</p><p>通过“进阶篇”的学习你应该知道，HTTP/1里可以用头字段“Content-Encoding”指定Body的编码方式，比如用gzip压缩来节约带宽，但报文的另一个组成部分——Header却被无视了，没有针对它的优化手段。</p><p>由于报文Header一般会携带“User Agent”“Cookie”“Accept”“Server”等许多固定的头字段，多达几百字节甚至上千字节，但Body却经常只有几十字节（比如GET请求、204/301/304响应），成了不折不扣的“大头儿子”。更要命的是，成千上万的请求响应报文里有很多字段值都是重复的，非常浪费，“长尾效应”导致大量带宽消耗在了这些冗余度极高的数据上。</p><p>所以，HTTP/2把“<strong>头部压缩</strong>”作为性能改进的一个重点，优化的方式你也肯定能想到，还是“压缩”。</p><p>不过HTTP/2并没有使用传统的压缩算法，而是开发了专门的“<strong>HPACK</strong>”算法，在客户端和服务器两端建立“字典”，用索引号表示重复的字符串，还釆用哈夫曼编码来压缩整数和字符串，可以达到50%~90%的高压缩率。</p><h2>二进制格式</h2><p>你可能已经很习惯于HTTP/1里纯文本形式的报文了，它的优点是“一目了然”，用最简单的工具就可以开发调试，非常方便。</p><p>但HTTP/2在这方面没有“妥协”，决定改变延续了十多年的现状，不再使用肉眼可见的ASCII码，而是向下层的TCP/IP协议“靠拢”，全面采用二进制格式。</p><p>这样虽然对人不友好，但却大大方便了计算机的解析。原来使用纯文本的时候容易出现多义性，比如大小写、空白字符、回车换行、多字少字等等，程序在处理时必须用复杂的状态机，效率低，还麻烦。</p><p>而二进制里只有“0”和“1”，可以严格规定字段大小、顺序、标志位等格式，“对就是对，错就是错”，解析起来没有歧义，实现简单，而且体积小、速度快，做到“内部提效”。</p><p>以二进制格式为基础，HTTP/2就开始了“大刀阔斧”的改革。</p><p>它把TCP协议的部分特性挪到了应用层，把原来的“Header+Body”的消息“打散”为数个小片的<strong>二进制“帧”</strong>（Frame），用“HEADERS”帧存放头数据、“DATA”帧存放实体数据。</p><p>这种做法有点像是“Chunked”分块编码的方式（参见<a href=\"https://time.geekbang.org/column/article/104456\">第16讲</a>），也是“化整为零”的思路，但HTTP/2数据分帧后“Header+Body”的报文结构就完全消失了，协议看到的只是一个个的“碎片”。</p><p><img src=\"https://static001.geekbang.org/resource/image/8f/96/8fe2cbd57410299a1a36d7eb105ea896.png?wh=1236*366\" alt=\"\"></p><h2>虚拟的“流”</h2><p>消息的“碎片”到达目的地后应该怎么组装起来呢？</p><p>HTTP/2为此定义了一个“<strong>流</strong>”（Stream）的概念，<strong>它是二进制帧的双向传输序列</strong>，同一个消息往返的帧会分配一个唯一的流ID。你可以把它想象成是一个虚拟的“数据流”，在里面流动的是一串有先后顺序的数据帧，这些数据帧按照次序组装起来就是HTTP/1里的请求报文和响应报文。</p><p>因为“流”是虚拟的，实际上并不存在，所以HTTP/2就可以在一个TCP连接上用“<strong>流</strong>”同时发送多个“碎片化”的消息，这就是常说的“<strong>多路复用</strong>”（ Multiplexing）——多个往返通信都复用一个连接来处理。</p><p>在“流”的层面上看，消息是一些有序的“帧”序列，而在“连接”的层面上看，消息却是乱序收发的“帧”。多个请求/响应之间没有了顺序关系，不需要排队等待，也就不会再出现“队头阻塞”问题，降低了延迟，大幅度提高了连接的利用率。</p><p><img src=\"https://static001.geekbang.org/resource/image/d8/bc/d8fd32a4d044f2078b3a260e4478c5bc.png?wh=1231*842\" alt=\"\"></p><p>为了更好地利用连接，加大吞吐量，HTTP/2还添加了一些控制帧来管理虚拟的“流”，实现了优先级和流量控制，这些特性也和TCP协议非常相似。</p><p>HTTP/2还在一定程度上改变了传统的“请求-应答”工作模式，服务器不再是完全被动地响应请求，也可以新建“流”主动向客户端发送消息。比如，在浏览器刚请求HTML的时候就提前把可能会用到的JS、CSS文件发给客户端，减少等待的延迟，这被称为“<strong>服务器推送</strong>”（Server Push，也叫Cache Push）。</p><h2>强化安全</h2><p>出于兼容的考虑，HTTP/2延续了HTTP/1的“明文”特点，可以像以前一样使用明文传输数据，不强制使用加密通信，不过格式还是二进制，只是不需要解密。</p><p>但由于HTTPS已经是大势所趋，而且主流的浏览器Chrome、Firefox等都公开宣布只支持加密的HTTP/2，所以“事实上”的HTTP/2是加密的。也就是说，互联网上通常所能见到的HTTP/2都是使用“https”协议名，跑在TLS上面。</p><p>为了区分“加密”和“明文”这两个不同的版本，HTTP/2协议定义了两个字符串标识符：“<span class=\"orange\">h2</span>”表示加密的HTTP/2，“<span class=\"orange\">h2c</span>”表示明文的HTTP/2，多出的那个字母“c”的意思是“clear text”。</p><p>在HTTP/2标准制定的时候（2015年）已经发现了很多SSL/TLS的弱点，而新的TLS1.3还未发布，所以加密版本的HTTP/2在安全方面做了强化，要求下层的通信协议必须是TLS1.2以上，还要支持前向安全和SNI，并且把几百个弱密码套件列入了“黑名单”，比如DES、RC4、CBC、SHA-1都不能在HTTP/2里使用，相当于底层用的是“TLS1.25”。</p><h2>协议栈</h2><p>下面的这张图对比了HTTP/1、HTTPS和HTTP/2的协议栈，你可以清晰地看到，HTTP/2是建立在“HPack”“Stream”“TLS1.2”基础之上的，比HTTP/1、HTTPS复杂了一些。</p><p><img src=\"https://static001.geekbang.org/resource/image/83/1a/83c9f0ecad361ba8ef8f3b73d6872f1a.png?wh=1227*632\" alt=\"\"></p><p>虽然HTTP/2的底层实现很复杂，但它的“语义”还是简单的HTTP/1，之前学习的知识不会过时，仍然能够用得上。</p><p>我们的实验环境在新的域名“<strong>www.metroid.net</strong>”上启用了HTTP/2协议，你可以把之前“进阶篇”“安全篇”的测试用例都走一遍，再用Wireshark抓一下包，实际看看HTTP/2的效果和对老协议的兼容性（例如“<a href=\"http://www.metroid.net/11-1\">http://www.metroid.net/11-1</a>”）。</p><p>在今天这节课专用的URI“/30-1”里，你还可以看到服务器输出了HTTP的版本号“2”和标识符“h2”，表示这是加密的HTTP/2，如果改用“<a href=\"https://www.chrono.com/30-1\">https://www.chrono.com/30-1</a>”访问就会是“1.1”和空。</p><p><img src=\"https://static001.geekbang.org/resource/image/fd/d1/fdf1a6916c3ac22b6fb7628de3d7ddd1.png?wh=1142*1139\" alt=\"\"></p><p>你可能还会注意到URI里的一个小变化，端口使用的是“8443”而不是“443”。这是因为443端口已经被“www.chrono.com”的HTTPS协议占用，Nginx不允许在同一个端口上根据域名选择性开启HTTP/2，所以就不得不改用了“8443”。</p><h2>小结</h2><p>今天我简略介绍了HTTP/2的一些重要特性，比较偏重理论，下一次我会用Wireshark抓包，具体讲解HTTP/2的头部压缩、二进制帧和流等特性。</p><ol>\n<li><span class=\"orange\">HTTP协议取消了小版本号，所以HTTP/2的正式名字不是2.0；</span></li>\n<li><span class=\"orange\">HTTP/2在“语义”上兼容HTTP/1，保留了请求方法、URI等传统概念；</span></li>\n<li><span class=\"orange\">HTTP/2使用“HPACK”算法压缩头部信息，消除冗余数据节约带宽；</span></li>\n<li><span class=\"orange\">HTTP/2的消息不再是“Header+Body”的形式，而是分散为多个二进制“帧”；</span></li>\n<li><span class=\"orange\">HTTP/2使用虚拟的“流”传输消息，解决了困扰多年的“队头阻塞”问题，同时实现了“多路复用”，提高连接的利用率；</span></li>\n<li><span class=\"orange\">HTTP/2也增强了安全性，要求至少是TLS1.2，而且禁用了很多不安全的密码套件。</span></li>\n</ol><h2>课下作业</h2><ol>\n<li>你觉得明文形式的HTTP/2（h2c）有什么好处，应该如何使用呢？</li>\n<li>你觉得应该怎样理解HTTP/2里的“流”，为什么它是“虚拟”的？</li>\n<li>你能对比一下HTTP/2与HTTP/1、HTTPS的相同点和不同点吗？</li>\n</ol><p>欢迎你把自己的学习体会写在留言区，与我和其他同学一起讨论。如果你觉得有所收获，也欢迎把文章分享给你的朋友。</p><p><img src=\"https://static001.geekbang.org/resource/image/78/42/781da6191d342d71d3be2675cb610742.png?wh=1769*3769\" alt=\"unpreview\"></p><p><img src=\"https://static001.geekbang.org/resource/image/56/63/56d766fc04654a31536f554b8bde7b63.jpg?wh=1110*659\" alt=\"unpreview\"></p>","comments":[{"had_liked":false,"id":172982,"user_name":"俊伟","can_delete":false,"product_type":"c1","uid":1111175,"ip_address":"","ucode":"7905B4F25637F4","user_header":"https://static001.geekbang.org/account/avatar/00/10/f4/87/644c0c5d.jpg","comment_is_top":false,"comment_ctime":1579401964,"is_pvip":true,"replies":[{"id":"67107","content":"总结的非常好，great。","user_name":"作者回复","comment_id":172982,"uid":"1181974","ip_address":"","utype":1,"ctime":1579412097,"user_name_real":"chrono"}],"discussion_count":1,"race_medal":0,"score":"173378093804","product_id":100029001,"comment_content":"1.h2c使用明文传输，速度更快，不需要TLS握手。<br>2.客户端将多个请求分成不同的流，然后每个流里面在切成一个个帧，发送的时候是按帧发送的。每个帧存着一个流ID来表示它属于的流。服务端收到请求的时候将帧按流ID进行拼接。从传输的角度来看流是不存在的，只是看到了一个个帧，所以说流是虚拟的。<br>3.相同点：都是基于TCP和TLS的，url格式都是相同的。都是基于header+body的形式。都是请求-应答模型。<br>4.不同点： 1.使用了HPACK进行头部压缩。<br>                2.使用的是二进制的方式进行传输。<br>                3.将多个请求切分成帧发送，实现了多路复用。这个感觉上利用了多道程序设计的思想。<br>                4.服务器可以主动向客户端推送消息。充分利用了TCP的全功双通道。","like_count":41,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":481920,"discussion_content":"总结的非常好，great。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579412097,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":120706,"user_name":"magicnum","can_delete":false,"product_type":"c1","uid":1004869,"ip_address":"","ucode":"96B3696961F654","user_header":"https://static001.geekbang.org/account/avatar/00/0f/55/45/e4314bc6.jpg","comment_is_top":false,"comment_ctime":1564979080,"is_pvip":false,"replies":[{"id":"44374","content":"great！","user_name":"作者回复","comment_id":120706,"uid":"1181974","ip_address":"","utype":1,"ctime":1565009396,"user_name_real":"chrono"}],"discussion_count":3,"race_medal":0,"score":"108939161480","product_id":100029001,"comment_content":"h2c优点是性能，不需要TLS握手以及加解密。可以通过curl工具构造h2c请求；<br>h2的流是虚拟的因为它是使用帧传输数据的，相同streamid的帧组成了虚拟消息以及流；<br>相同点：都是基于tcp或TLS，并且是基于请求-响应模型，schema还是http或https不会有http2。<br>不同点：h2使用二进制传输消息并且通过HPACK压缩请求头，实现流多路复用、服务器推送<br>","like_count":26,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":461442,"discussion_content":"great！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1565009396,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2013447,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/b9/07/aab6784b.jpg","nickname":"alvin","note":"","ucode":"E79D9C6EE8D016","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":281922,"discussion_content":"h2c优点是性能，不需要TLS握手以及加解密。这里有问题把？\n是基于 TSL 握手，TSL 握手成功之后发送连接前言用来确认建立 HTTP/2 连接。\n我理解的有问题么？@老师","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1591841815,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":2013447,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/b9/07/aab6784b.jpg","nickname":"alvin","note":"","ucode":"E79D9C6EE8D016","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":304264,"discussion_content":"h2c没有加密，需要使用http/1的upgrade来升级到http/2，连接前言是建立连接之后才发出的，这之前都没有加密，所以省去了加密的成本。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1599531486,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":281922,"ip_address":""},"score":304264,"extra":""}]}]},{"had_liked":false,"id":120750,"user_name":"阿锋","can_delete":false,"product_type":"c1","uid":1127761,"ip_address":"","ucode":"7AF449ABA89242","user_header":"https://static001.geekbang.org/account/avatar/00/11/35/51/c616f95a.jpg","comment_is_top":false,"comment_ctime":1564989132,"is_pvip":false,"replies":[{"id":"44371","content":"get也可以有body，post也可以用query参数，区别的关键在于动作语义，一个是取一个是存。","user_name":"作者回复","comment_id":120750,"uid":"1181974","ip_address":"","utype":1,"ctime":1565009269,"user_name_real":"chrono"}],"discussion_count":2,"race_medal":0,"score":"53104596684","product_id":100029001,"comment_content":"突然想起了一个问题，get和post请求其中一个区别是，post请求会把请求的数据放入请求体（body）中，而get请求是拼接到url后面。get请求是不是一定不能往请求体（body）中放入数据。还是这些都只是客户端和服务端的约定，可以灵活的自定义，没有强制的要求。","like_count":13,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":461459,"discussion_content":"get也可以有body，post也可以用query参数，区别的关键在于动作语义，一个是取一个是存。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1565009269,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1337030,"avatar":"https://static001.geekbang.org/account/avatar/00/14/66/c6/d779dfb6.jpg","nickname":"松松","note":"","ucode":"EB2A80CF7BCA4B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":7303,"discussion_content":"后来了解了一下这种普遍误解的历史原因，是HTML的form表单的两种method。因为用得多，就把影响力传染到其它使用HTTP的场合去了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567482947,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":120708,"user_name":"nb Ack","can_delete":false,"product_type":"c1","uid":1137171,"ip_address":"","ucode":"2C1B99C85C8CCD","user_header":"https://static001.geekbang.org/account/avatar/00/11/5a/13/3160996d.jpg","comment_is_top":false,"comment_ctime":1564980189,"is_pvip":false,"replies":[{"id":"44372","content":"完全不一样。<br><br>多路复用多个请求没有顺序，而长连接多个请求必须排队，就会队头阻塞。<br><br>可以再看看示意图体会一下。","user_name":"作者回复","comment_id":120708,"uid":"1181974","ip_address":"","utype":1,"ctime":1565009329,"user_name_real":"chrono"}],"discussion_count":1,"race_medal":0,"score":"40219685853","product_id":100029001,"comment_content":"老师好。我想问一下，http2的多路复用和http的长连接效果不是一样吗？","like_count":10,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":461443,"discussion_content":"完全不一样。\n\n多路复用多个请求没有顺序，而长连接多个请求必须排队，就会队头阻塞。\n\n可以再看看示意图体会一下。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1565009329,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":120916,"user_name":"-W.LI-","can_delete":false,"product_type":"c1","uid":1210699,"ip_address":"","ucode":"3556786538664F","user_header":"https://static001.geekbang.org/account/avatar/00/12/79/4b/740f91ca.jpg","comment_is_top":false,"comment_ctime":1565013294,"is_pvip":false,"replies":[{"id":"44456","content":"<br>1.当然，省去了加密的成本。<br><br>2.所谓“虚拟的流”，是指流实际上是多个同一序号的帧，并没有真正的流数据结构，这与连接不同。<br><br>3.正确。<br><br>4.你说的channel应该是http&#47;2里的“流”吧，http&#47;2里没有channel。流是由帧组成的，帧头里有流id标记所属的流，马上会讲具体的细节。<br><br>5.标记一个tcp连接要用四元组（客户端ip端口+服务器ip端口），所以肯定要用一个新的端口号，在客户端这是临时分配的，而服务器是固定的端口。","user_name":"作者回复","comment_id":120916,"uid":"1181974","ip_address":"","utype":1,"ctime":1565049974,"user_name_real":"chrono"}],"discussion_count":3,"race_medal":0,"score":"31629784366","product_id":100029001,"comment_content":"课后习题出的很好。可惜我不会坐等答案<br>1.内网用h2c会比https快么?<br>2.感觉回答虚拟流之前给先回答啥是真真的流。我对流的理解是有序，切只能读一次。http2支持乱序发，我猜也支持，部分帧重发，所以就是虚拟的了。<br>3.共同，都是应用层协议，传输成都用的TCP。<br>不同:https=TLS+HTTP&#47;HTTP2，安全。<br>http2:二进制传输，对header压缩，通过二进制分帧解决了队头阻塞，传输效率更高，服务端可推数据<br>http:明文，队头阻塞，半双工。<br>问题1:一个TCP链接可以打开很多channel是吧，每一个channel都可以传输数据。底层具体怎么实现的啊，是怎么区分channel里的数据谁是谁的?<br>问题2:我之前看见TPC好像是通过服务端IP,服务端端口号,客户端端IP,客户端端口号。来唯一标识一个链接的。http1的时候队头阻塞，继续要多建http链接。每建立一个链接客户端就用一个不同的端口号么?<br>","like_count":7,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":461531,"discussion_content":"\n1.当然，省去了加密的成本。\n\n2.所谓“虚拟的流”，是指流实际上是多个同一序号的帧，并没有真正的流数据结构，这与连接不同。\n\n3.正确。\n\n4.你说的channel应该是http/2里的“流”吧，http/2里没有channel。流是由帧组成的，帧头里有流id标记所属的流，马上会讲具体的细节。\n\n5.标记一个tcp连接要用四元组（客户端ip端口+服务器ip端口），所以肯定要用一个新的端口号，在客户端这是临时分配的，而服务器是固定的端口。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1565049974,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1477120,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTI8mFt5wSkia31qc8paRg2uPSB6AuEBDricrSxvFBuTpP3NnnflekpJ7wqvN0nRrJyu7zVbzd7Lwjxw/132","nickname":"Geek_steven_wang","note":"","ucode":"8CC8F4C9726191","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":6339,"discussion_content":"2.所谓“虚拟的流”，是指流实际上是多个同一序号的帧，并没有真正的流数据结构，这与连接不同。\n问题是 那多个帧按什么顺序组合呢？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566860712,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1210699,"avatar":"https://static001.geekbang.org/account/avatar/00/12/79/4b/740f91ca.jpg","nickname":"-W.LI-","note":"","ucode":"3556786538664F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1477120,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTI8mFt5wSkia31qc8paRg2uPSB6AuEBDricrSxvFBuTpP3NnnflekpJ7wqvN0nRrJyu7zVbzd7Lwjxw/132","nickname":"Geek_steven_wang","note":"","ucode":"8CC8F4C9726191","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":6340,"discussion_content":"一个虚拟流序号相同，同一个虚拟流传输时是顺序阻塞的。不同的虚拟流之间是乱序的。不过犹豫TCP的可靠性传输不能完全解决队首阻塞，下一讲有讲。","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1566861428,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":6339,"ip_address":""},"score":6340,"extra":""}]}]},{"had_liked":false,"id":229794,"user_name":"Maske","can_delete":false,"product_type":"c1","uid":1696847,"ip_address":"","ucode":"A19BB41A47E852","user_header":"https://static001.geekbang.org/account/avatar/00/19/e4/4f/df6d810d.jpg","comment_is_top":false,"comment_ctime":1593147247,"is_pvip":true,"replies":[{"id":"84802","content":"理解的很透彻，great。","user_name":"作者回复","comment_id":229794,"uid":"1181974","ip_address":"","utype":1,"ctime":1593172536,"user_name_real":"罗剑锋"}],"discussion_count":1,"race_medal":0,"score":"27362951023","product_id":100029001,"comment_content":"1.明文传输时不需要进行加密解密动作，不需要TLS握手，能节约性能。适用于对数据传输安全性要求不高的场景。<br>2.http2改变了http1.1的“请求-应答”模式，将head+body的请求报文在传输过程中改为 head帧 + data帧，在同一个TCP&#47;IP中，可以将多个请求分解为多个帧，从连接层面来看，这些帧是无序的，为了让接受端准确的将这些帧还原为一个一个独立的请求或响应，就给了每一个帧分配了streamid，streamid相同的即为同一个请求或响应的数据。因此，此处的流并不是真实有序的二进制字节，所以叫‘虚拟流’。<br>3.http1.1解决的是在万维网中，计算机之间的信息通信的一套规范，包括定义其属于应用层协议，建立在tcp&#47;ip之上，请求响应的报文结构等。https不改变http1.1的原有属性，是在其之上新增了对数据安全性和有效性的特性，解决的是数据安全的问题，通过使用加密解密，数字证书，TLS握手等过程保证了这一点。http2解决的是性能问题，通过头部压缩，使用二进制传输，多路复用，服务器推送等策略使得http的性能更好。http2和https本质上都是对http1.1的扩展和延伸。","like_count":6,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":499640,"discussion_content":"理解的很透彻，great。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1593172536,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":160228,"user_name":"夏目","can_delete":false,"product_type":"c1","uid":1212750,"ip_address":"","ucode":"67C075A01CF4D2","user_header":"https://static001.geekbang.org/account/avatar/00/12/81/4e/d71092f4.jpg","comment_is_top":false,"comment_ctime":1575895026,"is_pvip":false,"replies":[{"id":"61192","content":"是的，理解的非常正确。","user_name":"作者回复","comment_id":160228,"uid":"1181974","ip_address":"","utype":1,"ctime":1575939533,"user_name_real":"chrono"}],"discussion_count":1,"race_medal":0,"score":"27345698802","product_id":100029001,"comment_content":"流就是逻辑上将数据帧按id分组了，同组有序，组间无序，本质就是id相同的几个数据帧所以流是虚拟的。在tcp层面还是队首阻塞的吧？需要等待ack","like_count":7,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":477302,"discussion_content":"是的，理解的非常正确。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1575939533,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":129065,"user_name":"渴望做梦","can_delete":false,"product_type":"c1","uid":1398219,"ip_address":"","ucode":"9EB47530A69C91","user_header":"https://static001.geekbang.org/account/avatar/00/15/55/cb/1efe460a.jpg","comment_is_top":false,"comment_ctime":1567038083,"is_pvip":false,"replies":[{"id":"48048","content":"可以的，Chrome会把二进制解码，还原为http&#47;1的文本形式，你可以自己试一下。","user_name":"作者回复","comment_id":129065,"uid":"1181974","ip_address":"","utype":1,"ctime":1567050451,"user_name_real":"chrono"}],"discussion_count":1,"race_medal":0,"score":"23041874563","product_id":100029001,"comment_content":"老师，我有个疑问，既然http2是二进制的格式，那我们还能用chrome自带的工具调试吗？","like_count":6,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":465256,"discussion_content":"可以的，Chrome会把二进制解码，还原为http/1的文本形式，你可以自己试一下。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567050451,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":264941,"user_name":"潇潇雨歇","can_delete":false,"product_type":"c1","uid":1251429,"ip_address":"","ucode":"4BD52BF0F0A084","user_header":"https://static001.geekbang.org/account/avatar/00/13/18/65/35361f02.jpg","comment_is_top":false,"comment_ctime":1606714690,"is_pvip":false,"replies":[{"id":"96243","content":"回答的非常好！","user_name":"作者回复","comment_id":264941,"uid":"1181974","ip_address":"","utype":1,"ctime":1606784875,"user_name_real":"罗剑锋"}],"discussion_count":1,"race_medal":0,"score":"18786583874","product_id":100029001,"comment_content":"1、明文传输性能更好，省去了加密相关操作<br>2、流和请求&#47;应答一样，但是流是相同流id的帧组合，不同流可以无序，相同流有序。整个看起来是无序的，请求之间不受影响。这也解决了http1.1的队头阻塞。<br>3、三者都是基于tcp的，基本语义是一样的。http2在性能上做了提升，比如二进制帧，流，服务器推送，HPACK算法等；https在安全上做了提升，下层多了TLS&#47;SSL，要多做一些握手加密证书验证等操作。","like_count":5,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":510749,"discussion_content":"回答的非常好！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1606784875,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":218471,"user_name":"BoyiKia","can_delete":false,"product_type":"c1","uid":1983680,"ip_address":"","ucode":"D37541B4451D6B","user_header":"https://static001.geekbang.org/account/avatar/00/1e/44/c0/cd2cd082.jpg","comment_is_top":false,"comment_ctime":1589806766,"is_pvip":false,"replies":[{"id":"80788","content":"awesome!","user_name":"作者回复","comment_id":218471,"uid":"1181974","ip_address":"","utype":1,"ctime":1589846490,"user_name_real":"chrono"}],"discussion_count":1,"race_medal":0,"score":"18769675950","product_id":100029001,"comment_content":"http2  优点<br>1.兼容性<br>   兼容以前的http1.1 ，https等。<br><br>2.性能提升<br>   报文变成了 二进制数据帧，提高传输效率，和减少歧义。<br>    ①header 采用了头部压缩，来减小传输体积。<br>    ②body数据 放到了 data帧。<br>   a.同一请求或响应的数据帧具有相同的帧标识(流ID)，两端接受到的帧数据可以通过同一帧标识，重新组装成请求或响应数据。<br> b.不同请求&#47;响应的数据帧可以乱序发，避免生成请求队列造成的队头阻塞。<br>c.同一个TCP连接上，可以并行发送多种流的数据帧(多路复用，PS： http1的 多路复用是分母效应，同一连接串行增加http通信 )。<br>d.强化了请求响应模式，服务器可以主动发送信息-服务器推送。<br>3.安全性<br>①.要求下层必须是 TlS1.2以上，支持前向安全，废除安全性比较低的密码套件。<br><br><br>   <br> ","like_count":4,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":495473,"discussion_content":"awesome!","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1589846490,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":304637,"user_name":"兔嘟嘟","can_delete":false,"product_type":"c1","uid":2028811,"ip_address":"","ucode":"5A9042B4C7670C","user_header":"https://static001.geekbang.org/account/avatar/00/1e/f5/0b/73628618.jpg","comment_is_top":false,"comment_ctime":1627528350,"is_pvip":false,"replies":[{"id":"110330","content":"二进制的好处显而易见，用位来表示信息，要比字符串表示简单，比如用01表示host，而用字符串就需要4个字节，而且要用状态机去检测单词，非常麻烦。<br><br>http&#47;2在底层是二进制，解析起来快速方便，然后再到应用层对字符串做个映射就行了，不是再编码。<br><br>可以再用hpack来理解一下。","user_name":"作者回复","comment_id":304637,"uid":"1181974","ip_address":"","utype":1,"ctime":1627780404,"user_name_real":"罗剑锋"}],"discussion_count":3,"race_medal":0,"score":"10217462942","product_id":100029001,"comment_content":"老师好，我不太理解为什么二进制帧可以提高解析效率，我的理解是这样的：<br>在HTTP&#47;1.1中，请求方的字符串在TCP层被解码为Unicode二进制，然后应答方在HTTP层编码为utf-8字符串。<br>而在HTTP&#47;2中，请求方的字符串在HTTP层被解码为二进制，然后应答方在浏览器处编码为字符串。所以好像没有省去时间或者资源。请老师赐教","like_count":3,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":524109,"discussion_content":"二进制的好处显而易见，用位来表示信息，要比字符串表示简单，比如用01表示host，而用字符串就需要4个字节，而且要用状态机去检测单词，非常麻烦。\n\nhttp/2在底层是二进制，解析起来快速方便，然后再到应用层对字符串做个映射就行了，不是再编码。\n\n可以再用hpack来理解一下。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1627780404,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1288733,"avatar":"https://static001.geekbang.org/account/avatar/00/13/aa/1d/b8fdd622.jpg","nickname":"laoergege","note":"","ucode":"559CCF36805A04","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":407855,"discussion_content":"二进制格式说的是消息格式，不是编码格式，底层下传输的都是二进制数据","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1635134586,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2028811,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/f5/0b/73628618.jpg","nickname":"兔嘟嘟","note":"","ucode":"5A9042B4C7670C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":386658,"discussion_content":"发送方和接收方","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1627713362,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":262898,"user_name":"Maske","can_delete":false,"product_type":"c1","uid":1696847,"ip_address":"","ucode":"A19BB41A47E852","user_header":"https://static001.geekbang.org/account/avatar/00/19/e4/4f/df6d810d.jpg","comment_is_top":false,"comment_ctime":1605873474,"is_pvip":true,"replies":[{"id":"95536","content":"http&#47;2里面的流，就相当于http&#47;1里的并发连接，要开一个新流同样也要有一些准备的工作。Chrome里的排队属于它自己的调度工作，与http&#47;2协议是无关的。<br>","user_name":"作者回复","comment_id":262898,"uid":"1181974","ip_address":"","utype":1,"ctime":1606093122,"user_name_real":"罗剑锋"}],"discussion_count":1,"race_medal":0,"score":"10195808066","product_id":100029001,"comment_content":"老师我又回来了，按之前的理解是，http2是对同一域名使用单一的TCP连接进行数据传输，多个请求同时进行，既然如此，为什么在chrome调试面板中还能看到资源还是是有请求排队时间的呢？","like_count":3,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":510022,"discussion_content":"http/2里面的流，就相当于http/1里的并发连接，要开一个新流同样也要有一些准备的工作。Chrome里的排队属于它自己的调度工作，与http/2协议是无关的。\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1606093122,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":246788,"user_name":"思维决定未来","can_delete":false,"product_type":"c1","uid":1412891,"ip_address":"","ucode":"88CC245B3C6E2D","user_header":"","comment_is_top":false,"comment_ctime":1599477807,"is_pvip":false,"replies":[{"id":"90700","content":"前面说过，对http的改进有两个方向，一个是安全，一个是效率，http&#47;2是安全和效率兼顾，而https只是传输安全，效率上没有改进。","user_name":"作者回复","comment_id":246788,"uid":"1181974","ip_address":"","utype":1,"ctime":1599526524,"user_name_real":"罗剑锋"}],"discussion_count":4,"race_medal":0,"score":"5894445103","product_id":100029001,"comment_content":"http2的事实标准就是加密传输的，那是不是跟https重复了？","like_count":1,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":505228,"discussion_content":"前面说过，对http的改进有两个方向，一个是安全，一个是效率，http/2是安全和效率兼顾，而https只是传输安全，效率上没有改进。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1599526524,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":328196,"discussion_content":"可以这么理解，http/2就是更好更快的https。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1606101232,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1412891,"avatar":"","nickname":"思维决定未来","note":"","ucode":"88CC245B3C6E2D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":308274,"discussion_content":"不好意思，我可能没有表达清楚，我的意思是业务使用了http2后，是不是没必要再用https了？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1600906474,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":2028811,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/f5/0b/73628618.jpg","nickname":"兔嘟嘟","note":"","ucode":"5A9042B4C7670C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1412891,"avatar":"","nickname":"思维决定未来","note":"","ucode":"88CC245B3C6E2D","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":386336,"discussion_content":"在浏览器中，你要用http2，就必须用https。在私有业务中，http2是一种明文协议。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1627536809,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":308274,"ip_address":""},"score":386336,"extra":""}]}]},{"had_liked":false,"id":131961,"user_name":"谢一","can_delete":false,"product_type":"c1","uid":1140305,"ip_address":"","ucode":"FBA86EF2ABE8A5","user_header":"https://static001.geekbang.org/account/avatar/00/11/66/51/052c7b30.jpg","comment_is_top":false,"comment_ctime":1567993290,"is_pvip":true,"replies":[{"id":"50435","content":"tcp层是有序的，所以一个流里的多个帧会按照顺序依次到达，接收方只要依次接收就可以了。","user_name":"作者回复","comment_id":131961,"uid":"1181974","ip_address":"","utype":1,"ctime":1568005322,"user_name_real":"chrono"}],"discussion_count":2,"race_medal":0,"score":"5862960586","product_id":100029001,"comment_content":"老师，既然在连接层，是无序的，那在http&#47;2中是怎么保证frame的有序性的呢？","like_count":2,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":466696,"discussion_content":"tcp层是有序的，所以一个流里的多个帧会按照顺序依次到达，接收方只要依次接收就可以了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1568005322,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":1,"child_discussions":[{"author":{"id":3014444,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q3auHgzwzM74658w9PQeTM4TcM14BzfpJnVLrsciaS26ibRwRbCE09ydI6UlZhFrJh7iaVLp2xxhBppVDKLyRRg9Q/132","nickname":"Geek_21a73c","note":"","ucode":"104A4AD89DA6BC","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":576476,"discussion_content":"tcp层是有序的，所以一个流里的多个帧会按照顺序依次到达\n\n老师，我对这个不理解","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1655568020,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":466696,"ip_address":""},"score":576476,"extra":""}]}]},{"had_liked":false,"id":349527,"user_name":"cake","can_delete":false,"product_type":"c1","uid":1966533,"ip_address":"","ucode":"55A7FC6CC1204C","user_header":"https://static001.geekbang.org/account/avatar/00/1e/01/c5/b48d25da.jpg","comment_is_top":false,"comment_ctime":1656043323,"is_pvip":false,"replies":[{"id":"127221","content":"我觉得这只是称呼的问题，都是一段段的数据，只是协议里起了个专用名词，把它的作用功能弄清楚就行了，不要太纠结名字。","user_name":"作者回复","comment_id":349527,"uid":"1181974","ip_address":"","utype":1,"ctime":1656054257,"user_name_real":"编辑"}],"discussion_count":1,"race_medal":0,"score":"1656043323","product_id":100029001,"comment_content":"老师请问下，而在“连接”的层面上看，消息却是乱序收发的“帧”，为什么HTTP3 Over UDP 连接层面是包，这个HTTP2连接层面为啥是帧呢？不应该叫报文段么","like_count":1,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":577368,"discussion_content":"我觉得这只是称呼的问题，都是一段段的数据，只是协议里起了个专用名词，把它的作用功能弄清楚就行了，不要太纠结名字。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1656054257,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":311325,"user_name":"Geek_68d3d2","can_delete":false,"product_type":"c1","uid":1674369,"ip_address":"","ucode":"EBD6D881AA7A74","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eqf54z1ZmqQY1kmJ6t1HAnrqMM3j6WKf0oDeVLhtnA2ZUKY6AX9MK6RjvcO8SiczXy3uU0IzBQ3tpw/132","comment_is_top":false,"comment_ctime":1631173849,"is_pvip":false,"replies":[{"id":"112853","content":"当然了，流实际上就是多个无序的数据帧，在tcp连接里乱序发送，到了目的地再按照序号组装，就形成了流。","user_name":"作者回复","comment_id":311325,"uid":"1181974","ip_address":"","utype":1,"ctime":1631239911,"user_name_real":"罗剑锋"}],"discussion_count":1,"race_medal":0,"score":"1631173849","product_id":100029001,"comment_content":"请问同一个流可以在一个tcp连接里面发送吗","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":526561,"discussion_content":"当然了，流实际上就是多个无序的数据帧，在tcp连接里乱序发送，到了目的地再按照序号组装，就形成了流。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1631239911,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":302817,"user_name":"疯琴","can_delete":false,"product_type":"c1","uid":1099379,"ip_address":"","ucode":"82ACAA4A27753D","user_header":"https://static001.geekbang.org/account/avatar/00/10/c6/73/abb7bfe3.jpg","comment_is_top":false,"comment_ctime":1626397950,"is_pvip":false,"replies":[{"id":"109574","content":"不会的，tcp会保证有序送达，多个流是并行乱序发，但看单个流，它里面的帧还是有序的。","user_name":"作者回复","comment_id":302817,"uid":"1181974","ip_address":"","utype":1,"ctime":1626402106,"user_name_real":"罗剑锋"}],"discussion_count":2,"race_medal":0,"score":"1626397950","product_id":100029001,"comment_content":"请问老师，同一个流里面不同序号的帧可以乱序到达统一组装么？","like_count":1,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":523440,"discussion_content":"不会的，tcp会保证有序送达，多个流是并行乱序发，但看单个流，它里面的帧还是有序的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1626402106,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1099379,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c6/73/abb7bfe3.jpg","nickname":"疯琴","note":"","ucode":"82ACAA4A27753D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":384226,"discussion_content":"谢谢，也就是说一个流里的帧按顺序发，但是可能1号流发一个帧，3号流发一个帧，1号流再发一个帧，是这个意思吧？","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1626432734,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":296205,"user_name":"Mingyan","can_delete":false,"product_type":"c1","uid":1344408,"ip_address":"","ucode":"02F222332B9045","user_header":"https://static001.geekbang.org/account/avatar/00/14/83/98/fab9bd2a.jpg","comment_is_top":false,"comment_ctime":1622803937,"is_pvip":false,"replies":[{"id":"107504","content":"tcp连接关闭后就消失了，再建连就是一个新的连接，不存在复用。","user_name":"作者回复","comment_id":296205,"uid":"1181974","ip_address":"","utype":1,"ctime":1622853596,"user_name_real":"罗剑锋"}],"discussion_count":1,"race_medal":0,"score":"1622803937","product_id":100029001,"comment_content":"我有疑问，http2.0如果遇到服务器主动关闭tcp链接会理会回ack，再发fin等ack去关闭tcp链接还是不理会继续使用被关闭的tcp链接了？","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":521362,"discussion_content":"tcp连接关闭后就消失了，再建连就是一个新的连接，不存在复用。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1622853596,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":296150,"user_name":"hao","can_delete":false,"product_type":"c1","uid":2368078,"ip_address":"","ucode":"371A47DD4510E7","user_header":"https://static001.geekbang.org/account/avatar/00/24/22/4e/2e081d9c.jpg","comment_is_top":false,"comment_ctime":1622777807,"is_pvip":false,"replies":[{"id":"107503","content":"在http&#47;1里，请求只能由客户端发起，在http&#47;2里，服务器端也可以发起流，所以服务器就可以用这样的流向客户端推送数据。<br><br>但http&#47;2的推送目的不是即时通讯，功能上不如websocket那么强大。","user_name":"作者回复","comment_id":296150,"uid":"1181974","ip_address":"","utype":1,"ctime":1622853535,"user_name_real":"罗剑锋"}],"discussion_count":1,"race_medal":0,"score":"1622777807","product_id":100029001,"comment_content":"为何新增了流的概念，就可以实现服务器主动推送呢？那HTTP2可以像websocket那样实现即使通信（服务器主动推送） ？","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":521340,"discussion_content":"在http/1里，请求只能由客户端发起，在http/2里，服务器端也可以发起流，所以服务器就可以用这样的流向客户端推送数据。\n\n但http/2的推送目的不是即时通讯，功能上不如websocket那么强大。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1622853535,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":268795,"user_name":"ThinkerWalker","can_delete":false,"product_type":"c1","uid":1317111,"ip_address":"","ucode":"8CD44FFC37ACB7","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/rQOn22bNV0kHpoPWRLRicjQCOkiaYmcVABiaIJxIDWIibSdqWXYTxjcdjiadibIxFsGVp5UE4DBd6Nx2DxjhAdlMIZeQ/132","comment_is_top":false,"comment_ctime":1608351797,"is_pvip":false,"replies":[{"id":"97544","content":"不会，http&#47;1虽然是多个连接，但单个连接的利用率很低，而http&#47;2的一个连接利用率很高，还有压缩功能，所以相当于http&#47;1的三四个连接甚至更多。","user_name":"作者回复","comment_id":268795,"uid":"1181974","ip_address":"","utype":1,"ctime":1608451833,"user_name_real":"罗剑锋"}],"discussion_count":1,"race_medal":0,"score":"1608351797","product_id":100029001,"comment_content":"老师，http2使用一个tcp连接传输多个流（多个请求），http1.1用的是多个tcp连接多个请求，会不会因为连接少而导致整体吞吐量降低？","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":512042,"discussion_content":"不会，http/1虽然是多个连接，但单个连接的利用率很低，而http/2的一个连接利用率很高，还有压缩功能，所以相当于http/1的三四个连接甚至更多。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1608451833,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":247470,"user_name":" 尿布","can_delete":false,"product_type":"c1","uid":1476323,"ip_address":"","ucode":"D1C8BDA7540962","user_header":"https://static001.geekbang.org/account/avatar/00/16/86/e3/a31f6869.jpg","comment_is_top":false,"comment_ctime":1599717217,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1599717217","product_id":100029001,"comment_content":"HTTP&#47;2的“前身”SPDY在压缩头部时使用了gzip，但发现会受到“CRIME”攻击，所以开发了专用的压缩算法HPACK","like_count":0},{"had_liked":false,"id":236211,"user_name":"风","can_delete":false,"product_type":"c1","uid":1147929,"ip_address":"","ucode":"AFDBEFA49F269E","user_header":"https://static001.geekbang.org/account/avatar/00/11/84/19/7ed2ffa6.jpg","comment_is_top":false,"comment_ctime":1595345880,"is_pvip":true,"replies":[{"id":"87294","content":"帧里有流id，流里的帧是有序的，帧类型会标记流的结束，看后面的讲解就可以了。","user_name":"作者回复","user_name_real":"罗剑锋","uid":"1181974","ctime":1595379228,"ip_address":"","comment_id":236211,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1595345880","product_id":100029001,"comment_content":"老师,请教一个关于多路复用的问题<br>由于http2将数据分割为帧进行无须发送,那接收方是怎么正确处理请求的呢？<br>通过什么判断该请求的数据都已经发送完毕","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":501985,"discussion_content":"帧里有流id，流里的帧是有序的，帧类型会标记流的结束，看后面的讲解就可以了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1595379228,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":216381,"user_name":"Joker","can_delete":false,"product_type":"c1","uid":1156592,"ip_address":"","ucode":"126AF848001A1E","user_header":"https://static001.geekbang.org/account/avatar/00/11/a5/f0/8648c464.jpg","comment_is_top":false,"comment_ctime":1589249248,"is_pvip":false,"replies":[{"id":"80072","content":"不是。<br><br>二进制用位来表示，含义清楚，没有纯文本大小写的模糊、歧义，解析起来效率高，而且二进制也更省空间。<br><br>可以看下一节课，看看http&#47;2的头，再对比http&#47;1的头。","user_name":"作者回复","user_name_real":"chrono","uid":"1181974","ctime":1589251909,"ip_address":"","comment_id":216381,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1589249248","product_id":100029001,"comment_content":"老师，使用二进制的传输，是节省了从字符转二进制，以及从二进制转字符类型的时间吗","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":494796,"discussion_content":"不是。\n\n二进制用位来表示，含义清楚，没有纯文本大小写的模糊、歧义，解析起来效率高，而且二进制也更省空间。\n\n可以看下一节课，看看http/2的头，再对比http/1的头。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1589251909,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":206587,"user_name":"张三","can_delete":false,"product_type":"c1","uid":1004092,"ip_address":"","ucode":"1155528FAE1546","user_header":"https://static001.geekbang.org/account/avatar/00/0f/52/3c/d6fcb93a.jpg","comment_is_top":false,"comment_ctime":1586903443,"is_pvip":false,"replies":[{"id":"77215","content":"不是的。一般的web服务器直接在端口上提供服务，不需要重定向。<br><br>这里是因为80、443提供的是普通的http&#47;https服务，为了走http&#47;2所以就加了一个重定向，是不得已而为之。","user_name":"作者回复","user_name_real":"chrono","uid":"1181974","ctime":1586926956,"ip_address":"","comment_id":206587,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1586903443","product_id":100029001,"comment_content":"学习了，在小贴士里看到端口的重定向，有个疑问，我们一般在web 服务器配置不同的http端口和https端口都是用重定向吗？","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":491834,"discussion_content":"不是的。一般的web服务器直接在端口上提供服务，不需要重定向。\n\n这里是因为80、443提供的是普通的http/https服务，为了走http/2所以就加了一个重定向，是不得已而为之。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1586926956,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":202447,"user_name":"钱","can_delete":false,"product_type":"c1","uid":1009652,"ip_address":"","ucode":"2C92A243A463D4","user_header":"https://static001.geekbang.org/account/avatar/00/0f/67/f4/9a1feb59.jpg","comment_is_top":false,"comment_ctime":1585989959,"is_pvip":false,"replies":[{"id":"76049","content":"回答的很好。<br><br>看示意图，流是虚拟的，数据可以双向流动，因为流实际上只是个数字编号，只要是同一个编号的帧就可以认为属于一个流，那么数据双向也就可以理解了。","user_name":"作者回复","user_name_real":"chrono","uid":"1181974","ctime":1586222885,"ip_address":"","comment_id":202447,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1585989959","product_id":100029001,"comment_content":"1：你觉得明文形式的 HTTP&#47;2（h2c）有什么好处，应该如何使用呢？<br>明文就是没加密，没加密就不会有加密的开销，性能会好一些，针对就是用于信息分享的场景加不加密其实无所谓啦！之所以，挖空心思要安全要加密主要是为了钱，为了不让别人轻易知道。<br><br>2：你觉得应该怎样理解 HTTP&#47;2 里的“流”，为什么它是“虚拟”的？<br>流就是具有方向性的二进制字节数据，为啥说她是虚拟的？是因为这里的流实际是一些有序的数据帧组成的，并且流动的方向是双向的嘛？不太清楚为啥这么说？另外，数据帧是将字节封装了一下是吗？具有一定的格式，也会更大一些。<br><br>3：你能对比一下 HTTP&#47;2 与 HTTP&#47;1、HTTPS 的相同点和不同点吗？<br>首先，他们的核心关注点不同，HTTP&#47;1主要就是分享信息之用，HTTPS主要是安全的分享信息，HTTP&#47;2是想又快又安全的解决信息分享。后一个协议的出现为了解决前一个的缺陷，后面的也是类似。<br>然后就是解决问题的具体方案有所不同了，老师文章给的那个对比图就非常的形象。<br>相同点本质都是HTTP协议的家庭成员，初心一样，底层基因一样，后面的成员为了适应环境进行了适当的变异，变得更安全更快更强。","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":490585,"discussion_content":"回答的很好。\n\n看示意图，流是虚拟的，数据可以双向流动，因为流实际上只是个数字编号，只要是同一个编号的帧就可以认为属于一个流，那么数据双向也就可以理解了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1586222885,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":196569,"user_name":"Geek_5b0e47","can_delete":false,"product_type":"c1","uid":1822723,"ip_address":"","ucode":"3D6F1426B0593D","user_header":"","comment_is_top":false,"comment_ctime":1585293593,"is_pvip":false,"replies":[{"id":"74441","content":"<br>1.http协议本来就是双向的，流就相当于http&#47;1里的一个连接。<br><br>2.server push就是为这个而诞生的，可以主动推送。<br><br>可以再多看几遍，里面都有说，不过点比较散。","user_name":"作者回复","user_name_real":"chrono","uid":"1181974","ctime":1585303162,"ip_address":"","comment_id":196569,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1585293593","product_id":100029001,"comment_content":"流是二进制帧的双向传输序列。是双方通信吗？服务器，再没有请求时，可以推送更新数据吗？","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":489333,"discussion_content":"\n1.http协议本来就是双向的，流就相当于http/1里的一个连接。\n\n2.server push就是为这个而诞生的，可以主动推送。\n\n可以再多看几遍，里面都有说，不过点比较散。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585303162,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":140548,"user_name":"Geek_007","can_delete":false,"product_type":"c1","uid":1467182,"ip_address":"","ucode":"C80107538EAA7F","user_header":"https://static001.geekbang.org/account/avatar/00/16/63/2e/e49116d1.jpg","comment_is_top":false,"comment_ctime":1570982121,"is_pvip":false,"replies":[{"id":"54337","content":"<br>1.我测试是不行的，也许新的有变化，有空再试试。<br><br>2.cbc不安全，http&#47;2已经禁用了，可以参考rfc。","user_name":"作者回复","user_name_real":"chrono","uid":"1181974","ctime":1571015585,"ip_address":"","comment_id":140548,"utype":1}],"discussion_count":1,"race_medal":1,"score":"1570982121","product_id":100029001,"comment_content":"老师，新版nginx已经支持同端口，不同域名根据配置开启h2了。另外h2不支持CBC吗？CBC只是加解密效率低，没有安全性问题吧，况且的确CBC还是很常见的加密模式呢。","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":470434,"discussion_content":"\n1.我测试是不行的，也许新的有变化，有空再试试。\n\n2.cbc不安全，http/2已经禁用了，可以参考rfc。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571015585,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":122295,"user_name":"猫王者","can_delete":false,"product_type":"c1","uid":1248924,"ip_address":"","ucode":"224826F4BA8443","user_header":"https://static001.geekbang.org/account/avatar/00/13/0e/9c/cb9da823.jpg","comment_is_top":false,"comment_ctime":1565333423,"is_pvip":false,"replies":[{"id":"44909","content":"头部压缩，多路复用，优先级，服务器推送，优点太多了，这些都是http&#47;1不具备的。","user_name":"作者回复","user_name_real":"chrono","uid":"1181974","ctime":1565337918,"ip_address":"","comment_id":122295,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1565333423","product_id":100029001,"comment_content":"http1中消息的内容不也通过一定的编码比如utf8，将文本转成二进制，然后在网络上传输吗？http2和它又能有什么区别呢","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":462192,"discussion_content":"头部压缩，多路复用，优先级，服务器推送，优点太多了，这些都是http/1不具备的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1565337918,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":121027,"user_name":"-W.LI-","can_delete":false,"product_type":"c1","uid":1210699,"ip_address":"","ucode":"3556786538664F","user_header":"https://static001.geekbang.org/account/avatar/00/12/79/4b/740f91ca.jpg","comment_is_top":false,"comment_ctime":1565051692,"is_pvip":false,"replies":[{"id":"44521","content":"不太了解AMPT，所以无法做比较，等讲http&#47;2流细节的时候你可以对比一下。","user_name":"作者回复","user_name_real":"chrono","uid":"1181974","ctime":1565065819,"ip_address":"","comment_id":121027,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1565051692","product_id":100029001,"comment_content":"老师好。之前用MQ的时候，AMPT协议说是只打开一个长链接TCP链接。然后AMPT协议每次都是在这个链接里打开信道进行传输。队列和client(服务器)IP和端口基本固定，如果以TCP链接形式会占用很多端口号，还影响性能，所以就采用了信道。可是信道和信道之间如何实现数据隔离和马上要讲的http2的channel原理差不多么?","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":461582,"discussion_content":"不太了解AMPT，所以无法做比较，等讲http/2流细节的时候你可以对比一下。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1565065819,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1008348,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/62/dc/8876c73b.jpg","nickname":"moooofly","note":"","ucode":"4A20795C281B6F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":6822,"discussion_content":"首先，应该是 AMQP 协议，而不是 AMPT ；其次，按照我的理解，两者在原理上是类似的，都是在单条 tcp 连接上通过创建多个“虚拟的”channel 以便于复用；差别在于协议层面了，一个是在“流”上发送 http/2 协议相关内容，一个是在“channel”上发送 amqp 协议相关内容；","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567131320,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":120899,"user_name":"レイン小雨","can_delete":false,"product_type":"c1","uid":1219933,"ip_address":"","ucode":"45BED977EFE852","user_header":"https://static001.geekbang.org/account/avatar/00/12/9d/5d/3fdead91.jpg","comment_is_top":false,"comment_ctime":1565011204,"is_pvip":false,"replies":[{"id":"44451","content":"thanks。","user_name":"作者回复","user_name_real":"chrono","uid":"1181974","ctime":1565045617,"ip_address":"","comment_id":120899,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1565011204","product_id":100029001,"comment_content":"真好","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":461520,"discussion_content":"thanks。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1565045617,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]}]}