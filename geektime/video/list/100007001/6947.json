{"id":6947,"title":"09 |【实验】简化模式授权服务器","content":"<h1 id=\"-\">课件及源码地址</h1>\n<p><a href=\"https://github.com/spring2go/oauth2lab\">https://github.com/spring2go/oauth2lab</a></p>\n","comments":[{"had_liked":false,"id":53920,"user_name":"黑米","can_delete":false,"product_type":"c3","uid":1018706,"ip_address":"","ucode":"E7DBEA7867862A","user_header":"https://static001.geekbang.org/account/avatar/00/0f/8b/52/6659dc1b.jpg","comment_is_top":false,"comment_ctime":1545754842,"is_pvip":false,"replies":[{"id":19667,"content":"嗯，你看得很仔细，视频中我的确之前登录过，浏览器记住了，所以直接到授权页面，按标准简化模式是需用户登录的，谢谢提醒!","user_name":"作者回复","user_name_real":"杨波","uid":1030344,"ctime":1545826973,"ip_address":"","comment_id":53920,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100007001,"comment_content":"波波老师，这个视频中为什么没有输入输入用户名和密码？是不是你之前登录过，浏览器记住了你登录了，就直接问你是否授权？","like_count":2,"discussions":[{"author":{"id":1030344,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/b8/c8/c94d38a7.jpg","nickname":"杨波","note":"","ucode":"FA3418BB703BCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":434288,"discussion_content":"嗯，你看得很仔细，视频中我的确之前登录过，浏览器记住了，所以直接到授权页面，按标准简化模式是需用户登录的，谢谢提醒!","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1545826973,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":130972,"user_name":"无尽","can_delete":false,"product_type":"c3","uid":1126726,"ip_address":"","ucode":"211DBDEABE8FE5","user_header":"https://static001.geekbang.org/account/avatar/00/11/31/46/21581346.jpg","comment_is_top":false,"comment_ctime":1567586361,"is_pvip":false,"replies":[{"id":49551,"content":"SAML和kerberos我也没有直接经验，SAML和OAuth类似，Web时代的一种认证授权标准协议，以xml格式交换数据，比OAuth重，目前还有很多企业在用SAML，OAuth是当前行业主流。","user_name":"作者回复","user_name_real":"杨波","uid":1030344,"ctime":1567688226,"ip_address":"","comment_id":130972,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100007001,"comment_content":"老师，能说说：OAuth SAML kerberos三者区别吗？","like_count":1,"discussions":[{"author":{"id":1030344,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/b8/c8/c94d38a7.jpg","nickname":"杨波","note":"","ucode":"FA3418BB703BCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":466222,"discussion_content":"SAML和kerberos我也没有直接经验，SAML和OAuth类似，Web时代的一种认证授权标准协议，以xml格式交换数据，比OAuth重，目前还有很多企业在用SAML，OAuth是当前行业主流。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567688226,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":28894,"user_name":"赵津","can_delete":false,"product_type":"c3","uid":1121425,"ip_address":"","ucode":"B9FCE2609DC2E4","user_header":"https://static001.geekbang.org/account/avatar/00/11/1c/91/6eed5044.jpg","comment_is_top":false,"comment_ctime":1538188830,"is_pvip":false,"replies":[{"id":10666,"content":"单页应用，对外安全不太敏感场景，或企业内安全不严格场景","user_name":"作者回复","user_name_real":"杨波","uid":1030344,"ctime":1538478061,"ip_address":"","comment_id":28894,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100007001,"comment_content":"请问简化模式的应用场景是？","like_count":1,"discussions":[{"author":{"id":1030344,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/b8/c8/c94d38a7.jpg","nickname":"杨波","note":"","ucode":"FA3418BB703BCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":425410,"discussion_content":"单页应用，对外安全不太敏感场景，或企业内安全不严格场景","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1538478061,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":18494,"user_name":"凯文1985","can_delete":false,"product_type":"c3","uid":1036921,"ip_address":"","ucode":"9A42344649072B","user_header":"https://static001.geekbang.org/account/avatar/00/0f/d2/79/0a432fde.jpg","comment_is_top":false,"comment_ctime":1533374126,"is_pvip":false,"replies":[{"id":6617,"content":"授权服务器和资源服务器住在一起，则通过共享存储(db or in memory)方式实现令牌校验。请使用spring boot 1.x完成实验，2.x还没验证过。","user_name":"作者回复","user_name_real":"杨波","uid":1030344,"ctime":1533694208,"ip_address":"","comment_id":18494,"utype":1}],"discussion_count":2,"race_medal":0,"score":2,"product_id":100007001,"comment_content":"如果授权服务器和资源服务器都放在一起 就不是很明白资源服务器怎么跟授权服务器进行交互来检验token了 同时我用了最新的Springboot 2.1 和spring security 2 来写这个例子 发现一直不成功","like_count":1,"discussions":[{"author":{"id":1030344,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/b8/c8/c94d38a7.jpg","nickname":"杨波","note":"","ucode":"FA3418BB703BCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":421554,"discussion_content":"授权服务器和资源服务器住在一起，则通过共享存储(db or in memory)方式实现令牌校验。请使用spring boot 1.x完成实验，2.x还没验证过。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1533694208,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1336475,"avatar":"https://static001.geekbang.org/account/avatar/00/14/64/9b/d1ab239e.jpg","nickname":"J.Smile","note":"","ucode":"C4D98DFDBF7584","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":190753,"discussion_content":"好问题","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582975648,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":218591,"user_name":"shiziwen","can_delete":false,"product_type":"c3","uid":1016917,"ip_address":"","ucode":"ADADC770D82D66","user_header":"https://static001.geekbang.org/account/avatar/00/0f/84/55/1e40bd61.jpg","comment_is_top":false,"comment_ctime":1589823831,"is_pvip":false,"replies":[{"id":80886,"content":"如果只是实现简单的oauth2授权服务，理解清楚RFC6749就可以实现，本课程后面有一个章，演示基于golang的简单oauth2服务器实现。\n\n如果要实现企业级的oauth&#47;oidc服务，可以参考ory的hydra(https:&#47;&#47;github.com&#47;ory&#47;hydra)\n\n还有一个不错的项目fusionauth(https:&#47;&#47;fusionauth.io&#47;)你也可以研究，它是一个企业级的identity and access management服务器，支持用户数据管理&#47;多因素认证&#47;SSO等功能，也是基于oauth2实现，不过它是免费但是不开源。\n\n\n\n\n","user_name":"作者回复","user_name_real":"杨波","uid":1030344,"ctime":1589900138,"ip_address":"","comment_id":218591,"utype":1}],"discussion_count":2,"race_medal":0,"score":2,"product_id":100007001,"comment_content":"老师的例子都是基于spring已有框架来做的，目的是为了让我们理解Oauth的流程?\n如果我们自己写Oauth授权服务，不基于已有框架，有例子可以参考吗？","like_count":0,"discussions":[{"author":{"id":1030344,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/b8/c8/c94d38a7.jpg","nickname":"杨波","note":"","ucode":"FA3418BB703BCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":495519,"discussion_content":"如果只是实现简单的oauth2授权服务，理解清楚RFC6749就可以实现，本课程后面有一个章，演示基于golang的简单oauth2服务器实现。\n\n如果要实现企业级的oauth/oidc服务，可以参考ory的hydra(https://github.com/ory/hydra)\n\n还有一个不错的项目fusionauth(https://fusionauth.io/)你也可以研究，它是一个企业级的identity and access management服务器，支持用户数据管理/多因素认证/SSO等功能，也是基于oauth2实现，不过它是免费但是不开源。\n\n\n\n\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1589900138,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1016917,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/84/55/1e40bd61.jpg","nickname":"shiziwen","note":"","ucode":"ADADC770D82D66","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":269548,"discussion_content":"好的，多谢老师","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1589905644,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":194214,"user_name":"周达","can_delete":false,"product_type":"c3","uid":1885619,"ip_address":"","ucode":"44E2B397631DB4","user_header":"","comment_is_top":false,"comment_ctime":1585037972,"is_pvip":false,"replies":[{"id":74361,"content":"简化模式获取token之前，用户需要先认证，上面的提示说你没有经过认证。请按照实验的步骤，在application.properties里头配置一个账户密码，然后把浏览器缓存清空一下，浏览器再试，会要求你输入账户密码进行认证。我这边重复做这个实验是OK，其它很多学员也做过这个实验也是OK。","user_name":"作者回复","user_name_real":"杨波","uid":1030344,"ctime":1585232815,"ip_address":"","comment_id":194214,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100007001,"comment_content":"User must be authenticated with Spring Security before authorization can be completed 请问这样报错是因为什么，properties里面没有配置账户密码，因为后台有自己的账户密码登录的时候保留在token里面，总问这种问题怎么解决","like_count":0,"discussions":[{"author":{"id":1030344,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/b8/c8/c94d38a7.jpg","nickname":"杨波","note":"","ucode":"FA3418BB703BCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":488783,"discussion_content":"简化模式获取token之前，用户需要先认证，上面的提示说你没有经过认证。请按照实验的步骤，在application.properties里头配置一个账户密码，然后把浏览器缓存清空一下，浏览器再试，会要求你输入账户密码进行认证。我这边重复做这个实验是OK，其它很多学员也做过这个实验也是OK。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585232815,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":193922,"user_name":"Wu Feiran","can_delete":false,"product_type":"c3","uid":1566865,"ip_address":"","ucode":"D4AA3DE7A8F830","user_header":"https://static001.geekbang.org/account/avatar/00/17/e8/91/7ecb6e35.jpg","comment_is_top":false,"comment_ctime":1584983298,"is_pvip":false,"replies":[{"id":74054,"content":"在RFC6749的简化模式中，这个redirect_uri是optional的，参考：\nhttps:&#47;&#47;tools.ietf.org&#47;html&#47;rfc6749#section-4.2\n\n加的话可以作为多一层的安全校验，防止恶意请求。","user_name":"作者回复","user_name_real":"杨波","uid":1030344,"ctime":1585059085,"ip_address":"","comment_id":193922,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100007001,"comment_content":"老师，我想问一下： 在授权服务器里配置了redirect uri， 在往授权服务器发送请求的时候url又带上了相同的redirect_uri(localhost:9001&#47;callback) , 既然授权服务器已经配置了回调地址，为什么发送请求的时候还要带上这个回调地址呢？\n谢谢！","like_count":0,"discussions":[{"author":{"id":1030344,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/b8/c8/c94d38a7.jpg","nickname":"杨波","note":"","ucode":"FA3418BB703BCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":488702,"discussion_content":"在RFC6749的简化模式中，这个redirect_uri是optional的，参考：\nhttps://tools.ietf.org/html/rfc6749#section-4.2\n\n加的话可以作为多一层的安全校验，防止恶意请求。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585059085,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":156551,"user_name":"壮壮","can_delete":false,"product_type":"c3","uid":1171521,"ip_address":"","ucode":"5284B5DDFDD9AC","user_header":"https://static001.geekbang.org/account/avatar/00/11/e0/41/75038775.jpg","comment_is_top":false,"comment_ctime":1574910659,"is_pvip":false,"replies":[{"id":60216,"content":"谢谢你的提醒！","user_name":"作者回复","user_name_real":"杨波","uid":1030344,"ctime":1575007853,"ip_address":"","comment_id":156551,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100007001,"comment_content":"在用浏览器获取token的时候，输入的链接的时候一定要仔细，否则在输入用户名和密码之后会报错。\n波波老师的请求url是：\nhttp:&#47;&#47;localhost:8080&#47;oauth&#47;authorize?client_id=clientaapp&amp;redirect_uri=http:&#47;&#47;localhost:9001&#47;callback&amp;response_type=token&amp;scope=read_userinfo&amp;state=abc\n我自己由于拼写错误导致了报错。\n报错信息：OAuth Error\nerror=&quot;invalid_client&quot;, error_description=&quot;Bad client credentials&quot;\n原因就是我把在浏览器请求的url写错为：\nhttp:&#47;&#47;localhost:8080&#47;oauth&#47;authorize?client_id=clientaapp&amp;redirect_uri=http:&#47;&#47;localhost:9001&#47;callback&amp;response_type=token&amp;scope=read_userinfo&amp;state=abc。这里的client_id写的有问题，写错为：clientaapp。\n所以一定要仔细。","like_count":0,"discussions":[{"author":{"id":1030344,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/b8/c8/c94d38a7.jpg","nickname":"杨波","note":"","ucode":"FA3418BB703BCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":476151,"discussion_content":"谢谢你的提醒！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1575007853,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":90351,"user_name":"大鹏","can_delete":false,"product_type":"c3","uid":1270632,"ip_address":"","ucode":"F4611B80B08A3A","user_header":"https://static001.geekbang.org/account/avatar/00/13/63/68/14b98bbc.jpg","comment_is_top":false,"comment_ctime":1556498742,"is_pvip":false,"replies":[{"id":32582,"content":"你好，简化模式不安全主要就是你理解的两点：\n1，token对浏览器可见，\n2，获取令牌时只传clientId，没有经过clientSecret校验。\n一般简化模式仅适用于安全不严格的应用场景。\n\n密码模式在开放平台场景下同样也不安全，但是第一方受信认应用场景是可以的，例如，很多公司为自己开发的无线app使用密码模式。\n\n简化模式的令牌解析过程，请参考官方RFC6749文档，4.2节Implicit Grant讲得很清楚，C步骤授权服务器会向浏览器发送重定向指令，重定向地址带#令牌，然后D步骤浏览器根据重定向指令向静态资源服务器(Web Hosted Client Resource)请求静态资源（注意这步#后面的令牌仅留在浏览器端，不会被发送到静态资源服务器），这个静态资源里头含有脚本script，这个脚本在E步骤到达浏览器后可以读取浏览器地址#后面的令牌，这就相当于是一个解析过程。Lab05的Angularjs单页应用实验，代码里头其实有这样一个解析过程。","user_name":"作者回复","user_name_real":"杨波","uid":1030344,"ctime":1556713093,"ip_address":"","comment_id":90351,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100007001,"comment_content":"老师，有几个问题。简化模式是不安全的，我理解的是:\n1.token会在浏览器处解析\n2.简化模式获取token时没传client secret.别人只要拿到client id就能代表这个客户端去获取token.\n这两点缺陷 密码模式也有，那么密码模式也一样不安全吗。既然一样不安全，为什么密码模式允许用refresh token？ 是否可以理解为密码模式比简化模式安全性更高，才允许用refresh toke.那高在哪里呢。\n还有个问题，我看第七讲 讲 spring security auth提到的那个日本公司，并留了个链接，我看了一下。简化模式，获取token的redirect uri是指向client resource的，需要获取脚本解析url #后面的token。为什么在实验中没看到解析过程，直接就返回解析好了的token. 是解析完了吗？另外client resource指向的是什么 与client什么区别。\n","like_count":0,"discussions":[{"author":{"id":1030344,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/b8/c8/c94d38a7.jpg","nickname":"杨波","note":"","ucode":"FA3418BB703BCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":448486,"discussion_content":"你好，简化模式不安全主要就是你理解的两点：\n1，token对浏览器可见，\n2，获取令牌时只传clientId，没有经过clientSecret校验。\n一般简化模式仅适用于安全不严格的应用场景。\n\n密码模式在开放平台场景下同样也不安全，但是第一方受信认应用场景是可以的，例如，很多公司为自己开发的无线app使用密码模式。\n\n简化模式的令牌解析过程，请参考官方RFC6749文档，4.2节Implicit Grant讲得很清楚，C步骤授权服务器会向浏览器发送重定向指令，重定向地址带#令牌，然后D步骤浏览器根据重定向指令向静态资源服务器(Web Hosted Client Resource)请求静态资源（注意这步#后面的令牌仅留在浏览器端，不会被发送到静态资源服务器），这个静态资源里头含有脚本script，这个脚本在E步骤到达浏览器后可以读取浏览器地址#后面的令牌，这就相当于是一个解析过程。Lab05的Angularjs单页应用实验，代码里头其实有这样一个解析过程。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1556713093,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":28155,"user_name":"张乾坤","can_delete":false,"product_type":"c3","uid":1183534,"ip_address":"","ucode":"4A11BD1459BA24","user_header":"https://static001.geekbang.org/account/avatar/00/12/0f/2e/ac4a1399.jpg","comment_is_top":false,"comment_ctime":1538012753,"is_pvip":false,"replies":[{"id":11290,"content":"简化模式也是需要用户认证的，输入用户名密码即可，配在application.properties文件里头","user_name":"作者回复","user_name_real":"杨波","uid":1030344,"ctime":1539177585,"ip_address":"","comment_id":28155,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100007001,"comment_content":"在浏览器中使用github上的测试连接（http:&#47;&#47;localhost:8080&#47;oauth&#47;authorize?client_id=clientapp&amp;redirect_uri=http:&#47;&#47;localhost:9001&#47;callback&amp;response_type=token&amp;scope=read_userinfo&amp;state=abc）提示输入用户名密码是怎么回事？没有返回视频上的token。","like_count":0,"discussions":[{"author":{"id":1030344,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/b8/c8/c94d38a7.jpg","nickname":"杨波","note":"","ucode":"FA3418BB703BCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":425158,"discussion_content":"简化模式也是需要用户认证的，输入用户名密码即可，配在application.properties文件里头","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1539177585,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":24824,"user_name":"朢不了你","can_delete":false,"product_type":"c3","uid":1232145,"ip_address":"","ucode":"2C2F6E8F9C6139","user_header":"https://static001.geekbang.org/account/avatar/00/12/cd/11/cdcc761e.jpg","comment_is_top":false,"comment_ctime":1537196521,"is_pvip":false,"replies":[{"id":9632,"content":"我这边导入正常，github上项目文件应该没有权限只读说法，windows显示文件夹只读也没关系的，你检查下本地环境，如果还有问题可以在其它机器上试一下","user_name":"作者回复","user_name_real":"杨波","uid":1030344,"ctime":1537675727,"ip_address":"","comment_id":24824,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100007001,"comment_content":"老师，项目导不进来，文件被标记为只读，权限拒绝","like_count":0,"discussions":[{"author":{"id":1030344,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/b8/c8/c94d38a7.jpg","nickname":"杨波","note":"","ucode":"FA3418BB703BCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":424115,"discussion_content":"我这边导入正常，github上项目文件应该没有权限只读说法，windows显示文件夹只读也没关系的，你检查下本地环境，如果还有问题可以在其它机器上试一下","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1537675727,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]}]}