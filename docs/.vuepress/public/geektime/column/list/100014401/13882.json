{"id":13882,"title":"01 | 到底什么是微服务？","content":"<p>从谷歌的搜索指数来看，微服务的热度在进入2017年后突然爆发，国内各大会议和论坛的相关讨论也如雨后春笋般层出不穷，各大一线互联网公司也纷纷将这一技术引入并在实际业务中落地。</p><p><img src=\"https://static001.geekbang.org/resource/image/73/6f/7343e2873709893c810797cf7d708f6f.png?wh=1920*1089\" alt=\"\"></p><p>然而据我所知，国内不少中小规模的技术团队对微服务的概念都不甚了解，对该不该引入微服务也不置可否。还有一些技术团队，没有考虑实际业务场景，只是为了追求技术热点，盲目引入微服务，但又缺乏相应的技术掌控能力，最后影响了业务的稳定性。</p><p>对于该不该引入微服务，以及微服务体系需要哪些技术，目前并没有适合中小团队的架构实践落地的指引。因此我结合自己在微博多年的业务实践，总结出了一套微服务落地经验，从基础理论到架构实践，再结合业界最新趋势分析，希望能帮助中小规模团队了解微服务的本质以及对业务的价值，从而做出正确的判断。</p><p>我们先来看看维基百科是如何定义微服务的。微服务的概念最早是在2014年由Martin Fowler和James Lewis共同提出，他们定义了微服务是由单一应用程序构成的小服务，拥有自己的进程与轻量化处理，服务依业务功能设计，以全自动的方式部署，与其他服务使用HTTP API通讯。同时，服务会使用最小规模的集中管理 （例如Docker）技术，服务可以用不同的编程语言与数据库等。</p><!-- [[[read_end]]] --><p>这个理论的定义看着有点晕？没关系，接下来<span class=\"orange\">我来帮你理解到底什么是微服务？</span></p><h2>单体应用</h2><p>在开聊微服务之前，我先要你和介绍下单体应用。如果你不知道单体应用的痛，那也不会深刻理解微服务的价值。</p><p>早些年，各大互联网公司的应用技术栈大致可分为LAMP（Linux + Apache + MySQL + PHP）和MVC（Spring + iBatis/Hibernate + Tomcat）两大流派。无论是LAMP还是MVC，都是为单体应用架构设计的，其优点是学习成本低，开发上手快，测试、部署、运维也比较方便，甚至一个人就可以完成一个网站的开发与部署。</p><p>以MVC架构为例，业务通常是通过部署一个WAR包到Tomcat中，然后启动Tomcat，监听某个端口即可对外提供服务。早期在业务规模不大、开发团队人员规模较小的时候，采用单体应用架构，团队的开发和运维成本都可控。</p><p>然而随着业务规模的不断扩大，团队开发人员的不断扩张，单体应用架构就会开始出现问题。我估计经历过业务和团队快速增长的同学都会对此深有感触。从我的角度来看，大概会有以下几个方面的问题。</p><ul>\n<li>\n<p><strong>部署效率低下</strong>。以我实际参与的项目为例，当单体应用的代码越来越多，依赖的资源越来越多时，应用编译打包、部署测试一次，甚至需要10分钟以上。这也经常被新加入的同学吐槽说，部署测试一次的时间，都可以去楼下喝杯咖啡了。</p>\n</li>\n<li>\n<p><strong>团队协作开发成本高</strong>。以我的经验，早期在团队开发人员只有两三个人的时候，协作修改代码，最后合并到同一个master分支，然后打包部署，尚且可控。但是一旦团队人员扩张，超过5人修改代码，然后一起打包部署，测试阶段只要有一块功能有问题，就得重新编译打包部署，然后重新预览测试，所有相关的开发人员又都得参与其中，效率低下，开发成本极高。</p>\n</li>\n<li>\n<p><strong>系统高可用性差</strong>。因为所有的功能开发最后都部署到同一个WAR包里，运行在同一个Tomcat进程之中，一旦某一功能涉及的代码或者资源有问题，那就会影响整个WAR包中部署的功能。比如我经常遇到的一个问题，某段代码不断在内存中创建大对象，并且没有回收，部署到线上运行一段时间后，就会造成JVM内存泄露，异常退出，那么部署在同一个JVM进程中的所有服务都不可用，后果十分严重。</p>\n</li>\n<li>\n<p><strong>线上发布变慢</strong>。特别是对于Java应用来说，一旦代码膨胀，服务启动的时间就会变长，有些甚至超过10分钟以上，如果机器规模超过100台以上，假设每次发布的步长为10%，单次发布需要就需要100分钟之久。因此，急需一种方法能够将应用的不同模块的解耦，降低开发和部署成本。</p>\n</li>\n</ul><p>想要解决上面这些问题，<strong>服务化</strong>的思想也就应运而生。</p><h2>什么是服务化？</h2><p>这里我就不谈一些官方的、教条主义的概念了。在我看来，用通俗的话来讲，服务化就是把传统的单机应用中通过JAR包依赖产生的本地方法调用，改造成通过RPC接口产生的远程方法调用。一般在编写业务代码时，对于一些通用的业务逻辑，我会尽力把它抽象并独立成为专门的模块，因为这对于代码复用和业务理解都大有裨益。</p><p>在过去的项目经历里，我对此深有体会。以微博系统为例，微博既包含了内容模块，也包含了消息模块和用户模块等。其中消息模块依赖内容模块，消息模块和内容模块又都依赖用户模块。当这三个模块的代码耦合在一起，应用启动时，需要同时去加载每个模块的代码并连接对应的资源。一旦任何模块的代码出现bug，或者依赖的资源出现问题，整个单体应用都会受到影响。</p><p>为此，首先可以把用户模块从单体应用中拆分出来，独立成一个服务部署，以RPC接口的形式对外提供服务。微博和消息模块调用用户接口，就从进程内的调用变成远程RPC调用。这样，用户模块就可以独立开发、测试、上线和运维，可以交由专门的团队来做，与主模块不耦合。进一步的可以再把消息模块也拆分出来作为独立的模块，交由专门的团队来开发和维护。</p><p>可见通过服务化，可以解决单体应用膨胀、团队开发耦合度高、协作效率低下的问题。</p><h2>什么是微服务？</h2><p>从2014年开始，得益于以Docker为代表的容器化技术的成熟以及DevOps文化的兴起，服务化的思想进一步演化，演变为今天我们所熟知的微服务。</p><p>那么微服务相比于服务化又有什么不同呢？</p><p>在我看来，可以总结为以下四点：</p><ul>\n<li>\n<p><strong>服务拆分粒度更细</strong>。微服务可以说是更细维度的服务化，小到一个子模块，只要该模块依赖的资源与其他模块都没有关系，那么就可以拆分为一个微服务。</p>\n</li>\n<li>\n<p><strong>服务独立部署</strong>。每个微服务都严格遵循独立打包部署的准则，互不影响。比如一台物理机上可以部署多个Docker实例，每个Docker实例可以部署一个微服务的代码。</p>\n</li>\n<li>\n<p><strong>服务独立维护</strong>。每个微服务都可以交由一个小团队甚至个人来开发、测试、发布和运维，并对整个生命周期负责。</p>\n</li>\n<li>\n<p><strong>服务治理能力要求高</strong>。因为拆分为微服务之后，服务的数量变多，因此需要有统一的服务治理平台，来对各个服务进行管理。</p>\n</li>\n</ul><p>继续以前面举的微博系统为例，可以进一步对内容模块的功能进行拆分，比如内容模块又包含了feed模块、评论模块和个人页模块。通过微服务化，将这三个模块变成三个独立的服务，每个服务依赖各自的资源，并独立部署在不同的服务池中，可以由不同的开发人员进行维护。当评论服务需求变更时，只需要修改评论业务相关的代码，并独立上线发布；而feed服务和个人页服务不需要变更，也不会受到发布可能带来的变更影响。</p><p>由此可见，微服务化给服务的发布和部署，以及服务的保障带来了诸多好处。</p><h2>总结</h2><p>今天，我介绍了微服务的发展由来，它是由单体应用进化到服务化拆分部署，后期随着移动互联网规模的不断扩大，敏捷开发、持续交付、DevOps理论的发展和实践，以及基于Docker容器化技术的成熟，微服务架构开始流行，逐渐成为应用架构的未来演进方向。</p><p>总结来说，微服务架构是将复杂臃肿的单体应用进行细粒度的服务化拆分，每个拆分出来的服务各自独立打包部署，并交由小团队进行开发和运维，从而极大地提高了应用交付的效率，并被各大互联网公司所普遍采用。</p><h2>思考题</h2><p>你在业务开发中是否也遇到过因单体应用过度膨胀所带来的问题呢？你觉得针对这些问题微服务能解决吗？</p><p>欢迎你在留言区写下自己的思考，与我一起讨论。</p><p></p>","neighbors":{"left":{"article_title":"开篇词 | 微服务，从放弃到入门","id":13672},"right":{"article_title":"02 | 从单体应用走向服务化","id":13891}},"comments":[{"had_liked":false,"id":21265,"user_name":"Colin","can_delete":false,"product_type":"c1","uid":1133540,"ip_address":"","ucode":"C649DFDA62971E","user_header":"https://static001.geekbang.org/account/avatar/00/11/4b/e4/bfe26359.jpg","comment_is_top":false,"comment_ctime":1534987675,"is_pvip":false,"replies":[{"id":"7488","content":"是的，服务化拆分最好不要涉及跨数据库表交互","user_name":"作者回复","user_name_real":"古月中心相心","uid":"1010144","ctime":1534991056,"ip_address":"","comment_id":21265,"utype":1}],"discussion_count":5,"race_medal":0,"score":"834758643099","product_id":100014401,"comment_content":"服务化最难的是在数据库层，因为数据库中很多数据都是相互关联的，比如用户用户跟订单，订单和商品等等这些数据之间都是有关联的，服务拆分之后会面临以下问题:1当需要读取关联数据时，如果采用表连接的方式查询数据会出现跨数据库查询的可能，2如果是通过RPC的方式多次调用(比如要查订单，就需要查询商品及订单详细信息)，也会出现多次调用导致的频繁多次的数据库连接，而如果使用缓存，也会面临数据库与缓存之间的数据同步问题，特别是数据库与缓存服务器都存在集群的情况下，会更难处理，这也是在做微服务之前必须要考虑的问题。","like_count":195,"discussions":[{"author":{"id":1010144,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/69/e0/ff8ee2e2.jpg","nickname":"胡忠想","note":"","ucode":"0792605FC265B4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":422609,"discussion_content":"是的，服务化拆分最好不要涉及跨数据库表交互","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1534991056,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1035090,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/cb/52/d3c95e6c.jpg","nickname":"阿兵","note":"","ucode":"E5A4EC72023DC7","race_medal":1,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":328155,"discussion_content":"微服务会拆分数据库，每个微服务对自己的数据库的数据做增删改操作。对于有关联关系的查询操作：一是可以冗余一些数据，或者建宽表，或通过es来进行；二是服务要提供粗粒度的查询接口（批量查询），而不是循环调用rpc。","likes_number":11,"is_delete":false,"is_hidden":false,"ctime":1606092209,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1093541,"avatar":"https://static001.geekbang.org/account/avatar/00/10/af/a5/afa1d7d7.jpg","nickname":"hasWhere","note":"","ucode":"2C2B2988107489","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":145709,"discussion_content":"非常好的留言，服务化后，数据库随着服务拆分真的是灾难，对于一般技术公司来说，实时查询关联数据难度陡然增加啊","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1579576291,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1199622,"avatar":"https://static001.geekbang.org/account/avatar/00/12/4e/06/f6a0e1bd.jpg","nickname":"篮草派","note":"","ucode":"842449B8D71CE2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":19392,"discussion_content":"那colin提的这个问题应该通过什么去解决？数据结构？","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1569166641,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1308783,"avatar":"https://static001.geekbang.org/account/avatar/00/13/f8/6f/080973cf.jpg","nickname":"Edward","note":"","ucode":"10FAADF92D05F4","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":2342,"discussion_content":"讲的很棒！","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1563500138,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":21288,"user_name":"少帅","can_delete":false,"product_type":"c1","uid":1045791,"ip_address":"","ucode":"EF88F62C236594","user_header":"https://static001.geekbang.org/account/avatar/00/0f/f5/1f/577265ea.jpg","comment_is_top":false,"comment_ctime":1534996687,"is_pvip":false,"replies":[{"id":"7589","content":"实践出真知👍","user_name":"作者回复","user_name_real":"古月中心相心","uid":"1010144","ctime":1535080435,"ip_address":"","comment_id":21288,"utype":1}],"discussion_count":2,"race_medal":0,"score":"310772641999","product_id":100014401,"comment_content":"看到留言里面好多正在经历从单体到微服务的拆分过程，拆分微服务先要把业务梳理清楚，做到心中有数，梳理清楚了那么业务的边界自然清晰了，自然而然对应拆分哪些服务也出来了，拆分的过程中一定是绞杀式的，新的需求自然放到拆分的微服务，老的逻辑按照优先级和重要程度一个点一个点的从单体迁移微服务，服务化上线之后，渐渐取代老的单体，等全部拆分完毕，线上稳定之后，自然就可以下掉老的单体应用","like_count":73,"discussions":[{"author":{"id":1010144,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/69/e0/ff8ee2e2.jpg","nickname":"胡忠想","note":"","ucode":"0792605FC265B4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":422620,"discussion_content":"实践出真知👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1535080435,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2224894,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epzialibpA6iaiaSyicziawiciauBJUfqVicFp8NPXUZKwAic057no97ljkrwhAB42InR2Y94Fq6rVSy3fhCUMA/132","nickname":"Geek_7e139d","note":"","ucode":"F233E16D5479EA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":326273,"discussion_content":"说到边界划分，这又涉及到了ddd，哈哈","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1605574263,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":21243,"user_name":"Neo_PJ","can_delete":false,"product_type":"c1","uid":1212566,"ip_address":"","ucode":"89D25FCABE2130","user_header":"https://static001.geekbang.org/account/avatar/00/12/80/96/eb16ff77.jpg","comment_is_top":false,"comment_ctime":1534985096,"is_pvip":false,"replies":[{"id":"7495","content":"不好整…","user_name":"作者回复","user_name_real":"古月中心相心","uid":"1010144","ctime":1534991228,"ip_address":"","comment_id":21243,"utype":1}],"discussion_count":10,"race_medal":0,"score":"233463219080","product_id":100014401,"comment_content":"现在的系统代码量50w，单体应用，但是拆分成微服务太麻烦了，领导不敢动，系统是金融管理基金托管计算的，太多复杂场景耦合，10几年的代码，好几个团队的代码堆积，俗话就是  又臭又硬的系统，只能不断维护，不敢重新搭建新的框架，不敢拆，拆不得，拆了谁负责，谁敢保证拆后所有功能按照原有一样逻辑呢？<br><br>唉，老员工都是吐槽，继续码代码，分支也多，团队也多，部署一次1小时，每次有代码提交就催着部署，意味着系统动不动挂一小时，部署相当麻烦，文件对比，打包等等<br><br>这个系统没救了","like_count":55,"discussions":[{"author":{"id":1010144,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/69/e0/ff8ee2e2.jpg","nickname":"胡忠想","note":"","ucode":"0792605FC265B4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":422594,"discussion_content":"不好整…","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1534991228,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1733079,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epruzcPicZCsC6ia1ia6sLyMFLwSObk2z6jsRTf3xVMeGrhWZhCxJQjuP9LicCVMJJEWtaEXnaj4g7wkw/132","nickname":"阿尔法号特斯拉","note":"","ucode":"E71695A4E3092A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":49720,"discussion_content":"重写然后再迁移呗","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1573624461,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1078464,"avatar":"https://static001.geekbang.org/account/avatar/00/10/74/c0/28f49baf.jpg","nickname":"王老狮","note":"","ucode":"C54076320D81FC","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":7286,"discussion_content":"服务拆分不了，那就重写把","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1567473975,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1246639,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/PiajxSqBRaEIvrwfqAuRkaK8Pl2apHKFZxd5mjnFhROMNcg5qXUT4AxE2ZTTia5Hg6pmFM1vozq3vZiagJoaJ4Pyg/132","nickname":"zhangwei","note":"","ucode":"B71CBA5311846F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":576844,"discussion_content":"用绞杀模式，新搭建微服务体系，逐个功能迁移","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1655810475,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1048314,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/fe/fa/2a046821.jpg","nickname":"人间四月天","note":"","ucode":"11BE219C23EEBC","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":568858,"discussion_content":"我们40多万，其实没啥不敢动，再复杂的系统，业务熟悉以后，都能划分出来模块，然后一个一个接口迁移，一个一个测试，一个一个切换。 不拆分，其实不但是效率问题，质量也很难保证，你改老代码，新写老代码一样要测试，统计一下，哪些模块，哪些类频道修改，就趁机把他拆出来。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1651244454,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1447283,"avatar":"https://static001.geekbang.org/account/avatar/00/16/15/73/e5e4b245.jpg","nickname":"Andy","note":"","ucode":"708042A35424DC","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":567598,"discussion_content":"不知道现在是什么情况了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1650955291,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1446874,"avatar":"https://wx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTK2sqFM20XhgC5xjEfDhbB1lk6rIe7LnqnxEicDdEcRSJ20YCTeBEcYFE84lvHFrJDq9n4WW7P9Zkg/132","nickname":"nothing","note":"","ucode":"B984E8590D0349","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":564491,"discussion_content":"可以考虑渐进式的微服务化，一次只拆一个，没问题再拆下一个，前提也得是梳理清楚了，要不然很容易就背个大锅","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1650256162,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1447283,"avatar":"https://static001.geekbang.org/account/avatar/00/16/15/73/e5e4b245.jpg","nickname":"Andy","note":"","ucode":"708042A35424DC","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1446874,"avatar":"https://wx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTK2sqFM20XhgC5xjEfDhbB1lk6rIe7LnqnxEicDdEcRSJ20YCTeBEcYFE84lvHFrJDq9n4WW7P9Zkg/132","nickname":"nothing","note":"","ucode":"B984E8590D0349","race_medal":0,"user_type":1,"is_pvip":true},"discussion":{"id":567597,"discussion_content":"渐进明细式是个不错的解决方案，但是问题就是梳理业务逻辑，划分领域，这绝对不好弄，因为他们的系统业务功能实在太多，要梳理清楚，也不是一个两个人能做的，这个需要整个开发团队一起整，先把各自领域的事情划分好，才能往下整。如果这些都没有人去，管理层只是不愿意冒险，只是为了临时的求稳，我觉得，对于技术人员而言，这样的公司和团队是没有必要待的。所以，我觉得最好的给那个哥们的建议就是，这么复杂的系统，又没有人愿意去重新动的话，就离开吧，这样的环境不适合发展","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1650955214,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":564491,"ip_address":""},"score":567597,"extra":""}]},{"author":{"id":1114064,"avatar":"https://static001.geekbang.org/account/avatar/00/10/ff/d0/402be1e9.jpg","nickname":"VIC","note":"","ucode":"3B3E6D344488B2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":239317,"discussion_content":"你是恒生或赢时胜吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1587292961,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1114064,"avatar":"https://static001.geekbang.org/account/avatar/00/10/ff/d0/402be1e9.jpg","nickname":"VIC","note":"","ucode":"3B3E6D344488B2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":239316,"discussion_content":"你是恒生，赢时胜的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1587292930,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":21412,"user_name":"钟悠","can_delete":false,"product_type":"c1","uid":1114612,"ip_address":"","ucode":"5AF2CAE1737927","user_header":"https://static001.geekbang.org/account/avatar/00/11/01/f4/3dc9bcce.jpg","comment_is_top":false,"comment_ctime":1535074120,"is_pvip":true,"replies":[{"id":"7586","content":"实践出真知","user_name":"作者回复","user_name_real":"古月中心相心","uid":"1010144","ctime":1535080244,"ip_address":"","comment_id":21412,"utype":1}],"discussion_count":5,"race_medal":0,"score":"181923700552","product_id":100014401,"comment_content":"在我看来，用通俗的话来讲，服务化就是把传统的单机应用中通过 JAR 包依赖产生的本地方法调用，改造成通过 RPC 接口产生的远程方法调用。这句话真的讲的很透彻👍","like_count":43,"discussions":[{"author":{"id":1010144,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/69/e0/ff8ee2e2.jpg","nickname":"胡忠想","note":"","ucode":"0792605FC265B4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":422667,"discussion_content":"实践出真知","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1535080244,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1207410,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eqXSb2jAzlMM0JdTjWrNiaq2uR9eeloBYp906POddb9evmuj5f4CUoO6ge8TibibwtZicnl1sRHic9rW7g/132","nickname":"紫日","note":"","ucode":"73A8DEE323AC19","race_medal":4,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":377713,"discussion_content":"实际上是分工协作问题","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1622785992,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1710046,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/17/de/36000c5a.jpg","nickname":"Louis","note":"","ucode":"9A8A67FE6A1BF6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":299753,"discussion_content":"是不是，本来方法在一个单体应用，后来拆分到不同的服务当中，然后通过远程的方式进行调用。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1597807057,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1216848,"avatar":"https://static001.geekbang.org/account/avatar/00/12/91/50/e576a068.jpg","nickname":"刘天若Warner","note":"","ucode":"032639CD670DA3","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1710046,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/17/de/36000c5a.jpg","nickname":"Louis","note":"","ucode":"9A8A67FE6A1BF6","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":304747,"discussion_content":"应该是吧","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1599655197,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":299753,"ip_address":""},"score":304747,"extra":""}]},{"author":{"id":1037940,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/d6/74/6f04af6f.jpg","nickname":"鸿溟","note":"","ucode":"C8FC4C3DB6161E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":272325,"discussion_content":"这句话讲的真的透彻👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1590288050,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":21337,"user_name":"YC","can_delete":false,"product_type":"c1","uid":1115326,"ip_address":"","ucode":"84C34DB0485BD1","user_header":"https://static001.geekbang.org/account/avatar/00/11/04/be/24ef74d9.jpg","comment_is_top":false,"comment_ctime":1535032424,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"121794116712","product_id":100014401,"comment_content":"看到有人说dao层要不要抽出来作为微服务，我觉得没必要，每个小应用都应该有自己独立的数据库，如果dao抽出来，意味着其他服务也可以调用这个dao，那就会造成数据库数据的混乱。最好是在dao层上面封装service层，提供给其他应用使用，这样能保证数据的读写可控","like_count":29,"discussions":[{"author":{"id":1192719,"avatar":"https://static001.geekbang.org/account/avatar/00/12/33/0f/85250526.jpg","nickname":"null","note":"","ucode":"4C6D43260E5546","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":4116,"discussion_content":"是啊 服务拆了库应该也拆开来 最好做到独立","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1565142520,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":21293,"user_name":"云学","can_delete":false,"product_type":"c1","uid":1027233,"ip_address":"","ucode":"366AE90BA06356","user_header":"https://static001.geekbang.org/account/avatar/00/0f/ac/a1/43d83698.jpg","comment_is_top":false,"comment_ctime":1535000137,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"121794084425","product_id":100014401,"comment_content":"这篇文章内容比较实在，〃进程内调用改成Rpc调用〃，一语直达本质，期待更多干货","like_count":29},{"had_liked":false,"id":21218,"user_name":"端贺","can_delete":false,"product_type":"c1","uid":1121588,"ip_address":"","ucode":"80F1400B138055","user_header":"https://static001.geekbang.org/account/avatar/00/11/1d/34/8201baab.jpg","comment_is_top":false,"comment_ctime":1534983414,"is_pvip":false,"discussion_count":4,"race_medal":0,"score":"91729296630","product_id":100014401,"comment_content":"看到老师提到微服务粒度，看到一个面试题是这样说的：微服务划分的粒度？<br>这个问题，该从什么方面回答？","like_count":21,"discussions":[{"author":{"id":1438037,"avatar":"https://static001.geekbang.org/account/avatar/00/15/f1/55/8ac4f169.jpg","nickname":"陈国林","note":"","ucode":"83D12F3E79F197","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":185102,"discussion_content":"功能、业务边界","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1582595095,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1246639,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/PiajxSqBRaEIvrwfqAuRkaK8Pl2apHKFZxd5mjnFhROMNcg5qXUT4AxE2ZTTia5Hg6pmFM1vozq3vZiagJoaJ4Pyg/132","nickname":"zhangwei","note":"","ucode":"B71CBA5311846F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":577124,"discussion_content":"1，进行领域拆分，划出限界上下文。2，根据团队，开发人员超过5个进行拆分。2，系统压力过大，再分析是否有进一步垂直拆分得可能性","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1655945887,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1314523,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Rccaya3zw31Pxu1fRSiakKibSSA2xDrnQSJr06QwdlE34ibjyaqmgZs0kOlhl93taZPNDRBmWUk9Pibncd8bohHwVA/132","nickname":"龙胆","note":"","ucode":"C233C1FB862DE0","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":340199,"discussion_content":"老师文章中举的微博用户系统的例子就很好，先拆大的用户出来，再从用户中拆小的出来","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1609925593,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1035090,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/cb/52/d3c95e6c.jpg","nickname":"阿兵","note":"","ucode":"E5A4EC72023DC7","race_medal":1,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":328156,"discussion_content":"由粗到细，先按大模块拆，然后再细化，慢慢演进","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1606092415,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":21523,"user_name":"技术修行者","can_delete":false,"product_type":"c1","uid":1013147,"ip_address":"","ucode":"28CA41A1214D6B","user_header":"https://static001.geekbang.org/account/avatar/00/0f/75/9b/611e74ab.jpg","comment_is_top":false,"comment_ctime":1535153260,"is_pvip":true,"replies":[{"id":"7891","content":"第一个问题：数据库拆分其实不是微服务拆分的关键，如果会引入分布式事务的话，最好不要拆分。<br>第二个问题：长远来看，建议方案2，这样会减少每个微服务同db的连接，在集群规模上千台的情况下，db的连接数不会成为瓶颈，服务启动也会变快，因为初始化连接也会变少。","user_name":"作者回复","user_name_real":"古月中心相心","uid":"1010144","ctime":1535460803,"ip_address":"","comment_id":21523,"utype":1}],"discussion_count":4,"race_medal":5,"score":"78844564588","product_id":100014401,"comment_content":"看了文章和留言，讲的很清楚，请教一个问题，之前也有同学问了。<br><br>对于典型的复杂web应用，当由单体应用改造成微服务时，一般会按照业务进行服务划分，彼此独立的业务拆分到不同的微服务中。但是在数据层面，涉及到下面两个问题:<br>1. 数据库是否拆分？从数据架构的角度看，可能有三个选择:1) 一个db实例，所有微服务在一个schema中，2) 一个db实例，每个微服务有自己的schema，3) 每个微服务有自己的db实例。我们在实际项目中应该如何取舍？<br>2. DAO层是否拆分？可能有两个选择: 1) DAO层保持不变或者单独部署成微服务，所有业务微服务通过引用jar包或者HTTP的方式和DAO进行交互。2) 把DAO进行拆分，每个业务微服务内部管理自己会用到的db数据。在所有微服务采用的技术栈相同的情况下，上面哪种方式更可取？","like_count":19,"discussions":[{"author":{"id":1310798,"avatar":"https://static001.geekbang.org/account/avatar/00/14/00/4e/be2b206b.jpg","nickname":"吴小智","note":"","ucode":"C7C9F58B5C9F7B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":11077,"discussion_content":"数据库可以不用拆分，所有的微服务共用一个数据库；但是 dao 层有必要拆分出来，也就是对数据库的修改，要拆分出来，在业务层，有实体改动的，通过 rpc 调用 dao 来处理，这样的好处是：收敛数据库的操作到一个地方，好维护。","likes_number":4,"is_delete":false,"is_hidden":false,"ctime":1568358574,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1010144,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/69/e0/ff8ee2e2.jpg","nickname":"胡忠想","note":"","ucode":"0792605FC265B4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":422721,"discussion_content":"第一个问题：数据库拆分其实不是微服务拆分的关键，如果会引入分布式事务的话，最好不要拆分。\n第二个问题：长远来看，建议方案2，这样会减少每个微服务同db的连接，在集群规模上千台的情况下，db的连接数不会成为瓶颈，服务启动也会变快，因为初始化连接也会变少。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1535460803,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":1,"child_discussions":[{"author":{"id":1183896,"avatar":"https://static001.geekbang.org/account/avatar/00/12/10/98/bba354ae.jpg","nickname":"丶丶丶丶","note":"","ucode":"AC5808FA03147B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1010144,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/69/e0/ff8ee2e2.jpg","nickname":"胡忠想","note":"","ucode":"0792605FC265B4","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":532499,"discussion_content":"这里只是针对数据库拆不拆分吗？拆了服务不拆分数据库应该也会有分布式事务吧？只是说有的分布式事务可以通过其他途径避免或者有便捷的处理方案","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1637630439,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":422721,"ip_address":""},"score":532499,"extra":"{\"user_type\":1}"}]},{"author":{"id":2815900,"avatar":"https://static001.geekbang.org/account/avatar/00/2a/f7/9c/69c5c5dc.jpg","nickname":"越锋利","note":"","ucode":"63E9E3F3C7D53D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":405605,"discussion_content":"每个微服务的数据要是不独立，那就做不了 non- disruptive update 了…","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1634607255,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":21355,"user_name":"null","can_delete":false,"product_type":"c1","uid":1024294,"ip_address":"","ucode":"F9039EFED6B55D","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/PiajxSqBRaELZPnUAiajaR5C25EDLWeJURggyiaOP5GGPe2qlwpQcm5e3ybib8OsP4tvddFDLVRSNNGL5I3SFPJHsA/132","comment_is_top":false,"comment_ctime":1535038679,"is_pvip":false,"replies":[{"id":"7897","content":"第一点，可以抽离出哪些是公共的模块，并且请求量和重要性值得这么做。<br>第二点，接口定义最好不要随便变更，这是原则，可以添加参数，新增返回字段，也可以新增接口，但最好不要改参数名或者已有字段。","user_name":"作者回复","user_name_real":"古月中心相心","uid":"1010144","ctime":1535461847,"ip_address":"","comment_id":21355,"utype":1}],"discussion_count":1,"race_medal":0,"score":"57369613527","product_id":100014401,"comment_content":"5 年的 php 单体应用，整个项目结构复杂混乱，php 前端和 php 后端各种函数调用。业务逻辑代码也穿插着大量已过期或无关的代码，项目可维护性越来越低。每次需求开发完毕合并分支时，需要花费大量的精力去解决代码冲突。开发的速度远跟不上需求的速度。<br><br>在去年所有新的需求使用 java 进行开发，同时一点一点将 php 的业务迁移到 java。<br>从一开始就没规划好，一股脑喊出了微服务化口号，前期也是真苦了运维和测试。<br><br>一年多过去了，项目现在的的状态：<br>1. 项目内结构依旧混乱，A 模块和 B 模块都依赖于 C 模块，我们的做法是，A 模块里写一次 C 模块，B 模块同样写一遍 C 模块。其中有两个原因，无法实现分布式事务，只好放到同一个系统内，整个流程可以同属于一个事务；另一个原因是模块的边界划分是很模糊的。<br>2. 项目之间的依赖关系就跟意大利面条一样，而且之间的接口，并没有想着去向下兼容，甚至发生过接口定义变更了，导致线上依赖的服务都无法正常提供服务。现在每次发布也是战战兢兢。<br><br>目前面临最大的问题便是分布式事务的问题，导致 DAO 层的代码，重复散落在各个模块之中，真是令人头大。","like_count":13,"discussions":[{"author":{"id":1010144,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/69/e0/ff8ee2e2.jpg","nickname":"胡忠想","note":"","ucode":"0792605FC265B4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":422645,"discussion_content":"第一点，可以抽离出哪些是公共的模块，并且请求量和重要性值得这么做。\n第二点，接口定义最好不要随便变更，这是原则，可以添加参数，新增返回字段，也可以新增接口，但最好不要改参数名或者已有字段。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1535461847,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":21199,"user_name":"WolvesLeader","can_delete":false,"product_type":"c1","uid":1103839,"ip_address":"","ucode":"33610E19CA2E96","user_header":"https://static001.geekbang.org/account/avatar/00/10/d7/df/fc0a6709.jpg","comment_is_top":false,"comment_ctime":1534981628,"is_pvip":false,"replies":[{"id":"7611","content":"我理解你这个需求中间件的需求","user_name":"作者回复","user_name_real":"古月中心相心","uid":"1010144","ctime":1535100972,"ip_address":"","comment_id":21199,"utype":1}],"discussion_count":1,"race_medal":0,"score":"57369556476","product_id":100014401,"comment_content":"老师，问一下，一般和数据库交互的dao层，是单独拿出来做成服务好还是不做好，还有一些公共的模块是不是也要做成服务呢？谢谢啦","like_count":13,"discussions":[{"author":{"id":1010144,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/69/e0/ff8ee2e2.jpg","nickname":"胡忠想","note":"","ucode":"0792605FC265B4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":422575,"discussion_content":"我理解你这个需求中间件的需求","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1535100972,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":21245,"user_name":"Amorfati","can_delete":false,"product_type":"c1","uid":1047091,"ip_address":"","ucode":"71122E777FE2AB","user_header":"https://static001.geekbang.org/account/avatar/00/0f/fa/33/0eb31e67.jpg","comment_is_top":false,"comment_ctime":1534985187,"is_pvip":true,"replies":[{"id":"7498","content":"对","user_name":"作者回复","user_name_real":"古月中心相心","uid":"1010144","ctime":1534991316,"ip_address":"","comment_id":21245,"utype":1}],"discussion_count":1,"race_medal":0,"score":"53074592739","product_id":100014401,"comment_content":"如何确定是过度膨胀也是比较难的问题，在膨胀前切分很有可能随着业务的发展，发现切错了，然后好尴尬，按照我的理解是，单体应用中已经经过足够时间业务上的检验，将其中模式比较稳定，整体高内聚的业务进行抽离。如有错误，还请老师指正。","like_count":13,"discussions":[{"author":{"id":1010144,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/69/e0/ff8ee2e2.jpg","nickname":"胡忠想","note":"","ucode":"0792605FC265B4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":422595,"discussion_content":"对","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1534991316,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":21566,"user_name":"jogin","can_delete":false,"product_type":"c1","uid":1030952,"ip_address":"","ucode":"3D1D4CC09043A5","user_header":"https://static001.geekbang.org/account/avatar/00/0f/bb/28/914b5664.jpg","comment_is_top":false,"comment_ctime":1535169158,"is_pvip":false,"replies":[{"id":"7772","content":"嗯，微服务架构的技术门槛非常高，没有充裕的技术人员不要轻易入坑","user_name":"作者回复","user_name_real":"古月中心相心","uid":"1010144","ctime":1535341987,"ip_address":"","comment_id":21566,"utype":1}],"discussion_count":1,"race_medal":0,"score":"40189874822","product_id":100014401,"comment_content":"现在好多公司强推微服务，不考虑实际情况，单体应用并不是就一定很脆弱，系统不稳定，服务拆分了也不一定稳定，开发效率不高，没准是流程问题，系统本身设计问题耦合严重，单体应用设计不好，玩不转，服务拆分后更乱。<br><br><br>有些开发就是为了研究微服务在内部推广，大家都想学一下然后就达成默契了。","like_count":9,"discussions":[{"author":{"id":1010144,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/69/e0/ff8ee2e2.jpg","nickname":"胡忠想","note":"","ucode":"0792605FC265B4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":422744,"discussion_content":"嗯，微服务架构的技术门槛非常高，没有充裕的技术人员不要轻易入坑","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1535341987,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":21349,"user_name":"cc","can_delete":false,"product_type":"c1","uid":1013850,"ip_address":"","ucode":"AF5196A960F63F","user_header":"","comment_is_top":false,"comment_ctime":1535037277,"is_pvip":false,"replies":[{"id":"7896","content":"是的，微服务架构的核心在于服务治理，而容器是对运维方式的改变，通过容器标准化发布部署。","user_name":"作者回复","user_name_real":"古月中心相心","uid":"1010144","ctime":1535461170,"ip_address":"","comment_id":21349,"utype":1}],"discussion_count":1,"race_medal":0,"score":"40189742941","product_id":100014401,"comment_content":"我的理解，微服务的重点在于拆分治理，spring boot，容器，这些只是实现拆分的一个工具而已，如果你想，使用传统的tomcat启动发布也是可以实现这样的目标的。","like_count":10,"discussions":[{"author":{"id":1010144,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/69/e0/ff8ee2e2.jpg","nickname":"胡忠想","note":"","ucode":"0792605FC265B4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":422643,"discussion_content":"是的，微服务架构的核心在于服务治理，而容器是对运维方式的改变，通过容器标准化发布部署。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1535461170,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":21322,"user_name":"常玉棋","can_delete":false,"product_type":"c1","uid":1142696,"ip_address":"","ucode":"8F7C4B7413C796","user_header":"https://static001.geekbang.org/account/avatar/00/11/6f/a8/c1625c9b.jpg","comment_is_top":false,"comment_ctime":1535027427,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"31599798499","product_id":100014401,"comment_content":"子系统越来越多，重复造轮子的情况也越来越频繁，但我以为小团队还是不要轻易采用微服务方案，毕竟，创业初期人员有限，应该以项目目标实现为第一要务。","like_count":7},{"had_liked":false,"id":21260,"user_name":"WestonLee","can_delete":false,"product_type":"c1","uid":1152658,"ip_address":"","ucode":"085F6BAE863104","user_header":"https://static001.geekbang.org/account/avatar/00/11/96/92/0245816d.jpg","comment_is_top":false,"comment_ctime":1534987026,"is_pvip":false,"replies":[{"id":"7492","content":"微服务有利有弊，总体来看，利大于弊","user_name":"作者回复","user_name_real":"古月中心相心","uid":"1010144","ctime":1534991147,"ip_address":"","comment_id":21260,"utype":1}],"discussion_count":1,"race_medal":0,"score":"31599758098","product_id":100014401,"comment_content":"我们目前的系统就是从单体到服务化再到微服务化的，第一次转变是为了减少大计算量的模块带来的阻塞，提高负载，第二次转变是因为系统已经比较庞大，需要切分的更细，并且便于开发维护。目前用了spring cloud和docker，遇到的最大的问题是数据库伴随服务的切分以及一致性带来的复杂度提升","like_count":7,"discussions":[{"author":{"id":1010144,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/69/e0/ff8ee2e2.jpg","nickname":"胡忠想","note":"","ucode":"0792605FC265B4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":422605,"discussion_content":"微服务有利有弊，总体来看，利大于弊","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1534991147,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":21496,"user_name":"eason2017","can_delete":false,"product_type":"c1","uid":1009422,"ip_address":"","ucode":"E070BA624FA490","user_header":"https://static001.geekbang.org/account/avatar/00/0f/67/0e/c77ad9b1.jpg","comment_is_top":false,"comment_ctime":1535115081,"is_pvip":false,"replies":[{"id":"7892","content":"对，拆分粒度要视业务具体情况以及团队人员规模决定。如果团队人员不错，拆分过多的服务，反而会管理不过来。","user_name":"作者回复","user_name_real":"古月中心相心","uid":"1010144","ctime":1535460891,"ip_address":"","comment_id":21496,"utype":1}],"discussion_count":1,"race_medal":0,"score":"27304918857","product_id":100014401,"comment_content":"反复读了老师的文章，和一些经典的评论，得到了如下几点：<br>1:微服务拆分的粒度，很有讲究，需要根据不同的业务情况作出不同粗细程度的区分。<br>2：进而决定了拆分的方式，按照大模块（用户，订单，单品），还是细粒度的那个核心公共功能，也是受用户并发来拆分。<br>3：就是拆分的原则，什么一定可以拆，什么一定不可以拆。<br>4:不要为了拆分而拆分。<br>请老师批评指正，谢谢🙏","like_count":6,"discussions":[{"author":{"id":1010144,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/69/e0/ff8ee2e2.jpg","nickname":"胡忠想","note":"","ucode":"0792605FC265B4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":422704,"discussion_content":"对，拆分粒度要视业务具体情况以及团队人员规模决定。如果团队人员不错，拆分过多的服务，反而会管理不过来。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1535460891,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":35771,"user_name":"Sawyer","can_delete":false,"product_type":"c1","uid":1011280,"ip_address":"","ucode":"34DC7FBB01FE6E","user_header":"https://static001.geekbang.org/account/avatar/00/0f/6e/50/c85284da.jpg","comment_is_top":false,"comment_ctime":1540790228,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"23015626708","product_id":100014401,"comment_content":"公司是一个电商项目，负责维护商品模块。在一年多的时间里，随着业务规模和业务复杂度的提升，参与了价格服务、库存服务、品牌服务、供应商服务等服务的拆分，并交由不同团队开发维护。在开发部署阶段的好处是显而易见的，但是随着服务的不断拆分也造成了聚合数据的性能瓶颈，被折磨的痛苦不堪。例如一个商品详情或者商品列表页面，都需要依赖大量的RPC调用做数据聚合，导致了响应时间的上升和使用缓存的难度，并且由于依赖了大量的非关键服务也为会为系统高可用性埋下了隐患。还有一些为其他后端服务提供的搜索接口也同样面临这样的问题，希望能在专栏中得到启发并优化现有业务。","like_count":5,"discussions":[{"author":{"id":1918112,"avatar":"https://static001.geekbang.org/account/avatar/00/1d/44/a0/16d0d300.jpg","nickname":"ZHANGPING","note":"","ucode":"7108812981C996","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":212597,"discussion_content":"2.增加降级开关，可手动也可自动降级，当依赖的模块挂掉以后，不要阻塞主流程体验","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1584978445,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1918112,"avatar":"https://static001.geekbang.org/account/avatar/00/1d/44/a0/16d0d300.jpg","nickname":"ZHANGPING","note":"","ucode":"7108812981C996","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":212595,"discussion_content":"1.采用异步的方式，同时获取多个依赖模块的数据","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584978379,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":25012,"user_name":"Johnson","can_delete":false,"product_type":"c1","uid":1236061,"ip_address":"","ucode":"C8E307DCA884FF","user_header":"https://static001.geekbang.org/account/avatar/00/12/dc/5d/12e35ced.jpg","comment_is_top":false,"comment_ctime":1537236176,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"23012072656","product_id":100014401,"comment_content":"我们现在再用微服务，但是服务之间产生的RPC调用过多 依赖依然很重，有时启动一个服务需要部署多个服务，这个怎么去优化","like_count":5,"discussions":[{"author":{"id":1615247,"avatar":"https://static001.geekbang.org/account/avatar/00/18/a5/8f/693e483e.jpg","nickname":"Undefined","note":"","ucode":"36DEBA64C297D1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":48977,"discussion_content":"从人员上优化，谁的那一块搞不好就找谁","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1573542348,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1467281,"avatar":"https://static001.geekbang.org/account/avatar/00/16/63/91/05f491f1.jpg","nickname":"lm a cat","note":"","ucode":"8269EB2082BD43","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":3587,"discussion_content":"同问","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1564622024,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":21403,"user_name":"70","can_delete":false,"product_type":"c1","uid":1081899,"ip_address":"","ucode":"A5884B2BDDAB70","user_header":"https://static001.geekbang.org/account/avatar/00/10/82/2b/cf93c499.jpg","comment_is_top":false,"comment_ctime":1535071962,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"23009908442","product_id":100014401,"comment_content":"公司现在的系统采用了按功能进行划分，不同功能的模块，不同Service，不同Service之间依靠rpc进行通信，如果其他服务需要访问的不属于他的数据库，需要对应的Service提供出服务进行访问，这样会有一个问题，本来需要事物执行的逻辑可能会被打散到多个Service执行，那要不要在事物中包含Rpc调用，我的理解是不行的，这样可能会导致数据库事物卡着，那行怎么进行保证一致性喃？通过异步的去确认吗？ ","like_count":5,"discussions":[{"author":{"id":1797435,"avatar":"","nickname":"Geek_523c9e","note":"","ucode":"11CD8CF0EB2CED","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":348348,"discussion_content":"分布式事务","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1612518843,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":21231,"user_name":"青青木","can_delete":false,"product_type":"c1","uid":1049870,"ip_address":"","ucode":"2732BA6FBC149D","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJKILshrJiasJADt0FTdA9x9rJbSeM3t7BUgUxKqBpsZK4Uukg9qwmbOCmLia89VaqsPcKyauGBLRFw/132","comment_is_top":false,"comment_ctime":1534984207,"is_pvip":false,"replies":[{"id":"7614","content":"下一节会讨论","user_name":"作者回复","user_name_real":"古月中心相心","uid":"1010144","ctime":1535101084,"ip_address":"","comment_id":21231,"utype":1}],"discussion_count":1,"race_medal":0,"score":"23009820687","product_id":100014401,"comment_content":"老师好，我所在的公司正在进行微服务化的系统改造，原有的系统是一个巨大的单体架构业务系统。在改造过程中我的困惑是微服务的拆分粒度 差的大了感觉效果不好，差的细了业务调用链太长 造成系统响应变慢 问题定位不容易等问题，老师您对微服务的业务划分有什么建议吗？谢谢","like_count":6,"discussions":[{"author":{"id":1010144,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/69/e0/ff8ee2e2.jpg","nickname":"胡忠想","note":"","ucode":"0792605FC265B4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":422587,"discussion_content":"下一节会讨论","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1535101084,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":21804,"user_name":"哈迪斯","can_delete":false,"product_type":"c1","uid":1003507,"ip_address":"","ucode":"B0B06996ED44A2","user_header":"https://static001.geekbang.org/account/avatar/00/0f/4f/f3/5f215d49.jpg","comment_is_top":false,"comment_ctime":1535345460,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"18715214644","product_id":100014401,"comment_content":"“用通俗的话来讲，服务化就是把传统的单机应用中通过 JAR 包依赖产生的本地方法调用，改造成通过 RPC 接口产生的远程方法调用。”直击本质","like_count":4},{"had_liked":false,"id":21275,"user_name":"pws22","can_delete":false,"product_type":"c1","uid":1211317,"ip_address":"","ucode":"0395BC8EB21B5D","user_header":"https://static001.geekbang.org/account/avatar/00/12/7b/b5/d33bedf7.jpg","comment_is_top":false,"comment_ctime":1534988619,"is_pvip":false,"replies":[{"id":"7487","content":"一般来说经过网络传输都会造成性能有一定下降，不过还好可以控制在5ms以内，建议先进行大粒度的模块拆分","user_name":"作者回复","user_name_real":"古月中心相心","uid":"1010144","ctime":1534990984,"ip_address":"","comment_id":21275,"utype":1}],"discussion_count":1,"race_medal":0,"score":"18714857803","product_id":100014401,"comment_content":"阿忠伯好 ，应用微服务化是不是一定会造成系统的性能下降？单应用的架构拆分成微服务是不是可以先稍微大粒度的拆分，然后再进行服务细化","like_count":5,"discussions":[{"author":{"id":1010144,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/69/e0/ff8ee2e2.jpg","nickname":"胡忠想","note":"","ucode":"0792605FC265B4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":422616,"discussion_content":"一般来说经过网络传输都会造成性能有一定下降，不过还好可以控制在5ms以内，建议先进行大粒度的模块拆分","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1534990984,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":21197,"user_name":"lwt","can_delete":false,"product_type":"c1","uid":1063356,"ip_address":"","ucode":"856CFF234B6FE4","user_header":"https://static001.geekbang.org/account/avatar/00/10/39/bc/5a58c429.jpg","comment_is_top":false,"comment_ctime":1534981213,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"18714850397","product_id":100014401,"comment_content":"一个应用包含太多功能，每次改动一块的功能，测试需要整体测试，周期很长。<br>同一时期很多项目都需要去改同一个应用，一个项目上线后，其他项目的需要合并这个项目的代码，然后整体回归测试。<br>因为应该集成的功能很多，新人很难在短时间内熟悉整个应用。","like_count":4},{"had_liked":false,"id":95103,"user_name":"钱","can_delete":false,"product_type":"c1","uid":1009652,"ip_address":"","ucode":"2C92A243A463D4","user_header":"https://static001.geekbang.org/account/avatar/00/0f/67/f4/9a1feb59.jpg","comment_is_top":false,"comment_ctime":1557968819,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"14442870707","product_id":100014401,"comment_content":"阅后感<br>1：啥是微服务？<br>先说啥是服务，我的理解最细粒度的服务就是方法，不管什么语言方法基本都是有的，因为方法的本质就是一起完成一件事的代码语句的集合。<br>那微服务是啥呢？<br>“微”字的魅力在于说明了服务说在的进程提供服务的多寡，比如：一个进程内提供了1024个服务，这个服务应该是的大服务啦！进程间的服务耦合比较紧密，一个出问题会影响另外的其他服务，由于在同一个进程内，所以，测试、部署也需要一起弄，对于没有出问题的服务而言是不公平的。<br>如果一个进程仅题干一个服务，我们可以认为这个服务是个微服务，他与其他服务的耦合性比较低，如果单单处理这个服务是比较简单的。<br><br>通俗的讲，把服务之间的关系从进程内拆分到进程间，就是服务拆分和微服务的基础思路。<br><br>但是问题来啦？<br>拆分后的服务咋分工、协作、通信？咋进行服务的管理？另外服务的拆分咋拆呢？粒度、原则、最佳实际是啥？原本不需要考虑的各种数据一致性问题咋保证？网络通信必然是绕不过的，但是网络通信是不可靠的，至少没有进程内的线程间的通信可靠，这些问题咋弄？另外排查问题的链条也变长了，问题的定位和排查也更费劲啦！怎么办呢？<br><br>我不知道哎!那继续看下一节，看胡老师咋解决的!","like_count":3},{"had_liked":false,"id":71831,"user_name":"天客","can_delete":false,"product_type":"c1","uid":1210859,"ip_address":"","ucode":"F3C5B92A947148","user_header":"https://static001.geekbang.org/account/avatar/00/12/79/eb/1fb3ad2a.jpg","comment_is_top":false,"comment_ctime":1551447068,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"14436348956","product_id":100014401,"comment_content":"微服务增加了代码的调试难度。而且将开发团队聚焦于各自的业务中，方便开发，维护，打包，部署，但弱化了团队对整个系统的理解。微服务简化了自身的部署难度，但对整个系统来讲，相较于单体应用，部署更加复杂，性能定位也更加困难，需要考虑网络等的因素。微服务还要结合容器，负载均衡，限流熔断，弹性伸缩等机制，才能保证系统的稳定性。业界有很多开源的方案，spring cloud,eruka等，提供了很好的微服务实践","like_count":3},{"had_liked":false,"id":21585,"user_name":"瘦是为了帅、","can_delete":false,"product_type":"c1","uid":1056946,"ip_address":"","ucode":"AB79E05B171788","user_header":"https://static001.geekbang.org/account/avatar/00/10/20/b2/88d2d8a4.jpg","comment_is_top":false,"comment_ctime":1535178838,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"14420080726","product_id":100014401,"comment_content":"以前都是接触的单体小项目，还没有遇到膨胀到不行的，目前在这里新公司，用到了微服务！多学习，多了解","like_count":3},{"had_liked":false,"id":21500,"user_name":"而立斋","can_delete":false,"product_type":"c1","uid":1087258,"ip_address":"","ucode":"5FED6E9E148195","user_header":"https://static001.geekbang.org/account/avatar/00/10/97/1a/389eab84.jpg","comment_is_top":false,"comment_ctime":1535116145,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"14420018033","product_id":100014401,"comment_content":"我弄不清楚RPC,跟RESTful有啥关系","like_count":3,"discussions":[{"author":{"id":1438037,"avatar":"https://static001.geekbang.org/account/avatar/00/15/f1/55/8ac4f169.jpg","nickname":"陈国林","note":"","ucode":"83D12F3E79F197","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":185109,"discussion_content":"RESTful是HTTP API的一种标准或规范，目前用的比较多。RPC类似于HTTP都属于应用层协议，只不过HTTP是公认的标准协议，而RPC目前并没有公认的标准协议，基本上是大厂内部自己实现一套，例如Facebook的Thrift，Google的gRPC。RPC实现上也逃不过网络，毕竟数据需要在网络上传输，所以一般会基于TCP协议自定义协议，当然也有基于HTTP协议的","likes_number":4,"is_delete":false,"is_hidden":false,"ctime":1582595817,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1006122,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/5a/2a/abb7bfe3.jpg","nickname":"石头","note":"","ucode":"149984779F5561","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":62249,"discussion_content":"RESTful毛坯房，RPC精装修","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574827061,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":69007,"user_name":"dz617","can_delete":false,"product_type":"c1","uid":1221366,"ip_address":"","ucode":"5952846AB16744","user_header":"","comment_is_top":false,"comment_ctime":1550644131,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10140578723","product_id":100014401,"comment_content":"看老师评论中回答，服务化拆分最好不要牵涉到跨库表交互，但我理解这点在服务拆分过程中其实很难杜绝，在微博服务模块拆分过程中，应该或多或少也会有这方面的问题吧？老师能讲下这块是怎么处理思路或怎样把影响降至最低吗。","like_count":3},{"had_liked":false,"id":43890,"user_name":"进阶的小孔","can_delete":false,"product_type":"c1","uid":1269832,"ip_address":"","ucode":"71E88AE4EFDBF2","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJman25D8JlricJVaeweYqr70vyp2acetStqbtaDnCnroGXvuJfgr1As9q47iacTCUUMK1eRUt4KImg/132","comment_is_top":false,"comment_ctime":1543318544,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10133253136","product_id":100014401,"comment_content":"我也刚开始接触这一块，今年毕业的进入项目组后说时要用微服务啦，我还一直以为是springmvc，现在也是在看方志鹏老师的博客，再结合大佬的。以后问出一些可能有点傻的问题希望多多包涵，也希望评论区的大佬们看见多多指教","like_count":2},{"had_liked":false,"id":21329,"user_name":"Geek_8d2caa","can_delete":false,"product_type":"c1","uid":1211097,"ip_address":"","ucode":"C1E9231FBFDADC","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eorLLvkzT1Nh6zErTsib3MxOCUMz06nibphicvTteeoguqGGVY2XJHC8NfluOia9Hib7ccOMbWI8cgWoxQ/132","comment_is_top":false,"comment_ctime":1535029036,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10124963628","product_id":100014401,"comment_content":"对于业务流程、业务方向天天变的产品，有效的划分微服务边界，不存在的","like_count":2},{"had_liked":false,"id":21289,"user_name":"Geek_34d624","can_delete":false,"product_type":"c1","uid":1080845,"ip_address":"","ucode":"3DC7A1BCDAE0F4","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKu75cECKRFMjCo4p2a1Pfib2sn1h1eibofuUIah7rF4thdVibyKuvOZcOHNLsd0RicryP9gPX5qwUBJg/132","comment_is_top":false,"comment_ctime":1534997481,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10124932073","product_id":100014401,"comment_content":"服务之间都是rpc调用，怎么保证同步，比如数据库是不同事务","like_count":2},{"had_liked":false,"id":21256,"user_name":"林","can_delete":false,"product_type":"c1","uid":1022243,"ip_address":"","ucode":"273F83CB3F9DF8","user_header":"https://static001.geekbang.org/account/avatar/00/0f/99/23/3c3272bd.jpg","comment_is_top":false,"comment_ctime":1534986608,"is_pvip":false,"replies":[{"id":"7493","content":"不是说一个微服务对应一个数据库是最好的拆分粒度，按照业务复杂度整体来评估最好","user_name":"作者回复","user_name_real":"古月中心相心","uid":"1010144","ctime":1534991199,"ip_address":"","comment_id":21256,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10124921200","product_id":100014401,"comment_content":"微服务4点中第一点说：服务拆分粒度更细。只要该模块依赖的资源与其它模块没有关系就可以拆成一个微服务。我有点疑惑，如果按依赖拆分，岂不是拆分的微服务过多了？微服务维护，调用链监控等等岂不是更复杂？另外是不是一个微服务对应一个数据库呢？","like_count":2,"discussions":[{"author":{"id":1010144,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/69/e0/ff8ee2e2.jpg","nickname":"胡忠想","note":"","ucode":"0792605FC265B4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":422602,"discussion_content":"不是说一个微服务对应一个数据库是最好的拆分粒度，按照业务复杂度整体来评估最好","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1534991199,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":21240,"user_name":"刘旺旺","can_delete":false,"product_type":"c1","uid":1086132,"ip_address":"","ucode":"A9E89684BAE08D","user_header":"https://static001.geekbang.org/account/avatar/00/10/92/b4/bd466eed.jpg","comment_is_top":false,"comment_ctime":1534984846,"is_pvip":false,"replies":[{"id":"7496","content":"微服务本质上就是开发、运维一体化，强调的是整个开发模式，服务化强调的是相比单体应用","user_name":"作者回复","user_name_real":"古月中心相心","uid":"1010144","ctime":1534991292,"ip_address":"","comment_id":21240,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10124919438","product_id":100014401,"comment_content":"服务化和微服务还是傻傻的分不清楚，感觉就是差不多的概念。微服务的那些特点，感觉在服务化的时候也可以用上","like_count":3,"discussions":[{"author":{"id":1010144,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/69/e0/ff8ee2e2.jpg","nickname":"胡忠想","note":"","ucode":"0792605FC265B4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":422591,"discussion_content":"微服务本质上就是开发、运维一体化，强调的是整个开发模式，服务化强调的是相比单体应用","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1534991292,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":21216,"user_name":"未设置","can_delete":false,"product_type":"c1","uid":1022852,"ip_address":"","ucode":"0ADE4C369F6526","user_header":"https://static001.geekbang.org/account/avatar/00/0f/9b/84/65440de8.jpg","comment_is_top":false,"comment_ctime":1534983367,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10124917959","product_id":100014401,"comment_content":"服务怎么拆分比较合理;有哪些措施和方法找到服务边界。","like_count":2},{"had_liked":false,"id":21200,"user_name":"乐杰","can_delete":false,"product_type":"c1","uid":1108937,"ip_address":"","ucode":"658FE37228B5EC","user_header":"https://static001.geekbang.org/account/avatar/00/10/eb/c9/172728e0.jpg","comment_is_top":false,"comment_ctime":1534981655,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10124916247","product_id":100014401,"comment_content":"可以部分解决，返回有涉及关联数据查询问题，如文件和用户关联，查看文件列表时，需要显示用户名称，而文件服务只存储用户ID，那么此时如何取用户名好，不带来性能问题","like_count":2},{"had_liked":false,"id":72719,"user_name":"臣子","can_delete":false,"product_type":"c1","uid":1197737,"ip_address":"","ucode":"88A9924E77C052","user_header":"https://static001.geekbang.org/account/avatar/00/12/46/a9/87da06f7.jpg","comment_is_top":false,"comment_ctime":1551702436,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5846669732","product_id":100014401,"comment_content":"老师你好，我有个问题想不明白。 想咨一下。实现微服务后业务调用多个服务怎样实现分布式事物？  如果自己来实现的话有没有成熟的方案？ 大公司一般都怎么处理服务化后事物问题？","like_count":1},{"had_liked":false,"id":52562,"user_name":"Huiwang","can_delete":false,"product_type":"c1","uid":1041005,"ip_address":"","ucode":"13AA893713C65E","user_header":"https://static001.geekbang.org/account/avatar/00/0f/e2/6d/7604b872.jpg","comment_is_top":false,"comment_ctime":1545438911,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"5840406207","product_id":100014401,"comment_content":"php能做微服务吗，","like_count":1,"discussions":[{"author":{"id":1336951,"avatar":"https://static001.geekbang.org/account/avatar/00/14/66/77/194ba21d.jpg","nickname":"lzh","note":"","ucode":"C3D83DF4230109","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":381866,"discussion_content":"搜一搜Hyperf","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1625251134,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1348532,"avatar":"https://static001.geekbang.org/account/avatar/00/14/93/b4/9e9515f3.jpg","nickname":"杰森李","note":"","ucode":"F6AE413CF54636","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":40937,"discussion_content":"可以，微服务是一种架构思想，不单单只有go和java，我们公司现在采用就是lumen搭建php微服务","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1572309036,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":48399,"user_name":"硕","can_delete":false,"product_type":"c1","uid":1310756,"ip_address":"","ucode":"661AE1FC22C943","user_header":"https://static001.geekbang.org/account/avatar/00/14/00/24/6ff7cb37.jpg","comment_is_top":false,"comment_ctime":1544435964,"is_pvip":false,"replies":[{"id":"18047","content":"是的","user_name":"作者回复","user_name_real":"古月中心相心","uid":"1010144","ctime":1544944142,"ip_address":"","comment_id":48399,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5839403260","product_id":100014401,"comment_content":" 项目都有个演变流程 ..还是从单体发展成 微服务模块拆化","like_count":1,"discussions":[{"author":{"id":1010144,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/69/e0/ff8ee2e2.jpg","nickname":"胡忠想","note":"","ucode":"0792605FC265B4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":432161,"discussion_content":"是的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1544944142,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":29345,"user_name":"小猪","can_delete":false,"product_type":"c1","uid":1201662,"ip_address":"","ucode":"EAD6A4876CEF3B","user_header":"https://static001.geekbang.org/account/avatar/00/12/55/fe/ab541300.jpg","comment_is_top":false,"comment_ctime":1538356585,"is_pvip":false,"replies":[{"id":"10785","content":"有的，只不过go语言使用是最近几年火起来的，所以对应的服务化框架也是最近几年才开始慢慢为人熟知的","user_name":"作者回复","user_name_real":"古月中心相心","uid":"1010144","ctime":1538625460,"ip_address":"","comment_id":29345,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5833323881","product_id":100014401,"comment_content":"我看到文章里面谈的微服务都是基于Java开发的系统模式！那么我想知道，是否python、go语言的开发也一样可以做微服务模式呢？还是说目前都是Java开发项目，所以微服务都是研究Java程序的？","like_count":1,"discussions":[{"author":{"id":1010144,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/69/e0/ff8ee2e2.jpg","nickname":"胡忠想","note":"","ucode":"0792605FC265B4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":425557,"discussion_content":"有的，只不过go语言使用是最近几年火起来的，所以对应的服务化框架也是最近几年才开始慢慢为人熟知的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1538625460,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":24817,"user_name":"张峰","can_delete":false,"product_type":"c1","uid":1213807,"ip_address":"","ucode":"AF4F752D4E31C1","user_header":"https://static001.geekbang.org/account/avatar/00/12/85/6f/c6aac308.jpg","comment_is_top":false,"comment_ctime":1537196093,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5832163389","product_id":100014401,"comment_content":"想问下，是用什么语言实现来讲代码实现呢，我只会Java语言","like_count":1},{"had_liked":false,"id":23319,"user_name":"403","can_delete":false,"product_type":"c1","uid":1001867,"ip_address":"","ucode":"D9360256DFEF5D","user_header":"https://static001.geekbang.org/account/avatar/00/0f/49/8b/3596a3e2.jpg","comment_is_top":false,"comment_ctime":1536283776,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5831251072","product_id":100014401,"comment_content":"和soa的区别是什么呢","like_count":1},{"had_liked":false,"id":22913,"user_name":"Spring","can_delete":false,"product_type":"c1","uid":1222211,"ip_address":"","ucode":"8175463FB4705B","user_header":"https://static001.geekbang.org/account/avatar/00/12/a6/43/cb6ab349.jpg","comment_is_top":false,"comment_ctime":1536035205,"is_pvip":false,"replies":[{"id":"8260","content":"单体应用要想变成微服务，就必须通过服务化拆分，服务化是手段。","user_name":"作者回复","user_name_real":"古月中心相心","uid":"1010144","ctime":1536038498,"ip_address":"","comment_id":22913,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5831002501","product_id":100014401,"comment_content":"如果服务拆分涉及到数据库，可不可以将数据库独立部署，多个服务访问同一个数据库？<br>微服务和服务化的区别还没看懂，只是知道微服务的粒度更小，意思是服务化继续拆分模块就成微服务了吗？","like_count":1,"discussions":[{"author":{"id":1010144,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/69/e0/ff8ee2e2.jpg","nickname":"胡忠想","note":"","ucode":"0792605FC265B4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":423319,"discussion_content":"单体应用要想变成微服务，就必须通过服务化拆分，服务化是手段。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1536038498,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":22577,"user_name":"彬哥","can_delete":false,"product_type":"c1","uid":1148392,"ip_address":"","ucode":"6FF7945FF40DD4","user_header":"https://static001.geekbang.org/account/avatar/00/11/85/e8/1e3e5657.jpg","comment_is_top":false,"comment_ctime":1535800212,"is_pvip":false,"replies":[{"id":"8186","content":"motan","user_name":"作者回复","user_name_real":"古月中心相心","uid":"1010144","ctime":1535945682,"ip_address":"","comment_id":22577,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5830767508","product_id":100014401,"comment_content":"请老师推荐一个微服务相关的开源项目，希望能参与。","like_count":1,"discussions":[{"author":{"id":1010144,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/69/e0/ff8ee2e2.jpg","nickname":"胡忠想","note":"","ucode":"0792605FC265B4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":423170,"discussion_content":"motan","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1535945682,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":21843,"user_name":"Aronnnnnnnnnnnn","can_delete":false,"product_type":"c1","uid":1214420,"ip_address":"","ucode":"19014FF4EBA807","user_header":"https://static001.geekbang.org/account/avatar/00/12/87/d4/90eca26c.jpg","comment_is_top":false,"comment_ctime":1535372351,"is_pvip":false,"replies":[{"id":"7884","content":"采用的是什么网络模式？","user_name":"作者回复","user_name_real":"古月中心相心","uid":"1010144","ctime":1535458147,"ip_address":"","comment_id":21843,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5830339647","product_id":100014401,"comment_content":"目前在通过docker将利用dubbo+zookeeper架构的微服务项目容器化，遇到一个问题。服务注册到dubbo后，会显示端口为20880，那么如果将容器内的20880随机暴露在宿主机的话，消费者无法在宿主机中找到20880（因为暴露在主机的为其他端口），麻烦老师不吝赐教 分享下实解决方案。感谢。","like_count":2,"discussions":[{"author":{"id":1010144,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/69/e0/ff8ee2e2.jpg","nickname":"胡忠想","note":"","ucode":"0792605FC265B4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":422887,"discussion_content":"采用的是什么网络模式？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1535458147,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":21723,"user_name":"lundi","can_delete":false,"product_type":"c1","uid":1003106,"ip_address":"","ucode":"FDFC5D4066273D","user_header":"https://static001.geekbang.org/account/avatar/00/0f/4e/62/65466407.jpg","comment_is_top":false,"comment_ctime":1535278554,"is_pvip":true,"replies":[{"id":"7762","content":"其实这个没有什么绝对的正确标准，根据每家公司实际的情况决定","user_name":"作者回复","user_name_real":"古月中心相心","uid":"1010144","ctime":1535341693,"ip_address":"","comment_id":21723,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5830245850","product_id":100014401,"comment_content":"从2016年开始使用微服务进行大规模系统改造，整个过程中最困扰大家的问题有很多。就个人经历来说，最复杂的莫过于服务的拆分。因为这是涉及整个系统服务设计的底层工作。但是往往因为服务拆分工作不好，反倒让微服务的能力和特点发挥不出来。因此，在本专栏中希望作者能够在这方面给出一些建议和指导。","like_count":1,"discussions":[{"author":{"id":1010144,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/69/e0/ff8ee2e2.jpg","nickname":"胡忠想","note":"","ucode":"0792605FC265B4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":422827,"discussion_content":"其实这个没有什么绝对的正确标准，根据每家公司实际的情况决定","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1535341693,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":21556,"user_name":"f","can_delete":false,"product_type":"c1","uid":1027733,"ip_address":"","ucode":"8849D39F700E4B","user_header":"https://static001.geekbang.org/account/avatar/00/0f/ae/95/d1b13c9e.jpg","comment_is_top":false,"comment_ctime":1535167744,"is_pvip":false,"replies":[{"id":"7773","content":"下面一节就是","user_name":"作者回复","user_name_real":"古月中心相心","uid":"1010144","ctime":1535341996,"ip_address":"","comment_id":21556,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5830135040","product_id":100014401,"comment_content":"后面会稍微讲解一下，微博的大致架构吗","like_count":1,"discussions":[{"author":{"id":1010144,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/69/e0/ff8ee2e2.jpg","nickname":"胡忠想","note":"","ucode":"0792605FC265B4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":422736,"discussion_content":"下面一节就是","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1535341996,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":21382,"user_name":"郁","can_delete":false,"product_type":"c1","uid":1058787,"ip_address":"","ucode":"905D8D5FA60172","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/ynEtBO8iayrGrbbekL9g8CJ7Mnl1u2Dom2Bt4XNPNZyTJ5woicYTewvxwTEhEyQ2UEBszRLEj5TkJxicaEb5rW0Cw/132","comment_is_top":false,"comment_ctime":1535069128,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5830036424","product_id":100014401,"comment_content":"我们团队的微服务架构要解决三个问题:1.go，php，nodejs，cpp多技术栈共存。2.拆分业务复杂度场景和数据处理的技术复杂度场景，所以有各业务中心和不同的服务组件，由业务中心组合各服务数据并返回。node全栈关注业务场景和数据组合、必要的渲染页面返回前端，3.扩展，部署，容错的更高要求","like_count":1},{"had_liked":false,"id":21345,"user_name":"登高","can_delete":false,"product_type":"c1","uid":1068600,"ip_address":"","ucode":"CD40046238BA18","user_header":"https://static001.geekbang.org/account/avatar/00/10/4e/38/3faa8377.jpg","comment_is_top":false,"comment_ctime":1535036532,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"5830003828","product_id":100014401,"comment_content":"最近在构建数据分析的系统，学了docker后就一直将它用起来，实际中将一个数据采集处理的模块单独做成了一个docker，然后django后台只是在查表并返回对应数据。一开始有点慌，因为之前是把数据采集入库也写在django中的。现在用docker-compose统合起来感觉很不错。<br><br>之前没了解过微服务，不过这也算一种微服务思路尝试吧","like_count":1},{"had_liked":false,"id":21335,"user_name":"迹_Jason","can_delete":false,"product_type":"c1","uid":1018518,"ip_address":"","ucode":"DBF421257EFD43","user_header":"https://static001.geekbang.org/account/avatar/00/0f/8a/96/7b92b28f.jpg","comment_is_top":false,"comment_ctime":1535032085,"is_pvip":false,"replies":[{"id":"7588","content":"嗯，rpc比较普遍，拿这个举例子","user_name":"作者回复","user_name_real":"古月中心相心","uid":"1010144","ctime":1535080392,"ip_address":"","comment_id":21335,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5829999381","product_id":100014401,"comment_content":"不光光只有rpc方式，还有像Spring cloud的http方式","like_count":1,"discussions":[{"author":{"id":1010144,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/69/e0/ff8ee2e2.jpg","nickname":"胡忠想","note":"","ucode":"0792605FC265B4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":422635,"discussion_content":"嗯，rpc比较普遍，拿这个举例子","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1535080392,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":21263,"user_name":"令仔很忙","can_delete":false,"product_type":"c1","uid":1180427,"ip_address":"","ucode":"485314E2BE327A","user_header":"https://static001.geekbang.org/account/avatar/00/12/03/0b/c32a7e97.jpg","comment_is_top":false,"comment_ctime":1534987332,"is_pvip":false,"replies":[{"id":"7491","content":"小公司确实得考虑架构拆分成本","user_name":"作者回复","user_name_real":"古月中心相心","uid":"1010144","ctime":1534991110,"ip_address":"","comment_id":21263,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5829954628","product_id":100014401,"comment_content":"说到了我们的痛点，尤其是小公司，没有那么大的业务量，也不会考虑这些技术。所以发布的时候就会出现老师说的单体应用出现的各种问题。","like_count":1,"discussions":[{"author":{"id":1010144,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/69/e0/ff8ee2e2.jpg","nickname":"胡忠想","note":"","ucode":"0792605FC265B4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":422607,"discussion_content":"小公司确实得考虑架构拆分成本","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1534991110,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":21262,"user_name":"Alex","can_delete":false,"product_type":"c1","uid":1020799,"ip_address":"","ucode":"517E24A6A343DC","user_header":"https://static001.geekbang.org/account/avatar/00/0f/93/7f/2ade341a.jpg","comment_is_top":false,"comment_ctime":1534987121,"is_pvip":true,"replies":[{"id":"7490","content":"后面服务治理章节会详细讲","user_name":"作者回复","user_name_real":"古月中心相心","uid":"1010144","ctime":1534991089,"ip_address":"","comment_id":21262,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5829954417","product_id":100014401,"comment_content":"微服务网络这块的问题如何解决，像超时这种","like_count":1,"discussions":[{"author":{"id":1010144,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/69/e0/ff8ee2e2.jpg","nickname":"胡忠想","note":"","ucode":"0792605FC265B4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":422606,"discussion_content":"后面服务治理章节会详细讲","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1534991089,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":21249,"user_name":"snakorse","can_delete":false,"product_type":"c1","uid":1064887,"ip_address":"","ucode":"0AD727E1F16993","user_header":"https://static001.geekbang.org/account/avatar/00/10/3f/b7/0d8b5431.jpg","comment_is_top":false,"comment_ctime":1534986082,"is_pvip":false,"replies":[{"id":"7494","content":"会","user_name":"作者回复","user_name_real":"古月中心相心","uid":"1010144","ctime":1534991206,"ip_address":"","comment_id":21249,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5829953378","product_id":100014401,"comment_content":"服务拆分过细的话，不光是治理平台要求高，跨服务调用功能的开发和协作的复杂度和成本也会陡增，关于这些方面，老师后边应该会有所提及吧","like_count":1,"discussions":[{"author":{"id":1010144,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/69/e0/ff8ee2e2.jpg","nickname":"胡忠想","note":"","ucode":"0792605FC265B4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":422598,"discussion_content":"会","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1534991206,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":21239,"user_name":"Hurt","can_delete":false,"product_type":"c1","uid":1050946,"ip_address":"","ucode":"DCE7428CCF08EF","user_header":"https://static001.geekbang.org/account/avatar/00/10/09/42/1f762b72.jpg","comment_is_top":false,"comment_ctime":1534984709,"is_pvip":false,"replies":[{"id":"7497","content":"多种语言都可以","user_name":"作者回复","user_name_real":"古月中心相心","uid":"1010144","ctime":1534991304,"ip_address":"","comment_id":21239,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5829952005","product_id":100014401,"comment_content":"微服务 目前就java为主吗","like_count":1,"discussions":[{"author":{"id":1010144,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/69/e0/ff8ee2e2.jpg","nickname":"胡忠想","note":"","ucode":"0792605FC265B4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":422590,"discussion_content":"多种语言都可以","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1534991304,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":21204,"user_name":"黄朋飞","can_delete":false,"product_type":"c1","uid":1107062,"ip_address":"","ucode":"A1E7E0460A1BCC","user_header":"https://static001.geekbang.org/account/avatar/00/10/e4/76/a97242c0.jpg","comment_is_top":false,"comment_ctime":1534982294,"is_pvip":false,"replies":[{"id":"7613","content":"看公司开发人力吧，如果人力不足不要拆了","user_name":"作者回复","user_name_real":"古月中心相心","uid":"1010144","ctime":1535101052,"ip_address":"","comment_id":21204,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5829949590","product_id":100014401,"comment_content":"现在公司正在准备向微服务方向演进，但是因为功能过多，现在所有业务都是在一个包中，如果采用微服务进行模块拆分，则相应的微服务太多，对应的开发成本将会相应的增加，况且人手不足，不可能一个人维护几十个模块，并且这么多微服务需要一个统一的管理平台，目前并不具备，请问有什么解决方式呢？","like_count":1,"discussions":[{"author":{"id":1010144,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/69/e0/ff8ee2e2.jpg","nickname":"胡忠想","note":"","ucode":"0792605FC265B4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":422578,"discussion_content":"看公司开发人力吧，如果人力不足不要拆了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1535101052,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":21202,"user_name":"martin","can_delete":false,"product_type":"c1","uid":1042483,"ip_address":"","ucode":"F9176708EDA0D6","user_header":"https://static001.geekbang.org/account/avatar/00/0f/e8/33/9a44f239.jpg","comment_is_top":false,"comment_ctime":1534982102,"is_pvip":false,"replies":[{"id":"7612","content":"有跨语言的微服务框架","user_name":"作者回复","user_name_real":"古月中心相心","uid":"1010144","ctime":1535101003,"ip_address":"","comment_id":21202,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5829949398","product_id":100014401,"comment_content":"微服务受语言限制吗？比如c#语言可以构建微服务吗？","like_count":1,"discussions":[{"author":{"id":1010144,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/69/e0/ff8ee2e2.jpg","nickname":"胡忠想","note":"","ucode":"0792605FC265B4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":422577,"discussion_content":"有跨语言的微服务框架","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1535101003,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":319485,"user_name":"刘勇","can_delete":false,"product_type":"c1","uid":2003326,"ip_address":"","ucode":"4776CC4D2821FD","user_header":"https://static001.geekbang.org/account/avatar/00/1e/91/7e/4bb77d45.jpg","comment_is_top":false,"comment_ctime":1635833270,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1635833270","product_id":100014401,"comment_content":"老师，分布式与微服务，他们的关系与区别上什么？其他人总是对分布式与微服务一起混合使用，这让我很困扰。","like_count":0},{"had_liked":false,"id":309055,"user_name":"Sch0ng","can_delete":false,"product_type":"c1","uid":1145554,"ip_address":"","ucode":"73F6113931B1AC","user_header":"https://static001.geekbang.org/account/avatar/00/11/7a/d2/4ba67c0c.jpg","comment_is_top":false,"comment_ctime":1629905533,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1629905533","product_id":100014401,"comment_content":"应用演进过程：单体应用、服务化、微服务。<br>总体上呈现了“分而治之，合而用之”的思想。<br>","like_count":0},{"had_liked":false,"id":297710,"user_name":"菠萝吹雪—Code","can_delete":false,"product_type":"c1","uid":1650378,"ip_address":"","ucode":"A5B2FC661EE17D","user_header":"https://static001.geekbang.org/account/avatar/00/19/2e/ca/469f7266.jpg","comment_is_top":false,"comment_ctime":1623743149,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1623743149","product_id":100014401,"comment_content":"精彩！","like_count":0},{"had_liked":false,"id":296614,"user_name":"努力吧，少年","can_delete":false,"product_type":"c1","uid":2140772,"ip_address":"","ucode":"F544ECF147CBD1","user_header":"https://static001.geekbang.org/account/avatar/00/20/aa/64/bb0431ad.jpg","comment_is_top":false,"comment_ctime":1623064735,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1623064735","product_id":100014401,"comment_content":"不为了因为微服务概念理论先进，就去使用微服务。具体场景还是要具体分析。","like_count":0},{"had_liked":false,"id":296165,"user_name":"紫日","can_delete":false,"product_type":"c1","uid":1207410,"ip_address":"","ucode":"73A8DEE323AC19","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eqXSb2jAzlMM0JdTjWrNiaq2uR9eeloBYp906POddb9evmuj5f4CUoO6ge8TibibwtZicnl1sRHic9rW7g/132","comment_is_top":false,"comment_ctime":1622785949,"is_pvip":true,"discussion_count":0,"race_medal":4,"score":"1622785949","product_id":100014401,"comment_content":"实际上是分工协作问题，工作量小一个人就够了，规模大大道什么程度适用呢？","like_count":0},{"had_liked":false,"id":290083,"user_name":"阎晓静","can_delete":false,"product_type":"c1","uid":1395937,"ip_address":"","ucode":"55DA133B3B5E4E","user_header":"https://static001.geekbang.org/account/avatar/00/15/4c/e1/814431e9.jpg","comment_is_top":false,"comment_ctime":1619351816,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1619351816","product_id":100014401,"comment_content":"单体应用-服务化-微服务。微服务是从服务化，经由容器技术和devpos发展推动的。","like_count":0},{"had_liked":false,"id":283865,"user_name":"樱小路依然","can_delete":false,"product_type":"c1","uid":1269957,"ip_address":"","ucode":"DBA9FF68015FE5","user_header":"https://static001.geekbang.org/account/avatar/00/13/60/c5/69286d58.jpg","comment_is_top":false,"comment_ctime":1615964721,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1615964721","product_id":100014401,"comment_content":"碰到过,但是由于开发人员不足,一整个单体项目无法拆分为多个微服务进行独立维护,所以还是使用单体中间件来进行部署.<br>目前基本上 一个客户需求一个中间件,其中可能包括:基础数据模块,订单模块,发票模块等多个模块,但其实由于模块并不是很多,也不是很复杂,所以单体应用还挺得住","like_count":0},{"had_liked":false,"id":282122,"user_name":"Andy","can_delete":false,"product_type":"c1","uid":1447283,"ip_address":"","ucode":"708042A35424DC","user_header":"https://static001.geekbang.org/account/avatar/00/16/15/73/e5e4b245.jpg","comment_is_top":false,"comment_ctime":1615098191,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1615098191","product_id":100014401,"comment_content":"一、项目初期，与大多数创业项目一样，快速搭建单体应用，快速堆积功能代码，一个原则，就是快，为的就是帮助业务快速验证想法；<br>二、项目发展阶段，项目业务需求不断增加，业务需求不断优化，这个阶段，大量的需求不断涌来，既有新需求，也有优化的需求，这是我们项目半年之后出现的局面。由于单体应用之间的模块耦合度增加，同时，各个系统之间的冗余代码较多，一个需求的变动，需要修改多个系统，进而导致开发成本增加。这个时候，开发人员也增加不少，需求多，公共复用的功能模块被多个开发人员修改，影响很大，每次上线，技术经理需要收集各个上线清单，合并各种分支代码，花费的时间也是非常之多。实际上，后期的时候，业务功能的扩展也非常不好开展。<br>为了解决这些问题，我们也是开始想办法进行服务化，引入微服务框架Spring Cloud，进行各种业务拆分，尤其我们是电商项目，积极把商品模块和订单模块拆分出来，在某种程度上，解决了之前单体机出现的问题","like_count":0},{"had_liked":false,"id":277823,"user_name":"MClink","can_delete":false,"product_type":"c1","uid":1435733,"ip_address":"","ucode":"F479190923355C","user_header":"https://static001.geekbang.org/account/avatar/00/15/e8/55/92f82281.jpg","comment_is_top":false,"comment_ctime":1612605893,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1612605893","product_id":100014401,"comment_content":"几百号人开发一个大单体仓库。就很心累。","like_count":0},{"had_liked":false,"id":264555,"user_name":"老邢","can_delete":false,"product_type":"c1","uid":1433138,"ip_address":"","ucode":"28944333440C0D","user_header":"https://static001.geekbang.org/account/avatar/00/15/de/32/509d6b10.jpg","comment_is_top":false,"comment_ctime":1606524568,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1606524568","product_id":100014401,"comment_content":"服务化和微服务的划分还是不太理解，通过拆分粒度来区分这种区分方式是否准确，拆到什么程度算是微服务也没有量化的标准","like_count":0},{"had_liked":false,"id":255459,"user_name":"J.Smile","can_delete":false,"product_type":"c1","uid":1336475,"ip_address":"","ucode":"C4D98DFDBF7584","user_header":"https://static001.geekbang.org/account/avatar/00/14/64/9b/0b578b08.jpg","comment_is_top":false,"comment_ctime":1603349731,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1603349731","product_id":100014401,"comment_content":"2013年毕业的时候进入了一家小公司，当时用的就是这种单体的springmvc+mybatis，搞了一年，也就是2014年的时候第一次接触到SOA的概念但并不懂是什么意思，查了下百度百科“面向服务于的架构”，直到2017年微服务概念火热，才真正明白了到底是个啥东东。。。。。","like_count":0},{"had_liked":false,"id":247057,"user_name":"夜涛","can_delete":false,"product_type":"c1","uid":1507783,"ip_address":"","ucode":"672CC53663710B","user_header":"https://static001.geekbang.org/account/avatar/00/17/01/c7/549b5616.jpg","comment_is_top":false,"comment_ctime":1599573546,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1599573546","product_id":100014401,"comment_content":"现在的项目有拆分服务思想，不同业务系统做了拆分，但是没落地部署，当做jar包引入主业务系统，打包war包发布，最主要是用户少，使用频率不高，就是说一台服务器一个Tomcat跑得飞起，系统还集成很多小程序调度任务，数据转发跑jar包，感觉还是没达到微服务部署门槛，集群什么的更用不上","like_count":0},{"had_liked":false,"id":220878,"user_name":"蓝猫","can_delete":false,"product_type":"c1","uid":1128676,"ip_address":"","ucode":"A2E11FF854013C","user_header":"https://static001.geekbang.org/account/avatar/00/11/38/e4/17ffa30b.jpg","comment_is_top":false,"comment_ctime":1590333093,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1590333093","product_id":100014401,"comment_content":"我们主要做自动办公系统，系统业务模块越来越多，最后整个系统war包一两百兆，每次打包部署，系统启动都要很长时间；也考虑过微服务，如果采用微服务方式，项目实施部署运维难度都提高了很多，我们目前的人员和技术都跟不上；不知道有没有相比微服务简单一些的拆分系统的方法","like_count":0},{"had_liked":false,"id":176153,"user_name":"小田","can_delete":false,"product_type":"c1","uid":1073342,"ip_address":"","ucode":"59CA02059F71E4","user_header":"https://static001.geekbang.org/account/avatar/00/10/60/be/68ce2fd0.jpg","comment_is_top":false,"comment_ctime":1580973750,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1580973750","product_id":100014401,"comment_content":"单体应用--&gt;SOA--&gt;微服务","like_count":0},{"had_liked":false,"id":142750,"user_name":"beiler","can_delete":false,"product_type":"c1","uid":1192989,"ip_address":"","ucode":"0A62FE86617486","user_header":"https://static001.geekbang.org/account/avatar/00/12/34/1d/169cd800.jpg","comment_is_top":false,"comment_ctime":1571490363,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1571490363","product_id":100014401,"comment_content":"老师您好，我有三个问题：<br>第一个问题：微服务 和 依赖于消息队列的服务有啥区别<br><br>第二个问题 微服务的底层库很多 都是可以通用的，如果不同服务之间的通用库如何来维护<br><br>第三个问题，不同服务是共用一个数据库还是不同数据库，如果设及多个数据库的连表查询问题怎么办<br>","like_count":0},{"had_liked":false,"id":140016,"user_name":"Geek_6ea8f7","can_delete":false,"product_type":"c1","uid":1497495,"ip_address":"","ucode":"8711EF9355FD87","user_header":"","comment_is_top":false,"comment_ctime":1570786543,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1570786543","product_id":100014401,"comment_content":"业务逻辑很复杂的系统在进行微服务化时业务梳理和服务拆分是个很艰巨的任务。遇到过边界模糊的问题，总有一些难以界定的东西按不同的设计思路归属的服务是不一样的，这样就很难达成一致，经常开会讨论的心力交瘁。还有就是在一些通用服务，前期梳理业务时没能做得很全面，设计时为了提高扩展性就设计的比较抽象，难以满足调用方之后在该模块的一些特殊要求，导致调用方不得不做一些重复开发。","like_count":0},{"had_liked":false,"id":109058,"user_name":"kennyeric","can_delete":false,"product_type":"c1","uid":1029516,"ip_address":"","ucode":"157593A3ED6EBB","user_header":"https://wx.qlogo.cn/mmopen/vi_32/DYAIOgq83eo0ef1iaEbdegjIPUibORqB0EcSjdfd05HianjRcCfwWMRaibtFP8rH0icxqzl3AqaiaJnSzOd79FmbPfbw/132","comment_is_top":false,"comment_ctime":1561953882,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1561953882","product_id":100014401,"comment_content":"老师好，我理解微服务架构大部分场景还是不涉及到分布式的强一致性要求，目前我所解决的业务都能用最终一致性去达成业务要求。如果涉及到需要在服务组装层调用跨库的多个微服务的场景，目前我能想到的两种解决方法，第一种是子业务通过本地事件表落盘，然后同步到消息队列，子业务模块通过消费事件达到最终一致性；另外一种是子业务在主业务事务完成之后，直接发起rpc&#47;http调用，在组装这一层去做重试等机制，不知道还有没有我这个理解是否正确？","like_count":0},{"had_liked":false,"id":99214,"user_name":"Dawn","can_delete":false,"product_type":"c1","uid":1156289,"ip_address":"","ucode":"1B22053067EFC3","user_header":"https://static001.geekbang.org/account/avatar/00/11/a4/c1/c4aa1175.jpg","comment_is_top":false,"comment_ctime":1559178608,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1559178608","product_id":100014401,"comment_content":"当开发人数变多，团队中某人对代码进行修改，有可能会影响到别人。<br>增加礼物bug产生的概率。","like_count":0},{"had_liked":false,"id":95560,"user_name":"亚马逊森林","can_delete":false,"product_type":"c1","uid":1351757,"ip_address":"","ucode":"72586F773D2B69","user_header":"https://static001.geekbang.org/account/avatar/00/14/a0/4d/8e78fb88.jpg","comment_is_top":false,"comment_ctime":1558081648,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1558081648","product_id":100014401,"comment_content":"老师课中的代码是用Java编写的，对我写php的有的地方看不懂怎么办","like_count":0},{"had_liked":false,"id":87473,"user_name":"潘军杰13681323693","can_delete":false,"product_type":"c1","uid":1277013,"ip_address":"","ucode":"2453B99485F662","user_header":"https://static001.geekbang.org/account/avatar/00/13/7c/55/ca9ef072.jpg","comment_is_top":false,"comment_ctime":1555602361,"is_pvip":false,"discussion_count":0,"race_medal":1,"score":"1555602361","product_id":100014401,"comment_content":"服务化就是通过rpc接口调用，rpc方式是不是有一定的局限性？rpc会收到开发语言环境的影响，服务提供方和消费方技术栈要求统一。","like_count":0},{"had_liked":false,"id":87470,"user_name":"潘军杰13681323693","can_delete":false,"product_type":"c1","uid":1277013,"ip_address":"","ucode":"2453B99485F662","user_header":"https://static001.geekbang.org/account/avatar/00/13/7c/55/ca9ef072.jpg","comment_is_top":false,"comment_ctime":1555601125,"is_pvip":false,"discussion_count":0,"race_medal":1,"score":"1555601125","product_id":100014401,"comment_content":"不对吧，如果不是统一的技术栈，rpc无法实现","like_count":0},{"had_liked":false,"id":84536,"user_name":"春和景明","can_delete":false,"product_type":"c1","uid":1272482,"ip_address":"","ucode":"A27970A276ECD6","user_header":"https://static001.geekbang.org/account/avatar/00/13/6a/a2/f9efd9dc.jpg","comment_is_top":false,"comment_ctime":1554872890,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1554872890","product_id":100014401,"comment_content":"rpc调用，和https调用，在微服务中各自的优势和劣势，已经他们的应用场景","like_count":0},{"had_liked":false,"id":75155,"user_name":"Jone","can_delete":false,"product_type":"c1","uid":1028106,"ip_address":"","ucode":"E5EC59381AA323","user_header":"https://static001.geekbang.org/account/avatar/00/0f/b0/0a/f7e0d286.jpg","comment_is_top":false,"comment_ctime":1552359191,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1552359191","product_id":100014401,"comment_content":"最近对单体应用的缺点有些感触，今天在来读这篇文章感觉清晰了不少。有个小疑问，微服务划分的标准是什么，什么模块可以拆出来成为单独的一个服务呢","like_count":0},{"had_liked":false,"id":73099,"user_name":"潘军杰13681323693","can_delete":false,"product_type":"c1","uid":1277013,"ip_address":"","ucode":"2453B99485F662","user_header":"https://static001.geekbang.org/account/avatar/00/13/7c/55/ca9ef072.jpg","comment_is_top":false,"comment_ctime":1551797905,"is_pvip":false,"discussion_count":0,"race_medal":1,"score":"1551797905","product_id":100014401,"comment_content":"看公司技术人员的体量了，当用户相关的业务可以好几个开发才能完成的时候，用户相关的业务和技术就可以服务化，单独成为一个小组，用户组，或者叫你们公司的用户中心","like_count":0},{"had_liked":false,"id":62672,"user_name":"mafa1993","can_delete":false,"product_type":"c1","uid":1365509,"ip_address":"","ucode":"1BD351AAA75969","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLJzrtHs9DeaEVx4cxCCXde2HYwAicZ4HIQUW6Sl65gHVsWTnNkXnlCXMNS2wgb4E3EwiceGMlWQB1g/132","comment_is_top":false,"comment_ctime":1548127336,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1548127336","product_id":100014401,"comment_content":"lamp不是mvc架构吗？","like_count":0,"discussions":[{"author":{"id":1435733,"avatar":"https://static001.geekbang.org/account/avatar/00/15/e8/55/92f82281.jpg","nickname":"MClink","note":"","ucode":"F479190923355C","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":348509,"discussion_content":"lamp 是指技术栈， mvc 是一种代码架构风格。不是一个概念\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1612605842,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":54403,"user_name":"野马","can_delete":false,"product_type":"c1","uid":1065176,"ip_address":"","ucode":"CC58CBF541D34A","user_header":"https://static001.geekbang.org/account/avatar/00/10/40/d8/69722032.jpg","comment_is_top":false,"comment_ctime":1545844858,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1545844858","product_id":100014401,"comment_content":"老师好，微服务的意思我理解，但我还想问微服务是什么？<br>我举几个例子:<br>1.JAVA是面相对象的编程语言<br>2.苹果是一种水果<br>3.数组是一种数据结构","like_count":0,"discussions":[{"author":{"id":1336951,"avatar":"https://static001.geekbang.org/account/avatar/00/14/66/77/194ba21d.jpg","nickname":"lzh","note":"","ucode":"C3D83DF4230109","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":381867,"discussion_content":"是一种架构组织","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1625251461,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":47143,"user_name":"得大自在","can_delete":false,"product_type":"c1","uid":1089776,"ip_address":"","ucode":"231708CA97F602","user_header":"https://static001.geekbang.org/account/avatar/00/10/a0/f0/3fda6b8a.jpg","comment_is_top":false,"comment_ctime":1544062862,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1544062862","product_id":100014401,"comment_content":"到底是单体应用还是微服务？这个里面有一个很关键的考虑点，那就是业务场景。如果脱离了业务场景，为了技术而技术，那就有点东施效颦了","like_count":0},{"had_liked":false,"id":42828,"user_name":"WL","can_delete":false,"product_type":"c1","uid":1173771,"ip_address":"","ucode":"6277DCD776B87E","user_header":"https://static001.geekbang.org/account/avatar/00/11/e9/0b/1171ac71.jpg","comment_is_top":false,"comment_ctime":1543052531,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1543052531","product_id":100014401,"comment_content":"把该讲内容总结为几个问题, 大家复习的时候可以先尝试回答这些问题检查自己的掌握程度:<br><br>\t1. <br>微服务的定义是什么?<br>\t2. <br>单体应用架构的问题有哪四点?<br>\t3. <br>服务化的定义是什么?<br>\t4. <br>微服务相比服务化的不同有哪四点?<br><br>","like_count":0},{"had_liked":false,"id":42826,"user_name":"WL","can_delete":false,"product_type":"c1","uid":1173771,"ip_address":"","ucode":"6277DCD776B87E","user_header":"https://static001.geekbang.org/account/avatar/00/11/e9/0b/1171ac71.jpg","comment_is_top":false,"comment_ctime":1543052503,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1543052503","product_id":100014401,"comment_content":"思考题: 现在我们的项目只是分为路由服务和业务服务两部分, RPC框架用的是dubbo, 我认为这并不是微服务, 所有的业务逻辑依然是在一个服务里面.","like_count":0},{"had_liked":false,"id":39953,"user_name":"鹏","can_delete":false,"product_type":"c1","uid":1100891,"ip_address":"","ucode":"A1F9CA8735B65B","user_header":"https://static001.geekbang.org/account/avatar/00/10/cc/5b/e3951f08.jpg","comment_is_top":false,"comment_ctime":1542419199,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1542419199","product_id":100014401,"comment_content":"随着业务复杂度越来越高，耦合度也成几何增加，前期已按照业务进行解耦，并不理想，目前正在考虑微服务。","like_count":0},{"had_liked":false,"id":34114,"user_name":"Adison[]","can_delete":false,"product_type":"c1","uid":1054779,"ip_address":"","ucode":"2198248C27A82D","user_header":"https://static001.geekbang.org/account/avatar/00/10/18/3b/d8dc419a.jpg","comment_is_top":false,"comment_ctime":1540006346,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1540006346","product_id":100014401,"comment_content":"请教下服务化过程中，有哪些好的实践保证业务稳定?  公司现在用户规模基本不会有太大变化，目前单体架构基本满足需求，业务变动也不太大的情况下，每次发布也有单体架构的痛，这种情况是否有服务化的必要？","like_count":0},{"had_liked":false,"id":29845,"user_name":"李扬","can_delete":false,"product_type":"c1","uid":1240316,"ip_address":"","ucode":"8721C20D7AB487","user_header":"https://static001.geekbang.org/account/avatar/00/12/ec/fc/4859f340.jpg","comment_is_top":false,"comment_ctime":1538559937,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1538559937","product_id":100014401,"comment_content":"总结笔记：<br><br>一、单体的不足<br><br>单体架构是把所有模块的命运绑在了一起，如果其中一个模块出现了问题，可能整个后台都会受到牵连，包括部署和运行。举一个例子：像微博这样庞大的后端使用单体，如果说有新来的同事没来得及将代码推到master，那么其他人都得等待他部署完成才最终上线，这是部署层面的问题。再是运行，如果某个代码块创建了大量的内存却没释放，那对整个后台的影响都是巨大的。<br><br>二、服务化<br><br>是把本机的方法调用，变成了远程RPC调用。当单体运行的时候，会把所有模块需要的依赖全部加载，如果某个依赖加载失败，整个单体的启动都可能成为问题。而服务化的做法是每一个模块均可独立开发、测试、部署、上线和运维。不再存在因耦合影响全体的情况<br><br>三、微服务<br><br>把庞大臃肿的单体拆分成细粒度的服务，交给中小团队开发、测试、上线和运维。<br><br><br>","like_count":0},{"had_liked":false,"id":27947,"user_name":"波波安","can_delete":false,"product_type":"c1","uid":1002452,"ip_address":"","ucode":"2A677908E5A75D","user_header":"https://static001.geekbang.org/account/avatar/00/0f/4b/d4/b7719327.jpg","comment_is_top":false,"comment_ctime":1537969259,"is_pvip":false,"discussion_count":0,"race_medal":1,"score":"1537969259","product_id":100014401,"comment_content":"单体应用的问题是代码太臃肿，每改一个小功能都要重启整个应用。可能由于某一个功能的bug导致全站不可用。目前我们采用的是dubbo来做的微服务化，从效果来看，能解决这些问题。","like_count":0},{"had_liked":false,"id":24133,"user_name":"bert","can_delete":false,"product_type":"c1","uid":1021803,"ip_address":"","ucode":"2F89303AE5FB77","user_header":"https://static001.geekbang.org/account/avatar/00/0f/97/6b/c74c4a8e.jpg","comment_is_top":false,"comment_ctime":1536817678,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1536817678","product_id":100014401,"comment_content":"老师能讲一下中台服务架构相比于微服务有什么本质的区别，感觉中台服务本质就是微服务。","like_count":0},{"had_liked":false,"id":22898,"user_name":"郭良兵","can_delete":false,"product_type":"c1","uid":1221306,"ip_address":"","ucode":"FD7023C97B3382","user_header":"https://static001.geekbang.org/account/avatar/00/12/a2/ba/35347269.jpg","comment_is_top":false,"comment_ctime":1536024685,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1536024685","product_id":100014401,"comment_content":"以前做开发的，都是mvc模式，现在转做dba，技术栈都是微服务，学习下微服务架构，才能更好的与研发交流，沟通，谢谢老师的分享","like_count":0},{"had_liked":false,"id":22488,"user_name":"你说的灰","can_delete":false,"product_type":"c1","uid":1158981,"ip_address":"","ucode":"650FA935A7741F","user_header":"https://static001.geekbang.org/account/avatar/00/11/af/45/8bacada2.jpg","comment_is_top":false,"comment_ctime":1535718549,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1535718549","product_id":100014401,"comment_content":"只要该模块依赖的资源与其他模块都没有关系，那么就可以拆分为一个微服务。这句话可以再解释下吗","like_count":0},{"had_liked":false,"id":22227,"user_name":"没有极客精神的极客","can_delete":false,"product_type":"c1","uid":1071957,"ip_address":"","ucode":"37C61123A321E7","user_header":"https://static001.geekbang.org/account/avatar/00/10/5b/55/c0d3d096.jpg","comment_is_top":false,"comment_ctime":1535582452,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1535582452","product_id":100014401,"comment_content":"忠伯讲的从单体应用演变为微服务带来的好处主要是独立部署和运维及团队协作效率的提升，同杨波老师提到的康威定律异曲同工，系统的架构应该随着组织架构的改变而进行演化，当业务规模扩大，团队成员增加，单体应用对应的组织架构就变的臃肿和低效，需要演化成微服务对应的多个小团队高效协作的组织架构。","like_count":1},{"had_liked":false,"id":22167,"user_name":"wangbo","can_delete":false,"product_type":"c1","uid":1125722,"ip_address":"","ucode":"3F0C9C320F0A1D","user_header":"https://static001.geekbang.org/account/avatar/00/11/2d/5a/d965c147.jpg","comment_is_top":false,"comment_ctime":1535519759,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1535519759","product_id":100014401,"comment_content":"微服务和soa有什么区别，没搞懂","like_count":0},{"had_liked":false,"id":21978,"user_name":"忠厚","can_delete":false,"product_type":"c1","uid":1105648,"ip_address":"","ucode":"86ED2B630187C9","user_header":"https://static001.geekbang.org/account/avatar/00/10/de/f0/ccf46294.jpg","comment_is_top":false,"comment_ctime":1535426040,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1535426040","product_id":100014401,"comment_content":"微服务和服务化的不同个人认为是更多的是业务场景的不同.而粒度，独立部署&#47;维护，服务治理等问题是不同业务场景带来的问题的不同解决方式","like_count":0},{"had_liked":false,"id":21968,"user_name":"Jarvis","can_delete":false,"product_type":"c1","uid":1087106,"ip_address":"","ucode":"4D780F9FD13F93","user_header":"https://static001.geekbang.org/account/avatar/00/10/96/82/8ac1e909.jpg","comment_is_top":false,"comment_ctime":1535422074,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1535422074","product_id":100014401,"comment_content":"类似面向对象里的松耦合？只是面向对象是从代码逻辑的角度，微服务把它应用到了物理层面？","like_count":0},{"had_liked":false,"id":21716,"user_name":"Chronos","can_delete":false,"product_type":"c1","uid":1213324,"ip_address":"","ucode":"B9F2C5DCAAE6B7","user_header":"https://static001.geekbang.org/account/avatar/00/12/83/8c/60c99350.jpg","comment_is_top":false,"comment_ctime":1535268982,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1535268982","product_id":100014401,"comment_content":"我们的系统，涉及软硬件通讯，APP远程控制设备（不是智能家居）。APP与服务端是HTTP，而设备与服务端是TCP。设备通讯模块在一开始就独立设计成一个模块，只是有时候从APP到设备影响并回复会有问题，一直在找一个更好的解决方案，奈何团队能力有限。","like_count":0},{"had_liked":false,"id":21504,"user_name":"Exception","can_delete":false,"product_type":"c1","uid":1155779,"ip_address":"","ucode":"F0970E60DBD8FC","user_header":"https://static001.geekbang.org/account/avatar/00/11/a2/c3/83884ebc.jpg","comment_is_top":false,"comment_ctime":1535116631,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1535116631","product_id":100014401,"comment_content":"我们组一开始在公司里推段时间的微服务治理，各应用太过臃肿，项目经理们都不敢进行拆分，现在应用组合上云，简直灾难","like_count":0},{"had_liked":false,"id":21385,"user_name":"小胖狗","can_delete":false,"product_type":"c1","uid":1107423,"ip_address":"","ucode":"2C0CF3ED8E784A","user_header":"https://static001.geekbang.org/account/avatar/00/10/e5/df/0c8e3fdc.jpg","comment_is_top":false,"comment_ctime":1535069720,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1535069720","product_id":100014401,"comment_content":"拆分服务是可行的，但是怎么定拆分成多少个服务呢？","like_count":0},{"had_liked":false,"id":21356,"user_name":"九斤鱼","can_delete":false,"product_type":"c1","uid":1014365,"ip_address":"","ucode":"3F1423E87D79D4","user_header":"https://static001.geekbang.org/account/avatar/00/0f/7a/5d/b2e68df2.jpg","comment_is_top":false,"comment_ctime":1535038714,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1535038714","product_id":100014401,"comment_content":"对微服务的代码管理和部署监控很疑惑，自己原来折腾了spring cloud 稍一拆分，各种代码管理和部署问题有点蛋疼，希望后续文章能为我解下惑","like_count":0},{"had_liked":false,"id":21318,"user_name":"michael","can_delete":false,"product_type":"c1","uid":1005835,"ip_address":"","ucode":"69738B5801F0FD","user_header":"https://static001.geekbang.org/account/avatar/00/0f/59/0b/fb876077.jpg","comment_is_top":false,"comment_ctime":1535025003,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1535025003","product_id":100014401,"comment_content":"正在经历单体应用拆分微服务的过程，但是现在的数据量并没有太大，业务复杂度也还好，希望这个决定是正确的吧，起码可以学习微服务相关的技术😂","like_count":0},{"had_liked":false,"id":21308,"user_name":"feimeng0532","can_delete":false,"product_type":"c1","uid":1182786,"ip_address":"","ucode":"427B5C9D65C62A","user_header":"https://static001.geekbang.org/account/avatar/00/12/0c/42/fbd028c2.jpg","comment_is_top":false,"comment_ctime":1535015121,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1535015121","product_id":100014401,"comment_content":"老系统，领导也不想动，改了太多，很乱了，每次修改都特别头疼。","like_count":0},{"had_liked":false,"id":21294,"user_name":"🐢先生","can_delete":false,"product_type":"c1","uid":1046281,"ip_address":"","ucode":"D1135D99F8BB76","user_header":"https://static001.geekbang.org/account/avatar/00/0f/f7/09/3e6a0c26.jpg","comment_is_top":false,"comment_ctime":1535001412,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1535001412","product_id":100014401,"comment_content":"胡老师，我想问一下，服务的拆分粒度如何把握比较好？太小会导致服务太多，太大又做不到各自业务的相对独立。","like_count":0},{"had_liked":false,"id":21285,"user_name":"盘木","can_delete":false,"product_type":"c1","uid":1044248,"ip_address":"","ucode":"6ADBFFF670DBFF","user_header":"","comment_is_top":false,"comment_ctime":1534995055,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1534995055","product_id":100014401,"comment_content":"单体应用怎么拆分呢？","like_count":0},{"had_liked":false,"id":21283,"user_name":"天。","can_delete":false,"product_type":"c1","uid":1048882,"ip_address":"","ucode":"BED00599981F69","user_header":"https://static001.geekbang.org/account/avatar/00/10/01/32/39dc9cbd.jpg","comment_is_top":false,"comment_ctime":1534993980,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1534993980","product_id":100014401,"comment_content":"现在头疼的就是不同服务涉及到跨数据库查询，想知道这部分有什么好的思路","like_count":0},{"had_liked":false,"id":21270,"user_name":"TY","can_delete":false,"product_type":"c1","uid":1099482,"ip_address":"","ucode":"58A533CBFA8F4F","user_header":"https://static001.geekbang.org/account/avatar/00/10/c6/da/813a8694.jpg","comment_is_top":false,"comment_ctime":1534988075,"is_pvip":false,"replies":[{"id":"7489","content":"那就了解原理","user_name":"作者回复","user_name_real":"古月中心相心","uid":"1010144","ctime":1534991069,"ip_address":"","comment_id":21270,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1534988075","product_id":100014401,"comment_content":"刚毕业时候加入的公司就已经很好的服务化了，没有经历过单体应用","like_count":0,"discussions":[{"author":{"id":1010144,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/69/e0/ff8ee2e2.jpg","nickname":"胡忠想","note":"","ucode":"0792605FC265B4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":422612,"discussion_content":"那就了解原理","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1534991069,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":21237,"user_name":"芈四","can_delete":false,"product_type":"c1","uid":1157403,"ip_address":"","ucode":"4F9A5C7D02C7E8","user_header":"","comment_is_top":false,"comment_ctime":1534984616,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1534984616","product_id":100014401,"comment_content":"服务之间的rpc调用的效率如何保证呢？如果一个对外的接口服务在内部需要在多个微服务之间调用，尤其又带有分布式事务的时候，怎么保证这个对外的服务接口的效率？","like_count":0},{"had_liked":false,"id":21236,"user_name":"爱学习","can_delete":false,"product_type":"c1","uid":1182718,"ip_address":"","ucode":"9E5BDA4C8E95F3","user_header":"https://static001.geekbang.org/account/avatar/00/12/0b/fe/d738d7cf.jpg","comment_is_top":false,"comment_ctime":1534984587,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1534984587","product_id":100014401,"comment_content":"我们公司最近也在打算使用微服务，但是怎么把一个单一整体进行拆分不清楚，微服务的基础管理系统也没有，向微服务的转变道路还在努力中……","like_count":0}]}