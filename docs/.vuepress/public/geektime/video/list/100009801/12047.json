{"id":12047,"title":"24 | Kotlin 内联 : noinline与crossinline","content":"<h1>源代码及 PDF 课件地址：</h1><p><strong><a href=\"https://gitee.com/geektime-geekbang/KotlinPrimer\">https://gitee.com/geektime-geekbang/KotlinPrimer</a></strong></p>","comments":[{"had_liked":false,"id":244852,"user_name":"李小四","can_delete":false,"product_type":"c3","uid":1112747,"ip_address":"","ucode":"2A766BE16B276B","user_header":"https://static001.geekbang.org/account/avatar/00/10/fa/ab/0d39e745.jpg","comment_is_top":false,"comment_ctime":1598700797,"is_pvip":false,"replies":[{"id":95278,"content":"从1.2.0以后lambda已经全部默认铺平了","user_name":"作者回复","user_name_real":"kymjs张涛","uid":1009146,"ctime":1605772034,"ip_address":"","comment_id":244852,"utype":1}],"discussion_count":1,"race_medal":1,"score":2,"product_id":100009801,"comment_content":"视频6&#39;33&#39;处讲到crossline修饰的lambda, 编译后调用了该lambda生成的Function1的invoke(就是方法调用，lambda中的内容没有inline);\n我验证(1.3.72)后发现这个说法是错误的，因为不管用不用crossinline修饰，编译后的代码(反编译字节码)都是inline的，没有生成对应lambda的Function对象；查官方文档也只找到了“corssinline起到mark作用”，也就是说这里加了crossinline只是提示作用(编译报错)，与不加crossinline编译后没有区别。","like_count":2,"discussions":[{"author":{"id":1009146,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/65/fa/2b4d2f26.jpg","nickname":"kymjs张涛","note":"","ucode":"EFE7AF4C0D4FE8","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":504718,"discussion_content":"从1.2.0以后lambda已经全部默认铺平了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1605772034,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":58270,"user_name":"霍霍","can_delete":false,"product_type":"c3","uid":1182715,"ip_address":"","ucode":"9BF97B0B9C58F2","user_header":"https://static001.geekbang.org/account/avatar/00/12/0b/fb/6670b39b.jpg","comment_is_top":false,"comment_ctime":1547024352,"is_pvip":false,"replies":[{"id":21494,"content":"嗯，也没有错","user_name":"作者回复","user_name_real":"kymjs张涛","uid":1009146,"ctime":1547444865,"ip_address":"","comment_id":58270,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100009801,"comment_content":"你好，我测试在test方法中的return写与不写是没有关系的，crossinline能不会中断外部方法，是因为他可以在检查期就可以检查出lambda中是否有return而提示报错，这样就不会中断外部方法了，而不是防止test方法中的return被编译到外部方法中 ，不知道这样理解对不对","like_count":1,"discussions":[{"author":{"id":1009146,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/65/fa/2b4d2f26.jpg","nickname":"kymjs张涛","note":"","ucode":"EFE7AF4C0D4FE8","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":435981,"discussion_content":"嗯，也没有错","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1547444865,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":36809,"user_name":"(-.-)","can_delete":false,"product_type":"c3","uid":1144052,"ip_address":"","ucode":"EBDE62D3FD5942","user_header":"https://static001.geekbang.org/account/avatar/00/11/74/f4/fb729388.jpg","comment_is_top":false,"comment_ctime":1541343283,"is_pvip":false,"replies":[{"id":13559,"content":"crossinline表示将lambda拆解，不允许非局部返回，而noinline表示不内联，lambda依然保留lambda允许直接返回外层函数的特性。","user_name":"作者回复","user_name_real":"kymjs张涛","uid":1009146,"ctime":1541679628,"ip_address":"","comment_id":36809,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100009801,"comment_content":"看生成的代码，crossinline并没有new出来一个Function，noinline倒是new了一个Function。\n而且在内联函数里面做return，不管是crossinline,还是noinline应该都不会改变外层函数的返回值吧？只是在inline函数接受lambda的时候，这个lambda（没有crossinline或者noinline）里面的return会改变外层函数的返回值吧？","like_count":0,"discussions":[{"author":{"id":1009146,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/65/fa/2b4d2f26.jpg","nickname":"kymjs张涛","note":"","ucode":"EFE7AF4C0D4FE8","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":428029,"discussion_content":"crossinline表示将lambda拆解，不允许非局部返回，而noinline表示不内联，lambda依然保留lambda允许直接返回外层函数的特性。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1541679628,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":34103,"user_name":"涛","can_delete":false,"product_type":"c3","uid":1085100,"ip_address":"","ucode":"92263D02C543E1","user_header":"https://static001.geekbang.org/account/avatar/00/10/8e/ac/24fc311b.jpg","comment_is_top":false,"comment_ctime":1540003199,"is_pvip":false,"replies":[{"id":12811,"content":"应该是你代码写错了吧，可以对照代码看一下   https:&#47;&#47;github.com&#47;kymjs&#47;KotlinPrimer&#47;blob&#47;master&#47;Project7&#47;src&#47;main&#47;kotlin&#47;com&#47;kymjs&#47;kotlinprimer&#47;unit1&#47;LambdaReturnDemo.kt\n\n这段代码我在1.2.61版本上也运行了一遍，应该不是版本问题","user_name":"作者回复","user_name_real":"kymjs张涛","uid":1009146,"ctime":1540887278,"ip_address":"","comment_id":34103,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100009801,"comment_content":"不知道是不是老师讲错了，还是Kotlin版本问题：\ncrossinline 加上后，闭包里再写return直接编译错误了。而如果写成return@test1的话，虽然不会报错了。但是这个时候即便去掉crossinline关键字也是会执行闭包之后的代码的。","like_count":0,"discussions":[{"author":{"id":1009146,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/65/fa/2b4d2f26.jpg","nickname":"kymjs张涛","note":"","ucode":"EFE7AF4C0D4FE8","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":427119,"discussion_content":"应该是你代码写错了吧，可以对照代码看一下   https://github.com/kymjs/KotlinPrimer/blob/master/Project7/src/main/kotlin/com/kymjs/kotlinprimer/unit1/LambdaReturnDemo.kt\n\n这段代码我在1.2.61版本上也运行了一遍，应该不是版本问题","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1540887278,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":24188,"user_name":"拉马库斯阿尔德里奇","can_delete":false,"product_type":"c3","uid":1175519,"ip_address":"","ucode":"40BAA2A64485F0","user_header":"https://static001.geekbang.org/account/avatar/00/11/ef/df/c9240302.jpg","comment_is_top":false,"comment_ctime":1536837858,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":2,"product_id":100009801,"comment_content":"我的天我竟然跟上思路听懂了。","like_count":0}]}