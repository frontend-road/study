{"id":411632,"title":"03｜初窥门径：从你的第一个Rust程序开始！","content":"<p>你好，我是陈天。储备好前置知识之后，今天我们就正式开始 Rust 语言本身的学习。</p><p>学语言最好的捷径就是把自己置身于语言的环境中，而且我们程序员讲究 “get hands dirty”，直接从代码开始学能带来最直观的体验。所以从这一讲开始，你就要在电脑上设置好 Rust 环境了。</p><p>今天会讲到很多 Rust 的基础知识，我都精心构造了代码案例来帮你理解，<strong>非常推荐你自己一行行敲入这些代码，边写边思考为什么这么写，然后在运行时体会执行和输出的过程</strong>。如果遇到了问题，你也可以点击每个例子附带的代码链接，在<a href=\"https://play.rust-lang.org/\"> Rust playground </a>中运行。</p><p>Rust 安装起来非常方便，你可以用 <a href=\"https://rustup.rs/\">rustup.rs</a> 中给出的方法，根据你的操作系统进行安装。比如在 UNIX 系统下，可以直接运行：</p><pre><code class=\"language-shell\">curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh\n</code></pre><p>这会在你的系统上安装 Rust 工具链，之后，你就可以在本地用  <code>cargo new</code> 新建 Rust 项目、尝试 Rust 功能。动起手来，试试用Rust写你的第一个 <a href=\"https://play.rust-lang.org/?version=stable&mode=debug&edition=2018&gist=3d8814d1b868534a65ef79b3114d8cf5\">hello world 程序</a>吧！</p><pre><code class=\"language-rust\">fn main() {\n&nbsp; &nbsp; println!(\"Hello world!\");\n}\n</code></pre><p>你可以使用任何编辑器来撰写 Rust 代码，我个人偏爱 VS Code，因为它免费，功能强大且速度很快。在 VS Code 下我为 Rust 安装了一些插件，下面是我的安装顺序，你可以参考：</p><!-- [[[read_end]]] --><ol>\n<li>rust-analyzer：它会实时编译和分析你的 Rust 代码，提示代码中的错误，并对类型进行标注。你也可以使用官方的 Rust 插件取代。</li>\n<li>rust syntax：为代码提供语法高亮。</li>\n<li>crates：帮助你分析当前项目的依赖是否是最新的版本。</li>\n<li>better toml：Rust 使用 toml 做项目的配置管理。better toml 可以帮你语法高亮，并展示 toml 文件中的错误。</li>\n<li>rust test lens：可以帮你快速运行某个 Rust 测试。</li>\n<li>Tabnine：基于 AI 的自动补全，可以帮助你更快地撰写代码。</li>\n</ol><h2>第一个实用的 Rust 程序</h2><p>现在你已经有工具和环境了，尽管我们目前一行 Rust 语法都还没有介绍，但这不妨碍我们写一个稍稍有用的 Rust 程序，跑一遍之后，你对 Rust 的基本功能、关键语法和生态系统就基本心中有数了，我们再来详细分析。</p><p>一定要动起手来，跟着课程节奏一行一行敲，如果碰到不太理解的知识点，不要担心，今天只需要你先把代码运行起来，我们后面会循序渐进学习到各个难点的。</p><p>另外，<strong>我也建议你用自己常用的编程语言做同样的需求，和 Rust 对比一下</strong>，看简洁程度、代码可读性孰优孰劣。</p><p>这个程序的需求很简单，通过 HTTP 请求 Rust 官网首页，然后把获得的 HTML 转换成 Markdown 保存起来。我相信用 JavaScript 或者 Python，只要选好相关的依赖，这也就是十多行代码的样子。我们看看用 Rust 怎么处理。</p><p>首先，我们用 <code>cargo new scrape_url</code> 生成一个新项目。默认情况下，这条命令会生成一个可执行项目 scrape_url，入口在 src/main.rs。我们在 Cargo.toml 文件里，加入如下的依赖：</p><pre><code class=\"language-rust\">[dependencies]\nreqwest = { version = \"0.11\", features = [\"blocking\"] }\nhtml2md = \"0.2\"\n</code></pre><p>Cargo.toml 是 Rust 项目的配置管理文件，它符合<a href=\"https://toml.io/cn/v1.0.0\"> toml</a> 的语法。我们为这个项目添加了两个依赖：reqwest 和 html2md。<a href=\"https://github.com/seanmonstar/reqwest\">reqwest</a> 是一个 HTTP 客户端，它的使用方式和 Python 下的 <a href=\"https://docs.python-requests.org/en/master/\">request</a> 类似；html2md 顾名思义，把 HTML 文本转换成Markdown。</p><p>接下来，在 src/main.rs 里，我们为 main() 函数加入以下代码：</p><pre><code class=\"language-rust\">use std::fs;\n\nfn main() {\n  let url = \"https://www.rust-lang.org/\";\n  let output = \"rust.md\";\n  \n  println!(\"Fetching url: {}\", url);\n  let body = reqwest::blocking::get(url).unwrap().text().unwrap();\n\n  println!(\"Converting html to markdown...\");\n  let md = html2md::parse_html(&amp;body);\n\n  fs::write(output, md.as_bytes()).unwrap();\n  println!(\"Converted markdown has been saved in {}.\", output);\n}\n</code></pre><p>保存后，在命令行下，进入这个项目的目录，运行 <code>cargo run</code>，在一段略微漫长的编译后，程序开始运行，在命令行下，你会看到如下的输出：</p><pre><code class=\"language-shell\">Fetching url: https://www.rust-lang.org/\nConverting html to markdown...\nConverted markdown has been saved in rust.md.\n</code></pre><p>并且，在当前目录下，一个 rust.md 文件被创建出来了。打开一看，其内容就是 Rust 官网主页的内容。</p><p>Bingo！我们第一个 Rust 程序运行成功！</p><p>从这段并不长的代码中，我们可以感受到 Rust 的一些基本特点：</p><p>首先，<strong>Rust 使用名为 cargo 的工具来管理项目</strong>，它类似 Node.js 的 npm、Golang 的 go，用来做依赖管理以及开发过程中的任务管理，比如编译、运行、测试、代码格式化等等。</p><p>其次，<strong>Rust 的整体语法偏 C/C++ 风格</strong>。函数体用花括号  <code>{}</code> 包裹，表达式之间用分号  <code>;</code> 分隔，访问结构体的成员函数或者变量使用点  <code>.</code> 运算符，而访问命名空间（namespace）或者对象的静态函数使用双冒号  <code>::</code> 运算符。如果要简化对命名空间内部的函数或者数据类型的引用，可以使用  <code>use</code> 关键字，比如  <code>use std::fs</code>。此外，可执行体的入口函数是 main()。</p><p>另外，你也很容易看到，<strong>Rust 虽然是一门强类型语言，但编译器支持类型推导</strong>，这使得写代码时的直观感受和写脚本语言差不多。</p><p>很多不习惯类型推导的开发者，觉得这会降低代码的可读性，因为可能需要根据上下文才知道当前变量是什么类型。不过没关系，如果你在编辑器中使用了 rust-analyzer 插件，变量的类型会自动提示出来：</p><p><img src=\"https://static001.geekbang.org/resource/image/a8/a5/a891959bf57cde479380ba4b44f818a5.png?wh=1754x860\" alt=\"图片\"></p><p>最后，<strong>Rust 支持宏编程</strong>，很多基础的功能比如  <code>println!()</code> 都被封装成一个宏，便于开发者写出简洁的代码。</p><p>这里例子没有展现出来，但 Rust 还具备的其它特点有：</p><ul>\n<li>Rust 的变量默认是不可变的，如果要修改变量的值，需要显式地使用 mut 关键字。</li>\n<li>除了 let / static / const / fn 等少数语句外，Rust 绝大多数代码都是表达式（expression）。所以 if / while / for / loop 都会返回一个值，函数最后一个表达式就是函数的返回值，这和函数式编程语言一致。</li>\n<li>Rust 支持面向接口编程和泛型编程。</li>\n<li>Rust 有非常丰富的数据类型和强大的标准库。</li>\n<li>Rust 有非常丰富的控制流程，包括模式匹配（pattern match）。</li>\n</ul><p>第一个实用的 Rust 程序就运行成功了，不知道你现在是不是有点迟疑，这些我现在都不太懂怎么办，是不是得先去把这些都掌握了才能继续学？不要迟疑，跟着继续学，后面都会讲到。</p><p>接下来，为了快速入门 Rust，我们一起梳理 Rust 开发的基本内容。</p><p>这部分涉及的知识在各个编程语言中都大同小异，略微枯燥，但是这一讲是我们后续学习的基础，<strong>建议你每段示例代码都写一下，运行一下，并且和自己熟悉的语言对比来加深印象</strong>。</p><p><img src=\"https://static001.geekbang.org/resource/image/54/43/549bd1fd477ba608ac4a3f785cb49043.jpg?wh=1920x1092\" alt=\"图片\"></p><h2>基本语法和基础数据类型</h2><p>首先我们看在 Rust 下，我们如何定义变量、函数和数据结构。</p><h3>变量和函数</h3><p>前面说到，Rust 支持类型推导，在编译器能够推导类型的情况下，变量类型一般可以省略，但常量（const）和静态变量（static）必须声明类型。</p><p>定义变量的时候，根据需要，你可以添加  <code>mut</code> 关键字让变量具备可变性。<strong>默认变量不可变</strong>是一个很重要的特性，它符合最小权限原则（Principle of Least Privilege），有助于我们写出健壮且正确的代码。当你使用 mut 却没有修改变量，Rust 编译期会友好地报警，提示你移除不必要的 mut。</p><p>在Rust 下，函数是一等公民，可以作为参数或者返回值。我们来看一个函数作为参数的例子（<a href=\"https://play.rust-lang.org/?version=stable&mode=debug&edition=2018&gist=37d92c13fd10b85879b9d20f1b4fc0d8\">代码</a>）：</p><pre><code class=\"language-rust\">fn apply(value: i32, f: fn(i32) -&gt; i32) -&gt; i32 {\n&nbsp; &nbsp; f(value)\n}\n\nfn square(value: i32) -&gt; i32 {\n&nbsp; &nbsp; value * value\n}\n\nfn cube(value: i32) -&gt; i32 {\n&nbsp; &nbsp; value * value * value\n}\n\nfn main() {\n&nbsp; &nbsp; println!(\"apply square: {}\", apply(2, square));\n&nbsp; &nbsp; println!(\"apply cube: {}\", apply(2, cube));\n}\n</code></pre><p>这里  <code>fn(i32) -&gt; i32</code> 是 apply 函数第二个参数的类型，它表明接受一个函数作为参数，这个传入的函数必须是：参数只有一个，且类型为 i32，返回值类型也是 i32。</p><p>Rust 函数参数的类型和返回值的类型都必须显式定义，如果没有返回值可以省略，返回 unit。函数内部如果提前返回，需要用 return 关键字，否则最后一个表达式就是其返回值。如果最后一个表达式后添加了<code>;</code> 分号，隐含其返回值为 unit。你可以看这个例子（<a href=\"https://play.rust-lang.org/?version=stable&mode=debug&edition=2018&gist=0281d1df2a0193f1a17b88787d4fc9ed\">代码</a>）：</p><pre><code class=\"language-rust\">fn pi() -&gt; f64 {\n  3.1415926\n}\n\nfn not_pi() {\n  3.1415926;\n}\n\nfn main() {\n  let is_pi = pi();\n  let is_unit1 = not_pi();\n  let is_unit2 = {\n    pi();\n  };\n  \n  println!(\"is_pi: {:?}, is_unit1: {:?}, is_unit2: {:?}\", is_pi, is_unit1, is_unit2);\n}\n</code></pre><h3>数据结构</h3><p>了解了函数如何定义后，我们来看看 Rust 下如何定义数据结构。</p><p>数据结构是程序的核心组成部分，在对复杂的问题进行建模时，我们就要自定义数据结构。Rust 非常强大，可以用 struct 定义结构体，用 enum 定义标签联合体（tagged union），还可以像 Python 一样随手定义元组（tuple）类型。</p><p>比如我们可以这样定义一个聊天服务的数据结构（<a href=\"https://play.rust-lang.org/?version=stable&mode=debug&edition=2018&gist=959bb6e2fed0404895250b53582306fd\">代码</a>）：</p><pre><code class=\"language-rust\">#[derive(Debug)]\nenum Gender {\n&nbsp; Unspecified = 0,\n&nbsp; Female = 1,\n&nbsp; Male = 2,\n}\n\n#[derive(Debug, Copy, Clone)]\nstruct UserId(u64);\n\n#[derive(Debug, Copy, Clone)]\nstruct TopicId(u64);\n\n#[derive(Debug)]\nstruct User {\n&nbsp; id: UserId,\n&nbsp; name: String,\n&nbsp; gender: Gender,\n}\n\n#[derive(Debug)]\nstruct Topic {\n&nbsp; id: TopicId,\n&nbsp; name: String,\n&nbsp; owner: UserId,\n}\n\n// 定义聊天室中可能发生的事件\n#[derive(Debug)]\nenum Event {\n&nbsp; Join((UserId, TopicId)),\n&nbsp; Leave((UserId, TopicId)),\n&nbsp; Message((UserId, TopicId, String)),\n}\n\nfn main() {\n&nbsp; &nbsp; let alice = User { id: UserId(1), name: \"Alice\".into(), gender: Gender::Female };\n&nbsp; &nbsp; let bob = User { id: UserId(2), name: \"Bob\".into(), gender: Gender::Male };\n&nbsp; &nbsp;&nbsp;\n&nbsp; &nbsp; let topic = Topic { id: TopicId(1), name: \"rust\".into(), owner: UserId(1) };\n&nbsp; &nbsp; let event1 = Event::Join((alice.id, topic.id));\n&nbsp; &nbsp; let event2 = Event::Join((bob.id, topic.id));\n&nbsp; &nbsp; let event3 = Event::Message((alice.id, topic.id, \"Hello world!\".into()));\n&nbsp; &nbsp;&nbsp;\n&nbsp; &nbsp; println!(\"event1: {:?}, event2: {:?}, event3: {:?}\", event1, event2, event3);\n}\n</code></pre><p>简单解释一下：</p><ol>\n<li>Gender：一个枚举类型，在 Rust 下，使用 enum 可以定义类似 C 的枚举类型</li>\n<li>UserId/TopicId ：struct 的特殊形式，称为元组结构体。它的域都是匿名的，可以用索引访问，适用于简单的结构体。</li>\n<li>User/Topic：标准的结构体，可以把任何类型组合在结构体里使用。</li>\n<li>Event：标准的标签联合体，它定义了三种事件：Join、Leave、Message。每种事件都有自己的数据结构。</li>\n</ol><p>在定义数据结构的时候，我们一般会加入修饰，为数据结构引入一些额外的行为。在 Rust 里，数据的行为通过 trait 来定义，后续我们会详细介绍 trait，你现在可以暂时认为 trait 定义了数据结构可以实现的接口，类似 Java 中的 interface。</p><p>一般我们用 impl  关键字为数据结构实现 trait，但 Rust 贴心地提供了派生宏（derive macro），可以大大简化一些标准接口的定义，比如  <code>#[derive(Debug)]</code> 为数据结构实现了 <a href=\"https://doc.rust-lang.org/std/fmt/trait.Debug.html\">Debug trait</a>，提供了 debug 能力，这样可以通过  <code>{:?}</code>，用  <code>println!</code> 打印出来。</p><p>在定义 UserId / TopicId 时我们还用到了 Copy / Clone 两个派生宏，Clone 让数据结构可以被复制，而 Copy 则让数据结构可以在参数传递的时候自动按字节拷贝。在下一讲所有权中，我会具体讲什么时候需要 Copy。</p><p>简单总结一下 Rust 定义变量、函数和数据结构：</p><p><img src=\"https://static001.geekbang.org/resource/image/15/cb/15e5152fe2b72794074cff40041722cb.jpg?wh=1920x1898\" alt=\"图片\"></p><h3>控制流程</h3><p>程序的基本控制流程分为以下几种，我们应该都很熟悉了，重点看如何在 Rust 中运行。</p><p><strong>顺序执行</strong>就是一行行代码往下执行。在执行的过程中，遇到函数，会发生函数调用<strong>。函数调用</strong>是代码在执行过程中，调用另一个函数，跳入其上下文执行，直到返回。</p><p>Rust 的<strong>循环</strong>和大部分语言都一致，支持死循环 loop、条件循环 while，以及对迭代器的循环 for。循环可以通过 break 提前终止，或者 continue 来跳到下一轮循环。</p><p>满足某个条件时会<strong>跳转</strong>， Rust 支持分支跳转、模式匹配、错误跳转和异步跳转。</p><ul>\n<li>分支跳转就是我们熟悉的 if/else；</li>\n<li>Rust 的模式匹配可以通过匹配表达式或者值的某部分的内容，来进行分支跳转；</li>\n<li>在错误跳转中，当调用的函数返回错误时，Rust 会提前终止当前函数的执行，向上一层返回错误。</li>\n<li>在 Rust 的异步跳转中 ，当 async 函数执行 await 时，程序当前上下文可能被阻塞，执行流程会跳转到另一个异步任务执行，直至 await 不再阻塞。</li>\n</ul><p>我们通过斐波那契数列，使用 if 和 loop / while / for 这几种循环，来实现程序的基本控制流程（<a href=\"https://play.rust-lang.org/?version=stable&mode=debug&edition=2018&gist=7e9aec269d242b67799db3fc61678ea3\">代码</a>）：</p><pre><code class=\"language-rust\">fn fib_loop(n: u8) {\n&nbsp; &nbsp; let mut a = 1;\n&nbsp; &nbsp; let mut b = 1;\n&nbsp; &nbsp; let mut i = 2u8;\n&nbsp; &nbsp;&nbsp;\n&nbsp; &nbsp; loop {\n&nbsp; &nbsp; &nbsp; &nbsp; let c = a + b;\n&nbsp; &nbsp; &nbsp; &nbsp; a = b;\n&nbsp; &nbsp; &nbsp; &nbsp; b = c;\n&nbsp; &nbsp; &nbsp; &nbsp; i += 1;\n&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;\n&nbsp; &nbsp; &nbsp; &nbsp; println!(\"next val is {}\", b);\n&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;\n&nbsp; &nbsp; &nbsp; &nbsp; if i &gt;= n {\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; break;\n&nbsp; &nbsp; &nbsp; &nbsp; }\n&nbsp; &nbsp; }\n}\n\nfn fib_while(n: u8) {\n&nbsp; &nbsp; let (mut a, mut b, mut i) = (1, 1, 2);\n&nbsp; &nbsp;&nbsp;\n&nbsp; &nbsp; while i &lt; n {\n&nbsp; &nbsp; &nbsp; &nbsp; let c = a + b;\n&nbsp; &nbsp; &nbsp; &nbsp; a = b;\n&nbsp; &nbsp; &nbsp; &nbsp; b = c;\n&nbsp; &nbsp; &nbsp; &nbsp; i += 1;\n&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;\n&nbsp; &nbsp; &nbsp; &nbsp; println!(\"next val is {}\", b);\n&nbsp; &nbsp; }\n}\n\nfn fib_for(n: u8) {\n&nbsp; &nbsp; let (mut a, mut b) = (1, 1);\n&nbsp; &nbsp;&nbsp;\n&nbsp; &nbsp; for _i in 2..n {\n&nbsp; &nbsp; &nbsp; &nbsp; let c = a + b;\n&nbsp; &nbsp; &nbsp; &nbsp; a = b;\n&nbsp; &nbsp; &nbsp; &nbsp; b = c;\n&nbsp; &nbsp; &nbsp; &nbsp; println!(\"next val is {}\", b);\n&nbsp; &nbsp; }\n}\n\nfn main() {\n&nbsp; &nbsp; let n = 10;\n&nbsp; &nbsp; fib_loop(n);\n&nbsp; &nbsp; fib_while(n);\n&nbsp; &nbsp; fib_for(n);\n}\n</code></pre><p>这里需要指出的是，Rust 的 for 循环可以用于任何实现了  <code>IntoIterator</code> trait 的数据结构。</p><p>在执行过程中，<code>IntoIterator</code> 会生成一个迭代器，for 循环不断从迭代器中取值，直到迭代器返回 None 为止。因而，for 循环实际上只是一个语法糖，编译器会将其展开使用 loop 循环对迭代器进行循环访问，直至返回 None。</p><p>在 fib_for 函数中，我们还看到 2…n 这样的语法，想必 Python 开发者一眼就能明白这是 Range 操作，2…n 包含 2&lt;= x &lt; n 的所有值。和 Python 一样，在Rust中，你也可以省略 Range 的下标或者上标，比如：</p><pre><code class=\"language-rust\">let arr = [1, 2, 3];\nassert_eq!(arr[..], [1, 2, 3]);\nassert_eq!(arr[0..=1], [1, 2]);\n</code></pre><p>和 Python 不同的是，Range 不支持负数，所以你不能使用  <code>arr[1..-1]</code> 这样的代码。这是因为，Range 的下标上标都是 usize 类型，不能为负数。</p><p>下表是 Rust 主要控制流程的一个总结：</p><p><img src=\"https://static001.geekbang.org/resource/image/e3/6c/e3a96ae58a98f46f98b56yya6378b26c.jpg?wh=1920x2144\" alt=\"图片\"></p><h2>模式匹配</h2><p>Rust 的模式匹配吸取了函数式编程语言的优点，强大优雅且效率很高。它可以用于 struct / enum 中匹配部分或者全部内容，比如上文中我们设计的数据结构 Event，可以这样匹配（<a href=\"https://play.rust-lang.org/?version=stable&mode=debug&edition=2018&gist=b6c984c29fa373f2114423945d25afa7\">代码</a>）：</p><pre><code class=\"language-rust\">fn process_event(event: &amp;Event) {\n    match event {\n        Event::Join((uid, _tid)) =&gt; println!(\"user {:?} joined\", uid),\n        Event::Leave((uid, tid)) =&gt; println!(\"user {:?} left {:?}\", uid, tid),\n        Event::Message((_, _, msg)) =&gt; println!(\"broadcast: {}\", msg),\n    }\n}\n</code></pre><p>从代码中我们可以看到，可以直接对 enum 内层的数据进行匹配并赋值，这比很多只支持简单模式匹配的语言，例如 JavaScript 、Python ，可以省出好几行代码。</p><p>除了使用 match 关键字做模式匹配外，我们还可以用 if let / while let 做简单的匹配，如果上面的代码我们只关心 Event::Message，可以这么写（<a href=\"https://play.rust-lang.org/?version=stable&mode=debug&edition=2018&gist=135d3733f5b0f815b5a93a69e4169265\">代码</a>）：</p><pre><code class=\"language-rust\">fn process_message(event: &amp;Event) {\n&nbsp; &nbsp; if let Event::Message((_, _, msg)) = event {\n&nbsp; &nbsp; &nbsp; &nbsp; println!(\"broadcast: {}\", msg);&nbsp; &nbsp;\n&nbsp; &nbsp; }\n}\n</code></pre><p>Rust 的模式匹配是一个很重要的语言特性，被广泛应用在状态机处理、消息处理和错误处理中，如果你之前使用的语言是 C / Java / Python / JavaScript ，没有强大的模式匹配支持，要好好练习这一块。</p><h2>错误处理</h2><p>Rust 没有沿用 C++/Java 等诸多前辈使用的异常处理方式，而是借鉴 Haskell，<strong>把错误封装在  <code>Result&lt;T, E&gt;</code> 类型中，同时提供了 ? 操作符来传播错误</strong>，方便开发。<code>Result&lt;T, E&gt;</code> 类型是一个泛型数据结构，T 代表成功执行返回的结果类型，E 代表错误类型。</p><p>今天开始的 scrape_url  项目，其实里面很多调用已经使用了  <code>Result&lt;T, E&gt;</code> 类型，这里我再展示一下代码，不过我们使用了  <code>unwrap()</code> 方法，只关心成功返回的结果，如果出错，整个程序会终止。</p><pre><code class=\"language-rust\">use std::fs;\nfn main() {\n  let url = \"https://www.rust-lang.org/\";\n  let output = \"rust.md\";\n  \n  println!(\"Fetching url: {}\", url);\n  let body = reqwest::blocking::get(url).unwrap().text().unwrap();\n\n  println!(\"Converting html to markdown...\");\n  let md = html2md::parse_html(&amp;body);\n\n  fs::write(output, md.as_bytes()).unwrap();\n  println!(\"Converted markdown has been saved in {}.\", output);\n}\n</code></pre><p>如果想让错误传播，可以把所有的  <code>unwrap()</code> 换成 ? 操作符，并让 main() 函数返回一个 Result&lt;T, E&gt;，如下所示：</p><pre><code class=\"language-rust\">use std::fs;\n// main 函数现在返回一个 Result\nfn main() -&gt; Result&lt;(), Box&lt;dyn std::error::Error&gt;&gt; {\n    let url = \"https://www.rust-lang.org/\";\n    let output = \"rust.md\";\n\n    println!(\"Fetching url: {}\", url);\n    let body = reqwest::blocking::get(url)?.text()?;\n\n    println!(\"Converting html to markdown...\");\n    let md = html2md::parse_html(&amp;body);\n\n    fs::write(output, md.as_bytes())?;\n    println!(\"Converted markdown has been saved in {}.\", output);\n\n    Ok(())\n}\n</code></pre><p>关于错误处理我们先讲这么多，之后我们会单开一讲，对比其他语言，来详细学习 Rust 的错误处理。</p><h2>Rust 项目的组织</h2><p>当 Rust 代码规模越来越大时，我们就无法用单一文件承载代码了，需要多个文件甚至多个目录协同工作，这时我们<strong>可以用 mod 来组织代码</strong>。</p><p>具体做法是：在项目的入口文件 lib.rs / main.rs 里，用 mod 来声明要加载的其它代码文件。如果模块内容比较多，可以放在一个目录下，在该目录下放一个 mod.rs 引入该模块的其它文件。这个文件，和 Python 的 <code>__init__.py</code> 有异曲同工之妙。这样处理之后，就可以用 mod + 目录名引入这个模块了，如下图所示：</p><p><img src=\"https://static001.geekbang.org/resource/image/8e/1d/8eff27daa16a2bab514590f0b567341d.jpg?wh=1761x1381\" alt=\"图片\"></p><p>在 Rust 里，<strong>一个项目也被称为一个 crate</strong>。crate 可以是可执行项目，也可以是一个库，我们可以用  <code>cargo new &lt;name&gt; -- lib</code> 来创建一个库。当 crate 里的代码改变时，这个 crate 需要被重新编译。</p><p>在一个 crate 下，除了项目的源代码，单元测试和集成测试的代码也会放在 crate 里。</p><p>Rust 的单元测试一般放在和被测代码相同的文件中，使用条件编译  <code>#[cfg(test)]</code> 来确保测试代码只在测试环境下编译。以下是一个<a href=\"https://doc.rust-lang.org/book/ch11-01-writing-tests.html\">单元测试</a>的例子：</p><pre><code class=\"language-rust\">#[cfg(test)]\nmod tests {\n    #[test]\n    fn it_works() {\n        assert_eq!(2 + 2, 4);\n    }\n}\n</code></pre><p>集成测试一般放在 tests 目录下，和 src 平行。和单元测试不同，集成测试只能测试 crate 下的公开接口，编译时编译成单独的可执行文件。</p><p>在 crate 下，如果要运行测试用例，可以使用  <code>cargo test</code>。</p><p>当代码规模继续增长，把所有代码放在一个 crate 里就不是一个好主意了，因为任何代码的修改都会导致这个 crate 重新编译，这样效率不高。<strong>我们可以使用 workspace</strong>。</p><p>一个 workspace 可以包含一到多个 crates，当代码发生改变时，只有涉及的 crates 才需要重新编译。当我们要构建一个 workspace  时，需要先在某个目录下生成一个如图所示的 Cargo.toml，包含 workspace 里所有的 crates，然后可以  <code>cargo new</code> 生成对应的 crates：</p><p><img src=\"https://static001.geekbang.org/resource/image/2b/62/2bf542e266197e04ededc5c4a6e6cf62.jpg?wh=1920x1134\" alt=\"图片\"></p><p>crate 和 workspace 还有一些更高级的用法，在后面遇到的时候会具体讲解。如果你有兴趣，也可以先阅读 <a href=\"https://doc.rust-lang.org/book/ch14-00-more-about-cargo.html\">Rust book 第 14 章</a>了解更多的知识。</p><h2>小结</h2><p>我们简单梳理了 Rust 的基本概念。通过 let/let mut 定义变量、用 fn 定义函数、用 struct / enum 定义复杂的数据结构，也学习了 Rust 的基本的控制流程，了解了模式匹配如何运作，知道如何处理错误。</p><p>最后考虑到代码规模问题，介绍了如何使用 mod、crate 和 workspace 来组织 Rust 代码。我总结到图中你可以看看。</p><p><img src=\"https://static001.geekbang.org/resource/image/ed/6a/ed405b83640a52e28d3705f62f32b46a.jpg?wh=1920x1132\" alt=\"图片\"></p><p>今天是让你对 Rust 形成非常基本的认识，能够开始尝试写一些简单的 Rust 项目。</p><p>你也许会惊奇，用 Rust 写类似于 scrape_url 的功能，竟然和 Python 这样的脚本语言的体验几乎一致，太简单了！</p><p>下一讲我们会继续写一写代码，从实用的小工具的编写中真实感受 Rust 的魅力。</p><h2>思考题</h2><p>1.在上面的斐波那契数列的代码中，你也许注意到计算数列中下一个数的代码在三个函数中不断重复。这不符合 DRY（Don’t Repeat Yourself）原则。你可以写一个函数把它抽取出来么？</p><p>2.在 scrape_url 的例子里，我们在代码中写死了要获取的 URL 和要输出的文件名，这太不灵活了。你能改进这个代码，从命令行参数中获取用户提供的信息来绑定 URL 和文件名么？类似这样：</p><pre><code class=\"language-plain\">cargo run -- https://www.rust-lang.org rust.md\n</code></pre><p>提示一下，打印一下  <code>std::env::args()</code> 看看会发生什么？</p><pre><code class=\"language-plain\">for arg in std::env::args() {\n    println!(\"{}\", arg);\n}\n</code></pre><p>欢迎在留言区分享你的思考。恭喜你完成了 Rust 学习的第三次打卡，我们下一讲见！</p><h2>参考资料</h2><ol>\n<li><a href=\"https://toml.io/cn/v1.0.0\">TOML</a></li>\n<li><a href=\"https://doc.rust-lang.org/std/keyword.static.html\">static  关键字</a></li>\n<li><a href=\"https://github.com/rust-lang-nursery/lazy-static.rs\">lazy_static</a></li>\n<li><a href=\"https://doc.rust-lang.org/std/primitive.unit.html\">unit 类型</a></li>\n<li><a href=\"https://doc.rust-lang.org/book/ch11-01-writing-tests.html\">How to write tests</a></li>\n<li><a href=\"https://doc.rust-lang.org/book/ch14-00-more-about-cargo.html\">More about cargo and crates.io</a></li>\n<li>Rust 支持声明宏（declarative macro）和过程宏（procedure macro），其中过程宏又包含三种方式：函数宏（function macro），派生宏（derive macro）和属性宏（attribute macro）。println! 是函数宏，是因为 Rust 是强类型语言，函数的类型需要在编译期敲定，而 println! 接受任意个数的参数，所以只能用宏来表达。</li>\n</ol>","neighbors":{"left":{"article_title":"加餐｜这个专栏你可以怎么学，以及Rust是否值得学？","id":411089},"right":{"article_title":"04｜get hands dirty：来写个实用的CLI小工具","id":412883}},"comments":[{"had_liked":false,"id":309245,"user_name":"赵岩松","can_delete":false,"product_type":"c1","uid":2032451,"ip_address":"","ucode":"596694E4360482","user_header":"https://static001.geekbang.org/account/avatar/00/1f/03/43/ed0dcb27.jpg","comment_is_top":true,"comment_ctime":1629999579,"is_pvip":false,"replies":[{"id":"111960","content":"对，这里表达有错误。let 的确是一个 statement。见：https:&#47;&#47;doc.rust-lang.org&#47;reference&#47;statements.html。我想更着重表达的是，很多语言的 while loop，for loop，if else 都是语句，但 Rust 下它们是表达式，它们会返回最后一个表达式的值（即便是 unit）。我忽视了 let&#47;static&#47;const&#47;fn 这样的定义，它们是纯粹的语句。回头我改一下。","user_name":"作者回复","comment_id":309245,"uid":"1079375","ip_address":"","utype":1,"ctime":1630032440,"user_name_real":"Tyr"}],"discussion_count":4,"race_medal":0,"score":"9.223372248938199e+18","product_id":100085301,"comment_content":"<br>文中的&quot;Rust 没有语句（statement），只有表达式（expression）&quot;表述我认为是错误的，<br>我猜这里想表达的内容应该类似于《Rust程序设计语言中》的如下语句<br>&quot;Rust 是一门基于表达式（expression-based）的语言，这是一个需要理解的（不同于其他语言）重要区别&quot;<br>但是我的观点是：Rust既存在语句也存在表达式<br>我的依据为书中接下来的内容<br>&quot;语句（Statements）是执行一些操作但不返回值的指令。表达式（Expressions）计算并产生一个值&quot;<br>书中还附带了一个简单的例子，在这里我大体描述一下<br>`let y = 6;`中，6为一个表达式，它计算出的值是 6,`let y = 6;`做为一个整体是一条语句，他并不返回值，所以我们不能在Rust中这样书写`let x = (let y = 6);`<br>关于这个问题还有来自交流群内&quot;Tai Huei&quot;提供的截图中的文字作为依据<br>&quot;Statements are instructions that do something, they do not return a value. Expressions evaluate to a value, they return that value&quot;<br>&quot;Rust is an expression-oriented language. This means that most things are expressions, and evaluate to some kind of value. However, there are also statements. -Steve Klabnik(member if the Rust core team)&quot;","like_count":50,"discussions":[{"author":{"id":1079375,"avatar":"https://static001.geekbang.org/account/avatar/00/10/78/4f/e74f870c.jpg","nickname":"Tyr","note":"","ucode":"EAAFC8063202E0","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":525797,"discussion_content":"对，这里表达有错误。let 的确是一个 statement。见：https://doc.rust-lang.org/reference/statements.html。我想更着重表达的是，很多语言的 while loop，for loop，if else 都是语句，但 Rust 下它们是表达式，它们会返回最后一个表达式的值（即便是 unit）。我忽视了 let/static/const/fn 这样的定义，它们是纯粹的语句。回头我改一下。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1630032440,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2150011,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJwhuiaWy0E1xoq2o6Qdfast5ibtmib0zvvUOpbibrjBNeegwoR2O9HxSvwTIRYTR49Q1eEqNlkQWLqaA/132","nickname":"随便取一个","note":"","ucode":"CBCE93E49F2A5B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":546217,"discussion_content":"所以c中的这种表达式在rust会导致含义不正确。\nint a,b,c;\na=b=c;\n\n报编译器报错误。原因是a的类型匹配错误","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1642234133,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1610379,"avatar":"https://static001.geekbang.org/account/avatar/00/18/92/8b/9a5ead63.jpg","nickname":"bb","note":"","ucode":"92ABE9CAF16322","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":534371,"discussion_content":"崇拜，爱你😘","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1638174816,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2708009,"avatar":"https://static001.geekbang.org/account/avatar/00/29/52/29/51b5ca75.jpg","nickname":"alexd","note":"","ucode":"7815D35C4CFA0A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":390884,"discussion_content":"老弟出师了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1630117701,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":309277,"user_name":"Roy Liang","can_delete":false,"product_type":"c1","uid":1098898,"ip_address":"","ucode":"1DF5FC831A35DA","user_header":"https://static001.geekbang.org/account/avatar/00/10/c4/92/338b5609.jpg","comment_is_top":true,"comment_ctime":1630029481,"is_pvip":false,"replies":[{"id":"112059","content":"👍 谢谢提醒！我倒没有关注国内需要镜像的问题。","user_name":"作者回复","comment_id":309277,"uid":"1079375","ip_address":"","utype":1,"ctime":1630130082,"user_name_real":"Tyr"}],"discussion_count":5,"race_medal":0,"score":"9.2233722059884995e+18","product_id":100085301,"comment_content":"export RUSTUP_DIST_SERVER=https:&#47;&#47;mirrors.sjtug.sjtu.edu.cn&#47;rust-static<br>export RUSTUP_UPDATE_ROOT=https:&#47;&#47;mirrors.sjtug.sjtu.edu.cn&#47;rust-static&#47;rustup<br><br>rust国内安装必备环境配置","like_count":40,"discussions":[{"author":{"id":1079375,"avatar":"https://static001.geekbang.org/account/avatar/00/10/78/4f/e74f870c.jpg","nickname":"Tyr","note":"","ucode":"EAAFC8063202E0","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":525807,"discussion_content":"👍 谢谢提醒！我倒没有关注国内需要镜像的问题。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1630130082,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1398228,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/DNX5XibMEAeZicXCeypU1O9sShURUTPlwiceCcSibzPu71IG7pTJuDRq7rj2AmhPl3s0FPPYcLOcLlHgibWepYnfaEQ/132","nickname":"hatsuyuki","note":"","ucode":"96E5A825C8973A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":390821,"discussion_content":"这个也可以 https://rsproxy.cn/","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1630058059,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2905523,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIDqHQQByGiaXcAk94MdDn3ftupZLXyR6bAKibxOzMxy5h3uBwZ7QiaCiaIfbCMK0cIQfGNax8iawoiaQAg/132","nickname":"nuan","note":"","ucode":"55FF98EB85404D","race_medal":5,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":554989,"discussion_content":"科学上网","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1646710535,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":548708,"discussion_content":"请问windows 下怎么设置呢？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1643338705,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2332582,"avatar":"https://static001.geekbang.org/account/avatar/00/23/97/a6/a883003e.jpg","nickname":"小蠡","note":"","ucode":"35D246ACF4C4A2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":392725,"discussion_content":"https://rsproxy.cn/    这个教程蛮友好的，我终于能运行这些代码了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1631102947,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":309251,"user_name":"pedro","can_delete":false,"product_type":"c1","uid":1200704,"ip_address":"","ucode":"F40C839DDFD599","user_header":"https://static001.geekbang.org/account/avatar/00/12/52/40/e57a736e.jpg","comment_is_top":false,"comment_ctime":1630022007,"is_pvip":false,"replies":[{"id":"111958","content":"我会在讲所有权的时候介绍 Copy&#47;Clone，敬请期待。","user_name":"作者回复","comment_id":309251,"uid":"1079375","ip_address":"","utype":1,"ctime":1630032041,"user_name_real":"Tyr"}],"discussion_count":2,"race_medal":0,"score":"113299171703","product_id":100085301,"comment_content":"我想很多人不会被课后问题所困扰而是被 Copy 和 Clone，初学时我也很纠结，这里贴上某位大佬的总结：<br><br>Copy 和 Clone 两者的区别和联系有：<br><br>Copy内部没有方法，Clone内部有两个方法。<br><br>Copy trait 是给编译器用的，告诉编译器这个类型默认采用 copy 语义，而不是 move 语义。Clone trait 是给程序员用的，我们必须手动调用clone方法，它才能发挥作用。<br><br>Copy trait不是你想实现就实现，它对类型是有要求的，有些类型就不可能 impl Copy。Clone trait 没有什么前提条件，任何类型都可以实现（unsized 类型除外）。<br><br>Copy trait规定了这个类型在执行变量绑定、函数参数传递、函数返回等场景下的操作方式。即这个类型在这种场景下，必然执行的是“简单内存拷贝”操作，这是由编译器保证的，程序员无法控制。Clone trait 里面的 clone 方法究竟会执行什么操作，则是取决于程序员自己写的逻辑。一般情况下，clone 方法应该执行一个“深拷贝”操作，但这不是强制的，如果你愿意，也可以在里面启动一个人工智能程序，都是有可能的。<br><br>链接：https:&#47;&#47;zhuanlan.zhihu.com&#47;p&#47;21730929","like_count":26,"discussions":[{"author":{"id":1079375,"avatar":"https://static001.geekbang.org/account/avatar/00/10/78/4f/e74f870c.jpg","nickname":"Tyr","note":"","ucode":"EAAFC8063202E0","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":525800,"discussion_content":"我会在讲所有权的时候介绍 Copy/Clone，敬请期待。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1630032041,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1160964,"avatar":"https://static001.geekbang.org/account/avatar/00/11/b7/04/97267e91.jpg","nickname":"happy","note":"","ucode":"AE6949E59E9E94","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":557060,"discussion_content":"优秀优秀，这个问题困扰我好久了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1647647310,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":309379,"user_name":"Kerry","can_delete":false,"product_type":"c1","uid":2061524,"ip_address":"","ucode":"92F809EC998FC6","user_header":"https://static001.geekbang.org/account/avatar/00/1f/74/d4/38d813f0.jpg","comment_is_top":false,"comment_ctime":1630076252,"is_pvip":false,"replies":[{"id":"112065","content":"赞！","user_name":"作者回复","comment_id":309379,"uid":"1079375","ip_address":"","utype":1,"ctime":1630131381,"user_name_real":"Tyr"}],"discussion_count":1,"race_medal":0,"score":"40284781916","product_id":100085301,"comment_content":"课后习题需要自己查一点接口资料，结合错误信息来逐步解决编译问题。<br><br>问题一：<br><br>重复的abc计算代码可以重构为如下函数：<br><br>```rust<br>fn next_fib(a: &amp;mut i32, b: &amp;mut i32) {<br>    let c = *a + *b;<br>    *a = *b;<br>    *b = c;<br>}<br>```<br><br>以for in循环为例，用法如下：<br><br>```rust<br><br>fn fib_for(n: u8) {<br>    let (mut a, mut b) = (1, 1);<br>    <br>    for _i in 2..n {<br>        next_fib(&amp;mut a, &amp;mut b);<br>        println!(&quot;next val is {}&quot;, b);<br>    }<br>}<br>```<br><br>问题二：<br><br>```rust<br>fn main() -&gt; Result&lt;(), Box&lt;dyn std::error::Error&gt;&gt; {<br>    let args: Vec&lt;String&gt; = env::args().collect();<br>    if args.len() &lt; 3 {<br>        println!(&quot;Usage: url outpath&quot;);<br>        return Ok(())<br>    }<br><br>    args.iter().for_each(|arg| {<br>        println!(&quot;{}&quot;, arg);<br>    });<br><br>    let url = &amp;args[1];<br>    let output = &amp;args[2];<br><br>    println!(&quot;Fetching url: {}&quot;, url);<br>    let body = &amp;reqwest::blocking::get(url)?.text()?;<br><br>    println!(&quot;Converting html to markdown...&quot;);<br>    let md = html2md::parse_html(body);<br><br>    fs::write(output, md.as_bytes())?;<br>    println!(&quot;Converted markdown has been saved in {}.&quot;, output);<br><br>    Ok(())<br>}<br>```<br><br>好歹是跑起来了……装了智能提示真不错，有better impl的建议 :)","like_count":10,"discussions":[{"author":{"id":1079375,"avatar":"https://static001.geekbang.org/account/avatar/00/10/78/4f/e74f870c.jpg","nickname":"Tyr","note":"","ucode":"EAAFC8063202E0","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":525845,"discussion_content":"赞！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1630131381,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":309294,"user_name":"Custer","can_delete":false,"product_type":"c1","uid":1020822,"ip_address":"","ucode":"8AEA5544C94D57","user_header":"https://static001.geekbang.org/account/avatar/00/0f/93/96/575d42c3.jpg","comment_is_top":false,"comment_ctime":1630034178,"is_pvip":true,"replies":[{"id":"112061","content":"使用了 StructOpt，👍 可以考虑为 url 加上： #[structopt(..., parse(try_from_str = parse_url)], 验证一下。","user_name":"作者回复","comment_id":309294,"uid":"1079375","ip_address":"","utype":1,"ctime":1630130972,"user_name_real":"Tyr"}],"discussion_count":3,"race_medal":0,"score":"40284739842","product_id":100085301,"comment_content":"use std::fs;<br>use structopt::StructOpt;<br><br>#[derive(StructOpt, Debug)]<br>#[structopt(name=&quot;scrape_url&quot;)]<br>struct Opt {<br>    #[structopt(help=&quot;input url&quot;)]<br>    pub url: String,<br>    #[structopt(help=&quot;output file, stdout if not present&quot;)]<br>    pub output: Option&lt;String&gt;,<br>}<br><br>fn main() {<br>    let opt = Opt::from_args();<br><br>    let url = opt.url;<br>    let output = &amp;opt.output.unwrap_or(&quot;rust.md&quot;.to_string());<br><br>    println!(&quot;Fetching url: {}&quot;, url);<br>    let body = reqwest::blocking::get(url).unwrap().text().unwrap();<br><br>    println!(&quot;Converting html to markdown...&quot;);<br>    let md = html2md::parse_html(&amp;body);<br><br>    fs::write(output, md.as_bytes()).unwrap();<br>    println!(&quot;Converted markdown has been saved in {}.&quot;, output);<br>}<br>","like_count":9,"discussions":[{"author":{"id":1079375,"avatar":"https://static001.geekbang.org/account/avatar/00/10/78/4f/e74f870c.jpg","nickname":"Tyr","note":"","ucode":"EAAFC8063202E0","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":525814,"discussion_content":"使用了 StructOpt，👍 可以考虑为 url 加上： #[structopt(..., parse(try_from_str = parse_url)], 验证一下。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1630130972,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1160964,"avatar":"https://static001.geekbang.org/account/avatar/00/11/b7/04/97267e91.jpg","nickname":"happy","note":"","ucode":"AE6949E59E9E94","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":557062,"discussion_content":"高玩","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1647648653,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1080653,"avatar":"https://static001.geekbang.org/account/avatar/00/10/7d/4d/d98865b2.jpg","nickname":"老实人Honey","note":"","ucode":"EA4AB5C0C33090","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":541492,"discussion_content":"parse_url是要自己单独写一个函数吗","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1640407682,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":310406,"user_name":"GengTeng","can_delete":false,"product_type":"c1","uid":1224623,"ip_address":"","ucode":"3F926F5EF1D075","user_header":"https://static001.geekbang.org/account/avatar/00/12/af/af/8b03ce2c.jpg","comment_is_top":false,"comment_ctime":1630642756,"is_pvip":false,"replies":[{"id":"112457","content":"👍 非常棒","user_name":"作者回复","comment_id":310406,"uid":"1079375","ip_address":"","utype":1,"ctime":1630650931,"user_name_real":"Tyr"}],"discussion_count":2,"race_medal":0,"score":"35990381124","product_id":100085301,"comment_content":"2. 一个模式匹配就行了，还做到了 panic-free：<br><br>let args = std::env::args().collect::&lt;Vec&lt;String&gt;&gt;();<br>if let [_path, url, output, ..] = args.as_slice() {<br>    println!(&quot;url: {}, output: {}&quot;, url, output);<br>} else {<br>    eprintln!(&quot;参数缺失&quot;);<br>}","like_count":9,"discussions":[{"author":{"id":1079375,"avatar":"https://static001.geekbang.org/account/avatar/00/10/78/4f/e74f870c.jpg","nickname":"Tyr","note":"","ucode":"EAAFC8063202E0","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":526224,"discussion_content":"👍 非常棒","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1630650931,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2905523,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIDqHQQByGiaXcAk94MdDn3ftupZLXyR6bAKibxOzMxy5h3uBwZ7QiaCiaIfbCMK0cIQfGNax8iawoiaQAg/132","nickname":"nuan","note":"","ucode":"55FF98EB85404D","race_medal":5,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":554996,"discussion_content":"请教下，collect::&gt;() 这语法哪里有介绍呢？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1646712311,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":309318,"user_name":"慢动作","can_delete":false,"product_type":"c1","uid":1133945,"ip_address":"","ucode":"62C944F4A4D8AC","user_header":"https://static001.geekbang.org/account/avatar/00/11/4d/79/803537db.jpg","comment_is_top":false,"comment_ctime":1630044142,"is_pvip":true,"replies":[{"id":"111973","content":"没事放轻松，今天先把代码跑起来就行，之后都会慢慢讲到的。之前咱们学习都是先学语法，再写程序。试试课程这个新玩法啊，啥也别说就是写，先直观感受一波，之后再一点一点抽丝剥茧😁","user_name":"编辑回复","comment_id":309318,"uid":"2547771","ip_address":"","utype":2,"ctime":1630046871,"user_name_real":"叶如芊"}],"discussion_count":1,"race_medal":0,"score":"35989782510","product_id":100085301,"comment_content":"字符串字面量为什么有into方法，这中间经历了什么过程？看文档根本不知道这个方法哪里来的，😂。还是有点操之过急，看到不明白就瞎忙活，感觉还是得循序渐进","like_count":8,"discussions":[{"author":{"id":2547771,"avatar":"https://static001.geekbang.org/account/avatar/00/26/e0/3b/8ec916b2.jpg","nickname":"多少","note":"","ucode":"0A6EF7AA6E4BB7","race_medal":0,"user_type":4,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":525826,"discussion_content":"没事放轻松，今天先把代码跑起来就行，之后都会慢慢讲到的。之前咱们学习都是先学语法，再写程序。试试课程这个新玩法啊，啥也别说就是写，先直观感受一波，之后再一点一点抽丝剥茧😁","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1630046871,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":4}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":309386,"user_name":"🔥神山 | 雷神山","can_delete":false,"product_type":"c1","uid":2738622,"ip_address":"","ucode":"1552CB73E89381","user_header":"https://static001.geekbang.org/account/avatar/00/29/c9/be/1949917d.jpg","comment_is_top":false,"comment_ctime":1630078422,"is_pvip":false,"replies":[{"id":"112068","content":"👍 把实现放入 impl Config {} 是个不错的优化。","user_name":"作者回复","comment_id":309386,"uid":"1079375","ip_address":"","utype":1,"ctime":1630131682,"user_name_real":"Tyr"}],"discussion_count":1,"race_medal":0,"score":"27399882198","product_id":100085301,"comment_content":"<br>2. 在 scrape_url 的例子里，我们在代码中写死了要获取的 URL 和要输出的文件名，这太不灵活了。你能改进这个代码，从命令行参数中获取用户提供的信息来绑定 URL 和文件名么？类似这样：<br>```rust<br>use std::env;<br>use std::error;<br>use std::fs;<br>use std::process;<br><br>const NOT_ENOUGH_ARGS_CODE: i32 = 1;<br>const NOT_GET_HTTP_DATA_CODE: i32 = 2;<br>const CAN_NOT_CONVERT_MD_CODE: i32 = 3;<br><br>#[derive(Debug)]<br>struct Config {<br>    url: String,    &#47;&#47;网址<br>    output: String, &#47;&#47;输出文件名<br>}<br><br>impl Config {<br>    fn new(url: String, output: String) -&gt; Config {<br>        Config { url, output }<br>    }<br><br>    fn curl_url(&amp;self) -&gt; Result&lt;String, Box&lt;dyn error::Error&gt;&gt; {<br>        println!(&quot;Fetching url: {}&quot;, self.url);<br>        let body = reqwest::blocking::get(&amp;self.url)?.text()?;<br>        Ok(body)<br>    }<br><br>    fn convert_md_file(&amp;self, body: String) -&gt; Result&lt;(), Box&lt;dyn error::Error&gt;&gt; {<br>        println!(&quot;Converting html to markdown...&quot;);<br>        let md = html2md::parse_html(&amp;body);<br>        fs::write(&amp;self.output, md.as_bytes())?;<br>        println!(&quot;Converted markdown has been saved in {}.&quot;, self.output);<br>        Ok(())<br>    }<br>}<br><br>fn parse_args(args: &amp;[String]) -&gt; Result&lt;Config, &amp;str&gt; {<br>    if args.len() &lt; 3 {<br>        return Err(&quot;Not enough arguments!&quot;);<br>    }<br>    let url = args[1].clone();<br>    let output = args[2].clone();<br>    Ok(Config::new(url, output))<br>}<br><br>fn main() {<br>    let args: Vec&lt;String&gt; = env::args().collect();<br>    match parse_args(&amp;args) {<br>        Err(err) =&gt; {<br>            println!(&quot;Error: {}&quot;, err);<br>            process::exit(NOT_ENOUGH_ARGS_CODE);<br>        }<br>        Ok(cfg) =&gt; match cfg.curl_url() {<br>            Err(err) =&gt; {<br>                println!(&quot;Error: {}&quot;, err.to_string());<br>                process::exit(NOT_GET_HTTP_DATA_CODE);<br>            }<br>            Ok(body) =&gt; {<br>                let result = cfg.convert_md_file(body);<br>                if result.is_err() {<br>                    println!(&quot;Error: Can NOT write data to {}&quot;, cfg.output);<br>                    process::exit(CAN_NOT_CONVERT_MD_CODE);<br>                }<br>            }<br>        },<br>    }<br>}<br>```","like_count":6,"discussions":[{"author":{"id":1079375,"avatar":"https://static001.geekbang.org/account/avatar/00/10/78/4f/e74f870c.jpg","nickname":"Tyr","note":"","ucode":"EAAFC8063202E0","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":525848,"discussion_content":"👍 把实现放入 impl Config {} 是个不错的优化。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1630131682,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":311239,"user_name":"核桃","can_delete":false,"product_type":"c1","uid":1385204,"ip_address":"","ucode":"7AB05270CBCCCB","user_header":"https://static001.geekbang.org/account/avatar/00/15/22/f4/9fd6f8f0.jpg","comment_is_top":false,"comment_ctime":1631114614,"is_pvip":false,"replies":[{"id":"112812","content":"1. 函数作为参数是说 a, b 为函数，这样调用：a(1, b)，把一个函数指针传给 b 作为参数。<br><br>2. #[derive(Debug)] 这里会自动生成一些代码，这些代码实现了 Debug trait。<br><br>3. println! 是一个宏，用 ! 是把它和普通函数区分开。因为 println 需要支持可变参数，Rust 不支持可变参数，所以这里用宏实现。","user_name":"作者回复","comment_id":311239,"uid":"1079375","ip_address":"","utype":1,"ctime":1631160240,"user_name_real":"Tyr"}],"discussion_count":1,"race_medal":0,"score":"23105951094","product_id":100085301,"comment_content":"这里有几个小疑惑.<br>1.首先把函数作为参数这里，例如a(1，b(2))这样的，那么和先调用b得到结果再填入a中有什么本质区别吗？我不理解的是，分开调用好像也没什么问题，有什么场景下需要函数作为参数这样调用的？<br>2.派生宏这里#[derive(Debug)]，这个例子中实现的是什么功能不太理解？<br>3.println! 这里的语法多了一个感叹号，很多语言都有println，多了这个感叹号封装多了一些什么吗？看过一些资料也不太理解<br>多谢了","like_count":5,"discussions":[{"author":{"id":1079375,"avatar":"https://static001.geekbang.org/account/avatar/00/10/78/4f/e74f870c.jpg","nickname":"Tyr","note":"","ucode":"EAAFC8063202E0","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":526535,"discussion_content":"1. 函数作为参数是说 a, b 为函数，这样调用：a(1, b)，把一个函数指针传给 b 作为参数。\n\n2. #[derive(Debug)] 这里会自动生成一些代码，这些代码实现了 Debug trait。\n\n3. println! 是一个宏，用 ! 是把它和普通函数区分开。因为 println 需要支持可变参数，Rust 不支持可变参数，所以这里用宏实现。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1631160240,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":309295,"user_name":"Raina","can_delete":false,"product_type":"c1","uid":2617080,"ip_address":"","ucode":"CDAE2402F64096","user_header":"https://static001.geekbang.org/account/avatar/00/27/ee/f8/6f69be1e.jpg","comment_is_top":false,"comment_ctime":1630034279,"is_pvip":false,"replies":[{"id":"111964","content":"把工具和环境装上了，照着抄写文章里给的 Rust 代码就行，边写边感受，不懂其中的复杂语法不要担心，今天只需要你先把代码运行起来，后面会循序渐进讲到各个知识点的。","user_name":"编辑回复","comment_id":309295,"uid":"2547771","ip_address":"","utype":2,"ctime":1630034706,"user_name_real":"叶如芊"}],"discussion_count":1,"race_medal":0,"score":"23104870759","product_id":100085301,"comment_content":"所以还是要有rust基础才行，我先去看看Rust圣经再回来&gt;_&lt;","like_count":5,"discussions":[{"author":{"id":2547771,"avatar":"https://static001.geekbang.org/account/avatar/00/26/e0/3b/8ec916b2.jpg","nickname":"多少","note":"","ucode":"0A6EF7AA6E4BB7","race_medal":0,"user_type":4,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":525815,"discussion_content":"把工具和环境装上了，照着抄写文章里给的 Rust 代码就行，边写边感受，不懂其中的复杂语法不要担心，今天只需要你先把代码运行起来，后面会循序渐进讲到各个知识点的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1630034706,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":4}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":311165,"user_name":"一期一会","can_delete":false,"product_type":"c1","uid":1043780,"ip_address":"","ucode":"1C44A6453F6381","user_header":"https://static001.geekbang.org/account/avatar/00/0f/ed/44/2267a5a7.jpg","comment_is_top":false,"comment_ctime":1631092637,"is_pvip":true,"replies":[{"id":"112776","content":"你的系统需要有装比较新的 openssl。你也可以把 reqwest 的依赖改成使用 rustls，它不依赖 openssl：<br>reqwest = { version = &quot;0.11&quot;, default-features = false, features = [&quot;json&quot;, &quot;rustls-tls&quot;] }<br><br>见：https:&#47;&#47;github.com&#47;tyrchen&#47;geektime-rust&#47;blob&#47;master&#47;04_httpie&#47;Cargo.toml","user_name":"作者回复","comment_id":311165,"uid":"1079375","ip_address":"","utype":1,"ctime":1631148428,"user_name_real":"Tyr"}],"discussion_count":1,"race_medal":0,"score":"18810961821","product_id":100085301,"comment_content":"运行2md代码，发生openssl编译问题：<br>Compiling openssl-sys v0.9.66<br>error: failed to run custom build command for `openssl-sys v0.9.66`<br><br>折腾了大半天还是不行","like_count":4,"discussions":[{"author":{"id":1079375,"avatar":"https://static001.geekbang.org/account/avatar/00/10/78/4f/e74f870c.jpg","nickname":"Tyr","note":"","ucode":"EAAFC8063202E0","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":526501,"discussion_content":"你的系统需要有装比较新的 openssl。你也可以把 reqwest 的依赖改成使用 rustls，它不依赖 openssl：\nreqwest = { version = &amp;quot;0.11&amp;quot;, default-features = false, features = [&amp;quot;json&amp;quot;, &amp;quot;rustls-tls&amp;quot;] }\n\n见：https://github.com/tyrchen/geektime-rust/blob/master/04_httpie/Cargo.toml","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1631148428,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":309776,"user_name":"太子长琴","can_delete":false,"product_type":"c1","uid":1090266,"ip_address":"","ucode":"0627D0FA370AD4","user_header":"https://static001.geekbang.org/account/avatar/00/10/a2/da/a8a32113.jpg","comment_is_top":false,"comment_ctime":1630328800,"is_pvip":false,"replies":[{"id":"112241","content":"嗯，挺不错的思考。谢谢！","user_name":"作者回复","comment_id":309776,"uid":"1079375","ip_address":"","utype":1,"ctime":1630379868,"user_name_real":"Tyr"}],"discussion_count":1,"race_medal":0,"score":"18810197984","product_id":100085301,"comment_content":"fib 这个还挺有意思的，可以把 next 单独拿出来，在内部做赋值（c = *a+*b, *a=*b, *b=c）；也可以把 a 先算出来，然后 swap ab（a = a+b, swap(a,b)）；或者使用 mut reference tuple（fib = (fib.1, fib.0+fib.1)）。<br><br>第二个在RPL中有个I&#47;O Project的例子，用了 Config，不过感觉捕捉一下 Err 就可以了：<br>```rust<br>let args: Vec&lt;String&gt; = env::args().collect();<br>    let (url, output) = parse_config(&amp;args);<br>    if let Err(e) = scrape_url::scrape(url, output) {<br>        println!(&quot;{}&quot;, e);<br>    }<br>```<br><br>课程真心不错~深入浅出不啰嗦~","like_count":4,"discussions":[{"author":{"id":1079375,"avatar":"https://static001.geekbang.org/account/avatar/00/10/78/4f/e74f870c.jpg","nickname":"Tyr","note":"","ucode":"EAAFC8063202E0","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":526009,"discussion_content":"嗯，挺不错的思考。谢谢！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1630379868,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":309385,"user_name":"🔥神山 | 雷神山","can_delete":false,"product_type":"c1","uid":2738622,"ip_address":"","ucode":"1552CB73E89381","user_header":"https://static001.geekbang.org/account/avatar/00/29/c9/be/1949917d.jpg","comment_is_top":false,"comment_ctime":1630078408,"is_pvip":false,"replies":[{"id":"112067","content":"这道题我的本意不是抽取整个 loop，而是抽取 loop 中计算的部分。你可以看我写的参考代码：https:&#47;&#47;play.rust-lang.org&#47;?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=e92b30bd5c2bccd03124b3af338f3425","user_name":"作者回复","comment_id":309385,"uid":"1079375","ip_address":"","utype":1,"ctime":1630131520,"user_name_real":"Tyr"}],"discussion_count":3,"race_medal":0,"score":"18809947592","product_id":100085301,"comment_content":"1. 在上面的斐波那契数列的代码中，你也许注意到计算数列中下一个数的代码在三个函数中不断重复。这不符合 DRY（Don’t Repeat Yourself）原则。你可以写一个函数把它抽取出来么？<br>1) 定义一个loop_calc:<br>```rust<br>fn loop_calc(mut first_num: i32, mut second_num: i32, limit: u8) {<br>    for _i in 2..limit {<br>        let sum_num = first_num + second_num;<br>        first_num = second_num;<br>        second_num = sum_num;<br>        println!(&quot;next val is {}&quot;, sum_num);<br>    }<br>}<br>```<br>2) 在三个函数:fib_loop, fib_while, fib_for分别调用loop_calc(a, b, n)即可<br>完整版本:<br>```rust<br>fn loop_calc(mut first_num: i32, mut second_num: i32, limit: u8) {<br>    for _i in 2..limit {<br>        let sum_num = first_num + second_num;<br>        first_num = second_num;<br>        second_num = sum_num;<br>        println!(&quot;next val is {}&quot;, sum_num);<br>    }<br>}<br><br>fn fib_loop(n: u8) {<br>    let a = 1;<br>    let b = 1;<br>    loop_calc(a, b, n);<br>}<br><br>fn fib_while(n: u8) {<br>    let (a, b) = (1, 1);<br>    loop_calc(a, b, n);<br>}<br><br>fn fib_for(n: u8) {<br>    let (a, b) = (1, 1);<br>    loop_calc(a, b, n);<br>}<br><br>fn main() {<br>    let n = 10;<br>    fib_loop(n);<br>    fib_while(n);<br>    fib_for(n);<br>}<br>```<br>","like_count":4,"discussions":[{"author":{"id":1079375,"avatar":"https://static001.geekbang.org/account/avatar/00/10/78/4f/e74f870c.jpg","nickname":"Tyr","note":"","ucode":"EAAFC8063202E0","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":525847,"discussion_content":"这道题我的本意不是抽取整个 loop，而是抽取 loop 中计算的部分。你可以看我写的参考代码：https://play.rust-lang.org/?version=stable&amp;amp;mode=debug&amp;amp;edition=2018&amp;amp;gist=e92b30bd5c2bccd03124b3af338f3425","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1630131520,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":2,"child_discussions":[{"author":{"id":1017546,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKCNH9kd9GibX0icHbdkUJAJ0ICicZNcsAcVZkUhTibMFbKtVtnjUpMtgd9ZibkWFZibgftHezDIyMRjafA/132","nickname":"个度时个度","note":"","ucode":"9AFBDD14211ABE","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1079375,"avatar":"https://static001.geekbang.org/account/avatar/00/10/78/4f/e74f870c.jpg","nickname":"Tyr","note":"","ucode":"EAAFC8063202E0","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":535684,"discussion_content":"感觉练习题偏向有rust基础知识的人员了。第一篇还不甚了解语法的情况下。这个可变变量，引用解引用的写法不一定能写的出来","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1638516493,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":525847,"ip_address":""},"score":535684,"extra":""},{"author":{"id":2891028,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eqOWkZeRNXC5biacjth23ic7U2Qg8EXAaoHoIpUx5V06oQmHicI13RGgibO8QXw3m8yy3Jx739uMgcE1g/132","nickname":"咖啡☕️","note":"","ucode":"30BC47D4A47870","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1017546,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKCNH9kd9GibX0icHbdkUJAJ0ICicZNcsAcVZkUhTibMFbKtVtnjUpMtgd9ZibkWFZibgftHezDIyMRjafA/132","nickname":"个度时个度","note":"","ucode":"9AFBDD14211ABE","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":546065,"discussion_content":"是，这样就不太像“第一课”了哈哈，不过对有点基础的来说确实喜欢这样的方式","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1642148302,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":535684,"ip_address":""},"score":546065,"extra":""}]}]},{"had_liked":false,"id":309252,"user_name":"王硕尧","can_delete":false,"product_type":"c1","uid":1743072,"ip_address":"","ucode":"8E5ED0B869C213","user_header":"https://static001.geekbang.org/account/avatar/00/1a/98/e0/8c814c13.jpg","comment_is_top":false,"comment_ctime":1630022125,"is_pvip":false,"replies":[{"id":"111962","content":"是的，函数本身是一个指向 TEXT 段起始位置的指针。我们可以看到它可以 cast 成 *const () 。<br><br>```rust<br>fn main() {<br>    println!(&quot;main: {:p}&quot;, main as *const ());<br>}<br>```","user_name":"作者回复","comment_id":309252,"uid":"1079375","ip_address":"","utype":1,"ctime":1630032898,"user_name_real":"Tyr"}],"discussion_count":1,"race_medal":0,"score":"14514924013","product_id":100085301,"comment_content":"其实 fn(i32) -&gt; i32 这个类型是一个函数指针类型：https:&#47;&#47;doc.rust-lang.org&#47;reference&#47;types&#47;function-pointer.html","like_count":3,"discussions":[{"author":{"id":1079375,"avatar":"https://static001.geekbang.org/account/avatar/00/10/78/4f/e74f870c.jpg","nickname":"Tyr","note":"","ucode":"EAAFC8063202E0","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":525801,"discussion_content":"是的，函数本身是一个指向 TEXT 段起始位置的指针。我们可以看到它可以 cast 成 *const () 。\n\n```rust\nfn main() {\n    println!(&amp;quot;main: {:p}&amp;quot;, main as *const ());\n}\n```","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1630032898,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":313254,"user_name":"Geek_67a5d1","can_delete":false,"product_type":"c1","uid":2683525,"ip_address":"","ucode":"5D8AA78BEB84AE","user_header":"","comment_is_top":false,"comment_ctime":1632341861,"is_pvip":true,"replies":[{"id":"113483","content":"嗯，不错！记得要验证输入哦。<br><br>另外，我 20 分钟讲的东西，也是花了好几个小时写（后面的内容甚至有花了整个周末写的），所以你不亏 :)","user_name":"作者回复","comment_id":313254,"uid":"1079375","ip_address":"","utype":1,"ctime":1632364765,"user_name_real":"Tyr"}],"discussion_count":1,"race_medal":0,"score":"10222276453","product_id":100085301,"comment_content":"初学者，花了一天时间才基本消化了老师讲20分钟的东西😅。简单方式做一下思考题2：<br><br>use std::fs;<br><br>fn print_usage_prompt_and_exit() {<br>    println!(&quot;USAGE: cargo run -- url file.md&quot;);<br>    std::process::exit(-1);<br>}<br><br>fn main() {<br>    let args: Vec&lt;String&gt; = std::env::args().skip(1).collect();<br><br>    if args.len() != 2 {<br>        print_usage_prompt_and_exit();<br>    }<br><br>    let (url, output) = (&amp;args[0], &amp;args[1]);<br><br>    println!(&quot;Fetching url: {}&quot;, url);<br>    let body = reqwest::blocking::get(url).unwrap().text().unwrap();<br><br>    println!(&quot;Converting html to markdown...&quot;);<br>    let md = html2md::parse_html(&amp;body);<br><br>    fs::write(output, md.as_bytes()).unwrap();<br>    println!(&quot;Converted markdown has been saved in {}.&quot;, output);<br>}<br>","like_count":2,"discussions":[{"author":{"id":1079375,"avatar":"https://static001.geekbang.org/account/avatar/00/10/78/4f/e74f870c.jpg","nickname":"Tyr","note":"","ucode":"EAAFC8063202E0","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":527294,"discussion_content":"嗯，不错！记得要验证输入哦。\n\n另外，我 20 分钟讲的东西，也是花了好几个小时写（后面的内容甚至有花了整个周末写的），所以你不亏 :)","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1632364765,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":309472,"user_name":"徐洲更","can_delete":false,"product_type":"c1","uid":1314643,"ip_address":"","ucode":"F8A323CB732D05","user_header":"https://static001.geekbang.org/account/avatar/00/14/0f/53/92a50f01.jpg","comment_is_top":false,"comment_ctime":1630152759,"is_pvip":true,"replies":[{"id":"112136","content":"可以这么类比，但 void 不能赋值给变量，而 unit 可以。<br><br>```C<br>#include &quot;stdio.h&quot;<br><br>void a() {<br>   printf(&quot;hello world!&quot;);<br>}<br><br>int main() {<br>  void b = a();<br>  printf(&quot;{%d}&quot;, a);<br>  return 0;<br>}<br>```<br><br>更多关于 C void 的讨论，可以看这个帖子：https:&#47;&#47;stackoverflow.com&#47;questions&#47;3487689&#47;is-void-a-data-type-in-c","user_name":"作者回复","comment_id":309472,"uid":"1079375","ip_address":"","utype":1,"ctime":1630296816,"user_name_real":"Tyr"}],"discussion_count":1,"race_medal":0,"score":"10220087351","product_id":100085301,"comment_content":"关于函数返回的 unit ，是不是可以认为是c&#47;c++的void 也就是返回一个空类型？<br>","like_count":2,"discussions":[{"author":{"id":1079375,"avatar":"https://static001.geekbang.org/account/avatar/00/10/78/4f/e74f870c.jpg","nickname":"Tyr","note":"","ucode":"EAAFC8063202E0","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":525886,"discussion_content":"可以这么类比，但 void 不能赋值给变量，而 unit 可以。\n\n```C\n#include &amp;quot;stdio.h&amp;quot;\n\nvoid a() {\n   printf(&amp;quot;hello world!&amp;quot;);\n}\n\nint main() {\n  void b = a();\n  printf(&amp;quot;{%d}&amp;quot;, a);\n  return 0;\n}\n```\n\n更多关于 C void 的讨论，可以看这个帖子：https://stackoverflow.com/questions/3487689/is-void-a-data-type-in-c","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1630296816,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":309299,"user_name":"Roy Liang","can_delete":false,"product_type":"c1","uid":1098898,"ip_address":"","ucode":"1DF5FC831A35DA","user_header":"https://static001.geekbang.org/account/avatar/00/10/c4/92/338b5609.jpg","comment_is_top":false,"comment_ctime":1630035345,"is_pvip":false,"replies":[{"id":"112062","content":"👍","user_name":"作者回复","comment_id":309299,"uid":"1079375","ip_address":"","utype":1,"ctime":1630130989,"user_name_real":"Tyr"}],"discussion_count":2,"race_medal":0,"score":"10219969937","product_id":100085301,"comment_content":"    &#47;&#47; let url = &quot;https:&#47;&#47;www.rust-lang.org&#47;&quot;;<br>    let args: Vec&lt;String&gt; = env::args().collect();<br>    let url = &amp;args[1];<br><br>不查资料真是想不到怎样正确获取命令行参数","like_count":2,"discussions":[{"author":{"id":1079375,"avatar":"https://static001.geekbang.org/account/avatar/00/10/78/4f/e74f870c.jpg","nickname":"Tyr","note":"","ucode":"EAAFC8063202E0","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":525817,"discussion_content":"👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1630130989,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2738941,"avatar":"https://static001.geekbang.org/account/avatar/00/29/ca/fd/4e6dd31c.jpg","nickname":"枸杞红茶","note":"","ucode":"03D80953AF984E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":397670,"discussion_content":"妙啊","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1632659346,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":310578,"user_name":"虾","can_delete":false,"product_type":"c1","uid":1480118,"ip_address":"","ucode":"AD2E4C1EA4A946","user_header":"https://static001.geekbang.org/account/avatar/00/16/95/b6/9aff520e.jpg","comment_is_top":false,"comment_ctime":1630752942,"is_pvip":false,"replies":[{"id":"112516","content":"这种写法容易懂，不光 Rust，Swift 等语言也是类似的方式。C99 类似，不过中间用的是 =。我觉得这纯粹是风格的问题，而且不用纠结。<br><br>```rust<br>let taylor = Person{ age: 10, score: 87};<br>```<br><br>```swift<br>let taylor = Person(age: 10, score: 87);<br>```<br><br>```C<br>Person taylor = { .age = 10, .score = 87};<br>```","user_name":"作者回复","comment_id":310578,"uid":"1079375","ip_address":"","utype":1,"ctime":1630778096,"user_name_real":"Tyr"}],"discussion_count":1,"race_medal":0,"score":"5925720238","product_id":100085301,"comment_content":"Rust给结构体成员初始化，为什么会用类似js的冒号呢？<br>js用键值对风格的冒号，有情可原（虽然我也不喜欢）。毕竟js没有静态的结构体。<br>但Rust的结构体是静态的，并不是字典。我觉得，冒号后面应该只会跟类型，不跟值。并且把初始化列表的逗号改为分号，这样风格才更统一啊。<br>不知道作者大人怎么理解这个问题？这是个纯粹的风格的问题，还是有什么不得不为之的理由呢？","like_count":1,"discussions":[{"author":{"id":1079375,"avatar":"https://static001.geekbang.org/account/avatar/00/10/78/4f/e74f870c.jpg","nickname":"Tyr","note":"","ucode":"EAAFC8063202E0","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":526281,"discussion_content":"这种写法容易懂，不光 Rust，Swift 等语言也是类似的方式。C99 类似，不过中间用的是 =。我觉得这纯粹是风格的问题，而且不用纠结。\n\n```rust\nlet taylor = Person{ age: 10, score: 87};\n```\n\n```swift\nlet taylor = Person(age: 10, score: 87);\n```\n\n```C\nPerson taylor = { .age = 10, .score = 87};\n```","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1630778096,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":309768,"user_name":"Bruce","can_delete":false,"product_type":"c1","uid":2365229,"ip_address":"","ucode":"2A48A313481754","user_header":"https://static001.geekbang.org/account/avatar/00/24/17/2d/b7614553.jpg","comment_is_top":false,"comment_ctime":1630326027,"is_pvip":false,"replies":[{"id":"112235","content":"都是一周更三篇，总说我更新慢😭 毕竟还是偏基础的课嘛，如果学习进度很不错，可以看看加餐的资料，配套学习更爽哦。","user_name":"编辑回复","comment_id":309768,"uid":"2547771","ip_address":"","utype":2,"ctime":1630376289,"user_name_real":"叶如芊"}],"discussion_count":1,"race_medal":0,"score":"5925293323","product_id":100085301,"comment_content":"更新的有点慢😂","like_count":1,"discussions":[{"author":{"id":2547771,"avatar":"https://static001.geekbang.org/account/avatar/00/26/e0/3b/8ec916b2.jpg","nickname":"多少","note":"","ucode":"0A6EF7AA6E4BB7","race_medal":0,"user_type":4,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":526006,"discussion_content":"都是一周更三篇，总说我更新慢😭 毕竟还是偏基础的课嘛，如果学习进度很不错，可以看看加餐的资料，配套学习更爽哦。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1630376289,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":4}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":309475,"user_name":"Geek_7eba7c","can_delete":false,"product_type":"c1","uid":2373547,"ip_address":"","ucode":"A4BC2CF548B011","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJGSiaRVNB3B267z9BA9HjvCZoFkMm5ficrLTjPdQAFXTmqSGAxCfjujXSS8icpUFXEFsDf4rSOYrvcA/132","comment_is_top":false,"comment_ctime":1630153114,"is_pvip":false,"replies":[{"id":"112143","content":"感觉是之前拉 git 出错导致问题。删除 ~&#47;.cargo，再重新编译试试？dependency 可以考虑换国内的源或者上梯子","user_name":"作者回复","comment_id":309475,"uid":"1079375","ip_address":"","utype":1,"ctime":1630298013,"user_name_real":"Tyr"}],"discussion_count":4,"race_medal":0,"score":"5925120410","product_id":100085301,"comment_content":"html2md: Error: Command failed: git --no-pager --git-dir=&quot;&#47;Users&#47;chenang&#47;.cargo&#47;registry&#47;index&#47;github.com-1ecc6299db9ec823&#47;.git&quot; show origin&#47;master:ht&#47;ml&#47;html2md<br>fatal: 无效的对象名 &#39;origin&#47;master&#39;。 cargo.toml 提示这个错 ，帮忙看下","like_count":1,"discussions":[{"author":{"id":1079375,"avatar":"https://static001.geekbang.org/account/avatar/00/10/78/4f/e74f870c.jpg","nickname":"Tyr","note":"","ucode":"EAAFC8063202E0","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":525887,"discussion_content":"感觉是之前拉 git 出错导致问题。删除 ~/.cargo，再重新编译试试？dependency 可以考虑换国内的源或者上梯子","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1630298013,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1485562,"avatar":"https://static001.geekbang.org/account/avatar/00/16/aa/fa/3ad0a689.jpg","nickname":"廖师虎","note":"","ucode":"1297068AE141DA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":393364,"discussion_content":"清除缓存和换cargo源后，重新cargo run就好了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1631374424,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1377178,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/9ZbIC7NmVziajoibQo7ccicScegYRU1jybwXmfA23ARdBASEiaI8bjdq7RAZr2roWicAV2ZZOoJEBdoDJtEp8BsfAyQ/132","nickname":"fzzf","note":"","ucode":"C29C4D196D2420","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":391094,"discussion_content":"但执行了cargo run后，依赖装了就好了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1630294002,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1377178,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/9ZbIC7NmVziajoibQo7ccicScegYRU1jybwXmfA23ARdBASEiaI8bjdq7RAZr2roWicAV2ZZOoJEBdoDJtEp8BsfAyQ/132","nickname":"fzzf","note":"","ucode":"C29C4D196D2420","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":391092,"discussion_content":"我的Cargo.toml也有这三个感叹号。。。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1630293147,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":309470,"user_name":"qinsi","can_delete":false,"product_type":"c1","uid":1667175,"ip_address":"","ucode":"090D9C4068FF12","user_header":"https://static001.geekbang.org/account/avatar/00/19/70/67/0c1359c2.jpg","comment_is_top":false,"comment_ctime":1630152312,"is_pvip":true,"replies":[{"id":"112141","content":"这个现在不需要 nightly：<br><br>```rust<br>fn main() {<br>    let (a, b) = (1, 1);<br>    println!(&quot;a = {}, b = {}&quot;, a, b);<br>}<br>```<br><br>或者在 playground 里直接运行：https:&#47;&#47;play.rust-lang.org&#47;?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=1a7de4fbb7b747d96659e3b3688ea713","user_name":"作者回复","user_name_real":"Tyr","uid":"1079375","ctime":1630297756,"ip_address":"","comment_id":309470,"utype":1}],"discussion_count":5,"race_medal":0,"score":"5925119608","product_id":100085301,"comment_content":"nightly里打开destructuring_assignment特性，就可以像python&#47;js等其他语言里那样写：<br><br>let (mut a, mut b) = (1, 1);<br>for _i in 2..n {<br>    (a, b) = (b, a + b);<br>}","like_count":1,"discussions":[{"author":{"id":1079375,"avatar":"https://static001.geekbang.org/account/avatar/00/10/78/4f/e74f870c.jpg","nickname":"Tyr","note":"","ucode":"EAAFC8063202E0","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":525885,"discussion_content":"这个现在不需要 nightly：\n\n```rust\nfn main() {\n    let (a, b) = (1, 1);\n    println!(&amp;quot;a = {}, b = {}&amp;quot;, a, b);\n}\n```\n\n或者在 playground 里直接运行：https://play.rust-lang.org/?version=stable&amp;amp;mode=debug&amp;amp;edition=2018&amp;amp;gist=1a7de4fbb7b747d96659e3b3688ea713","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1630297756,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1667175,"avatar":"https://static001.geekbang.org/account/avatar/00/19/70/67/0c1359c2.jpg","nickname":"qinsi","note":"","ucode":"090D9C4068FF12","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":391118,"discussion_content":"不是的，destructuring一直都可以用，这里用到的是destructuring assignment。如果想像python里那样交换两个变量的值 (a, b) = (b, a)，编译器会报错说destructuring assignments are unstable","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1630303214,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1198816,"avatar":"https://static001.geekbang.org/account/avatar/00/12/4a/e0/eff34583.jpg","nickname":"马超","note":"","ucode":"FAFF55DC5DD15C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":393787,"discussion_content":"老师给的例子，是不是因为声明tuple时候可以这么赋值，但是如果赋值给事先声明的单个变量，就会报错 destructing assignment?","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1631601213,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1958092,"avatar":"https://static001.geekbang.org/account/avatar/00/1d/e0/cc/b7dd3d67.jpg","nickname":"嘟嘟","note":"","ucode":"FEA6F454376F6D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":391310,"discussion_content":"Rust这里好奇怪，为啥不能直接(a, b) = (b, a + b)呢，我现在是在文件头加了一行\n#![feature(destructuring_assignment)]","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1630396975,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1667175,"avatar":"https://static001.geekbang.org/account/avatar/00/19/70/67/0c1359c2.jpg","nickname":"qinsi","note":"","ucode":"090D9C4068FF12","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1958092,"avatar":"https://static001.geekbang.org/account/avatar/00/1d/e0/cc/b7dd3d67.jpg","nickname":"嘟嘟","note":"","ucode":"FEA6F454376F6D","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":391506,"discussion_content":"$ rustup install nightly\n$ cargo +nightly run","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1630487089,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":391310,"ip_address":""},"score":391506,"extra":""}]}]},{"had_liked":false,"id":309258,"user_name":"Geek_632da1","can_delete":false,"product_type":"c1","uid":2748341,"ip_address":"","ucode":"00312959F99AD3","user_header":"","comment_is_top":false,"comment_ctime":1630025659,"is_pvip":false,"replies":[{"id":"111963","content":"👍","user_name":"作者回复","user_name_real":"Tyr","uid":"1079375","ctime":1630032941,"ip_address":"","comment_id":309258,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5924992955","product_id":100085301,"comment_content":"刚学完更新的一讲，很不错的呢！结合汉哥的《rust编程之道》来看，感觉学起来还是很nice的！加油！","like_count":1,"discussions":[{"author":{"id":1079375,"avatar":"https://static001.geekbang.org/account/avatar/00/10/78/4f/e74f870c.jpg","nickname":"Tyr","note":"","ucode":"EAAFC8063202E0","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":525804,"discussion_content":"👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1630032941,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":309253,"user_name":"王硕尧","can_delete":false,"product_type":"c1","uid":1743072,"ip_address":"","ucode":"8E5ED0B869C213","user_header":"https://static001.geekbang.org/account/avatar/00/1a/98/e0/8c814c13.jpg","comment_is_top":false,"comment_ctime":1630022332,"is_pvip":false,"replies":[{"id":"111961","content":"谢谢指正！我在之前的留言回复了。","user_name":"作者回复","user_name_real":"Tyr","uid":"1079375","ctime":1630032492,"ip_address":"","comment_id":309253,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5924989628","product_id":100085301,"comment_content":"Rust 既有statement又有expression，Rust的statement主要用于显式顺序表达式求值以及包含一些表达式：In contrast, statements in Rust serve mostly to contain and explicitly sequence expression evaluation.<br><br>https:&#47;&#47;doc.rust-lang.org&#47;reference&#47;statements-and-expressions.html","like_count":1,"discussions":[{"author":{"id":1079375,"avatar":"https://static001.geekbang.org/account/avatar/00/10/78/4f/e74f870c.jpg","nickname":"Tyr","note":"","ucode":"EAAFC8063202E0","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":525802,"discussion_content":"谢谢指正！我在之前的留言回复了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1630032492,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":360325,"user_name":"Geek_ab39c5","can_delete":false,"product_type":"c1","uid":1933185,"ip_address":"湖南","ucode":"89A3916804B7CA","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTL3urBtzGZNwVr29vGKvONTwRhgMZISb15rG02ffv9Y5cArgHKicmMuWpkXiclNibPKpWXR7qibIvELEw/132","comment_is_top":false,"comment_ctime":1666429530,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1666429530","product_id":100085301,"comment_content":"思考题1这样写是不是性能不行啊<br><br>fn fib_shift(a: i32, b: i32) -&gt; (i32, i32){<br>    (b, a + b)<br>}<br><br>fn fib_loop(n: u8) {<br>    let mut a = 1;<br>    let mut b = 1;<br>    let mut i = 2u8;<br><br>    loop {<br>        (a, b) = fib_shift(a, b);<br>        i += 1;<br><br>        if i &gt;= n {<br>            break;<br>        }<br>    }<br>}","like_count":0},{"had_liked":false,"id":358438,"user_name":"Jervis","can_delete":false,"product_type":"c1","uid":1050018,"ip_address":"广东","ucode":"86C02C483449CC","user_header":"https://static001.geekbang.org/account/avatar/00/10/05/a2/721ae4c6.jpg","comment_is_top":false,"comment_ctime":1664326599,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1664326599","product_id":100085301,"comment_content":"老师请问 rust 宏编程体验如何，原来搞 c 时候，感觉宏有时候猜谜一样，一点不直观。<br>还有看了这节课感觉语法还是不够现代，好多多余的输入，不知道为啥要和 c++ 一样的风格，不知道有没有进化的可能性？<br>目前为止感觉语法不够现代，写起来生产力会受影响。","like_count":0},{"had_liked":false,"id":357962,"user_name":"阿海","can_delete":false,"product_type":"c1","uid":1281585,"ip_address":"广东","ucode":"2589431F840C42","user_header":"https://static001.geekbang.org/account/avatar/00/13/8e/31/28972804.jpg","comment_is_top":false,"comment_ctime":1663775486,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1663775486","product_id":100085301,"comment_content":"1. 问题1， 斐波那契数列：<br>fn fib(a: i32, b: i32) -&gt; (i32, i32)  {<br>    (b, a + b)<br>}<br>使用：（a，b）= fib(a, b)<br><br>2. 问题2<br>    let args = env::args().collect::&lt;Vec&lt;String&gt;&gt;();<br>    if args.len() &lt; 3 {<br>        println!(&quot;need url and file arg, like &#39;cargo run -- http:&#47;&#47;www.rust-lang.org rust.md&#39;&quot;);<br>        return<br>    }<br>    <br>    let url = &amp;args[1];<br>    let output = &amp;args[2];","like_count":0},{"had_liked":false,"id":357475,"user_name":"一帆时空杨丰","can_delete":false,"product_type":"c1","uid":1358184,"ip_address":"广东","ucode":"02A3C8D892A642","user_header":"https://static001.geekbang.org/account/avatar/00/14/b9/68/e8a22492.jpg","comment_is_top":false,"comment_ctime":1663297362,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1663297362","product_id":100085301,"comment_content":"use std::fs;<br>use std::env;<br><br>fn main() {<br>    let args:Vec&lt;String&gt; = env::args().collect();<br>    if args.len() &lt;3 {<br>        println!(&quot;Usage: url output &quot;);<br>        return<br>    }<br><br>    let input = args.iter().as_slice();<br><br>    let url = &amp;input[1];<br>    let output = &amp;input[2];<br><br>    println!(&quot;Fetching url:{}&quot;, url);<br>    let body = reqwest::blocking::get(url).unwrap().text().unwrap();<br><br>    println!(&quot;Convering html to makedown ...&quot;);<br>    let md = html2md::parse_html(&amp;body);<br><br>    &#47;&#47;println!(&quot;Convering html to makedown ...{}&quot;,body);<br><br>    fs::write(output, md.as_bytes()).unwrap();<br>    println!(&quot;Converted markdown has been saved in {}.&quot;, output);<br>}","like_count":0},{"had_liked":false,"id":357474,"user_name":"一帆时空杨丰","can_delete":false,"product_type":"c1","uid":1358184,"ip_address":"广东","ucode":"02A3C8D892A642","user_header":"https://static001.geekbang.org/account/avatar/00/14/b9/68/e8a22492.jpg","comment_is_top":false,"comment_ctime":1663295237,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1663295237","product_id":100085301,"comment_content":"#[warn(dead_code)]<br>fn fib_loop(mut n: u64) {<br>    let (mut a, mut b) = (1u64, 1u64);<br><br>    loop {<br>        (a, b) = update(a, b);<br>        println!(&quot;next val is {}&quot;, b);<br>        n -= 1;<br>        if n &gt; 2 {<br>            continue;<br>        }<br>        break; &#47;&#47;使用break退出死循环<br>    }<br>}<br><br>#[warn(dead_code)]<br>fn fib_while(mut n: u64) {<br>    let (mut a, mut b) = (1u64, 1u64);<br>    while n &gt; 2 {<br>        (a, b) = update(a, b);<br>        n -= 1;<br>        println!(&quot;next val is{}&quot;, b);<br>    }<br>}<br><br>#[warn(dead_code)]<br>fn fib_for(n: u64) {<br>    let (mut a, mut b) = (1u64, 1u64);<br>    for _i in 2..n {<br>        (a, b) = update(a, b);<br>        println!(&quot;next val is {}&quot;, b);<br>    }<br>}<br><br>&#47;&#47;update 只是用两个变量<br>fn update(mut a: u64, b: u64) -&gt; (u64, u64) {<br>    a = a + b;<br>    return (b, a);<br>}<br><br>fn main() {<br>    let n = 10;<br>    fib_while(n);<br>    fib_loop(n);<br>    fib_for(n);<br>}<br>","like_count":0},{"had_liked":false,"id":357335,"user_name":"施荣荣","can_delete":false,"product_type":"c1","uid":2823089,"ip_address":"江苏","ucode":"7D16C877D40630","user_header":"https://static001.geekbang.org/account/avatar/00/2b/13/b1/9f089294.jpg","comment_is_top":false,"comment_ctime":1663162613,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1663162613","product_id":100085301,"comment_content":"不懂就问，Event::Message((_, _, msg)) =&gt; println!(&quot;broadcast: {}&quot;, msg),这里面的_,_代表的是啥？","like_count":0},{"had_liked":false,"id":355628,"user_name":"慕高迪","can_delete":false,"product_type":"c1","uid":1448126,"ip_address":"北京","ucode":"EB1CB5EA4E3A90","user_header":"https://static001.geekbang.org/account/avatar/00/16/18/be/ad3127e0.jpg","comment_is_top":false,"comment_ctime":1661572238,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1661572238","product_id":100085301,"comment_content":"思考题第一题：<br><br>fn fib_loop(n: u8) {<br>    let mut a = 1;<br>    let mut b = 1;<br>    let mut i = 2u8;<br>    <br>    loop {<br>        fib_repeat(&amp;mut a, &amp;mut b);<br>        i += 1;<br>        <br>        println!(&quot;next val is {}&quot;, b);<br>        <br>        if i &gt;= n {<br>            break;<br>        }<br>    }<br>}<br><br>fn fib_while(n: u8) {<br>    let (mut a, mut b, mut i) = (1, 1, 2);<br>    <br>    while i &lt; n {<br>        fib_repeat(&amp;mut a, &amp;mut b);<br>        i += 1;<br>        <br>        println!(&quot;next val is {}&quot;, b);<br>    }<br>}<br><br>fn fib_for(n: u8) {<br>    let (mut a, mut b) = (1, 1);<br>    <br>    for _i in 2..n {<br>        fib_repeat(&amp;mut a, &amp;mut b);<br>        println!(&quot;next val is {}&quot;, b);<br>    }<br>}<br><br>fn fib_repeat(a: &amp;mut i32, b:&amp;mut i32) {<br>    let c  = *a + *b ;<br>    *a = *b;<br>    *b = c;<br>}<br><br><br>fn main() {<br>    let n = 10;<br>    fib_loop(n);<br>    fib_while(n);<br>    fib_for(n);<br>}","like_count":0},{"had_liked":false,"id":355624,"user_name":"慕高迪","can_delete":false,"product_type":"c1","uid":1448126,"ip_address":"北京","ucode":"EB1CB5EA4E3A90","user_header":"https://static001.geekbang.org/account/avatar/00/16/18/be/ad3127e0.jpg","comment_is_top":false,"comment_ctime":1661570129,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1661570129","product_id":100085301,"comment_content":"第二题<br><br>use std::fs;<br>use std::fmt::{Display, Formatter};<br><br>#[derive(Debug)]<br>struct Customerror(String);<br>impl std::error::Error for Customerror {}<br><br>impl Display for Customerror {<br>    fn fmt(&amp;self, f: &amp;mut Formatter&lt;&#39;_&gt;) -&gt; std::fmt::Result{<br>        write!(f,&quot;{}&quot;,self.0)<br>    }<br>}<br><br>&#47;&#47; main 函数现在返回一个 Result<br>fn main() -&gt; Result&lt;(), Box&lt;dyn std::error::Error&gt;&gt; {<br><br>    let args:Vec&lt;String&gt; = std::env::args().collect();<br>    if args.len() == 1 ||  args.len() &gt; 3 {<br>        return Err(Box::new(Customerror(&quot;The parameter length does not meet the requirements&quot;.into())));<br>    }<br><br>    let url: &amp;str = &amp;args[1];<br>    let output: &amp;str = &amp;args[2];<br><br>    println!(&quot;Fetching url: {}&quot;, url);<br>    let body = reqwest::blocking::get(url)?.text()?;<br><br>    println!(&quot;Converting html to markdown...&quot;);<br>    let md = html2md::parse_html(&amp;body);<br><br>    fs::write(output, md.as_bytes())?;<br>    println!(&quot;Converted markdown has been saved in {}.&quot;, output);<br><br>    Ok(())<br>}","like_count":0},{"had_liked":false,"id":354671,"user_name":"Geek_a6c6ce","can_delete":false,"product_type":"c1","uid":3074996,"ip_address":"广东","ucode":"21DC76D3225403","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/TusRVU51UggZGpicXMgH64Cb8jek0wyTOpagtUHNAj0EPbhbEv0FJpFU2K3glbtOdJXiaQ9o6QoEfv5PiaIu7rwng/132","comment_is_top":false,"comment_ctime":1660659036,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1660659036","product_id":100085301,"comment_content":"咔嗒","like_count":0},{"had_liked":false,"id":349716,"user_name":"keke","can_delete":false,"product_type":"c1","uid":1077379,"ip_address":"","ucode":"BE28B8110DF861","user_header":"https://static001.geekbang.org/account/avatar/00/10/70/83/36ab65ec.jpg","comment_is_top":false,"comment_ctime":1656256901,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1656256901","product_id":100085301,"comment_content":"failed to download `indexmap v1.9.1`,  这个错误如何解决呢？","like_count":0},{"had_liked":false,"id":349292,"user_name":"Jack","can_delete":false,"product_type":"c1","uid":1297112,"ip_address":"","ucode":"F3863DAEF449D5","user_header":"https://static001.geekbang.org/account/avatar/00/13/ca/d8/b109ed85.jpg","comment_is_top":false,"comment_ctime":1655872164,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1655872164","product_id":100085301,"comment_content":"开始学习第二遍，这遍顺畅了很多！","like_count":0},{"had_liked":false,"id":348891,"user_name":"Geek_0ba253","can_delete":false,"product_type":"c1","uid":2612720,"ip_address":"","ucode":"55D6DDECC9AF60","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/QvyPibAqLH5uEr7GNL6Lg9jT9sUs9jtub4LvO575nHuT3viagzmvKLCwGQRicsiadic3n9lM62qQ6n5shHfXUYib8Ktg/132","comment_is_top":false,"comment_ctime":1655518861,"is_pvip":true,"discussion_count":0,"race_medal":5,"score":"1655518861","product_id":100085301,"comment_content":"写了一下思考题，直接报错打脸，加了mut，用了clone，勉强跑了起来，初学感觉Rust像是老人与海里面的那条大马林鱼。","like_count":0},{"had_liked":false,"id":348044,"user_name":"小杰","can_delete":false,"product_type":"c1","uid":2853200,"ip_address":"","ucode":"BBDF8E9F348F65","user_header":"https://static001.geekbang.org/account/avatar/00/2b/89/50/aee9fdab.jpg","comment_is_top":false,"comment_ctime":1654686170,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1654686170","product_id":100085301,"comment_content":"第一题<br>fn fib_loop(n: u8) {<br>    let mut a = 1;<br>    let mut b = 1;<br>    let mut i = 2u8;<br>    <br>    loop {<br>        (a, b) = calculate(a, b);<br>        i += 1;<br>        <br>        println!(&quot;next val is {}&quot;, b);<br>        <br>        if i &gt;= n {<br>            break;<br>        }<br>    }<br>}<br><br>fn calculate(mut a:i32, mut b:i32) -&gt; (i32, i32){<br>    let c = a + b;<br>        a = b;<br>        b = c;<br>        (a, b)<br>}<br><br>fn main() {<br>    let n = 10;<br>    fib_loop(n);<br>}<br>我这种方法算是比较笨，相当于把数据保存进来然后有又送去了，完全可以用指针的，我看大家都是用的指针，反正是顺序执行，不存在竞争关系，而且性能也更好。<br><br><br>第二题<br>use std::fs;<br>use std::env;<br><br>fn main() {<br>  let args: Vec&lt;String&gt; = env::args().collect();<br><br>  let url = &amp;args[1];<br>  let output = &amp;args[2];<br><br>  println!(&quot;you input the url is  {}&quot;, url);<br>  println!(&quot;you input the file name is {}&quot;, output);<br><br>  println!(&quot;Fetching url: {}&quot;, url);<br>  let body = reqwest::blocking::get(url).unwrap().text().unwrap();<br><br>  println!(&quot;Converting html to markdown...&quot;);<br>  let md = html2md::parse_html(&amp;body);<br><br>  fs::write(output, md.as_bytes()).unwrap();<br>  println!(&quot;Converted markdown has been saved in {}.&quot;, output);<br><br>  for arg in std::env::args() {<br>    println!(&quot;{}&quot;, arg);<br>  }<br>}<br>参考了rust官方出的数据，如果加一个循环，一个错误处理就更完美了。<br>附上加上std::env::args()循环之后的标准输出：<br>cargo new https:&#47;&#47;go.dev&#47; go.md<br>https:&#47;&#47;go.dev&#47;<br>go.md","like_count":0},{"had_liked":false,"id":347763,"user_name":"forever 蒙","can_delete":false,"product_type":"c1","uid":2991652,"ip_address":"","ucode":"472EB8946A3F96","user_header":"https://static001.geekbang.org/account/avatar/00/2d/a6/24/961129f1.jpg","comment_is_top":false,"comment_ctime":1654404437,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1654404437","product_id":100085301,"comment_content":"cargo : 无法将“cargo”项识别为 cmdlet、函数、脚本文件或可运行程序的名称。请检查名称的拼写，如果包括路径，请确保路径正确，然后再试一次。<br>所在位置 行:1 字符: 1<br>+ cargo run<br>+ ~~~~~<br>    + CategoryInfo          : ObjectNotFound: (cargo:String) [], CommandNotFoundException<br>    + FullyQualifiedErrorId : CommandNotFoundException<br>cargo run总是这样报错，请问老师有没有解决办法？<br>","like_count":0},{"had_liked":false,"id":346937,"user_name":"哄哄","can_delete":false,"product_type":"c1","uid":2639918,"ip_address":"","ucode":"82285594E3159A","user_header":"https://static001.geekbang.org/account/avatar/00/28/48/2e/3d11dcc3.jpg","comment_is_top":false,"comment_ctime":1653548178,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1653548178","product_id":100085301,"comment_content":"运行第一个html2md例子就出问题了。大家有一样的吗？其他例子都没有问题。<br> gcc.exe: error: d:\\\\rust_learn\\tomark\\target\\debug\\build\\winapi-da12a0d2f63fe691\\build_script_build-da12a0d2f63fe691.1pew16g2wi8pezh0.rcgu.o: No such file or directory<br>上面的文件找不到导致了winapi包失败，好像还是mingw64报的错。这个是怎么回事？<br>","like_count":0},{"had_liked":false,"id":344262,"user_name":"斯文先生","can_delete":false,"product_type":"c1","uid":2447976,"ip_address":"","ucode":"0547A3657C99A1","user_header":"https://static001.geekbang.org/account/avatar/00/25/5a/68/2d161fe0.jpg","comment_is_top":false,"comment_ctime":1651405535,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1651405535","product_id":100085301,"comment_content":"代码报错","like_count":0},{"had_liked":false,"id":342926,"user_name":"杨超","can_delete":false,"product_type":"c1","uid":2431462,"ip_address":"","ucode":"9134054576B304","user_header":"https://static001.geekbang.org/account/avatar/00/25/19/e6/62ef3dbc.jpg","comment_is_top":false,"comment_ctime":1650536626,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1650536626","product_id":100085301,"comment_content":"我想问个初级问题，像<br>enum Gender {<br>    Unspecified = 0,<br>    Female = 1,<br>    Male = 2,<br>}<br>这样的写法， Unspecified = 0,这个后面的=0有什么意义啊？毕竟后面凡是要用到这个枚举的某一项，都是要写Gender::Unspecified这样的形式，而且Gender::Unspecified==0这样的判别式也会被提示错的，所以这个具体数值有什么意义吗？","like_count":0,"discussions":[{"author":{"id":1202386,"avatar":"https://static001.geekbang.org/account/avatar/00/12/58/d2/dcbd60b4.jpg","nickname":"雪痕","note":"","ucode":"B48100B798C7A4","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":578694,"discussion_content":"在某些地方如果需要转成int可以直接as  i32这样子","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1656949495,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":337551,"user_name":"窝窝头","can_delete":false,"product_type":"c1","uid":1063866,"ip_address":"","ucode":"5C2635ED6484F8","user_header":"https://static001.geekbang.org/account/avatar/00/10/3b/ba/3b30dcde.jpg","comment_is_top":false,"comment_ctime":1646888845,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1646888845","product_id":100085301,"comment_content":"作为初学者我就只能这样直接改了<br>use std::fs;<br>fn main() -&gt; Result&lt;(), Box&lt;dyn std::error::Error&gt;&gt; {<br>    let args: Vec&lt;String&gt; = std::env::args().collect();<br>    let url = &amp;args[1];<br>    let output = &amp;args[2];<br><br>    println!(&quot;Fetching url: {}&quot;, url);<br>    let body = reqwest::blocking::get(url)?.text()?;<br><br>    println!(&quot;Converting html to markdon...&quot;);<br>    let md = html2md::parse_html(&amp;body);<br><br>    fs::write(output, md.as_bytes())?;<br>    println!(&quot;Convereted markdownhas been saved in {}.&quot;, output);<br>    Ok(())<br>}","like_count":0},{"had_liked":false,"id":335538,"user_name":"xiaojunzhou","can_delete":false,"product_type":"c1","uid":1276024,"ip_address":"","ucode":"C155FA9BB89318","user_header":"https://static001.geekbang.org/account/avatar/00/13/78/78/681a3e06.jpg","comment_is_top":false,"comment_ctime":1645579863,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1645579863","product_id":100085301,"comment_content":"fn next_fib(a: &amp;mut u8, mut b: u8) -&gt; u8 {<br>    let c = *a + b;<br>    *a = b;<br>    b = c;<br><br>    return b<br>}<br><br>fn fib_loop(n: u8) {<br>    let mut a = 1;<br>    let mut b = 1;<br>    let mut i = 2u8;<br>    <br>    loop {<br>        b = next_fib(&amp;mut a, b);<br>        i += 1;<br>        <br>        println!(&quot;next val is {}&quot;, b);<br>        <br>        if i &gt;= n {<br>            break;<br>        }<br>    }<br>}<br><br>fn fib_while(n: u8) {<br>    let (mut a, mut b, mut i) = (1, 1, 2);<br>    <br>    while i &lt; n {<br>        b = next_fib(&amp;mut a, b);<br>        i += 1;<br>        <br>        println!(&quot;next val is {}&quot;, b);<br>    }<br>}<br><br>fn fib_for(n: u8) {<br>    let (mut a, mut b) = (1, 1);<br>    <br>    for _i in 2..n {<br>        b = next_fib(&amp;mut a, b);<br>        println!(&quot;next val is {}&quot;, b);<br>    }<br>}<br><br>fn main() {<br>    fib_loop(10);<br>    fib_while(10);<br>    fib_for(10);<br>}","like_count":0},{"had_liked":false,"id":335303,"user_name":"alexgreenbar","can_delete":false,"product_type":"c1","uid":1003655,"ip_address":"","ucode":"87ED7233E2767C","user_header":"https://static001.geekbang.org/account/avatar/00/0f/50/87/dde718fa.jpg","comment_is_top":false,"comment_ctime":1645445781,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1645445781","product_id":100085301,"comment_content":"C语言是静态语言，也就是强类型语言，其中printf接受任意个数参数，也是宏实现的？","like_count":0},{"had_liked":false,"id":335131,"user_name":"Geek_a8e657","can_delete":false,"product_type":"c1","uid":2916617,"ip_address":"","ucode":"F67AD247E36B0C","user_header":"https://static001.geekbang.org/account/avatar/00/2c/81/09/b247e9b7.jpg","comment_is_top":false,"comment_ctime":1645349728,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1645349728","product_id":100085301,"comment_content":"运行第一个示例程序， 得到以下报错， 猜是没有设置代理。<br>Fetching url: https:&#47;&#47;www.rust-lang.org&#47;<br>thread &#39;main&#39; panicked at &#39;called `Result::unwrap()` on an `Err` value: reqwest::Error { kind: Request, url: Url { scheme: &quot;https&quot;, cannot_be_a_base: false, username: &quot;&quot;, password: None, host: Some(Domain(&quot;www.rust-lang.org&quot;)), port: None, path: &quot;&#47;&quot;, query: None, fragment: None }, source: hyper::Error(Connect, ConnectError(&quot;dns error&quot;, Os { code: 11001, kind: Uncategorized, message: &quot;No such host is known.&quot; })) }&#39;, src\\main.rs:9:42<br>note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace<br>error: process didn&#39;t exit successfully: `target\\debug\\scrape_url.exe` (exit code: 101)<br><br>于是自己根据rust-analyzer的语法提示，尝试了下面的代码，但都发觉不能把url传给client，老师或者哪位同学可以指点以下吗？<br>  let client = reqwest::Client::builder()<br>    .proxy(reqwest::Proxy::https(&quot;http:&#47;&#47;127.0.0.1:9742&#47;localproxy-2efbe37f.pac&quot;)?)<br>    .build()?;<br>或者<br>  let client = Client::new();","like_count":0},{"had_liked":false,"id":335059,"user_name":"Geek_a8e657","can_delete":false,"product_type":"c1","uid":2916617,"ip_address":"","ucode":"F67AD247E36B0C","user_header":"https://static001.geekbang.org/account/avatar/00/2c/81/09/b247e9b7.jpg","comment_is_top":false,"comment_ctime":1645277628,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1645277628","product_id":100085301,"comment_content":"Tabnine 启动或初始化的时候提示:下载不了依赖， 应该是公司的网络代理阻挡了， 请问有什么办法吗？ 或者在哪里可以人手下载依赖然后安装？","like_count":0},{"had_liked":false,"id":334132,"user_name":"Geek_ae206d","can_delete":false,"product_type":"c1","uid":2886915,"ip_address":"","ucode":"89116E9E5A53BF","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLaoiaerNMy7emdj0ALx5laumXOm8pk9MfZONichsDlne1SHJI5ndEd1EaXD8vy6aKNm4CSdQRmYyow/132","comment_is_top":false,"comment_ctime":1644758404,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1644758404","product_id":100085301,"comment_content":"mac下 VSCode rust配置有比较好的配置说明不","like_count":0},{"had_liked":false,"id":333946,"user_name":"何处不江南","can_delete":false,"product_type":"c1","uid":2457832,"ip_address":"","ucode":"AF33F53BC032B9","user_header":"https://static001.geekbang.org/account/avatar/00/25/80/e8/b7dcce4c.jpg","comment_is_top":false,"comment_ctime":1644633223,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1644633223","product_id":100085301,"comment_content":"参考 解决Rust -- update crates.io过慢的问题<br>https:&#47;&#47;learnku.com&#47;articles&#47;49977","like_count":0},{"had_liked":false,"id":332630,"user_name":"🔥Deo🎏","can_delete":false,"product_type":"c1","uid":2650726,"ip_address":"","ucode":"2B509A3286430C","user_header":"https://static001.geekbang.org/account/avatar/00/28/72/66/30678c27.jpg","comment_is_top":false,"comment_ctime":1643423697,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1643423697","product_id":100085301,"comment_content":"note: xcrun: error: active developer path (&quot;&#47;Applications&#47;Xcode.app&#47;Contents&#47;Developer&quot;) does not exist<br>Mac上还必须安装Xcode吗","like_count":0},{"had_liked":false,"id":332172,"user_name":"Jacky","can_delete":false,"product_type":"c1","uid":1111527,"ip_address":"","ucode":"92CC5F63D7CFD2","user_header":"https://static001.geekbang.org/account/avatar/00/10/f5/e7/2f55fff3.jpg","comment_is_top":false,"comment_ctime":1643078943,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1643078943","product_id":100085301,"comment_content":"rust中使用 &#39;=&#39; 来判断是否相同？","like_count":0},{"had_liked":false,"id":332170,"user_name":"胡泽涵","can_delete":false,"product_type":"c1","uid":1587148,"ip_address":"","ucode":"6AEBCA2189969D","user_header":"https://static001.geekbang.org/account/avatar/00/18/37/cc/56d0ee5e.jpg","comment_is_top":false,"comment_ctime":1643078295,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1643078295","product_id":100085301,"comment_content":"第一题<br>```rust<br>fn next_fib(a: &amp;mut i32, b: &amp;mut i32) -&gt; i32 {<br>    let c = *a + *b;<br>    *a = *b;<br>    *b = c;<br>    c<br>}<br><br>&#47;&#47; 对应的while 修改<br>fn print_fib_while(n: u8) {<br>    let (mut a, mut b, mut i) = (0, 1, 2u8);<br>    println!(&quot;fib initial array {:?}&quot;, [a, b]);<br><br>    while i &lt; n {<br>        let c = next_fib(&amp;mut a, &amp;mut b);<br>        i += 1;<br><br>        println!(&quot;next val is {}&quot;, c);<br>    }<br>}<br>```<br>","like_count":0,"discussions":[{"author":{"id":1587148,"avatar":"https://static001.geekbang.org/account/avatar/00/18/37/cc/56d0ee5e.jpg","nickname":"胡泽涵","note":"","ucode":"6AEBCA2189969D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":548203,"discussion_content":"第二题\n```rust\nuse std::fs;\n\nfn main() -&gt; Result&lt;(), Box&lt;dyn std::error::Error&gt;&gt; {\n  let args: Vec&lt;String&gt; = std::env::args().collect();\n\n  if args.len() &lt; 3 {\n    println!(&#34;参数不完整&#34;);\n    return Result::Ok(())\n  }\n\n  let url: &amp;str = &amp;args[1];\n  let filename = &amp;args[2];\n\n  println!(&#34;fetching url:{}&#34;, url);\n  let body = reqwest::blocking::get(url)?.text()?;\n\n  println!(&#34;Converting html to markdown...&#34;);\n  let md = html2md::parse_html(&amp;body);\n\n  fs::write(filename, md.as_bytes())?;\n  println!(&#34;Converted markdown has been saved in {}.&#34;, filename);\n\n  Result::Ok(())\n}\n```","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1643079457,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":331125,"user_name":"liberg","can_delete":false,"product_type":"c1","uid":2890193,"ip_address":"","ucode":"0DE07FD98FBC1E","user_header":"https://static001.geekbang.org/account/avatar/00/2c/19/d1/f0cd25da.jpg","comment_is_top":false,"comment_ctime":1642433384,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1642433384","product_id":100085301,"comment_content":"【求助】rust-analyzer插件跑不起来：<br>rust-analyzer failed to load workspace: Failed to find sysroot for Cargo.toml file d:\\dev\\rust\\scrape-url\\Cargo.toml. Is rust-src installed?: can&#39;t load standard library from sysroot<br>C:\\Users\\liny\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc<br>(discovered via `rustc --print sysroot`)<br>try installing the Rust source the same way you installed rustc<br>","like_count":0,"discussions":[{"author":{"id":2890193,"avatar":"https://static001.geekbang.org/account/avatar/00/2c/19/d1/f0cd25da.jpg","nickname":"liberg","note":"","ucode":"0DE07FD98FBC1E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":547071,"discussion_content":"可能是我rust工具链版本太低（1.44）的原因，升级到最新的1.58.0就OK了：\n升级命令：rustup update","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1642515931,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":330658,"user_name":"manonloki","can_delete":false,"product_type":"c1","uid":1199431,"ip_address":"","ucode":"BB28C47615C851","user_header":"https://static001.geekbang.org/account/avatar/00/12/4d/47/bd232c70.jpg","comment_is_top":false,"comment_ctime":1642086138,"is_pvip":false,"replies":[{"id":"120682","content":"👍","user_name":"作者回复","user_name_real":"编辑","uid":"1079375","ctime":1642292035,"ip_address":"","comment_id":330658,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1642086138","product_id":100085301,"comment_content":"use std::env;<br>use std::fs;<br>fn main() -&gt; Result&lt;(), Box&lt;dyn std::error::Error&gt;&gt;{<br>    &#47;&#47; 先判判断参数长度是否足够<br>    if env::args().len() &lt; 2 {<br>        println!(&quot;Not Enought Arguments&quot;);<br>    }<br><br>    &#47;&#47; 转为数组进行操作<br>    let args: Vec&lt;String&gt; = env::args().collect();<br><br>    &#47;&#47; 从第二个开始是参数<br>    let url = &amp;args[1];<br>    let output = &amp;args[2];<br><br>    println!(&quot;fetching url:{}&quot;, url);<br>    let body = reqwest::blocking::get(url)?.text()?;<br><br>    println!(&quot;Converting html to markdown...&quot;);<br>    let md = html2md::parse_html(&amp;body);<br><br>    fs::write(output, md.as_bytes())?;<br><br>    println!(&quot;Converted markdown has been saved in {}.&quot;, output);<br><br>    Ok(())<br>}<br>","like_count":0,"discussions":[{"author":{"id":1079375,"avatar":"https://static001.geekbang.org/account/avatar/00/10/78/4f/e74f870c.jpg","nickname":"Tyr","note":"","ucode":"EAAFC8063202E0","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":546291,"discussion_content":"👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1642292035,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":330523,"user_name":"chyuwei","can_delete":false,"product_type":"c1","uid":1361377,"ip_address":"","ucode":"19687765E6DE5D","user_header":"","comment_is_top":false,"comment_ctime":1642010547,"is_pvip":false,"replies":[{"id":"120696","content":"我个人不喜欢 hello.rs 对应 hello 文件夹，我觉得过于啰嗦，从文件层级上破坏了美感。不过这是我个人的喜好。大家可以按自己的喜好来。","user_name":"作者回复","user_name_real":"编辑","uid":"1079375","ctime":1642293343,"ip_address":"","comment_id":330523,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1642010547","product_id":100085301,"comment_content":"文章中设计将mod放在某个文件夹中，于当前的 The Rust Programming Language 不一样。<br>不过我记得老版书的方法和课程中介绍的是一致的。<br>现在的大概是<br>一个 hello.rs 与 文件夹hello<br>使用hello的地方可以直接申明 mod hello<br><br>","like_count":0,"discussions":[{"author":{"id":1079375,"avatar":"https://static001.geekbang.org/account/avatar/00/10/78/4f/e74f870c.jpg","nickname":"Tyr","note":"","ucode":"EAAFC8063202E0","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":546305,"discussion_content":"我个人不喜欢 hello.rs 对应 hello 文件夹，我觉得过于啰嗦，从文件层级上破坏了美感。不过这是我个人的喜好。大家可以按自己的喜好来。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1642293343,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":330460,"user_name":"少年 🎨","can_delete":false,"product_type":"c1","uid":2890330,"ip_address":"","ucode":"6445B6FE7B767F","user_header":"https://static001.geekbang.org/account/avatar/00/2c/1a/5a/c3a553dd.jpg","comment_is_top":false,"comment_ctime":1641984701,"is_pvip":false,"replies":[{"id":"120471","content":"哈哈哈克服这个还有下一个在等你;)","user_name":"编辑回复","user_name_real":"编辑","uid":"2547771","ctime":1642039355,"ip_address":"","comment_id":330460,"utype":2}],"discussion_count":2,"race_medal":0,"score":"1641984701","product_id":100085301,"comment_content":"卡在国内镜像设置这，我是不是太笨了。","like_count":0,"discussions":[{"author":{"id":2547771,"avatar":"https://static001.geekbang.org/account/avatar/00/26/e0/3b/8ec916b2.jpg","nickname":"多少","note":"","ucode":"0A6EF7AA6E4BB7","race_medal":0,"user_type":4,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":545681,"discussion_content":"哈哈哈克服这个还有下一个在等你;)","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1642039355,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":4}","child_discussion_number":1,"child_discussions":[{"author":{"id":2890330,"avatar":"https://static001.geekbang.org/account/avatar/00/2c/1a/5a/c3a553dd.jpg","nickname":"少年 🎨","note":"","ucode":"6445B6FE7B767F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2547771,"avatar":"https://static001.geekbang.org/account/avatar/00/26/e0/3b/8ec916b2.jpg","nickname":"多少","note":"","ucode":"0A6EF7AA6E4BB7","race_medal":0,"user_type":4,"is_pvip":false},"discussion":{"id":545696,"discussion_content":"感谢，解决了，解决如下↓\n不用vscode，先用git bash 输入以下命令\nset http_proxy=\ngit config --global http.proxy\ngit config --global --unset http.proxy\ngit config --global --unset https.proxy\n到这里可以直接执行 cargo run \n到这里就成功了。\n执行完再看一下\ngit config --global http.proxy","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1642041389,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":545681,"ip_address":""},"score":545696,"extra":""}]}]},{"had_liked":false,"id":329233,"user_name":"zoomdong","can_delete":false,"product_type":"c1","uid":1460980,"ip_address":"","ucode":"AA0B8F945D9935","user_header":"https://static001.geekbang.org/account/avatar/00/16/4a/f4/513d26e8.jpg","comment_is_top":false,"comment_ctime":1641228015,"is_pvip":false,"replies":[{"id":"120742","content":"👍","user_name":"作者回复","user_name_real":"编辑","uid":"1079375","ctime":1642307692,"ip_address":"","comment_id":329233,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1641228015","product_id":100085301,"comment_content":"第二题我是这样处理的，但是没有加上错误处理的机制，这块后续学习了再补一下:<br>```rs<br>use std::fs;<br>use std::env;<br><br>fn main() {<br><br>    &#47;&#47; .collect() 能创建一个包含迭代器所有值的 vector<br>    let args: Vec&lt;String&gt; = env::args().collect();<br>    &#47;&#47; 这里要取引用<br>    let (url, output) = (&amp;args[1], &amp;args[2]);<br>    println!(&quot;The all args are is {:?}&quot;, args);<br><br>    println!(&quot;Fetching url: {}&quot;, url);<br><br>    let body = reqwest::blocking::get(url).unwrap().text().unwrap();<br><br>    println!(&quot;Converting html to markdown...&quot;);<br>    let md = html2md::parse_html(&amp;body);<br>    fs::write(output, md.as_bytes()).unwrap();<br>    println!(&quot;Converted markdown has been saved in {}.&quot;, output);<br><br>}<br>```","like_count":0,"discussions":[{"author":{"id":1079375,"avatar":"https://static001.geekbang.org/account/avatar/00/10/78/4f/e74f870c.jpg","nickname":"Tyr","note":"","ucode":"EAAFC8063202E0","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":546380,"discussion_content":"👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1642307692,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":329025,"user_name":"ykang","can_delete":false,"product_type":"c1","uid":1013866,"ip_address":"","ucode":"A276E3B284794C","user_header":"","comment_is_top":false,"comment_ctime":1641034065,"is_pvip":false,"replies":[{"id":"119911","content":"课程首页，就有入微信群的入口～","user_name":"编辑回复","user_name_real":"编辑","uid":"2547771","ctime":1641263873,"ip_address":"","comment_id":329025,"utype":2}],"discussion_count":1,"race_medal":0,"score":"1641034065","product_id":100085301,"comment_content":"请问，有无共同学习的微信群或QQ群？","like_count":0,"discussions":[{"author":{"id":2547771,"avatar":"https://static001.geekbang.org/account/avatar/00/26/e0/3b/8ec916b2.jpg","nickname":"多少","note":"","ucode":"0A6EF7AA6E4BB7","race_medal":0,"user_type":4,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":543663,"discussion_content":"课程首页，就有入微信群的入口～","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1641263873,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":4}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":328792,"user_name":"zoomdong","can_delete":false,"product_type":"c1","uid":1460980,"ip_address":"","ucode":"AA0B8F945D9935","user_header":"https://static001.geekbang.org/account/avatar/00/16/4a/f4/513d26e8.jpg","comment_is_top":false,"comment_ctime":1640884443,"is_pvip":false,"replies":[{"id":"120757","content":":)","user_name":"作者回复","user_name_real":"编辑","uid":"1079375","ctime":1642308121,"ip_address":"","comment_id":328792,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1640884443","product_id":100085301,"comment_content":"这节涵盖了 the rust book 书好几章的内容了....","like_count":0,"discussions":[{"author":{"id":1079375,"avatar":"https://static001.geekbang.org/account/avatar/00/10/78/4f/e74f870c.jpg","nickname":"Tyr","note":"","ucode":"EAAFC8063202E0","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":546396,"discussion_content":":)","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1642308121,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":328696,"user_name":"muniz","can_delete":false,"product_type":"c1","uid":1325169,"ip_address":"","ucode":"3EAC3DB8BB1981","user_header":"https://static001.geekbang.org/account/avatar/00/14/38/71/71105b1e.jpg","comment_is_top":false,"comment_ctime":1640845498,"is_pvip":false,"replies":[{"id":"120758","content":"👍","user_name":"作者回复","user_name_real":"编辑","uid":"1079375","ctime":1642308128,"ip_address":"","comment_id":328696,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1640845498","product_id":100085301,"comment_content":"第二题<br><br>use std::fs;<br>use std::env;<br><br>fn main() {<br><br>    let options:Vec&lt;String&gt; = env::args().collect();<br><br>    let url = &amp;options[1];<br>    let output = &amp;options[2];<br><br>    println!(&quot;Fetching url: {}&quot;, url);<br><br>    let body = reqwest::blocking::get(url).unwrap().text().unwrap();<br><br>    println!(&quot;Converting html to markdown...&quot;);<br><br>    let md = html2md::parse_html(&amp;body);<br>    fs::write(output, md.as_bytes()).unwrap();<br><br>    println!(&quot;Converted markdown has been saved in {}.&quot;, output);<br>}","like_count":0,"discussions":[{"author":{"id":1079375,"avatar":"https://static001.geekbang.org/account/avatar/00/10/78/4f/e74f870c.jpg","nickname":"Tyr","note":"","ucode":"EAAFC8063202E0","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":546397,"discussion_content":"👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1642308128,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":328692,"user_name":"muniz","can_delete":false,"product_type":"c1","uid":1325169,"ip_address":"","ucode":"3EAC3DB8BB1981","user_header":"https://static001.geekbang.org/account/avatar/00/14/38/71/71105b1e.jpg","comment_is_top":false,"comment_ctime":1640844349,"is_pvip":false,"replies":[{"id":"120760","content":"👍","user_name":"作者回复","user_name_real":"编辑","uid":"1079375","ctime":1642308142,"ip_address":"","comment_id":328692,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1640844349","product_id":100085301,"comment_content":"第一题：不知道可不可以，嘿嘿<br><br>fn fbnq(n: u32) -&gt; u32{<br>    match n {<br>        1|2=&gt;1,<br>        _=&gt; fbnq(n - 2) + fbnq(n-1)<br>    }<br>}<br><br>fn main() {<br>    const VALUE: u32 = 10;<br>    let n = fbnq(VALUE);<br>    println!(&quot;{}以内的斐波那契: {}&quot;, VALUE, n)<br>}<br>","like_count":0,"discussions":[{"author":{"id":1079375,"avatar":"https://static001.geekbang.org/account/avatar/00/10/78/4f/e74f870c.jpg","nickname":"Tyr","note":"","ucode":"EAAFC8063202E0","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":546399,"discussion_content":"👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1642308142,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2150011,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJwhuiaWy0E1xoq2o6Qdfast5ibtmib0zvvUOpbibrjBNeegwoR2O9HxSvwTIRYTR49Q1eEqNlkQWLqaA/132","nickname":"随便取一个","note":"","ucode":"CBCE93E49F2A5B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":546485,"discussion_content":"大数据时代，尽量不要用递归，当然求解规模小可以。经验之谈，建议用lazy下的可缓存的迭代。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1642316162,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":327757,"user_name":"MaL","can_delete":false,"product_type":"c1","uid":1187366,"ip_address":"","ucode":"92CF04BC279BCE","user_header":"https://static001.geekbang.org/account/avatar/00/12/1e/26/5b5e6fcf.jpg","comment_is_top":false,"comment_ctime":1640270100,"is_pvip":false,"replies":[{"id":"120787","content":"👍 如果系统的 openssl 不好把控，也可以使用 rustls。","user_name":"作者回复","user_name_real":"编辑","uid":"1079375","ctime":1642309979,"ip_address":"","comment_id":327757,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1640270100","product_id":100085301,"comment_content":"WSL2 debian 环境<br>编译报错 &quot;error: failed to run custom build command for `openssl-sys v0.9.72`&quot;，然后安装 openssl 提示已经安装，再次编译报同样错误，百思不得其解。<br>仔细看了一下错误提示发现是 &quot;openssl-sys&quot;，然后`sudo apt install openssl-sys`，提示 &quot;E: Unable to locate package openssl-sys&quot;。<br>只好试一下搜索 `apt search openssl-sys`（之前安装 &quot;cc&quot; 和 &quot;git&quot; 速度太慢了，把源替换成了阿里云的源），搜索结果为：<br>```<br>Sorting... Done<br>Full Text Search... Done<br>librust-git2+openssl-sys-dev&#47;oldstable 0.7.5-1 amd64<br>  Bindings to libgit2 for interoperating with git repositories - feature &quot;openssl-sys&quot;<br><br>librust-libgit2-sys+openssl-sys-dev&#47;oldstable 0.7.10-1 amd64<br>  Native bindings to the libgit2 library - feature &quot;openssl-sys&quot;<br><br>librust-openssl-sys-dev&#47;oldstable 0.9.40-1 amd64<br>  FFI bindings to OpenSSL - Rust source code<br>```<br>看不太懂有什么区别，挑了一个版本号看起来最高的安装 `sudo apt install librust-openssl-sys-dev`。<br><br>安装完成后编译通过。","like_count":0,"discussions":[{"author":{"id":1079375,"avatar":"https://static001.geekbang.org/account/avatar/00/10/78/4f/e74f870c.jpg","nickname":"Tyr","note":"","ucode":"EAAFC8063202E0","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":546427,"discussion_content":"👍 如果系统的 openssl 不好把控，也可以使用 rustls。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1642309979,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":327005,"user_name":"chuang","can_delete":false,"product_type":"c1","uid":1001679,"ip_address":"","ucode":"80CB354D0BDF4D","user_header":"https://static001.geekbang.org/account/avatar/00/0f/48/cf/b07eca9a.jpg","comment_is_top":false,"comment_ctime":1639831754,"is_pvip":true,"replies":[{"id":"120823","content":"👍","user_name":"作者回复","user_name_real":"编辑","uid":"1079375","ctime":1642311525,"ip_address":"","comment_id":327005,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1639831754","product_id":100085301,"comment_content":"fn next(a: &amp;mut u128, b: &amp;mut u128) {<br>    *b = *a + *b;<br>    *a = *b - *a;<br>}<br><br>fn fib_loop(n: u8) {<br>    let mut a = 1;<br>    let mut b = 1;<br>    let mut i = 2u8;<br>    <br>    loop {<br>        next(&amp;mut a, &amp;mut b);<br>        i += 1;<br>        <br>        println!(&quot;next val is {}&quot;, b);<br>        <br>        if i &gt;= n {<br>            break;<br>        }<br>    }<br>}<br><br>fn fib_while(n: u8) {<br>    let (mut a, mut b, mut i) = (1, 1, 2);<br>    <br>    while i &lt; n {<br>        next(&amp;mut a, &amp;mut b);<br>        i += 1;<br>        <br>        println!(&quot;next val is {}&quot;, b);<br>    }<br>}<br><br>fn fib_for(n: u8) {<br>    let (mut a, mut b) = (1, 1);<br>    <br>    for _i in 2..n {<br>        next(&amp;mut a, &amp;mut b);<br>        println!(&quot;next val is {}&quot;, b);<br>    }<br>}<br><br>fn main() {<br>    let n = 10;<br>    fib_loop(n);<br>    fib_while(n);<br>    fib_for(n);<br>}","like_count":0,"discussions":[{"author":{"id":1079375,"avatar":"https://static001.geekbang.org/account/avatar/00/10/78/4f/e74f870c.jpg","nickname":"Tyr","note":"","ucode":"EAAFC8063202E0","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":546468,"discussion_content":"👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1642311525,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":325918,"user_name":"alexd","can_delete":false,"product_type":"c1","uid":2708009,"ip_address":"","ucode":"7815D35C4CFA0A","user_header":"https://static001.geekbang.org/account/avatar/00/29/52/29/51b5ca75.jpg","comment_is_top":false,"comment_ctime":1639231515,"is_pvip":false,"replies":[{"id":"118812","content":"👍","user_name":"作者回复","user_name_real":"编辑","uid":"1079375","ctime":1639804602,"ip_address":"","comment_id":325918,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1639231515","product_id":100085301,"comment_content":"<br><br><br>最后的答案<br><br>use std::fs;<br><br>fn main() -&gt; Result&lt;(), Box&lt;dyn std::error::Error&gt;&gt; {<br><br><br>    let args:Vec&lt;String&gt; =std::env::args().collect();<br><br><br>    if args.len() != 2 {<br>        panic!(&quot;please input like this,cargo run -- https:&#47;&#47;x.y.com&#47;&quot;)<br>    }<br><br>    let url = &amp;args[1];<br>    let output = &quot;rust.md&quot;;<br><br>    println!(&quot;Fetching url: {}&quot;, url);<br>    let body = reqwest::blocking::get(url)?.text()?;<br><br>    println!(&quot;Converting html to markdown...&quot;);<br>    let md = html2md::parse_html(&amp;body);<br><br>    fs::write(output, md.as_bytes())?;<br>    println!(&quot;Converted markdown has been saved in {}.&quot;, output);<br><br><br>    Ok(())<br>}<br>","like_count":0,"discussions":[{"author":{"id":1079375,"avatar":"https://static001.geekbang.org/account/avatar/00/10/78/4f/e74f870c.jpg","nickname":"Tyr","note":"","ucode":"EAAFC8063202E0","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":539685,"discussion_content":"👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1639804602,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":325269,"user_name":"fainle","can_delete":false,"product_type":"c1","uid":1105213,"ip_address":"","ucode":"799C0984577959","user_header":"https://static001.geekbang.org/account/avatar/00/10/dd/3d/f40f2898.jpg","comment_is_top":false,"comment_ctime":1638886031,"is_pvip":false,"replies":[{"id":"118833","content":"你的 vscode 的 rls 插件可能正在做编译。等一下就好。","user_name":"作者回复","user_name_real":"编辑","uid":"1079375","ctime":1639808086,"ip_address":"","comment_id":325269,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1638886031","product_id":100085301,"comment_content":"第一个例子：执行 cargo run 后没有反应<br>提示  Blocking waiting for file lock on package cache","like_count":0,"discussions":[{"author":{"id":1079375,"avatar":"https://static001.geekbang.org/account/avatar/00/10/78/4f/e74f870c.jpg","nickname":"Tyr","note":"","ucode":"EAAFC8063202E0","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":539709,"discussion_content":"你的 vscode 的 rls 插件可能正在做编译。等一下就好。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1639808086,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":325124,"user_name":"delicate","can_delete":false,"product_type":"c1","uid":1187083,"ip_address":"","ucode":"AE262751C50CDD","user_header":"https://static001.geekbang.org/account/avatar/00/12/1d/0b/5f353b88.jpg","comment_is_top":false,"comment_ctime":1638837912,"is_pvip":false,"replies":[{"id":"118853","content":"这是最简单的部分","user_name":"作者回复","user_name_real":"编辑","uid":"1079375","ctime":1639847682,"ip_address":"","comment_id":325124,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1638837912","product_id":100085301,"comment_content":"一次讲太多了，可以分成多讲应该好点😂","like_count":0,"discussions":[{"author":{"id":1079375,"avatar":"https://static001.geekbang.org/account/avatar/00/10/78/4f/e74f870c.jpg","nickname":"Tyr","note":"","ucode":"EAAFC8063202E0","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":539813,"discussion_content":"这是最简单的部分","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1639847682,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":324611,"user_name":"个度时个度","can_delete":false,"product_type":"c1","uid":1017546,"ip_address":"","ucode":"9AFBDD14211ABE","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKCNH9kd9GibX0icHbdkUJAJ0ICicZNcsAcVZkUhTibMFbKtVtnjUpMtgd9ZibkWFZibgftHezDIyMRjafA/132","comment_is_top":false,"comment_ctime":1638518377,"is_pvip":false,"replies":[{"id":"118864","content":"赞！加油！","user_name":"作者回复","user_name_real":"编辑","uid":"1079375","ctime":1639848666,"ip_address":"","comment_id":324611,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1638518377","product_id":100085301,"comment_content":"没有基础底子。查资料，看提示，连猜带试得，总算是实现出来了。交作业了。继续加油：<br><br>fn main() {<br>    let args: Vec&lt;String&gt; = env::args().collect();<br>    let url = &amp;args[1];<br>    let output = &amp;args[2];<br>    let _result = rust2md_job(url, output);<br>    &#47;&#47; result健壮<br><br>    let n = 10;<br>    println!(&quot;fib_loop:&quot;);<br>    fib_loop(n);<br>    println!(&quot;fib_while:&quot;);<br>    fib_while(n);<br>    println!(&quot;fib_for:&quot;);<br>    fib_for(n);<br>}<br><br>&#47;&#47; 把url和output参数化.<br>fn rust2md_job(url: &amp;String, output: &amp;String) -&gt; Result&lt;(), Box&lt;dyn Error&gt;&gt; {<br>    println!(&quot;Fetching url: {}&quot;, url);<br>    let body = reqwest::blocking::get(url)?.text()?;<br>    println!(&quot;Converting html to markdown...&quot;);<br>    let md = html2md::parse_html(&amp;body);<br>    fs::write(output, md.as_bytes())?;<br>    println!(&quot;Converted markdown has been saved in {}.&quot;, output);<br>    Ok(())<br>}<br><br>&#47;&#47; 抽取方法<br>fn calc(a: &amp;mut i32, b: &amp;mut i32) {<br>    let c = *a + *b;<br>    *a = *b;<br>    *b = c;<br>}","like_count":0,"discussions":[{"author":{"id":1079375,"avatar":"https://static001.geekbang.org/account/avatar/00/10/78/4f/e74f870c.jpg","nickname":"Tyr","note":"","ucode":"EAAFC8063202E0","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":539824,"discussion_content":"赞！加油！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1639848667,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":320513,"user_name":"风吟","can_delete":false,"product_type":"c1","uid":2819843,"ip_address":"","ucode":"EA6BC67B6F665B","user_header":"https://static001.geekbang.org/account/avatar/00/2b/07/03/5649301e.jpg","comment_is_top":false,"comment_ctime":1636360031,"is_pvip":false,"replies":[{"id":"116356","content":"👍","user_name":"作者回复","user_name_real":"Tyr","uid":"1079375","ctime":1636527098,"ip_address":"","comment_id":320513,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1636360031","product_id":100085301,"comment_content":"2. 在 scrape_url 的例子里，我们在代码中写死了要获取的 URL 和要输出的文件名，这太不灵活了。你能改进这个代码，从命令行参数中获取用户提供的信息来绑定 URL 和文件名么？就这个问题记录以下自己的答案。<br><br><br>use std::error::Error;<br>use std::fs;<br>use std::process;<br><br>struct Config {<br>    url: String,<br>    output_path: String,<br>}<br><br>impl Config {<br>    fn new(mut args: std::env::Args) -&gt; Result&lt;Config, &amp;&#39;static str&gt; {<br>        if args.len() &lt; 3 {<br>            return Err(&quot;Not enough argumens!&quot;);<br>        }<br>        args.next();<br>        let url = match args.next() {<br>            Some(url) =&gt; url,<br>            None =&gt; return Err(&quot;Did&#39;t get a url String!&quot;),<br>        };<br>        let output_path = match args.next() {<br>            Some(path) =&gt; path,<br>            None =&gt; return Err(&quot;Did&#39;t get a file path String!&quot;),<br>        };<br><br>        Ok(Config { url, output_path })<br>    }<br><br>    fn run(config: Config) -&gt; Result&lt;(), Box&lt;dyn Error&gt;&gt; {<br>        println!(&quot;Featching url: {}.&quot;, config.url);<br>        let body = reqwest::blocking::get(config.url)?.text()?;<br><br>        println!(&quot;Converting html to markdown.&quot;);<br>        let md = html2md::parse_html(&amp;body);<br><br>        fs::write(&amp;config.output_path, md.as_bytes())?;<br>        println!(<br>            &quot;Coverted markdown has been saved in {}.&quot;,<br>            config.output_path<br>        );<br><br>        Ok(())<br>    }<br>}<br><br>fn main() {<br>    let args = std::env::args();<br><br>    let config = Config::new(args).unwrap_or_else(|err| {<br>        eprintln!(&quot;Parsing arguments problems : {}&quot;, err);<br>        Config {<br>            url: &quot;http:&#47;&#47;www.rust-lang.org&#47;rust&quot;.into(),<br>            output_path: &quot;rust.md&quot;.into(),<br>        }<br>    });<br><br>    if let Err(e) = Config::run(config) {<br>        eprintln!(&quot;Applicarion Error : {}&quot;, e);<br>        process::exit(1)<br>    }<br>}<br>","like_count":0,"discussions":[{"author":{"id":1079375,"avatar":"https://static001.geekbang.org/account/avatar/00/10/78/4f/e74f870c.jpg","nickname":"Tyr","note":"","ucode":"EAAFC8063202E0","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":530022,"discussion_content":"👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1636527098,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":320141,"user_name":"Ignis","can_delete":false,"product_type":"c1","uid":2837051,"ip_address":"","ucode":"94A55C81E2F86C","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/PiajxSqBRaEL7ibAFViaJqhTRquzLKhS0SebmHON4RKeaL9I9R9wKHWt6ehcu0QtN8icvmPicU8wvDYIZiaaxqGWSxlw/132","comment_is_top":false,"comment_ctime":1636097510,"is_pvip":false,"replies":[{"id":"116349","content":"👍","user_name":"作者回复","user_name_real":"Tyr","uid":"1079375","ctime":1636526507,"ip_address":"","comment_id":320141,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1636097510","product_id":100085301,"comment_content":"1. 计算数列中下一个数的代码：<br>```rust<br>fn fib_next(a: &amp;mut u8, b: &amp;mut u8) {<br>    let c = *a + *b;<br>    *a = *b;<br>    *b = c;<br>}<br>```<br>原来调用的地方改为：`fib_next(&amp;mut a, &amp;mut b);`","like_count":0,"discussions":[{"author":{"id":1079375,"avatar":"https://static001.geekbang.org/account/avatar/00/10/78/4f/e74f870c.jpg","nickname":"Tyr","note":"","ucode":"EAAFC8063202E0","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":529891,"discussion_content":"👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1636526507,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":319821,"user_name":"Steve","can_delete":false,"product_type":"c1","uid":1002255,"ip_address":"","ucode":"243D10F2DC065A","user_header":"https://static001.geekbang.org/account/avatar/00/0f/4b/0f/d747ed96.jpg","comment_is_top":false,"comment_ctime":1635953051,"is_pvip":false,"replies":[{"id":"116372","content":"可能主要语法，以及 Rust 处理可变性和引用的方式和 java 有很大不同，所以你还不适应，多读多写就回越来越顺手的。","user_name":"作者回复","user_name_real":"Tyr","uid":"1079375","ctime":1636555286,"ip_address":"","comment_id":319821,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1635953051","product_id":100085301,"comment_content":"1. 在上面的斐波那契数列的代码中，你也许注意到计算数列中下一个数的代码在三个函数中不断重复。这不符合 DRY（Don’t Repeat Yourself）原则。你可以写一个函数把它抽取出来么？<br><br>答：<br>fn main() {<br>    let n = 10;<br>    fib_loop(n);<br>    fib_while(n);<br>    fib_for(n);<br>}<br><br>fn count(a: &amp;mut i32, b: &amp;mut i32) {<br>    let c = *a + *b;<br>    *a = *b;<br>    *b = c;<br>}<br><br>fn fib_loop(n: u8) {<br>    let mut a = 1;<br>    let mut b = 1;<br>    let mut i = 2u8;<br><br>    loop {<br>        count(&amp;mut a, &amp;mut b);<br>        i += 1;<br><br>        println!(&quot;next val is {}&quot;, b);<br><br>        if i &gt;= n {<br>            break;<br>        }<br>    }<br>}<br><br>fn fib_while(n: u8) {<br>    let (mut a, mut b, mut i) = (1, 1, 2);<br><br>    while i &lt; n {<br>        count(&amp;mut a, &amp;mut b);<br>        i += 1;<br><br>        println!(&quot;next val is {}&quot;, b);<br>    }<br>}<br><br>fn fib_for(n: u8) {<br>    let (mut a, mut b) = (1, 1);<br><br>    for _i in 2..n {<br>        count(&amp;mut a, &amp;mut b);<br><br>        println!(&quot;next val is {}&quot;, b);<br>    }<br>}<br><br>2. 在 scrape_url 的例子里，我们在代码中写死了要获取的 URL 和要输出的文件名，这太不灵活了。你能改进这个代码，从命令行参数中获取用户提供的信息来绑定 URL 和文件名么？<br><br>答：<br>use std::fs;<br><br>fn main() {<br>    let args: Vec&lt;String&gt; = std::env::args().collect();<br><br>    let url = &amp;args[1];<br>    let output = &amp;args[2];<br><br>    println!(&quot;Fetching url: {}&quot;, url);<br>    let body = reqwest::blocking::get(url).unwrap().text().unwrap();<br><br>    println!(&quot;Converting html to markdown...&quot;);<br>    let md = html2md::parse_html(&amp;body);<br><br>    fs::write(output, md.as_bytes()).unwrap();<br>    println!(&quot;Converted markdown has been saved in {}.&quot;, output);<br><br>}<br><br><br>作为三四年的Java工程师，做这 Rust 两道题，居然也废了半天劲。感觉很别扭，很不顺手。但语法是蛮简洁的","like_count":0,"discussions":[{"author":{"id":1079375,"avatar":"https://static001.geekbang.org/account/avatar/00/10/78/4f/e74f870c.jpg","nickname":"Tyr","note":"","ucode":"EAAFC8063202E0","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":529782,"discussion_content":"可能主要语法，以及 Rust 处理可变性和引用的方式和 java 有很大不同，所以你还不适应，多读多写就回越来越顺手的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1636555286,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":318102,"user_name":"揽余月","can_delete":false,"product_type":"c1","uid":2709342,"ip_address":"","ucode":"D75ABAA841C23A","user_header":"https://static001.geekbang.org/account/avatar/00/29/57/5e/2565df70.jpg","comment_is_top":false,"comment_ctime":1635151746,"is_pvip":false,"replies":[{"id":"116588","content":"👍","user_name":"作者回复","user_name_real":"Tyr","uid":"1079375","ctime":1636644076,"ip_address":"","comment_id":318102,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1635151746","product_id":100085301,"comment_content":"不知道对不对，在函数里面改外面的值感觉不符合习惯，尝试过返回一个元组但是不能直接解构赋值<br>第一题：<br>```rust<br>fn calc(a: &amp;mut i32, b: &amp;mut i32, i: Option&lt;&amp;mut u8&gt;) {<br>    let c = *a + *b;<br>    *a = *b;<br>    *b = c;<br>    match i {<br>        Some(i) =&gt; *i = *i + 1,<br>        None =&gt; (),<br>    };<br>}<br><br>#[allow(dead_code)]<br>pub fn fib_loop(n: u8) {<br>    let (mut a, mut b, mut i) = (1, 1, 2);<br>    loop {<br>        calc(&amp;mut a, &amp;mut b, Some(&amp;mut i));<br>        println!(&quot;next: {:?}&quot;, b);<br>        if i &gt;= n {<br>            break;<br>        }<br>    }<br>}<br>```<br>第二题：<br>```rust<br>    let mut url: String = String::new();<br>    let mut output: String = String::new();<br>    let args: Vec&lt;String&gt; = env::args().collect();<br>    for i in 0..args.len() {<br>        let arg = args[i].as_str();<br>        match arg {<br>            &quot;--url&quot; =&gt; url = args[i + 1].to_string(),<br>            &quot;--output&quot; =&gt; output = args[i + 1].to_string(),<br>            _ =&gt; {}<br>        }<br>    }<br>    check_url(&amp;url);<br>    check_output(&amp;output);<br>```","like_count":0,"discussions":[{"author":{"id":1079375,"avatar":"https://static001.geekbang.org/account/avatar/00/10/78/4f/e74f870c.jpg","nickname":"Tyr","note":"","ucode":"EAAFC8063202E0","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":529105,"discussion_content":"👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1636644076,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":317237,"user_name":"彭亚伦","can_delete":false,"product_type":"c1","uid":2425378,"ip_address":"","ucode":"77A32C73A23F72","user_header":"https://static001.geekbang.org/account/avatar/00/25/02/22/19585900.jpg","comment_is_top":false,"comment_ctime":1634718473,"is_pvip":true,"replies":[{"id":"115244","content":"&gt; A foo.rs and foo&#47; subdirectory may coexist; mod.rs is no longer needed when placing submodules in a subdirectory.<br><br>不是不建议，是 no longer needed。我个人喜欢把一个模块的逻辑都放在同一个目录下，但如果你喜欢 foo.rs 和 foo&#47;*.rs 的结构，也没问题。","user_name":"作者回复","user_name_real":"Tyr","uid":"1079375","ctime":1635122707,"ip_address":"","comment_id":317237,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1634718473","product_id":100085301,"comment_content":"Edition Guide 里面, 似乎2018开始就不建议用mod.rs这种方式来组织crate结构了","like_count":0,"discussions":[{"author":{"id":1079375,"avatar":"https://static001.geekbang.org/account/avatar/00/10/78/4f/e74f870c.jpg","nickname":"Tyr","note":"","ucode":"EAAFC8063202E0","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":528729,"discussion_content":"&amp;gt; A foo.rs and foo/ subdirectory may coexist; mod.rs is no longer needed when placing submodules in a subdirectory.\n\n不是不建议，是 no longer needed。我个人喜欢把一个模块的逻辑都放在同一个目录下，但如果你喜欢 foo.rs 和 foo/*.rs 的结构，也没问题。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1635122707,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":316177,"user_name":"阿成","can_delete":false,"product_type":"c1","uid":1390032,"ip_address":"","ucode":"CEC3CD65FB9333","user_header":"https://static001.geekbang.org/account/avatar/00/15/35/d0/f2ac6d91.jpg","comment_is_top":false,"comment_ctime":1634192804,"is_pvip":false,"replies":[{"id":"115269","content":"👍 很不错","user_name":"作者回复","user_name_real":"Tyr","uid":"1079375","ctime":1635130971,"ip_address":"","comment_id":316177,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1634192804","product_id":100085301,"comment_content":"1. 只贴关键代码：<br>#![feature(destructuring_assignment)]<br>fn calc_next(a: i32, b: i32) -&gt; (i32, i32) {<br>    (b, a + b)<br>}<br>fn fib_for(n: u8) {<br>    let (mut a, mut b) = (1, 1);<br><br>    for _i in 2..n {<br>        (a, b) = calc_next(a, b);<br>        println!(&quot;next val is {}&quot;, b);<br>    }<br>}<br><br>2. 应该有更简洁的写法吧……<br>use std::fs;<br><br>fn main() {<br>    &#47;&#47; let url = &quot;https:&#47;&#47;www.rust-lang.org&#47;&quot;;<br>    &#47;&#47; let output = &quot;rust.md&quot;;<br><br>    &#47;&#47; use this instead<br>    let mut args = std::env::args().skip(1);<br>    let url = args.next().unwrap();<br>    let output = args.next().unwrap();<br><br>    println!(&quot;Fetching url: {}&quot;, url);<br>    let body = reqwest::blocking::get(url).unwrap().text().unwrap();<br><br>    println!(&quot;Converting html to markdown...&quot;);<br>    let md = html2md::parse_html(&amp;body);<br><br>    &#47;&#47; use `&amp;output` instead of `output`<br>    &#47;&#47; because output now is a `String`<br>    &#47;&#47; we can&#39;t move `output` into `fs::write` since we need to print it below<br>    &#47;&#47; certainly, I discovered this by compiler...<br>    fs::write(&amp;output, md.as_bytes()).unwrap();<br>    println!(&quot;Converted markdown has been saved in {}.&quot;, output);<br>}<br>","like_count":0,"discussions":[{"author":{"id":1079375,"avatar":"https://static001.geekbang.org/account/avatar/00/10/78/4f/e74f870c.jpg","nickname":"Tyr","note":"","ucode":"EAAFC8063202E0","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":528295,"discussion_content":"👍 很不错","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1635130971,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":314870,"user_name":"Geek_373555","can_delete":false,"product_type":"c1","uid":1730394,"ip_address":"","ucode":"16C94323B4FE58","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/BIRpwViaN51wsDAv1nWI5kvB8KQibKy3hPlV0GSrVFuGP5pyj5JSflRqpg2fVsMF07OouIRKfcfBaUuibxuBdricRg/132","comment_is_top":false,"comment_ctime":1633514787,"is_pvip":false,"replies":[{"id":"114167","content":"感觉是你访问 github 时出错，请搭好梯子","user_name":"作者回复","user_name_real":"Tyr","uid":"1079375","ctime":1633813313,"ip_address":"","comment_id":314870,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1633514787","product_id":100085301,"comment_content":"加了依赖包到cargo.toml文件后，出现下列错误：<br>请麻烦帮忙看看，谢谢<br>Errors<br>reqwest: Error: Command failed: git --no-pager --git-dir=&quot;C:\\Users\\jason \\.cargo\\registry\\index\\github.com-1ecc6299db9ec823\\.git&quot; show origin&#47;master:re&#47;qw&#47;reqwest<br>fatal: Invalid object name &#39;origin&#47;master&#39;.","like_count":0,"discussions":[{"author":{"id":1079375,"avatar":"https://static001.geekbang.org/account/avatar/00/10/78/4f/e74f870c.jpg","nickname":"Tyr","note":"","ucode":"EAAFC8063202E0","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":527821,"discussion_content":"感觉是你访问 github 时出错，请搭好梯子","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1633813313,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":313684,"user_name":"枸杞红茶","can_delete":false,"product_type":"c1","uid":2738941,"ip_address":"","ucode":"03D80953AF984E","user_header":"https://static001.geekbang.org/account/avatar/00/29/ca/fd/4e6dd31c.jpg","comment_is_top":false,"comment_ctime":1632621172,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1632621172","product_id":100085301,"comment_content":"```<br>fn calc(a: &amp;mut u64, b: &amp;mut u64) {<br>    let c = *a + *b;<br>    *a = *b;<br>    *b = c;<br>}<br>```<br>在作者代码中， &amp;mut 是引用了可变变量 a b，迭代计算时，直接在栈上修改原值，所以函数不需要返回，返回unit. <br>具体运算时，*是对引用取值，得到具体数值进行计算。","like_count":0},{"had_liked":false,"id":312885,"user_name":"加菲加油🐳","can_delete":false,"product_type":"c1","uid":2741043,"ip_address":"","ucode":"66ACA58407A580","user_header":"https://static001.geekbang.org/account/avatar/00/29/d3/33/f0b2e95c.jpg","comment_is_top":false,"comment_ctime":1632103662,"is_pvip":false,"replies":[{"id":"113410","content":"看看你的 cargo.toml 里的依赖。reqwest 需要使用 blocking feature<br><br>reqwest = { version = &quot;0.11&quot;, default-features = false, features = [&quot;rustls-tls&quot;, &quot;blocking&quot;] }","user_name":"作者回复","user_name_real":"Tyr","uid":"1079375","ctime":1632241126,"ip_address":"","comment_id":312885,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1632103662","product_id":100085301,"comment_content":" Compiling scrape_url v0.1.0 (&#47;root&#47;projects&#47;rust&#47;hello_world&#47;scrape_url)<br>error[E0433]: failed to resolve: could not find `blocking` in `reqwest`<br> --&gt; src&#47;main.rs:9:23<br>  |<br>9 |   let body = reqwest::blocking::get(url).unwrap().text().unwrap();<br>  |                       ^^^^^^^^ could not find `blocking` in `reqwest`<br><br>error: aborting due to previous error<br><br>For more information about this error, try `rustc --explain E0433`.<br>error: could not compile `scrape_url`<br><br>有点懵。","like_count":0,"discussions":[{"author":{"id":1079375,"avatar":"https://static001.geekbang.org/account/avatar/00/10/78/4f/e74f870c.jpg","nickname":"Tyr","note":"","ucode":"EAAFC8063202E0","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":527146,"discussion_content":"看看你的 cargo.toml 里的依赖。reqwest 需要使用 blocking feature\n\nreqwest = { version = &amp;quot;0.11&amp;quot;, default-features = false, features = [&amp;quot;rustls-tls&amp;quot;, &amp;quot;blocking&amp;quot;] }","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1632241126,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":312035,"user_name":"马超","can_delete":false,"product_type":"c1","uid":1198816,"ip_address":"","ucode":"FAFF55DC5DD15C","user_header":"https://static001.geekbang.org/account/avatar/00/12/4a/e0/eff34583.jpg","comment_is_top":false,"comment_ctime":1631599819,"is_pvip":false,"replies":[{"id":"113077","content":"按你的写法，如果非要返回 tuple，那就不用 destructure，而是单独赋值，比如：<br><br>```rust<br>fn get_next_value(a: i32, b: i32) -&gt; (i32, i32) {<br>    return (b, a + b);<br>}<br><br>fn fib_loop(n: u8) -&gt; (i32, i32) {<br>    let mut a = 1;<br>    let mut b = 1;<br>    let mut i = 2u8;<br><br>    loop {<br>        let v = get_next_value(a, b);<br>        a = v.0;<br>        b = v.1;<br>        i += 1;<br><br>        if i &gt;= n {<br>            return (a, b);<br>        }<br>    }<br>}<br><br>fn main() {<br>    println!(&quot;{:?}&quot;, fib_loop(10));<br>}<br>```<br><br>未来 destructuring assignment 可能会进入到 stable rust。","user_name":"作者回复","user_name_real":"Tyr","uid":"1079375","ctime":1631602427,"ip_address":"","comment_id":312035,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1631599819","product_id":100085301,"comment_content":"fn get_next_value(a: i32,b: i32) -&gt; (i32, i32) {<br>    return (b, a + b)<br>}<br><br>fn fib_loop(n: u8) {<br>    let mut a = 1;<br>    let mut b = 1;<br>    let mut i = 2u8;<br>    <br>    loop {<br>        (a, b) = get_next_value(a, b);<br>        i += 1;<br>                <br>        if i &gt;= n {<br>            break;<br>        }<br>    }<br>}<br><br>我想把函数返回结果赋值给a和b两个变量，但是rust报错：<br>error[E0658]: destructuring assignments are unstable","like_count":0,"discussions":[{"author":{"id":1079375,"avatar":"https://static001.geekbang.org/account/avatar/00/10/78/4f/e74f870c.jpg","nickname":"Tyr","note":"","ucode":"EAAFC8063202E0","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":526836,"discussion_content":"按你的写法，如果非要返回 tuple，那就不用 destructure，而是单独赋值，比如：\n\n```rust\nfn get_next_value(a: i32, b: i32) -&amp;gt; (i32, i32) {\n    return (b, a + b);\n}\n\nfn fib_loop(n: u8) -&amp;gt; (i32, i32) {\n    let mut a = 1;\n    let mut b = 1;\n    let mut i = 2u8;\n\n    loop {\n        let v = get_next_value(a, b);\n        a = v.0;\n        b = v.1;\n        i += 1;\n\n        if i &amp;gt;= n {\n            return (a, b);\n        }\n    }\n}\n\nfn main() {\n    println!(&amp;quot;{:?}&amp;quot;, fib_loop(10));\n}\n```\n\n未来 destructuring assignment 可能会进入到 stable rust。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1631602427,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1118322,"avatar":"https://static001.geekbang.org/account/avatar/00/11/10/72/c464174e.jpg","nickname":"xinsuonline","note":"","ucode":"F50BEFBFD390C6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":394105,"discussion_content":"+1， 我也是这么写(a, b) = calc(a, b)的，编译器就提示错误了（python写多了）,\nnightly下可以用\nhttps://play.rust-lang.org/?version=nightly&amp;mode=debug&amp;edition=2018&amp;gist=bc6774c05196fc844b27e40a623e576c\n\nhttps://github.com/rust-lang/rust/pull/78748\n\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1631722298,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":311878,"user_name":"胡小涵","can_delete":false,"product_type":"c1","uid":2004538,"ip_address":"","ucode":"2E750C65EC282C","user_header":"https://static001.geekbang.org/account/avatar/00/1e/96/3a/e06f8367.jpg","comment_is_top":false,"comment_ctime":1631519885,"is_pvip":false,"replies":[{"id":"113016","content":"1.54。我的建议是有最新版就升级。","user_name":"作者回复","user_name_real":"Tyr","uid":"1079375","ctime":1631542843,"ip_address":"","comment_id":311878,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1631519885","product_id":100085301,"comment_content":"咱们对rustc版本的最低要求是什么？","like_count":0,"discussions":[{"author":{"id":1079375,"avatar":"https://static001.geekbang.org/account/avatar/00/10/78/4f/e74f870c.jpg","nickname":"Tyr","note":"","ucode":"EAAFC8063202E0","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":526782,"discussion_content":"1.54。我的建议是有最新版就升级。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1631542843,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":311846,"user_name":"胡小涵","can_delete":false,"product_type":"c1","uid":2004538,"ip_address":"","ucode":"2E750C65EC282C","user_header":"https://static001.geekbang.org/account/avatar/00/1e/96/3a/e06f8367.jpg","comment_is_top":false,"comment_ctime":1631503009,"is_pvip":false,"replies":[{"id":"112983","content":"因为 Haskell 等很多语言 enum 就是一个标签联合。标签联合囊括了枚举和联合，所以没有必要将它们分开。","user_name":"作者回复","user_name_real":"Tyr","uid":"1079375","ctime":1631513794,"ip_address":"","comment_id":311846,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1631503009","product_id":100085301,"comment_content":"为什么rust要使用enum关键字，同时承担C中的union和enum两种角色？为什么不可以枚举就是枚举，联合就是联合，让可读性更清晰呢？","like_count":0,"discussions":[{"author":{"id":1079375,"avatar":"https://static001.geekbang.org/account/avatar/00/10/78/4f/e74f870c.jpg","nickname":"Tyr","note":"","ucode":"EAAFC8063202E0","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":526770,"discussion_content":"因为 Haskell 等很多语言 enum 就是一个标签联合。标签联合囊括了枚举和联合，所以没有必要将它们分开。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1631513794,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":311593,"user_name":"记事本","can_delete":false,"product_type":"c1","uid":1401568,"ip_address":"","ucode":"FA942636EE0CC8","user_header":"https://static001.geekbang.org/account/avatar/00/15/62/e0/d2ff52da.jpg","comment_is_top":false,"comment_ctime":1631328209,"is_pvip":false,"replies":[{"id":"112998","content":"你可以看我 github repo 里的代码。我刚才运行了一下是没问题的。<br><br>```md<br>❯ cat rust.md<br>  Rust Programming Language<br><br>[![Rust Logo](&#47;static&#47;images&#47;rust-logo-blk.svg) ](&#47;)<br><br>* [Install](&#47;tools&#47;install)<br>* [Learn](&#47;learn)<br>* [Playground](https:&#47;&#47;play.rust-lang.org&#47;)<br>* [Tools](&#47;tools)<br>* [Governance](&#47;governance)<br>* [Community](&#47;community)<br>* [Blog](https:&#47;&#47;blog.rust-lang.org&#47;)<br><br>Language English (en-US)Español (es)Français (fr)Italiano (it)日本語 (ja)Português (pt-BR)Русский (ru)Türkçe (tr)简体中文 (zh-CN)正體中文 (zh-TW)<br><br>Rust<br>==========<br><br> A language empowering everyone<br> to build reliable and efficient software.<br>```","user_name":"作者回复","user_name_real":"Tyr","uid":"1079375","ctime":1631515874,"ip_address":"","comment_id":311593,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1631328209","product_id":100085301,"comment_content":"我的md文件全是纯HTML标签，没有转换到md格式的标签，是程序有问题吗？","like_count":0,"discussions":[{"author":{"id":1079375,"avatar":"https://static001.geekbang.org/account/avatar/00/10/78/4f/e74f870c.jpg","nickname":"Tyr","note":"","ucode":"EAAFC8063202E0","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":526673,"discussion_content":"你可以看我 github repo 里的代码。我刚才运行了一下是没问题的。\n\n```md\n❯ cat rust.md\n  Rust Programming Language\n\n[![Rust Logo](/static/images/rust-logo-blk.svg) ](/)\n\n* [Install](/tools/install)\n* [Learn](/learn)\n* [Playground](https://play.rust-lang.org/)\n* [Tools](/tools)\n* [Governance](/governance)\n* [Community](/community)\n* [Blog](https://blog.rust-lang.org/)\n\nLanguage English (en-US)Español (es)Français (fr)Italiano (it)日本語 (ja)Português (pt-BR)Русский (ru)Türkçe (tr)简体中文 (zh-CN)正體中文 (zh-TW)\n\nRust\n==========\n\n A language empowering everyone\n to build reliable and efficient software.\n```","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1631515874,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":311588,"user_name":"谷中仁","can_delete":false,"product_type":"c1","uid":1031417,"ip_address":"","ucode":"271BF97BB16A35","user_header":"https://static001.geekbang.org/account/avatar/00/0f/bc/f9/72d66de4.jpg","comment_is_top":false,"comment_ctime":1631326509,"is_pvip":false,"replies":[{"id":"113002","content":"赞！记得校验传入的参数哦。","user_name":"作者回复","user_name_real":"Tyr","uid":"1079375","ctime":1631516332,"ip_address":"","comment_id":311588,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1631326509","product_id":100085301,"comment_content":"html 2 markdown 大卡<br><br>use std::{env, fs};<br><br>fn main() {<br>    let args: Vec&lt;String&gt; = env::args().collect();<br>    let url = &amp;args[1];<br>    let output = &amp;args[2];<br>    println!(&quot;Fetching url: {}, output: {}&quot;, url, output);<br>    <br>    let body = reqwest::blocking::get(url).unwrap().text().unwrap();<br>    <br>    println!(&quot;Converting html to markdown ...&quot;);<br>    let md = html2md::parse_html(&amp;body);<br>    <br>    fs::write(output, md).unwrap();<br>    <br>    println!(&quot;Successfully converted, and you can see at {}&quot;, output);<br>}<br>","like_count":0,"discussions":[{"author":{"id":1079375,"avatar":"https://static001.geekbang.org/account/avatar/00/10/78/4f/e74f870c.jpg","nickname":"Tyr","note":"","ucode":"EAAFC8063202E0","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":526668,"discussion_content":"赞！记得校验传入的参数哦。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1631516332,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":311476,"user_name":"水口行舟入她心","can_delete":false,"product_type":"c1","uid":1039465,"ip_address":"","ucode":"A6876A6DCBD55B","user_header":"https://static001.geekbang.org/account/avatar/00/0f/dc/69/4e534d3d.jpg","comment_is_top":false,"comment_ctime":1631248724,"is_pvip":false,"replies":[{"id":"112877","content":"lol","user_name":"作者回复","user_name_real":"Tyr","uid":"1079375","ctime":1631284295,"ip_address":"","comment_id":311476,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1631248724","product_id":100085301,"comment_content":"原来rust语言也是有分号的啊，果然和go 的理念不一样","like_count":0,"discussions":[{"author":{"id":1079375,"avatar":"https://static001.geekbang.org/account/avatar/00/10/78/4f/e74f870c.jpg","nickname":"Tyr","note":"","ucode":"EAAFC8063202E0","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":526624,"discussion_content":"lol","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1631284295,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":310715,"user_name":"陈老师的跟班","can_delete":false,"product_type":"c1","uid":2238237,"ip_address":"","ucode":"DED356A5DD0C49","user_header":"https://static001.geekbang.org/account/avatar/00/22/27/1d/601a7ac6.jpg","comment_is_top":false,"comment_ctime":1630855608,"is_pvip":false,"replies":[{"id":"112596","content":"👍 记得做参数校验。","user_name":"作者回复","user_name_real":"Tyr","uid":"1079375","ctime":1630905040,"ip_address":"","comment_id":310715,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1630855608","product_id":100085301,"comment_content":": )<br><br>```rust<br>use std::{fs, env::args};<br>use std::process::exit;<br><br>fn main() {<br><br>    let cmd = args().collect::&lt;Vec&lt;String&gt;&gt;();<br>    if cmd.len() &lt; 3{<br>        println!(&quot;Please input url and file name.&quot;);<br>        exit(1);<br>    }<br>    let url = cmd[1].as_str();<br>    let output = cmd[2].as_str();<br>    println!(&quot;Fetching url :{}&quot;, url);<br>    let body = reqwest::blocking::get(url).unwrap().text().unwrap();<br>    println!(&quot;Converting html to markdown...&quot;);<br>    let md = html2md::parse_html(&amp;body);<br>    fs::write(output, md.as_bytes()).unwrap();<br>    println!(&quot;Converted markdown has been saved in {}.&quot;, output);<br><br>}<br><br>```","like_count":0,"discussions":[{"author":{"id":1079375,"avatar":"https://static001.geekbang.org/account/avatar/00/10/78/4f/e74f870c.jpg","nickname":"Tyr","note":"","ucode":"EAAFC8063202E0","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":526318,"discussion_content":"👍 记得做参数校验。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1630905040,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":310700,"user_name":"leesper","can_delete":false,"product_type":"c1","uid":1351104,"ip_address":"","ucode":"CC76320571BECA","user_header":"https://static001.geekbang.org/account/avatar/00/14/9d/c0/cb5341ec.jpg","comment_is_top":false,"comment_ctime":1630848480,"is_pvip":false,"replies":[{"id":"112595","content":"👍 记得要做参数校验。","user_name":"作者回复","user_name_real":"Tyr","uid":"1079375","ctime":1630905015,"ip_address":"","comment_id":310700,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1630848480","product_id":100085301,"comment_content":"use std::fs;<br><br>fn main() {<br>    let args : Vec&lt;_&gt; = std::env::args().collect();<br>    if args.len() != 3 {<br>        println!(&quot;usage: {} [URL] [MDFILE]&quot;, args[0]);<br>        std::process::exit(1);<br>    }<br>    let url = &amp;args[1];<br>    let output = &amp;args[2];<br><br>    println!(&quot;Fetching url: {}&quot;, url);<br>    let body = reqwest::blocking::get(url).unwrap().text().unwrap();<br>    <br>    println!(&quot;Converting to markdown...&quot;);<br>    let md = html2md::parse_html(&amp;body);<br><br>    fs::write(output, md.as_bytes()).unwrap();<br>    println!(&quot;Converted markdown has been saved in {}.&quot;, output);<br><br>}","like_count":0,"discussions":[{"author":{"id":1079375,"avatar":"https://static001.geekbang.org/account/avatar/00/10/78/4f/e74f870c.jpg","nickname":"Tyr","note":"","ucode":"EAAFC8063202E0","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":526313,"discussion_content":"👍 记得要做参数校验。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1630905015,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":310509,"user_name":"Eric","can_delete":false,"product_type":"c1","uid":1077200,"ip_address":"","ucode":"DF47E3CCE35483","user_header":"https://static001.geekbang.org/account/avatar/00/10/6f/d0/7dff7d60.jpg","comment_is_top":false,"comment_ctime":1630689355,"is_pvip":false,"replies":[{"id":"112499","content":"任何实现了 Debug trait 的数据结构，都可以用 {:?} 打印。如果你自己定义一个结构，也可以实现 Debug trait 或者在数据结构上加上 #[derive(Debug)] 自动生成 Debug trait。Vec&lt;T&gt; 实现了 Debug trait。所以可以这么打印。","user_name":"作者回复","user_name_real":"Tyr","uid":"1079375","ctime":1630734142,"ip_address":"","comment_id":310509,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1630689355","product_id":100085301,"comment_content":"查资料才知道 Vec 打印的方式<br>let args: Vec&lt;String&gt; = env::args().collect();<br>println(&quot;{:?}&quot;, args)","like_count":0,"discussions":[{"author":{"id":1079375,"avatar":"https://static001.geekbang.org/account/avatar/00/10/78/4f/e74f870c.jpg","nickname":"Tyr","note":"","ucode":"EAAFC8063202E0","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":526255,"discussion_content":"任何实现了 Debug trait 的数据结构，都可以用 {:?} 打印。如果你自己定义一个结构，也可以实现 Debug trait 或者在数据结构上加上 #[derive(Debug)] 自动生成 Debug trait。Vec&amp;lt;T&amp;gt; 实现了 Debug trait。所以可以这么打印。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1630734142,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":310402,"user_name":"Griffenliu","can_delete":false,"product_type":"c1","uid":2056396,"ip_address":"","ucode":"0A5BFC80B3C0A2","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKyJPx4r7mYedM4545Dw4tscPLBQoB7zUbf0RD0sfMyAlZgS1m05u953BYukYBvTHUZnUe7E8Ou8w/132","comment_is_top":false,"comment_ctime":1630640202,"is_pvip":false,"replies":[{"id":"112463","content":"👍","user_name":"作者回复","user_name_real":"Tyr","uid":"1079375","ctime":1630651572,"ip_address":"","comment_id":310402,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1630640202","product_id":100085301,"comment_content":"let url = std::env::args().nth(1).expect(&quot;缺少参数 URL&quot;);","like_count":0,"discussions":[{"author":{"id":1079375,"avatar":"https://static001.geekbang.org/account/avatar/00/10/78/4f/e74f870c.jpg","nickname":"Tyr","note":"","ucode":"EAAFC8063202E0","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":526222,"discussion_content":"👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1630651572,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":310393,"user_name":"小蠡","can_delete":false,"product_type":"c1","uid":2332582,"ip_address":"","ucode":"35D246ACF4C4A2","user_header":"https://static001.geekbang.org/account/avatar/00/23/97/a6/a883003e.jpg","comment_is_top":false,"comment_ctime":1630638509,"is_pvip":false,"replies":[{"id":"112461","content":"建议搭梯子或者用国内的源","user_name":"作者回复","user_name_real":"Tyr","uid":"1079375","ctime":1630651520,"ip_address":"","comment_id":310393,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1630638509","product_id":100085301,"comment_content":"Errors\r<br>html2md: Error: Command failed: git --no-pager --git-dir=&quot;&#47;home&#47;sansan&#47;.cargo&#47;registry&#47;index&#47;github.com-1ecc6299db9ec823&#47;.git&quot; show origin&#47;master:ht&#47;ml&#47;html2md\r<br>fatal: 无效的对象名 &#39;origin&#47;master&#39;。<br>请问，在国内不搭梯子第一个demo都运行不了么","like_count":0,"discussions":[{"author":{"id":1079375,"avatar":"https://static001.geekbang.org/account/avatar/00/10/78/4f/e74f870c.jpg","nickname":"Tyr","note":"","ucode":"EAAFC8063202E0","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":526215,"discussion_content":"建议搭梯子或者用国内的源","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1630651520,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":309994,"user_name":"Geek_b52974","can_delete":false,"product_type":"c1","uid":1298252,"ip_address":"","ucode":"59884399646620","user_header":"","comment_is_top":false,"comment_ctime":1630428920,"is_pvip":true,"replies":[{"id":"112311","content":"👍 很不错。url.to_string() 没有必要。url 已经是 String 类型；记得要对输入做校验。任何时候用户的输入都是不可信的。","user_name":"作者回复","user_name_real":"Tyr","uid":"1079375","ctime":1630462852,"ip_address":"","comment_id":309994,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1630428920","product_id":100085301,"comment_content":"use std::fs;<br><br>fn main() {<br>    let args: Vec&lt;String&gt; = std::env::args().collect();<br>    let url = &amp;args[1];<br>    let output = &amp;args[2];<br><br>    let md = get_markdown(url.to_string());<br>    fs::write(&amp;output, md.as_bytes()).unwrap();<br>    println!(&quot;coverted to markdown saved in {}.&quot;, output);<br>}<br><br>fn get_markdown(url: String) -&gt; String {<br>    println!(&quot;Fetching url: {}&quot;, url);<br>    let body = reqwest::blocking::get(url).unwrap().text().unwrap();<br><br>    println!(&quot;Convert html to markdown...&quot;);<br>    html2md::parse_html(&amp;body)<br>}","like_count":0,"discussions":[{"author":{"id":1079375,"avatar":"https://static001.geekbang.org/account/avatar/00/10/78/4f/e74f870c.jpg","nickname":"Tyr","note":"","ucode":"EAAFC8063202E0","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":526089,"discussion_content":"👍 很不错。url.to_string() 没有必要。url 已经是 String 类型；记得要对输入做校验。任何时候用户的输入都是不可信的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1630462852,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1298252,"avatar":"","nickname":"Geek_b52974","note":"","ucode":"59884399646620","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":391452,"discussion_content":"URL 好像會是 &amp;string 所以compiler 報錯時建議我加 to_string","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1630470966,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":309676,"user_name":".nil?","can_delete":false,"product_type":"c1","uid":1070750,"ip_address":"","ucode":"33459B799640BF","user_header":"https://static001.geekbang.org/account/avatar/00/10/56/9e/020797cd.jpg","comment_is_top":false,"comment_ctime":1630298345,"is_pvip":false,"replies":[{"id":"112155","content":"嗯，不错。记得任何时候不要信任输入，要做校验哦。","user_name":"作者回复","user_name_real":"Tyr","uid":"1079375","ctime":1630303748,"ip_address":"","comment_id":309676,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1630298345","product_id":100085301,"comment_content":"第一题参考了老师的代码，就不贴出来了。<br>第二题<br>```<br>use std::fs;<br><br>fn main() {<br>    let args: Vec&lt;String&gt; = std::env::args().collect();<br><br>    if args.len() &lt; 3 {<br>        println!(&quot;Please input url and output&quot;);<br>        return;<br>    }<br><br>    let url = &amp;args[1];<br>    let output = &amp;args[2];<br><br>    println!(&quot;Fetching url: {}&quot;, url);<br>    let body = reqwest::blocking::get(url).unwrap().text().unwrap();<br><br>    println!(&quot;Converting html to markdown...&quot;);<br>    let md = html2md::parse_html(&amp;body);<br><br>    fs::write(output, md.as_bytes()).unwrap();<br>    println!(&quot;Converted markdown has been saved {}.&quot;, output);<br>}<br>```","like_count":0,"discussions":[{"author":{"id":1079375,"avatar":"https://static001.geekbang.org/account/avatar/00/10/78/4f/e74f870c.jpg","nickname":"Tyr","note":"","ucode":"EAAFC8063202E0","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":525961,"discussion_content":"嗯，不错。记得任何时候不要信任输入，要做校验哦。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1630303748,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":309526,"user_name":"GraceAesthetic","can_delete":false,"product_type":"c1","uid":1266056,"ip_address":"","ucode":"C9364D00DFCEC6","user_header":"https://static001.geekbang.org/account/avatar/00/13/51/88/e89127db.jpg","comment_is_top":false,"comment_ctime":1630211631,"is_pvip":false,"replies":[{"id":"112134","content":"lib.rs 是库的入口，main.rs 一般是可执行文件的入口，其它的模块的声明要在这两个文件中使用 mod xxx; 声明。对于目录下的代码，需要在 mod.rs 里声明。","user_name":"作者回复","user_name_real":"Tyr","uid":"1079375","ctime":1630296015,"ip_address":"","comment_id":309526,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1630211631","product_id":100085301,"comment_content":"&quot;具体做法是：在项目的入口文件 lib.rs &#47; main.rs 里，用 mod 来声明要加载的其它代码文件。&quot;<br>这里是否应该为 lib.rs &#47; mod.rs 呢<br>","like_count":0,"discussions":[{"author":{"id":1079375,"avatar":"https://static001.geekbang.org/account/avatar/00/10/78/4f/e74f870c.jpg","nickname":"Tyr","note":"","ucode":"EAAFC8063202E0","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":525905,"discussion_content":"lib.rs 是库的入口，main.rs 一般是可执行文件的入口，其它的模块的声明要在这两个文件中使用 mod xxx; 声明。对于目录下的代码，需要在 mod.rs 里声明。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1630296015,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":309353,"user_name":"ff","can_delete":false,"product_type":"c1","uid":2076850,"ip_address":"","ucode":"037B36CE51222B","user_header":"https://static001.geekbang.org/account/avatar/00/1f/b0/b2/15e160f8.jpg","comment_is_top":false,"comment_ctime":1630058903,"is_pvip":false,"replies":[{"id":"112063","content":"1. 对。loop {} 内部如果要跳出 loop，只能 break 或者 return。用哪一个取决于你后续要不要继续做一些操作。<br>2. 👍","user_name":"作者回复","user_name_real":"Tyr","uid":"1079375","ctime":1630131258,"ip_address":"","comment_id":309353,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1630058903","product_id":100085301,"comment_content":"1. <br>fn fib_loop(n: u8) -&gt; [i32; 2] {<br>    let mut a = 1;<br>    let mut b = 1;<br>    let mut i = 2u8;<br><br>    loop {<br>        let c = a + b;<br>        a = b;<br>        b = c;<br>        i += 1;<br><br>        println!(&quot;next val is {}&quot;, b);<br><br>        if i &gt;= n {<br>            return [a, b];<br>        }<br>    }<br>}<br><br>fn fib_while(ia: i32, ib: i32, n: u8) -&gt; [i32; 2] {<br>    let (mut a, mut b, mut i) = (ia, ib, 2);<br>    while i &lt; n {<br>        let c = a + b;<br>        a = b;<br>        b = c;<br>        i += 1;<br>        <br>        println!(&quot;next val is {}&quot;, b);<br>    }<br>    return [a, b];<br>}<br><br>fn fib_for(ia: i32, ib: i32, n: u8) {<br>    let (mut a, mut b) = (ia, ib);<br><br>    for _i in 2..n {<br>        let c = a + b;<br>        a = b;<br>        b = c;<br>        println!(&quot;next val is {}&quot;, b);<br>    }<br>}<br><br>fn main() {<br>    let n = 10;<br>    let [ia, ib] = fib_loop(n);<br>    let [ja, jb] = fib_while(ia, ib, n);<br>    fib_for(ja, jb, n);<br>}<br><br>有个问题，在loop中如果要返回值好像更推荐在循环出口处使用return？如果不加还是可以运行的，但是会有提示，这个是因为loop只能用return break这种作为出口吗？<br><br>next val is 377<br>thread &#39;main&#39; panicked at &#39;attempt to add with overflow&#39;, main.rs:7:17<br>note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace<br>next val is 610<br>next val is 987<br>next val is 1597<br><br>2. <br>use std::fs;<br><br>fn main() {<br>  let args: Vec&lt;String&gt; = std::env::args().collect();<br>  let url = &amp;args[1];<br>  let output = &amp;args[2];<br>  println!(&quot;Fetching url - {} to {}&quot;, url, output);<br>  let body = reqwest::blocking::get(url).unwrap().text().unwrap();<br><br>  println!(&quot;Converting html to markdown...&quot;);<br>  let md = html2md::parse_html(&amp;body);<br><br>  fs::write(output, md.as_bytes()).unwrap();<br>  println!(&quot;Converted markdown has been saved in {}.&quot;, output);<br>}<br>","like_count":0,"discussions":[{"author":{"id":1079375,"avatar":"https://static001.geekbang.org/account/avatar/00/10/78/4f/e74f870c.jpg","nickname":"Tyr","note":"","ucode":"EAAFC8063202E0","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":525837,"discussion_content":"1. 对。loop {} 内部如果要跳出 loop，只能 break 或者 return。用哪一个取决于你后续要不要继续做一些操作。\n2. 👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1630131258,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]}]}