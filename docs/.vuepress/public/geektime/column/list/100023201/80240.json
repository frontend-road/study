{"id":80240,"title":"浏览器：一个浏览器是如何工作的？（阶段一）","content":"<p>对于前端开发来说，我们平时与浏览器打交道的时间是最多的。可浏览器对前端同学来说更多像一个神秘黑盒子的存在。我们仅仅知道它能做什么，而不知道它是如何做到的。</p><p>在我面试和接触过的前端开发者中，70%的前端同学对这部分的知识内容只能达到“一知半解”的程度。甚至还有一部分同学会质疑这部分知识是否重要：这与我们的工作相关吗，学多了会不会偏移前端工作的方向？</p><p>事实上，我们这里所需要了解的浏览器工作原理只是它的大致过程，这部分浏览器工作原理不但是前端面试的常考知识点，它还会辅助你的实际工作，学习浏览器的内部工作原理和个中缘由，对于我们做性能优化、排查错误都有很大的好处。</p><p>在我们的课程中，我也会控制浏览器相关知识的粒度，把它保持在“给前端工程师了解浏览器”的水准，而不是详细到“给浏览器开发工程师实现浏览器”的水准。</p><p>那么，我们今天开始，来共同思考一下。一个浏览器到底是如何工作的。</p><p>实际上，对浏览器的实现者来说，他们做的事情，就是把一个URL变成一个屏幕上显示的网页。</p><p>这个过程是这样的：</p><ol>\n<li>浏览器首先使用HTTP协议或者HTTPS协议，向服务端请求页面；</li>\n<li>把请求回来的HTML代码经过解析，构建成DOM树；</li>\n<li>计算DOM树上的CSS属性；</li>\n<li>最后根据CSS属性对元素逐个进行渲染，得到内存中的位图；</li>\n<li>一个可选的步骤是对位图进行合成，这会极大地增加后续绘制的速度；</li>\n<li>合成之后，再绘制到界面上。</li>\n</ol><!-- [[[read_end]]] --><p><img src=\"https://static001.geekbang.org/resource/image/63/4c/6391573a276c47a9a50ae0cbd2c5844c.jpg?wh=1440*810\" alt=\"\"></p><p>我们在开始详细介绍之前，要建立一个感性认识。我们从HTTP请求回来开始，这个过程并非一般想象中的一步做完再做下一步，而是一条流水线。</p><p>从HTTP请求回来，就产生了流式的数据，后续的DOM树构建、CSS计算、渲染、合成、绘制，都是尽可能地流式处理前一步的产出：即不需要等到上一步骤完全结束，就开始处理上一步的输出，这样我们在浏览网页时，才会看到逐步出现的页面。</p><p>首先我们来介绍下网络通讯的部分。</p><h2>HTTP协议</h2><p>浏览器首先要做的事就是根据URL把数据取回来，取回数据使用的是HTTP协议，实际上这个过程之前还有DNS查询，不过这里就不详细展开了。</p><p>我先来了解下HTTP的标准。</p><p>HTTP标准由IETF组织制定，跟它相关的标准主要有两份：</p><ul>\n<li>\n<p>HTTP1.1 <a href=\"https://tools.ietf.org/html/rfc2616\">https://tools.ietf.org/html/rfc2616</a></p>\n</li>\n<li>\n<p>HTTP1.1 <a href=\"https://tools.ietf.org/html/rfc7234\">https://tools.ietf.org/html/rfc7234</a></p>\n</li>\n</ul><p>HTTP协议是基于TCP协议出现的，对TCP协议来说，TCP协议是一条双向的通讯通道，HTTP在TCP的基础上，规定了Request-Response的模式。这个模式决定了通讯必定是由浏览器端首先发起的。</p><p>大部分情况下，浏览器的实现者只需要用一个TCP库，甚至一个现成的HTTP库就可以搞定浏览器的网络通讯部分。HTTP是纯粹的文本协议，它是规定了使用TCP协议来传输文本格式的一个应用层协议。</p><p>下面，我们试着用一个纯粹的TCP客户端来手工实现HTTP一下：</p><h2>实验</h2><p>我们的实验需要使用telnet客户端，这个客户端是一个纯粹的TCP连接工具（安装方法）。</p><p>首先我们运行telnet，连接到极客时间主机，在命令行里输入以下内容：</p><pre><code>telnet time.geekbang.org 80\n</code></pre><p>这个时候，TCP连接已经建立，我们输入以下字符作为请求：</p><pre><code>GET / HTTP/1.1\nHost: time.geekbang.org\n</code></pre><p>按下两次回车，我们收到了服务端的回复：</p><pre><code>HTTP/1.1 301 Moved Permanently\nDate: Fri, 25 Jan 2019 13:28:12 GMT\nContent-Type: text/html\nContent-Length: 182\nConnection: keep-alive\nLocation: https://time.geekbang.org/\nStrict-Transport-Security: max-age=15768000\n\n&lt;html&gt;\n&lt;head&gt;&lt;title&gt;301 Moved Permanently&lt;/title&gt;&lt;/head&gt;\n&lt;body bgcolor=&quot;white&quot;&gt;\n&lt;center&gt;&lt;h1&gt;301 Moved Permanently&lt;/h1&gt;&lt;/center&gt;\n&lt;hr&gt;&lt;center&gt;openresty&lt;/center&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre><p>这就是一次完整的HTTP请求的过程了，我们可以看到，在TCP通道中传输的，完全是文本。</p><p>在请求部分，第一行被称作 request line，它分为三个部分，HTTP Method，也就是请求的“方法”，请求的路径和请求的协议和版本。</p><p>在响应部分，第一行被称作 response line，它也分为三个部分，协议和版本、状态码和状态文本。</p><p>紧随在request line或者response line之后，是请求头/响应头，这些头由若干行组成，每行是用冒号分隔的名称和值。</p><p>在头之后，以一个空行（两个换行符）为分隔，是请求体/响应体，请求体可能包含文件或者表单数据，响应体则是HTML代码。</p><h2>HTTP协议格式</h2><p>根据上面的分析，我们可以知道HTTP协议，大概可以划分成如下部分。</p><p><img src=\"https://static001.geekbang.org/resource/image/3d/a1/3db5e0f362bc276b83c7564430ecb0a1.jpg?wh=930*516\" alt=\"\"></p><p>我们简单看一下，在这些部分中，path是请求的路径完全由服务端来定义，没有很多的特别内容；而version几乎都是固定字符串；response body是我们最熟悉的HTML，我在后面会有专门的课程介绍，这里也就不多讲了。</p><p>下面我们就来逐个给你介绍其它部分。</p><h2>HTTP Method（方法）</h2><p>我们首先来介绍一下request line里面的方法部分。这里的方法跟我们编程中的方法意义类似，表示我们此次HTTP请求希望执行的操作类型。方法有以下几种定义：</p><ul>\n<li>GET</li>\n<li>POST</li>\n<li>HEAD</li>\n<li>PUT</li>\n<li>DELETE</li>\n<li>CONNECT</li>\n<li>OPTIONS</li>\n<li>TRACE</li>\n</ul><p>浏览器通过地址栏访问页面都是GET方法。表单提交产生POST方法。</p><p>HEAD则是跟GET类似，只返回响应头，多数由JavaScript发起。</p><p>PUT和DELETE分别表示添加资源和删除资源，但是实际上这只是语义上的一种约定，并没有强约束。</p><p>CONNECT现在多用于HTTPS和WebSocket。</p><p>OPTIONS和TRACE一般用于调试，多数线上服务都不支持。</p><h2>HTTP Status code（状态码）和 Status text（状态文本）</h2><p>接下来我们看看response line的状态码和状态文本。常见的状态码有以下几种。</p><ul>\n<li>1xx：临时回应，表示客户端请继续。</li>\n<li>2xx：请求成功。\n<ul>\n<li>200：请求成功。</li>\n</ul>\n</li>\n<li>3xx: 表示请求的目标有变化，希望客户端进一步处理。\n<ul>\n<li>301&amp;302：永久性与临时性跳转。</li>\n<li>304：跟客户端缓存没有更新。</li>\n</ul>\n</li>\n<li>4xx：客户端请求错误。\n<ul>\n<li>403：无权限。</li>\n<li>404：表示请求的页面不存在。</li>\n<li>418：It’s a teapot. 这是一个彩蛋，来自ietf的一个愚人节玩笑。（<a href=\"https://tools.ietf.org/html/rfc2324\">超文本咖啡壶控制协议</a>）</li>\n</ul>\n</li>\n<li>5xx：服务端请求错误。\n<ul>\n<li>500：服务端错误。</li>\n<li>503：服务端暂时性错误，可以一会再试。</li>\n</ul>\n</li>\n</ul><p>对我们前端来说，1xx系列的状态码是非常陌生的，原因是1xx的状态被浏览器HTTP库直接处理掉了，不会让上层应用知晓。</p><p>2xx系列的状态最熟悉的就是200，这通常是网页请求成功的标志，也是大家最喜欢的状态码。</p><p>3xx系列比较复杂，301和302两个状态表示当前资源已经被转移，只不过一个是永久性转移，一个是临时性转移。实际上301更接近于一种报错，提示客户端下次别来了。</p><p>304又是一个每个前端必知必会的状态，产生这个状态的前提是：客户端本地已经有缓存的版本，并且在Request中告诉了服务端，当服务端通过时间或者tag，发现没有更新的时候，就会返回一个不含body的304状态。</p><h2>HTTP Head (HTTP头)</h2><p>HTTP头可以看作一个键值对。原则上，HTTP头也是一种数据，我们可以自由定义HTTP头和值。不过在HTTP规范中，规定了一些特殊的HTTP头，我们现在就来了解一下它们。</p><p>在HTTP标准中，有完整的请求/响应头规定，这里我们挑几个重点的说一下：</p><p>我们先来看看Request Header。</p><p><img src=\"https://static001.geekbang.org/resource/image/2b/a2/2be3e2457f08bdf624837dfaee01e4a2.png?wh=633*407\" alt=\"\"></p><p>接下来看一下Response Header。<br>\n<img src=\"https://static001.geekbang.org/resource/image/ef/c9/efdeadf27313e08bf0789a3b5480f7c9.png?wh=627*453\" alt=\"\"></p><p>这里仅仅列出了我认为比较常见的HTTP头，这些头是我认为前端工程师应该做到不需要查阅，看到就可以知道意思的HTTP头。完整的列表还是请你参考我给出的rfc2616标准。</p><h2>HTTP Request Body</h2><p>HTTP请求的body主要用于提交表单场景。实际上，HTTP请求的body是比较自由的，只要浏览器端发送的body服务端认可就可以了。一些常见的body格式是：</p><ul>\n<li>application/json</li>\n<li>application/x-www-form-urlencoded</li>\n<li>multipart/form-data</li>\n<li>text/xml</li>\n</ul><p>我们使用HTML的form标签提交产生的HTML请求，默认会产生 application/x-www-form-urlencoded 的数据格式，当有文件上传时，则会使用multipart/form-data。</p><h2>HTTPS</h2><p>在HTTP协议的基础上，HTTPS和HTTP2规定了更复杂的内容，但是它基本保持了HTTP的设计思想，即：使用上的Request-Response模式。</p><p>我们首先来了解下HTTPS。HTTPS有两个作用，一是确定请求的目标服务端身份，二是保证传输的数据不会被网络中间节点窃听或者篡改。</p><p>HTTPS的标准也是由RFC规定的，你可以查看它的详情链接：</p><p><a href=\"https://tools.ietf.org/html/rfc2818\">https://tools.ietf.org/html/rfc2818</a></p><p>HTTPS是使用加密通道来传输HTTP的内容。但是HTTPS首先与服务端建立一条TLS加密通道。TLS构建于TCP协议之上，它实际上是对传输的内容做一次加密，所以从传输内容上看，HTTPS跟HTTP没有任何区别。</p><h2>HTTP 2</h2><p>HTTP 2是HTTP 1.1的升级版本，你可以查看它的详情链接。</p><ul>\n<li><a href=\"https://tools.ietf.org/html/rfc7540\">https://tools.ietf.org/html/rfc7540</a></li>\n</ul><p>HTTP 2.0 最大的改进有两点，一是支持服务端推送，二是支持TCP连接复用。</p><p>服务端推送能够在客户端发送第一个请求到服务端时，提前把一部分内容推送给客户端，放入缓存当中，这可以避免客户端请求顺序带来的并行度不高，从而导致的性能问题。</p><p>TCP连接复用，则使用同一个TCP连接来传输多个HTTP请求，避免了TCP连接建立时的三次握手开销，和初建TCP连接时传输窗口小的问题。</p><blockquote>\n<p><span class=\"reference\">Note: 其实很多优化涉及更下层的协议。IP层的分包情况，和物理层的建连时间是需要被考虑的。</span></p>\n</blockquote><h2>结语</h2><p>在这一节内容中，我们一起学习了浏览器的第一步工作，也就是“浏览器首先使用HTTP协议或HTTPS协议，向服务端请求页面”的这一过程。</p><p>在这个过程中，掌握HTTP协议是重中之重。我从一个小实验开始，带你体验了一次完整的HTTP请求过程。我们一起先分析了HTTP协议的结构。接下来，我分别介绍了HTTP方法、HTTP状态码和状态文本、HTTP Head和HTTP Request Body几个重点需要注意的部分。</p><p>最后，我还介绍了HTTPS和HTTP 2这两个补充版本，以便你可以更好地熟悉并理解新的特性。</p><p>你在工作中，是否已经开始使用HTTPS和HTTP 2协议了呢？用到了它们的哪些特性，请留言告诉我吧。</p>","neighbors":{"left":{"article_title":"HTML·ARIA：可访问性是只给盲人用的特性么？","id":93777},"right":{"article_title":"浏览器：一个浏览器是如何工作的？（阶段二）","id":80260}},"comments":[{"had_liked":false,"id":65792,"user_name":"CC","can_delete":false,"product_type":"c1","uid":1021014,"ip_address":"","ucode":"2B732860C4231B","user_header":"https://static001.geekbang.org/account/avatar/00/0f/94/56/4b8395f6.jpg","comment_is_top":false,"comment_ctime":1549644037,"is_pvip":true,"discussion_count":3,"race_medal":0,"score":"602845065477","product_id":100023201,"comment_content":"现在工作中暂时只使用到 HTTPS。<br><br>去年，看到一些公司已经开始着手更新 HTTP2，不少敬佩的前端高手做了分享。<br><br>他们利用 HTTP2 服务端推送，以及 TCP 连接复用的特性，把 CSS 和 JS 文件分拆成更小的文件，分批下载。<br><br>更小的文件意味着用户可以更快看到页面，以及性能的改善。与此同时，这种处理方式也对生产环境的工具链带来调整和改变。<br><br>很有意思的变化。<br>","like_count":140,"discussions":[{"author":{"id":1512642,"avatar":"https://static001.geekbang.org/account/avatar/00/17/14/c2/46ebe3a0.jpg","nickname":"侧耳倾听","note":"","ucode":"5BF2A2440B54F0","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":558062,"discussion_content":"连接复用现在就有这特性吧，服务端推送不是websocket吗？小文件分批下载？构建时候就考虑的问题吧，跟哪个协议没多大关系吧","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1648081606,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":3086129,"avatar":"https://static001.geekbang.org/account/avatar/00/2f/17/31/66651849.jpg","nickname":"学海无涯直接淹死","note":"","ucode":"D4764A2286653A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1512642,"avatar":"https://static001.geekbang.org/account/avatar/00/17/14/c2/46ebe3a0.jpg","nickname":"侧耳倾听","note":"","ucode":"5BF2A2440B54F0","race_medal":0,"user_type":1,"is_pvip":true},"discussion":{"id":585239,"discussion_content":"是http2的server push；构建时候打包成小文件和多路复用是前后依赖的关系，先切分成小文件，然后多路复用可以并行发送到客户端，加载速度变快啊","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1661414617,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":558062,"ip_address":"北京"},"score":585239,"extra":""}]},{"author":{"id":1006786,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/5c/c2/8ffd2ad0.jpg","nickname":"qqq","note":"","ucode":"91B0ACF8CBE7BD","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":358139,"discussion_content":"问一下是哪个公司","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1615939572,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":65889,"user_name":"yy不会笑","can_delete":false,"product_type":"c1","uid":1374811,"ip_address":"","ucode":"44702996F512A0","user_header":"https://static001.geekbang.org/account/avatar/00/14/fa/5b/d0a42ed2.jpg","comment_is_top":false,"comment_ctime":1549724772,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"289312533604","product_id":100023201,"comment_content":"自己可以扩展补充以下<br>&gt; DNS查询得到IP<br><br>&gt; tcp&#47;ip的并发限制<br><br>&gt; get和post的区别<br><br>&gt; 五层因特网协议栈<br><br>&gt; 长连接与短连接<br><br>&gt; http2.0与http1.1的显著不同点：<br><br><br>&gt; 强缓存与协商缓存","like_count":67},{"had_liked":false,"id":65863,"user_name":"徐จุ๊บ","can_delete":false,"product_type":"c1","uid":1387797,"ip_address":"","ucode":"F88A107B8C2EB2","user_header":"https://static001.geekbang.org/account/avatar/00/15/2d/15/c667fbe4.jpg","comment_is_top":false,"comment_ctime":1549705414,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"87449051334","product_id":100023201,"comment_content":"老师真的很喜欢猫呐","like_count":20},{"had_liked":false,"id":69864,"user_name":"一步","can_delete":false,"product_type":"c1","uid":1005391,"ip_address":"","ucode":"73CEA468CE70C3","user_header":"https://static001.geekbang.org/account/avatar/00/0f/57/4f/6fb51ff1.jpg","comment_is_top":false,"comment_ctime":1550892180,"is_pvip":true,"replies":[{"id":"25836","content":"嗯 是 这块每太细讲 我觉得大家了解即可 主要是服务端的工作。","user_name":"作者回复","user_name_real":"winter","uid":"1268524","ctime":1551425169,"ip_address":"","comment_id":69864,"utype":1}],"discussion_count":1,"race_medal":1,"score":"74565336212","product_id":100023201,"comment_content":"HTT2 还有一个很重要的特性：使用二进制代理文本进行传输，极大提高了传输的效率","like_count":17,"discussions":[{"author":{"id":1268524,"avatar":"https://static001.geekbang.org/account/avatar/00/13/5b/2c/12bfd3cd.jpg","nickname":"winter","note":"","ucode":"2B068EDEAFEB56","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":440321,"discussion_content":"嗯 是 这块每太细讲 我觉得大家了解即可 主要是服务端的工作。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1551425169,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":70849,"user_name":"新哥","can_delete":false,"product_type":"c1","uid":1005317,"ip_address":"","ucode":"69CAF2FD490660","user_header":"https://static001.geekbang.org/account/avatar/00/0f/57/05/6e0193b5.jpg","comment_is_top":false,"comment_ctime":1551193800,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"57385768648","product_id":100023201,"comment_content":"option请求在线上也会存在吧？非简单请求中的预请求","like_count":13,"discussions":[{"author":{"id":1607721,"avatar":"https://static001.geekbang.org/account/avatar/00/18/88/29/90d9ba80.jpg","nickname":"流花","note":"","ucode":"E1B3C07536BB05","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":106216,"discussion_content":"预请求，大概有三种情况会发生：\n1.非常规请求\n2.POST请求的Content-Type并非application/x-www-form-urlencoded, multipart/form-data, 或text/plain\n3.请求设置了自定义的header字段","likes_number":5,"is_delete":false,"is_hidden":false,"ctime":1577523203,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":67784,"user_name":"花儿与少年","can_delete":false,"product_type":"c1","uid":1046304,"ip_address":"","ucode":"E2D685737E4F1B","user_header":"https://static001.geekbang.org/account/avatar/00/0f/f7/20/e2dfa9c2.jpg","comment_is_top":false,"comment_ctime":1550275352,"is_pvip":false,"replies":[{"id":"24328","content":"这完全是一种误解，物理层优化没法解决上层协议的问题。","user_name":"作者回复","user_name_real":"winter","uid":"1268524","ctime":1550552004,"ip_address":"","comment_id":67784,"utype":1}],"discussion_count":3,"race_medal":0,"score":"57384850200","product_id":100023201,"comment_content":"当5G来临，http小优化都不用找了","like_count":13,"discussions":[{"author":{"id":1268524,"avatar":"https://static001.geekbang.org/account/avatar/00/13/5b/2c/12bfd3cd.jpg","nickname":"winter","note":"","ucode":"2B068EDEAFEB56","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":439373,"discussion_content":"这完全是一种误解，物理层优化没法解决上层协议的问题。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1550552004,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2859389,"avatar":"https://static001.geekbang.org/account/avatar/00/2b/a1/7d/64ed0fdd.jpg","nickname":"电单车","note":"","ucode":"21FE87326A8B9C","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":551986,"discussion_content":"现在http2都没到物理层的瓶颈","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1645197580,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1718466,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/38/c2/d536b170.jpg","nickname":"ctrlcctrlv","note":"","ucode":"A3CE72BE775342","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":45891,"discussion_content":"木桶效应","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573095126,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":65799,"user_name":"umaru","can_delete":false,"product_type":"c1","uid":1383609,"ip_address":"","ucode":"08BA373CB32698","user_header":"https://static001.geekbang.org/account/avatar/00/15/1c/b9/392b94ee.jpg","comment_is_top":false,"comment_ctime":1549651087,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"48794291343","product_id":100023201,"comment_content":"老师，浏览器渲染听说有重绘，回流什么的，哪里可以找到这一部分相关资料？","like_count":11,"discussions":[{"author":{"id":1330064,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/xG4XaMhP5eh7zx30ibYGiavD08GyxFN1xpBt70NnNibV4nS1eUDkdGzjbDIRXTlqPMItjrBspIunc8THiaW0B51xMw/132","nickname":"游民星空666","note":"","ucode":"438DC8C9B3F423","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":45217,"discussion_content":"https://developers.google.com/web/fundamentals?hl=zh-CN","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573013912,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":68099,"user_name":"hhk","can_delete":false,"product_type":"c1","uid":1138826,"ip_address":"","ucode":"72EC677FBDC79B","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/gvfibNc3Bol6DzLMG5ia9wSLVYseoq326iae7TczmgmBj9u3Jwt8c0hl9KSzY4GNTFn0ic9m1ibzicqJ3aGzeQemec2Q/132","comment_is_top":false,"comment_ctime":1550412910,"is_pvip":false,"replies":[{"id":"24338","content":"嗯，这块我没细讲，其实就是HTTP2要加这个头才能复用连接。","user_name":"作者回复","user_name_real":"winter","uid":"1268524","ctime":1550552649,"ip_address":"","comment_id":68099,"utype":1}],"discussion_count":1,"race_medal":0,"score":"44500085870","product_id":100023201,"comment_content":"那么 HTTP2 的 TCP 连接复用, 和 keep-alive 有什么区别呢?<br>","like_count":10,"discussions":[{"author":{"id":1268524,"avatar":"https://static001.geekbang.org/account/avatar/00/13/5b/2c/12bfd3cd.jpg","nickname":"winter","note":"","ucode":"2B068EDEAFEB56","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":439512,"discussion_content":"嗯，这块我没细讲，其实就是HTTP2要加这个头才能复用连接。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1550552649,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":65890,"user_name":"oillie","can_delete":false,"product_type":"c1","uid":1031714,"ip_address":"","ucode":"5907CE80C45CB5","user_header":"https://static001.geekbang.org/account/avatar/00/0f/be/22/8bb1640f.jpg","comment_is_top":false,"comment_ctime":1549726507,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"44499399467","product_id":100023201,"comment_content":"h2的头部会用哈夫曼编码压缩大小","like_count":10},{"had_liked":false,"id":90110,"user_name":"温木","can_delete":false,"product_type":"c1","uid":1507210,"ip_address":"","ucode":"EAB6EDD6EDFE96","user_header":"","comment_is_top":false,"comment_ctime":1556416868,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"27326220644","product_id":100023201,"comment_content":"看了您的流式数据的解释，是不是可以理解当看到页面渲染的时候，DOM是不是有可能都还没构建完成呢？即使是理论上，有这种可能吗？<br>在网上看别人写的网页渲染原理，都是说dom构建完成了，再和构建css，都完成了才进行渲染的。<br>老师能详细解释下吗？","like_count":6,"discussions":[{"author":{"id":1392901,"avatar":"https://static001.geekbang.org/account/avatar/00/15/41/05/4638043f.jpg","nickname":"Ieeebruce","note":"","ucode":"28269DB9C22D11","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":262029,"discussion_content":"这不得看浏览器的实现咩，以前ie就是一边解析一边渲染的好像","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1589033384,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1607721,"avatar":"https://static001.geekbang.org/account/avatar/00/18/88/29/90d9ba80.jpg","nickname":"流花","note":"","ucode":"E1B3C07536BB05","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":106218,"discussion_content":"dom树+css（就说也是树吧）合并成render tree（渲染树）","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577523350,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":65814,"user_name":"琚致远","can_delete":false,"product_type":"c1","uid":1003012,"ip_address":"","ucode":"F4AA06D5C2AE03","user_header":"https://static001.geekbang.org/account/avatar/00/0f/4e/04/68eb84d0.jpg","comment_is_top":false,"comment_ctime":1549679779,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"27319483555","product_id":100023201,"comment_content":"棒！已经开始阅览 HTTP3 的文档了🤣","like_count":6},{"had_liked":false,"id":69910,"user_name":"芳玥","can_delete":false,"product_type":"c1","uid":1381506,"ip_address":"","ucode":"869679DD97A6AD","user_header":"https://static001.geekbang.org/account/avatar/00/15/14/82/c2b825c0.jpg","comment_is_top":false,"comment_ctime":1550902694,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"18730771878","product_id":100023201,"comment_content":"3xx状态码，真的是给我补了一下。从来没踩过这个坑。","like_count":4},{"had_liked":false,"id":69241,"user_name":"umaru","can_delete":false,"product_type":"c1","uid":1383609,"ip_address":"","ucode":"08BA373CB32698","user_header":"https://static001.geekbang.org/account/avatar/00/15/1c/b9/392b94ee.jpg","comment_is_top":false,"comment_ctime":1550695693,"is_pvip":false,"replies":[{"id":"25805","content":"一般tag是页面的信息摘要，你的服务器受到端上的tag，会那这个tag跟页面的信息摘要比对，如果相同就直接回复304无需更新了，如果不同就回复页面的内容。","user_name":"作者回复","user_name_real":"winter","uid":"1268524","ctime":1551423761,"ip_address":"","comment_id":69241,"utype":1}],"discussion_count":1,"race_medal":0,"score":"18730564877","product_id":100023201,"comment_content":"服务器如何知道tag有没有更新？<br>是有某个地方可以设置还是我需要刻意去修改页面中某个标签？","like_count":4,"discussions":[{"author":{"id":1268524,"avatar":"https://static001.geekbang.org/account/avatar/00/13/5b/2c/12bfd3cd.jpg","nickname":"winter","note":"","ucode":"2B068EDEAFEB56","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":440021,"discussion_content":"一般tag是页面的信息摘要，你的服务器受到端上的tag，会那这个tag跟页面的信息摘要比对，如果相同就直接回复304无需更新了，如果不同就回复页面的内容。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1551423761,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":68004,"user_name":"...","can_delete":false,"product_type":"c1","uid":1235597,"ip_address":"","ucode":"ACF07877BCBB2B","user_header":"https://static001.geekbang.org/account/avatar/00/12/da/8d/b0d97b83.jpg","comment_is_top":false,"comment_ctime":1550382712,"is_pvip":false,"replies":[{"id":"24335","content":"怀疑是没有复用连接，这个凭你给的信息我没法判断，得具体拿log分析时间都花在哪里了，一般来说跟证书关系不大。","user_name":"作者回复","user_name_real":"winter","uid":"1268524","ctime":1550552436,"ip_address":"","comment_id":68004,"utype":1}],"discussion_count":1,"race_medal":0,"score":"18730251896","product_id":100023201,"comment_content":"老师，网站做https升级后，由于TLS加密，第一次连接，速度慢一点是可以理解，但是之后的连接速度也变得挺慢的，这个用户体验不好，这个是不是跟我申请的https证书有很大关系，除此之外，有没有好的建议？","like_count":4,"discussions":[{"author":{"id":1268524,"avatar":"https://static001.geekbang.org/account/avatar/00/13/5b/2c/12bfd3cd.jpg","nickname":"winter","note":"","ucode":"2B068EDEAFEB56","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":439465,"discussion_content":"怀疑是没有复用连接，这个凭你给的信息我没法判断，得具体拿log分析时间都花在哪里了，一般来说跟证书关系不大。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1550552436,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":84991,"user_name":"Russell","can_delete":false,"product_type":"c1","uid":1376931,"ip_address":"","ucode":"519D5A04651E5D","user_header":"https://static001.geekbang.org/account/avatar/00/15/02/a3/b7e7a787.jpg","comment_is_top":false,"comment_ctime":1554953108,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"14439854996","product_id":100023201,"comment_content":"关于缓存，304这块我整理了一片文章。https:&#47;&#47;github.com&#47;XiaodongTong&#47;blog&#47;blob&#47;master&#47;%E6%B5%8F%E8%A7%88%E5%99%A8&#47;%E7%BC%93%E5%AD%98%E6%9C%BA%E5%88%B6.md","like_count":3},{"had_liked":false,"id":78937,"user_name":"丫丫","can_delete":false,"product_type":"c1","uid":1472409,"ip_address":"","ucode":"30A2868226FF4E","user_header":"https://static001.geekbang.org/account/avatar/00/16/77/99/f97d8f36.jpg","comment_is_top":false,"comment_ctime":1553303923,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"14438205811","product_id":100023201,"comment_content":"软件有bug，听上一个音频后切换下一个音频时，下一个音频开始播放的时间不是从零开始，是上一个音频的暂停时间点开始","like_count":3,"discussions":[{"author":{"id":1266698,"avatar":"https://static001.geekbang.org/account/avatar/00/13/54/0a/9a002ad5.jpg","nickname":"Adam Lau","note":"","ucode":"7E542D6E789500","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":342886,"discussion_content":"给极客提了个bug，一年了也没解","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1610867106,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":66590,"user_name":"维维","can_delete":false,"product_type":"c1","uid":1384365,"ip_address":"","ucode":"0142A2A58C97DE","user_header":"https://static001.geekbang.org/account/avatar/00/15/1f/ad/d8b98b79.jpg","comment_is_top":false,"comment_ctime":1549963233,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"14434865121","product_id":100023201,"comment_content":"找到了与老师的共同爱好，喜欢猫。","like_count":3},{"had_liked":false,"id":216722,"user_name":"Kauh","can_delete":false,"product_type":"c1","uid":1334806,"ip_address":"","ucode":"E72F5D3A2A8D93","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKObibUvAjbt2hG3Sb9uFAnLurM6aQDvppQOia7f7QCPk50W8KCc24PaXEm9YVxEOND1PDpp24NUloA/132","comment_is_top":false,"comment_ctime":1589332240,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10179266832","product_id":100023201,"comment_content":"老师 http1.1 的connection:keep-alive 和 http2中的复用TCP链接有什么区别？","like_count":2},{"had_liked":false,"id":108662,"user_name":"苗","can_delete":false,"product_type":"c1","uid":1088710,"ip_address":"","ucode":"5ECCC6C855E541","user_header":"https://static001.geekbang.org/account/avatar/00/10/9c/c6/05a6798f.jpg","comment_is_top":false,"comment_ctime":1561824933,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10151759525","product_id":100023201,"comment_content":"请教老师：前端页面发送跨域ajax请求时，能正常发送和接受返回数据，但通过Chrome发现Request Header有警告信息：Provisional headers are shown；请问老师有什么解决的方法呢？<br>我的ajax代码如下：<br>$.ajax({<br>                method : &#39;POST&#39;,<br>                xhrFields: {<br>                    withCredentials: true<br>                },<br>                crossDomain:true,   &#47;&#47;允许跨域<br>                contentType : &#39;application&#47;json&#39;,<br>                dataType : &#39;json&#39;,<br>                url : &#39;http:&#47;&#47;localhost:8083&#47;add&#39;,<br>                data:JSON.stringify({<br>                    custCode:&#39;icbc11&#39;,<br>                    custName:&#39;工商银行11&#39;,<br>                    custAbbrEnglish:&#39;icbc bank11&#39;<br>                }),<br>                success : function(result){<br>                    console.log(result);<br>                }<br>            });","like_count":2},{"had_liked":false,"id":80007,"user_name":"索","can_delete":false,"product_type":"c1","uid":1227508,"ip_address":"","ucode":"DAA668E3C6E1D7","user_header":"https://static001.geekbang.org/account/avatar/00/12/ba/f4/a7341ebf.jpg","comment_is_top":false,"comment_ctime":1553591847,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10143526439","product_id":100023201,"comment_content":"&lt;!DOCTYPE html&gt;<br>&lt;html&gt;<br>&lt;head&gt;<br>&lt;meta charset=&quot;UTF-8&quot;&gt;<br>&lt;title&gt;&lt;&#47;title&gt;<br>&lt;style&gt;<br>&#47;* var()函数 *&#47;<br>:root {<br>  --bg-color: #cdcdcd;<br>  --font-color: blue;<br>}<br>body {<br>  background-color: var(--bg-color);<br>}<br>.title {<br>  color: var(--font-color);<br>}<br>&#47;* attr()函数 *&#47;<br>p:before {<br>  content: attr(data-foo) &quot; &quot;;<br>}<br>&#47;* max()函数 *&#47;<br>.test-max {<br> height: 30px;<br> background-color: #f00;<br> width: max(30px, 50px);<br>}<br>&#47;* toggle()函数 *&#47;<br>ul {<br>list-style-type:disk;<br>}<br>        li &gt; ul {<br>          list-style-type:toggle(disk, circle, square, box);<br>        }<br>&lt;&#47;style&gt;<br>&lt;&#47;head&gt;<br>&lt;body&gt;<br>&lt;h1 class=&quot;title&quot;&gt;标题引人注意&lt;&#47;h1&gt;<br>&lt;p data-foo=&quot;hello&quot;&gt;world&lt;&#47;p&gt;<br>&lt;div class=&quot;test-max&quot;&gt;&lt;&#47;div&gt;<br>&lt;ul&gt;<br> &lt;li&gt;1<br>   &lt;ul&gt;<br>     &lt;li&gt;1-1<br>       &lt;ul&gt;<br>         &lt;li&gt;1-1-1<br>           &lt;ul&gt;<br>             &lt;li&gt;1-1-1-1&lt;&#47;li&gt;<br>           &lt;&#47;ul&gt;<br>         &lt;&#47;li&gt;<br>       &lt;&#47;ul&gt;<br>     &lt;&#47;li&gt;<br>   &lt;&#47;ul&gt;<br> &lt;&#47;li&gt;<br>&lt;&#47;ul&gt;<br>&lt;&#47;body&gt;<br>&lt;&#47;html&gt;<br><br>max(),min(),clamp() 浏览器基本都不支持","like_count":2},{"had_liked":false,"id":74177,"user_name":"yeoman","can_delete":false,"product_type":"c1","uid":1005460,"ip_address":"","ucode":"B70142CEE84C17","user_header":"https://static001.geekbang.org/account/avatar/00/0f/57/94/f58bc6f3.jpg","comment_is_top":false,"comment_ctime":1552133462,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"10142068054","product_id":100023201,"comment_content":"那位提问tag是什么的同学应该是问304请求那块提到的tag，温大指的是协商缓存中的etag（entity tag","like_count":2,"discussions":[{"author":{"id":1266698,"avatar":"https://static001.geekbang.org/account/avatar/00/13/54/0a/9a002ad5.jpg","nickname":"Adam Lau","note":"","ucode":"7E542D6E789500","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":342887,"discussion_content":"难道不是一个东西吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1610867217,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":108570,"user_name":"Helen","can_delete":false,"product_type":"c1","uid":1373645,"ip_address":"","ucode":"0BCFCC8CC0C7C2","user_header":"https://static001.geekbang.org/account/avatar/00/14/f5/cd/37c48de7.jpg","comment_is_top":false,"comment_ctime":1561803545,"is_pvip":false,"replies":[{"id":"58929","content":"可以不合成直接画，效率低而已。<br>当然现代浏览器是不可能跳过这一步的。","user_name":"作者回复","user_name_real":"winter","uid":"1268524","ctime":1574221580,"ip_address":"","comment_id":108570,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5856770841","product_id":100023201,"comment_content":"为什么对位图的合成是一个可选的过程，浏览器的composite 不是一定会执行的么，我以为这一步是无法不执行的","like_count":1,"discussions":[{"author":{"id":1268524,"avatar":"https://static001.geekbang.org/account/avatar/00/13/5b/2c/12bfd3cd.jpg","nickname":"winter","note":"","ucode":"2B068EDEAFEB56","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":456045,"discussion_content":"可以不合成直接画，效率低而已。\n当然现代浏览器是不可能跳过这一步的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574221580,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":91796,"user_name":"coder","can_delete":false,"product_type":"c1","uid":1059952,"ip_address":"","ucode":"F70511D614B9F4","user_header":"https://static001.geekbang.org/account/avatar/00/10/2c/70/02b627a6.jpg","comment_is_top":false,"comment_ctime":1557108763,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"5852076059","product_id":100023201,"comment_content":"TCP 连接工具（安装方法）<br><br>这个位置是不是原本打算加个安装方法的链接？","like_count":1,"discussions":[{"author":{"id":1387754,"avatar":"https://static001.geekbang.org/account/avatar/00/15/2c/ea/810a5c60.jpg","nickname":"没逻辑的水货","note":"","ucode":"ED7B93CF5B3474","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":471,"discussion_content":"https://blog.csdn.net/yerenyuan_pku/article/details/52611600 安装telnet教程","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1561606228,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":69105,"user_name":"liu志远","can_delete":false,"product_type":"c1","uid":1075249,"ip_address":"","ucode":"5C2A3DC5293408","user_header":"https://static001.geekbang.org/account/avatar/00/10/68/31/6212db56.jpg","comment_is_top":false,"comment_ctime":1550663077,"is_pvip":false,"replies":[{"id":"25801","content":"一般这种情况是被劫持了，可以用抓包工具看一下。","user_name":"作者回复","user_name_real":"winter","uid":"1268524","ctime":1551423623,"ip_address":"","comment_id":69105,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5845630373","product_id":100023201,"comment_content":"https在实际环境经常会部分用户遇到ssl handshake fail的错误，前辈能否提示下调试方法","like_count":1,"discussions":[{"author":{"id":1268524,"avatar":"https://static001.geekbang.org/account/avatar/00/13/5b/2c/12bfd3cd.jpg","nickname":"winter","note":"","ucode":"2B068EDEAFEB56","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":439951,"discussion_content":"一般这种情况是被劫持了，可以用抓包工具看一下。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1551423623,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":66775,"user_name":"小农民","can_delete":false,"product_type":"c1","uid":1392437,"ip_address":"","ucode":"341AE3BCC9496F","user_header":"https://static001.geekbang.org/account/avatar/00/15/3f/35/a0779820.jpg","comment_is_top":false,"comment_ctime":1550019523,"is_pvip":false,"replies":[{"id":"23827","content":"tag就是标签，也就是你写HTML时用尖括号括起来的东西。","user_name":"作者回复","user_name_real":"winter","uid":"1268524","ctime":1550142887,"ip_address":"","comment_id":66775,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5844986819","product_id":100023201,"comment_content":"老师您好 tag是什么 之前没听说过 可以解释一下吗","like_count":1,"discussions":[{"author":{"id":1268524,"avatar":"https://static001.geekbang.org/account/avatar/00/13/5b/2c/12bfd3cd.jpg","nickname":"winter","note":"","ucode":"2B068EDEAFEB56","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":438902,"discussion_content":"tag就是标签，也就是你写HTML时用尖括号括起来的东西。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1550142887,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":358652,"user_name":"老纪程序","can_delete":false,"product_type":"c1","uid":1585340,"ip_address":"山东","ucode":"ED94898D441854","user_header":"https://static001.geekbang.org/account/avatar/00/18/30/bc/0233b519.jpg","comment_is_top":false,"comment_ctime":1664518756,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1664518756","product_id":100023201,"comment_content":"https:&#47;&#47;developer.mozilla.org&#47;zh-CN&#47;docs&#47;Web&#47;HTTP&#47;Basics_of_HTTP&#47;Identifying_resources_on_the_Web<br>这个网址http写的还是很详细的","like_count":0},{"had_liked":false,"id":336304,"user_name":"Geek_6056b7","can_delete":false,"product_type":"c1","uid":2884805,"ip_address":"","ucode":"1A3799BEBC37BE","user_header":"","comment_is_top":false,"comment_ctime":1646059343,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1646059343","product_id":100023201,"comment_content":"语音中有一点讲错了，这里纠正一下。Expries是用于强缓存的，服务器返回过期时间，浏览器端存下来，下次请求时根据过期时间判断是直接取本地缓存还是发送请求。而Last-Modified才是和If-Modified-Since配套的，用于协商缓存，服务端返回Last-Modified，浏览器存下来，下次请求的时候作为If-Modified-Since传给服务端，服务器端再判断是否使用缓存，是则返回304，否则返回新的数据。","like_count":0},{"had_liked":false,"id":286650,"user_name":"Geek_eef5c6","can_delete":false,"product_type":"c1","uid":2549772,"ip_address":"","ucode":"14271D54E8C464","user_header":"","comment_is_top":false,"comment_ctime":1617454836,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1617454836","product_id":100023201,"comment_content":"HTTP1.1 就已经支持TCP的连接复用了吧.  HTTP2.0 头部压缩,多路复用,二进制传输,服务器推送等 都很重要啊.  而且401 是 未授权,403 是禁止访问.","like_count":0},{"had_liked":false,"id":281528,"user_name":"Alan He","can_delete":false,"product_type":"c1","uid":2033513,"ip_address":"","ucode":"A0780F4619D388","user_header":"https://static001.geekbang.org/account/avatar/00/1f/07/69/43cf2251.jpg","comment_is_top":false,"comment_ctime":1614775346,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1614775346","product_id":100023201,"comment_content":"其实402状态码也很有意思，只是国内的网站不怎么用，国外在支付类网站会遇到，意味着支付。<br><br>payment required","like_count":0},{"had_liked":false,"id":240534,"user_name":"2am","can_delete":false,"product_type":"c1","uid":2063363,"ip_address":"","ucode":"EB5D29E901627A","user_header":"https://static001.geekbang.org/account/avatar/00/1f/7c/03/2a64ecd9.jpg","comment_is_top":false,"comment_ctime":1596962432,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1596962432","product_id":100023201,"comment_content":"老师请问一下我用window自带的telnet来模拟您文中的请求好像不行，输不了GET那段字符，也输不了任何字符，返回400，请问是什么原因呢","like_count":0},{"had_liked":false,"id":236708,"user_name":"苏苏三","can_delete":false,"product_type":"c1","uid":2067888,"ip_address":"","ucode":"979559E6FCBE15","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Tsd3bC2mpHZVkicnFWJPvvEdibCvEtQTB9r02h4wyXVOTlP0xLA3Ek5BBiaRcxtYQynMLgXQhiaLfGquRrcNMtHJiag/132","comment_is_top":false,"comment_ctime":1595506933,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1595506933","product_id":100023201,"comment_content":"到这一章终于能听懂了","like_count":0},{"had_liked":false,"id":88574,"user_name":"融梨","can_delete":false,"product_type":"c1","uid":1033405,"ip_address":"","ucode":"66D0A4054612C6","user_header":"https://static001.geekbang.org/account/avatar/00/0f/c4/bd/72180435.jpg","comment_is_top":false,"comment_ctime":1555944628,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1555944628","product_id":100023201,"comment_content":"现在工作中，只用到了HTTP协议。","like_count":0},{"had_liked":false,"id":87050,"user_name":"静静","can_delete":false,"product_type":"c1","uid":1492217,"ip_address":"","ucode":"8B8B93DD7D69F2","user_header":"https://static001.geekbang.org/account/avatar/00/16/c4/f9/503b2488.jpg","comment_is_top":false,"comment_ctime":1555503573,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1555503573","product_id":100023201,"comment_content":"HTTP 标准由 IETF 组织制定，跟它相关的标准主要有两份：<br>1. HTTP 1.1<br>2. HTTP 1.1<br><br>这里的2是缓存部分么？……","like_count":0},{"had_liked":false,"id":81420,"user_name":"咸菜有点儿甜","can_delete":false,"product_type":"c1","uid":1114454,"ip_address":"","ucode":"AD1CBF968FB580","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epRK5v3IkvSfuB7fT0DT06L43mLVheG4VLEFMMuR59pmvOkhrnD0XRKXBNfHD7naBTYhcRUd2N6fg/132","comment_is_top":false,"comment_ctime":1553910626,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1553910626","product_id":100023201,"comment_content":"Http1.1默认是开启keep-alive的，到http2意思是需要手动加入这个头么？","like_count":0},{"had_liked":false,"id":78044,"user_name":"忠誠","can_delete":false,"product_type":"c1","uid":1378887,"ip_address":"","ucode":"49DA4E48020B80","user_header":"https://static001.geekbang.org/account/avatar/00/15/0a/47/e67fa41d.jpg","comment_is_top":false,"comment_ctime":1553061603,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1553061603","product_id":100023201,"comment_content":"Content-Type 几种常用的不同之处","like_count":0},{"had_liked":false,"id":65992,"user_name":"阿汤哥","can_delete":false,"product_type":"c1","uid":1204393,"ip_address":"","ucode":"FBF3943D16352C","user_header":"https://static001.geekbang.org/account/avatar/00/12/60/a9/6d2137dc.jpg","comment_is_top":false,"comment_ctime":1549844414,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1549844414","product_id":100023201,"comment_content":"老师，上次直播提到增加性能的方法或者套路能否细节请教","like_count":0}]}