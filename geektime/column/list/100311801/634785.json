{"id":634785,"title":"33｜分析模式初探：怎样解决更复杂的问题？","content":"<p>你好，我是钟敬。</p><p>学习完前面的课程，再经过一定的练习，相信你就有能力运用 DDD 来开发中等难度的系统了。不过，如果遇到更复杂的业务领域，还需要更深入的建模技能。</p><p>这节课，我们就来探索一个能帮你加强领域建模技能的利器——分析模式。</p><p>《分析模式》是Martin Fowler 写的一本领域建模的专著。《领域驱动设计》一书的第 11 章也介绍了怎样通过分析模式建立深层次的领域模型。</p><p>如果你对分析模式还不了解，也没关系，还是老办法，我们回到迭代三的需求场景里，从解决需求开始，一步一步地理解到底什么是分析模式。</p><h2>组织层级模式</h2><p>这个迭代有几个“人员和组织管理”方面的需求，我们就从这里开始吧。</p><p>先回顾一下之前组织管理相关的模型。</p><p><img src=\"https://static001.geekbang.org/resource/image/5y/de/5yy084b29978c7f6bd8a93d25ac2a6de.jpg?wh=3733x2001\" alt=\"\"></p><p>为了和《分析模式》中的提法吻合，我把原来的<strong>组织类别</strong>改成了<strong>组织类型</strong>，意思并没有变。<strong>组织类型</strong>是可以灵活定义的。这是因为，“企业”“开发中心”等等，都可以定义在<strong>组织类型</strong>表里。</p><p>其实，这种结构已经是一种比较简单的分析模式了，称为“组织层级”（Organization Hierachies）模式，出自《分析模式》一书的2.2节。不过无法完全满足我们的需求。所以，我们来做一些进一步的扩展。</p><p>在这个模型里，有关组织层级的业务规则，比如说“开发组的上级只能是开发中心”，还不能通过表来定义，只能硬编码在程序里。这样的话，组织的层级关系仍然无法完全灵活定义，并不符合我们对 SaaS 应用的期望，所以，我们首先要解决的是<strong>灵活定义组织层级的关系</strong>。</p><!-- [[[read_end]]] --><p>为了说明这个问题，我们考虑一个更复杂的组织。假设有一家大型银行。下面是它的组织结构的一小部分。</p><p><img src=\"https://static001.geekbang.org/resource/image/67/d7/67439a219ee07c22a4ab5aa70645f0d7.jpg?wh=2987x2260\" alt=\"\"></p><p>这并不是一张正规的UML 图，而是我“自创”的一种非正式表示法，姑且称为“组织结构图”。目的是用比较形象的方式，辅助我们理解问题。图里的每个圆角矩形代表一个组织，里面有组织的名称，圆括号里是组织类型。</p><p>我们可以看到，总公司下面有信息技术部和财务部，这两个部门都是总公司一级部门。信息技术部下面有若干开发中心，一个开发中心下面有若干开发团队，一个开发团队下面有若干开发组。</p><p>从这个图里面，我们可以抽取出四条业务规则。</p><p>1.企业没有上级。<br>\n2.总公司一级部门的上级是企业。<br>\n3.开发中心的上级是总公司信息技术部。<br>\n4.开发团队的上级是开发中心。</p><p>那么，怎么在领域模型里为这些规则建模呢？首先我们考虑一下，这些规则是<strong>组织</strong>之间的关系，还是<strong>组织类型</strong>之间的关系？</p><p>答案是<strong>组织类型</strong>之间的关系。比如说，上面第三条规则里提到的是“开发中心”这个组织类型，而不是“零售中心”这个具体的组织。</p><p>在正式建立领域模型之前，我们还是先画一个非正式的模型图，深入理解一下<strong>组织类型</strong>的关系。</p><p><img src=\"https://static001.geekbang.org/resource/image/ey/5d/eyy55721bc077cb352bd0224093ea15d.jpg?wh=2987x2260\" alt=\"\"></p><p>我们姑且把这个图称为“组织类型图”。椭圆表示组织类型。椭圆间的连线，反映了前面的业务规则所描述的不同组织类型间的约束关系。</p><p>但是，你可能已经发现这里出现了两个问题。</p><p>第一个问题是，“总公司信息技术部”到底是<strong>组织</strong>还是<strong>组织类型</strong>。在前面的组织结构图里，信息技术部显然是<strong>组织</strong>。但是现在我们想表达“开发中心上级是总公司信息技术部”，而“开发中心”是<strong>组织类型</strong>。</p><p>那么相应的，“总公司信息技术部”是不是也应该是一个<strong>组织类型</strong>呢？</p><p>其实两种理解都说得通，也就是说这里有两种可行的策略。</p><p>第一种，有一个叫“总公司信息技术部”的<strong>组织类型</strong>，这个类型下只有一个<strong>组织</strong>，也叫“总公司信息技术部”。</p><p>第二种，“总公司信息技术部”只是一个<strong>组织</strong>，不是<strong>组织类型</strong>，这时候，为了说明“开发中心上级是总公司信息技术部”，就要在“开发中心”这个<strong>组织类型</strong>和“总公司信息技术部”这个<strong>组织</strong>之间建立约束关系。</p><p>考虑到“类型对类型，组织对组织”可能更容易理解一些，所以这里我们选择第一种策略。</p><p>第二个问题是，仅仅按前面的四条规则的字面意思，企业和总公司信息技术部在图里就没有连上。这是因为这四条规则里没有直接规定“企业”和“总公司信息技术部”的关系。</p><p>比较完善的做法应该是描述出“总公司信息技术部<strong>是</strong>总公司一级部门”这一事实。不过现在我们先简化一点，“简单粗暴”地增加一条规则“总公司信息技术部的上级是企业”。至于更完美的做法，我们后面再讨论。</p><p>那么组织类型图就变成了后面这样。</p><p><img src=\"https://static001.geekbang.org/resource/image/cf/62/cfdf67ea304d335eff9dee844aa98762.jpg?wh=2987x2260\" alt=\"\"></p><p>这时候我们发现，其实<strong>组织类型</strong>的上下级之间也是一对多关系。企业下面可以有两个<strong>组织类型</strong>，信息技术部和总公司一级部门，而每个<strong>组织类型</strong>的上级只能是一个<strong>组织类型</strong>。</p><p>好，现在，我们可以画出领域模型了。</p><p><img src=\"https://static001.geekbang.org/resource/image/66/43/66c0a379e038b980741292f73970eb43.jpg?wh=3733x1794\" alt=\"\"></p><p>可以看到，我们在<strong>组织类型</strong>上加了一个一对多的自我关联，用来表示组织类型的上下级关系。准确地说，其实是<strong>组织类型</strong>下，<strong>组织</strong>之间的约束关系。这样，根据这个模型，可以在数据库里建一个<strong>组织类型</strong>表，这样就可以<strong>灵活定义组织层级关系</strong>，而不需要硬编码了。</p><p>让我们回味一下，假如我们一上来就用 UML 的类图进行领域建模，有些细微之处就不那么容易想清楚了。比如说，“总公司信息技术部”是组织还是组织类型的问题。所以，你可以再体会一下非正式模型的用处。</p><h2>组织结构模式</h2><p>我们接着讨论在本迭代引入的一个需求：一个组织可以处于多个组织结构里。比如说，总公司有信息技术部，分公司也有信息技术部。那么，分公司的信息技术部，既受到分公司的管理，也受到总公司信息技术部的管理。这时候，分公司信息技术部就处在两个组织结构，或者说两棵组织树里面了。</p><p>还是先用后面这个非正式的组织结构图来表达。</p><p><img src=\"https://static001.geekbang.org/resource/image/f4/13/f4e7b36622b56f9d668b2b1240af1013.jpg?wh=3733x2260\" alt=\"\"></p><p>从图里可以看到，“北京分公司信息技术部”有两个上级组织。也就是说，组织之间的上下级关系不再是一对多的，而是<strong>多对多</strong>的。一个上级可以有多个下级，一个下级也可以有多个上级。但是不能存在循环关系。也就是如果 A 是 B 的上级，B 又是 C 的上级，那么 C 就不能是 A 的上级。这种关系，在图论里称为“有向无环图”。</p><p>类似地，<strong>组织类型</strong>之间的上下级关系也变成了多对多。</p><p><img src=\"https://static001.geekbang.org/resource/image/2a/74/2a57712b9bc950d1394ab5159802b774.jpg?wh=3733x2260\" alt=\"\"></p><p>这两种多对多的关系，表现在领域模型图里就是后面这样。</p><p><img src=\"https://static001.geekbang.org/resource/image/4b/14/4be8087040071c2db212b10ddb275b14.jpg?wh=3733x1801\" alt=\"\"></p><p>我们看到，上级类型和上级组织上面的多重性，原来是“0..1”，现在都变成了“0..*”。也就是由一对多关联变成了多对多关联。</p><p>现在我们再增加一个需求——保留组织上下级关系的变更历史。那么，就要保存上下级关系的时间段。这个时间段并不是组织的属性，而是上下级之间多对多关联的属性，这时候，我们就要把多对多关联拆成两个一对多关联了。</p><p><img src=\"https://static001.geekbang.org/resource/image/b3/cb/b36fc1a1109f3601c58bdc8effb49dcb.jpg?wh=3733x2498\" alt=\"\"></p><p>我们把表示<strong>组织</strong>间多对多关联的实体称为“组织结构”。这种表示组织间多对多关联的方法，就称为<strong>组织结构（organization structure）模式</strong>。</p><p><strong>组织结构</strong>实体的每个实例，实际上就对应着组织结构图里的每一条线，你可以对照后面的示意图来理解。</p><p><img src=\"https://static001.geekbang.org/resource/image/0d/03/0d0d8b79b71711f3b657d1699ae2ea03.jpg?wh=3733x2155\" alt=\"\"></p><p>不过，这个模型还没有把“分公司信息技术部处在两个组织结构树里”这件事说清楚。</p><p>现在我们假定把“北京分公司信息技术部的上级是北京分公司，北京分公司的上级是总公司”这个组织结构树称为“公司线”，把“北京分公司信息技术部的上级是总公司信息技术部，总公司信息技术部的上级是总公司”这个组织结构树称为“职能线”。</p><p>然后，我们把这两个组织结构树的名称体现在组织结构图里，就成了后面这样。</p><p><img src=\"https://static001.geekbang.org/resource/image/f3/da/f33b65f21b329b07edeb49d00bdf14da.jpg?wh=3733x2260\" alt=\"\"></p><p>在这个图里面，我们把组织结构树的名称写在中括号里面。其中可以看到，“北京分公司信息技术部”和“总公司”都同时处在两棵树。</p><p>为了看清楚这一点，我们还可以把这个图拆成两张图。</p><p><img src=\"https://static001.geekbang.org/resource/image/f4/6b/f4f2a80049222d5ea0d298266c0c4b6b.jpg?wh=3878x2260\" alt=\"\"></p><p>左边的图专门表示职能线，右边的图专门表示公司线。</p><p>现在，我们给“职能线”“公司线”这两个名词背后的概念起一个名字，就叫做<strong>组织结构类型</strong>吧。组织结构类型也是一个领域对象。为了更好地体现这一点，我们重新画一次组织结构图。</p><p><img src=\"https://static001.geekbang.org/resource/image/92/ab/92597d9d3eb8ee7b2968e3d5483e31ab.jpg?wh=3733x2260\" alt=\"\"></p><p>我们用六边形表示<strong>组织结构类型</strong>。前面已经讲过，这个图里的实线，代表了<strong>组织结构</strong>的实例。那么结合图片不难发现，<strong>组织结构类型</strong>和<strong>组织结构</strong>具有一对多的关联。把<strong>组织结构类型</strong>和这个一对多关联增加到领域模型图中，就是这样：</p><p><img src=\"https://static001.geekbang.org/resource/image/da/5f/dabe06fcf2d80b80957c34becd08615f.jpg?wh=3733x2345\" alt=\"\"></p><p>通过<strong>组织结构类型</strong>和<strong>组织结构</strong>，就可以表示一个<strong>组织</strong>处在多个组织结构树中的事实了。</p><p>那么，<strong>组织结构类型</strong>和<strong>组织类型</strong>之间有没有什么关系呢？我们再画一张示意图。</p><p><img src=\"https://static001.geekbang.org/resource/image/c7/42/c7e267184d7b3f4d42434a8aca450a42.jpg?wh=3733x2322\" alt=\"\"></p><p>在理解了<strong>组织结构类型</strong>和<strong>组织结构</strong>之间的关系以后，这里的关系也就容易理解了。为了表达这种关联，在领域模型图里，我们也要把<strong>组织类型</strong>自身的多对多关联，拆成两个一对多关联，表示关联的实体可以叫做<strong>组织类型结构</strong>，对应的模型图是后面这样。</p><p><img src=\"https://static001.geekbang.org/resource/image/cf/d0/cfcb1dd5dff7478fb27e173d06eeb1d0.jpg?wh=3733x2260\" alt=\"\"></p><p>按照这个模型，“职能线”的组织结构将受到“职能线”对应的组织类型结构的约束；“公司线”的组织结构将受到“公司线”对应的组织类型结构的约束。这样就可以灵活地定义各种组织层级关系和相应的约束了。事实上，这个模型也用到了我们一会要讲的“分层责任”模式的思路，你先有个印象就可以了。</p><h2>知识层模式</h2><p>你有没有觉得，虽然上面模型图的领域对象并不多，但已经有一点不太好理解了。</p><p>其实，这张图实际上是组织人员管理模型图的一部分（后者要更大）。如果把这张图放回整个组织和人员管理模型，就更容易混乱了。这里我再介绍一个看起来简单，实际上很重要的方法，可以帮助我们提高模型的清晰程度。你可以结合后面的模型图来理解。</p><p><img src=\"https://static001.geekbang.org/resource/image/bc/eb/bc373ee57f41f100dd5db61754952aeb.jpg?wh=3733x2260\" alt=\"\"></p><p>在这张图里，我们用一条虚线把这张图分成上下两部分。上面的部分叫做<strong>知识层</strong>（knowledge level），下面的部分叫<strong>操作层</strong>（operational level）。知识层里放的是定义性的对象，通常变化频率比较低。而操作层里的对象则用于日程业务操作，变化频率比知识层高得多。</p><p>“知识层”这个模式在《分析模式》2.5节第一次引入。在《领域驱动设计》的 16.4 节也介绍过。由于这个模式用于处理比较复杂的模型，所以《领域驱动设计》把它归为一种战略设计模式。</p><h2>参与方类型泛化模式</h2><p>现在我们来解决刚才的一个遗留问题。我把讨论组织层级时的组织结构图再贴一遍。</p><p><img src=\"https://static001.geekbang.org/resource/image/1f/90/1fef330cd3449029a7009b5eb6645e90.jpg?wh=2730x2260\" alt=\"\"></p><p>刚才，我们为了简化，暂时省略了“总公司信息技术部是总公司一级部门”这个领域知识。事实上财务部也有类似的情况，我们用下面的组织类型图表达出这种关系。</p><p><img src=\"https://static001.geekbang.org/resource/image/f1/71/f14dd4b9c83c95db3fa4b1b1d6ceae71.jpg?wh=2987x2260\" alt=\"\"></p><p>图里面<strong>组织类型</strong>之间的实线表示之前的上下级关系，而虚线表示“是一种”关系，实际上就是我们讲泛化时说的分类关系。也就是说，总公司一级部门分成了若干类，其中一类是“总公司信息技术部”，另一类是“总公司财务部”。这种分类，实际上是组织类型之间的一种一对多关联。</p><p>现在我们用领域模型图来表示出这种关系。</p><p><img src=\"https://static001.geekbang.org/resource/image/a1/d6/a10bff53366f2a076a82d60ba66811d6.jpg?wh=3733x2315\" alt=\"\"></p><p>我们在组织类型上加了一个指向自身的一对多关联，来表示这种分类关系。Martin Fowler 把所有分类关系都称为“泛化”，他又把<strong>组织</strong>看作一种<strong>参与方</strong>（party），所以把这种模式称为“参与方类型泛化”（party type generalizations）。暂时不明白什么是参与方也不要担心，我们一会就会讲到。</p><h2>一个员工属于多个组织</h2><p>好，我们这就来解决迭代三里最后一个遗留的需求：员工可以属于多个组织。比如说对于一些矩阵式管理的企业，一个员工既属于他所在的行政组织，又属于某个临时组建的项目团队，还属于某个兴趣小组。</p><p>解决这个需求本身是比较简单的。像后面这样处理就可以了。</p><p><img src=\"https://static001.geekbang.org/resource/image/51/78/5188d76128e90798b6c69879f0b3bc78.jpg?wh=3388x2596\" alt=\"\"></p><p>我们把<strong>组织</strong>和<strong>员工</strong>之间原来的一对多关联变成多对多关联就可以了。</p><h2>参与方模式</h2><p>为了拓宽你的视野，我们不妨按照分析模式，再往前摸索一下。Martin Folwer 认为，在某些场合，可以发现个人和组织具有共性，可以统称为<strong>参与方（party）</strong>。你可以对照后面的模型图来理解。</p><p><img src=\"https://static001.geekbang.org/resource/image/31/28/31a712c3779030a4c92b19f10786d728.jpg?wh=2282x1640\" alt=\"\"></p><p>“参与方”模式是在《分析模式》2.1节介绍的。其实我们在<a href=\"https://time.geekbang.org/column/article/627635\">第25课</a>讲泛化实现的时候，已经见过这个模式了。只不过在那时，我们是把<strong>个人客户</strong>和<strong>企业客户</strong>统称为<strong>客户</strong>，两者思路是一样的。</p><h2>分层责任模式</h2><p>Martin Fowler 进一步发现，人和组织的归属关系、组织和组织间的上下级关系，人与人之间的契约关系等等，可以统一看成是一种“责任”（accountability）关系。</p><p>比如说，员工属于一个部门，那么员工就对部门负有完成部门下达的任务的责任。部门是委托方，员工是责任方。开发中心的上级是信息技术部，那么开发中心对信息技术部也有完成上级部门目标的责任。信息技术部是委托方，开发中心是责任方。因此这些关系是同构的。</p><p>如果用<strong>参与方</strong>代替<strong>组织</strong>和<strong>员工</strong>，用<strong>责任</strong>代替<strong>组织结构</strong>，用<strong>委托方</strong>代替<strong>上级</strong>，用<strong>责任方</strong>代替<strong>下级</strong>，那么前面组织和人员的模型图就变成了这样。</p><p><img src=\"https://static001.geekbang.org/resource/image/eb/99/eb714560981a491d5da3aa2ed334fa99.jpg?wh=3359x2349\" alt=\"\"></p><p>这就是“分层责任”（hierarchic accountability）模式，出自《分析模式》2.7节。</p><p>课程里的这张图和原书里有少许出入，不过基本思路是一样的。今天的需求，其实都可以用这个模型表达，而且这个模型比这些需求普适性更强。如果你还不能完全理解这一点，可以课后再回味一下，我相信经过耐心的思考，你一定可以理解。</p><p>其实对于我们目前的需求，还用不到这么抽象的模型。这里只是从学习的角度，为你延伸一下。如果在我们目前的项目里直接用这个模式，反而有点过度设计了。</p><h2>总结</h2><p>《分析模式》是 Martin Fowler 把实践中复杂的领域模型进行了提炼，形成的一系列解决方案。通过学习分析模式，可以使我们掌握更高级的建模技能。</p><p>之所以叫做分析模式，是因为这些模式都是用来为业务概念建模的，在软件工程中属于“分析”层面。这和没有具体业务概念的“设计模式”形成了鲜明的对比。</p><p>这节课我们为了解决组织和人员管理方面更灵活的需求，分别采用了<strong>组织层级模式</strong>、<strong>组织结构模式</strong>和<strong>知识层模式</strong>。另外作为拓展，我也带你了解了<strong>参与方模式</strong>和<strong>分层责任模式</strong>。</p><p>这些模式都来自于分析模式第 2 章“责任”。而《领域驱动设计》第 11 章“应用分析模式”则是以《分析模式》第 6 章“存货与会计”为例来讲的。课后你可以对照阅读这些内容。</p><p><img src=\"https://static001.geekbang.org/resource/image/df/a8/df7de82f8180ee38268c08195a73daa8.jpg?wh=3253x1483\" alt=\"\"></p><p>由于分析模式比较抽象，只靠领域模型的话，不容易理解。所以这节课用了几种非正式的模型图来辅助。非正式模型图没有什么专门的规定，你也可以设计自己的图。《领域驱动设计》一书也强调过非正式模型图的作用。它们和采用 UML 绘制的正规领域模型图的作用是互补的。</p><p>分析模式一书中给出了很多非常抽象的模型，但这并不意味着实际项目里的模型越抽象越好。应该根据实际需求把握抽象程度，避免过度设计。</p><p>最后我们再来探讨一个问题：《领域驱动设计》一书也介绍了大量模式，这和“分析模式”中的模式有什么区别呢？</p><p>其实，《领域驱动设计》侧重的是领域建模的普遍原理和通用模式，但对于不同业务领域中的具体模型介绍得还不多。我们想要掌握高级的建模技能，一个比较好的方式，就是看看前人已经处理过哪些复杂的领域，为这些领域建立的模型到底长什么样，建立这些模型的思考过程又是怎样的。这些正是《分析模式》的内容。</p><p>今天我们只是初步探索了分析模式。如果这些内容引起了你的兴趣，不妨课后找到原书钻研一下。</p><h2>思考题</h2><p>下面给你留两道思考题。</p><p>1.学习分析模式的一个有效手段就是把它实现出来。你可以尝试为今天学到的领域模型设计数据库表，再写一些代码吗？</p><p>2.可否为你所在的业务领域设计几种非正式的模型图？</p><p>好，今天的课程结束了，有什么问题欢迎你在评论区留言。下节课，我们聊一些技术之外的话题——如何在实践中推广DDD。</p>","comments":[{"had_liked":false,"id":369428,"user_name":"6点无痛早起学习的和尚","can_delete":false,"product_type":"c1","uid":1703256,"ip_address":"北京","ucode":"33A8A1CDA103F9","user_header":"https://static001.geekbang.org/account/avatar/00/19/fd/58/1af629c7.jpg","comment_is_top":false,"comment_ctime":1677544567,"is_pvip":false,"replies":[{"id":134764,"content":"加油","user_name":"作者回复","user_name_real":"编辑","uid":1288110,"ctime":1677929333,"ip_address":"广东","comment_id":369428,"utype":1}],"discussion_count":4,"race_medal":0,"score":2,"product_id":100311801,"comment_content":"完犊子，这章读起来更费劲了","like_count":6,"discussions":[{"author":{"id":1288110,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/VBLEAcychgbs5CicUczSYcibicoicZmyk1JHHFiae94KuvVsibAKtcQAvnOPWp0C4yvia8mzvQAORiazjWSoc1XQ9QkLrQ/132","nickname":"钟敬","note":"","ucode":"20B3D31A2C8C86","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":607518,"discussion_content":"加油","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1677929333,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"广东","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1588683,"avatar":"https://static001.geekbang.org/account/avatar/00/18/3d/cb/791d0f5e.jpg","nickname":"猴哥","note":"","ucode":"63A1BFDF13D85D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":650120,"discussion_content":"哈哈哈，完犊了。😂","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1724398583,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"浙江","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2275516,"avatar":"https://static001.geekbang.org/account/avatar/00/22/b8/bc/5f4c9cb2.jpg","nickname":"掂过碌蔗","note":"","ucode":"6D9080A2B225AE","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":641224,"discussion_content":"这章真的看得懵了，先不看了，后面再看。。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1712392605,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"广东","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1501385,"avatar":"https://static001.geekbang.org/account/avatar/00/16/e8/c9/59bcd490.jpg","nickname":"听水的湖","note":"","ucode":"B1759F90165D81","race_medal":0,"user_type":8,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":607008,"discussion_content":"分析模式用于应对更复杂的业务领域，复杂一点不奇怪，慢慢消化，想通和想不通的都可以分享出来一起交流～","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1677552220,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":370354,"user_name":"赵晏龙","can_delete":false,"product_type":"c1","uid":2673605,"ip_address":"湖南","ucode":"F15730BCA97EE0","user_header":"https://static001.geekbang.org/account/avatar/00/28/cb/c5/c1d7ca5e.jpg","comment_is_top":false,"comment_ctime":1678756369,"is_pvip":false,"replies":[{"id":135082,"content":"读书千遍，其义自见😃","user_name":"作者回复","user_name_real":"编辑","uid":1288110,"ctime":1678842647,"ip_address":"广东","comment_id":370354,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100311801,"comment_content":"很巧，放了快一个月的《分析模式》昨晚上再次试图啃了一遍第二章，发现竟然有所突破了。突然就理解了知识层和操作层的区别。今天再读这篇，感觉更细致了。","like_count":3,"discussions":[{"author":{"id":1288110,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/VBLEAcychgbs5CicUczSYcibicoicZmyk1JHHFiae94KuvVsibAKtcQAvnOPWp0C4yvia8mzvQAORiazjWSoc1XQ9QkLrQ/132","nickname":"钟敬","note":"","ucode":"20B3D31A2C8C86","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":609108,"discussion_content":"读书千遍，其义自见😃","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1678842647,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"广东","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":369473,"user_name":"Michael","can_delete":false,"product_type":"c1","uid":1015222,"ip_address":"陕西","ucode":"27EB4A725CE14E","user_header":"https://static001.geekbang.org/account/avatar/00/0f/7d/b6/abdebdeb.jpg","comment_is_top":false,"comment_ctime":1677573736,"is_pvip":false,"replies":[{"id":134736,"content":"关键这个比较冷门，要考虑一下受众范围。。。","user_name":"作者回复","user_name_real":"编辑","uid":1288110,"ctime":1677920626,"ip_address":"广东","comment_id":369473,"utype":1}],"discussion_count":4,"race_medal":0,"score":2,"product_id":100311801,"comment_content":"老师不然再开一个专栏讲讲《分析模式》这本书吧，😂","like_count":3,"discussions":[{"author":{"id":1288110,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/VBLEAcychgbs5CicUczSYcibicoicZmyk1JHHFiae94KuvVsibAKtcQAvnOPWp0C4yvia8mzvQAORiazjWSoc1XQ9QkLrQ/132","nickname":"钟敬","note":"","ucode":"20B3D31A2C8C86","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":607487,"discussion_content":"关键这个比较冷门，要考虑一下受众范围。。。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1677920626,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"广东","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":1,"child_discussions":[{"author":{"id":1015222,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/7d/b6/abdebdeb.jpg","nickname":"Michael","note":"","ucode":"27EB4A725CE14E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1288110,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/VBLEAcychgbs5CicUczSYcibicoicZmyk1JHHFiae94KuvVsibAKtcQAvnOPWp0C4yvia8mzvQAORiazjWSoc1XQ9QkLrQ/132","nickname":"钟敬","note":"","ucode":"20B3D31A2C8C86","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":612829,"discussion_content":"哈哈哈哈哈哈 我觉得肯定有人看 只要看过你这个专栏的应该都会看","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1680959185,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":607487,"ip_address":"陕西","group_id":0},"score":612829,"extra":""}]},{"author":{"id":1026921,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/ab/69/5f1f0d1c.jpg","nickname":"支离书","note":"","ucode":"AD2570AC5EF7BB","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":611698,"discussion_content":"附议","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1680250584,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1715823,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIaxhA2xdIRKQ0rXZhrjcWPYp4hR1mjST6lcBeuYTg0Omf0hyREfr8VH8JWXEyEVq82ht7wdzWsyA/132","nickname":"Geek_682837","note":"","ucode":"55C29E9EDD9265","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":643835,"discussion_content":"附议","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1714663991,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"广东","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":379170,"user_name":"runmark","can_delete":false,"product_type":"c1","uid":1004144,"ip_address":"山东","ucode":"1360DC018D2D08","user_header":"","comment_is_top":false,"comment_ctime":1691465664,"is_pvip":false,"replies":[{"id":138426,"content":"这是两种不同的关系：\n“组织类型结构”表示的上下级关系，例如：开发中心的上级是信息技术部\n“组织类型上的父类型:子类型的1对多的关系”表示的是一种归类关系，例如：总公司信息技术部是总公司一级部门。\n\n可以再仔细体会一下两者的区别。","user_name":"作者回复","user_name_real":"编辑","uid":1288110,"ctime":1693022451,"ip_address":"广东","comment_id":379170,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100311801,"comment_content":"组织类型上的父类型:子类型的1对多的关系，用组织类别结构就可以表示吧？为什么还要单独划出一条关联线来？感觉这样做复杂度又增加了。","like_count":1,"discussions":[{"author":{"id":1288110,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/VBLEAcychgbs5CicUczSYcibicoicZmyk1JHHFiae94KuvVsibAKtcQAvnOPWp0C4yvia8mzvQAORiazjWSoc1XQ9QkLrQ/132","nickname":"钟敬","note":"","ucode":"20B3D31A2C8C86","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":626506,"discussion_content":"这是两种不同的关系：\n“组织类型结构”表示的上下级关系，例如：开发中心的上级是信息技术部\n“组织类型上的父类型:子类型的1对多的关系”表示的是一种归类关系，例如：总公司信息技术部是总公司一级部门。\n\n可以再仔细体会一下两者的区别。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1693022451,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"广东","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":395593,"user_name":"@","can_delete":false,"product_type":"c1","uid":2662715,"ip_address":"北京","ucode":"DDB934E4C76389","user_header":"https://static001.geekbang.org/account/avatar/00/28/a1/3b/b08088bb.jpg","comment_is_top":false,"comment_ctime":1731333528,"is_pvip":false,"replies":[{"id":143623,"content":"共同进步 ：）","user_name":"作者回复","user_name_real":"编辑","uid":1288110,"ctime":1731396399,"ip_address":"广东","comment_id":395593,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100311801,"comment_content":"做HR业务的，看这个太有感觉了 ","like_count":0,"discussions":[{"author":{"id":1288110,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/VBLEAcychgbs5CicUczSYcibicoicZmyk1JHHFiae94KuvVsibAKtcQAvnOPWp0C4yvia8mzvQAORiazjWSoc1XQ9QkLrQ/132","nickname":"钟敬","note":"","ucode":"20B3D31A2C8C86","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":653676,"discussion_content":"共同进步 ：）","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1731396399,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"广东","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2,\"source\":0}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":373493,"user_name":"fangs","can_delete":false,"product_type":"c1","uid":3314184,"ip_address":"浙江","ucode":"13D1014FBBF853","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/2RTJuIicbjE65TSAuLQSudGolDnjOXW7JicS6SGFFVfjLk1jMZibaHyUgpePBKvbOCwhG1rmX7ibn7CpKIXTgvHUFg/132","comment_is_top":false,"comment_ctime":1682574678,"is_pvip":false,"replies":[{"id":136595,"content":"继续努力 ：）","user_name":"作者回复","user_name_real":"编辑","uid":1288110,"ctime":1683295966,"ip_address":"广东","comment_id":373493,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100311801,"comment_content":"这节课看了好几遍才有一点点明白","like_count":0,"discussions":[{"author":{"id":1288110,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/VBLEAcychgbs5CicUczSYcibicoicZmyk1JHHFiae94KuvVsibAKtcQAvnOPWp0C4yvia8mzvQAORiazjWSoc1XQ9QkLrQ/132","nickname":"钟敬","note":"","ucode":"20B3D31A2C8C86","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":617077,"discussion_content":"继续努力 ：）","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1683295966,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"广东","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":372351,"user_name":"Geek_7d539e","can_delete":false,"product_type":"c1","uid":2037654,"ip_address":"广东","ucode":"0D116E904D616E","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIVvyFCLRcfoWfiaJt99K0wiabvicWtQaJdSseVA6QqWyxcvN5nd2TgZqiaUACc94bBvPHZTibnfnZfdtQ/132","comment_is_top":false,"comment_ctime":1681012522,"is_pvip":false,"replies":[{"id":136139,"content":"你好呀，其实没有任何一本书或一门课包含了这两本书的所有知识。之前没有，未来估计也不会有。这是因为每本书和每门课都有自己的侧重点。本课程侧重点是带大家入门DDD。没有包含的知识需要大家进一步努力。就《领域驱动设计》而言，本课程没有包含“精炼”和“大型结构”。就《分析模式》而言，原书中每一章都有大量的模式，这些不是本课程的重点，你可以在理解本课程的基础上，进一步找原书学习。学习中如果有困难，可以在微信交流群里继续讨论。","user_name":"作者回复","user_name_real":"编辑","uid":1288110,"ctime":1681633909,"ip_address":"广东","comment_id":372351,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100311801,"comment_content":"钟敬老师的本课程是否都包含了《领域驱动设计》、《分析模式》两边书的所有知识，如果没有，缺少了哪些部分的知识，这些“没有介绍的知识”为啥没有在本课程介绍呢？","like_count":0,"discussions":[{"author":{"id":1288110,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/VBLEAcychgbs5CicUczSYcibicoicZmyk1JHHFiae94KuvVsibAKtcQAvnOPWp0C4yvia8mzvQAORiazjWSoc1XQ9QkLrQ/132","nickname":"钟敬","note":"","ucode":"20B3D31A2C8C86","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":614023,"discussion_content":"你好呀，其实没有任何一本书或一门课包含了这两本书的所有知识。之前没有，未来估计也不会有。这是因为每本书和每门课都有自己的侧重点。本课程侧重点是带大家入门DDD。没有包含的知识需要大家进一步努力。就《领域驱动设计》而言，本课程没有包含“精炼”和“大型结构”。就《分析模式》而言，原书中每一章都有大量的模式，这些不是本课程的重点，你可以在理解本课程的基础上，进一步找原书学习。学习中如果有困难，可以在微信交流群里继续讨论。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1681633909,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"广东","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":370356,"user_name":"赵晏龙","can_delete":false,"product_type":"c1","uid":2673605,"ip_address":"湖南","ucode":"F15730BCA97EE0","user_header":"https://static001.geekbang.org/account/avatar/00/28/cb/c5/c1d7ca5e.jpg","comment_is_top":false,"comment_ctime":1678756611,"is_pvip":false,"replies":[{"id":135083,"content":"两者结合起来，互相取长补短","user_name":"作者回复","user_name_real":"编辑","uid":1288110,"ctime":1678842704,"ip_address":"广东","comment_id":370356,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100311801,"comment_content":"另外，关于图，我和老师的观点一致，如果这个图能够帮助分析问题、传递知识，UML也好，非正式图也好，都是好猫。但如果团队中大部分人都无法理解UML，那还不如非正式图。","like_count":0,"discussions":[{"author":{"id":1288110,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/VBLEAcychgbs5CicUczSYcibicoicZmyk1JHHFiae94KuvVsibAKtcQAvnOPWp0C4yvia8mzvQAORiazjWSoc1XQ9QkLrQ/132","nickname":"钟敬","note":"","ucode":"20B3D31A2C8C86","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":609109,"discussion_content":"两者结合起来，互相取长补短","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1678842704,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"广东","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":369730,"user_name":"aoe","can_delete":false,"product_type":"c1","uid":1121758,"ip_address":"浙江","ucode":"1C6201EDB4E954","user_header":"https://static001.geekbang.org/account/avatar/00/11/1d/de/62bfa83f.jpg","comment_is_top":false,"comment_ctime":1677849301,"is_pvip":false,"replies":[{"id":134724,"content":"起码前面60%能看懂吧？其实画那些非正规的图，就是想让大家看懂。以后我再结合一些别的办法，比如说把数据库表的内容都写出来，可能更容易理解。","user_name":"作者回复","user_name_real":"编辑","uid":1288110,"ctime":1677918525,"ip_address":"广东","comment_id":369730,"utype":1}],"discussion_count":2,"race_medal":0,"score":2,"product_id":100311801,"comment_content":"本课插图很有科技感\n看完出神入化的分析，虽然没看懂，但看到了掌握之后带来的光环","like_count":0,"discussions":[{"author":{"id":1288110,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/VBLEAcychgbs5CicUczSYcibicoicZmyk1JHHFiae94KuvVsibAKtcQAvnOPWp0C4yvia8mzvQAORiazjWSoc1XQ9QkLrQ/132","nickname":"钟敬","note":"","ucode":"20B3D31A2C8C86","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":607474,"discussion_content":"起码前面60%能看懂吧？其实画那些非正规的图，就是想让大家看懂。以后我再结合一些别的办法，比如说把数据库表的内容都写出来，可能更容易理解。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1677918525,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"广东","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":1,"child_discussions":[{"author":{"id":1121758,"avatar":"https://static001.geekbang.org/account/avatar/00/11/1d/de/62bfa83f.jpg","nickname":"aoe","note":"","ucode":"1C6201EDB4E954","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1288110,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/VBLEAcychgbs5CicUczSYcibicoicZmyk1JHHFiae94KuvVsibAKtcQAvnOPWp0C4yvia8mzvQAORiazjWSoc1XQ9QkLrQ/132","nickname":"钟敬","note":"","ucode":"20B3D31A2C8C86","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":607646,"discussion_content":"没看懂的地方主要是自己基础太差，等把老师推荐的书都读完了，再来学习这篇内容就容易了。之前的课程还没掌握，这里后面的内容看不懂正常啊","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1678066392,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":607474,"ip_address":"浙江","group_id":0},"score":607646,"extra":""}]}]},{"had_liked":false,"id":369620,"user_name":"Fredo","can_delete":false,"product_type":"c1","uid":1438470,"ip_address":"广东","ucode":"681D6692617DAB","user_header":"https://static001.geekbang.org/account/avatar/00/15/f3/06/8da1bf0c.jpg","comment_is_top":false,"comment_ctime":1677731781,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":2,"product_id":100311801,"comment_content":"抽象层级更高了。 一个员工属于多个组织，这个在一个 HR 系统中碰到过类似问题","like_count":0}]}