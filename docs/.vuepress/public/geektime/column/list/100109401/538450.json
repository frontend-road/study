{"id":538450,"title":"53｜RESTful Web Services（17）：如何进行Spike的架构愿景细化？","content":"<p>你好，我是徐昊。今天我们继续使用TDD的方式实现RESTful Web Services。</p><h2>回顾架构愿景与任务列表</h2><p>目前我们已经实现了ResourceRouter，整体的架构愿景如下：</p><p><img src=\"https://static001.geekbang.org/resource/image/59/24/59ee2d534a4ae87623a736157e848924.jpg?wh=2284x1285\" alt=\"\"><br>\n<img src=\"https://static001.geekbang.org/resource/image/2e/a4/2ef7e84ba450b36d1df67cfce9e61da4.jpg?wh=2284x1285\" alt=\"\"></p><h2>细化任务列表</h2><p>沿着调用栈的顺序，就要进入RootResource/Resource/ResourceMethod的开发中。未经细化的任务列表如下：</p><ul>\n<li>\n<p>Resource/RootResource/ResourceMethod</p>\n<ul>\n<li>在处理请求派分时，可以支持多级子资源（Sub-Resource）</li>\n<li>在处理请求派分时，可以根据客户端提供的超媒体类型，选择对应的资源方法（Resource Method）</li>\n<li>在处理请求派分时，可以根据客户端提供的Http方法，选择对应的资源方法</li>\n<li>资源方法可以返回Java对象，由Runtime自行推断正确的返回状态</li>\n<li>资源方法可以不明确指定返回的超媒体类型，由Runtime自行推断，比如，资源方法标注了Produces标注，那么就使用标注提供的超媒体类型等</li>\n<li>资源方法可按找期望的类型，访问Http请求的内容</li>\n<li>资源对象和资源方法可接受环境组件的注入</li>\n</ul>\n</li>\n</ul><p>而在当前架构愿景下，RootResource/Resource/ResourceMethod都需要使用UriTemplate、UriInfoBuilder作为支撑。其中，UriInfoBuilder还没有具体的接口设计，那么我们可以先实现UriTemplate。视频演示如下：</p><!-- [[[read_end]]] --><p><video poster=\"https://media001.geekbang.org/f85e19e8f3a94a9ea6bc50795c689846/snapshots/faa73b6a988a46fabc4f06780775b04c-00005.jpg\" preload=\"none\" controls=\"\"><source src=\"https://media001.geekbang.org/customerTrans/7e27d07d27d407ebcc195a0e78395f55/25888535-181ec6fa916-0000-0000-01d-dbacd.mp4\" type=\"video/mp4\"><source src=\" https://media001.geekbang.org/6be219a5f49040e486545c2d56b33a4c/eb6f3baa0d5a42159a903fe72f09dd90-85953573b092b546dc177dd9be092ba3-sd.m3u8\" type=\"application/x-mpegURL\"></video></p><p>接下来，我们可以细化UriTemplate的任务：</p><ul>\n<li>UriTemplate\n<ul>\n<li>\n<p>匹配无参数的Uri模版</p>\n<ul>\n<li>如果Uri可以与模版匹配，则返回匹配结果</li>\n<li>如果Uri不能与模版匹配，则返回Optional.empty</li>\n</ul>\n</li>\n<li>\n<p>匹配带参数的Uri模版</p>\n<ul>\n<li>如果Uri可以与模版匹配，按照指定参数从Uri中提取值</li>\n<li>参数可以通过正则表达式指定格式</li>\n<li>如果参数重复定义，则抛出异常</li>\n</ul>\n</li>\n<li>\n<p>模版匹配的结果可以比较大小</p>\n<ul>\n<li>如果匹配的非参字符多，则优先（长的优先）</li>\n<li>如果匹配的非参数字符一样，匹配的分组多，则优先（参数优先）</li>\n<li>如果匹配的分组一样多，指定格式参数匹配多的优先（指定格式参数优先）</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul><h2>思考题</h2><p>如何根据variable获取值？</p><p>欢迎把你的想法分享在留言区，也欢迎把你的项目代码分享出来。相信经过你的思考与实操，学习效果会更好！</p>","comments":[{"had_liked":false,"id":354257,"user_name":"Jason","can_delete":false,"product_type":"c1","uid":1510910,"ip_address":"上海","ucode":"FC7849B6F0FA9F","user_header":"https://static001.geekbang.org/account/avatar/00/17/0d/fe/4e5ba578.jpg","comment_is_top":false,"comment_ctime":1660219995,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":2,"product_id":100109401,"comment_content":"正则表达式真是神奇😅","like_count":0}]}