{"id":164828,"title":"32 | 实现一个服务器端","content":"<p><strong>课件和Demo地址</strong><br>\n<a href=\"https://gitee.com/geektime-geekbang/geek_netty\">https://gitee.com/geektime-geekbang/geek_netty</a></p>","comments":[{"had_liked":false,"id":155053,"user_name":"王盛武","can_delete":false,"product_type":"c3","uid":1182516,"ip_address":"","ucode":"DE7EF246D3DCE8","user_header":"https://static001.geekbang.org/account/avatar/00/12/0b/34/f41d73a4.jpg","comment_is_top":false,"comment_ctime":1574641641,"is_pvip":false,"replies":[{"id":59586,"content":"你看的很细致，点赞，第四章雏形，所以直接写，方便起见，没有分，在第五章分了。看来把原理知识放前面还是有用的，直接能看出问题了。哈哈","user_name":"作者回复","user_name_real":"Geek_9bc307","uid":1638649,"ctime":1574674266,"ip_address":"","comment_id":155053,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100036701,"comment_content":"server没有分boss和work?","like_count":4,"discussions":[{"author":{"id":1638649,"avatar":"https://static001.geekbang.org/account/avatar/00/19/00/f9/44a3e5bd.jpg","nickname":"傅健","note":"","ucode":"5EA8BB26F5B036","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":475647,"discussion_content":"你看的很细致，点赞，第四章雏形，所以直接写，方便起见，没有分，在第五章分了。看来把原理知识放前面还是有用的，直接能看出问题了。哈哈","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574674266,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":158411,"user_name":"bbbi","can_delete":false,"product_type":"c3","uid":1682175,"ip_address":"","ucode":"9A539AEF791428","user_header":"https://static001.geekbang.org/account/avatar/00/19/aa/ff/e2c331e0.jpg","comment_is_top":false,"comment_ctime":1575365289,"is_pvip":false,"replies":[{"id":61848,"content":"1 业务handler的异常现在被分成两个部分了：读用异常处理，所以exceptionCaught才从ChannelHandler（Deprecated）搞到ChannelInboundHandler里面，而写是用        PromiseNotificationUtil.tryFailure(promise, cause, promise instanceof VoidChannelPromise ? null : logger);来控制，所以收集异常的exceptionCaught方法还是在用，只是说只针对读，所以才移动了位置；\n其实这个分2部分，也可以参考第五章的25页的异常处理统计那部分，也能体现。\n\n2 主要三个问题注意：（1）handler顺序 （2）handler是否可共享 （3）内部处理是否有有资源应该释放而未释放，比如堆外的bytebuf.\n","user_name":"作者回复","user_name_real":"stroller","uid":1638649,"ctime":1576562730,"ip_address":"","comment_id":158411,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100036701,"comment_content":"老师您好！\n1. 我这边看到是4.1.32.Final这个版本的，我在interface ChannelHandler中发现void exceptionCaught这个方法被被标记为Deprecated，是不是我在业务handle收集异常使用这个方法是不被建议的吗？还是有更好的解决方式？\n2. 老师能简单的介绍一下，多个业务handler在fire事件的时候应该注意什么，或者有什么容易犯错的点吗？\n","like_count":1,"discussions":[{"author":{"id":1638649,"avatar":"https://static001.geekbang.org/account/avatar/00/19/00/f9/44a3e5bd.jpg","nickname":"傅健","note":"","ucode":"5EA8BB26F5B036","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":476712,"discussion_content":"1 业务handler的异常现在被分成两个部分了：读用异常处理，所以exceptionCaught才从ChannelHandler（Deprecated）搞到ChannelInboundHandler里面，而写是用        PromiseNotificationUtil.tryFailure(promise, cause, promise instanceof VoidChannelPromise ? null : logger);来控制，所以收集异常的exceptionCaught方法还是在用，只是说只针对读，所以才移动了位置；\n其实这个分2部分，也可以参考第五章的25页的异常处理统计那部分，也能体现。\n\n2 主要三个问题注意：（1）handler顺序 （2）handler是否可共享 （3）内部处理是否有有资源应该释放而未释放，比如堆外的bytebuf.\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1576562730,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":156175,"user_name":"姚远","can_delete":false,"product_type":"c3","uid":1680082,"ip_address":"","ucode":"AB278EF7581440","user_header":"https://static001.geekbang.org/account/avatar/00/19/a2/d2/1d1ae570.jpg","comment_is_top":false,"comment_ctime":1574828715,"is_pvip":false,"replies":[{"id":60556,"content":"都是长连接，netty默认都是长连接，除非你显式特地去断，所以，你从两个角度分析:服务器端有没有断你的连接？客户端有没有断你的连接，都没有，肯定长连接，默认也是没有的，因为他也不知道你的逻辑是需要一个请求断一次还是一定时间才断。","user_name":"作者回复","user_name_real":"傅健","uid":1638649,"ctime":1575325080,"ip_address":"","comment_id":156175,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100036701,"comment_content":"老师 您现在的实现都是短链接的嘛？每个channel只使用一次？ netty是不是应该有和数据库连接池类似的实现呀 链接复用 省去3握4挥的过程？望指点","like_count":1,"discussions":[{"author":{"id":1638649,"avatar":"https://static001.geekbang.org/account/avatar/00/19/00/f9/44a3e5bd.jpg","nickname":"傅健","note":"","ucode":"5EA8BB26F5B036","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":476018,"discussion_content":"都是长连接，netty默认都是长连接，除非你显式特地去断，所以，你从两个角度分析:服务器端有没有断你的连接？客户端有没有断你的连接，都没有，肯定长连接，默认也是没有的，因为他也不知道你的逻辑是需要一个请求断一次还是一定时间才断。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1575325080,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":164160,"user_name":"shinee_x_X","can_delete":false,"product_type":"c3","uid":1605962,"ip_address":"","ucode":"98529C77B052AC","user_header":"https://static001.geekbang.org/account/avatar/00/18/81/4a/dcc563fb.jpg","comment_is_top":false,"comment_ctime":1576897175,"is_pvip":false,"replies":[{"id":62416,"content":"你理解的没问题，直接channel read里写也没问题，因为已经是一次完整请求了，写在complete里面有好处，就是减少flush次数，这个在第五章会详细说，这里是案例雏形，所以先用最简单的方式展示给大家，另外你说的部分数据，到了业务层已经包含完整请求了，在一次解码的handler里倒是可能是“部分”，所以这里功能没有问题的。","user_name":"作者回复","user_name_real":"stroller","uid":1638649,"ctime":1576928809,"ip_address":"","comment_id":164160,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100036701,"comment_content":"老师，为什么你在channelread方法里就把结果给flush了呢，我理解是不是应该在readcomplete方法flush，channelread方法只是一次读事件的一部分数据啊。","like_count":0,"discussions":[{"author":{"id":1638649,"avatar":"https://static001.geekbang.org/account/avatar/00/19/00/f9/44a3e5bd.jpg","nickname":"傅健","note":"","ucode":"5EA8BB26F5B036","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":478663,"discussion_content":"你理解的没问题，直接channel read里写也没问题，因为已经是一次完整请求了，写在complete里面有好处，就是减少flush次数，这个在第五章会详细说，这里是案例雏形，所以先用最简单的方式展示给大家，另外你说的部分数据，到了业务层已经包含完整请求了，在一次解码的handler里倒是可能是“部分”，所以这里功能没有问题的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1576928809,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":159093,"user_name":"再续啸傲","can_delete":false,"product_type":"c3","uid":1360184,"ip_address":"","ucode":"912987A17DCA92","user_header":"https://static001.geekbang.org/account/avatar/00/14/c1/38/e45bbb6b.jpg","comment_is_top":false,"comment_ctime":1575536745,"is_pvip":false,"replies":[{"id":61519,"content":"这里的close指的是服务器&#47;客户端的关闭，不是单个连接的关闭。","user_name":"作者回复","user_name_real":"stroller","uid":1638649,"ctime":1576206430,"ip_address":"","comment_id":159093,"utype":1}],"discussion_count":2,"race_medal":0,"score":2,"product_id":100036701,"comment_content":"老师的最后一行代码，有个closeFuture()，既然是长连接，这close的肯定不是连接，那close的是什么呢？","like_count":0,"discussions":[{"author":{"id":1638649,"avatar":"https://static001.geekbang.org/account/avatar/00/19/00/f9/44a3e5bd.jpg","nickname":"傅健","note":"","ucode":"5EA8BB26F5B036","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":476945,"discussion_content":"这里的close指的是服务器/客户端的关闭，不是单个连接的关闭。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1576206430,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1069555,"avatar":"https://static001.geekbang.org/account/avatar/00/10/51/f3/96ae1b38.jpg","nickname":"fanhang116","note":"","ucode":"BD59FABFEF5DC6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":99975,"discussion_content":"老师，最后一行在什么情况下会被执行到呢？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577231863,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":362924,"user_name":"李干嘛","can_delete":false,"product_type":"c3","uid":3109470,"ip_address":"湖南","ucode":"C93D33187ABE1A","user_header":"https://static001.geekbang.org/account/avatar/00/2f/72/5e/1533fac0.jpg","comment_is_top":false,"comment_ctime":1669033186,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":2,"product_id":100036701,"comment_content":"使用思路还是很清晰的","like_count":0},{"had_liked":false,"id":301830,"user_name":"熊猫","can_delete":false,"product_type":"c3","uid":1080238,"ip_address":"","ucode":"23C85117A16BEF","user_header":"https://static001.geekbang.org/account/avatar/00/10/7b/ae/66ae403d.jpg","comment_is_top":false,"comment_ctime":1625902463,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":2,"product_id":100036701,"comment_content":"老师，handler和childHandler有什么区别呢？","like_count":0},{"had_liked":false,"id":270056,"user_name":"Alpha 👀","can_delete":false,"product_type":"c3","uid":1200971,"ip_address":"","ucode":"3C0BAD36550718","user_header":"https://static001.geekbang.org/account/avatar/00/12/53/4b/28991f30.jpg","comment_is_top":false,"comment_ctime":1608887833,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":2,"product_id":100036701,"comment_content":"老师，请问handler添加顺序有影响吗？我理解pipeline中是区分出站和入站方向的，每个handler是有执行顺序的，添加handler的顺序是有讲究的。","like_count":0}]}