{"id":382342,"title":"07 | 工作流设计：如何设计合理的多人开发模式？","content":"<p>你好，我是孔令飞。今天我们来聊聊如何设计合理的开发模式。</p><p>一个企业级项目是由多人合作完成的，不同开发者在本地开发完代码之后，可能提交到同一个代码仓库，同一个开发者也可能同时开发几个功能特性。这种多人合作开发、多功能并行开发的特性如果处理不好，就会带来诸如丢失代码、合错代码、代码冲突等问题。</p><p>所以，在编码之前，我们需要设计一个合理的开发模式。又因为目前开发者基本都是基于 Git 进行开发的，所以本节课，我会教你怎么基于 Git 设计出一个合理的开发模式。</p><p>那么如何设计工作流呢？你可以根据需要，自己设计工作流，也可以采用业界沉淀下来的、设计好的、受欢迎的工作流。一方面，这些工作流经过长时间的实践，被证明是合理的；另一方面，采用一种被大家熟知且业界通用的工作流，会减少团队内部磨合的时间。在这一讲中，我会为你介绍4种受欢迎的工作流，你可以选择其中一种作为你的工作流设计。</p><p>在使用 Git 开发时，有4种常用的工作流，也叫开发模式，按演进顺序分为集中式工作流、功能分支工作流、Git Flow 工作流和Forking 工作流。接下来，我会按演进顺序分别介绍这 4 种工作流。</p><h2>集中式工作流</h2><p>我们先来看看集中式工作流，它是最简单的一种开发方式。集中式工作流的工作模式如下图所示：</p><!-- [[[read_end]]] --><p><img src=\"https://static001.geekbang.org/resource/image/31/eb/3174a9e1373ed2d6d14471164dcb13eb.png?wh=2100*1144\" alt=\"\"></p><p>A、B、C 为 3 位开发者，每位开发者都在本地有一份远程仓库的拷贝：本地仓库。A、B、C 在本地的 master 分支开发完代码之后，将修改后的代码commit到远程仓库，如果有冲突就先解决本地的冲突再提交。在进行了一段时间的开发之后，远程仓库 master 分支的日志可能如下图所示：</p><p><img src=\"https://static001.geekbang.org/resource/image/fb/c7/fbcc75ba5b91223f6bf243f0bc08bac7.png?wh=2922*391\" alt=\"\"></p><p>集中式工作流是最简单的开发模式，但它的缺点也很明显：不同开发人员的提交日志混杂在一起，难以定位问题。如果同时开发多个功能，不同功能同时往 master 分支合并，代码之间也会相互影响，从而产生代码冲突。</p><p>和其他工作流相比，集中式工作流程的代码管理较混乱，容易出问题，因此适合用在<strong>团队人数少、开发不频繁、不需要同时维护多个版本的小项目</strong>中。当我们想要并行开发多个功能时，这种工作流就不适用了，这时候怎么办呢？我们接下来看功能分支工作流。</p><h2>功能分支工作流</h2><p>功能分支工作流基于集中式工作流演进而来。在开发新功能时，基于 master 分支新建一个功能分支，在功能分支上进行开发，而不是直接在本地的 master 分支开发，开发完成之后合并到 master 分支，如下图所示：</p><p><img src=\"https://static001.geekbang.org/resource/image/1c/0b/1c0b08a1c9032c87c35b85de6ca6820b.png?wh=3809*834\" alt=\"\"></p><p>相较于集中式工作流，这种工作流让不同功能在不同的分支进行开发，只在最后一步合并到master分支，不仅可以避免不同功能之间的相互影响，还可以使提交历史看起来更加简洁。</p><p>还有，在合并到 master 分支时，需要提交 PR（pull request），而不是直接将代码 merge 到 master 分支。PR 流程不仅可以把分支代码提供给团队其他开发人员进行 CR（Code Review），还可以在 PR 页面讨论代码。通过 CR ，我们可以确保合并到 master 的代码是健壮的；通过 PR 页面的讨论，可以使开发者充分参与到代码的讨论中，有助于提高代码的质量，并且提供了一个代码变更的历史回顾途径。</p><p>那么，功能分支工作流具体的开发流程是什么呢？我们一起来看下。</p><ol>\n<li>基于 master 分支新建一个功能分支，功能分支可以取一些有意义的名字，便于理解，例如feature/rate-limiting。</li>\n</ol><pre><code>$ git checkout -b feature/rate-limiting\n</code></pre><ol start=\"2\">\n<li>在功能分支上进行代码开发，开发完成后 commit 到功能分支。</li>\n</ol><pre><code>$ git add limit.go\n$ git commit -m &quot;add rate limiting&quot;\n</code></pre><ol start=\"3\">\n<li>将本地功能分支代码 push 到远程仓库。</li>\n</ol><pre><code>$ git push origin feature/rate-limiting\n</code></pre><ol start=\"4\">\n<li>在远程仓库上创建 PR（例如：GitHub）。</li>\n</ol><p>进入 GitHub 平台上的项目主页，点击 <strong>Compare &amp; pull request</strong> 提交 PR，如下图所示。</p><p><img src=\"https://static001.geekbang.org/resource/image/db/ac/dbcd25542515788c7f4f2f592d0029ac.png?wh=1700*552\" alt=\"\"></p><p>点击 <strong>Compare &amp; pull request</strong> 后会进入 PR 页面，在该页面中可以根据需要填写评论，最后点击 <strong>Create pull request</strong> 提交 PR。</p><ol start=\"5\">\n<li>代码管理员收到 PR 后，可以 CR 代码，CR 通过后，再点击 <strong>Merge pull request</strong> 将 PR 合并到 master，如下图所示。</li>\n</ol><p><img src=\"https://static001.geekbang.org/resource/image/48/c6/48aaa3a94108de765cb07bd34d899fc6.png?wh=1673*1107\" alt=\"\"></p><p>图中的“Merge pull request” 提供了 3 种 merge 方法：</p><ul>\n<li><strong>Create a merge commit：</strong>GitHub 的底层操作是 <code>git merge --no-ff</code>。feature 分支上所有的 commit 都会加到 master 分支上，并且会生成一个 merge commit。这种方式可以让我们清晰地知道是谁做了提交，做了哪些提交，回溯历史的时候也会更加方便。</li>\n<li><strong>Squash and merge</strong>：GitHub 的底层操作是 <code>git merge --squash</code>。<strong>Squash and merge</strong>会使该 pull request 上的所有 commit 都合并成一个commit ，然后加到master分支上，但原来的 commit 历史会丢失。如果开发人员在 feature 分支上提交的 commit 非常随意，没有规范，那么我们可以选择这种方法来丢弃无意义的 commit。但是在大型项目中，每个开发人员都应该是遵循 commit 规范的，因此我不建议你在团队开发中使用 Squash and merge。</li>\n<li><strong>Rebase and merge：</strong>GitHub 的底层操作是 <code>git rebase</code>。这种方式会将 pull request 上的所有提交历史按照原有顺序依次添加到 master 分支的头部（HEAD）。因为git rebase 有风险，在你不完全熟悉 Git 工作流时，我不建议merge时选择这个。</li>\n</ul><p>通过分析每个方法的优缺点，在实际的项目开发中，我比较推荐你使用 <strong>Create a merge commit</strong> 方式。</p><p>从刚才讲完的具体开发流程中，我们可以感受到，功能分支工作流上手比较简单，不仅能使你并行开发多个功能，还可以添加code review，从而保障代码质量。当然它也有缺点，就是无法给分支分配明确的目的，不利于团队配合。它适合用在<strong>开发团队相对固定、规模较小的项目</strong>中。接下来我们要讲的Git Flow 工作流以功能分支工作流为基础，较好地解决了上述问题。</p><h2>Git Flow 工作流</h2><p>Git Flow 工作流是一个非常成熟的方案，也是非开源项目中最常用到的工作流。它定义了一个围绕项目发布的严格分支模型，通过为代码开发、发布和维护分配独立的分支来让项目的迭代流程更加顺畅，<strong>比较适合大型的项目或者迭代速度快的项目。</strong>接下来，我会通过介绍Git Flow的5种分支和工作流程，来给你讲解GIt Flow是如何工作的。</p><h3>Git Flow 的5种分支</h3><p>Git Flow 中定义了 5 种分支，分别是 master、develop、feature、release和 hotfix。其中，master 和 develop 为常驻分支，其他为非常驻分支，不同的研发阶段会用到不同的分支。这5种分支的详细介绍见下表：</p><p><img src=\"https://static001.geekbang.org/resource/image/fa/d9/fa611f83053afd77cf3ddf83561ba1d9.png?wh=942*568\" alt=\"\"></p><h3>Git Flow 开发流程</h3><p>这里我们用一个实际的例子来演示下Git Flow 的开发流程。场景如下：</p><p>a. 当前版本为：0.9.0。</p><p>b. 需要新开发一个功能，使程序执行时向标准输出输出“hello world”字符串。</p><p>c. 在开发阶段，线上代码有 Bug 需要紧急修复。</p><p>假设我们的 Git 项目名为 gitflow-demo，项目目录下有 2 个文件，分别是 README.md 和 main.go，内容如下。</p><pre><code>package main\n\nimport &quot;fmt&quot;\n\nfunc main() {\n\tfmt.Println(&quot;callmainfunction&quot;)\n}\n</code></pre><p>具体的开发流程有 12 步，你可以跟着以下步骤操作练习。</p><ol>\n<li>创建一个常驻的分支：develop。</li>\n</ol><pre><code>$ git checkout -b develop master\n</code></pre><ol start=\"2\">\n<li>基于 develop 分支，新建一个功能分支：feature/print-hello-world。</li>\n</ol><pre><code>$ git checkout -b feature/print-hello-world develop\n</code></pre><ol start=\"3\">\n<li>feature/print-hello-world 分支中，在 main.go 文件中添加一行代码<code>fmt.Println(\"Hello\")</code>，添加后的代码如下。</li>\n</ol><pre><code>package main\n\nimport &quot;fmt&quot;\n\nfunc main() {\n\tfmt.Println(&quot;callmainfunction&quot;)\n\tfmt.Println(&quot;Hello&quot;)\n}\n</code></pre><ol start=\"4\">\n<li>紧急修复 Bug。</li>\n</ol><p>我们正处在新功能的开发中（只完成了 <code>fmt.Println(\"Hello\")</code>而非 <code>fmt.Println(\"Hello World\")</code>）突然线上代码发现了一个 Bug，我们要立即停止手上的工作，修复线上的 Bug，步骤如下。</p><pre><code>$ git stash # 1. 开发工作只完成了一半，还不想提交，可以临时保存修改至堆栈区\n$ git checkout -b hotfix/print-error master # 2. 从 master 建立 hotfix 分支\n$ vi main.go # 3. 修复 bug，callmainfunction -&gt; call main function\n$ git commit -a -m 'fix print message error bug' # 4. 提交修复\n$ git checkout develop # 5. 切换到 develop 分支\n$ git merge --no-ff hotfix/print-error # 6. 把 hotfix 分支合并到 develop 分支\n$ git checkout master # 7. 切换到 master 分支\n$ git merge --no-ff hotfix/print-error # 8. 把 hotfix 分支合并到 master\n$ git tag -a v0.9.1 -m &quot;fix log bug&quot; # 9. master 分支打 tag\n$ go build -v . # 10. 编译代码，并将编译好的二进制更新到生产环境\n$ git branch -d hotfix/print-error # 11. 修复好后，删除 hotfix/xxx 分支\n$ git checkout feature/print-hello-world # 12. 切换到开发分支下\n$ git merge --no-ff develop # 13. 因为 develop 有更新，这里最好同步更新下\n$ git stash pop # 14. 恢复到修复前的工作状态\n</code></pre><ol start=\"5\">\n<li>继续开发。</li>\n</ol><p>在 main.go 中加入 <code>fmt.Println(\"Hello World\")</code>。</p><ol start=\"6\">\n<li>提交代码到 feature/print-hello-world 分支。</li>\n</ol><pre><code>$ git commit -a -m &quot;print 'hello world'&quot;\n</code></pre><ol start=\"7\">\n<li>在 feature/print-hello-world 分支上做 code review。</li>\n</ol><p>首先，我们需要将 feature/print-hello-world push 到代码托管平台，例如 GitHub 上。</p><pre><code>$ git push origin feature/print-hello-world\n</code></pre><p>然后，我们在 GitHub 上，基于 feature/print-hello-world 创建 pull request，如下图所示。</p><p><img src=\"https://static001.geekbang.org/resource/image/ac/ea/ac70d5ab86887e47f78c48d1df42f2ea.png?wh=1637*729\" alt=\"\"></p><p>创建完 pull request 之后，我们就可以指定 Reviewers 进行 code review，如下图所示。</p><p><img src=\"https://static001.geekbang.org/resource/image/bc/50/bc5168fe73abc257ba35342764647250.png?wh=2420*813\" alt=\"\"></p><ol start=\"8\">\n<li>code review 通过后，由代码仓库 matainer 将功能分支合并到 develop 分支。</li>\n</ol><pre><code>$ git checkout develop\n$ git merge --no-ff feature/print-hello-world\n</code></pre><ol start=\"9\">\n<li>基于 develop 分支，创建 release 分支，测试代码。</li>\n</ol><pre><code>$ git checkout -b release/1.0.0 develop\n$ go build -v . # 构建后，部署二进制文件，并测试\n</code></pre><ol start=\"10\">\n<li>测试失败，因为我们要求打印“hello world”，但打印的是“Hello World”，修复的时候，</li>\n</ol><p>我们直接在 release/1.0.0 分支修改代码，修改完成后，提交并编译部署。</p><pre><code>$ git commit -a -m &quot;fix bug&quot;\n$ go build -v .\n</code></pre><ol start=\"11\">\n<li>测试通过后，将功能分支合并到 master 分支和 develop 分支。</li>\n</ol><pre><code>$ git checkout develop\n$ git merge --no-ff release/1.0.0\n$ git checkout master\n$ git merge --no-ff release/1.0.0\n$ git tag -a v1.0.0 -m &quot;add print hello world&quot; # master 分支打 tag\n</code></pre><ol start=\"12\">\n<li>删除 feature/print-hello-world 分支，也可以选择性删除 release/1.0.0 分支。</li>\n</ol><pre><code>$ git branch -d feature/print-hello-world\n</code></pre><p>亲自操作一遍之后，你应该会更了解这种模式的优缺点。它的缺点，就是你刚才已经体会到的，它有一定的上手难度。不过Git Flow工作流还是有很多优点的：Git Flow工作流的每个分支分工明确，这可以最大程度减少它们之间的相互影响。因为可以创建多个分支，所以也可以并行开发多个功能。另外，和功能分支工作流一样，它也可以添加code review，保障代码质量。</p><p>因此，Git Flow工作流比较<strong>适合开发团队相对固定，规模较大的项目</strong>。</p><h2>Forking 工作流</h2><p>上面讲的Git Flow 是非开源项目中最常用的，而在开源项目中，最常用到的是Forking 工作流，例如 Kubernetes、Docker 等项目用的就是这种工作流。这里，我们先来了解下 fork 操作。</p><p>fork 操作是在个人远程仓库新建一份目标远程仓库的副本，比如在 GitHub 上操作时，在项目的主页点击 fork 按钮（页面右上角），即可拷贝该目标远程仓库。Forking 工作流的流程如下图所示。</p><p><img src=\"https://static001.geekbang.org/resource/image/63/ea/63419f767c61c9580861b59445b90fea.png?wh=2213*1019\" alt=\"\"></p><p>假设开发者 A 拥有一个远程仓库，如果开发者 B 也想参与 A 项目的开发，B 可以 fork 一份 A 的远程仓库到自己的 GitHub 账号下。后续 B 可以在自己的项目进行开发，开发完成后，B 可以给 A 提交一个 PR。这时候 A 会收到通知，得知有新的 PR 被提交，A 会去查看 PR 并 code review。如果有问题，A 会直接在 PR 页面提交评论，B 看到评论后会做进一步的修改。最后 A 通过 B 的 PR 请求，将代码合并进了 A 的仓库。这样就完成了 A 代码仓库新特性的开发。如果有其他开发者想给 A 贡献代码，也会执行相同的操作。</p><p>GitHub中的 Forking 工作流详细步骤共有6步（假设目标仓库为 gitflow-demo），你可以跟着以下步骤操作练习。</p><ol>\n<li>Fork 远程仓库到自己的账号下。</li>\n</ol><p>访问<a href=\"https://github.com/marmotedu/gitflow-demo\">https://github.com/marmotedu/gitflow-demo</a> ，点击<strong>fork</strong>按钮。fork 后的仓库地址为：<a href=\"https://github.com/colin404fork/gitflow-demo\">https://github.com/colin404fork/gitflow-demo</a> 。<br>\n2) 克隆 fork 的仓库到本地。</p><pre><code>$ git clone https://github.com/colin404fork/gitflow-demo\n$ cd gitflow-demo\n$ git remote add upstream https://github.com/marmotedu/gitflow-demo\n$ git remote set-url --push upstream no_push # Never push to upstream master\n$ git remote -v # Confirm that your remotes make sense\norigin\thttps://github.com/colin404fork/gitflow-demo (fetch)\norigin\thttps://github.com/colin404fork/gitflow-demo (push)\nupstream\thttps://github.com/marmotedu/gitflow-demo (fetch)\nupstream\thttps://github.com/marmotedu/gitflow-demo (push)\n</code></pre><ol start=\"3\">\n<li>创建功能分支。</li>\n</ol><p>首先，要同步本地仓库的 master 分支为最新的状态（跟 upstream master 分支一致）。</p><pre><code>$ git fetch upstream\n$ git checkout master\n$ git rebase upstream/master\n</code></pre><p>然后，创建功能分支。</p><pre><code>$ git checkout -b feature/add-function\n</code></pre><ol start=\"4\">\n<li>提交 commit。</li>\n</ol><p>在 feature/add-function 分支上开发代码，开发完代码后，提交 commit。</p><pre><code>$ git fetch upstream # commit 前需要再次同步 feature 跟 upstream/master\n$ git rebase upstream/master\n$ git add &lt;file&gt;\n$ git status\n$ git commit\n</code></pre><p>分支开发完成后，可能会有一堆 commit，但是合并到主干时，我们往往希望只有一个（或最多两三个）commit，这可以使功能修改都放在一个或几个commit中，便于后面的阅读和维护。这个时候，我们可以用 git rebase 来合并和修改我们的 commit，操作如下：</p><pre><code>$ git rebase -i origin/master\n</code></pre><p>第5讲已经介绍过了<code>git rebase -i</code> 的使用方法 ，如果你有疑问可以再去看看，这里不再说明。</p><p>还有另外一种合并 commit 的简便方法，就是先撤销过去 5 个 commit，然后再建一个新的：</p><pre><code>$ git reset HEAD~5\n$ git add .\n$ git commit -am &quot;Here's the bug fix that closes #28&quot;\n$ git push --force\n</code></pre><p>squash 和 fixup 命令，还可以当作命令行参数使用，自动合并 commit。</p><pre><code>$ git commit --fixup\n$ git rebase -i --autosquash\n</code></pre><ol start=\"5\">\n<li>push 功能分支到个人远程仓库。</li>\n</ol><p>在完成了开发，并 commit 后，需要将功能分支 push 到个人远程代码仓库，代码如下：</p><pre><code>$ git push -f origin feature/add-function\n</code></pre><ol start=\"6\">\n<li>在个人远程仓库页面创建 pull request。</li>\n</ol><p>提交到远程仓库以后，我们就可以创建 pull request，然后请求reviewers进行代码 review，确认后合并到 master。这里要注意，创建pull request时，base通常选择目标远程仓库的master分支。</p><p>我们已经讲完了 Forking 工作流的具体步骤，你觉得它有什么优缺点呢？</p><p>结合操作特点，我们来看看它的优点：Forking工作流中，项目远程仓库和开发者远程仓库完全独立，开发者通过提交 Pull Request 的方式给远程仓库贡献代码，项目维护者选择性地接受任何开发者的提交，通过这种方式，可以避免授予开发者项目远程仓库的权限，从而提高项目远程仓库的安全性，这也使得任意开发者都可以参与项目的开发。</p><p>但Forking工作流也有局限性，就是对于职能分工明确且不对外开源的项目优势不大。</p><p>Forking工作流比较适用于以下三种场景：（1）开源项目中；（2）开发者有衍生出自己的衍生版的需求；（3）开发者不固定，可能是任意一个能访问到项目的开发者。</p><h2>总结</h2><p>这一讲中，我基于 Git 向你介绍了 4 种开发模式，现在跟我回顾一下吧。</p><ul>\n<li>集中式工作流：开发者直接在本地 master 分支开发代码，开发完成后 push 到远端仓库 master 分支。</li>\n<li>功能分支工作流：开发者基于 master 分支创建一个新分支，在新分支进行开发，开发完成后合并到远端仓库 master 分支。</li>\n<li>Git Flow 工作流：Git Flow 工作流为不同的分支分配一个明确的角色，并定义分支之间什么时候、如何进行交互，比较适合大型项目的开发。</li>\n<li>Forking 工作流：开发者先 fork 项目到个人仓库，在个人仓库完成开发后，提交 pull request 到目标远程仓库，远程仓库 review 后，合并 pull request 到 master 分支。</li>\n</ul><p>集中式工作流是最早的Git工作流，功能分支工作流以集中式工作流为基础，Git Flow 工作流又是以功能分支工作流为基础，Forking工作流在Git Flow 工作流基础上，解耦了个人远端仓库和项目远端仓库。</p><p>每种开发模式各有优缺点，适用于不同的场景，我总结在下表中：</p><p><img src=\"https://static001.geekbang.org/resource/image/55/07/5503ce60f7c2ae5d7628222a4d87cc07.png?wh=820*505\" alt=\"\"></p><p>总的来说，在选择工作流时，我的推荐如下：</p><ul>\n<li>非开源项目采用 Git Flow 工作流。</li>\n<li>开源项目采用 Forking 工作流。</li>\n</ul><p>因为这门课的实战项目对于项目开发者来说是一个偏大型的非开源项目，所以采用了Git Flow工作流。</p><h2>课后练习</h2><ol>\n<li>请你新建立一个项目，并参考<strong>Git Flow开发流程</strong>，自己操作一遍，观察每一步的操作结果。</li>\n<li>请你思考下，在 Git Flow 工作流中，如果要临时解决一个 Bug，该如何操作代码仓库。</li>\n</ol><p>期待在留言区看到你的思考和分享，我们下一讲见！</p>","comments":[{"had_liked":false,"id":296708,"user_name":"Geek_c3e438","can_delete":false,"product_type":"c1","uid":2188564,"ip_address":"","ucode":"98ECC14625735B","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/mEASWaicRcYrU1TtnkoN7Dx7IEL5godockwSZicz1j9UXN88vtoG2ynJ2yib2oCMcnIjwJtLx60JHsm9moWrNM64A/132","comment_is_top":false,"comment_ctime":1623123089,"is_pvip":false,"replies":[{"id":"107809","content":"是的，这里主要是演示工作流个演示。这里没有按commit message规范写的原因如下：<br>1. 根据我的研发经验，很多时候，规范对大多数开发者是用来看的，所以如果制定了commit message规范，需要有相应的工具，来强约束大家遵守这个规范，因为是演示所以没搞这么复杂。<br>2. IAM项目的commit 都是符合规范的，里面有工具强约束，可以看下。<br><br>老哥看的很细，是个优化点，今后避免。","user_name":"作者回复","user_name_real":"CK1.0","uid":"1167883","ctime":1623162268,"ip_address":"","comment_id":296708,"utype":1}],"discussion_count":1,"race_medal":1,"score":"108997305489","product_id":100079601,"comment_content":"哈哈哈哈，上文刚说了commit规范，这篇就随意了，当然知道仅做演示，开个玩笑~","like_count":25,"discussions":[{"author":{"id":1167883,"avatar":"https://static001.geekbang.org/account/avatar/00/11/d2/0b/cdd0787a.jpg","nickname":"孔令飞","note":"","ucode":"8363EA4BD0AAF0","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":521557,"discussion_content":"是的，这里主要是演示工作流个演示。这里没有按commit message规范写的原因如下：\n1. 根据我的研发经验，很多时候，规范对大多数开发者是用来看的，所以如果制定了commit message规范，需要有相应的工具，来强约束大家遵守这个规范，因为是演示所以没搞这么复杂。\n2. IAM项目的commit 都是符合规范的，里面有工具强约束，可以看下。\n\n老哥看的很细，是个优化点，今后避免。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1623162268,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":296955,"user_name":"张诚","can_delete":false,"product_type":"c1","uid":1145556,"ip_address":"","ucode":"8D7709E70476C0","user_header":"https://static001.geekbang.org/account/avatar/00/11/7a/d4/aa028773.jpg","comment_is_top":false,"comment_ctime":1623238730,"is_pvip":true,"discussion_count":2,"race_medal":1,"score":"96112519242","product_id":100079601,"comment_content":"这章节给力，比外面专门讲git的教程看得还爽。","like_count":23,"discussions":[{"author":{"id":1105161,"avatar":"https://static001.geekbang.org/account/avatar/00/10/dd/09/feca820a.jpg","nickname":"helloworld","note":"","ucode":"1EECCA0F43E278","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":379258,"discussion_content":"专门讲git教程的人可能并没有真正的相关经验，所以讲不出来","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1623779330,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1084107,"avatar":"","nickname":"trample","note":"","ucode":"5A3DA3EF60FB24","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":566801,"discussion_content":"确实，结合实践讲解。不是专门用法的讲解","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1650764152,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":296673,"user_name":"💎A","can_delete":false,"product_type":"c1","uid":1075412,"ip_address":"","ucode":"914FFA92CA2713","user_header":"https://static001.geekbang.org/account/avatar/00/10/68/d4/c9b5d3f9.jpg","comment_is_top":false,"comment_ctime":1623113802,"is_pvip":false,"replies":[{"id":"107806","content":"牛批!","user_name":"作者回复","user_name_real":"CK1.0","uid":"1167883","ctime":1623161781,"ip_address":"","comment_id":296673,"utype":1}],"discussion_count":2,"race_medal":0,"score":"40277819466","product_id":100079601,"comment_content":"用source tree 一键git flow.","like_count":9,"discussions":[{"author":{"id":1167883,"avatar":"https://static001.geekbang.org/account/avatar/00/11/d2/0b/cdd0787a.jpg","nickname":"孔令飞","note":"","ucode":"8363EA4BD0AAF0","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":521542,"discussion_content":"牛批!","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1623161781,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1975831,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/rSzzqGwHcvhwPejiaPsCY9XBX7ib7zTxJ6cUDORdhGIakX8dTPVsz6ibud5ec1FeWQGTseF2TPRECCjky5JMlHvDg/132","nickname":"Struggle~honor","note":"","ucode":"EBC6DFC6CF0973","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":412978,"discussion_content":"还是这个好用啊","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1636350581,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":300139,"user_name":"grandgraph","can_delete":false,"product_type":"c1","uid":1016036,"ip_address":"","ucode":"B26060999DAA73","user_header":"","comment_is_top":false,"comment_ctime":1625019577,"is_pvip":false,"replies":[{"id":"108919","content":"他俩不会冲突的吧，有冲突在merge到develop的时候就解决了","user_name":"作者回复","user_name_real":"CK1.0","uid":"1167883","ctime":1625273193,"ip_address":"","comment_id":300139,"utype":1}],"discussion_count":1,"race_medal":1,"score":"31689790649","product_id":100079601,"comment_content":"如何保证develop和master分支不会产生冲突呢？","like_count":7,"discussions":[{"author":{"id":1167883,"avatar":"https://static001.geekbang.org/account/avatar/00/11/d2/0b/cdd0787a.jpg","nickname":"孔令飞","note":"","ucode":"8363EA4BD0AAF0","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":522653,"discussion_content":"他俩不会冲突的吧，有冲突在merge到develop的时候就解决了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1625273193,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":306596,"user_name":"NULL","can_delete":false,"product_type":"c1","uid":2104901,"ip_address":"","ucode":"B6956A5C23C4ED","user_header":"https://static001.geekbang.org/account/avatar/00/20/1e/45/dc8e3808.jpg","comment_is_top":false,"comment_ctime":1628640215,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"27398443991","product_id":100079601,"comment_content":"问题1，教程中是从develop分支创建的功能分支feature，那此时有新功能应该从哪里拉取，是dev还是master，如果新功能着急上线，从dev拉取就会上线其他功能的代码，就是功能分支什么情况从dev拉取什么情况从master拉取<br><br>问题2，教程中，修复完bug后合并到dev和master，然后切到功能分支需要merge一下dev，那这样不也会把其他代码合并到当前功能分支吗，这个功能分先上线也会带上其他代码吧","like_count":6,"discussions":[{"author":{"id":1603004,"avatar":"https://static001.geekbang.org/account/avatar/00/18/75/bc/e24e181e.jpg","nickname":"Calvin","note":"","ucode":"0EEF5B207623B5","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":557246,"discussion_content":"我的理解：\n1、1）新功能从 develop 分支切出新功能分支进行开发：如果你的功能分支比他们原先的功能分支先上线，他们需要合并你的代码（你合到 master 和 develop 分支之后，他们再从 develop 分支合并过来）；如果他们的功能分支比你的功能分支先上线，你需要合并他们的代码（他们合到 master 和 develop 分支之后，你再从 develop 分支合并过来）；2）从 develop 分支拉取不会上线其他功能的代码（因为其他的功能未开发完成不会合并到 develop 分支上，合并到分支上之后就会很快上线的了，如果你的功能要比他这个上线时间还要早的话，考虑你这个是不是应该是 hotfix？）\n2、修复完 bug 之后，这个代码已经上线了，当然得加在你当前的这个功能分支上了，否则你这个功能一旦上线，之前修复过的 bug 不就又“重现”了吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1647718950,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":301017,"user_name":"我来也","can_delete":false,"product_type":"c1","uid":1205253,"ip_address":"","ucode":"773D6104F56767","user_header":"https://static001.geekbang.org/account/avatar/00/12/64/05/6989dce6.jpg","comment_is_top":false,"comment_ctime":1625486180,"is_pvip":false,"replies":[{"id":"109229","content":" 优秀！","user_name":"作者回复","user_name_real":"CK1.0","uid":"1167883","ctime":1625851813,"ip_address":"","comment_id":301017,"utype":1}],"discussion_count":1,"race_medal":0,"score":"27395289956","product_id":100079601,"comment_content":"看的比较过瘾。<br><br>这些git命令，我一般都用zsh里面git插件的缩写来完成。说白了就是一批alias命令。<br><br>比如gcb切分支，gsta保存修改到堆栈，gstp恢复堆栈中的修改，gpsup新建远端分支。grb变基，grh 软重置，grhh硬重置等等。","like_count":6,"discussions":[{"author":{"id":1167883,"avatar":"https://static001.geekbang.org/account/avatar/00/11/d2/0b/cdd0787a.jpg","nickname":"孔令飞","note":"","ucode":"8363EA4BD0AAF0","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":522873,"discussion_content":" 优秀！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1625851813,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":296969,"user_name":"Alery","can_delete":false,"product_type":"c1","uid":1156557,"ip_address":"","ucode":"08F3F49181E67B","user_header":"https://static001.geekbang.org/account/avatar/00/11/a5/cd/3aff5d57.jpg","comment_is_top":false,"comment_ctime":1623243966,"is_pvip":false,"replies":[{"id":"107884","content":"合并master分支的代码，跟git merge相比，可以避免很多自动生成的merge记录","user_name":"作者回复","user_name_real":"CK1.0","uid":"1167883","ctime":1623287914,"ip_address":"","comment_id":296969,"utype":1}],"discussion_count":3,"race_medal":0,"score":"23098080446","product_id":100079601,"comment_content":"请问Forking 工作流中git rebase upstream&#47;master 这一步是做什么？","like_count":5,"discussions":[{"author":{"id":1167883,"avatar":"https://static001.geekbang.org/account/avatar/00/11/d2/0b/cdd0787a.jpg","nickname":"孔令飞","note":"","ucode":"8363EA4BD0AAF0","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":521664,"discussion_content":"合并master分支的代码，跟git merge相比，可以避免很多自动生成的merge记录","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1623287914,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1105161,"avatar":"https://static001.geekbang.org/account/avatar/00/10/dd/09/feca820a.jpg","nickname":"helloworld","note":"","ucode":"1EECCA0F43E278","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":379259,"discussion_content":"合并master分支上新提交的commits到本地当前分支，使本地当前分支的代码和原作者最新master分支保持一致。不用merge而是用rebase是为了不产生额外的merge commit。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1623779855,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2278615,"avatar":"https://static001.geekbang.org/account/avatar/00/22/c4/d7/19b95e21.jpg","nickname":"海","note":"","ucode":"BB1D37E357CB7E","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":551198,"discussion_content":"学习了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1644923133,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":305821,"user_name":"forever_ele","can_delete":false,"product_type":"c1","uid":2725464,"ip_address":"","ucode":"CBC4ADD1763607","user_header":"https://static001.geekbang.org/account/avatar/00/29/96/58/b91503e7.jpg","comment_is_top":false,"comment_ctime":1628179344,"is_pvip":false,"replies":[{"id":"110908","content":"流程很清晰呀","user_name":"作者回复","user_name_real":"CK1.0","uid":"1167883","ctime":1628525313,"ip_address":"","comment_id":305821,"utype":1}],"discussion_count":1,"race_medal":0,"score":"14513081232","product_id":100079601,"comment_content":"说一下我这边的Git工作流经验：我们会预设三个常驻分支，分别是 Prod-生产分支、Pre-Prod-预发布分支、Dev-开发分支，master保留分支未使用。当有新功能需要开发时，首先是从prod分支进行拉取个人开发分支，因为此时dev可能会有其他同学开发的其他需求代码，但实际发布时间未知，为了避免新功能发布时包含其他需求代码所以要从prod分支新建个人开发分支，保证分支是“干净的”。个人本地开发测试后 合并dev分支进行线上测试，没有问题再将分支合并至pre交付客户或非技术部门进行uat测试。最后将个人开发分支合并prod进行发布。","like_count":3,"discussions":[{"author":{"id":1167883,"avatar":"https://static001.geekbang.org/account/avatar/00/11/d2/0b/cdd0787a.jpg","nickname":"孔令飞","note":"","ucode":"8363EA4BD0AAF0","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":524522,"discussion_content":"流程很清晰呀","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1628525313,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":296747,"user_name":"theseusv","can_delete":false,"product_type":"c1","uid":1449067,"ip_address":"","ucode":"27AC139A1D739E","user_header":"https://static001.geekbang.org/account/avatar/00/16/1c/6b/ade80119.jpg","comment_is_top":false,"comment_ctime":1623143343,"is_pvip":false,"replies":[{"id":"107816","content":"我们加油","user_name":"作者回复","user_name_real":"CK1.0","uid":"1167883","ctime":1623162578,"ip_address":"","comment_id":296747,"utype":1}],"discussion_count":1,"race_medal":0,"score":"14508045231","product_id":100079601,"comment_content":"催更催更~","like_count":3,"discussions":[{"author":{"id":1167883,"avatar":"https://static001.geekbang.org/account/avatar/00/11/d2/0b/cdd0787a.jpg","nickname":"孔令飞","note":"","ucode":"8363EA4BD0AAF0","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":521571,"discussion_content":"我们加油","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1623162578,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":304841,"user_name":"types","can_delete":false,"product_type":"c1","uid":2449777,"ip_address":"","ucode":"8B50927EF1804F","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLDUJyeq54fiaXAgF62tNeocO3lHsKT4mygEcNoZLnibg6ONKicMgCgUHSfgW8hrMUXlwpNSzR8MHZwg/132","comment_is_top":false,"comment_ctime":1627635659,"is_pvip":false,"replies":[{"id":"110269","content":"tag是不区分branch的。<br><br>比如你在develop分支打了v1.0.0 tag，切换到v1.0.0 tag时，git会自动切换到develop分支的v1.0.0 tag。<br><br>如果要维护多个发行版，可以分多个repo，但不好管理。建议这么来：<br><br>基础版本分支:<br>master<br><br>发行版A：<br>masterA&#47;feature&#47;xxx<br>masterA&#47;develop<br><br>发行版B：<br>masterB&#47;feature&#47;xxx<br>masterB&#47;develop<br>","user_name":"作者回复","user_name_real":"CK1.0","uid":"1167883","ctime":1627686544,"ip_address":"","comment_id":304841,"utype":1}],"discussion_count":2,"race_medal":0,"score":"10217570251","product_id":100079601,"comment_content":"看了git flow， tag都是在master上标记的，看起来只支持单个发行版本。<br>如果我需要维护多个发行版本，多个发行版本有共性需求，也有各自的定制化需求，请问这个时候应该以  什么样的流程进行开发？","like_count":2,"discussions":[{"author":{"id":1167883,"avatar":"https://static001.geekbang.org/account/avatar/00/11/d2/0b/cdd0787a.jpg","nickname":"孔令飞","note":"","ucode":"8363EA4BD0AAF0","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":524182,"discussion_content":"tag是不区分branch的。\n\n比如你在develop分支打了v1.0.0 tag，切换到v1.0.0 tag时，git会自动切换到develop分支的v1.0.0 tag。\n\n如果要维护多个发行版，可以分多个repo，但不好管理。建议这么来：\n\n基础版本分支:\nmaster\n\n发行版A：\nmasterA/feature/xxx\nmasterA/develop\n\n发行版B：\nmasterB/feature/xxx\nmasterB/develop\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1627686544,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1899599,"avatar":"https://static001.geekbang.org/account/avatar/00/1c/fc/4f/0a452c94.jpg","nickname":"大毛","note":"","ucode":"93B18287F06706","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":388705,"discussion_content":"工作中也遇到了这个问题，很好奇你们是如何解决这个问题的？\n目前，我们各个版本之间的差异不是很大，会在各个层将不同的功能分开，能共用的就共用（有点像继承+各自扩展的样子），然后在cmd 启动的时候依据需求启动不同功能的版本。\n虽然这么做可行，但是依然感觉很奇怪，所以很好奇你们是怎么做的。感谢老哥🙏","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1628921301,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":299770,"user_name":"崔子昂","can_delete":false,"product_type":"c1","uid":1124961,"ip_address":"","ucode":"79A007047F207F","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eprazLDhfhCOtPtDf9mNOkgdxjut8iadXWTnVibO8Apuzr3FJQibzKzsGDnp2zAialEqdm9zou2BxZ4Dw/132","comment_is_top":false,"comment_ctime":1624853562,"is_pvip":false,"replies":[{"id":"108753","content":"可以根据需要自己指定branch名规范，如果有这种联动性需求，其实也可以适配","user_name":"作者回复","user_name_real":"CK1.0","uid":"1167883","ctime":1624929989,"ip_address":"","comment_id":299770,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10214788154","product_id":100079601,"comment_content":"很多公司会用Jira这种issue管理系统，而branch name用issue code的话，会有一些联动性的功能，比较纠结如果用功能名的话，就失去这个方便的地方了。","like_count":2,"discussions":[{"author":{"id":1167883,"avatar":"https://static001.geekbang.org/account/avatar/00/11/d2/0b/cdd0787a.jpg","nickname":"孔令飞","note":"","ucode":"8363EA4BD0AAF0","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":522541,"discussion_content":"可以根据需要自己指定branch名规范，如果有这种联动性需求，其实也可以适配","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1624929989,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":298603,"user_name":"daz2yy","can_delete":false,"product_type":"c1","uid":1008723,"ip_address":"","ucode":"639A67961EC893","user_header":"https://static001.geekbang.org/account/avatar/00/0f/64/53/c93b8110.jpg","comment_is_top":false,"comment_ctime":1624234861,"is_pvip":false,"replies":[{"id":"108356","content":"release是这个feature的release，同时也是大家共用的。<br>发版本是串行发布的，其它的后面排队","user_name":"作者回复","user_name_real":"CK1.0","uid":"1167883","ctime":1624286532,"ip_address":"","comment_id":298603,"utype":1}],"discussion_count":3,"race_medal":0,"score":"10214169453","product_id":100079601,"comment_content":"老师好，GitFlow 工作方式，关于修复bug这里有点疑问，release分支修复bug，然后再合并到 develop 和 master；这里的 release 是只有这个feature的release吗？还是大家共用的一个 release 呢？如果是一个 feature 一个 release 那需要很多测试环境，如果大家共用一个 release，那会有其他的功能代码就不能在上面修复bug了","like_count":2,"discussions":[{"author":{"id":1167883,"avatar":"https://static001.geekbang.org/account/avatar/00/11/d2/0b/cdd0787a.jpg","nickname":"孔令飞","note":"","ucode":"8363EA4BD0AAF0","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":522185,"discussion_content":"release是这个feature的release，同时也是大家共用的。\n发版本是串行发布的，其它的后面排队","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1624286532,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1648279,"avatar":"https://static001.geekbang.org/account/avatar/00/19/26/97/35e8765b.jpg","nickname":"阿泽onebig","note":"","ucode":"C5E213C2757772","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":379939,"discussion_content":"hotfix分支应该从master分支切出来吧","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1624256959,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1008723,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/64/53/c93b8110.jpg","nickname":"daz2yy","note":"","ucode":"639A67961EC893","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1648279,"avatar":"https://static001.geekbang.org/account/avatar/00/19/26/97/35e8765b.jpg","nickname":"阿泽onebig","note":"","ucode":"C5E213C2757772","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":380405,"discussion_content":"是普通的bug修复，不是线上的紧急bug","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1624493191,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":379939,"ip_address":""},"score":380405,"extra":""}]}]},{"had_liked":false,"id":296735,"user_name":"惟新","can_delete":false,"product_type":"c1","uid":1037553,"ip_address":"","ucode":"93D07C4D97F7AD","user_header":"https://static001.geekbang.org/account/avatar/00/0f/d4/f1/c06aa702.jpg","comment_is_top":false,"comment_ctime":1623137631,"is_pvip":false,"replies":[{"id":"107813","content":"我们加油","user_name":"作者回复","user_name_real":"CK1.0","uid":"1167883","ctime":1623162487,"ip_address":"","comment_id":296735,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10213072223","product_id":100079601,"comment_content":"抓紧更新","like_count":2,"discussions":[{"author":{"id":1167883,"avatar":"https://static001.geekbang.org/account/avatar/00/11/d2/0b/cdd0787a.jpg","nickname":"孔令飞","note":"","ucode":"8363EA4BD0AAF0","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":521567,"discussion_content":"我们加油","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1623162487,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":296713,"user_name":"OldFox","can_delete":false,"product_type":"c1","uid":2086973,"ip_address":"","ucode":"6195262F3A9AA9","user_header":"https://static001.geekbang.org/account/avatar/00/1f/d8/3d/8a44993f.jpg","comment_is_top":false,"comment_ctime":1623126105,"is_pvip":false,"replies":[{"id":"107812","content":"不用，合并hotfix分支是在develop和master 不是feature","user_name":"作者回复","user_name_real":"CK1.0","uid":"1167883","ctime":1623162477,"ip_address":"","comment_id":296713,"utype":1}],"discussion_count":3,"race_medal":0,"score":"10213060697","product_id":100079601,"comment_content":"git checkout develop<br>git merge --no-ff hotfix&#47;print-error # 6. 把 hotfix 分支合并到 develop 分支<br><br>这两步，如果是同时有10个同事在开发十个feature，那就要通知那十个同事合并一下hotfix分支么。","like_count":2,"discussions":[{"author":{"id":1167883,"avatar":"https://static001.geekbang.org/account/avatar/00/11/d2/0b/cdd0787a.jpg","nickname":"孔令飞","note":"","ucode":"8363EA4BD0AAF0","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":521561,"discussion_content":"不用，合并hotfix分支是在develop和master 不是feature","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1623162477,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1407941,"avatar":"https://static001.geekbang.org/account/avatar/00/15/7b/c5/35f92dad.jpg","nickname":"Jone_乔泓恺","note":"","ucode":"158154301D5E40","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":577366,"discussion_content":"处理冲突的时间点不同：\n1：如果在 feature 分支上合并 develop 分支，当 git stash pop 后解决冲突；\n2： 如果不在 feature 分支上合并 develop 分支，当新功能开发完成，合并到 develop 的时候 会提示有冲突，这时再出去冲突，然后提交","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1656053664,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2086973,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/d8/3d/8a44993f.jpg","nickname":"OldFox","note":"","ucode":"6195262F3A9AA9","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":378378,"discussion_content":"🌚感谢","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1623201081,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":313522,"user_name":"Juniper","can_delete":false,"product_type":"c1","uid":1174794,"ip_address":"","ucode":"1BC24554034BD3","user_header":"https://static001.geekbang.org/account/avatar/00/11/ed/0a/18201290.jpg","comment_is_top":false,"comment_ctime":1632473741,"is_pvip":false,"replies":[{"id":"113701","content":"好问题。<br><br>等release1.0.0分支的修复合并到develop分支后，后来新建的分支再rebase下develop分支就可以了。","user_name":"作者回复","user_name_real":"CK1.0","uid":"1167883","ctime":1632761269,"ip_address":"","comment_id":313522,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5927441037","product_id":100079601,"comment_content":"看完这篇文章，受益匪浅。不过有个疑问，如果采用git flow模式，提测的时候提release分支测试的，如果我有一个release1.0.0的分支在测试中，这个时候又有新的开发任务了，从develop分支切出来，此时的develop分支代码只经过开发测试，还非常不稳定，对于新的feature分支影响还是比较大的，怎么解决。严格安照串行的方式是没有问题的，release1.0.0验证完成，master develop merge完成发布，然后在开始进入下个功能的开发。但是现实场景很容易出现，上一个版本还是测试阶段，就有别的开发任务了","like_count":1,"discussions":[{"author":{"id":1167883,"avatar":"https://static001.geekbang.org/account/avatar/00/11/d2/0b/cdd0787a.jpg","nickname":"孔令飞","note":"","ucode":"8363EA4BD0AAF0","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":527375,"discussion_content":"好问题。\n\n等release1.0.0分支的修复合并到develop分支后，后来新建的分支再rebase下develop分支就可以了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1632761269,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":304711,"user_name":"types","can_delete":false,"product_type":"c1","uid":2449777,"ip_address":"","ucode":"8B50927EF1804F","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLDUJyeq54fiaXAgF62tNeocO3lHsKT4mygEcNoZLnibg6ONKicMgCgUHSfgW8hrMUXlwpNSzR8MHZwg/132","comment_is_top":false,"comment_ctime":1627561063,"is_pvip":false,"replies":[{"id":"110253","content":"把v1.1.0的bugfix手动同步到master分支，并出一个新版本v2.1.1。这时候v1.1.0其实已经是维护分支了，这种偶然性的bugfix还是可以手工同步到master分支的。","user_name":"作者回复","user_name_real":"CK1.0","uid":"1167883","ctime":1627612547,"ip_address":"","comment_id":304711,"utype":1}],"discussion_count":2,"race_medal":0,"score":"5922528359","product_id":100079601,"comment_content":"对于git flow有一个疑问：如何同时维护多个版本？<br>举个例子：<br>例如realese2 个版本， v1.1.0 和 v2.1.0<br>两个版本是完全不兼容的。<br>此时v1.1.0上有个bug需要fix，这个fix如何体现在master分支上（假设这个bug所在的功能已经由于v2.1.0的开发不存在）","like_count":1,"discussions":[{"author":{"id":1167883,"avatar":"https://static001.geekbang.org/account/avatar/00/11/d2/0b/cdd0787a.jpg","nickname":"孔令飞","note":"","ucode":"8363EA4BD0AAF0","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":524130,"discussion_content":"把v1.1.0的bugfix手动同步到master分支，并出一个新版本v2.1.1。这时候v1.1.0其实已经是维护分支了，这种偶然性的bugfix还是可以手工同步到master分支的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1627612547,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1071974,"avatar":"https://static001.geekbang.org/account/avatar/00/10/5b/66/ad35bc68.jpg","nickname":"党","note":"","ucode":"EE531DB3EA124D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":544378,"discussion_content":"完全不兼容的话是不是fork一个新项目更好啊，修改了都有的bug直接pr过去，这样不是更好维护么。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1641486043,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":303785,"user_name":"罗峰","can_delete":false,"product_type":"c1","uid":1218501,"ip_address":"","ucode":"5F3D6AF8F28322","user_header":"https://static001.geekbang.org/account/avatar/00/12/97/c5/84491beb.jpg","comment_is_top":false,"comment_ctime":1627000607,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5921967903","product_id":100079601,"comment_content":"我司简单点使用forking工作流，出release版本也是共用的。","like_count":1},{"had_liked":false,"id":303599,"user_name":"休","can_delete":false,"product_type":"c1","uid":2666309,"ip_address":"","ucode":"A67731528943D0","user_header":"https://static001.geekbang.org/account/avatar/00/28/af/45/26a4996a.jpg","comment_is_top":false,"comment_ctime":1626868384,"is_pvip":false,"replies":[{"id":"109981","content":"如果都按流程来开发，2个分支不会有大的差异的。","user_name":"作者回复","user_name_real":"CK1.0","uid":"1167883","ctime":1627031150,"ip_address":"","comment_id":303599,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5921835680","product_id":100079601,"comment_content":"develop分支和master分支，并行太久，会不会导致两个分支差异越来越大","like_count":1,"discussions":[{"author":{"id":1167883,"avatar":"https://static001.geekbang.org/account/avatar/00/11/d2/0b/cdd0787a.jpg","nickname":"孔令飞","note":"","ucode":"8363EA4BD0AAF0","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":523752,"discussion_content":"如果都按流程来开发，2个分支不会有大的差异的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1627031150,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":301752,"user_name":"木子","can_delete":false,"product_type":"c1","uid":1784886,"ip_address":"","ucode":"F9548C192F9687","user_header":"https://static001.geekbang.org/account/avatar/00/1b/3c/36/94762d1c.jpg","comment_is_top":false,"comment_ctime":1625836547,"is_pvip":true,"replies":[{"id":"109209","content":"有2种方式：<br>1. 直接基于feature&#47;A编译，将构建产物提交给测试同学测试<br>2. 如果feature&#47;A都合并到develop分支，那测试的时候是需要一起测试的，这样可以一起发布。<br>一般可以选择第2种方法，既然合并到develop分支了，那就一起测试了，省的单独再测试。","user_name":"作者回复","user_name_real":"CK1.0","uid":"1167883","ctime":1625849106,"ip_address":"","comment_id":301752,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5920803843","product_id":100079601,"comment_content":"gitflow 工作流中，如何处理测试环境只有一个的问题？<br>现在是develop分支部署测试，如果没问题，可以提线上.<br>但是有个问题：feature&#47;A，feature&#47;B，feature&#47;C，都合并到develop上测试，这时候部署到生成环境时，只想上线 feature&#47;B功能，但是feature&#47;A，feature&#47;C都会被动上线<br>如果feature&#47;A，feature&#47;C都是新功能没问题，<br>但是现在feature&#47;A是在原接口上修改的，我想要发版部署，怎么处理？","like_count":1,"discussions":[{"author":{"id":1167883,"avatar":"https://static001.geekbang.org/account/avatar/00/11/d2/0b/cdd0787a.jpg","nickname":"孔令飞","note":"","ucode":"8363EA4BD0AAF0","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":523081,"discussion_content":"有2种方式：\n1. 直接基于feature/A编译，将构建产物提交给测试同学测试\n2. 如果feature/A都合并到develop分支，那测试的时候是需要一起测试的，这样可以一起发布。\n一般可以选择第2种方法，既然合并到develop分支了，那就一起测试了，省的单独再测试。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1625849106,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":297130,"user_name":"zzZ","can_delete":false,"product_type":"c1","uid":2361000,"ip_address":"","ucode":"E597EB92360701","user_header":"https://static001.geekbang.org/account/avatar/00/24/06/a8/32a6987d.jpg","comment_is_top":false,"comment_ctime":1623321384,"is_pvip":false,"replies":[{"id":"107922","content":"Branch可以选择保留，如果不用就可以删除，branch太多，branch -a时就会有太多branch了，有点乱。<br>就跟书桌上有一个物品，既不能做装饰，又没其他任何作用，何不把东西从书桌上拿走，保持书桌干净整齐。","user_name":"作者回复","user_name_real":"CK1.0","uid":"1167883","ctime":1623335303,"ip_address":"","comment_id":297130,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5918288680","product_id":100079601,"comment_content":"为什么完成开发之后要删除branch呀？","like_count":1,"discussions":[{"author":{"id":1167883,"avatar":"https://static001.geekbang.org/account/avatar/00/11/d2/0b/cdd0787a.jpg","nickname":"孔令飞","note":"","ucode":"8363EA4BD0AAF0","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":521731,"discussion_content":"Branch可以选择保留，如果不用就可以删除，branch太多，branch -a时就会有太多branch了，有点乱。\n就跟书桌上有一个物品，既不能做装饰，又没其他任何作用，何不把东西从书桌上拿走，保持书桌干净整齐。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1623335303,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":296854,"user_name":"Vackine","can_delete":false,"product_type":"c1","uid":1139588,"ip_address":"","ucode":"8E412EE82D3B59","user_header":"https://static001.geekbang.org/account/avatar/00/11/63/84/f45c4af9.jpg","comment_is_top":false,"comment_ctime":1623203670,"is_pvip":false,"replies":[{"id":"107890","content":"冲突不可避免，只能减少。相对于其他gitflow工作流可以大大减少冲突的概率。而且这个合并是必须要合的，不然主干就会丢失这次的bug修复了","user_name":"作者回复","user_name_real":"CK1.0","uid":"1167883","ctime":1623288615,"ip_address":"","comment_id":296854,"utype":1}],"discussion_count":2,"race_medal":0,"score":"5918170966","product_id":100079601,"comment_content":"思考题：git flow 流程下临时bug，是先从master 拉一个 hotfix ，修改之后hotfix 合并到devlop分支同步最新代码，合并到master 发布修复？<br><br>感觉gitflow 流程 的前提是功能划分的解耦，如果合并冲突太多，不也增加了沟通成本。","like_count":1,"discussions":[{"author":{"id":1167883,"avatar":"https://static001.geekbang.org/account/avatar/00/11/d2/0b/cdd0787a.jpg","nickname":"孔令飞","note":"","ucode":"8363EA4BD0AAF0","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":521612,"discussion_content":"冲突不可避免，只能减少。相对于其他gitflow工作流可以大大减少冲突的概率。而且这个合并是必须要合的，不然主干就会丢失这次的bug修复了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1623288615,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2652269,"avatar":"","nickname":"Geek_b797c1","note":"","ucode":"A70678DCF7EA72","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":378472,"discussion_content":"是的。我们现在还是单体系统，就没完全照搬这个流程。改了一下，来适合公司现状","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1623238612,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":296709,"user_name":"Geek_c3e438","can_delete":false,"product_type":"c1","uid":2188564,"ip_address":"","ucode":"98ECC14625735B","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/mEASWaicRcYrU1TtnkoN7Dx7IEL5godockwSZicz1j9UXN88vtoG2ynJ2yib2oCMcnIjwJtLx60JHsm9moWrNM64A/132","comment_is_top":false,"comment_ctime":1623123844,"is_pvip":false,"replies":[{"id":"107810","content":"1的理解是对的","user_name":"作者回复","user_name_real":"CK1.0","uid":"1167883","ctime":1623162361,"ip_address":"","comment_id":296709,"utype":1}],"discussion_count":1,"race_medal":1,"score":"5918091140","product_id":100079601,"comment_content":"1. 一般的开源项目对于Contributor而言并没有Write权限，所以是不是通常情况下不需要这句话：<br>git remote set-url --push upstream no_push<br>2. 在我们公司，各开发者一般都有Repository的Read权限，所以我们采用<br>Forking工作流 + 精简版 Git Flow工作流","like_count":1,"discussions":[{"author":{"id":1167883,"avatar":"https://static001.geekbang.org/account/avatar/00/11/d2/0b/cdd0787a.jpg","nickname":"孔令飞","note":"","ucode":"8363EA4BD0AAF0","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":521558,"discussion_content":"1的理解是对的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1623162361,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":354665,"user_name":"Geek_9aaa39","can_delete":false,"product_type":"c1","uid":2034473,"ip_address":"浙江","ucode":"B426A19C6D137B","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIUdfNDQs3eLhBIUGB6smXSXor31lmD129b5mv04SRwCXniaQesgVmvzTjXsgFbBWObwhDflD5qtCg/132","comment_is_top":false,"comment_ctime":1660653440,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1660653440","product_id":100079601,"comment_content":"老师，我感觉release分支不能再修改了吧，如果有问题应该再发一个release吧","like_count":0},{"had_liked":false,"id":349858,"user_name":"Paradise","can_delete":false,"product_type":"c1","uid":1070878,"ip_address":"","ucode":"D92EACCBF6B3B5","user_header":"https://static001.geekbang.org/account/avatar/00/10/57/1e/8ed4a7cf.jpg","comment_is_top":false,"comment_ctime":1656387662,"is_pvip":true,"discussion_count":0,"race_medal":1,"score":"1656387662","product_id":100079601,"comment_content":"在 forking 工作流下，文中有提到，在 feature&#47;add-function 分支上开发完毕后，需要先同步upstream。在特性分支上写完代码，并且没有 add 和 commit 情况下，直接 fetch upstream 然后rebase upstream&#47;master，git 会提示：<br><br>error: cannot rebase: You have unstaged changes.<br>error: Please commit or stash them.<br><br>不知道是不是姿势不对，是否在rebase upstream&#47;master 需要先commit一下呢？希望老师解答一下哈<br>","like_count":0},{"had_liked":false,"id":349538,"user_name":"Jone_乔泓恺","can_delete":false,"product_type":"c1","uid":1407941,"ip_address":"","ucode":"158154301D5E40","user_header":"https://static001.geekbang.org/account/avatar/00/15/7b/c5/35f92dad.jpg","comment_is_top":false,"comment_ctime":1656052383,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1656052383","product_id":100079601,"comment_content":"老师您好，有几个问题想咨询下：<br>文中 Git Flow 工作流中的第8点【code review 通过后，由代码仓库 matainer 将功能分支合并到 develop 分支。】<br>1：这里的 matainer 是什么样的角色？<br>2：合并到 develop 分支是在 Github 上进行的嘛？如果是，合并后的工作流是怎样的？比如如何通知开发人员，开发人员的本地如何更新 develop 分支？","like_count":0},{"had_liked":false,"id":337384,"user_name":"aoe","can_delete":false,"product_type":"c1","uid":1121758,"ip_address":"","ucode":"1C6201EDB4E954","user_header":"https://static001.geekbang.org/account/avatar/00/11/1d/de/62bfa83f.jpg","comment_is_top":false,"comment_ctime":1646797356,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1646797356","product_id":100079601,"comment_content":"Forking 很有意思啊","like_count":0},{"had_liked":false,"id":336847,"user_name":"JC","can_delete":false,"product_type":"c1","uid":1097553,"ip_address":"","ucode":"A95FACC6EE9851","user_header":"https://static001.geekbang.org/account/avatar/00/10/bf/51/1791ae60.jpg","comment_is_top":false,"comment_ctime":1646397068,"is_pvip":true,"replies":[{"id":"123429","content":"master一直是最新的、稳定的、现网正在使用的代码。<br><br>如果没有master会存在以下问题：<br>1. 不能多版本并行开发（多版本并行开发的代码最终需要合并，往哪里合并？）<br>2. 下一次发布时，需要知道上一次发布的具体版本号，新建release分支比较麻烦<br>3. 还有其他一些弊端，你可以思考下","user_name":"作者回复","user_name_real":"编辑","uid":"1167883","ctime":1647038600,"ip_address":"","comment_id":336847,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1646397068","product_id":100079601,"comment_content":"git flow场景下是不是最新的release其实跟master是一样的，那master的意义是什么？","like_count":0,"discussions":[{"author":{"id":1167883,"avatar":"https://static001.geekbang.org/account/avatar/00/11/d2/0b/cdd0787a.jpg","nickname":"孔令飞","note":"","ucode":"8363EA4BD0AAF0","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":555689,"discussion_content":"master一直是最新的、稳定的、现网正在使用的代码。\n\n如果没有master会存在以下问题：\n1. 不能多版本并行开发（多版本并行开发的代码最终需要合并，往哪里合并？）\n2. 下一次发布时，需要知道上一次发布的具体版本号，新建release分支比较麻烦\n3. 还有其他一些弊端，你可以思考下","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1647038600,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":330719,"user_name":"党","can_delete":false,"product_type":"c1","uid":1071974,"ip_address":"","ucode":"EE531DB3EA124D","user_header":"https://static001.geekbang.org/account/avatar/00/10/5b/66/ad35bc68.jpg","comment_is_top":false,"comment_ctime":1642131345,"is_pvip":false,"replies":[{"id":"120938","content":"code review一般是在远程仓库上进行，通过后由CICD系统自动进行单元测试。本地的code review是没办法多人协作的","user_name":"作者回复","user_name_real":"编辑","uid":"1167883","ctime":1642433795,"ip_address":"","comment_id":330719,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1642131345","product_id":100079601,"comment_content":"git flow第8步“code review 通过后，由代码仓库 matainer 将功能分支合并到 develop 分支“ 有点疑问<br>1：code revicew 一般情况都是在本地进行吧 需要先把feature拉取到本地吧<br>2：本地代码审核 除了看代码 也需要先进行合并 对代码进行简单测试吧 审核或者测试不通过 直接进行reset回滚，如果通过了则直接提交到remote里，<br>你们审核是这样么？我看你第8步只有一个 merge本地合并命令<br> ","like_count":0,"discussions":[{"author":{"id":1167883,"avatar":"https://static001.geekbang.org/account/avatar/00/11/d2/0b/cdd0787a.jpg","nickname":"孔令飞","note":"","ucode":"8363EA4BD0AAF0","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":546837,"discussion_content":"code review一般是在远程仓库上进行，通过后由CICD系统自动进行单元测试。本地的code review是没办法多人协作的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1642433795,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":329993,"user_name":"HelloBug","can_delete":false,"product_type":"c1","uid":1249598,"ip_address":"","ucode":"E61A4AD5C2F724","user_header":"https://static001.geekbang.org/account/avatar/00/13/11/3e/925aa996.jpg","comment_is_top":false,"comment_ctime":1641716789,"is_pvip":true,"replies":[{"id":"120948","content":"master代码有2.0说明线上已经是2.0的代码或者2.0的代码完全满足发布到现网的条件，有2.0的代码是没有问题的","user_name":"作者回复","user_name_real":"编辑","uid":"1167883","ctime":1642434331,"ip_address":"","comment_id":329993,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1641716789","product_id":100079601,"comment_content":"git flow工作流，如果线上1.0版本出现紧急bug，首先从master checkout一个tag 1.0的代码，修复、merge到master，如果此时master已经有了tag 2.0的代码，合并到master之后编译就会有2.0的代码功能，如何保证编译出的代码仅包含1.0的bug修复呢？","like_count":0,"discussions":[{"author":{"id":1167883,"avatar":"https://static001.geekbang.org/account/avatar/00/11/d2/0b/cdd0787a.jpg","nickname":"孔令飞","note":"","ucode":"8363EA4BD0AAF0","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":546851,"discussion_content":"master代码有2.0说明线上已经是2.0的代码或者2.0的代码完全满足发布到现网的条件，有2.0的代码是没有问题的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1642434331,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":329141,"user_name":"tenyee","can_delete":false,"product_type":"c1","uid":1369659,"ip_address":"","ucode":"AC6CF4BCBF1C16","user_header":"https://static001.geekbang.org/account/avatar/00/14/e6/3b/bb9527f4.jpg","comment_is_top":false,"comment_ctime":1641176740,"is_pvip":false,"replies":[{"id":"120963","content":"测试通过后，将功能分支合并到 master 分支和 develop 分支。","user_name":"作者回复","user_name_real":"编辑","uid":"1167883","ctime":1642435113,"ip_address":"","comment_id":329141,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1641176740","product_id":100079601,"comment_content":"老师好，小白一个，有个疑问请问下：<br>Git Flow模式时，hotfix修复过程中，往develop以及master中merge了hofix分支代码，但是没看到push，最后，feature开发的代码只看到往develop提PR，但是也没看到往master中合代码，想问一下，master的代码如何更新的？<br><br>谢谢~~","like_count":0,"discussions":[{"author":{"id":1167883,"avatar":"https://static001.geekbang.org/account/avatar/00/11/d2/0b/cdd0787a.jpg","nickname":"孔令飞","note":"","ucode":"8363EA4BD0AAF0","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":546867,"discussion_content":"测试通过后，将功能分支合并到 master 分支和 develop 分支。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1642435113,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":326964,"user_name":"脱缰小野马","can_delete":false,"product_type":"c1","uid":1358825,"ip_address":"","ucode":"D65D18BDB8E005","user_header":"https://static001.geekbang.org/account/avatar/00/14/bb/e9/ae1fbbaf.jpg","comment_is_top":false,"comment_ctime":1639799377,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1639799377","product_id":100079601,"comment_content":"有没有用到pre commit  这种fail fast机制提交前检测  好像还能规范commit msg格式","like_count":0},{"had_liked":false,"id":322815,"user_name":"yandongxiao","can_delete":false,"product_type":"c1","uid":1017700,"ip_address":"","ucode":"D397F4DB0109C8","user_header":"https://static001.geekbang.org/account/avatar/00/0f/87/64/3882d90d.jpg","comment_is_top":false,"comment_ctime":1637598116,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1637598116","product_id":100079601,"comment_content":"总结：<br>    基于 Git 工作流有四种：集中式工作流（只有一个master分支）；功能分支工作流（master+feature）；Git flow 工作流（master, develop, release, hotfix, feature）；Forking 工作流（master+feature）。<br>    不论使用 Git flow 工作流，还是 Forking 工作流，都有压缩 commit 的需求；都需要与上游同步，Git Flow 使用 git merge --no-off，Forking 工作流使用 git rebase。","like_count":0},{"had_liked":false,"id":318611,"user_name":"洋仔","can_delete":false,"product_type":"c1","uid":1907293,"ip_address":"","ucode":"60065172A83B23","user_header":"https://static001.geekbang.org/account/avatar/00/1d/1a/5d/963c9764.jpg","comment_is_top":false,"comment_ctime":1635348187,"is_pvip":true,"replies":[{"id":"115981","content":"1. 对，建议是最长1天1次，不是强制要求。<br>2. 具体根据情况，你说的也没毛病。<br>","user_name":"作者回复","user_name_real":"孔令飞","uid":"1167883","ctime":1636005385,"ip_address":"","comment_id":318611,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1635348187","product_id":100079601,"comment_content":"我个人理解，结合上文，有几点：<br>1. 应该多进行commit及push，而非一天一次，充分保证自己代码的不丢失；<br>2. 应该强制squash，因为1必然导致commit过多，一定要强制合，而不是文中所述不进行合并，个人分支得commit没有意义，确保主干或者开发分支得commit清晰；<br>3. 不应该不建议rebase，相反，应该强制rebase而禁用merge，尤其应该用rebasr -i","like_count":0,"discussions":[{"author":{"id":1167883,"avatar":"https://static001.geekbang.org/account/avatar/00/11/d2/0b/cdd0787a.jpg","nickname":"孔令飞","note":"","ucode":"8363EA4BD0AAF0","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":529315,"discussion_content":"1. 对，建议是最长1天1次，不是强制要求。\n2. 具体根据情况，你说的也没毛病。\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1636005385,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":316814,"user_name":"米兔","can_delete":false,"product_type":"c1","uid":2796701,"ip_address":"","ucode":"5B2CC592B822A1","user_header":"https://static001.geekbang.org/account/avatar/00/2a/ac/9d/1f697753.jpg","comment_is_top":false,"comment_ctime":1634555877,"is_pvip":false,"replies":[{"id":"114913","content":"一些可以通过CI&#47;CD流程来约束。另外一些只能通过不断地强调流程，慢慢养成团队文化来解决。","user_name":"作者回复","user_name_real":"孔令飞","uid":"1167883","ctime":1634736737,"ip_address":"","comment_id":316814,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1634555877","product_id":100079601,"comment_content":"这些规范是在大厂里面约定好的吗？是如何贯彻执行的呢？","like_count":0,"discussions":[{"author":{"id":1167883,"avatar":"https://static001.geekbang.org/account/avatar/00/11/d2/0b/cdd0787a.jpg","nickname":"孔令飞","note":"","ucode":"8363EA4BD0AAF0","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":528517,"discussion_content":"一些可以通过CI/CD流程来约束。另外一些只能通过不断地强调流程，慢慢养成团队文化来解决。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1634736737,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":305678,"user_name":"Sch0ng","can_delete":false,"product_type":"c1","uid":1145554,"ip_address":"","ucode":"73F6113931B1AC","user_header":"https://static001.geekbang.org/account/avatar/00/11/7a/d2/4ba67c0c.jpg","comment_is_top":false,"comment_ctime":1628095746,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1628095746","product_id":100079601,"comment_content":"作者梳理了四种协作模式，各自有特定的场景。<br>多人协作的项目一般使用Git flow。<br>实践的过程中发现成员对这套流程的认知参差不齐，特别是一知半解的选手。<br>闷着头一通merge，最后发现莫名其妙的把别人的代码干掉了。<br>一知半解害死人。<br>","like_count":0},{"had_liked":false,"id":303442,"user_name":"aLong","can_delete":false,"product_type":"c1","uid":2409553,"ip_address":"","ucode":"11DB1B9C579811","user_header":"https://static001.geekbang.org/account/avatar/00/24/c4/51/5bca1604.jpg","comment_is_top":false,"comment_ctime":1626788694,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1626788694","product_id":100079601,"comment_content":"厉害，学习了。","like_count":0},{"had_liked":false,"id":299503,"user_name":"MClink","can_delete":false,"product_type":"c1","uid":1435733,"ip_address":"","ucode":"F479190923355C","user_header":"https://static001.geekbang.org/account/avatar/00/15/e8/55/92f82281.jpg","comment_is_top":false,"comment_ctime":1624684625,"is_pvip":true,"replies":[{"id":"108618","content":"欢迎多分享","user_name":"作者回复","user_name_real":"CK1.0","uid":"1167883","ctime":1624704628,"ip_address":"","comment_id":299503,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1624684625","product_id":100079601,"comment_content":"呆了好几家公司，每种模式都经历过了","like_count":0,"discussions":[{"author":{"id":1167883,"avatar":"https://static001.geekbang.org/account/avatar/00/11/d2/0b/cdd0787a.jpg","nickname":"孔令飞","note":"","ucode":"8363EA4BD0AAF0","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":522458,"discussion_content":"欢迎多分享","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1624704628,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":298428,"user_name":"awmthink","can_delete":false,"product_type":"c1","uid":1331202,"ip_address":"","ucode":"742915BBCE7111","user_header":"https://static001.geekbang.org/account/avatar/00/14/50/02/cce1cf67.jpg","comment_is_top":false,"comment_ctime":1624097052,"is_pvip":false,"replies":[{"id":"108318","content":"fix完后，可以在1.1版本中merge到1.1分支。","user_name":"作者回复","user_name_real":"CK1.0","uid":"1167883","ctime":1624209721,"ip_address":"","comment_id":298428,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1624097052","product_id":100079601,"comment_content":"老师，请问在gitflow中如何处理，项目当前已经开发但1.1版本了，但是线上1.0的版本中，遇到个bug，需要修复，可是线上又不接受用1.1的版本，怕有坑。所以只能在1.0上修复，那这样就必须一直维护着这个1.0- hotfix的分支在吗？","like_count":0,"discussions":[{"author":{"id":1167883,"avatar":"https://static001.geekbang.org/account/avatar/00/11/d2/0b/cdd0787a.jpg","nickname":"孔令飞","note":"","ucode":"8363EA4BD0AAF0","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":522137,"discussion_content":"fix完后，可以在1.1版本中merge到1.1分支。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1624209721,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":298152,"user_name":"低调","can_delete":false,"product_type":"c1","uid":1124982,"ip_address":"","ucode":"7D29B371BE9A46","user_header":"https://static001.geekbang.org/account/avatar/00/11/2a/76/36fdddb3.jpg","comment_is_top":false,"comment_ctime":1623925381,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1623925381","product_id":100079601,"comment_content":"老师好，develop有新的功能在测试，有个简单的紧急需求需要提前上线，应该是从master切出一个分支来开发吧，跟hotfix一样？那命名应该是用feature？","like_count":0},{"had_liked":false,"id":297458,"user_name":"墨迹","can_delete":false,"product_type":"c1","uid":1155645,"ip_address":"","ucode":"04827A042E74E5","user_header":"https://static001.geekbang.org/account/avatar/00/11/a2/3d/a591788b.jpg","comment_is_top":false,"comment_ctime":1623564169,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1623564169","product_id":100079601,"comment_content":"这个工作流写的真好，我这边还在用集中式。","like_count":0},{"had_liked":false,"id":297326,"user_name":"killer","can_delete":false,"product_type":"c1","uid":1047778,"ip_address":"","ucode":"E275AD8C4523FA","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/7P4wtgRQt1l0YQlVOtiaUKey2AFZqQCAcABzdCNTP0JR027tkhVkRYgj1iaYF8OlqsE8j6A6icsAvYHIAX8E31WNg/132","comment_is_top":false,"comment_ctime":1623457995,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1623457995","product_id":100079601,"comment_content":"后端同学15人，并行开发版本好几个，线上分支release，版本迭代release拉版本分支feature-xxx，开发完成之后提交pr合并到develop，如果有冲突，develop拉merge-xxx分支合并feature-xxx再提交pr，因为develop可能同时提测好几个版本。还有一种情况当前版本迭代会合并到私有化部署分支，不能完全合并，采用cherry-pick合并，由于提交很多，导致合并繁琐，非常容易出错","like_count":0},{"had_liked":false,"id":297288,"user_name":"大熊","can_delete":false,"product_type":"c1","uid":1008951,"ip_address":"","ucode":"D7858E9DA87B5E","user_header":"https://static001.geekbang.org/account/avatar/00/0f/65/37/56c492d3.jpg","comment_is_top":false,"comment_ctime":1623407177,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1623407177","product_id":100079601,"comment_content":"等更啊，这个太棒了。没参加过大型项目的都能了解细节","like_count":0},{"had_liked":false,"id":296966,"user_name":"Alery","can_delete":false,"product_type":"c1","uid":1156557,"ip_address":"","ucode":"08F3F49181E67B","user_header":"https://static001.geekbang.org/account/avatar/00/11/a5/cd/3aff5d57.jpg","comment_is_top":false,"comment_ctime":1623242740,"is_pvip":false,"replies":[{"id":"107891","content":"正常是不用强推的，push就可以了","user_name":"作者回复","user_name_real":"CK1.0","uid":"1167883","ctime":1623288751,"ip_address":"","comment_id":296966,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1623242740","product_id":100079601,"comment_content":"git flow工作流master合并hotfix分支不需要往远端push一下吗？我们公司是不允许往master分支上强推的，因为有些commit可能会被覆盖点。","like_count":0,"discussions":[{"author":{"id":1167883,"avatar":"https://static001.geekbang.org/account/avatar/00/11/d2/0b/cdd0787a.jpg","nickname":"孔令飞","note":"","ucode":"8363EA4BD0AAF0","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":521662,"discussion_content":"正常是不用强推的，push就可以了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1623288751,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":296768,"user_name":"jssyjam","can_delete":false,"product_type":"c1","uid":1266542,"ip_address":"","ucode":"D8205A6B562E66","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTI7FPOQMCj18HdAbrdHdz8QU6P6SR8zu41KDtdmXtWKtN7ZlXPfETPhPAjVtXa7FDLWsRsrJ0wkeA/132","comment_is_top":false,"comment_ctime":1623153585,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1623153585","product_id":100079601,"comment_content":"只求更新，不够学啊😊","like_count":0}]}