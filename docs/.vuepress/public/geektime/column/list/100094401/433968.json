{"id":433968,"title":"07 | 巧妙的响应式：深入理解Vue 3的响应式机制","content":"<p>你好，我是大圣。在上一讲中，我给你介绍了Composition API相比于Option API 的优点，以及&lt;script setup&gt;的语法，这些内容能够给我们后面的开发打下了坚实的基础。</p><p>今天我带你深入了解一下Vue 3的响应式机制，相信学完今天的内容，你会对响应式机制有更深地体会。我还会结合代码示例，帮你掌握响应式机制的进阶用法，让我们正式开始学习吧！</p><h2>什么是响应式</h2><p>响应式一直都是Vue的特色功能之一。与之相比，JavaScript里面的变量，是没有响应式这个概念的。你在学习JavaScript的时候首先被灌输的概念，就是代码是自上而下执行的。我们看下面的代码，代码在执行后，打印输出的两次double的结果也都是2。即使我们修改了代码中的count的值后，double的值也不会有任何改变。</p><pre><code class=\"language-xml\">let count = 1\nlet double = count * 2\nconsole.log(double)\ncount = 2\nconsole.log(double)\n</code></pre><p>double的值是根据count的值乘以二计算而得到的，如果现在我们想让doube能够跟着count的变化而变化，那么我们就需要在每次count的值修改后，重新计算double。</p><!-- [[[read_end]]] --><p>比如，在下面的代码，我们先把计算doube的逻辑封装成函数，然后在修改完count之后，再执行一遍，你就会得到最新的double值。</p><pre><code class=\"language-xml\">let count = 1\n// 计算过程封装成函数\nlet getDouble = n=&gt;n*2 //箭头函数\nlet double = getDouble(count)\nconsole.log(double)\n\ncount = 2\n// 重新计算double，这里我们不能自动执行对double的计算\ndouble = getDouble(count)\nconsole.log(double)\n</code></pre><p>实际开发中的计算逻辑会比计算doube复杂的多，但是都可以封装成一个函数去执行。下一步，我们要考虑的是，如何让double的值得到自动计算。</p><p>如果我们能让getDouble函数自动执行，也就是如下图所示，我们使用JavaScript的某种机制，把count包裹一层，每当对count进行修改时，就去同步更新double的值，那么就有一种double自动跟着count的变化而变化的感觉，这就算是响应式的雏形了。<br>\n<img src=\"https://static001.geekbang.org/resource/image/5c/97/5c9a7aa3468f19b7edf067b7b252ea97.jpg?wh=1090x970\" alt=\"\"></p><h2>响应式原理</h2><p>响应式原理是什么呢？Vue中用过三种响应式解决方案，分别是defineProperty、Proxy和value setter。我们首先来看Vue 2的defineProperty API，这个函数详细的API介绍你可以直接访问<a href=\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/defineProperty\">MDN介绍文档</a>来了解。</p><p>这里我结合一个例子来说明，在下面的代码中，我们定义个一个对象obj，使用defineProperty代理了count属性。这样我们就对obj对象的value属性实现了拦截，读取count属性的时候执行get函数，修改count属性的时候执行set函数，并在set函数内部重新计算了double。</p><pre><code class=\"language-xml\">let getDouble = n=&gt;n*2\nlet obj = {}\nlet count = 1\nlet double = getDouble(count)\n\nObject.defineProperty(obj,'count',{\n    get(){\n        return count\n    },\n    set(val){\n        count = val\n        double = getDouble(val)\n    }\n})\nconsole.log(double)  // 打印2\nobj.count = 2\nconsole.log(double) // 打印4  有种自动变化的感觉\n</code></pre><p>这样我们就实现了简易的响应式功能，在课程的第四部分，我还会带着你写一个更完善的响应式系统。</p><p>但defineProperty API作为Vue 2实现响应式的原理，它的语法中也有一些缺陷。比如在下面代码中，我们删除obj.count 属性，set函数就不会执行，double还是之前的数值。这也是为什么在Vue 2中，我们需要$delete一个专门的函数去删除数据。</p><pre><code class=\"language-xml\">delete obj.count\nconsole.log(double) // doube还是4\n</code></pre><p>Vue 3 的响应式机制是基于Proxy实现的。就Proxy这个名字来说，你也能看出来这是代理的意思，Proxy的重要意义在于它解决了Vue 2响应式的缺陷。我们看下面的代码，在其中我们通过new Proxy代理了obj这个对象，然后通过get、set和deleteProperty函数代理了对象的读取、修改和删除操作，从而实现了响应式的功能。</p><pre><code class=\"language-xml\">let proxy = new Proxy(obj,{\n    get : function (target,prop) {\n        return target[prop]\n    },\n    set : function (target,prop,value) {\n        target[prop] = value;\n        if(prop==='count'){\n            double = getDouble(value)\n        }\n    },\n    deleteProperty(target,prop){\n        delete target[prop]\n        if(prop==='count'){\n            double = NaN\n        }\n    }\n})\nconsole.log(obj.count,double)\nproxy.count = 2\nconsole.log(obj.count,double) \ndelete proxy.count\n// 删除属性后，我们打印log时，输出的结果就会是 undefined NaN\nconsole.log(obj.count,double) \n</code></pre><p>我们从这里可以看出Proxy实现的功能和Vue 2 的definePropery类似，它们都能够在用户修改数据的时候触发set函数，从而实现自动更新double的功能。而且Proxy还完善了几个definePropery的缺陷，比如说可以监听到属性的删除。</p><p>Proxy是针对对象来监听，而不是针对某个具体属性，所以不仅可以代理那些定义时不存在的属性，还可以代理更丰富的数据结构，比如Map、Set等，并且我们也能通过deleteProperty实现对删除操作的代理。</p><p>当然，为了帮助你理解Proxy，我们还可以把double相关的代码都写在set和deleteProperty函数里进行实现，在课程的后半程我会带你做好更完善的封装。比如下面代码中，Vue 3 的reactive函数可以把一个对象变成响应式数据，而reactive就是基于Proxy实现的。我们还可以通过watchEffect，在obj.count修改之后，执行数据的打印。</p><pre><code class=\"language-xml\">import {reactive,computed,watchEffect} from 'vue'\n\nlet obj = reactive({\n    count:1\n})\nlet double = computed(()=&gt;obj.count*2)\nobj.count = 2\n\nwatchEffect(()=&gt;{\n    console.log('数据被修改了',obj.count,double.value)\n})\n</code></pre><p>有了Proxy后，响应式机制就比较完备了。但是在Vue 3中还有另一个响应式实现的逻辑，就是利用对象的get和set函数来进行监听，这种响应式的实现方式，只能拦截某一个属性的修改，这也是Vue 3中ref这个API的实现。在下面的代码中，我们拦截了count的value属性，并且拦截了set操作，也能实现类似的功能。</p><pre><code class=\"language-xml\">let getDouble = n =&gt; n * 2\nlet _value = 1\ndouble = getDouble(_value)\n\nlet count = {\n  get value() {\n    return _value\n  },\n  set value(val) {\n    _value = val\n    double = getDouble(_value)\n\n  }\n}\nconsole.log(count.value,double)\ncount.value = 2\nconsole.log(count.value,double)\n</code></pre><p>三种实现原理的对比表格如下，帮助你理解三种响应式的区别。</p><p><img src=\"https://static001.geekbang.org/resource/image/b5/11/b5344de85923a2ba8bea60283b491711.png?wh=1336x650\" alt=\"\"></p><h2>定制响应式数据</h2><p>简单入门响应式的原理后，接下来我们学习一下响应式数据在使用的时候的进阶方式。在前面第二讲做清单应用的时候，我给你留过一个思考题，就是让你想办法解决所有的操作状态在刷新后就都没了这个问题。</p><p>解决这个问题所需要的，就是让todolist和本地存储能够同步。我们首先可以选择的就是在代码中，显式地声明同步的逻辑，而watchEffect这个函数让我们在数据变化之后可以执行指定的函数。</p><p>我们看下使用 &lt;script setup&gt;重构之后的todolist的代码。这段代码使用watchEffect，数据变化之后会把数据同步到localStorage之上，这样我们就实现了todolist和本地存储的同步。</p><pre><code class=\"language-xml\">import { ref, watchEffect, computed } from \"vue\";\n\nlet title = ref(\"\");\nlet todos = ref(JSON.parse(localStorage.getItem('todos')||'[]'));\nwatchEffect(()=&gt;{\n    localStorage.setItem('todos',JSON.stringify(todos.value))\n})\nfunction addTodo() {\n  todos.value.push({\n    title: title.value,\n    done: false,\n  });\n  title.value = \"\";\n}\n</code></pre><p>更进一步，我们可以直接抽离一个useStorage函数，在响应式的基础之上，把任意数据响应式的变化同步到本地存储。我们先看下面的这段代码，ref从本地存储中获取数据，封装成响应式并且返回，watchEffect中做本地存储的同步，useStorage这个函数可以抽离成一个文件，放在工具函数文件夹中。</p><pre><code class=\"language-xml\">function useStorage(name, value=[]){\n    let data = ref(JSON.parse(localStorage.getItem(name)|| value))\n    watchEffect(()=&gt;{\n        localStorage.setItem(name,JSON.stringify(data.value))\n    })\n    return data\n}\n</code></pre><p>在项目中我们使用下面代码的写法，把ref变成useStorage，这也是Composition API 最大的优点，也就是可以任意拆分出独立的功能。</p><pre><code class=\"language-xml\">let todos = useStorage('todos',[])\n\nfunction addTodo() {\n  ...code\n}\n</code></pre><p>现在，你应该已经学会了在Vue内部进阶地使用响应式机制，去封装独立的函数。社区也有非常优秀的Vueuse工具库，包含了大量类似useStorage的工具函数库。在后续的实战应用中，我们也会经常对通用功能进行封装。</p><p>如下图所示，我们可以把日常开发中用到的数据，无论是浏览器的本地存储，还是网络数据，都封装成响应式数据，统一使用响应式数据开发的模式。这样，我们开发项目的时候，只需要修改对应的数据就可以了。</p><p><img src=\"https://static001.geekbang.org/resource/image/5a/0e/5a5yy5dc6f6b25f1c1ff8f3a434cd10e.jpg?wh=2316x1829\" alt=\"\"></p><p>基于响应式的开发模式，我们还可以按照类似的原理，把我们需要修改的数据，都变成响应式。比如，我们可以在loading状态下，去修改浏览器的小图标favicon。和本地存储类似，修改favicon时，我们需要找到head中有icon属性的标签。</p><p>在下面的代码中，我们把对图标的对应修改的操作封装成了useFavicon函数，并且通过ref和watch的包裹，我们还把小图标变成了响应式数据。</p><pre><code class=\"language-xml\">import {ref,watch} from 'vue'\nexport default function useFavicon( newIcon ) {\n    const favicon = ref(newIcon)\n\n    const updateIcon = (icon) =&gt; {\n      document.head\n        .querySelectorAll(`link[rel*=\"icon\"]`)\n        .forEach(el =&gt; el.href = `${icon}`)\n    }\n    const reset = ()=&gt;favicon.value = '/favicon.ico'\n\n    watch( favicon,\n      (i) =&gt; {\n        updateIcon(i)\n      }\n    )\n    return {favicon,reset}\n  } \n</code></pre><p>这样在组件中，我们就可以通过响应式的方式去修改和使用小图标，通过对faivcon.value的修改就可以随时更换网站小图标。下面的代码，就实现了在点击按钮之后，修改了网页的图标为geek.png的操作。</p><pre><code class=\"language-xml\"> &lt;script setup&gt;\n import useFavicon from './utils/favicon'\n let {favicon}  = useFavicon()\n function loading(){\n   favicon.value = '/geek.png'\n }\n&lt;/script&gt;\n\n&lt;template&gt;\n  &lt;button @click=\"loading\"&gt;123&lt;/button&gt;\n&lt;/template&gt;\n</code></pre><h2>Vueuse工具包</h2><p>我们自己封装的useStorage，算是把localStorage简单地变成了响应式对象，实现数据的更新和localStorage的同步。同理，我们还可以封装更多的类似useStorage函数的其他use类型的函数，把实际开发中你用到的任何数据或者浏览器属性，都封装成响应式数据，这样就可以极大地提高我们的开发效率。</p><p>Vue 社区中其实已经有一个类似的工具集合，也就是VueUse，它把开发中常见的属性都封装成为响应式函数。</p><p>VueUse&nbsp;趁着这一波 Vue 3&nbsp;的更新，跟上了响应式API的潮流。VueUse的官方的介绍说这是一个 Composition API&nbsp;的工具集合，适用于Vue 2.x或者Vue 3.x，用起来和 React Hooks&nbsp;还挺像的。</p><p>在项目目录下打开命令行里，我们输入如下命令，来进行VueUse插件的安装：</p><pre><code class=\"language-xml\">npm install @vueuse/core\n</code></pre><p>然后，我们就先来使用一下VueUse。在下面这段代码中，我们使用useFullscreen来返回全屏的状态和切换全屏的函数。这样，我们就不需要考虑浏览器全屏的API，而是直接使用VueUse响应式数据和函数就可以很轻松地在项目中实现全屏功能。</p><pre><code class=\"language-xml\">&lt;template&gt;\n  &lt;h1 @click=\"toggle\"&gt;click&lt;/h1&gt;\n&lt;/template&gt;\n&lt;script setup&gt;\nimport { useFullscreen } from '@vueuse/core'\nconst { isFullscreen, enter, exit, toggle } = useFullscreen()\n&lt;/script&gt;\n</code></pre><p>useFullscreen的封装逻辑和useStorage类似，都是屏蔽了浏览器的操作，把所有我们需要用到的状态和数据都用响应式的方式统一管理，VueUse中包含了很多我们常用的工具函数，我们可以把网络状态、异步请求的数据、动画和事件等功能，都看成是响应式的数据去管理。</p><h2>总结</h2><p>我们来总结一下今天学到的内容，首先我给你介绍了响应式的概念以及我们为什么需要响应式，具体Vue 3的响应式源码，我会在课程第四部分带你手写一个。</p><p>然后，通过对useStorage的封装，我为你讲解了响应式机制的进阶用法，那就是可以把一切项目中的状态和数据都封装成响应式的接口，屏蔽了浏览器的API，对外暴露的就是普通的数据，可以极大地提高我们的开发效率。</p><p>接着，我带你了解了VueUse这个工具包，这也是Vue官方团队成员的作品。VueUse提供了一大批工具函数，包括全屏、网络请求、动画等，都可以使用响应式风格的接口去使用，并且同时兼容 Vue 2 和 Vue 3，开箱即用。这门课程剩下的项目中会用到很多VueUse的函数，也推荐你去GitHub 关注 VueUse的动态和功能。</p><h2>思考题</h2><p>最后，留给你一道思考题：你的项目中有哪些数据可以封装成响应式数据呢？</p><p>欢迎在评论区留言，我会跟你一起探究Vue 3响应式的其他用法，也欢迎你把这篇文章分享给其他人，我们下一讲见！</p>","comments":[{"had_liked":true,"id":319300,"user_name":"ll","can_delete":false,"product_type":"c1","uid":1296458,"ip_address":"","ucode":"57C5DAC5B51036","user_header":"https://static001.geekbang.org/account/avatar/00/13/c8/4a/3a322856.jpg","comment_is_top":false,"comment_ctime":1635736465,"is_pvip":true,"replies":[{"id":"115776","content":"总结的太棒了！","user_name":"作者回复","comment_id":319300,"uid":"1003715","ip_address":"","utype":1,"ctime":1635773063,"user_name_real":"花果山大圣"}],"discussion_count":5,"race_medal":0,"score":"413952596881","product_id":100094401,"comment_content":"      1. 为什么需要响应式？<br>         随着页面应用的不断复杂，需要关注和管理的状态越来越多，之前靠被动的，分散的管<br>         理状态不现实也易出错。为了满足这个需求，出现了许多方案，其中 Vue 提出的或主打<br>         的解决方案的就是响应式。<br><br>      2. 怎么实现响应式？<br>         响应式主要解决的问题是怎么让在“语言层面上分散的独立数据”在“业务层面”上产生“联<br>         系或互为因果”的关系。这咋么办呢？怎么产生“联系”呢？简单，“你发生变化的时候告<br>         诉我一声，我应声而动”，所谓响应式我个人理解就是“你响我应”。<br><br>         但是这种需求在语言上不是“普遍需求”，属于“特殊需求”，怎么解决？这里就引入了“代<br>         理模式”这种设计模式。在语言层面我给你一种模式可以满足你的需求，ES5 的时代，是<br>         defineProperty 等，ES6 就是 Proxy。<br><br>         至于 ES6 的 Proxy 在性能或是各方面要优于 defineProperty 还是因为 Proxy 在更底<br>         层优化或重新实现，使用的表现“一样”，但“地基”不一样，性能各方面自然是不一样。<br>         正因为是“地基”的不同，Proxy 就还存在兼容性的问题, 加上业务场景的不同，<br>         defineProperty 还是有应用的场景，至于文中说的 Vue 3 的 ref 是用 “getter<br>         setter” 实现的，我的认识是，一个是“初始化”时的行为，一个是“改变行为”。<br><br>      3. useXXX 为什么会这么灵活？<br>         像之前的 Composition API 我理解的是 Vue 的组织单位由 “组件” 变成 “数据” 了，<br>         现在组件在引入 useXXX，关注点在 XXX，至于 XXX 跟什么有联系，那是你的事情，在<br>         你自己的 useXXX 里去实现。<br><br>         本节提到的 React Hooks 也有异曲同工的意思，Hooks 直接翻译成什么？“钩子”，用来<br>         做什么？“钩东西”，钩什么？那先说下这个东西出来之前有什么。<br><br>         React Hooks 出来之前 React 主要构建 App 还是用 Class Component，当然也有<br>         functional component，这俩区别就在于 class 有状态，functional 比较“纯粹”没有<br>         状态。这样复用成问题，得用什么高阶组件之类的方式。然后，在某一时刻，同样的问<br>         题出现了，React 复用组件的也是以带状态的 Class 组件为主，“复杂”了，不纯粹。<br><br>         应用越大，这种模式开发或维护越复杂。然后 Hooks 出现了，现在 React 都用<br>         “functional” 组件，但是有“状态”的，状态哪里来的 “Hook” 过来的，钩过来的。<br>         组件“不负责”维护状态，useXXX 去管理了。<br><br>         综上，灵活了，也好维护了<br>","like_count":97,"discussions":[{"author":{"id":1122308,"avatar":"https://static001.geekbang.org/account/avatar/00/11/20/04/72cc2057.jpg","nickname":"Sunny","note":"","ucode":"90CA0ABBB683FA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":533689,"discussion_content":"总结得太精辟了：&#34;现在 React 都用\n         “functional” 组件，但是有“状态”的，状态哪里来的 “Hook” 过来的，钩过来的。\n         组件“不负责”维护状态，useXXX 去管理了&#34;","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1637933233,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1005290,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/56/ea/32608c44.jpg","nickname":"giteebravo","note":"","ucode":"C087E8D6B5A98B","race_medal":1,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":411301,"discussion_content":"\n+1","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1635899856,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1003715,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/50/c3/0aa50246.jpg","nickname":"花果山大圣","note":"","ucode":"25C0A36D628037","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":529582,"discussion_content":"总结的太棒了！","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1635773063,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1361002,"avatar":"https://static001.geekbang.org/account/avatar/00/14/c4/6a/e45bbb6b.jpg","nickname":"Smile","note":"","ucode":"674C2361FFB807","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":550697,"discussion_content":"通俗易懂，总结的很棒","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1644674696,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1537755,"avatar":"https://static001.geekbang.org/account/avatar/00/17/76/db/a4575e74.jpg","nickname":"孤浪","note":"","ucode":"4B2B9DF9737068","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":549120,"discussion_content":"大佬总结的666","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1643589994,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":319252,"user_name":"郭纯","can_delete":false,"product_type":"c1","uid":1314521,"ip_address":"","ucode":"2613860B4642C4","user_header":"https://static001.geekbang.org/account/avatar/00/14/0e/d9/e61ce097.jpg","comment_is_top":false,"comment_ctime":1635700013,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"74650144045","product_id":100094401,"comment_content":"composition API  就是把逻辑代码聚合起来.  一些工具函数都可以被封装起来 比如 websocket   解析 url parameter   滚动监听  鼠标状态监听  浏览器 reset  元素 拖动  表单验证   图片懒加载   配合css var 实现运行时主题更新  本地化持久化存储  performance 性能检测 甚至实现自定义 logger。手机端 touch  设备类型检测   陀螺仪 手势识别. 电池电量  太多太多","like_count":18,"discussions":[{"author":{"id":2614606,"avatar":"https://static001.geekbang.org/account/avatar/00/27/e5/4e/45a43aa6.jpg","nickname":"很香很香的柠檬","note":"","ucode":"E89F2900EB8595","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":574298,"discussion_content":"赞！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1653960928,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1165817,"avatar":"https://static001.geekbang.org/account/avatar/00/11/c9/f9/39492855.jpg","nickname":"阿阳","note":"","ucode":"20A35FB86B1C5C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":410671,"discussion_content":"技术场景，业务场景，总结的多，面比较广而且常见，赞！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1635756504,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":319311,"user_name":"Warn","can_delete":false,"product_type":"c1","uid":1465310,"ip_address":"","ucode":"F2F7FCDB0940D0","user_header":"https://static001.geekbang.org/account/avatar/00/16/5b/de/152f1c2c.jpg","comment_is_top":false,"comment_ctime":1635738737,"is_pvip":false,"replies":[{"id":"115908","content":"对对对 囧 写出bug了没注意","user_name":"作者回复","comment_id":319311,"uid":"1003715","ip_address":"","utype":1,"ctime":1635936045,"user_name_real":"花果山大圣"}],"discussion_count":7,"race_medal":0,"score":"31700509809","product_id":100094401,"comment_content":"useStorage函数中，ref初始赋值时应该是使用参数value代替&#39;[]&#39;不？<br>```<br>function useStorage(name, value=[]){<br>    let data = ref(JSON.parse(localStorage.getItem(name)) || value)<br>   ...code<br>}<br>```","like_count":7,"discussions":[{"author":{"id":1003715,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/50/c3/0aa50246.jpg","nickname":"花果山大圣","note":"","ucode":"25C0A36D628037","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":529587,"discussion_content":"对对对 囧 写出bug了没注意","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1635936045,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1822733,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/d0/0d/752ff95f.jpg","nickname":"justorez","note":"","ucode":"071D8394E62D90","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":412510,"discussion_content":"不能直接用 value，前面用了 JSON.parse，数据空时会异常。应该用 JSON.stringify(value)","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1636197139,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1165817,"avatar":"https://static001.geekbang.org/account/avatar/00/11/c9/f9/39492855.jpg","nickname":"阿阳","note":"","ucode":"20A35FB86B1C5C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1822733,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/d0/0d/752ff95f.jpg","nickname":"justorez","note":"","ucode":"071D8394E62D90","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":412919,"discussion_content":"看样子是的，要用JSON.stringify去串行化才行","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1636333190,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":412510,"ip_address":""},"score":412919,"extra":""},{"author":{"id":2736089,"avatar":"https://static001.geekbang.org/account/avatar/00/29/bf/d9/756d7847.jpg","nickname":"Xhua","note":"","ucode":"441C0B4CBED860","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1822733,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/d0/0d/752ff95f.jpg","nickname":"justorez","note":"","ucode":"071D8394E62D90","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":413965,"discussion_content":"JSON.parse(localStorage.getItem(name)) || value","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1636621780,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":412510,"ip_address":""},"score":413965,"extra":""}]},{"author":{"id":2816386,"avatar":"https://static001.geekbang.org/account/avatar/00/2a/f9/82/5884f45c.jpg","nickname":"伟涛 Jason","note":"","ucode":"1D634573CEE0E1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":551702,"discussion_content":"大圣老师，useStorage例子的bug该改过来了","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1645088761,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2832280,"avatar":"https://static001.geekbang.org/account/avatar/00/2b/37/98/f889105a.jpg","nickname":"亮","note":"","ucode":"37DACBB8221C50","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":410706,"discussion_content":"是的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1635762782,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1165817,"avatar":"https://static001.geekbang.org/account/avatar/00/11/c9/f9/39492855.jpg","nickname":"阿阳","note":"","ucode":"20A35FB86B1C5C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":410672,"discussion_content":"同问","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1635756598,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":319296,"user_name":"xzq","can_delete":false,"product_type":"c1","uid":2815957,"ip_address":"","ucode":"325C8D9067BF65","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eqrm1J6MVvFibtUorUn88kfpIVQKI615tzicJZiceBbW4WjiaETzqjtGFTK49EL5lqWPqIDibjCyuEMgzQ/132","comment_is_top":false,"comment_ctime":1635735345,"is_pvip":false,"discussion_count":7,"race_medal":0,"score":"31700506417","product_id":100094401,"comment_content":"刚刚试了下代码： const todoList = ref([]), 然后在触发新增操作 todoList.value.push(xxxx) 之后， 在 watchEffect(() =&gt; console.log(todoList.value)) 中不会触发响应，而在 watch(todoList.value, (newVal) =&gt; console.log(new Val)) 却可以，这是为啥","like_count":7,"discussions":[{"author":{"id":1557433,"avatar":"https://static001.geekbang.org/account/avatar/00/17/c3/b9/c177ce04.jpg","nickname":"弓","note":"","ucode":"A83780FE6AC7A6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":564915,"discussion_content":"是因为第三个参数option中deep为false，ref需要主动传入true，reactive默认就是true","likes_number":4,"is_delete":false,"is_hidden":false,"ctime":1650354186,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1390074,"avatar":"https://static001.geekbang.org/account/avatar/00/15/35/fa/6938643b.jpg","nickname":"mauro","note":"","ucode":"8EBFD8AFAD488E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":544714,"discussion_content":"ref只是简单数据类型，reactive才适用引用类型","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1641654106,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1796471,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/69/77/844a5ac5.jpg","nickname":"胖dudu","note":"","ucode":"83470C947603C7","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":569538,"discussion_content":" watchEffect(() =&gt; console.log(todoList.value.length)) 试试 ","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1651474641,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1782286,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/32/0e/5024c2dd.jpg","nickname":"星空","note":"","ucode":"E4E2090ECBB70F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1796471,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/69/77/844a5ac5.jpg","nickname":"胖dudu","note":"","ucode":"83470C947603C7","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":588016,"discussion_content":"添加对length的监听后，todoList.value也可以被同步监听到了。去掉length的监听就监听不到了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1663469521,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":569538,"ip_address":"广东"},"score":588016,"extra":""}]},{"author":{"id":3033819,"avatar":"","nickname":"Geek_703aec","note":"","ucode":"1B23639D3CAEB0","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":584145,"discussion_content":"todoList.value  是引用类型，如果把todoList.value 改成 JSON.stringify(todoList.value), 就可以监听到变化了，所以我推测是因为引用类型内部的改变外部无法监听到，所以没有触发响应，而使用JSON转换，监听的值就变成了字符串类型 [只是我推测的，没有去深究，求大佬指教]","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1660641273,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"北京"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2818001,"avatar":"https://static001.geekbang.org/account/avatar/00/2a/ff/d1/7a4a6f4f.jpg","nickname":"风一样","note":"","ucode":"5EA5129D487E43","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":535788,"discussion_content":"是的，我也遇到这个问题了，老师怎么不回答一下呢？按道理，todoList.value也是变化了的，应该会触发响应呀？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1638540630,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2819914,"avatar":"https://static001.geekbang.org/account/avatar/00/2b/07/4a/c698be5b.jpg","nickname":"不安现状","note":"","ucode":"EAE549A0DDB982","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":532956,"discussion_content":"大佬知道原因了吗，我也想知道为啥","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1637738921,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"user_type\":1}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":319338,"user_name":"@","can_delete":false,"product_type":"c1","uid":1985141,"ip_address":"","ucode":"B308157E3FA393","user_header":"https://static001.geekbang.org/account/avatar/00/1e/4a/75/51435f4b.jpg","comment_is_top":false,"comment_ctime":1635751479,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"27405555255","product_id":100094401,"comment_content":"vue的一些api用到的时候，能否带一嘴，讲讲这个api","like_count":7},{"had_liked":false,"id":319305,"user_name":"ps Sensking","can_delete":false,"product_type":"c1","uid":1377764,"ip_address":"","ucode":"8B3BC6E89B6EF9","user_header":"https://static001.geekbang.org/account/avatar/00/15/05/e4/3e676c4d.jpg","comment_is_top":false,"comment_ctime":1635737985,"is_pvip":false,"replies":[{"id":"118411","content":"理论上watcheffect会好一些，watcheffect做了任务队列的更新和收集","user_name":"作者回复","comment_id":319305,"uid":"1003715","ip_address":"","utype":1,"ctime":1639404559,"user_name_real":"编辑"}],"discussion_count":2,"race_medal":1,"score":"27405541761","product_id":100094401,"comment_content":"请问是watch watcheffect 那个性能高呀？有人说过watch性能能好一点","like_count":6,"discussions":[{"author":{"id":1003715,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/50/c3/0aa50246.jpg","nickname":"花果山大圣","note":"","ucode":"25C0A36D628037","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":538426,"discussion_content":"理论上watcheffect会好一些，watcheffect做了任务队列的更新和收集","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1639404559,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1762591,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/e5/1f/6a22926f.jpg","nickname":"cinob","note":"","ucode":"96ED5CD2C9D860","race_medal":1,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":411297,"discussion_content":"一样的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1635898849,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":325508,"user_name":"Geek_fcdf7b","can_delete":false,"product_type":"c1","uid":2115742,"ip_address":"","ucode":"55A2DBA5C6DF79","user_header":"https://static001.geekbang.org/account/avatar/00/20/48/9e/9bbaa97d.jpg","comment_is_top":false,"comment_ctime":1639011320,"is_pvip":false,"replies":[{"id":"118299","content":"现在ref确实是比reactive优先级更高一些，直接建议ref + toRefs一把梭，我碰到必须有reactive的场景的话会写个加餐对比，而且ref能够支持复杂的数据结构，也是调用了reactive","user_name":"作者回复","comment_id":325508,"uid":"1003715","ip_address":"","utype":1,"ctime":1639395050,"user_name_real":"作者"}],"discussion_count":1,"race_medal":0,"score":"23113847800","product_id":100094401,"comment_content":"<br>大圣老师，请教一下，3.2版本之后，是不是定义响应式数据都可以用ref一把梭？我看有的文章是这样说的，ref在3.2之后性能进行了大幅度提升，所以建议使用ref，不管简单数据还是复杂数据都可以用ref，没必要用reactive","like_count":5,"discussions":[{"author":{"id":1003715,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/50/c3/0aa50246.jpg","nickname":"花果山大圣","note":"","ucode":"25C0A36D628037","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":538279,"discussion_content":"现在ref确实是比reactive优先级更高一些，直接建议ref + toRefs一把梭，我碰到必须有reactive的场景的话会写个加餐对比，而且ref能够支持复杂的数据结构，也是调用了reactive","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1639395050,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":319507,"user_name":"沪上皮皮虾","can_delete":false,"product_type":"c1","uid":2832247,"ip_address":"","ucode":"4E9E7946100736","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJtiaibXUWvhhCoPWxIn9Sb9UiaKn1rzde6JiasJFYhXsg8WL3E7jTggJsicvLVD3Iu2hst3BYDPNvmic6g/132","comment_is_top":false,"comment_ctime":1635838725,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"23110675205","product_id":100094401,"comment_content":"一周五更吧，一周三更不够看啊","like_count":5},{"had_liked":false,"id":319601,"user_name":"奔跑的小乌龟","can_delete":false,"product_type":"c1","uid":2356338,"ip_address":"","ucode":"342292E8281D07","user_header":"https://static001.geekbang.org/account/avatar/00/23/f4/72/b60ee8b7.jpg","comment_is_top":false,"comment_ctime":1635862711,"is_pvip":false,"replies":[{"id":"115881","content":"很棒的心得","user_name":"作者回复","comment_id":319601,"uid":"1003715","ip_address":"","utype":1,"ctime":1635930729,"user_name_real":"花果山大圣"}],"discussion_count":2,"race_medal":0,"score":"14520764599","product_id":100094401,"comment_content":"浏览器页面全屏、滚动等的封装，之前有需求就是全屏要动态调整页面的布局，在没有封装的情况下，就要每个页面需要时都写监听，而用useXXX感觉会优雅很多啊，点赞，学到了，赶紧实践实践。","like_count":3,"discussions":[{"author":{"id":1003715,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/50/c3/0aa50246.jpg","nickname":"花果山大圣","note":"","ucode":"25C0A36D628037","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":529684,"discussion_content":"很棒的心得","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1635930729,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2819735,"avatar":"https://static001.geekbang.org/account/avatar/00/2b/06/97/fe937d40.jpg","nickname":"人生如戏","note":"","ucode":"F02A52DA1DA6E5","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":553970,"discussion_content":"不用每个页面吧！？用mixin不是可以实现吗","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1646147339,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":319274,"user_name":"阿阳","can_delete":false,"product_type":"c1","uid":1165817,"ip_address":"","ucode":"20A35FB86B1C5C","user_header":"https://static001.geekbang.org/account/avatar/00/11/c9/f9/39492855.jpg","comment_is_top":false,"comment_ctime":1635729751,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"14520631639","product_id":100094401,"comment_content":"这节课好惊喜，使用use***封装成各种hook，转变为数据驱动的开发思维。其中useStorage，正好是现在做项目的困惑，没想到watchEffect还能监听localStorage。老师还会讲异步请求，axios请求封装成hook么？实际项目中离不开这些。","like_count":3,"discussions":[{"author":{"id":1632501,"avatar":"https://static001.geekbang.org/account/avatar/00/18/e8/f5/d851eb46.jpg","nickname":"哎哟迪奥","note":"","ucode":"ED90376DD0279E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":411072,"discussion_content":"没有监听localstorage，监听的是data","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1635843216,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1165817,"avatar":"https://static001.geekbang.org/account/avatar/00/11/c9/f9/39492855.jpg","nickname":"阿阳","note":"","ucode":"20A35FB86B1C5C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1632501,"avatar":"https://static001.geekbang.org/account/avatar/00/18/e8/f5/d851eb46.jpg","nickname":"哎哟迪奥","note":"","ucode":"ED90376DD0279E","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":411143,"discussion_content":"又仔细看了，监听的是data。多谢","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1635856586,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":411072,"ip_address":""},"score":411143,"extra":""}]}]},{"had_liked":false,"id":321191,"user_name":"碎竹落棋","can_delete":false,"product_type":"c1","uid":2827040,"ip_address":"","ucode":"6064F35EC5A33F","user_header":"https://static001.geekbang.org/account/avatar/00/2b/23/20/5fd6ed6f.jpg","comment_is_top":false,"comment_ctime":1636703179,"is_pvip":false,"replies":[{"id":"116639","content":"你换成volar插件试试？","user_name":"作者回复","comment_id":321191,"uid":"1003715","ip_address":"","utype":1,"ctime":1636770070,"user_name_real":"花果山大圣"}],"discussion_count":1,"race_medal":0,"score":"10226637771","product_id":100094401,"comment_content":"想问一下，问啥vscode里，ctrl+左键不能跳转到函数定义，我创建的这个vue3项目里都跳转不了，拿以前写的vue2项目试了一下，可以跳转，好奇怪","like_count":2,"discussions":[{"author":{"id":1003715,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/50/c3/0aa50246.jpg","nickname":"花果山大圣","note":"","ucode":"25C0A36D628037","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":530240,"discussion_content":"你换成volar插件试试？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1636770070,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":321028,"user_name":"风一样","can_delete":false,"product_type":"c1","uid":2818001,"ip_address":"","ucode":"5EA5129D487E43","user_header":"https://static001.geekbang.org/account/avatar/00/2a/ff/d1/7a4a6f4f.jpg","comment_is_top":false,"comment_ctime":1636625128,"is_pvip":false,"replies":[{"id":"116496","content":"这是一个css选择器，过滤标签有rel属性的值中，包含icon的标签","user_name":"作者回复","comment_id":321028,"uid":"1003715","ip_address":"","utype":1,"ctime":1636637494,"user_name_real":"花果山大圣"}],"discussion_count":2,"race_medal":0,"score":"10226559720","product_id":100094401,"comment_content":"link[rel*=&quot;icon&quot;]<br>老师请问这个是过滤什么呢？","like_count":3,"discussions":[{"author":{"id":1003715,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/50/c3/0aa50246.jpg","nickname":"花果山大圣","note":"","ucode":"25C0A36D628037","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":530190,"discussion_content":"这是一个css选择器，过滤标签有rel属性的值中，包含icon的标签","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1636637494,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2818001,"avatar":"https://static001.geekbang.org/account/avatar/00/2a/ff/d1/7a4a6f4f.jpg","nickname":"风一样","note":"","ucode":"5EA5129D487E43","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":414297,"discussion_content":"谢谢","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1636712043,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":319831,"user_name":"nabaonan","can_delete":false,"product_type":"c1","uid":1479089,"ip_address":"","ucode":"42FD44A56A08DD","user_header":"https://static001.geekbang.org/account/avatar/00/16/91/b1/ae745f2f.jpg","comment_is_top":false,"comment_ctime":1635955686,"is_pvip":false,"replies":[{"id":"118396","content":"这个在最后的手写代码章节有介绍的","user_name":"作者回复","comment_id":319831,"uid":"1003715","ip_address":"","utype":1,"ctime":1639403353,"user_name_real":"编辑"}],"discussion_count":2,"race_medal":0,"score":"10225890278","product_id":100094401,"comment_content":"希望更加深入讲一下，vue3的响应式原理，是如何进行依赖收集的，并触发响应到数据的，串一下流程，还有为什么用watchEffect而不用watch，都适用于哪些场景，各有什么优势","like_count":2,"discussions":[{"author":{"id":1003715,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/50/c3/0aa50246.jpg","nickname":"花果山大圣","note":"","ucode":"25C0A36D628037","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":538406,"discussion_content":"这个在最后的手写代码章节有介绍的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1639403353,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2279433,"avatar":"https://static001.geekbang.org/account/avatar/00/22/c8/09/b34b1473.jpg","nickname":"鱼腩","note":"","ucode":"54C97E73A75854","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":412081,"discussion_content":"1.watchEffect，默认在setup（）里面会执行一遍，便于默认的初始化；2.watch，默认在setup（）返回后，响应式数据变更后，才执行","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1636075193,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":319602,"user_name":"费城的二鹏","can_delete":false,"product_type":"c1","uid":1101293,"ip_address":"","ucode":"DE768A0CC3053D","user_header":"https://static001.geekbang.org/account/avatar/00/10/cd/ed/825d84ee.jpg","comment_is_top":false,"comment_ctime":1635862760,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10225797352","product_id":100094401,"comment_content":"应用开发的一个痛点就是散步在各处的已登陆用户信息，响应式可以解决一处修改多处自动更新ui的痛点，避免需要通知、轮询等方式解决数据不同步的问题。","like_count":2},{"had_liked":false,"id":319337,"user_name":"@","can_delete":false,"product_type":"c1","uid":1985141,"ip_address":"","ucode":"B308157E3FA393","user_header":"https://static001.geekbang.org/account/avatar/00/1e/4a/75/51435f4b.jpg","comment_is_top":false,"comment_ctime":1635751033,"is_pvip":false,"replies":[{"id":"115906","content":"value其实是想放在ref里面的默认值的，代码有bug ，看来得更新一下 <br>","user_name":"作者回复","comment_id":319337,"uid":"1003715","ip_address":"","utype":1,"ctime":1635936008,"user_name_real":"花果山大圣"}],"discussion_count":2,"race_medal":0,"score":"10225685625","product_id":100094401,"comment_content":"```<br><br>function useStorage(name, value=[]){<br>    let data = ref(JSON.parse(localStorage.getItem(name)||&#39;[]&#39;))<br>    watchEffect(()=&gt;{<br>        localStorage.setItem(name,JSON.stringify(data.value))<br>    })<br>    return data<br>}<br>```<br>这段代码里的 参数 value 是何作用？","like_count":2,"discussions":[{"author":{"id":1003715,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/50/c3/0aa50246.jpg","nickname":"花果山大圣","note":"","ucode":"25C0A36D628037","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":529598,"discussion_content":"value其实是想放在ref里面的默认值的，代码有bug ，看来得更新一下 \n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1635936008,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2832247,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJtiaibXUWvhhCoPWxIn9Sb9UiaKn1rzde6JiasJFYhXsg8WL3E7jTggJsicvLVD3Iu2hst3BYDPNvmic6g/132","nickname":"沪上皮皮虾","note":"","ucode":"4E9E7946100736","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":411056,"discussion_content":"function useStorage(name, value = []) {\n  let data = ref(JSON.parse(localStorage.getItem(name)) || value)\n  watchEffect(() => {\n    console.log(name);\n    localStorage.setItem(name, JSON.stringify(data.value))\n  })\n  return data\n}\n\n大圣估计写忘记了，应该是这样比较合理","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1635839186,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":319310,"user_name":"Warn","can_delete":false,"product_type":"c1","uid":1465310,"ip_address":"","ucode":"F2F7FCDB0940D0","user_header":"https://static001.geekbang.org/account/avatar/00/16/5b/de/152f1c2c.jpg","comment_is_top":false,"comment_ctime":1635738605,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10225673197","product_id":100094401,"comment_content":"业务层封装为响应式数据的大概有用户偏好设置之类的。","like_count":2},{"had_liked":false,"id":341813,"user_name":"变现前端","can_delete":false,"product_type":"c1","uid":1382911,"ip_address":"","ucode":"B0FFB37FDC24BE","user_header":"https://static001.geekbang.org/account/avatar/00/15/19/ff/a8876f83.jpg","comment_is_top":false,"comment_ctime":1649841200,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"5944808496","product_id":100094401,"comment_content":"修改浏览器的favicon的这个useFavicon这个函数在TypeScript使用有点问题，会报useFavicon需要传一个参数，我修改了一下同样能够实现更换的操作：<br>import { ref, watch } from &#39;vue&#39;<br>export default function useFavicon() {<br>  const favicon = ref(&#39;..&#47;..&#47;public&#47;favicon.ico&#39;);<br>  const updateIcon = (icon: string) =&gt; {<br>    document.head.querySelectorAll(`link[rel*=&quot;icon&quot;]`).forEach((el: any) =&gt; el.href = `${icon}`);<br>  }<br>  const reset = () =&gt; favicon.value = &#39;..&#47;..&#47;public&#47;favicon.ico&#39;;<br><br>  watch(favicon, (i: string) =&gt; {<br>    updateIcon(i);<br>  })<br>  <br>  return { favicon, reset }<br>}<br><br>&lt;script setup lang=&quot;ts&quot;&gt;<br>import useFavicon from &#39;.&#47;utils&#47;useFavicon&#39;<br>const { favicon } = useFavicon()<br>function loading() {<br>  favicon.value = &#39;https:&#47;&#47;pinia.vuejs.org&#47;logo.svg&#39;;<br>}<br>&lt;&#47;script&gt;","like_count":1},{"had_liked":false,"id":324681,"user_name":"风一样","can_delete":false,"product_type":"c1","uid":2818001,"ip_address":"","ucode":"5EA5129D487E43","user_header":"https://static001.geekbang.org/account/avatar/00/2a/ff/d1/7a4a6f4f.jpg","comment_is_top":false,"comment_ctime":1638540422,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5933507718","product_id":100094401,"comment_content":"请问老师，我按照讲义，执行下面的语句是正常：<br>    let todos = ref(JSON.parse(localStorage.getItem(&#39;todos&#39;) || &#39;[]&#39;))<br>    watchEffect(() =&gt; {<br>        localStorage.setItem(&#39;todos&#39;, JSON.stringify(todos.value))<br>    })<br>但把  localStorage.setItem(&#39;todos&#39;, JSON.stringify(todos.value)) 语句替换成 console.log(todos.value)，也就是说修改成下面的语句：<br>    let todos = ref(JSON.parse(localStorage.getItem(&#39;todos&#39;) || &#39;[]&#39;))<br>    watchEffect(() =&gt; {<br>        console.log(todos.value)<br>    })<br>当在输入框内输入字符串再回车，把输入的值添加到 todos.value 时，console.log(todos.value)语句并没有执行，而勾选条目再点击清理时，console.log(todos.value)语句 能正常执行，这是为什么呢？是因为watchEffec有什么限制吗？","like_count":2},{"had_liked":false,"id":324502,"user_name":"Geek_03f1af","can_delete":false,"product_type":"c1","uid":2796367,"ip_address":"","ucode":"62A7DFA234E464","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/4OvKiaF14CVnpTUEibC06vy8328L29TegZysYO3YibhguyRzQDDiap1myFic8ibxT6Srlp22TIwWeicEjszFIl4gCP9EQ/132","comment_is_top":false,"comment_ctime":1638460534,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5933427830","product_id":100094401,"comment_content":"按照教程代码 useStorage 编写会报错 `Uncaught (in promise) SyntaxError: Unexpected end of JSON input`。浏览器 Chrome 版本 96.0.4664.45（正式版本）。<br><br>代码：<br>```js<br>export function useStorage(name, value = []) {<br>  let data = ref(JSON.parse(localStorage.getItem(name) || value))<br>  watchEffect(() =&gt; {<br>    localStorage.setItem(name, JSON.stringify(data.value))<br>  })<br>  return data<br>}<br>```<br><br>经过测试发现 JSON.parse() 在参数为 &#39;&#39;、&quot;&quot;、[] 时会报这个错误。通过 log 发现 `JSON.parse(localStorage.getItem(name) || value)` 这个判断返回的是 `[]`。而修改 `value` 默认值为其他值(null, undefined...)时依旧返回 `[]`，所以是 `localStorage.getItem(name)` 返回了 `[]`？但 LocalStorage 并没有任何数据。","like_count":1},{"had_liked":false,"id":323737,"user_name":"Geek_fcdf7b","can_delete":false,"product_type":"c1","uid":2115742,"ip_address":"","ucode":"55A2DBA5C6DF79","user_header":"https://static001.geekbang.org/account/avatar/00/20/48/9e/9bbaa97d.jpg","comment_is_top":false,"comment_ctime":1638148080,"is_pvip":false,"replies":[{"id":"118372","content":"ref是可以取代reactive的，我在开发中还没碰到reactive能做而ref不能做的事，只是有时候习惯让我包裹复杂对象的时候用reactive","user_name":"作者回复","comment_id":323737,"uid":"1003715","ip_address":"","utype":1,"ctime":1639401398,"user_name_real":"编辑"}],"discussion_count":3,"race_medal":0,"score":"5933115376","product_id":100094401,"comment_content":"大圣老师，请教一下，3.2版本之后，是不是定义响应式数据都可以用ref一把梭？我看有的文章是这样说的，ref在3.2之后性能进行了大幅度提升，所以建议使用ref，不管简单数据还是复杂数据都可以用ref，没必要用reactive","like_count":1,"discussions":[{"author":{"id":1003715,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/50/c3/0aa50246.jpg","nickname":"花果山大圣","note":"","ucode":"25C0A36D628037","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":538371,"discussion_content":"ref是可以取代reactive的，我在开发中还没碰到reactive能做而ref不能做的事，只是有时候习惯让我包裹复杂对象的时候用reactive","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1639401398,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2115742,"avatar":"https://static001.geekbang.org/account/avatar/00/20/48/9e/9bbaa97d.jpg","nickname":"Geek_fcdf7b","note":"","ucode":"55A2DBA5C6DF79","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":537118,"discussion_content":"有问题，这么久了都不带回答的么？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1638961035,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2115742,"avatar":"https://static001.geekbang.org/account/avatar/00/20/48/9e/9bbaa97d.jpg","nickname":"Geek_fcdf7b","note":"","ucode":"55A2DBA5C6DF79","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":536689,"discussion_content":"@大圣，求解答","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1638845822,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":321618,"user_name":"葱味黑咖啡","can_delete":false,"product_type":"c1","uid":2063970,"ip_address":"","ucode":"9BF75E8CCF8E0B","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/8YX35AFKL60uUNM5YGloEx8uDbv0VGB5VddYvqKDgPRiauyW1ggJIs9p6B7ad3AricFMZAp8ahAqP4FmzaTP1few/132","comment_is_top":false,"comment_ctime":1636968251,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"5931935547","product_id":100094401,"comment_content":"以前只想着会用就行，不求甚解，这一章算是把响应式的实现原理弄懂了","like_count":1},{"had_liked":false,"id":320602,"user_name":"笑叹尘世","can_delete":false,"product_type":"c1","uid":2818538,"ip_address":"","ucode":"1A034809EF9B61","user_header":"https://static001.geekbang.org/account/avatar/00/2b/01/ea/d0be0574.jpg","comment_is_top":false,"comment_ctime":1636419096,"is_pvip":false,"replies":[{"id":"116520","content":"storage数据取出来之前记得用JSON.parse和JSON.stringify处理一下","user_name":"作者回复","user_name_real":"花果山大圣","uid":"1003715","ctime":1636638125,"ip_address":"","comment_id":320602,"utype":1}],"discussion_count":2,"race_medal":0,"score":"5931386392","product_id":100094401,"comment_content":"第一次加到存储里todos：[{&quot;title&quot;:&quot;2222&quot;,&quot;done&quot;:false}]。<br><br>刷新页面后存储里的tods变成了&quot;[{\\&quot;title\\&quot;:\\&quot;2222\\&quot;,\\&quot;done\\&quot;:false}]&quot;<br>","like_count":2,"discussions":[{"author":{"id":2818538,"avatar":"https://static001.geekbang.org/account/avatar/00/2b/01/ea/d0be0574.jpg","nickname":"笑叹尘世","note":"","ucode":"1A034809EF9B61","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":413219,"discussion_content":"一个低级错误，本来想删掉的，万一别人也遇到我这个问题呢，我就自问自答了。\nlet data = ref(JSON.parse(localStorage.getItem(name)||&#39;[]&#39;))\n这一行代码我写成了这样：let data = ref(localStorage.getItem(name)||&#39;[]&#39;)","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1636421054,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1003715,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/50/c3/0aa50246.jpg","nickname":"花果山大圣","note":"","ucode":"25C0A36D628037","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":530058,"discussion_content":"storage数据取出来之前记得用JSON.parse和JSON.stringify处理一下","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1636638125,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":320440,"user_name":"阿阳","can_delete":false,"product_type":"c1","uid":1165817,"ip_address":"","ucode":"20A35FB86B1C5C","user_header":"https://static001.geekbang.org/account/avatar/00/11/c9/f9/39492855.jpg","comment_is_top":false,"comment_ctime":1636333790,"is_pvip":false,"replies":[{"id":"116527","content":"本地存储并不是响应式的，我们封装的读取到js内存之后的值","user_name":"作者回复","user_name_real":"花果山大圣","uid":"1003715","ctime":1636638357,"ip_address":"","comment_id":320440,"utype":1}],"discussion_count":3,"race_medal":0,"score":"5931301086","product_id":100094401,"comment_content":"请问在自定义实现useStorage中，let data = ref(JSON.parse(localStorage.getItem(name)) || value)，这行代码，生成的响应式数据，是不是可能监听两种数据，一个是本地存储中的localStorage.getItem(name)，监听是本地存储的name字段么？或者监听传入的value对象的值么？也就是说，本地存储也能被封装成响应式的。","like_count":1,"discussions":[{"author":{"id":1003715,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/50/c3/0aa50246.jpg","nickname":"花果山大圣","note":"","ucode":"25C0A36D628037","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":529992,"discussion_content":"本地存储并不是响应式的，我们封装的读取到js内存之后的值","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1636638357,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1361002,"avatar":"https://static001.geekbang.org/account/avatar/00/14/c4/6a/e45bbb6b.jpg","nickname":"Smile","note":"","ucode":"674C2361FFB807","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":550703,"discussion_content":"把本地存储的数据或者指定的数据变成响应式数据","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1644676204,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1520949,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLM5OPNJfnTfIgnZPNJuWMGjiaXxib9UNuONLtibGAvc1Bg5zVW3q7Jxh6MuefYG94e9FYmLy5Yc8tXA/132","nickname":"gary4j","note":"","ucode":"B951E9BA489F14","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":413770,"discussion_content":"只是监听内存里的变量，即 data 。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1636557354,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":320123,"user_name":"Estelle","can_delete":false,"product_type":"c1","uid":1465558,"ip_address":"","ucode":"BD4C48AF8B67F5","user_header":"https://static001.geekbang.org/account/avatar/00/16/5c/d6/226bd584.jpg","comment_is_top":false,"comment_ctime":1636090676,"is_pvip":false,"replies":[{"id":"118394","content":"能贴一下全部的代码妈？我本地按照你的代码三个console.log的结果如下, 并且没有报错<br><br>undefined 2<br>2 4<br>undefined NaN","user_name":"作者回复","user_name_real":"编辑","uid":"1003715","ctime":1639403165,"ip_address":"","comment_id":320123,"utype":1}],"discussion_count":3,"race_medal":0,"score":"5931057972","product_id":100094401,"comment_content":"你好 我想问下 <br>let proxy = new Proxy(obj,{<br>    get : function (target,prop) {<br>        return target[prop]<br>    },<br>    set : function (target,prop,value) {<br>        target[prop] = value;<br>        if(prop===&#39;count&#39;){<br>            double = getDouble(value)<br>        }<br>    },<br>    deleteProperty(target,prop){<br>        delete target[prop]<br>        if(prop===&#39;count&#39;){<br>            double = NaN<br>        }<br>    }<br>})<br>console.log(obj.count,double)<br>proxy.count = 2<br>console.log(obj.count,double) <br>delete proxy.count<br>&#47;&#47; 删除属性后，我们打印log时，输出的结果就会是 undefined NaN<br>console.log(obj.count,double) <br>执行这个时候 控制台报错：TypeError: &#39;set&#39; on proxy: trap returned falsish for property &#39;count&#39;。<br>是什么原因 希望能解答","like_count":1,"discussions":[{"author":{"id":1003715,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/50/c3/0aa50246.jpg","nickname":"花果山大圣","note":"","ucode":"25C0A36D628037","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":538403,"discussion_content":"能贴一下全部的代码妈？我本地按照你的代码三个console.log的结果如下, 并且没有报错\n\nundefined 2\n2 4\nundefined NaN","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1639403165,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2166878,"avatar":"https://static001.geekbang.org/account/avatar/00/21/10/5e/42f4faf7.jpg","nickname":"天择","note":"","ucode":"ED2B08DB2F2B38","race_medal":4,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":413367,"discussion_content":"这个是因为set和delete函数操作成功需要返回true，如果不写或者false，会抛出异常。https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy/Proxy/set","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1636458101,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2814182,"avatar":"https://static001.geekbang.org/account/avatar/00/2a/f0/e6/a7b1abe5.jpg","nickname":"李锦伦","note":"","ucode":"9583D304D6D777","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":550149,"discussion_content":"The set() method should return a boolean value.\n\nReturn true to indicate that assignment succeeded.\nIf the set() method returns false, and the assignment happened in strict-mode code, a TypeError will be thrown.\n\nset和deleteproperty方法里都需要有返回值","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1644395411,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":319460,"user_name":"沉默的话唠","can_delete":false,"product_type":"c1","uid":1231254,"ip_address":"","ucode":"90212EF174C6E3","user_header":"https://static001.geekbang.org/account/avatar/00/12/c9/96/4577c1ef.jpg","comment_is_top":false,"comment_ctime":1635820596,"is_pvip":true,"replies":[{"id":"115885","content":"我其实是用来当做默认值的","user_name":"作者回复","user_name_real":"花果山大圣","uid":"1003715","ctime":1635930871,"ip_address":"","comment_id":319460,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5930787892","product_id":100094401,"comment_content":"useStorage 函数的第二个value 参数，是不是没有用上。 ","like_count":1,"discussions":[{"author":{"id":1003715,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/50/c3/0aa50246.jpg","nickname":"花果山大圣","note":"","ucode":"25C0A36D628037","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":529642,"discussion_content":"我其实是用来当做默认值的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1635930871,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":351208,"user_name":"勿更改任何信息","can_delete":false,"product_type":"c1","uid":2028955,"ip_address":"","ucode":"B4949BEB8B2AFD","user_header":"","comment_is_top":false,"comment_ctime":1657611105,"is_pvip":false,"discussion_count":0,"race_medal":1,"score":"1657611105","product_id":100094401,"comment_content":"服了，useLocalstorage那段代码都跑不起来","like_count":0},{"had_liked":false,"id":348425,"user_name":"这个需求做不了","can_delete":false,"product_type":"c1","uid":1133464,"ip_address":"","ucode":"2BC0A306550D45","user_header":"https://static001.geekbang.org/account/avatar/00/11/4b/98/20ff3f6a.jpg","comment_is_top":false,"comment_ctime":1655099210,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1655099210","product_id":100094401,"comment_content":"vueuse有中文文档吗","like_count":0},{"had_liked":false,"id":348030,"user_name":"智慧城市工程中心-刘美玉","can_delete":false,"product_type":"c1","uid":2952453,"ip_address":"","ucode":"98AB5BA4E4A6C6","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKw4PibKlVlR0wo6tVjXo4Ysekf0BKRmFzB4gHowZS3nuPTEjKTLUoNeqQFI30s2mDvJHWu2DfCOfA/132","comment_is_top":false,"comment_ctime":1654676720,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1654676720","product_id":100094401,"comment_content":"想知道，vue2可以通過watch看数据有沒有变化，然後可能视图变化了，但是watch却监听不到，這是vue响应式的缺陷，但是vue3的這個比較的過程怎麽看出來呢？watch，没看出来","like_count":0},{"had_liked":false,"id":343147,"user_name":"giteebravo","can_delete":false,"product_type":"c1","uid":1005290,"ip_address":"","ucode":"C087E8D6B5A98B","user_header":"https://static001.geekbang.org/account/avatar/00/0f/56/ea/32608c44.jpg","comment_is_top":false,"comment_ctime":1650677567,"is_pvip":false,"discussion_count":1,"race_medal":1,"score":"1650677567","product_id":100094401,"comment_content":"不知为何 delete obj.count 这句会报错 TypeError: Cannot delete property &#39;count&#39; of #&lt;Object&gt;","like_count":0,"discussions":[{"author":{"id":1005290,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/56/ea/32608c44.jpg","nickname":"giteebravo","note":"","ucode":"C087E8D6B5A98B","race_medal":1,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":566631,"discussion_content":"已解决。\n申明 obj 时初始化一个 count 即可。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1650724383,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":337949,"user_name":"洲~zZTT","can_delete":false,"product_type":"c1","uid":2345068,"ip_address":"","ucode":"38B4D8BEE97324","user_header":"https://static001.geekbang.org/account/avatar/00/23/c8/6c/2b2acb04.jpg","comment_is_top":false,"comment_ctime":1647173639,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1647173639","product_id":100094401,"comment_content":"大圣老师您好，我在使用您写的useFavicon功能时遇到了一点问题，想请教一下。<br>我想实现的功能是进入about页面就更换图标为geek.png，离开about页面就更换回favicon.ico图标，于是使用了onBeforeUnmount钩子调用reset函数，但这个reset没有触发favicon的watch函数，不知道为什么。代码如下：<br>&#47;&#47; About.vue<br>&lt;template&gt;<br>  &lt;button @click=&quot;reset&quot;&gt;重置icon&lt;&#47;button&gt;<br>&lt;&#47;template&gt;<br>&lt;script setup&gt;<br>import { onBeforeUnmount } from &quot;vue&quot;;<br>import useFavicon from &quot;..&#47;utils&#47;favicon&quot;;<br>let { favicon, reset } = useFavicon();<br>favicon.value = &quot;geek.png&quot;;<br>onBeforeUnmount(() =&gt; {<br>  reset();<br>});<br>&lt;&#47;script&gt;<br>点击重置button可以将icon恢复为favicon.ico，就在onBeforeUnmount和onUnmounted中都不好使。","like_count":0},{"had_liked":false,"id":337622,"user_name":"晴空万里","can_delete":false,"product_type":"c1","uid":1181835,"ip_address":"","ucode":"6470D4B84A4D8E","user_header":"https://static001.geekbang.org/account/avatar/00/12/08/8b/1b7d0463.jpg","comment_is_top":false,"comment_ctime":1646919401,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1646919401","product_id":100094401,"comment_content":"想问下 最后那个存储本地的useStorage方法代码怎么放 我按照老师的代码 写到后面的时候 已经不知道放在哪里了.git上面也一头雾水","like_count":0},{"had_liked":false,"id":335368,"user_name":"布罗利","can_delete":false,"product_type":"c1","uid":1392747,"ip_address":"","ucode":"5AA0542378C12E","user_header":"https://static001.geekbang.org/account/avatar/00/15/40/6b/0f4e5b87.jpg","comment_is_top":false,"comment_ctime":1645491037,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1645491037","product_id":100094401,"comment_content":"跟试图相关的应该都可以封装成响应式的，比如根据搜索参数 搜索数据  ","like_count":0},{"had_liked":false,"id":330324,"user_name":"寇","can_delete":false,"product_type":"c1","uid":2815751,"ip_address":"","ucode":"185249A0A3E542","user_header":"https://static001.geekbang.org/account/avatar/00/2a/f7/07/cd3b32d0.jpg","comment_is_top":false,"comment_ctime":1641911316,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1641911316","product_id":100094401,"comment_content":"useStorage 里面<br><br>function useStorage(name, value=[]){<br>&#47;&#47; 第一行在手动清除 localStorage 会报错<br>    let data = ref(JSON.parse(localStorage.getItem(name)|| value))<br>    watchEffect(()=&gt;{<br>        localStorage.setItem(name,JSON.stringify(data.value))<br>    })<br>    return data<br>}<br>","like_count":0,"discussions":[{"author":{"id":1361002,"avatar":"https://static001.geekbang.org/account/avatar/00/14/c4/6a/e45bbb6b.jpg","nickname":"Smile","note":"","ucode":"674C2361FFB807","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":550701,"discussion_content":"let data = ref(JSON.parse(localStorage.getItem(name)) || value) 就可以了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1644675928,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":326039,"user_name":"coder","can_delete":false,"product_type":"c1","uid":1656956,"ip_address":"","ucode":"3A0940EBF94577","user_header":"https://static001.geekbang.org/account/avatar/00/19/48/7c/2aaf50e5.jpg","comment_is_top":false,"comment_ctime":1639323620,"is_pvip":false,"replies":[{"id":"118308","content":"你尝试清理一下loalstorage里的内容再试试，或者看下全部代码？","user_name":"作者回复","user_name_real":"编辑","uid":"1003715","ctime":1639396648,"ip_address":"","comment_id":326039,"utype":1}],"discussion_count":3,"race_medal":0,"score":"1639323620","product_id":100094401,"comment_content":"用老师的代码  ref(JSON.parse(localStorage.getItem(name)|| vaule))  会报错SyntaxError: Unexpected token u in JSON at position 0","like_count":0,"discussions":[{"author":{"id":1003715,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/50/c3/0aa50246.jpg","nickname":"花果山大圣","note":"","ucode":"25C0A36D628037","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":538292,"discussion_content":"你尝试清理一下loalstorage里的内容再试试，或者看下全部代码？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1639396648,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1361002,"avatar":"https://static001.geekbang.org/account/avatar/00/14/c4/6a/e45bbb6b.jpg","nickname":"Smile","note":"","ucode":"674C2361FFB807","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":550702,"discussion_content":"let data = ref(JSON.parse(localStorage.getItem(name)) || value) 就可以了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1644675954,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1656956,"avatar":"https://static001.geekbang.org/account/avatar/00/19/48/7c/2aaf50e5.jpg","nickname":"coder","note":"","ucode":"3A0940EBF94577","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":538487,"discussion_content":"let todos = useStorage(&#39;todos&#39;,[])  这一句我改为 let todos = useStorage(&#39;todos&#39;,&#39;[]&#39;) 就没问题了，小白，刚开始学","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1639410543,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":321887,"user_name":"5-刘新波(Arvin)","can_delete":false,"product_type":"c1","uid":1174199,"ip_address":"","ucode":"DBD135D2587A93","user_header":"https://static001.geekbang.org/account/avatar/00/11/ea/b7/1a18a39d.jpg","comment_is_top":false,"comment_ctime":1637079675,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1637079675","product_id":100094401,"comment_content":"说的干脆点的，就是数据操作语言产生（副作用）的，都可以用。","like_count":0},{"had_liked":false,"id":321553,"user_name":"赝品","can_delete":false,"product_type":"c1","uid":1131075,"ip_address":"","ucode":"2540CF111456FE","user_header":"https://static001.geekbang.org/account/avatar/00/11/42/43/e3fc0cd5.jpg","comment_is_top":false,"comment_ctime":1636945389,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1636945389","product_id":100094401,"comment_content":"使用composition Api，提供接口，封装独立逻辑，实现时是基于vue，如果要切换成react，也很方便。面向接口编程。对语言框架的依赖更小了。","like_count":0},{"had_liked":false,"id":321300,"user_name":"于良骥","can_delete":false,"product_type":"c1","uid":1757371,"ip_address":"","ucode":"BB2FC8A10DFDAF","user_header":"https://static001.geekbang.org/account/avatar/00/1a/d0/bb/86e86d71.jpg","comment_is_top":false,"comment_ctime":1636770500,"is_pvip":false,"replies":[{"id":"116822","content":"有代码案例吗？","user_name":"作者回复","user_name_real":"花果山大圣","uid":"1003715","ctime":1637031688,"ip_address":"","comment_id":321300,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1636770500","product_id":100094401,"comment_content":"大圣老师，请问下vue3 生产环境报Cannot read property &#39;insertBefore&#39; of null ？本地没有这种问题，是因为v-if导致的嘛 我改成v-show就不报这种错误了，但是感觉v-show一直存在感觉不太优雅呢？<br>","like_count":0,"discussions":[{"author":{"id":1003715,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/50/c3/0aa50246.jpg","nickname":"花果山大圣","note":"","ucode":"25C0A36D628037","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":530265,"discussion_content":"有代码案例吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1637031688,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":321154,"user_name":"cwang","can_delete":false,"product_type":"c1","uid":1465246,"ip_address":"","ucode":"04CB9F4CA2CEAD","user_header":"https://static001.geekbang.org/account/avatar/00/16/5b/9e/a8dec12d.jpg","comment_is_top":false,"comment_ctime":1636690543,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1636690543","product_id":100094401,"comment_content":"这么说，Vue3的响应式设计不光采用了ES6最新的Proxy，还用了对象自身的get、set函数特性。Vue3 =&gt;ref 来自 对象自身的get、set；reactive 来自Proxy。 ","like_count":0},{"had_liked":false,"id":320778,"user_name":"windliang","can_delete":false,"product_type":"c1","uid":1234620,"ip_address":"","ucode":"D31E26BFB09DE6","user_header":"https://static001.geekbang.org/account/avatar/00/12/d6/bc/026ac6b1.jpg","comment_is_top":false,"comment_ctime":1636509655,"is_pvip":false,"replies":[{"id":"116509","content":"不好意思 问没太看懂两列是啥意思呀","user_name":"作者回复","user_name_real":"花果山大圣","uid":"1003715","ctime":1636637819,"ip_address":"","comment_id":320778,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1636509655","product_id":100094401,"comment_content":"大圣老师请教一下，实现原理那里把 definePropery 和 value setter 写成了两列，但其实这两个是属于一种，都是利用了访问器属性，只是在写法上不同","like_count":0,"discussions":[{"author":{"id":1003715,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/50/c3/0aa50246.jpg","nickname":"花果山大圣","note":"","ucode":"25C0A36D628037","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":530111,"discussion_content":"不好意思 问没太看懂两列是啥意思呀","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1636637819,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1104549,"avatar":"https://static001.geekbang.org/account/avatar/00/10/da/a5/f485072e.jpg","nickname":"Populus alba","note":"","ucode":"BC8182BB98A4B9","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":414908,"discussion_content":"definePropery 给一个已存在对象通过添加新属性或修改旧属性完成响应式\n\nvalue setter 在对象属性初始化时已经完成了属性的响应式","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1636937497,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":319979,"user_name":"速冻鱼","can_delete":false,"product_type":"c1","uid":2752085,"ip_address":"","ucode":"293DD4B76D2421","user_header":"https://static001.geekbang.org/account/avatar/00/29/fe/55/de39267a.jpg","comment_is_top":false,"comment_ctime":1636026960,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"1636026960","product_id":100094401,"comment_content":"文稿中watchEffct怎么和数据关联起来的呢，没看懂呢","like_count":0,"discussions":[{"author":{"id":2279433,"avatar":"https://static001.geekbang.org/account/avatar/00/22/c8/09/b34b1473.jpg","nickname":"鱼腩","note":"","ucode":"54C97E73A75854","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":412077,"discussion_content":"具体得了解源码了，watchEffect包裹的代码如果包含响应式数据，会触发响应式数据proxy.get方法，get里面通过set的依赖收集器收集回调，以后每次更新响应式数据，触发proxy.set方法，遍历set的依赖收集器的回调","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1636075009,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1276988,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83erDeOuPaaRAgWLLIdarW4RI2xrgdDkaPVLNuyba5kVFtCrqOialpOjkCgqZyOfxfxXJKd8a6jDI98g/132","nickname":"Mserke","note":"","ucode":"F9726E91F6E24C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":411957,"discussion_content":"watchEffect函数里有哪些数据，哪些数据变化了，就会走watchEffect函数里去。console.log 一下你想监听的值就知道了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1636037252,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":319947,"user_name":"请去学习吧","can_delete":false,"product_type":"c1","uid":2817286,"ip_address":"","ucode":"16BE53FC31B0CF","user_header":"","comment_is_top":false,"comment_ctime":1636015341,"is_pvip":false,"replies":[{"id":"116536","content":"赞赞赞<br>第一部分实战代码在这里呀，欢迎遇见bug了提pr呀<br>https:&#47;&#47;github.com&#47;shengxinjing&#47;geektime-vue-course","user_name":"作者回复","user_name_real":"花果山大圣","uid":"1003715","ctime":1636638580,"ip_address":"","comment_id":319947,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1636015341","product_id":100094401,"comment_content":"VueUse太棒了吧<br>另外useStorage方法中的括号位置要注意一下<br>原：let data = ref(JSON.parse(localStorage.getItem(name) || &#39;[]&#39;)) <br>改：let data = ref(JSON.parse(localStorage.getItem(name)) || value) <br><br>","like_count":1,"discussions":[{"author":{"id":1003715,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/50/c3/0aa50246.jpg","nickname":"花果山大圣","note":"","ucode":"25C0A36D628037","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":529825,"discussion_content":"赞赞赞\n第一部分实战代码在这里呀，欢迎遇见bug了提pr呀\nhttps://github.com/shengxinjing/geektime-vue-course","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1636638580,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":319370,"user_name":"scorpio💤","can_delete":false,"product_type":"c1","uid":2830444,"ip_address":"","ucode":"9DC002D32CF0BF","user_header":"https://static001.geekbang.org/account/avatar/00/2b/30/6c/2f0c61ae.jpg","comment_is_top":false,"comment_ctime":1635761763,"is_pvip":false,"replies":[{"id":"115904","content":"那必须来得及  会后端的话 后面门槛会比较好迈过","user_name":"作者回复","user_name_real":"花果山大圣","uid":"1003715","ctime":1635935959,"ip_address":"","comment_id":319370,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1635761763","product_id":100094401,"comment_content":"做了几年PHP，现在转前端看VUE，还来得及不，大圣","like_count":0,"discussions":[{"author":{"id":1003715,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/50/c3/0aa50246.jpg","nickname":"花果山大圣","note":"","ucode":"25C0A36D628037","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":529610,"discussion_content":"那必须来得及  会后端的话 后面门槛会比较好迈过","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1635935959,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":319316,"user_name":"嘻哈","can_delete":false,"product_type":"c1","uid":1464586,"ip_address":"","ucode":"CFC390193DB437","user_header":"https://static001.geekbang.org/account/avatar/00/16/59/0a/2a087c97.jpg","comment_is_top":false,"comment_ctime":1635740270,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1635740270","product_id":100094401,"comment_content":"点赞","like_count":0}]}