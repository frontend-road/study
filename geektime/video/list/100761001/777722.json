{"id":777722,"title":"18｜元组中的...和索引存取表达式（用Key）","content":"","comments":[{"had_liked":false,"id":391107,"user_name":"Jack Q","can_delete":false,"product_type":"c3","uid":1160078,"ip_address":"广东","ucode":"A7DBC311884FFA","user_header":"https://static001.geekbang.org/account/avatar/00/11/b3/8e/1c564eb2.jpg","comment_is_top":false,"comment_ctime":1717341311,"is_pvip":false,"replies":[{"id":142242,"content":"赞！👍+5\n\n这是一个满分答案，尤其是第1题解释得很到位，也因此能顺利解答后续的问题。在第三个题上，的确是采用infer X的推断逻辑才能处理这种“剩余元素之后的元素”。——因为这个问题有点超纲，哈哈，所以只能算课外题。\n\n另外，带标签的元组和带可选成员的元组都没有课上出现，这是两个不太常见的知识点，Jack Q的答案中提及了其中的一个。它们其实都是为了应对“函数的参数在本质上是元组”的问题，所以就有了[a:string, ...args: any[]]，以及[string, number?]这样的语法。","user_name":"作者回复","user_name_real":"编辑","uid":1521669,"ctime":1717486731,"ip_address":"江苏","comment_id":391107,"utype":1}],"discussion_count":2,"race_medal":0,"score":2,"product_id":100761001,"comment_content":"&#47;&#47; 作业1: 试计算 下面表达式T的类型 \ntype T = [...[&#39;a&#39;, 1, string], ...any, args: string[]];\n&#47;&#47; 1)说明元组T的特点\n&#47;&#47; T 是一个 索引0位置 为 字符 a, 索引 1位置 为 数字 1, 索引2位置 为 任意字符, 索引为末尾时 为 string[], 其拥有标签\n&#47;&#47; 其他索引位置 元素可以是任意内容\n&#47;&#47; 2)解释表达式求值的过程\n&#47;&#47; 展开元组 (...[&#39;a&#39;, 1, string]) :  [&#39;a&#39;, 1, string]\n&#47;&#47; 标识剩余元素为 any (...any[]) : [&#39;a&#39;, 1, string, ...any[]] \n&#47;&#47; 在末尾标识一个 label 为 args 类型为 string[] 的元素  (args: string[]):  [&#39;a&#39;, 1, string, ...any[]， args： string[]] \n\n&#47;&#47; 作业2: 上述 类型 T能作为 T[K]表达式中的 T吗\n&#47;&#47; 可以\n&#47;&#47; 1) 解释 它是以何种类型参数 T[K]的 求值过程的\n&#47;&#47; T 以 [&#39;a&#39;, 1, string, ...any[]， args： string[]] 这个元组类型参与 求值\n&#47;&#47; 2) T[0|5]的结果是什么\n&#47;&#47; T[0|5] -&gt; any\n&#47;&#47; 3) 解释求值过程\n&#47;&#47; T[0|5] -&gt; T[0] | T[5] -&gt; &#39;a&#39; | any -&gt; any\n\n&#47;&#47; 作业3: 求取T末尾的参数 args的类型\ntype Pop&lt;T&gt; = T extends [...any[], infer Last] ? Last : never;\ntype Last = Pop&lt;T&gt;;\n\n&#47;&#47; 思路类似之前做过的 ts-challenge 中的 Pop,不过返回的不是pop后的元组值,而是变成了最后一个元素\n&#47;&#47; https:&#47;&#47;github.com&#47;type-challenges&#47;type-challenges&#47;blob&#47;main&#47;questions&#47;00016-medium-pop&#47;README.md","like_count":2,"discussions":[{"author":{"id":1521669,"avatar":"https://static001.geekbang.org/account/avatar/00/17/38/05/7beecd5d.jpg","nickname":"Aiming","note":"","ucode":"66292B32F9960A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":646165,"discussion_content":"赞！👍+5\n\n这是一个满分答案，尤其是第1题解释得很到位，也因此能顺利解答后续的问题。在第三个题上，的确是采用infer X的推断逻辑才能处理这种“剩余元素之后的元素”。——因为这个问题有点超纲，哈哈，所以只能算课外题。\n\n另外，带标签的元组和带可选成员的元组都没有课上出现，这是两个不太常见的知识点，Jack Q的答案中提及了其中的一个。它们其实都是为了应对“函数的参数在本质上是元组”的问题，所以就有了[a:string, ...args: any[]]，以及[string, number?]这样的语法。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1717486732,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"江苏","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2,\"source\":0}","child_discussion_number":1,"child_discussions":[{"author":{"id":1034451,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/c8/d3/3020ae46.jpg","nickname":"fatme","note":"","ucode":"75A805D2BB2AD1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1521669,"avatar":"https://static001.geekbang.org/account/avatar/00/17/38/05/7beecd5d.jpg","nickname":"Aiming","note":"","ucode":"66292B32F9960A","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":654603,"discussion_content":"老师，为什么 T[5] 是 any 呢？我的理解是，T 的长度 &gt;= 4。当 T 长度为 4 的时候，T[5] 是 never；当 T 的长度为 5 的时候，T[5] 是 string[]；当 T 的长度 &gt;= 6 的时候，T[5] 是 any。所以，综合以上情况，T[5] 等于 never | string[] | any，最终 T[5] 是 any。这样的理解对吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1733106005,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":646165,"ip_address":"广东","group_id":0},"score":654603,"extra":""}]}]},{"had_liked":false,"id":391021,"user_name":"westfall","can_delete":false,"product_type":"c3","uid":1632773,"ip_address":"上海","ucode":"F3F5CB7DF695FC","user_header":"https://static001.geekbang.org/account/avatar/00/18/ea/05/9976b871.jpg","comment_is_top":false,"comment_ctime":1717069305,"is_pvip":false,"replies":[{"id":142226,"content":"赞的👍 的确是这样。\n\n本来这道思考题的作用，也是想让同学们了解js与ts（的类型中）在“剩余参数”这个用法上的差别。^^.","user_name":"作者回复","user_name_real":"编辑","uid":1521669,"ctime":1717129732,"ip_address":"江苏","comment_id":391021,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100761001,"comment_content":"最后一题问了 chatgpt，答案如下：\n\n```typescript\ntype T = [...[&#39;a&#39;, 1, string], ...any[], args: string[]];\ntype Last&lt;T&gt; = T extends [...infer _, infer L] ? L : never;\ntype TLast = Last&lt;T&gt;; \n```\n思路是把 type T 整体解构，把最后一个成员单独拎出来。感觉有点类似 js 里的：\n\n```javascript\nconst arr = [1,2,3,4,5];\nconst [first, ...rest] = arr;\n```\n只不过 js 里面只能从前面单独拎一个出来","like_count":1,"discussions":[{"author":{"id":1521669,"avatar":"https://static001.geekbang.org/account/avatar/00/17/38/05/7beecd5d.jpg","nickname":"Aiming","note":"","ucode":"66292B32F9960A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":646018,"discussion_content":"赞的👍 的确是这样。\n\n本来这道思考题的作用，也是想让同学们了解js与ts（的类型中）在“剩余参数”这个用法上的差别。^^.","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1717129732,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"江苏","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2,\"source\":0}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":391424,"user_name":"Kyen","can_delete":false,"product_type":"c3","uid":2850722,"ip_address":"广东","ucode":"57EA9E1700298B","user_header":"https://static001.geekbang.org/account/avatar/00/2b/7f/a2/83dbba75.jpg","comment_is_top":false,"comment_ctime":1718242471,"is_pvip":false,"replies":[{"id":142352,"content":"数组的length一定是number，这是确定的。但是元组的length有两种情况，如果length是数字的字面量，那么他是有限元组，如果是number，那么这是一个无限元组(不定长的)。早期ts元组只有定长的，因为概念上就是这样的，高版本因为剩余元素的出现，才有了无限元组的说法。","user_name":"作者回复","user_name_real":"编辑","uid":1521669,"ctime":1718248699,"ip_address":"江苏","comment_id":391424,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100761001,"comment_content":"在8分四十多的时候，有一个地方不是很理解，一开始说，如果是数组类型的话，t3 =t2[“length”]，t3应该是number类型，但是后面又说，L8=t8[“length”]    L8是一个number，但t8又不是数组，有点绕，老师可以再具体解释一下吗","like_count":0,"discussions":[{"author":{"id":1521669,"avatar":"https://static001.geekbang.org/account/avatar/00/17/38/05/7beecd5d.jpg","nickname":"Aiming","note":"","ucode":"66292B32F9960A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":646581,"discussion_content":"数组的length一定是number，这是确定的。但是元组的length有两种情况，如果length是数字的字面量，那么他是有限元组，如果是number，那么这是一个无限元组(不定长的)。早期ts元组只有定长的，因为概念上就是这样的，高版本因为剩余元素的出现，才有了无限元组的说法。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1718248699,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"江苏","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2,\"source\":0}","child_discussion_number":0,"child_discussions":[]}]}]}