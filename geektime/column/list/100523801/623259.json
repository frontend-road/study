{"id":623259,"title":"开篇词｜为什么掌握现代C++新特性如此重要？","content":"<p>你好，我是卢誉声。</p><p>很高兴能在这个专栏与你再见，一起在这个纷繁复杂、瞬息万变的世界中，探寻C++发展至今最大的一次语言变革——C++20，学习和掌握现代C++带来的新编程思想。</p><p>离上一次专栏<a href=\"https://time.geekbang.org/column/intro/100060501\">《动态规划面试宝典》</a>结课也快两年了，不知道你的成长如何，我的职业生涯伴随着诸多编程语言的学习和使用在螺旋式前进。作为C++及其现代演进标准的忠实拥趸，我的工作始终离不开C++，同时，看到其他编程语言在各自擅长的领域开疆拓土，也让我对C++的发展及其设计哲学有了更深的理解。</p><p>尤其是C++20，让我深刻体会到了什么是现代C++的优雅永不过时，你甚至完全可以把它当作一门全新的现代编程语言来用。</p><p>不过，每次提到C++编程，无论你是使用C++的开发者，还是使用其他编程语言和开发环境的开发者，我们对C++的评价往往都是“复杂且难学”。为什么C++会留下这样的口碑？追根溯源，主要有两个原因。</p><p>第一个原因是C++的包容性，即向前兼容。</p><p>C++类似Objective-C，是C语言的超集，它希望尽量向下兼容C的一切语法和特性（在C99标准之前甚至是完全兼容），因此足够接近硬件底层。但这是把双刃剑。</p><p>虽然C99之前语法足够简单，但实际使用的复杂性并不低，而C++为了兼容C语言的语法付出了很大的代价，并在此基础上设计并发展出了多范式的编程模型，这意味着可以继续采用面向过程的编程模式，也可以转向面向对象。与此同时，现代C++还提供了一组函数式编程工具。</p><!-- [[[read_end]]] --><p>因此，<strong>在现代C++得到发展以前，实际开发时到底要选用何种范式或者如何合理组合，一直让我们很头痛</strong>。</p><p>C++兼容C有什么代价呢？比如，C的指针类型声明就备受C++之父Bjarne Stroustrup诟病，但是为了向前兼容，不得不在这种声明模式下继续扩展。</p><p>第二个原因是C++的设计哲学，“不为任何抽象付出不可接受的多余运行时性能损耗”。</p><p>纵观C++40多年的演进历程，可以发现每一次演进所支持的都是和编译时相关的新特性，而相对来说，运行时特性非常少，除了在面向对象的编程模型基础上提出的多态以外，几乎再无运行时特性（其他的均以库的形式提供）。这是因为C++是零成本抽象，也就是说，开发者在使用C++表达抽象概念时，无需忍受多余的运行时性能开销。</p><p>因此，<strong>虽然C++具备很多高级抽象的语法特性，但在设计与具体使用过程中，我们仍然需要考虑各种各样的问题</strong>，包括基础对象内存模型、虚函数的设计、基于模板的泛型系统、基于模板的静态反射体系，以及到目前为止都是由编译器决定可选的垃圾回收（在其他现代语言中可以说是必备的特性了），这就让我们学习和使用C++变得更复杂了。</p><p><img src=\"https://static001.geekbang.org/resource/image/1c/99/1c127de6c90d2938479d29c308a8af99.jpg?wh=1500x1125\" alt=\"图片\"></p><p>的确，这真够复杂的。一门编程语言必定有其局限性，这也是为什么“更为现代”的Go和Rust出现了，试图解决一些问题，特别是安全性方面。</p><p>不过作为语言的使用者，你肯定会问，那今后的C++学习和使用会有哪些变化呢？这个问题，我曾有幸问过C++之父Bjarne Stroustrup。</p><blockquote>\n<p>诸如Go和Rust编程语言新贵，它们在发力解决安全性和易用性方面的问题，规避缓冲区溢出这样的漏洞，甚至Linux&nbsp;kernel也开始考虑或采纳对 Rust&nbsp;的支持，您是否觉得这会成为C++的一个潜在的巨大威胁和挑战？</p>\n</blockquote><p>他的回答简单明了。</p><blockquote>\n<p>“每隔几年，就会出现C++的挑战者，我相信它们一定会有支持者。但是，C++的独特的语言特性、应用场景，以及C++标准发展的方向，会让C++继续茁壮成长。”</p>\n</blockquote><p>我特别喜欢这个回答。是啊，劣势固然存在，但C++经过历史的检验，在高性能计算、低延迟处理、图形学领域以及机器学习等前沿技术领域有着难以替代的优势。</p><p>C++的“复杂且难学”一定程度上取决于向前兼容的能力和设计哲学，但正因如此，维护多年的系统仍然能与全新开发的系统友好地对接和集成，C++的包容性和多样性也让它极具发展力。</p><p>自C++11标准诞生以来，我们正式迈入现代C++世界，而C++20及后续演进标准作为继C++11之后的又一次重大变革，给我们带来了新思想、新工具，让我们从容面对以往难以解决的问题，也是我们这门课将学习的重点内容。</p><h3>C++新特性</h3><p>首先，C++20给我们带来了相当重要的三个核心语言特性变更：Modules、Concepts和Coroutines。</p><p>Modules从语言层面解决了一个鱼与熊掌不可兼得的关键问题——传统头文件编译范式<strong>编译性能和符号隔离之间二选一的难题</strong>。有了Modules，C++就能更好地解决符号隔离问题和编译性能问题，这种变化是史无前例的，可以大幅度提高我们开发者的效率。在这之前，我们普遍认为此问题无解。</p><p>Concepts是一个C++20的编译期谓语，它根据开发者定义的接口规则，实现了泛型编程中的编译时检查，提升模板元编程代码的可读性，给出了更好的错误信息。在此之前，<strong>模板元编程最为致命的问题就是缺乏良好定义的接口</strong>，导致编译错误晦涩难懂，库的调用者也痛苦不堪。</p><p>Coroutines可以在几乎零开销的情况下大幅降低 <strong>C++系统的开发复杂度</strong>，同时可以非侵入式地为现有代码扩展协程接口，它为并发编程、异步编程、异常处理、流处理等场景提供全新的便捷工具。在此之前，我们需要占用更多的资源和系统级封装来实现类似功能，编码和维护的开销很大。</p><p>除了这三个核心语言特性变更，C++20及后续演进标准中还提供了更优雅的函数式编程基础设施——Ranges/Constrained algorithms以及诸多重要的库变更。</p><p><strong>更重要的是，在这些新特性和库变更的基础上，我们有了一个新的C++编程范式</strong>——它足够现代、简约，而且带来了解决问题的全新思路，通过C++20及后续演进标准的高级抽象，在不妥协性能的前提下，优化和简化开发手段。</p><p>我给你简单举几个例子。</p><ul>\n<li>通过Modules这一高级概念抽象，解决了模块定义和符号隔离与编译性能间的互斥问题；</li>\n<li>利用Concepts这一高级接口抽象，提供了模板接口的编译时类型检查能力，同时不牺牲编译期性能；</li>\n<li>使用Coroutines这一高级异步抽象，实现了基于协程的异步处理框架，屏蔽了协程实现的底层复杂性；</li>\n<li>通过Ranges这一高级类型抽象，提供极为便捷的集合处理的语言特性支持，驱动我们用函数式编程来实现优雅代码的编写，特别是在大规模数据处理场景。</li>\n</ul><p>可以看出，C++20及后续演进标准对C++进行了全面升级，重点降低编程语言的学习成本、让C++的代码变得更简单、解决长期存在于泛型编程中的语言缺陷、大幅提高开发者构建C++系统的效率。</p><p>总的来说，如果你是新手，C++将更加友好，学习和掌握更易上手。如果你是有经验的C++开发者，新的编程思想也值得掌握，这些质的变化，将对你的日常开发工作产生巨大影响，而我们也需要更新编程思想来充分利用这些高级抽象，毕竟，编程思想决定了开发者解决问题的能力上限。</p><p>既然学习和掌握C++20及后续演进标准中的新特性和库变更这么重要，我们该如何学习呢？</p><h3>课程结构</h3><p>我精心为你打磨了课程结构，分为三个章节。</p><p><strong>第一章：核心语言重要变更</strong></p><p>我们将学习三大核心语言特性变更，Modules、Concepts、Coroutines。从这些新特性的推出的背景开始，掌握概念细节，最后，我会带你在实际工程项目代码中体会这些核心变更的强大之处。同时，我们还会对比这些高级抽象与传统编码方案，加深你对新特性的感性认知和理解。</p><p><strong>第二章：重要库变更</strong></p><p>我们将通过两个实战案例串联起一系列重要的标准库变更，用网络数据流的处理实例来学习Ranges、Formating和Bit manipulation，用命令行的日历应用实例来学习其他的几个重要标准库变更。从实战中，你不仅会学习和掌握这些库带来的便利之处，还能加深对C++设计哲学的理解。</p><p>学习这部分内容，你会快速掌握使用现代C++库解决问题的便捷性和编程思路。</p><p><strong>第三章：现代C++标准演进</strong></p><p>第三章，我们将讨论C++20后续演进标准，即C++23和C++26会带来的令人激动的新特性，在C++23固化的新特性的基础上，进一步探索下一个Major提案C++26中预计引入的新特性。我会通过符合目前提案的实例介绍如何使用这些新特性解决问题，帮助你理解C++未来的语言演进方向。</p><p>通过这部分内容，你会快速把握现代C++的演进特点和发展方向，洞悉未来。</p><p><img src=\"https://static001.geekbang.org/resource/image/18/82/185f8eef682c9573c132f716ab540582.jpg?wh=2020x1288\" alt=\"\"></p><p>要特别说明的是，在整个学习过程中，从新概念的理解到运用，我们都将围绕项目实例展开。我十分认同实践的重要性，特别是现代C++的新特性，其实任何新知识也是类似的，如果不能很快投入使用，作为开发者的你，其实很容易忘记这些融会了地球上最聪敏的一群人智慧的结晶。</p><p>如何在实际工程项目中通过这些新特性解决问题，将是我们学习的重点，课程中的代码案例也都是可以直接编译运行的项目代码（课程配套代码点击<a href=\"https://github.com/samblg/cpp20-plus-indepth\">这里</a>获取）。</p><p>在接下来的学习之旅中，期待你能吸收新的编程思想融汇到自己解决问题的思路中，在实际项目中灵活运用现代C++提供的新特性。下一讲见！</p>","comments":[{"had_liked":false,"id":366513,"user_name":"寻回光明","can_delete":false,"product_type":"c1","uid":1807282,"ip_address":"广东","ucode":"F5AF2488062E94","user_header":"https://static001.geekbang.org/account/avatar/00/1b/93/b2/27620044.jpg","comment_is_top":false,"comment_ctime":1673862980,"is_pvip":false,"replies":[{"id":133559,"content":"一起学习，加油。","user_name":"作者回复","user_name_real":"编辑","uid":1006976,"ctime":1673923566,"ip_address":"江苏","comment_id":366513,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100523801,"comment_content":"来了来了，希望能学习掌握c++20新特性。","like_count":2,"discussions":[{"author":{"id":1006976,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/5d/80/0c52be53.jpg","nickname":"卢誉声","note":"","ucode":"93C5EFC39EB9C6","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":599979,"discussion_content":"一起学习，加油。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1673923566,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"江苏","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":396402,"user_name":"plh","can_delete":false,"product_type":"c1","uid":1031828,"ip_address":"四川","ucode":"D79F2B87AC3AD2","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83erEHTaQDkWqEYib9iabib8rACYpSFBHTPFmgicUKaib79MB6VIxNwiajHUS8kYFEKCGOjpibf0dibhIjqhfzg/132","comment_is_top":false,"comment_ctime":1734317191,"is_pvip":false,"replies":[{"id":143930,"content":"明星项目看行业哈，可以多搜索或关注一下github、gitee","user_name":"作者回复","user_name_real":"编辑","uid":1006976,"ctime":1734660686,"ip_address":"美国","comment_id":396402,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100523801,"comment_content":"请问下老师，目前有那些明星项目或者推荐项目已经采用了 c++20及以的？ ","like_count":0,"discussions":[{"author":{"id":1006976,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/5d/80/0c52be53.jpg","nickname":"卢誉声","note":"","ucode":"93C5EFC39EB9C6","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":655346,"discussion_content":"明星项目看行业哈，可以多搜索或关注一下github、gitee","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1734660687,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"美国","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2,\"source\":0}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":391960,"user_name":"亚东","can_delete":false,"product_type":"c1","uid":1026101,"ip_address":"广东","ucode":"8B7C8080B8516D","user_header":"https://static001.geekbang.org/account/avatar/00/0f/a8/35/85033228.jpg","comment_is_top":false,"comment_ctime":1719534998,"is_pvip":true,"replies":[{"id":142605,"content":"C++基础了解的基础上，学习C++20会比较合适","user_name":"作者回复","user_name_real":"编辑","uid":1006976,"ctime":1720618761,"ip_address":"上海","comment_id":391960,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100523801,"comment_content":"我没有C++基础，可以直接开启CPP 20么","like_count":0,"discussions":[{"author":{"id":1006976,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/5d/80/0c52be53.jpg","nickname":"卢誉声","note":"","ucode":"93C5EFC39EB9C6","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":647806,"discussion_content":"C++基础了解的基础上，学习C++20会比较合适","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1720618761,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"上海","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2,\"source\":0}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":389728,"user_name":"Geek_87c50a","can_delete":false,"product_type":"c1","uid":2883536,"ip_address":"北京","ucode":"90A6DB0D137BFB","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTL9nT0GOIL0AXHK6nor5cic5mkPAnXCvxLdf2Lka9kJYOO3lPqXCq5YCI6lk87WaeNuVq3iafzyibYNw/132","comment_is_top":false,"comment_ctime":1713331599,"is_pvip":false,"replies":[{"id":141828,"content":"章节，指下路～","user_name":"作者回复","user_name_real":"编辑","uid":1006976,"ctime":1713636866,"ip_address":"上海","comment_id":389728,"utype":1}],"discussion_count":3,"race_medal":0,"score":2,"product_id":100523801,"comment_content":"您好，最近在看您的书《移动平台深度神经网络实战》，里面有些代码不知道在哪，比如resunpack.hpp，编译不过，已经困扰了我好久。希望您有时间帮解答下，感谢🙏","like_count":0,"discussions":[{"author":{"id":1006976,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/5d/80/0c52be53.jpg","nickname":"卢誉声","note":"","ucode":"93C5EFC39EB9C6","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":642551,"discussion_content":"章节，指下路～","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1713636866,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"上海","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2,\"source\":0}","child_discussion_number":1,"child_discussions":[{"author":{"id":2883536,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTL9nT0GOIL0AXHK6nor5cic5mkPAnXCvxLdf2Lka9kJYOO3lPqXCq5YCI6lk87WaeNuVq3iafzyibYNw/132","nickname":"Geek_87c50a","note":"","ucode":"90A6DB0D137BFB","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1006976,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/5d/80/0c52be53.jpg","nickname":"卢誉声","note":"","ucode":"93C5EFC39EB9C6","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":643168,"discussion_content":"8.5.2 基于retinaNet的检测定位实现\n#include &#34;resunpack/resunpack.hpp&#34;\n\n...\nDetectNet::DetectNet(const char* modelPath) : \n  _scale(0.0f)\n{\n    using learnml::resunpack::PackageManager;\n    using learnml::resunpack::Package;\n    using learnml::resunpack::ResunpackException;\n...\n}\n其中的resunpack类不知道在哪定义的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1714098147,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":642551,"ip_address":"北京","group_id":0},"score":643168,"extra":""}]},{"author":{"id":2883536,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTL9nT0GOIL0AXHK6nor5cic5mkPAnXCvxLdf2Lka9kJYOO3lPqXCq5YCI6lk87WaeNuVq3iafzyibYNw/132","nickname":"Geek_87c50a","note":"","ucode":"90A6DB0D137BFB","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":645526,"discussion_content":"我看编译的时候有依赖. /deps/resunpack/include，但是提供的源码里没有呢","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1716295382,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":376698,"user_name":"docker131313","can_delete":false,"product_type":"c1","uid":1556406,"ip_address":"北京","ucode":"5B24734D18B57C","user_header":"https://wx.qlogo.cn/mmopen/vi_32/iaXcnYOjwO39gSSyo0CprNeLxx6OF80KqPz69ErJKmibMSxn5YeM4VGD6ATBnUR045ibsYjQGlAAQo5r3iaTPydTbA/132","comment_is_top":false,"comment_ctime":1687240678,"is_pvip":false,"replies":[{"id":137475,"content":"C++强调编译时计算，这与其他高级编程语言的差别巨大。大家可以尝试以C++设计哲学为出发点，整理、分享和讨论Java和C++的区别。","user_name":"作者回复","user_name_real":"编辑","uid":1006976,"ctime":1688146597,"ip_address":"上海","comment_id":376698,"utype":1}],"discussion_count":1,"race_medal":5,"score":2,"product_id":100523801,"comment_content":"java 和c++有哪些区别？","like_count":0,"discussions":[{"author":{"id":1006976,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/5d/80/0c52be53.jpg","nickname":"卢誉声","note":"","ucode":"93C5EFC39EB9C6","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":622373,"discussion_content":"C++强调编译时计算，这与其他高级编程语言的差别巨大。大家可以尝试以C++设计哲学为出发点，整理、分享和讨论Java和C++的区别。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1688146597,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"上海","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":366558,"user_name":"tang_ming_wu","can_delete":false,"product_type":"c1","uid":2566054,"ip_address":"广东","ucode":"98E5847CEF8B84","user_header":"https://static001.geekbang.org/account/avatar/00/27/27/a6/32e9479b.jpg","comment_is_top":false,"comment_ctime":1673925803,"is_pvip":false,"replies":[{"id":133562,"content":"每周三篇更新，具体是周一、三、周五的零点更新。推荐加入学习计划，跟着更新同步学习。期待留言区看到你更多的留言！\n\n另外，等待更新期间尝试下第一讲的课后思考题呗，多学多练，效果加倍哈哈！","user_name":"编辑回复","user_name_real":"编辑","uid":1501385,"ctime":1673929723,"ip_address":"北京","comment_id":366558,"utype":2}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100523801,"comment_content":"更新周期是怎样的？下一期啥时候，期待。。。","like_count":0,"discussions":[{"author":{"id":1501385,"avatar":"https://static001.geekbang.org/account/avatar/00/16/e8/c9/59bcd490.jpg","nickname":"听水的湖","note":"","ucode":"B1759F90165D81","race_medal":0,"user_type":8,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":599990,"discussion_content":"每周三篇更新，具体是周一、三、周五的零点更新。推荐加入学习计划，跟着更新同步学习。期待留言区看到你更多的留言！\n\n另外，等待更新期间尝试下第一讲的课后思考题呗，多学多练，效果加倍哈哈！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1673929723,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":8}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":366516,"user_name":"Jstein","can_delete":false,"product_type":"c1","uid":2647367,"ip_address":"美国","ucode":"815CAAC227F52D","user_header":"https://static001.geekbang.org/account/avatar/00/28/65/47/86bb60d0.jpg","comment_is_top":false,"comment_ctime":1673865488,"is_pvip":false,"replies":[{"id":133558,"content":"C++20目前只提供了协程的协议框架，协程协议的设计与线程也是保持正交性的。因此协程执行时是否并行或者能否运行在多个CPU核心上需要看我们对协程的具体实现。可以期待一下后续上线的有关C++20 Coroutines的内容～","user_name":"作者回复","user_name_real":"编辑","uid":1006976,"ctime":1673923557,"ip_address":"江苏","comment_id":366516,"utype":1}],"discussion_count":3,"race_medal":0,"score":2,"product_id":100523801,"comment_content":"请问老师，C++的协程是并行的吗？能运行在多个CPU核心上吗？","like_count":0,"discussions":[{"author":{"id":1006976,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/5d/80/0c52be53.jpg","nickname":"卢誉声","note":"","ucode":"93C5EFC39EB9C6","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":599978,"discussion_content":"C++20目前只提供了协程的协议框架，协程协议的设计与线程也是保持正交性的。因此协程执行时是否并行或者能否运行在多个CPU核心上需要看我们对协程的具体实现。可以期待一下后续上线的有关C++20 Coroutines的内容～","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1673923557,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"江苏","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1106123,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKOASyV1lpdkW6It8WQltNGj9021PTibqOwRUTccaSUEM1GmQThOTIRp9Eu7XNZZFfGGNveLbUSw9Q/132","nickname":"tick","note":"","ucode":"D2C864306C06CB","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":599950,"discussion_content":"协程是指可以被挂起的函数，可以被多个线程运行，自然也可以运行在多个核心上，这个角度上是并行的。但是这个并行依然是依托于多线程。\n同时一个线程可以同时运行多个协程，看起来像是并行，实际是串行，这个角度来看和一个线程跑多个函数没有区别。\n协程用法还是在自身的切换要优于线程切换\n","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1673911211,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"四川","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2647367,"avatar":"https://static001.geekbang.org/account/avatar/00/28/65/47/86bb60d0.jpg","nickname":"Jstein","note":"","ucode":"815CAAC227F52D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":600208,"discussion_content":"谢谢老师和tick的解释，大概明白了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1674113627,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"四川","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":368449,"user_name":"coming","can_delete":false,"product_type":"c1","uid":1262181,"ip_address":"上海","ucode":"7625CE61D9A2D2","user_header":"https://static001.geekbang.org/account/avatar/00/13/42/65/5bfd0a65.jpg","comment_is_top":false,"comment_ctime":1676351988,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":2,"product_id":100523801,"comment_content":"https:&#47;&#47;thenewstack.io&#47;can-c-be-saved-bjarne-stroustrup-on-ensuring-memory-safety&#47;, bjarne说要加强C++安全方面了","like_count":0}]}