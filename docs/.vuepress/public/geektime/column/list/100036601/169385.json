{"id":169385,"title":"19 | 正向度量：如何建立完整的DevOps度量体系？","content":"<p>你好，我是石雪峰。到今天为止，我用14讲的篇幅给你通盘梳理了DevOps的工程实践，基本涵盖了工程实践的方方面面。但是，就像那句经典的“不仅要低头看路，还要抬头看天”说的一样，我们花了这么大的力气投入工程实践的建设，结果是不是符合我们的预期呢？</p><p>所以，在工程实践的最后两讲，我想跟你聊聊度量和持续改进的话题，今天先来看看DevOps的度量体系。</p><p>我相信，对于每个公司来说，度量都是必不可少的实践，也是管理层最重视的实践。在实施度量的时候，很多人都把管理学大师爱德华·戴明博士的“If you can’t measure it, you can’t manage it”奉为实践圭臬。</p><p>但是，回过头来想想，有多少度量指标是为了度量而度量的？花了好大力气度量出来的数据会有人看吗？度量想要解决的，到底是什么问题呢？</p><p>所以，<strong>度量不是目的，而是手段，也就是说度量的目标是“做正确的事”，而度量的手段是“正确地做事”</strong>。</p><p>那么，什么才是度量领域正确的事情呢？如果想要弄清楚DevOps中的度量长什么样子，关键就是要回到<strong>DevOps对于软件交付的核心诉求</strong>上。</p><p>简而言之，对于IT交付来说，DevOps希望做到的就是<strong>持续、快速和高质量的价值交付</strong>。价值可以是一个功能特性，可以是用户体验的提升，也可以是修复阻塞用户的缺陷。</p><!-- [[[read_end]]] --><p>明确了这一点，也就明确了DevOps的度量想要达到的目标，就是为了证明，经过一系列的改进工作，与过去相比，<strong>团队的交付速度更快了，交付质量更高了</strong>。如果度量的结果不能导向这两个核心目标，那么显然就走错了方向，也就得不到实际想要的结果了。</p><p>如果只有大方向，往往还是不知道具体要怎么做。这个时候，就需要把目标和方向拆解成一系列的度量指标了。那么，怎样定义好的度量指标和不好的度量指标呢？</p><h2>如何定义指标？</h2><p>前几天，我被派到某仓库做流水线工人，这个经历让我深刻地理解了工业制造和软件行业的巨大差异。</p><p>如果你现在问我，决定工业生产流水线速度的是什么？我可以告诉你，答案就是，流水线本身。因为流水线的传送带的速度是一定的，产线速度也就可以直观地量化出来。</p><p>但是，软件开发不像工业制造，开发的过程看不见摸不着，除了工程师真正编写代码的时间，还要包括构思、设计和测试的时间，以及完成各类流程的时间等等。这个过程中可能还存在着各种并行工作的切换和打断，所以，没法用工业流水线的方式来衡量开发人员的效率。</p><p>于是，为了达到量化的目的，很多指标就被人为地设计出来了。</p><p>比如，以准时提测率这个指标为例，这个指标采用的是百分制的形式，按时提测得100分，延期一天得90分，延期两天得70分，以此类推，要是延期五天及以上，就只能0分了。这样的指标看起来似乎足够客观公平，但是仔细想想，延期1天1小时和延期1天23小时，似乎也没有太大区别，得分的高低并不能反映真实的情况。</p><p>在各个公司的度量体系中，类似的人造指标可谓比比皆是。可见，不好的指标总是五花八门，各有各的样子。不过，好的指标大多具备一些典型的特征。</p><p><strong>1.明确受众。</strong></p><p>指标不能脱离受众而单独存在，<strong>在定义指标的同时，要定义它所关联的对象，也就是这个指标是给谁看</strong>。</p><p>不同的人关注点自然也不一样，即便指标本身看起来没有什么问题，但是如果使用错位了，也很难产生预期的价值。比如，给非技术出身的老板看单元测试的覆盖率，就没有什么太大意义。</p><p><strong>2.直指问题。</strong></p><p>在NBA中，优秀的球员总是自带体系的。所谓体系，就是围绕这个球员的核心能力的一整套战术打法，可以解决球队的实际问题，所以，这个球员的表现就成了整支球队的“晴雨表”。</p><p>而好的指标也应该是直指问题的，你一看到这个指标，就能意识到问题所在，并自然而然地进行改进，而不是看了跟没看见一样，也不知道具体要做什么。</p><p>比如，构建失败率很高，团队就会意识到代码的提交质量存在问题，需要加强事前的验证工作。</p><p><strong>3.量化趋势。</strong></p><p>按照SMART原则，<strong>好的指标应该是可以衡量的，而且是可以通过客观数据来自证的</strong>。</p><p>比如，用户满意度这种指标看起来很好，但很难用数据衡量；再比如，项目达成率这个指标，如果只是靠手工填写，那就没啥说服力。</p><p>同时，<strong>好的度量指标应该能展现趋势</strong>。也就是说，经过一段时间的沉淀，指标是变好了，还是变坏了，距离目标是更近了，还是更远了，这些都应该是一目了然的。</p><p><strong>4.充满张力。</strong></p><p>指标不应该孤立存在，而是应该相互关联构成一个整体。好的指标应该具有一定的张力，<strong>向上可以归并到业务结果，向下可以层层分解到具体细节</strong>。这样通过不同维度的数据抽取，可以满足不同视角的用户需求。</p><p>比如，单纯地度量需求交付个数，就没有太大意义。因为需求的颗粒度会直接影响数量，如果只是把一个需求拆成两个，从而达到需求交付速度加倍的效果，这就失去了度量的意义。</p><h2>定义指标有哪些原则？</h2><p>明白了好的度量指标的典型特征，接下来，我们就来看看定义DevOps度量的五条原则：</p><ol>\n<li><strong>全局指标优于局部指标</strong>：过度的局部优化可能对整体产出并无意义，从而偏离了度量的核心，也就是<strong>提升交付速度和交付质量</strong>。</li>\n<li><strong>综合指标优于单一指标</strong>：从单一维度入手会陷入只见树木不见森林的困境，综合指标更加客观。所以，要解决一个问题，就需要一组指标来客观指引。</li>\n<li><strong>结果指标优于过程指标</strong>：首先要有结果指标，以结果为导向，以过程为途径，一切过程指标都应该归结到结果指标。</li>\n<li><strong>团队指标优于个人指标</strong>：优先考核团队指标而非个人指标，团队共享指标有助于形成内部合力，减少内部的割裂。</li>\n<li><strong>灵活指标优于固化指标</strong>：指标的设立是为了有针对性地实施改进，需要考虑业务自身的差异性和改进方向，而非简单粗暴的“一刀切”，并且随着团队能力的上升，指标也需要适当的调整，从而不断挑战团队的能力。</li>\n</ol><h2>哪些指标最重要？</h2><p>基于以上的指标特征和指导原则，并结合业界大厂的一些实践，我给你推荐一套DevOps度量体系。</p><p>虽然各个公司的度量指标体系都不尽相同，但是我认为这套体系框架足以满足大多数场景，如下图所示：</p><p><img src=\"https://static001.geekbang.org/resource/image/e5/76/e5ee032923d611854e005bf392b24676.jpeg?wh=1412*764\" alt=\"\"></p><p><strong>1.交付效率</strong></p><ul>\n<li><strong>需求前置时间</strong>：从需求提出到完成整个研发交付过程，并最终上线发布的时间。对业务方和用户来说，这个时间是最能客观反映团队交付速度的指标。这个指标还可以进一步细分为需求侧，也就是从需求提出、分析、设计、评审到就绪的时长，以及业务侧，也就是研发排期、开发、测试、验收、发布的时长。对于价值流分析来说，这就代表了完整的价值流时长。</li>\n<li><strong>开发前置时间</strong>：从需求进入排期、研发真正动工的时间点开始，一直到最终上线发布的时长。它体现的是研发团队的交付能力，也就是一个需求进来后，要花多久才能完成整个开发过程。</li>\n</ul><p><strong>2.交付能力</strong></p><ul>\n<li><strong>发布频率</strong>：单位时间内的系统发布次数。原则上发布频率越高，代表交付能力越强。这依赖于架构结构和团队自治、独立发布的能力。每个团队都可以按照自己的节奏安全地发布，而不依赖于关联系统和发布窗口期的约束。</li>\n<li><strong>发布前置时间</strong>：指研发提交一行代码到最终上线发布的时间，是团队持续交付工程能力的最直观的考查指标，依赖于全流程自动化的流水线能力和自动化测试能力。这也是DevOps状态报告中的核心指标之一。</li>\n<li><strong>交付吞吐量</strong>：单位时间内交付的需求点数。也就是，单位时间内交付的需求个数乘以需求颗粒度，换算出来的点数，它可以体现出标准需求颗粒度下的团队交付能力。</li>\n</ul><p><strong>3.交付质量</strong></p><ul>\n<li><strong>线上缺陷密度</strong>：单位时间内需求缺陷比例，也就是平均每个需求所产生的缺陷数量，缺陷越多，说明需求交付质量越差。</li>\n<li><strong>线上缺陷分布</strong>：所有缺陷中的严重致命等级缺陷所占的比例。这个比例的数值越高，说明缺陷等级越严重，体现了质量的整体可控性。</li>\n<li><strong>故障修复时长</strong>：从有效缺陷提出到修复完成并上线发布的时间。一方面，这个指标考查了故障定位和修复的时间，另外一方面，也考查了发布前置时间，只有更快地完成发布上线过程，才能更快地修复问题。</li>\n</ul><p>这三组、八项指标体现了团队的交付效率、交付能力和交付质量，从全局视角考查了关键的结果指标，可以用于展现团队DevOps改进的效果和价值产出。不过，定义指标只能说是DevOps度量的一小步，只有让这些指标发挥价值，才能说是有意义的度量。</p><h2>如何开启度量工作？</h2><p>在企业内部开启度量工作，可以分为四个步骤。</p><p><strong>第1步：细化指标。</strong></p><p>一个完整的指标，除了定义之外，还需要明确指标名、指标描述、指标级别（团队级/组织级）、指标类型、适用场景范围及目标用户、数据采集方式和标准参考值。</p><p>以交付指标为例，我汇总了一份细化后的指标内容，你可以参考下表。其实不仅仅是核心结果指标，只要是在度量体系内定义的指标，都需要进行细化。</p><p><img src=\"https://static001.geekbang.org/resource/image/81/cf/81227920cc306a7fae29afa3d77a02cf.jpg?wh=8725*3325\" alt=\"\"></p><p>关于指标的参考值，对于不同的业务形态，参考值也有所不同。比如就单元测试覆盖率而言，无人车的业务和普通的互联网业务的差别可能会非常大。</p><p>所以参考值的选定，需要结合业务实际来分析并达成共识。而且，度量指标本身也需要建立定期更新的机制，以适应于整个团队的能力。</p><p><strong>第2步：收集度量数据</strong></p><p>度量指标需要客观数据的支撑，而数据往往都来源于各个不同的平台。所以，在定义指标的时候，你需要评估是否有足够的客观数据来支撑这个指标的衡量。</p><p>在采集度量数据的初期，我们面临的最大问题不仅是系统众多、数据口径不一致，还包括数据的准确性。</p><p>举个例子，比如开发交付周期这个指标，一般都是计算一个需求从开始开发到线上发布的时间长度。但是，如果开发人员迟迟不把这个需求设置为“已解决”或者“待测试”状态，那么统计出来的开发周期就存在大量的失真，很难反映出客观、真实的情况。</p><p>这就需要从流程和平台两个层面入手解决。比如，一方面，从流程层面制定研发操作规范，让每一名研发人员都清楚在什么时间点需要改变需求卡片状态；另一方面，建设平台能力，提供易用性的方式辅助研发，甚至自动流转需求状态。</p><p><strong>第3步：建立可视化平台。</strong></p><p>度量指标毕竟是要给人看的，度量数据也需要有一个地方可以收集和运算，这就依赖于度量可视化平台的建设了。关于如何建设一个支持多维度视图、对接多系统数据，以及灵活可编排的度量平台，我会在工具篇给你分享一个案例，帮助你破解度量平台建设的关键问题。</p><p><strong>第4步：识别瓶颈并持续改进。</strong></p><p>当数据做到了可信和可视化之后，团队面临的问题和瓶颈会自然而然浮现出来。如何通过指标牵引并驱动团队实施改进，这也是下一讲我们要讨论的核心内容。</p><p>我给你提供一些常用的度量指标和相关定义，你可以点击<a href=\"https://pan.baidu.com/s/1cZKd__yAhcvvrcYNZx9uAA\">网盘链接</a>获取，提取码是c7F3。需要注意的是，指标宜少不宜多，宜精不宜烂，对于企业的DevOps度量而言，这也是最常见的问题，定义了一大堆的指标，却不知道要拿来做什么。</p><p>只有将指标的定义细化，并在团队内部达成共识，仔细甄别数据的完整和有效性，并做到满足不同维度视角的可视化，才具备了驱动团队进行改进的基础，这一点请你一定要记住。</p><h2>总结</h2><p>总结一下，DevOps度量想要达到的目标，就是证明团队经过一系列的改进工作，与过去相比，交付速度更快了，交付质量也更高了。所以，交付效率和交付质量是最为核心的两个目标。只有围绕这两个目标建立的度量体系，才没有走错方向。</p><p>好的指标一般都具备四种特性：明确受众、直指问题、量化趋势和充满张力。结合指标特征和指导原则，以及业界大厂的一些实践，我给你介绍了三组、八项核心结果指标，包括效率指标、能力指标和质量指标。最后，我给你介绍了建立度量体系的四个步骤，希望可以帮助你一步步地搭建持续改进的基石。</p><p>度量是把双刃剑，做得不好反而会伤害团队的士气。如果本末倒置，把度量结果跟个人的绩效相绑定，就很容易使度量这个事情变了味道。很多大公司反反复复地在建立度量体系，就是因为前一个体系被人摸透，变成了数字游戏，于是就失去了原有的目的，只能推倒重来。</p><p>还是那句话，度量只是一种手段，而非目的。归根结底，度量的真正目的还是团队效率的提升和业务的成功。只有通过度量激起团队自发的改进意愿，提升团队改进的创造性和积极性，才是所谓的“正向度量”，这也是我最想传达给你的理念。</p><h2>思考题</h2><p>你所在的企业是否也在建设DevOps的度量体系呢？你觉得，这些度量指标数据对改进当前的工作是否起到了正面作用呢？</p><p>欢迎在留言区写下你的思考和答案，我们一起讨论，共同学习进步。如果你觉得这篇文章对你有所帮助，也欢迎你把文章分享给你的朋友。</p><p></p>","neighbors":{"left":{"article_title":"18 | 混沌工程：软件领域的反脆弱","id":168298},"right":{"article_title":"20 | 持续改进：PDCA体系和持续改进的意义","id":170698}},"comments":[{"had_liked":false,"id":154510,"user_name":"leslie","can_delete":false,"product_type":"c1","uid":1324255,"ip_address":"","ucode":"798E7C1CC98CC2","user_header":"https://static001.geekbang.org/account/avatar/00/14/34/df/64e3d533.jpg","comment_is_top":false,"comment_ctime":1574471799,"is_pvip":false,"replies":[{"id":"59650","content":"每次看到你的留言都让我感慨颇深，可能是在大公司时间长了，有太多这种一言难尽的故事，比如集成代码需要VP审批这个事情，就已经不知道掰扯过多少次了，试问哪个VP能够知道代码改了什么呢，所以我始终认为，效率提升就是要打破现有流程，如果不改变流程想实现效率提升，能做的也只有表面一层了吧。","user_name":"作者回复","user_name_real":"石雪峰","uid":"1117795","ctime":1574689641,"ip_address":"","comment_id":154510,"utype":1}],"discussion_count":1,"race_medal":0,"score":"23049308279","product_id":100036601,"comment_content":"    正向管理：觉得老师今天的课程就是在讲项目管理。&lt;落地实践篇&gt;开始就明显的感觉到了，故而在老师开始的其实就去补充了其相关的课程强化自身。<br>    老师的今天的课程中这块其实完全体现了DevOps其实就是一个项目一个产品：想有效发挥DevOps就必须让其贯穿整个过程，早期的进销存去替换全手工记账同样如此。做好一个DevOps可以大幅提升软件内部的效率，就像上次DevOps大会时网易的于旭东曾经做的分享更让我感受到这点。<br>     软件是一把双刃剑，诸多的关键环节同样如此：用好了大幅提升效率，过于刻板的为了规范而规范，可能受伤害的不只是软件本身，而是整个企业。谢谢老师今天的分享，期待后续的课程。","like_count":6,"discussions":[{"author":{"id":1117795,"avatar":"https://static001.geekbang.org/account/avatar/00/11/0e/63/cef8f0f4.jpg","nickname":"石雪峰","note":"","ucode":"2B3EA5B86D9A0A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":475490,"discussion_content":"每次看到你的留言都让我感慨颇深，可能是在大公司时间长了，有太多这种一言难尽的故事，比如集成代码需要VP审批这个事情，就已经不知道掰扯过多少次了，试问哪个VP能够知道代码改了什么呢，所以我始终认为，效率提升就是要打破现有流程，如果不改变流程想实现效率提升，能做的也只有表面一层了吧。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574689641,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":155063,"user_name":"manatee","can_delete":false,"product_type":"c1","uid":1041112,"ip_address":"","ucode":"708D90E7A265BD","user_header":"https://static001.geekbang.org/account/avatar/00/0f/e2/d8/f0562ede.jpg","comment_is_top":false,"comment_ctime":1574642643,"is_pvip":false,"replies":[{"id":"59608","content":"你好，虽然已经线下回复过了，为了其他同学参考，我再汇总下要点。第一、不是每个指标都能对应到人的，也没有这个必要，比如个人前置时间，我觉得意义不大，现在企业做度量体系普遍还没有细化到度量个人效率的程度。第二、指标需要分类分级，区分不同的维度，满足不同受众的视角，比如领导者视图，里面肯定只有最大的指标结果，然后可以拆分为部门级的数据，指标是层层拆解的，底层数据可以支撑上层结果，这个指标的层次关联很重要。第三、抓住核心坐标，比如需求就是其中之一，度量需求的时候可以站在需求提出方和需求受理方两个角度来度量，至于具体研发是否调整部门，其实并不重要哈。其实，没有度量个人指标，主要是不希望指标跟个人绩效挂钩，影响个人的行为，这一点也是设计度量的初衷哈。","user_name":"作者回复","user_name_real":"石雪峰","uid":"1117795","ctime":1574685764,"ip_address":"","comment_id":155063,"utype":1}],"discussion_count":2,"race_medal":0,"score":"18754511827","product_id":100036601,"comment_content":"老师您好，在统计指标的时候我们一般会以人的纬度或者以部门的纬度来进行统计，比如会统计一个部门的前置时间，一个小组的前置时间，一个人的前置时间。那我们在做系统设计时这些数据是如何与组织架构关联呢，特别是这个人在组织机构中产生了变化又如何保证数据的准确呢？","like_count":5,"discussions":[{"author":{"id":1117795,"avatar":"https://static001.geekbang.org/account/avatar/00/11/0e/63/cef8f0f4.jpg","nickname":"石雪峰","note":"","ucode":"2B3EA5B86D9A0A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":475649,"discussion_content":"你好，虽然已经线下回复过了，为了其他同学参考，我再汇总下要点。第一、不是每个指标都能对应到人的，也没有这个必要，比如个人前置时间，我觉得意义不大，现在企业做度量体系普遍还没有细化到度量个人效率的程度。第二、指标需要分类分级，区分不同的维度，满足不同受众的视角，比如领导者视图，里面肯定只有最大的指标结果，然后可以拆分为部门级的数据，指标是层层拆解的，底层数据可以支撑上层结果，这个指标的层次关联很重要。第三、抓住核心坐标，比如需求就是其中之一，度量需求的时候可以站在需求提出方和需求受理方两个角度来度量，至于具体研发是否调整部门，其实并不重要哈。其实，没有度量个人指标，主要是不希望指标跟个人绩效挂钩，影响个人的行为，这一点也是设计度量的初衷哈。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574685764,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1806233,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/8f/99/36258c38.jpg","nickname":"小神仙","note":"","ucode":"A464A632BE4926","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":258673,"discussion_content":"但是恰恰相反，领导确实最希望看到第三点，需要与个人绩效挂钩，反向推动部门。因为个人数据好了，则部门才会更好","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1588721189,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":160231,"user_name":"陈斯佳","can_delete":false,"product_type":"c1","uid":1259323,"ip_address":"","ucode":"C236F874FC767A","user_header":"https://static001.geekbang.org/account/avatar/00/13/37/3b/495e2ce6.jpg","comment_is_top":false,"comment_ctime":1575895630,"is_pvip":false,"replies":[{"id":"67659","content":"如果流程依赖于人的自觉性来保障，那么这个流程本身可能就有问题哦，流程和规范都有一定的强制性，最好的方式还是在某些节点进行卡点，比如状态不对不允许发布，提测等等，通过这些卡点来培养人的意识，再辅助以自动化的方式来简化流程执行的成本才是正道吧。","user_name":"作者回复","user_name_real":"石雪峰","uid":"1117795","ctime":1579854671,"ip_address":"","comment_id":160231,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5870862926","product_id":100036601,"comment_content":"关于数据的准确性这段时间很有感触。公司今年新上了一个缺陷管理系统，用来替换原先的老系统。新系统功能和使用习惯和老系统差异很大，大家都很不习惯，经常出现代码已经部署到生产环境了，但是对应的ticket还是显示正在开发的状态。我的应对方式是，一看到错误就追踪落实到个人，确保他意识到问题出在哪里，我们制定的新规则是什么，还有也要解释为什么我们制定这样的规则（我觉得规则的制定还是要以效率为准，没缘由的规则自己都说服不了自己，更不要想着让别人遵守）。然后总结一些常见的问题，以checklist的形式附加给所有程序员，作为提醒。感觉现在的自己就像个老母亲，一遍又一遍教导纠错，心累…","like_count":1,"discussions":[{"author":{"id":1117795,"avatar":"https://static001.geekbang.org/account/avatar/00/11/0e/63/cef8f0f4.jpg","nickname":"石雪峰","note":"","ucode":"2B3EA5B86D9A0A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":477304,"discussion_content":"如果流程依赖于人的自觉性来保障，那么这个流程本身可能就有问题哦，流程和规范都有一定的强制性，最好的方式还是在某些节点进行卡点，比如状态不对不允许发布，提测等等，通过这些卡点来培养人的意识，再辅助以自动化的方式来简化流程执行的成本才是正道吧。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579854671,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":154699,"user_name":"霍格沃兹小学徒","can_delete":false,"product_type":"c1","uid":1352674,"ip_address":"","ucode":"EB52B060CF9ED9","user_header":"https://static001.geekbang.org/account/avatar/00/14/a3/e2/439731b2.jpg","comment_is_top":false,"comment_ctime":1574514671,"is_pvip":true,"replies":[{"id":"59609","content":"你好，坦率的说：没有，不过业界有一些开源方案，你可以拿来参考，但我确实没见过有公司直接使用的，比如Hygieia, MirrorGate等，像商业工具那就相当的贵啦，比如tableau，土豪公司可以考虑哈，还集成了AI的能力。","user_name":"作者回复","user_name_real":"石雪峰","uid":"1117795","ctime":1574685975,"ip_address":"","comment_id":154699,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5869481967","product_id":100036601,"comment_content":"老师您好，当前业界有比较流行好用的度量平台的开源工具或者开源框架吗？","like_count":1,"discussions":[{"author":{"id":1117795,"avatar":"https://static001.geekbang.org/account/avatar/00/11/0e/63/cef8f0f4.jpg","nickname":"石雪峰","note":"","ucode":"2B3EA5B86D9A0A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":475552,"discussion_content":"你好，坦率的说：没有，不过业界有一些开源方案，你可以拿来参考，但我确实没见过有公司直接使用的，比如Hygieia, MirrorGate等，像商业工具那就相当的贵啦，比如tableau，土豪公司可以考虑哈，还集成了AI的能力。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574685975,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":154627,"user_name":"小谢同学","can_delete":false,"product_type":"c1","uid":1032544,"ip_address":"","ucode":"E809E6BC470631","user_header":"https://static001.geekbang.org/account/avatar/00/0f/c1/60/fc3689d0.jpg","comment_is_top":false,"comment_ctime":1574495971,"is_pvip":false,"replies":[{"id":"59628","content":"你好，你说的特别正确！可以参见精益看板的章节，对于WIP的合理值就可以使用吞吐量作为参考的主要依据哈。","user_name":"作者回复","user_name_real":"石雪峰","uid":"1117795","ctime":1574687514,"ip_address":"","comment_id":154627,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5869463267","product_id":100036601,"comment_content":"请问老师“交付吞吐量”是否可以辅助团队敏捷开发时设置每个冲刺的任务点数？避免出现工作量闲置或者产生过多挤压？","like_count":1,"discussions":[{"author":{"id":1117795,"avatar":"https://static001.geekbang.org/account/avatar/00/11/0e/63/cef8f0f4.jpg","nickname":"石雪峰","note":"","ucode":"2B3EA5B86D9A0A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":475529,"discussion_content":"你好，你说的特别正确！可以参见精益看板的章节，对于WIP的合理值就可以使用吞吐量作为参考的主要依据哈。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574687514,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":154612,"user_name":"工画师","can_delete":false,"product_type":"c1","uid":1025850,"ip_address":"","ucode":"FFABE897B2CF8E","user_header":"","comment_is_top":false,"comment_ctime":1574493083,"is_pvip":false,"replies":[{"id":"59630","content":"恩恩，道理很简单，还需要不断实践呀，有问题欢迎继续留言，我们一起探讨，谢谢！","user_name":"作者回复","user_name_real":"石雪峰","uid":"1117795","ctime":1574687665,"ip_address":"","comment_id":154612,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5869460379","product_id":100036601,"comment_content":"感谢老师的分享，对于我们正在建设DevOps度量指标阶段受益匪浅，还是应该回归本质，宜少不宜多，宜精不宜烂，达成共识，构建多维度视角的可视化，才能使度量变得真正有效。","like_count":1,"discussions":[{"author":{"id":1117795,"avatar":"https://static001.geekbang.org/account/avatar/00/11/0e/63/cef8f0f4.jpg","nickname":"石雪峰","note":"","ucode":"2B3EA5B86D9A0A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":475524,"discussion_content":"恩恩，道理很简单，还需要不断实践呀，有问题欢迎继续留言，我们一起探讨，谢谢！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574687665,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":199889,"user_name":"Pyel","can_delete":false,"product_type":"c1","uid":1000293,"ip_address":"","ucode":"7551BD8A7AC5F1","user_header":"https://static001.geekbang.org/account/avatar/00/0f/43/65/bf57c323.jpg","comment_is_top":false,"comment_ctime":1585497509,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1585497509","product_id":100036601,"comment_content":"“度量不是目的，而是手段，也就是说度量的目标是“做正确的事”，而度量的手段是“正确地做事”。”","like_count":0},{"had_liked":false,"id":172785,"user_name":"倪倪","can_delete":false,"product_type":"c1","uid":1228204,"ip_address":"","ucode":"EA05DCE91FC6D5","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTK134043CpGAlWGcszSme7Zia5Yv4mpj1LltFk0JZiboYU4rD5K0CZeicPUCRbP4rtr6AsyZb6BO8aKw/132","comment_is_top":false,"comment_ctime":1579311451,"is_pvip":false,"replies":[{"id":"67636","content":"没错，你发现了一个关键的问题，就是需求的颗粒度，如果颗粒度不平均，那么统计数据就没啥意义。所以在我们的实际经验中，会将需求颗粒度（开发交付时长）作为交付周期的重要参考依据，甚至对于需求颗粒度，配置化需求比例都会有明确的KPI要求。","user_name":"作者回复","user_name_real":"石雪峰","uid":"1117795","ctime":1579850457,"ip_address":"","comment_id":172785,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1579311451","product_id":100036601,"comment_content":"有的需求很大，有的需求很小，那开发前置时间是否就没有意义了","like_count":0,"discussions":[{"author":{"id":1117795,"avatar":"https://static001.geekbang.org/account/avatar/00/11/0e/63/cef8f0f4.jpg","nickname":"石雪峰","note":"","ucode":"2B3EA5B86D9A0A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":481851,"discussion_content":"没错，你发现了一个关键的问题，就是需求的颗粒度，如果颗粒度不平均，那么统计数据就没啥意义。所以在我们的实际经验中，会将需求颗粒度（开发交付时长）作为交付周期的重要参考依据，甚至对于需求颗粒度，配置化需求比例都会有明确的KPI要求。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579850457,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":154582,"user_name":"张瑞霞","can_delete":false,"product_type":"c1","uid":1000654,"ip_address":"","ucode":"BADDA4FE597BB1","user_header":"https://static001.geekbang.org/account/avatar/00/0f/44/ce/abb7bfe3.jpg","comment_is_top":false,"comment_ctime":1574484135,"is_pvip":false,"replies":[{"id":"59610","content":"这个好像没有必要哈，测试环境是要度量什么呢？","user_name":"作者回复","user_name_real":"石雪峰","uid":"1117795","ctime":1574686025,"ip_address":"","comment_id":154582,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1574484135","product_id":100036601,"comment_content":"这些指标需要区分阶段嘛？  如开发阶段是在开发环境，测试阶段是在测试环境","like_count":0,"discussions":[{"author":{"id":1117795,"avatar":"https://static001.geekbang.org/account/avatar/00/11/0e/63/cef8f0f4.jpg","nickname":"石雪峰","note":"","ucode":"2B3EA5B86D9A0A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":475515,"discussion_content":"这个好像没有必要哈，测试环境是要度量什么呢？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574686025,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1000654,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/44/ce/abb7bfe3.jpg","nickname":"张瑞霞","note":"","ucode":"BADDA4FE597BB1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":59812,"discussion_content":"都取测试环境就可以了吧，好像pipeline都是测试环境的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574694285,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]}]}