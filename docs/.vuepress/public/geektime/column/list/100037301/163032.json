{"id":163032,"title":"11 | DDD实践：如何用DDD重构中台业务模型？","content":"<p>你好，我是欧创新。</p><p>进入两千年后，随着互联网应用的快速发展，很多传统企业开始触网，建设自己的互联网电商平台。后来又随着微信和App等移动互联应用的兴起，又形成了新一轮的移动应用热潮。这些移动互联应用大多面向个人或者第三方，市场和需求变化快，需要以更敏捷的速度适应市场变化，为了保持快速响应能力和频繁发版的要求，很多时候这些移动互联网应用是独立于传统核心系统建设的，但两者承载的业务大部分又都是同质的，因此很容易出现业务能力重叠的问题。</p><p>阿里巴巴过去带动了传统企业向互联网电商转型。而如今又到了一个新的历史时期，在阿里巴巴提出中台战略后，很多企业又紧跟它的步伐，高举中台大旗，轰轰烈烈地开始了数字化转型之路。</p><p>那么传统企业在中台转型时，该如何从错综复杂的业务中构建中台业务模型呢？今天我就用一个传统企业中台建模的案例，带你一起用DDD的设计思想来构建中台业务模型。</p><h2>传统企业应用分析</h2><p>互联网电商平台和传统核心应用，两者面向的渠道和客户不一样，但销售的产品却很相似，它们之间的业务模型既有相同的地方，又有不同的地方。</p><p>现在我拿保险行业的互联网电商和传统核心应用来做个对比分析。我们看一下下面这张图，这两者在业务功能上会有很多相似和差异，这种相似和差异主要体现在四个方面。</p><!-- [[[read_end]]] --><p><img src=\"https://static001.geekbang.org/resource/image/25/07/255beadd4cf7a842c083ccea0ec19807.jpg?wh=1738*1082\" alt=\"\"></p><p><strong>1. 核心能力的重复建设。</strong>由于销售同质保险产品，二者在核心业务流程和功能上必然相似，因此在核心业务能力上存在功能重叠是不可避免的。传统保险核心应用有报价、投保、核保和出单功能，同样在互联网电商平台也有。这就是核心能力的重复建设。</p><p><strong>2. 通用能力的重复建设。</strong>传统核心应用的通用平台大而全，通常会比较重。而互联网电商平台离不开这些通用能力的支撑，但为了保持敏捷性，一般会自己建设缩小版的通用功能，比如用户、客户等。这是通用能力的重复建设。</p><p><strong>3. 业务职能的分离建设。</strong>有一类业务功能，在互联网电商平台中建设了一部分，在传统核心应用中也建设了一部分，二者功能不重叠而且还互补，组合在一起是一个完整的业务职能。比如缴费功能，互联网电商平台主要面向个人客户，于是采用了支付宝和微信支付的方式。而传统核心应用主要是柜台操作，仍在采用移动POS机的缴费方式。二者都是缴费，为了保证业务模型的完整性，在构建中台业务模型时，我们可以考虑将这两部分模型重组为一个完整的业务模型。</p><p><strong>4. 互联网电商平台和传统核心功能前后完全独立建设。</strong>传统核心应用主要面向柜台，不需要互联网电商平台的在线客服、话务、订单和购物车等功能。而互联网电商平台主要面向个人客户，它不需要后端比较重的再保、佣金、打印等功能。在构建中台业务模型时，对这种情况应区别对待，将面向后端业务管理的应用沉淀到后台，将前端能力构建为面向互联网渠道的通用中台，比如订单等。</p><h2>如何避免重复造轮子？</h2><p>要避免重复建设，就要理解中台的理念和思想。前面说了“<strong>中台是企业级能力复用平台</strong>”，“<strong>复用</strong>”用白话说就是重复使用，就是要避免重复造轮子的事情。</p><p>中台的设计思想与“高内聚、低耦合”的设计原则是高度一致的。高内聚是把相关的业务行为聚集在一起，把不相关的行为放在其它地方，如果你要修改某个业务行为，只需要修改一处。对了！中台就是要这样做，按照“高内聚、松耦合”的原则，实现企业级的能力复用！</p><p>那如果你的企业遇到了重复造轮子的情况，应该怎么处理？</p><p>你需要站在企业高度，将重复的需要共享的通用能力、核心能力沉淀到中台，将分离的业务能力重组为完整的业务板块，构建可复用的中台业务模型。前端个性能力归前端，后端管理能力归后台。建立前、中、后台边界清晰，融合协作的企业级可复用的业务模型。</p><h2>如何构建中台业务模型？</h2><p>我们可以用DDD领域建模的方法来构建中台业务模型。你可以选择两种建模策略：自顶向下和自底向上的策略。具体采用哪种策略，你需要结合公司的具体情况来分析，下面我就来介绍一下这两种策略。</p><p><strong>1. 自顶向下的策略</strong></p><p>第一种策略是自顶向下。这种策略是先做顶层设计，从最高领域逐级分解为中台，分别建立领域模型，根据业务属性分为通用中台或核心中台。领域建模过程主要基于业务现状，暂时不考虑系统现状。<span class=\"orange\">自顶向下的策略适用于全新的应用系统建设，或旧系统推倒重建的情况。</span></p><p>由于这种策略不必受限于现有系统，你可以用DDD领域逐级分解的领域建模方法。从下面这张图我们可以看出它的主要步骤：第一步是将领域分解为子域，子域可以分为核心域、通用域和支撑域；第二步是对子域建模，划分领域边界，建立领域模型和限界上下文；第三步则是根据限界上下文进行微服务设计。</p><p><img src=\"https://static001.geekbang.org/resource/image/e6/da/e665d85381a9b2c599555cac6a06deda.jpg?wh=1143*990\" alt=\"\"></p><p><strong>2. 自底向上的策略</strong></p><p>第二种策略是自底向上。这种策略是基于业务和系统现状完成领域建模。首先分别完成系统所在业务域的领域建模；然后对齐业务域，找出具有同类或相似业务功能的领域模型，对比分析领域模型的差异，重组领域对象，重构领域模型。这个过程会沉淀公共和复用的业务能力，会将分散的业务模型整合。<span class=\"orange\">自底向上策略适用于遗留系统业务模型的演进式重构。</span></p><p>下面我以互联网电商和传统核心应用的几个典型业务域为例，带你了解具体如何采用自底向上的策略来构建中台业务模型，主要分为这样三个步骤。</p><p><strong>第一步：锁定系统所在业务域，构建领域模型。</strong></p><p>锁定系统所在的业务域，采用事件风暴，找出领域对象，构建聚合，划分限界上下文，建立领域模型。看一下下面这张图，我们选取了传统核心应用的用户、客户、传统收付和承保四个业务域以及互联网电商业务域，共计五个业务域来完成领域建模。</p><p><img src=\"https://static001.geekbang.org/resource/image/f5/46/f537a7a43e77212c8a85241439b2f246.jpg?wh=2044*1086\" alt=\"\"></p><p>从上面这张图中，我们可以看到传统核心共构建了八个领域模型。其中用户域构建了用户认证和权限两个领域模型，客户域构建了个人和团体两个领域模型，传统收付构建了POS刷卡领域模型，承保域构建了定报价、投保和保单管理三个领域模型。</p><p>互联网电商构建了报价、投保、订单、客户、用户认证和移动收付六个领域模型。</p><p>在这些领域模型的清单里，我们可以看到二者之间有很多名称相似的领域模型。深入分析后你会发现，这些名称相似的领域模型存在业务能力重复，或者业务职能分散（比如移动支付和传统支付）的问题。那在构建中台业务模型时，你就需要重点关注它们，将这些不同领域模型中重复的业务能力沉淀到中台业务模型中，将分散的领域模型整合到统一的中台业务模型中，对外提供统一的共享的中台服务。</p><p><strong>第二步：对齐业务域，构建中台业务模型。</strong></p><p>在下面这张图里，你可以看到右侧的传统核心领域模型明显多于左侧的互联网电商，那我们是不是就可以得出一个初步的结论：传统核心面向企业内大部分应用，大而全，领域模型相对完备，而互联网电商面向单一渠道，领域模型相对单一。</p><p>这个结论也给我们指明了一个方向：首先我们可以将传统核心的领域模型作为主领域模型，将互联网电商领域模型作为辅助模型来构建中台业务模型。然后再将互联网电商中重复的能力沉淀到传统核心的领域模型中，只保留自己的个性能力，比如订单。中台业务建模时，既要关注领域模型的完备性，也要关注不同渠道敏捷响应市场的要求。</p><p><img src=\"https://static001.geekbang.org/resource/image/25/1d/25cd1e7fe14bfa22a752c1b184b9c91d.jpg?wh=1720*1406\" alt=\"\"></p><p>有了上述这样一个思路，我们就可以开始构建中台业务模型了。</p><p>我们从互联网电商和传统核心的领域模型中，归纳并分离出能覆盖两个域的所有业务子域。通过分析，我们找到了用户、客户、承保、收付和订单五个业务域，它们是可以用于领域模型对比分析的基准域。</p><p><strong>下面我以客户为例，来给你讲一下客户中台业务模型的构建过程。</strong></p><p>互联网电商客户主要面向个人客户，除了有个人客户信息管理功能外，基于营销目的它还有客户积分功能，因此它的领域模型有个人和积分两个聚合。</p><p>而传统核心客户除了支持个人客户外，还有单位和组织机构等团体客户，它有个人和团体两个领域模型。其中个人领域模型中除了个人客户信息管理功能外，还有个人客户的评级、重复客户的归并和客户的统一视图等功能，因此它的领域模型有个人、视图、评级和归并四个聚合。</p><p><span class=\"orange\">构建多业务域的中台业务模型的过程，就是找出同一业务域内所有同类业务的领域模型，对比分析域内领域模型和聚合的差异和共同点，打破原有的模型，完成新的中台业务模型重组或归并的过程。</span></p><p>我们将互联网电商和传统核心的领域模型分解后，我们找到了五个与个人客户领域相关的聚合，包括：个人、积分、评级、归并和视图。这五个聚合原来分别分散在互联网电商和传统核心的领域模型中，我们需要打破原有的领域模型，进行功能沉淀和聚合的重组，重新找出这些聚合的限界上下文，重构领域模型。</p><p><strong>最终个人客户的领域模型重构为：</strong>个人、归并和视图三个聚合重构为个人领域模型（客户信息管理），评级和积分两个聚合重构为评级积分领域模型（面向个人客户）。到这里我们就完成了个人客户领域模型的构建了。</p><p>好像还漏掉点什么东西呢？对了，还有团队客户领域模型！其实团体客户很简单。由于它只在传统核心中出现，我们将它在传统核心中的领域模型直接拿过来用就行了。</p><p>至此我们就完成了客户中台业务模型的构建了，客户中台构建了个人、团体和评级积分三个领域模型。</p><p>通过客户中台业务模型的构建，你是否get到构建中台业务模型的要点了呢？总结成一句话就是：“分域建模型，找准基准域，划定上下文，聚合重归类。”</p><p>其它业务域其实也是一样的过程，在这里我就不一一讲述了，你可以自己练习一下，作为课后作业。完成后你可以对照下面这张图看一下，这就是其它业务域重构后的中台业务模型。</p><p><img src=\"https://static001.geekbang.org/resource/image/fb/70/fb11e6941fc471c734d0b85c25cc5370.jpg?wh=1484*1340\" alt=\"\"></p><p><strong>第三步：中台归类，根据领域模型设计微服务。</strong></p><p>完成中台业务建模后，我们就有了下面这张图。从这张图中我们可以看到总共构建了多少个中台，中台下面有哪些领域模型，哪些中台是通用中台，哪些中台是核心中台，中台的基本信息等等，都一目了然。你根据中台下的领域模型就可以设计微服务了。</p><p><img src=\"https://static001.geekbang.org/resource/image/a8/c5/a88e9695c7198a1f88f537564ada0bc5.jpg?wh=1210*1360\" alt=\"\"></p><h2>重构过程中的领域对象</h2><p>上面主要是从聚合的角度来描述中台业务模型的重组，是相对高阶的业务模块的重构。业务模型重构和聚合重组，往往会带来领域对象和业务行为的变化。下面我带你了解一下，在领域模型重组过程中，发生在更底层的领域对象的活动。</p><p>我们还是以客户为例来讲述。由于对象过多，我只选取了部分领域对象和业务行为。</p><p>传统核心客户领域模型重构之前，包含个人、团体和评级三个聚合，每个聚合内部都有自己的聚合根、实体、方法和领域服务等。</p><p><img src=\"https://static001.geekbang.org/resource/image/ae/3c/ae33bc5c0cda28740363e39edbc1e53c.jpg?wh=1212*788\" alt=\"\"></p><p>互联网电商客户领域模型重构前包含个人和积分两个聚合，每个聚合包含了自己的领域对象、方法和领域服务等。</p><p><img src=\"https://static001.geekbang.org/resource/image/d0/7d/d0f8fb06797a5983c7fd00d59d8be57d.jpg?wh=1212*498\" alt=\"\"></p><p>传统核心和互联网电商客户领域模型重构成客户中台后，建立了个人、团体和评级积分三个领域模型。其中个人领域模型有个人聚合，团体领域模型有团体聚合，评级积分领域模型有评级和积分两个聚合。这些领域模型的领域对象来自原来的领域模型，但积分评级是重组后的领域模型，它们原来的聚合会带着各自的领域对象，加入到新的领域模型中。</p><p>这里还要注意：部分领域对象可能会根据新的业务要求，从原来的聚合中分离，重组到其它聚合。新领域模型的领域对象，比如实体、领域服务等，在重组后可能还会根据新的业务场景和需求进行代码重构。</p><p><img src=\"https://static001.geekbang.org/resource/image/f1/c4/f1b2e04d38ba13d8c318aa3539604bc4.jpg?wh=1202*904\" alt=\"\"></p><h2>总结</h2><p>今天我们一起讨论了传统企业中台数字化转型，在面对多个不同渠道应用重复建设时，如何用DDD领域建模的思想来构建中台业务模型。中台业务建模有自顶向下和自底向上两种策略，这两种策略有自己的适用场景，你需要结合自己公司的情况选择合适的策略。</p><p>其实呢，中台业务模型的重构过程，也是微服务架构演进的过程。业务边界即微服务边界，业务边界做好了，微服务的边界自然就会很好。</p><h2>思考题</h2><p>思考一下你公司的应用系统建设现状，是否存在重复建设的问题？你能否借用今天学到的方法来尝试构建中台呢？</p><p>欢迎留言分享，你也可以把今天所学分享给身边的朋友，邀请他一同交流、打卡。</p><p></p>","comments":[{"had_liked":false,"id":149413,"user_name":"深山小书童","can_delete":false,"product_type":"c1","uid":1079593,"ip_address":"","ucode":"6B5DD3B3D84534","user_header":"https://static001.geekbang.org/account/avatar/00/10/79/29/a90cf777.jpg","comment_is_top":false,"comment_ctime":1573213793,"is_pvip":true,"replies":[{"id":"57438","content":"其实DDD的核心思想是在于划分领域边界从而来解耦。我认为领域模型才是DDD在微服务设计的关键，只有构建了边界清晰的领域模型的边界，才有可能设计出高质量的微服务。在建立领域模型后，微服务内部可以用DDD战术设计方法，传统的开发方法也不是不可以，有时候在性能方面表现更优秀。<br>后面我有一节专门讲解这些对象之间是如何协作的，另外也有一讲来介绍DDD的代码目录结构和模型。","user_name":"作者回复","comment_id":149413,"uid":"1316268","ip_address":"","utype":1,"ctime":1573219904,"user_name_real":"渔"}],"discussion_count":10,"race_medal":0,"score":"190551774817","product_id":100037301,"comment_content":"接触ddd的概念也蛮多年了，确实如老师所说，微服务的兴起让大家有自然的想起了ddd。但是要将ddd落地，不知道在代码层面如何去分层是最让人困扰的。以java web开发为例，controller，dao，service怎么和应用服务，领域服务，聚合等对应起来呢？老师能不能展示一下框架里面怎么去组织这些概念，这样作为研发人员会比较好理解。ddd的经典三本书里面就是缺少这种东西，互联网小厂由于能力有限很难将其理解和落地。一直期待一门课从代码层面开始自底向上来讲解ddd，反而会更好理解。一直反复讲ddd的好处，感觉浮在表面。","like_count":44,"discussions":[{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":473854,"discussion_content":"其实DDD的核心思想是在于划分领域边界从而来解耦。我认为领域模型才是DDD在微服务设计的关键，只有构建了边界清晰的领域模型的边界，才有可能设计出高质量的微服务。在建立领域模型后，微服务内部可以用DDD战术设计方法，传统的开发方法也不是不可以，有时候在性能方面表现更优秀。\n后面我有一节专门讲解这些对象之间是如何协作的，另外也有一讲来介绍DDD的代码目录结构和模型。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573219904,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1213325,"avatar":"https://static001.geekbang.org/account/avatar/00/12/83/8d/03cac826.jpg","nickname":"徐李","note":"","ucode":"41550F6CA1E112","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":539250,"discussion_content":"我相信层主的意思可能是说我们这些已经熟悉了多年mvc分层开发的人员，如何或者说是通过怎样的路径 来更好的理解DDD的具体逻辑。\n\n作者的回答也还是在将理论，可能不利于我们的理解，理论是一大堆了，但还是不知道怎么落地。","likes_number":4,"is_delete":false,"is_hidden":false,"ctime":1639647936,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1103158,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/UiaD5UrUHqcPVl2vtTd2O43pNM1paR6VQh6cJYqfRMbH40G13SajGxaPBib2K5sib8oSnhDwWK5Yb2o8AwD2iaGIHQ/132","nickname":"Geek_1d285c","note":"","ucode":"94492BA807612E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":50205,"discussion_content":"有落地代码结合学习的话会更好对于研发者来说。希望老师能开一节课来讲讲代码","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1573692959,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1165455,"avatar":"https://static001.geekbang.org/account/avatar/00/11/c8/8f/e13a6552.jpg","nickname":"polk","note":"","ucode":"1B6E948BA4DFAF","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":386526,"discussion_content":"感觉浮在表面,你说的好克制，浏览了一遍，就是忽悠人的感觉","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1627628109,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1258589,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIBicEibaY3wha6ibzQATjIq4dvbtPoP0vMicasl52MgfjicKQFOdibVViaDnBpWt6wtcOhxFx5emiajUXpZg/132","nickname":"zqnba","note":"","ucode":"20000DAD8C92F1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":341707,"discussion_content":"同意留言的观点。既有概念和原则，又有代码和实现，才能帮助读者更好的理解和学习DDD。而且落地DDD的过程中，遇到的很多问题其实是在如何组织代码，如何把逻辑放在相应的地方。这过程中肯定会有很多取舍，考量。希望能多看到这些东西在课程里面。谢谢老师。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1610502376,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1108505,"avatar":"https://static001.geekbang.org/account/avatar/00/10/ea/19/14018371.jpg","nickname":"瓜瓜","note":"","ucode":"F90A5135A9BB4B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":47439,"discussion_content":"领域模型才是DDD在微服务设计的关键，只有构建了边界清晰的领域模型的边界，才有可能设计出高质量的微服务","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1573351797,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2618630,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/4RIp8ImmfZQYUicbXiavDNGrMNALc6taYoVAZLRRwc3PXwJBk0UHvu1oPE2RRD6icupNjpbE9TpkeODZn2NPJSc5g/132","nickname":"Geek_9145d5","note":"","ucode":"B35CA8B1818466","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":570109,"discussion_content":"同意","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1651666600,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1512642,"avatar":"https://static001.geekbang.org/account/avatar/00/17/14/c2/46ebe3a0.jpg","nickname":"侧耳倾听","note":"","ucode":"5BF2A2440B54F0","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":555322,"discussion_content":"Dao层作为基础层看待，Service作为领域层，Controller看做应用层，如果是前后端分离，Vue等作为展示层","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1646869907,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1336475,"avatar":"https://static001.geekbang.org/account/avatar/00/14/64/9b/0b578b08.jpg","nickname":"J.Smile","note":"","ucode":"C4D98DFDBF7584","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":391814,"discussion_content":"其实讲的思路很清晰的了，理念很重要，这节课也说清楚了理念和一定的实操。只不过可能很多人关注在代码层面，但没有理念，代码落地也没有指导，代码落地本身不是难点。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1630640717,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1620379,"avatar":"https://wx.qlogo.cn/mmopen/vi_32/ibkqXUZhw2aqsVSSZxib5NnIEtiaiaWyDv6zmgmwD0XnzOFrnCRj7hbDw2XcCV6DrL7rFszATlEnlHzCZkCqRljb2Q/132","nickname":"HZI.HUI","note":"","ucode":"D3468962B5E1F6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":386371,"discussion_content":"+1，同意","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1627552035,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":149552,"user_name":"墨名次","can_delete":false,"product_type":"c1","uid":1330267,"ip_address":"","ucode":"926EDC57291C09","user_header":"https://static001.geekbang.org/account/avatar/00/14/4c/5b/5499d6e6.jpg","comment_is_top":false,"comment_ctime":1573271743,"is_pvip":false,"replies":[{"id":"57470","content":"比喻很形象！","user_name":"作者回复","comment_id":149552,"uid":"1316268","ip_address":"","utype":1,"ctime":1573277097,"user_name_real":"渔"}],"discussion_count":3,"race_medal":0,"score":"108947454143","product_id":100037301,"comment_content":"DDD是中台、微服务的产品经理","like_count":26,"discussions":[{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":473899,"discussion_content":"比喻很形象！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573277097,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1108505,"avatar":"https://static001.geekbang.org/account/avatar/00/10/ea/19/14018371.jpg","nickname":"瓜瓜","note":"","ucode":"F90A5135A9BB4B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":47440,"discussion_content":"好的开发首先是一个好的需求分析师，所有的技术，包括底层技术背景都是需求","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1573351950,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2062472,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eqXGKRyFDH2ia15hV4PeRfgibgb1djXGNibmU4LlMUK5hlHkWpqBpwmEXJ0HBZ2nAN0doQiaGROA5GIhg/132","nickname":"小八哥","note":"","ucode":"CE08853995218E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":552190,"discussion_content":"人才","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1645341859,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":149343,"user_name":"小毅","can_delete":false,"product_type":"c1","uid":1016799,"ip_address":"","ucode":"5651C740D68038","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/hg9Tsg2iaBeG6Q5mxiczjw1ph0OvhKziblEIiaOxg4gwQ0Dgia7Fw7pDQ0mM8AL5SJAm2Yavk1RmBJrFd9jKPBQRkOw/132","comment_is_top":false,"comment_ctime":1573198484,"is_pvip":false,"replies":[{"id":"57419","content":"这一节信息量比较大，后面小的案例里有介绍。","user_name":"作者回复","comment_id":149343,"uid":"1316268","ip_address":"","utype":1,"ctime":1573203936,"user_name_real":"渔"}],"discussion_count":1,"race_medal":0,"score":"87472544404","product_id":100037301,"comment_content":"建议老师，多讲讲怎么做的领域、聚合根、实体的划分，讲讲实施层面怎么做的？而不是直接抛出你最终的结果，我觉得这才是要学DDD的精髓。看到现在知道了很多名词，但是依然并不知道DDD具体如何实施，具体场景下拿什么依据作为划分和聚类的参考~<br><br>建议对于文章中的例子，比如您举的保险类例子，可以多补充些业务背景，这样才能在战术层面搞明白实施和落地的流程，而不是悬浮在半空中~","like_count":21,"discussions":[{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":473823,"discussion_content":"这一节信息量比较大，后面小的案例里有介绍。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573203936,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":150040,"user_name":"蜗牛慢慢爬","can_delete":false,"product_type":"c1","uid":1666095,"ip_address":"","ucode":"6591A58A582BE0","user_header":"https://static001.geekbang.org/account/avatar/00/19/6c/2f/8086c22a.jpg","comment_is_top":false,"comment_ctime":1573452037,"is_pvip":false,"replies":[{"id":"57727","content":"这一节的内容有点多，没有做过细的分析，你可以看下一节哈。第12节有详细的领域建模分析过程。","user_name":"作者回复","comment_id":150040,"uid":"1316268","ip_address":"","utype":1,"ctime":1573455045,"user_name_real":"渔"}],"discussion_count":1,"race_medal":0,"score":"53113059589","product_id":100037301,"comment_content":"看了11个课程了，最大的疑问就是怎么划分？ 老师每次都拿出你已经划分好的领域，感觉很空泛，领会不到精髓","like_count":12,"discussions":[{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":474045,"discussion_content":"这一节的内容有点多，没有做过细的分析，你可以看下一节哈。第12节有详细的领域建模分析过程。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573455045,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":149649,"user_name":"Scott","can_delete":false,"product_type":"c1","uid":1214008,"ip_address":"","ucode":"7C5ACEEE8A84FB","user_header":"https://static001.geekbang.org/account/avatar/00/12/86/38/77d04aa8.jpg","comment_is_top":false,"comment_ctime":1573303852,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"40228009516","product_id":100037301,"comment_content":"很多人提到代码，其实代码方面我觉得可以看看 Domain modeling made functional 这书。","like_count":9,"discussions":[{"author":{"id":1228290,"avatar":"https://static001.geekbang.org/account/avatar/00/12/be/02/43202976.jpg","nickname":"w 🍍","note":"","ucode":"F2386C971EC58B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":564865,"discussion_content":"好像是函数式编程的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1650343316,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2201418,"avatar":"","nickname":"Geek9338","note":"","ucode":"5573C1198EFA52","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":310292,"discussion_content":"有中文版吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1601734736,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":149423,"user_name":"祥敏","can_delete":false,"product_type":"c1","uid":1205328,"ip_address":"","ucode":"466BFA980D9A37","user_header":"https://static001.geekbang.org/account/avatar/00/12/64/50/a54f0907.jpg","comment_is_top":false,"comment_ctime":1573214929,"is_pvip":false,"replies":[{"id":"57447","content":"DDD用于微服务设计的关键就是先建立领域模型，有了边界清晰的领域模型，才能设计出高质量的微服务。在微服务设计时不能脱离领域模型来谈微服务。它们两者之间是必不可少的前后贯通的关系，可能开发人员只关心用DDD来做微服务的开发，并不关心领域建模。领域建模就是DDD的战略实战。而且这种战略设计和分析过程比战术设计更重要。","user_name":"作者回复","comment_id":149423,"uid":"1316268","ip_address":"","utype":1,"ctime":1573220429,"user_name_real":"渔"}],"discussion_count":2,"race_medal":0,"score":"18753084113","product_id":100037301,"comment_content":"看来要公布Github的仓库了，要不怎么是实践篇@@@","like_count":4,"discussions":[{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":473857,"discussion_content":"DDD用于微服务设计的关键就是先建立领域模型，有了边界清晰的领域模型，才能设计出高质量的微服务。在微服务设计时不能脱离领域模型来谈微服务。它们两者之间是必不可少的前后贯通的关系，可能开发人员只关心用DDD来做微服务的开发，并不关心领域建模。领域建模就是DDD的战略实战。而且这种战略设计和分析过程比战术设计更重要。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573220429,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1108505,"avatar":"https://static001.geekbang.org/account/avatar/00/10/ea/19/14018371.jpg","nickname":"瓜瓜","note":"","ucode":"F90A5135A9BB4B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":47438,"discussion_content":"战略设计的分析实战是构建的方向","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573351727,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":222181,"user_name":"日月星辰","can_delete":false,"product_type":"c1","uid":1796332,"ip_address":"","ucode":"4E9F48153B2D8B","user_header":"https://static001.geekbang.org/account/avatar/00/1b/68/ec/eb0ebbb6.jpg","comment_is_top":false,"comment_ctime":1590713841,"is_pvip":false,"replies":[{"id":"81956","content":"中台是偏业务架构的，一个中台可能会有多个限界上下文，一个限界上下文可以构建一个领域模型，一个领域模型可以设计为一个微服务。当然在进行中台领域模型设计的时候，会考虑通用业务能力的复用。中台会完成业务建模，然后才是微服务按照中台的领域模型完成落地，它们是两个不同阶段的东西，最终与数据库交互的是微服务。","user_name":"作者回复","comment_id":222181,"uid":"1316268","ip_address":"","utype":1,"ctime":1590741736,"user_name_real":"渔"}],"discussion_count":5,"race_medal":0,"score":"14475615729","product_id":100037301,"comment_content":"感觉这里说的中台就是各个微服务嘛，之前一直觉得中台是一些通用业务的集合，是不会跟数据库直接交互的。那现在这样理解就是说中台也可以跟数据库直接交互了吗？","like_count":3,"discussions":[{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":496704,"discussion_content":"中台是偏业务架构的，一个中台可能会有多个限界上下文，一个限界上下文可以构建一个领域模型，一个领域模型可以设计为一个微服务。当然在进行中台领域模型设计的时候，会考虑通用业务能力的复用。中台会完成业务建模，然后才是微服务按照中台的领域模型完成落地，它们是两个不同阶段的东西，最终与数据库交互的是微服务。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1590741736,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2329181,"avatar":"https://static001.geekbang.org/account/avatar/00/23/8a/5d/9f146e48.jpg","nickname":"Monday","note":"","ucode":"33C597731B7AFA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":540510,"discussion_content":"DDD是基于企业业务划分问题域，确定边界清晰的领域模型（战略设计）；然后再根据领域模型指导微服务设计（战术设计）","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1640073117,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2419206,"avatar":"","nickname":"Geek_c75a84","note":"","ucode":"5CB77755ED05B9","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":348446,"discussion_content":"说的一点都不通俗易懂","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1612577129,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2399617,"avatar":"https://static001.geekbang.org/account/avatar/00/24/9d/81/085ae5fa.jpg","nickname":"钟hao","note":"","ucode":"3C7399C4DA52E9","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":340375,"discussion_content":"中台就是理解为很多细小的微服务的中心化，一个新的功能出来，可以服用细小的微服务通过组装在一起实现快速的开发，我们要做的是怎么去划分这些细小的微服务的边界，通过DDD思想帮助我们可以更好地找出领域服务上下文的限界","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1609990192,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2246686,"avatar":"https://static001.geekbang.org/account/avatar/00/22/48/1e/883fd1d5.jpg","nickname":"Jacob Chen","note":"","ucode":"329B92B53F12B8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":320639,"discussion_content":"太抽象！！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1604418356,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":190851,"user_name":"信了","can_delete":false,"product_type":"c1","uid":1368648,"ip_address":"","ucode":"EA188A1DD1D390","user_header":"https://static001.geekbang.org/account/avatar/00/14/e2/48/6c066714.jpg","comment_is_top":false,"comment_ctime":1584699383,"is_pvip":false,"replies":[{"id":"73335","content":"首先采用微服务后，前后端就分离了，前端面向应用，后端主要是领域模型和业务逻辑。<br>前端主要是面向用户的一些页面操作或者业务流程，不同渠道的用户可能会需求和操作要求不一样，这一部分的变化就由前台应用来控制。后端主要实现业务逻辑和业务管控要求，只有涉及到业务逻辑变化的时候，才会调整中台和后台的业务逻辑。前台需求的变化，在前台调整完成，业务逻辑相关的需求变化在中台和后台完成，他们之间还有应用层的应用服务的编排，进一步隔离前台需求对中台和后台业务逻辑的影响。","user_name":"作者回复","comment_id":190851,"uid":"1316268","ip_address":"","utype":1,"ctime":1584707602,"user_name_real":"渔"}],"discussion_count":2,"race_medal":0,"score":"14469601271","product_id":100037301,"comment_content":"前端个性能力归前端，后端管理能力归后台。建立前、中、后台边界清晰，融合协作的企业级可复用的业务模型。文中所说前端个性能力具体是什么？后端管理能力又是什么？前、中、后台边界清晰，这三个的边界怎么定义的？越来越模糊了，求解答？？","like_count":3,"discussions":[{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":488067,"discussion_content":"首先采用微服务后，前后端就分离了，前端面向应用，后端主要是领域模型和业务逻辑。\n前端主要是面向用户的一些页面操作或者业务流程，不同渠道的用户可能会需求和操作要求不一样，这一部分的变化就由前台应用来控制。后端主要实现业务逻辑和业务管控要求，只有涉及到业务逻辑变化的时候，才会调整中台和后台的业务逻辑。前台需求的变化，在前台调整完成，业务逻辑相关的需求变化在中台和后台完成，他们之间还有应用层的应用服务的编排，进一步隔离前台需求对中台和后台业务逻辑的影响。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584707602,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1368648,"avatar":"https://static001.geekbang.org/account/avatar/00/14/e2/48/6c066714.jpg","nickname":"信了","note":"","ucode":"EA188A1DD1D390","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":318645,"discussion_content":"在问一下，哪中台和后台的区分呢，他们的分界限又在哪里，各自扮演着什么角色","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1603796617,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":163617,"user_name":"达文西","can_delete":false,"product_type":"c1","uid":1398824,"ip_address":"","ucode":"01C1063F23D634","user_header":"https://static001.geekbang.org/account/avatar/00/15/58/28/c86340ca.jpg","comment_is_top":false,"comment_ctime":1576756069,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"14461657957","product_id":100037301,"comment_content":"代码可以参考这个 https:&#47;&#47;github.com&#47;JoeCao&#47;qbike ","like_count":3,"discussions":[{"author":{"id":1848364,"avatar":"https://static001.geekbang.org/account/avatar/00/1c/34/2c/cd158db1.jpg","nickname":"小刘","note":"","ucode":"F50BCF1E9D285A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":400079,"discussion_content":"这项目不对吧","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1633159080,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2399617,"avatar":"https://static001.geekbang.org/account/avatar/00/24/9d/81/085ae5fa.jpg","nickname":"钟hao","note":"","ucode":"3C7399C4DA52E9","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":340426,"discussion_content":"这项目不行","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1610002582,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":328856,"user_name":"Steven","can_delete":false,"product_type":"c1","uid":1253652,"ip_address":"","ucode":"3FE64459842015","user_header":"https://static001.geekbang.org/account/avatar/00/13/21/14/423a821f.jpg","comment_is_top":false,"comment_ctime":1640919703,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5935886999","product_id":100037301,"comment_content":"请问老师，传统客户领域的个人聚合中的InquiryPersonInfo 命令，在重组后不见了，是不需要了还是放到别的地方了？","like_count":1},{"had_liked":false,"id":281473,"user_name":"Jerry","can_delete":false,"product_type":"c1","uid":2304867,"ip_address":"","ucode":"5F7DCD6515393B","user_header":"https://static001.geekbang.org/account/avatar/00/23/2b/63/d627d2cf.jpg","comment_is_top":false,"comment_ctime":1614759248,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5909726544","product_id":100037301,"comment_content":"请教如何划分子域（限界上下文），如果是利用事件风暴然后对聚合进行划分，那么什么样的聚合应该划分在同一个限界上下文呢?","like_count":1},{"had_liked":false,"id":154958,"user_name":"瓜瓜","can_delete":false,"product_type":"c1","uid":1108505,"ip_address":"","ucode":"F90A5135A9BB4B","user_header":"https://static001.geekbang.org/account/avatar/00/10/ea/19/14018371.jpg","comment_is_top":false,"comment_ctime":1574604931,"is_pvip":false,"replies":[{"id":"59515","content":"聚合根内会定义引用的实体，在聚合根内部直接使用引用的实体属性或者方法就可以了。<br>这些实体的方法会被封装成领域服务或者应用服务。外界不需要关心这些实体内的属性或者方法实现了。","user_name":"作者回复","comment_id":154958,"uid":"1316268","ip_address":"","utype":1,"ctime":1574651287,"user_name_real":"渔"}],"discussion_count":1,"race_medal":0,"score":"5869572227","product_id":100037301,"comment_content":"聚合内的实体都是通过聚合根来进行访问的，这个有没有相关的例子，感谢老师","like_count":1,"discussions":[{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":475623,"discussion_content":"聚合根内会定义引用的实体，在聚合根内部直接使用引用的实体属性或者方法就可以了。\n这些实体的方法会被封装成领域服务或者应用服务。外界不需要关心这些实体内的属性或者方法实现了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574651287,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":150910,"user_name":"abc-web","can_delete":false,"product_type":"c1","uid":1371804,"ip_address":"","ucode":"DE3B873863EFF9","user_header":"https://static001.geekbang.org/account/avatar/00/14/ee/9c/abb7bfe3.jpg","comment_is_top":false,"comment_ctime":1573625750,"is_pvip":false,"replies":[{"id":"58041","content":"是这样的。","user_name":"作者回复","comment_id":150910,"uid":"1316268","ip_address":"","utype":1,"ctime":1573633820,"user_name_real":"渔"}],"discussion_count":1,"race_medal":0,"score":"5868593046","product_id":100037301,"comment_content":"欧老师好，我说下我对ddd在中台建设中所起作用的看法，不当之处请指点；ddd为中台所涉及到的领域模型梳理提供了方法指引，并对微服务的划分提供了参考标准；但有了这些对一个业务中台的建设还不是完备的；因为中台提供了业务能力服用层，也就是说抽象出了可服用的公共能力，但每个使用该能力的场景是不一样的，这样在该能力上的定制需求的满足是就出现了，这就需要中台有扩展能力，来适应这些需求；所以中台建设不单是微服务的合理拆分，可扩展能力的架构设计也是中台建设的关键；","like_count":1,"discussions":[{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":474307,"discussion_content":"是这样的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573633820,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":149786,"user_name":"若水","can_delete":false,"product_type":"c1","uid":1303418,"ip_address":"","ucode":"575F2A2F579B0B","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKeqZb7U4s6SZHXz1Vv2u8iaHibZeZ9Ndgibr2nT9BS6Z4wiao3j8Ya5O8FK1SnxxyagDjvsMYaauWficA/132","comment_is_top":false,"comment_ctime":1573377983,"is_pvip":false,"replies":[{"id":"57619","content":"理论上一个限界上下文对应一个微服务。具体拆多细根据企业的微服务的运维能力，如果有云平台，自动化发布和运维工具以及监控等工具，可以按照限界上下文大小来拆分。如果不具备这些能力，建议还是粗一点比较好。<br>你说的客户应该是面向个人的客户吧。传统有两类用户，一种是内部用户，另外一部分是个人客户，其中一部分个人客户也是用户。个人客户和用户会有一部分重叠，设计的时候按照客户和用户两个不同的集合来设计，但是部分个人用户来源于个人客户，用户可以引用个人客户的数据。","user_name":"作者回复","comment_id":149786,"uid":"1316268","ip_address":"","utype":1,"ctime":1573386631,"user_name_real":"渔"}],"discussion_count":2,"race_medal":0,"score":"5868345279","product_id":100037301,"comment_content":"老师好，我有两个疑问。①、按以上流程分析微服务的划分感觉粒度很小。一个微服务就是一个工程，项目粒度如何决定？②客户也是用户的一种，为什么客户和用户在两个微服务？","like_count":1,"discussions":[{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":473980,"discussion_content":"理论上一个限界上下文对应一个微服务。具体拆多细根据企业的微服务的运维能力，如果有云平台，自动化发布和运维工具以及监控等工具，可以按照限界上下文大小来拆分。如果不具备这些能力，建议还是粗一点比较好。\n你说的客户应该是面向个人的客户吧。传统有两类用户，一种是内部用户，另外一部分是个人客户，其中一部分个人客户也是用户。个人客户和用户会有一部分重叠，设计的时候按照客户和用户两个不同的集合来设计，但是部分个人用户来源于个人客户，用户可以引用个人客户的数据。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573386631,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2329181,"avatar":"https://static001.geekbang.org/account/avatar/00/23/8a/5d/9f146e48.jpg","nickname":"Monday","note":"","ucode":"33C597731B7AFA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":540524,"discussion_content":"理解了   用户是内部用户    客户是个人客户   这两部分会有一部分重叠  ","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1640075096,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":358813,"user_name":"加多","can_delete":false,"product_type":"c1","uid":1101824,"ip_address":"北京","ucode":"B2192A2D58C444","user_header":"https://static001.geekbang.org/account/avatar/00/10/d0/00/9d05af66.jpg","comment_is_top":false,"comment_ctime":1664810867,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1664810867","product_id":100037301,"comment_content":"老师你好，请问战略设计和战术设计的产物是什么？比如战略设计的产物是一张限界上下文图（包含领域细分和领域边界的图）？战术设计产物是包含比如领域对象、值对象、聚合跟、领域服务的类图？","like_count":0},{"had_liked":false,"id":344437,"user_name":"Jacqueline 牛晓莉","can_delete":false,"product_type":"c1","uid":2981486,"ip_address":"","ucode":"9AFBBF755019E8","user_header":"https://static001.geekbang.org/account/avatar/00/2d/7e/6e/1b84d4a1.jpg","comment_is_top":false,"comment_ctime":1651555928,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1651555928","product_id":100037301,"comment_content":"我本人是业务出身， 读欧老师的课， 有醍醐灌顶之效果。 ","like_count":0},{"had_liked":false,"id":338222,"user_name":"无名","can_delete":false,"product_type":"c1","uid":1315541,"ip_address":"","ucode":"346EC4B30294F6","user_header":"https://static001.geekbang.org/account/avatar/00/14/12/d5/38764102.jpg","comment_is_top":false,"comment_ctime":1647357732,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1647357732","product_id":100037301,"comment_content":"老师能不能着重讲下防腐层的设计，在系统建设过程中，我们经常要对接很多的外部系统，以信用保险为例，上游我们需要对接不同的资产平台，下游我们要对接不同的资金方(银行)，特别每个银行的信贷流程自己对账方式很难以标准化。我们的系统怎么分别对上游系统和下游系统进行防腐(代码层面防腐层应该做在分层架构的哪一层)","like_count":0},{"had_liked":false,"id":327674,"user_name":"危观添 Tim.Ngai","can_delete":false,"product_type":"c1","uid":2857087,"ip_address":"","ucode":"0D08283D9C580A","user_header":"https://static001.geekbang.org/account/avatar/00/2b/98/7f/470429f9.jpg","comment_is_top":false,"comment_ctime":1640228358,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1640228358","product_id":100037301,"comment_content":"如何看待用户与客户之间的领域划分？是否可以合并，还是说客户是属于业务领域的对象、实体，所以形成单独的业务域？","like_count":0},{"had_liked":false,"id":327342,"user_name":"Monday","can_delete":false,"product_type":"c1","uid":2329181,"ip_address":"","ucode":"33C597731B7AFA","user_header":"https://static001.geekbang.org/account/avatar/00/23/8a/5d/9f146e48.jpg","comment_is_top":false,"comment_ctime":1640072834,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1640072834","product_id":100037301,"comment_content":"老师咨询一下我们现在项目上的疑问<br>比如电商库存中心设计三级库存业务逻辑中实体仓向逻辑仓自动分货、手动分货，逻辑仓向触点仓自动分货手动分货，三级库存更新设计业务（补货入库、调拨入&#47;出库）是运营管理人员直接操作中台？还是业务中台将能力以接口的形式对外暴露？","like_count":0},{"had_liked":false,"id":323159,"user_name":"马以","can_delete":false,"product_type":"c1","uid":1344431,"ip_address":"","ucode":"3FEA06CA14DE28","user_header":"https://static001.geekbang.org/account/avatar/00/14/83/af/1cb42cd3.jpg","comment_is_top":false,"comment_ctime":1637746653,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1637746653","product_id":100037301,"comment_content":"我以为实战篇会咔咔把这些抽象的逻辑映射到具体的代码中，然后一一对应起来，看来是我想多了😄","like_count":0},{"had_liked":false,"id":320346,"user_name":"橙子寒","can_delete":false,"product_type":"c1","uid":2473860,"ip_address":"","ucode":"C9C50E5D82B63F","user_header":"https://static001.geekbang.org/account/avatar/00/25/bf/84/39327967.jpg","comment_is_top":false,"comment_ctime":1636267661,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1636267661","product_id":100037301,"comment_content":"怎么领域类型突然多出来一个 命令，作用是什么","like_count":0},{"had_liked":false,"id":312249,"user_name":"流浪的猫","can_delete":false,"product_type":"c1","uid":1116566,"ip_address":"","ucode":"5B337A7732330C","user_header":"https://static001.geekbang.org/account/avatar/00/11/09/96/fa1ea140.jpg","comment_is_top":false,"comment_ctime":1631704480,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1631704480","product_id":100037301,"comment_content":"hi，老师，咨询个问题，看本文提到传统领域和互联网领域的区别。我们实际也面临这个情况：<br>以订单为例（其他很多业务都涉及这种情况）<br>1、传统领域（2B）有订单，订单业务复杂，涉及的数据字段也很多，业务中也会涉及到复杂报价、规则引擎等业务<br>2、互联网领域（2C）也有订单，业务很简单，涉及的数据字段，业务不会涉及复杂报价、规则则引擎等业务<br><br>对于这种情况订单怎么合并？业务逻辑、对字段的处理等都不一致。还是说需要保持独立（两个订单）？","like_count":0},{"had_liked":false,"id":287976,"user_name":"lq","can_delete":false,"product_type":"c1","uid":1112815,"ip_address":"","ucode":"1C9D741B906403","user_header":"https://static001.geekbang.org/account/avatar/00/10/fa/ef/9d3fcb40.jpg","comment_is_top":false,"comment_ctime":1618237697,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1618237697","product_id":100037301,"comment_content":"上面的微服务是不是拆分的太细？比如用户中台，拆分了用户&#47;权限&#47;认证三个微服务？","like_count":0},{"had_liked":false,"id":282614,"user_name":"Mew151","can_delete":false,"product_type":"c1","uid":1002201,"ip_address":"","ucode":"D4793F5874F345","user_header":"https://static001.geekbang.org/account/avatar/00/0f/4a/d9/75dd7cf9.jpg","comment_is_top":false,"comment_ctime":1615341047,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1615341047","product_id":100037301,"comment_content":"想问一下，以文中的客户为例，有了客户中台后，之前的传统核心和互联网电商的个人聚合数据是不是也在客户中台存储了，然后有个标志位标识是哪个渠道的应用？","like_count":0},{"had_liked":false,"id":271056,"user_name":"Geek_5233bb","can_delete":false,"product_type":"c1","uid":2124095,"ip_address":"","ucode":"8D2F1C55441555","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/pjRJ86Qvcu640Xe9zzRA2M9FFoxgaV5fCxIVlRJlzwBa3XSgicpECjyyyZj73br8hZF8cvZW8pX5M3ibj0dPGz7w/132","comment_is_top":false,"comment_ctime":1609384392,"is_pvip":false,"replies":[{"id":"98690","content":"中台的核心思想就是企业级业务能力复用。如果领域模型之间的差异不大，建议尽量沉淀出一套。","user_name":"作者回复","user_name_real":"欧创新","uid":"1316268","ctime":1609985537,"ip_address":"","comment_id":271056,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1609384392","product_id":100037301,"comment_content":"一个公司涉及的业务是跨领域的，中台是建设一套还是多套呢？比如电商和出行两个领域的订单中台，是沉淀出同一套还是按领域沉淀两套呢？","like_count":0,"discussions":[{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":512830,"discussion_content":"中台的核心思想就是企业级业务能力复用。如果领域模型之间的差异不大，建议尽量沉淀出一套。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1609985537,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":269051,"user_name":"有爱有波哥","can_delete":false,"product_type":"c1","uid":1464493,"ip_address":"","ucode":"DD9A023563151F","user_header":"https://static001.geekbang.org/account/avatar/00/16/58/ad/6abb57c4.jpg","comment_is_top":false,"comment_ctime":1608509600,"is_pvip":false,"replies":[{"id":"97753","content":"由于个人和团队属于两个不同的聚合中，不同聚合的实体之间不会产生直接依赖和引用，所以应该设计两个address实体。","user_name":"作者回复","user_name_real":"欧创新","uid":"1316268","ctime":1608709754,"ip_address":"","comment_id":269051,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1608509600","product_id":100037301,"comment_content":"老师，例如，个人adress实体，和团队adress实体，需要构建两个实体吗？<br>","like_count":0,"discussions":[{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":512127,"discussion_content":"由于个人和团队属于两个不同的聚合中，不同聚合的实体之间不会产生直接依赖和引用，所以应该设计两个address实体。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1608709754,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1464493,"avatar":"https://static001.geekbang.org/account/avatar/00/16/58/ad/6abb57c4.jpg","nickname":"有爱有波哥","note":"","ucode":"DD9A023563151F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":336825,"discussion_content":"那相同属性和方法，在复制一遍吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1608710865,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":259745,"user_name":"风","can_delete":false,"product_type":"c1","uid":1077538,"ip_address":"","ucode":"104638BF19B048","user_header":"https://static001.geekbang.org/account/avatar/00/10/71/22/b8c596b6.jpg","comment_is_top":false,"comment_ctime":1604824607,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1604824607","product_id":100037301,"comment_content":"构建中台业务模型的要点总结成一句话就是：“分域建模型，找准基准域，划定上下文，聚合重归类。”","like_count":0},{"had_liked":false,"id":259685,"user_name":"风","can_delete":false,"product_type":"c1","uid":1077538,"ip_address":"","ucode":"104638BF19B048","user_header":"https://static001.geekbang.org/account/avatar/00/10/71/22/b8c596b6.jpg","comment_is_top":false,"comment_ctime":1604810780,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1604810780","product_id":100037301,"comment_content":"构建多业务域的中台业务模型的过程，就是找出同一业务域内所有同类业务的领域模型，对比分析域内领域模型和聚合的差异和共同点，打破原有的模型，完成新的中台业务模型重组或归并的过程。","like_count":0},{"had_liked":false,"id":221060,"user_name":"古腪","can_delete":false,"product_type":"c1","uid":1207955,"ip_address":"","ucode":"24F19B24CF43BD","user_header":"https://static001.geekbang.org/account/avatar/00/12/6e/93/1ebfb1ca.jpg","comment_is_top":false,"comment_ctime":1590395161,"is_pvip":false,"replies":[{"id":"81512","content":"后面的事件风暴那一节会讲如何领域建模。","user_name":"作者回复","user_name_real":"渔","uid":"1316268","ctime":1590398046,"ip_address":"","comment_id":221060,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1590395161","product_id":100037301,"comment_content":"关于建模，有没有啥好的办法啊，感觉如果不了解业务的话很难建立一个好的模型","like_count":0,"discussions":[{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":496315,"discussion_content":"后面的事件风暴那一节会讲如何领域建模。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1590398046,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":220733,"user_name":"剑八","can_delete":false,"product_type":"c1","uid":1297630,"ip_address":"","ucode":"0A09F41DB8A4E7","user_header":"https://static001.geekbang.org/account/avatar/00/13/cc/de/e28c01e1.jpg","comment_is_top":false,"comment_ctime":1590316263,"is_pvip":true,"replies":[{"id":"81515","content":"看看抽象后个人和团体客户领域模型的差异大不，大的话建议分开，不大可以合并。","user_name":"作者回复","user_name_real":"渔","uid":"1316268","ctime":1590401946,"ip_address":"","comment_id":220733,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1590316263","product_id":100037301,"comment_content":"个人客户与团体客户是否可以抽象成一个客户实体<br>这样对于客户我们维护一个实体就可以，并且对于订单上的下单客户我们也是从这个抽象实体做对应关系","like_count":0,"discussions":[{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":496224,"discussion_content":"看看抽象后个人和团体客户领域模型的差异大不，大的话建议分开，不大可以合并。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1590401946,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":206797,"user_name":"小谢同学","can_delete":false,"product_type":"c1","uid":1032544,"ip_address":"","ucode":"E809E6BC470631","user_header":"https://static001.geekbang.org/account/avatar/00/0f/c1/60/fc3689d0.jpg","comment_is_top":false,"comment_ctime":1586936734,"is_pvip":false,"replies":[{"id":"77313","content":"其实在阿里中台是起源于平台的，所以中台也会有平台的一些特点，有时候两者的边界不太好区分。一般做中台的都是大型企业，中台站的高度不太一样，它是站在企业级高度，对外提供企业级整体解决方案，解决共享、复用和重复建设的问题。你说的这个AI，如果作为企业级的可复用平台，应该也可以算是中台。","user_name":"作者回复","user_name_real":"渔","uid":"1316268","ctime":1587002753,"ip_address":"","comment_id":206797,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1586936734","product_id":100037301,"comment_content":"关于中台和平台区别的问题，我想是否在一些场景下两者边界比较模糊，比如说企业要搞ai创新探索，基于视觉，语音等技术的业务全面接入云服务ai paas平台，那这个云供应商所提供这些能力对企业而言是否就意味着“ai中台”？因为它满足我前台的频繁试错需求，同时对于数据存放以及业务流程打通我都可以托管到云服务上，这个理解正确吗？","like_count":0,"discussions":[{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":491907,"discussion_content":"其实在阿里中台是起源于平台的，所以中台也会有平台的一些特点，有时候两者的边界不太好区分。一般做中台的都是大型企业，中台站的高度不太一样，它是站在企业级高度，对外提供企业级整体解决方案，解决共享、复用和重复建设的问题。你说的这个AI，如果作为企业级的可复用平台，应该也可以算是中台。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1587002753,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":190838,"user_name":"信了","can_delete":false,"product_type":"c1","uid":1368648,"ip_address":"","ucode":"EA188A1DD1D390","user_header":"https://static001.geekbang.org/account/avatar/00/14/e2/48/6c066714.jpg","comment_is_top":false,"comment_ctime":1584697429,"is_pvip":false,"replies":[{"id":"73322","content":"一般都还是会通过聚合根的。数据初始化的时候，通过聚合根ID找到PO，然后初始化所有实体。为了保证领域服务内部符合聚合的业务一致性逻辑，不建议脱离聚合根对实体操作。","user_name":"作者回复","user_name_real":"渔","uid":"1316268","ctime":1584698778,"ip_address":"","comment_id":190838,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1584697429","product_id":100037301,"comment_content":"老师，按照文章中说法，实体的方法会封装成领域服务， 而实体会通过聚合根访问的，那么封装领域服务的时候引用实体方法或者属性时是否一定要通过聚合根呢","like_count":0,"discussions":[{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":488066,"discussion_content":"一般都还是会通过聚合根的。数据初始化的时候，通过聚合根ID找到PO，然后初始化所有实体。为了保证领域服务内部符合聚合的业务一致性逻辑，不建议脱离聚合根对实体操作。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584698778,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":188889,"user_name":"新新","can_delete":false,"product_type":"c1","uid":1113354,"ip_address":"","ucode":"9308705EA0F014","user_header":"https://static001.geekbang.org/account/avatar/00/10/fd/0a/14948043.jpg","comment_is_top":false,"comment_ctime":1584430886,"is_pvip":false,"replies":[{"id":"72895","content":"限界上下文是在事件风暴完成后，领域建模过程中形成的，由于这篇领域内容太多，没有细细的讲解限界上下文的分析过程。你可以看一下下一章事件风暴。限界上下文是在分析并找出所有聚合后，将在同一个语义环境下的多个聚合组成限界上下文，其实你也可以理解为完成同一个业务功能模块，它本质上就是子域。","user_name":"作者回复","user_name_real":"渔","uid":"1316268","ctime":1584441575,"ip_address":"","comment_id":188889,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1584430886","product_id":100037301,"comment_content":"一直没有理解限界上下文的作用，今天实践的例子里，哪些子域是限界上下文呢？最后建好的模型里，没有发现限界上下文，难道限界上下文在建模的过程中是可选的？","like_count":0,"discussions":[{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":487558,"discussion_content":"限界上下文是在事件风暴完成后，领域建模过程中形成的，由于这篇领域内容太多，没有细细的讲解限界上下文的分析过程。你可以看一下下一章事件风暴。限界上下文是在分析并找出所有聚合后，将在同一个语义环境下的多个聚合组成限界上下文，其实你也可以理解为完成同一个业务功能模块，它本质上就是子域。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584441575,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":182940,"user_name":"see","can_delete":false,"product_type":"c1","uid":1644634,"ip_address":"","ucode":"F1F1CD1D85DDB5","user_header":"https://static001.geekbang.org/account/avatar/00/19/18/5a/a49a9353.jpg","comment_is_top":false,"comment_ctime":1582893466,"is_pvip":false,"replies":[{"id":"70734","content":"一般的这种查询可以通过数据冗余的方式去做。如果微服务之间的数据关联查询特别多，可以通过读写分离的方式，在两个微服务之外建立一个关联数据的查询库，然后对外提供复杂的查询服务。","user_name":"作者回复","user_name_real":"渔","uid":"1316268","ctime":1582898423,"ip_address":"","comment_id":182940,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1582893466","product_id":100037301,"comment_content":"老师你好，根据你讲诉的微服务拆分，如果将用户及订单拆分为2个微服务，那么他们属于两个数据库的数据，，如果需要查找某用户的订单，需要在订单数据库上做一些用户数据保存，如果筛选条件更为复杂的权限查询的话，这样是不是会给开发带来难道，如果遇到这样的问题是怎么解决的，我现在设计的微服务就是碰到这样说我问题，谢谢","like_count":0,"discussions":[{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":485507,"discussion_content":"一般的这种查询可以通过数据冗余的方式去做。如果微服务之间的数据关联查询特别多，可以通过读写分离的方式，在两个微服务之外建立一个关联数据的查询库，然后对外提供复杂的查询服务。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582898423,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2399617,"avatar":"https://static001.geekbang.org/account/avatar/00/24/9d/81/085ae5fa.jpg","nickname":"钟hao","note":"","ucode":"3C7399C4DA52E9","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":340379,"discussion_content":"读写分离的方式是指用户库和订单库的从库写在同一个库里面，这样在订单微服务里面就可以做到多条件的复杂查询","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1609990380,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":174228,"user_name":"而立","can_delete":false,"product_type":"c1","uid":1047589,"ip_address":"","ucode":"E3274C04BB6E83","user_header":"https://static001.geekbang.org/account/avatar/00/0f/fc/25/20ccf994.jpg","comment_is_top":false,"comment_ctime":1580100261,"is_pvip":false,"replies":[{"id":"68004","content":"按照中台建设的思路当然需要放在整个企业来考虑复用的。你们这几类产品可以根据领域模型，找出领域模型中的共同的聚合，求同存异，来设计可复用的领域模型。","user_name":"作者回复","user_name_real":"渔","uid":"1316268","ctime":1580548158,"ip_address":"","comment_id":174228,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1580100261","product_id":100037301,"comment_content":"欧老师，新年好。<br>我有个问题，我们公司有电商、erp、crm等产品。<br>目前构建的服务，针对电商的不同端做支撑，可以很容易的实现复用，但是领导希望我们构建的服务可以为公司所有产品做支撑。<br>想请教下，为电商构建的服务有必要为erp、crm这类产品做准备吗？<br>erp、crm这类产品我们认为和电商的业务差距太大，基本不具备复用的可能。","like_count":0,"discussions":[{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":482338,"discussion_content":"按照中台建设的思路当然需要放在整个企业来考虑复用的。你们这几类产品可以根据领域模型，找出领域模型中的共同的聚合，求同存异，来设计可复用的领域模型。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1580548158,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":168019,"user_name":"hola","can_delete":false,"product_type":"c1","uid":1068559,"ip_address":"","ucode":"1872B1B3FCEAFC","user_header":"https://static001.geekbang.org/account/avatar/00/10/4e/0f/c43745e7.jpg","comment_is_top":false,"comment_ctime":1577977557,"is_pvip":false,"replies":[{"id":"65302","content":"中台和平台的差异建议再看一下第九节。","user_name":"作者回复","user_name_real":"渔","uid":"1316268","ctime":1578031095,"ip_address":"","comment_id":168019,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1577977557","product_id":100037301,"comment_content":"那我又看懵了，我们也有订单服务，商品服务，用户服务等等，那我们这也是中台服务咯？","like_count":0,"discussions":[{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":480102,"discussion_content":"中台和平台的差异建议再看一下第九节。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578031095,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":163502,"user_name":"K战神","can_delete":false,"product_type":"c1","uid":1139367,"ip_address":"","ucode":"527E6BB26BB766","user_header":"https://static001.geekbang.org/account/avatar/00/11/62/a7/3e6fee86.jpg","comment_is_top":false,"comment_ctime":1576732194,"is_pvip":false,"replies":[{"id":"62149","content":"后续的变更可以以表格为基础来进行，一个微服务一个表格。服务和实体级的变动在一个表格内演进就可以了。如果涉及到不同微服务的聚合重组，在不同微服务表格之间变动就可以了。小的业务变动不需要重新来做事件风暴，重新设计图。","user_name":"作者回复","user_name_real":"渔","uid":"1316268","ctime":1576736507,"ip_address":"","comment_id":163502,"utype":1}],"discussion_count":4,"race_medal":0,"score":"1576732194","product_id":100037301,"comment_content":"老师，我们也在做中台转型，进行探索中。<br><br>其实前面的业务分析边界划分，这个确实需要长时间积累和专业。<br><br>但是如果后面业务有变动，我们之前做的分析，比如各种图，各种表格，如何演进。是否有更好的演进方式。维护演进我有点摸不着。","like_count":0,"discussions":[{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":478419,"discussion_content":"后续的变更可以以表格为基础来进行，一个微服务一个表格。服务和实体级的变动在一个表格内演进就可以了。如果涉及到不同微服务的聚合重组，在不同微服务表格之间变动就可以了。小的业务变动不需要重新来做事件风暴，重新设计图。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1576736507,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":88881,"discussion_content":"这个表格是比较高阶的设计文档，作为领域模型和微服务设计已经足够了，你可以认为是传统的概要设计文档。还有如详细设计比如实体属性，服务参数规约等等，还需要根据团队的开发模式来设计。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1576737192,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1139367,"avatar":"https://static001.geekbang.org/account/avatar/00/11/62/a7/3e6fee86.jpg","nickname":"K战神","note":"","ucode":"527E6BB26BB766","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":89147,"discussion_content":"谢谢，我会尝试使用","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1576752433,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":88881,"ip_address":""},"score":89147,"extra":""}]},{"author":{"id":1139367,"avatar":"https://static001.geekbang.org/account/avatar/00/11/62/a7/3e6fee86.jpg","nickname":"K战神","note":"","ucode":"527E6BB26BB766","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":88875,"discussion_content":"谢谢解答，这种实践效果是不是比其他方式理想一些。\n\n这也是欧大大你们项目中实践的比较简单，易懂的方式么？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1576736776,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":155299,"user_name":"学习使我快乐","can_delete":false,"product_type":"c1","uid":1565651,"ip_address":"","ucode":"D03250F7FCFCF7","user_header":"https://static001.geekbang.org/account/avatar/00/17/e3/d3/60abede7.jpg","comment_is_top":false,"comment_ctime":1574676093,"is_pvip":true,"replies":[{"id":"59601","content":"从复用的角度来看，目标是一致的，都是将公共的能力沉淀，然后复用。","user_name":"作者回复","user_name_real":"渔","uid":"1316268","ctime":1574678938,"ip_address":"","comment_id":155299,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1574676093","product_id":100037301,"comment_content":"看到这一章，我突然有一个新的想法，但不知道对不对。中台和中间件类似，但不同的是，中间件是解决技术层面上的问题，中台是解决业务层面上的问题。比如说，中间件kafka用来提供异步、解耦、削峰功能；中台用户用来提供用户、权限、认证功能","like_count":0,"discussions":[{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":475720,"discussion_content":"从复用的角度来看，目标是一致的，都是将公共的能力沉淀，然后复用。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574678938,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1435845,"avatar":"https://static001.geekbang.org/account/avatar/00/15/e8/c5/8bdb0bba.jpg","nickname":"DarKnight","note":"","ucode":"B04AFD03768827","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":329468,"discussion_content":"我觉得中台最重要的一个点在于企业级（高层战略），然后再强调它的复用定位，中台可以提供用户权限、认证这些可复用的功能，但它的目的远远不止于此。从更高更远的角度看，如果从公司整体业务出发，业务中台致力于解决如果抽取多业务线之间的共性并沉淀。如果要跟技术中间件对比的话，例如经常用来对比的技术中台，是为了让业务更好的使用技术能力（核心还是服务于业务），这里具体就要包括如果对技术做治理、安全、可用性和自助式的包装，而仅仅站在技术中间件的角度来看，更多关注的的技术去重。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1606388114,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":151917,"user_name":"Geek_4de168","can_delete":false,"product_type":"c1","uid":1518469,"ip_address":"","ucode":"055B8AA3F444E5","user_header":"https://static001.geekbang.org/account/avatar/00/17/2b/85/961cf560.jpg","comment_is_top":false,"comment_ctime":1573812795,"is_pvip":false,"replies":[{"id":"58506","content":"前面主要是基础知识，后面会有一些代码方面的示例。到服务和方法级。","user_name":"作者回复","user_name_real":"渔","uid":"1316268","ctime":1573907210,"ip_address":"","comment_id":151917,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1573812795","product_id":100037301,"comment_content":"老师，可不可以用代码示例一下，每集都听了几回，但还是不理解","like_count":0,"discussions":[{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":474653,"discussion_content":"前面主要是基础知识，后面会有一些代码方面的示例。到服务和方法级。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573907210,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":151633,"user_name":"ff","can_delete":false,"product_type":"c1","uid":1064397,"ip_address":"","ucode":"B1998B4AAAF930","user_header":"https://static001.geekbang.org/account/avatar/00/10/3d/cd/6a15b522.jpg","comment_is_top":false,"comment_ctime":1573770931,"is_pvip":false,"replies":[{"id":"58282","content":"是的，要根据企业情况具体分析。","user_name":"作者回复","user_name_real":"渔","uid":"1316268","ctime":1573773966,"ip_address":"","comment_id":151633,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1573770931","product_id":100037301,"comment_content":"转型的话，感觉自顶向下和自底向上都需要<br>自顶向下确定的是目标，但是整个推倒重来一般都是不现实的（而且大部分情况下还需要保证服务稳定和对用户不可见），只能逐步演进<br>自底向上是认清现实，找到一条通向目标的路","like_count":0,"discussions":[{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":474559,"discussion_content":"是的，要根据企业情况具体分析。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573773966,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":151494,"user_name":"川杰","can_delete":false,"product_type":"c1","uid":1099750,"ip_address":"","ucode":"815211E1D698E6","user_header":"https://static001.geekbang.org/account/avatar/00/10/c7/e6/11f21cb4.jpg","comment_is_top":false,"comment_ctime":1573730788,"is_pvip":false,"replies":[{"id":"58258","content":"是的。通用的话，企业内能被很多地方复用也算。","user_name":"作者回复","user_name_real":"渔","uid":"1316268","ctime":1573736193,"ip_address":"","comment_id":151494,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1573730788","product_id":100037301,"comment_content":"对核心中台和通用中台有点疑惑，说下自己的理解：核心中台就是和业务强相关的，通用中台就是，即使不是保险业务，换成金融业务，也可以用；<br>请问是这个意思吗？","like_count":0,"discussions":[{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":474500,"discussion_content":"是的。通用的话，企业内能被很多地方复用也算。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573736193,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":150837,"user_name":"瓜瓜","can_delete":false,"product_type":"c1","uid":1108505,"ip_address":"","ucode":"F90A5135A9BB4B","user_header":"https://static001.geekbang.org/account/avatar/00/10/ea/19/14018371.jpg","comment_is_top":false,"comment_ctime":1573615128,"is_pvip":false,"replies":[{"id":"58018","content":"理解正确。","user_name":"作者回复","user_name_real":"渔","uid":"1316268","ctime":1573622719,"ip_address":"","comment_id":150837,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1573615128","product_id":100037301,"comment_content":"划分清楚业务域，是战略设计中的核心，因为只有划分清楚业务域，才会构建出良好的领域对象、聚合、聚合根、限界上下文等，所以，划分清楚业务域是核心中的核心，望老师答复，是否正确","like_count":0,"discussions":[{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":474284,"discussion_content":"理解正确。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573622719,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":150386,"user_name":"。","can_delete":false,"product_type":"c1","uid":1222200,"ip_address":"","ucode":"75B163F01F20F3","user_header":"https://static001.geekbang.org/account/avatar/00/12/a6/38/55483b8c.jpg","comment_is_top":false,"comment_ctime":1573525496,"is_pvip":false,"replies":[{"id":"57835","content":"命令是一种业务操作或行为，通常会被设计成应用服务或者领域服务，在没有确定是哪种服务之前，统一用命令来表示。实体的方法都在自己的类里面来实现，然后通过聚合根引用来调用。聚合根是一种特殊的实体，它的方法你可以在它的实体内来实现，然后放在领域服务类里面来封装，也可以直接放在领域服务类里来实现。一个领域服务可以是一个类，也可以一个聚合内所有的领域服务放在一个领域服务类里。你可以根据自己的场景来设计，要尽量避免一个类里面的代码过多。","user_name":"作者回复","user_name_real":"渔","uid":"1316268","ctime":1573536028,"ip_address":"","comment_id":150386,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1573525496","product_id":100037301,"comment_content":"欧老师你好<br><br>领域类型中“命令”怎么理解？CreatePerson和GetPersonInfo是两个类？DDD提倡使用充血模型，那么Person实体（同样也是聚合根）里会有针对person的CURD方法。CreatePerson和GetPersonInfo里去调用Person里的相应方法？","like_count":0,"discussions":[{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":474143,"discussion_content":"命令是一种业务操作或行为，通常会被设计成应用服务或者领域服务，在没有确定是哪种服务之前，统一用命令来表示。实体的方法都在自己的类里面来实现，然后通过聚合根引用来调用。聚合根是一种特殊的实体，它的方法你可以在它的实体内来实现，然后放在领域服务类里面来封装，也可以直接放在领域服务类里来实现。一个领域服务可以是一个类，也可以一个聚合内所有的领域服务放在一个领域服务类里。你可以根据自己的场景来设计，要尽量避免一个类里面的代码过多。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573536028,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":150157,"user_name":"张迪","can_delete":false,"product_type":"c1","uid":1104835,"ip_address":"","ucode":"6A5D44999A0FEA","user_header":"https://static001.geekbang.org/account/avatar/00/10/db/c3/e11adfe8.jpg","comment_is_top":false,"comment_ctime":1573470768,"is_pvip":false,"replies":[{"id":"57771","content":"不是的哦。中台是从业务能力复用的角度考虑的。也就是说将可复用的业务能力做成中台。而微服务只是一种架构，业务变成应用的一种架构方式。","user_name":"作者回复","user_name_real":"渔","uid":"1316268","ctime":1573472495,"ip_address":"","comment_id":150157,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1573470768","product_id":100037301,"comment_content":"中台是不是就是微服务之后的产物，之前的微服务太凌乱了，需要中台来聚合一下，是这个意思吗？","like_count":0,"discussions":[{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":474077,"discussion_content":"不是的哦。中台是从业务能力复用的角度考虑的。也就是说将可复用的业务能力做成中台。而微服务只是一种架构，业务变成应用的一种架构方式。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573472495,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":150144,"user_name":"宝宝太喜欢极客时间了","can_delete":false,"product_type":"c1","uid":1215152,"ip_address":"","ucode":"9CDB679C257612","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eoOGZ6lbHiboIZMN9USbeutnmCWBahVLtSlKlIENKvrZQCUQzpzeZQOxTntIkBUeDk6qZUPdqmfKrQ/132","comment_is_top":false,"comment_ctime":1573468109,"is_pvip":false,"replies":[{"id":"57770","content":"在12节的领域建模里有详细说明。","user_name":"作者回复","user_name_real":"渔","uid":"1316268","ctime":1573471349,"ip_address":"","comment_id":150144,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1573468109","product_id":100037301,"comment_content":"示例中是直接划分好的领域跟聚合，老师能不能讲一下领域划分确定的过程以及聚合划分确定的过程，为什么这样划分一个聚合是合理的","like_count":0,"discussions":[{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":474074,"discussion_content":"在12节的领域建模里有详细说明。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573471349,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":149655,"user_name":"约书亚","can_delete":false,"product_type":"c1","uid":1046714,"ip_address":"","ucode":"81EA27ADD9EC1A","user_header":"https://static001.geekbang.org/account/avatar/00/0f/f8/ba/14e05601.jpg","comment_is_top":false,"comment_ctime":1573305543,"is_pvip":false,"replies":[{"id":"57585","content":"评级和积分都属于客户增值相关的域，应用服务可以来组合它们的，对外提供客户增值相关的服务。所以将它们放在一个领域模型中。","user_name":"作者回复","user_name_real":"渔","uid":"1316268","ctime":1573346686,"ip_address":"","comment_id":149655,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1573305543","product_id":100037301,"comment_content":"不太了解业务，所以有个疑问哈：<br>积分相关的业务原来属于互联网电商的个人领域模型，评级相关的业务则属于传统业务的个人领域模型。为什么二者可以合并成一个评级积分领域模型？是否存在一个应用层的服务，会对评级和积分两个聚合同时进行操作呢？这点从事件风暴中没体现出来啊？","like_count":0,"discussions":[{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":473929,"discussion_content":"评级和积分都属于客户增值相关的域，应用服务可以来组合它们的，对外提供客户增值相关的服务。所以将它们放在一个领域模型中。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573346686,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":149459,"user_name":"若水","can_delete":false,"product_type":"c1","uid":1303418,"ip_address":"","ucode":"575F2A2F579B0B","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKeqZb7U4s6SZHXz1Vv2u8iaHibZeZ9Ndgibr2nT9BS6Z4wiao3j8Ya5O8FK1SnxxyagDjvsMYaauWficA/132","comment_is_top":false,"comment_ctime":1573223987,"is_pvip":false,"replies":[{"id":"57463","content":"是你说的第一种情况，从前台和中台的业务角度出发的。前台偏销售支持，中台偏业务支撑。","user_name":"作者回复","user_name_real":"渔","uid":"1316268","ctime":1573259681,"ip_address":"","comment_id":149459,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1573223987","product_id":100037301,"comment_content":"老师好，这篇中的前端和后端是指业务中面向客户类型是客户还是公司内部成员吗？还是我们开发语言的前端展示页面和后端JAVA开发这种前后端的关系呢","like_count":0,"discussions":[{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":473871,"discussion_content":"是你说的第一种情况，从前台和中台的业务角度出发的。前台偏销售支持，中台偏业务支撑。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573259681,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":149405,"user_name":"陈耀","can_delete":false,"product_type":"c1","uid":1352301,"ip_address":"","ucode":"5F179E4E0C5B78","user_header":"","comment_is_top":false,"comment_ctime":1573212413,"is_pvip":false,"replies":[{"id":"57448","content":"不知道这两种渠道产品在结构上差异大不大？如果差异不大的话，你就可以将它按照中台的模式来构建商品的。把两个渠道产品对应的业务能力合并分析，然后进行业务场景分析，找出实体对象，聚合，建立领域模型。按照分层架构来设计微服务各层的服务，同时给互联网和传统保险提供服务就可以了。","user_name":"作者回复","user_name_real":"渔","uid":"1316268","ctime":1573220793,"ip_address":"","comment_id":149405,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1573212413","product_id":100037301,"comment_content":"老师，你好。<br>想了解下如果互联网保险和传统保险公用一套商品系统，该如何建模?其中商品系统关键元素有  商品  计划  险种  险种  责任  。","like_count":0,"discussions":[{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":473852,"discussion_content":"不知道这两种渠道产品在结构上差异大不大？如果差异不大的话，你就可以将它按照中台的模式来构建商品的。把两个渠道产品对应的业务能力合并分析，然后进行业务场景分析，找出实体对象，聚合，建立领域模型。按照分层架构来设计微服务各层的服务，同时给互联网和传统保险提供服务就可以了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573220793,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":149404,"user_name":"MaLu","can_delete":false,"product_type":"c1","uid":1083559,"ip_address":"","ucode":"A5E900B6B94FB9","user_header":"https://static001.geekbang.org/account/avatar/00/10/88/a7/fb383ef7.jpg","comment_is_top":false,"comment_ctime":1573212408,"is_pvip":false,"replies":[{"id":"57449","content":"领域类型、聚合根、实体、领域服务和命令这些是在事件风暴的场景分析过程中产生的。场景分析会列出所有可能的业务行为，这些业务行为可能就是命令，然后会有对应的实体发起这些命令，而这些命令可能对应应用服务或者领域服务。从实体中找出可以管理其它实体的实体，它就是聚合根。详细情况你可以等下一讲哈。<br>识别后，我们会将这些领域对象做进一步分析，这个过程就是微服务的设计过程。领域对象会与微服务的代码对象建立一一映射的关系，这个分析过程后面我也会讲。","user_name":"作者回复","user_name_real":"渔","uid":"1316268","ctime":1573221198,"ip_address":"","comment_id":149404,"utype":1}],"discussion_count":3,"race_medal":0,"score":"1573212408","product_id":100037301,"comment_content":"我涉及的领域，运营商，保险，和现在是互联网电商，老师将两者进行类比，进行类似与差异的分析很到位，里面的1.从业务角度拆分为核心、通用域 2.接着将核心域与通用域又分层 or 分领域地拆分成 分层后的中台，这个想法很有启发。<br>但是里面讲到的 领域类型 聚合根 实体 领域服务 命令，有两个疑问<br>1.怎样去区分，并识别他们 ？<br>2.识别后，针对每一种，我们又要怎样待之？","like_count":0,"discussions":[{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":473851,"discussion_content":"领域类型、聚合根、实体、领域服务和命令这些是在事件风暴的场景分析过程中产生的。场景分析会列出所有可能的业务行为，这些业务行为可能就是命令，然后会有对应的实体发起这些命令，而这些命令可能对应应用服务或者领域服务。从实体中找出可以管理其它实体的实体，它就是聚合根。详细情况你可以等下一讲哈。\n识别后，我们会将这些领域对象做进一步分析，这个过程就是微服务的设计过程。领域对象会与微服务的代码对象建立一一映射的关系，这个分析过程后面我也会讲。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573221198,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1108505,"avatar":"https://static001.geekbang.org/account/avatar/00/10/ea/19/14018371.jpg","nickname":"瓜瓜","note":"","ucode":"F90A5135A9BB4B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":47464,"discussion_content":"场景分析--->业务行为--->命令--->实体--->聚合根；\n命令--->应用服务/领域服务","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1573353534,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1108505,"avatar":"https://static001.geekbang.org/account/avatar/00/10/ea/19/14018371.jpg","nickname":"瓜瓜","note":"","ucode":"F90A5135A9BB4B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":47442,"discussion_content":"事件风暴的场景分析过程中产生实体、领域服务、命令等","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1573352078,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]}]}