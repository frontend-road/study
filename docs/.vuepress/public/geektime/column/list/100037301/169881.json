{"id":169881,"title":"18 | 知识点串讲：基于DDD的微服务设计实例","content":"<p>你好，我是欧创新。</p><p>为了更好地理解DDD的设计流程，今天我会用一个项目来带你了解DDD的战略设计和战术设计，走一遍从领域建模到微服务设计的全过程，一起掌握DDD的主要设计流程和关键点。</p><h2>项目基本信息</h2><p>项目的目标是实现在线请假和考勤管理。功能描述如下：</p><ol>\n<li>请假人填写请假单提交审批，根据请假人身份、请假类型和请假天数进行校验，根据审批规则逐级递交上级审批，逐级核批通过则完成审批，否则审批不通过退回申请人。</li>\n<li>根据考勤规则，核销请假数据后，对考勤数据进行校验，输出考勤统计。</li>\n</ol><h2>战略设计</h2><p>战略设计是根据用户旅程分析，找出领域对象和聚合根，对实体和值对象进行聚类组成聚合，划分限界上下文，建立领域模型的过程。</p><p>战略设计采用的方法是事件风暴，包括：产品愿景、场景分析、领域建模和微服务拆分等几个主要过程。</p><p>战略设计阶段建议参与人员：领域专家、业务需求方、产品经理、架构师、项目经理、开发经理和测试经理。</p><h3>1. 产品愿景</h3><p>产品愿景是对产品顶层价值设计，对产品目标用户、核心价值、差异化竞争点等信息达成一致，避免产品偏离方向。</p><p>事件风暴时，所有参与者针对每一个要点，在贴纸上写出自己的意见，贴到白板上。事件风暴主持者会对每个贴纸，讨论并对发散的意见进行收敛和统一，形成下面的产品愿景图。</p><!-- [[[read_end]]] --><p><img src=\"https://static001.geekbang.org/resource/image/ef/b2/ef218e23ea2a8dc756af885ae06e61b2.jpg?wh=1516*1168\" alt=\"\"></p><p><strong>我们把这个产品愿景图整理成一段文字就是：</strong>为了满足内外部人员，他们的在线请假、自动考勤统计和外部人员管理的需求，我们建设这个在线请假考勤系统，它是一个在线请假平台，可以自动考勤统计。它可以同时支持内外网请假，同时管理内外部人员请假和定期考勤分析，而不像HR系统，只管理内部人员，且只能内网使用。我们的产品内外网皆可使用，可实现内外部人员无差异管理。</p><p>通过产品愿景分析，项目团队统一了系统名称——在线请假考勤系统，明确了项目目标和关键功能，与竞品（HR）的关键差异以及自己的优势和核心竞争力等。</p><p>产品愿景分析对于初创系统明确系统建设重点，统一团队建设目标和建立通用语言是很有价值的。但如果你的系统目标和需求非常清晰，这一步可以忽略。</p><h3>2. 场景分析</h3><p>场景分析是从用户视角出发，探索业务领域中的典型场景，产出领域中需要支撑的场景分类、用例操作以及不同子域之间的依赖关系，用以支撑领域建模。</p><p>项目团队成员一起用事件风暴分析请假和考勤的用户旅程。根据不同角色的旅程和场景分析，尽可能全面地梳理从前端操作到后端业务逻辑发生的所有操作、命令、领域事件以及外部依赖关系等信息。</p><p><strong>下面我就以请假和人员两个场景作为示例。</strong></p><p>第一个场景：请假<br>\n用户：请假人</p><ul>\n<li>请假人登录系统：从权限微服务获取请假人信息和权限数据，完成登录认证。</li>\n<li>创建请假单：打开请假页面，选择请假类型和起始时间，录入请假信息。保存并创建请假单，提交请假审批。</li>\n<li>修改请假单：查询请假单，打开请假页面，修改请假单，提交请假审批。</li>\n<li>提交审批：获取审批规则，根据审批规则，从人员组织关系中获取审批人，给请假单分配审批人。</li>\n</ul><p>第二个场景：审批<br>\n用户：审批人</p><ul>\n<li>审批人登录系统：从权限微服务获取审批人信息和权限数据，完成登录认证。</li>\n<li>获取请假单：获取审批人名下请假单，选择请假单。</li>\n<li>审批：填写审批意见。</li>\n<li>逐级审批：如果还需要上级审批，根据审批规则，从人员组织关系中获取审批人，给请假单分配审批人。重复以上4步。</li>\n<li>最后审批人完成审批。</li>\n</ul><p>完成审批后，产生请假审批已通过领域事件。后续有两个进一步的业务操作：发送请假审批已通过的通知，通知邮件系统告知请假人；将请假数据发送到考勤以便核销。</p><p><img src=\"https://static001.geekbang.org/resource/image/33/c5/33cbdd0f30a400a0cb9a2bd7ca5d54c5.jpg?wh=2022*1292\" alt=\"\"></p><p>下面这个图是人员组织关系场景分析结果图，详细的分析过程以及考勤的场景分析就不描述了。</p><p><img src=\"https://static001.geekbang.org/resource/image/18/74/18acc5f5681c61a37957e5036f176274.jpg?wh=1550*1136\" alt=\"\"></p><h3>3. 领域建模</h3><p>领域建模是通过对业务和问题域进行分析，建立领域模型。向上通过限界上下文指导微服务边界设计，向下通过聚合指导实体对象设计。</p><p>领域建模是一个收敛的过程，分三步：</p><ul>\n<li>第一步找出领域实体和值对象等领域对象；</li>\n<li>第二步找出聚合根，根据实体、值对象与聚合根的依赖关系，建立聚合；</li>\n<li>第三步根据业务及语义边界等因素，定义限界上下文。</li>\n</ul><p>下面我们就逐步详细讲解一下。</p><p><strong>第一步：找出实体和值对象等领域对象</strong></p><p>根据场景分析，分析并找出发起或产生这些命令或领域事件的实体和值对象，将与实体或值对象有关的命令和事件聚集到实体。</p><p>下面这个图是分析后的实体与命令的关系。通过分析，我们找到了：请假单、审批意见、审批规则、人员、组织关系、刷卡明细、考勤明细以及考勤统计等实体和值对象。</p><p><img src=\"https://static001.geekbang.org/resource/image/97/28/97c049d18f7e7032f6feef70992a4828.jpg?wh=2040*1022\" alt=\"\"></p><p><strong>第二步：定义聚合</strong></p><p>定义聚合前，先找出聚合根。从上面的实体中，我们可以找出“请假单”和“人员”两个聚合根。然后找出与聚合根紧密依赖的实体和值对象。我们发现审批意见、审批规则和请假单紧密关联，组织关系和人员紧密关联。</p><p>找出这些实体的关系后，我们发现还有刷卡明细、考勤明细和考勤统计，这几个实体没有聚合根。这种情形在领域建模时你会经常遇到，对于这类场景我们需要分情况特殊处理。</p><p>刷卡明细、考勤明细和考勤统计这几个实体，它们之间相互独立，找不出聚合根，不是富领域模型，但它们一起完成考勤业务逻辑，具有很高的业务内聚性。我们将这几个业务关联紧密的实体，放在一个考勤聚合内。在微服务设计时，我们依然采用DDD的设计和分析方法。由于没有聚合根来管理聚合内的实体，我们可以用传统的方法来管理实体。</p><p>经过分析，我们建立了请假、人员组织关系和考勤三个聚合。其中请假聚合有请假单、审批意见实体和审批规则等值对象。人员组织关系聚合有人员和组织关系等实体。考勤聚合有刷卡明细、考勤明细和考勤统计等实体。</p><p><img src=\"https://static001.geekbang.org/resource/image/bb/76/bb9f2a7095da0c72504e0195dca34376.jpg?wh=1400*882\" alt=\"\"></p><p><strong>第三步：定义限界上下文</strong></p><p>由于人员组织关系聚合与请假聚合，共同完成请假的业务功能，两者在请假的限界上下文内。考勤聚合则单独构成考勤统计限界上下文。因此我们为业务划分请假和考勤统计两个限界上下文，建立请假和考勤两个领域模型。</p><h3>4. 微服务的拆分</h3><p>理论上一个限界上下文就可以设计为一个微服务，但还需要综合考虑多种外部因素，比如：职责单一性、敏态与稳态业务分离、非功能性需求（如弹性伸缩、版本发布频率和安全等要求）、软件包大小、团队沟通效率和技术异构等非业务要素。</p><p>在这个项目，我们划分微服务主要考虑职责单一性原则。因此根据限界上下文就可以拆分为请假和考勤两个微服务。其中请假微服务包含人员组织关系和请假两个聚合，考勤微服务包含考勤聚合。</p><p>到这里，战略设计就结束了。通过战略设计，我们建立了领域模型，划分了微服务边界。下一步就是战术设计了，也就是微服务设计。下面我们以请假微服务为例，讲解其设计过程。</p><h2>战术设计</h2><p>战术设计是根据领域模型进行微服务设计的过程。这个阶段主要梳理微服务内的领域对象，梳理领域对象之间的关系，确定它们在代码模型和分层架构中的位置，建立领域模型与微服务模型的映射关系，以及服务之间的依赖关系。</p><p>战术设计阶段建议参与人员：领域专家、产品经理、架构师、项目经理、开发经理和测试经理等。</p><p>战术设计包括以下两个阶段：分析微服务领域对象和设计微服务代码结构。</p><h3>1. 分析微服务领域对象</h3><p>领域模型有很多领域对象，但是这些对象带有比较重的业务属性。要完成从领域模型到微服务的落地，还需要进一步的分析和设计。在事件风暴基础上，我们进一步细化领域对象以及它们的关系，补充事件风暴可能遗漏的业务和技术细节。</p><p>我们分析微服务内应该有哪些服务？服务的分层？应用服务由哪些服务组合和编排完成？领域服务包括哪些实体和实体方法？哪个实体是聚合根？实体有哪些属性和方法？哪些对象应该设计为值对象等。</p><p><strong>服务的识别和设计</strong></p><p>事件风暴的命令是外部的一些操作和业务行为，也是微服务对外提供的能力。它往往与微服务的应用服务或者领域服务对应。我们可以将命令作为服务识别和设计的起点。具体步骤如下：</p><ul>\n<li>根据命令设计应用服务，确定应用服务的功能，服务集合，组合和编排方式。服务集合中的服务包括领域服务或其它微服务的应用服务。</li>\n<li>根据应用服务功能要求设计领域服务，定义领域服务。这里需要注意：应用服务可能是由多个聚合的领域服务组合而成的。</li>\n<li>根据领域服务的功能，确定领域服务内的实体以及功能。</li>\n<li>设计实体基本属性和方法。</li>\n</ul><p>另外，我们还要考虑领域事件的异步化处理。</p><p>我以提交审批这个动作为例，来说明服务的识别和设计。提交审批的大体流程是：</p><ul>\n<li>根据请假类型和时长，查询请假审批规则，获取下一步审批人的角色。</li>\n<li>根据审批角色从人员组织关系中查询下一审批人。</li>\n<li>为请假单分配审批人，并将审批规则保存至请假单。</li>\n<li>通过分析，我们需要在应用层和领域层设计以下服务和方法。</li>\n</ul><p><strong>应用层：</strong>提交审批应用服务。</p><p><strong>领域层：</strong>领域服务有查询审批规则、修改请假流程信息服务以及根据审批规则查询审批人服务，分别位于请假和人员组织关系聚合。请假单实体有修改请假流程信息方法，审批规则值对象有查询审批规则方法。人员实体有根据审批规则查询审批人方法。下图是我们分析出来的服务以及它们之间的依赖关系。</p><p><img src=\"https://static001.geekbang.org/resource/image/ec/f7/eca31d653a3171a8272c6b1f25140bf7.png?wh=2573*2752\" alt=\"\"></p><p>服务的识别和设计过程就是这样了，我们再来设计一下聚合内的对象。</p><p><strong>聚合中的对象</strong></p><p>在请假单聚合中，聚合根是请假单。</p><p>请假单经多级审核后，会产生多条审批意见，为了方便查询，我们可以将审批意见设计为实体。请假审批通过后，会产生请假审批通过的领域事件，因此还会有请假事件实体。请假聚合有以下实体：审批意见（记录审批人、审批状态和审批意见）和请假事件实体。</p><p>我们再来分析一下请假单聚合的值对象。请假人和下一审批人数据来源于人员组织关系聚合中的人员实体，可设计为值对象。人员类型、请假类型和审批状态是枚举值类型，可设计为值对象。确定请假审批规则后，审批规则也可作为请假单的值对象。请假单聚合将包含以下值对象：请假人、人员类型、请假类型、下一审批人、审批状态和审批规则。</p><p>综上，我们就可以画出请假聚合对象关系图了。</p><p><img src=\"https://static001.geekbang.org/resource/image/af/be/af21beade34a5f121f673c25a7c979be.jpg?wh=1158*806\" alt=\"\"></p><p>在人员组织关系聚合中，我们可以建立人员之间的组织关系，通过组织关系类型找到上级审批领导。它的聚合根是人员，实体有组织关系（包括组织关系类型和上级审批领导），其中组织关系类型（如项目经理、处长、总经理等）是值对象。上级审批领导来源于人员聚合根，可设计为值对象。人员组织关系聚合将包含以下值对象：组织关系类型、上级审批领导。</p><p>综上，我们又可以画出人员组织关系聚合对象关系图了。</p><p><img src=\"https://static001.geekbang.org/resource/image/b5/76/b56e20cd47d161eccbd86d014f9c6e76.jpg?wh=1426*946\" alt=\"\"></p><p><strong>微服务内的对象清单</strong></p><p>在确定各领域对象的属性后，我们就可以设计各领域对象在代码模型中的代码对象（包括代码对象的包名、类名和方法名），建立领域对象与代码对象的一一映射关系了。根据这种映射关系，相关人员可快速定位到业务逻辑所在的代码位置。在经过以上分析后，我们在微服务内就可以分析出如下图的对象清单。</p><p><img src=\"https://static001.geekbang.org/resource/image/89/bc/89a65daccac054e97591c7259a60e4bc.jpg?wh=2379*2402\" alt=\"\"></p><h3>2. 设计微服务代码结构</h3><p>根据DDD的代码模型和各领域对象所在的包、类和方法，我们可以定义出请假微服务的代码结构，设计代码对象。</p><p><strong>应用层代码结构</strong></p><p>应用层包括：应用服务、DTO以及事件发布相关代码。在LeaveApplicationService类内实现与聚合相关的应用服务，在LoginApplicationService封装外部微服务认证和权限的应用服务。</p><p>这里提醒一下：如果应用服务逻辑复杂的话，一个应用服务就可以构建一个类，这样可以避免一个类的代码过于庞大，不利于维护。</p><p><img src=\"https://static001.geekbang.org/resource/image/ed/03/ed9da0faabb9c756a0067dbd3f75d103.png?wh=509*198\" alt=\"\"></p><p><strong>领域层代码结构</strong></p><p>领域层包括一个或多个聚合的实体类、事件实体类、领域服务以及工厂、仓储相关代码。一个聚合对应一个聚合代码目录，聚合之间在代码上完全隔离，聚合之间通过应用层协调。</p><p>请假微服务领域层包含请假和人员两个聚合。人员和请假代码都放在各自的聚合所在目录结构的代码包中。如果随着业务发展，人员相关功能需要从请假微服务中拆分出来，我们只需将人员聚合代码包稍加改造，独立部署，即可快速发布为人员微服务。到这里，微服务内的领域对象，分层以及依赖关系就梳理清晰了。微服务的总体架构和代码模型也基本搭建完成了。</p><p><img src=\"https://static001.geekbang.org/resource/image/a7/66/a7fa9314002372f6ddad1c1b54573a66.png?wh=606*767\" alt=\"\"></p><h2>后续的工作</h2><h3>1. 详细设计</h3><p>在完成领域模型和微服务设计后，我们还需要对微服务进行详细的设计。主要设计以下内容：实体属性、数据库表和字段、实体与数据库表映射、服务参数规约及功能实现等。</p><h3>2. 代码开发和测试</h3><p>开发人员只需要按照详细的设计文档和功能要求，找到业务功能对应的代码位置，完成代码开发就可以了。代码开发完成后，开发人员要编写单元测试用例，基于挡板模拟依赖对象完成服务测试。</p><h2>总结</h2><p>今天我们通过在线请假考勤项目，把DDD设计过程完整地走了一遍。</p><p>DDD战略设计从事件风暴开始，然后我们要找出实体等领域对象，找出聚合根构建聚合，划分限界上下文，建立领域模型。</p><p>战术设计从事件风暴的命令开始，识别和设计服务，建立各层服务的依赖关系，设计微服务内的实体和值对象，找出微服务中所有的领域对象，并建立领域对象与代码对象的映射关系。</p><p>这样就可以很好地指导项目团队进行微服务开发和测试了。总结完毕，到这你是否已经清楚DDD全部的设计过程了呢？有疑问欢迎留言讨论。</p><h2>思考题</h2><p>你现在采用的是什么样的微服务设计方法？你认为有什么需要特别注意的事项呢？目前有何难点痛点？分享出来，也许我能给你一些有效的建议。</p><p>最后，如果今天的实战项目，可以让你举一反三、有所收获，欢迎分享给你的朋友，邀请他加入学习。</p><p></p>","neighbors":{"left":{"article_title":"17 | 从后端到前端：微服务后，前端如何设计？","id":169017},"right":{"article_title":"19 | 总结（一）：微服务设计和拆分要坚持哪些原则？","id":171185}},"comments":[{"had_liked":false,"id":220434,"user_name":"movesan","can_delete":false,"product_type":"c1","uid":1257422,"ip_address":"","ucode":"29CDF0F2B604C8","user_header":"https://static001.geekbang.org/account/avatar/00/13/2f/ce/c72d4c67.jpg","comment_is_top":false,"comment_ctime":1590241152,"is_pvip":false,"replies":[{"id":"81575","content":"理解的很好。","user_name":"作者回复","comment_id":220434,"uid":"1316268","ip_address":"","utype":1,"ctime":1590453955,"user_name_real":"渔"}],"discussion_count":1,"race_medal":0,"score":"121849325440","product_id":100037301,"comment_content":"从第一课看到这里，终于有了一些领域建模的一些理解，希望可以慢慢的打开这扇门。<br><br>战略设计阶段：<br>此阶段主要是依赖于事件风暴（可理解为基于事件流程的头脑风暴），来呈现出产品的发展方向以及核心流程和场景，并文档化。<br>1.产品要解决的问题，以及从用户角度归纳出典型业务场景，落实文档 -----&gt; 产品愿景、场景分析<br>2.找出上一步总结出的关键名词，作为各个场景的实体 -----&gt; 领域建模：找出领域对象<br>3.根据上一步总结出实体，总结出之间的关系（聚合根、值对象、普通实体），划分出聚合 -----&gt; 领域建模：定义聚合<br>4.以上一步归纳出的聚合为单位，根据业务场景将聚合分组，得到限界上下文（也就是所属的领域） -----&gt;领域建模：定义界限上下文<br>感觉在第 1 步落实文档后，后面的 2，3，4 领域建模阶段都要不断的参照第 1 步总结出的业务流程场景来进行拆解与合并；<br>产品愿景、场景分析 两个阶段是从宏观到微观的过程，而 领域建模阶段是从微观到宏观的过程，也就是自底向上的思想。整体就像是总分、分总的过程。<br><br>战术设计阶段：<br>有了战略设计阶段的结果，反而战术设计阶段相对清晰一些。<br>1.按照 DDD 四层模型建包<br>2.确定聚合中的对象关系<br>3.通过战略设计阶段文档中的命令、事件来编排充血模型的领域对象，构建应用服务与领域服务<br><br>以上是初识领域驱动设计自己的一些理解，感觉如果战略设计阶段清晰完整，后面的战术设计阶段（代码落实阶段）会相对更容易一些。","like_count":29,"discussions":[{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":496139,"discussion_content":"理解的很好。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1590453955,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":155091,"user_name":"盲僧","can_delete":false,"product_type":"c1","uid":1617432,"ip_address":"","ucode":"8E29CF9A3045D0","user_header":"https://static001.geekbang.org/account/avatar/00/18/ae/18/b649c2c0.jpg","comment_is_top":false,"comment_ctime":1574644908,"is_pvip":false,"replies":[{"id":"59510","content":"我需要时间整理一下哈，等好了再共享。","user_name":"作者回复","comment_id":155091,"uid":"1316268","ip_address":"","utype":1,"ctime":1574650562,"user_name_real":"渔"}],"discussion_count":3,"race_medal":0,"score":"104653860012","product_id":100037301,"comment_content":"新哥，把代码放到git上给兄弟们个地址吧","like_count":24,"discussions":[{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":475660,"discussion_content":"我需要时间整理一下哈，等好了再共享。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574650562,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":113690,"discussion_content":"github地址如下：https://github.com/ouchuangxin/leave-sample。这两天会有一节代码详解的加餐，请耐心等待。","likes_number":4,"is_delete":false,"is_hidden":false,"ctime":1577928308,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1182120,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/oCx7GX9P4w5cml1cpbFD1x21Biad3MLCTOhTPJvicRW3xp9C8xTgdiaOSdpFyvibKSfcD1LL4miaT7VtqqKms6rgujg/132","nickname":"zshanjun","note":"","ucode":"0C99216D6FBDB8","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":98670,"discussion_content":"啥时候才能上源码啊","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577180911,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":167102,"user_name":"Aries","can_delete":false,"product_type":"c1","uid":1721221,"ip_address":"","ucode":"1F5E4CCFA5F38E","user_header":"https://static001.geekbang.org/account/avatar/00/1a/43/85/a529c1ff.jpg","comment_is_top":false,"comment_ctime":1577691868,"is_pvip":false,"replies":[{"id":"64944","content":"下单是命令，订单已下单是事件。","user_name":"作者回复","comment_id":167102,"uid":"1316268","ip_address":"","utype":1,"ctime":1577746641,"user_name_real":"渔"}],"discussion_count":4,"race_medal":0,"score":"66002201308","product_id":100037301,"comment_content":"命令和事件那块感觉有些模糊，比如下单是命令还是事件呢？ 按照我们的系统设计，下单则是事件。","like_count":15,"discussions":[{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":479746,"discussion_content":"下单是命令，订单已下单是事件。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577746641,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1122533,"avatar":"https://static001.geekbang.org/account/avatar/00/11/20/e5/f66d6144.jpg","nickname":"九先生","note":"","ucode":"A63A333299D485","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":384560,"discussion_content":"命令完结 = 事件","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1626664623,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1029376,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/b5/00/4093f39a.jpg","nickname":"杨赛","note":"","ucode":"E26AF8930F78E6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":410651,"discussion_content":"事件包含主谓宾, 命令指示一个 动词","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1635752642,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1029376,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/b5/00/4093f39a.jpg","nickname":"杨赛","note":"","ucode":"E26AF8930F78E6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":410650,"discussion_content":"事件: someone done something         命令: do","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1635752593,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":252748,"user_name":"iMARS","can_delete":false,"product_type":"c1","uid":1113733,"ip_address":"","ucode":"10C5C31908AA09","user_header":"https://static001.geekbang.org/account/avatar/00/10/fe/85/9ab352a7.jpg","comment_is_top":false,"comment_ctime":1602474148,"is_pvip":true,"replies":[{"id":"92305","content":"判断一个实体是否是聚合根，你可以结合以下内容进行分析。是否有独立的生命周期？是否有全局唯一 ID ？是否可以创建或修改其他对象？是否有专门的模块来管理这个实体等。<br>聚合根管理了聚合内所有实体和值对象的生命周期，我们通过聚合根就可以获取到聚合内所有实体和值对象等领域对象。一般来说，如果聚合根被删除了，那么被它引用的实体和值对象也就不会存在了。<br>这个场景是以人员关系管理为主，所以人员就成为了聚合根，而组织关系只是描述人员之间的关系，所以成为实体，被人员聚合根引用。","user_name":"作者回复","comment_id":252748,"uid":"1316268","ip_address":"","utype":1,"ctime":1602480428,"user_name_real":"欧创新"}],"discussion_count":2,"race_medal":0,"score":"53142081700","product_id":100037301,"comment_content":"请教老师一个问题，在上述考勤系统中，在人员实体和组织关系实体之间，如何抉择人员是聚合根，而组织关系不是？或者说判断聚合根的依据是什么？谢谢","like_count":13,"discussions":[{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":506862,"discussion_content":"判断一个实体是否是聚合根，你可以结合以下内容进行分析。是否有独立的生命周期？是否有全局唯一 ID ？是否可以创建或修改其他对象？是否有专门的模块来管理这个实体等。\n聚合根管理了聚合内所有实体和值对象的生命周期，我们通过聚合根就可以获取到聚合内所有实体和值对象等领域对象。一般来说，如果聚合根被删除了，那么被它引用的实体和值对象也就不会存在了。\n这个场景是以人员关系管理为主，所以人员就成为了聚合根，而组织关系只是描述人员之间的关系，所以成为实体，被人员聚合根引用。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1602480428,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":1,"child_discussions":[{"author":{"id":1142335,"avatar":"https://static001.geekbang.org/account/avatar/00/11/6e/3f/49e5079f.jpg","nickname":"楞伽山人","note":"","ucode":"5859C06DAC790D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":543703,"discussion_content":"那老师您是怎么套的呢？根据的是生命周期 也不像也 全局唯一id也没有吧 感觉您说的我怎么都套不上呢","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1641276474,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":506862,"ip_address":""},"score":543703,"extra":""}]}]},{"had_liked":false,"id":157397,"user_name":"zj","can_delete":false,"product_type":"c1","uid":1100064,"ip_address":"","ucode":"E3329CCF694AC2","user_header":"https://static001.geekbang.org/account/avatar/00/10/c9/20/e4f1b17c.jpg","comment_is_top":false,"comment_ctime":1575131284,"is_pvip":false,"replies":[{"id":"60357","content":"CQRS其实就是读写分离，主要解决DDD的复杂查询问题。一般是写库和读库分离，但是实效性不容易保证。其实你也可以在同一个库，用领域或者应用查询服务来完成复杂查询的。","user_name":"作者回复","comment_id":157397,"uid":"1316268","ip_address":"","utype":1,"ctime":1575166587,"user_name_real":"渔"}],"discussion_count":2,"race_medal":0,"score":"35934869652","product_id":100037301,"comment_content":"我觉得老师可以讲一下CQRS，毕竟微服务好多都是要查询的哈哈","like_count":8,"discussions":[{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":476416,"discussion_content":"CQRS其实就是读写分离，主要解决DDD的复杂查询问题。一般是写库和读库分离，但是实效性不容易保证。其实你也可以在同一个库，用领域或者应用查询服务来完成复杂查询的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1575166587,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1707838,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/AcJM5WNhE062TQAsIE8KTxTsZMTHJHCm4LCfsjBPibZ6iaGRamfZqIRFcLXLVfAQobeCIgA9o5wiaRCKa0dNbic1iag/132","nickname":"paulmin","note":"","ucode":"6AAB20AB369E90","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":400580,"discussion_content":"分页查询的时候怎么办呢？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1633337947,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":155070,"user_name":"Alex zhang","can_delete":false,"product_type":"c1","uid":1144326,"ip_address":"","ucode":"87C82404A35481","user_header":"https://static001.geekbang.org/account/avatar/00/11/76/06/12413a29.jpg","comment_is_top":false,"comment_ctime":1574643107,"is_pvip":false,"replies":[{"id":"59512","content":"本来没准备放代码的哈，我后面花时间整理一下吧。","user_name":"作者回复","comment_id":155070,"uid":"1316268","ip_address":"","utype":1,"ctime":1574650971,"user_name_real":"渔"}],"discussion_count":3,"race_medal":0,"score":"27344446883","product_id":100037301,"comment_content":"老师，代码有github链接吗","like_count":6,"discussions":[{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":475652,"discussion_content":"本来没准备放代码的哈，我后面花时间整理一下吧。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574650971,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1235433,"avatar":"https://static001.geekbang.org/account/avatar/00/12/d9/e9/9a428aa5.jpg","nickname":"周桃春","note":"","ucode":"57937C6C01D9FB","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":74042,"discussion_content":"欧老师，代码整理好了吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1575625758,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":1235433,"avatar":"https://static001.geekbang.org/account/avatar/00/12/d9/e9/9a428aa5.jpg","nickname":"周桃春","note":"","ucode":"57937C6C01D9FB","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":113693,"discussion_content":"github地址如下：https://github.com/ouchuangxin/leave-sample。这两天会有一节代码详解的加餐，请耐心等待。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577928358,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":74042,"ip_address":""},"score":113693,"extra":""}]}]},{"had_liked":false,"id":260220,"user_name":"风","can_delete":false,"product_type":"c1","uid":1077538,"ip_address":"","ucode":"104638BF19B048","user_header":"https://static001.geekbang.org/account/avatar/00/10/71/22/b8c596b6.jpg","comment_is_top":false,"comment_ctime":1604962154,"is_pvip":false,"replies":[{"id":"94612","content":"感谢，掌握了DDD的设计思想和过程，相信微服务的拆分和设计不再是难事。","user_name":"作者回复","comment_id":260220,"uid":"1316268","ip_address":"","utype":1,"ctime":1605063890,"user_name_real":"欧创新"}],"discussion_count":1,"race_medal":0,"score":"18784831338","product_id":100037301,"comment_content":"老师这篇文章对DDD的理解效果非常高，实际的案例分析过程有一种Ddd不再是飘在空中，有点落地的感觉了，谢谢老师👨‍🏫，真的很用心","like_count":5,"discussions":[{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":509134,"discussion_content":"感谢，掌握了DDD的设计思想和过程，相信微服务的拆分和设计不再是难事。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1605063890,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":222215,"user_name":"古腪","can_delete":false,"product_type":"c1","uid":1207955,"ip_address":"","ucode":"24F19B24CF43BD","user_header":"https://static001.geekbang.org/account/avatar/00/12/6e/93/1ebfb1ca.jpg","comment_is_top":false,"comment_ctime":1590718707,"is_pvip":false,"replies":[{"id":"81952","content":"你看这样设计合适不？用户、角色和权限是三个不同的聚合，其实这三个聚合最关键的是用户聚合。角色和权限实际上属于配置类聚合。我们在完成用户的权限或者角色配置后，可以将角色和权限聚合相关的数据复制到用户聚合，作为用户聚合根的值对象。只要能够找到用户，就可以获取角色和权限的基本数据。","user_name":"作者回复","comment_id":222215,"uid":"1316268","ip_address":"","utype":1,"ctime":1590740871,"user_name_real":"渔"}],"discussion_count":3,"race_medal":0,"score":"14475620595","product_id":100037301,"comment_content":"有个场景希望老师帮分析下，一个是用户可以有多个角色，一个角色有多个用户，并且有多个权限，一个是权限可能配置多个角色，这种情况要怎么设计聚合咧？","like_count":4,"discussions":[{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":496715,"discussion_content":"你看这样设计合适不？用户、角色和权限是三个不同的聚合，其实这三个聚合最关键的是用户聚合。角色和权限实际上属于配置类聚合。我们在完成用户的权限或者角色配置后，可以将角色和权限聚合相关的数据复制到用户聚合，作为用户聚合根的值对象。只要能够找到用户，就可以获取角色和权限的基本数据。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1590740871,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1207955,"avatar":"https://static001.geekbang.org/account/avatar/00/12/6e/93/1ebfb1ca.jpg","nickname":"古腪","note":"","ucode":"24F19B24CF43BD","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":275683,"discussion_content":"那这个会不会数据有点冗余啊？怎么保持数据一致性咧？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1590754113,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":1207955,"avatar":"https://static001.geekbang.org/account/avatar/00/12/6e/93/1ebfb1ca.jpg","nickname":"古腪","note":"","ucode":"24F19B24CF43BD","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":275780,"discussion_content":"如果要保持数据一致，降低冗余，那就将它们的ID作为值对象，如果留快照信息，那就多留一下属性。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1590761850,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":275683,"ip_address":""},"score":275780,"extra":""}]}]},{"had_liked":false,"id":165255,"user_name":"Tan","can_delete":false,"product_type":"c1","uid":1419514,"ip_address":"","ucode":"7A34FA560715F0","user_header":"https://static001.geekbang.org/account/avatar/00/15/a8/fa/e98afa52.jpg","comment_is_top":false,"comment_ctime":1577189263,"is_pvip":false,"replies":[{"id":"63024","content":"可以的啊，这只是一种手段。只要你们统一团队语言和目标，找到产品的核心价值点，多种方法都可以。","user_name":"作者回复","comment_id":165255,"uid":"1316268","ip_address":"","utype":1,"ctime":1577230234,"user_name_real":"渔"}],"discussion_count":1,"race_medal":0,"score":"14462091151","product_id":100037301,"comment_content":"产品愿景可以不安上面的来吗？ 我的理解就是<br>1、产品是为谁服务<br>2、解决了什么问题<br>3、给产品确定名称<br>4、给产品定义功能<br>5、竞品分析<br>6、本产品的优势<br>","like_count":3,"discussions":[{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":479094,"discussion_content":"可以的啊，这只是一种手段。只要你们统一团队语言和目标，找到产品的核心价值点，多种方法都可以。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577230234,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":288793,"user_name":"Keith","can_delete":false,"product_type":"c1","uid":1193337,"ip_address":"","ucode":"B40774090714D1","user_header":"https://static001.geekbang.org/account/avatar/00/12/35/79/21647da2.jpg","comment_is_top":false,"comment_ctime":1618676164,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"10208610756","product_id":100037301,"comment_content":"关于场景分析中的第一个场景的&quot;请假人登录系统：从权限微服务获取请假人信息和权限数据，完成登录认证。&quot;, 这&quot;权限微服务&quot;哪里来, 业务场景还没确定怎么可能知道有哪些微服务, 而且用户也感知不到这些技术细节","like_count":2,"discussions":[{"author":{"id":1142335,"avatar":"https://static001.geekbang.org/account/avatar/00/11/6e/3f/49e5079f.jpg","nickname":"楞伽山人","note":"","ucode":"5859C06DAC790D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":543244,"discussion_content":"是的 我也是有这种疑问","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1641024771,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1966534,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/01/c6/b131de98.jpg","nickname":"Newball","note":"","ucode":"933FE3FD50BD1E","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":395153,"discussion_content":"权限鉴权应该是公司的基础建设","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1632240821,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":251296,"user_name":"大飞","can_delete":false,"product_type":"c1","uid":1810181,"ip_address":"","ucode":"74B0A068E45094","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/2viaqSM1mTMletYasDQgTUOlx0mpk5D748ERrVurTedCBzgdoHyJIKNj5icugj5TXa4L3GM72eicRNPjd5ItfHeOA/132","comment_is_top":false,"comment_ctime":1601452489,"is_pvip":false,"replies":[{"id":"92201","content":"这个可能需要分一下几类情况来处理。<br>1、如果是聚合内实体的业务逻辑没考虑到，只需要修改对应实体内的属性或者方法即可。<br>2、如何是聚合内实体之间的关系没考虑到，调整或新增领域服务，或者聚合根的方法即可。<br>3、如果是在同一个限界上下文内的聚合之间的关系没考虑到，在应用层的应用服务中调整或新增即可。<br>4、如果是聚合划分到了错误的限界上下文内，整体将聚合内所有对象和代码调整到合适的限界上下文即可，并重新建立新的限界上下文内聚合之间的关系。","user_name":"作者回复","comment_id":251296,"uid":"1316268","ip_address":"","utype":1,"ctime":1602320555,"user_name_real":"欧创新"}],"discussion_count":1,"race_medal":0,"score":"10191387081","product_id":100037301,"comment_content":"新哥，问个有点奇怪的问题，在设计过程中，对于一些复杂的流程细节没考虑到位，或者忽略了某个细节流程，而导致在程序落地过程中，发现原有的建模不够严谨，对于这种场景，有什么补救措施吗，或者如何避免这一问题的发生？","like_count":2,"discussions":[{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":506440,"discussion_content":"这个可能需要分一下几类情况来处理。\n1、如果是聚合内实体的业务逻辑没考虑到，只需要修改对应实体内的属性或者方法即可。\n2、如何是聚合内实体之间的关系没考虑到，调整或新增领域服务，或者聚合根的方法即可。\n3、如果是在同一个限界上下文内的聚合之间的关系没考虑到，在应用层的应用服务中调整或新增即可。\n4、如果是聚合划分到了错误的限界上下文内，整体将聚合内所有对象和代码调整到合适的限界上下文即可，并重新建立新的限界上下文内聚合之间的关系。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1602320555,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":214563,"user_name":"JKing","can_delete":false,"product_type":"c1","uid":1436774,"ip_address":"","ucode":"E0394EC5AC9446","user_header":"https://static001.geekbang.org/account/avatar/00/15/ec/66/57d5a1de.jpg","comment_is_top":false,"comment_ctime":1588766271,"is_pvip":false,"replies":[{"id":"79521","content":"BFF是位于微服务之上，它的主要职责是负责微服务之间的服务协调和编排。而应用服务主要处理微服务内的服务组合和编排，它可以组合和编排领域服务。在小型项目里，它也可以编排其它微服务的应用服务。<br>在设计时我们应尽可能地将可复用的服务能力往下层沉淀，在实现能力复用的同时，还可以避免跨中心的服务调用。<br>BFF像齿轮一样，来适配前端应用与微服务之间的步调。它通过Facade服务适配不同的前端，通过服务组合和编排，组织和协调不同的微服务。<br>BFF微服务可根据需求和流程变化，与前端应用版本协同发布，避免中台微服务为适配前端需求的变化，而频繁地修改和发布版本，从而保证微服务版本和核心领域逻辑的稳定。<br>","user_name":"作者回复","comment_id":214563,"uid":"1316268","ip_address":"","utype":1,"ctime":1588823021,"user_name_real":"渔"}],"discussion_count":1,"race_medal":0,"score":"10178700863","product_id":100037301,"comment_content":"应用层我理解其实就是BFF","like_count":2,"discussions":[{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":494117,"discussion_content":"BFF是位于微服务之上，它的主要职责是负责微服务之间的服务协调和编排。而应用服务主要处理微服务内的服务组合和编排，它可以组合和编排领域服务。在小型项目里，它也可以编排其它微服务的应用服务。\n在设计时我们应尽可能地将可复用的服务能力往下层沉淀，在实现能力复用的同时，还可以避免跨中心的服务调用。\nBFF像齿轮一样，来适配前端应用与微服务之间的步调。它通过Facade服务适配不同的前端，通过服务组合和编排，组织和协调不同的微服务。\nBFF微服务可根据需求和流程变化，与前端应用版本协同发布，避免中台微服务为适配前端需求的变化，而频繁地修改和发布版本，从而保证微服务版本和核心领域逻辑的稳定。\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1588823021,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":155786,"user_name":"zj","can_delete":false,"product_type":"c1","uid":1100064,"ip_address":"","ucode":"E3329CCF694AC2","user_header":"https://static001.geekbang.org/account/avatar/00/10/c9/20/e4f1b17c.jpg","comment_is_top":false,"comment_ctime":1574756635,"is_pvip":false,"replies":[{"id":"59908","content":"聚合内有实体吧，看看这些实体跟那个聚合根关联紧密，生命周期归聚合根管理，就放在跟聚合根在一起的聚合内，如果别的聚合要用，有两种方案，第一种是通过聚合根引用实体。第二种方案，在另外的聚合内将这个实体设计为值对象或者实体，值对象或实体的数据来源于另外的那个聚合的实体。","user_name":"作者回复","comment_id":155786,"uid":"1316268","ip_address":"","utype":1,"ctime":1574777764,"user_name_real":"渔"}],"discussion_count":1,"race_medal":0,"score":"10164691227","product_id":100037301,"comment_content":"推广活动为一个聚合，直播推广为一个聚合，但是这两个聚合之间又是有联系的，比如直播推广可以参与推广活动。那这样这个命令到底属于哪个聚合呢？还是说将推广活动作为一个值对象呢","like_count":2,"discussions":[{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":475869,"discussion_content":"聚合内有实体吧，看看这些实体跟那个聚合根关联紧密，生命周期归聚合根管理，就放在跟聚合根在一起的聚合内，如果别的聚合要用，有两种方案，第一种是通过聚合根引用实体。第二种方案，在另外的聚合内将这个实体设计为值对象或者实体，值对象或实体的数据来源于另外的那个聚合的实体。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574777764,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":322140,"user_name":"Sylo Tsui","can_delete":false,"product_type":"c1","uid":1664064,"ip_address":"","ucode":"20B93DC2FFC9F5","user_header":"https://static001.geekbang.org/account/avatar/00/19/64/40/1b426b23.jpg","comment_is_top":false,"comment_ctime":1637204840,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5932172136","product_id":100037301,"comment_content":"需要DDD项目事例的，可以参考下开源项目SpringBootAdmin:<br>https:&#47;&#47;github.com&#47;codecentric&#47;spring-boot-admin&#47;tree&#47;2.2.x 的 spring-boot-admin-server模块。当时看到还是深受裨益的。<br>","like_count":1},{"had_liked":false,"id":276525,"user_name":"Geek_8dfa3e","can_delete":false,"product_type":"c1","uid":1890274,"ip_address":"","ucode":"3FD32328C8EE35","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epy83Wich4cvDNzsfPNe9iaiaDqE7apkM5OPL3Mj2HVicibQNteosS9uxHbQwWfBLKibibe9Aibzx41TIDqLA/132","comment_is_top":false,"comment_ctime":1611987831,"is_pvip":false,"replies":[{"id":"100464","content":"我写的这篇文章里面有他们关系的详细介绍：https:&#47;&#47;xie.infoq.cn&#47;article&#47;cc8ab87bda888d0dfa686fc91","user_name":"作者回复","comment_id":276525,"uid":"1316268","ip_address":"","utype":1,"ctime":1612150637,"user_name_real":"欧创新"}],"discussion_count":1,"race_medal":0,"score":"5906955127","product_id":100037301,"comment_content":"中台和应用的边界怎么定义？应用会有实体对象吗？哪些实体对象会落中台，哪些落应用","like_count":1,"discussions":[{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":514738,"discussion_content":"我写的这篇文章里面有他们关系的详细介绍：https://xie.infoq.cn/article/cc8ab87bda888d0dfa686fc91","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1612150637,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":226392,"user_name":"Jie","can_delete":false,"product_type":"c1","uid":1045078,"ip_address":"","ucode":"AB94041E548FEB","user_header":"https://static001.geekbang.org/account/avatar/00/0f/f2/56/c39046c0.jpg","comment_is_top":false,"comment_ctime":1592061083,"is_pvip":false,"replies":[{"id":"84657","content":"很好哈。","user_name":"作者回复","comment_id":226392,"uid":"1316268","ip_address":"","utype":1,"ctime":1592985642,"user_name_real":"欧创新"}],"discussion_count":1,"race_medal":0,"score":"5887028379","product_id":100037301,"comment_content":"窗外37度，空调房内看得酣畅淋漓，之前的知识都串起来了！","like_count":1,"discussions":[{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":498225,"discussion_content":"很好哈。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1592985642,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":220988,"user_name":"小之","can_delete":false,"product_type":"c1","uid":1130820,"ip_address":"","ucode":"B97E6CABC85AFF","user_header":"https://static001.geekbang.org/account/avatar/00/11/41/44/bc8bc7cf.jpg","comment_is_top":false,"comment_ctime":1590373149,"is_pvip":false,"replies":[{"id":"81578","content":"业务领域的子域划分其实是一种比较粗的领域边界的划分阶段，它不考虑子域内的领域对象以及对象之间的关系和层次结构。子域的划分往往可以按照业务流程或者功能模块的边界进行粗分，其目的就是为了逐步缩小业务边界，让你能够在一个相对较小的空间内，比较舒适的用事件风暴来梳理业务场景，构建领域模型。<br>关于子域与限界上下文的关系。其实你可以这样理解，有时候业务领域太大，不方便开展事件风暴，那我们就先把领域分解成若干个大小合适的子域，然后在这些子域内开展事件风暴，划分限界上下文完成领域建模。<br>限界上下文本质上也是子域，只不过它更多的考虑这些领域对象的语义边界。限界上下文的划分体现的是一种更为详细的设计过程，这个过程划分了业务的上下文语义边界，完成了领域模型，明确了领域对象以及领域对象之间的依赖关系等。<br>","user_name":"作者回复","comment_id":220988,"uid":"1316268","ip_address":"","utype":1,"ctime":1590454223,"user_name_real":"渔"}],"discussion_count":2,"race_medal":0,"score":"5885340445","product_id":100037301,"comment_content":"老师你好，我看这边直接从限界上下文入手了，这边为什么没有聊子域划分问题呢，子域和限界上下文的区别一直是个老大难问题，一个在问题空间，一个在解决方案空间，我们日常怎么取舍呢","like_count":1,"discussions":[{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":496290,"discussion_content":"业务领域的子域划分其实是一种比较粗的领域边界的划分阶段，它不考虑子域内的领域对象以及对象之间的关系和层次结构。子域的划分往往可以按照业务流程或者功能模块的边界进行粗分，其目的就是为了逐步缩小业务边界，让你能够在一个相对较小的空间内，比较舒适的用事件风暴来梳理业务场景，构建领域模型。\n关于子域与限界上下文的关系。其实你可以这样理解，有时候业务领域太大，不方便开展事件风暴，那我们就先把领域分解成若干个大小合适的子域，然后在这些子域内开展事件风暴，划分限界上下文完成领域建模。\n限界上下文本质上也是子域，只不过它更多的考虑这些领域对象的语义边界。限界上下文的划分体现的是一种更为详细的设计过程，这个过程划分了业务的上下文语义边界，完成了领域模型，明确了领域对象以及领域对象之间的依赖关系等。\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1590454223,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1121301,"avatar":"https://static001.geekbang.org/account/avatar/00/11/1c/15/f9ebf7e4.jpg","nickname":"Simple","note":"","ucode":"2F69FD2662A47A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":381810,"discussion_content":"1.根据欧老师得回答，子域属于粗划分，子域一开始可能按照业务流程或者功能模块粗分，如果采用事件风暴以后确定了限界上下文边界，会不会存在之前得模块划分不合理。也就是开始粗分和战术设计推导最终推导出来得不一致。\n2.也有相关书籍提到子域和限界上下文是不同视角或者维度得产物，不用强拉他们进行比较，就好比问一个主任医生和一个高级工程师哪个厉害一样，没有对比性，也不用强拉着去比较，不知道这种说法是否成立。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1625221691,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":160411,"user_name":"alex","can_delete":false,"product_type":"c1","uid":1012579,"ip_address":"","ucode":"2DB95B3815F728","user_header":"https://static001.geekbang.org/account/avatar/00/0f/73/63/f008057a.jpg","comment_is_top":false,"comment_ctime":1575947067,"is_pvip":false,"replies":[{"id":"61241","content":"正在准备，好了会通知大家的。","user_name":"作者回复","comment_id":160411,"uid":"1316268","ip_address":"","utype":1,"ctime":1575957690,"user_name_real":"渔"}],"discussion_count":1,"race_medal":0,"score":"5870914363","product_id":100037301,"comment_content":"有没有一个基于 DDD 设计实现的实际可用的开源项目可以分享下","like_count":1,"discussions":[{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":477368,"discussion_content":"正在准备，好了会通知大家的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1575957690,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":157893,"user_name":"霹雳大仙pp","can_delete":false,"product_type":"c1","uid":1046893,"ip_address":"","ucode":"F654FD9AEC1D56","user_header":"https://static001.geekbang.org/account/avatar/00/0f/f9/6d/b623562a.jpg","comment_is_top":false,"comment_ctime":1575278312,"is_pvip":false,"replies":[{"id":"60564","content":"审批规则有两个，一个是审批规则的配置数据，独立存在。另一个是保存在请假单上的审批规则，它根据请假基本信息匹配审批规则配置数据后获得，只要请假基础数据不变，你就不需要在每次提交审批的时候去查询审批规则的配置数据。依附于请假单的这个审批规则是值对象。","user_name":"作者回复","comment_id":157893,"uid":"1316268","ip_address":"","utype":1,"ctime":1575327008,"user_name_real":"渔"}],"discussion_count":3,"race_medal":3,"score":"5870245608","product_id":100037301,"comment_content":"审批规则值对象有查询审批规则方法？这里不是很明白。<br>不应该通过领域服务或者聚合根来做查询吗？这里的值对象是充血模型？<br>望老师回复。","like_count":1,"discussions":[{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":476565,"discussion_content":"审批规则有两个，一个是审批规则的配置数据，独立存在。另一个是保存在请假单上的审批规则，它根据请假基本信息匹配审批规则配置数据后获得，只要请假基础数据不变，你就不需要在每次提交审批的时候去查询审批规则的配置数据。依附于请假单的这个审批规则是值对象。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1575327008,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1112460,"avatar":"https://static001.geekbang.org/account/avatar/00/10/f9/8c/15d7be4e.jpg","nickname":"yutian1012","note":"","ucode":"BD02ABBE0CF98B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":264540,"discussion_content":"请假单的审批规则会持久化吗？\n如果审批规则配置发生了调整，请假单聚合中的规则值对象怎么变化。事件的形式同步？\n个人理解审批规则是相对独立，主要用来识别下个审批人，可以是一个动态计算出的值。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1589332770,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1142335,"avatar":"https://static001.geekbang.org/account/avatar/00/11/6e/3f/49e5079f.jpg","nickname":"楞伽山人","note":"","ucode":"5859C06DAC790D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1112460,"avatar":"https://static001.geekbang.org/account/avatar/00/10/f9/8c/15d7be4e.jpg","nickname":"yutian1012","note":"","ucode":"BD02ABBE0CF98B","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":543245,"discussion_content":"我理解这里不应该发生变化 就是值对象的本质 属性变了 那么就是另外一个值对象","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1641025107,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":264540,"ip_address":""},"score":543245,"extra":""}]}]},{"had_liked":false,"id":155137,"user_name":"MaLu","can_delete":false,"product_type":"c1","uid":1083559,"ip_address":"","ucode":"A5E900B6B94FB9","user_header":"https://static001.geekbang.org/account/avatar/00/10/88/a7/fb383ef7.jpg","comment_is_top":false,"comment_ctime":1574650215,"is_pvip":false,"replies":[{"id":"59582","content":"照着样例来试着做几个，慢慢就能体会到DDD的设计精要了。","user_name":"作者回复","comment_id":155137,"uid":"1316268","ip_address":"","utype":1,"ctime":1574670948,"user_name_real":"渔"}],"discussion_count":1,"race_medal":0,"score":"5869617511","product_id":100037301,"comment_content":"这篇实例，将之前的铺垫进行的应用，很有参考与启发，我已珍藏为行动指南。","like_count":1,"discussions":[{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":475669,"discussion_content":"照着样例来试着做几个，慢慢就能体会到DDD的设计精要了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574670948,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":352650,"user_name":"9527","can_delete":false,"product_type":"c1","uid":2995588,"ip_address":"","ucode":"DA47CC078F4D15","user_header":"https://static001.geekbang.org/account/avatar/00/2d/b5/84/77bcfba3.jpg","comment_is_top":false,"comment_ctime":1658836498,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1658836498","product_id":100037301,"comment_content":"新哥，按照这个代码分层，对用户提交的参数校验应该放在那一层去做呢？","like_count":0},{"had_liked":false,"id":351369,"user_name":"Hu","can_delete":false,"product_type":"c1","uid":3038981,"ip_address":"","ucode":"FD13EFDB8750BD","user_header":"https://static001.geekbang.org/account/avatar/00/2e/5f/05/604d3113.jpg","comment_is_top":false,"comment_ctime":1657730921,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1657730921","product_id":100037301,"comment_content":"老师你好，18讲这个案例我觉得很好，对DDD的场景分析、领域建模有更清晰的认识。请问还有其他类似的案例吗？谢谢","like_count":0},{"had_liked":false,"id":347568,"user_name":"zlp","can_delete":false,"product_type":"c1","uid":1732870,"ip_address":"","ucode":"BC1E82E01F60C5","user_header":"https://static001.geekbang.org/account/avatar/00/1a/71/06/8c529209.jpg","comment_is_top":false,"comment_ctime":1654160212,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1654160212","product_id":100037301,"comment_content":"老师，看目录结构，PO、DO、DTO、VO 类似的命名方式没有提现出来，请问实例代码在哪下载","like_count":0},{"had_liked":false,"id":346524,"user_name":"潇洒的毅小峰","can_delete":false,"product_type":"c1","uid":1118141,"ip_address":"","ucode":"24638DAED92F08","user_header":"https://static001.geekbang.org/account/avatar/00/11/0f/bd/7a9b2a0c.jpg","comment_is_top":false,"comment_ctime":1653212869,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1653212869","product_id":100037301,"comment_content":"老师问个问题，如果业务场景两个实体属于上下层级关系这种要如何设计，打个比方，排期是一个聚合，业务层面上一个排期有多个场次，那么此时场次属于单独的聚合还是和排期在同一个聚合内","like_count":0},{"had_liked":false,"id":338526,"user_name":"小鱼","can_delete":false,"product_type":"c1","uid":1109569,"ip_address":"","ucode":"5C58E03E10D48C","user_header":"https://static001.geekbang.org/account/avatar/00/10/ee/41/e1226304.jpg","comment_is_top":false,"comment_ctime":1647539680,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1647539680","product_id":100037301,"comment_content":"老师！请假场景和人员场景，这两个场景是怎么得出来的？","like_count":0},{"had_liked":false,"id":333415,"user_name":"Geek_90d873","can_delete":false,"product_type":"c1","uid":2311079,"ip_address":"","ucode":"146563BFA466FB","user_header":"","comment_is_top":false,"comment_ctime":1644333802,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1644333802","product_id":100037301,"comment_content":"如果某一个业务流程比较长也比较复杂，这个流程的梳理是在详细设计里面通过流程图的方式来体现吗？<br>在DDD之前我们更习惯用概要设计（整体架构图和主要流程）和 详细设计来对业务进行建模，这两点在DDD中哪个过程中体现呢。","like_count":0},{"had_liked":false,"id":331789,"user_name":"大鹏","can_delete":false,"product_type":"c1","uid":2659123,"ip_address":"","ucode":"31A65C4C054B93","user_header":"https://static001.geekbang.org/account/avatar/00/28/93/33/2d4de22e.jpg","comment_is_top":false,"comment_ctime":1642759046,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1642759046","product_id":100037301,"comment_content":"这一课干货满满，拜读后受益良多，点个大大的赞！","like_count":0},{"had_liked":false,"id":330386,"user_name":"先听","can_delete":false,"product_type":"c1","uid":1151409,"ip_address":"","ucode":"82D8DA7A2FEB4B","user_header":"https://static001.geekbang.org/account/avatar/00/11/91/b1/fb117c21.jpg","comment_is_top":false,"comment_ctime":1641960553,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1641960553","product_id":100037301,"comment_content":"请问老师：<br> 如果核心逻辑里面有“获取DB的当前准确时间”的处理，是不是就不得不做出“从领域层访问持久层”的特殊处理呢？ 或者，有其他更好的设计思路吗？","like_count":0},{"had_liked":false,"id":329017,"user_name":"楞伽山人","can_delete":false,"product_type":"c1","uid":1142335,"ip_address":"","ucode":"5859C06DAC790D","user_header":"https://static001.geekbang.org/account/avatar/00/11/6e/3f/49e5079f.jpg","comment_is_top":false,"comment_ctime":1641024662,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1641024662","product_id":100037301,"comment_content":"老师 你是怎么考虑在什么情况下设置为实体 什么情况下为值对象","like_count":0},{"had_liked":false,"id":328013,"user_name":"归去来兮","can_delete":false,"product_type":"c1","uid":1094810,"ip_address":"","ucode":"7218D8E70FA654","user_header":"https://static001.geekbang.org/account/avatar/00/10/b4/9a/a9167c59.jpg","comment_is_top":false,"comment_ctime":1640453184,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1640453184","product_id":100037301,"comment_content":"这个不是真正的四色建模","like_count":0},{"had_liked":false,"id":327552,"user_name":"徐李","can_delete":false,"product_type":"c1","uid":1213325,"ip_address":"","ucode":"41550F6CA1E112","user_header":"https://static001.geekbang.org/account/avatar/00/12/83/8d/03cac826.jpg","comment_is_top":false,"comment_ctime":1640166743,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1640166743","product_id":100037301,"comment_content":"战略设计很重要，战术设计就是落地了，就是照葫芦画瓢了。如果有过一个项目积累了，战术设计都是可复制的，但是战略设计就显得更重要了。","like_count":0},{"had_liked":false,"id":320598,"user_name":"书木子谢明","can_delete":false,"product_type":"c1","uid":1259879,"ip_address":"","ucode":"3090C080A570BE","user_header":"https://static001.geekbang.org/account/avatar/00/13/39/67/743128f7.jpg","comment_is_top":false,"comment_ctime":1636418280,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1636418280","product_id":100037301,"comment_content":"希望能看到一些充血模型的设计实例","like_count":0},{"had_liked":false,"id":315308,"user_name":"俯瞰风景.","can_delete":false,"product_type":"c1","uid":1044166,"ip_address":"","ucode":"A6DB68B7B84AEE","user_header":"https://static001.geekbang.org/account/avatar/00/0f/ee/c6/bebcbcf0.jpg","comment_is_top":false,"comment_ctime":1633824566,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1633824566","product_id":100037301,"comment_content":"战略设计是采取自顶向下的分析方法，通过事件风暴明确产品目标和业务场景，通过场景分析得出主要事件和数据，之后就可以在此基础上找出实体和值对象，然后找到根据实体间的依赖关系找出聚合根，并定义聚合。定义好聚合后，再根据业务和语义的边界对聚合进行组合，定义出界限上下文。通过界限上下文就可以定义出微服务了。<br><br>战略设计后的战术设计主要是把领域模型映射到代码模型中，依然采取自顶向下的分析方法。从业务场景中的操作中定义应用服务，然后通过领域服务来支撑应用服务，而领域服务就由领域模型中的聚合构成，每个聚合又由充血模型的实体构成，实体由数据对象、值对象引用和对象操作方法构成。最终形成把代码模型映射到DDD的分层架构的不同代码目录中。","like_count":0},{"had_liked":false,"id":294245,"user_name":"当你的世界里有风吹过","can_delete":false,"product_type":"c1","uid":2051946,"ip_address":"","ucode":"42712891366309","user_header":"https://static001.geekbang.org/account/avatar/00/1f/4f/6a/0a6b437e.jpg","comment_is_top":false,"comment_ctime":1621849233,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1621849233","product_id":100037301,"comment_content":"这样的设计非常好，但是开发人员好像就很傻瓜了！ 设计人员设计就很费劲了！ 这样是否好呢？ ","like_count":0,"discussions":[{"author":{"id":1966534,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/01/c6/b131de98.jpg","nickname":"Newball","note":"","ucode":"933FE3FD50BD1E","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":395152,"discussion_content":"你说的这个“设计人员”本身也包括开发人员，开发代码只是在业务熟悉后顺势而为的，开发人员本身应该把指导思想放在编码之前，毕竟编码只是一种实现","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1632240735,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":289054,"user_name":"赵学习","can_delete":false,"product_type":"c1","uid":1829065,"ip_address":"","ucode":"2B660A158C4C3E","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/x3cpRvAjkpyCiaibTJlvhlaE6g5XUgDYH24ZISWzZUO5mDkfW0fPJJDWnwa8V6c3FYxnVasFMTGc4xqaoWkuXXsA/132","comment_is_top":false,"comment_ctime":1618834891,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1618834891","product_id":100037301,"comment_content":"状态是事件，动作是命令。","like_count":0},{"had_liked":false,"id":270881,"user_name":"Geek_606081","can_delete":false,"product_type":"c1","uid":2377150,"ip_address":"","ucode":"2F1193DDD6023D","user_header":"","comment_is_top":false,"comment_ctime":1609311108,"is_pvip":false,"replies":[{"id":"98289","content":"前面部分主要是需求描述，包括：人员和审批。后面是场景分析结果第一个图是审批的图，第二个是人员场景分析的结果，这样排序可能让你产生误解了。","user_name":"作者回复","user_name_real":"欧创新","uid":"1316268","ctime":1609383309,"ip_address":"","comment_id":270881,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1609311108","product_id":100037301,"comment_content":"老师，场景分析内容部分，审批场景文字说明的配图是人员场景的图，是配图错了吗？感觉文字和图片不匹配呢？<br>","like_count":0,"discussions":[{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":512779,"discussion_content":"前面部分主要是需求描述，包括：人员和审批。后面是场景分析结果第一个图是审批的图，第二个是人员场景分析的结果，这样排序可能让你产生误解了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1609383309,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":268784,"user_name":"archerwong","can_delete":false,"product_type":"c1","uid":2223755,"ip_address":"","ucode":"B603E194520386","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKv92yhBU4EpUIeo4UgAQvsMGnu2S1XNxq2TyVWgw8n2ByDSm7JcqiaVibOTyr9sq2awZHq1dSYb2Vg/132","comment_is_top":false,"comment_ctime":1608348237,"is_pvip":false,"replies":[{"id":"97747","content":"在DTO向DO转换时，你可以在Assembler组装器中完成，组装器的功能实际上跟工厂的功能是差不多的。当聚合太大我们从数据库获取到PO实体后，为了避免聚合根承担太多的非业务逻辑，我们一般会将聚合内实体数据初始化的工作统一放在工厂中完成。当然，如果聚合比较小，你也可以直接在聚合根的构造函数中完成。<br>不管在哪里完成数据的初始化，其实他们的代码处理逻辑都是一样的，所以不必纠结是否绕过聚合根来操作实体。","user_name":"作者回复","user_name_real":"欧创新","uid":"1316268","ctime":1608708970,"ip_address":"","comment_id":268784,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1608348237","product_id":100037301,"comment_content":"欧老师，我想问下，在DTO想DO转换的过程中，是在领域服务外进行的，如果我的聚合内有一个聚合根，两个实体，那么这两个实体在实例化的时候，是需要先new，然后再调用实体的set方法的，那么这个算是外部绕过聚合根，直接操作了实体么","like_count":0,"discussions":[{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":512036,"discussion_content":"在DTO向DO转换时，你可以在Assembler组装器中完成，组装器的功能实际上跟工厂的功能是差不多的。当聚合太大我们从数据库获取到PO实体后，为了避免聚合根承担太多的非业务逻辑，我们一般会将聚合内实体数据初始化的工作统一放在工厂中完成。当然，如果聚合比较小，你也可以直接在聚合根的构造函数中完成。\n不管在哪里完成数据的初始化，其实他们的代码处理逻辑都是一样的，所以不必纠结是否绕过聚合根来操作实体。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1608708970,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":264250,"user_name":"李二木","can_delete":false,"product_type":"c1","uid":1103091,"ip_address":"","ucode":"30E03BB84ADB27","user_header":"https://static001.geekbang.org/account/avatar/00/10/d4/f3/129d6dfe.jpg","comment_is_top":false,"comment_ctime":1606391022,"is_pvip":true,"replies":[{"id":"96482","content":"实体中的值对象可以以属性嵌入或者多个字段组合成JSON串的方式存储到一个实体数据表中。","user_name":"作者回复","user_name_real":"欧创新","uid":"1316268","ctime":1606897476,"ip_address":"","comment_id":264250,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1606391022","product_id":100037301,"comment_content":"实体中的值对象 是否可以放到一个表中设计呢。","like_count":0,"discussions":[{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":510479,"discussion_content":"实体中的值对象可以以属性嵌入或者多个字段组合成JSON串的方式存储到一个实体数据表中。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1606897476,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":263175,"user_name":"Eternal","can_delete":false,"product_type":"c1","uid":1188023,"ip_address":"","ucode":"EA6FE7CC98F740","user_header":"https://static001.geekbang.org/account/avatar/00/12/20/b7/bdb3bcf0.jpg","comment_is_top":false,"comment_ctime":1606033207,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1606033207","product_id":100037301,"comment_content":"一气呵成，强","like_count":0},{"had_liked":false,"id":258363,"user_name":"errocks","can_delete":false,"product_type":"c1","uid":1139982,"ip_address":"","ucode":"D59C3B21B81173","user_header":"https://static001.geekbang.org/account/avatar/00/11/65/0e/6dee8123.jpg","comment_is_top":false,"comment_ctime":1604397891,"is_pvip":true,"replies":[{"id":"94114","content":" DDD 不仅适用于微服务拆分和设计，同样也适用于单体应用。如果单体应用采用了 DDD 方法设计，当某一天你想将单体应用拆分为多个微服务时，你会发现采用 DDD 方法设计出来的单体应用，拆分起来比采用传统三层架构设计出来的单体应用容易很多。这是因为用 DDD 方法设计的单体应用，在应用内部会有很多聚合，聚合之间是松耦合的，但聚合内部的功能具有高内聚的特点。有了这一层清晰的聚合边界，我们就可以很容易完成从单体应用向微服务的拆分了。这个过程非常容易，不会花费太多时间。这种设计方式特别适合当前不具备微服务运行支撑能力，但又必须完成系统重构，待具备能力后再进行微服务拆分的项目。","user_name":"作者回复","user_name_real":"欧创新","uid":"1316268","ctime":1604457210,"ip_address":"","comment_id":258363,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1604397891","product_id":100037301,"comment_content":"请教一下, 如果目前公司还是单体架构, 是不是没太大必要做DDD的实现, 这样还是会增加系统的复杂度, 带来的效益好像没有微服务架构高. ","like_count":0,"discussions":[{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":508633,"discussion_content":" DDD 不仅适用于微服务拆分和设计，同样也适用于单体应用。如果单体应用采用了 DDD 方法设计，当某一天你想将单体应用拆分为多个微服务时，你会发现采用 DDD 方法设计出来的单体应用，拆分起来比采用传统三层架构设计出来的单体应用容易很多。这是因为用 DDD 方法设计的单体应用，在应用内部会有很多聚合，聚合之间是松耦合的，但聚合内部的功能具有高内聚的特点。有了这一层清晰的聚合边界，我们就可以很容易完成从单体应用向微服务的拆分了。这个过程非常容易，不会花费太多时间。这种设计方式特别适合当前不具备微服务运行支撑能力，但又必须完成系统重构，待具备能力后再进行微服务拆分的项目。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1604457210,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1139982,"avatar":"https://static001.geekbang.org/account/avatar/00/11/65/0e/6dee8123.jpg","nickname":"errocks","note":"","ucode":"D59C3B21B81173","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":322309,"discussion_content":"真是最负责任的老师o(^o^)o，看专栏说的用ddd去做微服务设计，让我想起以前搞erlang用的otp，基本就是纯天然的微服务设计。每个actor模型都是数据隔离的。而且很容易组合成一个树型的更大的APP。以前一直在疑惑边界设计的问题。看了专栏，有点焕然一新的感觉","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1604722935,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":252739,"user_name":"iMARS","can_delete":false,"product_type":"c1","uid":1113733,"ip_address":"","ucode":"10C5C31908AA09","user_header":"https://static001.geekbang.org/account/avatar/00/10/fe/85/9ab352a7.jpg","comment_is_top":false,"comment_ctime":1602472370,"is_pvip":true,"replies":[{"id":"92304","content":"审批规则其实属于配置信息，没有太多需要控制的领域逻辑。在加餐的代码解析里面，我将审批规则作为一个单独的聚合，主要为其它聚合提供规则查询功能。其实很多应用中，可能都会有这种类似规则的配置信息，我们可以将它们放在一个聚合中，供其它聚合查询。","user_name":"作者回复","user_name_real":"欧创新","uid":"1316268","ctime":1602480267,"ip_address":"","comment_id":252739,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1602472370","product_id":100037301,"comment_content":"审批规则是不是应该规划成一个通用子域？请假单的提交和审批都会用到。","like_count":0,"discussions":[{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":506856,"discussion_content":"审批规则其实属于配置信息，没有太多需要控制的领域逻辑。在加餐的代码解析里面，我将审批规则作为一个单独的聚合，主要为其它聚合提供规则查询功能。其实很多应用中，可能都会有这种类似规则的配置信息，我们可以将它们放在一个聚合中，供其它聚合查询。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1602480267,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":252522,"user_name":"机器猫","can_delete":false,"product_type":"c1","uid":1424348,"ip_address":"","ucode":"D2C4E96A2CCE27","user_header":"https://static001.geekbang.org/account/avatar/00/15/bb/dc/9caa24dd.jpg","comment_is_top":false,"comment_ctime":1602333738,"is_pvip":true,"replies":[{"id":"92301","content":"在聚合内部操作数据库都是通过调用仓储接口来实现的。由于一个聚合内需要按照统一的业务规则来完成实体的数据变更，也就是说不可以随意修改某一个实体的数据表。为了统一这些数据更新的操作，会统一由聚合根来管理，所以操作数据库的方法一般都是放在聚合根的方法中。对于聚合内跨多个实体的业务逻辑，这部分功能可以由聚合根的方法来实现，也可以通过聚合内的领域服务来实现。<br>但为了避免聚合根的业务逻辑过于复杂，避免聚合根类代码量过于庞大，我个人建议聚合根除了承担它的聚合管理职能外，只作为实体实现与聚合根自身行为相关的业务逻辑，而将跨多个实体的复杂领域逻辑统一放在领域服务中实现。因此在完成业务逻辑后，在操作数据库时可以通过聚合根方法或领域服务来完成，切勿在某个实体的方法中不受控制的去修改数据库中实体的数据。","user_name":"作者回复","user_name_real":"欧创新","uid":"1316268","ctime":1602473699,"ip_address":"","comment_id":252522,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1602333738","product_id":100037301,"comment_content":"git里面我看都是领域服务直接操作的数据库，不是应该在实体中操作数据库吗？","like_count":0,"discussions":[{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":506799,"discussion_content":"在聚合内部操作数据库都是通过调用仓储接口来实现的。由于一个聚合内需要按照统一的业务规则来完成实体的数据变更，也就是说不可以随意修改某一个实体的数据表。为了统一这些数据更新的操作，会统一由聚合根来管理，所以操作数据库的方法一般都是放在聚合根的方法中。对于聚合内跨多个实体的业务逻辑，这部分功能可以由聚合根的方法来实现，也可以通过聚合内的领域服务来实现。\n但为了避免聚合根的业务逻辑过于复杂，避免聚合根类代码量过于庞大，我个人建议聚合根除了承担它的聚合管理职能外，只作为实体实现与聚合根自身行为相关的业务逻辑，而将跨多个实体的复杂领域逻辑统一放在领域服务中实现。因此在完成业务逻辑后，在操作数据库时可以通过聚合根方法或领域服务来完成，切勿在某个实体的方法中不受控制的去修改数据库中实体的数据。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1602473699,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":250080,"user_name":"Avril","can_delete":false,"product_type":"c1","uid":1228452,"ip_address":"","ucode":"E6E60A26B72076","user_header":"https://static001.geekbang.org/account/avatar/00/12/be/a4/32866c50.jpg","comment_is_top":false,"comment_ctime":1600927202,"is_pvip":false,"replies":[{"id":"91655","content":"聚合大小要考虑聚合功能的完整性，避免拆的过细。虽然整体建议采用小聚合的方式，但是还是要考虑具体的业务场景，避免聚合之间频繁的服务调用或数据交互。所以还是建议具体场景具体分析，避免过度设计，增加设计的复杂度和不必要的麻烦。","user_name":"作者回复","user_name_real":"欧创新","uid":"1316268","ctime":1601002590,"ip_address":"","comment_id":250080,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1600927202","product_id":100037301,"comment_content":"欧老师，你好，想问下，聚合比较推荐小聚合，每个聚合一般只有两三个领域对象吧？这样，一个项目里，是不是拆分成很多的聚合，也就很多的package。","like_count":0,"discussions":[{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":506128,"discussion_content":"聚合大小要考虑聚合功能的完整性，避免拆的过细。虽然整体建议采用小聚合的方式，但是还是要考虑具体的业务场景，避免聚合之间频繁的服务调用或数据交互。所以还是建议具体场景具体分析，避免过度设计，增加设计的复杂度和不必要的麻烦。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1601002590,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":241684,"user_name":"明哥","can_delete":false,"product_type":"c1","uid":1042844,"ip_address":"","ucode":"4FDE035F4ED105","user_header":"https://static001.geekbang.org/account/avatar/00/0f/e9/9c/b821c12d.jpg","comment_is_top":false,"comment_ctime":1597390104,"is_pvip":false,"replies":[{"id":"89379","content":"我在加餐里面用JAVA写了一个基于DDD的微服务代码示例，你可以参考一下。","user_name":"作者回复","user_name_real":"欧创新","uid":"1316268","ctime":1597632548,"ip_address":"","comment_id":241684,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1597390104","product_id":100037301,"comment_content":"代码如果要落地的话，老师在框架这块有没有什么建议呢？例如使用Axon或者Reveno这种开源cqrs框架","like_count":0,"discussions":[{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":503813,"discussion_content":"我在加餐里面用JAVA写了一个基于DDD的微服务代码示例，你可以参考一下。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1597632548,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":238420,"user_name":"锦鲤","can_delete":false,"product_type":"c1","uid":1343717,"ip_address":"","ucode":"B9F1495E39F00A","user_header":"https://static001.geekbang.org/account/avatar/00/14/80/e5/251d89b5.jpg","comment_is_top":false,"comment_ctime":1596163510,"is_pvip":false,"replies":[{"id":"88563","content":"这类数据更强调数据流，比如刷卡明细来源于刷卡机，由于来源于不同的渠道，所以他们之间很难建立一种强关联或者叫引用的依赖关系。这种数据主要用于统计分析之类的场景，是一种贫领域模型的场景。","user_name":"作者回复","user_name_real":"欧创新","uid":"1316268","ctime":1596674111,"ip_address":"","comment_id":238420,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1596163510","product_id":100037301,"comment_content":"新哥，案例中，第一步找出实体中出现的刷卡明细、考勤明细和考勤统计这三个分析出来的实体在场景分析里面并没有直接的关联，我的问题是：是场景分析中遗漏了，还是根据逻辑推理推导出来的？<br>","like_count":0,"discussions":[{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":502744,"discussion_content":"这类数据更强调数据流，比如刷卡明细来源于刷卡机，由于来源于不同的渠道，所以他们之间很难建立一种强关联或者叫引用的依赖关系。这种数据主要用于统计分析之类的场景，是一种贫领域模型的场景。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1596674111,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":232048,"user_name":"yangjuicy","can_delete":false,"product_type":"c1","uid":1109371,"ip_address":"","ucode":"ED2476E671C33C","user_header":"https://static001.geekbang.org/account/avatar/00/10/ed/7b/39283ec4.jpg","comment_is_top":false,"comment_ctime":1593843698,"is_pvip":false,"replies":[{"id":"85625","content":"枚举类型的属性一般都是值对象。","user_name":"作者回复","user_name_real":"欧创新","uid":"1316268","ctime":1593855269,"ip_address":"","comment_id":232048,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1593843698","product_id":100037301,"comment_content":"状态为啥是值对象？没有理解","like_count":0,"discussions":[{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":500490,"discussion_content":"枚举类型的属性一般都是值对象。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1593855269,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":231444,"user_name":"郭嵩阳","can_delete":false,"product_type":"c1","uid":1080998,"ip_address":"","ucode":"9DC42C7B73F580","user_header":"https://static001.geekbang.org/account/avatar/00/10/7e/a6/188817b6.jpg","comment_is_top":false,"comment_ctime":1593678344,"is_pvip":true,"replies":[{"id":"85822","content":"1、事件风暴主要是为了通过分析提取领域对象，然后组成聚合和限界上下文。如果已经有原型了，是不是数据模型和业务流程基本确立了，这样可能会影响领域模型的设计方向。当然，只要你能提取领域对象，采用其他方法都是可以的。<br>2、可以记录名词解释的。<br>3、这一步可以放在后面的战术设计来实现，战术设计会更详细。<br>4、事件风暴的过程可以作为过程记录，由于这个过程过于发散，一般在设计文档中体现的都是分析和设计后的结果，比如聚合、聚合内的实体等等。<br>5、一般项目事件风暴的时间大概在1-2天，建立领域模型后面的战术设计会稍微多花的点时间，要设计实体、值对象、服务依赖以及代码目录，以及详细设计中的参数以及服务规约等等内容，这些设计完成基本就只剩下后面开发工作了。前面的事件风暴加设计的工作一起大概是1-2周的时间。相当于一个封闭设计的时间。","user_name":"作者回复","user_name_real":"欧创新","uid":"1316268","ctime":1594025975,"ip_address":"","comment_id":231444,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1593678344","product_id":100037301,"comment_content":"老师您好，有几个问题请教您<br>1.事件风暴 是否在 有相关原型 进行会好一点  如果没有原型 总觉得有些空洞 即使产品提供了简单的用户旅程，您做事件风暴的前提需要产品和业务提供哪些内容在进行<br>2.还有就是在事件风暴建立领域模型的时候，是否需要文字去记录一些名词解释，<br>3.在建立领域模型的时候，比如修改用户，可能会记录用户的修改明细，这个明细模型是在领域模型时候建立还是在最终建库的时候，因为这个在用户旅程或者原型可能不会提及<br>4.在架构的时候，这些过程图比如事件风暴或者命令风暴是否会写在架构图上体现<br>4.即使在确定了命令或者事件，但是命令或者事件里的规则在什么场景下记录,比如状态修改，某种状态下不能修改记录或者其他,这些规则是否在时间风暴上体现了，是怎样体现的<br>5.一般您做一个大系统的时间风暴大概是多长时间,包括画图的时间<br>现在我这里做事件风暴觉得有迷茫，因为没有产品原型，产品只是提供了用户旅程，觉得这样做出来的事件风暴总觉得不严谨，为了事件风暴而风暴","like_count":0,"discussions":[{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":500306,"discussion_content":"1、事件风暴主要是为了通过分析提取领域对象，然后组成聚合和限界上下文。如果已经有原型了，是不是数据模型和业务流程基本确立了，这样可能会影响领域模型的设计方向。当然，只要你能提取领域对象，采用其他方法都是可以的。\n2、可以记录名词解释的。\n3、这一步可以放在后面的战术设计来实现，战术设计会更详细。\n4、事件风暴的过程可以作为过程记录，由于这个过程过于发散，一般在设计文档中体现的都是分析和设计后的结果，比如聚合、聚合内的实体等等。\n5、一般项目事件风暴的时间大概在1-2天，建立领域模型后面的战术设计会稍微多花的点时间，要设计实体、值对象、服务依赖以及代码目录，以及详细设计中的参数以及服务规约等等内容，这些设计完成基本就只剩下后面开发工作了。前面的事件风暴加设计的工作一起大概是1-2周的时间。相当于一个封闭设计的时间。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1594025975,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":231443,"user_name":"郭嵩阳","can_delete":false,"product_type":"c1","uid":1080998,"ip_address":"","ucode":"9DC42C7B73F580","user_header":"https://static001.geekbang.org/account/avatar/00/10/7e/a6/188817b6.jpg","comment_is_top":false,"comment_ctime":1593678253,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1593678253","product_id":100037301,"comment_content":"1.事件风暴 是否在 有相关原型 进行会好一点  如果没有原型 总觉得有些空洞 即使产品提供了简单的用户旅程，您做事件风暴的前提需要产品和业务提供哪些内容在进行<br>2.还有就是在事件风暴建立领域模型的时候，是否需要文字去记录一些名词解释，<br>3.在建立领域模型的时候，比如修改用户，可能会记录用户的修改明细，这个明细模型是在领域模型时候建立还是在最终建库的时候，因为这个在用户旅程或者原型可能不会提及<br>4.在架构的时候，这些过程图比如事件风暴或者命令风暴是否会写在架构图上体现<br>4.即使在确定了命令或者事件，但是命令或者事件里的规则在什么场景下记录,比如状态修改，某种状态下不能修改记录或者其他,这些规则是否在时间风暴上体现了，是怎样体现的<br><br>现在我这里做事件风暴觉得有迷茫，因为没有产品原型，产品只是提供了用户旅程，觉得这样做出来的事件风暴总觉得不严谨，为了事件风暴而风暴","like_count":0},{"had_liked":false,"id":228675,"user_name":"郭嵩阳","can_delete":false,"product_type":"c1","uid":1080998,"ip_address":"","ucode":"9DC42C7B73F580","user_header":"https://static001.geekbang.org/account/avatar/00/10/7e/a6/188817b6.jpg","comment_is_top":false,"comment_ctime":1592787228,"is_pvip":true,"replies":[{"id":"84652","content":"事件风暴最终的结果就是实体清单，聚合，限界上下文的边界，这些内容都在那个excel表单里面记录明细。详细的设计文档还需要结合项目团队的习惯来定制，也可以采用敏捷的文档管理方式。","user_name":"作者回复","user_name_real":"欧创新","uid":"1316268","ctime":1592985436,"ip_address":"","comment_id":228675,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1592787228","product_id":100037301,"comment_content":"老师可不可提供一个,你写的架构文档,事件风暴这些是否也体现在最终的架构文档","like_count":0,"discussions":[{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":499141,"discussion_content":"事件风暴最终的结果就是实体清单，聚合，限界上下文的边界，这些内容都在那个excel表单里面记录明细。详细的设计文档还需要结合项目团队的习惯来定制，也可以采用敏捷的文档管理方式。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1592985436,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":226192,"user_name":"Grant","can_delete":false,"product_type":"c1","uid":2003225,"ip_address":"","ucode":"B76EA95B5D8636","user_header":"https://static001.geekbang.org/account/avatar/00/1e/91/19/ad3a7f8e.jpg","comment_is_top":false,"comment_ctime":1591975601,"is_pvip":false,"replies":[{"id":"84659","content":"在请假审批单里面记录了下一审批人的ID，姓名等信息，可以按照审批人的ID查询到待办请假审批单信息的。","user_name":"作者回复","user_name_real":"欧创新","uid":"1316268","ctime":1592985759,"ip_address":"","comment_id":226192,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1591975601","product_id":100037301,"comment_content":"老师，请问一下，下一审批人在审批单中是个值对象，那下一审批人是如何查询待审批请假单的？","like_count":0,"discussions":[{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":498141,"discussion_content":"在请假审批单里面记录了下一审批人的ID，姓名等信息，可以按照审批人的ID查询到待办请假审批单信息的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1592985759,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":221836,"user_name":"剑八","can_delete":false,"product_type":"c1","uid":1297630,"ip_address":"","ucode":"0A09F41DB8A4E7","user_header":"https://static001.geekbang.org/account/avatar/00/13/cc/de/e28c01e1.jpg","comment_is_top":false,"comment_ctime":1590609457,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1590609457","product_id":100037301,"comment_content":"整体项目落地：<br>1.战略设计<br>根据事件风暴分析出相关实体值对象，找出聚合，形成限界上下文<br>划分域<br><br>2.战术设计<br>架构分层，划分微服务，如是否使用clean架构<br><br>实体和值对象设计区别：<br>实体一定是唯一的且有生命周期，并且需要在本域中去重点关注的","like_count":0},{"had_liked":false,"id":216886,"user_name":"Martin","can_delete":false,"product_type":"c1","uid":2003217,"ip_address":"","ucode":"58A3B6397E8636","user_header":"https://static001.geekbang.org/account/avatar/00/1e/91/11/86b31c15.jpg","comment_is_top":false,"comment_ctime":1589362385,"is_pvip":false,"replies":[{"id":"80272","content":"可能没说清楚哈，考情统计是若干实体组合出来的一个功能，里面有刷卡记录、请假记录等这些实体的数据，可以基于这些数据进行考勤统计。它跟请假领域模型是同等的，但它主要是数据统计类功能，是贫领域模型。<br>2、人借书，这是一个业务操作，如果人是一个聚合，书的管理是一个聚合，那人借书就是一个跨聚合的操作，需要有领域服务和应用服务来支持，才能完成这个动作。","user_name":"作者回复","user_name_real":"渔","uid":"1316268","ctime":1589423062,"ip_address":"","comment_id":216886,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1589362385","product_id":100037301,"comment_content":"1、不明便考勤统计为什么是实体或值对象？感觉它是领域服务。<br>2、假如“人借书”，人和书都是实体，那“借”可以当做实体和值对象吗，可以单独抽成一个没有聚合根的聚合吗？为什么？假如就是需要把“借”抽成一个限界上下文，这个“借”的聚合又该怎么定义呢？","like_count":0,"discussions":[{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":494977,"discussion_content":"可能没说清楚哈，考情统计是若干实体组合出来的一个功能，里面有刷卡记录、请假记录等这些实体的数据，可以基于这些数据进行考勤统计。它跟请假领域模型是同等的，但它主要是数据统计类功能，是贫领域模型。\n2、人借书，这是一个业务操作，如果人是一个聚合，书的管理是一个聚合，那人借书就是一个跨聚合的操作，需要有领域服务和应用服务来支持，才能完成这个动作。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1589423062,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":216332,"user_name":"王佳山","can_delete":false,"product_type":"c1","uid":1786944,"ip_address":"","ucode":"771D318F150F8C","user_header":"https://wx.qlogo.cn/mmopen/vi_32/DYAIOgq83eoxUFAanq6rz2MqHXtn7vAvyIe0ljoqCtX3gnqZujLk7x90llHedHqCpHCnbYJeZmPX06Y6OFlibpQ/132","comment_is_top":false,"comment_ctime":1589243813,"is_pvip":false,"replies":[{"id":"80275","content":"领域层实体的业务行为，对应实体类的方法采用充血模型。多个实体的业务行为在领域服务里面实现。领域层的业务逻辑不要与基础层数据处理耦合，所以领域层代码里面不要出现mapper相关的代码，它是在仓储实现里面完成了。你可以看一下加餐里面的代码样例。","user_name":"作者回复","user_name_real":"渔","uid":"1316268","ctime":1589424081,"ip_address":"","comment_id":216332,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1589243813","product_id":100037301,"comment_content":"领域层的代码是怎么写的，是失血模型还是涨血模型，需要注入mapper吗，注入后和mvc的service有啥区别，不注入又没法做，这是我一直搞不懂的？？？","like_count":0,"discussions":[{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":494778,"discussion_content":"领域层实体的业务行为，对应实体类的方法采用充血模型。多个实体的业务行为在领域服务里面实现。领域层的业务逻辑不要与基础层数据处理耦合，所以领域层代码里面不要出现mapper相关的代码，它是在仓储实现里面完成了。你可以看一下加餐里面的代码样例。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1589424081,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":212676,"user_name":"峰","can_delete":false,"product_type":"c1","uid":1390326,"ip_address":"","ucode":"527BB65559F0B0","user_header":"https://static001.geekbang.org/account/avatar/00/15/36/f6/d65b7302.jpg","comment_is_top":false,"comment_ctime":1588173122,"is_pvip":false,"replies":[{"id":"79541","content":"请假创建是实体的方法，在严格分层架构里面，如果实体方法需要被应用层访问，它需要被先封装成领域服务，然后才被应用服务调用。请假创建服务就是封装后的领域服务。","user_name":"作者回复","user_name_real":"渔","uid":"1316268","ctime":1588836994,"ip_address":"","comment_id":212676,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1588173122","product_id":100037301,"comment_content":"请问老师，以上表格当中，实体中的&quot;请假创建&quot;和领域服务中的&quot;请假创建服务&quot;有啥区别？感觉都是完成创建请假。","like_count":0,"discussions":[{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":493579,"discussion_content":"请假创建是实体的方法，在严格分层架构里面，如果实体方法需要被应用层访问，它需要被先封装成领域服务，然后才被应用服务调用。请假创建服务就是封装后的领域服务。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1588836994,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":205680,"user_name":"KaitoShy","can_delete":false,"product_type":"c1","uid":1038415,"ip_address":"","ucode":"E2E2E9BD3F5048","user_header":"https://static001.geekbang.org/account/avatar/00/0f/d8/4f/65abc6f0.jpg","comment_is_top":false,"comment_ctime":1586701270,"is_pvip":false,"replies":[{"id":"77317","content":"因为你说的这类业务场景没有领域特点，所以这种操作就不要放到领域模型里面了，你可以直接将它们设计为应用服务，直接调用仓储完成相应的操作。","user_name":"作者回复","user_name_real":"渔","uid":"1316268","ctime":1587003091,"ip_address":"","comment_id":205680,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1586701270","product_id":100037301,"comment_content":"老师，像导出，导入的分析，是统一 utils 中么？还是说以业务分，划分至领域服务？分页查询也是在领域服务吧？","like_count":0,"discussions":[{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":491552,"discussion_content":"因为你说的这类业务场景没有领域特点，所以这种操作就不要放到领域模型里面了，你可以直接将它们设计为应用服务，直接调用仓储完成相应的操作。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1587003091,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":195906,"user_name":"天宇","can_delete":false,"product_type":"c1","uid":1065492,"ip_address":"","ucode":"557701A718F8C7","user_header":"https://static001.geekbang.org/account/avatar/00/10/42/14/23ec9a49.jpg","comment_is_top":false,"comment_ctime":1585223245,"is_pvip":false,"replies":[{"id":"74351","content":"谢谢","user_name":"作者回复","user_name_real":"渔","uid":"1316268","ctime":1585226883,"ip_address":"","comment_id":195906,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1585223245","product_id":100037301,"comment_content":"很喜欢这一章，理论结合例子","like_count":0,"discussions":[{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":489187,"discussion_content":"谢谢","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585226883,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":195159,"user_name":"530Li","can_delete":false,"product_type":"c1","uid":1693569,"ip_address":"","ucode":"3F0E5E4BED07DC","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLbgWCULFhKXW9qsicOkYeicvoutg5TtRaiaIlhK3JgPaI0Hiaxo6KaCU1P90GDS3Ria0JCMHEkN6frYsg/132","comment_is_top":false,"comment_ctime":1585142073,"is_pvip":false,"replies":[{"id":"74212","content":"因为逻辑比较简单，这里没有引入流程对象的概念，直接以修改下一审批人的方式，就完成了流程的任务指派和流转。","user_name":"作者回复","user_name_real":"渔","uid":"1316268","ctime":1585146884,"ip_address":"","comment_id":195159,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1585142073","product_id":100037301,"comment_content":"这个案例没有将审批的动作和审批后的流程转向做抽象和沉淀，即缺少了审批流程节点和流程实例的抽象。个人认为，其实流程节点是个实体，审批行为是它的行为更为贴切。另外，流程跳转也可以是审批事件实体的一个动作","like_count":0,"discussions":[{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":488991,"discussion_content":"因为逻辑比较简单，这里没有引入流程对象的概念，直接以修改下一审批人的方式，就完成了流程的任务指派和流转。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585146884,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":193005,"user_name":"峰","can_delete":false,"product_type":"c1","uid":1390326,"ip_address":"","ucode":"527BB65559F0B0","user_header":"https://static001.geekbang.org/account/avatar/00/15/36/f6/d65b7302.jpg","comment_is_top":false,"comment_ctime":1584881765,"is_pvip":false,"replies":[{"id":"73725","content":"属性和方法在战术设计中做就可以了。最好在写代码之前完成实体属性，实体方法，领域服务和应用服务的设计。要不写代码的时候，不同的人理解上容易出现差错，怕跑偏。","user_name":"作者回复","user_name_real":"渔","uid":"1316268","ctime":1584929856,"ip_address":"","comment_id":193005,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1584881765","product_id":100037301,"comment_content":"请问老师，建模只建模到限界上下文的图就行了吧，不用在模型中画出包括每个实体中的属性和方法吧？然后就可以开始写代码了，具体属性就在代码中编写了吗？","like_count":0,"discussions":[{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":488492,"discussion_content":"属性和方法在战术设计中做就可以了。最好在写代码之前完成实体属性，实体方法，领域服务和应用服务的设计。要不写代码的时候，不同的人理解上容易出现差错，怕跑偏。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584929856,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":190642,"user_name":"彦峰你要加油啊！","can_delete":false,"product_type":"c1","uid":1664020,"ip_address":"","ucode":"756E46DA81715D","user_header":"https://static001.geekbang.org/account/avatar/00/19/64/14/2f3263e3.jpg","comment_is_top":false,"comment_ctime":1584675266,"is_pvip":false,"replies":[{"id":"73299","content":"在加餐里面有一个Github的代码地址。你可以去了解一下。目前还没有其他的课程，后续可能会有其它书籍出版，敬请期待。","user_name":"作者回复","user_name_real":"渔","uid":"1316268","ctime":1584689627,"ip_address":"","comment_id":190642,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1584675266","product_id":100037301,"comment_content":"真开心买了这个课程,受益很多!<br>请问下老师您有对应的gitlab吗?可以告知一些吗?<br>还有是否还有其他课程?如何获取?<br>谢谢!","like_count":0,"discussions":[{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":488021,"discussion_content":"在加餐里面有一个Github的代码地址。你可以去了解一下。目前还没有其他的课程，后续可能会有其它书籍出版，敬请期待。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584689627,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":190447,"user_name":"绍棠","can_delete":false,"product_type":"c1","uid":1017257,"ip_address":"","ucode":"706CC78D47F1A4","user_header":"https://static001.geekbang.org/account/avatar/00/0f/85/a9/6d4d3ae8.jpg","comment_is_top":false,"comment_ctime":1584662102,"is_pvip":false,"replies":[{"id":"73301","content":"你在DAO里面按照正常的数据库逻辑实现就可以了。<br>Mybatis与仓储目前来看适配性还不是太好，很多内容需要手工去实现。","user_name":"作者回复","user_name_real":"渔","uid":"1316268","ctime":1584689713,"ip_address":"","comment_id":190447,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1584662102","product_id":100037301,"comment_content":"老师，关于代码这一块，领域对象，仓储等，如何与mybatis-plus等自动映射框架结合呢？","like_count":0,"discussions":[{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":487980,"discussion_content":"你在DAO里面按照正常的数据库逻辑实现就可以了。\nMybatis与仓储目前来看适配性还不是太好，很多内容需要手工去实现。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584689713,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":189464,"user_name":"狮锅艺","can_delete":false,"product_type":"c1","uid":1187577,"ip_address":"","ucode":"1B4AD130F9D0CA","user_header":"https://static001.geekbang.org/account/avatar/00/12/1e/f9/bfb54326.jpg","comment_is_top":false,"comment_ctime":1584519488,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1584519488","product_id":100037301,"comment_content":"DDD从头到尾走了一遍，所以说，一个微服务在gitlib中创建一个仓库，有自己的cicd流程，和容器化发布流程。","like_count":0},{"had_liked":false,"id":186402,"user_name":"Geek_88604f","can_delete":false,"product_type":"c1","uid":1501234,"ip_address":"","ucode":"33DD1318E53814","user_header":"","comment_is_top":false,"comment_ctime":1583836650,"is_pvip":false,"replies":[{"id":"72557","content":"人员场景主要是考虑了人员基本信息的维护，这是一个小的案例，所以没有考虑HR这么大的领域。在人员聚合不考虑这个人到底是请假人还是审批人这些角色，只做人员基本信息和上下级关系维护。这里的人员，它既可以是请假人也可以是审批人，它的数据到了请假聚合根作为请假人值对象的时候，就确定了它的这个人员是请假人的角色类型。人员管理的聚合的聚合根肯定是人员，组织关系只是描述人员之间关系的实体。","user_name":"作者回复","user_name_real":"渔","uid":"1316268","ctime":1584285048,"ip_address":"","comment_id":186402,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1583836650","product_id":100037301,"comment_content":"有两点疑问，望老师解惑：一是，人员场景是如何抽象出来的？从职责上看它不属于请假人，也不属于审批人，而是看起来类似于HR的职责才能够操作；二是，人员组织关系聚合的聚合根为啥不是组织关系而是人员呢？这个有何考虑？","like_count":0,"discussions":[{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":486741,"discussion_content":"人员场景主要是考虑了人员基本信息的维护，这是一个小的案例，所以没有考虑HR这么大的领域。在人员聚合不考虑这个人到底是请假人还是审批人这些角色，只做人员基本信息和上下级关系维护。这里的人员，它既可以是请假人也可以是审批人，它的数据到了请假聚合根作为请假人值对象的时候，就确定了它的这个人员是请假人的角色类型。人员管理的聚合的聚合根肯定是人员，组织关系只是描述人员之间关系的实体。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584285048,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":186202,"user_name":"Geek_88604f","can_delete":false,"product_type":"c1","uid":1501234,"ip_address":"","ucode":"33DD1318E53814","user_header":"","comment_is_top":false,"comment_ctime":1583797857,"is_pvip":false,"replies":[{"id":"71939","content":"标记和备注。","user_name":"作者回复","user_name_real":"渔","uid":"1316268","ctime":1583817437,"ip_address":"","comment_id":186202,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1583797857","product_id":100037301,"comment_content":"场景分析图中黄色的小方框表示什么，老师？","like_count":0,"discussions":[{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":486673,"discussion_content":"标记和备注。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1583817437,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":182795,"user_name":"小谢同学","can_delete":false,"product_type":"c1","uid":1032544,"ip_address":"","ucode":"E809E6BC470631","user_header":"https://static001.geekbang.org/account/avatar/00/0f/c1/60/fc3689d0.jpg","comment_is_top":false,"comment_ctime":1582868196,"is_pvip":false,"replies":[{"id":"70723","content":"一般的微服务前期的领域建模和微服务设计在1-2周左右，这种战略设计完成后，基本就可以直接提交开发了。开发的周期参考传统开发模式差不太多。","user_name":"作者回复","user_name_real":"渔","uid":"1316268","ctime":1582886408,"ip_address":"","comment_id":182795,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1582868196","product_id":100037301,"comment_content":"请问老师DDD的战略和战术设计一般在项目进度中占比由多少？也就是说从项目进度上看，前期的设计工作，在真正开始编码任务前，是不是要控制一下进度？","like_count":0,"discussions":[{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":485455,"discussion_content":"一般的微服务前期的领域建模和微服务设计在1-2周左右，这种战略设计完成后，基本就可以直接提交开发了。开发的周期参考传统开发模式差不太多。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582886408,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":172220,"user_name":"包子","can_delete":false,"product_type":"c1","uid":1089345,"ip_address":"","ucode":"6CC4EBB8CD3924","user_header":"https://static001.geekbang.org/account/avatar/00/10/9f/41/82306dfe.jpg","comment_is_top":false,"comment_ctime":1579135514,"is_pvip":false,"replies":[{"id":"66938","content":"新增和修改，以及针对聚合根的简单查询，都是通过聚合根来整体操作的。<br>对于复杂查询，可以不走领域层，按照传统模式操作就可以了。","user_name":"作者回复","user_name_real":"渔","uid":"1316268","ctime":1579241568,"ip_address":"","comment_id":172220,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1579135514","product_id":100037301,"comment_content":"老师，在请假聚合中，请假单是聚合根。那关于所有聚合实体的访问与修改是不是都要通过请假单实体走？<br><br>比如文中说的查询审批规则和修改请假流程信息，需要都通过聚合根来做吗","like_count":0,"discussions":[{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":481669,"discussion_content":"新增和修改，以及针对聚合根的简单查询，都是通过聚合根来整体操作的。\n对于复杂查询，可以不走领域层，按照传统模式操作就可以了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579241568,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":169916,"user_name":"Geek_3bbb9b","can_delete":false,"product_type":"c1","uid":1106183,"ip_address":"","ucode":"E2DFE5A19848BB","user_header":"","comment_is_top":false,"comment_ctime":1578472434,"is_pvip":false,"replies":[{"id":"65917","content":"业务流是流程阶段，命令是在这个流程阶段的某个流程的一些操作，操作包括前后端或应用之间的动作。","user_name":"作者回复","user_name_real":"渔","uid":"1316268","ctime":1578478097,"ip_address":"","comment_id":169916,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1578472434","product_id":100037301,"comment_content":"老是，问下您图中列的命令和业务流的区别是什么了？","like_count":0,"discussions":[{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":480769,"discussion_content":"业务流是流程阶段，命令是在这个流程阶段的某个流程的一些操作，操作包括前后端或应用之间的动作。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578478097,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":168142,"user_name":"dormi330","can_delete":false,"product_type":"c1","uid":1461799,"ip_address":"","ucode":"E00521B33D59B0","user_header":"https://wx.qlogo.cn/mmopen/vi_32/N1bKtOjxbbIzQsDJB4NO44ib1qCaLF7ibeibKjK4hmlIpllMh0JsxjHGXr4EVahtNDQnrzw7mPNJQ2sfmrbtaqJLA/132","comment_is_top":false,"comment_ctime":1578018912,"is_pvip":false,"replies":[{"id":"65299","content":"是从文件系统导入吗？你可以在应用服务中打开文件，调领域层的服务来实现。","user_name":"作者回复","user_name_real":"渔","uid":"1316268","ctime":1578029701,"ip_address":"","comment_id":168142,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1578018912","product_id":100037301,"comment_content":"请问老师，我的应用需要 提供 批量导入用户的功能，那这个功能，是应该应用层承担，还是领域层承担呢？","like_count":0,"discussions":[{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":480150,"discussion_content":"是从文件系统导入吗？你可以在应用服务中打开文件，调领域层的服务来实现。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578029701,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":167165,"user_name":"金龟","can_delete":false,"product_type":"c1","uid":1228500,"ip_address":"","ucode":"1C7D35C8AE8D9D","user_header":"https://static001.geekbang.org/account/avatar/00/12/be/d4/ff1c1319.jpg","comment_is_top":false,"comment_ctime":1577704189,"is_pvip":false,"replies":[{"id":"64942","content":"可以通过BFF的模式，各业务平台完成自己的细粒度功能开发，由BFF微服务完成各业务功能组合和编排，对外提供粗粒度的接口服务。这样第三方就不需要了解太细的业务编排和实现细节了。测试也只需要对粗粒度的接口测试了。","user_name":"作者回复","user_name_real":"渔","uid":"1316268","ctime":1577746313,"ip_address":"","comment_id":167165,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1577704189","product_id":100037301,"comment_content":"问下我们想做个专门对接三方的平台，让各个业务方只用关注自己的业务开发，不用陷入频繁的沟通交流中。而且对三方的压测可以只关注adapter ，这个怎么设计比较好","like_count":0,"discussions":[{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":479765,"discussion_content":"可以通过BFF的模式，各业务平台完成自己的细粒度功能开发，由BFF微服务完成各业务功能组合和编排，对外提供粗粒度的接口服务。这样第三方就不需要了解太细的业务编排和实现细节了。测试也只需要对粗粒度的接口测试了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577746313,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":164513,"user_name":"陈硕","can_delete":false,"product_type":"c1","uid":1102463,"ip_address":"","ucode":"C7662C0E79020A","user_header":"https://static001.geekbang.org/account/avatar/00/10/d2/7f/6cb73b36.jpg","comment_is_top":false,"comment_ctime":1577016958,"is_pvip":false,"replies":[{"id":"62519","content":"实体自身的业务行为就可以作为实体的方法。DDD的领域模型更能体现面向对象的设计。涉及到多个实体的业务行为用领域服务。","user_name":"作者回复","user_name_real":"渔","uid":"1316268","ctime":1577057835,"ip_address":"","comment_id":164513,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1577016958","product_id":100037301,"comment_content":"Person.createPersonInfo createPersonInfo可以算作Person实体的行为吗？什么样的方法可以直接定义在领域实体上面呢？","like_count":0,"discussions":[{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":478795,"discussion_content":"实体自身的业务行为就可以作为实体的方法。DDD的领域模型更能体现面向对象的设计。涉及到多个实体的业务行为用领域服务。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577057835,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":163957,"user_name":"奇奇","can_delete":false,"product_type":"c1","uid":1399097,"ip_address":"","ucode":"BC86B0CB55E35A","user_header":"","comment_is_top":false,"comment_ctime":1576834296,"is_pvip":true,"replies":[{"id":"62352","content":"需要整体替换，值对象会保证发生业务那一刻的数据与源端数据一致，如果源端数据变化了，数据要一致，需要整体替换。","user_name":"作者回复","user_name_real":"渔","uid":"1316268","ctime":1576846121,"ip_address":"","comment_id":163957,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1576834296","product_id":100037301,"comment_content":"请假人 其实是从人员组织关系中获取的，如果是值对象，那如果人员组织关系发生变动，或者这人改名了，如何保证一致性？","like_count":0,"discussions":[{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":478594,"discussion_content":"需要整体替换，值对象会保证发生业务那一刻的数据与源端数据一致，如果源端数据变化了，数据要一致，需要整体替换。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1576846121,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":161956,"user_name":"番茄炒西红柿","can_delete":false,"product_type":"c1","uid":1690242,"ip_address":"","ucode":"13F47BABAB2110","user_header":"https://static001.geekbang.org/account/avatar/00/19/ca/82/85f6a1a2.jpg","comment_is_top":false,"comment_ctime":1576413977,"is_pvip":false,"replies":[{"id":"61658","content":"复杂的查询建议独立出来，通过CQRS来实现，可以根据时效性要求设计为读写同一个库或者读写库分离的方式，复杂的查询逻辑可以独立为应用或者领域服务。复杂聚合的实体初始化建议用工厂类服务，简单的直接用构造函数就可以了。","user_name":"作者回复","user_name_real":"渔","uid":"1316268","ctime":1576420895,"ip_address":"","comment_id":161956,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1576413977","product_id":100037301,"comment_content":"问一下老师，关于ddd读写那块，我最近看到有的文章说在ddd化为微服务中最好做到读写分离，将读的逻辑放在service（domain层的），写和其他的逻辑放在entity中，但这里会遇到spring di问题，entity不方便做di，我看的两种方法一种是通过entity的工厂类来实现实体的di，另一种是同一用repository工程类来注入。是否还有更好的方法，还有这种读写是否适合ddd（因为我自己适着用充血模型来写也发现很多时候复杂的读逻辑不适合放在entity中实现）","like_count":0,"discussions":[{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":477924,"discussion_content":"复杂的查询建议独立出来，通过CQRS来实现，可以根据时效性要求设计为读写同一个库或者读写库分离的方式，复杂的查询逻辑可以独立为应用或者领域服务。复杂聚合的实体初始化建议用工厂类服务，简单的直接用构造函数就可以了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1576420895,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":161944,"user_name":"电商小能手","can_delete":false,"product_type":"c1","uid":1781338,"ip_address":"","ucode":"FCBBF7463F7B97","user_header":"https://static001.geekbang.org/account/avatar/00/1b/2e/5a/b9e5d2ec.jpg","comment_is_top":false,"comment_ctime":1576411261,"is_pvip":false,"replies":[{"id":"61738","content":"是的。请假聚合根会关联人员聚合的人，然后导航到审批人。","user_name":"作者回复","user_name_real":"渔","uid":"1316268","ctime":1576485944,"ip_address":"","comment_id":161944,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1576411261","product_id":100037301,"comment_content":"老师，请假单在请假聚合里，审批人在人员组织关系聚合里，在请假单聚合根（leave.java?)是如何通过人员组织关系聚合根(Person.java)关联引用到审批人的信息的？是leava对象里有Person对象吗，然后通过Person对象导航到审批人信息？","like_count":0,"discussions":[{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":477921,"discussion_content":"是的。请假聚合根会关联人员聚合的人，然后导航到审批人。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1576485944,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":161936,"user_name":"电商小能手","can_delete":false,"product_type":"c1","uid":1781338,"ip_address":"","ucode":"FCBBF7463F7B97","user_header":"https://static001.geekbang.org/account/avatar/00/1b/2e/5a/b9e5d2ec.jpg","comment_is_top":false,"comment_ctime":1576408969,"is_pvip":false,"replies":[{"id":"61737","content":"这个DO对象是领域模型的实体对象，放在Entity目录下。DTO转DO是将外部请求数据转换为领域模型的实体对象。","user_name":"作者回复","user_name_real":"渔","uid":"1316268","ctime":1576485800,"ip_address":"","comment_id":161936,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1576408969","product_id":100037301,"comment_content":"&quot;DO 是实体和值对象的数据和业务行为载体，承载着基础的核心业务逻辑。通过 DO 和 PO 转换，我们可以完成数据持久化和初始化。&quot;“第二步：提交审批facde实现DTO转DO”一直不理解不了DO对象，老师，你可以结合这章的内容，代码说明下DO对象吗？这个DO对象应该放在项目结构哪个目录下？","like_count":0,"discussions":[{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":477918,"discussion_content":"这个DO对象是领域模型的实体对象，放在Entity目录下。DTO转DO是将外部请求数据转换为领域模型的实体对象。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1576485800,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":160399,"user_name":"鬼谷学徒","can_delete":false,"product_type":"c1","uid":1189629,"ip_address":"","ucode":"62C6DA17E26F7D","user_header":"https://static001.geekbang.org/account/avatar/00/12/26/fd/3374625e.jpg","comment_is_top":false,"comment_ctime":1575944986,"is_pvip":false,"replies":[{"id":"61258","content":"在DDD里面没有提到controller这个概念。按照分层理论，它承担应用服务与前端应用适配的工作，感觉应该是属于基础层或者用户接口层。","user_name":"作者回复","user_name_real":"渔","uid":"1316268","ctime":1575965044,"ip_address":"","comment_id":160399,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1575944986","product_id":100037301,"comment_content":"老师，你好。对比MVC结构，controller在DDD分层架构中分到哪一层？在课程的代码目录节奏中没有看到呢？是不需要了吗？如果需要代码目录要如何设计？","like_count":0,"discussions":[{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":477363,"discussion_content":"在DDD里面没有提到controller这个概念。按照分层理论，它承担应用服务与前端应用适配的工作，感觉应该是属于基础层或者用户接口层。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1575965044,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":156625,"user_name":"HUNTER","can_delete":false,"product_type":"c1","uid":1114579,"ip_address":"","ucode":"184725E9ED0E2C","user_header":"https://static001.geekbang.org/account/avatar/00/11/01/d3/5cbaeb95.jpg","comment_is_top":false,"comment_ctime":1574926183,"is_pvip":false,"replies":[{"id":"60130","content":"不好意思哈，电商的内部流程我不是太熟悉哦。<br>不过不管什么样的业务，你最终目的就是为了找出命令、实体等领域对象，然后构建聚合和限界上下文。<br>你可以通过场景分析，模拟一个人在系统中的旅程，去分步骤操作就可以了。","user_name":"作者回复","user_name_real":"渔","uid":"1316268","ctime":1574931636,"ip_address":"","comment_id":156625,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1574926183","product_id":100037301,"comment_content":"老师可否以电商系统为例，讲解一下是怎么拆分的","like_count":0,"discussions":[{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":476176,"discussion_content":"不好意思哈，电商的内部流程我不是太熟悉哦。\n不过不管什么样的业务，你最终目的就是为了找出命令、实体等领域对象，然后构建聚合和限界上下文。\n你可以通过场景分析，模拟一个人在系统中的旅程，去分步骤操作就可以了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574931636,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":156320,"user_name":"深山小书童","can_delete":false,"product_type":"c1","uid":1079593,"ip_address":"","ucode":"6B5DD3B3D84534","user_header":"https://static001.geekbang.org/account/avatar/00/10/79/29/a90cf777.jpg","comment_is_top":false,"comment_ctime":1574856355,"is_pvip":true,"replies":[{"id":"60116","content":"可以多场景多角色，主要目的是找出所有的命令和实体对象。只要能达到这个目的，可以采用多种方法。","user_name":"作者回复","user_name_real":"渔","uid":"1316268","ctime":1574923891,"ip_address":"","comment_id":156320,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1574856355","product_id":100037301,"comment_content":"老师好，请问场景分析是不是按角色来分，每一个场景不涉及多个角色？例如请假场景只是罗列了请假人从创建到提交审批的动作。我们一般讲请假流程的话、提交审批之后会根据审批结果进行下一步动作，比如审批者审批拒绝，那么请假者修改请假单再次提交审批，这种情况对于请假人是不是要加一个场景。我的疑问就是，老师说的场景和一般的流程有什么区别？我的理解是流程会涉及多个角色的动作，场景只是一个角色的动作。请多多指教","like_count":0,"discussions":[{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":476067,"discussion_content":"可以多场景多角色，主要目的是找出所有的命令和实体对象。只要能达到这个目的，可以采用多种方法。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574923891,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":155872,"user_name":"瓜瓜","can_delete":false,"product_type":"c1","uid":1108505,"ip_address":"","ucode":"F90A5135A9BB4B","user_header":"https://static001.geekbang.org/account/avatar/00/10/ea/19/14018371.jpg","comment_is_top":false,"comment_ctime":1574771009,"is_pvip":false,"replies":[{"id":"59902","content":"组织关系是一个实体，记录人员关系和上级领导，上级领导数据来源于人员聚合根，所以设计为值对象。","user_name":"作者回复","user_name_real":"渔","uid":"1316268","ctime":1574776909,"ip_address":"","comment_id":155872,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1574771009","product_id":100037301,"comment_content":"上级审批领导来源于人员聚合根，可设计为值对象。 有两个问题：1.上级审批领导为什么是值对象呢？2.已经有了组织关系了，为什么还要有上级审批领导呢？这样不就重复了吗？","like_count":0,"discussions":[{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":475904,"discussion_content":"组织关系是一个实体，记录人员关系和上级领导，上级领导数据来源于人员聚合根，所以设计为值对象。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574776909,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":155849,"user_name":"观弈道人","can_delete":false,"product_type":"c1","uid":1016905,"ip_address":"","ucode":"F3BB619A33C605","user_header":"https://static001.geekbang.org/account/avatar/00/0f/84/49/47d48fd0.jpg","comment_is_top":false,"comment_ctime":1574766912,"is_pvip":false,"replies":[{"id":"59904","content":"通过聚合根来调仓储服务。用仓储服务来实现数据的初始化和持久化。大批量的数据查询建议用CQRS模式。","user_name":"作者回复","user_name_real":"渔","uid":"1316268","ctime":1574777027,"ip_address":"","comment_id":155849,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1574766912","product_id":100037301,"comment_content":"欧老师，你在实践中，一般是如何从资源库加载数据，即是领域实体还是领域服务调用资源库加载数据？","like_count":0,"discussions":[{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":475898,"discussion_content":"通过聚合根来调仓储服务。用仓储服务来实现数据的初始化和持久化。大批量的数据查询建议用CQRS模式。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574777027,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":155825,"user_name":"瓜瓜","can_delete":false,"product_type":"c1","uid":1108505,"ip_address":"","ucode":"F90A5135A9BB4B","user_header":"https://static001.geekbang.org/account/avatar/00/10/ea/19/14018371.jpg","comment_is_top":false,"comment_ctime":1574761649,"is_pvip":false,"replies":[{"id":"59905","content":"这个是系统内部判断的，根据审批规则和当前审批人的角色来确定是否还有下一审批，如果有则获取下一审批人和角色，给请假单分配下一审批人。","user_name":"作者回复","user_name_real":"渔","uid":"1316268","ctime":1574777187,"ip_address":"","comment_id":155825,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1574761649","product_id":100037301,"comment_content":"场景分析中，“提交下一步审批”这一步是不是不应该这样（当然这样也没有问题），是不是根据“审批”业务流，产生的审批事件自动决定是到最后一步了，还是继续下一步审批，因为审批人只需要关心自己的审批就可以了，不要关心是否还有一下审批人（也就是不需要点击“发往下一个审批人”），也样流程更合理，页面也更清晰，望老师指正","like_count":0,"discussions":[{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":475889,"discussion_content":"这个是系统内部判断的，根据审批规则和当前审批人的角色来确定是否还有下一审批，如果有则获取下一审批人和角色，给请假单分配下一审批人。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574777187,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1024486,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a1/e6/50da1b2d.jpg","nickname":"旭东(Frank)","note":"","ucode":"176FA629800062","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":146430,"discussion_content":"感觉像产品遇到程序员，产品要干涉具体的代码实现","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579611673,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":155812,"user_name":"Farewell丶","can_delete":false,"product_type":"c1","uid":1179565,"ip_address":"","ucode":"A0D69893C5375C","user_header":"https://static001.geekbang.org/account/avatar/00/11/ff/ad/5020a8c5.jpg","comment_is_top":false,"comment_ctime":1574760009,"is_pvip":false,"replies":[{"id":"60008","content":"不了解你说的“访问进行了控制”是什么意思？是别的层访问不了吗？<br>其实你把DO实体传给仓储接口就可以了，仓储实现内部会将DO映射成PO对象，然后PO对象就可以实现持久化了。","user_name":"作者回复","user_name_real":"渔","uid":"1316268","ctime":1574845433,"ip_address":"","comment_id":155812,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1574760009","product_id":100037301,"comment_content":"有时候为了完成领域层的业务设计，有的实体对内部属性的访问进行了控制，但是在仓储接口存储的时候又需要持久化下来，这时候该怎么做呢？","like_count":0,"discussions":[{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":475881,"discussion_content":"不了解你说的“访问进行了控制”是什么意思？是别的层访问不了吗？\n其实你把DO实体传给仓储接口就可以了，仓储实现内部会将DO映射成PO对象，然后PO对象就可以实现持久化了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574845433,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":155777,"user_name":"zj","can_delete":false,"product_type":"c1","uid":1100064,"ip_address":"","ucode":"E3329CCF694AC2","user_header":"https://static001.geekbang.org/account/avatar/00/10/c9/20/e4f1b17c.jpg","comment_is_top":false,"comment_ctime":1574754326,"is_pvip":false,"replies":[{"id":"59909","content":"你先要按照步骤根据命令找出实体来，然后定义实体在哪个聚合，实体的命令自然就会有他的聚合了。","user_name":"作者回复","user_name_real":"渔","uid":"1316268","ctime":1574777993,"ip_address":"","comment_id":155777,"utype":1}],"discussion_count":3,"race_medal":0,"score":"1574754326","product_id":100037301,"comment_content":"有个场景请教一下，推广活动是一个聚合，直播推广计划是一个聚合。那直接推广报名参加推广活动这个命令应该写在那个聚合里呢？","like_count":0,"discussions":[{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":475867,"discussion_content":"你先要按照步骤根据命令找出实体来，然后定义实体在哪个聚合，实体的命令自然就会有他的聚合了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574777993,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1100064,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c9/20/e4f1b17c.jpg","nickname":"zj","note":"","ucode":"E3329CCF694AC2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":61417,"discussion_content":"如果放在推广活动这个聚合中，我有个疑问，一个活动下会关联成千上万个直播推广聚合根ID。如果关联的数据量太大，又怎么办","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574778901,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1100064,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c9/20/e4f1b17c.jpg","nickname":"zj","note":"","ucode":"E3329CCF694AC2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":61401,"discussion_content":"整个业务场景是这样的：有推广活动模块，有直播推广计划模块。推广活动里涉及到活动的相关的设置，商品分类选择范围，及活动对应的优惠券；直播推广计划里涉及到直播推广实体，及这个实体关联的商品，直播推广佣金设置信息，预算等等信息。于是我将推广活动这个模块作为一个聚合，直播推广模块作为一个聚合。 \n     我考虑到直播推广参与推广活动这个命令（通俗点就是商品报名参加活动，只不过加了个直播推广这个概念设置下推广预算，在直播推广这个聚合中，商品只是值对象）。这个命令我觉得是属于直播推广这个聚合的，因为我觉得这个命令的主体是直播推广，如果没有直播推广这个实体，这个命令没有意思。\n    但从另外一个角度考虑，直播推广参与活动这个命令，也可以从活动主体出发，这个活动下报名了哪些直播推广（实际是商品）\n\n老师你觉得哪种合理呢。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574778653,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":155683,"user_name":"川杰","can_delete":false,"product_type":"c1","uid":1099750,"ip_address":"","ucode":"815211E1D698E6","user_header":"https://static001.geekbang.org/account/avatar/00/10/c7/e6/11f21cb4.jpg","comment_is_top":false,"comment_ctime":1574735894,"is_pvip":false,"replies":[{"id":"59780","content":"可以的。不必纠结于聚合根。聚合根的目的是为了保证聚合内的数据一致性。审批规则内不会出现这种请假。你可以用领域服务或者实体的方法。","user_name":"作者回复","user_name_real":"渔","uid":"1316268","ctime":1574747607,"ip_address":"","comment_id":155683,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1574735894","product_id":100037301,"comment_content":"审批规则，这个被设计为值类型，这个可以理解；但是如果我要对审批规则做增删改，怎么设计比较合理？在请假领域里新增一个：LeaveApproveRuleService，里面加上增删改的方法，可以吗？（其实就是传统的方式）","like_count":0,"discussions":[{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":475832,"discussion_content":"可以的。不必纠结于聚合根。聚合根的目的是为了保证聚合内的数据一致性。审批规则内不会出现这种请假。你可以用领域服务或者实体的方法。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574747607,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":155619,"user_name":"乘风","can_delete":false,"product_type":"c1","uid":1310814,"ip_address":"","ucode":"51C1BCC1701BDA","user_header":"https://static001.geekbang.org/account/avatar/00/14/00/5e/73dd7bf6.jpg","comment_is_top":false,"comment_ctime":1574729350,"is_pvip":false,"replies":[{"id":"59708","content":"这里一个人可能会有多级组织关系，比如项目经理，处室领导，部门领导等等。中间还会查询过滤，所以设计为实体。","user_name":"作者回复","user_name_real":"渔","uid":"1316268","ctime":1574734873,"ip_address":"","comment_id":155619,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1574729350","product_id":100037301,"comment_content":"请问确定实体的关键是什么?为什么组织关系是实体而非值对象?","like_count":0,"discussions":[{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":475808,"discussion_content":"这里一个人可能会有多级组织关系，比如项目经理，处室领导，部门领导等等。中间还会查询过滤，所以设计为实体。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574734873,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":155314,"user_name":"宝宝太喜欢极客时间了","can_delete":false,"product_type":"c1","uid":1215152,"ip_address":"","ucode":"9CDB679C257612","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eoOGZ6lbHiboIZMN9USbeutnmCWBahVLtSlKlIENKvrZQCUQzpzeZQOxTntIkBUeDk6qZUPdqmfKrQ/132","comment_is_top":false,"comment_ctime":1574677544,"is_pvip":false,"replies":[{"id":"59600","content":"visio","user_name":"作者回复","user_name_real":"渔","uid":"1316268","ctime":1574678844,"ip_address":"","comment_id":155314,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1574677544","product_id":100037301,"comment_content":"老师，图用什么工具画的","like_count":0,"discussions":[{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":475723,"discussion_content":"visio","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574678844,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":155279,"user_name":"FIGNT","can_delete":false,"product_type":"c1","uid":1540988,"ip_address":"","ucode":"D9DB185AE9E67C","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKZ16iaIia0029oI1Qh5NicibpbTiaBAaCOPYXoLplKHr6uQ2rSVxPZanBvpMcL2NuhwKQYCFnaHP5tedQ/132","comment_is_top":false,"comment_ctime":1574673776,"is_pvip":false,"replies":[{"id":"59594","content":"1、审批规则一般都是一些配置信息，作为数据库实体，它可以批量导入。作为领域对象一般它只提供查询服务。作为查询服务，放领域服务里也是可以的。<br>2、没必要再新建一个聚合了，直接放请假聚合就可以了，它的生命周期不受请假聚合根管理。<br>3、你可以尝试让项目团队的需求分析人员参与进来。<br>","user_name":"作者回复","user_name_real":"渔","uid":"1316268","ctime":1574674776,"ip_address":"","comment_id":155279,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1574673776","product_id":100037301,"comment_content":"1. 文章中说审批规则值对象有查询审批规则方法，查询动作放在值对象里？放在领域服务里可以吗？哪个更好呢？<br>2. 比如现在需要修改审批规则，如何做呢？需要新建一个聚合吗？<br>3. 设计领域模型的时候总是纠结，可能是不了解业务吧，业务人员不参与进来真的很难做。设计都是开发做。而且还不了解业务，这样能做好吗？","like_count":0,"discussions":[{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":475711,"discussion_content":"1、审批规则一般都是一些配置信息，作为数据库实体，它可以批量导入。作为领域对象一般它只提供查询服务。作为查询服务，放领域服务里也是可以的。\n2、没必要再新建一个聚合了，直接放请假聚合就可以了，它的生命周期不受请假聚合根管理。\n3、你可以尝试让项目团队的需求分析人员参与进来。\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574674776,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":155229,"user_name":"花落菩提","can_delete":false,"product_type":"c1","uid":1019958,"ip_address":"","ucode":"B297448E82DEFC","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJ9oglNbMCiauibXTw8KbpxhSEboDMdbRyHN1fK3EEj19KbQRlvj8GXqw5g9r2MibPlmlzqqGBXSsteA/132","comment_is_top":false,"comment_ctime":1574668735,"is_pvip":true,"replies":[{"id":"59595","content":"我在第19节会讲到遗留系统的设计策略。","user_name":"作者回复","user_name_real":"渔","uid":"1316268","ctime":1574674831,"ip_address":"","comment_id":155229,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1574668735","product_id":100037301,"comment_content":"老师，可不可以分享一些基于DDD思想重新设计老的单体系统的案例呢，很多遗留的老系统都是单体系统系统，学习了很多DDD的理论知识还是感觉无从下手，希望可以借鉴一些实际案例，谢谢","like_count":0,"discussions":[{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":475697,"discussion_content":"我在第19节会讲到遗留系统的设计策略。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574674831,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":155204,"user_name":"张迪","can_delete":false,"product_type":"c1","uid":1104835,"ip_address":"","ucode":"6A5D44999A0FEA","user_header":"https://static001.geekbang.org/account/avatar/00/10/db/c3/e11adfe8.jpg","comment_is_top":false,"comment_ctime":1574662561,"is_pvip":false,"replies":[{"id":"59580","content":"领域建模的时候没必要。在微服务设计的时候要考虑。","user_name":"作者回复","user_name_real":"渔","uid":"1316268","ctime":1574670730,"ip_address":"","comment_id":155204,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1574662561","product_id":100037301,"comment_content":"例如我们人员实体有很多值对象信息（数据库中有很多字段），例如身份证上面的所有信息，地址信息，头像信息等等，这些字段有几十个，是否在领域模型中全部要列举出来？","like_count":0,"discussions":[{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":475690,"discussion_content":"领域建模的时候没必要。在微服务设计的时候要考虑。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574670730,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":155201,"user_name":"张迪","can_delete":false,"product_type":"c1","uid":1104835,"ip_address":"","ucode":"6A5D44999A0FEA","user_header":"https://static001.geekbang.org/account/avatar/00/10/db/c3/e11adfe8.jpg","comment_is_top":false,"comment_ctime":1574661866,"is_pvip":false,"replies":[{"id":"59581","content":"因为审批规则在查询后。会在后续的审批流程中多次使用，因此将这部分数据设计为值对象，保存到请假单中。如果后面请假单信息修改，影响到审批规则，会整体替换原来的审批规则数据。所以将它设计为值对象。","user_name":"作者回复","user_name_real":"渔","uid":"1316268","ctime":1574670858,"ip_address":"","comment_id":155201,"utype":1}],"discussion_count":3,"race_medal":0,"score":"1574661866","product_id":100037301,"comment_content":"审批规则为什么是审批单的值对象，规则不是个实体吗？ ","like_count":0,"discussions":[{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":475688,"discussion_content":"因为审批规则在查询后。会在后续的审批流程中多次使用，因此将这部分数据设计为值对象，保存到请假单中。如果后面请假单信息修改，影响到审批规则，会整体替换原来的审批规则数据。所以将它设计为值对象。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574670858,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1108505,"avatar":"https://static001.geekbang.org/account/avatar/00/10/ea/19/14018371.jpg","nickname":"瓜瓜","note":"","ucode":"F90A5135A9BB4B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":61113,"discussion_content":"还有一个原因是审批规则可能会修改，现在的审批规则不一定是以后的审批负责，就像电商商品打折时，我们已买清单里面的商品价格是价格的快照，而不是又商品id拿出来的价格。此处的快照可以理解为值对象。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574773300,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":1108505,"avatar":"https://static001.geekbang.org/account/avatar/00/10/ea/19/14018371.jpg","nickname":"瓜瓜","note":"","ucode":"F90A5135A9BB4B","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":61966,"discussion_content":"是这样的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574808867,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":61113,"ip_address":""},"score":61966,"extra":""}]}]},{"had_liked":false,"id":155136,"user_name":"MaLu","can_delete":false,"product_type":"c1","uid":1083559,"ip_address":"","ucode":"A5E900B6B94FB9","user_header":"https://static001.geekbang.org/account/avatar/00/10/88/a7/fb383ef7.jpg","comment_is_top":false,"comment_ctime":1574650140,"is_pvip":false,"replies":[{"id":"59584","content":"值对象的设计可以灵活处理。将它设计为实体也是没有问题的。<br>需要根据你的业务场景，看看是否适合设计为值对象。<br>如果这些数据没有ID和生命周期，在修改时是整体替换，也不需要基于它做统计分析，你就可以将它设计为值对象。","user_name":"作者回复","user_name_real":"渔","uid":"1316268","ctime":1574671117,"ip_address":"","comment_id":155136,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1574650140","product_id":100037301,"comment_content":"值对象，是否可以直接用entity代替 or 专门定义对应的值对象","like_count":0,"discussions":[{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":475668,"discussion_content":"值对象的设计可以灵活处理。将它设计为实体也是没有问题的。\n需要根据你的业务场景，看看是否适合设计为值对象。\n如果这些数据没有ID和生命周期，在修改时是整体替换，也不需要基于它做统计分析，你就可以将它设计为值对象。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574671117,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":155074,"user_name":"William.加","can_delete":false,"product_type":"c1","uid":1211450,"ip_address":"","ucode":"300FFC09DEE243","user_header":"https://static001.geekbang.org/account/avatar/00/12/7c/3a/5140a8b9.jpg","comment_is_top":false,"comment_ctime":1574643366,"is_pvip":false,"replies":[{"id":"59511","content":"传统的测试方法不一定代表不好哈。不同的团队可以选择自己合适的方法。","user_name":"作者回复","user_name_real":"渔","uid":"1316268","ctime":1574650927,"ip_address":"","comment_id":155074,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1574643366","product_id":100037301,"comment_content":"老师，文中说开发完后编写单元测试用例，这是不是违背了TDD思想呢？","like_count":0,"discussions":[{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":475654,"discussion_content":"传统的测试方法不一定代表不好哈。不同的团队可以选择自己合适的方法。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574650927,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":155027,"user_name":"北天魔狼","can_delete":false,"product_type":"c1","uid":1188144,"ip_address":"","ucode":"C22623ECEB8DBA","user_header":"https://static001.geekbang.org/account/avatar/00/12/21/30/8ecce1e1.jpg","comment_is_top":false,"comment_ctime":1574638873,"is_pvip":true,"replies":[{"id":"59513","content":"不错哈！看来领悟到精髓了哈。","user_name":"作者回复","user_name_real":"渔","uid":"1316268","ctime":1574651068,"ip_address":"","comment_id":155027,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1574638873","product_id":100037301,"comment_content":"依赖关系那张图印证了我现在项目的所有想法。只有值对象的应用不太明了，我的项目出来值对象应用的地方很少，我觉得我需要去补补课。","like_count":0,"discussions":[{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":475639,"discussion_content":"不错哈！看来领悟到精髓了哈。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574651068,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]}]}