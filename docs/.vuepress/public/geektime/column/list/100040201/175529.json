{"id":175529,"title":"09丨软件设计实践：如何使用UML完成一个设计文档？","content":"<p>在上一篇文章中，我们讨论了为什么要建模，以及建模的4+1视图模型，4+1视图模型很好地向我们展示了如何对一个软件的不同方面用不同的模型图进行建模与设计，以完整描述一个软件的业务场景与技术实现。但是软件开发是有阶段性的，在不同的开发阶段用不同的模型图描述业务场景与设计思路，在不同阶段输出不同的设计文档，对于现实的开发更有实践意义。</p><p>软件建模与设计过程可以拆分成需求分析、概要设计和详细设计三个阶段。UML规范包含了十多种模型图，常用的有7种：类图、序列图、组件图、部署图、用例图、状态图和活动图。下面我们讨论如何画这7种模型图，以及如何在需求分析、概要设计、详细设计三个阶段使用这7种模型输出合适的设计文档。</p><h2>类图</h2><p>类图是最常见的UML图形，用来描述类的特性和类之间的静态关系。</p><p>一个类包含三个部分：类的名字、类的属性列表和类的方法列表。类之间有6种静态关系：关联、依赖、组合、聚合、继承、泛化。把相关的一组类及其关系用一张图画出来，就是类图。</p><p>类图主要是在<strong>详细设计阶段</strong>画，如果类图已经设计出来了，那么开发工程师只需要按照类图实现代码就可以了，只要类方法的逻辑不是太复杂，不同的工程师实现出来的代码几乎是一样的，这样可以保证软件的规范、统一。在实践中，我们通常不需要把一个软件所有的类都画出来，把核心的、有代表性的、有一定技术难度的类图画出来，一般就可以了。</p><!-- [[[read_end]]] --><p><img src=\"https://static001.geekbang.org/resource/image/84/52/84755193120d23e06e098642185bf152.png?wh=752*148\" alt=\"\"><br>\n除了在详细设计阶段画类图，在<strong>需求分析阶段</strong>，也可以将关键的领域模型对象用类图画出来，在这个阶段中，我们需要关注的是领域对象的识别及其关系，所以用简化的类图来描述，只画出类的名字及关系就可以了。</p><h2>序列图</h2><p>类图之外，另一种常用的图是序列图，类图描述类之间的静态关系，序列图则用来描述参与者之间的动态调用关系。</p><p>每个参与者有一条垂直向下的生命线，这条线用虚线表示，而参与者之间的消息也从上到下表示其调用的前后顺序关系，这正是序列图这个词的由来。每个生命线都有一个激活条，只有在参与者活动的时候才是激活的。</p><p>序列图通常用于表示对象之间的交互，这个对象可以是类对象，也可以是更大粒度的参与者，比如组件、服务器、子系统等，总之，只要是描述不同参与者之间交互的，都可以使用序列图，也就是说，在软<strong>件设计的不同阶段</strong>，都可以画序列图。</p><h2>组件图</h2><p>组件是比类粒度更大的设计元素，一个组件中通常包含很多个类。组件图有的时候和包图的用途比较接近，组件图通常用来描述物理上的组件，比如一个JAR，一个DLL等等。在实践中，我们进行模块设计的时候更多的是用组件图。</p><p><img src=\"https://static001.geekbang.org/resource/image/5d/8d/5d4e41aa7769a011ef2bb9f22ee9808d.png?wh=874*598\" alt=\"\"><br>\n组件图描述组件之间的静态关系，主要是依赖关系，如果想要描述组件之间的动态调用关系，可以使用组件序列图，以组件作为参与者，描述组件之间的消息调用关系。</p><p>因为组件的粒度比较粗，通常用以描述和设计软件的模块及其之间的关系，需要在设计早期阶段就画出来，因此组件图一般用在<strong>概要设计阶段</strong>。</p><h2>部署图</h2><p>部署图描述软件系统的最终部署情况，比如需要部署多少服务器，关键组件都部署在哪些服务器上。</p><p><img src=\"https://static001.geekbang.org/resource/image/32/0c/32931c58184b79744efa559bf4e0b00c.png?wh=726*350\" alt=\"\"><br>\n部署图是软件系统最终物理呈现的蓝图，根据部署图，所有相关者，诸如客户、老板、工程师都能清晰地了解到最终运行的系统在物理上是什么样子，和现有的系统服务器的关系，和第三方服务器的关系。根据部署图，还可以估算服务器和第三方软件的采购成本。</p><p>因此部署图是整个软件设计模型中，比较宏观的一种图，是在设计早期就需要画的一种模型图。根据部署图，各方可以讨论对这个方案是否认可。只有对部署图达成共识，才能继续后面的细节设计。部署图主要用在<strong>概要设计阶段</strong>。</p><h2>用例图</h2><p>用例图主要用在<strong>需求分析阶段</strong>，通过反映用户和软件系统的交互，描述系统的功能需求。</p><p><img src=\"https://static001.geekbang.org/resource/image/b7/0e/b79540c40111f3be97fc0b81d5a3060e.png?wh=374*326\" alt=\"\"><br>\n图中小人形象的元素，被称为角色，角色可以是人，也可以是其他的系统。系统的功能可能会很复杂，所以一张用例图可能只包含其中一小部分功能，这些功能被一个矩形框框起来，这个矩形框被称为用例的边界。框里的椭圆表示一个一个的功能，功能之间可以调用依赖，也可以进行功能扩展。</p><p>因为用例图中功能描述比较简单，通常还需要对用例图配以文字说明，形成需求文档。</p><h2>状态图</h2><p>状态图用来展示单个对象生命周期的状态变迁。</p><p>业务系统中，很多重要的领域对象都有比较复杂的状态变迁，比如账号，有创建状态、激活状态、冻结状态、欠费状态等等各种状态。此外，用户、订单、商品、红包这些常见的领域模型都有多种状态。</p><p>这些状态的变迁描述可以在用例图中用文字描述，随着角色的各种操作而改变，但是用这种方式描述，状态散乱在各处，不要说开发的时候容易搞错，就是产品经理自己在设计的时候，也容易搞错对象的状态变迁。</p><p>UML的状态图可以很好地解决这一问题，一张状态图描述一个对象生命周期的各种状态，及其变迁的关系。如图所示，门的状态有开opened、关closed和锁locked三种，状态与变迁关系用一张状态图就可以搞定。</p><p><img src=\"https://static001.geekbang.org/resource/image/34/04/34ed399aa400f124ead77bad31468104.png?wh=694*280\" alt=\"\"><br>\n状态图要在<strong>需求分析阶段</strong>画，描述状态变迁的逻辑关系，在<strong>详细设计</strong>阶段也要画，这个时候，状态要用枚举值表示，以指导具体的开发。</p><h2>活动图</h2><p>活动图主要用来描述过程逻辑和业务流程。UML中没有流程图，很多时候，人们用活动图代替流程图。</p><p><img src=\"https://static001.geekbang.org/resource/image/97/07/976fdc5c09c37d7b547d6c5d64bea107.png?wh=864*548\" alt=\"\"><br>\n活动图和早期流程图的图形元素也很接近，实心圆代表流程开始，空心圆代表流程结束，圆角矩形表示活动，菱形表示分支判断。</p><p>此外，活动图引入了一个重要的概念——泳道。活动图可以根据活动的范围，将活动根据领域、系统和角色等划分到不同的泳道中，使流程边界更加清晰。</p><p>活动图也比较有普适性，可以在<strong>需求分析阶段</strong>描述业务流程，也可以在<strong>概要设计阶段</strong>描述子系统和组件的交互，还可以在<strong>详细设计阶段</strong>描述一个类方法内部的计算流程。</p><h2>使用合适的UML模型构建一个设计文档</h2><p>UML模型图本身并不复杂，几分钟的时间就可以学习一个模型图的画法。但难的是如何在合适的场合下用正确的UML模型表达自己的设计意图，形成一套完整的软件模型，进而组织成一个言之有物，层次分明，既可以指导开发，又可以在团队内外达成共识的设计文档。</p><p>下面我们就从软件设计的不同阶段这一维度，重新梳理下如何使用正确的模型进行软件建模。</p><p>在<strong>需求分析阶段</strong>，主要是通过用例图来描述系统的功能与使用场景；对于关键的业务流程，可以通过活动图描述；如果在需求阶段就提出要和现有的某些子系统整合，那么可以通过时序图描述新系统和原来的子系统的调用关系；可以通过简化的类图进行领域模型抽象，并描述核心领域对象之间的关系；如果某些对象内部会有复杂的状态变化，比如用户、订单这些，可以用状态图进行描述。</p><p>在<strong>概要设计阶段</strong>，通过部署图描述系统最终的物理蓝图；通过组件图以及组件时序图设计软件主要模块及其关系；还可以通过组件活动图描述组件间的流程逻辑。</p><p>在<strong>详细设计阶段</strong>，主要输出的就是类图和类的时序图，指导最终的代码开发，如果某个类方法内部有比较复杂的逻辑，那么可以用画方法的活动图进行描述。</p><p>下一篇文章我会通过一个示例模板为你展示设计文档的写法和UML模型在文档中的应用。</p><h2>小结</h2><p>UML建模可以很复杂，也可以很简单，简单掌握类图、时序图、组件图、部署图、用例图、状态图、活动图这7种模型图，根据场景的不同，灵活在需求分析、概要设计和详细设计阶段绘制对应的模型图，可以实实在在地做好软件建模，搞好系统设计，做一个掌控局面、引领技术团队的架构师。</p><p>画UML的工具，可以是很复杂的，用像EA这样的大型软件设计工具，不过是收费的，也可以是draw.io这样在线、免费的工具，一般来说，都建议先从简单的用起。</p><h2>思考题</h2><p>你现在开发的软件是否会用到UML建模呢？如果没有，你觉得应该画哪些UML模型？又该如何画呢？</p><p>欢迎你在评论区写下你的思考，我会和你一起交流，也欢迎把这篇文章分享给你的朋友或者同事，一起交流进步吧！</p>","neighbors":{"left":{"article_title":"08丨软件设计的方法论：软件为什么要建模？","id":174955},"right":{"article_title":"10 | 软件设计的目的：糟糕的程序员比优秀的程序员差在哪里？","id":177870}},"comments":[{"had_liked":false,"id":160040,"user_name":"To be is to do","can_delete":false,"product_type":"c1","uid":1152942,"ip_address":"","ucode":"F4AA8FC9DDF04E","user_header":"https://static001.geekbang.org/account/avatar/00/11/97/ae/08eb3aad.jpg","comment_is_top":false,"comment_ctime":1575859847,"is_pvip":false,"replies":[{"id":"61088","content":"http:&#47;&#47;astah.net&#47; <br><br>https:&#47;&#47;www.draw.io&#47;","user_name":"作者回复","user_name_real":"李智慧","uid":"1007349","ctime":1575870597,"ip_address":"","comment_id":160040,"utype":1}],"discussion_count":5,"race_medal":0,"score":"61705401991","product_id":100040201,"comment_content":"老师,可以推荐一下 mac上做UML,时序图的软件吗?","like_count":15,"discussions":[{"author":{"id":1007349,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/5e/f5/018907ac.jpg","nickname":"李智慧","note":"","ucode":"8C9980C438AFD1","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":477242,"discussion_content":"http://astah.net/ \n\nhttps://www.draw.io/","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1575870597,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1359701,"avatar":"https://static001.geekbang.org/account/avatar/00/14/bf/55/198c6104.jpg","nickname":"小伟","note":"","ucode":"124953423491E2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":160254,"discussion_content":"processon","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1580782053,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1009813,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/68/95/ab15bd6b.jpg","nickname":"钟涵","note":"","ucode":"CE9041F1D94A2D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":333152,"discussion_content":"Ominigraffle","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1607442828,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2583763,"avatar":"https://static001.geekbang.org/account/avatar/00/27/6c/d3/e295d028.jpg","nickname":"杨涛-Undefined","note":"","ucode":"0F9856675871E7","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":370714,"discussion_content":"processon.com","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1619515487,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1424264,"avatar":"https://static001.geekbang.org/account/avatar/00/15/bb/88/2d4b475c.jpg","nickname":"黄老板","note":"","ucode":"7C420E7FDFEA17","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":199182,"discussion_content":"用过，这个不错，还是中文的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1583567108,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":160070,"user_name":"台风骆骆","can_delete":false,"product_type":"c1","uid":1170748,"ip_address":"","ucode":"891D3599644ABD","user_header":"https://static001.geekbang.org/account/avatar/00/11/dd/3c/a595eb2a.jpg","comment_is_top":false,"comment_ctime":1575863854,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"57410438702","product_id":100040201,"comment_content":"本章学习总结：<br>1、基本上开发分为需求分析、概要设计、详细设计阶段。<br>2、常用的UML图有类图、时序图、活动图、用例图、组件图、部署图、状态图七种。<br>     类图是用来描述类之间的关系以及类中包含的属性和方法的，可以在需求分析阶段的领域模型用简化的类图来表示，详细设计阶段详细描述类图。<br>     时序图是用来描述类、组件、模块之间的调用关系的，可以在需求分析、概要设计、详细设计都用得到。<br>     活动图则是表达了过程和业务逻辑的，有点像流程图，在三个阶段都可以应用。<br>     用例图是用来表达用户与软件系统的交互，用来表达这个软件系统的功能需求。一般用于需求分析。<br>     组件图是表达了各个组件之间的关系，一般是依赖关系，是静态的，如果要表达调用关系需要用时序图或活动图，一般用于概要设计阶段。<br>     部署图是用于表达物理上面的软件部署情况，一般用于概要设计阶段。<br>     状态图则是表达某个组件或某个类的状态迁移情况。可以用于详细设计和需求分析阶段。<br>3、不同阶段需要描述的东西不一样，用的图也不一样相同。","like_count":14},{"had_liked":false,"id":159938,"user_name":"Paul Shan","can_delete":false,"product_type":"c1","uid":1593140,"ip_address":"","ucode":"32D99989028284","user_header":"","comment_is_top":false,"comment_ctime":1575849185,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"31640620257","product_id":100040201,"comment_content":"我现在自己写代码基本不画图，主要因为写的软件不够复杂（Android开发）。<br>我画类图和时序图主要是用来分析别人写的代码，画得过程中往往能搞清楚代码的意图。","like_count":8},{"had_liked":false,"id":160312,"user_name":"golangboy","can_delete":false,"product_type":"c1","uid":1241559,"ip_address":"","ucode":"7632634FB022F5","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/OgopVGSkwlFuyHV0hWtzxjEAQ8qhwQuTeY9BdvXDDTj2JH5d9ZI1hJBnlgaoUcKtrceWVlUejJEUdjCjoKSUAQ/132","comment_is_top":false,"comment_ctime":1575933873,"is_pvip":false,"replies":[{"id":"61190","content":"1 还可以画时序图<br>2 是的。不过有的设计模式在概要设计阶段就需要了，像策略模式，可能会影响整个系统的架构<br>3 越是随时要变的，越是更要有全局视野，不然变来变去迷失了。你可以先设计一个你认为的蓝图规划，然后随着变化调整你的设计。","user_name":"作者回复","user_name_real":"李智慧","uid":"1007349","ctime":1575939358,"ip_address":"","comment_id":160312,"utype":1}],"discussion_count":2,"race_medal":0,"score":"23050770353","product_id":100040201,"comment_content":"老师，<br>1.设计模式的图例只适合画静态类图？<br>2.详细设计阶段是要确定软件的细节和逻辑的基本框架，用设计模式可以提高程序的扩展性，我这样理解对吗？<br>3.实际开发中，有很多都是那种需求都不明确，探索性的，随时要变，甚至推倒重来。像这种情况，我也不可能一开始就有全局的视野，有啥好的实践经验或者推荐？","like_count":6,"discussions":[{"author":{"id":1007349,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/5e/f5/018907ac.jpg","nickname":"李智慧","note":"","ucode":"8C9980C438AFD1","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":477332,"discussion_content":"1 还可以画时序图\n2 是的。不过有的设计模式在概要设计阶段就需要了，像策略模式，可能会影响整个系统的架构\n3 越是随时要变的，越是更要有全局视野，不然变来变去迷失了。你可以先设计一个你认为的蓝图规划，然后随着变化调整你的设计。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1575939358,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1359701,"avatar":"https://static001.geekbang.org/account/avatar/00/14/bf/55/198c6104.jpg","nickname":"小伟","note":"","ucode":"124953423491E2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":160261,"discussion_content":"第一时间找到核心价值，坚持100年不变，其他的都可以变。\n比如你的核心价值是在线付费课程，那么就要重心放在课程内容上，而不要把重点放在评论功能上。每次需要变化的时候都要评估对于课程内容有没有增益，没有的话就不要变化。等你的核心价值稳定了，再做一些增值功能，如像卖实物礼品等。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1580782501,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":172752,"user_name":"睡浴缸的人","can_delete":false,"product_type":"c1","uid":1194395,"ip_address":"","ucode":"AAA7476707D82F","user_header":"https://static001.geekbang.org/account/avatar/00/12/39/9b/fc21f943.jpg","comment_is_top":false,"comment_ctime":1579272015,"is_pvip":false,"replies":[{"id":"67028","content":"😁","user_name":"作者回复","user_name_real":"李智慧","uid":"1007349","ctime":1579316671,"ip_address":"","comment_id":172752,"utype":1}],"discussion_count":1,"race_medal":0,"score":"14464173903","product_id":100040201,"comment_content":"以前做业务开发的时候被业务逼着走，没有什么意识。后来做独自坐通用模块时，感觉这样不行，看了点软件工程的书，慢慢开始画UML图进行设计，设计完后有时候写代码简直如尿奔~","like_count":4,"discussions":[{"author":{"id":1007349,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/5e/f5/018907ac.jpg","nickname":"李智慧","note":"","ucode":"8C9980C438AFD1","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":481839,"discussion_content":"😁","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579316671,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":164712,"user_name":"alex","can_delete":false,"product_type":"c1","uid":1173753,"ip_address":"","ucode":"C7572007957F1E","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eo435IStLENgDxYPDykxxE9CP6Tye3xPQ584UeNqW21pU62ic6vibrGpNjKVbhulVehVG5IGvicSTaZg/132","comment_is_top":false,"comment_ctime":1577080244,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"10167014836","product_id":100040201,"comment_content":"活动图跟时序图这两个有点分不清，老师能给讲下区分么？","like_count":2,"discussions":[{"author":{"id":1350159,"avatar":"https://static001.geekbang.org/account/avatar/00/14/9a/0f/da7ed75a.jpg","nickname":"芒果少侠","note":"","ucode":"98D0BBB52BB80F","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":212289,"discussion_content":"时序图可以清晰看到类对象/组件间的调用情况和顺序，但是活动图只是业务步骤的简单抽象，看不出来每一个步骤里面有哪个类对象/组件参与了。","likes_number":4,"is_delete":false,"is_hidden":false,"ctime":1584955847,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":159981,"user_name":"Heidi","can_delete":false,"product_type":"c1","uid":1642586,"ip_address":"","ucode":"2751FD284068AA","user_header":"https://static001.geekbang.org/account/avatar/00/19/10/5a/3411221e.jpg","comment_is_top":false,"comment_ctime":1575853860,"is_pvip":true,"discussion_count":2,"race_medal":0,"score":"10165788452","product_id":100040201,"comment_content":"计算机类专业大一大二内容","like_count":2,"discussions":[{"author":{"id":1019254,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/8d/76/994a9929.jpg","nickname":"OlafOO","note":"","ucode":"105F8B194ED37B","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":216924,"discussion_content":"螺旋式成长，内容是虽然一样的内容，但高度已经不一样了，走向资深=走向基础","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1585492266,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1039475,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/dc/73/9ab38243.jpg","nickname":"xiaoxionga","note":"","ucode":"2BB02B54C31EBF","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":76892,"discussion_content":"一晃几年过去了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1575865500,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":254027,"user_name":"丁丁历险记","can_delete":false,"product_type":"c1","uid":1661704,"ip_address":"","ucode":"A43829E454C067","user_header":"https://static001.geekbang.org/account/avatar/00/19/5b/08/b0b0db05.jpg","comment_is_top":false,"comment_ctime":1603021544,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5897988840","product_id":100040201,"comment_content":"太多的细节，没法用这些来描述。往往是客户在反复使用后调整出来的。","like_count":1},{"had_liked":false,"id":242507,"user_name":"杯莫停","can_delete":false,"product_type":"c1","uid":1759325,"ip_address":"","ucode":"4FA1D5CBBEF702","user_header":"https://static001.geekbang.org/account/avatar/00/1a/d8/5d/07dfb3b5.jpg","comment_is_top":false,"comment_ctime":1597744207,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"5892711503","product_id":100040201,"comment_content":"设计一个东西，先画出图，按照流程去实现。有些像逻辑判断，结果导向会清晰很多。Bug多都是因为没有一个全局概念，写代码耦合性越来越高。还有就是画图比较有说服力。","like_count":1},{"had_liked":false,"id":178504,"user_name":"卡特","can_delete":false,"product_type":"c1","uid":1060491,"ip_address":"","ucode":"FF63677089E701","user_header":"https://static001.geekbang.org/account/avatar/00/10/2e/8b/32a8c5a0.jpg","comment_is_top":false,"comment_ctime":1581725820,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"5876693116","product_id":100040201,"comment_content":"小结一下<br>uml图主要有7类<br>我用的mac,工具astash 或者planuml<br>从需求分析，概要设计，详细设计依次画这些图<br>1，用例图 体现角色和软件系统的功能<br>2，活动图 体现核心流程<br>3， 状态图 体现核心状态变化<br>4，部署图 软件的物理结构<br>5，组件图 软件的模块结构<br>6，时序图 核心和逻辑<br>7，类图 领域模型和具体功能设计<br><br>可以比较好的为软件建模","like_count":2},{"had_liked":false,"id":174075,"user_name":"realwuxing","can_delete":false,"product_type":"c1","uid":1276397,"ip_address":"","ucode":"AFDF169A4E0328","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJowicLVgt4uscjBFa2jG7WyBZ0G9ID9JibHdCiafpl7j01txMMXlEiayQjNkw70QKtJAtJ35XAI5voCg/132","comment_is_top":false,"comment_ctime":1579948390,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5874915686","product_id":100040201,"comment_content":"李老师您好，请问架构设计中一般会有的总体设计分层图，技术架构分层图以及逻辑架构图(系统之间的关系) ，这些所起的主要作用？","like_count":1},{"had_liked":false,"id":163430,"user_name":"灰灰","can_delete":false,"product_type":"c1","uid":1122397,"ip_address":"","ucode":"907A2FD339E158","user_header":"https://static001.geekbang.org/account/avatar/00/11/20/5d/69170b96.jpg","comment_is_top":false,"comment_ctime":1576720819,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5871688115","product_id":100040201,"comment_content":"打卡","like_count":1},{"had_liked":false,"id":160124,"user_name":"秦凯","can_delete":false,"product_type":"c1","uid":1069307,"ip_address":"","ucode":"523228E55CE480","user_header":"https://static001.geekbang.org/account/avatar/00/10/50/fb/872e2cf1.jpg","comment_is_top":false,"comment_ctime":1575875383,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"5870842679","product_id":100040201,"comment_content":"接触到的项目基本都没有这样全面可以窥探系统全貌的架构设计文档。而且实际工作中，项目组小伙伴们接到各自的需求都是在各自的点上做开发，很少从面或体上面去考虑需求、设计和实现，这样就导致判断分支、冗余代码、不必要的复杂逻辑越来越多。大家有没有好的办法走出这种困境？","like_count":1,"discussions":[{"author":{"id":1019254,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/8d/76/994a9929.jpg","nickname":"OlafOO","note":"","ucode":"105F8B194ED37B","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":216933,"discussion_content":"现在这个专栏不就是好的办法么😄","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585492662,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1669674,"avatar":"https://static001.geekbang.org/account/avatar/00/19/7a/2a/88be6820.jpg","nickname":"郭帅印","note":"","ucode":"E07016642A7CEF","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":77137,"discussion_content":"看成了奏凯😂","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1575891220,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":298401,"user_name":"Peter","can_delete":false,"product_type":"c1","uid":2425556,"ip_address":"","ucode":"5E57A0FE948966","user_header":"https://static001.geekbang.org/account/avatar/00/25/02/d4/1e0bb504.jpg","comment_is_top":false,"comment_ctime":1624083828,"is_pvip":false,"replies":[{"id":"108330","content":"站在业务视角看：<br>用户和订单关联，但是不能说用户由订单组成。但是订单可以由订单项组成。<br>","user_name":"作者回复","user_name_real":"李智慧","uid":"1007349","ctime":1624240753,"ip_address":"","comment_id":298401,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1624083828","product_id":100040201,"comment_content":"一直有个问题没搞清楚，就是关联关系和组合关系之间的关系区别是什么，我怎么觉得都是类A中包含一个成员变量类B","like_count":1,"discussions":[{"author":{"id":1007349,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/5e/f5/018907ac.jpg","nickname":"李智慧","note":"","ucode":"8C9980C438AFD1","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":522125,"discussion_content":"站在业务视角看：\n用户和订单关联，但是不能说用户由订单组成。但是订单可以由订单项组成。\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1624240753,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":283863,"user_name":"布拉姆","can_delete":false,"product_type":"c1","uid":1311125,"ip_address":"","ucode":"479FF27D73BCAD","user_header":"https://static001.geekbang.org/account/avatar/00/14/01/95/fd09e8a8.jpg","comment_is_top":false,"comment_ctime":1615964414,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1615964414","product_id":100040201,"comment_content":"组件是系统中遵循一组接口且提供实现的一个物理部件，通常指开发和运行时类的物理实现。表示实际存在的、物理的物件，可以是：源代码、子系统、动态链接库等，组件一般都包含很多类并实现很多接口。<br><br>子系统是组件，通常包括许多更小的组件，是一个大的组件。<br> <br>包多用于将类分组。类似于命名空间，在同一包中名字唯一。","like_count":0},{"had_liked":false,"id":281839,"user_name":"北极的大企鹅","can_delete":false,"product_type":"c1","uid":1045577,"ip_address":"","ucode":"8935346D08E109","user_header":"https://static001.geekbang.org/account/avatar/00/0f/f4/49/2add4f6b.jpg","comment_is_top":false,"comment_ctime":1614919161,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1614919161","product_id":100040201,"comment_content":"嗯不错啊<br>draw.io<br>processon都用过<br>现在用语雀文档画流程","like_count":0},{"had_liked":false,"id":248486,"user_name":"escray","can_delete":false,"product_type":"c1","uid":1020525,"ip_address":"","ucode":"1F4204930E47C4","user_header":"https://static001.geekbang.org/account/avatar/00/0f/92/6d/becd841a.jpg","comment_is_top":false,"comment_ctime":1600178148,"is_pvip":true,"discussion_count":0,"race_medal":1,"score":"1600178148","product_id":100040201,"comment_content":"我感觉类图不太实用，如果能够画出类图来，那么基本上代码也就写的差不多了。而且可能会遇到代码已经修改，但是设计文档中的类图已经过时的问题。好像也够工具可以直接从代码生成类图，以前 Visual Studio 就可以生成类图。<br><br>部署图估计是每一分架构设计里面都会有的，不过专栏里面画了两个立方体有点奇怪，我之前看到的至少会把数据库画成圆柱体。<br><br>用例图是我认为最有用的，特别是在需求分析，以及概要设计阶段。做一个项目，不论大小，至少应该先有一个用例图吧。<br><br>在我看来，序列图和状态图只有在遇到比较复杂的情况下，对于沟通或者整理思路很有用。但是如果用 Visio 或者其他工具可能会比较复杂，把时间都花在做图上，如果有可能，我倾向于手工或者白板画图，比较简单，并且利于修改。当然如果最后形成正式文档的时候，也可以花一些时间，美化一下。<br><br>UML 中没有流程图，但是有活动图，在我看来，活动图有点像“立体”的流程图。<br><br>估计最终在架构设计文档中还是会有流程图的，否则感觉缺了点什么。<br><br>之前的项目，在架构设计文档里面，为了撑门面，一般都会尽可能多的画图；在方案评审的时候，评委很多时候也会对图比较重视。但是也有一些项目，是先撸代码搞起来，在最后评审的时候才去补各种设计图。<br><br>如果让我来做架构师，那么用例图（场景）、组件图（逻辑）、部署图（物理）、活动图（过程）应该会有，好像还缺一个开发视图的。","like_count":0},{"had_liked":false,"id":242504,"user_name":"杯莫停","can_delete":false,"product_type":"c1","uid":1759325,"ip_address":"","ucode":"4FA1D5CBBEF702","user_header":"https://static001.geekbang.org/account/avatar/00/1a/d8/5d/07dfb3b5.jpg","comment_is_top":false,"comment_ctime":1597743780,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1597743780","product_id":100040201,"comment_content":"我们一般都是架构师一个PPT上面画些流程图，然后粗略讲讲，然后我们开发的时候就靠自己想象力了。","like_count":0},{"had_liked":false,"id":216438,"user_name":"Seven.Lin澤耿","can_delete":false,"product_type":"c1","uid":1181192,"ip_address":"","ucode":"4CAB732CD6F149","user_header":"https://static001.geekbang.org/account/avatar/00/12/06/08/855abb02.jpg","comment_is_top":false,"comment_ctime":1589259253,"is_pvip":false,"replies":[{"id":"80109","content":"👍","user_name":"作者回复","user_name_real":"李智慧","uid":"1007349","ctime":1589270548,"ip_address":"","comment_id":216438,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1589259253","product_id":100040201,"comment_content":"我们会画图，但是没按照规范，应该是四不像，但是也能用😂","like_count":1,"discussions":[{"author":{"id":1007349,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/5e/f5/018907ac.jpg","nickname":"李智慧","note":"","ucode":"8C9980C438AFD1","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":494815,"discussion_content":"👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1589270548,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":208090,"user_name":"vigo","can_delete":false,"product_type":"c1","uid":1086295,"ip_address":"","ucode":"036CEE5F3FABE7","user_header":"https://static001.geekbang.org/account/avatar/00/10/93/57/3ffdfc8d.jpg","comment_is_top":false,"comment_ctime":1587273398,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1587273398","product_id":100040201,"comment_content":"活动图 和 时序图 很相似","like_count":0,"discussions":[{"author":{"id":1169313,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJkeOAC8k7aPMfQZ4ickiavpfR9mTQs1wGhGtIicotzAoszE5qkLfFTabkDU2E39ovSgoibJ1IiaLXtGicg/132","nickname":"bigben","note":"","ucode":"DBD15A6C8E2590","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":298948,"discussion_content":"都有泳道而已","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1597487231,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":193734,"user_name":"芒果少侠","can_delete":false,"product_type":"c1","uid":1350159,"ip_address":"","ucode":"98D0BBB52BB80F","user_header":"https://static001.geekbang.org/account/avatar/00/14/9a/0f/da7ed75a.jpg","comment_is_top":false,"comment_ctime":1584956181,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1584956181","product_id":100040201,"comment_content":"思考题<br>你现在开发的软件是否会用到 UML 建模呢？如果没有，你觉得应该画哪些 UML 模型？又该如何画呢？<br>----<br>我的回答：目前在工作中基本用不到UML建模。这可能是因为我目前的开发任务比较简单，都是基于现有的大项目框架来进行新增需求或修改需求开发。系统部署的建模也暂时没有涉及到。<br>但我相信，随着工作的深入，我接触到的工作将会更上层，到时候，面对复杂业务场景，我只有提前做好软件建模设计工作，才能进一步着手的实际开售。","like_count":1},{"had_liked":false,"id":193181,"user_name":"苍茫","can_delete":false,"product_type":"c1","uid":1870015,"ip_address":"","ucode":"701DBEF4393218","user_header":"https://static001.geekbang.org/account/avatar/00/1c/88/bf/16ce4410.jpg","comment_is_top":false,"comment_ctime":1584885987,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1584885987","product_id":100040201,"comment_content":"听了大有收获","like_count":0},{"had_liked":false,"id":172063,"user_name":"Farewell丶","can_delete":false,"product_type":"c1","uid":1179565,"ip_address":"","ucode":"A0D69893C5375C","user_header":"https://static001.geekbang.org/account/avatar/00/11/ff/ad/5020a8c5.jpg","comment_is_top":false,"comment_ctime":1579080823,"is_pvip":false,"replies":[{"id":"66722","content":"谢谢指正，尽快修改~","user_name":"作者回复","user_name_real":"李智慧","uid":"1007349","ctime":1579089185,"ip_address":"","comment_id":172063,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1579080823","product_id":100040201,"comment_content":"&quot;流程图也比较有普适性，可以在需求分析阶段描述业务流程，也可以在概要设计阶段描述子系统和组件的交互，还可以在详细设计阶段描述一个类方法内部的计算流程。&quot; 应该是“活动图”，写错了。","like_count":0,"discussions":[{"author":{"id":1007349,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/5e/f5/018907ac.jpg","nickname":"李智慧","note":"","ucode":"8C9980C438AFD1","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":481607,"discussion_content":"谢谢指正，尽快修改~","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579089185,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":163070,"user_name":"靠人品去赢","can_delete":false,"product_type":"c1","uid":1301286,"ip_address":"","ucode":"7A20F9EBE847E1","user_header":"https://static001.geekbang.org/account/avatar/00/13/db/26/54f2c164.jpg","comment_is_top":false,"comment_ctime":1576652602,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1576652602","product_id":100040201,"comment_content":"这个我最常用序列图设计功能和UML设计数据库来着。。。。<br>总算有一份把把UML说的全一点文章了，最开始不怎么画图，但是设计到一个稍微复杂点的和别的系统有交互的功能从0到1，画一下序列图什么确实有帮助。把这个过程能梳理清楚一些，比直接写代码要头脑更清楚。","like_count":1},{"had_liked":false,"id":160101,"user_name":"许童童","can_delete":false,"product_type":"c1","uid":1003005,"ip_address":"","ucode":"4B799C0C6BC678","user_header":"https://static001.geekbang.org/account/avatar/00/0f/4d/fd/0aa0e39f.jpg","comment_is_top":false,"comment_ctime":1575870087,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1575870087","product_id":100040201,"comment_content":"登录了下 draw.io 确实是一个画图利器，业务中如果涉及到很复杂的功能需求，确实是需要画出UML图的，团队基于UML很容易达成共识，还可以指导开发。","like_count":0}]}