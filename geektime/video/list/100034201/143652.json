{"id":143652,"title":"32 | 存储数据结构之B+tree","content":"<p><strong>课件和Demo地址</strong></p><p><a href=\"https://gitee.com/geektime-geekbang/geekbang-zk-course\">https://gitee.com/geektime-geekbang/geekbang-zk-course</a></p>","comments":[{"had_liked":false,"id":275009,"user_name":"惘 闻","can_delete":false,"product_type":"c3","uid":1181650,"ip_address":"","ucode":"C5909F034BF072","user_header":"https://static001.geekbang.org/account/avatar/00/12/07/d2/0d7ee298.jpg","comment_is_top":false,"comment_ctime":1611275603,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":2,"product_id":100034201,"comment_content":"所说的树的高度就是指当树在磁盘中存放时,为了找到某个值需要访问磁盘的次数.此时树高度越小,访问磁盘的次数越少.","like_count":2},{"had_liked":false,"id":275008,"user_name":"惘 闻","can_delete":false,"product_type":"c3","uid":1181650,"ip_address":"","ucode":"C5909F034BF072","user_header":"https://static001.geekbang.org/account/avatar/00/12/07/d2/0d7ee298.jpg","comment_is_top":false,"comment_ctime":1611275407,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":2,"product_id":100034201,"comment_content":"树的高度和访问外部存储的次数有什么关系呢老师?","like_count":2},{"had_liked":false,"id":365734,"user_name":"Geek_e192d1","can_delete":false,"product_type":"c3","uid":2876075,"ip_address":"广东","ucode":"5ED5C031F69E87","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/6KqGYKQjgiae28TfeQKpWiciavCapwicnatudRticXsw947n8WWjboyHDRWCvZGz0HEwhrmsvPYiavkTMkwdviahGQtqw/132","comment_is_top":false,"comment_ctime":1672960706,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":2,"product_id":100034201,"comment_content":"二叉树快， btree访问磁盘次数少","like_count":0},{"had_liked":false,"id":229972,"user_name":"Dovelol","can_delete":false,"product_type":"c3","uid":1253384,"ip_address":"","ucode":"9B5DDF7720F307","user_header":"https://static001.geekbang.org/account/avatar/00/13/20/08/bc06bc69.jpg","comment_is_top":false,"comment_ctime":1593229279,"is_pvip":false,"replies":null,"discussion_count":3,"race_medal":0,"score":2,"product_id":100034201,"comment_content":"老师好，想问下，为啥b-tree就可以减少访问磁盘的次数呢，在同一层之间搜索很多节点的话不需要访问磁盘吗？那是怎么直接定位到对应节点的呢？","like_count":0,"discussions":[{"author":{"id":1239557,"avatar":"https://static001.geekbang.org/account/avatar/00/12/ea/05/c0d8014d.jpg","nickname":"一道阳光","note":"","ucode":"F35207CCCEC6E2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":300923,"discussion_content":"mysql的加载机制是数据页为单位，所以会一次性加载很多的叶子节点，这样定位的时候在内存种查找了，这个速度很快，当找到叶子节点后，叶子节点里有这个数据对应到磁盘里的索引，然后根据索引就去磁盘里找对应的数据就可以了。同样找到的数据加载到内存也是页单位，整个页的数据都会加载到内存种。所以这条数据所在的数据页里所有的数据都会加载到页里面。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1598321028,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1081083,"avatar":"https://static001.geekbang.org/account/avatar/00/10/7e/fb/f6152110.jpg","nickname":"叮咚叮咚","note":"","ucode":"1F950965A4421C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":573126,"discussion_content":"mysql使用B+tree减少磁盘访问次数是因为，B+tree的非叶子节点存储数据量和平衡二叉树数的非叶子节点存储的数据是不一样，B+tree的非叶子节点存储的数据非常少，所以在访问磁盘的时候，一个磁盘块存储的节点数量就更多，这样B+tree查找数据也就更快，磁盘的IO次数也就更少","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1653212385,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1920213,"avatar":"https://static001.geekbang.org/account/avatar/00/1d/4c/d5/d30c941c.jpg","nickname":"zhukovasky","note":"","ucode":"B79625AB0C6CF1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":379570,"discussion_content":"一道阳光已经说清楚了，非叶子节点会把页面号存在自己的空间中","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1623985364,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]}]}