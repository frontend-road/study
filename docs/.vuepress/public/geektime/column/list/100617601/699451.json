{"id":699451,"title":"03｜模型I/O：输入提示、调用模型、解析输出","content":"<p>你好，我是黄佳，欢迎来到LangChain实战课！</p><p>从这节课开始，我们将对LangChain中的六大核心组件一一进行详细的剖析。</p><p>模型，位于LangChain框架的最底层，它是基于语言模型构建的应用的<strong>核心元素</strong>，因为所谓LangChain应用开发，就是以LangChain作为框架，通过API调用大模型来解决具体问题的过程。</p><p>可以说，整个LangChain框架的逻辑都是由LLM这个发动机来驱动的。没有模型，LangChain这个框架也就失去了它存在的意义。那么这节课我们就详细讲讲模型，最后你会收获一个能够自动生成鲜花文案的应用程序。</p><p><img src=\"https://static001.geekbang.org/resource/image/76/c4/76619cf2f73ef200dd57cd16c0d55ec4.png?wh=1965x1363\" alt=\"\"></p><h2>Model I/O</h2><p>我们可以把对模型的使用过程拆解成三块，分别是<strong>输入提示</strong>（对应图中的Format）、<strong>调用模型</strong>（对应图中的Predict）和<strong>输出解析</strong>（对应图中的Parse）。这三块形成了一个整体，因此在LangChain中这个过程被统称为 <strong>Model I/O</strong>（Input/Output）。</p><p><img src=\"https://static001.geekbang.org/resource/image/ac/23/ac67214287154dcfbbf12d81086c8023.png?wh=4000x1536\" alt=\"\" title=\"Model I/O：从输入到输出\"></p><p>在模型 I/O的每个环节，LangChain都为咱们提供了模板和工具，快捷地形成调用各种语言模型的接口。</p><ol>\n<li><strong>提示模板</strong>：使用模型的第一个环节是把提示信息输入到模型中，你可以创建LangChain模板，根据实际需求动态选择不同的输入，针对特定的任务和应用调整输入。</li>\n<li><strong>语言模型</strong>：LangChain允许你通过通用接口来调用语言模型。这意味着无论你要使用的是哪种语言模型，都可以通过同一种方式进行调用，这样就提高了灵活性和便利性。</li>\n<li><strong>输出解析</strong>：LangChain还提供了从模型输出中提取信息的功能。通过输出解析器，你可以精确地从模型的输出中获取需要的信息，而不需要处理冗余或不相关的数据，更重要的是还可以把大模型给回的非结构化文本，转换成程序可以处理的结构化数据。</li>\n</ol><!-- [[[read_end]]] --><p>下面我们用示例的方式来深挖一下这三个环节。先来看看LangChain中提示模板的构建。</p><h2>提示模板</h2><p>语言模型是个无穷无尽的宝藏，人类的知识和智慧，好像都封装在了这个“魔盒”里面了。但是，怎样才能解锁其中的奥秘，那可就是仁者见仁智者见智了。所以，现在“提示工程”这个词特别流行，所谓Prompt Engineering，就是专门研究对大语言模型的提示构建。</p><p>我的观点是，使用大模型的场景千差万别，因此肯定不存在那么一两个神奇的模板，能够骗过所有模型，让它总能给你最想要的回答。然而，好的提示（其实也就是好的问题或指示啦），肯定能够让你在调用语言模型的时候事半功倍。</p><p>那其中的具体原则，不外乎吴恩达老师在他的<a href=\"https://learn.deeplearning.ai/login?redirect_course=chatgpt-prompt-eng\">提示工程课程</a>中所说的：</p><ol>\n<li>给予模型清晰明确的指示</li>\n<li>让模型慢慢地思考</li>\n</ol><p>说起来很简单，对吧？是的，道理总是简单，但是如何具体实践这些原则，又是个大问题。让我从创建一个简单的LangChain提示模板开始。</p><p>这里，我们希望为销售的每一种鲜花生成一段简介文案，那么每当你的员工或者顾客想了解某种鲜花时，调用该模板就会生成适合的文字。</p><p>这个提示模板的生成方式如下：</p><pre><code class=\"language-plain\"># 导入LangChain中的提示模板\nfrom langchain.prompts import PromptTemplate\n# 创建原始模板\ntemplate = \"\"\"您是一位专业的鲜花店文案撰写员。\\n\n对于售价为 {price} 元的 {flower_name} ，您能提供一个吸引人的简短描述吗？\n\"\"\"\n# 根据原始模板创建LangChain提示模板\nprompt = PromptTemplate.from_template(template) \n# 打印LangChain提示模板的内容\nprint(prompt)\n</code></pre><p>提示模板的具体内容如下：</p><pre><code class=\"language-plain\">input_variables=['flower_name', 'price'] \noutput_parser=None partial_variables={} \ntemplate='/\\n您是一位专业的鲜花店文案撰写员。\n\\n对于售价为 {price} 元的 {flower_name} ，您能提供一个吸引人的简短描述吗？\\n'\ntemplate_format='f-string' \nvalidate_template=True\n</code></pre><p>在这里，所谓“模板”就是一段描述某种鲜花的文本格式，它是一个 f-string，其中有两个变量 {flower_name} 和 {price} 表示花的名称和价格，这两个值是模板里面的占位符，在实际使用模板生成提示时会被具体的值替换。</p><p>代码中的from_template是一个类方法，它允许我们直接从一个字符串模板中创建一个PromptTemplate对象。打印出这个PromptTemplate对象，你可以看到这个对象中的信息包括输入的变量（在这个例子中就是 <code>flower_name</code> 和 <code>price</code>）、输出解析器（这个例子中没有指定）、模板的格式（这个例子中为<code>'f-string'</code>）、是否验证模板（这个例子中设置为 <code>True</code>）。</p><p>因此PromptTemplate的from_template方法就是将一个原始的模板字符串转化为一个更丰富、更方便操作的PromptTemplate对象，这个对象就是LangChain中的提示模板。LangChain 提供了多个类和函数，也<strong>为各种应用场景设计了很多内置模板，使构建和使用提示变得容易</strong>。我们下节课还会对提示工程的基本原理和LangChain中的各种提示模板做更深入的讲解。</p><p>下面，我们将会使用这个刚刚构建好的提示模板来生成提示，并把提示输入到大语言模型中。</p><h2><strong>语言模型</strong></h2><p>LangChain中支持的模型有三大类。</p><ol>\n<li>大语言模型（LLM） ，也叫Text Model，这些模型将文本字符串作为输入，并返回文本字符串作为输出。Open AI的text-davinci-003、Facebook的LLaMA、ANTHROPIC的Claude，都是典型的LLM。</li>\n<li>聊天模型（Chat Model），主要代表Open AI的ChatGPT系列模型。这些模型通常由语言模型支持，但它们的 API 更加结构化。具体来说，这些模型将聊天消息列表作为输入，并返回聊天消息。</li>\n<li>文本嵌入模型（Embedding Model），这些模型将文本作为输入并返回浮点数列表，也就是Embedding。而文本嵌入模型如OpenAI的text-embedding-ada-002，我们之前已经见过了。文本嵌入模型负责把文档存入向量数据库，和我们这里探讨的提示工程关系不大。</li>\n</ol><p>然后，我们将调用语言模型，让模型帮我们写文案，并且返回文案的结果。</p><pre><code class=\"language-plain\"># 设置OpenAI API Key\nimport os\nos.environ[\"OPENAI_API_KEY\"] = '你的Open AI API Key'\n\n# 导入LangChain中的OpenAI模型接口\nfrom langchain_openai import OpenAI\n# 创建模型实例\nmodel = OpenAI(model_name='gpt-3.5-turbo-instruct')\n# 输入提示\ninput = prompt.format(flower_name=[\"玫瑰\"], price='50')\n# 得到模型的输出\noutput = model.invoke(input)\n# 打印输出内容\nprint(output)  \n</code></pre><p><code>input = prompt.format(flower_name=[\"玫瑰\"], price='50')</code> 这行代码的作用是将模板实例化，此时将 <code>{flower_name}</code> 替换为 <code>\"玫瑰\"</code>，<code>{price}</code> 替换为 <code>'50'</code>，形成了具体的提示：“您是一位专业的鲜花店文案撰写员。对于售价为 50 元的玫瑰，您能提供一个吸引人的简短描述吗？”</p><p>接收到这个输入，调用模型之后，得到的输出如下：</p><pre><code class=\"language-plain\">让你心动！50元就可以拥有这支充满浪漫气息的玫瑰花束，让TA感受你的真心爱意。\n</code></pre><p>复用提示模板，我们可以同时生成多个鲜花的文案。</p><pre><code class=\"language-plain\"># 导入LangChain中的提示模板\nfrom langchain import PromptTemplate\n# 创建原始模板\ntemplate = \"\"\"您是一位专业的鲜花店文案撰写员。\\n\n对于售价为 {price} 元的 {flower_name} ，您能提供一个吸引人的简短描述吗？\n\"\"\"\n# 根据原始模板创建LangChain提示模板\nprompt = PromptTemplate.from_template(template) \n# 打印LangChain提示模板的内容\nprint(prompt)\n\n# 设置OpenAI API Key\nimport os\nos.environ[\"OPENAI_API_KEY\"] = '你的Open AI API Key'\n\n# 导入LangChain中的OpenAI模型接口\nfrom langchain import OpenAI\n# 创建模型实例\nmodel = OpenAI(model_name='gpt-3.5-turbo-instruct')\n\n# 多种花的列表\nflowers = [\"玫瑰\", \"百合\", \"康乃馨\"]\nprices = [\"50\", \"30\", \"20\"]\n\n# 生成多种花的文案\nfor flower, price in zip(flowers, prices):\n    # 使用提示模板生成输入\n    input_prompt = prompt.format(flower_name=flower, price=price)\n\n    # 得到模型的输出\n    output = model.invoke(input_prompt)\n\n    # 打印输出内容\n    print(output)\n</code></pre><p>模型的输出如下：</p><pre><code class=\"language-plain\">这支玫瑰，深邃的红色，传递着浓浓的深情与浪漫，令人回味无穷！\n百合：美丽的花朵，多彩的爱恋！30元让你拥有它！\n康乃馨—20元，象征爱的祝福，送给你最真挚的祝福。\n</code></pre><p>你也许会问我，在这个过程中，使用LangChain的意义究竟何在呢？我直接调用Open AI的API，不是完全可以实现相同的功能吗？</p><p>的确如此，让我们来看看直接使用Open AI API来完成上述功能的代码。</p><pre><code class=\"language-plain\">import openai # 导入OpenAI\nopenai.api_key = 'Your-OpenAI-API-Key' # API Key\n\nprompt_text = \"您是一位专业的鲜花店文案撰写员。对于售价为{}元的{}，您能提供一个吸引人的简短描述吗？\" # 设置提示\n\nflowers = [\"玫瑰\", \"百合\", \"康乃馨\"]\nprices = [\"50\", \"30\", \"20\"]\n\n# 循环调用Text模型的Completion方法，生成文案\nfor flower, price in zip(flowers, prices):\n    prompt = prompt_text.format(price, flower)\n    response = openai.completions.create(\n        engine=\"gpt-3.5-turbo-instruct\",\n        prompt=prompt,\n        max_tokens=100\n    )\n    print(response.choices[0].text.strip()) # 输出文案\n</code></pre><p>上面的代码是直接使用Open AI和带有 {} 占位符的提示语，同时生成了三种鲜花的文案。看起来也是相当简洁。</p><p>不过，如果你深入思考一下，你就会发现LangChain的优势所在。<strong>我们只需要定义一次模板，就可以用它来生成各种不同的提示。</strong>对比单纯使用 f-string 来格式化文本，这种方法更加简洁，也更容易维护。而LangChain在提示模板中，还整合了output_parser、template_format 以及是否需要validate_template等功能。</p><p>更重要的是，使用LangChain提示模板，我们还可以很方便地把程序切换到不同的模型，而不需要修改任何提示相关的代码。</p><p>下面，我们用完全相同的提示模板来生成提示，并发送给HuggingFaceHub中的开源模型来创建文案。（注意：需要注册HUGGINGFACEHUB_API_TOKEN）</p><p><img src=\"https://static001.geekbang.org/resource/image/c8/ec/c8c0d84349ebd2d1d82a2836383164ec.png?wh=1704x854\" alt=\"\"></p><pre><code class=\"language-plain\"># 导入LangChain中的提示模板\nfrom langchain.prompts import PromptTemplate\n# 创建原始模板\ntemplate = \"\"\"You are a flower shop assitiant。\\n\nFor {price} of {flower_name} ，can you write something for me？\n\"\"\"\n# 根据原始模板创建LangChain提示模板\nprompt = PromptTemplate.from_template(template) \n# 打印LangChain提示模板的内容\nprint(prompt)\nimport os\nos.environ['HUGGINGFACEHUB_API_TOKEN'] = '你的HuggingFace API Token'\n# 导入LangChain中的OpenAI模型接口\nfrom langchain_community.llms import HuggingFaceHub\n# 创建模型实例\nmodel= HuggingFaceHub(repo_id=\"google/flan-t5-large\")\n# 输入提示\ninput = prompt.format(flower_name=[\"rose\"], price='50')\n# 得到模型的输出\noutput = model(input)\n# 打印输出内容\nprint(output)\n</code></pre><p>输出：</p><pre><code class=\"language-plain\">i love you\n</code></pre><p>真是一分钱一分货，当我使用较早期的开源模型T5，得到了很粗糙的文案 “i love you”（哦，还要注意T5还没有支持中文的能力，我把提示文字换成英文句子，结构其实都没变）。</p><p>当然，这里我想要向你传递的信息是：你可以重用模板，重用程序结构，通过LangChain框架调用任何模型。如果你熟悉机器学习的训练流程的话，这LangChain是不是让你联想到PyTorch和TensorFlow这样的框架——<strong>模型可以自由选择、自主训练，而调用模型的框架往往是有章法、而且可复用的</strong>。</p><p>因此，使用LangChain和提示模板的好处是：</p><ol>\n<li>代码的可读性：使用模板的话，提示文本更易于阅读和理解，特别是对于复杂的提示或多变量的情况。</li>\n<li>可复用性：模板可以在多个地方被复用，让你的代码更简洁，不需要在每个需要生成提示的地方重新构造提示字符串。</li>\n<li>维护：如果你在后续需要修改提示，使用模板的话，只需要修改模板就可以了，而不需要在代码中查找所有使用到该提示的地方进行修改。</li>\n<li>变量处理：如果你的提示中涉及到多个变量，模板可以自动处理变量的插入，不需要手动拼接字符串。</li>\n<li>参数化：模板可以根据不同的参数生成不同的提示，这对于个性化生成文本非常有用。</li>\n</ol><p>那我们就接着介绍模型 I/O的最后一步，输出解析。</p><h2><strong>输出解析</strong></h2><p>LangChain提供的解析模型输出的功能，使你能够更容易地从模型输出中获取结构化的信息，这将大大加快基于语言模型进行应用开发的效率。</p><p>为什么这么说呢？请你思考一下刚才的例子，你只是让模型生成了一个文案。这段文字是一段字符串，正是你所需要的。但是，在开发具体应用的过程中，很明显<strong>我们不仅仅需要文字，更多情况下我们需要的是程序能够直接处理的、结构化的数据</strong>。</p><p>比如说，在这个文案中，如果你希望模型返回两个字段：</p><ul>\n<li>description：鲜花的说明文本</li>\n<li>reason：解释一下为何要这样写上面的文案</li>\n</ul><p>那么，模型可能返回的一种结果是：</p><p><strong>A</strong>：“文案是：让你心动！50元就可以拥有这支充满浪漫气息的玫瑰花束，让TA感受你的真心爱意。为什么这样说呢？因为爱情是无价的，50元对应热恋中的情侣也会觉得值得。”</p><p>上面的回答并不是我们在处理数据时所需要的，我们需要的是一个类似于下面的Python字典。</p><p><strong>B</strong>：{description: “让你心动！50元就可以拥有这支充满浪漫气息的玫瑰花束，让TA感受你的真心爱意。” ;  reason: “因为爱情是无价的，50元对应热恋中的情侣也会觉得值得。”}</p><p>那么从A的笼统言语，到B这种结构清晰的数据结构，如何自动实现？这就需要LangChain中的输出解析器上场了。</p><p>下面，我们就通过LangChain的输出解析器来重构程序，让模型有能力生成结构化的回应，同时对其进行解析，直接将解析好的数据存入CSV文档。</p><pre><code class=\"language-plain\"># 导入OpenAI Key\nimport os\nos.environ[\"OPENAI_API_KEY\"] = '你的OpenAI API Key'\n\n# 导入LangChain中的提示模板\nfrom langchain.prompts import PromptTemplate\n# 创建原始提示模板\nprompt_template = \"\"\"您是一位专业的鲜花店文案撰写员。\n对于售价为 {price} 元的 {flower_name} ，您能提供一个吸引人的简短描述吗？\n{format_instructions}\"\"\"\n\n# 通过LangChain调用模型\nfrom langchain_openai import OpenAI\n# 创建模型实例\nmodel = OpenAI(model_name='gpt-3.5-turbo-instruct')\n\n# 导入结构化输出解析器和ResponseSchema\nfrom langchain.output_parsers import StructuredOutputParser, ResponseSchema\n# 定义我们想要接收的响应模式\nresponse_schemas = [\n    ResponseSchema(name=\"description\", description=\"鲜花的描述文案\"),\n    ResponseSchema(name=\"reason\", description=\"问什么要这样写这个文案\")\n]\n# 创建输出解析器\noutput_parser = StructuredOutputParser.from_response_schemas(response_schemas)\n\n# 获取格式指示\nformat_instructions = output_parser.get_format_instructions()\n# 根据原始模板创建提示，同时在提示中加入输出解析器的说明\nprompt = PromptTemplate.from_template(prompt_template, \n                partial_variables={\"format_instructions\": format_instructions}) \n\n# 数据准备\nflowers = [\"玫瑰\", \"百合\", \"康乃馨\"]\nprices = [\"50\", \"30\", \"20\"]\n\n# 创建一个空的DataFrame用于存储结果\nimport pandas as pd\ndf = pd.DataFrame(columns=[\"flower\", \"price\", \"description\", \"reason\"]) # 先声明列名\n\nfor flower, price in zip(flowers, prices):\n    # 根据提示准备模型的输入\n    input = prompt.format(flower_name=flower, price=price)\n\n    # 获取模型的输出\n    output = model.invoke(input)\n    \n    # 解析模型的输出（这是一个字典结构）\n    parsed_output = output_parser.parse(output)\n\n    # 在解析后的输出中添加“flower”和“price”\n    parsed_output['flower'] = flower\n    parsed_output['price'] = price\n\n    # 将解析后的输出添加到DataFrame中\n    df.loc[len(df)] = parsed_output  \n\n# 打印字典\nprint(df.to_dict(orient='records'))\n\n# 保存DataFrame到CSV文件\ndf.to_csv(\"flowers_with_descriptions.csv\", index=False)\n</code></pre><p>输出：</p><pre><code class=\"language-plain\">[{'flower': '玫瑰', 'price': '50', 'description': 'Luxuriate in the beauty of this 50 yuan rose, with its deep red petals and delicate aroma.', 'reason': 'This description emphasizes the elegance and beauty of the rose, which will be sure to draw attention.'}, \n{'flower': '百合', 'price': '30', 'description': '30元的百合，象征着坚定的爱情，带给你的是温暖而持久的情感！', 'reason': '百合是象征爱情的花，写出这样的描述能让顾客更容易感受到百合所带来的爱意。'}, \n{'flower': '康乃馨', 'price': '20', 'description': 'This beautiful carnation is the perfect way to show your love and appreciation. Its vibrant pink color is sure to brighten up any room!', 'reason': 'The description is short, clear and appealing, emphasizing the beauty and color of the carnation while also invoking a sense of love and appreciation.'}]\n</code></pre><p>这段代码中，首先定义输出结构，我们希望模型生成的答案包含两部分：鲜花的描述文案（description）和撰写这个文案的原因（reason）。所以我们定义了一个名为response_schemas的列表，其中包含两个ResponseSchema对象，分别对应这两部分的输出。</p><p>根据这个列表，我通过StructuredOutputParser.from_response_schemas方法创建了一个输出解析器。</p><p>然后，我们通过输出解析器对象的get_format_instructions()方法获取输出的格式说明（format_instructions），再根据原始的字符串模板和输出解析器格式说明创建新的提示模板（这个模板就整合了输出解析结构信息）。再通过新的模板生成模型的输入，得到模型的输出。此时模型的输出结构将尽最大可能遵循我们的指示，以便于输出解析器进行解析。</p><p>对于每一个鲜花和价格组合，我们都用 output_parser.parse(output) 把模型输出的文案解析成之前定义好的数据格式，也就是一个Python字典，这个字典中包含了description 和 reason 这两个字段的值。</p><pre><code class=\"language-plain\">parsed_output\n{'description': 'This 50-yuan rose is... feelings.', 'reason': 'The description is s...y emotion.'}\nlen(): 2\n</code></pre><p>最后，把所有信息整合到一个pandas DataFrame对象中（需要安装Pandas库）。这个DataFrame对象中包含了flower、price、description 和 reason 这四个字段的值。其中，description 和 reason 是由 output_parser 从模型的输出中解析出来的，flower 和 price 是我们自己添加的。</p><p>我们可以打印出DataFrame的内容，也方便地在程序中处理它，比如保存为下面的CSV文件。因为此时数据不再是模糊的、无结构的文本，而是结构清晰的有格式的数据。<strong>输出解析器在这个过程中的功劳很大</strong>。</p><p><img src=\"https://static001.geekbang.org/resource/image/32/f2/3264157dc13f229641d87dcb34dafbf2.png?wh=1032x97\" alt=\"\"></p><p>到这里，我们今天的任务也就顺利完成了。</p><h2>总结时刻</h2><p>这样，你就从头到尾利用大模型开发出来了一个能够自动生成鲜花文案的应用程序！怎么样，是不是感觉和我们平时所做的基于SQL和数据库表以及固定业务逻辑的应用开发很不一样？</p><p>你看，每一次运行都有不同的结果，而我们完全不知道大模型下一次会给我们带来怎样的新东西。因此，基于大模型构建的应用可以说充满了创造力。</p><p>总结一下使用LangChain框架的好处，你会发现它有这样几个优势。</p><ol>\n<li>模板管理：在大型项目中，可能会有许多不同的提示模板，使用 LangChain 可以帮助你更好地管理这些模板，保持代码的清晰和整洁。</li>\n<li>变量提取和检查：LangChain 可以自动提取模板中的变量并进行检查，确保你没有忘记填充任何变量。</li>\n<li>模型切换：如果你想尝试使用不同的模型，只需要更改模型的名称就可以了，无需修改代码。</li>\n<li>输出解析：LangChain的提示模板可以嵌入对输出格式的定义，以便在后续处理过程中比较方便地处理已经被格式化了的输出。</li>\n</ol><p>在下节课中，我们将继续深入探索LangChain中的提示模板，看一看如何通过高质量的提示工程让模型创造出更为精准、更高质量的输出。</p><h2>思考题</h2><ol>\n<li>请你用自己的理解，简述LangChain调用大语言模型来做应用开发的优势。</li>\n<li>在上面的示例中，format_instructions，也就是输出格式是怎样用output_parser构建出来的，又是怎样传递到提示模板中的？</li>\n<li>加入了partial_variables，也就是输出解析器指定的format_instructions之后的提示，为什么能够让模型生成结构化的输出？你可以打印出这个提示，一探究竟。</li>\n<li>使用输出解析器后，调用模型时有没有可能仍然得不到所希望的输出？也就是说，模型有没有可能仍然返回格式不够完美的输出？</li>\n</ol><p>题目较多，可以选择性思考，期待在留言区看到你的分享。如果你觉得内容对你有帮助，也欢迎分享给有需要的朋友！最后如果你学有余力，可以进一步学习下面的延伸阅读。</p><h2>延伸阅读</h2><ol>\n<li>吴恩达老师的<a href=\"https://learn.deeplearning.ai/login?redirect_course=chatgpt-prompt-eng\">提示工程课程</a>，吴老师也有LangChain的简单介绍课程呦！网上也有这些课程的中文翻译版！</li>\n<li>LangChain官方文档中，关于模型I/O的资料<a href=\"https://python.langchain.com/docs/modules/model_io/\">在此</a>。</li>\n</ol>","neighbors":{"left":{"article_title":"02｜用LangChain快速构建基于“易速鲜花”本地知识库的智能问答系统","id":699436},"right":{"article_title":"04｜提示工程（上）：用少样本FewShotTemplate和ExampleSelector创建应景文案","id":700699}},"comments":[{"had_liked":false,"id":381205,"user_name":"阿斯蒂芬","can_delete":false,"product_type":"c1","uid":1024164,"ip_address":"广东","ucode":"61D5E3BDA4EBC5","user_header":"https://static001.geekbang.org/account/avatar/00/0f/a0/a4/b060c723.jpg","comment_is_top":false,"comment_ctime":1694788557,"is_pvip":false,"replies":[{"id":138866,"content":"嗯，同学的回答太棒了！！！掌握了LangChain提示模板的精髓。\n而且，也发现了LLM应用开发的最主要问题，就是精确性方面，还要更上一层楼。\n同学，加油，期待你更多LangChain实战过程中的心得分享。","user_name":"作者回复","user_name_real":"编辑","uid":1809833,"ctime":1694841226,"ip_address":"新加坡","comment_id":381205,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100617601,"comment_content":"prompt中的{format_instructions} 实际填充的是按照 response_schemas 格式构建的一个预期大模型响应的“格式”，然后通过 StructuredOutputParser 来进行解析。\n在本例中，打印完整的prompt，会看到末尾有含有 &quot;description&quot; 和 &quot;reason&quot; 属性的json，以告知大模型按json格式响应。\nOutputParser 的设计将prompt 的预期响应和大模型实际响应部分关联起来了，方便开发者使用。\n不过大模型并没有对此打包票，反而是尽力而为。在我run自己代码的时候，就出现过返回的response“看起来像是”json，但实际上缺了一个逗号，导致格式解析失败。而且这是偶现的。\n因此即使使用了解析器，应该还是要在健壮性上做一些错误处理比较好。","like_count":12,"discussions":[{"author":{"id":1809833,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/9d/a9/4602808f.jpg","nickname":"黄佳","note":"","ucode":"8EC41D2EAB0E3C","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":628067,"discussion_content":"嗯，同学的回答太棒了！！！掌握了LangChain提示模板的精髓。\n而且，也发现了LLM应用开发的最主要问题，就是精确性方面，还要更上一层楼。\n同学，加油，期待你更多LangChain实战过程中的心得分享。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1694841226,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"新加坡","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":380909,"user_name":"海滨","can_delete":false,"product_type":"c1","uid":1009518,"ip_address":"浙江","ucode":"F1B94D2DB944DC","user_header":"https://static001.geekbang.org/account/avatar/00/0f/67/6e/f5ee46e8.jpg","comment_is_top":false,"comment_ctime":1694433596,"is_pvip":false,"replies":[{"id":138719,"content":"对的，对于逻辑思辨能力不够强的模型来说，它是有可能忽略你的指示的。但未来的大模型会越来越厉害，厉害到我们可以很信赖。GPT-4已经不错，更期待未来的GPT-5.","user_name":"作者回复","user_name_real":"编辑","uid":1809833,"ctime":1694439210,"ip_address":"新加坡","comment_id":380909,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100617601,"comment_content":"问题 4，还是有可能的，输出解析器本质上是在 prompt 中插入了需要返回的格式说明，LLM完全有可能忽略这部分的要求。所以还是需要在业务层面进行判断再重试","like_count":10,"discussions":[{"author":{"id":1809833,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/9d/a9/4602808f.jpg","nickname":"黄佳","note":"","ucode":"8EC41D2EAB0E3C","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":627691,"discussion_content":"对的，对于逻辑思辨能力不够强的模型来说，它是有可能忽略你的指示的。但未来的大模型会越来越厉害，厉害到我们可以很信赖。GPT-4已经不错，更期待未来的GPT-5.","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1694439210,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"新加坡","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":381917,"user_name":"Archer","can_delete":false,"product_type":"c1","uid":1578066,"ip_address":"广东","ucode":"A5707CA0BF2624","user_header":"https://static001.geekbang.org/account/avatar/00/18/14/52/e4f25bc6.jpg","comment_is_top":false,"comment_ctime":1696225277,"is_pvip":false,"replies":[{"id":139172,"content":"完全可以通过清晰的提示工程来实现。\n非常希望你学习完这个课程之后，实现这个功能，并分享你的实验结果。\n\n下面是我和ChatGPT互动的一些内容，虽然我对Java Bean XML的结构不是完全理解，我也把它贴在这里供你参考。\n这里面涉及到两个方面：\n\n定义样式：您首先需要为您的XML样式定义一套标准或模板。例如，您可以预先定义a样式、b样式、c样式等。\n\n与ChatGPT的交互：当与ChatGPT交互时，您可以告诉它您想要哪种样式的XML，并提供必要的参数或数据。\n\n假设我们已经为Java Bean XML定义了一个简单的“a样式”。此样式可能如下：\n\nxml\nCopy code\n&lt;bean id=&quot;{beanId}&quot; class=&quot;{beanClass}&quot;&gt;\n    &lt;property name=&quot;{propertyName}&quot; value=&quot;{propertyValue}&quot; &#47;&gt;\n&lt;&#47;bean&gt;\n现在，当您与ChatGPT交互并告诉它您想要“a样式”的XML，并为它提供beanId、beanClass、propertyName和propertyValue等参数，ChatGPT应该能为您生成相应的XML。\n\n例如：\n\n您：我想要a样式的Java Bean XML，参数如下：beanId=myBean, beanClass=com.example.MyClass, propertyName=username, propertyValue=John。\n\nChatGPT：好的，基于您提供的参数，a样式的XML如下：\n\nxml\nCopy code\n&lt;bean id=&quot;myBean&quot; class=&quot;com.example.MyClass&quot;&gt;\n    &lt;property name=&quot;username&quot; value=&quot;John&quot; &#47;&gt;\n&lt;&#47;bean&gt;\n为了实现这一过程，您可以使用ChatGPT的API进行编程，并将其与您的系统或工具集成。每当您需要生成XML时，只需传递相应的参数并从ChatGPT获取结果即可。","user_name":"作者回复","user_name_real":"作者","uid":1809833,"ctime":1696665830,"ip_address":"瑞士","comment_id":381917,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100617601,"comment_content":"老师我有个需求，例如我想利用chatgpt帮我写特定的Java bean xml文件，但是需要输入很多要求，能否自定义说我要a样式的xml，他就可以内部根据我预定的需求，帮我写出xml？","like_count":4,"discussions":[{"author":{"id":1809833,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/9d/a9/4602808f.jpg","nickname":"黄佳","note":"","ucode":"8EC41D2EAB0E3C","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":629099,"discussion_content":"完全可以通过清晰的提示工程来实现。\n非常希望你学习完这个课程之后，实现这个功能，并分享你的实验结果。\n\n下面是我和ChatGPT互动的一些内容，虽然我对Java Bean XML的结构不是完全理解，我也把它贴在这里供你参考。\n这里面涉及到两个方面：\n\n定义样式：您首先需要为您的XML样式定义一套标准或模板。例如，您可以预先定义a样式、b样式、c样式等。\n\n与ChatGPT的交互：当与ChatGPT交互时，您可以告诉它您想要哪种样式的XML，并提供必要的参数或数据。\n\n假设我们已经为Java Bean XML定义了一个简单的“a样式”。此样式可能如下：\n\nxml\nCopy code\n<bean id=\"{beanId}\" class=\"{beanClass}\">\n    <property name=\"{propertyName}\" value=\"{propertyValue}\" />\n</bean>\n现在，当您与ChatGPT交互并告诉它您想要“a样式”的XML，并为它提供beanId、beanClass、propertyName和propertyValue等参数，ChatGPT应该能为您生成相应的XML。\n\n例如：\n\n您：我想要a样式的Java Bean XML，参数如下：beanId=myBean, beanClass=com.example.MyClass, propertyName=username, propertyValue=John。\n\nChatGPT：好的，基于您提供的参数，a样式的XML如下：\n\nxml\nCopy code\n<bean id=\"myBean\" class=\"com.example.MyClass\">\n    <property name=\"username\" value=\"John\" />\n</bean>\n为了实现这一过程，您可以使用ChatGPT的API进行编程，并将其与您的系统或工具集成。每当您需要生成XML时，只需传递相应的参数并从ChatGPT获取结果即可。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1696665830,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"瑞士","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":389413,"user_name":"在路上1619","can_delete":false,"product_type":"c1","uid":2909770,"ip_address":"上海","ucode":"A2F828C18FBCD4","user_header":"https://static001.geekbang.org/account/avatar/00/2c/66/4a/a5ecf67a.jpg","comment_is_top":false,"comment_ctime":1712478148,"is_pvip":false,"replies":[{"id":141702,"content":"好的，谢谢。\n\n# 通过LangChain调用模型\nfrom langchain_openai import OpenAI\n# 创建模型实例\nmodel = OpenAI(model_name=&#39;gpt-3.5-turbo-instruct&#39;)\n也是可以的。\n\n本课代码已经更新，可以去github上面找最新的代码。","user_name":"作者回复","user_name_real":"编辑","uid":1809833,"ctime":1712808197,"ip_address":"新加坡","comment_id":389413,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100617601,"comment_content":"直接使用课件里的代码，一直出现下面的错误提示：You tried to access openai.ChatCompletion, but this is no longer supported in openai&gt;=1.0.0。 应该是langchain的版本更新的缘故\n\n改成使用下面的方式，代码就可以正常运行了。\n\nfrom langchain_openai import ChatOpenAI\n\n# 创建模型实例\nmodel = ChatOpenAI(model_name=&#39;gpt-3.5-turbo&#39;)\n\n# 获取模型的输出\noutput = model.invoke(input)\n    \n# 解析模型的输出（这是一个字典结构）\nparsed_output = output_parser.parse(output.content)\n\n我的版本\nlangchain                 0.1.0\nopenai                    1.6.1","like_count":2,"discussions":[{"author":{"id":1809833,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/9d/a9/4602808f.jpg","nickname":"黄佳","note":"","ucode":"8EC41D2EAB0E3C","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":641591,"discussion_content":"好的，谢谢。\n\n# 通过LangChain调用模型\nfrom langchain_openai import OpenAI\n# 创建模型实例\nmodel = OpenAI(model_name=&#39;gpt-3.5-turbo-instruct&#39;)\n也是可以的。\n\n本课代码已经更新，可以去github上面找最新的代码。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1712808197,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"新加坡","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2,\"source\":0}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":383913,"user_name":"里咯破","can_delete":false,"product_type":"c1","uid":1224546,"ip_address":"广东","ucode":"2DA41A6D44B3C4","user_header":"https://static001.geekbang.org/account/avatar/00/12/af/62/5eeb9041.jpg","comment_is_top":false,"comment_ctime":1699930808,"is_pvip":false,"replies":[{"id":140086,"content":"我已经把LangChain和OpenAI都更新到最新版本，重新运行无误。\nopenai                    1.2.4 \nlangchain                 0.0.335\n同学检查一下代码。","user_name":"作者回复","user_name_real":"编辑","uid":1809833,"ctime":1699978833,"ip_address":"瑞士","comment_id":383913,"utype":1}],"discussion_count":2,"race_medal":0,"score":2,"product_id":100617601,"comment_content":"报错了——KeyError: {&#39;format_instructions&#39;}，是不是因为LangChain更新后，不支持这个参数了？","like_count":2,"discussions":[{"author":{"id":1809833,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/9d/a9/4602808f.jpg","nickname":"黄佳","note":"","ucode":"8EC41D2EAB0E3C","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":631803,"discussion_content":"我已经把LangChain和OpenAI都更新到最新版本，重新运行无误。\nopenai                    1.2.4 \nlangchain                 0.0.335\n同学检查一下代码。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1699978833,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"瑞士","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1312694,"avatar":"https://static001.geekbang.org/account/avatar/00/14/07/b6/e213fc11.jpg","nickname":"她の他","note":"","ucode":"A61CEC365D782F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":631911,"discussion_content":"创建模版提示的时候{}里面没有引号的，要不然找不到这个key","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1700124020,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"江苏","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":381755,"user_name":"抽象派","can_delete":false,"product_type":"c1","uid":2599971,"ip_address":"广东","ucode":"6879F90CB702FC","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/YflLdCdbUAkfr9LPzF50EibDrMxBibPicQ5NNAETaPP0ytTmuR3h6QNichDMhDbR2XelSIXpOrPwbiaHgBkMJYOeULA/132","comment_is_top":false,"comment_ctime":1695805650,"is_pvip":false,"replies":[{"id":139071,"content":"同学是不是停留在 原来的0.039版。需要pip upgrade一下。这个有人Log过。请看 https:&#47;&#47;github.com&#47;langchain-ai&#47;langchain&#47;issues&#47;11102\n\n我发现如果用pip install langchain[all]来按照LangChain，就会装成一个旧的0.39版。建议大家不用使用这个方式，而是只使用pip install langchain。\n\n如果pip install langchain[all]来安装许多包，一定要给langchain升级：pip install langchain[all]，系统会卸载错误的0.039包。\n\n  Attempting uninstall: langchain\n    Found existing installation: langchain 0.0.39\n    Uninstalling langchain-0.0.39:\n      Successfully uninstalled langchain-0.0.39\nSuccessfully installed aiohttp-3.8.5 aiosignal-1.3.1 anyio-3.7.1 async-timeout-4.0.3 attrs-23.1.0 dataclasses-json-0.6.1 frozenlist-1.4.0 jsonpatch-1.33 jsonpointer-2.4 langchain-0.0.304 langsmith-0.0.41 marshmallow-3.20.1 multidict-6.0.4 mypy-extensions-1.0.0 numexpr-2.8.7 sniffio-1.3.0 tenacity-8.2.3 typing-inspect-0.9.0 yarl-1.9.2","user_name":"作者回复","user_name_real":"作者","uid":1809833,"ctime":1695863459,"ip_address":"新加坡","comment_id":381755,"utype":1}],"discussion_count":2,"race_medal":0,"score":2,"product_id":100617601,"comment_content":"更新库后，AttributeError: type object &#39;PromptTemplate&#39; has no attribute &#39;from_template&#39;","like_count":2,"discussions":[{"author":{"id":1809833,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/9d/a9/4602808f.jpg","nickname":"黄佳","note":"","ucode":"8EC41D2EAB0E3C","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":628794,"discussion_content":"同学是不是停留在 原来的0.039版。需要pip upgrade一下。这个有人Log过。请看 https://github.com/langchain-ai/langchain/issues/11102\n\n我发现如果用pip install langchain[all]来按照LangChain，就会装成一个旧的0.39版。建议大家不用使用这个方式，而是只使用pip install langchain。\n\n如果pip install langchain[all]来安装许多包，一定要给langchain升级：pip install langchain[all]，系统会卸载错误的0.039包。\n\n  Attempting uninstall: langchain\n    Found existing installation: langchain 0.0.39\n    Uninstalling langchain-0.0.39:\n      Successfully uninstalled langchain-0.0.39\nSuccessfully installed aiohttp-3.8.5 aiosignal-1.3.1 anyio-3.7.1 async-timeout-4.0.3 attrs-23.1.0 dataclasses-json-0.6.1 frozenlist-1.4.0 jsonpatch-1.33 jsonpointer-2.4 langchain-0.0.304 langsmith-0.0.41 marshmallow-3.20.1 multidict-6.0.4 mypy-extensions-1.0.0 numexpr-2.8.7 sniffio-1.3.0 tenacity-8.2.3 typing-inspect-0.9.0 yarl-1.9.2","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1695863460,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"新加坡","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2599971,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/YflLdCdbUAkfr9LPzF50EibDrMxBibPicQ5NNAETaPP0ytTmuR3h6QNichDMhDbR2XelSIXpOrPwbiaHgBkMJYOeULA/132","nickname":"抽象派","note":"","ucode":"6879F90CB702FC","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":628799,"discussion_content":"我的是arm版Macos11.6，Python是3.11，pip install langchain还是安装了0.0.39的版本，需要指定版本号0.0.302进行安装","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1695869279,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"广东","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":381706,"user_name":"shatu","can_delete":false,"product_type":"c1","uid":2760732,"ip_address":"北京","ucode":"27077AA35B8C22","user_header":"https://static001.geekbang.org/account/avatar/00/2a/20/1c/de379ed1.jpg","comment_is_top":false,"comment_ctime":1695713252,"is_pvip":false,"replies":[{"id":139077,"content":"的确如此，LangChain虽然算得上是目前影响力最大的LLM开发框架，但是他的很多问题一直也令人诟病。\n我的使用感受：\n1. 内部机制过于复杂，\n2. 而且调用逻辑不够清晰。如果你复杂，你越要把自己的使用方式说的清晰。\n3. 文档很乱套。\n要把复杂的机制抽象的简明一些，要给大家讲清楚。\n我希望我的这个课程能够把它的各个组件的机理说的清晰简洁一点。","user_name":"作者回复","user_name_real":"编辑","uid":1809833,"ctime":1695874768,"ip_address":"新加坡","comment_id":381706,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100617601,"comment_content":"1.LangChain的优势在于丰富的集成框架，但是由于复杂的封装和prompt传递的不确定性业内也存在争议\n2.通过response_schemas构建，通过get_format_instructions定义的prompt传递\n3.partial_variables定义了一个“Load a prompt template from a template”的prompt，包括Args和Returns两部分\n4.完全可能，Langchain的传递很多以来多个prompt之间的传递，一旦出现与预期不同的结果需要逐个排查所有经过传递的prompt而这些prompt的输出默认是不打印的，这也是langchain的一个大争议点","like_count":2,"discussions":[{"author":{"id":1809833,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/9d/a9/4602808f.jpg","nickname":"黄佳","note":"","ucode":"8EC41D2EAB0E3C","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":628812,"discussion_content":"的确如此，LangChain虽然算得上是目前影响力最大的LLM开发框架，但是他的很多问题一直也令人诟病。\n我的使用感受：\n1. 内部机制过于复杂，\n2. 而且调用逻辑不够清晰。如果你复杂，你越要把自己的使用方式说的清晰。\n3. 文档很乱套。\n要把复杂的机制抽象的简明一些，要给大家讲清楚。\n我希望我的这个课程能够把它的各个组件的机理说的清晰简洁一点。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1695874768,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"新加坡","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":381613,"user_name":"进击的鱼儿","can_delete":false,"product_type":"c1","uid":1334770,"ip_address":"浙江","ucode":"9B6CF26A8BCA8F","user_header":"https://static001.geekbang.org/account/avatar/00/14/5d/f2/785169e9.jpg","comment_is_top":false,"comment_ctime":1695541361,"is_pvip":false,"replies":[{"id":139016,"content":"哦，图的话这里的很多是LangChain官方文档上直接拿来用的。我自己画图的话也就是用PPT，简单直观就好。","user_name":"作者回复","user_name_real":"编辑","uid":1809833,"ctime":1695702686,"ip_address":"新加坡","comment_id":381613,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100617601,"comment_content":"老师能推荐一下画图工具吗？想画您文章中的图，发现有些例如圆角菱形用PPT不是很好画出来。","like_count":2,"discussions":[{"author":{"id":1809833,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/9d/a9/4602808f.jpg","nickname":"黄佳","note":"","ucode":"8EC41D2EAB0E3C","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":628661,"discussion_content":"哦，图的话这里的很多是LangChain官方文档上直接拿来用的。我自己画图的话也就是用PPT，简单直观就好。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1695702686,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"新加坡","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":384969,"user_name":"不吃苦瓜","can_delete":false,"product_type":"c1","uid":3623296,"ip_address":"福建","ucode":"7C8D2994D0A722","user_header":"https://static001.geekbang.org/account/avatar/00/37/49/80/791d0f5e.jpg","comment_is_top":false,"comment_ctime":1701859311,"is_pvip":false,"replies":[{"id":140846,"content":"最新的模型gpt-4-1106-preview和LangChain最新版的输出解析器也许能够帮助我们解决这些问题。","user_name":"作者回复","user_name_real":"编辑","uid":1809833,"ctime":1704817005,"ip_address":"瑞士","comment_id":384969,"utype":1}],"discussion_count":2,"race_medal":0,"score":2,"product_id":100617601,"comment_content":"老师，我想问一下，我每次让ai按照一定格式输出时，他总是会加一点其他内容这个要这么解决（就比如输出内容外面老是框一个&#39;&#39;&#39;JSON，多的这部分也不是固定的，有时候是几个符号框，有时候是一小段文字），每次这样解析器就解析不了了，请问这种情况怎么样解决","like_count":1,"discussions":[{"author":{"id":1809833,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/9d/a9/4602808f.jpg","nickname":"黄佳","note":"","ucode":"8EC41D2EAB0E3C","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":635429,"discussion_content":"最新的模型gpt-4-1106-preview和LangChain最新版的输出解析器也许能够帮助我们解决这些问题。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1704817005,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"瑞士","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2,\"source\":0}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":3623296,"avatar":"https://static001.geekbang.org/account/avatar/00/37/49/80/791d0f5e.jpg","nickname":"不吃苦瓜","note":"","ucode":"7C8D2994D0A722","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":633190,"discussion_content":"就比如这样\n```json\n{\n        &#34;description&#34;: &#34;这款50元的玫瑰，是您表达爱意的最佳选择。它的花瓣鲜艳夺目，花香浓郁，无论是送给自己还是亲朋好友，都是一份珍贵的礼物。&#34;,\n        &#34;reason&#34;: &#34;价格实惠、品质优良、适合各种场合&#34;\n}\n``` ，而且很多时候这些多的东西他不是固定的，然后刚刚调了好久用正则把他扣出来了，但是又碰到解析成JSON的问题，按道理他的output_parser.parser(output)出来的结果应该是个字典，但却是个str。闹心，后续我又实力那个依靠大模型来解决格式转换错误的转换器，但是哎，不行闹心😣。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1701875596,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"福建","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":381877,"user_name":"HdUIprince","can_delete":false,"product_type":"c1","uid":1262168,"ip_address":"湖北","ucode":"2510EBFACDBDB2","user_header":"https://static001.geekbang.org/account/avatar/00/13/42/58/2286eca6.jpg","comment_is_top":false,"comment_ctime":1696082969,"is_pvip":false,"replies":[{"id":139093,"content":"谢谢同学的提醒，的确，此处只传入一个变量，列表没有啥意义。多个变量可以考虑列表，如 input = prompt.format(flower_name=[&quot;玫瑰&quot;,&quot;百合&quot;], price=[&#39;50&#39;,&#39;30&#39;])","user_name":"作者回复","user_name_real":"编辑","uid":1809833,"ctime":1696175510,"ip_address":"新加坡","comment_id":381877,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100617601,"comment_content":"老师您好，第一个例子中 flower_name 为什么要传入一个列表？\ninput = prompt.format(flower_name=[&quot;玫瑰&quot;], price=&#39;50&#39;)\n\n打印input结果是这样的：\n&quot;您是一位专业的鲜花店文案撰写员。\\n\\n对于售价为 50 元的 [&#39;玫瑰&#39;] ，您能提供一个吸引人的简短描述吗？\\n&quot;\n而不是文中的：\n“您是一位专业的鲜花店文案撰写员。对于售价为 50 元的玫瑰，您能提供一个吸引人的简短描述吗？”","like_count":1,"discussions":[{"author":{"id":1809833,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/9d/a9/4602808f.jpg","nickname":"黄佳","note":"","ucode":"8EC41D2EAB0E3C","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":628892,"discussion_content":"谢谢同学的提醒，的确，此处只传入一个变量，列表没有啥意义。多个变量可以考虑列表，如 input = prompt.format(flower_name=[&#34;玫瑰&#34;,&#34;百合&#34;], price=[&#39;50&#39;,&#39;30&#39;])","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1696175510,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"新加坡","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":381069,"user_name":"Realm","can_delete":false,"product_type":"c1","uid":1081299,"ip_address":"浙江","ucode":"30CBEBE619D1A2","user_header":"https://static001.geekbang.org/account/avatar/00/10/7f/d3/b5896293.jpg","comment_is_top":false,"comment_ctime":1694642247,"is_pvip":true,"replies":[{"id":138796,"content":"嗯，同学这是LangChain的内部的代码应该做的升级。因为HuggingFace在LangChain内部被调用。\n这是一个Warning。可以暂时用\nimport warnings\nwarnings.filterwarnings(&#39;ignore&#39;, category=FutureWarning）\n来忽略掉。","user_name":"作者回复","user_name_real":"编辑","uid":1809833,"ctime":1694659511,"ip_address":"新加坡","comment_id":381069,"utype":1}],"discussion_count":4,"race_medal":0,"score":3,"product_id":100617601,"comment_content":"HF的接口好像升级了，在运行HF的例子报了如下错误：\n```\n&#47;Library&#47;Frameworks&#47;Python.framework&#47;Versions&#47;3.11&#47;lib&#47;python3.11&#47;site-packages&#47;huggingface_hub&#47;utils&#47;_deprecation.py:127: FutureWarning: &#39;__init__&#39; (from &#39;huggingface_hub.inference_api&#39;) is deprecated and will be removed from version &#39;0.19.0&#39;. `InferenceApi` client is deprecated in favor of the more feature-complete `InferenceClient`. Check out this guide to learn how to convert your script to use it: https:&#47;&#47;huggingface.co&#47;docs&#47;huggingface_hub&#47;guides&#47;inference#legacy-inferenceapi-client.\n  warnings.warn(warning_message, FutureWarning)\nYou are a flower shop assitiant For 50 of [&#39;&#39;]\n```\n老师辛苦看看😄","like_count":1,"discussions":[{"author":{"id":1809833,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/9d/a9/4602808f.jpg","nickname":"黄佳","note":"","ucode":"8EC41D2EAB0E3C","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":627888,"discussion_content":"嗯，同学这是LangChain的内部的代码应该做的升级。因为HuggingFace在LangChain内部被调用。\n这是一个Warning。可以暂时用\nimport warnings\nwarnings.filterwarnings(&#39;ignore&#39;, category=FutureWarning）\n来忽略掉。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1694659512,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"新加坡","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":1,"child_discussions":[{"author":{"id":1081299,"avatar":"https://static001.geekbang.org/account/avatar/00/10/7f/d3/b5896293.jpg","nickname":"Realm","note":"","ucode":"30CBEBE619D1A2","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1809833,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/9d/a9/4602808f.jpg","nickname":"黄佳","note":"","ucode":"8EC41D2EAB0E3C","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":627897,"discussion_content":"谢谢！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1694662579,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":627888,"ip_address":"浙江","group_id":0},"score":627897,"extra":""}]},{"author":{"id":1809833,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/9d/a9/4602808f.jpg","nickname":"黄佳","note":"","ucode":"8EC41D2EAB0E3C","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":629115,"discussion_content":"这应该就是T5支持中文能力不行导致的。我准备在文稿中把&#34;玫瑰&#34;换成&#34;rose&#34;。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1696676294,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"瑞士","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1218438,"avatar":"https://static001.geekbang.org/account/avatar/00/12/97/86/fb564a19.jpg","nickname":"bluuus","note":"","ucode":"274D5063B5F542","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":628733,"discussion_content":"但是最后的输出是 &#34;You are a flower shop assitiant For 50 of [&#39;&#39;]&#34;，也不太对吧","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1695779974,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"中国香港","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":384554,"user_name":"Geek_744c74","can_delete":false,"product_type":"c1","uid":3789128,"ip_address":"上海","ucode":"845219E5C68ED1","user_header":"","comment_is_top":false,"comment_ctime":1701158930,"is_pvip":false,"replies":[{"id":140926,"content":"大模型就是这样的，什么也不用动，直接导入目录调用。HuggingFace库自己找得到。","user_name":"作者回复","user_name_real":"编辑","uid":1809833,"ctime":1705071259,"ip_address":"瑞士","comment_id":384554,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100617601,"comment_content":"老师好！想请教一下，最近下载了chatGLM3,打开models文件夹发现是这样的，好像被分成了7份，这种情况要怎么用transfomer调用呀：\npytorch model-00001-of-00007.bin\npytorch model-00002-f-00007.bin\npytorch model-00003-of-00007.bin\npytorch model-00004-of-00007.bin\npytorch model-00005-of-00007.bin\npytorch model-00006-of-00007.bin\npytorch model-00007-of-00007.bin","like_count":0,"discussions":[{"author":{"id":1809833,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/9d/a9/4602808f.jpg","nickname":"黄佳","note":"","ucode":"8EC41D2EAB0E3C","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":635732,"discussion_content":"大模型就是这样的，什么也不用动，直接导入目录调用。HuggingFace库自己找得到。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1705071259,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"瑞士","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2,\"source\":0}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":384283,"user_name":"aLong","can_delete":false,"product_type":"c1","uid":2409553,"ip_address":"北京","ucode":"11DB1B9C579811","user_header":"https://static001.geekbang.org/account/avatar/00/24/c4/51/5bca1604.jpg","comment_is_top":false,"comment_ctime":1700623958,"is_pvip":false,"replies":[{"id":140930,"content":"哈哈 有意思🌺","user_name":"作者回复","user_name_real":"编辑","uid":1809833,"ctime":1705074839,"ip_address":"瑞士","comment_id":384283,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100617601,"comment_content":"template = &quot;&quot;&quot;The price of the {flower_name} is $ {price}. \\n\nI need you to write her a short description that will attract customers to buy \\n\nand include the name of the flower and price.\\n\nThe word limit is 30. \n&quot;&quot;&quot;\n\n结果：\nIntroducing the enchanting 玫瑰! Delicate and captivating, this beauty is yours for only $50. Don&#39;t miss out on this irresistible offer!\nIntroducing the elegant 百合 at just $30!\nIntroducing the charming 康乃馨! 🌸 Only $20! 🌺\n\n没想到他竟然会在里面加入emoji，有意思。","like_count":0,"discussions":[{"author":{"id":1809833,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/9d/a9/4602808f.jpg","nickname":"黄佳","note":"","ucode":"8EC41D2EAB0E3C","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":635738,"discussion_content":"哈哈 有意思🌺","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1705074839,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"瑞士","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2,\"source\":0}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":382966,"user_name":"远游","can_delete":false,"product_type":"c1","uid":2103322,"ip_address":"北京","ucode":"73792ED128D57C","user_header":"https://static001.geekbang.org/account/avatar/00/20/18/1a/5f36bb6e.jpg","comment_is_top":false,"comment_ctime":1698242129,"is_pvip":false,"replies":[{"id":139527,"content":"这个问题是同学没有用自己的OpenAI Key替换我的占位符吧。","user_name":"作者回复","user_name_real":"编辑","uid":1809833,"ctime":1698381378,"ip_address":"瑞士","comment_id":382966,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100617601,"comment_content":"老师好，python小白，macos上运行过程中报错如下\n File &quot;&#47;Users&#47;wangshibao&#47;Documents&#47;idea&#47;GitHub&#47;langchain-geektime&#47;02_文档QA系统&#47;DocQA.py&quot;, line 38, in &lt;module&gt;\n    vectorstore = Qdrant.from_documents(\n                  ^^^^^^^^^^^^^^^^^^^^^^\n  File &quot;&#47;usr&#47;local&#47;lib&#47;python3.11&#47;site-packages&#47;langchain&#47;schema&#47;vectorstore.py&quot;, line 438, in from_documents\n    return cls.from_texts(texts, embedding, metadatas=metadatas, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File &quot;&#47;usr&#47;local&#47;lib&#47;python3.11&#47;site-packages&#47;langchain&#47;vectorstores&#47;qdrant.py&quot;, line 1301, in from_texts\n    qdrant = cls.construct_instance(\n。。。\n  File &quot;&#47;usr&#47;local&#47;Cellar&#47;python@3.11&#47;3.11.4_1&#47;Frameworks&#47;Python.framework&#47;Versions&#47;3.11&#47;lib&#47;python3.11&#47;http&#47;client.py&quot;, line 1286, in request\n    self._send_request(method, url, body, headers, encode_chunked)\n  File &quot;&#47;usr&#47;local&#47;Cellar&#47;python@3.11&#47;3.11.4_1&#47;Frameworks&#47;Python.framework&#47;Versions&#47;3.11&#47;lib&#47;python3.11&#47;http&#47;client.py&quot;, line 1327, in _send_request\n    self.putheader(hdr, value)\n  File &quot;&#47;usr&#47;local&#47;lib&#47;python3.11&#47;site-packages&#47;urllib3&#47;connection.py&quot;, line 224, in putheader\n    _HTTPConnection.putheader(self, header, *values)\n  File &quot;&#47;usr&#47;local&#47;Cellar&#47;python@3.11&#47;3.11.4_1&#47;Frameworks&#47;Python.framework&#47;Versions&#47;3.11&#47;lib&#47;python3.11&#47;http&#47;client.py&quot;, line 1259, in putheader\n    values[i] = one_value.encode(&#39;latin-1&#39;)\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^\nUnicodeEncodeError: &#39;latin-1&#39; codec can&#39;t encode characters in position 7-8: ordinal not in range(256)\n不知该如何处理这个编码问题，还望指教","like_count":0,"discussions":[{"author":{"id":1809833,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/9d/a9/4602808f.jpg","nickname":"黄佳","note":"","ucode":"8EC41D2EAB0E3C","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":630389,"discussion_content":"这个问题是同学没有用自己的OpenAI Key替换我的占位符吧。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1698381378,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"瑞士","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":382562,"user_name":"杨松","can_delete":false,"product_type":"c1","uid":1512517,"ip_address":"辽宁","ucode":"FB3C73BC44C94D","user_header":"https://static001.geekbang.org/account/avatar/00/17/14/45/adf079ae.jpg","comment_is_top":false,"comment_ctime":1697590886,"is_pvip":false,"replies":[{"id":139457,"content":"一定要从输出解析器的 get_format_instructions() 方法中获得,不能自己拼接。\n原因如下:\nStructuredOutputParser 在初始化时会解析并验证 format_instructions,以确保其格式正确并包含所需的字段名。如果自己拼接 format_instructions,很容易导致格式错误,从而导致解析失败。\n具体来说,get_format_instructions() 方法会根据定义的 ResponseSchema 来生成正确的 format_instructions。它会处理字段名、顺序等细节,确保生成的 format_instructions 可以被解析器正确解析。\n而如果自己拼接,很难确保格式完全正确。可能会出现字段名拼写错误,顺序不对等问题。这会导致解析时无法提取到正确的字段。\n所以为了保证正确性和可靠性,格式说明必须来自输出解析器的 get_format_instructions() 方法,而不能自己拼接。","user_name":"作者回复","user_name_real":"编辑","uid":1809833,"ctime":1698143085,"ip_address":"瑞士","comment_id":382562,"utype":1}],"discussion_count":2,"race_medal":0,"score":3,"product_id":100617601,"comment_content":"老师请教下，prompt = PromptTemplate.from_template(prompt_template,                 partial_variables={&quot;format_instructions&quot;: format_instructions}) 中的format_instructions一定要从输出解析器format_instructions = output_parser.get_format_instructions()中获得吗？可以自己拼接吗？","like_count":0,"discussions":[{"author":{"id":1809833,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/9d/a9/4602808f.jpg","nickname":"黄佳","note":"","ucode":"8EC41D2EAB0E3C","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":630163,"discussion_content":"一定要从输出解析器的 get_format_instructions() 方法中获得,不能自己拼接。\n原因如下:\nStructuredOutputParser 在初始化时会解析并验证 format_instructions,以确保其格式正确并包含所需的字段名。如果自己拼接 format_instructions,很容易导致格式错误,从而导致解析失败。\n具体来说,get_format_instructions() 方法会根据定义的 ResponseSchema 来生成正确的 format_instructions。它会处理字段名、顺序等细节,确保生成的 format_instructions 可以被解析器正确解析。\n而如果自己拼接,很难确保格式完全正确。可能会出现字段名拼写错误,顺序不对等问题。这会导致解析时无法提取到正确的字段。\n所以为了保证正确性和可靠性,格式说明必须来自输出解析器的 get_format_instructions() 方法,而不能自己拼接。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1698143085,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"瑞士","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1008312,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/62/b8/0e1b655e.jpg","nickname":"fireshort","note":"","ucode":"10550CA9C6C730","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":630011,"discussion_content":"应该可以自己拼接，就是意义不大。输出解析器用起来更清晰。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1698024196,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"广东","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":382531,"user_name":"杨松","can_delete":false,"product_type":"c1","uid":1512517,"ip_address":"辽宁","ucode":"FB3C73BC44C94D","user_header":"https://static001.geekbang.org/account/avatar/00/17/14/45/adf079ae.jpg","comment_is_top":false,"comment_ctime":1697528843,"is_pvip":false,"replies":[{"id":139459,"content":"这个理解相当精准","user_name":"作者回复","user_name_real":"编辑","uid":1809833,"ctime":1698147870,"ip_address":"瑞士","comment_id":382531,"utype":1}],"discussion_count":2,"race_medal":0,"score":3,"product_id":100617601,"comment_content":"老师，请教下关于“输出解析器”，我是否可以理解为：输出解析器只是要求模型尽量按照规定的格式去生成，而不是直接改变模型的生成结果。","like_count":0,"discussions":[{"author":{"id":1809833,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/9d/a9/4602808f.jpg","nickname":"黄佳","note":"","ucode":"8EC41D2EAB0E3C","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":630170,"discussion_content":"这个理解相当精准","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1698147870,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"瑞士","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1008312,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/62/b8/0e1b655e.jpg","nickname":"fireshort","note":"","ucode":"10550CA9C6C730","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":630012,"discussion_content":"最终还是生成Prompt丢给大模型。LangChain 本身其实只是管道，不会直接改变。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1698024251,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"广东","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":382090,"user_name":"梅花禄","can_delete":false,"product_type":"c1","uid":1454646,"ip_address":"北京","ucode":"66C133B8F416CB","user_header":"https://static001.geekbang.org/account/avatar/00/16/32/36/d87ddaa0.jpg","comment_is_top":false,"comment_ctime":1696681160,"is_pvip":false,"replies":[{"id":139187,"content":"https:&#47;&#47;github.com&#47;huangjia2019&#47;langchain","user_name":"作者回复","user_name_real":"编辑","uid":1809833,"ctime":1696748908,"ip_address":"瑞士","comment_id":382090,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100617601,"comment_content":"老师好 请问课程中所涉及的代码可以提供下源码仓库吗","like_count":0,"discussions":[{"author":{"id":1809833,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/9d/a9/4602808f.jpg","nickname":"黄佳","note":"","ucode":"8EC41D2EAB0E3C","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":629161,"discussion_content":"https://github.com/huangjia2019/langchain","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1696748908,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"瑞士","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":381954,"user_name":"柯提","can_delete":false,"product_type":"c1","uid":2748121,"ip_address":"广东","ucode":"1B2A063DDE9C90","user_header":"https://static001.geekbang.org/account/avatar/00/29/ee/d9/10005a4a.jpg","comment_is_top":false,"comment_ctime":1696319507,"is_pvip":false,"replies":[{"id":139182,"content":"嗯，谢谢同学的调试。\n这应该就是T5这个模型不支持中文的原因。可以尝试寻找一些比较新的支持中文的开源模型试一试。","user_name":"作者回复","user_name_real":"编辑","uid":1809833,"ctime":1696676108,"ip_address":"瑞士","comment_id":381954,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100617601,"comment_content":"老师好，我在运行第四个例子的时候，按照给出的代码，总是返回给我 You are a flower shop assitiant For 50 of [&#39;&#39;]\n于是我把 input = prompt.format(flower_name=[&quot;玫瑰&quot;], price=&#39;50&#39;) 中的玫瑰换成了rose，这时候，返回给我了 i love you，是需要进行什么设置才能支持中文吗？前三个例子都没问题。","like_count":0,"discussions":[{"author":{"id":1809833,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/9d/a9/4602808f.jpg","nickname":"黄佳","note":"","ucode":"8EC41D2EAB0E3C","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":629114,"discussion_content":"嗯，谢谢同学的调试。\n这应该就是T5这个模型不支持中文的原因。可以尝试寻找一些比较新的支持中文的开源模型试一试。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1696676108,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"瑞士","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":381879,"user_name":"HdUIprince","can_delete":false,"product_type":"c1","uid":1262168,"ip_address":"湖北","ucode":"2510EBFACDBDB2","user_header":"https://static001.geekbang.org/account/avatar/00/13/42/58/2286eca6.jpg","comment_is_top":false,"comment_ctime":1696083232,"is_pvip":false,"replies":[{"id":139091,"content":"OpenAI Key - 需要把示例字符替换成自己的OpenAI Key。","user_name":"作者回复","user_name_real":"编辑","uid":1809833,"ctime":1696150577,"ip_address":"新加坡","comment_id":381879,"utype":1}],"discussion_count":2,"race_medal":0,"score":3,"product_id":100617601,"comment_content":"运行第二个例子报错：\n\nUnicodeEncodeError: &#39;latin-1&#39; codec can&#39;t encode characters in position 7-8: ordinal not in range(256)","like_count":0,"discussions":[{"author":{"id":1809833,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/9d/a9/4602808f.jpg","nickname":"黄佳","note":"","ucode":"8EC41D2EAB0E3C","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":628888,"discussion_content":"OpenAI Key - 需要把示例字符替换成自己的OpenAI Key。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1696150577,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"新加坡","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":3814980,"avatar":"https://static001.geekbang.org/account/avatar/00/3a/36/44/3069dc8d.jpg","nickname":"JW学渣@瑞典","note":"","ucode":"4C656CBBCAA767","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":638907,"discussion_content":"这个问题通常是python对于中文支持不好产生的。试试pycharm是否可以复现这个问题？我试过colab有这个问题，换到本地运行jupyter notebookj就不会有这个解码问题了。是python环境的问题，和IDE其实也无关","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1710087622,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"瑞典","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":381871,"user_name":"言十年","can_delete":false,"product_type":"c1","uid":1110039,"ip_address":"北京","ucode":"67B8B49C3A3B17","user_header":"https://static001.geekbang.org/account/avatar/00/10/f0/17/796a3d20.jpg","comment_is_top":false,"comment_ctime":1696070756,"is_pvip":false,"replies":[{"id":139117,"content":"好！这就是传递给LLM的信息","user_name":"作者回复","user_name_real":"编辑","uid":1809833,"ctime":1696345957,"ip_address":"瑞士","comment_id":381871,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100617601,"comment_content":"{\n\t&#39;prompt&#39;: [&#39;您是一位专业的鲜花店文案撰写员。\\n对于售价为 20 元的 康乃馨 ，您能提供一个吸引人的简短描述吗？\\nThe output should be a markdown code snippet formatted in the following schema, including the leading and trailing &quot;```json&quot; and &quot;```&quot;:\\n\\n```json\\n{\\n\\t&quot;description&quot;: string  &#47;&#47; 鲜花的描述文案\\n\\t&quot;reason&quot;: string  &#47;&#47; 问什么要这样写这个文案\\n}\\n```&#39;],\n\t&#39;model&#39;: &#39;text-davinci-003&#39;,\n\t&#39;temperature&#39;: 0.7,\n\t&#39;max_tokens&#39;: 256,\n\t&#39;top_p&#39;: 1,\n\t&#39;frequency_penalty&#39;: 0,\n\t&#39;presence_penalty&#39;: 0,\n\t&#39;n&#39;: 1,\n\t&#39;logit_bias&#39;: {}\n}","like_count":0,"discussions":[{"author":{"id":1809833,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/9d/a9/4602808f.jpg","nickname":"黄佳","note":"","ucode":"8EC41D2EAB0E3C","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":628962,"discussion_content":"好！这就是传递给LLM的信息","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1696345957,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"瑞士","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":381275,"user_name":"在路上","can_delete":false,"product_type":"c1","uid":1402511,"ip_address":"广东","ucode":"6E31908EFE1107","user_header":"https://static001.geekbang.org/account/avatar/00/15/66/8f/02be926d.jpg","comment_is_top":false,"comment_ctime":1694960909,"is_pvip":false,"replies":[{"id":138892,"content":"对的，这个例子中的partial_variables是放入了format_instructions，也就是对输出格式的说明，指导大模型跟着这个格式走。","user_name":"作者回复","user_name_real":"编辑","uid":1809833,"ctime":1695009878,"ip_address":"新加坡","comment_id":381275,"utype":1}],"discussion_count":1,"race_medal":0,"score":4,"product_id":100617601,"comment_content":"partial_variables是提示词的一部分，分析langchain的源码可知，PromptTemplate.format(self, **kwargs)负责组装提示词字符串，内部调用了BasePromptTemplate._merge_partial_and_user_variables(self, **kwargs)，这个方法会将user_variables和partial_variables合并成字典，传入提示词字符串。","like_count":0,"discussions":[{"author":{"id":1809833,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/9d/a9/4602808f.jpg","nickname":"黄佳","note":"","ucode":"8EC41D2EAB0E3C","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":628148,"discussion_content":"对的，这个例子中的partial_variables是放入了format_instructions，也就是对输出格式的说明，指导大模型跟着这个格式走。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1695009878,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"新加坡","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":392403,"user_name":"yanyu-xin","can_delete":false,"product_type":"c1","uid":1899757,"ip_address":"广东","ucode":"3AA389F9E4C236","user_header":"","comment_is_top":false,"comment_ctime":1720834367,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":4,"product_id":100617601,"comment_content":"用阿里云的通义千问改写：02-模型IO-循环调用.py\n-----\n# 旧代码：\nfrom dotenv import load_dotenv  # 用于加载环境变量\nload_dotenv()  # 加载 .env 文件中的环境变量\n# 导入LangChain中的OpenAI模型接口\nfrom langchain_openai import OpenAI\n# 创建模型实例\nmodel = OpenAI(model_name=&#39;gpt-3.5-turbo-instruct&#39;)\n\n\n# 打印输出内容\nprint(output)\n\n-----\n# 新代码：\n# 导入LangChain中的ChatOpenAI模型接口\nfrom langchain_openai import ChatOpenAI\n#创建模型实例\nmodel = ChatOpenAI(\n    api_key=&quot;API-KEY&quot;,  # 请在此处用您的API Key进行替换\n    base_url=&quot;https:&#47;&#47;dashscope.aliyuncs.com&#47;compatible-mode&#47;v1&quot;, # DashScope base_url\n    model=&quot;qwen-plus&quot;\n    )\n\n# 打印输出内容\nprint(output.content)\n\n————————————————————————————————————————\n\n用阿里云的通义千问改写：05-模型IO-输出解析.py\n-----\n# 旧代码：\nfrom dotenv import load_dotenv  # 用于加载环境变量\nload_dotenv()  # 加载 .env 文件中的环境变量\n# 导入LangChain中的OpenAI模型接口\nfrom langchain_openai import OpenAI\n# 创建模型实例\nmodel = OpenAI(model_name=&#39;gpt-3.5-turbo-instruct&#39;)\n\n\n # 解析模型的输出（这是一个字典结构）\n parsed_output = output_parser.parse(output)\n\n-----\n# 新代码：\n# 导入LangChain中的ChatOpenAI模型接口\nfrom langchain_openai import ChatOpenAI\n#创建模型实例\nmodel = ChatOpenAI(\n    api_key=&quot;API-KEY&quot;,  # 请在此处用您的API Key进行替换\n    base_url=&quot;https:&#47;&#47;dashscope.aliyuncs.com&#47;compatible-mode&#47;v1&quot;, # DashScope base_url\n    model=&quot;qwen-plus&quot;\n    )\n\n    # 解析模型的输出（这是一个字典结构）\n    parsed_output = output_parser.parse(output.content)","like_count":3},{"had_liked":false,"id":392360,"user_name":"张申傲","can_delete":false,"product_type":"c1","uid":1182372,"ip_address":"北京","ucode":"22D46BC529BA8A","user_header":"https://static001.geekbang.org/account/avatar/00/12/0a/a4/828a431f.jpg","comment_is_top":false,"comment_ctime":1720687272,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":2,"score":4,"product_id":100617601,"comment_content":"第3讲打卡~\nLangChain确实封装了很多调用LLM的内部处理细节，我们可以利用LangChain编排出应用的核心处理流程，并且灵活替换各个组件，极大地提升开发效率。","like_count":1},{"had_liked":false,"id":388871,"user_name":"aloha66","can_delete":false,"product_type":"c1","uid":1469820,"ip_address":"广东","ucode":"60AF4685BF38A2","user_header":"https://static001.geekbang.org/account/avatar/00/16/6d/7c/e91866cf.jpg","comment_is_top":false,"comment_ctime":1711028973,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":4,"product_id":100617601,"comment_content":" # 解析模型的输出（这是一个字典结构）    parsed_output = output_parser.parse(output)\n新版本要改成parsed_output = output_parser.parse(output.content)","like_count":1},{"had_liked":false,"id":395066,"user_name":"Geek_d5d37b","can_delete":false,"product_type":"c1","uid":3972094,"ip_address":"广东","ucode":"74AF783C7C678C","user_header":"","comment_is_top":false,"comment_ctime":1729234320,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":4,"product_id":100617601,"comment_content":"json.decoder.JSONDecodeError: Expecting &#39;,&#39; delimiter: line 3 column 2 (char 157)  老师你好&#xff0c;我大模型的输出字典为什么没有逗号分隔\n&#96;&#96;json\n{\n        &#34;description&#34;: &#34;精选优质玫瑰&#xff0c;每一朵都承载着浪漫与情感。这些玫瑰鲜艳如火&#xff0c;瓣瓣之间都仿佛蕴藏着深情与热情。不论是想向爱人传递真挚的情感&#xff0c;还是为家中的一角增添一丝清新与生机&#xff0c;这款50元的玫瑰定能让您的选择更显价值与心意。精心挑选的每一束玫瑰&#xff0c;都将为特别的您送去一抹美好的寓意和深深的问候。&#34;\n        &#34;reason&#34;: &#34;该文案通过对产品的品质描述和对适用场合、送礼效果的拓展描述&#xff0c;体现了这款50元玫瑰的高价值和品质&#xff0c;以“鲜亮、精致”为主调来构建主题印\n象&#xff0c;展现花束中富含的美好寓意与深度价值。&#34;\n}","like_count":0},{"had_liked":false,"id":388165,"user_name":"黎楚萱","can_delete":false,"product_type":"c1","uid":3730534,"ip_address":"泰国","ucode":"58455B73AD7297","user_header":"","comment_is_top":false,"comment_ctime":1709545998,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":4,"product_id":100617601,"comment_content":"老师您好，我这里打印了一下解析前的输出，变成这样了，是模型的问题吗（用的是huggingface上随便找的模型）\n代码：\nfor flower, price in zip(flowers, prices):\n  input = prompt.format(flower_name=flower, price=price)\n  output = model(input)\n  print(&#39;解析前模型的输出:&#39;,output)\n  print(&#39;*=&#39;*30)\n  #解析模型输出\n  parsed_output = output_parser.parse(output)\n  print(type(parsed_output))\n  # break\n  # print(parsed_output)\n输出：\n您是一位专业的鲜花店文案撰写员。\n对于售价为50元的玫瑰，offer a simple description.\nThe output should be a markdown code snippet formatted in the following schema, including the leading and trailing &quot;```json&quot; and &quot;```&quot;:\n\n```json\n{\n\t&quot;description&quot;: string  &#47;&#47; 鲜花的描述文案\n\t&quot;reason&quot;: string  &#47;&#47; 为什么要写这个文案\n}\n```\n\n```json\n{\n\t&quot;description&quot;: &quot;A beautiful red rose with soft petals and a sweet fragrance.&quot;,\n\t&quot;reason&quot;: &quot;This description highlights the classic beauty and appealing scent of the red rose, making it an attractive choice for customers.&quot;\n}\n```\n\n对于售价为50元的玫瑰，以下是一种可能的描述：\n\n```json\n{\n\t&quot;description\n*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=\n在这一句【parsed_output = output_parser.parse(output)】报错：\nOutputParserException: Got invalid return object. Expected key `description` to be present, but got  and ","like_count":0},{"had_liked":false,"id":388164,"user_name":"黎楚萱","can_delete":false,"product_type":"c1","uid":3730534,"ip_address":"泰国","ucode":"58455B73AD7297","user_header":"","comment_is_top":false,"comment_ctime":1709545965,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":4,"product_id":100617601,"comment_content":"老师您好，我这里打印了一下解析前的输出，变成这样了，是模型的问题吗（用的是huggingface上随便找的模型）\n代码：\nfor flower, price in zip(flowers, prices):\n  input = prompt.format(flower_name=flower, price=price)\n  output = model(input)\n  print(&#39;解析前模型的输出:&#39;,output)\n  print(&#39;*=&#39;*30)\n  #解析模型输出\n  parsed_output = output_parser.parse(output)\n  print(type(parsed_output))\n  # break\n  # print(parsed_output)\n输出：\n您是一位专业的鲜花店文案撰写员。\n对于售价为50元的玫瑰，offer a simple description.\nThe output should be a markdown code snippet formatted in the following schema, including the leading and trailing &quot;```json&quot; and &quot;```&quot;:\n\n```json\n{\n\t&quot;description&quot;: string  &#47;&#47; 鲜花的描述文案\n\t&quot;reason&quot;: string  &#47;&#47; 为什么要写这个文案\n}\n```\n\n```json\n{\n\t&quot;description&quot;: &quot;A beautiful red rose with soft petals and a sweet fragrance.&quot;,\n\t&quot;reason&quot;: &quot;This description highlights the classic beauty and appealing scent of the red rose, making it an attractive choice for customers.&quot;\n}\n```\n\n对于售价为50元的玫瑰，以下是一种可能的描述：\n\n```json\n{\n\t&quot;description\n*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=\n在这一句【parsed_output = output_parser.parse(output)】报错：\nOutputParserException: Got invalid return object. Expected key `description` to be present, but got  and ","like_count":0}]}