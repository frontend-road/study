{"id":101518,"title":"10 | 应该如何理解请求方法？","content":"<p>上一讲我介绍了HTTP的报文结构，它是由header+body构成，请求头里有请求方法和请求目标，响应头里有状态码和原因短语，今天要说的就是请求头里的请求方法。</p><h2>标准请求方法</h2><p>HTTP协议里为什么要有“请求方法”这个东西呢？</p><p>这就要从HTTP协议设计时的定位说起了。还记得吗？蒂姆·伯纳斯-李最初设想的是要用HTTP协议构建一个超链接文档系统，使用URI来定位这些文档，也就是资源。那么，该怎么在协议里操作这些资源呢？</p><p>很显然，需要有某种“动作的指示”，告诉操作这些资源的方式。所以，就这么出现了“请求方法”。它的实际含义就是客户端发出了一个“动作指令”，要求服务器端对URI定位的资源执行这个动作。</p><p>目前HTTP/1.1规定了八种方法，单词<strong>都必须是大写的形式</strong>，我先简单地列把它们列出来，后面再详细讲解。</p><ol>\n<li>GET：获取资源，可以理解为读取或者下载数据；</li>\n<li>HEAD：获取资源的元信息；</li>\n<li>POST：向资源提交数据，相当于写入或上传数据；</li>\n<li>PUT：类似POST；</li>\n<li>DELETE：删除资源；</li>\n<li>CONNECT：建立特殊的连接隧道；</li>\n<li>OPTIONS：列出可对资源实行的方法；</li>\n<li>TRACE：追踪请求-响应的传输路径。</li>\n</ol><p><img src=\"https://static001.geekbang.org/resource/image/3c/6d/3cdc8ac71b80929f4a94dfeb9ffe4b6d.jpg?wh=2254*1222\" alt=\"\"></p><p>看看这些方法，是不是有点像对文件或数据库的“增删改查”操作，只不过这些动作操作的目标不是本地资源，而是远程服务器上的资源，所以只能由客户端“请求”或者“指示”服务器来完成。</p><!-- [[[read_end]]] --><p>既然请求方法是一个“指示”，那么客户端自然就没有决定权，服务器掌控着所有资源，也就有绝对的决策权力。它收到HTTP请求报文后，看到里面的请求方法，可以执行也可以拒绝，或者改变动作的含义，毕竟HTTP是一个“协议”，两边都要“商量着来”。</p><p>比如，你发起了一个GET请求，想获取“/orders”这个文件，但这个文件保密级别比较高，不是谁都能看的，服务器就可以有如下的几种响应方式：</p><ol>\n<li>假装这个文件不存在，直接返回一个404 Not found报文；</li>\n<li>稍微友好一点，明确告诉你有这个文件，但不允许访问，返回一个403 Forbidden；</li>\n<li>再宽松一些，返回405 Method Not Allowed，然后用Allow头告诉你可以用HEAD方法获取文件的元信息。</li>\n</ol><h2>GET/HEAD</h2><p>虽然HTTP/1.1里规定了八种请求方法，但只有前四个是比较常用的，所以我们先来看一下这四个方法。</p><p><strong>GET</strong>方法应该是HTTP协议里最知名的请求方法了，也应该是用的最多的，自0.9版出现并一直被保留至今，是名副其实的“元老”。</p><p>它的含义是请求<strong>从服务器获取资源</strong>，这个资源既可以是静态的文本、页面、图片、视频，也可以是由PHP、Java动态生成的页面或者其他格式的数据。</p><p>GET方法虽然基本动作比较简单，但搭配URI和其他头字段就能实现对资源更精细的操作。</p><p>例如，在URI后使用“#”，就可以在获取页面后直接定位到某个标签所在的位置；使用If-Modified-Since字段就变成了“有条件的请求”，仅当资源被修改时才会执行获取动作；使用Range字段就是“范围请求”，只获取资源的一部分数据。</p><p><strong>HEAD</strong>方法与GET方法类似，也是请求从服务器获取资源，服务器的处理机制也是一样的，但服务器不会返回请求的实体数据，只会传回响应头，也就是资源的“元信息”。</p><p>HEAD方法可以看做是GET方法的一个“简化版”或者“轻量版”。因为它的响应头与GET完全相同，所以可以用在很多并不真正需要资源的场合，避免传输body数据的浪费。</p><p>比如，想要检查一个文件是否存在，只要发个HEAD请求就可以了，没有必要用GET把整个文件都取下来。再比如，要检查文件是否有最新版本，同样也应该用HEAD，服务器会在响应头里把文件的修改时间传回来。</p><p>你可以在实验环境里试一下这两个方法，运行Telnet，分别向URI“/10-1”发送GET和HEAD请求，观察一下响应头是否一致。</p><pre><code>GET /10-1 HTTP/1.1\nHost: www.chrono.com\n\n\nHEAD /10-1 HTTP/1.1\nHost: www.chrono.com\n</code></pre><h2>POST/PUT</h2><p>接下来要说的是<strong>POST</strong>和<strong>PUT</strong>方法，这两个方法也很像。</p><p>GET和HEAD方法是从服务器获取数据，而POST和PUT方法则是相反操作，向URI指定的资源提交数据，数据就放在报文的body里。</p><p>POST也是一个经常用到的请求方法，使用频率应该是仅次于GET，应用的场景也非常多，只要向服务器发送数据，用的大多数都是POST。</p><p>比如，你上论坛灌水，敲了一堆字后点击“发帖”按钮，浏览器就执行了一次POST请求，把你的文字放进报文的body里，然后拼好POST请求头，通过TCP协议发给服务器。</p><p>又比如，你上购物网站，看到了一件心仪的商品，点击“加入购物车”，这时也会有POST请求，浏览器会把商品ID发给服务器，服务器再把ID写入你的购物车相关的数据库记录。</p><p>PUT的作用与POST类似，也可以向服务器提交数据，但与POST存在微妙的不同，通常POST表示的是“新建”“create”的含义，而PUT则是“修改”“update”的含义。</p><p>在实际应用中，PUT用到的比较少。而且，因为它与POST的语义、功能太过近似，有的服务器甚至就直接禁止使用PUT方法，只用POST方法上传数据。</p><p>实验环境的“/10-2”模拟了POST和PUT方法的处理过程，你仍然可以用Telnet发送测试请求，看看运行的效果。注意，在发送请求时，头字段“Content-Length”一定要写对，是空行后body的长度：</p><pre><code>POST /10-2 HTTP/1.1\nHost: www.chrono.com\nContent-Length: 17\n\nPOST DATA IS HERE\n\nPUT /10-2 HTTP/1.1\nHost: www.chrono.com\nContent-Length: 16\n\nPUT DATA IS HERE\n</code></pre><h2>其他方法</h2><p>讲完了GET/HEAD/POST/PUT，还剩下四个标准请求方法，它们属于比较“冷僻”的方法，应用的不是很多。</p><p><strong>DELETE</strong>方法指示服务器删除资源，因为这个动作危险性太大，所以通常服务器不会执行真正的删除操作，而是对资源做一个删除标记。当然，更多的时候服务器就直接不处理DELETE请求。</p><p><strong>CONNECT</strong>是一个比较特殊的方法，要求服务器为客户端和另一台远程服务器建立一条特殊的连接隧道，这时Web服务器在中间充当了代理的角色。</p><p><strong>OPTIONS</strong>方法要求服务器列出可对资源实行的操作方法，在响应头的Allow字段里返回。它的功能很有限，用处也不大，有的服务器（例如Nginx）干脆就没有实现对它的支持。</p><p><strong>TRACE</strong>方法多用于对HTTP链路的测试或诊断，可以显示出请求-响应的传输路径。它的本意是好的，但存在漏洞，会泄漏网站的信息，所以Web服务器通常也是禁止使用。</p><h2>扩展方法</h2><p>虽然HTTP/1.1里规定了八种请求方法，但它并没有限制我们只能用这八种方法，这也体现了HTTP协议良好的扩展性，我们可以任意添加请求动作，只要请求方和响应方都能理解就行。</p><p>例如著名的愚人节玩笑RFC2324，它定义了协议HTCPCP，即“超文本咖啡壶控制协议”，为HTTP协议增加了用来煮咖啡的BREW方法，要求添牛奶的WHEN方法。</p><p>此外，还有一些得到了实际应用的请求方法（WebDAV），例如MKCOL、COPY、MOVE、LOCK、UNLOCK、PATCH等。如果有合适的场景，你也可以把它们应用到自己的系统里，比如用LOCK方法锁定资源暂时不允许修改，或者使用PATCH方法给资源打个小补丁，部分更新数据。但因为这些方法是非标准的，所以需要为客户端和服务器编写额外的代码才能添加支持。</p><p>当然了，你也完全可以根据实际需求，自己发明新的方法，比如“PULL”拉取某些资源到本地，“PURGE”清理某个目录下的所有缓存数据。</p><h2>安全与幂等</h2><p>关于请求方法还有两个面试时有可能会问到、比较重要的概念：<strong>安全</strong>与<strong>幂等</strong>。</p><p>在HTTP协议里，所谓的“<strong>安全</strong>”是指请求方法不会“破坏”服务器上的资源，即不会对服务器上的资源造成实质的修改。</p><p>按照这个定义，只有GET和HEAD方法是“安全”的，因为它们是“只读”操作，只要服务器不故意曲解请求方法的处理方式，无论GET和HEAD操作多少次，服务器上的数据都是“安全的”。</p><p>而POST/PUT/DELETE操作会修改服务器上的资源，增加或删除数据，所以是“不安全”的。</p><p>所谓的“<strong>幂等</strong>”实际上是一个数学用语，被借用到了HTTP协议里，意思是多次执行相同的操作，结果也都是相同的，即多次“幂”后结果“相等”。</p><p>很显然，GET和HEAD既是安全的也是幂等的，DELETE可以多次删除同一个资源，效果都是“资源不存在”，所以也是幂等的。</p><p>POST和PUT的幂等性质就略费解一点。</p><p>按照RFC里的语义，POST是“新增或提交数据”，多次提交数据会创建多个资源，所以不是幂等的；而PUT是“替换或更新数据”，多次更新一个资源，资源还是会第一次更新的状态，所以是幂等的。</p><p>我对你的建议是，你可以对比一下SQL来加深理解：把POST理解成INSERT，把PUT理解成UPDATE，这样就很清楚了。多次INSERT会添加多条记录，而多次UPDATE只操作一条记录，而且效果相同。</p><h2>小结</h2><p>今天我们学习了HTTP报文里请求方法相关的知识，简单小结一下。</p><ol>\n<li><span class=\"orange\">请求方法是客户端发出的、要求服务器执行的、对资源的一种操作；</span></li>\n<li><span class=\"orange\">请求方法是对服务器的“指示”，真正应如何处理由服务器来决定；</span></li>\n<li><span class=\"orange\">最常用的请求方法是GET和POST，分别是获取数据和发送数据；</span></li>\n<li><span class=\"orange\">HEAD方法是轻量级的GET，用来获取资源的元信息；</span></li>\n<li><span class=\"orange\">PUT基本上是POST的同义词，多用于更新数据；</span></li>\n<li><span class=\"orange\">“安全”与“幂等”是描述请求方法的两个重要属性，具有理论指导意义，可以帮助我们设计系统。</span></li>\n</ol><h2>课下作业</h2><ol>\n<li>你能把GET/POST等请求方法对应到数据库的“增删改查”操作吗？请求头应该如何设计呢？</li>\n<li>你觉得TRACE/OPTIONS/CONNECT方法能够用GET或POST间接实现吗？</li>\n</ol><p>欢迎你把自己的答案写在留言区，与我和其他同学一起讨论。如果你觉得有所收获，欢迎你把文章分享给你的朋友。</p><p><img src=\"https://static001.geekbang.org/resource/image/60/81/60ee384d93d46cd6632be0606ae21681.png?wh=1769*1423\" alt=\"unpreview\"></p><p></p>","comments":[{"had_liked":false,"id":169711,"user_name":"GitHubGanKai","can_delete":false,"product_type":"c1","uid":1477351,"ip_address":"","ucode":"BF6D6F8F3EED31","user_header":"https://static001.geekbang.org/account/avatar/00/16/8a/e7/a6c603cf.jpg","comment_is_top":false,"comment_ctime":1578409719,"is_pvip":false,"replies":[{"id":"65886","content":"按照http协议，空白行就是为了分隔header和body，因为http是纯文本的协议。<br><br>不知道面试官还能有什么新的解释，也许是故弄玄虚。<br><br>遇到这样的人可以及时请教，不能让他话只说一半。","user_name":"作者回复","comment_id":169711,"uid":"1181974","ip_address":"","utype":1,"ctime":1578454546,"user_name_real":"chrono"}],"discussion_count":7,"race_medal":0,"score":"319405989623","product_id":100029001,"comment_content":"老师，这是我第三次刷这个专栏了，面试的时候，有个问题，想请教您一下，还希望你能解答一下：请求行 + 头部信息 + 空白行 + body ，有被问到说空白行的意义，我一直以为就是纯粹来标识 headers 的结束，但是面试官说不止这个功能，我后面看了HTTP 权威指南 也没有找到，Stack Overflow 也没找到。。。希望老师可以跟我说一下。","like_count":75,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":480685,"discussion_content":"按照http协议，空白行就是为了分隔header和body，因为http是纯文本的协议。\n\n不知道面试官还能有什么新的解释，也许是故弄玄虚。\n\n遇到这样的人可以及时请教，不能让他话只说一半。","likes_number":10,"is_delete":false,"is_hidden":false,"ctime":1578454546,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1471387,"avatar":"https://static001.geekbang.org/account/avatar/00/16/73/9b/67a38926.jpg","nickname":"keepgoing","note":"","ucode":"A2FE0687FB17E0","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":308548,"discussion_content":"我也觉得是故弄玄虚，或者自己在业务开发中边角case遇到了一些用法拿出来问，没有实际通用价值","likes_number":9,"is_delete":false,"is_hidden":false,"ctime":1600995304,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1234591,"avatar":"https://static001.geekbang.org/account/avatar/00/12/d6/9f/0213e8a0.jpg","nickname":"🤪HappyJoo","note":"","ucode":"96E1858F06BABA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":349135,"discussion_content":"面试结束之后就可以及时请教了。不对，甚至这个问题结束了就可以请假了，没关系的，问问题很正常的。","likes_number":5,"is_delete":false,"is_hidden":false,"ctime":1612926266,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2875764,"avatar":"","nickname":"Geek_e269ab","note":"","ucode":"E4AC7970BCF600","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":542368,"discussion_content":"可以想一下，如果服务器遇到HTTP报文，该如何解析呢？因为起始行只有一行，可以一直解析字符，直到遇到CRLF就知道请求行接受完毕，之后就可以开始解析请求头，可以通过&#34;:&#34;来区分Field Name和Field Value，在每个key value结束之后，会有CRLF，可以得知字是应该解析下一个key value，那问题来了，你并不知道有多少个请求头，什么时候解析请求头结束呢？这也就是空白行的作用，如果解析完key value之后，遇到CRLF，之后应该解析下一个key value，可是遇到的是CRLF，就说明请求头已经全部解析完毕啦","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1640742048,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":3,"child_discussions":[{"author":{"id":2821960,"avatar":"","nickname":"kangshuai","note":"","ucode":"1AA018FF3EC5B5","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2875764,"avatar":"","nickname":"Geek_e269ab","note":"","ucode":"E4AC7970BCF600","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":554530,"discussion_content":"起始行和请求头之间应该没有 CRLF ~","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1646449959,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":542368,"ip_address":""},"score":554530,"extra":""},{"author":{"id":1535891,"avatar":"https://static001.geekbang.org/account/avatar/00/17/6f/93/e5bcd0f4.jpg","nickname":"fahsa","note":"","ucode":"5ABBBEF0A6221D","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":2821960,"avatar":"","nickname":"kangshuai","note":"","ucode":"1AA018FF3EC5B5","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":554925,"discussion_content":"有的吧，起始行也是以crlf结束的呀","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1646662689,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":554530,"ip_address":""},"score":554925,"extra":""},{"author":{"id":1338334,"avatar":"https://static001.geekbang.org/account/avatar/00/14/6b/de/686585ee.jpg","nickname":"小C","note":"","ucode":"27C2D021A9E21E","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":2821960,"avatar":"","nickname":"kangshuai","note":"","ucode":"1AA018FF3EC5B5","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":580541,"discussion_content":"没有的话怎么区别","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1658238326,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":554530,"ip_address":""},"score":580541,"extra":""}]}]},{"had_liked":false,"id":105258,"user_name":"一步","can_delete":false,"product_type":"c1","uid":1005391,"ip_address":"","ucode":"73CEA468CE70C3","user_header":"https://static001.geekbang.org/account/avatar/00/0f/57/4f/6fb51ff1.jpg","comment_is_top":false,"comment_ctime":1560949204,"is_pvip":true,"replies":[{"id":"38126","content":"我接触的领域里options用的比较少，可能有点孤陋寡闻了。","user_name":"作者回复","comment_id":105258,"uid":"1181974","ip_address":"","utype":1,"ctime":1560992110,"user_name_real":"chrono"}],"discussion_count":9,"race_medal":1,"score":"164769706452","product_id":100029001,"comment_content":"OPTIONS 方法还是用的很多的，CORS跨域请求必须用到OPTIONS方法了","like_count":39,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":454613,"discussion_content":"我接触的领域里options用的比较少，可能有点孤陋寡闻了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1560992110,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1562346,"avatar":"","nickname":"pwq309","note":"","ucode":"E1E318147707B4","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":1741,"discussion_content":"跨域资源共享标准新增了一组 HTTP 首部字段，允许服务器声明哪些源站通过浏览器有权限访问哪些资源。另外，规范要求，对那些可能对服务器数据产生副作用的 HTTP 请求方法（特别是 GET 以外的 HTTP 请求，或者搭配某些 MIME 类型的 POST 请求），浏览器必须首先使用 OPTIONS 方法发起一个预检请求（preflight request），从而获知服务端是否允许该跨域请求。服务器确认允许之后，才发起实际的 HTTP 请求。在预检请求的返回中，服务器端也可以通知客户端，是否需要携带身份凭证（包括 Cookies 和 HTTP 认证相关数据）。\n在现在前端最常用的 cors 跨域中，浏览器都是用 OPTIONS 方法发预检请求的。","likes_number":47,"is_delete":false,"is_hidden":false,"ctime":1562859414,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1476323,"avatar":"https://static001.geekbang.org/account/avatar/00/16/86/e3/a31f6869.jpg","nickname":" 尿布","note":"","ucode":"D1C8BDA7540962","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1562346,"avatar":"","nickname":"pwq309","note":"","ucode":"E1E318147707B4","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":304346,"discussion_content":"学习了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1599550881,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":1741,"ip_address":""},"score":304346,"extra":""}]},{"author":{"id":1379339,"avatar":"https://static001.geekbang.org/account/avatar/00/15/0c/0b/1c4d0e94.jpg","nickname":"Mars","note":"","ucode":"E7D9FE506A382A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":295292,"discussion_content":"跨域中的OPTIONS预检请求也不是必须的，非简单请求才会先发一个options请求“探路”","likes_number":4,"is_delete":false,"is_hidden":false,"ctime":1596158345,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2406841,"avatar":"https://static001.geekbang.org/account/avatar/00/24/b9/b9/9e4d7aa4.jpg","nickname":"乘风破浪","note":"","ucode":"937AF15F3FEBDC","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":347579,"discussion_content":"这篇文章把cors说清楚了，https://zhuanlan.zhihu.com/p/53996160，非前端，看得还是有些吃力。","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1612260674,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1318915,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eo2SjCeylLv0P3Glle5277kA4b8cAuxr1NrC0njPKEqzSpB8IEicHB29GicFFwG1qiaxs4hxRiaBmoibVw/132","nickname":"阳仔","note":"","ucode":"4907A3750CEAD6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":288726,"discussion_content":"对，和前端交互经常用到","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1593853728,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1435733,"avatar":"https://static001.geekbang.org/account/avatar/00/15/e8/55/92f82281.jpg","nickname":"MClink","note":"","ucode":"F479190923355C","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":227477,"discussion_content":"是的，前后端分离的项目经常会出现这种请求","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1586495647,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1473520,"avatar":"https://static001.geekbang.org/account/avatar/00/16/7b/f0/269139d5.jpg","nickname":"Cris","note":"","ucode":"F8A287134F1078","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":5096,"discussion_content":"这个一步不知道是不是大连海事大学毕业的那个一步","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1565941928,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1746993,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eopiaadGyOrXia3x0gkDxol9NCS5vrkcuueLrJyjZf2wTkqEHEibmvV3cKUibnDaUeIic4X77k4Ehprq0Q/132","nickname":"!nfanta","note":"","ucode":"26D7861D950DB4","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1473520,"avatar":"https://static001.geekbang.org/account/avatar/00/16/7b/f0/269139d5.jpg","nickname":"Cris","note":"","ucode":"F8A287134F1078","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":113718,"discussion_content":"这个是什么梗","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577929238,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":5096,"ip_address":""},"score":113718,"extra":""}]}]},{"had_liked":false,"id":155624,"user_name":"nora","can_delete":false,"product_type":"c1","uid":1206539,"ip_address":"","ucode":"3A3EABF27D0261","user_header":"https://static001.geekbang.org/account/avatar/00/12/69/0b/780b0aac.jpg","comment_is_top":false,"comment_ctime":1574730029,"is_pvip":false,"replies":[{"id":"59783","content":"赞！","user_name":"作者回复","comment_id":155624,"uid":"1181974","ip_address":"","utype":1,"ctime":1574748227,"user_name_real":"chrono"}],"discussion_count":3,"race_medal":0,"score":"139013683501","product_id":100029001,"comment_content":"<br>pwq309同学的解释，可以说是很清晰了。<br><br>跨域资源共享标准新增了一组 HTTP 首部字段，允许服务器声明哪些源站通过浏览器有权限访问哪些资源。另外，规范要求，对那些可能对服务器数据产生副作用的 HTTP 请求方法（特别是 GET 以外的 HTTP 请求，或者搭配某些 MIME 类型的 POST 请求），浏览器必须首先使用 OPTIONS 方法发起一个预检请求（preflight request），从而获知服务端是否允许该跨域请求。服务器确认允许之后，才发起实际的 HTTP 请求。在预检请求的返回中，服务器端也可以通知客户端，是否需要携带身份凭证（包括 Cookies 和 HTTP 认证相关数据）。<br>在现在前端最常用的 cors 跨域中，浏览器都是用 OPTIONS 方法发预检请求的","like_count":33,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":475810,"discussion_content":"赞！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574748227,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2537455,"avatar":"https://static001.geekbang.org/account/avatar/00/26/b7/ef/398c2ca4.jpg","nickname":"杨琪琪","note":"","ucode":"DD20915EBA762C","race_medal":1,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":367539,"discussion_content":"卧龙藏虎","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1618389166,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2032840,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/04/c8/3c7af100.jpg","nickname":"Javatar","note":"","ucode":"E216645CDF632C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":301152,"discussion_content":"不懂就问，处理options请求是否需要服务器实现？试了一下对于一些资源的options请求，不是405就是直接关闭连接了。跨域时如果浏览器发出的options请求没有被正确处理，岂不是还是不能跨域？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1598426306,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":105077,"user_name":"你好旅行者","can_delete":false,"product_type":"c1","uid":1154101,"ip_address":"","ucode":"5C72A428DC28F3","user_header":"https://static001.geekbang.org/account/avatar/00/11/9c/35/9dc79371.jpg","comment_is_top":false,"comment_ctime":1560912240,"is_pvip":false,"replies":[{"id":"38069","content":"就是个使用的习惯和约定，就像是红绿灯，不是强制要求你必须遵守，但大家都按照这样做沟通起来顺畅。<br><br>要理解协议的含义，要求你遵守，但不强制。","user_name":"作者回复","comment_id":105077,"uid":"1181974","ip_address":"","utype":1,"ctime":1560913241,"user_name_real":"chrono"}],"discussion_count":4,"race_medal":0,"score":"87460258160","product_id":100029001,"comment_content":"关于Post和Get之间的区别，我一直很困惑，因为其实我们也可以在Get的请求体里写参数，用Get去修改资源；或者在Post的请求头上去写参数，用它去获取资源。所以他们两者之间到底有什么区别呢？希望老师可以指教一下！<br>","like_count":21,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":454551,"discussion_content":"就是个使用的习惯和约定，就像是红绿灯，不是强制要求你必须遵守，但大家都按照这样做沟通起来顺畅。\n\n要理解协议的含义，要求你遵守，但不强制。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1560913241,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1004795,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q3auHgzwzM7KXH01E6kia0SUkrjUI7ootAviaUrU8SeXWTl9GugeZYzaTTicdL5nSJhnl6SlYpSUNKibeclA4ggCTQ/132","nickname":"WeiWei","note":"","ucode":"2BE7D0D8BB0B58","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":401213,"discussion_content":"之前记得看过一个帖子，有人发现自己的blog文章莫名被谷歌爬虫删除，然后大家一看删除文章是用GET实现的233","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1633604095,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1228560,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bf/10/b7974690.jpg","nickname":"BD","note":"","ucode":"A95CF8C3EDC228","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":385489,"discussion_content":"是的有些服务器是支持在get请求体里加数据传输比如tomcat，Java中的fegin组件也能正常解析，但是这不是标准有些web服务器可能就不支持就会出现问题","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1627095360,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1131137,"avatar":"https://static001.geekbang.org/account/avatar/00/11/42/81/788cd471.jpg","nickname":"珈蓝白塔","note":"","ucode":"FADBA4B1EC768D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":230708,"discussion_content":"对的，只是约定，但不强制","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1586765085,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":105069,"user_name":"壹笙☞漂泊","can_delete":false,"product_type":"c1","uid":1092577,"ip_address":"","ucode":"3A0B8EC881665C","user_header":"https://static001.geekbang.org/account/avatar/00/10/ab/e1/f6b921fa.jpg","comment_is_top":false,"comment_ctime":1560910765,"is_pvip":false,"replies":[{"id":"38070","content":"总结的非常好。<br>问题里的“请求头如何设计”，意思是说相关的curd参数应该放在什么地方，比如用query参数或者是字段，只是一个提示，不是要必须如何如何做。","user_name":"作者回复","comment_id":105069,"uid":"1181974","ip_address":"","utype":1,"ctime":1560913371,"user_name_real":"chrono"}],"discussion_count":3,"race_medal":0,"score":"40215616429","product_id":100029001,"comment_content":"答题：<br>1、增：POST 删：DELETE 改：PUT  查：GET<br>请求头如何设计，这个问题。。。不太明白。<br>2、我认为可以，因为http协议具有很好的灵活性。具体的对资源操作是由服务器决定的。<br><br>总结：<br>Http&#47;1.1规定了八种方法，单词必须都是大写的形式。<br>    1. GET:获取资源，可以理解为读取或者下载数据<br>    2. HEAD:获取资源的元信息;<br>    3. POST:向资源提交数据，相当于写入或上传数据;<br>    4. PUT:类似POST;<br>    5. DELETE:删除资源;<br>    6. CONNECT:建立特殊的连接隧道;<br>    7. OPTIONS:列出可对资源实行的方法;<br>    8. TRACE:追踪请求-响应的传输路径。<br><br>GET&#47;HEAD<br>    ——从服务器获取资源<br>    HEAD和GET类似，也是从服务器获取资源，但是不会返回请求的实体数据，只有响应头（元信息），是GET的简易版，如果不需要资源的话，可以避免传输body数据的浪费。<br><br>POST&#47;PUT<br>    ——向服务器提交数据，数据在body里<br>    PUT和POST作用类似，有微妙不同，通常POST标识新建，PUT标识修改<br><br>DELETE<br>    ——删除资源，危险性大，很少用<br><br>CONNECT<br>    ——要求服务器为客户端和另一台远程服务器建立一条特殊的链接，这时Web服务器充当代理的角色<br><br>OPTIONS<br>    ——要求服务器列出可对资源实行的操作方法，在响应头Allow字段里返回。功能有限，用处不大。Nginx没支持<br><br>TRACE<br>    ——用于对HTTP链路的测试或诊断，可以显示出请求 - 响应的传输路径。存在漏洞，会泄露网站的信息，所以通常也是禁止使用<br><br>安全与幂等<br>    安全：在HTTP协议里，所谓的安全，是指请求方法不会对服务器上的资源造成实质的修改，so 只有GET和HEAD是安全的，因为是只读操作。<br>    幂等：多次执行相同的操作，结果也都是相同的。so GET和HEAD 即是安全的也是幂等的，DELETE可以多次删除同一个资源，效果都是“资源不存在”，所以也是幂等。POST是新增或提交数据，多次提交会创建多个资源，所以不是幂等的。PUT是替换或更新数据，多次更新一个资源，资源还是第一次更新的状态。所以是幂等的。<br>    幂等：GET、HEAD、DELETE、PUT<br>    非幂等：POST<br><br>","like_count":10,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":454547,"discussion_content":"总结的非常好。\n问题里的“请求头如何设计”，意思是说相关的curd参数应该放在什么地方，比如用query参数或者是字段，只是一个提示，不是要必须如何如何做。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1560913371,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1337641,"avatar":"https://static001.geekbang.org/account/avatar/00/14/69/29/dfe2988e.jpg","nickname":"。","note":"","ucode":"2012A6830EAEE0","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":23407,"discussion_content":"请求头 HTTP/1.1 GET /queryUserById  /r/n Host: 127.0.0.1","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1569813888,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1959482,"avatar":"https://static001.geekbang.org/account/avatar/00/1d/e6/3a/382cf024.jpg","nickname":"rongyefeng","note":"","ucode":"9A15D947E9D645","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1337641,"avatar":"https://static001.geekbang.org/account/avatar/00/14/69/29/dfe2988e.jpg","nickname":"。","note":"","ucode":"2012A6830EAEE0","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":265181,"discussion_content":"版本号应该放最后吧？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1589378806,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":23407,"ip_address":""},"score":265181,"extra":""}]}]},{"had_liked":false,"id":116642,"user_name":"彧豪","can_delete":false,"product_type":"c1","uid":1161233,"ip_address":"","ucode":"8979F477E0BC5B","user_header":"https://static001.geekbang.org/account/avatar/00/11/b8/11/26838646.jpg","comment_is_top":false,"comment_ctime":1563884317,"is_pvip":false,"replies":[{"id":"42681","content":"options请求会在allow字段里列出可以对资源实施的操作方法，比如有的资源只支持get，有的只支持post&#47;delete。<br><br>所以有的时候回先发一个options，来确定应该如何操作资源。<br><br>不过这个方法用的很少，其实没太大用处，因为即使资源不支持某种方法，直接返回一个405或者其他的状态码就可以了。","user_name":"作者回复","comment_id":116642,"uid":"1181974","ip_address":"","utype":1,"ctime":1563930416,"user_name_real":"chrono"}],"discussion_count":3,"race_medal":0,"score":"27333688093","product_id":100029001,"comment_content":"老师，关于options请求，我有一些疑问，就是这个请求似乎是不受前端开发和服务端开发控制的是不是？get，post或者delete之前都有可能发出，那它的出现时机或机理是怎样的呢，为何会发出options请求？我发现我平时用webpack的代理来开发，代理到测试&#47;生产环境的时候，get&#47;post&#47;delete请求之前没有options请求，但是部署到测试环境或者生产环境之后就会在get&#47;post&#47;delete请求之前会发出一个options请求，然后我司的其他前端和java工程师都说不上个所以然来，我也不懂，所以想要问下老师看看，希望老师能指点迷津","like_count":6,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":459625,"discussion_content":"options请求会在allow字段里列出可以对资源实施的操作方法，比如有的资源只支持get，有的只支持post/delete。\n\n所以有的时候回先发一个options，来确定应该如何操作资源。\n\n不过这个方法用的很少，其实没太大用处，因为即使资源不支持某种方法，直接返回一个405或者其他的状态码就可以了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1563930416,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2913864,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/MYShyjtRtib2GIQiaK4hV3ZP9pQ1qiaS74DA4K4YHY4SIiaFDfsCKgiaMWwm9zFsSn3bt5pawp5Kdn5MWgiaw5909nug/132","nickname":"Geek_aa1c31","note":"","ucode":"1AC14C053638AF","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":579532,"discussion_content":"options预检请求的条件应该是只有浏览器才有的，它应该是跨域(只有浏览器才存在跨域)相关的内容。 当请求跨域，并且浏览器认为它是一个复杂请求(什么时候是复杂情况请自行百度)时就会先发送预检请求看服务器是否允许对应的请求方法或者请求头， 如果服务器支持的话才会发送后续真正的get/post等等的请求。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1657522986,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1206539,"avatar":"https://static001.geekbang.org/account/avatar/00/12/69/0b/780b0aac.jpg","nickname":"nora","note":"","ucode":"3A3EABF27D0261","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":60383,"discussion_content":"\npwq309\n\n跨域资源共享标准新增了一组 HTTP 首部字段，允许服务器声明哪些源站通过浏览器有权限访问哪些资源。另外，规范要求，对那些可能对服务器数据产生副作用的 HTTP 请求方法（特别是 GET 以外的 HTTP 请求，或者搭配某些 MIME 类型的 POST 请求），浏览器必须首先使用 OPTIONS 方法发起一个预检请求（preflight request），从而获知服务端是否允许该跨域请求。服务器确认允许之后，才发起实际的 HTTP 请求。在预检请求的返回中，服务器端也可以通知客户端，是否需要携带身份凭证（包括 Cookies 和 HTTP 认证相关数据）。\n在现在前端最常用的 cors 跨域中，浏览器都是用 OPTIONS 方法发预检请求的","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1574729773,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":226182,"user_name":"潇潇雨歇","can_delete":false,"product_type":"c1","uid":1251429,"ip_address":"","ucode":"4BD52BF0F0A084","user_header":"https://static001.geekbang.org/account/avatar/00/13/18/65/35361f02.jpg","comment_is_top":false,"comment_ctime":1591972993,"is_pvip":false,"replies":[{"id":"83331","content":"对。","user_name":"作者回复","comment_id":226182,"uid":"1181974","ip_address":"","utype":1,"ctime":1592023551,"user_name_real":"罗剑锋"}],"discussion_count":1,"race_medal":0,"score":"23066809473","product_id":100029001,"comment_content":"1、<br>GET：查<br>POST：增<br>PUT：改<br>DELETE：删<br>请求行按 请求方法  请求资源 http版本号<br>GET参数直接放在URI里，其他的放body<br>2、应该可以","like_count":6,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":498137,"discussion_content":"对。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1592023551,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":104950,"user_name":"浩浩","can_delete":false,"product_type":"c1","uid":1258888,"ip_address":"","ucode":"35199843210CB9","user_header":"https://static001.geekbang.org/account/avatar/00/13/35/88/e02c9ca3.jpg","comment_is_top":false,"comment_ctime":1560877485,"is_pvip":false,"replies":[{"id":"38040","content":"任何请求报文都可以带请求体，与方法无关，老的工具可能对协议支持的不好。<br><br>后面你理解的对，请求方法最终如何处理还是要依赖于服务器，如果愿意，服务器也可以用get来上传数据，用post获取数据，现在的get&#47;post都是依据协议标准来执行，所以是get获取post上传。","user_name":"作者回复","comment_id":104950,"uid":"1181974","ip_address":"","utype":1,"ctime":1560906425,"user_name_real":"chrono"}],"discussion_count":1,"race_medal":0,"score":"18740746669","product_id":100029001,"comment_content":"老师有个问题想问一下，我之前用比较旧的http工具类发请求，使用get方法时不能使用请求体，但使用软件工具能使用请求体，不同方法对请求的格式要求是不是一样，还有就是不同方法的区别是不是体现在服务器的响应上，用post请求访问一张照片会是什么样的，暂时还没试过","like_count":4,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":454497,"discussion_content":"任何请求报文都可以带请求体，与方法无关，老的工具可能对协议支持的不好。\n\n后面你理解的对，请求方法最终如何处理还是要依赖于服务器，如果愿意，服务器也可以用get来上传数据，用post获取数据，现在的get/post都是依据协议标准来执行，所以是get获取post上传。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1560906425,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":104949,"user_name":"业余爱好者","can_delete":false,"product_type":"c1","uid":1482915,"ip_address":"","ucode":"A890935A982988","user_header":"https://static001.geekbang.org/account/avatar/00/16/a0/a3/8da99bb0.jpg","comment_is_top":false,"comment_ctime":1560876849,"is_pvip":false,"replies":[{"id":"38035","content":"请求方法的设计思想非常好，动词可以表示各种操作，所以非常适合RESTful。","user_name":"作者回复","comment_id":104949,"uid":"1181974","ip_address":"","utype":1,"ctime":1560906122,"user_name_real":"chrono"}],"discussion_count":2,"race_medal":0,"score":"14445778737","product_id":100029001,"comment_content":"之前做一个网站的cms,觉得又是一套crud,毫无新意，闲得慌，于是玩了一波restful&quot;架构&quot;。严格按照http规范，比如，查询都用GET，新增用POST，更新用PUT，删除用DELETE，url的设计也按照rest风格设计。现在想想，tomcat支持这几种http方法也是万幸，不然的话，又得加班换成get&#47;post了。<br><br>这段经历我认识到，http只是一种协议，不同的服务器，还有客户端，比如浏览器都可以有自己的实现。虽然各自在实现上有所取舍，但大体上，按照协议规范来，不会差。<br><br>协议，是个好东西。。","like_count":3,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":454496,"discussion_content":"请求方法的设计思想非常好，动词可以表示各种操作，所以非常适合RESTful。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1560906122,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1228560,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bf/10/b7974690.jpg","nickname":"BD","note":"","ucode":"A95CF8C3EDC228","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":385491,"discussion_content":"你不会是自己全部改完之后才测试的吧 如果不确定的话肯定要先写一个方法测试下。不过这种规范这么普遍tomcat这么常用一般不会不支持","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1627095534,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":105049,"user_name":"1900","can_delete":false,"product_type":"c1","uid":1105774,"ip_address":"","ucode":"320D65D14817D3","user_header":"https://static001.geekbang.org/account/avatar/00/10/df/6e/267bd6ee.jpg","comment_is_top":false,"comment_ctime":1560908609,"is_pvip":true,"replies":[{"id":"38072","content":"在RESTful设计的时候，要考虑动作对服务器内部状态的影响。<br><br>这个比较理论，一般不太需要关心。","user_name":"作者回复","comment_id":105049,"uid":"1181974","ip_address":"","utype":1,"ctime":1560913541,"user_name_real":"chrono"}],"discussion_count":4,"race_medal":0,"score":"10150843201","product_id":100029001,"comment_content":"“幂等”有什么具体的落地场景么？它重要的原因在哪里呢？","like_count":2,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":454537,"discussion_content":"在RESTful设计的时候，要考虑动作对服务器内部状态的影响。\n\n这个比较理论，一般不太需要关心。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1560913541,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1337030,"avatar":"https://static001.geekbang.org/account/avatar/00/14/66/c6/d779dfb6.jpg","nickname":"松松","note":"","ucode":"EB2A80CF7BCA4B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":6623,"discussion_content":"比方说我们做手游的，一个请求request出去了，但是玩家在地铁上信号断断续续的没收到response。客户端并不知道是request就丢了服务器没处理过，还是服务器收到request并处理了只是返回的response丢了，这时重试请求就需要幂等性。\n玩家有n个箱子，ta只想开一个，咱们不能断线重试把人家的箱子给多开了。","likes_number":6,"is_delete":false,"is_hidden":false,"ctime":1567000996,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1212902,"avatar":"https://static001.geekbang.org/account/avatar/00/12/81/e6/6cafed37.jpg","nickname":"旅途","note":"","ucode":"5022477E8E9441","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":295259,"discussion_content":"幂等性的意义是多次操作，对目标的状态修改都是一样的,例如\n1.mq消费者 为了保证只消费一次 实现幂等性\n2.电商防止订单重复创建\n","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1596127734,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":21883,"discussion_content":"说的非常好。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1569550370,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":104951,"user_name":"大小兵","can_delete":false,"product_type":"c1","uid":1209885,"ip_address":"","ucode":"1227870F26D322","user_header":"https://static001.geekbang.org/account/avatar/00/12/76/1d/b4262bdc.jpg","comment_is_top":false,"comment_ctime":1560878013,"is_pvip":false,"replies":[{"id":"38031","content":"慢慢来。","user_name":"作者回复","comment_id":104951,"uid":"1181974","ip_address":"","utype":1,"ctime":1560906038,"user_name_real":"chrono"}],"discussion_count":1,"race_medal":0,"score":"10150812605","product_id":100029001,"comment_content":"真希望快点更新啊，看的不过瘾！","like_count":3,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":454498,"discussion_content":"慢慢来。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1560906038,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":282961,"user_name":"Geek_Maggie","can_delete":false,"product_type":"c1","uid":1609708,"ip_address":"","ucode":"3B74088B2C7B93","user_header":"https://static001.geekbang.org/account/avatar/00/18/8f/ec/c30b45d4.jpg","comment_is_top":false,"comment_ctime":1615475698,"is_pvip":false,"replies":[{"id":"102683","content":"回答的很好，不过要注意，http版本号应该算是历史遗留问题了，没什么太大用处，只是为了兼容而保留。","user_name":"作者回复","comment_id":282961,"uid":"1181974","ip_address":"","utype":1,"ctime":1615505981,"user_name_real":"罗剑锋"}],"discussion_count":1,"race_medal":0,"score":"5910442994","product_id":100029001,"comment_content":"你能把 GET&#47;POST 等请求方法对应到数据库的“增删改查”操作吗？<br>GET：查<br>POST：增<br>DELETE：删<br>PUT：改<br><br>请求头应该如何设计呢？<br>按照：请求方法+URI+HTTP版本号<br><br>你觉得 TRACE&#47;OPTIONS&#47;CONNECT 方法能够用 GET 或 POST 间接实现吗？<br>可以<br>TRACE：显示出请求 - 响应的传输路径，能用GET请求间接实现；","like_count":1,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":516890,"discussion_content":"回答的很好，不过要注意，http版本号应该算是历史遗留问题了，没什么太大用处，只是为了兼容而保留。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1615505981,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":209857,"user_name":"勇敢黄瓜","can_delete":false,"product_type":"c1","uid":1150783,"ip_address":"","ucode":"3B6005B4A2CAB8","user_header":"https://static001.geekbang.org/account/avatar/00/11/8f/3f/684f858e.jpg","comment_is_top":false,"comment_ctime":1587626467,"is_pvip":false,"replies":[{"id":"78278","content":"回答的挺好。<br><br>对于第一个，注意HTTP是明文协议，直接传输密码不够安全。","user_name":"作者回复","comment_id":209857,"uid":"1181974","ip_address":"","utype":1,"ctime":1587634850,"user_name_real":"chrono"}],"discussion_count":1,"race_medal":0,"score":"5882593763","product_id":100029001,"comment_content":"1. 你能把 GET&#47;POST 等请求方法对应到数据库的“增删改查”操作吗？请求头应该如何设计呢？<br><br>GET请求对应select操作；POST请求对应insert操作；GET请求，可以将用户密码放在header，将查询参数，放在请求参数中；POST请求，可以将用户密码放在header，将数据放在body，将新增数据的位置放在url以及请求参数；<br><br>2. 你觉得 TRACE&#47;OPTIONS&#47;CONNECT 方法能够用 GET 或 POST 间接实现吗？<br>TRACE用于跟踪请求，可以在GET或POST请求的响应头加上诊断相关的参数，比如请求耗时等；<br>OPTIONS用于获取请求方法，可以用GET请求访问&#39;&#47;options&#39;之类的uri，服务端响应中返回允许方法；<br>CONNECT用于创建隧道，需要用POST请求触发隧道创建；","like_count":1,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":492885,"discussion_content":"回答的挺好。\n\n对于第一个，注意HTTP是明文协议，直接传输密码不够安全。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1587634850,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":123233,"user_name":"Geek_steven_wang","can_delete":false,"product_type":"c1","uid":1477120,"ip_address":"","ucode":"8CC8F4C9726191","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTI8mFt5wSkia31qc8paRg2uPSB6AuEBDricrSxvFBuTpP3NnnflekpJ7wqvN0nRrJyu7zVbzd7Lwjxw/132","comment_is_top":false,"comment_ctime":1565650287,"is_pvip":false,"replies":[{"id":"45269","content":"是的，你理解的很对。<br><br>协议就是一个要求通信双方都遵守的约定，当然也可以不遵守。","user_name":"作者回复","comment_id":123233,"uid":"1181974","ip_address":"","utype":1,"ctime":1565658158,"user_name_real":"chrono"}],"discussion_count":1,"race_medal":0,"score":"5860617583","product_id":100029001,"comment_content":"既然不同服务器支持的方法不同，是不是最好把不支持的方法在服务器侧明确返回404 或503。这样更安全。<br>关于幂等，其实是协议规定了get delete put 为幂等，服务器开发时要尽量实现为幂等，其实是对服务器实现的一个要求，当然开发人员可以不实现。","like_count":1,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":462591,"discussion_content":"是的，你理解的很对。\n\n协议就是一个要求通信双方都遵守的约定，当然也可以不遵守。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1565658158,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":121273,"user_name":"温木","can_delete":false,"product_type":"c1","uid":1507210,"ip_address":"","ucode":"EAB6EDD6EDFE96","user_header":"","comment_is_top":false,"comment_ctime":1565092015,"is_pvip":false,"replies":[{"id":"44572","content":"不客气。","user_name":"作者回复","comment_id":121273,"uid":"1181974","ip_address":"","utype":1,"ctime":1565095261,"user_name_real":"chrono"}],"discussion_count":1,"race_medal":0,"score":"5860059311","product_id":100029001,"comment_content":"学到新的知识点，幂等，很不错，老师辛苦了","like_count":1,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":461717,"discussion_content":"不客气。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1565095261,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":108261,"user_name":"陈1016","can_delete":false,"product_type":"c1","uid":1135968,"ip_address":"","ucode":"08DCE4EC43F35A","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIIHZoKST18pSvJjHNnkCA0ibJTmzWLAIraB8T3RIkCBrt52xplc97sFiczYG9c2FkTpFsHzbibJIZYg/132","comment_is_top":false,"comment_ctime":1561706871,"is_pvip":false,"replies":[{"id":"39234","content":"“幂等”说的是多次操作效果相同，所以不管资源是否存在，操作多次以后结果都是一样的，所以delete是“幂等”的。<br><br>你说的“可变幂等”没有这个说法，所以不成立。","user_name":"作者回复","comment_id":108261,"uid":"1181974","ip_address":"","utype":1,"ctime":1561713747,"user_name_real":"chrono"}],"discussion_count":1,"race_medal":0,"score":"5856674167","product_id":100029001,"comment_content":"老师您好，关于  “DELETE 可以多次删除同一个资源，效果都是‘资源不存在’，所以也是幂等”  这句话，我个人理解是：假设服务器接受这个请求，允许对应操作。如果初始时有资源，第一次，就是“操作成功”，第二次开始，后续都是“资源不存在”；如果一开始没有这个资源，那么，一直都是“资源不存在”。那么，DELETE，是否可以算作“可变幂等”？或者，换个说法：删除操作成功后，从下一次开始的后续DELETE操作，都是“幂等”","like_count":1,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":455889,"discussion_content":"“幂等”说的是多次操作效果相同，所以不管资源是否存在，操作多次以后结果都是一样的，所以delete是“幂等”的。\n\n你说的“可变幂等”没有这个说法，所以不成立。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1561713747,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":105261,"user_name":"一步","can_delete":false,"product_type":"c1","uid":1005391,"ip_address":"","ucode":"73CEA468CE70C3","user_header":"https://static001.geekbang.org/account/avatar/00/0f/57/4f/6fb51ff1.jpg","comment_is_top":false,"comment_ctime":1560950046,"is_pvip":true,"replies":[{"id":"38127","content":"这块我基本没用过，它也不是http标准里面的，抱歉了。","user_name":"作者回复","comment_id":105261,"uid":"1181974","ip_address":"","utype":1,"ctime":1560992144,"user_name_real":"chrono"}],"discussion_count":1,"race_medal":1,"score":"5855917342","product_id":100029001,"comment_content":"老师 WebDav 这一块会详细讲嘛？ 有这块的需求，或者有没有好的文档","like_count":1,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":454614,"discussion_content":"这块我基本没用过，它也不是http标准里面的，抱歉了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1560992144,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":105188,"user_name":"10","can_delete":false,"product_type":"c1","uid":1562816,"ip_address":"","ucode":"90FFD6313AEEE7","user_header":"https://static001.geekbang.org/account/avatar/00/17/d8/c0/8d07d9b7.jpg","comment_is_top":false,"comment_ctime":1560934885,"is_pvip":false,"replies":[{"id":"38097","content":"测试用的URI“10-2”不支持存储数据，所以post的数据只能在当次请求生效。<br><br>另外发现这两测试uri有小bug，已经修复，请及时git pull更新。","user_name":"作者回复","comment_id":105188,"uid":"1181974","ip_address":"","utype":1,"ctime":1560937216,"user_name_real":"chrono"}],"discussion_count":0,"race_medal":0,"score":"5855902181","product_id":100029001,"comment_content":"我采用POST &#47;10-2 HTTP&#47;1.1的指令写了10-2的内容为“POST DATA IS HERE”，然后我采用GET &#47;10-2 HTTP&#47;1.1的指令去读内容 返回的“200 OK”，但实体body的内容只是一个“0”，而非前面写的“POST DATA IS HERE”<br>请问难道我前面的POST指令没有写成功么？","like_count":1},{"had_liked":false,"id":105091,"user_name":"许童童","can_delete":false,"product_type":"c1","uid":1003005,"ip_address":"","ucode":"4B799C0C6BC678","user_header":"https://static001.geekbang.org/account/avatar/00/0f/4d/fd/0aa0e39f.jpg","comment_is_top":false,"comment_ctime":1560914822,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5855882118","product_id":100029001,"comment_content":"请求头里面应该要包含 请求的目标 <br>也就是对应数据库里面行","like_count":1},{"had_liked":false,"id":105076,"user_name":"彧豪","can_delete":false,"product_type":"c1","uid":1161233,"ip_address":"","ucode":"8979F477E0BC5B","user_header":"https://static001.geekbang.org/account/avatar/00/11/b8/11/26838646.jpg","comment_is_top":false,"comment_ctime":1560911862,"is_pvip":false,"replies":[{"id":"38081","content":"下一讲里面的url编码就会谈到。<br>uri里面有些字符是不允许出现的，需要编码和解码，而+正好就被解码成了空格。<br><br>你刚才也说了，会用到encodeURI这样的函数。","user_name":"作者回复","comment_id":105076,"uid":"1181974","ip_address":"","utype":1,"ctime":1560917768,"user_name_real":"chrono"}],"discussion_count":1,"race_medal":0,"score":"5855879158","product_id":100029001,"comment_content":"老师，话说我昨天实际项目终于到一个问题：<br>get请求带上查询字符串例如?name=a+b，但是打开chrome的控制台network选项卡发现请求url那是对的，是xxx?name=a+b，但是最后的查询字符串那那里是name: a b，+号变成了空格，java那边收到的也是a b……<br>最后的解决方法是我这边encodeURIComponent一下，java那边URLDecoder.decode一下即可<br>但是我不明白为何会如此，为何get请求的查询字符串中带+号，浏览器会将其变为空格<br>在浏览器控制台network选项卡底端的query string parameters那有个&quot;view URL encoded&quot;按钮，点了之后name:a b变为name:a+b，这就意味着空格被转义成了+号，那是不是这个a和b之间的字符(串)实际不是空格呢？毕竟我暂时想不到什么方法能将空格转义为+号<br>关于+号变空格的问题希望老师能指点迷津，感谢","like_count":1,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":454550,"discussion_content":"下一讲里面的url编码就会谈到。\nuri里面有些字符是不允许出现的，需要编码和解码，而+正好就被解码成了空格。\n\n你刚才也说了，会用到encodeURI这样的函数。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1560917768,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":105059,"user_name":"汤小高","can_delete":false,"product_type":"c1","uid":1555565,"ip_address":"","ucode":"D4AB7766273D52","user_header":"https://static001.geekbang.org/account/avatar/00/17/bc/6d/f6f0a442.jpg","comment_is_top":false,"comment_ctime":1560909688,"is_pvip":false,"replies":[{"id":"38071","content":"幂等是指客户端操作对服务器的状态没有产生改变，虽然报文内容变了，但服务器还是没有变化。<br><br>可以再对比一下delete和post。","user_name":"作者回复","user_name_real":"chrono","uid":"1181974","ctime":1560913476,"ip_address":"","comment_id":105059,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5855876984","product_id":100029001,"comment_content":"老师，请问：幂等性指多次执行相同的操作，获取的结果是相同的。但是，比如get获取某个服务器资源，某个时刻获取的资源和下一时刻获取的资源也可能不一样吧，比如下一时刻服务器对该资源进行了改变，再get时，客户端获取的不就不一样了吗？","like_count":1,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":454542,"discussion_content":"幂等是指客户端操作对服务器的状态没有产生改变，虽然报文内容变了，但服务器还是没有变化。\n\n可以再对比一下delete和post。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1560913476,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":105048,"user_name":"-W.LI-","can_delete":false,"product_type":"c1","uid":1210699,"ip_address":"","ucode":"3556786538664F","user_header":"https://static001.geekbang.org/account/avatar/00/12/79/4b/740f91ca.jpg","comment_is_top":false,"comment_ctime":1560908555,"is_pvip":false,"replies":[{"id":"38073","content":"我看Nginx源码，是不支持options的。<br><br>put的幂等是RFC定义的，当然你要实现出非幂等的功能也是可以的。","user_name":"作者回复","user_name_real":"chrono","uid":"1181974","ctime":1560913646,"ip_address":"","comment_id":105048,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5855875851","product_id":100029001,"comment_content":"老师好!我项目用得nginx好像支持options请求，put请求幂等这个是不是有待商榷啊","like_count":1,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":454536,"discussion_content":"我看Nginx源码，是不支持options的。\n\nput的幂等是RFC定义的，当然你要实现出非幂等的功能也是可以的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1560913646,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":347488,"user_name":"Geek_845201","can_delete":false,"product_type":"c1","uid":3015343,"ip_address":"","ucode":"A104E3F2D922DC","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKQuaDVYz2jWDexff6kcFxsggWnketFrDYgvlua0Avonl2rA648qrhpyzic5SYlwEUmkoNhXZXkPYQ/132","comment_is_top":false,"comment_ctime":1654072815,"is_pvip":false,"replies":[{"id":"126691","content":"说的是最终结果，必定是资源不存在，而不是返回的状态。","user_name":"作者回复","user_name_real":"编辑","uid":"1181974","ctime":1654086250,"ip_address":"","comment_id":347488,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1654072815","product_id":100029001,"comment_content":"老师，关于“DELETE 可以多次删除同一个资源，效果都是“资源不存在”，所以也是幂等的”，请问假设现在有一个存在的资源，用DELETE删除，第一次删除的时候得到的也是“资源不存在”吗？","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":574497,"discussion_content":"说的是最终结果，必定是资源不存在，而不是返回的状态。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1654086250,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":340738,"user_name":"Ivan＠_＠","can_delete":false,"product_type":"c1","uid":1178831,"ip_address":"","ucode":"6A887BD0B59017","user_header":"https://static001.geekbang.org/account/avatar/00/11/fc/cf/b090445a.jpg","comment_is_top":false,"comment_ctime":1649087467,"is_pvip":false,"replies":[{"id":"124648","content":"patch在一般的网站中不是太常用，不过在restful中比较常用。","user_name":"作者回复","user_name_real":"编辑","uid":"1181974","ctime":1649235803,"ip_address":"","comment_id":340738,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1649087467","product_id":100029001,"comment_content":"Patch 好像也是2010年加入的标准方法","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":560237,"discussion_content":"patch在一般的网站中不是太常用，不过在restful中比较常用。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1649235803,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":331866,"user_name":"篂篂点点","can_delete":false,"product_type":"c1","uid":2644570,"ip_address":"","ucode":"475010AFAFA285","user_header":"https://static001.geekbang.org/account/avatar/00/28/5a/5a/29c8c4d6.jpg","comment_is_top":false,"comment_ctime":1642839524,"is_pvip":false,"replies":[{"id":"121354","content":"在这个例子里实际效果是幂等，但理论上来说post不是幂等的。","user_name":"作者回复","user_name_real":"编辑","uid":"1181974","ctime":1643068486,"ip_address":"","comment_id":331866,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1642839524","product_id":100029001,"comment_content":"如果服务器对相同数据做了判断，POST只能创建一次数据，就是 幂等的了吧。比如：用手机号注册一个新的游戏账号，第一次创建成功。第二次创建返回的是“此账号已被创建”。","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":548163,"discussion_content":"在这个例子里实际效果是幂等，但理论上来说post不是幂等的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1643068486,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":331865,"user_name":"篂篂点点","can_delete":false,"product_type":"c1","uid":2644570,"ip_address":"","ucode":"475010AFAFA285","user_header":"https://static001.geekbang.org/account/avatar/00/28/5a/5a/29c8c4d6.jpg","comment_is_top":false,"comment_ctime":1642839521,"is_pvip":false,"replies":[{"id":"121353","content":"幂等在用于restful api的时候非常有用。","user_name":"作者回复","user_name_real":"编辑","uid":"1181974","ctime":1643068441,"ip_address":"","comment_id":331865,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1642839521","product_id":100029001,"comment_content":"安全与幂等：<br>安全：请求方法不会”破坏“服务器上的资源，不会对服务器上的资源造成实质的修改<br>\t  GET和HEAD是安全的，POST PUT DELETE是不安全的<br>幂等：多次”幂“后的结果相同。借用到http协议，多次执行相同操作结果相同。<br>\t  GET 和 HEAD 既是安全的也是幂等的。<br>\t  DELETE多次删除同一元素，结果也是幂等的。<br>\t  POST(create) :多次提交则会创建多个资源，非幂等。（）<br>\t  PUT（update）:更新数据，多次更新，返回的也是第一次更新的状态，幂等。","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":548162,"discussion_content":"幂等在用于restful api的时候非常有用。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1643068441,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":323337,"user_name":"加奶油的泡芙","can_delete":false,"product_type":"c1","uid":2252455,"ip_address":"","ucode":"2158A94A8E0D35","user_header":"https://static001.geekbang.org/account/avatar/00/22/5e/a7/98815ba7.jpg","comment_is_top":false,"comment_ctime":1637846030,"is_pvip":false,"replies":[{"id":"117342","content":"其实http 方法并没有实际意义，对于服务器来说怎么解释都可以，get&amp;#47;post的操作目前是约定俗成的用法，trace等也可以用其他方法来替代实现。","user_name":"作者回复","user_name_real":"编辑","uid":"1181974","ctime":1637906343,"ip_address":"","comment_id":323337,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1637846030","product_id":100029001,"comment_content":"回答问题二：TRACE&#47;OPTIONS&#47;CONNECT 方法应该可以用GET&#47;POST方法配合头部字段间接实现。","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":533566,"discussion_content":"其实http 方法并没有实际意义，对于服务器来说怎么解释都可以，get&amp;#47;post的操作目前是约定俗成的用法，trace等也可以用其他方法来替代实现。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1637906343,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":320097,"user_name":"待时而发","can_delete":false,"product_type":"c1","uid":1158705,"ip_address":"","ucode":"92104F88D537F9","user_header":"https://static001.geekbang.org/account/avatar/00/11/ae/31/2c8a3a66.jpg","comment_is_top":false,"comment_ctime":1636081345,"is_pvip":false,"replies":[{"id":"116079","content":"options虽然是标准方法之一，但用的比较少，像NGINX就直接不支持，所以我就不做过多介绍了。","user_name":"作者回复","user_name_real":"罗剑锋","uid":"1181974","ctime":1636121008,"ip_address":"","comment_id":320097,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1636081345","product_id":100029001,"comment_content":"options最近做的前后端分离的项目里确实出现了，在CORS跨域的问题上出现了。前端发送到后端的每一个POST请求都会在提前发送一个options请求过去","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":529871,"discussion_content":"options虽然是标准方法之一，但用的比较少，像NGINX就直接不支持，所以我就不做过多介绍了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1636121008,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":319961,"user_name":"HILLIEX","can_delete":false,"product_type":"c1","uid":2768497,"ip_address":"","ucode":"14DF652C759FC0","user_header":"https://static001.geekbang.org/account/avatar/00/2a/3e/71/98af2a83.jpg","comment_is_top":false,"comment_ctime":1636019692,"is_pvip":false,"replies":[{"id":"116018","content":"说的很好，不过一般post对应的是insert，put和patch对应update。","user_name":"作者回复","user_name_real":"罗剑锋","uid":"1181974","ctime":1636068026,"ip_address":"","comment_id":319961,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1636019692","product_id":100029001,"comment_content":"Q1：你能把 GET&#47;POST 等请求方法对应到数据库的“增删改查”操作吗？请求头应该如何设计呢？<br><br>A1：GET = SELECT，POST = INSERT OR UPDATE，这些行为都是谓语，其他是宾语 + 状语，数据库查询是查找什么东西，在哪里，有什么条件，比如HTTP GET方法就是访问谁，获取什么东西、有什么条件，一一对上即可。<br><br>Q2：你觉得 TRACE&#47;OPTIONS&#47;CONNECT 方法能够用 GET 或 POST 间接实现吗？<br><br>A2:<br><br>TRACE：用GET、POST实现，约定好URL或者data_field标记就好<br><br>OPTIONS:用GET、POST实现，约定好URL比约定key省事<br><br>CONNECT：用GET、POST实现，约定好URI，每次收到这个key或者URI的请求就转发（猜想）","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":529829,"discussion_content":"说的很好，不过一般post对应的是insert，put和patch对应update。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1636068026,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":310665,"user_name":"ronny","can_delete":false,"product_type":"c1","uid":2071110,"ip_address":"","ucode":"E2D3A70AAC89AA","user_header":"https://static001.geekbang.org/account/avatar/00/1f/9a/46/bb7d948e.jpg","comment_is_top":false,"comment_ctime":1630829014,"is_pvip":true,"replies":[{"id":"112574","content":"great。","user_name":"作者回复","user_name_real":"罗剑锋","uid":"1181974","ctime":1630883058,"ip_address":"","comment_id":310665,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1630829014","product_id":100029001,"comment_content":"GET: SELECT<br>POST: INSERT<br>PUT: UPDATE<br>DELETE: DELETE","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":526302,"discussion_content":"great。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1630883058,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":304177,"user_name":"Unknown element","can_delete":false,"product_type":"c1","uid":2028277,"ip_address":"","ucode":"34A129800D0238","user_header":"https://static001.geekbang.org/account/avatar/00/1e/f2/f5/b82f410d.jpg","comment_is_top":false,"comment_ctime":1627287267,"is_pvip":false,"replies":[{"id":"110066","content":"幂等要看最后的效果，删除操作不管执行多少次，最后一定是文件不存在，所以它是幂等的。<br><br>而post、put每执行一次就会新建或者修改资源，导致文件发生变化，每次结果都不同，所以不是幂等的。","user_name":"作者回复","user_name_real":"罗剑锋","uid":"1181974","ctime":1627295272,"ip_address":"","comment_id":304177,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1627287267","product_id":100029001,"comment_content":"老师 幂等那里不太明白 delete删除的资源如果存在的话那第一次执行delete不就把这个资源删除了吗  第一次执行效果是删除文件第二次以后执行的结果是文件不存在，这个也算幂等吗","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":523962,"discussion_content":"幂等要看最后的效果，删除操作不管执行多少次，最后一定是文件不存在，所以它是幂等的。\n\n而post、put每执行一次就会新建或者修改资源，导致文件发生变化，每次结果都不同，所以不是幂等的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1627295272,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":303076,"user_name":"程序猿石头","can_delete":false,"product_type":"c1","uid":1155370,"ip_address":"","ucode":"862F01A3D7BDB6","user_header":"https://static001.geekbang.org/account/avatar/00/11/a1/2a/96355afe.jpg","comment_is_top":false,"comment_ctime":1626579417,"is_pvip":false,"replies":[{"id":"109671","content":"put多用在restful api里， 表示函数调用，通常的网页应用基本不常见。","user_name":"作者回复","user_name_real":"罗剑锋","uid":"1181974","ctime":1626593367,"ip_address":"","comment_id":303076,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1626579417","product_id":100029001,"comment_content":"“在实际应用中，PUT 用到的比较少。” <br><br>Restful 规范里面其实put  delete等还挺常见的。","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":523546,"discussion_content":"put多用在restful api里， 表示函数调用，通常的网页应用基本不常见。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1626593367,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":303075,"user_name":"程序猿石头","can_delete":false,"product_type":"c1","uid":1155370,"ip_address":"","ucode":"862F01A3D7BDB6","user_header":"https://static001.geekbang.org/account/avatar/00/11/a1/2a/96355afe.jpg","comment_is_top":false,"comment_ctime":1626579332,"is_pvip":false,"replies":[{"id":"109672","content":"对，用在api场景里。","user_name":"作者回复","user_name_real":"罗剑锋","uid":"1181974","ctime":1626593384,"ip_address":"","comment_id":303075,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1626579332","product_id":100029001,"comment_content":"Restful 规范里面其实put还挺常见的。","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":523545,"discussion_content":"对，用在api场景里。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1626593384,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":297746,"user_name":"includestdio.h","can_delete":false,"product_type":"c1","uid":2314854,"ip_address":"","ucode":"5027BACE9319CD","user_header":"https://static001.geekbang.org/account/avatar/00/23/52/66/3e4d4846.jpg","comment_is_top":false,"comment_ctime":1623758365,"is_pvip":true,"replies":[{"id":"108131","content":"理论上来说是正确的，因为请求方法就是个字符串，如果愿意的话发个AAA、BBB也是可以的，关键在于服务器如何解释。<br><br>而get和post则是一种约定俗成的用法，含义清晰明确，利于各方沟通协作。","user_name":"作者回复","user_name_real":"罗剑锋","uid":"1181974","ctime":1623806466,"ip_address":"","comment_id":297746,"utype":1}],"discussion_count":1,"race_medal":4,"score":"1623758365","product_id":100029001,"comment_content":"记得以前在某个专栏看见过一个理论：GET 和 POST 二者的底层是相同的，二者能做的事情是一模一样的，都可以下载和上传，也就是说这两个请求没有任何区别，老师帮忙看看这个观点正确吗","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":521928,"discussion_content":"理论上来说是正确的，因为请求方法就是个字符串，如果愿意的话发个AAA、BBB也是可以的，关键在于服务器如何解释。\n\n而get和post则是一种约定俗成的用法，含义清晰明确，利于各方沟通协作。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1623806466,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":292955,"user_name":"Stormouble","can_delete":false,"product_type":"c1","uid":1234875,"ip_address":"","ucode":"3163D9BEBF053D","user_header":"https://static001.geekbang.org/account/avatar/00/12/d7/bb/dd4442ba.jpg","comment_is_top":false,"comment_ctime":1621095033,"is_pvip":false,"replies":[{"id":"106091","content":"这几个方法并不操作uri资源，所以安全和幂等对它们来说没有意义。<br><br>安全、幂等主要说的是get&#47;post&#47;put&#47;delete等修改uri资源。","user_name":"作者回复","user_name_real":"罗剑锋","uid":"1181974","ctime":1621173909,"ip_address":"","comment_id":292955,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1621095033","product_id":100029001,"comment_content":"老师，OPTIONS、TRACE、CONNECT为什么不是安全和幂等的啊？","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":520026,"discussion_content":"这几个方法并不操作uri资源，所以安全和幂等对它们来说没有意义。\n\n安全、幂等主要说的是get/post/put/delete等修改uri资源。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1621173909,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":288725,"user_name":"Leolee","can_delete":false,"product_type":"c1","uid":1928428,"ip_address":"","ucode":"2EC31B0AE5B03D","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/8SdpYbicwXVXt0fIN7L0f2TSGIScQIhWXT7vTze9GHBsjTvDyyQW9KEPsKBpRNs4anV61oF59BZqHf586b3o4ibw/132","comment_is_top":false,"comment_ctime":1618643572,"is_pvip":false,"replies":[{"id":"104863","content":"总结的非常完整，great。","user_name":"作者回复","user_name_real":"罗剑锋","uid":"1181974","ctime":1618786954,"ip_address":"","comment_id":288725,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1618643572","product_id":100029001,"comment_content":"作业：<br>1、增：POST，删：DELETE，改：PUT，查：GET。<br>2、可以的，因为HTTP协议是有很好扩展性的，只要请求方和响应方认可就行。<br>HTTP的请求方法的实际含义就是客户端发出一个动作指令，要求服务器端对URI（通用资源定位符）定位的的资源执行这个动作。<br>HTTP&#47;1.1规定了八种方法，单词都必须是大写的形式，有点类似对文件或数据库的“增删改查”,只不过这些操作是对服务器端而已：<br>1.GET:获取资源，可以理解为读取或者下载数据；<br>2.HEAD:获取资源的元信息；<br>3.POST:向资源提交数据，相当于写入或上传数据；<br>4.PUT:类似于POST；<br>5.DELETE:删除资源；<br>6.CONNECT:建立特殊的连接隧道；<br>7.OPTIONS:列出可对资源实行的方法；<br>8.TRACK:追踪请求-响应的传输路径。<br><br><br>请求方法是一个指示，客户端没有决定权，服务器才有绝对的决策权力，服务器收到HTTP请求报文里的请求方法后，可以执行也可以拒绝，或者改变动作的含义，毕竟HTTP是一个协议，两边都要商量着来。<br><br>GET&#47;HEAD 这两个方法很像<br>GET<br>它的含义是请求从服务器获取资源，这个资源即可以是静态的文本、页面、图片、视频，也可以是由PHP、Java动态生成的页面或者其他格式的数据。<br>GET方法虽然动作简单，但搭配URI和其他头字段就能实现对资源更精细的操作。例如可以在URI后使用#，就可以在获取页面后直接定位到某个标签所在的位置；使用If-Modified-Since字段就变成了有条件的请求，仅当资源被修改时才会执行获取动作；使用Range字段就是范围请求，只获取资源的一部分数据。<br><br>HEAD<br>与GET方法类似，也是请求从服务器获取资源，服务器的处理机制也是一样的，但服务器不会返回请求的实体数据，只会传回响应头，也就是资源的元信息。<br>它可以看做是GET方法的一个简化版或者轻量版。因为它的响应头与GET完全相同，所以可以用在很多并不真正需要资源的场合，避免传输body数据的浪费。<br>比如，只是检查一个文件是否存在，发个HEAD请求就可以了，没有必要用GET把整个文件都取下来。再比如，要检查文件是否有最新版本，同样也应该用HEAD，服务器会在响应头里把文件的修改时间传回来。<br><br>POST&#47;PUT 这两个方法也很像<br>POST<br>GET&#47;HEAD方法是从服务器获取数据，而POST和PUT方法则是相反操作，向URI指定的资源提交数据，数据就放在报文的body里。<br>向服务器发送数据大多数用的是POST，使用频率仅次于GET。<br>比如，你上论坛灌水，打了一大堆字后点击发帖按钮，浏览器就执行力一次POST请求，把你的文字放进报文的body里，然后拼好POST请求头，通过TCP协议发送给服务器。<br><br>PUT<br>它的作用于POST类似，也可以向服务器提交数据，但与POST存在微妙的不同，通常POST表示的是新建、create的含义，而PUT则是修改、update的含义。<br>实际使用中用的比较少，因为它与POST的语义、功能都太过近似，有的服务器甚至就直接禁止使用PUT方法，只用POST方法上传数据。<br><br>以上四个用得比较多，下面四个就用得不多：<br><br>DELETE<br>指示服务器删除资源，这个动作危险性非常大，所以通常服务器不会执行真正的删除操作，而是对资源做一个删除标记。当然，更多时候服务器直接不处理，无视之。<br><br>CONNECT<br>要求服务器为客户端与另一台远程服务器建立一条特殊的连接隧道，这时WEB服务器在中间充当了代理的角色。<br><br>OPTIONS<br>要求服务器列出可对资源实行的操作方法，在响应头的Allow字段里返回。它的功能很有限，用处也不大，有的服务器（例如Nginx）干脆就没有实现对它的支持。<br><br>TRACE<br>多用于对HTTP链路的测试或诊断，可以显示出请求-响应的传输路径。它的本意是好的，但存在漏洞，会泄漏网站的信息，所以Web服务器通常也是禁止使用。<br><br>扩展方法<br>HTTP、1.1出来以上八种请求方法，也可以随意添加其他方法，只需要请求方和响应方都能理解即可，因为HTTP协议本身就具有非常好的扩展性。<br>例如著名的愚人节玩笑RFC2324，等。<br>还有一些得到了实际应用的请求方法，例如MLCOL、COPY、MOVE、LOCK、UNLOCK、PATCH等。<br>基于HTTP协议的扩展性，也可以根据自己的实际需求发明新的方法。<br><br>安全和幂等<br>请求方法比较重要的概念是安全与幂等。<br>所谓的安全就是请求方法不会破坏服务器的资源，所以只有GET和HEAD是安全的，因为只读操作，属于查，其他都是增、删、改，所以POST&#47;PUT&#47;DELETE是不安全的。<br>所谓的幂等就是指多次操作后的结果都是相同的，即多次幂后结果相等。<br>幂等：GET、HEAD、DELECT、PUT<br>非幂等：POST","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":518718,"discussion_content":"总结的非常完整，great。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1618786954,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":286843,"user_name":"Evan Xia","can_delete":false,"product_type":"c1","uid":2310344,"ip_address":"","ucode":"6800538102355E","user_header":"https://static001.geekbang.org/account/avatar/00/23/40/c8/17af3598.jpg","comment_is_top":false,"comment_ctime":1617629262,"is_pvip":false,"replies":[{"id":"104166","content":"其实更新应该对应的是put方法，patch的含义是更新部分资源，打补丁，两者的区别可能就是更新的范围大小。<br><br>因为http的方法并没有限定必须要怎么做，这些method的用法都是一些惯例，如果用patch更新也可以，但可以适当地把put和patch的用途分开，这样含义更明确。","user_name":"作者回复","user_name_real":"罗剑锋","uid":"1181974","ctime":1617679563,"ip_address":"","comment_id":286843,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1617629262","product_id":100029001,"comment_content":"日常开发，我们服务端接口规范遵循的是restful风格 ，对应的就是新增POST;删DELETE;更新PATCH;查GET，但我们很少用到PUT，老师，这里的patch是否和put的用法一样呢，该如何准确的使用它呢","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":518104,"discussion_content":"其实更新应该对应的是put方法，patch的含义是更新部分资源，打补丁，两者的区别可能就是更新的范围大小。\n\n因为http的方法并没有限定必须要怎么做，这些method的用法都是一些惯例，如果用patch更新也可以，但可以适当地把put和patch的用途分开，这样含义更明确。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1617679563,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":282962,"user_name":"Geek_Maggie","can_delete":false,"product_type":"c1","uid":1609708,"ip_address":"","ucode":"3B74088B2C7B93","user_header":"https://static001.geekbang.org/account/avatar/00/18/8f/ec/c30b45d4.jpg","comment_is_top":false,"comment_ctime":1615475974,"is_pvip":false,"replies":[{"id":"102684","content":"说的很对，其实connect这个我觉得也挺多余，像WebSocket这样，用其他的方法就能够搞定。","user_name":"作者回复","user_name_real":"罗剑锋","uid":"1181974","ctime":1615506064,"ip_address":"","comment_id":282962,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1615475974","product_id":100029001,"comment_content":"接上（不小心提交了）你觉得 TRACE&#47;OPTIONS&#47;CONNECT 方法能够用 GET 或 POST 间接实现吗？<br>TRACE用于跟踪请求，可以用GET方法实现；<br>OPTIONS用于获取请求方法，可以用GET请求访问&#39;&#47;options&#39;之类的uri，在响应中返回允许方法；<br>CONNECT用于创建隧道，需要用POST请求触发隧道创建；你觉得 TRACE&#47;OPTIONS&#47;CONNECT 方法能够用 GET 或 POST 间接实现吗？<br>TRACE用于跟踪请求，可以用GET实现；<br>OPTIONS用于获取请求方法，可以用GET请求访问&#39;&#47;options&#39;之类的uri，服务端响应中返回允许方法；<br>CONNECT用于创建一个中间代理，用GET&#47;POST请求，进行通知来触发这个连接的建立。<br><br>这只是我的猜想，不知对否。","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":516891,"discussion_content":"说的很对，其实connect这个我觉得也挺多余，像WebSocket这样，用其他的方法就能够搞定。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1615506064,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":282707,"user_name":"刘杰","can_delete":false,"product_type":"c1","uid":2460800,"ip_address":"","ucode":"5B3A55700D6063","user_header":"https://static001.geekbang.org/account/avatar/00/25/8c/80/7310baac.jpg","comment_is_top":false,"comment_ctime":1615370178,"is_pvip":false,"replies":[{"id":"102627","content":"基本正确。","user_name":"作者回复","user_name_real":"罗剑锋","uid":"1181974","ctime":1615422236,"ip_address":"","comment_id":282707,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1615370178","product_id":100029001,"comment_content":"1、POST对应数据库的新增、DELETE对应删除、PUT对应更新、GET对应查找<br>2、不知道，感觉应该可以","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":516817,"discussion_content":"基本正确。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1615422236,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":253063,"user_name":"jianglu","can_delete":false,"product_type":"c1","uid":2001630,"ip_address":"","ucode":"499BB5FBD28010","user_header":"https://static001.geekbang.org/account/avatar/00/1e/8a/de/e72c1d53.jpg","comment_is_top":false,"comment_ctime":1602582605,"is_pvip":false,"replies":[{"id":"92450","content":"可以参考一下第20讲，应该是缓存起了作用，返回的是304 not modified，不需要从服务器获取完整的真实文件。。","user_name":"作者回复","user_name_real":"罗剑锋","uid":"1181974","ctime":1602590189,"ip_address":"","comment_id":253063,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1602582605","product_id":100029001,"comment_content":"老师，请问为什么请求png，有时候有content type返回200有时候没有。没有的默认textplain，而且返回304","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":506961,"discussion_content":"可以参考一下第20讲，应该是缓存起了作用，返回的是304 not modified，不需要从服务器获取完整的真实文件。。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1602590189,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":243867,"user_name":"旗木卡卡","can_delete":false,"product_type":"c1","uid":1104407,"ip_address":"","ucode":"2C05BFE91D6892","user_header":"https://static001.geekbang.org/account/avatar/00/10/da/17/69cca649.jpg","comment_is_top":false,"comment_ctime":1598316543,"is_pvip":false,"replies":[{"id":"89844","content":"在电商网站上可以搜到一些，不过我都没有看过。我觉得可以先看一些网上的资料，了解个大概，其实restyful的本质就是利用http来描述对资源的操作，理解好http再用restyful就容易多了。","user_name":"作者回复","user_name_real":"罗剑锋","uid":"1181974","ctime":1598324615,"ip_address":"","comment_id":243867,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1598316543","product_id":100029001,"comment_content":"罗老师您好，关于RESTFUL API设计方面，有什么书籍推荐吗？谢谢罗老师","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":504420,"discussion_content":"在电商网站上可以搜到一些，不过我都没有看过。我觉得可以先看一些网上的资料，了解个大概，其实restyful的本质就是利用http来描述对资源的操作，理解好http再用restyful就容易多了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1598324615,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":225086,"user_name":"Maske","can_delete":false,"product_type":"c1","uid":1696847,"ip_address":"","ucode":"A19BB41A47E852","user_header":"https://static001.geekbang.org/account/avatar/00/19/e4/4f/df6d810d.jpg","comment_is_top":false,"comment_ctime":1591633720,"is_pvip":true,"replies":[{"id":"82880","content":"<br>1.基本正确，但请求头里的host是不能随便改的，不能对应到table。<br><br>2.对。其实trace和options这两个词只是对服务器的一个指示，用get加上适当的参数也可以实现同样的功能。","user_name":"作者回复","user_name_real":"罗剑锋","uid":"1181974","ctime":1591668480,"ip_address":"","comment_id":225086,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1591633720","product_id":100029001,"comment_content":"1.get =&gt; SELECT ; post =&gt; INSERT ; delete =&gt; DELETE; put =&gt; UPDATE;<br>请求头中的 Host 对应table名，自定义字段date-fields: key1, key2表示想要查询的数据字段 , condition字段表示查询条件， 即 SELECT key1,key2 from Host WHERE condition;<br>其他语句也一样，需要的字段都用自定义字段在请求头中定义；<br>2.就个人理解应该是可以，TRACE 和 OPTIONS从功能上理解也是‘获取数据’，可以由get请求处理并返回给客户端，CONNECT是让当前web服务器为客户端建立与另外一台服务器的连接通道，既然这样，那就直接提供post请求，代理转发到某个服务器中去，间接实现与第三方服务器的通信，这样也等同于一条连接通道。","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":497723,"discussion_content":"\n1.基本正确，但请求头里的host是不能随便改的，不能对应到table。\n\n2.对。其实trace和options这两个词只是对服务器的一个指示，用get加上适当的参数也可以实现同样的功能。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1591668480,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":218138,"user_name":"😳","can_delete":false,"product_type":"c1","uid":1452857,"ip_address":"","ucode":"9AFB87EF308539","user_header":"https://static001.geekbang.org/account/avatar/00/16/2b/39/19041d78.jpg","comment_is_top":false,"comment_ctime":1589722179,"is_pvip":false,"replies":[{"id":"80700","content":"准确一点的话，C应该是POST，U用PUT，D用DELETE，全用POST当然也可以，但没有其他方法那么清晰。","user_name":"作者回复","user_name_real":"chrono","uid":"1181974","ctime":1589763889,"ip_address":"","comment_id":218138,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1589722179","product_id":100029001,"comment_content":"1:一般CUD使用post，用body传递数据，R用Get请求，参数放在Url中。<br>2:我觉得应该可以。","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":495358,"discussion_content":"准确一点的话，C应该是POST，U用PUT，D用DELETE，全用POST当然也可以，但没有其他方法那么清晰。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1589763889,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":175080,"user_name":"Hills录","can_delete":false,"product_type":"c1","uid":1000004,"ip_address":"","ucode":"779020947ACABA","user_header":"https://static001.geekbang.org/account/avatar/00/0f/42/44/d3d67640.jpg","comment_is_top":false,"comment_ctime":1580548913,"is_pvip":false,"replies":[{"id":"68072","content":"前面的对，后面的不对，请求行后面必须是HTTP&#47;1.1（或者其他版本号）","user_name":"作者回复","user_name_real":"chrono","uid":"1181974","ctime":1580631002,"ip_address":"","comment_id":175080,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1580548913","product_id":100029001,"comment_content":"课后1：GET &#47;db&#47;table?id=1 DB&#47;0.9","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":482617,"discussion_content":"前面的对，后面的不对，请求行后面必须是HTTP/1.1（或者其他版本号）","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1580631002,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1000004,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/42/44/d3d67640.jpg","nickname":"Hills录","note":"","ucode":"779020947ACABA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":162934,"discussion_content":"结课这么久了还在回复，辛苦了老师。我这个是重新设计的协议，服务器程序恐怕要自己开发了，哈哈","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1581038049,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":167017,"user_name":"蓝配鸡","can_delete":false,"product_type":"c1","uid":1348738,"ip_address":"","ucode":"C79A7CA8885B7C","user_header":"https://static001.geekbang.org/account/avatar/00/14/94/82/d0a417ba.jpg","comment_is_top":false,"comment_ctime":1577670359,"is_pvip":false,"replies":[{"id":"64858","content":"当然可以了，只是这样不符合客户端的预期，但不按规矩出牌也拦不住，客户端只能“默默承受”。","user_name":"作者回复","user_name_real":"chrono","uid":"1181974","ctime":1577672338,"ip_address":"","comment_id":167017,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1577670359","product_id":100029001,"comment_content":"既然服务器有着决定权，有没有可能请求方法是HEAD，服务器相应一个带有body的response？","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":479714,"discussion_content":"当然可以了，只是这样不符合客户端的预期，但不按规矩出牌也拦不住，客户端只能“默默承受”。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577672338,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":166062,"user_name":"Wr","can_delete":false,"product_type":"c1","uid":1713790,"ip_address":"","ucode":"738B316AA2AD66","user_header":"https://static001.geekbang.org/account/avatar/00/1a/26/7e/823c083e.jpg","comment_is_top":false,"comment_ctime":1577372980,"is_pvip":false,"replies":[{"id":"63319","content":"没有具体的现场环境，不好解决问题，我觉得可以换一个其他的环境，用虚拟机安装一个Windows或者linux。","user_name":"作者回复","user_name_real":"chrono","uid":"1181974","ctime":1577407586,"ip_address":"","comment_id":166062,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1577372980","product_id":100029001,"comment_content":"1. 增--post，删--delete，改--put，查--get<br>2. 应该是可以的，但是接触较少，暂时没什么思绪<br><br><br>另：老师，我telnet可以连接测试环境，web也能正常访问，但是进入telnet用open就访问不了，macfee的80端口打开，关闭防火墙都不行，还有什么想法吗？","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":479381,"discussion_content":"没有具体的现场环境，不好解决问题，我觉得可以换一个其他的环境，用虚拟机安装一个Windows或者linux。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577407586,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":154908,"user_name":"大海","can_delete":false,"product_type":"c1","uid":1001446,"ip_address":"","ucode":"20913D0265971B","user_header":"https://static001.geekbang.org/account/avatar/00/0f/47/e6/67b0b711.jpg","comment_is_top":false,"comment_ctime":1574595477,"is_pvip":false,"replies":[{"id":"59500","content":"good。","user_name":"作者回复","user_name_real":"chrono","uid":"1181974","ctime":1574643596,"ip_address":"","comment_id":154908,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1574595477","product_id":100029001,"comment_content":"作业：<br>你能把 GET&#47;POST 等请求方法对应到数据库的“增删改查”操作吗？<br>增：POST<br>删：DELETE<br>改：PUT<br>查：GET","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":475611,"discussion_content":"good。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574643596,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":145921,"user_name":"不知道该叫什么","can_delete":false,"product_type":"c1","uid":1135190,"ip_address":"","ucode":"C0F72F6FF56DA1","user_header":"https://static001.geekbang.org/account/avatar/00/11/52/56/5abb4d94.jpg","comment_is_top":false,"comment_ctime":1572402713,"is_pvip":true,"replies":[{"id":"56319","content":"从标准的定义来讲，403是表示有文件但禁止访问。<br><br>但服务器也可以不管有没有都返回403，因为服务器是个黑盒子，我们无法判断后面到底是什么情况。","user_name":"作者回复","user_name_real":"chrono","uid":"1181974","ctime":1572405084,"ip_address":"","comment_id":145921,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1572402713","product_id":100029001,"comment_content":"稍微友好一点，明确告诉你有这个文件，但不允许访问，返回一个 403 Forbidden；我想问一下，403是可以确定确实有这个文件吗？","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":472630,"discussion_content":"从标准的定义来讲，403是表示有文件但禁止访问。\n\n但服务器也可以不管有没有都返回403，因为服务器是个黑盒子，我们无法判断后面到底是什么情况。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1572405084,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":144823,"user_name":"yhq","can_delete":false,"product_type":"c1","uid":1229495,"ip_address":"","ucode":"4BFFB351A6A37E","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKMkEV4Jb087pkAOvUSJtibkblLan9hbcc59aK4TKrXS4KiasVZRQHvnP2eG0xkd4P3WzXfy3zfSyEg/132","comment_is_top":false,"comment_ctime":1572064495,"is_pvip":false,"replies":[{"id":"55954","content":"可能是发送的http请求头有误，可参考一下第9讲，注意请求行后要有空行。","user_name":"作者回复","user_name_real":"chrono","uid":"1181974","ctime":1572224970,"ip_address":"","comment_id":144823,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1572064495","product_id":100029001,"comment_content":"我mac下试着发送请求, 结果 400错误, 是我哪里没有操作正确吗<br><br> ~ clear<br>➜  ~ telnet 127.0.0.1 80<br>Trying 127.0.0.1...<br>Connected to localhost.<br>Escape character is &#39;^]&#39;.<br>GET &#47;10-1 HTTP&#47;1.1Host: www.chrono.com<br>HTTP&#47;1.1 400 Bad Request<br>Server: openresty&#47;1.15.8.2<br>Date: Sat, 26 Oct 2019 04:33:51 GMT<br>Content-Type: text&#47;html<br>Content-Length: 163<br>Connection: close<br><br>&lt;html&gt;<br>&lt;head&gt;&lt;title&gt;400 Bad Request&lt;&#47;title&gt;&lt;&#47;head&gt;<br>&lt;body&gt;<br>&lt;center&gt;&lt;h1&gt;400 Bad Request&lt;&#47;h1&gt;&lt;&#47;center&gt;<br>&lt;hr&gt;&lt;center&gt;openresty&#47;1.15.8.2&lt;&#47;center&gt;<br>&lt;&#47;body&gt;<br>&lt;&#47;html&gt;<br>Connection closed by foreign host.","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":472125,"discussion_content":"可能是发送的http请求头有误，可参考一下第9讲，注意请求行后要有空行。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1572224970,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1104407,"avatar":"https://static001.geekbang.org/account/avatar/00/10/da/17/69cca649.jpg","nickname":"旗木卡卡","note":"","ucode":"2C05BFE91D6892","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":300901,"discussion_content":"GET那行和Host一个是要换行写","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1598316450,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":144748,"user_name":"yhq","can_delete":false,"product_type":"c1","uid":1229495,"ip_address":"","ucode":"4BFFB351A6A37E","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKMkEV4Jb087pkAOvUSJtibkblLan9hbcc59aK4TKrXS4KiasVZRQHvnP2eG0xkd4P3WzXfy3zfSyEg/132","comment_is_top":false,"comment_ctime":1572023458,"is_pvip":false,"replies":[{"id":"55949","content":"我用的是Visio，不过也用的很一般，画的不是太好，见笑了。","user_name":"作者回复","user_name_real":"chrono","uid":"1181974","ctime":1572224576,"ip_address":"","comment_id":144748,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1572023458","product_id":100029001,"comment_content":"老师是用什么软件画的这些流程图呢","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":472097,"discussion_content":"我用的是Visio，不过也用的很一般，画的不是太好，见笑了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1572224576,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":130782,"user_name":"Geek_steven_wang","can_delete":false,"product_type":"c1","uid":1477120,"ip_address":"","ucode":"8CC8F4C9726191","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTI8mFt5wSkia31qc8paRg2uPSB6AuEBDricrSxvFBuTpP3NnnflekpJ7wqvN0nRrJyu7zVbzd7Lwjxw/132","comment_is_top":false,"comment_ctime":1567549188,"is_pvip":false,"replies":[{"id":"48975","content":"因为有安全隐患，trace方法很多服务器都禁用，我也了解的不多，抱歉无法回答你。","user_name":"作者回复","user_name_real":"chrono","uid":"1181974","ctime":1567563168,"ip_address":"","comment_id":130782,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1567549188","product_id":100029001,"comment_content":"老师，请问trace方法多用于对 HTTP 链路的测试或诊断，可以显示出请求 - 响应的传输路径。<br>是否就相当于windows的trace命令。作为web服务器如何知道整个链路信息呢？","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":466122,"discussion_content":"因为有安全隐患，trace方法很多服务器都禁用，我也了解的不多，抱歉无法回答你。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567563168,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":128987,"user_name":"松松","can_delete":false,"product_type":"c1","uid":1337030,"ip_address":"","ucode":"EB2A80CF7BCA4B","user_header":"https://static001.geekbang.org/account/avatar/00/14/66/c6/d779dfb6.jpg","comment_is_top":false,"comment_ctime":1567001521,"is_pvip":false,"replies":[{"id":"48027","content":"这也是http灵活性的体现，虽然用的不是很正确，但也能正常运行。","user_name":"作者回复","user_name_real":"chrono","uid":"1181974","ctime":1567033025,"ip_address":"","comment_id":128987,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1567001521","product_id":100029001,"comment_content":"劣质的“教程”只会告诉小白，get是明文跟在地址里，post是装在包里的。这种奇葩的解读充斥在游戏行业中，并成为各作坊里还好一般没啥实际影响的历史遗留问题之一。","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":465211,"discussion_content":"这也是http灵活性的体现，虽然用的不是很正确，但也能正常运行。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567033025,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":126337,"user_name":"👻 小二","can_delete":false,"product_type":"c1","uid":1625463,"ip_address":"","ucode":"9EEA8553163270","user_header":"https://static001.geekbang.org/account/avatar/00/18/cd/77/b2ab5d44.jpg","comment_is_top":false,"comment_ctime":1566367393,"is_pvip":false,"replies":[{"id":"46627","content":"这个专栏主要以rfc2616和rfc723x为依据，最被广泛接受的还是那8个。<br><br>因为请求方法完全可以自由定义，所以新增方法并不是很重要。","user_name":"作者回复","user_name_real":"chrono","uid":"1181974","ctime":1566368778,"ip_address":"","comment_id":126337,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1566367393","product_id":100029001,"comment_content":"现在有9个了，<br>还有一个 PATCH<br>RFC 5789","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":463943,"discussion_content":"这个专栏主要以rfc2616和rfc723x为依据，最被广泛接受的还是那8个。\n\n因为请求方法完全可以自由定义，所以新增方法并不是很重要。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566368778,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":122604,"user_name":"ly","can_delete":false,"product_type":"c1","uid":1221628,"ip_address":"","ucode":"5E2B85252DABF3","user_header":"https://static001.geekbang.org/account/avatar/00/12/a3/fc/379387a4.jpg","comment_is_top":false,"comment_ctime":1565432895,"is_pvip":false,"replies":[{"id":"45071","content":"是的，你理解的很对。<br><br>这也是http灵活性不好的一面，没有严格的约束，会导致误用和滥用。<br><br>http有点像C++，给了你很多的工具和武器，但不限制你怎么用，用的好可以大杀四方，用不好就容易伤到自己。","user_name":"作者回复","user_name_real":"chrono","uid":"1181974","ctime":1565571580,"ip_address":"","comment_id":122604,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1565432895","product_id":100029001,"comment_content":"对于请求方法Method这个规范的误用，刚出道开发的时候，因为项目组都是些新手，都不懂这个，对于99%的接口大家都是使用GET来搞，除了文件上传，甚至说很多表单提交都是GET方法把参数拼接到path后面，系统一样运行完美。所以我的理解是：<br>这些个method规范，是一个美好的愿景，美好的蓝图，但是开发人员可以忽略这个规则，想用GET就用GET，就像我之前的经历。所有接口都是GET搞定，什么DELETE&#47;HEAD根本不用（当然这个是不好的案例）。","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":462328,"discussion_content":"是的，你理解的很对。\n\n这也是http灵活性不好的一面，没有严格的约束，会导致误用和滥用。\n\nhttp有点像C++，给了你很多的工具和武器，但不限制你怎么用，用的好可以大杀四方，用不好就容易伤到自己。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1565571580,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":121354,"user_name":"ZeroIce","can_delete":false,"product_type":"c1","uid":1305369,"ip_address":"","ucode":"30133BA83CE349","user_header":"https://static001.geekbang.org/account/avatar/00/13/eb/19/0d990b03.jpg","comment_is_top":false,"comment_ctime":1565105225,"is_pvip":false,"replies":[{"id":"44593","content":"实际上get&#47;head&#47;post&#47;put可以实现任意的操作，全在于服务器如何解释。<br><br>但出于规范的考虑，get&#47;head一般用来读，post&#47;put用来写，这样比较直观，符合大多数人的思维方式。","user_name":"作者回复","user_name_real":"chrono","uid":"1181974","ctime":1565135719,"ip_address":"","comment_id":121354,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1565105225","product_id":100029001,"comment_content":"GET和POST不是都可以实现增删改查？怎么说GET&#47;HEAD 获取数据 POST&#47;PUT是请求数据？","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":461756,"discussion_content":"实际上get/head/post/put可以实现任意的操作，全在于服务器如何解释。\n\n但出于规范的考虑，get/head一般用来读，post/put用来写，这样比较直观，符合大多数人的思维方式。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1565135719,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":120025,"user_name":"四月的紫色花","can_delete":false,"product_type":"c1","uid":1564190,"ip_address":"","ucode":"67863848E5D766","user_header":"https://static001.geekbang.org/account/avatar/00/17/de/1e/ca04d2c5.jpg","comment_is_top":false,"comment_ctime":1564757203,"is_pvip":false,"replies":[{"id":"44233","content":"<br>1.对，请求头可以再自己设计一下。<br><br>2.trace等方法其实都是“指示”，只要get请求带上服务器能够理解的字段，服务器就可以执行类似trace、options的操作。关键在于客户端和服务器两者“互相协商”。","user_name":"作者回复","user_name_real":"chrono","uid":"1181974","ctime":1564961981,"ip_address":"","comment_id":120025,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1564757203","product_id":100029001,"comment_content":"1.你能把 GET&#47;POST 等请求方法对应到数据库的“增删改查”操作吗？请求头应该如何设计呢？<br>可以的。增：insert---POST，删：delete---DELETE，改：update---PUT，查:select---GET<br>2.你觉得 TRACE&#47;OPTIONS&#47;CONNECT 方法能够用 GET 或 POST 间接实现吗？<br>应该是可以的，改变下GET&#47;POST参数，但具体咋改我说不上来😂😂","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":461178,"discussion_content":"\n1.对，请求头可以再自己设计一下。\n\n2.trace等方法其实都是“指示”，只要get请求带上服务器能够理解的字段，服务器就可以执行类似trace、options的操作。关键在于客户端和服务器两者“互相协商”。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1564961981,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":113889,"user_name":"SoberChina","can_delete":false,"product_type":"c1","uid":1105930,"ip_address":"","ucode":"A89E183D164394","user_header":"https://static001.geekbang.org/account/avatar/00/10/e0/0a/e683a198.jpg","comment_is_top":false,"comment_ctime":1563180118,"is_pvip":false,"replies":[{"id":"41499","content":"1.可以看一下RESTful设计相关的资料，uri应该可以表述任何资源，具体的还需要结合实际情况。<br><br>2.delete和patch的含义明显不同啊，patch打补丁而不是删除。<br><br>3.也挺好理解的，用Linux的patch命令，第一次打成功，第二次因为数据变了，肯定就不能打补丁成功了。两次的操作结果不同，所以就不是幂等。","user_name":"作者回复","user_name_real":"chrono","uid":"1181974","ctime":1563184508,"ip_address":"","comment_id":113889,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1563180118","product_id":100029001,"comment_content":"老师您好，想请教一个问题，现实比较复杂的业务没有办法去定义成资源去设计api，在这方面有什么建议呢？还有比如DELETE 方法业务上是不是可以用PATCH代替呢？还有个问题DELETE幂等（对资源影响只有一次） 但是PATCH是非幂等的，这个理解起来比较费力，老师能指引一下吗？谢谢。","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":458423,"discussion_content":"1.可以看一下RESTful设计相关的资料，uri应该可以表述任何资源，具体的还需要结合实际情况。\n\n2.delete和patch的含义明显不同啊，patch打补丁而不是删除。\n\n3.也挺好理解的，用Linux的patch命令，第一次打成功，第二次因为数据变了，肯定就不能打补丁成功了。两次的操作结果不同，所以就不是幂等。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1563184508,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":113814,"user_name":"Alex","can_delete":false,"product_type":"c1","uid":1079331,"ip_address":"","ucode":"93F2D5B7DAF97F","user_header":"https://static001.geekbang.org/account/avatar/00/10/78/23/42233378.jpg","comment_is_top":false,"comment_ctime":1563160752,"is_pvip":false,"replies":[{"id":"41453","content":"可以看一下conf目录里的locations.inc，里面配置了location的处理方式，把路径映射到了lua脚本。","user_name":"作者回复","user_name_real":"chrono","uid":"1181974","ctime":1563162490,"ip_address":"","comment_id":113814,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1563160752","product_id":100029001,"comment_content":"老师，您好，我是个萌新，想请教个问题，例如：GET &#47;10-1 HTTP&#47;1.1 是如何访问到 C:\\http_study\\www\\lua\\10-1.lua的？是要在哪配置一下吗？","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":458397,"discussion_content":"可以看一下conf目录里的locations.inc，里面配置了location的处理方式，把路径映射到了lua脚本。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1563162490,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":110086,"user_name":"响雨","can_delete":false,"product_type":"c1","uid":1581705,"ip_address":"","ucode":"C5FB3A3BC68F92","user_header":"https://static001.geekbang.org/account/avatar/00/18/22/89/73397ccb.jpg","comment_is_top":false,"comment_ctime":1562169231,"is_pvip":false,"replies":[{"id":"39921","content":"基本正确，但从语义上来说，删除最好还是用delete方法。","user_name":"作者回复","user_name_real":"chrono","uid":"1181974","ctime":1562203472,"ip_address":"","comment_id":110086,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1562169231","product_id":100029001,"comment_content":"GET 查 一般是在路径上 &#47;&lt;:id&gt; &#47;ids<br>POST 增 一般是把增加的json格式的params放在body里面<br>PUT   改，和POST传参方法一样<br>DELETE  一般不用，都是使用PUT来进行逻辑删除，比如传递参数is_del=1 来代表数据被删除了","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":456716,"discussion_content":"基本正确，但从语义上来说，删除最好还是用delete方法。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1562203472,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":109453,"user_name":"Seven.Lin澤耿","can_delete":false,"product_type":"c1","uid":1181192,"ip_address":"","ucode":"4CAB732CD6F149","user_header":"https://static001.geekbang.org/account/avatar/00/12/06/08/855abb02.jpg","comment_is_top":false,"comment_ctime":1562035334,"is_pvip":false,"replies":[{"id":"39633","content":"agree。","user_name":"作者回复","user_name_real":"chrono","uid":"1181974","ctime":1562039555,"ip_address":"","comment_id":109453,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1562035334","product_id":100029001,"comment_content":"所谓协议就是约定，无规矩不成方圆，所以学习的时候要理解协议的目的，而不是一味的追求死记硬背，这样才能更好的理解。","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":456417,"discussion_content":"agree。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1562039555,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":109157,"user_name":"小桶","can_delete":false,"product_type":"c1","uid":1184185,"ip_address":"","ucode":"7967FF96CDE753","user_header":"https://static001.geekbang.org/account/avatar/00/12/11/b9/abb7bfe3.jpg","comment_is_top":false,"comment_ctime":1561972716,"is_pvip":false,"replies":[{"id":"39509","content":"GET、HEAD 、OPTIONS和TRACE方法被定义为安全的。<br><br>区别的关键是是否“只读”，与信息泄漏无关。<br><br>可参考rfc7231.","user_name":"作者回复","user_name_real":"chrono","uid":"1181974","ctime":1561976808,"ip_address":"","comment_id":109157,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1561972716","product_id":100029001,"comment_content":"请问OPTIONS，CONNECT，TRACE也是属于不安全方法吗？<br>如果依据文中描述的安全方法的定义，OPTIONS，CONNECT，TRACE好像也不会对服务器上的资源进行实质上的修改。<br>但是OPTIONS方法会列出可以对资源实行的操作方法，可能会被人恶意利用；TRACE方法显示请求-响应的传输路径，会泄漏网站信息。这样来看OPTIONS和TRACE应该是不安全方法。","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":456273,"discussion_content":"GET、HEAD 、OPTIONS和TRACE方法被定义为安全的。\n\n区别的关键是是否“只读”，与信息泄漏无关。\n\n可参考rfc7231.","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1561976808,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":107472,"user_name":"老陈的空酒桶","can_delete":false,"product_type":"c1","uid":1589047,"ip_address":"","ucode":"CA871A74DF1C6A","user_header":"https://static001.geekbang.org/account/avatar/00/18/3f/37/e74c878b.jpg","comment_is_top":false,"comment_ctime":1561541332,"is_pvip":false,"replies":[{"id":"38882","content":"对，http只是一个非强制的约定，解释权在服务器，但大家都按标准来做沟通就最顺畅。<br>","user_name":"作者回复","user_name_real":"chrono","uid":"1181974","ctime":1561544307,"ip_address":"","comment_id":107472,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1561541332","product_id":100029001,"comment_content":"对于如何响应GET和POST之类的是由服务器决定的，包括NGINX及PYTHON的FLask都可以自己定义不同的回应。","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":455521,"discussion_content":"对，http只是一个非强制的约定，解释权在服务器，但大家都按标准来做沟通就最顺畅。\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1561544307,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":106389,"user_name":"天，很蓝 ～","can_delete":false,"product_type":"c1","uid":1339242,"ip_address":"","ucode":"081D57F7CECC37","user_header":"https://static001.geekbang.org/account/avatar/00/14/6f/6a/b0d7987b.jpg","comment_is_top":false,"comment_ctime":1561287604,"is_pvip":false,"replies":[{"id":"38439","content":"body里漏写了两个字母，应该是“PUT DATA IS HERE”","user_name":"作者回复","user_name_real":"chrono","uid":"1181974","ctime":1561291510,"ip_address":"","comment_id":106389,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1561287604","product_id":100029001,"comment_content":"PUT方法的Content-Length是不是和body的长度对不上","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":455075,"discussion_content":"body里漏写了两个字母，应该是“PUT DATA IS HERE”","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1561291510,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":105043,"user_name":"MJ","can_delete":false,"product_type":"c1","uid":1237145,"ip_address":"","ucode":"FCEC0C21444D2A","user_header":"https://static001.geekbang.org/account/avatar/00/12/e0/99/5d603697.jpg","comment_is_top":false,"comment_ctime":1560908340,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"1560908340","product_id":100029001,"comment_content":"有没有同学遇到同样的问题，虚拟机搭建的实验环境，telnet没法操作，输入一个字符，就报HTTP&#47;1.1 400 bad request.<br>","like_count":0,"discussions":[{"author":{"id":2406841,"avatar":"https://static001.geekbang.org/account/avatar/00/24/b9/b9/9e4d7aa4.jpg","nickname":"乘风破浪","note":"","ucode":"937AF15F3FEBDC","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":347674,"discussion_content":"推测你输入的小写，method要求全大写","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1612278065,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1229495,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKMkEV4Jb087pkAOvUSJtibkblLan9hbcc59aK4TKrXS4KiasVZRQHvnP2eG0xkd4P3WzXfy3zfSyEg/132","nickname":"yhq","note":"","ucode":"4BFFB351A6A37E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":40039,"discussion_content":"同问","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1572065496,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":104959,"user_name":"一粟","can_delete":false,"product_type":"c1","uid":1058773,"ip_address":"","ucode":"2EE966F3C36B5F","user_header":"https://static001.geekbang.org/account/avatar/00/10/27/d5/0fd21753.jpg","comment_is_top":false,"comment_ctime":1560897965,"is_pvip":false,"replies":[{"id":"38032","content":"这个不太清楚，或许要做什么“扫描”？","user_name":"作者回复","user_name_real":"chrono","uid":"1181974","ctime":1560906077,"ip_address":"","comment_id":104959,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1560897965","product_id":100029001,"comment_content":"访问某一网站，只有对方的IP和端口号，不知道index在的资源路径，有办法寻找到么?","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":454505,"discussion_content":"这个不太清楚，或许要做什么“扫描”？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1560906077,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]}]}