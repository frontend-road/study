{"id":174506,"title":"48 | 安全增强：设置“高低水位线”等保护好自己","content":"<p><strong>课件和Demo地址</strong><br>\n<a href=\"https://gitee.com/geektime-geekbang/geek_netty\">https://gitee.com/geektime-geekbang/geek_netty</a></p>","comments":[{"had_liked":false,"id":160533,"user_name":"13761642169","can_delete":false,"product_type":"c3","uid":1232334,"ip_address":"","ucode":"68137695FC2120","user_header":"","comment_is_top":false,"comment_ctime":1575970300,"is_pvip":false,"replies":[{"id":61714,"content":"当积累的数据量慢慢降低，降低到低水位线的时，就从非不可写状态转变为可写，这是低水位线的作用，如果仅仅搞一个水位线，有点不太理想，因为可能忽上忽下，所以搞两个，一旦超过高水位线，切换到不可写后，想恢复可写，是需要降低到低水位线之下的，充分保证安全了。","user_name":"作者回复","user_name_real":"stroller","uid":1638649,"ctime":1576474964,"ip_address":"","comment_id":160533,"utype":1}],"discussion_count":2,"race_medal":0,"score":2,"product_id":100036701,"comment_content":"那低水位线的作用呢","like_count":3,"discussions":[{"author":{"id":1638649,"avatar":"https://static001.geekbang.org/account/avatar/00/19/00/f9/44a3e5bd.jpg","nickname":"傅健","note":"","ucode":"5EA8BB26F5B036","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":477404,"discussion_content":"当积累的数据量慢慢降低，降低到低水位线的时，就从非不可写状态转变为可写，这是低水位线的作用，如果仅仅搞一个水位线，有点不太理想，因为可能忽上忽下，所以搞两个，一旦超过高水位线，切换到不可写后，想恢复可写，是需要降低到低水位线之下的，充分保证安全了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1576474964,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1337030,"avatar":"https://static001.geekbang.org/account/avatar/00/14/66/c6/d779dfb6.jpg","nickname":"松松","note":"","ucode":"EB2A80CF7BCA4B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":269676,"discussion_content":"类似于防抖，高过高线触发一个机制，低过低线解除，避免只有一根线时在线附近微小的变化都会导致机制频繁启停。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1589937360,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":158718,"user_name":"吃饭饭","can_delete":false,"product_type":"c3","uid":1231549,"ip_address":"","ucode":"95CFA07CDA2957","user_header":"https://static001.geekbang.org/account/avatar/00/12/ca/bd/a51ae4b2.jpg","comment_is_top":false,"comment_ctime":1575440209,"is_pvip":false,"replies":[{"id":61451,"content":"是的，作用于同一个channel，ctx本身就是于一个channel相关的一切。","user_name":"作者回复","user_name_real":"stroller","uid":1638649,"ctime":1576136883,"ip_address":"","comment_id":158718,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100036701,"comment_content":"ctx.channel().isActive 是作用在当前 ctx.writeAndFlush 上的？","like_count":0,"discussions":[{"author":{"id":1638649,"avatar":"https://static001.geekbang.org/account/avatar/00/19/00/f9/44a3e5bd.jpg","nickname":"傅健","note":"","ucode":"5EA8BB26F5B036","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":476825,"discussion_content":"是的，作用于同一个channel，ctx本身就是于一个channel相关的一切。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1576136883,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":279007,"user_name":"Nico","can_delete":false,"product_type":"c3","uid":1563904,"ip_address":"","ucode":"4A847EA6A2A1AB","user_header":"https://static001.geekbang.org/account/avatar/00/17/dd/00/4a7b9a9f.jpg","comment_is_top":false,"comment_ctime":1613538750,"is_pvip":false,"replies":null,"discussion_count":2,"race_medal":0,"score":2,"product_id":100036701,"comment_content":"我发现在数据量持续较大的情况下，如果触发了高水位的限制变成不可写后，会导致channel卡住，一直不能恢复","like_count":0,"discussions":[{"author":{"id":1793475,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/5d/c3/69019d24.jpg","nickname":"江东","note":"","ucode":"391A62BC7039B3","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":542826,"discussion_content":"这种可能是写数据阻塞住EventLoop线程导致的，netty官网开源github上有人提过类似的discussion","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1640855793,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1094597,"avatar":"https://static001.geekbang.org/account/avatar/00/10/b3/c5/7fc124e2.jpg","nickname":"Liam","note":"","ucode":"1D15D3B64F2606","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":403006,"discussion_content":"遇到了类似的现象，请问后面有解决吗","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1633996480,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":235309,"user_name":"海逗","can_delete":false,"product_type":"c3","uid":1680061,"ip_address":"","ucode":"A49F7DD33DD8D8","user_header":"https://static001.geekbang.org/account/avatar/00/19/a2/bd/3f9adaf6.jpg","comment_is_top":false,"comment_ctime":1594969341,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":2,"product_id":100036701,"comment_content":"老师你好：请叫一个问题流量整形这几个参数如何去设置值的大小啊，老师一般会设置多少。\n        GlobalChannelTrafficShapingHandler trafficShapingHandler = new GlobalChannelTrafficShapingHandler(Executors.newSingleThreadScheduledExecutor(),30)\n我看之前公司的同事使用该调用方法进行去创建，看了源代码，发现如果读写参数的大小都为0的话，是不进行流量整形的。\n只会调用该方法：\n    void bytesWriteFlowControl(long write) {\n        this.currentWrittenBytes.addAndGet(write);\n        this.cumulativeWrittenBytes.addAndGet(write);\n    }\n然后：同事创建一个线程每个30秒打印一下 TrafficCounter 对象记录的这些值  currentWrittenBytes  \n只是为了，打印查看当前的内存消耗而已？还有其他作用？","like_count":0}]}