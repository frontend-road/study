{"id":10275,"title":"03 | 什么是单元测试？如何做好单元测试？","content":"<p>今天我要跟你分享的主题是单元测试，如果你没有开发背景，感觉这篇文章理解起来有难度，那你可以在学完后续的“代码级测试”系列的文章后，再回过头来看一遍这篇文章，相信你会有醍醐灌顶的感觉。</p>\n<h2>什么是单元测试？</h2>\n<p>在正式开始今天的话题之前，我先给你分享一个工厂生产电视机的例子。</p>\n<p>工厂首先会将各种电子元器件按照图纸组装在一起构成各个功能电路板，比如供电板、音视频解码板、射频接收板等，然后再将这些电路板组装起来构成一个完整的电视机。</p>\n<p>如果一切顺利，接通电源后，你就可以开始观看电视节目了。但是很不幸，大多数情况下组装完成的电视机根本无法开机，这时你就需要把电视机拆开，然后逐个模块排查问题。</p>\n<p>假设你发现是供电板的供电电压不足，那你就要继续逐级排查组成供电板的各个电子元器件，最终你可能发现罪魁祸首是一个电容的故障。这时，为了定位到这个问题，你已经花费了大量的时间和精力。</p>\n<p>那在后续的生产中，如何才能避免类似的问题呢？</p>\n<p>你可能立即就会想到，为什么不在组装前，就先测试每个要用到的电子元器件呢？这样你就可以先排除有问题的元器件，最大程度地防止组装完成后逐级排查问题的事情发生。</p>\n<p>实践也证明，这的确是一个行之有效的好办法。</p>\n<p>如果把电视机的生产、测试和软件的开发、测试进行类比，你可以发现：</p><!-- [[[read_end]]] -->\n<ul>\n<li>\n<p>电子元器件就像是软件中的单元，通常是函数或者类，对单个元器件的测试就像是软件测试中的单元测试；</p>\n</li>\n<li>\n<p>组装完成的功能电路板就像是软件中的模块，对电路板的测试就像是软件中的集成测试；</p>\n</li>\n<li>\n<p>电视机全部组装完成就像是软件完成了预发布版本，电视机全部组装完成后的开机测试就像是软件中的系统测试。</p>\n</li>\n</ul>\n<p>通过这个类比，相信你已经体会到了单元测试对于软件整体质量的重要性，那么单元测试到底是什么呢？</p>\n<blockquote>\n<p>单元测试是指，对软件中的最小可测试单元在与程序其他部分相隔离的情况下进行检查和验证的工作，这里的最小可测试单元通常是指函数或者类。</p>\n</blockquote>\n<p>单元测试通常由开发工程师完成，一般会伴随开发代码一起递交至代码库。单元测试属于最严格的软件测试手段，是最接近代码底层实现的验证手段，可以在软件开发的早期以最小的成本保证局部代码的质量。</p>\n<p>另外，单元测试都是以自动化的方式执行，所以在大量回归测试的场景下更能带来高收益。</p>\n<p>同时，你还会发现，单元测试的实施过程还可以帮助开发工程师改善代码的设计与实现，并能在单元测试代码里提供函数的使用示例，因为单元测试的具体表现形式就是对函数以各种不同输入参数组合进行调用，这些调用方法构成了函数的使用说明。</p>\n<h2>如何做好单元测试？</h2>\n<p>要做好单元测试，你首先必须弄清楚单元测试的对象是代码，以及代码的基本特征和产生错误的原因，然后你必须掌握单元测试的基本方法和主要技术手段，比如什么是驱动代码、桩代码和Mock代码等。</p>\n<p><strong>第一，代码的基本特征与产生错误的原因</strong></p>\n<p>开发语言多种多样，程序实现的功能更是千变万化，我可以提炼出代码的基本特征，并总结出代码缺陷的主要原因么？答案是肯定，你静下心来思考时，会发现其中是有规律可寻的。</p>\n<p>因为无论是开发语言还是脚本语言，都会有条件分支、循环处理和函数调用等最基本的逻辑控制，如果抛开代码需要实现的具体业务逻辑，仅看代码结构的话，你会发现所有的代码都是在对数据进行分类处理，每一次条件判定都是一次分类处理，嵌套的条件判定或者循环执行，也是在做分类处理。</p>\n<p>如果有任何一个分类遗漏，都会产生缺陷；如果有任何一个分类错误，也会产生缺陷；如果分类正确也没有遗漏，但是分类时的处理逻辑错误，也同样会产生缺陷。</p>\n<p>可见，<strong>要做到代码功能逻辑正确，必须做到分类正确并且完备无遗漏，同时每个分类的处理逻辑必须正确。</strong></p>\n<p>在具体的工程实践中，开发工程师为了设计并实现逻辑功能正确的代码，通常会有如下的考虑过程：</p>\n<ol>\n<li>\n<p>如果要实现正确的功能逻辑，会有哪几种正常的输入；</p>\n</li>\n<li>\n<p>是否有需要特殊处理的多种边界输入；</p>\n</li>\n<li>\n<p>各种潜在非法输入的可能性以及如何处理。</p>\n</li>\n</ol>\n<p>讲到这里，你有没有回想起我跟你分享的“等价类”。没错，这些开发工程师眼中的代码“功能点”，就是单元测试的“等价类”。</p>\n<p><strong>第二，单元测试用例详解</strong></p>\n<p>在实际工作中，你想做好单元测试，就必须对单元测试的用例设计有深入的理解。</p>\n<p>通常来讲，<strong>单元测试的用例是一个“输入数据”和“预计输出”的集合。</strong> 你需要针对确定的输入，根据逻辑功能推算出预期正确的输出，并且以执行被测试代码的方式进行验证，用一句话概括就是“在明确了代码需要实现的逻辑功能的基础上，什么输入，应该产生什么输出”。</p>\n<p>但是，对于单元测试来讲，测试用例的“输入数据”和“预计输出”可能远比你想得要复杂得多。</p>\n<p>首先，让我来解释一下单元测试用例“输入数据”都有哪些种类，<strong>如果你想当然的认为只有被测试函数的输入参数是“输入数据”的话，那就大错特错了。</strong> 这里我总结了几种“输入数据”，希望可以帮助你理解什么才是完整的单元测试“输入数据”：</p>\n<ul>\n<li>\n<p>被测试函数的输入参数；</p>\n</li>\n<li>\n<p>被测试函数内部需要读取的全局静态变量；</p>\n</li>\n<li>\n<p>被测试函数内部需要读取的成员变量；</p>\n</li>\n<li>\n<p>函数内部调用子函数获得的数据；</p>\n</li>\n<li>\n<p>函数内部调用子函数改写的数据；</p>\n</li>\n<li>\n<p>嵌入式系统中，在中断调用时改写的数据；</p>\n</li>\n<li>\n<p>…</p>\n</li>\n</ul>\n<p>然后，让我们再来看看“预计输出”，<strong>如果没有明确的预计输出，那么测试本身就失去了意义。同样地，“预计输出” 绝对不是只有函数返回值这么简单，还应该包括函数执行完成后所改写的所有数据。</strong> 具体来看有以下几大类：</p>\n<ul>\n<li>\n<p>被测试函数的返回值；</p>\n</li>\n<li>\n<p>被测试函数的输出参数；</p>\n</li>\n<li>\n<p>被测试函数所改写的成员变量；</p>\n</li>\n<li>\n<p>被测试函数所改写的全局变量；</p>\n</li>\n<li>\n<p>被测试函数中进行的文件更新；</p>\n</li>\n<li>\n<p>被测试函数中进行的数据库更新；</p>\n</li>\n<li>\n<p>被测试函数中进行的消息队列更新；</p>\n</li>\n<li>\n<p>…</p>\n</li>\n</ul>\n<p>另外，对于预计输出值，你必须严格根据代码的功能逻辑来设定，而不能通过阅读代码来推算预期输出，否则就是“掩耳盗铃”了。</p>\n<p>你不要觉得好笑，这种情况经常出现。主要原因是，开发工程师自己测试自己写的代码时会有严重的思维惯性，以至于会根据自己的代码实现来推算预计输出。</p>\n<p>最后，我还要再提一个点，如果某些等价类或者边界值，开发工程师在开发的时候都没有考虑到，测试的时候就更不会去设计对应的测试用例了，这样也就会造成测试盲区。</p>\n<p><strong>第三，驱动代码，桩代码和Mock代码</strong></p>\n<p>驱动代码，桩代码和Mock代码，是单元测试中最常出现的三个名词。驱动代码是用来调用被测函数的，而桩代码和Mock代码是用来代替被测函数调用的真实代码的。</p>\n<p><img src=\"https://static001.geekbang.org/resource/image/4b/2f/4b593086d9370bea9afc2d12219a0c2f.png?wh=1740*733\" alt=\"\" /><br />\n驱动代码，桩代码和Mock代码三者的逻辑关系</p>\n<p><strong>驱动代码（Driver）指调用被测函数的代码</strong>，在单元测试过程中，驱动模块通常包括调用被测函数前的数据准备、调用被测函数以及验证相关结果三个步骤。驱动代码的结构，通常由单元测试的框架决定。</p>\n<p><strong>桩代码（Stub）是用来代替真实代码的临时代码。</strong> 比如，某个函数A的内部实现中调用了一个尚未实现的函数B，为了对函数A的逻辑进行测试，那么就需要模拟一个函数B，这个模拟的函数B的实现就是所谓的桩代码。</p>\n<p>为了帮你理解，我带你看下这个例子：假定函数A是被测函数，其内部调用了函数B（具体伪代码如下）：</p>\n<p><img src=\"https://static001.geekbang.org/resource/image/4c/35/4cab48446a65adf0258c74a132cb3c35.png?wh=257*149\" alt=\"\" /><br />\n被测函数A内部调用了函数B</p>\n<p>在单元测试阶段，由于函数B尚未实现，但是为了不影响对函数A自身实现逻辑的测试，你可以用一个假的函数B来代替真实的函数B，那么这个假的函数B就是桩函数。</p>\n<p>为了实现函数A的全路径覆盖，你需要控制不同的测试用例中函数B的返回值，那么桩函数B的伪代码就应该是这个样子的：</p>\n<blockquote>\n<p>当执行第一个测试用例的时候，桩函数B应该返回true，而当执行第二个测试用例的时候，桩函数B应该返回false。</p>\n</blockquote>\n<p>这样就覆盖了被测试函数A的if-else的两个分支。</p>\n<p><img src=\"https://static001.geekbang.org/resource/image/a6/5b/a68bedf39621240b8e36fc503bfd815b.jpeg?wh=272*173\" alt=\"\" /></p>\n<p>桩函数内部实现</p>\n<p>从这个例子可以看出，<strong>桩代码的应用首先起到了隔离和补齐的作用，使被测代码能够独立编译、链接，并独立运行。同时，桩代码还具有控制被测函数执行路径的作用。</strong></p>\n<p>所以，编写桩代码通常需要遵守以下三个原则：</p>\n<ul>\n<li>\n<p>桩函数要具有与原函数完全相同的原形，仅仅是内部实现不同，这样测试代码才能正确链接到桩函数；</p>\n</li>\n<li>\n<p>用于实现隔离和补齐的桩函数比较简单，只需保持原函数的声明，加一个空的实现，目的是通过编译链接；</p>\n</li>\n<li>\n<p>实现控制功能的桩函数是应用最广泛的，要根据测试用例的需要，输出合适的数据作为被测函数的内部输入。</p>\n</li>\n</ul>\n<p>Mock代码和桩代码非常类似，都是用来代替真实代码的临时代码，起到隔离和补齐的作用。但是很多人，甚至是具有多年单元测试经验的开发工程师，也很难说清这二者的区别。</p>\n<p>在我看来，Mock代码和桩代码的本质区别是：测试期待结果的验证（Assert and Expectiation）。</p>\n<ul>\n<li>\n<p>对于Mock代码来说，我们的关注点是Mock方法有没有被调用，以什么样的参数被调用，被调用的次数，以及多个Mock函数的先后调用顺序。所以，在使用Mock代码的测试中，对于结果的验证（也就是assert），通常出现在Mock函数中。</p>\n</li>\n<li>\n<p>对于桩代码来说，我们的关注点是利用Stub来控制被测函数的执行路径，不会去关注Stub是否被调用以及怎么样被调用。所以，你在使用Stub的测试中，对于结果的验证（也就是assert），通常出现在驱动代码中。</p>\n</li>\n</ul>\n<p>在这里，我只想让你理解两者的本质区别以确保你知识结构的完整性，如果你想深入比较，可以参考马丁·福勒（Martin Fowler）的著名文章<a href=\"https://martinfowler.com/articles/mocksArentStubs.html\">《Mock代码不是桩代码》（Mocks Aren’t Stubs）</a>。</p>\n<p>因为从实际应用的角度看，就算你不能分清Mock代码和桩代码，也不会影响你做好单元测试，所以我并没有从理论层面去深入比较它们的区别。</p>\n<h2>实际项目中如何开展单元测试？</h2>\n<p>最后我要跟你聊一下，实际软件项目中如何开展单元测试？</p>\n<ol>\n<li>\n<p>并不是所有的代码都要进行单元测试，通常只有底层模块或者核心模块的测试中才会采用单元测试。</p>\n</li>\n<li>\n<p>你需要确定单元测试框架的选型，这和开发语言直接相关。比如，Java最常用的单元测试框架是Junit和TestNG；C/C++最常用的单元测试框架是CppTest和Parasoft C/C++test；框架选型完成后，你还需要对桩代码框架和Mock代码框架选型，选型的主要依据是开发所采用的具体技术栈。<br />\n通常，单元测试框架、桩代码/Mock代码的选型工作由开发架构师和测试架构师共同决定。</p>\n</li>\n<li>\n<p>为了能够衡量单元测试的代码覆盖率，通常你还需要引入计算代码覆盖率的工具。不同的语言会有不同的代码覆盖率统计工具，比如Java的JaCoCo，JavaScript的Istanbul。在后续的文章中，我还会详细为你介绍代码覆盖率的内容。</p>\n</li>\n<li>\n<p>最后你需要把单元测试执行、代码覆盖率统计和持续集成流水线做集成，以确保每次代码递交，都会自动触发单元测试，并在单元测试执行过程中自动统计代码覆盖率，最后以“单元测试通过率”和“代码覆盖率”为标准来决定本次代码递交是否能够被接受。</p>\n</li>\n</ol>\n<p>如果你有开发背景，那么入门单元测试是比较容易的。但真正在项目中全面推行单元测试时，你会发现还有一些困难需要克服：</p>\n<ol>\n<li>\n<p>紧密耦合的代码难以隔离；</p>\n</li>\n<li>\n<p>隔离后编译链接运行困难；</p>\n</li>\n<li>\n<p>代码本身的可测试性较差，通常代码的可测试性和代码规模成正比；</p>\n</li>\n<li>\n<p>无法通过桩代码直接模拟系统底层函数的调用；</p>\n</li>\n<li>\n<p>代码覆盖率越往后越难提高。</p>\n</li>\n</ol>\n<h2>总结</h2>\n<p>我给你详细介绍了单元测试的概念，和你重点讨论了用例的组成，以及在实际项目中开展单元测试的方法，你需要注意以下三个问题：</p>\n<ol>\n<li>\n<p>代码要做到功能逻辑正确，必须做到分类正确并且完备无遗漏，同时每个分类的处理逻辑必须正确；</p>\n</li>\n<li>\n<p>单元测试是对软件中的最小可测试单元在与软件其他部分相隔离的情况下进行的代码级测试；</p>\n</li>\n<li>\n<p>桩代码起到了隔离和补齐的作用，使被测代码能够独立编译、链接，并运行。</p>\n</li>\n</ol>\n<h2>思考题</h2>\n<p>你所在的公司有做单元测试吗？实施单元测试过程中遇到过哪些问题，你是如何解决的？</p>\n<p>欢迎你给我留言。</p>\n<p></p>\n","comments":[{"had_liked":false,"id":14771,"user_name":"小志","can_delete":false,"product_type":"c1","uid":1167624,"ip_address":"","ucode":"5E20C5B83FE04D","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKFgFt3FT6bvcW2H9AKOuHNZRos0YofVAqlZnxxaUIEaBpibLRs6veaicUmD8KXJo1120AnXLWo99xQ/132","comment_is_top":false,"comment_ctime":1530661958,"is_pvip":false,"discussion_count":5,"race_medal":0,"score":"418142489670","product_id":100009601,"comment_content":"我待过一些中国的互联网公司，也问过一些创业公司，进行单测的不多。我也一直在想没有单测，但是整体的质量也还能“说的过去”的原因是什么。首先没有单测的主要原因还是和中国互联网的现状有关，中国的互联网本质是商业公司，在中国激烈的竞争环境下，业务的快速发展导致需求的快速上线是一个常态。这也导致了无论是产品还是开发经理，都是以支撑业务为kpi，其次才是质量。所以单测是一件不能直接体现到kpi上的隐形需求，项目排期一般也没有单测的时间。那整体质量还过的去的原因其实也是因为互联网对质量的容忍度，允许出现一些非严重的问题，需要测试人员或qa通过checklist、集成测试工具或方法的提升能发现核心问题就够了，甚至通过监控和用户反馈紧急召回就够了。从这个方面也能说明中国的功能测试短期内不会像google一样完全被代替掉，还是会存在，根本是研发底层对质量的要求没有变化。不过不可否认的是，测试的一个趋势是写以提高质量的代码为目标，或许研发测试完全一体化之后，测试来写单测也不是一件不可能的事","like_count":98,"discussions":[{"author":{"id":1122150,"avatar":"https://static001.geekbang.org/account/avatar/00/11/1f/66/59e0647a.jpg","nickname":"万历十五年","note":"","ucode":"3D8CF5DF847AE8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":306908,"discussion_content":"产品经理为导向，满足产品经理要求即可，\n迭代速度够快，即使出现一些小问题，下一个迭代就解决了。在发展中解决问题，绝不能为了解决问题而影响发展。","likes_number":9,"is_delete":false,"is_hidden":false,"ctime":1600415972,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1159802,"avatar":"https://static001.geekbang.org/account/avatar/00/11/b2/7a/d7c26cf2.jpg","nickname":"李冬杰","note":"","ucode":"720BB5D36D28E6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":51447,"discussion_content":"我也在想“没有单元测试，但质量也还说得过去”的原因，我认同你的观点，而且这些原因甚至可以解释为什么“用户体验这么糟糕，确还能说的过去”的问题。","likes_number":4,"is_delete":false,"is_hidden":false,"ctime":1573874992,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1621838,"avatar":"https://static001.geekbang.org/account/avatar/00/18/bf/4e/75f715ba.jpg","nickname":"Jay","note":"","ucode":"F3F10DF44D7176","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":367106,"discussion_content":"测试写单测会出现不必要的损耗，因为单测的前提是代码的设计具有可测试性，如果开发的时候没有考虑这一点，测试的时候就会非常痛苦，成本非常高","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1618273380,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2710815,"avatar":"https://static001.geekbang.org/account/avatar/00/29/5d/1f/e08a63f8.jpg","nickname":"nothing","note":"","ucode":"44019D6B6978DC","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":385631,"discussion_content":"而且不需要加班费。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1627185909,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2710815,"avatar":"https://static001.geekbang.org/account/avatar/00/29/5d/1f/e08a63f8.jpg","nickname":"nothing","note":"","ucode":"44019D6B6978DC","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":385630,"discussion_content":"因为国内即使生产出问题了也能直接让你回来加班。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1627185864,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":70629,"user_name":"口水窝","can_delete":false,"product_type":"c1","uid":1004838,"ip_address":"","ucode":"6028B5AA10D8A1","user_header":"https://static001.geekbang.org/account/avatar/00/0f/55/26/154f9578.jpg","comment_is_top":false,"comment_ctime":1551149698,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"276429056642","product_id":100009601,"comment_content":"同在小的创业公司，根本不用问，没做单元测试，最近在学茹老师的课程，java基础知识，有研发看到，竟然说我一个测试干嘛去学开发的东西，我无语，我只能按照自己内心的想法去学习，知道自己想要什么，然后去努力，坚持打卡，加油！","like_count":64,"discussions":[{"author":{"id":2669074,"avatar":"https://static001.geekbang.org/account/avatar/00/28/ba/12/f5e5f15d.jpg","nickname":"林","note":"","ucode":"8F9D41B68FAD1A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":381891,"discussion_content":"同为测试，知道如果一个测试人员没有一定的开发能力，至少也要能够看的懂代码实现的内容，不然做的测试也只能是最简单的功能测试，测试遇到的问题还得求助开发解答，跟开发讨论缺陷与否一点底气都没有","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1625281151,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1141149,"avatar":"https://static001.geekbang.org/account/avatar/00/11/69/9d/abb7bfe3.jpg","nickname":"郑旭","note":"","ucode":"97B3023FCD8A1B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":325389,"discussion_content":"心里OS: 关他屁事","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1605283536,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":259370,"user_name":"捷后愚生","can_delete":false,"product_type":"c1","uid":1170483,"ip_address":"","ucode":"A1F935D39C8488","user_header":"https://static001.geekbang.org/account/avatar/00/11/dc/33/a68c6b26.jpg","comment_is_top":false,"comment_ctime":1604714670,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"151928570030","product_id":100009601,"comment_content":"面试的时候被问到:你知道单元测试吗？<br><br>首先，讲单元测试的概念。<br>单元测试-对电视机的电子原件测试<br>集成测试-对由电子原件组成的电路板测试<br>系统测试-组装成电视后开机测试<br><br>其次，讲代码产生问题的原因。<br>编程实际上是对数据和分类处理，如果有任何一个分类遗漏，都会产生缺陷；如果有任何一个分类错误，也会产生缺陷；如果分类正确也没有遗漏，但是分类时的处理逻辑错误，也同样会产生缺陷。<br><br>再次，讲单元测试用例。输入参数和预期结果，但是被测试函数的输入参数不仅仅是“输入数据”，预期结果也不仅仅是函数返回值。<br><br><br>接着，讲单元测试的三个重要概念:接着，讲单元测试的三个重要概念:驱动代码、桩代码、Mock代码。<br><br>最后，讲单元测试的策略。并不是所有的代码都要进行单元测试，通常只有底层模块或者核心模块的测试中才会采用单元测试。","like_count":35,"discussions":[{"author":{"id":1164020,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eoTnt9SES5rMbU9ZlNGZiacXvxcSPTn4SOLibribk9xmiaKf05WibA2KaNVgFGddSicgHYAMEVnTBMecYcw/132","nickname":"小叮当csh","note":"","ucode":"B91CF4879A06E7","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":580591,"discussion_content":"然后呢？面试过了没有？是不是加分不少？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1658282059,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":14775,"user_name":"Cynthia🌸","can_delete":false,"product_type":"c1","uid":1163960,"ip_address":"","ucode":"B3A48089794940","user_header":"https://static001.geekbang.org/account/avatar/00/11/c2/b8/ec758482.jpg","comment_is_top":false,"comment_ctime":1530662842,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"117494779834","product_id":100009601,"comment_content":"之前的一家公司曾经比较重视单元测试，当时具体单元测试代码是开发写的，对于测试部门的我而言，只是在CI这块，负责跑出各项目的单元测试结果后汇总成报告查看。具体单元测试的质量是由开发进行把控和审核。<br>再后来组织有些变动，不再重视单元测试，便流于形式，开发可能就写个假的代码保证跑出的报告好看，实际的单元测试本身则被忽视了……<br>目前就职的公司则是没有整体规划过单元测试这块，所以也是困惑怎么推动这件事情。","like_count":27},{"had_liked":false,"id":20482,"user_name":"Jump","can_delete":false,"product_type":"c1","uid":1210642,"ip_address":"","ucode":"F021AEEBD00171","user_header":"https://static001.geekbang.org/account/avatar/00/12/79/12/bcb2ac11.jpg","comment_is_top":false,"comment_ctime":1534474361,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"74548918393","product_id":100009601,"comment_content":"我现在的公司是比较重视单元测试的，也有专门也单测的人，我就是其中一个，我们单侧内容主要分两部分，一是基于mock的真正意义上的单元测试，这部分主要验证业务逻辑，二是与数据库的集成，应该算是集成测试，主要验证数据方面的一致性。另外，看评论有一位说在推行c#的单元测试，我们这边就是用的c#，框架之前用的Nunit,由于数据隔离性不是特别好，后来又换成了Xunit框架，Mock框架是moq，或许可以和那位哥们讨论一下，共同提高😊","like_count":17,"discussions":[{"author":{"id":1368095,"avatar":"https://static001.geekbang.org/account/avatar/00/14/e0/1f/bd7f07b9.jpg","nickname":"Coladad","note":"","ucode":"7373BF6DD4EEC1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":201570,"discussion_content":"同学方便加个微信交流一下吗？我们最近组建单元测试团队，有些问题想交流一下","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1583809571,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":14981,"user_name":"海罗沃德","can_delete":false,"product_type":"c1","uid":1165364,"ip_address":"","ucode":"8704F1D6980FA0","user_header":"https://static001.geekbang.org/account/avatar/00/11/c8/34/fb871b2c.jpg","comment_is_top":false,"comment_ctime":1530780893,"is_pvip":false,"replies":[{"id":"5053","content":"埃森哲的所有项目都有这么高的单元测试需求吗？我的理解是一些和人的生命安全息息相关的软件才会有几近苛刻的代码覆盖率要求，比如航空航天，汽车电子，轨道交通，部分医疗器械软件等，如果所有项目都这样做成本还是很高的","user_name":"作者回复","user_name_real":"dhrbc","uid":"1002226","ctime":1530794426,"ip_address":"","comment_id":14981,"utype":1}],"discussion_count":1,"race_medal":0,"score":"61660323037","product_id":100009601,"comment_content":"在Accenture时候单元测试行覆盖率要达到99%，分支覆盖率要达到90%，仅一些exception分支可以不用覆盖，并且每个测试用例前面要注释好这个case测的是什么方法，输入什么输出什么，预计结果是什么等以便code review时可以快速的知道这段代码是做什么的，甚至一些大功能还要带上use case的id方便追溯原始需求，在测数据持久化层测试要通过内存数据库把CRUD流程都测出来","like_count":14,"discussions":[{"author":{"id":1002226,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/4a/f2/6ea13762.jpg","nickname":"茹炳晟","note":"","ucode":"1361AE1931E2DD","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":420200,"discussion_content":"埃森哲的所有项目都有这么高的单元测试需求吗？我的理解是一些和人的生命安全息息相关的软件才会有几近苛刻的代码覆盖率要求，比如航空航天，汽车电子，轨道交通，部分医疗器械软件等，如果所有项目都这样做成本还是很高的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1530794426,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":14779,"user_name":"、H","can_delete":false,"product_type":"c1","uid":1164928,"ip_address":"","ucode":"841D9D872CCBC6","user_header":"https://static001.geekbang.org/account/avatar/00/11/c6/80/fa8a8476.jpg","comment_is_top":false,"comment_ctime":1530663105,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"57365237953","product_id":100009601,"comment_content":"老师，我的学习方向是Python接口自动化，JMeTer，LR，是不是在学做性能之前就得先去学Java呢，在这学习方向中有什么建议么！谢谢","like_count":13},{"had_liked":false,"id":20391,"user_name":"sylan215","can_delete":false,"product_type":"c1","uid":1019029,"ip_address":"","ucode":"5A2CF31BC69F40","user_header":"https://static001.geekbang.org/account/avatar/00/0f/8c/95/4544d905.jpg","comment_is_top":false,"comment_ctime":1534415025,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"53074022577","product_id":100009601,"comment_content":"十分赞同茹老师的这个观点「并不是所有的代码都要进行单元测试，通常只有底层模块或者核心模块的测试中才会采用单元测试。」，这一定是首要前提，不然在落实的时候会发现，被测函数可能会完全被 Mock 代码取代了。<br><br>如果要做单元测试，那么对开发代码的要求也会更高，至少开发在代码分层上一定要做好，不然光去甄别哪些可以做单元测试哪些不能做，都需要花费很多的时间。<br><br>单元测试和接口函数测试要区分开，我们有个项目，本来是以单元测试的名义开展的，结果搞出来的却是接口函数测试，比如 windows 端的文件导出函数的测试，这样就不需要 Mock 代码了，而相对导出函数，又增加了内部函数的覆盖，但是不管怎样，这个只能算是接口测试了，也就是说，并不是所有针对代码级别的测试，都叫做单元测试。<br><br>最后，如果不是开发自己做单元测试的话，一定要考虑投入产出比的了。<br><br>以上，望沟通交流，公众号「sylan215」","like_count":12},{"had_liked":false,"id":37020,"user_name":"黑米","can_delete":false,"product_type":"c1","uid":1018706,"ip_address":"","ucode":"E7DBEA7867862A","user_header":"https://static001.geekbang.org/account/avatar/00/0f/8b/52/6659dc1b.jpg","comment_is_top":false,"comment_ctime":1541423815,"is_pvip":false,"discussion_count":3,"race_medal":0,"score":"44491096775","product_id":100009601,"comment_content":"我们开发了个单元测试框架，测试人员写用例只要修改yaml配置文件即可完成单元测试，比以前方便多了。","like_count":10,"discussions":[{"author":{"id":1484184,"avatar":"https://static001.geekbang.org/account/avatar/00/16/a5/98/a65ff31a.jpg","nickname":"djfhchdh","note":"","ucode":"E71D75328CE398","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":543210,"discussion_content":"吹牛都不带上税的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1641006502,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1592395,"avatar":"https://static001.geekbang.org/account/avatar/00/18/4c/4b/73741442.jpg","nickname":"WeXk","note":"","ucode":"CB5913C5D7D1B7","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":375770,"discussion_content":"开源了吗","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1621845758,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2263240,"avatar":"","nickname":"Max","note":"","ucode":"3B42089D649433","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":317300,"discussion_content":"请问实现原理是什么","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1603531141,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":62520,"user_name":"happychap","can_delete":false,"product_type":"c1","uid":1388033,"ip_address":"","ucode":"C872B959BF2F3D","user_header":"https://static001.geekbang.org/account/avatar/00/15/2e/01/14a478bb.jpg","comment_is_top":false,"comment_ctime":1548080116,"is_pvip":true,"replies":[{"id":"26071","content":"涉及数据库的单元测试建议不要操作真实的数据库，而是使用dbmock。你说的非常对，单元测试是入门容易，工程实践比较难","user_name":"作者回复","user_name_real":"dhrbc","uid":"1002226","ctime":1551503164,"ip_address":"","comment_id":62520,"utype":1}],"discussion_count":1,"race_medal":0,"score":"35907818484","product_id":100009601,"comment_content":"单元测试本身并不复杂，但在实践中又经常需要十填许多坑，如：事务的传递可能导致单元测试结束后事务回滚失败（若用内存数据库又存在解决sql兼容性的烦恼），多线程执行单元测试导致测试结果不正确，对第三方接口做mock困难，实现逻辑中会周期性计划任务的功能也不好做单元测试。","like_count":9,"discussions":[{"author":{"id":1002226,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/4a/f2/6ea13762.jpg","nickname":"茹炳晟","note":"","ucode":"1361AE1931E2DD","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":437245,"discussion_content":"涉及数据库的单元测试建议不要操作真实的数据库，而是使用dbmock。你说的非常对，单元测试是入门容易，工程实践比较难","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1551503164,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":14786,"user_name":"Geek_84a77e","can_delete":false,"product_type":"c1","uid":1167077,"ip_address":"","ucode":"D1A9B5A0CB871B","user_header":"https://static001.geekbang.org/account/avatar/00/11/ce/e5/66f38361.jpg","comment_is_top":false,"comment_ctime":1530664771,"is_pvip":false,"replies":[{"id":"5001","content":"能问这个问题，说明你已经很好地理解了文章的关键内容。这里的成员变量指的是类的成员变量，逻辑上你也可以把它想象成是全局变量。因为函数内部会去读取类的成员变量，然后根据类的成员变量来决定后续逻辑等。","user_name":"作者回复","user_name_real":"dhrbc","uid":"1002226","ctime":1530676558,"ip_address":"","comment_id":14786,"utype":1}],"discussion_count":2,"race_medal":0,"score":"31595435843","product_id":100009601,"comment_content":"不太理解老师说的输入数据那部分<br>只知道被测函数的参数进行设计<br>不知道如何针对函数的成员变量等进行设计用例？","like_count":7,"discussions":[{"author":{"id":1002226,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/4a/f2/6ea13762.jpg","nickname":"茹炳晟","note":"","ucode":"1361AE1931E2DD","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":420134,"discussion_content":"能问这个问题，说明你已经很好地理解了文章的关键内容。这里的成员变量指的是类的成员变量，逻辑上你也可以把它想象成是全局变量。因为函数内部会去读取类的成员变量，然后根据类的成员变量来决定后续逻辑等。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1530676558,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1321670,"avatar":"https://static001.geekbang.org/account/avatar/00/14/2a/c6/8646048e.jpg","nickname":"ginger","note":"","ucode":"73892EB5DDCE66","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":301186,"discussion_content":"函数内部,除了会使用函数入参以外,也可以使用类中的成员变量,还可以读取配置文件等.","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1598434339,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":93166,"user_name":"奕","can_delete":false,"product_type":"c1","uid":1260920,"ip_address":"","ucode":"BFD7B63FEE848A","user_header":"https://static001.geekbang.org/account/avatar/00/13/3d/78/8c11c3b3.jpg","comment_is_top":false,"comment_ctime":1557412159,"is_pvip":false,"replies":[{"id":"33566","content":"很棒的总结","user_name":"作者回复","user_name_real":"dhrbc","uid":"1002226","ctime":1557705164,"ip_address":"","comment_id":93166,"utype":1}],"discussion_count":1,"race_medal":0,"score":"23032248639","product_id":100009601,"comment_content":"自动化测试集应该是一把可信的、灵活的尺子。所以测试集不宜过大，应能支持在几个小时内给出稳定可信结果。测试集的大小应考虑以下几个方面：以时间窗口为首要敏感因素，然后考虑覆盖功能的重要程度，测试执行的稳定性。","like_count":5,"discussions":[{"author":{"id":1002226,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/4a/f2/6ea13762.jpg","nickname":"茹炳晟","note":"","ucode":"1361AE1931E2DD","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":449509,"discussion_content":"很棒的总结","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1557705164,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":51402,"user_name":"xhavit","can_delete":false,"product_type":"c1","uid":1016906,"ip_address":"","ucode":"027D44425FF50A","user_header":"https://static001.geekbang.org/account/avatar/00/0f/84/4a/580792f1.jpg","comment_is_top":false,"comment_ctime":1545180704,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"18725049888","product_id":100009601,"comment_content":"倒是定义一下mock代码啊？都不定义然后就对比，一脸懵逼。。。。","like_count":4},{"had_liked":false,"id":15627,"user_name":"Elsa","can_delete":false,"product_type":"c1","uid":1170429,"ip_address":"","ucode":"667B072D946E2E","user_header":"https://static001.geekbang.org/account/avatar/00/11/db/fd/002edf00.jpg","comment_is_top":false,"comment_ctime":1531355505,"is_pvip":false,"replies":[{"id":"5344","content":"我建议qa从接口层面review效率更高，qa直接review ut可能并不是太合适","user_name":"作者回复","user_name_real":"dhrbc","uid":"1002226","ctime":1531366663,"ip_address":"","comment_id":15627,"utype":1}],"discussion_count":1,"race_medal":0,"score":"18711224689","product_id":100009601,"comment_content":"我所在的是敏捷开发团队，QA需要review UT，那么我想知道QA 怎样review  UT才更有价值呢？现在基本是根据业务需求去review UT的case是否有遗漏","like_count":4,"discussions":[{"author":{"id":1002226,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/4a/f2/6ea13762.jpg","nickname":"茹炳晟","note":"","ucode":"1361AE1931E2DD","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":420482,"discussion_content":"我建议qa从接口层面review效率更高，qa直接review ut可能并不是太合适","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1531366663,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":14781,"user_name":"产品助理","can_delete":false,"product_type":"c1","uid":1019821,"ip_address":"","ucode":"39A76D346A96E9","user_header":"https://static001.geekbang.org/account/avatar/00/0f/8f/ad/6e3e9e15.jpg","comment_is_top":false,"comment_ctime":1530663320,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"18710532504","product_id":100009601,"comment_content":"项目中推行单元测试中，您提及的问题如何解决，后面会有介绍吗？<br><br>如单元函数中大部分都是对数据的CURD操作，如何获取有效数据，又如何防止脏数据。都很让人头痛。<br><br>期待后续文章，多谢！","like_count":4},{"had_liked":false,"id":15397,"user_name":"刘炜","can_delete":false,"product_type":"c1","uid":1165122,"ip_address":"","ucode":"4BC62985F36898","user_header":"https://static001.geekbang.org/account/avatar/00/11/c7/42/ffa40457.jpg","comment_is_top":false,"comment_ctime":1531179296,"is_pvip":false,"replies":[{"id":"5299","content":"哈哈，你说得太对了，但是现实都是先实现再补单元测试","user_name":"作者回复","user_name_real":"dhrbc","uid":"1002226","ctime":1531317870,"ip_address":"","comment_id":15397,"utype":1}],"discussion_count":1,"race_medal":0,"score":"14416081184","product_id":100009601,"comment_content":"单元测试开展最佳时机是从项目初级就开始，结合TDD的方式。现实中的困难就是当代码已经烂成一坨翔的时候才意识到要做单元测试，而这个时候的成本和收益已经不允许了。","like_count":4,"discussions":[{"author":{"id":1002226,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/4a/f2/6ea13762.jpg","nickname":"茹炳晟","note":"","ucode":"1361AE1931E2DD","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":420370,"discussion_content":"哈哈，你说得太对了，但是现实都是先实现再补单元测试","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1531317870,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":14869,"user_name":"008","can_delete":false,"product_type":"c1","uid":1164003,"ip_address":"","ucode":"E1D9D91E18208A","user_header":"https://static001.geekbang.org/account/avatar/00/11/c2/e3/df7447ff.jpg","comment_is_top":false,"comment_ctime":1530714908,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"14415616796","product_id":100009601,"comment_content":"今年刚在团队推行单元测试，阅读过《单元测试的艺术2》，觉得非常受益，也强烈推荐其他同学阅读。我认为单元测试不仅仅是为了测试，也能让你写出结构更好，质量更佳的逻辑代码。在推行的这几个月中，也只能以新代码进行试水，遗留代码完全没有勇气进行。而且目前团队成员在接受程度上还远没有达到得心应手，也比较容易出现抵触情绪，我也正在思考如何才能更有效的推广。<br>另外，我们使用的C#语言，NUnit测试框架+JustMock Mock框架，从技术选型上我觉得还是比较好用的。<br>非常期待后续的课程，也非常想认识更多的在单元测试上想尝试亦或是有所心得的同学共同交流","like_count":3},{"had_liked":false,"id":217411,"user_name":"DefendTheLand","can_delete":false,"product_type":"c1","uid":1055421,"ip_address":"","ucode":"D6DC89E84BE6A1","user_header":"https://static001.geekbang.org/account/avatar/00/10/1a/bd/df7e2da2.jpg","comment_is_top":false,"comment_ctime":1589499634,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10179434226","product_id":100009601,"comment_content":"我现在的项目组要求单元测试覆盖率不低于百分之80","like_count":2},{"had_liked":false,"id":193909,"user_name":"郑红","can_delete":false,"product_type":"c1","uid":1917274,"ip_address":"","ucode":"7609946D19581C","user_header":"","comment_is_top":false,"comment_ctime":1584979662,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10174914254","product_id":100009601,"comment_content":"待了四家公司，做单元测试的部门都很少","like_count":2},{"had_liked":false,"id":15525,"user_name":"捷后愚生","can_delete":false,"product_type":"c1","uid":1170483,"ip_address":"","ucode":"A1F935D39C8488","user_header":"https://static001.geekbang.org/account/avatar/00/11/dc/33/a68c6b26.jpg","comment_is_top":false,"comment_ctime":1531269120,"is_pvip":false,"replies":[{"id":"5283","content":"是的，可能开发看会更有感觉，因为单元测试一般都是开发自己在做","user_name":"作者回复","user_name_real":"dhrbc","uid":"1002226","ctime":1531310877,"ip_address":"","comment_id":15525,"utype":1}],"discussion_count":2,"race_medal":0,"score":"10121203712","product_id":100009601,"comment_content":"这篇文章，不仅是测试人员要看，开发人员也要看！","like_count":2,"discussions":[{"author":{"id":1002226,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/4a/f2/6ea13762.jpg","nickname":"茹炳晟","note":"","ucode":"1361AE1931E2DD","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":420426,"discussion_content":"是的，可能开发看会更有感觉，因为单元测试一般都是开发自己在做","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1531310877,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1915636,"avatar":"https://static001.geekbang.org/account/avatar/00/1d/3a/f4/b0e5dadb.jpg","nickname":"值得拥有","note":"","ucode":"9809E722239E5B","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":303737,"discussion_content":"已经分享给对应开发大大了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1599365946,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":14970,"user_name":"LinearBee","can_delete":false,"product_type":"c1","uid":1164950,"ip_address":"","ucode":"870BE878311842","user_header":"https://static001.geekbang.org/account/avatar/00/11/c6/96/4832e4e6.jpg","comment_is_top":false,"comment_ctime":1530772472,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10120707064","product_id":100009601,"comment_content":"我们所在部门是提高了提测标准，增加了新增代码的单元测试覆盖率的准入条件。效果很好，代码级别的错误基本没有。","like_count":2},{"had_liked":false,"id":341917,"user_name":"授人以🐟，不如授人以渔","can_delete":false,"product_type":"c1","uid":1193874,"ip_address":"","ucode":"BD53829E924B66","user_header":"https://static001.geekbang.org/account/avatar/00/12/37/92/961ba560.jpg","comment_is_top":false,"comment_ctime":1649917942,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"5944885238","product_id":100009601,"comment_content":"我现在遇到的问题点在于，工程代码已经实现，而且也通过学习《软件测试》具备了测试的基本概念，但并不能有效地对项目做改造。我的最终目的是：实现如“实际项目中如何单元测试”小结讲述 1 2 3 4 点，能够跑通这 4 点就算是完成了这件事。","like_count":1},{"had_liked":false,"id":241229,"user_name":"你好极客时间","can_delete":false,"product_type":"c1","uid":2113412,"ip_address":"","ucode":"EC1AE9FD105234","user_header":"https://static001.geekbang.org/account/avatar/00/20/3f/84/47f7b661.jpg","comment_is_top":false,"comment_ctime":1597220032,"is_pvip":false,"discussion_count":0,"race_medal":1,"score":"5892187328","product_id":100009601,"comment_content":"我们一直都没有单元测试，有些新来的开发同学如果模块问题多，我们会和开发代表和对应的同学私下沟通，能否增加对这位同学代码的代码走查，有些开发代表护犊子还会突然翻脸觉得我们找茬。。所以沟通的时候，每次都特别注意语气和方式。大部分开发代表我觉得还是愿意接受意见的。感觉测试真的很不容易","like_count":1},{"had_liked":false,"id":70964,"user_name":"谭鹏","can_delete":false,"product_type":"c1","uid":1142009,"ip_address":"","ucode":"4A8120C4AA6F2F","user_header":"https://static001.geekbang.org/account/avatar/00/11/6c/f9/af80b4da.jpg","comment_is_top":false,"comment_ctime":1551235189,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5846202485","product_id":100009601,"comment_content":"公司的测试 都是靠开发人员自测和测试人员测试，测试方法也是手动点击的这种笨方法,想写打哪元测试，同事们都说  代价太大，最后也没执行起来。感觉测试集成也是一套系统，光靠单个方法和技术点没有完整的系统 感觉就像是增加了工作量","like_count":1},{"had_liked":false,"id":22436,"user_name":"zhangbitao","can_delete":false,"product_type":"c1","uid":1072702,"ip_address":"","ucode":"E06E46B9712B71","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/PiajxSqBRaEKOmtA70aIMNqEvbE6HLcwQ4UuiaAbFIicsrhmiafpm7DD6Q5DntoEuqichvrcib1ibJfHQclsxJ6jB7oCQ/132","comment_is_top":false,"comment_ctime":1535676365,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5830643661","product_id":100009601,"comment_content":"我在开发过程中会写单测，但是耦合性一直是个大问题，有时候想到很多测试用例，但是模拟起来很麻烦就放弃了","like_count":2},{"had_liked":false,"id":15701,"user_name":"coco","can_delete":false,"product_type":"c1","uid":1170264,"ip_address":"","ucode":"BAF47321B1CE6C","user_header":"https://static001.geekbang.org/account/avatar/00/11/db/58/1200e783.jpg","comment_is_top":false,"comment_ctime":1531398329,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5826365625","product_id":100009601,"comment_content":"测试review ut也许不能提出很多意见，而且要开发来讲解一下，但是有两个好处1.防止假测试用例，也就是不做验证的用例，2.在进行上层用例的设计时可以知道哪些已经在ut层覆盖了，避免重复劳动","like_count":1},{"had_liked":false,"id":14978,"user_name":"Kerry","can_delete":false,"product_type":"c1","uid":1095371,"ip_address":"","ucode":"C86DF25C7ECD93","user_header":"https://static001.geekbang.org/account/avatar/00/10/b6/cb/6e41d01f.jpg","comment_is_top":false,"comment_ctime":1530780203,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5825747499","product_id":100009601,"comment_content":"单元测试做不做、做多少，不仅依赖单元自身是否关键，还取决于行业、项目和团队等多因素，单元测试的执行可以从0~100%。只是通常人们不会把问题想得复杂，甚至没考虑上下文。如果我下次开课，可以细讲😊","like_count":1},{"had_liked":false,"id":14885,"user_name":"favorlm","can_delete":false,"product_type":"c1","uid":1120997,"ip_address":"","ucode":"CFD52127AA6E1D","user_header":"https://static001.geekbang.org/account/avatar/00/11/1a/e5/6899701e.jpg","comment_is_top":false,"comment_ctime":1530723586,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"5825690882","product_id":100009601,"comment_content":"我在公司想要使用单元测试，但是发现代码根本难以拆分。","like_count":2,"discussions":[{"author":{"id":1193874,"avatar":"https://static001.geekbang.org/account/avatar/00/12/37/92/961ba560.jpg","nickname":"授人以🐟，不如授人以渔","note":"","ucode":"BD53829E924B66","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":562934,"discussion_content":"我遇到的问题是，我不知道如何在工程项目中使用单元测试。和你的问题类似，发现代码很难拆分。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1649910968,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":14765,"user_name":"永不放弃","can_delete":false,"product_type":"c1","uid":1166808,"ip_address":"","ucode":"D69EB45C41811F","user_header":"https://static001.geekbang.org/account/avatar/00/11/cd/d8/bb3443e4.jpg","comment_is_top":false,"comment_ctime":1530659510,"is_pvip":false,"replies":[{"id":"4969","content":"专栏后期会有专门的篇幅讲代码级测试，那里会提供更多实际的例子","user_name":"作者回复","user_name_real":"dhrbc","uid":"1002226","ctime":1530661508,"ip_address":"","comment_id":14765,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5825626806","product_id":100009601,"comment_content":"老师，后面会有实战部分吗？","like_count":1,"discussions":[{"author":{"id":1002226,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/4a/f2/6ea13762.jpg","nickname":"茹炳晟","note":"","ucode":"1361AE1931E2DD","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":420127,"discussion_content":"专栏后期会有专门的篇幅讲代码级测试，那里会提供更多实际的例子","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1530661508,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":14755,"user_name":"Tomandy","can_delete":false,"product_type":"c1","uid":1163587,"ip_address":"","ucode":"65B13D779BA5FB","user_header":"https://static001.geekbang.org/account/avatar/00/11/c1/43/01b69b03.jpg","comment_is_top":false,"comment_ctime":1530634975,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5825602271","product_id":100009601,"comment_content":"公司有套CI CD的流程，确实用到了文中提到的单元测试和代码覆盖率。","like_count":1},{"had_liked":false,"id":358352,"user_name":"亚林","can_delete":false,"product_type":"c1","uid":1018972,"ip_address":"湖南","ucode":"4A5A6D24314B79","user_header":"https://static001.geekbang.org/account/avatar/00/0f/8c/5c/3f164f66.jpg","comment_is_top":false,"comment_ctime":1664243286,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1664243286","product_id":100009601,"comment_content":"时间成本吃不住","like_count":0},{"had_liked":false,"id":355924,"user_name":"付晓杰","can_delete":false,"product_type":"c1","uid":1869584,"ip_address":"上海","ucode":"66634A3401A176","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/FGeCDgpXdhsXseIGF3GCzZibDJlOfO4KDqPJkMra2e0TJj3QVQk4t1oEd1BuQPtYOeavFyYxicd5fTZ33tIbPOZQ/132","comment_is_top":false,"comment_ctime":1661853604,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1661853604","product_id":100009601,"comment_content":"单元测试中常用到的三种代码：驱动代码，桩代码和 Mock 代码","like_count":0},{"had_liked":false,"id":353110,"user_name":"yang","can_delete":false,"product_type":"c1","uid":2047511,"ip_address":"陕西","ucode":"920E08D452B58F","user_header":"https://static001.geekbang.org/account/avatar/00/1f/3e/17/6a32296b.jpg","comment_is_top":false,"comment_ctime":1659173609,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1659173609","product_id":100009601,"comment_content":"C++现在还有Gtest。但是其实国内只有大公司会有做底层的单元测试，一般都是功能测试","like_count":0},{"had_liked":false,"id":341048,"user_name":"Geek_qing","can_delete":false,"product_type":"c1","uid":1622698,"ip_address":"","ucode":"DFC7196D3C6826","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIZCX6TPTqnER9KCIfN83iauh6mHvhPzHTiabnniaibmIaBsIUZPYcYrAYlOu8GEXd9pbTMia2zrjHnicgQ/132","comment_is_top":false,"comment_ctime":1649313010,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1649313010","product_id":100009601,"comment_content":"jacoco测试报告中的覆盖情况可以和用例关联吗","like_count":0},{"had_liked":false,"id":338197,"user_name":"王雯娟","can_delete":false,"product_type":"c1","uid":1164643,"ip_address":"","ucode":"61DFFF0C928400","user_header":"https://static001.geekbang.org/account/avatar/00/11/c5/63/91edf592.jpg","comment_is_top":false,"comment_ctime":1647349456,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1647349456","product_id":100009601,"comment_content":"测试桩的重要性，实现隔离补齐<br>我们的这部分介于单元测试和接口测试中间，函数层的测试，测试桩主要应用在我们的可测试差的开发实现，实现对开发代码测试的媒介","like_count":0},{"had_liked":false,"id":334734,"user_name":"Fuji","can_delete":false,"product_type":"c1","uid":2913578,"ip_address":"","ucode":"BDC015A48E0409","user_header":"https://static001.geekbang.org/account/avatar/00/2c/75/2a/b5a0362b.jpg","comment_is_top":false,"comment_ctime":1645094479,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1645094479","product_id":100009601,"comment_content":"请问如何衡量单元测试产生了多大的作用？只看覆盖率和通过率好像不够全面。","like_count":0},{"had_liked":false,"id":322584,"user_name":"小呀么小二郎","can_delete":false,"product_type":"c1","uid":1326905,"ip_address":"","ucode":"149540DCFDF43E","user_header":"https://static001.geekbang.org/account/avatar/00/14/3f/39/b1558fc9.jpg","comment_is_top":false,"comment_ctime":1637488935,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1637488935","product_id":100009601,"comment_content":"目前待过的公司都木有做单测，自己的代码基础也很薄弱，知道要学但总是学一阵子就坚持不下去了，然后反反复复一直停留在最最最基础的部分","like_count":0},{"had_liked":false,"id":311545,"user_name":"🌿","can_delete":false,"product_type":"c1","uid":2066322,"ip_address":"","ucode":"5F819BBD11054E","user_header":"https://static001.geekbang.org/account/avatar/00/1f/87/92/9ac4c335.jpg","comment_is_top":false,"comment_ctime":1631278109,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1631278109","product_id":100009601,"comment_content":"对于 Mock 代码来说，我们的关注点是 Mock 方法有没有被调用，以什么样的参数被调用，被调用的次数，以及多个 Mock 函数的先后调用顺序。所以，在使用 Mock 代码的测试中，对于结果的验证（也就是 assert），通常出现在 Mock 函数中。老师，我对最后一句不太理解，对于结果的验证不都应该在驱动代码中么","like_count":0},{"had_liked":false,"id":311024,"user_name":"zjxht62","can_delete":false,"product_type":"c1","uid":1234354,"ip_address":"","ucode":"1056D02A4F38E6","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83erR6AiaRYlWsrgJ3B1xme2YDdzcuJ1B1myNiadcibibvqhLBsgmeUWgN8nlqgntH0icVuosyRMDe1cN9Fg/132","comment_is_top":false,"comment_ctime":1631021104,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1631021104","product_id":100009601,"comment_content":"如果有任何一个分类遗漏，都会产生缺陷；如果有任何一个分类错误，也会产生缺陷；如果分类正确也没有遗漏，但是分类时的处理逻辑错误，也同样会产生缺陷。<br>老师好，各位同学好，我没太理解其中分类错误和分类处理逻辑错误有什么区别？能举例说说么<br>","like_count":0,"discussions":[{"author":{"id":1193874,"avatar":"https://static001.geekbang.org/account/avatar/00/12/37/92/961ba560.jpg","nickname":"授人以🐟，不如授人以渔","note":"","ucode":"BD53829E924B66","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":562991,"discussion_content":"我的理解，仅供参考。分类错误：if 条件判断错误；分类处理错误：判断后对具体业务逻辑的执行部分出现了处理错误。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1649922402,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":308618,"user_name":"追风筝的人","can_delete":false,"product_type":"c1","uid":1488020,"ip_address":"","ucode":"2993D60F94C396","user_header":"https://static001.geekbang.org/account/avatar/00/16/b4/94/2796de72.jpg","comment_is_top":false,"comment_ctime":1629706224,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1629706224","product_id":100009601,"comment_content":"没有单元测试","like_count":0},{"had_liked":false,"id":300438,"user_name":"小猪(arlis)","can_delete":false,"product_type":"c1","uid":1480164,"ip_address":"","ucode":"8BD532D679BE74","user_header":"https://static001.geekbang.org/account/avatar/00/16/95/e4/54ea7e05.jpg","comment_is_top":false,"comment_ctime":1625156412,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1625156412","product_id":100009601,"comment_content":"单元测试一般在团队内不好开展，开发没这个习惯","like_count":0},{"had_liked":false,"id":297992,"user_name":"Geek_5ee285","can_delete":false,"product_type":"c1","uid":2661446,"ip_address":"","ucode":"3A4F6FC638F23C","user_header":"","comment_is_top":false,"comment_ctime":1623863642,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1623863642","product_id":100009601,"comment_content":"我是培训机构出来的，目前也工作了2年多。单元测试只知道老师所说的单元、集成、系统测试这个理念。后面涉及代码和框架、数据分类处理、桩代码啥的瞬间觉得自己得多听看几遍","like_count":0},{"had_liked":false,"id":259134,"user_name":"温柔的风穿堂过","can_delete":false,"product_type":"c1","uid":2291472,"ip_address":"","ucode":"475CDB83CD3792","user_header":"https://static001.geekbang.org/account/avatar/00/22/f7/10/deb170d1.jpg","comment_is_top":false,"comment_ctime":1604636336,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1604636336","product_id":100009601,"comment_content":"我们公司也没有单元测试，主要是实施起来比较困难，迭代快，要求又是快速上线，比较耗时间，开发就不愿意去进行单元测试","like_count":0},{"had_liked":false,"id":258488,"user_name":"Geek_ce3954","can_delete":false,"product_type":"c1","uid":2264923,"ip_address":"","ucode":"6C466614848216","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLUabUgtOZicYLlgMKq69XV1T8rtSvTeKlSX8Vl11maiaZ4j7pWxYdbsmhIwE1F6ddDb3nfYRtNXz2g/132","comment_is_top":false,"comment_ctime":1604459320,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1604459320","product_id":100009601,"comment_content":"我们是开发进行单测，测试没有进行","like_count":0},{"had_liked":false,"id":243857,"user_name":"李俊","can_delete":false,"product_type":"c1","uid":2060379,"ip_address":"","ucode":"706C524215595F","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/5c1gkU1VMGrmMCicz6IE2vY19xdZd2Qvbric8QSglC3mPQD828aMTsoa6x1Ao9kXWlTx6lMljAAn5KC0QwcpF1EA/132","comment_is_top":false,"comment_ctime":1598314211,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1598314211","product_id":100009601,"comment_content":"老师好，为什么说只有核心模块和底层功能才需要单元测试呢，其他的模功也是整个系统的一部分，也会影响整体集成","like_count":0},{"had_liked":false,"id":235598,"user_name":"Leon","can_delete":false,"product_type":"c1","uid":1668689,"ip_address":"","ucode":"C2C44B6AD10A78","user_header":"https://static001.geekbang.org/account/avatar/00/19/76/51/09cd6302.jpg","comment_is_top":false,"comment_ctime":1595121353,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1595121353","product_id":100009601,"comment_content":"这样理解对吗？Stub和Mock一个测输出一个测输入","like_count":0},{"had_liked":false,"id":230248,"user_name":"小溪","can_delete":false,"product_type":"c1","uid":1699920,"ip_address":"","ucode":"4EA128F1DD66D0","user_header":"https://static001.geekbang.org/account/avatar/00/19/f0/50/52562aa1.jpg","comment_is_top":false,"comment_ctime":1593326752,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1593326752","product_id":100009601,"comment_content":"被测试函数的返回值和被测试函数的输出参数之间的区别是什么？","like_count":0},{"had_liked":false,"id":197996,"user_name":"二进制_1101","can_delete":false,"product_type":"c1","uid":1933516,"ip_address":"","ucode":"28DD5F42B4F11E","user_header":"https://static001.geekbang.org/account/avatar/00/1d/80/cc/8455c6cf.jpg","comment_is_top":false,"comment_ctime":1585406249,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1585406249","product_id":100009601,"comment_content":"从来没有做过单元测试，对于此处的知识还是很薄弱的，老师讲的理论知识感觉懂但又不是太懂，后续还需要多补习一下。","like_count":0},{"had_liked":false,"id":179044,"user_name":"黄超","can_delete":false,"product_type":"c1","uid":1856373,"ip_address":"","ucode":"6400EC244417E1","user_header":"https://static001.geekbang.org/account/avatar/00/1c/53/75/496790ed.jpg","comment_is_top":false,"comment_ctime":1581902502,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1581902502","product_id":100009601,"comment_content":"很详细","like_count":0},{"had_liked":false,"id":142439,"user_name":"Gz","can_delete":false,"product_type":"c1","uid":1057466,"ip_address":"","ucode":"78897C7FC7611A","user_header":"https://static001.geekbang.org/account/avatar/00/10/22/ba/7b73c9e1.jpg","comment_is_top":false,"comment_ctime":1571368808,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1571368808","product_id":100009601,"comment_content":"为了差缺补漏来听课的 看到单元测试这个事情 想说下 很大程度上 国内互联网公司 都是不那么重视单元测试 因为单元测试的时间 跟开发的时间 基本上是1：1 很占时间 并且大部分开发对于单元测试 都是 让单元测试通过而不是 为了保证自己的质量来做的 为了做而作就会有问题 。","like_count":0},{"had_liked":false,"id":131107,"user_name":"XRX","can_delete":false,"product_type":"c1","uid":1227349,"ip_address":"","ucode":"BA69D49FD56EEE","user_header":"https://static001.geekbang.org/account/avatar/00/12/ba/55/38965e83.jpg","comment_is_top":false,"comment_ctime":1567644667,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1567644667","product_id":100009601,"comment_content":"看过老师的文章很受益，想请教一下，非常认同嵌入式软件单元测试的重要性，但关于嵌入式系统如何做单测，能否给一些建议？比如有哪些工具，据我所知，除了parasoft，还有tessy，vectorcast等，这些工具的特点和适用性","like_count":0,"discussions":[{"author":{"id":1299230,"avatar":"https://static001.geekbang.org/account/avatar/00/13/d3/1e/5831c9b5.jpg","nickname":"chuck","note":"","ucode":"0588E14E4D4534","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":132991,"discussion_content":"tessy恒润代理，基本只在汽车行业用，vcast有原厂，汽车航空医疗都有在用，parasoft不了解，可能比较多是金融行业用吧","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578929226,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":112025,"user_name":"Geek__yan","can_delete":false,"product_type":"c1","uid":1457939,"ip_address":"","ucode":"52C2F0C3A061C3","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKT2YZ6JY6icy4asVC2qeEYdwHFJr0eRxhaRODleFiac1ujqF6q2V2npJuicQAfHicPYVicjUH7LEezpDw/132","comment_is_top":false,"comment_ctime":1562655288,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1562655288","product_id":100009601,"comment_content":"我在写单元测试时遇到一个问题，想请教一下。比如对service层函数的单元测试，对于一些mapper或者redis调用组件可以用mock，然后写桩代码。但是对于函数中调用的私有方法，这个私有方法也是可能需要调用mapper或者第三方组件的，甚至有多线程的部分，这样的情况可以写桩代码吗，如何写，如果不能写如何解决呢（要是能贴代码就好了，真想把我的代码贴上来，应该看着更清晰）","like_count":0},{"had_liked":false,"id":111804,"user_name":"shineliang","can_delete":false,"product_type":"c1","uid":1595596,"ip_address":"","ucode":"99B861303F8AD3","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/oiaLMLG1klibjHeJ7NibMGmWnRtOjF4vLvgTjBOeKfrRFCTYVTV1cUG97SibEomeykic9XCJ9X4M8XIztnBZojgGuWw/132","comment_is_top":false,"comment_ctime":1562605424,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1562605424","product_id":100009601,"comment_content":"公司偏底层平台类的团队已经在做，但是上层业务类的做得比较少。遇到的一个痛点是，对于数据条件判断，改写db后，在同样的测试输入数据下，无法再次通过这个测试数据得到同样的输出，有点类似于自动化测试中写接口的重复执行问题。不知道老师在这方面有什么建议。","like_count":0},{"had_liked":false,"id":100547,"user_name":"辰九","can_delete":false,"product_type":"c1","uid":1187319,"ip_address":"","ucode":"37A551604B3991","user_header":"https://static001.geekbang.org/account/avatar/00/12/1d/f7/15257efb.jpg","comment_is_top":false,"comment_ctime":1559575245,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1559575245","product_id":100009601,"comment_content":"单元测试的有效性如何保证呢？覆盖率上去了是否真的说明代码质量就高了？","like_count":0},{"had_liked":false,"id":84458,"user_name":"Daisy","can_delete":false,"product_type":"c1","uid":1492213,"ip_address":"","ucode":"BB076E21C9EE22","user_header":"https://static001.geekbang.org/account/avatar/00/16/c4/f5/39f1ce38.jpg","comment_is_top":false,"comment_ctime":1554866506,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1554866506","product_id":100009601,"comment_content":"我遇到过这样的问题，我做单元测试是独立新建了一个测试工程，使用testng框架，无法使用mock，只能在开发代码的原工程写test才可以使用mock","like_count":0},{"had_liked":false,"id":77691,"user_name":"arctic","can_delete":false,"product_type":"c1","uid":1445425,"ip_address":"","ucode":"4262EDDB9C4F9B","user_header":"https://static001.geekbang.org/account/avatar/00/16/0e/31/d89a8bfe.jpg","comment_is_top":false,"comment_ctime":1552982125,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1552982125","product_id":100009601,"comment_content":"移动单元测试有什么框架？","like_count":0},{"had_liked":false,"id":71095,"user_name":"阎晓静","can_delete":false,"product_type":"c1","uid":1395937,"ip_address":"","ucode":"55DA133B3B5E4E","user_header":"https://static001.geekbang.org/account/avatar/00/15/4c/e1/814431e9.jpg","comment_is_top":false,"comment_ctime":1551264314,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1551264314","product_id":100009601,"comment_content":"单元测试成本确实挺大的","like_count":0},{"had_liked":false,"id":69131,"user_name":"yudi5158","can_delete":false,"product_type":"c1","uid":1433363,"ip_address":"","ucode":"9593AFF868463B","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/vVHHYQw1kesqK5euoZ52vibmmhWSXdvBqSwed7FfHUx7ULESOnwaq9iaPWPq0KQZpPaHSj6UcLebfUqXDBfGyPuA/132","comment_is_top":false,"comment_ctime":1550667261,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1550667261","product_id":100009601,"comment_content":"在我司中，有些团队是能做到tdd的，这对项目对单元测试的重视程度很有帮助。而且code review中，也会review测试代码","like_count":0},{"had_liked":false,"id":37013,"user_name":"好好猪","can_delete":false,"product_type":"c1","uid":1060349,"ip_address":"","ucode":"BE167A53C82958","user_header":"https://static001.geekbang.org/account/avatar/00/10/2d/fd/cf79cb77.jpg","comment_is_top":false,"comment_ctime":1541421422,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1541421422","product_id":100009601,"comment_content":"老师好，我想对webservice的服务做单元测试，该从哪里下手呢。。。以前都只是用main方法测的。。","like_count":0},{"had_liked":false,"id":34687,"user_name":"龙少","can_delete":false,"product_type":"c1","uid":1081784,"ip_address":"","ucode":"C652D953CBB5A4","user_header":"https://static001.geekbang.org/account/avatar/00/10/81/b8/b9663cc7.jpg","comment_is_top":false,"comment_ctime":1540259101,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1540259101","product_id":100009601,"comment_content":"老师，有开源的自动化测试和性能测试实战案例代码分享地址吗？如github平台地址","like_count":0},{"had_liked":false,"id":31557,"user_name":"Walter","can_delete":false,"product_type":"c1","uid":1261228,"ip_address":"","ucode":"E4C673D5F0CA59","user_header":"https://static001.geekbang.org/account/avatar/00/13/3e/ac/ac66ac8b.jpg","comment_is_top":false,"comment_ctime":1539228352,"is_pvip":false,"replies":[{"id":"11346","content":"PLC的单元测试用例的设计思想方法是类似的，但是具体实施起来的差别会比较大，PLC一般都有自己专用的ide环境，我不确定是否存在类似Xunit的工具。","user_name":"作者回复","user_name_real":"dhrbc","uid":"1002226","ctime":1539250079,"ip_address":"","comment_id":31557,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1539228352","product_id":100009601,"comment_content":"请问一下，现在如果要做plc这种单元级别的测试，该如何做呢？","like_count":0,"discussions":[{"author":{"id":1002226,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/4a/f2/6ea13762.jpg","nickname":"茹炳晟","note":"","ucode":"1361AE1931E2DD","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":426400,"discussion_content":"PLC的单元测试用例的设计思想方法是类似的，但是具体实施起来的差别会比较大，PLC一般都有自己专用的ide环境，我不确定是否存在类似Xunit的工具。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1539250079,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":30068,"user_name":"小老鼠","can_delete":false,"product_type":"c1","uid":1257460,"ip_address":"","ucode":"C663A0C863A515","user_header":"https://static001.geekbang.org/account/avatar/00/13/2f/f4/2dede51a.jpg","comment_is_top":false,"comment_ctime":1538643962,"is_pvip":false,"replies":[{"id":"11365","content":"严格来讲，单元测试基本都是属于白盒的范畴，而api本身更多属于灰盒的范畴。但是，我们其实并没有很大的必要去纠结到底是黑盒还是白盒，我们应该通过这样的分类来看到背后想要表达的测试思想。","user_name":"作者回复","user_name_real":"dhrbc","uid":"1002226","ctime":1539251602,"ip_address":"","comment_id":30068,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1538643962","product_id":100009601,"comment_content":"单元测试是否应该也分为黑盒与白盒测试两种。不考虑内部实现的API属于黑盒单元测试、考虑语句、分支、条件等程序内部覆盖率的测试属于白盒单元测试。","like_count":0,"discussions":[{"author":{"id":1002226,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/4a/f2/6ea13762.jpg","nickname":"茹炳晟","note":"","ucode":"1361AE1931E2DD","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":425842,"discussion_content":"严格来讲，单元测试基本都是属于白盒的范畴，而api本身更多属于灰盒的范畴。但是，我们其实并没有很大的必要去纠结到底是黑盒还是白盒，我们应该通过这样的分类来看到背后想要表达的测试思想。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1539251602,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":20670,"user_name":"xxl","can_delete":false,"product_type":"c1","uid":1211090,"ip_address":"","ucode":"7B09DE985E5B24","user_header":"https://static001.geekbang.org/account/avatar/00/12/7a/d2/26575723.jpg","comment_is_top":false,"comment_ctime":1534657881,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1534657881","product_id":100009601,"comment_content":"关于mock与stub从您文章举的例子上看感觉要达到的效果几乎是一样，我理解mock也是为了做多路径的覆盖测试。","like_count":0},{"had_liked":false,"id":16744,"user_name":"欧晓鸥","can_delete":false,"product_type":"c1","uid":1164942,"ip_address":"","ucode":"05B9D24849FF6C","user_header":"https://static001.geekbang.org/account/avatar/00/11/c6/8e/48287140.jpg","comment_is_top":false,"comment_ctime":1532148547,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1532148547","product_id":100009601,"comment_content":"有自动生成单元测试代码的工具推荐吗？之前测试接口由于用feign模式调用的，所以用单元测试测试的。单元测试工作量非常庞大，由开发人员做，覆盖率以及定式思维很难保证质量和效果；由测试人员做对测试人员要求比较高，工作量很大，需要有很多的权衡。","like_count":0},{"had_liked":false,"id":16128,"user_name":"中艳","can_delete":false,"product_type":"c1","uid":1176826,"ip_address":"","ucode":"5DF7CD19EC5117","user_header":"https://static001.geekbang.org/account/avatar/00/11/f4/fa/e539e901.jpg","comment_is_top":false,"comment_ctime":1531792440,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1531792440","product_id":100009601,"comment_content":"关于“”紧密耦合的代码难以隔离； 隔离后编译链接运行困难； 听的有点模糊，不是很懂，我虽然有开发经验，但是四五年没有碰代码了","like_count":0},{"had_liked":false,"id":15850,"user_name":"RAY_CCW😝😝😝","can_delete":false,"product_type":"c1","uid":1145067,"ip_address":"","ucode":"D9F5ACD762628A","user_header":"https://static001.geekbang.org/account/avatar/00/11/78/eb/c2fd27f6.jpg","comment_is_top":false,"comment_ctime":1531558557,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1531558557","product_id":100009601,"comment_content":"老师，后续的课程里面会有类似的单元测试的实战代码吗？希望找到一些更加具体的东西来支撑自己的微服务以tdd驱动","like_count":0},{"had_liked":false,"id":15733,"user_name":"weineel","can_delete":false,"product_type":"c1","uid":1049741,"ip_address":"","ucode":"6DC6EF4F256A53","user_header":"https://static001.geekbang.org/account/avatar/00/10/04/8d/005c2ff3.jpg","comment_is_top":false,"comment_ctime":1531442129,"is_pvip":true,"discussion_count":0,"race_medal":2,"score":"1531442129","product_id":100009601,"comment_content":"老师您好，mock不需要关注调用结果吗？","like_count":0},{"had_liked":false,"id":15374,"user_name":"深海","can_delete":false,"product_type":"c1","uid":1164039,"ip_address":"","ucode":"E1406E3076B072","user_header":"https://static001.geekbang.org/account/avatar/00/11/c3/07/0bb7bace.jpg","comment_is_top":false,"comment_ctime":1531147276,"is_pvip":false,"replies":[{"id":"5373","content":"这个话题有点大，通常第一步是根据你们的开发语言确定单元测试的框架，然后引入必要的mock框架。","user_name":"作者回复","user_name_real":"dhrbc","uid":"1002226","ctime":1531385112,"ip_address":"","comment_id":15374,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1531147276","product_id":100009601,"comment_content":"请问第一次单元测试如何开展呢？有没有比较具体的说明如何正确开展单元测试？","like_count":0,"discussions":[{"author":{"id":1002226,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/4a/f2/6ea13762.jpg","nickname":"茹炳晟","note":"","ucode":"1361AE1931E2DD","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":420357,"discussion_content":"这个话题有点大，通常第一步是根据你们的开发语言确定单元测试的框架，然后引入必要的mock框架。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1531385112,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":15267,"user_name":"lucky_ziyie","can_delete":false,"product_type":"c1","uid":1165750,"ip_address":"","ucode":"F2AE03B55F333C","user_header":"https://static001.geekbang.org/account/avatar/00/11/c9/b6/9d742b5a.jpg","comment_is_top":false,"comment_ctime":1531060876,"is_pvip":false,"replies":[{"id":"5383","content":"倒推的做法绝对是掩耳盗铃，绝对不可取","user_name":"作者回复","user_name_real":"dhrbc","uid":"1002226","ctime":1531385569,"ip_address":"","comment_id":15267,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1531060876","product_id":100009601,"comment_content":"所在单位有做嵌入式Ｃ单元测试，效果不是很理想，投入产出比一直不是太高，输入设计文档有代码倒推，测试被代码牵着走","like_count":0,"discussions":[{"author":{"id":1002226,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/4a/f2/6ea13762.jpg","nickname":"茹炳晟","note":"","ucode":"1361AE1931E2DD","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":420312,"discussion_content":"倒推的做法绝对是掩耳盗铃，绝对不可取","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1531385569,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2614189,"avatar":"https://static001.geekbang.org/account/avatar/00/27/e3/ad/d8342e69.jpg","nickname":"魏波","note":"","ucode":"621CC49578811D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":373193,"discussion_content":"嵌入式C用什么单元测试框架？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1620647840,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":15057,"user_name":"hold","can_delete":false,"product_type":"c1","uid":1087129,"ip_address":"","ucode":"4C0303D50B73EB","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/MqW7XCh9Mc651Ah7S6PLzelXeYbSaMVNzBtWwnFwBlicdicrXfc1ZrHGuaz7bqcLvhLU0hJzeFZjzTL0aQOgsRUg/132","comment_is_top":false,"comment_ctime":1530838924,"is_pvip":false,"replies":[{"id":"5132","content":"其实还是要取决于项目的性质，你可以先系统性的分析一下你们的项目是否适合单元测试，如果的确是适合的，你可以把你分析的依据，同时结合开展和不开展UT的各自优缺点都列出来，记住这个过程中还需要你客观的评估引入UT的effort，有了这些客观的分析结果，再去和开发经理和项目经理谈","user_name":"作者回复","user_name_real":"dhrbc","uid":"1002226","ctime":1531035925,"ip_address":"","comment_id":15057,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1530838924","product_id":100009601,"comment_content":"遇到的不可抗力就是开发经理不愿意花太多时间在单侧上，开发者也不重视单测，如何推进呢😄","like_count":0,"discussions":[{"author":{"id":1002226,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/4a/f2/6ea13762.jpg","nickname":"茹炳晟","note":"","ucode":"1361AE1931E2DD","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":420225,"discussion_content":"其实还是要取决于项目的性质，你可以先系统性的分析一下你们的项目是否适合单元测试，如果的确是适合的，你可以把你分析的依据，同时结合开展和不开展UT的各自优缺点都列出来，记住这个过程中还需要你客观的评估引入UT的effort，有了这些客观的分析结果，再去和开发经理和项目经理谈","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1531035925,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":14948,"user_name":"Leroy","can_delete":false,"product_type":"c1","uid":1164088,"ip_address":"","ucode":"AAB0D352BDC240","user_header":"https://static001.geekbang.org/account/avatar/00/11/c3/38/a2a5278f.jpg","comment_is_top":false,"comment_ctime":1530757027,"is_pvip":false,"replies":[{"id":"5023","content":"这是同一事务从不同角度去说，模块是由代码组成的，单元测试的用例设计针对的代码本身，但是代码是以函数，模块等方式来组织的。","user_name":"作者回复","user_name_real":"dhrbc","uid":"1002226","ctime":1530766176,"ip_address":"","comment_id":14948,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1530757027","product_id":100009601,"comment_content":"老师，你说单元测试的对象是代码，但是很多地方说是模块，这两者不是等价的吧","like_count":0,"discussions":[{"author":{"id":1002226,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/4a/f2/6ea13762.jpg","nickname":"茹炳晟","note":"","ucode":"1361AE1931E2DD","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":420191,"discussion_content":"这是同一事务从不同角度去说，模块是由代码组成的，单元测试的用例设计针对的代码本身，但是代码是以函数，模块等方式来组织的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1530766176,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":14850,"user_name":"Frank","can_delete":false,"product_type":"c1","uid":1165774,"ip_address":"","ucode":"3243CE90032DCE","user_header":"https://static001.geekbang.org/account/avatar/00/11/c9/ce/4be54346.jpg","comment_is_top":false,"comment_ctime":1530704240,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1530704240","product_id":100009601,"comment_content":"单测是不是花费较多的时间，对于创业团队非常敏捷的，会不会不太高效，是不是快速集成后接口测试做起来更好呢","like_count":0},{"had_liked":false,"id":14841,"user_name":"Anny","can_delete":false,"product_type":"c1","uid":1164216,"ip_address":"","ucode":"C974F2DBEF5D36","user_header":"https://static001.geekbang.org/account/avatar/00/11/c3/b8/be33e417.jpg","comment_is_top":false,"comment_ctime":1530691381,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1530691381","product_id":100009601,"comment_content":"有部分项目已做单元测试，我想知道如果去检查开发人员是否有做，是否全面、完整。","like_count":0},{"had_liked":false,"id":14820,"user_name":"云学","can_delete":false,"product_type":"c1","uid":1027233,"ip_address":"","ucode":"366AE90BA06356","user_header":"https://static001.geekbang.org/account/avatar/00/0f/ac/a1/43d83698.jpg","comment_is_top":false,"comment_ctime":1530678154,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1530678154","product_id":100009601,"comment_content":"作者能够讲到mock和stub的本质区别，看来编码功底也非常了得","like_count":0},{"had_liked":false,"id":14797,"user_name":"楚耳","can_delete":false,"product_type":"c1","uid":1068208,"ip_address":"","ucode":"7661633F3297C6","user_header":"https://static001.geekbang.org/account/avatar/00/10/4c/b0/f22017b0.jpg","comment_is_top":false,"comment_ctime":1530668575,"is_pvip":false,"replies":[{"id":"5000","content":"if（true==funB_returnValue）和 if(funB_returnValue)是等价的写法，同样if（false==funB_returnValue）和 if(！funB_returnValue)也是等价的写法，<br>这里之所以这么写是为了帮助初学者更好地理解逻辑，并且这里的代码都属于示例性质，都是伪代码，主要目的是通过这个来说明问题，帮助理解。","user_name":"作者回复","user_name_real":"dhrbc","uid":"1002226","ctime":1530672335,"ip_address":"","comment_id":14797,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1530668575","product_id":100009601,"comment_content":"老师上面有段代码写错了，funB_returnValue本身就是个布尔值了，干嘛还==去判断","like_count":0,"discussions":[{"author":{"id":1002226,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/4a/f2/6ea13762.jpg","nickname":"茹炳晟","note":"","ucode":"1361AE1931E2DD","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":420137,"discussion_content":"if（true==funB_returnValue）和 if(funB_returnValue)是等价的写法，同样if（false==funB_returnValue）和 if(！funB_returnValue)也是等价的写法，\n这里之所以这么写是为了帮助初学者更好地理解逻辑，并且这里的代码都属于示例性质，都是伪代码，主要目的是通过这个来说明问题，帮助理解。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1530672335,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":14770,"user_name":"红娟","can_delete":false,"product_type":"c1","uid":1164879,"ip_address":"","ucode":"F5988451FC91A6","user_header":"https://static001.geekbang.org/account/avatar/00/11/c6/4f/0c215abf.jpg","comment_is_top":false,"comment_ctime":1530661882,"is_pvip":false,"replies":[{"id":"5144","content":"其实我觉得嵌入式系统的ut还是比较有必要的，因为嵌入式系统在上层的测试往往很难控制下面的逻辑","user_name":"作者回复","user_name_real":"dhrbc","uid":"1002226","ctime":1531037391,"ip_address":"","comment_id":14770,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1530661882","product_id":100009601,"comment_content":"我所在的部门没有用单元测试，我们的产品大多是reuse以前的产品，无论是硬件还是软件。同时，又是嵌入式设备。推广使用单元测试的成本很好。","like_count":0,"discussions":[{"author":{"id":1002226,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/4a/f2/6ea13762.jpg","nickname":"茹炳晟","note":"","ucode":"1361AE1931E2DD","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":420128,"discussion_content":"其实我觉得嵌入式系统的ut还是比较有必要的，因为嵌入式系统在上层的测试往往很难控制下面的逻辑","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1531037391,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]}]}