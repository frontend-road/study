{"id":8957,"title":"第7讲 | 如何建立一个Windows窗体？","content":"<p>今天，我要跟你分享开发Windows游戏的第一步，建立窗体。</p>\n<p>上一节，我讲解Python和C++的编译器，以及它们各自对应的IDE该如何选择，并且测试了C/C++的运行，编译了一个Lua静态库。准备工作基本上算是完成了。</p>\n<p>如果你有一些编程功底，应该知道建立Windows的窗体所需的一些基础知识。如果你经验稍丰富一些，还应该知道Delphi、C++Builder、C#等等。这些工具都可以帮助你非常方便地做出一个空白窗体，但是这些窗体并没有游戏的绘图系统，所以它们只是“建立了一个标准窗体”而已。因此，虽然建立窗体是我们这一节的内容，但<strong>我们要探讨的是，在窗体背后，Windows系统做了什么。</strong></p>\n<h2>Windows窗体由哪些部分构成？</h2>\n<p>我们常规意义上的Windows窗体，由下列几个部分组成。</p>\n<ul>\n<li>\n<p><strong>标题栏</strong>：窗口上方的鼠标拖动条区域。标题栏的左边有控制菜单的图标，中间显示的是程序的标题。</p>\n</li>\n<li>\n<p><strong>菜单栏</strong>：位于标题栏的下面，包含很多菜单，涉及的程序所负责的功能不一样，菜单的内容也不一样。比如有些有文件菜单，有些就没有，有一些窗体甚至根本就没有菜单栏。</p>\n</li>\n<li>\n<p><strong>工具栏</strong>：位于菜单栏的下方，工具栏会以图形按钮的形式给出用户最常使用的一些命令。比如，新建、复制、粘贴、另存为等。</p>\n</li>\n<li>\n<p><strong>工作区域</strong>：窗体的中间区域。一般窗体的输入输出都在这里面进行，如果你接触过Windows窗体编程，就知道在这个工作区域能做很多的事情，比如子窗体显示、层叠，在工作区域的子窗体内进行文字编辑等等。你可以理解成，游戏的图形图像就在此处显示。</p>\n</li>\n<li>\n<p><strong>状态栏</strong>：位于窗体的底部，显示运行程序的当前状态。通过它，用户可以了解到程序运行的情况。比如的，如果我们开发出的窗体程序是个编辑器的话，我按了一下Insert键，那么状态栏就会显示Ins缩写；或者点击到哪个编辑区域，会在状态栏出现第几行第几列这样的标注。</p>\n</li>\n<li>\n<p><strong>滚动条</strong>：如果窗体中显示的内容过多，不管横向还是纵向，当前可见的部分不够显示时，窗体就会出现滚动条，分为水平滚动条与垂直滚动条两种。</p>\n</li>\n<li>\n<p><strong>窗体缩放按钮</strong>：窗体的缩放按钮在右上角，在窗体编程中属于System类目。这些缩放按钮依次为最小化、最大化和关闭按钮。</p>\n</li>\n</ul>\n<p>我们来看一张标准的Windows窗体截图，这个软件名是Notepad++。</p>\n<img style=\"margin: 0 auto\" src=\"https://static001.geekbang.org/resource/image/cc/af/cc1d248bd1c76405ad73792112c33faf.jpg?wh=735*700\">\n<p>这是MSDN上对于窗体结构的说明：</p>\n<pre><code>typedef struct tagWNDCLASSEX {\n  UINT      cbSize; //结构体大小，等于 sizeof(WNDCLASSEX)\n  UINT      style;  //窗体的风格\n  WNDPROC   lpfnWndProc; //窗体函数指针\n  int       cbClsExtra;  //附加在窗体类后的字节数，初始化是零\n  int       cbWndExtra;  //附加在窗体实例化的附加字节数。系统初始化是零，如果一个应用程序使用WNDCLASSEX注册一个通过在资源中使用CLASS指令建立的对话框时，必须把这个成员设成DLGWINDOWEXTRA。\n  HINSTANCE hInstance; //该对象的实例句柄\n  HICON     hIcon;     //该对象的图标句柄\n  HCURSOR   hCursor;   //该对象的光标句柄\n  HBRUSH    hbrBackground; //该对象的背景刷子\n  LPCTSTR   lpszMenuName;  //菜单指针\n  LPCTSTR   lpszClassName;  //类名指针\n  HICON     hIconSm;       //与窗体关联的小图标，如果这个值为NULL，那么就把hIcon转换为大小比较合适的小图标\n} WNDCLASSEX, *PWNDCLASSEX;\n</code></pre>\n<h2>使用C/C++编写Windows窗体</h2>\n<p>接下来，我将使用C/C++IDE来编写代码，完成一个默认窗体的开发，并让它运行起来。</p>\n<!-- [[[read_end]]] -->\n<pre><code>#include &lt;windows.h&gt;\nLRESULT CALLBACK WindowProcedure(HWND, UINT, WPARAM, LPARAM);\nchar szClassName[ ] = &quot;WindowsApp&quot;;\nint WINAPI WinMain(HINSTANCE hThisInstance, HINSTANCE hPrevInstance, LPSTR lpszArgument, int nFunsterStil)\n\n {\n    HWND hwnd;               /* 指向我们窗体的句柄 */\n    MSG messages;            /* 保存发往应用的消息 */\n    WNDCLASSEX wincl;        /* 前面详细介绍过的WNDCLASSEX结构的对象 */\n    wincl.hInstance = hThisInstance;\n    wincl.lpszClassName = szClassName;\n    wincl.lpfnWndProc = WindowProcedure;      \n    wincl.style = CS_DBLCLKS;                \n    wincl.cbSize = sizeof(WNDCLASSEX);\n</code></pre>\n<p>上述代码开始给WNDCLASSEX结构对象赋值。</p>\n<pre><code> /* 使用默认图标以及鼠标指针 */\n    wincl.hIcon = LoadIcon(NULL, IDI_APPLICATION);\n    wincl.hIconSm = LoadIcon(NULL, IDI_APPLICATION);\n    wincl.hCursor = LoadCursor(NULL, IDC_ARROW);\n    wincl.lpszMenuName = NULL; /* 没有菜单栏 */\n    wincl.cbClsExtra = 0;                      /* 没有多余的字节跟在窗体类的后面 */\n    wincl.cbWndExtra = 0;                      \n    wincl.hbrBackground = (HBRUSH) GetStockObject(LTGRAY_BRUSH);\n    if(!RegisterClassEx(&amp;wincl)) return 0;\n</code></pre>\n<p>代码在窗口过程调用函数的时候，将地址赋值给lpfnWndProc，然后呼叫RegisterClassEx(&amp;wincl)注册窗口类，系统就拥有了窗口过程函数的地址。如果注册失败，则返回0。</p>\n<pre><code> hwnd = CreateWindowEx( 0,            /* 扩展风格为0*/                               \n           szClassName,         /* 类名 */\n           &quot;Windows App&quot;,         /* 窗体抬头标题 */\n           WS_OVERLAPPEDWINDOW, /* 默认窗体 */\n           CW_USEDEFAULT,       /* 让操作系统决定窗体对应Windows的X位置在哪里 */\n           CW_USEDEFAULT,       /* 让操作系统决定窗体对应Windows的Y位置在哪里 */\n           544,                 /* 程序宽度 */\n           375,                 /* 程序高度 */\n           HWND_DESKTOP,        /* 父窗体的句柄，父窗体定义为Windows桌面，HWND_DESKTOP 是系统定义的最顶层的托管的窗体 */\n           NULL,                /* 没有菜单 */\n           hThisInstance,       /* 程序实例化句柄 */\n           NULL                 /* 指向窗体的创建数据为空 */\n           );\n    ShowWindow(hwnd, nFunsterStil);\n    /* 要显示窗体，使用的是ShowWindow函数 */\n    while(GetMessage(&amp;messages, NULL, 0, 0))\n    {      \n           TranslateMessage(&amp;messages);\n           DispatchMessage(&amp;messages);    \n    }\n    return messages.wParam;\n}\n</code></pre>\n<p>建立并显示窗体，在循环内将虚拟键消息转换为字符串消息，随后调度一个消息给窗体程序。</p>\n<pre><code>LRESULT CALLBACK WindowProcedure(HWND hwnd, UINT message, WPARAM wParam, LPARAM lParam)\n{\n    switch (message)                  /* 指向消息的句柄 */\n    {\n           case WM_DESTROY:\n           PostQuitMessage(0);        \n           break;\n           default:                   \n           return DefWindowProc(hwnd, message, wParam, lParam);\n                 \n    }\n    return 0;\n}\n</code></pre>\n<p>最后是消息处理。当窗体程序接收到某些操作的时候，比如键盘、鼠标等等，就会呼叫 DispatchMessage(&amp;messages)；函数将消息回调给系统，系统通过注册的窗口类得到函数指针并且通过函数指针调用函数对消息进行处理。</p>\n<p>还有一个经常用到的函数就是MoveWindow，就是移动已经建立的窗体。MoveWindow函数用来改变窗口的位置和尺寸，如果窗体本身就按照计算机的屏幕对齐左上角，对于窗体内的子窗体，就对齐父窗体的左上角。</p>\n<pre><code>BOOL MoveWindow( HWND hWnd,/* 窗体句柄 */\n         int x,  /* 窗体左上角起点x轴 */\n         int y,  /* 窗体左上角起点y轴 */\n         int nWidth, /* 窗体宽度 */\n         int nHeight, /* 窗体高度 */\n         BOOL bRepaint = TRUE /* 是否重新绘制，如果是true系统会发送WM_PAINT到窗体，然后呼叫UpdateWindow函数进行重新绘制，如果是false则不重新绘制*/\n        );\n</code></pre>\n<p>MoveWindow会给窗体发送WM_WINDOWPOSCHANGING，WM_WINDOWPOSCHANGED，WM_MOVE，WM_SIZE和WM_NCCALCSIZE消息。</p>\n<p>类似的功能还有SetWindowPos，SetWindowPos功能更强大，可以设置更多的参数。</p>\n<p>这是基本的使用C/C++绘制Windows窗体的流程，也是标准的Windows窗体的创建和显示。在后续的分享中，我也会使用GDI或者GDI+来绘制一些的内容。</p>\n<h2>使用Python编写Windows窗体</h2>\n<p>说完了C/C++系统编程编写的Windows窗体，接下来来看一下，如何使用Python来编写Windows窗体。</p>\n<p>Python的Windows窗体编程一般会使用默认的Tinker库。不过用别的窗体库也可一建立一个窗体，比如Python版本的QT库或者wxPython。</p>\n<p>现在来看一下，使用默认的Tinker来建立一个窗体。</p>\n<pre><code>import Tkinter\n\ndef my_window(w, h):\n  ws = root.winfo_screenwidth()\n  hs = root.winfo_screenheight()\n  x = (ws/2) - (w/2)\n  y = (hs/2) - (h/2)\n  root.geometry(&quot;%dx%d+%d+%d&quot; % (w, h, x, y))\n\nroot = Tkinter.Tk(className='python windows app')\nmy_window(100, 100)\nroot.mainloop()\n</code></pre>\n<p>运行的结果是这样的。</p>\n<img style=\"margin: 0 auto\" src=\"https://static001.geekbang.org/resource/image/65/b8/657a175b08898385f555f7613d1a55b8.jpg?wh=316*339\">\n<p>我们可以看到左上角有一个Tk的标识，这是Tinker的默认图标。目前，我们只是建立了一个Windows的窗体，并不能直接编写游戏。除此之外，我们还必须要知道这些建立窗体的具体的细节。</p>\n<p>不过，就像前面的文章所说，OpenGL并不附带任何关联窗体的编程，所以如果你使用的是OpenGL的接口来编写代码，稍微修改一下，这些窗体就能成为游戏屏幕窗体。</p>\n<p><strong><span class=\"orange\">游戏所有的内容都是在一个循环内完成的，即我们所有的绘图、线程、操作、刷新，都在一个大循环内完成</span></strong>，类似我们在前面看到的代码。</p>\n<pre><code>while(GetMessage(&amp;messages, NULL, 0, 0))\n  {\n      TranslateMessage(&amp;messages);\n      DispatchMessage(&amp;messages);\n  }\n</code></pre>\n<p>以及使用Python编写的代码的窗体中，也会看到一个循环函数：</p>\n<pre><code>root.mainloop()\n</code></pre>\n<p>在这个while循环中，消息的派发都在此完成。游戏也一样，我们所有游戏内的代码几乎都在循环内完成。你可以想象<strong>一个循环完成一个大的绘制过程，第二个循环刷新前一次绘制过程，最终类似电影一样，完成整个动画的绘制以及不间断的操作。</strong></p>\n<p>在建立Windows窗体的时候，程序会从入口函数WinMain开始运行，定义和初始化窗体类，然后将窗体类实例化，随后进行消息循环获取消息，然后将消息发送给消息处理函数，最后做出相应的操作。</p>\n<h2>小结</h2>\n<p>总结一下今天所说的内容，我们编写了一个标准的Windows窗体，在编写的过程中：</p>\n<ul>\n<li>\n<p>窗体的结构是在建立窗体之前就定义下来的；</p>\n</li>\n<li>\n<p>所有长时间运行的程序，包括游戏，包括Windows本身都是一个大循环。我们在这个循环里做我们想做的事情，直到循环结束；</p>\n</li>\n<li>\n<p>如果使用脚本语言的方式编写窗体，就不需要关心那么多的东西，只需要定义坐标、位置和窗体名称即可。</p>\n</li>\n</ul>\n<p>最后，给你留一道小思考题吧。</p>\n<p>你经常会看到有一些游戏是需要全屏才能进行的。既然我们在这里建立了一个窗体，那请问你，全屏是怎么做到的呢？</p>\n<p>欢迎留言说出你的看法，我在下一节的挑战中等你！</p>\n","neighbors":{"left":{"article_title":"第6讲 | 从0开始整理开发流程","id":8782},"right":{"article_title":"第8讲 | 如何区分图形和图像？","id":8951}},"comments":[{"had_liked":false,"id":12747,"user_name":"Geek_King@技术爱好者","can_delete":false,"product_type":"c1","uid":1139494,"ip_address":"","ucode":"FECF3CC0FDF35B","user_header":"https://static001.geekbang.org/account/avatar/00/11/63/26/3f35f1f3.jpg","comment_is_top":false,"comment_ctime":1528994832,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"40183700496","product_id":100007201,"comment_content":"c++窗口那段程序，编译时需加上-mwindows或者-lgdi32,又或者在建工程的时候选择建立gui程序🙄🙄🙄","like_count":10},{"had_liked":false,"id":17624,"user_name":"GS","can_delete":false,"product_type":"c1","uid":1042618,"ip_address":"","ucode":"21C73A8CBD8093","user_header":"https://static001.geekbang.org/account/avatar/00/0f/e8/ba/6d318c08.jpg","comment_is_top":false,"comment_ctime":1532790478,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"14417692366","product_id":100007201,"comment_content":"python3 要用小写的tkinter","like_count":4},{"had_liked":false,"id":12076,"user_name":"呵呵","can_delete":false,"product_type":"c1","uid":1052862,"ip_address":"","ucode":"986CC73CFBBC67","user_header":"","comment_is_top":false,"comment_ctime":1528551307,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"14413453195","product_id":100007201,"comment_content":"要是能提供远嘛就好了，跟着后面敲太麻烦","like_count":3},{"had_liked":false,"id":106489,"user_name":"清新灬小柠檬","can_delete":false,"product_type":"c1","uid":1113587,"ip_address":"","ucode":"F3004F2F385096","user_header":"https://static001.geekbang.org/account/avatar/00/10/fd/f3/77223a8c.jpg","comment_is_top":false,"comment_ctime":1561335512,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5856302808","product_id":100007201,"comment_content":"直接将显示器的大小当作参数传到绘制窗体的函数中？","like_count":1},{"had_liked":false,"id":12219,"user_name":"壬大师","can_delete":false,"product_type":"c1","uid":1068494,"ip_address":"","ucode":"69BB3B0A8F1968","user_header":"https://static001.geekbang.org/account/avatar/00/10/4d/ce/771c25b0.jpg","comment_is_top":false,"comment_ctime":1528697558,"is_pvip":false,"replies":[{"id":"4062","content":"目前没有成熟的python游戏引擎支持手机游戏开发。","user_name":"作者回复","user_name_real":"DarkSpy","uid":"1135118","ctime":1528797982,"ip_address":"","comment_id":12219,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5823664854","product_id":100007201,"comment_content":"老师，python能开发手机游戏吗，游戏引擎用的是pygame吗？","like_count":1,"discussions":[{"author":{"id":1135118,"avatar":"https://static001.geekbang.org/account/avatar/00/11/52/0e/2988158e.jpg","nickname":"DarkSpy","note":"","ucode":"F440F4BA28E92F","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":419164,"discussion_content":"目前没有成熟的python游戏引擎支持手机游戏开发。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1528797982,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":12009,"user_name":"白马","can_delete":false,"product_type":"c1","uid":1103540,"ip_address":"","ucode":"FD4DA715AC5984","user_header":"https://static001.geekbang.org/account/avatar/00/10/d6/b4/0808999d.jpg","comment_is_top":false,"comment_ctime":1528515076,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5823482372","product_id":100007201,"comment_content":"是调用windows api中获取当前屏幕窗口尺寸的方法获得吗？","like_count":1},{"had_liked":false,"id":11999,"user_name":"立春","can_delete":false,"product_type":"c1","uid":1004877,"ip_address":"","ucode":"F52E829EDE4519","user_header":"https://static001.geekbang.org/account/avatar/00/0f/55/4d/c57092e4.jpg","comment_is_top":false,"comment_ctime":1528508759,"is_pvip":false,"replies":[{"id":"3937","content":"<br>mfc 全称 microsoft foundation classes，微软基础库，建立窗体可以使用 mfc，也可以使用ATL等等，但基础代码还是windows api","user_name":"作者回复","user_name_real":"DarkSpy","uid":"1135118","ctime":1528510141,"ip_address":"","comment_id":11999,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5823476055","product_id":100007201,"comment_content":"C++用的是MFC了……","like_count":1,"discussions":[{"author":{"id":1135118,"avatar":"https://static001.geekbang.org/account/avatar/00/11/52/0e/2988158e.jpg","nickname":"DarkSpy","note":"","ucode":"F440F4BA28E92F","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":419076,"discussion_content":"\nmfc 全称 microsoft foundation classes，微软基础库，建立窗体可以使用 mfc，也可以使用ATL等等，但基础代码还是windows api","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1528510141,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":297948,"user_name":"Geek_569f22","can_delete":false,"product_type":"c1","uid":2620019,"ip_address":"","ucode":"E0A12103CCEC72","user_header":"","comment_is_top":false,"comment_ctime":1623851977,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1623851977","product_id":100007201,"comment_content":"windows那个照着输入，生成不了窗口，python那个可以","like_count":0},{"had_liked":false,"id":289216,"user_name":"Leolee","can_delete":false,"product_type":"c1","uid":1928428,"ip_address":"","ucode":"2EC31B0AE5B03D","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/8SdpYbicwXVXt0fIN7L0f2TSGIScQIhWXT7vTze9GHBsjTvDyyQW9KEPsKBpRNs4anV61oF59BZqHf586b3o4ibw/132","comment_is_top":false,"comment_ctime":1618920227,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1618920227","product_id":100007201,"comment_content":"python3导入模块要改小写，调用tk库的方法时也要改小写，就可以用了。一开始还担心要c++等一堆软件。","like_count":0},{"had_liked":false,"id":254922,"user_name":"louis","can_delete":false,"product_type":"c1","uid":2003486,"ip_address":"","ucode":"F9E499490849F9","user_header":"https://static001.geekbang.org/account/avatar/00/1e/92/1e/c108b65a.jpg","comment_is_top":false,"comment_ctime":1603213387,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1603213387","product_id":100007201,"comment_content":"把窗体的大小设置为屏幕大小，设置屏幕的起始位置设置为（0，0）吗？具体调用什么函数不清楚。","like_count":0},{"had_liked":false,"id":13943,"user_name":"宋桓公","can_delete":false,"product_type":"c1","uid":1151948,"ip_address":"","ucode":"04235C2B87AB0E","user_header":"https://static001.geekbang.org/account/avatar/00/11/93/cc/dfe92ee1.jpg","comment_is_top":false,"comment_ctime":1530077186,"is_pvip":false,"replies":[{"id":"4846","content":"这是一种方式，没错的","user_name":"作者回复","user_name_real":"DarkSpy","uid":"1135118","ctime":1530410387,"ip_address":"","comment_id":13943,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1530077186","product_id":100007201,"comment_content":"最大化，加无边框等于全屏","like_count":0,"discussions":[{"author":{"id":1135118,"avatar":"https://static001.geekbang.org/account/avatar/00/11/52/0e/2988158e.jpg","nickname":"DarkSpy","note":"","ucode":"F440F4BA28E92F","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":419815,"discussion_content":"这是一种方式，没错的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1530410387,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":12480,"user_name":"壬大师","can_delete":false,"product_type":"c1","uid":1068494,"ip_address":"","ucode":"69BB3B0A8F1968","user_header":"https://static001.geekbang.org/account/avatar/00/10/4d/ce/771c25b0.jpg","comment_is_top":false,"comment_ctime":1528854872,"is_pvip":false,"replies":[{"id":"4191","content":"不都是。原生开发，苹果会用obj c， 安卓java，或者也有封装后生成的，比如cocos系列的语言","user_name":"作者回复","user_name_real":"DarkSpy","uid":"1135118","ctime":1528954522,"ip_address":"","comment_id":12480,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1528854872","product_id":100007201,"comment_content":"老师，那手游的开发目前也都是C++咯？像简单游戏比如手机棋牌类游戏一般用什么语言？","like_count":0,"discussions":[{"author":{"id":1135118,"avatar":"https://static001.geekbang.org/account/avatar/00/11/52/0e/2988158e.jpg","nickname":"DarkSpy","note":"","ucode":"F440F4BA28E92F","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":419271,"discussion_content":"不都是。原生开发，苹果会用obj c， 安卓java，或者也有封装后生成的，比如cocos系列的语言","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1528954522,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":12047,"user_name":"@浩","can_delete":false,"product_type":"c1","uid":1141509,"ip_address":"","ucode":"3B2B0553B06A1B","user_header":"https://static001.geekbang.org/account/avatar/00/11/6b/05/582fd240.jpg","comment_is_top":false,"comment_ctime":1528535587,"is_pvip":false,"replies":[{"id":"3944","content":"我写的不是MFC","user_name":"作者回复","user_name_real":"DarkSpy","uid":"1135118","ctime":1528550680,"ip_address":"","comment_id":12047,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1528535587","product_id":100007201,"comment_content":"用QT写窗口如何，MFC有点晦涩难懂。","like_count":0,"discussions":[{"author":{"id":1135118,"avatar":"https://static001.geekbang.org/account/avatar/00/11/52/0e/2988158e.jpg","nickname":"DarkSpy","note":"","ucode":"F440F4BA28E92F","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":419094,"discussion_content":"我写的不是MFC","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1528550680,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":12000,"user_name":"风华神使","can_delete":false,"product_type":"c1","uid":1119845,"ip_address":"","ucode":"ECAAB52216820D","user_header":"https://static001.geekbang.org/account/avatar/00/11/16/65/c22b4415.jpg","comment_is_top":false,"comment_ctime":1528509059,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1528509059","product_id":100007201,"comment_content":"楼上，cxx默认不用图形库，用winapi","like_count":0},{"had_liked":false,"id":11986,"user_name":"呵呵","can_delete":false,"product_type":"c1","uid":1052862,"ip_address":"","ucode":"986CC73CFBBC67","user_header":"","comment_is_top":false,"comment_ctime":1528501831,"is_pvip":false,"replies":[{"id":"3936","content":"windows api","user_name":"作者回复","user_name_real":"DarkSpy","uid":"1135118","ctime":1528509948,"ip_address":"","comment_id":11986,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1528501831","product_id":100007201,"comment_content":"用c++建立窗体，默认用的什么图形库？","like_count":0,"discussions":[{"author":{"id":1135118,"avatar":"https://static001.geekbang.org/account/avatar/00/11/52/0e/2988158e.jpg","nickname":"DarkSpy","note":"","ucode":"F440F4BA28E92F","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":419071,"discussion_content":"windows api","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1528509948,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]}]}