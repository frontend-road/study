{"id":6845,"title":"第1讲 | 谈谈你对Java平台的理解？","content":"<p>从你接触Java开发到现在，你对Java最直观的印象是什么呢？是它宣传的 “Write once, run anywhere”，还是目前看已经有些过于形式主义的语法呢？你对于Java平台到底了解到什么程度？请你先停下来总结思考一下。</p>\n<p>今天我要问你的问题是，<span class=\"orange\">谈谈你对Java平台的理解？“Java是解释执行”，这句话正确吗？</span></p>\n<h2>典型回答</h2>\n<p>Java本身是一种面向对象的语言，最显著的特性有两个方面，一是所谓的“<strong>书写一次，到处运行</strong>”（Write once, run anywhere），能够非常容易地获得跨平台能力；另外就是<strong>垃圾收集</strong>（GC, Garbage Collection），Java通过垃圾收集器（Garbage Collector）回收分配内存，大部分情况下，程序员不需要自己操心内存的分配和回收。</p>\n<p>我们日常会接触到JRE（Java Runtime Environment）或者JDK（Java Development Kit）。 JRE，也就是Java运行环境，包含了JVM和Java类库，以及一些模块等。而JDK可以看作是JRE的一个超集，提供了更多工具，比如编译器、各种诊断工具等。</p>\n<p>对于“Java是解释执行”这句话，这个说法不太准确。我们开发的Java的源代码，首先通过Javac编译成为字节码（bytecode），然后，在运行时，通过 Java虚拟机（JVM）内嵌的解释器将字节码转换成为最终的机器码。但是常见的JVM，比如我们大多数情况使用的Oracle JDK提供的Hotspot JVM，都提供了JIT（Just-In-Time）编译器，也就是通常所说的动态编译器，JIT能够在运行时将热点代码编译成机器码，这种情况下部分热点代码就属于<strong>编译执行</strong>，而不是解释执行了。</p>\n<h2>考点分析</h2>\n<p>其实这个问题，问得有点笼统。题目本身是非常开放的，往往考察的是多个方面，比如，基础知识理解是否很清楚；是否掌握Java平台主要模块和运行原理等。很多面试者会在这种问题上吃亏，稍微紧张了一下，不知道从何说起，就给出个很简略的回答。</p>\n<p>对于这类笼统的问题，你需要尽量<strong>表现出自己的思维深入并系统化，Java知识理解得也比较全面</strong>，一定要避免让面试官觉得你是个“知其然不知其所以然”的人。毕竟明白基本组成和机制，是日常工作中进行问题诊断或者性能调优等很多事情的基础，相信没有招聘方会不喜欢“热爱学习和思考”的面试者。</p>\n<!-- [[[read_end]]] -->\n<p>即使感觉自己的回答不是非常完善，也不用担心。我个人觉得这种笼统的问题，有时候回答得稍微片面也很正常，大多数有经验的面试官，不会因为一道题就对面试者轻易地下结论。通常会尽量引导面试者，把他的真实水平展现出来，这种问题就是做个开场热身，面试官经常会根据你的回答扩展相关问题。</p>\n<h2>知识扩展</h2>\n<p>回归正题，对于Java平台的理解，可以从很多方面简明扼要地谈一下，例如：Java语言特性，包括泛型、Lambda等语言特性；基础类库，包括集合、IO/NIO、网络、并发、安全等基础类库。对于我们日常工作应用较多的类库，面试前可以系统化总结一下，有助于临场发挥。</p>\n<p>或者谈谈JVM的一些基础概念和机制，比如Java的类加载机制，常用版本JDK（如JDK 8）内嵌的Class-Loader，例如Bootstrap、 Application和Extension Class-loader；类加载大致过程：加载、验证、链接、初始化（这里参考了周志明的《深入理解Java虚拟机》，非常棒的JVM上手书籍）；自定义Class-Loader等。还有垃圾收集的基本原理，最常见的垃圾收集器，如SerialGC、Parallel GC、 CMS、 G1等，对于适用于什么样的工作负载最好也心里有数。这些都是可以扩展开的领域，我会在后面的专栏对此进行更系统的介绍。</p>\n<p>当然还有JDK包含哪些工具或者Java领域内其他工具等，如编译器、运行时环境、安全工具、诊断和监控工具等。这些基本工具是日常工作效率的保证，对于我们工作在其他语言平台上，同样有所帮助，很多都是触类旁通的。</p>\n<p>下图是我总结的一个相对宽泛的蓝图供你参考。</p>\n<p><img src=\"https://static001.geekbang.org/resource/image/20/32/20bc6a900fc0b829c2f0e723df050732.png?wh=1265*706\" alt=\"\" /></p>\n<p>不再扩展了，回到前面问到的解释执行和编译执行的问题。有些面试官喜欢在特定问题上“刨根问底儿”，因为这是进一步了解面试者对知识掌握程度的有效方法，我稍微深入探讨一下。</p>\n<p>众所周知，我们通常把Java分为编译期和运行时。这里说的Java的编译和C/C++是有着不同的意义的，Javac的编译，编译Java源码生成“.class”文件里面实际是字节码，而不是可以直接执行的机器码。Java通过字节码和Java虚拟机（JVM）这种跨平台的抽象，屏蔽了操作系统和硬件的细节，这也是实现“一次编译，到处执行”的基础。</p>\n<p>在运行时，JVM会通过类加载器（Class-Loader）加载字节码，解释或者编译执行。就像我前面提到的，主流Java版本中，如JDK 8实际是解释和编译混合的一种模式，即所谓的混合模式（-Xmixed）。通常运行在server模式的JVM，会进行上万次调用以收集足够的信息进行高效的编译，client模式这个门限是1500次。Oracle Hotspot JVM内置了两个不同的JIT compiler，C1对应前面说的client模式，适用于对于启动速度敏感的应用，比如普通Java桌面应用；C2对应server模式，它的优化是为长时间运行的服务器端应用设计的。默认是采用所谓的分层编译（TieredCompilation）。这里不再展开更多JIT的细节，没必要一下子就钻进去，我会在后面介绍分层编译的内容。</p>\n<p>Java虚拟机启动时，可以指定不同的参数对运行模式进行选择。 比如，指定“-Xint”，就是告诉JVM只进行解释执行，不对代码进行编译，这种模式抛弃了JIT可能带来的性能优势。毕竟解释器（interpreter）是逐条读入，逐条解释运行的。与其相对应的，还有一个“-Xcomp”参数，这是告诉JVM关闭解释器，不要进行解释执行，或者叫作最大优化级别。那你可能会问这种模式是不是最高效啊？简单说，还真未必。“-Xcomp”会导致JVM启动变慢非常多，同时有些JIT编译器优化方式，比如分支预测，如果不进行profiling，往往并不能进行有效优化。</p>\n<p>除了我们日常最常见的Java使用模式，其实还有一种新的编译方式，即所谓的AOT（Ahead-of-Time Compilation），直接将字节码编译成机器代码，这样就避免了JIT预热等各方面的开销，比如Oracle JDK 9就引入了实验性的AOT特性，并且增加了新的jaotc工具。利用下面的命令把某个类或者某个模块编译成为AOT库。</p>\n<pre><code>jaotc --output libHelloWorld.so HelloWorld.class\njaotc --output libjava.base.so --module java.base\n</code></pre>\n<p>然后，在启动时直接指定就可以了。</p>\n<pre><code>java -XX:AOTLibrary=./libHelloWorld.so,./libjava.base.so HelloWorld\n</code></pre>\n<p>而且，Oracle JDK支持分层编译和AOT协作使用，这两者并不是二选一的关系。如果你有兴趣，可以参考相关文档：<a href=\"http://openjdk.java.net/jeps/295\">http://openjdk.java.net/jeps/295</a>。AOT也不仅仅是只有这一种方式，业界早就有第三方工具（如GCJ、Excelsior JET）提供相关功能。</p>\n<p>另外，JVM作为一个强大的平台，不仅仅只有Java语言可以运行在JVM上，本质上合规的字节码都可以运行，Java语言自身也为此提供了便利，我们可以看到类似Clojure、Scala、Groovy、JRuby、Jython等大量JVM语言，活跃在不同的场景。</p>\n<p>今天，我简单介绍了一下Java平台相关的一些内容，目的是提纲挈领地构建一个整体的印象，包括Java语言特性、 核心类库与常用第三方类库、Java虚拟机基本原理和相关工具，希望对你有所帮助。</p>\n<h2>一课一练</h2>\n<p>关于今天我们讨论的题目你做到心中有数了吗？知道不如做到，请你也在留言区写写自己对Java平台的理解。我会选出经过认真思考的留言，送给你一份学习鼓励金，欢迎你与我一起讨论。</p>\n<p>你的朋友是不是也在准备面试呢？你可以“请朋友读”，把今天的题目分享给好友，或许你能帮到他。</p>\n<p></p>\n","neighbors":{"left":{"article_title":"开篇词 | 以面试题为切入点，有效提升你的Java内功","id":6478},"right":{"article_title":"第2讲 | Exception和Error有什么区别？","id":6849}},"comments":[{"had_liked":false,"id":7414,"user_name":"Woj","can_delete":false,"product_type":"c1","uid":1060706,"ip_address":"","ucode":"4EDEB7254D5770","user_header":"https://static001.geekbang.org/account/avatar/00/10/2f/62/cd9958ee.jpg","comment_is_top":false,"comment_ctime":1525476801,"is_pvip":false,"replies":[{"id":"2134","content":"高手","user_name":"作者回复","comment_id":7414,"uid":"1009360","ip_address":"","utype":1,"ctime":1525487460,"user_name_real":"杨晓峰"}],"discussion_count":18,"race_medal":0,"score":"4438226693569","product_id":100006701,"comment_content":"        “一次编译、到处运行”说的是Java语言跨平台的特性，Java的跨平台特性与Java虚拟机的存在密不可分，可在不同的环境中运行。比如说Windows平台和Linux平台都有相应的JDK，安装好JDK后也就有了Java语言的运行环境。其实Java语言本身与其他的编程语言没有特别大的差异，并不是说Java语言可以跨平台，而是在不同的平台都有可以让Java语言运行的环境而已，所以才有了Java一次编译，到处运行这样的效果。<br>        严格的讲，跨平台的语言不止Java一种，但Java是较为成熟的一种。“一次编译，到处运行”这种效果跟编译器有关。编程语言的处理需要编译器和解释器。Java虚拟机和DOS类似，相当于一个供程序运行的平台。<br>        程序从源代码到运行的三个阶段：编码——编译——运行——调试。Java在编译阶段则体现了跨平台的特点。编译过程大概是这样的：首先是将Java源代码转化成.CLASS文件字节码，这是第一次编译。.class文件就是可以到处运行的文件。然后Java字节码会被转化为目标机器代码，这是是由JVM来执行的，即Java的第二次编译。<br>        “到处运行”的关键和前提就是JVM。因为在第二次编译中JVM起着关键作用。在可以运行Java虚拟机的地方都内含着一个JVM操作系统。从而使JAVA提供了各种不同平台上的虚拟机制，因此实现了“到处运行”的效果。需要强调的一点是，java并不是编译机制，而是解释机制。Java字节码的设计充分考虑了JIT这一即时编译方式，可以将字节码直接转化成高性能的本地机器码，这同样是虚拟机的一个构成部分。","like_count":1034,"discussions":[{"author":{"id":1009360,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/66/d0/6541f1d5.jpg","nickname":"杨晓峰","note":"","ucode":"2BF255467A978F","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":417334,"discussion_content":"高手","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1525487460,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1756181,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/cc/15/35622b02.jpg","nickname":"Jason","note":"","ucode":"B2765DD1D90B0C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":71038,"discussion_content":"老师，你从讲台上下来，让这位同学讲，讲的更好感觉。","likes_number":10,"is_delete":false,"is_hidden":false,"ctime":1575385523,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":3,"child_discussions":[{"author":{"id":1186089,"avatar":"https://static001.geekbang.org/account/avatar/00/12/19/29/4a8214b7.jpg","nickname":"Bug Killer","note":"","ucode":"2741A206F504E1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1756181,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/cc/15/35622b02.jpg","nickname":"Jason","note":"","ucode":"B2765DD1D90B0C","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":79243,"discussion_content":"说什么大实话","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1576070173,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":71038,"ip_address":""},"score":79243,"extra":""},{"author":{"id":1144504,"avatar":"https://static001.geekbang.org/account/avatar/00/11/76/b8/e4cd7997.jpg","nickname":"KAGEMUSHA","note":"","ucode":"DFC05BE62A9C10","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1186089,"avatar":"https://static001.geekbang.org/account/avatar/00/12/19/29/4a8214b7.jpg","nickname":"Bug Killer","note":"","ucode":"2741A206F504E1","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":286188,"discussion_content":"？？？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1593081965,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":79243,"ip_address":""},"score":286188,"extra":""},{"author":{"id":1144504,"avatar":"https://static001.geekbang.org/account/avatar/00/11/76/b8/e4cd7997.jpg","nickname":"KAGEMUSHA","note":"","ucode":"DFC05BE62A9C10","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1756181,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/cc/15/35622b02.jpg","nickname":"Jason","note":"","ucode":"B2765DD1D90B0C","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":286189,"discussion_content":"扯淡","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1593081976,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":71038,"ip_address":""},"score":286189,"extra":""}]},{"author":{"id":1033332,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/c4/74/9af1040a.jpg","nickname":"维尼","note":"","ucode":"D549DA783AFDF4","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":293454,"discussion_content":"“Java 语言的运行环境”——难道不是 JRE 吗？","likes_number":5,"is_delete":false,"is_hidden":false,"ctime":1595550353,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1018972,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/8c/5c/3f164f66.jpg","nickname":"亚林","note":"","ucode":"4A5A6D24314B79","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":275988,"discussion_content":"这就是传说中容器化思想的起源地吧","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1590799870,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1583833,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/E3XKbwTv6WTssolgqZjZCkiazHgl2IdBYfwVfAcB7Ff3krsIQeBIBFQLQE1Kw91LFbl3lic2EzgdfNiciaYDlJlELA/132","nickname":"rike","note":"","ucode":"920AAD0BD9245C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":136402,"discussion_content":"按照这么说的话，第一次编译JVM没有参与，只是javac干活了？如果是JVM参与的话，是不是就是程序运行时，其它时候不参与？","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1579140665,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2029976,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/f9/98/53740221.jpg","nickname":"齐大柱","note":"","ucode":"694BBCA988C1DE","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":563442,"discussion_content":"个人观点，Java在编译阶段实现了跨平台的特性，而在编写源代码阶段体现了这种特性。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1649995112,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2768414,"avatar":"https://static001.geekbang.org/account/avatar/00/2a/3e/1e/89b3b474.jpg","nickname":"诗如_K","note":"","ucode":"69491F2478FDAF","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":533201,"discussion_content":"mark","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1637813617,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"user_type\":1}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2186186,"avatar":"https://static001.geekbang.org/account/avatar/00/21/5b/ca/ab21de1d.jpg","nickname":"我还是我","note":"","ucode":"BDD0DC10003E71","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":306490,"discussion_content":"透彻。受教了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1600301779,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1144504,"avatar":"https://static001.geekbang.org/account/avatar/00/11/76/b8/e4cd7997.jpg","nickname":"KAGEMUSHA","note":"","ucode":"DFC05BE62A9C10","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":286187,"discussion_content":"“并不是说Java语言可以跨平台。。。。。，跨平台的语言不止Java一种，。。。。”你这不就是咬文嚼字前后矛盾么","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1593081954,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":3,"child_discussions":[{"author":{"id":1008934,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epNf0fsnmHbF3osusoHIP3OtOgwKNL333N6oasPpA1DE7DdLeoM3ibulyxmNeXYpFSWCEiaAfzj1CFA/132","nickname":"kk","note":"","ucode":"FBC605C5E4EF07","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1144504,"avatar":"https://static001.geekbang.org/account/avatar/00/11/76/b8/e4cd7997.jpg","nickname":"KAGEMUSHA","note":"","ucode":"DFC05BE62A9C10","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":299588,"discussion_content":"人家想表达的意思是并不是语言支持跨平台，而是java编译器+可以将编译后的字节码文件在不同操作系统翻译为机器码执行的jvm使它具备跨平台特性","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1597741729,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":286187,"ip_address":""},"score":299588,"extra":""},{"author":{"id":1144504,"avatar":"https://static001.geekbang.org/account/avatar/00/11/76/b8/e4cd7997.jpg","nickname":"KAGEMUSHA","note":"","ucode":"DFC05BE62A9C10","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1008934,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epNf0fsnmHbF3osusoHIP3OtOgwKNL333N6oasPpA1DE7DdLeoM3ibulyxmNeXYpFSWCEiaAfzj1CFA/132","nickname":"kk","note":"","ucode":"FBC605C5E4EF07","race_medal":0,"user_type":1,"is_pvip":true},"discussion":{"id":303242,"discussion_content":"具备跨平台的特性的结果不就是该语音可以跨平台，这不是杠精么","likes_number":4,"is_delete":false,"is_hidden":false,"ctime":1599199627,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":299588,"ip_address":""},"score":303242,"extra":""},{"author":{"id":1226693,"avatar":"https://static001.geekbang.org/account/avatar/00/12/b7/c5/1714e947.jpg","nickname":"SKYNET","note":"","ucode":"6770E049684420","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1144504,"avatar":"https://static001.geekbang.org/account/avatar/00/11/76/b8/e4cd7997.jpg","nickname":"KAGEMUSHA","note":"","ucode":"DFC05BE62A9C10","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":309249,"discussion_content":"其实是解释了Java语言跨平台的细节实现而已","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1601224222,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":303242,"ip_address":""},"score":309249,"extra":""}]},{"author":{"id":1917203,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/lJHvjE7LM8wJX6SEHMjibEPzGCWthzKFhEHbGogG3X32Tq4bvSGALfhrReWWQjqx4ibWSwiaJ0vcAkibj8TNLZRzew/132","nickname":"深渊","note":"","ucode":"51F82ECC0B5321","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":219289,"discussion_content":"厉害","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585750033,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1428489,"avatar":"https://static001.geekbang.org/account/avatar/00/15/cc/09/39ce758a.jpg","nickname":"乖，摸摸头","note":"","ucode":"246C51262E7823","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":69156,"discussion_content":"好","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1575266026,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":2130567,"avatar":"https://static001.geekbang.org/account/avatar/00/20/82/87/8c294394.jpg","nickname":"Bye","note":"","ucode":"897A1D1D8A7D51","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1428489,"avatar":"https://static001.geekbang.org/account/avatar/00/15/cc/09/39ce758a.jpg","nickname":"乖，摸摸头","note":"","ucode":"246C51262E7823","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":299552,"discussion_content":"好！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1597734797,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":69156,"ip_address":""},"score":299552,"extra":""}]}]},{"had_liked":false,"id":7513,"user_name":"magict4","can_delete":false,"product_type":"c1","uid":1043789,"ip_address":"","ucode":"CB6F063D881AAC","user_header":"https://static001.geekbang.org/account/avatar/00/0f/ed/4d/1d1a1a00.jpg","comment_is_top":false,"comment_ctime":1525503861,"is_pvip":false,"replies":[{"id":"2166","content":"汗颜，是我记错了，非常感谢指正","user_name":"作者回复","comment_id":7513,"uid":"1009360","ip_address":"","utype":1,"ctime":1525526081,"user_name_real":"杨晓峰"}],"discussion_count":14,"race_medal":0,"score":"2488311568245","product_id":100006701,"comment_content":"我对『Compile once, run anywhere』这个宣传语提出的历史背景非常感兴趣。这个宣传语似乎在暗示 C 语言有一个缺点：对于每一个不同的平台，源代码都要被编译一次。我不解的地方是，为什么这会是一个问题？不同的平台，可执行的机器码必然是不一样的。源代码自然需要依据不同的平台分别被编译。 我觉得真正问题不在编译这一块，而是在 C 语言源文件这一块。我没有 C 语言的编程经验，但是似乎 C 语言程序经常需要调用操作系统层面的 API。不同的操作系统，API 一般不同。为了支持多平台，C 语言程序的源文件需要根据不同平台修改多次。这应该是一个非常大的痛点。我回头查了一下当时的宣传语，原文是『Write once, run anywhere』，焦点似乎并不在编译上，而是在对源文件的修改上。<br><br>以上是自己一点不成熟的想法，还请大家指正！","like_count":580,"discussions":[{"author":{"id":1110662,"avatar":"https://static001.geekbang.org/account/avatar/00/10/f2/86/d689f77e.jpg","nickname":"Hank_Yan","note":"","ucode":"86899B561C502B","race_medal":3,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":282824,"discussion_content":"优秀，我就在想，如果我，会怎么回答，这个答案很好。不同操作系统，底层api不一样，所以c写出来的代码不一样，但是用java写出来的都一样，虚拟机屏蔽了底层细节。","likes_number":20,"is_delete":false,"is_hidden":false,"ctime":1592100337,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2066217,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/87/29/33c9fcd3.jpg","nickname":"後雨","note":"","ucode":"6BFC5C2B61D758","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":348957,"discussion_content":"说的不错，是不同操作系统的系统调用封装函数不同导致的","likes_number":4,"is_delete":false,"is_hidden":false,"ctime":1612796154,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2029976,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/f9/98/53740221.jpg","nickname":"齐大柱","note":"","ucode":"694BBCA988C1DE","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":279075,"discussion_content":"谢谢，看了评论，对c语言的理解更加深刻了","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1591281075,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1009360,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/66/d0/6541f1d5.jpg","nickname":"杨晓峰","note":"","ucode":"2BF255467A978F","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":417379,"discussion_content":"汗颜，是我记错了，非常感谢指正","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1525526081,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2712589,"avatar":"https://static001.geekbang.org/account/avatar/00/29/64/0d/13a0d933.jpg","nickname":"Geek_93ebde","note":"","ucode":"EFDA0389B1422C","race_medal":5,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":578582,"discussion_content":"感觉评论区的大佬很多。对我这个初级程序员来说太有帮助了。感谢大家","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1656906971,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1114448,"avatar":"https://static001.geekbang.org/account/avatar/00/11/01/50/9ac4905e.jpg","nickname":"Kfreer","note":"","ucode":"0B6BA0603963C3","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":539722,"discussion_content":"秀儿，太正确了！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1639812600,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2248229,"avatar":"","nickname":"Geek_d491ce","note":"","ucode":"58BB567FF290CE","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":359201,"discussion_content":"学习了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1616137088,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2313287,"avatar":"https://static001.geekbang.org/account/avatar/00/23/4c/47/b493abdb.jpg","nickname":"光","note":"","ucode":"3E86F1EF74C5AD","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":324898,"discussion_content":"漂亮","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1605187880,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1170493,"avatar":"https://static001.geekbang.org/account/avatar/00/11/dc/3d/cd2c75f2.jpg","nickname":"博","note":"","ucode":"787E90E1A6CFE1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":308091,"discussion_content":"开悟","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1600844346,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1114448,"avatar":"https://static001.geekbang.org/account/avatar/00/11/01/50/9ac4905e.jpg","nickname":"Kfreer","note":"","ucode":"0B6BA0603963C3","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":280723,"discussion_content":"优秀，醍醐灌顶","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1591606603,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1750628,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJUaOs097vUd4wh5GCqnPkHM6oR2TMIOI0xQEooL2EH6DpzdjsQbyRhsJuD0AyG3QkFcWq5icZlgmA/132","nickname":"rl58xz","note":"","ucode":"3409114D447098","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":266384,"discussion_content":"代码的大致历程大致如此，随着计算能力的提升，程序员需要进行偷懒。java相对于c/c++大抵和React相对于android/iOS/web，都是为了提升开发效率。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1589507489,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1186089,"avatar":"https://static001.geekbang.org/account/avatar/00/12/19/29/4a8214b7.jpg","nickname":"Bug Killer","note":"","ucode":"2741A206F504E1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":79248,"discussion_content":"太优秀了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1576070341,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1622109,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83erPMtAfnQdpx1yOZQ2ic7icqUs3tvibEjUXQMUXKiaakyuIho6k6vmdl46nrdWjXIjPIRg9Pmco00tR5w/132","nickname":"小氘","note":"","ucode":"DA55B9A02D9EE0","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":7173,"discussion_content":"解答了我的困惑","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567414854,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1040549,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/e0/a5/da168c0d.jpg","nickname":"VHJM","note":"","ucode":"B8319C44989612","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":4710,"discussion_content":"优秀","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1565681759,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":7483,"user_name":"三军","can_delete":false,"product_type":"c1","uid":1115689,"ip_address":"","ucode":"C1BCA262D7DE6C","user_header":"https://static001.geekbang.org/account/avatar/00/11/06/29/bf619df8.jpg","comment_is_top":false,"comment_ctime":1525491709,"is_pvip":false,"replies":[{"id":"2139","content":"精辟","user_name":"作者回复","comment_id":7483,"uid":"1009360","ip_address":"","utype":1,"ctime":1525499570,"user_name_real":"杨晓峰"}],"discussion_count":4,"race_medal":0,"score":"1908490971133","product_id":100006701,"comment_content":"Java特性:<br>面向对象（封装，继承，多态）<br>平台无关性（JVM运行.class文件）<br>语言（泛型，Lambda）<br>类库（集合，并发，网络，IO&#47;NIO）<br>JRE（Java运行环境，JVM，类库）<br>JDK（Java开发工具，包括JRE，javac，诊断工具）<br><br>Java是解析运行吗？<br>不正确！<br>1，Java源代码经过Javac编译成.class文件<br>2，.class文件经JVM解析或编译运行。<br>（1）解析:.class文件经过JVM内嵌的解析器解析执行。<br>（2）编译:存在JIT编译器（Just In Time Compile 即时编译器）把经常运行的代码作为&quot;热点代码&quot;编译与本地平台相关的机器码，并进行各种层次的优化。<br>（3）AOT编译器: Java 9提供的直接将所有代码编译成机器码执行。","like_count":444,"discussions":[{"author":{"id":1009360,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/66/d0/6541f1d5.jpg","nickname":"杨晓峰","note":"","ucode":"2BF255467A978F","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":417362,"discussion_content":"精辟","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1525499570,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1885818,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIKkiabVqaAWsCXll4GcicsGVtibcjggFPeRAJ2xicCzvhU4gEM2As9TXcDmibibunS6lxKUEs7d3KTdH8Q/132","nickname":"深蓝","note":"","ucode":"A05C0328667726","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":352128,"discussion_content":"作者原文是“直接将字节码编译成机器代码”，到这就变成了“直接将所有代码”。。。。","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1614605464,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1599642,"avatar":"https://static001.geekbang.org/account/avatar/00/18/68/9a/dad26417.jpg","nickname":"Geek_Asker","note":"","ucode":"417720565315E7","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":581249,"discussion_content":"课代表","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1658664167,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1534892,"avatar":"https://static001.geekbang.org/account/avatar/00/17/6b/ac/514dd75b.jpg","nickname":"java劝退师首席大弟子","note":"","ucode":"3FEDCCE50FC184","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":350821,"discussion_content":"班长","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1614039879,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":13681,"user_name":"虾丸派","can_delete":false,"product_type":"c1","uid":1058702,"ip_address":"","ucode":"4A008082CCCC74","user_header":"https://static001.geekbang.org/account/avatar/00/10/27/8e/da78ea95.jpg","comment_is_top":false,"comment_ctime":1529927363,"is_pvip":false,"discussion_count":4,"race_medal":0,"score":"1865545733827","product_id":100006701,"comment_content":"内容看了十分钟，评论看了半小时。","like_count":434,"discussions":[{"author":{"id":2343996,"avatar":"https://static001.geekbang.org/account/avatar/00/23/c4/3c/79cfaa47.jpg","nickname":"aurora","note":"","ucode":"AD6B96A6F0DE32","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":330315,"discussion_content":"但是正是因为老师讲得好，大家讨论的兴趣被点燃起来了，翻每篇课都在像翻宝藏","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1606564688,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1962416,"avatar":"https://static001.geekbang.org/account/avatar/00/1d/f1/b0/d1b545ab.jpg","nickname":"きぃ","note":"","ucode":"770B4CF5E83934","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":381493,"discussion_content":"我也是","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1625103423,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2445109,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/eqhTVsXo1lTsRfPCmHriabsibw2HQIny7qP2zRhfU46aicibzXzP1Dt8X6icSyZSPCTtIQIfrdBwqPwVKLsH2X8pN1w/132","nickname":"Geek_493455","note":"","ucode":"EA800B8154E616","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":559160,"discussion_content":"说出了我的心声","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1648630671,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2343996,"avatar":"https://static001.geekbang.org/account/avatar/00/23/c4/3c/79cfaa47.jpg","nickname":"aurora","note":"","ucode":"AD6B96A6F0DE32","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":330314,"discussion_content":"精辟","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1606564594,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":7586,"user_name":"Jerry银银","can_delete":false,"product_type":"c1","uid":1008404,"ip_address":"","ucode":"80DA1172A2360A","user_header":"https://static001.geekbang.org/account/avatar/00/0f/63/14/06eff9a4.jpg","comment_is_top":false,"comment_ctime":1525568035,"is_pvip":false,"replies":[{"id":"2192","content":"👍","user_name":"作者回复","comment_id":7586,"uid":"1009360","ip_address":"","utype":1,"ctime":1525572493,"user_name_real":"杨晓峰"}],"discussion_count":11,"race_medal":0,"score":"1083857326627","product_id":100006701,"comment_content":"关注了好久，终于期盼到了第一讲。<br><br>在看到这个题目时，我并没有立马点进来看原文，而是给了自己一些时间进行思考。<br><br>首先，个人觉得这个题目非常的抽象和笼统，这个问题没有标准答案，但是有『好』答案，而答案的好坏，完全取决于面试者自身的技术素养和对Java系统性的了解。我的理解如下：<br><br>宏观角度：<br>跟c&#47;c++最大的不同点在于，c&#47;c++编程是面向操作系统的，需要开发者极大地关心不同操作系统之间的差异性；而Java平台通过虚拟机屏蔽了操作系统的底层细节，使得开发者无需过多地关心不同操作系统之间的差异性。<br>通过增加一个间接的中间层来进行”解耦“是计算机领域非常常用的一种”艺术手法“，虚拟机是这样，操作系统是这样，HTTP也是这样。<br><br>Java平台已经形成了一个生态系统，在这个生态系统中，有着诸多的研究领域和应用领域：<br>1. 虚拟机、编译技术的研究(例如：GC优化、JIT、AOT等)：对效率的追求是人类的另一个天性之一<br>2. Java语言本身的优化<br>3. 大数据处理<br>4. Java并发编程<br>5. 客户端开发（例如：Android平台）<br>6. ......<br><br><br>微观角度：<br>Java平台中有两大核心：<br>1. Java语言本身、JDK中所提供的核心类库和相关工具<br>2. Java虚拟机以及其他包含的GC<br><br>1. Java语言本身、JDK中所提供的核心类库和相关工具<br>从事Java平台的开发，掌握Java语言、核心类库以及相关工具是必须的，我觉得这是基础中的基础。<br>&gt;&gt; 对语言本身的了解，需要开发者非常熟悉语言的语法结构；而Java又是一种面对对象的语言，这又需要开发者深入了解面对对象的设计理念；<br>&gt;&gt; Java核心类库包含集合类、线程相关类、IO、NIO、J.U.C并发包等；\t<br>&gt;&gt; JDK提供的工具包含：基本的编译工具、虚拟机性能检测相关工具等。<br><br>2. Java虚拟机<br>Java语言具有跨平台的特性，也正是因为虚拟机的存在。Java源文件被编译成字节码，被虚拟机加载后执行。这里隐含的意思有两层：<br>1）大部分情况下，编程者只需要关心Java语言本身，而无需特意关心底层细节。包括对内存的分配和回收，也全权交给了GC。<br>2）对于虚拟机而言，只要是符合规范的字节码，它们都能被加载执行，当然，能正常运行的程序光满足这点是不行的，程序本身需要保证在运行时不出现异常。所以，Scala、Kotlin、Jython等语言也可以跑在虚拟机上。<br><br>围绕虚拟机的效率问题展开，将涉及到一些优化技术，例如：JIT、AOT。因为如果虚拟机加载字节码后，完全进行解释执行，这势必会影响执行效率。所以，对于这个运行环节，虚拟机会进行一些优化处理，例如JIT技术，会将某些运行特别频繁的代码编译成机器码。而AOT技术，是在运行前，通过工具直接将字节码转换为机器码。","like_count":253,"discussions":[{"author":{"id":1009360,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/66/d0/6541f1d5.jpg","nickname":"杨晓峰","note":"","ucode":"2BF255467A978F","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":417415,"discussion_content":"👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1525572493,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1428489,"avatar":"https://static001.geekbang.org/account/avatar/00/15/cc/09/39ce758a.jpg","nickname":"乖，摸摸头","note":"","ucode":"246C51262E7823","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":69154,"discussion_content":"好","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1575266016,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":2130567,"avatar":"https://static001.geekbang.org/account/avatar/00/20/82/87/8c294394.jpg","nickname":"Bye","note":"","ucode":"897A1D1D8A7D51","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1428489,"avatar":"https://static001.geekbang.org/account/avatar/00/15/cc/09/39ce758a.jpg","nickname":"乖，摸摸头","note":"","ucode":"246C51262E7823","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":299551,"discussion_content":"好！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1597734767,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":69154,"ip_address":""},"score":299551,"extra":""}]},{"author":{"id":1541386,"avatar":"https://static001.geekbang.org/account/avatar/00/17/85/0a/e564e572.jpg","nickname":"N_H","note":"","ucode":"109B67557AB3CE","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":285,"discussion_content":"aot应该是将java源码转换成机器码吧？不是将字节码转换成机器码。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1561429613,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1628398,"avatar":"https://static001.geekbang.org/account/avatar/00/18/d8/ee/17f220b6.jpg","nickname":"蛋炒饭加鸡蛋","note":"","ucode":"C75E27B9FB3336","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1541386,"avatar":"https://static001.geekbang.org/account/avatar/00/17/85/0a/e564e572.jpg","nickname":"N_H","note":"","ucode":"109B67557AB3CE","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":164757,"discussion_content":"正文给出了答案，是字节码的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1581219034,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":285,"ip_address":""},"score":164757,"extra":""}]},{"author":{"id":2962599,"avatar":"https://static001.geekbang.org/account/avatar/00/2d/34/a7/52c4ea60.jpg","nickname":"年少挽滑稽世无双","note":"","ucode":"793DCBDE25A07B","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":584004,"discussion_content":"666","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1660556785,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"四川"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1248472,"avatar":"https://wx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTK8o3aJz4NdqOCWvTjIPGmRWHt5xicwKGGGRd5icCoiauvvtnEtST0ljsuM23wiaYbZLknASvXmmqfg1w/132","nickname":"茅延安","note":"","ucode":"317626CFFBC81C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":386149,"discussion_content":"跨平台实际上是伪需求；依赖于系统，就像依赖一个稳定的中间件。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1627443951,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1304564,"avatar":"https://static001.geekbang.org/account/avatar/00/13/e7/f4/482e3413.jpg","nickname":"土豆-gavin               ༽","note":"","ucode":"15D24B71468A2C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":319362,"discussion_content":"大佬，牛逼，年薪50万+把，至少🤣🤣🤣","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1604016649,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1930366,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/1ZeNR1gSiczchhbLsk53niaTJic7fkY3SetAeXAD6Dvr8T353f3ORiaNLfflYJ3oDfcoD7t8acpt9OkH3FuWVsjopA/132","nickname":"张二旦","note":"","ucode":"7FC6DAD82D0167","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":296082,"discussion_content":"大神","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1596447585,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1336430,"avatar":"https://static001.geekbang.org/account/avatar/00/14/64/6e/e5ecc1d2.jpg","nickname":"水手","note":"","ucode":"536BB54E1E3617","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":221982,"discussion_content":"膜拜大神，到处都能看到你，每次都是很认真的在总结，学习榜样，想问下到底订了多少专栏？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1586091277,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1008404,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/63/14/06eff9a4.jpg","nickname":"Jerry银银","note":"","ucode":"80DA1172A2360A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1336430,"avatar":"https://static001.geekbang.org/account/avatar/00/14/64/6e/e5ecc1d2.jpg","nickname":"水手","note":"","ucode":"536BB54E1E3617","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":224655,"discussion_content":"差不多10个吧，哈哈","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1586321931,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":221982,"ip_address":""},"score":224655,"extra":""}]}]},{"had_liked":false,"id":7705,"user_name":"姜亮","can_delete":false,"product_type":"c1","uid":1010215,"ip_address":"","ucode":"052FFF2C2163ED","user_header":"https://static001.geekbang.org/account/avatar/00/0f/6a/27/9e8a8036.jpg","comment_is_top":false,"comment_ctime":1525658452,"is_pvip":false,"replies":[{"id":"2229","content":"好主意，当年确实有类似项目","user_name":"作者回复","comment_id":7705,"uid":"1009360","ip_address":"","utype":1,"ctime":1525679418,"user_name_real":"杨晓峰"}],"discussion_count":5,"race_medal":0,"score":"748849967956","product_id":100006701,"comment_content":"写个程序直接执行字节码就是解释执行。写个程序运行时把字节码动态翻译成机器码就是jit。写个程序把java源代码直接翻译为机器码就是aot。造个CPU直接执行字节码，字节码就是机器码。","like_count":174,"discussions":[{"author":{"id":1009360,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/66/d0/6541f1d5.jpg","nickname":"杨晓峰","note":"","ucode":"2BF255467A978F","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":417451,"discussion_content":"好主意，当年确实有类似项目","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1525679418,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1583833,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/E3XKbwTv6WTssolgqZjZCkiazHgl2IdBYfwVfAcB7Ff3krsIQeBIBFQLQE1Kw91LFbl3lic2EzgdfNiciaYDlJlELA/132","nickname":"rike","note":"","ucode":"920AAD0BD9245C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":136669,"discussion_content":"“写个程序把java源代码直接翻译为机器码就是aot”，这句话，是源代码还是字节码？我看着很多说法怎么是字节码呢？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579156387,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":2135401,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/b24L6aN3myzq1dTibqq40yQWq8kj6OZRc3PFZUtKVcHl8x69DAPERZibbuUBGCK8ibUiaic7adhB42HTAOnc0PqUuPw/132","nickname":"Geek_92b6bb","note":"","ucode":"ECDBF12771D0D4","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1583833,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/E3XKbwTv6WTssolgqZjZCkiazHgl2IdBYfwVfAcB7Ff3krsIQeBIBFQLQE1Kw91LFbl3lic2EzgdfNiciaYDlJlELA/132","nickname":"rike","note":"","ucode":"920AAD0BD9245C","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":301576,"discussion_content":"jaotc --output libHelloWorld.so HelloWorld.class  看这语法应该是class文件","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1598579359,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":136669,"ip_address":""},"score":301576,"extra":""}]},{"author":{"id":1139925,"avatar":"https://static001.geekbang.org/account/avatar/00/11/64/d5/9dc96652.jpg","nickname":"Bella","note":"","ucode":"1F3782A600F2AB","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":86976,"discussion_content":"请教一下，写个程序直接执行字节码解释执行，不也是要逐个翻译成机器码，跟jit运行时把字节码动态翻译成机器码有什么区别？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1576635170,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1299864,"avatar":"https://static001.geekbang.org/account/avatar/00/13/d5/98/ca30e756.jpg","nickname":"liw","note":"","ucode":"569F70A14A351C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1139925,"avatar":"https://static001.geekbang.org/account/avatar/00/11/64/d5/9dc96652.jpg","nickname":"Bella","note":"","ucode":"1F3782A600F2AB","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":296652,"discussion_content":"解释执行：将需要执行的字节码逐个翻译为机器码，下次执行相同的代码，还需要翻译一次；编译执行：运用jit将字节码一次性翻译为机器码并进行保存，下次可重复使用已经编译好的机器码，在编译需要监控执行，判断其是否为热点代码，编译的过程也会对程序进行优化","likes_number":16,"is_delete":false,"is_hidden":false,"ctime":1596614068,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":86976,"ip_address":""},"score":296652,"extra":""}]}]},{"had_liked":false,"id":7501,"user_name":"欧阳田","can_delete":false,"product_type":"c1","uid":1054491,"ip_address":"","ucode":"24004916354446","user_header":"https://static001.geekbang.org/account/avatar/00/10/17/1b/4a088e67.jpg","comment_is_top":false,"comment_ctime":1525496706,"is_pvip":false,"replies":[{"id":"2147","content":"高手","user_name":"作者回复","comment_id":7501,"uid":"1009360","ip_address":"","utype":1,"ctime":1525500064,"user_name_real":"杨晓峰"}],"discussion_count":6,"race_medal":0,"score":"658655492994","product_id":100006701,"comment_content":"1，JVM的内存模型，堆、栈、方法区；字节码的跨平台性；对象在JVM中的强引用，弱引用，软引用，虚引用，是否可用finalise方法救救它？；双亲委派进行类加载，什么是双亲呢？双亲就是多亲，一份文档由我加载，然后你也加载，这份文档在JVM中是一样的吗？；多态思想是Java需要最核心的概念，也是面向对象的行为的一个最好诠释；理解方法重载与重写在内存中的执行流程，怎么定位到这个具体方法的。2，发展流程，JDK5(重写bug)，JDK6(商用最稳定版)，JDK7(switch的字符串支持)，JDK8(函数式编程)，一直在发展进化。3，理解祖先类Object，它的行为是怎样与现实生活连接起来的。4，理解23种设计模式，因为它是道与术的结合体。","like_count":153,"discussions":[{"author":{"id":1009360,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/66/d0/6541f1d5.jpg","nickname":"杨晓峰","note":"","ucode":"2BF255467A978F","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":417373,"discussion_content":"高手","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1525500064,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1618975,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b4/1f/c4f03faf.jpg","nickname":"寧","note":"","ucode":"5492BC15DF736C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":3481,"discussion_content":"作者能别什么评论都只是称赞吗，有错的话也纠正一下吧我是个初学者来学东西的，这位老兄的评论没有问题吗？\n       双亲委派机制，不是为了保障字节码文件只被加载一次吗？在触发一个类A初始化的时候，由A先将加载任务委托给其父类B的加载器，再由B继续向上委托，直至顶层加载器先行加载，然后一次向下加载，从而防止加载器的重复加载。  当然，这种机制也不一定能够百分百避免重复加载，有不同的加载器，可能会造成同一个类的重复加载。\n      这是我现在的认知，如果有错，望高手指教。","likes_number":14,"is_delete":false,"is_hidden":false,"ctime":1564531359,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1324314,"avatar":"https://static001.geekbang.org/account/avatar/00/14/35/1a/9fa38dc9.jpg","nickname":"子瞻","note":"","ucode":"5C26FF10934534","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1618975,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b4/1f/c4f03faf.jpg","nickname":"寧","note":"","ucode":"5492BC15DF736C","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":344635,"discussion_content":"同感，只管点赞。。。不纠正。。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1611541159,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":3481,"ip_address":""},"score":344635,"extra":""}]},{"author":{"id":1324314,"avatar":"https://static001.geekbang.org/account/avatar/00/14/35/1a/9fa38dc9.jpg","nickname":"子瞻","note":"","ucode":"5C26FF10934534","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":344637,"discussion_content":"高手？？？彩虹屁？？？","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1611541195,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1608817,"avatar":"https://static001.geekbang.org/account/avatar/00/18/8c/71/0d1a0ae9.jpg","nickname":"傅宇新","note":"","ucode":"262496F0E29E84","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":287848,"discussion_content":"java内存模型可不是堆、栈、方法区这么简单的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1593568448,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1038372,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/d8/24/499e7c99.jpg","nickname":"Ckiwis","note":"","ucode":"E59B57FF70650B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":121476,"discussion_content":"不是救救它吧，是回收它吧","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578319703,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":7490,"user_name":"zaiweiwoaini","can_delete":false,"product_type":"c1","uid":1103858,"ip_address":"","ucode":"8AD01BF8D9FEB9","user_header":"https://static001.geekbang.org/account/avatar/00/10/d7/f2/ca56e6ea.jpg","comment_is_top":false,"comment_ctime":1525493269,"is_pvip":false,"replies":[{"id":"2159","content":"搬个板凳，哈哈","user_name":"作者回复","comment_id":7490,"uid":"1009360","ip_address":"","utype":1,"ctime":1525502770,"user_name_real":"杨晓峰"}],"discussion_count":1,"race_medal":0,"score":"551281307157","product_id":100006701,"comment_content":"看评论也能学习知识。 ","like_count":128,"discussions":[{"author":{"id":1009360,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/66/d0/6541f1d5.jpg","nickname":"杨晓峰","note":"","ucode":"2BF255467A978F","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":417365,"discussion_content":"搬个板凳，哈哈","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1525502770,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":76357,"user_name":"@肘底看拳","can_delete":false,"product_type":"c1","uid":1433049,"ip_address":"","ucode":"2273BD44832EFA","user_header":"https://static001.geekbang.org/account/avatar/00/15/dd/d9/d26b996f.jpg","comment_is_top":false,"comment_ctime":1552577350,"is_pvip":false,"discussion_count":16,"race_medal":0,"score":"534128522054","product_id":100006701,"comment_content":"今日读完这一讲之后，最想弄懂的和收获最大的就是，java的write once run anywhere 这句话包含的原理了。也就是java程序执行的过程。因为的基础比较薄弱，一开始我觉得有点迷惑的是编译这两个字的含义和作用到底应该如何理解。<br>首先不应该混淆java的编译和其他的语言（比如C）的编译二字的含义，C语言的编译包含两个过程，汇编和编译，C语言代码被汇编之后，会得到汇编语言代码，而编译就是将汇编语言代码翻译称为机器指令代码的过程，然后在经过一个链接的过程生成了一个可执行的文件。所以C语言经历过编译步骤之后直接就变成了可以被平台底层执行的代码了，这个过程是最初的编译的含义。而java的执行过程是，首先通过javac编译java源代码为字节码，然后JVM将这些字节码文件加载进来，加载进来一句，就解释一句，解释出来一句就执行一句，相当于是解释和执行是同步执行的，这种模式被称为解释执行。需要明确的一点：解释执行这个过程并不会产生目标文件，也就是说这些可以被平台执行的机器码文件并没有生成，下次如果还是这部分代码被执行的时候，还需要重新的被解释一遍，这样每次都重复这个过程就会很耗时，因此java引入了JIT，（在程序运行时）  将那些执行比较频繁的代码，也被称作热点代码，编译成为机器码，这个时候其实内存中是保存了一部分这部分机器码的，这样就解决了上面所描述的问题。但是因为JIT是运行时将字节码文件编译成为机器码文件，所以会占用运行时资源，造成进程卡段，因此就又引入了AOT（静态编译），就是在程序运行之前就将字节码编译成为机器码，不会占用到运行时的CPU资源。这样就解决了JIT的问题。但是这样的话在某些程度上其实就和C语言一样了，牺牲了java的跨平台特性，所以JIT和AOT都有不同的优缺点，所以我们可以在虚拟机的指令中指定启动虚拟机的时候采用的模式。来更好的控制虚拟机为我们带来更好的编程体验。<br>这就是我学习这节课收获最深的部分。","like_count":124,"discussions":[{"author":{"id":1517134,"avatar":"https://static001.geekbang.org/account/avatar/00/17/26/4e/284690be.jpg","nickname":"丶马小跳丶","note":"","ucode":"8265D269B8DBBB","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":17052,"discussion_content":"感谢大佬，你这个评论让我豁然开朗，jvm对字节码的解释执行，jit对字节码的即时编译执行，aot对字节码的预先编译执行，这三块，看完你的评论我区分开来了，点赞！","likes_number":9,"is_delete":false,"is_hidden":false,"ctime":1568944420,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1182383,"avatar":"https://static001.geekbang.org/account/avatar/00/12/0a/af/6f244997.jpg","nickname":"lee","note":"","ucode":"CD672BDB1B58F2","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":320192,"discussion_content":"有一点不太认同，AOT静态编译，虽然是直接编译成机器码，但是java源文件是不需要修改的，但是C语言针对不同的系统需要修改源文件以适配操作系统提供的API","likes_number":5,"is_delete":false,"is_hidden":false,"ctime":1604287841,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1554995,"avatar":"https://static001.geekbang.org/account/avatar/00/17/ba/33/2d83d174.jpg","nickname":"时光守护者-基兰","note":"","ucode":"F0B0887B1979D2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1182383,"avatar":"https://static001.geekbang.org/account/avatar/00/12/0a/af/6f244997.jpg","nickname":"lee","note":"","ucode":"CD672BDB1B58F2","race_medal":0,"user_type":1,"is_pvip":true},"discussion":{"id":377319,"discussion_content":"我也觉得了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1622602417,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":320192,"ip_address":""},"score":377319,"extra":""},{"author":{"id":1236318,"avatar":"https://static001.geekbang.org/account/avatar/00/12/dd/5e/f09d214b.jpg","nickname":"74~75","note":"","ucode":"F54118CA15A840","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1182383,"avatar":"https://static001.geekbang.org/account/avatar/00/12/0a/af/6f244997.jpg","nickname":"lee","note":"","ucode":"CD672BDB1B58F2","race_medal":0,"user_type":1,"is_pvip":true},"discussion":{"id":380354,"discussion_content":"楼主的意思应该是不同的操作系统，都需要执行AOT预先生成不同的机器码文件","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1624452680,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":320192,"ip_address":""},"score":380354,"extra":""}]},{"author":{"id":1930366,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/1ZeNR1gSiczchhbLsk53niaTJic7fkY3SetAeXAD6Dvr8T353f3ORiaNLfflYJ3oDfcoD7t8acpt9OkH3FuWVsjopA/132","nickname":"张二旦","note":"","ucode":"7FC6DAD82D0167","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":296083,"discussion_content":"帮助我理清了解释执行，jit即时编译和Aot静态编译之间的关系，摩拜大神","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1596447712,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":3028417,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKv4diaz5hvDLfzZdXnOqLRkKIibBBsJqyZKibd0J1HjlUt0LicibLu5TKw5olTkD0rDFVTKIx6XcrttRA/132","nickname":"寒江雪","note":"","ucode":"E68AC99C650D32","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":577103,"discussion_content":"马克","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1655915767,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1194853,"avatar":"https://static001.geekbang.org/account/avatar/00/12/3b/65/3a4fc8cf.jpg","nickname":"prepared","note":"","ucode":"00E54A5C7CDCBE","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":393940,"discussion_content":"mark","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1631668057,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2674789,"avatar":"https://static001.geekbang.org/account/avatar/00/28/d0/65/6ef36108.jpg","nickname":"奋斗的椒盐","note":"","ucode":"7A26420F4813A1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":380874,"discussion_content":"写的太好了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1624768936,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1156039,"avatar":"https://static001.geekbang.org/account/avatar/00/11/a3/c7/eeecb1d9.jpg","nickname":"左耳粉丝","note":"","ucode":"A3A6D54C1DC60C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":377155,"discussion_content":"写的太好了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1622531511,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2530283,"avatar":"https://static001.geekbang.org/account/avatar/00/26/9b/eb/e99687a1.jpg","nickname":"窗几","note":"","ucode":"FD0DF299B831C9","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":364245,"discussion_content":"标记一下","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1617420227,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2015587,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIQRk0dsznttDS2ic5atjUkZbNIuzz5regxj6U0E78wXRPlWqWfHaCm6Tv1MQutVRqvoMvBlpW7qTQ/132","nickname":"今夜有雨","note":"","ucode":"848E0AAEEE4CE5","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":348187,"discussion_content":"感谢大佬，标记一下","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1612450212,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2160486,"avatar":"https://static001.geekbang.org/account/avatar/00/20/f7/66/44e37b3b.jpg","nickname":"妙鱼จุ๊บL的第八秒","note":"","ucode":"FEF457252D36E2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":304002,"discussion_content":"通俗易懂","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1599446956,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1635421,"avatar":"https://static001.geekbang.org/account/avatar/00/18/f4/5d/b67c6c57.jpg","nickname":"sharphuang","note":"","ucode":"4E84B0B88A1D48","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":299458,"discussion_content":"看完豁然开朗 ","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1597709187,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1583833,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/E3XKbwTv6WTssolgqZjZCkiazHgl2IdBYfwVfAcB7Ff3krsIQeBIBFQLQE1Kw91LFbl3lic2EzgdfNiciaYDlJlELA/132","nickname":"rike","note":"","ucode":"920AAD0BD9245C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":136745,"discussion_content":"“AOT（静态编译），就是在程序运行之前就将字节码编译成为机器码，不会占用到运行时的CPU资源。”，这句话中“将字节码编译成为机器码”，有的说法是“将源码编译成为机器码”，不知究竟是源码还是字节码？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579160903,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":2320190,"avatar":"https://static001.geekbang.org/account/avatar/00/23/67/3e/6504218c.jpg","nickname":"lhllovelife","note":"","ucode":"FD2A824EF5600F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1583833,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/E3XKbwTv6WTssolgqZjZCkiazHgl2IdBYfwVfAcB7Ff3krsIQeBIBFQLQE1Kw91LFbl3lic2EzgdfNiciaYDlJlELA/132","nickname":"rike","note":"","ucode":"920AAD0BD9245C","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":325776,"discussion_content":"字节码。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1605429012,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":136745,"ip_address":""},"score":325776,"extra":""},{"author":{"id":1236318,"avatar":"https://static001.geekbang.org/account/avatar/00/12/dd/5e/f09d214b.jpg","nickname":"74~75","note":"","ucode":"F54118CA15A840","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1583833,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/E3XKbwTv6WTssolgqZjZCkiazHgl2IdBYfwVfAcB7Ff3krsIQeBIBFQLQE1Kw91LFbl3lic2EzgdfNiciaYDlJlELA/132","nickname":"rike","note":"","ucode":"920AAD0BD9245C","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":380355,"discussion_content":"当然是字节码，虚拟机加载进来的就是字节码了，AOT是虚拟机的功能","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1624452825,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":136745,"ip_address":""},"score":380355,"extra":""}]}]},{"had_liked":false,"id":7439,"user_name":"刻苦滴涛涛","can_delete":false,"product_type":"c1","uid":1115074,"ip_address":"","ucode":"6929C25F49BB9A","user_header":"https://static001.geekbang.org/account/avatar/00/11/03/c2/e523d386.jpg","comment_is_top":false,"comment_ctime":1525482840,"is_pvip":false,"replies":[{"id":"2131","content":"不错，JIT是运行时编译","user_name":"作者回复","comment_id":7439,"uid":"1009360","ip_address":"","utype":1,"ctime":1525487199,"user_name_real":"杨晓峰"}],"discussion_count":5,"race_medal":0,"score":"426727245144","product_id":100006701,"comment_content":"我理解的java程序执行步骤:<br>首先javac编译器将源代码编译成字节码。<br>然后jvm类加载器加载字节码文件，然后通过解释器逐行解释执行，这种方式的执行速度相对会比较慢。有些方法和代码块是高频率调用的，也就是所谓的热点代码，所以引进jit技术，提前将这类字节码直接编译成本地机器码。这样类似于缓存技术，运行时再遇到这类代码直接可以执行，而不是先解释后执行。","like_count":99,"discussions":[{"author":{"id":1009360,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/66/d0/6541f1d5.jpg","nickname":"杨晓峰","note":"","ucode":"2BF255467A978F","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":417344,"discussion_content":"不错，JIT是运行时编译","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1525487199,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1019332,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/8d/c4/6f97daea.jpg","nickname":"长期规划","note":"","ucode":"5EF65E9115834B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":284631,"discussion_content":"请教下，为何不直接用JIT全转为机器码呢，那样不更快吗","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1592572407,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":3,"child_discussions":[{"author":{"id":2071309,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/9b/0d/4752c20a.jpg","nickname":"暮江佳人远","note":"","ucode":"9CBAFC314F2876","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1019332,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/8d/c4/6f97daea.jpg","nickname":"长期规划","note":"","ucode":"5EF65E9115834B","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":292602,"discussion_content":"那是aot","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1595263201,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":284631,"ip_address":""},"score":292602,"extra":""},{"author":{"id":2320190,"avatar":"https://static001.geekbang.org/account/avatar/00/23/67/3e/6504218c.jpg","nickname":"lhllovelife","note":"","ucode":"FD2A824EF5600F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1019332,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/8d/c4/6f97daea.jpg","nickname":"长期规划","note":"","ucode":"5EF65E9115834B","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":325760,"discussion_content":"如果这段代码本身在将来只会被执行一次，那么从本质上看，编译就是在浪费精力。因为将这段代码解释执行相对于编译这段代码并执行代码来说，要快很多。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1605426694,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":284631,"ip_address":""},"score":325760,"extra":""},{"author":{"id":2047274,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/3d/2a/5c90358c.jpg","nickname":"子月十七","note":"","ucode":"FDCF1ABF9F2D74","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1019332,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/8d/c4/6f97daea.jpg","nickname":"长期规划","note":"","ucode":"5EF65E9115834B","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":351643,"discussion_content":"解释字节码的速度是慢于直接执行机器码，但是机器码需要编译，而一次或者少次的 编译机器码+执行机器码 的速度是慢于直接解释字节码的，只有编译为机器码再多次执行，是快于每一次都解释字节码的。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1614353384,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":284631,"ip_address":""},"score":351643,"extra":""}]}]},{"had_liked":false,"id":7422,"user_name":"thinkers","can_delete":false,"product_type":"c1","uid":1031712,"ip_address":"","ucode":"81159393491E8D","user_header":"https://static001.geekbang.org/account/avatar/00/0f/be/20/8f4e0810.jpg","comment_is_top":false,"comment_ctime":1525479295,"is_pvip":false,"replies":[{"id":"2124","content":"剧透一下，未来jre将退出历史舞台！","user_name":"作者回复","comment_id":7422,"uid":"1009360","ip_address":"","utype":1,"ctime":1525485207,"user_name_real":"杨晓峰"}],"discussion_count":4,"race_medal":0,"score":"426727241599","product_id":100006701,"comment_content":"jre为java提供了必要的运行时环境，jdk为java提供了必要的开发环境！","like_count":99,"discussions":[{"author":{"id":1009360,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/66/d0/6541f1d5.jpg","nickname":"杨晓峰","note":"","ucode":"2BF255467A978F","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":417338,"discussion_content":"剧透一下，未来jre将退出历史舞台！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1525485207,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1022887,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/9b/a7/440aff07.jpg","nickname":"六维","note":"","ucode":"EB1C15AC06A8DF","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":380818,"discussion_content":"为什么呢？","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1624712339,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1622834,"avatar":"https://static001.geekbang.org/account/avatar/00/18/c3/32/06dd28be.jpg","nickname":"长住余生🍃","note":"","ucode":"9BBBEF2266CE5A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1022887,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/9b/a7/440aff07.jpg","nickname":"六维","note":"","ucode":"EB1C15AC06A8DF","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":565298,"discussion_content":"在现在的版本JDK比如JDK12版本，已经没有jre","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1650434385,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":380818,"ip_address":""},"score":565298,"extra":""},{"author":{"id":3028417,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKv4diaz5hvDLfzZdXnOqLRkKIibBBsJqyZKibd0J1HjlUt0LicibLu5TKw5olTkD0rDFVTKIx6XcrttRA/132","nickname":"寒江雪","note":"","ucode":"E68AC99C650D32","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1622834,"avatar":"https://static001.geekbang.org/account/avatar/00/18/c3/32/06dd28be.jpg","nickname":"长住余生🍃","note":"","ucode":"9BBBEF2266CE5A","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":577104,"discussion_content":"JDK11也没有单独的jre了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1655915865,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":565298,"ip_address":""},"score":577104,"extra":""}]}]},{"had_liked":false,"id":7699,"user_name":"scott","can_delete":false,"product_type":"c1","uid":1116384,"ip_address":"","ucode":"A6845A3C18049B","user_header":"","comment_is_top":false,"comment_ctime":1525655217,"is_pvip":false,"replies":[{"id":"2236","content":"类比一下，一个是同声传译，一个是放录音","user_name":"作者回复","comment_id":7699,"uid":"1009360","ip_address":"","utype":1,"ctime":1525698891,"user_name_real":"杨晓峰"}],"discussion_count":3,"race_medal":0,"score":"358007940785","product_id":100006701,"comment_content":"解释执行和编译执行有何区别","like_count":83,"discussions":[{"author":{"id":1009360,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/66/d0/6541f1d5.jpg","nickname":"杨晓峰","note":"","ucode":"2BF255467A978F","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":417447,"discussion_content":"类比一下，一个是同声传译，一个是放录音","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1525698891,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1379951,"avatar":"https://static001.geekbang.org/account/avatar/00/15/0e/6f/726b0f55.jpg","nickname":"Shepherd","note":"","ucode":"00C5B5493E1E3B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":3794,"discussion_content":"编译就是先炒菜，炒好再吃，解释就是吃火锅，边涮边吃","likes_number":15,"is_delete":false,"is_hidden":false,"ctime":1564815140,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1618975,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b4/1f/c4f03faf.jpg","nickname":"寧","note":"","ucode":"5492BC15DF736C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":3483,"discussion_content":"意思是，解释执行，jvm边解释边执行。编译执行，JIT先将热点代码编译好，之后再次执行这些热点代码时，就会直接执行编译好的机器代码了。  个人理解需要高手，指正？","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1564531993,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":7758,"user_name":"张立春","can_delete":false,"product_type":"c1","uid":1124382,"ip_address":"","ucode":"D8B4523B95D839","user_header":"https://static001.geekbang.org/account/avatar/00/11/28/1e/76e19bd3.jpg","comment_is_top":false,"comment_ctime":1525702726,"is_pvip":false,"discussion_count":3,"race_medal":0,"score":"315058315334","product_id":100006701,"comment_content":"任何软件问题都可以通过加一层来解决：有了系统API就屏蔽了不同硬件的区别，有了编译器就屏蔽了不同机器语言的区别，有了JVM就屏蔽了不同操作系统的区别，有了TCP&#47;IP就屏蔽了不同系统之间通讯的差异，有了语音识别和翻译就屏蔽了不同语言的差异。也许有一天人工智能可以直接把自然语言翻译成机器码直接生产可用的软件。","like_count":73,"discussions":[{"author":{"id":1541386,"avatar":"https://static001.geekbang.org/account/avatar/00/17/85/0a/e564e572.jpg","nickname":"N_H","note":"","ucode":"109B67557AB3CE","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":286,"discussion_content":"有点像设计模式里面的适配器模式","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1561429640,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1554995,"avatar":"https://static001.geekbang.org/account/avatar/00/17/ba/33/2d83d174.jpg","nickname":"时光守护者-基兰","note":"","ucode":"F0B0887B1979D2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":377321,"discussion_content":"通透！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1622602515,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1549355,"avatar":"https://static001.geekbang.org/account/avatar/00/17/a4/2b/869b37ee.jpg","nickname":"叶家*四少","note":"","ucode":"E8E65A97A95D91","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":350106,"discussion_content":"犀利的评价！\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1613710298,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":7417,"user_name":"约书亚","can_delete":false,"product_type":"c1","uid":1046714,"ip_address":"","ucode":"81EA27ADD9EC1A","user_header":"https://static001.geekbang.org/account/avatar/00/0f/f8/ba/14e05601.jpg","comment_is_top":false,"comment_ctime":1525477033,"is_pvip":false,"replies":[{"id":"2128","content":"对，看到本质了","user_name":"作者回复","comment_id":7417,"uid":"1009360","ip_address":"","utype":1,"ctime":1525485454,"user_name_real":"杨晓峰"}],"discussion_count":3,"race_medal":0,"score":"237748678313","product_id":100006701,"comment_content":"这种基于运行分析，进行热点代码编译的设计，是因为绝大多数的程序都表现为“小部分的热点耗费了大多数的资源”吧。只有这样才能做到，在某些场景下，一个需要跑在运行时上的语言，可以比直接编译成机器码的语言更“快”","like_count":55,"discussions":[{"author":{"id":1009360,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/66/d0/6541f1d5.jpg","nickname":"杨晓峰","note":"","ucode":"2BF255467A978F","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":417335,"discussion_content":"对，看到本质了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1525485454,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1693762,"avatar":"https://static001.geekbang.org/account/avatar/00/19/d8/42/be2f18aa.jpg","nickname":"叁叁、","note":"","ucode":"867ADC219CBA79","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":211375,"discussion_content":"二八定律，消耗大部分系统资源的只有那一小部分代码","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584845433,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1554995,"avatar":"https://static001.geekbang.org/account/avatar/00/17/ba/33/2d83d174.jpg","nickname":"时光守护者-基兰","note":"","ucode":"F0B0887B1979D2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1693762,"avatar":"https://static001.geekbang.org/account/avatar/00/19/d8/42/be2f18aa.jpg","nickname":"叁叁、","note":"","ucode":"867ADC219CBA79","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":377322,"discussion_content":"是的，20%的代码消耗了80%的时间","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1622602698,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":211375,"ip_address":""},"score":377322,"extra":""}]}]},{"had_liked":false,"id":8290,"user_name":"半日闲","can_delete":false,"product_type":"c1","uid":1015024,"ip_address":"","ucode":"ED1508EACF7A23","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIice9rqygStznGQ7mzmwyAGgiaP77eAgicSC7qbumm1hvfmm5NichlPDnQHE9OQKswdF030fEJXQ7j3g/132","comment_is_top":false,"comment_ctime":1526050748,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"229159317436","product_id":100006701,"comment_content":"编译型语言：C&#47;C++、 Pascal（Delphi）<br>编译就是把源代码（高级语言，人类容易读，容易理解）转换成机器码（CPU能理解，能高效的执行）<br><br>解释型语言：JavaScript、Perl、Python、Ruby<br>解释就简单多了，解析源代码，并且直接执行，没有编译过程 <br><br>编译程序是整体编译完了，再一次性执行。 而解释程序是一边解释，一边执行<br><br> JAVA语言是一种编译型-解释型语言，同时具备编译特性和解释特性<br> 其所谓的编译过程只是将.java文件编程成平台无关的字节码.class文件，<br> 并不是向C一样编译成可执行的机器语言，在此请读者注意Java中所谓的“编译”和传统的“编译”的区别。<br> <br> 作为编译型语言，JAVA程序要被统一编译成字节码文件——文件后缀是class。此种文件在java中又称为类文件。<br> java类文件不能再计算机上直接执行，它需要被java虚拟机翻译成本地的机器码后才能执行，而java虚拟机的翻译过程则是解释性的。<br> java字节码文件首先被加载到计算机内存中，然后读出一条指令，翻译一条指令，执行一条指令，该过程被称为java语言的解释执行，是由java虚拟机完成的。<br> 以上说的是Java的解释执行，但是比如我们大多数情况使用的Hotspot JVM，都提供了动态编译器编译器JIT，能够追踪热点代码， 然后变成机器指令，这种情况下部分热点代码就属于编译执行，而不是解释执行了<br> <br> 其实甭管它什么解释还是编译， 了解了底层的原理就行了","like_count":53},{"had_liked":false,"id":7419,"user_name":"一叶追寻","can_delete":false,"product_type":"c1","uid":1115436,"ip_address":"","ucode":"13A1D2EB49317E","user_header":"https://static001.geekbang.org/account/avatar/00/11/05/2c/f6a29249.jpg","comment_is_top":false,"comment_ctime":1525478104,"is_pvip":false,"replies":[{"id":"2125","content":"非常棒，不同语言对平台无关的支持是不同的，Java是最高等级，未来也许会在效率角度出发，进行某种折衷，比如AOT","user_name":"作者回复","comment_id":7419,"uid":"1009360","ip_address":"","utype":1,"ctime":1525485301,"user_name_real":"杨晓峰"}],"discussion_count":1,"race_medal":0,"score":"177619137240","product_id":100006701,"comment_content":"对Java平台的理解，首先想到的是Java的一些特性，比如平台无关性、面向对象、GC机制等，然后会在这几个方面去回答。平台无关性依赖于JVM，将.class文件解释为适用于操作系统的机器码。面向对象则会从封装、继承、多态这些特性去解释，具体内容就不在评论里赘述了。另外Java的内存回收机制，则涉及到Java的内存结构，堆、栈、方法区等，然后围绕什么样的对象可以回收以及回收的执行。以上是我对本道题的理解，不足之处还请杨老师指出，希望通过这次学习能把Java系统的总结一下~","like_count":41,"discussions":[{"author":{"id":1009360,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/66/d0/6541f1d5.jpg","nickname":"杨晓峰","note":"","ucode":"2BF255467A978F","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":417337,"discussion_content":"非常棒，不同语言对平台无关的支持是不同的，Java是最高等级，未来也许会在效率角度出发，进行某种折衷，比如AOT","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1525485301,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":7932,"user_name":"凌","can_delete":false,"product_type":"c1","uid":1120319,"ip_address":"","ucode":"D0AA0C787EE004","user_header":"https://static001.geekbang.org/account/avatar/00/11/18/3f/7b33cd3c.jpg","comment_is_top":false,"comment_ctime":1525787052,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"164734544300","product_id":100006701,"comment_content":"国富论中讲到，社会的分工细化起到了提高生产力的关键作用。我觉得一次编写到处运行也是社会分工的一种模式，他使大部分业务程序员注重领域模型的逻辑设计，不必关心底层的实现，使软件工程达到了专业的人做专业的事这一个高度。虽然现在掌握一门技术远远不够，但是对于大部分业务程序员来说，只有把精力花在最重要的地方比如领域模型的设计，才会让业务更加流畅完善。所以我觉得JVM机制蕴含了一定的经济学原理。","like_count":38},{"had_liked":false,"id":7794,"user_name":"非常非常非常非常的普通中下","can_delete":false,"product_type":"c1","uid":1116403,"ip_address":"","ucode":"4D15549F5055D2","user_header":"https://static001.geekbang.org/account/avatar/00/11/08/f3/35773693.jpg","comment_is_top":false,"comment_ctime":1525738994,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"164734496242","product_id":100006701,"comment_content":"没有一个问题是加一个中间层解决不了的，如果解决不了就加两个","like_count":38},{"had_liked":false,"id":7438,"user_name":"石头狮子","can_delete":false,"product_type":"c1","uid":1118031,"ip_address":"","ucode":"3BABB93E552022","user_header":"https://static001.geekbang.org/account/avatar/00/11/0f/4f/c75c4889.jpg","comment_is_top":false,"comment_ctime":1525482834,"is_pvip":false,"replies":[{"id":"2132","content":"高手","user_name":"作者回复","comment_id":7438,"uid":"1009360","ip_address":"","utype":1,"ctime":1525487250,"user_name_real":"杨晓峰"}],"discussion_count":2,"race_medal":0,"score":"151849338194","product_id":100006701,"comment_content":"1. 一次编译，到处运行。jvm 层面封装了系统API，提供不同系统一致的调用行为。减少了为适配不同操作系统，不同架构的带来的工作量。<br>2. 垃圾回收，降低了开发过程中需要注意内存回收的难度。降低内存泄露出现的概率。虽然也带来了一些额外开销，但是足以弥补带来的好处。合理的分代策略，提高了内存使用率。<br>3. jit 与其他编译语言相比，降低了编译时间，因为大部分代码是运行时编译，避免了冷代码在编译时也参与编译的问题。<br>    提高了代码的执行效率，之前项目中使用过 lua 进行相关开发。由于 lua 是解释性语言，并配合使用了 lua-jit。开发过程中遇到，如果编写的 lua 代码是 jit 所不支持的会导致代码性能与可编译的相比十分低下。<br>","like_count":35,"discussions":[{"author":{"id":1009360,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/66/d0/6541f1d5.jpg","nickname":"杨晓峰","note":"","ucode":"2BF255467A978F","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":417343,"discussion_content":"高手","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1525487250,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1881894,"avatar":"","nickname":"Geek_23bafd","note":"","ucode":"F7B38DF2F267A8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":219649,"discussion_content":"感觉这里总结的比课程里面的好...","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585791902,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":19995,"user_name":"钱","can_delete":false,"product_type":"c1","uid":1009652,"ip_address":"","ucode":"2C92A243A463D4","user_header":"https://static001.geekbang.org/account/avatar/00/0f/67/f4/9a1feb59.jpg","comment_is_top":false,"comment_ctime":1534207701,"is_pvip":false,"discussion_count":5,"race_medal":0,"score":"138973161173","product_id":100006701,"comment_content":"文章和评论，平分秋色，留言中高手如云，鞭辟入里。<br>能站在上帝的视角，看一样东西从无到有，然后又能细致入微的观察到这个东西的全生命周期的运行轨迹，最后又看到结局，一个东西完成了其存在的使命又由有化无，归于空寂。这真是一次奇妙的旅行，一种无与伦比的享受过程。<br>贩夫走卒，看到的是一片片飞花落叶<br>大牛，看到的是一颗颗树木<br>大神，看到的是一片片森林<br>上帝，看到的是无穷无尽的生死幻灭。","like_count":32,"discussions":[{"author":{"id":2330905,"avatar":"https://static001.geekbang.org/account/avatar/00/23/91/19/6a3e7efc.jpg","nickname":"程序员9527","note":"","ucode":"1A1609F6BEAD84","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":383449,"discussion_content":"我买的每一门课里面都能看到这位老哥，好像是京东的","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1626098782,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1046545,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/f8/11/c62a583d.jpg","nickname":"333","note":"","ucode":"A0BA53EBAD81EF","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":303406,"discussion_content":"感觉哪哪都能看到你，也是一个买了非常多课程的主。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1599232597,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1324314,"avatar":"https://static001.geekbang.org/account/avatar/00/14/35/1a/9fa38dc9.jpg","nickname":"子瞻","note":"","ucode":"5C26FF10934534","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1046545,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/f8/11/c62a583d.jpg","nickname":"333","note":"","ucode":"A0BA53EBAD81EF","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":344640,"discussion_content":"hhhh","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1611541313,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":303406,"ip_address":""},"score":344640,"extra":""},{"author":{"id":1594292,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epCnHKhYLefpkm02lnr4SpV5T4ibDQ2e4SlibkcaGu8ZxVDlEmVib6j0TiaDTicMmjrEdiaia8Aeen3nR7dg/132","nickname":"Geek_4a677e","note":"","ucode":"ACE5BD07A232D2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1046545,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/f8/11/c62a583d.jpg","nickname":"333","note":"","ucode":"A0BA53EBAD81EF","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":534774,"discussion_content":"所以你看他名字，钱 ！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1638275858,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":303406,"ip_address":""},"score":534774,"extra":""}]},{"author":{"id":1340412,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83er74Gwicu88v9CuY2s7xzKS28OiajLHkC0F5edCYMKTAQRbNrzz2icDxUEITyeVLvoWoStcbc84tXV9w/132","nickname":"陈杰","note":"","ucode":"954F3D28FEC39E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":390437,"discussion_content":"这个评论特别有意思","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1629827209,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":8501,"user_name":"櫻の空","can_delete":false,"product_type":"c1","uid":1112459,"ip_address":"","ucode":"FCB2F7BFC186EC","user_header":"https://static001.geekbang.org/account/avatar/00/10/f9/8b/11c87d4e.jpg","comment_is_top":false,"comment_ctime":1526272384,"is_pvip":false,"replies":[{"id":"2524","content":"不错，严格说我说的是oracle jdk和hotspot jvm的行为","user_name":"作者回复","user_name_real":"杨晓峰","uid":"1009360","ctime":1526277059,"ip_address":"","comment_id":8501,"utype":1}],"discussion_count":3,"race_medal":0,"score":"134670258560","product_id":100006701,"comment_content":"以下是我在本节课所得到的收获，结合TIJ的内容整理了一下我个人的理解，若有错误，还望老师指出。<br>Java采用的是解释和编译混合的模式。它首先通过javac将源码编译成字节码文件class.然后在运行的时候通过解释器或者JIT将字节码转换成最终的机器码。<br>只是用解释器的缺点：抛弃了JIT可能带来的性能优势。如果代码没有被JIT编译的话，再次运行时需要重复解析。<br>只用JIT的缺点：<br>需要将全部的代码编译成本地机器码。要花更多的时间，JVM启动会变慢非常多；<br>增加可执行代码的长度（字节码比JIT编译后的机器码小很多），这将导致页面调度，从而降低程序的速度。<br>有些JIT编译器的优化方式，比如分支预测，如果不进行profiling，往往并不能进行有效优化。<br>因此，HotSpot采用了惰性评估(Lazy Evaluation)的做法，根据二八定律，消耗大部分系统资源的只有那一小部分的代码（热点代码），而这也就是JIT所需要编译的部分。JVM会根据代码每次被执行的情况收集信息并相应地做出一些优化，因此执行的次数越多，它的速度就越快。<br>JDK 9引入了一种新的编译模式AOT(Ahead of Time Compilation)，它是直接将字节码编译成机器码，这样就避免了JIT预热等各方面的开销。JDK支持分层编译和AOT协作使用。<br>注：JIT为方法级，它会缓存编译过的字节码在CodeCache中，而不需要被重复解释","like_count":31,"discussions":[{"author":{"id":1009360,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/66/d0/6541f1d5.jpg","nickname":"杨晓峰","note":"","ucode":"2BF255467A978F","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":417748,"discussion_content":"不错，严格说我说的是oracle jdk和hotspot jvm的行为","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1526277059,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1583833,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/E3XKbwTv6WTssolgqZjZCkiazHgl2IdBYfwVfAcB7Ff3krsIQeBIBFQLQE1Kw91LFbl3lic2EzgdfNiciaYDlJlELA/132","nickname":"rike","note":"","ucode":"920AAD0BD9245C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":136721,"discussion_content":"“JIT为方法级，它会缓存编译过的字节码在CodeCache中，而不需要被重复解释。”，这句话中“缓存编译过的字节码”应该是“缓存编译过的机器码”吧？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579159121,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":2697700,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/LFJZ4x47rvShGhsePLIxc8EzdlBxAmVAIjJ2FQZ4NEpo8E4JCZQEOb2NIfOuiaQLL6Otkt7W3Rmu6Tv3AkgYdRA/132","nickname":"键盘上的魔术","note":"","ucode":"A731D721FB8D3A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1583833,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/E3XKbwTv6WTssolgqZjZCkiazHgl2IdBYfwVfAcB7Ff3krsIQeBIBFQLQE1Kw91LFbl3lic2EzgdfNiciaYDlJlELA/132","nickname":"rike","note":"","ucode":"920AAD0BD9245C","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":546996,"discussion_content":"同时缓存热点字节码和编译过的机器码，要有关联关系","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1642489830,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":136721,"ip_address":""},"score":546996,"extra":""}]}]},{"had_liked":false,"id":8257,"user_name":"luyuni","can_delete":false,"product_type":"c1","uid":1126931,"ip_address":"","ucode":"AABF7CF0CCBE1F","user_header":"https://static001.geekbang.org/account/avatar/00/11/32/13/fca7c3a5.jpg","comment_is_top":false,"comment_ctime":1526006894,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"108900189294","product_id":100006701,"comment_content":"我连评论也不敢落下","like_count":25},{"had_liked":false,"id":24110,"user_name":"Dee1024","can_delete":false,"product_type":"c1","uid":1158554,"ip_address":"","ucode":"343D9A0F19602E","user_header":"https://static001.geekbang.org/account/avatar/00/11/ad/9a/e9d32750.jpg","comment_is_top":false,"comment_ctime":1536803582,"is_pvip":false,"replies":[{"id":"8814","content":"精辟","user_name":"作者回复","user_name_real":"杨晓峰","uid":"1009360","ctime":1536809348,"ip_address":"","comment_id":24110,"utype":1}],"discussion_count":1,"race_medal":0,"score":"96026084094","product_id":100006701,"comment_content":"传统Java是解释型的语言，现在的JIT、AOT，让Java也支持了编译型语言的特性；<br>传统Java是面向对象的语言，JDK8引入Lambda，让Java也有了函数式编程的能力；<br>传统的Java是命令式编程范式，JDK9引入Flow，让Java更好的支持响应式编程范式；<br>... ...<br><br>Java是一个成熟稳定的语言和平台，更是历久弥新语言。<br>","like_count":22,"discussions":[{"author":{"id":1009360,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/66/d0/6541f1d5.jpg","nickname":"杨晓峰","note":"","ucode":"2BF255467A978F","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":423844,"discussion_content":"精辟","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1536809348,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":14514,"user_name":"superpig","can_delete":false,"product_type":"c1","uid":1160133,"ip_address":"","ucode":"EC6A2CE1BA8265","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eo0YamXCV7X5xe6N3micTLPxglqmwOtuIk3RASOHrqxdNA8zNmHdxvibz0WydAWySNK1sCblA0iaNk4A/132","comment_is_top":false,"comment_ctime":1530501429,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"91724814645","product_id":100006701,"comment_content":"C&#47;C++程序员转型中。我理解JVM产生的用意，其实是早年间C的跨平台软件，只能靠预编译宏来实现WORA，那真是地狱一样的代码。<br>此外，C的编译器更不存在跨平台的概念。Java加了一层字节码，Javac这个编译器只把代码转换成字节码，这样在代码和编译器这一层，其实就是做了一次归一。<br>Java的跨平台能力，主要来自于JVM，如果一个芯片平台没有JVM支持，那么javac产生的字节码肯定就无法在这个平台上运行了。<br>JVM的思想是屏蔽掉底层硬件的差异，为开发者提供一个纯软件的平台，这样不仅简化程序运行，更简化了编程开发的过程。基于这个思想，微软也推出了自己的跨平台虚拟机.net framework，只不过近年开始才真正的跨到Linux上。<br>既然JVM执行的是字节码，那么只要能编译出字节码，就无所谓开发程序所用的高级语言，scala也在JVM上跑就是这个道理。对应的，微软的sharp系列语言也是这个道理。<br>这样看来，对上，JVM可以兼容多种高级语言，只要有编译器将这种高级语言编译成字节码就可以；对下，JVM可以兼容多个平台，只要JVM对这个平台进行过适配就可以让程序跑起来。<br>这个思想其实就是现代软件工程里的模块化、层次化的思想，也让我想起了TCP&#47;IP协议族里的层次模型，Everything over IP, IP over everything. 在Java的世界里，JVM就是IP了。<br>但是JVM也因此成为了瓶颈，执行效率、CPU内存IO管理、进程线程等等，还有C中完全不存在的垃圾回收机制，这些事都需要JVM去做，这也是C程序员吐槽Java效率低的原因之一。不过这样也带来一个好处，就是无论我们需要定位问题、效率优化或是做什么，基本上盯着JVM就可以了。<br>因此要写出高效的Java代码，JVM肯定是绕不过的话题。","like_count":22},{"had_liked":false,"id":7533,"user_name":"公号-技术夜未眠","can_delete":false,"product_type":"c1","uid":1013683,"ip_address":"","ucode":"83825B57CBD952","user_header":"https://static001.geekbang.org/account/avatar/00/0f/77/b3/991f3f9b.jpg","comment_is_top":false,"comment_ctime":1525512600,"is_pvip":true,"replies":[{"id":"2197","content":"对，深入有利于解决更多有难度的工作","user_name":"作者回复","user_name_real":"杨晓峰","uid":"1009360","ctime":1525572708,"ip_address":"","comment_id":7533,"utype":1}],"discussion_count":2,"race_medal":0,"score":"91719825816","product_id":100006701,"comment_content":"今日文章心得:个人理解的Java平台技术体系包括了以下几个重要组成部分：<br>Java程序设计语言<br>各种硬件平台上的Java虚拟机<br>Class文件格式<br>Java API类库及相关工具<br>来自商业机构和开源社区第三方Java类库<br><br>可以把Java程序设计语言、Java虚拟机、Java API类库及相关工具，这三部分统称为JDK，JDK是用于支持Java程序开发的最小环境；可以把Java API类库中的Java SE API子集和Java虚拟机这两部分统称为JRE，JRE是支持Java程序运行的标准环境。<br><br>提起Java，必然会想起TA跨平台的特性，但是跨平台重要吗？重要！因为可以write once，run anywhere，这是程序员的终极梦想之一。但是跨平台重要吗？不重要！作为程序语言，会更加关注TA的生态、兼容性、安全性、稳定性，以及语言自身的与时俱进。要要理解Java平台，JVM是必须要迈过去的坎，将会看到另外的风景。<br><br>为什么我们就不能把JVM作为透明的存在呢？<br><br>勿在浮沙筑高台，以JVM的GC为例。既然Java等诸多高级程序语言都已经实现了自动化内存管理，那我们为什么还要去理解内存管理了？因为当我们需要排查各种内存溢出、泄漏等底层问题时，当垃圾收集成为我们开发的软件系统达到更高并发量、更高性能的瓶颈时，我们就需要对这些“自动化”技术实施必要的监控与调节优化。","like_count":21,"discussions":[{"author":{"id":1009360,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/66/d0/6541f1d5.jpg","nickname":"杨晓峰","note":"","ucode":"2BF255467A978F","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":417387,"discussion_content":"对，深入有利于解决更多有难度的工作","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1525572708,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1181486,"avatar":"https://static001.geekbang.org/account/avatar/00/12/07/2e/878d3c92.jpg","nickname":"木木","note":"","ucode":"E82C58AF2604ED","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":62542,"discussion_content":"勿在浮沙筑高台，这句话实在是棒。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574850559,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":8287,"user_name":"Alex","can_delete":false,"product_type":"c1","uid":1109000,"ip_address":"","ucode":"934C5A163D683D","user_header":"https://static001.geekbang.org/account/avatar/00/10/ec/08/2919958c.jpg","comment_is_top":false,"comment_ctime":1526047732,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"74540491764","product_id":100006701,"comment_content":"评论区都是精华啊","like_count":17},{"had_liked":false,"id":33260,"user_name":"雪糕","can_delete":false,"product_type":"c1","uid":1212518,"ip_address":"","ucode":"AA6CF7367D4E3C","user_header":"https://static001.geekbang.org/account/avatar/00/12/80/66/c3000cdc.jpg","comment_is_top":false,"comment_ctime":1539767354,"is_pvip":false,"replies":[{"id":"12320","content":"不错","user_name":"作者回复","user_name_real":"杨晓峰","uid":"1009360","ctime":1540256526,"ip_address":"","comment_id":33260,"utype":1}],"discussion_count":1,"race_medal":0,"score":"70259244090","product_id":100006701,"comment_content":"Hotspot 热点探测使用的方法是调用计数器和回边计数器，虚拟机为每个代码块，每个方法，建立计数器，统计执行次数，超过一定阀值，就视为热点代码，这种实现较为复杂，但是结果更为严谨","like_count":16,"discussions":[{"author":{"id":1009360,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/66/d0/6541f1d5.jpg","nickname":"杨晓峰","note":"","ucode":"2BF255467A978F","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":426957,"discussion_content":"不错","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1540256526,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":7588,"user_name":"吴有为","can_delete":false,"product_type":"c1","uid":1107539,"ip_address":"","ucode":"2D7C1ECEE97FB0","user_header":"https://static001.geekbang.org/account/avatar/00/10/e6/53/4b655144.jpg","comment_is_top":false,"comment_ctime":1525568481,"is_pvip":false,"replies":[{"id":"2184","content":"我的理解不是以class为单位；JIT是方法级","user_name":"作者回复","user_name_real":"杨晓峰","uid":"1009360","ctime":1525571288,"ip_address":"","comment_id":7588,"utype":1}],"discussion_count":1,"race_medal":0,"score":"70245045217","product_id":100006701,"comment_content":"老师，您好，看了文章和大家的评论有点疑问，程序执行的时候，类加载器先把class文件加载到内存中，一般情况下是解释执行，解释器把class里的内容一行行解释为机器语言然后运行。疑问1.每次执行class文件都需要解释整个class文件吗？疑问2.当new了一个对象的时候是怎么解释这个类的，是解释整个这个类对应的class？疑问3.JIT编译的热点代码是指class文件还是class文件的部分内容？","like_count":16,"discussions":[{"author":{"id":1009360,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/66/d0/6541f1d5.jpg","nickname":"杨晓峰","note":"","ucode":"2BF255467A978F","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":417417,"discussion_content":"我的理解不是以class为单位；JIT是方法级","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1525571288,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":7590,"user_name":"jack","can_delete":false,"product_type":"c1","uid":1121915,"ip_address":"","ucode":"DB20757A2FDBD8","user_header":"https://static001.geekbang.org/account/avatar/00/11/1e/7b/2cf1a05a.jpg","comment_is_top":false,"comment_ctime":1525568851,"is_pvip":false,"replies":[{"id":"2183","content":"到位","user_name":"作者回复","user_name_real":"杨晓峰","uid":"1009360","ctime":1525571021,"ip_address":"","comment_id":7590,"utype":1}],"discussion_count":1,"race_medal":0,"score":"53065176403","product_id":100006701,"comment_content":"Java平台包括java语言，class文件结构，jvm，api类库，第三方库，各种编译、监控和诊断工具等。<br>Java语言是一种面向对象的高级语言；通过平台中立的class文件格式和屏蔽底层硬件差异的jvm实现‘一次编写，到处运行’；<br>通过‘垃圾收集器’管理内存的分配和回收。<br>jvm通过使用class文件这种中间表示和具体语言解耦，使得任何在源码早期编译过程中以class文件为中间表示或者<br>能够转换成class文件的具体语言，都能运行jvm之上，也就可以使用jvm的各种特性。<br>api类库主要包含集合、IO&#47;NIO、网络、并发等。<br>第三方库包括各种商业机构和开源社区的java库，如spring、mybatis等。<br>各种工具如javac、jconsole、jmap、jstack等。","like_count":12,"discussions":[{"author":{"id":1009360,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/66/d0/6541f1d5.jpg","nickname":"杨晓峰","note":"","ucode":"2BF255467A978F","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":417418,"discussion_content":"到位","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1525571021,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":7762,"user_name":"恒","can_delete":false,"product_type":"c1","uid":1105216,"ip_address":"","ucode":"5B0BD0F12AE23E","user_header":"https://static001.geekbang.org/account/avatar/00/10/dd/40/b2183a47.jpg","comment_is_top":false,"comment_ctime":1525703524,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"48770343780","product_id":100006701,"comment_content":"1.开发\r<br>按照java平台的语法规范，结合平台提供的三方类库和框架开发程序，\r<br>2.编译\r<br>开发完成后使用平台提供的javac工具将程序编译成.class文件，\r<br>3.加载\r<br>平台通过classloder加载编译成功的.class文件到JVM中\r<br>4.运行\r<br>在运行时，JVM使用JIT将.class文件中的二进制字节码解释或编译（根据使用频率来判断使用解释还是编译）成计算机底层能够读懂的机器代码去执行\r<br>5.回收\r<br>运行期间，通过JVM的垃圾回收，根据参数使用不同的回收方法，将不再使用的内存地址中的数据清空\r<br>6、监控，调优\r<br>在JVM运行时我们还可以通过平台提供的如：jmap，jconsole等进行监控诊断工具，程序的性能进行监控诊断，进行程序的诊断和调优工作\r<br>\r<br>通过这次课的学习，不知道这样理解java平台是否正确","like_count":11},{"had_liked":false,"id":7584,"user_name":"张驰","can_delete":false,"product_type":"c1","uid":1080050,"ip_address":"","ucode":"0ED97C2FCE6599","user_header":"https://static001.geekbang.org/account/avatar/00/10/7a/f2/6770d0a9.jpg","comment_is_top":false,"comment_ctime":1525566749,"is_pvip":false,"replies":[{"id":"2185","content":"简单说，如果没有被jit编译，是的","user_name":"作者回复","user_name_real":"杨晓峰","uid":"1009360","ctime":1525571766,"ip_address":"","comment_id":7584,"utype":1}],"discussion_count":1,"race_medal":0,"score":"44475239709","product_id":100006701,"comment_content":"所有的类运行时解析之后，再次运行时还会重复解析吗？","like_count":10,"discussions":[{"author":{"id":1009360,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/66/d0/6541f1d5.jpg","nickname":"杨晓峰","note":"","ucode":"2BF255467A978F","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":417414,"discussion_content":"简单说，如果没有被jit编译，是的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1525571766,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":7562,"user_name":"迎xiang李","can_delete":false,"product_type":"c1","uid":1091402,"ip_address":"","ucode":"3889CF31F8E43B","user_header":"https://static001.geekbang.org/account/avatar/00/10/a7/4a/7297bc4e.jpg","comment_is_top":false,"comment_ctime":1525529924,"is_pvip":false,"replies":[{"id":"2194","content":"交流有利于提高","user_name":"作者回复","user_name_real":"杨晓峰","uid":"1009360","ctime":1525572539,"ip_address":"","comment_id":7562,"utype":1}],"discussion_count":1,"race_medal":0,"score":"44475202884","product_id":100006701,"comment_content":"Java新手表示学习了，java的运行机制算是看明白了，但是发现还是有很多词汇不太了解。只有看高手们的文章才能发现自己的短板和不熟悉的领悟。期待后面更精彩，全面深入的讲解。感谢作者和各位大神的精彩评论！","like_count":10,"discussions":[{"author":{"id":1009360,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/66/d0/6541f1d5.jpg","nickname":"杨晓峰","note":"","ucode":"2BF255467A978F","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":417402,"discussion_content":"交流有利于提高","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1525572539,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":7463,"user_name":"MOSAIC","can_delete":false,"product_type":"c1","uid":1071945,"ip_address":"","ucode":"6217B689FFC36B","user_header":"https://static001.geekbang.org/account/avatar/00/10/5b/49/90dbe5e5.jpg","comment_is_top":false,"comment_ctime":1525487931,"is_pvip":false,"replies":[{"id":"2157","content":"行家","user_name":"作者回复","user_name_real":"杨晓峰","uid":"1009360","ctime":1525502438,"ip_address":"","comment_id":7463,"utype":1}],"discussion_count":1,"race_medal":0,"score":"44475160891","product_id":100006701,"comment_content":"关于JIT与AOT，我想KVM更有发言权，哈哈，好的东西终被学习与借鉴","like_count":10,"discussions":[{"author":{"id":1009360,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/66/d0/6541f1d5.jpg","nickname":"杨晓峰","note":"","ucode":"2BF255467A978F","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":417351,"discussion_content":"行家","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1525502438,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":215317,"user_name":"SteelHuaSheng","can_delete":false,"product_type":"c1","uid":1396126,"ip_address":"","ucode":"BC8127FC5207FC","user_header":"https://static001.geekbang.org/account/avatar/00/15/4d/9e/04ec08bf.jpg","comment_is_top":false,"comment_ctime":1588952031,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"35948690399","product_id":100006701,"comment_content":"1.语法<br>①数据类型，变量<br>②表达式，语句，代码块，方法<br>③面向对象：封装、继承、多态<br>④异常处理、序列化、多线程<br>⑤集合框架与泛型（数据结构）<br>⑥包、JAR<br>⑦分布式、RMI、Servlet、JSP、EJB、Spring<br><br>2.类库<br>①工具类<br>纯工具：Google Guava<br>纯工具：Apache common（lang，IO，common）<br>测试：junit，testng<br>日志：slf4j + logback<br>序列化：avro，protobuff<br>JSON处理：Jackson，Gson<br>HTTP：apache http compoent<br><br>②框架类<br>应用开发框架：Spring +  Spring Boot<br>REST API开发：Swagger Codegen + Swagger UI<br>网络框架：Netty<br>ORM框架：Hibernate，MyBatis &#47; iBatis<br><br>3.工具<br>①maven：构建和打包。<br>②git：源代码版本控制<br>③IDE<br>④Jenkins：自动化持续集成<br><br>4.底层进阶<br>①内存相关<br>内存堆（Heap）和线程栈<br>JMM<br>GC垃圾回收（Garbage Collection）<br>GC log分析和GC调优<br><br>②JVM和Java规范相关<br>JVM + Java字节码<br>Class文件格式<br>Class Loader<br><br>③进阶<br>多线程和线程安全<br>程序可读性<br>优化<br><br>5.能力（不仅限于某种编程语言）<br>①本能 + 直觉 ：对问题的难度、复杂性和需要的时间有一个直觉的反应。能够快速且准 确的判断问题的难点和可能出问题的地方<br><br>②分解 + 架构：拿到一个问题的时候，可以将问题分解为某种编程语言 &#47; 技术可以解决 的子模块 &#47; 功能<br><br>③解决问题：任何工作中的问题。从需求分析到架构设计，从接口设计到代码实现，从文档到测试，从脑洞大开到靠谱创新，从内存使用到 CPU占用，从 bug 可以重现到 bug 难以重现，从集成到联调，从数据到环境，从数据库到消息队列，从在线到离线， 从开发到部署，从测试环境的问题到生产环境的问题，从单台机器的问题到集群分布 式的问题，从上线到维护，从技术支持到 hotfix，从性能到监控，从技术栈更新到系统 完全重构。只有想不到，没有做不到。","like_count":9},{"had_liked":false,"id":35612,"user_name":"维#","can_delete":false,"product_type":"c1","uid":1125848,"ip_address":"","ucode":"DC5FFFD2C1E895","user_header":"https://static001.geekbang.org/account/avatar/00/11/2d/d8/e06ec517.jpg","comment_is_top":false,"comment_ctime":1540706454,"is_pvip":true,"replies":[{"id":"12672","content":"非常形象、深入的总结","user_name":"作者回复","user_name_real":"杨晓峰","uid":"1009360","ctime":1540740082,"ip_address":"","comment_id":35612,"utype":1}],"discussion_count":1,"race_medal":0,"score":"35900444822","product_id":100006701,"comment_content":"java的“一次编写，到处运行”，准确一点可以说是“一次编译，到处运行”，因为有了jvm的存在，编写的java代码编译为字节码，在任何平台的jvm虚拟机都可以上解释执行（简单点理解，抛开细节）。<br><br>jvm这种机制其实也是抽象和封装的体现，从01到汇编，从汇编到c，从c到java，不断地屏蔽底层的复杂性和繁琐的细节，供给上层的简单清晰的使用。我们“不用再去管硬件细节了”，“不用再去管内存了”，代码的看起来也更加人类语言了，jvm都让我们不用管操作系统平台了，至于过程中的性能啊，效率啊方面得失是值得的。<br><br>最后 write once, run anywhere的感受是mac写代码，linux运行。<br><br>","like_count":8,"discussions":[{"author":{"id":1009360,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/66/d0/6541f1d5.jpg","nickname":"杨晓峰","note":"","ucode":"2BF255467A978F","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":427598,"discussion_content":"非常形象、深入的总结","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1540740082,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":8860,"user_name":"有铭","can_delete":false,"product_type":"c1","uid":1046302,"ip_address":"","ucode":"2C7CB36CA5C04C","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/3XbCueYYVWTiclv8T5tFpwiblOxLphvSZxL4ujMdqVMibZnOiaFK2C5nKRGv407iaAsrI0CDICYVQJtiaITzkjfjbvrQ/132","comment_is_top":false,"comment_ctime":1526486191,"is_pvip":false,"replies":[{"id":"2698","content":"未来，可以看看9以后的版本，已经去掉jdk里面的jre，长远看单独发布一个jre的需要变小了，当然我们程序总还要用，使用jdk，或者用jlink订制runtime，也许是更好选择","user_name":"作者回复","user_name_real":"杨晓峰","uid":"1009360","ctime":1526597637,"ip_address":"","comment_id":8860,"utype":1}],"discussion_count":1,"race_medal":0,"score":"31591257263","product_id":100006701,"comment_content":"我一直没想明白一个问题，既然jdk是jre的超集，为啥甲骨文提供的jdk安装包要同时安装他们两个。只装jdk不就行了吗，而且这一现象在所有平台均存在","like_count":7,"discussions":[{"author":{"id":1009360,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/66/d0/6541f1d5.jpg","nickname":"杨晓峰","note":"","ucode":"2BF255467A978F","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":417875,"discussion_content":"未来，可以看看9以后的版本，已经去掉jdk里面的jre，长远看单独发布一个jre的需要变小了，当然我们程序总还要用，使用jdk，或者用jlink订制runtime，也许是更好选择","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1526597637,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":45844,"user_name":"一个程序员的成长","can_delete":false,"product_type":"c1","uid":1008900,"ip_address":"","ucode":"168CDADD41B65F","user_header":"https://static001.geekbang.org/account/avatar/00/0f/65/04/bf12d036.jpg","comment_is_top":false,"comment_ctime":1543802992,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"27313606768","product_id":100006701,"comment_content":"1、JVM中的一些参数设置的意义？<br>-Xint：告诉JVM只进行解释执行，不对代码进行编译；<br>-Xcomp：告诉JVM关闭解释器，不进行解释执行或者叫做最大优化级别；<br><br>2、为什么说Java是跨平台的？<br>什么是跨平台？<br>不依赖于操作系统，也不依赖硬件环境；<br>不同的操作系统下有不同的JVM，所以说JVM不是跨平台的；<br>Java语言依赖于JVM，JVM给JAVA提供了运行环境，所以JAVA是跨平台的；<br><br>Java程序编译之后的代码不能被硬件系统直接识别，而是生成字节码(.class)文件，然后不同的操作系统上装有不同的JVM，由JVM来把字节码翻译成所对应的机器能够是别的机器码。所以说对于Java开发者来说，不需要考虑硬件平台是什么，所以Java是可以跨平台的；<br><br>3、JRE和JDK有什么区别？<br>JRE就是Java的运行环境，包含JVM和Java类库，以及一些模块等；<br>JDK就是JRE的一个超集，提供了更多的工具，比如编译器、各种诊断工具等；<br><br>4、解释执行和编译执行<br>解释执行：所谓执行相当于在我们的代码和电脑之间有一个翻译官，每当我们输入一个指令，那么这个翻译官就会及时的翻译给机器；<br><br>编译执行：编译执行就是通过编译器将我们输入的所有指令进行编译，然后一次的翻译给机器可以识别的机器码；<br><br>通过比较两种执行方式我们可以发现，解释执行对于程序员的要求可能低一点，但是执行效率比较低，相反编译执行对程序员你的要求高一点，但是它的执行效率也比较高一点；<br><br>5、Java是解释执行的吗？<br>这句话说得不是很正确，我们开发的源代码，首先通过Javac将源代码编译成字节码文件，然后在运行时通过JVM内嵌的解释器将字节码转换为最终的机器码。但是常见的JVM都提供了编译器，编译器能够在运行时将热点代码编译成机器码，这种情况下部分代码就属于编译执行，而不是解释执行。","like_count":6,"discussions":[{"author":{"id":1583833,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/E3XKbwTv6WTssolgqZjZCkiazHgl2IdBYfwVfAcB7Ff3krsIQeBIBFQLQE1Kw91LFbl3lic2EzgdfNiciaYDlJlELA/132","nickname":"rike","note":"","ucode":"920AAD0BD9245C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":136948,"discussion_content":"“不同的操作系统下有不同的JVM，所以说JVM不是跨平台的；”，这句话后面，应该是“JVM不是跨平台的”这样描述吧？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579172767,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":18390,"user_name":"hailowell","can_delete":false,"product_type":"c1","uid":1195572,"ip_address":"","ucode":"557DCAB01710AB","user_header":"","comment_is_top":false,"comment_ctime":1533287680,"is_pvip":false,"replies":[{"id":"6456","content":"会逆优化；平时统计中jvm会默认周期性做衰减","user_name":"作者回复","user_name_real":"杨晓峰","uid":"1009360","ctime":1533397592,"ip_address":"","comment_id":18390,"utype":1}],"discussion_count":1,"race_medal":0,"score":"27303091456","product_id":100006701,"comment_content":"老师，看完后有个问题 jit是收集信息后编译热点代码 随着运行时间的增加 每个时间段的热点代码可能会变化吧？<br>比如测试系统 在登录模块的验证方法 每次登录循环调用10万次验证方法 这个验证方法是不是被认为热点代码？ 如果只有一个人登录过，之后验证方法再没有调用过 变成了事实上的冷代码 jvm面对不同时间段内相对热点的代码会有处理吗？","like_count":6,"discussions":[{"author":{"id":1009360,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/66/d0/6541f1d5.jpg","nickname":"杨晓峰","note":"","ucode":"2BF255467A978F","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":421504,"discussion_content":"会逆优化；平时统计中jvm会默认周期性做衰减","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1533397592,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":11278,"user_name":"乖乖","can_delete":false,"product_type":"c1","uid":1142190,"ip_address":"","ucode":"6A2F0F23592A0A","user_header":"https://static001.geekbang.org/account/avatar/00/11/6d/ae/61e21298.jpg","comment_is_top":false,"comment_ctime":1528019292,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"27297823068","product_id":100006701,"comment_content":"评论区 从来就不缺 神","like_count":6},{"had_liked":false,"id":10197,"user_name":"大熊","can_delete":false,"product_type":"c1","uid":1101491,"ip_address":"","ucode":"DBD3FEE0AA6DB6","user_header":"https://static001.geekbang.org/account/avatar/00/10/ce/b3/804aa247.jpg","comment_is_top":false,"comment_ctime":1527341749,"is_pvip":false,"replies":[{"id":"3218","content":"jit是运行时才做的，需要预热才知道哪些是热点；<br>aot是编译期，静态的，直接编成类似类库的东西","user_name":"作者回复","user_name_real":"杨晓峰","uid":"1009360","ctime":1527468122,"ip_address":"","comment_id":10197,"utype":1}],"discussion_count":1,"race_medal":0,"score":"27297145525","product_id":100006701,"comment_content":"首先javac把源码编译成字节码(.class文件)，然后在程序运行时JVM把需要的.class文件加载内存，解释器逐行把该文件解释成机器码，在同样程序运行过程中部分热点代码可以通过JIT编译成机器码(不是逐行)并存在缓存里(运行时编译保证了可移植性)，下次运行可以直接从缓存里取机器码，效率更高。<br>AOT跟JIT的区别还是不太理解，原文的话是～AOT直接将字节码编译成机器代码，这样就避免了 JIT 预热等各方面的开销？<br>其他有不对的地方，麻烦指正","like_count":6,"discussions":[{"author":{"id":1009360,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/66/d0/6541f1d5.jpg","nickname":"杨晓峰","note":"","ucode":"2BF255467A978F","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":418388,"discussion_content":"jit是运行时才做的，需要预热才知道哪些是热点；\naot是编译期，静态的，直接编成类似类库的东西","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1527468122,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":8374,"user_name":"ls","can_delete":false,"product_type":"c1","uid":1007293,"ip_address":"","ucode":"6C14A1D24DDC2E","user_header":"https://static001.geekbang.org/account/avatar/00/0f/5e/bd/e28f8ce5.jpg","comment_is_top":false,"comment_ctime":1526131921,"is_pvip":false,"discussion_count":3,"race_medal":0,"score":"27295935697","product_id":100006701,"comment_content":"之前看到过一个理解：编译执行就好像做了一桌子的菜，坐到餐桌就可以吃了，而解释执行就像吃火锅，需要一边等，一边吃，所以效率会慢<br><br>对Java理解不好，有个疑问：为什么不能一开始把java源码翻译成各个平台的机器码？这样到JVM层操作时，再选择JVM所在的平台运行其机器码，这样效率是否会高点。","like_count":6,"discussions":[{"author":{"id":1816159,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/b6/5f/2bb0296b.jpg","nickname":"Leon","note":"","ucode":"C2ACD1BEFDF3E0","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":154892,"discussion_content":"大概因为开发完成到部署之前, 无法预测到底是用了什么系统平台, 生成所有平台的机器码费时费力, 而且不能适应新出来的系统","likes_number":4,"is_delete":false,"is_hidden":false,"ctime":1580195747,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2697700,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/LFJZ4x47rvShGhsePLIxc8EzdlBxAmVAIjJ2FQZ4NEpo8E4JCZQEOb2NIfOuiaQLL6Otkt7W3Rmu6Tv3AkgYdRA/132","nickname":"键盘上的魔术","note":"","ucode":"A731D721FB8D3A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":547002,"discussion_content":"无法穷举这么多平台，编译过程将会非常漫长","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1642491721,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1666944,"avatar":"https://static001.geekbang.org/account/avatar/00/19/6f/80/a0cddd72.jpg","nickname":"皓宇QAQ","note":"","ucode":"18AB8D654A0917","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":17140,"discussion_content":"那jvm干啥？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1568950357,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":7500,"user_name":"mongo","can_delete":false,"product_type":"c1","uid":1113124,"ip_address":"","ucode":"F39FE783793A17","user_header":"https://static001.geekbang.org/account/avatar/00/10/fc/24/7d43d807.jpg","comment_is_top":false,"comment_ctime":1525496330,"is_pvip":false,"replies":[{"id":"2158","content":"简单，jvm启动时加上 -XX:PrintCompilation,就能把相关信息打出来","user_name":"作者回复","user_name_real":"杨晓峰","uid":"1009360","ctime":1525502747,"ip_address":"","comment_id":7500,"utype":1}],"discussion_count":1,"race_medal":0,"score":"27295300106","product_id":100006701,"comment_content":"首先什么是解释执行？什么是编译执行？我采纳了这位知乎大神的说法 https:&#47;&#47;www.zhihu.com&#47;question&#47;21486706&#47;answer&#47;18642540 。对于编译执行？是不是动态代理的实现原理字节码重组后的目标代理类的执行就是属于编译执行？包括反射的实现也是属于编译执行？这个猜想怎么验证？😂😂","like_count":6,"discussions":[{"author":{"id":1009360,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/66/d0/6541f1d5.jpg","nickname":"杨晓峰","note":"","ucode":"2BF255467A978F","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":417372,"discussion_content":"简单，jvm启动时加上 -XX:PrintCompilation,就能把相关信息打出来","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1525502747,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":7681,"user_name":"墨川","can_delete":false,"product_type":"c1","uid":1121129,"ip_address":"","ucode":"123C3B4D935AD8","user_header":"https://static001.geekbang.org/account/avatar/00/11/1b/69/3c933205.jpg","comment_is_top":false,"comment_ctime":1525620780,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"23000457260","product_id":100006701,"comment_content":"老师讲的很精彩受教了，评论区好多高手。赶紧拿个小本本记下来","like_count":5},{"had_liked":false,"id":7674,"user_name":"祥子.Ken","can_delete":false,"product_type":"c1","uid":1113709,"ip_address":"","ucode":"7FB079E93E3345","user_header":"https://static001.geekbang.org/account/avatar/00/10/fe/6d/d241d795.jpg","comment_is_top":false,"comment_ctime":1525618252,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"23000454732","product_id":100006701,"comment_content":"看课程和评论涨知识了，不在此献丑。<br>分享个人的听课方式，课程已标明了后续的课程名称(问题)，我已先自我测试回答后续的问题，再听后续课程，会印象更深刻一点。","like_count":5},{"had_liked":false,"id":132837,"user_name":"Geek_1b033d","can_delete":false,"product_type":"c1","uid":1662143,"ip_address":"","ucode":"F610804F7B8CE6","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epGhcTibyH7n2WdhYXgaAMoSthDSiaicjne3Uz6Ac2nXDWDyaCC7KWZMemmbr04Vo7AudwE6JcstVhyA/132","comment_is_top":false,"comment_ctime":1568249560,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"18748118744","product_id":100006701,"comment_content":"其实编译器可以分为：前端编译器、JIT 编译器和AOT编译器，前端编译器就是平时使用的javac，这种称为前端编译器，它负责编译成.class文件。当源代码转化为字节码之后，其实要运行程序，有两种选择。一种是使用 Java 解释器解释执行字节码，另一种则是使用 JIT 编译器将字节码转化为本地机器代码（JIT也分为两种，C1和C2）。这两种方式的区别在于，前者启动速度快但运行速度慢，而后者启动速度慢但运行速度快。至于为什么会这样，其原因很简单。因为解释器不需要像 JIT 编译器一样，将所有字节码都转化为机器码，自然就少去了优化的时间。而当 JIT 编译器完成第一次编译后，其会将字节码对应的机器码保存下来，下次可以直接使用。而我们知道，机器码的运行效率肯定是高于 Java 解释器的。所以在实际情况中，为了运行速度以及效率，我们通常采用两者相结合的方式进行 Java 代码的编译执行。我们也可以自己选择三种模式混合模式（Mixed Mode），解释模式（Interpreted Mode），编译模式（Compiled Mode）<br>","like_count":4},{"had_liked":false,"id":40503,"user_name":"无尘","can_delete":false,"product_type":"c1","uid":1298401,"ip_address":"","ucode":"0DDE50A1F94807","user_header":"https://static001.geekbang.org/account/avatar/00/13/cf/e1/adacde45.jpg","comment_is_top":false,"comment_ctime":1542627026,"is_pvip":false,"replies":[{"id":"15390","content":"不是，比如，方法长度超标，codecache满了，后面35讲也提到了计数衰减等","user_name":"作者回复","user_name_real":"杨晓峰","uid":"1009360","ctime":1543157678,"ip_address":"","comment_id":40503,"utype":1}],"discussion_count":1,"race_medal":0,"score":"18722496210","product_id":100006701,"comment_content":"JDK 8 实际是解释和编译混合的一种模式，即所谓的混合模式（-Xmixed）。通常运行在 server 模式的 JVM，会进行上万次调用以收集足够的信息进行高效的编译，client 模式这个门限是 1500 次。<br><br>请教下，server模式下是不是所有调用上万次的代码都会被jit优化？","like_count":4,"discussions":[{"author":{"id":1009360,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/66/d0/6541f1d5.jpg","nickname":"杨晓峰","note":"","ucode":"2BF255467A978F","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":429542,"discussion_content":"不是，比如，方法长度超标，codecache满了，后面35讲也提到了计数衰减等","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543157678,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":17926,"user_name":"Geek_0db725","can_delete":false,"product_type":"c1","uid":1136666,"ip_address":"","ucode":"FDAC0BC2F377CA","user_header":"https://static001.geekbang.org/account/avatar/00/11/58/1a/091b0e8b.jpg","comment_is_top":false,"comment_ctime":1533030828,"is_pvip":false,"replies":[{"id":"6314","content":"是的，aot也可以静态编译","user_name":"作者回复","user_name_real":"杨晓峰","uid":"1009360","ctime":1533141334,"ip_address":"","comment_id":17926,"utype":1}],"discussion_count":1,"race_medal":0,"score":"18712900012","product_id":100006701,"comment_content":"可否这么理解，&quot;java是解释执行&quot;这句话对而不全对。<br>正常流程，java编译为字节码class文件，而jvm通过解释器将字节码转化为机器码，此种情况应该就属于解释执行。<br>但是，文章中举例说明的，动态编译，JIT在运行时将热点代码编译成机器码，属于编译执行，就不属于解释执行了。<br>不知道这么理解是否正确。","like_count":4,"discussions":[{"author":{"id":1009360,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/66/d0/6541f1d5.jpg","nickname":"杨晓峰","note":"","ucode":"2BF255467A978F","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":421331,"discussion_content":"是的，aot也可以静态编译","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1533141334,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":63871,"user_name":"石子儿","can_delete":false,"product_type":"c1","uid":1201954,"ip_address":"","ucode":"FD5A022F930C65","user_header":"https://static001.geekbang.org/account/avatar/00/12/57/22/8944f1f5.jpg","comment_is_top":false,"comment_ctime":1548568683,"is_pvip":false,"replies":[{"id":"23344","content":"术业有专攻，每个人有自己的职业规划，，毕竟已经工作9年了，这山望着那山高未必是好事，我建议思考下自己的核心竞争力是什么，准备在哪方面继续积累、突破？或者通俗一点，哪些技能或知识让我们值钱，哪些方面积累能让我们更值钱...","user_name":"作者回复","user_name_real":"杨晓峰","uid":"1009360","ctime":1549818020,"ip_address":"","comment_id":63871,"utype":1}],"discussion_count":1,"race_medal":0,"score":"14433470571","product_id":100006701,"comment_content":"我从事Java开发已经有9年了，本以为对Java开发已经有一定的了解。但看了第一篇文章就有看天书的感觉。jvm曾经由于好奇，也看书了解过，但工作中没有涉及到，没有实际应用过，就都忘记了。感觉自己在学习和工作中就是狗熊掰棒子，到最后没什么沉淀。怎样应对这种情况呢？","like_count":3,"discussions":[{"author":{"id":1009360,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/66/d0/6541f1d5.jpg","nickname":"杨晓峰","note":"","ucode":"2BF255467A978F","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":437741,"discussion_content":"术业有专攻，每个人有自己的职业规划，，毕竟已经工作9年了，这山望着那山高未必是好事，我建议思考下自己的核心竞争力是什么，准备在哪方面继续积累、突破？或者通俗一点，哪些技能或知识让我们值钱，哪些方面积累能让我们更值钱...","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1549818020,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":63249,"user_name":"年轮","can_delete":false,"product_type":"c1","uid":1003452,"ip_address":"","ucode":"C70B8CD2FA0F54","user_header":"https://static001.geekbang.org/account/avatar/00/0f/4f/bc/501ce428.jpg","comment_is_top":false,"comment_ctime":1548311512,"is_pvip":false,"replies":[{"id":"23339","content":"已经发生了","user_name":"作者回复","user_name_real":"杨晓峰","uid":"1009360","ctime":1549816883,"ip_address":"","comment_id":63249,"utype":1}],"discussion_count":1,"race_medal":0,"score":"14433213400","product_id":100006701,"comment_content":"jre退出历史舞台，好劲爆的消息啊","like_count":3,"discussions":[{"author":{"id":1009360,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/66/d0/6541f1d5.jpg","nickname":"杨晓峰","note":"","ucode":"2BF255467A978F","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":437520,"discussion_content":"已经发生了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1549816883,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":48395,"user_name":"布衣骇客","can_delete":false,"product_type":"c1","uid":1256280,"ip_address":"","ucode":"5226B0F67090D1","user_header":"https://static001.geekbang.org/account/avatar/00/13/2b/58/11c05ccb.jpg","comment_is_top":false,"comment_ctime":1544435220,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"14429337108","product_id":100006701,"comment_content":"迟到的留言，虽然上不了墙，真的如同吸毒般深深吸引我了，看了这个戒掉了游戏，这个真的神了","like_count":3},{"had_liked":false,"id":35275,"user_name":"慕一","can_delete":false,"product_type":"c1","uid":1267534,"ip_address":"","ucode":"FF8E3D626B0953","user_header":"https://static001.geekbang.org/account/avatar/00/13/57/4e/fe8d3346.jpg","comment_is_top":false,"comment_ctime":1540487133,"is_pvip":false,"replies":[{"id":"12671","content":"hotspot jvm只要不是显式指定解释模式（也可以说是关闭jit），就会起作用；<br>你可以Java启动加上类似-XX:+PrintCompilation 来看细节","user_name":"作者回复","user_name_real":"杨晓峰","uid":"1009360","ctime":1540740043,"ip_address":"","comment_id":35275,"utype":1}],"discussion_count":1,"race_medal":0,"score":"14425389021","product_id":100006701,"comment_content":"请问老师，什么情况下使用jit进行编译Java代码？","like_count":3,"discussions":[{"author":{"id":1009360,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/66/d0/6541f1d5.jpg","nickname":"杨晓峰","note":"","ucode":"2BF255467A978F","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":427498,"discussion_content":"hotspot jvm只要不是显式指定解释模式（也可以说是关闭jit），就会起作用；\n你可以Java启动加上类似-XX:+PrintCompilation 来看细节","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1540740043,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":12332,"user_name":"robbin🐳","can_delete":false,"product_type":"c1","uid":1005984,"ip_address":"","ucode":"1333C3E0C5567F","user_header":"https://static001.geekbang.org/account/avatar/00/0f/59/a0/66486058.jpg","comment_is_top":false,"comment_ctime":1528766785,"is_pvip":false,"replies":[{"id":"4085","content":"当你的应用对启动时间非常敏感时；可以看Java9以后的jdk文档","user_name":"作者回复","user_name_real":"杨晓峰","uid":"1009360","ctime":1528818356,"ip_address":"","comment_id":12332,"utype":1}],"discussion_count":1,"race_medal":0,"score":"14413668673","product_id":100006701,"comment_content":"aot的这种模式我们一般在什么场景来使用，有什么标准规范这类可以参考吗？或者老师可以帮忙讲解下吗？","like_count":3,"discussions":[{"author":{"id":1009360,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/66/d0/6541f1d5.jpg","nickname":"杨晓峰","note":"","ucode":"2BF255467A978F","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":419218,"discussion_content":"当你的应用对启动时间非常敏感时；可以看Java9以后的jdk文档","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1528818356,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":11792,"user_name":"改名不换人","can_delete":false,"product_type":"c1","uid":1118242,"ip_address":"","ucode":"7E25577829FA0F","user_header":"https://static001.geekbang.org/account/avatar/00/11/10/22/910f705c.jpg","comment_is_top":false,"comment_ctime":1528354976,"is_pvip":false,"replies":[{"id":"3867","content":"我理解是被动","user_name":"作者回复","user_name_real":"杨晓峰","uid":"1009360","ctime":1528380254,"ip_address":"","comment_id":11792,"utype":1}],"discussion_count":1,"race_medal":0,"score":"14413256864","product_id":100006701,"comment_content":"server模式下，JVM会进行上万次调用收集信息已便进行高效的编译，将其中的部门热点代码进行运行时编译，请问这上万次调用是JVM主动发生的，还是应用程序在使用过程中，JVM被动收集的呢？","like_count":3,"discussions":[{"author":{"id":1009360,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/66/d0/6541f1d5.jpg","nickname":"杨晓峰","note":"","ucode":"2BF255467A978F","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":419001,"discussion_content":"我理解是被动","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1528380254,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":8306,"user_name":"飞鸿雪浪","can_delete":false,"product_type":"c1","uid":1123725,"ip_address":"","ucode":"0ED4E1C0BE5918","user_header":"","comment_is_top":false,"comment_ctime":1526084799,"is_pvip":false,"replies":[{"id":"2446","content":"我可能没说清楚，有了jigsaw jlink，自己可以定制最合适的runtime，另外jre最初存在部分原因是类似web start，applet的需要，现在也基本进入终场了","user_name":"作者回复","user_name_real":"杨晓峰","uid":"1009360","ctime":1526102134,"ip_address":"","comment_id":8306,"utype":1}],"discussion_count":1,"race_medal":0,"score":"14410986687","product_id":100006701,"comment_content":"jre最终取消，是不是和golang一样，将运行时和代码一同编译成目标机器码，来实现跨平台？","like_count":3,"discussions":[{"author":{"id":1009360,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/66/d0/6541f1d5.jpg","nickname":"杨晓峰","note":"","ucode":"2BF255467A978F","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":417662,"discussion_content":"我可能没说清楚，有了jigsaw jlink，自己可以定制最合适的runtime，另外jre最初存在部分原因是类似web start，applet的需要，现在也基本进入终场了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1526102134,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":8155,"user_name":"昆少","can_delete":false,"product_type":"c1","uid":1125929,"ip_address":"","ucode":"638C655AB26A10","user_header":"","comment_is_top":false,"comment_ctime":1525928034,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"14410829922","product_id":100006701,"comment_content":"天啊，评论里满满都是干货。我太想进步了！","like_count":3},{"had_liked":false,"id":7487,"user_name":"老猫","can_delete":false,"product_type":"c1","uid":1116430,"ip_address":"","ucode":"9B9D1A472C821E","user_header":"https://static001.geekbang.org/account/avatar/00/11/09/0e/52bceddf.jpg","comment_is_top":false,"comment_ctime":1525492844,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"14410394732","product_id":100006701,"comment_content":"还在学习Java ，给不出啥评论，但是看文章和评论，学到不少东西","like_count":3},{"had_liked":false,"id":7428,"user_name":"过往云烟","can_delete":false,"product_type":"c1","uid":1116713,"ip_address":"","ucode":"B38DF5D78AB82F","user_header":"https://static001.geekbang.org/account/avatar/00/11/0a/29/44b109f9.jpg","comment_is_top":false,"comment_ctime":1525480440,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"14410382328","product_id":100006701,"comment_content":"java是一次编译，各个平台都会运行的。java执行的时候并不只是解释执行，有的时候会把部分代码编译成机器码。所以java是混合编译的。 到了jaca9就会出来aot，直接把某个类库编译成二进制文件，这样加快运行。","like_count":3},{"had_liked":false,"id":95825,"user_name":"蓝士钦","can_delete":false,"product_type":"c1","uid":1229516,"ip_address":"","ucode":"726EB5C8EF1249","user_header":"https://static001.geekbang.org/account/avatar/00/12/c2/cc/ca22bb7c.jpg","comment_is_top":false,"comment_ctime":1558192319,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10148126911","product_id":100006701,"comment_content":"对Java平台的理解：<br>Java是一种面向对象的语言，最显著的特性有两点：<br>1. 一次编写到处运行，主要体现在一次编写，与C语言相比C语言编译成不同平台的可执行程序需要针对不同平台修改代码再编译，Java解决了这个痛点，只需要编写一次代码，通过不同平台的JVM虚拟机得到跨平台能力。<br>2. 垃圾收集，自动分配和回收内存，开发人员不需要自己分配和释放内存。<br>JRE(Java Runtime Environment) 包含了JVM和Java类库。<br>JDK包含JRE、编译器、诊断工具等。<br>“Java是解释执行”这个说法不太正确，Java程序的运行分为解释模式，混合模式，编译模式。<br>解释模式：一般情况下源代码通过javac被编译成字节码，通过JVM解释执行。<br>混合模式：我们所熟知的Oracle JDK 内置的JVM默认运行模式为mixed mode 混合模式，JVM中包含了JIT即使编译器可以分析出反复执行的热点代码，将热点代码优化后编译成机器码，下次再执行热点代码时将直接执行机器码。混合模式好处是对热点代码进行分析优化，能够使编译出的机器码性能达到最优，劣势是机器码不存在磁盘上，而是在内存中，占用一定内存，并且JIT会影响JVM启动速度，代码分析优化占用一定资源。<br>编译模式：编译模式将所有代码都编译成.so文件存放在磁盘上，好处是不占用内存，劣势是编译的代码没有经过运行时优化，并不是最优。甚至可能不如JIT。<br>JIT模式和AOT模式可以使用不同的代码进行对比，扩展知识点：泛型、Lambda，基础类库、容器、IO、多线程、网络、安全、以及第三方类库。<br>一个合格的Java工程师，我认为必须掌握的基础部分主要有：JVM、类加载机制、加载过程、以及优化。<br><br>疑问：<br>1.JIT模式是JVM自己的分析，我们可以自己指定热点代码吗？<br>2.AOT模式所编译出的.so文件似乎不完全是对应平台的机器码吧？最终还是通过java命令指定参数运行，也就还是要启动JVM。编译出来的.so库必须通过Java才能运行，而且.so文件也不是跨平台的，在另外一个平台需要重新编译.so文件。","like_count":2},{"had_liked":false,"id":68621,"user_name":"pkugsy","can_delete":false,"product_type":"c1","uid":1107827,"ip_address":"","ucode":"982DC926C320DD","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83ep9WFDR6e0NDsJLdTjvzXOKlwicyibEHSRDxM8UT9dlI4lSS4vUyXETHH5EeYcMsBuNBWj1LtUNdEOA/132","comment_is_top":false,"comment_ctime":1550559695,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10140494287","product_id":100006701,"comment_content":"生活哪有什么岁月静好，只是有人在为你负重前行。JVM就负重之人。","like_count":2},{"had_liked":false,"id":63808,"user_name":"杰之7","can_delete":false,"product_type":"c1","uid":1297232,"ip_address":"","ucode":"F7DA2E21085332","user_header":"https://static001.geekbang.org/account/avatar/00/13/cb/50/66d0bd7f.jpg","comment_is_top":false,"comment_ctime":1548514213,"is_pvip":false,"replies":[{"id":"23343","content":"加油","user_name":"作者回复","user_name_real":"杨晓峰","uid":"1009360","ctime":1549817731,"ip_address":"","comment_id":63808,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10138448805","product_id":100006701,"comment_content":"通过这一节的阅读学习,对Java平台有一个直观认识，工具的强大是期望能有效解决问题的。","like_count":2,"discussions":[{"author":{"id":1009360,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/66/d0/6541f1d5.jpg","nickname":"杨晓峰","note":"","ucode":"2BF255467A978F","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":437720,"discussion_content":"加油","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1549817731,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":25734,"user_name":"继业(Adrian)","can_delete":false,"product_type":"c1","uid":1021147,"ip_address":"","ucode":"D9BAF5F939A2B6","user_header":"https://static001.geekbang.org/account/avatar/00/0f/94/db/4e658ce8.jpg","comment_is_top":false,"comment_ctime":1537428311,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"10127362903","product_id":100006701,"comment_content":"JAVA的源代码在第一次编译后会生成相应的.class文件，这里的编译指的是编译为字节码，而并不是像C和C++那样被编译为机器码。字节码会被jvm通过类加载器加载。正是由于不同平台的jvm屏蔽抽象了底层操作系统的细节，才使得java可以一次编译到处运行。JVM加载了字节码后怎么运行，取决于特定场景下的运行模式。常见的运行模式有：（1）-Xint：jvm只解释执行，不进行代码编译。缺点是：抛弃了JIT带来的性能优势，因为解释器只是不管三七二十一逐条读入解释运行。优点：启动快。（2）-Xcomp：jvm关闭解释器，这种也叫最大优化级别。因为要等待jvm编译，所以jvm的启动会非常的慢。这种如果不进行profiling，往往并不能保证性能最优。<br>所以回到文章刚开始的问题，java是解释执行。这句话是不正确的。在我的理解，java是解释和编译混合的模式。分不同的运行模式，解释和编译占的比重不同，分具体的应用场景和性能取舍。<br>以上回答若有错误，希望大家指出。","like_count":2},{"had_liked":false,"id":18539,"user_name":"猫玛尼","can_delete":false,"product_type":"c1","uid":1041266,"ip_address":"","ucode":"1FC8F59A5ED725","user_header":"https://static001.geekbang.org/account/avatar/00/0f/e3/72/c861ab64.jpg","comment_is_top":false,"comment_ctime":1533436819,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10123371411","product_id":100006701,"comment_content":"记得还在大一的时候，映像最深刻的一句话，就是，一次编写，到处执行","like_count":2},{"had_liked":false,"id":11186,"user_name":"刘辉","can_delete":false,"product_type":"c1","uid":1063047,"ip_address":"","ucode":"2EE27B31914F32","user_header":"https://static001.geekbang.org/account/avatar/00/10/38/87/d2d2d682.jpg","comment_is_top":false,"comment_ctime":1527913193,"is_pvip":false,"replies":[{"id":"3591","content":"简单说热点就是调用比较频繁的代码，预热就是收集信息找出热点","user_name":"作者回复","user_name_real":"杨晓峰","uid":"1009360","ctime":1527979678,"ip_address":"","comment_id":11186,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10117847785","product_id":100006701,"comment_content":"请问jit运行将 热点代码 编译成机器码。什么是热点代码呢？还是jit会有预热开销。jit预热那些东西呢？","like_count":2,"discussions":[{"author":{"id":1009360,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/66/d0/6541f1d5.jpg","nickname":"杨晓峰","note":"","ucode":"2BF255467A978F","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":418745,"discussion_content":"简单说热点就是调用比较频繁的代码，预热就是收集信息找出热点","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1527979678,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":7709,"user_name":"煎饼果子小神","can_delete":false,"product_type":"c1","uid":1100980,"ip_address":"","ucode":"8CA7F8AF6716B4","user_header":"https://static001.geekbang.org/account/avatar/00/10/cc/b4/c6566bc0.jpg","comment_is_top":false,"comment_ctime":1525662664,"is_pvip":false,"replies":[{"id":"2225","content":"这个节奏不是我定，抱歉","user_name":"作者回复","user_name_real":"杨晓峰","uid":"1009360","ctime":1525677109,"ip_address":"","comment_id":7709,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10115597256","product_id":100006701,"comment_content":"更新的好慢啊，大神快点","like_count":2,"discussions":[{"author":{"id":1009360,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/66/d0/6541f1d5.jpg","nickname":"杨晓峰","note":"","ucode":"2BF255467A978F","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":417454,"discussion_content":"这个节奏不是我定，抱歉","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1525677109,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":7684,"user_name":"miren6","can_delete":false,"product_type":"c1","uid":1041041,"ip_address":"","ucode":"AA472DEC1C1D54","user_header":"https://static001.geekbang.org/account/avatar/00/0f/e2/91/b62d084b.jpg","comment_is_top":false,"comment_ctime":1525626421,"is_pvip":false,"replies":[{"id":"2237","content":"有了jigsaw，利用jlink可以定制最合适的runtime，plugin之类也逐渐退役了，jre的存在需求在降低","user_name":"作者回复","user_name_real":"杨晓峰","uid":"1009360","ctime":1525698991,"ip_address":"","comment_id":7684,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10115561013","product_id":100006701,"comment_content":"看到作者一个回复说未来jre将退出舞台，此话怎讲？","like_count":2,"discussions":[{"author":{"id":1009360,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/66/d0/6541f1d5.jpg","nickname":"杨晓峰","note":"","ucode":"2BF255467A978F","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":417441,"discussion_content":"有了jigsaw，利用jlink可以定制最合适的runtime，plugin之类也逐渐退役了，jre的存在需求在降低","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1525698991,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":7514,"user_name":"小六丶","can_delete":false,"product_type":"c1","uid":1113372,"ip_address":"","ucode":"EA3A9FE9A70680","user_header":"https://static001.geekbang.org/account/avatar/00/10/fd/1c/168e7f44.jpg","comment_is_top":false,"comment_ctime":1525503884,"is_pvip":false,"replies":[{"id":"2200","content":"怎么会，术业有专攻，换个角度总结一下，对业务开发也有帮助","user_name":"作者回复","user_name_real":"杨晓峰","uid":"1009360","ctime":1525588077,"ip_address":"","comment_id":7514,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10115438476","product_id":100006701,"comment_content":"菜鸟一个，看评论就可以学到好多知识！写了挺多年业务代码，看样子是白干了！","like_count":2,"discussions":[{"author":{"id":1009360,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/66/d0/6541f1d5.jpg","nickname":"杨晓峰","note":"","ucode":"2BF255467A978F","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":417380,"discussion_content":"怎么会，术业有专攻，换个角度总结一下，对业务开发也有帮助","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1525588077,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":7435,"user_name":"晴天","can_delete":false,"product_type":"c1","uid":1100637,"ip_address":"","ucode":"9796E0EF8DD9A8","user_header":"https://static001.geekbang.org/account/avatar/00/10/cb/5d/f3b20f07.jpg","comment_is_top":false,"comment_ctime":1525482395,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10115416987","product_id":100006701,"comment_content":"问题是java平台，所以我可能会更多的回答是jvm部分，java是解释执行的话我觉得是的，目前并没有用到jdk8。唉，虽然了解一点，但是没用过、就知道点新概念和特性","like_count":2},{"had_liked":false,"id":7430,"user_name":"Kevin Wang","can_delete":false,"product_type":"c1","uid":1042073,"ip_address":"","ucode":"D4BC9EFCB086EE","user_header":"https://static001.geekbang.org/account/avatar/00/0f/e6/99/276eaeaa.jpg","comment_is_top":false,"comment_ctime":1525481595,"is_pvip":true,"replies":[{"id":"2122","content":"启动时间现在有了AOT和Appcds，再加上jigsaw提供的模块化能力，提高非常大，也许我后面补充一个这方面的文章","user_name":"作者回复","user_name_real":"杨晓峰","uid":"1009360","ctime":1525485081,"ip_address":"","comment_id":7430,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10115416187","product_id":100006701,"comment_content":"Java是一个不完全的面向对象编程语言，它基于JVM，经常被人吐槽的有两点：一是慢（其实也不算慢了）；二是代码冗长。同样基于JVM的还有Scala语言，它综合了面向对象与函数式编程，代码非常精简，而且可以无缝使用Java现有的库。","like_count":2,"discussions":[{"author":{"id":1009360,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/66/d0/6541f1d5.jpg","nickname":"杨晓峰","note":"","ucode":"2BF255467A978F","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":417340,"discussion_content":"启动时间现在有了AOT和Appcds，再加上jigsaw提供的模块化能力，提高非常大，也许我后面补充一个这方面的文章","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1525485081,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":7429,"user_name":"锐","can_delete":false,"product_type":"c1","uid":1110915,"ip_address":"","ucode":"A245BA96C9471F","user_header":"https://static001.geekbang.org/account/avatar/00/10/f3/83/e2612d81.jpg","comment_is_top":false,"comment_ctime":1525480652,"is_pvip":false,"replies":[{"id":"2123","content":"不是停止维护，已经免费支持了5年了啊，时间太快了，商业支持还有，是可以考虑新的版本，很多能力有大幅提升","user_name":"作者回复","user_name_real":"杨晓峰","uid":"1009360","ctime":1525485166,"ip_address":"","comment_id":7429,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10115415244","product_id":100006701,"comment_content":"Jdk8已经停止维护，是不是可以直接上10了？","like_count":2,"discussions":[{"author":{"id":1009360,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/66/d0/6541f1d5.jpg","nickname":"杨晓峰","note":"","ucode":"2BF255467A978F","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":417339,"discussion_content":"不是停止维护，已经免费支持了5年了啊，时间太快了，商业支持还有，是可以考虑新的版本，很多能力有大幅提升","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1525485166,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":269825,"user_name":"Mr_D","can_delete":false,"product_type":"c1","uid":1127385,"ip_address":"","ucode":"57843FA1C1F974","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/7hOJBKZVrJD8ayZoYnq0ECFsoWf9yx6eyq3JU8p1449A6cKEp5rSpicJRg5vH3HZgq5YwbpGicBvyARFutcPLGgw/132","comment_is_top":false,"comment_ctime":1608800698,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"5903767994","product_id":100006701,"comment_content":"看评论大致知道了，JVM解释字节码并执行与JIT编译字节码为机器码的区别了，其实本质上都是会转换成机器码，但是过程是有区别的。解释执行是一条条解释成机器码，边解释边执行，下次用到的时候，还是会边解释边执行。而JIT即时编译，则是以方法为单位，将其转换为机器码并存储，之后再用到的时候可直接执行机器码了","like_count":1},{"had_liked":false,"id":244367,"user_name":"小伙儿","can_delete":false,"product_type":"c1","uid":1146925,"ip_address":"","ucode":"8BE71E4DA2AABC","user_header":"https://static001.geekbang.org/account/avatar/00/11/80/2d/9598a648.jpg","comment_is_top":false,"comment_ctime":1598493641,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5893460937","product_id":100006701,"comment_content":"关键词:<br>jre      java runtime enviroment java运行时环境<br>jdk     java devalopment kit java 工具包<br>jit       just in time 即时编译<br>aot     ahead of time complie 预先编译 jdk9新特性","like_count":1},{"had_liked":false,"id":171463,"user_name":"苏暮沉觞","can_delete":false,"product_type":"c1","uid":1577580,"ip_address":"","ucode":"532B816D4EF47B","user_header":"https://static001.geekbang.org/account/avatar/00/18/12/6c/61a598e9.jpg","comment_is_top":false,"comment_ctime":1578926546,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5873893842","product_id":100006701,"comment_content":"     对于这个问题，第一时间想到的是Java是一个面向对象的，跨平台的语言。Java具有面向对象的几大特性：继承、封装、多态，同时，由于JVM的存在，使得Java可以一次编译，到处执行。对于常用的工具包，因为个人水平和工作的原因，使用的都是一些基本的包（lang,util，collection），对于并发包和IO包等高级的包使用的不多，只是学习过，能勉强使用的地步。而文中提到的JVM的原理，以及常用的工具等，几乎只是在一些博客中看到，并没有系统深入的去了解过。","like_count":1},{"had_liked":false,"id":147712,"user_name":"凡","can_delete":false,"product_type":"c1","uid":1721168,"ip_address":"","ucode":"80C2A6452AB9EA","user_header":"https://static001.geekbang.org/account/avatar/00/1a/43/50/abb4ca1e.jpg","comment_is_top":false,"comment_ctime":1572880520,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5867847816","product_id":100006701,"comment_content":"可以把字节码看成是中文， 操作系统能读懂的语言(二进制)看成是英语，这时候想要操作系统能读懂字节码就需要一个翻译官 JVM ，来把字节码编译成操作系统能识别语言","like_count":1},{"had_liked":false,"id":142425,"user_name":"≡随遇而安","can_delete":false,"product_type":"c1","uid":1705198,"ip_address":"","ucode":"0C3AB0C6544819","user_header":"https://static001.geekbang.org/account/avatar/00/1a/04/ee/ffa6fc63.jpg","comment_is_top":false,"comment_ctime":1571366724,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5866334020","product_id":100006701,"comment_content":"这么多人都知道了 JAVA也就不好找工作了","like_count":1},{"had_liked":false,"id":140415,"user_name":"哈哼","can_delete":false,"product_type":"c1","uid":1417824,"ip_address":"","ucode":"C1108406573D49","user_header":"https://static001.geekbang.org/account/avatar/00/15/a2/60/f3939ab4.jpg","comment_is_top":false,"comment_ctime":1570934905,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"5865902201","product_id":100006701,"comment_content":"研究语言细节是否该做，仁者见仁吧。核心精力要放在领域模型的抽象上，系统如何耐操，如何故障自愈，如何高并发，如何水平扩容，如何做到服务能力和机器数成正比等等....语言就是语言，做好性能度量工作，自然你知道关键路径在哪里，自然会去研究如何高效的组织代码，面向搜索引擎编程没问题","like_count":1,"discussions":[{"author":{"id":1417824,"avatar":"https://static001.geekbang.org/account/avatar/00/15/a2/60/f3939ab4.jpg","nickname":"哈哼","note":"","ucode":"C1108406573D49","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":31557,"discussion_content":"不是说不研究，拿到一个语言，这几个点还是要意思下的：并发编程，集合数据类型，内存管理，io和网络编程。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1570935792,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":115509,"user_name":"文古","can_delete":false,"product_type":"c1","uid":1313934,"ip_address":"","ucode":"9A3991AA033EB4","user_header":"https://static001.geekbang.org/account/avatar/00/14/0c/8e/8a39ee55.jpg","comment_is_top":false,"comment_ctime":1563608609,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"5858575905","product_id":100006701,"comment_content":"php是世界上最好的语言","like_count":1},{"had_liked":false,"id":68241,"user_name":"胡炏","can_delete":false,"product_type":"c1","uid":1181061,"ip_address":"","ucode":"D0E7E437E9C8D8","user_header":"https://static001.geekbang.org/account/avatar/00/12/05/85/c820534e.jpg","comment_is_top":false,"comment_ctime":1550465625,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5845432921","product_id":100006701,"comment_content":"JAVA平台是有JAVA语言和jvm平台两部分组成。JAVA语言作为一种面向对象的语言，包含了泛型，并发支持等特性和类库。jvm平台实质上是一个应用层的虚拟机。负责符合JAVA字节码规范的程序的执行，内存管理，垃圾回收等。因此，JAVA平台的发展和演进也需要分两个方面来看，一是语言本身，近几年JAVA语言在不停吸收其他语言的优点，在函数式编程，异步编程方面都引入了新特性，得到更好支持。jvm在性能，编译方式等方面也在改进。由于JAVA平台是通过将程序先编译成字节码在进行机器码转换的方式，所以所有符合字节码规范的语言都可以在jvm上运行，近些年在这个平台上也诞生了不少优秀语言比如kotlin, scala等。新的语言要想依赖这个平台只需要编写自己的编译器和类库工具，将语言转换成JAVA字节码规范，就可以在jvm虚拟机运行，从这个角度说，JAVA平台还具有很好的可扩展能力。能够让多种不同特性但是符合字节码规范的语言在同一个系统中运行。","like_count":1},{"had_liked":false,"id":66527,"user_name":"涛","can_delete":false,"product_type":"c1","uid":1111679,"ip_address":"","ucode":"C77BEB242070DC","user_header":"https://static001.geekbang.org/account/avatar/00/10/f6/7f/abb7bfe3.jpg","comment_is_top":false,"comment_ctime":1549953342,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5844920638","product_id":100006701,"comment_content":"评论区知识点很值得学习","like_count":1},{"had_liked":false,"id":58374,"user_name":"苍狼白鹿","can_delete":false,"product_type":"c1","uid":1099783,"ip_address":"","ucode":"3C83F32FA7736D","user_header":"https://static001.geekbang.org/account/avatar/00/10/c8/07/e1b9c1cc.jpg","comment_is_top":false,"comment_ctime":1547046469,"is_pvip":false,"replies":[{"id":"23320","content":"AOT就部分失去了Java无缝跨平台的能力，早期Java的部署运行场景与现在也有很多不同，例如，webstart，Applet；而且目前实现也还不完善。<br>JIT也有各种优势，例如，理论上JIT因为有运行时Profiling信息，是可以达到更高执行效率的。","user_name":"作者回复","user_name_real":"杨晓峰","uid":"1009360","ctime":1549807778,"ip_address":"","comment_id":58374,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5842013765","product_id":100006701,"comment_content":"有个疑问，既然aot可以提升效率，为什么一开始还要用解释执行，而不是直接用编译执行","like_count":1,"discussions":[{"author":{"id":1009360,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/66/d0/6541f1d5.jpg","nickname":"杨晓峰","note":"","ucode":"2BF255467A978F","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":436034,"discussion_content":"AOT就部分失去了Java无缝跨平台的能力，早期Java的部署运行场景与现在也有很多不同，例如，webstart，Applet；而且目前实现也还不完善。\nJIT也有各种优势，例如，理论上JIT因为有运行时Profiling信息，是可以达到更高执行效率的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1549807778,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":42864,"user_name":"星哥，你好帅","can_delete":false,"product_type":"c1","uid":1325565,"ip_address":"","ucode":"01AD2E522DF1C8","user_header":"https://static001.geekbang.org/account/avatar/00/14/39/fd/397afe9c.jpg","comment_is_top":false,"comment_ctime":1543065095,"is_pvip":false,"replies":[{"id":"15438","content":"谢谢","user_name":"作者回复","user_name_real":"杨晓峰","uid":"1009360","ctime":1543194191,"ip_address":"","comment_id":42864,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5838032391","product_id":100006701,"comment_content":"大神，读后有一种云开见月明的感觉","like_count":1,"discussions":[{"author":{"id":1009360,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/66/d0/6541f1d5.jpg","nickname":"杨晓峰","note":"","ucode":"2BF255467A978F","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":430220,"discussion_content":"谢谢","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543194191,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":39490,"user_name":"$$","can_delete":false,"product_type":"c1","uid":1255207,"ip_address":"","ucode":"AD636D615C4753","user_header":"https://static001.geekbang.org/account/avatar/00/13/27/27/959fe78a.jpg","comment_is_top":false,"comment_ctime":1542289071,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5837256367","product_id":100006701,"comment_content":"评论区也精彩啊","like_count":1},{"had_liked":false,"id":39049,"user_name":"txsjava","can_delete":false,"product_type":"c1","uid":1182416,"ip_address":"","ucode":"B43926A31813E7","user_header":"https://static001.geekbang.org/account/avatar/00/12/0a/d0/ae2ea419.jpg","comment_is_top":false,"comment_ctime":1542178808,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5837146104","product_id":100006701,"comment_content":"java是编译型语言还是解释型语言呢？我知道java肯定是先通过javac编译成字节码，然后jvm进行解释字节码。","like_count":1},{"had_liked":false,"id":16366,"user_name":"dingwood","can_delete":false,"product_type":"c1","uid":1153828,"ip_address":"","ucode":"460EB0C6E8C611","user_header":"https://static001.geekbang.org/account/avatar/00/11/9b/24/1e4883c6.jpg","comment_is_top":false,"comment_ctime":1531909325,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"5826876621","product_id":100006701,"comment_content":"老师推荐本jvm的书。谢谢","like_count":1,"discussions":[{"author":{"id":1063700,"avatar":"","nickname":"dongms","note":"","ucode":"63C475652741B6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":9596,"discussion_content":"文章已经提到了  周志明的深入理解JVM","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1568194379,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":12915,"user_name":"Geek_59a17f","can_delete":false,"product_type":"c1","uid":1119733,"ip_address":"","ucode":"61D49D5983AD3E","user_header":"https://static001.geekbang.org/account/avatar/00/11/15/f5/4fb5284b.jpg","comment_is_top":false,"comment_ctime":1529131610,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5824098906","product_id":100006701,"comment_content":"Javac 的编译，编译 Java 源码生成“.class”文件里面实际是字节码，而不是可以直接执行的机器码。Java 通过字节码和 Java 虚拟机（JVM）这种跨平台的抽象，屏蔽了操作系统和硬件的细节，这也是实现“一次编译，到处执行”的基础。<br><br>在运行时，JVM 会通过类加载器（Class-Loader）加载字节码，解释或者编译执行<br><br>","like_count":1},{"had_liked":false,"id":10601,"user_name":"萨拉赫","can_delete":false,"product_type":"c1","uid":1116654,"ip_address":"","ucode":"A316B7370920DB","user_header":"https://static001.geekbang.org/account/avatar/00/11/09/ee/950b5e9f.jpg","comment_is_top":false,"comment_ctime":1527607842,"is_pvip":false,"replies":[{"id":"3401","content":"嗯，长久看是，Mark R.也说了没有时间表drop这个功能；后续估计会有其他改进，我不便透露或承诺什么<br>","user_name":"作者回复","user_name_real":"杨晓峰","uid":"1009360","ctime":1527648016,"ip_address":"","comment_id":10601,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5822575138","product_id":100006701,"comment_content":"这篇是关于Oracle计划放弃反序列化的文章https:&#47;&#47;www.infoworld.com&#47;article&#47;3275924&#47;java&#47;oracle-plans-to-dump-risky-java-serialization.html?from=timeline&amp;isappinstalled=0","like_count":1,"discussions":[{"author":{"id":1009360,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/66/d0/6541f1d5.jpg","nickname":"杨晓峰","note":"","ucode":"2BF255467A978F","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":418536,"discussion_content":"嗯，长久看是，Mark R.也说了没有时间表drop这个功能；后续估计会有其他改进，我不便透露或承诺什么\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1527648016,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":9864,"user_name":"大月","can_delete":false,"product_type":"c1","uid":1140014,"ip_address":"","ucode":"98004495F83CF4","user_header":"https://static001.geekbang.org/account/avatar/00/11/65/2e/1cd73519.jpg","comment_is_top":false,"comment_ctime":1527129589,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5822096885","product_id":100006701,"comment_content":"感觉自己理解的太片面了，还需要不断学习，为找工作打好基础。对于大神所说的都不太理解，我去面壁了，打卡1次","like_count":1},{"had_liked":false,"id":8965,"user_name":"njzy_sbl51","can_delete":false,"product_type":"c1","uid":1131409,"ip_address":"","ucode":"6794079F7980A3","user_header":"","comment_is_top":false,"comment_ctime":1526547360,"is_pvip":false,"replies":[{"id":"2703","content":"挺好，不过我的角度和应用开发有区别，可能问“简洁方便”之类，具体体现在什么地方，“规范”是什么意思？类型安全？那和“简洁”可能有冲突吗","user_name":"作者回复","user_name_real":"杨晓峰","uid":"1009360","ctime":1526599269,"ip_address":"","comment_id":8965,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5821514656","product_id":100006701,"comment_content":"老师，针对“从你接触Java开发到现在，你对Java最直观的印象是什么”该问题，我的答案是：易理解，因其是一门面向对象的编程语言，较清晰地表述了客观世界中的对象；简洁方便，因其是一门较规范的编程语言。老师，您好，我想请问一下，若您是面试者，我是求职者，这样的回复，老师您会做何反应？同时，还望老师就我的回复，给一些相关建议，谢谢老师。","like_count":1,"discussions":[{"author":{"id":1009360,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/66/d0/6541f1d5.jpg","nickname":"杨晓峰","note":"","ucode":"2BF255467A978F","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":417922,"discussion_content":"挺好，不过我的角度和应用开发有区别，可能问“简洁方便”之类，具体体现在什么地方，“规范”是什么意思？类型安全？那和“简洁”可能有冲突吗","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1526599269,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":8280,"user_name":"星火","can_delete":false,"product_type":"c1","uid":1128958,"ip_address":"","ucode":"E82C6AC6B37EB2","user_header":"https://static001.geekbang.org/account/avatar/00/11/39/fe/a8edb2dc.jpg","comment_is_top":false,"comment_ctime":1526040925,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"5821008221","product_id":100006701,"comment_content":"评论区有点强势...","like_count":1},{"had_liked":false,"id":8082,"user_name":"成功","can_delete":false,"product_type":"c1","uid":1112099,"ip_address":"","ucode":"954B90AC92E8C3","user_header":"https://static001.geekbang.org/account/avatar/00/10/f8/23/165d2f0e.jpg","comment_is_top":false,"comment_ctime":1525910574,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5820877870","product_id":100006701,"comment_content":"看了几个留言，发现点问题。首先C&#47;C十十目前也是支持动态编译，只不过是编译成DLL库。如果不在集成环境下编译Java程序，你会发现Javac编译出的。cIass文件类似。O文件。","like_count":1},{"had_liked":false,"id":8050,"user_name":"倒影","can_delete":false,"product_type":"c1","uid":1126998,"ip_address":"","ucode":"BA038AB9672D0D","user_header":"https://static001.geekbang.org/account/avatar/00/11/32/56/ef5989e5.jpg","comment_is_top":false,"comment_ctime":1525877504,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5820844800","product_id":100006701,"comment_content":"Java是一种面向对象的语言，它最大的特点是跨平台性，一次运行，多处执行，javac编译器把Java代码编译成.class字节码文件，在运作的时候通过jvm加载字节码文件进行解析针对不同的操作系统编译执行，Java通过javm屏蔽不同操作系统之间的差异，让开开发者不需要考虑操作系统的不同，只关注于代码，将问题统一解决，这是开发过程中常见的一种统一解决问题的方式，比如java中的GC（垃圾回收机制），自动回收，在开发的过程中不需要考虑内存回收的问题，Ja再比如我们写一个方法，处理某几种类型的问题，只需要根据传入的参数不同来做不同的处理，从而达到一个方法多处可用。<br>Java是一种面向对象的语言，具有三大特性<br>1、封装<br>2、继承<br>3、多态","like_count":1},{"had_liked":false,"id":7995,"user_name":"Mr . Bean","can_delete":false,"product_type":"c1","uid":1125782,"ip_address":"","ucode":"69AAB91C711196","user_header":"https://static001.geekbang.org/account/avatar/00/11/2d/96/96acbe1c.jpg","comment_is_top":false,"comment_ctime":1525835371,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5820802667","product_id":100006701,"comment_content":"看文章 很充实  知识很全面  但有一点点晦涩  结果看了评论发现好多大神   心里有一点疑惑慢慢就解决了  继续努力学习","like_count":1},{"had_liked":false,"id":7989,"user_name":"Ab","can_delete":false,"product_type":"c1","uid":1039466,"ip_address":"","ucode":"8E9261782F025D","user_header":"https://static001.geekbang.org/account/avatar/00/0f/dc/6a/b5478b65.jpg","comment_is_top":false,"comment_ctime":1525832968,"is_pvip":false,"replies":[{"id":"2335","content":"是的，可能说的时候上下文不同","user_name":"作者回复","user_name_real":"杨晓峰","uid":"1009360","ctime":1525875998,"ip_address":"","comment_id":7989,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5820800264","product_id":100006701,"comment_content":"上面一个朋友说Java内存模型是 堆 栈 方法区，说法有误区吧，堆 栈 方法区应该是内存结构，JMM是 并发里面的 主存 cpu缓存那块的东西","like_count":1,"discussions":[{"author":{"id":1009360,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/66/d0/6541f1d5.jpg","nickname":"杨晓峰","note":"","ucode":"2BF255467A978F","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":417538,"discussion_content":"是的，可能说的时候上下文不同","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1525875998,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":7868,"user_name":"Andy","can_delete":false,"product_type":"c1","uid":1119133,"ip_address":"","ucode":"4BCA899B8E4E85","user_header":"https://static001.geekbang.org/account/avatar/00/11/13/9d/0ff43179.jpg","comment_is_top":false,"comment_ctime":1525753427,"is_pvip":false,"replies":[{"id":"2295","content":"细节有点不准确，1不只编译；2，AOT；3，c1c2是jit compiler名字，如果深入看，不是简单的对应两种启动模式；4 m1-&gt;cms? 这是hotspot目前提供的，很多其他选择<br>","user_name":"作者回复","user_name_real":"杨晓峰","uid":"1009360","ctime":1525824780,"ip_address":"","comment_id":7868,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5820720723","product_id":100006701,"comment_content":"1.JDK与JRE区别：JRE包括jvm虚拟机，工具包，支持模块。JDK是JRE的超集，多了编译工具。<br>2.java一次编译到处运行。通常情况下，java编译成为字节码通过虚拟机来进行解释执行。但java也可以通过命令把若干个包或部分程序编译执行。如oracle hotspot中的jin特性可以把java中的包编译执行。也可以通过命令直接吧java进行编译。来加快运行速度。<br>3.JVM有两种启动模式。c1客户端，c2服务端。可以通过java命令参数指定。服装方式启动的慢，他会收集上千次服务相关的运行情况。来计算出最佳运行方式。<br>4.gc有4种，serilized gc,parallize gc ,m1,g1.","like_count":1,"discussions":[{"author":{"id":1009360,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/66/d0/6541f1d5.jpg","nickname":"杨晓峰","note":"","ucode":"2BF255467A978F","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":417502,"discussion_content":"细节有点不准确，1不只编译；2，AOT；3，c1c2是jit compiler名字，如果深入看，不是简单的对应两种启动模式；4 m1-&amp;gt;cms? 这是hotspot目前提供的，很多其他选择\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1525824780,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":7736,"user_name":"珅珅君","can_delete":false,"product_type":"c1","uid":1069646,"ip_address":"","ucode":"3700048634C565","user_header":"https://static001.geekbang.org/account/avatar/00/10/52/4e/5150a2ee.jpg","comment_is_top":false,"comment_ctime":1525685305,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5820652601","product_id":100006701,"comment_content":"评论干货满满！满足！","like_count":1},{"had_liked":false,"id":7556,"user_name":"萧萧","can_delete":false,"product_type":"c1","uid":1120579,"ip_address":"","ucode":"9F1F69C390576D","user_header":"https://static001.geekbang.org/account/avatar/00/11/19/43/51154077.jpg","comment_is_top":false,"comment_ctime":1525526399,"is_pvip":false,"replies":[{"id":"2189","content":"jit会缓存编译过的在codecache里","user_name":"作者回复","user_name_real":"杨晓峰","uid":"1009360","ctime":1525572225,"ip_address":"","comment_id":7556,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5820493695","product_id":100006701,"comment_content":"&quot;JIT能在运行时刻将字节码编译成机器码， 这样热点代码就是编译运行了&quot; ， 这个说法有点让人困惑， JVM解释字节码的过程不就是逐条转换为对应的机器码予以执行吗?  运行时刻的编译不就是节解释运行吗? 这里是说热点代码会被整块编译好了运行， 无需逐条解释， 提高效率吗","like_count":1,"discussions":[{"author":{"id":1009360,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/66/d0/6541f1d5.jpg","nickname":"杨晓峰","note":"","ucode":"2BF255467A978F","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":417399,"discussion_content":"jit会缓存编译过的在codecache里","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1525572225,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":7527,"user_name":"十三","can_delete":false,"product_type":"c1","uid":1116700,"ip_address":"","ucode":"6EB2541586409F","user_header":"https://static001.geekbang.org/account/avatar/00/11/0a/1c/5d6050d0.jpg","comment_is_top":false,"comment_ctime":1525509876,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5820477172","product_id":100006701,"comment_content":"瞬间觉得自己面对的是一片大海，作为一个小白，有一点点的兴奋和好奇","like_count":1},{"had_liked":false,"id":7498,"user_name":"George","can_delete":false,"product_type":"c1","uid":1103468,"ip_address":"","ucode":"6BD24945AC8253","user_header":"https://static001.geekbang.org/account/avatar/00/10/d6/6c/874ca8ad.jpg","comment_is_top":false,"comment_ctime":1525495448,"is_pvip":false,"replies":[{"id":"2146","content":"所以Java程序员适合普罗大众写出质量可靠的应用","user_name":"作者回复","user_name_real":"杨晓峰","uid":"1009360","ctime":1525500043,"ip_address":"","comment_id":7498,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5820462744","product_id":100006701,"comment_content":"Java 平台不会强制您时刻关注内存分配（或使用第三方库来完成此工作），它提供了开箱即用的内存管理功能。当您的 Java 应用程序在运行时创建一个对象实例时，JVM 会自动从堆 中为该对象分配内存空间— 堆是一个专门留给您的程序使用的内存池。Java 垃圾收集器 在后台运行，跟踪记录应用程序不再需要哪些对象并从它们回收内存。这种内存处理方法称为隐式内存管理，因为它不需要您编写任何内存处理代码。","like_count":1,"discussions":[{"author":{"id":1009360,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/66/d0/6541f1d5.jpg","nickname":"杨晓峰","note":"","ucode":"2BF255467A978F","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":417370,"discussion_content":"所以Java程序员适合普罗大众写出质量可靠的应用","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1525500043,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":7486,"user_name":"Libra","can_delete":false,"product_type":"c1","uid":1114307,"ip_address":"","ucode":"30356CFF4C8E35","user_header":"https://static001.geekbang.org/account/avatar/00/11/00/c3/266f9e8d.jpg","comment_is_top":false,"comment_ctime":1525492604,"is_pvip":false,"replies":[{"id":"2138","content":"对，跑在不同机器的应用不需要重新编译，这也是我为什么说Java跨平台是最高标准，但也不是没有代价；<br>类似Go等跨平台是需要重新编译的，但也带来了很多好处，比如更轻量级。<br>各有适用场合，Java有了aot，能力相对更加多样化","user_name":"作者回复","user_name_real":"杨晓峰","uid":"1009360","ctime":1525499536,"ip_address":"","comment_id":7486,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5820459900","product_id":100006701,"comment_content":"个人观点，java的跨平台实质是利用不同版本的jvm对底层屏蔽，这样的跨平台只是相对于用户来说的。","like_count":1,"discussions":[{"author":{"id":1009360,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/66/d0/6541f1d5.jpg","nickname":"杨晓峰","note":"","ucode":"2BF255467A978F","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":417364,"discussion_content":"对，跑在不同机器的应用不需要重新编译，这也是我为什么说Java跨平台是最高标准，但也不是没有代价；\n类似Go等跨平台是需要重新编译的，但也带来了很多好处，比如更轻量级。\n各有适用场合，Java有了aot，能力相对更加多样化","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1525499536,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":7479,"user_name":"kbrx93","can_delete":false,"product_type":"c1","uid":1068876,"ip_address":"","ucode":"00200B68FBF4DF","user_header":"https://static001.geekbang.org/account/avatar/00/10/4f/4c/3bd8fa31.jpg","comment_is_top":false,"comment_ctime":1525490248,"is_pvip":false,"replies":[{"id":"2155","content":"实用主义","user_name":"作者回复","user_name_real":"杨晓峰","uid":"1009360","ctime":1525502330,"ip_address":"","comment_id":7479,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5820457544","product_id":100006701,"comment_content":"1. 用解释型或 XX 型语言本身就不准确，设计者眼中哪有什么型，只不过设计出来发现用某种方式运行更好用，所以 XX 型就是呈现给开发者的印象。<br>2. 比如你设计一个变量，你在设计的时候不会因为这个变量要设计成 static 的，所以它不能干什么，能干什么。相反，你会想，设计成 static 与 非 static 那个更好用，当然是怎么好用怎么来。<br>3. 理解了这一点，你就会发现，Java 的 JIT 与 AOT 之类的，都是为了好用。","like_count":1,"discussions":[{"author":{"id":1009360,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/66/d0/6541f1d5.jpg","nickname":"杨晓峰","note":"","ucode":"2BF255467A978F","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":417359,"discussion_content":"实用主义","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1525502330,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":7444,"user_name":"FKQ","can_delete":false,"product_type":"c1","uid":1118750,"ip_address":"","ucode":"A3F9464D73DC02","user_header":"https://static001.geekbang.org/account/avatar/00/11/12/1e/b5cdff5f.jpg","comment_is_top":false,"comment_ctime":1525483949,"is_pvip":false,"replies":[{"id":"2130","content":"嗯，c语言直接编译为机器码，并不存在虚拟机，不存在Java的部分概念","user_name":"作者回复","user_name_real":"杨晓峰","uid":"1009360","ctime":1525487036,"ip_address":"","comment_id":7444,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5820451245","product_id":100006701,"comment_content":"解释器是把代码一行一行解释为二进制指令，编译器是把代码一次性编译为二进制指令，对JAVA语言来说，在执行阶段区分编译和解释，但对C语言来说，在执行阶段是直接执行二进制指令，不存在编译和解释，不知道理解对吗？","like_count":1,"discussions":[{"author":{"id":1009360,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/66/d0/6541f1d5.jpg","nickname":"杨晓峰","note":"","ucode":"2BF255467A978F","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":417345,"discussion_content":"嗯，c语言直接编译为机器码，并不存在虚拟机，不存在Java的部分概念","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1525487036,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":7434,"user_name":"lijun","can_delete":false,"product_type":"c1","uid":1116095,"ip_address":"","ucode":"69EC8B86211AD9","user_header":"https://static001.geekbang.org/account/avatar/00/11/07/bf/49f385ec.jpg","comment_is_top":false,"comment_ctime":1525482008,"is_pvip":false,"replies":[{"id":"2133","content":"术业有专攻，加油💪","user_name":"作者回复","user_name_real":"杨晓峰","uid":"1009360","ctime":1525487358,"ip_address":"","comment_id":7434,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5820449304","product_id":100006701,"comment_content":"我对java平台的理解还是很肤浅，惭愧啊。","like_count":1,"discussions":[{"author":{"id":1009360,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/66/d0/6541f1d5.jpg","nickname":"杨晓峰","note":"","ucode":"2BF255467A978F","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":417342,"discussion_content":"术业有专攻，加油💪","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1525487358,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":360360,"user_name":"赤云","can_delete":false,"product_type":"c1","uid":1093258,"ip_address":"北京","ucode":"67476D582D8B6A","user_header":"https://static001.geekbang.org/account/avatar/00/10/ae/8a/e67def95.jpg","comment_is_top":false,"comment_ctime":1666496795,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1666496795","product_id":100006701,"comment_content":"http:&#47;&#47;www.qziedu.cn&#47;xinxizhongxin&#47;xxzx_kjqy&#47;2022-01-14&#47;30349.html<br>参考一下，解释的很到位","like_count":0},{"had_liked":false,"id":356271,"user_name":"月寒","can_delete":false,"product_type":"c1","uid":3171586,"ip_address":"福建","ucode":"8E645FD498A923","user_header":"https://static001.geekbang.org/account/avatar/00/30/65/02/ba066b00.jpg","comment_is_top":false,"comment_ctime":1662100692,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1662100692","product_id":100006701,"comment_content":"“一次书写，到处执行”，说的是java的跨平台性，而java的跨平台性与JVM的存在密不可分。通过jvm的不跨平台性，造就了java的跨平台性。 而像c这种语言为什么说不是一次书写到处执行呢？ 因为c调用的很多都是操作系统的类库，而从windows到linux上 我们实现相同的功能，由于各个操作系统类库的不同，这就导致了我们需要修改c的代码<br>java是解释 + 编译 的语言 通过javac让java代码编译成字节码，而jvm的执行引擎通过一行一行解释执行字节码文件，当然对于频繁访问的字节码。java还使用了JIT机制进行优化。<br>","like_count":0},{"had_liked":false,"id":350816,"user_name":"小鳄鱼","can_delete":false,"product_type":"c1","uid":1178888,"ip_address":"","ucode":"9C30CAFB41A263","user_header":"https://static001.geekbang.org/account/avatar/00/11/fd/08/c039f840.jpg","comment_is_top":false,"comment_ctime":1657240746,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1657240746","product_id":100006701,"comment_content":"建议大家在看之前，先了解一下计算机组成原理，这样在看到时候就容易一些。例如：平台无关性相对的平台差异是什么？什么导致了平台差异？JVM为什么要提出字节码？目的是为了解决什么问题？为什么不是像C那样直接编译为机器码？在这背后可能还要补充一下，应用程序是怎么被执行的？这部分属于操作系统的内容。。。老师这里讲的更多是JVM范畴的，没有前面这些背景知识，个人觉得比较难理解。三年前看的时候，我就是这样的。。。","like_count":0},{"had_liked":false,"id":350425,"user_name":"Geek_93ebde","can_delete":false,"product_type":"c1","uid":2712589,"ip_address":"","ucode":"EFDA0389B1422C","user_header":"https://static001.geekbang.org/account/avatar/00/29/64/0d/13a0d933.jpg","comment_is_top":false,"comment_ctime":1656906839,"is_pvip":true,"discussion_count":0,"race_medal":5,"score":"1656906839","product_id":100006701,"comment_content":"谈谈我对Java平台的理解。<br>Java是一种面向对象的语言，主要有两个特征：1.“write once ,run everywhere”编译一次，到处运行，具有很好的跨平台特性；2.是GC垃圾回收机制，Java平台内部的jvm虚拟机会自行回收分配内存，不需要程序员手动设置。另外还有三个特性，即封装、继承、多态：1.封装指对外隐藏属性和实现细节，仅提供公共的访问方法。2.继承指在一个现有类的基础上构建一个新的类，实现代码复用。3.多态指不同类的对象在调用同一个方法时呈现出的多种不同行为。","like_count":0},{"had_liked":false,"id":350204,"user_name":"星辰","can_delete":false,"product_type":"c1","uid":2847574,"ip_address":"","ucode":"59A8BE2513061C","user_header":"https://static001.geekbang.org/account/avatar/00/2b/73/56/a8f5b4e3.jpg","comment_is_top":false,"comment_ctime":1656657431,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1656657431","product_id":100006701,"comment_content":"jre --运行环境  jk--超级类库<br>jvm 讲字节码翻译器成机器语言 <br>市场上有很多的jvm","like_count":0},{"had_liked":false,"id":349524,"user_name":"AFlymamba","can_delete":false,"product_type":"c1","uid":1359224,"ip_address":"","ucode":"FAEAF3BD3E5146","user_header":"https://static001.geekbang.org/account/avatar/00/14/bd/78/be976ab3.jpg","comment_is_top":false,"comment_ctime":1656040755,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1656040755","product_id":100006701,"comment_content":"一层是 Java 语言设计层面、另外一层是 JVM 层面。<br><br>1、Java 语言层面其实静态的<br><br>和其他语言都有的常规设计，比方数据类型（装箱与拆箱）、分支、循环结构；<br><br>然后面对对象部分的设计（继承、封装、抽象、多态等），理解各关键字，this、super、final 等；<br><br>各种高级类库的设计；<br><br>对线程的封装（多线程：线程创建、线程同步、线程通信、锁、线程安全的并发容器、原子类等）；<br><br>对网络编程的封装（Socket 等）；<br><br>对容器的封装（集合：Collection 派系、Map 派系、遍历器等）；<br><br>还有一些 Java 特定的设计，比方说泛型。<br><br>这一层相对理解起来不难。<br><br>2、JVM 层面<br><br>因为静态的 Java 文件其后缀是 .java，先得通过编译阶段生成字节码文件（*.class），在依托 JVM 去动态的执行这些字节码文件。<br><br>从 JVM 角度来考虑，如何加载（类加载器）、加载字节码之后，如何读取一行行执行，有了方法调用栈、如何分配和回收内存（内存布局、垃圾回收原理、垃圾回收期、垃圾回收算法、GC 日志解读等）、JVM 提供的各种命令，javap、javac、jps、jinfo 等、还有具体的生产  JVM 调优。<br><br>细节很多，是个长期值得做的事，因为优秀设计思想太多了。<br><br>更高维度的看，可能就是单纯的跳出 Java 语言，实现跨平台的本质应该就是依托于中间层文件（比方 .class）。<br><br>Java 可能只是众多运行在 JVM 平台上做的相对较好的一种。","like_count":0},{"had_liked":false,"id":348699,"user_name":"Cache","can_delete":false,"product_type":"c1","uid":1686477,"ip_address":"","ucode":"B2DAC13FC4EE7C","user_header":"https://static001.geekbang.org/account/avatar/00/19/bb/cd/66f6c56e.jpg","comment_is_top":false,"comment_ctime":1655309004,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1655309004","product_id":100006701,"comment_content":"跨平台，指的是编译后代码的跨平台，不是代码的跨平台。其中JVM是实现跨平台的幕后黑手。同时，java是解释执行只答对了一大半，JIT是将高频代码直接编译成机器码，这是编译执行。","like_count":0},{"had_liked":false,"id":348454,"user_name":"惜风","can_delete":false,"product_type":"c1","uid":2958117,"ip_address":"","ucode":"6525136D8050DC","user_header":"https://static001.geekbang.org/account/avatar/00/2d/23/25/279d1470.jpg","comment_is_top":false,"comment_ctime":1655111153,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1655111153","product_id":100006701,"comment_content":"评论也是个学习的好地方，太精彩了！","like_count":0},{"had_liked":false,"id":343014,"user_name":"KK","can_delete":false,"product_type":"c1","uid":1582420,"ip_address":"","ucode":"349FD35822DC8A","user_header":"https://static001.geekbang.org/account/avatar/00/18/25/54/ef2ca14f.jpg","comment_is_top":false,"comment_ctime":1650594497,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1650594497","product_id":100006701,"comment_content":"jvm显著的特性: <br>- 一次编写, 到处运行的实现基础是先讲源码编译成一种跨平台的class文件, 再在相应的平台上通过解释或者编译的方式执行class字节码. <br>; <br>- 自动垃圾回收; <br><br>","like_count":0},{"had_liked":false,"id":338888,"user_name":"早睡早起","can_delete":false,"product_type":"c1","uid":1306624,"ip_address":"","ucode":"8E05506604586A","user_header":"https://static001.geekbang.org/account/avatar/00/13/f0/00/4fe369c2.jpg","comment_is_top":false,"comment_ctime":1647775744,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1647775744","product_id":100006701,"comment_content":"上次面试时，面试官问我java是编译型还是解释型语言，我就回答错了。以后面试前得好好看这个栏目。","like_count":0},{"had_liked":false,"id":337933,"user_name":"javaadu","can_delete":false,"product_type":"c1","uid":1000519,"ip_address":"","ucode":"8C0B140F1C8992","user_header":"https://static001.geekbang.org/account/avatar/00/0f/44/47/3ddb94d0.jpg","comment_is_top":false,"comment_ctime":1647164303,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1647164303","product_id":100006701,"comment_content":"一、Java技术体系概览<br>● Java程序设计语言、Java API类库、Java虚拟机这三部分统称为JDK（Java Development Kit），JDK是用于支撑Java程序开发的最小环境；<br>● 其中Java SE API、JVM和部署相关的类库可统称为JRE（Java Runtime Environment），JRE是支撑Java程序运行的标准环境；<br><br>二、Java程序是如何运行的呢？<br>● 开发者写的Java代码会放在.java文件，也就是Java源文件。Java源文件通过javac编译生产字节码（.class）文件，也就是Java类文件；<br>● Java虚拟机是在操作系统之上搭建的一个虚拟的计算机，实际上Java虚拟机就是操作系统里的一个进程。计算机的基本组成就是操作系统和硬件，硬件包括内存和逻辑计算单元，操作系统的核心模块包括内存管理、计算过程管理。对应的在Java虚拟机里也类似的概念：Java虚拟机内存管理和Java虚拟机执行子系统；<br>● 在Java虚拟机执行子系统中，通过类加载器将字节码（.class）文件转译为对应的机器所能识别的机器码<br><br>三、对于“一次编译、到处执行”的看法<br>Java所谓的“一次编译、到处执行”，关键就在于Java虚拟机和Java运行时类库构建的JRE，在每个类型的操作系统上，都能运行一个Java虚拟机和对应的运行时类库，这样就可以执行在别的地方编译出来的字节码文件了。","like_count":0},{"had_liked":false,"id":337845,"user_name":"Ambition","can_delete":false,"product_type":"c1","uid":2878362,"ip_address":"","ucode":"6FF15C1C307E38","user_header":"https://static001.geekbang.org/account/avatar/00/2b/eb/9a/0bff9815.jpg","comment_is_top":false,"comment_ctime":1647090680,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1647090680","product_id":100006701,"comment_content":"java语言是跨平台的，不同的系统可以安装不同的java虚拟机。java代码经过编译之后，可以在安装java虚拟机上进行解释运行。jdk是java开发工具包，它包括jre和jvm，jre是提供java的运行环境,jvm也就是java虚拟机。.java文件先编译成.class文件，.class文件再由虚拟机解释运行。今天也是我第一次听说JIT（即时编译器），收获颇丰，自己知道的还是太少了。革命尚未成功，同志仍需努力！！！","like_count":0},{"had_liked":false,"id":334633,"user_name":"Geek_039a5c","can_delete":false,"product_type":"c1","uid":1651848,"ip_address":"","ucode":"08F4FA864D4B65","user_header":"","comment_is_top":false,"comment_ctime":1645025047,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1645025047","product_id":100006701,"comment_content":"老师你好，能否解释一下这个知识点呢？<br>比如分支预测，如果不进行 profiling，往往并不能进行有效优化。  ","like_count":0},{"had_liked":false,"id":331264,"user_name":"键盘上的魔术","can_delete":false,"product_type":"c1","uid":2697700,"ip_address":"","ucode":"A731D721FB8D3A","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/LFJZ4x47rvShGhsePLIxc8EzdlBxAmVAIjJ2FQZ4NEpo8E4JCZQEOb2NIfOuiaQLL6Otkt7W3Rmu6Tv3AkgYdRA/132","comment_is_top":false,"comment_ctime":1642510265,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1642510265","product_id":100006701,"comment_content":"看了评论，发现很多人有理解错误。讲到jit时提到的热点代码是啥？其实是热点字节码。 不管是普通的一行行解释字节码转换成机器码执行， 还是jit，aot。 都是字节码转换成机器码。 和源代码没关系。 区别在于转换的时机不一样。 普通方式是一行行解释转换， 如果经常重复也是重新解释。 Jit只是运行时统计经常出现的字节码，编译成机器码并缓存，不用再去重复解释执行而是直接执行缓存的机器码，方法级别。 aot则是在运行前，索性一下子全部转成机器码拉倒。","like_count":0},{"had_liked":false,"id":331239,"user_name":"键盘上的魔术","can_delete":false,"product_type":"c1","uid":2697700,"ip_address":"","ucode":"A731D721FB8D3A","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/LFJZ4x47rvShGhsePLIxc8EzdlBxAmVAIjJ2FQZ4NEpo8E4JCZQEOb2NIfOuiaQLL6Otkt7W3Rmu6Tv3AkgYdRA/132","comment_is_top":false,"comment_ctime":1642497784,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1642497784","product_id":100006701,"comment_content":"java的编译有两个意思。第一次所谓的编译是指将源代码通过javac转换成字节码.class文件的过程。JVM在执行字节码时，普通的方式是一边解释成机器码一边执行。但是这样的话会存在热点机器码解释多次的情况，效率不是太高。所以JIT编译器就出现了，统计分析热点字节码，一次性&quot;编译&quot;（第二个编译）成机器码并缓存。后续碰到相同的字节码，直接执行缓存的机器码提高效率。<br>两次编译的含义不同。","like_count":0},{"had_liked":false,"id":327947,"user_name":"Geek_91a57f","can_delete":false,"product_type":"c1","uid":2876508,"ip_address":"","ucode":"DC5F3B868D03D0","user_header":"","comment_is_top":false,"comment_ctime":1640415431,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1640415431","product_id":100006701,"comment_content":"自己给自己总结一下：<br>java特性：<br>是一种面向对象的语言（封装，继承，多态）<br>平台无关性（jvm的环境封装了底层实现的细节）<br>特殊的语言（泛型，lambda，反射机制）<br>包含的类库（集合，IO&#47;NIO,网络，utils,也可以引用一些第三方的类库）<br>JRE（Java运行的环境，包含jvm，类库）<br>JDK（Java的开发工具，包括JRE，javac，诊断工具，jar工具等）<br>Java是解释运行吗？<br>不正确！！<br>1，Java源代码经过Javac编译成.class文件<br>2，.class文件经JVM解析或编译运行。<br>（1）解析:.class文件经过JVM内嵌的解析器解析执行。<br>（2）编译:存在JIT编译器（动态编译器）（Just In Time Compile 即时编译器）把经常运行的代码作为&quot;热点代码&quot;编译与本地平台相关的机器码，并进行各种层次的优化。（下次执行速度会优化，不用循环一直去解析热点代码）<br>（3）AOT编译器（静态编译器）: Java 9提供的直接将所有代码编译成机器码执行。（会在程序执行前将字节码转成机器码）","like_count":0},{"had_liked":false,"id":322146,"user_name":"赤云","can_delete":false,"product_type":"c1","uid":1093258,"ip_address":"","ucode":"67476D582D8B6A","user_header":"https://static001.geekbang.org/account/avatar/00/10/ae/8a/e67def95.jpg","comment_is_top":false,"comment_ctime":1637205936,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1637205936","product_id":100006701,"comment_content":"jdk的sun类库  操作系统不一样 库也会不一样","like_count":0},{"had_liked":false,"id":321431,"user_name":"韦昌勇","can_delete":false,"product_type":"c1","uid":2751651,"ip_address":"","ucode":"8B3867145BDEA0","user_header":"","comment_is_top":false,"comment_ctime":1636874649,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1636874649","product_id":100006701,"comment_content":"我们开发的 Java 的源代码，首先通过 Javac 编译成为字节码（bytecode），然后，在运行时，通过 Java 虚拟机（JVM）内嵌的解释器将字节码转换成为最终的机器码。但是常见的 JVM，比如我们大多数情况使用的 Oracle JDK 提供的 Hotspot JVM，都提供了 JIT（Just-In-Time）编译器，也就是通常所说的动态编译器，JIT 能够在运行时将热点代码编译成机器码，这种情况下部分热点代码就属于编译执行，而不是解释执行了。对于 Java 平台的理解，可以从很多方面简明扼要地谈一下，例如：Java 语言特性，包括泛型、Lambda 等语言特性；基础类库，包括集合、IO&#47;NIO、网络、并发、安全等基础类库。或者谈谈 JVM 的一些基础概念和机制，比如 Java 的类加载机制，常用版本 JDK（如 JDK 8）内嵌的 Class-Loader，例如 Bootstrap、 Application 和 Extension Class-loader；类加载大致过程：加载、验证、链接、初始化（这里参考了周志明的《深入理解 Java 虚拟机》，非常棒的 JVM 上手书籍）；自定义 Class-Loader 等。还有垃圾收集的基本原理，最常见的垃圾收集器，如 SerialGC、Parallel GC、 CMS、 G1 等，对于适用于什么样的工作负载最好也心里有数。","like_count":0},{"had_liked":false,"id":310057,"user_name":"黄序","can_delete":false,"product_type":"c1","uid":2037282,"ip_address":"","ucode":"C8C2749E2DE72B","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83erpYAcOqrNNxmMuKsd6Dh69BzxiaXjJRh6IMnQlxOqBFiae1EMic32Wv6aFESWytliaL7uniaZ4DgNUwxg/132","comment_is_top":false,"comment_ctime":1630473097,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1630473097","product_id":100006701,"comment_content":"“write once run anywhere”是java语言跨平台的特性，但是这种跨平台与JVM密不可分，我们在不同的环境安装不同环境对应的JDK和JRE，其实就是在不同的平台都维护了JAVA语言运行环境，即JVM用于实现与不同系统不同API的兼容，java只要运行在JRE就可以，这本身也是一种封装与耦合的思想。比如说编译器屏蔽了不同机器语言的区别，TCP&#47;IP屏蔽了不同系统间通信的差异。<br>程序从源代码到运行的三个阶段：编码——编译——运行——调试。<br>C语言的编译包含两个过程，汇编和编译，C语言代码被汇编之后，会得到汇编语言代码，而编译就是将汇编语言代码翻译称为机器指令代码的过程，然后在经过一个链接的过程生成了一个可执行的文件。所以C语言经历过编译步骤之后直接就变成了可以被平台底层执行的代码。<br>Java的编译阶段提现了跨平台的特点，编译过程可以分为两个部分：1）编译：将Java源代码转化为.class文件。.class文件可以在任意环境的JRE上进行运行；2)解释：java字节码转化为目标机器码，这部分由JVM执行。<br>java字节码文件首先被加载到计算机内存中，加载一句解释一句执行一句，这种模式就是解释执行，即解释执行不会产生目标文件或者说没有生成机器码文件，因此，下一次执行时，还是需要重新将上述的过程执行一遍。对于一般的代码没有问题，但是如果是大量复用代码效率就会非常慢，因此，引入了JIT，即，对于频繁操作的代码（热点代码）编译为机器码进行缓存，下次再执行直接从缓存取数据即可；但是由于是运行时进行编译会占用运行时资源，因此又再次引入了AOT（静态编译），即在运行之前在不同的操作系统就将字节码文件预生成为不同的机器码文件，运行时不再占用CPU资源。","like_count":0},{"had_liked":false,"id":308415,"user_name":"Petrichor","can_delete":false,"product_type":"c1","uid":1751589,"ip_address":"","ucode":"5D9E299F9545CA","user_header":"https://static001.geekbang.org/account/avatar/00/1a/ba/25/6f8517a3.jpg","comment_is_top":false,"comment_ctime":1629612506,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1629612506","product_id":100006701,"comment_content":"“即所谓的 AOT（Ahead-of-Time Compilation），直接将字节码编译成机器代码，这样就避免了 JIT 预热等各方面的开销”。<br>AOT编译器不是直接把源代码编译成机器代码吗？","like_count":0},{"had_liked":false,"id":307826,"user_name":"Kayano","can_delete":false,"product_type":"c1","uid":1980494,"ip_address":"","ucode":"5A86F46DAA6401","user_header":"https://static001.geekbang.org/account/avatar/00/1e/38/4e/300bee13.jpg","comment_is_top":false,"comment_ctime":1629273811,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1629273811","product_id":100006701,"comment_content":"1. Java 语言的跨平台是字节码跨平台，经过编译的字节码文件可以在任意安装了JVM的机器上运行，JVM屏蔽了字节码的指定平台机器码转换<br>2.Java 语言是面向对象的编程语言，拥有丰富的类库，例如IO，集合，并发，反射等，并支持泛型，Lambad这些语法<br>","like_count":0},{"had_liked":false,"id":300313,"user_name":"きぃ","can_delete":false,"product_type":"c1","uid":1962416,"ip_address":"","ucode":"770B4CF5E83934","user_header":"https://static001.geekbang.org/account/avatar/00/1d/f1/b0/d1b545ab.jpg","comment_is_top":false,"comment_ctime":1625108813,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1625108813","product_id":100006701,"comment_content":"Java特性:<br>面向对象（封装，继承，多态）<br>平台无关性（JVM运行.class文件）<br>语言（泛型，Lambda）<br>类库（集合，并发，网络，IO&#47;NIO）<br>JRE（Java运行环境，JVM，类库）<br>JDK（Java开发工具，包括JRE，javac，诊断工具）<br>Java是解析运行吗？<br>不正确！<br>1，Java源代码经过Javac编译成.class文件<br>2，.class文件经JVM解析或编译运行。<br>（1）解析执行:.class文件经过JVM内嵌的解析器解析执行，即JVM将这些字节码文件加载进来，加载进来一句，就解释一句，解释出来一句就执行一句，相当于是解释和执行是同步执行的。这种模式被称为解释执行。需要明确的一点：解释执行这个过程并不会产生目标文件，也就是说这些可以被平台执行的机器码文件并没有生成，下次如果还是这部分代码被执行的时候，还需要重新的被解释一遍，这样每次都重复这个过程就会很耗时<br>（2）编译执行:存在JIT编译器（Just In Time Compile 即时编译器）把经常运行的代码作为&quot;热点代码&quot;编译与本地平台相关的机器码，并进行各种层次的优化，即 将热点代码，编译成为机器码，这个时候其实内存中是保存了一部分这部分机器码的<br>（3）AOT编译器: Java 9提供的直接将所有字节码编译成机器码执行。<br>Compile once, run anywhere（书写一次，到处运行）理解：<br>\t不同操作系统，底层api不一样，所以c写出来的代码不一样，但是用java写出来的都一样，虚拟机屏蔽了底层细节<br><br>根据一些优秀的评论，集合了下","like_count":0},{"had_liked":false,"id":292917,"user_name":"if...else...","can_delete":false,"product_type":"c1","uid":2550743,"ip_address":"","ucode":"D0565908C99695","user_header":"https://static001.geekbang.org/account/avatar/00/26/eb/d7/90391376.jpg","comment_is_top":false,"comment_ctime":1621077074,"is_pvip":false,"discussion_count":0,"race_medal":4,"score":"1621077074","product_id":100006701,"comment_content":"跨平台，虚拟机，面向对象，我的主要映像。😂","like_count":0},{"had_liked":false,"id":292787,"user_name":"Geek_652619","can_delete":false,"product_type":"c1","uid":2280941,"ip_address":"","ucode":"F3FAF3440B60B9","user_header":"","comment_is_top":false,"comment_ctime":1620977865,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1620977865","product_id":100006701,"comment_content":"Write once, run anywhere","like_count":0},{"had_liked":false,"id":289449,"user_name":"练习生","can_delete":false,"product_type":"c1","uid":1179944,"ip_address":"","ucode":"A4271A5FB5158C","user_header":"https://static001.geekbang.org/account/avatar/00/12/01/28/caa17608.jpg","comment_is_top":false,"comment_ctime":1619016489,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1619016489","product_id":100006701,"comment_content":"一、Java的两个特性: <br>\t1.跨平台(Write once, run anywhere) <br>\t2.垃圾收集（GC，Garbage Collection） <br>二、JDK与JRE <br>\t1、JRE是Java Runtime Environment的简写,是Java运行时环境,其包含JVM和Java类库,运行一个Java程序所必须的 <br>\t2、JDK是JRE的超集,是Java Developer KIT的简写,其除了JRE还提供javac、javap、jstack等常用等编译、检测、监控工具。 <br><br>三、Java有解释执行和编译执行，JVM提供了动态编译器（如JIT），在运行时会将热点代码编译成机器码，这种情况就是编译执行了。<br><br>四、JVM<br>\t1、BootStrap、Application、Extension Class-loader<br>\t2、类加载过程: 加载、验证、链接、初始化<br>\t3、垃圾收集(SerialGC、Parallel GC、CMS、G1等)<br><br>五、JVM运行模式<br>\t1、server模式，进行上万次调用后进行高效编译<br>\t2、client模式，1500次调用<br>\t3、相关启动参数（-Xint -Xcomp）<br>\t4、JDK9 新的编译方式（AOT特性)","like_count":0},{"had_liked":false,"id":287116,"user_name":"且听风吟","can_delete":false,"product_type":"c1","uid":2291112,"ip_address":"","ucode":"D7E37D0C3CE45D","user_header":"https://static001.geekbang.org/account/avatar/00/22/f5/a8/f10d2446.jpg","comment_is_top":false,"comment_ctime":1617782726,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1617782726","product_id":100006701,"comment_content":"Java特性：封装、继承、抽象、多态<br>Java源码经过编译成为.class字节码文件，再通过JVM解释运行，JVM也包括JIT即时编译，将字节码编译成本地机器码，提高执行效率<br>Java生态完备，基本没有查不到的，面向搜索引擎编程虽然不好，但考虑到不要重复造轮子，吸取优秀的思想也不是坏事，是把双刃剑<br>Java的调试工具用过一点点，不储备好这方面的知识，到时候出问题可就是惨兮兮的了<br>最后一点想说的是，Java是薪柴，Spring就是火，我只是灰烬。传不了那火，但也有点点温度。<br><br><br><br>","like_count":0},{"had_liked":false,"id":286122,"user_name":"Encore","can_delete":false,"product_type":"c1","uid":1232326,"ip_address":"","ucode":"6BE4B107EBAF1E","user_header":"https://static001.geekbang.org/account/avatar/00/12/cd/c6/3610cae4.jpg","comment_is_top":false,"comment_ctime":1617160730,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1617160730","product_id":100006701,"comment_content":"JVM有两种运行模式Server与Client。两种模式的区别在于，Client模式启动速度较快，Server模式启动较慢；但是启动进入稳定期长期运行之后Server模式的程序运行速度比Client要快很多。这是因为Server模式启动的JVM采用的是重量级的虚拟机，对程序采用了更多的优化；而Client模式启动的JVM采用的是轻量级的虚拟机。所以Server启动慢，但稳定后速度比Client远远要快。","like_count":0},{"had_liked":false,"id":284214,"user_name":"Yang","can_delete":false,"product_type":"c1","uid":1147759,"ip_address":"","ucode":"3B7FC84D6BA1EF","user_header":"https://static001.geekbang.org/account/avatar/00/11/83/6f/b471854f.jpg","comment_is_top":false,"comment_ctime":1616123864,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1616123864","product_id":100006701,"comment_content":"首先 Java 是一个跨平台语言，底层 JVM 帮我们屏蔽了各个系统差异，丰富的基础类库，NIO，集合，并发包等可以满足日常开发，还有一些高级特性，lambda，泛型这些编译器语法糖使得开发变的很轻松，然后，我们的代码会由编译器编译成字节码，交由 jvm 执行，运行过程中不需要像 C 那样手动释放一些指针内存，它有众多 GC 收集器，自动帮我们回收内存，加上开发者众多，生态非常好，遇到的很多问题，别人早都遇到过并有丰富的解决方案，是一个非常优秀的语言兼平台。","like_count":0},{"had_liked":false,"id":284009,"user_name":"K","can_delete":false,"product_type":"c1","uid":2529222,"ip_address":"","ucode":"029332D154ED2F","user_header":"","comment_is_top":false,"comment_ctime":1616036541,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1616036541","product_id":100006701,"comment_content":"1. &quot;Write once,run anywhere&quot; ，书写一次，到处运行；Java代码具有跨平台的特性，但却不是唯一的，java代码编译生成.class字节码文件，在不同的平台上，只有拥有jdk环境，就可以运行；java的跨平台特性和java虚拟机是密不可分的，java虚拟机会把描述类的数据从.class文件加载到内存，并对数据进行校验、转换解析和初始化，最终形成可以被java虚拟机直接使用的java类型，这是java类加载机制；加载流程：加载-&gt;验证-&gt;准备-&gt;解析-&gt;初始化-&gt;使用-&gt;卸载。<br>2. java语言和C、C++最大的区别就是java拥有自动内存管理机制，java是一种解释性语言，但解释执行的关键是jvm虚拟机。","like_count":0},{"had_liked":false,"id":282558,"user_name":"皓月冷千山","can_delete":false,"product_type":"c1","uid":2168352,"ip_address":"","ucode":"44D2E02F61279C","user_header":"https://static001.geekbang.org/account/avatar/00/21/16/20/77d41677.jpg","comment_is_top":false,"comment_ctime":1615300516,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1615300516","product_id":100006701,"comment_content":"1，Java源代码经过Javac编译成.class文件<br>2，.class文件经JVM解析或编译运行。<br>（1）解析:.class文件经过JVM内嵌的解析器解析执行。<br>（2）编译:存在JIT编译器（Just In Time Compile 即时编译器）把经常运行的代码作为&quot;热点代码&quot;编译与本地平台相关的机器码，并进行各种层次的优化。<br>（3）AOT编译器: Java 9提供的直接将所有代码编译成机器码执行。","like_count":0},{"had_liked":false,"id":274612,"user_name":"Geek_0012f4","can_delete":false,"product_type":"c1","uid":2418879,"ip_address":"","ucode":"3BFD871628A754","user_header":"","comment_is_top":false,"comment_ctime":1611102665,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1611102665","product_id":100006701,"comment_content":"发现每个大佬的评论都非常经典","like_count":0},{"had_liked":false,"id":269814,"user_name":"Mr_D","can_delete":false,"product_type":"c1","uid":1127385,"ip_address":"","ucode":"57843FA1C1F974","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/7hOJBKZVrJD8ayZoYnq0ECFsoWf9yx6eyq3JU8p1449A6cKEp5rSpicJRg5vH3HZgq5YwbpGicBvyARFutcPLGgw/132","comment_is_top":false,"comment_ctime":1608794872,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1608794872","product_id":100006701,"comment_content":"对解释型与编译型的概念有了更深入的理解，但是编译这块还是不太懂，应该是自己这方面比较空白的原因","like_count":0},{"had_liked":false,"id":268760,"user_name":"acqierement","can_delete":false,"product_type":"c1","uid":1234980,"ip_address":"","ucode":"AC8DA74B9CB924","user_header":"https://static001.geekbang.org/account/avatar/00/12/d8/24/f48a38f4.jpg","comment_is_top":false,"comment_ctime":1608342258,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1608342258","product_id":100006701,"comment_content":"跨平台性理解：java源代码经过javac编译之后称为class文件，这个class文件必须要符合JVM规范。java能跨平台是因为不同的系统有对应的虚拟机实现，由虚拟机执行这一份class文件。","like_count":0},{"had_liked":false,"id":266331,"user_name":"取经的🐒","can_delete":false,"product_type":"c1","uid":2215442,"ip_address":"","ucode":"428BE0D6E6084C","user_header":"https://static001.geekbang.org/account/avatar/00/21/ce/12/7de69c30.jpg","comment_is_top":false,"comment_ctime":1607303697,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1607303697","product_id":100006701,"comment_content":"关于跨平台，我的理解是这样的，从源代码开发到到执行大致经历两台机器，称其为打包机（负责字节码文件的生成和打包）和运行机（负责执行处理业务逻辑）。<br>我们孰知的跨平台是通过jvm实现的，他封装了底层的操作系统，使得开发人员和操作系统不感知。所以是在执行机上实现的，<br>关于文中提到的aot我的理解是他与go类似，是在编译（从源代码到字节码）期间，将编译结果与操作系统绑定了，所以发生在打包机上","like_count":0},{"had_liked":false,"id":266330,"user_name":"取经的🐒","can_delete":false,"product_type":"c1","uid":2215442,"ip_address":"","ucode":"428BE0D6E6084C","user_header":"https://static001.geekbang.org/account/avatar/00/21/ce/12/7de69c30.jpg","comment_is_top":false,"comment_ctime":1607303496,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1607303496","product_id":100006701,"comment_content":"原来问题和功能真的随着时代在不断变化，最初java通过虚拟机弱化了开发人员和操作系统api的紧密联系，这降低了编程难度。当时使用c语言编码，对程序员的要求太高，大家关注于如何降低开发成本。现在的jit，aot都是为了提高运行效率。毕竟当前时代软件功能愈发复杂，代码量激增，大家更关注于软件运行速度。就好比现在配置电脑对内存的关注要多于cpu。<br>关于编译和解释，此处做个笔记。<br>我的观点中，编译和解释的区别在：操作系统执行非机器码文件时是直接执行他，还是翻译为机器码文件后去执行他。JAVA程序从开发到运行，执行路线有三条，从源代码到字节码，从字节码到机器码，从源代码到机器码。<br>首先研究字节码到机器码，最初的jvm是解释执行，后为了提高效率，使用缓存机制，会预编译部分热点代码以提高运行效率，也就是jit过程。这一阶段是混合模式。<br>其次文中有提到从源代码到机器码的aot操作，我的理解这部分属于纯编译模式。","like_count":0},{"had_liked":false,"id":266102,"user_name":"俯瞰风景.","can_delete":false,"product_type":"c1","uid":1044166,"ip_address":"","ucode":"A6DB68B7B84AEE","user_header":"https://static001.geekbang.org/account/avatar/00/0f/ee/c6/bebcbcf0.jpg","comment_is_top":false,"comment_ctime":1607169076,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1607169076","product_id":100006701,"comment_content":"Java平台的关键在于实现了一套与硬件和操作系统无关的字节码(.class文件)，通过支持不同平台的JVM解析同一套字节码，得到同样的执行效果，实现了“一次编写，到处执行”。字节码和java代码没有直接关系，本质上任何语言都可以编译成class文件，得以在jvm上进行执行。","like_count":0},{"had_liked":false,"id":263248,"user_name":"escray","can_delete":false,"product_type":"c1","uid":1020525,"ip_address":"","ucode":"1F4204930E47C4","user_header":"https://static001.geekbang.org/account/avatar/00/0f/92/6d/becd841a.jpg","comment_is_top":false,"comment_ctime":1606058427,"is_pvip":true,"discussion_count":0,"race_medal":2,"score":"1606058427","product_id":100006701,"comment_content":"Java 源代码，通过 Javac 编译成字节码 bytecode；在运行时，通过 Java 虚拟机（JVM）内嵌的解释器将字节码转换为最终的机器码，这一部分属于“解释执行”。但是平时使用的的 Oralce JDK 提供的 Hotspot JVM，具有 JIT Just-In-Time 编译器，能够在运行时将热点代码编译成机器码，这一部分是“编译执行”。<br><br>没能看完全部留言，但是发现了不少高人。<br><br>印象比较深的是 @欧阳田 提到的：<br><br>JDK5（重写 bug），JDK6（商用最稳定版），JDK7（switch 的字符串支持），JDK8（函数式编程、混合模式），JDK9（AOT）<br><br>不知道现在外面公司常用的是哪一个版本的 JDK？","like_count":0},{"had_liked":false,"id":259283,"user_name":"风","can_delete":false,"product_type":"c1","uid":1077538,"ip_address":"","ucode":"104638BF19B048","user_header":"https://static001.geekbang.org/account/avatar/00/10/71/22/b8c596b6.jpg","comment_is_top":false,"comment_ctime":1604670997,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1604670997","product_id":100006701,"comment_content":"评论内容也很精彩，专栏与书籍的一个很大的区别就在于可以交互，通过探讨更加深入地理解","like_count":0},{"had_liked":false,"id":257676,"user_name":"Geek_0168a2","can_delete":false,"product_type":"c1","uid":1585092,"ip_address":"","ucode":"2D3F17B775FEB2","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLqDHFficypYolzgcHRGnFt3YEt68TWmc6GTJl2RMckyIicibictXrLfIVOyMJC0mbdo3Hzr5ibibpEYViaQ/132","comment_is_top":false,"comment_ctime":1604054562,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1604054562","product_id":100006701,"comment_content":"1.Java语言特性<br>    1.1 一次编译 到处运行  即跨平台性 （需要深入理解 java 运行机制）<br>    1.2 面向对象语言<br>    1.3 垃圾回收机制<br>    1.4 类库 （集合，并发，网络，IO&#47;NIO）<br>    1.5 语言 （支持 lamba表达式，支持泛型）<br>    1.6 JRE (java 运行时环境 包括 JVM  类库 )<br>    1.7 JDK (Java 开发工具，包括 JRE, 也有其他 性能诊断工具 例如 Arthas)<br><br><br>2.Java 运行机制<br>   Java是解析运行吗？<br>    这个问题 有点片面<br>   Java 运行一般机制： <br>   2.1 Java 源码 经由 JavaC 编译成 ?.class文件 （字节码文件）<br>   2.2 Jvm 内嵌解析器 将 ?.class 文件 解析为 操作系统可以运行的机器码<br>    从一般性来说 Java是解析运行的<br>但是 JVM 包括了JIT 可以直接将热点代码 直接 编译为 机器码 <br> 另外  Java9 提供了AOT编译器 可以把所有的代码 编译为 机器码","like_count":0},{"had_liked":false,"id":248094,"user_name":"Geek_bc79ef","can_delete":false,"product_type":"c1","uid":2179866,"ip_address":"","ucode":"130A0926347047","user_header":"","comment_is_top":false,"comment_ctime":1600007896,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1600007896","product_id":100006701,"comment_content":"学习一门课程，就是不止吸收课程本身内容，还有评论区精彩的总结内容","like_count":0},{"had_liked":false,"id":241781,"user_name":"王凯","can_delete":false,"product_type":"c1","uid":1121749,"ip_address":"","ucode":"47959C7F5CC1CB","user_header":"https://static001.geekbang.org/account/avatar/00/11/1d/d5/0081e38d.jpg","comment_is_top":false,"comment_ctime":1597418856,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1597418856","product_id":100006701,"comment_content":"     Java的一次编译到处执行，说的就是jvm通过javac，把原始代码编译成.class的文件，里面放的是字节码。然后通过class-loader，加载字节码，通过解释器把字节码转换成机器码。通过jvm这个环境可以把机器码放到任何环境中执行。<br>     Java语言有它自己的特性，面向对象，反射，泛型。有它自己的核心类库，比如io，网络，安全，也可以加载第三方jar包。","like_count":0},{"had_liked":false,"id":239968,"user_name":"liw","can_delete":false,"product_type":"c1","uid":1299864,"ip_address":"","ucode":"569F70A14A351C","user_header":"https://static001.geekbang.org/account/avatar/00/13/d5/98/ca30e756.jpg","comment_is_top":false,"comment_ctime":1596703415,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1596703415","product_id":100006701,"comment_content":"把评论都读了一遍，收获满满，感谢老师和评论留言者","like_count":0},{"had_liked":false,"id":237574,"user_name":"Aaron","can_delete":false,"product_type":"c1","uid":1123125,"ip_address":"","ucode":"4B0DB3F23DEB2F","user_header":"https://static001.geekbang.org/account/avatar/00/11/23/35/10ace664.jpg","comment_is_top":false,"comment_ctime":1595867140,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1595867140","product_id":100006701,"comment_content":"类加载大致过程：加载、验证、链接、初始化，这里是不是有问题呀？类的加载过程是：加载、验证、准备、解析、初始化，而链接又分为验证、准备、解析","like_count":0},{"had_liked":false,"id":236133,"user_name":"wang_","can_delete":false,"product_type":"c1","uid":1817559,"ip_address":"","ucode":"0187B4F8F8DAAF","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/sY3b3THOcfwyCIX3vOGxuu8PWxB8PLzhFlib6YyECFvWqfcicD1hGHooqUCNAeVx43IBXlibR6Npoj4r9H0H5TohA/132","comment_is_top":false,"comment_ctime":1595324328,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1595324328","product_id":100006701,"comment_content":"为什么不能打印出来，屏幕看多了眼睛遭不住啊。纸质比较方便呀","like_count":0},{"had_liked":false,"id":233514,"user_name":"looper","can_delete":false,"product_type":"c1","uid":1238396,"ip_address":"","ucode":"DA4BCE83836C04","user_header":"https://static001.geekbang.org/account/avatar/00/12/e5/7c/2a5a418b.jpg","comment_is_top":false,"comment_ctime":1594345771,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1594345771","product_id":100006701,"comment_content":"对Java最开始也是最深的影响莫过于大学看到书中写的Java跨平台特性：write once，run anywhere。时至今日，做Java应用开发已经有好几年，我对Java平台的理解：<br>面向对象的支持动态特性（运行时加载）的强类型语言。<br>JRE是运行时环境，JDK是JRE的超集（还包括了一些工具和API），随着Java的模块化，在JDK11的解压缩包中已经没有Jre文件夹了，因为JDK可以随时编译出满足需求的运行时环境。<br>一般Java类文件需要经过Javac编译成class文件，再经过JVM解释器执行，但是从性能上考虑，JIT编译是必须的，因为它可以对热点代码优化和编译成直接可以运行的机器码，提升性能。除此之外还有提前编译AOT。<br>对于Java常用类库，utils，lang，J.U.C,IO&#47;NIO,网络<br>JVM的gc算法和gc收集器，serial,parallel pairNew,CMS,G1,ZGC","like_count":0},{"had_liked":false,"id":230096,"user_name":"colonel","can_delete":false,"product_type":"c1","uid":1200916,"ip_address":"","ucode":"F71EE1C23A8D83","user_header":"https://static001.geekbang.org/account/avatar/00/12/53/14/2b93d757.jpg","comment_is_top":false,"comment_ctime":1593258371,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1593258371","product_id":100006701,"comment_content":"在jit模式下，javac编译源代码直接被编译成了机器码了？还是说仍然是class文件，然后不是解释器逐句解释执行而是被jit直接翻译成机器吗<br>","like_count":0,"discussions":[{"author":{"id":2330905,"avatar":"https://static001.geekbang.org/account/avatar/00/23/91/19/6a3e7efc.jpg","nickname":"程序员9527","note":"","ucode":"1A1609F6BEAD84","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":383467,"discussion_content":"机器码","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1626103480,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":228988,"user_name":"kai楷","can_delete":false,"product_type":"c1","uid":1397672,"ip_address":"","ucode":"623D38565BF0EF","user_header":"https://static001.geekbang.org/account/avatar/00/15/53/a8/73618c92.jpg","comment_is_top":false,"comment_ctime":1592876014,"is_pvip":true,"discussion_count":0,"race_medal":1,"score":"1592876014","product_id":100006701,"comment_content":"看到这个两个问题的时候，我发现我有点迷。看完这篇文章我才发现我的路走窄了。作为即将毕业的应届生，看到题目我第一反应是Java平台是什么?Java不是静态语言吗?看完才知道Java平台涵盖的内容是如此的广泛，从基本语言特性、Java虚拟机到Java生态圈等。另一方面是理解了“Java的解释执行”，Java代码虽然有编译这一过程，但是大部分都是将.java文件编译成.class文件，再由JVM去解释执行，只有少部分由JIT直接动态编译成机器码，是对自己Java知识的补充。","like_count":0},{"had_liked":false,"id":228164,"user_name":"长期规划","can_delete":false,"product_type":"c1","uid":1019332,"ip_address":"","ucode":"5EF65E9115834B","user_header":"https://static001.geekbang.org/account/avatar/00/0f/8d/c4/6f97daea.jpg","comment_is_top":false,"comment_ctime":1592572643,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1592572643","product_id":100006701,"comment_content":"想请教下老师，Python解释器在运行时也会生成pyc字节码，下次运行直接用pyc，那为何比Java慢很多呢？","like_count":0},{"had_liked":false,"id":224963,"user_name":"Scorpio","can_delete":false,"product_type":"c1","uid":1310855,"ip_address":"","ucode":"CB8672DA73FA88","user_header":"https://static001.geekbang.org/account/avatar/00/14/00/87/bcd6fb00.jpg","comment_is_top":false,"comment_ctime":1591602935,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1591602935","product_id":100006701,"comment_content":"java的四大特性：封装，继承，多态，抽象<br>java运行环境jre,jdk包含了jre及其他一些工具包（如编译器），jdk提供了一些类库：基础类库，集合，IO&#47;NIO,网络，线程等<br>java一次编码，到处运行：java源码，编译成class字节码文件，jvm将字节码转成相应的机器码<br>jvm平台不仅仅是运行java，还能运行一些符合字节码规范的其他语言，如kotlin,jython,scala等<br>java开发时不需要关注内存的分配和回收问题，jvm会做这些事，垃圾回收器有CMS（标记清除算法）,G1等<br>java具有丰富的生态：spring全家桶，各种优秀的第三方类库，Hadoop等","like_count":0},{"had_liked":false,"id":223662,"user_name":"creasylai19","can_delete":false,"product_type":"c1","uid":1128420,"ip_address":"","ucode":"F9B04060FCFD3F","user_header":"https://static001.geekbang.org/account/avatar/00/11/37/e4/5d7a32c6.jpg","comment_is_top":false,"comment_ctime":1591151785,"is_pvip":false,"discussion_count":0,"race_medal":1,"score":"1591151785","product_id":100006701,"comment_content":"对Java平台的理解：1.跨平台 2.自动垃圾回收。JVM其实是一种规范，符合规范的字节码都可以放到JVM运行，HoSpot和J9都是JVM的一种实现。Java这种语言是运行在JVM上的，提供了泛型、lambda等特性，还提供了并发、反射、集合、IO等强大的类库，我们平常用的JDK除了包括JRE外还提供一些方便的开发工具，如javac,javap,jar等等","like_count":0},{"had_liked":false,"id":223071,"user_name":"Ohniceboy","can_delete":false,"product_type":"c1","uid":1699368,"ip_address":"","ucode":"7435D23B46B7EA","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTI8AWuoibMJVJaT66oaLuUpUSia3z5ZQ41Mt2k9AGBxEDcXiaDsGJHgwAoCsdPIAXOf5llg954vBzFXA/132","comment_is_top":false,"comment_ctime":1590994557,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1590994557","product_id":100006701,"comment_content":"1. Java具有平台无关性的特性,主要体现在一处编写,到处运行.Java在编译时将Java源代码编译成字节码形式的.class文件,而不是可以直接运行的机器码.当Java程序运行时,jvm从class文件中一条条读取字节码指令并翻译成可以直接执行的机器码.当程序运行一段时间后,jvm会将这段时间内的热点代码编译成机器码,所以Java是一门编译执行与解释执行混合的语言<br>2. Java是一门面向对象的语言,主要体现在封装,继承,多态的特性<br>3. Java中提供了很多JDK工具,比如安全工具,诊断和监控工具等<br>4. Java中有很多的基础类库,比如集合,io&#47;nio,网络,并发,安全等","like_count":0},{"had_liked":false,"id":213331,"user_name":"赵崇海","can_delete":false,"product_type":"c1","uid":1862787,"ip_address":"","ucode":"6AA4B7D0CCE6DF","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/HBTO3XPso6SNAgK71DgXvjmA7feaXzUGSAP6da6ibdwjYE3ABOImniaDthS3HFNUWwdEvO3xs3ZmmHE1tLexbFBg/132","comment_is_top":false,"comment_ctime":1588386932,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1588386932","product_id":100006701,"comment_content":"评论也精彩啊，一节课看完评论也得仔细拜读下，各种大师~","like_count":0},{"had_liked":false,"id":213033,"user_name":"梁景贤","can_delete":false,"product_type":"c1","uid":1862811,"ip_address":"","ucode":"58377AFFC751A4","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKDhfw4GdCdf08ErtGrqU8H8Qw4yfW60ERicOU70wFr3KdK5c8qlmqPxD1N8nHSWt2iasAtL4biaKUFQ/132","comment_is_top":false,"comment_ctime":1588267193,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1588267193","product_id":100006701,"comment_content":"1 一次编译，跨平台运行，运行效率比纯解释形代码高；<br>2 面向对象语言，可以针对实际需求进行建模；<br>3 自动进行gc操作，免除很多垃圾回收的困扰；<br>4 强类型语言。","like_count":0},{"had_liked":false,"id":212503,"user_name":"陈龙","can_delete":false,"product_type":"c1","uid":1986330,"ip_address":"","ucode":"06544C6A87EE7C","user_header":"","comment_is_top":false,"comment_ctime":1588138489,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1588138489","product_id":100006701,"comment_content":"类在运行时解析过后，再次运行这个类的时候是直接加载解析过的还是快速的匹配然后重新解析呢","like_count":0,"discussions":[{"author":{"id":2330905,"avatar":"https://static001.geekbang.org/account/avatar/00/23/91/19/6a3e7efc.jpg","nickname":"程序员9527","note":"","ucode":"1A1609F6BEAD84","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":383468,"discussion_content":"没有jit时，需要重新解析","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1626103685,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":211990,"user_name":"张sir","can_delete":false,"product_type":"c1","uid":1262660,"ip_address":"","ucode":"FCDA9B9A9CD58C","user_header":"https://static001.geekbang.org/account/avatar/00/13/44/44/25e4465e.jpg","comment_is_top":false,"comment_ctime":1588043309,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1588043309","product_id":100006701,"comment_content":"一次编译，处处运行，面向对象，jvm提供内存关系，垃圾自动回收","like_count":0},{"had_liked":false,"id":205978,"user_name":"Andy","can_delete":false,"product_type":"c1","uid":1447283,"ip_address":"","ucode":"708042A35424DC","user_header":"https://static001.geekbang.org/account/avatar/00/16/15/73/e5e4b245.jpg","comment_is_top":false,"comment_ctime":1586766181,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1586766181","product_id":100006701,"comment_content":"对于java平台的理解，我可能会从整个知识体系结构阐述。<br>   第一，围绕jvm展开。java语言的运行是建立在jvm之上的，针对源码，通过编译器javac转换为字节码bytecode，在经过类加载器class-loader读取字节码，借助解释器java将字节码转换为机器码。随后，基于对象生命周期，jvm创建对象，根据对象大小分配到堆内存中。随着，对象生命周期结束，通过GC将垃圾回收，在完全回收之前，会经过before-after机制进行收尾处理。<br>   第二，围绕Java面向对象特性展开。从计算机语言的角度触发，Java是一门高级的面向对象的计算机编程语言。包含了计算机语言拥有的基本特性，如标识符、关键字、运算符、逻辑判断等等。同时，基于面向对象，具备了封装性、继承性、多态性等特点，提供了Java关于对象属性和行为的访问、访问控制权限设置、类方法的覆写和重载、对象之间的向上和向下转型等等。Java还根据需要提供了异常处理、线程并发、数据库访问等等机制，为程序的高可用、高性能等等保驾护航。<br>   第三，围绕类库展开。为了更好地提升开发效率，使程序开发更加专注于业务开发，Java提供了许多的类库，例如针对并发处理的Java并发包JUC、数据库连接的JDBC，流的处理IO&#47;NIO等等，这些都大大提高了开发效率。<br>   第四，整个Java生态展开。随着时代的发展，Java已经不仅仅局限于一门语言，它构建了极强的生态系统。开源框架Spring家族，包含服务器端常用的框架Spring、SpringMVC、SpringBoot、SpringCloud等等，基于大数据开发而产生的Hadoop、Spark、Kafka等等，因而，在Java这个生态系统下，可以做的事情非常多，无论是大数据处理、还是服务器端服务，亦或者各种容器等等，都是强大的存在。<br>","like_count":1},{"had_liked":false,"id":202800,"user_name":"寂兮廖兮","can_delete":false,"product_type":"c1","uid":1517824,"ip_address":"","ucode":"D2EEE2F7C2BC32","user_header":"https://static001.geekbang.org/account/avatar/00/17/29/00/fda870e3.jpg","comment_is_top":false,"comment_ctime":1586071652,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1586071652","product_id":100006701,"comment_content":"问一下老师，既然java9可以把源码直接编译为机器码，那是不是在执行的时候就不需要安装 jre了，直接在没有安装jre是电脑上也能跑java程序","like_count":0},{"had_liked":false,"id":198403,"user_name":"rexcai","can_delete":false,"product_type":"c1","uid":1595589,"ip_address":"","ucode":"E3AEB9A6D94EE8","user_header":"https://static001.geekbang.org/account/avatar/00/18/58/c5/433de59b.jpg","comment_is_top":false,"comment_ctime":1585449821,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1585449821","product_id":100006701,"comment_content":"本次课读完，收获颇丰，工作中一直都是使用Java，而没有在意Java底层的本质，通过老师的讲述，有了大概的理解，再去找点资料总结下","like_count":0},{"had_liked":false,"id":197415,"user_name":"玩家","can_delete":false,"product_type":"c1","uid":1187094,"ip_address":"","ucode":"75BC2C2B4FC391","user_header":"https://static001.geekbang.org/account/avatar/00/12/1d/16/b75d040a.jpg","comment_is_top":false,"comment_ctime":1585375494,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1585375494","product_id":100006701,"comment_content":"还在学习Java ，给不出啥评论，相关的底层知识暂时没有学到，但是看文章和评论，学到不少东西：<br>为了避免看过就忘记的大脑，还是要输出一下自己的理解：<br>Java 编译器将源文件编译后，才能直接执行；<br>编译一次之后就可以直接 用 class 文件执行了；<br>暂时只有这么多理解，当我学习得再深入的时候，我会反复的看这专栏的，看懂为止；","like_count":0},{"had_liked":false,"id":196676,"user_name":"macco","can_delete":false,"product_type":"c1","uid":1186971,"ip_address":"","ucode":"502B3CCF12A096","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/sBdBCczeAia0ZdJ0jqUC4bUv6lpRo2sleTib6M7Mia6d6JrdUfSHATpHWspqGeyibKgvKPcK0Q2pABw7VMaZNRK4CQ/132","comment_is_top":false,"comment_ctime":1585301956,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1585301956","product_id":100006701,"comment_content":"JVM是Java语言能够跨平台的基础。<br>Java特性：<br>1.面向对象（封装，多态，继承）<br>2.Java并不单是解释执行，也非单编译执行.","like_count":0},{"had_liked":false,"id":196657,"user_name":"玩家","can_delete":false,"product_type":"c1","uid":1187094,"ip_address":"","ucode":"75BC2C2B4FC391","user_header":"https://static001.geekbang.org/account/avatar/00/12/1d/16/b75d040a.jpg","comment_is_top":false,"comment_ctime":1585300541,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1585300541","product_id":100006701,"comment_content":"跟着Java学习路径来学习啦","like_count":0},{"had_liked":false,"id":195907,"user_name":"ilovealt","can_delete":false,"product_type":"c1","uid":1113180,"ip_address":"","ucode":"35CB4FD836135B","user_header":"https://static001.geekbang.org/account/avatar/00/10/fc/5c/a3d42cdb.jpg","comment_is_top":false,"comment_ctime":1585223281,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1585223281","product_id":100006701,"comment_content":"JVM的那本书，还得多来几遍把它吃透。","like_count":0},{"had_liked":false,"id":195265,"user_name":"黄乔鑫","can_delete":false,"product_type":"c1","uid":1863174,"ip_address":"","ucode":"CBD0A8E5E99427","user_header":"https://static001.geekbang.org/account/avatar/00/1c/6e/06/bb43e716.jpg","comment_is_top":false,"comment_ctime":1585151417,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1585151417","product_id":100006701,"comment_content":"双亲委派其实不要从中文理解比较好，英文名是parents，就是是多层级的加载器，如果父层不行就由父层的父层来执行，这样会好理解一点","like_count":0,"discussions":[{"author":{"id":2330905,"avatar":"https://static001.geekbang.org/account/avatar/00/23/91/19/6a3e7efc.jpg","nickname":"程序员9527","note":"","ucode":"1A1609F6BEAD84","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":383470,"discussion_content":"向上查找","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1626104025,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":190944,"user_name":"coder","can_delete":false,"product_type":"c1","uid":1396710,"ip_address":"","ucode":"1DF53B7DEC8E8C","user_header":"https://static001.geekbang.org/account/avatar/00/15/4f/e6/38f17bd9.jpg","comment_is_top":false,"comment_ctime":1584711957,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1584711957","product_id":100006701,"comment_content":"想请教一个问题：jvm那些堆，方法区等等，这一套抽象机制是为了将字节码翻译成机器码，并不是为了屏蔽操作系统而存在的？屏蔽操作系统体现在哪里？","like_count":0},{"had_liked":false,"id":189847,"user_name":"漫漫人生终如戏","can_delete":false,"product_type":"c1","uid":1136466,"ip_address":"","ucode":"52E860814A5CF3","user_header":"https://static001.geekbang.org/account/avatar/00/11/57/52/2c1c542f.jpg","comment_is_top":false,"comment_ctime":1584576891,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1584576891","product_id":100006701,"comment_content":"第一讲，看的云里雾里的，看底下评论不错","like_count":0},{"had_liked":false,"id":188527,"user_name":"wakaka","can_delete":false,"product_type":"c1","uid":1471508,"ip_address":"","ucode":"835A7341577D3B","user_header":"https://static001.geekbang.org/account/avatar/00/16/74/14/ea854bfc.jpg","comment_is_top":false,"comment_ctime":1584364940,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1584364940","product_id":100006701,"comment_content":"不同的平台有不同的Java虚拟机，作为桥梁，屏蔽了底层操作系统的差异性。","like_count":0},{"had_liked":false,"id":185003,"user_name":"张镇鸿","can_delete":false,"product_type":"c1","uid":1889764,"ip_address":"","ucode":"7648CDED60E718","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/bca6GH6xIs5DsH4RibBEQh1pZSTkUT4bFP8fkLBC4Jkm6g8VDcOrySNg0icum9pEuUW259vP8Yv7icCW63Ff1J1ag/132","comment_is_top":false,"comment_ctime":1583464938,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1583464938","product_id":100006701,"comment_content":"参考了文章和一些评论。<br>对java平台的理解：<br>范围：<br>        语言（泛型、lambda）<br>        平台无关性（jvm将源码编译为字节码，字节码在解释（字节码在jvm内部实现的解释器直接输出结果）或者编译为机器码（转化为低级语言），机器码是二            进制流，CPU可以直接识别，所以是机器码，如果cpu可以直接识别字节码，也可以理解为字节码是机器码）<br>        类库（集合、并发、网络、IO&#47;NIO）<br>        JDK（开发工具、javac编译器、诊断工具）<br>java理解：<br>        java是面向对象语言，书写一次到处编译是java的最广为人知的特性，其实现的原理是通过语言与操作系统 中间加入的java虚拟机jvm实现的。jvm将java源码编译为字节码，然后通过jvm解释器将字节码转化为最终的机器码，这里是解释。大多数情况使用的是hotspot jvm，提供的是JIT（justi in time）编译器，动态编译，直接将热点代码编译成机器码。<br>        java分为编译期和运行期，javac是java自带的编译器，将源码编译为jvm支持的字节码<br>        java平台能跨语言的原因是加入了每个平台都有自己定制的jvm虚拟机，其他语言也可以实现类似的模式，jvm能够解释的是字节码。将字节码转化为更高性能的机器码是编译，即JIT的编译器，属于动态编译器的一种，运行中再将字节码转化为机器码<br>        相比C语言，C语言会直接调用os的api，不同的os的api不一样，C语言需要修改。<br>        AOT编译器：跳过字节码，java9支持将源代码直接编译为机器码<br>        java的类加载机制是class loader，涉及加载、验证、链接、初始化，可以去研究。<br><br>解释器、解析器（即编译）<br>编译和解释是两种方式，<br>    编译：对语法分析，将高级语言转化为低级语言，（转化），java将java源码编译为低级语言，也就是字节码（通过编译器javac），对于字节码，可以通过HotSpot的编译器将字节码转化为机器码，机器码CPU可以直接识别，因此也是编译。<br>    解释语法，得到结果（运行），解释器内部由编译器来实现，对于编译后得到的字节码，jvm自带的解释器可以直接运行字节码得到结果，当然解释器的内部也是实现了编译，只是对我们来说是透明的。<br>    说白了语言都需要转化为机器码才可以执行，只不过这个转化过程暴露还是封装形成了编译器与解释器，编译器得到的是低级语言的版本，解释器就是运行这个语言来得到结果。","like_count":0},{"had_liked":false,"id":182379,"user_name":"liyilin_jack","can_delete":false,"product_type":"c1","uid":1420541,"ip_address":"","ucode":"B53036A330BC32","user_header":"https://static001.geekbang.org/account/avatar/00/15/ac/fd/71092acd.jpg","comment_is_top":false,"comment_ctime":1582775969,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1582775969","product_id":100006701,"comment_content":"学习java可以说也比较长的时间了，基本上也是浮于表面，基本上还停留在“封装，继承，多态”的层面上。这里为了加深下对文章对理解，也说一下自己的看法<br><br>我们平常讲Java，一般都是直接指java语言，而java在设计之初就将其分为了两部分，一部分是java虚拟机，另一部分才是我们常提到的java语言。<br><br>java虚拟机相当于一个**中间层**，将复杂的内存分配，垃圾回收等进行隔离实现，而对于我们使用java语言编写java程序的应用工程师来讲，可以更高效的进行编码工作，也就是java所宣传的--write once，run anywhere.<br><br>而对java的深入学习和了解，也是离不开jvm虚拟机的，当我们遇到性能瓶颈，只能从JVM入手进行分析","like_count":0},{"had_liked":false,"id":181538,"user_name":"narsil的梦","can_delete":false,"product_type":"c1","uid":1185187,"ip_address":"","ucode":"67110C673BD951","user_header":"https://static001.geekbang.org/account/avatar/00/12/15/a3/e67d6039.jpg","comment_is_top":false,"comment_ctime":1582555873,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1582555873","product_id":100006701,"comment_content":"问题：<br>1.为什么说java语言过于形式主义？体现在哪里？什么语言可以做对比说明java过于形式主义？<br>2.什么情况下程序员需要操心内存分配和回收问题？<br>3.为什么Java刚开始是用解释执行的而不是直接编译成机器码？感觉编译成机器码是最直接的想法。","like_count":0},{"had_liked":false,"id":173523,"user_name":"J.Smile","can_delete":false,"product_type":"c1","uid":1336475,"ip_address":"","ucode":"C4D98DFDBF7584","user_header":"https://static001.geekbang.org/account/avatar/00/14/64/9b/0b578b08.jpg","comment_is_top":false,"comment_ctime":1579588831,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1579588831","product_id":100006701,"comment_content":"按照直观思考:<br>AOT应该是面向具体的操作系统编译为具体的机器码，效率是高了，不过跨平台应该就丢失了。","like_count":0},{"had_liked":false,"id":172582,"user_name":"vwyuheng","can_delete":false,"product_type":"c1","uid":1066086,"ip_address":"","ucode":"440BCE6D21EB29","user_header":"https://static001.geekbang.org/account/avatar/00/10/44/66/87f17ff5.jpg","comment_is_top":false,"comment_ctime":1579227452,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1579227452","product_id":100006701,"comment_content":"简单来说Java平台就是java语言的生态体现，java平台包括什么jdk类库，面向开发的api，jvm是java的runtime 环境，里面的编译、jit、gc机制、内存管理机制、类加载机制等等，都是为了java能稳定的run服务的。","like_count":0},{"had_liked":false,"id":172358,"user_name":"超超不会飞","can_delete":false,"product_type":"c1","uid":1025894,"ip_address":"","ucode":"F30D3E62442954","user_header":"https://static001.geekbang.org/account/avatar/00/0f/a7/66/d3e151c7.jpg","comment_is_top":false,"comment_ctime":1579160295,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1579160295","product_id":100006701,"comment_content":"Java源代码首先被编译成.class的字节码，字节码在虚拟机上解释执行。这也是Java能”一次编写，到处运行“的原因，正如JavaScript运行在浏览器上，Java运行在虚拟机上，两者都属于跨平台解释执行的语言。<br>虚拟机为了提高运行效率，往往会使用JIT(Just-In-Time)编译器（动态编译器）把热点代码编译成机器码（这部分代码存放于JVM中的方法区），以提高运行速度。这部分代码则属于编译执行。","like_count":0},{"had_liked":false,"id":172268,"user_name":"rike","can_delete":false,"product_type":"c1","uid":1583833,"ip_address":"","ucode":"920AAD0BD9245C","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/E3XKbwTv6WTssolgqZjZCkiazHgl2IdBYfwVfAcB7Ff3krsIQeBIBFQLQE1Kw91LFbl3lic2EzgdfNiciaYDlJlELA/132","comment_is_top":false,"comment_ctime":1579143097,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1579143097","product_id":100006701,"comment_content":"AOT编译过程有的说是字节码-&gt;机器码，有的说是源码-&gt;机器码，不是究竟是源码还是字节码？","like_count":0},{"had_liked":false,"id":172255,"user_name":"rike","can_delete":false,"product_type":"c1","uid":1583833,"ip_address":"","ucode":"920AAD0BD9245C","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/E3XKbwTv6WTssolgqZjZCkiazHgl2IdBYfwVfAcB7Ff3krsIQeBIBFQLQE1Kw91LFbl3lic2EzgdfNiciaYDlJlELA/132","comment_is_top":false,"comment_ctime":1579141318,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1579141318","product_id":100006701,"comment_content":"按照第一位留言者Woj讲的，“首先是将Java源代码转化成.CLASS文件字节码，这是第一次编译。.class文件就是可以到处运行的文件。然后Java字节码会被转化为目标机器代码，这是是由JVM来执行的，即Java的第二次编译。”<br><br>疑问如下<br>1、第一次编译是否是JVM没有参与，只是javac干活了？<br>2、如果是JVM参与的话，是不是只是程序运行时，其它时候不参与？","like_count":0,"discussions":[{"author":{"id":2330905,"avatar":"https://static001.geekbang.org/account/avatar/00/23/91/19/6a3e7efc.jpg","nickname":"程序员9527","note":"","ucode":"1A1609F6BEAD84","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":383473,"discussion_content":"1、是的，编译期间只有javac\n2、运行时类加载器将.class加载进入到jvm中","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1626104474,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":172187,"user_name":"rike","can_delete":false,"product_type":"c1","uid":1583833,"ip_address":"","ucode":"920AAD0BD9245C","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/E3XKbwTv6WTssolgqZjZCkiazHgl2IdBYfwVfAcB7Ff3krsIQeBIBFQLQE1Kw91LFbl3lic2EzgdfNiciaYDlJlELA/132","comment_is_top":false,"comment_ctime":1579103811,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"1579103811","product_id":100006701,"comment_content":"我看着很多评论有一个疑问，aot是源文件编译为机器码，还是字节码编译为机器码？","like_count":0,"discussions":[{"author":{"id":2320190,"avatar":"https://static001.geekbang.org/account/avatar/00/23/67/3e/6504218c.jpg","nickname":"lhllovelife","note":"","ucode":"FD2A824EF5600F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":326087,"discussion_content":"将.class文件编译为机器码，不是.java源文件","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1605517620,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2320190,"avatar":"https://static001.geekbang.org/account/avatar/00/23/67/3e/6504218c.jpg","nickname":"lhllovelife","note":"","ucode":"FD2A824EF5600F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":326047,"discussion_content":"AOT 编译器的基本思想是：在程序执行前生成 Java 方法的本地代码，以便在程序运行时直接使用本地代码。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1605507496,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":170727,"user_name":"HackMSF","can_delete":false,"product_type":"c1","uid":1697626,"ip_address":"","ucode":"BA021D3CDBCBF8","user_header":"https://static001.geekbang.org/account/avatar/00/19/e7/5a/0010f3f7.jpg","comment_is_top":false,"comment_ctime":1578675884,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1578675884","product_id":100006701,"comment_content":"#助教#作者的知识面太广，我得好好消化，这是我的产出《java概述》https:&#47;&#47;zhuanlan.zhihu.com&#47;p&#47;102182624","like_count":0},{"had_liked":false,"id":162967,"user_name":"Bella","can_delete":false,"product_type":"c1","uid":1139925,"ip_address":"","ucode":"1F3782A600F2AB","user_header":"https://static001.geekbang.org/account/avatar/00/11/64/d5/9dc96652.jpg","comment_is_top":false,"comment_ctime":1576635875,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"1576635875","product_id":100006701,"comment_content":"请教一下老师，为什么称jit为运行时编译，jit不应该是在运行之前，提前将热点代码编译成机器码，不需要对字节码一个一个逐个翻译执行","like_count":0,"discussions":[{"author":{"id":2330905,"avatar":"https://static001.geekbang.org/account/avatar/00/23/91/19/6a3e7efc.jpg","nickname":"程序员9527","note":"","ucode":"1A1609F6BEAD84","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":383474,"discussion_content":"首先需要知道哪些是热点代码，热带代码是需要运行之后才知道的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1626104587,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2320190,"avatar":"https://static001.geekbang.org/account/avatar/00/23/67/3e/6504218c.jpg","nickname":"lhllovelife","note":"","ucode":"FD2A824EF5600F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":326049,"discussion_content":"热点代码是动态的，某个时间段某段代码可能是热点代码，但过段时间它可能就不是了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1605507587,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":160965,"user_name":"许凯","can_delete":false,"product_type":"c1","uid":1604645,"ip_address":"","ucode":"4F11AD41CB0244","user_header":"https://static001.geekbang.org/account/avatar/00/18/7c/25/70134099.jpg","comment_is_top":false,"comment_ctime":1576071214,"is_pvip":true,"discussion_count":3,"race_medal":0,"score":"1576071214","product_id":100006701,"comment_content":"为什么是热点代码才被编译呢？节省空间？","like_count":0,"discussions":[{"author":{"id":2330905,"avatar":"https://static001.geekbang.org/account/avatar/00/23/91/19/6a3e7efc.jpg","nickname":"程序员9527","note":"","ucode":"1A1609F6BEAD84","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":383475,"discussion_content":"没有jit时，每一次都需要重新将字节码转化为机器码，浪费时间","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1626104665,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2320190,"avatar":"https://static001.geekbang.org/account/avatar/00/23/67/3e/6504218c.jpg","nickname":"lhllovelife","note":"","ucode":"FD2A824EF5600F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":326050,"discussion_content":"有些代码只执行一次或次数很少，所以没有必要把编译为本地机器码保存在缓存中。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1605507679,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1577580,"avatar":"https://static001.geekbang.org/account/avatar/00/18/12/6c/61a598e9.jpg","nickname":"苏暮沉觞","note":"","ucode":"532B816D4EF47B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":133153,"discussion_content":"减少解释带来的性能影响，用空间换时间","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578930856,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":159311,"user_name":"唯我天棋","can_delete":false,"product_type":"c1","uid":1015960,"ip_address":"","ucode":"B925246C92727A","user_header":"https://static001.geekbang.org/account/avatar/00/0f/80/98/5591d99d.jpg","comment_is_top":false,"comment_ctime":1575597785,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1575597785","product_id":100006701,"comment_content":"谈谈你对 Java 平台的理解？“Java 是解释执行”，这句话正确吗？<br><br><br>Java平台的理解？<br>显著特性：<br>1.Write once, run anywhere.可以夸平台。<br>2.GC.程序员不用关心内存回收释放。<br><br>相对于c++，最重要的特点就是有一层虚拟机，程序运行与java虚拟机上，而不是直接在操作系统上。同时，java可以在这层虚拟机上实现夸平台，内存回收，安全校验等等的特性。<br><br><br>Java 是解释执行的吗？<br>并不是。java程序的执行原理是，先将.java源码编译为.class 的java字节码。jvm会加载java字节码，并将其解释为机器码并执行。显然这种方式对于相对于c++直接执行机器码的方式会慢很多。但是java还有JIT，会将热点代码直接编译为可执行的机器码。所以，这些热点代码并不是解释执行的。根据2&#47;8原则，少数的代码才是影响性能的关键，所以java相比c++并没有想象中的慢。HotSpot JVM内置了两个不同的JIT compiler。C1对应client模式，门限1500次。C22对应server模式，门限10000次。<br>","like_count":0},{"had_liked":false,"id":151193,"user_name":"李元标","can_delete":false,"product_type":"c1","uid":1010986,"ip_address":"","ucode":"D048B7850902B2","user_header":"https://static001.geekbang.org/account/avatar/00/0f/6d/2a/a2acc011.jpg","comment_is_top":false,"comment_ctime":1573663962,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573663962","product_id":100006701,"comment_content":"看评论感觉就像神仙打架，我完全不敢出声啊","like_count":0},{"had_liked":false,"id":146604,"user_name":"liuth9429","can_delete":false,"product_type":"c1","uid":1598131,"ip_address":"","ucode":"C69317996943C4","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLDAVJqAFYgULe9wiadVzbNjUliaS6G6nXvpybZtUAwwQg8uErmGqMRpmmcicy9p8wQOohKRBKGtDexA/132","comment_is_top":false,"comment_ctime":1572578949,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1572578949","product_id":100006701,"comment_content":"解析 ：java代码通过javac变为.class文件（字节码）再通过jvm内嵌的解析器解析为机器码<br>编译 ：java代码直接通过JIT编译器，AOT编译器 等等直接转化为机器码","like_count":0},{"had_liked":false,"id":145786,"user_name":"喵喵喵","can_delete":false,"product_type":"c1","uid":1211713,"ip_address":"","ucode":"E3AD8BF42E19DF","user_header":"https://static001.geekbang.org/account/avatar/00/12/7d/41/3c5b770b.jpg","comment_is_top":false,"comment_ctime":1572365208,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1572365208","product_id":100006701,"comment_content":"打卡！","like_count":0},{"had_liked":false,"id":145508,"user_name":"天王","can_delete":false,"product_type":"c1","uid":1239337,"ip_address":"","ucode":"C074B2F9A5F007","user_header":"https://static001.geekbang.org/account/avatar/00/12/e9/29/629d9bb0.jpg","comment_is_top":false,"comment_ctime":1572308407,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1572308407","product_id":100006701,"comment_content":"1  问题1.1 2个问题：Java平台的优势 和Java是否解释型语言 1.2 Java比较流行，java是面相对象的语言，有2个特性，一个是跨平台的特性，一次编译，到处执行，Write once，run anywhere。另一个特性是垃圾收集，java通过垃圾收集器回收内存，内存的分配和回收不用自己处理。1.3 JRE java运行时环境，包括KVM和java类库，JDK Java 开发工具包，包括JRE和编译器等 1.4 java不是解释型语言，javac将源码编译成字节码，在运行时，虚拟机内嵌的解释器将字节码一行行的转换成成最终的机器码，但是我们常用的一些解释器，比如oracle的hotspot JVM，提供了JIT编译器，会将整个方法作为热区代码，编译成成机器码，直接执行，不需要再编译了，所以执行效率比较高。1.5 java分编译期和运行时，javac把源码编译成字节码，jvm把字节码解释或者编译执行，jvm和字节码屏蔽了操作系统和硬件的区别，是Write once，run anywhere的基础。在运行时，jvm通过类加载器，加载字节码，解释或者编译执行，java8等主流的java版本，默认采用解释执行和编译执行的混合模式，Hot spot 默认提供了2个JIT编译器，桌面应用用c1编译器，web应用用c2编译器。java虚拟机启动时，可以对运行模式进行选择，Xint模式，解释执行，Xcomp编译执行，xcomp在代码第一次运行时会进行编译，不能从整体应用分析，不能积极的分支预测。被调用很少的代码没必要像热区代码那样编译和优化，减少开销。也可以指定AOT模式，将字节码直接编译成机器码，节省了JIT预热等多方面的开销。","like_count":0},{"had_liked":false,"id":143956,"user_name":"Paul Shan","can_delete":false,"product_type":"c1","uid":1593140,"ip_address":"","ucode":"32D99989028284","user_header":"","comment_is_top":false,"comment_ctime":1571813710,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1571813710","product_id":100006701,"comment_content":"我觉得Java在刚出现的时候确实让人眼前一亮，现在新的语言例如Kotlin，语法更简洁，实现相同的功能需要代码更少，支持Domain Specific Language，也全面兼容Java的类库。在Android开发端有取代Java之势，不过了解Java底层的知识还是必要的。","like_count":0},{"had_liked":false,"id":143800,"user_name":"第一记忆","can_delete":false,"product_type":"c1","uid":1499365,"ip_address":"","ucode":"2EEBE479FAF245","user_header":"https://static001.geekbang.org/account/avatar/00/16/e0/e5/bdd0161c.jpg","comment_is_top":false,"comment_ctime":1571793700,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1571793700","product_id":100006701,"comment_content":"谈谈你对 Java 平台的理解？“Java 是解释执行”，这句话正确吗？<br><br>与其说“java语言具有跨平台性”，还不如说是“java虚拟机有跨平台性”，其实java语言的运行都得依赖JDK环境，Linux、Windows如果没有jdk环境照样不能运行java代码。“一次编译，到处运行”的前提也是在具有JVM的环境下才有效的，所谓的到处运行在我看来其实就是将代码做成了一条船（class文件、jar包），这条船需要水（JVM、JDK）才能起航，至于这条船要去哪儿能走多远（代码功能），就是靠船员和船本身（源代码）决定了。java是解释执行没错，但也不绝对就是解释执行，java代码的常规运行流程是：编码（将.java文件编码为.class字节码）——编译（将.class字节码编译为机器码）——运行（程序运行）——调试。","like_count":0},{"had_liked":false,"id":143250,"user_name":"coderkeep","can_delete":false,"product_type":"c1","uid":1129178,"ip_address":"","ucode":"29EE99F8F19F2E","user_header":"https://static001.geekbang.org/account/avatar/00/11/3a/da/7f9cbbd1.jpg","comment_is_top":false,"comment_ctime":1571655572,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1571655572","product_id":100006701,"comment_content":"花了一个月时间看完C&#47;CPP后再来看Java，重心放在编程语言特性，真心感觉Java解决了编程语言的很多问题，内存管理，类型的定义，编程范式等。但是带来便利的同时也导致难以深入到直接对内存和数据的操作。","like_count":0},{"had_liked":false,"id":141358,"user_name":"qiezitx","can_delete":false,"product_type":"c1","uid":1664274,"ip_address":"","ucode":"AEA470E33B4C19","user_header":"https://static001.geekbang.org/account/avatar/00/19/65/12/98fe9d80.jpg","comment_is_top":false,"comment_ctime":1571144559,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1571144559","product_id":100006701,"comment_content":"Java平台的理解：<br>1、语言特性：面向对象、泛型、Lambda、反射等<br>2、基础类库：集合、并发、IO&#47;NIO、网络、安全等<br>3、JVM：类加载机制、自动内存管理机制、运行时、辅助功能<br><br>高层次理解<br>1、JRE：Java运行时环境，包括JVM和Java类库<br>2、JDK：JRE的超集，包括编译器和更多工具<br>3、“一次书写，到处运行”，见精彩评论，一言蔽之：不同平台都运行JVM来执行.class<br>4、“Java是解释执行”，不对，现在不能这么说了，一言蔽之：运行时，包括解释执行和编译执行了<br>","like_count":0},{"had_liked":false,"id":140015,"user_name":"可乐","can_delete":false,"product_type":"c1","uid":1180149,"ip_address":"","ucode":"DFED84E8353661","user_header":"https://static001.geekbang.org/account/avatar/00/12/01/f5/0b7f1943.jpg","comment_is_top":false,"comment_ctime":1570786216,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1570786216","product_id":100006701,"comment_content":"跨平台,依托JVM虚拟机,实现一次编译到处运行.","like_count":0},{"had_liked":false,"id":138349,"user_name":"海中一条飞鱼","can_delete":false,"product_type":"c1","uid":1189198,"ip_address":"","ucode":"AE18EAE1B1F5DB","user_header":"https://static001.geekbang.org/account/avatar/00/12/25/4e/cadd5970.jpg","comment_is_top":false,"comment_ctime":1570175470,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1570175470","product_id":100006701,"comment_content":"编译一次，到处运行，jvm是此基础！","like_count":0},{"had_liked":false,"id":126824,"user_name":"Geek_d5c370","can_delete":false,"product_type":"c1","uid":1609234,"ip_address":"","ucode":"D5C4B94FBE0CC3","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKMkEV4Jb087qvGBSgc4tNibvLer2SJgy2KzZAyIxUDnDOARgK0AFEHCib20WA1ksayUUB3SiczPVtDw/132","comment_is_top":false,"comment_ctime":1566484128,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1566484128","product_id":100006701,"comment_content":"第一想法就是面向对象，至于一次编译，到处运行，没能及时想到，面向对象的话，举个例子，张三和李四都是人，所以人是个对象","like_count":0},{"had_liked":false,"id":126028,"user_name":"毅恒","can_delete":false,"product_type":"c1","uid":1635327,"ip_address":"","ucode":"83667DAFB3389E","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/aeCJlOUAyLVNLUYDw2soQPjiaXUC9X9CzLTE2qrV8wgNrh22ksnGib9sB2V5oQe1LuxXp9KvvzHG1yvCquEGpRxA/132","comment_is_top":false,"comment_ctime":1566296255,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1566296255","product_id":100006701,"comment_content":"Java平台有两大特性，第一点是一次编译，到处运行。Javac编译器将源码编译成class文件，也就是字节码。JVM虚拟机屏蔽了与操作系统对接的细节，通过类加载器将字节码解释为机器码。因此，在不同操作系统，通过不同的JVM来解释字节码，从而达到一次编译，到处运行。第二点是Java有垃圾回收机制，屏蔽了内存回收细节，从而使开发人员无需关心内存回收代码。Java是解释执行，这句话既对也不对。程序运行时，JVM解释字节码为机器码，每解释一条就执行一条。但是Java还有JIT编译器，会统计每个方法和循环体的执行次数，当一个方法和循环体的执行次数之和大于阈值时，JIT会将方法或循环体编译成字节码，并缓存到本地代码中，当下一次执行时，入口改为直接读取缓存中的机器码。","like_count":0},{"had_liked":false,"id":123459,"user_name":"looseChen","can_delete":false,"product_type":"c1","uid":1222319,"ip_address":"","ucode":"EB6AAF1C2D17BC","user_header":"https://static001.geekbang.org/account/avatar/00/12/a6/af/f10eed56.jpg","comment_is_top":false,"comment_ctime":1565679398,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1565679398","product_id":100006701,"comment_content":"java特性：<br>1.跨平台性。也就是宣传语「一次编译，到处运行」，java 的跨平台性完全得益于java的运行容器 jvm，它创建了一个统一的运行容器，不用纠结于适配各个操作系统的接口。<br>2.gc，合理的释放多余内存。<br>3.抽象性，利用继承、多态、封装的特性可以更好的抽象出业务。","like_count":0},{"had_liked":false,"id":123451,"user_name":"looseChen","can_delete":false,"product_type":"c1","uid":1222319,"ip_address":"","ucode":"EB6AAF1C2D17BC","user_header":"https://static001.geekbang.org/account/avatar/00/12/a6/af/f10eed56.jpg","comment_is_top":false,"comment_ctime":1565678934,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1565678934","product_id":100006701,"comment_content":"java的特性：<br>1. 跨平台性。一次编译，多处运行，","like_count":0},{"had_liked":false,"id":121904,"user_name":"BewhY","can_delete":false,"product_type":"c1","uid":1079811,"ip_address":"","ucode":"4BC26D47A79967","user_header":"https://static001.geekbang.org/account/avatar/00/10/7a/03/c9b43b21.jpg","comment_is_top":false,"comment_ctime":1565246607,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1565246607","product_id":100006701,"comment_content":"老师讲的不错，半个小时看老师的文章，然后三小时看评论，都是大神级别的人物，而且还越看越带劲，笔记都记了上千行的文字，太有趣了","like_count":0},{"had_liked":false,"id":108749,"user_name":"少盐","can_delete":false,"product_type":"c1","uid":1305743,"ip_address":"","ucode":"BCC7E264B75702","user_header":"https://static001.geekbang.org/account/avatar/00/13/ec/8f/8299495a.jpg","comment_is_top":false,"comment_ctime":1561875251,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1561875251","product_id":100006701,"comment_content":"为什么Java不开发多种针对各个平台的编译器，编译出来的机器码无论在哪个平台都可以执行，这样每个设备也就不需要jvm 了，只需要开发人员针对对应平台编译出机器码，把机器码放到对应平台不就可以执行了吗？","like_count":0},{"had_liked":false,"id":108747,"user_name":"少盐","can_delete":false,"product_type":"c1","uid":1305743,"ip_address":"","ucode":"BCC7E264B75702","user_header":"https://static001.geekbang.org/account/avatar/00/13/ec/8f/8299495a.jpg","comment_is_top":false,"comment_ctime":1561873947,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1561873947","product_id":100006701,"comment_content":"留言区很精彩，补充了很多知识，也有很多对本文内容的阐释，也有对疑问的回答，看来是高质量的学习社区","like_count":0},{"had_liked":false,"id":106731,"user_name":"胡梦宇","can_delete":false,"product_type":"c1","uid":1545417,"ip_address":"","ucode":"59766841A66C30","user_header":"https://static001.geekbang.org/account/avatar/00/17/94/c9/2865aa95.jpg","comment_is_top":false,"comment_ctime":1561380300,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1561380300","product_id":100006701,"comment_content":"说实话，jit是我第一次听说这个概念，但是听老师的讲解应该不难理解。打个比方，像我们写代码的时候，如果出现大量的重复代码，我们会将它提取成一个方法，每次需要写重复代码的时候，我们只需要写一条很简短的方法即可。jit就类似于这种，假设有这样的重复多次的一段字节码，每次jvm运行到这段字节码的时候都会将其转换成机器码，是非常耗费资源的，JIT就将它当做热点缓存下来，这样每次遇到这段字节码就不用翻译成机器码啦！不知道我理解的对不对","like_count":0,"discussions":[{"author":{"id":2320190,"avatar":"https://static001.geekbang.org/account/avatar/00/23/67/3e/6504218c.jpg","nickname":"lhllovelife","note":"","ucode":"FD2A824EF5600F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":326055,"discussion_content":"补充一下：JIT是以method(方法)为编译单位的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1605508990,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":105792,"user_name":"Jay","can_delete":false,"product_type":"c1","uid":1585942,"ip_address":"","ucode":"B4DC878EFC6D3C","user_header":"https://static001.geekbang.org/account/avatar/00/18/33/16/01b98f1c.jpg","comment_is_top":false,"comment_ctime":1561084360,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1561084360","product_id":100006701,"comment_content":"跨平台，有jvm的地方就能运行自己编写的java程序。java运行时环境提供核心类库和一些模块如 集合框架，网络，io&#47;nio ，并发，安全。 jdk提供了编译器和各种各样的诊断工具。java具有自动回收内存功能。jit 运行时生成机器码。对其中的具体内容都停留在使用上，具体的原理看过很快就忘了，诶","like_count":0},{"had_liked":false,"id":104417,"user_name":"VIC","can_delete":false,"product_type":"c1","uid":1114064,"ip_address":"","ucode":"3B3E6D344488B2","user_header":"https://static001.geekbang.org/account/avatar/00/10/ff/d0/402be1e9.jpg","comment_is_top":false,"comment_ctime":1560748926,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1560748926","product_id":100006701,"comment_content":"面向对象，跨操作系统。<br>一次编写，多次运行。<br>内存模型，堆，栈，方法去，虚拟机栈，常量区","like_count":0,"discussions":[{"author":{"id":2320190,"avatar":"https://static001.geekbang.org/account/avatar/00/23/67/3e/6504218c.jpg","nickname":"lhllovelife","note":"","ucode":"FD2A824EF5600F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":326058,"discussion_content":"堆栈方法区，这些属于内存结构，不是内存模型。\njvm 运行时内存结构： java虚拟机运行时数据区域有关.\njava 内存模型 ：java并发编程有关，共享内存的可见性、原子性、有序性。 \njava 对象模型 ：java对象的存储结构，不同对象存储在不同数据区，方法区、堆、栈。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1605509343,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":99321,"user_name":"^Miracle","can_delete":false,"product_type":"c1","uid":1441366,"ip_address":"","ucode":"6EF39A37DAB71F","user_header":"https://static001.geekbang.org/account/avatar/00/15/fe/56/51676835.jpg","comment_is_top":false,"comment_ctime":1559192832,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1559192832","product_id":100006701,"comment_content":"上次的回答在看到高赞答案后删除了 因为app上没有看到能对自己的留言修正或再次留言的功能。<br><br>上次回答中我的理解是 java代码是一样的，通过JVM编译的class不一致，每个class文件都会适用于不同的平台。这个理解有几个地方需要纠正：<br>首先java实现跨平台不是编译一次而是两次，第一次编译成class文件，这是通用编译、没有基于不同平台做适配，而第二次编译才是JVM根据不同平台将class文件编译成对应平台的机器码，实现跨平台执行。","like_count":0},{"had_liked":false,"id":97209,"user_name":"Santy","can_delete":false,"product_type":"c1","uid":1544945,"ip_address":"","ucode":"0542B86FE91066","user_header":"https://static001.geekbang.org/account/avatar/00/17/92/f1/8bdb33c9.jpg","comment_is_top":false,"comment_ctime":1558611264,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1558611264","product_id":100006701,"comment_content":"评论的内容也非常棒","like_count":0},{"had_liked":false,"id":92507,"user_name":"思而学","can_delete":false,"product_type":"c1","uid":1128821,"ip_address":"","ucode":"AFCFFDC78A7266","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/iavhNQNYg0tY5DFibJNnOmsUicjQalo90rbic5jricgps1EUeibIb9yhiayicS5QiapicldcXmeDHPDfHX48AYicZ8XQiaS3ag/132","comment_is_top":false,"comment_ctime":1557287329,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1557287329","product_id":100006701,"comment_content":"评论时不能错过的，结合评论对本次的小结。<br>分为两方面来谈<br>1、java语言<br>核心时面向对象的特性，其中的重点又有封装、继承多态。<br>类库，java语言有着大量的类库以供开发者使用。如各种数据结构、并发支持、网络、io&#47;nio。<br>2、支持平台<br>平台无关性：<br>编译器、JVM<br>编译器将java代码编译成java字节码，运行时jvm通过类加载器加载字节码，<br>然后解释或者编译成对应平台的机器码，这样实现平台的无关性。<br>JRE<br>JDK<br>现在的java程序不再时单单的解释执行，而是解释与编译混合运行。<br>编译时如果 JVM 有 JIT编译器，那么 JIT 可以将经常运行的代码作为“热点代码”，<br>编译成本地平台的机器码，提升运行效率。这边编译时方法级的（感觉实现起来好复杂）。","like_count":0},{"had_liked":false,"id":91935,"user_name":"PoL","can_delete":false,"product_type":"c1","uid":1416147,"ip_address":"","ucode":"72BA3C2D50D463","user_header":"https://static001.geekbang.org/account/avatar/00/15/9b/d3/41d04923.jpg","comment_is_top":false,"comment_ctime":1557138994,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1557138994","product_id":100006701,"comment_content":"时隔一年，有缘遇见<br>写一次到处执行 -跨平台<br>面向对象 -封装  多态 继承 OOD<br>java jdk <br>jvm：java-&gt;class ,jit,hotspot ,aot<br>core java lib:io,nio,集合，多线程并发，安全，network，<br>util tool<br>Dexclassloader：这个android 反射调用多 ，热加载新的dex，<br>java 是靠jvm解释class变成机器码（01），load到内存，执行；<br>这种方式性能会慢点，补救：1.jit 运行时jvm计数高频方法调用次数直接缓存，避免频繁解释翻译成01。2.aot 编译时直接处理成机器码01，直接执行<br>","like_count":0},{"had_liked":false,"id":91666,"user_name":"海边的Java","can_delete":false,"product_type":"c1","uid":1048992,"ip_address":"","ucode":"E31BEB60CA3EB0","user_header":"https://static001.geekbang.org/account/avatar/00/10/01/a0/50347655.jpg","comment_is_top":false,"comment_ctime":1557069326,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1557069326","product_id":100006701,"comment_content":"对应服务器应用来说，是不是直接将字节码编译成机器代码，减少中间解释过程，运行会更加高效呢？","like_count":0,"discussions":[{"author":{"id":2320190,"avatar":"https://static001.geekbang.org/account/avatar/00/23/67/3e/6504218c.jpg","nickname":"lhllovelife","note":"","ucode":"FD2A824EF5600F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":326063,"discussion_content":"字节码到机器代码的中间过程中还应该是有优化的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1605510326,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":89684,"user_name":"Flash","can_delete":false,"product_type":"c1","uid":1236163,"ip_address":"","ucode":"E285075C9E0B02","user_header":"https://static001.geekbang.org/account/avatar/00/12/dc/c3/e4ba51d5.jpg","comment_is_top":false,"comment_ctime":1556244106,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1556244106","product_id":100006701,"comment_content":"Java用虚拟机实现了跨平台，不用像C语言去关注不同系统API该怎么调用。Java是一门面相对象语言，可以对一些公共代码封装，增加代码的复用性，其他开发人员只要去调用就行了。这个通过公共类或它的对象去调用就是一种面向对象的体现，我只要知道你有什么功能，我去调用你来完成就可以了，不用关注你是怎么一步一步去实现的。这都是面向开发者友好的，更像生活中的自然语言。Java语言这么设计，也许也是在C语言的基础上，针对那些痛点做的改进吧。","like_count":0},{"had_liked":false,"id":88718,"user_name":"Amelie","can_delete":false,"product_type":"c1","uid":1395618,"ip_address":"","ucode":"4B842DE6F50413","user_header":"https://static001.geekbang.org/account/avatar/00/15/4b/a2/902f2226.jpg","comment_is_top":false,"comment_ctime":1555985772,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1555985772","product_id":100006701,"comment_content":"Java的跨平台，面相对象，内存管理，丰富的扩展都值得仔细研究。","like_count":0},{"had_liked":false,"id":87867,"user_name":"傲娇的小宝","can_delete":false,"product_type":"c1","uid":1493922,"ip_address":"","ucode":"C079B19BCC1B7C","user_header":"https://static001.geekbang.org/account/avatar/00/16/cb/a2/5e7c557e.jpg","comment_is_top":false,"comment_ctime":1555736502,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1555736502","product_id":100006701,"comment_content":"理解：jvm就是一种规范，所有符合规范的语言都可以执行。通过不同平台的不同实现做到跨平台。就像USB可以接不同厂家的设备，虚拟机就像不同电脑对usb的处理实现。然后不同符合规范的语言可以理解为不同厂家的实现。","like_count":0},{"had_liked":false,"id":85706,"user_name":"neohope","can_delete":false,"product_type":"c1","uid":1043475,"ip_address":"","ucode":"C0268F6E7E2B6E","user_header":"https://static001.geekbang.org/account/avatar/00/0f/ec/13/49e98289.jpg","comment_is_top":false,"comment_ctime":1555208105,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1555208105","product_id":100006701,"comment_content":"是不是讲到跨平台的时候，稍微多提一下各种语言如何跨平台，可能会更有参考性一些。比如从c&#47;c++，到java，到python，到js等等。","like_count":0},{"had_liked":false,"id":85691,"user_name":"lufeng","can_delete":false,"product_type":"c1","uid":1086762,"ip_address":"","ucode":"D99F3CEB948D1D","user_header":"https://static001.geekbang.org/account/avatar/00/10/95/2a/572fc97c.jpg","comment_is_top":false,"comment_ctime":1555198835,"is_pvip":false,"discussion_count":0,"race_medal":1,"score":"1555198835","product_id":100006701,"comment_content":"java是啥？跨平台的混合编译和解释的计算机编程语言. java不同版本都有新的特性，还在不断演进<br><br>java有啥？自带sdk，如collection，nio，thread等，强大的第三方库；强大的jvm；编译和监控工具<br><br>java生态有啥？maven，spring，dubbo，大数据等","like_count":0},{"had_liked":false,"id":82203,"user_name":"浩涛","can_delete":false,"product_type":"c1","uid":1390697,"ip_address":"","ucode":"DCF935D3F9FC6D","user_header":"https://static001.geekbang.org/account/avatar/00/15/38/69/7b11b341.jpg","comment_is_top":false,"comment_ctime":1554162369,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1554162369","product_id":100006701,"comment_content":"我觉得jvm主要有三个作用<br>1 实现语言跨平台<br>2 作为翻译将抽象的高级语言编译为机器语言<br>3 提供一些托管功能例如异常机制，内存管理(垃圾回收)功能<br>","like_count":0},{"had_liked":false,"id":79284,"user_name":"wrzgeek","can_delete":false,"product_type":"c1","uid":1031589,"ip_address":"","ucode":"69C4980053E388","user_header":"","comment_is_top":false,"comment_ctime":1553424543,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1553424543","product_id":100006701,"comment_content":"  java首先是一种跨平台的语言，这种跨平台的特性是因为有jvm的存在。jvm就好比一个适配器，对不同的操作系统做了适配，因此对于不同的操作系统，会有不同版本的jvm。因此，对于上层的开发人员来说，jvm就把操作系统的这种差异给屏蔽掉了，这就有了“一次编译，到处运行”的效果。<br>  以前一直以为java是编译运行的，原来是解释跟编译共存的。解释执行，是说java源码会先转换为class文件，然后通过jvm解析执行，编译时因为JIT可以将程序中常用的代码直接编译成机器码，然后执行。","like_count":0},{"had_liked":false,"id":79247,"user_name":"QQ怪","can_delete":false,"product_type":"c1","uid":1211223,"ip_address":"","ucode":"1A39B8433D9208","user_header":"https://static001.geekbang.org/account/avatar/00/12/7b/57/a9b04544.jpg","comment_is_top":false,"comment_ctime":1553415287,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1553415287","product_id":100006701,"comment_content":"之前把解释执行和编译执行给搞混了，现在看了文章和评论之后发现其实有点微妙的关系，其实都是为了优化而被使用的，两种方法都各有优点和缺点，jit和aot都是在其之上进行优化而做的，老师讲的非常棒，评论也都是一些大神，看来自己没有选错！","like_count":0},{"had_liked":false,"id":78427,"user_name":"请叫我华仔","can_delete":false,"product_type":"c1","uid":1465300,"ip_address":"","ucode":"307D39B12CEF61","user_header":"https://static001.geekbang.org/account/avatar/00/16/5b/d4/f4a2888a.jpg","comment_is_top":false,"comment_ctime":1553145563,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1553145563","product_id":100006701,"comment_content":"#对java平台的理解<br>java通过在操作系统和应用程序中加入jvm这个中间层，实现应用程序和操作系统的解耦，达到“一次书写，到处运行”的目的。我觉得它就像是为程序员设计的一个产品或者说是工具，因为大多数时候我们的代码都是为了解决业务问题，不想去纠缠操作系统相关的细节。<br><br>要实现与操作系统解耦，jvm运行时读取的文件就不再是so或者dll文件，而是具有约定格式的字节码文件。jvm对字节码进行解释执行，或者在运行时把字节码编译成本地代码执行来提高效率。实际上就是把操作系统交互的复杂性全部交给了jvm。jvm自身需要调用底层操作系统的接口，所以jvm能够提供的能力跟操作系统也有关系。<br><br>字节码文件是由java源代码编译生成。java语言设计得对程序员非常友好。它是面向对象的，有封装继承多态的特性，封装让代码易维护，继承和多态让我们可以很方便的进行扩展。java提供了强大的基础类库，像io，并发等。另外，java有大量的开源类库，比如spring全家桶，所以java程序员基本上不需要重复造轮子。<br><br>还有一个对程序员友好的是，jvm会自动进行垃圾回收，不需要在java代码中写内存分配合释放的逻辑。jvm提供了多种垃圾回收算法，可以根据情况对启动参数进行设置。<br><br>jdk中还提供了jconsole，jstat，jstack等工具可以方便地对jvm进行监控。","like_count":0},{"had_liked":false,"id":78123,"user_name":"Liang","can_delete":false,"product_type":"c1","uid":1173129,"ip_address":"","ucode":"E1A816EE5CE7DC","user_header":"https://static001.geekbang.org/account/avatar/00/11/e6/89/d8aec012.jpg","comment_is_top":false,"comment_ctime":1553074441,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1553074441","product_id":100006701,"comment_content":"高手在评论区","like_count":0},{"had_liked":false,"id":71500,"user_name":"Acom","can_delete":false,"product_type":"c1","uid":1445255,"ip_address":"","ucode":"E6A610AE4E98B9","user_header":"https://static001.geekbang.org/account/avatar/00/16/0d/87/c7171b5a.jpg","comment_is_top":false,"comment_ctime":1551358619,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1551358619","product_id":100006701,"comment_content":"工作一年半 感觉没有自己的java知识体系，希望能借助老师的课程建立起完备的java知识体系，坚持每天一课！","like_count":0},{"had_liked":false,"id":70526,"user_name":"刘付强🇨🇳","can_delete":false,"product_type":"c1","uid":1063916,"ip_address":"","ucode":"271094461AD0FC","user_header":"https://static001.geekbang.org/account/avatar/00/10/3b/ec/9717448c.jpg","comment_is_top":false,"comment_ctime":1551115326,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1551115326","product_id":100006701,"comment_content":"关于评论里多个人建议的无示例代码问题，老师在github上开一个课程的项目就行了，不用把代码贴文稿里","like_count":0},{"had_liked":false,"id":69273,"user_name":"王浩","can_delete":false,"product_type":"c1","uid":1229190,"ip_address":"","ucode":"EF4CFD45533803","user_header":"https://static001.geekbang.org/account/avatar/00/12/c1/86/afd6e862.jpg","comment_is_top":false,"comment_ctime":1550710767,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1550710767","product_id":100006701,"comment_content":"java之所以跨平台,一次编译,到处运行,是因为JAVA虚拟机对应不同平台有不同版本的虚拟机。","like_count":0},{"had_liked":false,"id":68772,"user_name":"张策","can_delete":false,"product_type":"c1","uid":1434941,"ip_address":"","ucode":"471F3A9D1F158F","user_header":"https://static001.geekbang.org/account/avatar/00/15/e5/3d/e9cf1a67.jpg","comment_is_top":false,"comment_ctime":1550598673,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1550598673","product_id":100006701,"comment_content":"Java平台包括:Java语言(面对对象的编程思想，反射，范型)，核心类库(map,list)和并发，第三方类库(spring,mybatis,druiddatasource...)和开发时的必备工具jstack，字节码文件，jvm(jit编译器和aot，内存模型，gc)。<br>.java文件经过javac编译成字节码文件，Java命令 .class的本质是通过jit解释器解释执行。为了提高性能，jit中可以将字节码直接编译成机器码，从这个角度看jit又是一个编译器。jit以分层模式运行，即同时作为解释器和编译器。其原因是:机器码确实比字节码运行更有效率，这是jit中编译器存在的理由。倘若jit只保留解释器存在如下问题:1)jvm启动较慢，要讲所有的字节码得全部编译需要一定的时间，难以满足需要应用程序迅速响应的场景；2)一次性的编译成机器码导致CPU的一些优化特性如分支预测难以发挥，因为其需要程序运行后统计其特性才能对其预测，其性能可能受到影响。所以在实际中jit需要解释器的存在。所以jvm默认以分层的模式运行.可以通过-Xint,-Xcompl,-Xmixed选择需要的模式。(这也是为什么JRE会有server,client两种模式，server启动慢，但执行效率高，client响应较快)。","like_count":0},{"had_liked":false,"id":68739,"user_name":"Michael 🛡YZY","can_delete":false,"product_type":"c1","uid":1186115,"ip_address":"","ucode":"F1D2BF8489A7D2","user_header":"https://static001.geekbang.org/account/avatar/00/12/19/43/226ca347.jpg","comment_is_top":false,"comment_ctime":1550589418,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1550589418","product_id":100006701,"comment_content":"好像在Java 11 已经只有jdk供大家选择了 jre完全融入在内不单独维护","like_count":0},{"had_liked":false,"id":68117,"user_name":"杨春鹏","can_delete":false,"product_type":"c1","uid":1172056,"ip_address":"","ucode":"518F38232F97B5","user_header":"https://static001.geekbang.org/account/avatar/00/11/e2/58/8c8897c8.jpg","comment_is_top":false,"comment_ctime":1550417701,"is_pvip":false,"replies":[{"id":"24412","content":"是的","user_name":"作者回复","user_name_real":"杨晓峰","uid":"1009360","ctime":1550593833,"ip_address":"","comment_id":68117,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1550417701","product_id":100006701,"comment_content":"看了您推荐的这篇文章：http:&#47;&#47;openjdk.java.net&#47;jeps&#47;295<br>AOT compilation is done by a new tool, jaotc:<br>\tjaotc --output libHelloWorld.so HelloWorld.class<br>\tjaotc --output libjava.base.so --module java.base<br>知道了AOT编译器，可以通过jaotc工具生成类似于类库的文件，该目标对象是HelloWorld.class<br>所以AOT是将.class文件生成本地机器码，而非.java文件。不知道是否正确","like_count":0,"discussions":[{"author":{"id":1009360,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/66/d0/6541f1d5.jpg","nickname":"杨晓峰","note":"","ucode":"2BF255467A978F","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":439524,"discussion_content":"是的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1550593833,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":68114,"user_name":"杨春鹏","can_delete":false,"product_type":"c1","uid":1172056,"ip_address":"","ucode":"518F38232F97B5","user_header":"https://static001.geekbang.org/account/avatar/00/11/e2/58/8c8897c8.jpg","comment_is_top":false,"comment_ctime":1550416933,"is_pvip":false,"replies":[{"id":"24413","content":"class code","user_name":"作者回复","user_name_real":"杨晓峰","uid":"1009360","ctime":1550593850,"ip_address":"","comment_id":68114,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1550416933","product_id":100006701,"comment_content":"杨老师，看完了评论区的所有留言，有个疑问还想请教一下：<br>AOT编译究竟是将.java文件编译成本地机器码，还是.class文件编译成本地机器码<br>谢谢！<br>","like_count":0,"discussions":[{"author":{"id":1009360,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/66/d0/6541f1d5.jpg","nickname":"杨晓峰","note":"","ucode":"2BF255467A978F","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":439522,"discussion_content":"class code","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1550593850,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":64141,"user_name":"cccyy","can_delete":false,"product_type":"c1","uid":1394612,"ip_address":"","ucode":"9499434309F655","user_header":"https://static001.geekbang.org/account/avatar/00/15/47/b4/d9d987d6.jpg","comment_is_top":false,"comment_ctime":1548676833,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1548676833","product_id":100006701,"comment_content":"类加载器的双亲委派模型，为什么要求类加载器直接不能以继承的方式来实现，而是要采用组合关系？","like_count":0,"discussions":[{"author":{"id":2004607,"avatar":"","nickname":"孔平","note":"","ucode":"B94BA42BF221B5","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":265637,"discussion_content":"要保证类的全局唯一性，只能先从父加载器开始","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1589422687,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":63507,"user_name":"硕🍉","can_delete":false,"product_type":"c1","uid":1242346,"ip_address":"","ucode":"D009D6A72E0C73","user_header":"https://static001.geekbang.org/account/avatar/00/12/f4/ea/e6fef235.jpg","comment_is_top":false,"comment_ctime":1548386891,"is_pvip":false,"replies":[{"id":"23340","content":"可以简单理解为调用频繁的方法<br>https:&#47;&#47;en.wikipedia.org&#47;wiki&#47;Hot_spot_(computer_programming)","user_name":"作者回复","user_name_real":"杨晓峰","uid":"1009360","ctime":1549817180,"ip_address":"","comment_id":63507,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1548386891","product_id":100006701,"comment_content":"老师帮忙解释一下“热点代码”","like_count":0,"discussions":[{"author":{"id":1009360,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/66/d0/6541f1d5.jpg","nickname":"杨晓峰","note":"","ucode":"2BF255467A978F","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":437614,"discussion_content":"可以简单理解为调用频繁的方法\nhttps://en.wikipedia.org/wiki/Hot_spot_(computer_programming)","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1549817180,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":62380,"user_name":"不似旧日","can_delete":false,"product_type":"c1","uid":1161271,"ip_address":"","ucode":"DF4C5E3AB9570C","user_header":"https://static001.geekbang.org/account/avatar/00/11/b8/37/98991aeb.jpg","comment_is_top":false,"comment_ctime":1548042027,"is_pvip":false,"replies":[{"id":"23333","content":"谢谢，建议看看新版本的JDK 11","user_name":"作者回复","user_name_real":"杨晓峰","uid":"1009360","ctime":1549814569,"ip_address":"","comment_id":62380,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1548042027","product_id":100006701,"comment_content":"JDK是java的开发环境,JRE才是java的运行环境,不要误导大家","like_count":0,"discussions":[{"author":{"id":1009360,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/66/d0/6541f1d5.jpg","nickname":"杨晓峰","note":"","ucode":"2BF255467A978F","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":437191,"discussion_content":"谢谢，建议看看新版本的JDK 11","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1549814569,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":58715,"user_name":"caohuan","can_delete":false,"product_type":"c1","uid":1256428,"ip_address":"","ucode":"4B092E33F3DF1E","user_header":"https://static001.geekbang.org/account/avatar/00/13/2b/ec/af6d0b10.jpg","comment_is_top":false,"comment_ctime":1547181830,"is_pvip":false,"replies":[{"id":"23323","content":"C1 C2只是hotspot JVM的两种内建的compiler，8以后server模式默认是tiered，简单认为就是都起作用","user_name":"作者回复","user_name_real":"杨晓峰","uid":"1009360","ctime":1549808980,"ip_address":"","comment_id":58715,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1547181830","product_id":100006701,"comment_content":"java 为 面向对象 的高级语言， 只需要有搭载 JRE运行环境，就可以跨平台 运行java ，java既有 解释性 又有 编译性，通过 编译器 把 源代码 转变为 .class的字节码，字节码 在jvm中的jit可以 用指令 -Xint 把 字节码 解释为 机器代码，用-Xcomp指令 把 字节码编译成 机器码。<br><br>JVM有二种模式 指令C1对应 client 模式，指令C2对应server模式。<br><br>JDK包括JRE环境 和编译器、安全机制、诊断工具等。<br><br>以上为 本篇所得，有错误  后面再来修改。","like_count":0,"discussions":[{"author":{"id":1009360,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/66/d0/6541f1d5.jpg","nickname":"杨晓峰","note":"","ucode":"2BF255467A978F","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":436186,"discussion_content":"C1 C2只是hotspot JVM的两种内建的compiler，8以后server模式默认是tiered，简单认为就是都起作用","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1549808980,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":58135,"user_name":"June","can_delete":false,"product_type":"c1","uid":1333595,"ip_address":"","ucode":"E1B7A7694918E7","user_header":"https://static001.geekbang.org/account/avatar/00/14/59/5b/1c96c5e8.jpg","comment_is_top":false,"comment_ctime":1547001302,"is_pvip":true,"replies":[{"id":"23318","content":"加油","user_name":"作者回复","user_name_real":"杨晓峰","uid":"1009360","ctime":1549807282,"ip_address":"","comment_id":58135,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1547001302","product_id":100006701,"comment_content":"待解决问题<br>1.如何结合自身项目说明java语言特点，把特性系统化深入化说明<br>2.jvm的基础知识","like_count":0,"discussions":[{"author":{"id":1009360,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/66/d0/6541f1d5.jpg","nickname":"杨晓峰","note":"","ucode":"2BF255467A978F","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":435924,"discussion_content":"加油","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1549807282,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":57139,"user_name":"大碗","can_delete":false,"product_type":"c1","uid":1027207,"ip_address":"","ucode":"F9CDC0C5BE48AC","user_header":"https://static001.geekbang.org/account/avatar/00/0f/ac/87/8ed5880a.jpg","comment_is_top":false,"comment_ctime":1546657860,"is_pvip":false,"replies":[{"id":"23311","content":"基本如此","user_name":"作者回复","user_name_real":"杨晓峰","uid":"1009360","ctime":1549806346,"ip_address":"","comment_id":57139,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1546657860","product_id":100006701,"comment_content":"科普了一下，解释执行是将编译好的字节码一行一行地翻译为机器码执行，编译执行是以方法为单位，将字节码一次性翻译为机器码后执行。","like_count":0,"discussions":[{"author":{"id":1009360,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/66/d0/6541f1d5.jpg","nickname":"杨晓峰","note":"","ucode":"2BF255467A978F","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":435424,"discussion_content":"基本如此","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1549806346,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":56657,"user_name":"帅不过王力宏","can_delete":false,"product_type":"c1","uid":1331930,"ip_address":"","ucode":"0B36C12FC0721D","user_header":"https://static001.geekbang.org/account/avatar/00/14/52/da/f8cece3f.jpg","comment_is_top":false,"comment_ctime":1546518444,"is_pvip":false,"replies":[{"id":"23309","content":"不错","user_name":"作者回复","user_name_real":"杨晓峰","uid":"1009360","ctime":1549803501,"ip_address":"","comment_id":56657,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1546518444","product_id":100006701,"comment_content":"java 是一门wirte once runanyway 这得益于他的跨平台实现，jre和jdk有效的屏蔽了操作系统和底层api的具体实现，使用虚拟机的方式使得java具有极强的跨平台特性。与c、c++最大的不同在于java的gc机制，通过各种自动回收不再被引用的对象来释放内存，极大的方便了开发者。java通过双亲委派的类加载机制将字节码加载到虚拟机中并且执行。jit 也可以将字节码直接转化成机器码。所以java不是单纯的解释执行的语言。","like_count":0,"discussions":[{"author":{"id":1009360,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/66/d0/6541f1d5.jpg","nickname":"杨晓峰","note":"","ucode":"2BF255467A978F","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":435172,"discussion_content":"不错","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1549803501,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":56450,"user_name":"要学习的大脑","can_delete":false,"product_type":"c1","uid":1365806,"ip_address":"","ucode":"D1B83EC9ED1702","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/B6l9HbWQl7OcZCPZrpqJljyNWwLhNM1GLWNueZ9mh7sb6KFPugnkd5bBia6piaWyg5Km92N79pKtuEP4yHxC3nuQ/132","comment_is_top":false,"comment_ctime":1546445778,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1546445778","product_id":100006701,"comment_content":"看评论 感觉可以学更多啊  太棒了 都是高手","like_count":0},{"had_liked":false,"id":56052,"user_name":"悠南","can_delete":false,"product_type":"c1","uid":1193711,"ip_address":"","ucode":"333665DB7CFDD6","user_header":"https://static001.geekbang.org/account/avatar/00/12/36/ef/83c2a743.jpg","comment_is_top":false,"comment_ctime":1546390329,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1546390329","product_id":100006701,"comment_content":"其实说到Java的一次编译多次运行,有点忧桑 ,本来是为了解决平台差异性问题,结果呢每个平台也要装Java环境 ,在这种情况下jvm的质量又进行了提升  ………然后暴露出更多的问题 jvm调优啊 对机器硬件要求啊  运行时异常编译时异常等等 乱七八糟的问题","like_count":0},{"had_liked":false,"id":54161,"user_name":"花间隐虎","can_delete":false,"product_type":"c1","uid":1134884,"ip_address":"","ucode":"976D63774B28D3","user_header":"https://static001.geekbang.org/account/avatar/00/11/51/24/60fa7332.jpg","comment_is_top":false,"comment_ctime":1545799272,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1545799272","product_id":100006701,"comment_content":"“一次编译，到处运行”的核心问题应该是把操作系统的细节用JVM屏蔽掉，向开发者提供一个统一的接口，从而可以把精力放在要解决的问题上。这样一来，开发者就不用管什么Windows、Linux和MacOS了，和系统接洽的活儿就交给某个平台的虚拟机这种专业的“翻译官”来做，因为这个活儿门坎可不低啊，除了系统接口，还得懂操作系统原理。<br>“即时编译”就是根据程序的局部性原理，把那些经常执行的语句直接翻译成机器码，从而绕开解释器一字一句地翻译，而且解释器可不久就得再翻译一次刚刚翻译过的语句！！！<br>最后想请问一下老师，C语言能做的事儿，C++都能做的更好更便捷，为什么还有那么多人用C语言？尽管它很强大，但是真的很繁琐哎(PS:本科期间一直做的C+Linux的开发，现在研一，刚转Java三个月)","like_count":0},{"had_liked":false,"id":52730,"user_name":"大傻子","can_delete":false,"product_type":"c1","uid":1357011,"ip_address":"","ucode":"2ACA4D4F59B9AE","user_header":"https://static001.geekbang.org/account/avatar/00/14/b4/d3/de70f7cb.jpg","comment_is_top":false,"comment_ctime":1545488905,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1545488905","product_id":100006701,"comment_content":"本地方法栈跟jit运行时编译有什么关系吗","like_count":0},{"had_liked":false,"id":49103,"user_name":"熟悉已陌生","can_delete":false,"product_type":"c1","uid":1345483,"ip_address":"","ucode":"70125896CBC827","user_header":"https://static001.geekbang.org/account/avatar/00/14/87/cb/23e01234.jpg","comment_is_top":false,"comment_ctime":1544604830,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1544604830","product_id":100006701,"comment_content":"老师，您好，Write once, run 根据翻译的解释是编译一次，在任何地方运行。你文章中提到是书写一次到处运行，我对这里很疑惑，书写你应该指的是源码也就是.java文件，根据翻译是指的.class文件，比如同一段代码windows编译好的.class文件，放在linux环境能运行吗？他们的.class文件中的机器码是否是一致的?<br>以上是一个新手言论，还请大家指正!","like_count":0},{"had_liked":false,"id":46942,"user_name":"可乐爱上咖啡","can_delete":false,"product_type":"c1","uid":1106951,"ip_address":"","ucode":"C8EECE5B95D791","user_header":"https://static001.geekbang.org/account/avatar/00/10/e4/07/4b69cb31.jpg","comment_is_top":false,"comment_ctime":1544006172,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1544006172","product_id":100006701,"comment_content":"java语言：一次编译，多处运行<br>1.类库：核心库，扩展库，安库库，大量的第三方库<br>2.JVM：垃圾回收，JIT<br>3.生态：J2EE，Hadoop,hbase,ELK <br>关于java的解释执行：<br>javac把java源码编译成字节码class文件<br>字节码运行在JVM上，开始通过解释执行，一行一行代码执行，JVM统计热点代码，编译成机器码，提高执行效率","like_count":0},{"had_liked":false,"id":45932,"user_name":"Loong","can_delete":false,"product_type":"c1","uid":1170296,"ip_address":"","ucode":"3B96FC58C9612C","user_header":"","comment_is_top":false,"comment_ctime":1543821078,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1543821078","product_id":100006701,"comment_content":"Java 平台<br>\t1. 显著特性<br>\t\t书写一次到处运行<br>\t\t通过垃圾手机器回收内存<br>\t<br>        2. 语言特性 - 面向对象、反射、泛型...<br>\t<br>        3. 基础类库：核心类库、集合、IO、网络、并发、安全等<br>\t<br>        4. JVM<br>\t\t类加载机制<br>\t\t内存、垃圾收集<br>\t\t不仅只有 Java 语言可以运行，其他合规的字节码都可以 Groovy、Kotlin 等<br>\t<br>       5. 代码执行<br>\t\t大多为解释 javac 字节码执行<br>\t\t有些虚拟机提供了 JIT 编译执行，例如 Android 的 Dalvik <br>\t\tAndroid 的 ART 支持 AOT<br>\t<br>        6. JDK - Java 开发包<br>\t\tJRE - Java 运行时环境<br>\t\tJVM<br>\t\tJava 类库<br>\t\t编译器 javac、诊断工具等","like_count":0},{"had_liked":false,"id":44363,"user_name":"Julian","can_delete":false,"product_type":"c1","uid":1331563,"ip_address":"","ucode":"451287999E982F","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJcqPrJEUz4PWI9fNOCFwPQ9SYZ9Sk7jcfLBl9IZSa0eCCibqKOO3FoaPZEB6ZiaWO7S1fTJ7nA3dNw/132","comment_is_top":false,"comment_ctime":1543414243,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1543414243","product_id":100006701,"comment_content":"学习总结 ：哈哈哈哈哈 学到东西了。<br>一、java平台的理解；<br>      1. 既然是java平台那就不能光说java语言的特性，首先java平台是可以跨平台，为什么java能够一次编写，到处运行呢？例如服务端编译一个java包在不同操作系统执行对应的命令就可以运行了，又例如为什么java能够编写Android程序，在Android手机操作系统也能够运行等等。本质原因其实跟java语言本身无关，而且类似jvm这种虚拟机平台。在不同操作系统上，虚拟机已经帮你实现了底层代码与操作系统对应的api实现的逻辑，而我们平时编写的java代码其实让我感觉就是属于用户层，你不需要特意去了解它到底运行在哪个环境下面。就比如同样是线程，可能在Windows上面是一种实现方法，在Linux上面又是另外一种实现方式，但是你编写代码的时候肯定不会考虑你是为了哪种操作系统去编写的程序，你只是知道用了一下java的Api，而具体的实现环境虚拟机已经帮你做好了，它只需要解析你的class文件，然后去按照你的语句、语义以及执行顺序去执行class文件。<br>      2.  java特性就是常说的封装、继承、多态<br>      3.  java已经帮你实现好的类库例如：IO&#47;NIO、Utils、集合、并发、网络<br>      4.  java的泛型对java特性的很好支持和实现，以及Lambda函数式编程，最近好像元编程概念比较火，其实就是注解和反射技术，一条注解帮你省了很多代码。<br>      5.  JRE (java的运行环境、JVM、类库)<br>      6.  JDK java的开发环境，包括JRE、javac、检测工具、辅助性工具等等。<br><br>二、JAVA是解释执行么？<br>      首先我们得明白什么是解释执行，什么是编译执行。例如：n = n +1; 对于这句代码解释执行就是当虚拟机读到这行代码的时候才把它加载到内存去执行。编译执行就是提前把这些代码编译到内存里面了，然后直接调用。解释执行与编译执行的优缺点：解释执行可以更好的和计算机进行交流，但是执行效率特别低。比如你同一句代码，可能要执行100万次，结果你就加载了100万次。编译执行好处就是执行效率高，缺点是有些代码或许在整个Application只执行1次，但是你也加载到内存里面了，那就是浪费内存资源。JIT就做到了大部分代码编译，冷代码不编译的特点。所以结论是混编？","like_count":0},{"had_liked":false,"id":43986,"user_name":"奕超","can_delete":false,"product_type":"c1","uid":1040045,"ip_address":"","ucode":"447069B3357999","user_header":"https://static001.geekbang.org/account/avatar/00/0f/de/ad/864516e4.jpg","comment_is_top":false,"comment_ctime":1543362436,"is_pvip":false,"replies":[{"id":"16132","content":"没问题","user_name":"作者回复","user_name_real":"杨晓峰","uid":"1009360","ctime":1543626845,"ip_address":"","comment_id":43986,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1543362436","product_id":100006701,"comment_content":"对于一次编写到处运行，我的理解是：因为有了jvm，编写的代码可以在不同平台运行，比如Windows，linux等。最直接的原因是jvm对Java字节码统一支持，而不同平台的jvm对各自的操作系统做了适配，因为同样的一件事情，在不同的操作系统需要调用不同的系统函数。总结起来，jvm在一次编写到处运行这个场景下，帮我们做了适配的工作。不知道这样理解有没有问题","like_count":0,"discussions":[{"author":{"id":1009360,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/66/d0/6541f1d5.jpg","nickname":"杨晓峰","note":"","ucode":"2BF255467A978F","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":430581,"discussion_content":"没问题","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543626845,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":42696,"user_name":"BY","can_delete":false,"product_type":"c1","uid":1119827,"ip_address":"","ucode":"9FFA0F414A978D","user_header":"https://static001.geekbang.org/account/avatar/00/11/16/53/03930a6b.jpg","comment_is_top":false,"comment_ctime":1543023159,"is_pvip":false,"replies":[{"id":"15382","content":"请看第35讲","user_name":"作者回复","user_name_real":"杨晓峰","uid":"1009360","ctime":1543155891,"ip_address":"","comment_id":42696,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1543023159","product_id":100006701,"comment_content":"‘’这里不再展开更多 JIT 的细节，没必要一下子就钻进去，我会在后面介绍分层编译的内容。&quot;<br>后面也好像没看到这部分内容了。","like_count":0,"discussions":[{"author":{"id":1009360,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/66/d0/6541f1d5.jpg","nickname":"杨晓峰","note":"","ucode":"2BF255467A978F","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":430163,"discussion_content":"请看第35讲","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543155891,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":42090,"user_name":"木白","can_delete":false,"product_type":"c1","uid":1194009,"ip_address":"","ucode":"BEC459430B293C","user_header":"https://static001.geekbang.org/account/avatar/00/12/38/19/c8d72c61.jpg","comment_is_top":false,"comment_ctime":1542908042,"is_pvip":false,"replies":[{"id":"15384","content":"可以有","user_name":"作者回复","user_name_real":"杨晓峰","uid":"1009360","ctime":1543156280,"ip_address":"","comment_id":42090,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1542908042","product_id":100006701,"comment_content":"买一份课程还送一堆高质量评论，棒！不知道课程更新完之后再买还有没有互动","like_count":0,"discussions":[{"author":{"id":1009360,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/66/d0/6541f1d5.jpg","nickname":"杨晓峰","note":"","ucode":"2BF255467A978F","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":429987,"discussion_content":"可以有","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543156280,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":41851,"user_name":"贾鹤鸣   ","can_delete":false,"product_type":"c1","uid":1091327,"ip_address":"","ucode":"52F87F513576D7","user_header":"https://static001.geekbang.org/account/avatar/00/10/a6/ff/4a8c99f1.jpg","comment_is_top":false,"comment_ctime":1542858987,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1542858987","product_id":100006701,"comment_content":"第一讲的这个问题，感觉是最难的。","like_count":0},{"had_liked":false,"id":41821,"user_name":"嗯哼","can_delete":false,"product_type":"c1","uid":1178416,"ip_address":"","ucode":"87F033693DEC3A","user_header":"https://static001.geekbang.org/account/avatar/00/11/fb/30/7ceb8c9a.jpg","comment_is_top":false,"comment_ctime":1542855076,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1542855076","product_id":100006701,"comment_content":"评论真是精益求精啊，感觉每个人说的都很对，我这小白就不知道该听何方 圣言了 <br>我要好好学习了~","like_count":0},{"had_liked":false,"id":39044,"user_name":"Gauss","can_delete":false,"product_type":"c1","uid":1090322,"ip_address":"","ucode":"F3FBDF834E2C54","user_header":"https://static001.geekbang.org/account/avatar/00/10/a3/12/d77dedc6.jpg","comment_is_top":false,"comment_ctime":1542178088,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1542178088","product_id":100006701,"comment_content":"评论真好看","like_count":0},{"had_liked":false,"id":38004,"user_name":"张闯","can_delete":false,"product_type":"c1","uid":1090513,"ip_address":"","ucode":"D5AD46A8DD6FB7","user_header":"https://static001.geekbang.org/account/avatar/00/10/a3/d1/a30a4d06.jpg","comment_is_top":false,"comment_ctime":1541849534,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1541849534","product_id":100006701,"comment_content":"编译执行：编译器将代码编译成特定机器的机器码，直接丢给机器执行。<br>解释执行：解释器在运行时逐行将代码翻译成机器码，交给机器执行。<br>jvm负责对java代码进行解释执行。这里的java代码是预编译好的.class字节码。之所以要预编译，一是能够提前发现代码的语法错误。二是有机会提前优化代码的性能。<br>jvm提供了JIT机制，能够将一些源代码直接编译成机器码，丢给机器。所以，不能说java是解释执行的语言。（能否把JIT也理解成解释执行，只不过解释的不是字节码，而是源代码？）<br>问题1: 能否把JIT也理解成解释执行，只不过解释的不是字节码，而是源代码？<br>问题2:解释器是在运行时把代码分块，按顺序编译成机器码，交给机器执行。然后再编译下一段代码，交给机器执行，循环往复。是这样吗？","like_count":0},{"had_liked":false,"id":37577,"user_name":"Geek_4e44ff","can_delete":false,"product_type":"c1","uid":1263099,"ip_address":"","ucode":"6E00BFD240709D","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTK5uXibRib32B9zMSBeLG8QBH9LNaAIWs1eECkoYTlhjaIzicrxr9ZJp9iaxzwUa2VBlAooy1X2GUVpPQ/132","comment_is_top":false,"comment_ctime":1541643575,"is_pvip":false,"replies":[{"id":"15445","content":"不错的总结","user_name":"作者回复","user_name_real":"杨晓峰","uid":"1009360","ctime":1543194745,"ip_address":"","comment_id":37577,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1541643575","product_id":100006701,"comment_content":"1.Java是一种面向对象语言，拥有跨平台能力和垃圾回收机制这两个显著特性。<br>2.JRE是Java的运行环境，包括JVM和Java类库等；JDK是JRE的超集。提供了更多的工具，比如编译器和诊断工具等<br>3.通常情况下，我们编写的Java源代码首先通过javac编译成字节码；在运行时，Java虚拟机内嵌的解释器将字节码转换成机器码。这种情况下，可以说Java是解释执行的。<br>4.但是目前的JVM，比如Oracle SDK提供的HotSpot JVM，都提供了JIT编译器，JIT编译器能够在运行时将热点代码编译成机器码，这种情况下热点代码就属于编译执行，而非解释执行了。<br>","like_count":0,"discussions":[{"author":{"id":1009360,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/66/d0/6541f1d5.jpg","nickname":"杨晓峰","note":"","ucode":"2BF255467A978F","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":428406,"discussion_content":"不错的总结","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543194745,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":36755,"user_name":"cw","can_delete":false,"product_type":"c1","uid":1264296,"ip_address":"","ucode":"82A6B50462F9F9","user_header":"https://static001.geekbang.org/account/avatar/00/13/4a/a8/b7e36dd2.jpg","comment_is_top":false,"comment_ctime":1541308954,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1541308954","product_id":100006701,"comment_content":"所谓一次编译，到处运行，其实指的是.java文件通过编译形成.class文件，.class文件经过jvm编译在不同平台下形成不同的字节码，所以实现一次编译，到处运行，你可以使用jit （JDK9）将java文件直接生成字节码. 当然了java不光于此，他还有强大的类库，安全验证，等工具","like_count":0},{"had_liked":false,"id":35972,"user_name":"F","can_delete":false,"product_type":"c1","uid":1275805,"ip_address":"","ucode":"31A5D334AE89DE","user_header":"https://static001.geekbang.org/account/avatar/00/13/77/9d/a908ec80.jpg","comment_is_top":false,"comment_ctime":1540877830,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1540877830","product_id":100006701,"comment_content":"事实证明，评论区能学到更多","like_count":0},{"had_liked":false,"id":34251,"user_name":"Michael","can_delete":false,"product_type":"c1","uid":1193306,"ip_address":"","ucode":"DD4144C6509258","user_header":"https://static001.geekbang.org/account/avatar/00/12/35/5a/7431e82e.jpg","comment_is_top":false,"comment_ctime":1540048092,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1540048092","product_id":100006701,"comment_content":"对java平台的理解:<br>1.跨平台<br>跨平台实现了write once, run anywhere.包括linux,unix,windows…<br>2.GC<br>垃圾回收机制减少了对内存的管理，多数情况避免了内存泄露.<br>3.特性<br>3.1 java语言方面与C最大的区别是思维方式的改变，从编程的角度，两种不同的思维方式.<br>3.2 语言的特性有泛型，lambda表达式，继承，多态等<br>4.<br><br>","like_count":0},{"had_liked":false,"id":33983,"user_name":"SHLOMA","can_delete":false,"product_type":"c1","uid":1066000,"ip_address":"","ucode":"50C0FF9C3E0FFD","user_header":"https://static001.geekbang.org/account/avatar/00/10/44/10/7bfc89a8.jpg","comment_is_top":false,"comment_ctime":1539938047,"is_pvip":false,"replies":[{"id":"12317","content":"具体看文章，一般在扩展部分会评估下前面的回答是比较泛泛的回答，还是已经比较完善了，主要是为了循序渐进，也顺便说明常见的坑，如果有的话","user_name":"作者回复","user_name_real":"杨晓峰","uid":"1009360","ctime":1540256345,"ip_address":"","comment_id":33983,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1539938047","product_id":100006701,"comment_content":"老师，能介绍下专栏文章的结构吗，比如典型回答模块是指反面案例还是正面案例，知识拓展是对典型回答的补充吗？","like_count":0,"discussions":[{"author":{"id":1009360,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/66/d0/6541f1d5.jpg","nickname":"杨晓峰","note":"","ucode":"2BF255467A978F","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":427093,"discussion_content":"具体看文章，一般在扩展部分会评估下前面的回答是比较泛泛的回答，还是已经比较完善了，主要是为了循序渐进，也顺便说明常见的坑，如果有的话","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1540256345,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":33055,"user_name":"刘胜","can_delete":false,"product_type":"c1","uid":1251625,"ip_address":"","ucode":"487374D72543E3","user_header":"https://static001.geekbang.org/account/avatar/00/13/19/29/f9490983.jpg","comment_is_top":false,"comment_ctime":1539741867,"is_pvip":false,"replies":[{"id":"12321","content":"jit后的程序，性能通常是非常棒的","user_name":"作者回复","user_name_real":"杨晓峰","uid":"1009360","ctime":1540256595,"ip_address":"","comment_id":33055,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1539741867","product_id":100006701,"comment_content":"学习到了很多，Java是一种解释型语言。而且是编译成class文件由jvm执行。Java语言容易让人理解，用来做一些应用。","like_count":0,"discussions":[{"author":{"id":1009360,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/66/d0/6541f1d5.jpg","nickname":"杨晓峰","note":"","ucode":"2BF255467A978F","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":426928,"discussion_content":"jit后的程序，性能通常是非常棒的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1540256595,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":30135,"user_name":"梦见山","can_delete":false,"product_type":"c1","uid":1063265,"ip_address":"","ucode":"607BA4BC4FD7FE","user_header":"https://static001.geekbang.org/account/avatar/00/10/39/61/dd78b0ed.jpg","comment_is_top":false,"comment_ctime":1538696400,"is_pvip":false,"replies":[{"id":"12429","content":"谢谢","user_name":"作者回复","user_name_real":"杨晓峰","uid":"1009360","ctime":1540312103,"ip_address":"","comment_id":30135,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1538696400","product_id":100006701,"comment_content":"订阅这个专栏的专家很多啊！","like_count":0,"discussions":[{"author":{"id":1009360,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/66/d0/6541f1d5.jpg","nickname":"杨晓峰","note":"","ucode":"2BF255467A978F","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":425866,"discussion_content":"谢谢","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1540312103,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":27491,"user_name":"杯中酒醉人心","can_delete":false,"product_type":"c1","uid":1247525,"ip_address":"","ucode":"657CF082256C88","user_header":"https://static001.geekbang.org/account/avatar/00/13/09/25/b1a249bc.jpg","comment_is_top":false,"comment_ctime":1537895283,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1537895283","product_id":100006701,"comment_content":"评论区，真的太精彩了。今天入坑。感觉就这篇的内容就值入坑费了。","like_count":0},{"had_liked":false,"id":27263,"user_name":"Omi","can_delete":false,"product_type":"c1","uid":1118391,"ip_address":"","ucode":"DFCB9D2D26DC96","user_header":"https://static001.geekbang.org/account/avatar/00/11/10/b7/c6c8a75e.jpg","comment_is_top":false,"comment_ctime":1537860518,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1537860518","product_id":100006701,"comment_content":"我对java平台只有范范的理解，面向对象，编译执行，运行速度没c快，比较成熟，适合大多数领域，都很肤浅，希望能在您专栏学到实实在在的东西😊","like_count":0},{"had_liked":false,"id":27239,"user_name":"Rancood","can_delete":false,"product_type":"c1","uid":1204333,"ip_address":"","ucode":"052BDF2221F480","user_header":"https://static001.geekbang.org/account/avatar/00/12/60/6d/e2576fda.jpg","comment_is_top":false,"comment_ctime":1537855558,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1537855558","product_id":100006701,"comment_content":"1JRE：java运行环境，JDK：JRE的扩展，里面提供更多工具，如编译器、诊断工具。<br>2java文件先有编译器编译为字节码文件，运行时由JVM解释字节码文件为机器能识别的机器码，这就实现了，一次编写，到处运行。只要符合字节码编译规范，其他语言也可以运行在JVM上。<br>3java并不是单纯的解释执行，oracle jdk提供的Hotspot JVM里面有JIT编译器，代码运行时，可对热点代码进行编译。所以java热点代码是编译执行。<br>4类加载器：bootstrap、application、Extension Class-loader，类加载过程：加载、验证、链接、初始化<br>5JVM垃圾收集器:SerialGC、Parallel GC、CMS、G1<br>","like_count":0},{"had_liked":false,"id":26971,"user_name":"才才","can_delete":false,"product_type":"c1","uid":1242373,"ip_address":"","ucode":"94D76106261987","user_header":"https://static001.geekbang.org/account/avatar/00/12/f5/05/d6547381.jpg","comment_is_top":false,"comment_ctime":1537788274,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1537788274","product_id":100006701,"comment_content":"字节码在什么时候变成机器码的？","like_count":0},{"had_liked":false,"id":26379,"user_name":"学学而已,不用紧张","can_delete":false,"product_type":"c1","uid":1204889,"ip_address":"","ucode":"7E4E67CDDC5F67","user_header":"https://static001.geekbang.org/account/avatar/00/12/62/99/1160750f.jpg","comment_is_top":false,"comment_ctime":1537582200,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1537582200","product_id":100006701,"comment_content":"     java平台提供了将现实中的事，物，事物联系及活动；使人将这些种种定义、抽象、组合，进而转成java代码成为系统，为人服务成为现实。","like_count":0},{"had_liked":false,"id":25217,"user_name":"天醒了我亮了","can_delete":false,"product_type":"c1","uid":1026345,"ip_address":"","ucode":"366695B8BA5BCF","user_header":"https://static001.geekbang.org/account/avatar/00/0f/a9/29/ac45ad45.jpg","comment_is_top":false,"comment_ctime":1537270762,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1537270762","product_id":100006701,"comment_content":"Java是一种跨平台（一次编写，各平台执行）、面向对象的语言。<br>Java主要包括JRE 和JDK两部分组成。JRE是java运行时环境，包含java虚拟机和类库。JDK是java开发工具包，包括了更多的工具，比如各种诊断工具<br>Java执行的过程，通过javac将.java文件编译成class文件，在java虚拟机的ClassLoader将字节码编译解释成机器可识别的语言，也就是二进制文件。","like_count":0},{"had_liked":false,"id":22530,"user_name":"Spring","can_delete":false,"product_type":"c1","uid":1222211,"ip_address":"","ucode":"8175463FB4705B","user_header":"https://static001.geekbang.org/account/avatar/00/12/a6/43/cb6ab349.jpg","comment_is_top":false,"comment_ctime":1535770007,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1535770007","product_id":100006701,"comment_content":"“在运行时，JVM 会通过类加载器（Class-Loader）加载字节码，解释或者编译执行。“<br>在运行时还会编译吗？<br><br>-Xcomp参数关闭不解释执行，那么代码是怎么执行的？和AOT有啥区别？<br><br>这是我的两个疑问，求解答","like_count":0},{"had_liked":false,"id":22333,"user_name":"小豆子","can_delete":false,"product_type":"c1","uid":1221275,"ip_address":"","ucode":"F57A176ADB0571","user_header":"https://static001.geekbang.org/account/avatar/00/12/a2/9b/cd664e55.jpg","comment_is_top":false,"comment_ctime":1535607759,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1535607759","product_id":100006701,"comment_content":"评论都是精华呀😂","like_count":0},{"had_liked":false,"id":19803,"user_name":"A2Z","can_delete":false,"product_type":"c1","uid":1199462,"ip_address":"","ucode":"D83DD53C77CC2F","user_header":"https://static001.geekbang.org/account/avatar/00/12/4d/66/d7ed16ca.jpg","comment_is_top":false,"comment_ctime":1534080514,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1534080514","product_id":100006701,"comment_content":"看完评论，我决定订阅了","like_count":0},{"had_liked":false,"id":18380,"user_name":"(^o^)","can_delete":false,"product_type":"c1","uid":1142842,"ip_address":"","ucode":"AAD9EC32A590E2","user_header":"https://static001.geekbang.org/account/avatar/00/11/70/3a/6b82e940.jpg","comment_is_top":false,"comment_ctime":1533278528,"is_pvip":false,"replies":[{"id":"6457","content":"jit简单说是以方法为单位，当然也会对方法局部循环之类做分析","user_name":"作者回复","user_name_real":"杨晓峰","uid":"1009360","ctime":1533397705,"ip_address":"","comment_id":18380,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1533278528","product_id":100006701,"comment_content":"“JIT在运行时将热点代码编译成机器码，属于编译执行。”  请问，热点代码是字节码吗？","like_count":0,"discussions":[{"author":{"id":1009360,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/66/d0/6541f1d5.jpg","nickname":"杨晓峰","note":"","ucode":"2BF255467A978F","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":421498,"discussion_content":"jit简单说是以方法为单位，当然也会对方法局部循环之类做分析","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1533397705,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":17915,"user_name":"jack","can_delete":false,"product_type":"c1","uid":1182934,"ip_address":"","ucode":"D3DBD1DC490E1E","user_header":"https://static001.geekbang.org/account/avatar/00/12/0c/d6/2677ec43.jpg","comment_is_top":false,"comment_ctime":1533018492,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1533018492","product_id":100006701,"comment_content":"高手很多，看完文章再看评论能更加巩固所学。","like_count":0},{"had_liked":false,"id":17912,"user_name":"猎人","can_delete":false,"product_type":"c1","uid":1181523,"ip_address":"","ucode":"39C69A1AE0A268","user_header":"https://static001.geekbang.org/account/avatar/00/12/07/53/908c9b6f.jpg","comment_is_top":false,"comment_ctime":1533017308,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1533017308","product_id":100006701,"comment_content":"请问，jre将退出历史舞台，这句话怎么讲呢？","like_count":0},{"had_liked":false,"id":17282,"user_name":"Vance","can_delete":false,"product_type":"c1","uid":1174028,"ip_address":"","ucode":"D9659824312D87","user_header":"https://static001.geekbang.org/account/avatar/00/11/ea/0c/d79ae60d.jpg","comment_is_top":false,"comment_ctime":1532537579,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1532537579","product_id":100006701,"comment_content":"满满的干货！听录音看评论，看了一个多小时，收货不少，理解有上升了一个层次，更加深入了，另外，高手也不少哦！评论区都是精华！","like_count":0},{"had_liked":false,"id":16931,"user_name":"泥土","can_delete":false,"product_type":"c1","uid":1179179,"ip_address":"","ucode":"45A91F38441B37","user_header":"https://static001.geekbang.org/account/avatar/00/11/fe/2b/dfbaeda1.jpg","comment_is_top":false,"comment_ctime":1532311508,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1532311508","product_id":100006701,"comment_content":"到目前位置我对Java的大致理解他的几大特性，封装继承多态。我觉得Java语言不管在写什么项目，项目中的什么业务，业务中的哪些逻辑，全部都可以映射到现实的生活当中。也就是说我在做一些逻辑的时候就会在脑中想象，我在生活中是否遇到过这种清况or类似的事情，甚至我有一种想法，就是没有什么需求是Java做不到的，只要需求提出来就能做到，当然这是在技术非常强硬的基础下才能实现的。可以说我的理解非常的浅薄。阅读完本篇文章后对Java有进一步的了解，如，JVM的三种编辑模式。Server模式，client模式，AOT模式，以及Java的晋级的方向，一直想不出该如何更深的学习，在这里有了明确的方向。","like_count":0},{"had_liked":false,"id":16926,"user_name":"codemonkey","can_delete":false,"product_type":"c1","uid":1156159,"ip_address":"","ucode":"E26C1D1802B2FD","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/226NabDEu1IGMN7Om1gQqHPom4ewTh1oBDYIxfUl4mow203UqCD0XGgEj0I7wEfNAPue6icqAXb5WhDZQjeHPrw/132","comment_is_top":false,"comment_ctime":1532309069,"is_pvip":false,"replies":[{"id":"5959","content":"存在可能，graal现在就是aot的实现基础，未来也许会逐步替换 c2 -&gt;c1-&gt;其他，但没发生呢，说不准的","user_name":"作者回复","user_name_real":"杨晓峰","uid":"1009360","ctime":1532445964,"ip_address":"","comment_id":16926,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1532309069","product_id":100006701,"comment_content":"请想听听杨老师对graalvm的见解，是否远期会完全替代掉jvm？","like_count":0,"discussions":[{"author":{"id":1009360,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/66/d0/6541f1d5.jpg","nickname":"杨晓峰","note":"","ucode":"2BF255467A978F","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":420972,"discussion_content":"存在可能，graal现在就是aot的实现基础，未来也许会逐步替换 c2 -&amp;gt;c1-&amp;gt;其他，但没发生呢，说不准的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1532445964,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":16612,"user_name":"Shayne","can_delete":false,"product_type":"c1","uid":1072052,"ip_address":"","ucode":"D05C4F49B0F348","user_header":"https://static001.geekbang.org/account/avatar/00/10/5b/b4/f9c0dca6.jpg","comment_is_top":false,"comment_ctime":1532051840,"is_pvip":false,"replies":[{"id":"5796","content":"aot还是需要jvm<br>","user_name":"作者回复","user_name_real":"杨晓峰","uid":"1009360","ctime":1532096989,"ip_address":"","comment_id":16612,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1532051840","product_id":100006701,"comment_content":"以前没有jvm，没法跑java，如今java也可以用aot编译成机器指令，没有jvm，也可以跑Java？","like_count":0,"discussions":[{"author":{"id":1009360,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/66/d0/6541f1d5.jpg","nickname":"杨晓峰","note":"","ucode":"2BF255467A978F","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":420868,"discussion_content":"aot还是需要jvm\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1532096989,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":16388,"user_name":"Mr. Lonely","can_delete":false,"product_type":"c1","uid":1168376,"ip_address":"","ucode":"A3FFF9B468D8FF","user_header":"https://static001.geekbang.org/account/avatar/00/11/d3/f8/f3e7e288.jpg","comment_is_top":false,"comment_ctime":1531920021,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1531920021","product_id":100006701,"comment_content":"老师您好，想问一个问题，只需要JRE的java应用，jre里面没有编译器，是怎么编译成系统认识的机器码的老师？是通过JIT编译器吗？","like_count":0},{"had_liked":false,"id":16287,"user_name":"dingwood","can_delete":false,"product_type":"c1","uid":1153828,"ip_address":"","ucode":"460EB0C6E8C611","user_header":"https://static001.geekbang.org/account/avatar/00/11/9b/24/1e4883c6.jpg","comment_is_top":false,"comment_ctime":1531875095,"is_pvip":false,"replies":[{"id":"5637","content":"jre缺少一些开发、诊断相关的工具、类库；<br>单独提供jre部分原因是因为applet webstart之类功能的需要，现在逐步剔除了","user_name":"作者回复","user_name_real":"杨晓峰","uid":"1009360","ctime":1531880431,"ip_address":"","comment_id":16287,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1531875095","product_id":100006701,"comment_content":"老师，请教个有点弱智的问题。jre和jdk区别在哪？原来的理解是jdk为开发环境。环境变量的设置路径全在jdk的相关jar包。jre为运行环境，生产上运行需要jre。但实际开发当中，生产环境一般都重新安装jdk，而不是拷贝jre。  jre基本对我这样的开发者绝缘。   另外，既然两个环境都能跑JAVA程序，为什么安装环境的时候要弄两套？开发环境用jdk, 生产环境也用jdk不就行了吗？  据您说，jre要退出了？缘何？","like_count":0,"discussions":[{"author":{"id":1009360,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/66/d0/6541f1d5.jpg","nickname":"杨晓峰","note":"","ucode":"2BF255467A978F","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":420744,"discussion_content":"jre缺少一些开发、诊断相关的工具、类库；\n单独提供jre部分原因是因为applet webstart之类功能的需要，现在逐步剔除了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1531880431,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":16170,"user_name":"pengshao","can_delete":false,"product_type":"c1","uid":1161377,"ip_address":"","ucode":"3D001993C6854C","user_header":"https://static001.geekbang.org/account/avatar/00/11/b8/a1/72397ba5.jpg","comment_is_top":false,"comment_ctime":1531811483,"is_pvip":false,"replies":[{"id":"5603","content":"不是一回事儿，热部署之类不阻挠JIT起作用","user_name":"作者回复","user_name_real":"杨晓峰","uid":"1009360","ctime":1531848100,"ip_address":"","comment_id":16170,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1531811483","product_id":100006701,"comment_content":"因为一直都是开发小项目，都是开发完，打包放在服务器上运行程序，这算是编译后执行吧？热更算是JIT吗？基本上项目需要更新都是停服，重新打包后运行，这样的话，是不是就没有利用到JIT这个技术？","like_count":0,"discussions":[{"author":{"id":1009360,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/66/d0/6541f1d5.jpg","nickname":"杨晓峰","note":"","ucode":"2BF255467A978F","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":420696,"discussion_content":"不是一回事儿，热部署之类不阻挠JIT起作用","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1531848100,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":15741,"user_name":"xianwei","can_delete":false,"product_type":"c1","uid":1062369,"ip_address":"","ucode":"B20EB5781D7C62","user_header":"https://static001.geekbang.org/account/avatar/00/10/35/e1/50b15e32.jpg","comment_is_top":false,"comment_ctime":1531444199,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1531444199","product_id":100006701,"comment_content":"评论区都是大神。","like_count":0},{"had_liked":false,"id":14433,"user_name":"Winston","can_delete":false,"product_type":"c1","uid":1165489,"ip_address":"","ucode":"69E97CF79D407F","user_header":"https://static001.geekbang.org/account/avatar/00/11/c8/b1/b47e913f.jpg","comment_is_top":false,"comment_ctime":1530431699,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1530431699","product_id":100006701,"comment_content":"本人将java平台认知分为基础和扩展两个部分（类似于se和ee）。<br><br>在基础部分，主要基于java语言本身，java是一门面向对象的语言，具备良好的可移植性(Write once, run anywhere.)，其提供了一系列基础的类库(io&#47;nio&#47;net&#47;util&#47;lang&#47;math等)，能满足多线程并发（java只提供多线程）、文件读写、网络通信等多种任务需求。同时，java运行于jvm之上，jvm提供了自动的垃圾收集、类加载等功能，一方面提高了java语言的跨平台特性，另一方面，减少使用者申请、释放内存的操作，更易操作。<br><br>在扩展方面，基于java语言，开发出许多框架与组件，应用广泛。其中Spring的IOC&#47;AOP特性，ORM框架Mybatis，能够解决网站开发，数据库交互等多方面业务需求，而一些中间件，例如：消息中间件RocketMQ，可以应用于系统模块通信，实现模块解耦。<br><br>从中能看出java语言的广泛应用与强大的潜力。","like_count":0},{"had_liked":false,"id":14381,"user_name":"紫豪","can_delete":false,"product_type":"c1","uid":1166671,"ip_address":"","ucode":"9FAE8941C22F3C","user_header":"https://static001.geekbang.org/account/avatar/00/11/cd/4f/39bdf61f.jpg","comment_is_top":false,"comment_ctime":1530352008,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1530352008","product_id":100006701,"comment_content":"看文章是一种学习，看评论更是一种学习。<br>每个人分析看待问题的立场不同，得出的感悟也都有独特的语言表达方式。<br>很庆幸能够与大家一起学习，接触的越多，才发现自己这个工作“多年”的老开发基础是如此的薄弱，希望所有人都能通过杨老师的课程得到一些启发，感谢各位的分享。","like_count":0},{"had_liked":false,"id":14305,"user_name":"feifei","can_delete":false,"product_type":"c1","uid":1105431,"ip_address":"","ucode":"B1F8AE3AD82C51","user_header":"https://static001.geekbang.org/account/avatar/00/10/de/17/75e2b624.jpg","comment_is_top":false,"comment_ctime":1530278830,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1530278830","product_id":100006701,"comment_content":"我的理解即正确，又不正确，这个说法不完全错<br>Java的运行过程，java源文件--》class字节码--》由jvm虚拟机来执行字节码<br>执行分为2种解释与编译，在早起的jvm中是解释执行的，后来演变成编译与解释一起运行<br>java之所以跨平台并不是因为java语言，是因为jvm虚拟机，在不同的平台上，比如windows与linux环境，都有配套的jvm虚拟机，在不同的平台上安装虚拟机，由虚拟机来执行中间代码即字节码，就实现了跨平台","like_count":0},{"had_liked":false,"id":14304,"user_name":"未来大神","can_delete":false,"product_type":"c1","uid":1168106,"ip_address":"","ucode":"80A9059F2EDF87","user_header":"https://static001.geekbang.org/account/avatar/00/11/d2/ea/f1ae7d94.jpg","comment_is_top":false,"comment_ctime":1530278119,"is_pvip":false,"replies":[{"id":"4781","content":"我理解这是问题，codecache大小是有限的，编译本身也会有开销","user_name":"作者回复","user_name_real":"杨晓峰","uid":"1009360","ctime":1530288247,"ip_address":"","comment_id":14304,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1530278119","product_id":100006701,"comment_content":"请问JIT为什么不把所有的字节码解释成机器码缓存起来，而要profiling，缓存少部分呢？JVM内存占用不是问题吧","like_count":0,"discussions":[{"author":{"id":1009360,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/66/d0/6541f1d5.jpg","nickname":"杨晓峰","note":"","ucode":"2BF255467A978F","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":419954,"discussion_content":"我理解这是问题，codecache大小是有限的，编译本身也会有开销","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1530288247,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":13773,"user_name":"winner_0715","can_delete":false,"product_type":"c1","uid":1012843,"ip_address":"","ucode":"A033A30539181F","user_header":"https://static001.geekbang.org/account/avatar/00/0f/74/6b/a98162a1.jpg","comment_is_top":false,"comment_ctime":1529979621,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1529979621","product_id":100006701,"comment_content":"判断是不是热点代码是由JVM自己判断的吗？实际项目中怎么用JIT呢","like_count":0},{"had_liked":false,"id":13496,"user_name":"xuanyuan","can_delete":false,"product_type":"c1","uid":1113737,"ip_address":"","ucode":"1EC79B9372868F","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTI2icbib62icXtibTkThtyRksbuJLoTLMts7zook2S30MiaBtbz0f5JskwYicwqXkhpYfvCpuYkcvPTibEaQ/132","comment_is_top":false,"comment_ctime":1529680097,"is_pvip":false,"replies":[{"id":"4588","content":"谢谢建议；<br>结论可能与实际不符，go gc据我了解可以看做cms的改进版，未必如宣称那么好，要看疗效","user_name":"作者回复","user_name_real":"杨晓峰","uid":"1009360","ctime":1529945335,"ip_address":"","comment_id":13496,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1529680097","product_id":100006701,"comment_content":"开篇为 “解释hello world执行流程” 就可以将几乎所有知识点串起来了。<br>希望能解释下jvm和go的垃圾回收的区别，看到go已经在垃圾回收方面超过jvm了。","like_count":0,"discussions":[{"author":{"id":1009360,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/66/d0/6541f1d5.jpg","nickname":"杨晓峰","note":"","ucode":"2BF255467A978F","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":419668,"discussion_content":"谢谢建议；\n结论可能与实际不符，go gc据我了解可以看做cms的改进版，未必如宣称那么好，要看疗效","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1529945335,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":13390,"user_name":"李太阳","can_delete":false,"product_type":"c1","uid":1160357,"ip_address":"","ucode":"D67EF0542938C7","user_header":"","comment_is_top":false,"comment_ctime":1529577891,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1529577891","product_id":100006701,"comment_content":"工作一年多了，听老师一席话，感觉自己的知识真的是太片面了","like_count":0},{"had_liked":false,"id":12972,"user_name":"huffmanT","can_delete":false,"product_type":"c1","uid":1149322,"ip_address":"","ucode":"00D6E3F1A76ACA","user_header":"https://static001.geekbang.org/account/avatar/00/11/89/8a/cb99255c.jpg","comment_is_top":false,"comment_ctime":1529217652,"is_pvip":true,"replies":[{"id":"4423","content":"谢谢，如果持续关注了openjdk，你会发现是在逐步更加开放的；关于你说的官司，建议去看看有点深度、更多事实的文章","user_name":"作者回复","user_name_real":"杨晓峰","uid":"1009360","ctime":1529423909,"ip_address":"","comment_id":12972,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1529217652","product_id":100006701,"comment_content":"JAVA诞生，恰逢internet野蛮生长之时，JAVA的对网络编程支持和易用易理解促使了互联网公司的兴盛，随着时间推移更多更优的语言的涌现了出来，如Python,Go等，Java的强大是因为它的生态比较完善各种开箱即用的框架使的Java成为了商业业务应用的一哥，随着Oracle的收编，对商业公司闭源和知识产权的忌惮(参考Oracle和谷歌关于Android的官司），会进一步促进了OpenJdk和其它开源语言的发展，对于Coder来说建议多学几门语言，想提升对Java的理解，跟着杨老师就对了。","like_count":0,"discussions":[{"author":{"id":1009360,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/66/d0/6541f1d5.jpg","nickname":"杨晓峰","note":"","ucode":"2BF255467A978F","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":419482,"discussion_content":"谢谢，如果持续关注了openjdk，你会发现是在逐步更加开放的；关于你说的官司，建议去看看有点深度、更多事实的文章","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1529423909,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":12869,"user_name":"待时而发","can_delete":false,"product_type":"c1","uid":1158705,"ip_address":"","ucode":"92104F88D537F9","user_header":"https://static001.geekbang.org/account/avatar/00/11/ae/31/2c8a3a66.jpg","comment_is_top":false,"comment_ctime":1529105164,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1529105164","product_id":100006701,"comment_content":"看评论也能学习知识，大牛太多了","like_count":0},{"had_liked":false,"id":12144,"user_name":"风起","can_delete":false,"product_type":"c1","uid":1148298,"ip_address":"","ucode":"70A39D0DBB3279","user_header":"https://static001.geekbang.org/account/avatar/00/11/85/8a/031a6fd8.jpg","comment_is_top":false,"comment_ctime":1528618562,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1528618562","product_id":100006701,"comment_content":"我的理解java平台就是帮助开发者做了很多事情， 从而减少开发者的重复工作。<br>1.集合，io，nio，线程池等这些让我们使用，但是像我这种新手就需要多多学习<br>2.java虚拟机这块， 帮助我们做了垃圾收集，因此就要学习里面的垃圾收集策略， 内存模型什么的<br>3.有开源框架已还有轮子的支持，比如常用的spring mybatis guava这些","like_count":0},{"had_liked":false,"id":11664,"user_name":"buoge","can_delete":false,"product_type":"c1","uid":1018506,"ip_address":"","ucode":"646FC6717A09BF","user_header":"https://static001.geekbang.org/account/avatar/00/0f/8a/8a/7c1baa25.jpg","comment_is_top":false,"comment_ctime":1528277568,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1528277568","product_id":100006701,"comment_content":"果然评论区和原文一样精彩","like_count":0},{"had_liked":false,"id":11552,"user_name":"Geek_e848d4","can_delete":false,"product_type":"c1","uid":1148756,"ip_address":"","ucode":"5F00E6AFF952A8","user_header":"https://static001.geekbang.org/account/avatar/00/11/87/54/aadfc075.jpg","comment_is_top":false,"comment_ctime":1528197684,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1528197684","product_id":100006701,"comment_content":"麻烦写英文的同时把中文也写上，不然看不懂啊😂","like_count":0},{"had_liked":false,"id":10775,"user_name":"红茶君","can_delete":false,"product_type":"c1","uid":1145426,"ip_address":"","ucode":"AF695E121D3378","user_header":"https://static001.geekbang.org/account/avatar/00/11/7a/52/287446ed.jpg","comment_is_top":false,"comment_ctime":1527693912,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1527693912","product_id":100006701,"comment_content":"刚刚开始学JAVA，只看懂了个大概意思，有好多名词待查……评论区好厉害，涨姿势了。","like_count":0},{"had_liked":false,"id":10492,"user_name":"萨拉赫","can_delete":false,"product_type":"c1","uid":1116654,"ip_address":"","ucode":"A316B7370920DB","user_header":"https://static001.geekbang.org/account/avatar/00/11/09/ee/950b5e9f.jpg","comment_is_top":false,"comment_ctime":1527562989,"is_pvip":false,"replies":[{"id":"3353","content":"序列化贡献了非常大比例的安全漏洞；<br>我得回头查查，不见得是放弃，有取舍，这几个版本一直在为他添加filter<br>","user_name":"作者回复","user_name_real":"杨晓峰","uid":"1009360","ctime":1527607081,"ip_address":"","comment_id":10492,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1527562989","product_id":100006701,"comment_content":"能不能讲讲java序列化&#47;反序列化的问题。以及java很多不安全的问题都与反序列化有关，近期又看到一篇文章说java正打算放弃这个功能。希望您能权威的介绍下，谢谢。","like_count":0,"discussions":[{"author":{"id":1009360,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/66/d0/6541f1d5.jpg","nickname":"杨晓峰","note":"","ucode":"2BF255467A978F","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":418500,"discussion_content":"序列化贡献了非常大比例的安全漏洞；\n我得回头查查，不见得是放弃，有取舍，这几个版本一直在为他添加filter\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1527607081,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":9959,"user_name":"密码123456","can_delete":false,"product_type":"c1","uid":1126593,"ip_address":"","ucode":"9889463CC0EA71","user_header":"https://static001.geekbang.org/account/avatar/00/11/30/c1/2dde6700.jpg","comment_is_top":false,"comment_ctime":1527201494,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1527201494","product_id":100006701,"comment_content":"1.jre与jdk的的关系。jre是java运行环境，有jvm和类库。而jdk是jre.扩展版本，不仅仅有jre的功能还提供一些工具，比如编译器。<br>2.jit是动态编译部署的工具","like_count":0},{"had_liked":false,"id":9860,"user_name":"Jerwei","can_delete":false,"product_type":"c1","uid":1134324,"ip_address":"","ucode":"2D1B80AD417192","user_header":"https://static001.geekbang.org/account/avatar/00/11/4e/f4/5df9bfbe.jpg","comment_is_top":false,"comment_ctime":1527127516,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1527127516","product_id":100006701,"comment_content":"大神，我有个小小的疑问。Java代码编译为字节码文件后，jvm得解析器对字节码文件解析执行，是解析成了机器码吗？如果是的话，这个和jit直接编译成机器码有啥区别，因为都从字节码变成了机器码。jit在运行时会对热点代码进行编译，怎么指定某些代码是热点代码呢，编译热点代码的过程是提前做的吗？","like_count":0},{"had_liked":false,"id":9324,"user_name":"c@ini@o","can_delete":false,"product_type":"c1","uid":1024414,"ip_address":"","ucode":"36A38081E9D12F","user_header":"https://static001.geekbang.org/account/avatar/00/0f/a1/9e/5c522094.jpg","comment_is_top":false,"comment_ctime":1526786859,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1526786859","product_id":100006701,"comment_content":"老师讲的很精彩，让人豁然开朗！能否指点一下是否有好的代码例子，来快速理解提升那？","like_count":0},{"had_liked":false,"id":9169,"user_name":"日光倾城","can_delete":false,"product_type":"c1","uid":1120345,"ip_address":"","ucode":"E4329963F660DC","user_header":"https://static001.geekbang.org/account/avatar/00/11/18/59/daeb0b6c.jpg","comment_is_top":false,"comment_ctime":1526651603,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1526651603","product_id":100006701,"comment_content":"谈谈你对java平台的理解？java的底层，包括jvm架构，有类加载子系统，运行时数据区：java堆 栈 计数器 方法区 本地方法栈，以及执行引擎：JITCompiler  GC  还有本地方法库部分。java核心类库，从.java文件到最后运行出结果的整个过程的理解。上层的话java生态圈，包括各种框架，第三方类库等。","like_count":0},{"had_liked":false,"id":9028,"user_name":"aka. peng 👀","can_delete":false,"product_type":"c1","uid":1082129,"ip_address":"","ucode":"F1BB5EABDA7946","user_header":"https://static001.geekbang.org/account/avatar/00/10/83/11/291b7240.jpg","comment_is_top":false,"comment_ctime":1526596550,"is_pvip":false,"replies":[{"id":"2732","content":"说的有道理，但主流是用oracle jdk做server应用","user_name":"作者回复","user_name_real":"杨晓峰","uid":"1009360","ctime":1526612467,"ip_address":"","comment_id":9028,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1526596550","product_id":100006701,"comment_content":"Android虚拟机由最早的Dalvik VM变成了ART，关键变化就是从JIT变成了AOT。  jvm一直不变成AOT编译的理由是什么呢？ 运行时编译的好处是不是就是编译速度快点。 对于client端来说，绝对倾向AOT呀。 ","like_count":0,"discussions":[{"author":{"id":1009360,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/66/d0/6541f1d5.jpg","nickname":"杨晓峰","note":"","ucode":"2BF255467A978F","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":417951,"discussion_content":"说的有道理，但主流是用oracle jdk做server应用","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1526612467,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":8924,"user_name":"Yang","can_delete":false,"product_type":"c1","uid":1104430,"ip_address":"","ucode":"522A1E08C56FC3","user_header":"https://static001.geekbang.org/account/avatar/00/10/da/2e/0bb8ab4a.jpg","comment_is_top":false,"comment_ctime":1526521667,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1526521667","product_id":100006701,"comment_content":"高手在民间，看评论也有很多收获","like_count":0},{"had_liked":false,"id":8747,"user_name":"zero","can_delete":false,"product_type":"c1","uid":1132478,"ip_address":"","ucode":"F7E4F39FA18CA8","user_header":"http://thirdwx.qlogo.cn/mmopen/2kpMNDYsSfCibibkl1x62jWvwQVpWqT54wibNoNOtlncnZ9icRv3Ol8lUHO0cmmYDNp2E4gyFbiajicy67qwv372x1YHVMPUGyLRUy/132","comment_is_top":false,"comment_ctime":1526397486,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1526397486","product_id":100006701,"comment_content":"有个疑问，什么时候用的是解释执行，什么时候用的是编译执行。类加载的时候算是解释执行，方法调用时是编译执行吗？","like_count":0},{"had_liked":false,"id":8511,"user_name":"周","can_delete":false,"product_type":"c1","uid":1030086,"ip_address":"","ucode":"5595CC944F4A08","user_header":"https://static001.geekbang.org/account/avatar/00/0f/b7/c6/839984bc.jpg","comment_is_top":false,"comment_ctime":1526284381,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1526284381","product_id":100006701,"comment_content":"评论区里，依稀见到众多大神的背影","like_count":0},{"had_liked":false,"id":8508,"user_name":"櫻の空","can_delete":false,"product_type":"c1","uid":1112459,"ip_address":"","ucode":"FCB2F7BFC186EC","user_header":"https://static001.geekbang.org/account/avatar/00/10/f9/8b/11c87d4e.jpg","comment_is_top":false,"comment_ctime":1526278107,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1526278107","product_id":100006701,"comment_content":"谢谢老师指点，是我疏忽了。因为平时都是使用的oracle jdk 和 hotspot 就没有加上限制。佩服老师严谨的态度哈，我还需要多学习学习","like_count":0},{"had_liked":false,"id":8469,"user_name":"邱新海","can_delete":false,"product_type":"c1","uid":1125993,"ip_address":"","ucode":"82A91C39DCBB39","user_header":"https://static001.geekbang.org/account/avatar/00/11/2e/69/289dcff1.jpg","comment_is_top":false,"comment_ctime":1526256586,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1526256586","product_id":100006701,"comment_content":"感觉语速再慢一些就更好了。","like_count":0},{"had_liked":false,"id":8460,"user_name":"卡斯瓦德","can_delete":false,"product_type":"c1","uid":1011332,"ip_address":"","ucode":"E944E5BC507D5C","user_header":"https://static001.geekbang.org/account/avatar/00/0f/6e/84/45a909a6.jpg","comment_is_top":false,"comment_ctime":1526253944,"is_pvip":false,"replies":[{"id":"2511","content":"1，11会是长期支持版本；<br>2，最好有真正做jvm的人回答，虽然我认为是，但没人保证每个细节都清楚","user_name":"作者回复","user_name_real":"杨晓峰","uid":"1009360","ctime":1526274313,"ip_address":"","comment_id":8460,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1526253944","product_id":100006701,"comment_content":"老师你好：<br>1.对于aot还没接触，因为不是java9，以及最新的java10都不是长期支持的对于jdk的版本选择你有什么建议么？<br>2.关于刚才看到说.class文件每次new一个对象时都需要重新解释下？哪怕应用没有重启也要重新解释下是么？那么反问下如果是jit的那么还会每次new对象的时候去编译么？","like_count":0,"discussions":[{"author":{"id":1009360,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/66/d0/6541f1d5.jpg","nickname":"杨晓峰","note":"","ucode":"2BF255467A978F","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":417732,"discussion_content":"1，11会是长期支持版本；\n2，最好有真正做jvm的人回答，虽然我认为是，但没人保证每个细节都清楚","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1526274313,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":8424,"user_name":"十年后的思念","can_delete":false,"product_type":"c1","uid":1104056,"ip_address":"","ucode":"43E063FBA87FF3","user_header":"https://static001.geekbang.org/account/avatar/00/10/d8/b8/9ca2d7bd.jpg","comment_is_top":false,"comment_ctime":1526206704,"is_pvip":false,"replies":[{"id":"2506","content":"👌","user_name":"作者回复","user_name_real":"杨晓峰","uid":"1009360","ctime":1526272234,"ip_address":"","comment_id":8424,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1526206704","product_id":100006701,"comment_content":"杨老师，扩展的知识多来点","like_count":0,"discussions":[{"author":{"id":1009360,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/66/d0/6541f1d5.jpg","nickname":"杨晓峰","note":"","ucode":"2BF255467A978F","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":417712,"discussion_content":"👌","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1526272234,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":8341,"user_name":"沉梦昂志","can_delete":false,"product_type":"c1","uid":1129275,"ip_address":"","ucode":"39AB732C558FC8","user_header":"https://static001.geekbang.org/account/avatar/00/11/3b/3b/714cc8a5.jpg","comment_is_top":false,"comment_ctime":1526102606,"is_pvip":false,"replies":[{"id":"2450","content":"是的，有代价","user_name":"作者回复","user_name_real":"杨晓峰","uid":"1009360","ctime":1526104955,"ip_address":"","comment_id":8341,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1526102606","product_id":100006701,"comment_content":"老师  那AOT编译是直接从源码编译为了机器码吗？ 字节码不生成了吗 这是否会影响java通过解释+编译字节码文件达到在不同运行环境“一次编译 处处运行”的特点？","like_count":0,"discussions":[{"author":{"id":1009360,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/66/d0/6541f1d5.jpg","nickname":"杨晓峰","note":"","ucode":"2BF255467A978F","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":417679,"discussion_content":"是的，有代价","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1526104955,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":8292,"user_name":"7190zxh","can_delete":false,"product_type":"c1","uid":1110509,"ip_address":"","ucode":"6A2720DCCB7743","user_header":"https://static001.geekbang.org/account/avatar/00/10/f1/ed/4dc278d6.jpg","comment_is_top":false,"comment_ctime":1526055417,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1526055417","product_id":100006701,"comment_content":"看了诸位大神的评论，我一个应届毕业生瞬间感觉自己的java知识面是那么的窄，希望能通过交流得到提升。","like_count":0},{"had_liked":false,"id":8129,"user_name":"我们俩","can_delete":false,"product_type":"c1","uid":1126371,"ip_address":"","ucode":"16AFBADB9A1B0B","user_header":"https://static001.geekbang.org/account/avatar/00/11/2f/e3/f8480bf5.jpg","comment_is_top":false,"comment_ctime":1525915715,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1525915715","product_id":100006701,"comment_content":"从本文中得到的信息可以分为两点，java可以一次编译，到处执行，也就是跨平台能力。第二点就是java有垃圾回收机制，不需要人工操作回收垃圾，java的jvm可以自动执行回收","like_count":0},{"had_liked":false,"id":8083,"user_name":"Andy","can_delete":false,"product_type":"c1","uid":1119133,"ip_address":"","ucode":"4BCA899B8E4E85","user_header":"https://static001.geekbang.org/account/avatar/00/11/13/9d/0ff43179.jpg","comment_is_top":false,"comment_ctime":1525910607,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1525910607","product_id":100006701,"comment_content":"还有作业批改，太贴心了，十分感谢！","like_count":0},{"had_liked":false,"id":8069,"user_name":"呆呆很爱你","can_delete":false,"product_type":"c1","uid":1104372,"ip_address":"","ucode":"FA6849342CF8E9","user_header":"https://static001.geekbang.org/account/avatar/00/10/d9/f4/b96fce45.jpg","comment_is_top":false,"comment_ctime":1525908333,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1525908333","product_id":100006701,"comment_content":"可否有JavaGC的详解？这个问题一直了解的很粗","like_count":0},{"had_liked":false,"id":8062,"user_name":"Mason","can_delete":false,"product_type":"c1","uid":1080128,"ip_address":"","ucode":"DC443EE964C9B0","user_header":"https://static001.geekbang.org/account/avatar/00/10/7b/40/2ea10adb.jpg","comment_is_top":false,"comment_ctime":1525886082,"is_pvip":false,"replies":[{"id":"2415","content":"以前入门是Thinking in Java， core Java","user_name":"作者回复","user_name_real":"杨晓峰","uid":"1009360","ctime":1526009837,"ip_address":"","comment_id":8062,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1525886082","product_id":100006701,"comment_content":"小白，读专栏有些吃力，能否推进一本Java入门书籍啊？","like_count":0,"discussions":[{"author":{"id":1009360,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/66/d0/6541f1d5.jpg","nickname":"杨晓峰","note":"","ucode":"2BF255467A978F","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":417566,"discussion_content":"以前入门是Thinking in Java， core Java","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1526009837,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":8053,"user_name":"持续思考持续做的牛牛","can_delete":false,"product_type":"c1","uid":1060882,"ip_address":"","ucode":"3F8C050D0D6A02","user_header":"https://static001.geekbang.org/account/avatar/00/10/30/12/aa2d5cb3.jpg","comment_is_top":false,"comment_ctime":1525879874,"is_pvip":true,"replies":[{"id":"2345","content":"不错的总结，不过你提到的那个可以去查查，它不遵守规范的，嘿嘿","user_name":"作者回复","user_name_real":"杨晓峰","uid":"1009360","ctime":1525881619,"ip_address":"","comment_id":8053,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1525879874","product_id":100006701,"comment_content":"我想另一个角度来回答一下问题<br><br>Java平台的宗旨是一次编写跨平台运行，其实这也是所有程序员的梦想了，如果有一门编程语言能实现计算机上的任何功能，谁不乐意呢？<br><br>然而Java 在发展的过程中，初期因为硬件性能瓶颈，Java 的表现性能上比不上c语言类的性能而被诟病，很多场景用Java 是无法忍受的，但是随着摩尔定律的存在，而且Java 这类存面相对象的语言又是软件合作非常需要的特性，Java 这类语言的可读性是很高的，很大程度具备了高协作特性，记得软件产业有一次危机就是因为可读性的问题，这说明代码可读性的重要性。<br><br>同时Java 也在不停地进步，Android 开发也基于Java ，看到别的同学留言说到即时编译，运行时编译肯定是有一些性能影响的，不然也不会有art 虚拟机了。<br><br>可以看的出来Java 虚拟机类别很多，但它们都遵循统一Java 规范来，让开发者始终能用同一语言来进行开发。<br><br>Java 平台终极思想也是一种容器思维，容器即平台，分层的思维在软件行业真心巴不得弄成千层饼，挺有意思的，也正因为层次多，分工也就越来越多，分工多了才会有今天真的庞大的互联网协作平台，才有了今天的互联网。<br><br>","like_count":0,"discussions":[{"author":{"id":1009360,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/66/d0/6541f1d5.jpg","nickname":"杨晓峰","note":"","ucode":"2BF255467A978F","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":417561,"discussion_content":"不错的总结，不过你提到的那个可以去查查，它不遵守规范的，嘿嘿","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1525881619,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":7992,"user_name":"吕哮品","can_delete":false,"product_type":"c1","uid":1126199,"ip_address":"","ucode":"004DFACA579955","user_header":"https://static001.geekbang.org/account/avatar/00/11/2f/37/9fe0843a.jpg","comment_is_top":false,"comment_ctime":1525834522,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1525834522","product_id":100006701,"comment_content":"山外有山，天外有天，能找到一扇窗是最好不过的事，期待之后的深入讲解，让我们这些泡在业务中的人，能跳出来看看，快哉快哉！","like_count":0},{"had_liked":false,"id":7958,"user_name":"QuincySx","can_delete":false,"product_type":"c1","uid":1123049,"ip_address":"","ucode":"F33848E1A4AF26","user_header":"https://static001.geekbang.org/account/avatar/00/11/22/e9/32f5fa34.jpg","comment_is_top":false,"comment_ctime":1525822003,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1525822003","product_id":100006701,"comment_content":"jre 为什么要退出了，我有注意到 JDK 10 jre 要单独下载了","like_count":0},{"had_liked":false,"id":7840,"user_name":"Leo","can_delete":false,"product_type":"c1","uid":1038811,"ip_address":"","ucode":"BFAF83E23199DA","user_header":"https://static001.geekbang.org/account/avatar/00/0f/d9/db/66d5b3f4.jpg","comment_is_top":false,"comment_ctime":1525743212,"is_pvip":false,"replies":[{"id":"2260","content":"动态编译会缓存起来，适合重复使用的场景","user_name":"作者回复","user_name_real":"杨晓峰","uid":"1009360","ctime":1525752096,"ip_address":"","comment_id":7840,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1525743212","product_id":100006701,"comment_content":"老师，请问解析执行是解析成机器码吗？这和编译成机器码有什么区别？","like_count":0,"discussions":[{"author":{"id":1009360,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/66/d0/6541f1d5.jpg","nickname":"杨晓峰","note":"","ucode":"2BF255467A978F","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":417489,"discussion_content":"动态编译会缓存起来，适合重复使用的场景","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1525752096,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":7785,"user_name":"YANGFEI","can_delete":false,"product_type":"c1","uid":1001995,"ip_address":"","ucode":"38477A7CFD3EF4","user_header":"https://static001.geekbang.org/account/avatar/00/0f/4a/0b/093f7d9e.jpg","comment_is_top":false,"comment_ctime":1525738127,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1525738127","product_id":100006701,"comment_content":"所谓的跨平台、一次编写到处运行，我觉得这个说法并不严谨，它也需要在目标运行机器上安装好jre","like_count":0},{"had_liked":false,"id":7770,"user_name":"小陈","can_delete":false,"product_type":"c1","uid":1116066,"ip_address":"","ucode":"8F54A1CC6E8B87","user_header":"https://static001.geekbang.org/account/avatar/00/11/07/a2/d171a344.jpg","comment_is_top":false,"comment_ctime":1525708605,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1525708605","product_id":100006701,"comment_content":"老师，AOT的存在，不是又有可能丧失跨平台特性吗？","like_count":0},{"had_liked":false,"id":7751,"user_name":"Aaron亚伦","can_delete":false,"product_type":"c1","uid":1102516,"ip_address":"","ucode":"135432A2E61563","user_header":"https://static001.geekbang.org/account/avatar/00/10/d2/b4/cf551416.jpg","comment_is_top":false,"comment_ctime":1525696626,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1525696626","product_id":100006701,"comment_content":"评论区的高手真多","like_count":0},{"had_liked":false,"id":7747,"user_name":"华烬","can_delete":false,"product_type":"c1","uid":1008444,"ip_address":"","ucode":"D36AE0FBEF665A","user_header":"https://static001.geekbang.org/account/avatar/00/0f/63/3c/b4cfbce9.jpg","comment_is_top":false,"comment_ctime":1525694195,"is_pvip":false,"replies":[{"id":"2232","content":"不错，文章基本是以最广泛的oracle jdk为基础","user_name":"作者回复","user_name_real":"杨晓峰","uid":"1009360","ctime":1525698482,"ip_address":"","comment_id":7747,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1525694195","product_id":100006701,"comment_content":"关于jvm,之前看过这样一种说法，老师帮忙看下理解。jvm其实是有3个概念的：规范，实现和实例。个人理解规范就是jvm的各中机制，比如类加载机制，垃圾回收，JMM等等，只要符合规范，不同人可以实现不同的虚拟机，也是因为规范，可以让jvm可以运行java以外的语言，只要满足字节码规范即可。然后是实现，就如刚才所说，只要符合规范就可以，所以现在是有很多种虚拟机的，除最常用的Hotspot VM,还有JRockit,以及J9 VM等等，内部实现是有所不同的，比如关于老年代，Hotspot在jdk8之前是用永久代来实现的，其他虚拟机是没有这个概念的，这就是不同的虚拟机，实现可以是不同的例子。最后是实例，这个是让java语言跨平台的正常原因，提供了一个运行的软件环境，一个中间层，来屏蔽差异，当然，不同平台上的虚拟机也是不一样的，就算都是Hotspot。类比的话，规范就是接口，实现就是一个实现了接口的类，而实例才是一个最后new出来的对象。","like_count":0,"discussions":[{"author":{"id":1009360,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/66/d0/6541f1d5.jpg","nickname":"杨晓峰","note":"","ucode":"2BF255467A978F","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":417468,"discussion_content":"不错，文章基本是以最广泛的oracle jdk为基础","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1525698482,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":7745,"user_name":"Hesher","can_delete":false,"product_type":"c1","uid":1026832,"ip_address":"","ucode":"99AB8B1704CB7E","user_header":"https://static001.geekbang.org/account/avatar/00/0f/ab/10/b812ff3e.jpg","comment_is_top":false,"comment_ctime":1525692423,"is_pvip":false,"replies":[{"id":"2234","content":"顶你，最大的用户群体，最广泛的社区和厂商，实际开发中语言酷不见得是足够的，很多硬性的能力才是决定因素","user_name":"作者回复","user_name_real":"杨晓峰","uid":"1009360","ctime":1525698705,"ip_address":"","comment_id":7745,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1525692423","product_id":100006701,"comment_content":"平时工作编写的主要是业务代码，对于Java基础类库、底层特性不需要太过关注也很少用得上，但对于线上服务，性能分析和调优需要懂得一些JVM知识，常用的内存和线程堆栈分析工具要掌握用来救火。<br><br>Java发展到现在，越来越好用，生态越来越强大，已经成为了企业中最重要的程序语言了。基础类库越发完善，开源框架百家争鸣，即使是JVM也有了一众顶级的上层语言。无论从市场、就业还是技术本身来说，Java平台都值得全面深入地学习。","like_count":0,"discussions":[{"author":{"id":1009360,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/66/d0/6541f1d5.jpg","nickname":"杨晓峰","note":"","ucode":"2BF255467A978F","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":417467,"discussion_content":"顶你，最大的用户群体，最广泛的社区和厂商，实际开发中语言酷不见得是足够的，很多硬性的能力才是决定因素","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1525698705,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":7704,"user_name":"Hidden","can_delete":false,"product_type":"c1","uid":1114462,"ip_address":"","ucode":"6323E5D32A3190","user_header":"https://static001.geekbang.org/account/avatar/00/11/01/5e/95f7d928.jpg","comment_is_top":false,"comment_ctime":1525658104,"is_pvip":false,"replies":[{"id":"2235","content":"问下自己 跳槽为了什么，是不是跳槽就&#47;才能解决，如果是也不用犹豫，否则也可以发现其他选择","user_name":"作者回复","user_name_real":"杨晓峰","uid":"1009360","ctime":1525698835,"ip_address":"","comment_id":7704,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1525658104","product_id":100006701,"comment_content":"最近，每天都在纠结要不要离职，在这家公司一年了，感觉什么提升都没有，除了获得 报酬，别的好像并没有什么收获","like_count":0,"discussions":[{"author":{"id":1009360,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/66/d0/6541f1d5.jpg","nickname":"杨晓峰","note":"","ucode":"2BF255467A978F","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":417450,"discussion_content":"问下自己 跳槽为了什么，是不是跳槽就/才能解决，如果是也不用犹豫，否则也可以发现其他选择","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1525698835,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":7685,"user_name":"miren6","can_delete":false,"product_type":"c1","uid":1041041,"ip_address":"","ucode":"AA472DEC1C1D54","user_header":"https://static001.geekbang.org/account/avatar/00/0f/e2/91/b62d084b.jpg","comment_is_top":false,"comment_ctime":1525626422,"is_pvip":false,"replies":[{"id":"2226","content":"有了jigsaw，还有其他的一些变化，jre单独存在的必要已经没有了","user_name":"作者回复","user_name_real":"杨晓峰","uid":"1009360","ctime":1525677190,"ip_address":"","comment_id":7685,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1525626422","product_id":100006701,"comment_content":"看到作者一个回复说未来jre将退出舞台，此话怎讲？","like_count":0,"discussions":[{"author":{"id":1009360,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/66/d0/6541f1d5.jpg","nickname":"杨晓峰","note":"","ucode":"2BF255467A978F","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":417442,"discussion_content":"有了jigsaw，还有其他的一些变化，jre单独存在的必要已经没有了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1525677190,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":7683,"user_name":"陳新Fāns","can_delete":false,"product_type":"c1","uid":1061475,"ip_address":"","ucode":"0671D72525FFE0","user_header":"https://static001.geekbang.org/account/avatar/00/10/32/63/9239d1fa.jpg","comment_is_top":false,"comment_ctime":1525623720,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1525623720","product_id":100006701,"comment_content":"看了老师讲的觉得自己要学的东西还有很多","like_count":0},{"had_liked":false,"id":7662,"user_name":"фщэьшух","can_delete":false,"product_type":"c1","uid":1116476,"ip_address":"","ucode":"0D6F69790925DC","user_header":"https://static001.geekbang.org/account/avatar/00/11/09/3c/1bec447d.jpg","comment_is_top":false,"comment_ctime":1525613311,"is_pvip":false,"replies":[{"id":"2227","content":"jit是运行时的动态编译，通常说的编译阶段是说javac那种，看语境<br>","user_name":"作者回复","user_name_real":"杨晓峰","uid":"1009360","ctime":1525677284,"ip_address":"","comment_id":7662,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1525613311","product_id":100006701,"comment_content":"老师看到您给同学的评论说是jit在运行时，aot在编译时，我更懵了，老师给我说明一下，我理解的是两者都是在编译时。","like_count":0,"discussions":[{"author":{"id":1009360,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/66/d0/6541f1d5.jpg","nickname":"杨晓峰","note":"","ucode":"2BF255467A978F","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":417435,"discussion_content":"jit是运行时的动态编译，通常说的编译阶段是说javac那种，看语境\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1525677284,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":7659,"user_name":"фщэьшух","can_delete":false,"product_type":"c1","uid":1116476,"ip_address":"","ucode":"0D6F69790925DC","user_header":"https://static001.geekbang.org/account/avatar/00/11/09/3c/1bec447d.jpg","comment_is_top":false,"comment_ctime":1525612844,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1525612844","product_id":100006701,"comment_content":"JAVA的jit是运行前将源码编译为字节码文件。但是jit和aot都可以将字节码编译为机器码，只是jit将一些高频代码编译，aot将所有代码编译。<br><br>老师这样说对嘛？","like_count":0},{"had_liked":false,"id":7647,"user_name":"那个谁","can_delete":false,"product_type":"c1","uid":1118325,"ip_address":"","ucode":"43214CAE7062E7","user_header":"https://static001.geekbang.org/account/avatar/00/11/10/75/ff76024c.jpg","comment_is_top":false,"comment_ctime":1525605461,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1525605461","product_id":100006701,"comment_content":"语言设计是一种权衡的结果。关键是要理解解释型语言和编译型语言的适应场景和优缺点，如何扬长避短。jit是一种对热点代码效率的优化，但有时是会反编译，这个情况不知道作者怎么看","like_count":0},{"had_liked":false,"id":7621,"user_name":"江东去","can_delete":false,"product_type":"c1","uid":1106642,"ip_address":"","ucode":"A958A2DCFB4E86","user_header":"https://static001.geekbang.org/account/avatar/00/10/e2/d2/cd0b136a.jpg","comment_is_top":false,"comment_ctime":1525584707,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1525584707","product_id":100006701,"comment_content":"可不可以这样理解，JIT编译器就是把运行时JVM解释执行产生的codeCache对应的热点代码，动态编译成机器码去执行。","like_count":0},{"had_liked":false,"id":7618,"user_name":"龙猫","can_delete":false,"product_type":"c1","uid":1112490,"ip_address":"","ucode":"FD726CC969EF9C","user_header":"https://static001.geekbang.org/account/avatar/00/10/f9/aa/3e80212e.jpg","comment_is_top":false,"comment_ctime":1525583727,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1525583727","product_id":100006701,"comment_content":"笔记：前端编译器有javac，作用：将.java源文件编译成.class文件；后端编译器有jit编译器，可以将字节码生成本地机器码；热点代码是指频繁运行的某个方法或者是方法块，为了优化热点代码的执行效率，使用JIT编译器将这些代码编译成机器码。","like_count":0},{"had_liked":false,"id":7594,"user_name":"汉彬","can_delete":false,"product_type":"c1","uid":1122623,"ip_address":"","ucode":"088891C1D6C661","user_header":"https://static001.geekbang.org/account/avatar/00/11/21/3f/409aa5d2.jpg","comment_is_top":false,"comment_ctime":1525570909,"is_pvip":false,"replies":[{"id":"2199","content":"看需求，有没有什么特性是至关重要的；也要考虑团队能力；对于大公司，安全往往至关重要，那就要考虑，有没有安全漏洞，有没有可靠支持","user_name":"作者回复","user_name_real":"杨晓峰","uid":"1009360","ctime":1525587927,"ip_address":"","comment_id":7594,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1525570909","product_id":100006701,"comment_content":"只用到jdk8，现在jdk10都要出来了。对于jdk版本的使用有什么要特别注意的地方？","like_count":0,"discussions":[{"author":{"id":1009360,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/66/d0/6541f1d5.jpg","nickname":"杨晓峰","note":"","ucode":"2BF255467A978F","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":417420,"discussion_content":"看需求，有没有什么特性是至关重要的；也要考虑团队能力；对于大公司，安全往往至关重要，那就要考虑，有没有安全漏洞，有没有可靠支持","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1525587927,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":7572,"user_name":"天天向上","can_delete":false,"product_type":"c1","uid":1118223,"ip_address":"","ucode":"4B3D53EC128554","user_header":"https://static001.geekbang.org/account/avatar/00/11/10/0f/bc3b648e.jpg","comment_is_top":false,"comment_ctime":1525535689,"is_pvip":false,"replies":[{"id":"2186","content":"1，我的理解jit是通过IR（中间指令）<br>2，是的AOT有代价","user_name":"作者回复","user_name_real":"杨晓峰","uid":"1009360","ctime":1525571919,"ip_address":"","comment_id":7572,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1525535689","product_id":100006701,"comment_content":"编译执行是指直接将源文件编译成机器码，然后直接执行；解析执行是指解析一条指令，执行一条指令。<br>JIT，其用了2个计数器:方法计数器，回边计数器，当两者之和到达一定组阈值时，会直接将字节码编译成机器指令。由于JVM内存有限，所以仅仅将热点程序编译成机器码<br>杨老师，有2个问题想请教下:<br>1，我了解过C的编译过程: 源文件-&gt;汇编指令-&gt;二进制(机器码)，那么JAVA的编译执行过程也是会有转成&quot;汇编指令&quot;这一步吗？<br>2，aot直接将源文件编译成机器码，那么对于不同的平台，那不是需要对源文件各编译一次，不就做不到编译一次。到处执行了？<br>","like_count":0,"discussions":[{"author":{"id":1009360,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/66/d0/6541f1d5.jpg","nickname":"杨晓峰","note":"","ucode":"2BF255467A978F","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":417407,"discussion_content":"1，我的理解jit是通过IR（中间指令）\n2，是的AOT有代价","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1525571919,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":7570,"user_name":"Billion","can_delete":false,"product_type":"c1","uid":1120556,"ip_address":"","ucode":"149D8D23A78D8B","user_header":"https://static001.geekbang.org/account/avatar/00/11/19/2c/94c160b0.jpg","comment_is_top":false,"comment_ctime":1525534213,"is_pvip":false,"replies":[{"id":"2193","content":"互相交流，三人行必有我师","user_name":"作者回复","user_name_real":"杨晓峰","uid":"1009360","ctime":1525572513,"ip_address":"","comment_id":7570,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1525534213","product_id":100006701,"comment_content":"曾经研究过动态程序分析（dynamic program analysis），读了很多论文，存在很多疑问，今天杨老师的开篇第一讲却让我想明白了很多问题。","like_count":0,"discussions":[{"author":{"id":1009360,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/66/d0/6541f1d5.jpg","nickname":"杨晓峰","note":"","ucode":"2BF255467A978F","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":417406,"discussion_content":"互相交流，三人行必有我师","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1525572513,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":7569,"user_name":"『OMG』Moshow","can_delete":false,"product_type":"c1","uid":1099300,"ip_address":"","ucode":"B4BB01BDF83C86","user_header":"https://static001.geekbang.org/account/avatar/00/10/c6/24/7551a01b.jpg","comment_is_top":false,"comment_ctime":1525534030,"is_pvip":false,"replies":[{"id":"2187","content":"向后兼容，Java算是最高等级支持，虽然不能100%","user_name":"作者回复","user_name_real":"杨晓峰","uid":"1009360","ctime":1525571969,"ip_address":"","comment_id":7569,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1525534030","product_id":100006701,"comment_content":"對了，還要記得提及一個，一次編譯多次運行，也要是對應兼容的jdk版本。例如1.5編譯ok的，1.10不一定ok，jdk10可以的，jdk6不一定可以。","like_count":0,"discussions":[{"author":{"id":1009360,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/66/d0/6541f1d5.jpg","nickname":"杨晓峰","note":"","ucode":"2BF255467A978F","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":417405,"discussion_content":"向后兼容，Java算是最高等级支持，虽然不能100%","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1525571969,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":7565,"user_name":"会飞的毛毛虫","can_delete":false,"product_type":"c1","uid":1113499,"ip_address":"","ucode":"CB62E1802FFC35","user_header":"https://static001.geekbang.org/account/avatar/00/10/fd/9b/e63a0db9.jpg","comment_is_top":false,"comment_ctime":1525531199,"is_pvip":false,"replies":[{"id":"2188","content":"<br>的确，日新月异","user_name":"作者回复","user_name_real":"杨晓峰","uid":"1009360","ctime":1525571998,"ip_address":"","comment_id":7565,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1525531199","product_id":100006701,"comment_content":"Java平台由于jvm的存在，使得编写、编译的平台无关性，也实现了语言的无关性，使编程语言中出现了一种新语言，叫jvm语言。Java是官方的语言，随着JDK的升级，也在吸收其他语言的长处。lambda，jshell……高手很多，凳子已经准备好啦😁","like_count":0,"discussions":[{"author":{"id":1009360,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/66/d0/6541f1d5.jpg","nickname":"杨晓峰","note":"","ucode":"2BF255467A978F","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":417403,"discussion_content":"\n的确，日新月异","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1525571998,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":7554,"user_name":"zhhp","can_delete":false,"product_type":"c1","uid":1114903,"ip_address":"","ucode":"74247E3A15FF81","user_header":"https://static001.geekbang.org/account/avatar/00/11/03/17/715c30cc.jpg","comment_is_top":false,"comment_ctime":1525526161,"is_pvip":false,"replies":[{"id":"2190","content":"我说的是OracleJdk的特性，其实虚拟机有各种实现，ART也是使用了一种AOT技术","user_name":"作者回复","user_name_real":"杨晓峰","uid":"1009360","ctime":1525572406,"ip_address":"","comment_id":7554,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1525526161","product_id":100006701,"comment_content":"    １、我对Java跨平台的理解是Java不像C&#47;C++之类的语言那样是面向操作系统编程的(线程、内存管理、网络、IO等功能由操作系统来提供)，而是由Java虚拟机提供一个中立的平台，屏蔽掉操作系统之间的差异，Java语言面向这个中立的平台编程，所以能有很好的跨平台能力。<br><br>    ２、请问老师Java的AOT和Android的ART有关系吗？以后Java的运行时有没有可能变得很小巧，然后Java应用可以和运行时一起打包为一个单独的可执行文件？<br>    ","like_count":0,"discussions":[{"author":{"id":1009360,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/66/d0/6541f1d5.jpg","nickname":"杨晓峰","note":"","ucode":"2BF255467A978F","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":417398,"discussion_content":"我说的是OracleJdk的特性，其实虚拟机有各种实现，ART也是使用了一种AOT技术","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1525572406,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":7553,"user_name":"代码狂徒","can_delete":false,"product_type":"c1","uid":1030100,"ip_address":"","ucode":"F5918543E90321","user_header":"https://static001.geekbang.org/account/avatar/00/0f/b7/d4/abb7bfe3.jpg","comment_is_top":false,"comment_ctime":1525523986,"is_pvip":false,"replies":[{"id":"2191","content":"是的，只是oracle jdk9才加入，有的实现早得多","user_name":"作者回复","user_name_real":"杨晓峰","uid":"1009360","ctime":1525572453,"ip_address":"","comment_id":7553,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1525523986","product_id":100006701,"comment_content":"您好，博主，我这边有看到一篇16年的关于JIT 的文章，那时候还没有java9吧？上面有提到说AOT是事前编译，属于静态编译，本人理解不是很深入，所以还请博主解释一下，跟您说的这个AOT是一回事吗？","like_count":0,"discussions":[{"author":{"id":1009360,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/66/d0/6541f1d5.jpg","nickname":"杨晓峰","note":"","ucode":"2BF255467A978F","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":417397,"discussion_content":"是的，只是oracle jdk9才加入，有的实现早得多","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1525572453,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":7545,"user_name":"不会游泳的鱼","can_delete":false,"product_type":"c1","uid":1077238,"ip_address":"","ucode":"D0AEA7C5C079EE","user_header":"https://wx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLSqNYhASmjn759XTmvzqX8dqMwlIgva7nERaGicHng7kZCfkSxOsoV6rYDglVsu2FTicicQyK0RItFw/0","comment_is_top":false,"comment_ctime":1525518212,"is_pvip":false,"replies":[{"id":"2195","content":"可以看作一个模块，算是高性能jvm的标配，比如hotspot、j9","user_name":"作者回复","user_name_real":"杨晓峰","uid":"1009360","ctime":1525572622,"ip_address":"","comment_id":7545,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1525518212","product_id":100006701,"comment_content":"jit一般在什么情况下使用？jit是jvm的扩展么？","like_count":0,"discussions":[{"author":{"id":1009360,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/66/d0/6541f1d5.jpg","nickname":"杨晓峰","note":"","ucode":"2BF255467A978F","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":417393,"discussion_content":"可以看作一个模块，算是高性能jvm的标配，比如hotspot、j9","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1525572622,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":7538,"user_name":"道法自然","can_delete":false,"product_type":"c1","uid":1063627,"ip_address":"","ucode":"E4DFD0415A6291","user_header":"https://static001.geekbang.org/account/avatar/00/10/3a/cb/97dee373.jpg","comment_is_top":false,"comment_ctime":1525514406,"is_pvip":true,"replies":[{"id":"2162","content":"有道理，不过需要注意的是Java平台的管理相关API大部分的抽象是平台中立的","user_name":"作者回复","user_name_real":"杨晓峰","uid":"1009360","ctime":1525525809,"ip_address":"","comment_id":7538,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1525514406","product_id":100006701,"comment_content":"JVM虚拟机，从另一个角度来看，可不可以理解为也是一个微型的操作系统，对开发人员来说，这个操作系统提供了系统API(jdk类库)以及一些管理接口用来反应操作系统当前运行时的各项指标，包括内存，线程信息等。不知道可不可以这样去理解？","like_count":0,"discussions":[{"author":{"id":1009360,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/66/d0/6541f1d5.jpg","nickname":"杨晓峰","note":"","ucode":"2BF255467A978F","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":417389,"discussion_content":"有道理，不过需要注意的是Java平台的管理相关API大部分的抽象是平台中立的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1525525809,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":7535,"user_name":"mao","can_delete":false,"product_type":"c1","uid":1114652,"ip_address":"","ucode":"C8E0700E9A108A","user_header":"https://static001.geekbang.org/account/avatar/00/11/02/1c/a0aba121.jpg","comment_is_top":false,"comment_ctime":1525513503,"is_pvip":true,"replies":[{"id":"2161","content":"藏龙卧虎，专栏只是个大家交流的引子","user_name":"作者回复","user_name_real":"杨晓峰","uid":"1009360","ctime":1525525705,"ip_address":"","comment_id":7535,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1525513503","product_id":100006701,"comment_content":"看评论真的涨知识，这个课程很赞","like_count":0,"discussions":[{"author":{"id":1009360,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/66/d0/6541f1d5.jpg","nickname":"杨晓峰","note":"","ucode":"2BF255467A978F","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":417388,"discussion_content":"藏龙卧虎，专栏只是个大家交流的引子","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1525525705,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":7526,"user_name":"学无止境","can_delete":false,"product_type":"c1","uid":1106950,"ip_address":"","ucode":"F26A10C3ACCFC1","user_header":"https://static001.geekbang.org/account/avatar/00/10/e4/06/2d087eaf.jpg","comment_is_top":false,"comment_ctime":1525509696,"is_pvip":false,"replies":[{"id":"2164","content":"必须的","user_name":"作者回复","user_name_real":"杨晓峰","uid":"1009360","ctime":1525525845,"ip_address":"","comment_id":7526,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1525509696","product_id":100006701,"comment_content":"希望老师后面多讲讲高并发相关知识。谢谢","like_count":0,"discussions":[{"author":{"id":1009360,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/66/d0/6541f1d5.jpg","nickname":"杨晓峰","note":"","ucode":"2BF255467A978F","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":417383,"discussion_content":"必须的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1525525845,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":7521,"user_name":"OnE","can_delete":false,"product_type":"c1","uid":1006058,"ip_address":"","ucode":"5D10DB1CBE6DCF","user_header":"https://static001.geekbang.org/account/avatar/00/0f/59/ea/38c063d5.jpg","comment_is_top":false,"comment_ctime":1525507101,"is_pvip":false,"replies":[{"id":"2165","content":"Java自身在不断提高，我回头补充一个专题系统介绍提高启动速度的几大法宝；hadoop稍微不同，本质是打群架……","user_name":"作者回复","user_name_real":"杨晓峰","uid":"1009360","ctime":1525525976,"ip_address":"","comment_id":7521,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1525507101","product_id":100006701,"comment_content":"Java语言是跨平台，但底下的运行环境却是平台相关的，正是Java虚拟机与字节码造就了“compile once，run anywhere”。也正是这一特性，给人错觉“Java运行慢，不如C&#47;C++”，可以Java真的慢？答案是否定的。快慢，是相对的！Hadoop、Spark等框架恰恰是这一否定的有力支持。","like_count":0,"discussions":[{"author":{"id":1009360,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/66/d0/6541f1d5.jpg","nickname":"杨晓峰","note":"","ucode":"2BF255467A978F","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":417382,"discussion_content":"Java自身在不断提高，我回头补充一个专题系统介绍提高启动速度的几大法宝；hadoop稍微不同，本质是打群架……","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1525525976,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":7485,"user_name":"gesanri","can_delete":false,"product_type":"c1","uid":1121174,"ip_address":"","ucode":"AE3B97DC3ED668","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/PiajxSqBRaELtOO0HKrj5SI5JSlmwiaCvaF6GLiaTmf5NX88OZaO3HymTAGTeIoicBUjqzmMF6sF5raPFjuqLFibrrw/132","comment_is_top":false,"comment_ctime":1525492373,"is_pvip":false,"replies":[{"id":"2143","content":"注意aot是编译期发生的，jit是运行时，不是一码事","user_name":"作者回复","user_name_real":"杨晓峰","uid":"1009360","ctime":1525499978,"ip_address":"","comment_id":7485,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1525492373","product_id":100006701,"comment_content":"文章中提到aot是直接将字节码转换成机器码，如果是这样，那不是跟直接编译执行一样吗？我看周志明的书说的是aot是将Java文件直接编译成机器码，不知道哪种是对的","like_count":0,"discussions":[{"author":{"id":1009360,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/66/d0/6541f1d5.jpg","nickname":"杨晓峰","note":"","ucode":"2BF255467A978F","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":417363,"discussion_content":"注意aot是编译期发生的，jit是运行时，不是一码事","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1525499978,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":7482,"user_name":"孙晓明","can_delete":false,"product_type":"c1","uid":1117094,"ip_address":"","ucode":"CAD28E4D5A3E76","user_header":"https://static001.geekbang.org/account/avatar/00/11/0b/a6/b234aa79.jpg","comment_is_top":false,"comment_ctime":1525491363,"is_pvip":false,"replies":[{"id":"2140","content":"不同角度，Java不仅是语言，相关jvm、工具、类库组成的平台，才是我们日常使用的东西","user_name":"作者回复","user_name_real":"杨晓峰","uid":"1009360","ctime":1525499655,"ip_address":"","comment_id":7482,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1525491363","product_id":100006701,"comment_content":"对“java平台”应该怎么理解，不应该是语言吗？感觉eclipse之类的是平台。","like_count":0,"discussions":[{"author":{"id":1009360,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/66/d0/6541f1d5.jpg","nickname":"杨晓峰","note":"","ucode":"2BF255467A978F","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":417361,"discussion_content":"不同角度，Java不仅是语言，相关jvm、工具、类库组成的平台，才是我们日常使用的东西","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1525499655,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":7480,"user_name":"sky","can_delete":false,"product_type":"c1","uid":1049994,"ip_address":"","ucode":"C0859057592720","user_header":"https://static001.geekbang.org/account/avatar/00/10/05/8a/e7c5a7e2.jpg","comment_is_top":false,"comment_ctime":1525490302,"is_pvip":false,"replies":[{"id":"2142","content":"必须的，后面有单独章节","user_name":"作者回复","user_name_real":"杨晓峰","uid":"1009360","ctime":1525499900,"ip_address":"","comment_id":7480,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1525490302","product_id":100006701,"comment_content":"蓝图里不应该少了concurrent包，这个面试必问。","like_count":0,"discussions":[{"author":{"id":1009360,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/66/d0/6541f1d5.jpg","nickname":"杨晓峰","note":"","ucode":"2BF255467A978F","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":417360,"discussion_content":"必须的，后面有单独章节","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1525499900,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":7464,"user_name":"朱林朋","can_delete":false,"product_type":"c1","uid":1069859,"ip_address":"","ucode":"7474BB83B05E6D","user_header":"https://static001.geekbang.org/account/avatar/00/10/53/23/e990c1b7.jpg","comment_is_top":false,"comment_ctime":1525487935,"is_pvip":false,"replies":[{"id":"2141","content":"9的AOT是试验特性，能力有限，比如只支持Linux x64，java base模块等，快速发展是业界的要求，云计算等推动Java加速，后面可以考虑使用LTS版本","user_name":"作者回复","user_name_real":"杨晓峰","uid":"1009360","ctime":1525499855,"ip_address":"","comment_id":7464,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1525487935","product_id":100006701,"comment_content":"我们还在用java7,不过前面我看新闻，java10已经出来了，9既然提出了aot这种新特性，为啥还能这么快被淘汰，它有啥缺点呢，请老师指点！","like_count":0,"discussions":[{"author":{"id":1009360,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/66/d0/6541f1d5.jpg","nickname":"杨晓峰","note":"","ucode":"2BF255467A978F","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":417352,"discussion_content":"9的AOT是试验特性，能力有限，比如只支持Linux x64，java base模块等，快速发展是业界的要求，云计算等推动Java加速，后面可以考虑使用LTS版本","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1525499855,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":7450,"user_name":"A小星","can_delete":false,"product_type":"c1","uid":1116298,"ip_address":"","ucode":"3DF8A41385D8F0","user_header":"https://static001.geekbang.org/account/avatar/00/11/08/8a/68fca5e9.jpg","comment_is_top":false,"comment_ctime":1525484807,"is_pvip":false,"replies":[{"id":"2129","content":"基本正确，但不只是堆，还有很多东西在堆外，后面会有详细分析","user_name":"作者回复","user_name_real":"杨晓峰","uid":"1009360","ctime":1525486897,"ip_address":"","comment_id":7450,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1525484807","product_id":100006701,"comment_content":"java垃圾回收机制！是回收不再使用的堆内存嘛？那内存泄漏，gc不会主动回收这部分内存嘛","like_count":0,"discussions":[{"author":{"id":1009360,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/66/d0/6541f1d5.jpg","nickname":"杨晓峰","note":"","ucode":"2BF255467A978F","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":417347,"discussion_content":"基本正确，但不只是堆，还有很多东西在堆外，后面会有详细分析","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1525486897,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]}]}