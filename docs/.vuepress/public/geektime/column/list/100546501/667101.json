{"id":667101,"title":"23｜数据库应用（三）：项目数据库配置实战","content":"<p>你好，我是Barry。</p><p>在上节课，我们实现了数据库表的创建，也实现了项目和数据库的联动，这就相当于架设好了项目和数据库的桥梁。不过，我们前面都做的都是单点功能的实践。</p><p>为了让你加深理解，今后轻松应用数据库来完成项目的数据管理和业务处理，接下来的两节课我会带你完成数据库配置，并结合项目综合应用数据库。</p><p>在学习数据库配置前，我们需要先来了解一下项目层级关系。只有明确项目的层级关系，数据库配置的脉络才会更加清晰，也能为我们之后的项目实战做好铺垫。</p><h2>项目层级框架</h2><p>我们先从项目层级框架开始说起。Flask 项目通常分为三层，我们分别来看看。</p><ul>\n<li>第一层是<strong>前端展示层</strong>，包括 HTML、CSS、JS 等文件，用于展示用户界面和与用户交互。这也是直接与用户接触的内容。</li>\n<li>第二层是<strong>后端业务逻辑层</strong>，用来获取数据库的数据并进行业务逻辑处理，最后把处理好的数据交给前端去渲染展示。这层通常会涉及到 ORM 对象关系映射层，用来和数据库交互。</li>\n<li>第三层就是<strong>数据库层</strong>，作用是存储和管理数据，通常会用到MySQL这样的关系型数据库。</li>\n</ul><p>当然，你也要明确一个 Flask 项目并不是都需要分为三层。具体的层级分布取决于项目的复杂度和需求。有些项目可能只需要一个简单的展示层和业务逻辑层，而有些项目可能需要更多的层次，才能支持更复杂的业务逻辑和数据管理。</p><!-- [[[read_end]]] --><p>随着项目变得越来越庞大，组织管理各个文件会越来越困难。为了更好地组织代码，我们会给每个项目设置许多文件夹，用来存放不同的内容。</p><p>在我们的在线直播视频平台项目中，这三个层级的代码都要放在api文件夹下。接下来，我们明确一下文件模块具体如何管理。前端资源放在templates文件夹下，ORM放在models文件夹下，后端业务逻辑层放在modules文件夹下，而数据库的基本信息配置就放在config文件中。</p><h2>数据库的配置</h2><p>梳理好了层级关系，我们这就一起来看看在项目中如何实现对数据库的应用。</p><h3>数据库核心配置项</h3><p>前面说了，数据库的配置我们要对应放在config文件下。所以我们第一步要做的，就是直接在config文件下新建config.py。</p><p>第二步就是配置数据库的一些基本信息。其中包含我们的数据库IP地址、端口以及用户名和密码等相关信息，具体的代码如下所示。</p><pre><code class=\"language-python\">connection = pymysql.connect(\n        host='127.0.0.1',  # 数据库IP地址\n        port=3306,  # 端口\n        user='root',  # 数据库用户名\n        password='flask_project',  # 数据库密码\n        database='my_project'  # 数据库名称\n    )\n</code></pre><p>这里我们将配置信息封装到一个类中，这样的好处是让代码更易维护和分离，而且这样做还能方便我们配置不同环境，比如开发环境、测试环境和生产环境。此外为了保证数据的安全性，类中还可以存储敏感信息，比如数据库用户名和密码这些信息。</p><p>后面是具体的配置代码，供你参考。</p><pre><code class=\"language-python\">class Config:\n&nbsp; &nbsp; SQL_HOST = '127.0.0.1'\n&nbsp; &nbsp; SQL_USERNAME = 'root'\n&nbsp; &nbsp; SQL_PASSWORD = 'flask_project'\n&nbsp; &nbsp; SQL_PORT = 3306\n&nbsp; &nbsp; SQL_DB = 'my_project'\n&nbsp; &nbsp; JSON_AS_ASCII = False\n&nbsp; &nbsp; # 数据库的配置\n&nbsp; &nbsp; SQLALCHEMY_DATABASE_URI = f\"mysql+pymysql://{SQL_USERNAME}:{SQL_PASSWORD}@{SQL_HOST}:{SQL_PORT}/{SQL_DB}\"\n&nbsp; &nbsp; SQLALCHEMY_TRACK_MODIFICATIONS = False\n</code></pre><p>对照前面的代码，我们来梳理一下这些配置项的具体含义。</p><p><img src=\"https://static001.geekbang.org/resource/image/bb/af/bb57f167ca2b43373e138831f5da2faf.jpg?wh=3805x2260\" alt=\"\"><br>\n掌握了前面这些数据库核心配置项之后，你就能轻松地实现连接配置了。常规的开发流程里，项目包括开发、测试、生产这三个阶段，所以我们为了配置的方便，可以事先定义好这三个类。</p><pre><code class=\"language-python\"># 开发环境的config\nclass DevConfig(Config):\n    pass\n# 生产环境的config\nclass ProConfig(Config):\n    DEBUG = False\n    SQLALCHEMY_DATABASE_URI = \"mysql+pymysql://root:my_project@127.0.0.1:3306/aaa\"\n# 测试环境的config\nclass TestConfig(Config):\n    pass\nconfig_dict = {\n    'dev': DevConfig,\n    'pro': ProConfig,\n    'test': TestConfig,\n}\n</code></pre><p>这三个类均继承了Config类。同时，为了方便我们的转换，我们还要定义一个字典config_dict，用它来设置这三个字段。<strong>需要注意的是，针对项目的不同阶段，数据库中的数据是不一样的，只有这样我们才能实现对不同阶段代码的灵活调试。</strong></p><h3>通过SQLAlchemy实现ORM应用</h3><p>搞定了数据库配置项之后，我们下面就通过SQLAlchemy来实现ORM的应用。<a href=\"https://time.geekbang.org/column/article/666523\">上节课</a>讲过，QLAlchemy是一个Python编程语言下的SQL工具包和ORM库，它提供了SQL表达式操作和ORM映射操作的工具。</p><p>同理，在我们项目开发中也是一样的流程。我们先来安装SQLAlchemy，具体的执行命令如下所示。</p><pre><code class=\"language-plain\">pip install flask-sqlalchemy\n</code></pre><p>安装成功之后我们还需要完成实例化，实例化之后才能将一些全局配置应用到具体的数据库操作中。</p><pre><code class=\"language-python\">from flask import Flask\nfrom flask_sqlalchemy import SQLAlchemy\napp = Flask(__name__)\ndb = SQLAlchemy(app)\n</code></pre><p>在项目当中，我们一般把db和app的实例化，放在api文件夹下的__init__.py文件中。</p><p><img src=\"https://static001.geekbang.org/resource/image/c7/9a/c732e49472f05cb1378e4ac3ddeb509a.jpg?wh=2993x918\" alt=\"\"></p><p>具体代码是后面这样，你可以边看代码，边听我为你梳理这段代码的用途。</p><pre><code class=\"language-python\">from flask import Flask\nfrom flask_sqlalchemy import SQLAlchemy\nfrom config.config import config_dict\ndb = SQLAlchemy()\ndef create_app(config_name):\n    app = Flask(__name__)\n    config = config_dict.get(config_name)\n    app.config.from_object(config)\n    db.init_app(app)\n    return app\n</code></pre><p>这段代码我们重点要关注create_app函数。我们一般把create_app函数称为工厂函数。在create_app函数中我们可以传入一个config_name参数，方便我们切换开发、测试的数据库配置。</p><p>其中app.config.from_object(config)的作用是将config对象中定义的配置参数应用到Flask应用程序中，包括数据库连接信息、密钥、调试模式等等。</p><p>db.init_app(app)则是将Flask应用程序对象传递给SQLAlchemy的db对象，并且绑定这两个对象，这样就能通过SQLAlchemy的db对象来处理与数据库有关的操作（如创建模型、查询数据、执行事务等等）了。</p><h2>建立数据库表</h2><p>完成了前面的各种配置，我们这就来建立数据库表。首先，我们需要在models文件夹中新建一个base.py文件，这里主要用来存放我们的模型基类。</p><h3></h3><h3>类的创建</h3><p>模型基类可以用于定义数据库表的结构和关系。在模型中，我们可以定义表的列、主键、外键等，并使用其提供的方法执行数据库操作。这样模型基类就可以通过导入的方式，被其他文件引用。具体的代码实现是后面这样。</p><pre><code class=\"language-python\">from datetime import datetime\nfrom api import db\nclass BaseModels:\n    \"\"\"模型基类\"\"\"\n    create_time = db.Column(db.DateTime, default=datetime.now)  # 创建时间\n    update_time = db.Column(db.DateTime, default=datetime.now, onupdate=datetime.now)  # 记录你的更新时间\n    status = db.Column(db.SmallInteger, default=1)  # 记录存活状态\n</code></pre><p>下一步，我们需要在models文件下新建user.py文件，用于存放用户信息表。</p><pre><code class=\"language-python\">from api import db\nfrom api.models.base import BaseModels\nclass UserInfo(BaseModels, db.Model):\n    \"\"\"用户信息表\"\"\"\n    __tablename__ = \"user_info\"\n    id = db.Column(db.Integer, primary_key=True, autoincrement=True)  # 用户id\n    nickname = db.Column(db.String(64), nullable=False)  # 用户昵称\n    mobile = db.Column(db.String(16))  # 手机号\n    avatar_url = db.Column(db.String(256))  # 用户头像路径\n    signature = db.Column(db.String(256))  # 签名\n    sex = db.Column(db.Enum('0', '1', '2'), default='0')  # 1男  2 女 0 暂不填写\n    birth_date = db.Column(db.DateTime)  # 出生日期\n    role_id = db.Column(db.Integer)  # 角色id\n    last_message_read_time = db.Column(db.DateTime)\n    def to_dict(self):\n        return {\n            'id': self.id,\n            'nickname': self.nickname,\n            'mobile': self.mobile,\n            'avatar_url': self.avatar_url,\n            'sex': self.sex,\n        }\n</code></pre><p>这里的to_dict函数可以将 UserInfo 对象序列化为 JSON 数据，这样就能在查询时将查询到的数据放在 Flask 的响应中。这里的学习重点就是掌握创建方法，后面随着项目的深入，我们还会根据项目规模在models文件下灵活添加其他的文件。</p><h3>生成数据库表</h3><p>在创建数据库表类之后，数据库表的创建还差最后一个环节——执行代码生成数据库表。</p><p>首先，我们需要在项目的根目录下新建app.py文件。app.py文件能将多个Flask脚本整合到一个文件中，简化Flask应用程序的管理和部署。</p><p>我们只要在app.py文件下做好相关函数的导入和初始化工作，就可以把app.py作为Flask的命令行接口，通过它运行不同的Flask命令，高效完成数据库迁移、创建超级用户、导出数据等操作。</p><p>紧接着，我们需要在api文件中导入db和create_app工厂函数。</p><pre><code class=\"language-python\">from api import db, create_app\nfrom flask_script import Manager\nfrom flask_migrate import Migrate\napp = create_app('dev')\n# 管理器对象可以用来提供各种管理命令，例如启动应用程序、创建数据库表、导入数据等等\nmanager = Manager(app)\nMigrate(app, db)\ndef create_db():\n&nbsp; &nbsp; db.create_all()\nif __name__ == '__main__':\n    manager.run()\n</code></pre><p>对照前面的代码，我来讲解一下重点。我们导入了所需的库和模块。api&nbsp;模块中包含了 Flask 应用程序和数据库连接，create_app&nbsp;函数用来创建应用程序实例，Manager&nbsp;类用于创建管理命令的对象，Migrate&nbsp;类用于处理数据库迁移。</p><p>之后，我们需要使用&nbsp;create_app&nbsp;函数创建一个名为&nbsp;dev&nbsp;的开发环境应用程序实例。同时使用&nbsp;Manager&nbsp;类创建一个名为&nbsp;manager&nbsp;的管理命令对象，该对象可以用来提供各种管理命令，例如启动应用程序、创建数据库表、导入数据等等。</p><p>第七行代码表示我们用Migrate&nbsp;类来初始化 Flask-Migrate，目的是方便处理数据库迁移。</p><p>之后第八行代码用到了create_db&nbsp;函数，它的主要作用是使用&nbsp;db.create_all()&nbsp;方法创建所有定义的数据库表。</p><p>最后是第十一行代码，我们在主程序中，使用&nbsp;manager.run()&nbsp;方法运行管理命令对象，目的是启动应用程序并监听管理命令。</p><p>理解了前面这些执行代码后，我们还需要生成migrations 文件，这是为了方便后面变更和管理数据库结构，防止出现误操作或异常操作。执行命令和对应的执行效果图是后面这样。执行后面的语句后，就会自动生成migrations文件夹。</p><pre><code class=\"language-python\">flask db init\n</code></pre><p><img src=\"https://static001.geekbang.org/resource/image/97/a9/97a445668b832e2945eae6f4f58f75a9.jpg?wh=2993x551\" alt=\"\"></p><p>文件夹中包含文件versions，未来每次修改数据库表结构时，这个文件都会生成一个脚本文件，用来记录每次数据库表的变化。其他的文件都是一些配置文件，你暂时不需要关心。</p><p>自动生成migrations文件夹后，我们还要在终端中输入后面的命令，命令的作用你可以参考代码注释。</p><pre><code class=\"language-python\">flask db migrate&nbsp; # ⽣成迁移版本, 保存到迁移文件夹中\nflask db upgrade&nbsp; # 执行迁移\n</code></pre><p>命令输入后，我们打开Navicat，就会发现my_project数据库中多出了一个alembic_version数据库表。</p><p><img src=\"https://static001.geekbang.org/resource/image/8c/99/8cc8b5e4469b7531d8885c73920f0799.jpg?wh=2900x667\" alt=\"\"></p><p>这个表中只有一个字段，是用来存储版本号。我们可以通过查询alembic_version表的版本号来确定当前数据库所处的状态。此外，alembic_version表还可以用于在不同版本之间实现数据库迁移操作。</p><p>完成前面这些初步操作之后，我们还需要创建user_info数据库表。具体操作就是在pycharm的Terminal终端，输入后面的命令。</p><pre><code class=\"language-python\">flask shell\ndb.create_all()\n</code></pre><p><img src=\"https://static001.geekbang.org/resource/image/2d/f4/2d9109cc36f0ef3a1d03a2c812a740f4.png?wh=1870x293\" alt=\"图片\"></p><p>这里我们输入Flask Shell，就会进入一个交互式的Python编程，自由使用所有的Flask应用程序中定义的变量、函数和对象以及数据库模型、路由和视图函数等等。这个环节一般用来测试和调试应用程序。</p><p>进入交互式命令后，还需要输入db.create_all()来创建所有的数据库表。执行完成后，只需要Ctrl+Z退出执行即可。此时我们再次打开Navicat，就会看到数据库表user_info已经创建好了。</p><p><img src=\"https://static001.geekbang.org/resource/image/86/c3/865250224909a327b081e3992a2053c3.jpg?wh=2313x1221\" alt=\"\"></p><p>不过仔细看一下就会发现，此时user_info中还没有任何信息，因为我们目前只完成了表的创建，还没有新增数据，这部分内容下节课我们再继续探索。</p><h2>总结</h2><p>又到了课程的尾声，我们来回顾一下今天的学习重点。</p><p>想要在项目中灵活应用数据库，熟悉项目层级框架并做好每个模块的配置管理这些准备步骤非常重要。通常一个 Flask&nbsp;项目会分成三层：前端展示层、后端业务逻辑层和数据库层，明确了它们的作用，我们才能更好地管理项目。</p><p>对比前面课程的单点实践，你会发现今天在数据库配置阶段，有些配置存在一些细微变动，这些只有落地项目的时候才能感受到。这个过程你需要重点关注create_app函数的用法，尤其是其中各个参数的作用，这样才能高效配置数据库。</p><p>另一个学习重点就是数据库表建立。结合user.py文件的案例，我们学习了如何通过db.Model模型基类中的db.Column类创建数据库。你需要明确app.py文件在项目中的定位和作用，并且牢牢掌握数据库表创建的实现代码，把握其思路，这样才能从容应对类似的建表需求。</p><h2>思考题</h2><p>Flask项目开发包括开发、测试、生产这三个阶段，你觉得是否需要对应有三个数据库来支撑开发？还是说单个数据库就可以满足？</p><p>欢迎你在留言区和我交流互动，如果这节课的内容对你有帮助，别忘了分享给身边更多朋友。</p>","neighbors":{"left":{"article_title":"22｜数据库应用（二）：数据库ORM对象关系映射","id":666523},"right":{"article_title":"24｜数据库应用（四）：如何在项目中灵活应用数据库操作","id":667908}},"comments":[{"had_liked":false,"id":376685,"user_name":"长林啊","can_delete":false,"product_type":"c1","uid":1707743,"ip_address":"四川","ucode":"B75CB4919FF25A","user_header":"https://static001.geekbang.org/account/avatar/00/1a/0e/df/a64b3146.jpg","comment_is_top":false,"comment_ctime":1687222022,"is_pvip":false,"replies":[{"id":137315,"content":"总结的非常准确，感谢分享，为你点赞！","user_name":"作者回复","user_name_real":"编辑","uid":3050845,"ctime":1687238251,"ip_address":"北京","comment_id":376685,"utype":1}],"discussion_count":1,"race_medal":1,"score":2,"product_id":100546501,"comment_content":"在项目开发中，生产环境的数据库肯定是独立的，开发和测试可以使用同一个数据库；在开发和测试过程中，会添加很多测试数据，对于生产环境而言，这部分是脏数据且没有任何实际意义","like_count":1,"discussions":[{"author":{"id":3050845,"avatar":"https://static001.geekbang.org/account/avatar/00/2e/8d/5d/9a86007c.jpg","nickname":"Barry","note":"","ucode":"82175C78B4CAED","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":621442,"discussion_content":"总结的非常准确，感谢分享，为你点赞！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1687238252,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":390546,"user_name":"Geek_7e5830","can_delete":false,"product_type":"c1","uid":3622505,"ip_address":"福建","ucode":"73249AF61A0D16","user_header":"","comment_is_top":false,"comment_ctime":1715610488,"is_pvip":false,"replies":[{"id":142621,"content":"你遇到的错误确实是因为在 Python 3.8 及以上版本中，time 模块中的 time.clock() 方法已经被移除。这个方法是用来测量 CPU 时间的，但在 Python 3.3 后就被标记为已弃用（deprecated），并在 Python 3.8 中完全移除。","user_name":"作者回复","user_name_real":"作者","uid":3050845,"ctime":1720771936,"ip_address":"北京","comment_id":390546,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100546501,"comment_content":"好像python3.8以上会报  from flask_sqlalchemy import SQLAlchemy\n  File &quot;C:\\PythonEnv\\VideoPlateform\\.venv\\Lib\\site-packages\\flask_sqlalchemy\\__init__.py&quot;, line 39, in &lt;module&gt;\n    _timer = time.clock\n             ^^^^^^^^^^\nAttributeError: module &#39;time&#39; has no attribute &#39;clock&#39;错误。 Python 3.8 版本中移除了 time 模块中的 time.clock() 方法。","like_count":0,"discussions":[{"author":{"id":3050845,"avatar":"https://static001.geekbang.org/account/avatar/00/2e/8d/5d/9a86007c.jpg","nickname":"Barry","note":"","ucode":"82175C78B4CAED","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":647914,"discussion_content":"你遇到的错误确实是因为在 Python 3.8 及以上版本中，time 模块中的 time.clock() 方法已经被移除。这个方法是用来测量 CPU 时间的，但在 Python 3.3 后就被标记为已弃用（deprecated），并在 Python 3.8 中完全移除。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1720771936,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2,\"source\":0}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":386769,"user_name":"lightwolf","can_delete":false,"product_type":"c1","uid":3229927,"ip_address":"安徽","ucode":"9F4E0F742C174D","user_header":"https://static001.geekbang.org/account/avatar/00/31/48/e7/958b7e6c.jpg","comment_is_top":false,"comment_ctime":1705505833,"is_pvip":false,"replies":[{"id":141136,"content":"这个需要检查一下，确保你使用的数据库引擎支持 Flask-SQLAlchemy。例如，SQLite 数据库在某些情况下可能不会立即显示新创建的表。","user_name":"作者回复","user_name_real":"编辑","uid":3050845,"ctime":1707041416,"ip_address":"北京","comment_id":386769,"utype":1}],"discussion_count":2,"race_medal":0,"score":2,"product_id":100546501,"comment_content":"老师都正常执行了, 但是执行完成db.create_all()之后, 数据库中为什么没有表","like_count":0,"discussions":[{"author":{"id":3050845,"avatar":"https://static001.geekbang.org/account/avatar/00/2e/8d/5d/9a86007c.jpg","nickname":"Barry","note":"","ucode":"82175C78B4CAED","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":636801,"discussion_content":"这个需要检查一下，确保你使用的数据库引擎支持 Flask-SQLAlchemy。例如，SQLite 数据库在某些情况下可能不会立即显示新创建的表。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1707041416,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2,\"source\":0}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":3229927,"avatar":"https://static001.geekbang.org/account/avatar/00/31/48/e7/958b7e6c.jpg","nickname":"lightwolf","note":"","ucode":"9F4E0F742C174D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":636041,"discussion_content":"已经找到原因: https://blog.csdn.net/weixin_40283460/article/details/115029103，是因为将models单独放在了一个文件夹下面, 如果使用create_all， 需要在使用db的文件中导入","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1705506200,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"安徽","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":386611,"user_name":"Geek_d26f93","can_delete":false,"product_type":"c1","uid":3738959,"ip_address":"内蒙古","ucode":"D5C89ADCA3E877","user_header":"","comment_is_top":false,"comment_ctime":1705212647,"is_pvip":false,"replies":[{"id":141137,"content":"你的 Flask-SQLAlchemy 配置中，必须设置 SQLALCHEMY_DATABASE_URI 或 SQLALCHEMY_BINDS 中的一个。如果你想使用 SQLALCHEMY_BINDS，你可以像这样设置：\nfrom flask import Flask  \nfrom flask_sqlalchemy import SQLAlchemy  \n  \napp = Flask(__name__)  \napp.config[&#39;SQLALCHEMY_BINDS&#39;] = {&#39;other&#39;: &#39;sqlite:&#47;&#47;&#47;&#47;tmp&#47;other.db&#39;}  # 请替换为你的数据库 URI  \ndb = SQLAlchemy(app)\nother 是数据库的别名，你可以通过这个别名来访问这个数据库。","user_name":"作者回复","user_name_real":"编辑","uid":3050845,"ctime":1707041547,"ip_address":"北京","comment_id":386611,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100546501,"comment_content":"   raise RuntimeError(\nRuntimeError: Either &#39;SQLALCHEMY_DATABASE_URI&#39; or &#39;SQLALCHEMY_BINDS&#39; must be set.这个错误怎么办\n","like_count":0,"discussions":[{"author":{"id":3050845,"avatar":"https://static001.geekbang.org/account/avatar/00/2e/8d/5d/9a86007c.jpg","nickname":"Barry","note":"","ucode":"82175C78B4CAED","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":636802,"discussion_content":"你的 Flask-SQLAlchemy 配置中，必须设置 SQLALCHEMY_DATABASE_URI 或 SQLALCHEMY_BINDS 中的一个。如果你想使用 SQLALCHEMY_BINDS，你可以像这样设置：\nfrom flask import Flask  \nfrom flask_sqlalchemy import SQLAlchemy  \n  \napp = Flask(__name__)  \napp.config[&#39;SQLALCHEMY_BINDS&#39;] = {&#39;other&#39;: &#39;sqlite:////tmp/other.db&#39;}  # 请替换为你的数据库 URI  \ndb = SQLAlchemy(app)\nother 是数据库的别名，你可以通过这个别名来访问这个数据库。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1707041547,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2,\"source\":0}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":386584,"user_name":"Geek_d26f93","can_delete":false,"product_type":"c1","uid":3738959,"ip_address":"内蒙古","ucode":"D5C89ADCA3E877","user_header":"","comment_is_top":false,"comment_ctime":1705146615,"is_pvip":false,"replies":[{"id":141138,"content":"从你给出的错误信息来看，问题出现在你尝试从flask_script模块导入Manager时。错误信息显示，Python无法找到名为flask._compat的模块。\n\n这个问题可能是由于你使用的Flask版本与Flask-Script版本不兼容导致的。flask._compat是在Flask 1.0之后被移除的，而Flask-Script 2.0及更高版本需要Flask 1.0或更高版本。","user_name":"作者回复","user_name_real":"编辑","uid":3050845,"ctime":1707041623,"ip_address":"北京","comment_id":386584,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100546501,"comment_content":"Traceback (most recent call last):\n  File &quot;D:\\environment\\Python\\Miniconda3\\envs\\venv2\\lib\\site-packages\\flask\\cli.py&quot;, line 219, in locate_app\n    __import__(module_name)\n  File &quot;D:\\environment\\Python\\pythonProject\\First_Flask\\app.py&quot;, line 2, in &lt;module&gt;\n    from flask_script import Manager\n  File &quot;D:\\environment\\Python\\Miniconda3\\envs\\venv2\\lib\\site-packages\\flask_script\\__init__.py&quot;, line 15, in &lt;module&gt;\n    from flask._compat import text_type\nModuleNotFoundError: No module named &#39;flask._compat&#39; 请问我代码遗漏了哪部分会出现这个错误\n","like_count":0,"discussions":[{"author":{"id":3050845,"avatar":"https://static001.geekbang.org/account/avatar/00/2e/8d/5d/9a86007c.jpg","nickname":"Barry","note":"","ucode":"82175C78B4CAED","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":636803,"discussion_content":"从你给出的错误信息来看，问题出现在你尝试从flask_script模块导入Manager时。错误信息显示，Python无法找到名为flask._compat的模块。\n\n这个问题可能是由于你使用的Flask版本与Flask-Script版本不兼容导致的。flask._compat是在Flask 1.0之后被移除的，而Flask-Script 2.0及更高版本需要Flask 1.0或更高版本。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1707041623,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2,\"source\":0}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":383108,"user_name":"Aegean Sea","can_delete":false,"product_type":"c1","uid":3688848,"ip_address":"广东","ucode":"0C6F23AEAC6E07","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/PiajxSqBRaELrxUK36wj3AesBNLK4tPibu7URiaI48cMWho2t8bfZOyfYDnQwQu2TTXibIbGVZ8DkPhNXDGr7VTfOJv1R1ccw1KBv5qfbq1bYvDhL1MtAVjISA/132","comment_is_top":false,"comment_ctime":1698431345,"is_pvip":false,"replies":[{"id":139595,"content":"这个是你缺失db,你的代码有遗漏，找不到就会报错：\n安装成功之后我们还需要完成实例化，实例化之后才能将一些全局配置应用到具体的数据库操作中。:\nfrom flask import Flask\nfrom flask_sqlalchemy import SQLAlchemy\napp = Flask(__name__)\ndb = SQLAlchemy(app)\n\n从这一部分往下顺。\n","user_name":"作者回复","user_name_real":"编辑","uid":3050845,"ctime":1698734298,"ip_address":"北京","comment_id":383108,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100546501,"comment_content":"(venv2) PS D:\\environment\\Python\\pythonProject\\First_Flask&gt; flask db init\nError: While importing &#39;app&#39;, an ImportError was raised:\n\nTraceback (most recent call last):\n  File &quot;D:\\environment\\Python\\Miniconda3\\envs\\venv2\\lib\\site-packages\\flask\\cli.py&quot;, line 219, in locate_app\n    __import__(module_name)\n  File &quot;D:\\environment\\Python\\pythonProject\\First_Flask\\app.py&quot;, line 2, in &lt;module&gt;\n    from flask_script import Manager\n  File &quot;D:\\environment\\Python\\Miniconda3\\envs\\venv2\\lib\\site-packages\\flask_script\\__init__.py&quot;, line 15, in &lt;module&gt;\n    from flask._compat import text_type\nModuleNotFoundError: No module named &#39;flask._compat&#39;\n\n\nUsage: flask [OPTIONS] COMMAND [ARGS]...\nTry &#39;flask --help&#39; for help.\n\nError: No such command &#39;db&#39;.\n老师求解，试了很多方法都行不通","like_count":0,"discussions":[{"author":{"id":3050845,"avatar":"https://static001.geekbang.org/account/avatar/00/2e/8d/5d/9a86007c.jpg","nickname":"Barry","note":"","ucode":"82175C78B4CAED","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":630612,"discussion_content":"这个是你缺失db,你的代码有遗漏，找不到就会报错：\n安装成功之后我们还需要完成实例化，实例化之后才能将一些全局配置应用到具体的数据库操作中。:\nfrom flask import Flask\nfrom flask_sqlalchemy import SQLAlchemy\napp = Flask(__name__)\ndb = SQLAlchemy(app)\n\n从这一部分往下顺。\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1698734299,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":383107,"user_name":"Aegean Sea","can_delete":false,"product_type":"c1","uid":3688848,"ip_address":"广东","ucode":"0C6F23AEAC6E07","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/PiajxSqBRaELrxUK36wj3AesBNLK4tPibu7URiaI48cMWho2t8bfZOyfYDnQwQu2TTXibIbGVZ8DkPhNXDGr7VTfOJv1R1ccw1KBv5qfbq1bYvDhL1MtAVjISA/132","comment_is_top":false,"comment_ctime":1698431200,"is_pvip":false,"replies":[{"id":139593,"content":"你的代码写的不全，db找不到，你会发现我在地下写的代码中有：\nfrom flask import Flask\nfrom flask_sqlalchemy import SQLAlchemy\napp = Flask(__name__)\ndb = SQLAlchemy(app)。 &#47;&#47;这个需要有\n你缺失这部分，需要补充上","user_name":"作者回复","user_name_real":"编辑","uid":3050845,"ctime":1698733861,"ip_address":"北京","comment_id":383107,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100546501,"comment_content":"ModuleNotFoundError: No module named &#39;flask._compat&#39;\nUsage: flask [OPTIONS] COMMAND [ARGS]...\nTry &#39;flask --help&#39; for help.\n\nError: No such command &#39;db&#39;.\n老师求解。试了很多方法行不通\n","like_count":0,"discussions":[{"author":{"id":3050845,"avatar":"https://static001.geekbang.org/account/avatar/00/2e/8d/5d/9a86007c.jpg","nickname":"Barry","note":"","ucode":"82175C78B4CAED","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":630610,"discussion_content":"你的代码写的不全，db找不到，你会发现我在地下写的代码中有：\nfrom flask import Flask\nfrom flask_sqlalchemy import SQLAlchemy\napp = Flask(__name__)\ndb = SQLAlchemy(app)。 //这个需要有\n你缺失这部分，需要补充上","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1698733861,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":382632,"user_name":"Geek_00c9c4","can_delete":false,"product_type":"c1","uid":2290434,"ip_address":"上海","ucode":"249ACAE2F5F381","user_header":"https://static001.geekbang.org/account/avatar/00/22/f3/02/cbad4037.jpg","comment_is_top":false,"comment_ctime":1697696987,"is_pvip":false,"replies":[{"id":139394,"content":"在课程介绍中的 框架版本中有详细的介绍。可直接参考。","user_name":"作者回复","user_name_real":"编辑","uid":3050845,"ctime":1698033461,"ip_address":"北京","comment_id":382632,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100546501,"comment_content":"你好，项目中使用的每个包的版本是多少呀（能否发一下你用的版本）？执行flask db init ，报这个错误，\nTraceback (most recent call last):\n  File &quot;&#47;Users&#47;kevin&#47;.pyenv&#47;versions&#47;3.12.0&#47;bin&#47;flask&quot;, line 5, in &lt;module&gt;\n    from flask.cli import main\n  File &quot;&#47;Users&#47;kevin&#47;.pyenv&#47;versions&#47;3.12.0&#47;lib&#47;python3.12&#47;site-packages&#47;flask&#47;__init__.py&quot;, line 19, in &lt;module&gt;\n    from jinja2 import Markup, escape\nImportError: cannot import name &#39;Markup&#39; from &#39;jinja2&#39; (&#47;Users&#47;kevin&#47;.pyenv&#47;versions&#47;3.12.0&#47;lib&#47;python3.12&#47;site-packages&#47;jinja2&#47;__init__.py)","like_count":0,"discussions":[{"author":{"id":3050845,"avatar":"https://static001.geekbang.org/account/avatar/00/2e/8d/5d/9a86007c.jpg","nickname":"Barry","note":"","ucode":"82175C78B4CAED","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":630029,"discussion_content":"在课程介绍中的 框架版本中有详细的介绍。可直接参考。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1698033461,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":380270,"user_name":"Geek_5cb928","can_delete":false,"product_type":"c1","uid":3630475,"ip_address":"广东","ucode":"2768F6F5F99D8E","user_header":"","comment_is_top":false,"comment_ctime":1693293752,"is_pvip":false,"replies":[{"id":138526,"content":"感谢同学分享，为你点赞，后端开发过程中还是建议大家使用PyCharm更方便一些。","user_name":"作者回复","user_name_real":"编辑","uid":3050845,"ctime":1693464975,"ip_address":"北京","comment_id":380270,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100546501,"comment_content":"在执行flask shell后面的db相关命令时报错，name &#39;db&#39; is not defined\n发现造成的原因是教程里面用到的pycharm会自动配置context，用vscode所以遇到了这个问题。\n修复如下\n在app.py （manager.py）下面定义context\n@app.shell_context_processor\ndef make_shell_context():\n    return {&#39;db&#39;: db}\n供大家参考","like_count":0,"discussions":[{"author":{"id":3050845,"avatar":"https://static001.geekbang.org/account/avatar/00/2e/8d/5d/9a86007c.jpg","nickname":"Barry","note":"","ucode":"82175C78B4CAED","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":626882,"discussion_content":"感谢同学分享，为你点赞，后端开发过程中还是建议大家使用PyCharm更方便一些。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1693464975,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":379676,"user_name":"蜡笔小新爱看书","can_delete":false,"product_type":"c1","uid":1224437,"ip_address":"广东","ucode":"3E597682ADB0C8","user_header":"https://static001.geekbang.org/account/avatar/00/12/ae/f5/a17bbcc9.jpg","comment_is_top":false,"comment_ctime":1692265759,"is_pvip":false,"replies":[{"id":138332,"content":"对于代码提示设置问题，你确保 &quot;SQLAlchemy&quot; 库被正确识别并在代码提示列表中可用。如果它没有被列出，你可以点击 &quot;+&quot; 号添加它。如果 &quot;SQLAlchemy&quot; 已经在列表中，请确保它的版本与你的项目兼容。\n你可以尝试一下，如果有问题可以继续追评。","user_name":"作者回复","user_name_real":"编辑","uid":3050845,"ctime":1692453505,"ip_address":"北京","comment_id":379676,"utype":1}],"discussion_count":2,"race_medal":0,"score":2,"product_id":100546501,"comment_content":"db.Column，输入.pycharm带不出来Column的提示，是什么原因？","like_count":0,"discussions":[{"author":{"id":3050845,"avatar":"https://static001.geekbang.org/account/avatar/00/2e/8d/5d/9a86007c.jpg","nickname":"Barry","note":"","ucode":"82175C78B4CAED","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":626029,"discussion_content":"对于代码提示设置问题，你确保 &#34;SQLAlchemy&#34; 库被正确识别并在代码提示列表中可用。如果它没有被列出，你可以点击 &#34;+&#34; 号添加它。如果 &#34;SQLAlchemy&#34; 已经在列表中，请确保它的版本与你的项目兼容。\n你可以尝试一下，如果有问题可以继续追评。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1692453505,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":1,"child_discussions":[{"author":{"id":1224437,"avatar":"https://static001.geekbang.org/account/avatar/00/12/ae/f5/a17bbcc9.jpg","nickname":"蜡笔小新爱看书","note":"","ucode":"3E597682ADB0C8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":3050845,"avatar":"https://static001.geekbang.org/account/avatar/00/2e/8d/5d/9a86007c.jpg","nickname":"Barry","note":"","ucode":"82175C78B4CAED","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":626758,"discussion_content":"SQLAlchemy是可用的，不清楚版本和项目之间的需要怎么兼容，网上找了很多资料也没查到解决办法，老师可以帮忙列一下可以带出db.Column自动提示的各个依赖库版本吗，包括python用3.几？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1693369672,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":626029,"ip_address":"广东","group_id":0},"score":626758,"extra":""}]}]},{"had_liked":false,"id":377895,"user_name":"Geek_7cc417","can_delete":false,"product_type":"c1","uid":2610557,"ip_address":"广东","ucode":"89DD57A32188B4","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJJQYnrTXgWggD3KV8scrKpdupicFibhFzIAenfrBHaMwxibksHzFVaJU3VPTsmiaXfXWZ84FIQYbjCZA/132","comment_is_top":false,"comment_ctime":1689494210,"is_pvip":false,"replies":[{"id":137727,"content":"如果是毕业设计的话单点功能是不够的，如果只有用户纬度是不可以的，我们课程中的项目实现是完整的，不单单只有用户表一个模块。我之后会上传完整的代码你可以参考一下，整体实现起来功能还是非常多的，你的毕业设计应该不需要这么多功能，满足增删改查就行应该。有问题可以再回评。","user_name":"作者回复","user_name_real":"编辑","uid":3050845,"ctime":1689519910,"ip_address":"北京","comment_id":377895,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100546501,"comment_content":"我想问一下老师，在本次项目中，我们数据库设计只有一个用户信息表就够了吗？我想学习一下数据库怎么设计的，来修改增加去做个毕业设计不知道能不能行","like_count":0,"discussions":[{"author":{"id":3050845,"avatar":"https://static001.geekbang.org/account/avatar/00/2e/8d/5d/9a86007c.jpg","nickname":"Barry","note":"","ucode":"82175C78B4CAED","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":623470,"discussion_content":"如果是毕业设计的话单点功能是不够的，如果只有用户纬度是不可以的，我们课程中的项目实现是完整的，不单单只有用户表一个模块。我之后会上传完整的代码你可以参考一下，整体实现起来功能还是非常多的，你的毕业设计应该不需要这么多功能，满足增删改查就行应该。有问题可以再回评。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1689519910,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":377465,"user_name":"🌀Pick Monster 🌀","can_delete":false,"product_type":"c1","uid":1141196,"ip_address":"陕西","ucode":"EE67F41B360460","user_header":"https://static001.geekbang.org/account/avatar/00/11/69/cc/747c7629.jpg","comment_is_top":false,"comment_ctime":1688540891,"is_pvip":true,"replies":[{"id":137566,"content":"你好同学，db 和 app 的实例化要在 api 文件夹下的 __init__.py 文件中，在此之前要安装SQLAlchemy，出现这个问题是因为没有正确导入模块，在__init__函数中使用了未定义的数据库命令。请检查代码中是否存在语法错误，特别是与数据库相关的语句。","user_name":"作者回复","user_name_real":"编辑","uid":3050845,"ctime":1688700548,"ip_address":"北京","comment_id":377465,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100546501,"comment_content":"flask db init\n报错Error: No such command &#39;db&#39;.\n提示在api __init__中没有db，这个为什么","like_count":0,"discussions":[{"author":{"id":3050845,"avatar":"https://static001.geekbang.org/account/avatar/00/2e/8d/5d/9a86007c.jpg","nickname":"Barry","note":"","ucode":"82175C78B4CAED","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":622825,"discussion_content":"你好同学，db 和 app 的实例化要在 api 文件夹下的 __init__.py 文件中，在此之前要安装SQLAlchemy，出现这个问题是因为没有正确导入模块，在__init__函数中使用了未定义的数据库命令。请检查代码中是否存在语法错误，特别是与数据库相关的语句。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1688700549,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":377154,"user_name":"未来已来","can_delete":false,"product_type":"c1","uid":1187130,"ip_address":"广东","ucode":"3A21ACFD53CB9C","user_header":"https://static001.geekbang.org/account/avatar/00/12/1d/3a/cdf9c55f.jpg","comment_is_top":false,"comment_ctime":1688005510,"is_pvip":false,"replies":[{"id":137511,"content":"你可以检查一下是否正确配置了数据库连接，确保你正确设置了数据库连接数据库地址以及用户名和密码。其次，如果数据库中已经存在其他表或约束，例如外键约束、唯一约束等，可能影响新表的创建。你可以尝试在创建新表之前删除或修改这些约束，或者创建一个新的数据库进行测试。如有问题可以追评。","user_name":"作者回复","user_name_real":"编辑","uid":3050845,"ctime":1688397882,"ip_address":"北京","comment_id":377154,"utype":1}],"discussion_count":2,"race_medal":0,"score":3,"product_id":100546501,"comment_content":"不知道为啥，执行完 `flask shell｀ 及 ｀db.create_all()｀之后，没有正常建表","like_count":0,"discussions":[{"author":{"id":3050845,"avatar":"https://static001.geekbang.org/account/avatar/00/2e/8d/5d/9a86007c.jpg","nickname":"Barry","note":"","ucode":"82175C78B4CAED","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":622553,"discussion_content":"你可以检查一下是否正确配置了数据库连接，确保你正确设置了数据库连接数据库地址以及用户名和密码。其次，如果数据库中已经存在其他表或约束，例如外键约束、唯一约束等，可能影响新表的创建。你可以尝试在创建新表之前删除或修改这些约束，或者创建一个新的数据库进行测试。如有问题可以追评。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1688397882,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1768759,"avatar":"","nickname":"闻道","note":"","ucode":"90BCB38325EADF","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":622950,"discussion_content":"发现要在app.py 加上from api.models import user 就可以创建成功。看到的解释是讲模型类定义在单独的模块中，必须在调用create_all前导入相应的模块，让SQLAlchemy获取模型类被创建时生成的表信息\n","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1688867074,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"广东","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":376753,"user_name":"Geek_840593","can_delete":false,"product_type":"c1","uid":3605821,"ip_address":"重庆","ucode":"F92256CD230166","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTI7Bm7xdbwqoWPaDwqn6WESYL5QY8X8r3Q1P7UEIeDWictxJWEIJLluhIDHF7b0wFpbiav3gYToBBYg/132","comment_is_top":false,"comment_ctime":1687319895,"is_pvip":false,"replies":[{"id":137376,"content":"是这样的，在 app.py 文件中，确实有create_db()方法，它用于创建数据库表，通过 db.create_all() 方法来创建所有定义的模型类的表。然而，当你运行 Flask 应用程序时，create_db() 函数并不会自动执行。你需要在 Terminal 中手动输入 flask shell 命令，然后在 Python shell 中执行 db.create_all() 语句来创建数据库表。手动执行 db.create_all() 的原因是在 Flask 应用程序启动时，它需要加载整个应用程序，包括数据库模型和相关的表。在这个过程中，Flask 会自动检测数据库中是否存在相关的表，如果不存在，则会抛出一个异常。因此，为了确保应用程序能够正确启动，我们需要手动执行 db.create_all() 来创建数据库表。","user_name":"作者回复","user_name_real":"编辑","uid":3050845,"ctime":1687682827,"ip_address":"北京","comment_id":376753,"utype":1}],"discussion_count":2,"race_medal":0,"score":3,"product_id":100546501,"comment_content":"老师：app.py这里不是有段代码创建数据库表\n。。。。。。\ndef create_db():\n    db.create_all()\nif __name__ == &#39;__main__&#39;:\n    manager.run()\n为什么我们还是要手动在Terminal输入一次：\nflask shell\ndb.create_all()","like_count":0,"discussions":[{"author":{"id":3050845,"avatar":"https://static001.geekbang.org/account/avatar/00/2e/8d/5d/9a86007c.jpg","nickname":"Barry","note":"","ucode":"82175C78B4CAED","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":621830,"discussion_content":"是这样的，在 app.py 文件中，确实有create_db()方法，它用于创建数据库表，通过 db.create_all() 方法来创建所有定义的模型类的表。然而，当你运行 Flask 应用程序时，create_db() 函数并不会自动执行。你需要在 Terminal 中手动输入 flask shell 命令，然后在 Python shell 中执行 db.create_all() 语句来创建数据库表。手动执行 db.create_all() 的原因是在 Flask 应用程序启动时，它需要加载整个应用程序，包括数据库模型和相关的表。在这个过程中，Flask 会自动检测数据库中是否存在相关的表，如果不存在，则会抛出一个异常。因此，为了确保应用程序能够正确启动，我们需要手动执行 db.create_all() 来创建数据库表。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1687682828,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2667280,"avatar":"https://static001.geekbang.org/account/avatar/00/28/b3/10/6544c1c3.jpg","nickname":"Steven","note":"","ucode":"7CAA60036BDF5A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":628211,"discussion_content":"听是听懂了，但是这个在我们项目中配置项应该更容易设置吧，最感觉这步有点重复，个人如果抛出类似的方法，会说这里有两种方法创建数据库表结构，第一种代码中配置，通过命令运行；第二种直接进入shell中，运行create_all()","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1695087225,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"上海","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":376394,"user_name":"peter","can_delete":false,"product_type":"c1","uid":1058183,"ip_address":"北京","ucode":"261C3FC001DE2D","user_header":"https://static001.geekbang.org/account/avatar/00/10/25/87/f3a69d1b.jpg","comment_is_top":false,"comment_ctime":1686789942,"is_pvip":false,"replies":[{"id":137306,"content":"1、f 前缀是一种字符串格式化语法，它允许我们在运行时将变量插入到字符串中。\n2、pass是一个空语句，它什么也不做，只是占据一个语句位置。","user_name":"作者回复","user_name_real":"编辑","uid":3050845,"ctime":1687167542,"ip_address":"北京","comment_id":376394,"utype":1}],"discussion_count":2,"race_medal":0,"score":3,"product_id":100546501,"comment_content":"Q1：前缀f是什么意思？\nSQLALCHEMY_DATABASE_URI = f&quot;mysql+pymysql:&#47;&#47;{SQL_USERNAME}:{SQL_PASSWORD}@{SQL_HOST}:{SQL_PORT}&#47;{SQL_DB}&quot;， 字符串前面的前缀f表示什么？\nQ2：pass是什么意思？\n# 开发环境的configclass DevConfig(Config):    pass\n函数体的pass是什么意思？省略吗？","like_count":0,"discussions":[{"author":{"id":3050845,"avatar":"https://static001.geekbang.org/account/avatar/00/2e/8d/5d/9a86007c.jpg","nickname":"Barry","note":"","ucode":"82175C78B4CAED","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":621375,"discussion_content":"1、f 前缀是一种字符串格式化语法，它允许我们在运行时将变量插入到字符串中。\n2、pass是一个空语句，它什么也不做，只是占据一个语句位置。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1687167542,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1104601,"avatar":"https://static001.geekbang.org/account/avatar/00/10/da/d9/f051962f.jpg","nickname":"浩仔是程序员","note":"","ucode":"A7E5CF9E1571A2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":621151,"discussion_content":"pass是个空语句，其他语言就是{}","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1686843232,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"广东","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":377576,"user_name":"闻道","can_delete":false,"product_type":"c1","uid":1768759,"ip_address":"广东","ucode":"90BCB38325EADF","user_header":"","comment_is_top":false,"comment_ctime":1688735295,"is_pvip":false,"replies":null,"discussion_count":1,"race_medal":0,"score":3,"product_id":100546501,"comment_content":"遇到是这个报错ModuleNotFoundError: No module named &#39;flask._compat&#39;，看着是Flask版本问题，通过这里面的方法解决https:&#47;&#47;stackoverflow.com&#47;questions&#47;67538056&#47;flask-script-from-flask-compat-import-text-type-modulenotfounderror-no-module\n","like_count":1,"discussions":[{"author":{"id":3050845,"avatar":"https://static001.geekbang.org/account/avatar/00/2e/8d/5d/9a86007c.jpg","nickname":"Barry","note":"","ucode":"82175C78B4CAED","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":626028,"discussion_content":"非常不错的学习记录分享，非常棒，感谢分享","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1692453177,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":382633,"user_name":"Geek_00c9c4","can_delete":false,"product_type":"c1","uid":2290434,"ip_address":"上海","ucode":"249ACAE2F5F381","user_header":"https://static001.geekbang.org/account/avatar/00/22/f3/02/cbad4037.jpg","comment_is_top":false,"comment_ctime":1697700721,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":3,"product_id":100546501,"comment_content":"目前学习到这儿使用的package version\nPackage           Version\n----------------- -------\nalembic           1.12.0\nblinker           1.6.3\nclick             7.1.2\nFlask             1.1.4\nFlask-Migrate     4.0.5\nFlask-Script      2.0.6\nFlask-SQLAlchemy  2.2\nitsdangerous      1.1.0\nJinja2            2.11.3\nMako              1.2.4\nMarkupSafe        2.0.1\npip               23.2.1\nsetuptools        68.2.2\nSQLAlchemy        1.3.0\ntyping_extensions 4.8.0\nWerkzeug          1.0.1","like_count":0}]}