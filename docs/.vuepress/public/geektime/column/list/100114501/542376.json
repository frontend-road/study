{"id":542376,"title":"24｜PersistentVolume：怎么解决数据持久化的难题？","content":"<p>你好，我是Chrono。</p><p>经过了“初级篇”和“中级篇”的学习，相信你对Kubernetes的认识已经比较全面了，那么在接下来的“高级篇”里，我们再进一步，探索Kubernetes更深层次的知识点和更高级的应用技巧。</p><p>今天就先从PersistentVolume讲起。</p><p>早在<a href=\"https://time.geekbang.org/column/article/533395\">第14讲</a>介绍ConfigMap/Secret的时候，我们就遇到过Kubernetes里的Volume存储卷的概念，它使用字段 <code>volumes</code> 和 <code>volumeMounts</code>，相当于是给Pod挂载了一个“虚拟盘”，把配置信息以文件的形式注入进Pod供进程使用。</p><p>不过，那个时候的Volume只能存放较少的数据，离真正的“虚拟盘”还差得很远。</p><p>今天我们就一起来了解Volume的高级用法，看看Kubernetes管理存储资源的API对象PersistentVolume、PersistentVolumeClaim、StorageClass，然后使用本地磁盘来创建实际可用的存储卷。</p><h2>什么是PersistentVolume</h2><p>在刚完成的“中级篇”实战中（<a href=\"https://time.geekbang.org/column/article/539420\">22讲</a>），我们在Kubernetes集群里搭建了WordPress网站，但其中存在一个很严重的问题：Pod没有持久化功能，导致MariaDB无法“永久”存储数据。</p><!-- [[[read_end]]] --><p>因为Pod里的容器是由镜像产生的，而镜像文件本身是只读的，进程要读写磁盘只能用一个临时的存储空间，一旦Pod销毁，临时存储也就会立即回收释放，数据也就丢失了。</p><p>为了保证即使Pod销毁后重建数据依然存在，我们就需要找出一个解决方案，让Pod用上真正的“虚拟盘”。怎么办呢？</p><p>其实，Kubernetes的Volume对数据存储已经给出了一个很好的抽象，它只是定义了有这么一个“存储卷”，而这个“存储卷”是什么类型、有多大容量、怎么存储，我们都可以自由发挥。Pod不需要关心那些专业、复杂的细节，只要设置好 <code>volumeMounts</code>，就可以把Volume加载进容器里使用。</p><p>所以，Kubernetes就顺着Volume的概念，延伸出了<strong>PersistentVolume</strong>对象，它专门用来表示持久存储设备，但隐藏了存储的底层实现，我们只需要知道它能安全可靠地保管数据就可以了（由于PersistentVolume这个词很长，一般都把它简称为PV）。</p><p>那么，集群里的PV都从哪里来呢？</p><p><strong>作为存储的抽象，PV实际上就是一些存储设备、文件系统</strong>，比如Ceph、GlusterFS、NFS，甚至是本地磁盘，管理它们已经超出了Kubernetes的能力范围，所以，一般会由系统管理员单独维护，然后再在Kubernetes里创建对应的PV。</p><p>要注意的是，PV属于集群的系统资源，是和Node平级的一种对象，Pod对它没有管理权，只有使用权。</p><h2>什么是PersistentVolumeClaim/StorageClass</h2><p>现在有了PV，我们是不是可以直接在Pod里挂载使用了呢？</p><p>还不行。因为不同存储设备的差异实在是太大了：有的速度快，有的速度慢；有的可以共享读写，有的只能独占读写；有的容量小，只有几百MB，有的容量大到TB、PB级别……</p><p>这么多种存储设备，只用一个PV对象来管理还是有点太勉强了，不符合“单一职责”的原则，让Pod直接去选择PV也很不灵活。于是Kubernetes就又增加了两个新对象，<strong>PersistentVolumeClaim</strong>和<strong>StorageClass</strong>，用的还是“中间层”的思想，把存储卷的分配管理过程再次细化。</p><p>我们看这两个新对象。</p><p>PersistentVolumeClaim，简称PVC，从名字上看比较好理解，就是用来向Kubernetes申请存储资源的。PVC是给Pod使用的对象，它相当于是Pod的代理，代表Pod向系统申请PV。一旦资源申请成功，Kubernetes就会把PV和PVC关联在一起，这个动作叫做“<strong>绑定</strong>”（bind）。</p><p>但是，系统里的存储资源非常多，如果要PVC去直接遍历查找合适的PV也很麻烦，所以就要用到StorageClass。</p><p>StorageClass的作用有点像<a href=\"https://time.geekbang.org/column/article/538760\">第21讲</a>里的IngressClass，它抽象了特定类型的存储系统（比如Ceph、NFS），在PVC和PV之间充当“协调人”的角色，帮助PVC找到合适的PV。也就是说它可以简化Pod挂载“虚拟盘”的过程，让Pod看不到PV的实现细节。</p><p><img src=\"https://static001.geekbang.org/resource/image/5e/22/5e21d007a6152ec9594919300c2b6e22.jpg?wh=1920x1053\" alt=\"图片\"></p><p>如果看到这里，你觉得还是差点理解也不要着急，我们找个生活中的例子来类比一下。毕竟和常用的CPU、内存比起来，我们对存储系统的认识还是比较少的，所以Kubernetes里，PV、PVC和StorageClass这三个新概念也不是特别好掌握。</p><p>看例子，假设你在公司里想要10张纸打印资料，于是你给前台打电话讲清楚了需求。</p><ul>\n<li>“打电话”这个动作，就相当于PVC，向Kubernetes申请存储资源。</li>\n<li>前台里有各种牌子的办公用纸，大小、规格也不一样，这就相当于StorageClass。</li>\n<li>前台根据你的需要，挑选了一个品牌，再从库存里拿出一包A4纸，可能不止10张，但也能够满足要求，就在登记表上新添了一条记录，写上你在某天申领了办公用品。这个过程就是PVC到PV的绑定。</li>\n<li>而最后到你手里的A4纸包，就是PV存储对象。</li>\n</ul><p>好，大概了解了这些API对象，我们接下来可以结合YAML描述和实际操作再慢慢体会。</p><h2>如何使用YAML描述PersistentVolume</h2><p>Kubernetes里有很多种类型的PV，我们先看看最容易的本机存储“<strong>HostPath</strong>”，它和Docker里挂载本地目录的 <code>-v</code> 参数非常类似，可以用它来初步认识一下PV的用法。</p><p>因为Pod会在集群的任意节点上运行，所以首先，我们要作为系统管理员在每个节点上创建一个目录，它将会作为本地存储卷挂载到Pod里。</p><p>为了省事，我就在 <code>/tmp</code> 里建立名字是 <code>host-10m-pv</code> 的目录，表示一个只有10MB容量的存储设备。</p><p>有了存储，我们就可以使用YAML来描述这个PV对象了。</p><p>不过很遗憾，你不能用 <code>kubectl create</code> 直接创建PV对象，<strong>只能用 <code>kubectl api-resources</code>、<code>kubectl explain</code> 查看PV的字段说明，手动编写PV 的YAML描述文件</strong>。</p><p>下面我给出一个YAML示例，你可以把它作为样板，编辑出自己的PV：</p><pre><code class=\"language-yaml\">apiVersion: v1\nkind: PersistentVolume\nmetadata:\n&nbsp; name: host-10m-pv\n\nspec:\n&nbsp; storageClassName: host-test\n&nbsp; accessModes:\n&nbsp; - ReadWriteOnce\n&nbsp; capacity:\n&nbsp; &nbsp; storage: 10Mi\n&nbsp; hostPath:\n&nbsp; &nbsp; path: /tmp/host-10m-pv/\n</code></pre><p>PV对象的文件头部分很简单，还是API对象的“老一套”，我就不再详细解释了，重点看它的 <code>spec</code> 部分，每个字段都很重要，描述了存储的详细信息。</p><p>“<strong>storageClassName</strong>”就是刚才说过的，对存储类型的抽象StorageClass。这个PV是我们手动管理的，名字可以任意起，这里我写的是 <code>host-test</code>，你也可以把它改成 <code>manual</code>、<code>hand-work</code> 之类的词汇。</p><p>“<strong>accessModes</strong>”定义了存储设备的访问模式，简单来说就是虚拟盘的读写权限，和Linux的文件访问模式差不多，目前Kubernetes里有3种：</p><ul>\n<li>ReadWriteOnce：存储卷可读可写，但只能被一个节点上的Pod挂载。</li>\n<li>ReadOnlyMany：存储卷只读不可写，可以被任意节点上的Pod多次挂载。</li>\n<li>ReadWriteMany：存储卷可读可写，也可以被任意节点上的Pod多次挂载。</li>\n</ul><p>你要注意，这3种访问模式限制的对象是节点而不是Pod，因为存储是系统级别的概念，不属于Pod里的进程。</p><p>显然，本地目录只能是在本机使用，所以这个PV使用了 <code>ReadWriteOnce</code>。</p><p>第三个字段“<strong>capacity</strong>”就很好理解了，表示存储设备的容量，这里我设置为10MB。</p><p>再次提醒你注意，Kubernetes里定义存储容量使用的是国际标准，我们日常习惯使用的KB/MB/GB的基数是1024，要写成Ki/Mi/Gi，一定要小心不要写错了，否则单位不一致实际容量就会对不上。</p><p>最后一个字段“<strong>hostPath</strong>”最简单，它指定了存储卷的本地路径，也就是我们在节点上创建的目录。</p><p>用这些字段把PV的类型、访问模式、容量、存储位置都描述清楚，一个存储设备就创建好了。</p><h2>如何使用YAML描述PersistentVolumeClaim</h2><p>有了PV，就表示集群里有了这么一个持久化存储可以供Pod使用，我们需要再定义PVC对象，向Kubernetes申请存储。</p><p>下面这份YAML就是一个PVC，要求使用一个5MB的存储设备，访问模式是 <code>ReadWriteOnce</code>：</p><pre><code class=\"language-yaml\">apiVersion: v1\nkind: PersistentVolumeClaim\nmetadata:\n&nbsp; name: host-5m-pvc\n\nspec:\n&nbsp; storageClassName: host-test\n&nbsp; accessModes:\n&nbsp; &nbsp; - ReadWriteOnce\n&nbsp; resources:\n&nbsp; &nbsp; requests:\n&nbsp; &nbsp; &nbsp; storage: 5Mi\n</code></pre><p>PVC的内容与PV很像，但它不表示实际的存储，而是一个“申请”或者“声明”，spec里的字段描述的是对存储的“期望状态”。</p><p>所以PVC里的 <code>storageClassName</code>、<code>accessModes</code> 和PV是一样的，<strong>但不会有字段 <code>capacity</code>，而是要用 <code>resources.request</code> 表示希望要有多大的容量</strong>。</p><p>这样，Kubernetes就会根据PVC里的描述，去找能够匹配StorageClass和容量的PV，然后把PV和PVC“绑定”在一起，实现存储的分配，和前面打电话要A4纸的过程差不多。</p><h2>如何在Kubernetes里使用PersistentVolume</h2><p>现在我们已经准备好了PV和PVC，就可以让Pod实现持久化存储了。</p><p>首先需要用 <code>kubectl apply</code> 创建PV对象：</p><pre><code class=\"language-plain\">kubectl apply -f host-path-pv.yml\n</code></pre><p>然后用 <code>kubectl get</code>  查看它的状态：</p><pre><code class=\"language-plain\">kubectl get pv\n</code></pre><p><img src=\"https://static001.geekbang.org/resource/image/5c/37/5ca80e12c71d162f5707d37bf6009c37.png?wh=1920x150\" alt=\"图片\"></p><p>从截图里我们可以看到，这个PV的容量是10MB，访问模式是RWO（ReadWriteOnce），StorageClass是我们自己定义的 <code>host-test</code>，状态显示的是 <code>Available</code>，也就是处于可用状态，可以随时分配给Pod使用。</p><p>接下来我们创建PVC，申请存储资源：</p><pre><code class=\"language-plain\">kubectl apply -f host-path-pvc.yml\nkubectl get pvc\n</code></pre><p><img src=\"https://static001.geekbang.org/resource/image/fd/1f/fd6f1cb75f5d349860928594db29a11f.png?wh=1920x367\" alt=\"图片\"></p><p>一旦PVC对象创建成功，Kubernetes就会立即通过StorageClass、resources等条件在集群里查找符合要求的PV，如果找到合适的存储对象就会把它俩“绑定”在一起。</p><p>PVC对象申请的是5MB，但现在系统里只有一个10MB的PV，没有更合适的对象，所以Kubernetes也只能把这个PV分配出去，多出的容量就算是“福利”了。</p><p>你会看到这两个对象的状态都是 <code>Bound</code>，也就是说存储申请成功，PVC的实际容量就是PV的容量10MB，而不是最初申请的容量5MB。</p><p>那么，如果我们把PVC的申请容量改大一些会怎么样呢？比如改成100MB：</p><p><img src=\"https://static001.geekbang.org/resource/image/25/0c/25241a47c63cf629b88590ba1773710c.png?wh=1920x350\" alt=\"图片\"></p><p>你会看到PVC会一直处于 <code>Pending</code> 状态，这意味着Kubernetes在系统里没有找到符合要求的存储，无法分配资源，只能等有满足要求的PV才能完成绑定。</p><h2>如何为Pod挂载PersistentVolume</h2><p>PV和PVC绑定好了，有了持久化存储，现在我们就可以为Pod挂载存储卷。用法和<a href=\"https://time.geekbang.org/column/article/533395\">第14讲</a>里差不多，先要在 <code>spec.volumes</code> 定义存储卷，然后在 <code>containers.volumeMounts</code> 挂载进容器。</p><p>不过因为我们用的是PVC，所以<strong>要在 <code>volumes</code> 里用字段 <code>persistentVolumeClaim</code> 指定PVC的名字</strong>。</p><p>下面就是Pod的YAML描述文件，把存储卷挂载到了Nginx容器的 <code>/tmp</code> 目录：</p><pre><code class=\"language-yaml\">apiVersion: v1\nkind: Pod\nmetadata:\n&nbsp; name: host-pvc-pod\n\nspec:\n&nbsp; volumes:\n&nbsp; - name: host-pvc-vol\n&nbsp; &nbsp; persistentVolumeClaim:\n&nbsp; &nbsp; &nbsp; claimName: host-5m-pvc\n\n&nbsp; containers:\n&nbsp; &nbsp; - name: ngx-pvc-pod\n&nbsp; &nbsp; &nbsp; image: nginx:alpine\n&nbsp; &nbsp; &nbsp; ports:\n&nbsp; &nbsp; &nbsp; - containerPort: 80\n&nbsp; &nbsp; &nbsp; volumeMounts:\n&nbsp; &nbsp; &nbsp; - name: host-pvc-vol\n&nbsp; &nbsp; &nbsp; &nbsp; mountPath: /tmp\n</code></pre><p>我把Pod和PVC/PV的关系画成了图（省略了字段accessModes），你可以从图里看出它们是如何联系起来的：</p><p><img src=\"https://static001.geekbang.org/resource/image/a4/d8/a4d709808a0ef729604c884c50748bd8.jpg?wh=1920x1310\" alt=\"图片\"></p><p>现在我们创建这个Pod，查看它的状态：</p><pre><code class=\"language-plain\">kubectl apply -f host-path-pod.yml\nkubectl get pod -o wide\n</code></pre><p><img src=\"https://static001.geekbang.org/resource/image/d4/9d/d4a2771c2c32597a4e5e2e60823c159d.png?wh=1846x192\" alt=\"图片\"></p><p>它被Kubernetes调到了worker节点上，那么PV是否确实挂载成功了呢？让我们用 <code>kubectl exec</code> 进入容器，执行一些命令看看：</p><p><img src=\"https://static001.geekbang.org/resource/image/c4/24/c42a618688eee98555cda33c5c1d6824.png?wh=1320x364\" alt=\"图片\"></p><p>容器的 <code>/tmp</code> 目录里生成了一个 <code>a.txt</code> 的文件，根据PV的定义，它就应该落在worker节点的磁盘上，所以我们就登录worker节点检查一下：</p><p><img src=\"https://static001.geekbang.org/resource/image/9d/c4/9dc40b80e2e4edb2d9449e2d43b02ac4.png?wh=988x242\" alt=\"图片\"></p><p>你会看到确实在worker节点的本地目录有一个 <code>a.txt</code> 的文件，再对一下时间，就可以确认是刚才在Pod里生成的文件。</p><p>因为Pod产生的数据已经通过PV存在了磁盘上，所以如果Pod删除后再重新创建，挂载存储卷时会依然使用这个目录，数据保持不变，也就实现了持久化存储。</p><p>不过还有一点小问题，因为这个PV是HostPath类型，只在本节点存储，如果Pod重建时被调度到了其他节点上，那么即使加载了本地目录，也不会是之前的存储位置，持久化功能也就失效了。</p><p>所以，HostPath类型的PV一般用来做测试，或者是用于DaemonSet这样与节点关系比较密切的应用，我们下节课再讲实现真正任意的数据持久化。</p><h2>小结</h2><p>好了，今天我们一起学习了Kubernetes里应对持久化存储的解决方案，一共有三个API对象，分别是PersistentVolume、PersistentVolumeClaim、StorageClass。它们管理的是集群里的存储资源，简单来说就是磁盘，Pod必须通过它们才能够实现数据持久化。</p><p>再小结一下今天的主要内容：</p><ol>\n<li>PersistentVolume简称为PV，是Kubernetes对存储设备的抽象，由系统管理员维护，需要描述清楚存储设备的类型、访问模式、容量等信息。</li>\n<li>PersistentVolumeClaim简称为PVC，代表Pod向系统申请存储资源，它声明对存储的要求，Kubernetes会查找最合适的PV然后绑定。</li>\n<li>StorageClass抽象特定类型的存储系统，归类分组PV对象，用来简化PV/PVC的绑定过程。</li>\n<li>HostPath是最简单的一种PV，数据存储在节点本地，速度快但不能跟随Pod迁移。</li>\n</ol><h2>课下作业</h2><p>最后是课下作业时间，给你留两个思考题：</p><ol>\n<li>HostPath类型的PV要求节点上必须有相应的目录，如果这个目录不存在（比如忘记创建了）会怎么样呢？</li>\n<li>你对使用PV/PVC/StorageClass这三个对象来分配存储的流程有什么看法？它们的抽象是好还是坏？</li>\n</ol><p>进阶高手是需要自驱的，在这最后的高级篇，非常期待看到你的思考。我们下节课再见。</p><p><img src=\"https://static001.geekbang.org/resource/image/25/41/25a1d7b3e9841c886781afb44b351341.jpg?wh=1920x1634\" alt=\"图片\"></p>","neighbors":{"left":{"article_title":"加餐｜docker-compose：单机环境下的容器编排工具","id":542952},"right":{"article_title":"25｜PersistentVolume + NFS：怎么使用网络共享存储？","id":542458}},"comments":[{"had_liked":false,"id":354818,"user_name":"ppd0705","can_delete":false,"product_type":"c1","uid":1155646,"ip_address":"北京","ucode":"EB63D4E3FD1E9A","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKotsBr2icbYNYlRSlicGUD1H7lulSTQUAiclsEz9gnG5kCW9qeDwdYtlRMXic3V6sj9UrfKLPJnQojag/132","comment_is_top":false,"comment_ctime":1660804558,"is_pvip":false,"replies":[{"id":"129084","content":"是的，没有目录，也就是相当于没有存储空间，pv就无法创建，这个是host-path的一个坑，只有自己趟过才能印象深刻。","user_name":"作者回复","user_name_real":"作者","uid":"1181974","ctime":1660813381,"ip_address":"北京","comment_id":354818,"utype":1}],"discussion_count":4,"race_medal":0,"score":"40315510222","product_id":100114501,"comment_content":"如果目录没有创建， pod 会一直pending中。 我在master节点创建了目录 但 pod 没起来，查了半天才想起来pod 启动在worker节点，需要在worker 节点创建目录","like_count":9,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":584432,"discussion_content":"是的，没有目录，也就是相当于没有存储空间，pv就无法创建，这个是host-path的一个坑，只有自己趟过才能印象深刻。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1660813381,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"北京"},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1394115,"avatar":"https://static001.geekbang.org/account/avatar/00/15/45/c3/051ffe83.jpg","nickname":"rubys_","note":"","ucode":"931AD02864126A","race_medal":5,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":591536,"discussion_content":"我的也会自动创建","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1666621275,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"广东"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1087879,"avatar":"https://static001.geekbang.org/account/avatar/00/10/99/87/98ebb20e.jpg","nickname":"dao","note":"","ucode":"4181FB270462CF","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":587756,"discussion_content":"我的也会自动创建。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1663254749,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"新加坡"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1316071,"avatar":"https://static001.geekbang.org/account/avatar/00/14/14/e7/c534fab3.jpg","nickname":"wcy","note":"","ucode":"E401E6C6D24032","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":586696,"discussion_content":"我这测下来会自动创建 ：\n先用kubectl delete -f  删除pod，pvc，pv，然后删除worker上的目录\n然后修改了pv里的路径，再apply，发现是会自动创建对应目录的\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1662443158,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"广东"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":354811,"user_name":"dao","can_delete":false,"product_type":"c1","uid":1087879,"ip_address":"","ucode":"4181FB270462CF","user_header":"https://static001.geekbang.org/account/avatar/00/10/99/87/98ebb20e.jpg","comment_is_top":false,"comment_ctime":1660800603,"is_pvip":true,"replies":[{"id":"129081","content":"Keynote，思维导图用的Xmind","user_name":"编辑回复","user_name_real":"编辑","uid":"2547771","ctime":1660809913,"ip_address":"","comment_id":354811,"utype":2}],"discussion_count":2,"race_medal":0,"score":"10250735195","product_id":100114501,"comment_content":"老师，想请问一下文稿的图是用什么软件画的？","like_count":2,"discussions":[{"author":{"id":2547771,"avatar":"https://static001.geekbang.org/account/avatar/00/26/e0/3b/8ec916b2.jpg","nickname":"多少","note":"","ucode":"0A6EF7AA6E4BB7","race_medal":0,"user_type":4,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":584411,"discussion_content":"Keynote，思维导图用的Xmind","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1660809914,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":4}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1087879,"avatar":"https://static001.geekbang.org/account/avatar/00/10/99/87/98ebb20e.jpg","nickname":"dao","note":"","ucode":"4181FB270462CF","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":584576,"discussion_content":"感谢回复。keynote ，很多人说了，也是时候去玩玩。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1660920940,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"新加坡"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":354808,"user_name":"ppd0705","can_delete":false,"product_type":"c1","uid":1155646,"ip_address":"","ucode":"EB63D4E3FD1E9A","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKotsBr2icbYNYlRSlicGUD1H7lulSTQUAiclsEz9gnG5kCW9qeDwdYtlRMXic3V6sj9UrfKLPJnQojag/132","comment_is_top":false,"comment_ctime":1660799277,"is_pvip":false,"replies":[{"id":"129082","content":"因为持久化 -&gt; 所以挑了一幅持久到墙上的画……哈哈哈哈，主要就是最近的知识点好难找合适的头图，累了，这张凑合一下","user_name":"编辑回复","user_name_real":"编辑","uid":"2547771","ctime":1660810243,"ip_address":"","comment_id":354808,"utype":2}],"discussion_count":2,"race_medal":0,"score":"10250733869","product_id":100114501,"comment_content":"跑个题： 题图是有什么关联吗？","like_count":2,"discussions":[{"author":{"id":2547771,"avatar":"https://static001.geekbang.org/account/avatar/00/26/e0/3b/8ec916b2.jpg","nickname":"多少","note":"","ucode":"0A6EF7AA6E4BB7","race_medal":0,"user_type":4,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":584413,"discussion_content":"因为持久化 -&gt; 所以挑了一幅持久到墙上的画……哈哈哈哈，主要就是最近的知识点好难找合适的头图，累了，这张凑合一下","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1660810243,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":4}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1731885,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/6d/2d/de41f9cf.jpg","nickname":"麻婆豆腐","note":"","ucode":"F371FE05D081D6","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":584458,"discussion_content":"真是机智啊","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1660830235,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"北京"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":354778,"user_name":"文古","can_delete":false,"product_type":"c1","uid":1313934,"ip_address":"北京","ucode":"9A3991AA033EB4","user_header":"https://static001.geekbang.org/account/avatar/00/14/0c/8e/8a39ee55.jpg","comment_is_top":false,"comment_ctime":1660785530,"is_pvip":true,"replies":[{"id":"129074","content":"云原生的范围太广了，可以类比一下Linux，它是一个基础，有了这个基础，你才能继续在它上面做其他的事情，一定要结合自己的实际情况。","user_name":"作者回复","user_name_real":"编辑","uid":"1181974","ctime":1660792757,"ip_address":"北京","comment_id":354778,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10250720122","product_id":100114501,"comment_content":"老师，我个人感觉比较迷茫：k8s需要学习到什么程度才能上岗？学习云原生的线路可以说一下吗？","like_count":2,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":584373,"discussion_content":"云原生的范围太广了，可以类比一下Linux，它是一个基础，有了这个基础，你才能继续在它上面做其他的事情，一定要结合自己的实际情况。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1660792757,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"北京"},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":354764,"user_name":"作草分茶","can_delete":false,"product_type":"c1","uid":1584012,"ip_address":"北京","ucode":"2F0E8F1FB92164","user_header":"https://static001.geekbang.org/account/avatar/00/18/2b/8c/a6c1ec31.jpg","comment_is_top":false,"comment_ctime":1660752595,"is_pvip":true,"replies":[{"id":"129067","content":"这种简单的不用定义也可以","user_name":"作者回复","user_name_real":"编辑","uid":"1181974","ctime":1660784397,"ip_address":"北京","comment_id":354764,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5955719891","product_id":100114501,"comment_content":"老师，怎么没有storageClass的配置呀","like_count":1,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":584351,"discussion_content":"这种简单的不用定义也可以","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1660784397,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"北京"},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":359962,"user_name":"邵涵","can_delete":false,"product_type":"c1","uid":1069135,"ip_address":"上海","ucode":"43A16551A82F2F","user_header":"","comment_is_top":false,"comment_ctime":1666091159,"is_pvip":false,"replies":[{"id":"130939","content":"这个和我试验的结果不同，我的是如果没有本地目录pv就无法创建成功，这个行为有点令人困惑。","user_name":"作者回复","user_name_real":"编辑","uid":"1181974","ctime":1666144709,"ip_address":"上海","comment_id":359962,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1666091159","product_id":100114501,"comment_content":"对于作业“HostPath 类型的 PV 要求节点上必须有相应的目录，如果这个目录不存在（比如忘记创建了）会怎么样呢？”，看评论区同学测试的结果有不同<br>我的测试结果是这样：<br>1. 用kubectl delete -f清掉本节中创建的pod、pvc、pv，手动删掉之前在节点机器上手动创建的目录&#47;tmp&#47;host-10m-pv（以及里边的a.txt文件）<br>2. 用本节这些yaml文件，再次按顺序创建pv和pvc，都能创建成功，截止此时，在节点机器上查看，还是没有目录&#47;tmp&#47;host-10m-pv的<br>3. 创建pod，也是创建成功，此时，在节点机器上，就自动创建了目录&#47;tmp&#47;host-10m-pv<br>[abc@k8s3 ~]$ ls -ld &#47;tmp&#47;host*<br>drwxr-xr-x. 2 root root 6 Oct 18 18:31 &#47;tmp&#47;host-10m-pv<br>4. 进入pod，在存储卷挂载路径&#47;tmp下创建文件a.txt，该文件也会出现在节点机器的目录&#47;tmp&#47;host-10m-pv下","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":590873,"discussion_content":"这个和我试验的结果不同，我的是如果没有本地目录pv就无法创建成功，这个行为有点令人困惑。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1666144709,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"上海"},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1069135,"avatar":"","nickname":"邵涵","note":"","ucode":"43A16551A82F2F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":590968,"discussion_content":"使用的kubeadm版本是和您示例中一样的1.23.3，相关yaml定义也是一样，不一样的地方大概就是我用的不是ubuntu，是Rocky linux 9.0，是RHEL序列的，不知道和这个有没有关系","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1666191082,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"北京"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":358703,"user_name":"tcyi","can_delete":false,"product_type":"c1","uid":2839499,"ip_address":"北京","ucode":"043F49F99D7037","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/qCv5IcP1lkO2jicrTic9KicycZXZ7WylG49GZHJCibuFQfBlJMsCpVHARuaLxIB23f3enRL4ls6EOr9wxu40K0Hl8Q/132","comment_is_top":false,"comment_ctime":1664599087,"is_pvip":true,"replies":[{"id":"130481","content":"这个应该是不会的，host path只能由管理员自己创建，可以清除目录再仔细观察一下。","user_name":"作者回复","user_name_real":"编辑","uid":"1181974","ctime":1664612735,"ip_address":"北京","comment_id":358703,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1664599087","product_id":100114501,"comment_content":"为什么我执行完老师提供的host-path-pv.yml后&#47;tmp&#47;host-10m-pv&#47;这个目录自动创建了呢？","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":589274,"discussion_content":"这个应该是不会的，host path只能由管理员自己创建，可以清除目录再仔细观察一下。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1664612735,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"北京"},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":356625,"user_name":"朱雯","can_delete":false,"product_type":"c1","uid":1035744,"ip_address":"北京","ucode":"064C45FBF6B51F","user_header":"https://static001.geekbang.org/account/avatar/00/0f/cd/e0/c85bb948.jpg","comment_is_top":false,"comment_ctime":1662455770,"is_pvip":true,"replies":[{"id":"129825","content":"这也是为什么把PV&#47;PVC放在高级篇的原因之一，它的确比较复杂，我们现在只要对它有个大概的了解就行了，真正要用好可能还是要与实际的工作去结合来学习，而且很多时候PV&#47;PVC都已经是配置好的状态，除非是系统管理员，一般我们掌握了概念，直接使用就可以。","user_name":"作者回复","user_name_real":"编辑","uid":"1181974","ctime":1662519026,"ip_address":"北京","comment_id":356625,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1662455770","product_id":100114501,"comment_content":"1. 对我来说，有点奇怪，和大家的答案是不太相同的，就是创建了pv和pvc，pod挂载之后，host-10m-pv这个文件夹自动创建了。<br>2. 这些概念相当复杂，除了生活实例理解外，并不理解系统中有什么好处。不过我想来想去，觉得storageclass是需要的.因为pv只进行硬件或者相关服务级别的抽象，pvc则只管请求，在数量比较多的pv的场景中，很容易选择到不想要的pv，比如1m请求了100m的，造成资源浪费，所以stroageclass是有必要存在的，但可以设计为一个选择器.<br><br><br>说说一些测试的操作。<br>1. 建立了一个pv 10m,一个pvc请求，5m。顺利请求到，这是和课程中一样的。<br>2. 建立两个pv,10m,两个pvc请求，都是5m，各自请求到一个，1和2的操作都使用了同同样的storageClassName。<br>3. 建立一个pv 10m，两个pvc请求，其中一个请求不到，显示为没有资源，除非再造一个，就可以被请求到。<br>4. 建了pv和pvc，先删除pv，不删除pvc，pv一直会显示terming状态，但始终不会消失，删除pvc后，删除成功。<br>感觉对这些概念有些理解，但更多的是迷糊、<br>","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":586794,"discussion_content":"这也是为什么把PV/PVC放在高级篇的原因之一，它的确比较复杂，我们现在只要对它有个大概的了解就行了，真正要用好可能还是要与实际的工作去结合来学习，而且很多时候PV/PVC都已经是配置好的状态，除非是系统管理员，一般我们掌握了概念，直接使用就可以。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1662519027,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"北京"},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":355755,"user_name":"放不下荣华富贵","can_delete":false,"product_type":"c1","uid":2053679,"ip_address":"上海","ucode":"9FE29C22B9ABE3","user_header":"https://static001.geekbang.org/account/avatar/00/1f/56/2f/4518f8e1.jpg","comment_is_top":false,"comment_ctime":1661735829,"is_pvip":true,"replies":[{"id":"129478","content":"应该是minikube的虚拟机节点，要用minikube ssh登录进去看。","user_name":"作者回复","user_name_real":"编辑","uid":"1181974","ctime":1661744162,"ip_address":"上海","comment_id":355755,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1661735829","product_id":100114501,"comment_content":"我这边依然用minikube的话，a.txt并没有创建到宿主机上，find &#47;tmp 最近创建的txt文件也没有。但是delete pod再启动，a.txt依然存在","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":585648,"discussion_content":"应该是minikube的虚拟机节点，要用minikube ssh登录进去看。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1661744162,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"上海"},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1727181,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/5a/cd/8710ed11.jpg","nickname":"大师兄","note":"","ucode":"8678D4E4DE426E","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":591678,"discussion_content":"在minikube 虚拟节点， /tmp 进去会看到host-10m-pv, cd进去就能看到a.txt","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1666762904,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"浙江"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":355248,"user_name":"小宝","can_delete":false,"product_type":"c1","uid":1402330,"ip_address":"北京","ucode":"A7223A477C60C9","user_header":"https://static001.geekbang.org/account/avatar/00/15/65/da/29fe3dde.jpg","comment_is_top":false,"comment_ctime":1661224452,"is_pvip":true,"replies":[{"id":"129251","content":"这个StorageClass是自己定义的，名字可以任意起。","user_name":"作者回复","user_name_real":"编辑","uid":"1181974","ctime":1661227736,"ip_address":"北京","comment_id":355248,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1661224452","product_id":100114501,"comment_content":"例子中的：<br>spec: storageClassName: host-test<br>这个StorageClass哪里来的，貌似例子中没定义。","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":584927,"discussion_content":"这个StorageClass是自己定义的，名字可以任意起。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1661227737,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"北京"},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":355139,"user_name":"罗耀龙@坐忘","can_delete":false,"product_type":"c1","uid":1917663,"ip_address":"北京","ucode":"3CEA258DE7F3C7","user_header":"https://static001.geekbang.org/account/avatar/00/1d/42/df/a034455d.jpg","comment_is_top":false,"comment_ctime":1661133136,"is_pvip":true,"replies":[{"id":"129231","content":"great。","user_name":"作者回复","user_name_real":"编辑","uid":"1181974","ctime":1661144515,"ip_address":"北京","comment_id":355139,"utype":1}],"discussion_count":1,"race_medal":5,"score":"1661133136","product_id":100114501,"comment_content":"茶艺师学编程：<br><br>1.HostPath 类型的 PV 要求节点上必须有相应的目录，如果这个目录不存在（比如忘记创建了）会怎么样呢？<br>pv，pvc，以及要挂上pvc的pod都能正常启动。但此时pv所指的本地目录是还没创建的<br>只有在pod里挂pvc的目录里写了数据，pv中所指的目录才会创建，在pod中所写的数据也会在里面。<br><br>要注意的是，pv在创建之后是不可变的，换句话说就是，在apply之后，修改了这个pv.yaml，再apply，这样的操作是不让通过。需要把pv删除了，再创建（apply），改动才能成功。","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":584814,"discussion_content":"great。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1661144515,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"北京"},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":354783,"user_name":"Geek_12fef6","can_delete":false,"product_type":"c1","uid":2708894,"ip_address":"北京","ucode":"3E58325318807C","user_header":"https://static001.geekbang.org/account/avatar/00/29/55/9e/a64a84ac.jpg","comment_is_top":false,"comment_ctime":1660787212,"is_pvip":false,"replies":[{"id":"129075","content":"要看具体的情况，不是绝对的。","user_name":"作者回复","user_name_real":"编辑","uid":"1181974","ctime":1660792822,"ip_address":"北京","comment_id":354783,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1660787212","product_id":100114501,"comment_content":"Pod挂载了PVC会自动创建目录，PVC绑定PV不会创建。","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":584374,"discussion_content":"要看具体的情况，不是绝对的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1660792822,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"北京"},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":354760,"user_name":"YueShi","can_delete":false,"product_type":"c1","uid":1625530,"ip_address":"上海","ucode":"8F7AFAE4641A7D","user_header":"https://static001.geekbang.org/account/avatar/00/18/cd/ba/3a348f2d.jpg","comment_is_top":false,"comment_ctime":1660749694,"is_pvip":true,"replies":[{"id":"129068","content":"<br>1.对于纯手工创建的PV，不需要专门的StorageClass对象，后面讲NFS等专门的存储设备会用到。<br><br>2. pvc是一个申请，真正使用的是volume，然后pv以volume的形式挂载进Pod，这个过程比较复杂。<br><br>3.是的，会存在这样的问题，所以存储的管理是个很麻烦事情。","user_name":"作者回复","user_name_real":"编辑","uid":"1181974","ctime":1660785106,"ip_address":"上海","comment_id":354760,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1660749694","product_id":100114501,"comment_content":"请教老师几个问题：<br><br>1、StorageClass 是我们自己定义的 host-test，这个名字叫做host-test的StorageClass不需要我们手动创建吗？如果不需要，那么它是什么样子的存在，扮演了什么角色<br><br>2、PVC 是给 Pod 使用的对象，它相当于是 Pod 的代理；是不是可以这样理解，pod只能看到pvc，也只能操作pvc。k8s把pod到pvc的操作真正的放到pv上。pv就是一个文件系统的表示形式<br><br>3、pv定义的10mi，是需要手动输入的，那么会不会存在实际的文件系统和输入的不一致的情况，这样不会产生大问题吗？例如100g的硬盘，实际可用空间为99g，但是我定义成了100g。<br><br>麻烦老师了","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":584353,"discussion_content":"\n1.对于纯手工创建的PV，不需要专门的StorageClass对象，后面讲NFS等专门的存储设备会用到。\n\n2. pvc是一个申请，真正使用的是volume，然后pv以volume的形式挂载进Pod，这个过程比较复杂。\n\n3.是的，会存在这样的问题，所以存储的管理是个很麻烦事情。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1660785106,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"上海"},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":354731,"user_name":"peter","can_delete":false,"product_type":"c1","uid":1058183,"ip_address":"北京","ucode":"261C3FC001DE2D","user_header":"https://static001.geekbang.org/account/avatar/00/10/25/87/f3a69d1b.jpg","comment_is_top":false,"comment_ctime":1660723399,"is_pvip":true,"replies":[{"id":"129060","content":"<br>1.当然可以，但只是容器的临时存储空间，一旦容器&#47;Pod销毁，空间回收，数据也就消失了。<br><br>2. docker也有volume的概念，可以看它的文档，为了避免与Kubernetes混淆就没有讲。<br><br>3.这个就不是太清楚了，因为一般都用已有的StoreClass，没有细研究过原因。","user_name":"作者回复","user_name_real":"编辑","uid":"1181974","ctime":1660727061,"ip_address":"北京","comment_id":354731,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1660723399","product_id":100114501,"comment_content":"请教老师几个问题：<br>Q1：POD里面的MySQL不能存取硬盘吗？不能的话，从MySQL读数据是从哪里读的？写入MySQL的数据又写到哪里去了？<br>Q2：不用k8s，只用docker，用docker创建的mysql可以持久化吗？<br>Q3：StorageClass怎么没有创建对象？<br>在PV和PVC的yml文件中，只是用了一个相同的StorageClass名字，就把PV和PVC关联起来了。既然StorageClass是一个对象，不需要创建吗？","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":584302,"discussion_content":"\n1.当然可以，但只是容器的临时存储空间，一旦容器/Pod销毁，空间回收，数据也就消失了。\n\n2. docker也有volume的概念，可以看它的文档，为了避免与Kubernetes混淆就没有讲。\n\n3.这个就不是太清楚了，因为一般都用已有的StoreClass，没有细研究过原因。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1660727061,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"北京"},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":354709,"user_name":"戒贪嗔痴","can_delete":false,"product_type":"c1","uid":3017168,"ip_address":"北京","ucode":"D53EA3525DBD71","user_header":"https://static001.geekbang.org/account/avatar/00/2e/09/d0/8609bddc.jpg","comment_is_top":false,"comment_ctime":1660705812,"is_pvip":true,"replies":[{"id":"129063","content":"<br>1.可以自己动手试验一下。<br><br>2.是的，概念太复杂导致学习成本高，入门比较困难。","user_name":"作者回复","user_name_real":"编辑","uid":"1181974","ctime":1660777170,"ip_address":"北京","comment_id":354709,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1660705812","product_id":100114501,"comment_content":"思考：<br>1. 我猜测应该会自动创建目录。<br>2. 这种抽象可能对k8s本身减少了复杂度，解耦，但对学习者来说可能理解概念有些困难，时间成本，这也是内卷的开始。","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":584337,"discussion_content":"\n1.可以自己动手试验一下。\n\n2.是的，概念太复杂导致学习成本高，入门比较困难。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1660777170,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"北京"},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":354694,"user_name":"Christopher","can_delete":false,"product_type":"c1","uid":1757265,"ip_address":"北京","ucode":"1AC6035DFA4ECB","user_header":"https://static001.geekbang.org/account/avatar/00/1a/d0/51/f1c9ae2d.jpg","comment_is_top":false,"comment_ctime":1660699360,"is_pvip":false,"replies":[{"id":"129038","content":"thanks.","user_name":"作者回复","user_name_real":"编辑","uid":"1181974","ctime":1660704091,"ip_address":"北京","comment_id":354694,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1660699360","product_id":100114501,"comment_content":"老师的打印纸的比喻确实好，生动形象！","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":584242,"discussion_content":"thanks.","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1660704091,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"北京"},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]}]}