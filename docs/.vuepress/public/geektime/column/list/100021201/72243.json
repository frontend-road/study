{"id":72243,"title":"03 | 迭代法：不用编程语言的自带函数，你会如何计算平方根？","content":"<p>你好，我是黄申。</p><p>今天我们来说一个和编程结合得非常紧密的数学概念。在解释这个重要的概念之前，我们先来看个有趣的小故事。</p><blockquote>\n<p>古印度国王舍罕酷爱下棋，他打算重赏国际象棋的发明人宰相西萨·班·达依尔。这位聪明的大臣指着象棋盘对国王说：“陛下，我不要别的赏赐，请您在这张棋盘的第一个小格内放入一粒麦子，在第二个小格内放入两粒，第三小格内放入四粒，以此类推，每一小格内都比前一小格加一倍的麦子，直至放满64个格子，然后将棋盘上所有的麦粒都赏给您的仆人我吧！”</p>\n</blockquote><p>国王自以为小事一桩，痛快地答应了。可是，当开始放麦粒之后，国王发现，还没放到第二十格，一袋麦子已经空了。随着，一袋又一袋的麦子被放入棋盘的格子里，国王很快看出来，即便拿来全印度的粮食，也兑现不了对达依尔的诺言。</p><p>放满这64格到底需要多少粒麦子呢？这是个相当相当大的数字，想要手动算出结果并不容易。如果你觉得自己非常厉害，可以试着拿笔算算。其实，这整个算麦粒的过程，在数学上，是有对应方法的，这也正是我们今天要讲的概念：<strong>迭代法</strong>（Iterative Method）。</p><h2>到底什么是迭代法？</h2><p><strong>迭代法，简单来说，其实就是不断地用旧的变量值，递推计算新的变量值</strong>。</p><p>我这么说可能还是有一点抽象，不容易理解。我们还回到刚才的故事。大臣要求每一格的麦子都是前一格的两倍，那么前一格里麦子的数量就是旧的变量值，我们可以先记作$X_{n-1}$；而当前格子里麦子的数量就是新的变量值，我们记作$X_{n}$。这两个变量的递推关系就是这样的：</p><!-- [[[read_end]]] --><p><img src=\"https://static001.geekbang.org/resource/image/c8/0e/c82c80cbf7d766f77422c564418cc70e.jpg?wh=1142*648\" alt=\"\"></p><p>如果你稍微有点编程经验，应该能发现，迭代法的思想，很容易通过计算机语言中的<strong>循环语言</strong>来实现。你知道，计算机本身就适合做重复性的工作，我们可以通过循环语句，让计算机重复执行迭代中的递推步骤，然后推导出变量的最终值。</p><p>那接下来，我们就用循环语句来算算，填满格子到底需要多少粒麦子。我简单用Java语言写了个程序，你可以看看。</p><pre><code>public class Lesson3_1 {\n    /**\n    * @Description: 算算舍罕王给了多少粒麦子\n    * @param grid-放到第几格\n    * @return long-麦粒的总数\n    */\n\n    public static long getNumberOfWheat(int grid) {\n     \n     long sum = 0;      // 麦粒总数\n     long numberOfWheatInGrid = 0;  // 当前格子里麦粒的数量\n     \n     numberOfWheatInGrid = 1;  // 第一个格子里麦粒的数量\n     sum += numberOfWheatInGrid;  \n     \n     for (int i = 2; i &lt;= grid; i ++) {\n      numberOfWheatInGrid *= 2;   // 当前格子里麦粒的数量是前一格的2倍\n      sum += numberOfWheatInGrid;   // 累计麦粒总数\n     }\n     \n     return sum;\n\n    }\n}\n</code></pre><p>下面是一段测试代码，它计算了到第63格时，总共需要多少麦粒。</p><pre><code>  public static void main(String[] args) {\n  System.out.println(String.format(&quot;舍罕王给了这么多粒：%d&quot;,   Lesson3_1.getNumberOfWheat(63)));\n  }\n</code></pre><p>计算的结果是9223372036854775807，多到数不清了。我大致估算了一下，一袋50斤的麦子估计有130万粒麦子，那么9223372036854775807相当于70949亿袋50斤的麦子！</p><p>这段代码有两个地方需要注意。首先，用于计算每格麦粒数的变量以及总麦粒数的变量都是Java中的long型，这是因为计算的结果实在是太大了，超出了Java int型的范围；第二，我们只计算到了第63格，这是因为计算到第64格之后，总数已经超过Java中long型的范围。</p><h2>迭代法有什么具体应用？</h2><p>看到这里，你可能大概已经理解迭代法的核心理念了。迭代法无论是在数学，还是计算机领域都有很广泛的应用。大体上，迭代法可以运用在以下几个方面：</p><ul>\n<li>\n<p><strong>求数值的精确或者近似解</strong>。典型的方法包括二分法（Bisection method）和牛顿迭代法（Newton’s method）。</p>\n</li>\n<li>\n<p><strong>在一定范围内查找目标值。</strong>典型的方法包括二分查找。</p>\n</li>\n<li>\n<p><strong>机器学习算法中的迭代</strong>。相关的算法或者模型有很多，比如K-均值算法（K-means clustering）、PageRank的马尔科夫链（Markov chain）、梯度下降法（Gradient descent）等等。迭代法之所以在机器学习中有广泛的应用，是因为<strong>很多时候机器学习的过程，就是根据已知的数据和一定的假设，求一个局部最优解</strong>。而迭代法可以帮助学习算法逐步搜索，直至发现这种解。</p>\n</li>\n</ul><p>这里，我详细讲解一下求数值的解和查找匹配记录这两个应用。</p><h3>1.求方程的精确或者近似解</h3><p>迭代法在数学和编程的应用有很多，如果只能用来计算庞大的数字，那就太“暴殄天物”了。迭代还可以帮助我们进行无穷次地逼近，求得方程的精确或者近似解。</p><p>比如说，我们想计算某个给定正整数n（n&gt;1）的平方根，如果不使用编程语言自带的函数，你会如何来实现呢？</p><p>假设有正整数n，这个平方根一定小于n本身，并且大于1。那么这个问题就转换成，在1到n之间，找一个数字等于n的平方根。</p><p>我这里采用迭代中常见的<strong>二分法</strong>。每次查看区间内的中间值，检验它是否符合标准。</p><p>举个例子，假如我们要找到10的平方根。我们需要先看1到10的中间数值，也就是11/2=5.5。5.5的平方是大于10的，所以我们要一个更小的数值，就看5.5和1之间的3.25。由于3.25的平方也是大于10的，继续查看3.25和1之间的数值，也就是2.125。这时，2.125的平方小于10了，所以看2.125和3.25之间的值，一直继续下去，直到发现某个数的平方正好是10。</p><p>我把具体的步骤画成了一张图，你可以看看。</p><p><img src=\"https://static001.geekbang.org/resource/image/89/7d/89c9c38113624288091cd65ff3d8957d.jpg?wh=1142*597\" alt=\"\"></p><p>我这里用Java代码演示一下效果，你可以结合上面的讲解，来理解迭代的过程。</p><pre><code>public class Lesson3_2 {\n \n /**\n    * @Description: 计算大于1的正整数之平方根\n    * @param n-待求的数, deltaThreshold-误差的阈值, maxTry-二分查找的最大次数\n    * @return double-平方根的解\n    */\n    public static double getSqureRoot(int n, double deltaThreshold, int maxTry) {\n     \n     if (n &lt;= 1) {\n      return -1.0;\n     }\n     \n     double min = 1.0, max = (double)n;\n     for (int i = 0; i &lt; maxTry; i++) {\n      double middle = (min + max) / 2;\n      double square = middle * middle;\n      double delta = Math.abs((square / n) - 1);\n      if (delta &lt;= deltaThreshold) {\n       return middle;\n      } else {\n       if (square &gt; n) {\n        max = middle;\n       } else {\n        min = middle;\n       }\n      }\n     }\n     \n     return -2.0;\n\n    }\n}\n</code></pre><p>这是一段测试代码，我们用它来找正整数10的平方根。如果找不到精确解，我们就返回一个近似解。</p><pre><code>public static void main(String[] args) {\n  \n  int number = 10;\n  double squareRoot = Lesson3_2.getSqureRoot(number, 0.000001, 10000);\n  if (squareRoot == -1.0) {\n   System.out.println(&quot;请输入大于1的整数&quot;);\n  } else if (squareRoot == -2.0) {\n   System.out.println(&quot;未能找到解&quot;);\n  } else {\n   System.out.println(String.format(&quot;%d的平方根是%f&quot;, number, squareRoot));\n  }\n  \n }\n</code></pre><p>这段代码的实现思想就是我前面讲的迭代过程，这里面有两个小细节我解释下。</p><p>第一，我使用了deltaThreshold来控制解的精度。虽然理论上来说，可以通过二分的无限次迭代求得精确解，但是考虑到实际应用中耗费的大量时间和计算资源，绝大部分情况下，我们并不需要完全精确的数据。</p><p>第二，我使用了maxTry来控制循环的次数。之所以没有使用while(true)循环，是为了避免死循环。虽然，在这里使用deltaThreshold，理论上是不会陷入死循环的，但是出于良好的编程习惯，我们还是尽量避免产生的可能性。</p><p>说完了二分迭代法，我这里再简单提一下牛顿迭代法。这是牛顿在17世纪提出的一种方法，用于求方程的近似解。这种方法以微分为基础，每次迭代的时候，它都会去找到比上一个值$x_{0}$更接近的方程的根，最终找到近似解。该方法及其延伸也被应用在机器学习的算法中，在之后机器学习中的应用中，我会具体介绍这个算法。</p><h3>2.查找匹配记录</h3><p><strong>二分法中的迭代式逼近，不仅可以帮我们求得近似解，还可以帮助我们查找匹配的记录。</strong>我这里用一个查字典的案例来说明。</p><p>在自然语言处理中，我们经常要处理同义词或者近义词的扩展。这时，你手头上会有一个同义词/近义词的词典。对于一个待查找的单词，我们需要在字典中先找出这个单词，以及它所对应的同义词和近义词，然后进行扩展。比如说，这个字典里有一个关于“西红柿”的词条，其同义词包括了“番茄”和“tomato”。</p><p><img src=\"https://static001.geekbang.org/resource/image/2d/5a/2de8a4c2b934a86ef5e8b915b6926d5a.jpg?wh=1142*366\" alt=\"\"></p><p>那么，在处理文章的时候，当我们看到了“西红柿”这个词，就去字典里查一把，拿出“番茄”“tomato”等等，并添加到文章中作为同义词/近义词的扩展。这样的话，用户在搜索“西红柿”这个词的时候，我们就能确保出现“番茄”或者“tomato”的文章会被返回给用户。</p><p>乍一看到这个任务的时候，你也许想到了哈希表。没错，哈希表是个好方法。不过，如果不使用哈希表，你还有什么其他方法呢？这里，我来介绍一下，用二分查找法进行字典查询的思路。</p><p>第一步，将整个字典先进行排序（假设从小到大）。二分法中很关键的前提条件是，所查找的区间是有序的。这样才能在每次折半的时候，确定被查找的对象属于左半边还是右半边。</p><p>第二步，使用二分法逐步定位到被查找的单词。每次迭代的时候，都找到被搜索区间的中间点，看看这个点上的单词，是否和待查单词一致。如果一致就返回；如果不一致，要看被查单词比中间点上的单词是小还是大。如果小，那说明被查的单词如果存在字典中，那一定在左半边；否则就在右半边。</p><p>第三步，根据第二步的判断，选择左半边或者后半边，继续迭代式地查找，直到范围缩小到单个的词。如果到最终仍然无法找到，则返回不存在。</p><p>当然，你也可以对单词进行从大到小的排序，如果是那样，在第二步的判断就需要相应地修改一下。</p><p>我把在a到g的7个字符中查找f的过程，画成了一张图，你可以看看。</p><p><img src=\"https://static001.geekbang.org/resource/image/d3/99/d39dfcea9385baef98846d2a5914a599.jpg?wh=1142*456\" alt=\"\"></p><p>这个方法的整体思路和二分法求解平方根是一致的，主要区别有两个方面：第一，每次判断是否终结迭代的条件不同。求平方根的时候，我们需要判断某个数的平方是否和输入的数据一致。而这里，我们需要判断字典中某个单词是否和待查的单词相同。第二，二分查找需要确保被搜索的空间是有序的。</p><p>我把具体的代码写出来了，你可以看一下。</p><pre><code>import java.util.Arrays;\n\npublic class Lesson3_3 {\n \n /**\n    * @Description: 查找某个单词是否在字典里出现\n    * @param dictionary-排序后的字典, wordToFind-待查的单词\n    * @return boolean-是否发现待查的单词\n    */\n    public static boolean search(String[] dictionary, String wordToFind) {\n     \n     if (dictionary == null) {\n      return false;\n     }\n     \n     if (dictionary.length == 0) {\n      return false;\n     }\n     \n     int left = 0, right = dictionary.length - 1;\n     while (left &lt;= right) {\n      int middle = (left + right) / 2;\n      if (dictionary[middle].equals(wordToFind)) {\n       return true;\n      } else {\n       if (dictionary[middle].compareTo(wordToFind) &gt; 0) {\n        right = middle - 1;\n       } else {\n        left = middle + 1;\n       }\n      }\n     }\n     \n     return false;\n\n    }\n\n}\n\n\n</code></pre><p>我测试代码首先建立了一个非常简单的字典，然后使用二分查找法在这个字典中查找单词“i”。</p><pre><code>public static void main(String[] args) {\n  \n  \n  String[] dictionary = {&quot;i&quot;, &quot;am&quot;, &quot;one&quot;, &quot;of&quot;, &quot;the&quot;, &quot;authors&quot;, &quot;in&quot;, &quot;geekbang&quot;};\n  \n  Arrays.sort(dictionary);\n\n  String wordToFind = &quot;i&quot;;\n  \n  boolean found = Lesson3_3.search(dictionary, wordToFind);\n  if (found) {\n   System.out.println(String.format(&quot;找到了单词%s&quot;, wordToFind));\n  } else {\n   System.out.println(String.format(&quot;未能找到单词%s&quot;, wordToFind));\n  }\n  \n }\n</code></pre><p>说的这两个例子，都属于迭代法中的二分法，我在第一节的时候说过，二分法其实也体现了二进制的思想。</p><h2>小结</h2><p>到这里，我想你对迭代的核心思路有了比较深入的理解。</p><p>实际上，人类并不擅长重复性的劳动，而计算机却很适合做这种事。这也是为什么，以重复为特点的迭代法在编程中有着广泛的应用。不过，日常的实际项目可能并没有体现出明显的重复性，以至于让我们很容易就忽视了迭代法的使用。所以，你要多观察问题的现象，思考其本质，看看不断更新变量值或者缩小搜索的区间范围，是否可以获得最终的解（或近似解、局部最优解），如果是，那么你就可以尝试迭代法。</p><p><img src=\"https://static001.geekbang.org/resource/image/cf/23/cff999fbe0e89b76736f41aacc944623.jpg?wh=1242*1625\" alt=\"\"></p><h2>思考题</h2><p>在你曾经做过的项目中，是否使用过迭代法？如果有，你觉得迭代法最大的特点是什么？如果还没用过，你想想看现在的项目中是否有可以使用的地方？</p><p><span class=\"orange\">欢迎在留言区交作业，并写下你今天的学习笔记。你可以点击“请朋友读”，把今天的内容分享给你的好友，和他一起精进。</span></p>","neighbors":{"left":{"article_title":"02 | 余数：原来取余操作本身就是个哈希函数","id":72163},"right":{"article_title":"04 | 数学归纳法：如何用数学归纳提升代码的运行效率？","id":73036}},"comments":[{"had_liked":false,"id":49701,"user_name":"云韵","can_delete":false,"product_type":"c1","uid":1025622,"ip_address":"","ucode":"3DE26DBAAAEDE6","user_header":"https://static001.geekbang.org/account/avatar/00/0f/a6/56/abb7bfe3.jpg","comment_is_top":true,"comment_ctime":1544753976,"is_pvip":true,"replies":[{"id":"17902","content":"我这里使用了误差占原值的百分比，来控制迭代的结束","user_name":"作者回复","user_name_real":"Sean","uid":"1275061","ctime":1544758336,"ip_address":"","comment_id":49701,"utype":1}],"discussion_count":4,"race_medal":1,"score":"9.2233722832126996e+18","product_id":100021201,"comment_content":"求一个数的平方根的那段代码中的第18行（double delta = Math.abs((square &#47; n) - 1);<br>）不太能看明白，为什么这么做？老师和专栏朋友们可以帮忙解决一下吗？谢谢。","like_count":58,"discussions":[{"author":{"id":1275061,"avatar":"https://static001.geekbang.org/account/avatar/00/13/74/b5/b68e3740.jpg","nickname":"黄申","note":"","ucode":"EE9AC074A322FF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":432731,"discussion_content":"我这里使用了误差占原值的百分比，来控制迭代的结束","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1544758336,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1319215,"avatar":"https://static001.geekbang.org/account/avatar/00/14/21/2f/b29e8af8.jpg","nickname":"轻风悠扬","note":"","ucode":"F2276CE113BED1","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":270837,"discussion_content":"如果两数完全一样那么他们相除结果为1， Math.abs((square / n) - 1)就是两数相除减一取绝对值，表示两数误差大小","likes_number":4,"is_delete":false,"is_hidden":false,"ctime":1590062546,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1462843,"avatar":"https://static001.geekbang.org/account/avatar/00/16/52/3b/f1501d79.jpg","nickname":"不工","note":"","ucode":"A8725E6D0E1765","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":402926,"discussion_content":"直接比square 和 n 大小不行吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1633964573,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1652895,"avatar":"https://static001.geekbang.org/account/avatar/00/19/38/9f/895353ab.jpg","nickname":"黄卫江","note":"","ucode":"0366942B81E7FC","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":79454,"discussion_content":"实际上用当前区间大小来控制精度也是可以的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1576075957,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":49633,"user_name":"miracle","can_delete":false,"product_type":"c1","uid":1276137,"ip_address":"","ucode":"FD7074F1062AE9","user_header":"https://static001.geekbang.org/account/avatar/00/13/78/e9/9d807269.jpg","comment_is_top":false,"comment_ctime":1544748583,"is_pvip":false,"replies":[{"id":"17870","content":"对 很好的补充","user_name":"作者回复","user_name_real":"Sean","uid":"1275061","ctime":1544750371,"ip_address":"","comment_id":49633,"utype":1}],"discussion_count":7,"race_medal":0,"score":"499760954919","product_id":100021201,"comment_content":"class Lesson3_3里面第22行改成 int middle = left + (right - left)&#47;2 会更合适一点，不然有可能会溢出","like_count":117,"discussions":[{"author":{"id":1275061,"avatar":"https://static001.geekbang.org/account/avatar/00/13/74/b5/b68e3740.jpg","nickname":"黄申","note":"","ucode":"EE9AC074A322FF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":432695,"discussion_content":"对 很好的补充","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1544750371,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1521451,"avatar":"https://static001.geekbang.org/account/avatar/00/17/37/2b/b32f1d66.jpg","nickname":"Ball","note":"","ucode":"1EE949E68D84CA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":296553,"discussion_content":"一看就是老 Leetcoder 了","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1596588412,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1055761,"avatar":"https://static001.geekbang.org/account/avatar/00/10/1c/11/86d1f82d.jpg","nickname":"fishcat","note":"","ucode":"44D3EB54C0D4BD","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":181084,"discussion_content":"此方案好像是算法界中一次溢出重大事故后的改善","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1582336939,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1116196,"avatar":"https://static001.geekbang.org/account/avatar/00/11/08/24/1d3bafaf.jpg","nickname":"Spring coming","note":"","ucode":"9E01F2D987D08B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":576083,"discussion_content":"但是这里的middle是double类型的, 这个操作是不会溢出的. 不过能条件反射到这里是很棒的.","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1655274081,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1147948,"avatar":"https://static001.geekbang.org/account/avatar/00/11/84/2c/1b0926b4.jpg","nickname":"Even","note":"","ucode":"C3555903EE9525","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":561227,"discussion_content":"leetcode刷多了的自然反应","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1649582106,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1026658,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/aa/62/78b45741.jpg","nickname":"Morty","note":"","ucode":"C2E532741F99E7","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":328227,"discussion_content":"再提升一下性能：int middle = left + (right - left)>>1","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1606109905,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":2468910,"avatar":"https://static001.geekbang.org/account/avatar/00/25/ac/2e/687deea7.jpg","nickname":"安静学习","note":"","ucode":"A3FA590F3F17FC","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1026658,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/aa/62/78b45741.jpg","nickname":"Morty","note":"","ucode":"C2E532741F99E7","race_medal":0,"user_type":1,"is_pvip":true},"discussion":{"id":405821,"discussion_content":"仿佛得再加个括号， int middle = left + ((right - left) >> 1)","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1634650878,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":328227,"ip_address":""},"score":405821,"extra":""}]}]},{"had_liked":false,"id":49757,"user_name":"Jerry银银","can_delete":false,"product_type":"c1","uid":1008404,"ip_address":"","ucode":"80DA1172A2360A","user_header":"https://static001.geekbang.org/account/avatar/00/0f/63/14/06eff9a4.jpg","comment_is_top":false,"comment_ctime":1544764360,"is_pvip":false,"replies":[{"id":"17933","content":"这是个很好的问题，确实有些地方让人容易糊涂。我这里谈谈自己的理解。<br>数学里的迭代法，最初是用来求解方程的根，通过不断的更新变量值来逼近最终的解。其思想也被用来计算数列、二分查找等等。我把这种迭代法称为广义的。<br>而数学归纳法呢，是从理论上证明某个命题成立，从而避免了迭代中的重复计算。下一篇会具体介绍。<br>而递归就是指“递推”和“回归”，它的递推和数学归纳法非常类似，因此数学归纳法中的递推可以直接翻译为递归的编程。而循环也有递推，不过通常和递归是反向的。<br>此外，人们常常把编程中的基于循环的实现叫做迭代的实现，用于和递归的实现加以区分。我个人觉得这种迭代的叫法是狭义的。广义的迭代既可以使用循环，也可以使用递归来实现，就像我第3讲的求根和二分查找等，也可以用递归来实现。","user_name":"作者回复","user_name_real":"Sean","uid":"1275061","ctime":1544771327,"ip_address":"","comment_id":49757,"utype":1}],"discussion_count":1,"race_medal":0,"score":"366616984520","product_id":100021201,"comment_content":"老师，心里有点疑惑：感觉迭代法、数学归纳法有相关性，而且跟编程里面的循环和递归都有相关，您能否简要概括一下他们之间关系和联系呢？","like_count":86,"discussions":[{"author":{"id":1275061,"avatar":"https://static001.geekbang.org/account/avatar/00/13/74/b5/b68e3740.jpg","nickname":"黄申","note":"","ucode":"EE9AC074A322FF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":432761,"discussion_content":"这是个很好的问题，确实有些地方让人容易糊涂。我这里谈谈自己的理解。\n数学里的迭代法，最初是用来求解方程的根，通过不断的更新变量值来逼近最终的解。其思想也被用来计算数列、二分查找等等。我把这种迭代法称为广义的。\n而数学归纳法呢，是从理论上证明某个命题成立，从而避免了迭代中的重复计算。下一篇会具体介绍。\n而递归就是指“递推”和“回归”，它的递推和数学归纳法非常类似，因此数学归纳法中的递推可以直接翻译为递归的编程。而循环也有递推，不过通常和递归是反向的。\n此外，人们常常把编程中的基于循环的实现叫做迭代的实现，用于和递归的实现加以区分。我个人觉得这种迭代的叫法是狭义的。广义的迭代既可以使用循环，也可以使用递归来实现，就像我第3讲的求根和二分查找等，也可以用递归来实现。","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1544771327,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":49725,"user_name":"晓嘿","can_delete":false,"product_type":"c1","uid":1341930,"ip_address":"","ucode":"4B52EF7B9A1394","user_header":"https://static001.geekbang.org/account/avatar/00/14/79/ea/8fe22e74.jpg","comment_is_top":false,"comment_ctime":1544757864,"is_pvip":false,"replies":[{"id":"17926","content":"确实从数学的角度看是一样的，但是计算机系统本身有局限性。如果left和right都是接近系统设定的最大值，那么两者相加会溢出。如果只加两者差值的一半，那么不会超过两者中较大的值，自然也不会溢出","user_name":"作者回复","user_name_real":"Sean","uid":"1275061","ctime":1544767656,"ip_address":"","comment_id":49725,"utype":1}],"discussion_count":7,"race_medal":0,"score":"237767959144","product_id":100021201,"comment_content":"老师<br>“唐瑞甫<br><br>2<br>class Lesson3_3里面第22行改成 int middle = left + (right - left)&#47;2 会更合适一点，不然有可能会溢出<br>2018-12-14<br> 作者回复<br>对 很好的补充”<br><br>这个我看着跟你写的那个是一样的啊，换算完也是(left+right)&#47;2啊，这个22行的代码会溢出吗，在什么情况下","like_count":55,"discussions":[{"author":{"id":1275061,"avatar":"https://static001.geekbang.org/account/avatar/00/13/74/b5/b68e3740.jpg","nickname":"黄申","note":"","ucode":"EE9AC074A322FF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":432744,"discussion_content":"确实从数学的角度看是一样的，但是计算机系统本身有局限性。如果left和right都是接近系统设定的最大值，那么两者相加会溢出。如果只加两者差值的一半，那么不会超过两者中较大的值，自然也不会溢出","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1544767656,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2631801,"avatar":"https://static001.geekbang.org/account/avatar/00/28/28/79/844cc398.jpg","nickname":"Ryoko","note":"","ucode":"8A41A909368F9B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":375412,"discussion_content":"可否举个溢出的实例呢？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1621616119,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1235812,"avatar":"https://static001.geekbang.org/account/avatar/00/12/db/64/f9628492.jpg","nickname":"七号叽","note":"","ucode":"0CB7E5C3297511","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2631801,"avatar":"https://static001.geekbang.org/account/avatar/00/28/28/79/844cc398.jpg","nickname":"Ryoko","note":"","ucode":"8A41A909368F9B","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":390254,"discussion_content":"假设最大值只支持到128， x=88 y=50，88+50=138>128，做两数相加时已经溢出、而后者 50+38/2=69<128无论计算过程还是最终结果都没有溢出\n不过极端一点，如果两个数都是128，那么这两种方式其实都会溢出。\n但是相对而言，直接两数相加会更容易导致溢出。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1629729406,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":375412,"ip_address":""},"score":390254,"extra":""},{"author":{"id":1014665,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/7b/89/34f2cbcc.jpg","nickname":"杨宇","note":"","ucode":"EB74DF6E269F03","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1235812,"avatar":"https://static001.geekbang.org/account/avatar/00/12/db/64/f9628492.jpg","nickname":"七号叽","note":"","ucode":"0CB7E5C3297511","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":572649,"discussion_content":"两个数都是128，128+(128-128)/2=128，并没有溢出呀？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1652882591,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":390254,"ip_address":""},"score":572649,"extra":""}]},{"author":{"id":1597883,"avatar":"https://static001.geekbang.org/account/avatar/00/18/61/bb/afaf95fb.jpg","nickname":"光照先知","note":"","ucode":"2335EFC496E5C8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":349568,"discussion_content":"真是妙啊！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1613316430,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1973441,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/1c/c1/3ddfda62.jpg","nickname":"Billions","note":"","ucode":"627F6C07F32052","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":262177,"discussion_content":"考虑很周到","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1589039174,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1914504,"avatar":"https://static001.geekbang.org/account/avatar/00/1d/36/88/20b6a6ee.jpg","nickname":"Simon","note":"","ucode":"A8A2E3E57BD029","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":216468,"discussion_content":"数学上等价，但计算过程可以指定。加法有益处的可能，改减法就没问题了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585455160,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":50106,"user_name":"Wing·三金","can_delete":false,"product_type":"c1","uid":1341402,"ip_address":"","ucode":"6B9F5822C3717F","user_header":"https://static001.geekbang.org/account/avatar/00/14/77/da/54c663f3.jpg","comment_is_top":false,"comment_ctime":1544867738,"is_pvip":false,"replies":[{"id":"18027","content":"很好的心得体会👍","user_name":"作者回复","user_name_real":"Sean","uid":"1275061","ctime":1544888673,"ip_address":"","comment_id":50106,"utype":1}],"discussion_count":1,"race_medal":0,"score":"160458657690","product_id":100021201,"comment_content":"目前正在做机器学习最优化方面的研究，所以对迭代法应用很多，几乎可以说是科研人员的必备手段了。<br><br>迭代法最困难的地方除了设置「迭代的规则」，另一个难点就是设置「迭代的终止条件」。前者专业性比较强就不多说，后者很大程度上依赖于coder的经验。因为机器学习中往往只要求足够精确的近似解，而如果一昧追求精度可能时间复杂度太大；如果以最大迭代次数为终止条件又可能得不到满意的解。因此实践中往往二者一起用，而且精度和迭代次数都需要根据一定的理论支撑去设定（不过更多的时候是从业界认可的经验出发）。","like_count":38,"discussions":[{"author":{"id":1275061,"avatar":"https://static001.geekbang.org/account/avatar/00/13/74/b5/b68e3740.jpg","nickname":"黄申","note":"","ucode":"EE9AC074A322FF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":432880,"discussion_content":"很好的心得体会👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1544888673,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":238540,"user_name":"Gy","can_delete":false,"product_type":"c1","uid":1575771,"ip_address":"","ucode":"2D887E4F4A0D67","user_header":"https://static001.geekbang.org/account/avatar/00/18/0b/5b/078ccc57.jpg","comment_is_top":false,"comment_ctime":1596191925,"is_pvip":false,"discussion_count":5,"race_medal":0,"score":"126150243509","product_id":100021201,"comment_content":"第1个格子里的小麦有1粒<br>第2个格子里的小麦有2粒<br>第3个格子里的小麦有4粒<br>第4个格子里的小麦有8粒<br>第5个格子里的小麦有16粒<br>第6个格子里的小麦有32粒<br>第7个格子里的小麦有64粒<br>第8个格子里的小麦有128粒<br>第9个格子里的小麦有256粒<br>第10个格子里的小麦有512粒<br>第11个格子里的小麦有1024粒<br>第12个格子里的小麦有2048粒<br>第13个格子里的小麦有4096粒<br>第14个格子里的小麦有8192粒<br>第15个格子里的小麦有16384粒<br>第16个格子里的小麦有32768粒<br>第17个格子里的小麦有65536粒<br>第18个格子里的小麦有131072粒<br>第19个格子里的小麦有262144粒<br>第20个格子里的小麦有524288粒<br>第21个格子里的小麦有1048576粒<br>第22个格子里的小麦有2097152粒<br>第23个格子里的小麦有4194304粒<br>第24个格子里的小麦有8388608粒<br>第25个格子里的小麦有16777216粒<br>第26个格子里的小麦有33554432粒<br>第27个格子里的小麦有67108864粒<br>第28个格子里的小麦有134217728粒<br>第29个格子里的小麦有268435456粒<br>第30个格子里的小麦有536870912粒<br>第31个格子里的小麦有1073741824粒<br>第32个格子里的小麦有2147483648粒<br>第33个格子里的小麦有4294967296粒<br>第34个格子里的小麦有8589934592粒<br>第35个格子里的小麦有17179869184粒<br>第36个格子里的小麦有34359738368粒<br>第37个格子里的小麦有68719476736粒<br>第38个格子里的小麦有137438953472粒<br>第39个格子里的小麦有274877906944粒<br>第40个格子里的小麦有549755813888粒<br>第41个格子里的小麦有1099511627776粒<br>第42个格子里的小麦有2199023255552粒<br>第43个格子里的小麦有4398046511104粒<br>第44个格子里的小麦有8796093022208粒<br>第45个格子里的小麦有17592186044416粒<br>第46个格子里的小麦有35184372088832粒<br>第47个格子里的小麦有70368744177664粒<br>第48个格子里的小麦有140737488355328粒<br>第49个格子里的小麦有281474976710656粒<br>第50个格子里的小麦有562949953421312粒<br>第51个格子里的小麦有1125899906842624粒<br>第52个格子里的小麦有2251799813685248粒<br>第53个格子里的小麦有4503599627370496粒<br>第54个格子里的小麦有9007199254740992粒<br>第55个格子里的小麦有18014398509481984粒<br>第56个格子里的小麦有36028797018963968粒<br>第57个格子里的小麦有72057594037927936粒<br>第58个格子里的小麦有144115188075855872粒<br>第59个格子里的小麦有288230376151711744粒<br>第60个格子里的小麦有576460752303423488粒<br>第61个格子里的小麦有1152921504606846976粒<br>第62个格子里的小麦有2305843009213693952粒<br>第63个格子里的小麦有4611686018427387904粒<br>第64个格子里的小麦有9223372036854775808粒<br>国王一共给了18446744073709551615粒麦子","like_count":30,"discussions":[{"author":{"id":1744376,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/9d/f8/bb4ab0d9.jpg","nickname":"Blmyun","note":"","ucode":"E9C4B814E93F28","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":375618,"discussion_content":"狼人","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1621773801,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1014665,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/7b/89/34f2cbcc.jpg","nickname":"杨宇","note":"","ucode":"EB74DF6E269F03","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":572651,"discussion_content":"棋盘炸了","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1652882810,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1583588,"avatar":"https://static001.geekbang.org/account/avatar/00/18/29/e4/ade74d94.jpg","nickname":"hejun","note":"","ucode":"DCF01B4159178F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":572408,"discussion_content":"是个狠人","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1652773681,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1081205,"avatar":"https://static001.geekbang.org/account/avatar/00/10/7f/75/551c5d6c.jpg","nickname":"CrazyCodes","note":"","ucode":"C9C0E72522EB5B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":371007,"discussion_content":"666","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1619607476,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2152030,"avatar":"","nickname":"Geek_e22985","note":"","ucode":"6FAA159EC4E822","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":312666,"discussion_content":"哈哈，有毒\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1602762795,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":55288,"user_name":"耿森","can_delete":false,"product_type":"c1","uid":1343125,"ip_address":"","ucode":"16E00EAE680E50","user_header":"https://static001.geekbang.org/account/avatar/00/14/7e/95/56224a2f.jpg","comment_is_top":false,"comment_ctime":1546090810,"is_pvip":false,"replies":[{"id":"20041","content":"厉害了，非常好的生活实例","user_name":"作者回复","user_name_real":"黄申","uid":"1275061","ctime":1546148502,"ip_address":"","comment_id":55288,"utype":1}],"discussion_count":2,"race_medal":0,"score":"121805175098","product_id":100021201,"comment_content":"在贷款还款计算中，如果贷款方式是等额本金，那么每期的还款金额是根据上一期来计算的，要用到迭代法😄","like_count":29,"discussions":[{"author":{"id":1275061,"avatar":"https://static001.geekbang.org/account/avatar/00/13/74/b5/b68e3740.jpg","nickname":"黄申","note":"","ucode":"EE9AC074A322FF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":434728,"discussion_content":"厉害了，非常好的生活实例","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1546148502,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1795371,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/65/2b/446ef7b6.jpg","nickname":"许先森","note":"","ucode":"1F42D4A6B5C6AF","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":184532,"discussion_content":"哈哈哈","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582556509,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":49931,"user_name":"柚子","can_delete":false,"product_type":"c1","uid":1002136,"ip_address":"","ucode":"7641A699DA0CFD","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/NhbRicjvf8v3K6D3v1FtOicxOciaPZQsCjCmuGCqea4vJeRVaLicKLpAcFQlcTgLvczBWY7SYDkeOtibxXj1PGl7Nug/132","comment_is_top":false,"comment_ctime":1544791467,"is_pvip":true,"replies":[{"id":"17988","content":"在编程里，递归的主要特征是方法或函数自己调用自己，因此一般结束条件放在方法内。而基于循环的迭代，如果递推是方法实现的，那确实结束条件是在方法外","user_name":"作者回复","user_name_real":"Sean","uid":"1275061","ctime":1544800009,"ip_address":"","comment_id":49931,"utype":1}],"discussion_count":3,"race_medal":0,"score":"104624006571","product_id":100021201,"comment_content":"程序论递归和迭代区别，突然有个想法，好像将结束条件写在方法里就是递归，将结束条件写在方法外就是迭代。哈哈😄","like_count":24,"discussions":[{"author":{"id":1275061,"avatar":"https://static001.geekbang.org/account/avatar/00/13/74/b5/b68e3740.jpg","nickname":"黄申","note":"","ucode":"EE9AC074A322FF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":432804,"discussion_content":"在编程里，递归的主要特征是方法或函数自己调用自己，因此一般结束条件放在方法内。而基于循环的迭代，如果递推是方法实现的，那确实结束条件是在方法外","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1544800009,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1337598,"avatar":"https://static001.geekbang.org/account/avatar/00/14/68/fe/1353168d.jpg","nickname":"岁月","note":"","ucode":"29A2A2BC3C4FE4","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":370632,"discussion_content":"最大的区别, 就是递归是从问题的结尾开始求解, 迭代是一步一步走向结尾.","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1619487674,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1652895,"avatar":"https://static001.geekbang.org/account/avatar/00/19/38/9f/895353ab.jpg","nickname":"黄卫江","note":"","ucode":"0366942B81E7FC","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":79468,"discussion_content":"我觉得他们的数学本质都是没啥区别区别，区别在于编程风格上，几乎所有的迭代都可以用递归实现所有的递归也都可以用迭代实现","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1576076431,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":49594,"user_name":"WL","can_delete":false,"product_type":"c1","uid":1173771,"ip_address":"","ucode":"6277DCD776B87E","user_header":"https://static001.geekbang.org/account/avatar/00/11/e9/0b/1171ac71.jpg","comment_is_top":false,"comment_ctime":1544744284,"is_pvip":false,"replies":[{"id":"17875","content":"对 其实是精确匹配，匹配后就可以拿到这个词对应的同义或近义词","user_name":"作者回复","user_name_real":"Sean","uid":"1275061","ctime":1544750554,"ip_address":"","comment_id":49594,"utype":1}],"discussion_count":2,"race_medal":0,"score":"78854155612","product_id":100021201,"comment_content":"没太看懂怎么用二分法查找同义词, 文章中讲的算法好像用二分法查询指定的单词, 不知道我这么理解对不对 ","like_count":17,"discussions":[{"author":{"id":1275061,"avatar":"https://static001.geekbang.org/account/avatar/00/13/74/b5/b68e3740.jpg","nickname":"黄申","note":"","ucode":"EE9AC074A322FF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":432676,"discussion_content":"对 其实是精确匹配，匹配后就可以拿到这个词对应的同义或近义词","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1544750554,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1914504,"avatar":"https://static001.geekbang.org/account/avatar/00/1d/36/88/20b6a6ee.jpg","nickname":"Simon","note":"","ucode":"A8A2E3E57BD029","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":216471,"discussion_content":"二分查找主要优点在于速度。它比线性查找快很多。当然。二分查找要求有序，而线性查找没有这个要求。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1585455538,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":78906,"user_name":"Shawn","can_delete":false,"product_type":"c1","uid":1014729,"ip_address":"","ucode":"B95D7B54465DE4","user_header":"https://static001.geekbang.org/account/avatar/00/0f/7b/c9/75c9002e.jpg","comment_is_top":false,"comment_ctime":1553276461,"is_pvip":false,"replies":[{"id":"28936","content":"确实是个申请的数字，还研究了好久背后的数学知识","user_name":"作者回复","user_name_real":"黄申","uid":"1275061","ctime":1553452813,"ip_address":"","comment_id":78906,"utype":1}],"discussion_count":4,"race_medal":0,"score":"53092884013","product_id":100021201,"comment_content":"既然提到了求平方根就不得不说一下神奇的魔术字:0x5f3759df","like_count":12,"discussions":[{"author":{"id":1275061,"avatar":"https://static001.geekbang.org/account/avatar/00/13/74/b5/b68e3740.jpg","nickname":"黄申","note":"","ucode":"EE9AC074A322FF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":444281,"discussion_content":"确实是个申请的数字，还研究了好久背后的数学知识","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1553452813,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2690172,"avatar":"","nickname":"Geek_设计模式之美","note":"","ucode":"59263416E65594","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":387365,"discussion_content":"特意搜了搜 看不出来","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1628136702,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1095682,"avatar":"https://static001.geekbang.org/account/avatar/00/10/b8/02/b2268557.jpg","nickname":"公号:阿Q看世界","note":"","ucode":"5BB20D829789D6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":206799,"discussion_content":"看不懂😅","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584445047,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1042618,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/e8/ba/6d318c08.jpg","nickname":"GS","note":"","ucode":"21C73A8CBD8093","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":203722,"discussion_content":"看不懂这个魔术数字，搜了好多篇还是看不懂，哭了~~","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584071562,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":51676,"user_name":"彩色的沙漠","can_delete":false,"product_type":"c1","uid":1116183,"ip_address":"","ucode":"19A0975A5E69EA","user_header":"https://static001.geekbang.org/account/avatar/00/11/08/17/e63e50f3.jpg","comment_is_top":false,"comment_ctime":1545222103,"is_pvip":true,"replies":[{"id":"18729","content":"是的，采用了分而治之的思想","user_name":"作者回复","user_name_real":"Sean","uid":"1275061","ctime":1545230879,"ip_address":"","comment_id":51676,"utype":1}],"discussion_count":1,"race_medal":0,"score":"53084829655","product_id":100021201,"comment_content":"快速排序，用的也是二分迭代思想，把一个数组分成两个独立部分。分别进行排序，直到两边都是有序","like_count":13,"discussions":[{"author":{"id":1275061,"avatar":"https://static001.geekbang.org/account/avatar/00/13/74/b5/b68e3740.jpg","nickname":"黄申","note":"","ucode":"EE9AC074A322FF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":433569,"discussion_content":"是的，采用了分而治之的思想","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1545230879,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":49758,"user_name":"瘦马","can_delete":false,"product_type":"c1","uid":1344216,"ip_address":"","ucode":"D1D6E62DD23652","user_header":"https://static001.geekbang.org/account/avatar/00/14/82/d8/1df27da4.jpg","comment_is_top":false,"comment_ctime":1544764602,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"44494437562","product_id":100021201,"comment_content":"迭代的基本思想就是不断用旧的变量推算出新的变量，直到获得有效结果。<br>迭代使用的步骤：<br>1、确定变量<br>2、确定变量的推导方式<br>3、控制迭代","like_count":10},{"had_liked":false,"id":50704,"user_name":"代码世界没有爱情","can_delete":false,"product_type":"c1","uid":1345493,"ip_address":"","ucode":"3AB6EE5E0B6773","user_header":"","comment_is_top":false,"comment_ctime":1545032286,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"35904770654","product_id":100021201,"comment_content":"python实现：<br>def f(x):<br>    y = x<br>    if x &gt; 1 and isinstance(x, int):<br>        flag, num = 1, 0<br>        global middle<br>        while num &lt;= 100:<br><br>            middle = (x + flag) &#47; 2<br>            if middle * middle &gt; y:<br>                x = middle<br>            elif middle * middle &lt; y:<br>                flag = middle<br>            else:<br>                print(&#39;exactly value:&#39;, middle)<br><br>                break<br>            num += 1<br>        else:<br>            print(&#39;deferenct value:&#39;, middle)<br>    elif x ==1:print(&#39;exactly value:&#39;, 1)<br>    else:<br>        print(&#39;TypeError&#39;)<br><br>f(81)","like_count":8,"discussions":[{"author":{"id":1020525,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/92/6d/becd841a.jpg","nickname":"escray","note":"","ucode":"1F4204930E47C4","race_medal":2,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":97074,"discussion_content":"被这段代码蒙住了，所以仿写了一段\n\n```\ndef getSquareRoot(n, deltaThreshold, maxTry):\n    if not isinstance(n, int):\n        print(&#39;TypeError&#39;)\n    if n <= 1:\n        return -1.0\n    min, max = 1.0, n\n    for i in range(1,maxTry):\n        middle = min + (max - min) / 2\n        square = middle * middle\n        delta = abs((square/n) - 1)\n        if delta <= deltaThreshold:\n            return middle\n        else:\n            if square > n:\n                max = middle\n            else:\n                min = middle\n    return -2.0\n\nif __name__ == &#39;__main__&#39;:\n    num = 10\n    squareRoot = getSquareRoot(num, 0.0000001, 10000)\n\n    if squareRoot == -1.0:\n        print(&#34; please input number greater 1 &#34;)\n    elif squareRoot == -2.0:\n        print(&#34; cannot find square root &#34;)\n    else:\n        print(&#34;{} square root is {}&#34;.format(num, squareRoot));\n```","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1577105389,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":149588,"user_name":"Eleven","can_delete":false,"product_type":"c1","uid":1168452,"ip_address":"","ucode":"FB4A0C8CA732BE","user_header":"https://static001.geekbang.org/account/avatar/00/11/d4/44/0ec958f4.jpg","comment_is_top":false,"comment_ctime":1573284757,"is_pvip":false,"replies":[{"id":"57569","content":"因为这里是从1开始，所以(10+1)&#47;2=5.5。之所以从1开始而不是0，是假设我们已经知道0~1之间的数，平方也是小于1，不可能到10。","user_name":"作者回复","user_name_real":"黄申","uid":"1275061","ctime":1573323533,"ip_address":"","comment_id":149588,"utype":1}],"discussion_count":1,"race_medal":0,"score":"18753153941","product_id":100021201,"comment_content":"举个例子，假如我们要找到 10 的平方根。我们需要先看 1 到 10 的中间数值，也就是 11&#47;2=5.5。5.5 的平方是大于 10 的，所以我们要一个更小的数值，就看 5.5 和 1 之间的 3.25。由于 3.25 的平方也是大于 10 的，继续查看 3.25 和 1 之间的数值，也就是 2.125。这时，2.125 的平方小于 10 了，所以看 2.125 和 3.25 之间的值，一直继续下去，直到发现某个数的平方正好是 10。<br>老师，我想问一下，这个地方为什么是从11开始二分？","like_count":4,"discussions":[{"author":{"id":1275061,"avatar":"https://static001.geekbang.org/account/avatar/00/13/74/b5/b68e3740.jpg","nickname":"黄申","note":"","ucode":"EE9AC074A322FF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":473910,"discussion_content":"因为这里是从1开始，所以(10+1)/2=5.5。之所以从1开始而不是0，是假设我们已经知道0~1之间的数，平方也是小于1，不可能到10。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573323533,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":50035,"user_name":"我不是王子","can_delete":false,"product_type":"c1","uid":1105112,"ip_address":"","ucode":"76A3E5EEC11F59","user_header":"https://static001.geekbang.org/account/avatar/00/10/dc/d8/33f11d36.jpg","comment_is_top":false,"comment_ctime":1544845766,"is_pvip":false,"replies":[{"id":"18008","content":"这是算相对误差，比如n是100，那么误差为1的时候，误差相对于n的百分比为1%。","user_name":"作者回复","user_name_real":"Sean","uid":"1275061","ctime":1544857131,"ip_address":"","comment_id":50035,"utype":1}],"discussion_count":1,"race_medal":0,"score":"18724714950","product_id":100021201,"comment_content":"老师，求平方根的第18行我也没看懂，可以详细讲解一下吗，为什么是(square &#47; n) - 1再求绝对值呢","like_count":4,"discussions":[{"author":{"id":1275061,"avatar":"https://static001.geekbang.org/account/avatar/00/13/74/b5/b68e3740.jpg","nickname":"黄申","note":"","ucode":"EE9AC074A322FF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":432853,"discussion_content":"这是算相对误差，比如n是100，那么误差为1的时候，误差相对于n的百分比为1%。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1544857131,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":49912,"user_name":"silence","can_delete":false,"product_type":"c1","uid":1078543,"ip_address":"","ucode":"3A99760438DE19","user_header":"https://static001.geekbang.org/account/avatar/00/10/75/0f/1f64a5b4.jpg","comment_is_top":false,"comment_ctime":1544788479,"is_pvip":false,"replies":[{"id":"17989","content":"递归式的迭代可以将大问题逐步简化为小问题","user_name":"作者回复","user_name_real":"Sean","uid":"1275061","ctime":1544800081,"ip_address":"","comment_id":49912,"utype":1}],"discussion_count":1,"race_medal":0,"score":"18724657663","product_id":100021201,"comment_content":"迭代就是将问题相同的部分抽离出来，把不容易解决的大问题切割成一个个小问题","like_count":4,"discussions":[{"author":{"id":1275061,"avatar":"https://static001.geekbang.org/account/avatar/00/13/74/b5/b68e3740.jpg","nickname":"黄申","note":"","ucode":"EE9AC074A322FF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":432798,"discussion_content":"递归式的迭代可以将大问题逐步简化为小问题","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1544800081,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":49670,"user_name":"指间砂的宿命","can_delete":false,"product_type":"c1","uid":1338245,"ip_address":"","ucode":"DFAE22BF3BD415","user_header":"https://static001.geekbang.org/account/avatar/00/14/6b/85/be43d09f.jpg","comment_is_top":false,"comment_ctime":1544751236,"is_pvip":false,"replies":[{"id":"17884","content":"有些数据库的索引，具体实现的时候可能会用到二分查找","user_name":"作者回复","user_name_real":"Sean","uid":"1275061","ctime":1544751759,"ip_address":"","comment_id":49670,"utype":1}],"discussion_count":1,"race_medal":0,"score":"18724620420","product_id":100021201,"comment_content":"二分法很少手写，程序中更多使用循环语句，不过对于有序数据查找二分法倒是相对高效，工作中倒是很少用，特别是有数据库的情况下指定key很多时候都是直接让数据库返回了","like_count":4,"discussions":[{"author":{"id":1275061,"avatar":"https://static001.geekbang.org/account/avatar/00/13/74/b5/b68e3740.jpg","nickname":"黄申","note":"","ucode":"EE9AC074A322FF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":432712,"discussion_content":"有些数据库的索引，具体实现的时候可能会用到二分查找","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1544751759,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":194957,"user_name":"罗耀龙@坐忘","can_delete":false,"product_type":"c1","uid":1917663,"ip_address":"","ucode":"3CEA258DE7F3C7","user_header":"https://static001.geekbang.org/account/avatar/00/1d/42/df/a034455d.jpg","comment_is_top":false,"comment_ctime":1585123791,"is_pvip":true,"replies":[{"id":"74509","content":"对，2分逼近","user_name":"作者回复","user_name_real":"黄申","uid":"1275061","ctime":1585351082,"ip_address":"","comment_id":194957,"utype":1}],"discussion_count":1,"race_medal":5,"score":"14470025679","product_id":100021201,"comment_content":"茶艺师学编程<br><br>曾经和同事玩过这样的游戏。<br><br>在试完一款茶后，估计这款茶的价钱。对方知道答案，而我来猜。<br><br>一上来，我“1280”开局。<br><br>“高了。”<br><br>那么1280&#47;2，“640”<br><br>“低了”<br><br>这样啊，但范围可以确定在区间[640，1280]，那就取个中值，“960”<br><br>“低了”<br><br>范围进一步缩小，[960，1280]，继续取中值，“1120”<br><br>“高了”<br><br>[960，1120]，“1040”<br><br>“你有完没完，低了！”<br><br>别急嘛，[1040，1120]，“1080”<br><br>“咋这么笨呢，1088！不玩啦。”<br><br>虽然看上去是很机械，迭代法就是外行人可用的有效策略。","like_count":3,"discussions":[{"author":{"id":1275061,"avatar":"https://static001.geekbang.org/account/avatar/00/13/74/b5/b68e3740.jpg","nickname":"黄申","note":"","ucode":"EE9AC074A322FF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":488938,"discussion_content":"对，2分逼近","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585351082,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":50770,"user_name":"kylin","can_delete":false,"product_type":"c1","uid":1351248,"ip_address":"","ucode":"3588B62A4F9534","user_header":"https://static001.geekbang.org/account/avatar/00/14/9e/50/21e0beca.jpg","comment_is_top":false,"comment_ctime":1545042550,"is_pvip":true,"replies":[{"id":"18294","content":"理论上两者一样。主要是当left和right都趋近于计算机系统设定的最大值时，就可能溢出，你可以画个图试试看","user_name":"作者回复","user_name_real":"Sean","uid":"1275061","ctime":1545059160,"ip_address":"","comment_id":50770,"utype":1}],"discussion_count":1,"race_medal":0,"score":"14429944438","product_id":100021201,"comment_content":"请问class3_3中的22行 int mid = (left + right) &#47; 2 为啥会可能有溢出，如果改成int mid = left + (right - left) &#47; 2 就不会溢出了呢？","like_count":3,"discussions":[{"author":{"id":1275061,"avatar":"https://static001.geekbang.org/account/avatar/00/13/74/b5/b68e3740.jpg","nickname":"黄申","note":"","ucode":"EE9AC074A322FF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":433093,"discussion_content":"理论上两者一样。主要是当left和right都趋近于计算机系统设定的最大值时，就可能溢出，你可以画个图试试看","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1545059160,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":49982,"user_name":"蒋宏伟","can_delete":false,"product_type":"c1","uid":1088541,"ip_address":"","ucode":"02226CABD5ECE7","user_header":"https://static001.geekbang.org/account/avatar/00/10/9c/1d/f0f10198.jpg","comment_is_top":false,"comment_ctime":1544806995,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"14429708883","product_id":100021201,"comment_content":"迭代法<br>\twhy<br>\t\t利用计算机适合重复计算的特点<br>\thow<br>\t\tf(0)=<br>\t\t\t确定迭代的变量<br>\t\tf(n) = g(f(n-1))<br>\t\t\t建立迭代变量之间的递推关系<br>\t\tg =<br>\t\t\t控制迭代的过程<br>\twhat<br>\t\t让计算机重复执行，推导出最终值<br>\t类比<br>\t\tfor<br>\t\twhile<br>\t应用<br>\t\t在一定范围内查找目标值(缩小)<br>\t\t\t通过二分法定位 BUG<br>\t\t\t通过二分法实现 Math.sqrt<br>\t\t重复执行递推计算结果(增加)<br>\t\t\t计算国际象棋放置的麦粒数","like_count":3},{"had_liked":false,"id":164884,"user_name":"escray","can_delete":false,"product_type":"c1","uid":1020525,"ip_address":"","ucode":"1F4204930E47C4","user_header":"https://static001.geekbang.org/account/avatar/00/0f/92/6d/becd841a.jpg","comment_is_top":false,"comment_ctime":1577105322,"is_pvip":true,"discussion_count":0,"race_medal":2,"score":"10167039914","product_id":100021201,"comment_content":"仿写了一段 Python 代码，主要是被之前留言里面的代码惊到了<br><br>```python<br>def getSquareRoot(n, deltaThreshold, maxTry):<br>    if not isinstance(n, int):<br>        print(&#39;TypeError&#39;)<br>    if n &lt;= 1:<br>        return -1.0<br>    min, max = 1.0, n<br>    for i in range(1,maxTry):<br>        middle = min + (max - min) &#47; 2<br>        square = middle * middle<br>        delta = abs((square&#47;n) - 1)<br>        if delta &lt;= deltaThreshold:<br>            return middle<br>        else:<br>            if square &gt; n:<br>                max = middle<br>            else:<br>                min = middle<br>    return -2.0<br><br>if __name__ == &#39;__main__&#39;:<br>    num = 10<br>    squareRoot = getSquareRoot(num, 0.0000001, 10000)<br><br>    if squareRoot == -1.0:<br>        print(&quot; please input number greater 1 &quot;)<br>    elif squareRoot == -2.0:<br>        print(&quot; cannot find square root &quot;)<br>    else:<br>        print(&quot;{} square root is {}&quot;.format(num, squareRoot));<br>```","like_count":2},{"had_liked":false,"id":49916,"user_name":"（+曦+）","can_delete":false,"product_type":"c1","uid":1337784,"ip_address":"","ucode":"8AE1A2F452FC35","user_header":"https://static001.geekbang.org/account/avatar/00/14/69/b8/1218d5b8.jpg","comment_is_top":false,"comment_ctime":1544789005,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10134723597","product_id":100021201,"comment_content":"7皇后问题<br>","like_count":2},{"had_liked":false,"id":244857,"user_name":"hsq","can_delete":false,"product_type":"c1","uid":2057863,"ip_address":"","ucode":"AE1BBA2A26B0A7","user_header":"https://static001.geekbang.org/account/avatar/00/1f/66/87/30198e42.jpg","comment_is_top":false,"comment_ctime":1598704626,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5893671922","product_id":100021201,"comment_content":"```python<br>rst = 0<br>for i in range(64):<br>    rst += 2**i<br>print(rst) <br>```<br>18446744073709551615","like_count":1},{"had_liked":false,"id":186976,"user_name":"喻茂","can_delete":false,"product_type":"c1","uid":1318661,"ip_address":"","ucode":"C8BD8086A17365","user_header":"https://static001.geekbang.org/account/avatar/00/14/1f/05/8a06692e.jpg","comment_is_top":false,"comment_ctime":1583981178,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5878948474","product_id":100021201,"comment_content":"php 代码<br>&#47;** <br> * @Description: 计算大于1的正整数之平方根 <br> * @param n-待求的数, deltaThreshold-误差的阈值, maxTry-二分查找的最大次数 <br> * @return float $middle 平方根的解 <br> *&#47; <br> function getSqureRoot($n,$deltaThreshold,$maxTry) {<br>\tif ($n &lt;= 1) {<br>\t\treturn -1.0;<br>\t}<br>\t<br>\t$min = 1.0;<br>\t$max = $n;<br>\tfor ($i=1;$i&lt;=$maxTry;$i++) {<br>\t\t$middle = ($min + $max) &#47; 2;<br>\t\t$squre = $middle * $middle;<br>\t\tif (abs($squre&#47;$n - 1) &lt;= $deltaThreshold) {\t&#47;&#47; 达到精度范围<br>\t\t\treturn $middle;<br>\t\t} else {<br>\t\t\tif ($squre &gt; $n) { &#47;&#47; 要求的数据肯定比$middle小<br>\t\t\t\t$max = $middle;<br>\t\t\t} else { &#47;&#47; 要求的数据肯定比$middle大<br>\t\t\t\t$min = $middle;<br>\t\t\t}<br>\t\t}<br>\t}<br>\treturn -2.0;<br> }<br> <br> $number = 10;<br> $squreRoot = getSqureRoot(10,0.00001,100);<br> if ($squreRoot == -1.0) {<br>\techo &quot;请输入大于1的整数&quot;;\t<br> } elseif ($squreRoot == -2.0) {<br>\techo &quot;未找到解&quot;; <br> } else {<br>\techo &quot;{$number}的平方根为：&quot;.getSqureRoot($number,0.00001,100);<br> }","like_count":1},{"had_liked":false,"id":182808,"user_name":"黄申","can_delete":false,"product_type":"c1","uid":1275061,"ip_address":"","ucode":"EE9AC074A322FF","user_header":"https://static001.geekbang.org/account/avatar/00/13/74/b5/b68e3740.jpg","comment_is_top":false,"comment_ctime":1582869200,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5877836496","product_id":100021201,"comment_content":"针对miracle提出的“class Lesson3_3里面第22行改成 int middle = left + (right - left)&#47;2 会更合适一点，不然有可能会溢出”，有些读者不太明白，我在《数学专栏课外加餐（二）》中有详细的解释，帮助你进行理解","like_count":1},{"had_liked":false,"id":104240,"user_name":"好大一颗TREE","can_delete":false,"product_type":"c1","uid":1181376,"ip_address":"","ucode":"B0173A5B8997CD","user_header":"https://static001.geekbang.org/account/avatar/00/12/06/c0/ee3bfb45.jpg","comment_is_top":false,"comment_ctime":1560696090,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5855663386","product_id":100021201,"comment_content":"这和定义的数据类型有关，即两个无线趋近于Int类型的数字相加会大于int类型的最大值","like_count":1},{"had_liked":false,"id":89384,"user_name":"张洋","can_delete":false,"product_type":"c1","uid":1182914,"ip_address":"","ucode":"549BE5DEEF8417","user_header":"https://static001.geekbang.org/account/avatar/00/12/0c/c2/bad34a50.jpg","comment_is_top":false,"comment_ctime":1556161929,"is_pvip":true,"replies":[{"id":"32195","content":"理解是对的。数学里的迭代法更为通用，而编程里的“迭代法”一般特指基于循环的实现。","user_name":"作者回复","user_name_real":"黄申","uid":"1275061","ctime":1556293433,"ip_address":"","comment_id":89384,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5851129225","product_id":100021201,"comment_content":"老师，之前看过递归，分治思想这些问题。所以就有复习了一下。得到一下总结：<br>迭代是一种解决问题的思想，然后递归和循环都是实现这种思想的编程手段。<br>包括分治思想也是他也是一种思想，正好迭代这种编程手段可以来实现这种思想。<br>不知道我的理解有什么问题没有，望老师指教。","like_count":1,"discussions":[{"author":{"id":1275061,"avatar":"https://static001.geekbang.org/account/avatar/00/13/74/b5/b68e3740.jpg","nickname":"黄申","note":"","ucode":"EE9AC074A322FF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":448111,"discussion_content":"理解是对的。数学里的迭代法更为通用，而编程里的“迭代法”一般特指基于循环的实现。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1556293433,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":84475,"user_name":"葛维维","can_delete":false,"product_type":"c1","uid":1160543,"ip_address":"","ucode":"A2CCAB6301168E","user_header":"https://static001.geekbang.org/account/avatar/00/11/b5/5f/a56fa0b2.jpg","comment_is_top":false,"comment_ctime":1554869020,"is_pvip":false,"replies":[{"id":"30462","content":"这个需要问编辑同仁了 😆","user_name":"作者回复","user_name_real":"黄申","uid":"1275061","ctime":1554938642,"ip_address":"","comment_id":84475,"utype":1}],"discussion_count":2,"race_medal":0,"score":"5849836316","product_id":100021201,"comment_content":"问一个额外问题，这个图是用什么工具画出来的","like_count":1,"discussions":[{"author":{"id":1275061,"avatar":"https://static001.geekbang.org/account/avatar/00/13/74/b5/b68e3740.jpg","nickname":"黄申","note":"","ucode":"EE9AC074A322FF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":446378,"discussion_content":"这个需要问编辑同仁了 😆","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1554938642,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1000473,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/44/19/17fadc62.jpg","nickname":"郭蕾","note":"","ucode":"34F4C07D1C5FE8","race_medal":0,"user_type":8,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":182514,"discussion_content":"iPad Paper\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582431172,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":62444,"user_name":"caohuan","can_delete":false,"product_type":"c1","uid":1256428,"ip_address":"","ucode":"4B092E33F3DF1E","user_header":"https://static001.geekbang.org/account/avatar/00/13/2b/ec/af6d0b10.jpg","comment_is_top":false,"comment_ctime":1548059073,"is_pvip":false,"replies":[{"id":"22151","content":"后面会介绍迭代法和递归法的关系，在我看来数学中的迭代法相对于编程中的迭代法更广义。","user_name":"作者回复","user_name_real":"黄申","uid":"1275061","ctime":1548121829,"ip_address":"","comment_id":62444,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5843026369","product_id":100021201,"comment_content":"黄老师的数学课的应用 果然好看，必须常来。<br><br>本篇所得1.迭代法的思路已经在 算法得到很多的运用，机器学习中有体现，比如老师提到的：kmean、马尔可夫链、梯度下降等;<br>2.迭代法的特点是：下一个数据 与 上一个数据有固定的关系，可以应用 方程式表达。<br><br>回答老师的问题：迭代法 在生活 和工作应用广泛，生活 中有不少例子，比如理财 余额宝 年回报 3.2%，可以计算器计算，也可以用迭代法写几行代码，计算 预测 几年后的收获，工作的年薪如果是 线性增长、厉害的为指数增长，都可以用迭代法 算出 自己的薪资收入，然后做预算;工作中的面试 不经常写 斐波那契数列，然后计算哪个数列的值，就可以用迭代法。<br><br>迭代法的特点：下一个数与上一个数存在固定的关系，可用方程式表示。<br><br>期待后面有 迭代法和 递归法的异同点。","like_count":1,"discussions":[{"author":{"id":1275061,"avatar":"https://static001.geekbang.org/account/avatar/00/13/74/b5/b68e3740.jpg","nickname":"黄申","note":"","ucode":"EE9AC074A322FF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":437217,"discussion_content":"后面会介绍迭代法和递归法的关系，在我看来数学中的迭代法相对于编程中的迭代法更广义。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1548121829,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":50214,"user_name":"猛仔","can_delete":false,"product_type":"c1","uid":1135420,"ip_address":"","ucode":"7EFC244D8726D7","user_header":"https://static001.geekbang.org/account/avatar/00/11/53/3c/c86e3052.jpg","comment_is_top":false,"comment_ctime":1544926345,"is_pvip":true,"replies":[{"id":"18041","content":"你学得什么语言？","user_name":"作者回复","user_name_real":"Sean","uid":"1275061","ctime":1544936649,"ip_address":"","comment_id":50214,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5839893641","product_id":100021201,"comment_content":"老师可以用伪代码写么，没学过JAVA..","like_count":1,"discussions":[{"author":{"id":1275061,"avatar":"https://static001.geekbang.org/account/avatar/00/13/74/b5/b68e3740.jpg","nickname":"黄申","note":"","ucode":"EE9AC074A322FF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":432917,"discussion_content":"你学得什么语言？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1544936649,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":49966,"user_name":"来碗绿豆汤","can_delete":false,"product_type":"c1","uid":1070051,"ip_address":"","ucode":"B0AB63B8D9729F","user_header":"https://static001.geekbang.org/account/avatar/00/10/53/e3/39dcfb11.jpg","comment_is_top":false,"comment_ctime":1544799512,"is_pvip":false,"replies":[{"id":"17991","content":"需要加一个以tomato为key的词条","user_name":"作者回复","user_name_real":"Sean","uid":"1275061","ctime":1544803968,"ip_address":"","comment_id":49966,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5839766808","product_id":100021201,"comment_content":"找词那个，我通过西红柿可以找到番茄和tomato,但是怎么通过tomato找到西红柿呢","like_count":1,"discussions":[{"author":{"id":1275061,"avatar":"https://static001.geekbang.org/account/avatar/00/13/74/b5/b68e3740.jpg","nickname":"黄申","note":"","ucode":"EE9AC074A322FF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":432818,"discussion_content":"需要加一个以tomato为key的词条","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1544803968,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":49933,"user_name":"NullPointer","can_delete":false,"product_type":"c1","uid":1179184,"ip_address":"","ucode":"83B7DA926A0411","user_header":"https://static001.geekbang.org/account/avatar/00/11/fe/30/c9b568c3.jpg","comment_is_top":false,"comment_ctime":1544792140,"is_pvip":false,"replies":[{"id":"17987","content":"嗯 在很多无法精确求解的方程中，古人应该是这么尝试的","user_name":"作者回复","user_name_real":"Sean","uid":"1275061","ctime":1544799774,"ip_address":"","comment_id":49933,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5839759436","product_id":100021201,"comment_content":"我想问老师，古人也是通过二分迭代来计算平方根的近似值呢？","like_count":1,"discussions":[{"author":{"id":1275061,"avatar":"https://static001.geekbang.org/account/avatar/00/13/74/b5/b68e3740.jpg","nickname":"黄申","note":"","ucode":"EE9AC074A322FF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":432806,"discussion_content":"嗯 在很多无法精确求解的方程中，古人应该是这么尝试的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1544799774,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":49654,"user_name":"liujingang","can_delete":false,"product_type":"c1","uid":1069592,"ip_address":"","ucode":"A3C781F37B729A","user_header":"https://static001.geekbang.org/account/avatar/00/10/52/18/65781a52.jpg","comment_is_top":false,"comment_ctime":1544750354,"is_pvip":false,"replies":[{"id":"17882","content":"二分即可以用循环 也可以用递归","user_name":"作者回复","user_name_real":"Sean","uid":"1275061","ctime":1544751613,"ip_address":"","comment_id":49654,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5839717650","product_id":100021201,"comment_content":"为什么是循环而不是递归呢？","like_count":1,"discussions":[{"author":{"id":1275061,"avatar":"https://static001.geekbang.org/account/avatar/00/13/74/b5/b68e3740.jpg","nickname":"黄申","note":"","ucode":"EE9AC074A322FF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":432704,"discussion_content":"二分即可以用循环 也可以用递归","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1544751613,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":49623,"user_name":"NullPointer","can_delete":false,"product_type":"c1","uid":1179184,"ip_address":"","ucode":"83B7DA926A0411","user_header":"https://static001.geekbang.org/account/avatar/00/11/fe/30/c9b568c3.jpg","comment_is_top":false,"comment_ctime":1544747635,"is_pvip":false,"replies":[{"id":"17880","content":"对 其实二分就是查到“西红柿”这条记录，然后再看其对应的同义或近义词。二分查找相当于使用哈希表里的key找到对应的entry，然后就能拿到entry里的value，也就是同义或近义词","user_name":"作者回复","user_name_real":"Sean","uid":"1275061","ctime":1544750742,"ip_address":"","comment_id":49623,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5839714931","product_id":100021201,"comment_content":"不理解同义词跟二分法查找合体的意义，老师是想表达所有的同义词都在字典里面找？不管用户给的番茄还是西红柿都能指向到西红柿这个词吗","like_count":1,"discussions":[{"author":{"id":1275061,"avatar":"https://static001.geekbang.org/account/avatar/00/13/74/b5/b68e3740.jpg","nickname":"黄申","note":"","ucode":"EE9AC074A322FF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":432688,"discussion_content":"对 其实二分就是查到“西红柿”这条记录，然后再看其对应的同义或近义词。二分查找相当于使用哈希表里的key找到对应的entry，然后就能拿到entry里的value，也就是同义或近义词","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1544750742,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":49609,"user_name":"一颗菜","can_delete":false,"product_type":"c1","uid":1242396,"ip_address":"","ucode":"5458554E264FB6","user_header":"https://static001.geekbang.org/account/avatar/00/12/f5/1c/20090248.jpg","comment_is_top":false,"comment_ctime":1544746975,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"5839714271","product_id":100021201,"comment_content":"印度国王的例子就是巴菲特的复利","like_count":1,"discussions":[{"author":{"id":1812970,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/a9/ea/5bfce6c5.jpg","nickname":"mgs2002","note":"","ucode":"F5931108BD509B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":280717,"discussion_content":"确实跟复利有点类似","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1591605149,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1907362,"avatar":"https://static001.geekbang.org/account/avatar/00/1d/1a/a2/8484b2cf.jpg","nickname":"为光","note":"","ucode":"70E21C9BA5B791","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":228361,"discussion_content":"复利效应不是巴菲特的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1586532818,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":347240,"user_name":"Geek_94905e","can_delete":false,"product_type":"c1","uid":3014658,"ip_address":"","ucode":"2C0629236B1884","user_header":"","comment_is_top":false,"comment_ctime":1653839105,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1653839105","product_id":100021201,"comment_content":"在项目中，需要找几何关系。有时会遇到欠定方程组，就会尝试用对未知数采用二分法迭代，代入方程组，对方程组是否成立进行判定，达到快速暴力求解的目的。","like_count":0},{"had_liked":false,"id":342799,"user_name":"早八很难不迟到","can_delete":false,"product_type":"c1","uid":2617586,"ip_address":"","ucode":"10116FDC6138EF","user_header":"https://static001.geekbang.org/account/avatar/00/27/f0/f2/d8624dce.jpg","comment_is_top":false,"comment_ctime":1650467189,"is_pvip":true,"replies":[{"id":"126553","content":"是的👍","user_name":"作者回复","user_name_real":"编辑","uid":"1275061","ctime":1653689423,"ip_address":"","comment_id":342799,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1650467189","product_id":100021201,"comment_content":"迭代法我第一次听说是在斐波那契数列的求解问题中，当所求的项数n很大时，用递归的方法根本得不出结果，因为有太多的重复子问题，这时候就引出了迭代的概念。<br>迭代就是利用旧值根据一定规则推演出新值的过程，对应的是给定一个初始解，不断去更新解，以寻求最优解。常见的方法有：二分法，牛顿迭代法等。","like_count":0,"discussions":[{"author":{"id":1275061,"avatar":"https://static001.geekbang.org/account/avatar/00/13/74/b5/b68e3740.jpg","nickname":"黄申","note":"","ucode":"EE9AC074A322FF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":573854,"discussion_content":"是的👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1653689423,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":313913,"user_name":"William","can_delete":false,"product_type":"c1","uid":1047143,"ip_address":"","ucode":"C7CE9F8C840BD8","user_header":"https://static001.geekbang.org/account/avatar/00/0f/fa/67/1a8d096e.jpg","comment_is_top":false,"comment_ctime":1632736076,"is_pvip":false,"replies":[{"id":"114123","content":"你好，第一个问题你的理解是对的，逐个字符比较，如果相同就往后，直到分出高低。如果两者长度不一样，到较短字符串结束时，两者还是相同的，那么长度更长的一方更大。<br>第二个问题，抱歉原文有歧义，我的意思是“不使用程序自带的‘开方’函数来求平方根”。当然绝对值也是可以自己实现的，最直接的方法就是判断绝对值符号内的数字是否小于0，如果小于那么返回输入数字乘以-1的值，否则直接返回输入数字。","user_name":"作者回复","user_name_real":"黄申","uid":"1275061","ctime":1633748965,"ip_address":"","comment_id":313913,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1632736076","product_id":100021201,"comment_content":"老师好，关于二分法中比较再从个字符串的compareTo方法，因为我没学过java，所以想了解一下，它是根据字符的 ASCII 码从左到右逐位比较的吗？<br>另外上面有提到“不使用程序自带的函数来求平方根，我看示例代码中使用了内置的求绝对值的函数，如果不用这个函数的话，绝对值要怎么求比较好？","like_count":0,"discussions":[{"author":{"id":1275061,"avatar":"https://static001.geekbang.org/account/avatar/00/13/74/b5/b68e3740.jpg","nickname":"黄申","note":"","ucode":"EE9AC074A322FF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":527517,"discussion_content":"你好，第一个问题你的理解是对的，逐个字符比较，如果相同就往后，直到分出高低。如果两者长度不一样，到较短字符串结束时，两者还是相同的，那么长度更长的一方更大。\n第二个问题，抱歉原文有歧义，我的意思是“不使用程序自带的‘开方’函数来求平方根”。当然绝对值也是可以自己实现的，最直接的方法就是判断绝对值符号内的数字是否小于0，如果小于那么返回输入数字乘以-1的值，否则直接返回输入数字。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1633748965,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":294521,"user_name":"张祈璟","can_delete":false,"product_type":"c1","uid":1400950,"ip_address":"","ucode":"DC7DDB3881633F","user_header":"https://static001.geekbang.org/account/avatar/00/15/60/76/be584def.jpg","comment_is_top":false,"comment_ctime":1621990071,"is_pvip":false,"replies":[{"id":"107118","content":"不知道方向，如果知道误差函数也是可以的，可以利用梯度下降的方式","user_name":"作者回复","user_name_real":"黄申","uid":"1275061","ctime":1622211513,"ip_address":"","comment_id":294521,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1621990071","product_id":100021201,"comment_content":"像平方根这种，它是有个方向的，不管是不是线性还是非线性，所以我们求解的时候才能知道结果大了往左还是往右才会更接近结果。如果不知道方向我们又该如何求解呢？","like_count":0,"discussions":[{"author":{"id":1275061,"avatar":"https://static001.geekbang.org/account/avatar/00/13/74/b5/b68e3740.jpg","nickname":"黄申","note":"","ucode":"EE9AC074A322FF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":520692,"discussion_content":"不知道方向，如果知道误差函数也是可以的，可以利用梯度下降的方式","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1622211513,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":292554,"user_name":"Bindy🌲","can_delete":false,"product_type":"c1","uid":1161925,"ip_address":"","ucode":"A43CE99E49E457","user_header":"https://static001.geekbang.org/account/avatar/00/11/ba/c5/bf9b71a9.jpg","comment_is_top":false,"comment_ctime":1620876268,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1620876268","product_id":100021201,"comment_content":"写了个JS版本的获取n的平方根，供大家参考<br>function getSquareRoot(n,threshold,maxTry){<br>    if( n &lt;= 1){<br>        return -1.0<br>    }<br>    let min = 1.0,<br>    max = n;<br>    for(let i = 0;i&lt; maxTry;i++){<br>        let mid = min+(max - min) &#47;2<br>        let square = mid * mid<br>        let delta = Math.abs(square&#47;n - 1)<br>        if(delta &lt;= threshold){<br>            return mid<br>        } else{<br>            if(square &gt; n){<br>                max = mid<br>            }else{<br>                min = mid<br>            }<br>        }<br>    }<br>    return -2.0<br>}<br><br>let result = getSquareRoot(10,0.000001,10000)<br>console.log(result)","like_count":0},{"had_liked":false,"id":288930,"user_name":"Jerryz","can_delete":false,"product_type":"c1","uid":1232276,"ip_address":"","ucode":"9DAEEAAE70FA00","user_header":"https://static001.geekbang.org/account/avatar/00/12/cd/94/0d44361e.jpg","comment_is_top":false,"comment_ctime":1618792140,"is_pvip":false,"replies":[{"id":"105134","content":"对的","user_name":"作者回复","user_name_real":"黄申","uid":"1275061","ctime":1619304940,"ip_address":"","comment_id":288930,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1618792140","product_id":100021201,"comment_content":"这里用了二分迭代法求解算数平方根，二分查找算法的时间复杂度同样也是用Log2N表示的。","like_count":0,"discussions":[{"author":{"id":1275061,"avatar":"https://static001.geekbang.org/account/avatar/00/13/74/b5/b68e3740.jpg","nickname":"黄申","note":"","ucode":"EE9AC074A322FF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":518772,"discussion_content":"对的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1619304940,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":284959,"user_name":"A君","can_delete":false,"product_type":"c1","uid":1940105,"ip_address":"","ucode":"FE96F089C2312C","user_header":"https://static001.geekbang.org/account/avatar/00/1d/9a/89/babe8b52.jpg","comment_is_top":false,"comment_ctime":1616561912,"is_pvip":true,"replies":[{"id":"103567","content":"是的","user_name":"作者回复","user_name_real":"黄申","uid":"1275061","ctime":1616791563,"ip_address":"","comment_id":284959,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1616561912","product_id":100021201,"comment_content":"迭代法应用于在一个范围内找到一个目标或找到接近目标的替代值。出于时间复杂度上考虑，推荐用二分法来查找，而二分查找的前提是这个范围内的数是有序排列的。","like_count":0,"discussions":[{"author":{"id":1275061,"avatar":"https://static001.geekbang.org/account/avatar/00/13/74/b5/b68e3740.jpg","nickname":"黄申","note":"","ucode":"EE9AC074A322FF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":517525,"discussion_content":"是的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1616791563,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":268933,"user_name":"Trent","can_delete":false,"product_type":"c1","uid":1113467,"ip_address":"","ucode":"779CF5EA0991E1","user_header":"https://static001.geekbang.org/account/avatar/00/10/fd/7b/89bc309e.jpg","comment_is_top":false,"comment_ctime":1608437078,"is_pvip":true,"replies":[{"id":"97575","content":"可以将整个词条设计为一个对象，在搜索的时候只针对对象的内容搜索，找到之后取出这个对象中所对应的词条解释等信息就行了。在后面的前缀树介绍中，我会具体给出代码","user_name":"作者回复","user_name_real":"黄申","uid":"1275061","ctime":1608506061,"ip_address":"","comment_id":268933,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1608437078","product_id":100021201,"comment_content":"老师，对于同义词的这个例子，使用二分发查找只能快速的查找到原词，和其相关的同义词怎么处理呢，整个同义词的词条怎么存储呢，没太明白。","like_count":0,"discussions":[{"author":{"id":1275061,"avatar":"https://static001.geekbang.org/account/avatar/00/13/74/b5/b68e3740.jpg","nickname":"黄申","note":"","ucode":"EE9AC074A322FF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":512090,"discussion_content":"可以将整个词条设计为一个对象，在搜索的时候只针对对象的内容搜索，找到之后取出这个对象中所对应的词条解释等信息就行了。在后面的前缀树介绍中，我会具体给出代码","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1608506061,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":267869,"user_name":"McKee Chen","can_delete":false,"product_type":"c1","uid":2037505,"ip_address":"","ucode":"F74B76542FAB65","user_header":"https://static001.geekbang.org/account/avatar/00/1f/17/01/1c5309a3.jpg","comment_is_top":false,"comment_ctime":1607957474,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1607957474","product_id":100021201,"comment_content":"使用python对习题进行编程实现<br><br>#使用二分法求10的开平方根,精度为0.0000000001<br>x1 = 1 #左区间为1<br>x2 = 10 #右区间为2<br>x = (x1 + x2)&#47;2<br>while abs(x-10**0.5) &gt; 0.0000000001:<br>    if x**2 &gt;= 10:<br>        x2 = x<br>        x = (x1 + x2)&#47;2<br>    else:<br>        x1 = x<br>        x = (x1 + x2)&#47;2<br>print(x)<br><br>#输出<br>3.162277660172549<br><br>#使用二分法求象棋上放麦粒数量<br>n = 0#初始化麦粒数量<br>s = 0<br>for i in range(0,64):<br>    n = 2**i<br>    s += n<br>    print(&#39;第&#39;,i+1,&#39;个格子放&#39;,n,&#39;个麦粒&#39;)<br>    print(&#39;一共&#39;,s,&#39;个麦粒&#39;)<br>    print(&#39;----------------------------------------------&#39;)<br><br>#输出<br>第 64 个格子放 9223372036854775808 个麦粒<br>一共 18446744073709551615 个麦粒","like_count":0},{"had_liked":false,"id":265836,"user_name":"从容","can_delete":false,"product_type":"c1","uid":2353640,"ip_address":"","ucode":"A20F2A2BB2DA54","user_header":"https://static001.geekbang.org/account/avatar/00/23/e9/e8/de194220.jpg","comment_is_top":false,"comment_ctime":1607048642,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1607048642","product_id":100021201,"comment_content":"&quot;&quot;&quot;<br>def sum_num(b):<br>    y=[]  # 棋盘上所有麦子的集合<br>    for i in range(65):   #放满整个棋盘64个格子<br>        x=b*2     #每次往棋盘上放麦子本身的倍数<br>        y.append(x)   #将每次放的麦子添加到所有麦子集合里<br>        b+=b   #每一次放完麦子增加一倍<br>    return sum(y)  #函数返回所有麦子集合的总和<br><br>if __name__ == &quot;__main__&quot;:<br>    b=1 #麦子<br>    print(sum_num(b)) <br>&quot;&quot;&quot;<br>为什么我算出来的跟大家的对不上呢？73786976294838206462","like_count":0},{"had_liked":false,"id":264917,"user_name":"凹凸鸿","can_delete":false,"product_type":"c1","uid":1915334,"ip_address":"","ucode":"A458BAEBF314B2","user_header":"https://static001.geekbang.org/account/avatar/00/1d/39/c6/1e12f271.jpg","comment_is_top":false,"comment_ctime":1606706919,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1606706919","product_id":100021201,"comment_content":"精调与微调","like_count":0},{"had_liked":false,"id":248473,"user_name":"汝林外史","can_delete":false,"product_type":"c1","uid":1188906,"ip_address":"","ucode":"3C66C0F0537A99","user_header":"https://static001.geekbang.org/account/avatar/00/12/24/2a/33441e2b.jpg","comment_is_top":false,"comment_ctime":1600174649,"is_pvip":false,"replies":[{"id":"92030","content":"对，二分未必是最优解法������","user_name":"作者回复","user_name_real":"黄申","uid":"1275061","ctime":1601779669,"ip_address":"","comment_id":248473,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1600174649","product_id":100021201,"comment_content":"单词的例子还是角色散列表更好，有点强行二分法了，哈哈。","like_count":0,"discussions":[{"author":{"id":1275061,"avatar":"https://static001.geekbang.org/account/avatar/00/13/74/b5/b68e3740.jpg","nickname":"黄申","note":"","ucode":"EE9AC074A322FF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":505659,"discussion_content":"对，二分未必是最优解法������","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1601779669,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":248042,"user_name":"hello","can_delete":false,"product_type":"c1","uid":2170621,"ip_address":"","ucode":"5E2F538A478BF3","user_header":"https://static001.geekbang.org/account/avatar/00/21/1e/fd/578afd29.jpg","comment_is_top":false,"comment_ctime":1599989700,"is_pvip":false,"replies":[{"id":"91177","content":"很好的总结","user_name":"作者回复","user_name_real":"黄申","uid":"1275061","ctime":1600045082,"ip_address":"","comment_id":248042,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1599989700","product_id":100021201,"comment_content":"迭代法在程序中理解是平时循环，但是循环根据业务场景的不同有不一样的实现方法。像计算还款计划，跳出条件是明确的时间跨度。但针对一组有序数列进行迭代则也会用到二分法之类的方式。这是在平时工作中很长用的方法。数学源于生活，用于生活。","like_count":0,"discussions":[{"author":{"id":1275061,"avatar":"https://static001.geekbang.org/account/avatar/00/13/74/b5/b68e3740.jpg","nickname":"黄申","note":"","ucode":"EE9AC074A322FF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":505554,"discussion_content":"很好的总结","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1600045082,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":247194,"user_name":"朱先森","can_delete":false,"product_type":"c1","uid":2169978,"ip_address":"","ucode":"93A96F8B4730D6","user_header":"https://static001.geekbang.org/account/avatar/00/21/1c/7a/5c000db1.jpg","comment_is_top":false,"comment_ctime":1599630406,"is_pvip":false,"replies":[{"id":"90891","content":"对，很实在的例子啊������","user_name":"作者回复","user_name_real":"黄申","uid":"1275061","ctime":1599713096,"ip_address":"","comment_id":247194,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1599630406","product_id":100021201,"comment_content":"我感觉到了金融的味道，复利性","like_count":0,"discussions":[{"author":{"id":1275061,"avatar":"https://static001.geekbang.org/account/avatar/00/13/74/b5/b68e3740.jpg","nickname":"黄申","note":"","ucode":"EE9AC074A322FF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":505338,"discussion_content":"对，很实在的例子啊������","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1599713096,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":246476,"user_name":"zlove","can_delete":false,"product_type":"c1","uid":2038228,"ip_address":"","ucode":"75DA32F3D5C800","user_header":"https://static001.geekbang.org/account/avatar/00/1f/19/d4/422c5acb.jpg","comment_is_top":false,"comment_ctime":1599367552,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1599367552","product_id":100021201,"comment_content":"import java.util.Arrays;<br><br>&#47;**<br> * @author:zl<br> * @desc:迭代法思想查找某个单词是否在字典表里出现<br> * @create 2020--09--06 11:40<br> * @modified By:<br> *&#47;<br>public class Lesson3_3 {<br>    public static boolean search(String[] dictionary, String wordToFind) {<br>        if (dictionary == null | dictionary.length == 0) {<br>            return false;<br>        }<br>        int left = 0, right = dictionary.length - 1;<br>        while (left &lt;= right) {<br>            int middle = left + (right - left) &#47; 2;&#47;&#47;这里注意溢出<br>            if (dictionary[middle].equals(wordToFind)) {<br>                return true;<br>            } else {<br>                if (dictionary[middle].compareTo(wordToFind) &gt; 0) {&#47;&#47;比较位置是否相等<br>                    right = middle - 1;<br>                } else {<br>                    left = middle + 1;<br>                }<br>            }<br>        }<br>        return false;<br>    }<br><br>    public static void main(String[] args) {<br>        String[] dictionary = {&quot;i&quot;, &quot;am&quot;, &quot;one&quot;, &quot;of&quot;, &quot;the&quot;, &quot;authors&quot;, &quot;in&quot;, &quot;geekbang&quot;};<br>        Arrays.sort(dictionary);<br>        String wordToFind = &quot;i&quot;;<br>        boolean searchFound = search(dictionary, wordToFind);<br>        if (searchFound) {<br>            System.out.println(String.format(&quot;找到了单词%s&quot;, wordToFind));<br>        } else {<br>            System.out.println(String.format(&quot;未找到了单词%s&quot;, wordToFind));<br>        }<br>    }<br>}<br>","like_count":0},{"had_liked":false,"id":228135,"user_name":"阳仔","can_delete":false,"product_type":"c1","uid":1046920,"ip_address":"","ucode":"79F73D85EDF3E2","user_header":"https://static001.geekbang.org/account/avatar/00/0f/f9/88/cdda9e6f.jpg","comment_is_top":false,"comment_ctime":1592564845,"is_pvip":false,"replies":[{"id":"84219","content":"原理上就是如此","user_name":"作者回复","user_name_real":"黄申","uid":"1275061","ctime":1592669636,"ip_address":"","comment_id":228135,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1592564845","product_id":100021201,"comment_content":"迭代法求解问题，其实是通过递推公式从旧的状态推导出新的状态，而一般初始状态都是已知的，然后可以通过循环语句就可以很快写出代码，递推跟递归的方向正好相反","like_count":0,"discussions":[{"author":{"id":1275061,"avatar":"https://static001.geekbang.org/account/avatar/00/13/74/b5/b68e3740.jpg","nickname":"黄申","note":"","ucode":"EE9AC074A322FF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":498932,"discussion_content":"原理上就是如此","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1592669636,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":224966,"user_name":"mgs2002","can_delete":false,"product_type":"c1","uid":1812970,"ip_address":"","ucode":"F5931108BD509B","user_header":"https://static001.geekbang.org/account/avatar/00/1b/a9/ea/5bfce6c5.jpg","comment_is_top":false,"comment_ctime":1591604703,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1591604703","product_id":100021201,"comment_content":"项目里面使用过递归、取余，确实迭代用的相对较少","like_count":0},{"had_liked":false,"id":218389,"user_name":"peace","can_delete":false,"product_type":"c1","uid":2006148,"ip_address":"","ucode":"8629F9BFDC253E","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83erWrGjD40JI6WTIaSLfZ9icTyuuLEpPwCicr3Fv2icy8mibHBj5icMpIGxp9UD8rLIQib1RLpXIrwKaQxOA/132","comment_is_top":false,"comment_ctime":1589794228,"is_pvip":false,"replies":[{"id":"81369","content":"是的，后面也会详细介绍","user_name":"作者回复","user_name_real":"黄申","uid":"1275061","ctime":1590280205,"ip_address":"","comment_id":218389,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1589794228","product_id":100021201,"comment_content":"迭代法据我所知有两个应用场景<br>1.二分法查找某个数的平方根<br>2.二分查找有序数中的某个数字","like_count":0,"discussions":[{"author":{"id":1275061,"avatar":"https://static001.geekbang.org/account/avatar/00/13/74/b5/b68e3740.jpg","nickname":"黄申","note":"","ucode":"EE9AC074A322FF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":495446,"discussion_content":"是的，后面也会详细介绍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1590280205,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":210305,"user_name":"Wyw","can_delete":false,"product_type":"c1","uid":1800819,"ip_address":"","ucode":"87068C9F4CB7D7","user_header":"https://static001.geekbang.org/account/avatar/00/1b/7a/73/e4575e91.jpg","comment_is_top":false,"comment_ctime":1587717655,"is_pvip":false,"replies":[{"id":"78386","content":"单词的大小，其实就是字符串的大小。字符串大小的比较，不同的编程语言可能稍有不同，但大体上都是从字符串的头开始，逐个字符比较，对于第一个不同的字符，按照ASCII码对应的数值来比大小，如果前缀都相同，那么长的字符串更“大”","user_name":"作者回复","user_name_real":"黄申","uid":"1275061","ctime":1587744417,"ip_address":"","comment_id":210305,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1587717655","product_id":100021201,"comment_content":"不是很懂,对于字典匹配怎么使用二分法查找的,对于单词怎么区分大小","like_count":0,"discussions":[{"author":{"id":1275061,"avatar":"https://static001.geekbang.org/account/avatar/00/13/74/b5/b68e3740.jpg","nickname":"黄申","note":"","ucode":"EE9AC074A322FF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":492998,"discussion_content":"单词的大小，其实就是字符串的大小。字符串大小的比较，不同的编程语言可能稍有不同，但大体上都是从字符串的头开始，逐个字符比较，对于第一个不同的字符，按照ASCII码对应的数值来比大小，如果前缀都相同，那么长的字符串更“大”","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1587744417,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":198527,"user_name":"Simon","can_delete":false,"product_type":"c1","uid":1914504,"ip_address":"","ucode":"A8A2E3E57BD029","user_header":"https://static001.geekbang.org/account/avatar/00/1d/36/88/20b6a6ee.jpg","comment_is_top":false,"comment_ctime":1585455290,"is_pvip":true,"replies":[{"id":"75044","content":"从编程者的角度来考虑，以防万一是好习惯😆","user_name":"作者回复","user_name_real":"黄申","uid":"1275061","ctime":1585629273,"ip_address":"","comment_id":198527,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1585455290","product_id":100021201,"comment_content":"“我使用了 maxTry 来控制循环的次数。之所以没有使用 while(true) 循环，是为了避免死循环。虽然，在这里使用 deltaThreshold，理论上是不会陷入死循环的，但是出于良好的编程习惯，我们还是尽量避免产生的可能性” 这个想法很好！<br>我最先：<br>def get_sqrt(n):<br>    if not isinstance(n, int):<br>        return None<br>    <br>    if n &lt; 0:<br>        return None<br>    <br>    if n == 0:<br>        return 0<br>    <br>    low, high = 1, n<br>    threshold = 0.000001<br>    while True:<br>        mid = (low + high) &#47; 2<br>        square = mid**2<br>        if abs(square - n) &lt;= threshold:<br>            return mid<br>        elif square &lt; n:<br>            low = mid<br>        else:<br>            high = mid<br>        <br>    return (low + high) &#47; 2<br><br>粗略看，while True，确实有死循环的嫌疑。","like_count":0,"discussions":[{"author":{"id":1275061,"avatar":"https://static001.geekbang.org/account/avatar/00/13/74/b5/b68e3740.jpg","nickname":"黄申","note":"","ucode":"EE9AC074A322FF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":489719,"discussion_content":"从编程者的角度来考虑，以防万一是好习惯😆","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585629273,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":194458,"user_name":"海晏","can_delete":false,"product_type":"c1","uid":1915554,"ip_address":"","ucode":"38E998D2036115","user_header":"https://static001.geekbang.org/account/avatar/00/1d/3a/a2/d9f736c6.jpg","comment_is_top":false,"comment_ctime":1585060603,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1585060603","product_id":100021201,"comment_content":"求算数平方根用Python练习：<br>def square_root(number):<br>    left=0<br>    right=number<br>    i=0<br><br>    while i in range(100):<br>        result=(left+right)&#47;2<br>        if result*result&gt;number:<br>            right=result<br>            i+=1<br>        elif result*result&lt;number:<br>            left=result<br>            i+=1<br>        else:<br>            break<br>    print(number,&quot;的算术平方根为&quot;,result)<br><br>print(square_root(10))     ","like_count":0},{"had_liked":false,"id":191770,"user_name":"乐达","can_delete":false,"product_type":"c1","uid":1223158,"ip_address":"","ucode":"4A1CCA0633DB45","user_header":"https://static001.geekbang.org/account/avatar/00/12/a9/f6/1cdb3d52.jpg","comment_is_top":false,"comment_ctime":1584795642,"is_pvip":false,"replies":[{"id":"75066","content":"剥洋葱是很好的总结","user_name":"作者回复","user_name_real":"黄申","uid":"1275061","ctime":1585630862,"ip_address":"","comment_id":191770,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1584795642","product_id":100021201,"comment_content":"迭代法目前用到的较少，觉得应该理解成往深度求解，需要一层一层才能剥开里面的结果，就像洋葱一样。目前的项目业务逻辑较平面化，彼此之间关联性较少，","like_count":0,"discussions":[{"author":{"id":1275061,"avatar":"https://static001.geekbang.org/account/avatar/00/13/74/b5/b68e3740.jpg","nickname":"黄申","note":"","ucode":"EE9AC074A322FF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":488253,"discussion_content":"剥洋葱是很好的总结","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585630862,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":190737,"user_name":"cJeffQ.Q","can_delete":false,"product_type":"c1","uid":1923687,"ip_address":"","ucode":"0D490724BA56AF","user_header":"https://static001.geekbang.org/account/avatar/00/1d/5a/67/5ab89c0d.jpg","comment_is_top":false,"comment_ctime":1584688651,"is_pvip":false,"replies":[{"id":"75080","content":"通过字符串的排序，然后二分查找就能找到精确匹配的单词，再返回同义词或者释义等等","user_name":"作者回复","user_name_real":"黄申","uid":"1275061","ctime":1585632859,"ip_address":"","comment_id":190737,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1584688651","product_id":100021201,"comment_content":"这个二分法精确查找同义词，排序的话一般是怎么做的？","like_count":0,"discussions":[{"author":{"id":1275061,"avatar":"https://static001.geekbang.org/account/avatar/00/13/74/b5/b68e3740.jpg","nickname":"黄申","note":"","ucode":"EE9AC074A322FF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":488049,"discussion_content":"通过字符串的排序，然后二分查找就能找到精确匹配的单词，再返回同义词或者释义等等","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585632859,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":187342,"user_name":"Zeal","can_delete":false,"product_type":"c1","uid":1898857,"ip_address":"","ucode":"327D516A1D0F0E","user_header":"https://static001.geekbang.org/account/avatar/00/1c/f9/69/384e33e6.jpg","comment_is_top":false,"comment_ctime":1584087764,"is_pvip":false,"replies":[{"id":"72339","content":"是的","user_name":"作者回复","user_name_real":"黄申","uid":"1275061","ctime":1584128664,"ip_address":"","comment_id":187342,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1584087764","product_id":100021201,"comment_content":"一棵树，种子是迭代的起点，不断的分杈是迭代的继续。","like_count":0,"discussions":[{"author":{"id":1275061,"avatar":"https://static001.geekbang.org/account/avatar/00/13/74/b5/b68e3740.jpg","nickname":"黄申","note":"","ucode":"EE9AC074A322FF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":487082,"discussion_content":"是的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584128664,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":187253,"user_name":"GS","can_delete":false,"product_type":"c1","uid":1042618,"ip_address":"","ucode":"21C73A8CBD8093","user_header":"https://static001.geekbang.org/account/avatar/00/0f/e8/ba/6d318c08.jpg","comment_is_top":false,"comment_ctime":1584069797,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1584069797","product_id":100021201,"comment_content":"def getNumberOfWheat(grid):<br>    sum = 0 # 麦粒总数 <br>    numberOfWheatInGrid = 0 # 当前格子里麦粒的数量 <br>    numberOfWheatInGrid = 1 # 第一个格子里麦粒的数量 <br>    sum += numberOfWheatInGrid; <br>    for i in range(grid-1) :<br>        numberOfWheatInGrid *= 2; # 当前格子里麦粒的数量是前一格的2倍 <br>        sum += numberOfWheatInGrid; # 累计麦粒总数 <br>    return sum; <br><br>getNumberOfWheat(64)","like_count":0},{"had_liked":false,"id":186984,"user_name":"喻茂","can_delete":false,"product_type":"c1","uid":1318661,"ip_address":"","ucode":"C8BD8086A17365","user_header":"https://static001.geekbang.org/account/avatar/00/14/1f/05/8a06692e.jpg","comment_is_top":false,"comment_ctime":1583983634,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1583983634","product_id":100021201,"comment_content":"php 脚本<br>&lt;?php<br>&#47;**<br> * 在字典中查找单词<br> * $dictionary array 字典<br> * $wordToFind 需要查找的单词<br> *&#47;<br>function search($dictionary,$wordToFind) {<br>\tif (empty($dictionary) || !is_array($dictionary)) {<br>\t\treturn false;<br>\t}<br>\t<br>\t$left = 0;<br>\t$right = count($dictionary) - 1;<br>\twhile ($left &lt;= $right) {<br>\t\t$middle = intval(($left + $right)&#47;2);<br>\t\tif (strcmp($dictionary[$middle] ,$wordToFind) == 0) {<br>\t\t\treturn true; &#47;&#47; 找到<br>\t\t} elseif (strcmp($dictionary[$middle],$wordToFind) == 1) { &#47;&#47; 目前值大于要查找的值，说明要查找的值只可能的左边<br>\t\t\t$right = $middle - 1;<br>\t\t} else {<br>\t\t\t$left = $middle + 1;<br>\t\t}<br>\t\t<br>\t}<br>\treturn false;<br>}<br>$dictionary = [&quot;i&quot;, &quot;am&quot;, &quot;one&quot;, &quot;of&quot;, &quot;the&quot;, &quot;authors&quot;, &quot;in&quot;, &quot;geekbang&quot;];<br><br>sort($dictionary);<br><br>$wordToFind = &quot;one&quot;;<br>$found = search($dictionary,$wordToFind);<br><br>if ($found) {<br>\techo &#39;找到&#39;;<br>} else {<br>\techo &#39;未找到&#39;;","like_count":0},{"had_liked":false,"id":184880,"user_name":"降维打击","can_delete":false,"product_type":"c1","uid":1899683,"ip_address":"","ucode":"9FB26A15F9710B","user_header":"https://static001.geekbang.org/account/avatar/00/1c/fc/a3/6dcbbb50.jpg","comment_is_top":false,"comment_ctime":1583423720,"is_pvip":false,"replies":[{"id":"71542","content":"大部分内容会涉及高中的数学知识","user_name":"作者回复","user_name_real":"黄申","uid":"1275061","ctime":1583554820,"ip_address":"","comment_id":184880,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1583423720","product_id":100021201,"comment_content":"大至看了一下，完全看懂这个课程，至少要有高中数学基础吧！","like_count":0,"discussions":[{"author":{"id":1275061,"avatar":"https://static001.geekbang.org/account/avatar/00/13/74/b5/b68e3740.jpg","nickname":"黄申","note":"","ucode":"EE9AC074A322FF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":486156,"discussion_content":"大部分内容会涉及高中的数学知识","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1583554820,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":180935,"user_name":"missed","can_delete":false,"product_type":"c1","uid":1670935,"ip_address":"","ucode":"89D0016FAEE0D0","user_header":"https://static001.geekbang.org/account/avatar/00/19/7f/17/181c8d6f.jpg","comment_is_top":false,"comment_ctime":1582446741,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1582446741","product_id":100021201,"comment_content":"用BigInteger能计算第64个格子的麦粒数<br>public class Lesson3_1 {<br>    &#47;**<br>    * @Description: 算算舍罕王给了多少粒麦子<br>    * @param grid-放到第几格<br>    * @return long-麦粒的总数<br>    *&#47;<br><br>    public static BigInteger getNumberOfWheat(int grid) {<br>     <br>     BigInteger sum = new BigInteger(&quot;0&quot;);      &#47;&#47; 麦粒总数<br>     BigInteger numberOfWheatInGrid = new BigInteger(&quot;0&quot;); &#47;&#47; 当前格子里麦粒的数量<br>     BigInteger numberOfWheatInGrid1 = new BigInteger(&quot;1&quot;);<br>     BigInteger numberOfWheatInGrid2 = new BigInteger(&quot;2&quot;);<br>     <br>     numberOfWheatInGrid = numberOfWheatInGrid.add(numberOfWheatInGrid1);  &#47;&#47; 第一个格子里麦粒的数量<br>     sum = sum.add(numberOfWheatInGrid);  <br>     <br>     for (int i = 2; i &lt;= grid; i ++) {<br>      numberOfWheatInGrid = numberOfWheatInGrid.multiply(numberOfWheatInGrid2);   &#47;&#47; 当前格子里麦粒的数量是前一格的2倍<br>      sum =sum.add(numberOfWheatInGrid);  &#47;&#47; 累计麦粒总数<br>     }<br>     <br>     return sum;<br><br>    }<br><br>    public static void main(String[] args) {<br>    System.out.println(String.format(&quot;舍罕王给了这么多粒：%d&quot;,   Lesson3_1.getNumberOfWheat(65)));<br>    }<br>}","like_count":0},{"had_liked":false,"id":180177,"user_name":"四喜","can_delete":false,"product_type":"c1","uid":1071389,"ip_address":"","ucode":"C5EBED19C0F332","user_header":"https://static001.geekbang.org/account/avatar/00/10/59/1d/c89abcd8.jpg","comment_is_top":false,"comment_ctime":1582205030,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1582205030","product_id":100021201,"comment_content":"```<br>def get_square_root(n, delta_threshold, max_try):<br>    &quot;&quot;&quot;计算大于1的正整数的平方根&quot;&quot;&quot;<br>    if n &lt; 1:<br>        raise ValueError(&#39;请输入大于1的整数&#39;)<br><br>    _min, _max = 1.0, n<br>    for _ in range(max_try):<br>        _mid = (_min + _max) &#47; 2<br>        square = _mid**2<br>        delta = abs((square &#47; n) - 1)<br>        if delta &lt;= delta_threshold:<br>            print(&#39;%d的平方根是%f&#39; % (n, _mid))<br>            return<br>        else:<br>            if square &gt; n:<br>                _max = _mid<br>            else:<br>                _min = _mid<br>    raise TimeoutError(&#39;未能在指定迭代次数内找到解&#39;)<br><br><br>def main():<br>    for i in range(1, 15):<br>        get_square_root(i, 0.00000000001, 10000)<br><br><br>if __name__ == &quot;__main__&quot;:<br>    main()<br>```<br><br>1的平方根是1.000000<br>2的平方根是1.414214<br>3的平方根是1.732051<br>4的平方根是2.000000<br>5的平方根是2.236068<br>6的平方根是2.449490<br>7的平方根是2.645751<br>8的平方根是2.828427<br>9的平方根是3.000000<br>10的平方根是3.162278<br>11的平方根是3.316625<br>12的平方根是3.464102<br>13的平方根是3.605551<br>14的平方根是3.741657","like_count":0},{"had_liked":false,"id":174389,"user_name":"余昭","can_delete":false,"product_type":"c1","uid":1055073,"ip_address":"","ucode":"29EEEA1BFFE16B","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/sOvjoV6STk6SYPHRqVOo7DkiajY0KKuKLHSnDNvOKic5lllRNGEQo6W1oE6FrPiaSzUia1vCw9lqmV0vibCOtYtIfHQ/132","comment_is_top":false,"comment_ctime":1580188086,"is_pvip":true,"replies":[{"id":"67879","content":"是的 主要是体现数学的思路","user_name":"作者回复","user_name_real":"黄申","uid":"1275061","ctime":1580313182,"ip_address":"","comment_id":174389,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1580188086","product_id":100021201,"comment_content":"我也不是学Java的，但我觉得代码能看懂，没有很多java内置方法呀","like_count":0,"discussions":[{"author":{"id":1275061,"avatar":"https://static001.geekbang.org/account/avatar/00/13/74/b5/b68e3740.jpg","nickname":"黄申","note":"","ucode":"EE9AC074A322FF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":482388,"discussion_content":"是的 主要是体现数学的思路","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1580313182,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":167709,"user_name":"Airsaid","can_delete":false,"product_type":"c1","uid":1115302,"ip_address":"","ucode":"5B90BC0044F376","user_header":"https://static001.geekbang.org/account/avatar/00/11/04/a6/18c4f73c.jpg","comment_is_top":false,"comment_ctime":1577917262,"is_pvip":false,"replies":[{"id":"65420","content":"对，这也是典型的迭代法","user_name":"作者回复","user_name_real":"黄申","uid":"1275061","ctime":1578184634,"ip_address":"","comment_id":167709,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1577917262","product_id":100021201,"comment_content":"老师您好，既然迭代法就是不断利用旧的变量值计算新的变量值，那么像斐波那契数列是不是也可以说属于迭代法呢？（当前数等于前两数之和，前两数和为旧变量，当前数为新变量）","like_count":0,"discussions":[{"author":{"id":1275061,"avatar":"https://static001.geekbang.org/account/avatar/00/13/74/b5/b68e3740.jpg","nickname":"黄申","note":"","ucode":"EE9AC074A322FF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":479957,"discussion_content":"对，这也是典型的迭代法","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578184634,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1223158,"avatar":"https://static001.geekbang.org/account/avatar/00/12/a9/f6/1cdb3d52.jpg","nickname":"乐达","note":"","ucode":"4A1CCA0633DB45","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":210935,"discussion_content":"好例子。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584792446,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":164874,"user_name":"escray","can_delete":false,"product_type":"c1","uid":1020525,"ip_address":"","ucode":"1F4204930E47C4","user_header":"https://static001.geekbang.org/account/avatar/00/0f/92/6d/becd841a.jpg","comment_is_top":false,"comment_ctime":1577103840,"is_pvip":true,"discussion_count":0,"race_medal":2,"score":"1577103840","product_id":100021201,"comment_content":"有点好奇自作聪明，用数学知识捉弄国王的宰相，下场如何？比较简单的应该是杀掉了事。我觉的各位程序员可以共勉。<br><br>“迭代就是不断的用旧变量的值，递推计算新的变量值”，其中似乎还应该有一个不断更新中间变量值，逐渐逼近最终结果的过程。<br><br>其实在编程过程中一般都会用到迭代法，但是不会刻意的去想这是在迭代。迭代法有一点像是在不断的试错的逐渐缩小问题的可能解的范围，所以查询和排序中应该都可以使用到迭代的方式。<br><br>那么分治是不是也有迭代的意思在里面呢？<br><br>另外一点，现在一般会强调软件的迭代开发，其实也是这种想法在工程中的体现，逐渐实现软件的最终功能，或许还可以继续扩展。<br><br>从留言里面跳到了左耳听风的那篇讲魔数 0x5f3759df 的文章，看了半天才回来，其实那个里面似乎也是在使用迭代的方式求解，只不过到最后的时候，发现只迭代了一次就有了足够的精度。","like_count":0},{"had_liked":false,"id":164331,"user_name":"cwtxz","can_delete":false,"product_type":"c1","uid":1778151,"ip_address":"","ucode":"4F35AEDB8F5D5D","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/BAuQlia9Dc07m3icOkibIqu2lhbnLD6cjgCNE8FSzG5Aj4cd26eRgspicTsWvA7WK1ftlQBD34PYRucZRXML5FA27A/132","comment_is_top":false,"comment_ctime":1576938474,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1576938474","product_id":100021201,"comment_content":"学习高深的技术与基础理论是极其枯燥乏味的事情，你需要忍受无尽的孤独与寂寞，花费数年的时间漫漫求索，不屈不饶，勇往直前，一步一个脚印，努力前行，经历无数次艰苦卓绝的战斗，才能真正成长起来，独当一面。学习，当持久！","like_count":0},{"had_liked":false,"id":160012,"user_name":"czh","can_delete":false,"product_type":"c1","uid":1159078,"ip_address":"","ucode":"649FE5C9269D69","user_header":"https://static001.geekbang.org/account/avatar/00/11/af/a6/3f15ba2f.jpg","comment_is_top":false,"comment_ctime":1575857606,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1575857606","product_id":100021201,"comment_content":"今天认识到一个问题：对于这种偏理解的课程，更需要独立思考能力🤔，例如作者在提到迭代的各种机器学习应用时，我虽然学过但是一下也没有理解到它与迭代法的关系，为什么它属于迭代法的应用？原因有两个，1迭代法的运用只是这种方法一部分，它本身还融合了其他方法，是多属性的2.自己对这个方法还处在了解的阶段，没有深刻的思考它是如何产生的？为了解决什么问题？融合了哪些方法等等。所以，学好的关键还是在课下多思考，多设问，培养良好的习惯，在这样的训练过程中去锻炼自己使用数学的能力。","like_count":0},{"had_liked":false,"id":160008,"user_name":"czh","can_delete":false,"product_type":"c1","uid":1159078,"ip_address":"","ucode":"649FE5C9269D69","user_header":"https://static001.geekbang.org/account/avatar/00/11/af/a6/3f15ba2f.jpg","comment_is_top":false,"comment_ctime":1575856991,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1575856991","product_id":100021201,"comment_content":"求数值的精确或者近似解。典型的方法包括二分法（Bisection method）和牛顿迭代法（Newton’s method）。<br>在一定范围内查找目标值。典型的方法包括二分查找。<br>机器学习算法中的迭代。相关的算法或者模型有很多，比如 K- 均值算法（K-means clustering）、PageRank 的马尔科夫链（Markov chain）、梯度下降法（Gradient descent）等等。迭代法之所以在机器学习中有广泛的应用，是因为很多时候机器学习的过程，就是根据已知的数据和一定的假设，求一个局部最优解。而迭代法可以帮助学习算法逐步搜索，直至发现这种解。","like_count":0},{"had_liked":false,"id":157886,"user_name":"teddytyy","can_delete":false,"product_type":"c1","uid":1268738,"ip_address":"","ucode":"E1569D81A4154E","user_header":"https://static001.geekbang.org/account/avatar/00/13/5c/02/e7af1750.jpg","comment_is_top":false,"comment_ctime":1575277359,"is_pvip":false,"replies":[{"id":"60544","content":"通常都是，因为之前的最优状态都是确定的","user_name":"作者回复","user_name_real":"黄申","uid":"1275061","ctime":1575312833,"ip_address":"","comment_id":157886,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1575277359","product_id":100021201,"comment_content":"动态规划用的都是迭代法吧","like_count":0,"discussions":[{"author":{"id":1275061,"avatar":"https://static001.geekbang.org/account/avatar/00/13/74/b5/b68e3740.jpg","nickname":"黄申","note":"","ucode":"EE9AC074A322FF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":476561,"discussion_content":"通常都是，因为之前的最优状态都是确定的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1575312833,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":151595,"user_name":"学习学个屁","can_delete":false,"product_type":"c1","uid":1049017,"ip_address":"","ucode":"DF2D61E6FB2FCE","user_header":"https://static001.geekbang.org/account/avatar/00/10/01/b9/73435279.jpg","comment_is_top":false,"comment_ctime":1573746741,"is_pvip":false,"replies":[{"id":"58278","content":"是的👍","user_name":"作者回复","user_name_real":"黄申","uid":"1275061","ctime":1573758639,"ip_address":"","comment_id":151595,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1573746741","product_id":100021201,"comment_content":"sql 中主键查询也采用二分查找发，为了提高查询的效率。<br>每一次循环遍历查找 很是浪费资源，浪费时间。","like_count":0,"discussions":[{"author":{"id":1275061,"avatar":"https://static001.geekbang.org/account/avatar/00/13/74/b5/b68e3740.jpg","nickname":"黄申","note":"","ucode":"EE9AC074A322FF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":474547,"discussion_content":"是的👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573758639,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":151057,"user_name":"伪装","can_delete":false,"product_type":"c1","uid":1614884,"ip_address":"","ucode":"F484F3ADFEB060","user_header":"https://static001.geekbang.org/account/avatar/00/18/a4/24/0f4a9157.jpg","comment_is_top":false,"comment_ctime":1573648108,"is_pvip":false,"replies":[{"id":"58178","content":"这个语言我不熟悉，是不是和这个语言数据类型的精度有关？","user_name":"作者回复","user_name_real":"黄申","uid":"1275061","ctime":1573666694,"ip_address":"","comment_id":151057,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1573648108","product_id":100021201,"comment_content":"fn main() {<br>    let mut sum: u128 = 0;<br>    let mut number_grid: u128 = 1; &#47;&#47; 当前格子里麦粒的数量<br>    for i in 0..63{<br>        number_grid *= 2;&#47;&#47; 当前格子里麦粒的数量是前一格的2倍<br>        sum += number_grid; &#47;&#47; 累计麦粒总数<br>        println!(&quot;{}&quot;, i);<br>    }<br>    println!(&quot;arr value = {}&quot;, sum);&#47;&#47; 18446744073709551614<br>} <br>我用rust跑出来是这个数，相差甚远，或者我写错了？求解","like_count":0,"discussions":[{"author":{"id":1275061,"avatar":"https://static001.geekbang.org/account/avatar/00/13/74/b5/b68e3740.jpg","nickname":"黄申","note":"","ucode":"EE9AC074A322FF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":474349,"discussion_content":"这个语言我不熟悉，是不是和这个语言数据类型的精度有关？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573666694,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1614884,"avatar":"https://static001.geekbang.org/account/avatar/00/18/a4/24/0f4a9157.jpg","nickname":"伪装","note":"","ucode":"F484F3ADFEB060","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":52576,"discussion_content":"是我的问题 多循环了一次 应该是for i in 1..63","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574069292,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":147720,"user_name":"上善若水","can_delete":false,"product_type":"c1","uid":1653332,"ip_address":"","ucode":"E3F15FB8576626","user_header":"https://static001.geekbang.org/account/avatar/00/19/3a/54/72402617.jpg","comment_is_top":false,"comment_ctime":1572881101,"is_pvip":true,"replies":[{"id":"56928","content":"如果需要，这确实是好方法","user_name":"作者回复","user_name_real":"黄申","uid":"1275061","ctime":1572889390,"ip_address":"","comment_id":147720,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1572881101","product_id":100021201,"comment_content":"以后解决问题，我先写出数学公式了","like_count":0,"discussions":[{"author":{"id":1275061,"avatar":"https://static001.geekbang.org/account/avatar/00/13/74/b5/b68e3740.jpg","nickname":"黄申","note":"","ucode":"EE9AC074A322FF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":473292,"discussion_content":"如果需要，这确实是好方法","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1572889390,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":144114,"user_name":"何轩","can_delete":false,"product_type":"c1","uid":1338107,"ip_address":"","ucode":"4F9BBB03AB3382","user_header":"https://static001.geekbang.org/account/avatar/00/14/6a/fb/1b4b7420.jpg","comment_is_top":false,"comment_ctime":1571844523,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1571844523","product_id":100021201,"comment_content":"迭代法：不断用旧的值，递推计算新的值，循环往复，直到找到所求的解；<br>常见应用场景：二分查找、求精确解或近似解<br>使用步骤：1、确定迭代变量；2、建立新旧值递推公式；3、控制迭代过程","like_count":0},{"had_liked":false,"id":138905,"user_name":"Yang","can_delete":false,"product_type":"c1","uid":1186879,"ip_address":"","ucode":"6335082702CF34","user_header":"https://static001.geekbang.org/account/avatar/00/12/1c/3f/eabd0cb1.jpg","comment_is_top":false,"comment_ctime":1570502653,"is_pvip":false,"replies":[{"id":"53587","content":"这是很好的例子👍","user_name":"作者回复","user_name_real":"黄申","uid":"1275061","ctime":1570554656,"ip_address":"","comment_id":138905,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1570502653","product_id":100021201,"comment_content":"EM 算法，是基于迭代法，主要特点是 x_(i+1) = f(x_i)。","like_count":0,"discussions":[{"author":{"id":1275061,"avatar":"https://static001.geekbang.org/account/avatar/00/13/74/b5/b68e3740.jpg","nickname":"黄申","note":"","ucode":"EE9AC074A322FF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":469692,"discussion_content":"这是很好的例子👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1570554656,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":138864,"user_name":"丁丁历险记","can_delete":false,"product_type":"c1","uid":1661704,"ip_address":"","ucode":"A43829E454C067","user_header":"https://static001.geekbang.org/account/avatar/00/19/5b/08/b0b0db05.jpg","comment_is_top":false,"comment_ctime":1570495160,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1570495160","product_id":100021201,"comment_content":"当我想暴力求解时。","like_count":0},{"had_liked":false,"id":129954,"user_name":"斐波那契","can_delete":false,"product_type":"c1","uid":1464006,"ip_address":"","ucode":"85E2EBC01392B1","user_header":"https://static001.geekbang.org/account/avatar/00/16/56/c6/0b449bc6.jpg","comment_is_top":false,"comment_ctime":1567337479,"is_pvip":false,"replies":[{"id":"48520","content":"是的，这就是数学归纳","user_name":"作者回复","user_name_real":"黄申","uid":"1275061","ctime":1567387380,"ip_address":"","comment_id":129954,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1567337479","product_id":100021201,"comment_content":"老师 平方根是不是还可以用泰勒公式来求解 任何函数都可以用一个幂级数的形式表达 俗称统一美 令f(x)=根号x 根据泰勒又等于f(X0)+f(X0)一阶导&#47;1!(X-X0)+f(X0)二阶导&#47;2!(X-X0)+...... 显然这里X0取1最合适 要算根号x只要把x的值带入泰勒展开就行 例如算根号2就是1+1&#47;2-1&#47;8+1&#47;16+......抓住规律代码实现起来应该不难吧","like_count":0,"discussions":[{"author":{"id":1275061,"avatar":"https://static001.geekbang.org/account/avatar/00/13/74/b5/b68e3740.jpg","nickname":"黄申","note":"","ucode":"EE9AC074A322FF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":465733,"discussion_content":"是的，这就是数学归纳","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567387380,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":123787,"user_name":"Paul Shan","can_delete":false,"product_type":"c1","uid":1593140,"ip_address":"","ucode":"32D99989028284","user_header":"","comment_is_top":false,"comment_ctime":1565760191,"is_pvip":false,"replies":[{"id":"45501","content":"很好的总结","user_name":"作者回复","user_name_real":"黄申","uid":"1275061","ctime":1565819657,"ip_address":"","comment_id":123787,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1565760191","product_id":100021201,"comment_content":"我个人以为迭代法是不断演进的方法。因为不能直接得到想要的结果，靠逐步推进来实现，具体来讲需要以下几点：<br>第一，要有一个迭代起点。<br>第二，要能判断当前状态是否达到终点或者误差足够小。<br>第三，每次接近终点的推进要足够大，避免死循环。例子中的每次进一个格或者区间减小一半都能保证迭代结束。","like_count":0,"discussions":[{"author":{"id":1275061,"avatar":"https://static001.geekbang.org/account/avatar/00/13/74/b5/b68e3740.jpg","nickname":"黄申","note":"","ucode":"EE9AC074A322FF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":462812,"discussion_content":"很好的总结","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1565819657,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":116697,"user_name":"依韵","can_delete":false,"product_type":"c1","uid":1153762,"ip_address":"","ucode":"02F5BED8BE0F6E","user_header":"https://static001.geekbang.org/account/avatar/00/11/9a/e2/271e0caf.jpg","comment_is_top":false,"comment_ctime":1563891679,"is_pvip":false,"discussion_count":0,"race_medal":1,"score":"1563891679","product_id":100021201,"comment_content":"JavaScript版的 求 平方根<br>```<br>&#47;&#47; 求平方根<br>function getSqrt(num, deltaPrecision = 0.0001, limit = 1000) {<br>  if (num &lt; 0) return NaN;<br>  if (num === 0) return 0;<br>  if (num === 1) return 1;<br><br>  var min = 1;<br>  var max = num;<br>  var mid;<br>  var i = 0;<br>  var s;<br>  var delta;<br>  while (i++ &lt; limit) {<br>    mid = (min + max) &#47; 2;<br>    s = mid * mid;<br>    delta = Math.abs(s - num);<br>    &#47;&#47; if (s === num) {<br>    &#47;&#47;   console.log(`查找了${i}次，获得精确值！`);<br>    &#47;&#47;   return mid;<br>    &#47;&#47; }<br><br>    if (delta &lt;= deltaPrecision) {<br>      console.log(`查找了${i}次，精度符合`);<br>      return mid;<br>    }<br><br>    if (s &gt; num) {<br>      max = mid;<br>    } else {<br>      min = mid;<br>    }<br>  }<br>  console.warn(&#39;在指定次数内，未获取到精确值，返回近似值&#39;);<br>  return mid;<br>}<br><br>&#47;&#47; tests<br>[...new Array(10)]<br>  .map((_, i) =&gt; i + 1)<br>  .forEach(n =&gt; {<br>    console.log(`${n}的算术平方根是: ${getSqrt(n)}`);<br>  });<br>```","like_count":0},{"had_liked":false,"id":108211,"user_name":"少盐","can_delete":false,"product_type":"c1","uid":1305743,"ip_address":"","ucode":"BCC7E264B75702","user_header":"https://static001.geekbang.org/account/avatar/00/13/ec/8f/8299495a.jpg","comment_is_top":false,"comment_ctime":1561698635,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1561698635","product_id":100021201,"comment_content":"迭代法，设定精度和终止条件，然后重复性的尝试，达到条件停止。","like_count":0},{"had_liked":false,"id":103415,"user_name":"星辰如月","can_delete":false,"product_type":"c1","uid":1578361,"ip_address":"","ucode":"D6460089C1C349","user_header":"https://static001.geekbang.org/account/avatar/00/18/15/79/bbf0aef3.jpg","comment_is_top":false,"comment_ctime":1560430503,"is_pvip":false,"replies":[{"id":"37446","content":"是的，由于计算机数据类型有精度的限制，所有会有误差。","user_name":"作者回复","user_name_real":"黄申","uid":"1275061","ctime":1560443631,"ip_address":"","comment_id":103415,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1560430503","product_id":100021201,"comment_content":"def sqrt(n):<br><br>    start, end = 1, n<br>    m = (start+end)&#47;2<br>    while abs(m**2-n) &gt; 10**-8<br>         if m*m &gt; n:<br>             end = m<br>             m = (start+end)&#47;2<br>        else:<br>            start = m<br>            m = (start+end)&#47;2<br>    return m<br>我用python写的迭代求开方，误差在10^-8以内，却发现对于平方数，因为误差的原因，算出来不对了","like_count":0,"discussions":[{"author":{"id":1275061,"avatar":"https://static001.geekbang.org/account/avatar/00/13/74/b5/b68e3740.jpg","nickname":"黄申","note":"","ucode":"EE9AC074A322FF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":453866,"discussion_content":"是的，由于计算机数据类型有精度的限制，所有会有误差。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1560443631,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":94707,"user_name":"xinnong","can_delete":false,"product_type":"c1","uid":1005415,"ip_address":"","ucode":"3C1F1EB93FBA5B","user_header":"https://static001.geekbang.org/account/avatar/00/0f/57/67/01d1580f.jpg","comment_is_top":false,"comment_ctime":1557884029,"is_pvip":false,"replies":[{"id":"33960","content":"是的，这样写可能会溢出，感谢这个生动的案例 :)","user_name":"作者回复","user_name_real":"黄申","uid":"1275061","ctime":1557938439,"ip_address":"","comment_id":94707,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1557884029","product_id":100021201,"comment_content":"<br><br>写了一个二分查找的典型错误，：-）<br>int min = Integer.MAX_VALUE&#47;2;<br>int max = Integer.MAX_VALUE-10000;<br>int mid = (min + max) &#47; 2;<br>System.out.println(mid);&#47;&#47;-536875913","like_count":0,"discussions":[{"author":{"id":1275061,"avatar":"https://static001.geekbang.org/account/avatar/00/13/74/b5/b68e3740.jpg","nickname":"黄申","note":"","ucode":"EE9AC074A322FF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":450177,"discussion_content":"是的，这样写可能会溢出，感谢这个生动的案例 :)","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1557938439,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":88529,"user_name":"首席民工","can_delete":false,"product_type":"c1","uid":1079418,"ip_address":"","ucode":"8B8D2407A1F7E3","user_header":"https://static001.geekbang.org/account/avatar/00/10/78/7a/41ba6b76.jpg","comment_is_top":false,"comment_ctime":1555936394,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1555936394","product_id":100021201,"comment_content":"n=f(n) 既是自变量，又是因变量","like_count":0},{"had_liked":false,"id":86962,"user_name":"$侯","can_delete":false,"product_type":"c1","uid":1019939,"ip_address":"","ucode":"488B1BD3924E7E","user_header":"https://static001.geekbang.org/account/avatar/00/0f/90/23/5c74e9b7.jpg","comment_is_top":false,"comment_ctime":1555487627,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1555487627","product_id":100021201,"comment_content":"go语言版：<br><br>func TestMe(t *testing.T) {<br>\tvar dictionary = []string{&quot;i&quot;, &quot;am&quot;, &quot;one&quot;, &quot;of&quot;, &quot;the&quot;, &quot;authors&quot;, &quot;in&quot;, &quot;geekbang&quot;}<br>\tsort.Strings(dictionary) &#47;&#47; [am authors geekbang i in of one the]<br><br>\tvar wordToFind string = &quot;i&quot;<br><br>\tfound := search(dictionary, wordToFind)<br><br>\tif found {<br>\t\tfmt.Println(&quot;找到了单词&quot;, wordToFind)<br>\t} else {<br>\t\tfmt.Println(&quot;未能找到单词&quot;, wordToFind)<br>\t}<br>}<br><br>func search(dictionary []string, wordToFind string) bool {<br>\tif dictionary == nil {<br>\t\treturn false<br>\t}<br>\tif len(dictionary) == 0 {<br>\t\treturn false<br>\t}<br>\tvar left, right int = 0, len(dictionary) - 1<br>\tfor left &lt;= right {<br>\t\tvar middle int = (left + right) &#47; 2<br>\t\tif dictionary[middle] == wordToFind {<br>\t\t\treturn true<br>\t\t} else {<br>\t\t\tif strings.Compare(dictionary[middle], wordToFind) &gt; 0 {<br>\t\t\t\tright = middle - 1<br>\t\t\t} else {<br>\t\t\t\tleft = middle + 1<br>\t\t\t}<br>\t\t}<br>\t}<br>\treturn false<br>}<br>","like_count":0},{"had_liked":false,"id":86761,"user_name":"...","can_delete":false,"product_type":"c1","uid":1322702,"ip_address":"","ucode":"6AB5B1F9386267","user_header":"https://static001.geekbang.org/account/avatar/00/14/2e/ce/2151c3a9.jpg","comment_is_top":false,"comment_ctime":1555458469,"is_pvip":false,"replies":[{"id":"31343","content":"你可以用二叉树来想象，每一个二叉就是二分，而这个二分或者说两个叉对应了二进制里的一位，0或1","user_name":"作者回复","user_name_real":"黄申","uid":"1275061","ctime":1555532588,"ip_address":"","comment_id":86761,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1555458469","product_id":100021201,"comment_content":"二分法也体现了二进制思想，这句话怎么理解","like_count":0,"discussions":[{"author":{"id":1275061,"avatar":"https://static001.geekbang.org/account/avatar/00/13/74/b5/b68e3740.jpg","nickname":"黄申","note":"","ucode":"EE9AC074A322FF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":447159,"discussion_content":"你可以用二叉树来想象，每一个二叉就是二分，而这个二分或者说两个叉对应了二进制里的一位，0或1","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1555532588,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":81034,"user_name":"Jing","can_delete":false,"product_type":"c1","uid":1474491,"ip_address":"","ucode":"690067C1ACA141","user_header":"https://static001.geekbang.org/account/avatar/00/16/7f/bb/794dd610.jpg","comment_is_top":false,"comment_ctime":1553781407,"is_pvip":false,"replies":[{"id":"29650","content":"在机器学习等算法中，有的时候求全局最优成本太高，所以使用局部最优近似也是出于可实现的考虑","user_name":"作者回复","user_name_real":"黄申","uid":"1275061","ctime":1554050429,"ip_address":"","comment_id":81034,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1553781407","product_id":100021201,"comment_content":"求解斐波那契的第N项，就可以采用迭代法（数值不溢出的情况下）<br>老师你的课程里面提到关于机器学习的梯度下降法，我看吴恩达教授讲的梯度下降法，有可能求解的最优解是局部最优解，而不是全局最优解。那么局部最优解就是我们需要的解吗？关于这个您怎么理解的呢？","like_count":0,"discussions":[{"author":{"id":1275061,"avatar":"https://static001.geekbang.org/account/avatar/00/13/74/b5/b68e3740.jpg","nickname":"黄申","note":"","ucode":"EE9AC074A322FF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":445055,"discussion_content":"在机器学习等算法中，有的时候求全局最优成本太高，所以使用局部最优近似也是出于可实现的考虑","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1554050429,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":80984,"user_name":"是我","can_delete":false,"product_type":"c1","uid":1297235,"ip_address":"","ucode":"0AC816A2FBD4F4","user_header":"https://static001.geekbang.org/account/avatar/00/13/cb/53/262a8ce2.jpg","comment_is_top":false,"comment_ctime":1553768973,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1553768973","product_id":100021201,"comment_content":"目前还没有使用过，但是我觉得以后要使用二分查找或许会在面试中吧😂","like_count":0},{"had_liked":false,"id":80709,"user_name":"融梨","can_delete":false,"product_type":"c1","uid":1033405,"ip_address":"","ucode":"66D0A4054612C6","user_header":"https://static001.geekbang.org/account/avatar/00/0f/c4/bd/72180435.jpg","comment_is_top":false,"comment_ctime":1553700644,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1553700644","product_id":100021201,"comment_content":"迭代法，让我们少写代码，增加代码阅读性。","like_count":0},{"had_liked":false,"id":78174,"user_name":"宸思隐者","can_delete":false,"product_type":"c1","uid":1462295,"ip_address":"","ucode":"94E64D00758296","user_header":"https://static001.geekbang.org/account/avatar/00/16/50/17/a4875698.jpg","comment_is_top":false,"comment_ctime":1553085221,"is_pvip":false,"replies":[{"id":"28506","content":"哈希表是最常见的实现方式，还可以使用前缀树trie，后面还会讲解","user_name":"作者回复","user_name_real":"黄申","uid":"1275061","ctime":1553100445,"ip_address":"","comment_id":78174,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1553085221","product_id":100021201,"comment_content":"你好！不是很理解字典要怎么排序，是使用kv类型的数据结构，然后对key进行排序吗？","like_count":0,"discussions":[{"author":{"id":1275061,"avatar":"https://static001.geekbang.org/account/avatar/00/13/74/b5/b68e3740.jpg","nickname":"黄申","note":"","ucode":"EE9AC074A322FF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":443994,"discussion_content":"哈希表是最常见的实现方式，还可以使用前缀树trie，后面还会讲解","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1553100445,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":74582,"user_name":"杨锋","can_delete":false,"product_type":"c1","uid":1283461,"ip_address":"","ucode":"85A7828A538FB0","user_header":"https://static001.geekbang.org/account/avatar/00/13/95/85/15cd21c2.jpg","comment_is_top":false,"comment_ctime":1552262414,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1552262414","product_id":100021201,"comment_content":"老师的笔记真赞。","like_count":0},{"had_liked":false,"id":71678,"user_name":"严冬","can_delete":false,"product_type":"c1","uid":1433225,"ip_address":"","ucode":"C82D6DBB906D53","user_header":"https://static001.geekbang.org/account/avatar/00/15/de/89/fb5dcc81.jpg","comment_is_top":false,"comment_ctime":1551410441,"is_pvip":false,"replies":[{"id":"26031","content":"你说的财务公式具体是指什么？有些像线性回归确实是使用迭代的方法，具体会在第三大模块讲解","user_name":"作者回复","user_name_real":"黄申","uid":"1275061","ctime":1551460566,"ip_address":"","comment_id":71678,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1551410441","product_id":100021201,"comment_content":"Excel中的很多财务公式感觉都是使用迭代的思想实现的:先取一个猜测值，而后根据计算误差不断调整计算值，不断逼近真实值","like_count":0,"discussions":[{"author":{"id":1275061,"avatar":"https://static001.geekbang.org/account/avatar/00/13/74/b5/b68e3740.jpg","nickname":"黄申","note":"","ucode":"EE9AC074A322FF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":441272,"discussion_content":"你说的财务公式具体是指什么？有些像线性回归确实是使用迭代的方法，具体会在第三大模块讲解","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1551460566,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":71240,"user_name":"苦行僧","can_delete":false,"product_type":"c1","uid":1055334,"ip_address":"","ucode":"726024A9A9CF44","user_header":"https://static001.geekbang.org/account/avatar/00/10/1a/66/2d9db9ed.jpg","comment_is_top":false,"comment_ctime":1551311170,"is_pvip":false,"replies":[{"id":"25693","content":"确实不同的问题可能会有不同的终止条件，多多联系能找到感觉","user_name":"作者回复","user_name_real":"黄申","uid":"1275061","ctime":1551375001,"ip_address":"","comment_id":71240,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1551311170","product_id":100021201,"comment_content":"迭代的终止条件 尤其在写递归的时候 很难把握","like_count":0,"discussions":[{"author":{"id":1275061,"avatar":"https://static001.geekbang.org/account/avatar/00/13/74/b5/b68e3740.jpg","nickname":"黄申","note":"","ucode":"EE9AC074A322FF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":441062,"discussion_content":"确实不同的问题可能会有不同的终止条件，多多联系能找到感觉","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1551375001,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":70898,"user_name":"苦行僧","can_delete":false,"product_type":"c1","uid":1055334,"ip_address":"","ucode":"726024A9A9CF44","user_header":"https://static001.geekbang.org/account/avatar/00/10/1a/66/2d9db9ed.jpg","comment_is_top":false,"comment_ctime":1551225758,"is_pvip":false,"replies":[{"id":"25490","content":"感谢支持！","user_name":"作者回复","user_name_real":"黄申","uid":"1275061","ctime":1551291842,"ip_address":"","comment_id":70898,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1551225758","product_id":100021201,"comment_content":"边做leetcode再返回看老师的课很有感觉","like_count":0,"discussions":[{"author":{"id":1275061,"avatar":"https://static001.geekbang.org/account/avatar/00/13/74/b5/b68e3740.jpg","nickname":"黄申","note":"","ucode":"EE9AC074A322FF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":440892,"discussion_content":"感谢支持！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1551291842,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":70276,"user_name":"青梅煮马","can_delete":false,"product_type":"c1","uid":1433737,"ip_address":"","ucode":"529AEBCF25E828","user_header":"https://static001.geekbang.org/account/avatar/00/15/e0/89/c3db1efc.jpg","comment_is_top":false,"comment_ctime":1551063103,"is_pvip":false,"replies":[{"id":"25137","content":"如果这个传说是真的话，那国际象棋当时一定火了","user_name":"作者回复","user_name_real":"黄申","uid":"1275061","ctime":1551115269,"ip_address":"","comment_id":70276,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1551063103","product_id":100021201,"comment_content":"说句题外话，我比较关心这个棋盘到底有多大，还有这个人最后怎么样了","like_count":0,"discussions":[{"author":{"id":1275061,"avatar":"https://static001.geekbang.org/account/avatar/00/13/74/b5/b68e3740.jpg","nickname":"黄申","note":"","ucode":"EE9AC074A322FF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":440537,"discussion_content":"如果这个传说是真的话，那国际象棋当时一定火了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1551115269,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":66522,"user_name":"Aaron","can_delete":false,"product_type":"c1","uid":1067913,"ip_address":"","ucode":"441614DAEAF8D0","user_header":"https://static001.geekbang.org/account/avatar/00/10/4b/89/a65d1a3f.jpg","comment_is_top":false,"comment_ctime":1549952774,"is_pvip":false,"replies":[{"id":"23619","content":"你好，这个题目的条件是求大于1的平方根，所以解一定是大于1的","user_name":"作者回复","user_name_real":"黄申","uid":"1275061","ctime":1549993008,"ip_address":"","comment_id":66522,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1549952774","product_id":100021201,"comment_content":"请问一下 min 最小值为什么取1而不是0?","like_count":0,"discussions":[{"author":{"id":1275061,"avatar":"https://static001.geekbang.org/account/avatar/00/13/74/b5/b68e3740.jpg","nickname":"黄申","note":"","ucode":"EE9AC074A322FF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":438820,"discussion_content":"你好，这个题目的条件是求大于1的平方根，所以解一定是大于1的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1549993008,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":65935,"user_name":"杰之7","can_delete":false,"product_type":"c1","uid":1297232,"ip_address":"","ucode":"F7DA2E21085332","user_header":"https://static001.geekbang.org/account/avatar/00/13/cb/50/66d0bd7f.jpg","comment_is_top":false,"comment_ctime":1549783658,"is_pvip":false,"replies":[{"id":"23378","content":"App新闻推荐和相关性商品，涉及了机器学习算法中的迭代，不过那种迭代是更抽象层面的，后面有机会我会介绍。","user_name":"作者回复","user_name_real":"黄申","uid":"1275061","ctime":1549850238,"ip_address":"","comment_id":65935,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1549783658","product_id":100021201,"comment_content":"通过这一节的阅读，对迭代法有了理解和认识。老师通过棋盘粮食填充的例子，引申出迭代法。其实对于我和大多数人来说，对于大数是抽象的，这种情况下，只有通过在实际的案例中，才能感受到其中的奥秘。<br><br>在文章中，老师通过求近似解和查找字典的案例中分析说明了迭代二分法的应用，并用Java代码清晰的写了出来。我觉得这是这门课最好的地方，不仅阐述原理并在编程中加以实现。而且是我这种没有多少编程基础的同学可以读懂的。<br><br>目前还没有从事计算机的工作，但今天大多数APP新闻的推荐，购物网站的相关性商品推荐，我想其实就是应用到了迭代法，不断求最优解，最后呈现给我们好的信息。","like_count":0,"discussions":[{"author":{"id":1275061,"avatar":"https://static001.geekbang.org/account/avatar/00/13/74/b5/b68e3740.jpg","nickname":"黄申","note":"","ucode":"EE9AC074A322FF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":438647,"discussion_content":"App新闻推荐和相关性商品，涉及了机器学习算法中的迭代，不过那种迭代是更抽象层面的，后面有机会我会介绍。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1549850238,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":65519,"user_name":"杨春鹏","can_delete":false,"product_type":"c1","uid":1172056,"ip_address":"","ucode":"518F38232F97B5","user_header":"https://static001.geekbang.org/account/avatar/00/11/e2/58/8c8897c8.jpg","comment_is_top":false,"comment_ctime":1549425792,"is_pvip":false,"replies":[{"id":"23219","content":"这里我们假设的是，计算某个给定正整数 n（n&gt;1）的平方根，所以square不会出现小数的情况。即使考虑小数，迭代法也可以让square&#47;n这个值足够接近1","user_name":"作者回复","user_name_real":"黄申","uid":"1275061","ctime":1549466132,"ip_address":"","comment_id":65519,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1549425792","product_id":100021201,"comment_content":"double precision =Math.abs((square &#47; n) - 1);<br>通过该值与目标精度值来进行判断，是不是不妥？<br>如果square=0.05，那么precision将会变成0.0001，直接就跳过了0.001的精度。","like_count":0,"discussions":[{"author":{"id":1275061,"avatar":"https://static001.geekbang.org/account/avatar/00/13/74/b5/b68e3740.jpg","nickname":"黄申","note":"","ucode":"EE9AC074A322FF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":438486,"discussion_content":"这里我们假设的是，计算某个给定正整数 n（n&amp;gt;1）的平方根，所以square不会出现小数的情况。即使考虑小数，迭代法也可以让square/n这个值足够接近1","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1549466132,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":61971,"user_name":"予悠悠","can_delete":false,"product_type":"c1","uid":1211755,"ip_address":"","ucode":"93D785F354E225","user_header":"https://static001.geekbang.org/account/avatar/00/12/7d/6b/648c30bc.jpg","comment_is_top":false,"comment_ctime":1547868922,"is_pvip":false,"replies":[{"id":"21972","content":"很典型的迭代思想","user_name":"作者回复","user_name_real":"黄申","uid":"1275061","ctime":1547935621,"ip_address":"","comment_id":61971,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1547868922","product_id":100021201,"comment_content":"现在在做的项目就是基于迭代的，用于迭代的变量值是每分钟实时收集的，然后验证这个变量值是否在理想水平，如果不是，则通过参数来调整这个变量值。下一分钟继续收集变量值，继续调整，直接达到理想水平。","like_count":0,"discussions":[{"author":{"id":1275061,"avatar":"https://static001.geekbang.org/account/avatar/00/13/74/b5/b68e3740.jpg","nickname":"黄申","note":"","ucode":"EE9AC074A322FF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":437056,"discussion_content":"很典型的迭代思想","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1547935621,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":60723,"user_name":"小老鼠","can_delete":false,"product_type":"c1","uid":1257460,"ip_address":"","ucode":"C663A0C863A515","user_header":"https://static001.geekbang.org/account/avatar/00/13/2f/f4/2dede51a.jpg","comment_is_top":false,"comment_ctime":1547537617,"is_pvip":false,"replies":[{"id":"21686","content":"对的","user_name":"作者回复","user_name_real":"黄申","uid":"1275061","ctime":1547567359,"ip_address":"","comment_id":60723,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1547537617","product_id":100021201,"comment_content":"迭代法一定可用迭代函数来实现吧","like_count":0,"discussions":[{"author":{"id":1275061,"avatar":"https://static001.geekbang.org/account/avatar/00/13/74/b5/b68e3740.jpg","nickname":"黄申","note":"","ucode":"EE9AC074A322FF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":436599,"discussion_content":"对的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1547567359,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":58121,"user_name":"牛玉富","can_delete":false,"product_type":"c1","uid":1231623,"ip_address":"","ucode":"DD962676F8FAF6","user_header":"https://static001.geekbang.org/account/avatar/00/12/cb/07/482b7155.jpg","comment_is_top":false,"comment_ctime":1546999649,"is_pvip":false,"replies":[{"id":"21034","content":"这里多次支持是指多个单词的查询？","user_name":"作者回复","user_name_real":"黄申","uid":"1275061","ctime":1547047982,"ip_address":"","comment_id":58121,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1546999649","product_id":100021201,"comment_content":"老师第二个例子只能查找一个单词，建议修改成多次支持的形式","like_count":0,"discussions":[{"author":{"id":1275061,"avatar":"https://static001.geekbang.org/account/avatar/00/13/74/b5/b68e3740.jpg","nickname":"黄申","note":"","ucode":"EE9AC074A322FF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":435915,"discussion_content":"这里多次支持是指多个单词的查询？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1547047982,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":56776,"user_name":"睡着的海豚","can_delete":false,"product_type":"c1","uid":1338125,"ip_address":"","ucode":"E5F069F7C9E1BC","user_header":"https://static001.geekbang.org/account/avatar/00/14/6b/0d/74aeb985.jpg","comment_is_top":false,"comment_ctime":1546560976,"is_pvip":false,"replies":[{"id":"72108","content":"是的，由于只需要个位，因此可以优化，避免溢出","user_name":"作者回复","user_name_real":"黄申","uid":"1275061","ctime":1583972781,"ip_address":"","comment_id":56776,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1546560976","product_id":100021201,"comment_content":"有道经典的面试题是：1，1，2，3，5，8这样一组数据，当前数是前两位的和， 求第1000个数是多少或者1000个数的个位是多少？这就用到了迭代吧？","like_count":0,"discussions":[{"author":{"id":1275061,"avatar":"https://static001.geekbang.org/account/avatar/00/13/74/b5/b68e3740.jpg","nickname":"黄申","note":"","ucode":"EE9AC074A322FF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":435228,"discussion_content":"是的，由于只需要个位，因此可以优化，避免溢出","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1583972781,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":56775,"user_name":"睡着的海豚","can_delete":false,"product_type":"c1","uid":1338125,"ip_address":"","ucode":"E5F069F7C9E1BC","user_header":"https://static001.geekbang.org/account/avatar/00/14/6b/0d/74aeb985.jpg","comment_is_top":false,"comment_ctime":1546560973,"is_pvip":false,"replies":[{"id":"20586","content":"从严格意义上来说，这种数列可以用编程中的迭代法来实现，也就是循环。这和数学里的迭代法有所不同","user_name":"作者回复","user_name_real":"黄申","uid":"1275061","ctime":1546649184,"ip_address":"","comment_id":56775,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1546560973","product_id":100021201,"comment_content":"有道经典的面试题是：1，1，2，3，5，8这样一组数据，当前数是前两位的和， 求第1000个数是多少或者1000个数的个位是多少？这就用到了迭代吧？","like_count":0,"discussions":[{"author":{"id":1275061,"avatar":"https://static001.geekbang.org/account/avatar/00/13/74/b5/b68e3740.jpg","nickname":"黄申","note":"","ucode":"EE9AC074A322FF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":435227,"discussion_content":"从严格意义上来说，这种数列可以用编程中的迭代法来实现，也就是循环。这和数学里的迭代法有所不同","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1546649184,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":56564,"user_name":"李耀","can_delete":false,"product_type":"c1","uid":1340442,"ip_address":"","ucode":"AE819969A48947","user_header":"https://static001.geekbang.org/account/avatar/00/14/74/1a/72ac052a.jpg","comment_is_top":false,"comment_ctime":1546492975,"is_pvip":false,"replies":[{"id":"20452","content":"有所不同，滑动窗口的大小可根据流量，变大或变小，而不是一味的缩小搜索范围","user_name":"作者回复","user_name_real":"黄申","uid":"1275061","ctime":1546540761,"ip_address":"","comment_id":56564,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1546492975","product_id":100021201,"comment_content":"tcp的滑动窗口是否也是求平方根思想呢？","like_count":0,"discussions":[{"author":{"id":1275061,"avatar":"https://static001.geekbang.org/account/avatar/00/13/74/b5/b68e3740.jpg","nickname":"黄申","note":"","ucode":"EE9AC074A322FF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":435119,"discussion_content":"有所不同，滑动窗口的大小可根据流量，变大或变小，而不是一味的缩小搜索范围","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1546540761,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":54820,"user_name":"汪帅","can_delete":false,"product_type":"c1","uid":1025321,"ip_address":"","ucode":"87374288E390B9","user_header":"https://static001.geekbang.org/account/avatar/00/0f/a5/29/a85c2853.jpg","comment_is_top":false,"comment_ctime":1545965832,"is_pvip":false,"replies":[{"id":"19853","content":"基本的方法是对于文本中的每个单词，查找它是否出现在敏感词字典中，可以使用哈希表，时间复杂度O(n)，n是被检测文章的单词数量。分词如果是指中文分词，那么是另一个比较大的话题，后面讨论概率论时可以讨论。或者不分词，使用前缀树，这个后面会讲","user_name":"作者回复","user_name_real":"黄申","uid":"1275061","ctime":1545968837,"ip_address":"","comment_id":54820,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1545965832","product_id":100021201,"comment_content":"这个APP不支持追加回复，我的问题是一个长的文本中找出敏感词进行替换，老师的思路是分词然后查找替换，问题就来了，分词的参考样本我就可以设定为敏感词词库，那么关键在于如何快速进行查找呢？也就是分词算法和词库结构如何设计","like_count":0,"discussions":[{"author":{"id":1275061,"avatar":"https://static001.geekbang.org/account/avatar/00/13/74/b5/b68e3740.jpg","nickname":"黄申","note":"","ucode":"EE9AC074A322FF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":434573,"discussion_content":"基本的方法是对于文本中的每个单词，查找它是否出现在敏感词字典中，可以使用哈希表，时间复杂度O(n)，n是被检测文章的单词数量。分词如果是指中文分词，那么是另一个比较大的话题，后面讨论概率论时可以讨论。或者不分词，使用前缀树，这个后面会讲","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1545968837,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":54747,"user_name":"汪帅","can_delete":false,"product_type":"c1","uid":1025321,"ip_address":"","ucode":"87374288E390B9","user_header":"https://static001.geekbang.org/account/avatar/00/0f/a5/29/a85c2853.jpg","comment_is_top":false,"comment_ctime":1545959107,"is_pvip":false,"replies":[{"id":"19849","content":"这句话或文本是精确匹配吗？如果是精确匹配，处理和单词是一样的。如果不是，我的理解你是想把一段文字里的敏感词替换掉？可以先进行分词（如果必要），然后将每个词和字典里的敏感词比较","user_name":"作者回复","user_name_real":"黄申","uid":"1275061","ctime":1545962895,"ip_address":"","comment_id":54747,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1545959107","product_id":100021201,"comment_content":"针对第二个例子我有一个扩展更为实际一点可就是不知道怎么提高效率，那就是被查找的那个字符串不是一个词条而是一句话或者一段文本，这个词典是一个敏感词集合，如何快速提取出来或者查找替换掉文本中的敏感词呢？单词查找其实办法很多只是文本查找有些困扰了","like_count":0,"discussions":[{"author":{"id":1275061,"avatar":"https://static001.geekbang.org/account/avatar/00/13/74/b5/b68e3740.jpg","nickname":"黄申","note":"","ucode":"EE9AC074A322FF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":434551,"discussion_content":"这句话或文本是精确匹配吗？如果是精确匹配，处理和单词是一样的。如果不是，我的理解你是想把一段文字里的敏感词替换掉？可以先进行分词（如果必要），然后将每个词和字典里的敏感词比较","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1545962895,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":53738,"user_name":"Acrofrank","can_delete":false,"product_type":"c1","uid":1242227,"ip_address":"","ucode":"A168E89336225A","user_header":"https://static001.geekbang.org/account/avatar/00/12/f4/73/3de86e77.jpg","comment_is_top":false,"comment_ctime":1545717238,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1545717238","product_id":100021201,"comment_content":"牛顿迭代法时间复杂度和精度关系大概是怎样一脸疑惑","like_count":0},{"had_liked":false,"id":53414,"user_name":"Julian","can_delete":false,"product_type":"c1","uid":1331563,"ip_address":"","ucode":"451287999E982F","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJcqPrJEUz4PWI9fNOCFwPQ9SYZ9Sk7jcfLBl9IZSa0eCCibqKOO3FoaPZEB6ZiaWO7S1fTJ7nA3dNw/132","comment_is_top":false,"comment_ctime":1545640329,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1545640329","product_id":100021201,"comment_content":"03 | 迭代法：不用编程语言的自带函数，你会如何计算平方根学习总结；<br><br>一、相对误差要比绝对误差更具有可信度； 相对误差 = （测量值 - 实际真实值)&#47;实际真实值 =(测量值&#47;实际真实值) -1;    绝对误差 = 测量值 - 实际真实值；<br><br>二、程序最好还是要逻辑控制，不要一味想着原理上不会出现问题或者怎么样。毕竟代码在计算机运行时候的情况谁都不可能知道。","like_count":0},{"had_liked":false,"id":52849,"user_name":"何文策","can_delete":false,"product_type":"c1","uid":1356325,"ip_address":"","ucode":"AF71102062E6B6","user_header":"https://static001.geekbang.org/account/avatar/00/14/b2/25/73511ba9.jpg","comment_is_top":false,"comment_ctime":1545540484,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1545540484","product_id":100021201,"comment_content":"&#47;**<br>\t * 求一个数的平方根<br>\t * @param n<br>\t * @return<br>\t *&#47;<br>\tprivate static double sqrt(int n) {<br>\t\tif (n &lt;= 1) {  &#47;&#47; 0 and 1<br>\t\t\treturn n;<br>\t\t}<br>\t\treturn sqrt2(n, 1, n, 100);<br>\t}<br>\t<br>\tprivate static double sqrt2(int n, double min, double max, int count) {<br>\t\tdouble val = (min + max) &#47; 2d;<br>\t\t<br>\t\tif (count == 0) {<br>\t\t\treturn val;<br>\t\t}<br>\t\t<br>\t\tdouble result = val * val;<br>\t\tif (result == n) {<br>\t\t\treturn val;<br>\t\t} else if (result &gt; n) { &#47;&#47; 值大了,在小的范围中找<br>\t\t\treturn sqrt2(n, min, val, count - 1);<br>\t\t} else {&#47;&#47; 值小了,在大的范围中找<br>\t\t\treturn sqrt2(n, val, max, count - 1);<br>\t\t}<br>\t}","like_count":0},{"had_liked":false,"id":50786,"user_name":"Neo_Zhang","can_delete":false,"product_type":"c1","uid":1175689,"ip_address":"","ucode":"92FFEFE7905AE9","user_header":"https://static001.geekbang.org/account/avatar/00/11/f0/89/25899406.jpg","comment_is_top":false,"comment_ctime":1545046099,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1545046099","product_id":100021201,"comment_content":"曾经写的小demo中经常会用到迭代法，在此我理解的迭代法就是重复执行做一件事，例如 重复查询一个数组中的值，重复遍历一个map。可以说这是个应用次数非常多的方法。","like_count":0},{"had_liked":false,"id":50670,"user_name":"代码世界没有爱情","can_delete":false,"product_type":"c1","uid":1345493,"ip_address":"","ucode":"3AB6EE5E0B6773","user_header":"","comment_is_top":false,"comment_ctime":1545027842,"is_pvip":false,"replies":[{"id":"18297","content":"也是可以的","user_name":"作者回复","user_name_real":"Sean","uid":"1275061","ctime":1545059415,"ip_address":"","comment_id":50670,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1545027842","product_id":100021201,"comment_content":"如何用递归函数来实现二分查找的思想呢。。","like_count":0,"discussions":[{"author":{"id":1275061,"avatar":"https://static001.geekbang.org/account/avatar/00/13/74/b5/b68e3740.jpg","nickname":"黄申","note":"","ucode":"EE9AC074A322FF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":433056,"discussion_content":"也是可以的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1545059415,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":50654,"user_name":"Once I","can_delete":false,"product_type":"c1","uid":1111153,"ip_address":"","ucode":"A498715BC49C24","user_header":"https://static001.geekbang.org/account/avatar/00/10/f4/71/c09989ae.jpg","comment_is_top":false,"comment_ctime":1545024446,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1545024446","product_id":100021201,"comment_content":"java 中的递归算法，经常用在查询网页菜单功能的时候用到，但这个方法有一个不足之处就是容易产生死循环，不过我们可以通过控制菜单层数来避免死循环","like_count":0},{"had_liked":false,"id":50653,"user_name":"Once I","can_delete":false,"product_type":"c1","uid":1111153,"ip_address":"","ucode":"A498715BC49C24","user_header":"https://static001.geekbang.org/account/avatar/00/10/f4/71/c09989ae.jpg","comment_is_top":false,"comment_ctime":1545024253,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1545024253","product_id":100021201,"comment_content":"java递归算不算","like_count":0},{"had_liked":false,"id":50183,"user_name":"永旭","can_delete":false,"product_type":"c1","uid":1068819,"ip_address":"","ucode":"C9C74BE32C8F46","user_header":"https://static001.geekbang.org/account/avatar/00/10/4f/13/5197f8d2.jpg","comment_is_top":false,"comment_ctime":1544888711,"is_pvip":false,"replies":[{"id":"18040","content":"这是因为我们求的是10的平方根，如果你换个大一些的数值就会不同","user_name":"作者回复","user_name_real":"Sean","uid":"1275061","ctime":1544936623,"ip_address":"","comment_id":50183,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1544888711","product_id":100021201,"comment_content":"老师你好，为什么用相对误差 和 绝对误差算出来的值几乎一样呢 ？？","like_count":0,"discussions":[{"author":{"id":1275061,"avatar":"https://static001.geekbang.org/account/avatar/00/13/74/b5/b68e3740.jpg","nickname":"黄申","note":"","ucode":"EE9AC074A322FF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":432907,"discussion_content":"这是因为我们求的是10的平方根，如果你换个大一些的数值就会不同","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1544936623,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":50097,"user_name":"巴黎夜雨","can_delete":false,"product_type":"c1","uid":1330432,"ip_address":"","ucode":"87C76C5CCC9374","user_header":"https://static001.geekbang.org/account/avatar/00/14/4d/00/c14b4c11.jpg","comment_is_top":false,"comment_ctime":1544866007,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1544866007","product_id":100021201,"comment_content":"根据阈值进行迭代，输出最优解。","like_count":0},{"had_liked":false,"id":50096,"user_name":"巴黎夜雨","can_delete":false,"product_type":"c1","uid":1330432,"ip_address":"","ucode":"87C76C5CCC9374","user_header":"https://static001.geekbang.org/account/avatar/00/14/4d/00/c14b4c11.jpg","comment_is_top":false,"comment_ctime":1544865981,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1544865981","product_id":100021201,"comment_content":"根据阈值，进行迭代求出最优解","like_count":0},{"had_liked":false,"id":49964,"user_name":"唯她命","can_delete":false,"product_type":"c1","uid":1240398,"ip_address":"","ucode":"8F687E8D306840","user_header":"https://static001.geekbang.org/account/avatar/00/12/ed/4e/ef406442.jpg","comment_is_top":false,"comment_ctime":1544799216,"is_pvip":false,"replies":[{"id":"17992","content":"都可以 一个是按照相对误差，一个是绝对误差，可以根据具体需求来","user_name":"作者回复","user_name_real":"Sean","uid":"1275061","ctime":1544804015,"ip_address":"","comment_id":49964,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1544799216","product_id":100021201,"comment_content":"求一个数的平方根的那段代码中的第18行double delta = Math.abs((square &#47; n) - 1);  <br>写成double delta = Math.abs(n - square)不是更简单吗;  ","like_count":0,"discussions":[{"author":{"id":1275061,"avatar":"https://static001.geekbang.org/account/avatar/00/13/74/b5/b68e3740.jpg","nickname":"黄申","note":"","ucode":"EE9AC074A322FF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":432817,"discussion_content":"都可以 一个是按照相对误差，一个是绝对误差，可以根据具体需求来","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1544804015,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":49956,"user_name":"寒潭鹤影","can_delete":false,"product_type":"c1","uid":1127536,"ip_address":"","ucode":"96726448F442E4","user_header":"https://static001.geekbang.org/account/avatar/00/11/34/70/8100642d.jpg","comment_is_top":false,"comment_ctime":1544797877,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1544797877","product_id":100021201,"comment_content":"和大三上学期学的科学计算方法一样，只是少了表达式和推导，😀我们老师要求的是用MATLAB实现计算。","like_count":0},{"had_liked":false,"id":49808,"user_name":"Only now","can_delete":false,"product_type":"c1","uid":1038574,"ip_address":"","ucode":"C617473A03AE27","user_header":"https://static001.geekbang.org/account/avatar/00/0f/d8/ee/6e7c2264.jpg","comment_is_top":false,"comment_ctime":1544772544,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1544772544","product_id":100021201,"comment_content":"最普遍的求极值<br>","like_count":0},{"had_liked":false,"id":49732,"user_name":"一步","can_delete":false,"product_type":"c1","uid":1005391,"ip_address":"","ucode":"73CEA468CE70C3","user_header":"https://static001.geekbang.org/account/avatar/00/0f/57/4f/6fb51ff1.jpg","comment_is_top":false,"comment_ctime":1544758483,"is_pvip":true,"discussion_count":0,"race_medal":1,"score":"1544758483","product_id":100021201,"comment_content":"这里的迭代法代表着 不断的进行计算直到得到想要的结果","like_count":0},{"had_liked":false,"id":49696,"user_name":"zhang zining","can_delete":false,"product_type":"c1","uid":1236013,"ip_address":"","ucode":"8D13FC23FCA1A1","user_header":"https://static001.geekbang.org/account/avatar/00/12/dc/2d/af295d50.jpg","comment_is_top":false,"comment_ctime":1544753281,"is_pvip":false,"replies":[{"id":"17903","content":"我使用了误差占原值的百分比，来控制迭代的结束","user_name":"作者回复","user_name_real":"Sean","uid":"1275061","ctime":1544758401,"ip_address":"","comment_id":49696,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1544753281","product_id":100021201,"comment_content":"没有看懂求平方根那里的abs(middle*middle&#47;n-1)的用意","like_count":0,"discussions":[{"author":{"id":1275061,"avatar":"https://static001.geekbang.org/account/avatar/00/13/74/b5/b68e3740.jpg","nickname":"黄申","note":"","ucode":"EE9AC074A322FF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":432729,"discussion_content":"我使用了误差占原值的百分比，来控制迭代的结束","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1544758401,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":49642,"user_name":"隔壁的小王","can_delete":false,"product_type":"c1","uid":1110269,"ip_address":"","ucode":"DFEA703CF1268D","user_header":"https://static001.geekbang.org/account/avatar/00/10/f0/fd/f01ea39d.jpg","comment_is_top":false,"comment_ctime":1544749422,"is_pvip":false,"replies":[{"id":"17881","content":"我这里的迭代是广义的，不局限于编程里的迭代实现。从这个角度看，递归和循环的实现都体现了迭代的思想","user_name":"作者回复","user_name_real":"Sean","uid":"1275061","ctime":1544750844,"ip_address":"","comment_id":49642,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1544749422","product_id":100021201,"comment_content":"按理说递归或者循环都算是迭代","like_count":0,"discussions":[{"author":{"id":1275061,"avatar":"https://static001.geekbang.org/account/avatar/00/13/74/b5/b68e3740.jpg","nickname":"黄申","note":"","ucode":"EE9AC074A322FF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":432698,"discussion_content":"我这里的迭代是广义的，不局限于编程里的迭代实现。从这个角度看，递归和循环的实现都体现了迭代的思想","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1544750844,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":49630,"user_name":"seleven","can_delete":false,"product_type":"c1","uid":1338701,"ip_address":"","ucode":"B4D84E6B930448","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/SsJajvXghPMDicSuOcx54mV6L9zv4KSKM2bKY0gsUdAH3oGCWzfRv9Q9HRljic2IvHzYFpRECp8SXGWhiaqGWFTKg/132","comment_is_top":false,"comment_ctime":1544748355,"is_pvip":false,"replies":[{"id":"17868","content":"是的👍","user_name":"作者回复","user_name_real":"Sean","uid":"1275061","ctime":1544750312,"ip_address":"","comment_id":49630,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1544748355","product_id":100021201,"comment_content":"编程实现求平方根的方式主要有三种：二分法，牛顿迭代法，弦割法😄","like_count":0,"discussions":[{"author":{"id":1275061,"avatar":"https://static001.geekbang.org/account/avatar/00/13/74/b5/b68e3740.jpg","nickname":"黄申","note":"","ucode":"EE9AC074A322FF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":432693,"discussion_content":"是的👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1544750312,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":49627,"user_name":"方向","can_delete":false,"product_type":"c1","uid":1261031,"ip_address":"","ucode":"CBB283D30C8C09","user_header":"https://static001.geekbang.org/account/avatar/00/13/3d/e7/e4b4afcc.jpg","comment_is_top":false,"comment_ctime":1544748045,"is_pvip":false,"replies":[{"id":"17869","content":"具体是哪种排序算法？","user_name":"作者回复","user_name_real":"Sean","uid":"1275061","ctime":1544750334,"ip_address":"","comment_id":49627,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1544748045","product_id":100021201,"comment_content":"单词排序？","like_count":0,"discussions":[{"author":{"id":1275061,"avatar":"https://static001.geekbang.org/account/avatar/00/13/74/b5/b68e3740.jpg","nickname":"黄申","note":"","ucode":"EE9AC074A322FF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":432691,"discussion_content":"具体是哪种排序算法？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1544750334,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":49611,"user_name":"多襄丸","can_delete":false,"product_type":"c1","uid":1074310,"ip_address":"","ucode":"1AA1497C5A293C","user_header":"https://static001.geekbang.org/account/avatar/00/10/64/86/f5a9403a.jpg","comment_is_top":false,"comment_ctime":1544747010,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1544747010","product_id":100021201,"comment_content":"迭代法，优点：代码写的少，比循环少多了。<br>时间复杂度低，为log(2n)<br>缺点：容易陷入死循环","like_count":0},{"had_liked":false,"id":49600,"user_name":"1","can_delete":false,"product_type":"c1","uid":1340241,"ip_address":"","ucode":"5ADBA094E7E932","user_header":"https://static001.geekbang.org/account/avatar/00/14/73/51/e3e45b3f.jpg","comment_is_top":false,"comment_ctime":1544745961,"is_pvip":false,"replies":[{"id":"17876","content":"请问具体哪方面的书籍？","user_name":"作者回复","user_name_real":"Sean","uid":"1275061","ctime":1544750575,"ip_address":"","comment_id":49600,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1544745961","product_id":100021201,"comment_content":"老师能否推荐一些书籍资料等，谢谢","like_count":0,"discussions":[{"author":{"id":1275061,"avatar":"https://static001.geekbang.org/account/avatar/00/13/74/b5/b68e3740.jpg","nickname":"黄申","note":"","ucode":"EE9AC074A322FF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":432681,"discussion_content":"请问具体哪方面的书籍？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1544750575,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":49599,"user_name":"1","can_delete":false,"product_type":"c1","uid":1340241,"ip_address":"","ucode":"5ADBA094E7E932","user_header":"https://static001.geekbang.org/account/avatar/00/14/73/51/e3e45b3f.jpg","comment_is_top":false,"comment_ctime":1544745703,"is_pvip":false,"replies":[{"id":"17873","content":"对 搜索数值空间的时候默认就排好了，我只是强调一下如果是其他空间，无序的话要先排序","user_name":"作者回复","user_name_real":"Sean","uid":"1275061","ctime":1544750486,"ip_address":"","comment_id":49599,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1544745703","product_id":100021201,"comment_content":"这个方法的整体思路和二分法求解平方根是一致的，主要区别有两个方面：第一，每次判断是否终结迭代的条件不同。求平方根的时候，我们需要判断某个数的平方是否和输入的数据一致。而这里，我们需要判断字典中某个单词是否和待查的单词相同。第二，二分查找需要确保被搜索的空间是有序的。<br><br>请问老师，第二条中，求近似值的时候不是也是有序的吗","like_count":0,"discussions":[{"author":{"id":1275061,"avatar":"https://static001.geekbang.org/account/avatar/00/13/74/b5/b68e3740.jpg","nickname":"黄申","note":"","ucode":"EE9AC074A322FF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":432680,"discussion_content":"对 搜索数值空间的时候默认就排好了，我只是强调一下如果是其他空间，无序的话要先排序","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1544750486,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]}]}