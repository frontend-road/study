{"id":104436,"title":"21 | 图形界面程序的框架","content":"<p>你好，我是七牛云许式伟。</p><p>上一讲我们回顾了交互的演化历程。今天，我们将关注点收敛到现在仍然占主流地位的图形界面程序。它的结构如下图所示。</p><p><img src=\"https://static001.geekbang.org/resource/image/b8/c5/b8063e7ac32e854676b640c86d4628c5.png?wh=1841*1172\" alt=\"\"></p><p>实现一个图形界面程序，最大的复杂性在于不同操作系统的使用接口完全不同，差异非常巨大。这给开发一个跨平台的图形界面程序带来巨大挑战。</p><p>好在，尽管操作系统的使用接口有异，但基本的大逻辑差不多。今天我们从统一的视角来看待，谈谈图形界面程序的框架。</p><h2>事件</h2><p>无论是什么桌面操作系统，每个进程都有一个全局的事件队列（Event Queue）。当我们在键盘上按了一个键、移动或者点击鼠标、触摸屏幕等等，都会产生一个事件（Event），并由操作系统负责将它扔到进程的事件队列。整个过程大体如下。</p><ul>\n<li>键盘、鼠标、触摸屏等硬件产生了一个硬件中断；</li>\n<li>操作系统的硬件中断处理程序收到对应的事件（Event）；</li>\n<li>确定该事件的目标进程；</li>\n<li>将事件放入目标进程的事件队列（Event Queue）。</li>\n</ul><h2>窗口与事件响应</h2><p>窗口（Window），也有人会把它叫视图（View），是一个独立可复用的界面元素（UI Element）。一个窗口响应发送给它的事件（Event），修改内部的状态，然后调用 GDI 绘制子系统更新界面显示。</p><p><strong>响应事件的常见机制有两种。</strong></p><!-- [[[read_end]]] --><p><strong>一种是事件处理类</strong>（EventHandler，在 iOS 中叫 Responder）。通常，我们自定义的窗口类会直接或间接从事件处理类继承。Windows 平台有些特殊，为了让窗口类可复用，且与语言无关，它将事件处理做成了回调函数，术语叫窗口过程（WindowProc）。这只是形式上的不同，并无本质差异。</p><p><strong>另一种是用委托</strong>（delegate）。顾名思义，用委托的意思是事件处理不是收到事件的人自己来做，而是把它委托给了别人。这只是一种编程的手法。比如，在 Web 编程中我们给一个界面元素（UI Element）实现 onclick 方法，这可以理解为是一种委托（delegate）。</p><p>有一个事件比较特殊，它往往被叫做 onPaint 或 onDraw。为什么会有这样的事件？我们想象一下，当一个窗口在另一个窗口的上面，并且我们移动其中一个窗口时，部分被遮挡的窗口内容会显露出来。</p><p>这个过程我们可能觉得很自然，但实际上，操作系统并不会帮我们保存被遮挡的窗口内容，而是发送 onPaint 事件给对应的窗口让它重新绘制。</p><p>另外，不只是窗口可以响应事件，应用程序（Application）也可以。因为有一些事件并不是发送给窗口的，而是发给应用程序的，比如：本进程即将被杀死、手机低电量告警等等。</p><p>当然如果我们约定一定存在一个主窗口（Main Window），那么把应用程序级别的事件理解为是发给主窗口的也可以。</p><h2>事件分派</h2><p>事件是怎么从全局的事件队列（Event Queue）到窗口的呢？</p><p>这就是事件分派（Event Dispatch）过程，它通常由一个事件分派循环（Event Dispatch Loop）来完成。一些平台把这个过程隐藏起来，直接提供一个类似 RunLoop 这样的函数。也有一些平台则让你自己实现。</p><p>例如，对于 Windows 平台，它把事件叫消息（Message），事件分派循环的代码看起来是这样的：</p><pre><code>func RunLoop() {\n  for {\n    msg, ok := winapi.GetMessage() // 从事件队列中取出一个消息\n    if !ok {\n      break\n    }\n    winapi.TranslateMessage(msg)\n    winapi.DispatchMessage(msg)\n  }\n}\n</code></pre><p>大体来说，就是一个简单的取消息（GetMessage）然后对消息进行分派（DispatchMessage）的过程。其中 TranslateMessage 函数你可能比较陌生，它负责的是将键盘按键事件（onKeyDown、onKeyUp）转化为字符事件（onChar）。</p><p>窗口有了父子和兄弟关系，就有了窗口系统。一旦界面涉及复杂的窗口系统，交互变得更为复杂。事件分派过程怎么知道应该由哪个窗口响应事件呢？</p><p>这就是事件处理链（EventHandler Chain）。</p><p>不同事件的分派过程并不一样。</p><p>对于鼠标或者触摸屏的触摸事件，事件的响应方理应是事件发生处所在的窗口。但也会有一些例外的场景，比如拖放。为了支持拖放，Windows 系统引入了鼠标捕获（Mouse Capture）的概念，一旦鼠标被某个窗口捕获，哪怕鼠标已经移出该窗口，事件仍然会继续发往该窗口。</p><p>对于键盘事件（onKeyDown/onKeyUp/onChar），则通常焦点窗口先响应，如果它不感兴趣再逐层上升，直到最顶层的窗口。</p><p><strong>键盘从功能上来说，有两个不同的能力：其一是输入文本，其二是触发命令。</strong>从输入文本的角度来说，要有一个输入光标（在Windows里面叫Caret）来指示输入的目的窗口。目的窗口也必然是焦点窗口，否则就会显得很不自然。</p><p>但是从触发命令的角度来说，命令的响应并不一定是在焦点窗口，甚至不一定在活跃窗口。比如Windows下就有热键（HotKey）的概念，能够让非活跃窗口（Inactive Window）也获得响应键盘命令的机会。一个常见的例子是截屏软件，它往往需要一个热键来触发截屏。</p><p>到了移动时代，键盘不再是交互主体，但是，键盘作为输入文本的能力很难被替代（虽然有语音输入法），于是它便自然而然地保留下来。</p><p>不过在移动设备里，不太会有人会基于键盘来触发命令，只有常见的热键需求比如截屏、调大/调小音量、拍照等等，被设计为系统功能（对应的，这些功能的热键也被设计为系统按键）保留下来。</p><h2>窗口内容绘制</h2><p>在收到 onPaint 或 onDraw 消息时，我们就要绘制我们的窗口内容了，这时就需要操作系统的 GDI 子系统。</p><p>从大分类来说，我们首先要确定要绘制的内容是 2D 还是 3D 的。对于 2D 内容，操作系统 GDI 子系统往往有较好的支持，但是不同平台终究还是会有较大的差异。而对于 3D 内容来说，OpenGL 这样的跨平台方案占据了今天的主流市场，而 Vulkan 号称是 NextGL（下一代的 OpenGL），其潜力同样不容小觑。</p><p>从跨平台的难易程度来说，不同平台的 GDI 子系统往往概念上大同小异，相比整个桌面应用程序框架而言，更加容易抽象出跨平台的编程接口。</p><p>从另一个角度来说，GDI 是操作系统性能要求最高、最耗电的子系统。所以 GDI 优化往往通过硬件加速来完成，真正的关键角色是在硬件厂商这里。由此观之，由硬件厂商来推跨平台的 GDI 硬件加速方案可能会成为趋势。</p><h2>通用控件</h2><p>有了以上这些内容，窗口系统本身已经完备，我们就可以实现一个任意复杂的桌面应用程序了。</p><p>但是，为了进一步简化开发过程，操作系统往往还提供了一些通用的界面元素，通常我们称之为控件(Control)。常见的控件有如下这些：</p><ul>\n<li>静态文本 (Label)；</li>\n<li>按钮 (Button)；</li>\n<li>单选框 (RadioBox)；</li>\n<li>复选框 (CheckBox)；</li>\n<li>输入框 (Input，也叫EditBox/EditText)；</li>\n<li>进度条 (ProgressBar)；</li>\n<li>等等。</li>\n</ul><p>不同操作系统提供的基础控件大同小异。不过一些处理细节上的差异往往会成为跨平台开发的坑，如果你希望一份代码多平台使用，在这方面就需要谨慎处理。</p><h2>结语</h2><p>总结来说，桌面应用程序通常由用户交互所驱动。我们身处在由操作系统约定的编程框架中，这是桌面编程的特点。</p><p>在操作系统的所有子系统中，交互相关的子系统是毫无疑问的差异性最大的子系统。我们这里列了一个简单的对比表格：</p><p><img src=\"https://static001.geekbang.org/resource/image/12/fd/124a93704283b082ecda38c1f0c3c9fd.jpg?wh=1143*663\" alt=\"\"></p><p>这还不是差异的全部。要做一个跨平台的桌面应用程序并不容易。我们需要面对的平台太多，简单罗列，如下所示。</p><ul>\n<li>PC：Windows、MacOS、Linux 等；</li>\n<li>PC 浏览器：Chrome、Safri、Firefox 等；</li>\n<li>手机/平板/手表：Android（不同手机厂商也会有细节差异）、iOS 等；</li>\n<li>小程序：微信、支付宝、快应用等。</li>\n</ul><p>怎么安排不同平台的优先级？怎么规划未来版本的迭代计划？选择什么样的跨平台方案？这些问题在业务架构之外，但极其考验架构师的决策能力。</p><p>如果你对今天的内容有什么思考与解读，欢迎给我留言，我们一起讨论。下一讲我们将聊聊 “桌面程序的架构建议”。</p><p>如果你觉得有所收获，也欢迎把文章分享给你的朋友。感谢你的收听，我们下期再见。</p>","comments":[{"had_liked":false,"id":109785,"user_name":"sam","can_delete":false,"product_type":"c1","uid":1000417,"ip_address":"","ucode":"8D48F4B9045947","user_header":"https://static001.geekbang.org/account/avatar/00/0f/43/e1/b7be5560.jpg","comment_is_top":false,"comment_ctime":1562114262,"is_pvip":false,"replies":[{"id":"39780","content":"以上两讲是基础的背景知识，下一讲更为关键一些。","user_name":"作者回复","comment_id":109785,"uid":"1228022","ip_address":"","utype":1,"ctime":1562119336,"user_name_real":"许式伟-七牛云(已满)"}],"discussion_count":1,"race_medal":0,"score":"53101721814","product_id":100025201,"comment_content":"高屋建瓴的视觉，大部分做应用层开发的同学缺乏这个视角的了解，感谢许老师！<br><br>是不是只有从这个角度了解了系统，才能更好的开发一套应用系统出来？还需要哪些知识的了解？","like_count":13,"discussions":[{"author":{"id":1228022,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bc/f6/e61d4b8f.jpg","nickname":"许式伟-七牛云(已满)","note":"","ucode":"1A2F8AA6F6DB54","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":456570,"discussion_content":"以上两讲是基础的背景知识，下一讲更为关键一些。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1562119336,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":109656,"user_name":"lckfa李钊","can_delete":false,"product_type":"c1","uid":1356899,"ip_address":"","ucode":"AD13D205104AA6","user_header":"https://static001.geekbang.org/account/avatar/00/14/b4/63/84960032.jpg","comment_is_top":false,"comment_ctime":1562072250,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"40216777914","product_id":100025201,"comment_content":"最近在研究Google的flutter框架，凭着其一统桌面端开发的野心，就值得好好学习下。从开发语言到框架都不同以往。不过本着太阳下没有新事物的原则，从消息循环到事件的响应开始深挖型学习，一切问题都不是事了。","like_count":9},{"had_liked":false,"id":109332,"user_name":"tokamak","can_delete":false,"product_type":"c1","uid":1047341,"ip_address":"","ucode":"1726B6FC06AC3C","user_header":"https://static001.geekbang.org/account/avatar/00/0f/fb/2d/e6548e48.jpg","comment_is_top":false,"comment_ctime":1562010957,"is_pvip":true,"replies":[{"id":"39578","content":"qt 的 signal-slot 其实就是一种 delegate 机制","user_name":"作者回复","comment_id":109332,"uid":"1228022","ip_address":"","utype":1,"ctime":1562022684,"user_name_real":"许式伟-七牛云(已满)"}],"discussion_count":1,"race_medal":0,"score":"31626782029","product_id":100025201,"comment_content":"许老师，你好。Qt里面的信号和槽机制非常好用，实现了两个对象的同步通信和异步通信。您觉得信号和槽的性能和实时性怎么样？","like_count":7,"discussions":[{"author":{"id":1228022,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bc/f6/e61d4b8f.jpg","nickname":"许式伟-七牛云(已满)","note":"","ucode":"1A2F8AA6F6DB54","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":456361,"discussion_content":"qt 的 signal-slot 其实就是一种 delegate 机制","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1562022684,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":112511,"user_name":"程序员小跃","can_delete":false,"product_type":"c1","uid":1015483,"ip_address":"","ucode":"25BB96E0791A60","user_header":"https://static001.geekbang.org/account/avatar/00/0f/7e/bb/947c329a.jpg","comment_is_top":false,"comment_ctime":1562749016,"is_pvip":true,"discussion_count":1,"race_medal":0,"score":"23037585496","product_id":100025201,"comment_content":"如果不是当初开发过Android App，这一节课的知识，看起来就不会那么顺了。事件分发、Looper、控件等等，庆幸自己搞过客户端开发","like_count":6,"discussions":[{"author":{"id":1161584,"avatar":"https://static001.geekbang.org/account/avatar/00/11/b9/70/c454312c.jpg","nickname":"早早凡","note":"","ucode":"4AA7CAB2CAF20D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":6781,"discussion_content":"很熟悉，然后抽象本质组成部分和其他平台对比，相同的就是客户端ui的本质需求和实现了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567095108,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":110850,"user_name":"Geek_88604f","can_delete":false,"product_type":"c1","uid":1501234,"ip_address":"","ucode":"33DD1318E53814","user_header":"","comment_is_top":false,"comment_ctime":1562376956,"is_pvip":false,"replies":[{"id":"40334","content":"下一讲会谈这个话题","user_name":"作者回复","comment_id":110850,"uid":"1228022","ip_address":"","utype":1,"ctime":1562408981,"user_name_real":"许式伟-七牛云(已满)"}],"discussion_count":2,"race_medal":0,"score":"18742246140","product_id":100025201,"comment_content":"GUI程序逐渐被WEB应用程序替代，这里有哪些原因，许老师？","like_count":4,"discussions":[{"author":{"id":1228022,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bc/f6/e61d4b8f.jpg","nickname":"许式伟-七牛云(已满)","note":"","ucode":"1A2F8AA6F6DB54","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":457090,"discussion_content":"下一讲会谈这个话题","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1562408981,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1161584,"avatar":"https://static001.geekbang.org/account/avatar/00/11/b9/70/c454312c.jpg","nickname":"早早凡","note":"","ucode":"4AA7CAB2CAF20D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":6780,"discussion_content":"不只是单纯的web，而是类似于小程序，跨平台，轻量级，模板快速开发，而且能拿到超级应用生态的用户，链接，流量。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567094962,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":110016,"user_name":"Akon Convict","can_delete":false,"product_type":"c1","uid":1044453,"ip_address":"","ucode":"364E1CA9F347C7","user_header":"https://static001.geekbang.org/account/avatar/00/0f/ef/e5/7ee97c9a.jpg","comment_is_top":false,"comment_ctime":1562151221,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"18742020405","product_id":100025201,"comment_content":"醍醐灌顶 ，底层系统设计的思想大体是一致的！","like_count":4},{"had_liked":false,"id":109642,"user_name":"ljf10000","can_delete":false,"product_type":"c1","uid":1494064,"ip_address":"","ucode":"44957329A61EAE","user_header":"https://wx.qlogo.cn/mmopen/vi_32/DYAIOgq83eop9WylZJicLQ5wib49kcMPqCTRT1aThh6mMAVl6qseLwbVOLhicVLjZCxCoyQd5CrrHHibs2CVPaoK3g/132","comment_is_top":false,"comment_ctime":1562070928,"is_pvip":false,"replies":[{"id":"39690","content":"以上过程有省略，操作系统一级也是有键盘事件缓存的。有时候系统比较卡的时候我们按键盘主机的内置会有提示音，这是操作系统键盘缓冲满你的按键被丢弃的意思。至于确定目标窗口存在误差，这个从交互来说不是大问题","user_name":"作者回复","comment_id":109642,"uid":"1228022","ip_address":"","utype":1,"ctime":1562077009,"user_name_real":"许式伟-七牛云(已满)"}],"discussion_count":1,"race_medal":0,"score":"14446972816","product_id":100025201,"comment_content":"“操作系统的硬件中断处理程序收到对应的事件（Event）；<br>确定该事件的目标进程；”<br><br>如何确定目标进程呢？中断处理过程中获取当前系统的焦点进程？这里会有时间差啊。<br><br>如果我按了alt+F4本意是关闭当前程序，而按键前后被病毒或流氓软件弹出新的窗口（独立进程），那么关闭的是谁？","like_count":4,"discussions":[{"author":{"id":1228022,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bc/f6/e61d4b8f.jpg","nickname":"许式伟-七牛云(已满)","note":"","ucode":"1A2F8AA6F6DB54","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":456493,"discussion_content":"以上过程有省略，操作系统一级也是有键盘事件缓存的。有时候系统比较卡的时候我们按键盘主机的内置会有提示音，这是操作系统键盘缓冲满你的按键被丢弃的意思。至于确定目标窗口存在误差，这个从交互来说不是大问题","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1562077009,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":110253,"user_name":"靠人品去赢","can_delete":false,"product_type":"c1","uid":1301286,"ip_address":"","ucode":"7A20F9EBE847E1","user_header":"https://static001.geekbang.org/account/avatar/00/13/db/26/54f2c164.jpg","comment_is_top":false,"comment_ctime":1562214855,"is_pvip":false,"replies":[{"id":"40013","content":"后面会谈跨平台","user_name":"作者回复","comment_id":110253,"uid":"1228022","ip_address":"","utype":1,"ctime":1562232520,"user_name_real":"许式伟-七牛云(已满)"}],"discussion_count":1,"race_medal":0,"score":"10152149447","product_id":100025201,"comment_content":"老师，如果做一个大的中间层来处理系统差异（类似硬件中我们处理硬件差异，驱动管理一样）。每个系统对应一个驱动来处理跨平台，会不会好一点，这种方案难点在哪？像Java，flutter跨平台的原理？","like_count":2,"discussions":[{"author":{"id":1228022,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bc/f6/e61d4b8f.jpg","nickname":"许式伟-七牛云(已满)","note":"","ucode":"1A2F8AA6F6DB54","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":456788,"discussion_content":"后面会谈跨平台","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1562232520,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":125148,"user_name":"wentworthhu","can_delete":false,"product_type":"c1","uid":1634448,"ip_address":"","ucode":"025A51B6564B8B","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/z7tEbRbmB8IfndSnrqvjM8EC0YOWKn5DBoOGtlsAZict2ckulruR5pXw94kiaSaCoy8HFib6eJvTqiaED6DstOpKzQ/132","comment_is_top":false,"comment_ctime":1566100041,"is_pvip":false,"replies":[{"id":"45959","content":"这里gdi是泛指。opengl也是一种gdi接口。","user_name":"作者回复","comment_id":125148,"uid":"1228022","ip_address":"","utype":1,"ctime":1566130702,"user_name_real":"许式伟-七牛云(已满)"}],"discussion_count":1,"race_medal":0,"score":"5861067337","product_id":100025201,"comment_content":"老师，文章中提到“修改内部的状态，然后调用 GDI 绘制子系统更新界面显示”，其中涉及的GDI，我理解特指windows上。前面提到的Event等都不区分操作系统的，为啥提到图形绘制说GDI，那OpenGL不也是一种吗？为啥此处特指GDI呢，有点困惑。","like_count":1,"discussions":[{"author":{"id":1228022,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bc/f6/e61d4b8f.jpg","nickname":"许式伟-七牛云(已满)","note":"","ucode":"1A2F8AA6F6DB54","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":463453,"discussion_content":"这里gdi是泛指。opengl也是一种gdi接口。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566130702,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":109342,"user_name":"Aaron Cheung","can_delete":false,"product_type":"c1","uid":1079816,"ip_address":"","ucode":"03972759C53667","user_header":"https://static001.geekbang.org/account/avatar/00/10/7a/08/4d3e47dd.jpg","comment_is_top":false,"comment_ctime":1562023533,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5856990829","product_id":100025201,"comment_content":"打卡21 这方面还没有思考总结过","like_count":1},{"had_liked":false,"id":287000,"user_name":"不温暖啊不纯良","can_delete":false,"product_type":"c1","uid":2079117,"ip_address":"","ucode":"204474A214E00C","user_header":"https://static001.geekbang.org/account/avatar/00/1f/b9/8d/00bded19.jpg","comment_is_top":false,"comment_ctime":1617721229,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1617721229","product_id":100025201,"comment_content":"窗口与窗口之间的协作是通过操作系统来完成的,操作系统在这里起到了一个中间人的功能,但是你要是光看窗口系统本身是构很简洁的,一个四方形,通过事件来完成放大&#47;缩小&#47;拖拽&#47;渲染内容,然后外加一个可复用,就能够满足几乎所有的用户操作,这个事情本身就很神奇,要是不了解其中的原理,会觉得窗户系统就是整个互联网.错综复杂.<br> <br>它的设计有点像,把人的视觉范围用一个框子框起来,现实中人要切换视角,需要扭头,而在计算机上,连扭头都不用. 相似的是,人的大脑就像是操作系统,当需要切换视角,大脑会调用颈部神经和肌肉,进行转动,这里的触发器是一个念头.","like_count":1,"discussions":[{"author":{"id":1140080,"avatar":"https://static001.geekbang.org/account/avatar/00/11/65/70/7e137498.jpg","nickname":"FOCUS","note":"","ucode":"DFE3078B632026","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":547030,"discussion_content":"你的评论和总结好强啊。每课都看到你的评论。\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1642500184,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":246063,"user_name":"张浩_house","can_delete":false,"product_type":"c1","uid":1021258,"ip_address":"","ucode":"B733234B133607","user_header":"https://static001.geekbang.org/account/avatar/00/0f/95/4a/a145c675.jpg","comment_is_top":false,"comment_ctime":1599148155,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1599148155","product_id":100025201,"comment_content":"许老师，看这些内容的时候，总感觉都知道一样，实际上掩卷沉思却始终归纳不出知识脉络，这种情况该如何去学习解决？","like_count":0},{"had_liked":false,"id":200509,"user_name":"Sun Fei","can_delete":false,"product_type":"c1","uid":1032631,"ip_address":"","ucode":"092EC0992050BB","user_header":"https://static001.geekbang.org/account/avatar/00/0f/c1/b7/57f153f6.jpg","comment_is_top":false,"comment_ctime":1585614098,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1585614098","product_id":100025201,"comment_content":"宏观视角，清晰。","like_count":0},{"had_liked":false,"id":169475,"user_name":"J.Smile","can_delete":false,"product_type":"c1","uid":1336475,"ip_address":"","ucode":"C4D98DFDBF7584","user_header":"https://static001.geekbang.org/account/avatar/00/14/64/9b/0b578b08.jpg","comment_is_top":false,"comment_ctime":1578362206,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1578362206","product_id":100025201,"comment_content":"大师的感觉","like_count":0},{"had_liked":false,"id":109354,"user_name":"随心而至","can_delete":false,"product_type":"c1","uid":1097836,"ip_address":"","ucode":"31866865255101","user_header":"https://static001.geekbang.org/account/avatar/00/10/c0/6c/29be1864.jpg","comment_is_top":false,"comment_ctime":1562025291,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1562025291","product_id":100025201,"comment_content":"好的实现方案大家都会相互借鉴，","like_count":0}]}