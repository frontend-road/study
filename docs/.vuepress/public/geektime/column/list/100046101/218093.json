{"id":218093,"title":"20 | 基于Raft的分布式KV系统开发实战（二）：如何实现代码？","content":"<p>你好，我是韩健。</p><p>学完<a href=\"https://time.geekbang.org/column/article/217049\">上一讲</a>后，相信你已经了解了分布式KV系统的架构设计，同时应该也很好奇，架构背后的细节代码是怎么实现的呢？</p><p>别着急，今天这节课，我会带你弄明白这个问题。我会具体讲解<a href=\"https://github.com/hanj4096/raftdb\">分布式KV系统</a>核心功能点的实现细节。比如，如何实现读操作对应的3种一致性模型。而我希望你能在课下反复运行程序，多阅读源码，掌握所有的细节实现。</p><p>话不多说，我们开始今天的学习。</p><p>在上一讲中，咱们将系统划分为三大功能块（接入协议、KV操作、分布式集群），那么今天我会按顺序具体说一说每块功能的实现，帮助你掌握架构背后的细节代码。首先，先来了解一下，如何实现接入协议。</p><h2>如何实现接入协议？</h2><p>在19讲提到，我们选择了HTTP协议作为通讯协议，并设计了\"/key\"和\"/join\"2个HTTP RESTful API，分别用于支持KV操作和增加节点的操作，那么，它们是如何实现的呢？</p><p>接入协议的核心实现，就是下面的样子。</p><p><img src=\"https://static001.geekbang.org/resource/image/b7/56/b72754232480fadd7d8eeb9bfdd15e56.jpg?wh=1142*369\" alt=\"\" title=\"图1\"></p><p>我带你走一遍这三个步骤，便于你加深印象。</p><ol>\n<li>在ServeHTTP()中，会根据URL路径设置相关的路由信息。比如，会在handlerKeyRequest()中处理URL路径前缀为\"/key\"的请求，会在handleJoin()中处理URL路径为\"/join\"的请求。</li>\n<li>在handleKeyRequest()中，处理来自客户端的KV操作请求，也就是基于HTTP POST请求的赋值操作、基于HTTP GET请求的查询操作、基于HTTP DELETE请求的删除操作。</li>\n<li>在handleJoin()中，处理增加节点的请求，最终调用raft.AddVoter()函数，将新节点加入到集群中。</li>\n</ol><!-- [[[read_end]]] --><p>在这里，需要你注意的是，在根据URL设置相关路由信息时，你需要考虑是路径前缀匹配（比如strings.HasPrefix(r.URL.Path, “/key”)），还是完整匹配（比如r.URL.Path == “/join”），避免在实际运行时，路径匹配出错。比如，如果对\"/key\"做完整匹配（比如r.URL.Path == “/key”），那么下面的查询操作会因为路径匹配出错，无法找到路由信息，而执行失败。</p><pre><code>curl -XGET raft-cluster-host01:8091/key/foo\n</code></pre><p>另外，还需要你注意的是，只有领导者节点才能执行raft.AddVoter()函数，也就是说，handleJoin()函数，只能在领导者节点上执行。</p><p>说完接入协议后，接下来咱们来分析一下第二块功能的实现，也就是，如何实现KV操作。</p><h2>如何实现KV操作？</h2><p>上一节课，我提到这个分布式KV系统会实现赋值、查询、删除3类操作，那具体怎么实现呢？你应该知道，赋值操作是基于HTTP POST请求来实现的，就像下面的样子。</p><pre><code>curl -XPOST http://raft-cluster-host01:8091/key -d '{&quot;foo&quot;: &quot;bar&quot;}'\n</code></pre><p>也就是说，我们是通过HTTP POST请求，实现了赋值操作。</p><p><img src=\"https://static001.geekbang.org/resource/image/ad/91/ad3f4c3955f721fe60d7f041ea9aae91.jpg?wh=1142*970\" alt=\"\" title=\"图2\"></p><p>同样的，我们走一遍这个过程，加深一下印象。</p><ol>\n<li>当接收到KV操作的请求时，系统将调用handleKeyRequest()进行处理。</li>\n<li>在handleKeyRequest()函数中，检测到HTTP请求类型为POST请求时，确认了这是一个赋值操作，将执行store.Set()函数。</li>\n<li>在Set()函数中，将创建指令，并通过raft.Apply()函数将指令提交给Raft。最终指令将被应用到状态机。</li>\n<li>当Raft将指令应用到状态机后，最终将执行applySet()函数，创建相应的key和值到内存中。</li>\n</ol><p>在这里，我想补充一下，FSM结构复用了Store结构体，并实现了fsm.Apply()、fsm.Snapshot()、fsm.Restore()3个函数。最终应用到状态机的数据，以map[string]string的形式，存放在Store.m中。</p><p>那查询操作是怎么实现的呢？它是基于HTTP GET请求来实现的。</p><pre><code>curl -XGET http://raft-cluster-host01:8091/key/foo\n</code></pre><p>也就是说，我们是通过HTTP GET请求实现了查询操作。在这里我想强调一下，相比需要将指令应用到状态机的赋值操作，查询操作要简单多了，因为系统只需要查询内存中的数据就可以了，不涉及状态机。具体的代码流程如图所示。</p><p><img src=\"https://static001.geekbang.org/resource/image/c7/b4/c70b009d5abd3b3f63c0d1d419ede9b4.jpg?wh=1142*721\" alt=\"\" title=\"图3\"></p><p>我们走一遍这个过程，加深一下印象。</p><ol>\n<li>当接收到KV操作的请求时，系统将调用handleKeyRequest()进行处理。</li>\n<li>在handleKeyRequest()函数中，检测到HTTP请求类型为GET请求时，确认了这是一个赋值操作，将执行store.Get()函数。</li>\n<li>Get()函数在内存中查询指定key对应的值。</li>\n</ol><p>而最后一个删除操作，是基于HTTP DELETE请求来实现的。</p><pre><code>curl -XDELETE http://raft-cluster-host01:8091/key/foo\n</code></pre><p>也就是说，我们是通过HTTP DELETE请求，实现了删除操作。</p><p><img src=\"https://static001.geekbang.org/resource/image/90/4e/90f99bc9c4aebb50c39f05412fa4594e.jpg?wh=1142*940\" alt=\"\" title=\"图4\"></p><p>同样的，我们走一遍这个过程。</p><ol>\n<li>当接收到KV操作的请求时，系统将调用handleKeyRequest()进行处理。</li>\n<li>在handleKeyRequest()函数中，检测到HTTP请求类型为DELETE请求时，确认了这是一个删除操作，将执行store.Delete()函数。</li>\n<li>在Delete()函数中，将创建指令，并通过raft.Apply()函数，将指令提交给Raft。最终指令将被应用到状态机。</li>\n<li>当前Raft将指令应用到状态机后，最终执行applyDelete()函数，删除key和值。</li>\n</ol><p>学习这部分内容的时候，有一些同学可能会遇到，不知道如何判断指定的操作是否需要在领导者节点上执行的问题，我给的建议是这样的。</p><ul>\n<li>需要向Raft状态机中提交指令的操作，是必须要在领导者节点上执行的，也就是所谓的写请求，比如赋值操作和删除操作。</li>\n<li>需要读取最新数据的查询操作（比如客户端设置查询操作的读一致性级别为consistent），是必须在领导者节点上执行的。</li>\n</ul><p>说完了如何实现KV操作后，来看一下最后一块功能，如何实现分布式集群。</p><h2>如何实现分布式集群？</h2><h3>创建集群</h3><p>实现一个Raft集群，首先我们要做的就是创建集群，创建Raft集群，主要分为两步。首先，第一个节点通过Bootstrap的方式启动，并作为领导者节点。启动命令就像下面的样子。</p><pre><code>$GOPATH/bin/raftdb -id node01  -haddr raft-cluster-host01:8091 -raddr raft-cluster-host01:8089 ~/.raftdb\n</code></pre><p>这时将在Store.Open()函数中，调用BootstrapCluster()函数将节点启动起来。</p><p>接着，其他节点会通过-join参数指定领导者节点的地址信息，并向领导者节点发送，包含当前节点配置信息的增加节点请求。启动命令就像下面的样子。</p><pre><code>$GOPATH/bin/raftdb -id node02 -haddr raft-cluster-host02:8091 -raddr raft-cluster-host02:8089 -join raft-cluster-host01:8091 ~/.raftdb\n</code></pre><p>当领导者节点接收到来自其他节点的增加节点请求后，将调用handleJoin()函数进行处理，并最终调用raft.AddVoter()函数，将新节点加入到集群中。</p><p>在这里，需要你注意的是，只有在向集群中添加新节点时，才需要使用-join参数。当节点加入集群后，就可以像下面这样，正常启动进程就可以了。</p><pre><code>$GOPATH/bin/raftdb -id node02 -haddr raft-cluster-host02:8091 -raddr raft-cluster-host02:8089  ~/.raftdb\n</code></pre><p>集群运行起来后，因为领导者是可能会变的，那么如何实现写操作，来保证写请求都在领导者节点上执行呢？</p><h3>写操作</h3><p>在19讲中，我们选择了方法2来实现写操作。也就是，当跟随者接收到写请求后，将拒绝处理该请求，并将领导者的地址信息转发给客户端。后续客户端就可以直接访问领导者（为了演示方便，我们以赋值操作为例）。<br>\n<img src=\"https://static001.geekbang.org/resource/image/0a/58/0a79be9a402addd226c0df170268a658.jpg?wh=1142*429\" alt=\"\" title=\"图5\"></p><p>我们来看一下具体的内容。</p><ol>\n<li>调用Set()函数执行赋值操作。</li>\n<li>如果执行Set()函数成功，将执行步骤3；如果执行Set()函数出错，且提示出错的原因是当前节点不是领导者，那这就说明了当前节点不是领导者，不能执行写操作，将执行步骤4；如果执行Set()函数出错，且提示出错的原因不是因为当前节点不是领导者，将执行步骤5。</li>\n<li>赋值操作执行成功，正常返回。</li>\n<li>节点将构造包含领导者地址信息的重定向响应，并返回给客户端。然后客户端直接访问领导者节点执行赋值操作。</li>\n<li>系统运行出错，返回错误信息给客户端。</li>\n</ol><p>需要你注意的是，赋值操作和删除操作属于写操作，必须在领导者节点上执行。而查询操作，只是查询内存中的数据，不涉及指令提交，可以在任何节点上执行。</p><p>而为了更好的利用curl客户端的HTTP重定向功能，我实现了HTTP 307重定向，这样，你在执行赋值操作时，就不需要关心访问节点是否是领导者节点了。比如，你可以使用下面的命令，访问节点2（也就是raft-cluster-host02，192.168.0.20）执行赋值操作。</p><pre><code>curl -XPOST raft-cluster-host02:8091/key -d '{&quot;foo&quot;: &quot;bar&quot;}' -L\n</code></pre><p>如果当前节点（也就是节点2）不是领导者，它将返回包含领导者地址信息的HTTP 307重定向响应给curl。这时，curl根据响应信息，重新发起赋值操作请求，并直接访问领导者节点（也就是节点1，192.168.0.10）。具体的过程，就像下面的Wireshark截图。</p><p><img src=\"https://static001.geekbang.org/resource/image/27/fe/27b9005d47f65ca9d231da6e5bddbafe.jpg?wh=1142*118\" alt=\"\" title=\"图6\"></p><p>相比写请求必须在领导者节点上执行，虽然查询操作属于读操作，可以在任何节点上执行，但是如何实现却更加复杂，因为读操作的实现关乎着一致性的实现。那么，具体怎么实现呢？</p><h3>读操作</h3><p>我想说的是，我们可以实现3种一致性模型（也就是stale、default、consistent），这样，用户就可以根据场景特点，按需选择相应的一致性级别，是不是很灵活呢？</p><p>具体的读操作的代码实现，就像下面的样子。</p><p><img src=\"https://static001.geekbang.org/resource/image/42/97/42cdc5944e200f20f0cdcfef6891cc97.jpg?wh=1142*477\" alt=\"\" title=\"图7\"></p><p>我们走一遍这个过程。</p><ol>\n<li>当接收到HTTP GET的查询请求时，系统会先调用level()函数，来获取当前请求的读一致性级别。</li>\n<li>调用Get()函数，查询指定key和读一致性级别对应的数据。</li>\n<li>如果执行Get()函数成功，将执行步骤4；如果执行Get()函数出错，且提示出错的原因是当前节点不是领导者节点，那么这就说明了，在当前节点上执行查询操作不满足读一致性级别，必须要到领导者节点上执行查询操作，将执行步骤5；如果执行Get()函数出错，且提示出错的原因不是因为当前节点不是领导者，将执行步骤6。</li>\n<li>查询操作执行成功，返回查询到的值给客户端。</li>\n<li>节点将构造，包含领导者地址信息的重定向响应，并返回给客户端。然后客户端直接访问领导者节点查询数据。</li>\n<li>系统运行出错，返回错误信息给客户端。</li>\n</ol><p>在这里，为了更好地利用curl客户端的HTTP重定向功能，我同样实现了HTTP 307重定向（具体原理，前面已经介绍了，这里就不啰嗦了）。比如，你可以使用下面的命令，来实现一致性级别为consistent的查询操作，不需要关心访问节点（raft-cluster-host02）是否是领导者节点。</p><pre><code>curl -XGET raft-cluster-host02:8091/key/foo?level=consistent  -L\n</code></pre><h2>内容小结</h2><p>本节课我主要带你了解了接入协议、KV操作、分布式集群的实现，我希望你记住下面三个重点内容：</p><ol>\n<li>\n<p>我们可以借助HTTP请求类型，来实现相关的操作，比如，我们可以通过HTTP GET请求实现查询操作，通过HTTP DELETE请求实现删除操作。</p>\n</li>\n<li>\n<p>你可以通过HTTP 307 重定向响应，来返回领导者的地址信息给客户端，需要你注意的是，curl已支持HTTP 307重定向，使用起来很方便，所以推荐你优先考虑curl，在日常中执行KV操作。</p>\n</li>\n<li>\n<p>在Raft中，我们可以通过raft.VerifyLeader()来确认当前领导者，是否仍是领导者。</p>\n</li>\n</ol><p>在这里，我还想强调的一点，任何大系统都是由小系统和具体的技术组成的，比如能无限扩展和支撑海量服务的QQ后台，是由多个组件（协议接入组件、名字服务、存储组件等）组成的。而做技术最为重要的就是脚踏实地彻底吃透和掌握技术本质，小系统的关键是细节技术，大系统的关键是架构。所以，在课程结束后，我会根据你的反馈意见，再延伸性地讲解大系统（大型互联网后台）的架构设计技巧，和我之前支撑海量服务的经验。</p><p>这样一来，我希望能帮你从技术到代码、从代码到架构、从小系统到大系统，彻底掌握实战能力，跨过技术和实战的鸿沟。</p><p>虽然这个分布式KV系统比较简单，但它相对纯粹聚焦在技术，能帮助你很好的理解Raft算法、Hashicorp Raft实现、分布式系统开发实战等。所以，我希望你不懂就问，有问题多留言，咱们一起讨论解决，不要留下盲区。</p><p>另外，我会持续维护和优化这个项目，并会针对大家共性的疑问，开发实现相关代码，从代码和理论2个角度，帮助你更透彻的理解技术。我希望你能在课下采用自己熟悉的编程语言，将这个系统重新实现一遍，在实战中，加深自己对技术的理解。如果条件允许，你可以将自己的分布式KV系统，以“配置中心”、“名字服务”等形式，在实际场景中落地和维护起来，不断加深自己对技术的理解。</p><h2>课堂思考</h2><p>我提到了通过-join参数，将新节点加入到集群中，那么，你不妨思考一下，如何实现代码移除一个节点呢？欢迎在留言区分享你的看法，与我一同讨论。</p><p>最后，感谢你的阅读，如果这篇文章让你有所收获，也欢迎你将它分享给更多的朋友。</p>","comments":[{"had_liked":false,"id":200221,"user_name":"wjh_all_in","can_delete":false,"product_type":"c1","uid":1501209,"ip_address":"","ucode":"0480A53AD46C97","user_header":"https://wx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIC2Ww3swYiaMalnpA1f87xgzV8Hs1Y27M2CbNQqgR27Il72hibXn5FvhU7mbr3XKsxYDZdjY4GMDbg/132","comment_is_top":false,"comment_ctime":1585560361,"is_pvip":false,"replies":[{"id":"77179","content":"加一颗星:)，Raft和Quorum NWR是不同时使用的，相互独立的算法，Quorum NWR一般用于AP型系统中，临时提供强一致性。是存在瓶颈这个问题，但可以通过分集群，也就是multi raft等方法来解决。","user_name":"作者回复","user_name_real":"hanj4096","uid":"1642497","ctime":1586886772,"ip_address":"","comment_id":200221,"utype":1}],"discussion_count":1,"race_medal":0,"score":"40240266025","product_id":100046101,"comment_content":"这里实现一致性，没有采用Quorum NWR，而是把所有读请求都转移到主节点，这在实际的生产系统会成为瓶颈吧？","like_count":10,"discussions":[{"author":{"id":1642497,"avatar":"https://static001.geekbang.org/account/avatar/00/19/10/01/750740a8.jpg","nickname":"hanj4096","note":"","ucode":"481047E40315AA","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":489961,"discussion_content":"加一颗星:)，Raft和Quorum NWR是不同时使用的，相互独立的算法，Quorum NWR一般用于AP型系统中，临时提供强一致性。是存在瓶颈这个问题，但可以通过分集群，也就是multi raft等方法来解决。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1586886772,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":201346,"user_name":"方块睡衣","can_delete":false,"product_type":"c1","uid":1074569,"ip_address":"","ucode":"1D355D7FEE5F8C","user_header":"https://static001.geekbang.org/account/avatar/00/10/65/89/e2ceca70.jpg","comment_is_top":false,"comment_ctime":1585753980,"is_pvip":false,"replies":[{"id":"75423","content":"文章里有链接，在这里，我再贴下，https:&#47;&#47;github.com&#47;hanj4096&#47;raftdb","user_name":"作者回复","user_name_real":"hanj4096","uid":"1642497","ctime":1585838349,"ip_address":"","comment_id":201346,"utype":1}],"discussion_count":1,"race_medal":0,"score":"27355557756","product_id":100046101,"comment_content":"老师请留意下项目地址","like_count":6,"discussions":[{"author":{"id":1642497,"avatar":"https://static001.geekbang.org/account/avatar/00/19/10/01/750740a8.jpg","nickname":"hanj4096","note":"","ucode":"481047E40315AA","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":490307,"discussion_content":"文章里有链接，在这里，我再贴下，https://github.com/hanj4096/raftdb","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585838349,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":200349,"user_name":"小晏子","can_delete":false,"product_type":"c1","uid":1132337,"ip_address":"","ucode":"3AAA6FB5ACB6AE","user_header":"https://static001.geekbang.org/account/avatar/00/11/47/31/f35367c8.jpg","comment_is_top":false,"comment_ctime":1585575305,"is_pvip":false,"replies":[{"id":"75549","content":"加一颗星:)，如果是领导者节点，可以先kill掉相关进程，触发领导者心跳超时和领导者选举，将领导者变成跟随者，再移除节点。","user_name":"作者回复","user_name_real":"hanj4096","uid":"1642497","ctime":1585933421,"ip_address":"","comment_id":200349,"utype":1}],"discussion_count":2,"race_medal":1,"score":"18765444489","product_id":100046101,"comment_content":"如果移除节点，那要考虑是移除主节点还是非主节点吧，如果是主节点那么需要重新发起选主流程，并将主节点数据同步到其他节点，如果是非主节点，那么要通知主节点该节点移除不需要在发送日志给它了。","like_count":5,"discussions":[{"author":{"id":1642497,"avatar":"https://static001.geekbang.org/account/avatar/00/19/10/01/750740a8.jpg","nickname":"hanj4096","note":"","ucode":"481047E40315AA","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":490000,"discussion_content":"加一颗星:)，如果是领导者节点，可以先kill掉相关进程，触发领导者心跳超时和领导者选举，将领导者变成跟随者，再移除节点。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585933421,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1643779,"avatar":"https://static001.geekbang.org/account/avatar/00/19/15/03/682bd618.jpg","nickname":"DavidJiang","note":"","ucode":"92EBF337569A1B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":397572,"discussion_content":"1、kill掉老的leader之后,会选举新的leader,整个集群是可以正常工作的. 但是新的leader一直会heart老leader所在的机器(raft: rejecting vote request since we have a leader: from=127.0.0.1:8089 leader=127.0.0.1:10089),直到重新启动老的leader服务(启动后,将变为跟随者).","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1632641847,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":199914,"user_name":"还有这种操作","can_delete":false,"product_type":"c1","uid":1099671,"ip_address":"","ucode":"78D36F5224F974","user_header":"https://static001.geekbang.org/account/avatar/00/10/c7/97/e88b94da.jpg","comment_is_top":false,"comment_ctime":1585498747,"is_pvip":false,"replies":[{"id":"75451","content":"感谢唔多志同学帮忙回复:)。<br>为了方便其他同学看到，在这里，我再贴下链接地址，https:&#47;&#47;github.com&#47;hanj4096&#47;raftdb<br>","user_name":"作者回复","user_name_real":"hanj4096","uid":"1642497","ctime":1585844347,"ip_address":"","comment_id":199914,"utype":1}],"discussion_count":2,"race_medal":0,"score":"14470400635","product_id":100046101,"comment_content":"老师有没有代码示例，或者项目示例","like_count":3,"discussions":[{"author":{"id":1642497,"avatar":"https://static001.geekbang.org/account/avatar/00/19/10/01/750740a8.jpg","nickname":"hanj4096","note":"","ucode":"481047E40315AA","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":489893,"discussion_content":"感谢唔多志同学帮忙回复:)。\n为了方便其他同学看到，在这里，我再贴下链接地址，https://github.com/hanj4096/raftdb\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585844347,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1310798,"avatar":"https://static001.geekbang.org/account/avatar/00/14/00/4e/be2b206b.jpg","nickname":"吴小智","note":"","ucode":"C7C9F58B5C9F7B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":217274,"discussion_content":"https://github.com/hanj4096/raftdb","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1585536077,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":286509,"user_name":"杜享平","can_delete":false,"product_type":"c1","uid":1445251,"ip_address":"","ucode":"62288B8984275A","user_header":"https://static001.geekbang.org/account/avatar/00/16/0d/83/9f4bc7eb.jpg","comment_is_top":false,"comment_ctime":1617350847,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"5912318143","product_id":100046101,"comment_content":"可以再丰富一下，如果数据量比较大，单机存不下，必须对数据做分片处理，这个时候应该怎么设计","like_count":1,"discussions":[{"author":{"id":2036705,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/13/e1/6939ae4f.jpg","nickname":"knight劉先生","note":"","ucode":"CEE9BFC8D3D969","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":582119,"discussion_content":"hash一致性","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1659243292,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"上海"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":200774,"user_name":"羽翼1982","can_delete":false,"product_type":"c1","uid":1130194,"ip_address":"","ucode":"1C7362888B7E3D","user_header":"https://static001.geekbang.org/account/avatar/00/11/3e/d2/5f9d3fa7.jpg","comment_is_top":false,"comment_ctime":1585649333,"is_pvip":false,"replies":[{"id":"75448","content":"感谢一路相伴，多交流:)。另外，感谢反馈，反馈我记下了，后面会综合大家的共性问题，做补充。","user_name":"作者回复","user_name_real":"hanj4096","uid":"1642497","ctime":1585843800,"ip_address":"","comment_id":200774,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5880616629","product_id":100046101,"comment_content":"一路过来追老师的课，收获还是蛮多的；不过比起实现的细节，我还是想更多了解设计和架构上的知识，特别是这些理论在成熟的开源分布式系统上应用（Kafka，TiDB，ETCD，Cassandra等等），希望老师能够同通过加餐的形式补充这些内容","like_count":1,"discussions":[{"author":{"id":1642497,"avatar":"https://static001.geekbang.org/account/avatar/00/19/10/01/750740a8.jpg","nickname":"hanj4096","note":"","ucode":"481047E40315AA","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":490134,"discussion_content":"感谢一路相伴，多交流:)。另外，感谢反馈，反馈我记下了，后面会综合大家的共性问题，做补充。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585843800,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":343307,"user_name":"王应发","can_delete":false,"product_type":"c1","uid":2768731,"ip_address":"","ucode":"EF597BADCC526B","user_header":"","comment_is_top":false,"comment_ctime":1650775845,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1650775845","product_id":100046101,"comment_content":"读写都在主节点上面，那性能和单件差不多了","like_count":0},{"had_liked":false,"id":314769,"user_name":"姑射仙人","can_delete":false,"product_type":"c1","uid":1008517,"ip_address":"","ucode":"3EFC1F3E592165","user_header":"https://static001.geekbang.org/account/avatar/00/0f/63/85/1dc41622.jpg","comment_is_top":false,"comment_ctime":1633414589,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1633414589","product_id":100046101,"comment_content":"老师，Store中的m就代表实现的存储系统实际的数据载体，为什么要在内存中用map表示。实际场景中此处是否可以替换成自己需要的，比如基于数据库的存储？如果可以的话，那么Snapshot为什么还要Restore到内存中的map中去，如果数据量特别大，Restore到存中的map会特别耗时，而且还会和底层存储产生一致性问题。","like_count":0},{"had_liked":false,"id":275030,"user_name":"Geek4329","can_delete":false,"product_type":"c1","uid":2028951,"ip_address":"","ucode":"D6FB8D1B2D5DAC","user_header":"https://static001.geekbang.org/account/avatar/00/1e/f5/97/9a7ee7b3.jpg","comment_is_top":false,"comment_ctime":1611281526,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1611281526","product_id":100046101,"comment_content":"当raft将指令应用到状态机后，将执行applySet功能，创建key和value到内存中。这一点没看明白，我理解Raft主要管理复制日志，但是日志如何应用到状态机这个需要应用自己实现fsm的几个接口。状态机存储这个也是应用自己决定，可以选择内存，文件等。这个地方应用到状态机完成后内存中已经有了kv，后面为什么还要执行其他操作呢？","like_count":0},{"had_liked":false,"id":261029,"user_name":"🤔 2⃣ 0⃣ 1⃣ 9⃣🙄 🤥","can_delete":false,"product_type":"c1","uid":2306143,"ip_address":"","ucode":"FA023FA7287EFC","user_header":"https://static001.geekbang.org/account/avatar/00/23/30/5f/69e63a33.jpg","comment_is_top":false,"comment_ctime":1605175191,"is_pvip":false,"replies":[{"id":"95495","content":"加一颗星:），不需要，第一条命令是创建新节点并启动，在创建新节点时执行这条命令；第二条命令是启动节点，节点创建后，每次启动节点，执行这条命令就可以了。","user_name":"作者回复","user_name_real":"hanj4096","uid":"1642497","ctime":1606024279,"ip_address":"","comment_id":261029,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1605175191","product_id":100046101,"comment_content":"$GOPATH&#47;bin&#47;raftdb -id node02 -haddr raft-cluster-host02:8091 -raddr raft-cluster-host02:8089 -join raft-cluster-host01:8091 ~&#47;.raftdb<br><br>$GOPATH&#47;bin&#47;raftdb -id node02 -haddr raft-cluster-host02:8091 -raddr raft-cluster-host02:8089  ~&#47;.raftdb<br>老师，添加第二个节点，这两条命令都要执行一遍吗？我执行第一条就被阻塞了","like_count":0,"discussions":[{"author":{"id":1642497,"avatar":"https://static001.geekbang.org/account/avatar/00/19/10/01/750740a8.jpg","nickname":"hanj4096","note":"","ucode":"481047E40315AA","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":509352,"discussion_content":"加一颗星:），不需要，第一条命令是创建新节点并启动，在创建新节点时执行这条命令；第二条命令是启动节点，节点创建后，每次启动节点，执行这条命令就可以了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1606024279,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":261027,"user_name":"🤔 2⃣ 0⃣ 1⃣ 9⃣🙄 🤥","can_delete":false,"product_type":"c1","uid":2306143,"ip_address":"","ucode":"FA023FA7287EFC","user_header":"https://static001.geekbang.org/account/avatar/00/23/30/5f/69e63a33.jpg","comment_is_top":false,"comment_ctime":1605175111,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1605175111","product_id":100046101,"comment_content":"$GOPATH&#47;bin&#47;raftdb -id node02 -haddr raft-cluster-host02:8091 -raddr raft-cluster-host02:8089 -join raft-cluster-host01:8091 ~&#47;.raftdb","like_count":0},{"had_liked":false,"id":244189,"user_name":"Heaven","can_delete":false,"product_type":"c1","uid":1694207,"ip_address":"","ucode":"FA33FBCC66C911","user_header":"https://static001.geekbang.org/account/avatar/00/19/d9/ff/b23018a6.jpg","comment_is_top":false,"comment_ctime":1598422659,"is_pvip":false,"replies":[{"id":"96353","content":"加一颗星:)，是的，重启领导者节点进程，集群会重新选举领导者，这个领导者将“下台”。","user_name":"作者回复","user_name_real":"hanj4096","uid":"1642497","ctime":1606821985,"ip_address":"","comment_id":244189,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1598422659","product_id":100046101,"comment_content":"那么整体流程还是按照写操作的流程<br>获取到store中进行执行<br>如果不报错,就说进行了RemoveServer()<br>报错了,查看报错信息,如果是因为不是领导者节点,那么直接返回客户端领导者的地址,让其进行重定向<br>如果是因为删除节点是领导者节点,无法删除导致的,那么直接返回客户端错误信息<br>(我这里认为是无法删除领导者节点的,应该由管理人员直接杀死领导者节点的进程)","like_count":0,"discussions":[{"author":{"id":1642497,"avatar":"https://static001.geekbang.org/account/avatar/00/19/10/01/750740a8.jpg","nickname":"hanj4096","note":"","ucode":"481047E40315AA","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":504512,"discussion_content":"加一颗星:)，是的，重启领导者节点进程，集群会重新选举领导者，这个领导者将“下台”。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1606821985,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":244187,"user_name":"Heaven","can_delete":false,"product_type":"c1","uid":1694207,"ip_address":"","ucode":"FA33FBCC66C911","user_header":"https://static001.geekbang.org/account/avatar/00/19/d9/ff/b23018a6.jpg","comment_is_top":false,"comment_ctime":1598422490,"is_pvip":false,"replies":[{"id":"96354","content":"加一颗星:)，是的，重启领导者节点进程，集群会重新选举领导者，这个领导者将“下台”。","user_name":"作者回复","user_name_real":"hanj4096","uid":"1642497","ctime":1606822003,"ip_address":"","comment_id":244187,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1598422490","product_id":100046101,"comment_content":"那么整体流程还是按照写操作的流程<br>获取到store中进行执行<br>如果不报错,就说进行了RemoveServer()<br>报错了,查看报错信息,如果是因为不是领导者节点,那么直接返回客户端领导者的地址,让其进行重定向<br>如果是因为删除节点是领导者节点,无法删除导致的,那么直接返回客户端错误信息<br>(我这里认为是无法删除领导者节点的,应该由管理人员直接杀死领导者节点的进程)","like_count":0,"discussions":[{"author":{"id":1642497,"avatar":"https://static001.geekbang.org/account/avatar/00/19/10/01/750740a8.jpg","nickname":"hanj4096","note":"","ucode":"481047E40315AA","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":504511,"discussion_content":"加一颗星:)，是的，重启领导者节点进程，集群会重新选举领导者，这个领导者将“下台”。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1606822003,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":239674,"user_name":"向永俊","can_delete":false,"product_type":"c1","uid":1170721,"ip_address":"","ucode":"840F8912E6B9E9","user_header":"https://static001.geekbang.org/account/avatar/00/11/dd/21/382ec2bf.jpg","comment_is_top":false,"comment_ctime":1596612894,"is_pvip":false,"replies":[{"id":"97184","content":"加一颗星:)，比较并交换，是一种技术，基于raft实现这种技术？没看明白，能具体说说吗？补充下信息。","user_name":"作者回复","user_name_real":"hanj4096","uid":"1642497","ctime":1607850048,"ip_address":"","comment_id":239674,"utype":1}],"discussion_count":4,"race_medal":0,"score":"1596612894","product_id":100046101,"comment_content":"基于Hashicorp，如果在分布式kv系统中，需要实现cas功能，应该怎么实现","like_count":0,"discussions":[{"author":{"id":1642497,"avatar":"https://static001.geekbang.org/account/avatar/00/19/10/01/750740a8.jpg","nickname":"hanj4096","note":"","ucode":"481047E40315AA","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":503183,"discussion_content":"加一颗星:)，比较并交换，是一种技术，基于raft实现这种技术？没看明白，能具体说说吗？补充下信息。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1607850048,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1170721,"avatar":"https://static001.geekbang.org/account/avatar/00/11/dd/21/382ec2bf.jpg","nickname":"向永俊","note":"","ucode":"840F8912E6B9E9","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":349376,"discussion_content":"基于raft实现一个系统，该系统实现一个功能，该功能为cas","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1613141482,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":2733281,"avatar":"","nickname":"Geek_f4512f","note":"","ucode":"3CB387D2943590","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1170721,"avatar":"https://static001.geekbang.org/account/avatar/00/11/dd/21/382ec2bf.jpg","nickname":"向永俊","note":"","ucode":"840F8912E6B9E9","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":389017,"discussion_content":"无锁循环 原子性？ ","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1629093921,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":349376,"ip_address":""},"score":389017,"extra":""},{"author":{"id":1109389,"avatar":"https://static001.geekbang.org/account/avatar/00/10/ed/8d/377c106a.jpg","nickname":"KW💤","note":"","ucode":"290DD7016F4EE0","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1170721,"avatar":"https://static001.geekbang.org/account/avatar/00/11/dd/21/382ec2bf.jpg","nickname":"向永俊","note":"","ucode":"840F8912E6B9E9","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":548627,"discussion_content":"共识算法跟原子性没有半毛钱关系","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1643281827,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":349376,"ip_address":""},"score":548627,"extra":""}]}]},{"had_liked":false,"id":210055,"user_name":"Geek_5735ca","can_delete":false,"product_type":"c1","uid":1608999,"ip_address":"","ucode":"366F8DEF7118AF","user_header":"","comment_is_top":false,"comment_ctime":1587658456,"is_pvip":false,"replies":[{"id":"79083","content":"加一颗星:)，问题1：hddr是HTTP服务的通讯地址，rddr是raft服务相互通讯的地址，比如心跳、日志复制等。问题2：可以的，配置不同的端口和数据存储目录。","user_name":"作者回复","user_name_real":"hanj4096","uid":"1642497","ctime":1588280674,"ip_address":"","comment_id":210055,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1587658456","product_id":100046101,"comment_content":"1.hddr和rddr代表什么含义?<br>2.单机上怎么模拟多个ip地址?","like_count":0,"discussions":[{"author":{"id":1642497,"avatar":"https://static001.geekbang.org/account/avatar/00/19/10/01/750740a8.jpg","nickname":"hanj4096","note":"","ucode":"481047E40315AA","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":492928,"discussion_content":"加一颗星:)，问题1：hddr是HTTP服务的通讯地址，rddr是raft服务相互通讯的地址，比如心跳、日志复制等。问题2：可以的，配置不同的端口和数据存储目录。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1588280674,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":200898,"user_name":"沉淀的梦想","can_delete":false,"product_type":"c1","uid":1177315,"ip_address":"","ucode":"BCB7C26F9D214B","user_header":"https://static001.geekbang.org/account/avatar/00/11/f6/e3/e4bcd69e.jpg","comment_is_top":false,"comment_ctime":1585670166,"is_pvip":false,"replies":[{"id":"75986","content":"感谢一步同学帮忙补充项目地址。需要自己设计测试用例，考虑Safety和Liveness，做数据一致性检查等，以及在生产环境中做监控和观察系统运行，这也是实现算法最复杂的地方。","user_name":"作者回复","user_name_real":"hanj4096","uid":"1642497","ctime":1586190373,"ip_address":"","comment_id":200898,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1585670166","product_id":100046101,"comment_content":"项目地址在哪里？自己实现 Raft 的话，正确性要如何测试呢？","like_count":0,"discussions":[{"author":{"id":1642497,"avatar":"https://static001.geekbang.org/account/avatar/00/19/10/01/750740a8.jpg","nickname":"hanj4096","note":"","ucode":"481047E40315AA","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":490170,"discussion_content":"感谢一步同学帮忙补充项目地址。需要自己设计测试用例，考虑Safety和Liveness，做数据一致性检查等，以及在生产环境中做监控和观察系统运行，这也是实现算法最复杂的地方。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1586190373,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1005391,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/57/4f/6fb51ff1.jpg","nickname":"一步","note":"","ucode":"73CEA468CE70C3","race_medal":1,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":219358,"discussion_content":"项目地址：https://github.com/hanj4096/raftdb","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585752425,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":200860,"user_name":"Michael Tesla","can_delete":false,"product_type":"c1","uid":1033053,"ip_address":"","ucode":"C627F090293608","user_header":"https://static001.geekbang.org/account/avatar/00/0f/c3/5d/ced9b5c2.jpg","comment_is_top":false,"comment_ctime":1585663449,"is_pvip":false,"replies":[{"id":"75446","content":"迭戈·安加罗（Diego Ongaro）的博士论文，《Paxos Made Live》，可以多多看看，另外，建议在实战中理解技术，因为文字和代码之间有鸿沟，实战能帮助我们理解理论。","user_name":"作者回复","user_name_real":"hanj4096","uid":"1642497","ctime":1585842005,"ip_address":"","comment_id":200860,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1585663449","product_id":100046101,"comment_content":"老师能不能推荐一些课外的相关资料呢？","like_count":0,"discussions":[{"author":{"id":1642497,"avatar":"https://static001.geekbang.org/account/avatar/00/19/10/01/750740a8.jpg","nickname":"hanj4096","note":"","ucode":"481047E40315AA","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":490157,"discussion_content":"迭戈·安加罗（Diego Ongaro）的博士论文，《Paxos Made Live》，可以多多看看，另外，建议在实战中理解技术，因为文字和代码之间有鸿沟，实战能帮助我们理解理论。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585842005,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1033053,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/c3/5d/ced9b5c2.jpg","nickname":"Michael Tesla","note":"","ucode":"C627F090293608","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":221100,"discussion_content":"谢谢老师的建议","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585974386,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]}]}