{"id":12135,"title":"14 | 更接近业务的抽象：让自动化测试脚本更好地描述业务","content":"<p>在上一篇文章中，我介绍了GUI自动化测试中的两个主要的概念“脚本与数据的解耦 ”以及“ 页面对象模型”。在引入“操作函数”封装时，我提到操作函数在改善测试脚本可读性问题的同时，也引入了两个新的问题，即： 如何把控操作函数的粒度，以及如何衔接两个操作函数之间的页面。</p><p>现在，我就以这两个问题作为引子，为你介绍GUI自动化测试中“业务流程（business flow）”的概念、核心思想以及应用场景。</p><h2>如何把控操作函数的粒度？</h2><p><strong>操作函数的粒度是指，一个操作函数到底应该包含多少操作步骤才是最合适的。</strong></p><ul>\n<li>如果粒度太大，就会降低操作函数的可重用性。极端的例子就是，前面文章中涉及的百度搜索的案例，把“登录”“搜索”“登出”的操作作为一个操作函数。</li>\n<li>如果粒度太小，也就失去了操作函数封装的意义。极端的例子就是，把每一个步骤都作为一个操作函数。</li>\n<li>更糟糕的是，在企业实际自动化测试开发中，每个测试工程师对操作函数的粒度理解也不完全相同，很有可能出现同一个项目中脚本粒度差异过大，以及某些操作函数的可重用性低的问题。</li>\n</ul><p><strong>那么，操作函数的粒度到底应该如何控制呢？其实这个问题，在很大程度上取决于项目的实际情况，以及测试用例步骤的设计，并没有一个放之四海而皆准的绝对标准。</strong></p><!-- [[[read_end]]] --><p>但是，脚本粒度的控制还是有设计依据可以遵循的，即往往以完成一个业务流程（business flow）为主线，抽象出其中的“高内聚低耦合”的操作步骤集合，操作函数就由这些操作步骤集合构成。</p><p>比如，对于“用户注册”这个业务流程，其中的“信用卡绑定”操作就会涉及多个操作步骤，而这些操作在逻辑上又是相对独立的，所以就可以包装成一个操作函数。也就是说，业务流程会依次调用各个操作函数，来完成具体的业务操作。</p><h2>如何衔接两个操作函数之间的页面？</h2><p>完成一个业务流程操作，往往会需要依次调用多个操作函数，但是操作函数和操作函数之间会有页面衔接的问题，即前序操作函数完成后的最后一个页面，必须是后续操作函数的第一个页面。</p><p>如果连续的两个操作函数之间无法用页面衔接，那就需要在两个操作函数之间加入额外的页面跳转代码，或者是在操作函数内部加入特定的页面跳转代码。</p><h2>业务流程抽象</h2><p>在解决如何把控操作函数的粒度，以及如何衔接两个操作函数之间的页面这两个问题的过程中，我引入了业务流程的概念。那么，接下来我就跟你详细说说什么是业务流程。</p><p><strong>业务流程抽象是，基于操作函数的更接近于实际业务的更高层次的抽象方式。基于业务流程抽象实现的测试用例往往灵活性会非常好，你可以很方便地组装出各种测试用例。</strong></p><p>这个概念有点拗口，难以理解。但是，没关系，我举个例子，你就豁然开朗了。</p><p>假设，某个具体的业务流程是：已注册的用户登录电商平台购买指定的书籍。那么，基于业务流程抽象的测试用例伪代码，如图1所示。</p><p><img src=\"https://static001.geekbang.org/resource/image/a7/46/a7b02e628552dd97070c90058b755a46.png?wh=902*448\" alt=\"\"></p><center>图1 基于业务流程抽象的测试用例伪代码</center><p>这段伪代码的信息量很大，但是理解了这段代码的设计思想，你也就掌握了业务流程抽象的精髓。</p><p><strong>首先，从整体结构上看，段伪代码顺序调用了4个业务流程，</strong> 依次是完成用户登录的LoginFlow、完成书籍查询的SearchBookFlow、完成书籍购买的CheckoutBookFlow、完成用户登出的LogoutFlow。</p><p>这4个业务流程都是作为独立的类封装的，可以被很方便的重用并灵活组合，类的内部实现通常是调用操作函数。而操作函数内部，则是基于页面对象模型完成具体的页面控件操作。</p><p><strong>然后，对于每一个业务流程类，都会有相应的业务流程输入参数类与之一一对应。具体的步骤通常有这么几步：</strong></p><ol>\n<li>\n<p>初始化一个业务流程输入参数类的实例；</p>\n</li>\n<li>\n<p>给这个实例赋值；</p>\n</li>\n<li>\n<p>用这个输入参数实例来初始化业务流程类的实例；</p>\n</li>\n<li>\n<p>执行这个业务流程实例。</p>\n</li>\n</ol><p><strong>执行业务流程实例的过程，其实就是调用操作函数来完成具体的页面对象操作的过程。</strong></p><p>为了让你更好地理解业务流程抽象提供了哪些功能，接下来我会为你逐行解读这段伪代码。</p><p><strong>伪代码的第2-6行，调用的是LoginFlow，完成了用户登录的操作。</strong></p><pre><code>2: LoginFlowParameters loginFlowParameters = new LoginFlowParameters();\n3: loginFlowParameters.setUserName(&quot;username&quot;);\n4: loginFlowParameters.setPassword(&quot;password&quot;);\n5: LoginFlow loginFlow = new LoginFlow(loginFlowParameters);\n6: loginFlow.execute();\n</code></pre><p>第2行，初始化了LoginFlow对应的LoginFlowParameters的实例。</p><p>第3-4行，通过setUserName和setPassword方法将用户名和密码传入该参数实例。</p><p>第5行，用这个已经赋值的参数实例来初始化LoginFlow。</p><p>第6行，通过execute方法发起执行。执行之后，LoginFlow会调用内部的操作函数，或者直接调用页面对象方法，完成用户登录的操作。</p><p><strong>伪代码的第9-12行，用和2-6行类似的方式调用了SearchBookFlow，完成了书籍搜索的操作。</strong></p><pre><code>9: SearchBookFlowParameters searchBookFlowParameters = new SearchBookFlowParameters();\n10: searchBookFlowParameters.setBookName(&quot;bookname&quot;);\n11: SearchBookFlow searchBookFlow = new SearchBookFlow(searchBookFlowParameters);\n12: searchBookFlow.withStartPage(loginFlow.getEndPage()).execute();\n</code></pre><p>需要特别注意的是，第12行中withStartPage(loginFlow.getEndPage())的含义是，SearchBookFlow的起始页面将会使用之前loginFlow的结束页面。显然，通过这种方式可以很方便地完成两个业务流程之间的页面衔接。</p><p>同时，从中还可以看出，其实每个业务流程都可以接受不同的起始页面。以SearchBookFlow为例，它的起始页面既可以是书籍首页，也可以是其他页面，但是需要在它的内部对不同的初始页面做出相应的处理，以保证这个业务流程真正开始的页面是在书籍搜索页面。</p><p>同样，由于业务流程存在分支的可能性，每个业务流程执行完成的最终页面也不是唯一的，你可以使用getEndPage方法拿到这个业务流程执行结束后的最后页面。</p><p>通过这段代码的解读，你可以很清楚地理解，业务流程之间的页面衔接是如何实现的。</p><p><strong>伪代码的第15-18行，调用了CheckoutBookFlow，完成了书籍购买操作。</strong></p><pre><code>15: CheckoutBookFlowParameters checkoutBookFlowParameters = new CheckoutBookFlowParameters();\n16: checkoutBookFlowParameters.setBookID(searchBookFlow.getOutPut().getBookID());\n17: CheckoutBookFlow checkoutBookFlow = new CheckoutBookFlow(checkoutBookFlowParameters);\n18: checkoutBookFlow.withStartPage(searchBookFlow.getEndPage()).execute();\n</code></pre><p>第15行，初始化了CheckoutBookFlow对应的checkoutBookFlowParameters的实例。</p><p>第16行，通过setBookID(searchBookFlow.getOutPut().getBookID())，将上一个业务流程searchBookFlow的输出参数，作为了当前业务流程的输入参数。这是典型的业务流程之间如何传递参数的示例，也是很多测试场景中都要用到的。</p><p>第17行，用checkoutBookFlowParameters参数实例来初始化checkoutBookFlow。</p><p>第18行，通过execute方法发起执行。这里需要注意的是，checkoutBookFlow的起始页面将会使用之前searchBookFlow的结束页面。开始执行后，checkoutBookFlow会调用内部的操作函数，或者直接调用页面对象方法，完成书籍的购买操作。</p><p><strong>伪代码的第21-22行，调用LogoutFlow，完成了用户登出操作。</strong></p><pre><code>21: LogoutFlow logoutFlow = new LogoutFlow();\n22: logoutFlow.withStartPage(checkoutBookFlow.getEndPage()).execute();\n</code></pre><p>第21行，由于LogoutFlow不带参数，所以直接初始化了LogoutFlow。</p><p>第22行，通过execute方法发起执行。这里LogoutFlow的起始页面将会使用之前CheckoutBookFlow的结束页面。开始执行后，LogoutFlow会调用内部的操作函数，或者直接调用页面对象方法，完成用户登出操作。</p><p>通过对这些代码的解读，我解释了业务流程是什么，并从使用者的角度分析了它的主要特点。比如，如何实现不同业务流程间的页面衔接，如何在不同的业务流程间传递参数等。</p><p>为了加深印象，我再来总结一下业务流程的优点：</p><ol>\n<li>\n<p>业务流程（Business Flow）的封装更接近实际业务；</p>\n</li>\n<li>\n<p>基于业务流程的测试用例非常标准化，遵循“参数准备”、“实例化Flow”和“执行Flow”这三个大步骤，非常适用于测试代码的自动生成；</p>\n</li>\n<li>\n<p>由于更接近实际业务，所以可以很方便地和BDD结合。BDD就是Behavior Driven Development，即行为驱动开发，你不了解的话，可以看看郑晔老师<a href=\"https://time.geekbang.org/column/article/417462\">这篇文章</a>。</p>\n</li>\n</ol><h2>总结</h2><p>我以如何把控操作函数的粒度，和如何衔接两个操作函数之间的页面，这两个问题为引子，为你介绍了业务流程的概念、核心思想和适用的场景。</p><p>业务流程抽象是，基于操作函数的更接近于实际业务的更高层次的抽象方式。基于业务流程抽象实现的测试用例往往具有较好的灵活性，可以根据实际测试需求方便地组装出各种测试用例。</p><p>业务流程的核心思想是，从业务的维度来指导测试业务流程的封装。由于业务流程封装通常很贴近实际业务，所以特别适用于组装面向终端用户的端到端（E2E）的系统功能测试用例，尤其适用于业务功能非常多，并且存在各种组合的E2E测试场景。</p><h2>思考题</h2><p>你所在公司的GUI自动化测试是否已经运用了业务流程级别的封装？在使用过程中，你是否遇到什么瓶颈，是如何解决的？</p><p>欢迎你给我留言。</p>","comments":[{"had_liked":false,"id":17760,"user_name":"Cynthia🌸","can_delete":false,"product_type":"c1","uid":1163960,"ip_address":"","ucode":"B3A48089794940","user_header":"https://static001.geekbang.org/account/avatar/00/11/c2/b8/ec758482.jpg","comment_is_top":false,"comment_ctime":1532936066,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"48777576322","product_id":100009601,"comment_content":"我曾经做过的一个自动化项目，整体代码实现方式与思路和这里介绍的不太一样。<br>对业务流程也做了封装，但每一个封装都是以子用例的形式来做的，例如：<br>从登录login到a业务到b业务再到c业务算是一条完整的用例<br>而另一条用例是login a业务 x业务<br>那么就封装一个子用例1为：login-a业务。<br><br>但是没有做到a业务的单独封装。<br>比如再来一个用例是：<br>login a业务 b业务 y业务<br><br>那么可以使用子用例1完成前面两个步骤，或者重新写一条子用例2:<br>login a业务 b业务<br><br>当然这个项目在其他的地方存在优势，所以沿用了一阵子。<br><br>现在打算细细研究一下作者的思路。","like_count":11},{"had_liked":false,"id":18035,"user_name":"图·美克尔","can_delete":false,"product_type":"c1","uid":1076720,"ip_address":"","ucode":"021FB5AE110066","user_header":"https://wx.qlogo.cn/mmopen/vi_32/DYAIOgq83eppQqDE6TNibvr3DNdxG323AruicIgWo5DpVr6U7yZVNkbF2rKluyDfhdpgAEcYEOZTAnbrMdTzFkUw/0","comment_is_top":false,"comment_ctime":1533095685,"is_pvip":false,"replies":[{"id":"6538","content":"代码细节不会讲，只会讲基本的思路。","user_name":"作者回复","user_name_real":"dhrbc","uid":"1002226","ctime":1533557632,"ip_address":"","comment_id":18035,"utype":1}],"discussion_count":1,"race_medal":1,"score":"27302899461","product_id":100009601,"comment_content":"代码自动生成会讲到吗？","like_count":6,"discussions":[{"author":{"id":1002226,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/4a/f2/6ea13762.jpg","nickname":"茹炳晟","note":"","ucode":"1361AE1931E2DD","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":421368,"discussion_content":"代码细节不会讲，只会讲基本的思路。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1533557632,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":236137,"user_name":"东方不败之鸭梨","can_delete":false,"product_type":"c1","uid":2062975,"ip_address":"","ucode":"C590EEC03BCFFC","user_header":"https://static001.geekbang.org/account/avatar/00/1f/7a/7f/4bce9aff.jpg","comment_is_top":false,"comment_ctime":1595325165,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"23070161645","product_id":100009601,"comment_content":"不懂withStartPage(loginFlow.getEndPage()) 是如何实现的","like_count":6},{"had_liked":false,"id":28084,"user_name":"晶晶","can_delete":false,"product_type":"c1","uid":1239323,"ip_address":"","ucode":"2D7F03BB73717C","user_header":"https://static001.geekbang.org/account/avatar/00/12/e9/1b/1a6938ec.jpg","comment_is_top":false,"comment_ctime":1538007130,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"18717876314","product_id":100009601,"comment_content":"其实我觉得测试人员还是应该掌握面相对象设计思想才能更好的写出自动化测试工具，基础不打好，只能知其然而不能知其所以然。","like_count":5,"discussions":[{"author":{"id":1274218,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIT6XZicKWG7SMCoicWRU6E0r9MWziaoDNJCiblO7s9vLAHusROEHB8ypJT8u0J7sDjUOXE1ic1j2oLzvg/132","nickname":"18101888516","note":"","ucode":"7955DE0BBAAB62","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":284191,"discussion_content":"同感","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1592469151,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":17802,"user_name":"图·美克尔","can_delete":false,"product_type":"c1","uid":1076720,"ip_address":"","ucode":"021FB5AE110066","user_header":"https://wx.qlogo.cn/mmopen/vi_32/DYAIOgq83eppQqDE6TNibvr3DNdxG323AruicIgWo5DpVr6U7yZVNkbF2rKluyDfhdpgAEcYEOZTAnbrMdTzFkUw/0","comment_is_top":false,"comment_ctime":1532958018,"is_pvip":false,"replies":[{"id":"6231","content":"非常高质量的留言，你说的方法非常好，而且我们也曾经实际尝试了，和你说的完全一样的思路，但是最终我们放弃了，主要原因是技术上的实现难度有点大，我们需要知道哪些flow是可以衔接的，并且还要做到ide中可以自动提示，同时flow之间的测试数据传递写出来也会比较难看，还有就是两个flow之间在实际用例中经常需要插入很多额外的操作，而且由于我们后面基于BDD做了代码自动生成，所以我们没有采用全链的方式。","user_name":"作者回复","user_name_real":"dhrbc","uid":"1002226","ctime":1533080199,"ip_address":"","comment_id":17802,"utype":1}],"discussion_count":3,"race_medal":1,"score":"18712827202","product_id":100009601,"comment_content":"然后，对于每一个业务流程类，都会有相应的业务流程输入参数类与之一一对应。具体的步骤通常有这么几步：<br><br>初始化一个业务流程输入参数类的实例；<br><br>给这个实例赋值；<br><br>用这个输入参数实例来初始化业务流程类的实例；<br><br>执行这个业务流程实例。<br>为啥不把这几步再封装一次作为一个业务步骤呢？比如就可以直接：login(username,passed)-&gt;search(name)-&gt;checkout(id)-&gt;logout.<br>也便于自由组合成其他的业务流程。比如：login-&gt;view order-&gt;logout","like_count":5,"discussions":[{"author":{"id":1002226,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/4a/f2/6ea13762.jpg","nickname":"茹炳晟","note":"","ucode":"1361AE1931E2DD","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":421278,"discussion_content":"非常高质量的留言，你说的方法非常好，而且我们也曾经实际尝试了，和你说的完全一样的思路，但是最终我们放弃了，主要原因是技术上的实现难度有点大，我们需要知道哪些flow是可以衔接的，并且还要做到ide中可以自动提示，同时flow之间的测试数据传递写出来也会比较难看，还有就是两个flow之间在实际用例中经常需要插入很多额外的操作，而且由于我们后面基于BDD做了代码自动生成，所以我们没有采用全链的方式。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1533080199,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1130664,"avatar":"https://static001.geekbang.org/account/avatar/00/11/40/a8/6af775e8.jpg","nickname":"Julie","note":"","ucode":"EE243FDA463E9F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":333226,"discussion_content":"看了自己的问题，再结合老师的回答，感觉能理解这篇文章的思想了。是否就是在确定函数的细化粒度？当不好确定函数的细化粒度时，可以根据业务流程来封装每一个函数。\n\n但是上篇文章讲的基于页面的封装，其实也可以对页面的每一个功能封装成一个函数。当测试GUI业务流程时，将每个页面的功能函数，按业务流程组织起来不是也可以吗？\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1607483998,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1130664,"avatar":"https://static001.geekbang.org/account/avatar/00/11/40/a8/6af775e8.jpg","nickname":"Julie","note":"","ucode":"EE243FDA463E9F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":333221,"discussion_content":"我也有类似的疑问。其他地方的业务流程如果涉及登录，搜索，付款，登出，岂不是同样的业务流程代码又需要再写一遍或多遍吗？对代码的维护性不是又增加了工作量吗？\n\n我也比较赞同类似的封装。login(username,passed)->search(name)->checkout(id)->logout.\n如此挨个步骤逐一书写的业务流程抽象，我不太能理解。\n上篇文章讲的基于页面的抽象，我比较能理解。也期望看到后面的知识介绍能加深我对该业务流程抽象的理解。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1607483429,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":67056,"user_name":"sylan215","can_delete":false,"product_type":"c1","uid":1019029,"ip_address":"","ucode":"5A2CF31BC69F40","user_header":"https://static001.geekbang.org/account/avatar/00/0f/8c/95/4544d905.jpg","comment_is_top":false,"comment_ctime":1550063686,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"14434965574","product_id":100009601,"comment_content":"1.上一篇我提到的 selenium 实现的 4 层实现，恰好和老师说的「业务流程」的层次性和逐层抽象的理念相吻合，看来从实际业务场景触发得出的结论是大同小异的；<br><br>2.如果按「业务流程」的概念来解释我之前说的把登陆和退出操作实现在了第二层的函数层就很好理解了，因为登陆和退出操作不是完全固定的具有公共属性的原子操作，所以不能放到原子层，而登陆和实现又没有必要做成通用函数，所以按业务流程来说，也可以不放在函数实现层；<br><br>3.总之，业务流程的理念对于颗粒度划分的解读就是「实用的就是最好的」。<br><br>以上，欢迎关注公众号「sylan215」一起沟通交流。<br>","like_count":3,"discussions":[{"author":{"id":1308043,"avatar":"https://static001.geekbang.org/account/avatar/00/13/f5/8b/6e16be0e.jpg","nickname":"xuzhao","note":"","ucode":"043C075579CA03","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":233003,"discussion_content":"赞同，","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1586883579,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":32646,"user_name":"subona","can_delete":false,"product_type":"c1","uid":1244400,"ip_address":"","ucode":"8F4E128FF687CC","user_header":"https://static001.geekbang.org/account/avatar/00/12/fc/f0/38db74c9.jpg","comment_is_top":false,"comment_ctime":1539656145,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"14424558033","product_id":100009601,"comment_content":"老师有类似的实现源码供参考吗？伪代码看不懂具体该怎么实现","like_count":3},{"had_liked":false,"id":24346,"user_name":"Tall Giraffe","can_delete":false,"product_type":"c1","uid":1164854,"ip_address":"","ucode":"8EC73F2E2B8414","user_header":"https://static001.geekbang.org/account/avatar/00/11/c6/36/fa16543f.jpg","comment_is_top":false,"comment_ctime":1536914908,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"14421816796","product_id":100009601,"comment_content":"老师，我不太清楚LoginFlowParameters这个业务流程参数类的作用是什么，可以解释一下吗。这处有点看不懂","like_count":3},{"had_liked":false,"id":17765,"user_name":"李真真","can_delete":false,"product_type":"c1","uid":1167371,"ip_address":"","ucode":"41E3311E62CA8D","user_header":"https://static001.geekbang.org/account/avatar/00/11/d0/0b/122f08ee.jpg","comment_is_top":false,"comment_ctime":1532944344,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"14417846232","product_id":100009601,"comment_content":"在我自己学自动化测试的过程中，主要有三大疑问:1. 元素的有效定位方法<br>2.断言如何做到全面性<br>3.POM怎么颗粒化<br>这些都没有固定的标准和方法，搞的有点无措。读了本篇，第三个问题就有了很清楚的一种参考方法啦。非常感谢老师！","like_count":3},{"had_liked":false,"id":121459,"user_name":"johnny","can_delete":false,"product_type":"c1","uid":1210226,"ip_address":"","ucode":"54E78B7BBC6AF0","user_header":"https://static001.geekbang.org/account/avatar/00/12/77/72/8f77ddb0.jpg","comment_is_top":false,"comment_ctime":1565142043,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10155076635","product_id":100009601,"comment_content":"经过反复阅读该篇文章和后面的测试数据准备篇。<br>对于GUI自动化脚本封装方式可以概括为如下：<br>GUI自动化脚本涉及到了三次封装<br>1.引入页面对象进行第一次封装<br>2.引入操作函数进行第二次封装<br>3.引入业务流程进行第三次封装<br>在具体实现方面，基于业务流程进行的第三次封装会涉及到和测试数据准备篇用到相似的技术-java的建造者设计模式。<br>茹老师，我的理解正确吗？期待老师的回答","like_count":2},{"had_liked":false,"id":17960,"user_name":"ll","can_delete":false,"product_type":"c1","uid":1165095,"ip_address":"","ucode":"54584F46564543","user_header":"https://static001.geekbang.org/account/avatar/00/11/c7/27/7ff34a0c.jpg","comment_is_top":false,"comment_ctime":1533050561,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10122985153","product_id":100009601,"comment_content":"和老师的思路不谋而合，实际项目也用了基于业务流程封装的业务关键字，写测试用例过程非常灵活好用，功能变更只需要修改业务关键字内部结构，不改用例; 数据的实例化对象也超级好用，灵活改变数据，数据内容丰富多样。期待老师的测试数据准备的课程……","like_count":2},{"had_liked":false,"id":17824,"user_name":"@","can_delete":false,"product_type":"c1","uid":1170424,"ip_address":"","ucode":"6763332333BD61","user_header":"https://static001.geekbang.org/account/avatar/00/11/db/f8/5ed6dcbf.jpg","comment_is_top":false,"comment_ctime":1532968518,"is_pvip":false,"replies":[{"id":"6233","content":"的确是可以的，但是版本管理会比较复杂，每次有版本变化都要重新打包","user_name":"作者回复","user_name_real":"dhrbc","uid":"1002226","ctime":1533080253,"ip_address":"","comment_id":17824,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10122903110","product_id":100009601,"comment_content":"用依赖可以实现不同业务间的衔接","like_count":2,"discussions":[{"author":{"id":1002226,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/4a/f2/6ea13762.jpg","nickname":"茹炳晟","note":"","ucode":"1361AE1931E2DD","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":421292,"discussion_content":"的确是可以的，但是版本管理会比较复杂，每次有版本变化都要重新打包","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1533080253,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":17822,"user_name":"Allen","can_delete":false,"product_type":"c1","uid":1170883,"ip_address":"","ucode":"753D73DDE0C9CD","user_header":"https://static001.geekbang.org/account/avatar/00/11/dd/c3/7f5502d3.jpg","comment_is_top":false,"comment_ctime":1532966421,"is_pvip":false,"replies":[{"id":"6227","content":"能有收获就好，其实我后面还会介绍更好的办法，就是通过gui来捕捉后端的api调用列表，后面的文章会有具体例子，希望可以帮到你","user_name":"作者回复","user_name_real":"dhrbc","uid":"1002226","ctime":1533079692,"ip_address":"","comment_id":17822,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10122901013","product_id":100009601,"comment_content":"公司的业务流程比较复杂，需要在接口层覆盖业务流程的自动化测试。最近正在设计接口自动化的测试方案，看了这篇文章，很有启发。","like_count":2,"discussions":[{"author":{"id":1002226,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/4a/f2/6ea13762.jpg","nickname":"茹炳晟","note":"","ucode":"1361AE1931E2DD","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":421291,"discussion_content":"能有收获就好，其实我后面还会介绍更好的办法，就是通过gui来捕捉后端的api调用列表，后面的文章会有具体例子，希望可以帮到你","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1533079692,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":308076,"user_name":"金子般的心","can_delete":false,"product_type":"c1","uid":1006897,"ip_address":"","ucode":"8F6F217AF0C0EA","user_header":"https://static001.geekbang.org/account/avatar/00/0f/5d/31/2ccc4675.jpg","comment_is_top":false,"comment_ctime":1629381389,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"5924348685","product_id":100009601,"comment_content":"“BDD 就是 Behavior Driven Development，即行为驱动开发，我会在后续文章中详细讲解。”在后续文章中没有看到相关内容","like_count":1},{"had_liked":false,"id":241037,"user_name":"信天游","can_delete":false,"product_type":"c1","uid":2078327,"ip_address":"","ucode":"56563950502A56","user_header":"https://static001.geekbang.org/account/avatar/00/1f/b6/77/834e8058.jpg","comment_is_top":false,"comment_ctime":1597157077,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"5892124373","product_id":100009601,"comment_content":"我想说为什么只能看文字、听音频？为什么不是视频播放？还有其中讲到的文档资料在哪里获取？你这收费节目，又不是免费的？体验一点都不好！差评👎","like_count":1,"discussions":[{"author":{"id":1312893,"avatar":"https://static001.geekbang.org/account/avatar/00/14/08/7d/d95ce139.jpg","nickname":"隐石","note":"","ucode":"8C53A22BDE806E","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":391951,"discussion_content":"得了吧，如果做成视频，知识元素全固化在视频里，无法方便提取，学习效率比起这样图文稿和音频拆分的方式差多了。 涉及到的知识点不可能全部细细的讲解清楚，但你可以从文字稿里复制去百度或别的途径更深入的学习。  ","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1630728951,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1163664,"avatar":"https://static001.geekbang.org/account/avatar/00/11/c1/90/bba17959.jpg","nickname":"Rethink","note":"","ucode":"309398CB285354","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":391618,"discussion_content":"同意！！！！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1630553694,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":93019,"user_name":"后乐","can_delete":false,"product_type":"c1","uid":1264163,"ip_address":"","ucode":"058A631CA1A56B","user_header":"https://static001.geekbang.org/account/avatar/00/13/4a/23/74bf8518.jpg","comment_is_top":false,"comment_ctime":1557379029,"is_pvip":true,"replies":[{"id":"33567","content":"感谢支持，我一直反对直接教工具的使用，只有理解了背后的原理，才能做的更好","user_name":"作者回复","user_name_real":"dhrbc","uid":"1002226","ctime":1557705217,"ip_address":"","comment_id":93019,"utype":1}],"discussion_count":1,"race_medal":2,"score":"5852346325","product_id":100009601,"comment_content":"总结的很到位，很喜欢这种授人以渔的课程！学到了不少，得好好实践下~","like_count":1,"discussions":[{"author":{"id":1002226,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/4a/f2/6ea13762.jpg","nickname":"茹炳晟","note":"","ucode":"1361AE1931E2DD","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":449460,"discussion_content":"感谢支持，我一直反对直接教工具的使用，只有理解了背后的原理，才能做的更好","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1557705217,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":80964,"user_name":"口水窝","can_delete":false,"product_type":"c1","uid":1004838,"ip_address":"","ucode":"6028B5AA10D8A1","user_header":"https://static001.geekbang.org/account/avatar/00/0f/55/26/154f9578.jpg","comment_is_top":false,"comment_ctime":1553765554,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5848732850","product_id":100009601,"comment_content":"继续打卡，还没做到深入GUI自动化封装的阶段，加油，先学习体系，在操作实践！","like_count":1},{"had_liked":false,"id":336206,"user_name":"Geek_9e7b2d","can_delete":false,"product_type":"c1","uid":1912942,"ip_address":"","ucode":"F34668B03F701F","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/TpXzl8Tkc43nScElZibBJDqQ9mUtrrwBhe53w3RRQ3aD4OKMKS8o93BqdLal9DaTz3XTXibIk7kYhAaLFVibqPnWQ/132","comment_is_top":false,"comment_ctime":1646009612,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1646009612","product_id":100009601,"comment_content":"业务抽象有点类似工作流","like_count":0},{"had_liked":false,"id":335271,"user_name":"小呀么小二郎","can_delete":false,"product_type":"c1","uid":1326905,"ip_address":"","ucode":"149540DCFDF43E","user_header":"https://static001.geekbang.org/account/avatar/00/14/3f/39/b1558fc9.jpg","comment_is_top":false,"comment_ctime":1645434734,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1645434734","product_id":100009601,"comment_content":"业务流程抽象的概念是真的很抽象。<br>这节课好像看懂啦，但还需要应用到实际项目中试试看，到时候我再回来复习~","like_count":0},{"had_liked":false,"id":273514,"user_name":"yinghuamanwu_1","can_delete":false,"product_type":"c1","uid":1172100,"ip_address":"","ucode":"E61235BD36F29C","user_header":"https://static001.geekbang.org/account/avatar/00/11/e2/84/d77c3816.jpg","comment_is_top":false,"comment_ctime":1610618785,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1610618785","product_id":100009601,"comment_content":"老师，有个问题没太想通，针对登陆的业务流程，如果我有两个场景，一个是用户名密码，另一个是用户名密码和验证码，如果我想跑这两个场景的完整业务流程，我需要实现两个登陆的类吗？然后这两个类分别组合后面的业务逻辑吗？这样还是不能复用好像。期待老师帮忙解惑。","like_count":0,"discussions":[{"author":{"id":2766923,"avatar":"https://static001.geekbang.org/account/avatar/00/2a/38/4b/98a94039.jpg","nickname":"红糖鸡蛋","note":"","ucode":"04B662F3A8F1E0","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":405832,"discussion_content":"我觉得这个问题写一个class（username，password，code=默认）就搞定了，验证码有的时候就传，没有的时候就不传","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1634652055,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":271468,"user_name":"Geek_Dream","can_delete":false,"product_type":"c1","uid":1474048,"ip_address":"","ucode":"741D3E7167C494","user_header":"https://static001.geekbang.org/account/avatar/00/16/7e/00/c00ddb9d.jpg","comment_is_top":false,"comment_ctime":1609654875,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1609654875","product_id":100009601,"comment_content":"目前公司还没有用到业务流程的封装，看了本章节使我了解到，使用这个封装方法，首先必须要对需求业务非常理解，这样才能结合GUI进行业务的抽象处理，业务抽象其实我可以这么去理解，就是运用GUI自动化的方式来封装模型及对象，实现各个页面之间的耦合。","like_count":0},{"had_liked":false,"id":266775,"user_name":"Julie","can_delete":false,"product_type":"c1","uid":1130664,"ip_address":"","ucode":"EE243FDA463E9F","user_header":"https://static001.geekbang.org/account/avatar/00/11/40/a8/6af775e8.jpg","comment_is_top":false,"comment_ctime":1607484193,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1607484193","product_id":100009601,"comment_content":"我也有楼上同学的类似的疑问。其他地方的业务流程如果涉及登录，搜索，付款，登出，岂不是同样的业务流程代码又需要再写一遍或多遍吗？对代码的维护性不是又增加了工作量吗？<br>我也比较赞同类似的封装。login(username,passed)-&gt;search(name)-&gt;checkout(id)-&gt;logout.<br>如此挨个步骤逐一书写的业务流程抽象，我不太能理解。<br><br>看了自己的问题，再结合老师对楼上同学的回答，感觉能理解这篇文章的思想了。是否就是在确定函数的细化粒度？当不好确定函数的细化粒度时，可以根据业务流程来封装每一个函数。<br>但是上篇文章讲的基于页面的封装，其实也可以对页面的每一个功能封装成一个函数。当测试GUI业务流程时，将每个页面的功能函数，按业务流程组织起来不是也可以吗？<br>","like_count":0},{"had_liked":false,"id":233065,"user_name":"捷后愚生","can_delete":false,"product_type":"c1","uid":1170483,"ip_address":"","ucode":"A1F935D39C8488","user_header":"https://static001.geekbang.org/account/avatar/00/11/dc/33/a68c6b26.jpg","comment_is_top":false,"comment_ctime":1594208825,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1594208825","product_id":100009601,"comment_content":"还没完全理解这篇文章的思路，得多读几遍才行。<br><br>掌握面相对象设计思想才能更好地理解这篇文章啊，测试真的是很有必要学一门编程。","like_count":0},{"had_liked":false,"id":197204,"user_name":"渐入佳境","can_delete":false,"product_type":"c1","uid":1666737,"ip_address":"","ucode":"F56E203FE0D6B1","user_header":"https://static001.geekbang.org/account/avatar/00/19/6e/b1/4fb7e6d6.jpg","comment_is_top":false,"comment_ctime":1585363236,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1585363236","product_id":100009601,"comment_content":"赞👍🏻","like_count":0},{"had_liked":false,"id":180524,"user_name":"Winner","can_delete":false,"product_type":"c1","uid":1053857,"ip_address":"","ucode":"73B674E8842DFB","user_header":"https://static001.geekbang.org/account/avatar/00/10/14/a1/dff11904.jpg","comment_is_top":false,"comment_ctime":1582304897,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1582304897","product_id":100009601,"comment_content":"这章读下来，感觉测试也类似有开发中的服务划分的规划设计，DDD思想也可以用到测试中，和BDD有共通之处。","like_count":0},{"had_liked":false,"id":153672,"user_name":"LIKE","can_delete":false,"product_type":"c1","uid":1254252,"ip_address":"","ucode":"9DAB7F9051648A","user_header":"https://static001.geekbang.org/account/avatar/00/13/23/6c/82ba5e1f.jpg","comment_is_top":false,"comment_ctime":1574295991,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1574295991","product_id":100009601,"comment_content":"如果你的dao层用的mybatis，对这个参数实体就能很好理解了。<br>老师关于业务流当中的输出参数，能做进一步讲解吗？谢谢","like_count":0},{"had_liked":false,"id":94472,"user_name":"Geek_7d396d","can_delete":false,"product_type":"c1","uid":1499658,"ip_address":"","ucode":"6D908DEAF6BC25","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLZicPHOCSOD4FmxLhKCYUrLrtP8IvqRMqVMealYMQD84w22VibkxNHnILia1HwSlDvDZLDBlVcoJnJg/132","comment_is_top":false,"comment_ctime":1557819680,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1557819680","product_id":100009601,"comment_content":"按照13章给的抽象模式：“XXXPage.YYYComponent.ZZZOpera... ，  这里的YYYComponent 是指啥呢？<br><br>","like_count":0,"discussions":[{"author":{"id":1112210,"avatar":"https://static001.geekbang.org/account/avatar/00/10/f8/92/eaafff96.jpg","nickname":"Amos","note":"","ucode":"61DB72D99AF9EA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":225318,"discussion_content":"A页面的B模块，在B模块上做C操作","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1586355216,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":40458,"user_name":"johnny","can_delete":false,"product_type":"c1","uid":1210226,"ip_address":"","ucode":"54E78B7BBC6AF0","user_header":"https://static001.geekbang.org/account/avatar/00/12/77/72/8f77ddb0.jpg","comment_is_top":false,"comment_ctime":1542621716,"is_pvip":false,"replies":[{"id":"15934","content":"实际代码可能没法发，因为不来源，实在不好意思","user_name":"作者回复","user_name_real":"dhrbc","uid":"1002226","ctime":1543470041,"ip_address":"","comment_id":40458,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1542621716","product_id":100009601,"comment_content":"第13节的内容能理解，我已经将伪代码实现了。但是这节的内容不好理解，老师可以给我发一个完整的示例吗（不是用伪代码描述的，是真正用java语言实现的代码示例）？简单的业务流程，只要能说明第14节内容就行。我的邮箱是cjnjk@163.com","like_count":0,"discussions":[{"author":{"id":1002226,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/4a/f2/6ea13762.jpg","nickname":"茹炳晟","note":"","ucode":"1361AE1931E2DD","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":429527,"discussion_content":"实际代码可能没法发，因为不来源，实在不好意思","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543470041,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":35011,"user_name":"小老鼠","can_delete":false,"product_type":"c1","uid":1257460,"ip_address":"","ucode":"C663A0C863A515","user_header":"https://static001.geekbang.org/account/avatar/00/13/2f/f4/2dede51a.jpg","comment_is_top":false,"comment_ctime":1540381510,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1540381510","product_id":100009601,"comment_content":"如果某个用户场景别的测试用例肯定用不上，是否也需要封装，主要目的是便于阅读？","like_count":0,"discussions":[{"author":{"id":1619402,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b5/ca/bba4d696.jpg","nickname":"牺牲","note":"","ucode":"5780E562A43494","race_medal":2,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":5783,"discussion_content":"我认为封装的主要目的是为了减少代码量和降低重复率，其次才是便于阅读。一次性使用的代码量上没有区别，但是也建议封装一下，一是不排除后期其他场景调用的可能，二是为了美观简洁。","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1566464523,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":24547,"user_name":"江鸟川","can_delete":false,"product_type":"c1","uid":1168653,"ip_address":"","ucode":"5B4018E6361BFF","user_header":"https://static001.geekbang.org/account/avatar/00/11/d5/0d/ec01fd92.jpg","comment_is_top":false,"comment_ctime":1537140234,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1537140234","product_id":100009601,"comment_content":"做人用RF做界面自动化吗？感觉还是只是会个皮毛","like_count":0},{"had_liked":false,"id":20067,"user_name":"Kuzaman","can_delete":false,"product_type":"c1","uid":1166957,"ip_address":"","ucode":"DB60937873CBF1","user_header":"https://static001.geekbang.org/account/avatar/00/11/ce/6d/6de830ef.jpg","comment_is_top":false,"comment_ctime":1534249844,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1534249844","product_id":100009601,"comment_content":"精彩的文章，理清了思路，准备通用到接口测试中，把前一个响应的参数对全部抽取出来，做类似Java 里的get方法，方便下一个接口使用。期待与老师9月2号的见面。","like_count":0},{"had_liked":false,"id":18315,"user_name":"Sunshine","can_delete":false,"product_type":"c1","uid":1163723,"ip_address":"","ucode":"15969D78D9A651","user_header":"https://static001.geekbang.org/account/avatar/00/11/c1/cb/55fef969.jpg","comment_is_top":false,"comment_ctime":1533256861,"is_pvip":false,"replies":[{"id":"6558","content":"能够有收获就是最好的","user_name":"作者回复","user_name_real":"dhrbc","uid":"1002226","ctime":1533568961,"ip_address":"","comment_id":18315,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1533256861","product_id":100009601,"comment_content":"感谢老师讲解，现在脑子有了一个更清晰的思路","like_count":0,"discussions":[{"author":{"id":1002226,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/4a/f2/6ea13762.jpg","nickname":"茹炳晟","note":"","ucode":"1361AE1931E2DD","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":421472,"discussion_content":"能够有收获就是最好的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1533568961,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":18022,"user_name":"涅槃Ls","can_delete":false,"product_type":"c1","uid":1163943,"ip_address":"","ucode":"39EDBFB303D668","user_header":"https://static001.geekbang.org/account/avatar/00/11/c2/a7/c4de1048.jpg","comment_is_top":false,"comment_ctime":1533089422,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1533089422","product_id":100009601,"comment_content":"打卡14","like_count":0},{"had_liked":false,"id":17917,"user_name":"雪哥","can_delete":false,"product_type":"c1","uid":1166268,"ip_address":"","ucode":"7AE50B31768A28","user_header":"https://static001.geekbang.org/account/avatar/00/11/cb/bc/fe68899c.jpg","comment_is_top":false,"comment_ctime":1533020000,"is_pvip":false,"replies":[{"id":"6226","content":"这类网站是有很多，不会如果你是想学某一种工具，我强烈推荐你上官网","user_name":"作者回复","user_name_real":"dhrbc","uid":"1002226","ctime":1533079600,"ip_address":"","comment_id":17917,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1533020000","product_id":100009601,"comment_content":"新手问下，有什么好的论坛，心得交流平台吗，或者测试经常浏览的技术网站","like_count":0,"discussions":[{"author":{"id":1002226,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/4a/f2/6ea13762.jpg","nickname":"茹炳晟","note":"","ucode":"1361AE1931E2DD","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":421327,"discussion_content":"这类网站是有很多，不会如果你是想学某一种工具，我强烈推荐你上官网","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1533079600,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":17821,"user_name":"Allen","can_delete":false,"product_type":"c1","uid":1170883,"ip_address":"","ucode":"753D73DDE0C9CD","user_header":"https://static001.geekbang.org/account/avatar/00/11/dd/c3/7f5502d3.jpg","comment_is_top":false,"comment_ctime":1532966201,"is_pvip":false,"replies":[{"id":"6228","content":"非常感谢认可，能够帮助到大家，是我最想看到的","user_name":"作者回复","user_name_real":"dhrbc","uid":"1002226","ctime":1533079733,"ip_address":"","comment_id":17821,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1532966201","product_id":100009601,"comment_content":"我们公司的业务流程比较复杂，看了这篇文章，有了新的思路，受教了。","like_count":0,"discussions":[{"author":{"id":1002226,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/4a/f2/6ea13762.jpg","nickname":"茹炳晟","note":"","ucode":"1361AE1931E2DD","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":421290,"discussion_content":"非常感谢认可，能够帮助到大家，是我最想看到的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1533079733,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":17816,"user_name":"彬彬ieeeeemily","can_delete":false,"product_type":"c1","uid":1171509,"ip_address":"","ucode":"E8B257B12EBF77","user_header":"https://static001.geekbang.org/account/avatar/00/11/e0/35/cd9c5653.jpg","comment_is_top":false,"comment_ctime":1532964992,"is_pvip":false,"replies":[{"id":"6229","content":"嗯嗯，系统的去做才能发挥gui的最佳效率","user_name":"作者回复","user_name_real":"dhrbc","uid":"1002226","ctime":1533079761,"ip_address":"","comment_id":17816,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1532964992","product_id":100009601,"comment_content":"嗯，我也是这种思想去做的，更容易组装出更多的业务场景用例","like_count":0,"discussions":[{"author":{"id":1002226,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/4a/f2/6ea13762.jpg","nickname":"茹炳晟","note":"","ucode":"1361AE1931E2DD","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":421287,"discussion_content":"嗯嗯，系统的去做才能发挥gui的最佳效率","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1533079761,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":17794,"user_name":"叶夏立","can_delete":false,"product_type":"c1","uid":1184057,"ip_address":"","ucode":"0A756C4553D4BB","user_header":"https://static001.geekbang.org/account/avatar/00/12/11/39/f7dcc2e6.jpg","comment_is_top":false,"comment_ctime":1532956818,"is_pvip":false,"replies":[{"id":"6232","content":"嗯嗯，是的，都是触类旁通的","user_name":"作者回复","user_name_real":"dhrbc","uid":"1002226","ctime":1533080215,"ip_address":"","comment_id":17794,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1532956818","product_id":100009601,"comment_content":"确实是不错，看来接口测试平台也可以借鉴一下这种做法。","like_count":0,"discussions":[{"author":{"id":1002226,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/4a/f2/6ea13762.jpg","nickname":"茹炳晟","note":"","ucode":"1361AE1931E2DD","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":421275,"discussion_content":"嗯嗯，是的，都是触类旁通的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1533080215,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":17754,"user_name":"张红占","can_delete":false,"product_type":"c1","uid":1177173,"ip_address":"","ucode":"D24026D81B5D9C","user_header":"https://static001.geekbang.org/account/avatar/00/11/f6/55/b3ab84a2.jpg","comment_is_top":false,"comment_ctime":1532929451,"is_pvip":false,"replies":[{"id":"6234","content":"这个不看代码会比较难讲清楚，但是这里技术实现上的关键点就是flow对象的返回类型是common page对象，同样geendpage返回的也是common page对象","user_name":"作者回复","user_name_real":"dhrbc","uid":"1002226","ctime":1533080402,"ip_address":"","comment_id":17754,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1532929451","product_id":100009601,"comment_content":"需要特别注意的是，第 12 行中 withStartPage(loginFlow.getEndPage()) 的含义是，SearchBookFlow 的起始页面将会使用之前 loginFlow 的结束页面。<br>-----这个实现方式能否细讲下","like_count":0,"discussions":[{"author":{"id":1002226,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/4a/f2/6ea13762.jpg","nickname":"茹炳晟","note":"","ucode":"1361AE1931E2DD","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":421260,"discussion_content":"这个不看代码会比较难讲清楚，但是这里技术实现上的关键点就是flow对象的返回类型是common page对象，同样geendpage返回的也是common page对象","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1533080402,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]}]}