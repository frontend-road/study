{"id":266631,"title":"13 | 各大开放平台是如何使用OAuth 2.0的？","content":"<p>你好，我是王新栋。</p><p>在咱们这门课中，我提到了很多次“开放平台”，不难理解，它的作用就是企业把自己的业务能力主要以开放API的形式，赋能给外部开发者。而作为第三方开发者或者ISV（独立软件供应商）在接入这些开放平台的时候，我们最应该关心的就是它们的官方文档，关注接入的流程是怎样的、对应的API是什么、每个API都传递哪些参数，也就差不多够了。</p><p>到这里，你会发现“开放平台的官方文档”会是一个关键点。不过呢，当你去各大开放平台上面看这些文档的时候，就会发现这些文档非常分散。</p><p>其中的原因也很简单，那就是开放平台为了让已经具备OAuth 2.0知识的研发人员去快速地对接平台上面的业务，把各类对接流程做了分类归档。比如，你会发现微信开放平台上有使用授权码获取授权信息的文档，也有获取令牌的文档，但并没有一份整体的、能够串起来的文档说明。从我的角度来看，这其实也就间接提高了使用门槛，因为如果你不懂OAuth 2.0，基本是没办法理解那些分类的。</p><p>那么，今天我就借着这个点，和你说说以京东、微信、支付宝、美团为代表的各大开放平台是如何使用OAuth 2.0的。理解了这个问题，你以后再对接一个开放平台、再阅读一份官方对接文档时，就更能明白它们的底层逻辑了。</p><!-- [[[read_end]]] --><p>在正式介绍各大开放平台的使用细节之前，我们先来看看大厂的开放平台全局体系。据我观察，各个开放平台基本的系统结构和授权系统在中间的交互流程，大同小异，都是通过授权服务来授权，通过网关来鉴权。所以接下来，我就以京东商家开放平台为例，来和你说说开放平台的体系到底是什么样子的。</p><h2>开放平台体系是什么样子的？</h2><p>我们首先来看一下京东商家开放平台全局体系的结构，如下图所示。</p><p><img src=\"https://static001.geekbang.org/resource/image/57/56/5775b5bbc363ba2f94d9f6f8e2d05d56.png?wh=1620*1024\" alt=\"\" title=\"图1 京东商家开放平台体系结构示意图\"></p><p>我们可以把这个架构体系分为三部分来看：</p><ol>\n<li>第三方软件，一般是指第三方开发者或者ISV通过对接开放平台来实现的应用软件，比如小兔打单软件。</li>\n<li>京东商家开放平台，包含API网关服务、OAuth 2.0授权服务和第三方软件开发者中心服务。其中，API网关服务和OAuth 2.0授权服务，是开放平台的“两条腿”；第三方软件开发者中心服务，是为开发者提供管理第三方软件应用基本信息的服务，比如app_id、app_secret等信息。</li>\n<li>京东内部的各个微服务，比如订单服务、商品服务等。这些微服务，就是我们之前提到的受保护资源服务。</li>\n</ol><p>从图中我们还可以看到这个体系整体的调用关系是：第三方软件通过HTTP协议请求到开放平台，更具体地说是开放平台的API网关服务，然后由API网关通过内部的RPC调用到各个微服务。</p><p>接下来，我们再以用户小明使用小兔打单软件为例，来看看这些系统角色之间具体又是怎样交互的？</p><p><img src=\"https://static001.geekbang.org/resource/image/30/4b/30f2b2db8c01f0fc60e2d821cd59f94b.png?wh=2086*846\" alt=\"\" title=\"图2 开放平台体系交互示意图\"></p><p>到这里，我们可以发现，在开放平台体系中各个系统角色间的交互可以归结为：</p><ol>\n<li>当用户小明访问小兔软件的时候，小兔会首先向开放平台的OAuth 2.0 授权服务去请求访问令牌，接着小兔拿着访问令牌去请求API网关服务；</li>\n<li>在API网关服务中，会做最基本的两种校验，一种是访问令牌的合法性校验，比如访问令牌是否过期的校验，另一种是小兔打单软件的基本信息的合法性校验，比如app_id和app_secret的校验；</li>\n<li>都校验成功之后，API网关服务会发起最终的数据请求。</li>\n</ol><p>这里需要说明的是，在<a href=\"https://time.geekbang.org/column/article/257767\">第5讲</a>中我们提到，验证访问令牌或者第三方软件应用信息的时候，都是在受保护资源服务中去做的。<strong>当有了API网关这一层的时候，这些校验工作就会都落到了API网关的身上，因为我们不能让很多个受保护资源服务做同样的事情</strong>。</p><p>我们理解了京东商家开放平台的体系结构后，可以小结下了。依靠开放平台提供的能力，可以说开放平台、用户和开发者实现了三赢：小明因为使用小兔提高了打单效率；小兔的开发者因为小明的订购服务获得了收益；而通过开放出去的API让小兔帮助小明能够极快地处理C端用户的订单，京东提高了用户的使用体验。</p><p>但同时呢，开放也是一把双刃剑。理想状态下，平台、开发者、用户可以实现三赢，但正如我们在<a href=\"https://time.geekbang.org/column/article/261403\">第8讲</a>和<a href=\"https://time.geekbang.org/column/article/263763\">第10讲</a>中提到的，安全的问题绝不容忽视，而用户的信息安全又是重中之重。接下来，我就和你分享一个，开放平台体系是如何解决访问令牌安全问题的案例。</p><p>我们已经知道，用户给第三方软件授权之后，授权服务就会生成一个访问令牌，而且这个访问令牌是跟用户关联的。比如，小明给小兔打单软件进行了授权，那么此时访问令牌的粒度就是：小兔打单软件+小明。</p><p>我们还知道了，小兔打单软件可以拿着这个访问令牌去代表小明访问小明的数据；如果访问令牌过期了，小兔打单软件还可以继续使用刷新令牌来访问，直到刷新令牌也过期了。</p><p>现在问题来了，如果小明注销了账号，或者修改了自己的密码，那他之前为其它第三方软件进行授权的访问令牌就应该立即失效。否则，在刷新令牌过期之前，第三方软件可以一直拿着之前的访问令牌去请求数据。这显然不合理。</p><p>所以在这种情况下，授权服务就要通过MQ（消息队列）接收用户的注销和修改密码这两类消息，然后对访问令牌进行清理。</p><p><img src=\"https://static001.geekbang.org/resource/image/9d/ca/9d05fa572bccec8da5c895b49a9946ca.png?wh=1550*734\" alt=\"\" title=\"图3 访问令牌的清理\"></p><p>其实，这个案例中解决访问令牌安全问题的方式，不仅仅适用于开放平台，还可以为你在企业内构建自己的OAuth 2.0授权体系结构时提供借鉴。</p><p>以上就是开放平台整体的结构，以及其中需要重点关注的用户访问令牌的安全性问题了。我们作为第三方软件开发者，在对接到这些开放平台或者浏览它们的网站时，几乎都能看到类似这样的一句话：“所有接口都需要接入OAuth授权，经过用户确认授权后才可以调用”，这正是OAuth 2.0的根本性作用。</p><p>理解了开放平台的脉络之后，接下来，就让我们通过一组图看一看开放平台是如何使用OAuth 2.0授权流程的吧。</p><h2>各大开放平台授权流程</h2><p>我们以<a href=\"https://developers.weixin.qq.com/doc/oplatform/Website_App/WeChat_Login/Wechat_Login.html\">微信</a>、<a href=\"https://opendocs.alipay.com/open/common/105193/\">支付宝</a>、<a href=\"https://open.waimai.meituan.com/openapi_docs/index.html\">美团</a>为例，看看它们在开放授权上是如何使用OAuth 2.0 的。我们首先看一下官方的授权流程图：</p><p><img src=\"https://static001.geekbang.org/resource/image/ab/dc/abc7611d467d45bf39d8e07e0d0267dc.png?wh=1570*736\" alt=\"\" title=\"图4 微信开放平台授权流程图\"></p><blockquote>\n<p>引自<a href=\"https://developers.weixin.qq.com/doc/oplatform/Website_App/WeChat_Login/Wechat_Login.html\">微信官方文档</a></p>\n</blockquote><p><img src=\"https://static001.geekbang.org/resource/image/e2/b7/e27a6836ef686e23284f9314cc3a25b7.png?wh=1534*1030\" alt=\"\" title=\"图5 支付宝开放平台授权流程图\"></p><blockquote>\n<p>引自<a href=\"https://opendocs.alipay.com/open/common/105193/\">支付宝开放平台文档</a></p>\n</blockquote><p><img src=\"https://static001.geekbang.org/resource/image/e9/ea/e98e9ed5e607561df173262703ca3dea.png?wh=1864*1300\" alt=\"\" title=\"图6 美团开放平台授权流程图\"></p><blockquote>\n<p>引自<a href=\"https://open.waimai.meituan.com/openapi_docs/oauth/\">美团外卖开放平台</a></p>\n</blockquote><p>我们可以在这三张授权流程图中看到，都有和授权码code相关的文字。这就说明，<strong>它们都建议开发者首选授权码流程</strong>。所以，你现在更能明白我为啥在这门课里要花这么多篇幅，来和你讲授权码许可相关的内容了吧。</p><p>在这一讲最开始我也提到了，我们作为开发者在对接开放平台的时候，最关心的就是它们提供的官方对接文档了。而<strong>这些文档里面，最让人头疼就是那些通信过程中需要传递的参数</strong>了。下面我会带着你从我的角度，以京东商家开放平台为例，给你串下这些参数背后的含义，以及关键点。这样你在做具体接入操作的时候，就可以举重若轻了。</p><h2>授权码流程中的参数说明</h2><p>概括来讲，在京东商家开放平台的授权服务这一侧，提供服务的就是两个端点：负责生成授权码的<strong>授权端点</strong>以及负责颁发访问令牌的<strong>令牌端点</strong>。整个授权过程中，虽然看着有很多参数，但你可以围绕这两条线，来对它们做归类。</p><p>接下来，我们继续以小兔打单软件为例，来看一下它在对接京东商家开放平台的时候都用到了哪些参数。</p><p>小明在使用小兔打单软件的时候，首先被小兔通过重定向的方式引导到京东商家开放平台的授权服务上，其实就是引导到了授权服务的授权端点上。这个重定向的过程中用到的参数如下：</p><p><img src=\"https://static001.geekbang.org/resource/image/0e/03/0e8394fedd9205e38c3yyc6e7bae2303.jpg?wh=1956*1377\" alt=\"\" title=\"图7 重定向过程用到的参数\"></p><p>这里需要强调的是，对于state参数，现在官方都是“推荐”使用。我们在<a href=\"https://time.geekbang.org/column/article/261403\">第8讲</a>中说过，OAuth 2.0官方建议的避免CSRF攻击的方式，就是使用state参数。所以安全起见，你还是应该使用。</p><p>接着，京东商家开放平台授权服务的授权端点，会向小兔软件做出响应。这个响应的过程用到的基本参数，如下：</p><p><img src=\"https://static001.geekbang.org/resource/image/b6/61/b653bc541a98920001385612f2309361.jpg?wh=1956*533\" alt=\"\" title=\"图8 授权端点响应小兔软件用到的参数\"></p><p>对于授权码code的值，一般建议的最长生命周期是10分钟。另外，小兔打单软件只能被允许使用一次该授权码的值，如果使用一次之后还用同样的授权码值来请求，授权服务必须拒绝。</p><p>对于这次的state值，授权服务每次都是必须要返回给小兔打单软件的。无论小兔打单软件在起初的时候有没有发送该值，都必须返回回去，如果没有就返回空。这样当小兔打单软件日后升级增加该值的时候，京东商家开放平台就不需要改动任何代码逻辑了。</p><p>在拿到授权码code的值之后，接下来就是小兔打单软件向京东商家开放平台的授权服务的令牌端点发起请求，申请访问令牌。这个过程中需要传递的基本参数，如下：</p><p><img src=\"https://static001.geekbang.org/resource/image/18/7f/18c8245e61ce14c1f7a227a6e713b37f.jpg?wh=1956*1205\" alt=\"\" title=\"图9 申请访问令牌需要传递的基本参数\"></p><p>在授权服务接收到小兔打单软件申请访问令牌的请求后，像授权端点一样，令牌端点也需要向小兔打单软件做出响应。这个过程涉及到的基本参数，如下：</p><p><img src=\"https://static001.geekbang.org/resource/image/1a/b5/1ac4ded2b7131b475ac71bf4b39c72b5.jpg?wh=1956*1118\" alt=\"\" title=\"图10 令牌端点响应小兔软件涉及的参数\"></p><p>对于这里返回的scope值，我要强调下，其实就是小兔软件被允许的实际的权限范围，因为小明有可能给小兔软件授予了小于它在开放平台注册时申请的权限范围。比如，小兔打单软件申请了查询历史订单、查询当天订单两个API的权限，但小明可能只给小兔授权了查询当天订单API的权限。</p><h2>总结</h2><p>好了，这一讲就要结束了。我们一起学习了开放平台体系的整体结构和授权流程，以及第三方软件开发者关心的对接开放平台的通信流程中需要传递的参数。现在，我希望你能记住以下三点内容。</p><ol>\n<li>当有多个受保护资源服务的时候，基本的鉴权工作，包括访问令牌的验证、第三方软件应用信息的验证都应该抽出一个 API网关层，并把这些基本的工作放到这个API网关层。</li>\n<li>各大开放平台都是推荐使用授权码许可流程，无论是网页版的Web应用程序，还是移动应用程序。</li>\n<li>对于第三方软件开发者重点关注的参数，可以从授权服务的授权端点和令牌端点来区分，授权端点重点是授权码请求和响应的处理，令牌端点重点是访问令牌请求和响应的处理。</li>\n</ol><h2>思考题</h2><p>在有了API网关这一层之后，API网关向订单服务请求数据的时候，还是传递访问令牌access_token的值吗？如果不是的话，它传递的又是什么值呢？</p><p>欢迎你在留言区分享你的观点，也欢迎你把今天的内容分享给其他朋友，我们一起交流。</p>","neighbors":{"left":{"article_title":"12 | 架构案例：基于OAuth 2.0/JWT的微服务参考架构","id":257837},"right":{"article_title":"14 | 查漏补缺：OAuth 2.0 常见问题答疑","id":267315}},"comments":[{"had_liked":false,"id":238278,"user_name":"一步","can_delete":false,"product_type":"c1","uid":1005391,"ip_address":"","ucode":"73CEA468CE70C3","user_header":"https://static001.geekbang.org/account/avatar/00/0f/57/4f/6fb51ff1.jpg","comment_is_top":false,"comment_ctime":1596109389,"is_pvip":true,"replies":[{"id":"88059","content":"是的，可以这样做。","user_name":"作者回复","user_name_real":"王新栋","uid":"1352303","ctime":1596155839,"ip_address":"","comment_id":238278,"utype":1}],"discussion_count":2,"race_medal":0,"score":"66020618829","product_id":100053901,"comment_content":"访问令牌 access_token 的有效性在API GATEWAY 层 已经验证过了，所以不需要向受保护资源服务传递， 只需要把 token 的有效用户信息提取出来向后传递就可以了","like_count":15,"discussions":[{"author":{"id":1352303,"avatar":"https://static001.geekbang.org/account/avatar/00/14/a2/6f/d239ed80.jpg","nickname":"王新栋","note":"","ucode":"0A5D089B8E1E9D","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":502691,"discussion_content":"是的，可以这样做。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1596155839,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1350159,"avatar":"https://static001.geekbang.org/account/avatar/00/14/9a/0f/da7ed75a.jpg","nickname":"芒果少侠","note":"","ucode":"98D0BBB52BB80F","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":340597,"discussion_content":"赞，只需向BFF传递统一的用户信息参数就可以了，比如说jwt","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1610074310,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":250680,"user_name":"胖大蟲","can_delete":false,"product_type":"c1","uid":1300072,"ip_address":"","ucode":"04FDFFD273A695","user_header":"https://static001.geekbang.org/account/avatar/00/13/d6/68/3855df56.jpg","comment_is_top":false,"comment_ctime":1601194426,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"27370998202","product_id":100053901,"comment_content":"关于redirect_uri我不太明白，既然在注册的时候已经填了，为什么请求授权码时还要再传一遍这个参数？","like_count":6,"discussions":[{"author":{"id":1007204,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/5e/64/1becc599.jpg","nickname":"drawping","note":"","ucode":"A5F0E179CBA217","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":326552,"discussion_content":"开放平台可以对uri 验证一次是否与注册时一致。","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1605616013,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2118334,"avatar":"https://static001.geekbang.org/account/avatar/00/20/52/be/dcf03363.jpg","nickname":"聪亮","note":"","ucode":"FDF53FE8FE7CCD","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":554999,"discussion_content":"注册时可能会填了多个","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1646714920,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":240359,"user_name":"她的男孩","can_delete":false,"product_type":"c1","uid":1355762,"ip_address":"","ucode":"7EA0E2B6C290CF","user_header":"https://static001.geekbang.org/account/avatar/00/14/af/f2/69fa8b77.jpg","comment_is_top":false,"comment_ctime":1596876345,"is_pvip":false,"replies":[{"id":"88819","content":"如果前面有网关这一层，受保护资源服务，可以不用过多关注安全相关的内容，当然要做好水平越权的防护。","user_name":"作者回复","user_name_real":"王新栋","uid":"1352303","ctime":1597021326,"ip_address":"","comment_id":240359,"utype":1}],"discussion_count":1,"race_medal":0,"score":"18776745529","product_id":100053901,"comment_content":"受保护的资源服务部做任何的安全相关的设计吗？","like_count":4,"discussions":[{"author":{"id":1352303,"avatar":"https://static001.geekbang.org/account/avatar/00/14/a2/6f/d239ed80.jpg","nickname":"王新栋","note":"","ucode":"0A5D089B8E1E9D","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":503415,"discussion_content":"如果前面有网关这一层，受保护资源服务，可以不用过多关注安全相关的内容，当然要做好水平越权的防护。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1597021326,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":278440,"user_name":"林绵程","can_delete":false,"product_type":"c1","uid":1073233,"ip_address":"","ucode":"F3857E9BC9BE3B","user_header":"https://static001.geekbang.org/account/avatar/00/10/60/51/e21d740f.jpg","comment_is_top":false,"comment_ctime":1612943488,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10202878080","product_id":100053901,"comment_content":"老师， 用户第一次第三方授权后如果access_token不给到客户端，客户端下次登录的时候拿什么凭证来跟小兔授权？是实现登录的过程中小兔需要跟自己的客户端去有个凭证交互的过程么？","like_count":2},{"had_liked":false,"id":241607,"user_name":"Hurt","can_delete":false,"product_type":"c1","uid":1050946,"ip_address":"","ucode":"DCE7428CCF08EF","user_header":"https://static001.geekbang.org/account/avatar/00/10/09/42/1f762b72.jpg","comment_is_top":false,"comment_ctime":1597369566,"is_pvip":false,"replies":[{"id":"89200","content":"是两个不同维度的事情，OAuth是授权。接入支付，比如APP接入微信支付后，商家通过微信提供的SDK调用微信支付模块完成收款需求。这里面相同的地方在于都需要提前注册好应用的标识APPID，并被分配一个秘钥，还有回调这样的流程在里面，比如支付结果回调告知，OAuth里面也有回调。","user_name":"作者回复","user_name_real":"王新栋","uid":"1352303","ctime":1597379102,"ip_address":"","comment_id":241607,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10187304158","product_id":100053901,"comment_content":"老师 接入支付和OAuth2.0有什么异同呢","like_count":2,"discussions":[{"author":{"id":1352303,"avatar":"https://static001.geekbang.org/account/avatar/00/14/a2/6f/d239ed80.jpg","nickname":"王新栋","note":"","ucode":"0A5D089B8E1E9D","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":503786,"discussion_content":"是两个不同维度的事情，OAuth是授权。接入支付，比如APP接入微信支付后，商家通过微信提供的SDK调用微信支付模块完成收款需求。这里面相同的地方在于都需要提前注册好应用的标识APPID，并被分配一个秘钥，还有回调这样的流程在里面，比如支付结果回调告知，OAuth里面也有回调。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1597379102,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":315012,"user_name":"李伟","can_delete":false,"product_type":"c1","uid":1239462,"ip_address":"","ucode":"F0EF60EB250B20","user_header":"https://static001.geekbang.org/account/avatar/00/12/e9/a6/69907ec1.jpg","comment_is_top":false,"comment_ctime":1633658316,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"5928625612","product_id":100053901,"comment_content":"想咨询一下，关于开发者的权限这块如何设计，通过scope如何与系统的真实权限结合起来呢？","like_count":1},{"had_liked":false,"id":308798,"user_name":"醇氧","can_delete":false,"product_type":"c1","uid":1332019,"ip_address":"","ucode":"E883064F6C1937","user_header":"https://static001.geekbang.org/account/avatar/00/14/53/33/379456b7.jpg","comment_is_top":false,"comment_ctime":1629802823,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5924770119","product_id":100053901,"comment_content":"老师你好，除了spring Security 自己的4个模式。那我们自己定义一个模式，也是可以的吧，我自己写这个定义的模式会影响到其他的模式不可用。 比如会 org.springframework.security.authentication.ProviderNotFoundException: No AuthenticationProvider found for org.springframework.security.authentication.UsernamePasswordAuthenticationToken 这样的异常。有相关学习的案例吗，我们学习一下。谢谢老师","like_count":1},{"had_liked":false,"id":237733,"user_name":"霹雳大仙pp","can_delete":false,"product_type":"c1","uid":1046893,"ip_address":"","ucode":"F654FD9AEC1D56","user_header":"https://static001.geekbang.org/account/avatar/00/0f/f9/6d/b623562a.jpg","comment_is_top":false,"comment_ctime":1595938299,"is_pvip":false,"replies":[{"id":"89117","content":"可以显式传递用户数据。","user_name":"作者回复","user_name_real":"王新栋","uid":"1352303","ctime":1597214529,"ip_address":"","comment_id":237733,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5890905595","product_id":100053901,"comment_content":"jwt或者显式传递用户数据","like_count":1,"discussions":[{"author":{"id":1352303,"avatar":"https://static001.geekbang.org/account/avatar/00/14/a2/6f/d239ed80.jpg","nickname":"王新栋","note":"","ucode":"0A5D089B8E1E9D","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":502520,"discussion_content":"可以显式传递用户数据。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1597214529,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":237624,"user_name":"Alex","can_delete":false,"product_type":"c1","uid":1024763,"ip_address":"","ucode":"F6B5C64BC99FB7","user_header":"https://static001.geekbang.org/account/avatar/00/0f/a2/fb/94af9cf1.jpg","comment_is_top":false,"comment_ctime":1595904584,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5890871880","product_id":100053901,"comment_content":"看内部安全要求，不考虑内部攻击的话可以直接用户标识。如果考虑内部安全就在网关转成jwt降低认证服务压力","like_count":1},{"had_liked":false,"id":237599,"user_name":"inrtyx","can_delete":false,"product_type":"c1","uid":1246178,"ip_address":"","ucode":"81CD18FF34ABAB","user_header":"https://static001.geekbang.org/account/avatar/00/13/03/e2/5768d26e.jpg","comment_is_top":false,"comment_ctime":1595897858,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"5890865154","product_id":100053901,"comment_content":"token转成jwt?","like_count":1},{"had_liked":false,"id":349700,"user_name":"coconut","can_delete":false,"product_type":"c1","uid":2344081,"ip_address":"","ucode":"07B95C7A6AC2F7","user_header":"https://static001.geekbang.org/account/avatar/00/23/c4/91/a017bf72.jpg","comment_is_top":false,"comment_ctime":1656235476,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1656235476","product_id":100053901,"comment_content":"* &quot;client&quot;(应用)可以用&quot;access token&quot;访问&quot;受保护资源&quot;<br>* &quot;受保护资源&quot;可以是api网关暴露出的服务","like_count":0},{"had_liked":false,"id":339767,"user_name":"Even","can_delete":false,"product_type":"c1","uid":1147948,"ip_address":"","ucode":"C3555903EE9525","user_header":"https://static001.geekbang.org/account/avatar/00/11/84/2c/1b0926b4.jpg","comment_is_top":false,"comment_ctime":1648370512,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1648370512","product_id":100053901,"comment_content":"Jwt，解析用户信息往后传递就行","like_count":0},{"had_liked":false,"id":330808,"user_name":"Apologize","can_delete":false,"product_type":"c1","uid":1503320,"ip_address":"","ucode":"F2F179241EDA4F","user_header":"https://static001.geekbang.org/account/avatar/00/16/f0/58/87104eab.jpg","comment_is_top":false,"comment_ctime":1642171396,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1642171396","product_id":100053901,"comment_content":"API网关是否继续向后端传递access token取决于业务场景，如果网关能够完成所有的认证动作则不需要继续传递token，如果网关无法完成全部认证动作则需要继续传递token。","like_count":0},{"had_liked":false,"id":292920,"user_name":"孟令超","can_delete":false,"product_type":"c1","uid":1433609,"ip_address":"","ucode":"37916911C0F9D9","user_header":"https://static001.geekbang.org/account/avatar/00/15/e0/09/eb3da11d.jpg","comment_is_top":false,"comment_ctime":1621080060,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1621080060","product_id":100053901,"comment_content":"老师，第三方软件开发者中心服务设计都需要考虑什么","like_count":0},{"had_liked":false,"id":269839,"user_name":"caowei","can_delete":false,"product_type":"c1","uid":1520499,"ip_address":"","ucode":"E5A9C1FE7CC7E3","user_header":"https://static001.geekbang.org/account/avatar/00/17/33/73/40c662b6.jpg","comment_is_top":false,"comment_ctime":1608806328,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1608806328","product_id":100053901,"comment_content":"老师，服务直接需不需要使用客户端模式鉴权了，如果使用客户端鉴权是不是会带来性能损耗，如果不鉴权会不会直接访问端口的风险，大厂一般怎么搞了？","like_count":0},{"had_liked":false,"id":253938,"user_name":"JianXu","can_delete":false,"product_type":"c1","uid":1033219,"ip_address":"","ucode":"2A61BDBB573BDC","user_header":"https://static001.geekbang.org/account/avatar/00/0f/c4/03/f753fda7.jpg","comment_is_top":false,"comment_ctime":1602978932,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1602978932","product_id":100053901,"comment_content":"“当有了 API 网关这一层的时候，这些校验工作就会都落到了 API 网关的身上，因为我们不能让很多个受保护资源服务做同样的事情” — 为什么不能让受保护资源做同样的事情呢？这样更安全啊","like_count":0},{"had_liked":false,"id":248808,"user_name":"曙光","can_delete":false,"product_type":"c1","uid":1476450,"ip_address":"","ucode":"04D65BF7F19845","user_header":"https://static001.geekbang.org/account/avatar/00/16/87/62/f99b5b05.jpg","comment_is_top":false,"comment_ctime":1600316775,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1600316775","product_id":100053901,"comment_content":"思考题，不需要传递access_token,而是access_token绑定的用户id信息和权限信息（查询当天数据，还是历史数据）","like_count":0},{"had_liked":false,"id":244481,"user_name":"Geek_6a58c7","can_delete":false,"product_type":"c1","uid":1815374,"ip_address":"","ucode":"37900229ED9B3C","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTK4ibibOsboHycltqqicSIkm9eibSBu86BRNc0LQnTRTMEPGDvJXYpBicWOW4srMt7c9iaUT7b5mTmicgkjw/132","comment_is_top":false,"comment_ctime":1598531100,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"1598531100","product_id":100053901,"comment_content":"老师你好，请问一下，如果网关认证通过，下一毫秒就过期，内部访问是可以继续吗，或者要怎么处理好","like_count":0,"discussions":[{"author":{"id":1253310,"avatar":"https://static001.geekbang.org/account/avatar/00/13/1f/be/551454e0.jpg","nickname":"zxy","note":"","ucode":"FFAA3F6667305D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":370594,"discussion_content":"认证完马上取出用户信息，转发给各个微服务","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1619481614,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1970533,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/11/65/a29958da.jpg","nickname":"稻草人","note":"","ucode":"7E19EE0C125D80","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":311373,"discussion_content":"你真是个杠精啊","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1602319179,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":237673,"user_name":"AgCl","can_delete":false,"product_type":"c1","uid":1408804,"ip_address":"","ucode":"2C7660E3C5565D","user_header":"https://static001.geekbang.org/account/avatar/00/15/7f/24/719ce9d4.jpg","comment_is_top":false,"comment_ctime":1595922212,"is_pvip":false,"replies":[{"id":"87829","content":"API GATEWAY 和 其它微服务系统之间，属于内部通讯，可以直接传递数据，在APIGATE WAY这一层，把ACCESS_TOKEN对应的用户属性【兑换】出来，传递下去。","user_name":"作者回复","user_name_real":"王新栋","uid":"1352303","ctime":1595946166,"ip_address":"","comment_id":237673,"utype":1}],"discussion_count":4,"race_medal":0,"score":"1595922212","product_id":100053901,"comment_content":"正惆怅这一层该如何弄，看上一篇介绍用JWT的，这一层信息敏感度应该会弱一些，之前还想这一层直接传用户ID下去就好了，还望老师解答，谢谢","like_count":0,"discussions":[{"author":{"id":1352303,"avatar":"https://static001.geekbang.org/account/avatar/00/14/a2/6f/d239ed80.jpg","nickname":"王新栋","note":"","ucode":"0A5D089B8E1E9D","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":502498,"discussion_content":"API GATEWAY 和 其它微服务系统之间，属于内部通讯，可以直接传递数据，在APIGATE WAY这一层，把ACCESS_TOKEN对应的用户属性【兑换】出来，传递下去。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1595946166,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1033219,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/c4/03/f753fda7.jpg","nickname":"JianXu","note":"","ucode":"2A61BDBB573BDC","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":313146,"discussion_content":"但不是说access token 对第三方是完全不可解析的吗？为什么第三方不可解析，而平台就有能力解析呢？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1602978875,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1702886,"avatar":"https://static001.geekbang.org/account/avatar/00/19/fb/e6/1b9edb91.jpg","nickname":"练习生","note":"","ucode":"60203A2AA0EA36","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1033219,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/c4/03/f753fda7.jpg","nickname":"JianXu","note":"","ucode":"2A61BDBB573BDC","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":393056,"discussion_content":"因为access_token可能是随机生成的字符串，第三方是不可解析的，api网关接受到请求时，会对access_token进行验证及转换，生成一个包含用户信息和权限信息的jwt token传递给内部服务。你是假设了access_token一定是jwt字符串","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1631237500,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":313146,"ip_address":""},"score":393056,"extra":""}]},{"author":{"id":1323102,"avatar":"https://static001.geekbang.org/account/avatar/00/14/30/5e/c42bc33f.jpg","nickname":"Younger Ku","note":"","ucode":"D157DC38BDB515","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":299988,"discussion_content":"兑换 的方式都有哪些呢？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1597898947,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":237594,"user_name":"在路上","can_delete":false,"product_type":"c1","uid":1215139,"ip_address":"","ucode":"258880ACE79448","user_header":"https://static001.geekbang.org/account/avatar/00/12/8a/a3/aee7ded7.jpg","comment_is_top":false,"comment_ctime":1595896896,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1595896896","product_id":100053901,"comment_content":"api 网关向后台传递的是jwt，包括用户信息和权限信息等。","like_count":0}]}