{"id":155791,"title":"07 | 业务敏捷：帮助DevOps快速落地的源动力","content":"<p>你好，我是石雪峰，今天我要跟你分享的主题是业务敏捷，那么，我们先来聊一聊，什么是业务敏捷，为什么需要业务敏捷呢？</p><p>先试想这样一个场景：你们公司内部成立了专项小组，计划用三个月时间验证DevOps落地项目的可行性。当要跟大老板汇报这个事情的时候，作为团队的负责人，你开始发愁，怎么才能将DevOps的价值和业务价值关联起来，以表明DevOps对业务价值的拉动和贡献呢？</p><p>如果朝着这个方向思考，就很容易钻进死胡同。因为，从来没有一种客观的证据表明，软件交付效率的提升，和公司的股价提升有什么对应关系。换句话说，软件交付效率的提升，并不能直接影响业务的价值。</p><p>实际上，软件交付团队一直在努力通过各种途径改善交付效率，但如果你的前提是需求都是靠谱的、有效的，那你恐怕就要失望了。因为，实际情况是，业务都是在不断的试错中摸着石头过河，抱着“宁可错杀一千，也不放过一个”的理念，各种天马行空的需求一起上阵，搞得软件交付团队疲于奔命，宝贵的研发资源都消耗在了业务的汪洋大海中。但是，这些业务究竟带来了多少价值，却很少有人能说得清楚。</p><p>在企业中推行DevOps的时间越长，就越会发现，开发、测试和运维团队之间的沟通障碍固然存在，但实际上，业务部门和IT部门之间的鸿沟，有时候会更加严重。试问有多少公司的业务方能够满意IT部门的交付效率，又有多少IT团队不会把矛头指向业务方呢？说白了，就一句话：<strong>如果业务不够敏捷，IT再怎么努力也没用啊！</strong>所以，我觉得很有必要跟你聊一聊有关需求的话题。</p><!-- [[[read_end]]] --><p>回到最开始的那个问题，如果DevOps不能直接提升公司的业务价值，那么为什么又要推行DevOps呢？实际上，如果你把DevOps的价值拆开业务价值和交付能力两个部分，就很好理解了。</p><p>在现在这个多变的时代，没人能够准确地预测需求的价值。所以，交付能力的提升，可以帮助业务以最小的成本进行试错，将新功能快速交付给用户。同时，用户和市场的情况又能够快速地反馈给业务方，从而帮助业务校准方向。而业务的敏捷能力高低，恰恰体现在对功能的设计和需求的把握上，如果不能灵活地调整需求，专注于最有价值的事情，同样会拖累交付能力，导致整体效率的下降。</p><p>也就是说，在这样一种快速迭代交付的模式下，业务敏捷和交付能力二者缺一不可。</p><p><span class=\"orange\">所以，开发更少的功能，聚焦用户价值，持续快速验证，就成了产品需求管理的核心思想。</span></p><h2>开发更少的功能</h2><p>很多时候，团队面临的最大问题，就是需求太多。但实际上，很多需求一开始就没想好，甚至在设计和开发阶段还在不断变更，这就给交付团队带来了极大的困扰。所以，在把握需求质量的前提下，如何尽可能地减小需求交付批次，采用最小的实现方案，保证高优先级的需求可以快速交付，从而提升上线实验和反馈的频率，就成了最关键的问题。</p><p>关于需求分析，比较常见的方法就是<span class=\"orange\">影响地图</span>。</p><p>影响地图是通过简单的“Why-Who-How-What”分析方法，实现业务目标和产品功能之间的映射关系。</p><ul>\n<li>Why代表目标，它可以是一个核心的业务目标，也可以是一个实际的用户需求。</li>\n<li>Who代表影响对象，也就是通过影响谁来实现这个目标。</li>\n<li>How代表影响，也就是怎样影响用户以实现我们的目标。</li>\n<li>What代表需要交付什么样的功能，可以带来期望的影响。</li>\n</ul><p>如果你是第一次接触影响地图，可能会听起来有点晕。没关系，我给你举个例子，来帮你理解这套分析方法。</p><p>比如，一个专栏希望可以在上线3个月内吸引1万名用户，那么，这个Why，也就是最核心的业务目标。为了达成这个目标，需要影响的角色包含哪些呢？其实就包含了作者、平台提供方、渠道方和最终用户。需要对他们施加哪些影响呢？对作者来说，需要快速地回答用户的问题，提升内容的质量；对平台来说，需要对专栏进行重点曝光，增加营销活动；对渠道方来说，需要提高推广力度和渠道引流；对于用户来说，增加分享有礼、免费试读和个人积分等活动。</p><p>那么基于以上这些影响方式，转化为最终的实际需求，就形成了一张完整的影响地图，如下图所示：</p><p><img src=\"https://static001.geekbang.org/resource/image/2c/d9/2c8f3c2e85f517501f2ebe14120c82d9.png?wh=1316*1144\" alt=\"\"></p><p>你可能会问，需求这么多，优先级要怎么安排呢？别急，现在我就给你介绍一下“卡诺模型”。</p><blockquote>\n<p><a href=\"https://www.kanomodel.com/\">卡诺模型</a>（Kano Model），是日本大师授野纪昭博士提出的一套需求分析方法，它对理解用户需求，对其进行分类和排序方面有着很深刻的洞察。</p>\n</blockquote><p><img src=\"https://static001.geekbang.org/resource/image/c7/e4/c70d3184824a47b13b0917fce4e54ee4.png?wh=1054*1029\" alt=\"\"></p><p>卡诺模型将产品需求划分为五种类型：</p><ol>\n<li><span class=\"orange\">兴奋型</span>：指超乎用户想象的需求，是可遇不可求的功能。比如用户想要一个更好的功能手机，乔布斯带来了iPhone，这会给用户带来极大的满足感。</li>\n<li><span class=\"orange\">期望型</span>：用户的满意度会随着这类需求数量的增多而线性增长，做得越多，效果越好，但难以有质的突破。比如，一个电商平台最开始是卖书，后面逐步扩展到卖电脑、家居用品等多个类别。用户更多的线性需求被满足，满意度自然也会提升。</li>\n<li><span class=\"orange\">必备型</span>：这些是产品必须要有的功能，如果没有的话，会带来非常大的影响。不过有这些功能的话，也没人会夸你做得有多好，比如安全机制和风控机制等。</li>\n<li><span class=\"orange\">无差别型</span>：做了跟没做一样，这就是典型的无用功。比如你花了好大力气做了一个需求，但是几乎没有用户使用，这个需求就属于无差别型。</li>\n<li><span class=\"orange\">反向型</span>：无中生有类需求，实际上根本不具备使用条件，或者用户压根不这么想。这类需求做出来以后，通常会给用户带来很大的困扰，成为被吐槽的对象。</li>\n</ol><p>对于五类需求来说，核心要做到3点：</p><ul>\n<li><strong>优先规划期望型和必备型需求</strong>，将其纳入日常的交付迭代中，保持一定的交付节奏；</li>\n<li><strong>识别无差别型和反向型需求</strong>，这些对于用户来说并没有产生价值。如果团队对需求的分类有争议，可以进一步开展用户调研和分析。</li>\n<li><strong>追求兴奋型需求</strong>，因为它会带来产品的竞争壁垒和差异化。不过，对于大公司而言，经常会遇到创新者的窘境，也就是坚持固有的商业模式，而很难真正投入资源创新和自我颠覆。这就要采用精益创业的思想，采用MVP（最小可行产品）的思路，进行快速验证，并且降低试错成本，以抓住新的机遇。</li>\n</ul><p>在面对一大堆业务需求的时候，首先要进行识别和分类。当然，最开始时，人人都相信自己的需求是期望型，甚至是兴奋型的，这也可以理解。毕竟，这就好比公司里面所有的缺陷问题等级都是最高级一样，因为只要不提最高级，就会被其他最高级的问题淹没，而长期得不到解决。而<strong>解决的方法，就是让数据说话，为需求的价值建立反馈机制，而这里提到的价值，就是用户价值</strong>。</p><h2>聚焦用户价值</h2><p>“以终为始”，这四个字在精益、DevOps等很多改进的话题中经常会出现。说白了，就是要“指哪打哪，而不是打哪指哪”。产品开发方经常会问：“这个功能这么好，为什么用户就不用呢？”<strong>这就是典型的用产品功能视角看问题，嘴上喊着“用户是上帝”的口号，但实际上，自己却用上帝视角来看待具体问题</strong>。</p><p>如果你所在的公司也在搞敏捷转型，那你应该也听说过用户故事这个概念。需求不是需求，而是故事，这也让很多人不能理解。那么，用户故事是不是换了个马甲的需求呢？</p><p>关于这个问题，我曾经特意请教过一位国内的敏捷前辈，他的话让我记忆犹新。他说，从表面上看，用户故事是一种采用故事来描述需求的形式，但实际上是业务敏捷性的重要手段。它改变的不仅仅是需求的书写方式，还是需求达成共识的方式。也就是说，如果所谓的敏捷转型，没有对需求进行拆解，对需求达成共识的方式进行改变，对需求的价值进行明晰，那么可能只是在做迭代开发，而跟敏捷没啥关系。</p><p>在以往进行需求讨论的时候，往往有两个极端：一种是一句话需求，典型的“给你一个眼神，你自己体会”的方式，反正我就要做这件事，至于为什么做、怎么做一概不管，你自己看着办；另一种是上来就深入实现细节，讨论表字段怎么设计、模块怎么划分，恨不得撸起袖子就跟研发一起写代码。</p><p>每次需求讨论都是一场唇枪舌剑，达成的共识都是以一方妥协为前提的，这样显然不利于团队的和谐发展。更重要的是，始终在功能层面就事论事，而不关注用户视角，这样交付出来的需求很难达到预期。</p><p>而用户故事则是以用户的价值为核心，圈定一种角色，表明通过什么样的活动，最终达到什么样的价值。团队在讨论需求的时候，采用一种讲故事的形式，代入到设定的用户场景之中，跟随用户的操作路径，从而达成用户的目标，解决用户的实际问题。这样做的好处在于，经过团队的共同讨论和沟通，产品、研发和测试对需求目标可以达成共识，尤其是对想要带给用户的价值达成共识。</p><p>在这个过程中，团队不断探索更好的实现方案和实现路径，并补充关联的用户故事，从而形成完整的待办事项。更重要的是，团队成员逐渐培养了用户和产品思维，不再拘泥于技术实现本身，增强了彼此之间的信任，积极性方面也会有所改善，从而提升整个团队的敏捷性。</p><p>用户故事的粒度同样需要进行拆分，拆分的原则是针对一类用户角色，交付一个完整的用户价值，也就是说用户故事不能再继续拆分的粒度。当然，在实际工作中，拆分的粒度还是以迭代周期为参考，在一个迭代周期内交付完成即可，一般建议是3～5天。检验用户故事拆分粒度是否合适，可以遵循INVEST原则。</p><p>那么，什么是INVEST原则呢？</p><ul>\n<li>Independent（独立的）：减少用户故事之间的依赖，可以让用户故事更加灵活地验证和交付，而避免大批量交付对于业务敏捷性而言至关重要。</li>\n<li>Negotiable（可协商的）：用户故事不应该是滴水不漏、行政命令式的，而是要抛出一个场景描述，并在需求沟通阶段不断细化完成。</li>\n<li>Valuable（有价值的）：用户故事是以用户价值为核心的，所以每个故事都是在对用户交付价值，所以要站在用户的视角思考问题，避免像最近特别火的那句话一样：“我不要你觉得，我要我觉得。”</li>\n<li>Estimatable（可评估的）：用户故事应该可以粗略评估工作量，无论是故事点数还是时间，都可以。如果是一个预研性质的故事，则需要进一步深挖可行性，避免不知道为什么做而做。</li>\n<li>Small（小的）：用户故事应该是最小的交付颗粒度，所以按照敏捷开发方式，无论迭代还是看板，都需要在一个交付周期内完成。</li>\n<li>Testable（可测试的）：也就是验收条件，如果没有办法证明需求已经完成，也就没有办法进行验收和交付。</li>\n</ul><h2>持续快速验证</h2><p>所谓用户价值，说起来多少有些虚无缥缈。的确，就像我们无法预测未来一样，<strong>需求的价值难以预测，但是需求的价值却可以定义</strong>。所以，需求价值的定义，可以理解为需求价值的度量，分为客观指标和主观2个方面。</p><ul>\n<li>客观指标：也就是客观数据能够表明的指标，比如对电商行业来说，可以从购买流程角度，识别商品到达率、详情到达率、加入购物车率、完成订单率等等；</li>\n<li>主观指标：也就是用户体验、用户满意度、用户推荐率等等，无法直接度量，只能通过侧面数据关联得出。</li>\n</ul><p>但是无论是客观指标，还是主观指标，每一个需求在提出的时候，可以在这些指标中选择需求上线后的预期，并定义相关的指标。一方面加强价值导向，让产品交付更有价值的需求，另外一方面，也强调数据导向，尽量客观地展现实际结果。</p><p>当然，产品需求是一个复杂的体系，相互之间也会有影响和依赖，怎么从多种指标中识别出关键指标，并跟需求本身进行关联，这就是一门学问了。不过你别担心，我会在度量相关的内容中跟你详细讨论一下。</p><p>在很多企业中，精益创业的MVP思想已经深入人心了。面对未知的市场环境和用户需求，为了快速验证一个想法，可以通过一个最小化的产品实现来获取真实的市场反馈，并根据反馈数据修正产品目标和需求优先级，从而持续迭代产品需求。</p><p><img src=\"https://static001.geekbang.org/resource/image/d4/b3/d433037a08130b6e36141c0a63342db3.png?wh=783*783\" alt=\"\"></p><p>这套思想基本上放之四海而皆准，但是在企业中实际应用的时候，也会出现跑偏的情况。比如，在需求提出的时候，产品预定义了一组指标，但是在上线后由于缺乏数据支撑，需求价值的评估变成了纯粹的主观题，比如业务方自主判断需求是达到预期，符合预期还是未达到预期。这样一来，十有八九统计出来的结果都是符合预期及以上。但问题是，这样推导出来的结果对产品方向是否真的有帮助呢？</p><p>所以，采用客观有效的反馈机制就成了必选项。从技术层面来说，一个业务需求的背后，一般都会关联一个埋点需求。所谓埋点分析，是网站分析的一种常用的数据采集方法。设计良好的埋点功能，不仅能帮助采集用户操作行为，还能识别完整的上下文操作路径，甚至进行用户画像的聚类和分析，帮助识别不同类型用户的行为习惯。从用户层面来说，众测机制和用户反馈渠道是比较常见的两种方式，核心就是既要听用户怎么说，也要看用户怎么做。</p><h2>总结</h2><p>DevOps的关注点要从研发环节继续向上游延伸，一直把业务团队包括进来。也就是说，IT部门不仅仅是被动的按照业务需求交付功能，还要更加快速地提供业务数据反馈，辅助业务决策。同时，交付能力的提升也进一步降低了业务的试错成本，而业务的敏捷性也决定了研发交付的需求价值和交付节奏，通过影响地图进行需求分析，再通过卡诺模型分析需求属性和优先级，通过用户故事和整个团队达成共识，通过持续快速验证，帮助产品在正确的道路上发展前进。</p><p>引入业务的DevOps，就成了BizDevOps，这也是DevOps发展的一种潮流。最后，我帮你梳理下BizDevOps的核心理念：</p><ul>\n<li>对齐业务和开发目标、指标；</li>\n<li>把握安全、合规指标；</li>\n<li>及时对齐需求，减少无用开发；</li>\n<li>体现DevOps的价值；</li>\n<li>让开发团队开始接触业务，不单单是执行，调动积极性。</li>\n</ul><h2>思考题</h2><p>你所在的企业中对于需求的价值是如何衡量的呢？是否有一套指标体系可以客观地展现需求的价值呢？</p><p>欢迎在留言区写下你的思考和答案，我们一起讨论，共同学习进步。如果你觉得这篇文章对你有所帮助，欢迎你把文章分享给你的朋友。</p><p></p>","comments":[{"had_liked":false,"id":149378,"user_name":"Jxin","can_delete":false,"product_type":"c1","uid":1251111,"ip_address":"","ucode":"4C03928388C413","user_header":"https://static001.geekbang.org/account/avatar/00/13/17/27/ec30d30a.jpg","comment_is_top":false,"comment_ctime":1573204813,"is_pvip":false,"replies":[{"id":"58791","content":"很有感触，最开始做持续交付的时候，感觉自己找到的银弹，花了大力气建立了持续交付体系，等到给老板汇报的时候却发现很难量化证明自己的价值。对于IT团队来说，面对的情况就是这么尴尬。一个需求扔过来到底有没有价值，没有人知道，IT团队只需要把需求如期完成上线，然后就没有然后了。这个需求的业务价值从来不会跟IT团队透传，所以除了无穷无尽的需求，IT团队很难找到价值认同点。即便到了现在，也是如此，业务方没人敢碰，所有的体系能力都是从产品经理接受需求的时间点开始，到需求交付上线位置，始终缺少业务层面的价值体现，这也是目前我在思考的问题吧。","user_name":"作者回复","comment_id":149378,"uid":"1117795","ip_address":"","utype":1,"ctime":1574141141,"user_name_real":"石雪峰"}],"discussion_count":3,"race_medal":0,"score":"70292681549","product_id":100036601,"comment_content":"1.卡洛模型我们的产品团队也有在用，但很遗憾的是，收效甚微差距巨大，但我深知不怪我们的产品团队。因为作为2b的业务，产品的价值都是业务方提出或者评定的。然后这个价值评定就是笑话，风风火火搞一两个月的大项目，原本业务提出能接入xxx客户，带来xxx价值，结果接入廖廖无几。当站在最前面的一波人都是来搞笑的，你后面再怎么折腾也翻不起浪。深刻觉得业务方都停留在我觉得，而没真真走出公司站在市场，用客观的数据和长期经验来评定需求价值。<br><br>2.mvp前面还有个mvp，在最小可行产品出来前，应该要筛选最小价值产品（v=valuable）。挖掘追小价值产品方案，排优先级，然后再制定最小可行产品，去试验反馈改进升级。业务驱动往上再看一点是价值驱动。但这种模式偏爱短期价值，势必会导致长期价值的产品难以推行。但就当下而言还是比较适用的，因为变化太快，长期价值的风险系数太高，贴现率太低了，远不如短期价值来得靠谱。","like_count":17,"discussions":[{"author":{"id":1117795,"avatar":"https://static001.geekbang.org/account/avatar/00/11/0e/63/cef8f0f4.jpg","nickname":"石雪峰","note":"","ucode":"2B3EA5B86D9A0A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":473839,"discussion_content":"很有感触，最开始做持续交付的时候，感觉自己找到的银弹，花了大力气建立了持续交付体系，等到给老板汇报的时候却发现很难量化证明自己的价值。对于IT团队来说，面对的情况就是这么尴尬。一个需求扔过来到底有没有价值，没有人知道，IT团队只需要把需求如期完成上线，然后就没有然后了。这个需求的业务价值从来不会跟IT团队透传，所以除了无穷无尽的需求，IT团队很难找到价值认同点。即便到了现在，也是如此，业务方没人敢碰，所有的体系能力都是从产品经理接受需求的时间点开始，到需求交付上线位置，始终缺少业务层面的价值体现，这也是目前我在思考的问题吧。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574141141,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1762193,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/e3/91/7fa5f3fb.jpg","nickname":"wxy","note":"","ucode":"42CE479E320691","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":575101,"discussion_content":"是不是可以和OKR结合起来做，我们每个Q会进行OKR对齐，然后确定出这个Q的重点项目，与这些重点项目关联的需求或者故事，就是能够产生核心业务价值的，也是需要优先保障和度量的。toC的业务，有时候业务指标是保密的，每个团队产生的业务价值也是不同的，所以和需求交付关联起来也挺难的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1654594508,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1348823,"avatar":"https://static001.geekbang.org/account/avatar/00/14/94/d7/bd4ffe8c.jpg","nickname":"么么直播","note":"","ucode":"1D4C3EDBCCD2F9","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":103900,"discussion_content":"&#39;文章写得很棒，感同身受。最近也在思考，困难很多，但还是准备大力推行。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577406049,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":144750,"user_name":"leslie","can_delete":false,"product_type":"c1","uid":1324255,"ip_address":"","ucode":"798E7C1CC98CC2","user_header":"https://static001.geekbang.org/account/avatar/00/14/34/df/64e3d533.jpg","comment_is_top":false,"comment_ctime":1572036602,"is_pvip":false,"replies":[{"id":"55829","content":"这个观点很新颖，很有启发，技术团队本身就是一个产品。产品思维和开发思维本身就是两种思维模式，这一点相信你也有所感受，如果产品人员懂技术最大的挑战就是两种思维模型并存，又不会互相干扰，实际上我见过很多技术人员做的产品，还是浓浓的工程师风格，但是用户不是工程师，所以这一点我觉得对于产品未来的发展也是一个挑战。","user_name":"作者回复","comment_id":144750,"uid":"1117795","ip_address":"","utype":1,"ctime":1572058638,"user_name_real":"石雪峰"}],"discussion_count":2,"race_medal":0,"score":"27341840378","product_id":100036601,"comment_content":"     其实老师的课程提到一点：核心需求；经历过一些企业，和一些同行沟通过，如何梳理出真实的核心需求似乎是个典型问题或者说通病。<br>     最核心最有价值的东西展现或挖潜出来才可能绕着去做：其实之前有学习极客时间里关于产品的课程，今天的课程中所提及的MVP的概念以及需求的价值，就像为什么DevOps是提升效率；当我们结合产品就会发现其中的核心理念是有所相通的。<br>      进一步举例说明：产品经理为何很多时候和技术对立；可是如果是真正懂技术或技术转产品的会更加明白其中的方式方法。其实DevOps同样是一个产品：技术团队本身的产品。","like_count":6,"discussions":[{"author":{"id":1117795,"avatar":"https://static001.geekbang.org/account/avatar/00/11/0e/63/cef8f0f4.jpg","nickname":"石雪峰","note":"","ucode":"2B3EA5B86D9A0A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":472098,"discussion_content":"这个观点很新颖，很有启发，技术团队本身就是一个产品。产品思维和开发思维本身就是两种思维模式，这一点相信你也有所感受，如果产品人员懂技术最大的挑战就是两种思维模型并存，又不会互相干扰，实际上我见过很多技术人员做的产品，还是浓浓的工程师风格，但是用户不是工程师，所以这一点我觉得对于产品未来的发展也是一个挑战。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1572058638,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1786527,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/42/9f/428dbb20.jpg","nickname":"新思维","note":"","ucode":"DC29CA1DB16D90","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":571215,"discussion_content":"请问业务流较少的大数据业务如何进行业务拆分和需求管理？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1652142530,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":145019,"user_name":"Eric Yi","can_delete":false,"product_type":"c1","uid":1692924,"ip_address":"","ucode":"CCCF1B43F510F9","user_header":"https://static001.geekbang.org/account/avatar/00/19/d4/fc/c92a0623.jpg","comment_is_top":false,"comment_ctime":1572162023,"is_pvip":false,"replies":[{"id":"56105","content":"你好，关于用户故事的拆分，比较经典的有9种方法，其实主要用到的还是工作流步骤拆分（核心流程&#47;支撑流程），接口可变性拆分（分享二维码&#47;链接&#47;通知），主要投入拆分（典型平台接入&#47;其他同类平台接入），业务可变性拆分（根据热门排序&#47;销量排序），以及业务操作拆分(功能拆分，比如管理用户&#47;邮箱&#47;留言)<br>另外，关于用户故事，有一篇非常经典的文章推荐给你，虽然是全英文的，但是讲解的非常透彻，值得一读：<br> [https:&#47;&#47;www.jpattonassociates.com&#47;tag&#47;product-discovery&#47;](https:&#47;&#47;www.jpattonassociates.com&#47;tag&#47;product-discovery&#47;) ","user_name":"作者回复","comment_id":145019,"uid":"1117795","ip_address":"","utype":1,"ctime":1572280084,"user_name_real":"石雪峰"}],"discussion_count":1,"race_medal":0,"score":"18752031207","product_id":100036601,"comment_content":"关于用户需求故事的拆分，再进入每一个迭代，能否举一个具体例子？这样会更好理解一点。","like_count":5,"discussions":[{"author":{"id":1117795,"avatar":"https://static001.geekbang.org/account/avatar/00/11/0e/63/cef8f0f4.jpg","nickname":"石雪峰","note":"","ucode":"2B3EA5B86D9A0A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":472214,"discussion_content":"你好，关于用户故事的拆分，比较经典的有9种方法，其实主要用到的还是工作流步骤拆分（核心流程/支撑流程），接口可变性拆分（分享二维码/链接/通知），主要投入拆分（典型平台接入/其他同类平台接入），业务可变性拆分（根据热门排序/销量排序），以及业务操作拆分(功能拆分，比如管理用户/邮箱/留言)\n另外，关于用户故事，有一篇非常经典的文章推荐给你，虽然是全英文的，但是讲解的非常透彻，值得一读：\n [https://www.jpattonassociates.com/tag/product-discovery/](https://www.jpattonassociates.com/tag/product-discovery/) ","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1572280084,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":146436,"user_name":"陈斯佳","can_delete":false,"product_type":"c1","uid":1259323,"ip_address":"","ucode":"C236F874FC767A","user_header":"https://static001.geekbang.org/account/avatar/00/13/37/3b/495e2ce6.jpg","comment_is_top":false,"comment_ctime":1572522074,"is_pvip":false,"replies":[{"id":"56527","content":"我觉得翻译官的观点很有趣，我之前总说是桥梁，其实是一个道理。我老板之前问过我一个问题，当技术研究到一定阶段，下一步的方向和空间在哪里？他的观点就是业务。不是说技术不重要，但当你越参加高层的会议，就越发现讨论的都是业务数据，所以多留心业务方面总不是坏事哈。","user_name":"作者回复","comment_id":146436,"uid":"1117795","ip_address":"","utype":1,"ctime":1572523881,"user_name_real":"石雪峰"}],"discussion_count":1,"race_medal":0,"score":"14457423962","product_id":100036601,"comment_content":"一切技术还是要围绕业务的需求来展开，作为后端的技术支持团队其实也可以主动影响业务需求的定义，从而适配之后整个开发流程。也许一个好的DevOps工程师就是一个业务和技术的翻译官吧","like_count":4,"discussions":[{"author":{"id":1117795,"avatar":"https://static001.geekbang.org/account/avatar/00/11/0e/63/cef8f0f4.jpg","nickname":"石雪峰","note":"","ucode":"2B3EA5B86D9A0A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":472860,"discussion_content":"我觉得翻译官的观点很有趣，我之前总说是桥梁，其实是一个道理。我老板之前问过我一个问题，当技术研究到一定阶段，下一步的方向和空间在哪里？他的观点就是业务。不是说技术不重要，但当你越参加高层的会议，就越发现讨论的都是业务数据，所以多留心业务方面总不是坏事哈。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1572523881,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":145319,"user_name":"熊斌","can_delete":false,"product_type":"c1","uid":1026280,"ip_address":"","ucode":"24D0C32F397113","user_header":"https://static001.geekbang.org/account/avatar/00/0f/a8/e8/bc84c47d.jpg","comment_is_top":false,"comment_ctime":1572250213,"is_pvip":false,"replies":[{"id":"56548","content":"敏捷转型如果涉及到组织结构调整，那么也只能自顶向下来推了，说白了之所以疲惫了，两方面原因，要么是因为没有看到敏捷带来的好处，该半夜上线还是半夜上线，只不过迭代速度快了，压力大了，事儿多了而已；要么就是节奏绷的太紧张，没有劳逸结合，比如最简单的例子，每个迭代周期里面，有多少业务需求，有多少改进类需求，有多少技术预研需求，很多我猜都是120%的业务需求，那要如何坚持下去呢。","user_name":"作者回复","comment_id":145319,"uid":"1117795","ip_address":"","utype":1,"ctime":1572531820,"user_name_real":"石雪峰"}],"discussion_count":1,"race_medal":0,"score":"10162184805","product_id":100036601,"comment_content":"记得2015年我们公司负责推行敏捷开发的领导来培训敏捷，培训完毕后采用的是“自顶向下”的路径推行敏捷开发。<br>当时团队领导拿到需求后先拆分，将拆分后的需求写在纸条上面，贴在看板上让大家去领任务。<br><br>刚开始大家的积极性很高，每天有任务进度汇报，早上还有“站立会”。可是久而久之大家就疲惫了，没有人去关注看板上面的东西，也不再开站立会，又回到了原来的状态。<br><br>由此可见，知道容易，做到是很难的，尤其是在一个庞大的协作体系内。","like_count":2,"discussions":[{"author":{"id":1117795,"avatar":"https://static001.geekbang.org/account/avatar/00/11/0e/63/cef8f0f4.jpg","nickname":"石雪峰","note":"","ucode":"2B3EA5B86D9A0A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":472336,"discussion_content":"敏捷转型如果涉及到组织结构调整，那么也只能自顶向下来推了，说白了之所以疲惫了，两方面原因，要么是因为没有看到敏捷带来的好处，该半夜上线还是半夜上线，只不过迭代速度快了，压力大了，事儿多了而已；要么就是节奏绷的太紧张，没有劳逸结合，比如最简单的例子，每个迭代周期里面，有多少业务需求，有多少改进类需求，有多少技术预研需求，很多我猜都是120%的业务需求，那要如何坚持下去呢。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1572531820,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":343382,"user_name":"Mr_Sun","can_delete":false,"product_type":"c1","uid":2986167,"ip_address":"","ucode":"9D0530673C123B","user_header":"https://static001.geekbang.org/account/avatar/00/2d/90/b7/b19aafac.jpg","comment_is_top":false,"comment_ctime":1650808757,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1650808757","product_id":100036601,"comment_content":"老师您好 关于您讲到的bizdevops 我有几点疑问 。1、如果让开发参与到业务过程影响开发效率问题怎么解决，如何平衡2、在用户使用产品过程中遇到的问题，是否需要开发一起协助解决，用户提出的工单解决流程具体如何优化更有效果，具体应该如何分配3、在实践中，运维人员在业务和敏捷中的比例应该怎么分配","like_count":0},{"had_liked":false,"id":268590,"user_name":"atom992","can_delete":false,"product_type":"c1","uid":1009507,"ip_address":"","ucode":"79492A3E5D36CA","user_header":"https://static001.geekbang.org/account/avatar/00/0f/67/63/abb7bfe3.jpg","comment_is_top":false,"comment_ctime":1608266182,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1608266182","product_id":100036601,"comment_content":"谈需求拆分的时候，是否可以结合DDD呢？如何结合？","like_count":0},{"had_liked":false,"id":221307,"user_name":"Leiting","can_delete":false,"product_type":"c1","uid":1693772,"ip_address":"","ucode":"C9B75EFC52605B","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJp4KDwoPkxZGo9yAKUiaI2uaHy87QuW1l0gV5LbJekbffsKJodWtI61V4kNXbOHep1DTGjABxoHhg/132","comment_is_top":false,"comment_ctime":1590468183,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1590468183","product_id":100036601,"comment_content":"我们单位的工作都是基于是否能直接产生效益？能直接产生效益的，才是好工作。这个观点，怎么才能有限推进DevOps呢","like_count":0,"discussions":[{"author":{"id":2394832,"avatar":"https://static001.geekbang.org/account/avatar/00/24/8a/d0/a1668f3c.jpg","nickname":"达康书记","note":"","ucode":"F444D4F263E258","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":342653,"discussion_content":"我觉得老师在里面讲了一句话很值得好好思考：DevOps 的价值拆开业务价值和交付能力两个部分，我觉得这样的话，在公司就好推广","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1610765844,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":182429,"user_name":"Raymond吕","can_delete":false,"product_type":"c1","uid":1581719,"ip_address":"","ucode":"401C7BD43095FC","user_header":"https://static001.geekbang.org/account/avatar/00/18/22/97/7a1c4031.jpg","comment_is_top":false,"comment_ctime":1582786696,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1582786696","product_id":100036601,"comment_content":"这个时候就需要一个教练，天天盯着，答疑解惑。","like_count":0},{"had_liked":false,"id":145433,"user_name":"iiiqueena","can_delete":false,"product_type":"c1","uid":1247327,"ip_address":"","ucode":"5553B21A31836F","user_header":"https://static001.geekbang.org/account/avatar/00/13/08/5f/b8dc0e5b.jpg","comment_is_top":false,"comment_ctime":1572272411,"is_pvip":false,"replies":[{"id":"56117","content":"感谢你的支持，加油，实践者","user_name":"作者回复","comment_id":145433,"uid":"1117795","ip_address":"","utype":1,"ctime":1572281045,"user_name_real":"石雪峰"}],"discussion_count":1,"race_medal":0,"score":"1572272411","product_id":100036601,"comment_content":"感觉又把ACP的课上了一遍，不过老师你讲的挺好。","like_count":0,"discussions":[{"author":{"id":1117795,"avatar":"https://static001.geekbang.org/account/avatar/00/11/0e/63/cef8f0f4.jpg","nickname":"石雪峰","note":"","ucode":"2B3EA5B86D9A0A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":472397,"discussion_content":"感谢你的支持，加油，实践者","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1572281045,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]}]}