{"id":201166,"title":"32 | 集成事件：解决跨微服务的最终一致性","content":"<p><strong>课件和Demo地址</strong><br>\n<a href=\"https://gitee.com/geektime-geekbang/NET-Core\">https://gitee.com/geektime-geekbang/NET-Core</a></p>","comments":[{"had_liked":false,"id":180544,"user_name":"偏偏","can_delete":false,"product_type":"c3","uid":1764425,"ip_address":"","ucode":"1E2E357F109F9D","user_header":"https://static001.geekbang.org/account/avatar/00/1a/ec/49/410176b8.jpg","comment_is_top":false,"comment_ctime":1582333587,"is_pvip":false,"replies":[{"id":70506,"content":"1. CAP是实现了outbox的机制，也就是本地事件表的机制，可以参考：https:&#47;&#47;docs.microsoft.com&#47;en-us&#47;dotnet&#47;standard&#47;microservices-architecture&#47;multi-container-microservice-net-applications&#47;subscribe-events#designing-atomicity-and-resiliency-when-publishing-to-the-event-bus\n2.这里是提供了最复杂情况的示例，在不需event bus的服务，可以使用seedwork的模式来复用代码，也可以为其设计一个独立的共享包\n3.跨服务的情况，即一个服务负责发布事件，一个服务负责订阅，示例中发布和订阅写在了同一个微服务周中，实际场景是在不同服务的。\n4.serilog支持更多的日志输出，例如fluentd、elasticsearch，当然nlog和log4net也不错，选择哪一个与你的熟悉程度也是有关系的，满足诉求即可。\n5.后面我尝试补充一下相关内容。\n5.","user_name":"作者回复","user_name_real":"肖伟宇","uid":1756585,"ctime":1582718604,"ip_address":"","comment_id":180544,"utype":1}],"discussion_count":5,"race_medal":0,"score":2,"product_id":100044601,"comment_content":"老师，您好，很高兴能有机会与你交谈，订阅你的课，有几个问题，希望老师可以解惑。\n1. DOTNET.CAP原理是什么，怎么实现分布式事务一致性的？\n2. 为什么要把Event Bus 与 EF绑在一起 抽离seedwork？这样写我每个服务都需要配置Event，而有的服务是不需要的。\n3. 如何实现跨服务分布式事务，多个服务配置应该如何写？是否能给个示例？\n4. 关于日志，使用serilog的优点是什么，与nlog或log4net有什么优势。\n5. 领域事件和聚合那块没有听明白，是否可以详细解释一下。","like_count":5,"discussions":[{"author":{"id":1756585,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/cd/a9/791d0f5e.jpg","nickname":"老肖想当外语大佬","note":"","ucode":"F662D1BF671E92","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":484705,"discussion_content":"1. CAP是实现了outbox的机制，也就是本地事件表的机制，可以参考：https://docs.microsoft.com/en-us/dotnet/standard/microservices-architecture/multi-container-microservice-net-applications/subscribe-events#designing-atomicity-and-resiliency-when-publishing-to-the-event-bus\n2.这里是提供了最复杂情况的示例，在不需event bus的服务，可以使用seedwork的模式来复用代码，也可以为其设计一个独立的共享包\n3.跨服务的情况，即一个服务负责发布事件，一个服务负责订阅，示例中发布和订阅写在了同一个微服务周中，实际场景是在不同服务的。\n4.serilog支持更多的日志输出，例如fluentd、elasticsearch，当然nlog和log4net也不错，选择哪一个与你的熟悉程度也是有关系的，满足诉求即可。\n5.后面我尝试补充一下相关内容。\n5.","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582718604,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1995514,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/72/fa/038405ed.jpg","nickname":"强子","note":"","ucode":"B5B41A49BC86D8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":262310,"discussion_content":"发布和订阅都用到了OrderCreatedIntegrationEvent这个类，那跨服务的时候是不是要把这个类抽离出来供两个服务共享呢？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1589073596,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1764425,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/ec/49/410176b8.jpg","nickname":"偏偏","note":"","ucode":"1E2E357F109F9D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":187077,"discussion_content":"老师还有个问题，问一下\n聚合根的作用是什么，只说明概念和设计吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582725516,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1764425,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/ec/49/410176b8.jpg","nickname":"偏偏","note":"","ucode":"1E2E357F109F9D","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":199098,"discussion_content":"可以看一下DDD实战这门极客时间的课，很不错。需要的话找我，我这儿还有几张优惠券，用不了就过期了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1583555040,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":187077,"ip_address":"","group_id":0},"score":199098,"extra":""}]},{"author":{"id":1764425,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/ec/49/410176b8.jpg","nickname":"偏偏","note":"","ucode":"1E2E357F109F9D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":187021,"discussion_content":"感谢老师的回复和解答。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582724269,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":185473,"user_name":"SuperSnow","can_delete":false,"product_type":"c3","uid":1065351,"ip_address":"","ucode":"84C89AA8083E6A","user_header":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","comment_is_top":false,"comment_ctime":1583588940,"is_pvip":false,"replies":[{"id":72464,"content":"领域事件是由领域模型驱动触发的，应该与领域模型放在一起。\n\n对于领域事件的处理，你可以理解成一个由事件发起处理命令，这个命令与用户从API发起命令实质是一样的，因此事件处理handler应该在应用层，它需要通过发起用各种Command来实现事件的处理。","user_name":"作者回复","user_name_real":"肖伟宇","uid":1756585,"ctime":1584242763,"ip_address":"","comment_id":185473,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100044601,"comment_content":"老师好\n1、集成事件一般是由领域事件驱动触发，例子中OrderCreatedDomainEventHandler在application层中，OrderCreatedDomainEvent在domain项目中，这两个类是否可以都放在domain层中？\n2、老师如果方便的话，可否提供一下两个微服务的一些具体实现方案，相对完整一点的，或者有什么案例可供参考的，非常感谢。","like_count":1,"discussions":[{"author":{"id":1756585,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/cd/a9/791d0f5e.jpg","nickname":"老肖想当外语大佬","note":"","ucode":"F662D1BF671E92","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":486372,"discussion_content":"领域事件是由领域模型驱动触发的，应该与领域模型放在一起。\n\n对于领域事件的处理，你可以理解成一个由事件发起处理命令，这个命令与用户从API发起命令实质是一样的，因此事件处理handler应该在应用层，它需要通过发起用各种Command来实现事件的处理。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584242763,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":185300,"user_name":"SuperSnow","can_delete":false,"product_type":"c3","uid":1065351,"ip_address":"","ucode":"84C89AA8083E6A","user_header":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","comment_is_top":false,"comment_ctime":1583555664,"is_pvip":false,"replies":[{"id":71578,"content":"集成事件是相对于领域事件而言，领域事件是指领域模型触发的事件，集成事件是将这些事件在不同的微服务之间传递的手段，集成事件的触发，一般也是由领域事件驱动的。","user_name":"作者回复","user_name_real":"肖伟宇","uid":1756585,"ctime":1583564712,"ip_address":"","comment_id":185300,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100044601,"comment_content":"老师好，\n1、请问集成事件是什么概念？相当于应用服务吗？\n2、我看有command，commandHandler，这个在应用层和领域层怎么进行归类，可以结合一下项目进行划分一下吗？感觉在webApi的项目里，划分的有些乱。","like_count":1,"discussions":[{"author":{"id":1756585,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/cd/a9/791d0f5e.jpg","nickname":"老肖想当外语大佬","note":"","ucode":"F662D1BF671E92","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":486320,"discussion_content":"集成事件是相对于领域事件而言，领域事件是指领域模型触发的事件，集成事件是将这些事件在不同的微服务之间传递的手段，集成事件的触发，一般也是由领域事件驱动的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1583564712,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":180923,"user_name":"stg609","can_delete":false,"product_type":"c3","uid":1073025,"ip_address":"","ucode":"FB70A75A891BB8","user_header":"https://static001.geekbang.org/account/avatar/00/10/5f/81/1c614f4a.jpg","comment_is_top":false,"comment_ctime":1582443742,"is_pvip":false,"replies":[{"id":70283,"content":"建议将事件定义为幂等的，避免依赖顺序。\n\n","user_name":"作者回复","user_name_real":"肖伟宇","uid":1756585,"ctime":1582522183,"ip_address":"","comment_id":180923,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100044601,"comment_content":"消息队列如果无法保证事件的发送顺序，集成事件如何处理？","like_count":1,"discussions":[{"author":{"id":1756585,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/cd/a9/791d0f5e.jpg","nickname":"老肖想当外语大佬","note":"","ucode":"F662D1BF671E92","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":484846,"discussion_content":"建议将事件定义为幂等的，避免依赖顺序。\n\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582522183,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":224089,"user_name":"张文君","can_delete":false,"product_type":"c3","uid":1487882,"ip_address":"","ucode":"9F986D57F49EB2","user_header":"https://static001.geekbang.org/account/avatar/00/16/b4/0a/ffb53539.jpg","comment_is_top":false,"comment_ctime":1591272617,"is_pvip":false,"replies":[{"id":83286,"content":"集成事件用来跨微服务传递领域事件的","user_name":"作者回复","user_name_real":"肖伟宇","uid":1756585,"ctime":1591950011,"ip_address":"","comment_id":224089,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100044601,"comment_content":"请问老师，我最近在学DDD，感觉您这里提到的集成事件就是领域服务的概念，对吗？","like_count":0,"discussions":[{"author":{"id":1756585,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/cd/a9/791d0f5e.jpg","nickname":"老肖想当外语大佬","note":"","ucode":"F662D1BF671E92","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":497360,"discussion_content":"集成事件用来跨微服务传递领域事件的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1591950011,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":215669,"user_name":"强子","can_delete":false,"product_type":"c3","uid":1995514,"ip_address":"","ucode":"B5B41A49BC86D8","user_header":"https://static001.geekbang.org/account/avatar/00/1e/72/fa/038405ed.jpg","comment_is_top":false,"comment_ctime":1589073832,"is_pvip":false,"replies":[{"id":80589,"content":"这种情况还是拷贝一下好，因为两端的更新有可能无法做到同时更新。\n新版本发布时，考虑兼容即可","user_name":"作者回复","user_name_real":"肖伟宇","uid":1756585,"ctime":1589682970,"ip_address":"","comment_id":215669,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100044601,"comment_content":"请教下：发布和订阅都用到了OrderCreatedIntegrationEvent这个类，那跨服务的时候是不是要把这个类抽离出来供两个服务共享呢？","like_count":0,"discussions":[{"author":{"id":1756585,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/cd/a9/791d0f5e.jpg","nickname":"老肖想当外语大佬","note":"","ucode":"F662D1BF671E92","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":494520,"discussion_content":"这种情况还是拷贝一下好，因为两端的更新有可能无法做到同时更新。\n新版本发布时，考虑兼容即可","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1589682970,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":195643,"user_name":"Geek_09f05a","can_delete":false,"product_type":"c3","uid":1621322,"ip_address":"","ucode":"28ABA543BE59CE","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKLKIWfKoMNv3KpUe2IML2m4dXn9N1XZgWJHDH0lP2USfWQLY1BLN1mibO8YxXjiayGicU7ycvFRX6jw/132","comment_is_top":false,"comment_ctime":1585208861,"is_pvip":false,"replies":[{"id":77161,"content":"是的，集成事件的作用就是跨微服务传递事件","user_name":"作者回复","user_name_real":"肖伟宇","uid":1756585,"ctime":1586875810,"ip_address":"","comment_id":195643,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100044601,"comment_content":"老师，这个不是垮微服务的吗？您在一个微服务里演示了，如果是两个服务也是一样的对吗","like_count":0,"discussions":[{"author":{"id":1756585,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/cd/a9/791d0f5e.jpg","nickname":"老肖想当外语大佬","note":"","ucode":"F662D1BF671E92","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":489133,"discussion_content":"是的，集成事件的作用就是跨微服务传递事件","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1586875810,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":185471,"user_name":"SuperSnow","can_delete":false,"product_type":"c3","uid":1065351,"ip_address":"","ucode":"84C89AA8083E6A","user_header":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","comment_is_top":false,"comment_ctime":1583588627,"is_pvip":false,"replies":[{"id":72463,"content":"对的，集成事件是为了在微服务之间传递事件。\n\n发布者将事件定义到一个公共类库是可行的。\n\n不过一般，每个服务关注的事件都是不一样的，引入这个类库并没有带来非常大的收益，这个取舍可以看团队的习惯，以及事件共享库的更新频率","user_name":"作者回复","user_name_real":"肖伟宇","uid":1756585,"ctime":1584242561,"ip_address":"","comment_id":185471,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100044601,"comment_content":"那集成事件可以理解为就是一个对于不同服务之间传递数据的类，比如product服务，order服务，现在创建订单的发布命令在product服务中触发，然后需要向order服务传递如productId，accessToken之类的信息，这个时候我创建一个类用于包含这些指标，这个类就是集成事件，是吧？\n另外，由于该事件是要应用在这两个微服务之上的，所以像这种集成事件是不是应该封装成一个公共类库比较好？还是采用其他方式？\n多谢老师!","like_count":0,"discussions":[{"author":{"id":1756585,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/cd/a9/791d0f5e.jpg","nickname":"老肖想当外语大佬","note":"","ucode":"F662D1BF671E92","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":486371,"discussion_content":"对的，集成事件是为了在微服务之间传递事件。\n\n发布者将事件定义到一个公共类库是可行的。\n\n不过一般，每个服务关注的事件都是不一样的，引入这个类库并没有带来非常大的收益，这个取舍可以看团队的习惯，以及事件共享库的更新频率","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584242561,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":182770,"user_name":"stg609","can_delete":false,"product_type":"c3","uid":1073025,"ip_address":"","ucode":"FB70A75A891BB8","user_header":"https://static001.geekbang.org/account/avatar/00/10/5f/81/1c614f4a.jpg","comment_is_top":false,"comment_ctime":1582863158,"is_pvip":false,"replies":[{"id":70996,"content":"事件表示领域模型发生了什么，是客观存在的，是否发送是由是否有人关心它决定的，应用层可以决定是否接收，而不是是否发送。\n\n另外，当一个事件没有任何业务关心，则可以不定义它。","user_name":"作者回复","user_name_real":"肖伟宇","uid":1756585,"ctime":1583045033,"ip_address":"","comment_id":182770,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100044601,"comment_content":"集成事件可否直接由应用层中的逻辑来决定是否要发送？如果不能，那原因是什么？谢谢\n\n我看例子中是先触发领域事件，然后由应用层中的领域事件处理器发送集成事件。","like_count":0,"discussions":[{"author":{"id":1756585,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/cd/a9/791d0f5e.jpg","nickname":"老肖想当外语大佬","note":"","ucode":"F662D1BF671E92","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":485443,"discussion_content":"事件表示领域模型发生了什么，是客观存在的，是否发送是由是否有人关心它决定的，应用层可以决定是否接收，而不是是否发送。\n\n另外，当一个事件没有任何业务关心，则可以不定义它。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1583045033,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":180502,"user_name":"jacky","can_delete":false,"product_type":"c3","uid":1049177,"ip_address":"","ucode":"A0BD06E2ABF520","user_header":"https://static001.geekbang.org/account/avatar/00/10/02/59/989f65c8.jpg","comment_is_top":false,"comment_ctime":1582298259,"is_pvip":false,"replies":[{"id":70471,"content":"领域层不应该关心其是如何存储的，不建议把仓储与领域模型放在一层","user_name":"作者回复","user_name_real":"肖伟宇","uid":1756585,"ctime":1582695941,"ip_address":"","comment_id":180502,"utype":1}],"discussion_count":3,"race_medal":0,"score":2,"product_id":100044601,"comment_content":"Repositories能否放在Domain层里面，这样后续演化方便一点？","like_count":0,"discussions":[{"author":{"id":1756585,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/cd/a9/791d0f5e.jpg","nickname":"老肖想当外语大佬","note":"","ucode":"F662D1BF671E92","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":484685,"discussion_content":"领域层不应该关心其是如何存储的，不建议把仓储与领域模型放在一层","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582695941,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":199095,"discussion_content":"这个也是可以的，就看你的关注点在哪里。如果Repository放在domain层中，在未来进行拆分聚合时，比较方便，直接整包移走即可，不用再去关心基础层如何。但反过来想，放在基础层也没问题，即使未来面对聚合拆分，这部分工作量也没多少。同理，不管存储放在哪个层面，如果未来要改面存储机制什么的，放在基础层里面比放在domain里面稍微优雅一点，也仅此而矣了，所以这个就看你怎么考虑了。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1583554865,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1809095,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/9a/c7/dabb2548.jpg","nickname":"星回","note":"","ucode":"0206D622DB14F4","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":271034,"discussion_content":"在DDD中，定义仓储是为了按通用语言方式取得关心的模型对象，而并不关心模型对象在基础设施层中是如何定义和存取的，就相当于在某集合中取得模式一样。所以，仓储接口会定义在domain层，而基础设计反过来依赖于domain层，去实现具体的仓储接口，这也是对传统依赖关系的一种倒置。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1590074208,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":180098,"user_name":"川杰","can_delete":false,"product_type":"c3","uid":1099750,"ip_address":"","ucode":"815211E1D698E6","user_header":"https://static001.geekbang.org/account/avatar/00/10/c7/e6/11f21cb4.jpg","comment_is_top":false,"comment_ctime":1582186329,"is_pvip":false,"replies":[{"id":70274,"content":"没错","user_name":"作者回复","user_name_real":"肖伟宇","uid":1756585,"ctime":1582520334,"ip_address":"","comment_id":180098,"utype":1}],"discussion_count":3,"race_medal":0,"score":3,"product_id":100044601,"comment_content":"请问，集成事件的两种实现方式，在本质上有何不同？\n发布订阅方式：其实是先发布一个关注事件（下单事件），然后由关注的消费者，去进行实现，中间通过 消息队列 进行数据传递；我理解本质上是一种映射关系（KEY：下单事件；VALUE：（库存减少）（付费服务））\n观察者模式：主题就是（下单事件），观察者就是类似消费者，其实也是一个匹配关系（KEY：主题；VALUE：（OBSERVER1）（OBSERVER2））；\n所以我理解两者本质上是一样的，在微服务这样的架构下，即使是观察者模式，仍然需要借助MQ去传递消息；\n请问我的理解对吗？","like_count":0,"discussions":[{"author":{"id":1756585,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/cd/a9/791d0f5e.jpg","nickname":"老肖想当外语大佬","note":"","ucode":"F662D1BF671E92","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":484521,"discussion_content":"没错","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582520334,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1197590,"avatar":"https://static001.geekbang.org/account/avatar/00/12/46/16/bf528ab1.jpg","nickname":"Listener","note":"","ucode":"520C8DFA8AD919","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":180132,"discussion_content":"我理解的两者的区别是：发布订阅模式依赖于一个消息总线，发布消息的和订阅消息的对象彼此不可感知，发布消息的对象将消息发送给消息总线，然后由消息总线来负责分配给具体的某一个订阅者。 而观察者模式下，被观察者会把消息发送给所有的观察者。 总的来说，就是发布订阅模式使用了一个消息总线来实现了发布者和订阅者之间的解耦，消息总线还可以做扩展，例如rabbitmq的按topic去订阅，发布消息  ","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1582279085,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1099750,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c7/e6/11f21cb4.jpg","nickname":"川杰","note":"","ucode":"815211E1D698E6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1197590,"avatar":"https://static001.geekbang.org/account/avatar/00/12/46/16/bf528ab1.jpg","nickname":"Listener","note":"","ucode":"520C8DFA8AD919","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":180282,"discussion_content":"你好，感谢你的回复。我理解，所谓的消息总线，无非就是解决消息如何传递的问题；那么在微服务的场景下，无论是发布订阅，还是观察者，都需要解决怎么传消息的问题，而消息总线也好，MQ也好，说白了就是解决问题的手段。所以我认为两者本质上是没区别的。（依赖消息传递这个行为而不是怎么传这个具体实现）","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582289985,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":180132,"ip_address":"","group_id":0},"score":180282,"extra":""}]}]}]}