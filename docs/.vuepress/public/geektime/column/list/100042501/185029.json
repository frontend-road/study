{"id":185029,"title":"09丨\b关联和断言：一动一静，核心都是在取数据","content":"<p>对每一个性能测试工具来说，关联和断言都是应该具备的基本功能。</p><p>但是有很多新手对关联的逻辑并不是十分理解，甚至有人觉得关联和参数化是一样的，因为它们用的都是动态的数据，并且关联过来的数据也可以用到参数化中，但不一样的点是，关联的数据后续脚本中会用到，参数化则不会。断言倒是比较容易理解，就是做判断。</p><p>那么到底该怎样理解关联和断言呢？下面我们通过两个例子来思考一下。</p><h2>关联</h2><p>现在做性能测试的，有很多都是单纯的接口级测试，这样一来，关联就用得更少了。因为接口级的测试是一发一收就结束了，不需要将数据保存下来再发送出去。</p><p>那么什么样的数据需要关联呢？满足如下条件的数据都是需要关联的：</p><ol>\n<li>数据是由服务器端生成的；</li>\n<li>数据在每一次请求时都是动态变化的；</li>\n<li>数据在后续的请求中需要再发送出去。</li>\n</ol><p>示意图如下：</p><p><img src=\"https://static001.geekbang.org/resource/image/6e/c4/6e5a4272e989c2bfe226fddd664a08c4.jpg?wh=1448*883\" alt=\"\"></p><p>其实我们可以把关联的功能理解为取服务端返回的某个值。在这样的前提之下，我们可以把它用在很多场景之下。</p><p>举个例子，我们常见的Session ID就是一个典型的需要关联的数据。它需要在交互过程中标识一个客户端身份，这个身份要在后续的交互中一直存在，否则服务端就不认识这个客户端了。</p><p>再比如，我们现在用微服务已经非常多了，在Spring Boot中有一个spring-boot-starter-security，默认会提供一个基于HTTP Basic认证的安全防护策略。它在登录时会产生一个CSRF（Cross-Site Request Forgery）值，这个值典型地处于动态变化中。</p><!-- [[[read_end]]] --><p>下面我们来看一下这个值如何处理。</p><p>首先，录制登录、退出的脚本。操作如下：</p><p><img src=\"https://static001.geekbang.org/resource/image/a6/f8/a687642dc767a3c325981946e0004df8.png?wh=755*375\" alt=\"\"></p><p>录出的脚本如下所示：</p><p><img src=\"https://static001.geekbang.org/resource/image/33/c1/33afd450171be3e83666b44b242332c1.png?wh=312*401\" alt=\"\"></p><p>这时直接回放会得到如下结果：</p><p><img src=\"https://static001.geekbang.org/resource/image/d2/24/d24ca3100ab59ebd978e2b1f52de2124.png?wh=997*290\" alt=\"\"></p><p>这回你会看到提示了，Unauthorized，没权限。</p><p>在回放的脚本中，我们看到了如下的登录返回信息。</p><p><img src=\"https://static001.geekbang.org/resource/image/6f/83/6fe988df068982136aa2389ff6c85283.png?wh=989*385\" alt=\"\"><br>\n同时，在脚本中，我们可以看到登录时会使用到这个值。</p><p><img src=\"https://static001.geekbang.org/resource/image/2b/bd/2b1afb0f4cc27fb0a8464655d290fcbd.png?wh=981*90\" alt=\"\"></p><p>下面我们就把它关联了。</p><p>首先添加Cookies Manage。JMeter在处理CSRF时，需要添加一个Cookies manager。如下：</p><p><img src=\"https://static001.geekbang.org/resource/image/12/1f/1284db3c2c234cc184c7a62c2d476c1f.png?wh=790*295\" alt=\"\"></p><p>这里的Cookie Policy一定要选择compatibility，以兼容不同的cookie策略。</p><p>然后取动态值，在返回CSRF值的地方加一个正则表达式提取器来做关联。当然还有更多的提取器，我将在后面提及。</p><p><img src=\"https://static001.geekbang.org/resource/image/a4/d1/a4adfb17fad89fe36ddedc0e22a8acd1.png?wh=1019*321\" alt=\"\"></p><p>这里的<code>&lt;input name=\"_csrf\" type=\"hidden\" value=\"(.+?)\" /&gt;</code>，就是要取出这个动态的变化值，保存到变量csrfNumber中去。</p><p>然后，发送动态值出去，将发送时的CSRF值替换成变量。</p><p><img src=\"https://static001.geekbang.org/resource/image/24/fe/242ba58f3eee77fab3def992486c9ffe.png?wh=993*94\" alt=\"\"></p><p>最后，再回放，就会得到如下结果。</p><p><img src=\"https://static001.geekbang.org/resource/image/1e/86/1e5a6a8638433120139ef3ede5554686.png?wh=992*276\" alt=\"\"></p><p>这样我们就能看到可以正常访问了。</p><p>这就是一个典型的关联过程。</p><p>上面是用的正则提取器，在JMeter中，还有其他的提取器，如下图所示：</p><p><img src=\"https://static001.geekbang.org/resource/image/9d/5d/9dd9fd915ededee2d9918b0f8bc1d55d.png?wh=222*107\" alt=\"\"></p><p>使用什么样的提取器取决于业务的需要，比如说如果你返回的是JSON格式，就可以使用上图中的JSON Extractor。</p><p>我们在很多的业务中，都可以看到大量的动态数据。所以做关联一定要有耐心，不然就会找得很混乱。</p><h2>断言</h2><p>在第8篇文章中，我们讲到手工编写脚本，有一个添加断言的动作。断言就是判断服务端的返回是不是正确的。</p><p>它的判断逻辑是这样的：</p><p><img src=\"https://static001.geekbang.org/resource/image/30/23/30ebaec1c1c07b31d9fbdaca19ffa423.jpg?wh=1395*919\" alt=\"\"></p><p>在压力工具中，我们已经知道要比对的值是什么了，接下来就看服务端返回的对不对了。下面我们来详细说一下这个逻辑。</p><p>先写一个POST接口脚本。</p><p><img src=\"https://static001.geekbang.org/resource/image/46/53/46d7d74a7a16753d922d7e4f6e3a3d53.png?wh=1343*389\" alt=\"\"></p><p>执行下，看到如下结果：</p><p><img src=\"https://static001.geekbang.org/resource/image/56/45/56688bcf2fe5eaeefbe78a1d42020a45.png?wh=593*177\" alt=\"\"></p><p>添加断言。</p><p><img src=\"https://static001.geekbang.org/resource/image/5d/35/5d0cfa549e919607a51354d33a27d135.png?wh=1356*454\" alt=\"\"></p><p>关键点来了，我们知道图片中的这个“true”服务端返回的，可是它到底是从服务端的什么地方产生的呢？</p><p>下面我们来看一下服务端的代码。处理我们的add请求的，是这样的代码段：</p><pre><code> @PostMapping(&quot;/add&quot;)\n  public ResultVO&lt;Boolean&gt; add(@RequestBody User user) {\n    Boolean result = paService.add(user);\n    return ResultVO.&lt;Boolean&gt;builder().success(result).build();\n  }\n</code></pre><p>我们post出去的数据是：</p><pre><code>{\n    &quot;userNumber&quot;: &quot;00009496&quot;,\n    &quot;userName&quot;: &quot;Zee_2&quot;,\n    &quot;orgId&quot;: null,\n    &quot;email&quot;: &quot;Zee_2@7dtest.com&quot;,\n    &quot;mobile&quot;: &quot;18600000000&quot;\n}\n</code></pre><p>代码中对应的是：</p><pre><code>@Override\n    public String toString() {\n        return &quot;User{&quot; +\n            &quot;id='&quot; + id + '\\'' +\n            &quot;, userNumber='&quot; + userNumber + '\\'' +\n            &quot;, userName='&quot; + userName + '\\'' +\n            &quot;, orgId='&quot; + orgId + '\\'' +\n            &quot;, email='&quot; + email + '\\'' +\n            &quot;, mobile='&quot; + mobile + '\\'' +\n            &quot;, createTime=&quot; + createTime +\n            '}';\n    }\n</code></pre><p>ID是自增的：</p><pre><code>  @Id\n    @GeneratedValue(strategy = GenerationType.IDENTITY, generator = &quot;select uuid()&quot;)\n    private String id;\n</code></pre><p>然后由paServer.add添加到数据库里去：</p><pre><code>Boolean result = paService.add(user);\n</code></pre><p>add的实现是：</p><pre><code>  public Boolean add(User user) {\n    return mapper.insertSelective(user) &gt; 0;\n  }\n</code></pre><p>这就是一个关键了。这里return的是<code>mapper.insertSelective(user) &gt; 0</code>的结果，也就是一个true，也就是说，这时在数据库中插入了一条数据：</p><p><img src=\"https://static001.geekbang.org/resource/image/ac/2e/ac60d7974d2d98a2f209604eb3c7f22e.png?wh=721*157\" alt=\"\"></p><p>然后，build返回信息：</p><pre><code>public ResultVO&lt;T&gt; build() {\n      return new ResultVO&lt;&gt;(this.code, this.msg, this.data);\n    }\n</code></pre><p>这个时候，我们才看到下面的提示信息：</p><pre><code>{&quot;data&quot;:true,&quot;code&quot;:200,&quot;msg&quot;:&quot;成功&quot;}\n</code></pre><p>也就是说，在数据库中成功插入1条数据之后，把1&gt;0的判断结果，也就是true返回给result这个变量，然后通过<code>public ResultVO&lt;Boolean&gt; add(@RequestBody User user)</code>中的ResultVO返回给压力工具。</p><p>用图片来说的话，逻辑就是下面这样的：</p><p><img src=\"https://static001.geekbang.org/resource/image/92/c2/92ccc16a1403668248a88a99672b79c2.png?wh=819*367\" alt=\"\"></p><p>通过这一系列的解释，我就是想说明一个问题：断言中的true是从哪来的。</p><p>知道了这个问题的答案之后，我们就能理解，为什么这个true很重要了。因为有了它，就说明我们在数据库成功插入了数据。</p><p>断言是根据需要来设计的，而设计断言的前提就是完全理解这个逻辑。</p><p>当然我们也可以直接这样来写Controller：</p><pre><code> public String add(@RequestBody User user) {\n    Boolean result = paService.add(user);\n    return &quot;Added successfully!&quot;;\n  }\n</code></pre><p>这时就没有true了。脚本运行结果如下：</p><p><img src=\"https://static001.geekbang.org/resource/image/c5/5a/c5d4e081f01e0fb67058338c076d785a.png?wh=530*141\" alt=\"\"></p><p>这时断言看似是失败的，因为我们断言判断的是“true”，但服务端没有返回“true”这个字符。而实际上，当我们从数据库中查看时，插入是成功的。</p><p>但是这种写法是有问题的，不管数据有没有插入成功，只要在add方法执行了，就会提示“<code>Added successfully!</code>”。</p><p>在实际的工作中，也有开发这样写代码，这样的话，断言似乎都是对的，事务也是成功的，但实际上数据库中可能没有插进去数据。</p><h2>总结</h2><p>实际上，关联和断言的前半部分是一样的，都是从服务器返回信息中取出数据。但不同的是，关联取来的数据每次都会不同；而断言取出来的数据基本上都是一样的，除非出了错。</p><p>对服务端生成的，并且每次生成都不一样的动态变化的数据，那么将其<strong>取回来之后，在后续的请求中使用</strong>，这种逻辑就是关联。</p><p>对服务端返回的，可标识业务成功与否的数据，将其取回来之后，做判断。这种逻辑就是断言。</p><h2>思考题</h2><p>最后给你留道思考题吧，你能说一下关联和断言的逻辑是什么吗？它们取数据的特点又是什么呢？</p><p>欢迎你在评论区写下你的思考，我会和你一起交流，也欢迎把这篇文章分享给你的朋友或者同事，一起交流进步。</p>","comments":[{"had_liked":false,"id":168408,"user_name":"律飛","can_delete":false,"product_type":"c1","uid":1462608,"ip_address":"","ucode":"65394E437AD2DF","user_header":"https://static001.geekbang.org/account/avatar/00/16/51/50/f5f2a121.jpg","comment_is_top":false,"comment_ctime":1578062143,"is_pvip":false,"replies":[{"id":"65389","content":"写的非常好。","user_name":"作者回复","user_name_real":"高楼(Zee)","uid":"1785562","ctime":1578138591,"ip_address":"","comment_id":168408,"utype":1}],"discussion_count":1,"race_medal":0,"score":"53117669695","product_id":100042501,"comment_content":"关联，有关有联，该数据一定是根据前面的业务获取的，是一个变化动态的，从服务器获得的，否则就可以在脚本中直接写好，变成一个参数了；同时该数据也一定是后面业务得以进行的必须输入，否则就没有存在的意义了；因此，关联数据起了一个承上启下的作用。取数据特点，从服务器返回信息中取数据，这个数据是动态的，且是后续业务必须的输入数据，需要继续使用的。<br>断言，美其名曰一言断分晓，明查是对是错矣。提取服务器返回的可判断业务成功的数据，对其进行判断，从而获知业务是否成功。取数据特点，也是从服务器返回信息中取数据，在业务成功时该数据是一样的，主要用于判断，判断结束后一般不会继续使用。<br><br>","like_count":13,"discussions":[{"author":{"id":1785562,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/3e/da/e686a72b.jpg","nickname":"高楼(Zee)","note":"","ucode":"149202404A5ABC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":480214,"discussion_content":"写的非常好。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578138591,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":168781,"user_name":"zuozewei","can_delete":false,"product_type":"c1","uid":1039631,"ip_address":"","ucode":"D594C9CBAF15A5","user_header":"https://static001.geekbang.org/account/avatar/00/0f/dd/0f/ee37a7fe.jpg","comment_is_top":false,"comment_ctime":1578157714,"is_pvip":false,"replies":[{"id":"65495","content":"合理。","user_name":"作者回复","user_name_real":"高楼(Zee)","uid":"1785562","ctime":1578219832,"ip_address":"","comment_id":168781,"utype":1}],"discussion_count":1,"race_medal":0,"score":"35937896082","product_id":100042501,"comment_content":"<br>思考题：联和断言的逻辑是什么吗？它们取数据的特点又是什么呢？<br><br>关联：取出前序调用返回结果中的某些动态值，传递给后续的调用。最常见的是唯一标识客户端的「Session ID」。<br><br>断言：又称检查点，断言是我们的预期，主要是保证脚本按照原本设计的路径执行。取的数据是服务端返回的，可标识业务成功与否的数据，并做判断。<br><br>请记住，测试一定要有断言。没有断言的测试，是没有意义的，就像你说自己是世界冠军，总得比个赛吧！","like_count":8,"discussions":[{"author":{"id":1785562,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/3e/da/e686a72b.jpg","nickname":"高楼(Zee)","note":"","ucode":"149202404A5ABC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":480333,"discussion_content":"合理。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578219832,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":168412,"user_name":"奔跑的栗子","can_delete":false,"product_type":"c1","uid":1783629,"ip_address":"","ucode":"576E92AE571434","user_header":"https://static001.geekbang.org/account/avatar/00/1b/37/4d/6d9af68e.jpg","comment_is_top":false,"comment_ctime":1578062688,"is_pvip":false,"replies":[{"id":"65388","content":"理解非常正确。","user_name":"作者回复","user_name_real":"高楼(Zee)","uid":"1785562","ctime":1578138531,"ip_address":"","comment_id":168412,"utype":1}],"discussion_count":1,"race_medal":0,"score":"14462964576","product_id":100042501,"comment_content":"关联和断言，都是获取特定数据；关联将获取到的数据更新到下一次使用中；断言预知被解除数据的数值，判断执行结果是否正常；","like_count":3,"discussions":[{"author":{"id":1785562,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/3e/da/e686a72b.jpg","nickname":"高楼(Zee)","note":"","ucode":"149202404A5ABC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":480215,"discussion_content":"理解非常正确。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578138531,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":190226,"user_name":"小呀么小二郎","can_delete":false,"product_type":"c1","uid":1326905,"ip_address":"","ucode":"149540DCFDF43E","user_header":"https://static001.geekbang.org/account/avatar/00/14/3f/39/b1558fc9.jpg","comment_is_top":false,"comment_ctime":1584618488,"is_pvip":false,"replies":[{"id":"73210","content":"理解得很准确。加油！","user_name":"作者回复","user_name_real":"高楼(Zee)","uid":"1785562","ctime":1584654632,"ip_address":"","comment_id":190226,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10174553080","product_id":100042501,"comment_content":"今日思考题：<br>你能说一下关联和断言的逻辑是什么吗？<br>关联的逻辑：数据由服务端生成且每次生成的数据是动态变化的，通过关联取到的数据在后续的请求中需要再次使用。<br>断言的逻辑：对服务端返回的，可标识业务成功与否的数据，将其取回来之后做判断。<br><br>补充：断言是根据需要来设计的，而设计断言的前提就是完全理解后端代码逻辑。（代码很重要，昨天老师也指示了，准备着手学起来）<br><br>它们取数据的特点又是什么呢？<br>都是从服务器返回的信息中取出数据，不同的是：关联取的数据，每次都不一样；而正常情况下断言每次取的数据基本上是一样的。<br><br>老师讲的循序渐进，简单易懂。","like_count":2,"discussions":[{"author":{"id":1785562,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/3e/da/e686a72b.jpg","nickname":"高楼(Zee)","note":"","ucode":"149202404A5ABC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":487919,"discussion_content":"理解得很准确。加油！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584654632,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":239556,"user_name":"人心向善","can_delete":false,"product_type":"c1","uid":1197049,"ip_address":"","ucode":"6B0C01C52BF882","user_header":"https://static001.geekbang.org/account/avatar/00/12/43/f9/555d7aa0.jpg","comment_is_top":false,"comment_ctime":1596587540,"is_pvip":false,"replies":[{"id":"93988","content":"正解。","user_name":"作者回复","user_name_real":"高楼(Zee)","uid":"1785562","ctime":1604284034,"ip_address":"","comment_id":239556,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5891554836","product_id":100042501,"comment_content":"断言，也就是loadrunner里的检查点：对脚本执行结果进行成功失败判断<br><br>参数化，a可以模拟，b也可以，同样c也可以去模拟，只不过模拟对象不同，但最终结果是一样的（最大程度的模拟现实环境）<br><br>关联，客户端去向服务器请求数据，服务器返回数据的同时带有一个可变的值或不变的值，当通过脚本形式去访问时，如果你的脚本中在模拟客户端请求时没有带这个值去请求的话服务器端是不认的，因为你的请求没有服务器要的值（没有通过服务器的验证），自然数据也不会给你了，有点类似http里的三次握手🤝","like_count":1,"discussions":[{"author":{"id":1785562,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/3e/da/e686a72b.jpg","nickname":"高楼(Zee)","note":"","ucode":"149202404A5ABC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":503138,"discussion_content":"正解。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1604284034,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":220851,"user_name":"钱","can_delete":false,"product_type":"c1","uid":1009652,"ip_address":"","ucode":"2C92A243A463D4","user_header":"https://static001.geekbang.org/account/avatar/00/0f/67/f4/9a1feb59.jpg","comment_is_top":false,"comment_ctime":1590329772,"is_pvip":false,"replies":[{"id":"81880","content":"理解的非常对。","user_name":"作者回复","user_name_real":"高楼(Zee)","uid":"1785562","ctime":1590712611,"ip_address":"","comment_id":220851,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5885297068","product_id":100042501,"comment_content":"关联——动态的数据获取用于继续的使用<br>断言——判断业务逻辑是否OK","like_count":1,"discussions":[{"author":{"id":1785562,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/3e/da/e686a72b.jpg","nickname":"高楼(Zee)","note":"","ucode":"149202404A5ABC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":496252,"discussion_content":"理解的非常对。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1590712611,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":196485,"user_name":"燃客","can_delete":false,"product_type":"c1","uid":1526870,"ip_address":"","ucode":"B4DA3FBCA2AFC5","user_header":"https://static001.geekbang.org/account/avatar/00/17/4c/56/3c189b4d.jpg","comment_is_top":false,"comment_ctime":1585285256,"is_pvip":false,"replies":[{"id":"74725","content":"理解全部正确。","user_name":"作者回复","user_name_real":"高楼(Zee)","uid":"1785562","ctime":1585469294,"ip_address":"","comment_id":196485,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5880252552","product_id":100042501,"comment_content":"断言其实从测试人员的角度来解释，最简单直接的方式就是预期结果与实际结果做比较，判断是否一致，只是在这里，我们将其从人工方式转为了脚本去实现。<br>关联，最终体现在了业务上下游中的提取、传递、引用，个人认为可以解释为参数传递与引用，可以是接口与接口之间的、接口与前置条件之间的、后置处理器与断言之间的。<br>接口与接口之间：比如A接口的某个返回参数作为了后续接口的入参；<br>接口与前置条件之间：比如注册接口要保证注册号码的唯一性,我们在前置条件中做处理后，在入参中使用变量，或者直接使用相关的函数生成<br>后置处理器与断言之间：比如一个写入数据库动作的接口，我们在断言时候，可能需要在接口后置处理器中引入JDBC请求进行查询，然后再做如beanshell断言是否符合预期","like_count":1,"discussions":[{"author":{"id":1785562,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/3e/da/e686a72b.jpg","nickname":"高楼(Zee)","note":"","ucode":"149202404A5ABC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":489313,"discussion_content":"理解全部正确。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585469294,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":189901,"user_name":"京都念慈菴","can_delete":false,"product_type":"c1","uid":1744834,"ip_address":"","ucode":"2A310A91069A5E","user_header":"https://static001.geekbang.org/account/avatar/00/1a/9f/c2/3d1c2f88.jpg","comment_is_top":false,"comment_ctime":1584580816,"is_pvip":false,"replies":[{"id":"73121","content":"理解正确！","user_name":"作者回复","user_name_real":"高楼(Zee)","uid":"1785562","ctime":1584595746,"ip_address":"","comment_id":189901,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5879548112","product_id":100042501,"comment_content":"断言 判断对错，关联只管取用，不管对错。关联取数一定是返回值中某一个特定的变化的值，断言则是判断返回值中有没有某一个特定值，有就说明程序按预定设计执行了","like_count":1,"discussions":[{"author":{"id":1785562,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/3e/da/e686a72b.jpg","nickname":"高楼(Zee)","note":"","ucode":"149202404A5ABC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":487824,"discussion_content":"理解正确！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584595746,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":188680,"user_name":"啊啊","can_delete":false,"product_type":"c1","uid":1511478,"ip_address":"","ucode":"3F8F17C508A19D","user_header":"https://static001.geekbang.org/account/avatar/00/17/10/36/fc9e80c4.jpg","comment_is_top":false,"comment_ctime":1584404318,"is_pvip":false,"replies":[{"id":"72766","content":"如果只是为了定位时间消耗在哪里，为了找问题可以这样。真实的场景中肯定不能这样做。","user_name":"作者回复","user_name_real":"高楼(Zee)","uid":"1785562","ctime":1584406439,"ip_address":"","comment_id":188680,"utype":1}],"discussion_count":2,"race_medal":0,"score":"5879371614","product_id":100042501,"comment_content":"接口性能测试，若b接口需要关联a接口的返回数据，如token 。那么，a接口性能会影响到b接口的性能。<br>我一般是通过修改代码屏蔽掉这个参数的影响。但我不知道是否合适？<br>合适或者不合适，或者如果需要分情况考虑，可不可以请老师帮我理理。感谢","like_count":1,"discussions":[{"author":{"id":1785562,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/3e/da/e686a72b.jpg","nickname":"高楼(Zee)","note":"","ucode":"149202404A5ABC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":487486,"discussion_content":"如果只是为了定位时间消耗在哪里，为了找问题可以这样。真实的场景中肯定不能这样做。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584406439,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1511478,"avatar":"https://static001.geekbang.org/account/avatar/00/17/10/36/fc9e80c4.jpg","nickname":"啊啊","note":"","ucode":"3F8F17C508A19D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":206596,"discussion_content":"如果不这样做，我感觉b接口会受a接口的影响，无法测试出b接口单接口的容量。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584418340,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":171531,"user_name":"songyy","can_delete":false,"product_type":"c1","uid":1007201,"ip_address":"","ucode":"34D6443B91676D","user_header":"https://static001.geekbang.org/account/avatar/00/0f/5e/61/985f3eb7.jpg","comment_is_top":false,"comment_ctime":1578962825,"is_pvip":false,"replies":[{"id":"66495","content":"理解的很正确 。","user_name":"作者回复","user_name_real":"高楼(Zee)","uid":"1785562","ctime":1578974073,"ip_address":"","comment_id":171531,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5873930121","product_id":100042501,"comment_content":"关联和断言的逻辑是什么吗？<br>它们取数据的特点又是什么呢？<br><br>关联: 在发出的请求之中，用到收到的请求的数据。通常取到的是header或者页面内容数据，用正则表达式比较合适。<br><br>断言: 判断请求是否成功的标志。可以用json parsing的方式获取数据。判断HTTP status code也是一种合理的断言方式(比如，一个post请求，在成功时断言201 created)","like_count":1,"discussions":[{"author":{"id":1785562,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/3e/da/e686a72b.jpg","nickname":"高楼(Zee)","note":"","ucode":"149202404A5ABC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":481399,"discussion_content":"理解的很正确 。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578974073,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":171394,"user_name":"餘生","can_delete":false,"product_type":"c1","uid":1705643,"ip_address":"","ucode":"3F15F78D4004B5","user_header":"https://static001.geekbang.org/account/avatar/00/1a/06/ab/ba20f342.jpg","comment_is_top":false,"comment_ctime":1578916537,"is_pvip":false,"replies":[{"id":"66506","content":"理解的很对。","user_name":"作者回复","user_name_real":"高楼(Zee)","uid":"1785562","ctime":1578975345,"ip_address":"","comment_id":171394,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5873883833","product_id":100042501,"comment_content":"关联，个人认为比较直观的解释:比如操作一个事件，需要前后分别请求A接口和B接口，B接口请求需要A接口返回参数的某些字段，这就是关联。<br><br>断言，没什么好说的，就是判断实际结果是否符合预期结果，并且测试中一定要加，因为有时候无论结果是否正确，response code都是200，不加断言无法直观判断","like_count":1,"discussions":[{"author":{"id":1785562,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/3e/da/e686a72b.jpg","nickname":"高楼(Zee)","note":"","ucode":"149202404A5ABC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":481327,"discussion_content":"理解的很对。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578975345,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":169379,"user_name":"rainbowzhouj","can_delete":false,"product_type":"c1","uid":1786797,"ip_address":"","ucode":"F90723B1777EA4","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Ce5DHQHpoeWBDMtibPAO9QKfRgRz9RvA3jgibMfJnyIXmOgZulVW02NYtn6ibF2fGNMQZ7z6LopHrknqB6MAzP1pw/132","comment_is_top":false,"comment_ctime":1578323898,"is_pvip":false,"replies":[{"id":"65691","content":"理解的很对。","user_name":"作者回复","user_name_real":"高楼(Zee)","uid":"1785562","ctime":1578360177,"ip_address":"","comment_id":169379,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5873291194","product_id":100042501,"comment_content":"关联：假设一个业务场景由多个请求构成，那么关联可以理解为前一个请求的输出作为后一个请求的输入。并且可以将关联的值参数化，例如Token，jobId等；<br>断言：一个请求从执行开始到结束之中，所经历每个步骤都可以“暂停”，那么暂停的这个动作可以理解为断言。通过断言你可以知道代码的运行逻辑，对应的输出是否合理，Debug的好帮手。<br>","like_count":1,"discussions":[{"author":{"id":1785562,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/3e/da/e686a72b.jpg","nickname":"高楼(Zee)","note":"","ucode":"149202404A5ABC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":480532,"discussion_content":"理解的很对。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578360177,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":168048,"user_name":"村夫","can_delete":false,"product_type":"c1","uid":1434041,"ip_address":"","ucode":"B70D4E421A281B","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83erdesQy0moaicYTicoHRQXzbmJm15wohb77qD1OdbuSqPCSUerbcZHzxJJunfmEhTx4kBLxbGaxQ9iag/132","comment_is_top":false,"comment_ctime":1578005798,"is_pvip":false,"replies":[{"id":"65258","content":"还有参数化的逻辑和http协议的两篇算是和压力工具有关的。再往后就不讲压力工具了。<br>就开始讲场景，监控，分析什么的了。<br>是不是工具部分太简单了？😀😀","user_name":"作者回复","user_name_real":"高楼(Zee)","uid":"1785562","ctime":1578009424,"ip_address":"","comment_id":168048,"utype":1}],"discussion_count":3,"race_medal":0,"score":"5872973094","product_id":100042501,"comment_content":"老师，工具的使用还有几篇？","like_count":1,"discussions":[{"author":{"id":1785562,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/3e/da/e686a72b.jpg","nickname":"高楼(Zee)","note":"","ucode":"149202404A5ABC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":480117,"discussion_content":"还有参数化的逻辑和http协议的两篇算是和压力工具有关的。再往后就不讲压力工具了。\n就开始讲场景，监控，分析什么的了。\n是不是工具部分太简单了？😀😀","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578009424,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1783629,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/37/4d/6d9af68e.jpg","nickname":"奔跑的栗子","note":"","ucode":"576E92AE571434","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":116458,"discussion_content":"不会不会，对于我这种幼儿园很合适","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578062303,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1798489,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/71/59/642cd27a.jpg","nickname":"小呆呆","note":"","ucode":"6A04486F1FC932","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1783629,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/37/4d/6d9af68e.jpg","nickname":"奔跑的栗子","note":"","ucode":"576E92AE571434","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":203820,"discussion_content":"别下车了 幼儿园不停车的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584087023,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":116458,"ip_address":""},"score":203820,"extra":""}]}]},{"had_liked":false,"id":342420,"user_name":"华泰事业部","can_delete":false,"product_type":"c1","uid":2052923,"ip_address":"","ucode":"228A18F6D43BD7","user_header":"https://static001.geekbang.org/account/avatar/00/1f/53/3b/3b92e249.jpg","comment_is_top":false,"comment_ctime":1650254183,"is_pvip":true,"replies":[{"id":"125327","content":"理解的很正确。 ","user_name":"作者回复","user_name_real":"编辑","uid":"1785562","ctime":1650709445,"ip_address":"","comment_id":342420,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1650254183","product_id":100042501,"comment_content":"关联，一定是根据前面的业务获取的，是一个动态的变化值，从服务器返回中获得的；否则就可以直接写死在脚本里，变成一个参数；该数据一定是后面业务进行必要的参数值，关联数据起了一个承上启下的作用。关联特点：从服务器返回信息中取数据，这个数据是动态的，且是后续业务必须的输入数据，需要继续使用的。<br>断言，断言就是区分业务对错的。特点：提取服务器返回的值，来判断业务成功的数据，从而获知业务是否成功","like_count":0,"discussions":[{"author":{"id":1785562,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/3e/da/e686a72b.jpg","nickname":"高楼(Zee)","note":"","ucode":"149202404A5ABC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":566520,"discussion_content":"理解的很正确。 ","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1650709445,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":339261,"user_name":"章鱼","can_delete":false,"product_type":"c1","uid":2673745,"ip_address":"","ucode":"D44893DC2526D4","user_header":"","comment_is_top":false,"comment_ctime":1648016065,"is_pvip":false,"replies":[{"id":"124347","content":"说的对。","user_name":"作者回复","user_name_real":"编辑","uid":"1785562","ctime":1648600681,"ip_address":"","comment_id":339261,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1648016065","product_id":100042501,"comment_content":"关联--将接口动态返回值，通过参数的方式传递给其他接口，并完成整个业务流程<br>断言--通过具体的值 与 接口返回值 进行比较，查看接口是否正确返回值，这个【具体的值】要通过后端的代码进行分析，查看内容是什么","like_count":0,"discussions":[{"author":{"id":1785562,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/3e/da/e686a72b.jpg","nickname":"高楼(Zee)","note":"","ucode":"149202404A5ABC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":559055,"discussion_content":"说的对。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1648600682,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":323276,"user_name":"周丫人","can_delete":false,"product_type":"c1","uid":1975167,"ip_address":"","ucode":"FCC8EAE6D94CE4","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/uicONticsIsyrRx6p5Atof81RYJXsyUseRHtu4wHtib5LoHDbowzxvgKCgu9JpR4ww8oOba2fdkYFFsu5lt65qQPw/132","comment_is_top":false,"comment_ctime":1637812668,"is_pvip":false,"replies":[{"id":"117400","content":"理解非常正确。","user_name":"作者回复","user_name_real":"编辑","uid":"1785562","ctime":1637945302,"ip_address":"","comment_id":323276,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1637812668","product_id":100042501,"comment_content":"     关联的作用主要是为了构造场景，因为有些接口的请求参数，就是会依赖于其他的接口，比如说需要登录之后才能使用的场景，那么登录接口必然要先被 调用，然后从返回值中提取到对应的数据，用于做后面接口的请求参数。断言的功能，主要是为了判断 这个接口，在业务上执行的是否正确，因为接口能调通和业务上的正确还是有区别的。<br>      从取数的逻辑上来说，二者都是从返回值中获取所需要的数据。但是作用有所不同。所以 在Jmeter中，我们需要用到不同的元件，来获得数据。<br>      断言用的就是断言的元件。关联可能先要用正则表达式提取器，然后把获得的数据，用header组件设置进去","like_count":0,"discussions":[{"author":{"id":1785562,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/3e/da/e686a72b.jpg","nickname":"高楼(Zee)","note":"","ucode":"149202404A5ABC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":533770,"discussion_content":"理解非常正确。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1637945302,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":297095,"user_name":"0909","can_delete":false,"product_type":"c1","uid":1969097,"ip_address":"","ucode":"79C60A8D2B809A","user_header":"https://static001.geekbang.org/account/avatar/00/1e/0b/c9/b53037df.jpg","comment_is_top":false,"comment_ctime":1623307907,"is_pvip":false,"replies":[{"id":"107925","content":"非常正确。","user_name":"作者回复","user_name_real":"高楼(Zee)","uid":"1785562","ctime":1623338005,"ip_address":"","comment_id":297095,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1623307907","product_id":100042501,"comment_content":"关联是接口前后依赖，断言是保证接口返回的结果是正确的，符合业务场景的","like_count":0,"discussions":[{"author":{"id":1785562,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/3e/da/e686a72b.jpg","nickname":"高楼(Zee)","note":"","ucode":"149202404A5ABC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":521714,"discussion_content":"非常正确。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1623338005,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":280088,"user_name":"bolo","can_delete":false,"product_type":"c1","uid":1357170,"ip_address":"","ucode":"7C91CEA2F1970E","user_header":"https://static001.geekbang.org/account/avatar/00/14/b5/72/bb10f3d0.jpg","comment_is_top":false,"comment_ctime":1614073806,"is_pvip":false,"replies":[{"id":"103258","content":"对的。","user_name":"作者回复","user_name_real":"高楼(Zee)","uid":"1785562","ctime":1616423009,"ip_address":"","comment_id":280088,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1614073806","product_id":100042501,"comment_content":"关联和断言的逻辑？<br>相同点：都是从接口的返回体里取数据。<br>不同点：<br>            1、关联是将取到的数据用于后续的接口使用，比如登录后的cookie内容，需要放到后续的接口中使用。 断言是针对单接口的业务逻辑验证。<br>           2、取的方式不同：关联取的方式主要用于正则，JSON提取器等等； 断言取的方式有包含、匹配，相等、等等方式。<br>           <br>                                              <br>            ","like_count":0,"discussions":[{"author":{"id":1785562,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/3e/da/e686a72b.jpg","nickname":"高楼(Zee)","note":"","ucode":"149202404A5ABC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":515978,"discussion_content":"对的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1616423009,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":268729,"user_name":"Tomie","can_delete":false,"product_type":"c1","uid":2370779,"ip_address":"","ucode":"3531EBA88C1EAB","user_header":"","comment_is_top":false,"comment_ctime":1608308762,"is_pvip":false,"replies":[{"id":"97541","content":"这个问题看起来有点意思。<br>有没有错误信息和资源信息之类的可以发我微信上，我给你分析一下。","user_name":"作者回复","user_name_real":"高楼(Zee)","uid":"1785562","ctime":1608439676,"ip_address":"","comment_id":268729,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1608308762","product_id":100042501,"comment_content":"老师你好，性能小白强上手，听你你的课程眼前一亮。关联：服务器响应得数据动态生成，不会重复，还会用于后续请求，断言就是针对服务器响应结果有一种判断，响应结果不变。老师我用locust测试性能得时候 单机压测得时候没问题，单机分布式压测多了 就会接口报错，我的初衷是 在线3000，业务并发率5%，tps=3000*5%=150，线程数就是150tps&#47;(1000ms&#47;100ms)=15 ,locust因为没有线程是携程，所以我觉得应该对应得就是孵化率，电脑是6核，就起了6个worker, 用户总数是3000进行压，每个worker到了50多得时候接口就开始就报错了，压倒2500用户就上不去了，我有点怀疑我脚本写的有点问题，能否帮忙看看，或者贴个locust压测范本看看<br><br>def login(s, data):<br>    url1 = url_data[&#39;test&#39;][&#39;url1&#39;]<br>    s.get(url1, verify=False)<br>    url2 = url_data[&#39;test&#39;][&#39;url2&#39;]<br>    res2 = s.post(url2, data, verify=False)<br>    url3 = res2.json()[&#39;next&#39;]<br>    s.get(url3, verify=False)<br>    url4 = url_data[&#39;test&#39;][&#39;url3&#39;]<br>    res4 = s.get(url4, verify=False)<br>    url5 = res4.json()[&#39;redirect_uri&#39;]<br>    s.get(url5)<br>    res = s.get(url4, verify=False)<br>    companyId = res.json()[&#39;companyId&#39;]<br>    s.headers[&#39;X-CSRF-TOKEN&#39;] = s.cookies[&#39;X-CSRF-TOKEN&#39;]<br>    assert res.status_code == 200<br>    return companyId<br><br><br>class consoleTask(TaskSet):<br>    def on_start(self):<br>        data = {&quot;email&quot;: &quot;1606724519@linshiyouxiang.net&quot;, &quot;password&quot;: &quot;xxxxx@&quot;}<br>        self.companyId = login(self.client, data)<br>    @task(1)<br>    def userInfo(self):<br>        res = self.client.get(&quot;&#47;api&#47;v2&#47;userInfo&quot;, name=&quot;用户信息&quot;)<br>        assert res.status_code == 200<br>class User(HttpUser):<br>    host = &quot;http:&#47;&#47;xxx.xxx.com&quot;<br>    min_wait = 3000<br>    max_wait = 6000<br>    tasks = [consoleTask]","like_count":0,"discussions":[{"author":{"id":1785562,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/3e/da/e686a72b.jpg","nickname":"高楼(Zee)","note":"","ucode":"149202404A5ABC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":512019,"discussion_content":"这个问题看起来有点意思。\n有没有错误信息和资源信息之类的可以发我微信上，我给你分析一下。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1608439676,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":252519,"user_name":"Geek_c2ec23","can_delete":false,"product_type":"c1","uid":2206729,"ip_address":"","ucode":"97525E92718585","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJWhf50J9HU3DJDYHmtOrFyzOTNSUedpSmkKhoiakyBLibibic9juCCJhah42YjRx8F2icibPicibWXmAJp7w/132","comment_is_top":false,"comment_ctime":1602326780,"is_pvip":false,"replies":[{"id":"93952","content":"看是啥错。","user_name":"作者回复","user_name_real":"高楼(Zee)","uid":"1785562","ctime":1604282002,"ip_address":"","comment_id":252519,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1602326780","product_id":100042501,"comment_content":"回放失败，大概率是因为关联吗？最近录制了wordpress的登录退出脚本，但是回放失败了，不知道怎么判断原因","like_count":0,"discussions":[{"author":{"id":1785562,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/3e/da/e686a72b.jpg","nickname":"高楼(Zee)","note":"","ucode":"149202404A5ABC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":506797,"discussion_content":"看是啥错。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1604282002,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":236311,"user_name":"周","can_delete":false,"product_type":"c1","uid":1030086,"ip_address":"","ucode":"5595CC944F4A08","user_header":"https://static001.geekbang.org/account/avatar/00/0f/b7/c6/839984bc.jpg","comment_is_top":false,"comment_ctime":1595389364,"is_pvip":false,"replies":[{"id":"87955","content":"举例非常典型。不过你说的这种情况，用参数化估计也可以。要看具体的车票数据从哪里来的。","user_name":"作者回复","user_name_real":"高楼(Zee)","uid":"1785562","ctime":1596069968,"ip_address":"","comment_id":236311,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1595389364","product_id":100042501,"comment_content":"关联：甲从12306购买一张从深圳到广州的车票；持有改车票验票进站；闸机口检票；上车寻找座位；下车出站；整个旅程中，车票就是关联的要素。","like_count":0,"discussions":[{"author":{"id":1785562,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/3e/da/e686a72b.jpg","nickname":"高楼(Zee)","note":"","ucode":"149202404A5ABC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":502023,"discussion_content":"举例非常典型。不过你说的这种情况，用参数化估计也可以。要看具体的车票数据从哪里来的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1596069968,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":200253,"user_name":"燃客","can_delete":false,"product_type":"c1","uid":1526870,"ip_address":"","ucode":"B4DA3FBCA2AFC5","user_header":"https://static001.geekbang.org/account/avatar/00/17/4c/56/3c189b4d.jpg","comment_is_top":false,"comment_ctime":1585563827,"is_pvip":false,"replies":[{"id":"75016","content":"直接用浏览器的开发者工具就行。","user_name":"作者回复","user_name_real":"高楼(Zee)","uid":"1785562","ctime":1585621741,"ip_address":"","comment_id":200253,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1585563827","product_id":100042501,"comment_content":"现在有这么一个想法，帮忙看看有没有合适的工具或者方法推荐，背景是产品需求不停的增加，造成页面打开时请求和加载了很多内容，我现在想在操作打开web页面的时候，统计出整个加载过程中 接口和前端页面分别占用的时间，根据相关数据来分析页面慢的原因是前端还是后端的原因","like_count":0,"discussions":[{"author":{"id":1785562,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/3e/da/e686a72b.jpg","nickname":"高楼(Zee)","note":"","ucode":"149202404A5ABC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":489973,"discussion_content":"直接用浏览器的开发者工具就行。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585621741,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1526870,"avatar":"https://static001.geekbang.org/account/avatar/00/17/4c/56/3c189b4d.jpg","nickname":"燃客","note":"","ucode":"B4DA3FBCA2AFC5","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":218169,"discussion_content":"哈哈 这个知道 因为不可能一次搞定 想找找有没有那种搞好之后可以复用的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585627782,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":193951,"user_name":"bettynie","can_delete":false,"product_type":"c1","uid":1580609,"ip_address":"","ucode":"84372D4B8761D6","user_header":"https://wx.qlogo.cn/mmopen/vi_32/DYAIOgq83epFQPMPrP3V6HhlGLPp0JKMiaHQDibFKnE7z8To27tYEH42XvvmmQGyYvL4CK1lLJBIUAw7jtBnezibA/132","comment_is_top":false,"comment_ctime":1585006406,"is_pvip":false,"replies":[{"id":"73852","content":"所有的场景都不应该去掉断言。","user_name":"作者回复","user_name_real":"高楼(Zee)","uid":"1785562","ctime":1585011168,"ip_address":"","comment_id":193951,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1585006406","product_id":100042501,"comment_content":"高老师，在稳定性或者混合并发场景中，是否应该去掉断言来执行呢？","like_count":0,"discussions":[{"author":{"id":1785562,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/3e/da/e686a72b.jpg","nickname":"高楼(Zee)","note":"","ucode":"149202404A5ABC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":488712,"discussion_content":"所有的场景都不应该去掉断言。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585011168,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":188478,"user_name":"啊啊","can_delete":false,"product_type":"c1","uid":1511478,"ip_address":"","ucode":"3F8F17C508A19D","user_header":"https://static001.geekbang.org/account/avatar/00/17/10/36/fc9e80c4.jpg","comment_is_top":false,"comment_ctime":1584359301,"is_pvip":false,"replies":[{"id":"72708","content":"逻辑上来说，你说的这个关系，肯定会影响的了。","user_name":"作者回复","user_name_real":"高楼(Zee)","uid":"1785562","ctime":1584361840,"ip_address":"","comment_id":188478,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1584359301","product_id":100042501,"comment_content":"接口性能测试，若b接口需要关联a接口的返回数据，如token 。那么，a接口性能会不会影响b接口的性能？","like_count":0,"discussions":[{"author":{"id":1785562,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/3e/da/e686a72b.jpg","nickname":"高楼(Zee)","note":"","ucode":"149202404A5ABC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":487428,"discussion_content":"逻辑上来说，你说的这个关系，肯定会影响的了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584361840,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1511478,"avatar":"https://static001.geekbang.org/account/avatar/00/17/10/36/fc9e80c4.jpg","nickname":"啊啊","note":"","ucode":"3F8F17C508A19D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":206401,"discussion_content":"现在的做法是通过修改代码，屏蔽掉这个有影响的参数。但我不知道这样做是否合适？麻烦老师帮忙看看","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584403921,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":170678,"user_name":"小老鼠","can_delete":false,"product_type":"c1","uid":1257460,"ip_address":"","ucode":"C663A0C863A515","user_header":"https://static001.geekbang.org/account/avatar/00/13/2f/f4/2dede51a.jpg","comment_is_top":false,"comment_ctime":1578663068,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1578663068","product_id":100042501,"comment_content":"1，获取csrftoken ，然后把它写入hidden和cookies 中，这样就可以用接口测试代码进行csrf攻击了。2，听茹老师说过当断言比较多时可用diff这个工具去比较生成的文件(比如json文件","like_count":0},{"had_liked":false,"id":169592,"user_name":"Geek_570c4c","can_delete":false,"product_type":"c1","uid":1787772,"ip_address":"","ucode":"5A7B117FD4F598","user_header":"","comment_is_top":false,"comment_ctime":1578384443,"is_pvip":false,"replies":[{"id":"65809","content":"我也期待。","user_name":"作者回复","user_name_real":"高楼(Zee)","uid":"1785562","ctime":1578395595,"ip_address":"","comment_id":169592,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1578384443","product_id":100042501,"comment_content":"期待后面的内容","like_count":0,"discussions":[{"author":{"id":1785562,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/3e/da/e686a72b.jpg","nickname":"高楼(Zee)","note":"","ucode":"149202404A5ABC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":480624,"discussion_content":"我也期待。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578395595,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":168875,"user_name":"life_牛","can_delete":false,"product_type":"c1","uid":1150443,"ip_address":"","ucode":"39E99CD4BFA48C","user_header":"https://static001.geekbang.org/account/avatar/00/11/8d/eb/e98af40f.jpg","comment_is_top":false,"comment_ctime":1578208940,"is_pvip":false,"replies":[{"id":"65494","content":"后面会有。但是是参数众多，只是举常见的场景，不会全覆盖。<br>主要是要说明分析的思路。","user_name":"作者回复","user_name_real":"高楼(Zee)","uid":"1785562","ctime":1578219800,"ip_address":"","comment_id":168875,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1578208940","product_id":100042501,"comment_content":"老师，性能压测和参数优化会讲解到吗？","like_count":0,"discussions":[{"author":{"id":1785562,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/3e/da/e686a72b.jpg","nickname":"高楼(Zee)","note":"","ucode":"149202404A5ABC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":480359,"discussion_content":"后面会有。但是是参数众多，只是举常见的场景，不会全覆盖。\n主要是要说明分析的思路。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578219800,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]}]}