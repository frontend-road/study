{"id":10975,"title":"第30讲 | Java程序运行在Docker等容器环境有哪些新问题？","content":"<p>如今，Docker等容器早已不是新生事物，正在逐步成为日常开发、部署环境的一部分。Java能否无缝地运行在容器环境，是否符合微服务、Serverless等新的软件架构和场景，在一定程度上也会影响未来的技术栈选择。当然，Java对Docker等容器环境的支持也在不断增强，自然地，Java在容器场景的实践也逐渐在面试中被涉及。我希望通过专栏今天这一讲，能够帮你能做到胸有成竹。</p>\n<p>今天我要问你的问题是，<span class=\"orange\">Java程序运行在Docker等容器环境有哪些新问题？</span></p>\n<h2>典型回答</h2>\n<p>对于Java来说，Docker毕竟是一个较新的环境，例如，其内存、CPU等资源限制是通过CGroup（Control Group）实现的，早期的JDK版本（8u131之前）并不能识别这些限制，进而会导致一些基础问题：</p>\n<ul>\n<li>\n<p>如果未配置合适的JVM堆和元数据区、直接内存等参数，Java就有可能试图使用超过容器限制的内存，最终被容器OOM kill，或者自身发生OOM。</p>\n</li>\n<li>\n<p>错误判断了可获取的CPU资源，例如，Docker限制了CPU的核数，JVM就可能设置不合适的GC并行线程数等。</p>\n</li>\n</ul>\n<p>从应用打包、发布等角度出发，JDK自身就比较大，生成的镜像就更为臃肿，当我们的镜像非常多的时候，镜像的存储等开销就比较明显了。</p><!-- [[[read_end]]] -->\n<p>如果考虑到微服务、Serverless等新的架构和场景，Java自身的大小、内存占用、启动速度，都存在一定局限性，因为Java早期的优化大多是针对长时间运行的大型服务器端应用。</p>\n<h2>考点分析</h2>\n<p>今天的问题是个针对特定场景和知识点的问题，我给出的回答简单总结了目前业界实践中发现的一些问题。</p>\n<p>如果我是面试官，针对这种问题，如果你确实没有太多Java在Docker环境的使用经验，直接说不知道，也算是可以接受的，毕竟没有人能够掌握所有知识点嘛。</p>\n<p>但我们要清楚，有经验的面试官，一般不会以纯粹偏僻的知识点作为面试考察的目的，更多是考察思考问题的思路和解决问题的方法。所以，如果有基础的话，可以从操作系统、容器原理、JVM内部机制、软件开发实践等角度，展示系统性分析新问题、新场景的能力。毕竟，变化才是世界永远的主题，能够在新变化中找出共性与关键，是优秀工程师的必备能力。</p>\n<p>今天我会围绕下面几个方面展开：</p>\n<ul>\n<li>\n<p>面试官可能会进一步问到，有没有想过为什么类似Docker这种容器环境，会有点“欺负”Java？从JVM内部机制来说，问题出现在哪里？</p>\n</li>\n<li>\n<p>我注意到有种论调说“没人在容器环境用Java”，不去争论这个观点正确与否，我会从工程实践出发，梳理问题原因和相关解决方案，并探讨下新场景下的最佳实践。</p>\n</li>\n</ul>\n<h2>知识扩展</h2>\n<p>首先，我们先来搞清楚Java在容器环境的局限性来源，<strong>Docker到底有什么特别</strong>？</p>\n<p>虽然看起来Docker之类容器和虚拟机非常相似，例如，它也有自己的shell，能独立安装软件包，运行时与其他容器互不干扰。但是，如果深入分析你会发现，Docker并不是一种完全的<strong>虚拟化</strong>技术，而更是一种轻量级的<strong>隔离</strong>技术。<br />\n<img src=\"https://static001.geekbang.org/resource/image/a0/fb/a069a294d32d7778f3410192221358fb.png?wh=733*382\" alt=\"\" /></p>\n<p>上面的示意图，展示了Docker与虚拟机的区别。从技术角度，基于namespace，Docker为每个容器提供了单独的命名空间，对网络、PID、用户、IPC通信、文件系统挂载点等实现了隔离。对于CPU、内存、磁盘IO等计算资源，则是通过CGroup进行管理。如果你想了解更多Docker的细节，请参考相关<a href=\"https://medium.freecodecamp.org/a-beginner-friendly-introduction-to-containers-vms-and-docker-79a9e3e119b\">技术文档</a>。</p>\n<p>Docker仅在类似Linux内核之上实现了有限的隔离和虚拟化，并不是像传统虚拟化软件那样，独立运行一个新的操作系统。如果是虚拟化的操作系统，不管是Java还是其他程序，只要调用的是同一个系统API，都可以透明地获取所需的信息，基本不需要额外的兼容性改变。</p>\n<p>容器虽然省略了虚拟操作系统的开销，实现了轻量级的目标，但也带来了额外复杂性，它限制对于应用不是透明的，需要用户理解Docker的新行为。所以，有专家曾经说过，“幸运的是Docker没有完全隐藏底层信息，但是不幸的也是Docker没有隐藏底层信息！”</p>\n<p>对于Java平台来说，这些未隐藏的底层信息带来了很多意外的困难，主要体现在几个方面：</p>\n<p>第一，容器环境对于计算资源的管理方式是全新的，CGroup作为相对比较新的技术，历史版本的Java显然并不能自然地理解相应的资源限制。</p>\n<p>第二，namespace对于容器内的应用细节增加了一些微妙的差异，比如jcmd、jstack等工具会依赖于“/proc/<pid>/”下面提供的部分信息，但是Docker的设计改变了这部分信息的原有结构，我们需要对原有工具进行<a href=\"https://bugs.openjdk.java.net/browse/JDK-8179498\">修改</a>以适应这种变化。</p>\n<p><strong>从JVM运行机制的角度，为什么这些“沟通障碍”会导致OOM等问题呢？</strong></p>\n<p>你可以思考一下，这个问题实际是反映了JVM如何根据系统资源（内存、CPU等）情况，在启动时设置默认参数。</p>\n<p>这就是所谓的<a href=\"https://docs.oracle.com/javase/10/gctuning/ergonomics.htm#JSGCT-GUID-DB4CAE94-2041-4A16-90EC-6AE3D91EC1F1\">Ergonomics</a>机制，例如：</p>\n<ul>\n<li>\n<p>JVM会大概根据检测到的内存大小，设置最初启动时的堆大小为系统内存的1/64；并将堆最大值，设置为系统内存的1/4。</p>\n</li>\n<li>\n<p>而JVM检测到系统的CPU核数，则直接影响到了Parallel GC的并行线程数目和JIT complier线程数目，甚至是我们应用中ForkJoinPool等机制的并行等级。</p>\n</li>\n</ul>\n<p>这些默认参数，是根据通用场景选择的初始值。但是由于容器环境的差异，Java的判断很可能是基于错误信息而做出的。这就类似，我以为我住的是整栋别墅，实际上却只有一个房间是给我住的。</p>\n<p>更加严重的是，JVM的一些原有诊断或备用机制也会受到影响。为保证服务的可用性，一种常见的选择是依赖“-XX:OnOutOfMemoryError”功能，通过调用处理脚本的形式来做一些补救措施，比如自动重启服务等。但是，这种机制是基于fork实现的，当Java进程已经过度提交内存时，fork新的进程往往已经不可能正常运行了。</p>\n<p>根据前面的总结，似乎问题非常棘手，那我们在实践中，<strong>如何解决这些问题呢？</strong></p>\n<p>首先，如果你能够<strong>升级到最新的JDK版本</strong>，这个问题就迎刃而解了。</p>\n<ul>\n<li>针对这种情况，JDK 9中引入了一些实验性的参数，以方便Docker和Java“沟通”，例如针对内存限制，可以使用下面的参数设置：</li>\n</ul>\n<pre><code>-XX:+UnlockExperimentalVMOptions\n-XX:+UseCGroupMemoryLimitForHeap\n</code></pre>\n<p>注意，这两个参数是顺序敏感的，并且只支持Linux环境。而对于CPU核心数限定，Java已经被修正为可以正确理解“–cpuset-cpus”等设置，无需单独设置参数。</p>\n<ul>\n<li>如果你可以切换到JDK 10或者更新的版本，问题就更加简单了。Java对容器（Docker）的支持已经比较完善，默认就会自适应各种资源限制和实现差异。前面提到的实验性参数“UseCGroupMemoryLimitForHeap”已经被标记为废弃。</li>\n</ul>\n<p>与此同时，新增了参数用以明确指定CPU核心的数目。</p>\n<pre><code>-XX:ActiveProcessorCount=N\n</code></pre>\n<p>如果实践中发现有问题，也可以使用“-XX:-UseContainerSupport”，关闭Java的容器支持特性，这可以作为一种防御性机制，避免新特性破坏原有基础功能。当然，也欢迎你向OpenJDK社区反馈问题。</p>\n<ul>\n<li>幸运的是，JDK 9中的实验性改进已经被移植到Oracle JDK 8u131之中，你可以直接下载相应<a href=\"https://store.docker.com/images/oracle-serverjre-8\">镜像</a>，并配置“UseCGroupMemoryLimitForHeap”，后续很有可能还会进一步将JDK 10中相关的增强，应用到JDK 8最新的更新中。</li>\n</ul>\n<p>但是，如果我暂时只能使用老版本的JDK怎么办？</p>\n<p>我这里有几个建议：</p>\n<ul>\n<li>明确设置堆、元数据区等内存区域大小，保证Java进程的总大小可控。</li>\n</ul>\n<p>例如，我们可能在环境中，这样限制容器内存：</p>\n<pre><code>$ docker run -it --rm --name yourcontainer -p 8080:8080 -m 800M repo/your-java-container:openjdk\n</code></pre>\n<p>那么，就可以额外配置下面的环境变量，直接指定JVM堆大小。</p>\n<pre><code>-e JAVA_OPTIONS='-Xmx300m'\n</code></pre>\n<ul>\n<li>明确配置GC和JIT并行线程数目，以避免二者占用过多计算资源。</li>\n</ul>\n<pre><code>-XX:ParallelGCThreads\n-XX:CICompilerCount\n</code></pre>\n<p>除了我前面介绍的OOM等问题，在很多场景中还发现Java在Docker环境中，似乎会意外使用Swap。具体原因待查，但很有可能也是因为Ergonomics机制失效导致的，我建议配置下面参数，明确告知JVM系统内存限额。</p>\n<pre><code>-XX:MaxRAM=`cat /sys/fs/cgroup/memory/memory.limit_in_bytes`\n</code></pre>\n<p>也可以指定Docker运行参数，例如：</p>\n<pre><code>--memory-swappiness=0\n</code></pre>\n<p>这是受操作系统<a href=\"https://en.wikipedia.org/wiki/Swappiness\">Swappiness</a>机制影响，当内存消耗达到一定门限，操作系统会试图将不活跃的进程换出（Swap out），上面的参数有显式关闭Swap的作用。所以可以看到，Java在Docker中的使用，从操作系统、内核到JVM自身机制，需要综合运用我们所掌握的知识。</p>\n<p>回顾我在专栏第25讲JVM内存区域的介绍，JVM内存消耗远不止包括堆，很多时候仅仅设置Xmx是不够的，MaxRAM也有助于JVM合理分配其他内存区域。如果应用需要设置更多Java启动参数，但又不确定什么数值合理，可以试试一些社区提供的<a href=\"https://github.com/cloudfoundry/java-buildpack-memory-calculator\">工具</a>，但要注意通用工具的局限性。</p>\n<p>更进一步来说，对于容器镜像大小的问题，如果你使用的是JDK 9以后的版本，完全可以使用jlink工具定制最小依赖的Java运行环境，将JDK裁剪为几十M的大小，这样运行起来并不困难。</p>\n<p>今天我从Docker环境中Java可能出现的问题开始，分析了为什么容器环境对应用并不透明，以及这种偏差干扰了JVM的相关机制。最后，我从实践出发，介绍了主要问题的解决思路，希望对你在实际开发时有所帮助。</p>\n<h2>一课一练</h2>\n<p>关于今天我们讨论的题目你做到心中有数了吗？今天的思考题是，针对我提到的微服务和Serverless等场景Java表现出的不足，有哪些方法可以改善Java的表现？</p>\n<p>请你在留言区写写你对这个问题的思考，我会选出经过认真思考的留言，送给你一份学习奖励礼券，欢迎你与我一起讨论。</p>\n<p>你的朋友是不是也在准备面试呢？你可以“请朋友读”，把今天的题目分享给好友，或许你能帮到他。</p>\n<p></p>\n","comments":[{"had_liked":false,"id":17061,"user_name":"曲东方","can_delete":false,"product_type":"c1","uid":1177819,"ip_address":"","ucode":"6C3EA2F47A0B98","user_header":"https://static001.geekbang.org/account/avatar/00/11/f8/db/c4edf697.jpg","comment_is_top":false,"comment_ctime":1532401827,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"186215995555","product_id":100006701,"comment_content":"cpu问题<br><br>java 10之前： 手动设置jvm相关的选项，如：<br><br>    ParallelGCThreads<br>    ConcGCThreads<br>    G1ConcRefinementThreads<br>    CICompilerCount &#47; CICompilerCountPerCPU<br><br>java 10+: UseContainerSupport， 默认开启<br><br>------------------------------------------------------------------<br>mem问题<br><br>需关注这几个参数：<br><br>    Xmx: 1&#47;4 * 物理内存<br>    MaxDirectMemorySize<br>        Xmx 未设置，物理内存<br>        Xmx 设置了， Xmx - S0(1&#47;10 * Xmx) = 0.9 * Xmx # why? SurvivorRatio默认值8<br>    MaxPermSize: 默认64M<br>        [5.0+ 64 bit: 64M * 1.3 = 85M](http:&#47;&#47;www.oracle.com&#47;technetwork&#47;java&#47;javase&#47;tech&#47;vmoptions-jsp-140102.html)<br>    MaxMetaspaceSize: -1，无限制<br><br>--------------------------------<br>java5&#47;6&#47;7&#47;8u131-：务必设置上面提到的内存选项<br><br>  懒人可考虑，虽然也不准确<br>  java -Xmx`cat &#47;sys&#47;fs&#47;cgroup&#47;memory&#47;memory.limit_in_bytes`<br><br>java8u131+和java9+<br><br>\tjava 8u131+和java 9+-XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap<br>\tjava 8u191+ UseContainerSupport默认开启，backported；java 9暂未backport这个feature<br><br>java 10+: UseContainerSupport， 默认开启<br>------------------------------------------------------------------","like_count":44},{"had_liked":false,"id":105371,"user_name":"paopao","can_delete":false,"product_type":"c1","uid":1086724,"ip_address":"","ucode":"4D8247A5B57894","user_header":"https://static001.geekbang.org/account/avatar/00/10/95/04/dc153120.jpg","comment_is_top":false,"comment_ctime":1560990797,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"96050271309","product_id":100006701,"comment_content":"年前就遇到了文中Gc线程数超过k8s设置核心数，jvm直接挂掉，看这文章印象深刻","like_count":23},{"had_liked":false,"id":67274,"user_name":"Harry陈祥","can_delete":false,"product_type":"c1","uid":1016584,"ip_address":"","ucode":"EC44D97731116D","user_header":"https://static001.geekbang.org/account/avatar/00/0f/83/08/91caf5c1.jpg","comment_is_top":false,"comment_ctime":1550119667,"is_pvip":false,"discussion_count":3,"race_medal":0,"score":"48794759923","product_id":100006701,"comment_content":"老师您好。对于java8+docker的场景，docker的cpu 内存配额是可能动态变化和伸缩的， docker启动之前，不知道会被分配多大内存多少cpu，这种情况，应该怎么处理参数问题？<br>还有一个问题是：docker hub里面有java各个版本的镜像，这些镜像是否已经对文中提到的问题都做了适配？我们在构建docker的时候，直接from java镜像，而不再设置java options 会不会有问题？","like_count":12,"discussions":[{"author":{"id":1401685,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/oEicpuoN6vAdFuvIicibn6OsUIDIsMlWVkd21mcd53zjoBIXdiadZCXFkJDUUWPkHuheybQjxQLQnPuxRMpszXmQ4A/132","nickname":"Jovi","note":"","ucode":"E5D399A3E4F02A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":346057,"discussion_content":"老师并不卵你😂","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1611846568,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1110662,"avatar":"https://static001.geekbang.org/account/avatar/00/10/f2/86/d689f77e.jpg","nickname":"Hank_Yan","note":"","ucode":"86899B561C502B","race_medal":3,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":289179,"discussion_content":"+1","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1594018640,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1018620,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/8a/fc/d1dd57dd.jpg","nickname":"ipofss","note":"","ucode":"DE3061C9259F9E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":391451,"discussion_content":"同问","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1630470152,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":28500,"user_name":"sgl","can_delete":false,"product_type":"c1","uid":1252243,"ip_address":"","ucode":"D73875BA22954F","user_header":"https://static001.geekbang.org/account/avatar/00/13/1b/93/e3b44969.jpg","comment_is_top":false,"comment_ctime":1538097162,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"23012933642","product_id":100006701,"comment_content":"没有一种技术是万能的，需要理解技术的优点和不足，才能使用好它","like_count":5},{"had_liked":false,"id":19920,"user_name":"大卫李","can_delete":false,"product_type":"c1","uid":1012163,"ip_address":"","ucode":"CFEB849481BCB3","user_header":"https://static001.geekbang.org/account/avatar/00/0f/71/c3/09e22c1d.jpg","comment_is_top":false,"comment_ctime":1534163695,"is_pvip":false,"replies":[{"id":"7053","content":"可以试验一下，我在外面不好翻文档，但应该oracle jdk是有的，openjdk可以说是oracle jdk的子集<br>","user_name":"作者回复","user_name_real":"杨晓峰","uid":"1009360","ctime":1534319059,"ip_address":"","comment_id":19920,"utype":1}],"discussion_count":1,"race_medal":0,"score":"23009000175","product_id":100006701,"comment_content":"MAXRAM这个参数好像是openjdk的，oracle jdk文档里没有找到","like_count":5,"discussions":[{"author":{"id":1009360,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/66/d0/6541f1d5.jpg","nickname":"杨晓峰","note":"","ucode":"2BF255467A978F","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":422021,"discussion_content":"可以试验一下，我在外面不好翻文档，但应该oracle jdk是有的，openjdk可以说是oracle jdk的子集\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1534319059,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":18844,"user_name":"正是那朵玫瑰","can_delete":false,"product_type":"c1","uid":1048261,"ip_address":"","ucode":"73D630B654573F","user_header":"https://static001.geekbang.org/account/avatar/00/0f/fe/c5/3467cf94.jpg","comment_is_top":false,"comment_ctime":1533598931,"is_pvip":false,"replies":[{"id":"6582","content":"有排查其他进程吗？","user_name":"作者回复","user_name_real":"杨晓峰","uid":"1009360","ctime":1533628444,"ip_address":"","comment_id":18844,"utype":1}],"discussion_count":3,"race_medal":0,"score":"23008435411","product_id":100006701,"comment_content":"老师好，再描述下我们的场景，我们在线上环境的参数是：xmx1g，永久带256m，docker限制2.2g，其他并没有设置，我们也怀疑是不是堆外内存有问题，于是在准生产环境修改了参数进行测试，设置了MaxRAM1g，堆外故意设小128m，然后进行测试，用jconsole进行监控，我们观察到docker容器的内存不断飙升，只升不降，而jconsole监控的却很正常，young gc很频繁，但是full gc一次没有，当docker内存接近设置的2.2g时，java进程就基本要被kill掉了，没有任何内存溢出的异常！","like_count":5,"discussions":[{"author":{"id":1009360,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/66/d0/6541f1d5.jpg","nickname":"杨晓峰","note":"","ucode":"2BF255467A978F","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":421662,"discussion_content":"有排查其他进程吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1533628444,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1052718,"avatar":"https://static001.geekbang.org/account/avatar/00/10/10/2e/1a0e7c59.jpg","nickname":"熊孩子马洛伊","note":"","ucode":"C907D62052FB4E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":178649,"discussion_content":"看看docker内的哪些线程调用占用了大量内存","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582185276,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1033066,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/c3/6a/3272e095.jpg","nickname":"李春恒","note":"","ucode":"F2DCA19EC66DC1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":117648,"discussion_content":"可以尝试用dmesg 看下oom killer 了哪个进程。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578132939,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":15815,"user_name":"卡斯瓦德","can_delete":false,"product_type":"c1","uid":1011332,"ip_address":"","ucode":"E944E5BC507D5C","user_header":"https://static001.geekbang.org/account/avatar/00/0f/6e/84/45a909a6.jpg","comment_is_top":false,"comment_ctime":1531536406,"is_pvip":false,"replies":[{"id":"5467","content":"1，法律问题我不知道不评价。个人建议看清事实，莫被人pr；2，是，出问题是极端情况，大部分场景并不复杂；3，具体我只注意到有人反应问题，但没有细节；回到一些常见实践，例如用G1，如果吞吐量不达标，通常调优堆大小设置为尽量大但又swap不发生，不然会影响吞吐量；4，很感谢提供这个案例，了解具体问题吗","user_name":"作者回复","user_name_real":"杨晓峰","uid":"1009360","ctime":1531571656,"ip_address":"","comment_id":15815,"utype":1}],"discussion_count":1,"race_medal":0,"score":"23006372886","product_id":100006701,"comment_content":"1.老师听说docker里面只能用open-jdk使用oracle-jdk是有法律风险的，现在还是这样么？            2.jdk8设置了-xmx值小于docker设定的值就好，我们使用了docker-compose貌似这个只有设定内存使用上限，但是不超过这个值一般没问题，3.至于swap没有遇见过，能能讲何时会出现么，好预警下。                                                                  4.说个docker遇到相关问题就是jdbc驱动，貌似mysql5.14以前的驱动对docker不友好，如果select count（*） from table 这个值超过5000就会拿不到结果，而实际mysql-server端已经执行完毕并且sleep了","like_count":5,"discussions":[{"author":{"id":1009360,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/66/d0/6541f1d5.jpg","nickname":"杨晓峰","note":"","ucode":"2BF255467A978F","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":420564,"discussion_content":"1，法律问题我不知道不评价。个人建议看清事实，莫被人pr；2，是，出问题是极端情况，大部分场景并不复杂；3，具体我只注意到有人反应问题，但没有细节；回到一些常见实践，例如用G1，如果吞吐量不达标，通常调优堆大小设置为尽量大但又swap不发生，不然会影响吞吐量；4，很感谢提供这个案例，了解具体问题吗","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1531571656,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":272042,"user_name":"随心而至","can_delete":false,"product_type":"c1","uid":1097836,"ip_address":"","ucode":"31866865255101","user_header":"https://static001.geekbang.org/account/avatar/00/10/c0/6c/29be1864.jpg","comment_is_top":false,"comment_ctime":1609916828,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10199851420","product_id":100006701,"comment_content":"本科毕业两年了，打了两年多的计算机科学的基础，后端这些都是通用的，编程语言真的只是一个工具，容器相关的原理还是需要学习，要不然玩不转。","like_count":3},{"had_liked":false,"id":18976,"user_name":"正是那朵玫瑰","can_delete":false,"product_type":"c1","uid":1048261,"ip_address":"","ucode":"73D630B654573F","user_header":"https://static001.geekbang.org/account/avatar/00/0f/fe/c5/3467cf94.jpg","comment_is_top":false,"comment_ctime":1533628812,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10123563404","product_id":100006701,"comment_content":"目前容器只跑了java和consul的client进程，consul占的内存很小，java进程被kill掉后，consul进程还在，我们的java进程被kill掉都是在没有流量进来的时候，不过您说的使用swap区的我没有设置，不知道有没有什么影响？","like_count":2},{"had_liked":false,"id":18716,"user_name":"正是那朵玫瑰","can_delete":false,"product_type":"c1","uid":1048261,"ip_address":"","ucode":"73D630B654573F","user_header":"https://static001.geekbang.org/account/avatar/00/0f/fe/c5/3467cf94.jpg","comment_is_top":false,"comment_ctime":1533555901,"is_pvip":false,"replies":[{"id":"6555","content":"容器内存限制，java xmx MaxDirectMemorySize之类都是多大？我们说过内存不只是堆，还有一些在堆外，需要留点儿余地；kill的时间点附近有收集什么信息没有","user_name":"作者回复","user_name_real":"杨晓峰","uid":"1009360","ctime":1533566840,"ip_address":"","comment_id":18716,"utype":1}],"discussion_count":2,"race_medal":0,"score":"10123490493","product_id":100006701,"comment_content":"老师，有个问题想咨询下，我们现在迁移到docker环境，使用的还是java7，您说的那些参数我们都有设置，比如docker容器内存大小，最大堆内存，MaxRAM等，现在的问题是java应用在docker上跑一段时间就会被kill掉，我们监控内存情况是docker容器内存使用几乎被占满，但是jvm的内存使用却很正常，不知道为什么？老师能否指点下思路？","like_count":3,"discussions":[{"author":{"id":1009360,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/66/d0/6541f1d5.jpg","nickname":"杨晓峰","note":"","ucode":"2BF255467A978F","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":421639,"discussion_content":"容器内存限制，java xmx MaxDirectMemorySize之类都是多大？我们说过内存不只是堆，还有一些在堆外，需要留点儿余地；kill的时间点附近有收集什么信息没有","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1533566840,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2324073,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/ziaicqaAJT18CS3xlPgGmLyicMkYiarDhSR9I79DnIjxpnETjOoHe9DM7wmC0icdw1XzwPDKF4TEFuqRicqSgyFtTtBQ/132","nickname":"Geek_c57a51","note":"","ucode":"843AE20C5610BD","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":344874,"discussion_content":"dmesg -T 看下log","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1611597361,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":214694,"user_name":"Shy","can_delete":false,"product_type":"c1","uid":1364424,"ip_address":"","ucode":"97EC8ACA32F129","user_header":"https://static001.geekbang.org/account/avatar/00/14/d1/c8/bf71ac51.jpg","comment_is_top":false,"comment_ctime":1588783013,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"5883750309","product_id":100006701,"comment_content":"老师，我在容器中部署Java应用时遇到一个问题，应用中存在一些jar冲突，但在物理机上能正常启动，放到容器中必定会启动失败，这是怎么回事？","like_count":1},{"had_liked":false,"id":335140,"user_name":"樱小路依然","can_delete":false,"product_type":"c1","uid":1269957,"ip_address":"","ucode":"DBA9FF68015FE5","user_header":"https://static001.geekbang.org/account/avatar/00/13/60/c5/69286d58.jpg","comment_is_top":false,"comment_ctime":1645353193,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1645353193","product_id":100006701,"comment_content":"时隔三年多再次看这个专栏，又有不一样的感受，当初对docker根本没什么概念，现在公司内已经全部容器化了，但是对服务在容器上跑会出现这些问题竟然没什么印象。回过头看，可能是因为服务启动脚本早就配置好了具体参数而我也没有多注意，学习到了，谢谢老师","like_count":1},{"had_liked":false,"id":285075,"user_name":"λ-Drive","can_delete":false,"product_type":"c1","uid":1007176,"ip_address":"","ucode":"E6A91B142BF7E1","user_header":"https://static001.geekbang.org/account/avatar/00/0f/5e/48/4ad04a37.jpg","comment_is_top":false,"comment_ctime":1616599724,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1616599724","product_id":100006701,"comment_content":"老师，docker会过度使用宿主机cpu的资源吗？","like_count":0},{"had_liked":false,"id":65449,"user_name":"苦行僧","can_delete":false,"product_type":"c1","uid":1055334,"ip_address":"","ucode":"726024A9A9CF44","user_header":"https://static001.geekbang.org/account/avatar/00/10/1a/66/2d9db9ed.jpg","comment_is_top":false,"comment_ctime":1549364976,"is_pvip":false,"replies":[{"id":"23350","content":"嗯呢","user_name":"作者回复","user_name_real":"杨晓峰","uid":"1009360","ctime":1549818625,"ip_address":"","comment_id":65449,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1549364976","product_id":100006701,"comment_content":"目前在实际工作中还没有使用过docker","like_count":1,"discussions":[{"author":{"id":1009360,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/66/d0/6541f1d5.jpg","nickname":"杨晓峰","note":"","ucode":"2BF255467A978F","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":438455,"discussion_content":"嗯呢","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1549818625,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]}]}