{"id":671807,"title":"14｜数据清洗：挑战大量噪音的需求","content":"<p>你好，我是键盘，我们继续驯服 GPT。</p><p>数据的处理通常有两种类型，一种是上节课的“重建秩序”，所有的数据都是有用的，而且让你在有序的状态下可以轻松地填充更多内容。另一种，就是这节课我们要讲的典型情况“沙里淘金”。什么意思呢？就是说交给GPT处理的数据里，只有一部分是有用的，其他的全是干扰。我们把这种数据叫做脏数据（Dirty Read），里面的<strong>干扰项和多余的信息，就是噪音。</strong></p><p><img src=\"https://static001.geekbang.org/resource/image/4b/dc/4b2cbbbca03ee071bea4291f614780dc.png?wh=2284x648\" alt=\"\"></p><p>我会结合一个<strong>可调整多个参数的智能配图方案</strong>来讲解实现过程，搞定它，你的所有配图需求就不用再通过人力搜索了。另外，区别于之前分享过的Unsplash接口，这个新接口获取到的可商用资源，格局又打开了“亿”点，除了照片题材，它还支持插画、矢量图、视频等等。</p><pre><code class=\"language-markdown\">#温习 Unsplash 接口：\n![](https://source.unsplash.com/1600x900/?&lt;关键词&gt;)\n</code></pre><h2><strong>人人都能用的“AI清洗法”</strong></h2><p>我们的整活目标是让包含众多图片链接的数据流到自己手里，从中自动洗出想要的图片。这个思路同样适用于其他具备物料需求的场景，比如获取某段时间的一类数据、文章配图、宣传材料的视频和BGM等等。</p><p>实现原理比较简单，而且通用。以“清洗图片”为例，我简单描述下。</p><!-- [[[read_end]]] --><ol>\n<li>我们自己手动获取某个可商用图片网站的API key（以下用“私钥”指代）。结合我们想要的目标图片细节要求，让GPT将私钥和参数组装成“请求链接”。</li>\n<li>在浏览器中输入请求链接，如果你有ChatGPT Plus，也可以用联网插件直接处理，得到一个用来初筛目标范围的JSON文件。</li>\n<li>让GPT从JSON文件中提取出合适的图片链接。</li>\n<li>让GPT将其输出为图片或其他资源。</li>\n</ol><p><img src=\"https://static001.geekbang.org/resource/image/1d/ff/1de1c37e088f1a5cf04cd648b7daf8ff.png?wh=2284x648\" alt=\"\" title=\"实现流程（API 即接口，key 即私钥，最后将链接解析为图片的处理一般叫“渲染”）\"></p><p>这节课的案例，我选取了比较贴合需求的图片网站 <a href=\"https://pixabay.com/\">Pixabay</a> 来做方案的接口。没有技术背景的朋友可以将“接口”简单理解为标准化管道，用管道来连接不同的服务，数据就能流通起来。</p><p>正式开始之前，再提示你一下准备工作。</p><ol>\n<li><strong>注册一个 Pixabay 账户：</strong>用来<a href=\"https://pixabay.com/api/docs/\">获取API key</a>，<strong>使用它来组成“请求链接”，</strong>获取目标JSON文件。</li>\n</ol><p><img src=\"https://static001.geekbang.org/resource/image/2a/e4/2a4e05784f741629c9eb76fbf46275e4.png?wh=1920x148\" alt=\"\" title=\"绿框内就是私钥，复制下来备用\"></p><ol start=\"2\">\n<li><strong>推荐使用GPT-4和WebPilot插件：</strong>因为GPT模型无法直接联网，需要搭配联网插件来处理接口。假如你是ChatGPT Plus会员，使用这个组合的效果最好。</li>\n</ol><p><strong>假如你的手里只有ChatGPT，也可以兼容。</strong>只要通过一些参数处理手段，比如开启“编辑精选”精细筛选题材或尺寸等等，让目标JSON大幅缩短而且变得规整好读，然后手动发给ChatGPT来提取，让ChatGPT写一个本地的批处理提取脚本，也是没问题的。</p><p>准备完毕，我们要开始整活了。</p><h3><strong>✦ 获取数据：设计自己的接口</strong></h3><p>刚刚我们说了用Pixabay的接口来获取图片。具体怎么做呢？先看看官方接口文档，了解这个接口都能干什么。假如你对英语阅读有一定的困难，使用<a href=\"https://time.geekbang.org/column/article/671109\">智学三件套</a>中分享的沉浸式翻译来做辅助即可。</p><p>Pixabay给出的参数（Parameters）总共有17个， <code>参数=什么</code> <strong>这个结构<strong><strong>的作用就是告诉接口</strong></strong>“<strong><strong>你要什么细节</strong></strong>”</strong>，参数里面主要包含两类。</p><ul>\n<li>字符串 <code>str=</code> ，比如 <code>q=read</code> 表示“搜索关键词read相关的图片”。</li>\n<li>开关 <code>bool=true/false</code> ，比如 editors_choice=true 表示“打开编辑精选”。（<code>=true</code> 就是开启的意思，后面同理）</li>\n</ul><p>我从17个参数里挑出了重点影响结果质量和处理效率的部分，下面的图稿里也提供了注解，供你参考。</p><p><img src=\"https://static001.geekbang.org/resource/image/a0/46/a0a537e1e45b67ac76a682b04b895b46.png?wh=1920x1431\" alt=\"\" title=\"Pixabay Images API\"></p><p>参数的使用也非常简单，在 <code>http://pixabay.com/api/</code>  后面加上参数是什么，还有状态开（ture）或关（false）就可以了，没有编程什么事。</p><p>之后你会得到下面这个基础的请求链接 。<strong>使用时记得替换</strong> <code>你的私钥</code> <strong>和目标关键词</strong> <code>keywords</code>  <strong>，这样它才是完整的。</strong></p><pre><code class=\"language-markdown\">https://pixabay.com/api/?key=`你的私钥`&amp;q=`keywords`&amp;image_type=`type`\n</code></pre><p>然后把完整的请求链接贴到浏览器地址栏中，现在我们要来面对脏兮兮的JSON文件了。这里可以先打住，思考一下，如果这个JSON可以变简单，处理不就更轻松了？ChatGPT无法接收冗长信息的问题也将迎刃而解。</p><h3><strong>✦ 清洗数据：智取，不硬刚</strong></h3><p>想要让“清洗”变简单，就一定要掌握2个重点参数。</p><ol>\n<li>编辑精选。是的，让赛博编辑为你打工，自动挑出质量更好的结果。对应代码中的 <code>editors_choice=true</code>。</li>\n<li>干得“漂亮”，<code>pretty=true</code>。让输出的JSON文件变整洁，既方便GPT更快地计算，还能大幅节省Token的用量，当你使用GPT API来做方案的时候，节省Token就等于省钱。所以，务必带上。</li>\n</ol><p>组合起来，就能得到一个<strong>用于获取目标JSON的“漂亮请求”</strong>。</p><pre><code class=\"language-markdown\">https://pixabay.com/api/?key=`填入你的key`&amp;q=`keywords`&amp;image_type=`type`&amp;editors_choice=true&amp;pretty=true\n</code></pre><h3><strong>✦ 手动测试</strong></h3><p>接下来不要急匆匆开始写prompt，<strong>玩转GPT的正确姿势永远是一步一步思考</strong>。我们先在浏览器中粘贴上面的“漂亮请求”，观察能不能手动“洗”出图片。</p><p><img src=\"https://static001.geekbang.org/resource/image/77/db/779c27ba4d6cb1569e3734ac8bea44db.png?wh=1920x543\" alt=\"\" title=\"手动洗图（可行但低效）\"></p><p>图稿的左侧是没有开启 <code>pretty</code> 的后果，肉眼可见的“脏”。在GPT中流转这样的材料真的脑壳疼，你疼，AI也疼。中间开启 <code>pretty</code> 后瞬间“漂亮”，官方命名诚不我欺。这里面可以清晰地找到一个标签为 <code>largeImageURL</code> 的链接。全场最靓的高清大图，就是你了！我们粘贴链接打开，成功。</p><p>通过这个验证，我们就可以<strong>设计一行告诉GPT提取配图，渲染到对话框的Markdown模版</strong>。</p><pre><code class=\"language-markdown\">![配图](the first \"largeImageURL\" in JSON)\n</code></pre><p>上面所有设计好的参数和私钥也准备交给GPT，让它来智能组装。</p><h3>✦ 设计prompt</h3><p>只要掌握了接口的设计逻辑，所有具备智能搭配属性的需求都能用，prompt同理。我会聚焦最核心的提取部分，你按需延展即可。这种执行目标直接了当的情况，我定义为“直接提问型”，不需要什么角色扮演，直说需求就好。</p><center>\n💬 直接提问型 prompt 框架\n</center><pre><code class=\"language-markdown\">请&lt;做什么&gt;:\n步骤：\n模版：\n说明：\n请一步一步思考 #标配\n&lt;指令&gt;\n</code></pre><p><strong>这个prompt需要解决5个核心问题</strong><strong>。</strong></p><ol>\n<li>提供私钥，让GPT <strong>自动拼合</strong>出获取JSON的“漂亮请求”，然后<strong>通过联网插件来处理这个请求。</strong>这里需要清理一个广泛的误区，不是说更高级的GPT-4就能联网，去处理网络请求，像Bard这种联网模型才能够直接处理网络请求。要记得，联网插件才是连接的核心。</li>\n</ol><pre><code class=\"language-markdown\">`API`: 🔑 填写你的key，注意数据安全，私钥不可公布和分享。\n</code></pre><ol start=\"2\">\n<li>获取图片时你可能需要多个关键词，API的 <code>q</code> 参数里用 <code>关键词 + 关键词</code> 这样的格式来支持。用单样本示例（One-Shot Prompt）来教给GPT即可。</li>\n</ol><pre><code class=\"language-markdown\">多个关键词的情况，使用形式：keyword A+keyword B+…+keyword N\n</code></pre><ol start=\"3\">\n<li>指明目标题材。你想要照片、插画还是矢量图？用综合人设用的方法，多设计一个开关来切换就可以。</li>\n</ol><pre><code class=\"language-markdown\">`type`: all(Default),&nbsp; photo, illustration, vector\n</code></pre><ol start=\"4\">\n<li>告诉GPT怎么提取目标图片。使用前面提到的Markdown配图代码就可以，这里我还要求默认给目标图片配上和关键词相关的一句名人名言。</li>\n</ol><pre><code class=\"language-markdown\">![配图](the first \"largeImageURL\" in JSON)\n输出关键词相关的名人警句，使用Markdown引用格式渲染。不超过40个字。\n</code></pre><ol start=\"5\">\n<li>使用“判断技巧”，假如用户没有插件的“通行证”，那么只输出“漂亮请求”代码，用户通过请求拿到的数据发给GPT也能实现。</li>\n</ol><pre><code class=\"language-markdown\">插件判断—&gt;N：只执行到步骤2，等待用户输入JSON或者目标链接，再继续。Y：执行全流程。\n\n#由于GPT自己无法判断插件情况，设计一个对应的开关指令来应对：\n/plugin：Y=开启插件（默认），N=无插件\n</code></pre><p>整合起来，你会得到一个pretty prompt。如果你不想频繁地修改prompt，记住一个永不过时的指导原则：更多思考，更少设计。</p><p><img src=\"https://static001.geekbang.org/resource/image/e9/34/e9yy4a472c5affc702d660a9a8898034.jpg?wh=2284x648\" alt=\"\"></p><center>\n💬 洗图 prompt（注意替换私钥和keywords）\n</center><pre><code class=\"language-markdown\">请根据我输入的关键词来配图：\n\n步骤：\n1、将关键词翻译为英语`keywords`（此处不使用插件）。多个关键词的情况，使用形式：keyword A+keyword B+…+keyword N\n2、拼合成API链接，用代码块输出：\nhttps://pixabay.com/api/?key=`API`&amp;q=`keywords`&amp;image_type=`type`&amp;editors_choice=true&amp;pretty=true\n3、插件判断—&gt;N：只执行到步骤2，等待用户输入JSON或者目标链接，再继续。Y：执行全流程。\n4、将接口返回的JSON中的目标图片提取出来，用Markdown渲染，不要用代码块回复。\n5、输出模版：\n## 关键词\n![配图](the first \"largeImageURL\" in JSON)\n输出关键词相关的名人名言，使用Markdown引用格式渲染。不超过40个字。示例：\n&gt; “伸手摘星，即便一无所获，也不至于满手污泥”—李奥贝纳（Leo Burnett）\n\n说明：\n`API`: 🔑 替换你的key\n`type`: all(Default),&nbsp; photo, illustration, vector\n/plugin：Y=开启插件（默认），N=无插件\n\n—\n请一步一步思考。\n\n/plugin= N，`关键词`=阅读\n</code></pre><p>这里面有2个实用小技巧。</p><ol>\n<li>步骤1的翻译提醒“此处不使用插件”，用来<strong>告诉模型“好钢用在刀刃上”</strong>，不是所有步骤都需要联网处理。</li>\n<li><strong>尽可能利用AI的优势</strong>，我用Markdown引用格式示例后面加 <code>&gt; 搭配名人名言</code> 的方式，让GPT自动去填充信息，这样结果就不是单调的图片，而是可以灵活组装的材料。</li>\n</ol><h2>躺着收图</h2><p>现在我们只要提出关键词需求就可以自动获取目标图片了，来看看实际跑机怎么做。</p><h3>✦ 跑机任务1：兼容ChatGPT</h3><p>先来解决比较艰苦的“村里没联网”的情况，对应的“洗图prompt”结尾的指令是：</p><pre><code class=\"language-markdown\">/plugin= N，`关键词`=阅读\n</code></pre><center>\n🤖️ ChatGPT\n</center><p><img src=\"https://static001.geekbang.org/resource/image/14/2f/14683523658fa5756f63b8e698a11e2f.png?wh=4266x2043\" alt=\"\" title=\"ChatGPT 清洗关于阅读的图片\"></p><p>判断成功执行，复制“API链接”到浏览器地址栏，可以看到JSON数据。</p><ul>\n<li><strong>第一种情况：贴入单个目标</strong></li>\n</ul><p>由于我们开启了编辑精选和pretty参数，初筛结果干净多了，打开就能靠肉眼快速定位到“阅读”的目标大图链接，将它交给ChatGPT直接渲染出来，搞定。</p><ul>\n<li><strong>第二种情况：贴入JSON，智取多个结果</strong></li>\n</ul><p>我们试试组合 <code>关键词 A + 关键词 B</code> ，上面的截图里我的关键词是“阅读+光线”，结果精准匹配，没有问题。</p><p>再试一下JSON片段的提取方式。注意，ChatGPT的字数局限依然存在，超过1200汉字的片段，要么分拆输入，要么采用接下来我分享的技巧：截取一个字数不超标的片段就好，不用精确计算，大概1000字的长度就不会有太多段落。</p><p>根据观察，目标JSON文件里面有两个 <code>_640.jpg</code> 结尾的链接，对应2张中等精度的图片，我们让ChatGPT根据这个线索自动从贴入的JSON片段中提取出来，同样顺利搞定。</p><p>假如你的配图场景是手机壁纸，或者其他不讲究图片方向的情况，以上输出就可以满足你的需求。但是在<strong>日常工作和写文章的情景中，我们使用<strong><strong>更多的是</strong></strong>横版图片</strong>，根据官方文档提供的参数，在“漂亮请求”中加入 <code>&amp;orientation=horizon</code> （表示构图方向为水平）就可以解决，当然你也可以在迭代沟通中补充参数的改动需求。</p><p>最后再试试切换题材？改变 <code>type</code> 参数，让它变成插画（illustration），稳！</p><p><img src=\"https://static001.geekbang.org/resource/image/4f/93/4f3cf3d9518539f42b1d3eeb90ba4893.png?wh=2144x934\" alt=\"\" title=\"17 个参数，成百上千的可能\"></p><h3><strong>✦ 跑机任务2：联网，效率起飞</strong></h3><p>现在我们证实了“孤岛模型”都能轻松解决任务，GPT-4 “接上网线”不就跟喝水一样简单了？试试就知道。</p><p>拿掉指令中的 <code>/plugin= N</code> ，在prompt说明中等效于 <code>/plugin= Y</code> ，也就是默认视为用户开启了插件。使用关键词“水母”来验收。</p><p><img src=\"https://static001.geekbang.org/resource/image/c1/6e/c15e0d6fd0a301ca91f0141a1042da6e.png?wh=1940x760\" alt=\"\" title=\"GPT-4 x WebPilot 自动洗图（水母）\"></p><p>全流程提取自动化完美解决，脏活累活都让GPT-4包了。展开WebPilot的执行细节，你看这滚动条占比就能感受到AI都承受了什么。不过这都和我们没关系了，后续输入关键词，躺着拿图就行了。</p><p><img src=\"https://static001.geekbang.org/resource/image/30/ec/30da0f6fd00718bc978e7cfb337f87ec.png?wh=761x680\" alt=\"\" title=\"最后还是 GPT-4 默默扛下了所有\"></p><p>好了，关闭箭头，让我们从此告别让人“眼前一黑”的数据清洗工作。</p><h3><strong>✦ 拓展玩法</strong></h3><p>假如你有一系列的关键词，还可以让 GPT <a href=\"https://time.geekbang.org/column/article/671109\">整理</a>成一份完整的JSON文件，或者干脆就用一个符号，比如“，”做隔断，接着贴给GPT，设计暗号 “1” 来触发分段提取。这样的好处是省去了后续的重复输入。只要第一次调通了，<strong>一次性生成几个月的配图材料<strong><strong>绝对</strong></strong>轻而易举。</strong></p><p>假如你想配可商用的视频呢？安排！这里选取关键词 <code>light</code> 来做验收。</p><p>同样从官方API文档中可以得到视频的请求链接，多加一节 <code>video/</code>，其他的可以原封不动。</p><pre><code class=\"language-markdown\">https://pixabay.com/api/videos/\n?key=`key`&amp;q=`keywords`&amp;video_type=`type`&amp;editors_choice=true&amp;pretty=true\n</code></pre><p>其中，视频的 <code>type</code> 支持默认的 “all”，另外还有影视 “film”，动画 “animation”，按需定义就好。</p><center>\n🤖️ ChatGPT\n</center><p><img src=\"https://static001.geekbang.org/resource/image/31/1d/31eb9dc1a7085cd56884e3b28d40471d.png?wh=3363x942\" alt=\"\"><br>\n输出的素材传送门：<a href=\"https://pixabay.com/videos/world-globe-international-global-1992/\">在创造的过程中，神说：“要有光”，就有了光。</a></p><p>以前，即使已经掌握了一个可商用的素材平台，普通人获取这些素材的方式都离不开重复且线性的人力劳作，而现在AI就是要用来干掉这些毫无意义的工作，让我们腾出精力去应对高价值的事项。</p><p><img src=\"https://static001.geekbang.org/resource/image/37/ec/37ec4895bdb8eb4855a134314b9a10ec.png?wh=2072x1198\" alt=\"\" title=\"毫无意义的重复劳作\"></p><p>最后我想和你分享的是，<strong>JSON可以提取的资源远远不止链接</strong>，只要是清洗数据，都可以用这节课的方法，比如下面的法律文书清洗。</p><p><img src=\"https://static001.geekbang.org/resource/image/3c/bd/3c10f12c609a1b4560a54c03byy0c8bd.png?wh=9220x3800\" alt=\"\" title=\"清洗法律文书\"></p><p>这是我在3月份做的一个真实需求。我将爬取的法律文书数据交给GPT，从一大段凌乱的JSON中提取出一个规整的信息表格，对其进行总结，提炼出规律和思考。彼时我刚入门，还没有学习prompt工程，但是ChatGPT和GPT-4都跑通了，也就成为本次分享的星火，保留至今。</p><h2>小黑板</h2><p>现在我们已经讲齐了日常数据整理的两种情况，重建秩序和沙里淘金。这节课主要分享的是后者，通过寻找一个合适的接口获取包含大量数据的JSON文件，再通过GPT自动提取的方式，将目标物料“清洗”出来。掌握了这样的方法，清洗其他类型的数据也就有套路可循了。</p><p>设计GPT解决方案的过程，我<strong>建议向上兼容和向下兼容都要考虑，真正实现人人能用。</strong>普通用户靠ChatGPT能解决问题，高级用户使用联网插件让实现更高效。</p><p>接口其实离我们并不远，<a href=\"https://platform.openai.com/account/api-keys\">OpenAI</a> 也提供了API keys，无论是接入GPT来打造自己的AI，还是体验各种第三方服务，比如备受赞誉的OpenAI Translator，我们都需要这把私钥。以前还需要研发同学帮忙才能通过网络爬虫的方式获取到宝贵的数据，如今，<strong>人人都可以用AI来取代低价值的重复工作，做更有价值的事情，做更好的决策。</strong></p><p><img src=\"https://static001.geekbang.org/resource/image/e1/d4/e1e2eb7931ddf18542758e6fbe29bdd4.png?wh=1550x934\" alt=\"\" title=\"OpenAI 的 API keys\"></p><p>最后我们总结一下，通过设计一个可调整多个参数的智能配图方案，我们都掌握了哪些方法呢？</p><ol>\n<li>设计之前，一定要阅读官方接口文档，少走弯路。</li>\n<li>智取结果，用参数来初筛JSON，使计算和提取变简单。</li>\n<li>量身定制参数，获得千变万化的智能结果。</li>\n<li>先手动验证再攻破自动方案，稳扎稳打。</li>\n<li>更多思考，更少设计，减少来回折腾。</li>\n<li>让GPT自动拼合链接。</li>\n<li>设计一个插件状态开关，指导GPT区分处理。既能向上支持联网，也能向下兼容孤岛模型。</li>\n<li>好钢用在刀刃上，不是所有步骤都需要插件。</li>\n<li>设计方案时，想方设法利用AI的优势，打造灵活、高效的组合。</li>\n</ol><p>通过亲自实践来吃透方法，我们就可以告别让人“眼前一黑”的数据清洗工作，躺收结果。但其实，哪有什么岁月静好，不过是通过思考，把负重前行转移给AI罢了。</p><p><strong>要点：</strong><br>\n<img src=\"https://static001.geekbang.org/resource/image/e7/43/e70918349fc6ecfffc13ee1d2c8b6d43.png?wh=2284x1440\" alt=\"\"></p><h2>踏浪扬帆</h2><p>小伙伴们自己的清洗需求肯定不少，有些只是没有找到合适的AI切入点。关于清洗其他类型的数据你有什么想法吗？尽量试试套用这节课的方法而不是照搬prompt模版，设计一套自己的自动化清洗方案。</p><p>期待在评论区看到你的思考或感受分享，也欢迎你将这节课分享给感兴趣的朋友们，戳此加入<a href=\"http://jinshuju.net/f/oI1KKM\">课程交流群</a>，我们下节课再会。</p>","neighbors":{"left":{"article_title":"13 | 材料整理：从混乱到秩序，以说代做","id":671109},"right":{"article_title":"15｜数据分析：数据洞察和可视化，0开发基础也能打","id":672291}},"comments":[{"had_liked":false,"id":377274,"user_name":"peter","can_delete":false,"product_type":"c1","uid":1058183,"ip_address":"北京","ucode":"261C3FC001DE2D","user_header":"https://static001.geekbang.org/account/avatar/00/10/25/87/f3a69d1b.jpg","comment_is_top":false,"comment_ctime":1688220293,"is_pvip":false,"replies":[{"id":137487,"content":"两个问题都涉及基础课程中的Markdown。\nQ1：核心是用Markdown的图片链接来显示，有很多图片接口可以挖掘，比如Unsplash\n![接口配图](https:&#47;&#47;source.unsplash.com&#47;1600x900&#47;?&lt;关键词&gt;) \n关键词=你的图片关键词\n\nQ2：像## 二级标题这种是Markdown的规范。\n像&lt;&gt;这种用于隔断，帮助GPT分清描述和指令的，属于xml标签，还有很多非常灵活的方式，可以压缩表达，但不是“规定”\n比如：\n你可以用 Y 表示肯定。\n用—&gt;表示流程的下一步\n用表示Apple\n用#备注 表示备注\n\n多试试，感受一下。","user_name":"作者回复","user_name_real":"编辑","uid":3588216,"ctime":1688236110,"ip_address":"广东","comment_id":377274,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100550701,"comment_content":"Q1：我让GPT给出一个产品的图片，GPT回答说“我是文本模型，无法提高图片”。这个问题怎么解决？老师的课里面好像能产生很多图片，怎么做到的？\nQ2：课程中，老师用到了一些符号，比如： ##， &#47; 等，好像GPT可以把这些符号当做编程中的规则一样执行。请问：这些符号是GPT本身规定的吗？还是GPT自己实时理解的？\n","like_count":2,"discussions":[{"author":{"id":3588216,"avatar":"https://static001.geekbang.org/account/avatar/00/36/c0/78/15553da1.jpg","nickname":"ᴶᴱᴿ","note":"","ucode":"4E0DADC47389DF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":622413,"discussion_content":"两个问题都涉及基础课程中的Markdown。\nQ1：核心是用Markdown的图片链接来显示，有很多图片接口可以挖掘，比如Unsplash\n![接口配图](https://source.unsplash.com/1600x900/?&lt;关键词&gt;) \n关键词=你的图片关键词\n\nQ2：像## 二级标题这种是Markdown的规范。\n像&lt;&gt;这种用于隔断，帮助GPT分清描述和指令的，属于xml标签，还有很多非常灵活的方式，可以压缩表达，但不是“规定”\n比如：\n你可以用 Y 表示肯定。\n用—&gt;表示流程的下一步\n用表示Apple\n用#备注 表示备注\n\n多试试，感受一下。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1688236110,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"广东","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":387127,"user_name":"Seven七哥","can_delete":false,"product_type":"c1","uid":1070660,"ip_address":"陕西","ucode":"31B5B3D322F8D9","user_header":"https://static001.geekbang.org/account/avatar/00/10/56/44/13032744.jpg","comment_is_top":false,"comment_ctime":1706529129,"is_pvip":false,"replies":[{"id":141121,"content":"真实的key有替换进去吗？\n如果有，就是 ChatGPT 链接或者JSON解析的稳定性问题。上个月还很差，存在段落文本伪装链接的情况。","user_name":"作者回复","user_name_real":"编辑","uid":3588216,"ctime":1706721066,"ip_address":"广东","comment_id":387127,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100550701,"comment_content":"3.5的ChatGPT无法直接使用本节提供的prompt，解析不了的感觉，4.0是可以的，附一张3.5的截图：\n好的，让我们开始：\n\n**步骤 1：** 将关键词翻译为英语\n\n关键词: 阅读\n\n**步骤 2：** 拼合成API链接\n\n```markdown\nhttps:&#47;&#47;pixabay.com&#47;api&#47;?key=替换你的key&amp;q=reading&amp;image_type=all&amp;editors_choice=true&amp;pretty=true\n```\n\n**步骤 3：** 插件判断 - N\n\n(请提供 JSON 或者目标链接)\n\n**步骤 4：** 提取目标图片并用Markdown渲染\n\n## 关键词\n![配图](the first &quot;largeImageURL&quot; in JSON)\n\n**步骤 5：** 输出名言\n\n&gt; “阅读是心灵的窗户。” - 哈尔德·布卢姆（Harold Bloom）","like_count":0,"discussions":[{"author":{"id":3588216,"avatar":"https://static001.geekbang.org/account/avatar/00/36/c0/78/15553da1.jpg","nickname":"ᴶᴱᴿ","note":"","ucode":"4E0DADC47389DF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":636686,"discussion_content":"真实的key有替换进去吗？\n如果有，就是 ChatGPT 链接或者JSON解析的稳定性问题。上个月还很差，存在段落文本伪装链接的情况。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1706721066,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"广东","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2,\"source\":0}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":381620,"user_name":"6点无痛早起学习的和尚","can_delete":false,"product_type":"c1","uid":1703256,"ip_address":"北京","ucode":"33A8A1CDA103F9","user_header":"https://static001.geekbang.org/account/avatar/00/19/fd/58/1af629c7.jpg","comment_is_top":false,"comment_ctime":1695546652,"is_pvip":false,"replies":[{"id":139067,"content":"利用插件市场的WebPilot解决联网和JSON解析的能力，一站式解决","user_name":"作者回复","user_name_real":"编辑","uid":3588216,"ctime":1695837849,"ip_address":"广东","comment_id":381620,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100550701,"comment_content":"数据清洗，我曾经用过 Python 然后去清洗一堆 json 里的数据，然后组装输出一句话，但是就实现这个功能而言，用 Python 实现优于 gpt","like_count":0,"discussions":[{"author":{"id":3588216,"avatar":"https://static001.geekbang.org/account/avatar/00/36/c0/78/15553da1.jpg","nickname":"ᴶᴱᴿ","note":"","ucode":"4E0DADC47389DF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":628785,"discussion_content":"利用插件市场的WebPilot解决联网和JSON解析的能力，一站式解决","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1695837849,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"广东","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":377246,"user_name":"Geek_1ec717","can_delete":false,"product_type":"c1","uid":3632571,"ip_address":"上海","ucode":"AC77AD751F56DE","user_header":"","comment_is_top":false,"comment_ctime":1688126136,"is_pvip":false,"replies":[{"id":137482,"content":"综合篇最后几篇确实比较复杂，疑问可以到群里补充交流。完课后我们看看迭代一下。","user_name":"作者回复","user_name_real":"编辑","uid":3588216,"ctime":1688212304,"ip_address":"广东","comment_id":377246,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100550701,"comment_content":"这两期的文章读起来都感觉有点混乱，这个没说清楚就跳到下一个，难懂","like_count":0,"discussions":[{"author":{"id":3588216,"avatar":"https://static001.geekbang.org/account/avatar/00/36/c0/78/15553da1.jpg","nickname":"ᴶᴱᴿ","note":"","ucode":"4E0DADC47389DF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":622397,"discussion_content":"综合篇最后几篇确实比较复杂，疑问可以到群里补充交流。完课后我们看看迭代一下。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1688212304,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"广东","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":387128,"user_name":"Seven七哥","can_delete":false,"product_type":"c1","uid":1070660,"ip_address":"陕西","ucode":"31B5B3D322F8D9","user_header":"https://static001.geekbang.org/account/avatar/00/10/56/44/13032744.jpg","comment_is_top":false,"comment_ctime":1706529170,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":2,"product_id":100550701,"comment_content":"3.5无法解析本节给出的prompt：\n\n好的，让我们开始：\n\n**步骤 1：** 将关键词翻译为英语\n\n关键词: 阅读\n\n**步骤 2：** 拼合成API链接\n\n```markdown\nhttps:&#47;&#47;pixabay.com&#47;api&#47;?key=替换你的key&amp;q=reading&amp;image_type=all&amp;editors_choice=true&amp;pretty=true\n```\n\n**步骤 3：** 插件判断 - N\n\n(请提供 JSON 或者目标链接)\n\n**步骤 4：** 提取目标图片并用Markdown渲染\n\n## 关键词\n![配图](the first &quot;largeImageURL&quot; in JSON)\n\n**步骤 5：** 输出名言\n\n&gt; “阅读是心灵的窗户。” - 哈尔德·布卢姆（Harold Bloom）","like_count":0}]}