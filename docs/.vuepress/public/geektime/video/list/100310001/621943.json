{"id":621943,"title":"85｜多进程间如何通信？","content":"<p><strong>课后习题</strong><br>\n请编写一个多进程任务，一个进程用于产生 1～10000 的数字，另一个进程用于判断该数字是否能被 7 整除，如果可以被整除则输出到终端。</p><p><strong>课程代码、课件及其他相关资料地址</strong><br>\n<a href=\"https://gitee.com/wilsonyin/zero-basics-python\">https://gitee.com/wilsonyin/zero-basics-python</a></p>","comments":[{"had_liked":false,"id":380392,"user_name":"Geek_Mike","can_delete":false,"product_type":"c3","uid":3196376,"ip_address":"云南","ucode":"CFA942192C3B74","user_header":"https://static001.geekbang.org/account/avatar/00/30/c5/d8/c5509b9c.jpg","comment_is_top":false,"comment_ctime":1693473240,"is_pvip":false,"replies":[{"id":138772,"content":"很好， 有两个小细节，你可以优化一下\n\n1 在number函数中，您可以直接在循环内部将数字放入队列，而不是一次性将整个列表放入队列，这样，is_divided_by_7函数可以同时取出并处理数字。\n\ndef number(q):\n    for i in range(1, 10001):\n        q.put(i)\n    q.put(None)  # 发送一个信号表示数字发送完毕\n\n2 不需要在进程函数内部调用q.close()。","user_name":"作者回复","user_name_real":"编辑","uid":1056235,"ctime":1694589394,"ip_address":"广东","comment_id":380392,"utype":1}],"discussion_count":2,"race_medal":0,"score":2,"product_id":100310001,"comment_content":"#请编写一个多进程任务，一个进程用于产生 1～10000 的数字，另一个进程用于判断该数字是否能被 7 整除，如果可以被整除则输出到终端。\n\nfrom multiprocessing import Process, Queue\n\ndef number(q):\n    num = [i for i in range(1, 10001)]\n    q.put(num)\n    q.close()\n    \ndef is_divided_by_7(q):\n    num = q.get()\n    lst = [i for i in num if i % 7 == 0]\n    print(lst)\n    q.close()\n    \nif __name__ == &#39;__main__&#39;:\n    queue = Queue()\n    process1 = Process(target=number, args=(queue,))\n    process2 = Process(target=is_divided_by_7, args=(queue,))\n\n    process1.start()\n    process2.start()\n\n    process1.join()\n    process2.join()\n\n    print(&#39;above numbers can be divided by 7&#39;)","like_count":0,"discussions":[{"author":{"id":1056235,"avatar":"https://static001.geekbang.org/account/avatar/00/10/1d/eb/b2123759.jpg","nickname":"尹会生","note":"","ucode":"D1093DBD093617","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":627827,"discussion_content":"很好， 有两个小细节，你可以优化一下\n\n1 在number函数中，您可以直接在循环内部将数字放入队列，而不是一次性将整个列表放入队列，这样，is_divided_by_7函数可以同时取出并处理数字。\n\ndef number(q):\n    for i in range(1, 10001):\n        q.put(i)\n    q.put(None)  # 发送一个信号表示数字发送完毕\n\n2 不需要在进程函数内部调用q.close()。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1694589394,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"广东","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2608728,"avatar":"https://static001.geekbang.org/account/avatar/00/27/ce/58/71ed845f.jpg","nickname":"Dexter","note":"","ucode":"909CABC4AC4AC9","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":646293,"discussion_content":"不需要考虑queue为空的情况吗？当queue.get()的时候","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1717673527,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"浙江","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":378074,"user_name":"LiLian","can_delete":false,"product_type":"c3","uid":1509119,"ip_address":"广东","ucode":"9807877F1A9224","user_header":"https://static001.geekbang.org/account/avatar/00/17/06/ff/e4828765.jpg","comment_is_top":false,"comment_ctime":1689731315,"is_pvip":false,"replies":[{"id":138180,"content":"以我们熟悉的电商场景为例吧，电商场景中涉及许多可以并行处理的任务，因此可以通过多进程或分布式服务实例来提高执行效率。下面，我们将详细探讨这两个方面。\n\n### 1. 电商场景中的多进程应用\n\n多进程可以并行执行多个任务，从而在某些场景下提高效率。在电商场景中，可能的多进程应用场景包括：\n\n- **订单处理**：每个进程可以负责处理一个或一组订单，包括库存检查、支付处理、发货通知等。\n- **数据分析和报告**：对大量的交易、用户行为等数据进行分析和报告生成。\n- **搜索和推荐引擎**：可以使用多进程来并行处理用户的搜索请求和推荐计算。\n- **图像处理**：例如，处理产品图片，进行裁剪、缩放、优化等。\n\n### 2. 分布式服务实例来增加并行\n\n通过拆分成多个分布式服务实例，你可以在不增加总资源数的情况下，更灵活地分配资源，从而提高CPU密集型任务的执行效率。这种方式的优点包括：\n\n- **负载均衡**：通过将请求分发到多个服务实例，可以均衡负载，从而提高响应速度。\n- **可扩展性**：可以根据需要灵活增加或减少服务实例的数量。\n- **容错性**：如果一个服务实例出现故障，其他实例可以继续处理请求，提高了系统的可用性。\n\n### 3. 多进程通信\n\n虽然分布式服务实例可以减少需要多进程通信的情况，但在某些场景下，进程间的通信可能仍然是必要的。例如，如果不同的进程或服务实例需要共享某些状态信息或协调工作，可能需要某种形式的通信机制。\n\n### 总结\n\n电商场景中的多进程和分布式服务实例都可以提高系统的并行处理能力。选择哪种方式取决于具体的需求和资源限制。多进程适合于可以完全并行处理的任务，而分布式服务实例则提供了更灵活的负载均衡和扩展性。在设计系统时，应该仔细考虑各种选项，并选择最符合需求的解决方案。","user_name":"作者回复","user_name_real":"编辑","uid":1056235,"ctime":1691595124,"ip_address":"甘肃","comment_id":378074,"utype":1}],"discussion_count":2,"race_medal":0,"score":2,"product_id":100310001,"comment_content":"老师 请问多进程的场景有哪些？ 总资源数不变的情况下 拆分成多个分布式服务实例 来增加并行 是不是也可以提升cpu密集型任务的执行效率。也不用支持多进程通信","like_count":0,"discussions":[{"author":{"id":1056235,"avatar":"https://static001.geekbang.org/account/avatar/00/10/1d/eb/b2123759.jpg","nickname":"尹会生","note":"","ucode":"D1093DBD093617","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":625356,"discussion_content":"以我们熟悉的电商场景为例吧，电商场景中涉及许多可以并行处理的任务，因此可以通过多进程或分布式服务实例来提高执行效率。下面，我们将详细探讨这两个方面。\n\n### 1. 电商场景中的多进程应用\n\n多进程可以并行执行多个任务，从而在某些场景下提高效率。在电商场景中，可能的多进程应用场景包括：\n\n- **订单处理**：每个进程可以负责处理一个或一组订单，包括库存检查、支付处理、发货通知等。\n- **数据分析和报告**：对大量的交易、用户行为等数据进行分析和报告生成。\n- **搜索和推荐引擎**：可以使用多进程来并行处理用户的搜索请求和推荐计算。\n- **图像处理**：例如，处理产品图片，进行裁剪、缩放、优化等。\n\n### 2. 分布式服务实例来增加并行\n\n通过拆分成多个分布式服务实例，你可以在不增加总资源数的情况下，更灵活地分配资源，从而提高CPU密集型任务的执行效率。这种方式的优点包括：\n\n- **负载均衡**：通过将请求分发到多个服务实例，可以均衡负载，从而提高响应速度。\n- **可扩展性**：可以根据需要灵活增加或减少服务实例的数量。\n- **容错性**：如果一个服务实例出现故障，其他实例可以继续处理请求，提高了系统的可用性。\n\n### 3. 多进程通信\n\n虽然分布式服务实例可以减少需要多进程通信的情况，但在某些场景下，进程间的通信可能仍然是必要的。例如，如果不同的进程或服务实例需要共享某些状态信息或协调工作，可能需要某种形式的通信机制。\n\n### 总结\n\n电商场景中的多进程和分布式服务实例都可以提高系统的并行处理能力。选择哪种方式取决于具体的需求和资源限制。多进程适合于可以完全并行处理的任务，而分布式服务实例则提供了更灵活的负载均衡和扩展性。在设计系统时，应该仔细考虑各种选项，并选择最符合需求的解决方案。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1691595124,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"甘肃","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":1,"child_discussions":[{"author":{"id":1509119,"avatar":"https://static001.geekbang.org/account/avatar/00/17/06/ff/e4828765.jpg","nickname":"LiLian","note":"","ucode":"9807877F1A9224","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1056235,"avatar":"https://static001.geekbang.org/account/avatar/00/10/1d/eb/b2123759.jpg","nickname":"尹会生","note":"","ucode":"D1093DBD093617","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":627670,"discussion_content":"好的 谢谢老师！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1694430906,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":625356,"ip_address":"广东","group_id":0},"score":627670,"extra":""}]}]},{"had_liked":false,"id":394202,"user_name":"刘立嘉","can_delete":false,"product_type":"c3","uid":2414637,"ip_address":"上海","ucode":"1241140EBE7FE3","user_header":"https://static001.geekbang.org/account/avatar/00/24/d8/2d/4b0355f3.jpg","comment_is_top":false,"comment_ctime":1726121015,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":2,"product_id":100310001,"comment_content":"a, b = Pipe()\nfor i in range(100):\n    a.send(i)\n    num = b.recv()\n    if num%7 == 0:\n        print(num)","like_count":0},{"had_liked":false,"id":389620,"user_name":"Geek_c131f7","can_delete":false,"product_type":"c3","uid":3828103,"ip_address":"美国","ucode":"88BB639931161E","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/icniaGmw8xiboyC25ic8l7Vf62AOJ9ysHeAZSxPYMAnL8TticuELVSpnZcexwicbyaeVSCdtnN0MNWawrdBcgeLwmhdg/132","comment_is_top":false,"comment_ctime":1713088589,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":2,"product_id":100310001,"comment_content":"from multiprocessing import Process, Queue\n\ndef number(q):\n    for i in range(1,10001):\n        q.put(i)\n\ndef is_divided_by_7(q):\n    lis = []\n    while not q.empty():\n        num = q.get()\n        if num % 7 == 0:\n            lis.append(num)\n    print(lis)\n    \nif __name__ == &#39;__main__&#39;:\n    queue = Queue()\n    process1 = Process(target=number, args=(queue,))\n    process2 = Process(target=is_divided_by_7, args=(queue,))\n\n    process1.start()\n    process2.start()\n\n    process1.join()\n    process2.join()\n\n    print(&#39;above numbers can be divided by 7&#39;)\n\n这个程序为什么运行后为什么打印的列表为空？","like_count":0},{"had_liked":false,"id":387845,"user_name":"你好极客时间","can_delete":false,"product_type":"c3","uid":2113412,"ip_address":"四川","ucode":"EC1AE9FD105234","user_header":"https://static001.geekbang.org/account/avatar/00/20/3f/84/47f7b661.jpg","comment_is_top":false,"comment_ctime":1708679762,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":2,"product_id":100310001,"comment_content":"from multiprocessing import Process,Queue\nimport random\n\n\nclass MyProcess(Process):\n\n    def __init__(self,queue):\n        super().__init__()\n        self.queue = queue\n\n    def run(self):# 启动任务\n        self.create()\n        self.get_result()\n\n    def create(self):\n        num = random.randint(1,10000)\n        self.queue.put(num)\n\n    def get_result(self):\n\n        random_num = self.queue.get()\n\n        if random_num % 7 ==0:\n            print(&quot;The number is&quot;,random_num,&quot;, is divisible by 7.&quot;)\n        else:\n            print(&quot;Generated number&quot;, random_num, &quot;is not divisible by 7.&quot;)\n\nif __name__ == &#39;__main__&#39;:\n    queue = Queue()\n    process = MyProcess(queue)\n    process.start()  # 启动进程\n    process.join()   # 结束进程","like_count":0},{"had_liked":false,"id":387844,"user_name":"你好极客时间","can_delete":false,"product_type":"c3","uid":2113412,"ip_address":"四川","ucode":"EC1AE9FD105234","user_header":"https://static001.geekbang.org/account/avatar/00/20/3f/84/47f7b661.jpg","comment_is_top":false,"comment_ctime":1708679584,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":2,"product_id":100310001,"comment_content":"from multiprocessing import Process,Queue\nimport random\n\n\nclass MyProcess(Process):\n\n    def __init__(self,queue):\n        super().__init__()\n        self.queue = queue\n\n    def run(self):# 启动任务\n        self.create()\n        self.get_result()\n\n    def create(self):\n        num = random.randint(1,10000)\n        self.queue.put(num)\n\n    def get_result(self):\n\n        random_num = self.queue.get()\n\n        if random_num % 7 ==0:\n            print(&quot;The number is&quot;,random_num,&quot;, is divisible by 7.&quot;)\n        else:\n            print(&quot;Generated number&quot;, random_num, &quot;is not divisible by 7.&quot;)\n\nif __name__ == &#39;__main__&#39;:\n    queue = Queue()\n    process = MyProcess(queue)\n    process.start()  # 启动进程","like_count":0},{"had_liked":false,"id":385176,"user_name":"Geek_631607","can_delete":false,"product_type":"c3","uid":3789991,"ip_address":"广东","ucode":"EAF874838F0BE4","user_header":"","comment_is_top":false,"comment_ctime":1702264961,"is_pvip":false,"replies":null,"discussion_count":2,"race_medal":0,"score":2,"product_id":100310001,"comment_content":"from multiprocessing import Queue\nfrom random import random\n\ndef random_int():\n    return int(random() * 10000)\n\nnum = random_int()\nq = Queue(1)\nq.put(num)\nif q.get() % 7 == 0:\n    print(f&quot;{num} 可以被 7 整除&quot;)\nelse:\n    print(f&quot;{num} 不可以被 7 整除&quot;)","like_count":0,"discussions":[{"author":{"id":2608728,"avatar":"https://static001.geekbang.org/account/avatar/00/27/ce/58/71ed845f.jpg","nickname":"Dexter","note":"","ucode":"909CABC4AC4AC9","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":646295,"discussion_content":"这不是多process吧","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1717673878,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"浙江","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":3867624,"avatar":"https://static001.geekbang.org/account/avatar/00/3b/03/e8/c50accb1.jpg","nickname":"Serendipity","note":"","ucode":"EC92FD3EE8FB55","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":641225,"discussion_content":"这样对吗？本人和您写法类似，但看其他评论都是进程的开始和结束？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1712392706,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"山东","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":383949,"user_name":"醉后不知天在水","can_delete":false,"product_type":"c3","uid":2548362,"ip_address":"山东","ucode":"B8A25FBF639D5D","user_header":"https://static001.geekbang.org/account/avatar/00/26/e2/8a/ac6c5b92.jpg","comment_is_top":false,"comment_ctime":1700010781,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":2,"product_id":100310001,"comment_content":"import multiprocessing\nimport time\nimport sys\n\ndef generate_numbers(output_queue):\n    for i in range(1, 10001):\n        output_queue.put(i)\n    output_queue.put(None)  # 发送结束标志\n\ndef check_divisible(input_queue):\n    while True:\n        number = input_queue.get()\n        if number is None:\n            break\n        if number % 7 == 0:\n            print(number)\n\nif __name__ == &#39;__main__&#39;:\n    output_queue = multiprocessing.Queue()\n\n    numbers_process = multiprocessing.Process(target=generate_numbers, args=(output_queue,))\n    divisible_process = multiprocessing.Process(target=check_divisible, args=(output_queue,))\n\n    numbers_process.start()\n    divisible_process.start()\n\n    numbers_process.join()\n\n    divisible_process.join()\n    numbers_process.terminate()\n    divisible_process.terminate()\n    sys.exit(0)","like_count":0},{"had_liked":false,"id":382869,"user_name":"MarkG","can_delete":false,"product_type":"c3","uid":3675806,"ip_address":"山东","ucode":"454082595FE769","user_header":"https://static001.geekbang.org/account/avatar/00/38/16/9e/48621655.jpg","comment_is_top":false,"comment_ctime":1698132600,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":2,"product_id":100310001,"comment_content":"老师，我使用Pipe来实现\nfrom multiprocessing import Pipe\n\na, b = Pipe()\n\nfor i in range(1, 10000):\n    a.send(i)\n    __val = b.recv()\n    if __val % 7 == 0:\n        print(f&quot;该数字 {__val} 可以被7整除&quot;)","like_count":0},{"had_liked":false,"id":380393,"user_name":"Geek_Mike","can_delete":false,"product_type":"c3","uid":3196376,"ip_address":"云南","ucode":"CFA942192C3B74","user_header":"https://static001.geekbang.org/account/avatar/00/30/c5/d8/c5509b9c.jpg","comment_is_top":false,"comment_ctime":1693473253,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":2,"product_id":100310001,"comment_content":"#请编写一个多进程任务，一个进程用于产生 1～10000 的数字，另一个进程用于判断该数字是否能被 7 整除，如果可以被整除则输出到终端。\n\nimport concurrent.futures\n\ndef number():\n    num_list = [i for i in range(1, 10001)]\n    return num_list\n\ndef is_divided_by_7(num):\n    if num % 7 == 0:\n        return True\n    \nif __name__ == &#39;__main__&#39;:\n    with concurrent.futures.ProcessPoolExecutor() as executor:\n        lst = [num for num, value in zip(number(), executor.map(is_divided_by_7, number())) if value]\n        print(lst)\n        print(&#39;above numbers can be divided by 7&#39;)","like_count":0},{"had_liked":false,"id":368368,"user_name":"Seven","can_delete":false,"product_type":"c3","uid":2403766,"ip_address":"四川","ucode":"37D99CF8535CDE","user_header":"https://static001.geekbang.org/account/avatar/00/24/ad/b6/a8caa2c7.jpg","comment_is_top":false,"comment_ctime":1676259105,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":3,"product_id":100310001,"comment_content":"注意，声明进程 p=Process(target=pro_num, args=(q,)) 的时候, args()中只有一个参数的时候， 参数末尾要加一个逗号：args(q,)不然会报错 TypeError: &#39;Queue&#39; object is not iterable","like_count":0},{"had_liked":false,"id":367139,"user_name":"Cy23","can_delete":false,"product_type":"c3","uid":1591293,"ip_address":"辽宁","ucode":"8DC561C5151758","user_header":"https://static001.geekbang.org/account/avatar/00/18/47/fd/895f0c27.jpg","comment_is_top":false,"comment_ctime":1674973705,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":3,"product_id":100310001,"comment_content":"from multiprocessing import Queue,Process\nfrom random import randint\n\ndef pro_num(q):\n  number = randint(1, 10000)\n  q.put(number)\n\ndef con_num(q):\n  val = q.get()\n  if(val% 7 == 0):\n    print(val)\n\nif __name__ == &#39;__main__&#39;:\n  q = Queue()\n  for i in range(100):\n    p1 = Process(target=pro_num, args=(q,))\n    p2 = Process(target=con_num, args=(q,))\n\n    p1.start()\n    p1.join()\n    p2.start()","like_count":0},{"had_liked":false,"id":366689,"user_name":"Matthew","can_delete":false,"product_type":"c3","uid":2843865,"ip_address":"江苏","ucode":"96093089773740","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/PiajxSqBRaEKSVuNarJuDhBSvHY0giaq6yriceEBKiaKuc04wCYWOuso50noqDexaPJJibJN7PHwvcQppnzsDia1icZkw/132","comment_is_top":false,"comment_ctime":1674055041,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":3,"product_id":100310001,"comment_content":"from random import randint\nfrom multiprocessing import Process, Queue\n\n# 产生随机数\ndef randint_prod(start, stop, q):\n    number = randint(start, stop)\n    print(f&quot;进程1：产生随机数：{number}&quot;)\n    q.put(number)\n    # return number\n\n# 判断是否能被7整除\ndef divided_judge(divisor, q):\n    dividend = q.get()    \n    if(dividend % divisor == 0):\n        print(f&quot;进程2：{dividend} 能被 {divisor} 整除&quot;)\n    else:\n        print(f&quot;进程2：{dividend} 不能被 {divisor} 整除&quot;)\n\n# 测试\nif __name__ == &#39;__main__&#39;:\n    q = Queue()\n    \n    for i in range(5):\n        p_one = Process(target=randint_prod, args=(0, 10000, q))\n        p_two = Process(target=divided_judge, args=(7, q))\n        \n        p_one.start()\n        p_one.join()\n\n        p_two.start()\n        p_two.join()\n    \n    print(&quot;Process end.&quot;)","like_count":0}]}