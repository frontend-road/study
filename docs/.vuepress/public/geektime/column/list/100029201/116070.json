{"id":116070,"title":"30 | 怎么重设消费者组位移？","content":"<p>你好，我是胡夕。今天我要跟你分享的主题是：如何重设消费者组位移。</p><h2>为什么要重设消费者组位移？</h2><p>我们知道，Kafka和传统的消息引擎在设计上是有很大区别的，其中一个比较显著的区别就是，Kafka的消费者读取消息是可以重演的（replayable）。</p><p>像RabbitMQ或ActiveMQ这样的传统消息中间件，它们处理和响应消息的方式是破坏性的（destructive），即一旦消息被成功处理，就会被从Broker上删除。</p><p>反观Kafka，由于它是基于日志结构（log-based）的消息引擎，消费者在消费消息时，仅仅是从磁盘文件上读取数据而已，是只读的操作，因此消费者不会删除消息数据。同时，由于位移数据是由消费者控制的，因此它能够很容易地修改位移的值，实现重复消费历史数据的功能。</p><p>对了，之前有很多同学在专栏的留言区提问：在实际使用场景中，我该如何确定是使用传统的消息中间件，还是使用Kafka呢？我在这里统一回答一下。如果在你的场景中，消息处理逻辑非常复杂，处理代价很高，同时你又不关心消息之间的顺序，那么传统的消息中间件是比较合适的；反之，如果你的场景需要较高的吞吐量，但每条消息的处理时间很短，同时你又很在意消息的顺序，此时，Kafka就是你的首选。</p><!-- [[[read_end]]] --><h2>重设位移策略</h2><p>不论是哪种设置方式，重设位移大致可以从两个维度来进行。</p><ol>\n<li>位移维度。这是指根据位移值来重设。也就是说，直接把消费者的位移值重设成我们给定的位移值。</li>\n<li>时间维度。我们可以给定一个时间，让消费者把位移调整成大于该时间的最小位移；也可以给出一段时间间隔，比如30分钟前，然后让消费者直接将位移调回30分钟之前的位移值。</li>\n</ol><p>下面的这张表格罗列了7种重设策略。接下来，我来详细解释下这些策略。</p><p><img src=\"https://static001.geekbang.org/resource/image/ac/6a/ac093597e8dbef3b1f832f24c125fc6a.jpg?wh=3853*1962\" alt=\"\"></p><p>Earliest策略表示将位移调整到主题当前最早位移处。这个最早位移不一定就是0，因为在生产环境中，很久远的消息会被Kafka自动删除，所以当前最早位移很可能是一个大于0的值。<strong>如果你想要重新消费主题的所有消息，那么可以使用Earliest策略</strong>。</p><p>Latest策略表示把位移重设成最新末端位移。如果你总共向某个主题发送了15条消息，那么最新末端位移就是15。<strong>如果你想跳过所有历史消息，打算从最新的消息处开始消费的话，可以使用Latest策略。</strong></p><p>Current策略表示将位移调整成消费者当前提交的最新位移。有时候你可能会碰到这样的场景：你修改了消费者程序代码，并重启了消费者，结果发现代码有问题，你需要回滚之前的代码变更，同时也要把位移重设到消费者重启时的位置，那么，Current策略就可以帮你实现这个功能。</p><p>表中第4行的Specified-Offset策略则是比较通用的策略，表示消费者把位移值调整到你指定的位移处。<strong>这个策略的典型使用场景是，消费者程序在处理某条错误消息时，你可以手动地“跳过”此消息的处理</strong>。在实际使用过程中，可能会出现corrupted消息无法被消费的情形，此时消费者程序会抛出异常，无法继续工作。一旦碰到这个问题，你就可以尝试使用Specified-Offset策略来规避。</p><p>如果说Specified-Offset策略要求你指定位移的<strong>绝对数值</strong>的话，那么Shift-By-N策略指定的就是位移的<strong>相对数值</strong>，即你给出要跳过的一段消息的距离即可。这里的“跳”是双向的，你既可以向前“跳”，也可以向后“跳”。比如，你想把位移重设成当前位移的前100条位移处，此时你需要指定N为-100。</p><p>刚刚讲到的这几种策略都是位移维度的，下面我们来聊聊从时间维度重设位移的DateTime和Duration策略。</p><p>DateTime允许你指定一个时间，然后将位移重置到该时间之后的最早位移处。常见的使用场景是，你想重新消费昨天的数据，那么你可以使用该策略重设位移到昨天0点。</p><p>Duration策略则是指给定相对的时间间隔，然后将位移调整到距离当前给定时间间隔的位移处，具体格式是PnDTnHnMnS。如果你熟悉Java 8引入的Duration类的话，你应该不会对这个格式感到陌生。它就是一个符合ISO-8601规范的Duration格式，以字母P开头，后面由4部分组成，即D、H、M和S，分别表示天、小时、分钟和秒。举个例子，如果你想将位移调回到15分钟前，那么你就可以指定PT0H15M0S。</p><p>我会在后面分别给出这7种重设策略的实现方式。不过在此之前，我先来说一下重设位移的方法。目前，重设消费者组位移的方式有两种。</p><ul>\n<li>通过消费者API来实现。</li>\n<li>通过kafka-consumer-groups命令行脚本来实现。</li>\n</ul><h2>消费者API方式设置</h2><p>首先，我们来看看如何通过API的方式来重设位移。我主要以Java API为例进行演示。如果你使用的是其他语言，方法应该是类似的，不过你要参考具体的API文档。</p><p>通过Java API的方式来重设位移，你需要调用KafkaConsumer的seek方法，或者是它的变种方法seekToBeginning和seekToEnd。我们来看下它们的方法签名。</p><pre><code>void seek(TopicPartition partition, long offset);\nvoid seek(TopicPartition partition, OffsetAndMetadata offsetAndMetadata);\nvoid seekToBeginning(Collection&lt;TopicPartition&gt; partitions);\nvoid seekToEnd(Collection&lt;TopicPartition&gt; partitions);\n</code></pre><p>根据方法的定义，我们可以知道，每次调用seek方法只能重设一个分区的位移。OffsetAndMetadata类是一个封装了Long型的位移和自定义元数据的复合类，只是一般情况下，自定义元数据为空，因此你基本上可以认为这个类表征的主要是消息的位移值。seek的变种方法seekToBeginning和seekToEnd则拥有一次重设多个分区的能力。我们在调用它们时，可以一次性传入多个主题分区。</p><p>好了，有了这些方法，我们就可以逐一地实现上面提到的7种策略了。我们先来看Earliest策略的实现方式，代码如下：</p><pre><code>Properties consumerProperties = new Properties();\nconsumerProperties.put(ConsumerConfig.ENABLE_AUTO_COMMIT_CONFIG, false);\nconsumerProperties.put(ConsumerConfig.GROUP_ID_CONFIG, groupID);\nconsumerProperties.put(ConsumerConfig.AUTO_OFFSET_RESET_CONFIG, &quot;earliest&quot;);\nconsumerProperties.put(ConsumerConfig.KEY_DESERIALIZER_CLASS_CONFIG, StringDeserializer.class.getName());\nconsumerProperties.put(ConsumerConfig.VALUE_DESERIALIZER_CLASS_CONFIG, StringDeserializer.class.getName());\nconsumerProperties.put(ConsumerConfig.BOOTSTRAP_SERVERS_CONFIG, brokerList);\n\nString topic = &quot;test&quot;;  // 要重设位移的Kafka主题 \ntry (final KafkaConsumer&lt;String, String&gt; consumer = \n\tnew KafkaConsumer&lt;&gt;(consumerProperties)) {\n         consumer.subscribe(Collections.singleton(topic));\n         consumer.poll(0);\n         consumer.seekToBeginning(\n\tconsumer.partitionsFor(topic).stream().map(partitionInfo -&gt;          \n\tnew TopicPartition(topic, partitionInfo.partition()))\n\t.collect(Collectors.toList()));\n} \n</code></pre><p>这段代码中有几个比较关键的部分，你需要注意一下。</p><ol>\n<li>你要创建的消费者程序，要禁止自动提交位移。</li>\n<li>组ID要设置成你要重设的消费者组的组ID。</li>\n<li>调用seekToBeginning方法时，需要一次性构造主题的所有分区对象。</li>\n<li>最重要的是，一定要调用带长整型的poll方法，而不要调用consumer.poll(Duration.ofSecond(0))。</li>\n</ol><p>虽然社区已经不推荐使用poll(long)了，但短期内应该不会移除它，所以你可以放心使用。另外，为了避免重复，在后面的实例中，我只给出最关键的代码。</p><p>Latest策略和Earliest是类似的，我们只需要使用seekToEnd方法即可，如下面的代码所示：</p><pre><code>consumer.seekToEnd(\n\tconsumer.partitionsFor(topic).stream().map(partitionInfo -&gt;          \n\tnew TopicPartition(topic, partitionInfo.partition()))\n\t.collect(Collectors.toList()));\n</code></pre><p>实现Current策略的方法很简单，我们需要借助KafkaConsumer的committed方法来获取当前提交的最新位移，代码如下：</p><pre><code>consumer.partitionsFor(topic).stream().map(info -&gt; \n\tnew TopicPartition(topic, info.partition()))\n\t.forEach(tp -&gt; {\n\tlong committedOffset = consumer.committed(tp).offset();\n\tconsumer.seek(tp, committedOffset);\n});\n</code></pre><p>这段代码首先调用partitionsFor方法获取给定主题的所有分区，然后依次获取对应分区上的已提交位移，最后通过seek方法重设位移到已提交位移处。</p><p>如果要实现Specified-Offset策略，直接调用seek方法即可，如下所示：</p><pre><code>long targetOffset = 1234L;\nfor (PartitionInfo info : consumer.partitionsFor(topic)) {\n\tTopicPartition tp = new TopicPartition(topic, info.partition());\n\tconsumer.seek(tp, targetOffset);\n}\n</code></pre><p>这次我没有使用Java 8 Streams的写法，如果你不熟悉Lambda表达式以及Java 8的Streams，这种写法可能更加符合你的习惯。</p><p>接下来我们来实现Shift-By-N策略，主体代码逻辑如下：</p><pre><code>for (PartitionInfo info : consumer.partitionsFor(topic)) {\n         TopicPartition tp = new TopicPartition(topic, info.partition());\n\t// 假设向前跳123条消息\n         long targetOffset = consumer.committed(tp).offset() + 123L; \n         consumer.seek(tp, targetOffset);\n}\n</code></pre><p>如果要实现DateTime策略，我们需要借助另一个方法：<strong>KafkaConsumer.</strong>  <strong>offsetsForTimes方法</strong>。假设我们要重设位移到2019年6月20日晚上8点，那么具体代码如下：</p><pre><code>long ts = LocalDateTime.of(\n\t2019, 6, 20, 20, 0).toInstant(ZoneOffset.ofHours(8)).toEpochMilli();\nMap&lt;TopicPartition, Long&gt; timeToSearch = \n         consumer.partitionsFor(topic).stream().map(info -&gt; \n\tnew TopicPartition(topic, info.partition()))\n\t.collect(Collectors.toMap(Function.identity(), tp -&gt; ts));\n\nfor (Map.Entry&lt;TopicPartition, OffsetAndTimestamp&gt; entry : \n\tconsumer.offsetsForTimes(timeToSearch).entrySet()) {\nconsumer.seek(entry.getKey(), entry.getValue().offset());\n}\n</code></pre><p>这段代码构造了LocalDateTime实例，然后利用它去查找对应的位移值，最后调用seek，实现了重设位移。</p><p>最后，我来给出实现Duration策略的代码。假设我们要将位移调回30分钟前，那么代码如下：</p><pre><code>Map&lt;TopicPartition, Long&gt; timeToSearch = consumer.partitionsFor(topic).stream()\n         .map(info -&gt; new TopicPartition(topic, info.partition()))\n         .collect(Collectors.toMap(Function.identity(), tp -&gt; System.currentTimeMillis() - 30 * 1000  * 60));\n\nfor (Map.Entry&lt;TopicPartition, OffsetAndTimestamp&gt; entry : \n         consumer.offsetsForTimes(timeToSearch).entrySet()) {\n         consumer.seek(entry.getKey(), entry.getValue().offset());\n}\n</code></pre><p><strong>总之，使用Java API的方式来实现重设策略的主要入口方法，就是seek方法</strong>。</p><h2>命令行方式设置</h2><p>位移重设还有另一个重要的途径：<strong>通过kafka-consumer-groups脚本</strong>。需要注意的是，这个功能是在Kafka 0.11版本中新引入的。这就是说，如果你使用的Kafka是0.11版本之前的，那么你只能使用API的方式来重设位移。</p><p>比起API的方式，用命令行重设位移要简单得多。针对我们刚刚讲过的7种策略，有7个对应的参数。下面我来一一给出实例。</p><p>Earliest策略直接指定<strong>--to-earliest</strong>。</p><pre><code>bin/kafka-consumer-groups.sh --bootstrap-server kafka-host:port --group test-group --reset-offsets --all-topics --to-earliest –execute\n</code></pre><p>Latest策略直接指定<strong>--to-latest</strong>。</p><pre><code>bin/kafka-consumer-groups.sh --bootstrap-server kafka-host:port --group test-group --reset-offsets --all-topics --to-latest --execute\n</code></pre><p>Current策略直接指定<strong>--to-current</strong>。</p><pre><code>bin/kafka-consumer-groups.sh --bootstrap-server kafka-host:port --group test-group --reset-offsets --all-topics --to-current --execute\n</code></pre><p>Specified-Offset策略直接指定<strong>--to-offset</strong>。</p><pre><code>bin/kafka-consumer-groups.sh --bootstrap-server kafka-host:port --group test-group --reset-offsets --all-topics --to-offset &lt;offset&gt; --execute\n</code></pre><p>Shift-By-N策略直接指定<strong>--shift-by N</strong>。</p><pre><code>bin/kafka-consumer-groups.sh --bootstrap-server kafka-host:port --group test-group --reset-offsets --shift-by &lt;offset_N&gt; --execute\n</code></pre><p>DateTime策略直接指定<strong>--to-datetime</strong>。</p><pre><code>bin/kafka-consumer-groups.sh --bootstrap-server kafka-host:port --group test-group --reset-offsets --to-datetime 2019-06-20T20:00:00.000 --execute\n</code></pre><p>最后是实现Duration策略，我们直接指定<strong>--by-duration</strong>。</p><pre><code>bin/kafka-consumer-groups.sh --bootstrap-server kafka-host:port --group test-group --reset-offsets --by-duration PT0H30M0S --execute\n</code></pre><h2>小结</h2><p>至此，重设消费者组位移的2种方式我都讲完了。我们来小结一下。今天，我们主要讨论了在Kafka中，为什么要重设位移以及如何重设消费者组位移。重设位移主要是为了实现消息的重演。目前Kafka支持7种重设策略和2种重设方法。在实际使用过程中，我推荐你使用第2种方法，即用命令行的方式来重设位移。毕竟，执行命令要比写程序容易得多。但是需要注意的是，0.11及0.11版本之后的Kafka才提供了用命令行调整位移的方法。如果你使用的是之前的版本，那么就只能依靠API的方式了。</p><p><img src=\"https://static001.geekbang.org/resource/image/98/f3/98a7d3f9b0d3050947772d8cd2c4caf3.jpg?wh=2069*2580\" alt=\"\"></p><h2>开放讨论</h2><p>你在实际使用过程中，是否遇到过要重设位移的场景，你是怎么实现的？</p><p>欢迎写下你的思考和答案，我们一起讨论。如果你觉得有所收获，也欢迎把文章分享给你的朋友。</p>","neighbors":{"left":{"article_title":"29 | Kafka动态配置了解下？","id":113504},"right":{"article_title":"31 | 常见工具脚本大汇总","id":116111}},"comments":[{"had_liked":false,"id":129233,"user_name":"小可爱","can_delete":false,"product_type":"c1","uid":1470958,"ip_address":"","ucode":"5379D1F00E8796","user_header":"https://static001.geekbang.org/account/avatar/00/16/71/ee/31b19304.jpg","comment_is_top":false,"comment_ctime":1567067120,"is_pvip":false,"replies":[{"id":"48163","content":"current主要是为了调试场景。比如这样的场景：你停掉了consumer，现在offset=50，然后修改了consumer代码重新上线，consumer开始从50消费，运行了一段时间发现你修改的代码有问题，还要继续改，那么下掉consumer，将offset调回current，改代码之后再上线，consumer从50消费。此时current策略就显得很方便了，对吧？","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1567125766,"ip_address":"","comment_id":129233,"utype":1}],"discussion_count":8,"race_medal":0,"score":"143300987888","product_id":100029201,"comment_content":"current是回到最近提交位移处，但是消费者不是本来就从最近提交处继续消费吗","like_count":33,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":465347,"discussion_content":"current主要是为了调试场景。比如这样的场景：你停掉了consumer，现在offset=50，然后修改了consumer代码重新上线，consumer开始从50消费，运行了一段时间发现你修改的代码有问题，还要继续改，那么下掉consumer，将offset调回current，改代码之后再上线，consumer从50消费。此时current策略就显得很方便了，对吧？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567125766,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1470958,"avatar":"https://static001.geekbang.org/account/avatar/00/16/71/ee/31b19304.jpg","nickname":"小可爱","note":"","ucode":"5379D1F00E8796","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":6861,"discussion_content":"老师你说将offset调回current，说明offset中途提交了，可能是１００了，这时候current不是１００了吗","likes_number":12,"is_delete":false,"is_hidden":false,"ctime":1567146817,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":3,"child_discussions":[{"author":{"id":1336475,"avatar":"https://static001.geekbang.org/account/avatar/00/14/64/9b/0b578b08.jpg","nickname":"J.Smile","note":"","ucode":"C4D98DFDBF7584","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1470958,"avatar":"https://static001.geekbang.org/account/avatar/00/16/71/ee/31b19304.jpg","nickname":"小可爱","note":"","ucode":"5379D1F00E8796","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":284725,"discussion_content":"问题提的不错","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1592616266,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":6861,"ip_address":""},"score":284725,"extra":""},{"author":{"id":1134861,"avatar":"https://static001.geekbang.org/account/avatar/00/11/51/0d/fc1652fe.jpg","nickname":"James","note":"","ucode":"48B0F2A334D1C1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1470958,"avatar":"https://static001.geekbang.org/account/avatar/00/16/71/ee/31b19304.jpg","nickname":"小可爱","note":"","ucode":"5379D1F00E8796","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":288054,"discussion_content":"好像代码有说禁止提交位移;所以重新启动应该还是50.方便开发调试从50开始的数据","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1593622873,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":6861,"ip_address":""},"score":288054,"extra":""},{"author":{"id":1519269,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/2qHhibwFEiaNWNjCqTpe8kCHqWian0rBdkulmkvVXpkr4CSOpuibVHNVozHUERAmvMDMticfycjzgwYDv6Gfav1dZ3A/132","nickname":"Geek_58a455","note":"","ucode":"C20E856D38D338","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1470958,"avatar":"https://static001.geekbang.org/account/avatar/00/16/71/ee/31b19304.jpg","nickname":"小可爱","note":"","ucode":"5379D1F00E8796","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":311383,"discussion_content":"位移都提交了，下次消费就从最新的开始消费了，说白一点就是从上次消费的位移出接着消费","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1602322103,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":6861,"ip_address":""},"score":311383,"extra":""}]},{"author":{"id":1503506,"avatar":"https://static001.geekbang.org/account/avatar/00/16/f1/12/7dac30d6.jpg","nickname":"你为啥那么牛","note":"","ucode":"1ABC604A54A8F6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":347905,"discussion_content":"含糊不清，我只能认为作者有所保留了。current 如何判断消费程序有问题，即使在有问题的情况下，也可以正常提交位移。broker 是怎么判断current的？","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1612359756,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1223176,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/nhLS152kEs5J65bBpM2fzMn4agfoow8xibFzNSDcmo9Oiby2lNB4hWRcetRWFyY2y05IJu8GbkZer9BUiahtadU0w/132","nickname":"yuanlinios","note":"","ucode":"0861321E352FE0","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":81910,"discussion_content":"我的理解是使用 --to-current 可以在某个时刻把当前位移值打印/导出来, 以便将来可以使用 --to-offset 调回去.\n\n这里有设计文档, 不确定还是不是有效的. 请老师指正\nhttps://cwiki.apache.org/confluence/display/KAFKA/KIP-122%3A+Add+Reset+Consumer+Group+Offsets+tooling","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1576294129,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1015754,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/7f/ca/ea85bfdd.jpg","nickname":"helloworld","note":"","ucode":"00DF2FEC58D2E6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":205890,"discussion_content":"和上面的有同样的疑问，并且对文中解释的Latest与Current感觉区分不清楚，老能能详细举例介绍下吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584354354,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":122549,"user_name":"QQ怪","can_delete":false,"product_type":"c1","uid":1211223,"ip_address":"","ucode":"1A39B8433D9208","user_header":"https://static001.geekbang.org/account/avatar/00/12/7b/57/a9b04544.jpg","comment_is_top":false,"comment_ctime":1565421503,"is_pvip":false,"discussion_count":3,"race_medal":0,"score":"74579865535","product_id":100029201,"comment_content":"比较暴力的重新开个消费组从头消费😂","like_count":17,"discussions":[{"author":{"id":1134861,"avatar":"https://static001.geekbang.org/account/avatar/00/11/51/0d/fc1652fe.jpg","nickname":"James","note":"","ucode":"48B0F2A334D1C1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":52835,"discussion_content":"哈哈，从最后开始且重创消费组🐶🐶🐶🐶🐶🐶🐶🐶🐶🐶🐶","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574087592,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1303013,"avatar":"https://static001.geekbang.org/account/avatar/00/13/e1/e5/815d4271.jpg","nickname":"我是卖报小行家","note":"","ucode":"43530EA291B66D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":21648,"discussion_content":"重开消费组也可以从头消费？应该是从已经提交的offset处开始吧","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1569506754,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1211223,"avatar":"https://static001.geekbang.org/account/avatar/00/12/7b/57/a9b04544.jpg","nickname":"QQ怪","note":"","ucode":"1A39B8433D9208","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1303013,"avatar":"https://static001.geekbang.org/account/avatar/00/13/e1/e5/815d4271.jpg","nickname":"我是卖报小行家","note":"","ucode":"43530EA291B66D","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":21673,"discussion_content":"可以设置从头开始或者是从最后开始，从头开始一般数据会被删掉，默认保持七天，所以会从七天钱前开始消费","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1569508658,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":21648,"ip_address":""},"score":21673,"extra":""}]}]},{"had_liked":false,"id":214050,"user_name":"Curry","can_delete":false,"product_type":"c1","uid":1529871,"ip_address":"","ucode":"AABD3AA2EB2C95","user_header":"https://static001.geekbang.org/account/avatar/00/17/58/0f/c412b4a9.jpg","comment_is_top":false,"comment_ctime":1588645242,"is_pvip":false,"replies":[{"id":"79341","content":"是的，去拿元数据","user_name":"作者回复","user_name_real":"胡夕","uid":"1288090","ctime":1588725046,"ip_address":"","comment_id":214050,"utype":1}],"discussion_count":2,"race_medal":0,"score":"66013154682","product_id":100029201,"comment_content":"老师，为什么要poll（0）一下？是为了获取元数据吗？","like_count":14,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":493939,"discussion_content":"是的，去拿元数据","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1588725046,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":1,"child_discussions":[{"author":{"id":1054827,"avatar":"https://static001.geekbang.org/account/avatar/00/10/18/6b/a1448af1.jpg","nickname":"贝影","note":"","ucode":"19545C8DCBF8A2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":544822,"discussion_content":"不需要poll(0)也不影响获取offset和设置offset吧？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1641724527,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":493939,"ip_address":""},"score":544822,"extra":""}]}]},{"had_liked":false,"id":221767,"user_name":"喜欢地球的阿培同学","can_delete":false,"product_type":"c1","uid":1361746,"ip_address":"","ucode":"5F97037585F857","user_header":"https://static001.geekbang.org/account/avatar/00/14/c7/52/c5adf218.jpg","comment_is_top":false,"comment_ctime":1590588200,"is_pvip":false,"replies":[{"id":"81862","content":"consumer端可以选择跳过该消息。的确这方面Kafka没有提供开箱即用的dead letter queue~","user_name":"作者回复","user_name_real":"胡夕","uid":"1288090","ctime":1590677031,"ip_address":"","comment_id":221767,"utype":1}],"discussion_count":2,"race_medal":0,"score":"44540261160","product_id":100029201,"comment_content":"老师，问一个问题: <br>像RocketMQ这样的消息引擎，如果消费者消费某条消息一直失败，会将这条消息放到 “死信”队列里，然后消费者继续消费下一条消息。在kafka中，如果消费者消费某条消息一直失败，会怎么处理呢？难道程序会一直消费这条消息，然后失败.. 继续消费这条消息 .. 然后继续失败 ......","like_count":10,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":496559,"discussion_content":"consumer端可以选择跳过该消息。的确这方面Kafka没有提供开箱即用的dead letter queue~","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1590677031,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1339409,"avatar":"https://static001.geekbang.org/account/avatar/00/14/70/11/42cf8f9d.jpg","nickname":"chenjia","note":"","ucode":"61983C29FF4987","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":368095,"discussion_content":"只能自己持久化了，比如新开一个topic专门用于保存死信","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1618565171,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":162440,"user_name":"水天一色","can_delete":false,"product_type":"c1","uid":1299931,"ip_address":"","ucode":"863643303BBB39","user_header":"https://static001.geekbang.org/account/avatar/00/13/d5/db/c45b90c8.jpg","comment_is_top":false,"comment_ctime":1576534190,"is_pvip":false,"replies":[{"id":"61782","content":"消息的创建时间","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1576543760,"ip_address":"","comment_id":162440,"utype":1}],"discussion_count":2,"race_medal":0,"score":"31641305262","product_id":100029201,"comment_content":"请问，重置offset到 datetime，这个 datetime 是生产时间还是当前group的消费时间？","like_count":7,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":478050,"discussion_content":"消息的创建时间","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1576543760,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1467134,"avatar":"https://static001.geekbang.org/account/avatar/00/16/62/fe/6d2fa6b9.jpg","nickname":"黄婷婷","note":"","ucode":"8B65636C9197A2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":535259,"discussion_content":"老师，是事件时间，还是消息成功写到Kafka的时间？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1638374838,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":122930,"user_name":"cricket1981","can_delete":false,"product_type":"c1","uid":1001715,"ip_address":"","ucode":"758262F5958DA4","user_header":"https://static001.geekbang.org/account/avatar/00/0f/48/f3/f1034ffd.jpg","comment_is_top":false,"comment_ctime":1565574713,"is_pvip":false,"replies":[{"id":"45124","content":"两个的实现方式不一样。详细设计原理差别可以看看：https:&#47;&#47;www.cnblogs.com&#47;huxi2b&#47;p&#47;10773559.html","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1565575466,"ip_address":"","comment_id":122930,"utype":1}],"discussion_count":4,"race_medal":0,"score":"27335378489","product_id":100029201,"comment_content":"&quot;最重要的是，一定要调用带长整型的 poll 方法，而不要调用 consumer.poll(Duration.ofSecond(0))。&quot;--- 能讲下为什么吗？如果不遵守会怎么样？","like_count":6,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":462458,"discussion_content":"两个的实现方式不一样。详细设计原理差别可以看看：https://www.cnblogs.com/huxi2b/p/10773559.html","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1565575466,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1398555,"avatar":"https://static001.geekbang.org/account/avatar/00/15/57/1b/37a93b76.jpg","nickname":"剑锋所指","note":"","ucode":"560767B94729FB","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":386946,"discussion_content":"自己点进poll方法看源码 很简单","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1627904896,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1527936,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eqsQw89GlzQtCy2V9vjlqACWMM3BKzmF9JMYq1FATlhpVliaZnuVdoczEL7m0oCdlr2v0w3wP44o2g/132","nickname":"Geek_93b580","note":"","ucode":"99AB9D82657B01","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":377802,"discussion_content":"我就知道评论区会有人问。很明显的疑惑点，在正文就不能提一下，哪怕给个参考链接。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1622867328,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1037045,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/d2/f5/0c716e9d.jpg","nickname":"roderickyu","note":"","ucode":"549C4A36D66C46","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":6549,"discussion_content":"可以参考下：https://stackoverflow.com/questions/41008610/kafkaconsumer-0-10-java-api-error-message-no-current-assignment-for-partition","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566966283,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":131316,"user_name":"cuiyunfeng","can_delete":false,"product_type":"c1","uid":1399196,"ip_address":"","ucode":"7F76148ED2706C","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJjBL9wlHaH7GBicT9Gic7VmMNibOowYwpc7q6S6UEpwKcmLJ8I4pibwmwkSNuoORxzzZ3TjWte9wia0jw/132","comment_is_top":false,"comment_ctime":1567706986,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"18747576170","product_id":100029201,"comment_content":"重置位移前，执行consumer.poll()，可以让kafka强制更新担当的partition信息，以防止发生kafka rebalance后partition信息陈旧，然后再取得partition信息进行offset位移。或者也可以配合使用kafka listener来处理发生rebalance情况下，进行重置位移。","like_count":4,"discussions":[{"author":{"id":1054827,"avatar":"https://static001.geekbang.org/account/avatar/00/10/18/6b/a1448af1.jpg","nickname":"贝影","note":"","ucode":"19545C8DCBF8A2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":544823,"discussion_content":"原来如此","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1641724713,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":129683,"user_name":"What for","can_delete":false,"product_type":"c1","uid":1254381,"ip_address":"","ucode":"1308573CE047B0","user_header":"https://static001.geekbang.org/account/avatar/00/13/23/ed/a4a774a8.jpg","comment_is_top":false,"comment_ctime":1567219378,"is_pvip":false,"replies":[{"id":"48516","content":"嗯嗯，你可以这么认为，其实还有其他作用，比如获取集群信息后台主题数据等","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1567386218,"ip_address":"","comment_id":129683,"utype":1}],"discussion_count":1,"race_medal":0,"score":"18747088562","product_id":100029201,"comment_content":"请问一下老师在重设位移之前为什么要调用 consumer.poll 方法？是为了连接集群吗？","like_count":4,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":465601,"discussion_content":"嗯嗯，你可以这么认为，其实还有其他作用，比如获取集群信息后台主题数据等","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567386218,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":123102,"user_name":"Li Shunduo","can_delete":false,"product_type":"c1","uid":1222882,"ip_address":"","ucode":"6C5AB4129E9780","user_header":"https://static001.geekbang.org/account/avatar/00/12/a8/e2/f8e51df2.jpg","comment_is_top":false,"comment_ctime":1565604876,"is_pvip":false,"replies":[{"id":"45230","content":"嗯，必须是非active的group才行","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1565617023,"ip_address":"","comment_id":123102,"utype":1}],"discussion_count":1,"race_medal":0,"score":"18745474060","product_id":100029201,"comment_content":"试了下开着console consumer的时候去调整offset,遇到以下错误:<br>Error: Assignments can only be reset if the group &#39;test_group&#39; is inactive, but the current state is Stable.<br>停掉console consumer之后，就可以调整offset了。<br>好像不能动态调整?","like_count":5,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":462541,"discussion_content":"嗯，必须是非active的group才行","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1565617023,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":231281,"user_name":"James","can_delete":false,"product_type":"c1","uid":1134861,"ip_address":"","ucode":"48B0F2A334D1C1","user_header":"https://static001.geekbang.org/account/avatar/00/11/51/0d/fc1652fe.jpg","comment_is_top":false,"comment_ctime":1593623228,"is_pvip":false,"replies":[{"id":"85482","content":"Latest 策略表示把位移重设成最新末端位移，也就是LEO。Current 策略表示将位移调整成消费者当前提交的最新位移，是消费者已经提交的位移，后者必然小于等于LEO","user_name":"作者回复","user_name_real":"胡夕","uid":"1288090","ctime":1593736344,"ip_address":"","comment_id":231281,"utype":1}],"discussion_count":2,"race_medal":0,"score":"14478525116","product_id":100029201,"comment_content":"老师,你好.存在以下问题,麻烦解答下:<br>1.对文中解释的Latest与Current感觉区分不清楚，老能能详细举例介绍下;<br>文中是禁止提交位移,那么这两个应该都是一样,最新的位移位置.<br>要是可以提交位移呢;不是特别懂<br>2.第一条评论中,current主要是为了调试场景,要是有提交位移(50-&gt;100),那么重新上线使用current策略,最新提交位移是不是100;","like_count":3,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":500235,"discussion_content":"Latest 策略表示把位移重设成最新末端位移，也就是LEO。Current 策略表示将位移调整成消费者当前提交的最新位移，是消费者已经提交的位移，后者必然小于等于LEO","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1593736344,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1551385,"avatar":"https://static001.geekbang.org/account/avatar/00/17/ac/19/03d7d2e5.jpg","nickname":"Grivity","note":"","ucode":"B99EFA664673BA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":401981,"discussion_content":"消费者可见的最新消息的位移不应该是HW-1吗","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1633777228,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":134323,"user_name":"无菇朋友","can_delete":false,"product_type":"c1","uid":1035562,"ip_address":"","ucode":"80482C5F0464A3","user_header":"https://static001.geekbang.org/account/avatar/00/0f/cd/2a/bdbed6ed.jpg","comment_is_top":false,"comment_ctime":1568805861,"is_pvip":false,"replies":[{"id":"51543","content":"KafkaConsumer.seek方法支持指定单个分区进行重设位移","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1568853480,"ip_address":"","comment_id":134323,"utype":1}],"discussion_count":1,"race_medal":0,"score":"14453707749","product_id":100029201,"comment_content":"老师 问一下 如果 我想针对某个分区重置位移，怎么做","like_count":3,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":467702,"discussion_content":"KafkaConsumer.seek方法支持指定单个分区进行重设位移","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1568853480,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":129432,"user_name":"JasonZhi","can_delete":false,"product_type":"c1","uid":1282818,"ip_address":"","ucode":"6C23DCD592636D","user_header":"https://static001.geekbang.org/account/avatar/00/13/93/02/fcab58d1.jpg","comment_is_top":false,"comment_ctime":1567128581,"is_pvip":true,"replies":[{"id":"48222","content":"这是说的是手动设置位移的情况，自动设置位移是Kafka自动做的。当然也算是重设位移的一种","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1567133356,"ip_address":"","comment_id":129432,"utype":1}],"discussion_count":1,"race_medal":0,"score":"14452030469","product_id":100029201,"comment_content":"老师，不是还可以通过auto offset reset配置项重设位移吗？怎么这里没有说","like_count":3,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":465465,"discussion_content":"这是说的是手动设置位移的情况，自动设置位移是Kafka自动做的。当然也算是重设位移的一种","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567133356,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":127917,"user_name":"无菇朋友","can_delete":false,"product_type":"c1","uid":1035562,"ip_address":"","ucode":"80482C5F0464A3","user_header":"https://static001.geekbang.org/account/avatar/00/0f/cd/2a/bdbed6ed.jpg","comment_is_top":false,"comment_ctime":1566809157,"is_pvip":false,"replies":[{"id":"47553","content":"如果你上线的consumer程序有bug，需要重演自上线起处理过的消息，那么可以考虑使用这个策略","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1566870259,"ip_address":"","comment_id":127917,"utype":1}],"discussion_count":1,"race_medal":0,"score":"14451711045","product_id":100029201,"comment_content":"请问老师，current这个选项的应用场景是什么？","like_count":3,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":464705,"discussion_content":"如果你上线的consumer程序有bug，需要重演自上线起处理过的消息，那么可以考虑使用这个策略","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566870259,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":126917,"user_name":"锋芒","can_delete":false,"product_type":"c1","uid":1320419,"ip_address":"","ucode":"BB5284E3C8D78D","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/ach5TNuIu8T4Of8ibvfWM4JPic5uQn9Y7TgGjBHLp2iar4icxJzs14bpUXV9OdYiciblvJl14zSqXjwtDffHnSTqbD6g/132","comment_is_top":false,"comment_ctime":1566521451,"is_pvip":false,"replies":[{"id":"47059","content":"不需要的","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1566603150,"ip_address":"","comment_id":126917,"utype":1}],"discussion_count":1,"race_medal":0,"score":"14451423339","product_id":100029201,"comment_content":"请问，用命令行重设位移，应该在当前group 的leader 节点上？","like_count":3,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":464242,"discussion_content":"不需要的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566603150,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":214077,"user_name":"Curry","can_delete":false,"product_type":"c1","uid":1529871,"ip_address":"","ucode":"AABD3AA2EB2C95","user_header":"https://static001.geekbang.org/account/avatar/00/17/58/0f/c412b4a9.jpg","comment_is_top":false,"comment_ctime":1588650669,"is_pvip":false,"replies":[{"id":"79340","content":"目前可以通过Consumer API的seek方法来实现","user_name":"作者回复","user_name_real":"胡夕","uid":"1288090","ctime":1588724912,"ip_address":"","comment_id":214077,"utype":1}],"discussion_count":3,"race_medal":0,"score":"10178585261","product_id":100029201,"comment_content":"请问如何不停止程序去指定位移呢？","like_count":2,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":493949,"discussion_content":"目前可以通过Consumer API的seek方法来实现","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1588724912,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":1,"child_discussions":[{"author":{"id":1367048,"avatar":"https://static001.geekbang.org/account/avatar/00/14/dc/08/64f5ab52.jpg","nickname":"陈斌","note":"","ucode":"B639AB5F6AA03D","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":550648,"discussion_content":"通过Consumer API的seek方法 重设位移之后消费者会立刻重指定的位移处重新消费吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1644653890,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":493949,"ip_address":""},"score":550648,"extra":""}]},{"author":{"id":1139113,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/W2O5VwL8wN6VIGPGCHIBIFuzhwG3Jic5Y90E049bLmxst9L67fhIDUNVlRpVqBfAG3Ykn2Rzl8EFiczWv0IVcLVw/132","nickname":"七步","note":"","ucode":"F7ECEB9250B7CB","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":264484,"discussion_content":"要去试下，之前都是停掉\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1589329719,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":187998,"user_name":"helloworld","can_delete":false,"product_type":"c1","uid":1015754,"ip_address":"","ucode":"00DF2FEC58D2E6","user_header":"https://static001.geekbang.org/account/avatar/00/0f/7f/ca/ea85bfdd.jpg","comment_is_top":false,"comment_ctime":1584289885,"is_pvip":false,"replies":[{"id":"72584","content":"使用consumer-groups命令可以设置单个分区的位移，文中只是用--all-topics举个例子。比如指定--topics topic1:0,1,2","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1584319849,"ip_address":"","comment_id":187998,"utype":1}],"discussion_count":2,"race_medal":0,"score":"10174224477","product_id":100029201,"comment_content":"这里的--all-topics是什么含义呢？为什么Shift-By-N、DateTime与Duration均没有？是不是可以这么认为：通过脚本的方式设置位移只能设置Topic的所有位移，并且所设置的位移会使各个分区都一样？而不能单独设置某个分区的位移？？","like_count":2,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":487311,"discussion_content":"使用consumer-groups命令可以设置单个分区的位移，文中只是用--all-topics举个例子。比如指定--topics topic1:0,1,2","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584319849,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1015754,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/7f/ca/ea85bfdd.jpg","nickname":"helloworld","note":"","ucode":"00DF2FEC58D2E6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":205535,"discussion_content":"感谢老师！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584320758,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":183444,"user_name":"chp","can_delete":false,"product_type":"c1","uid":1112415,"ip_address":"","ucode":"F0A2442230CD45","user_header":"https://static001.geekbang.org/account/avatar/00/10/f9/5f/b0a125a9.jpg","comment_is_top":false,"comment_ctime":1583042122,"is_pvip":false,"replies":[{"id":"71219","content":"后面有执行poll方法了没？","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1583200002,"ip_address":"","comment_id":183444,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10172976714","product_id":100029201,"comment_content":"老师，为啥我指定消费者位移没效果<br>-------------------------------------------------<br>String topic = &quot;foo&quot;;<br>        try (final KafkaConsumer&lt;String, String&gt; consumer =<br>                      new KafkaConsumer&lt;&gt;(consumerProperties)) {<br>            consumer.subscribe(Collections.singleton(topic));<br>            ConsumerRecords consumerRecords = consumer.poll(0);<br>            Iterable&lt;ConsumerRecord&lt;String, String&gt;&gt; iterable = consumerRecords.records(&quot;foo&quot;);<br>            for (Iterator iterator = iterable.iterator(); iterator.hasNext();) {<br>                ConsumerRecord&lt;String, String&gt; consumerRecord = (ConsumerRecord)iterator.next();<br>                log.info(&quot;topic = {}, partition = {}, offset = {}, key = {}, value = {}\\n&quot;,<br>                        consumerRecord.topic(), consumerRecord.partition(), consumerRecord.offset(),<br>                        consumerRecord.key(), consumerRecord.value());<br>            }<br>            for (PartitionInfo info : consumer.partitionsFor(topic)) {<br>                TopicPartition tp = new TopicPartition(topic, info.partition());<br>                consumer.seek(tp, 3L);<br>            }<br>        }<br>----------------------------------------------------------<br>没报错，就是设置了位移后，offset没变化","like_count":2,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":485692,"discussion_content":"后面有执行poll方法了没？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1583200002,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":279888,"user_name":"归零","can_delete":false,"product_type":"c1","uid":1103208,"ip_address":"","ucode":"C99B8E93009A46","user_header":"https://static001.geekbang.org/account/avatar/00/10/d5/68/2201b6b9.jpg","comment_is_top":false,"comment_ctime":1613994125,"is_pvip":true,"replies":[{"id":"102234","content":"并不是说重设位移和禁止自动提交一定是互斥的。只是你既然要重设位移说明你要亲自对位移进行管理，那么最好禁掉自动提交","user_name":"作者回复","user_name_real":"胡夕","uid":"1288090","ctime":1614822031,"ip_address":"","comment_id":279888,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5908961421","product_id":100029201,"comment_content":"老师，文中说你要创建的消费者程序，要禁止自动提交位移。为什么重设位移需要禁止自动提交呢？二者有什么关系吗？谢谢🙏","like_count":1,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":515906,"discussion_content":"并不是说重设位移和禁止自动提交一定是互斥的。只是你既然要重设位移说明你要亲自对位移进行管理，那么最好禁掉自动提交","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1614822031,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":250449,"user_name":"尚小树","can_delete":false,"product_type":"c1","uid":2165300,"ip_address":"","ucode":"9BCB0DF0F3C8E4","user_header":"https://static001.geekbang.org/account/avatar/00/21/0a/34/3e29eb5a.jpg","comment_is_top":false,"comment_ctime":1601089159,"is_pvip":false,"replies":[{"id":"91721","content":"这取决于记录不存在的比例。是大部分时候都不存在还是只有偶发的不存在。如果是后者可以考虑将不存在的零星消息缓存起来以待后面重新处理。如果是前者，则需要通盘考虑消费逻辑。","user_name":"作者回复","user_name_real":"胡夕","uid":"1288090","ctime":1601176983,"ip_address":"","comment_id":250449,"utype":1}],"discussion_count":2,"race_medal":0,"score":"5896056455","product_id":100029201,"comment_content":"老师好。我遇到个问题，在消费消息过程中要查询数据库中的记录，但是消息来的时候库中记录不一定存在，大概延时0-30秒，这样就导致消费逻辑不成功。经讨论保证记录在消息前写入不可行。<br><br>所以只能重复消费，我用的办法开个线程睡一会再重新把不成功的消息写回topic中，如果几次不成功就记录错误日志不会永远循环。<br><br>想问老师这样做有没有什么问题，有没有更好的解决方案呢☺️谢谢老师。","like_count":1,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":506209,"discussion_content":"这取决于记录不存在的比例。是大部分时候都不存在还是只有偶发的不存在。如果是后者可以考虑将不存在的零星消息缓存起来以待后面重新处理。如果是前者，则需要通盘考虑消费逻辑。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1601176983,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2165300,"avatar":"https://static001.geekbang.org/account/avatar/00/21/0a/34/3e29eb5a.jpg","nickname":"尚小树","note":"","ucode":"9BCB0DF0F3C8E4","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":309033,"discussion_content":"好的，谢谢老师","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1601177092,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":238256,"user_name":"对与错","can_delete":false,"product_type":"c1","uid":1682027,"ip_address":"","ucode":"EF55733E3BD78B","user_header":"https://static001.geekbang.org/account/avatar/00/19/aa/6b/ab9a072a.jpg","comment_is_top":false,"comment_ctime":1596103613,"is_pvip":false,"replies":[{"id":"88295","content":"ConsumerConfig.AUTO_OFFSET_RESET_CONFIG是出现位移重设置时的策略。平时位移设置的策略不取决于这个参数","user_name":"作者回复","user_name_real":"胡夕","uid":"1288090","ctime":1596426051,"ip_address":"","comment_id":238256,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5891070909","product_id":100029201,"comment_content":"请问ConsumerConfig.AUTO_OFFSET_RESET_CONFIG, &quot;earliest&quot;这个配置和seek()方法之间有关系吗?比如我设置的是earliest，但是使用的是seekToEnd","like_count":1,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":502687,"discussion_content":"ConsumerConfig.AUTO_OFFSET_RESET_CONFIG是出现位移重设置时的策略。平时位移设置的策略不取决于这个参数","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1596426051,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":235437,"user_name":"见南山","can_delete":false,"product_type":"c1","uid":1118111,"ip_address":"","ucode":"6A8BB82B7573CA","user_header":"https://static001.geekbang.org/account/avatar/00/11/0f/9f/f4b06bd5.jpg","comment_is_top":false,"comment_ctime":1595036038,"is_pvip":false,"replies":[{"id":"87079","content":"对，那个参数只有在没有位移记录时才管用<br>","user_name":"作者回复","user_name_real":"胡夕","uid":"1288090","ctime":1595212862,"ip_address":"","comment_id":235437,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5890003334","product_id":100029201,"comment_content":"咨询个问题：重设位移后，消费者就会从位移处消费吗？是不是有个参数auto. reset啥的就失效了","like_count":1,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":501718,"discussion_content":"对，那个参数只有在没有位移记录时才管用\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1595212862,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":228239,"user_name":"J.Smile","can_delete":false,"product_type":"c1","uid":1336475,"ip_address":"","ucode":"C4D98DFDBF7584","user_header":"https://static001.geekbang.org/account/avatar/00/14/64/9b/0b578b08.jpg","comment_is_top":false,"comment_ctime":1592622143,"is_pvip":false,"replies":[{"id":"84195","content":"目前如何通过命令行重设位移必须要求消费者组是非active的。你可以选择A重新消费，也可以创建一个新的B来消费，都是可以的","user_name":"作者回复","user_name_real":"胡夕","uid":"1288090","ctime":1592662855,"ip_address":"","comment_id":228239,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5887589439","product_id":100029201,"comment_content":"有个疑问，重设位移一般是在同一个消费者程序中使用的吗，比如说我消费者A正在启动运行中且已经消费完了所有分区数据，那么我想让A重新消费一遍，我是应该重新启动一个消费者B呢？还是在A的基础上添加重设位移的代码呢？还有就是重设位移期间不能有消费者加入或退出吧？不然会引起reblance导致重设位移后消费者A可能无法重新消费一遍原来的数据了！<br>","like_count":1,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":498969,"discussion_content":"目前如何通过命令行重设位移必须要求消费者组是非active的。你可以选择A重新消费，也可以创建一个新的B来消费，都是可以的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1592662855,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":217026,"user_name":"胡小禾","can_delete":false,"product_type":"c1","uid":1132315,"ip_address":"","ucode":"1C23B7492C0C9E","user_header":"https://static001.geekbang.org/account/avatar/00/11/47/1b/64262861.jpg","comment_is_top":false,"comment_ctime":1589388374,"is_pvip":false,"replies":[{"id":"80320","content":"当然是可以保证的，只是需要一些额外的方案~","user_name":"作者回复","user_name_real":"胡夕","uid":"1288090","ctime":1589459139,"ip_address":"","comment_id":217026,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5884355670","product_id":100029201,"comment_content":"“消息处理逻辑非常复杂，处理代价很高，同时你又不关心消息之间的顺序，那么传统的消息中间件是比较合适的”<br><br>言下之意：<br>RMQ 这样的传统MQ是不能保证消费顺序的了？","like_count":1,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":495011,"discussion_content":"当然是可以保证的，只是需要一些额外的方案~","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1589459139,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":187966,"user_name":"aof","can_delete":false,"product_type":"c1","uid":1062864,"ip_address":"","ucode":"5815D63C4926BC","user_header":"https://static001.geekbang.org/account/avatar/00/10/37/d0/26975fba.jpg","comment_is_top":false,"comment_ctime":1584284970,"is_pvip":false,"replies":[{"id":"72585","content":"哈哈，还是应该看完再去的，对吧？ 加油~","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1584319894,"ip_address":"","comment_id":187966,"utype":1}],"discussion_count":2,"race_medal":0,"score":"5879252266","product_id":100029201,"comment_content":"面阿里问道了这节讲的内容，如何基于时间维度重新消费过去某个时间之后的数据，但是我没把课程看完😂😂","like_count":1,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":487305,"discussion_content":"哈哈，还是应该看完再去的，对吧？ 加油~","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584319894,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1062864,"avatar":"https://static001.geekbang.org/account/avatar/00/10/37/d0/26975fba.jpg","nickname":"aof","note":"","ucode":"5815D63C4926BC","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":206774,"discussion_content":"对啊，得好好再看看了😂","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584441936,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":183491,"user_name":"Shawn.C","can_delete":false,"product_type":"c1","uid":1046295,"ip_address":"","ucode":"9CE004D0325320","user_header":"https://static001.geekbang.org/account/avatar/00/0f/f7/17/f94e987f.jpg","comment_is_top":false,"comment_ctime":1583051284,"is_pvip":true,"replies":[{"id":"71218","content":"看到这句了吗？ “This function evaluates lazily” 这个方法不是即时生效的，需要调用一轮poll才可能生效","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1583199898,"ip_address":"","comment_id":183491,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5878018580","product_id":100029201,"comment_content":"按照上面的例子seekToEnd和seekToBeginning并不能生效。下面这段来做对于方法的注释说明。需要在调用完上面方法后再调用position才能生效。<br>Seek to the first offset for each of the given partitions. This function evaluates lazily, seeking to the<br> first offset in all partitions only when {@link #poll(Duration)} or {@link #position(TopicPartition)} are called.","like_count":1,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":485698,"discussion_content":"看到这句了吗？ “This function evaluates lazily” 这个方法不是即时生效的，需要调用一轮poll才可能生效","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1583199898,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":181712,"user_name":"兔2🐰🍃","can_delete":false,"product_type":"c1","uid":1096984,"ip_address":"","ucode":"1FEDA044BB6CBD","user_header":"https://static001.geekbang.org/account/avatar/00/10/bd/18/2af6bf4b.jpg","comment_is_top":false,"comment_ctime":1582622119,"is_pvip":false,"replies":[{"id":"70434","content":"具体设置时间取决于你的业务场景。poll里面的超时时间主要用于定期让consumer从获取消息的阻塞状态中唤醒以便执行一些其他的任务。如果你的consumer除了消费消息没有什么特别的工作要做，设置成Integer.MAX都是可以的：）","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1582680247,"ip_address":"","comment_id":181712,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5877589415","product_id":100029201,"comment_content":"胡老师您好，https:&#47;&#47;www.cnblogs.com&#47;huxi2b&#47;p&#47;10773559.html 这里讲到的poll(0),跟Duration.ofSeconds(0)的区别，前者是括号内的超时时间不包含更新元数据信息的时间，后者是包含更新元数据时间，0为瞬时触发，那么可以用Duration.ofSeconds(100) 这样的么，设置个更新时间？可以的话，一般建议设置多少为好？","like_count":1,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":485090,"discussion_content":"具体设置时间取决于你的业务场景。poll里面的超时时间主要用于定期让consumer从获取消息的阻塞状态中唤醒以便执行一些其他的任务。如果你的consumer除了消费消息没有什么特别的工作要做，设置成Integer.MAX都是可以的：）","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582680247,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":180275,"user_name":"Ryoma","can_delete":false,"product_type":"c1","uid":1130590,"ip_address":"","ucode":"7F692369239692","user_header":"https://static001.geekbang.org/account/avatar/00/11/40/5e/b8fada94.jpg","comment_is_top":false,"comment_ctime":1582247315,"is_pvip":true,"replies":[{"id":"70237","content":"如果没有提交位移的话offset就还是50啊：）","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1582506673,"ip_address":"","comment_id":180275,"utype":1}],"discussion_count":1,"race_medal":2,"score":"5877214611","product_id":100029201,"comment_content":"老师你的原话：current主要是为了调试场景。比如这样的场景：你停掉了consumer，现在offset=50，然后修改了consumer代码重新上线，consumer开始从50消费，运行了一段时间发现你修改的代码有问题，还要继续改，那么下掉consumer，将offset调回current，改代码之后再上线，consumer从50消费。此时current策略就显得很方便了，对吧？<br><br>这里我理解当重新上线时， current 已经不再是 50 了，只能通过 Specified-Offest 调整到 50，而不是靠 current 策略了","like_count":1,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":484594,"discussion_content":"如果没有提交位移的话offset就还是50啊：）","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582506673,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":167520,"user_name":"hxy","can_delete":false,"product_type":"c1","uid":1248553,"ip_address":"","ucode":"431327E8CA4364","user_header":"https://static001.geekbang.org/account/avatar/00/13/0d/29/18272af9.jpg","comment_is_top":false,"comment_ctime":1577847487,"is_pvip":true,"replies":[{"id":"65074","content":"理论上讲是可以的：）","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1577926509,"ip_address":"","comment_id":167520,"utype":1}],"discussion_count":1,"race_medal":4,"score":"5872814783","product_id":100029201,"comment_content":"请问老师，低版本的kafka将offset存储在zk上，能否通过修改zk上记录的offset来实现重设消费者组位移？","like_count":1,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":479889,"discussion_content":"理论上讲是可以的：）","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577926509,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":150193,"user_name":"注定非凡","can_delete":false,"product_type":"c1","uid":1113597,"ip_address":"","ucode":"80673056E131B7","user_header":"https://static001.geekbang.org/account/avatar/00/10/fd/fd/326be9bb.jpg","comment_is_top":false,"comment_ctime":1573476965,"is_pvip":true,"discussion_count":1,"race_medal":0,"score":"5868444261","product_id":100029201,"comment_content":"1，为什么要：<br>当需要实现重复消费历史数据的时候，就需要重设消费者组位移<br><br>2，为什么能：<br>\tA ：Kafka和传统的消费引擎在设计上有很大区别，其中一个比较显著的区别是：Kafka的消息费者读取消息是可以重演的（replayable）<br>\tB ：如RabbitMQ或ActiveMQ这样的传统消息中间件，他们处理和响应消息的方式是破坏性的（destructive）,一旦消息被成功处理，就会被从Broker上删除。<br>\tC ：Kafka，由于它是基于日志结构（log-based）的消息引擎，消费者在消费消息时，仅仅是从磁盘文件上读取数据，是只读操作，因此消费者不会删除消息数据。同时，由于位移数据是由消费者控制的，因此他能够很容易的修改位移值，实现重复消费历史数据的功能。<br><br>3，重设位移策略<br>\tA ：位移维度：根据位移值来重设。直接把消费者的位移值重设成我们给定的值。<br>\tB ：时间维度：可以给定一个时间，让消费者吧位移调整成大于该时间的最小位移；亦可以给出一段时间间隔，如30分钟，然后让消费者直接将位移调回30分钟之前的位移值。<br>七种策略：<br>（1）Earliest：将位移调整到主题当前最早位移处。可以实现重新消费主题的所有消息<br>（2）Latest：把位移重设成最新末端位移。可以跳过所有历史消息，从最新消息开始消费<br>（3）Current：将位移调整成消费者当前提交的最新位移，可以实现把位移重设到消费者重启时的位置。<br>（4）Specified-Offset：把位移值调整到指定的位移处。这可以实现跳过某条错误信息，避免造成消费阻塞。<br>（5）Shift-By-N：相对于当前位值的位移值，可以向前或向后，跳出一段距离。<br>（6）DataTime：指定一个时间，然后将位移重置到该时间之后的最早位移处。<br>（7）Duration：给定相对时间间隔，让位移调整到距离当前给定时间间隔的位移处。<br><br>4 重设的方法<br>\tA ：通过消费者API来实现<br>\tB ：通过Kafka-consumer-groups命令行脚本来实现<br><br>\t消费者API注意事项：<br>\t（1）：要创建消费者程序，要禁止自动提交位移<br>\t（2）：组ID要设置成要重设的消费者组的组ID<br>\t（3）：调用seekToBeginning方法时，要一次性构造主题的所有分区对象<br>\t（4）：最重要的是，一定要调用带长整形的poll方法，而不调用consumer.poll(Duration.ofSecond(0))。<br>\t（5）：要实现DateTime策略：需要借助KafkaConsumer.offsetsForTimes方法。<br>\t<br>\t总之：使用Java API的方式来实现重设策略的主要入口方法，就是seek方法。<br><br>\t命令行方式注意事项：<br>\t（1）bin&#47;kafka-consumer-groups.sh --bootstrap-server kafka-host:port --group test-group --reset-offsets --all-topics --to-earliest –execute<br>","like_count":1,"discussions":[{"author":{"id":1127624,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKPmOyph1XeszC69tTLENkZFJqjJ7CqtxlSpNEiaonB9ebLnKEh8w7gk7TXQiay4JvA0fQtLYKw718Q/132","nickname":"雨落漂洋","note":"","ucode":"9D53DB4482AA24","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":49600,"discussion_content":"笔记整理得不错","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573615780,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":134691,"user_name":"菜鸟和谐号","can_delete":false,"product_type":"c1","uid":1632108,"ip_address":"","ucode":"649BD61DC406C2","user_header":"https://static001.geekbang.org/account/avatar/00/18/e7/6c/aa73b7a7.jpg","comment_is_top":false,"comment_ctime":1568896160,"is_pvip":false,"replies":[{"id":"51717","content":"只能使用API来实现了，脚本方式不可以","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1568940051,"ip_address":"","comment_id":134691,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5863863456","product_id":100029201,"comment_content":"bin&#47;kafka-consumer-groups.sh --bootstrap-server kafka-host:port --group test-group --reset-offsets --all-topics --to-earliest –execute <br>老师，这是把当前group下的所有topic位移提交到当前最早的位移处，当前group的某个topic怎么设置？","like_count":1,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":467863,"discussion_content":"只能使用API来实现了，脚本方式不可以","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1568940051,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":126617,"user_name":"此方彼方Francis","can_delete":false,"product_type":"c1","uid":1001390,"ip_address":"","ucode":"73E6C93CF1FE39","user_header":"https://static001.geekbang.org/account/avatar/00/0f/47/ae/0a5f7a56.jpg","comment_is_top":false,"comment_ctime":1566436685,"is_pvip":false,"replies":[{"id":"46836","content":"如果使用程序API的方式不必停止消费","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1566440410,"ip_address":"","comment_id":126617,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5861403981","product_id":100029201,"comment_content":"有遇到过，之前有一条Kafka消息的crc校验值出错了（不知道为什么会出错，非常奇怪），这种状况下就只能跳过这条消息了。 <br>不过有个问题请教老师，重设消费者位移之前，是不是有必要让消费者停止消费？","like_count":1,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":464086,"discussion_content":"如果使用程序API的方式不必停止消费","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566440410,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":123105,"user_name":"常银玲","can_delete":false,"product_type":"c1","uid":1252109,"ip_address":"","ucode":"894A34D9AD8942","user_header":"https://static001.geekbang.org/account/avatar/00/13/1b/0d/9c3e2241.jpg","comment_is_top":false,"comment_ctime":1565605760,"is_pvip":false,"replies":[{"id":"45229","content":"我觉得可以用啊","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1565617008,"ip_address":"","comment_id":123105,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5860573056","product_id":100029201,"comment_content":"老师，留言想问一个问题，现在项目有一个需求是做一套仿真系统，仿真的数据来源于之前历史数据，查询准备用es像这种情况我们可以用kafka吗？","like_count":2,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":462542,"discussion_content":"我觉得可以用啊","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1565617008,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":122825,"user_name":"南山","can_delete":false,"product_type":"c1","uid":1119593,"ip_address":"","ucode":"94656FE4A6C378","user_header":"https://static001.geekbang.org/account/avatar/00/11/15/69/187b9968.jpg","comment_is_top":false,"comment_ctime":1565536754,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"5860504050","product_id":100029201,"comment_content":"生产环境中遇到过这种情况，<br>现象是:本来正常消费的一个topic，突然因为业务调整，大数据侧向此topic推送了大量的另一个平台的历史数据，而这些数据对现在使用此topic的业务场景是无效数据，并且评估到按现有能力吧历史数据消化完需要几个小时时间，业务上是不能接受的<br>    最终就是通过调整位移来“越过”历史数据，消费最新的数据，解决了可能是故障的一次","like_count":1},{"had_liked":false,"id":122467,"user_name":"开水","can_delete":false,"product_type":"c1","uid":1528555,"ip_address":"","ucode":"651491C38B925B","user_header":"https://static001.geekbang.org/account/avatar/00/17/52/eb/eec719f3.jpg","comment_is_top":false,"comment_ctime":1565400001,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5860367297","product_id":100029201,"comment_content":"我们用的0.9版本，当机器资源跟不上的时候，消费跟不上生产速度。所以只好把不怎么重要的消息offset重设了，用的是直接set znode的方式。","like_count":1},{"had_liked":false,"id":353222,"user_name":"Wisdom","can_delete":false,"product_type":"c1","uid":1098980,"ip_address":"广东","ucode":"0787F954B66E93","user_header":"https://static001.geekbang.org/account/avatar/00/10/c4/e4/81ee2d8f.jpg","comment_is_top":false,"comment_ctime":1659279114,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1659279114","product_id":100029201,"comment_content":"在生产环境下，如果想在不停机不重启当前的已有的消费者（一直处于active状态），扩容启动一个新的消费者来重置位移，新消费者中通过api的方式重置位移，但也只能重置自己当前分配到的主题分区，其他消费者的分区仍然是改变不了 ，有其他方式统一调整吗？ 命令行的方式又必须让所有消费者处于非active状态","like_count":0},{"had_liked":false,"id":333112,"user_name":"旺仔小馒头","can_delete":false,"product_type":"c1","uid":2358947,"ip_address":"","ucode":"45BE8E943C794C","user_header":"https://static001.geekbang.org/account/avatar/00/23/fe/a3/414c47cc.jpg","comment_is_top":false,"comment_ctime":1644078475,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1644078475","product_id":100029201,"comment_content":"老师你好，重设消费者组位移时是否需要要先停掉broker后在执行设置命令呢？我在线上设置时，必须叫我重启，是kafka 版本问题吗？","like_count":0},{"had_liked":false,"id":325694,"user_name":"Sampson","can_delete":false,"product_type":"c1","uid":1418226,"ip_address":"","ucode":"BA78CA29A6D898","user_header":"https://static001.geekbang.org/account/avatar/00/15/a3/f2/ab8c5183.jpg","comment_is_top":false,"comment_ctime":1639100395,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1639100395","product_id":100029201,"comment_content":"Current 回到最近提交处，我看到您在其他学员的回复中提到这个场景适用于：假设offset=50，停掉consumer，修改代码，然后上线，运行了一段时间之后发现修改的代码有问题，还要继续改，那么下掉consumer，将offset调回current，改代码之后再上线，consumer从50消费 。这里面又个问题请教下，在我的consumer消费的这段时间内，位移值都不提交吗 ？ 如果提交的话，current就会变成一个比50大的数了吧 ，也回不去了呀 。","like_count":0},{"had_liked":false,"id":324073,"user_name":"黄婷婷","can_delete":false,"product_type":"c1","uid":1467134,"ip_address":"","ucode":"8B65636C9197A2","user_header":"https://static001.geekbang.org/account/avatar/00/16/62/fe/6d2fa6b9.jpg","comment_is_top":false,"comment_ctime":1638279093,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1638279093","product_id":100029201,"comment_content":"老师，时间维度，这个时间是指什么时间","like_count":0},{"had_liked":false,"id":312454,"user_name":"Michael","can_delete":false,"product_type":"c1","uid":1015222,"ip_address":"","ucode":"27EB4A725CE14E","user_header":"https://static001.geekbang.org/account/avatar/00/0f/7d/b6/abdebdeb.jpg","comment_is_top":false,"comment_ctime":1631806707,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1631806707","product_id":100029201,"comment_content":"这个重置是一次性的操作么？还是说是一个静态配置？如果是一个静态配置那意思是每次consumer都会从配置的策略处开始消费？<br>还有一个问题是current相对的是哪个标记来说的？按理说我设置的如果是current，但是我重新部署了consumer，当前consumer在重启之前已经消费了消息了，那kafka的current是怎么确定的？是当前consumer消费消息之前是current么？","like_count":0},{"had_liked":false,"id":305964,"user_name":"if...else...","can_delete":false,"product_type":"c1","uid":2550743,"ip_address":"","ucode":"D0565908C99695","user_header":"https://static001.geekbang.org/account/avatar/00/26/eb/d7/90391376.jpg","comment_is_top":false,"comment_ctime":1628246193,"is_pvip":false,"discussion_count":0,"race_medal":4,"score":"1628246193","product_id":100029201,"comment_content":"非常棒，学习了","like_count":0},{"had_liked":false,"id":281388,"user_name":"在路上","can_delete":false,"product_type":"c1","uid":1724215,"ip_address":"","ucode":"FA8E8FD88886AF","user_header":"https://static001.geekbang.org/account/avatar/00/1a/4f/37/ad1ca21d.jpg","comment_is_top":false,"comment_ctime":1614735844,"is_pvip":true,"replies":[{"id":"102226","content":"没法，只能为非启动状态中的group进行重置。不过你可以使用consumer.seek来重置正在消费过程中的group的位移","user_name":"作者回复","user_name_real":"胡夕","uid":"1288090","ctime":1614821682,"ip_address":"","comment_id":281388,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1614735844","product_id":100029201,"comment_content":"老师，如果某个group正在消费，是不是无法进行重置？","like_count":0,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":516385,"discussion_content":"没法，只能为非启动状态中的group进行重置。不过你可以使用consumer.seek来重置正在消费过程中的group的位移","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1614821682,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":277332,"user_name":"你为啥那么牛","can_delete":false,"product_type":"c1","uid":1503506,"ip_address":"","ucode":"1ABC604A54A8F6","user_header":"https://static001.geekbang.org/account/avatar/00/16/f1/12/7dac30d6.jpg","comment_is_top":false,"comment_ctime":1612360371,"is_pvip":false,"replies":[{"id":"101019","content":"一、具体的判断看个人的使用场景和喜好吧，我也给不出统一的标准；<br>二、broker端保存了当前已提交的最新位移","user_name":"作者回复","user_name_real":"胡夕","uid":"1288090","ctime":1612833823,"ip_address":"","comment_id":277332,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1612360371","product_id":100029201,"comment_content":"这篇文章至少有两处，无法理解。<br>一是普通消息中间件与kafka选择问题，场景不太好判断哦。<br>二是current 重置位移的问题，broker是如何判断最新提交位移的？<br>消费程序业务逻辑有问题，但有可能不至于抛异常，位移时可以正常提交的。<br>已提交位移，在生产程序有数据的情况下，应该是时刻在增加的。<br>","like_count":0,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":515009,"discussion_content":"一、具体的判断看个人的使用场景和喜好吧，我也给不出统一的标准；\n二、broker端保存了当前已提交的最新位移","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1612833823,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":273064,"user_name":"mickle","can_delete":false,"product_type":"c1","uid":1201493,"ip_address":"","ucode":"1F89608B5E06C7","user_header":"https://static001.geekbang.org/account/avatar/00/12/55/55/19ec7b0e.jpg","comment_is_top":false,"comment_ctime":1610423842,"is_pvip":false,"replies":[{"id":"99091","content":"及时使用自动提交也可以手动设置位移的。能否贴下代码看看","user_name":"作者回复","user_name_real":"胡夕","uid":"1288090","ctime":1610620812,"ip_address":"","comment_id":273064,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1610423842","product_id":100029201,"comment_content":"经过我的实战，kafka_2.11-2.0.0， java kafka-clents  2.1.1 , 使用 seekToEnd 方法前后调用 poll 方法都没有生效，但是当我把 props.put(ConsumerConfig.ENABLE_AUTO_COMMIT_CONFIG, &quot;false&quot;) 注释掉，改成自动提交就生效了，似乎和老师讲得不一样，老师能给指点一下吗？","like_count":0,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":513479,"discussion_content":"及时使用自动提交也可以手动设置位移的。能否贴下代码看看","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1610620812,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":272962,"user_name":"mickle","can_delete":false,"product_type":"c1","uid":1201493,"ip_address":"","ucode":"1F89608B5E06C7","user_header":"https://static001.geekbang.org/account/avatar/00/12/55/55/19ec7b0e.jpg","comment_is_top":false,"comment_ctime":1610368487,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1610368487","product_id":100029201,"comment_content":"实战发现seekToEnd 在禁止位移自动提交后，即便是调用poll也不生笑，改成自动提交就生效了，kafka版本2.0.0，跟老师说的不太一致，这其中还有什么奥妙吗？","like_count":0},{"had_liked":false,"id":268457,"user_name":"Geek_765d72","can_delete":false,"product_type":"c1","uid":1921808,"ip_address":"","ucode":"B7F1809E8232B7","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epXsERdnntpaLibOekGuTV9utWLsGUYfOdrh8JtZoictBgf1ATomtGe3hX70UFDdTKBYeVkjg5icVCVA/132","comment_is_top":false,"comment_ctime":1608205441,"is_pvip":false,"replies":[{"id":"97591","content":"可能的情况是，消息创建时直接指定了时间戳。我的建议是：不要这么做","user_name":"作者回复","user_name_real":"胡夕","uid":"1288090","ctime":1608516714,"ip_address":"","comment_id":268457,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1608205441","product_id":100029201,"comment_content":"老师有两个问题<br> 命令行不支持重置某个topic group 下特定分区的偏移量吗<br>还有我发现某个分区的消息偏移值大的数据比偏移值小的数据创建时间更早，这种情况为什么会发生呢","like_count":0,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":511946,"discussion_content":"可能的情况是，消息创建时直接指定了时间戳。我的建议是：不要这么做","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1608516714,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":265009,"user_name":"风","can_delete":false,"product_type":"c1","uid":1147929,"ip_address":"","ucode":"AFDBEFA49F269E","user_header":"https://static001.geekbang.org/account/avatar/00/11/84/19/7ed2ffa6.jpg","comment_is_top":false,"comment_ctime":1606732946,"is_pvip":true,"replies":[{"id":"97818","content":"下掉consumer后,如果消费途中没有提交位移的话,消费者重启不还是从50开始消费吗？<br><br>-- 对啊，就是从50重新消费。<br><br>这里说的就是consumer不会提交位移","user_name":"作者回复","user_name_real":"胡夕","uid":"1288090","ctime":1608775625,"ip_address":"","comment_id":265009,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1606732946","product_id":100029201,"comment_content":"原问题：current是回到最近提交位移处，但是消费者不是本来就从最近提交处继续消费吗<br>老师回答：current主要是为了调试场景。比如这样的场景：你停掉了consumer，现在offset=50，然后修改了consumer代码重新上线，consumer开始从50消费，运行了一段时间发现你修改的代码有问题，还要继续改，那么下掉consumer，将offset调回current，改代码之后再上线，consumer从50消费。此时current策略就显得很方便了，对吧？<br>下掉consumer后,如果消费途中没有提交位移的话,消费者重启不还是从50开始消费吗？如果消费者中途提交了位移100,那设置为current,最新提交位移处不是变为100吗？怎么从50重新消费","like_count":0,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":510766,"discussion_content":"下掉consumer后,如果消费途中没有提交位移的话,消费者重启不还是从50开始消费吗？\n\n-- 对啊，就是从50重新消费。\n\n这里说的就是consumer不会提交位移","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1608775625,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":261989,"user_name":"对与错","can_delete":false,"product_type":"c1","uid":1682027,"ip_address":"","ucode":"EF55733E3BD78B","user_header":"https://static001.geekbang.org/account/avatar/00/19/aa/6b/ab9a072a.jpg","comment_is_top":false,"comment_ctime":1605600530,"is_pvip":false,"replies":[{"id":"95345","content":"1. 自动提交的话你压根不用管位移提交的事情<br>2. 你大致可以认为poll内部自己维护了一个指针来记录它拉取到了那里，虽然它不是我们常说的consumer offset<br>3. spring-kafka确实不太了解，抱歉：（","user_name":"作者回复","user_name_real":"胡夕","uid":"1288090","ctime":1605838726,"ip_address":"","comment_id":261989,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1605600530","product_id":100029201,"comment_content":"我这里有几个疑问：1.自动提交位移的方式，也能重新设置需要消费的位移吗？2.poll()拉取消息的位置，到底与什么有关系？是消费者提交的位移吗？3.spring-kafka中poll()拉取消息的位置也是按照消费者提交的位移主题来的吗，还是说按照他自己的一个内部指针一直往前拉取消息？如果是按照内部指针拉取消息的话，那么重新设置消费位移有用吗，在不停机的情况下能够生效吗？希望胡哥能够解答一下","like_count":0,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":509683,"discussion_content":"1. 自动提交的话你压根不用管位移提交的事情\n2. 你大致可以认为poll内部自己维护了一个指针来记录它拉取到了那里，虽然它不是我们常说的consumer offset\n3. spring-kafka确实不太了解，抱歉：（","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1605838726,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":261006,"user_name":"Ryan","can_delete":false,"product_type":"c1","uid":1168663,"ip_address":"","ucode":"F0A9B06219D5CD","user_header":"https://static001.geekbang.org/account/avatar/00/11/d5/17/6efa2501.jpg","comment_is_top":false,"comment_ctime":1605170802,"is_pvip":false,"replies":[{"id":"94905","content":"很好的建议：）","user_name":"作者回复","user_name_real":"胡夕","uid":"1288090","ctime":1605423312,"ip_address":"","comment_id":261006,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1605170802","product_id":100029201,"comment_content":"文章开始的提问，为什么要重设消费者组位移，感觉没有回答到啊，只是回答了为什么可以重设吧？另外自动位移重设和手动位移重设一起讲做个区别会更清晰吧？","like_count":0,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":509346,"discussion_content":"很好的建议：）","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1605423312,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":246185,"user_name":"InfoQ_e077cb303519","can_delete":false,"product_type":"c1","uid":1390669,"ip_address":"","ucode":"2CCA309DB2EF46","user_header":"https://wx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLAK6F4BFT5ewhJEeZrjmRx5HxP8tvnNpJcpLlotHiadp0s6aL3d7LfMHEuQP6tibu80wUy8micVu4oQ/132","comment_is_top":false,"comment_ctime":1599202191,"is_pvip":false,"replies":[{"id":"90631","content":"默认是针对所有consumer，但其实可以不是。因为你同时还可以指定为哪些topic设定位移。一旦这么做了，那么没有订阅这些topic的consumer就不会执行重设位移","user_name":"作者回复","user_name_real":"胡夕","uid":"1288090","ctime":1599444153,"ip_address":"","comment_id":246185,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1599202191","product_id":100029201,"comment_content":"老师问下，命令行处理的方式是不是针对一个group id下面所有consumer的？","like_count":0,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":505084,"discussion_content":"默认是针对所有consumer，但其实可以不是。因为你同时还可以指定为哪些topic设定位移。一旦这么做了，那么没有订阅这些topic的consumer就不会执行重设位移","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1599444153,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":222905,"user_name":"兔2🐰🍃","can_delete":false,"product_type":"c1","uid":1096984,"ip_address":"","ucode":"1FEDA044BB6CBD","user_header":"https://static001.geekbang.org/account/avatar/00/10/bd/18/2af6bf4b.jpg","comment_is_top":false,"comment_ctime":1590951266,"is_pvip":false,"replies":[{"id":"82337","content":"你有手动提交位移吗？","user_name":"作者回复","user_name_real":"胡夕","uid":"1288090","ctime":1591094273,"ip_address":"","comment_id":222905,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1590951266","product_id":100029201,"comment_content":"胡老师，通过时间戳来重设消费者组的位移值，我尝试了生产者每分钟发一条消息，比如发送时间为00:01:30，00:02:30，00:03:30, 00:04:30, 00:05:30这5条消息，offset从0-4，启动了一个消费者组from-begining消费，自动提交设置为false。当我想要重设offset到00:03:00 这个时间点，按理来说current-offset 是1，lag还有3条没消费，可是测试下来，时间戳并没有想象的那么精确，直接offset从0开始了。不知道理解对不对，要怎么实现精确定位呢？","like_count":0,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":496953,"discussion_content":"你有手动提交位移吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1591094273,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1096984,"avatar":"https://static001.geekbang.org/account/avatar/00/10/bd/18/2af6bf4b.jpg","nickname":"兔2🐰🍃","note":"","ucode":"1FEDA044BB6CBD","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":277696,"discussion_content":"没有手动提交过，后来把自动提交设置在代码里去掉了，现在实现了这个功能。用命令行重置，是不是也要在命令行后面加上自动提交参数的？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1591094561,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":206777,"user_name":"李先生","can_delete":false,"product_type":"c1","uid":1237614,"ip_address":"","ucode":"D9039715F7D290","user_header":"https://static001.geekbang.org/account/avatar/00/12/e2/6e/0a300829.jpg","comment_is_top":false,"comment_ctime":1586933232,"is_pvip":false,"replies":[{"id":"77323","content":"1. 从业务特点来看，更适合用多分区的方式<br>2. 从消费这一点看没什么区别。只不过用一个组可以你可以天然享受负载均衡，故障转移等问题  ","user_name":"作者回复","user_name_real":"胡夕","uid":"1288090","ctime":1587003433,"ip_address":"","comment_id":206777,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1586933232","product_id":100029201,"comment_content":"胡哥：<br>1：设计一个弹幕系统，用户发送弹幕，弹幕消息会先进入kafka，多个直播间的弹幕有必要使用到kafka的分区消费吗，一个分区保存一个直播间的消息。还是不需要使用分区消费，通过消息体中类型字段来区分是哪个直播间的。这两者哪种更好呢？<br>2：有两个topic，分别是topic1，topic2. 假如启动2个实例来消费两个topic。在实例中，设置消费者组consumer-group1消费topic1，consumer-group2消费topic2。和设置一个消费者组去同时消费两个topic这种方式有什么区别？","like_count":0,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":491900,"discussion_content":"1. 从业务特点来看，更适合用多分区的方式\n2. 从消费这一点看没什么区别。只不过用一个组可以你可以天然享受负载均衡，故障转移等问题  ","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1587003433,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":191952,"user_name":"Lee","can_delete":false,"product_type":"c1","uid":1272716,"ip_address":"","ucode":"BF4E54DD903A18","user_header":"https://static001.geekbang.org/account/avatar/00/13/6b/8c/bf9e6f2c.jpg","comment_is_top":false,"comment_ctime":1584805360,"is_pvip":false,"replies":[{"id":"73517","content":"不会的","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1584846781,"ip_address":"","comment_id":191952,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1584805360","product_id":100029201,"comment_content":"如果采用API的方式重置offset,如果创建的kafkaconsumer只是按照文章中的方式执行了重置位移，会不会造成rebalance?","like_count":0,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":488295,"discussion_content":"不会的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584846781,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":183602,"user_name":"兔2🐰🍃","can_delete":false,"product_type":"c1","uid":1096984,"ip_address":"","ucode":"1FEDA044BB6CBD","user_header":"https://static001.geekbang.org/account/avatar/00/10/bd/18/2af6bf4b.jpg","comment_is_top":false,"comment_ctime":1583075020,"is_pvip":false,"replies":[{"id":"71217","content":"这个问题在最新的2.5应该被间接修复了，即如果topic不存在，会抛出UnknownTopicOrPartitionException异常","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1583199847,"ip_address":"","comment_id":183602,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1583075020","product_id":100029201,"comment_content":"胡老师你好，最近在做重置的时候发现以上命令<br>如bin&#47;kafka-consumer-groups.sh --bootstrap-server kafka-host:port --group test-group --reset-offsets --topic test --to-datetime 2019-06-20T20:00:00.000 --execute<br>如果没有创建过对应的group或是topic时，它会帮你重建group或topic 。我service是通过调用ConsumerGroupCommand.ConsumerGroupService(checkArgs).reserOffsets();来重置的（API的方式没成功过）如果group&#47;topic参数输错也是可以执行的，有什么方法避免么？","like_count":0,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":485729,"discussion_content":"这个问题在最新的2.5应该被间接修复了，即如果topic不存在，会抛出UnknownTopicOrPartitionException异常","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1583199847,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1096984,"avatar":"https://static001.geekbang.org/account/avatar/00/10/bd/18/2af6bf4b.jpg","nickname":"兔2🐰🍃","note":"","ucode":"1FEDA044BB6CBD","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":194340,"discussion_content":"嗯嗯，谢谢胡老师~","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1583209359,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":169872,"user_name":"皇甫","can_delete":false,"product_type":"c1","uid":1200408,"ip_address":"","ucode":"1624C5283C68DC","user_header":"https://static001.geekbang.org/account/avatar/00/12/51/18/0b0c105b.jpg","comment_is_top":false,"comment_ctime":1578466354,"is_pvip":false,"replies":[{"id":"66080","content":"我觉得目前这些计算引擎与Kafka的connector都没有这样的功能。只能自己编写consumer实现之","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1578619336,"ip_address":"","comment_id":169872,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1578466354","product_id":100029201,"comment_content":"老师好，有一个实际问题，为了保证实时性，消费者端该如何配置，可以在积压大于一定数量的时候，消费位移重置为最新位移，丢弃中间积压的消息，消费最新的消息，kafka版本为2.1.0，消费者端是storm，用的storm-kafka-client2.1.0，谢谢","like_count":0,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":480756,"discussion_content":"我觉得目前这些计算引擎与Kafka的connector都没有这样的功能。只能自己编写consumer实现之","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578619336,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1200408,"avatar":"https://static001.geekbang.org/account/avatar/00/12/51/18/0b0c105b.jpg","nickname":"皇甫","note":"","ucode":"1624C5283C68DC","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":128198,"discussion_content":"嗯，好的，谢谢老师","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578619791,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":163344,"user_name":"杨陆伟","can_delete":false,"product_type":"c1","uid":1108457,"ip_address":"","ucode":"3BC968447406EB","user_header":"https://static001.geekbang.org/account/avatar/00/10/e9/e9/1f95e422.jpg","comment_is_top":false,"comment_ctime":1576706447,"is_pvip":true,"replies":[{"id":"62099","content":"您主要关心的问题是什么？","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1576717155,"ip_address":"","comment_id":163344,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1576706447","product_id":100029201,"comment_content":"选择消息中间件还是kafka的部分，没太理解，能再详细的深入说说吗？谢谢","like_count":0,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":478358,"discussion_content":"您主要关心的问题是什么？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1576717155,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":127734,"user_name":"曹伟雄","can_delete":false,"product_type":"c1","uid":1400754,"ip_address":"","ucode":"9740E426C0742C","user_header":"https://static001.geekbang.org/account/avatar/00/15/5f/b2/c4780c10.jpg","comment_is_top":false,"comment_ctime":1566786227,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1566786227","product_id":100029201,"comment_content":"接着上一个问题，我的auto-offset-reset设置为earliest，我的问题是，一般什么情况下会出现这个情况？ 可以从哪方面去分析？  谢谢。<br>","like_count":0},{"had_liked":false,"id":127733,"user_name":"曹伟雄","can_delete":false,"product_type":"c1","uid":1400754,"ip_address":"","ucode":"9740E426C0742C","user_header":"https://static001.geekbang.org/account/avatar/00/15/5f/b2/c4780c10.jpg","comment_is_top":false,"comment_ctime":1566786073,"is_pvip":false,"replies":[{"id":"47558","content":"目前的信息不太能够确定原因。看看日志有无其他错误吧？<br>","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1566871078,"ip_address":"","comment_id":127733,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1566786073","product_id":100029201,"comment_content":"老师，留言想问一个问题，我在使用kafka的时候，发现个问题，offset偶尔会自动恢复到以前的值，然后又重新消费，例如：<br>LogSize=538068，Consumer Offset=538068，Lag=0<br>过了2天后突然变成了：<br>LogSize=538068，Consumer Offset=138068，Lag=398023","like_count":0,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":464627,"discussion_content":"目前的信息不太能够确定原因。看看日志有无其他错误吧？\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566871078,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":125335,"user_name":"钱","can_delete":false,"product_type":"c1","uid":1009652,"ip_address":"","ucode":"2C92A243A463D4","user_header":"https://static001.geekbang.org/account/avatar/00/0f/67/f4/9a1feb59.jpg","comment_is_top":false,"comment_ctime":1566169161,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1566169161","product_id":100029201,"comment_content":"打卡，此节讲解了<br><br>1：为啥需要重设消费者组位移？<br><br>当需要实现重复消费历史数据的时候，就需要重设消费者组位移。<br><br><br>2：重设消费者组位移的实现？<br><br>有两种方式七种策略(两种维度：位移和时间)<br><br>两种方式：操作API、操作kafka命令<br><br>七种策略：<br><br>2-1：Earliest 策略——表示将位移调整到主题当前最早位移处。<br><br>2-2：Latest 策略——表示把位移重设成最新末端位移。<br><br>2-3：Current 策略——表示将位移调整成消费者当前提交的最新位移。<br><br>2-4：Specified-Offset 策略——则是比较通用的策略，表示消费者把位移值调整到你指定的位移处。这个策略的典型使用场景是，消费者程序在处理某条错误消息时，你可以手动地“跳过”此消息的处理。<br><br>2-5： Shift-By-N 策略——指定的是位移的相对数值，即你给出要跳过的一段消息的距离即可。这里的“跳”是双向的，你既可以向前“跳”，也可以向后“跳”。<br><br>2-6：DateTime策略—— 允许你指定一个时间，然后将位移重置到该时间之后的最早位移处。<br><br>2-7：Duration 策略——则是指给定相对的时间间隔，然后将位移调整到距离当前给定时间间隔的位移处，具体格式是 PnDTnHnMnS。<br>","like_count":0},{"had_liked":false,"id":122922,"user_name":"边城","can_delete":false,"product_type":"c1","uid":1088295,"ip_address":"","ucode":"FC5F50095E6EF9","user_header":"https://static001.geekbang.org/account/avatar/00/10/9b/27/f5e29b94.jpg","comment_is_top":false,"comment_ctime":1565574245,"is_pvip":false,"replies":[{"id":"45125","content":"你不需要停止程序也能动态调整位移","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1565575488,"ip_address":"","comment_id":122922,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1565574245","product_id":100029201,"comment_content":"老师您好，请教您两个问题。<br><br>如果把位移调整成指定位移，是不是每次消费都需要持久化位移点？<br><br>这样的话，发布应用的时候，我应该怎么停止消费程序进程呢？<br><br>感谢！","like_count":0,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":462456,"discussion_content":"你不需要停止程序也能动态调整位移","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1565575488,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1088295,"avatar":"https://static001.geekbang.org/account/avatar/00/10/9b/27/f5e29b94.jpg","nickname":"边城","note":"","ucode":"FC5F50095E6EF9","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":4581,"discussion_content":"如果程序确实需要更新重启，那上面的情况我应该怎么做，保证消息不丢失呢？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1565576708,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":122791,"user_name":"坤蛰","can_delete":false,"product_type":"c1","uid":1285244,"ip_address":"","ucode":"48C1616B27A99F","user_header":"https://static001.geekbang.org/account/avatar/00/13/9c/7c/c92f8a53.jpg","comment_is_top":false,"comment_ctime":1565524765,"is_pvip":false,"replies":[{"id":"45063","content":"是不是没有数据可以消费了呢？另外0.10版本的新consumer不建议使用，这个时候bug还比较多。建议至少到0.10.2或0.11之后再切换到新版本consumer","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1565571272,"ip_address":"","comment_id":122791,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1565524765","product_id":100029201,"comment_content":"老师，我当前使用的Kafka是0.10，重置offset使用seek方式，但是在实际使用过程中，发现使用subscribe加poll消费消息，无法消费到消息，程序也不报错，而使用seek方式重新指定各分区的offset进行消费就可以，麻烦老师解惑，希望老师可以讲一下Kafka如何去消费消息的，谢谢！","like_count":0,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":462406,"discussion_content":"是不是没有数据可以消费了呢？另外0.10版本的新consumer不建议使用，这个时候bug还比较多。建议至少到0.10.2或0.11之后再切换到新版本consumer","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1565571272,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":122692,"user_name":"willmeng","can_delete":false,"product_type":"c1","uid":1157065,"ip_address":"","ucode":"37367A728ABF88","user_header":"https://static001.geekbang.org/account/avatar/00/11/a7/c9/67bd5906.jpg","comment_is_top":false,"comment_ctime":1565492175,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1565492175","product_id":100029201,"comment_content":"python读取过kafka，关闭自动提交，把每个分区的位移写文件。重启程序或者需要重新读，就靠文件了。","like_count":0},{"had_liked":false,"id":122677,"user_name":"Stalary","can_delete":false,"product_type":"c1","uid":1101749,"ip_address":"","ucode":"F69AFF7C958D31","user_header":"https://static001.geekbang.org/account/avatar/00/10/cf/b5/d1ec6a7d.jpg","comment_is_top":false,"comment_ctime":1565486407,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1565486407","product_id":100029201,"comment_content":"老师，我的理解latest是不是应该是当前消费者组消费到的最新位移，目前我是使用latest来保证不丢消息的是否有问题呢，生产环境中会出现消费失败的情况，这个时候就会手动关闭消费者不再提交位移，处理完毕后重启从上次挂掉的offset继续消费。","like_count":0,"discussions":[{"author":{"id":1034204,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/c7/dc/9408c8c2.jpg","nickname":"ban","note":"","ucode":"E523CE97E48266","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":4549,"discussion_content":"这里的latest应该是指生产者发送的最新位移","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1565536049,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":122651,"user_name":"mickle","can_delete":false,"product_type":"c1","uid":1201493,"ip_address":"","ucode":"1F89608B5E06C7","user_header":"https://static001.geekbang.org/account/avatar/00/12/55/55/19ec7b0e.jpg","comment_is_top":false,"comment_ctime":1565452493,"is_pvip":false,"replies":[{"id":"45072","content":"像是DNS配置的问题。目前Kafka直连主机，最好两端统一使用主机名交互——Broker端的listeners配置主机名，clients端连接使用主机名","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1565571588,"ip_address":"","comment_id":122651,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1565452493","product_id":100029201,"comment_content":"请教老师一个问题，java连接kafka时报 &quot;IllegalStateException: No entry found for connection 2147483647&quot; 的错误，大概率是什么原因？","like_count":0,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":462345,"discussion_content":"像是DNS配置的问题。目前Kafka直连主机，最好两端统一使用主机名交互——Broker端的listeners配置主机名，clients端连接使用主机名","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1565571588,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":122568,"user_name":"我来也","can_delete":false,"product_type":"c1","uid":1205253,"ip_address":"","ucode":"773D6104F56767","user_header":"https://static001.geekbang.org/account/avatar/00/12/64/05/6989dce6.jpg","comment_is_top":false,"comment_ctime":1565425996,"is_pvip":false,"replies":[{"id":"45073","content":"都可以的","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1565571608,"ip_address":"","comment_id":122568,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1565425996","product_id":100029201,"comment_content":"请问在发布订阅模式下，也可以用这些调整位移的方法么？","like_count":0,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":462313,"discussion_content":"都可以的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1565571608,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1205253,"avatar":"https://static001.geekbang.org/account/avatar/00/12/64/05/6989dce6.jpg","nickname":"我来也","note":"","ucode":"773D6104F56767","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":4471,"discussion_content":"好像订阅发布模式也是可以设置位移的。但是我看python库，在消费者端，好像只能设置两个值，一个是最早，一个是最晚，没有其他可选项了。\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1565446827,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":122542,"user_name":"许童童","can_delete":false,"product_type":"c1","uid":1003005,"ip_address":"","ucode":"4B799C0C6BC678","user_header":"https://static001.geekbang.org/account/avatar/00/0f/4d/fd/0aa0e39f.jpg","comment_is_top":false,"comment_ctime":1565420776,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1565420776","product_id":100029201,"comment_content":"你在实际使用过程中，是否遇到过要重设位移的场景，你是怎么实现的？<br>还没有遇到过重设位移的场景，后续有遇到，再来留言。","like_count":0},{"had_liked":false,"id":122466,"user_name":"明翼","can_delete":false,"product_type":"c1","uid":1068361,"ip_address":"","ucode":"E77F86BEB3D5C1","user_header":"https://static001.geekbang.org/account/avatar/00/10/4d/49/28e73b9c.jpg","comment_is_top":false,"comment_ctime":1565399931,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1565399931","product_id":100029201,"comment_content":"以前遇到过无法消费的信息只能重新搞个新的topic原来还有这个操作666","like_count":0},{"had_liked":false,"id":122450,"user_name":"曹伟雄","can_delete":false,"product_type":"c1","uid":1400754,"ip_address":"","ucode":"9740E426C0742C","user_header":"https://static001.geekbang.org/account/avatar/00/15/5f/b2/c4780c10.jpg","comment_is_top":false,"comment_ctime":1565393855,"is_pvip":false,"replies":[{"id":"45074","content":"seek跳到下一条消息，跳过这个corrupted消息","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1565571642,"ip_address":"","comment_id":122450,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1565393855","product_id":100029201,"comment_content":"specified offser，这个策略的典型使用场景是，消费者程序在处理某条错误消息时，你可以手动地“跳过”此消息的处理。<br>这里不是很理解，是指消费时发生业务失败或运行时异常时，继续往下一条消费吗？ 还是说重新seek到这条记录重新消费?   <br>如果是第1种情况，消费失败的消息后续怎么处理?  如果是第2种情况，seek重新消费时，还是处理失败，这样就导致死循环了。<br>关于消费失败处理这一块，我还是不太清晰，希望老师能解答一下，谢谢。","like_count":0,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":462257,"discussion_content":"seek跳到下一条消息，跳过这个corrupted消息","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1565571642,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1068361,"avatar":"https://static001.geekbang.org/account/avatar/00/10/4d/49/28e73b9c.jpg","nickname":"明翼","note":"","ucode":"E77F86BEB3D5C1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":4415,"discussion_content":"跳过就不处理了，对于不重要的可以这么干","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1565399991,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]}]}