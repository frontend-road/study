{"id":79368,"title":"31 | 套路篇：磁盘 I/O 性能优化的几个思路","content":"<p>你好，我是倪朋飞。</p><p>上一节，我们一起回顾了常见的文件系统和磁盘 I/O 性能指标，梳理了核心的 I/O 性能观测工具，最后还总结了快速分析 I/O 性能问题的思路。</p><p>虽然 I/O 的性能指标很多，相应的性能分析工具也有好几个，但理解了各种指标的含义后，你就会发现它们其实都有一定的关联。</p><p>顺着这些关系往下理解，你就会发现，掌握这些常用的瓶颈分析思路，其实并不难。</p><p>找出了 I/O 的性能瓶颈后，下一步要做的就是优化了，也就是如何以最快的速度完成 I/O操作，或者换个思路，减少甚至避免磁盘的 I/O 操作。</p><p>今天，我就来说说，优化 I/O 性能问题的思路和注意事项。</p><h2>I/O 基准测试</h2><p>按照我的习惯，优化之前，我会先问自己， I/O 性能优化的目标是什么？换句话说，我们观察的这些I/O 性能指标（比如 IOPS、吞吐量、延迟等），要达到多少才合适呢？</p><p>事实上，I/O 性能指标的具体标准，每个人估计会有不同的答案，因为我们每个人的应用场景、使用的文件系统和物理磁盘等，都有可能不一样。</p><p>为了更客观合理地评估优化效果，我们首先应该对磁盘和文件系统进行基准测试，得到文件系统或者磁盘 I/O 的极限性能。</p><p><a href=\"https://github.com/axboe/fio\">fio</a>（Flexible I/O Tester）正是最常用的文件系统和磁盘 I/O 性能基准测试工具。它提供了大量的可定制化选项，可以用来测试，裸盘或者文件系统在各种场景下的 I/O 性能，包括了不同块大小、不同 I/O 引擎以及是否使用缓存等场景。</p><!-- [[[read_end]]] --><p>fio 的安装比较简单，你可以执行下面的命令来安装它：</p><pre><code># Ubuntu\napt-get install -y fio\n\n# CentOS\nyum install -y fio \n</code></pre><p>安装完成后，就可以执行 man fio 查询它的使用方法。</p><p>fio 的选项非常多， 我会通过几个常见场景的测试方法，介绍一些最常用的选项。这些常见场景包括随机读、随机写、顺序读以及顺序写等，你可以执行下面这些命令来测试：</p><pre><code># 随机读\nfio -name=randread -direct=1 -iodepth=64 -rw=randread -ioengine=libaio -bs=4k -size=1G -numjobs=1 -runtime=1000 -group_reporting -filename=/dev/sdb\n\n# 随机写\nfio -name=randwrite -direct=1 -iodepth=64 -rw=randwrite -ioengine=libaio -bs=4k -size=1G -numjobs=1 -runtime=1000 -group_reporting -filename=/dev/sdb\n\n# 顺序读\nfio -name=read -direct=1 -iodepth=64 -rw=read -ioengine=libaio -bs=4k -size=1G -numjobs=1 -runtime=1000 -group_reporting -filename=/dev/sdb\n\n# 顺序写\nfio -name=write -direct=1 -iodepth=64 -rw=write -ioengine=libaio -bs=4k -size=1G -numjobs=1 -runtime=1000 -group_reporting -filename=/dev/sdb \n</code></pre><p>在这其中，有几个参数需要你重点关注一下。</p><ul>\n<li>\n<p>direct，表示是否跳过系统缓存。上面示例中，我设置的 1 ，就表示跳过系统缓存。</p>\n</li>\n<li>\n<p>iodepth，表示使用异步 I/O（asynchronous I/O，简称AIO）时，同时发出的 I/O 请求上限。在上面的示例中，我设置的是 64。</p>\n</li>\n<li>\n<p>rw，表示 I/O 模式。我的示例中， read/write 分别表示顺序读/写，而 randread/randwrite 则分别表示随机读/写。</p>\n</li>\n<li>\n<p>ioengine，表示 I/O 引擎，它支持同步（sync）、异步（libaio）、内存映射（mmap）、网络（net）等各种 I/O 引擎。上面示例中，我设置的 libaio 表示使用异步 I/O。</p>\n</li>\n<li>\n<p>bs，表示 I/O 的大小。示例中，我设置成了 4K（这也是默认值）。</p>\n</li>\n<li>\n<p>filename，表示文件路径，当然，它可以是磁盘路径（测试磁盘性能），也可以是文件路径（测试文件系统性能）。示例中，我把它设置成了磁盘 /dev/sdb。不过注意，用磁盘路径测试写，会破坏这个磁盘中的文件系统，所以在使用前，你一定要事先做好数据备份。</p>\n</li>\n</ul><p>下面就是我使用 fio 测试顺序读的一个报告示例。</p><pre><code>read: (g=0): rw=read, bs=(R) 4096B-4096B, (W) 4096B-4096B, (T) 4096B-4096B, ioengine=libaio, iodepth=64\nfio-3.1\nStarting 1 process\nJobs: 1 (f=1): [R(1)][100.0%][r=16.7MiB/s,w=0KiB/s][r=4280,w=0 IOPS][eta 00m:00s]\nread: (groupid=0, jobs=1): err= 0: pid=17966: Sun Dec 30 08:31:48 2018\n   read: IOPS=4257, BW=16.6MiB/s (17.4MB/s)(1024MiB/61568msec)\n    slat (usec): min=2, max=2566, avg= 4.29, stdev=21.76\n    clat (usec): min=228, max=407360, avg=15024.30, stdev=20524.39\n     lat (usec): min=243, max=407363, avg=15029.12, stdev=20524.26\n    clat percentiles (usec):\n     |  1.00th=[   498],  5.00th=[  1020], 10.00th=[  1319], 20.00th=[  1713],\n     | 30.00th=[  1991], 40.00th=[  2212], 50.00th=[  2540], 60.00th=[  2933],\n     | 70.00th=[  5407], 80.00th=[ 44303], 90.00th=[ 45351], 95.00th=[ 45876],\n     | 99.00th=[ 46924], 99.50th=[ 46924], 99.90th=[ 48497], 99.95th=[ 49021],\n     | 99.99th=[404751]\n   bw (  KiB/s): min= 8208, max=18832, per=99.85%, avg=17005.35, stdev=998.94, samples=123\n   iops        : min= 2052, max= 4708, avg=4251.30, stdev=249.74, samples=123\n  lat (usec)   : 250=0.01%, 500=1.03%, 750=1.69%, 1000=2.07%\n  lat (msec)   : 2=25.64%, 4=37.58%, 10=2.08%, 20=0.02%, 50=29.86%\n  lat (msec)   : 100=0.01%, 500=0.02%\n  cpu          : usr=1.02%, sys=2.97%, ctx=33312, majf=0, minf=75\n  IO depths    : 1=0.1%, 2=0.1%, 4=0.1%, 8=0.1%, 16=0.1%, 32=0.1%, &gt;=64=100.0%\n     submit    : 0=0.0%, 4=100.0%, 8=0.0%, 16=0.0%, 32=0.0%, 64=0.0%, &gt;=64=0.0%\n     complete  : 0=0.0%, 4=100.0%, 8=0.0%, 16=0.0%, 32=0.0%, 64=0.1%, &gt;=64=0.0%\n     issued rwt: total=262144,0,0, short=0,0,0, dropped=0,0,0\n     latency   : target=0, window=0, percentile=100.00%, depth=64\n\nRun status group 0 (all jobs):\n   READ: bw=16.6MiB/s (17.4MB/s), 16.6MiB/s-16.6MiB/s (17.4MB/s-17.4MB/s), io=1024MiB (1074MB), run=61568-61568msec\n\nDisk stats (read/write):\n  sdb: ios=261897/0, merge=0/0, ticks=3912108/0, in_queue=3474336, util=90.09% \n</code></pre><p>这个报告中，需要我们重点关注的是， slat、clat、lat ，以及 bw 和 iops 这几行。</p><p>先来看刚刚提到的前三个参数。事实上，slat、clat、lat 都是指 I/O 延迟（latency）。不同之处在于：</p><ul>\n<li>\n<p>slat ，是指从 I/O 提交到实际执行 I/O 的时长（Submission latency）；</p>\n</li>\n<li>\n<p>clat ，是指从 I/O 提交到 I/O 完成的时长（Completion latency）；</p>\n</li>\n<li>\n<p>而 lat ，指的是从fio 创建 I/O 到 I/O 完成的总时长。</p>\n</li>\n</ul><p>这里需要注意的是，对同步 I/O 来说，由于 I/O 提交和I/O完成是一个动作，所以 slat 实际上就是 I/O 完成的时间，而 clat 是 0。而从示例可以看到，使用异步 I/O（libaio）时，lat 近似等于 slat + clat之和。</p><p>再来看bw ，它代表吞吐量。在我上面的示例中，你可以看到，平均吞吐量大约是 16 MB（17005 KiB/1024）。</p><p>最后的iops ，其实就是每秒 I/O 的次数，上面示例中的平均 IOPS 为 4250。</p><p>通常情况下，应用程序的 I/O 都是读写并行的，而且每次的I/O大小也不一定相同。所以，刚刚说的这几种场景，并不能精确模拟应用程序的 I/O 模式。那怎么才能精确模拟应用程序的 I/O 模式呢？</p><p>幸运的是，fio 支持 I/O 的重放。借助前面提到过的 blktrace，再配合上 fio，就可以实现对应用程序 I/O 模式的基准测试。你需要先用 blktrace ，记录磁盘设备的 I/O 访问情况；然后使用 fio ，重放 blktrace 的记录。</p><p>比如你可以运行下面的命令来操作：</p><pre><code># 使用blktrace跟踪磁盘I/O，注意指定应用程序正在操作的磁盘\n$ blktrace /dev/sdb\n\n# 查看blktrace记录的结果\n# ls\nsdb.blktrace.0  sdb.blktrace.1\n\n# 将结果转化为二进制文件\n$ blkparse sdb -d sdb.bin\n\n# 使用fio重放日志\n$ fio --name=replay --filename=/dev/sdb --direct=1 --read_iolog=sdb.bin \n</code></pre><p>这样，我们就通过 blktrace+fio 的组合使用，得到了应用程序 I/O 模式的基准测试报告。</p><h2>I/O 性能优化</h2><p>得到 I/O 基准测试报告后，再用上我们上一节总结的性能分析套路，找出 I/O 的性能瓶颈并优化，就是水到渠成的事情了。当然，  想要优化I/O 性能，肯定离不开 Linux 系统的 I/O 栈图的思路辅助。你可以结合下面的 I/O 栈图再回顾一下。</p><p><img src=\"https://static001.geekbang.org/resource/image/9e/38/9e42aaf53ff4a544b9a7b03b6ce63f38.png?wh=530*590\" alt=\"\"></p><p>下面，我就带你从应用程序、文件系统以及磁盘角度，分别看看 I/O 性能优化的基本思路。</p><h3>应用程序优化</h3><p>首先，我们来看一下，从应用程序的角度有哪些优化 I/O 的思路。</p><p>应用程序处于整个 I/O 栈的最上端，它可以通过系统调用，来调整 I/O 模式（如顺序还是随机、同步还是异步）， 同时，它也是 I/O 数据的最终来源。在我看来，可以有这么几种方式来优化应用程序的 I/O 性能。</p><p>第一，可以用追加写代替随机写，减少寻址开销，加快 I/O 写的速度。</p><p>第二，可以借助缓存 I/O ，充分利用系统缓存，降低实际 I/O 的次数。</p><p>第三，可以在应用程序内部构建自己的缓存，或者用 Redis 这类外部缓存系统。这样，一方面，能在应用程序内部，控制缓存的数据和生命周期；另一方面，也能降低其他应用程序使用缓存对自身的影响。</p><p>比如，在前面的 MySQL 案例中，我们已经见识过，只是因为一个干扰应用清理了系统缓存，就会导致 MySQL 查询有数百倍的性能差距（0.1s vs 15s）。</p><p>再如， C 标准库提供的 fopen、fread 等库函数，都会利用标准库的缓存，减少磁盘的操作。而你直接使用 open、read 等系统调用时，就只能利用操作系统提供的页缓存和缓冲区等，而没有库函数的缓存可用。</p><p>第四，在需要频繁读写同一块磁盘空间时，可以用 mmap 代替 read/write，减少内存的拷贝次数。</p><p>第五，在需要同步写的场景中，尽量将写请求合并，而不是让每个请求都同步写入磁盘，即可以用 fsync() 取代 O_SYNC。</p><p>第六，在多个应用程序共享相同磁盘时，为了保证 I/O 不被某个应用完全占用，推荐你使用 cgroups 的 I/O 子系统，来限制进程 / 进程组的 IOPS 以及吞吐量。</p><p>最后，在使用 CFQ 调度器时，可以用 ionice 来调整进程的 I/O 调度优先级，特别是提高核心应用的 I/O 优先级。ionice 支持三个优先级类：Idle、Best-effort 和 Realtime。其中， Best-effort 和 Realtime 还分别支持 0-7 的级别，数值越小，则表示优先级别越高。</p><h3>文件系统优化</h3><p>应用程序访问普通文件时，实际是由文件系统间接负责，文件在磁盘中的读写。所以，跟文件系统中相关的也有很多优化 I/O 性能的方式。</p><p>第一，你可以根据实际负载场景的不同，选择最适合的文件系统。比如Ubuntu 默认使用 ext4 文件系统，而 CentOS 7 默认使用 xfs 文件系统。</p><p>相比于 ext4 ，xfs 支持更大的磁盘分区和更大的文件数量，如 xfs 支持大于16TB 的磁盘。但是 xfs 文件系统的缺点在于无法收缩，而 ext4 则可以。</p><p>第二，在选好文件系统后，还可以进一步优化文件系统的配置选项，包括文件系统的特性（如ext_attr、dir_index）、日志模式（如journal、ordered、writeback）、挂载选项（如noatime）等等。</p><p>比如，  使用tune2fs 这个工具，可以调整文件系统的特性（tune2fs 也常用来查看文件系统超级块的内容）。 而通过 /etc/fstab ，或者 mount 命令行参数，我们可以调整文件系统的日志模式和挂载选项等。</p><p>第三，可以优化文件系统的缓存。</p><p>比如，你可以优化 pdflush 脏页的刷新频率（比如设置 dirty_expire_centisecs 和 dirty_writeback_centisecs）以及脏页的限额（比如调整 dirty_background_ratio 和 dirty_ratio等）。</p><p>再如，你还可以优化内核回收目录项缓存和索引节点缓存的倾向，即调整 vfs_cache_pressure（/proc/sys/vm/vfs_cache_pressure，默认值100），数值越大，就表示越容易回收。</p><p>最后，在不需要持久化时，你还可以用内存文件系统  tmpfs，以获得更好的 I/O性能 。tmpfs 把数据直接保存在内存中，而不是磁盘中。比如 /dev/shm/ ，就是大多数 Linux 默认配置的一个内存文件系统，它的大小默认为总内存的一半。</p><h3>磁盘优化</h3><p>数据的持久化存储，最终还是要落到具体的物理磁盘中，同时，磁盘也是整个 I/O 栈的最底层。从磁盘角度出发，自然也有很多有效的性能优化方法。</p><p>第一，最简单有效的优化方法，就是换用性能更好的磁盘，比如用 SSD 替代 HDD。</p><p>第二，我们可以使用 RAID ，把多块磁盘组合成一个逻辑磁盘，构成冗余独立磁盘阵列。这样做既可以提高数据的可靠性，又可以提升数据的访问性能。</p><p>第三，针对磁盘和应用程序 I/O 模式的特征，我们可以选择最适合的 I/O 调度算法。比方说，SSD 和虚拟机中的磁盘，通常用的是 noop 调度算法。而数据库应用，我更推荐使用 deadline 算法。</p><p>第四，我们可以对应用程序的数据，进行磁盘级别的隔离。比如，我们可以为日志、数据库等 I/O 压力比较重的应用，配置单独的磁盘。</p><p>第五，在顺序读比较多的场景中，我们可以增大磁盘的预读数据，比如，你可以通过下面两种方法，调整 /dev/sdb 的预读大小。</p><ul>\n<li>\n<p>调整内核选项 /sys/block/sdb/queue/read_ahead_kb，默认大小是 128 KB，单位为KB。</p>\n</li>\n<li>\n<p>使用 blockdev 工具设置，比如 blockdev --setra 8192 /dev/sdb，注意这里的单位是 512B（0.5KB），所以它的数值总是 read_ahead_kb 的两倍。</p>\n</li>\n</ul><p>第六，我们可以优化内核块设备 I/O 的选项。比如，可以调整磁盘队列的长度 /sys/block/sdb/queue/nr_requests，适当增大队列长度，可以提升磁盘的吞吐量（当然也会导致 I/O 延迟增大）。</p><p>最后，要注意，磁盘本身出现硬件错误，也会导致 I/O 性能急剧下降，所以发现磁盘性能急剧下降时，你还需要确认，磁盘本身是不是出现了硬件错误。</p><p>比如，你可以查看 dmesg 中是否有硬件 I/O 故障的日志。  还可以使用 badblocks、smartctl等工具，检测磁盘的硬件问题，或用 e2fsck 等来检测文件系统的错误。如果发现问题，你可以使用 fsck 等工具来修复。</p><h2>小结</h2><p>今天，我们一起梳理了常见的文件系统和磁盘 I/O 的性能优化思路和方法。发现 I/O 性能问题后，不要急于动手优化，而要先找出最重要的、可以最大程度提升性能的问题，然后再从 I/O 栈的不同层入手，考虑具体的优化方法。</p><p>记住，磁盘和文件系统的 I/O ，通常是整个系统中最慢的一个模块。所以，在优化 I/O 问题时，除了可以优化 I/O 的执行流程，还可以借助更快的内存、网络、CPU 等，减少I/O 调用。</p><p>比如，你可以充分利用系统提供的 Buffer、Cache ，或是应用程序内部缓存， 再或者Redis 这类的外部缓存系统。</p><h2>思考</h2><p>在整个板块的学习中，我只列举了最常见的几个 I/O 性能优化思路。除此之外，还有很多从应用程序、系统再到磁盘硬件的优化方法。我想请你一起来聊聊，你还知道哪些其他优化方法吗？</p><p>欢迎在留言区跟我讨论，也欢迎你把这篇文章分享给你的同事、朋友。我们一起在实战中演练，在交流中进步。</p><p></p>","neighbors":{"left":{"article_title":"30 | 套路篇：如何迅速分析出系统I/O的瓶颈在哪里？","id":79001},"right":{"article_title":"32 | 答疑（四）：阻塞、非阻塞 I/O 与同步、异步 I/O 的区别和联系","id":79734}},"comments":[{"had_liked":false,"id":64455,"user_name":"ninuxer","can_delete":false,"product_type":"c1","uid":1243135,"ip_address":"","ucode":"5394ADAF2667D6","user_header":"https://wx.qlogo.cn/mmopen/vi_32/PiajxSqBRaEKQMM4m7NHuicr55aRiblTSEWIYe0QqbpyHweaoAbG7j2v7UUElqqeP3Ihrm3UfDPDRb1Hv8LvPwXqA/132","comment_is_top":false,"comment_ctime":1548807305,"is_pvip":false,"replies":[{"id":"22974","content":"嗯嗯，是的，并且这些东西也没法在这儿展开来讲，每一块涉及的东西都比较多。实际在操作之前，还需要去了解背后的原理，特别是要注意会不会带来其他不好的影响（比如优化了I&#47;O，CPU和内存使用可能上升）。","user_name":"作者回复","comment_id":64455,"uid":"1001282","ip_address":"","utype":1,"ctime":1548942884,"user_name_real":"倪朋飞"}],"discussion_count":3,"race_medal":0,"score":"78858218633","product_id":100020901,"comment_content":"打卡day32<br>找io问题，有了一定的套路，但是针对这节写的优化的东西，吸收起来还是比较费劲，比如：为什么要调这个参数，而不是其他参数？为什么参数设置这个值而不是其他值？<br>关于设置值可以通过fio去测试，io性能提升了，满足要求，就可以了，但是io好了，会不会带来其他方面的影响？<br>综上所述，还是基础不牢，最近已经开始啃《深入Linux内核架构》，不忘初心，砥砺前行！","like_count":19,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":438007,"discussion_content":"嗯嗯，是的，并且这些东西也没法在这儿展开来讲，每一块涉及的东西都比较多。实际在操作之前，还需要去了解背后的原理，特别是要注意会不会带来其他不好的影响（比如优化了I/O，CPU和内存使用可能上升）。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1548942884,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1175246,"avatar":"https://static001.geekbang.org/account/avatar/00/11/ee/ce/c024a857.jpg","nickname":"藏锋","note":"","ucode":"D5F811B16725A0","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":388764,"discussion_content":"总结出一点，每种方案都需要付出一定代价，就看这代价是否能被具体业务需求所容忍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1628941277,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1517268,"avatar":"https://static001.geekbang.org/account/avatar/00/17/26/d4/add17f35.jpg","nickname":"聰","note":"","ucode":"F65760FDD31CEB","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":100562,"discussion_content":"我也在找关于内核参数调优，针对每个参数的详解的相关书籍，还没找到，请问老师和各位同学有推荐吗","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577269563,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":64509,"user_name":"JohnT3e","can_delete":false,"product_type":"c1","uid":1063982,"ip_address":"","ucode":"CF4AAAC933529C","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLdWHFCr66TzHS2CpCkiaRaDIk3tU5sKPry16Q7ic0mZZdy8LOCYc38wOmyv5RZico7icBVeaPX8X2jcw/132","comment_is_top":false,"comment_ctime":1548813860,"is_pvip":false,"replies":[{"id":"22976","content":"赞，谢谢分享","user_name":"作者回复","comment_id":64509,"uid":"1001282","ip_address":"","utype":1,"ctime":1548942906,"user_name_real":"倪朋飞"}],"discussion_count":1,"race_medal":0,"score":"40203519524","product_id":100020901,"comment_content":"现在越来越多系统使用SSD，它和HDD相比还是有较大差异的。经常看到某某系统针对于SSD优化，那这边的有哪些优化点？之前看过一个系列的文章（http:&#47;&#47;codecapsule.com&#47;2014&#47;02&#47;12&#47;coding-for-ssds-part-1-introduction-and-table-of-contents&#47;），从硬件架构到编程设计比较详细的介绍了如何优化，配合这里的思路看，加深了理解。","like_count":10,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":438037,"discussion_content":"赞，谢谢分享","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1548942906,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":64838,"user_name":"我来也","can_delete":false,"product_type":"c1","uid":1205253,"ip_address":"","ucode":"773D6104F56767","user_header":"https://static001.geekbang.org/account/avatar/00/12/64/05/6989dce6.jpg","comment_is_top":false,"comment_ctime":1548922033,"is_pvip":false,"replies":[{"id":"22991","content":"嗯嗯，一般来说，从应用层优化可以满足大部分需求了","user_name":"作者回复","comment_id":64838,"uid":"1001282","ip_address":"","utype":1,"ctime":1548944367,"user_name_real":"倪朋飞"}],"discussion_count":1,"race_medal":0,"score":"23023758513","product_id":100020901,"comment_content":"[D31打卡]<br>平常没机会从系统层面优化磁盘性能参数。<br>能做的就是减少磁盘写入，以及错峰操作磁盘。<br>比如在凌晨或业务低谷时，压缩备份日志，减少对正常业务的影响。<br>文中的这么多底层参数，只能望而生叹。😄","like_count":6,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":438201,"discussion_content":"嗯嗯，一般来说，从应用层优化可以满足大部分需求了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1548944367,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":90439,"user_name":"风动草","can_delete":false,"product_type":"c1","uid":1303051,"ip_address":"","ucode":"6ED975DC4DD0D0","user_header":"https://static001.geekbang.org/account/avatar/00/13/e2/0b/e3c8765a.jpg","comment_is_top":false,"comment_ctime":1556520792,"is_pvip":false,"replies":[{"id":"32532","content":"飙升到多少？超过20%吗？可以考虑检查buffer的配置项、临时表大小等看看内存都耗费在哪里了 https:&#47;&#47;dev.mysql.com&#47;doc&#47;refman&#47;5.7&#47;en&#47;memory-summary-tables.html","user_name":"作者回复","comment_id":90439,"uid":"1001282","ip_address":"","utype":1,"ctime":1556634577,"user_name_real":"倪朋飞"}],"discussion_count":1,"race_medal":0,"score":"18736389976","product_id":100020901,"comment_content":"老师好！我们最近发生了一件非常诡异的问题，mysql从普通票迁移到ssd后，内存使用一直飙升，迁回普通票又正常，mysql内存配置是操作系统的20%。希望老师能给个分析建议，给你发个大红包，实在没办法了。","like_count":4,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":448524,"discussion_content":"飙升到多少？超过20%吗？可以考虑检查buffer的配置项、临时表大小等看看内存都耗费在哪里了 https://dev.mysql.com/doc/refman/5.7/en/memory-summary-tables.html","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1556634577,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":64614,"user_name":"xfan","can_delete":false,"product_type":"c1","uid":1315147,"ip_address":"","ucode":"48ED8D498D7F56","user_header":"https://static001.geekbang.org/account/avatar/00/14/11/4b/fa64f061.jpg","comment_is_top":false,"comment_ctime":1548835476,"is_pvip":false,"replies":[{"id":"22986","content":"👍","user_name":"作者回复","comment_id":64614,"uid":"1001282","ip_address":"","utype":1,"ctime":1548943777,"user_name_real":"倪朋飞"}],"discussion_count":2,"race_medal":0,"score":"14433737364","product_id":100020901,"comment_content":"谢谢@ninuxer推荐 《深入Linux内核架构》，我也去补一补","like_count":4,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":438101,"discussion_content":"👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1548943777,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1445845,"avatar":"https://static001.geekbang.org/account/avatar/00/16/0f/d5/73ebd489.jpg","nickname":"于加硕","note":"","ucode":"723797D27971A4","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":309098,"discussion_content":"哎，做运维就是一不下心就入了那个坑！！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1601188760,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":64585,"user_name":"小老鼠","can_delete":false,"product_type":"c1","uid":1257460,"ip_address":"","ucode":"C663A0C863A515","user_header":"https://static001.geekbang.org/account/avatar/00/13/2f/f4/2dede51a.jpg","comment_is_top":false,"comment_ctime":1548829518,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"14433731406","product_id":100020901,"comment_content":"整理磁盘碎块","like_count":4},{"had_liked":false,"id":280424,"user_name":"Never End","can_delete":false,"product_type":"c1","uid":1181565,"ip_address":"","ucode":"0528265D5AAD66","user_header":"https://static001.geekbang.org/account/avatar/00/12/07/7d/08ab5206.jpg","comment_is_top":false,"comment_ctime":1614213147,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10204147739","product_id":100020901,"comment_content":"老师，我想请教一个问题，困扰了很久很久了，就是我们有一个kubernetes程序，跑一段时间之后服务器的读带宽就回占用非常高，io也会跑满导致服务器根本无法操作，执行命令非常难，无法排查问题怎么办","like_count":2},{"had_liked":false,"id":64642,"user_name":"梁中华","can_delete":false,"product_type":"c1","uid":1006789,"ip_address":"","ucode":"52FE40242CBAD0","user_header":"https://static001.geekbang.org/account/avatar/00/0f/5c/c5/1231d633.jpg","comment_is_top":false,"comment_ctime":1548839861,"is_pvip":true,"replies":[{"id":"22988","content":"嗯嗯，其实抠细节的话，每一条都可以单独开一章了。篇幅有限，只能大略介绍一下","user_name":"作者回复","comment_id":64642,"uid":"1001282","ip_address":"","utype":1,"ctime":1548943979,"user_name_real":"倪朋飞"}],"discussion_count":1,"race_medal":1,"score":"10138774453","product_id":100020901,"comment_content":"针对Ssd 的特性和注意事项可以考虑单开一章","like_count":3,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":438115,"discussion_content":"嗯嗯，其实抠细节的话，每一条都可以单独开一章了。篇幅有限，只能大略介绍一下","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1548943979,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":64549,"user_name":"2xshu","can_delete":false,"product_type":"c1","uid":1188473,"ip_address":"","ucode":"71584CB9676EDF","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKsz8j0bAayjSne9iakvjzUmvUdxWEbsM9iasQ74spGFayIgbSE232sH2LOWmaKtx1WqAFDiaYgVPwIQ/132","comment_is_top":false,"comment_ctime":1548818720,"is_pvip":false,"replies":[{"id":"22979","content":"修改  &#47;sys&#47;block&#47;{DEVICE-NAME}&#47;queue&#47;scheduler","user_name":"作者回复","comment_id":64549,"uid":"1001282","ip_address":"","utype":1,"ctime":1548943184,"user_name_real":"倪朋飞"}],"discussion_count":3,"race_medal":0,"score":"10138753312","product_id":100020901,"comment_content":"老师好，如何修改磁盘的io调度算法哇？","like_count":3,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":438064,"discussion_content":"修改  /sys/block/{DEVICE-NAME}/queue/scheduler","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1548943184,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1812754,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/a9/12/e041e7b2.jpg","nickname":"Ping","note":"","ucode":"FC4743D8FEF61C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":236142,"discussion_content":"请问这里调度算法指的是什么？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1587063258,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1069269,"avatar":"https://static001.geekbang.org/account/avatar/00/10/50/d5/73334a95.jpg","nickname":"doos","note":"","ucode":"7C9AF67F90E65C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1812754,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/a9/12/e041e7b2.jpg","nickname":"Ping","note":"","ucode":"FC4743D8FEF61C","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":562407,"discussion_content":"就是通用层来调度io进行磁盘写入的的算法","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1649819397,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":236142,"ip_address":""},"score":562407,"extra":""}]}]},{"had_liked":false,"id":64612,"user_name":"麋鹿在泛舟","can_delete":false,"product_type":"c1","uid":1121975,"ip_address":"","ucode":"1379CADA08688E","user_header":"https://static001.geekbang.org/account/avatar/00/11/1e/b7/b20ab184.jpg","comment_is_top":false,"comment_ctime":1548835416,"is_pvip":true,"replies":[{"id":"22984","content":"安全的使用fio是什么意思？一般来说，测试时别在系统盘或者存有重要的磁盘中来操作","user_name":"作者回复","comment_id":64612,"uid":"1001282","ip_address":"","utype":1,"ctime":1548943700,"user_name_real":"倪朋飞"}],"discussion_count":3,"race_medal":0,"score":"5843802712","product_id":100020901,"comment_content":"所以请问如何安全的使用fio呢， 是单独使用一个device用来测试fio么？","like_count":1,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":438099,"discussion_content":"安全的使用fio是什么意思？一般来说，测试时别在系统盘或者存有重要的磁盘中来操作","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1548943700,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1916685,"avatar":"https://static001.geekbang.org/account/avatar/00/1d/3f/0d/1e8dbb2c.jpg","nickname":"怀揣梦想的学渣","note":"","ucode":"2349B9F4F6FDE3","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":220241,"discussion_content":"fio测试一般要避开带有业务的磁盘，但是对于云存储，物理盘带有业务数据是没事的，只要裸机上的分开了就可以，但是测试过程必然会影响带有业务数据的物理盘的性能、","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585841366,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1443039,"avatar":"","nickname":"匿名用户","note":"","ucode":"B2C96C05CFAE1D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":1920,"discussion_content":"我理解的是：首先fio是为了一款性能压测工具，可以针对块设备或者文件进行性能压测。针对你提出的是否单独使用一个device进行压测这个问题，还是看你自己的选择。fio可以针对不同的块设备或者文件同时进行压测。建议看看fio的howto文档《https://github.com/axboe/fio/blob/master/HOWTO》","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1563094356,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":64522,"user_name":"划时代","can_delete":false,"product_type":"c1","uid":1061454,"ip_address":"","ucode":"9554CE2F83B77F","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/2o1Izf2YyJSnnI0ErZ51pYRlnrmibqUTaia3tCU1PjMxuwyXSKOLUYiac2TQ5pd5gNGvS81fVqKWGvDsZLTM8zhWg/132","comment_is_top":false,"comment_ctime":1548815005,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5843782301","product_id":100020901,"comment_content":"打卡","like_count":1},{"had_liked":false,"id":309608,"user_name":"言十年","can_delete":false,"product_type":"c1","uid":1110039,"ip_address":"","ucode":"67B8B49C3A3B17","user_header":"https://static001.geekbang.org/account/avatar/00/10/f0/17/796a3d20.jpg","comment_is_top":false,"comment_ctime":1630251448,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1630251448","product_id":100020901,"comment_content":"执行fio报下面的问题<br><br>randread: (g=0): rw=randread, bs=(R) 4096B-4096B, (W) 4096B-4096B, (T) 4096B-4096B, ioengine=libaio, iodepth=64<br>fio-3.7<br>Starting 1 process<br>randread: Laying out IO file (1 file &#47; 2048MiB)<br>fio: looks like your file system does not support direct=1&#47;buffered=0<br>fio: destination does not support O_DIRECT<br>fio: pid=30820, err=22&#47;file:filesetup.c:699, func=open(&#47;dev&#47;sda), error=Invalid argument<br><br><br>Run status group 0 (all jobs):<br>","like_count":0},{"had_liked":false,"id":290853,"user_name":"学生监狱","can_delete":false,"product_type":"c1","uid":1007240,"ip_address":"","ucode":"CA9510F6211FCF","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/AkcVibvqux0qrKFbV7skQvQfHsl96tu9HTSaromQyzf7OOSacoorSDreBNbwOdlBeOrKr3Alc1zle66wKkibrL5g/132","comment_is_top":false,"comment_ctime":1619782843,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1619782843","product_id":100020901,"comment_content":"我们就通过 blktrace+fio 的组合使用，得到了应用程序 I&#47;O 模式的基准测试报告。<br>我可以实现在A 服务器上面使用blotrace做IO的录制，到B服务器上面使用fio做回放吗？<br>这样可以实现业务上线前对比A，B服务器的IO性能情况。","like_count":1},{"had_liked":false,"id":281442,"user_name":"郑斌","can_delete":false,"product_type":"c1","uid":2224641,"ip_address":"","ucode":"E253447BAB1E23","user_header":"https://static001.geekbang.org/account/avatar/00/21/f2/01/80521228.jpg","comment_is_top":false,"comment_ctime":1614752198,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1614752198","product_id":100020901,"comment_content":"“第四，在需要频繁读写同一块磁盘空间时，可以用 mmap 代替 read&#47;write，减少内存的拷贝次数。”<br>老师能详细说说背后的原理么","like_count":0},{"had_liked":false,"id":278288,"user_name":"鱼","can_delete":false,"product_type":"c1","uid":1487584,"ip_address":"","ucode":"89EC9CE3AD0281","user_header":"https://static001.geekbang.org/account/avatar/00/16/b2/e0/d856f5a4.jpg","comment_is_top":false,"comment_ctime":1612857981,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1612857981","product_id":100020901,"comment_content":"应用程序优化中使用CFQ调取器，I&#47;O调度不是通用块层的逻辑吗？在I&#47;O栈中处于文件系统之下，为何分类在最上层的应用程序优化中呢?按理说应该属于磁盘优化啊。","like_count":0},{"had_liked":false,"id":257457,"user_name":"雄鹰","can_delete":false,"product_type":"c1","uid":1786819,"ip_address":"","ucode":"67E0C4BDE7F6F2","user_header":"https://static001.geekbang.org/account/avatar/00/1b/43/c3/2c53acd7.jpg","comment_is_top":false,"comment_ctime":1603978183,"is_pvip":true,"discussion_count":2,"race_medal":0,"score":"1603978183","product_id":100020901,"comment_content":"老师你好：有个关于磁盘做raid问题请教您，测hdfs的基准性能，现在服务器上有4块磁盘，是把这4块磁盘做成raid0(单考虑性能)的读写性能好还是4块磁盘都是挂裸盘的读写性能好？","like_count":0,"discussions":[{"author":{"id":1069269,"avatar":"https://static001.geekbang.org/account/avatar/00/10/50/d5/73334a95.jpg","nickname":"doos","note":"","ucode":"7C9AF67F90E65C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":562408,"discussion_content":"raid0就是读写比较好，但是没有安全保障，所以生产环境你要是磁盘比较多可以搞raid10或者raid6和raid50","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1649819519,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1325101,"avatar":"https://static001.geekbang.org/account/avatar/00/14/38/2d/9c971119.jpg","nickname":"若丶相依","note":"","ucode":"6482339C859C40","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":328129,"discussion_content":"raid0性能最好。但推荐做raid10或裸盘使用。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1606067929,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":256453,"user_name":"evan","can_delete":false,"product_type":"c1","uid":1543040,"ip_address":"","ucode":"491B073D5AFEDE","user_header":"https://static001.geekbang.org/account/avatar/00/17/8b/80/8702bd5f.jpg","comment_is_top":false,"comment_ctime":1603628166,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1603628166","product_id":100020901,"comment_content":"做分布式存储: rocksdb+raft<br>其实rocksdb就是&quot;将随机写转变为顺序写&quot;这一思路进行读写性能优化.<br>写: 将随机写转变为顺序写 + ssd + nvme0n1<br>读: rocksdb自身会通过compaction合并sst问件, 以减少读放大, 也可以增加内存缓存, 提高读性能.","like_count":0},{"had_liked":false,"id":243033,"user_name":"Geek_04e22a","can_delete":false,"product_type":"c1","uid":1184505,"ip_address":"","ucode":"B64FF12EA28BA6","user_header":"https://static001.geekbang.org/account/avatar/00/12/12/f9/7e6e3ac6.jpg","comment_is_top":false,"comment_ctime":1597926271,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1597926271","product_id":100020901,"comment_content":"一直对I&#47;O系统感觉很模糊，现在通过这篇文章了解了I&#47;O的结构，以及系统操作I&#47;O的顺序。<br>对于优化，我感觉上层优化效果可能比下层更简单、更有效，毕竟下面都是通用的，已经经过多人优化了。但是如果追求高性能，还是可以继续研究底层，比如针对磁盘磁头读取轨道和磁盘读取的位置进行计算来提升性能","like_count":0},{"had_liked":false,"id":242456,"user_name":"宁静致远","can_delete":false,"product_type":"c1","uid":2102523,"ip_address":"","ucode":"EE318AA9ABF1A7","user_header":"https://static001.geekbang.org/account/avatar/00/20/14/fb/38761446.jpg","comment_is_top":false,"comment_ctime":1597733443,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1597733443","product_id":100020901,"comment_content":"有个问题关于fio做性能基准测试的，当用fio测试IOPS，并发&#47;并行提高上去以后，即增加iodepth和numjobs，虽然IOPS是上去了，但是相应的时延也增加了，我的理解是在时延很大的情况下，再大的IOPS也没什么意义，那我们该如何选择呢？目前我的选择是，在分布式存储系统中，客户端时延上限25毫秒，在这个限制下看系统可提供的极限IOPS。","like_count":0},{"had_liked":false,"id":218377,"user_name":"Geek_294e71","can_delete":false,"product_type":"c1","uid":1995238,"ip_address":"","ucode":"1D2E0F6A473FBC","user_header":"","comment_is_top":false,"comment_ctime":1589791963,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1589791963","product_id":100020901,"comment_content":"@倪老师<br><br>我ssd的随机写入4k大小，队列深度32，iops只有80k，速率只有80M呢，按理来说应该有150k左右的iops才正常，我怎么找到这个随机写慢的原因呢，哪里能优化设置下呢？","like_count":0},{"had_liked":false,"id":206447,"user_name":"刘友淙","can_delete":false,"product_type":"c1","uid":1620058,"ip_address":"","ucode":"97F3A69A308313","user_header":"","comment_is_top":false,"comment_ctime":1586862793,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1586862793","product_id":100020901,"comment_content":"D13 打卡","like_count":0},{"had_liked":false,"id":203808,"user_name":"Ping","can_delete":false,"product_type":"c1","uid":1812754,"ip_address":"","ucode":"FC4743D8FEF61C","user_header":"https://static001.geekbang.org/account/avatar/00/1b/a9/12/e041e7b2.jpg","comment_is_top":false,"comment_ctime":1586269015,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1586269015","product_id":100020901,"comment_content":"老师能推荐本关于fio或磁盘io比较好的书吗？","like_count":1},{"had_liked":false,"id":168313,"user_name":"花晨少年","can_delete":false,"product_type":"c1","uid":1098987,"ip_address":"","ucode":"6AA3537A6BA10E","user_header":"https://static001.geekbang.org/account/avatar/00/10/c4/eb/2285a345.jpg","comment_is_top":false,"comment_ctime":1578045646,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1578045646","product_id":100020901,"comment_content":"第四，在需要频繁读写同一块磁盘空间时，可以用 mmap 代替 read&#47;write，减少内存的拷贝次数。<br>-------<br>这句话有些不懂,mmap是跳过了哪个步骤，页面缓存吗，页面缓存不是就是为了解决频繁从磁盘读取而设计的吗?<br>还是说直接把页面缓存直接映射到用户的虚拟内存空间中?","like_count":0,"discussions":[{"author":{"id":1101226,"avatar":"https://static001.geekbang.org/account/avatar/00/10/cd/aa/33d48789.jpg","nickname":"卫江","note":"","ucode":"DE2F7A6916F1A9","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":133762,"discussion_content":"是的，linux在处理文件映射的时候，会根据打开的文件查找在内存中的page cache,然后建立映射关系，这样一来就避免了数据在内核态与用户态之间的复制。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1578987038,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":151918,"user_name":"88591","can_delete":false,"product_type":"c1","uid":1254656,"ip_address":"","ucode":"04CE3E46455185","user_header":"https://static001.geekbang.org/account/avatar/00/13/25/00/3afbab43.jpg","comment_is_top":false,"comment_ctime":1573813146,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573813146","product_id":100020901,"comment_content":"干货满满","like_count":0},{"had_liked":false,"id":142503,"user_name":"李明华","can_delete":false,"product_type":"c1","uid":1139232,"ip_address":"","ucode":"26EA452520834E","user_header":"","comment_is_top":false,"comment_ctime":1571381323,"is_pvip":false,"replies":[{"id":"55584","content":"检查一下是不是指标的计算方法有问题？","user_name":"作者回复","user_name_real":"倪朋飞","uid":"1001282","ctime":1571840627,"ip_address":"","comment_id":142503,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1571381323","product_id":100020901,"comment_content":"大神好：<br>我在生产的一台新上架的服务器上，测试了随机读的磁盘指标<br> sudo fio -name=randread -direct=1 -iodepth=64 -rw=randread -ioengine=libaio -bs=4k -size=2G -numjobs=1 -runtime=1000 -group_reporting -filename=&#47;dev&#47;sda<br>---------------------------------------------------------------------------<br>结果<br>    slat (usec): min=2, max=151, avg=13.73, stdev= 7.29<br>    clat (usec): min=37, max=948718, avg=20301.72, stdev=27583.37<br>     lat (usec): min=44, max=948725, avg=20315.79, stdev=27583.38<br>    clat percentiles (usec):<br>     |  1.00th=[   109],  5.00th=[  2040], 10.00th=[  3163], 20.00th=[  5080],<br>     | 30.00th=[  6783], 40.00th=[  8455], 50.00th=[ 10552], 60.00th=[ 14222],<br>     | 70.00th=[ 19268], 80.00th=[ 28181], 90.00th=[ 47449], 95.00th=[ 70779],<br>     | 99.00th=[137364], 99.50th=[170918], 99.90th=[252707], 99.95th=[287310],<br>     | 99.99th=[367002]<br>   bw (  KiB&#47;s): min=10184, max=17664, per=99.73%, avg=12564.09, stdev=1256.26, samples=332<br>   iops        : min= 2546, max= 4418, avg=3141.02, stdev=314.09, samples=332<br>从而可以看出 ，随机读的极限也就在 iops：4418 读吞吐量在 17.25M   IO使用率也差不多极限了<br><br>同时iostat 也观察了磁盘的指标<br>Device            r&#47;s     w&#47;s     rkB&#47;s     wkB&#47;s   rrqm&#47;s   wrqm&#47;s  %rrqm  %wrqm r_await w_await aqu-sz rareq-sz wareq-sz  svctm  %util<br>sda           3876.00    0.00  15504.00      0.00     0.00     0.00   0.00   0.00   16.48    0.00  55.94     4.00     0.00   0.26 100.00<br><br>Device            r&#47;s     w&#47;s     rkB&#47;s     wkB&#47;s   rrqm&#47;s   wrqm&#47;s  %rrqm  %wrqm r_await w_await aqu-sz rareq-sz wareq-sz  svctm  %util<br>sda           3846.00    5.00  15384.00   1064.00     0.00     0.00   0.00   0.00   16.46 2521.40  68.18     4.00   212.80   0.26 100.00<br><br>读IOPS在3800-3900  吞吐量在15.5M IO使用率已经100%<br><br>而我生产（大量小文件场景，应该是随机IO）使用promethes的node_exporter采集的指标中  读吞吐量  可以达到73M+  这个感觉差的有点大   ？？？  这个是哪里不对吗？？？  iops 不高 最多两千多<br>+++++++++++++++++++++++++++++++++++++++++++++++++++<br>另外就是<br>我通过监控发现 IO使用率  有时候iops和吞吐量不多 范围100%   而多的反问不到100%  cpu也正常 不搞<br>我还能通过其他方面查看问题吗<br>","like_count":0,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":471152,"discussion_content":"检查一下是不是指标的计算方法有问题？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571840627,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":132906,"user_name":"404","can_delete":false,"product_type":"c1","uid":1332976,"ip_address":"","ucode":"9191D016A64B4E","user_header":"","comment_is_top":false,"comment_ctime":1568270272,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1568270272","product_id":100020901,"comment_content":"能否详解一下 队列长度 的意思和对磁盘的影响","like_count":0,"discussions":[{"author":{"id":1959822,"avatar":"https://static001.geekbang.org/account/avatar/00/1d/e7/8e/318cfde0.jpg","nickname":"Spoon","note":"","ucode":"2FF9193AD482C2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":339006,"discussion_content":"队列越长，队列内的数据越多，吞吐量自然就上去了。但是排队意味着等待，延时就上去了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1609473557,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":127311,"user_name":"Geek_b04b12","can_delete":false,"product_type":"c1","uid":1112139,"ip_address":"","ucode":"F8705A21FCDF09","user_header":"https://static001.geekbang.org/account/avatar/00/10/f8/4b/5ae62b10.jpg","comment_is_top":false,"comment_ctime":1566646543,"is_pvip":false,"replies":[{"id":"47209","content":"嗯嗯，在采购之后一般也要测评一下，看看是不是跟预期一样","user_name":"作者回复","user_name_real":"倪朋飞","uid":"1001282","ctime":1566743424,"ip_address":"","comment_id":127311,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1566646543","product_id":100020901,"comment_content":"你像fio和blkstrace 的工具，这个是在批量采购之前进行磁盘的性能的评估吧，在生产环境中用并不是很多吧？有点像是产品上线的设备选购。。","like_count":0,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":464432,"discussion_content":"嗯嗯，在采购之后一般也要测评一下，看看是不是跟预期一样","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566743424,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":106553,"user_name":"风动草","can_delete":false,"product_type":"c1","uid":1303051,"ip_address":"","ucode":"6ED975DC4DD0D0","user_header":"https://static001.geekbang.org/account/avatar/00/13/e2/0b/e3c8765a.jpg","comment_is_top":false,"comment_ctime":1561342696,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1561342696","product_id":100020901,"comment_content":"不止超过20%，比如所有全局和线程级别的加起来，用你给的链接算最大使用内存是8g，但还是使用能达到12g，最后oom。但迁移到普通票这个现象就消失了。。。迁移到ssd就是有这个问题，迁移了几次，结果都这样。","like_count":0},{"had_liked":false,"id":104007,"user_name":"InfoQ_686548eeb0d8","can_delete":false,"product_type":"c1","uid":1316985,"ip_address":"","ucode":"8222D0A7EE6155","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIsf7oYWKWrCu7LzT4xt2ZvLdNsn2Me8yEcdgVjJTKe68MQicIcO09FLXRYH5R8hCJ9RiatklFkSGtQ/132","comment_is_top":false,"comment_ctime":1560588382,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1560588382","product_id":100020901,"comment_content":"磁盘可以收缩具体指的什么？","like_count":0},{"had_liked":false,"id":84920,"user_name":"xierongfei","can_delete":false,"product_type":"c1","uid":1298910,"ip_address":"","ucode":"2B4F061FA93A76","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/mnBC29lF1RibHdwkZdPdGM9QRAl7Y7Aicad8vpmIEialjia93IEVSAHibkKdwHwfZr6qedVHiafKUD8Yk1v2eiaibj8l0w/132","comment_is_top":false,"comment_ctime":1554945405,"is_pvip":true,"replies":[{"id":"30626","content":"嗯嗯，推荐测试一下，也可以顺便确认新机器的性能没有问题（同配置的性能应该大致相同）","user_name":"作者回复","user_name_real":"倪朋飞","uid":"1001282","ctime":1555074299,"ip_address":"","comment_id":84920,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1554945405","product_id":100020901,"comment_content":"老师，新购的服务器是不是应该做一个基准测试，方便以后作为性能问题定位的基准？","like_count":0,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":446495,"discussion_content":"嗯嗯，推荐测试一下，也可以顺便确认新机器的性能没有问题（同配置的性能应该大致相同）","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1555074299,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":77651,"user_name":"如果","can_delete":false,"product_type":"c1","uid":1320638,"ip_address":"","ucode":"138A3EEEE50850","user_header":"","comment_is_top":false,"comment_ctime":1552978506,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1552978506","product_id":100020901,"comment_content":"DAY31，打卡<br>","like_count":0},{"had_liked":false,"id":73257,"user_name":"苦行僧","can_delete":false,"product_type":"c1","uid":1055334,"ip_address":"","ucode":"726024A9A9CF44","user_header":"https://static001.geekbang.org/account/avatar/00/10/1a/66/2d9db9ed.jpg","comment_is_top":false,"comment_ctime":1551845895,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1551845895","product_id":100020901,"comment_content":"老师 我们经常会出现写文件出现0k文件 这种一般是什么情况会出现的？","like_count":0},{"had_liked":false,"id":72480,"user_name":"苦行僧","can_delete":false,"product_type":"c1","uid":1055334,"ip_address":"","ucode":"726024A9A9CF44","user_header":"https://static001.geekbang.org/account/avatar/00/10/1a/66/2d9db9ed.jpg","comment_is_top":false,"comment_ctime":1551657088,"is_pvip":false,"replies":[{"id":"26330","content":"磁盘I&#47;O已经是瓶颈的话，可以考虑优化存储，比如更快的磁盘、RAID 等","user_name":"作者回复","user_name_real":"倪朋飞","uid":"1001282","ctime":1551706568,"ip_address":"","comment_id":72480,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1551657088","product_id":100020901,"comment_content":"我们现在的问题就是并发机器下载远程ftp视频文件写本地存储，这个本地存储是共享存储，目前的情况是读快写慢，导致数据落盘很慢，老师有没有好的优化方法吗？","like_count":0,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":441609,"discussion_content":"磁盘I/O已经是瓶颈的话，可以考虑优化存储，比如更快的磁盘、RAID 等","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1551706568,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":69765,"user_name":"小橙子","can_delete":false,"product_type":"c1","uid":1244724,"ip_address":"","ucode":"7E3DD87C3DE6F9","user_header":"https://static001.geekbang.org/account/avatar/00/12/fe/34/67c1ed1e.jpg","comment_is_top":false,"comment_ctime":1550834301,"is_pvip":false,"replies":[{"id":"25332","content":"看英文注释，一个是Submission，一个是Completion。<br><br>同步ClAT为0是因为两个操作算作是一个（第一个），第二个当然数值上就是0了","user_name":"作者回复","user_name_real":"倪朋飞","uid":"1001282","ctime":1551193587,"ip_address":"","comment_id":69765,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1550834301","product_id":100020901,"comment_content":"slat指的是II从创建到提交到内核的时间吧<br>clat的指的是每个收到到完成的时间吧<br>感觉这里解释的有点没看明白<br>请教下同步IO为啥ClAT为0","like_count":0,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":440271,"discussion_content":"看英文注释，一个是Submission，一个是Completion。\n\n同步ClAT为0是因为两个操作算作是一个（第一个），第二个当然数值上就是0了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1551193587,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]}]}