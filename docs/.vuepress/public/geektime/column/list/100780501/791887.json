{"id":791887,"title":"02｜快速了解和搭建K8s集群","content":"<p>你好，我是雪飞。</p><p>上一讲我们介绍了容器相关知识，相信你已经理解了容器带来的巨大变革。你的应用也可以拆成多个微服务，每个服务可以通过容器的方式快速部署。但是问题来了，如果你只部署少量几个微服务应用，通过 Docker 命令管理起来很容易，但是如果你有几十甚至上百个微服务需要容器化部署，那么部署和管理这些大量容器也是巨大的工作量。</p><p>这个时候你会想，如果有个容器管理工具就好了，只要把需要部署微服务的容器事先编排好，部署的时候一键执行，然后你的应用就可以按照预期直接访问，这该有多轻松呀。对，Kubernetes 就能满足你的需求。</p><blockquote>\n<p><span class=\"reference\">应用、业务应用、应用程序在本课程中是同样的意思，就是研发开发出来的一个软件系统，最终提供给用户访问使用。</span><br>\n<span class=\"reference\">微服务架构是指你的应用可能拆分成了多个子应用，每个子应用实现了一部分业务功能，这些子应用就是一个个微服务，这些微服务独立打包镜像和部署。</span></p>\n</blockquote><h2>认识 K8s</h2><p>Kubernetes&nbsp;这个名字源于希腊语，意思为“舵手”。K8s 这个缩写是因为 K 和 s 之间有8个字符的关系（后面的课程我会使用 K8s 这个缩写代替 Kubernetes）。它是一个开源的容器编排平台，用于自动部署、扩展和管理大规模容器化应用。K8s 最初由 Google 设计并捐赠给云原生计算基金会（CNCF，Cloud Native Computing Foundation）来维护，所以 CKA 证书也是由 CNCF 组织颁发。</p><!-- [[[read_end]]] --><p>K8s 是安装在多个服务器组成的集群环境上，这些服务器可以是物理机、虚拟机或者是云服务器，它们在集群中都叫做节点，这些节点协同工作组成了 K8s 的硬件基础设施，K8s 就运行在这个集群环境上，所以 K8s 也被称为云原生操作系统。</p><p><img src=\"https://static001.geekbang.org/resource/image/e5/ac/e52985c9b500e109f5ba30df7dyy7dac.jpg?wh=2041x1189\" alt=\"图片\"></p><p>在集群中，所有的服务器有两个角色，一个是管理节点，也被称为控制面节点或者 Master 节点（Master Node），另一个是工作节点（Worker Node），也简称为节点。</p><p>管理节点（Master）扮演着大脑的角色，负责维护集群的整体状态和调度决策。管理节点上运行着 K8s 的核心组件，包括 API Server、调度器、控制器管理组件和 etcd，这些组件共同确保了集群的稳定性和高效运行。</p><p>工作节点（Node）则是执行具体任务的劳动力，工作节点上运行着 kubelet、容器运行时和 kube-proxy 等组件，负责启动和管理容器的生命周期，以及实现集群内部的网络路由。</p><p>我们大致了解了 K8s 的组成，你是不是已经跃跃欲试了，我现在就来带你搭建一套 K8s 集群，这样后续的知识点都可以在搭建好的集群上进行尝试，从而加深你对概念的理解。</p><h2>快速搭建 K8s 集群</h2><p>搭建 K8s 集群通常有多种方式，kubeadm 是 K8s 官方提供的集群部署工具，这种方法最为常用，简单快速，适合初学者。本次课程我就带你使用 kubeadm 搭建集群。</p><h3>准备硬件</h3><p>首先做一下准备工作，本次我们搭建一套 3 个节点的 K8s 集群，服务器可以使用个人电脑虚拟出 3 台服务器，也可以在云厂商（例如阿里云、腾讯云）租用 3 台服务器，配置不用太高，最小硬件配置：2 核 CPU、2G 内存、20G 硬盘，操作系统需要是 Linux。服务器需要可以访问外网，有些镜像要从网上拉取。以下表格是我在本次实验中使用的服务器配置。</p><p><strong>注意：</strong>这 3 台服务器需要在同一个内网环境，可以通过内网 IP 相互访问，在集群配置过程中会使用到内网 IP。如果你要使用外网 IP 搭建集群，还需要单独配置虚拟网卡以及修改一些配置，可以参考网上相关文章。</p><p><img src=\"https://static001.geekbang.org/resource/image/f9/e8/f9530d0dca45911a8d635861684301e8.jpg?wh=2132x566\" alt=\"图片\"></p><p>准备好硬件，我们先要从个人电脑中通过 SSH 命令分别连接到这 3 台服务器。打开个人电脑上的终端命令应用，然后输入连接命令，再输入密码，就可以远程连接服务器了。</p><pre><code class=\"language-bash\"> ssh &lt;username&gt;@&lt;IP&gt;”  #username 是服务器的用户名，IP 地址使用公网 IP 地址\n</code></pre><p>连接成功后就会进入到服务器的 Shell 终端窗口。下面安装过程中的命令都需要在服务器的 Shell 终端窗口里去执行。</p><h3>准备系统配置</h3><p>我们需要在所有 3 台服务器上都完成以下准备工作。在这 3 台服务器的 Shell 终端窗口里逐步执行以下命令。</p><p><strong>1. 关闭防火墙及相关配置</strong></p><p>以下操作是为了关闭 Linux 操作系统的防火墙、安全服务和 swap 分区，你直接将命令拷贝到终端窗口中执行即可。如果有提示执行命令权限不够，可以切换到 root 用户或者在命令前增加 “sudo” 来提升执行命令的权限。</p><pre><code class=\"language-bash\"># 关闭和禁用防火墙\nsystemctl stop firewalld\nsystemctl disable firewalld\n\n# 关闭selinux，selinux 是 Linux 系统下的一个安全服务，需要关闭\nsetenforce 0 &nbsp;# 临时\nsed -i 's/enforcing/disabled/' /etc/selinux/config &nbsp;# 永久\n\n# 关闭 Linux 的 swap 分区，提升 Kubernetes 的性能\nswapoff -a &nbsp;# 临时\nsed -ri 's/.*swap.*/#&amp;/' /etc/fstab &nbsp;&nbsp;&nbsp;# 永久\n</code></pre><p><strong>2. 按照规划修改主机名</strong></p><p>K8s 使用主机名进行节点的通信，所以需要按照表格中的主机名修改 3 台服务器的主机名。注意：K8s 要求主机名使用 “-” 或者 “.” 连接，不能使用下划线 “_”。</p><pre><code class=\"language-bash\"># 在192.168.1.11 这个机器上执行修改主机名命令\nhostnamectl set-hostname k8s-master\n\n# 在192.168.1.12 这个机器上执行修改主机名命令\nhostnamectl set-hostname k8s-worker1\n\n# 在192.168.1.13 这个机器上执行修改主机名命令\nhostnamectl set-hostname k8s-worker2\n</code></pre><p><strong>3. 主机名解析</strong></p><p>在每个服务器上都增加主机名和 IP 的对应关系，执行以下命令快速编辑 “/etc/hosts” 文件，增加解析配置。</p><pre><code class=\"language-bash\"># 添加各个节点的解析，IP 地址需要替换为你自己服务器的内网 IP 地址。\ncat &gt;&gt; /etc/hosts &lt;&lt; EOF\n192.168.1.11 k8s-master\n192.168.1.12 k8s-worker1\n192.168.1.13 k8s-worker2\nEOF\n</code></pre><p><strong>4. 时间同步</strong></p><p>K8s 要求集群中的所有服务器时间一致，使用 ntpdate（Network Time Protocol）从网络同步时间，执行以下命令安装 ntpdate，之后再执行同步命令。</p><pre><code class=\"language-bash\"># 安装ntp服务\nyum install ntpdate -y\n\n# 安装完成后使用阿里云的时间服务同步时间 \nntpdate ntp1.aliyun.com\n</code></pre><p>如果提示没有匹配到 ntpdate（Unable to find a match: ntpdate），则可以使用 wlnmp 的软件源安装 wntp，然后再执行时间同步，执行以下命令：</p><pre><code class=\"language-bash\">rpm -ivh http://mirrors.wlnmp.com/centos/wlnmp-release-centos.noarch.rpm\nyum install wntp -y\n\n# 安装完成后使用阿里云的时间服务同步时间 \nntpdate ntp1.aliyun.com\n</code></pre><p><strong>5. 配置网络</strong></p><p>为了让 K8s 能够转发网络流量，你需要修改 iptables 的配置。执行以下命令快速编辑 “etc/sysctl.d/k8s.conf” 配置文件，增加 iptables 的配置。</p><pre><code class=\"language-bash\"># 修改 Linux 内核参数，添加网桥过滤和地址转发功能\ncat &gt; /etc/sysctl.d/k8s.conf &lt;&lt; EOF\nnet.bridge.bridge-nf-call-ip6tables = 1\nnet.bridge.bridge-nf-call-iptables = 1\nEOF\n\n# 使配置生效\nsudo sysctl --system\n</code></pre><p><strong>6. 重启服务器</strong></p><p>运行 “reboot” 命令，重启服务器，让以上配置生效。</p><pre><code class=\"language-plain\">reboot\n</code></pre><h3>安装相关软件</h3><p>完成系统配置，我们继续在这 3 台服务器上执行以下命令来安装相关软件。</p><p><strong>1. 安装 Docker</strong></p><p>我们使用 Docker 作为运行容器的运行时组件，需要先安装 Docker。通过 wget 命令来下载 Docker 的安装包仓库，然后通过 yum 命令进行安装，安装完成之后再执行开启 Docker 服务命令。</p><pre><code class=\"language-bash\"># 通过 wget 命令获取 docker 软件仓库信息\nwget https://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo -O /etc/yum.repos.d/docker-ce.repo\n\n# 安装 docker-ce\nyum -y install docker-ce\n\n# 开启 docker 服务\nsystemctl enable docker &amp;&amp; systemctl start docker\n</code></pre><p>Docker 安装完成之后，配置阿里云提供的镜像库来加速镜像下载。执行以下命令快速编辑 “/etc/docker/daemon.json” 文件，增加镜像库配置，最后再重启 Docker 服务。</p><pre><code class=\"language-bash\"># 配置镜像下载加速器，国内使用阿里云镜像库会更快\ncat &gt; /etc/docker/daemon.json &lt;&lt; EOF\n{\n  \"registry-mirrors\": [\"https://b9pmyelo.mirror.aliyuncs.com\"],\n  \"exec-opts\": [\"native.cgroupdriver=systemd\"]\n}\nEOF\n\n# 重启 docker 服务\nsystemctl restart docker\n</code></pre><p><strong>2. 安装cri-dockerd</strong></p><p>cri-dockerd 用于为 Docker 提供一个能够支持 K8s 容器运行时标准的工具，从而能够让 Docker 作为 K8s 容器引擎。通过 wget 下载 cri-dockerd 安装包，然后通过 rpm 命令进行安装。如果官方地址下载太慢，可以使用我提供的离线安装包（<a href=\"https://pan.baidu.com/s/1LOSuxBjXxC-RY3HA49O3YQ?pwd=nysi\">下载地址</a>）。</p><pre><code class=\"language-bash\"># 通过 wget 命令获取 cri-dockerd软件\nwget https://github.com/Mirantis/cri-dockerd/releases/download/v0.3.12/cri-dockerd-0.3.12-3.el7.x86_64.rpm\n# 通过 rpm 命令执行安装包\nrpm -ivh cri-dockerd-0.3.12-3.el7.x86_64.rpm\n</code></pre><p>安装完成后使用 vi 编辑器修改配置文件（/usr/lib/systemd/system/cri-docker.service），在 “ExecStart=/usr/bin/cri-dockerd --container-runtime-endpoint fd://” 这一行增加 “–pod-infra-container-image=registry.aliyuncs.com/google_containers/pause:3.9”。</p><blockquote>\n<p><span class=\"reference\">vi 编辑器使用简介</span><br>\n<span class=\"reference\">在终端窗口里编辑文件可以使用 vi 编辑器，使用 “vi &lt;文件名&gt;” 命令打开编辑器，然后输入字母 “i”，进入到插入（Insert）模式，这时通过键盘移动光标到要修改的位置，然后输入修改的配置，修改完成后使用键盘上 “esc” 按键退出插入模式，然后输入 “:wq” 之后回车，就可以保存文件并退出编辑器。</span></p>\n</blockquote><pre><code class=\"language-bash\"># 打开 cri-docker.service 配置文件\nvi /usr/lib/systemd/system/cri-docker.service\n\n# 修改对应的配置项\nExecStart=/usr/bin/cri-dockerd --container-runtime-endpoint fd:// --pod-infra-container-image=registry.aliyuncs.com/google_containers/pause:3.9\n</code></pre><p>配置文件修改成功后，重新加载配置并开启 cri-dockerd 服务。</p><pre><code class=\"language-bash\"># 加载配置并开启服务\nsystemctl daemon-reload\nsystemctl enable cri-docker &amp;&amp; systemctl start cri-docker\n</code></pre><p><strong>3. 添加阿里云 YUM 软件源</strong></p><p>执行以下命令快速编辑 “/etc/yum.repos.d/kubernetes.repo” 配置文件，添加阿里云的镜像库。</p><p><strong>注意</strong><strong>：</strong>国内是无法访问 K8s 官方的镜像库，如果不增加这个配置，后续就无法安装相关工具。</p><pre><code class=\"language-bash\">cat &gt; /etc/yum.repos.d/kubernetes.repo &lt;&lt; EOF\n[kubernetes]\nname=Kubernetes\nbaseurl=https://mirrors.aliyun.com/kubernetes/yum/repos/kubernetes-el7-x86_64\nenabled=1\ngpgcheck=0\nrepo_gpgcheck=0\ngpgkey=https://mirrors.aliyun.com/kubernetes/yum/doc/yum-key.gpg https://mirrors.aliyun.com/kubernetes/yum/doc/rpm-package-key.gpg\nEOF\n</code></pre><p><strong>4. 安装 kubeadm</strong><strong>、</strong><strong>kubelet 和 kubectl</strong></p><p>镜像库配置好之后，就进入正式安装过程了。3 台服务器上都需要安装 kubeadm、kubelet 和 kubectl 这三个工具。kubeadm 用来初始化 K8s 集群；kubelet 是每个节点的 K8s 管理员；kubectl 是 K8s 的命令行交互工具。由于版本更新比较快，我这里指定安装的版本是1.28.0。</p><pre><code class=\"language-bash\"># 指定了安装的版本是 1.28.0\nyum install -y kubelet-1.28.0 kubeadm-1.28.0 kubectl-1.28.0\n</code></pre><p>安装成功之后需要先设置开机启动 kubelet 服务。</p><pre><code class=\"language-bash\"># 开机启动 kubelet 服务\nsystemctl enable kubelet\n</code></pre><h3>Master 节点初始化 K8s</h3><p>所有准备工作都完成了，我们终于可以进行 K8s 的初始化了，只需要在 Master 节点上执行以下初始化命令。</p><p><strong>注意</strong><strong>：</strong>“apiserver-advertise-address” 参数需要替换成你的 Master 节点服务器的内网 IP。</p><pre><code class=\"language-bash\">kubeadm init \\\n&nbsp;&nbsp;--apiserver-advertise-address=192.168.1.11&nbsp;\\\n&nbsp;&nbsp;--image-repository registry.aliyuncs.com/google_containers \\\n&nbsp;&nbsp;--kubernetes-version v1.28.0 \\\n&nbsp;&nbsp;--service-cidr=10.96.0.0/12 \\\n&nbsp;&nbsp;--pod-network-cidr=10.244.0.0/16 \\\n  --cri-socket=unix:///var/run/cri-dockerd.sock \\\n&nbsp;&nbsp;--ignore-preflight-errors=all\n</code></pre><p>参数介绍：</p><ul>\n<li><strong>apiserver-advertise-address：</strong>集群广播地址，用 master 节点的内网 IP。</li>\n<li><strong>image-repository：</strong>由于默认拉取镜像地址 k8s.gcr.io 国内无法访问，这里指定阿里云镜像仓库地址。</li>\n<li><strong>kubernetes-version：</strong> K8s 版本，与上面安装的软件版本一致。</li>\n<li><strong>service-cidr：</strong>集群 Service 网段。</li>\n<li><strong>pod-network-cidr：</strong>集群 Pod 网段。</li>\n<li><strong>cri-socket：</strong>指定 cri-socket 接口，我们这里使用 unix:///var/run/cri-dockerd.sock。</li>\n</ul><p>执行命令后耐心等待，直到安装完成，会出现以下内容。</p><pre><code class=\"language-bash\">[addons] Applied essential addon: kube-proxy\n\nYour Kubernetes control-plane has initialized successfully!\n\nTo start using your cluster, you need to run the following as a regular user:\n\n  mkdir -p $HOME/.kube\n  sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config\n  sudo chown $(id -u):$(id -g) $HOME/.kube/config\n\nAlternatively, if you are the root user, you can run:\n\n  export KUBECONFIG=/etc/kubernetes/admin.conf\n\nYou should now deploy a pod network to the cluster.\nRun \"kubectl apply -f [podnetwork].yaml\" with one of the options listed at:\n  https://kubernetes.io/docs/concepts/cluster-administration/addons/\n\nThen you can join any number of worker nodes by running the following on each as root:\n\nkubeadm join 192.168.1.11:6443 --token xxxxxx \\\n        --discovery-token-ca-cert-hash sha256:xxxxxx\n</code></pre><p>其中，在以上返回结果中有 3 条命令需要立即执行，这是用来设置 kubectl 工具的管理员权限，执行之后就可以在 Master 节点上通过终端窗口使用 kubectl 命令了。</p><pre><code class=\"language-bash\"># 在 Master 节点上执行以下命令\nmkdir -p $HOME/.kube\nsudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config\nsudo chown $(id -u):$(id -g) $HOME/.kube/config\n</code></pre><p>在返回结果的最后，还有 1 条 “kubeadm join” 命令，这个是用来加入工作节点的，需要在工作节点上执行。</p><h3>Worker 节点加入 K8s 集群</h3><p>K8s 初始化之后，就可以在其他 2 个工作节点上执行 “kubeadm join” 命令，因为我们使用了 cri-dockerd ，需要在命令加上 “–cri-socket=unix:///var/run/cri-dockerd.sock” 参数。</p><p><strong>注意</strong><strong>：</strong>如果使用公有云的服务器，需要先打开 Master 节点所在服务器的 6443 端口，这个是 K8s 的 API server 端口。</p><pre><code class=\"language-bash\"># 在两个工作节点上执行\nkubeadm join 192.168.1.11:6443 --token xxxxxx \\\n        --discovery-token-ca-cert-hash sha256:xxxxxx \\\n        --cri-socket=unix:///var/run/cri-dockerd.sock\n</code></pre><p>命令中 token 有效期为 24 小时，当 token 过期之后，执行 “kubeadm join” 命令就会报错。这时可以直接在 Master 节点上使用以下命令生成新的 token，然后再使用 “kubeadm join” 命令加入节点。</p><pre><code class=\"language-bash\">kubeadm token create --print-join-command\n</code></pre><p>此时，我们的集群就部署成功了。你可以使用 “kubectl get node” 命令来查看集群节点状态。</p><pre><code class=\"language-bash\">[root@k8s-master ~]# kubectl get node\nNAME&nbsp; &nbsp; &nbsp; &nbsp;   &nbsp;STATUS&nbsp; &nbsp; &nbsp;ROLES&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;AGE&nbsp; &nbsp;VERSION\nk8s-master&nbsp;   &nbsp;NotReady&nbsp; &nbsp;control-plane&nbsp; &nbsp;84m&nbsp; &nbsp;v1.28.0\nk8s-worker1&nbsp; &nbsp; NotReady&nbsp; &nbsp;&lt;none&gt;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 82m&nbsp; &nbsp;v1.28.0\nk8s-worker2&nbsp; &nbsp; NotReady&nbsp; &nbsp;&lt;none&gt;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 47s&nbsp; &nbsp;v1.28.0\n</code></pre><p>你会注意到所有节点的状态都是 “NotReady”，这是由于集群还缺少网络插件，集群的内部网络还没有正常运作。</p><h3>安装 K8s 网络插件</h3><p>K8s 网络插件，也称为容器网络接口（CNI）插件，是实现 K8s 集群中容器间通信和网络连接的关键组件。在这里我使用 Calico 作为集群的网络插件。</p><p>Calico 是通过执行一个 YAML 文件部署到 K8s 集群里的，所以我们首先需要通过 “wget” 命令下载这个 YAML 文件。</p><pre><code class=\"language-bash\"># 下载 Calico 插件部署文件\nwget https://docs.projectcalico.org/manifests/calico.yaml\n</code></pre><p>其次，通过 vi 编辑器修改 “calico.yaml” 文件中的 “CALICO_IPV4POOL_CIDR” 参数，需要与前面 “kubeadm init” 命令中的 “–pod-network-cidr” 参数一样（10.244.0.0/16）。如果文件里的 “CALICO_IPV4POOL_CIDR” 参数前面有 “#”，表示被注释了，需要删除 “#”。</p><p><strong>注意</strong><strong>：</strong>修改文件时确保格式对齐，YAML 文件有严格的格式要求。</p><p>修改位置如下所示。（在 vi 中可以通过输入 “:set nu” 来查看行号，同时可以输入 “/CALICO_IPV4POOL_CIDR” 来快速定位到参数位置）</p><pre><code class=\"language-bash\"># 修改文件时注意格式对齐\n4598 # The default IPv4 pool to create on startup if none exists. Pod IPs will be\n4599 # chosen from this range. Changing this value after installation will have\n4600 # no effect. This should fall within `--cluster-cidr`.\n4601 - name: CALICO_IPV4POOL_CIDR\n4602   value: \"10.244.0.0/16\"\n4603 # Disable file logging so `kubectl logs` works.\n4604 - name: CALICO_DISABLE_FILE_LOGGING\n4605   value: \"true\"\n</code></pre><p>最后，使用 “kubectl apply” 命令将 Calico 插件部署到集群里，部署 YAML 文件命令如下：</p><pre><code class=\"language-bash\">kubectl apply -f calico.yaml\n</code></pre><p>Calico 部署会比较慢，大概等个几分钟，等待 Calico 部署完成后，再次通过命令 “kubectl get node” 查看节点状态，就可以看到所有节点已经准备就绪，恭喜你！此时集群正式搭建成功。</p><pre><code class=\"language-bash\">[root@k8s-master ~]# kubectl get node\nNAME&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;  STATUS&nbsp; &nbsp;ROLES&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;AGE&nbsp; &nbsp;VERSION\nk8s-master&nbsp; &nbsp;  Ready&nbsp; &nbsp; control-plane&nbsp; &nbsp;12h&nbsp; &nbsp;v1.28.0\nk8s-worker1&nbsp; &nbsp; Ready&nbsp; &nbsp; &lt;none&gt;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 12h&nbsp; &nbsp;v1.28.0\nk8s-worker2&nbsp; &nbsp; Ready&nbsp; &nbsp; &lt;none&gt;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 10h&nbsp; &nbsp;v1.28.0\n</code></pre><p><strong>注意</strong><strong>：</strong>如果 Calico 无法安装成功，可能是由于 Calico 镜像无法拉取。我提供了离线镜像包（<a href=\"https://pan.baidu.com/s/1LOSuxBjXxC-RY3HA49O3YQ?pwd=nysi\">下载地址</a>），可以下载两个压缩文件，然后传输到集群中的所有 3 个节点上。</p><p>“calico-image-3.25.1.zip” 中是离线镜像文件，解压后在每个节点上执行导入命令。</p><pre><code class=\"language-bash\">ls *.tar |xargs -i docker load -i {}\n</code></pre><p>“calico-yaml.zip” 中是部署文件，在 Master 节点上依次部署两个 YAML 文件。</p><pre><code class=\"language-bash\"># 先删除之前部署不成功的 Calico\nkubectl delete -f calico.yaml\n\n# 依次部署两个 yaml 文件\nkubectl apply -f tigera-operator.yaml --server-side\nkubectl apply -f custom-resources.yaml\n</code></pre><p>然后等待部署完成，就可以看到所有节点准备就绪。</p><h2><strong>小结</strong></h2><p>今天我给你讲了 K8s 的相关概念，我们再来总结一下。</p><p>首先，了解了什么是 K8s ，K8s 是一个强大的开源容器编排平台。它通过自动化的方式简化了容器的部署、扩展和维护，同时确保了应用程序的高可用性和稳定运行。</p><p>然后，我们探讨了 K8s 集群组成的两个角色，其中管理节点（Master Node）负责集群的整体管理和控制，而工作节点（Worker Node）则运行实际的容器应用。</p><p>最后，我带你搭建了一套 3 台服务器的 K8s 集群。在搭建 K8s 集群的过程中，首先确保所有服务器的硬件和系统配置符合要求；接着在每个服务器安装了 Docker 和 cri-dockerd 作为容器引擎；然后再安装&nbsp;kubeadm、kubelet 和 kubectl 这三个工具。</p><p>这些准备好了，就可以在 Master 节点上执行集群初始化，初始化完成后就可以加入工作节点。最后部署 Calico 网络插件，以确保集群内部的网络通信。这样，你就成功搭建了一个功能强大的 K8s 集群，后续课程我们就可以在这个搭建好的集群上实战操作了。</p><h2>思考题</h2><p>这就是今天的全部内容，最后希望你能按照上面的过程一步步实际操作，自己搭建一套 K8s 集群，你也可以只使用两台服务器，一台作为 Master 节点，另一台作为 Worker 节点，多练几次，你一定能 10 分钟就搭建好一套 K8s 环境。另外欢迎你把搭建集群中遇到的问题写到留言区，我们下节课再见！</p>","comments":[{"had_liked":false,"id":392309,"user_name":"夜空中最亮的星","can_delete":false,"product_type":"c1","uid":1267566,"ip_address":"北京","ucode":"ADC3E7B6789955","user_header":"https://static001.geekbang.org/account/avatar/00/13/57/6e/b6795c44.jpg","comment_is_top":false,"comment_ctime":1720577126,"is_pvip":false,"replies":[{"id":142601,"content":"你好，最亮的星，工作节点上确实不用必须安装kubectl工具，只是因为后面课程讲访问权限的时候会在其他节点上用到kubectl工具，所以就让大家提前安装了。\n你应该是有K8s经验的同学，很不错！但是因为这个是零基础课程，可能会有别的同学没看过其他专栏，所以我还是介绍了很多基础知识，后面中级和高级篇都会涉及很多考点。如果你对K8s很熟悉了，也可以直接等真题篇！","user_name":"作者回复","user_name_real":"编辑","uid":1209006,"ctime":1720612916,"ip_address":"内蒙古","comment_id":392309,"utype":1}],"discussion_count":3,"race_medal":0,"score":2,"product_id":100780501,"comment_content":"“3 台服务器上都需要安装 kubeadm、kubelet 和 kubectl 这三个工具。” node节点不是必须安装 kubectl 。内容和其他专栏重复的太多了。换个角度来组织专栏，最有吸引力的是考试篇3讲，不如从考试题的角度切入，从题反推k8s知识点，展开讲解，并加上答题技巧和注意事项。","like_count":2,"discussions":[{"author":{"id":1209006,"avatar":"https://static001.geekbang.org/account/avatar/00/12/72/ae/cef8a848.jpg","nickname":"雪飞","note":"","ucode":"36BDFD1E35E9DA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":647798,"discussion_content":"你好，最亮的星，工作节点上确实不用必须安装kubectl工具，只是因为后面课程讲访问权限的时候会在其他节点上用到kubectl工具，所以就让大家提前安装了。\n你应该是有K8s经验的同学，很不错！但是因为这个是零基础课程，可能会有别的同学没看过其他专栏，所以我还是介绍了很多基础知识，后面中级和高级篇都会涉及很多考点。如果你对K8s很熟悉了，也可以直接等真题篇！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1720612916,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"内蒙古","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2,\"source\":0}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":647995,"discussion_content":"作为零基础学员需要这样循序渐进的知识讲解","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1720903316,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1017204,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/85/74/e70862a2.jpg","nickname":"、、cryAllen","note":"","ucode":"50032F6E2DDB4B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":647969,"discussion_content":"确实每个人的基础不同，像我这种刚开始学的小白，就需要基础知识。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1720847554,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"浙江","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":392383,"user_name":"Fan","can_delete":false,"product_type":"c1","uid":1115232,"ip_address":"广东","ucode":"3BF28670FD9407","user_header":"https://static001.geekbang.org/account/avatar/00/11/04/60/64d166b6.jpg","comment_is_top":false,"comment_ctime":1720763226,"is_pvip":false,"replies":[{"id":142644,"content":"你好，Fan，只需要在master节点上执行就可以，因为这个是通过kubectl命令部署yaml文件。以后执行kubectl命令都在master节点执行就可以。","user_name":"作者回复","user_name_real":"编辑","uid":1209006,"ctime":1720832164,"ip_address":"内蒙古","comment_id":392383,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100780501,"comment_content":"请问下安装网络插件，只需要在Master 节点执行以下命令还是需要在所有的节点上都执行呢？谢谢。\nkubectl apply -f calico.yaml","like_count":1,"discussions":[{"author":{"id":1209006,"avatar":"https://static001.geekbang.org/account/avatar/00/12/72/ae/cef8a848.jpg","nickname":"雪飞","note":"","ucode":"36BDFD1E35E9DA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":647958,"discussion_content":"你好，Fan，只需要在master节点上执行就可以，因为这个是通过kubectl命令部署yaml文件。以后执行kubectl命令都在master节点执行就可以。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1720832164,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"内蒙古","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2,\"source\":0}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":393635,"user_name":"Geek_042e8a","can_delete":false,"product_type":"c1","uid":1944028,"ip_address":"广东","ucode":"22B648001EC2C1","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIyNIia6IFvSwtvZLa9jMFuvTGCuyRTFiavshEmaLe0PBFZHdw8OnxibFe50HgXs1JCqFQymPUXqrJIA/132","comment_is_top":false,"comment_ctime":1724403657,"is_pvip":false,"replies":[{"id":142966,"content":"你好，你用离线包的时候，要用tigera-operator.yaml和custom-resources.yaml这两个文件安装calico","user_name":"作者回复","user_name_real":"编辑","uid":1209006,"ctime":1724740497,"ip_address":"辽宁","comment_id":393635,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100780501,"comment_content":"用的离线包安装的calico，按照步骤操作，还是有问题，离线镜像都已经导入了\nFailed to pull image &quot;docker.io&#47;calico&#47;pod2daemon-flexvol:v3.25.1&quot;: failed to pull and unpack image &quot;docker.io&#47;calico&#47;pod2daemon-flexvol:v3.25.1&quot;: failed to copy: httpReadSeeker: failed open: failed to do request: Get &quot;https:&#47;&#47;production.cloudflare.docker.com&#47;registry-v2&#47;docker&#47;registry&#47;v2&#47;blobs&#47;sha256&#47;95&#47;958f4d5195504adfd95a02db97af7c6649f23aa9ab20d83230d957fe1eaafecc&#47;data?verify=1724405801-f122Q6NBeSTcxIgJdLmxQQ%2FlyyY%3D&quot;: dial tcp [2a03:2880:f136:83:face:b00c:0:25de]:443: connect: network is unreachable\n","like_count":0,"discussions":[{"author":{"id":1209006,"avatar":"https://static001.geekbang.org/account/avatar/00/12/72/ae/cef8a848.jpg","nickname":"雪飞","note":"","ucode":"36BDFD1E35E9DA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":650296,"discussion_content":"你好，你用离线包的时候，要用tigera-operator.yaml和custom-resources.yaml这两个文件安装calico","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1724740497,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"辽宁","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2,\"source\":0}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":393544,"user_name":"20清晨","can_delete":false,"product_type":"c1","uid":3950794,"ip_address":"上海","ucode":"8CBC068E5BA025","user_header":"https://static001.geekbang.org/account/avatar/00/3c/48/ca/eb136302.jpg","comment_is_top":false,"comment_ctime":1724158542,"is_pvip":false,"replies":[{"id":142909,"content":"你好，Master节点的6443端口开了吗？有没有其他报错信息，或者你进课程群，发一下截图，我帮你解决。","user_name":"作者回复","user_name_real":"编辑","uid":1209006,"ctime":1724207884,"ip_address":"北京","comment_id":393544,"utype":1}],"discussion_count":2,"race_medal":0,"score":2,"product_id":100780501,"comment_content":"老师您好，work节点执行kubeadm join时，一直卡在[preflight] Running pre-flight checks如何解决？同步时间试过了","like_count":0,"discussions":[{"author":{"id":1209006,"avatar":"https://static001.geekbang.org/account/avatar/00/12/72/ae/cef8a848.jpg","nickname":"雪飞","note":"","ucode":"36BDFD1E35E9DA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":649976,"discussion_content":"你好，Master节点的6443端口开了吗？有没有其他报错信息，或者你进课程群，发一下截图，我帮你解决。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1724207884,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2,\"source\":0}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":3950794,"avatar":"https://static001.geekbang.org/account/avatar/00/3c/48/ca/eb136302.jpg","nickname":"20清晨","note":"","ucode":"8CBC068E5BA025","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":650009,"discussion_content":"老师您好，问题解决了，是因为安装了docker之后，默认在系统离生成了一个相同网段的网桥抢占了网关，所以就ping不通master主机了,修改之后就好了，不知道为什么出现这个情况","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1724242798,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"上海","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":392990,"user_name":"感冒病毒","can_delete":false,"product_type":"c1","uid":1201667,"ip_address":"乌克兰","ucode":"7CD31383851662","user_header":"https://static001.geekbang.org/account/avatar/00/12/56/03/81141019.jpg","comment_is_top":false,"comment_ctime":1722417364,"is_pvip":false,"replies":[{"id":142754,"content":"你好，容器需要cgroup的支持，你查看一下内核版本，最好安装集群的时候先升级内核。","user_name":"作者回复","user_name_real":"编辑","uid":1209006,"ctime":1722742280,"ip_address":"北京","comment_id":392990,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100780501,"comment_content":"work 加入集群的时候报         [ERROR SystemVerification]: missing required cgroups: pids，是要升级系统内核版本吗?","like_count":0,"discussions":[{"author":{"id":1209006,"avatar":"https://static001.geekbang.org/account/avatar/00/12/72/ae/cef8a848.jpg","nickname":"雪飞","note":"","ucode":"36BDFD1E35E9DA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":649082,"discussion_content":"你好，容器需要cgroup的支持，你查看一下内核版本，最好安装集群的时候先升级内核。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1722742280,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2,\"source\":0}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":392814,"user_name":"Geek_cc0645","can_delete":false,"product_type":"c1","uid":1971407,"ip_address":"陕西","ucode":"13B59F82095602","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/UWDBUEsDLIKpeIujPLsrRG9l0cFhWlXB9CcaOpNKrOdhDAia6PialmJZ4MQgYtBpDdu58leIDDlsOxaZsRvknZZA/132","comment_is_top":false,"comment_ctime":1721867824,"is_pvip":false,"replies":[{"id":142715,"content":"你好，这个应该是 calico-node 出现异常，首先可以检查一下 calico 部署文件中的 IP_AUTODETECTION_METHOD 参数是否为实际网卡名称，其次，通过 netstat -ltnp 找到 bird 进程，kill 进程之后再删除问题节点上的 calico-node Pod，等待 Pod 重新部署。","user_name":"作者回复","user_name_real":"编辑","uid":1209006,"ctime":1721924242,"ip_address":"北京","comment_id":392814,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100780501,"comment_content":"请问下安装calico中报错，Readiness probe failed: calico&#47;node is not ready: BIRD is not ready: Error querying BIRD: unable to connect to BIRDv4 socket: dial unix &#47;var&#47;run&#47;calico&#47;bird.ctl: connect: connection refused，这个是什么原因导致的","like_count":0,"discussions":[{"author":{"id":1209006,"avatar":"https://static001.geekbang.org/account/avatar/00/12/72/ae/cef8a848.jpg","nickname":"雪飞","note":"","ucode":"36BDFD1E35E9DA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":648673,"discussion_content":"你好，这个应该是 calico-node 出现异常，首先可以检查一下 calico 部署文件中的 IP_AUTODETECTION_METHOD 参数是否为实际网卡名称，其次，通过 netstat -ltnp 找到 bird 进程，kill 进程之后再删除问题节点上的 calico-node Pod，等待 Pod 重新部署。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1721924242,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2,\"source\":0}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":392715,"user_name":"娄江国","can_delete":false,"product_type":"c1","uid":1018479,"ip_address":"重庆","ucode":"6C2AAE4E409286","user_header":"https://static001.geekbang.org/account/avatar/00/0f/8a/6f/3d4f7e31.jpg","comment_is_top":false,"comment_ctime":1721613583,"is_pvip":false,"replies":[{"id":142707,"content":"你好，K8s 官方推荐使用主流的Linux发行版，如Ubuntu、CentOS、Debian、Red Hat等，对于内核版本，最好先升级到最新，可以参考官方文档https:&#47;&#47;kubernetes.io&#47;zh-cn&#47;docs&#47;setup&#47;production-environment&#47;tools&#47;kubeadm&#47;install-kubeadm&#47;","user_name":"作者回复","user_name_real":"编辑","uid":1209006,"ctime":1721786972,"ip_address":"北京","comment_id":392715,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100780501,"comment_content":"安装k8s集群，对linux版本有什么要求？","like_count":0,"discussions":[{"author":{"id":1209006,"avatar":"https://static001.geekbang.org/account/avatar/00/12/72/ae/cef8a848.jpg","nickname":"雪飞","note":"","ucode":"36BDFD1E35E9DA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":648551,"discussion_content":"你好，K8s 官方推荐使用主流的Linux发行版，如Ubuntu、CentOS、Debian、Red Hat等，对于内核版本，最好先升级到最新，可以参考官方文档https://kubernetes.io/zh-cn/docs/setup/production-environment/tools/kubeadm/install-kubeadm/","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1721786972,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2,\"source\":0}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":392518,"user_name":"冰冻柠檬","can_delete":false,"product_type":"c1","uid":1585858,"ip_address":"安徽","ucode":"DA940109725AE5","user_header":"https://static001.geekbang.org/account/avatar/00/18/32/c2/ffa6c819.jpg","comment_is_top":false,"comment_ctime":1721176073,"is_pvip":false,"replies":[{"id":142678,"content":"你可以加入课程微信群，我后续可以把安装步骤给你","user_name":"作者回复","user_name_real":"编辑","uid":1209006,"ctime":1721287600,"ip_address":"北京","comment_id":392518,"utype":1}],"discussion_count":2,"race_medal":0,"score":2,"product_id":100780501,"comment_content":"老师可以讲讲怎么安装多master节点的集群吗？","like_count":0,"discussions":[{"author":{"id":1209006,"avatar":"https://static001.geekbang.org/account/avatar/00/12/72/ae/cef8a848.jpg","nickname":"雪飞","note":"","ucode":"36BDFD1E35E9DA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":648258,"discussion_content":"你可以加入课程微信群，我后续可以把安装步骤给你","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1721287600,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2,\"source\":0}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1944028,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIyNIia6IFvSwtvZLa9jMFuvTGCuyRTFiavshEmaLe0PBFZHdw8OnxibFe50HgXs1JCqFQymPUXqrJIA/132","nickname":"Geek_042e8a","note":"","ucode":"22B648001EC2C1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":649234,"discussion_content":"所以课程微信群在哪里呢","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1723019652,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"广东","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":392493,"user_name":"jay","can_delete":false,"product_type":"c1","uid":1319322,"ip_address":"北京","ucode":"0AC37CAFAC2760","user_header":"https://static001.geekbang.org/account/avatar/00/14/21/9a/114015aa.jpg","comment_is_top":false,"comment_ctime":1721095933,"is_pvip":false,"replies":[{"id":142679,"content":"不同版本安装方式不同，你可以看那个custom-resources.yaml中有一个cidr属性，跟CALICO_IPV4POOL_CIDR是一样的，我提前给你改好了。","user_name":"作者回复","user_name_real":"编辑","uid":1209006,"ctime":1721287858,"ip_address":"北京","comment_id":392493,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100780501,"comment_content":"请问使用离线导入的calico包，为什么不需要修改CALICO_IPV4POOL_CIDR？ 在导入的两个yaml中没有看到这个字段","like_count":0,"discussions":[{"author":{"id":1209006,"avatar":"https://static001.geekbang.org/account/avatar/00/12/72/ae/cef8a848.jpg","nickname":"雪飞","note":"","ucode":"36BDFD1E35E9DA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":648259,"discussion_content":"不同版本安装方式不同，你可以看那个custom-resources.yaml中有一个cidr属性，跟CALICO_IPV4POOL_CIDR是一样的，我提前给你改好了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1721287858,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2,\"source\":0}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":392304,"user_name":"Y","can_delete":false,"product_type":"c1","uid":1179432,"ip_address":"美国","ucode":"952AA9B2CD91CE","user_header":"https://static001.geekbang.org/account/avatar/00/11/ff/28/040f6f01.jpg","comment_is_top":false,"comment_ctime":1720530520,"is_pvip":true,"replies":[{"id":142602,"content":"不错不错，感谢Y，被你找到了可以用的镜像包！其他同学也可以参考参考！\n我在课程里也提供了离线包安装的方式。","user_name":"作者回复","user_name_real":"编辑","uid":1209006,"ctime":1720613015,"ip_address":"内蒙古","comment_id":392304,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100780501,"comment_content":"成功了。被Calico 部署卡了好久，一直失败。把calico.yaml文件中的&quot;dcoker.io&quot;全部替换成&quot;swr.cn-north-4.myhuaweicloud.com&#47;ddn-k8s&#47;docker.io&quot; 。可以安装成功","like_count":0,"discussions":[{"author":{"id":1209006,"avatar":"https://static001.geekbang.org/account/avatar/00/12/72/ae/cef8a848.jpg","nickname":"雪飞","note":"","ucode":"36BDFD1E35E9DA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":647799,"discussion_content":"不错不错，感谢Y，被你找到了可以用的镜像包！其他同学也可以参考参考！\n我在课程里也提供了离线包安装的方式。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1720613016,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"内蒙古","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2,\"source\":0}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":392292,"user_name":"抱紧我的小鲤鱼","can_delete":false,"product_type":"c1","uid":1014603,"ip_address":"江苏","ucode":"139780FB860FA3","user_header":"https://static001.geekbang.org/account/avatar/00/0f/7b/4b/95812b15.jpg","comment_is_top":false,"comment_ctime":1720510051,"is_pvip":false,"replies":[{"id":142603,"content":"你好，小鲤鱼，针对最近Calico镜像包可能无法下载的问题，我提供了离线安装包以及安装的yaml文件。\n这个两个命令就是通过yaml文件在集群上安装部署calico的命令。记得要把下载的两个离线包解压后传到集群节点上，然后再每个节点上导入离线包，再执行这两个命令！","user_name":"作者回复","user_name_real":"编辑","uid":1209006,"ctime":1720613305,"ip_address":"内蒙古","comment_id":392292,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100780501,"comment_content":"```shell\nkubectl apply -f tigera-operator.yaml --server-side\nkubectl apply -f custom-resources.yaml\n```\n\n这两个是做什么用的呢","like_count":0,"discussions":[{"author":{"id":1209006,"avatar":"https://static001.geekbang.org/account/avatar/00/12/72/ae/cef8a848.jpg","nickname":"雪飞","note":"","ucode":"36BDFD1E35E9DA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":647800,"discussion_content":"你好，小鲤鱼，针对最近Calico镜像包可能无法下载的问题，我提供了离线安装包以及安装的yaml文件。\n这个两个命令就是通过yaml文件在集群上安装部署calico的命令。记得要把下载的两个离线包解压后传到集群节点上，然后再每个节点上导入离线包，再执行这两个命令！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1720613305,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"内蒙古","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2,\"source\":0}","child_discussion_number":0,"child_discussions":[]}]}]}