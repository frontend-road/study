{"id":1682,"title":"02 | 微服务架构时代，运维体系建设为什么要以“应用”为核心？","content":"<p>今天我来讲一下微服务架构模式下的一个核心概念：<strong>应用</strong>。</p>\n<p>我会从这几个方面来讲：应用的起源、应用模型和应用关系模型建模以及为什么要这样做。最终希望，<strong>在微服务的架构模式下，我们的运维视角一定转到应用这个核心概念上来，一切要从应用的角度来分析和看待问题</strong>。</p>\n<h2>应用的起源</h2>\n<p>我们知道，微服务架构一般都是从单体架构或分层架构演进过来的。软件架构服务化的过程，就是我们根据业务模型进行细化的过程，在这个过程中切分出一个个具备不同职责的业务逻辑模块，然后每个微服务模块都会提供相对应业务逻辑的服务化接口。</p>\n<p>如果解释得简单点，就一个字，<strong>拆</strong>！如下图，从一个单体工程，拆分出N个独立模块。</p>\n<p><img src=\"https://static001.geekbang.org/resource/image/7e/cc/7e4da0c4778c834bfa67aa402c7613cc.png?wh=468*231\" alt=\"\" /></p>\n<p>这些模块可以独立部署和运行，并提供对应的业务能力。拆分后的模块数量与业务体量和复杂度相关，少则几个、十几个，多则几十、几百个，所以为了统一概念，我们通常称这些模块为<strong>应用</strong>。</p>\n<p>为了确保每个应用的唯一性，我们给每个应用定义一个<strong>唯一的标识符</strong>，如上图的APP-1、APP-2等，这个唯一标识符我们称之为应用名。</p>\n<p>接下来，这个定义为应用的概念，将成为我们后续一系列微服务架构管理的核心概念。</p>\n<!-- [[[read_end]]] -->\n<h2>应用模型及关系模型的建立</h2>\n<p>上面我们定义出来的一个个应用，都是从业务角度入手进行拆分细化出来的业务逻辑单元。它虽然可以独立部署和运行，但是每一个应用都只具备相对单一的业务职能。如果要完成整体的业务流程和目标，就需要和周边其它的服务化应用交互。同时，这个过程中还需要依赖各种与业务无直接关系、相对独立的基础设施和组件，比如机器资源、域名、DB、缓存、消息队列等等。</p>\n<p>所以，除了应用这个实体之外，还会存在其他各类基础组件实体。同时，在应用运行过程中，还需要不断地与它们产生和建立各种各样复杂的关联关系，这也为我们后续的运维带来很多困难。</p>\n<p>那接下来，我们要做的就是应用模型以及各种关系模型的梳理和建立，因为只有模型和关系梳理清楚了，才能为我们后面一系列的运维自动化、持续交付以及稳定性保障打下一个良好的基础。</p>\n<p><strong>1.应用业务模型</strong></p>\n<p>应用业务模型，也就是每个应用对外提供的业务服务能力，并以API的方式暴露给外部，如下图商品的应用业务模型示例：</p>\n<p><img src=\"https://static001.geekbang.org/resource/image/bc/0c/bc986fb73a5632e560ba7d3be981810c.png?wh=476*229\" alt=\"\" /></p>\n<p>这个业务模型通常都是业务架构师在进行业务需求分析和拆解时进行设计，更多的是聚焦在业务逻辑上，所以从运维的角度，我们一般不会关注太多。</p>\n<p>而接下来的几部分，将是运维要重点关注的内容。</p>\n<p><strong>2.应用管理模型</strong></p>\n<p>应用管理模型，也就是应用自身的各种属性，如应用名、应用功能信息、责任人、Git地址、部署结构（代码路径、日志路径以及各类配置文件路径等）、启停方式、健康检测方式等等。这其中，应用名是应用的唯一标识，我们用AppName来表示。</p>\n<p>这里我们可以把应用想象成一个人，通常一个人会具备身份证号码、姓名、性别、家庭住址、联系方式等等属性，这里身份证号码，就是一个人的唯一标识。</p>\n<p><strong>3.应用运行时所依赖的基础设施和组件</strong></p>\n<ul>\n<li><strong>资源层面</strong>：应用运行所必需的资源载体有物理机、虚拟机或容器等，如果对外提供HTTP服务，就需要虚IP和DNS域名服务；</li>\n<li><strong>基础组件</strong>：这一部分其实就是我们所说的中间件体系，比如应用运行过程中必然要存储和访问数据，这就需要有数据库和数据库中间件；想要更快地访问数据，同时减轻DB的访问压力，就需要缓存；应用之间如果需要数据交互或同步，就需要消息队列；如果进行文件存储和访问，就需要存储系统等等。</li>\n</ul>\n<p>从这里我们可以挖掘出一条规律，那就是<strong>这些基础设施和组件都是为上层的一个个业务应用所服务的</strong>。也正是因为业务和应用上的需求，才开启了它们各自的生命周期。如果脱离了这些业务应用，它们自己并没有单纯存在的意义。所以，<strong>从始至终基础设施和组件都跟应用这个概念保持着紧密的联系</strong>。</p>\n<p>理清了这个思路，我们再去梳理它们之间的关系就会顺畅很多，分为两步。</p>\n<p><strong>第一步，建立各个基础设施和组件的数据模型，同时识别出它们的唯一标识</strong>。这个套路跟应用管理模型的梳理类似，以典型的缓存为例，每当我们申请一个缓存空间时，通常会以NameSpace来标识唯一命名，同时这个缓存空间会有空间容量和Partition分区等信息。</p>\n<p><strong>第二步，也是最关键的一步，就是识别出基础设施及组件可以与应用名AppName建立关联关系的属性，或者在基础组件的数据模型中增加所属应用这样的字段</strong>。</p>\n<p>还是以上面的缓存为例，既然是应用申请的缓存空间，并且是一对一的关联关系，既可以直接将NameSpace字段取值设置为AppName，也可以再增加一个所属应用这样的字段，通过外键关联模式建立起应用与缓存空间的关联关系。</p>\n<p>相应地，对于消息队列、DB、存储空间等，都可以参考上面这个思路去做。</p>\n<p>通过上面的梳理，我们就可以建立出类似下图这样的以应用为核心的应用模型和关联关系模型了，基于这个统一的应用概念，系统中原本分散杂乱的信息，最终都被串联了起来，应用也将成为整个运维信息管理及流转的纽带。</p>\n<p><img src=\"https://static001.geekbang.org/resource/image/9a/74/9a926d2829eed2524ba0f6af6475a174.png?wh=971*638\" alt=\"\" /></p>\n<h2>真实的情况是怎么样的？</h2>\n<p>上面讲了这么多理论和道理，但是我们业界真实的现状是怎样的呢？</p>\n<p>从我个人实际观察和经历的场景来看，大部分公司在这块的统筹规划是不够的，或者说是不成熟的。也就是软件架构上引入了微服务，但是后续的一系列运维措施和管理手段没跟上，<strong>主要还是思路没有转变过来</strong>。虽然说要做DevOps，但实际的执行还是把开发和运维分裂了去对待，不信你看下面两个常见的场景。</p>\n<ul>\n<li><strong>场景一</strong></li>\n</ul>\n<p>这个场景是关于线上的缓存和消息队列的。</p>\n<p>开发使用的时候就去申请一下，一开始还能记住自己使用了哪些，但是时间一长，或者申请得多了，就记不住了。久而久之，线上就存在一堆无用的NameSpace和Topic，但是集群的维护者又不敢随意清理，因为早就搞不清楚是谁用的，甚至申请人已经离职，以后会不会再用也已经没人讲得清楚了，越往后就越难维护。</p>\n<p>根本原因，就是前面我们讲到的，太片面地对待基础组件，没有与应用的访问建立起关联关系，没有任何的生命周期管理措施。</p>\n<ul>\n<li><strong>场景二</strong></li>\n</ul>\n<p>这个典型场景就体现了应用名不统一的问题。</p>\n<p>按照我们前面讲的，按说应用名应该在架构拆分出一个个独立应用的时候就明确下来，并贯穿整个应用生命周期才对。</p>\n<p>但是大多数情况下，我们的业务架构师或开发在早期只考虑应用开发，并不会过多地考虑整个应用的生命周期问题，会下意识地默认后面的事情是运维负责的，所以开发期间，只要将应用开发完和将服务注册到服务配置中心上就OK了。</p>\n<p>而到了运维这里，也只从软件维护的角度，为了便于资源和应用配置的管理，会独立定义一套应用名体系出来，方便自己的管理。</p>\n<p>这时不统一的问题就出现了，如果持续交付和监控系统这些运维平台也是独立去开发的，脱节问题就会更严重。</p>\n<p>如下图所示，一个个的孤岛，无法成为体系，当这些系统需要对接时，就会发现需要做大量的应用名转化适配工作，带来非常多无谓的工作量，所谓的效率提升就是一句空话。</p>\n<p><img src=\"https://static001.geekbang.org/resource/image/8f/ed/8f0601d91a1d6d795d31fb62d6c038ed.png?wh=659*308\" alt=\"\" /></p>\n<p>所以，今天一开头我就提到，<strong>微服务架构模式下的运维思路一定要转变，一定要将视角转换到应用这个维度，从一开始就要统一规划，从一开始就要将架构、开发和运维的工作拉通了去看，这一点是与传统运维的思路完全不同的</strong>。</p>\n<p>当然，这里面也有一个经验的问题。虽然微服务在国内被大量应用，但是我们绝大多数技术团队的经验还集中在开发设计层面。微服务架构下的运维经验，确实还需要一个总结积累的过程。我自己也是痛苦地经历了上面这些反模式，才总结积累下这些经验教训。</p>\n<p>这也是为什么我今天分享了这样一个思路，<strong>我们要转换视角，规划以应用为核心的运维管理体系</strong>。</p>\n<p>不知道你目前是否也遇到了类似的问题，如果今天的内容对你有帮助，也请你分享给身边的朋友。</p>\n<p>欢迎你留言与我一起讨论。</p>\n<p></p>\n","neighbors":{"left":{"article_title":"01 | 为什么Netflix没有运维岗位？","id":1674},"right":{"article_title":"03 | 标准化体系建设（上）：如何建立应用标准化体系和模型？","id":1686}},"comments":[{"had_liked":false,"id":1665,"user_name":"赵成","can_delete":false,"product_type":"c1","uid":1001380,"ip_address":"","ucode":"934FC7D12479AE","user_header":"https://static001.geekbang.org/account/avatar/00/0f/47/a4/6076bd5f.jpg","comment_is_top":false,"comment_ctime":1514000747,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"143247921515","product_id":100003401,"comment_content":"1.软件系统中，基础设施和组件都是为上层的一个个业务应用所服务的，识别和建立它们之间的关系的非常重要，这个是运维体系化的前提。<br><br>2.要从应用的视角去看这些基础服务，不要将它们与应用割裂。<br><br>3.应用运维层面管理混乱，运维无法场景化，流程无法闭环，首要看是不是忽略了应用这个核心。","like_count":33},{"had_liked":false,"id":1659,"user_name":"宵伯特","can_delete":false,"product_type":"c1","uid":1031939,"ip_address":"","ucode":"88AE839449EE33","user_header":"https://static001.geekbang.org/account/avatar/00/0f/bf/03/9e5c2259.jpg","comment_is_top":false,"comment_ctime":1513996046,"is_pvip":true,"replies":[{"id":"259","content":"“要求整个开发团队的管理者或架构师有全面的统筹规划的能力，以便促进各个模块之间的协调合作。<br>而国内开发者可能面临更多的问题就是架构体系受限于组织结构，管理者缺乏对结构转型的经验和能力，自然导致团队成员缺乏思维转变的动力。”<br><br>上面这段分析的非常到位，也是我一直在讲的现在做运维，首要是思路上要先转变过。后面有几篇文章中我也会提到类似的观点，还有一篇专门介绍组织架构和组织协作的，欢迎继续讨论！","user_name":"作者回复","user_name_real":"赵成","uid":"1001380","ctime":1514009403,"ip_address":"","comment_id":1659,"utype":1}],"discussion_count":1,"race_medal":0,"score":"44463669006","product_id":100003401,"comment_content":"传统的开发模式以产品发布上线为一个节点，但是在现在的敏捷开发和微服务体系下，线上运行也只是整个开发流程中的一个环节。不论是以业务为导向，还是以功能为导向的开发，都需要将开发运行维护的所有环节纳入完整的体系之中，这也便要求整个开发团队的管理者或架构师有全面的统筹规划的能力，以便促进各个模块之间的协调合作。<br>而国内开发者可能面临更多的问题就是架构体系受限于组织结构，管理者缺乏对结构转型的经验和能力，自然导致团队成员缺乏思维转变的动力。","like_count":10,"discussions":[{"author":{"id":1001380,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/a4/6076bd5f.jpg","nickname":"赵成","note":"","ucode":"934FC7D12479AE","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":415492,"discussion_content":"“要求整个开发团队的管理者或架构师有全面的统筹规划的能力，以便促进各个模块之间的协调合作。\n而国内开发者可能面临更多的问题就是架构体系受限于组织结构，管理者缺乏对结构转型的经验和能力，自然导致团队成员缺乏思维转变的动力。”\n\n上面这段分析的非常到位，也是我一直在讲的现在做运维，首要是思路上要先转变过。后面有几篇文章中我也会提到类似的观点，还有一篇专门介绍组织架构和组织协作的，欢迎继续讨论！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1514009403,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":3779,"user_name":"dongcc","can_delete":false,"product_type":"c1","uid":1057266,"ip_address":"","ucode":"41CC206C0F927E","user_header":"https://static001.geekbang.org/account/avatar/00/10/21/f2/a01d87dc.jpg","comment_is_top":false,"comment_ctime":1520558327,"is_pvip":false,"replies":[{"id":"986","content":"这个要进行约束的，比如创建接口必须要鉴权，不能随意调用，申请环节必须要走流程，也不能随意。我们要做的就是尽量让流程简化，自动化，提升效率。","user_name":"作者回复","user_name_real":"赵成","uid":"1001380","ctime":1521795028,"ip_address":"","comment_id":3779,"utype":1}],"discussion_count":2,"race_medal":0,"score":"18700427511","product_id":100003401,"comment_content":"请教一下如何维护后续的应用与基础设施和组建的关联关系？比如研发更新版本在某个缓存里增加了一个namespace，或者消息队列里增加了一个topic（类似这种资源申请是代码里可以自动创建的，可能运维都不知道），以应用为中心的关联关系信息如何维护？人工录入维护还是任何资源申请后台申请还是怎么样？谢谢","like_count":4,"discussions":[{"author":{"id":1001380,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/a4/6076bd5f.jpg","nickname":"赵成","note":"","ucode":"934FC7D12479AE","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":416051,"discussion_content":"这个要进行约束的，比如创建接口必须要鉴权，不能随意调用，申请环节必须要走流程，也不能随意。我们要做的就是尽量让流程简化，自动化，提升效率。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1521795028,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1220775,"avatar":"https://static001.geekbang.org/account/avatar/00/12/a0/a7/db7a7c50.jpg","nickname":"送普选","note":"","ucode":"AB2C98BB9C3A5D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":330547,"discussion_content":"基础组件服务化系统，或者配置中心系统作为抓手，建立规范和规则，内置到系统里面","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1606644191,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":3514,"user_name":"付盼星","can_delete":false,"product_type":"c1","uid":1055542,"ip_address":"","ucode":"E0E4B74E8B361F","user_header":"https://static001.geekbang.org/account/avatar/00/10/1b/36/abe6d066.jpg","comment_is_top":false,"comment_ctime":1519796243,"is_pvip":false,"replies":[{"id":"683","content":"事物发展的规律都是相同的，所以只要经历过，就会有共鸣。<br><br>可以多留言讨论。","user_name":"作者回复","user_name_real":"赵成","uid":"1001380","ctime":1519867773,"ip_address":"","comment_id":3514,"utype":1}],"discussion_count":1,"race_medal":0,"score":"14404698131","product_id":100003401,"comment_content":"哈哈，每次看作者的文章都有一种从文章中验证自己想法的感觉，读着读着，就会感慨，原来作者也是这么想的，很感谢公司，一来是初创公司，有很好的窗口去做这件事，二来是领导的前瞻性和信任，最后这件事才得以顺利实施。PS:开发确实缺少运维思维，运维和开发两者的确需要互补，前提是开发能把端到端交付先完成，不然整个流程都没走完。","like_count":4,"discussions":[{"author":{"id":1001380,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/a4/6076bd5f.jpg","nickname":"赵成","note":"","ucode":"934FC7D12479AE","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":415922,"discussion_content":"事物发展的规律都是相同的，所以只要经历过，就会有共鸣。\n\n可以多留言讨论。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1519867773,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":68007,"user_name":"松花皮蛋me","can_delete":false,"product_type":"c1","uid":1000054,"ip_address":"","ucode":"B0846CEEF6B0D1","user_header":"https://static001.geekbang.org/account/avatar/00/0f/42/76/256bbd43.jpg","comment_is_top":false,"comment_ctime":1550383008,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10140317600","product_id":100003401,"comment_content":"一切都应该以应用为基础，包含cmdb和变更管理等等","like_count":1},{"had_liked":false,"id":115295,"user_name":"牧野静风","can_delete":false,"product_type":"c1","uid":1311629,"ip_address":"","ucode":"FB5963F97C23AA","user_header":"https://static001.geekbang.org/account/avatar/00/14/03/8d/38a98dc6.jpg","comment_is_top":false,"comment_ctime":1563526522,"is_pvip":false,"replies":[{"id":"73720","content":"这是很多公司的状况，根本上还是没有认识到运维的重要性。","user_name":"作者回复","user_name_real":"赵成","uid":"1001380","ctime":1584927811,"ip_address":"","comment_id":115295,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5858493818","product_id":100003401,"comment_content":"还是个传统公司的运维，一直想要融入到新项目的筹备，可是只是最后上线才知道有这个项目，传统的方式作为一个运维好难改变现实","like_count":1,"discussions":[{"author":{"id":1001380,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/a4/6076bd5f.jpg","nickname":"赵成","note":"","ucode":"934FC7D12479AE","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":459044,"discussion_content":"这是很多公司的状况，根本上还是没有认识到运维的重要性。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584927811,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":110978,"user_name":"竹寺","can_delete":false,"product_type":"c1","uid":1046807,"ip_address":"","ucode":"3F71F5D928F7C1","user_header":"https://static001.geekbang.org/account/avatar/00/0f/f9/17/4e0339d5.jpg","comment_is_top":false,"comment_ctime":1562407518,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5857374814","product_id":100003401,"comment_content":"每一次读都有新的体会。结合工作中的实际情况，会有新的感受和理解。跟接触到不同的开发团队也有莫大关系。","like_count":1},{"had_liked":false,"id":95125,"user_name":"kevinsu","can_delete":false,"product_type":"c1","uid":1078506,"ip_address":"","ucode":"BAD46B815D6A5C","user_header":"https://static001.geekbang.org/account/avatar/00/10/74/ea/10661bdc.jpg","comment_is_top":false,"comment_ctime":1557971722,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5852939018","product_id":100003401,"comment_content":"很不错，我们目前所在的公司就是使用了微服务但是不成体系，相互对立！","like_count":2},{"had_liked":false,"id":333189,"user_name":"怀揣梦想的学渣","can_delete":false,"product_type":"c1","uid":1916685,"ip_address":"","ucode":"2349B9F4F6FDE3","user_header":"https://static001.geekbang.org/account/avatar/00/1d/3f/0d/1e8dbb2c.jpg","comment_is_top":false,"comment_ctime":1644199379,"is_pvip":true,"discussion_count":1,"race_medal":0,"score":"1644199379","product_id":100003401,"comment_content":"场景一是我工作遇到过的，内部资产统计无工具可用，离职已五年的人名依旧可以在资源系统中查到，配有很多资源在运行，有远程权限开着，暴露在公网，公司是本地（二线城市）大型混合云资源供应商。后来，我私下多次提议领导组织人员对资源核查清理，依旧被各种理由推脱了一年，自发组织同事，也只有5个同事自发参与。就在我离职离岗前一周，上一级领导来视察工作，并且有相关部门联合巡检，这才开始紧急开展资源核查清理。这一紧急操作，使俩同事扛不住频繁熬夜离职了，一个同事直接内部转岗去市场营销部门。","like_count":0,"discussions":[{"author":{"id":2440848,"avatar":"https://static001.geekbang.org/account/avatar/00/25/3e/90/c86ec4ca.jpg","nickname":"XCF","note":"","ucode":"00A895B0B4CA3E","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":580296,"discussion_content":"挺认同的，事不大没领到关心～","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1658068608,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":221714,"user_name":"技术修行者","can_delete":false,"product_type":"c1","uid":1013147,"ip_address":"","ucode":"28CA41A1214D6B","user_header":"https://static001.geekbang.org/account/avatar/00/0f/75/9b/611e74ab.jpg","comment_is_top":false,"comment_ctime":1590572289,"is_pvip":true,"discussion_count":3,"race_medal":1,"score":"1590572289","product_id":100003401,"comment_content":"作者提到的2个场景，都是我们目前面临的。<br>我目前带的团队，负责整个项目的基础设施和基于基础设施的基础服务，例如数据访问服务、安全认证服务、消息队列服务等。这些基础服务会被上层的不同领域的业务服务使用。关于服务规范制定，确实是需要事先做统一规范处理的，不然后面基本不可能维护。<br><br>我的问题：作者谈到在做系统设计时，要以应用为中心，但是我们目前负责的是一些底层的基础服务，并不会涉及到具体的业务场景以及业务应用，在这种情况下，如何做到以应用为中心呢？是说每个基础服务都可以看做是一个应用吗？这样比较牵强，例如数据访问服务，它对外提供的就是针对关系型数据或者非关系型数据的增删改查，类似于中间件的功能，很难把它想象成一个“应用”。<br>","like_count":0,"discussions":[{"author":{"id":1220775,"avatar":"https://static001.geekbang.org/account/avatar/00/12/a0/a7/db7a7c50.jpg","nickname":"送普选","note":"","ucode":"AB2C98BB9C3A5D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":330546,"discussion_content":"基础组件服务化，除了和应用是一个进程的中间件，其他db，缓存，mq等都做服务化，用cmdb或配置管理系统管理起来","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1606643952,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2134429,"avatar":"https://static001.geekbang.org/account/avatar/00/20/91/9d/de3be1f7.jpg","nickname":"学习强国","note":"","ucode":"C2AF203B760622","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":299963,"discussion_content":"「但是我们目前负责的是一些底层的基础服务，并不会涉及到具体的业务场景以及业务应用」很好奇这样的底层基础服务是什么，可以不涉及具体的业务？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1597889563,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1916685,"avatar":"https://static001.geekbang.org/account/avatar/00/1d/3f/0d/1e8dbb2c.jpg","nickname":"怀揣梦想的学渣","note":"","ucode":"2349B9F4F6FDE3","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":2134429,"avatar":"https://static001.geekbang.org/account/avatar/00/20/91/9d/de3be1f7.jpg","nickname":"学习强国","note":"","ucode":"C2AF203B760622","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":549672,"discussion_content":"可能是混合云或者私有云吧，建设基础平台，提供访问界面，业务方自选各种资源发放使用。对平台上业务无权干涉。非平台导致的云平台资源异常，基建部门也没权限去碰承载业务数据的资源。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1644199673,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":299963,"ip_address":""},"score":549672,"extra":""}]}]},{"had_liked":false,"id":14121,"user_name":"恒念","can_delete":false,"product_type":"c1","uid":1140254,"ip_address":"","ucode":"AA7C1F0233DE91","user_header":"https://static001.geekbang.org/account/avatar/00/11/66/1e/5f095c66.jpg","comment_is_top":false,"comment_ctime":1530181933,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1530181933","product_id":100003401,"comment_content":"我更新到现在版本后，复制app里的文章粘贴出去，再也无法完整粘贴了。请帮忙看看。<br>比如，复制了一大段，粘贴成了这个样子：<br>我会从这几个方面来讲：应用的起源、应用模型和应用关系模型建模...<br>极客时间版权所有: https:&#47;&#47;time.geekbang.org&#47;column&#47;article&#47;1682?device=geekTime.ios","like_count":0},{"had_liked":false,"id":3413,"user_name":"希望","can_delete":false,"product_type":"c1","uid":1033719,"ip_address":"","ucode":"5B367909AF5840","user_header":"https://static001.geekbang.org/account/avatar/00/0f/c5/f7/0d7c1488.jpg","comment_is_top":false,"comment_ctime":1519449803,"is_pvip":false,"replies":[{"id":"653","content":"后面的很多文章都是介绍技术产品实践案例的，你可以先看下后面的文章。","user_name":"作者回复","user_name_real":"赵成","uid":"1001380","ctime":1519529365,"ip_address":"","comment_id":3413,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1519449803","product_id":100003401,"comment_content":"“架构体系受限与组织结构”是国内互联网公司运维发展过程中的普遍问题，在这种情况下，是自上而下去推动转型还是自下而上去争取变革，两种情况下的实现难度有着巨大差异。转变思路，不仅仅是运维需要转变，还包括产品、开发、测试一起。对于背负历史包袱的项目和产品来说，运维模式转型是成本开销，希望可以听老师分享一些如何推动产品进行运维模式转型的实际案例，以及如何换位思考去影响和推动开发思路上的转变。","like_count":0,"discussions":[{"author":{"id":1001380,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/a4/6076bd5f.jpg","nickname":"赵成","note":"","ucode":"934FC7D12479AE","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":415894,"discussion_content":"后面的很多文章都是介绍技术产品实践案例的，你可以先看下后面的文章。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1519529365,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":1680,"user_name":"黄无由","can_delete":false,"product_type":"c1","uid":1006061,"ip_address":"","ucode":"7A013A21C1B4C8","user_header":"https://static001.geekbang.org/account/avatar/00/0f/59/ed/88608728.jpg","comment_is_top":false,"comment_ctime":1514099720,"is_pvip":false,"replies":[{"id":"265","content":"Paas的本质是什么？","user_name":"作者回复","user_name_real":"赵成","uid":"1001380","ctime":1514162772,"ip_address":"","comment_id":1680,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1514099720","product_id":100003401,"comment_content":"paas的能力，有助于微服务","like_count":0,"discussions":[{"author":{"id":1001380,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/a4/6076bd5f.jpg","nickname":"赵成","note":"","ucode":"934FC7D12479AE","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":415499,"discussion_content":"Paas的本质是什么？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1514162772,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]}]}