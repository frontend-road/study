{"id":89151,"title":"JavaScript语法（四）：新加入的**运算符，哪里有些不一样呢？","content":"<p>你好，我是winter。</p><p>上一节课我们已经给你介绍了表达式的一些结构，其中关于赋值表达式，我们讲完了它的左边部分，而留下了它右边部分，那么，我们这节课一起来详细讲解。</p><p>在一些通用的计算机语言设计理论中，能够出现在赋值表达式右边的叫做：右值表达式（RightHandSideExpression），而在JavaScript标准中，规定了在等号右边表达式叫做条件表达式（ConditionalExpression），不过，在JavaScript标准中，从未出现过右值表达式字样。</p><p>JavaScript标准也规定了左值表达式同时都是条件表达式（也就是右值表达式），此外，左值表达式也可以通过跟一定的运算符组合，逐级构成更复杂的结构，直到成为右值表达式。</p><p>关于这块的知识，我们有时会看到按照运算符来组织的讲解形式。</p><p>这样讲解形式是因为：对运算符来说的“优先级”，如果从我们语法的角度来看，那就是“表达式的结构”。讲“乘法运算的优先级高于加法”，从语法的角度看就是“乘法表达式和加号运算符构成加法表达式”。</p><p>对于右值表达式来说，我们可以理解为以左值表达式为最小单位开始构成的，接下来我们就来看看左值表达式是如何一步步构成更为复杂的语法结构。</p><!-- [[[read_end]]] --><h2>更新表达式 UpdateExpression</h2><p>左值表达式搭配 <code>++</code> <code>--</code> 运算符，可以形成更新表达式。</p><pre><code class=\"language-JavaScript\">-- a;\n++ a;\na --\na ++\n</code></pre><p>更新表达式会改变一个左值表达式的值。分为前后自增，前后自减一共四种。</p><p>我们要注意一下，这里在ES2018中，跟早期版本有所不同，前后自增自减运算被放到了同一优先级。</p><h2>一元运算表达式 UnaryExpression</h2><p>更新表达式搭配一元运算符，可以形成一元运算表达式，我们看下例子：</p><pre><code class=\"language-JavaScript\">delete a.b;\nvoid a;\ntypeof a;\n- a;\n~ a;\n! a;\nawait a;\n</code></pre><p>它的特点就是一个更新表达式搭配了一个一元运算符。</p><h2>乘方表达式 ExponentiationExpression</h2><p>乘方表达式也是由更新表达式构成的。它使用<code>**</code>号。</p><pre><code class=\"language-JavaScript\">++i ** 30\n2 ** 30 //正确\n-2 ** 30 //报错\n</code></pre><p>我们看一下例子，-2这样的一元运算表达式，是不可以放入乘方表达式的，如果需要表达类似的逻辑，必须加括号。</p><p>这里我们需要注意一下结合性，**运算是右结合的，这跟其它正常的运算符（也就是左结合运算符）都不一样。</p><p>我们来看一个例子。</p><pre><code class=\"language-JavaScript\">4 ** 3 ** 2\n</code></pre><p>事实上，它是这样被运算的：</p><pre><code class=\"language-JavaScript\">4 ** (3 ** 2)\n</code></pre><p>而不是这样被运算的：</p><pre><code class=\"language-JavaScript\">(4 ** 3) ** 2\n</code></pre><p>我们来实际在代码中执行一下试试。最终结果是262144， 而不是4096。</p><h2>乘法表达式 MultiplicativeExpression</h2><p>到这里，我们进入了比较熟悉的表达式类型，乘方表达式可以构成乘法表达式，用乘号或者除号、取余符号连接就可以了，我们看看例子：</p><pre><code class=\"language-JavaScript\">x * 2;\n</code></pre><p>乘法表达式有三种运算符：</p><pre><code>*\n/\n%\n</code></pre><p>它们分别表示乘、除和取余。它们的优先级是一样的，所以统一放在乘法运算表达式中。</p><h2>加法表达式 AdditiveExpression</h2><p>加法表达式是由乘法表达式用加号或者减号连接构成的。我们看下例子:</p><pre><code class=\"language-JavaScript\">a + b * c\n</code></pre><p>加法表达式有加号和减号两种运算符。</p><pre><code>+ \n-\n</code></pre><p>这就是我们小学学的加法和减法的意思了。不过要注意，加号还能表示字符串连接，这也比较符合一般的直觉。</p><h2>移位表达式 ShiftExpression</h2><p>移位表达式由加法表达式构成，移位是一种位运算，分成三种：</p><pre><code>&lt;&lt; 向左移位\n&gt;&gt; 向右移位\n&gt;&gt;&gt; 无符号向右移位\n</code></pre><p>移位运算把操作数看做二进制表示的整数，然后移动特定位数。所以左移n位相当于乘以2的n次方，右移n位相当于除以2取整n次。</p><p>普通移位会保持正负数。无符号移位会把减号视为符号位1，同时参与移位：</p><pre><code>-1 &gt;&gt;&gt; 1\n</code></pre><p>这个会得到2147483647，也就是2的31次方，跟负数的二进制表示法相关，这里就不详细讲解了。</p><p>在JavaScript中，二进制操作整数并不能提高性能，移位运算这里也仅仅作为一种数学运算存在，这些运算存在的意义也仅仅是照顾C系语言用户的习惯了。</p><h2>关系表达式 RelationalExpression</h2><p>移位表达式可以构成关系表达式，这里的关系表达式就是大于、小于、大于等于、小于等于等运算符号连接，统称为关系运算。</p><pre><code>&lt;=\n&gt;=\n&lt;\n&gt;\ninstanceof \nin\n</code></pre><p>需要注意，这里的&lt;= 和 &gt;= 关系运算，完全是针对数字的，所以 &lt;= 并不等价于 &lt; 或 ==。例如：</p><pre><code class=\"language-JavaScript\">null &lt;= undefined\n//false\nnull == undefined\n//true\n</code></pre><p>请你务必不要用数学上的定义去理解这些运算符。</p><h2>相等表达式 EqualityExpression</h2><p>在语法上，相等表达式是由关系表达式用相等比较运算符（如 <code>==</code>）连接构成的。所以我们可以像下面这段代码一样使用，而不需要加括号。</p><pre><code>a instanceof &quot;object&quot; == true\n</code></pre><p>相等表达式由四种运算符和关系表达式构成，我们来看一下运算符：</p><ul>\n<li><code>==</code></li>\n<li><code>!=</code></li>\n<li><code>===</code></li>\n<li><code>!==</code></li>\n</ul><p>相等表达式又包含一个JavaScript中著名的设计失误，那就是 <code>==</code> 的行为。</p><p>一些编程规范甚至要求完全避免使用 <code>==</code> 运算，我觉得这样规定是比较合理的，但是这里我还是尽量解释一下 <code>==</code> 的行为。</p><p>虽然标准中写的<code>==</code>十分复杂，但是归根结底，类型不同的变量比较时<code>==</code>运算只有三条规则：</p><ul>\n<li>undefined与null相等；</li>\n<li>字符串和bool都转为数字再比较；</li>\n<li>对象转换成primitive类型再比较。</li>\n</ul><p>这样我们就可以理解一些不太符合直觉的例子了，比如：</p><ul>\n<li><code>false == '0'</code> true</li>\n<li><code>true == 'true'</code> false</li>\n<li><code>[] == 0</code> true</li>\n<li><code>[] == false</code> true</li>\n<li><code>new Boolean('false') == false</code> false</li>\n</ul><p>这里不太符合直觉的有两点：</p><ul>\n<li>一个是即使字符串与boolean比较，也都要转换成数字；</li>\n<li>另一个是对象如果转换成了primitive类型跟等号另一边类型恰好相同，则不需要转换成数字。</li>\n</ul><p>此外，<code>==</code> 的行为也经常跟if的行为（转换为boolean）混淆。总之，我建议，仅在确认 <code>==</code> 发生在Number和String类型之间时使用，比如：</p><pre><code class=\"language-JavaScript\">document.getElementsByTagName('input')[0].value == 100\n</code></pre><p>在这个例子中，等号左边必然是string，右边的直接量必然是number，这样使用 == 就没有问题了。</p><h2>位运算表达式</h2><p>位运算表达式含有三种：</p><ul>\n<li>按位与表达式 BitwiseANDExpression</li>\n<li>按位异或表达式 BitwiseANDExpression</li>\n<li>按位或表达式 BitwiseORExpression。</li>\n</ul><p>位运算表达式关系比较紧密，我们这里放到一起来讲。</p><p>按位与表达式由按位与运算符（<code>&amp;</code>）连接按位异或表达式构成，按位与表达式把操作数视为二进制整数，然后把两个操作数按位做与运算。</p><p>按位异或表达式由按位异或运算符（<code>^</code>）连接按位与表达式构成，按位异或表达式把操作数视为二进制整数，然后把两个操作数按位做异或运算。异或两位相同时得0，两位不同时得1。</p><p>异或运算有个特征，那就是两次异或运算相当于取消。所以有一个异或运算的小技巧，就是用异或运算来交换两个整数的值。</p><pre><code class=\"language-JavaScript\">\nlet a = 102, b = 324;\n\na = a ^ b;\nb = a ^ b;\na = a ^ b;\n\nconsole.log(a, b);\n</code></pre><p>按位或表达式由按位或运算符（<code>|</code>）连接相等表达式构成，按位或表达式把操作数视为二进制整数，然后把两个操作数按位做或运算。</p><p>按位或运算常常被用在一种叫做Bitmask的技术上。Bitmask相当于使用一个整数来当做多个布尔型变量，现在已经不太提倡了。不过一些比较老的API还是会这样设计，比如我们在DOM课程中，提到过的Iterator API，我们看下例子：</p><pre><code class=\"language-JavaScript\">var iterator = document.createNodeIterator(document.body, NodeFilter.SHOW_TEXT | NodeFilter.SHOW_COMMENT, null, false);\nvar node;\nwhile(node = iterator.nextNode())\n{\n    console.log(node);\n}\n</code></pre><p>这里的第二个参数就是使用了Bitmask技术，所以必须配合位运算表达式才能方便地传参。</p><h2>逻辑与表达式和逻辑或表达式</h2><p>逻辑与表达式由按位或表达式经过逻辑与运算符连接构成，逻辑或表达式则由逻辑与表达式经逻辑或运算符连接构成。</p><p>这里需要注意的是，这两种表达式都不会做类型转换，所以尽管是逻辑运算，但是最终的结果可能是其它类型。</p><p>比如：</p><pre><code class=\"language-JavaScript\">false || 1;\n</code></pre><p>这句将会得到结果 1。</p><pre><code class=\"language-JavaScript\">false &amp;&amp; undefined;\n</code></pre><p>这句将会得到undefined。</p><p>另外还有一点，就是逻辑表达式具有短路的特性，例如：</p><pre><code class=\"language-JavaScript\">true || foo();\n</code></pre><p>这里的foo将不会被执行，这种中断后面表达式执行的特性就叫做短路。</p><h2>条件表达式 ConditionalExpression</h2><p>条件表达式由逻辑或表达式和条件运算符构成，条件运算符又称三目运算符，它有三个部分，由两个运算符<code>?</code>和<code>:</code>配合使用。</p><pre><code class=\"language-JavaScript\">condition ? branch1 : branch2\n</code></pre><p>这里需要注意，条件表达式也像逻辑表达式一样，可能忽略后面表达式的计算。这一点跟C语言的条件表达式是不一样的。</p><p>条件表达式实际上就是JavaScript中的右值表达式了 RightHandSideExpression，是可以放到赋值运算后面的表达式。</p><h2>总结</h2><p>今天我们讲解了表达式的右边部分，讲到了包括更新表达式、一元运算表达式、乘方表达式、乘法表达式、移位表达式等14种表达式。至此为止，我们已经讲全了表达式。你如果有不熟悉的地方，可以随时回头查阅。</p><p>留一个小任务，我们试着总结下JavaScript中所有的运算符优先级和结合性。例如：</p><p><img src=\"https://static001.geekbang.org/resource/image/4c/ca/4cb75eb863d5dffe7e9b6b0fb1161aca.jpg?wh=606*207\" alt=\"\"></p><p></p>","neighbors":{"left":{"article_title":"JavaScript语法（三）：什么是表达式语句？","id":88827},"right":{"article_title":"HTML语义：div和span不是够用了吗？","id":78158}},"comments":[{"had_liked":false,"id":83967,"user_name":"AbyssKR","can_delete":false,"product_type":"c1","uid":1025948,"ip_address":"","ucode":"6ADAC021039110","user_header":"https://static001.geekbang.org/account/avatar/00/0f/a7/9c/be5dffb6.jpg","comment_is_top":false,"comment_ctime":1554740545,"is_pvip":false,"discussion_count":6,"race_medal":0,"score":"293612516673","product_id":100023201,"comment_content":"“逻辑与表达式和逻辑或表达式”一节中，第二个例子 false &amp;&amp; undefined; 的结果为 false","like_count":69,"discussions":[{"author":{"id":1087879,"avatar":"https://static001.geekbang.org/account/avatar/00/10/99/87/98ebb20e.jpg","nickname":"dao","note":"","ucode":"4181FB270462CF","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":377390,"discussion_content":"true &amp;&amp; undefined => undefined\nfalse || undefined => undefined","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1622626443,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1042089,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/e6/a9/b459efb7.jpg","nickname":"如故","note":"","ucode":"F6895792309942","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":344146,"discussion_content":"对呀 这里 false 后面的都不会执行了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1611305362,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1736797,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/80/5d/b870bb08.jpg","nickname":"从新开始","note":"","ucode":"9BDA8C16C24321","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":332111,"discussion_content":"我看的时候感觉是false，后面还放到浏览器跑了一下","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1607067373,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1019408,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/8e/10/9cd524d8.jpg","nickname":"Dan","note":"","ucode":"B612EF2E3DC604","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":295097,"discussion_content":"我得到的也是false","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1596088854,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1266698,"avatar":"https://static001.geekbang.org/account/avatar/00/13/54/0a/9a002ad5.jpg","nickname":"Adam Lau","note":"","ucode":"7E542D6E789500","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":194355,"discussion_content":"我也看到了这个错误","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1583211355,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1747669,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/aa/d5/f08081bb.jpg","nickname":"很高兴遇见你_","note":"","ucode":"40A551EEB8BEFC","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":54772,"discussion_content":"winter 写错了,  应该是 || 取真  &amp;&amp; 取假","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574313541,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":83609,"user_name":"阿成","can_delete":false,"product_type":"c1","uid":1390032,"ip_address":"","ucode":"CEC3CD65FB9333","user_header":"https://static001.geekbang.org/account/avatar/00/15/35/d0/f2ac6d91.jpg","comment_is_top":false,"comment_ctime":1554684972,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"134698671148","product_id":100023201,"comment_content":"优先级由高到低：<br>1 ()<br>2 .&#47;[] 左<br>2 new MemberExpression Arguments<br>3 new MemberExpression 右<br>4 () 函数调用 左<br>5 ++&#47;--<br>6 +&#47;-&#47;~&#47;!&#47;delete&#47;typeof&#47;void&#47;await 右<br>7 ** 右<br>8 *&#47;&#47;&#47;% 左<br>9 +&#47;- 左<br>10 &lt;&lt; &gt;&gt; &gt;&gt;&gt; 左<br>11 &lt; &gt; &lt;= &gt;= instance of in 左<br>12 == === != !== 左<br>13 &amp; 左<br>14 ^ 左<br>15 | 左<br>16 &amp;&amp; 左<br>17 || 左<br>18 ?: 右<br>19 = 右<br>20 , 左<br><br>不过MDN上的一份整理是这样的：https:&#47;&#47;developer.mozilla.org&#47;zh-CN&#47;docs&#47;Web&#47;JavaScript&#47;Reference&#47;Operators&#47;Operator_Precedence<br><br>主要不同的地方集中在：<br>1. 函数调用与New Expression的优先级顺序（上一课文中有一句不是很理解：而 Call Expression 就失去了比 New Expression优先级高的特性，这是一个主要的区分）<br>2. ++&#47;-- 前置和后置的优先级顺序（MDN上前置后置优先级是不同的）<br>3. 缺少了 yield&#47;yield*&#47;...这三个运算符<br>","like_count":31,"discussions":[{"author":{"id":1293057,"avatar":"https://static001.geekbang.org/account/avatar/00/13/bb/01/568ac2d6.jpg","nickname":"K4SHIFZ","note":"","ucode":"BFB49AAC0E4C74","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":194465,"discussion_content":"当Member Expression加上函数调用时，就降级为Call Expression。这是由表达式产生式决定的","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1583222558,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":108342,"user_name":"windliang","can_delete":false,"product_type":"c1","uid":1234620,"ip_address":"","ucode":"D31E26BFB09DE6","user_header":"https://static001.geekbang.org/account/avatar/00/12/d6/bc/026ac6b1.jpg","comment_is_top":false,"comment_ctime":1561722852,"is_pvip":false,"replies":[{"id":"58931","content":"优秀。","user_name":"作者回复","user_name_real":"winter","uid":"1268524","ctime":1574221617,"ip_address":"","comment_id":108342,"utype":1}],"discussion_count":3,"race_medal":0,"score":"83166101476","product_id":100023201,"comment_content":"-1 &gt;&gt; 1，-1 的补码是 1111 1111 ... 1111 1111 ，32 个 1，有符号右移，高位补 1，所以还是 1111 1111 ... 1111 1111 ，32 个 1，所以答案依旧是 -1。<br><br>-1 &gt;&gt;&gt; 1，-1 的补码是 1111 1111 ... 1111 1111 ，32 个 1，无符号右移，高位补 0，所以是 0111 1111... 1111 1111 ,31 个 1，代表 2 ** 31 - 1= 2147483648 - 1 = 2147483647 。<br><br>「在 JavaScript 中，二进制操作整数并不能提高性能」我觉得原因就是 js 数字不管整数还是小数都用 IEEE 754 浮点数标准。所以没有所谓的补码之说，也只有在进行位操作的时候，js 进行转换而已。<br><br>之前总结了一篇补码的文章，分享一下.<br><br>https:&#47;&#47;mp.weixin.qq.com&#47;s&#47;uvcQHJi6AXhPDJL-6JWUkw<br><br>","like_count":20,"discussions":[{"author":{"id":1268524,"avatar":"https://static001.geekbang.org/account/avatar/00/13/5b/2c/12bfd3cd.jpg","nickname":"winter","note":"","ucode":"2B068EDEAFEB56","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":455925,"discussion_content":"优秀。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574221617,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1443237,"avatar":"https://static001.geekbang.org/account/avatar/00/16/05/a5/69955c34.jpg","nickname":"涯渊","note":"","ucode":"F364D121087F1F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":41041,"discussion_content":"31个1 为啥不是 2 ** 32 -1","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1572334108,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1234620,"avatar":"https://static001.geekbang.org/account/avatar/00/12/d6/bc/026ac6b1.jpg","nickname":"windliang","note":"","ucode":"D31E26BFB09DE6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1443237,"avatar":"https://static001.geekbang.org/account/avatar/00/16/05/a5/69955c34.jpg","nickname":"涯渊","note":"","ucode":"F364D121087F1F","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":120912,"discussion_content":"从 2 的 0 次方开始的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578304248,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":41041,"ip_address":""},"score":120912,"extra":""}]}]},{"had_liked":false,"id":84059,"user_name":"Geeker","can_delete":false,"product_type":"c1","uid":1032345,"ip_address":"","ucode":"9937127DE96D78","user_header":"https://static001.geekbang.org/account/avatar/00/0f/c0/99/259a412f.jpg","comment_is_top":false,"comment_ctime":1554776288,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"27324580064","product_id":100023201,"comment_content":"标准里有些东西还是看不太懂，如果可以的话，希望老师在答疑的时候稍微讲解一下如何看懂标准","like_count":7},{"had_liked":false,"id":151503,"user_name":"冬Don","can_delete":false,"product_type":"c1","uid":1645261,"ip_address":"","ucode":"61F852C2977E5B","user_header":"https://static001.geekbang.org/account/avatar/00/19/1a/cd/5009b8f8.jpg","comment_is_top":false,"comment_ctime":1573731943,"is_pvip":false,"replies":[{"id":"58886","content":"[undefined].toString(); <br>[false].toString(); <br>这么一看就知道为什么了。<br>不过不同类型的双等号比较是JS里的糟粕，你学了也没什么用处。","user_name":"作者回复","user_name_real":"winter","uid":"1268524","ctime":1574218497,"ip_address":"","comment_id":151503,"utype":1}],"discussion_count":1,"race_medal":0,"score":"14458633831","product_id":100023201,"comment_content":"为什么 [undefined] == 0 是 true, [false] == 0是false呢","like_count":3,"discussions":[{"author":{"id":1268524,"avatar":"https://static001.geekbang.org/account/avatar/00/13/5b/2c/12bfd3cd.jpg","nickname":"winter","note":"","ucode":"2B068EDEAFEB56","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":474506,"discussion_content":"[undefined].toString(); \n[false].toString(); \n这么一看就知道为什么了。\n不过不同类型的双等号比较是JS里的糟粕，你学了也没什么用处。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574218497,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":115228,"user_name":"依韵","can_delete":false,"product_type":"c1","uid":1153762,"ip_address":"","ucode":"02F5BED8BE0F6E","user_header":"https://static001.geekbang.org/account/avatar/00/11/9a/e2/271e0caf.jpg","comment_is_top":false,"comment_ctime":1563513587,"is_pvip":false,"discussion_count":2,"race_medal":1,"score":"14448415475","product_id":100023201,"comment_content":"false &amp;&amp; undefined 值为false","like_count":3,"discussions":[{"author":{"id":1027182,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/ac/6e/2a272fce.jpg","nickname":"风语菡","note":"","ucode":"E96C91E47FEF77","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":264035,"discussion_content":"对，true &amp;&amp; undefined 值才为undefined.","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1589283623,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1131386,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/y64YmljGrLHPyhXic4aPv6eVcJwQaBLvz53o2ICWSfa8b6felII803WQGE6Ky71LSG2MTzEsoJllmNFED12ZZZA/132","nickname":"光风霁月陈铁柱","note":"","ucode":"EBF9E8B116C40E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":2901,"discussion_content":"短路，是文中有错","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1564026979,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":96116,"user_name":"白嗣","can_delete":false,"product_type":"c1","uid":1140026,"ip_address":"","ucode":"4F2AC31CEA2CA1","user_header":"https://static001.geekbang.org/account/avatar/00/11/65/3a/48f3f4e8.jpg","comment_is_top":false,"comment_ctime":1558335638,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"14443237526","product_id":100023201,"comment_content":"false &amp;&amp; undefined; &#47;&#47; false","like_count":3},{"had_liked":false,"id":84260,"user_name":"Geeker","can_delete":false,"product_type":"c1","uid":1032345,"ip_address":"","ucode":"9937127DE96D78","user_header":"https://static001.geekbang.org/account/avatar/00/0f/c0/99/259a412f.jpg","comment_is_top":false,"comment_ctime":1554814406,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"14439716294","product_id":100023201,"comment_content":"评论不能发图片，我把不太明白的地方截图发到了语雀：<br>https:&#47;&#47;cdn.nlark.com&#47;yuque&#47;0&#47;2019&#47;jpeg&#47;119718&#47;1554814331032-assets&#47;web-upload&#47;a51218b6-cd8a-4ac8-b71f-f8f6dbfeab36.jpeg<br>麻烦老师移步看一下，谢谢。","like_count":3},{"had_liked":false,"id":83263,"user_name":"Geeker","can_delete":false,"product_type":"c1","uid":1032345,"ip_address":"","ucode":"9937127DE96D78","user_header":"https://static001.geekbang.org/account/avatar/00/0f/c0/99/259a412f.jpg","comment_is_top":false,"comment_ctime":1554502013,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"14439403901","product_id":100023201,"comment_content":"老师是在带我们过 ECMAScript标准，讲解很详细，基本能读懂标准了🌝","like_count":3},{"had_liked":false,"id":136326,"user_name":"梧桐","can_delete":false,"product_type":"c1","uid":1392600,"ip_address":"","ucode":"18BB11B97DB40B","user_header":"https://static001.geekbang.org/account/avatar/00/15/3f/d8/dfeeecf0.jpg","comment_is_top":false,"comment_ctime":1569409714,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10159344306","product_id":100023201,"comment_content":"“逻辑与表达式和逻辑或表达式”一节中，第二个例子 false &amp;&amp; undefined; 的结果为 false","like_count":2},{"had_liked":false,"id":85779,"user_name":"K4SHIFZ","can_delete":false,"product_type":"c1","uid":1293057,"ip_address":"","ucode":"BFB49AAC0E4C74","user_header":"https://static001.geekbang.org/account/avatar/00/13/bb/01/568ac2d6.jpg","comment_is_top":false,"comment_ctime":1555230070,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"10145164662","product_id":100023201,"comment_content":"老师，在ES5之前版本规范中，会提及JS的可执行代码分为全局、函数、Eval。但是在ES6之后版本规范中，再也不提及可执行代码的概念了，这是为什么呢？","like_count":2,"discussions":[{"author":{"id":1382676,"avatar":"https://static001.geekbang.org/account/avatar/00/15/19/14/71cfa677.jpg","nickname":"宅神king","note":"","ucode":"9BFE977278D9F2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":85700,"discussion_content":"在 JavaScript执行（二）: 闭包和执行上下文 这一节中有解释，ES5 之后执行上下文的规则变了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1576567864,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":83543,"user_name":"阿成","can_delete":false,"product_type":"c1","uid":1390032,"ip_address":"","ucode":"CEC3CD65FB9333","user_header":"https://static001.geekbang.org/account/avatar/00/15/35/d0/f2ac6d91.jpg","comment_is_top":false,"comment_ctime":1554645271,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10144579863","product_id":100023201,"comment_content":"文中提到：<br>按位或表达式由按位或运算符（|）连接相等表达式构成，按位或表达式把操作数视为二进制整数，然后把两个操作数按位做或运算。<br><br>这里的相等表达式应该是按位异或表达式吧？<br>（抱歉小编，之前打错了...）","like_count":2},{"had_liked":false,"id":285984,"user_name":"你好，阳光","can_delete":false,"product_type":"c1","uid":2145095,"ip_address":"","ucode":"1A2F487C57F7D9","user_header":"https://static001.geekbang.org/account/avatar/00/20/bb/47/b60ae3eb.jpg","comment_is_top":false,"comment_ctime":1617093546,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5912060842","product_id":100023201,"comment_content":"文稿中说一元更新表达式是一个更新表达式搭配了一个一元运算符。但是从给的例子如+a,-a这些看不出来，能否换一些更恰当的例子？","like_count":1},{"had_liked":false,"id":119276,"user_name":"渴望做梦","can_delete":false,"product_type":"c1","uid":1398219,"ip_address":"","ucode":"9EB47530A69C91","user_header":"https://static001.geekbang.org/account/avatar/00/15/55/cb/1efe460a.jpg","comment_is_top":false,"comment_ctime":1564549235,"is_pvip":false,"replies":[{"id":"54069","content":"a本身就是一个更新表达式","user_name":"作者回复","user_name_real":"winter","uid":"1268524","ctime":1570774760,"ip_address":"","comment_id":119276,"utype":1}],"discussion_count":2,"race_medal":0,"score":"5859516531","product_id":100023201,"comment_content":"老师，这篇文章里面每个表达式介绍的时候都说是由上一个表达式构成的，对此我不是很理解，比如一元运算表达式是有更新表达式和一元运算符构成的，但是 typeof a 我怎么看也没看出来哪有更新表达式","like_count":1,"discussions":[{"author":{"id":1268524,"avatar":"https://static001.geekbang.org/account/avatar/00/13/5b/2c/12bfd3cd.jpg","nickname":"winter","note":"","ucode":"2B068EDEAFEB56","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":460820,"discussion_content":"a本身就是一个更新表达式","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1570774760,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":3166573,"avatar":"https://static001.geekbang.org/account/avatar/00/30/51/6d/e4aed428.jpg","nickname":"%","note":"","ucode":"C5FC6B541307AE","race_medal":1,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":591759,"discussion_content":"更新表达式不是由++--构成的吗","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1666803041,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"上海"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":99290,"user_name":"study","can_delete":false,"product_type":"c1","uid":1378133,"ip_address":"","ucode":"078517D3EF2413","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIEODRricvc32UpO3PxoPrFBDgmoGXdiagcibNh0outmZicXFg1icV4c5ibSknc4be3PWUPsIa3OjdMmlwA/132","comment_is_top":false,"comment_ctime":1559186877,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"5854154173","product_id":100023201,"comment_content":"ExponentiationExpression，这个应该是指数表达式，不是乘法表达式吧。","like_count":1,"discussions":[{"author":{"id":1392600,"avatar":"https://static001.geekbang.org/account/avatar/00/15/3f/d8/dfeeecf0.jpg","nickname":"梧桐","note":"","ucode":"18BB11B97DB40B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":20987,"discussion_content":"写的是乘方，不是乘法","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1569410096,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":91898,"user_name":"温木","can_delete":false,"product_type":"c1","uid":1507210,"ip_address":"","ucode":"EAB6EDD6EDFE96","user_header":"","comment_is_top":false,"comment_ctime":1557130124,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5852097420","product_id":100023201,"comment_content":"左移 n 位相当于乘以 2 的 n 次方，右移 n 位相当于除以 2 取整 n 次。<br>异或运算有个特征，那就是两次异或运算相当于取消。所以有一个异或运算的小技巧，就是用异或运算来交换两个整数的值。","like_count":2},{"had_liked":false,"id":90379,"user_name":"乃乎","can_delete":false,"product_type":"c1","uid":1393061,"ip_address":"","ucode":"03F587A06051AC","user_header":"https://static001.geekbang.org/account/avatar/00/15/41/a5/16c615cc.jpg","comment_is_top":false,"comment_ctime":1556503360,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5851470656","product_id":100023201,"comment_content":"“字符串和 bool 都转为数字再比较”<br>这点很重要，也很对<br>","like_count":2},{"had_liked":false,"id":84070,"user_name":"Geeker","can_delete":false,"product_type":"c1","uid":1032345,"ip_address":"","ucode":"9937127DE96D78","user_header":"https://static001.geekbang.org/account/avatar/00/0f/c0/99/259a412f.jpg","comment_is_top":false,"comment_ctime":1554777785,"is_pvip":true,"replies":[{"id":"30360","content":"ES2018写的比较类似伪代码了，我这边还是从前端的理解角度出发来讲的。<br>你具体哪里不懂，可以发出来看看。","user_name":"作者回复","user_name_real":"winter","uid":"1268524","ctime":1554804366,"ip_address":"","comment_id":84070,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5849745081","product_id":100023201,"comment_content":"比如本章和前一章对应标准中的 “12 ECMAScript Language: Expression”这一章，但有些内容不是很好懂，可能和标准的行文结构和规范有关，希望老师有时间可以稍做调拨，谢谢！","like_count":1,"discussions":[{"author":{"id":1268524,"avatar":"https://static001.geekbang.org/account/avatar/00/13/5b/2c/12bfd3cd.jpg","nickname":"winter","note":"","ucode":"2B068EDEAFEB56","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":446240,"discussion_content":"ES2018写的比较类似伪代码了，我这边还是从前端的理解角度出发来讲的。\n你具体哪里不懂，可以发出来看看。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1554804366,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":336000,"user_name":"周伟","can_delete":false,"product_type":"c1","uid":1382731,"ip_address":"","ucode":"BE5DA105390106","user_header":"https://static001.geekbang.org/account/avatar/00/15/19/4b/c30b6362.jpg","comment_is_top":false,"comment_ctime":1645839733,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1645839733","product_id":100023201,"comment_content":"更新表达式的介绍部分有点迷，下面表达式中哪里有更新表达式；delete a.b;void a;typeof a;- a;~ a;! a;await a;<br>","like_count":0},{"had_liked":false,"id":292361,"user_name":"胡永","can_delete":false,"product_type":"c1","uid":1200543,"ip_address":"","ucode":"6C8BA1E0BED9C0","user_header":"https://static001.geekbang.org/account/avatar/00/12/51/9f/1840385e.jpg","comment_is_top":false,"comment_ctime":1620792396,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1620792396","product_id":100023201,"comment_content":"作业题目可以通过这个里面的看到答案,标准里通过语法规则表述的很明白:https:&#47;&#47;tc39.es&#47;ecma262&#47;#sec-update-expressions","like_count":0},{"had_liked":false,"id":286196,"user_name":"undefined","can_delete":false,"product_type":"c1","uid":1100750,"ip_address":"","ucode":"768098DBDBE333","user_header":"https://static001.geekbang.org/account/avatar/00/10/cb/ce/d9e00eb5.jpg","comment_is_top":false,"comment_ctime":1617184058,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1617184058","product_id":100023201,"comment_content":"<br>false &amp;&amp; undefined; 结果写错了，或者想写 ｜｜","like_count":0},{"had_liked":false,"id":251439,"user_name":"杜森垚","can_delete":false,"product_type":"c1","uid":1230301,"ip_address":"","ucode":"71DEA59348CE09","user_header":"https://static001.geekbang.org/account/avatar/00/12/c5/dd/5a482cab.jpg","comment_is_top":false,"comment_ctime":1601556901,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1601556901","product_id":100023201,"comment_content":"按位异或表达式 BitwiseANDExpression 这里应该是 BitwiseXORExpression","like_count":0},{"had_liked":false,"id":226844,"user_name":"石头","can_delete":false,"product_type":"c1","uid":2028362,"ip_address":"","ucode":"8CF516502F4BB8","user_header":"https://static001.geekbang.org/account/avatar/00/1e/f3/4a/bf32bb28.jpg","comment_is_top":false,"comment_ctime":1592214495,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1592214495","product_id":100023201,"comment_content":"位运算表达式那里应该是：<br>按位与表达式由按位与运算符（&amp;）连接相等表达式构成<br>按位异或达式由按位异或运算符（^）连接按位与表达式构成<br>按位或表达式由按位或运算符（|）连接按位异或表达式构成","like_count":0},{"had_liked":false,"id":206049,"user_name":"曙光","can_delete":false,"product_type":"c1","uid":1476450,"ip_address":"","ucode":"04D65BF7F19845","user_header":"https://static001.geekbang.org/account/avatar/00/16/87/62/f99b5b05.jpg","comment_is_top":false,"comment_ctime":1586779999,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1586779999","product_id":100023201,"comment_content":"&quot;条件表达式由逻辑或表达式和条件运算符构成&quot;,这种表述没看懂，condition ? branch1 : branch2并没有包含逻辑或表达式呀","like_count":0,"discussions":[{"author":{"id":1689268,"avatar":"https://static001.geekbang.org/account/avatar/00/19/c6/b4/e80a4fc8.jpg","nickname":"Wise","note":"","ucode":"A1915E54C26948","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":249882,"discussion_content":"逻辑或表达式的解释：逻辑与表达式经逻辑或运算符连接构成。\n我认为的意思就是说  执行完condition  执行 branch1 或者 branch2 这个就跟 逻辑或 执行的效果一样，所以说这是：条件表达式由逻辑或表达式和条件运算符构成 ，","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1587970858,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":193044,"user_name":"pcxpccccx_","can_delete":false,"product_type":"c1","uid":1373999,"ip_address":"","ucode":"CCCF6C13279BB7","user_header":"https://static001.geekbang.org/account/avatar/00/14/f7/2f/10cbed82.jpg","comment_is_top":false,"comment_ctime":1584882940,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1584882940","product_id":100023201,"comment_content":"长知识了！","like_count":0},{"had_liked":false,"id":187341,"user_name":"qqq","can_delete":false,"product_type":"c1","uid":1029922,"ip_address":"","ucode":"B74B3863711CE7","user_header":"https://static001.geekbang.org/account/avatar/00/0f/b7/22/84f92c04.jpg","comment_is_top":false,"comment_ctime":1584087674,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1584087674","product_id":100023201,"comment_content":"终于把Javascript部分给看完了，这门编程语言实在是太多BUG了","like_count":0}]}