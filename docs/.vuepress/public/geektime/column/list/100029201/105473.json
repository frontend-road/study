{"id":105473,"title":"16 | 揭开神秘的“位移主题”面纱","content":"<p>你好，我是胡夕。今天我要和你分享的内容是：Kafka中神秘的内部主题（Internal Topic）__consumer_offsets。</p><p>__consumer_offsets在Kafka源码中有个更为正式的名字，叫<strong>位移主题</strong>，即Offsets Topic。为了方便今天的讨论，我将统一使用位移主题来指代__consumer_offsets。需要注意的是，它有两个下划线哦。</p><p>好了，我们开始今天的内容吧。首先，我们有必要探究一下位移主题被引入的背景及原因，即位移主题的前世今生。</p><p>在上一期中，我说过老版本Consumer的位移管理是依托于Apache ZooKeeper的，它会自动或手动地将位移数据提交到ZooKeeper中保存。当Consumer重启后，它能自动从ZooKeeper中读取位移数据，从而在上次消费截止的地方继续消费。这种设计使得Kafka Broker不需要保存位移数据，减少了Broker端需要持有的状态空间，因而有利于实现高伸缩性。</p><p>但是，ZooKeeper其实并不适用于这种高频的写操作，因此，Kafka社区自0.8.2.x版本开始，就在酝酿修改这种设计，并最终在新版本Consumer中正式推出了全新的位移管理机制，自然也包括这个新的位移主题。</p><!-- [[[read_end]]] --><p>新版本Consumer的位移管理机制其实也很简单，就是<strong>将Consumer的位移数据作为一条条普通的Kafka消息，提交到__consumer_offsets中。可以这么说，__consumer_offsets的主要作用是保存Kafka消费者的位移信息。</strong>它要求这个提交过程不仅要实现高持久性，还要支持高频的写操作。显然，Kafka的主题设计天然就满足这两个条件，因此，使用Kafka主题来保存位移这件事情，实际上就是一个水到渠成的想法了。</p><p>这里我想再次强调一下，和你创建的其他主题一样，位移主题就是普通的Kafka主题。你可以手动地创建它、修改它，甚至是删除它。只不过，它同时也是一个内部主题，大部分情况下，你其实并不需要“搭理”它，也不用花心思去管理它，把它丢给Kafka就完事了。</p><p>虽说位移主题是一个普通的Kafka主题，但<strong>它的消息格式却是Kafka自己定义的</strong>，用户不能修改，也就是说你不能随意地向这个主题写消息，因为一旦你写入的消息不满足Kafka规定的格式，那么Kafka内部无法成功解析，就会造成Broker的崩溃。事实上，Kafka Consumer有API帮你提交位移，也就是向位移主题写消息。你千万不要自己写个Producer随意向该主题发送消息。</p><p>你可能会好奇，这个主题存的到底是什么格式的消息呢？所谓的消息格式，你可以简单地理解为是一个KV对。Key和Value分别表示消息的键值和消息体，在Kafka中它们就是字节数组而已。想象一下，如果让你来设计这个主题，你觉得消息格式应该长什么样子呢？我先不说社区的设计方案，我们自己先来设计一下。</p><p>首先从Key说起。一个Kafka集群中的Consumer数量会有很多，既然这个主题保存的是Consumer的位移数据，那么消息格式中必须要有字段来标识这个位移数据是哪个Consumer的。这种数据放在哪个字段比较合适呢？显然放在Key中比较合适。</p><p>现在我们知道该主题消息的Key中应该保存标识Consumer的字段，那么，当前Kafka中什么字段能够标识Consumer呢？还记得之前我们说Consumer Group时提到的Group ID吗？没错，就是这个字段，它能够标识唯一的Consumer Group。</p><p>说到这里，我再多说几句。除了Consumer Group，Kafka还支持独立Consumer，也称Standalone Consumer。它的运行机制与Consumer Group完全不同，但是位移管理的机制却是相同的。因此，即使是Standalone Consumer，也有自己的Group ID来标识它自己，所以也适用于这套消息格式。</p><p>Okay，我们现在知道Key中保存了Group ID，但是只保存Group ID就可以了吗？别忘了，Consumer提交位移是在分区层面上进行的，即它提交的是某个或某些分区的位移，那么很显然，Key中还应该保存Consumer要提交位移的分区。</p><p>好了，我们来总结一下我们的结论。<strong>位移主题的Key中应该保存3部分内容：&lt;Group ID，主题名，分区号&gt;</strong>。如果你认同这样的结论，那么恭喜你，社区就是这么设计的！</p><p>接下来，我们再来看看消息体的设计。也许你会觉得消息体应该很简单，保存一个位移值就可以了。实际上，社区的方案要复杂得多，比如消息体还保存了位移提交的一些其他元数据，诸如时间戳和用户自定义的数据等。保存这些元数据是为了帮助Kafka执行各种各样后续的操作，比如删除过期位移消息等。但总体来说，我们还是可以简单地认为消息体就是保存了位移值。</p><p>当然了，位移主题的消息格式可不是只有这一种。事实上，它有3种消息格式。除了刚刚我们说的这种格式，还有2种格式：</p><ol>\n<li>用于保存Consumer Group信息的消息。</li>\n<li>用于删除Group过期位移甚至是删除Group的消息。</li>\n</ol><p>第1种格式非常神秘，以至于你几乎无法在搜索引擎中搜到它的身影。不过，你只需要记住它是用来注册Consumer Group的就可以了。</p><p>第2种格式相对更加有名一些。它有个专属的名字：tombstone消息，即墓碑消息，也称delete mark。下次你在Google或百度中见到这些词，不用感到惊讶，它们指的是一个东西。这些消息只出现在源码中而不暴露给你。它的主要特点是它的消息体是null，即空消息体。</p><p>那么，何时会写入这类消息呢？一旦某个Consumer Group下的所有Consumer实例都停止了，而且它们的位移数据都已被删除时，Kafka会向位移主题的对应分区写入tombstone消息，表明要彻底删除这个Group的信息。</p><p>好了，消息格式就说这么多，下面我们来说说位移主题是怎么被创建的。通常来说，<strong>当Kafka集群中的第一个Consumer程序启动时，Kafka会自动创建位移主题</strong>。我们说过，位移主题就是普通的Kafka主题，那么它自然也有对应的分区数。但如果是Kafka自动创建的，分区数是怎么设置的呢？这就要看Broker端参数offsets.topic.num.partitions的取值了。它的默认值是50，因此Kafka会自动创建一个50分区的位移主题。如果你曾经惊讶于Kafka日志路径下冒出很多__consumer_offsets-xxx这样的目录，那么现在应该明白了吧，这就是Kafka自动帮你创建的位移主题啊。</p><p>你可能会问，除了分区数，副本数或备份因子是怎么控制的呢？答案也很简单，这就是Broker端另一个参数offsets.topic.replication.factor要做的事情了。它的默认值是3。</p><p>总结一下，<strong>如果位移主题是Kafka自动创建的，那么该主题的分区数是50，副本数是3</strong>。</p><p>当然，你也可以选择手动创建位移主题，具体方法就是，在Kafka集群尚未启动任何Consumer之前，使用Kafka API创建它。手动创建的好处在于，你可以创建满足你实际场景需要的位移主题。比如很多人说50个分区对我来讲太多了，我不想要这么多分区，那么你可以自己创建它，不用理会offsets.topic.num.partitions的值。</p><p>不过我给你的建议是，还是让Kafka自动创建比较好。目前Kafka源码中有一些地方硬编码了50分区数，因此如果你自行创建了一个不同于默认分区数的位移主题，可能会碰到各种各样奇怪的问题。这是社区的一个Bug，目前代码已经修复了，但依然在审核中。</p><p>创建位移主题当然是为了用的，那么什么地方会用到位移主题呢？我们前面一直在说Kafka Consumer提交位移时会写入该主题，那Consumer是怎么提交位移的呢？目前Kafka Consumer提交位移的方式有两种：<strong>自动提交位移和手动提交位移。</strong></p><p>Consumer端有个参数叫enable.auto.commit，如果值是true，则Consumer在后台默默地为你定期提交位移，提交间隔由一个专属的参数auto.commit.interval.ms来控制。自动提交位移有一个显著的优点，就是省事，你不用操心位移提交的事情，就能保证消息消费不会丢失。但这一点同时也是缺点。因为它太省事了，以至于丧失了很大的灵活性和可控性，你完全没法把控Consumer端的位移管理。</p><p>事实上，很多与Kafka集成的大数据框架都是禁用自动提交位移的，如Spark、Flink等。这就引出了另一种位移提交方式：<strong>手动提交位移</strong>，即设置enable.auto.commit = false。一旦设置了false，作为Consumer应用开发的你就要承担起位移提交的责任。Kafka Consumer API为你提供了位移提交的方法，如consumer.commitSync等。当调用这些方法时，Kafka会向位移主题写入相应的消息。</p><p>如果你选择的是自动提交位移，那么就可能存在一个问题：只要Consumer一直启动着，它就会无限期地向位移主题写入消息。</p><p>我们来举个极端一点的例子。假设Consumer当前消费到了某个主题的最新一条消息，位移是100，之后该主题没有任何新消息产生，故Consumer无消息可消费了，所以位移永远保持在100。由于是自动提交位移，位移主题中会不停地写入位移=100的消息。显然Kafka只需要保留这类消息中的最新一条就可以了，之前的消息都是可以删除的。这就要求Kafka必须要有针对位移主题消息特点的消息删除策略，否则这种消息会越来越多，最终撑爆整个磁盘。</p><p>Kafka是怎么删除位移主题中的过期消息的呢？答案就是Compaction。国内很多文献都将其翻译成压缩，我个人是有一点保留意见的。在英语中，压缩的专有术语是Compression，它的原理和Compaction很不相同，我更倾向于翻译成压实，或干脆采用JVM垃圾回收中的术语：整理。</p><p>不管怎么翻译，Kafka使用<strong>Compact策略</strong>来删除位移主题中的过期消息，避免该主题无限期膨胀。那么应该如何定义Compact策略中的过期呢？对于同一个Key的两条消息M1和M2，如果M1的发送时间早于M2，那么M1就是过期消息。Compact的过程就是扫描日志的所有消息，剔除那些过期的消息，然后把剩下的消息整理在一起。我在这里贴一张来自官网的图片，来说明Compact过程。</p><p><img src=\"https://static001.geekbang.org/resource/image/86/e7/86a44073aa60ac33e0833e6a9bfd9ae7.jpeg?wh=681*397\" alt=\"\"></p><p>图中位移为0、2和3的消息的Key都是K1。Compact之后，分区只需要保存位移为3的消息，因为它是最新发送的。</p><p><strong>Kafka提供了专门的后台线程定期地巡检待Compact的主题，看看是否存在满足条件的可删除数据</strong>。这个后台线程叫Log Cleaner。很多实际生产环境中都出现过位移主题无限膨胀占用过多磁盘空间的问题，如果你的环境中也有这个问题，我建议你去检查一下Log Cleaner线程的状态，通常都是这个线程挂掉了导致的。</p><h2>小结</h2><p>总结一下，今天我跟你分享了Kafka神秘的位移主题__consumer_offsets，包括引入它的契机与原因、它的作用、消息格式、写入的时机以及管理策略等，这对我们了解Kafka特别是Kafka Consumer的位移管理是大有帮助的。实际上，将很多元数据以消息的方式存入Kafka内部主题的做法越来越流行。除了Consumer位移管理，Kafka事务也是利用了这个方法，当然那是另外的一个内部主题了。</p><p>社区的想法很简单：既然Kafka天然实现了高持久性和高吞吐量，那么任何有这两个需求的子服务自然也就不必求助于外部系统，用Kafka自己实现就好了。</p><p><img src=\"https://static001.geekbang.org/resource/image/92/b7/927e436fb8054665d81db418c25af3b7.jpg?wh=2069*2569\" alt=\"\"></p><h2>开放讨论</h2><p>今天我们说了位移主题的很多好处，请思考一下，与ZooKeeper方案相比，它可能的劣势是什么？</p><p>欢迎写下你的思考和答案，我们一起讨论。如果你觉得有所收获，也欢迎把文章分享给你的朋友。</p>","neighbors":{"left":{"article_title":"15 | 消费者组到底是什么？","id":105112},"right":{"article_title":"17 | 消费者组重平衡能避免吗？","id":105737}},"comments":[{"had_liked":false,"id":147059,"user_name":"注定非凡","can_delete":false,"product_type":"c1","uid":1113597,"ip_address":"","ucode":"80673056E131B7","user_header":"https://static001.geekbang.org/account/avatar/00/10/fd/fd/326be9bb.jpg","comment_is_top":false,"comment_ctime":1572782086,"is_pvip":true,"discussion_count":4,"race_medal":0,"score":"353760100358","product_id":100029201,"comment_content":"1，诞生背景<br>\tA ：老版本的Kafka会把位移信息保存在Zk中，当Consumer重启后，自动从Zk中读取位移信息。这种设计使Kafka Broker不需要保存位移数据，可减少Broker端需要持有的状态空间，有利于实现高伸缩性。<br>\tB ：但zk不适用于高频的写操作，这令zk集群性能严重下降，在新版本中将消费者的位移数据作为一条条普通的Kafka消息，提交至内部主题（_consumer_offsets）中保存。实现高持久性和高频写操作。<br><br>2，特点:<br>\tA ：位移主题是一个普通主题，同样可以被手动创建，修改，删除。。<br>\tB ：位移主题的消息格式是kafka定义的，不可以被手动修改，若修改格式不正确，kafka将会崩溃。<br>\tC ：位移主题保存了三部分内容：Group ID，主题名，分区号。<br><br>3，创建：<br>\tA ：当Kafka集群中的第一个Consumer程序启动时，Kafka会自动创建位移主题。也可以手动创建<br>\tB ：分区数依赖于Broker端的offsets.topic.num.partitions的取值，默认为50<br>\tC ：副本数依赖于Broker端的offsets.topic.replication.factor的取值，默认为3<br><br>4，使用：<br>\tA ：当Kafka提交位移消息时会使用这个主题<br>\tB ：位移提交得分方式有两种:手动和自动提交位移。<br>\tC ：推荐使用手动提交位移，自动提交位移会存在问题：只有consumer一直启动设置，他就会无限期地向主题写入消息。<br><br>5，清理：<br>\tA ：Kafka使用Compact策略来删除位移主题中的过期消息，避免位移主题无限膨胀。<br>\tB ：kafka提供专门的后台线程定期巡检待compcat的主题，查看是否存在满足条件的可删除数据。<br><br>6，注意事项：<br>\tA ：建议不要修改默认分区数，在kafka中有些许功能写死的是50个分区<br>\tB ：建议不要使用自动提交模式，采用手动提交，避免消费者无限制的写入消息。<br>\tC ：后台定期巡检线程叫Log Cleaner，若线上遇到位移主题无限膨胀占用过多磁盘，应该检查此线程的工作状态。<br>","like_count":83,"discussions":[{"author":{"id":1399870,"avatar":"https://static001.geekbang.org/account/avatar/00/15/5c/3e/06e00378.jpg","nickname":"来电","note":"","ucode":"C609CE25F6DC43","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":186659,"discussion_content":"位移主题的 Key 中应该保存 3 部分内容：","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1582703659,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2037524,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/17/14/a2d83e5b.jpg","nickname":"vv33","note":"","ucode":"89026224CA9578","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":582290,"discussion_content":"我上高中的时候就是差这么一个课代表就能上清北","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1659351234,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"北京"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1572356,"avatar":"https://static001.geekbang.org/account/avatar/00/17/fe/04/bb427e47.jpg","nickname":"码哥字节","note":"","ucode":"362103AD52C8E0","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":557696,"discussion_content":"最强王者","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1647935228,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1339409,"avatar":"https://static001.geekbang.org/account/avatar/00/14/70/11/42cf8f9d.jpg","nickname":"chenjia","note":"","ucode":"61983C29FF4987","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":366881,"discussion_content":"此人注定非凡啊","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1618211396,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":178329,"user_name":"此方彼方Francis","can_delete":false,"product_type":"c1","uid":1001390,"ip_address":"","ucode":"73E6C93CF1FE39","user_header":"https://static001.geekbang.org/account/avatar/00/0f/47/ae/0a5f7a56.jpg","comment_is_top":false,"comment_ctime":1581661864,"is_pvip":false,"replies":[{"id":"69234","content":"是个很好的梳理思路~","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1581728955,"ip_address":"","comment_id":178329,"utype":1}],"discussion_count":6,"race_medal":0,"score":"216330026664","product_id":100029201,"comment_content":"之前遇到过的一个问题跟大家分享一下，原因描述不正确的地方还请大佬指正：<br>log cleaner线程挂掉还有可能导致消费端出现：Marking Coordinator Dead！<br><br>原因大概如下：<br>log cleaner线程挂掉之后会导致磁盘上位移主题的文件越来越多（当然，大部分是过期数据，只是依旧存在），broker内存中会维护offsetMap，从名字上看这个map就是维护消费进度的，而这个map和位移主题的文件有关联，文件越来越多会导致offsetMap越来越大，甚至导致offsetMap构建失败（为什么会失败没有搞明白），offsetMap构建失败之后broker不会承认自己是coordinator。<br>消费者组找coordinator的逻辑很简单：abs(consumer_groupName.hashCode) % __consumer_offset.partition.num对应的partition所在的broker就是这个group的coordinate，一旦这个broker的offsetMap构建失败，那么这个broker就不承认自己是这个group的coordinate，这个group的消费就无法继续进行，会出现Marking Coordinator Dead错误。<br>此时需要删除过期的位移主题的文件（根据文件名很容易确定哪个是最新的），重启broker。重启过程中需要关注log cleaner是否会再次挂掉。<br><br>PS：上述问题在broker重启和正常运行中都有可能遇到。","like_count":51,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":483759,"discussion_content":"是个很好的梳理思路~","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1581728955,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1339409,"avatar":"https://static001.geekbang.org/account/avatar/00/14/70/11/42cf8f9d.jpg","nickname":"chenjia","note":"","ucode":"61983C29FF4987","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":366882,"discussion_content":"我们谈高可用的时候都是在讲进程，线程也能在进程内挂掉而不影响当前进程？如果真是这样，不如把这个log cleaner线程与broker进程的生命周期强绑定（共存关系），这样至少可以借助broker的高可用","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1618211587,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":2642315,"avatar":"","nickname":"Geek_c695c1","note":"","ucode":"FC2AD53F54582D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1339409,"avatar":"https://static001.geekbang.org/account/avatar/00/14/70/11/42cf8f9d.jpg","nickname":"chenjia","note":"","ucode":"61983C29FF4987","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":387659,"discussion_content":"我觉得可以同步去删除过期数据，不强依赖log cleaner线程","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1628326395,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":366882,"ip_address":""},"score":387659,"extra":""},{"author":{"id":2166073,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/k3YD3y3BzGDSdrwRJyJY4BXsNJibfM4uzOdDVKIAlFApR2FZCLg2ibrZtJ4vuahA3LHLW9GKzH5CMGqCDhWjhZqg/132","nickname":"戒酒的李白","note":"","ucode":"744E1A22761647","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":2642315,"avatar":"","nickname":"Geek_c695c1","note":"","ucode":"FC2AD53F54582D","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":558600,"discussion_content":"同步去删除，会影响性能","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1648392894,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":387659,"ip_address":""},"score":558600,"extra":""}]},{"author":{"id":2660316,"avatar":"https://static001.geekbang.org/account/avatar/00/28/97/dc/8eacc8f1.jpg","nickname":"漠博嵩","note":"","ucode":"33704880E9790F","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":552034,"discussion_content":"导致log cleaner线程挂到的原因是什么呢?","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1645240539,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1488243,"avatar":"https://static001.geekbang.org/account/avatar/00/16/b5/73/15a8006a.jpg","nickname":"goxdev","note":"","ucode":"7374587CD08BEE","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":393818,"discussion_content":"本质原因是“文件越来越多会导致offsetMap越来越大，甚至导致offsetMap构建失败”？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1631610610,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":172164,"user_name":"Eco","can_delete":false,"product_type":"c1","uid":1373230,"ip_address":"","ucode":"5459B494753183","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/x86UN2kFbJGGwiaw7yeVtyaf05y5eZmdOciaAF09WEBRVicbPGsej1b62UAH3icjeJqvibVc6aqB0EuFwDicicKKcF47w/132","comment_is_top":false,"comment_ctime":1579099658,"is_pvip":false,"replies":[{"id":"66783","content":"好问题！其实Kafka并不太关注__consumer_offsets消费的情况，不过Coordinator的确会在JVM中把所有分区当前已提交的最新位移缓存起来，并且通过这个缓存来决定哪个consumer当前消费到了哪个位移。","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1579135213,"ip_address":"","comment_id":172164,"utype":1}],"discussion_count":6,"race_medal":0,"score":"104658314762","product_id":100029201,"comment_content":"有个问题想请教一下，这个位移主题，Consumer是像消费其他主题的分区的内容一样去获取数据的话，那么这本身不也得有个位移，那这个位移又保存到哪里的呢？这样下去不就陷入了一个死循环了吗？要么就不是像正常的消费消息那样去从位移主题获取当前消费者对于某个主题的分区的位移？","like_count":25,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":481647,"discussion_content":"好问题！其实Kafka并不太关注__consumer_offsets消费的情况，不过Coordinator的确会在JVM中把所有分区当前已提交的最新位移缓存起来，并且通过这个缓存来决定哪个consumer当前消费到了哪个位移。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1579135213,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":2,"child_discussions":[{"author":{"id":1349358,"avatar":"https://static001.geekbang.org/account/avatar/00/14/96/ee/9b21c199.jpg","nickname":"咸","note":"","ucode":"1F189A2B1A6A71","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":557238,"discussion_content":"那就是说，每个消费者消费的位置数据都在在内存中了，那他是与磁盘是如何保证一致性的啊","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1647706860,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":481647,"ip_address":""},"score":557238,"extra":""},{"author":{"id":1238190,"avatar":"https://static001.geekbang.org/account/avatar/00/12/e4/ae/7b310c2d.jpg","nickname":"呦呦鹿鸣","note":"","ucode":"BC80F2093CD6C3","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":566172,"discussion_content":"把消费位移写到这个主题队列里最终肯定是为了使用，如果Coordinator重启了内存缓存中的位移消失的情况下，那消费者如何从这个队列里获取对应消费者的消费位移？可以通过ConsumerGroup、topic、partition分区确定是在主题队列的哪个分区，那这个消息分区是一个队列结构，需要从这个队列通过O(n)的时间复杂度去扫描这个队列么？是这样实现的么","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1650619220,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":481647,"ip_address":""},"score":566172,"extra":""}]},{"author":{"id":2064920,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epxtS2pw4g1tQGnYtGoiaxO0nfvl0N2u1By3DYZY14PcosqjwYTqLib9Tib18kRrx30USHbADH0DAIWw/132","nickname":"Geek_d6dc46","note":"","ucode":"F196E1DF86C232","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":336364,"discussion_content":"确实是死循环，试过了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1608558512,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1799983,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/77/2f/6796cde2.jpg","nickname":"大维","note":"","ucode":"3EEEBEB92764AB","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":2064920,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epxtS2pw4g1tQGnYtGoiaxO0nfvl0N2u1By3DYZY14PcosqjwYTqLib9Tib18kRrx30USHbADH0DAIWw/132","nickname":"Geek_d6dc46","note":"","ucode":"F196E1DF86C232","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":343309,"discussion_content":"求问，你怎么测试这个问题的？谢谢！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1611001292,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":336364,"ip_address":""},"score":343309,"extra":""}]},{"author":{"id":1373230,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/x86UN2kFbJGGwiaw7yeVtyaf05y5eZmdOciaAF09WEBRVicbPGsej1b62UAH3icjeJqvibVc6aqB0EuFwDicicKKcF47w/132","nickname":"Eco","note":"","ucode":"5459B494753183","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":142727,"discussion_content":"缓存的方式嘛，哦哦，我在好好想想！这里为啥不整个像redis这种的高性能的KV数据库呢，虽然zk不适合高并发但是redis可以啊，是因为不想增加复杂度吗？需要引入其他组建！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579482138,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":111928,"user_name":"蛋炒番茄","can_delete":false,"product_type":"c1","uid":1095049,"ip_address":"","ucode":"3F963347C4A97C","user_header":"https://static001.geekbang.org/account/avatar/00/10/b5/89/9a1b4dee.jpg","comment_is_top":false,"comment_ctime":1562638841,"is_pvip":false,"discussion_count":4,"race_medal":0,"score":"100346886649","product_id":100029201,"comment_content":"“自动提交位移有一个显著的优点，就是省事，你不用操心位移提交的事情，就能保证消息消费不会丢失”，对于这一点我表示疑问啊❓我记得你在之前的章节里面讲过自动提交不仅会增加消息可重复消费的可能，也可能导致部分消息丢失。比如说虽然消息拉取下来但是还没消费完就已经提交，此时服务挂了这样情况。","like_count":23,"discussions":[{"author":{"id":1336475,"avatar":"https://static001.geekbang.org/account/avatar/00/14/64/9b/0b578b08.jpg","nickname":"J.Smile","note":"","ucode":"C4D98DFDBF7584","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":284132,"discussion_content":"对哦 这里有矛盾","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1592450300,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1396988,"avatar":"https://static001.geekbang.org/account/avatar/00/15/50/fc/0a31343c.jpg","nickname":"加油鸭","note":"","ucode":"2735762668FD26","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":551572,"discussion_content":"那个说的是有了异步线程批量消费消息导致的，同步消费自动提交不会有问题","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1645063559,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2911405,"avatar":"https://static001.geekbang.org/account/avatar/00/2c/6c/ad/8ea2e93e.jpg","nickname":"晴天","note":"","ucode":"7DD9D1274C1F3E","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":550919,"discussion_content":"这里确实会引起重复消费问题，原因是超时，比如消费时间过长kafka就会再次消费该数据","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1644811069,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1103208,"avatar":"https://static001.geekbang.org/account/avatar/00/10/d5/68/2201b6b9.jpg","nickname":"归零","note":"","ucode":"C99B8E93009A46","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":337030,"discussion_content":"老师能回答下吗？\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1608774134,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":111969,"user_name":"mellow","can_delete":false,"product_type":"c1","uid":1257852,"ip_address":"","ucode":"C44F0A588263C6","user_header":"https://static001.geekbang.org/account/avatar/00/13/31/7c/14df0dbf.jpg","comment_is_top":false,"comment_ctime":1562644603,"is_pvip":false,"replies":[{"id":"40845","content":"它会去寻找其Coordinator Leader副本对应的broker去拿。根据group.id找到对应Coordinator的分区数","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1562721975,"ip_address":"","comment_id":111969,"utype":1}],"discussion_count":5,"race_medal":0,"score":"91756957819","product_id":100029201,"comment_content":"老师能讲一下，同一个group下的consumer启动之后是怎么去offset topic 拿到该group上次消费topic每个partition的最新offset呢？是根据key来定位offset topic的partition吗，然后拿到所有消息得到最新的offset吗","like_count":21,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":457524,"discussion_content":"它会去寻找其Coordinator Leader副本对应的broker去拿。根据group.id找到对应Coordinator的分区数","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1562721975,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":1,"child_discussions":[{"author":{"id":1349358,"avatar":"https://static001.geekbang.org/account/avatar/00/14/96/ee/9b21c199.jpg","nickname":"咸","note":"","ucode":"1F189A2B1A6A71","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":557237,"discussion_content":"老师，能进一步说明下嘛？是在分区上依次消费取最新嘛？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1647706599,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":457524,"ip_address":""},"score":557237,"extra":""}]},{"author":{"id":1001861,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/49/85/3f161d95.jpg","nickname":"Alpha","note":"","ucode":"60CA15A25EC796","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":288482,"discussion_content":"老师的回复还是没看明白；位移存在主题里，那么消费者重启后是根据key去位移主题里遍历查找吗？\n","likes_number":5,"is_delete":false,"is_hidden":false,"ctime":1593758593,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1155275,"avatar":"https://static001.geekbang.org/account/avatar/00/11/a0/cb/aab3b3e7.jpg","nickname":"张三丰","note":"","ucode":"3A6215A40B3B21","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":382486,"discussion_content":"老师答非所问","likes_number":4,"is_delete":false,"is_hidden":false,"ctime":1625594163,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1799983,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/77/2f/6796cde2.jpg","nickname":"大维","note":"","ucode":"3EEEBEB92764AB","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":343308,"discussion_content":"同问，一直困惑log compaction怎么利用查询，基本就只能scan，如果没有索引或者其他辅助data的话","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1611000743,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":140665,"user_name":"王藝明","can_delete":false,"product_type":"c1","uid":1546333,"ip_address":"","ucode":"374D68B8D3FAFC","user_header":"https://static001.geekbang.org/account/avatar/00/17/98/5d/8e91b338.jpg","comment_is_top":false,"comment_ctime":1571024238,"is_pvip":false,"replies":[{"id":"54555","content":"位移主题也是主题，也要遵循Kafka底层的日志设计思路，即append-only log","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1571105013,"ip_address":"","comment_id":140665,"utype":1}],"discussion_count":3,"race_medal":0,"score":"74585468270","product_id":100029201,"comment_content":"老师好！<br>为什么位移主题写入消息时，不直接替换掉原来的数据，像 HashMap 一样呢？而是要堆积起来，另起线程来维护位移主题","like_count":18,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":470502,"discussion_content":"位移主题也是主题，也要遵循Kafka底层的日志设计思路，即append-only log","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571105013,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1043558,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/ec/66/0eab4211.jpg","nickname":"Ryan","note":"","ucode":"96D4716E5E6C66","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":34237,"discussion_content":"append-only log的目的是为了保证顺序IO，如果是HashMap的操作，会有很多随机IO","likes_number":9,"is_delete":false,"is_hidden":false,"ctime":1571186515,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1339409,"avatar":"https://static001.geekbang.org/account/avatar/00/14/70/11/42cf8f9d.jpg","nickname":"chenjia","note":"","ucode":"61983C29FF4987","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":366886,"discussion_content":"还是为了高吞吐","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1618211727,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":122934,"user_name":"🤡","can_delete":false,"product_type":"c1","uid":1232905,"ip_address":"","ucode":"57AAA08B1E97A7","user_header":"https://static001.geekbang.org/account/avatar/00/12/d0/09/7aaed1d8.jpg","comment_is_top":false,"comment_ctime":1565575208,"is_pvip":false,"replies":[{"id":"45163","content":"每个client都有自己的member id和client id用于区分彼此","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1565577583,"ip_address":"","comment_id":122934,"utype":1}],"discussion_count":3,"race_medal":0,"score":"53105182760","product_id":100029201,"comment_content":"对GroupId 还有疑惑，假设一个Group下有 3 个Consumer , 那这三个Consumer 对应的groupid 应该是一样的。这样的话怎么做key做唯一区分呢","like_count":12,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":462461,"discussion_content":"每个client都有自己的member id和client id用于区分彼此","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1565577583,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1001861,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/49/85/3f161d95.jpg","nickname":"Alpha","note":"","ucode":"60CA15A25EC796","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":288483,"discussion_content":"每个consumer消费的分区是不一样的，所以位移主题里的key不会冲突","likes_number":9,"is_delete":false,"is_hidden":false,"ctime":1593758910,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1702117,"avatar":"https://static001.geekbang.org/account/avatar/00/19/f8/e5/119d5c15.jpg","nickname":"山海","note":"","ucode":"77FA9967E58FA3","race_medal":1,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":389288,"discussion_content":"老师这里的答案指的是一个消费组内的Consumer如何相互区分，但同学想问的问题是topic中的key如何保证唯一性，这里就是每个consumer消费分区是不同的，同一个分区只能被消费组内的一个consumer消费，因此不存在冲突。 ","likes_number":4,"is_delete":false,"is_hidden":false,"ctime":1629205658,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":113778,"user_name":"谦寻","can_delete":false,"product_type":"c1","uid":1033639,"ip_address":"","ucode":"07160FAFAD08F7","user_header":"https://static001.geekbang.org/account/avatar/00/0f/c5/a7/e32dcfe7.jpg","comment_is_top":false,"comment_ctime":1563154872,"is_pvip":false,"replies":[{"id":"41412","content":"可以考虑使用standalone consumer，否则group机制无法避免","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1563156028,"ip_address":"","comment_id":113778,"utype":1}],"discussion_count":2,"race_medal":0,"score":"53102762424","product_id":100029201,"comment_content":"consumer端 日常业务发版呢，那每次发版需要重启consumer不是也会导致Rebalance，这个如何规避","like_count":12,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":458384,"discussion_content":"可以考虑使用standalone consumer，否则group机制无法避免","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1563156028,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1795511,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/65/b7/058276dc.jpg","nickname":"i_chase","note":"","ucode":"09C41C863F4EA3","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":558762,"discussion_content":"确实，每次发版都会导致rebalance。但是好像影响不大，rebalance时间不可能很长，除非consumer group里有非常多的consumer。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1648455981,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":195425,"user_name":"sharpdeep","can_delete":false,"product_type":"c1","uid":1486457,"ip_address":"","ucode":"DFA5F7D327095D","user_header":"https://static001.geekbang.org/account/avatar/00/16/ae/79/da524393.jpg","comment_is_top":false,"comment_ctime":1585187359,"is_pvip":false,"replies":[{"id":"74399","content":"位移主题的位移由Kafka内部的Coordinator自行管理","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1585270495,"ip_address":"","comment_id":195425,"utype":1}],"discussion_count":2,"race_medal":0,"score":"48829827615","product_id":100029201,"comment_content":"有个困惑: 位移主题用来记住位移，那么这个位移主题的位移由谁来记住呢?","like_count":12,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":489060,"discussion_content":"位移主题的位移由Kafka内部的Coordinator自行管理","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585270495,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1339409,"avatar":"https://static001.geekbang.org/account/avatar/00/14/70/11/42cf8f9d.jpg","nickname":"chenjia","note":"","ucode":"61983C29FF4987","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":366887,"discussion_content":"哈哈哈，递归了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1618211755,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":181389,"user_name":"HZ","can_delete":false,"product_type":"c1","uid":1371862,"ip_address":"","ucode":"883D79CEEA9C66","user_header":"https://static001.geekbang.org/account/avatar/00/14/ee/d6/0142c3a3.jpg","comment_is_top":false,"comment_ctime":1582533944,"is_pvip":false,"replies":[{"id":"70338","content":"1. 同一个group的位移记录只保存在一个partition上<br>2. 没错，写入就是acks=all的设置<br>3. min.insync.replicas对位移主题依然适用","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1582593292,"ip_address":"","comment_id":181389,"utype":1}],"discussion_count":3,"race_medal":0,"score":"40237239608","product_id":100029201,"comment_content":"老师 有两点不太清楚 1. 位移主题里面，对于同一个consumer group的位移提交记录，是分布在50个partitions中吗？ 2. 如果把位移主题当作kafka里面的一个普通主题，那么写入这个主题的数据可以保证不丢失吗？ 写入是ack=all？ 同时，broker端的min.insync.replicas的设置有影响吗？","like_count":9,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":484986,"discussion_content":"1. 同一个group的位移记录只保存在一个partition上\n2. 没错，写入就是acks=all的设置\n3. min.insync.replicas对位移主题依然适用","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582593292,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":1,"child_discussions":[{"author":{"id":1238190,"avatar":"https://static001.geekbang.org/account/avatar/00/12/e4/ae/7b310c2d.jpg","nickname":"呦呦鹿鸣","note":"","ucode":"BC80F2093CD6C3","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":566173,"discussion_content":"位移主题的 Key 中应该保存 3 部分内容：&lt;Group ID，主题名，分区号 &gt;\n按照这个的话，同一个group的位移记录不能保证只保存在一个partition上了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1650619615,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":484986,"ip_address":""},"score":566173,"extra":""}]},{"author":{"id":1054827,"avatar":"https://static001.geekbang.org/account/avatar/00/10/18/6b/a1448af1.jpg","nickname":"贝影","note":"","ucode":"19545C8DCBF8A2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":544034,"discussion_content":"好问题","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1641383462,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":168718,"user_name":"西边一抹残阳","can_delete":false,"product_type":"c1","uid":1197178,"ip_address":"","ucode":"6836AB08783DC5","user_header":"https://static001.geekbang.org/account/avatar/00/12/44/7a/d27c1ed3.jpg","comment_is_top":false,"comment_ctime":1578146177,"is_pvip":false,"replies":[{"id":"65581","content":"不是随机的。通常来说，同一个group下的所有消费者提交的位移数据保存在位移主题的同一个分区下","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1578279917,"ip_address":"","comment_id":168718,"utype":1}],"discussion_count":1,"race_medal":0,"score":"40232851841","product_id":100029201,"comment_content":"胡老师，消费者提交的位移消息，保存到位移主题分区是随机的吗？就是某一个消费者的提交第一个位移数据保存在位移主题的A分区里面，第二个位移数据保存在位移主题的B分区里面<br>还有消费者是怎样获取已消费的位移数据","like_count":9,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":480311,"discussion_content":"不是随机的。通常来说，同一个group下的所有消费者提交的位移数据保存在位移主题的同一个分区下","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578279917,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":112939,"user_name":"Coder4","can_delete":false,"product_type":"c1","uid":1048453,"ip_address":"","ucode":"71DAC6B3D112DB","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJcvQzf86HsxOkPcRpibBdCxDW0IK9wel9TmkEhicHPUHPRhzKna8wecDcJcVbNHNSrUMt4GHLxY3iaA/132","comment_is_top":false,"comment_ctime":1562851628,"is_pvip":false,"replies":[{"id":"41111","content":"topic过多其实是指分区数过多。会有两个可能的问题：1. controller无法管理这么多分区；2. 分区数过多导致broker物理随机IO增加，减少吞吐量。<br><br>第一个问题社区算是修复了吧，目前单controller能够支持20w的分区数，况且社区也在考虑做多controller方案；第二个问题目前没有太多直接的修复举措，只能说具体问题具体分析吧","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1562891893,"ip_address":"","comment_id":112939,"utype":1}],"discussion_count":4,"race_medal":0,"score":"35922589996","product_id":100029201,"comment_content":"老师好，前几年一直有个说法，说kafka不适合创建过多topic，请问现在的新版还有这个问题么？","like_count":8,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":457965,"discussion_content":"topic过多其实是指分区数过多。会有两个可能的问题：1. controller无法管理这么多分区；2. 分区数过多导致broker物理随机IO增加，减少吞吐量。\n\n第一个问题社区算是修复了吧，目前单controller能够支持20w的分区数，况且社区也在考虑做多controller方案；第二个问题目前没有太多直接的修复举措，只能说具体问题具体分析吧","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1562891893,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":1,"child_discussions":[{"author":{"id":2858605,"avatar":"","nickname":"Geek_9150ca","note":"","ucode":"0E63818EACA52F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":537965,"discussion_content":"老师，您好，您这里说创建过多的分区会降低吞吐量，那多少算是比较多呢，比如我的kafka集群是16c  32G  512m的配置，那创建40个topic  每个topic六个分区，这算多吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1639281836,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":457965,"ip_address":""},"score":537965,"extra":""}]},{"author":{"id":1144171,"avatar":"https://static001.geekbang.org/account/avatar/00/11/75/6b/fd685164.jpg","nickname":"lcf枫","note":"","ucode":"D51E8F68BD41CA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":300851,"discussion_content":"分区过多为什么会导致物理随机Io增加","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1598282272,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1474096,"avatar":"https://static001.geekbang.org/account/avatar/00/16/7e/30/bfdcb3fc.jpg","nickname":"没有银弹","note":"","ucode":"0D26E80479A7FC","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1144171,"avatar":"https://static001.geekbang.org/account/avatar/00/11/75/6b/fd685164.jpg","nickname":"lcf枫","note":"","ucode":"D51E8F68BD41CA","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":306599,"discussion_content":"每个分区其实对应一个物理日志文件，一个分区就是针对一个文件顺序写和读。想象一下非常多分区的情况","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1600326299,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":300851,"ip_address":""},"score":306599,"extra":""}]}]},{"had_liked":false,"id":111805,"user_name":"gogogo","can_delete":false,"product_type":"c1","uid":1273993,"ip_address":"","ucode":"D7B7A9AA2D4CE5","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/wonzX0yIia5NFoB0TZPdIPqVicIuSvzMtowownIkO9VwYpkPWJP2tpEcv5RXMn0ayuEGkAp2GBualL5sFQs0ibQJQ/132","comment_is_top":false,"comment_ctime":1562605968,"is_pvip":false,"replies":[{"id":"40683","content":"最新的","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1562635022,"ip_address":"","comment_id":111805,"utype":1}],"discussion_count":3,"race_medal":0,"score":"35922344336","product_id":100029201,"comment_content":"请问offset是以最新的为准，还是值最大的为准？","like_count":8,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":457452,"discussion_content":"最新的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1562635022,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1797809,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLpuXh4ibibw0eI0r2TEI0FM07QnKjVK8fLiaorX17ia5lpeoBJr383dMeLh7m8CFrfOPYJazDIdbVYdA/132","nickname":"Geek_3094fd","note":"","ucode":"96D4049C54A23D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":351498,"discussion_content":"最新的就肯定是最大的吧","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1614306138,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1024159,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a0/9f/71345740.jpg","nickname":"黑崽","note":"","ucode":"F31A4102EE4DA8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":1421,"discussion_content":"最新，毕竟有重置场景","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1562631463,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":112754,"user_name":"永光","can_delete":false,"product_type":"c1","uid":1102702,"ip_address":"","ucode":"0C54531ABED1B0","user_header":"https://static001.geekbang.org/account/avatar/00/10/d3/6e/281b85aa.jpg","comment_is_top":false,"comment_ctime":1562816269,"is_pvip":false,"replies":[{"id":"41121","content":"ZooKeeper本身只是一个分布式协调框架，znode中保存的数据多是那些不怎么频繁修改的元数据，本身不适合频繁更新。<br><br>是的，旧版本consumer就是这么使用ZooKeeper来保存位移的","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1562892713,"ip_address":"","comment_id":112754,"utype":1}],"discussion_count":4,"race_medal":0,"score":"31627587341","product_id":100029201,"comment_content":"位移主题，适用于高频写的操作，为什么ZooKeeper不适用于这种高频的写操作？zookeeper 也可以按照&lt;Group ID，主题名，分区号 &gt; 来写入呀？","like_count":8,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":457895,"discussion_content":"ZooKeeper本身只是一个分布式协调框架，znode中保存的数据多是那些不怎么频繁修改的元数据，本身不适合频繁更新。\n\n是的，旧版本consumer就是这么使用ZooKeeper来保存位移的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1562892713,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1000347,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/43/9b/50927dfc.jpg","nickname":"小飞","note":"","ucode":"4C126548FBA94C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":45442,"discussion_content":"zookeeper每次写数据其实都需要经过leader follower 的协商，同步。快不起来。集群再大，也只能有一个leader.   这个也限制了快不起来。\nssd集群应该可能好点，也就几万tps","likes_number":6,"is_delete":false,"is_hidden":false,"ctime":1573039377,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1044546,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/f0/42/7728d4f5.jpg","nickname":"艿艿","note":"","ucode":"8F727AB7A7F6B2","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":318342,"discussion_content":"zk写的是算是强一致性，因为flower和leader要同步，慢是必然的","likes_number":4,"is_delete":false,"is_hidden":false,"ctime":1603712733,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1361159,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eqJobg767PUeqrqQQ4B6YvMatj2SRyOicKZZ4gWTf30dMketiaj58Gc3RFTmckGxAXlL9ERSxGovq9g/132","nickname":"涛哥哥","note":"","ucode":"329A1384E3AB5E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1044546,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/f0/42/7728d4f5.jpg","nickname":"艿艿","note":"","ucode":"8F727AB7A7F6B2","race_medal":0,"user_type":1,"is_pvip":true},"discussion":{"id":565704,"discussion_content":"是最终一致性，不是强一致性。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1650524727,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":318342,"ip_address":""},"score":565704,"extra":""}]}]},{"had_liked":false,"id":230615,"user_name":"张申傲","can_delete":false,"product_type":"c1","uid":1182372,"ip_address":"","ucode":"22D46BC529BA8A","user_header":"https://static001.geekbang.org/account/avatar/00/12/0a/a4/828a431f.jpg","comment_is_top":false,"comment_ctime":1593431817,"is_pvip":true,"discussion_count":0,"race_medal":1,"score":"27363235593","product_id":100029201,"comment_content":"说到Kafka的Compaction，就想到了Redis的AOF Rewrite，都是类似的机制","like_count":7},{"had_liked":false,"id":135480,"user_name":"LJK","can_delete":false,"product_type":"c1","uid":1199213,"ip_address":"","ucode":"12B2441099FF1D","user_header":"https://static001.geekbang.org/account/avatar/00/12/4c/6d/c20f2d5a.jpg","comment_is_top":false,"comment_ctime":1569195305,"is_pvip":false,"replies":[{"id":"51967","content":"每个Kafka集群都只有一个位移主题。Kafka没有NameNode的概念。如果硬搬Hadoop中的概念，我倒倾向于认为分区的leader副本是datanode，而namenode的作用在Kafka中由ZooKeeper承接","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1569203586,"ip_address":"","comment_id":135480,"utype":1}],"discussion_count":1,"race_medal":0,"score":"23044031785","product_id":100029201,"comment_content":"老师好，请教一个小白问题，一个位移主题是在第一个consumer启动时建立的，是说对于一个kafka集群只有一个位移主题么？另外我对kafka框架还是有点迷惑，kafka集群是不是没有NameNode这个概念啊？每一个leader partition就相当于一个NameNode？谢谢老师","like_count":5,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":468209,"discussion_content":"每个Kafka集群都只有一个位移主题。Kafka没有NameNode的概念。如果硬搬Hadoop中的概念，我倒倾向于认为分区的leader副本是datanode，而namenode的作用在Kafka中由ZooKeeper承接","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1569203586,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":119312,"user_name":"小鱼","can_delete":false,"product_type":"c1","uid":1588606,"ip_address":"","ucode":"BDAEE77E973C0D","user_header":"","comment_is_top":false,"comment_ctime":1564559650,"is_pvip":false,"replies":[{"id":"43866","content":"offsets.retention.minutes<br>","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1564627732,"ip_address":"","comment_id":119312,"utype":1}],"discussion_count":1,"race_medal":0,"score":"23039396130","product_id":100029201,"comment_content":"老师，你好，请问控制Kafka 使用Compact 策略来删除位移主题中的过期消息的参数是哪个？<br><br>","like_count":5,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":460842,"discussion_content":"offsets.retention.minutes\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1564627732,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":112379,"user_name":"南辕北辙","can_delete":false,"product_type":"c1","uid":1214502,"ip_address":"","ucode":"03EC406AE0D591","user_header":"https://static001.geekbang.org/account/avatar/00/12/88/26/b8c53cee.jpg","comment_is_top":false,"comment_ctime":1562725225,"is_pvip":false,"replies":[{"id":"40875","content":"首先找到对应的Coordinator，Coordinator保存了这些数据，然后consumer向Coordinator发送请求去请求这些数据","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1562729907,"ip_address":"","comment_id":112379,"utype":1}],"discussion_count":3,"race_medal":0,"score":"23037561705","product_id":100029201,"comment_content":"老师，请教一下consumer 是如何从这个位移主题中拿到曾经属于自己组的offset呢","like_count":5,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":457707,"discussion_content":"首先找到对应的Coordinator，Coordinator保存了这些数据，然后consumer向Coordinator发送请求去请求这些数据","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1562729907,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1054827,"avatar":"https://static001.geekbang.org/account/avatar/00/10/18/6b/a1448af1.jpg","nickname":"贝影","note":"","ucode":"19545C8DCBF8A2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":544035,"discussion_content":"明白了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1641383501,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1702117,"avatar":"https://static001.geekbang.org/account/avatar/00/19/f8/e5/119d5c15.jpg","nickname":"山海","note":"","ucode":"77FA9967E58FA3","race_medal":1,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":389290,"discussion_content":"本质是不是Coordinator内部有一个OffsetMap来缓存这个数据。 ","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1629205755,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":112128,"user_name":"WL","can_delete":false,"product_type":"c1","uid":1173771,"ip_address":"","ucode":"6277DCD776B87E","user_header":"https://static001.geekbang.org/account/avatar/00/11/e9/0b/1171ac71.jpg","comment_is_top":false,"comment_ctime":1562672360,"is_pvip":false,"replies":[{"id":"40837","content":"1.  你是指提交位移吗？如果是，它是向对应的Coordinator所在的broker发送一条位移写请求<br>2. 都有保存<br>3.  你基本上可以认为是轮训的","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1562721413,"ip_address":"","comment_id":112128,"utype":1}],"discussion_count":2,"race_medal":0,"score":"23037508840","product_id":100029201,"comment_content":"请教老师三个问题：<br>1. 在consumer group中的一个consumer消费一条消息后，是往它拉取消息的那个broker写一条offset消息还是往所有它连接的broker都广播一条消息。<br>2. 一个broker中的位移主题保存的是他自己上面的主题和分区的位移还是整个集群的所有主题所有分区的位移都有保存。<br>3. 位移主题的50个分区分配在各个broker的方式是啥，轮询，hash，还是随机？","like_count":5,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":457590,"discussion_content":"1.  你是指提交位移吗？如果是，它是向对应的Coordinator所在的broker发送一条位移写请求\n2. 都有保存\n3.  你基本上可以认为是轮训的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1562721413,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1009260,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/66/6c/4a68a916.jpg","nickname":"双叶","note":"","ucode":"6DA1D477F9D580","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":1527,"discussion_content":"我感觉既然 __consumer_offsets 是普通的 topic，那就按照普通 topic 的写法来，这三个问题应该就都能解答了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1562676147,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":112008,"user_name":"燃烧的M豆","can_delete":false,"product_type":"c1","uid":1355000,"ip_address":"","ucode":"BEDA9FC8852F5D","user_header":"https://static001.geekbang.org/account/avatar/00/14/ac/f8/a56b7475.jpg","comment_is_top":false,"comment_ctime":1562652921,"is_pvip":false,"replies":[{"id":"40841","content":"partition数量在kafka中没有上限，只受os限制。除了提升partition，增加broker挂载的磁盘数也是一个方法","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1562721818,"ip_address":"","comment_id":112008,"utype":1}],"discussion_count":1,"race_medal":0,"score":"23037489401","product_id":100029201,"comment_content":"老师如果超大规模集群超大规模消费者对这一个 50 个 partitions 的 topic 进行消费是不是会引起性能问题？topic 下的 partitions 设置有上线吗 面对超大规模并发除了提升 partitions 数量还有什么办法？谢谢","like_count":5,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":457539,"discussion_content":"partition数量在kafka中没有上限，只受os限制。除了提升partition，增加broker挂载的磁盘数也是一个方法","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1562721818,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":156529,"user_name":"张天屹","can_delete":false,"product_type":"c1","uid":1477612,"ip_address":"","ucode":"8BD6BD6DCF0F4F","user_header":"https://static001.geekbang.org/account/avatar/00/16/8b/ec/dc03f5ad.jpg","comment_is_top":false,"comment_ctime":1574906479,"is_pvip":false,"replies":[{"id":"60182","content":"现在自动提交位移的设计就是不管你有没有消费，就是阶段性地提交位移，即使是提交相同的位移","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1574988395,"ip_address":"","comment_id":156529,"utype":1}],"discussion_count":4,"race_medal":0,"score":"18754775663","product_id":100029201,"comment_content":"对于自动提交位移这里有两点疑惑，第一个老师说“能够避免消息丢失”，那如果自动提交之后，业务处理失败呢，不久丢失消息了吗？第二个老师说“最新消息为100，没有继续生产，这个时候消费者会不断自动提交最新位移100”，既然没有消费了，为什么还要提交呢？消费了100就提交100，之后没有消费就意味着位移没变，为啥还要提交呢？这两个问题的根源都在于不是很清楚自动位移提交的触发条件，是消费就触发吗？还是没有发生异常就触发？还是定时触发？","like_count":4,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":476141,"discussion_content":"现在自动提交位移的设计就是不管你有没有消费，就是阶段性地提交位移，即使是提交相同的位移","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574988395,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1891504,"avatar":"https://static001.geekbang.org/account/avatar/00/1c/dc/b0/5b652423.jpg","nickname":"Yang","note":"","ucode":"6CC4DCAFFD7C03","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":403718,"discussion_content":"那为啥要阶段性提交位移这样的设计","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1634135463,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1197459,"avatar":"https://static001.geekbang.org/account/avatar/00/12/45/93/6ad60b12.jpg","nickname":"渊虹","note":"","ucode":"A041AD241B8E3F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":246899,"discussion_content":"是类似定时提交吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1587784726,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1702117,"avatar":"https://static001.geekbang.org/account/avatar/00/19/f8/e5/119d5c15.jpg","nickname":"山海","note":"","ucode":"77FA9967E58FA3","race_medal":1,"user_type":1,"is_pvip":false},"reply_author":{"id":1197459,"avatar":"https://static001.geekbang.org/account/avatar/00/12/45/93/6ad60b12.jpg","nickname":"渊虹","note":"","ucode":"A041AD241B8E3F","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":389291,"discussion_content":"是的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1629205944,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":246899,"ip_address":""},"score":389291,"extra":""}]}]},{"had_liked":false,"id":118878,"user_name":"宋晓明","can_delete":false,"product_type":"c1","uid":1146507,"ip_address":"","ucode":"DC866DCE2FBA9E","user_header":"https://static001.geekbang.org/account/avatar/00/11/7e/8b/3cc461b3.jpg","comment_is_top":false,"comment_ctime":1564456727,"is_pvip":false,"replies":[{"id":"43615","content":"如果是多个分区，即使是但consumer线程，也没法保证全局的顺序性。这是无法规避的","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1564480123,"ip_address":"","comment_id":118878,"utype":1}],"discussion_count":2,"race_medal":0,"score":"18744325911","product_id":100029201,"comment_content":"老师 消息从producer到broker里的partition其实都是有序的，这是kafka的机制保证的，那么假如我的consumer是单线程的，也能保证消费是有序的，但是吞吐量就下降了。如果consumer是多线程，如果保证有序性？","like_count":4,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":460632,"discussion_content":"如果是多个分区，即使是但consumer线程，也没法保证全局的顺序性。这是无法规避的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1564480123,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1702117,"avatar":"https://static001.geekbang.org/account/avatar/00/19/f8/e5/119d5c15.jpg","nickname":"山海","note":"","ucode":"77FA9967E58FA3","race_medal":1,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":389292,"discussion_content":"如果是多线程，保证每个分区一个消费者线程应该是能保证单个分区消息的顺序性的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1629206044,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":116883,"user_name":"耿斌","can_delete":false,"product_type":"c1","uid":1237588,"ip_address":"","ucode":"6535D0B012D78E","user_header":"https://static001.geekbang.org/account/avatar/00/12/e2/54/f836054a.jpg","comment_is_top":false,"comment_ctime":1563934107,"is_pvip":false,"discussion_count":5,"race_medal":0,"score":"18743803291","product_id":100029201,"comment_content":"与 ZooKeeper 方案相比，它可能的劣势；<br>想到的是，当集群中有一台 Broker 故障下线，可能会造成 __consumer_offset 丢失，导致重复消费","like_count":4,"discussions":[{"author":{"id":1174199,"avatar":"https://static001.geekbang.org/account/avatar/00/11/ea/b7/1a18a39d.jpg","nickname":"5-刘新波(Arvin)","note":"","ucode":"DBD135D2587A93","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":237807,"discussion_content":"follow副本的位移主题数据能保持最新，而且是完整吗？估计还是会有部分位移主题的消息来不及保存。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1587187900,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1000054,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/42/76/256bbd43.jpg","nickname":"松花皮蛋me","note":"","ucode":"B0846CEEF6B0D1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":116463,"discussion_content":"副本又不提供读服务","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578062402,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1566569,"avatar":"https://static001.geekbang.org/account/avatar/00/17/e7/69/0c426b52.jpg","nickname":"刘易宁","note":"","ucode":"EE337683D08B9A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1000054,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/42/76/256bbd43.jpg","nickname":"松花皮蛋me","note":"","ucode":"B0846CEEF6B0D1","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":197274,"discussion_content":"leader会重新选举的","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1583415795,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":116463,"ip_address":""},"score":197274,"extra":""}]},{"author":{"id":1000347,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/43/9b/50927dfc.jpg","nickname":"小飞","note":"","ucode":"4C126548FBA94C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":45440,"discussion_content":"有副本的。没有关系","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573039224,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1197447,"avatar":"https://static001.geekbang.org/account/avatar/00/12/45/87/b32dc1ea.jpg","nickname":"😈😈😈😈😈","note":"","ucode":"A563EC007FEB7D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":34432,"discussion_content":"这个可能得看你的Broker的配置了，这个内部的主题也是有follow副本的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571198189,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":112725,"user_name":"MoonGod","can_delete":false,"product_type":"c1","uid":1254337,"ip_address":"","ucode":"CB39976963F37A","user_header":"https://static001.geekbang.org/account/avatar/00/13/23/c1/54ef6885.jpg","comment_is_top":false,"comment_ctime":1562810221,"is_pvip":false,"replies":[{"id":"41128","content":"不会。位移主题的failover和高可用管理和普通Kafka topic是一样的。也会执行leader选举。","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1562892934,"ip_address":"","comment_id":112725,"utype":1}],"discussion_count":1,"race_medal":0,"score":"18742679405","product_id":100029201,"comment_content":"请教老师一个问题：<br>在consumer提交位移的时候，通过Coordinator 往所在的broker写消息，那如果当前的broker挂掉了，写入位移主题的消息会丢失吗？还是说位移主题在写入的时候也会把消息同步到其他broker中的副本中，从而保证写入消息不丢失呢","like_count":4,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":457879,"discussion_content":"不会。位移主题的failover和高可用管理和普通Kafka topic是一样的。也会执行leader选举。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1562892934,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":111903,"user_name":"never leave","can_delete":false,"product_type":"c1","uid":1241638,"ip_address":"","ucode":"62888A1446A1E8","user_header":"https://static001.geekbang.org/account/avatar/00/12/f2/26/8d42ea6f.jpg","comment_is_top":false,"comment_ctime":1562635677,"is_pvip":false,"replies":[{"id":"40701","content":"compact topic必须要求有key<br>","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1562638970,"ip_address":"","comment_id":111903,"utype":1}],"discussion_count":1,"race_medal":0,"score":"18742504861","product_id":100029201,"comment_content":"如果kafka消息没有key的话，怎么Compact？比较value吗？","like_count":4,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":457491,"discussion_content":"compact topic必须要求有key\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1562638970,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":258181,"user_name":"@%初%@","can_delete":false,"product_type":"c1","uid":1053509,"ip_address":"","ucode":"2B8A6134675ED7","user_header":"https://static001.geekbang.org/account/avatar/00/10/13/45/16c60da2.jpg","comment_is_top":false,"comment_ctime":1604320536,"is_pvip":true,"replies":[{"id":"94410","content":"有一定道理：）","user_name":"作者回复","user_name_real":"胡夕","uid":"1288090","ctime":1604887111,"ip_address":"","comment_id":258181,"utype":1}],"discussion_count":1,"race_medal":0,"score":"14489222424","product_id":100029201,"comment_content":"相比zk不适合频繁写入我认为最大的问题，在于一个zk集群中，只有master的节点提供写入的操作，这样写入相当于是单机的tps，而kafka的写入引入分区的概念解决zk单机写入的问题，只有主分区可以写入，kafka集群的主分区可以分布在各个机器上，从而达到避免了单机写入的瓶颈，而zk如果想要解决此问题，可以多搭建几个zk集群，通过上层的proxy机制，将不同的数据写入不同的集群，来提高tps，但是，zk的初衷就是一个分布式协调工具","like_count":3,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":508572,"discussion_content":"有一定道理：）","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1604887111,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":214647,"user_name":"胡小禾","can_delete":false,"product_type":"c1","uid":1132315,"ip_address":"","ucode":"1C23B7492C0C9E","user_header":"https://static001.geekbang.org/account/avatar/00/11/47/1b/64262861.jpg","comment_is_top":false,"comment_ctime":1588776593,"is_pvip":false,"replies":[{"id":"79563","content":"一旦consumer group处于dead状态超过了offsets.retention.minutes，Kafka就会删除它的数据","user_name":"作者回复","user_name_real":"胡夕","uid":"1288090","ctime":1588845975,"ip_address":"","comment_id":214647,"utype":1}],"discussion_count":2,"race_medal":0,"score":"14473678481","product_id":100029201,"comment_content":"那么，何时会写入这类消息呢？一旦某个 Consumer Group 下的所有 Consumer 实例都停止了，而且它们的位移数据都已被删除时，Kafka 会向位移主题的对应分区写入 tombstone 消息，表明要彻底删除这个 Group 的信息。<br><br>问题来了：何时kafka会把 Consumer 的位移数据都给删除了？","like_count":3,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":494152,"discussion_content":"一旦consumer group处于dead状态超过了offsets.retention.minutes，Kafka就会删除它的数据","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1588845975,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1054827,"avatar":"https://static001.geekbang.org/account/avatar/00/10/18/6b/a1448af1.jpg","nickname":"贝影","note":"","ucode":"19545C8DCBF8A2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":544153,"discussion_content":"原来如此","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1641430547,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":170705,"user_name":"Ball","can_delete":false,"product_type":"c1","uid":1521451,"ip_address":"","ucode":"1EE949E68D84CA","user_header":"https://static001.geekbang.org/account/avatar/00/17/37/2b/b32f1d66.jpg","comment_is_top":false,"comment_ctime":1578669850,"is_pvip":false,"replies":[{"id":"66340","content":"1. 同一个线程<br>2. 是的，但通常还会与Coordinator建立TCP连接，另外获取元数据请求时也可能建立新的TCP连接。总之，当正常消费时，与broker创建一个TCP连接即可消费","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1578877078,"ip_address":"","comment_id":170705,"utype":1}],"discussion_count":1,"race_medal":0,"score":"14463571738","product_id":100029201,"comment_content":"老师我有问题想请教下，如果我有一个 Consumer 实例且开启了自动提交 offset，Consumer 正在消费一个业务分区的消息，那么：<br>1、提交给 offset 分区操作肯定是发生在消费业务消息之后发生的，那这个操作是在同一个线程内完成的，还是说后台有个线程在异步写 offset。<br>2、基于上面那个场景，是不是 Consumer 最少只要和 Broker 建立一个 TCP 连接即可正常消费了？","like_count":3,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":481074,"discussion_content":"1. 同一个线程\n2. 是的，但通常还会与Coordinator建立TCP连接，另外获取元数据请求时也可能建立新的TCP连接。总之，当正常消费时，与broker创建一个TCP连接即可消费","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578877078,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":161498,"user_name":"高志强","can_delete":false,"product_type":"c1","uid":1276563,"ip_address":"","ucode":"68737002043752","user_header":"https://static001.geekbang.org/account/avatar/00/13/7a/93/c9302518.jpg","comment_is_top":false,"comment_ctime":1576218311,"is_pvip":false,"replies":[{"id":"61585","content":"手动调用commitSync或commitAsync方法","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1576302318,"ip_address":"","comment_id":161498,"utype":1}],"discussion_count":1,"race_medal":0,"score":"14461120199","product_id":100029201,"comment_content":"enable.auto.commit 这个参数默认值是 true 吗，我看公司使用时并没有特意指定这个参数。如果不是true，怎样手动提交位移呢","like_count":3,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":477737,"discussion_content":"手动调用commitSync或commitAsync方法","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1576302318,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":145757,"user_name":"柯察金","can_delete":false,"product_type":"c1","uid":1115149,"ip_address":"","ucode":"F722BF8FCD2C47","user_header":"https://static001.geekbang.org/account/avatar/00/11/04/0d/3dc5683a.jpg","comment_is_top":false,"comment_ctime":1572361127,"is_pvip":false,"replies":[{"id":"56289","content":"对的，要消费的位移是通过从位移主题获取的","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1572396210,"ip_address":"","comment_id":145757,"utype":1}],"discussion_count":1,"race_medal":0,"score":"14457263015","product_id":100029201,"comment_content":"那么消费者怎么获取到自己要消费的那个分区的位移呢？是通过消费位移主题的数据吗？","like_count":3,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":472566,"discussion_content":"对的，要消费的位移是通过从位移主题获取的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1572396210,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":126665,"user_name":"阿猫阿狗","can_delete":false,"product_type":"c1","uid":1072330,"ip_address":"","ucode":"137A8C3CD1BD37","user_header":"https://static001.geekbang.org/account/avatar/00/10/5c/ca/96d192f9.jpg","comment_is_top":false,"comment_ctime":1566443939,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"14451345827","product_id":100029201,"comment_content":"与Zookeeper相比的劣势是：如果broker集群出现问题崩溃，可能消费的唯一信息也会丢失，再重启后不能接着之前的位移继续读取。但是如果存在外部的Zookeeper中，就不会有这个问题。","like_count":3},{"had_liked":false,"id":112730,"user_name":"快跑","can_delete":false,"product_type":"c1","uid":1564645,"ip_address":"","ucode":"90ED7E6D40C58E","user_header":"https://static001.geekbang.org/account/avatar/00/17/df/e5/65e37812.jpg","comment_is_top":false,"comment_ctime":1562811171,"is_pvip":false,"replies":[{"id":"41126","content":"Spark Streaming集成Kafka的位移管理有三种：1. 寿司用checkpoint，也就是保存在Spark内部；2. 保存在Kafka内部主题；3. 保存在外部存储中。你可以选择合适的方式。","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1562892886,"ip_address":"","comment_id":112730,"utype":1}],"discussion_count":1,"race_medal":0,"score":"14447713059","product_id":100029201,"comment_content":"老师，你好<br>Kafka有位移主题，是不是Consumer都是从整个位移主题获取数据应该从哪个offset开始读数据，如果Spark Streaming作为一个Consumer，其offset的控制也是在这个位移主题当中？ 这样的话Spark Streaming用Direct方式读取Kafka其实是不需要额外找其他存储作为位移的保存？","like_count":3,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":457882,"discussion_content":"Spark Streaming集成Kafka的位移管理有三种：1. 寿司用checkpoint，也就是保存在Spark内部；2. 保存在Kafka内部主题；3. 保存在外部存储中。你可以选择合适的方式。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1562892886,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":112209,"user_name":"dream","can_delete":false,"product_type":"c1","uid":1117793,"ip_address":"","ucode":"65B33D32FA8BE9","user_header":"https://static001.geekbang.org/account/avatar/00/11/0e/61/ae68f8eb.jpg","comment_is_top":false,"comment_ctime":1562684301,"is_pvip":false,"replies":[{"id":"40829","content":"没有相关配置。我的“定期”的意思是有个专门的线程不断地去做这件事。。。。","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1562720834,"ip_address":"","comment_id":112209,"utype":1}],"discussion_count":1,"race_medal":0,"score":"14447586189","product_id":100029201,"comment_content":"老师，你最后说“Kafka 提供了专门的后台线程定期地巡检待 Compact 的主题”，那么这个定期是好久呢？这个间隔时间我们可以自己配置吗？","like_count":3,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":457620,"discussion_content":"没有相关配置。我的“定期”的意思是有个专门的线程不断地去做这件事。。。。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1562720834,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":227661,"user_name":"J.Smile","can_delete":false,"product_type":"c1","uid":1336475,"ip_address":"","ucode":"C4D98DFDBF7584","user_header":"https://static001.geekbang.org/account/avatar/00/14/64/9b/0b578b08.jpg","comment_is_top":false,"comment_ctime":1592450260,"is_pvip":false,"replies":[{"id":"83935","content":"单线程中依次执行消息获取、处理和提交位移就没有问题。多线程中消息获取与处理和提交位移拆开来了，就可能出现这些问题。它们不矛盾","user_name":"作者回复","user_name_real":"胡夕","uid":"1288090","ctime":1592472811,"ip_address":"","comment_id":227661,"utype":1}],"discussion_count":2,"race_medal":0,"score":"10182384852","product_id":100029201,"comment_content":"---自动提交位移<br>当Consumer端参数enable.auto.commit=true：<br>Consumer 在后台默默地为你定期auto.commit.interval.ms来提交位移<br>---自动提交位移导致的撑满磁盘场景：<br>假设 Consumer 当前消费到了某个主题的最新一条消息，位移是 100，之后该主题没有任何新消息产生，故 Consumer 无消息可消费了，所以位移永远保持在 100。<br>由于是自动提交位移，位移主题中会不停地写入位移 =100 的消息。<br>显然 Kafka 只需要保留这类消息中的最新一条就可以了，之前的消息都是可以删除的。这就要求 Kafka 必须要有针对位移主题消息特点的消息删除策略，否则这种消息会越来越多，最终撑爆整个磁盘。<br><br>---解决办法：显然只需要最新的一次位移数据就可以了，那么删除掉过期的位移数据。Kafka 使用 Compact 策略来删除位移主题中的过期消息，避免该主题无限期膨胀。Kafka 提供了专门的后台线程定期地巡检待 Compact 的主题，看看是否存在满足条件的可删除数据。这个后台线程叫 Log Cleaner。<br>以上为总结。<br>-------一个矛盾问题------------<br>关于自动提交位移，在之前的课程中看到老师说Consumer如果采用这种方式在多线程消费消息时会造成消息丢失的，因为某个线程可能并未消费成功消息而却更新了位移！可这一节老师怎么说“自动提交位移有一个显著的优点，就是省事，你不用操心位移提交的事情，就能保证消息消费不会丢失。”呢？这不是矛盾吗","like_count":2,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":498738,"discussion_content":"单线程中依次执行消息获取、处理和提交位移就没有问题。多线程中消息获取与处理和提交位移拆开来了，就可能出现这些问题。它们不矛盾","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1592472811,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1336475,"avatar":"https://static001.geekbang.org/account/avatar/00/14/64/9b/0b578b08.jpg","nickname":"J.Smile","note":"","ucode":"C4D98DFDBF7584","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":284207,"discussion_content":"OK","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1592472996,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":210516,"user_name":"施亚东","can_delete":false,"product_type":"c1","uid":1973307,"ip_address":"","ucode":"B0DF8FBED142E2","user_header":"https://static001.geekbang.org/account/avatar/00/1e/1c/3b/210f843f.jpg","comment_is_top":false,"comment_ctime":1587782833,"is_pvip":false,"replies":[{"id":"78466","content":"有延迟的。那是个定时任务，默认10分钟做一次。","user_name":"作者回复","user_name_real":"胡夕","uid":"1288090","ctime":1587867901,"ip_address":"","comment_id":210516,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10177717425","product_id":100029201,"comment_content":"从group 的所有consumer实例都停止，到发送tombstone消息到位移主题，这两者之间是不是需要一个延迟？默认的是多少呢？<br>如果没有延迟，当这个group的消费者实例做版本更新的时候，没有采用滚动升级的方式，一次性停止全部consumer实例，升级完重启的时候不久出现问题了吗（位移主题已经删除这个group下的位移信息）？<br>","like_count":2,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":493041,"discussion_content":"有延迟的。那是个定时任务，默认10分钟做一次。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1587867901,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":165093,"user_name":"double","can_delete":false,"product_type":"c1","uid":1104928,"ip_address":"","ucode":"9C679F85CB6610","user_header":"https://static001.geekbang.org/account/avatar/00/10/dc/20/64394be8.jpg","comment_is_top":false,"comment_ctime":1577159323,"is_pvip":false,"replies":[{"id":"63034","content":"有可能有很多原因。能否说的在具体点：）","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1577235534,"ip_address":"","comment_id":165093,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10167093915","product_id":100029201,"comment_content":"老师，Consumer Offset有些分区为-1，消费不了数据是什么情况","like_count":2,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":479022,"discussion_content":"有可能有很多原因。能否说的在具体点：）","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577235534,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":143021,"user_name":"寂静欢喜","can_delete":false,"product_type":"c1","uid":1191287,"ip_address":"","ucode":"6728A2BA364729","user_header":"https://static001.geekbang.org/account/avatar/00/12/2d/77/e5d4221b.jpg","comment_is_top":false,"comment_ctime":1571620829,"is_pvip":false,"replies":[{"id":"55272","content":"Kafka自己管理的，其实和普通主题原理是类似的","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1571627110,"ip_address":"","comment_id":143021,"utype":1}],"discussion_count":3,"race_medal":0,"score":"10161555421","product_id":100029201,"comment_content":"想问老师，consumer offset 本身就是个主题。它是怎么实现自己offset 管理的","like_count":2,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":471353,"discussion_content":"Kafka自己管理的，其实和普通主题原理是类似的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571627110,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1547667,"avatar":"https://static001.geekbang.org/account/avatar/00/17/9d/93/4159edaa.jpg","nickname":"朴素柠檬c","note":"","ucode":"2D4CBB70D801B1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":329331,"discussion_content":"kafka的位移主题 感觉不需要管理自己的offset 没什么意义\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1606369019,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1182802,"avatar":"https://static001.geekbang.org/account/avatar/00/12/0c/52/f25c3636.jpg","nickname":"长脖子树","note":"","ucode":"D9090EF67EEB1B","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":287637,"discussion_content":"鸡生蛋...蛋生鸡....","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1593500781,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":134624,"user_name":"小可","can_delete":false,"product_type":"c1","uid":1006735,"ip_address":"","ucode":"8834AF621FA67D","user_header":"https://static001.geekbang.org/account/avatar/00/0f/5c/8f/551b5624.jpg","comment_is_top":false,"comment_ctime":1568881249,"is_pvip":false,"replies":[{"id":"51718","content":"可以手动创建位移主题","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1568940097,"ip_address":"","comment_id":134624,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10158815841","product_id":100029201,"comment_content":"老师，单机版kafka首次启动的时候，第一个消费者连接kafka，但是由于一些原因比如其他程序当时在占用IO写磁盘，导致无法创建位移主题，重启消费者也不会再创建位移主题，重启kafka才可以。我看了kafka源码，在KafkaApis的getOrCreateInternalTopic方法中，它先从缓存metadataCache读取位移主题的，客户端第一次连接kafka时缓存中已经创建了的位移主题，但没有落盘；客户端重启再次连接时读到了缓存，也不会触发创建的位移主题的动作，也就无法落盘。不知道我的理解是否正确？像这种情况除了重启kafka还有没有其他处理办法？","like_count":2,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":467834,"discussion_content":"可以手动创建位移主题","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1568940097,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":112974,"user_name":"酱排骨","can_delete":false,"product_type":"c1","uid":1348539,"ip_address":"","ucode":"FEB012688EAB9C","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eqwFYNicGUHlnpUXg3lBrjuWo2SLjUoH8SeE30QibzZprxjw8SZBMY5D70q5uFJshakb0WzRaKMknQA/132","comment_is_top":false,"comment_ctime":1562858311,"is_pvip":false,"replies":[{"id":"41109","content":"消费者重启回来后会从最新一次提交的位移处继续消费","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1562891545,"ip_address":"","comment_id":112974,"utype":1}],"discussion_count":2,"race_medal":0,"score":"10152792903","product_id":100029201,"comment_content":"老师，我想问一下工作中的一个问题单个消费实例，单个partion，消费者消费失败，offset可以重新回到前面位置重新消费吗？","like_count":2,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":457989,"discussion_content":"消费者重启回来后会从最新一次提交的位移处继续消费","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1562891545,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1395849,"avatar":"","nickname":"forcht","note":"","ucode":"4CECBEB8251364","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":321556,"discussion_content":"那如果是新加入的消费者呢（新的消费组）？默认是之前的数据都消费过？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1604589657,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":112724,"user_name":"MoonGod","can_delete":false,"product_type":"c1","uid":1254337,"ip_address":"","ucode":"CB39976963F37A","user_header":"https://static001.geekbang.org/account/avatar/00/13/23/c1/54ef6885.jpg","comment_is_top":false,"comment_ctime":1562810097,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10152744689","product_id":100029201,"comment_content":"请教老师一个问题：<br>在consumer提交位移的时候，通过Coordinator 往所在的broker写消息，那如果写入的broker挂掉了，写入位移主题的消息会丢失吗？还是说位移主题在写入的时候也会把消息同步到其他broker中的副本中，从而保证写入消息不丢失呢","like_count":2},{"had_liked":false,"id":112622,"user_name":"ban","can_delete":false,"product_type":"c1","uid":1034204,"ip_address":"","ucode":"E523CE97E48266","user_header":"https://static001.geekbang.org/account/avatar/00/0f/c7/dc/9408c8c2.jpg","comment_is_top":false,"comment_ctime":1562773563,"is_pvip":false,"replies":[{"id":"40974","content":"如果使用使用老版本consumer，还是会记录在ZooKeeper中的","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1562803926,"ip_address":"","comment_id":112622,"utype":1}],"discussion_count":3,"race_medal":0,"score":"10152708155","product_id":100029201,"comment_content":"老师，你说偏移量都保存到了__consumer_offsets，确实看到生成了，但是为什么我在zk还是能看到偏移量信息，记录在<br>consumers&#47;{group}&#47;offsets&#47;{topic}&#47;{partition}。<br>这两个有什么区别吗，还是说zk会记录还是因为我们的程序手动改成提交到zk里面了。","like_count":2,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":457823,"discussion_content":"如果使用使用老版本consumer，还是会记录在ZooKeeper中的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1562803926,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1104287,"avatar":"https://static001.geekbang.org/account/avatar/00/10/d9/9f/7b2f2a97.jpg","nickname":"师爷","note":"","ucode":"20E6831DABF755","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":214764,"discussion_content":"我也在纠结这个问题，新版本的消费者既可以指定zk地址，也可以指定broker地址","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585232370,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1282575,"avatar":"https://static001.geekbang.org/account/avatar/00/13/92/0f/cff30522.jpg","nickname":"江湖夜雨","note":"","ucode":"C64913C7000899","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":67609,"discussion_content":"是哪个版本才使用kafka自己管理offset的？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1575160753,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":112555,"user_name":"玉剑冰锋","can_delete":false,"product_type":"c1","uid":1214202,"ip_address":"","ucode":"8EA56A71BA5B22","user_header":"https://static001.geekbang.org/account/avatar/00/12/86/fa/4bcd7365.jpg","comment_is_top":false,"comment_ctime":1562756871,"is_pvip":false,"replies":[{"id":"40979","content":"1. 没什么区别。你可以简单认为就是换个地方保存：）<br>2. 这个其实是个bug，不过现在已经修复了。如果reassign  hang住了，手动删除Zk下对应的znode就能恢复","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1562804285,"ip_address":"","comment_id":112555,"utype":1}],"discussion_count":2,"race_medal":0,"score":"10152691463","product_id":100029201,"comment_content":"不好意思老师，地铁上有点匆忙提问的问题没有描述清楚，我想的问的是1.文章提到__consumer_offset这个topic记录的offset信息和zk中记录的offset信息有啥区别？<br>2.__consumer_offset这个topic我线上环境没有副本，文章提到副本默认是3，是我配置的问题吗？发现这个问题以后我就在线添加副本，过去好几天了仍然有十几个in progress，另外有没有办法强制终止掉这个任务重新添加副本？","like_count":2,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":457793,"discussion_content":"1. 没什么区别。你可以简单认为就是换个地方保存：）\n2. 这个其实是个bug，不过现在已经修复了。如果reassign  hang住了，手动删除Zk下对应的znode就能恢复","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1562804285,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1547667,"avatar":"https://static001.geekbang.org/account/avatar/00/17/9d/93/4159edaa.jpg","nickname":"朴素柠檬c","note":"","ucode":"2D4CBB70D801B1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":329343,"discussion_content":"写有道云上和你记在万象笔记上的区别","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1606369414,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":112183,"user_name":"aof","can_delete":false,"product_type":"c1","uid":1062864,"ip_address":"","ucode":"5815D63C4926BC","user_header":"https://static001.geekbang.org/account/avatar/00/10/37/d0/26975fba.jpg","comment_is_top":false,"comment_ctime":1562679665,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10152614257","product_id":100029201,"comment_content":"劣势就是zk是基于内存的，而位移主题要保存到broker上，也就是磁盘……","like_count":2},{"had_liked":false,"id":111986,"user_name":"南山","can_delete":false,"product_type":"c1","uid":1119593,"ip_address":"","ucode":"94656FE4A6C378","user_header":"https://static001.geekbang.org/account/avatar/00/11/15/69/187b9968.jpg","comment_is_top":false,"comment_ctime":1562648108,"is_pvip":true,"replies":[{"id":"40843","content":"如果一定要对比JVM GC算法，那么它使用的就是sweep-compact算法","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1562721921,"ip_address":"","comment_id":111986,"utype":1}],"discussion_count":2,"race_medal":0,"score":"10152582700","product_id":100029201,"comment_content":"老师，consumer_offset可以理解为使用topic实现了一个k-v存储吗？consumer从里面消费消息的时候不是那种顺序消费，而是根据key来查找最新的value这种方式吗？compact的时候应该不会阻止consumer继续发送位移消息，那使用的是什么样的“垃圾回收”算法呢？","like_count":2,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":457532,"discussion_content":"如果一定要对比JVM GC算法，那么它使用的就是sweep-compact算法","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1562721921,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1155275,"avatar":"https://static001.geekbang.org/account/avatar/00/11/a0/cb/aab3b3e7.jpg","nickname":"张三丰","note":"","ucode":"3A6215A40B3B21","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":382487,"discussion_content":"我发现第一个问题老师回避了好几次","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1625595577,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":111837,"user_name":"nightmare","can_delete":false,"product_type":"c1","uid":1056314,"ip_address":"","ucode":"EF2E51C2122A86","user_header":"https://static001.geekbang.org/account/avatar/00/10/1e/3a/5b21c01c.jpg","comment_is_top":false,"comment_ctime":1562629342,"is_pvip":false,"discussion_count":3,"race_medal":0,"score":"10152563934","product_id":100029201,"comment_content":"比如多个线程同时消费一个分区的话，位移这么处理","like_count":2,"discussions":[{"author":{"id":1179056,"avatar":"https://static001.geekbang.org/account/avatar/00/11/fd/b0/e30fd916.jpg","nickname":"京京beaver","note":"","ucode":"C21838D7CA7D6B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":42112,"discussion_content":"同一个topic的一个partition只能被一个group里面的一个consumer消费，因此不存在多个consumer的情况。如果consumer启动了多线程处理消息，处理完成后，commitSyn还是只能由这个consumer去提交。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1572589552,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1133918,"avatar":"https://static001.geekbang.org/account/avatar/00/11/4d/5e/c5c62933.jpg","nickname":"lmtoo","note":"","ucode":"FCD5B9C941D448","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":1465,"discussion_content":"没有多个线程消费同一个分区的情况，一个分区只能被一个消费者消费","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1562639917,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1273993,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/wonzX0yIia5NFoB0TZPdIPqVicIuSvzMtowownIkO9VwYpkPWJP2tpEcv5RXMn0ayuEGkAp2GBualL5sFQs0ibQJQ/132","nickname":"gogogo","note":"","ucode":"D7B7A9AA2D4CE5","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1133918,"avatar":"https://static001.geekbang.org/account/avatar/00/11/4d/5e/c5c62933.jpg","nickname":"lmtoo","note":"","ucode":"FCD5B9C941D448","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":1636,"discussion_content":"他的意思应该是消息被一个线程从Kafka消费，但是被多个线程处理逻辑。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1562750914,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":1465,"ip_address":""},"score":1636,"extra":""}]}]},{"had_liked":false,"id":229001,"user_name":"水银湖","can_delete":false,"product_type":"c1","uid":1179011,"ip_address":"","ucode":"28BB2E47D8C30A","user_header":"https://static001.geekbang.org/account/avatar/00/11/fd/83/48cc0d83.jpg","comment_is_top":false,"comment_ctime":1592877763,"is_pvip":false,"replies":[{"id":"84447","content":"消费者读取位移是走内存的，不会穿透到底层去读物理文件","user_name":"作者回复","user_name_real":"胡夕","uid":"1288090","ctime":1592880931,"ip_address":"","comment_id":229001,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5887845059","product_id":100029201,"comment_content":"老师请问下，如果采用位移消息来记录偏移量，这其中肯定有延迟，那消费者从自己分区拉数据又要求很高的性能，这是否意味着消费者从自己分区拉数据并不是实时依赖于位移消息呢","like_count":1,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":499293,"discussion_content":"消费者读取位移是走内存的，不会穿透到底层去读物理文件","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1592880931,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":212049,"user_name":"马吉辉","can_delete":false,"product_type":"c1","uid":1854657,"ip_address":"","ucode":"4265EFBD2BB7BD","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKVIjh4T1akib5iav5IIGjXB9x98p9Y80STRcwpMDqxfGLrMvHamxlxEqLMTpiayWFWSNpBcbGwkRjRw/132","comment_is_top":false,"comment_ctime":1588052945,"is_pvip":false,"replies":[{"id":"78886","content":"嗯，一种方式是设置这个参数然后启动Broker，另外就是通过命令手动将该topic的rf调大","user_name":"作者回复","user_name_real":"胡夕","uid":"1288090","ctime":1588086129,"ip_address":"","comment_id":212049,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5883020241","product_id":100029201,"comment_content":"除了分区数，副本数或备份因子是怎么控制的呢？答案也很简单，这就是 Broker 端另一个参数 offsets.topic.replication.factor 要做的事情了。它的默认值是 3。<br>-----<br>我的版本为 kafka_2.11-1.0.0  offsets.topic.replication.factor 这个参数的默认值为 1","like_count":1,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":493418,"discussion_content":"嗯，一种方式是设置这个参数然后启动Broker，另外就是通过命令手动将该topic的rf调大","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1588086129,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":208064,"user_name":"poettian","can_delete":false,"product_type":"c1","uid":1144021,"ip_address":"","ucode":"26EE408F908D12","user_header":"https://static001.geekbang.org/account/avatar/00/11/74/d5/de9641dc.jpg","comment_is_top":false,"comment_ctime":1587267709,"is_pvip":false,"replies":[{"id":"77773","content":"在一篇就会有涉及了。简单来说就是消费者组的协调器组件，负责维护和管理消费者组，包括成员管理、消费工作协调、位移管理等","user_name":"作者回复","user_name_real":"胡夕","uid":"1288090","ctime":1587309065,"ip_address":"","comment_id":208064,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5882235005","product_id":100029201,"comment_content":"老师在评论里回复时经常会提到 Coordinator ，但是这个概念之前的文章好像没有提及，老师能否简单描述一下这个 Coordinator 是个啥？","like_count":1,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":492327,"discussion_content":"在一篇就会有涉及了。简单来说就是消费者组的协调器组件，负责维护和管理消费者组，包括成员管理、消费工作协调、位移管理等","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1587309065,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":180644,"user_name":"极极","can_delete":false,"product_type":"c1","uid":1250773,"ip_address":"","ucode":"365F7446ABCC49","user_header":"https://static001.geekbang.org/account/avatar/00/13/15/d5/6d66288b.jpg","comment_is_top":false,"comment_ctime":1582357899,"is_pvip":false,"replies":[{"id":"70214","content":"是的","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1582455624,"ip_address":"","comment_id":180644,"utype":1}],"discussion_count":2,"race_medal":0,"score":"5877325195","product_id":100029201,"comment_content":"老师您好，关于提交位移，如果我提交了0 2 3，哪怕我1没有提交，也是当成消费到 3 吗？ 然后消费者断开重连，下一次消费者再拿也是从4开始吗？","like_count":1,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":484743,"discussion_content":"是的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582455624,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1250773,"avatar":"https://static001.geekbang.org/account/avatar/00/13/15/d5/6d66288b.jpg","nickname":"极极","note":"","ucode":"365F7446ABCC49","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":182213,"discussion_content":"不好意思。。这个后面的文章已经看到，是以最后的 3 为准，从4开始","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582389928,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":179431,"user_name":"Ryoma","can_delete":false,"product_type":"c1","uid":1130590,"ip_address":"","ucode":"7F692369239692","user_header":"https://static001.geekbang.org/account/avatar/00/11/40/5e/b8fada94.jpg","comment_is_top":false,"comment_ctime":1582002395,"is_pvip":true,"replies":[{"id":"69758","content":"如果你说的是server.properties里面的配置，那个不是默认配置。那就是个模板而已。offsets.topic.replication.factor的默认值现在是3","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1582072412,"ip_address":"","comment_id":179431,"utype":1}],"discussion_count":2,"race_medal":2,"score":"5876969691","product_id":100029201,"comment_content":"关于“总结一下，如果位移主题是 Kafka 自动创建的，那么该主题的分区数是 50，副本数是 3。”<br><br>这里的副本数有点不理解，如果默认值是 3，那我启动单节点的 Broker 实例还能正常使用么？<br><br>作者回复: 0.11版本之后不能使用了，除非你将offsets.topic.replication.factor设置成1<br><br>接着上面的问题继续，我下载了 1.0 及 最新的 2.4 版本，看配置这个参数默认都是 1 呢","like_count":1,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":484259,"discussion_content":"如果你说的是server.properties里面的配置，那个不是默认配置。那就是个模板而已。offsets.topic.replication.factor的默认值现在是3","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582072412,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1130590,"avatar":"https://static001.geekbang.org/account/avatar/00/11/40/5e/b8fada94.jpg","nickname":"Ryoma","note":"","ucode":"7F692369239692","race_medal":2,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":176966,"discussion_content":"原来如此，感谢~","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582072669,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":179277,"user_name":"Ryoma","can_delete":false,"product_type":"c1","uid":1130590,"ip_address":"","ucode":"7F692369239692","user_header":"https://static001.geekbang.org/account/avatar/00/11/40/5e/b8fada94.jpg","comment_is_top":false,"comment_ctime":1581950739,"is_pvip":true,"replies":[{"id":"69620","content":"0.11版本之后不能使用了，除非你将offsets.topic.replication.factor设置成1","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1581985449,"ip_address":"","comment_id":179277,"utype":1}],"discussion_count":1,"race_medal":2,"score":"5876918035","product_id":100029201,"comment_content":"关于“总结一下，如果位移主题是 Kafka 自动创建的，那么该主题的分区数是 50，副本数是 3。”<br><br>这里的副本数有点不理解，如果默认值是 3，那我启动单节点的 Broker 实例还能正常使用么？","like_count":1,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":484178,"discussion_content":"0.11版本之后不能使用了，除非你将offsets.topic.replication.factor设置成1","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1581985449,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":152598,"user_name":"feifei","can_delete":false,"product_type":"c1","uid":1258380,"ip_address":"","ucode":"BFA3BE8D8773A7","user_header":"https://static001.geekbang.org/account/avatar/00/13/33/8c/23eef8d7.jpg","comment_is_top":false,"comment_ctime":1574048057,"is_pvip":false,"replies":[{"id":"58749","content":"比较老的版本中offsets.topic.replication.factor参数值并不会被严格遵守，你可以手动将__consumer_offsets的rf值调高","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1574130598,"ip_address":"","comment_id":152598,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5869015353","product_id":100029201,"comment_content":"为什么我的kafka consumer自动创建的位移主题没有副本，就只有50个分区","like_count":1,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":474870,"discussion_content":"比较老的版本中offsets.topic.replication.factor参数值并不会被严格遵守，你可以手动将__consumer_offsets的rf值调高","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574130598,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":137006,"user_name":"Mick","can_delete":false,"product_type":"c1","uid":1391216,"ip_address":"","ucode":"5CCE3E2BDB110A","user_header":"https://static001.geekbang.org/account/avatar/00/15/3a/70/a874d69c.jpg","comment_is_top":false,"comment_ctime":1569574756,"is_pvip":false,"replies":[{"id":"52560","content":"我记得应该只有groupid吧，甚至连主题名都没有。位移主题里面有两类消息：一类是保存消费者消费位移的消息，key是&lt;groupId, topic, partition&gt;；另一类是组注册消息，key是groupid","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1569582302,"ip_address":"","comment_id":137006,"utype":1}],"discussion_count":3,"race_medal":0,"score":"5864542052","product_id":100029201,"comment_content":"老师,请问下为什么我的位移主题的key(&lt;Group ID，主题名，分区号 &gt;) 没有分区号 ，只有Group ID和主题名。","like_count":1,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":468898,"discussion_content":"我记得应该只有groupid吧，甚至连主题名都没有。位移主题里面有两类消息：一类是保存消费者消费位移的消息，key是&amp;lt;groupId, topic, partition&amp;gt;；另一类是组注册消息，key是groupid","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1569582302,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1547667,"avatar":"https://static001.geekbang.org/account/avatar/00/17/9d/93/4159edaa.jpg","nickname":"朴素柠檬c","note":"","ucode":"2D4CBB70D801B1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":329339,"discussion_content":"感觉主题只管那个组消费到分区的什么位子，至于组内那个消费者实例消费的这个分区，应该是有组里面的协调者维护的，毕竟访问分区首先要协调者分配","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1606369262,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1270262,"avatar":"https://static001.geekbang.org/account/avatar/00/13/61/f6/1d6b548a.jpg","nickname":"wang","note":"","ucode":"C1A3BCACCB188E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":258262,"discussion_content":"我在kafka tool 上看到的也是只有GroupId Topic 这样的形式，但是这个消费者主题下却有分区，然后每个分区有对应的groupId 的消费位移记录","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1588671472,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":129053,"user_name":"开水","can_delete":false,"product_type":"c1","uid":1528555,"ip_address":"","ucode":"651491C38B925B","user_header":"https://static001.geekbang.org/account/avatar/00/17/52/eb/eec719f3.jpg","comment_is_top":false,"comment_ctime":1567036468,"is_pvip":false,"replies":[{"id":"48171","content":"0.9新版本consumer刚刚推出，一堆bug，真的不要用","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1567126829,"ip_address":"","comment_id":129053,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5862003764","product_id":100029201,"comment_content":"老师，想问一下0.9版本new consumer api真的将偏移量都存到位移主题了么？我实验后发现相同group.id，consumer重启之后会重复消费，只有在consumer还存活的时候，才能通过Kafka-consumer-group.sh中查询到偏移量，是不是这个版本的偏移量保存还存在bug呢？","like_count":1,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":465247,"discussion_content":"0.9新版本consumer刚刚推出，一堆bug，真的不要用","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567126829,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":116930,"user_name":"King Yao","can_delete":false,"product_type":"c1","uid":1026946,"ip_address":"","ucode":"B431FD02175B96","user_header":"https://static001.geekbang.org/account/avatar/00/0f/ab/82/b6af9f94.jpg","comment_is_top":false,"comment_ctime":1563940832,"is_pvip":false,"replies":[{"id":"42773","content":"可以调整也可以不调整，主要是确保位移主题的副本数满足预期就好","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1563950092,"ip_address":"","comment_id":116930,"utype":1}],"discussion_count":3,"race_medal":0,"score":"5858908128","product_id":100029201,"comment_content":"老师你好，最近我们有在扩容Kafka。请问在主题迁移的时候，位移主题是否需要迁移调整，谢谢","like_count":1,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":459741,"discussion_content":"可以调整也可以不调整，主要是确保位移主题的副本数满足预期就好","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1563950092,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1547667,"avatar":"https://static001.geekbang.org/account/avatar/00/17/9d/93/4159edaa.jpg","nickname":"朴素柠檬c","note":"","ucode":"2D4CBB70D801B1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":329340,"discussion_content":"老师的回答 感觉总是只言片语，可能他自己都不知道确定答案，还是自己查资料吧，人无完人","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1606369342,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1026946,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/ab/82/b6af9f94.jpg","nickname":"King Yao","note":"","ucode":"B431FD02175B96","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":2864,"discussion_content":"满足预期这个没太理解，老师能否详细说下什么是满足预期吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1563981797,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":113350,"user_name":"wykkx","can_delete":false,"product_type":"c1","uid":1122358,"ip_address":"","ucode":"ABCDF49E7A95C8","user_header":"https://static001.geekbang.org/account/avatar/00/11/20/36/b3e2f1d5.jpg","comment_is_top":false,"comment_ctime":1562983062,"is_pvip":false,"replies":[{"id":"41423","content":"1.  0.9<br>2. 推荐保存在Kafka内部<br>3. 不在乎重复消费","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1563157257,"ip_address":"","comment_id":113350,"utype":1}],"discussion_count":2,"race_medal":0,"score":"5857950358","product_id":100029201,"comment_content":"老师我想请教几个问题，<br>1，具体是从哪个版本开始，位移数据开始默认的不存在zk而是存在自己内部了？<br>2，如果验证目前使用的环境，位移是存在内部还是zk上？<br>3，什么场景下适合使用自动提交位移？","like_count":1,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":458180,"discussion_content":"1.  0.9\n2. 推荐保存在Kafka内部\n3. 不在乎重复消费","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1563157257,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1547667,"avatar":"https://static001.geekbang.org/account/avatar/00/17/9d/93/4159edaa.jpg","nickname":"朴素柠檬c","note":"","ucode":"2D4CBB70D801B1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":329341,"discussion_content":"第二个问题 去zk上看一下node信息不久知道了\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1606369373,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":112423,"user_name":"无菇朋友","can_delete":false,"product_type":"c1","uid":1035562,"ip_address":"","ucode":"80482C5F0464A3","user_header":"https://static001.geekbang.org/account/avatar/00/0f/cd/2a/bdbed6ed.jpg","comment_is_top":false,"comment_ctime":1562730838,"is_pvip":false,"replies":[{"id":"40983","content":"offset topic在整个集群上被创建出来，并且只会创建一次","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1562804480,"ip_address":"","comment_id":112423,"utype":1}],"discussion_count":2,"race_medal":0,"score":"5857698134","product_id":100029201,"comment_content":"老师，offset topic是在coordinator对应的broker上创建且只创建一次是么？","like_count":1,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":457728,"discussion_content":"offset topic在整个集群上被创建出来，并且只会创建一次","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1562804480,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1547667,"avatar":"https://static001.geekbang.org/account/avatar/00/17/9d/93/4159edaa.jpg","nickname":"朴素柠檬c","note":"","ucode":"2D4CBB70D801B1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":329345,"discussion_content":"创建多次 就真的出问题了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1606369486,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":112289,"user_name":"玉剑冰锋","can_delete":false,"product_type":"c1","uid":1214202,"ip_address":"","ucode":"8EA56A71BA5B22","user_header":"https://static001.geekbang.org/account/avatar/00/12/86/fa/4bcd7365.jpg","comment_is_top":false,"comment_ctime":1562716619,"is_pvip":false,"replies":[{"id":"40828","content":"“每个主题也会记录位移，跟主题位移有啥区别” 这是什么意思呢？没看懂。。。。<br><br>“我线上主题位置没有副本”  这又是什么意思呢。。。","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1562720755,"ip_address":"","comment_id":112289,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5857683915","product_id":100029201,"comment_content":"现在kafka中同样还在使用zk,每个主题也会记录位移，跟主题位移有啥区别？另外我线上主题位置没有副本，之前从来没动过，这是啥原因导致的？","like_count":1,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":457660,"discussion_content":"“每个主题也会记录位移，跟主题位移有啥区别” 这是什么意思呢？没看懂。。。。\n\n“我线上主题位置没有副本”  这又是什么意思呢。。。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1562720755,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":112161,"user_name":"nico","can_delete":false,"product_type":"c1","uid":1068837,"ip_address":"","ucode":"A7A1471CB238AB","user_header":"https://static001.geekbang.org/account/avatar/00/10/4f/25/75316ed6.jpg","comment_is_top":false,"comment_ctime":1562676610,"is_pvip":false,"replies":[{"id":"40833","content":"需要自己写代码实现，Kafka没有天然提供这个功能","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1562721153,"ip_address":"","comment_id":112161,"utype":1}],"discussion_count":2,"race_medal":0,"score":"5857643906","product_id":100029201,"comment_content":"大神 Kafka可以发送 定时消息吗，制定某一时刻接受到消息 拜托🙏","like_count":1,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":457604,"discussion_content":"需要自己写代码实现，Kafka没有天然提供这个功能","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1562721153,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1000347,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/43/9b/50927dfc.jpg","nickname":"小飞","note":"","ucode":"4C126548FBA94C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":45446,"discussion_content":"rocket mq 支持。哈哈","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573039442,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":111855,"user_name":"monkay","can_delete":false,"product_type":"c1","uid":1066182,"ip_address":"","ucode":"07C0BB8A47799A","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/pc41FOKAiabVaaKiawibEm7zglvnsYBnYeRiaSAElf9ciczovXmXmI0hOeR6U9RULFtMoqX5kobNttvwXCLsUM9Hbcg/132","comment_is_top":false,"comment_ctime":1562631898,"is_pvip":false,"replies":[{"id":"40681","content":"都已经停到然后位移数据已被删除","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1562634473,"ip_address":"","comment_id":111855,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5857599194","product_id":100029201,"comment_content":"一旦某个 Consumer Group 下的所有 Consumer 实例都停止了，而且它们的位移数据都已被删除时，Kafka 会向位移主题的对应分区写入 tombstone 消息，表明要彻底删除这个 Group 的信息。<br><br><br>什么情况下会彻底删除GROUP的信息呢？如果GROUP下所有consumer实例都同时停掉重启会出现这种情况吗？","like_count":1,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":457473,"discussion_content":"都已经停到然后位移数据已被删除","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1562634473,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":350631,"user_name":"ppd0705","can_delete":false,"product_type":"c1","uid":1155646,"ip_address":"","ucode":"EB63D4E3FD1E9A","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKotsBr2icbYNYlRSlicGUD1H7lulSTQUAiclsEz9gnG5kCW9qeDwdYtlRMXic3V6sj9UrfKLPJnQojag/132","comment_is_top":false,"comment_ctime":1657069851,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1657069851","product_id":100029201,"comment_content":"kafka-consumer-group.sh 可以查看 consumer-group 的状态，请问如何查看 standalonw consumer 的状态呢？","like_count":0},{"had_liked":false,"id":345532,"user_name":"liuuu","can_delete":false,"product_type":"c1","uid":2446808,"ip_address":"","ucode":"33DF7F5AC6900E","user_header":"https://static001.geekbang.org/account/avatar/00/25/55/d8/791d0f5e.jpg","comment_is_top":false,"comment_ctime":1652360655,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1652360655","product_id":100029201,"comment_content":"有个小翻译建议，像专业术语。topic 、 consumer offset 等就使用英语，不用翻译成中文。","like_count":0},{"had_liked":false,"id":339905,"user_name":"i_chase","can_delete":false,"product_type":"c1","uid":1795511,"ip_address":"","ucode":"09C41C863F4EA3","user_header":"https://static001.geekbang.org/account/avatar/00/1b/65/b7/058276dc.jpg","comment_is_top":false,"comment_ctime":1648457398,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1648457398","product_id":100029201,"comment_content":"“一旦某个 Consumer Group 下的所有 Consumer 实例都停止了，而且它们的位移数据都已被删除时，Kafka 会向位移主题的对应分区写入 tombstone 消息，表明要彻底删除这个 Group 的信息“ 这里位移数据被删除，指的是过期吗？","like_count":0},{"had_liked":false,"id":339903,"user_name":"i_chase","can_delete":false,"product_type":"c1","uid":1795511,"ip_address":"","ucode":"09C41C863F4EA3","user_header":"https://static001.geekbang.org/account/avatar/00/1b/65/b7/058276dc.jpg","comment_is_top":false,"comment_ctime":1648457219,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1648457219","product_id":100029201,"comment_content":"log cleaner只对单个partition生效","like_count":0},{"had_liked":false,"id":339805,"user_name":"Geek_417e74","can_delete":false,"product_type":"c1","uid":2113978,"ip_address":"","ucode":"BEA8915879274D","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLLniccwC1Mootc7IQsRGUTX3ZkkCKPc7lYV0g8CAqscWtAjd8xkHYcY3UFbYvicm42FXuAO5bZP6WQ/132","comment_is_top":false,"comment_ctime":1648394512,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1648394512","product_id":100029201,"comment_content":"老师，前面说消息以MessageSet为单位生产和消费，消费时用的zero-copy。那么这里offset是MessageSet的位移么？这个offset是一个顺序递增的值？消费offset的初始值根据 lastest 或 earliest 来确定，每次提交位移是以MessageSet为单位，这个offset自动+1么？","like_count":0},{"had_liked":false,"id":336112,"user_name":"莎思比亚","can_delete":false,"product_type":"c1","uid":2066849,"ip_address":"","ucode":"71A9C184E9832C","user_header":"https://static001.geekbang.org/account/avatar/00/1f/89/a1/2e2d6d0b.jpg","comment_is_top":false,"comment_ctime":1645933801,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1645933801","product_id":100029201,"comment_content":"胡老师好，我们这边有这么一个场景：设置基于时间&#47;空间删除消息的 参数后，一旦启动删除，有些小的topic消息也被清理了（业务需求是要保留的至少保留最后两个logfile）；关闭删除后，磁盘爆了，这种情况是否也是Log Clean线程可以解决的问题呢","like_count":0},{"had_liked":false,"id":325977,"user_name":"Geek_9150ca","can_delete":false,"product_type":"c1","uid":2858605,"ip_address":"","ucode":"0E63818EACA52F","user_header":"","comment_is_top":false,"comment_ctime":1639288325,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1639288325","product_id":100029201,"comment_content":"老师，您好，还想请教下，我记得日志清理策略有两种，delete和compact，这两种有啥区别呢？","like_count":0},{"had_liked":false,"id":325965,"user_name":"Geek_9150ca","can_delete":false,"product_type":"c1","uid":2858605,"ip_address":"","ucode":"0E63818EACA52F","user_header":"","comment_is_top":false,"comment_ctime":1639281575,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1639281575","product_id":100029201,"comment_content":"老师，您好，我想问下关于手动提交位移是不是会降低吞吐量呢？如果会降低吞吐量，那大概会降低多少？","like_count":0},{"had_liked":false,"id":323390,"user_name":"云师兄","can_delete":false,"product_type":"c1","uid":1010459,"ip_address":"","ucode":"4475AF1598FBFD","user_header":"https://static001.geekbang.org/account/avatar/00/0f/6b/1b/4b397b80.jpg","comment_is_top":false,"comment_ctime":1637887078,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1637887078","product_id":100029201,"comment_content":"位移主题的位移需要记录吗，还是每次从头开始消费就行，如果有50分区，要在启动时候消费50个分区的位移数据吗","like_count":0},{"had_liked":false,"id":319738,"user_name":"william","can_delete":false,"product_type":"c1","uid":1523230,"ip_address":"","ucode":"6C2307472FA41B","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIeNIlPiaxsicB9icTlcsfYMOibnf800aBYvia4pI44L0QRXevEaKbJtcGBLWerRJic66HtHVSdFbFSfU0g/132","comment_is_top":false,"comment_ctime":1635925390,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1635925390","product_id":100029201,"comment_content":"老师，我有一个问题请教下<br>1、现在有一个TopicA有三个分片，有一个消费者(GroupId为B)，现在消费了0分片上的消息，下一条消息在1分片上，那么消费者是如何去切换到1分片上的？<br>2、这种情况下位移主题中会存在三个key吗? 即BA0 BA1 BA2","like_count":0},{"had_liked":false,"id":313539,"user_name":"Allan","can_delete":false,"product_type":"c1","uid":1310388,"ip_address":"","ucode":"8DA4DBECC2C45C","user_header":"https://static001.geekbang.org/account/avatar/00/13/fe/b4/295338e7.jpg","comment_is_top":false,"comment_ctime":1632479818,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1632479818","product_id":100029201,"comment_content":"1、因为我们之前说过rebalance的问题，会导致stw问题。因为位移主题也是主题，相应的分区变动的问题也会导致rebalance，从而影响程序的性能问题。<br>2、放在kafka内部主题就不用每次与zk交互网络通信了，也是节省了资源，提升了性能问题<br>3、交给zk以后，kafka就少了日志管理问题，随着日志越来越多，如果超过太多磁盘不够了，或者清理日志的线程停了都会影响程序，给了zk管理以后，zk本来就是用来做协调，高可用的架构，这样会使得整体架构更加健壮","like_count":0},{"had_liked":false,"id":309179,"user_name":"曲中人","can_delete":false,"product_type":"c1","uid":2435542,"ip_address":"","ucode":"57E694B108081F","user_header":"https://static001.geekbang.org/account/avatar/00/25/29/d6/ced1f995.jpg","comment_is_top":false,"comment_ctime":1629969351,"is_pvip":false,"replies":[{"id":"112528","content":"其实实际情况没有一定之规，还是按照具体测试结果来设置最准","user_name":"作者回复","user_name_real":"胡夕","uid":"1288090","ctime":1630810175,"ip_address":"","comment_id":309179,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1629969351","product_id":100029201,"comment_content":"老师好，第一次留言希望老师能回答，我们公司之前使用kafka，topic的partition 是设置成Consumer的k倍，我想知道怎么去平衡这个k, 设置太小或者太大有什么问题","like_count":0,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":525773,"discussion_content":"其实实际情况没有一定之规，还是按照具体测试结果来设置最准","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1630810175,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":308390,"user_name":"银子","can_delete":false,"product_type":"c1","uid":1125765,"ip_address":"","ucode":"5233F5FB5D2755","user_header":"https://static001.geekbang.org/account/avatar/00/11/2d/85/55f19976.jpg","comment_is_top":false,"comment_ctime":1629596807,"is_pvip":true,"replies":[{"id":"112531","content":"计算Math.abs(&quot;groupId&quot;.hashCode % 50)得出放在__consumer_offsets topic的哪个分区上，然后保存在该分区leader副本所在的broker上。对于每个consumer group而言，consumer确实可能需要从不同的broker上去获取偏移信息","user_name":"作者回复","user_name_real":"胡夕","uid":"1288090","ctime":1630810534,"ip_address":"","comment_id":308390,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1629596807","product_id":100029201,"comment_content":"之前用zk保证kafka元信息高可用，consume<br>连接zk即可获取所有的偏移信息，那么现在用__consumer_offset偏移消息存放在那些broker下，有什么规则么？<br>如果__consumer_offsets存放在n个broker下，是不是消费者需要连接n个broker才可以获取偏移信息呢？老师有时间帮忙解答一下，感谢🙏","like_count":0,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":525478,"discussion_content":"计算Math.abs(&amp;quot;groupId&amp;quot;.hashCode % 50)得出放在__consumer_offsets topic的哪个分区上，然后保存在该分区leader副本所在的broker上。对于每个consumer group而言，consumer确实可能需要从不同的broker上去获取偏移信息","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1630810534,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":306382,"user_name":"受超凡","can_delete":false,"product_type":"c1","uid":2678558,"ip_address":"","ucode":"A2A160D483BBB0","user_header":"","comment_is_top":false,"comment_ctime":1628521083,"is_pvip":false,"replies":[{"id":"112537","content":"没明白这个问题。前后两句话不冲突啊？","user_name":"作者回复","user_name_real":"胡夕","uid":"1288090","ctime":1630810829,"ip_address":"","comment_id":306382,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1628521083","product_id":100029201,"comment_content":"自动提交方式下，为什么consumer会不断的提交位移到位移主题呢？不是有消息来了，poll到消息才会自动提交位移吗？","like_count":0,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":524738,"discussion_content":"没明白这个问题。前后两句话不冲突啊？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1630810829,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":296915,"user_name":"Zm","can_delete":false,"product_type":"c1","uid":1448893,"ip_address":"","ucode":"831FF80F07E965","user_header":"https://wx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKj4w4lW7ibGEVxPv8wS1CrXKDeBz3RAaAdISxQSD23uUpV3wicsIMepaYZE8GzRcWmSpjet5NDN4MA/132","comment_is_top":false,"comment_ctime":1623224446,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1623224446","product_id":100029201,"comment_content":"好长时间的疑惑终于被解决了。","like_count":0},{"had_liked":false,"id":296772,"user_name":"zmysang","can_delete":false,"product_type":"c1","uid":1642663,"ip_address":"","ucode":"8A98057E7819DD","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/tjhOILHBAmlx6YiaTZJzqzxn1uyB6XpdvGDIZhBn127TYEcoLLzxRiaKvtVd3HllQqPx7cqf2YmibyBUgGGGJPDkw/132","comment_is_top":false,"comment_ctime":1623154886,"is_pvip":false,"replies":[{"id":"108494","content":"如果其中的消费者A取出了消息1，消费者b取出了消息2。 --- 不太可能出现这种情况。因为一旦A负责某个分区，B不可能在同一时间也消费这个分区。当然你说的情况对于多线程消费来说是有可能的，课程后面应该有多线程消费的例子。简单来说，使用多线程的话，需要严格控制提交位移的动作，至少只能让一个线程来提交位移","user_name":"作者回复","user_name_real":"胡夕","uid":"1288090","ctime":1624497866,"ip_address":"","comment_id":296772,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1623154886","product_id":100029201,"comment_content":"请问老师，如果是设置为不自动提交位移的情况下，有一个消费组对某一个分区进行消费，如果其中的消费者A取出了消息1，消费者b取出了消息2。然后消息1消费失败了，没有提交位移；消息2消费成功了，提交位移2，那么消息1就再也消费不到了吗？要怎么避免这种丢失的情况？","like_count":0,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":521577,"discussion_content":"如果其中的消费者A取出了消息1，消费者b取出了消息2。 --- 不太可能出现这种情况。因为一旦A负责某个分区，B不可能在同一时间也消费这个分区。当然你说的情况对于多线程消费来说是有可能的，课程后面应该有多线程消费的例子。简单来说，使用多线程的话，需要严格控制提交位移的动作，至少只能让一个线程来提交位移","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1624497866,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":296630,"user_name":"Geek6530","can_delete":false,"product_type":"c1","uid":2328982,"ip_address":"","ucode":"8A5E02A73BEF25","user_header":"","comment_is_top":false,"comment_ctime":1623073279,"is_pvip":false,"replies":[{"id":"107771","content":"感谢您的反馈~","user_name":"作者回复","user_name_real":"胡夕","uid":"1288090","ctime":1623119897,"ip_address":"","comment_id":296630,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1623073279","product_id":100029201,"comment_content":"讲了这么多，命令都没敲过，topic都没创建过，生产消费都没演示","like_count":0,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":521528,"discussion_content":"感谢您的反馈~","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1623119897,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":295000,"user_name":"熊猫","can_delete":false,"product_type":"c1","uid":1080238,"ip_address":"","ucode":"23C85117A16BEF","user_header":"https://static001.geekbang.org/account/avatar/00/10/7b/ae/66ae403d.jpg","comment_is_top":false,"comment_ctime":1622177531,"is_pvip":false,"replies":[{"id":"107166","content":"理论上会的，但实际上中不会碰到。毕竟是个long型","user_name":"作者回复","user_name_real":"胡夕","uid":"1288090","ctime":1622353380,"ip_address":"","comment_id":295000,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1622177531","product_id":100029201,"comment_content":"老师，offset会不停增长最后溢出吗？","like_count":0,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":520909,"discussion_content":"理论上会的，但实际上中不会碰到。毕竟是个long型","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1622353380,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":291702,"user_name":"acupple","can_delete":false,"product_type":"c1","uid":1086927,"ip_address":"","ucode":"D3E908E2EB59B1","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJByKiaE1TUInTDdemFvJib3s1iahmYWGddf4R9bFRlPRI5hPP70DhqhNN2gJEKj2njIX7g0ULHg8Ojw/132","comment_is_top":false,"comment_ctime":1620441545,"is_pvip":false,"replies":[{"id":"105693","content":"向该主题获取对应的offset数据","user_name":"作者回复","user_name_real":"胡夕","uid":"1288090","ctime":1620613727,"ip_address":"","comment_id":291702,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1620441545","product_id":100029201,"comment_content":"那consumer启动的实时，如何使用这个位移主题的数据呢？","like_count":0,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":519545,"discussion_content":"向该主题获取对应的offset数据","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1620613727,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":290516,"user_name":"小熊","can_delete":false,"product_type":"c1","uid":1245833,"ip_address":"","ucode":"A7635ED68A8390","user_header":"https://static001.geekbang.org/account/avatar/00/13/02/89/f8331e9c.jpg","comment_is_top":false,"comment_ctime":1619598629,"is_pvip":false,"replies":[{"id":"105276","content":"根据consumer group的id计算去哪个broker获取位移数据","user_name":"作者回复","user_name_real":"胡夕","uid":"1288090","ctime":1619599464,"ip_address":"","comment_id":290516,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1619598629","product_id":100029201,"comment_content":"我在想一个问题，如果一个broker上的所有分区的offset信息，放到_consumers_offset的分区中，当consumer重启时，怎么拿到自己的最新的offset呢？难道是内部根据key直接取出？还是挨个查询比较，找到？","like_count":0,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":519224,"discussion_content":"根据consumer group的id计算去哪个broker获取位移数据","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1619599464,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1245833,"avatar":"https://static001.geekbang.org/account/avatar/00/13/02/89/f8331e9c.jpg","nickname":"小熊","note":"","ucode":"A7635ED68A8390","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":370979,"discussion_content":"根据id定位到某个broker，内部是怎么拿的呢？我感觉一个partirion纪录的不只一个consumer group id的offset吧 ？需要根据那个key（id，topic,partition）一次性取出？还是要遍历log日志比较key？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1619599822,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":286118,"user_name":"陌兮","can_delete":false,"product_type":"c1","uid":1415619,"ip_address":"","ucode":"00CE47CAECD5CD","user_header":"https://static001.geekbang.org/account/avatar/00/15/99/c3/e4f408d4.jpg","comment_is_top":false,"comment_ctime":1617160268,"is_pvip":true,"replies":[{"id":"104163","content":"1、单个topic的管理所占资源并没有多少，这点还好<br>2、就是使用了Kafka副本机制来保证的一致性。如果这点做不到，整个Kafka的副本机制都会动摇，所以也还好<br>3、这点我同意。Kafka保护机制做的还算不错，不过你依然可以读取这个topic的数据，虽然你无法向它直接发送消息<br>4、不需要在每个broker上。只需要在副本所在的broker上保存，所以也还好<br><br>事实上， ZooKeeper后面会被完全移除，所有ZK做的事情Kafka都准备自己来干","user_name":"作者回复","user_name_real":"胡夕","uid":"1288090","ctime":1617671546,"ip_address":"","comment_id":286118,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1617160268","product_id":100029201,"comment_content":"老师好，就问题来说，我感觉与zk相比，kafka管理_consumer_offsets主要有以下几个劣势，主要还有几个问题，希望老师能够帮忙解答下疑惑，谢谢：<br>1、kafka需要在集群内部对位移进行管理，竞争了集群资源（内存，cpu，网络I&#47;O）<br>2、不知道kafka写位移信息的方式是怎样的？使用了什么样的一致性算法，会不会出现大多数broker数据不一致的情况？但是使用zk，可以保证每次读到的位移信息是一致的<br>3、用户使用的不可控，位移信息是普通的topic，消费端对其进行变更的可能性会增加（虽然kafka有相关权限控制，但是这个维护成本应该也比zk高吧），若使用zk进行统一管理，则可以对其统一处理。<br>4、空间冗余，位移信息是否需要在每个broker上都进行保存？<br>","like_count":0,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":517874,"discussion_content":"1、单个topic的管理所占资源并没有多少，这点还好\n2、就是使用了Kafka副本机制来保证的一致性。如果这点做不到，整个Kafka的副本机制都会动摇，所以也还好\n3、这点我同意。Kafka保护机制做的还算不错，不过你依然可以读取这个topic的数据，虽然你无法向它直接发送消息\n4、不需要在每个broker上。只需要在副本所在的broker上保存，所以也还好\n\n事实上， ZooKeeper后面会被完全移除，所有ZK做的事情Kafka都准备自己来干","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1617671546,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":275651,"user_name":"loma","can_delete":false,"product_type":"c1","uid":2298937,"ip_address":"","ucode":"C5CFC3F0D06000","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eoCl6Nxf9oW9tBOaJlH7JqNIiabF8eqMqK1uRhwabXBU3j6kyjVpI2fjm5nZKoZTUA7Cpicb7ajSkrA/132","comment_is_top":false,"comment_ctime":1611633058,"is_pvip":false,"replies":[{"id":"100454","content":"不是什么问题，如果你的consumer gruop很多且提交位移很频繁，这个topic的容量确实可能出现增加的情况。","user_name":"作者回复","user_name_real":"胡夕","uid":"1288090","ctime":1612143294,"ip_address":"","comment_id":275651,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1611633058","product_id":100029201,"comment_content":"生产出现过_consumer_offsets 持续增加 虽然阶段性有回收一些空间 但是 总体趋势是一直上涨 请问老师 这个可能是什么问题","like_count":0,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":514426,"discussion_content":"不是什么问题，如果你的consumer gruop很多且提交位移很频繁，这个topic的容量确实可能出现增加的情况。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1612143294,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":275520,"user_name":"loma","can_delete":false,"product_type":"c1","uid":2298937,"ip_address":"","ucode":"C5CFC3F0D06000","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eoCl6Nxf9oW9tBOaJlH7JqNIiabF8eqMqK1uRhwabXBU3j6kyjVpI2fjm5nZKoZTUA7Cpicb7ajSkrA/132","comment_is_top":false,"comment_ctime":1611569798,"is_pvip":false,"replies":[{"id":"100456","content":"可能导致丢失，因为topic不再按照compact的方式进行清理，而是单纯地按照大小或时间清理，好久不提交位移的消费者组就可能丢失位移。","user_name":"作者回复","user_name_real":"胡夕","uid":"1288090","ctime":1612143392,"ip_address":"","comment_id":275520,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1611569798","product_id":100029201,"comment_content":"@胡老师 0.11.X版本 把  __consumer_offsets 的清理方式改为delete 而不是compact的话(我看到有些人在网上为了解决__consumer_offsets磁盘空间过大的问题是这么处理的) 会有什么影响 是不是可能导致offset丢失？","like_count":0,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":514379,"discussion_content":"可能导致丢失，因为topic不再按照compact的方式进行清理，而是单纯地按照大小或时间清理，好久不提交位移的消费者组就可能丢失位移。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1612143392,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":275221,"user_name":"归零","can_delete":false,"product_type":"c1","uid":1103208,"ip_address":"","ucode":"C99B8E93009A46","user_header":"https://static001.geekbang.org/account/avatar/00/10/d5/68/2201b6b9.jpg","comment_is_top":false,"comment_ctime":1611394982,"is_pvip":true,"replies":[{"id":"100458","content":"consumer从broker获取要消费分区的位移，不是在本地保存的","user_name":"作者回复","user_name_real":"胡夕","uid":"1288090","ctime":1612143449,"ip_address":"","comment_id":275221,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1611394982","product_id":100029201,"comment_content":"有一个点，作者貌似没有说清楚<br><br>前提：对于普通主题比如topic1，有一个consumer1需要从对应的partition1去拉取消息，同时需要将消费进度以&lt;group.id,topic1,partition1&gt;的格式提交到内部主题的partition2上面去(partition1不一定等于partition2)<br><br>那么这个consumer1去拉取消息的时候，怎么知道自己的消费进度呢？我的猜想：<br><br>1. consumer1去partition1拉取消息的时候，partition2将相关的消费进度储存起来了，partition1所在的broker可以获取这个信息，从而知道该返回哪个位移的消息给consumer；<br><br>2. consumer1将位移信息提交到partition2的时候，本地其实也会有记录，这样去拉取消息的时候，就知道具体的位移，直接告诉broker当前的消费进度。当consumer重启之后，需要从对应的partition2获取该部分信息。<br><br>个人倾向于第二种。","like_count":0,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":514269,"discussion_content":"consumer从broker获取要消费分区的位移，不是在本地保存的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1612143449,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1103208,"avatar":"https://static001.geekbang.org/account/avatar/00/10/d5/68/2201b6b9.jpg","nickname":"归零","note":"","ucode":"C99B8E93009A46","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":347326,"discussion_content":"所以胡老师，是第一种方式吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1612194756,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":269504,"user_name":"归零","can_delete":false,"product_type":"c1","uid":1103208,"ip_address":"","ucode":"C99B8E93009A46","user_header":"https://static001.geekbang.org/account/avatar/00/10/d5/68/2201b6b9.jpg","comment_is_top":false,"comment_ctime":1608687677,"is_pvip":true,"replies":[{"id":"97803","content":"这里的分区2和分区5是同一个topic吗？是指__consumer_offsets？","user_name":"作者回复","user_name_real":"胡夕","uid":"1288090","ctime":1608772888,"ip_address":"","comment_id":269504,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1608687677","product_id":100029201,"comment_content":"老师好，咨询下。比如消费者实例从分区2拉取消息，提交位移的消息确是在分区5（文中没有看到二者会对应起来），那么拉取的时候怎么知道具体的进度呢？是broker段的分区会同步消息吗？","like_count":0,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":512301,"discussion_content":"这里的分区2和分区5是同一个topic吗？是指__consumer_offsets？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1608772888,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1103208,"avatar":"https://static001.geekbang.org/account/avatar/00/10/d5/68/2201b6b9.jpg","nickname":"归零","note":"","ucode":"C99B8E93009A46","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":337277,"discussion_content":"可能没说清楚，再描述下：\n比如有个业务主题topicA，其有个消费者实例1从分区2拉取信息。同时它的位移管理_consumer_offsets是在分区5管理。\n那么消费者实例1去从分区2拉消息的时候怎么知道消息的位移呢？因为位移数据是在分区5保存的\n谢谢老师！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1608860490,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":269136,"user_name":"三万棵树","can_delete":false,"product_type":"c1","uid":1270449,"ip_address":"","ucode":"EB361BB4E09AE5","user_header":"https://static001.geekbang.org/account/avatar/00/13/62/b1/3d1fc497.jpg","comment_is_top":false,"comment_ctime":1608535905,"is_pvip":true,"replies":[{"id":"97625","content":"记下了您的反馈。后面我们会酌情优化","user_name":"作者回复","user_name_real":"胡夕","uid":"1288090","ctime":1608553355,"ip_address":"","comment_id":269136,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1608535905","product_id":100029201,"comment_content":"就。。。搞个图。展示一下。分区啊。提交啊。这些东西会更好我觉得。都是文字，云里雾里","like_count":0,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":512163,"discussion_content":"记下了您的反馈。后面我们会酌情优化","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1608553355,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":264238,"user_name":"黄婷婷","can_delete":false,"product_type":"c1","uid":1467134,"ip_address":"","ucode":"8B65636C9197A2","user_header":"https://static001.geekbang.org/account/avatar/00/16/62/fe/6d2fa6b9.jpg","comment_is_top":false,"comment_ctime":1606387141,"is_pvip":false,"replies":[{"id":"95844","content":"有消费者就有位移的概念了","user_name":"作者回复","user_name_real":"胡夕","uid":"1288090","ctime":1606438035,"ip_address":"","comment_id":264238,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1606387141","product_id":100029201,"comment_content":"老师，kafka几版本中开始出现消费者位移的","like_count":0,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":510477,"discussion_content":"有消费者就有位移的概念了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1606438035,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":264140,"user_name":"朴素柠檬c","can_delete":false,"product_type":"c1","uid":1547667,"ip_address":"","ucode":"2D4CBB70D801B1","user_header":"https://static001.geekbang.org/account/avatar/00/17/9d/93/4159edaa.jpg","comment_is_top":false,"comment_ctime":1606360713,"is_pvip":false,"replies":[{"id":"95852","content":"消费者位移是group级别的，不是单个消费者实例级别的","user_name":"作者回复","user_name_real":"胡夕","uid":"1288090","ctime":1606439626,"ip_address":"","comment_id":264140,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1606360713","product_id":100029201,"comment_content":"老师好，想问一下 位移主题的Key中没有消费者的标识，只有group id，怎么知道这个位移是组里面那个消费者实例的？","like_count":0,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":510437,"discussion_content":"消费者位移是group级别的，不是单个消费者实例级别的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1606439626,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":257847,"user_name":"Jagger","can_delete":false,"product_type":"c1","uid":1914208,"ip_address":"","ucode":"0BD13223AEE076","user_header":"https://static001.geekbang.org/account/avatar/00/1d/35/60/d3e723a7.jpg","comment_is_top":false,"comment_ctime":1604154167,"is_pvip":true,"replies":[{"id":"93965","content":"它和普通的Kafka主题是一样的，所谓的并发写入最终也只会由同一个LogManager对象执行写入","user_name":"作者回复","user_name_real":"胡夕","uid":"1288090","ctime":1604283395,"ip_address":"","comment_id":257847,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1604154167","product_id":100029201,"comment_content":"位移主题会不会出现并发写入的问题","like_count":0,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":508473,"discussion_content":"它和普通的Kafka主题是一样的，所谓的并发写入最终也只会由同一个LogManager对象执行写入","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1604283395,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":255574,"user_name":"北冥有人","can_delete":false,"product_type":"c1","uid":1077985,"ip_address":"","ucode":"708F6213BA905E","user_header":"https://static001.geekbang.org/account/avatar/00/10/72/e1/8670abf3.jpg","comment_is_top":false,"comment_ctime":1603375174,"is_pvip":false,"replies":[{"id":"93386","content":"如果是设置了自动提交位移，rebalance前时会自动提交位移的。","user_name":"作者回复","user_name_real":"胡夕","uid":"1288090","ctime":1603675600,"ip_address":"","comment_id":255574,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1603375174","product_id":100029201,"comment_content":"rebalance之后，offset 是不是都需要重新更新一遍？","like_count":0,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":507760,"discussion_content":"如果是设置了自动提交位移，rebalance前时会自动提交位移的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1603675600,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1547667,"avatar":"https://static001.geekbang.org/account/avatar/00/17/9d/93/4159edaa.jpg","nickname":"朴素柠檬c","note":"","ucode":"2D4CBB70D801B1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":329347,"discussion_content":"不需要  因为有组内协调者，毕竟主题便宜只维护了组id","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1606369587,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":255419,"user_name":"piboye","can_delete":false,"product_type":"c1","uid":1066752,"ip_address":"","ucode":"7CFD8712857A85","user_header":"https://static001.geekbang.org/account/avatar/00/10/47/00/3202bdf0.jpg","comment_is_top":false,"comment_ctime":1603339685,"is_pvip":true,"replies":[{"id":"93045","content":"你是碰到什么性能问题了吗？可以说下我们讨论下：）","user_name":"作者回复","user_name_real":"胡夕","uid":"1288090","ctime":1603353925,"ip_address":"","comment_id":255419,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1603339685","product_id":100029201,"comment_content":"消费者消费消息也是一次写消息的操作的了，这样性能损失不是比较严重吗？<br>有人用高性能的ssd 或者非易失性内存的方式优化吗","like_count":0,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":507710,"discussion_content":"你是碰到什么性能问题了吗？可以说下我们讨论下：）","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1603353925,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2355391,"avatar":"","nickname":"Geek_110f21","note":"","ucode":"67495EAEAF5D61","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":333693,"discussion_content":"写page cache效率很高","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1607595351,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":255416,"user_name":"piboye","can_delete":false,"product_type":"c1","uid":1066752,"ip_address":"","ucode":"7CFD8712857A85","user_header":"https://static001.geekbang.org/account/avatar/00/10/47/00/3202bdf0.jpg","comment_is_top":false,"comment_ctime":1603339405,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1603339405","product_id":100029201,"comment_content":"因为kafka 的写副本不是强一致模式，比zk 的化，会出现机器挂掉的时候， 重复消费消息。","like_count":0},{"had_liked":false,"id":254435,"user_name":"浮石沉木","can_delete":false,"product_type":"c1","uid":2223167,"ip_address":"","ucode":"D585768321B84A","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/mQddXC7nRiaKHTwdficicTB3bH0q5ic5UoSab51Omic7eyLBz0SNcvbLpQnNib7zP1yJFm7xxx4ia81iahfibRVnbTwHmhw/132","comment_is_top":false,"comment_ctime":1603115847,"is_pvip":true,"replies":[{"id":"93047","content":"目前只能重启broker","user_name":"作者回复","user_name_real":"胡夕","uid":"1288090","ctime":1603354030,"ip_address":"","comment_id":254435,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1603115847","product_id":100029201,"comment_content":"Log Cleaner挂了应该怎么办呀","like_count":0,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":507393,"discussion_content":"目前只能重启broker","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1603354030,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":253068,"user_name":"对与错","can_delete":false,"product_type":"c1","uid":1682027,"ip_address":"","ucode":"EF55733E3BD78B","user_header":"https://static001.geekbang.org/account/avatar/00/19/aa/6b/ab9a072a.jpg","comment_is_top":false,"comment_ctime":1602584278,"is_pvip":false,"replies":[{"id":"92487","content":"&quot;当前消费进度被更新为15，那中间消费失败的几条消息会随着重启消费者而重新消费吗？&quot; -- 不会<br><br>不会被删除，只是之前提交的进度会被新的进度废弃","user_name":"作者回复","user_name_real":"胡夕","uid":"1288090","ctime":1602636631,"ip_address":"","comment_id":253068,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1602584278","product_id":100029201,"comment_content":"请问kafka消费者使用手动提交位移的方式，当前消费进度为10，,然后消费几条失败之后，提交位移失败，后面消费新的消息成功之后，当前消费进度被更新为15，那中间消费失败的几条消息会随着重启消费者而重新消费吗？位移主题里面的消费进度会随着重启消费者而被删除吗?如果不被删除，那应该不会重新消费失败的那几条消息吧？","like_count":0,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":506963,"discussion_content":"&amp;quot;当前消费进度被更新为15，那中间消费失败的几条消息会随着重启消费者而重新消费吗？&amp;quot; -- 不会\n\n不会被删除，只是之前提交的进度会被新的进度废弃","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1602636631,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":251455,"user_name":"旋风","can_delete":false,"product_type":"c1","uid":1272591,"ip_address":"","ucode":"B9FF02969F4307","user_header":"https://static001.geekbang.org/account/avatar/00/13/6b/0f/293b999c.jpg","comment_is_top":false,"comment_ctime":1601571778,"is_pvip":false,"replies":[{"id":"92152","content":"可以使用任何监控线程的工具来查看，比如jconsole、jstack等","user_name":"作者回复","user_name_real":"胡夕","uid":"1288090","ctime":1602206925,"ip_address":"","comment_id":251455,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1601571778","product_id":100029201,"comment_content":"胡老师，请教您一个问题。log cleaner 这个进程，如何监控到它是否正常？","like_count":0,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":506500,"discussion_content":"可以使用任何监控线程的工具来查看，比如jconsole、jstack等","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1602206925,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":248977,"user_name":"hangqi","can_delete":false,"product_type":"c1","uid":1130733,"ip_address":"","ucode":"D17C7AC44262EB","user_header":"https://static001.geekbang.org/account/avatar/00/11/40/ed/b8b7ec16.jpg","comment_is_top":false,"comment_ctime":1600393958,"is_pvip":false,"replies":[{"id":"91433","content":"我查了一下，目前Kafka Connect没有现成的Hive Connector，你需要自己写程序实现，没有第三方的插件","user_name":"作者回复","user_name_real":"胡夕","uid":"1288090","ctime":1600523504,"ip_address":"","comment_id":248977,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1600393958","product_id":100029201,"comment_content":"老师我问一下kafka能从hive中查数据然后放到指定的topic中，供消费者消费吗？？？ <br>老师 我这里是想直接通过kafka读hive数据，不是通过第三方把hive数据查出来塞到kafka里。这样的话我可以通过spark,flink,jdbc都可以。","like_count":0,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":505790,"discussion_content":"我查了一下，目前Kafka Connect没有现成的Hive Connector，你需要自己写程序实现，没有第三方的插件","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1600523504,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":248802,"user_name":"hangqi","can_delete":false,"product_type":"c1","uid":1130733,"ip_address":"","ucode":"D17C7AC44262EB","user_header":"https://static001.geekbang.org/account/avatar/00/11/40/ed/b8b7ec16.jpg","comment_is_top":false,"comment_ctime":1600314760,"is_pvip":false,"replies":[{"id":"91368","content":"当然可以。你可以通过jdbc的方式访问hive，读取到数据之后写入到topic中","user_name":"作者回复","user_name_real":"胡夕","uid":"1288090","ctime":1600390708,"ip_address":"","comment_id":248802,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1600314760","product_id":100029201,"comment_content":"老师我问一下kafka能从hive中查数据然后放到指定的topic中，供消费者消费吗？？？","like_count":0,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":505745,"discussion_content":"当然可以。你可以通过jdbc的方式访问hive，读取到数据之后写入到topic中","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1600390708,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":246286,"user_name":"prepared","can_delete":false,"product_type":"c1","uid":1194853,"ip_address":"","ucode":"00E54A5C7CDCBE","user_header":"https://static001.geekbang.org/account/avatar/00/12/3b/65/3a4fc8cf.jpg","comment_is_top":false,"comment_ctime":1599261759,"is_pvip":false,"replies":[{"id":"90617","content":"距离完全摆脱ZooKeeper还有很长一段路","user_name":"作者回复","user_name_real":"胡夕","uid":"1288090","ctime":1599442345,"ip_address":"","comment_id":246286,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1599261759","product_id":100029201,"comment_content":"新版本为什么还是有 zookeeper存在？","like_count":0,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":505101,"discussion_content":"距离完全摆脱ZooKeeper还有很长一段路","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1599442345,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":246011,"user_name":"Vince","can_delete":false,"product_type":"c1","uid":1555695,"ip_address":"","ucode":"1D35072822C6F5","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/k5OsGRHWreVATJ1tKJBrUO4s4HaeSibRia4FgcmsElibriarMZHg6ntgK6srAUsCohricBsfWRib6zAOy9cDQwzVpjicg/132","comment_is_top":false,"comment_ctime":1599131975,"is_pvip":false,"replies":[{"id":"90470","content":"没太懂。。。“实现像声明型事务那样自动提交消息位移，但不想让它自动提交”  —— 这是怎么理解？","user_name":"作者回复","user_name_real":"胡夕","uid":"1288090","ctime":1599205292,"ip_address":"","comment_id":246011,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1599131975","product_id":100029201,"comment_content":"老师我想问一下，consumer能不能实现像声明型事务那样自动提交消息位移？我不想手动提交消息位移，也不想让它自动提交","like_count":0,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":505033,"discussion_content":"没太懂。。。“实现像声明型事务那样自动提交消息位移，但不想让它自动提交”  —— 这是怎么理解？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1599205292,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1555695,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/k5OsGRHWreVATJ1tKJBrUO4s4HaeSibRia4FgcmsElibriarMZHg6ntgK6srAUsCohricBsfWRib6zAOy9cDQwzVpjicg/132","nickname":"Vince","note":"","ucode":"1D35072822C6F5","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":307601,"discussion_content":"不好意思，最后一句不想自动提交是指consumer配置，可以忽略这句话","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1600694295,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":245947,"user_name":"李同学","can_delete":false,"product_type":"c1","uid":2143931,"ip_address":"","ucode":"DE69BAB9C27756","user_header":"https://static001.geekbang.org/account/avatar/00/20/b6/bb/fa825992.jpg","comment_is_top":false,"comment_ctime":1599118547,"is_pvip":true,"replies":[{"id":"90467","content":"挂掉了会开启rebalance，其他分区也会暂时无法消息。下次启动回来后位移是多少取决于consumer rebalance之前提交的位移是多少","user_name":"作者回复","user_name_real":"胡夕","uid":"1288090","ctime":1599205079,"ip_address":"","comment_id":245947,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1599118547","product_id":100029201,"comment_content":"老师您好，offsets分为数据的偏移量和消费者的偏移量，如果同一个groupid下有20个分区，同groupid下20个消费者指定分区消费分区数据，如果现在消费到了offsets为10的数据，这条数据在9分区上，offsets为11的数据在10分区上，还没有消费，但是对应的消费者挂掉了，其他分区还会正常消费吗？9分区，10分区的消费者下次启动的时候offsets应该是多少呢？","like_count":0,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":505015,"discussion_content":"挂掉了会开启rebalance，其他分区也会暂时无法消息。下次启动回来后位移是多少取决于consumer rebalance之前提交的位移是多少","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1599205079,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":240168,"user_name":"Gavin","can_delete":false,"product_type":"c1","uid":1616970,"ip_address":"","ucode":"A5735665E303FD","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/2UXuSevhia94o9Eky4OfMuSictaldxcqpjGuvRCOcvjIIoVBAENLEZbv2lgwmwC8icK1ZrUcneNtiaeFBV8MT3uzNg/132","comment_is_top":false,"comment_ctime":1596775825,"is_pvip":false,"replies":[{"id":"88975","content":"如果是自动提交位移，那么就不会判断是否消费了新的消息而是“无脑”提交位移。如果要实现你所说的场景，可以使用手动提交","user_name":"作者回复","user_name_real":"胡夕","uid":"1288090","ctime":1597111555,"ip_address":"","comment_id":240168,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1596775825","product_id":100029201,"comment_content":"我们来举个极端一点的例子。假设 Consumer 当前消费到了某个主题的最新一条消息，位移是 100，之后该主题没有任何新消息产生，故 Consumer 无消息可消费了，所以位移永远保持在 100。由于是自动提交位移，位移主题中会不停地写入位移 =100 的消息。显然 Kafka 只需要保留这类消息中的最新一条就可以了，之前的消息都是可以删除的。这就要求 Kafka 必须要有针对位移主题消息特点的消息删除策略，否则这种消息会越来越多，最终撑爆整个磁盘。<br><br>这个为什么要不停的写位移信息，在有消费者消费消息再写不就可以了？","like_count":0,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":503361,"discussion_content":"如果是自动提交位移，那么就不会判断是否消费了新的消息而是“无脑”提交位移。如果要实现你所说的场景，可以使用手动提交","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1597111555,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":239318,"user_name":"多襄丸","can_delete":false,"product_type":"c1","uid":1074310,"ip_address":"","ucode":"1AA1497C5A293C","user_header":"https://static001.geekbang.org/account/avatar/00/10/64/86/f5a9403a.jpg","comment_is_top":false,"comment_ctime":1596503072,"is_pvip":false,"replies":[{"id":"88411","content":"1.  KafkaConsumer有相应的committed方法可以用来获取相应的位移<br>2. 不太懂这个问题的意思。不过应该没有什么影响<br>3. 配置了cleanup.policy=compact的主题都会执行compaction。既然选择了compaction，那么说明消息数据的确是会被覆盖的，因此也不算消息丢失","user_name":"作者回复","user_name_real":"胡夕","uid":"1288090","ctime":1596519307,"ip_address":"","comment_id":239318,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1596503072","product_id":100029201,"comment_content":"胡老师，看到您回复给其他同学说：同一个consumer group 对同一个topic的不同partition消费的数据，会被提交到offset topic 下的同一个partition。<br><br>1. 我想问，那这样多个consumer消费的时候，怎么精确拿到自己的offset的呢？我看您说Coordinator实现的，协调器那一节会有offset消费原理介绍吧。<br><br>2. 如果consumer每次消费后始终自己保存保存offset，消费前从自己保存的offset 开始消费。<br>对于broker 对 offset主题的管理，以及 正在消费的这个topic的partition，会有什么影响吗？<br><br>3. 这个 Compact 会对除了 offset 主题之外的，其他topic 数据做删除吗？<br>如果也对其他topic的数据做压实的话，那我前不久写进去的数据不是被合并掉了吗？<br>即便是对已经关闭的数据文件（应该还有索引文件）压实后，我想再实现一次回放，对于压实后的数据文件实现回访，不是会有数据丢失嘛？<br><br>谢谢胡老师！","like_count":0,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":503060,"discussion_content":"1.  KafkaConsumer有相应的committed方法可以用来获取相应的位移\n2. 不太懂这个问题的意思。不过应该没有什么影响\n3. 配置了cleanup.policy=compact的主题都会执行compaction。既然选择了compaction，那么说明消息数据的确是会被覆盖的，因此也不算消息丢失","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1596519307,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1074310,"avatar":"https://static001.geekbang.org/account/avatar/00/10/64/86/f5a9403a.jpg","nickname":"多襄丸","note":"","ucode":"1AA1497C5A293C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":296374,"discussion_content":"谢谢胡老师！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1596525194,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":234322,"user_name":"张洋","can_delete":false,"product_type":"c1","uid":1182914,"ip_address":"","ucode":"549BE5DEEF8417","user_header":"https://static001.geekbang.org/account/avatar/00/12/0c/c2/bad34a50.jpg","comment_is_top":false,"comment_ctime":1594643846,"is_pvip":true,"replies":[{"id":"86614","content":"Math.abs(groupId.hashCode % 50)。按照这个公式计算的","user_name":"作者回复","user_name_real":"胡夕","uid":"1288090","ctime":1594781979,"ip_address":"","comment_id":234322,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1594643846","product_id":100029201,"comment_content":"老师 关于消费者组还有一个疑问<br>就是计算coordinator的时候 首先通过消费者组的GroupId进行hash操作，计算出分区号，然后找到leader所在的broker就可以了。那么关于消费者组的消息存储，也是这个算法吗，意思就是每个消费者组的位移都会路由到一个分区上 ？<br>还是另外一种 Consumer Group 下的每个Consumer Instance 通过对key（topic + partitionId + groupId）进行hash计算进行路由的呢？","like_count":0,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":501352,"discussion_content":"Math.abs(groupId.hashCode % 50)。按照这个公式计算的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1594781979,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":231129,"user_name":"J.Smile","can_delete":false,"product_type":"c1","uid":1336475,"ip_address":"","ucode":"C4D98DFDBF7584","user_header":"https://static001.geekbang.org/account/avatar/00/14/64/9b/0b578b08.jpg","comment_is_top":false,"comment_ctime":1593590113,"is_pvip":false,"replies":[{"id":"85362","content":"jstack下进程，看下对应的cleaner线程还在不在。很多时候是因为程序没有捕获的异常挂掉的。我们很难令一个线程直接挂掉","user_name":"作者回复","user_name_real":"胡夕","uid":"1288090","ctime":1593606957,"ip_address":"","comment_id":231129,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1593590113","product_id":100029201,"comment_content":"“我建议你去检查一下 Log Cleaner 线程的状态，通常都是这个线程挂掉了导致的。”<br>-------------------------------------------------<br>老师，可以说下这个线程状态怎么看吗？如果挂掉怎么重启呢？还有就是什么原因导致挂掉？比如我可以自己去kill掉吗","like_count":0,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":500168,"discussion_content":"jstack下进程，看下对应的cleaner线程还在不在。很多时候是因为程序没有捕获的异常挂掉的。我们很难令一个线程直接挂掉","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1593606957,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":230437,"user_name":"J.Smile","can_delete":false,"product_type":"c1","uid":1336475,"ip_address":"","ucode":"C4D98DFDBF7584","user_header":"https://static001.geekbang.org/account/avatar/00/14/64/9b/0b578b08.jpg","comment_is_top":false,"comment_ctime":1593391292,"is_pvip":false,"replies":[{"id":"85045","content":"“同一个分区X的同一个消费位移”  ---- 不尽然，是同一个__consumer_offsets分区下的不同消息，消息里面保存了订阅分区的不同位移值","user_name":"作者回复","user_name_real":"胡夕","uid":"1288090","ctime":1593395162,"ip_address":"","comment_id":230437,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1593391292","product_id":100029201,"comment_content":"“通常来说，同一个group下的所有消费者提交的位移数据保存在位移主题的同一个分区下”<br>——————————————————<br>老师，按照您这个说的意思，同一个group的多个不同consumer获取到的是位移主题中同一个分区X的同一个消费位移。不同的group中的consumer获取不到分区X的消费位移，那么如果发生reblance也同样不可能获取到吗？","like_count":0,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":499889,"discussion_content":"“同一个分区X的同一个消费位移”  ---- 不尽然，是同一个__consumer_offsets分区下的不同消息，消息里面保存了订阅分区的不同位移值","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1593395162,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":230143,"user_name":"cocos","can_delete":false,"product_type":"c1","uid":1016599,"ip_address":"","ucode":"6DCA74033FFBEA","user_header":"https://static001.geekbang.org/account/avatar/00/0f/83/17/74c6e081.jpg","comment_is_top":false,"comment_ctime":1593274779,"is_pvip":false,"replies":[{"id":"84954","content":"Consumer默认提供至少一次处理语义。这就是说，只要你不是先提交位移再消息消息，怎么都不会丢消息的：）","user_name":"作者回复","user_name_real":"胡夕","uid":"1288090","ctime":1593305114,"ip_address":"","comment_id":230143,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1593274779","product_id":100029201,"comment_content":"老师enable.auto.commit=true，如果是在poll时根据间隔时间提交位移，那只要我处理完拉到的消息再调用poll是不是肯定不会丢消息，最多会重复消费？","like_count":0,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":499778,"discussion_content":"Consumer默认提供至少一次处理语义。这就是说，只要你不是先提交位移再消息消息，怎么都不会丢消息的：）","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1593305114,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":225692,"user_name":"密码123456","can_delete":false,"product_type":"c1","uid":1126593,"ip_address":"","ucode":"9889463CC0EA71","user_header":"https://static001.geekbang.org/account/avatar/00/11/30/c1/2dde6700.jpg","comment_is_top":false,"comment_ctime":1591835755,"is_pvip":false,"replies":[{"id":"83191","content":"但是会规避zookeeper的最大弊端：无法承担大批量的写操作","user_name":"作者回复","user_name_real":"胡夕","uid":"1288090","ctime":1591871345,"ip_address":"","comment_id":225692,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1591835755","product_id":100029201,"comment_content":"如果不如zookeeper劣势的话，我觉得有2个。第一个是占用额外的资源，比如主题，分区，磁盘空间，还有删除线程。第二个是，如果消费者设置的参数，不是最新读且自动提交。可能会重复消费。(这个也是纯猜测，因为有时间间隔提交。)","like_count":0,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":497949,"discussion_content":"但是会规避zookeeper的最大弊端：无法承担大批量的写操作","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1591871345,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":221235,"user_name":"妥协","can_delete":false,"product_type":"c1","uid":1249656,"ip_address":"","ucode":"7201DFE9C12669","user_header":"https://static001.geekbang.org/account/avatar/00/13/11/78/4f0cd172.jpg","comment_is_top":false,"comment_ctime":1590453757,"is_pvip":false,"replies":[{"id":"81593","content":"Kafka支持位移重置（seek方法）","user_name":"作者回复","user_name_real":"胡夕","uid":"1288090","ctime":1590457304,"ip_address":"","comment_id":221235,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1590453757","product_id":100029201,"comment_content":"如果消费端因为存储或者其他故障导致之前消费的记录丢失，需要回退，重新消费。这种场景，kafka支持重置消费进度吗？合适的解决办法是什么","like_count":0,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":496392,"discussion_content":"Kafka支持位移重置（seek方法）","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1590457304,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":213955,"user_name":"魔都浪子","can_delete":false,"product_type":"c1","uid":1177859,"ip_address":"","ucode":"8301440705105A","user_header":"https://static001.geekbang.org/account/avatar/00/11/f9/03/439bdb70.jpg","comment_is_top":false,"comment_ctime":1588598608,"is_pvip":false,"replies":[{"id":"79345","content":"是的，__consumer_offsets是compact类型的，每个key只选择当前最新的值作为有效值","user_name":"作者回复","user_name_real":"胡夕","uid":"1288090","ctime":1588725541,"ip_address":"","comment_id":213955,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1588598608","product_id":100029201,"comment_content":"同一个KEY的消息新旧有很多条， consumer 重启的时候，是如何快速读到对应 partition 最新 offset 的?<br>","like_count":0,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":493911,"discussion_content":"是的，__consumer_offsets是compact类型的，每个key只选择当前最新的值作为有效值","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1588725541,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":213550,"user_name":"李奕慧","can_delete":false,"product_type":"c1","uid":1201005,"ip_address":"","ucode":"0D8871ED38859C","user_header":"https://static001.geekbang.org/account/avatar/00/12/53/6d/c3828950.jpg","comment_is_top":false,"comment_ctime":1588473239,"is_pvip":false,"replies":[{"id":"79349","content":"“是如何做到快速读?” ---- 做不到快速随机读。Kafka只是能被当成存储使用，但不能完全替代关系型数据库<br><br>“是如何快速读到对应 partition 最新 offset 的” --- 这个是靠内部topic：__consumer_offsets完成的。<br><br>Connector相关topic与__consumer_offsets原理类似，发送一个value=null的消息表示这个Connector对应的消费者组可以被删除了","user_name":"作者回复","user_name_real":"胡夕","uid":"1288090","ctime":1588725993,"ip_address":"","comment_id":213550,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1588473239","product_id":100029201,"comment_content":"Kafka Connector 相关默认配置<br>group.id=connect-cluster<br>offset.storage.topic=connect-offsets (默认副本 1，分区 25)<br>config.storage.topic=connect-configs (默认副本 5，分区 25)<br><br>看了下 connect-configs 的管理也和 __consumer_offsets 差不多，会存储 connector 元数据信息, 删除的时候也是发一条空的消息体。<br><br>有些不明白的地方是, 类似这种情况下如果拿 topic 当 DB 存储, 是如何做到快速读的呢？<br>写没有问题(append 写)<br><br>比如 consumer 重启的时候，是如何快速读到对应 partition 最新 offset 的?<br>Connectors 相关 topic 同理(为何最后发了一个 null 信息，就知道这个 connector 任务删除了)<br><br>老师可否在这个专栏回复下，或者在源码专栏顺便讲解下。","like_count":0,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":493811,"discussion_content":"“是如何做到快速读?” ---- 做不到快速随机读。Kafka只是能被当成存储使用，但不能完全替代关系型数据库\n\n“是如何快速读到对应 partition 最新 offset 的” --- 这个是靠内部topic：__consumer_offsets完成的。\n\nConnector相关topic与__consumer_offsets原理类似，发送一个value=null的消息表示这个Connector对应的消费者组可以被删除了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1588725993,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1201005,"avatar":"https://static001.geekbang.org/account/avatar/00/12/53/6d/c3828950.jpg","nickname":"李奕慧","note":"","ucode":"0D8871ED38859C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":258758,"discussion_content":"可能我问题表达的不够清楚。\n\n做不到快速读，那么是怎么尽量快速读到\ntopic 对应在__consumer_offsets对应最后一个 offset值或者 null值的啊？\n\nmsg key中含有时间戳？可以根据时间戳大致扫到内容范围，全量扫描一遍或者类似二分的方式读出？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1588727197,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":207774,"user_name":"妥协","can_delete":false,"product_type":"c1","uid":1249656,"ip_address":"","ucode":"7201DFE9C12669","user_header":"https://static001.geekbang.org/account/avatar/00/13/11/78/4f0cd172.jpg","comment_is_top":false,"comment_ctime":1587177726,"is_pvip":false,"replies":[{"id":"77599","content":"1. 不是从ZooKeepe中读取位移，而是从__consumer_offsets中；<br>2. 位移的保存没有consumer这一级的信息，因为不需要。Kafka只关心某个group消费某分区的进度（即位移），不关心这个分区的进度是被哪些consumer完成的<br>3. rebalance后某consumer拿到分区位移进度，然后从该位移处继续消费<br>4. 如果不讨论2.4引入的static member的话，那么coonsumer重启后会重新生成一个consumer id","user_name":"作者回复","user_name_real":"胡夕","uid":"1288090","ctime":1587220509,"ip_address":"","comment_id":207774,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1587177726","product_id":100029201,"comment_content":"请教两个问题：1、当 Consumer 重启后，它能自动从 ZooKeeper 中读取位移数据，从而在上次消费截止的地方继续消费。位移主题保存&lt;Group ID，主题名，分区号 &gt;，只到group一级，没有到Consumer一级，怎么能做到重启后，能在上次消费的地方继续消费？？还是说，Consumer重启后，触发rebalance，重新分配主题分区，继续消费是指新分配主题？<br>2、之前提过，producer提交消息精确一次，跨会话不能做到，因为重启后，重新分配producer ID，没法去重。那Consumer重启后也是重新分配Consumer ID吗？？如果不是重新分配Consumer ID，那producer也能做到跨会话一致吧？","like_count":0,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":492238,"discussion_content":"1. 不是从ZooKeepe中读取位移，而是从__consumer_offsets中；\n2. 位移的保存没有consumer这一级的信息，因为不需要。Kafka只关心某个group消费某分区的进度（即位移），不关心这个分区的进度是被哪些consumer完成的\n3. rebalance后某consumer拿到分区位移进度，然后从该位移处继续消费\n4. 如果不讨论2.4引入的static member的话，那么coonsumer重启后会重新生成一个consumer id","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1587220509,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":201299,"user_name":"Sic Pavis","can_delete":false,"product_type":"c1","uid":1106088,"ip_address":"","ucode":"48B5F0118347C8","user_header":"https://static001.geekbang.org/account/avatar/00/10/e0/a8/4e739cf6.jpg","comment_is_top":false,"comment_ctime":1585747431,"is_pvip":false,"replies":[{"id":"75359","content":"不会啊。consumer能否拉到什么数据是由broker端控制的","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1585791917,"ip_address":"","comment_id":201299,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1585747431","product_id":100029201,"comment_content":"没看明白这个位移是如何使用的。<br><br>这个应该是在broker端记录当前topic某一个分区下的消费位移，然后也是用一个特殊的topic来实现，那么正常业务的broker端里面是全部订阅了对应的位移topic来获取位移的吗？如果这样不是会出现还没拉取到位移数据，消费者就过来请求数据的情况吗？ 这样位移数据性能不是很低效吗","like_count":0,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":490293,"discussion_content":"不会啊。consumer能否拉到什么数据是由broker端控制的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585791917,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":190258,"user_name":"易天行","can_delete":false,"product_type":"c1","uid":1583489,"ip_address":"","ucode":"1A2004CE3D485B","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/IIbpOZiahJl6WTCBp64TyvtMJ0l7qC9Z17Xbat3adAVOwx9l8hCTdzB0xzWXKofp2n2nrkOw9iaYicH5RzpFz03Pw/132","comment_is_top":false,"comment_ctime":1584624284,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1584624284","product_id":100029201,"comment_content":"学习中，","like_count":0},{"had_liked":false,"id":131198,"user_name":"DFighting","can_delete":false,"product_type":"c1","uid":1233193,"ip_address":"","ucode":"F3BA2426FF8582","user_header":"https://static001.geekbang.org/account/avatar/00/12/d1/29/1b1234ed.jpg","comment_is_top":false,"comment_ctime":1567669254,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1567669254","product_id":100029201,"comment_content":"分区的位移信息需要保证数据一致性吧，万一丢失了怎么办？替换zk难到自己也实现zab分布式一致性协议？还是说有什么地方可以恢复位移丢失的数据？或者是支持at-least-once语义？关于写性能的提升，至少有一点吧，放在自己的topic里，写zk的网络时延应该会减少不少吧。","like_count":0},{"had_liked":false,"id":130381,"user_name":"giantbroom","can_delete":false,"product_type":"c1","uid":1059516,"ip_address":"","ucode":"7258784193C302","user_header":"","comment_is_top":false,"comment_ctime":1567437956,"is_pvip":true,"discussion_count":1,"race_medal":0,"score":"1567437956","product_id":100029201,"comment_content":"其实无脑的把redis抓过来写位移主题信息不是挺好么，自动去重，自动持久化。另外，两个下划线，这位开发老兄是不是有很深的C&#47;C++背景 :)","like_count":0,"discussions":[{"author":{"id":2700925,"avatar":"https://static001.geekbang.org/account/avatar/00/29/36/7d/eab0d26a.jpg","nickname":"丹尼尔-雪碧","note":"","ucode":"F098396F4B7500","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":575711,"discussion_content":"使用redis的时候时刻记住redis不可靠呀","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1655045702,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":124480,"user_name":"钱","can_delete":false,"product_type":"c1","uid":1009652,"ip_address":"","ucode":"2C92A243A463D4","user_header":"https://static001.geekbang.org/account/avatar/00/0f/67/f4/9a1feb59.jpg","comment_is_top":false,"comment_ctime":1565910582,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1565910582","product_id":100029201,"comment_content":"1：位移主题？<br>1-1：是kafka的一个自定义主题，本质和普通主题没什么区别<br>1-2：主要作用是为了保存kafka中各种consumer的位移信息<br>1-3：位移主题的消息格式有kafka定义，其中key的格式如下——&lt;groupId,主题名,分区号&gt;，消息体比较复杂，但可以简单认为它注意是保存了一个位移信息<br>1-4：位移主题，有三种格式，<br>1-4-1：用于管理consumer的位移<br>1-4-2：用于保存 consumer group 的信息<br>1-4-3：用于删除过期的group位移及消息<br>1-5：当 Kafka 集群中的第一个 Consumer 程序启动时，Kafka 会自动创建位移主题。<br>1-6：如果位移主题是 Kafka 自动创建的，那么该主题的分区数是 50，副本数是 3。建议不要手动创建<br>1-7：删除也有两种方式，自动删除和手动删除，自动删除不灵活，手动删除更可控<br>1-8：引入位移主题的原因是，zookeeper不合适频繁的写入，kafka的设计天然支持快速持久化和高吞出量<br>1-10：位移主题，通常不需要认为干预，让其自我管理就行了<br><br>如果不巧存储kafka位移主题信息的分区的broker都宕机了，那其他的主题消息是否也无法消费啦？<br><br>另外，手动写位移主题的信息，如果不小心将格式弄错了，会导致broker的崩溃，那broker是不是设计的有些脆弱？","like_count":0},{"had_liked":false,"id":114805,"user_name":"其实我很屌","can_delete":false,"product_type":"c1","uid":1138722,"ip_address":"","ucode":"2B75EAAD748A60","user_header":"https://static001.geekbang.org/account/avatar/00/11/60/22/92284df2.jpg","comment_is_top":false,"comment_ctime":1563410655,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"1563410655","product_id":100029201,"comment_content":"位移主题默认副本是1，建议在正文中提示一下。这个参数很要命","like_count":0,"discussions":[{"author":{"id":1521451,"avatar":"https://static001.geekbang.org/account/avatar/00/17/37/2b/b32f1d66.jpg","nickname":"Ball","note":"","ucode":"1EE949E68D84CA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":129014,"discussion_content":"能解释一下设置为 1 有什么后果吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578669252,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1618482,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/32/d26f92c5.jpg","nickname":"墨小雨的猫","note":"","ucode":"A14EBA5949837D","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1521451,"avatar":"https://static001.geekbang.org/account/avatar/00/17/37/2b/b32f1d66.jpg","nickname":"Ball","note":"","ucode":"1EE949E68D84CA","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":211229,"discussion_content":"副本是1，一旦位移主题分区所在的服务器出现故障，偏移量的数据就会缺失一部分，会直接影响服务的正常使用","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1584814347,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":129014,"ip_address":""},"score":211229,"extra":""}]}]},{"had_liked":false,"id":113259,"user_name":"子华","can_delete":false,"product_type":"c1","uid":1117804,"ip_address":"","ucode":"1611EE58EC2042","user_header":"https://static001.geekbang.org/account/avatar/00/11/0e/6c/aebf4466.jpg","comment_is_top":false,"comment_ctime":1562926424,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1562926424","product_id":100029201,"comment_content":"你好，请教下。发现线上offsets.topic.replication.factor=1  然后通过官网教程 https:&#47;&#47;kafka.apache.org&#47;documentation&#47;#basic_ops_increase_replication_factor 在线调整了位移主题的分区数3 ，也反馈成功了。但是还是不知道 这种调整方式 对于 __consumer_offsets 这种特殊主题是否有效。<br><br>因为发现 比如 __consumer_offsets-46 这个主题，之前leader的文件有<br>-rw-rw-r-- 1 www www        0 7月  10 14:59 00000000000000000000.index<br>-rw-rw-r-- 1 www www     2620 7月  10 14:59 00000000000000000000.log<br>-rw-rw-r-- 1 www www       12 7月  10 14:59 00000000000000000000.timeindex<br>-rw-rw-r-- 1 www www       10 6月  18 18:02 00000000000000000189.snapshot<br>-rw-rw-r-- 1 www www       10 6月  20 17:59 00000000000000000203.snapshot<br>-rw-rw-r-- 1 www www       10 7月   3 15:00 00000000000000000224.snapshot<br>-rw-rw-r-- 1 www www 10485760 7月  12 18:11 00000000000000065983.index<br>-rw-rw-r-- 1 www www  3091267 7月  12 18:11 00000000000000065983.log<br>-rw-rw-r-- 1 www www       10 7月  10 15:00 00000000000000065983.snapshot<br>-rw-rw-r-- 1 www www 10485756 7月  12 18:11 00000000000000065983.timeindex<br>-rw-rw-r-- 1 www www       28 7月  12 17:14 leader-epoch-checkpoint<br><br>但是同步后两个副本文件大概如下<br>-rw-rw-r-- 1 www www 10485760 7月  12 18:09 00000000000000000000.index<br>-rw-rw-r-- 1 www www  3093887 7月  12 18:11 00000000000000000000.log<br>-rw-rw-r-- 1 www www 10485756 7月  12 18:09 00000000000000000000.timeindex<br>-rw-rw-r-- 1 www www       23 7月  12 17:14 leader-epoch-checkpoint<br><br>很明显同步后的副本没有00000000000000065983.index这个文件，但是通过describle 命令看 都是Isr状态<br>Topic: __consumer_offsets\tPartition: 46\tLeader: 0\tReplicas: 0,1,2\tIsr: 0,2,1<br><br>不知道这种状态是否OK？","like_count":0},{"had_liked":false,"id":112171,"user_name":"aof","can_delete":false,"product_type":"c1","uid":1062864,"ip_address":"","ucode":"5815D63C4926BC","user_header":"https://static001.geekbang.org/account/avatar/00/10/37/d0/26975fba.jpg","comment_is_top":false,"comment_ctime":1562677665,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1562677665","product_id":100029201,"comment_content":"老师能解释一下zk不适合频繁读写的原理吗？","like_count":0,"discussions":[{"author":{"id":1618482,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/32/d26f92c5.jpg","nickname":"墨小雨的猫","note":"","ucode":"A14EBA5949837D","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":211230,"discussion_content":"不适合频繁写有个原因是，zk的每次修改操作都会发起仲裁，这对写操作的性能的影响挺大的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584814487,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":112166,"user_name":"演技熊","can_delete":false,"product_type":"c1","uid":1041915,"ip_address":"","ucode":"0C73B00E66A82F","user_header":"https://static001.geekbang.org/account/avatar/00/0f/e5/fb/77035151.jpg","comment_is_top":false,"comment_ctime":1562677187,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1562677187","product_id":100029201,"comment_content":"个人想法，与 ZK 方案相比，写入到自身集群中使 Kafka 集群本身变成了一个有状态的服务，不利于服务本身的扩展吧，如果其中某个 broker 宕机，可能会对 offset 的提交有影响。<br><br>另外，手动提交 offset 在一些场景下比较有用。<br><br>比如有10条消息，<br>offset   key <br>1          A<br>2         B<br>3          C<br>4         A<br>5          B<br>6          C<br>7          A<br>8          A<br>9          A<br>10         B<br><br>如果我对同样 Key 的消费顺序有严格要求，那么我必须分成 3 组来分别顺序处理，<br>A 组<br>1          A<br>4         A<br>7          A<br>8          A<br>9          A<br><br>B组<br>2         B<br>5          B<br>10         B<br><br>C组<br>3          C<br>6          C<br><br>假如每个消息的处理时间都差不多的话，那么很有可能 B 组的 10 号比 A 要早处理完，那么这时如果自动提交 offset ，很可能会导致 A 组产生消息丢失风险。<br>除非 10 条消息完全串行处理，但是这是没有必要的，分成三组处理总时间取决于处理最久的那一组。<br><br><br>","like_count":0},{"had_liked":false,"id":112053,"user_name":"无菇朋友","can_delete":false,"product_type":"c1","uid":1035562,"ip_address":"","ucode":"80482C5F0464A3","user_header":"https://static001.geekbang.org/account/avatar/00/0f/cd/2a/bdbed6ed.jpg","comment_is_top":false,"comment_ctime":1562660770,"is_pvip":false,"discussion_count":3,"race_medal":0,"score":"1562660770","product_id":100029201,"comment_content":"胡老师，刚接触kafka，很多不了解的地方，有个问题：为什么offset需要由consumer端来提交，比如有这么一种情况：<br>消费者组c1去消费某个topic的分区0，从0开始消费，一次拉取了10条消息，那么consumer拉取成功后，回给broker一个ack，broker收到ack后，往__consumer_offsets主题里写入消息，比如c1-topic-0-10","like_count":0,"discussions":[{"author":{"id":1521451,"avatar":"https://static001.geekbang.org/account/avatar/00/17/37/2b/b32f1d66.jpg","nickname":"Ball","note":"","ucode":"1EE949E68D84CA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":129029,"discussion_content":"拉取成功不等于消费成功","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578669459,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1009260,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/66/6c/4a68a916.jpg","nickname":"双叶","note":"","ucode":"6DA1D477F9D580","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":1529,"discussion_content":"如果要实现至少一次的语义的话，就不能在拉去成功之后就提交，必须在处理完了之后提交，什么时候处理完只有 consumer 知道","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1562676217,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1035562,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/cd/2a/bdbed6ed.jpg","nickname":"无菇朋友","note":"","ucode":"80482C5F0464A3","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1009260,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/66/6c/4a68a916.jpg","nickname":"双叶","note":"","ucode":"6DA1D477F9D580","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":1612,"discussion_content":"感谢您的回复","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1562730263,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":1529,"ip_address":""},"score":1612,"extra":""}]}]},{"had_liked":false,"id":111938,"user_name":"lmtoo","can_delete":false,"product_type":"c1","uid":1133918,"ip_address":"","ucode":"FCD5B9C941D448","user_header":"https://static001.geekbang.org/account/avatar/00/11/4d/5e/c5c62933.jpg","comment_is_top":false,"comment_ctime":1562640057,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1562640057","product_id":100029201,"comment_content":"我对这个compact的过程比较感兴趣，是拷贝原始日志最新的消息到一个新的日志文件，还是直接在原始日志上做删除操作？这个工作量应该非常大","like_count":0},{"had_liked":false,"id":111931,"user_name":"吃饭饭","can_delete":false,"product_type":"c1","uid":1231549,"ip_address":"","ucode":"95CFA07CDA2957","user_header":"https://static001.geekbang.org/account/avatar/00/12/ca/bd/a51ae4b2.jpg","comment_is_top":false,"comment_ctime":1562639254,"is_pvip":false,"replies":[{"id":"40846","content":"不是。位移提交这件事从设计到实现与ZooKeeper完全没有关联了。","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1562721998,"ip_address":"","comment_id":111931,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1562639254","product_id":100029201,"comment_content":"__consumer_offsets 这个主题的元数据信息还是会在 Zookeeper 中注册吧？只是位移的信息变更存储在了 Kafka 中吗？","like_count":0,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":457500,"discussion_content":"不是。位移提交这件事从设计到实现与ZooKeeper完全没有关联了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1562721998,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":111868,"user_name":"蒙开强","can_delete":false,"product_type":"c1","uid":1317706,"ip_address":"","ucode":"61B3183781B9F7","user_header":"https://static001.geekbang.org/account/avatar/00/14/1b/4a/f9df2d06.jpg","comment_is_top":false,"comment_ctime":1562632959,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1562632959","product_id":100029201,"comment_content":"老师，你好，如果某条信息消费失败了，那我重新消费那可以获取刚刚失败信息的offset么，如果放zk，那是可以获得最大消费的offset的","like_count":0},{"had_liked":false,"id":111847,"user_name":"曾轼麟","can_delete":false,"product_type":"c1","uid":1451391,"ip_address":"","ucode":"D418371AC11270","user_header":"https://static001.geekbang.org/account/avatar/00/16/25/7f/473d5a77.jpg","comment_is_top":false,"comment_ctime":1562631000,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"1562631000","product_id":100029201,"comment_content":"zookeeper是HA模式，如果使用topic就没法做到数据强一致性","like_count":0,"discussions":[{"author":{"id":2298937,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eoCl6Nxf9oW9tBOaJlH7JqNIiabF8eqMqK1uRhwabXBU3j6kyjVpI2fjm5nZKoZTUA7Cpicb7ajSkrA/132","nickname":"loma","note":"","ucode":"C5CFC3F0D06000","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":345491,"discussion_content":"数据必须提交的模式ack=all 且kafka 读写都在master上 能够保证数据强一致性","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1611727817,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1177859,"avatar":"https://static001.geekbang.org/account/avatar/00/11/f9/03/439bdb70.jpg","nickname":"魔都浪子","note":"","ucode":"8301440705105A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":257667,"discussion_content":"同一个KEY的消息有多条，consumer 重启的时候，是如何快速读到对应 partition 最新 offset 的?\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1588598551,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]}]}