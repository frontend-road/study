{"id":158159,"title":"26 | 源码剖析：发送数据","content":"<p><strong>课件和Demo地址</strong><br>\n<a href=\"https://gitee.com/geektime-geekbang/geek_netty\">https://gitee.com/geektime-geekbang/geek_netty</a></p>","comments":[{"had_liked":false,"id":146533,"user_name":"Geek_t0ekmu","can_delete":false,"product_type":"c3","uid":1180843,"ip_address":"","ucode":"0EDF72DECDDDCE","user_header":"https://static001.geekbang.org/account/avatar/00/12/04/ab/23ae8d4f.jpg","comment_is_top":false,"comment_ctime":1572569677,"is_pvip":false,"replies":[{"id":57247,"content":"最后打包给你们，然后也会把你们的问题全部汇总起来做个小册子给你们，这个月录课时间太紧，所以还没整理好，等弄好了，我回头评论通知你活着想别的方式通知你们","user_name":"作者回复","user_name_real":"Geek_9bc307","uid":1638649,"ctime":1573048094,"ip_address":"","comment_id":146533,"utype":1}],"discussion_count":2,"race_medal":0,"score":2,"product_id":100036701,"comment_content":"课程中老师加了一些关键注释的netty源码是否给开放下载呢？","like_count":5,"discussions":[{"author":{"id":1638649,"avatar":"https://static001.geekbang.org/account/avatar/00/19/00/f9/44a3e5bd.jpg","nickname":"傅健","note":"","ucode":"5EA8BB26F5B036","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":472905,"discussion_content":"最后打包给你们，然后也会把你们的问题全部汇总起来做个小册子给你们，这个月录课时间太紧，所以还没整理好，等弄好了，我回头评论通知你活着想别的方式通知你们","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573048094,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1180843,"avatar":"https://static001.geekbang.org/account/avatar/00/12/04/ab/23ae8d4f.jpg","nickname":"Geek_t0ekmu","note":"","ucode":"0EDF72DECDDDCE","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":45554,"discussion_content":"谢谢，辛苦了老师","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573048564,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":147034,"user_name":"李博","can_delete":false,"product_type":"c3","uid":1119919,"ip_address":"","ucode":"04C2DE916B84AB","user_header":"https://static001.geekbang.org/account/avatar/00/11/16/af/bada0f59.jpg","comment_is_top":false,"comment_ctime":1572769605,"is_pvip":false,"replies":[{"id":57241,"content":"它本身不带，就相当于只帮你做好一个服务器，服务器的集群本身是需要让我们自己做的。这点和那些redis服务器那些不一样，那些他们自己可独立可集群","user_name":"作者回复","user_name_real":"Geek_9bc307","uid":1638649,"ctime":1573047747,"ip_address":"","comment_id":147034,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100036701,"comment_content":"老师你好，netty有什么集群方案没有？","like_count":1,"discussions":[{"author":{"id":1638649,"avatar":"https://static001.geekbang.org/account/avatar/00/19/00/f9/44a3e5bd.jpg","nickname":"傅健","note":"","ucode":"5EA8BB26F5B036","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":473106,"discussion_content":"它本身不带，就相当于只帮你做好一个服务器，服务器的集群本身是需要让我们自己做的。这点和那些redis服务器那些不一样，那些他们自己可独立可集群","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573047747,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":204868,"user_name":"delete is create","can_delete":false,"product_type":"c3","uid":1147979,"ip_address":"","ucode":"A8C751219A7746","user_header":"https://static001.geekbang.org/account/avatar/00/11/84/4b/e4738ba8.jpg","comment_is_top":false,"comment_ctime":1586484842,"is_pvip":false,"replies":[{"id":78821,"content":"是的，代表一个对象，只要连接在，肯定就一直在。","user_name":"作者回复","user_name_real":"stroller","uid":1638649,"ctime":1588055927,"ip_address":"","comment_id":204868,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100036701,"comment_content":"netty中同一个连接的channel一直是一样的是吧 ","like_count":0,"discussions":[{"author":{"id":1638649,"avatar":"https://static001.geekbang.org/account/avatar/00/19/00/f9/44a3e5bd.jpg","nickname":"傅健","note":"","ucode":"5EA8BB26F5B036","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":491312,"discussion_content":"是的，代表一个对象，只要连接在，肯定就一直在。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1588055927,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":203129,"user_name":"fsj","can_delete":false,"product_type":"c3","uid":1017571,"ip_address":"","ucode":"5DA2B549C9B5FE","user_header":"https://static001.geekbang.org/account/avatar/00/0f/86/e3/28d1330a.jpg","comment_is_top":false,"comment_ctime":1586142597,"is_pvip":false,"replies":[{"id":79259,"content":"客气！加油！","user_name":"作者回复","user_name_real":"stroller","uid":1638649,"ctime":1588633229,"ip_address":"","comment_id":203129,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100036701,"comment_content":"SwiftNIO是类似于Netty的框架，只是用Swift语言实现的，老师分析Netty的源码视频，对学习SwiftNIO源码也有很大的帮助。看了老师的视频，看SwiftNIO源码也容易了一些，多谢老师","like_count":0,"discussions":[{"author":{"id":1638649,"avatar":"https://static001.geekbang.org/account/avatar/00/19/00/f9/44a3e5bd.jpg","nickname":"傅健","note":"","ucode":"5EA8BB26F5B036","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":490775,"discussion_content":"客气！加油！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1588633229,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":201256,"user_name":"雷刚","can_delete":false,"product_type":"c3","uid":1655725,"ip_address":"","ucode":"115FE2BE1AAB61","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/pTD8nS0SsORKiaRD3wB0NK9Bpd0wFnPWtYLPfBRBhvZ68iaJErMlM2NNSeEibwQfY7GReILSIYZXfT9o8iaicibcyw3g/132","comment_is_top":false,"comment_ctime":1585741012,"is_pvip":false,"replies":[{"id":79264,"content":"是的，有很多关联的设计要点要是理解了，就能抓住本质。","user_name":"作者回复","user_name_real":"stroller","uid":1638649,"ctime":1588633803,"ip_address":"","comment_id":201256,"utype":1}],"discussion_count":2,"race_medal":0,"score":2,"product_id":100036701,"comment_content":"如果要实现高并发，那么每个请求占用的时间都不能很长。Netty 通过限制每个连接一次最大的读写次数据，来控制每个请求占用线程的时间，从而保证高并发。了解了这个思想再回过头看这部分代码就会清楚很多，以前只是看了好几遍都没太明白，听完老师的分析再重新读一篇就好多了。","like_count":0,"discussions":[{"author":{"id":1638649,"avatar":"https://static001.geekbang.org/account/avatar/00/19/00/f9/44a3e5bd.jpg","nickname":"傅健","note":"","ucode":"5EA8BB26F5B036","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":490277,"discussion_content":"是的，有很多关联的设计要点要是理解了，就能抓住本质。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1588633803,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1749194,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTL6sbiaEsWOIFiaCSe0KL1alJcsb9LhNRkQlMpNTbdCoZMqHghfXn02WsjwcWn5A9FfTXx3bkdnxSicg/132","nickname":"Tim","note":"","ucode":"E665011E5BB6AF","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":606653,"discussion_content":"所以单线程串行的执行能达到高性能！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1677249286,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"上海","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":194480,"user_name":"jasper","can_delete":false,"product_type":"c3","uid":1058086,"ip_address":"","ucode":"245404D19450E7","user_header":"https://static001.geekbang.org/account/avatar/00/10/25/26/fb664d01.jpg","comment_is_top":false,"comment_ctime":1585061745,"is_pvip":false,"replies":[{"id":78809,"content":"谢谢肯定，尽量讲的通俗点，不然真的不容易理解，其实和生活中的一些事情对应后，容易理解些。","user_name":"作者回复","user_name_real":"stroller","uid":1638649,"ctime":1588054468,"ip_address":"","comment_id":194480,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100036701,"comment_content":"老师讲的挺好的，从本质的视角来阐述，让人能清晰的理清主线，不用过多的阐述一些让人难以理解的概念","like_count":0,"discussions":[{"author":{"id":1638649,"avatar":"https://static001.geekbang.org/account/avatar/00/19/00/f9/44a3e5bd.jpg","nickname":"傅健","note":"","ucode":"5EA8BB26F5B036","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":488829,"discussion_content":"谢谢肯定，尽量讲的通俗点，不然真的不容易理解，其实和生活中的一些事情对应后，容易理解些。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1588054468,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":177547,"user_name":"密码123456","can_delete":false,"product_type":"c3","uid":1126593,"ip_address":"","ucode":"9889463CC0EA71","user_header":"https://static001.geekbang.org/account/avatar/00/11/30/c1/2dde6700.jpg","comment_is_top":false,"comment_ctime":1581415681,"is_pvip":false,"replies":[{"id":69668,"content":"你现在的理解是对的，哈哈","user_name":"作者回复","user_name_real":"stroller","uid":1638649,"ctime":1582004092,"ip_address":"","comment_id":177547,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100036701,"comment_content":"看到了写，我才发现。这里的雨露均沾是 一个eventloop 不会对一个连接的写-读进行长期暂用。之前以为的雨露均沾指的是一个连接的读写会被多个eventloop 进行执行","like_count":0,"discussions":[{"author":{"id":1638649,"avatar":"https://static001.geekbang.org/account/avatar/00/19/00/f9/44a3e5bd.jpg","nickname":"傅健","note":"","ucode":"5EA8BB26F5B036","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":483459,"discussion_content":"你现在的理解是对的，哈哈","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582004092,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":159742,"user_name":"Dovelol","can_delete":false,"product_type":"c3","uid":1253384,"ip_address":"","ucode":"9B5DDF7720F307","user_header":"https://static001.geekbang.org/account/avatar/00/13/20/08/bc06bc69.jpg","comment_is_top":false,"comment_ctime":1575773531,"is_pvip":false,"replies":[{"id":61244,"content":"比如对端处理慢，那TCP传输是流控的，所以最终通过滑动窗口反馈到发送方，发送方就写不出去了。\n对端处理慢，有时候不见得是处理能力不行，流控&#47;网速等等也会导致，最终效果只要输出大于对端的处理，就会写越来越慢以致于写不出去。","user_name":"作者回复","user_name_real":"傅健","uid":1638649,"ctime":1575958413,"ip_address":"","comment_id":159742,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100036701,"comment_content":"老师好，能具体说下，netty写数据写不进去都有什么情况吗？","like_count":0,"discussions":[{"author":{"id":1638649,"avatar":"https://static001.geekbang.org/account/avatar/00/19/00/f9/44a3e5bd.jpg","nickname":"傅健","note":"","ucode":"5EA8BB26F5B036","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":477159,"discussion_content":"比如对端处理慢，那TCP传输是流控的，所以最终通过滑动窗口反馈到发送方，发送方就写不出去了。\n对端处理慢，有时候不见得是处理能力不行，流控/网速等等也会导致，最终效果只要输出大于对端的处理，就会写越来越慢以致于写不出去。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1575958413,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":149772,"user_name":"川川","can_delete":false,"product_type":"c3","uid":1382517,"ip_address":"","ucode":"DA092CAC7F294D","user_header":"https://static001.geekbang.org/account/avatar/00/15/18/75/68487e89.jpg","comment_is_top":false,"comment_ctime":1573373382,"is_pvip":false,"replies":[{"id":57935,"content":"之前的几节，我觉得没有这节难，所以没有画图了，这节我觉得画图能帮助理解才画的，所以你反映的问题应该是我们的感觉不同导致的，以后我会注意下这个问题。","user_name":"作者回复","user_name_real":"Geek_9bc307","uid":1638649,"ctime":1573570527,"ip_address":"","comment_id":149772,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100036701,"comment_content":"其实建议老师今后都像这一节这样，多用一些代码流程图，来代替干巴巴的讲解代码， 21节到23节虽然看N遍后能够看懂，但听起来感觉太吃力了","like_count":0,"discussions":[{"author":{"id":1638649,"avatar":"https://static001.geekbang.org/account/avatar/00/19/00/f9/44a3e5bd.jpg","nickname":"傅健","note":"","ucode":"5EA8BB26F5B036","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":473971,"discussion_content":"之前的几节，我觉得没有这节难，所以没有画图了，这节我觉得画图能帮助理解才画的，所以你反映的问题应该是我们的感觉不同导致的，以后我会注意下这个问题。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573570527,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":148160,"user_name":"小不点","can_delete":false,"product_type":"c3","uid":1351860,"ip_address":"","ucode":"C307D44A185C34","user_header":"https://static001.geekbang.org/account/avatar/00/14/a0/b4/5173f1af.jpg","comment_is_top":false,"comment_ctime":1572952900,"is_pvip":false,"replies":[{"id":57233,"content":"其实也可以按找实战后源码倒着看，也是一种感觉，哈","user_name":"作者回复","user_name_real":"Geek_9bc307","uid":1638649,"ctime":1573046735,"ip_address":"","comment_id":148160,"utype":1}],"discussion_count":2,"race_medal":0,"score":2,"product_id":100036701,"comment_content":"讲的好，一遍不懂看好几遍还是没看懂，但是没有那么陌生感了，在明天课程更新后还得返回来接着看源码，感觉挺有意思的","like_count":0,"discussions":[{"author":{"id":1638649,"avatar":"https://static001.geekbang.org/account/avatar/00/19/00/f9/44a3e5bd.jpg","nickname":"傅健","note":"","ucode":"5EA8BB26F5B036","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":473418,"discussion_content":"其实也可以按找实战后源码倒着看，也是一种感觉，哈","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573046735,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1259675,"avatar":"https://static001.geekbang.org/account/avatar/00/13/38/9b/c1d55b87.jpg","nickname":"Mr.Lonely","note":"","ucode":"CF815AD29D5489","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":127635,"discussion_content":"源码里是否有提及到filterOutboundMessage方法会判断bytebuf是否是直接内存并转换为直接内存？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578582505,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":258553,"user_name":"冬渐暖","can_delete":false,"product_type":"c3","uid":1586800,"ip_address":"","ucode":"907E41AAE9A36C","user_header":"https://static001.geekbang.org/account/avatar/00/18/36/70/00122b24.jpg","comment_is_top":false,"comment_ctime":1604481377,"is_pvip":false,"replies":null,"discussion_count":1,"race_medal":0,"score":3,"product_id":100036701,"comment_content":"写数据:netty是异步非阻塞的，在写的这地方异步是通过OP_WRITE事件来控制什么时候可以开始写的。\n同理，读的时候也是这样\n\n\nnetty在处理负载数据的时候，会把自己搞成不能再写了(营养不足，不上车了)\n写数据的三种方式:\nwrite写到一个buffer里面,先不马上就给你发送回去，但是最终还是会flush--》吧buffer里面的数据发出去。 类似于等这个buffer够大了，再把你和别人的buffer一起发走\nwriteAndFlush: 写到buffer, 立马发送。    vip线\nWrite和Flush之间有个ChannelOutboundBuffer   。write和flush之间搞个缓冲的仓库\n\n\n写的主要流程是先把数据放到buff（缓存高效），告诉准备发了，吧buff刷新到内存\nbuff删除好像是个大的流程，下面有一个一个的删除任务，发送完就删掉，没发完就给个进度(类似于把一个文件夹丢到回收站)\n\n在发送数据这块，netty也使用了贪心，\n如果你这次写完了的数据对方都接收完了，下次就多搞点，(calculateMaxBytesPerGatheringWrite),对应官方注释“Multiply by 2 to give some extra space in case the OS can process write data faster than we can provide.”\n如果写到对方接收不了了，就停止写，然后注册一-个OP_ WRITE事件，来通知什么时候有数据可以写了之后再写，而不是说可以写\n雨露均沾，能写就一直写，直到写不进去或者到了默认的16次(可通过setWriteSpinCount(999)去修改为999次)。这样的处理，不会使大数据的写操作占用全部资源而使其他请求得不到响应，可见这是一个较为公平的处理。如果到了16次，不是注册写事件，而是弄个时间轮叫flush task的任务，主要是明明还能写，注册写事件浪费，还不如弄个定时任务去写\n对方接的人太慢了，达到一定程度，将可写位的标识符改成false，告诉别人不要再写了。自己就算写的再多，别人接收的太慢，最后会把自己挤爆。反过来如果到了最低水平线就把这个标识符设置成true\n对应读取数据的本质是还是调用了jdk的sun.nio.ch.SocketChannelImpl下面的read方法，写数据则是调用了write方法\n&#47;&#47; 高水位线和低水位线是字节数，默认高水位是64K，低水位是32K\nDEFAULT_LOW_WATER_MARK = 32 * 1024；\nDEFAULT_HIGH_WATER_MARK = 64 * 1024\n\n\n一年后回来复习整理，刚好最近接触了一点im相关的东西，发现现在和19年这时候的感觉完全不一样，哈哈，学以致用和学留着备用的感觉是不一样的","like_count":3,"discussions":[{"author":{"id":1749194,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTL6sbiaEsWOIFiaCSe0KL1alJcsb9LhNRkQlMpNTbdCoZMqHghfXn02WsjwcWn5A9FfTXx3bkdnxSicg/132","nickname":"Tim","note":"","ucode":"E665011E5BB6AF","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":606651,"discussion_content":"没明白的，都给你白话出来了，厉害！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1677248906,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"上海","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":146565,"user_name":"鱼向北游","can_delete":false,"product_type":"c3","uid":1439908,"ip_address":"","ucode":"580EC7DCE57E9A","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/IPdZZXuHVMibwfZWmm7NiawzeEFGsaRoWjhuN99iaoj5amcRkiaOePo6rH1KJ3jictmNlic4OibkF4I20vOGfwDqcBxfA/132","comment_is_top":false,"comment_ctime":1572574139,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":3,"product_id":100036701,"comment_content":"老师的课，知识点太丰富，源码演示的时候，ctx.write说下个handler，在最后果然补上了这个知识点","like_count":3},{"had_liked":false,"id":177893,"user_name":"WING","can_delete":false,"product_type":"c3","uid":1485200,"ip_address":"","ucode":"E4723BA4027407","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/IdElofI20lsCUm1NIQPSpYFzAGLbLs41SL324FkmTb0icqnRJicW6mqX4iag1BQUSNtc7BtKJ2fEUYwU4rN47vEsQ/132","comment_is_top":false,"comment_ctime":1581523089,"is_pvip":false,"replies":null,"discussion_count":2,"race_medal":0,"score":3,"product_id":100036701,"comment_content":"您好，老师，我又来问问题了。关于writeAndFlush的问题：写出去这个是不是只是保证数据成功写到网卡，并不保证对方收到（并不是收到对方的ACK才成功，TCP协议下）？TCP不是有重发机制吗，netty是如何体现TCP的重传机制的？我们自己的应用程序又该如何处理？\n\n补充一下背景：我通过应用程序的日志和tcpdump抓包分析，应用程序的日志已经记录了writeAndFlush返回的future是成功了，然而对端并没收到，通过tcpdump抓包，服务端一直没收到对端的ACK，重发了5次（Linux的默认重传次数）。","like_count":1,"discussions":[{"author":{"id":2445320,"avatar":"","nickname":"Geek_99273f","note":"","ucode":"23FE1E9490B878","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":351680,"discussion_content":"内核做的，应用层不感知","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1614393993,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1274464,"avatar":"https://static001.geekbang.org/account/avatar/00/13/72/60/288023be.jpg","nickname":"YU","note":"","ucode":"4EE45D6FC2862F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":290168,"discussion_content":"重传是tcp保证的，tcp层面会尽量保证成功\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1594365113,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":329651,"user_name":"Geek_789793","can_delete":false,"product_type":"c3","uid":2884854,"ip_address":"","ucode":"3F5E616452D3DB","user_header":"","comment_is_top":false,"comment_ctime":1641456700,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":3,"product_id":100036701,"comment_content":"老师你好，有问题想请教一下，springboot 结合netty做硬件的服务端，netty负责与硬件socket交互，接收完硬件发过来的数据之后，需要进行解析，解析完之后通过websocket的方式发送到前端页面显示，我是直接通过channel.writeAndFlush(new TextWebSocketFrame(&#39;json数据&#39;))的方式，发送给前端页面的，但是会有一定的延时，看了日志，从接收到硬件的数据到解析完，再到flush，在十几二十毫秒完成了，为什么还会有延迟呢？想不出为什么...","like_count":0},{"had_liked":false,"id":226105,"user_name":"haisheng","can_delete":false,"product_type":"c3","uid":2020634,"ip_address":"","ucode":"236C399EBA8280","user_header":"","comment_is_top":false,"comment_ctime":1591952302,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":3,"product_id":100036701,"comment_content":"标记为高水位线后，怎么通知到客户端呢？","like_count":0},{"had_liked":false,"id":219770,"user_name":"夏目","can_delete":false,"product_type":"c3","uid":1212750,"ip_address":"","ucode":"67C075A01CF4D2","user_header":"https://static001.geekbang.org/account/avatar/00/12/81/4e/d71092f4.jpg","comment_is_top":false,"comment_ctime":1590076306,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":3,"product_id":100036701,"comment_content":"所以op_write事件是只有在处理读请求返回的时候写不进去了，自己注册op_write事件到selector上等待可写事件触发吗","like_count":0},{"had_liked":false,"id":202608,"user_name":"影随","can_delete":false,"product_type":"c3","uid":1088169,"ip_address":"","ucode":"48BC4CFCAD3C2F","user_header":"https://static001.geekbang.org/account/avatar/00/10/9a/a9/ae10f6cd.jpg","comment_is_top":false,"comment_ctime":1586014985,"is_pvip":false,"replies":null,"discussion_count":1,"race_medal":0,"score":3,"product_id":100036701,"comment_content":"老师您好，我debug的时候，发现 EchoServerHandler#channelRead 要执行好多遍，每执行一次，cap的值都在发生变化，请问这是什么原因呢？ ","like_count":0,"discussions":[{"author":{"id":1239557,"avatar":"https://static001.geekbang.org/account/avatar/00/12/ea/05/c0d8014d.jpg","nickname":"一道阳光","note":"","ucode":"F35207CCCEC6E2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":299109,"discussion_content":"这个服务端和客户端会一直互相发信息，执行好多遍指的是通信了好几次，cap的值会根据每次读取和写入的数据大小进行调整，进行缩容吧。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1597566118,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":190353,"user_name":"NoBody","can_delete":false,"product_type":"c3","uid":1173766,"ip_address":"","ucode":"72E1B4FCDA2469","user_header":"https://static001.geekbang.org/account/avatar/00/11/e9/06/038a9cea.jpg","comment_is_top":false,"comment_ctime":1584631585,"is_pvip":false,"replies":null,"discussion_count":1,"race_medal":0,"score":3,"product_id":100036701,"comment_content":"老师请问可以详细说明一下processSelectedKeysOptimized(selectedKeys.flip());的这个selectedKeys的赋值过程吗？","like_count":0,"discussions":[{"author":{"id":1173766,"avatar":"https://static001.geekbang.org/account/avatar/00/11/e9/06/038a9cea.jpg","nickname":"NoBody","note":"","ucode":"72E1B4FCDA2469","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":209752,"discussion_content":"我只看到在doRegister的时候复制了。后来flip()一次后，第二次是怎么复制的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584669388,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":148416,"user_name":"活到一百岁","can_delete":false,"product_type":"c3","uid":1367033,"ip_address":"","ucode":"6A50B0956C025E","user_header":"https://static001.geekbang.org/account/avatar/00/14/db/f9/454cb3df.jpg","comment_is_top":false,"comment_ctime":1573005110,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":3,"product_id":100036701,"comment_content":"很喜欢这样一步步直接跟到代码里面的讲解方式，非常棒！","like_count":0}]}