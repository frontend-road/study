{"id":41189,"title":"24 | 测试的基本规则和流程（下）","content":"<p>你好，我是郝林。今天我分享的主题是测试的基本规则和流程的（下）篇。</p><p>Go语言是一门很重视程序测试的编程语言，所以在上一篇中，我与你再三强调了程序测试的重要性，同时，也介绍了关于<code>go test</code>命令的基本规则和主要流程的内容。今天我们继续分享测试的基本规则和流程。本篇代码和指令较多，你可以点击文章查看原文。</p><h2>知识扩展</h2><h3>问题 1：怎样解释功能测试的测试结果？</h3><p>我们先来看下面的测试命令和结果：</p><pre><code>$ go test puzzlers/article20/q2\nok   puzzlers/article20/q2 0.008s\n</code></pre><p>以<code>$</code>符号开头表明此行展现的是我输入的命令。在这里，我输入了<code>go test puzzlers/article20/q2</code>，这表示我想对导入路径为<code>puzzlers/article20/q2</code>的代码包进行测试。代码下面一行就是此次测试的简要结果。</p><p>这个简要结果有三块内容。最左边的<code>ok</code>表示此次测试成功，也就是说没有发现测试结果不如预期的情况。</p><p>当然了，这里全由我们编写的测试代码决定，我们总是认定测试代码本身没有Bug，并且忠诚地落实了我们的测试意图。在测试结果的中间，显示的是被测代码包的导入路径。</p><p>而在最右边，展现的是此次对该代码包的测试所耗费的时间，这里显示的<code>0.008s</code>，即8毫秒。不过，当我们紧接着第二次运行这个命令的时候，输出的测试结果会略有不同，如下所示：</p><!-- [[[read_end]]] --><pre><code>$ go test puzzlers/article20/q2\nok   puzzlers/article20/q2 (cached)\n</code></pre><p>可以看到，结果最右边的不再是测试耗时，而是<code>(cached)</code>。这表明，由于测试代码与被测代码都没有任何变动，所以<code>go test</code>命令直接把之前缓存测试成功的结果打印出来了。</p><p>go命令通常会缓存程序构建的结果，以便在将来的构建中重用。我们可以通过运行<code>go env GOCACHE</code>命令来查看缓存目录的路径。缓存的数据总是能够正确地反映出当时的各种源码文件、构建环境、编译器选项等等的真实情况。</p><p>一旦有任何变动，缓存数据就会失效，go命令就会再次真正地执行操作。所以我们并不用担心打印出的缓存数据不是实时的结果。go命令会定期地删除最近未使用的缓存数据，但是，如果你想手动删除所有的缓存数据，运行一下<code>go clean -cache</code>命令就好了。</p><p>对于测试成功的结果，go命令也是会缓存的。运行<code>go clean -testcache</code>将会删除所有的测试结果缓存。不过，这样做肯定不会删除任何构建结果缓存。</p><blockquote>\n<p>此外，设置环境变量<code>GODEBUG</code>的值也可以稍稍地改变go命令的缓存行为。比如，设置值为<code>gocacheverify=1</code>将会导致go命令绕过任何的缓存数据，而真正地执行操作并重新生成所有结果，然后再去检查新的结果与现有的缓存数据是否一致。</p>\n</blockquote><p>总之，我们并不用在意缓存数据的存在，因为它们肯定不会妨碍<code>go test</code>命令打印正确的测试结果。</p><p>你可能会问，如果测试失败，命令打印的结果将会是怎样的？如果功能测试函数的那个唯一参数被命名为<code>t</code>，那么当我们在其中调用<code>t.Fail</code>方法时，虽然当前的测试函数会继续执行下去，但是结果会显示该测试失败。如下所示：</p><pre><code>$ go test puzzlers/article20/q2\n--- FAIL: TestFail (0.00s)\n demo53_test.go:49: Failed.\nFAIL\nFAIL puzzlers/article20/q2 0.007s\n</code></pre><p>我们运行的命令与之前是相同的，但是我新增了一个功能测试函数<code>TestFail</code>，并在其中调用了<code>t.Fail</code>方法。测试结果显示，对被测代码包的测试，由于<code>TestFail</code>函数的测试失败而宣告失败。</p><p>注意，对于失败测试的结果，<code>go test</code>命令并不会进行缓存，所以，这种情况下的每次测试都会产生全新的结果。另外，如果测试失败了，那么<code>go test</code>命令将会导致：失败的测试函数中的常规测试日志一并被打印出来。</p><p>在这里的测试结果中，之所以显示了“demo53_test.go:49: Failed.”这一行，是因为我在<code>TestFail</code>函数中的调用表达式<code>t.Fail()</code>的下边编写了代码<code>t.Log(\"Failed.\")</code>。</p><p><code>t.Log</code>方法以及<code>t.Logf</code>方法的作用，就是打印常规的测试日志，只不过当测试成功的时候，<code>go test</code>命令就不会打印这类日志了。如果你想在测试结果中看到所有的常规测试日志，那么可以在运行<code>go test</code>命令的时候加入标记<code>-v</code>。</p><blockquote>\n<p>若我们想让某个测试函数在执行的过程中立即失败，则可以在该函数中调用<code>t.FailNow</code>方法。</p>\n<p>我在下面把<code>TestFail</code>函数中的<code>t.Fail()</code>改为<code>t.FailNow()</code>。</p>\n<p>与<code>t.Fail()</code>不同，在<code>t.FailNow()</code>执行之后，当前函数会立即终止执行。换句话说，该行代码之后的所有代码都会失去执行机会。在这样修改之后，我再次运行上面的命令，得到的结果如下：</p>\n</blockquote><pre><code>--- FAIL: TestFail (0.00s)\nFAIL\nFAIL puzzlers/article20/q2 0.008s\n</code></pre><blockquote>\n<p>显然，之前显示在结果中的常规测试日志并没有出现在这里。</p>\n</blockquote><p>顺便说一下，如果你想在测试失败的同时打印失败测试日志，那么可以直接调用<code>t.Error</code>方法或者<code>t.Errorf</code>方法。</p><p>前者相当于<code>t.Log</code>方法和<code>t.Fail</code>方法的连续调用，而后者也与之类似，只不过它相当于先调用了<code>t.Logf</code>方法。</p><p>除此之外，还有<code>t.Fatal</code>方法和<code>t.Fatalf</code>方法，它们的作用是在打印失败错误日志之后立即终止当前测试函数的执行并宣告测试失败。更具体地说，这相当于它们在最后都调用了<code>t.FailNow</code>方法。</p><p>好了，到此为止，你是不是已经会解读功能测试的测试结果了呢？</p><h3>问题 2：怎样解释性能测试的测试结果？</h3><p>性能测试与功能测试的结果格式有很多相似的地方。我们在这里仅关注前者的特殊之处。请看下面的打印结果。</p><pre><code>$ go test -bench=. -run=^$ puzzlers/article20/q3\ngoos: darwin\ngoarch: amd64\npkg: puzzlers/article20/q3\nBenchmarkGetPrimes-8      500000       2314 ns/op\nPASS\nok   puzzlers/article20/q3 1.192s\n</code></pre><p>我在运行<code>go test</code>命令的时候加了两个标记。第一个标记及其值为<code>-bench=.</code>，只有有了这个标记，命令才会进行性能测试。该标记的值<code>.</code>表明需要执行任意名称的性能测试函数，当然了，函数名称还是要符合Go程序测试的基本规则的。</p><p>第二个标记及其值是<code>-run=^$</code>，这个标记用于表明需要执行哪些功能测试函数，这同样也是以函数名称为依据的。该标记的值<code>^$</code>意味着：只执行名称为空的功能测试函数，换句话说，不执行任何功能测试函数。</p><p>你可能已经看出来了，这两个标记的值都是正则表达式。实际上，它们只能以正则表达式为值。此外，如果运行<code>go test</code>命令的时候不加<code>-run</code>标记，那么就会使它执行被测代码包中的所有功能测试函数。</p><p>再来看测试结果，重点说一下倒数第三行的内容。<code>BenchmarkGetPrimes-8</code>被称为单个性能测试的名称，它表示命令执行了性能测试函数<code>BenchmarkGetPrimes</code>，并且当时所用的最大P数量为<code>8</code>。</p><p>最大P数量相当于可以同时运行goroutine的逻辑CPU的最大个数。这里的逻辑CPU，也可以被称为CPU核心，但它并不等同于计算机中真正的CPU核心，只是Go语言运行时系统内部的一个概念，代表着它同时运行goroutine的能力。</p><p>顺便说一句，一台计算机的CPU核心的个数，意味着它能在同一时刻执行多少条程序指令，代表着它并行处理程序指令的能力。</p><p>我们可以通过调用 <code>runtime.GOMAXPROCS</code>函数改变最大P数量，也可以在运行<code>go test</code>命令时，加入标记<code>-cpu</code>来设置一个最大P数量的列表，以供命令在多次测试时使用。</p><p>至于怎样使用这个标记，以及<code>go test</code>命令执行的测试流程，会因此做出怎样的改变，我们在下一篇文章中再讨论。</p><p>在性能测试名称右边的是，<code>go test</code>命令最后一次执行性能测试函数（即<code>BenchmarkGetPrimes</code>函数）的时候，被测函数（即<code>GetPrimes</code>函数）被执行的实际次数。这是什么意思呢？</p><p><code>go test</code>命令在执行性能测试函数的时候会给它一个正整数，若该测试函数的唯一参数的名称为<code>b</code>，则该正整数就由<code>b.N</code>代表。我们应该在测试函数中配合着编写代码，比如：</p><pre><code>for i := 0; i &lt; b.N; i++ {\n GetPrimes(1000)\n}\n</code></pre><p>我在一个会迭代<code>b.N</code>次的循环中调用了<code>GetPrimes</code>函数，并给予它参数值<code>1000</code>。<code>go test</code>命令会先尝试把<code>b.N</code>设置为<code>1</code>，然后执行测试函数。</p><p>如果测试函数的执行时间没有超过上限，此上限默认为1秒，那么命令就会改大<code>b.N</code>的值，然后再次执行测试函数，如此往复，直到这个时间大于或等于上限为止。</p><p>当某次执行的时间大于或等于上限时，我们就说这是命令此次对该测试函数的最后一次执行。这时的<code>b.N</code>的值就会被包含在测试结果中，也就是上述测试结果中的<code>500000</code>。</p><p>我们可以简称该值为执行次数，但要注意，它指的是被测函数的执行次数，而不是性能测试函数的执行次数。</p><p>最后再看这个执行次数的右边，<code>2314 ns/op</code>表明单次执行<code>GetPrimes</code>函数的平均耗时为<code>2314</code>纳秒。这其实就是通过将最后一次执行测试函数时的执行时间，除以（被测函数的）执行次数而得出的。</p><p><img src=\"https://static001.geekbang.org/resource/image/78/69/78d4c73a9aa9d48b59d3fd304d4b2069.png?wh=1558*708\" alt=\"\"></p><p>（性能测试结果的基本解读）</p><p>以上这些，就是对默认情况下的性能测试结果的基本解读。你看明白了吗？</p><h2>总结</h2><p>注意，对于功能测试和性能测试，命令执行测试流程的方式会有些不同。另外一个重要的问题是，我们在与<code>go test</code>命令交互时，怎样解读它提供给我们的信息。只有解读正确，你才能知道测试的成功与否，失败的具体原因以及严重程度等等。</p><p>除此之外，对于性能测试，你还需要关注命令输出的计算资源使用提示，以及各种性能度量。</p><p>这两篇的文章中，我们一起学习了不少东西，但是其实还不够。我们只是探讨了<code>go test</code>命令以及<code>testing</code>包的基本使用方式。</p><p>在下一篇，我们还会讨论更高级的内容。这将涉及<code>go test</code>命令的各种标记、<code>testing</code>包的更多API，以及更复杂的测试结果。</p><h2>思考题</h2><p>在编写示例测试函数的时候，我们怎样指定预期的打印内容？</p><p><a href=\"https://github.com/hyper0x/Golang_Puzzlers\">戳此查看Go语言专栏文章配套详细代码。</a></p><p></p>","comments":[{"had_liked":false,"id":215872,"user_name":"HF","can_delete":false,"product_type":"c1","uid":1060150,"ip_address":"","ucode":"EA504931C0B932","user_header":"https://static001.geekbang.org/account/avatar/00/10/2d/36/d3c8d272.jpg","comment_is_top":false,"comment_ctime":1589122830,"is_pvip":false,"replies":[{"id":"79967","content":"网上有不少相关的文章。我说3点基本的吧：<br><br>1. 隐藏不该暴露的。测试代码相当于使用你程序的一方，不要让它能够影响甚至破坏你的程序。<br>2. 暴露出来的API应该对使用者友好。换句话会所，如果在写测试代码的时候，你发现API调用起来不那么顺畅，那么就需要考虑程序的API是否得当了。<br>3. 保持API在风格上的一致性。风格一致的程序有助于使用方快速运用和理解程序。<br><br>这3点是基本的原则了，其他的细节上的东西说到底都是为了做到这3点的。测试代码就是对生产代码的前期验证。","user_name":"作者回复","user_name_real":"郝林","uid":"1026643","ctime":1589185637,"ip_address":"","comment_id":215872,"utype":1}],"discussion_count":1,"race_medal":0,"score":"61718664974","product_id":100013101,"comment_content":"老师，go如何写出可测试的代码，有什么规范吗？","like_count":15,"discussions":[{"author":{"id":1026643,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/aa/53/768aec0a.jpg","nickname":"郝林","note":"","ucode":"F66BA62BA56FFA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":494590,"discussion_content":"网上有不少相关的文章。我说3点基本的吧：\n\n1. 隐藏不该暴露的。测试代码相当于使用你程序的一方，不要让它能够影响甚至破坏你的程序。\n2. 暴露出来的API应该对使用者友好。换句话会所，如果在写测试代码的时候，你发现API调用起来不那么顺畅，那么就需要考虑程序的API是否得当了。\n3. 保持API在风格上的一致性。风格一致的程序有助于使用方快速运用和理解程序。\n\n这3点是基本的原则了，其他的细节上的东西说到底都是为了做到这3点的。测试代码就是对生产代码的前期验证。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1589185637,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":42627,"user_name":"Louis","can_delete":false,"product_type":"c1","uid":1057942,"ip_address":"","ucode":"2505A2F946B1DB","user_header":"https://static001.geekbang.org/account/avatar/00/10/24/96/5e1b1dad.jpg","comment_is_top":false,"comment_ctime":1542982416,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"44492655376","product_id":100013101,"comment_content":"老师讲的很棒！ 终于补到这里了！ 很多东西都是从编程语言本质的角度去解析。很棒！","like_count":11},{"had_liked":false,"id":85694,"user_name":"willmeng","can_delete":false,"product_type":"c1","uid":1157065,"ip_address":"","ucode":"37367A728ABF88","user_header":"https://static001.geekbang.org/account/avatar/00/11/a7/c9/67bd5906.jpg","comment_is_top":false,"comment_ctime":1555202763,"is_pvip":false,"replies":[{"id":"30818","content":"我不太清楚你说的“默认测试时间”是指什么。<br><br>如果是性能测试的话，可以在执行 go test 命令时追加 -benchtime 标记。这实际上是下一篇文章的思考题。<br><br>另外，-timeout 标记可用于设定当次测试运行的总时长，一旦超过这个时长就panic。<br><br>具体用法可以参考：https:&#47;&#47;golang.org&#47;cmd&#47;go&#47;#hdr-Testing_flags 。","user_name":"作者回复","user_name_real":"郝林","uid":"1026643","ctime":1555215001,"ip_address":"","comment_id":85694,"utype":1}],"discussion_count":1,"race_medal":0,"score":"27325006539","product_id":100013101,"comment_content":"请问，如何修改默认测试时间上限呢？","like_count":7,"discussions":[{"author":{"id":1026643,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/aa/53/768aec0a.jpg","nickname":"郝林","note":"","ucode":"F66BA62BA56FFA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":446769,"discussion_content":"我不太清楚你说的“默认测试时间”是指什么。\n\n如果是性能测试的话，可以在执行 go test 命令时追加 -benchtime 标记。这实际上是下一篇文章的思考题。\n\n另外，-timeout 标记可用于设定当次测试运行的总时长，一旦超过这个时长就panic。\n\n具体用法可以参考：https://golang.org/cmd/go/#hdr-Testing_flags 。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1555215001,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":31634,"user_name":"象牙塔下的渣渣","can_delete":false,"product_type":"c1","uid":1248575,"ip_address":"","ucode":"B87FC8A56D29CB","user_header":"https://static001.geekbang.org/account/avatar/00/13/0d/3f/d2accda7.jpg","comment_is_top":false,"comment_ctime":1539250189,"is_pvip":false,"replies":[{"id":"11817","content":"这个专栏是完全重写的，几乎跟书上的东西没有重叠。答案的话我赶完稿子后面再补吧。现在补精力跟不上。","user_name":"作者回复","user_name_real":"郝林","uid":"1026643","ctime":1539577206,"ip_address":"","comment_id":31634,"utype":1}],"discussion_count":1,"race_medal":0,"score":"27309053965","product_id":100013101,"comment_content":"老师，能不能把每节课后面的思考题给出答案啊？另外，你这个专栏上的内容在您的那本《Go并发编程》上有嘛？","like_count":6,"discussions":[{"author":{"id":1026643,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/aa/53/768aec0a.jpg","nickname":"郝林","note":"","ucode":"F66BA62BA56FFA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":426439,"discussion_content":"这个专栏是完全重写的，几乎跟书上的东西没有重叠。答案的话我赶完稿子后面再补吧。现在补精力跟不上。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1539577206,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":194037,"user_name":"给力","can_delete":false,"product_type":"c1","uid":1113645,"ip_address":"","ucode":"646EE4AFC17224","user_header":"https://static001.geekbang.org/account/avatar/00/10/fe/2d/2c9177ca.jpg","comment_is_top":false,"comment_ctime":1585017220,"is_pvip":false,"replies":[{"id":"73917","content":"你敲 go help test 并回车之后会发现最后有两段话：<br><br>The test binary also accepts flags that control execution of the test; these<br>flags are also accessible by &#39;go test&#39;. See &#39;go help testflag&#39; for details.<br><br>For more about build flags, see &#39;go help build&#39;.<br>For more about specifying packages, see &#39;go help packages&#39;.<br><br>第一段的意思是，一些更详细的参数说明需要敲 go help testflag 查看。第二段的意思是，go test 也支持 go build 的一些参数，那些参数需要敲 go help build 查看，另外怎么指定代码包需要敲 go help packages 查看说明。","user_name":"作者回复","user_name_real":"郝林","uid":"1026643","ctime":1585023149,"ip_address":"","comment_id":194037,"utype":1}],"discussion_count":2,"race_medal":0,"score":"18764886404","product_id":100013101,"comment_content":"有个疑问：<br>go test 的相关参数 可以用go help test去看。<br>但是这里面并没有其他参数比如（-cpu 是最大用几核  -bench 是基准测试参数 -run功能测试参数），有没有help命令找出对应每个参数的含义，我用的时候只需要help一下就能找到对应的参数使用。","like_count":5,"discussions":[{"author":{"id":1026643,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/aa/53/768aec0a.jpg","nickname":"郝林","note":"","ucode":"F66BA62BA56FFA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":488741,"discussion_content":"你敲 go help test 并回车之后会发现最后有两段话：\n\nThe test binary also accepts flags that control execution of the test; these\nflags are also accessible by &amp;#39;go test&amp;#39;. See &amp;#39;go help testflag&amp;#39; for details.\n\nFor more about build flags, see &amp;#39;go help build&amp;#39;.\nFor more about specifying packages, see &amp;#39;go help packages&amp;#39;.\n\n第一段的意思是，一些更详细的参数说明需要敲 go help testflag 查看。第二段的意思是，go test 也支持 go build 的一些参数，那些参数需要敲 go help build 查看，另外怎么指定代码包需要敲 go help packages 查看说明。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585023149,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1113645,"avatar":"https://static001.geekbang.org/account/avatar/00/10/fe/2d/2c9177ca.jpg","nickname":"给力","note":"","ucode":"646EE4AFC17224","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":213974,"discussion_content":"问题理解和回答都很到位，完美解决了我的疑问，感谢。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585139234,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":85635,"user_name":"左氧佛沙星人","can_delete":false,"product_type":"c1","uid":1195278,"ip_address":"","ucode":"0D8295E1DABA8C","user_header":"https://static001.geekbang.org/account/avatar/00/12/3d/0e/92176eaa.jpg","comment_is_top":false,"comment_ctime":1555150790,"is_pvip":true,"replies":[{"id":"30819","content":"初学的时候最好用命令行运行。<br><br>两种解决方案：<br><br>1. 在当前代码包下运行 go test 命令。这样可以执行当前代码包下的所有功能测试函数。<br><br>2. 在当前代码包下运行 go test demo52_test.go demo52.go 命令。这样只会执行 demo52_test.go 文件中的功能测试函数。","user_name":"作者回复","user_name_real":"郝林","uid":"1026643","ctime":1555216035,"ip_address":"","comment_id":85635,"utype":1}],"discussion_count":3,"race_medal":0,"score":"18735019974","product_id":100013101,"comment_content":"我用编辑器运行的时候，报错：<br># command-line-arguments [command-line-arguments.test]<br>.&#47;demo52_test.go:10:19: undefined: hello<br>.&#47;demo52_test.go:20:18: undefined: hello<br>.&#47;demo52_test.go:38:11: undefined: introduce<br><br>老师能帮忙解答一下吗？<br>","like_count":4,"discussions":[{"author":{"id":1026643,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/aa/53/768aec0a.jpg","nickname":"郝林","note":"","ucode":"F66BA62BA56FFA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":446744,"discussion_content":"初学的时候最好用命令行运行。\n\n两种解决方案：\n\n1. 在当前代码包下运行 go test 命令。这样可以执行当前代码包下的所有功能测试函数。\n\n2. 在当前代码包下运行 go test demo52_test.go demo52.go 命令。这样只会执行 demo52_test.go 文件中的功能测试函数。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1555216035,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1099513,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c6/f9/caf27bd3.jpg","nickname":"大王叫我来巡山","note":"","ucode":"1B8D0C701BC95E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":10207,"discussion_content":"你用的goland，可以同时选中目录下的所有文件，右键选择你要运行的种类，直接点默认只编译了一个文件","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1568275016,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1195278,"avatar":"https://static001.geekbang.org/account/avatar/00/12/3d/0e/92176eaa.jpg","nickname":"左氧佛沙星人","note":"","ucode":"0D8295E1DABA8C","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1099513,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c6/f9/caf27bd3.jpg","nickname":"大王叫我来巡山","note":"","ucode":"1B8D0C701BC95E","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":51519,"discussion_content":"谢谢大佬","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573891652,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":10207,"ip_address":""},"score":51519,"extra":""}]}]},{"had_liked":false,"id":172150,"user_name":"疯琴","can_delete":false,"product_type":"c1","uid":1099379,"ip_address":"","ucode":"82ACAA4A27753D","user_header":"https://static001.geekbang.org/account/avatar/00/10/c6/73/abb7bfe3.jpg","comment_is_top":false,"comment_ctime":1579096246,"is_pvip":false,"replies":[{"id":"66825","content":"肯定是都能跑的。这个参数主要是为了模拟多核CPU执行程序。这样可以测试并发程序在各种计算环境中的执行情况，包括功能正确性和性能。","user_name":"作者回复","user_name_real":"郝林","uid":"1026643","ctime":1579148728,"ip_address":"","comment_id":172150,"utype":1}],"discussion_count":1,"race_medal":0,"score":"14463998134","product_id":100013101,"comment_content":"结果讲解很清楚👍 cpu那里还不明白，我的笔记本2核超线程，显示-4，我设置-cpu参数为20、100、1000都能跑，也更快，可是这有什么意义呢？通常是不是不设置这个参数就好？","like_count":3,"discussions":[{"author":{"id":1026643,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/aa/53/768aec0a.jpg","nickname":"郝林","note":"","ucode":"F66BA62BA56FFA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":481640,"discussion_content":"肯定是都能跑的。这个参数主要是为了模拟多核CPU执行程序。这样可以测试并发程序在各种计算环境中的执行情况，包括功能正确性和性能。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579148728,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":172005,"user_name":"海盗船长","can_delete":false,"product_type":"c1","uid":1363634,"ip_address":"","ucode":"ECB28BA21A4113","user_header":"https://static001.geekbang.org/account/avatar/00/14/ce/b2/1f914527.jpg","comment_is_top":false,"comment_ctime":1579069543,"is_pvip":false,"replies":[{"id":"66823","content":"我的测试结果如下：<br><br>q2 git:(master) ✗ go test puzzlers&#47;article20&#47;q2<br>ok  \tpuzzlers&#47;article20&#47;q2\t1.369s<br>➜  q2 git:(master) ✗ go test puzzlers&#47;article20&#47;q2<br>ok  \tpuzzlers&#47;article20&#47;q2\t(cached)<br>➜  q2 git:(master) ✗ go test puzzlers&#47;article20&#47;q2<br>ok  \tpuzzlers&#47;article20&#47;q2\t(cached)<br>","user_name":"作者回复","user_name_real":"郝林","uid":"1026643","ctime":1579148341,"ip_address":"","comment_id":172005,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5874036839","product_id":100013101,"comment_content":"go1.12.5 使用go test，多次测试相同的成功测试代码，并没有cached","like_count":2,"discussions":[{"author":{"id":1026643,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/aa/53/768aec0a.jpg","nickname":"郝林","note":"","ucode":"F66BA62BA56FFA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":481578,"discussion_content":"我的测试结果如下：\n\nq2 git:(master) ✗ go test puzzlers/article20/q2\nok  \tpuzzlers/article20/q2\t1.369s\n➜  q2 git:(master) ✗ go test puzzlers/article20/q2\nok  \tpuzzlers/article20/q2\t(cached)\n➜  q2 git:(master) ✗ go test puzzlers/article20/q2\nok  \tpuzzlers/article20/q2\t(cached)\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579148341,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":101433,"user_name":"benying","can_delete":false,"product_type":"c1","uid":1247522,"ip_address":"","ucode":"DEBAB485F381CC","user_header":"https://static001.geekbang.org/account/avatar/00/13/09/22/22c0c4fa.jpg","comment_is_top":false,"comment_ctime":1559807925,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"5854775221","product_id":100013101,"comment_content":"打卡，201900606","like_count":1},{"had_liked":false,"id":327096,"user_name":"jxs1211","can_delete":false,"product_type":"c1","uid":1101006,"ip_address":"","ucode":"B7F1F2D84389E7","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKELX1Rd1vmLRWibHib8P95NA87F4zcj8GrHKYQL2RcLDVnxNy1ia2geTWgW6L2pWn2kazrPNZMRVrIg/132","comment_is_top":false,"comment_ctime":1639914401,"is_pvip":false,"replies":[{"id":"119015","content":"设置b.N是为了多次（N次）执行同一个被测函数，以便获得它的性能量化指标。一般情况下，你可以不去手动设置，但是应该知道它是做什么的。","user_name":"作者回复","user_name_real":"编辑","uid":"1026643","ctime":1639985002,"ip_address":"","comment_id":327096,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1639914401","product_id":100013101,"comment_content":"修改b.N的值是由go运行时控制的吗，并不需要我们关注吧","like_count":0,"discussions":[{"author":{"id":1026643,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/aa/53/768aec0a.jpg","nickname":"郝林","note":"","ucode":"F66BA62BA56FFA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":540190,"discussion_content":"设置b.N是为了多次（N次）执行同一个被测函数，以便获得它的性能量化指标。一般情况下，你可以不去手动设置，但是应该知道它是做什么的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1639985002,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":301759,"user_name":"moonfox","can_delete":false,"product_type":"c1","uid":1526355,"ip_address":"","ucode":"902BFF40EFA9FA","user_header":"https://static001.geekbang.org/account/avatar/00/17/4a/53/063f9d17.jpg","comment_is_top":false,"comment_ctime":1625844465,"is_pvip":false,"replies":[{"id":"109301","content":"当你用 b.N 做循环的时候，这个时间一般都会大于 1 秒的。但注意，这是对于单个测试函数而言的，不是测试总时间。","user_name":"作者回复","user_name_real":"郝林","uid":"1026643","ctime":1626070745,"ip_address":"","comment_id":301759,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1625844465","product_id":100013101,"comment_content":"问题：是否测试总时间一定会超过1秒？<br>答：   因为要找到1秒内最大可执行次数，而在这之前肯定要进行多次尝试，所以测试总时间应该总是会超过1秒的。<br><br>不知道这样理解是否正确呀","like_count":0,"discussions":[{"author":{"id":1026643,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/aa/53/768aec0a.jpg","nickname":"郝林","note":"","ucode":"F66BA62BA56FFA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":523084,"discussion_content":"当你用 b.N 做循环的时候，这个时间一般都会大于 1 秒的。但注意，这是对于单个测试函数而言的，不是测试总时间。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1626070745,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":301758,"user_name":"moonfox","can_delete":false,"product_type":"c1","uid":1526355,"ip_address":"","ucode":"902BFF40EFA9FA","user_header":"https://static001.geekbang.org/account/avatar/00/17/4a/53/063f9d17.jpg","comment_is_top":false,"comment_ctime":1625844260,"is_pvip":false,"replies":[{"id":"109302","content":"文中还有一句话：“当某次执行的时间大于或等于上限时，我们就说这是命令此次对该测试函数的最后一次执行。”","user_name":"作者回复","user_name_real":"郝林","uid":"1026643","ctime":1626070876,"ip_address":"","comment_id":301758,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1625844260","product_id":100013101,"comment_content":"“最后再看这个执行次数的右边，2314 ns&#47;op表明单次执行GetPrimes函数的平均耗时为2314纳秒。这其实就是通过将最后一次执行测试函数时的执行时间，除以（被测函数的）执行次数而得出的。”<br><br>根据文章所说， 500000是最后一次运行时的执行的次数，那可以倒推最后一次的运行时间 为  (2314 * 500000.0 ) &#47; 1000 ^ 3 = 1.157秒，这个时间已经超过了默认时间上限1秒，与文章中说执行的次数是取最后一次不超过1秒的执行次数 相矛盾，对这点不是很理解","like_count":0,"discussions":[{"author":{"id":1026643,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/aa/53/768aec0a.jpg","nickname":"郝林","note":"","ucode":"F66BA62BA56FFA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":523083,"discussion_content":"文中还有一句话：“当某次执行的时间大于或等于上限时，我们就说这是命令此次对该测试函数的最后一次执行。”","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1626070876,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1071172,"avatar":"https://static001.geekbang.org/account/avatar/00/10/58/44/e318a684.jpg","nickname":"Lisanaaa","note":"","ucode":"C907EED05A543D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":557380,"discussion_content":"没明白，那按照道理应该40多万次的时候就已经超过1秒钟该停止了呀","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1647783199,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":196386,"user_name":"传说中的成大大","can_delete":false,"product_type":"c1","uid":1236766,"ip_address":"","ucode":"103543D6E706BF","user_header":"https://static001.geekbang.org/account/avatar/00/12/df/1e/cea897e8.jpg","comment_is_top":false,"comment_ctime":1585277720,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1585277720","product_id":100013101,"comment_content":"这两节的课程内容 我都不好总结<br>我唯一的感受就是  花了三篇文章来讲测试 说明 go语言的测试确实很重要","like_count":0},{"had_liked":false,"id":183157,"user_name":"张sir","can_delete":false,"product_type":"c1","uid":1209431,"ip_address":"","ucode":"52958DF6705208","user_header":"https://static001.geekbang.org/account/avatar/00/12/74/57/7b828263.jpg","comment_is_top":false,"comment_ctime":1582963516,"is_pvip":false,"replies":[{"id":"70895","content":"运行命令 go test -v","user_name":"作者回复","user_name_real":"郝林","uid":"1026643","ctime":1582986029,"ip_address":"","comment_id":183157,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1582963516","product_id":100013101,"comment_content":"我怎么把t.Log的内容打印出来呢","like_count":0,"discussions":[{"author":{"id":1026643,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/aa/53/768aec0a.jpg","nickname":"郝林","note":"","ucode":"F66BA62BA56FFA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":485578,"discussion_content":"运行命令 go test -v","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582986029,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":138918,"user_name":"手指饼干","can_delete":false,"product_type":"c1","uid":1048607,"ip_address":"","ucode":"1AC502D2B782F0","user_header":"","comment_is_top":false,"comment_ctime":1570505637,"is_pvip":false,"replies":[{"id":"53565","content":"文章里写了：<br><br>当某次执行的时间大于或等于上限时，我们就说这是命令此次对该测试函数的最后一次执行。这时的b.N的值就会被包含在测试结果中，也就是上述测试结果中的500000。<br><br>极客时间版权所有: https:&#47;&#47;time.geekbang.org&#47;column&#47;article&#47;41189","user_name":"作者回复","user_name_real":"郝林","uid":"1026643","ctime":1570537632,"ip_address":"","comment_id":138918,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1570505637","product_id":100013101,"comment_content":"请问这里的500000，是最后一次执行测试函数时，被测函数的执行次数？还是整个测试周期，被测函数的执行次数？","like_count":0,"discussions":[{"author":{"id":1026643,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/aa/53/768aec0a.jpg","nickname":"郝林","note":"","ucode":"F66BA62BA56FFA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":469699,"discussion_content":"文章里写了：\n\n当某次执行的时间大于或等于上限时，我们就说这是命令此次对该测试函数的最后一次执行。这时的b.N的值就会被包含在测试结果中，也就是上述测试结果中的500000。\n\n极客时间版权所有: https://time.geekbang.org/column/article/41189","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1570537632,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":73607,"user_name":"xumc","can_delete":false,"product_type":"c1","uid":1033274,"ip_address":"","ucode":"22D24AF9D52B65","user_header":"https://static001.geekbang.org/account/avatar/00/0f/c4/3a/77bbc665.jpg","comment_is_top":false,"comment_ctime":1551939215,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1551939215","product_id":100013101,"comment_content":"老师咨询个问题，1.本地go test的缓存能push到Git 的远程用来跑CI&#47;CD吗<br>2.本地无改动文件的跑了几遍都是显示时间的，没有那种显示cache的go test结果","like_count":0},{"had_liked":false,"id":73605,"user_name":"xumc","can_delete":false,"product_type":"c1","uid":1033274,"ip_address":"","ucode":"22D24AF9D52B65","user_header":"https://static001.geekbang.org/account/avatar/00/0f/c4/3a/77bbc665.jpg","comment_is_top":false,"comment_ctime":1551938898,"is_pvip":false,"replies":[{"id":"26850","content":"不能，即使能也不应该这么做啊。","user_name":"作者回复","user_name_real":"郝林","uid":"1026643","ctime":1551953560,"ip_address":"","comment_id":73605,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1551938898","product_id":100013101,"comment_content":"老师咨询个问题，本地go test的缓存能push到Git 的远程用来跑CI&#47;CD吗","like_count":0,"discussions":[{"author":{"id":1026643,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/aa/53/768aec0a.jpg","nickname":"郝林","note":"","ucode":"F66BA62BA56FFA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":442181,"discussion_content":"不能，即使能也不应该这么做啊。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1551953560,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":62934,"user_name":"Caesar","can_delete":false,"product_type":"c1","uid":1253220,"ip_address":"","ucode":"0319C9E19387CD","user_header":"https://static001.geekbang.org/account/avatar/00/13/1f/64/54458855.jpg","comment_is_top":false,"comment_ctime":1548209555,"is_pvip":true,"replies":[{"id":"25244","content":"跳过测试函数的话，你可以看一下 -run 这个标记。如果要跳过某个包不指定那个包不就得了。","user_name":"作者回复","user_name_real":"郝林","uid":"1026643","ctime":1551181080,"ip_address":"","comment_id":62934,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1548209555","product_id":100013101,"comment_content":"请问老师，假如我测试的时候要跳过某些包中的源码文件，该怎么写go test命令。网上搜了一圈也没找到。","like_count":0,"discussions":[{"author":{"id":1026643,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/aa/53/768aec0a.jpg","nickname":"郝林","note":"","ucode":"F66BA62BA56FFA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":437410,"discussion_content":"跳过测试函数的话，你可以看一下 -run 这个标记。如果要跳过某个包不指定那个包不就得了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1551181080,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":62735,"user_name":"虢國技醬","can_delete":false,"product_type":"c1","uid":1056807,"ip_address":"","ucode":"5A192262AA037E","user_header":"https://static001.geekbang.org/account/avatar/00/10/20/27/a6932fbe.jpg","comment_is_top":false,"comment_ctime":1548145679,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1548145679","product_id":100013101,"comment_content":"打卡","like_count":0},{"had_liked":false,"id":35074,"user_name":"A 凡","can_delete":false,"product_type":"c1","uid":1197361,"ip_address":"","ucode":"BDC8DB599B8284","user_header":"https://static001.geekbang.org/account/avatar/00/12/45/31/53910b61.jpg","comment_is_top":false,"comment_ctime":1540395171,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1540395171","product_id":100013101,"comment_content":"之前一直就没有用心去了解测试命令中各个参数的含义，都是通过ide直接运行了，这里学到了","like_count":0}]}