{"id":248862,"title":"04 | 存储设计","content":"<p><strong>课件和Demo地址</strong><br>\n<a href=\"https://gitee.com/geektime-geekbang/geektime-distributed\">https://gitee.com/geektime-geekbang/geektime-distributed</a></p>","comments":[{"had_liked":false,"id":226924,"user_name":"ahern88","can_delete":false,"product_type":"c3","uid":2039707,"ip_address":"","ucode":"C59BBA928ECF41","user_header":"","comment_is_top":false,"comment_ctime":1592229927,"is_pvip":false,"replies":[{"id":83700,"content":"InfluxDB和OpenTSDB都是时间序列数据库，当然可以做到。OpenTSDB是基于HBase的，HBase原理和Cassandra相似，都是基于列的数据库，都适合存时间序列数据。","user_name":"作者回复","user_name_real":"杨波","uid":1030344,"ctime":1592322430,"ip_address":"","comment_id":226924,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100053601,"comment_content":"是不是可以基于时序数据库如InfluxDB或OpenTSDB做更加合适呢？","like_count":6,"discussions":[{"author":{"id":1030344,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/b8/c8/c94d38a7.jpg","nickname":"杨波","note":"","ucode":"FA3418BB703BCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":498417,"discussion_content":"InfluxDB和OpenTSDB都是时间序列数据库，当然可以做到。OpenTSDB是基于HBase的，HBase原理和Cassandra相似，都是基于列的数据库，都适合存时间序列数据。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1592322430,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":253783,"user_name":"平凡的世界","can_delete":false,"product_type":"c3","uid":1082535,"ip_address":"","ucode":"68DBE664277922","user_header":"https://static001.geekbang.org/account/avatar/00/10/84/a7/88abc4c7.jpg","comment_is_top":false,"comment_ctime":1602890488,"is_pvip":false,"replies":[{"id":93008,"content":"你好，视频中的mysql表设计只演示了聚合数据，一般原始数据可以考虑单独存ES或者Cassandra&#47;HBase等NoSQL数据库。\n\nspace_info存放空间相关数据，比方说空间名称，我的视频，我的文章等，可以参考波波在B站上的空间：https:&#47;&#47;space.bilibili.com&#47;518029478\n\n","user_name":"作者回复","user_name_real":"杨波","uid":1030344,"ctime":1603293152,"ip_address":"","comment_id":253783,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100053601,"comment_content":"mysql表设计这个有点没看懂。1.这里好像只有聚合表，没有开始说的每个视频事件单独存储的表。2.space_info一般有些什么字段为什么要单独做一个表。","like_count":2,"discussions":[{"author":{"id":1030344,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/b8/c8/c94d38a7.jpg","nickname":"杨波","note":"","ucode":"FA3418BB703BCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":507179,"discussion_content":"你好，视频中的mysql表设计只演示了聚合数据，一般原始数据可以考虑单独存ES或者Cassandra/HBase等NoSQL数据库。\n\nspace_info存放空间相关数据，比方说空间名称，我的视频，我的文章等，可以参考波波在B站上的空间：https://space.bilibili.com/518029478\n\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1603293152,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":230336,"user_name":"空空如也","can_delete":false,"product_type":"c3","uid":1194238,"ip_address":"","ucode":"342F3A2C8A3C11","user_header":"https://static001.geekbang.org/account/avatar/00/12/38/fe/988bf0d9.jpg","comment_is_top":false,"comment_ctime":1593350846,"is_pvip":false,"replies":[{"id":85287,"content":"TimescaleDB是在PostgreSQL基础上，针对时间序列场景的扩展，完全可以实现分布式计数服务。","user_name":"作者回复","user_name_real":"杨波","uid":1030344,"ctime":1593530447,"ip_address":"","comment_id":230336,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100053601,"comment_content":"最近在用TimescaleDB，这个场景也适用的。它支持自动按时间列分区，插入和查询的性能单机就很高。\n优势：\n1.标准sql查询，学习成本低。\n2.查询性能高，数据量越大优势越明显\n3.面向时间的特征，支持大量时间的方法\n4.写入快，且不受数据量影响，官方数据111 K&#47;s\n5.支持持续聚合，可以近实时保存指定时间范围的聚合指标。\n6.支持时序数据表与关系型数据表join如图中的Video_Stats可以改为时序数据表，其它关联表可以不变。\n劣势：\n1.多节点集群写暂不支持，功能正在开发中 \n2.其它缺点（其它人总结吧）","like_count":2,"discussions":[{"author":{"id":1030344,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/b8/c8/c94d38a7.jpg","nickname":"杨波","note":"","ucode":"FA3418BB703BCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":499843,"discussion_content":"TimescaleDB是在PostgreSQL基础上，针对时间序列场景的扩展，完全可以实现分布式计数服务。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1593530447,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":228916,"user_name":"三尾鱼","can_delete":false,"product_type":"c3","uid":1174126,"ip_address":"","ucode":"E320B6B860F425","user_header":"https://static001.geekbang.org/account/avatar/00/11/ea/6e/a1fc68a8.jpg","comment_is_top":false,"comment_ctime":1592838497,"is_pvip":false,"replies":[{"id":84565,"content":"读写分离以后，系统就引入了分区，根据CAP原理，在P分区的情况下，CA不可兼得，需要做出牺牲，如果要可用性A，那么一致性C就需要牺牲，如果要强一致性C，那么可用性A就需要牺牲。\n\n后面第四章会讲分布式事务和一致性问题，请耐心等待第四章。\n\n","user_name":"作者回复","user_name_real":"杨波","uid":1030344,"ctime":1592931030,"ip_address":"","comment_id":228916,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100053601,"comment_content":"如果一个事务中有读有写，那么读写分离的场景，读和写会分别访问主库和从库，还是都是访问主库？分别访问的话会不会有数据不一致的问题","like_count":2,"discussions":[{"author":{"id":1030344,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/b8/c8/c94d38a7.jpg","nickname":"杨波","note":"","ucode":"FA3418BB703BCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":499254,"discussion_content":"读写分离以后，系统就引入了分区，根据CAP原理，在P分区的情况下，CA不可兼得，需要做出牺牲，如果要可用性A，那么一致性C就需要牺牲，如果要强一致性C，那么可用性A就需要牺牲。\n\n后面第四章会讲分布式事务和一致性问题，请耐心等待第四章。\n\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1592931030,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":227868,"user_name":"ple","can_delete":false,"product_type":"c3","uid":1120057,"ip_address":"","ucode":"E1C4519C325994","user_header":"https://static001.geekbang.org/account/avatar/00/11/17/39/3274257b.jpg","comment_is_top":false,"comment_ctime":1592499024,"is_pvip":false,"replies":[{"id":84197,"content":"你好，像mysql主从+读写分离，是目前互联网企业普遍做法，我之前工作过的公司像携程&#47;拍拍贷等，大量应用mysql主从+读写分离。分表分库和缓存可以部分解决性能问题(课程第三&#47;第五章有案例)，但不能解决所有性能问题，有的时候还是需做DB层的主从+读写分离。课程第四章会讲到CQRS技术， CQRS可以认为是服务层的一种读写分离，在大规模微服务架构中有很多应用场景，第四章我会进一步介绍。\n\n像mysql MHA之类的技术，是可以做到主从高可用的，一主二从，主如果挂了，其中一个从可以自动升级成主，具体细节可以查网上资料很多。\n\n","user_name":"作者回复","user_name_real":"杨波","uid":1030344,"ctime":1592666627,"ip_address":"","comment_id":227868,"utype":1}],"discussion_count":2,"race_medal":0,"score":2,"product_id":100053601,"comment_content":"想知道主从分离如果保证高可用，那为什么不直接多台机器集群。如果是为了高性能，让查询更快，读从库减少主库压力，那为什么不用分表，或者加缓存解决？主从分离有没有一种特殊的适用场景？","like_count":2,"discussions":[{"author":{"id":1030344,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/b8/c8/c94d38a7.jpg","nickname":"杨波","note":"","ucode":"FA3418BB703BCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":498811,"discussion_content":"你好，像mysql主从+读写分离，是目前互联网企业普遍做法，我之前工作过的公司像携程/拍拍贷等，大量应用mysql主从+读写分离。分表分库和缓存可以部分解决性能问题(课程第三/第五章有案例)，但不能解决所有性能问题，有的时候还是需做DB层的主从+读写分离。课程第四章会讲到CQRS技术， CQRS可以认为是服务层的一种读写分离，在大规模微服务架构中有很多应用场景，第四章我会进一步介绍。\n\n像mysql MHA之类的技术，是可以做到主从高可用的，一主二从，主如果挂了，其中一个从可以自动升级成主，具体细节可以查网上资料很多。\n\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1592666627,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1194545,"avatar":"https://static001.geekbang.org/account/avatar/00/12/3a/31/6a127efe.jpg","nickname":"漂泊的松鼠","note":"","ucode":"281CF2FAA6F904","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":293150,"discussion_content":"分库分表解决的是读写扩展性问题，主从解决的是高可用问题，读写分离是读写的一种优化而已，个人理解是这样，波波","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1595464281,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":234103,"user_name":"托尼斯威特","can_delete":false,"product_type":"c3","uid":1729060,"ip_address":"","ucode":"98A1035527292E","user_header":"https://static001.geekbang.org/account/avatar/00/1a/62/24/07e2507c.jpg","comment_is_top":false,"comment_ctime":1594596616,"is_pvip":false,"replies":[{"id":86964,"content":"对，第二个表中的timestamp表示每分钟的聚合数据。\n\n如果要查询总的观看数，后面在后台还要进一步聚合每小时&#47;天&#47;月&#47;年的数据，这样可以加速查询。","user_name":"作者回复","user_name_real":"杨波","uid":1030344,"ctime":1595004783,"ip_address":"","comment_id":234103,"utype":1}],"discussion_count":2,"race_medal":0,"score":2,"product_id":100053601,"comment_content":"表结构设计 &quot;聚合数据&quot;表有三列, 怎么理解Timestamp这一列? \n是最后更新事件, 还是聚合数据所属的一分钟? \n看视频似乎是第二个, 可是这样要查询总的观看数, 依然要把每分钟的观看数加起来呀? \n是否还需要一个总的聚合数据表加速查询?","like_count":1,"discussions":[{"author":{"id":1030344,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/b8/c8/c94d38a7.jpg","nickname":"杨波","note":"","ucode":"FA3418BB703BCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":501276,"discussion_content":"对，第二个表中的timestamp表示每分钟的聚合数据。\n\n如果要查询总的观看数，后面在后台还要进一步聚合每小时/天/月/年的数据，这样可以加速查询。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1595004783,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1729060,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/62/24/07e2507c.jpg","nickname":"托尼斯威特","note":"","ucode":"98A1035527292E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":290845,"discussion_content":"懂了, 需求是要查询最近一分钟, 最近一小时, 最近一天的访问量. 还要能按照 分钟/小时/天 为粒度绘图. \n所以表中就要有 分钟/小时/天 对应的聚合数据. \n总的聚合数据也可以有. ","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1594622153,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":232113,"user_name":"loris","can_delete":false,"product_type":"c3","uid":1179312,"ip_address":"","ucode":"00842745CF4B31","user_header":"https://static001.geekbang.org/account/avatar/00/11/fe/b0/260f41f0.jpg","comment_is_top":false,"comment_ctime":1593857770,"is_pvip":false,"replies":[{"id":86102,"content":"当然，数据模型设计一定要考虑读写模式。","user_name":"作者回复","user_name_real":"杨波","uid":1030344,"ctime":1594310243,"ip_address":"","comment_id":232113,"utype":1}],"discussion_count":1,"race_medal":1,"score":2,"product_id":100053601,"comment_content":"nosql数据模型设计和数据读取模式有很大关系\n","like_count":1,"discussions":[{"author":{"id":1030344,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/b8/c8/c94d38a7.jpg","nickname":"杨波","note":"","ucode":"FA3418BB703BCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":500515,"discussion_content":"当然，数据模型设计一定要考虑读写模式。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1594310243,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":229493,"user_name":"D.","can_delete":false,"product_type":"c3","uid":1283197,"ip_address":"","ucode":"E1255FF480E831","user_header":"https://static001.geekbang.org/account/avatar/00/13/94/7d/d0275727.jpg","comment_is_top":false,"comment_ctime":1593015645,"is_pvip":false,"replies":[{"id":84830,"content":"现代消息系统比如Kafka，只要写入了可以保证不丢消息。但是生产者客户端因为网络等因素，可能会重发，造成消息重复，所以消费端要做去重或者幂等处理。","user_name":"作者回复","user_name_real":"杨波","uid":1030344,"ctime":1593188385,"ip_address":"","comment_id":229493,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100053601,"comment_content":"消息中间件需要考虑消息丢失，补偿机制吧？","like_count":1,"discussions":[{"author":{"id":1030344,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/b8/c8/c94d38a7.jpg","nickname":"杨波","note":"","ucode":"FA3418BB703BCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":499505,"discussion_content":"现代消息系统比如Kafka，只要写入了可以保证不丢消息。但是生产者客户端因为网络等因素，可能会重发，造成消息重复，所以消费端要做去重或者幂等处理。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1593188385,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":228214,"user_name":"远方","can_delete":false,"product_type":"c3","uid":1064732,"ip_address":"","ucode":"244C74F9857196","user_header":"https://static001.geekbang.org/account/avatar/00/10/3f/1c/1e4dfbc9.jpg","comment_is_top":false,"comment_ctime":1592615018,"is_pvip":false,"replies":[{"id":84213,"content":"可以用hbase，还有基于hbase的opentsdb也可以。课程只是演示用cassandra，也是可以的。具体看公司的现有技术栈和运维能力等。","user_name":"作者回复","user_name_real":"杨波","uid":1030344,"ctime":1592668235,"ip_address":"","comment_id":228214,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100053601,"comment_content":"为什么不用hbase，也是高可用的，而且运维人员多","like_count":1,"discussions":[{"author":{"id":1030344,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/b8/c8/c94d38a7.jpg","nickname":"杨波","note":"","ucode":"FA3418BB703BCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":498959,"discussion_content":"可以用hbase，还有基于hbase的opentsdb也可以。课程只是演示用cassandra，也是可以的。具体看公司的现有技术栈和运维能力等。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1592668235,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":226965,"user_name":"SuperSu","can_delete":false,"product_type":"c3","uid":1068326,"ip_address":"","ucode":"A3F7AF23D193AF","user_header":"https://static001.geekbang.org/account/avatar/00/10/4d/26/44095eba.jpg","comment_is_top":false,"comment_ctime":1592236567,"is_pvip":false,"replies":[{"id":83703,"content":"分库分表中间件，其实原理大多类似。shardingsphere java开发的，开源时间也比较久，社区生态也比较好(Apache背书)，文档也不错，国内企业落地案例多，生产应用推荐。cetus是c开发，号称性能第一，开源时间不长，可以关注。","user_name":"作者回复","user_name_real":"杨波","uid":1030344,"ctime":1592322775,"ip_address":"","comment_id":226965,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100053601,"comment_content":"shardingsphere跟cetus能否对比下？","like_count":1,"discussions":[{"author":{"id":1030344,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/b8/c8/c94d38a7.jpg","nickname":"杨波","note":"","ucode":"FA3418BB703BCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":498432,"discussion_content":"分库分表中间件，其实原理大多类似。shardingsphere java开发的，开源时间也比较久，社区生态也比较好(Apache背书)，文档也不错，国内企业落地案例多，生产应用推荐。cetus是c开发，号称性能第一，开源时间不长，可以关注。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1592322775,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":389318,"user_name":"安徒生童话","can_delete":false,"product_type":"c3","uid":1160292,"ip_address":"北京","ucode":"70E9DFCBFAA3BB","user_header":"https://static001.geekbang.org/account/avatar/00/11/b4/64/98a3df60.jpg","comment_is_top":false,"comment_ctime":1712110110,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":3,"product_id":100053601,"comment_content":"Registry Center保存的是计算服务的节点信息还是MySQL的节点信息？","like_count":0}]}