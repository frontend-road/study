{"id":41781,"title":"47 | 用机器设计测试用例：基于模型的测试","content":"<p>你好，我是茹炳晟。今天我和你分享的主题是：用机器设计测试用例之基于模型的测试”。</p>\n<p>我在前面4篇文章中，和你分享的探索式测试、测试驱动开发TDD、精准测试，以及渗透测试的内容，你是否已经掌握了呢？有没有尝试将这些比较新的理念用到你的工程项目中呢？如果你在应用的过程中，遇到了任何问题，也欢迎给我留言一起讨论。</p>\n<p>那么，现在我们就正式开始测试新技术系列的最后一个话题：基于模型的测试。</p>\n<p>可以说，软件测试是一款软件产品质量的最后一道防线，是产品上线前必不可少、最重要的一个环节。每一款高质量的软件产品背后，都蕴含了大量的测试工作。而且，这些测试工作很可能是整个软件开发过程中最昂贵、劳动最密集的工作。</p>\n<p>虽说从最简单的功能性黑盒测试，到涉及定理证明的复杂测试，已经有很多种方法可以帮助我们提高测试的可靠性和有效性。但是，在设计测试用例的过程中，总还是存在着这样那样的问题，使得软件测试的结果没那么理想。</p>\n<p>为此，我们新引入了基于模型的测试，即Model-Based-Testing，简称MBT。</p>\n<p>MBT，是自动化测试的一个分支。它是将测试用例的设计依托于被测系统的模型，并基于该模型自动生成测试用例的技术。其中，这个被测系统的模型表示了被测系统行为的预期，也可以说是代表了我们对被测系统的预期。</p><!-- [[[read_end]]] -->\n<p>从质量保证的角度来看，我们可以制定测试内容，但却无法保证测试会覆盖所有可能的组合。而MBT则允许软件开发人员和测试人员，只关注建立系统的正确性以及模型的规范性，再通过专门的MBT工具根据不同的测试用例设计策略从系统模型生成可靠的测试用例。</p>\n<p>那么，MBT的原理是什么，而什么样的应用又适合进行MBT呢？接下来，我就重点为你回答这两个问题。</p>\n<h2>MBT的基本原理</h2>\n<p>MBT的基本原理是通过建立被测系统的设计模型，然后结合不同的算法和策略来遍历该模型，以此生成测试用例的设计。</p>\n<p>我用下面的一张图片，为你描述了MBT的过程：</p>\n<p><img src=\"https://static001.geekbang.org/resource/image/08/f9/08c3605390ca20c46b63e92f29f375f9.png?wh=1078*1026\" alt=\"\" /></p>\n<center>图1 MBT的一般过程</center>\n<p>如图1所示，开发者首先根据产品需求或者说明来构建模型，然后结合测试对象生成测试用例，测试用例针对测试对象执行完之后，生成测试报告比对测试结果。</p>\n<p>接下来，我以简单的登录系统为例，和你说明如何建模。</p>\n<p>当用户访问网站时，网站需要识别用户是否已经登录：</p>\n<ul>\n<li>如果已经是登录状态，则让用户进入，结束这一分支；</li>\n<li>如果用户还没有登录，那么页面需要返回登录框给用户。用户在登录框输入用户名和密码后，由后台服务验证用户名和密码是否正确，如果通过验证，则用户登录成功，结束分支；否则，返回错误信息，并再次返回登录框供用户登录。</li>\n</ul>\n<p>根据这个逻辑，我们可以建模如下：</p>\n<p><img src=\"https://static001.geekbang.org/resource/image/7f/95/7fb2ceb31c81046261d59a3c2226a195.png?wh=783*652\" alt=\"\" /></p>\n<center>图2 网站登录系统建模</center>\n<p>至此，我们就完成对这个登录系统的建模工作了。然后，我们通过具象化被测产品的需求行为，再通过工具来遍历模型中的各个路径，就可以得到我们需要的测试用例了。</p>\n<p>所以，执行MBT的过程就好比你把软件系统的设计画为了一张由节点和边构成的数据结构意义上的“图”，然后通过一定的算法（比如，深度遍历或者广度遍历）来尽可能完整覆盖图中全部的可能路径的过程。</p>\n<p>而根据被测系统的特点，我们可以创建不同类型的模型完成MBT。接下来，我们就一起看看有哪些常用的MBT模型吧。</p>\n<h2>常用模型简介</h2>\n<p>根据被测系统本身的特点，我们常用的模型主要有限状态机、状态图，以及UML三种。其中，有限状态机和状态图比较适合于用状态或者事件驱动的系统，而UML比较适合于靠业务流程驱动的系统。</p>\n<p><strong>第一，有限状态机。</strong></p>\n<p>有限状态机可以帮助测试人员根据选中的输入来评估输出，不同的输入组合对应着不同的系统状态。</p>\n<p>在登录系统这个例子中，员工在未登录时的状态是“未登录”，一旦登录成功状态就会变为“已登录”。在已登录的状态下，员工可以访问各类资源，使用系统内的工具。</p>\n<p><strong>第二，状态图。</strong></p>\n<p>状态图是有限状态机的延伸，用于描述系统的各种行为，尤其适用于复杂且实时的系统。</p>\n<p>状态图有一定数量的状态，系统的行为可以以事件的方式来驱动状态的变化。比如，缺陷管理工具中出现了缺陷，其初始状态为“new”；缺陷被开发人员修复后，就必须将其改为“Fixed”；但是，如果此时测试人员发现缺陷并未修复或者只是部分修复时，则需将状态更改为“Reopen”（重新打开）。</p>\n<p>状态图的设计方式，要求为每个不同的状态创建一个事件。</p>\n<p><strong>第三，UML。</strong></p>\n<p>UML即统一建模语言，是一种标准化的通用建模语言。UML有自己定义的图形库，里面包含了丰富的图形用以描述系统、流程等。</p>\n<p>UML可以通过创建可视化模型，来描述非常复杂的系统行为。</p>\n<p>当我们完成被测系统的建模工作后，接下来就要将模型转化为可执行的测试用例了。这个转换过程，需要借助工具来完成。</p>\n<p>因为不同领域的产品风格迥异，其使用的自动化框架和编程语言也各不相同，所以我们需要花费一些精力去寻找与自己产品匹配的MBT工具。其实，在很多情况下，我们还需要根据产品特点，去自行开发和定制工具。</p>\n<h2>MBT工具简介</h2>\n<p>这里，我为你罗列了一些常见的MBT工具，包括：BPM-X、fMBT、GraphWalker。在这里，我为你简单介绍这些工具的目的是，让你可以对MBT工具本身有个感性的认识，让你知道此类工具的应用场景和上下文。至于说如何来选择使用这些工具，这在很大程度上取决于被测系统的特点。</p>\n<p><strong>第一，BPM-X</strong></p>\n<p>BPM-X根据不同的标准（比如，语句、分支、路径、条件）从业务流程模型创建测试用例。</p>\n<p>它还可以从多个建模工具导入模型，并可以将测试用例导出到Excel、HP Quality Center等。这个工具，适用于业务流程比较清晰直观的场景。</p>\n<p><strong>第二，fMBT</strong></p>\n<p>fMBT是一组免费的、用于全自动测试生成和执行的工具，也是一组支持高水平测试自动化的实用程序和库，主要被应用在GUI测试中。</p>\n<p>fMBT包括用于多平台GUI测试的Python库，用于编辑、调试、运行和记录GUI测试脚本的工具，以及用于编辑和可视化分析测试模型和生成的测试工具。</p>\n<p><strong>第三，GraphWalker</strong></p>\n<p>GraphWalker以有向图的形式读取模型，主要支持FSM、EFSM模型。它读取这些模型，然后生成测试路径。GraphWalker除了适用于GUI测试外，更适合于多状态以及基于事件驱动的状态转换的后台系统。</p>\n<p>另外，GraphWalker还支持从有限状态机中生成测试用例。</p>\n<p>除此之外，市面上还有很多MBT测试工具，比如GSL、JSXM、MaTeLo、MBT Suite等。这里就不再一一介绍了，你可以自行百度了解它们的特点和适用场景，从而选取合适自己的工具。</p>\n<h2>MBT的优势</h2>\n<p>其实，MBT并不能算是一种新颖的测试技术，早在七八年前就已经被提了出来并且试图应用于软件产品的测试工作中。但是，MBT在很长一段时间内，却一直停留在概念阶段，主要原因是一直没有普适的工具支持，所以很少有成功实施的实际案例。同时，业界一直以来都缺乏高效的测试用例设计生成策略，所以虽然大家都能看到MBT的优势，但能在实际项目中应用执行的却是寥寥无几。</p>\n<p>与传统测试相比，MBT的优点如下：</p>\n<ol>\n<li>\n<p><strong>测试用例的维护更轻松</strong>。由于测试用例是基于被测系统的模型生成的，因此我们只需维护好模型即可，而无需关注测试用例的细节。</p>\n</li>\n<li>\n<p><strong>软件缺陷发现得更早</strong>。由于我们在构建被测系统模型的过程中，已经对被测系统有了比较全面的理解，加之要根据系统需求/说明完成建模过程，所以我们可以在早期建模时发现被测系统可能存在的明显缺陷，而不用等到执行了大量的测试用例以后才发现这些缺陷。</p>\n</li>\n<li>\n<p><strong>测试自动化的水平更高</strong>。由于MBT只需建好模型便可以自动生成测试用例，所以不再需要人工编写测试文档。而更高级的应用，甚至可以直接生成可以直接执行的自动化测试脚本。</p>\n</li>\n<li>\n<p><strong>测试覆盖率变得更高，使得彻底的测试（即：穷尽测试）成为了可能</strong>。由于我们需要做的只是正确、详尽地用模型描述被测系统，而生成测试用例完全由MBT工具实现，所以这就避免了人工设计测试用例时的思维局限性，能够有效地提高测试覆盖率，让彻底的测试变为可能。<br />\n当然，是否有必要开展彻底的测试还是要由风险决定。这里的风险指的是，由于漏测导致产品问题对业务的影响程度。MBT只是从技术上提供了可能性。</p>\n</li>\n<li>\n<p><strong>基于模型间接维护测试用例的方式更高效</strong>。在传统测试中，如果被测系统的流程或者功能发生了变化，我们需要耗费大量的人力和时间成本，去重新设计与之匹配的测试用例。而在MBT中，我们只需要更新被测系统的模型即可，剩下的测试用例生成工作可以由MBT工具自动完成。</p>\n</li>\n</ol>\n<h2>MBT的劣势</h2>\n<p>虽然MBT相对于传统测试有很多优点，但它也不是完美的测试方案。在实际开展MBT时，我们往往需要应对很多挑战，并克服很多困难。所以，到现在为止，MBT并没有被广泛使用于软件测试领域。</p>\n<p>在这里，我总结了开展MBT的三大难点：</p>\n<ol>\n<li>\n<p><strong>学习成本较高</strong>。MBT要求开发人员和测试人员都精通建模，这就需要一定的培训成本，需要让开发人员去学习测试的技能，让测试人员去学习建模概念。这其中还牵涉到建模工具的选择，以及学习等成本。</p>\n</li>\n<li>\n<p><strong>使用MBT的初期投资较大</strong>。在很多情况下，我们并不能找到适合自己产品的建模工具，而需要自行创建MBT工具。<br />\n在自行定制MBT工具时，我们要考虑到这个工具必须是可扩展的，并且能够处理复杂的测试逻辑，提供足够高的测试覆盖率，因此刚开始的工具建设就需要花费大量时间和精力。<br />\n更糟糕的情况是，当工具建好后，我们却发现它并不能满足所有的建模需求，因此还要在建模的同时对工具进行微调。而，这种微调工作的难度，也比较大。</p>\n</li>\n<li>\n<p><strong>早期根据模型生成测试用例的技术并不是非常成熟</strong>。很多时候只是根据图论的算法来遍历模型，这就会导致生成的很多测试用例在业务上根本没有任何实际意义，也因此阻碍了MBT在实际项目中的落地。<br />\n不过好在近一两年来，基于人工智能（AI）生成测试用例的概念不断成熟，所以将基于AI的测试用例生成和MBT相结合，将会是接下来的一个发展方向。</p>\n</li>\n</ol>\n<p>总的来说，MBT和传统测试各有优劣。所以，测试的方法多种多样，MBT只是其中的一种。</p>\n<p>如果一个应用的任何组件都可以通过模型来模拟、通过驱动程序来驱动，并可以通过测试结果来比较的话，那么这个应用就是MBT的最佳候选者。</p>\n<p>如果我们的产品特征符合开展MBT的要求，并且团队各方面的条件都支持使用MBT时，我们便可以尝试用这种方法来改革我们的测试方式。尤其是将MBT结合基于AI的测试用例生成技术，将可以大大加速MBT产业应用的步伐。</p>\n<p>但是，不管是否采用MBT，开发人员或测试人员在接触到一款软件产品时，首先都会有一个心理建模的过程，自己先去理解并在脑中勾勒出系统的功能结构和流程。其实，这些内容很容易就可以转换成实际的模型，也就为MBT创造了条件。</p>\n<h2>总结</h2>\n<p>今天，我和你分享了MBT的基本概念和方法。</p>\n<p>MBT是一种基于被测系统的模型，由工具自动生成测试用例的软件测试技术。所以，这也就决定了MBT相对于传统测试技术可以在测试用例维护、软件缺陷发现时机、测试自动化水平，以及测试覆盖率等方面有其独到的优势。</p>\n<p>但同时，这也使得MBT相对于传统软件测试，在初期阶段投入较大，学习应用的成本较高。也正因为如此，MBT概念虽然已经提出了七八年的时间，但却并没有被广泛应用于软件测试领域。</p>\n<p>所以，关于是否要在自己的项目中开展MBT，我们需要综合考虑项目本身的特点和人员的技术水平，以此决定是否有必要开展MBT。</p>\n<h2>思考题</h2>\n<p>假如你要在项目中开展MBT，你会如何判断你的项目是否适合采用MBT，以及你认为会遇到哪些问题可能会阻碍MBT的开展呢？</p>\n<p>感谢你的收听，欢迎你给我留言一起讨论。</p>\n<p></p>\n","neighbors":{"left":{"article_title":"46 | 安全第一：渗透测试","id":41608},"right":{"article_title":"48 | 优秀的测试工程师为什么要懂大型网站的架构设计？","id":42373}},"comments":[{"had_liked":false,"id":32518,"user_name":"鱼贯而过","can_delete":false,"product_type":"c1","uid":1089675,"ip_address":"","ucode":"A286F1E0528733","user_header":"https://static001.geekbang.org/account/avatar/00/10/a0/8b/28bf8eeb.jpg","comment_is_top":false,"comment_ctime":1539599122,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"31604370194","product_id":100009601,"comment_content":"我们研究生时期常做模型检测，将模型检测认为是不同于软件测试的一种方法。再扩大一些，模型检测属于形式化方法的一种，确实是门槛高，成本高，只有关系生命的大型软件，比如飞机上的关键软件，才需要形式化方法","like_count":7},{"had_liked":false,"id":140776,"user_name":"Agori","can_delete":false,"product_type":"c1","uid":1569736,"ip_address":"","ucode":"05FBC2E90F7869","user_header":"https://static001.geekbang.org/account/avatar/00/17/f3/c8/80185760.jpg","comment_is_top":false,"comment_ctime":1571047183,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10160981775","product_id":100009601,"comment_content":"有用过UML建模，只是为了梳理逻辑，利于编写测试用例","like_count":2},{"had_liked":false,"id":243296,"user_name":"18101888516","can_delete":false,"product_type":"c1","uid":1274218,"ip_address":"","ucode":"7955DE0BBAAB62","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIT6XZicKWG7SMCoicWRU6E0r9MWziaoDNJCiblO7s9vLAHusROEHB8ypJT8u0J7sDjUOXE1ic1j2oLzvg/132","comment_is_top":false,"comment_ctime":1598023518,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5892990814","product_id":100009601,"comment_content":"能不能举例一两个已经实施成功案例供借鉴呢？","like_count":1},{"had_liked":false,"id":48719,"user_name":"王盛武","can_delete":false,"product_type":"c1","uid":1182516,"ip_address":"","ucode":"DE7EF246D3DCE8","user_header":"https://static001.geekbang.org/account/avatar/00/12/0b/34/f41d73a4.jpg","comment_is_top":false,"comment_ctime":1544521554,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5839488850","product_id":100009601,"comment_content":"类似于BPM","like_count":1},{"had_liked":false,"id":45441,"user_name":"小老鼠","can_delete":false,"product_type":"c1","uid":1257460,"ip_address":"","ucode":"C663A0C863A515","user_header":"https://static001.geekbang.org/account/avatar/00/13/2f/f4/2dede51a.jpg","comment_is_top":false,"comment_ctime":1543642000,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5838609296","product_id":100009601,"comment_content":"对于unhappy的路径，MBT会涉及到吗？","like_count":1},{"had_liked":false,"id":34503,"user_name":"红娟","can_delete":false,"product_type":"c1","uid":1164879,"ip_address":"","ucode":"F5988451FC91A6","user_header":"https://static001.geekbang.org/account/avatar/00/11/c6/4f/0c215abf.jpg","comment_is_top":false,"comment_ctime":1540192822,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5835160118","product_id":100009601,"comment_content":"脑洞大开，第一次听说MBT概念","like_count":1},{"had_liked":false,"id":34029,"user_name":"꧁༺Eve Pan༻꧂","can_delete":false,"product_type":"c1","uid":1270292,"ip_address":"","ucode":"588C887866D052","user_header":"https://static001.geekbang.org/account/avatar/00/13/62/14/1a219456.jpg","comment_is_top":false,"comment_ctime":1539956243,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5834923539","product_id":100009601,"comment_content":"第一次接触MBT概念，以往项目有画过uml业务流，用于测试用例，但是从来没有用过具体的MBT工具。","like_count":1},{"had_liked":false,"id":32668,"user_name":"朝如青丝暮成雪","can_delete":false,"product_type":"c1","uid":1164201,"ip_address":"","ucode":"95C98ECFBC1662","user_header":"https://static001.geekbang.org/account/avatar/00/11/c3/a9/aa5a5d8b.jpg","comment_is_top":false,"comment_ctime":1539659761,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5834627057","product_id":100009601,"comment_content":"这些软件使用起来非常的不便，感觉无从下手","like_count":1},{"had_liked":false,"id":356701,"user_name":"付晓杰","can_delete":false,"product_type":"c1","uid":1869584,"ip_address":"上海","ucode":"66634A3401A176","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/FGeCDgpXdhsXseIGF3GCzZibDJlOfO4KDqPJkMra2e0TJj3QVQk4t1oEd1BuQPtYOeavFyYxicd5fTZ33tIbPOZQ/132","comment_is_top":false,"comment_ctime":1662517946,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1662517946","product_id":100009601,"comment_content":"MBT模型主要有限状态机、状态图，以及 UML 三种.<br>MBT 工具，包括：BPM-X、fMBT、GraphWalker.","like_count":0},{"had_liked":false,"id":335168,"user_name":"Geek_da7f5e","can_delete":false,"product_type":"c1","uid":2694542,"ip_address":"","ucode":"FB20938C74EEAE","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJSGx0Fcs4kajDDVHjxjC3R1ibE1VmTnzPibohSP6ySBzoesCRLicKA9ocTtkceV9UlV6pvUj1vuh9TQ/132","comment_is_top":false,"comment_ctime":1645369236,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1645369236","product_id":100009601,"comment_content":"感谢老师，这几讲测试新技术确实拓展了自己的视野和思路，给了自己一些新的思考。虽然这些新的测试模式、理念或是技术暂时还未得到广泛应用，但相信在不久的将来会得到应用。<br>","like_count":0},{"had_liked":false,"id":335148,"user_name":"小呀么小二郎","can_delete":false,"product_type":"c1","uid":1326905,"ip_address":"","ucode":"149540DCFDF43E","user_header":"https://static001.geekbang.org/account/avatar/00/14/3f/39/b1558fc9.jpg","comment_is_top":false,"comment_ctime":1645360953,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1645360953","product_id":100009601,"comment_content":"新知识get","like_count":0},{"had_liked":false,"id":241927,"user_name":"捷后愚生","can_delete":false,"product_type":"c1","uid":1170483,"ip_address":"","ucode":"A1F935D39C8488","user_header":"https://static001.geekbang.org/account/avatar/00/11/dc/33/a68c6b26.jpg","comment_is_top":false,"comment_ctime":1597504227,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1597504227","product_id":100009601,"comment_content":"学习了，真是让人耳目一新啊！<br>现在工作没有接触基于模型自动生成测试用例，也没有听说那个公司真的落地了这个技术。<br>如果要落地这个技术，那对测试人员的要求可是非常高啊，需要能够建模。<br>关于根据模型深度遍历自动生成测试用例，让我想到monkey类似的工具，可以遍历测试UI页面，原理可能是差不多吧","like_count":0},{"had_liked":false,"id":173870,"user_name":"陈九思","can_delete":false,"product_type":"c1","uid":1281247,"ip_address":"","ucode":"81E4EC6A5BD9AC","user_header":"https://static001.geekbang.org/account/avatar/00/13/8c/df/4d77c1ca.jpg","comment_is_top":false,"comment_ctime":1579747094,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1579747094","product_id":100009601,"comment_content":"我这边的认识是，MBT是很好的思路，落地真的很困难。就像UML也没办法完整在项目中应用一样，设计成本高。投入产出比不合适。但在自动化测试中，自定义模型或者叫模板会具备MBT的优势，可以更容易达到自动生用例。比如Api可以很好应用一个原因是。通信协议的定义是天然的模板。","like_count":0},{"had_liked":false,"id":142548,"user_name":"邙山","can_delete":false,"product_type":"c1","uid":1702880,"ip_address":"","ucode":"203024A87748EE","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83erfxOjZU1XS7DQdx189ukUISVlvzIPgoVMN4r6iajmslMQmEPAwdstAyU9AdYaBofiaRRDHm9x9ME3A/132","comment_is_top":false,"comment_ctime":1571391462,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1571391462","product_id":100009601,"comment_content":"Eclipse Titan 好像是这个， 转换为TTCN, 然后执行","like_count":0},{"had_liked":false,"id":124146,"user_name":"꧁༺Eve Pan༻꧂","can_delete":false,"product_type":"c1","uid":1270292,"ip_address":"","ucode":"588C887866D052","user_header":"https://static001.geekbang.org/account/avatar/00/13/62/14/1a219456.jpg","comment_is_top":false,"comment_ctime":1565830585,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1565830585","product_id":100009601,"comment_content":"我觉得其实平时我们测试分析过程中的鱼骨图，MFQ也可以算是MBT的一种，只是无法自动生成测试用例😜","like_count":0},{"had_liked":false,"id":97104,"user_name":"口水窝","can_delete":false,"product_type":"c1","uid":1004838,"ip_address":"","ucode":"6028B5AA10D8A1","user_header":"https://static001.geekbang.org/account/avatar/00/0f/55/26/154f9578.jpg","comment_is_top":false,"comment_ctime":1558589747,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1558589747","product_id":100009601,"comment_content":"首先，对于测试技术人员人员的挑战，就是对于建模并不熟悉，不知道如何建模。其次，对于工具的选择，不知道怎么才是适合自己产品的工具。然后，现在上线周期短，导致没有这么多时间去研究技术、工具。","like_count":0},{"had_liked":false,"id":36015,"user_name":"Alice","can_delete":false,"product_type":"c1","uid":1229136,"ip_address":"","ucode":"3AE3BE98509D89","user_header":"https://static001.geekbang.org/account/avatar/00/12/c1/50/ce45f6b7.jpg","comment_is_top":false,"comment_ctime":1540891292,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1540891292","product_id":100009601,"comment_content":"MBT只是生成测试用例吗？","like_count":0},{"had_liked":false,"id":34808,"user_name":"无心","can_delete":false,"product_type":"c1","uid":1036884,"ip_address":"","ucode":"D1C3EBA4DF798E","user_header":"https://static001.geekbang.org/account/avatar/00/0f/d2/54/3fa394b4.jpg","comment_is_top":false,"comment_ctime":1540306661,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1540306661","product_id":100009601,"comment_content":"以前有听过UML建模，但是没有执行过，可以很细致的画出模型","like_count":0},{"had_liked":false,"id":32853,"user_name":"小北","can_delete":false,"product_type":"c1","uid":1101976,"ip_address":"","ucode":"4DAC260AC75B71","user_header":"https://static001.geekbang.org/account/avatar/00/10/d0/98/9779cf40.jpg","comment_is_top":false,"comment_ctime":1539703638,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1539703638","product_id":100009601,"comment_content":"学习到了新的思路，受教了。","like_count":0},{"had_liked":false,"id":32369,"user_name":"涅槃Ls","can_delete":false,"product_type":"c1","uid":1163943,"ip_address":"","ucode":"39EDBFB303D668","user_header":"https://static001.geekbang.org/account/avatar/00/11/c2/a7/c4de1048.jpg","comment_is_top":false,"comment_ctime":1539562470,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1539562470","product_id":100009601,"comment_content":"打卡47","like_count":0}]}