{"id":316829,"title":"36 | 所有权：深入理解Copy行为","content":"<p><strong>课件及Demo下载链接</strong><br>\n<a href=\"https://gitee.com/geektime-geekbang/geektime-Rust\">https://gitee.com/geektime-geekbang/geektime-Rust</a></p>","comments":[{"had_liked":false,"id":310863,"user_name":"豆沙饼","can_delete":false,"product_type":"c3","uid":2725503,"ip_address":"","ucode":"8165010E211084","user_header":"https://static001.geekbang.org/account/avatar/00/29/96/7f/9ee14398.jpg","comment_is_top":false,"comment_ctime":1630938072,"is_pvip":false,"replies":null,"discussion_count":2,"race_medal":0,"score":2,"product_id":100060601,"comment_content":"事例三真没有看懂, 老师能说得清晰一点吗, 带个图什么的, 听起来觉得讲得很随意啊","like_count":3,"discussions":[{"author":{"id":2843586,"avatar":"https://static001.geekbang.org/account/avatar/00/2b/63/c2/83d737ff.jpg","nickname":"Amesy","note":"","ucode":"84D0B7D133520A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":543191,"discussion_content":"你看到这句话应该就清楚了：rust没有显式的堆内存分配的函数，使用Box就是唯一的分配堆内存的方式。","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1641003056,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":2641005,"avatar":"https://static001.geekbang.org/account/avatar/00/28/4c/6d/1eb0bf3b.jpg","nickname":"虚假明","note":"","ucode":"35053CC1CAFE63","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2843586,"avatar":"https://static001.geekbang.org/account/avatar/00/2b/63/c2/83d737ff.jpg","nickname":"Amesy","note":"","ucode":"84D0B7D133520A","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":557619,"discussion_content":"真棒 ","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1647904914,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":543191,"ip_address":"","group_id":0},"score":557619,"extra":""}]}]},{"had_liked":false,"id":270941,"user_name":"englefly","can_delete":false,"product_type":"c3","uid":1145907,"ip_address":"","ucode":"E3FCF19E618718","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83ep2gRIticwS6CiatsCiaU4QRjAODKibQevrhSciatrmd90lNIZFxywE9yyZgAxKTmWiaBSH4zZUcRIV46qQ/132","comment_is_top":false,"comment_ctime":1609323611,"is_pvip":false,"replies":null,"discussion_count":4,"race_medal":0,"score":2,"product_id":100060601,"comment_content":"老师，有个问题没有理解\n\n增加了 c 的作用域或主动调用mem::drop(c)，会将堆上存储“cccc” 的内存释放（我们假设这个指正地址是0x1234），但这个过程为什么会修改到 d 包含的指针呢？\n按照我的理解，d在栈上包含的三个域 地址指针、长度、capacity 都不会因为 drop(c) 而改变，所以我们调用d.push_str()的时候还是应该在原来指针 0x1234 加上 size 找到字符串末尾的地址，然后添加一个 ’c‘。 因此最后打印d，还是应该5个字符，最后一个字符是c。\n不知道我的理解怎么错的","like_count":3,"discussions":[{"author":{"id":1809168,"avatar":"","nickname":"Geek_7c4953","note":"","ucode":"359745D4725D4F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":378746,"discussion_content":"&#34;\\u{1}\\u{0}\\u{0}\\u{0}c&#34; 我测试的结果是这样的，并不是只有c。其实UB怎么表现都合理，没必要深究。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1623386437,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2286857,"avatar":"https://static001.geekbang.org/account/avatar/00/22/e5/09/48865344.jpg","nickname":"amao","note":"","ucode":"0574E186844631","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":378196,"discussion_content":"c上存的是0x1234，0x1234里存的是cccc，drop了c，c存的东西没了，c存的东西存的东西也没了，也就是0x1234的内容被清了。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1623099491,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1820178,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/c6/12/5d99ac11.jpg","nickname":"Guo","note":"","ucode":"280927DA0A4384","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":357547,"discussion_content":"屋子里的你有一个冰箱放了4颗苹果，我进入屋子得到你的允许可以使用冰箱，然后我离开屋子的时候把你的4颗苹果顺走了，你后来再往里放1颗最终也还是只剩1颗苹果。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1615818816,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":2843586,"avatar":"https://static001.geekbang.org/account/avatar/00/2b/63/c2/83d737ff.jpg","nickname":"Amesy","note":"","ucode":"84D0B7D133520A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1820178,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/c6/12/5d99ac11.jpg","nickname":"Guo","note":"","ucode":"280927DA0A4384","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":543189,"discussion_content":"是的，我和你都指向冰箱这个堆内存，我和你任何一人对冰箱做的操作，对另一人也生效。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1641002757,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":357547,"ip_address":"","group_id":0},"score":543189,"extra":""}]}]},{"had_liked":false,"id":343704,"user_name":"万正宇","can_delete":false,"product_type":"c3","uid":2985047,"ip_address":"","ucode":"B8E70029D5F131","user_header":"https://static001.geekbang.org/account/avatar/00/2d/8c/57/b7bc2b9e.jpg","comment_is_top":false,"comment_ctime":1650990508,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":2,"product_id":100060601,"comment_content":"unsafe { *(&amp;b *const as B *const as A) }","like_count":0},{"had_liked":false,"id":297228,"user_name":"Geek_7c4953","can_delete":false,"product_type":"c3","uid":1809168,"ip_address":"","ucode":"359745D4725D4F","user_header":"","comment_is_top":false,"comment_ctime":1623386713,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":2,"product_id":100060601,"comment_content":"“=”表示按位复制，左边表示目标位置，目标位置是栈就复制到栈，是堆就复制到堆。","like_count":0},{"had_liked":false,"id":297225,"user_name":"Geek_7c4953","can_delete":false,"product_type":"c3","uid":1809168,"ip_address":"","ucode":"359745D4725D4F","user_header":"","comment_is_top":false,"comment_ctime":1623384960,"is_pvip":false,"replies":null,"discussion_count":1,"race_medal":0,"score":2,"product_id":100060601,"comment_content":"这里的Some(a)是个有趣的问题。\nrust的enum是一个tagged union，就是说他会有一个tag值表示他是union中的哪个类型。\n当这个enum中所有的位都被占中时，tag就是一个额外的整数。\n而当这个enum中，有某个类型有多余的位可以用的时候，tag就是这些多余的位。\n在Option&lt;A&gt;中，A的c: bool占用一个字节，但实际的值域只有0和1 ，那么enum就会根据c这个字节的值作为tag来区分union。当c是0或1时，它就是Some(A)。当c是2的时候，它就是None了。","like_count":0,"discussions":[{"author":{"id":2186960,"avatar":"https://static001.geekbang.org/account/avatar/00/21/5e/d0/634bd267.jpg","nickname":"幽夜逸光","note":"","ucode":"AB3AF28D778DE0","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":387951,"discussion_content":"没理解，我看reference上写，如果bool的值不是0或者1，那就变成了undefined behavior，怎么查看Some(a)时究竟发生了什么？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1628507409,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]}]}