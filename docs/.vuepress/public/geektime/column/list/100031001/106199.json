{"id":106199,"title":"05 | 从标准模板入手，体会Flutter代码是如何运行在原生系统上的","content":"<p>你好，我是陈航。</p><p>在专栏的第一篇预习文章中，我和你一起搭建了Flutter的开发环境，并且通过自带的hello_world示例，和你演示了Flutter项目是如何运行在Android和iOS模拟器以及真机上的。</p><p>今天，我会通过Android Studio创建的Flutter应用模板，带你去了解Flutter的项目结构，分析Flutter工程与原生Android和iOS工程有哪些联系，体验一个有着基本功能的Flutter应用是如何运转的，从而加深你对构建Flutter应用的关键概念和技术的理解。</p><p>如果你现在还不熟悉Dart语言也不用担心，只要能够理解基本的编程概念（比如，类型、变量、函数和面向对象），并具备一定的前端基础（比如，了解View是什么、页面基本布局等基础知识），就可以和我一起完成今天的学习。而关于Dart语言基础概念的讲述、案例分析，我会在下一个模块和你展开。</p><h2>计数器示例工程分析</h2><p>首先，我们打开Android Studio，创建一个Flutter工程应用flutter_app。Flutter会根据自带的应用模板，自动生成一个简单的计数器示例应用Demo。我们先运行此示例，效果如下：</p><p><img src=\"https://static001.geekbang.org/resource/image/3a/24/3afe6b35238d1e57c8ae6bec9be61624.png?wh=828*1792\" alt=\"\"></p><center><span class=\"reference\">图1 计数器示例运行效果</span></center><!-- [[[read_end]]] --><p>每点击一次右下角带“+”号的悬浮按钮，就可以看到屏幕中央的数字随之+1。</p><h3>工程结构</h3><p>在体会了示例工程的运行效果之后，我们再来看看Flutter工程目录结构，了解Flutter工程与原生Android和iOS工程之间的关系，以及这些关系是如何确保一个Flutter程序可以最终运行在Android和iOS系统上的。</p><p><img src=\"https://static001.geekbang.org/resource/image/e7/fc/e7ecbd5c21895e396c14154b2f226dfc.png?wh=1036*374\" alt=\"\"></p><center><span class=\"reference\">图2 Flutter工程目录结构</span></center><p>可以看到，除了Flutter本身的代码、资源、依赖和配置之外，Flutter工程还包含了Android和iOS的工程目录。</p><p>这也不难理解，因为Flutter虽然是跨平台开发方案，但却需要一个容器最终运行到Android和iOS平台上，所以<strong>Flutter工程实际上就是一个同时内嵌了Android和iOS原生子工程的父工程</strong>：我们在lib目录下进行Flutter代码的开发，而某些特殊场景下的原生功能，则在对应的Android和iOS工程中提供相应的代码实现，供对应的Flutter代码引用。</p><p>Flutter会将相关的依赖和构建产物注入这两个子工程，最终集成到各自的项目中。而我们开发的Flutter代码，最终则会以原生工程的形式运行。</p><h3>工程代码</h3><p>在对Flutter的工程结构有了初步印象之后，我们就可以开始学习Flutter的项目代码了。</p><p>Flutter自带的应用模板，也就是这个计数器示例，对初学者来说是一个极好的入门范例。在这个简单示例中，从基础的组件、布局到手势的监听，再到状态的改变，Flutter最核心的思想在这60余行代码中展现得可谓淋漓尽致。</p><p>为了便于你学习理解，领会构建Flutter程序的大体思路与关键技术，而不是在一开始时就陷入组件的API细节中，我删掉了与核心流程无关的组件配置代码及布局逻辑，在不影响示例功能的情况下对代码进行了改写，并将其分为两部分：</p><ul>\n<li>第一部分是应用入口、应用结构以及页面结构，可以帮助你理解构建Flutter程序的基本结构和套路；</li>\n<li>第二部分则是页面布局、交互逻辑及状态管理，能够帮你理解Flutter页面是如何构建、如何响应交互，以及如何更新的。</li>\n</ul><p>首先，我们来看看<strong>第一部分的代码</strong>，也就是应用的整体结构：</p><pre><code>import 'package:flutter/material.dart';\n\nvoid main() =&gt; runApp(MyApp());\n\nclass MyApp extends StatelessWidget {\n  @override\n  Widget build(BuildContext context) =&gt; MaterialApp(home: MyHomePage(title: 'Flutter Demo Home Page'));\n}\n\nclass MyHomePage extends StatefulWidget {\n  MyHomePage({Key key, this.title}) : super(key: key);\n  final String title;\n  @override\n  _MyHomePageState createState() =&gt; _MyHomePageState();\n}\n\nclass _MyHomePageState extends State&lt;MyHomePage&gt; {\n  Widget build(BuildContext context) =&gt; {...};\n}\n</code></pre><p>在本例中，Flutter应用为MyApp类的一个实例，而MyApp类继承自StatelessWidget类，这也就意味着应用本身也是一个Widget。事实上，在Flutter中，Widget是整个视图描述的基础，在Flutter的世界里，包括应用、视图、视图控制器、布局等在内的概念，都建立在Widget之上，<strong>Flutter的核心设计思想便是一切皆Widget</strong>。</p><p>Widget是组件视觉效果的封装，是UI界面的载体，因此我们还需要为它提供一个方法，来告诉Flutter框架如何构建UI界面，这个方法就是build。</p><p>在build方法中，我们通常通过对基础Widget进行相应的UI配置，或是组合各类基础Widget的方式进行UI的定制化。比如在MyApp中，我通过MaterialApp这个Flutter App框架设置了应用首页，即MyHomePage。当然，MaterialApp也是一个Widget。</p><p>MaterialApp类是对构建material设计风格应用的组件封装框架，里面还有很多可配置的属性，比如应用主题、应用名称、语言标识符、组件路由等。但是，这些配置属性并不是本次分享的重点，如果你感兴趣的话，可以参考Flutter官方的<a href=\"https://api.flutter.dev/flutter/material/MaterialApp/MaterialApp.html\">API文档</a>，来了解MaterialApp框架的其他配置能力。</p><p>MyHomePage是应用的首页，继承自StatefulWidget类。这，代表着它是一个有状态的Widget（Stateful Widget），而_MyHomePageState就是它的状态。</p><p>如果你足够细心的话就会发现，虽然MyHomePage类也是Widget，但与MyApp类不同的是，它并没有一个build方法去返回Widget，而是多了一个createState方法返回_MyHomePageState对象，而build方法则包含在这个_MyHomePageState类当中。</p><p>那么，<strong>StatefulWidget与StatelessWidget的接口设计，为什么会有这样的区别呢？</strong></p><p>这是因为Widget需要依据数据才能完成构建，而对于StatefulWidget来说，其依赖的数据在Widget生命周期中可能会频繁地发生变化。由State创建Widget，以数据驱动视图更新，而不是直接操作UI更新视觉属性，代码表达可以更精炼，逻辑也可以更清晰。</p><p>在了解了计数器示例程序的整体结构以后，我们再来看看这个<strong>示例代码的第二部分</strong>，也就是页面布局及交互逻辑部分。</p><pre><code>class _MyHomePageState extends State&lt;MyHomePage&gt; {\n  int _counter = 0;\n  void _incrementCounter() =&gt; setState(() {_counter++;});\n\n  @override\n  Widget build(BuildContext context) {\n    return Scaffold(\n      appBar: AppBar(title: Text(Widget.title)),\n      body: Text('You have pushed the button this many times:$_counter')),\n      floatingActionButton: FloatingActionButton(onPressed: _incrementCounter) \n    );\n  }\n</code></pre><p>_MyHomePageState中创建的Widget Scaffold，是Material库中提供的页面布局结构，它包含AppBar、Body，以及FloatingActionButton。</p><ul>\n<li>AppBar是页面的导航栏，我们直接将MyHomePage中的title属性作为标题使用。</li>\n<li>body则是一个Text组件，显示了一个根据_counter属性可变的文本：‘You have pushed the button this many times:$_counter’。</li>\n<li>floatingActionButton，则是页面右下角的带“+”的悬浮按钮。我们将_incrementCounter作为其点击处理函数。</li>\n</ul><p>_incrementCounter的实现很简单，使用setState方法去自增状态属性_counter。setState方法是Flutter以数据驱动视图更新的关键函数，它会通知Flutter框架：我这儿有状态发生了改变，赶紧给我刷新界面吧。而Flutter框架收到通知后，会执行Widget的build方法，根据新的状态重新构建界面。</p><p><strong>这里需要注意的是：状态的更改一定要配合使用setState。</strong>通过这个方法的调用，Flutter会在底层标记Widget的状态，随后触发重建。于我们的示例而言，即使你修改了_counter，如果不调用setState，Flutter框架也不会感知到状态的变化，因此界面上也不会有任何改变（你可以动手验证一下）。</p><p>下面的图3，就是整个计数器示例的代码流程示意图。通过这张图，你就能够把这个实例的整个代码流程串起来了：</p><p><img src=\"https://static001.geekbang.org/resource/image/34/36/3401b99587eafa7c0c1ed446eb936f36.png?wh=1352*744\" alt=\"\"></p><center><span class=\"reference\">图3 代码流程示意图</span></center><p>MyApp为Flutter应用的运行实例，通过在main函数中调用runApp函数实现程序的入口。而应用的首页则为MyHomePage，一个拥有_MyHomePageState状态的StatefulWidget。_MyHomePageState通过调用build方法，以相应的数据配置完成了包括导航栏、文本及按钮的页面视图的创建。</p><p>而当按钮被点击之后，其关联的控件函数_incrementCounter会触发调用。在这个函数中，通过调用setState方法，更新_counter属性的同时，也会通知Flutter框架其状态发生变化。随后，Flutter会重新调用build方法，以新的数据配置重新构建_MyHomePageState的UI，最终完成页面的重新渲染。</p><p>Widget只是视图的“配置信息”，是数据的映射，是“只读”的。对于StatefulWidget而言，当数据改变的时候，我们需要重新创建Widget去更新界面，这也就意味着Widget的创建销毁会非常频繁。</p><p>为此，Flutter对这个机制做了优化，其框架内部会通过一个中间层去收敛上层UI配置对底层真实渲染的改动，从而最大程度降低对真实渲染视图的修改，提高渲染效率，而不是上层UI配置变了就需要销毁整个渲染视图树重建。</p><p>这样一来，Widget仅是一个轻量级的数据配置存储结构，它的重新创建速度非常快，所以我们可以放心地重新构建任何需要更新的视图，而无需分别修改各个子Widget的特定样式。关于Widget具体的渲染过程细节，我会在后续的第9篇文章“Widget，构建Flutter界面的基石”中向你详细介绍，在这里就不再展开了。</p><h2>总结</h2><p>今天的这次Flutter项目初体验，我们就先进行到这里。接下来，我们一起回顾下涉及到的知识点。</p><p>首先，我们通过Flutter标准模板创建了计数器示例，并分析了Flutter的项目结构，以及Flutter工程与原生Android、iOS工程的联系，知道了Flutter代码是怎么运行在原生系统上的。</p><p>然后，我带你学习了示例项目代码，了解了Flutter应用结构及页面结构，并认识了构建Flutter的基础，也就是Widget，以及状态管理机制，知道了Flutter页面是如何构建的，StatelessWidget与StatefulWidget的区别，以及如何通过State的成员函数setState以数据驱动的方式更新状态，从而更新页面。</p><p>有原生Android和iOS框架开发经验的同学，可能更习惯命令式的UI编程风格：手动创建UI组件，在需要更改UI时调用其方法修改视觉属性。而Flutter采用声明式UI设计，我们只需要描述当前的UI状态（即State）即可，不同UI状态的视觉变更由Flutter在底层完成。</p><p>虽然命令式的UI编程风格更直观，但声明式UI编程方式的好处是，可以让我们把复杂的视图操作细节交给框架去完成，这样一来不仅可以提高我们的效率，也可以让我们专注于整个应用和页面的结构和功能。</p><p>所以在这里，我非常希望你能够适应这样的UI编程思维方式的转换。</p><h2>思考题</h2><p>最后，我给你留下一个思考题吧。</p><p>示例项目代码在_MyHomePageState类中，直接在build函数里以内联的方式完成了Scaffold页面元素的构建，这样做的好处是什么呢？</p><p>在实现同样功能的情况下，如果将Scaffold页面元素的构建封装成一个新Widget类，我们该如何处理？</p><p>欢迎你在评论区给我留言分享你的观点，我会在下一篇文章中等待你！感谢你的收听，也欢迎你把这篇文章分享给更多的朋友一起阅读。</p><p></p>","neighbors":{"left":{"article_title":"04 | Flutter区别于其他方案的关键技术是什么？","id":105703},"right":{"article_title":"06 | 基础语法与类型变量：Dart是如何表示信息的？","id":106816}},"comments":[{"had_liked":false,"id":111952,"user_name":"加温后的啤酒","can_delete":false,"product_type":"c1","uid":1344488,"ip_address":"","ucode":"5F30978CDB1606","user_header":"https://static001.geekbang.org/account/avatar/00/14/83/e8/f726c635.jpg","comment_is_top":false,"comment_ctime":1562641980,"is_pvip":false,"replies":[{"id":"40797","content":"没什么区别，事实上你把_counter++放后面也行。因为Flutter会在下一帧绘制的时候才刷新UI，并不是同步的<br>","user_name":"作者回复","user_name_real":"土豆盒子","uid":"1088582","ctime":1562695636,"ip_address":"","comment_id":111952,"utype":1}],"discussion_count":2,"race_medal":0,"score":"156181464636","product_id":100031001,"comment_content":"老师，想请教一个问题， 关于setState的。<br>下面两种写法有什么本质的区别吗？？两种写法都对吗？<br>第一种：<br>_counter++;<br>setState(() {<br>});<br>第二种：<br>setState(() {<br>  _counter++;<br>});<br>我用第一种方法运行，发现也没什么问题。。。也可以刷新UI<br>","like_count":37,"discussions":[{"author":{"id":1088582,"avatar":"https://static001.geekbang.org/account/avatar/00/10/9c/46/0b29b188.jpg","nickname":"土豆盒子","note":"","ucode":"A910F88CAC0A87","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":457516,"discussion_content":"没什么区别，事实上你把_counter++放后面也行。因为Flutter会在下一帧绘制的时候才刷新UI，并不是同步的\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1562695636,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1075060,"avatar":"https://wx.qlogo.cn/mmopen/vi_32/DYAIOgq83erXf7JkCX1JsCticeyfoQKbKxmLIvVt2xyiceko6WmmtavUAcHwBYiaibqLRCmFXJw3NhD3xp3aqKSHNA/0","nickname":"刘","note":"","ucode":"C24FA06DD1A9BA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":162281,"discussion_content":"应该是有区别的，官网文档有setstate(){} 说明： 计算耗时的逻辑应该放在setstate外部，只有需要通知状态改变的时候，才放在内部","likes_number":9,"is_delete":false,"is_hidden":false,"ctime":1580981094,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":112035,"user_name":"梦付千秋星垂野","can_delete":false,"product_type":"c1","uid":1243654,"ip_address":"","ucode":"8AEB517213687A","user_header":"https://static001.geekbang.org/account/avatar/00/12/fa/06/c70bf7e0.jpg","comment_is_top":false,"comment_ctime":1562657605,"is_pvip":false,"replies":[{"id":"40794","content":"Widget只是数据的配置，并不负责最后渲染哈。Flutter会在中间收敛真正需要刷新界面的那部分Widget变化","user_name":"作者回复","user_name_real":"土豆盒子","uid":"1088582","ctime":1562695323,"ip_address":"","comment_id":112035,"utype":1}],"discussion_count":3,"race_medal":0,"score":"65987167045","product_id":100031001,"comment_content":"Scaffold 快捷实现一个简单页面还是蛮好的，但是看Demo里面的用法，appBar body floatButton 三个是封装在一个层级里面的，也就是说改变了body里面的值，也顺带刷新了appBar 和 floatButton,感觉没这个必要，本身appBar和floatButton是加载一次后不用变化的。如果把Scaffold变成一个自定义的weight，可以把body再包一个层级，把数据源定义到body内部去，这样是否可行？","like_count":16,"discussions":[{"author":{"id":1088582,"avatar":"https://static001.geekbang.org/account/avatar/00/10/9c/46/0b29b188.jpg","nickname":"土豆盒子","note":"","ucode":"A910F88CAC0A87","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":457546,"discussion_content":"Widget只是数据的配置，并不负责最后渲染哈。Flutter会在中间收敛真正需要刷新界面的那部分Widget变化","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1562695323,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2463529,"avatar":"","nickname":"Geek_763c44","note":"","ucode":"BEDDC86886EA2B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":352519,"discussion_content":"啊你这昵称~古剑3","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1614760665,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1048918,"avatar":"https://static001.geekbang.org/account/avatar/00/10/01/56/03fb63d9.jpg","nickname":"于留月","note":"","ucode":"DE3516198CF1B2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":1681,"discussion_content":"widget -> element ->RenderObject","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1562809637,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":111939,"user_name":"于留月","can_delete":false,"product_type":"c1","uid":1048918,"ip_address":"","ucode":"DE3516198CF1B2","user_header":"https://static001.geekbang.org/account/avatar/00/10/01/56/03fb63d9.jpg","comment_is_top":false,"comment_ctime":1562640159,"is_pvip":false,"replies":[{"id":"40790","content":"是的，除此之外可以直接共享状态","user_name":"作者回复","user_name_real":"土豆盒子","uid":"1088582","ctime":1562695134,"ip_address":"","comment_id":111939,"utype":1}],"discussion_count":2,"race_medal":0,"score":"61692182303","product_id":100031001,"comment_content":"以内联的方式完成了 Scaffold 页面元素的构建：<br><br>首先，代码简洁，直观，容易阅读；<br>其次，类似模板类代码，减少重复冗余代码编写；<br>再就是现代语言的“语法糖”。","like_count":15,"discussions":[{"author":{"id":1088582,"avatar":"https://static001.geekbang.org/account/avatar/00/10/9c/46/0b29b188.jpg","nickname":"土豆盒子","note":"","ucode":"A910F88CAC0A87","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":457506,"discussion_content":"是的，除此之外可以直接共享状态","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1562695134,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1048918,"avatar":"https://static001.geekbang.org/account/avatar/00/10/01/56/03fb63d9.jpg","nickname":"于留月","note":"","ucode":"DE3516198CF1B2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":1680,"discussion_content":"类似内部类那种嘛？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1562809532,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":154197,"user_name":"信仰年轻","can_delete":false,"product_type":"c1","uid":1329011,"ip_address":"","ucode":"B2BD881D25FCDD","user_header":"https://static001.geekbang.org/account/avatar/00/14/47/73/63a3cb41.jpg","comment_is_top":false,"comment_ctime":1574390053,"is_pvip":false,"replies":[{"id":"59817","content":"对一个函数而言，内联指的是在不增加调用栈的情况下，在上下文把函数体直接展开；<br>对我们这个例子而言，”以内联的方式“指的是把这些可以封装成函数&#47;组件的代码直接在build函数体里展开","user_name":"作者回复","user_name_real":"土豆盒子","uid":"1088582","ctime":1574756691,"ip_address":"","comment_id":154197,"utype":1}],"discussion_count":1,"race_medal":0,"score":"31639161125","product_id":100031001,"comment_content":"没看出内联，，kotlin和C++的内联都有关键字inline，，这里哪里体现内联了啊？？、","like_count":8,"discussions":[{"author":{"id":1088582,"avatar":"https://static001.geekbang.org/account/avatar/00/10/9c/46/0b29b188.jpg","nickname":"土豆盒子","note":"","ucode":"A910F88CAC0A87","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":475404,"discussion_content":"对一个函数而言，内联指的是在不增加调用栈的情况下，在上下文把函数体直接展开；\n对我们这个例子而言，”以内联的方式“指的是把这些可以封装成函数/组件的代码直接在build函数体里展开","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574756691,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":111864,"user_name":"大土豆","can_delete":false,"product_type":"c1","uid":1121636,"ip_address":"","ucode":"67445DC3EC9DB0","user_header":"https://static001.geekbang.org/account/avatar/00/11/1d/64/52a5863b.jpg","comment_is_top":false,"comment_ctime":1562632759,"is_pvip":true,"replies":[{"id":"40799","content":"开源的很多，比如知乎客户端，github客户端","user_name":"作者回复","user_name_real":"土豆盒子","uid":"1088582","ctime":1562695695,"ip_address":"","comment_id":111864,"utype":1}],"discussion_count":5,"race_medal":0,"score":"23037469239","product_id":100031001,"comment_content":"我想问下，现在国内有没有比较成熟的纯flutter开发的App。","like_count":6,"discussions":[{"author":{"id":1088582,"avatar":"https://static001.geekbang.org/account/avatar/00/10/9c/46/0b29b188.jpg","nickname":"土豆盒子","note":"","ucode":"A910F88CAC0A87","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":457476,"discussion_content":"开源的很多，比如知乎客户端，github客户端","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1562695695,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1041169,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/e3/11/703b986d.jpg","nickname":"柠檬冻薄荷","note":"","ucode":"33FB0ED4BB660E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":265495,"discussion_content":"闲鱼","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1589413947,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1142358,"avatar":"https://static001.geekbang.org/account/avatar/00/11/6e/56/20feba59.jpg","nickname":"韦其","note":"","ucode":"716AE1FE0B9C2E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":1500,"discussion_content":"咸鱼","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1562665672,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1078186,"avatar":"https://static001.geekbang.org/account/avatar/00/10/73/aa/442e9eb1.jpg","nickname":"李二柱子","note":"","ucode":"4A58F2C473642A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":1471,"discussion_content":"有些外包公司已经在用Flutter开发应用了。不算成熟，但是纯，待解决的问题是iOS包太大。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1562644177,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1599981,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLdCG6J3IprR2by4Zqt3Vb8SlPBqlTuKwCW94rqib6FDuVDZBfYpJxBrzriaoka5Z0AIgQdibsQWWl3g/132","nickname":"Geek_0641d0","note":"","ucode":"B822F01F4F2BC5","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1078186,"avatar":"https://static001.geekbang.org/account/avatar/00/10/73/aa/442e9eb1.jpg","nickname":"李二柱子","note":"","ucode":"4A58F2C473642A","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":1516,"discussion_content":"有具体大多少吗","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1562673734,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":1471,"ip_address":""},"score":1516,"extra":""}]}]},{"had_liked":false,"id":145570,"user_name":"奔跑的徐胖子","can_delete":false,"product_type":"c1","uid":1233917,"ip_address":"","ucode":"CFB8A7C4F99D34","user_header":"https://static001.geekbang.org/account/avatar/00/12/d3/fd/41eb3ecc.jpg","comment_is_top":false,"comment_ctime":1572317834,"is_pvip":false,"replies":[{"id":"58808","content":"是指Flutter程序的运行方式最终会打包成Android&#47;iOS平台特定的格式：Android会把Flutter画布打包成FlutterView，iOS则会打包成FlutterViewController<br>","user_name":"作者回复","user_name_real":"土豆盒子","uid":"1088582","ctime":1574143544,"ip_address":"","comment_id":145570,"utype":1}],"discussion_count":3,"race_medal":0,"score":"18752187018","product_id":100031001,"comment_content":"老师，我有个疑问，既然flutter是从上至下的有自己的UI渲染的闭环，那么您说的，最终程序运行是以原生的方式进行的又是什么意思呢，flutter也是调用的原生功能进行功能实现吗","like_count":4,"discussions":[{"author":{"id":1088582,"avatar":"https://static001.geekbang.org/account/avatar/00/10/9c/46/0b29b188.jpg","nickname":"土豆盒子","note":"","ucode":"A910F88CAC0A87","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":472471,"discussion_content":"是指Flutter程序的运行方式最终会打包成Android/iOS平台特定的格式：Android会把Flutter画布打包成FlutterView，iOS则会打包成FlutterViewController\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574143544,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1135912,"avatar":"https://static001.geekbang.org/account/avatar/00/11/55/28/31b0cf2f.jpg","nickname":"黑色毛衣","note":"","ucode":"FF7E235F91BA5C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":378375,"discussion_content":"可以理解为 Flutter 的内容最终会显示在 FlutterView 上，和 RN 的 ReactView 一样。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1623200651,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1083238,"avatar":"https://static001.geekbang.org/account/avatar/00/10/87/66/31629628.jpg","nickname":"MaO","note":"","ucode":"3D839733E87435","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":43274,"discussion_content":"此原生非彼原生","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1572866143,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":120537,"user_name":"方海栋","can_delete":false,"product_type":"c1","uid":1434404,"ip_address":"","ucode":"2C898F497AE1A7","user_header":"","comment_is_top":false,"comment_ctime":1564925600,"is_pvip":false,"replies":[{"id":"44295","content":"将函数体内语句直接插入并取代每一处调用该函数的地方（上下文）","user_name":"作者回复","user_name_real":"土豆盒子","uid":"1088582","ctime":1564970904,"ip_address":"","comment_id":120537,"utype":1}],"discussion_count":1,"race_medal":0,"score":"18744794784","product_id":100031001,"comment_content":"什么叫以内联的方式","like_count":4,"discussions":[{"author":{"id":1088582,"avatar":"https://static001.geekbang.org/account/avatar/00/10/9c/46/0b29b188.jpg","nickname":"土豆盒子","note":"","ucode":"A910F88CAC0A87","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":461376,"discussion_content":"将函数体内语句直接插入并取代每一处调用该函数的地方（上下文）","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1564970904,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":115793,"user_name":"神经蛙","can_delete":false,"product_type":"c1","uid":1604240,"ip_address":"","ucode":"0511F6E6B30440","user_header":"https://static001.geekbang.org/account/avatar/00/18/7a/90/dc3537e7.jpg","comment_is_top":false,"comment_ctime":1563735623,"is_pvip":false,"replies":[{"id":"42657","content":"理论上是","user_name":"作者回复","user_name_real":"土豆盒子","uid":"1088582","ctime":1563896046,"ip_address":"","comment_id":115793,"utype":1}],"discussion_count":3,"race_medal":0,"score":"18743604807","product_id":100031001,"comment_content":"关于“在_MyHomePageState类中，直接在build函数里内联的方式完成Scaffold页面元素的构建”，我有一个问题：<br>前文提到“setState方法会通知Flutter更新界面，Flutter收到通知后，会执行Widget的build方法，重新构建”，那么如果在_MyHomePageState类的build函数里内联整个Scaffold页面元素构建，是否就意味着setState后整个Scaffold及其子节点都会重新构建？如果Scaffold的子节点很多，是不是就会带来性能损耗？","like_count":4,"discussions":[{"author":{"id":1088582,"avatar":"https://static001.geekbang.org/account/avatar/00/10/9c/46/0b29b188.jpg","nickname":"土豆盒子","note":"","ucode":"A910F88CAC0A87","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":459289,"discussion_content":"理论上是","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1563896046,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1074734,"avatar":"https://static001.geekbang.org/account/avatar/00/10/66/2e/527b73c9.jpg","nickname":"骑着🚀看银河","note":"","ucode":"8706A99A89F0CE","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":289736,"discussion_content":"数据状态发生改变，会导致界面重绘和更新，随之带来性能上的消耗，不过这部分消耗是系统维持自身变化所需的，属于预期之内","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1594196354,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1180727,"avatar":"https://static001.geekbang.org/account/avatar/00/12/04/37/aa04f997.jpg","nickname":"和小胖","note":"","ucode":"406BD7AB987EBF","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":4020,"discussion_content":"老师不是说“Flutter会在中间收敛真正需要刷新界面的那部分Widget变化”吗？那这种情况是不是也只是会刷新或者重建它需要重建的部分呢？只是说会增加很多是否需要刷新重建的判断。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1565062219,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":112394,"user_name":"熊爸爸","can_delete":false,"product_type":"c1","uid":1053067,"ip_address":"","ucode":"9A6DF9C9EB7970","user_header":"https://static001.geekbang.org/account/avatar/00/10/11/8b/35ea4275.jpg","comment_is_top":false,"comment_ctime":1562728243,"is_pvip":false,"replies":[{"id":"40958","content":"1.共享状态指的是能够共享变量。因为他们都在一个类中，所以不需要再传来传去了<br>2.会讲的<br>3.谢谢：）","user_name":"作者回复","user_name_real":"土豆盒子","uid":"1088582","ctime":1562778026,"ip_address":"","comment_id":112394,"utype":1}],"discussion_count":1,"race_medal":0,"score":"18742597427","product_id":100031001,"comment_content":"1. 老师在回复中多次提到的“共享状态”指的是什么，是 context 相关的能力吗？<br>2. 希望老师能顺带讲讲代码和功能的封装等最佳实战（包括继承、Mixin）；<br>3. 3个月的时间感觉有点长，要是能加快更新进度就好了。不过还是要说：老师辛苦了！<br>","like_count":4,"discussions":[{"author":{"id":1088582,"avatar":"https://static001.geekbang.org/account/avatar/00/10/9c/46/0b29b188.jpg","nickname":"土豆盒子","note":"","ucode":"A910F88CAC0A87","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":457715,"discussion_content":"1.共享状态指的是能够共享变量。因为他们都在一个类中，所以不需要再传来传去了\n2.会讲的\n3.谢谢：）","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1562778026,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":122241,"user_name":"啵一个草莓","can_delete":false,"product_type":"c1","uid":1121520,"ip_address":"","ucode":"F43269CF05E7EE","user_header":"https://static001.geekbang.org/account/avatar/00/11/1c/f0/5dc3afdb.jpg","comment_is_top":false,"comment_ctime":1565321289,"is_pvip":false,"replies":[{"id":"45243","content":"可以参考下这篇文章的解决方案（打开iOS目录下的runner工程）：https:&#47;&#47;blog.csdn.net&#47;zhenggaoxing&#47;article&#47;details&#47;79042382","user_name":"作者回复","user_name_real":"土豆盒子","uid":"1088582","ctime":1565627257,"ip_address":"","comment_id":122241,"utype":1}],"discussion_count":1,"race_medal":0,"score":"14450223177","product_id":100031001,"comment_content":"请教一个问题：我iOS真机运行一直报错，模拟器能成功，自己的个人apple ID（不是开发者） ，手机也是这个ID，不是可以在真机上运行么？","like_count":3,"discussions":[{"author":{"id":1088582,"avatar":"https://static001.geekbang.org/account/avatar/00/10/9c/46/0b29b188.jpg","nickname":"土豆盒子","note":"","ucode":"A910F88CAC0A87","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":462169,"discussion_content":"可以参考下这篇文章的解决方案（打开iOS目录下的runner工程）：https://blog.csdn.net/zhenggaoxing/article/details/79042382","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1565627257,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":111821,"user_name":"张细敏","can_delete":false,"product_type":"c1","uid":1198505,"ip_address":"","ucode":"764F7CF54E44D5","user_header":"https://static001.geekbang.org/account/avatar/00/12/49/a9/eede1288.jpg","comment_is_top":false,"comment_ctime":1562626140,"is_pvip":false,"replies":[{"id":"40788","content":"没错","user_name":"作者回复","user_name_real":"土豆盒子","uid":"1088582","ctime":1562695065,"ip_address":"","comment_id":111821,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10152560732","product_id":100031001,"comment_content":"我认为好处是，状态只在当前的Widget中能使用并修改，不会受到Widget外的影响。如果放到组件外来管理，状态那就相当于一个全局状态，其它的Widget也可以修改这个状态。不知道说的对不对，还望老师指正","like_count":2,"discussions":[{"author":{"id":1088582,"avatar":"https://static001.geekbang.org/account/avatar/00/10/9c/46/0b29b188.jpg","nickname":"土豆盒子","note":"","ucode":"A910F88CAC0A87","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":457456,"discussion_content":"没错","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1562695065,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":119743,"user_name":"晨鹤","can_delete":false,"product_type":"c1","uid":1558953,"ip_address":"","ucode":"C9F9CDFC88B8BC","user_header":"https://static001.geekbang.org/account/avatar/00/17/c9/a9/c7f73138.jpg","comment_is_top":false,"comment_ctime":1564670980,"is_pvip":false,"replies":[{"id":"43938","content":"是啊","user_name":"作者回复","user_name_real":"土豆盒子","uid":"1088582","ctime":1564678083,"ip_address":"","comment_id":119743,"utype":1}],"discussion_count":3,"race_medal":0,"score":"5859638276","product_id":100031001,"comment_content":"现在 Android 原生主推 MVVC 架构，也实现了数据驱动 UI，很爽。","like_count":1,"discussions":[{"author":{"id":1088582,"avatar":"https://static001.geekbang.org/account/avatar/00/10/9c/46/0b29b188.jpg","nickname":"土豆盒子","note":"","ucode":"A910F88CAC0A87","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":461049,"discussion_content":"是啊","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1564678083,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1272321,"avatar":"https://static001.geekbang.org/account/avatar/00/13/6a/01/d9cb531d.jpg","nickname":"这得从我捡到一个鼠标垫开始说起","note":"","ucode":"2FF4347B4E7A9B","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":5012,"discussion_content":"MVVM吧？","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1565873266,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2851897,"avatar":"https://static001.geekbang.org/account/avatar/00/2b/84/39/65142108.jpg","nickname":"金蝉","note":"","ucode":"1B6298E03F8268","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":534413,"discussion_content":"MVVM吧","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1638183513,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":113770,"user_name":"ls","can_delete":false,"product_type":"c1","uid":1007293,"ip_address":"","ucode":"6C14A1D24DDC2E","user_header":"https://static001.geekbang.org/account/avatar/00/0f/5e/bd/e28f8ce5.jpg","comment_is_top":false,"comment_ctime":1563153897,"is_pvip":false,"replies":[{"id":"41547","content":"把组件拆小；配合Editor UI Guides食用","user_name":"作者回复","user_name_real":"土豆盒子","uid":"1088582","ctime":1563212453,"ip_address":"","comment_id":113770,"utype":1}],"discussion_count":2,"race_medal":0,"score":"5858121193","product_id":100031001,"comment_content":"当一个复杂的页面，用这种代码形式来构建ui，维护起来感觉会很吃力。","like_count":1,"discussions":[{"author":{"id":1088582,"avatar":"https://static001.geekbang.org/account/avatar/00/10/9c/46/0b29b188.jpg","nickname":"土豆盒子","note":"","ucode":"A910F88CAC0A87","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":458378,"discussion_content":"把组件拆小；配合Editor UI Guides食用","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1563212453,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1604133,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epsQbE6IFa4uu2yvPzibxowbUKV0n31VffHwicOLrgQ22k12aAgRb3cyApqX9zt3xFicegPicGZqrTNhw/132","nickname":"晓磊","note":"","ucode":"2F02360AA5091F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":2205,"discussion_content":"Editor UI Guides好吃吗？😋😋😋","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1563353482,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":112439,"user_name":"Miracle_","can_delete":false,"product_type":"c1","uid":1594671,"ip_address":"","ucode":"5B885163D73439","user_header":"","comment_is_top":false,"comment_ctime":1562734936,"is_pvip":false,"replies":[{"id":"40957","content":"32节会专门讲”如何适配不同分辨率的手机屏幕？“的","user_name":"作者回复","user_name_real":"土豆盒子","uid":"1088582","ctime":1562777943,"ip_address":"","comment_id":112439,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5857702232","product_id":100031001,"comment_content":"老师请问下目前Flutter对各种不同屏幕尺寸适配有好的方案吗？","like_count":1,"discussions":[{"author":{"id":1088582,"avatar":"https://static001.geekbang.org/account/avatar/00/10/9c/46/0b29b188.jpg","nickname":"土豆盒子","note":"","ucode":"A910F88CAC0A87","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":457734,"discussion_content":"32节会专门讲”如何适配不同分辨率的手机屏幕？“的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1562777943,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":112245,"user_name":"G","can_delete":false,"product_type":"c1","uid":1547293,"ip_address":"","ucode":"50D8E1ADAE0330","user_header":"https://static001.geekbang.org/account/avatar/00/17/9c/1d/34c96367.jpg","comment_is_top":false,"comment_ctime":1562689717,"is_pvip":false,"replies":[{"id":"40963","content":"设计风格问题","user_name":"作者回复","user_name_real":"土豆盒子","uid":"1088582","ctime":1562779413,"ip_address":"","comment_id":112245,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5857657013","product_id":100031001,"comment_content":"老师，为什么要多一个createstate来创建State类呢，像react里面一样直接引用类不行吗？","like_count":1,"discussions":[{"author":{"id":1088582,"avatar":"https://static001.geekbang.org/account/avatar/00/10/9c/46/0b29b188.jpg","nickname":"土豆盒子","note":"","ucode":"A910F88CAC0A87","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":457636,"discussion_content":"设计风格问题","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1562779413,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":111865,"user_name":"Young","can_delete":false,"product_type":"c1","uid":1334725,"ip_address":"","ucode":"646F0A2D28EFEA","user_header":"https://static001.geekbang.org/account/avatar/00/14/5d/c5/2f359dc3.jpg","comment_is_top":false,"comment_ctime":1562632804,"is_pvip":false,"replies":[{"id":"40791","content":"是的，除此之外能够共享状态","user_name":"作者回复","user_name_real":"土豆盒子","uid":"1088582","ctime":1562695155,"ip_address":"","comment_id":111865,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5857600100","product_id":100031001,"comment_content":"内联的方式，代码看起来更加直观，如果再增加一个类和方法，只需要将Scaffold的代码抽取到新方法中，在build方法中调用即可","like_count":1,"discussions":[{"author":{"id":1088582,"avatar":"https://static001.geekbang.org/account/avatar/00/10/9c/46/0b29b188.jpg","nickname":"土豆盒子","note":"","ucode":"A910F88CAC0A87","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":457477,"discussion_content":"是的，除此之外能够共享状态","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1562695155,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":323856,"user_name":"金蝉","can_delete":false,"product_type":"c1","uid":2851897,"ip_address":"","ucode":"1B6298E03F8268","user_header":"https://static001.geekbang.org/account/avatar/00/2b/84/39/65142108.jpg","comment_is_top":false,"comment_ctime":1638183561,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1638183561","product_id":100031001,"comment_content":"Flutter 框架收到通知后是从入口类的 build 函数开始构建还是当前的状态类_MyHomePageState 的 build函数开始重新构建呢？","like_count":0},{"had_liked":false,"id":307157,"user_name":"杨鹏","can_delete":false,"product_type":"c1","uid":2660078,"ip_address":"","ucode":"3582EEC0BFC2E0","user_header":"","comment_is_top":false,"comment_ctime":1628912688,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1628912688","product_id":100031001,"comment_content":"好处就是可以在一个类里共享数据吧，不用考虑传值的问题","like_count":0},{"had_liked":false,"id":245074,"user_name":"绿毛龟🐢","can_delete":false,"product_type":"c1","uid":1622568,"ip_address":"","ucode":"B37A7F5C2D1674","user_header":"https://static001.geekbang.org/account/avatar/00/18/c2/28/2f3c2ed9.jpg","comment_is_top":false,"comment_ctime":1598805408,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1598805408","product_id":100031001,"comment_content":"好处呢，我的理解是组件的状态由组件自己来维护","like_count":0},{"had_liked":false,"id":191369,"user_name":"鸡蛋石头","can_delete":false,"product_type":"c1","uid":1229450,"ip_address":"","ucode":"61801769E485C8","user_header":"https://static001.geekbang.org/account/avatar/00/12/c2/8a/aed13671.jpg","comment_is_top":false,"comment_ctime":1584766704,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1584766704","product_id":100031001,"comment_content":"接口请求完也要用setState吗？接口请求在哪儿请求比较好？","like_count":0,"discussions":[{"author":{"id":1054958,"avatar":"https://static001.geekbang.org/account/avatar/00/10/18/ee/a1ed60d1.jpg","nickname":"ABC","note":"","ucode":"7501AD9C0C4A70","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":334569,"discussion_content":"我一般是单独写一个异步方法A，在initState里面调用这个方法A。在方法A里面处理请求，等请求完成后，在去调用setState更新数据。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1607902228,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":185645,"user_name":"Nirvana","can_delete":false,"product_type":"c1","uid":1134644,"ip_address":"","ucode":"1BFF3C1F968AAA","user_header":"https://static001.geekbang.org/account/avatar/00/11/50/34/4c9ae8ed.jpg","comment_is_top":false,"comment_ctime":1583654280,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1583654280","product_id":100031001,"comment_content":"为什么第一次构建那么慢，一直卡在 installing build&#47;app&#47;outputs&#47;apk&#47;app.apk","like_count":0},{"had_liked":false,"id":138310,"user_name":"雷声大","can_delete":false,"product_type":"c1","uid":1235883,"ip_address":"","ucode":"3159C97CBB7575","user_header":"https://static001.geekbang.org/account/avatar/00/12/db/ab/981ca927.jpg","comment_is_top":false,"comment_ctime":1570159730,"is_pvip":false,"replies":[{"id":"53520","content":"你说对了，是StatefulElement设置的","user_name":"作者回复","user_name_real":"土豆盒子","uid":"1088582","ctime":1570517816,"ip_address":"","comment_id":138310,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1570159730","product_id":100031001,"comment_content":"想问下State 中的widget 是什么时候传过来的？莫非是框架设置的，我们new _MyHomePageState()的时候没有把 widget 传进来，但是State 里面就可以调用 widget.title","like_count":0,"discussions":[{"author":{"id":1088582,"avatar":"https://static001.geekbang.org/account/avatar/00/10/9c/46/0b29b188.jpg","nickname":"土豆盒子","note":"","ucode":"A910F88CAC0A87","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":469477,"discussion_content":"你说对了，是StatefulElement设置的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1570517816,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1795371,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/65/2b/446ef7b6.jpg","nickname":"许先森","note":"","ucode":"1F42D4A6B5C6AF","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":302264,"discussion_content":"不需要你传，内部有设置，你只需要指定泛型类型就能用","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1598862383,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":134894,"user_name":"极客时间","can_delete":false,"product_type":"c1","uid":1015564,"ip_address":"","ucode":"AF7565BB5EF164","user_header":"https://static001.geekbang.org/account/avatar/00/0f/7f/0c/392ce255.jpg","comment_is_top":false,"comment_ctime":1568947938,"is_pvip":false,"replies":[{"id":"51760","content":"可以参考第十篇分享的内容","user_name":"作者回复","user_name_real":"土豆盒子","uid":"1088582","ctime":1568961352,"ip_address":"","comment_id":134894,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1568947938","product_id":100031001,"comment_content":"声名式ui与命令式ui能举个例子不 不太明白啥意思","like_count":0,"discussions":[{"author":{"id":1088582,"avatar":"https://static001.geekbang.org/account/avatar/00/10/9c/46/0b29b188.jpg","nickname":"土豆盒子","note":"","ucode":"A910F88CAC0A87","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":467946,"discussion_content":"可以参考第十篇分享的内容","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1568961352,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":123432,"user_name":"🌙","can_delete":false,"product_type":"c1","uid":1606578,"ip_address":"","ucode":"D70F6C3AF8AA1B","user_header":"https://static001.geekbang.org/account/avatar/00/18/83/b2/e83dd93c.jpg","comment_is_top":false,"comment_ctime":1565675438,"is_pvip":false,"replies":[{"id":"45292","content":"可以看看这个issue的解决方案：https:&#47;&#47;github.com&#47;flutter&#47;flutter&#47;issues&#47;36114","user_name":"作者回复","user_name_real":"土豆盒子","uid":"1088582","ctime":1565676674,"ip_address":"","comment_id":123432,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1565675438","product_id":100031001,"comment_content":"创建应用时提示无法打开kernel-service.dart.snapshot，怎么解决呢？","like_count":0,"discussions":[{"author":{"id":1088582,"avatar":"https://static001.geekbang.org/account/avatar/00/10/9c/46/0b29b188.jpg","nickname":"土豆盒子","note":"","ucode":"A910F88CAC0A87","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":462670,"discussion_content":"可以看看这个issue的解决方案：https://github.com/flutter/flutter/issues/36114","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1565676674,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":121191,"user_name":"和小胖","can_delete":false,"product_type":"c1","uid":1180727,"ip_address":"","ucode":"406BD7AB987EBF","user_header":"https://static001.geekbang.org/account/avatar/00/12/04/37/aa04f997.jpg","comment_is_top":false,"comment_ctime":1565073797,"is_pvip":false,"replies":[{"id":"44582","content":"是的，Flutter底层会做收敛，只有真正需要重绘的才会做渲染。<br>可以提前看下第9和第11节分享，里面有提到Widget的渲染过程，以及State的生命周期。","user_name":"作者回复","user_name_real":"土豆盒子","uid":"1088582","ctime":1565107510,"ip_address":"","comment_id":121191,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1565073797","product_id":100031001,"comment_content":"老师，我在那个main.dart这个文件里面打了断点，然后发现每次点击加号按钮时候，Scaffold 类里面的appBar之类的几乎都会走一遍，理论上来说不是只应该只走下面这段代码吗？<br>Text(<br>              &#39;$_counter&#39;,<br>              style: Theme.of(context).textTheme.display1,<br>            )<br>难道是说只是走了，但是那些不需要的走的不重绘刷新吗？","like_count":0,"discussions":[{"author":{"id":1088582,"avatar":"https://static001.geekbang.org/account/avatar/00/10/9c/46/0b29b188.jpg","nickname":"土豆盒子","note":"","ucode":"A910F88CAC0A87","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":461673,"discussion_content":"是的，Flutter底层会做收敛，只有真正需要重绘的才会做渲染。\n可以提前看下第9和第11节分享，里面有提到Widget的渲染过程，以及State的生命周期。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1565107510,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":115256,"user_name":"半桶水","can_delete":false,"product_type":"c1","uid":1000475,"ip_address":"","ucode":"AFC053EB627E48","user_header":"https://static001.geekbang.org/account/avatar/00/0f/44/1b/fa287ed5.jpg","comment_is_top":false,"comment_ctime":1563519035,"is_pvip":false,"replies":[{"id":"42186","content":"试试 export NO_PROXY=127.0.0.1,localhost<br><br>参考：https:&#47;&#47;github.com&#47;flutter&#47;flutter&#47;issues&#47;19056","user_name":"作者回复","user_name_real":"土豆盒子","uid":"1088582","ctime":1563554230,"ip_address":"","comment_id":115256,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1563519035","product_id":100031001,"comment_content":"请教个问题，通过android studio进行调试，出现error connecting to the service protocol：HttpException：connection closed before full header was received。环境是ubuntu 19.04，flutter v1.7.8，Android studio 3.4.2","like_count":0,"discussions":[{"author":{"id":1088582,"avatar":"https://static001.geekbang.org/account/avatar/00/10/9c/46/0b29b188.jpg","nickname":"土豆盒子","note":"","ucode":"A910F88CAC0A87","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":459030,"discussion_content":"试试 export NO_PROXY=127.0.0.1,localhost\n\n参考：https://github.com/flutter/flutter/issues/19056","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1563554230,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1000475,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/44/1b/fa287ed5.jpg","nickname":"半桶水","note":"","ucode":"AFC053EB627E48","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":4007,"discussion_content":"尝试了也不行，把AVD版本降下来就可以了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1565055940,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":114647,"user_name":"晓磊","can_delete":false,"product_type":"c1","uid":1604133,"ip_address":"","ucode":"2F02360AA5091F","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epsQbE6IFa4uu2yvPzibxowbUKV0n31VffHwicOLrgQ22k12aAgRb3cyApqX9zt3xFicegPicGZqrTNhw/132","comment_is_top":false,"comment_ctime":1563356274,"is_pvip":false,"replies":[{"id":"41883","content":"模拟器闪电可以用吗","user_name":"作者回复","user_name_real":"土豆盒子","uid":"1088582","ctime":1563380544,"ip_address":"","comment_id":114647,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1563356274","product_id":100031001,"comment_content":"找到小闪电图标了。但一直是灰色不可用状态。鼠标悬浮提示的快捷键是ctrl-\\，按下去不起作用。真机调试。windows系统，AndroidStudio","like_count":0,"discussions":[{"author":{"id":1088582,"avatar":"https://static001.geekbang.org/account/avatar/00/10/9c/46/0b29b188.jpg","nickname":"土豆盒子","note":"","ucode":"A910F88CAC0A87","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":458756,"discussion_content":"模拟器闪电可以用吗","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1563380544,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1604133,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epsQbE6IFa4uu2yvPzibxowbUKV0n31VffHwicOLrgQ22k12aAgRb3cyApqX9zt3xFicegPicGZqrTNhw/132","nickname":"晓磊","note":"","ucode":"2F02360AA5091F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":2271,"discussion_content":"尝试了模拟器，nexus 6p,API29,闪电也是不可用状态。不知道是不是哪里配置错了。flutter和dart的path设置也都配了，可以在命令行中操作执行。唯一就是无法触发热加载","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1563422512,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":114646,"user_name":"晓磊","can_delete":false,"product_type":"c1","uid":1604133,"ip_address":"","ucode":"2F02360AA5091F","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epsQbE6IFa4uu2yvPzibxowbUKV0n31VffHwicOLrgQ22k12aAgRb3cyApqX9zt3xFicegPicGZqrTNhw/132","comment_is_top":false,"comment_ctime":1563356102,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1563356102","product_id":100031001,"comment_content":"老师，AndroidStudio上运行flutter上之后，找不到热重载按钮，就官网上说的那个带小闪电标识的，说的ctrl-s也不起做用，必须stop然后重新start。AS---Settings---Build,Execution,Deployment---Instant Run里的选项也尝试打开关闭，但未生效。","like_count":0},{"had_liked":false,"id":113920,"user_name":"、、cryAllen","can_delete":false,"product_type":"c1","uid":1017204,"ip_address":"","ucode":"50032F6E2DDB4B","user_header":"https://static001.geekbang.org/account/avatar/00/0f/85/74/e70862a2.jpg","comment_is_top":false,"comment_ctime":1563185116,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1563185116","product_id":100031001,"comment_content":"以内联的方式，更能体现数据驱动状态变化。","like_count":0},{"had_liked":false,"id":112697,"user_name":"top_founder","can_delete":false,"product_type":"c1","uid":1595063,"ip_address":"","ucode":"8A23E044C3F503","user_header":"https://static001.geekbang.org/account/avatar/00/18/56/b7/4258025c.jpg","comment_is_top":false,"comment_ctime":1562807663,"is_pvip":false,"replies":[{"id":"41089","content":"第9节”Widget，构建Flutter界面的基石“会专门讲的。<br>简单来说就是Widget并不负责渲染，只是配置而已，所以即使销毁重建也不影响真实的渲染树，Flutter会计算diff判断真正需要刷新的那部分","user_name":"作者回复","user_name_real":"土豆盒子","uid":"1088582","ctime":1562865855,"ip_address":"","comment_id":112697,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1562807663","product_id":100031001,"comment_content":"中间层收敛上层UI配置何解？","like_count":0,"discussions":[{"author":{"id":1088582,"avatar":"https://static001.geekbang.org/account/avatar/00/10/9c/46/0b29b188.jpg","nickname":"土豆盒子","note":"","ucode":"A910F88CAC0A87","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":457862,"discussion_content":"第9节”Widget，构建Flutter界面的基石“会专门讲的。\n简单来说就是Widget并不负责渲染，只是配置而已，所以即使销毁重建也不影响真实的渲染树，Flutter会计算diff判断真正需要刷新的那部分","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1562865855,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":112664,"user_name":"wilson","can_delete":false,"product_type":"c1","uid":1286793,"ip_address":"","ucode":"55CFA9D4AA9A19","user_header":"https://static001.geekbang.org/account/avatar/00/13/a2/89/7098b532.jpg","comment_is_top":false,"comment_ctime":1562804138,"is_pvip":true,"replies":[{"id":"41086","content":"会捎带讲一些，但不是重点","user_name":"作者回复","user_name_real":"土豆盒子","uid":"1088582","ctime":1562865563,"ip_address":"","comment_id":112664,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1562804138","product_id":100031001,"comment_content":"有没有关于stream rxdart  block 等相关的分享","like_count":0,"discussions":[{"author":{"id":1088582,"avatar":"https://static001.geekbang.org/account/avatar/00/10/9c/46/0b29b188.jpg","nickname":"土豆盒子","note":"","ucode":"A910F88CAC0A87","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":457845,"discussion_content":"会捎带讲一些，但不是重点","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1562865563,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":112512,"user_name":"无尘","can_delete":false,"product_type":"c1","uid":1330469,"ip_address":"","ucode":"42BDF14424D24B","user_header":"https://static001.geekbang.org/account/avatar/00/14/4d/25/0fd94f9b.jpg","comment_is_top":false,"comment_ctime":1562749145,"is_pvip":false,"replies":[{"id":"40956","content":"入口只能有一个，但你可以通过Configuration Selector选择使用哪个入口","user_name":"作者回复","user_name_real":"土豆盒子","uid":"1088582","ctime":1562777915,"ip_address":"","comment_id":112512,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1562749145","product_id":100031001,"comment_content":"咨询一下老师，main.dart里面的main()方法可以有多个吗？比如我在lib下面新建一个main1.dart里面也写一个一样的main()方法，那么会执行哪个main()方法呢？flutter又是如何找到这个入口方法的呢？","like_count":0,"discussions":[{"author":{"id":1088582,"avatar":"https://static001.geekbang.org/account/avatar/00/10/9c/46/0b29b188.jpg","nickname":"土豆盒子","note":"","ucode":"A910F88CAC0A87","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":457772,"discussion_content":"入口只能有一个，但你可以通过Configuration Selector选择使用哪个入口","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1562777915,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":112341,"user_name":"淡～","can_delete":false,"product_type":"c1","uid":1123784,"ip_address":"","ucode":"88577F9F1392CD","user_header":"https://static001.geekbang.org/account/avatar/00/11/25/c8/7a950a91.jpg","comment_is_top":false,"comment_ctime":1562722134,"is_pvip":false,"replies":[{"id":"40960","content":"第9节”Widget，构建Flutter界面的基石“会专门讲的。<br>简单来说就是Widget并不负责渲染，只是配置而已，所以即使销毁重建也不影响真实的渲染树，Flutter会计算diff判断真正需要刷新的那部分","user_name":"作者回复","user_name_real":"土豆盒子","uid":"1088582","ctime":1562778236,"ip_address":"","comment_id":112341,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1562722134","product_id":100031001,"comment_content":"Flutter 对这个机制做了优化，其框架内部会通过一个中间层去收敛上层 UI 配置对底层真实渲染的改动，从而最大程度降低对真实渲染视图的修改，提高渲染效率，而不是上层 UI 配置变了就需要销毁整个渲染视图树重建。<br>没有明白这句话真正意思，可以具体解释下吗？","like_count":0,"discussions":[{"author":{"id":1088582,"avatar":"https://static001.geekbang.org/account/avatar/00/10/9c/46/0b29b188.jpg","nickname":"土豆盒子","note":"","ucode":"A910F88CAC0A87","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":457687,"discussion_content":"第9节”Widget，构建Flutter界面的基石“会专门讲的。\n简单来说就是Widget并不负责渲染，只是配置而已，所以即使销毁重建也不影响真实的渲染树，Flutter会计算diff判断真正需要刷新的那部分","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1562778236,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":112200,"user_name":"刘","can_delete":false,"product_type":"c1","uid":1075060,"ip_address":"","ucode":"C24FA06DD1A9BA","user_header":"https://wx.qlogo.cn/mmopen/vi_32/DYAIOgq83erXf7JkCX1JsCticeyfoQKbKxmLIvVt2xyiceko6WmmtavUAcHwBYiaibqLRCmFXJw3NhD3xp3aqKSHNA/0","comment_is_top":false,"comment_ctime":1562682808,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"1562682808","product_id":100031001,"comment_content":"有一点我觉得说错了，flutter中一切都是widget并不对，应该是flutter中的能显示的组件都是widget，不能用来显示的，并不是widget","like_count":0,"discussions":[{"author":{"id":1048918,"avatar":"https://static001.geekbang.org/account/avatar/00/10/01/56/03fb63d9.jpg","nickname":"于留月","note":"","ucode":"DE3516198CF1B2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":1682,"discussion_content":"不对吧，事件、手势、布局、约束不都是Widget,就连APP本身也是Widget","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1562809799,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1347681,"avatar":"https://static001.geekbang.org/account/avatar/00/14/90/61/c8ab4fdd.jpg","nickname":"白菜","note":"","ucode":"3092062F80965F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":1613,"discussion_content":"布局的相关的也是widget，一切都是widget","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1562732057,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":112158,"user_name":"墨名次","can_delete":false,"product_type":"c1","uid":1330267,"ip_address":"","ucode":"926EDC57291C09","user_header":"https://static001.geekbang.org/account/avatar/00/14/4c/5b/5499d6e6.jpg","comment_is_top":false,"comment_ctime":1562676313,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1562676313","product_id":100031001,"comment_content":"我觉得Scaffold就是对Material Design规范进行约束的一个组件而已。","like_count":0},{"had_liked":false,"id":111962,"user_name":"Longwei243","can_delete":false,"product_type":"c1","uid":1023476,"ip_address":"","ucode":"3326F04A3DFD35","user_header":"https://static001.geekbang.org/account/avatar/00/0f/9d/f4/7d74c9bb.jpg","comment_is_top":false,"comment_ctime":1562643617,"is_pvip":false,"replies":[{"id":"40783","content":"看下子Widget和父Widget是不是共享了一个context，如果是的话，把子Widget抽成另一个组件","user_name":"作者回复","user_name_real":"土豆盒子","uid":"1088582","ctime":1562694466,"ip_address":"","comment_id":111962,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1562643617","product_id":100031001,"comment_content":"NotificationListener监听不到发出的自定义事件可能是什么原因呢？","like_count":0,"discussions":[{"author":{"id":1088582,"avatar":"https://static001.geekbang.org/account/avatar/00/10/9c/46/0b29b188.jpg","nickname":"土豆盒子","note":"","ucode":"A910F88CAC0A87","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":457520,"discussion_content":"看下子Widget和父Widget是不是共享了一个context，如果是的话，把子Widget抽成另一个组件","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1562694466,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":111949,"user_name":"卡特","can_delete":false,"product_type":"c1","uid":1412900,"ip_address":"","ucode":"CB52D87493113D","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTL7KLt8chh8F9D4y3zXJiaTicGicBGwdpoFKTU0CpW6D2mav5HPDkHTbWA6bZ61ZBXAlgR08Y5IsU1kQ/132","comment_is_top":false,"comment_ctime":1562641719,"is_pvip":false,"replies":[{"id":"40784","content":"热重载的前提是JIT","user_name":"作者回复","user_name_real":"土豆盒子","uid":"1088582","ctime":1562694550,"ip_address":"","comment_id":111949,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1562641719","product_id":100031001,"comment_content":"我一直有个问题比较好奇，现在很多公司都在研究flutter的动态化，也都是照RN那套把flutter弄得更乱了，没人考虑从flutter的热重载那里入手吗","like_count":0,"discussions":[{"author":{"id":1088582,"avatar":"https://static001.geekbang.org/account/avatar/00/10/9c/46/0b29b188.jpg","nickname":"土豆盒子","note":"","ucode":"A910F88CAC0A87","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":457514,"discussion_content":"热重载的前提是JIT","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1562694550,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1110347,"avatar":"https://static001.geekbang.org/account/avatar/00/10/f1/4b/b0e0421a.jpg","nickname":"James","note":"","ucode":"7E61C38EF92D5C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":2743,"discussion_content":"第三方的都是用js来写widget这块的东西，直接js与element对接","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1563891690,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":111916,"user_name":"dks","can_delete":false,"product_type":"c1","uid":1013029,"ip_address":"","ucode":"D94181CB16F975","user_header":"https://static001.geekbang.org/account/avatar/00/0f/75/25/2f6c53bc.jpg","comment_is_top":false,"comment_ctime":1562636908,"is_pvip":false,"replies":[{"id":"40785","content":"buildContext是Widget对应的Element，负责实际渲染的","user_name":"作者回复","user_name_real":"土豆盒子","uid":"1088582","ctime":1562694750,"ip_address":"","comment_id":111916,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1562636908","product_id":100031001,"comment_content":"使用build 函数里内联的方式，可以拿到 BuildContext 对象。那么 BuildContext 是用来做什么的呢？","like_count":0,"discussions":[{"author":{"id":1088582,"avatar":"https://static001.geekbang.org/account/avatar/00/10/9c/46/0b29b188.jpg","nickname":"土豆盒子","note":"","ucode":"A910F88CAC0A87","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":457496,"discussion_content":"buildContext是Widget对应的Element，负责实际渲染的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1562694750,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":111822,"user_name":"yuhao0x0628","can_delete":false,"product_type":"c1","uid":1332463,"ip_address":"","ucode":"BFD472974828A5","user_header":"https://static001.geekbang.org/account/avatar/00/14/54/ef/3cdfd916.jpg","comment_is_top":false,"comment_ctime":1562626749,"is_pvip":true,"replies":[{"id":"40789","content":"是的，除此之外可以共享状态","user_name":"作者回复","user_name_real":"土豆盒子","uid":"1088582","ctime":1562695108,"ip_address":"","comment_id":111822,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1562626749","product_id":100031001,"comment_content":"1. 我想好處是直觀，易讀<br>2. 建立一個 function or variable，返回 Widget，再將該函式填入 build 中。這是 flutter 常用的組件手法。","like_count":0,"discussions":[{"author":{"id":1088582,"avatar":"https://static001.geekbang.org/account/avatar/00/10/9c/46/0b29b188.jpg","nickname":"土豆盒子","note":"","ucode":"A910F88CAC0A87","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":457457,"discussion_content":"是的，除此之外可以共享状态","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1562695108,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]}]}