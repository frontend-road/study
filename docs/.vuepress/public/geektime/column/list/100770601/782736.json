{"id":782736,"title":"06｜RAG实战：基于ChatGLM3-6B+LangChain+Faiss搭建企业内部知识库","content":"<p>你好，我是独行。</p><p>上一节课，我们通过一个企业内部小助手的案例，学习了6B的微调过程。其中，除了微调，还有一种模式就是知识库，用来增强大模型信息检索的能力，我们称之为检索增强生成（RAG），这是目前非常流行的一种做法，知识库模式相比于微调有2个好处。</p><ol>\n<li>知识准确：先把知识进行向量化，存储到向量数据库里，使用的时候通过向量检索从向量库把知识检索出来，这样可以确保知识的准确性。</li>\n<li>更新频率快：当你发现知识库里的知识不全的时候，可以随时补充，不需要像微调一样，重新跑微调任务、验证结果、重新部署等。</li>\n</ol><p>这节课我们就通过外挂向量库的方式，继续完善法律小助手案例。除了大模型6B外，你还需要了解LangChain、向量化、向量库等组件及概念。ChatGLM3官方提供了一个和LangChain结合的demo：Langchain-Chatchat，还带有UI界面，我们可以直接拿过来使用。如果你理解了这个演示项目，那么智能体的原理也就学得差不多了，剩下的就是工程化的事情了。</p><h2>Langchain-Chatchat架构</h2><p>Langchain-Chatchat主要包含几个模块：大语言模型、Embedding模型、分词器、向量数据库、Agent Tools、API、WebUI。</p><!-- [[[read_end]]] --><p><img src=\"https://static001.geekbang.org/resource/image/55/02/552380d57dbdab3d0ce8b7668be7ec02.jpg?wh=2526x1088\" alt=\"图片\"></p><p>知识库大概流程图包含分词、向量化、存储、查询等过程，图中不包括其他Tools。</p><p><img src=\"https://static001.geekbang.org/resource/image/62/74/622715ca856ab445014b400b7b484d74.png?wh=2256x1374\" alt=\"图片\"></p><p>1～7是文档完成向量化存储的过程，8～15是知识库检索的过程。下面我们完整地跑一下这个demo。</p><h2>系统部署</h2><ol>\n<li><strong>安装依赖</strong></li>\n</ol><p>首先，从GitHub上克隆代码 <code>https://github.com/chatchat-space/Langchain-Chatchat.git</code>。然后安装依赖，如果之前已经安装过的，可以排除掉，通过pip3 list查看已经安装过的包和版本，当然如果网速允许，建议直接安装，否则可能会有依赖库冲突的问题。</p><p>三个依赖全部安装：requirements.txt、requirements_api.txt、requirements_webui.txt。</p><p>指定国内源速度更快：</p><pre><code class=\"language-shell\">pip3 install -r requirements.txt -i https://mirrors.aliyun.com/pypi/simple\n</code></pre><p>使用Faiss向量库，需要安装faiss-gpu依赖。</p><pre><code class=\"language-shell\">pip3 install faiss-gpu\n</code></pre><ol start=\"2\">\n<li><strong>下载模型</strong></li>\n</ol><p>之前我们已经安装过ChatGLM3-6B了，本次无需再次安装，只要下载Embedding模型即可，我们选择bge-large-zh-v1.5进行下载，可以从HuggingFace下载，也可以从ModelScope下载，后者速度更快。</p><pre><code class=\"language-shell\">git clone https://www.modelscope.cn/AI-ModelScope/bge-large-zh-v1.5.git\ngit lfs pull\n</code></pre><p>git lfs是专门用来拉取git上存储的大文件的，通过git lfs pull将模型权重拉取到本地。</p><ol start=\"3\">\n<li><strong>参数配置</strong></li>\n</ol><p>执行以下命令，将配置文件复制一份到config目录，方便修改。</p><pre><code class=\"language-plain\">python copy_config_example.py\n</code></pre><p>主要有以下几个配置文件：</p><p><img src=\"https://static001.geekbang.org/resource/image/7f/48/7fd1b0da12a3a5b3c18fce45731fdb48.png?wh=1456x588\" alt=\"图片\"></p><p>大部分不需要修改，我们只需要改一下model_config.py指定大模型和Embedding模型的路径即可。找到MODEL_PATH配置，分别修改 embed_model 里bge-large-zh-v1.5模型的本地目录，以及llm_model里chatglm3-6b的本地目录即可。</p><ol start=\"4\">\n<li><strong>初始化向量库数据</strong></li>\n</ol><p>这一步主要是确认向量数据库和Embedding模型有没有部署好，实际生产环境中，我们可以自己创建业务向量数据库，这里通过初始化放一些示例数据进去。执行命令：</p><pre><code class=\"language-shell\">python3 init_database.py --recreate-vs\n</code></pre><p>如果看到不断地加载示例数据，直到进度100%完成，就说明成功了，接下来就是一键启动。</p><pre><code class=\"language-shell\">$ python3 startup.py -a\n</code></pre><p>当命令行出现如下提示，说明启动成功了。</p><p><img src=\"https://static001.geekbang.org/resource/image/43/b4/43e8c48873c2f514108d8d475a568db4.png?wh=950x380\" alt=\"图片\"></p><p>打开地址进入页面：</p><p><img src=\"https://static001.geekbang.org/resource/image/33/92/33ee89d5cf412e342be711bf3e9a1492.png?wh=2520x1378\" alt=\"图片\"></p><p>到这里基本上就算安装成功了，下面我们看一下如何管理知识库，以及自定义工具来增强大模型的检索能力。</p><h2>知识管理</h2><p>打开页面，点击左侧的知识库管理，可以进行知识库的上传、删除、更新操作。</p><p><img src=\"https://static001.geekbang.org/resource/image/85/ec/853708db3422cf1fc6cb7666656aa8ec.png?wh=2788x1292\" alt=\"图片\"></p><p><img src=\"https://static001.geekbang.org/resource/image/4d/b3/4d7a95c43598b406b82ab93da31980b3.png?wh=2690x1132\" alt=\"图片\"></p><p><img src=\"https://static001.geekbang.org/resource/image/5c/e7/5c0cb7195b3ea598566fdbe74eyy71e7.png?wh=2786x1416\" alt=\"图片\"></p><p>通过上面的操作可以将文档存入所选择的向量库内，供对话时检索。我们也可以通过API进行知识库管理、对话及查看服务器信息等操作。</p><p><img src=\"https://static001.geekbang.org/resource/image/e7/fd/e7075ef8fcbff3f5f9e64cffabe4bdfd.png?wh=2862x1696\" alt=\"图片\"></p><p>下面我们看一下知识库的效果，先对大模型进行提问。</p><p><img src=\"https://static001.geekbang.org/resource/image/71/74/714f8aaae7850a94bbca573b97c60274.png?wh=2588x1202\" alt=\"图片\"></p><p>选择知识库模式，并选择我们上传好的知识，再次提问。</p><p><img src=\"https://static001.geekbang.org/resource/image/c4/b5/c47abdbb66f5fdbb0e231267847090b5.png?wh=2558x1224\" alt=\"图片\"></p><p>既获取了大模型的输出，也获取到了知识库的输出，实际应用过程中，我们可以把从知识库中检索到的信息传入大模型，大模型会进行上下文理解，经过整理后输出。</p><p>这些都是这个demo提供的一些基本功能，实际生产中，我们可以在企业内部搭建知识管理系统，由专业的团队进行知识维护。应用过程中需要考虑的事项比较多，比如企业内部统一登录、操作权限、操作日志等，都需要按照企业需求进行详细设计。后面第25讲我们会专门讲解企业大模型落地系统架构设计，到时候我们会把所有该考虑的细节都梳理一遍。</p><p>除了知识库外，在一个智能体应用中，我们可以开发各种各样的Tool，下面我们再研究一下这个demo自带的天气查询工具。</p><h2>Tools使用</h2><p>打开kb_config.py配置文件，里面有天气查询、搜索引擎查询等工具开发配置，我们去心知天气官网申请一个API密钥，赋值给SENIVERSE_API_KEY变量，页面上就可以直接用了。</p><p><img src=\"https://static001.geekbang.org/resource/image/79/b7/798b98c052c8a538c7d50003be0980b7.png?wh=2614x1240\" alt=\"图片\"></p><p>这是一个典型的检索增强生成（RAG）案例，通过API调用第三方服务，扩大信息检索范围。实际应用过程中，我们可以把企业内部的数据或者产品数据通过API喂给大模型，为产品增加AI能力，进而提升产品竞争力。</p><p>我们知道知识库模式，底层实际上是一个向量库，这个demo我们用的是Meta开源的向量数据库Faiss，当然也可以替换成国产向量数据库Milvus，接下来我们简单讲讲向量数据库是什么样的数据库，能解决什么问题。</p><h2>向量数据库</h2><p>在聊向量数据库之前，让我们先简单了解一下“向量”这个概念。在计算机科学和数学中，向量是由一系列数字组成的数组，这些数字可以表示任何东西，从物理空间的方向和大小到商品的特性和用户偏好等。</p><h4>相似度计算</h4><p>比如，在评价一部电影时，你给它的评分包括剧情8分、特效7分、演技9分、音乐6分。这四个评分点就可以构成一个向量 <code>[8, 7, 9, 6]</code>。在这个向量中，每一个维度都代表了电影的一个属性。现在，假设你是一位开发工程师，你正在构建一个推荐系统。你的目标是根据用户的喜好向他们推荐电影。用户的喜好也可以用一个向量来表示，比如一个用户可能喜欢剧情和演技重于特效和音乐，他们的喜好向量可能是 <code>[10, 5, 10, 4]</code>。</p><p>现在，如果你想找出哪部电影最符合这类用户的口味，你可以计算用户喜好向量和每部电影向量之间的相似度。在向量空间中，这通常通过计算向量之间的距离来完成，如欧氏距离或余弦相似度。距离越小或相似度越高，表示电影越符合用户的口味。</p><pre><code class=\"language-python\">import numpy as np\n# 定义计算余弦相似度的函数\ndef calculate_similarity(vector1, vector2):\n    # 使用numpy库来计算余弦相似度\n    dot_product = np.dot(vector1, vector2)\n    norm_vector1 = np.linalg.norm(vector1)\n    norm_vector2 = np.linalg.norm(vector2)\n    similarity = dot_product / (norm_vector1 * norm_vector2)\n    return similarity\n# 假设我们有一个向量代表用户偏好\nuser_preference = np.array([10, 5, 10, 4])\n# 我们有一系列电影向量\nmovie_vectors = np.array([\n    [8, 7, 9, 6],   # 电影A\n    [9, 6, 8, 7],   # 电影B\n    [10, 5, 7, 8]   # 电影C\n])\n# 计算并打印每部电影与用户偏好之间的相似度\nfor i, movie_vector in enumerate(movie_vectors):\n    similarity = calculate_similarity(user_preference, movie_vector)\n    print(f\"电影{chr(65+i)}与用户偏好的相似度为: {similarity:.2f}\")\n\n</code></pre><p>我们这个示例里使用余弦相似度算法，执行这个代码块得出如下结果：</p><pre><code class=\"language-python\">电影A与用户偏好的相似度为: 0.97\n电影B与用户偏好的相似度为: 0.97\n电影C与用户偏好的相似度为: 0.95\n</code></pre><p>特别提醒：推荐你先熟练掌握Python语言，可以说大部分和AI相关的代码都是Python实现的，后面的示例代码我们基本都会用Python去写。</p><h4>文本向量</h4><p>在自然语言处理（NLP）中，一个词的向量值是通过在大量文本上训练得到的。一个词的向量值取决于它是如何被训练的，以及训练数据的性质。例如在不同的Word2Vec模型中，即使是相同的词，向量值也可能完全不同，因为它们可能基于不同的文本集或使用不同的参数训练。</p><p>常见的Word2Vec模型会生成几百维的向量。我们举一个例子来说明不同的词之间向量是怎么表示的，以及相似度是如何计算的。下面的例子是基于GoogleNews-vectors-negative300.bin模型计算的，计算男人和男孩的向量表示以及相似度。</p><pre><code class=\"language-python\">import numpy as np\nfrom gensim.models import KeyedVectors\nmodel = KeyedVectors.load_word2vec_format('GoogleNews-vectors-negative300.bin', binary=True)\ndef cosine_similarity(vec_a, vec_b):\n    # 计算两个向量的点积\n    dot_product = np.dot(vec_a, vec_b)\n    # 计算每个向量的欧几里得长度\n    norm_a = np.linalg.norm(vec_a)\n    norm_b = np.linalg.norm(vec_b)\n    # 计算余弦相似度\n    return dot_product / (norm_a * norm_b)\n# 获取man和boy两个词的向量\nman_vector = model['man']\nboy_vector = model['boy']\n# 打印出这两个向量的前10个元素\nprint(man_vector[:10])\nprint(boy_vector[:10])\nsimilarity_man_boy = cosine_similarity(man_vector, boy_vector)\nprint(f\"男人和男孩的相似度: {similarity_man_boy}\")\n</code></pre><p>程序输出如下：</p><pre><code class=\"language-python\">[ 0.32617188&nbsp; 0.13085938&nbsp; 0.03466797 -0.08300781&nbsp; 0.08984375 -0.04125977\n&nbsp;-0.19824219&nbsp; 0.00689697&nbsp; 0.14355469&nbsp; 0.0019455 ]\n[ 0.23535156&nbsp; 0.16503906&nbsp; 0.09326172 -0.12890625&nbsp; 0.01599121&nbsp; 0.03613281\n&nbsp;-0.11669922 -0.07324219&nbsp; 0.13867188&nbsp; 0.01153564]\n男人和男孩的相似度: 0.6824870705604553\n</code></pre><p>这只是一个例子，不同的模型、不同的训练数据集，甚至是不同的训练参数都会产生不同的词向量。同样的道理，女人和女孩、男人和青少年等等，相似度也很高。这种特性使我们进行信息检索的时候，不需要像传统数据库那样通过like去找相似的内容，而是通过向量相似度去检索相似的内容。这样做的好处是<strong>可以通过多个维度（属性）去比较</strong>，比如男人和男孩相似度很高，是因为男人和男孩在性别、社会角色、关系、活动和兴趣、情感和行为等方面都比较相似。</p><h4>向量存储</h4><p>存储向量数据有专门的向量数据库，比如Faiss、Milvus。向量数据库专门被设计用于存储和检索向量数据，非常适合处理词向量、图像特征向量或任何其他形式的高维数据。我们以刚刚生成的词向量为例来解释如何通过向量数据库存储这些数据。</p><pre><code class=\"language-python\">import numpy as np\nimport faiss\n\n# 假设我们有一些词向量，每个向量的维度为100\ndimension = 100&nbsp; # 向量维度\nword_vectors = np.array([\n&nbsp; &nbsp; [0.1, 0.2, ...],&nbsp; # 'man'的向量\n&nbsp; &nbsp; [0.01, 0.2, ...],&nbsp; # 'boy'的向量\n&nbsp; &nbsp; ...&nbsp; # 更多向量\n]).astype('float32')&nbsp; # Faiss要求使用float32\n\n# 创建一个用于存储向量的索引\n# 这里使用的是L2距离（欧氏距离），如果你需要使用余弦相似度，需要先规范化向量\nindex = faiss.IndexFlatL2(dimension)\n\n# 添加向量到索引\nindex.add(word_vectors)\n\n# 假设我们想找到与'new_man'（新向量）最相似的5个向量\nnew_man = np.array([[0.1, 0.21, ...]]).astype('float32')&nbsp; # 新的查询向量\nk = 5&nbsp; # 返回最相似的5个向量\nD, I = index.search(new_man, k)&nbsp; # D是距离的数组，I是索引的数组\n\n# 打印出最相似的向量的索引\nprint(I)\n</code></pre><p>记得先安装一下Faiss依赖。</p><pre><code class=\"language-python\">pip install faiss-cpu&nbsp; # 对于没有GPU的系统\n# 或者\npip install faiss-gpu&nbsp; # 对于有GPU的系统\n</code></pre><p>使用起来也比较简单，和我们一般的数据存储一样，通过客户端进行数据插入和查询。和其他存储中间件一样，当数据量非常大的时候，同样会遇到性能、稳定性等问题，当大规模使用的时候需要考虑各种各样的问题，只不过对于向量数据库，挑战在于多维度的存储，比如随着数据维度的增加（一个词被表示为一个300维的向量），数据点（向量）之间的距离开始变得难以区分。这不仅让寻找“最近的邻居”变得更加困难和耗时，而且还会增加存储和搜索时所需的资源。</p><p>你可以本地自己搭建一个向量数据库体验一下，和传统的关系/非关系型数据存储有什么区别，当然，如果感兴趣也可以看看底层的存储原理。</p><h2>应用场景</h2><p>知识库模式可以用在相对固定的场景做推理，比如企业内部使用的员工小助手，包含考勤制度、薪酬制度、报销制度、法律帮助，以及产品操作手册、使用帮助等等，这类场景不需要太多的逻辑推理，使用知识库模式检索精确度高，并且可以随时更新。企业实际应用过程中，除了使用大语言模型本身的基础能力外，其他的也就是在不同场景下，把各种各样的Agent进行堆叠，产生智能化的效果。</p><h2>小结</h2><p><img src=\"https://static001.geekbang.org/resource/image/2a/62/2abd277a46a908f42bebbd5905e34b62.png?wh=1528x1318\" alt=\"图片\"></p><p>本节课我们基于6B、LangChain、Faiss搭建了企业内部知识库系统，了解了知识库、向量库、智能体等相关的知识和应用场景，完整地体验了RAG场景。这节课还有很多可以动手操作的小实验，比如自定义Tool、切换向量数据库、自定义API，时间充足的话你可以每一个都试一下，学习效果会更好。</p><h2>思考题</h2><p>在前面知识库的例子中，我们将大模型的输出和知识库检索的全部结果进行了展示，实际应用过程中，一般不会把这两个输出的内容全部返回给用户，你可以思考一下如何设计可以更加人性化的返回结果。欢迎你在评论区留言，和我一起讨论，也欢迎你把这节课的内容分享给需要的朋友，我们下节课再见！</p><p><a href=\"https://jinshuju.net/f/D8y8pw\">戳此加入课程交流群</a></p>","neighbors":{"left":{"article_title":"05｜大模型微调：如何基于ChatGLM3-6B+Lora构建基本法律常识大模型？","id":782717},"right":{"article_title":"07｜大模型API封装：自建大模型如何对外服务？","id":783310}},"comments":[{"had_liked":false,"id":391727,"user_name":"LJT","can_delete":false,"product_type":"c1","uid":2196200,"ip_address":"上海","ucode":"1BDF8CF4E9F452","user_header":"https://static001.geekbang.org/account/avatar/00/21/82/e8/3c0c767a.jpg","comment_is_top":false,"comment_ctime":1718947300,"is_pvip":true,"replies":[{"id":142435,"content":"感谢分享！\n官方已经更新，强制拉0.2也行，用0.3也行，用0.3的话可能需要自己研究一下。","user_name":"作者回复","user_name_real":"编辑","uid":2083554,"ctime":1718964593,"ip_address":"浙江","comment_id":391727,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100770601,"comment_content":"文中的langchain-chat需要是0.2.x版本，如果是直接从github上拉下来是0.3.x，文件夹中没有requirement.txt那些文件。所以，应该使用git clone https:&#47;&#47;github.com&#47;chatchat-space&#47;Langchain-Chatchat.git --branch v0.2.10 --depth=1","like_count":8,"discussions":[{"author":{"id":2083554,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83erZP8e2vqiaACFaDxruOzUTPbPv2uRUTp9UuEg98Ib9aYddjZK2kastqf0B14Ec7uXx7CCSXr0fhAA/132","nickname":"Geek_cf2545","note":"","ucode":"B69DF1E734FBA2","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":646896,"discussion_content":"感谢分享！\n官方已经更新，强制拉0.2也行，用0.3也行，用0.3的话可能需要自己研究一下。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1718964594,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"浙江","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2,\"source\":0}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":391729,"user_name":"Geek_27bf62","can_delete":false,"product_type":"c1","uid":3581566,"ip_address":"陕西","ucode":"C4FA7ED4383D2B","user_header":"","comment_is_top":false,"comment_ctime":1718948679,"is_pvip":false,"replies":[{"id":142436,"content":"主要看场景，各有优势","user_name":"作者回复","user_name_real":"编辑","uid":2083554,"ctime":1718964617,"ip_address":"浙江","comment_id":391729,"utype":1}],"discussion_count":2,"race_medal":0,"score":2,"product_id":100770601,"comment_content":"其实，实际项目中，我得出的经验是：能RAG，就不微调。有时候微调花了很多心血，可效果却一般","like_count":4,"discussions":[{"author":{"id":2083554,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83erZP8e2vqiaACFaDxruOzUTPbPv2uRUTp9UuEg98Ib9aYddjZK2kastqf0B14Ec7uXx7CCSXr0fhAA/132","nickname":"Geek_cf2545","note":"","ucode":"B69DF1E734FBA2","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":646897,"discussion_content":"主要看场景，各有优势","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1718964617,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"浙江","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2,\"source\":0}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1195258,"avatar":"https://static001.geekbang.org/account/avatar/00/12/3c/fa/e2990931.jpg","nickname":"文敦复","note":"","ucode":"B8F4A6BD5D7805","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":647151,"discussion_content":"是否需要推理是关键吧","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1719558928,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"四川","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":391529,"user_name":"张申傲","can_delete":false,"product_type":"c1","uid":1182372,"ip_address":"北京","ucode":"22D46BC529BA8A","user_header":"https://static001.geekbang.org/account/avatar/00/12/0a/a4/828a431f.jpg","comment_is_top":false,"comment_ctime":1718431902,"is_pvip":false,"replies":[{"id":142377,"content":"嗯，这个就看具体产品怎么设计交互形式了，一般来说不太建议二者都返回，容易造成误解。可以以知识库为主，如果知识库没有检索到内容再返回大模型的输出","user_name":"作者回复","user_name_real":"编辑","uid":2083554,"ctime":1718544865,"ip_address":"浙江","comment_id":391529,"utype":1}],"discussion_count":1,"race_medal":2,"score":2,"product_id":100770601,"comment_content":"第6讲打卡~\n思考题：现在大部分知识库的产品设计都是：优先展示大模型的输出结果，并且在最下方以参考资料的形式给出知识库中的匹配结果，用户可以点击展开匹配详情，查看具体检索到的资料和所在段落。","like_count":4,"discussions":[{"author":{"id":2083554,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83erZP8e2vqiaACFaDxruOzUTPbPv2uRUTp9UuEg98Ib9aYddjZK2kastqf0B14Ec7uXx7CCSXr0fhAA/132","nickname":"Geek_cf2545","note":"","ucode":"B69DF1E734FBA2","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":646678,"discussion_content":"嗯，这个就看具体产品怎么设计交互形式了，一般来说不太建议二者都返回，容易造成误解。可以以知识库为主，如果知识库没有检索到内容再返回大模型的输出","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1718544865,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"浙江","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2,\"source\":0}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":391495,"user_name":"哈哈","can_delete":false,"product_type":"c1","uid":1208655,"ip_address":"山西","ucode":"8D43010FA3DC2C","user_header":"https://static001.geekbang.org/account/avatar/00/12/71/4f/bce0d5bc.jpg","comment_is_top":false,"comment_ctime":1718336676,"is_pvip":false,"replies":[{"id":142361,"content":"没错，RAG可以理解为知识库外挂，这个知识库可以是任何信息来源，向量数据库，接口，mysql数据库等等都可以。提高大模型推理能力，需要通过各种训练任务，微调是一种。","user_name":"作者回复","user_name_real":"编辑","uid":2083554,"ctime":1718344140,"ip_address":"浙江","comment_id":391495,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100770601,"comment_content":"老师，对于RAG是否可以这样理解，它是增加了大模型的知识储备，可以基于这些知识做出更准确和全面的回答。而要提高大模型的能力，例如逻辑推理能力，还是需要训练和微调来解决。","like_count":2,"discussions":[{"author":{"id":2083554,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83erZP8e2vqiaACFaDxruOzUTPbPv2uRUTp9UuEg98Ib9aYddjZK2kastqf0B14Ec7uXx7CCSXr0fhAA/132","nickname":"Geek_cf2545","note":"","ucode":"B69DF1E734FBA2","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":646621,"discussion_content":"没错，RAG可以理解为知识库外挂，这个知识库可以是任何信息来源，向量数据库，接口，mysql数据库等等都可以。提高大模型推理能力，需要通过各种训练任务，微调是一种。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1718344140,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"浙江","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2,\"source\":0}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":391513,"user_name":"冰冻柠檬","can_delete":false,"product_type":"c1","uid":1585858,"ip_address":"安徽","ucode":"DA940109725AE5","user_header":"https://static001.geekbang.org/account/avatar/00/18/32/c2/ffa6c819.jpg","comment_is_top":false,"comment_ctime":1718363178,"is_pvip":false,"replies":[{"id":142371,"content":"好的","user_name":"作者回复","user_name_real":"编辑","uid":2083554,"ctime":1718418075,"ip_address":"浙江","comment_id":391513,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100770601,"comment_content":"快快更新","like_count":1,"discussions":[{"author":{"id":2083554,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83erZP8e2vqiaACFaDxruOzUTPbPv2uRUTp9UuEg98Ib9aYddjZK2kastqf0B14Ec7uXx7CCSXr0fhAA/132","nickname":"Geek_cf2545","note":"","ucode":"B69DF1E734FBA2","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":646649,"discussion_content":"好的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1718418075,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"浙江","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2,\"source\":0}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":394629,"user_name":"影明","can_delete":false,"product_type":"c1","uid":1068202,"ip_address":"上海","ucode":"B04342834CF114","user_header":"https://static001.geekbang.org/account/avatar/00/10/4c/aa/37705e4e.jpg","comment_is_top":false,"comment_ctime":1727352018,"is_pvip":false,"replies":[{"id":143252,"content":"你好，源码都放课程中了，没有单独整理","user_name":"作者回复","user_name_real":"编辑","uid":2083554,"ctime":1727417558,"ip_address":"浙江","comment_id":394629,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100770601,"comment_content":"课程有配套源码的吗","like_count":0,"discussions":[{"author":{"id":2083554,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83erZP8e2vqiaACFaDxruOzUTPbPv2uRUTp9UuEg98Ib9aYddjZK2kastqf0B14Ec7uXx7CCSXr0fhAA/132","nickname":"Geek_cf2545","note":"","ucode":"B69DF1E734FBA2","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":651774,"discussion_content":"你好，源码都放课程中了，没有单独整理","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1727417559,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"浙江","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2,\"source\":0}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":393421,"user_name":"Lane","can_delete":false,"product_type":"c1","uid":1008257,"ip_address":"北京","ucode":"F70459D1BBD9F4","user_header":"https://static001.geekbang.org/account/avatar/00/0f/62/81/ad80f427.jpg","comment_is_top":false,"comment_ctime":1723775023,"is_pvip":false,"replies":[{"id":142941,"content":"可以用conda管理py环境","user_name":"作者回复","user_name_real":"编辑","uid":2083554,"ctime":1724424901,"ip_address":"浙江","comment_id":393421,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100770601,"comment_content":"python这个包管理真拉胯，pip装的同时只能有一个版本。\n比如A要求request&gt;= 3.2       B要求&lt;3.2      这时候怎么办？","like_count":0,"discussions":[{"author":{"id":2083554,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83erZP8e2vqiaACFaDxruOzUTPbPv2uRUTp9UuEg98Ib9aYddjZK2kastqf0B14Ec7uXx7CCSXr0fhAA/132","nickname":"Geek_cf2545","note":"","ucode":"B69DF1E734FBA2","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":650143,"discussion_content":"可以用conda管理py环境","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1724424901,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"浙江","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2,\"source\":0}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":392227,"user_name":"h","can_delete":false,"product_type":"c1","uid":1782043,"ip_address":"美国","ucode":"E11AD303D1922F","user_header":"https://static001.geekbang.org/account/avatar/00/1b/31/1b/9b75b80d.jpg","comment_is_top":false,"comment_ctime":1720335988,"is_pvip":false,"replies":[{"id":142597,"content":"问题有解决吗？我用的3090，曾经在M1芯片上也部署过，但是推理非常慢","user_name":"作者回复","user_name_real":"编辑","uid":2083554,"ctime":1720605580,"ip_address":"浙江","comment_id":392227,"utype":1}],"discussion_count":2,"race_medal":0,"score":2,"product_id":100770601,"comment_content":"老师好呀，苹果电脑M3芯片，在部署chatGLM3的时候，发现需要的依赖包vLLM没有，请问有什么办法可以解决嘛，望答复，感恩","like_count":0,"discussions":[{"author":{"id":2083554,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83erZP8e2vqiaACFaDxruOzUTPbPv2uRUTp9UuEg98Ib9aYddjZK2kastqf0B14Ec7uXx7CCSXr0fhAA/132","nickname":"Geek_cf2545","note":"","ucode":"B69DF1E734FBA2","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":647790,"discussion_content":"问题有解决吗？我用的3090，曾经在M1芯片上也部署过，但是推理非常慢","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1720605580,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"浙江","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2,\"source\":0}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1024195,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a0/c3/c5db35df.jpg","nickname":"石云升","note":"","ucode":"78F1DD33EFD000","race_medal":1,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":649417,"discussion_content":"你在issues里好像有解决方案，之前有同学发过链接。你可以往回文章里找一下","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1723345381,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"广东","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":392164,"user_name":"Geek_336019","can_delete":false,"product_type":"c1","uid":2988832,"ip_address":"广东","ucode":"8C690BDC1E423D","user_header":"","comment_is_top":false,"comment_ctime":1720139122,"is_pvip":false,"replies":[{"id":142553,"content":"对，自己分词，然后把切好的词进行embedding，然后在向量库进行相似度检索，最后将结果传给大模型。最好自己分词，因为实际应用过程中，你需要不断调整看怎么分词效果比较好。","user_name":"作者回复","user_name_real":"编辑","uid":2083554,"ctime":1720143757,"ip_address":"浙江","comment_id":392164,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100770601,"comment_content":"文本中的左侧的知识库管理，可以进行知识库的上传。想问下，如果自己实现，需要先将文件用中文分词（比如jieba等），然后再传给向量库吗？自己分词有个好处是 可以自定义分词。还是说向量库的模型，已经很好的处理了中文分词呢？","like_count":0,"discussions":[{"author":{"id":2083554,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83erZP8e2vqiaACFaDxruOzUTPbPv2uRUTp9UuEg98Ib9aYddjZK2kastqf0B14Ec7uXx7CCSXr0fhAA/132","nickname":"Geek_cf2545","note":"","ucode":"B69DF1E734FBA2","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":647524,"discussion_content":"对，自己分词，然后把切好的词进行embedding，然后在向量库进行相似度检索，最后将结果传给大模型。最好自己分词，因为实际应用过程中，你需要不断调整看怎么分词效果比较好。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1720143758,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"浙江","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2,\"source\":0}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":392130,"user_name":"Geek_frank","can_delete":false,"product_type":"c1","uid":1685433,"ip_address":"上海","ucode":"534D46C2D1EFF5","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83erG6I79WlHDjs51JOff9GBibD4Fh2PhITQMvmh2aTUVzH2BKia1tFLLoQr7VFeZddywwRoZlVUyhDDQ/132","comment_is_top":false,"comment_ctime":1720022349,"is_pvip":false,"replies":[{"id":142547,"content":"好的，大多数应该是Python环境问题，网上查查慢慢能解决","user_name":"作者回复","user_name_real":"编辑","uid":2083554,"ctime":1720074367,"ip_address":"浙江","comment_id":392130,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100770601,"comment_content":"打卡第6课：在安装langchain-chatchat的时候遇到挺多问题，目前停留在知识库初始化中，继续研究下","like_count":0,"discussions":[{"author":{"id":2083554,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83erZP8e2vqiaACFaDxruOzUTPbPv2uRUTp9UuEg98Ib9aYddjZK2kastqf0B14Ec7uXx7CCSXr0fhAA/132","nickname":"Geek_cf2545","note":"","ucode":"B69DF1E734FBA2","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":647466,"discussion_content":"好的，大多数应该是Python环境问题，网上查查慢慢能解决","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1720074367,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"浙江","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2,\"source\":0}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":391667,"user_name":"yp","can_delete":false,"product_type":"c1","uid":3903167,"ip_address":"四川","ucode":"29213F63167B86","user_header":"https://static001.geekbang.org/account/avatar/00/3b/8e/bf/f3dcc7ed.jpg","comment_is_top":false,"comment_ctime":1718778215,"is_pvip":false,"replies":[{"id":142418,"content":"这个要看你的设计，可以把答案向量化，根据关键字检索，也可以把问题向量化，答案按照文本存储，通过检索问题，找到答案，向量数据库支持同一行记录，向量和文本分开存储","user_name":"作者回复","user_name_real":"编辑","uid":2083554,"ctime":1718796347,"ip_address":"浙江","comment_id":391667,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100770601,"comment_content":"上传的知识库文件，在内容和形式上面有没有具体要求呢？比如是文本段落就行，还是需要整理成一问一答的形式？又或者是需要处理成某种格式？","like_count":0,"discussions":[{"author":{"id":2083554,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83erZP8e2vqiaACFaDxruOzUTPbPv2uRUTp9UuEg98Ib9aYddjZK2kastqf0B14Ec7uXx7CCSXr0fhAA/132","nickname":"Geek_cf2545","note":"","ucode":"B69DF1E734FBA2","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":646825,"discussion_content":"这个要看你的设计，可以把答案向量化，根据关键字检索，也可以把问题向量化，答案按照文本存储，通过检索问题，找到答案，向量数据库支持同一行记录，向量和文本分开存储","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1718796347,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"浙江","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2,\"source\":0}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":391663,"user_name":"newCheng","can_delete":false,"product_type":"c1","uid":2438860,"ip_address":"北京","ucode":"E6E2819AFC6B29","user_header":"https://static001.geekbang.org/account/avatar/00/25/36/cc/f3bc7bbf.jpg","comment_is_top":false,"comment_ctime":1718772805,"is_pvip":false,"replies":[{"id":142422,"content":"你好，暂时没有计划，课程会按照大纲的计划进行，如果有问题欢迎在群里跟同学们一起交流","user_name":"作者回复","user_name_real":"编辑","uid":2083554,"ctime":1718797425,"ip_address":"浙江","comment_id":391663,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100770601,"comment_content":"可不可以讲讲通过ollama来对大模型进行下载、管理和使用的方法呢？","like_count":0,"discussions":[{"author":{"id":2083554,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83erZP8e2vqiaACFaDxruOzUTPbPv2uRUTp9UuEg98Ib9aYddjZK2kastqf0B14Ec7uXx7CCSXr0fhAA/132","nickname":"Geek_cf2545","note":"","ucode":"B69DF1E734FBA2","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":646829,"discussion_content":"你好，暂时没有计划，课程会按照大纲的计划进行，如果有问题欢迎在群里跟同学们一起交流","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1718797425,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"浙江","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2,\"source\":0}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":391654,"user_name":"风轻扬","can_delete":false,"product_type":"c1","uid":1542987,"ip_address":"北京","ucode":"DB972F2DF059C4","user_header":"https://static001.geekbang.org/account/avatar/00/17/8b/4b/15ab499a.jpg","comment_is_top":false,"comment_ctime":1718763858,"is_pvip":false,"replies":[{"id":142420,"content":"可以降到3.10，也可以试试faiss-cpu","user_name":"作者回复","user_name_real":"编辑","uid":2083554,"ctime":1718797012,"ip_address":"浙江","comment_id":391654,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100770601,"comment_content":"老师。安装faiss的时候。pip install faiss-gpu，报了一个错误。\nError: Could not find a version that satisfies the requirement faiss-gpu(from version none)\nError: No matching distribution found for faiss-gpu。\n当前的python是3.11版本\n查了查，说是faiss-gpu不支持python的3.11版本，这是需要降低python的版本吗？","like_count":0,"discussions":[{"author":{"id":2083554,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83erZP8e2vqiaACFaDxruOzUTPbPv2uRUTp9UuEg98Ib9aYddjZK2kastqf0B14Ec7uXx7CCSXr0fhAA/132","nickname":"Geek_cf2545","note":"","ucode":"B69DF1E734FBA2","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":646827,"discussion_content":"可以降到3.10，也可以试试faiss-cpu","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1718797012,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"浙江","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2,\"source\":0}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":391605,"user_name":"Juha","can_delete":false,"product_type":"c1","uid":1347609,"ip_address":"北京","ucode":"5B9301CC960D84","user_header":"https://static001.geekbang.org/account/avatar/00/14/90/19/b3403815.jpg","comment_is_top":false,"comment_ctime":1718627999,"is_pvip":true,"replies":[{"id":142403,"content":"输入到知识库里的数据，不一定只有1条，有可能有多条，匹配到多少就多少，当然我们可以配置取前N条，因为向量检索讲的是相似度。","user_name":"作者回复","user_name_real":"编辑","uid":2083554,"ctime":1718691905,"ip_address":"浙江","comment_id":391605,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100770601,"comment_content":"老师，1-15步那里的第11步，从向量数据库里拿出来的相似数据给到LLM的时候，这里的数据是之前通过输入到知识库里的某条具体数据吗，还是说基于另一个LLM根据向量生成的文本呀","like_count":0,"discussions":[{"author":{"id":2083554,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83erZP8e2vqiaACFaDxruOzUTPbPv2uRUTp9UuEg98Ib9aYddjZK2kastqf0B14Ec7uXx7CCSXr0fhAA/132","nickname":"Geek_cf2545","note":"","ucode":"B69DF1E734FBA2","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":646762,"discussion_content":"输入到知识库里的数据，不一定只有1条，有可能有多条，匹配到多少就多少，当然我们可以配置取前N条，因为向量检索讲的是相似度。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1718691905,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"浙江","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2,\"source\":0}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":391601,"user_name":"Juha","can_delete":false,"product_type":"c1","uid":1347609,"ip_address":"北京","ucode":"5B9301CC960D84","user_header":"https://static001.geekbang.org/account/avatar/00/14/90/19/b3403815.jpg","comment_is_top":false,"comment_ctime":1718620116,"is_pvip":true,"replies":[{"id":142402,"content":"我给你举个例子：比如你要查询公司的考勤制度，你的问题是：研发人员考勤制度是什么？向量库有多种设计方式，第一种，你可以把问题向量化，具体答案不做向量化，只当普通文本存储；第二种，你可以把答案向量化。当你问：研发人员考勤制度是什么？先把问题分词，然后embedding，然后到向量库里找答案，如果你用的第一种设计，那么向量库匹配的就是问题，然后把对应的答案返回；如果你用的第二种设计，那么向量库匹配的就是答案，到这里还不涉及LLM。","user_name":"作者回复","user_name_real":"编辑","uid":2083554,"ctime":1718691816,"ip_address":"浙江","comment_id":391601,"utype":1}],"discussion_count":2,"race_medal":0,"score":3,"product_id":100770601,"comment_content":"1-15的流程那里，11步检索出来的结果，是提问的问题向量化之后的最相似的内容，是啥内容呢，是知识库的某个提问吗，这里涉及到LLM嘛","like_count":0,"discussions":[{"author":{"id":2083554,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83erZP8e2vqiaACFaDxruOzUTPbPv2uRUTp9UuEg98Ib9aYddjZK2kastqf0B14Ec7uXx7CCSXr0fhAA/132","nickname":"Geek_cf2545","note":"","ucode":"B69DF1E734FBA2","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":646761,"discussion_content":"我给你举个例子：比如你要查询公司的考勤制度，你的问题是：研发人员考勤制度是什么？向量库有多种设计方式，第一种，你可以把问题向量化，具体答案不做向量化，只当普通文本存储；第二种，你可以把答案向量化。当你问：研发人员考勤制度是什么？先把问题分词，然后embedding，然后到向量库里找答案，如果你用的第一种设计，那么向量库匹配的就是问题，然后把对应的答案返回；如果你用的第二种设计，那么向量库匹配的就是答案，到这里还不涉及LLM。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1718691816,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"浙江","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2,\"source\":0}","child_discussion_number":1,"child_discussions":[{"author":{"id":1347609,"avatar":"https://static001.geekbang.org/account/avatar/00/14/90/19/b3403815.jpg","nickname":"Juha","note":"","ucode":"5B9301CC960D84","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":2083554,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83erZP8e2vqiaACFaDxruOzUTPbPv2uRUTp9UuEg98Ib9aYddjZK2kastqf0B14Ec7uXx7CCSXr0fhAA/132","nickname":"Geek_cf2545","note":"","ucode":"B69DF1E734FBA2","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":646764,"discussion_content":"嗯嗯，就是说，第11步这里，我们就是把问题向量化之后，去向量数据库里找这个问题的最相似的问题或者答案，就是说这个找到的问题或者答案一定是存在的，不会再编辑对吧。\n比方说我的问题是“A公司的算法部门的考勤制度是怎样的”，此时向量化这个问题去数据库检索，找到最相似的答案是“A公司的考勤制度是xxx”，那么此时返回的就是已经存在的全文本：“A公司的考勤制度是xxx”，而不会对这段文本进行处理对吧。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1718692355,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":646761,"ip_address":"北京","group_id":0},"score":646764,"extra":""}]}]},{"had_liked":false,"id":391556,"user_name":"Matthew","can_delete":false,"product_type":"c1","uid":2843865,"ip_address":"江苏","ucode":"96093089773740","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/PiajxSqBRaEKSVuNarJuDhBSvHY0giaq6yriceEBKiaKuc04wCYWOuso50noqDexaPJJibJN7PHwvcQppnzsDia1icZkw/132","comment_is_top":false,"comment_ctime":1718523432,"is_pvip":false,"replies":[{"id":142379,"content":"我给你讲下思路，你可以自己尝试下，主要就是写个dockerfile，把涉及的代码都拷进去，把依赖的库和工具装好，把镜像打出来，dockerfile内容可以参考以下配置。\n\n\nFROM pytorch&#47;pytorch:2.2.1-cuda12.1-cudnn8-runtime\nARG DEBIAN_FRONTEND=noninteractive\n\n\nWORKDIR &#47;app\n\nRUN pip config set global.index-url http:&#47;&#47;mirrors.aliyun.com&#47;pypi&#47;simple\nRUN pip config set install.trusted-host mirrors.aliyun.com\n\nRUN mkdir -p &#47;u01&#47;workspace&#47;models&#47;\n\n\nCOPY ChatGLM3&#47; &#47;app&#47;ChatGLM3&#47;\nWORKDIR &#47;app&#47;ChatGLM3\n\n\nRUN pip install --verbose --use-pep517  -r requirements.txt\nRUN pip install huggingface_hub==0.21.4\n\nEXPOSE 8000 8051\n\nCMD [ &quot;streamlit&quot;,&quot;run&quot;, &quot;composite_demo&#47;main.py&quot; ]\n\n","user_name":"作者回复","user_name_real":"编辑","uid":2083554,"ctime":1718545504,"ip_address":"浙江","comment_id":391556,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100770601,"comment_content":"能否补充下容器化部署的过程","like_count":0,"discussions":[{"author":{"id":2083554,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83erZP8e2vqiaACFaDxruOzUTPbPv2uRUTp9UuEg98Ib9aYddjZK2kastqf0B14Ec7uXx7CCSXr0fhAA/132","nickname":"Geek_cf2545","note":"","ucode":"B69DF1E734FBA2","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":646680,"discussion_content":"我给你讲下思路，你可以自己尝试下，主要就是写个dockerfile，把涉及的代码都拷进去，把依赖的库和工具装好，把镜像打出来，dockerfile内容可以参考以下配置。\n\n\nFROM pytorch/pytorch:2.2.1-cuda12.1-cudnn8-runtime\nARG DEBIAN_FRONTEND=noninteractive\n\n\nWORKDIR /app\n\nRUN pip config set global.index-url http://mirrors.aliyun.com/pypi/simple\nRUN pip config set install.trusted-host mirrors.aliyun.com\n\nRUN mkdir -p /u01/workspace/models/\n\n\nCOPY ChatGLM3/ /app/ChatGLM3/\nWORKDIR /app/ChatGLM3\n\n\nRUN pip install --verbose --use-pep517  -r requirements.txt\nRUN pip install huggingface_hub==0.21.4\n\nEXPOSE 8000 8051\n\nCMD [ &#34;streamlit&#34;,&#34;run&#34;, &#34;composite_demo/main.py&#34; ]\n\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1718545505,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"浙江","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2,\"source\":0}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":393270,"user_name":"石云升","can_delete":false,"product_type":"c1","uid":1024195,"ip_address":"广东","ucode":"78F1DD33EFD000","user_header":"https://static001.geekbang.org/account/avatar/00/0f/a0/c3/c5db35df.jpg","comment_is_top":false,"comment_ctime":1723345492,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":1,"score":3,"product_id":100770601,"comment_content":"一般我们只会在调试端看到知识库的命中，用户看到的只会是大模型的输出。","like_count":0},{"had_liked":false,"id":391758,"user_name":"阿斯蒂芬","can_delete":false,"product_type":"c1","uid":1024164,"ip_address":"广东","ucode":"61D5E3BDA4EBC5","user_header":"https://static001.geekbang.org/account/avatar/00/0f/a0/a4/b060c723.jpg","comment_is_top":false,"comment_ctime":1719032877,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":3,"product_id":100770601,"comment_content":"向量为什么要存储？因为如果每次都是实时将query与知识计算向量算相似度，资源耗费大，且效率低，所以衍生了存储和高效检索的需求，所以有了专用的向量数据（Faiss和Milvus）。从使用经验来看，这类向量数据库大多以分簇的概念对向量进行聚类检索，大大提升了检索性能，不过也存在检索精度缺失的可能，就是直观上和数值上你认为最相似的，并不在其检索结果中，这是使用时特别需要注意和权衡的。当然，向量数据库也很成熟了，提供了多种参数让你根据实际需求选取合适的存储引擎和检索策略。","like_count":0}]}