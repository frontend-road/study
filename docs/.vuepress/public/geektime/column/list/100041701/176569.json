{"id":176569,"title":"03 | 密码学基础：如何让你的密码变得“不可见”？","content":"<p>你好，我是何为舟。</p><p>上一讲，我们学习了黄金法则的三部分核心内容：认证、授权、审计。它们描述了用户在使用应用的各个环节，我们需要采取的安全策略。</p><p>在掌握了黄金法则之后，你就能以在安全发展规划上的宏观能力，赢得面试官的认可。接下来，他想考验一下你对安全具体知识的理解，以此来判断你能否将安全发展落地。于是，他问了一个非常基础的问题：你懂加解密吗？</p><p>可以说，密码学是“黄金法则”的基础技术支撑。失去了密码学的保护，任何认证、授权、审计机制都是“可笑”的鸡肋。</p><p>在实际的生活工作中经常会有这样的场景发生：多个用户共用一个Wi-Fi来上网、共用一个服务器来跑任务；多个进程共用一个数据库来完成数据存储。在这些场景中，多方交互都通过一个共同的通道来进行，那我们该如何保障其中内容的CIA呢？这就需要用到各种加密技术了。今天，我们就一起来学习密码学相关的知识。</p><p>首先，我先来普及一个语文知识。密钥中的钥，发音为yuè，不是yào。虽然通常情况下，你按正常发音读的话，别人都会听成“蜜月”。但是，我们还是要用正确、专业的发音。</p><p>接下来，我来介绍一些经典的密码学算法：对称加密算法、非对称加密算法和散列算法。这些算法的具体实现不是咱们课程的重点，而且本身的过程也非常复杂。在安全这块内容里，你只需要明确了解这些算法的概念及其优缺点，就足够你去选取合适的加密算法了。</p><!-- [[[read_end]]] --><h2>对称加密算法</h2><p>首先，我们来看对称加密算法。所谓对称加密，代表加密和解密使用的是同一个密钥。概念很简单，但是也很不具体、直观。为了帮助你理解，我把具体的加解密过程，画了一张图，你可以看一下。</p><p><img src=\"https://static001.geekbang.org/resource/image/06/3d/06fa7ae0dc38387e9d87e1d3b12a0d3d.jpeg?wh=1920*1080\" alt=\"\"></p><p>下面我来具体讲讲这个过程，如果我想给你发一段消息，又不想被其他人知道。那么我作为发送方，会使用加密算法和密钥，生成消息对应的密文；而你作为接收方，想要阅读消息，就需要使用解密算法和一个同样的密钥，来获得明文。</p><p>我们常见的经典对称加密算法有DES、IDEA、AES、国密SM1和SM4。下面我们一起来具体看看。</p><p>第一种对称加密算法是<strong>DES</strong>（数据加密标准，Data Encryption Standard）。</p><p>DES应该是最早的现代密码学算法之一。它由美国政府提出，密钥长度为56位。目前，它暴力破解56位密码的时间，已经能控制在24小时内了。</p><p>DES实际上是一个过时的密码学算法，目前已经不推荐使用了。关于DES，还有一点特别有意思。DES包含一个关键模块：S盒，其设计的原理一直没有公开。因此，很多人都相信，这个S盒中存在后门，只要美国政府需要，就能够解密任何DES密文。</p><p>第二种对称加密算法是<strong>IDEA</strong>（国际数据加密算法，International Data Encryption Algorithm）。</p><p>IDEA由瑞士研究人员设计，密钥长度为128位。对比于其他的密码学算法，<strong>IDEA的优势在于没有专利的限制</strong>。相比于DES和AES的使用受到美国政府的控制，IDEA的设计人员并没有对其设置太多的限制，这让IDEA在全世界范围内得到了广泛地使用和研究。</p><p>第三种需要了解的对称加密算法是<strong>AES</strong>（高级加密标准，Advanced  Encryption  Standard）。</p><p>在DES被破解后，美国政府推出了AES算法，提供了128位、192位和256位三种密钥长度。通常情况下，我们会使用128位的密钥，来获得足够的加密强度，同时保证性能不受影响。目前，<strong>AES是国际上最认可的密码学算法</strong>。在算力没有突破性进展的前提下，AES在可预期的未来都是安全的。</p><p>最后一种是国密<strong>SM1</strong>（SM1 Cryptographic Algorithm）和<strong>SM4</strong>（SM4 Cryptographic Algorithm）。</p><p>我们知道，密码学作为安全的基础学科，如果全部依靠国外的技术，对于国家安全可能产生不利影响。因此，中国政府提出了一系列加密算法。其中，国密算法SM1和SM4都属于对称加密的范畴。SM1算法不公开，属于国家机密，只能通过相关安全产品进行使用。而SM4属于国家标准，算法公开，可自行实现使用。国密算法的优点显而易见：<strong>受到国家的支持和认可。</strong></p><p>借助下面的对比情况表，相信你会对这几种对称加密算法有更清晰的认识。<br>\n<img src=\"https://static001.geekbang.org/resource/image/71/64/71f26d29081b9348c35afd8d73fb7f64.jpeg?wh=1920*1080\" alt=\"\"></p><p>现在你应该对几种经典的对称加密算法有了初步地了解。接下来，我们来看一看它们是如何应用的。</p><p>在加密通信中（如HTTPS、VPN、SSH等），通信双方会协商出一个加密算法和密钥，对传输的数据进行加密，从而防止第三方窃取。在类似数据库加密这种存储加密技术中，通信双方也是将存储空间中的数据进行加密，这样即使硬盘被物理窃取，也不会导致信息丢失。在公司内部，为了避免用户的Cookie和隐私信息发生泄漏，也需要对它们进行加密存储。</p><p>对于大部分公司来说，选取AES128进行加解密运算，就能获得较高的安全性和性能。如果是金融或政府行业，在涉及国家层面的对抗上，有一定的合规需求，则需要应用国密算法。</p><p>另外，在选取加密算法的时候，存在不同的分组计算模式：ECB/CBC/CFB/OFB/CTR。这些模式的具体细节不是我们学习的重点，在这里就不展开了。你需要知道的是：选取CBC和CTR这两种推荐使用的模式就可以满足大部分需求了，它们在性能和安全性上都有较好的保证。</p><h2>非对称加密算法</h2><p>有对称就一定会有非对称。非对称加密代表加密和解密使用不同的密钥。具体的加解密过程就是，发送方使用公钥对信息进行加密，接收方收到密文后，使用私钥进行解密。具体我也画了一张图，你可以和上面的对称加密算法的图一起对照着看一下。可以看到，非对称加密和对称加密算法的最大区别就是，加密和解密使用的密钥是不同的。</p><p><img src=\"https://static001.geekbang.org/resource/image/75/44/75748105aa8c861ddc6f06126eb7f444.jpeg?wh=1920*1080\" alt=\"\"></p><p>当使用对称加密算法的时候，你不仅要跟每一个通信方协定一个密钥，还要担心协商过程中密钥泄露的可能性。比如，我当面告诉了你一个密码，怎么保证不被偷听呢？而在非对称加密算法中，公钥是公开信息，不需要保密，我们可以简单地将一个公钥分发给全部的通信方。也就是说，我现在就可以告诉你一个公钥密码，即使这意味着所有阅读这篇文章的人都知道了这个密码，那也没关系。因此，非对称密钥其实主要解决了密钥分发的难题。</p><p>除了加密功能外，大部分的非对称算法还提供签名的功能。这也就是说，我们可以使用私钥加密，公钥解密。一旦接收方通过公钥成功解密，我们就能够证明发送方拥有对应的私钥，也就能证实发送方的身份，也就是说，私钥加密就是我们说的签名。</p><p>你还可以这样理解，比如我现在和你说话，内容经过了我的私钥加密，你用公钥解得了明文。因为私钥只有我拥有，所以只有我能够发出这段话来，别人都不可能。这也就是说，我不可能狡辩称这段话不是我说的。</p><p><img src=\"https://static001.geekbang.org/resource/image/cb/60/cbfca74e4c5c64b74649f341e8189e60.jpeg?wh=1920*1080\" alt=\"\"></p><p>所有的非对称加密算法，都是基于各种数学难题来设计的，这些数学难题的特点是：正向计算很容易，反向推倒则无解。经典的非对称加密算法包括：<strong>RSA、ECC和国密SM2</strong>。接下来，我们一个个来看。</p><p>我们先看第一种非对称加密算法<strong>RSA</strong>（RSA加密算法，RSA Algorithm）。</p><p>RSA的数学难题是：两个大质数p、q相乘的结果n很容易计算，但是根据n去做质因数分解得到p、q，则需要很大的计算量。RSA是比较经典的非对称加密算法，它的主要优势就是<strong>性能比较快</strong>，但想获得较高的加密强度，需要使用很长的密钥。</p><p>我们再来看第二种<strong>ECC</strong>（椭圆加密算法，Elliptic Curve Cryptography）。</p><p>ECC是基于椭圆曲线的一个数学难题设计的。目前学术界普遍认为，椭圆曲线的难度高于大质数难题，160位密钥的ECC加密强度，相当于1088位密钥的RSA。因此，<strong>ECC是目前国际上加密强度最高的非对称加密算法。</strong></p><p>最后一种是国密<strong>SM2</strong>（SM2 Cryptographic Algorithm）。</p><p>国密算法SM2也是基于椭圆曲线问题设计的，属于国家标准，算法公开，加密强度和国际标准的ECC相当。而<strong>国密的优势在于国家的支持和认可</strong>。</p><p>好了，这3种非对称加密算法的优缺点我也总结成了一张表格，你可以看一看。</p><p><img src=\"https://static001.geekbang.org/resource/image/a4/a9/a433f7e6ea562496477f4330e76af5a9.jpeg?wh=1920*1080\" alt=\"\"></p><p>我们前面说了，对比于对称加密算法，非对称加密算法最大的优势就是解决密钥分发的问题。因此，现在大部分的认证和签名场景，其实使用的都是非对称加密算法。比如，在SSH登录、Git上传等场景中，我们都可以将自己的公钥上传到服务端，然后由客户端保存私钥。</p><p>那么，如果你遇到需要使用非对称加密的场景（比如多对一认证），我推荐你使用ECC算法。</p><h2>散列算法</h2><p>散列算法应该是最常见到的密码学算法了。大量的应用都在使用MD5或者SHA算法计算一个唯一的id。比如Git中的提交记录、文件的完整性校验、各种语言中字典或者Map的实现等等。很多场景下，我们使用散列算法并不是为了满足什么加密需求，而是利用它可以对任意长度的输入，计算出一个定长的id。</p><p>作为密码学的算法，散列算法除了提供唯一的id，其更大的利用价值还在于它的不可逆性。当用户注册，提交账号密码时，作为一个安全的应用，是绝对不能够存储明文密码的。因此，我们对用户的密码通过散列算法进行计算，存储最终的散列值。</p><p>在后续登录的过程中，我们如果计算出的用户提交的密码的散列值和你存储的散列值一致，就可以通过验证了。这样一来，任何人（即使是内部员工）都不知道用户真实的密码是什么，而用户也能够完成密码的校验。</p><p>除了刚才说的不可逆性，在密码学上，我们对散列算法的要求还有：鲁棒性（同样的消息生成同样的摘要）、唯一性（不存在两个不同的消息，能生成同样的摘要）。</p><p>经典的散列算法包括MD5、SHA、国密SM3。下面我们逐一来看。</p><p>我们先来看第1种，<strong>MD5</strong>（消息摘要算法，Message-Digest Algorithm 5）。</p><p>MD5可以用来生成一个128位的消息摘要，它是目前应用比较普遍的散列算法，具体的应用场景你可以自行<a href=\"https://blog.csdn.net/qq_40657585/article/details/86622652\">参阅</a>。虽然，因为算法的缺陷，它的唯一性已经被破解了，但是大部分场景下，这并不会构成安全问题。但是，如果不是长度受限（32个字符），我还是不推荐你继续使用MD5的。</p><p>第2种是<strong>SHA</strong>（安全散列算法，Secure Hash Algorithm）。</p><p>SHA是美国开发的政府标准散列算法，分为SHA-1和SHA-2两个版本，SHA-2细分的版本我们就不介绍了。和MD5相同，虽然SHA的唯一性也被破解了，但是这也不会构成大的安全问题。目前，SHA-256普遍被认为是相对安全的散列算法，也是我最推荐你使用的散列算法。</p><p>第3种是国密<strong>SM3</strong>（SM3 Cryptographic Algorithm）。</p><p>国密算法SM3是一种散列算法。其属于国家标准，算法公开，加密强度和国际标准的SHA-256相当。和国密SM2一样，它的优势也在于国家的支持和认可。</p><p>上述算法的相关对比情况，我也总结了一下，如下表所示：</p><p><img src=\"https://static001.geekbang.org/resource/image/99/02/996d36025343b162484fb07d9c5c1002.jpg?wh=1920*877\" alt=\"\"></p><p>另外，我们在使用散列算法的时候，有一点需要注意一下，一定要注意加“盐”。所谓“盐”，就是一串随机的字符，是可以公开的。将用户的密码“盐”进行拼接后，再进行散列计算，这样，即使两个用户设置了相同的密码，也会拥有不同的散列值。同时，黑客往往会提前计算一个彩虹表来提升暴力破解散列值的效率，而我们能够通过加“盐”进行对抗。“盐”值越长，安全性就越高。</p><h2>总结</h2><p>好了，我们来总结一下这一节，你需要掌握的重点内容。</p><p>在这节课中，我对各种加密算法和应用场景进行了全面的介绍。密码学是一门深奥的学科，而作为密码学的使用者，你只需要正确地理解各类算法的特性和功能，就可以满足日常的应用需求了。</p><p>总的来说，在使用的时候，你要记住下面这些内容：对称加密具备较高的安全性和性能，要优先考虑。在一对多的场景中（如多人登录服务器），存在密钥分发难题的时候，我们要使用非对称加密；不需要可逆计算的时候（如存储密码），我们就使用散列算法。</p><p>在具体算法的选取上，你只需要记住：对称加密用AES-CTR、非对称加密用ECC、散列算法用SHA256加盐。这些算法就能够满足大部分的使用场景了，并且在未来很长一段时间内，都可以保持一个较高的安全强度。</p><h2>思考题</h2><p>通过今天的学习，相信你已经了解了密码学的各种概念和知识。对于这些加密算法，哪些你比较了解或者使用过呢？可以谈谈你的想法。</p><p>欢迎留言和我分享你的思考和疑惑，也欢迎你把文章分享给你的朋友。我们下一讲再见！</p>","neighbors":{"left":{"article_title":"02 | 安全原则：我们应该如何上手解决安全问题？","id":176568},"right":{"article_title":"04 | 身份认证：除了账号密码，我们还能怎么做身份认证？","id":178520}},"comments":[{"had_liked":false,"id":168166,"user_name":"普通熊猫 ଘ(੭ˊ꒳​ˋ)੭✧","can_delete":false,"product_type":"c1","uid":1196531,"ip_address":"","ucode":"7FEF9C72B4801B","user_header":"https://static001.geekbang.org/account/avatar/00/12/41/f3/8bca4aba.jpg","comment_is_top":false,"comment_ctime":1578023842,"is_pvip":true,"replies":[{"id":"65333","content":"这个总结可以，我都没想到。","user_name":"作者回复","user_name_real":"captain","uid":"1012580","ctime":1578059330,"ip_address":"","comment_id":168166,"utype":1}],"discussion_count":1,"race_medal":0,"score":"130427042722","product_id":100041701,"comment_content":"AES，你值得拥有，A代表AES-CTR，E代表ECC，S代表SHA256 加盐。<br><br>匿了","like_count":31,"discussions":[{"author":{"id":1012580,"avatar":"","nickname":"captain","note":"","ucode":"471A8412D923EB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":480159,"discussion_content":"这个总结可以，我都没想到。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578059330,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":160348,"user_name":"rocedu","can_delete":false,"product_type":"c1","uid":1013097,"ip_address":"","ucode":"E46E29CBBB94A9","user_header":"https://static001.geekbang.org/account/avatar/00/0f/75/69/791d0f5e.jpg","comment_is_top":false,"comment_ctime":1575939878,"is_pvip":true,"replies":[{"id":"61288","content":"你好，感谢你的留言。如果一定要追究依据的话，可以查阅字典，只有钥匙读yao。这其实是北京人的方言发音，钥其实是只有yue这个读法的。<br>不过嘛，字典也会适应潮流，将错就错，比如‘空穴来风’的意思。所以，科普yue仅仅是我的偏执，不需要认同。","user_name":"作者回复","user_name_real":"captain","uid":"1012580","ctime":1575989394,"ip_address":"","comment_id":160348,"utype":1}],"discussion_count":5,"race_medal":0,"score":"83180318502","product_id":100041701,"comment_content":"密钥的发音问题，依据在哪？","like_count":19,"discussions":[{"author":{"id":1012580,"avatar":"","nickname":"captain","note":"","ucode":"471A8412D923EB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":477348,"discussion_content":"你好，感谢你的留言。如果一定要追究依据的话，可以查阅字典，只有钥匙读yao。这其实是北京人的方言发音，钥其实是只有yue这个读法的。\n不过嘛，字典也会适应潮流，将错就错，比如‘空穴来风’的意思。所以，科普yue仅仅是我的偏执，不需要认同。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1575989394,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1119490,"avatar":"https://static001.geekbang.org/account/avatar/00/11/15/02/66f65388.jpg","nickname":"雷霹雳的爸爸","note":"","ucode":"99BBA6D83DD11F","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":124700,"discussion_content":"感觉这个字有点垃圾，lese的趋势了，说起来英文如果对应key，读yao也能避免听成honeymoon，老师这个偏执确实没啥必要，语言说起来首先目的是沟通，我也知道nginx是engine X，但是大家都enginex，那就这么来吧","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1578447944,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1609446,"avatar":"https://static001.geekbang.org/account/avatar/00/18/8e/e6/165406e0.jpg","nickname":"Geek_92b8a5","note":"","ucode":"49585F083935B6","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":580160,"discussion_content":"太不负责任了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1657938858,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1725691,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/54/fb/d533b03e.jpg","nickname":"Andy","note":"","ucode":"BDA2AEB353ECC4","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":572012,"discussion_content":"自己不知道百度百科吗。就是yue。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1652541333,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1046657,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/f8/81/8b2dd827.jpg","nickname":"galian","note":"","ucode":"44E17A8DFE1FF4","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":542376,"discussion_content":"确实没有必要较真，尤其是工作和生活中，读yue和读yao除了引起争论，没有对「密钥」这词有任何帮助。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1640742232,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":160304,"user_name":"Geek_f7f72f","can_delete":false,"product_type":"c1","uid":1563891,"ip_address":"","ucode":"4CE4E92E25E87D","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q3auHgzwzM6hsCtODfwaIPW9T9qzxNAhhkdn4ImGHeZicA1UyhCOXDf8MtJXw4QnTFQgUia4BPTZdD2zpgV1qTfQ/132","comment_is_top":false,"comment_ctime":1575910260,"is_pvip":false,"replies":[{"id":"61170","content":"现有技术没有出现明显的问题，所以大家还是习惯性使用传统的算法，这些新算法的替代性和普及性不会那么高。<br>另外，不要低估国密，最近和一些数据安全的人聊，他们表示如果只做国内业务的话，最好都用国密。因为说不定哪天等保或者国内的数据安全法，就强制要求国密了。","user_name":"作者回复","user_name_real":"captain","uid":"1012580","ctime":1575934998,"ip_address":"","comment_id":160304,"utype":1}],"discussion_count":2,"race_medal":0,"score":"83180288884","product_id":100041701,"comment_content":"sha3，blake2不介绍下吗，相比所谓的国密，应用范围更广吧","like_count":19,"discussions":[{"author":{"id":1012580,"avatar":"","nickname":"captain","note":"","ucode":"471A8412D923EB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":477329,"discussion_content":"现有技术没有出现明显的问题，所以大家还是习惯性使用传统的算法，这些新算法的替代性和普及性不会那么高。\n另外，不要低估国密，最近和一些数据安全的人聊，他们表示如果只做国内业务的话，最好都用国密。因为说不定哪天等保或者国内的数据安全法，就强制要求国密了。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1575934998,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1233016,"avatar":"https://static001.geekbang.org/account/avatar/00/12/d0/78/a11a999d.jpg","nickname":"COOK","note":"","ucode":"0F1C0E7CA4F36B","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":211563,"discussion_content":"老师说的对，国密推动力度很大","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1584865375,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":163490,"user_name":"Vokey","can_delete":false,"product_type":"c1","uid":1311158,"ip_address":"","ucode":"6F248223FF0885","user_header":"https://static001.geekbang.org/account/avatar/00/14/01/b6/e2184e3c.jpg","comment_is_top":false,"comment_ctime":1576730941,"is_pvip":false,"replies":[{"id":"62514","content":"哈哈，官方实锤～","user_name":"作者回复","user_name_real":"captain","uid":"1012580","ctime":1577028501,"ip_address":"","comment_id":163490,"utype":1}],"discussion_count":2,"race_medal":0,"score":"57411305789","product_id":100041701,"comment_content":"《现代汉语词典（第7版）》：<br><br>【密钥】mìyuè （口语中多读mìyào）","like_count":13,"discussions":[{"author":{"id":1012580,"avatar":"","nickname":"captain","note":"","ucode":"471A8412D923EB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":478414,"discussion_content":"哈哈，官方实锤～","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577028501,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1075956,"avatar":"https://static001.geekbang.org/account/avatar/00/10/6a/f4/26002391.jpg","nickname":"@李上网来⚡","note":"","ucode":"357C7B04401D11","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":375757,"discussion_content":"重庆话，mi yò","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1621842199,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":160210,"user_name":"return","can_delete":false,"product_type":"c1","uid":1135528,"ip_address":"","ucode":"42B8A3380DF04B","user_header":"https://static001.geekbang.org/account/avatar/00/11/53/a8/abc96f70.jpg","comment_is_top":false,"comment_ctime":1575892139,"is_pvip":false,"replies":[{"id":"61180","content":"理论是这样没错，但实际使用时，你肯定不会有那么多数据需要去做散列。所以，追求的是在有限数据量下，碰撞概率几乎为0。","user_name":"作者回复","user_name_real":"captain","uid":"1012580","ctime":1575936427,"ip_address":"","comment_id":160210,"utype":1}],"discussion_count":2,"race_medal":0,"score":"57410466987","product_id":100041701,"comment_content":"老师 请教一下：<br><br>唯一性（不存在两个不同的消息，能生成同样的摘要）。<br><br>我理解 散列算法做不到这一点吧， 消息是任意的 是个无限集，但是散列值 是固定长度，必然是有限的。 无限映射有限 肯定会有不同消息生成相同摘要吧。","like_count":13,"discussions":[{"author":{"id":1012580,"avatar":"","nickname":"captain","note":"","ucode":"471A8412D923EB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":477294,"discussion_content":"理论是这样没错，但实际使用时，你肯定不会有那么多数据需要去做散列。所以，追求的是在有限数据量下，碰撞概率几乎为0。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1575936427,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1135528,"avatar":"https://static001.geekbang.org/account/avatar/00/11/53/a8/abc96f70.jpg","nickname":"return","note":"","ucode":"42B8A3380DF04B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":77717,"discussion_content":"感谢老师回答，明白了🙂","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1575936536,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":169776,"user_name":"splm","can_delete":false,"product_type":"c1","uid":1338601,"ip_address":"","ucode":"2216332252CEA7","user_header":"https://static001.geekbang.org/account/avatar/00/14/6c/e9/072b33b9.jpg","comment_is_top":false,"comment_ctime":1578445383,"is_pvip":false,"replies":[{"id":"65971","content":"盐值是和账号作唯一关联，且不变的。","user_name":"作者回复","user_name_real":"captain","uid":"1012580","ctime":1578492131,"ip_address":"","comment_id":169776,"utype":1}],"discussion_count":3,"race_medal":0,"score":"44528118343","product_id":100041701,"comment_content":"先对账号密码md5，然后加盐；那二次进入的时候，账号密码没变，但盐值变了，又是怎么匹配的呢？","like_count":10,"discussions":[{"author":{"id":1012580,"avatar":"","nickname":"captain","note":"","ucode":"471A8412D923EB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":480716,"discussion_content":"盐值是和账号作唯一关联，且不变的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578492131,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1710046,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/17/de/36000c5a.jpg","nickname":"Louis","note":"","ucode":"9A8A67FE6A1BF6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":367186,"discussion_content":"颜固定啊","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1618285600,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1164003,"avatar":"https://static001.geekbang.org/account/avatar/00/11/c2/e3/df7447ff.jpg","nickname":"008","note":"","ucode":"E1D9D91E18208A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":204778,"discussion_content":"传输时通过对称或非对称加密，到后端解密到明文密码后通过账号拿到对应盐，明文加盐后进行散列计算再跟存储的密码进行校验，是这么个流程吗？\n那解密出明文密码是不是存在风险？还是流程不对？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584202316,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":200800,"user_name":"Geek_David","can_delete":false,"product_type":"c1","uid":1897719,"ip_address":"","ucode":"9B9F30BB2F2C68","user_header":"https://static001.geekbang.org/account/avatar/00/1c/f4/f7/871ff71d.jpg","comment_is_top":false,"comment_ctime":1585653017,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"31650424089","product_id":100041701,"comment_content":"公司钥的易混点<br>加密：公钥加密私钥解密<br>签名：私钥加密公钥解密<br><br>国密算法记忆：<br>SM1：对称加密  算法不公开<br>SM4:  对称加密  算法公开<br>SM2：非对称加密  <br>SM4:  散列算法不可逆<br><br>常用算法：<br>AES128+CTR<br>ECC<br>SHA256+salt","like_count":7,"discussions":[{"author":{"id":1281792,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/8OPzdpDraQMvCNWAicicDt54sDaIYJZicBLfMyibXVs4V0ZibEdkZlbzxxL7aGpRoeyvibag5LaAaaGKSdwYQMY2hUrQ/132","nickname":"code2","note":"","ucode":"BBA5748FB6A01C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":277429,"discussion_content":"三去哪了？","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1591057750,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1897719,"avatar":"https://static001.geekbang.org/account/avatar/00/1c/f4/f7/871ff71d.jpg","nickname":"Geek_David","note":"","ucode":"9B9F30BB2F2C68","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1281792,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/8OPzdpDraQMvCNWAicicDt54sDaIYJZicBLfMyibXVs4V0ZibEdkZlbzxxL7aGpRoeyvibag5LaAaaGKSdwYQMY2hUrQ/132","nickname":"code2","note":"","ucode":"BBA5748FB6A01C","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":277532,"discussion_content":"哈哈哈，最后一个是SM3，提交了才发现错了","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1591066836,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":277429,"ip_address":""},"score":277532,"extra":""}]}]},{"had_liked":false,"id":161707,"user_name":"张望","can_delete":false,"product_type":"c1","uid":1062411,"ip_address":"","ucode":"3DAAC85A8F218B","user_header":"https://static001.geekbang.org/account/avatar/00/10/36/0b/8a7d0670.jpg","comment_is_top":false,"comment_ctime":1576303945,"is_pvip":false,"replies":[{"id":"61591","content":"嗯，最近跟同行聊的时候。他们也表示公司内部开始推进国密算法的应用了，为了避免以后又要改。不过吧，这个改动还是有难度的，毕竟国际算法都用了这么多年了，老旧代码改动成本不容小觑。","user_name":"作者回复","user_name_real":"captain","uid":"1012580","ctime":1576312250,"ip_address":"","comment_id":161707,"utype":1}],"discussion_count":1,"race_medal":0,"score":"27346107721","product_id":100041701,"comment_content":"建议程序员们也多关注国家法律法规要求，我国密码法马上正式实施了，其实对于加密算法选用就有了明确的法律要求，没有影响力的小软件还好说，做大了的软件一定会被监管到的，到时再更换全套加密算法成本也会很高的。","like_count":6,"discussions":[{"author":{"id":1012580,"avatar":"","nickname":"captain","note":"","ucode":"471A8412D923EB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":477823,"discussion_content":"嗯，最近跟同行聊的时候。他们也表示公司内部开始推进国密算法的应用了，为了避免以后又要改。不过吧，这个改动还是有难度的，毕竟国际算法都用了这么多年了，老旧代码改动成本不容小觑。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1576312250,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":160443,"user_name":"Geek_f7f72f","can_delete":false,"product_type":"c1","uid":1563891,"ip_address":"","ucode":"4CE4E92E25E87D","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q3auHgzwzM6hsCtODfwaIPW9T9qzxNAhhkdn4ImGHeZicA1UyhCOXDf8MtJXw4QnTFQgUia4BPTZdD2zpgV1qTfQ/132","comment_is_top":false,"comment_ctime":1575952158,"is_pvip":false,"replies":[{"id":"61269","content":"你好，感谢你的留言。这个问题之前还真没注意到，特地查了一下。看到的原因也就是“due to the availability of faster algorithms”。也就是说，已经有更快更好的AES了，就没有再使用IDEA的意义了。","user_name":"作者回复","user_name_real":"captain","uid":"1012580","ctime":1575983385,"ip_address":"","comment_id":160443,"utype":1}],"discussion_count":1,"race_medal":0,"score":"27345755934","product_id":100041701,"comment_content":"TLS很早就弃用了IDEA，标记为不安全，是因为理论上的缺陷，还是其他原因？","like_count":6,"discussions":[{"author":{"id":1012580,"avatar":"","nickname":"captain","note":"","ucode":"471A8412D923EB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":477376,"discussion_content":"你好，感谢你的留言。这个问题之前还真没注意到，特地查了一下。看到的原因也就是“due to the availability of faster algorithms”。也就是说，已经有更快更好的AES了，就没有再使用IDEA的意义了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1575983385,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":167404,"user_name":"小老鼠","can_delete":false,"product_type":"c1","uid":1257460,"ip_address":"","ucode":"C663A0C863A515","user_header":"https://static001.geekbang.org/account/avatar/00/13/2f/f4/2dede51a.jpg","comment_is_top":false,"comment_ctime":1577784864,"is_pvip":false,"replies":[{"id":"65029","content":"协商密钥是非对称的，密钥协商完之后就是对称加密了。<br>盐值一般和用户名等唯一标识放一块。盐值不用考虑保密性，只要完全随机且唯一对应即可。","user_name":"作者回复","user_name_real":"captain","uid":"1012580","ctime":1577853390,"ip_address":"","comment_id":167404,"utype":1}],"discussion_count":4,"race_medal":0,"score":"18757654048","product_id":100041701,"comment_content":"HTTPS是对称还是非对称？盐值放在哪儿比较安全？","like_count":4,"discussions":[{"author":{"id":1012580,"avatar":"","nickname":"captain","note":"","ucode":"471A8412D923EB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":479852,"discussion_content":"协商密钥是非对称的，密钥协商完之后就是对称加密了。\n盐值一般和用户名等唯一标识放一块。盐值不用考虑保密性，只要完全随机且唯一对应即可。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577853390,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1473320,"avatar":"https://static001.geekbang.org/account/avatar/00/16/7b/28/0c6edc37.jpg","nickname":"刘靖煌","note":"","ucode":"47AF200AA46AF9","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":234631,"discussion_content":"混合加密","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1586972857,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1257460,"avatar":"https://static001.geekbang.org/account/avatar/00/13/2f/f4/2dede51a.jpg","nickname":"小老鼠","note":"","ucode":"C663A0C863A515","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1473320,"avatar":"https://static001.geekbang.org/account/avatar/00/16/7b/28/0c6edc37.jpg","nickname":"刘靖煌","note":"","ucode":"47AF200AA46AF9","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":238373,"discussion_content":"如何理解混合加密？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1587220102,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":234631,"ip_address":""},"score":238373,"extra":""},{"author":{"id":1473320,"avatar":"https://static001.geekbang.org/account/avatar/00/16/7b/28/0c6edc37.jpg","nickname":"刘靖煌","note":"","ucode":"47AF200AA46AF9","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1257460,"avatar":"https://static001.geekbang.org/account/avatar/00/13/2f/f4/2dede51a.jpg","nickname":"小老鼠","note":"","ucode":"C663A0C863A515","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":239292,"discussion_content":"内容加密使用对称加密，做对称加密的密钥使用非对称加密。集合了对称加密和非对称加密的优点。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1587291126,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":238373,"ip_address":""},"score":239292,"extra":""}]}]},{"had_liked":false,"id":222137,"user_name":"stg609","can_delete":false,"product_type":"c1","uid":1073025,"ip_address":"","ucode":"FB70A75A891BB8","user_header":"https://static001.geekbang.org/account/avatar/00/10/5f/81/1c614f4a.jpg","comment_is_top":false,"comment_ctime":1590685880,"is_pvip":false,"replies":[{"id":"82494","content":"可以把这个问题拆开看，数据泄露可能有三个点：前端，后端，传输过程。https可以解决传输过程中的泄露问题。但前后端本身，同样存在泄露风险。比如，你去做一个代理登录，用户提交密码给你，你再拿密码去第三方认证，这个密码就泄露给你了。如果前端加密了，那么你只拿到密文，虽然能完成认证，但其实不知道密码。","user_name":"作者回复","user_name_real":"captain","uid":"1012580","ctime":1591259960,"ip_address":"","comment_id":222137,"utype":1}],"discussion_count":2,"race_medal":0,"score":"14475587768","product_id":100041701,"comment_content":"基于https的前提下，前端加密真的有必要吗？<br>https已经防止了中间人攻击，前端如果真被破解或被植入恶意代码，黑客完全可以拿到加密前的明文。我觉得前端做加密解决不了问题，反而此地无银三百两。","like_count":3,"discussions":[{"author":{"id":1012580,"avatar":"","nickname":"captain","note":"","ucode":"471A8412D923EB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":496682,"discussion_content":"可以把这个问题拆开看，数据泄露可能有三个点：前端，后端，传输过程。https可以解决传输过程中的泄露问题。但前后端本身，同样存在泄露风险。比如，你去做一个代理登录，用户提交密码给你，你再拿密码去第三方认证，这个密码就泄露给你了。如果前端加密了，那么你只拿到密文，虽然能完成认证，但其实不知道密码。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1591259960,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1386818,"avatar":"https://static001.geekbang.org/account/avatar/00/15/29/42/43d4b1a8.jpg","nickname":"烫烫烫","note":"","ucode":"C06018670DE76A","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":334141,"discussion_content":"这个地方，盐值应该需要经常变，这样可以保证：即使黑客拿到了加密后的密码，也无法使用它进行登录认证；另外，还可以防止黑客拿到密码后去撞别人家的库","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1607750070,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":163392,"user_name":"鸵鸟","can_delete":false,"product_type":"c1","uid":1042066,"ip_address":"","ucode":"92E710D05E4894","user_header":"https://static001.geekbang.org/account/avatar/00/0f/e6/92/db9a2fcf.jpg","comment_is_top":false,"comment_ctime":1576716516,"is_pvip":false,"replies":[{"id":"62524","content":"加密强度高。SM2和ECC的原理是一致的，都是椭圆曲线算法。ECC的缺陷在于，生成一组密钥的时间耗时比较长，因此性能上会有一定影响。","user_name":"作者回复","user_name_real":"captain","uid":"1012580","ctime":1577058595,"ip_address":"","comment_id":163392,"utype":1}],"discussion_count":2,"race_medal":0,"score":"14461618404","product_id":100041701,"comment_content":"非对称加密推荐ECC的原因是什么呢？当前在手机PC的系统安全这些业务上，苹果高通都是使用的RSA，而国内一线手机厂商开始在布局国密SM2同时支持RSA，请问ECC的优势在哪里呢？","like_count":3,"discussions":[{"author":{"id":1012580,"avatar":"","nickname":"captain","note":"","ucode":"471A8412D923EB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":478377,"discussion_content":"加密强度高。SM2和ECC的原理是一致的，都是椭圆曲线算法。ECC的缺陷在于，生成一组密钥的时间耗时比较长，因此性能上会有一定影响。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577058595,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":1,"child_discussions":[{"author":{"id":2608728,"avatar":"https://static001.geekbang.org/account/avatar/00/27/ce/58/71ed845f.jpg","nickname":"Dexter","note":"","ucode":"909CABC4AC4AC9","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1012580,"avatar":"","nickname":"captain","note":"","ucode":"471A8412D923EB","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":584807,"discussion_content":"从其他课程了解，ECC计算密钥比RSA快呀","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1661142764,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":478377,"ip_address":"浙江"},"score":584807,"extra":""}]}]},{"had_liked":false,"id":161803,"user_name":"有学识的兔子","can_delete":false,"product_type":"c1","uid":1628867,"ip_address":"","ucode":"D1D654B1562FC9","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIicr82CnrdEjibibAvyeKRQHszSzIAqoCWxN0kqC442XcjEae6S9j6NDtKLpg4Da4CUQQeUFUicWqiaDw/132","comment_is_top":false,"comment_ctime":1576334709,"is_pvip":false,"replies":[{"id":"61776","content":"这就是国家层面的考量了。一方面，是对加密算法的安全性考量，比如DES中可能的后门。另一方面，也是对专利版权的保护，毕竟自己的专利，自己才有可控性。这就和芯片一样，现在用外国的没啥问题，哪天它不让你用了呢？","user_name":"作者回复","user_name_real":"captain","uid":"1012580","ctime":1576541079,"ip_address":"","comment_id":161803,"utype":1}],"discussion_count":3,"race_medal":0,"score":"14461236597","product_id":100041701,"comment_content":"国密算法的价值在哪里呢？ 从描述来看还是参考ecc aes等算法，但性能还不确定。既然已经有公开的高可用算法，为什么不用或者参与该算法的研究中，进一步提升这类知名加密算法呢","like_count":3,"discussions":[{"author":{"id":1012580,"avatar":"","nickname":"captain","note":"","ucode":"471A8412D923EB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":477868,"discussion_content":"这就是国家层面的考量了。一方面，是对加密算法的安全性考量，比如DES中可能的后门。另一方面，也是对专利版权的保护，毕竟自己的专利，自己才有可控性。这就和芯片一样，现在用外国的没啥问题，哪天它不让你用了呢？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1576541079,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1036165,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/cf/85/0239c4f5.jpg","nickname":"小斧子","note":"","ucode":"F51F3854D99449","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":285353,"discussion_content":"一语成谶...2020年春夏之交就发生了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1592814221,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1462608,"avatar":"https://static001.geekbang.org/account/avatar/00/16/51/50/f5f2a121.jpg","nickname":"律飛","note":"","ucode":"65394E437AD2DF","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":102291,"discussion_content":"就跟芯片，操作系统等要国产化一个道理","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577336324,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":161055,"user_name":"麋鹿在泛舟","can_delete":false,"product_type":"c1","uid":1121975,"ip_address":"","ucode":"1379CADA08688E","user_header":"https://static001.geekbang.org/account/avatar/00/11/1e/b7/b20ab184.jpg","comment_is_top":false,"comment_ctime":1576110745,"is_pvip":true,"replies":[{"id":"61419","content":"你好，感谢你的留言。在https中使用了DH密钥交换算法实现的。可以想象成一边出一半的密钥，然后就能够拼成一个完整密钥。因篇幅限制，课程中没有具体讲。","user_name":"作者回复","user_name_real":"captain","uid":"1012580","ctime":1576126260,"ip_address":"","comment_id":161055,"utype":1}],"discussion_count":1,"race_medal":0,"score":"14461012633","product_id":100041701,"comment_content":"请问如何保证对称秘钥在非可信环境中的安全传输，是不是只能只能使用非对称算法先加密才可以，有其他方案么","like_count":3,"discussions":[{"author":{"id":1012580,"avatar":"","nickname":"captain","note":"","ucode":"471A8412D923EB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":477587,"discussion_content":"你好，感谢你的留言。在https中使用了DH密钥交换算法实现的。可以想象成一边出一半的密钥，然后就能够拼成一个完整密钥。因篇幅限制，课程中没有具体讲。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1576126260,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":208549,"user_name":"jun","can_delete":false,"product_type":"c1","uid":1899314,"ip_address":"","ucode":"3A9633CA1FE72E","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/LalJD9ruYQI5zVM1GOCe4PjunIbbeeMiacFHC4TAj0DBVeialKt3vRCLs9dxn1vYXvfp8pgcyaeEQkh1nde1JoBQ/132","comment_is_top":false,"comment_ctime":1587379709,"is_pvip":false,"replies":[{"id":"78055","content":"是的，非对称加密是单向的。通过私钥加密公钥解密，只能用来做签名，证明发送者拥有私钥。具体原理比较细节，可以自行百度一下。","user_name":"作者回复","user_name_real":"captain","uid":"1012580","ctime":1587447238,"ip_address":"","comment_id":208549,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10177314301","product_id":100041701,"comment_content":"何老师您好！我小白一个，有些问题不了解。 比如：非对称加密，公钥是公开的，那么黑客如果获取到公钥也就可以解密通过私钥加密的内容，这样一样会消息泄露吧。 另外：公钥加密私钥解密，以及私钥加密公钥解密其中原理，不知后面内容是否有讲","like_count":2,"discussions":[{"author":{"id":1012580,"avatar":"","nickname":"captain","note":"","ucode":"471A8412D923EB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":492504,"discussion_content":"是的，非对称加密是单向的。通过私钥加密公钥解密，只能用来做签名，证明发送者拥有私钥。具体原理比较细节，可以自行百度一下。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1587447238,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":162138,"user_name":"Geek_f7f72f","can_delete":false,"product_type":"c1","uid":1563891,"ip_address":"","ucode":"4CE4E92E25E87D","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q3auHgzwzM6hsCtODfwaIPW9T9qzxNAhhkdn4ImGHeZicA1UyhCOXDf8MtJXw4QnTFQgUia4BPTZdD2zpgV1qTfQ/132","comment_is_top":false,"comment_ctime":1576465930,"is_pvip":false,"replies":[{"id":"61798","content":"我理解的Bcrypt其实就是散列+盐的封装实现，作为一种最佳实践的封装，安全性上应该不会出现太大问题。","user_name":"作者回复","user_name_real":"captain","uid":"1012580","ctime":1576546523,"ip_address":"","comment_id":162138,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10166400522","product_id":100041701,"comment_content":"评论里有提到Bcrypt, 它目前的安全性如何，有没有更好的替代?","like_count":2,"discussions":[{"author":{"id":1012580,"avatar":"","nickname":"captain","note":"","ucode":"471A8412D923EB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":477964,"discussion_content":"我理解的Bcrypt其实就是散列+盐的封装实现，作为一种最佳实践的封装，安全性上应该不会出现太大问题。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1576546523,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":160170,"user_name":"mz","can_delete":false,"product_type":"c1","uid":1003581,"ip_address":"","ucode":"1D714C23F78446","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/MlmSR4YXUfrNlZdMv7bv1ic64HaxxVKcVtaxjzhXCvNC4XByICCmYUTprhOESzIV8p59N6DnSJ7HywfvGr5nicgA/132","comment_is_top":false,"comment_ctime":1575885043,"is_pvip":false,"replies":[{"id":"61186","content":"数据库信息落配置文件其实没有太多问题，因为就算你存在其他加密的配置中心里面，你连配置中心的加密密钥或者认证信息还是会落到配置文件中。所以，更主要的还是保护代码和配置文件的机密性。","user_name":"作者回复","user_name_real":"captain","uid":"1012580","ctime":1575937221,"ip_address":"","comment_id":160170,"utype":1}],"discussion_count":2,"race_medal":0,"score":"10165819635","product_id":100041701,"comment_content":"请问老师，类似 PHP 这种通常数据库的信息都是写在配置文件中，这个有没有啥安全的方式呢？","like_count":2,"discussions":[{"author":{"id":1012580,"avatar":"","nickname":"captain","note":"","ucode":"471A8412D923EB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":477279,"discussion_content":"数据库信息落配置文件其实没有太多问题，因为就算你存在其他加密的配置中心里面，你连配置中心的加密密钥或者认证信息还是会落到配置文件中。所以，更主要的还是保护代码和配置文件的机密性。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1575937221,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1284592,"avatar":"https://static001.geekbang.org/account/avatar/00/13/99/f0/d9343049.jpg","nickname":"星亦辰","note":"","ucode":"B0388FBFFDEE7E","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":77290,"discussion_content":"不要泄露源码，或者配置信息加密，再或者编译成二进制模块 ","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1575899304,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":212693,"user_name":"吴小智","can_delete":false,"product_type":"c1","uid":1310798,"ip_address":"","ucode":"C7C9F58B5C9F7B","user_header":"https://static001.geekbang.org/account/avatar/00/14/00/4e/be2b206b.jpg","comment_is_top":false,"comment_ctime":1588177202,"is_pvip":false,"replies":[{"id":"79369","content":"KMS可以见简单理解为一个云端的加解密服务，用户端和服务端的加解密操作都送到KMS执行，密钥不外放。但是KMS的安全性还是得依赖前置的认证，它只是保障可信用户不会产生错误使用加解密或者泄露密钥等行为。","user_name":"作者回复","user_name_real":"captain","uid":"1012580","ctime":1588739174,"ip_address":"","comment_id":212693,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5883144498","product_id":100041701,"comment_content":"老师能介绍一下 KMS 吗？看介绍说，可以用 KMS 来存储密钥，但是一直不太理解是如何做到安全的。","like_count":1,"discussions":[{"author":{"id":1012580,"avatar":"","nickname":"captain","note":"","ucode":"471A8412D923EB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":493583,"discussion_content":"KMS可以见简单理解为一个云端的加解密服务，用户端和服务端的加解密操作都送到KMS执行，密钥不外放。但是KMS的安全性还是得依赖前置的认证，它只是保障可信用户不会产生错误使用加解密或者泄露密钥等行为。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1588739174,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":205359,"user_name":"小幺鸡","can_delete":false,"product_type":"c1","uid":1050123,"ip_address":"","ucode":"340424274A6A47","user_header":"https://static001.geekbang.org/account/avatar/00/10/06/0b/7acef7e3.jpg","comment_is_top":false,"comment_ctime":1586598070,"is_pvip":false,"replies":[{"id":"76946","content":"主要和对称加密相比，对称加密的密钥随机生成即可，性能自然很快。而非对称加密的密钥，需要先计算某个数学问题。比如rsa的密钥，首先要找出两个大质数，运算时间自然会上升不少。","user_name":"作者回复","user_name_real":"captain","uid":"1012580","ctime":1586776880,"ip_address":"","comment_id":205359,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5881565366","product_id":100041701,"comment_content":"没太理解非对称加密RSA秘钥生成速度慢？","like_count":1,"discussions":[{"author":{"id":1012580,"avatar":"","nickname":"captain","note":"","ucode":"471A8412D923EB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":491460,"discussion_content":"主要和对称加密相比，对称加密的密钥随机生成即可，性能自然很快。而非对称加密的密钥，需要先计算某个数学问题。比如rsa的密钥，首先要找出两个大质数，运算时间自然会上升不少。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1586776880,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":183210,"user_name":"Geek_f4f0d4","can_delete":false,"product_type":"c1","uid":1149509,"ip_address":"","ucode":"DBC7614E0A7070","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTL1BLgfPicBbSuXUK5uaEdQ76j2icNaPvicJcRrsxpLOjyuiczpD8efxoKrLEiaHs4At4loauOTLWOHQmg/132","comment_is_top":false,"comment_ctime":1582973278,"is_pvip":false,"replies":[{"id":"70922","content":"https可以保证传输过程中不被窃听。但最好还是对密码作散列，因为你同样需要保证服务端的密码不被泄露。最简单的，明文传输的话，你如何保证开发人员不会监守自盗？","user_name":"作者回复","user_name_real":"captain","uid":"1012580","ctime":1583015800,"ip_address":"","comment_id":183210,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5877940574","product_id":100041701,"comment_content":"老师，你好，如果使用https协议，用户在密码输入时，是否还需要在前端（通过JS）进行散列加密？","like_count":1,"discussions":[{"author":{"id":1012580,"avatar":"","nickname":"captain","note":"","ucode":"471A8412D923EB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":485599,"discussion_content":"https可以保证传输过程中不被窃听。但最好还是对密码作散列，因为你同样需要保证服务端的密码不被泄露。最简单的，明文传输的话，你如何保证开发人员不会监守自盗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1583015800,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":177844,"user_name":"Montagne","can_delete":false,"product_type":"c1","uid":1222148,"ip_address":"","ucode":"5419B0A5BD5ECB","user_header":"https://static001.geekbang.org/account/avatar/00/12/a6/04/f985881a.jpg","comment_is_top":false,"comment_ctime":1581513945,"is_pvip":true,"replies":[{"id":"69252","content":"只要知道协议，编码和解码，序列化和反序列化都是很容易的。就像最底层都是10的二进制信号，但是任意一个浏览器都能解析成网页。","user_name":"作者回复","user_name_real":"captain","uid":"1012580","ctime":1581739448,"ip_address":"","comment_id":177844,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5876481241","product_id":100041701,"comment_content":"网络传输不是需要序列化吗？传输的是二进制，同时根据编码不同，二进制也不一样，网络劫持后怎么能知道传输的明文呢？","like_count":1,"discussions":[{"author":{"id":1012580,"avatar":"","nickname":"captain","note":"","ucode":"471A8412D923EB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":483567,"discussion_content":"只要知道协议，编码和解码，序列化和反序列化都是很容易的。就像最底层都是10的二进制信号，但是任意一个浏览器都能解析成网页。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1581739448,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":168149,"user_name":"devil","can_delete":false,"product_type":"c1","uid":1259625,"ip_address":"","ucode":"BB6090411BAA23","user_header":"https://static001.geekbang.org/account/avatar/00/13/38/69/864569a4.jpg","comment_is_top":false,"comment_ctime":1578020069,"is_pvip":false,"replies":[{"id":"65334","content":"你好，感谢你的留言。黑客确实可以利用盐建立新的彩虹表，但是这意味着黑客需要为每一个用户建立一张彩虹表，而建表的过程，其实就和暴力破解的效果一样了。","user_name":"作者回复","user_name_real":"captain","uid":"1012580","ctime":1578059489,"ip_address":"","comment_id":168149,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5872987365","product_id":100041701,"comment_content":"为什么”盐“可以公开？得到了公开的”盐“，原本的彩虹表加盐转换一下不就得到了新的彩虹表，加过盐的密码散列值不是一样可以通过查表得到？","like_count":1,"discussions":[{"author":{"id":2080791,"avatar":"","nickname":"101","note":"","ucode":"42CCE79F162483","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":377484,"discussion_content":"我觉得黑客首先还得了解盐值和散列的组合方式，否则只拿到盐值，加盐后的散列，以及弱密码字典彩虹表也无法生成新的正确的彩虹表","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1622684076,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":160953,"user_name":"攻城狮Ra","can_delete":false,"product_type":"c1","uid":1681051,"ip_address":"","ucode":"4D6F97A6481166","user_header":"https://static001.geekbang.org/account/avatar/00/19/a6/9b/20b9fce3.jpg","comment_is_top":false,"comment_ctime":1576069244,"is_pvip":false,"replies":[{"id":"61390","content":"我知道的主要两种方式吧。一种是序列码存在一定的规则，软件在本地只是验证序列码是否符合这个规则。常见的带序列码生成器的，应该都是这种模式。另一种破解就是直接篡改软件的验证流程，跳过验证这个步骤，破解补丁就是用来干这个事情的。","user_name":"作者回复","user_name_real":"captain","uid":"1012580","ctime":1576108567,"ip_address":"","comment_id":160953,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5871036540","product_id":100041701,"comment_content":"我们常见的破解软件用的密钥，是不是SHA256加盐，盗版系统又是怎么一回事呢","like_count":1,"discussions":[{"author":{"id":1012580,"avatar":"","nickname":"captain","note":"","ucode":"471A8412D923EB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":477539,"discussion_content":"我知道的主要两种方式吧。一种是序列码存在一定的规则，软件在本地只是验证序列码是否符合这个规则。常见的带序列码生成器的，应该都是这种模式。另一种破解就是直接篡改软件的验证流程，跳过验证这个步骤，破解补丁就是用来干这个事情的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1576108567,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":160557,"user_name":"王蒙","can_delete":false,"product_type":"c1","uid":1642579,"ip_address":"","ucode":"AF623B848877AD","user_header":"https://static001.geekbang.org/account/avatar/00/19/10/53/2230bf9d.jpg","comment_is_top":false,"comment_ctime":1575974130,"is_pvip":false,"replies":[{"id":"61277","content":"https。本地你自己抓自己的包肯定能抓到。但劫持是网络层次的事情，通过https，黑客是没办法在网络中抓用户的包的。","user_name":"作者回复","user_name_real":"captain","uid":"1012580","ctime":1575988089,"ip_address":"","comment_id":160557,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5870941426","product_id":100041701,"comment_content":"请问如何防止session劫持？项目通过session保存用户信息，sessionid存在客户端浏览器cookie里，通过抓包很容易抓到sessionid，拿到sessiondid，就可以随意操作受害用户，有没有比较好的解决方案","like_count":1,"discussions":[{"author":{"id":1012580,"avatar":"","nickname":"captain","note":"","ucode":"471A8412D923EB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":477415,"discussion_content":"https。本地你自己抓自己的包肯定能抓到。但劫持是网络层次的事情，通过https，黑客是没办法在网络中抓用户的包的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1575988089,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":160376,"user_name":"eason2017","can_delete":false,"product_type":"c1","uid":1009422,"ip_address":"","ucode":"E070BA624FA490","user_header":"https://static001.geekbang.org/account/avatar/00/0f/67/0e/c77ad9b1.jpg","comment_is_top":false,"comment_ctime":1575942872,"is_pvip":false,"replies":[{"id":"61285","content":"只是加密后密文的比对？那似乎没有加密的必要，散列算法就可以了。","user_name":"作者回复","user_name_real":"captain","uid":"1012580","ctime":1575988897,"ip_address":"","comment_id":160376,"utype":1}],"discussion_count":2,"race_medal":0,"score":"5870910168","product_id":100041701,"comment_content":"老师好，请问两段用相同密钥做计算，然后，后端做计算后的值比较是否相同。这种算作是对称还是非对称加密呀","like_count":1,"discussions":[{"author":{"id":1012580,"avatar":"","nickname":"captain","note":"","ucode":"471A8412D923EB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":477357,"discussion_content":"只是加密后密文的比对？那似乎没有加密的必要，散列算法就可以了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1575988897,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1009422,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/67/0e/c77ad9b1.jpg","nickname":"eason2017","note":"","ucode":"E070BA624FA490","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":81383,"discussion_content":"谢谢老师，那我们做的接口鉴权属于散列计算，不是对称或者非对称加密了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1576244874,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":356286,"user_name":"黄福超","can_delete":false,"product_type":"c1","uid":2277769,"ip_address":"广东","ucode":"BAADC19A45FE05","user_header":"","comment_is_top":false,"comment_ctime":1662108076,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1662108076","product_id":100041701,"comment_content":"用过MD5和SHA256<br>MD5有一定的碰撞的几率<br>SHA256实在太长了，如果大量的使用会占用比较大的空间<br>都是根据场景来进行使用的，如果要求高就用SHA256，要求不高就直接MD5加密 <br>对称加密就用AES，没有深入研究，也没有出现泄露的问题","like_count":0},{"had_liked":false,"id":349333,"user_name":"AFlymamba","can_delete":false,"product_type":"c1","uid":1359224,"ip_address":"","ucode":"FAEAF3BD3E5146","user_header":"https://static001.geekbang.org/account/avatar/00/14/bd/78/be976ab3.jpg","comment_is_top":false,"comment_ctime":1655890580,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1655890580","product_id":100041701,"comment_content":"自身接触在实际工作用的较多的场景是对接第三方，需要解决两个问题，一个是互相认证问题，另外一个就是业务数据加密问题。<br><br>互相认证问题：解决你是谁，是否可信，用 RSA 做签名。<br>数据加密问题：对称加密，用 AES 比较多，CBC 模式 + 填充。<br><br>为了解决对称加密密钥的传输问题，其实会有两对 RSA 密钥，一对专门用来做签名和验签，另外一对用来做对称加密密钥传输问题。","like_count":0},{"had_liked":false,"id":342533,"user_name":"Y","can_delete":false,"product_type":"c1","uid":1179432,"ip_address":"","ucode":"952AA9B2CD91CE","user_header":"https://static001.geekbang.org/account/avatar/00/11/ff/28/040f6f01.jpg","comment_is_top":false,"comment_ctime":1650328775,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1650328775","product_id":100041701,"comment_content":"对称加密：des,aes,idea，sm1,sm4 推荐使用aes-ctr<br>非对称加密:rsa,ecc,sm2 推荐使用ecc<br>散列算法：md5,sha,sm3 推荐使用sha256加盐","like_count":0},{"had_liked":false,"id":298113,"user_name":"Roway","can_delete":false,"product_type":"c1","uid":1060967,"ip_address":"","ucode":"65AF589142AB6C","user_header":"https://static001.geekbang.org/account/avatar/00/10/30/67/a1e9aaba.jpg","comment_is_top":false,"comment_ctime":1623916170,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1623916170","product_id":100041701,"comment_content":"在我们的接口对接业务，使用对称加密，每个接口生成一个秘钥；ssh登录服务器，git版本管理使用的是非对称加密；用户注册登录的密码采用了散列算法，还有我们对接其他大厂（比如：支付宝）根据大厂的要求采用很多加密方式。","like_count":0},{"had_liked":false,"id":298106,"user_name":"Roway","can_delete":false,"product_type":"c1","uid":1060967,"ip_address":"","ucode":"65AF589142AB6C","user_header":"https://static001.geekbang.org/account/avatar/00/10/30/67/a1e9aaba.jpg","comment_is_top":false,"comment_ctime":1623914736,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1623914736","product_id":100041701,"comment_content":"加解密性能是什么意思？","like_count":0},{"had_liked":false,"id":278228,"user_name":"escray","can_delete":false,"product_type":"c1","uid":1020525,"ip_address":"","ucode":"1F4204930E47C4","user_header":"https://static001.geekbang.org/account/avatar/00/0f/92/6d/becd841a.jpg","comment_is_top":false,"comment_ctime":1612835893,"is_pvip":true,"discussion_count":0,"race_medal":1,"score":"1612835893","product_id":100041701,"comment_content":"学习过密码学相关的知识，了解区块链技术的时候，也看过非对称加密，不过这篇专栏文章还是比较系统的。即使不是去面试安全岗位，一般的技术岗位对于这些密码基础只是也是应该有所了解的。<br><br>重视安全和性能用对称加密 AES-CTR（SM4），国产硬件对称加密 SM1，密钥分发困难用非对称加密 ECC（SM2），散列加密用 SHA256 加盐（SM3加盐）。<br><br>留言里面有同学说 AES，你值得拥有，这样更好记一些。<br><br>我对国密和等保比较重视，因为面试的时候问到的可能性比较大（国企）。<br><br>如果有更快的计算机，那么密钥的长度也需要不断加长么？至少对于对称加密来说。","like_count":0},{"had_liked":false,"id":277718,"user_name":"_xcc","can_delete":false,"product_type":"c1","uid":1298398,"ip_address":"","ucode":"8EB4B735D36E81","user_header":"https://static001.geekbang.org/account/avatar/00/13/cf/de/85555a93.jpg","comment_is_top":false,"comment_ctime":1612526625,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1612526625","product_id":100041701,"comment_content":"学习了 图解密码技术 这本书后，看这篇文章很轻松，有学习到新的知识","like_count":0},{"had_liked":false,"id":275621,"user_name":"Geek_60821e","can_delete":false,"product_type":"c1","uid":1316693,"ip_address":"","ucode":"A55F71113AEEA4","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJTqaqppkyn9avZHqCnONVJ2Cwp9fmr7yQqUB8icRMFgCbYEHPAyogHqfYjgKPQBteKxnEKQHJzDmQ/132","comment_is_top":false,"comment_ctime":1611623712,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1611623712","product_id":100041701,"comment_content":"结合《透视http》的26元章终于把这块内容理解了。密钥分发用非对称加密，公钥加密私钥解密。数字签名验证身份和防止抵赖，私钥加密公钥解密。","like_count":0},{"had_liked":false,"id":232698,"user_name":"MJ","can_delete":false,"product_type":"c1","uid":1237145,"ip_address":"","ucode":"FCEC0C21444D2A","user_header":"https://static001.geekbang.org/account/avatar/00/12/e0/99/5d603697.jpg","comment_is_top":false,"comment_ctime":1594091620,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1594091620","product_id":100041701,"comment_content":"平时都在用，但无感知，惭愧。","like_count":0},{"had_liked":false,"id":222664,"user_name":"降龙","can_delete":false,"product_type":"c1","uid":1174046,"ip_address":"","ucode":"4BF34A53339563","user_header":"https://static001.geekbang.org/account/avatar/00/11/ea/1e/eaa88071.jpg","comment_is_top":false,"comment_ctime":1590886838,"is_pvip":false,"replies":[{"id":"82495","content":"基本无解，理论上都是可以破解出来的，这类固定字符，只要调试过程中加上断点，总是能找出来的。但如果只是防静态逆向，常规的加固手段都可以大大增加破解难度。","user_name":"作者回复","user_name_real":"captain","uid":"1012580","ctime":1591260071,"ip_address":"","comment_id":222664,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1590886838","product_id":100041701,"comment_content":"appsecret 保存在前端不安全，怎么解决","like_count":0,"discussions":[{"author":{"id":1012580,"avatar":"","nickname":"captain","note":"","ucode":"471A8412D923EB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":496875,"discussion_content":"基本无解，理论上都是可以破解出来的，这类固定字符，只要调试过程中加上断点，总是能找出来的。但如果只是防静态逆向，常规的加固手段都可以大大增加破解难度。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1591260071,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1033219,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/c4/03/f753fda7.jpg","nickname":"JianXu","note":"","ucode":"2A61BDBB573BDC","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":313314,"discussion_content":"那就保存在后端吧","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1603030522,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":219057,"user_name":"LIKE","can_delete":false,"product_type":"c1","uid":1254252,"ip_address":"","ucode":"9DAB7F9051648A","user_header":"https://static001.geekbang.org/account/avatar/00/13/23/6c/82ba5e1f.jpg","comment_is_top":false,"comment_ctime":1589938058,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1589938058","product_id":100041701,"comment_content":"工作中使用到的加密这3种差不多都用过，使用AES加密要素信息，使用RSA加密AES密钥，使用RSA验签。前期md也作为验签的一种方式。","like_count":0},{"had_liked":false,"id":218998,"user_name":"吕志勇","can_delete":false,"product_type":"c1","uid":1166289,"ip_address":"","ucode":"E5E8DB1A2CDE34","user_header":"https://static001.geekbang.org/account/avatar/00/11/cb/d1/6aceeb79.jpg","comment_is_top":false,"comment_ctime":1589929909,"is_pvip":false,"replies":[{"id":"81098","content":"是的。","user_name":"作者回复","user_name_real":"captain","uid":"1012580","ctime":1590060302,"ip_address":"","comment_id":218998,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1589929909","product_id":100041701,"comment_content":"谢谢老师，真是受益非线，还发现留言区也好多高人","like_count":0,"discussions":[{"author":{"id":1012580,"avatar":"","nickname":"captain","note":"","ucode":"471A8412D923EB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":495645,"discussion_content":"是的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1590060302,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":188556,"user_name":"suke","can_delete":false,"product_type":"c1","uid":1007753,"ip_address":"","ucode":"C0287C31A4F45B","user_header":"","comment_is_top":false,"comment_ctime":1584368343,"is_pvip":false,"replies":[{"id":"72751","content":"接口鉴权主要强调的是使用散列算法进行签名。如果需要的传输内容进行加密，才会使用对称和非对称加密。","user_name":"作者回复","user_name_real":"captain","uid":"1012580","ctime":1584402776,"ip_address":"","comment_id":188556,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1584368343","product_id":100041701,"comment_content":"老师，现在一般开放平台使用的接口签名鉴权，应该是属于对称加密吧，例如s3的对象存储的接口鉴权","like_count":0,"discussions":[{"author":{"id":1012580,"avatar":"","nickname":"captain","note":"","ucode":"471A8412D923EB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":487446,"discussion_content":"接口鉴权主要强调的是使用散列算法进行签名。如果需要的传输内容进行加密，才会使用对称和非对称加密。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584402776,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":188349,"user_name":"官","can_delete":false,"product_type":"c1","uid":1696727,"ip_address":"","ucode":"E3FF6D04B9846B","user_header":"https://static001.geekbang.org/account/avatar/00/19/e3/d7/d7b3505f.jpg","comment_is_top":false,"comment_ctime":1584343858,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1584343858","product_id":100041701,"comment_content":"在校验文件完整性时，曾经使用过MD5校验。另外网络间密文发送曾经用过AES。","like_count":0},{"had_liked":false,"id":187844,"user_name":"008","can_delete":false,"product_type":"c1","uid":1164003,"ip_address":"","ucode":"E1D9D91E18208A","user_header":"https://static001.geekbang.org/account/avatar/00/11/c2/e3/df7447ff.jpg","comment_is_top":false,"comment_ctime":1584258593,"is_pvip":false,"replies":[{"id":"72669","content":"理论上密码是不应该在后端被解密的。因此，安全的做法是根据账号先下发盐给前端，然后由前端进行加盐散列。但完全不知道密码，对企业的账号维护会带来很多麻烦，因此，大部分企业会选择前端做非对称加密，后端解密的操作。","user_name":"作者回复","user_name_real":"captain","uid":"1012580","ctime":1584328972,"ip_address":"","comment_id":187844,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1584258593","product_id":100041701,"comment_content":"传输时通过对称或非对称加密，到后端解密到明文密码后通过账号拿到对应盐，明文加盐后进行散列计算再跟存储的密码进行校验，是这么个流程吗？<br>那解密出明文密码是不是存在风险？还是流程不对？<br><br>我们现在都是单纯在前端进行MD5加密后请求登录，因为采用了WCF通信所以就依赖通信通道安全来保障不被抓包泄漏密码。","like_count":0,"discussions":[{"author":{"id":1012580,"avatar":"","nickname":"captain","note":"","ucode":"471A8412D923EB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":487264,"discussion_content":"理论上密码是不应该在后端被解密的。因此，安全的做法是根据账号先下发盐给前端，然后由前端进行加盐散列。但完全不知道密码，对企业的账号维护会带来很多麻烦，因此，大部分企业会选择前端做非对称加密，后端解密的操作。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584328972,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":178617,"user_name":"Nicholas","can_delete":false,"product_type":"c1","uid":1205374,"ip_address":"","ucode":"2FC42B9C579452","user_header":"https://static001.geekbang.org/account/avatar/00/12/64/7e/ea984339.jpg","comment_is_top":false,"comment_ctime":1581759858,"is_pvip":false,"replies":[{"id":"69760","content":"当然不会特意公开，只是不需要额外保护而已，通常盐值会和散列后的密码保存在一块。加盐之后，就不存在弱密码了。如果用彩虹表破解，需要为每个盐值计算一个彩虹表，和暴力破解几乎没差别。","user_name":"作者回复","user_name_real":"captain","uid":"1012580","ctime":1582074167,"ip_address":"","comment_id":178617,"utype":1}],"discussion_count":0,"race_medal":0,"score":"1581759858","product_id":100041701,"comment_content":"使用散列算法时，加的盐能不公开最好还是不公开吧，现在的高性能计算机，弄一个top100、1000之类的弱密码彩虹表出来，还是简简单单的吧。","like_count":0},{"had_liked":false,"id":173728,"user_name":"业余爱好者","can_delete":false,"product_type":"c1","uid":1482915,"ip_address":"","ucode":"A890935A982988","user_header":"https://static001.geekbang.org/account/avatar/00/16/a0/a3/8da99bb0.jpg","comment_is_top":false,"comment_ctime":1579671048,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1579671048","product_id":100041701,"comment_content":"安全没有密码学的加持，都是浮云。对称加密，非对称密码，哈希散列。","like_count":0},{"had_liked":false,"id":169810,"user_name":"雷霹雳的爸爸","can_delete":false,"product_type":"c1","uid":1119490,"ip_address":"","ucode":"99BBA6D83DD11F","user_header":"https://static001.geekbang.org/account/avatar/00/11/15/02/66f65388.jpg","comment_is_top":false,"comment_ctime":1578450071,"is_pvip":true,"replies":[{"id":"65970","content":"密钥保密传递是需要自己通过可信通道传递的。除此之外，很多时候也会用dh算法，作可信的对称密钥协商，https就是这么干的。","user_name":"作者回复","user_name_real":"captain","uid":"1012580","ctime":1578492080,"ip_address":"","comment_id":169810,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1578450071","product_id":100041701,"comment_content":"有一些疑问看留言区里面的讨论大多已经得解，还剩一个想问的是，一看到AES，就不得不想到对称加密的密钥保密传递的问题，这个属于哪类主题？后面是否有课程来讲？","like_count":0,"discussions":[{"author":{"id":1012580,"avatar":"","nickname":"captain","note":"","ucode":"471A8412D923EB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":480726,"discussion_content":"密钥保密传递是需要自己通过可信通道传递的。除此之外，很多时候也会用dh算法，作可信的对称密钥协商，https就是这么干的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578492080,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":165874,"user_name":"律飛","can_delete":false,"product_type":"c1","uid":1462608,"ip_address":"","ucode":"65394E437AD2DF","user_header":"https://static001.geekbang.org/account/avatar/00/16/51/50/f5f2a121.jpg","comment_is_top":false,"comment_ctime":1577337309,"is_pvip":false,"replies":[{"id":"63249","content":"后续课程会逐步覆盖的～","user_name":"作者回复","user_name_real":"captain","uid":"1012580","ctime":1577345686,"ip_address":"","comment_id":165874,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1577337309","product_id":100041701,"comment_content":"在上节课里，老师提到过HTTPS的安全性可以有效地防止黑客从网络上劫持。这话不错，但是作为使用者而言，还是要注意使用环境的安全，如果黑客在本地浏览器抓包，可以轻松获取。另外一方面也说明安全除了靠技术外，安全意识、安全体系建设也是不可或缺的。<br>老师这节课讲得很好，但是如果能站在管理层和开发人员角度，再讲讲各种算法开发难度、可用工具、性价比等，岂不快哉！","like_count":0,"discussions":[{"author":{"id":1012580,"avatar":"","nickname":"captain","note":"","ucode":"471A8412D923EB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":479300,"discussion_content":"后续课程会逐步覆盖的～","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577345686,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":162151,"user_name":"蚂蚁内推+v","can_delete":false,"product_type":"c1","uid":1050508,"ip_address":"","ucode":"24B10AEE54B3FD","user_header":"https://static001.geekbang.org/account/avatar/00/10/07/8c/0d886dcc.jpg","comment_is_top":false,"comment_ctime":1576467347,"is_pvip":false,"replies":[{"id":"61769","content":"非对称加密，公玥不需要保密，存储到前端即可。","user_name":"作者回复","user_name_real":"captain","uid":"1012580","ctime":1576539648,"ip_address":"","comment_id":162151,"utype":1}],"discussion_count":3,"race_medal":0,"score":"1576467347","product_id":100041701,"comment_content":"老师好，我们前端需要加密传输数据到后端，怎么防止密钥泄露呢。攻击者通过反编译能拿到前端加密用的密钥，","like_count":0,"discussions":[{"author":{"id":1012580,"avatar":"","nickname":"captain","note":"","ucode":"471A8412D923EB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":477969,"discussion_content":"非对称加密，公玥不需要保密，存储到前端即可。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1576539648,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1338601,"avatar":"https://static001.geekbang.org/account/avatar/00/14/6c/e9/072b33b9.jpg","nickname":"splm","note":"","ucode":"2216332252CEA7","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":124620,"discussion_content":"这样的话，如果前端要解析后端返回的消息呢？那前端也不得有后端的密钥吗","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578445709,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1310391,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTITKv1C7HrokESrlFCVBp3wDTmr1iapBxLm3GMraGe7ww0CN6rInTLKu3bjTUoOsMibSujCb3yUSd6w/132","nickname":"makawoyi","note":"","ucode":"702B172D90F210","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":88786,"discussion_content":"我的理解是密钥不传输，公钥攻击者拿到也没用","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1576731631,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":161961,"user_name":"活明白","can_delete":false,"product_type":"c1","uid":1111727,"ip_address":"","ucode":"BCB56540BA760E","user_header":"https://static001.geekbang.org/account/avatar/00/10/f6/af/4e6a7596.jpg","comment_is_top":false,"comment_ctime":1576415657,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1576415657","product_id":100041701,"comment_content":"2010年1月1日《密码法》正式实施，商用密码应用有相应的规定，特别是关键信息基础设施商用密码的使用。未使用或者未按照要求开着商用密码应用安全性评估的，可能被处罚，情节严重的处十万元以上一百万以下罚款，对直接负责的主管人员处一万元以上十万元以下罚款（可参考第三十七条）。","like_count":0,"discussions":[{"author":{"id":1111727,"avatar":"https://static001.geekbang.org/account/avatar/00/10/f6/af/4e6a7596.jpg","nickname":"活明白","note":"","ucode":"BCB56540BA760E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":83937,"discussion_content":"2020年1月1日《密码法》正式实施😂 还活在十年前😅","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1576474690,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":161790,"user_name":"旺旺","can_delete":false,"product_type":"c1","uid":1159196,"ip_address":"","ucode":"FE2CF90F446BFB","user_header":"https://static001.geekbang.org/account/avatar/00/11/b0/1c/2e30eeb8.jpg","comment_is_top":false,"comment_ctime":1576328603,"is_pvip":false,"replies":[{"id":"61779","content":"第一句说反了。对称效率高，非对称效率低。","user_name":"作者回复","user_name_real":"captain","uid":"1012580","ctime":1576541263,"ip_address":"","comment_id":161790,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1576328603","product_id":100041701,"comment_content":"非对称效率高，对称加密效率太低，所以一般都是非对称加密传递对承加密密钥，用对称加密传输数据，然后有效期后更换对称加密的秘钥。","like_count":0,"discussions":[{"author":{"id":1012580,"avatar":"","nickname":"captain","note":"","ucode":"471A8412D923EB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":477860,"discussion_content":"第一句说反了。对称效率高，非对称效率低。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1576541263,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":161169,"user_name":"p4ny","can_delete":false,"product_type":"c1","uid":1030798,"ip_address":"","ucode":"60842AC3ED31AD","user_header":"https://static001.geekbang.org/account/avatar/00/0f/ba/8e/49d941e5.jpg","comment_is_top":false,"comment_ctime":1576136301,"is_pvip":false,"replies":[{"id":"61472","content":"哈哈，小细节，不重要～","user_name":"作者回复","user_name_real":"captain","uid":"1012580","ctime":1576155212,"ip_address":"","comment_id":161169,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1576136301","product_id":100041701,"comment_content":"蜜月，秘药，公约，公药…………感觉都挺顺嘴的怎么办……<br><br>","like_count":0,"discussions":[{"author":{"id":1012580,"avatar":"","nickname":"captain","note":"","ucode":"471A8412D923EB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":477624,"discussion_content":"哈哈，小细节，不重要～","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1576155212,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":161059,"user_name":"Cy23","can_delete":false,"product_type":"c1","uid":1591293,"ip_address":"","ucode":"8DC561C5151758","user_header":"https://static001.geekbang.org/account/avatar/00/18/47/fd/895f0c27.jpg","comment_is_top":false,"comment_ctime":1576111364,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1576111364","product_id":100041701,"comment_content":"嗯，最后记住这几个就可以了，对称加密用 AES-CTR、非对称加密用 ECC、散列算法用 SHA256 加盐","like_count":0},{"had_liked":false,"id":160663,"user_name":"book尾汁","can_delete":false,"product_type":"c1","uid":1446375,"ip_address":"","ucode":"AE2B8DFC643ACC","user_header":"https://static001.geekbang.org/account/avatar/00/16/11/e7/044a9a6c.jpg","comment_is_top":false,"comment_ctime":1575998058,"is_pvip":true,"replies":[{"id":"61343","content":"你好，感谢你的留言。是的，肯定要关联起来，只是不需要保密而已。","user_name":"作者回复","user_name_real":"captain","uid":"1012580","ctime":1576050926,"ip_address":"","comment_id":160663,"utype":1}],"discussion_count":3,"race_medal":0,"score":"1575998058","product_id":100041701,"comment_content":"问下保存盐后密码的散列值的时候，用户的盐也要跟用户的标识关联起来保存吧","like_count":0,"discussions":[{"author":{"id":1012580,"avatar":"","nickname":"captain","note":"","ucode":"471A8412D923EB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":477452,"discussion_content":"你好，感谢你的留言。是的，肯定要关联起来，只是不需要保密而已。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1576050926,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1014489,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/7a/d9/4feb4006.jpg","nickname":"lmingzhi","note":"","ucode":"72DBAF4FD184AF","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":79769,"discussion_content":"是否可以直接使用用户名作为盐加到密码中，然后散列化","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1576111087,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1012580,"avatar":"","nickname":"captain","note":"","ucode":"471A8412D923EB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":1014489,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/7a/d9/4feb4006.jpg","nickname":"lmingzhi","note":"","ucode":"72DBAF4FD184AF","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":82031,"discussion_content":"我觉得是可以的。用户名反正不会重复。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1576311972,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":79769,"ip_address":""},"score":82031,"extra":""}]}]},{"had_liked":false,"id":160573,"user_name":"张诚","can_delete":false,"product_type":"c1","uid":1115702,"ip_address":"","ucode":"F623703194769B","user_header":"https://static001.geekbang.org/account/avatar/00/11/06/36/d288bcc7.jpg","comment_is_top":false,"comment_ctime":1575977411,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1575977411","product_id":100041701,"comment_content":"我们用的是RSA的非对称加密对于请求参数中的敏感参数进行的加密，用MD5+盐，对整个请求参数的json串进行散列计算签名。以前也用到过DES和AES对称加密。","like_count":0},{"had_liked":false,"id":160433,"user_name":"我行我素","can_delete":false,"product_type":"c1","uid":1224678,"ip_address":"","ucode":"4C69542FAB0671","user_header":"https://static001.geekbang.org/account/avatar/00/12/af/e6/9c77acff.jpg","comment_is_top":false,"comment_ctime":1575950157,"is_pvip":false,"replies":[{"id":"61282","content":"嗯，使用md5在目前来看，并没有太多问题。因为散列值碰撞导致问题的场景比较少见。","user_name":"作者回复","user_name_real":"captain","uid":"1012580","ctime":1575988661,"ip_address":"","comment_id":160433,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1575950157","product_id":100041701,"comment_content":"使用过md5和RSA以及SHA，但是觉得最简单的就是MD5，有直接的工具类可以使用，其他两个有时候如果因为缺少某个字符（提供方提供错了）还有可能出现异常","like_count":0,"discussions":[{"author":{"id":1012580,"avatar":"","nickname":"captain","note":"","ucode":"471A8412D923EB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":477373,"discussion_content":"嗯，使用md5在目前来看，并没有太多问题。因为散列值碰撞导致问题的场景比较少见。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1575988661,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":160281,"user_name":"宝仔","can_delete":false,"product_type":"c1","uid":1013493,"ip_address":"","ucode":"A0F17DFF99DB21","user_header":"https://static001.geekbang.org/account/avatar/00/0f/76/f5/e3f5bd8d.jpg","comment_is_top":false,"comment_ctime":1575904238,"is_pvip":true,"replies":[{"id":"61172","content":"可以理解成更高效的字典攻击","user_name":"作者回复","user_name_real":"captain","uid":"1012580","ctime":1575935144,"ip_address":"","comment_id":160281,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1575904238","product_id":100041701,"comment_content":"彩虹表攻击是不是就是字典攻击","like_count":0,"discussions":[{"author":{"id":1012580,"avatar":"","nickname":"captain","note":"","ucode":"471A8412D923EB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":477323,"discussion_content":"可以理解成更高效的字典攻击","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1575935144,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":160265,"user_name":"泰坦尼克号","can_delete":false,"product_type":"c1","uid":1027455,"ip_address":"","ucode":"FB4A8652700119","user_header":"https://static001.geekbang.org/account/avatar/00/0f/ad/7f/abb7bfe3.jpg","comment_is_top":false,"comment_ctime":1575901162,"is_pvip":false,"replies":[{"id":"61173","content":"嗯，加盐只是性价比相对较高的方案，还有很多方法可以提高安全性。毕竟，安全没有银弹。","user_name":"作者回复","user_name_real":"captain","uid":"1012580","ctime":1575935291,"ip_address":"","comment_id":160265,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1575901162","product_id":100041701,"comment_content":"一般在密码存储场景中，为了进一步降低彩虹表攻击风险，bcrypt和pbkdf2比普通的散列算法还多提供了迭代次数选项，来降低散列速度，再加上随机盐值，增加彩虹表攻击的时间成本","like_count":0,"discussions":[{"author":{"id":1012580,"avatar":"","nickname":"captain","note":"","ucode":"471A8412D923EB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":477319,"discussion_content":"嗯，加盐只是性价比相对较高的方案，还有很多方法可以提高安全性。毕竟，安全没有银弹。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1575935291,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":160190,"user_name":"泡泡龙","can_delete":false,"product_type":"c1","uid":1208655,"ip_address":"","ucode":"8D43010FA3DC2C","user_header":"https://static001.geekbang.org/account/avatar/00/12/71/4f/bce0d5bc.jpg","comment_is_top":false,"comment_ctime":1575888657,"is_pvip":true,"replies":[{"id":"61183","content":"Java内的成熟工具比较多，为自己代言当然更方便。XD","user_name":"作者回复","user_name_real":"captain","uid":"1012580","ctime":1575936728,"ip_address":"","comment_id":160190,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1575888657","product_id":100041701,"comment_content":"现在好多推荐BCrypt，自己带盐","like_count":0,"discussions":[{"author":{"id":1012580,"avatar":"","nickname":"captain","note":"","ucode":"471A8412D923EB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":477286,"discussion_content":"Java内的成熟工具比较多，为自己代言当然更方便。XD","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1575936728,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]}]}