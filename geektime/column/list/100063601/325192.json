{"id":325192,"title":"20 | 智能语音：好玩的语音控制是怎么实现的？","content":"<p>你好，我是郭朝斌。</p><p>实战篇的前几讲，我们打造了联网智能电灯，并实现了跟光照传感器的场景联动。今天我们来玩一个更酷的，智能音箱。</p><p>智能音箱为我们提供了一种更加自然的交互方式，所以亚马逊的Echo产品一经问世，就迅速流行起来。与智能家居结合之后，它更是引起了行业巨头的注意，被认为是很有发展潜力的用户入口和平台级产品。</p><p>我们先不论智能音箱最终到底能不能发展成智能家居的平台级产品，至少这波热潮已经极大地推动了相关技术的发展，而且用户覆盖率也有了很大的提升。</p><p>这一讲我就为你介绍一下智能音箱的语音控制是怎么实现的，并且带你动手完成开发过程（如有需要，你可以根据<a href=\"https://shimo.im/sheets/D3VVPdwcYRhhQRXh/MODOC\">这份文档</a>自行采购相关硬件）。</p><h2>智能音箱的技术架构</h2><p>智能音箱主要涉及<strong>拾音</strong>、<strong>前端信号处理</strong>、<strong>语音识别</strong>、<strong>自然语言处理</strong>和<strong>语音合成</strong>等技术，现在一些产品甚至提供了声纹识别技术。</p><p>当然，智能音箱最重要的是提供各种功能，完成一些任务，比如控制电灯的开和关，这被称为<strong>技能</strong>。</p><p>整体的技术架构如下图所示：</p><p><img src=\"https://static001.geekbang.org/resource/image/2a/f5/2a01c24619120c4c464d975bb0e8e4f5.jpg?wh=2700*1408\" alt=\"\"></p><p>接下来，我会逐个讲解这些技术组成。</p><h3>拾音</h3><p>拾音，就是通过<strong>麦克风</strong>获取你的语音。</p><p>我们都用微信发送过语音消息，手机就是通过麦克风来获取你说的话的，这么说起来，拾音好像很简单。但是，智能音箱应对的环境要更复杂，因为用户可能在比较远的地方下达语音指令。</p><!-- [[[read_end]]] --><p>因此，智能音箱上一般采用<strong>麦克风阵列</strong>（Mic Array），也就是按照一定规则排列的多个麦克风，比如下图展示的就是<a href=\"https://zh.ifixit.com/Teardown/Amazon+Echo+Teardown/33953\">Amazon Echo</a>由7个麦克风组成的阵列（绿色圆圈部分）。</p><p><img src=\"https://static001.geekbang.org/resource/image/83/f0/831c5e67ddb3cbdeda86c496317b8df0.jpg?wh=2700*1308\" alt=\"\"></p><h3>前端语音信号处理</h3><p>在收集到声音信号后，还需要进行前端语音信号处理。只有经过处理，智能音箱才能获取到相对干净的语音信号，也才能提高后面的语音识别的准确率。</p><p>这些处理技术包括回声消除（Acoustic Echo Cancellaction, AEC）、噪音抑制（Noise Suppression，NS）、语音检测（Voice Activity Detection，VAD）、声源定位（Direction of Arrival estimation，DOA）、波束成型（Beamforming）和混响消除（Speech Dereverberation）等。</p><p><img src=\"https://static001.geekbang.org/resource/image/aa/71/aaffc6862eab6a9af9cb27ec6dacd971.jpg?wh=2700*1237\" alt=\"\"></p><h3>语音唤醒</h3><p>语音唤醒（Keyword Spotting，KWS），就是通过特定的<strong>唤醒词</strong>来激活智能音箱，以便进行后续的语音交互任务。这样做一方面可以保护用户的隐私，因为只有唤醒后，音箱才收集和识别用户的语音信息，另一方面也可以简化语音的识别和理解，比如小米智能音箱的“小爱同学”就是这样的唤醒词。</p><h3>语音识别</h3><p>语音识别（Automatic Speech Recognition，ASR），主要完成的任务是将语音转换成文本，所以也被称为STT（Speech to Text）。</p><h3>自然语言理解</h3><p>自然语言理解（Natural Language Understanding，NLU），是对语音识别生成的文本进行处理，识别用户的意图，并生产结构化的数据。</p><p>当然，以现在的人工智能发展水平来看，自然语言理解还有很长的路要走。这也是我们常发现智能音箱不够“智能”的原因。</p><h3>技能</h3><p>技能（Skills）一般要借助后端云平台的强大能力，云平台可以提供知识图谱、家居设备远程控制和音乐等音频资源等能力。</p><h3>自然语言生成</h3><p>自然语言生成（Natural Language Generation，NLG），就是将各种技能的响应结果组织成文本语言。比如当你询问天气时，根据获取的天气状况和温度等信息生成“北京今天晴，最高温度5°，最低温度-6°”这样的语句。自然语言生成和自然语言理解都属于<strong>自然语言处理</strong>（Natural Language Processing，NLP）的范畴。</p><h3>语音合成</h3><p>语音合成（Speech Synthesis），就是将自然语言生成的文本转换为语音的形式，提供给智能音箱播放出来，给人的感觉就像和音箱在对话。因此，这个过程也叫做TTS（Text to Speech）。</p><h2>智能音箱的开发</h2><p>了解完智能音箱的基本技术构成，下面我们就基于树莓派开发一个自己的简易智能音箱吧。</p><p>首先，我需要说明一下树莓派的系统。为什么呢？因为在<a href=\"https://time.geekbang.org/column/article/320675\">第15讲</a>中，我们安装了Gladys Assistant系统镜像，而这个系统Raspbian是基于Debian buster版本的，一些语音识别开源库对于buster的支持并不够好。</p><p>所以，如果你的树莓派是Raspberry Pi 3系列，强烈建议你把系统镜像切换成<strong>Debian stretch</strong>版本。通过<a href=\"https://downloads.raspberrypi.org/raspbian/images/raspbian-2019-04-09/\">这个链接</a>就可以下载基于Debian stretch版本的Raspbian镜像文件压缩包，安装还是使用Etcher工具，你可以回头看一下第15讲的介绍。</p><p>至于树莓派Raspberry Pi 4系列，因为官方系统Raspbian只有buster版本支持，所以我们还是继续基于第15讲的系统开发。</p><h3>麦克风阵列</h3><p>麦克风阵列我使用的是<strong>ReSpeaker 2-Mics Pi HAT</strong>，它的2个麦克风分布在模组的两边。我们现在来配置一下，让它可以在树莓派上正常工作。</p><p>你可以通过下面的命令安装它的驱动程序。首先，你最好切换一下树莓派的软件安装源，将它切换到国内的腾讯云安装源，这样下载安装的速度比较快。运行下面的命令修改配置文件：</p><pre><code>$ sudo vim /etc/apt/sources.list\n</code></pre><p>将文件修改为下面的内容：</p><pre><code>deb https://mirrors.cloud.tencent.com/raspbian/raspbian/ buster main contrib non-free rpi\n# Uncomment line below then 'apt-get update' to enable 'apt-get source'\ndeb-src https://mirrors.cloud.tencent.com/raspbian/raspbian/ buster main contrib non-free rpi\n</code></pre><p>修改另一个软件安装源的配置文件，命令如下所示：</p><pre><code>$ sudo vim /etc/apt/sources.list.d/raspi.list \n</code></pre><p>修改后的文件内容如下：</p><pre><code>deb https://mirrors.cloud.tencent.com/raspberrypi/ buster main\n# Uncomment line below then 'apt-get update' to enable 'apt-get source'\ndeb-src https://mirrors.cloud.tencent.com/raspberrypi/ buster main\n</code></pre><p>然后，你需要运行下面的命令更新安装源：</p><pre><code>$ sudo apt-get clean all\n$ sudo apt-get update\n</code></pre><p>现在，你可以运行下面命令安装麦克风阵列的驱动程序。因为这个驱动依赖的wm8960 编解码器没有包含在树莓派系统的内核里面，需要重新加载内核，编译驱动，所以整个过程比较久。在等待的过程中，你可以先阅读这一讲的其他部分。</p><pre><code>$ sudo apt-get install git\n$ git clone --depth=1 https://github.com/respeaker/seeed-voicecard\n$ cd seeed-voicecard\n$ sudo ./install.sh\n$ sudo reboot\n</code></pre><p>树莓派重启之后，你可以在树莓派终端输入下面的命令，查看音频的输入和输出设备是否正常工作。</p><pre><code>$ arecord -l\n$ aplay -l\n</code></pre><p><img src=\"https://static001.geekbang.org/resource/image/ef/54/ef1645e03ef2ba2e2c78edf6a9804e54.png?wh=1022*692\" alt=\"\"></p><p>如果一切正常，我们就可以测试录音和播放功能了。在ReSpeaker 2-Mics Pi HAT的耳机插口上插入耳机或者扬声器，运行下面的命令，并说几句话。</p><pre><code>$ arecord -d 5 test.wav\n$ aplay test.wav \n</code></pre><p>另外，你也可以通过软件<strong>AlsaMixer</strong>（命令alsamixer）来配置声音设置和调整音量，左、右箭头键用于选择通道或设备，向上、向下箭头控制当前所选设备的音量。退出程序使用ALT + Q，或者按Esc键。</p><p>为了简化开发，也考虑到麦克风硬件的限制，我们这里就先不关注前端语音信号处理的相关开发了。接下来，我们直接来到实现语音唤醒的环节。</p><h3>语音唤醒</h3><p>为了实现语音唤醒，我们需要选择一个轻量级的、可以在树莓派上运行的唤醒词监测器软件。</p><p>你可能首先想到的是<strong>Snowboy</strong>，没错，它确实是一个非常流行的工具。不过，Snowboy团队在2020年初的时候宣布，2020年12月31日会停止提供服务，所以我们只能寻找替代方案。</p><p>我选择的是<a href=\"https://github.com/MycroftAI/mycroft-precise\">Mycroft Precise</a>，它是一个基于RNN神经网络的语音唤醒工具。</p><p>接下来，我们在树莓派安装Mycroft Precise。因为需要训练唤醒词模型，我们需要基于源代码来编译、安装。</p><p>首先，我们通过git命令把Mycroft Precise的源代码下载到树莓派的/home/pi目录：</p><pre><code>$ cd ~\n$ git clone https://github.com/mycroftai/mycroft-precise\n$ cd mycroft-precise\n</code></pre><p>在安装之前，把pypi的安装源修改到清华数据源，可以获得更快的下载速度。我们打开目录中的setup.sh文件：</p><pre><code>$ vim setup.sh\n</code></pre><p>将文件中的这行内容：</p><pre><code>extra-index-url=https://www.piwheels.org/simple\n</code></pre><p>替换成下面的内容：</p><pre><code>index-url=https://pypi.tuna.tsinghua.edu.cn/simple\nextra-index-url=https://www.piwheels.org/simple\n</code></pre><p>然后，我们运行它自带的安装脚本，开始编译和安装。中间如果执行中断，可以重新执行这个命令，继续安装过程。（提示：有些ARM平台的库只有piwheels上有，所以这些库安装时速度还是很慢。这种情况下，可以电脑上使用下载工具获取这个模块的安装文件，然后上传到树莓派上，手动安装。）</p><pre><code>$ ./setup.sh\n</code></pre><p>安装完成后，我们开始使用Mycroft Precise来训练一个唤醒词模型，唤醒词可以根据喜好来选择，比如“极客时间”。</p><p>我们需要先激活Python的虚拟环境，因为Mycroft Precise在安装过程中创建了这个虚拟环境。</p><pre><code>$ source .venv/bin/activate\n</code></pre><p>接下来，我们通过工具precise-collect来收集语音模型训练的声音素材，运行后，根据提示录制12段声音。</p><pre><code>$ precise-collect\nAudio name (Ex. recording-##): geektime.##\n\nPress space to record (esc to exit)...\nRecording...\nSaved as geektime-00.wav\nPress space to record (esc to exit)...\n</code></pre><p>然后，我们需要将这些声音随机分为两份，一份是训练样本，包括8个声音文件，另一份是测试样本，包括4个声音文件，并且把这两份样本分别放到geektime/wake-word/和/geektime/test/wake-word/这两个目录下面。</p><p>接着，我们执行下面的命令，生成神经网络模型geektime.net：</p><pre><code>$ precise-train -e 60 geektime.net geektime/\n</code></pre><p>最后，我们还需要将geektime.net的模型格式做一下转换，将它从Keras模型格式改为TensorFlow模型格式，因为TensorFlow模型更加通用。</p><pre><code>$ precise-convert geektime.net\n</code></pre><p>执行完成之后，我们会得到两个文件：</p><ol>\n<li>geektime.pb，TensorFlow模型文件</li>\n<li>geektime.pb.params，包含Mycroft Precise在处理音频时需要的一些参数信息。</li>\n</ol><p>当然，为了提高模型的准确性，我们还可以使用precise-train-incremental工具来增加负样本，重新训练刚才的模型。如果环境复杂的话，你可以尝试一下。</p><p>然后，我们可以运行一段代码来测试这个唤醒词模型。不过，因为portaudio这个库在树莓派上运行有问题，我们需要先修复一下portaudio库。你可以运行下面的命令：</p><pre><code>$ sudo apt-get remove libportaudio2\n$ sudo apt-get install libasound2-dev\n$ git clone -b alsapatch https://github.com/gglockner/portaudio\n$ cd portaudio\n$ ./configure &amp;&amp; make\n$ sudo make install\n$ sudo ldconfig\n</code></pre><p>测试程序的代码如下：</p><pre><code># File：kwsdemo.py\n#!/usr/bin/env python3\n\nfrom precise_runner import PreciseEngine, PreciseRunner\n\nengine = PreciseEngine('precise-engine/precise-engine', 'geektime.pb')\nrunner = PreciseRunner(engine, on_activation=lambda: print('hello'))\nrunner.start()\n\n# Sleep forever\nfrom time import sleep\nwhile True:\n    sleep(10)\n</code></pre><p>现在，我们把kwsdemo.py文件，还有两个geektime.pb模型相关的文件，都上传到树莓派的Mycroft Precise目录下，然后运行kwsdemo.py文件，说出“极客时间”几个字，就会看到终端显示出“hello”这个单词。</p><h3>语音识别</h3><p>对于语音识别，我们直接采用腾讯云提供的语音识别SDK来完成（你需要提前在腾讯云控制台开通这个服务）。它会将语音发送到云端，由云端服务器计算出文本信息。你可以通过下面命令来安装：</p><pre><code>$ pip3 install tencentcloud-sdk-python\n</code></pre><p>在开始使用之前，你需要访问<a href=\"https://console.cloud.tencent.com/cam/capi\">这个链接</a>创建一个密钥，然后记录下SecretId和SecretKey的信息。</p><p>你可以参考下面的代码，来完成一个录音文件的识别。</p><pre><code>from tencentcloud.common import credential\nfrom tencentcloud.common.profile.client_profile import ClientProfile\nfrom tencentcloud.common.profile.http_profile import HttpProfile\nfrom tencentcloud.common.exception.tencent_cloud_sdk_exception import TencentCloudSDKException \nfrom tencentcloud.asr.v20190614 import asr_client, models \nimport base64\nimport io \nimport sys \n\nSECRET_ID = &quot;你的Secret ID&quot;\nSECRET_KEY = &quot;你的Secret Key&quot;\n\ntry: \n    cred = credential.Credential(SECRET_ID, SECRET_KEY) \n    httpProfile = HttpProfile()\n    httpProfile.endpoint = &quot;asr.tencentcloudapi.com&quot;\n    clientProfile = ClientProfile()\n    clientProfile.httpProfile = httpProfile\n    clientProfile.signMethod = &quot;TC3-HMAC-SHA256&quot;  \n    client = asr_client.AsrClient(cred, &quot;ap-beijing&quot;, clientProfile) \n    #读取文件以及 base64\n    with open('./geektime-00.wav', &quot;rb&quot;) as f:\n        if sys.version_info[0] == 2:\n            content = base64.b64encode(f.read())\n        else:\n            content = base64.b64encode(f.read()).decode('utf-8')\n        f.close()\n    #发送请求\n    req = models.SentenceRecognitionRequest()\n    params = {&quot;ProjectId&quot;:0,&quot;SubServiceType&quot;:2,&quot;SourceType&quot;:1,&quot;UsrAudioKey&quot;:&quot;sessionid-geektime&quot;}\n    req._deserialize(params)\n    req.DataLen = len(content)\n    req.Data = content\n    req.EngSerViceType = &quot;16k_zh&quot;\n    req.VoiceFormat = &quot;wav&quot;\n    resp = client.SentenceRecognition(req) \n    print(resp.to_json_string()) \n\nexcept TencentCloudSDKException as err: \n    print(err)\n</code></pre><h3>语音合成</h3><p>接下来，我来介绍一下语音合成。</p><p>你可能会问，刚才介绍技术架构的时候，不是还讲了自然语言理解、技能和自然语言生成吗？这里怎么跳过去了呢？</p><p>首先，因为我们的任务很简单，只需要查询语音识别的文本中是否有“开”、“灯”，和“关”、“灯”就可以完成判断，所以自然语言理解直接判断字符串是否匹配即可。</p><p>其次，我们要实现控制智能电灯，这个技能我在后面会介绍。</p><p>最后，智能音箱只需要反馈执行开关灯的结果就可以，比如“我已经把灯打开了”或者“我已经把灯关了”，自然语言生成的部分按照固定的文本就可以了，不需要考虑动态生成的问题。</p><p>语音合成，就是我们希望把类似“我已经把灯关了”这样的文本信息，转换为音频，便于智能音箱播放出来。你可以基于离线的TTS引擎来实现，比如<a href=\"https://github.com/junzew/HanTTS\">HanTTS</a>这个项目。</p><p>当然，我们也可以使用腾讯云的语音合成服务（你需要提前在腾讯云控制台开通这个服务）。你可以参考下面的代码：</p><pre><code>import json\nimport base64\n\nfrom tencentcloud.common import credential\nfrom tencentcloud.common.profile.client_profile import ClientProfile\nfrom tencentcloud.common.profile.http_profile import HttpProfile\nfrom tencentcloud.common.exception.tencent_cloud_sdk_exception import TencentCloudSDKException\nfrom tencentcloud.tts.v20190823 import tts_client, models\n\nSECRET_ID = &quot;你的Secret ID&quot;\nSECRET_KEY = &quot;你的Secret Key&quot;\n\ntry: \n    cred = credential.Credential(SECRET_ID, SECRET_KEY) \n    httpProfile = HttpProfile()\n    httpProfile.endpoint = &quot;tts.tencentcloudapi.com&quot;\n\n    clientProfile = ClientProfile()\n    clientProfile.httpProfile = httpProfile\n    client = tts_client.TtsClient(cred, &quot;ap-beijing&quot;, clientProfile) \n\n    req = models.TextToVoiceRequest()\n    params = {\n        &quot;Text&quot;: &quot;我已经把灯关了&quot;,\n        &quot;SessionId&quot;: &quot;sessionid-geektime&quot;,\n        &quot;ModelType&quot;: 1,\n        &quot;ProjectId&quot;: 0,\n        &quot;VoiceType&quot;: 1002\n    }\n    req.from_json_string(json.dumps(params))\n\n    resp = client.TextToVoice(req) \n    print(resp.to_json_string()) \n\n    if resp.Audio is not None:\n        audio = resp.Audio\n        data = base64.b64decode(audio)\n        wav_file = open(&quot;temp.wav&quot;, &quot;wb&quot;)\n        wav_file.write(data)\n        wav_file.close()\n\nexcept TencentCloudSDKException as err: \n    print(err)\n</code></pre><h2>通过智能音箱控制电灯</h2><p>为了实现控制智能电灯的目的，我们需要借助物联网平台提供的开发接口。</p><p>首先，我们进入物联网开发平台，选择“智能家居”项目。</p><p><img src=\"https://static001.geekbang.org/resource/image/77/49/77f96b642b6d5a077865b40904c59a49.png?wh=2066*462\" alt=\"\"></p><p>然后，点击左侧的“应用开发”，进入新建应用的界面，点击“新建应用”。</p><p><img src=\"https://static001.geekbang.org/resource/image/26/d3/2630643ca6202249d3e4e7ba52e226d3.png?wh=1448*444\" alt=\"\"></p><p>完成后，点击应用列表里面的应用名称，进入应用的详情页面。你可以看到应用的SecretId和SecretKey信息。这里，你需要将下面“关联产品”中的智能电灯勾选上。只有建立关联，应用才可以控制这个设备。</p><p><img src=\"https://static001.geekbang.org/resource/image/6f/a2/6f93dbacdaa2d6573f6a183905d44da2.png?wh=2232*612\" alt=\"\"></p><p>具体代码可以参考腾讯提供的开源实现，包括<a href=\"https://github.com/tencentyun/iot-link-ios/tree/master/Source/LinkApp\">iOS</a>、<a href=\"https://github.com/tencentyun/iot-link-android/tree/master/app\">Android</a>和<a href=\"https://github.com/tencentyun/qcloud-iotexplorer-appdev-miniprogram-sdk-demo\">小程序</a>。</p><p>不过，这种方式需要用户账号的登录认证，在树莓派上不太方便。还有一个方式就是基于物联网开发平台提供的通用API接口。其中的“<a href=\"https://cloud.tencent.com/document/product/1081/34973\">设备远程控制</a>”接口可以满足我们的需求。</p><p>具体的控制方法，你可以参考下面的代码（注意，目前只支持ap-guangzhou区域）。</p><pre><code>import json\nfrom led2.main import PRODUCT_ID\nfrom tencentcloud.common import credential\nfrom tencentcloud.common.profile.client_profile import ClientProfile\nfrom tencentcloud.common.profile.http_profile import HttpProfile\nfrom tencentcloud.common.exception.tencent_cloud_sdk_exception import TencentCloudSDKException\nfrom tencentcloud.iotexplorer.v20190423 import iotexplorer_client, models\n\nSECRET_ID = &quot;你的Secret ID&quot;\nSECRET_KEY = &quot;你的Secret Key&quot;\nPRODUCT_ID = &quot;你的ProductID&quot;\n\ndef Light_control(state):\n    try: \n        cred = credential.Credential(SECRET_ID, SECRET_KEY) \n        httpProfile = HttpProfile()\n        httpProfile.endpoint = &quot;iotexplorer.tencentcloudapi.com&quot;\n\n        clientProfile = ClientProfile()\n        clientProfile.httpProfile = httpProfile\n        client = iotexplorer_client.IotexplorerClient(cred, &quot;ap-guangzhou&quot;, clientProfile) \n\n        req = models.ControlDeviceDataRequest()\n        data = {\n            &quot;power_switch&quot;: state\n        }\n        data_str = json.dumps(data)\n\n        params = {\n            &quot;DeviceName&quot;: &quot;Led_1&quot;,\n            &quot;ProductId&quot;: PRODUCT_ID,\n            &quot;Data&quot;: data_str\n        }\n        req.from_json_string(json.dumps(params))\n\n        resp = client.ControlDeviceData(req) \n        print(resp.to_json_string()) \n\n    except TencentCloudSDKException as err: \n        print(err) \n\nLight_control(0)\n</code></pre><h2>小结</h2><p>总结一下，在这一讲中，我介绍了智能音箱的技术架构，以及在树莓派上用于实现智能音箱的一些可选的技术方案，并且带你实现了语音控制智能电灯的目的。你需要重点关注的知识有：</p><ol>\n<li>智能音箱的实现，需要前端音箱本体和后端云平台上一系列技术的支持。这些技术有前端的拾音、语音信号处理、语音唤醒和播音，以及后端的语音识别、自然语言理解、技能、自然语言生成和语音合成。</li>\n<li>在树莓派的实现上，拾音可以选择使用麦克风阵列，因为基于麦克风阵列可以更好地实现前端语音信号处理，比如声源定位和波束成型等。</li>\n<li>语言唤醒需要在智能音箱本体上实现，所以需要一些轻量级的识别引擎和训练好的唤醒词模型。之前比较流行的Snowboy将要停止服务，这里我选择了Mycroft Precise这个开源方案。</li>\n<li>语音识别、自然语言理解、技能、自然语言生成和语音合成等任务适合基于云平台的能力来实现，因为云平台的计算能力更强，有更好的性能和准确度。</li>\n</ol><p>智能音箱的技术也一直在发展，比如现在越来越多的智能音箱开始配备屏幕和摄像头，这为智能音箱引入了声音、UI和视觉等多模态的交互方式，相应地，这也给声纹识别、人脸识别和动作识别等技术带来了新的应用场景。我相信智能音箱未来的产品形态和功能还会不断地进化和发展。</p><h2>思考题</h2><p>最后，我给你留一个思考题吧。</p><p>在这一讲中，我们是通过物联网平台提供的API接口来控制智能电灯的。除了这种方式，你还能想到其他的方法来远程控制智能电灯吗？你能实现一个虚拟的联网开关，基于场景联动来控制智能电灯的开和关吗？</p><p>欢迎你在留言区写下你思考的结果，也欢迎你将这一讲分享给你的朋友，大家一起交流学习。</p>","comments":[{"had_liked":false,"id":274192,"user_name":"信大捷安","can_delete":false,"product_type":"c1","uid":1748552,"ip_address":"","ucode":"096797EEB7A14E","user_header":"","comment_is_top":true,"comment_ctime":1610896609,"is_pvip":false,"replies":[{"id":"100785","content":"👍","user_name":"作者回复","user_name_real":"郭朝斌","uid":"2302171","ctime":1612589596,"ip_address":"","comment_id":274192,"utype":1}],"discussion_count":1,"race_medal":0,"score":"9.2233720556454994e+18","product_id":100063601,"comment_content":"腾讯镜像经常会出现同步失败的问题，如果出现不能正常下载安装的情况可以使用清华大学镜像源<br><br># 编辑 `&#47;etc&#47;apt&#47;sources.list` 文件，删除原文件所有内容，用以下内容取代：<br>deb http:&#47;&#47;mirrors.tuna.tsinghua.edu.cn&#47;raspbian&#47;raspbian&#47; buster main non-free contrib rpi<br>deb-src http:&#47;&#47;mirrors.tuna.tsinghua.edu.cn&#47;raspbian&#47;raspbian&#47; buster main non-free contrib rpi<br><br># 编辑 `&#47;etc&#47;apt&#47;sources.list.d&#47;raspi.list` 文件，删除原文件所有内容，用以下内容取代：<br>deb http:&#47;&#47;mirrors.tuna.tsinghua.edu.cn&#47;raspberrypi&#47; buster main ui","like_count":4,"discussions":[{"author":{"id":2302171,"avatar":"https://static001.geekbang.org/account/avatar/00/23/20/db/b04f43dc.jpg","nickname":"郭朝斌","note":"","ucode":"2969986E1B3851","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":513937,"discussion_content":"👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1612589596,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":269998,"user_name":"孙宇翔","can_delete":false,"product_type":"c1","uid":1944746,"ip_address":"","ucode":"A10DC9018CCCC0","user_header":"https://static001.geekbang.org/account/avatar/00/1d/ac/aa/2f117918.jpg","comment_is_top":false,"comment_ctime":1608870243,"is_pvip":false,"replies":[{"id":"99269","content":"好，等分享","user_name":"作者回复","user_name_real":"郭朝斌","uid":"2302171","ctime":1610807846,"ip_address":"","comment_id":269998,"utype":1}],"discussion_count":4,"race_medal":0,"score":"35968608611","product_id":100063601,"comment_content":"我想等把课程里的都实现后，试着在门框的两边装两个红外传感器，通过感知的先后顺序，来判断是进门或者出门，来控制灯的开关","like_count":8,"discussions":[{"author":{"id":2302171,"avatar":"https://static001.geekbang.org/account/avatar/00/23/20/db/b04f43dc.jpg","nickname":"郭朝斌","note":"","ucode":"2969986E1B3851","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":512483,"discussion_content":"好，等分享","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1610807846,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1132690,"avatar":"https://static001.geekbang.org/account/avatar/00/11/48/92/de629e17.jpg","nickname":"游鱼","note":"","ucode":"ADBB8B24B4594F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":573866,"discussion_content":"还要考虑有多人进出的场景，白天与黑夜或光线好与不好的场景","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1653702488,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1256331,"avatar":"https://static001.geekbang.org/account/avatar/00/13/2b/8b/ea70179f.jpg","nickname":"黄鑫荣","note":"","ucode":"80B72CC68F7E06","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":337867,"discussion_content":"门框两边各一个不行的，应该两个放在同一边，水平放，按照传感器检测到人的先后顺序来判断进门还是出门。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1609113871,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1944746,"avatar":"https://static001.geekbang.org/account/avatar/00/1d/ac/aa/2f117918.jpg","nickname":"孙宇翔","note":"","ucode":"A10DC9018CCCC0","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1256331,"avatar":"https://static001.geekbang.org/account/avatar/00/13/2b/8b/ea70179f.jpg","nickname":"黄鑫荣","note":"","ucode":"80B72CC68F7E06","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":338461,"discussion_content":"哈哈，我就是这个意思，没表述清楚，多谢","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1609295629,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":337867,"ip_address":""},"score":338461,"extra":""}]}]},{"had_liked":false,"id":272640,"user_name":"牛哥哥","can_delete":false,"product_type":"c1","uid":1785568,"ip_address":"","ucode":"2B3926008E97CB","user_header":"https://static001.geekbang.org/account/avatar/00/1b/3e/e0/08069dfc.jpg","comment_is_top":false,"comment_ctime":1610182903,"is_pvip":false,"replies":[{"id":"99231","content":"需要再看看respeaker的驱动安装是否成功","user_name":"作者回复","user_name_real":"郭朝斌","uid":"2302171","ctime":1610783795,"ip_address":"","comment_id":272640,"utype":1}],"discussion_count":6,"race_medal":0,"score":"14495084791","product_id":100063601,"comment_content":"arecord -l 发现没有设备，重装系统也不行","like_count":3,"discussions":[{"author":{"id":2302171,"avatar":"https://static001.geekbang.org/account/avatar/00/23/20/db/b04f43dc.jpg","nickname":"郭朝斌","note":"","ucode":"2969986E1B3851","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":513333,"discussion_content":"需要再看看respeaker的驱动安装是否成功","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1610783795,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1022286,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/99/4e/0146807f.jpg","nickname":"兔子","note":"","ucode":"327C5142FD0940","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":341248,"discussion_content":"我的也是，有人能解答一下吗？","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1610361224,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1133649,"avatar":"https://static001.geekbang.org/account/avatar/00/11/4c/51/a339d363.jpg","nickname":"柠檬水","note":"","ucode":"B105855D7FF8FB","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1022286,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/99/4e/0146807f.jpg","nickname":"兔子","note":"","ucode":"327C5142FD0940","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":342646,"discussion_content":"驱动装好了吗","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1610764622,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":341248,"ip_address":""},"score":342646,"extra":""}]},{"author":{"id":1022286,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/99/4e/0146807f.jpg","nickname":"兔子","note":"","ucode":"327C5142FD0940","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":343568,"discussion_content":"我把清华源还原成默认的源，当然最后花了一整晚时间来更新包，最后可能还是多试几次。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1611100124,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1748552,"avatar":"","nickname":"信大捷安","note":"","ucode":"096797EEB7A14E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":342998,"discussion_content":"腾讯源经常出问题换成清华大学源\n\n# 编辑 `/etc/apt/sources.list` 文件，删除原文件所有内容，用以下内容取代：\ndeb http://mirrors.tuna.tsinghua.edu.cn/raspbian/raspbian/ buster main non-free contrib rpi\ndeb-src http://mirrors.tuna.tsinghua.edu.cn/raspbian/raspbian/ buster main non-free contrib rpi\n\n# 编辑 `/etc/apt/sources.list.d/raspi.list` 文件，删除原文件所有内容，用以下内容取代：\ndeb http://mirrors.tuna.tsinghua.edu.cn/raspberrypi/ buster main ui","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1610896665,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2141147,"avatar":"","nickname":"Geek_e3bbee","note":"","ucode":"B4234950340D3D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":341591,"discussion_content":"不需要有文件，直接 arecord -d 5 test.wav 录制，然后 aplay test.wav 播放测试","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1610458404,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":271429,"user_name":"莹","can_delete":false,"product_type":"c1","uid":1020356,"ip_address":"","ucode":"395C6C4191B091","user_header":"https://static001.geekbang.org/account/avatar/00/0f/91/c4/40609b81.jpg","comment_is_top":false,"comment_ctime":1609620099,"is_pvip":false,"replies":[{"id":"99257","content":"👍","user_name":"作者回复","user_name_real":"郭朝斌","uid":"2302171","ctime":1610806541,"ip_address":"","comment_id":271429,"utype":1}],"discussion_count":2,"race_medal":0,"score":"14494521987","product_id":100063601,"comment_content":"使用precise-convert geektime.net会出现一点问题，说是有些文件中的.decode(&#39;utf8&#39;)有AttributeError，估计是版本问题，看到最近有个报了的bug：https:&#47;&#47;github.com&#47;MycroftAI&#47;mycroft-precise&#47;issues&#47;197，暂时的解决办法，将报错中的.decode(&#39;utf8&#39;)删掉","like_count":3,"discussions":[{"author":{"id":2302171,"avatar":"https://static001.geekbang.org/account/avatar/00/23/20/db/b04f43dc.jpg","nickname":"郭朝斌","note":"","ucode":"2969986E1B3851","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":512925,"discussion_content":"👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1610806541,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1600835,"avatar":"https://static001.geekbang.org/account/avatar/00/18/6d/43/61b81243.jpg","nickname":"米","note":"","ucode":"5079E87A201B6B","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":574278,"discussion_content":"也可以把setup.py中的h5py，改为h5py&lt;3.0.0。然后重新./setup.sh","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1653955351,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":271430,"user_name":"莹","can_delete":false,"product_type":"c1","uid":1020356,"ip_address":"","ucode":"395C6C4191B091","user_header":"https://static001.geekbang.org/account/avatar/00/0f/91/c4/40609b81.jpg","comment_is_top":false,"comment_ctime":1609621519,"is_pvip":false,"replies":[{"id":"99256","content":"记得执行时切换到precise的python虚拟环境","user_name":"作者回复","user_name_real":"郭朝斌","uid":"2302171","ctime":1610806524,"ip_address":"","comment_id":271430,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10199556111","product_id":100063601,"comment_content":"上面的kwsdemo.py的测试代码里这第6行&quot;precise-engine&#47;precise-engine&quot;会导致找不到文件，需要替换到“.venv&#47;bin&#47;precise-engine“。参考github上的sample python program.","like_count":2,"discussions":[{"author":{"id":2302171,"avatar":"https://static001.geekbang.org/account/avatar/00/23/20/db/b04f43dc.jpg","nickname":"郭朝斌","note":"","ucode":"2969986E1B3851","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":512926,"discussion_content":"记得执行时切换到precise的python虚拟环境","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1610806524,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":273179,"user_name":"Geek_e3bbee","can_delete":false,"product_type":"c1","uid":2141147,"ip_address":"","ucode":"B4234950340D3D","user_header":"","comment_is_top":false,"comment_ctime":1610466895,"is_pvip":false,"replies":[{"id":"99215","content":"可以关注负样本，增加训练模型的质量。","user_name":"作者回复","user_name_real":"郭朝斌","uid":"2302171","ctime":1610777321,"ip_address":"","comment_id":273179,"utype":1}],"discussion_count":4,"race_medal":0,"score":"5905434191","product_id":100063601,"comment_content":"语言唤醒 部分能跑起来，但最终唤醒效果没有出现，不知道其他同学有没有碰到类似的问题","like_count":1,"discussions":[{"author":{"id":2302171,"avatar":"https://static001.geekbang.org/account/avatar/00/23/20/db/b04f43dc.jpg","nickname":"郭朝斌","note":"","ucode":"2969986E1B3851","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":513517,"discussion_content":"可以关注负样本，增加训练模型的质量。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1610777321,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2309713,"avatar":"https://static001.geekbang.org/account/avatar/00/23/3e/51/f7d32e81.jpg","nickname":"欢乐马","note":"","ucode":"230968AA8EEE30","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":341749,"discussion_content":"一样，还没说话就出现hello，和老师课程中的现象不一样","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1610510978,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":2141147,"avatar":"","nickname":"Geek_e3bbee","note":"","ucode":"B4234950340D3D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2309713,"avatar":"https://static001.geekbang.org/account/avatar/00/23/3e/51/f7d32e81.jpg","nickname":"欢乐马","note":"","ucode":"230968AA8EEE30","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":342098,"discussion_content":"是的，我这也这样。不知道其他同学有啥解法没","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1610593098,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":341749,"ip_address":""},"score":342098,"extra":""},{"author":{"id":1168143,"avatar":"https://static001.geekbang.org/account/avatar/00/11/d3/0f/ad26c21a.jpg","nickname":"祁宏钢","note":"","ucode":"A32F11EA6C5417","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":2309713,"avatar":"https://static001.geekbang.org/account/avatar/00/23/3e/51/f7d32e81.jpg","nickname":"欢乐马","note":"","ucode":"230968AA8EEE30","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":348351,"discussion_content":"我的和你一样，也是还没说话就出现hello，然后怎么喊都不起反应","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1612519674,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":341749,"ip_address":""},"score":348351,"extra":""}]}]},{"had_liked":false,"id":346922,"user_name":"米","can_delete":false,"product_type":"c1","uid":1600835,"ip_address":"","ucode":"5079E87A201B6B","user_header":"https://static001.geekbang.org/account/avatar/00/18/6d/43/61b81243.jpg","comment_is_top":false,"comment_ctime":1653537987,"is_pvip":true,"discussion_count":1,"race_medal":0,"score":"1653537987","product_id":100063601,"comment_content":"请教老师一下，这个问题困扰我很久了。<br>执行完指令precise-collect后，按空格键开始录音，此时会报错：<br>ALSA lib dlmisc.c:287:(snd1_dlobj_cache_get) Cannot open shared library &#47;usr&#47;lib&#47;arm-linux-gnueabihf&#47;alsa-lib&#47;libasound_module_rate_samplerate.so ((null): &#47;usr&#47;lib&#47;arm-linux-gnueabihf&#47;alsa-lib&#47;libasound_module_rate_samplerate.so: cannot open shared object file: No such file or directory)","like_count":0,"discussions":[{"author":{"id":1600835,"avatar":"https://static001.geekbang.org/account/avatar/00/18/6d/43/61b81243.jpg","nickname":"米","note":"","ucode":"5079E87A201B6B","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":575708,"discussion_content":"逛了好久的github论坛，找到一个解决方法。\n首先，cd ~\n其次，vim .asoundrc\n最后，在.asoundrc里面输入以下内容\npcm.!default {\n  type asym\n   playback.pcm {\n     type plug\n     slave.pcm &#34;hw:1,0&#34;\n   }\n   capture.pcm {\n     type plug\n     slave.pcm &#34;hw:1,0&#34;\n   }\n}","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1655043123,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":337183,"user_name":"z","can_delete":false,"product_type":"c1","uid":1028132,"ip_address":"","ucode":"8A64B9354556CE","user_header":"https://static001.geekbang.org/account/avatar/00/0f/b0/24/bb1297cf.jpg","comment_is_top":false,"comment_ctime":1646664161,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1646664161","product_id":100063601,"comment_content":"有没有可能我做一个拾音器前台，将语音（已经明确是指令了，无需再判断是否唤醒）通过蓝牙的形式传输给小爱音响或者手机的小爱同学APP进行语义分析并完成指令？","like_count":0},{"had_liked":false,"id":332191,"user_name":"阿甘","can_delete":false,"product_type":"c1","uid":1057843,"ip_address":"","ucode":"BC93175B70E05D","user_header":"https://static001.geekbang.org/account/avatar/00/10/24/33/bcf37f50.jpg","comment_is_top":false,"comment_ctime":1643092560,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1643092560","product_id":100063601,"comment_content":"感觉开源真的很伟大，自己都可以DIY这么一个小小的智能家居了。","like_count":0},{"had_liked":false,"id":270095,"user_name":"LDxy","can_delete":false,"product_type":"c1","uid":1188710,"ip_address":"","ucode":"956432CE7B7761","user_header":"https://static001.geekbang.org/account/avatar/00/12/23/66/413c0bb5.jpg","comment_is_top":false,"comment_ctime":1608901022,"is_pvip":false,"replies":[{"id":"99268","content":"是的，都比较成熟了","user_name":"作者回复","user_name_real":"郭朝斌","uid":"2302171","ctime":1610807820,"ip_address":"","comment_id":270095,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1608901022","product_id":100063601,"comment_content":"文中提到的智能音箱的技术架构中所用的的各种技术，是不是都已经有成熟的解决方案的？并且都已经能在产品中使用的？","like_count":0,"discussions":[{"author":{"id":2302171,"avatar":"https://static001.geekbang.org/account/avatar/00/23/20/db/b04f43dc.jpg","nickname":"郭朝斌","note":"","ucode":"2969986E1B3851","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":512516,"discussion_content":"是的，都比较成熟了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1610807820,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2324000,"avatar":"https://static001.geekbang.org/account/avatar/00/23/76/20/ca7a685a.jpg","nickname":"父与子","note":"","ucode":"E0269DD24BE49A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":345387,"discussion_content":"课件能下载吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1611716199,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]}]}