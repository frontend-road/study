{"id":256196,"title":"02 | 授权码许可类型中，为什么一定要有授权码？","content":"<p>你好，我是王新栋。</p><p>在上一讲，我提到了OAuth 2.0 的授权码许可类型，在小兔打单软件的例子里面，小兔最终是通过<strong>访问令牌</strong>请求到小明的店铺里的订单数据。同时呢，我还提到了，这个<strong>访问令牌是通过授权码换来的</strong>。到这里估计你会问了，为什么要用授权码来换令牌？为什么不能直接颁发访问令牌呢？</p><p>你可以先停下来想想这个问题。今天咱们这节课，我会带着你深入探究下其中的逻辑。</p><h2>为什么需要授权码？</h2><p>在讲这个问题之前，我先要和你同步下，在OAuth 2.0的体系里面有4种角色，按照官方的称呼它们分别是资源拥有者、客户端、授权服务和受保护资源。不过，这里的客户端，我更愿意称其为第三方软件，而且在咱们这个课程中，都是以第三方软件在举例子。所以，在后续的讲解中我统一把它称为第三方软件。</p><p>所以，你在看官方资料的时候，可以自己对应下。为了便于你理解，我还是拿小兔软件来举例子，将官方的称呼 “照进现实”，对应关系就是，<strong>资源拥有者-&gt;小明，第三方软件-&gt;小兔软件，授权服务-&gt;京东商家开放平台的授权服务，受保护资源-&gt;小明店铺在京东上面的订单</strong>。</p><p>在理解了这些概念以后，让我们继续。</p><p>你知道，<strong>OAuth诞生之初就是为了解决Web浏览器场景下的授权问题</strong>，所以我基于浏览器的场景，在上一讲的小明使用小兔软件打印订单的整体流程的基础上，画了一个授权码许可类型的序列图。</p><!-- [[[read_end]]] --><p>当然了，这里还是有小兔软件来继续陪伴着我们，不过这次为了能够更好地表述授权码许可流程，我会把小兔软件的前端和后端分开展示，并把京东商家开放平台的系统按照OAuth 2.0的组件拆分成了授权服务和受保护资源服务。如下图所示：</p><p><img src=\"https://static001.geekbang.org/resource/image/96/32/96973a6f5637fb3d1049f6d456702932.png?wh=1814*1370\" alt=\"\" title=\"图1 以小兔软件为例，授权码许可类型的序列图\"></p><p>突然看到这个序列图增加了这么多步骤的时候，你是不是有些紧张？那如果我告诉你再细分的话步骤还要更多，你是不是就更困惑了？</p><p>不过，别紧张，这没啥关系。一方面，咱们这一讲的重点就是跟授权码相关的流程，你只需关注这里的重点步骤，也就是两次重定向相关的步骤就够了。在下一讲中，我再教你如何将这些步骤进一步拆解。另一方面，我接下来还会用另一种视角来帮助你分析这个流程。</p><p>我们继续来看这张序列图。从图中看到，在第4步授权服务生成了授权码code，按照一开始我们提出来的问题，如果不要授权码，这一步实际上就可以直接返回访问令牌access_token了。</p><p>按着这个没有授权码的思路继续想，如果这里直接返回访问令牌，那我们肯定不能使用重定向的方式。因为<strong>这样会把安全保密性要求极高的访问令牌暴露在浏览器上</strong>，从而将会面临访问令牌失窃的安全风险。显然，这是不能被允许的。</p><p>也就是说，如果没有授权码的话，我们就只能把访问令牌发送给第三方软件小兔的后端服务。按照这样的逻辑，上面的流程图就会变成下面这样：</p><p><img src=\"https://static001.geekbang.org/resource/image/f4/33/f44866070ee06bc3fcceac792570d433.png?wh=1794*1368\" alt=\"\" title=\"图2 如果没有授权码，直接把访问令牌发送给第三方软件小兔的后端服务\"></p><p>到这里，看起来天衣无缝。小明访问小兔软件，小兔软件说要打单你得给我授权，不然京东不干，然后小兔软件就引导小明跳转到了京东的授权服务。到授权服务之后，京东商家开放平台验证了小兔的合法性以及小明的登录状态后，生成了授权页面。紧接着，小明赶紧点击同意授权，这时候，京东商家开放平台知道可以把小明的订单数据给小兔软件。</p><p>于是，京东商家开放平台没含糊，赶紧生成访问令牌access_token，并且通过后端服务的方式返回给了小兔软件。这时候，小兔软件就能正常工作了。</p><p>这样，问题就来了，什么问题呢？<strong>当小明被浏览器重定向到授权服务上之后，小明跟小兔软件之间的 “连接” 就断了</strong>，相当于此时此刻小明跟授权服务建立了“连接”后，将一直“停留在授权服务的页面上”。<strong>你会看到图2中问号处的时序上，小明再也没有重新“连接”到小兔软件。</strong></p><p>但是，这个时候小兔软件已经拿到了小明授权之后的访问令牌，也使用访问令牌获取到了小明店铺里的订单数据。这时，考虑到“小明的感受”，小兔软件应该要通知到小明，但是如何做呢？现在“连接断了”，这事儿恐怕就没那么容易了。</p><p>OK，为了让小兔软件能很容易地通知到小明，<strong>还必须让小明跟小兔软件重新建立起 “连接”</strong>。这就是我们看到的第二次重定向，小明授权之后，又重新重定向回到了小兔软件的地址上，这样<strong>小明就跟小兔软件有了新的 “连接”</strong>。</p><p>到这里，你就能理解在授权码许可的流程中，为什么需要两次重定向了吧。</p><p>为了重新建立起这样的一次连接，我们又不能让访问令牌暴露出去，就有了这样一个<strong>临时的、间接的凭证：授权码</strong>。因为小兔软件最终要拿到的是安全保密性要求极高的访问令牌，并不是授权码，而授权码是可以暴露在浏览器上面的。这样有了授权码的参与，访问令牌可以在后端服务之间传输，同时呢还可以重新建立小明与小兔软件之间的“连接”。这样通过一个授权码，既“照顾”到了小明的体验，又“照顾”了通信的安全。</p><p>这下，你就知道为什么要有授权码了吧。</p><p>那么，在执行授权码流程的时候，授权码和访问令牌在小兔软件和授权服务之间到底是怎么流转的呢？要回答这个问题，就需要继续分析一下授权码许可类型的通信过程了。</p><h2>授权码许可类型的通信过程</h2><p>图1的通信过程中标识出来的步骤就有9个，一步步地去分析看似会很复杂，所以我会用另一个维度来分析以帮助你理解，也就是从直接通信和间接通信的维度来分析。这里所谓的间接通信就是指获取授权码的交互，而直接通信就是指通过授权码换取访问令牌的交互。</p><p>接下来，我们就一起分析下吧，看看哪些是间接通信，哪些又是直接通信。</p><h3>间接通信</h3><p>我们先分析下为什么是“间接”。</p><p>我们把图1中获取授权码code的流程 “放大”，并换个角度来看一看，也就是将浏览器这个代理放到第三方软件小兔和授权服务中间。于是，我们来到了下面这张图：</p><p><img src=\"https://static001.geekbang.org/resource/image/9e/bf/9e4f51f1f77840bd0b8f756be40d42bf.jpg?wh=1920*1036\" alt=\"\" title=\"图3 获取授权码的交互过程\"></p><p>这个过程，仿佛有这样的一段对话。</p><blockquote>\n<p>小明：“你好，小兔软件，我要访问你了。”</p>\n</blockquote><blockquote>\n<p>小兔软件：“好的，我把你引到授权服务那里，我需要授权服务给我一个授权码。”</p>\n</blockquote><blockquote>\n<p>授权服务：“小兔软件，<strong>我把授权码发给浏览器了</strong>。”</p>\n</blockquote><blockquote>\n<p>小兔软件：“好的，我从浏览器拿到了授权码。”</p>\n</blockquote><p>不知道你注意到没有，第三方软件小兔和授权服务之间，并没有发生直接的通信，而是<strong>通过浏览器这个“中间人” 来 “搭线”的</strong>。因此，我们说这是一个间接通信的方式。</p><h3>直接通信</h3><p>那我们再分析下，授权码换取访问令牌的交互，为什么是“直接”的。我们再把图1中获取访问令牌的流程“放大”，就得到了下面的图示：</p><p><img src=\"https://static001.geekbang.org/resource/image/84/9b/84dc2d6f578b6968b782a0280a73be9b.png?wh=1348*692\" alt=\"\" title=\"图4 授权码换取访问令牌的交互过程\"></p><p>相比获取授权码过程的间接通信，获取访问令牌的直接通信就比较容易理解了，就是第三方软件小兔获取到授权码code值后，向授权服务发起获取访问令牌access_token的通信请求。这个请求是第三方软件服务器跟授权服务的服务器之间的通信，都是在后端服务器之间的请求和响应，因此也叫作后端通信。</p><h3>两个 “一伙”</h3><p>了解了上面的通信方式之后，不知道你有没有意识到，OAuth 2.0 中的4个角色是 “两两站队” 的：资源拥有者和第三方软件“站在一起”，因为第三方软件要代表资源拥有者去访问受保护资源；授权服务和受保护资源“站在一起”，因为授权服务负责颁发访问令牌，受保护资源负责接收并验证访问令牌。</p><p><img src=\"https://static001.geekbang.org/resource/image/1c/ff/1c86e21496882894d7f03b35a01972ff.jpg?wh=1920*612\" alt=\"\" title=\"图5 OAuth 2.0 中的4个角色是“两两站队”\"></p><p>讲到这里的时候，你会发现在这一讲，介绍授权码流程的时候我都是以浏览器参与的场景来讲的，那么浏览器一定要参与到这个流程中吗？</p><p>其实，授权码许可流程，不一定要有浏览器的参与。接下来，我们就继续分析下其中的逻辑。</p><h2>一定要有浏览器吗？</h2><p>OAuth 2.0发展之初，开放生态环境相对单薄，以浏览器为代理的Web应用居多，授权码许可类型 “理所当然” 地被应用到了通过浏览器才能访问的Web应用中。</p><p>但实际上，OAuth 2.0 是一个授权理念，或者说是一种授权思维。它的授权码模式的思维可以移植到很多场景中，比如微信小程序。在开发微信小程序应用时，我们通过授权码模式获取用户登录信息，<a href=\"https://developers.weixin.qq.com/miniprogram/dev/api-backend/open-api/login/auth.code2Session.html\">官方文档的地址示例</a>中给出的 <strong>grant_type=authorization_code</strong> ，就没有用到浏览器。</p><p>根据微信官方文档描述，开发者获取用户登录态信息的过程正是一个授权码的许可流程：</p><ul>\n<li>首先，开发者通过wx.login(Object object)方法获取到登录凭证code值，这一步的流程是在小程序内部通过调用微信提供的SDK实现；</li>\n<li>然后，再通过该code值换取用户的session_key等信息，也就是官方文档的auth.code2Session方法，同时该方法也是被强烈建议通过开发者的后端服务来调用的。</li>\n</ul><p>你可以看到，这个过程并没有使用到浏览器，但确实按照授权码许可的思想走了一个完整的授权码许可流程。也就是说，先通过小程序前端获取到code值，再通过小程序的后端服务使用code值换取session_key等信息，只不过是访问令牌access_token的值被换成了session_key。</p><pre><code>GET https://api.weixin.qq.com/sns/jscode2session?appid=APPID&amp;secret=SECRET&amp;js_code=JSCODE&amp;grant_type=authorization_code\n</code></pre><p>你看，这整个过程体现的就是授权码许可流程的思想。</p><h2>总结</h2><p>这节课又接近尾声了，我再带你回顾下重点内容。</p><p>今天，我从为什么需要授权码这个问题开始讲起，并通过授权码把授权码许可流程整体的通信过程串了一遍，提到了授权码这种方式解决的问题，也提到了授权码流程的通信方式。总结来说，我需要你记住以下两点。</p><ol>\n<li>授权码许可流程有两种通信方式。一种是前端通信，因为它通过浏览器促成了授权码的交互流程，比如京东商家开放平台的授权服务生成授权码发送到浏览器，第三方软件小兔从浏览器获取授权码。<strong>正因为获取授权码的时候小兔软件和授权服务并没有发生直接的联系，也叫做间接通信</strong>。另外一种是后端通信，在小兔软件获取到授权码之后，<strong>在后端服务直接发起换取访问令牌的请求，也叫做直接通信</strong>。</li>\n<li>在OAuth 2.0中，访问令牌被要求有极高的安全保密性，因此我们不能让它暴露在浏览器上面，只能通过第三方软件（比如小兔）的后端服务来获取和使用，以最大限度地保障访问令牌的安全性。正因为访问令牌的这种安全要求特性，当需要前端通信，比如浏览器上面的流转的时候，OAuth 2.0才又提供了一个临时的凭证：授权码。<strong>通过授权码的方式，可以让用户小明在授权服务上给小兔授权之后，还能重新回到小兔的操作页面上</strong>。这样，在保障安全性的情况下，提升了小明在小兔上的体验。</li>\n</ol><p>从授权码许可流程中就可以看出来，它完美地将OAuth 2.0 的4个角色组织了起来，并保证了它们之间的顺畅通信。<strong>它提出的这种结构和思想都可以被迁移到其他环境或者协议上，比如在微信小程序中使用授权码许可。</strong></p><p>不过，也正是因为有了授权码的参与，才使得授权码许可要比其他授权许可类型，在授权的流程上多出了好多步骤，让授权码许可类型成为了OAuth 2.0体系中迄今流程最完备、安全性最高的授权流程。在接下来的两讲中，我还会为你重点讲解授权码许可类型下的授权服务。</p><h2>思考题</h2><p>好了，今天这一讲我们马上要结束了，我给你留个思考题。</p><p>关于不需要浏览器参与的授权码许可流程，你还能列举出更多的应用场景吗？</p><p>欢迎你在留言区分享你的观点，也欢迎你把今天的内容分享给其他朋友，我们一起交流。</p>","neighbors":{"left":{"article_title":"01 | OAuth 2.0是要通过什么方式解决什么问题？","id":254565},"right":{"article_title":"03 | 授权服务：授权码和访问令牌的颁发流程是怎样的？","id":257101}},"comments":[{"had_liked":false,"id":231362,"user_name":"小祺","can_delete":false,"product_type":"c1","uid":1193548,"ip_address":"","ucode":"2819BCA9E71C9F","user_header":"https://static001.geekbang.org/account/avatar/00/12/36/4c/46c43cce.jpg","comment_is_top":false,"comment_ctime":1593657713,"is_pvip":false,"replies":[{"id":"85447","content":"一方面授权码也都有有效期，另外一方面除非再盗取了第三方应用软件的app_id、secret才能成功请求资源。","user_name":"作者回复","user_name_real":"王新栋","uid":"1352303","ctime":1593664846,"ip_address":"","comment_id":231362,"utype":1}],"discussion_count":13,"race_medal":0,"score":"207752087921","product_id":100053901,"comment_content":"授权码被盗取后，人家不能也模拟服务器请求获取access_token吗？","like_count":48,"discussions":[{"author":{"id":1352303,"avatar":"https://static001.geekbang.org/account/avatar/00/14/a2/6f/d239ed80.jpg","nickname":"王新栋","note":"","ucode":"0A5D089B8E1E9D","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":500274,"discussion_content":"一方面授权码也都有有效期，另外一方面除非再盗取了第三方应用软件的app_id、secret才能成功请求资源。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1593664846,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":1,"child_discussions":[{"author":{"id":1050294,"avatar":"https://static001.geekbang.org/account/avatar/00/10/06/b6/55b7ea34.jpg","nickname":"Paul","note":"","ucode":"7018DE791BBAE7","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1352303,"avatar":"https://static001.geekbang.org/account/avatar/00/14/a2/6f/d239ed80.jpg","nickname":"王新栋","note":"","ucode":"0A5D089B8E1E9D","race_medal":0,"user_type":2,"is_pvip":true},"discussion":{"id":552674,"discussion_content":"微信是不是还要设置服务器IP白名单，就更安全了\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1645543383,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":500274,"ip_address":""},"score":552674,"extra":""}]},{"author":{"id":1184625,"avatar":"https://static001.geekbang.org/account/avatar/00/12/13/71/887f0c83.jpg","nickname":"蔡奎","note":"","ucode":"2846E2C3CE60D9","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":288160,"discussion_content":"授权码获取access_token需要第三方软件和授权服务器的交互，其中有授权服务器对第三方软件的校验。它们间的通信会被加密和验证。所以第三方软件不易被模拟。即使信息被拦截也无法解密出access_token","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1593663901,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1018479,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/8a/6f/3d4f7e31.jpg","nickname":"娄江国","note":"","ucode":"6C2AAE4E409286","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":288309,"discussion_content":"合法的第三方（有app_id和secret）,是不是就能通过盗取的授权码，获取access_token了？","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1593704934,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1809168,"avatar":"","nickname":"Geek_7c4953","note":"","ucode":"359745D4725D4F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1018479,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/8a/6f/3d4f7e31.jpg","nickname":"娄江国","note":"","ucode":"6C2AAE4E409286","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":289167,"discussion_content":"授权码跟app_id是绑定的，也就是一个授权码在有效期内只对应一个app_id","likes_number":7,"is_delete":false,"is_hidden":false,"ctime":1594012839,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":288309,"ip_address":""},"score":289167,"extra":""},{"author":{"id":1811495,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/a4/27/15e75982.jpg","nickname":"小袁","note":"","ucode":"3F5D8721F577D9","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1018479,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/8a/6f/3d4f7e31.jpg","nickname":"娄江国","note":"","ucode":"6C2AAE4E409286","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":379999,"discussion_content":"不同第三方之间应该是数据隔离的。所以恶意第三方只能盗取属于自己的数据。","likes_number":4,"is_delete":false,"is_hidden":false,"ctime":1624276849,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":288309,"ip_address":""},"score":379999,"extra":""}]},{"author":{"id":1142025,"avatar":"https://static001.geekbang.org/account/avatar/00/11/6d/09/ffeabc27.jpg","nickname":"任鑫","note":"","ucode":"9803EB15B634C3","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":374921,"discussion_content":"可以去微信上引导用户做授权的第三方需要事先在微信做认证，并且获取授权过程需要使用加密通信","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1621411888,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1055475,"avatar":"https://static001.geekbang.org/account/avatar/00/10/1a/f3/41d5ba7d.jpg","nickname":"iLeGeND","note":"","ucode":"4055A628A6E97C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":288157,"discussion_content":"同上\n","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1593663433,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":2044656,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/32/f0/3b43a58a.jpg","nickname":"黄ྂ色ྂ闪ྂ光ྂ","note":"","ucode":"1FE811F2620731","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1055475,"avatar":"https://static001.geekbang.org/account/avatar/00/10/1a/f3/41d5ba7d.jpg","nickname":"iLeGeND","note":"","ucode":"4055A628A6E97C","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":289622,"discussion_content":"一般的来说code只能用一次","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1594167760,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":288157,"ip_address":""},"score":289622,"extra":""}]},{"author":{"id":1322986,"avatar":"https://static001.geekbang.org/account/avatar/00/14/2f/ea/c5a8fdf6.jpg","nickname":"Wechat","note":"","ucode":"B03C893A015687","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":288148,"discussion_content":"同问","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1593661098,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1818343,"avatar":"","nickname":"刘同青","note":"","ucode":"84B62DF8BC61FB","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":586301,"discussion_content":"\nGET https://api.weixin.qq.com/sns/jscode2session?appid=APPID&amp;secret=SECRET&amp;js_code=JSCODE&amp;grant_type=authorization_code 微信开放平台code2Session接口需要传appId和srcret！所以一般人拿到授权码code也没用","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1662095600,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"山东"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1816609,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/b8/21/f692bdb0.jpg","nickname":"路在哪","note":"","ucode":"A4822AD07AD102","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":579903,"discussion_content":"同问~","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1657765090,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1001145,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/46/b9/e6b4a431.jpg","nickname":"都是弟弟","note":"","ucode":"BEAFD64167FD23","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":291127,"discussion_content":"很棒","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1594713667,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":231303,"user_name":"mgxian","can_delete":false,"product_type":"c1","uid":1014806,"ip_address":"","ucode":"7B7E77E6A83B87","user_header":"https://static001.geekbang.org/account/avatar/00/0f/7c/16/4d1e5cc1.jpg","comment_is_top":false,"comment_ctime":1593649763,"is_pvip":false,"replies":[{"id":"85402","content":"HTTPS 和 OAuth 是两个维度的安全，HTTPS解决的信息加密传输，OAuth 解决的是用token来代替用户名和密码传输。","user_name":"作者回复","user_name_real":"王新栋","uid":"1352303","ctime":1593653056,"ip_address":"","comment_id":231303,"utype":1}],"discussion_count":6,"race_medal":0,"score":"96082930275","product_id":100053901,"comment_content":"如果使用HTTPS是不是可以不使用授权码？也能保证安全了","like_count":23,"discussions":[{"author":{"id":1033219,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/c4/03/f753fda7.jpg","nickname":"JianXu","note":"","ucode":"2A61BDBB573BDC","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":311587,"discussion_content":"我觉得用户名密码传输这句话理解有歧义的，如果用HTTPS 传输，其他人其实也拿不到HTTPS payload 里面的用户名密码，问题在于如果不采用Oauth , 用户就需要在小兔的前端输入用户名和密码，这样小兔不就可以代表客户去直接操作京东了嘛。但是这也不能阻止小兔自己搞一个钓鱼网站模仿京东吧。","likes_number":5,"is_delete":false,"is_hidden":false,"ctime":1602410735,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1005391,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/57/4f/6fb51ff1.jpg","nickname":"一步","note":"","ucode":"73CEA468CE70C3","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":288272,"discussion_content":"这是处理的不同的纬度， https 关注的是 数据传输的安全， OAuth 关注的是数据访问安全","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1593698978,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1269832,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJman25D8JlricJVaeweYqr70vyp2acetStqbtaDnCnroGXvuJfgr1As9q47iacTCUUMK1eRUt4KImg/132","nickname":"进阶的小孔","note":"","ucode":"71E88AE4EFDBF2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1005391,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/57/4f/6fb51ff1.jpg","nickname":"一步","note":"","ucode":"73CEA468CE70C3","race_medal":0,"user_type":1,"is_pvip":true},"discussion":{"id":296124,"discussion_content":"问下后端接口你们也会采用https传输吗，比如java的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1596458427,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":288272,"ip_address":""},"score":296124,"extra":""},{"author":{"id":1005391,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/57/4f/6fb51ff1.jpg","nickname":"一步","note":"","ucode":"73CEA468CE70C3","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1269832,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJman25D8JlricJVaeweYqr70vyp2acetStqbtaDnCnroGXvuJfgr1As9q47iacTCUUMK1eRUt4KImg/132","nickname":"进阶的小孔","note":"","ucode":"71E88AE4EFDBF2","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":296132,"discussion_content":"测试环境不会，但是生产环境强制使用https","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1596459469,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":296124,"ip_address":""},"score":296132,"extra":""}]},{"author":{"id":1352303,"avatar":"https://static001.geekbang.org/account/avatar/00/14/a2/6f/d239ed80.jpg","nickname":"王新栋","note":"","ucode":"0A5D089B8E1E9D","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":500247,"discussion_content":"HTTPS 和 OAuth 是两个维度的安全，HTTPS解决的信息加密传输，OAuth 解决的是用token来代替用户名和密码传输。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1593653056,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1980201,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/37/29/b3af57a7.jpg","nickname":"凯文小猪","note":"","ucode":"36D8AD0229547F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":554222,"discussion_content":"https解决的是传输信息加密的问题 oauth解决的是授权问题。即前者是保密 后者是授权某人访问我。 \n至于授权码的存在 是为了解决跳转时暴露token的问题。其实设计层面没有老师说的那么复杂，即通常来说跳转302重定向会将参数附在url上 当然如果一定要加载请求体里也不是不可以 但这样不符合浏览器通用性。\n因此在url上的东西一是不能加密（或者说加密代价太大） 二是容易被中间件有意无意地记录下来 如accessLog。因此access_token在这一步直接返回是不合适。\n因此加了一个过渡即授权码","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1646273195,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":232189,"user_name":"马成","can_delete":false,"product_type":"c1","uid":1486895,"ip_address":"","ucode":"664F2BAA2E0F0B","user_header":"https://static001.geekbang.org/account/avatar/00/16/b0/2f/e2096905.jpg","comment_is_top":false,"comment_ctime":1593914458,"is_pvip":true,"replies":[{"id":"85687","content":"感谢 马成 同学的细心学习。<br>OAuth 2.0 流程许可类型中有最基本的四种授权许可类型，授权码许可、客户端凭据许可、隐式许可、资源拥有者凭据许可，你举得那个例子，可以属于客户端凭据许可类型场景，不需要授权码。咱们这篇文章讲的授权码许可类型，所以谈到了授权码许可类型为什么要有授权码，为什么这么啰嗦再来一个步骤，而不是直接给访问令牌，直接给访问令牌的授权许可类型比如刚才说的客户端凭据许可类型。<br>1）【是为了增加一次用户可选择的交互】，这里呢，咱们文中也描述了“为了重新建立起这样的一次连接，我们又不能让访问令牌暴露出去，就有了这样一个临时的、间接的凭证：授权码。因为小兔软件最终要拿到的是安全保密性要求极高的访问令牌，并不是授权码，而授权码是可以暴露在浏览器上面的。这样有了授权码的参与，访问令牌可以在后端服务之间传输，同时呢【还可以重新建立小明与小兔软件之间的“连接”】。这样通过一个授权码，既“照顾”到了小明的体验，又“照顾”了通信的安全。”<br>2）安全性考虑访问令牌一定是要有有效期的，另外呢，重新获取令牌跟刷新令牌有关系，跟授权码就没有关系了。<br>3）授权只有一个阶段就是【颁发访问令牌】，其余的内容都是做准备工作。授权的本质并不是建设appkey传输的次数，而是为了【减少用户名和密码的传输次数】，以便减少“攻击面”，不用每次访问订单API、商品API等等，都带着用户名和密码。","user_name":"作者回复","user_name_real":"王新栋","uid":"1352303","ctime":1593921037,"ip_address":"","comment_id":232189,"utype":1}],"discussion_count":13,"race_medal":0,"score":"87493260378","product_id":100053901,"comment_content":"老师，我觉得您文章中举的例子不能说明授权码的必要性，我举一个不需要授权码的例子：<br>1）小明访问浏览器，浏览器（前端）向小兔后台发起请求（这里是后天哦，不是直接向授权服务器）；<br>2）小兔后台和授权服务器做一次交互，拿到访问令牌；<br>3）小兔后台通过访问令牌获取的需要的资源（第二次交互）<br>4）小兔后台响应步骤1）的请求，返回结果页面<br>上面的例子，访问令牌并不会暴露给浏览器，但是也不需要授权码！<br><br>所以我个人觉得，授权码的作用并不简单是为了让访问令牌不暴露在前台，这样设计的目的是：<br>1）专门为了增加一次用户可选择的交互。第一次访问一般是直接访问授权服务器的，所以第一次的返回页面是授权服务器给的，这里有两种选择，第一种是静默授权，直接302跳转；第二种就是给用户一个选择，让用户点击确认一下才会跳转到小兔后台。<br>2）第二个原因，因为访问令牌是很私密的东西，安全新考虑需要设置有效期，然而不可能每次获取都需要用户确认（这样用户体验太差了），所有授权码只需要一次，但是访问令牌的获取可能需要多次。<br>3）从授权服务器考虑，这里有两阶段授权，第一阶段使用授权码表示一次安全访问的开始；第二阶段只有第一次使用appkey获取访问令牌，后续只需要更换令牌，减少appkey在网络上传输的次数，直至本次安全访问结束，下次开始重新需要从授权码开始。","like_count":20,"discussions":[{"author":{"id":1300072,"avatar":"https://static001.geekbang.org/account/avatar/00/13/d6/68/3855df56.jpg","nickname":"胖大蟲","note":"","ucode":"04FDFFD273A695","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":297274,"discussion_content":"你这个例子有个最大的问题，第二步中小兔后台凭什么从授权服务拿到令牌？授权操作必然是用户和授权服务之间的交互，但是你这里没有。基于此，后面你说的一切都不成立了","likes_number":16,"is_delete":false,"is_hidden":false,"ctime":1596852633,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":2025984,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/ea/00/ebddf3a3.jpg","nickname":"一个好人","note":"","ucode":"F809A626F804F1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1300072,"avatar":"https://static001.geekbang.org/account/avatar/00/13/d6/68/3855df56.jpg","nickname":"胖大蟲","note":"","ucode":"04FDFFD273A695","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":297402,"discussion_content":"赞成","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1596900574,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":297274,"ip_address":""},"score":297402,"extra":""},{"author":{"id":2055809,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/5e/81/82709d6e.jpg","nickname":"码小呆","note":"","ucode":"44532D6ABF9340","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1300072,"avatar":"https://static001.geekbang.org/account/avatar/00/13/d6/68/3855df56.jpg","nickname":"胖大蟲","note":"","ucode":"04FDFFD273A695","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":589757,"discussion_content":"是的，都没有授权的步骤了，相当于直接获取凭证了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1665302000,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":297274,"ip_address":"广东"},"score":589757,"extra":""}]},{"author":{"id":1702255,"avatar":"https://static001.geekbang.org/account/avatar/00/19/f9/6f/9c008ceb.jpg","nickname":"stanleyjobson","note":"","ucode":"4CA84795F59339","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":304958,"discussion_content":"这问的有问题。 首先 后台去拿授权。就相当于用户把账号密码交给第三方了。这种事不允许的。。 oauth这种是前端跳转三方授权。三方授权是不允许把token 暴漏给前端的。这样给后端。http是无状态的。给后端 后端没办法推送给前端（不知道是哪个session对应的）。如果你要说session 传递过去在内存做个关系映射 这种也违背了oauth中好像有个简化授权交互和参数的要求。 所以说 通过code 传递给三方前端。再通过后台授权。这里三方其实在获取授权的时候还有appid 和secretkey 这样即使code 暴漏出去也没用。同时code 是一次失效的","likes_number":7,"is_delete":false,"is_hidden":false,"ctime":1599723195,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":6,"child_discussions":[{"author":{"id":1033219,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/c4/03/f753fda7.jpg","nickname":"JianXu","note":"","ucode":"2A61BDBB573BDC","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1702255,"avatar":"https://static001.geekbang.org/account/avatar/00/19/f9/6f/9c008ceb.jpg","nickname":"stanleyjobson","note":"","ucode":"4CA84795F59339","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":311586,"discussion_content":"那如果授权服务器直接把access token 发给小兔后端，并且同时通过前端把客户重定向回小兔前端并且给一个跟后端access token 对应的session ID 呢？这样也就省的小兔后端在通过code grant 去换access token 了。能解释一下吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1602410405,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":304958,"ip_address":""},"score":311586,"extra":""},{"author":{"id":1221604,"avatar":"https://static001.geekbang.org/account/avatar/00/12/a3/e4/50266292.jpg","nickname":"库博","note":"","ucode":"0D5DD558C9EB25","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1033219,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/c4/03/f753fda7.jpg","nickname":"JianXu","note":"","ucode":"2A61BDBB573BDC","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":312044,"discussion_content":"你这里所谓的session ID，跟code grant不是类似么？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1602573269,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":311586,"ip_address":""},"score":312044,"extra":""},{"author":{"id":1033219,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/c4/03/f753fda7.jpg","nickname":"JianXu","note":"","ucode":"2A61BDBB573BDC","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1221604,"avatar":"https://static001.geekbang.org/account/avatar/00/12/a3/e4/50266292.jpg","nickname":"库博","note":"","ucode":"0D5DD558C9EB25","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":312247,"discussion_content":"是的，我的点不是session ID 或者是 code grant , 而是为什么需要额外一个步骤通过code grant 去换access token , 而不是auth 直接下发access token 到第三方的后端。session id 只是用来让第三方从用户请求找到对应的后端access token ","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1602640333,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":312044,"ip_address":""},"score":312247,"extra":""}]},{"author":{"id":1352303,"avatar":"https://static001.geekbang.org/account/avatar/00/14/a2/6f/d239ed80.jpg","nickname":"王新栋","note":"","ucode":"0A5D089B8E1E9D","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":500552,"discussion_content":"感谢 马成 同学的细心学习。\nOAuth 2.0 流程许可类型中有最基本的四种授权许可类型，授权码许可、客户端凭据许可、隐式许可、资源拥有者凭据许可，你举得那个例子，可以属于客户端凭据许可类型场景，不需要授权码。咱们这篇文章讲的授权码许可类型，所以谈到了授权码许可类型为什么要有授权码，为什么这么啰嗦再来一个步骤，而不是直接给访问令牌，直接给访问令牌的授权许可类型比如刚才说的客户端凭据许可类型。\n1）【是为了增加一次用户可选择的交互】，这里呢，咱们文中也描述了“为了重新建立起这样的一次连接，我们又不能让访问令牌暴露出去，就有了这样一个临时的、间接的凭证：授权码。因为小兔软件最终要拿到的是安全保密性要求极高的访问令牌，并不是授权码，而授权码是可以暴露在浏览器上面的。这样有了授权码的参与，访问令牌可以在后端服务之间传输，同时呢【还可以重新建立小明与小兔软件之间的“连接”】。这样通过一个授权码，既“照顾”到了小明的体验，又“照顾”了通信的安全。”\n2）安全性考虑访问令牌一定是要有有效期的，另外呢，重新获取令牌跟刷新令牌有关系，跟授权码就没有关系了。\n3）授权只有一个阶段就是【颁发访问令牌】，其余的内容都是做准备工作。授权的本质并不是建设appkey传输的次数，而是为了【减少用户名和密码的传输次数】，以便减少“攻击面”，不用每次访问订单API、商品API等等，都带着用户名和密码。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1593921037,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1226199,"avatar":"https://static001.geekbang.org/account/avatar/00/12/b5/d7/29d15a46.jpg","nickname":"挨踢青蛙","note":"","ucode":"ED1B289866016C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":289175,"discussion_content":"个人理解这里有个安全隐患：\n2）小兔后台和授权服务器做一次交互，拿到访问令牌；\n小兔后天用什么 去授权服务器 拿令牌？？ 基本得用用户名和密码吧\n那么在这个过程中小兔是不是就可以 看到拿到用户的用户名和密码了，如果小兔这个平台安全性有问题，用户的用户名和密码是不是就泄露了，或者小兔在没有征得用户同意前提下干了一些用户不知道的事情，谁说的清，是不是很可怕，这是个安全性问题","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1594017436,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1129549,"avatar":"https://static001.geekbang.org/account/avatar/00/11/3c/4d/0db7b5dc.jpg","nickname":"Stephen","note":"","ucode":"6210B499F0A8E5","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":577446,"discussion_content":"如果小兔后端不需要授权码code拿令牌，那岂不是小兔后端可以随意获取授权服务器所有用户的令牌？资源服务器的资源岂不是被脱裤了？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1656121274,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":231283,"user_name":"陈钦成","can_delete":false,"product_type":"c1","uid":1068800,"ip_address":"","ucode":"0D845A868CFB43","user_header":"https://static001.geekbang.org/account/avatar/00/10/4f/00/5d002968.jpg","comment_is_top":false,"comment_ctime":1593626818,"is_pvip":false,"replies":[{"id":"85401","content":"refresh_token 存在于授权码许可和资源拥有者凭据许可下<br>，为了不烦最终用户频繁的点击【授权】按钮动作，才有了这样的机制；<br>在 隐式许可和客户端凭据许可，这两种许可类型下，不需要refresh_token，他们可以直接根据app_id和secret来换取访问令牌，因为，1-隐式许可对任何内容都是“透明的”，也没有必要存在refresh_token，2-客户端凭据许可，既然是叫做“客户端凭据”了，在获取那些没有跟用户强关联的信息的时候，比如 国家省市信息类似的信息，其实没有用户参与的必要性，当然可以随时获取令牌。","user_name":"作者回复","user_name_real":"王新栋","uid":"1352303","ctime":1593652981,"ip_address":"","comment_id":231283,"utype":1}],"discussion_count":12,"race_medal":0,"score":"57428201666","product_id":100053901,"comment_content":"refresh_token存在的意义是什么？access_token过期了，为什么要用refresh_token去获取access_token，好像重新获取access_token也行","like_count":13,"discussions":[{"author":{"id":1352303,"avatar":"https://static001.geekbang.org/account/avatar/00/14/a2/6f/d239ed80.jpg","nickname":"王新栋","note":"","ucode":"0A5D089B8E1E9D","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":500236,"discussion_content":"refresh_token 存在于授权码许可和资源拥有者凭据许可下\n，为了不烦最终用户频繁的点击【授权】按钮动作，才有了这样的机制；\n在 隐式许可和客户端凭据许可，这两种许可类型下，不需要refresh_token，他们可以直接根据app_id和secret来换取访问令牌，因为，1-隐式许可对任何内容都是“透明的”，也没有必要存在refresh_token，2-客户端凭据许可，既然是叫做“客户端凭据”了，在获取那些没有跟用户强关联的信息的时候，比如 国家省市信息类似的信息，其实没有用户参与的必要性，当然可以随时获取令牌。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1593652981,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1980201,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/37/29/b3af57a7.jpg","nickname":"凯文小猪","note":"","ucode":"36D8AD0229547F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":554224,"discussion_content":"access_token存在的问题在于 无法控制token的回收 所以需要将token设置一个相对短的有效期。但是大部分场景是希望token可以在一段时间内反复使用 因此就设计了refresh_token。\n当有人使用refresh_token来续约时 授权服务就可以判断是401还是续租","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1646273406,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1302553,"avatar":"https://static001.geekbang.org/account/avatar/00/13/e0/19/5315e698.jpg","nickname":"水如清","note":"","ucode":"D2BA96C8EADA89","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":579004,"discussion_content":"refresh_token的过期时间一般比access_token长，有时在做某些操作时access_token刚好过期了，这时重新让用户授权体验不好，如果通过refresh_token重新无感获取access_token体验要好很多（比如下单支付时，重新授权可能用户就不买了），refresh_token间接又延长了access_token时间，如果用户比较活跃那么他的access_token可以更长时间有效。只有refresh_token、access_token都过期了才需要重新授权。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1657117749,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1344431,"avatar":"https://static001.geekbang.org/account/avatar/00/14/83/af/1cb42cd3.jpg","nickname":"马以","note":"","ucode":"3FEA06CA14DE28","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":288102,"discussion_content":"当用acess_token访问平台接口获取订单数据的时候，这里如果被黑客截获，通过重放是不是就能够拿到小明的订单信息，这里的安全性怎么保证？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1593652941,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":5,"child_discussions":[{"author":{"id":1668486,"avatar":"https://static001.geekbang.org/account/avatar/00/19/75/86/d596da7c.jpg","nickname":"ProSayJ","note":"","ucode":"3DB3CC41CD4D82","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1344431,"avatar":"https://static001.geekbang.org/account/avatar/00/14/83/af/1cb42cd3.jpg","nickname":"马以","note":"","ucode":"3FEA06CA14DE28","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":289339,"discussion_content":"同问","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1594057828,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":288102,"ip_address":""},"score":289339,"extra":""},{"author":{"id":1207622,"avatar":"https://static001.geekbang.org/account/avatar/00/12/6d/46/e16291f8.jpg","nickname":"丁小明","note":"","ucode":"CC23857B8D75D5","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1344431,"avatar":"https://static001.geekbang.org/account/avatar/00/14/83/af/1cb42cd3.jpg","nickname":"马以","note":"","ucode":"3FEA06CA14DE28","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":289360,"discussion_content":"首先acess-token是在后端传输的，不会再用户端传输，要截获只能是后端服务器被劫了。其次的话一般都是做https，截获也无法获取里面的信息只能做重放。这个就取决于开放平台对重放是否有限制，通常来说都是会有的","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1594081577,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":288102,"ip_address":""},"score":289360,"extra":""},{"author":{"id":1344431,"avatar":"https://static001.geekbang.org/account/avatar/00/14/83/af/1cb42cd3.jpg","nickname":"马以","note":"","ucode":"3FEA06CA14DE28","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1207622,"avatar":"https://static001.geekbang.org/account/avatar/00/12/6d/46/e16291f8.jpg","nickname":"丁小明","note":"","ucode":"CC23857B8D75D5","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":289451,"discussion_content":"code换access token这步还是可以被截获的吧？如果使用https的话，那这个是安全的，专门又回去看了一下超哥的https那节课，哈哈","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1594103974,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":289360,"ip_address":""},"score":289451,"extra":""}]},{"author":{"id":1184280,"avatar":"https://static001.geekbang.org/account/avatar/00/12/12/18/3fd57334.jpg","nickname":"~天了噜~","note":"","ucode":"745847776A9CD7","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":288099,"discussion_content":"重新获取当然可以，但是比直接刷新更麻烦","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1593652414,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1489957,"avatar":"https://static001.geekbang.org/account/avatar/00/16/bc/25/1c92a90c.jpg","nickname":"tt","note":"","ucode":"7753B79AD5A9AC","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":288085,"discussion_content":"refresh_token是获取access_token的凭据吧","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1593649182,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1183518,"avatar":"https://static001.geekbang.org/account/avatar/00/12/0f/1e/6b6eb987.jpg","nickname":"我们在路上","note":"","ucode":"0DB77DB7C64C47","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1489957,"avatar":"https://static001.geekbang.org/account/avatar/00/16/bc/25/1c92a90c.jpg","nickname":"tt","note":"","ucode":"7753B79AD5A9AC","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":375135,"discussion_content":"是续约的凭据，也会过期，如果过期就得重新授权","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1621493914,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":288085,"ip_address":""},"score":375135,"extra":""}]}]},{"had_liked":false,"id":232515,"user_name":"Geek_7c4953","can_delete":false,"product_type":"c1","uid":1809168,"ip_address":"","ucode":"359745D4725D4F","user_header":"","comment_is_top":false,"comment_ctime":1594025747,"is_pvip":false,"replies":[{"id":"85831","content":"OAuth 2.0 产生于第三方应用的场景，来管理对外的权限，但是它的本质思想是【用token来代替用户名和密码】。<br>对于我们内部的系统服务之间，我们可以借用OAuth 2.0的这种思想来满足我们的生产环境，比如微服务之间调用需要进行鉴权的时候，我们就可以使用这种token的机制。","user_name":"作者回复","user_name_real":"王新栋","uid":"1352303","ctime":1594035752,"ip_address":"","comment_id":232515,"utype":1}],"discussion_count":2,"race_medal":0,"score":"48838666003","product_id":100053901,"comment_content":"了解了OAuth2.0以后，就感觉本地登录不知道怎么做了。毕竟OAuth2.0有协议支撑，严谨安全，而且通用。但是小项目也搞个授权服务就有点小题大做。<br>所以，对于本地登录来说，是否可以套用OAuth2.0，需要做哪些方面的变通？又或者，是否有更合适的协议呢？","like_count":11,"discussions":[{"author":{"id":1352303,"avatar":"https://static001.geekbang.org/account/avatar/00/14/a2/6f/d239ed80.jpg","nickname":"王新栋","note":"","ucode":"0A5D089B8E1E9D","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":500675,"discussion_content":"OAuth 2.0 产生于第三方应用的场景，来管理对外的权限，但是它的本质思想是【用token来代替用户名和密码】。\n对于我们内部的系统服务之间，我们可以借用OAuth 2.0的这种思想来满足我们的生产环境，比如微服务之间调用需要进行鉴权的时候，我们就可以使用这种token的机制。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1594035752,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1008587,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/63/cb/7c004188.jpg","nickname":"和你一起搬砖的胡大爷","note":"","ucode":"54607F4E17917A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":294686,"discussion_content":"后端可以看作是资源，后端再放个授权服务，无论是web前端还是都可以看作是第三方app，然后用oauth来做authentication和authorization。web框架的oauth集成已经到了代码了，spring boot只是加个注解和url配置，自己写几行定义个登陆换token逻辑就行了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1595954591,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":231323,"user_name":"Pui","can_delete":false,"product_type":"c1","uid":1341355,"ip_address":"","ucode":"03A055EE5E2D57","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/yzDN2BI9icM32QVHuTzYibOiblQ4eX4dFgYXkd8pz3Xbxokn1OzZicysnk7zkwf8iams7ugjMK89aSHp8fzEy0JYq1w/132","comment_is_top":false,"comment_ctime":1593652083,"is_pvip":false,"replies":[{"id":"85448","content":"在后面的安全那讲中，我们也会强调这点，令牌一定要通过后端通信传输（其实也有授权许可是通过前端传输，比如隐式许可，但它是非常不安全的许可类型），我们强调OAuth 2.0的核心是令牌，不过，安全性是一个【组合性】的问题，单个信息暴露在公网一时是没有直接的问题，比如用户的手机号，被人知道了，一般情况下仅仅是被骚扰，但如果黑产拿到跟这个手机号更多关联的信息，比如订单信息，你买了什么商品都知道，这个时候用户就会有被恶意诈骗的可能。像这样的核心信息手机号也好，token也好肯定都是要重点保护的。","user_name":"作者回复","user_name_real":"王新栋","uid":"1352303","ctime":1593665380,"ip_address":"","comment_id":231323,"utype":1}],"discussion_count":6,"race_medal":0,"score":"35953390451","product_id":100053901,"comment_content":"不明白:把安全保密性要求极高的访问令牌暴露在浏览器上，请问如果把令牌暴露在前端会带来怎样的后果呢？","like_count":8,"discussions":[{"author":{"id":1352303,"avatar":"https://static001.geekbang.org/account/avatar/00/14/a2/6f/d239ed80.jpg","nickname":"王新栋","note":"","ucode":"0A5D089B8E1E9D","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":500259,"discussion_content":"在后面的安全那讲中，我们也会强调这点，令牌一定要通过后端通信传输（其实也有授权许可是通过前端传输，比如隐式许可，但它是非常不安全的许可类型），我们强调OAuth 2.0的核心是令牌，不过，安全性是一个【组合性】的问题，单个信息暴露在公网一时是没有直接的问题，比如用户的手机号，被人知道了，一般情况下仅仅是被骚扰，但如果黑产拿到跟这个手机号更多关联的信息，比如订单信息，你买了什么商品都知道，这个时候用户就会有被恶意诈骗的可能。像这样的核心信息手机号也好，token也好肯定都是要重点保护的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1593665380,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1183518,"avatar":"https://static001.geekbang.org/account/avatar/00/12/0f/1e/6b6eb987.jpg","nickname":"我们在路上","note":"","ucode":"0DB77DB7C64C47","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":375138,"discussion_content":"举个例子，你授权给三方软件可以查你的酒店开房记录，token暴露在浏览器地址栏，现在我从浏览器获取到了你的授权token，我也就可以查看你的记录了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1621494452,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1033219,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/c4/03/f753fda7.jpg","nickname":"JianXu","note":"","ucode":"2A61BDBB573BDC","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":311577,"discussion_content":"我还是没有理解 access token 通过前端返回的风险啊？黑客是怎么获取这个通过前端返回的access token 呢？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1602406731,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":3,"child_discussions":[{"author":{"id":1264481,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4b/61/762ec306.jpg","nickname":"我们的时光__","note":"","ucode":"5184EDC5CA1625","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1033219,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/c4/03/f753fda7.jpg","nickname":"JianXu","note":"","ucode":"2A61BDBB573BDC","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":346555,"discussion_content":"其实还是考虑安全性方面的原因，老师讲到access token代替了用户名和密码。你问到黑客如何获取access token就好比黑客获取用户的用户名和密码，这个对黑客来说不是难事，获取的方式也不在这里讨论的范围内。另外access token老师也说了，可以返回给前端，只不过是不安全。如果是授权码被窃取，窃取者并不能访问受保护的资源，因为换取access token除了授权码，还需要授权服务验证第三方软件的appid、secret等信息。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1611991820,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":311577,"ip_address":""},"score":346555,"extra":""},{"author":{"id":1201350,"avatar":"https://static001.geekbang.org/account/avatar/00/12/54/c6/c2481790.jpg","nickname":"lisiur","note":"","ucode":"CEB2DBCE29CAA7","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1033219,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/c4/03/f753fda7.jpg","nickname":"JianXu","note":"","ucode":"2A61BDBB573BDC","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":402756,"discussion_content":"最简单的例子：浏览器插件","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1633944260,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":311577,"ip_address":""},"score":402756,"extra":""},{"author":{"id":2055809,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/5e/81/82709d6e.jpg","nickname":"码小呆","note":"","ucode":"44532D6ABF9340","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1033219,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/c4/03/f753fda7.jpg","nickname":"JianXu","note":"","ucode":"2A61BDBB573BDC","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":589758,"discussion_content":"都暴露到浏览器了，别人还不是随便查你的数据","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1665303013,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":311577,"ip_address":"广东"},"score":589758,"extra":""}]}]},{"had_liked":false,"id":253484,"user_name":"流云","can_delete":false,"product_type":"c1","uid":2232976,"ip_address":"","ucode":"5C31C34F8B9236","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIq15Qq887bH7Z5aQHfXu5vHUj4Iz68RotmUIR12vG5Y3L7icUcYgL4hicwAKYyicAmPTtoZPNPfDPOg/132","comment_is_top":false,"comment_ctime":1602750884,"is_pvip":false,"discussion_count":5,"race_medal":0,"score":"31667521956","product_id":100053901,"comment_content":"我觉得还是没有讲到关键点上，为什么授权服务不能直接生产token，token直接暴露在浏览器中，然后第三方app通过token+appid+secret请求资源，然后平台验证token+appid+secret，这样只要appid+secret不泄漏，也是安全的啊","like_count":7,"discussions":[{"author":{"id":1201350,"avatar":"https://static001.geekbang.org/account/avatar/00/12/54/c6/c2481790.jpg","nickname":"lisiur","note":"","ucode":"CEB2DBCE29CAA7","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":547217,"discussion_content":"还有一种情况是黑客尝试破解secret时，如果拿到了 access_token 则可以无限次尝试，但如果拿到了 code 最多尝试一次。破解secret难度大大增加。从各方面角度考虑，使用一次性的code要更安全些。","likes_number":4,"is_delete":false,"is_hidden":false,"ctime":1642585407,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1201350,"avatar":"https://static001.geekbang.org/account/avatar/00/12/54/c6/c2481790.jpg","nickname":"lisiur","note":"","ucode":"CEB2DBCE29CAA7","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":547215,"discussion_content":"我觉得可以从 code 和 access_token 的不同点考虑，code 有效期短，且只能被使用一次；access_token 有效期相对较长，且可以任意次数使用。在 appid和secret没有泄露的情况下，两者确实没有啥区别，直接返回 access_token 也没关系，但如果考虑 appid和secret泄露的情况（比如开发者自盗），code 会有一定优势，因为 code 只能被使用一次，如果服务端先用了，那么万事大吉，黑客拿到code也没用；如果黑客先使用了，那么服务端在换取 access_token 时会拿到已被使用的错误，此时可以提醒用户取消授权，及时止损。","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1642584974,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1397031,"avatar":"https://static001.geekbang.org/account/avatar/00/15/51/27/f0dd6f19.jpg","nickname":"老白","note":"","ucode":"39881175152D49","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":542016,"discussion_content":"这个问题的关键在于，app端不能放 appid 和 secret，不然谁下个app破解下就获取你平台的信息了，极其危险。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1640619860,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1044995,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/f2/03/51bae73a.jpg","nickname":"海川","note":"","ucode":"9B401C948311F2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":551872,"discussion_content":"token在服务端的话，服务端可以直接用token换取用户信息，不需要secret，secret的安全有保障。而token如果放到客户端加上appid和secret进行验证反而十分危险，secret在客户端是非常容易泄露的。因为临时授权码code是一次性的，且具有较短的有效期，所以在客户端传递code是安全性最好的方式。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1645159093,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1183518,"avatar":"https://static001.geekbang.org/account/avatar/00/12/0f/1e/6b6eb987.jpg","nickname":"我们在路上","note":"","ucode":"0DB77DB7C64C47","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":375140,"discussion_content":"这里有两个问题：第一，token暴露的风险；第二，对于浏览器页面授权的，你让用户怎么回到三方软件里","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1621494696,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":231614,"user_name":"Sath","can_delete":false,"product_type":"c1","uid":1658810,"ip_address":"","ucode":"8E1F67F2162BB2","user_header":"https://static001.geekbang.org/account/avatar/00/19/4f/ba/10dc7a28.jpg","comment_is_top":false,"comment_ctime":1593737432,"is_pvip":false,"replies":[{"id":"85534","content":"Web场景下，授权码code的值是在前端通信中完成的，也就是通信载体是 浏览器，再进一步说是通过重定向完成的，所以要返回到浏览器上，第三方软件-小兔软件，它通过这样的方式拿到了授权码code的值。","user_name":"作者回复","user_name_real":"王新栋","uid":"1352303","ctime":1593755326,"ip_address":"","comment_id":231614,"utype":1}],"discussion_count":2,"race_medal":0,"score":"27363541208","product_id":100053901,"comment_content":"哥，<br>授权服务：“小兔软件，我把授权码发给浏览器了。”<br>这句话什么意思，没有get到浏览器的作用。麻烦解释一下哈😄","like_count":6,"discussions":[{"author":{"id":1352303,"avatar":"https://static001.geekbang.org/account/avatar/00/14/a2/6f/d239ed80.jpg","nickname":"王新栋","note":"","ucode":"0A5D089B8E1E9D","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":500373,"discussion_content":"Web场景下，授权码code的值是在前端通信中完成的，也就是通信载体是 浏览器，再进一步说是通过重定向完成的，所以要返回到浏览器上，第三方软件-小兔软件，它通过这样的方式拿到了授权码code的值。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1593755326,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1000853,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/45/95/9ee7d65d.jpg","nickname":"DQ","note":"","ucode":"EE3B5BF76D2D08","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":297415,"discussion_content":"1. 小兔弹出授权服务窗口\n2. 你授权后，授权服务返回一个重定向\n3. 重定向的url里面是小兔的网址并带上了code\n4. 浏览器访问URL，这时小兔从URL里面拿到code.\n\n这作者比较啰嗦，还说不到重点...","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1596911164,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":232127,"user_name":"秋克斯","can_delete":false,"product_type":"c1","uid":1246399,"ip_address":"","ucode":"5412227F1487CD","user_header":"https://static001.geekbang.org/account/avatar/00/13/04/bf/72647cfc.jpg","comment_is_top":false,"comment_ctime":1593862948,"is_pvip":false,"replies":[{"id":"85665","content":"如果是按照直接把访问令牌给的小兔的后端，就会有这样的情况：小明访问小兔，小兔重定向到了授权服务页面，这个时候小明一种【停留】在了授权服务的页面上。<br>小明被重定向到授权服务之后，小明跟小兔之间的”连接断了“，也是这个意思。","user_name":"作者回复","user_name_real":"王新栋","uid":"1352303","ctime":1593907054,"ip_address":"","comment_id":232127,"utype":1}],"discussion_count":4,"race_medal":0,"score":"23068699428","product_id":100053901,"comment_content":"老师您好，有个疑惑，按照没有授权码，我们就只能把访问令牌发给软件小兔的后端服务，但是这样小兔和用户的连接就中断了。这里没明白，我们直接把访问令牌发送给小兔后端，由小兔后端重定向到小兔前端页面不就可以了？","like_count":5,"discussions":[{"author":{"id":1352303,"avatar":"https://static001.geekbang.org/account/avatar/00/14/a2/6f/d239ed80.jpg","nickname":"王新栋","note":"","ucode":"0A5D089B8E1E9D","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":500523,"discussion_content":"如果是按照直接把访问令牌给的小兔的后端，就会有这样的情况：小明访问小兔，小兔重定向到了授权服务页面，这个时候小明一种【停留】在了授权服务的页面上。\n小明被重定向到授权服务之后，小明跟小兔之间的”连接断了“，也是这个意思。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1593907054,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2025984,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/ea/00/ebddf3a3.jpg","nickname":"一个好人","note":"","ucode":"F809A626F804F1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":297403,"discussion_content":"你所表达的最大的问题在于你的最后一句话：“由小兔后端重定向到小兔前端页面”，http协议是基于request与response进行交互的，不存在后台重定向到后台的情况，重定向一定是浏览器行为，小兔后端重定向到小兔前端页面这个过程必定经过浏览器。经过浏览器就会有泄露风险。","likes_number":4,"is_delete":false,"is_hidden":false,"ctime":1596901233,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1183518,"avatar":"https://static001.geekbang.org/account/avatar/00/12/0f/1e/6b6eb987.jpg","nickname":"我们在路上","note":"","ucode":"0DB77DB7C64C47","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2025984,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/ea/00/ebddf3a3.jpg","nickname":"一个好人","note":"","ucode":"F809A626F804F1","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":375139,"discussion_content":"正解","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1621494518,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":297403,"ip_address":""},"score":375139,"extra":""}]},{"author":{"id":1201350,"avatar":"https://static001.geekbang.org/account/avatar/00/12/54/c6/c2481790.jpg","nickname":"lisiur","note":"","ucode":"CEB2DBCE29CAA7","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":402761,"discussion_content":"按照你的想法，发送方应该是授权服务页面吧，它在服务端发送一个请求给小兔后端，如果想重定向就需要小兔后端给这个请求返回 301，并且为了能够识别当前用户，可能还得返回 cookie 相关信息，然后由授权服务器接收这个返回值并且原封不动的返回到浏览器。此时小兔的cookie 就有被泄露给授权服务器的风险。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1633944727,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":231429,"user_name":"大秦皇朝","can_delete":false,"product_type":"c1","uid":1301113,"ip_address":"","ucode":"0F72D0D2FAEAF2","user_header":"https://static001.geekbang.org/account/avatar/00/13/da/79/9b093890.jpg","comment_is_top":false,"comment_ctime":1593675036,"is_pvip":false,"replies":[{"id":"85661","content":"“有能力截取到code同样也有能力获取app_id和secret”，获取app_id和secret的难度是很大的，这些都是保存在第三方应用的服务器上面。","user_name":"作者回复","user_name_real":"王新栋","uid":"1352303","ctime":1593880121,"ip_address":"","comment_id":231429,"utype":1}],"discussion_count":8,"race_medal":0,"score":"23068511516","product_id":100053901,"comment_content":"王老师好~我想知道，如果，截获到了浏览器获取到的授权code，第一时间去授权服务换取token，这样不依旧存在风险？就是不知道会不会有这样的可能？如果有可能，那只是说通过授权码这种机制大大减少或者提高了盗取的成本，但从根本上没有解决这个安全问题呀？(前提假设是黑产已经提前获取了app_id和secret，因为我觉得有能力截取到code同样也有能力获取app_id和secret)","like_count":5,"discussions":[{"author":{"id":1637085,"avatar":"https://static001.geekbang.org/account/avatar/00/18/fa/dd/f640711f.jpg","nickname":"哈德韦","note":"","ucode":"E7C9B3D087D2D9","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":288467,"discussion_content":"第一，有能力截获 code，不一定有能力截获 app_id 和 secret。因为 secret 在服务器间传输，和浏览器所在的网络不同。\n\n第二，如果是开发者自己，拿到了 app_id 和 secret；这时还通过日志拿到了用户的 code，想以用户身份登录，也往往是不可行的，除非你抢在用户的登录请求发出来之前把 code 发出去。不然当你就会收到 code 已经被使用过了的错误。","likes_number":6,"is_delete":false,"is_hidden":false,"ctime":1593756961,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":3,"child_discussions":[{"author":{"id":1301113,"avatar":"https://static001.geekbang.org/account/avatar/00/13/da/79/9b093890.jpg","nickname":"大秦皇朝","note":"","ucode":"0F72D0D2FAEAF2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1637085,"avatar":"https://static001.geekbang.org/account/avatar/00/18/fa/dd/f640711f.jpg","nickname":"哈德韦","note":"","ucode":"E7C9B3D087D2D9","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":288684,"discussion_content":"ok 懂了😃","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1593840583,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":288467,"ip_address":""},"score":288684,"extra":""},{"author":{"id":1301113,"avatar":"https://static001.geekbang.org/account/avatar/00/13/da/79/9b093890.jpg","nickname":"大秦皇朝","note":"","ucode":"0F72D0D2FAEAF2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1637085,"avatar":"https://static001.geekbang.org/account/avatar/00/18/fa/dd/f640711f.jpg","nickname":"哈德韦","note":"","ucode":"E7C9B3D087D2D9","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":288685,"discussion_content":"谢了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1593840605,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":288467,"ip_address":""},"score":288685,"extra":""},{"author":{"id":2118334,"avatar":"https://static001.geekbang.org/account/avatar/00/20/52/be/dcf03363.jpg","nickname":"聪亮","note":"","ucode":"FDF53FE8FE7CCD","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1637085,"avatar":"https://static001.geekbang.org/account/avatar/00/18/fa/dd/f640711f.jpg","nickname":"哈德韦","note":"","ucode":"E7C9B3D087D2D9","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":552623,"discussion_content":"这个回答有说服力！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1645528061,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":288467,"ip_address":""},"score":552623,"extra":""}]},{"author":{"id":1352303,"avatar":"https://static001.geekbang.org/account/avatar/00/14/a2/6f/d239ed80.jpg","nickname":"王新栋","note":"","ucode":"0A5D089B8E1E9D","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":500300,"discussion_content":"“有能力截取到code同样也有能力获取app_id和secret”，获取app_id和secret的难度是很大的，这些都是保存在第三方应用的服务器上面。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1593880121,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":1,"child_discussions":[{"author":{"id":1066686,"avatar":"https://static001.geekbang.org/account/avatar/00/10/46/be/169f825e.jpg","nickname":"陈哆啦","note":"","ucode":"DC0D67B25D180E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1352303,"avatar":"https://static001.geekbang.org/account/avatar/00/14/a2/6f/d239ed80.jpg","nickname":"王新栋","note":"","ucode":"0A5D089B8E1E9D","race_medal":0,"user_type":2,"is_pvip":true},"discussion":{"id":533631,"discussion_content":"老师您好, 因为我也是刚接触这一块, 所以不是很了解, 这里有个疑问向您请教: 截取到code之后去授权服务是行不通的, 因为还需要app_id和secret, 那么如果不是去授权服务, 而是模拟第三方前端去请求第三方后端, 会不会有安全性问题呢? 为什么呢? 这是不是第三方自己该解决的问题? (虽然不是这个课程的内容, 但是我没有做过这方面的, 不知道该怎么解决, 希望老师可以指导一下.)","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1637919827,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":500300,"ip_address":""},"score":533631,"extra":""}]},{"author":{"id":1005391,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/57/4f/6fb51ff1.jpg","nickname":"一步","note":"","ucode":"73CEA468CE70C3","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":288274,"discussion_content":" app_secret 一般在服务端不会有数据传输的，除非代码泄漏","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1593699120,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2358307,"avatar":"https://static001.geekbang.org/account/avatar/00/23/fc/23/df9404e6.jpg","nickname":"LiuPeng","note":"","ucode":"791D9357CE84A9","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":332902,"discussion_content":"app_id也会存在服务器端吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1607391332,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":231305,"user_name":"Wechat","can_delete":false,"product_type":"c1","uid":1322986,"ip_address":"","ucode":"B03C893A015687","user_header":"https://static001.geekbang.org/account/avatar/00/14/2f/ea/c5a8fdf6.jpg","comment_is_top":false,"comment_ctime":1593650018,"is_pvip":false,"replies":[{"id":"85400","content":"OAuth 2.0的核心 归结两点的话，就是：生成access_token和使用access_token，受保护资源只能被允许使用access_token，不能被允许使用授权码。授权码仅仅是一个“中间值”。","user_name":"作者回复","user_name_real":"王新栋","uid":"1352303","ctime":1593652530,"ip_address":"","comment_id":231305,"utype":1}],"discussion_count":4,"race_medal":0,"score":"14478551906","product_id":100053901,"comment_content":"授权码暴露在浏览器的话，不也是可以拿到，然后操作用户数据吗？这和拿到access_token有什么区别。","like_count":3,"discussions":[{"author":{"id":1352303,"avatar":"https://static001.geekbang.org/account/avatar/00/14/a2/6f/d239ed80.jpg","nickname":"王新栋","note":"","ucode":"0A5D089B8E1E9D","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":500249,"discussion_content":"OAuth 2.0的核心 归结两点的话，就是：生成access_token和使用access_token，受保护资源只能被允许使用access_token，不能被允许使用授权码。授权码仅仅是一个“中间值”。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1593652530,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1068372,"avatar":"https://static001.geekbang.org/account/avatar/00/10/4d/54/9c214885.jpg","nickname":"kylexy_0817","note":"","ucode":"392DD9DD5E4B6E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":288108,"discussion_content":"只拿到授权码没用的，后端服务器间还要配置白名单，才能拿到令牌，要过微信授权就知道了","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1593653321,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1637085,"avatar":"https://static001.geekbang.org/account/avatar/00/18/fa/dd/f640711f.jpg","nickname":"哈德韦","note":"","ucode":"E7C9B3D087D2D9","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":288468,"discussion_content":"窃取了授权码，还得抢在用户前面把请求发出去才行，这很难。用户用过授权码后，你再用就不行了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1593757117,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1055475,"avatar":"https://static001.geekbang.org/account/avatar/00/10/1a/f3/41d5ba7d.jpg","nickname":"iLeGeND","note":"","ucode":"4055A628A6E97C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":288159,"discussion_content":"是不是窃取授权码可以去换token","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1593663521,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":322950,"user_name":"把头发还我","can_delete":false,"product_type":"c1","uid":1690779,"ip_address":"","ucode":"936FEBCEC4C124","user_header":"https://static001.geekbang.org/account/avatar/00/19/cc/9b/4cb06225.jpg","comment_is_top":false,"comment_ctime":1637668242,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10227602834","product_id":100053901,"comment_content":"二次重定向解释的太过于刻板了。什么用户和小兔的界面断开连接了，实现的方式多种多样。全部在小兔软件的页面实现也可以啊。<br>讲道理这课给刚入门的小白还可以，实战舒适拉胯。还不如国外友人写的技术文章来的实在<br><br>https:&#47;&#47;www.baeldung.com&#47;java-ee-oauth2-implementation","like_count":2},{"had_liked":false,"id":319553,"user_name":"Mr.x","can_delete":false,"product_type":"c1","uid":1130726,"ip_address":"","ucode":"FDA144380DB9AE","user_header":"https://static001.geekbang.org/account/avatar/00/11/40/e6/2cd0f52b.jpg","comment_is_top":false,"comment_ctime":1635847726,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"10225782318","product_id":100053901,"comment_content":"Oauth 授权码的作用？<br>授权服务器在授权后返回授权码吗，而不是 access_token，主要作用有两个方面<br>1. 根据请求授权码时指定的第三方回调地址，授权服务器可以根据回调地址进行重定向<br>2. 第三方应用拿到授权服务器生成的授权码，在第三方服务器后台使用 授权码获取 acces_token（第三方应用的 AppID+secret也要带上），相比浏览器端直接返回 access_token 更加安全！<br>","like_count":2},{"had_liked":false,"id":314661,"user_name":"天择","can_delete":false,"product_type":"c1","uid":2166878,"ip_address":"","ucode":"ED2B08DB2F2B38","user_header":"https://static001.geekbang.org/account/avatar/00/21/10/5e/42f4faf7.jpg","comment_is_top":false,"comment_ctime":1633313212,"is_pvip":true,"discussion_count":0,"race_medal":1,"score":"10223247804","product_id":100053901,"comment_content":"关于授权码本身能否被盗取的问题，除了有效期外，每个client都有client id和secret，拿到授权码code后会结合client id和secret进行验证以及请求access token。这个id和secret是每个集成oauth服务的client所必需的。在这里就是小兔软件，在开发时实现了集成京东开放授权的功能，就需要从京东那里拿到一套id和secret。因此只有code是无法获取access token的。","like_count":2},{"had_liked":false,"id":234989,"user_name":"林绵程","can_delete":false,"product_type":"c1","uid":1073233,"ip_address":"","ucode":"F3857E9BC9BE3B","user_header":"https://static001.geekbang.org/account/avatar/00/10/60/51/e21d740f.jpg","comment_is_top":false,"comment_ctime":1594864095,"is_pvip":false,"replies":[{"id":"88363","content":"access_token需要第三方软件自己管理起来，第三方软件本身直接使用微信的授权登录逻辑就可以了，每次拿着access_token去访问微信服务端的资源。","user_name":"作者回复","user_name_real":"王新栋","uid":"1352303","ctime":1596463158,"ip_address":"","comment_id":234989,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10184798687","product_id":100053901,"comment_content":"比如微信登录的场景， 一次授权完成后，access_token要给客户端吗？ 不给客户端的情况下下次客户端登录本地没有登录凭证是不是又得授权？ 或者第三方软件本色得做一套自己的授权登录逻辑把自己的凭证给到客户端而access_token只是保存在服务端做资源访问用？","like_count":2,"discussions":[{"author":{"id":1352303,"avatar":"https://static001.geekbang.org/account/avatar/00/14/a2/6f/d239ed80.jpg","nickname":"王新栋","note":"","ucode":"0A5D089B8E1E9D","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":501571,"discussion_content":"access_token需要第三方软件自己管理起来，第三方软件本身直接使用微信的授权登录逻辑就可以了，每次拿着access_token去访问微信服务端的资源。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1596463158,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":234729,"user_name":"lign","can_delete":false,"product_type":"c1","uid":1184192,"ip_address":"","ucode":"5DDDA4680B437D","user_header":"https://static001.geekbang.org/account/avatar/00/12/11/c0/1c0f00ca.jpg","comment_is_top":false,"comment_ctime":1594781671,"is_pvip":false,"replies":[{"id":"86639","content":"需要换取用户信息。<br><br>生成access_token的时候的粒度一般是app_id+用户，这样access_token和app_id+用户有个对应关系，数据服务这一层他们是不知道token的，需要解析出用户，才能调用数据的API。<br><br>一般如果有API GATEWAY 这一层的话，这个工作是在API GATEWAY来处理的，如果没有就是在受保护资源服务这层来处理。","user_name":"作者回复","user_name_real":"王新栋","uid":"1352303","ctime":1594789662,"ip_address":"","comment_id":234729,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10184716263","product_id":100053901,"comment_content":"第三方软件使用access_token访问受保户资源,受保户资源能通过access_token解析出用户信息?还是受保户资源需要拿access_token到授权服务去获取用户信息,根据access_token对应的用户信息返回用户数据?","like_count":2,"discussions":[{"author":{"id":1352303,"avatar":"https://static001.geekbang.org/account/avatar/00/14/a2/6f/d239ed80.jpg","nickname":"王新栋","note":"","ucode":"0A5D089B8E1E9D","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":501488,"discussion_content":"需要换取用户信息。\n\n生成access_token的时候的粒度一般是app_id+用户，这样access_token和app_id+用户有个对应关系，数据服务这一层他们是不知道token的，需要解析出用户，才能调用数据的API。\n\n一般如果有API GATEWAY 这一层的话，这个工作是在API GATEWAY来处理的，如果没有就是在受保护资源服务这层来处理。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1594789662,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":232024,"user_name":"往事随风，顺其自然","can_delete":false,"product_type":"c1","uid":1235692,"ip_address":"","ucode":"F266EC6B143E38","user_header":"https://static001.geekbang.org/account/avatar/00/12/da/ec/779c1a78.jpg","comment_is_top":false,"comment_ctime":1593835007,"is_pvip":false,"replies":[{"id":"85660","content":"1、若access_token已超时，那么进行refresh_token会获取一个新的access_token，新的超时时间；<br>2、若access_token未超时，那么进行refresh_token有两种结果方式：（1）会改变access_token，但超时时间会刷新，相当于续期access_token，有的开放平台是这么做的（2）更新access_token的值，我们建议【统一更新access_token的值】。<br>3、refresh_token拥有较长的有效期，当refresh_token失效后，需要用户重新授权。<br>课程中也有提到，有了refresh_token的参与，提升了用户的体验。","user_name":"作者回复","user_name_real":"王新栋","uid":"1352303","ctime":1593879995,"ip_address":"","comment_id":232024,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10183769599","product_id":100053901,"comment_content":"后台的access_token也会泄漏，什么时候需要刷新token，刷新后需要重新获取？","like_count":2,"discussions":[{"author":{"id":1352303,"avatar":"https://static001.geekbang.org/account/avatar/00/14/a2/6f/d239ed80.jpg","nickname":"王新栋","note":"","ucode":"0A5D089B8E1E9D","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":500477,"discussion_content":"1、若access_token已超时，那么进行refresh_token会获取一个新的access_token，新的超时时间；\n2、若access_token未超时，那么进行refresh_token有两种结果方式：（1）会改变access_token，但超时时间会刷新，相当于续期access_token，有的开放平台是这么做的（2）更新access_token的值，我们建议【统一更新access_token的值】。\n3、refresh_token拥有较长的有效期，当refresh_token失效后，需要用户重新授权。\n课程中也有提到，有了refresh_token的参与，提升了用户的体验。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1593879995,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":331443,"user_name":"lisiur","can_delete":false,"product_type":"c1","uid":1201350,"ip_address":"","ucode":"CEB2DBCE29CAA7","user_header":"https://static001.geekbang.org/account/avatar/00/12/54/c6/c2481790.jpg","comment_is_top":false,"comment_ctime":1642586310,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5937553606","product_id":100053901,"comment_content":"为什么要有授权码：<br><br>1. 授权操作在授权平台的网站上进行，授权平台需要重定向将用户带到第三方服务地址，同时把授权码带上。  <br><br>2. 授权码只能被使用一次，即使被泄露出去，风险也较低。（考虑黑客破解app_secret的场景）<br><br>&gt; 1. 为什么需要重定向？  <br>&gt; 授权动作是在授权服务的网址上进行的，用户授权后需要把用户的地址重定向到第三方服务的地址。  <br>&gt; 2. 为什么不把access_token直接给到第三方的后台，还要通过重定向呢？  <br>&gt; 如果授权服务器将用户重定向到第三方服务的地址的同时直接把access_token 给到第三方服务的后台，此时后台还需要异步获取信息然后将信息返回给前台，这就涉及到服务端通知的场景了，技术复杂度提升，没有必要。","like_count":2},{"had_liked":false,"id":298701,"user_name":"小袁","can_delete":false,"product_type":"c1","uid":1811495,"ip_address":"","ucode":"3F5D8721F577D9","user_header":"https://static001.geekbang.org/account/avatar/00/1b/a4/27/15e75982.jpg","comment_is_top":false,"comment_ctime":1624269010,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5919236306","product_id":100053901,"comment_content":"值了。我在网上找了半天资料都没这个详细。","like_count":1},{"had_liked":false,"id":256273,"user_name":"风轻扬","can_delete":false,"product_type":"c1","uid":1542987,"ip_address":"","ucode":"DB972F2DF059C4","user_header":"https://static001.geekbang.org/account/avatar/00/17/8b/4b/15ab499a.jpg","comment_is_top":false,"comment_ctime":1603590174,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5898557470","product_id":100053901,"comment_content":"老师讲的很好。面试被问到过，授权码的作用是什么？如果提前看了老师这一讲，我当时就可以吊打他了","like_count":1},{"had_liked":false,"id":234338,"user_name":"蒋胜琳","can_delete":false,"product_type":"c1","uid":2052127,"ip_address":"","ucode":"E0786D90BAA3A5","user_header":"https://static001.geekbang.org/account/avatar/00/1f/50/1f/5563ddc2.jpg","comment_is_top":false,"comment_ctime":1594649982,"is_pvip":false,"replies":[{"id":"86519","content":"app_secret的安全性会比较高，这个信息是在第三方软件来平台注册的时候，平台为其分配的。","user_name":"作者回复","user_name_real":"王新栋","uid":"1352303","ctime":1594703677,"ip_address":"","comment_id":234338,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5889617278","product_id":100053901,"comment_content":"作者讲的很好，作为一个新手，基本没压力，唯一的问题就是授权码和相关数据被窃取后咋办，或者说要用授权码换token，还需要那些信息，这些信息中那些是安全性较高的?","like_count":1,"discussions":[{"author":{"id":1352303,"avatar":"https://static001.geekbang.org/account/avatar/00/14/a2/6f/d239ed80.jpg","nickname":"王新栋","note":"","ucode":"0A5D089B8E1E9D","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":501356,"discussion_content":"app_secret的安全性会比较高，这个信息是在第三方软件来平台注册的时候，平台为其分配的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1594703677,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":233592,"user_name":"hk","can_delete":false,"product_type":"c1","uid":1057377,"ip_address":"","ucode":"92996CA0BCDD66","user_header":"https://static001.geekbang.org/account/avatar/00/10/22/61/580bb3c3.jpg","comment_is_top":false,"comment_ctime":1594363559,"is_pvip":false,"replies":[{"id":"86226","content":"以小兔打单软件为例，资源拥有者-&gt;在京东商城开店的商家，客户端-&gt;小兔打单软件，授权服务-&gt;开放平台的授权服务，受保护资源-&gt;开放平台的API（实际是商家的店铺产生的数据，但是以API的形式开放出去的）。你说的后两个关系是对的。","user_name":"作者回复","user_name_real":"王新栋","uid":"1352303","ctime":1594373346,"ip_address":"","comment_id":233592,"utype":1}],"discussion_count":2,"race_medal":0,"score":"5889330855","product_id":100053901,"comment_content":"老师，api开放平台本身的的角色是怎样的，比如对应关系，资源拥有者 -&gt; 开放平台本身，客户端 -&gt; 开放平台的注册用户，授权服务 -&gt; 开放平台的授权服务，受保护资源 -&gt; 开放平台的API，不知道这样理解对吗","like_count":1,"discussions":[{"author":{"id":1352303,"avatar":"https://static001.geekbang.org/account/avatar/00/14/a2/6f/d239ed80.jpg","nickname":"王新栋","note":"","ucode":"0A5D089B8E1E9D","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":501098,"discussion_content":"以小兔打单软件为例，资源拥有者-&amp;gt;在京东商城开店的商家，客户端-&amp;gt;小兔打单软件，授权服务-&amp;gt;开放平台的授权服务，受保护资源-&amp;gt;开放平台的API（实际是商家的店铺产生的数据，但是以API的形式开放出去的）。你说的后两个关系是对的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1594373346,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1057377,"avatar":"https://static001.geekbang.org/account/avatar/00/10/22/61/580bb3c3.jpg","nickname":"hk","note":"","ucode":"92996CA0BCDD66","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":290199,"discussion_content":"谢谢老师回复，我说的是直接注册开放平台，直接用开放平台的api，而不去用平台第三方应用的这种情况","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1594373956,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":360286,"user_name":"XXG","can_delete":false,"product_type":"c1","uid":1219238,"ip_address":"山东","ucode":"55258F95874BF4","user_header":"https://static001.geekbang.org/account/avatar/00/12/9a/a6/29ac6f6a.jpg","comment_is_top":false,"comment_ctime":1666401931,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1666401931","product_id":100053901,"comment_content":"老是，有个问题请教下，使用微信登录的APP，在访问自家后端API的时候如何保护这些API的访问安全？<br>以微信小程序为例，用户授权后，小程序的后端拿到了微信返回的openid+session_key，微信官方建议是不要直接把session_key返回给小程序，而是基于session_key+openid生成新的skey作为用户登录状态返回给小程序，那么这个skey是否就可以作为小程序访问自家后端API的访问令牌了呢？如果可以，这个skey的有效期如何设置呢？因为session_key的有效期微信并没有返回。","like_count":0},{"had_liked":false,"id":360223,"user_name":"王者之钻","can_delete":false,"product_type":"c1","uid":1393856,"ip_address":"广东","ucode":"D877B496829D1A","user_header":"https://static001.geekbang.org/account/avatar/00/15/44/c0/a39672a3.jpg","comment_is_top":false,"comment_ctime":1666318186,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1666318186","product_id":100053901,"comment_content":"没明白，授权码返回给小兔浏览器，别人拿到这个授权码，一样可以攻击后端呀","like_count":0},{"had_liked":false,"id":357372,"user_name":"简简单单就是幸福","can_delete":false,"product_type":"c1","uid":2740779,"ip_address":"贵州","ucode":"A08080E6FD255F","user_header":"https://static001.geekbang.org/account/avatar/00/29/d2/2b/af13fcd6.jpg","comment_is_top":false,"comment_ctime":1663208844,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1663208844","product_id":100053901,"comment_content":"没有授权码，为什么连接会断开了？搞一个长连接，这样连接不还存在吗？","like_count":0},{"had_liked":false,"id":347618,"user_name":"Sam.张朝","can_delete":false,"product_type":"c1","uid":1132448,"ip_address":"","ucode":"FB20554D94B250","user_header":"https://static001.geekbang.org/account/avatar/00/11/47/a0/f12115b7.jpg","comment_is_top":false,"comment_ctime":1654228140,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1654228140","product_id":100053901,"comment_content":"开放式API，比如一个图片展示的网站不需要用户登陆，如何防止别的开发者拿到api 自动爬取数据，接口安全如何做？带着这样的问题来学习","like_count":0},{"had_liked":false,"id":332555,"user_name":"jiangb","can_delete":false,"product_type":"c1","uid":1030861,"ip_address":"","ucode":"A09415749CA88D","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJrqLEic7DVicYY1s9ldH0vGBialDoplVGpicZUJ0Fdaklw27Frv8Ac67eicb5LibhL74SUxAzlick2nfltA/132","comment_is_top":false,"comment_ctime":1643339441,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1643339441","product_id":100053901,"comment_content":"看了两遍，有点感觉了。了解了整个流程，对各个组件的概念也比较清晰了。","like_count":0},{"had_liked":false,"id":329737,"user_name":"叶炜","can_delete":false,"product_type":"c1","uid":1903195,"ip_address":"","ucode":"055C32A35E4BCD","user_header":"https://static001.geekbang.org/account/avatar/00/1d/0a/5b/f08a2d64.jpg","comment_is_top":false,"comment_ctime":1641521499,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1641521499","product_id":100053901,"comment_content":"重定向url可以是页面，也可以是后端接口吗？有啥区别？","like_count":0},{"had_liked":false,"id":320582,"user_name":"苍旻","can_delete":false,"product_type":"c1","uid":1038122,"ip_address":"","ucode":"11442E25E90A48","user_header":"https://static001.geekbang.org/account/avatar/00/0f/d7/2a/78a0c2a4.jpg","comment_is_top":false,"comment_ctime":1636386387,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1636386387","product_id":100053901,"comment_content":"第2次阅读了，打卡一下，感觉又有了不一样的看法，感谢老师出的这门好课","like_count":0},{"had_liked":false,"id":317656,"user_name":"达叔灬","can_delete":false,"product_type":"c1","uid":2404887,"ip_address":"","ucode":"5CCBAF13548F02","user_header":"https://static001.geekbang.org/account/avatar/00/24/b2/17/3161b49c.jpg","comment_is_top":false,"comment_ctime":1634882598,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1634882598","product_id":100053901,"comment_content":"菜鸟疑问：accessToken 有后端服务获取的话 是存储在哪里 ？<br>如果当前获取订单请求完成后再次请求订单 需要再次授权吗 还是可以直接用上一次 accessToken  那么这次 accessToken  是到哪里获取的？","like_count":0},{"had_liked":false,"id":307388,"user_name":"中庸","can_delete":false,"product_type":"c1","uid":1476498,"ip_address":"","ucode":"A2E24E1CD3F82E","user_header":"https://static001.geekbang.org/account/avatar/00/16/87/92/b45e8fae.jpg","comment_is_top":false,"comment_ctime":1629077357,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1629077357","product_id":100053901,"comment_content":"王老师，咨询下，如果授权通过后，授权服务器直接将accesstoken通过后端回调传递给第三方应用同时前端重定向至第三方应用前端（不携带任何值），这样的话是不是也可以不需要code?","like_count":0,"discussions":[{"author":{"id":2694146,"avatar":"https://static001.geekbang.org/account/avatar/00/29/1c/02/5aa8b087.jpg","nickname":"Wayne👿","note":"","ucode":"A8AD5481052D9F","race_medal":1,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":550359,"discussion_content":"1. http协议是无状态的，授权服务器需要知道目标第三方对应的哪个session。也就是服务器需要维护session和第三方的关系。\n2. 已跳转回来的“第三方服务器”网页需要等待一个不知道何时才会过来的“认证服务器” Server 回调，才能告诉用户是否授权成功，这个异步的过程显然远不如同步主动去请求“认证服务器”获取方便。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1644495769,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":296100,"user_name":"仲秋廿八","can_delete":false,"product_type":"c1","uid":1151829,"ip_address":"","ucode":"B2B65D9A890969","user_header":"https://static001.geekbang.org/account/avatar/00/11/93/55/eb1f8381.jpg","comment_is_top":false,"comment_ctime":1622762749,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1622762749","product_id":100053901,"comment_content":"授权码模式生成授权链接到认证服务器，也是需要用户输入账号和密码的，对吗？","like_count":0},{"had_liked":false,"id":284197,"user_name":"码畜","can_delete":false,"product_type":"c1","uid":2064584,"ip_address":"","ucode":"44A5E9679E8EAA","user_header":"https://static001.geekbang.org/account/avatar/00/1f/80/c8/ac09f52c.jpg","comment_is_top":false,"comment_ctime":1616118730,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1616118730","product_id":100053901,"comment_content":"有个问题，我在第八步截取了access_token直接访问受保护资源，不也相当于泄露了订单数据么，受保护资源不会提供删除token的这个服务吧，这样怎么解决呢","like_count":0,"discussions":[{"author":{"id":1183518,"avatar":"https://static001.geekbang.org/account/avatar/00/12/0f/1e/6b6eb987.jpg","nickname":"我们在路上","note":"","ucode":"0DB77DB7C64C47","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":375141,"discussion_content":"资源服务器一般都是https协议，截取https请求并解析出内容？我觉得难度很大","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1621494930,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":266942,"user_name":"哄哄","can_delete":false,"product_type":"c1","uid":1029754,"ip_address":"","ucode":"CD3ECB085014EC","user_header":"https://static001.geekbang.org/account/avatar/00/0f/b6/7a/a36728fe.jpg","comment_is_top":false,"comment_ctime":1607531075,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"1607531075","product_id":100053901,"comment_content":"你好，我有个疑问：在浏览器登陆的场景，浏览器拿着授权码去请求第三方软件的后端，第三方软件的后端利用授权码去授权服务获取到access_token，第三方软件后端再拿这access_token获取受保护的资源。我的问题是：第三方软件后端需要设置一个cookie给浏览器吗？（让浏览器保持登陆的状态），如果是设置一个cookie，那么cookie是保存授权码还是access_token呢？如果两者都不是，那么一般的使用什么方式，让浏览器保持登陆的状态同时，又能关联到原来的access_token？","like_count":0,"discussions":[{"author":{"id":2055809,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/5e/81/82709d6e.jpg","nickname":"码小呆","note":"","ucode":"44532D6ABF9340","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":589767,"discussion_content":"授权码写到 heand里面呗","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1665305879,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"广东"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1798726,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/72/46/0674a5ed.jpg","nickname":"潮落舟漾","note":"","ucode":"82C4AE4BBA46A7","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":352896,"discussion_content":"1.授权码是临时的，不需要保存到cookie里。\n而且这里的授权码是授权服务生成的，历史保存了也不能在第三方软件的域名上边生效。\n2.我理解，授权码也不需要保存到cookie里，这里是浏览器，所以可以和它的web后端使用cookie维持会话。仅当需要使用此用户数据时才使用授权码去资源服务过去数据。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1614905776,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":262556,"user_name":"全麦小面包","can_delete":false,"product_type":"c1","uid":1086413,"ip_address":"","ucode":"823C65BF366097","user_header":"https://static001.geekbang.org/account/avatar/00/10/93/cd/dbafc7d1.jpg","comment_is_top":false,"comment_ctime":1605767972,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1605767972","product_id":100053901,"comment_content":"我觉得需要授权码是因为，第三方应用和授权服务之间的用户数据是隔离的，第三方应用根本不知道当前访问用户在授权服务中的用户信息，只有&quot;授权服务&quot;让用户重定向&quot;第三方应用&quot;时带上一个“授权码”，才能让第三方应用在之后的资源访问中有的放矢。","like_count":0},{"had_liked":false,"id":256481,"user_name":"大饶Raysir","can_delete":false,"product_type":"c1","uid":1589208,"ip_address":"","ucode":"0AFA191420A30D","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTITcwicqBDYzXtLibUtian172tPs7rJpqG1Vab4oGjnguA9ziaYjDCILSGaS6qRiakvRdUEhdmSG0BGPKw/132","comment_is_top":false,"comment_ctime":1603635482,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1603635482","product_id":100053901,"comment_content":"看完这章终于理解了为什么不直接发出accessToken了！","like_count":0},{"had_liked":false,"id":256477,"user_name":"大饶Raysir","can_delete":false,"product_type":"c1","uid":1589208,"ip_address":"","ucode":"0AFA191420A30D","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTITcwicqBDYzXtLibUtian172tPs7rJpqG1Vab4oGjnguA9ziaYjDCILSGaS6qRiakvRdUEhdmSG0BGPKw/132","comment_is_top":false,"comment_ctime":1603634798,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1603634798","product_id":100053901,"comment_content":"照我的理解，只要appId和appSecret不泄露，code即使用浏览器传输，存在泄露的风险也没关系。同理token直接用浏览器传输也没关系吗？","like_count":0},{"had_liked":false,"id":253479,"user_name":"流云","can_delete":false,"product_type":"c1","uid":2232976,"ip_address":"","ucode":"5C31C34F8B9236","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIq15Qq887bH7Z5aQHfXu5vHUj4Iz68RotmUIR12vG5Y3L7icUcYgL4hicwAKYyicAmPTtoZPNPfDPOg/132","comment_is_top":false,"comment_ctime":1602749956,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1602749956","product_id":100053901,"comment_content":"没搞明白为什么先获取code，再通过code获取token，为什么不能通过code和appid+secret直接访问资源服务器呢？","like_count":0,"discussions":[{"author":{"id":1099897,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c8/79/8c688b78.jpg","nickname":"Jvns","note":"","ucode":"037FFB7A321736","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":548997,"discussion_content":"如果通过code和appid+secret直接访问资源服务器，那code哪里来呢？固定？还是随机？如果是固定or随机，那为什么不直接用appid+secret就行了。所以说先获取code，可以保证这个code是资源服务器给的，而且code只能用一次。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1643506555,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":253478,"user_name":"流云","can_delete":false,"product_type":"c1","uid":2232976,"ip_address":"","ucode":"5C31C34F8B9236","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIq15Qq887bH7Z5aQHfXu5vHUj4Iz68RotmUIR12vG5Y3L7icUcYgL4hicwAKYyicAmPTtoZPNPfDPOg/132","comment_is_top":false,"comment_ctime":1602749845,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1602749845","product_id":100053901,"comment_content":"没搞明白为什么必须先获取code，然后再通过code去获取access_token，","like_count":0},{"had_liked":false,"id":252645,"user_name":"JianXu","can_delete":false,"product_type":"c1","uid":1033219,"ip_address":"","ucode":"2A61BDBB573BDC","user_header":"https://static001.geekbang.org/account/avatar/00/0f/c4/03/f753fda7.jpg","comment_is_top":false,"comment_ctime":1602417852,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1602417852","product_id":100053901,"comment_content":"老师，文章中说Oauth 解决的是授权而不是认证，那认证在哪里完成呢？还有，我们一般谈授权都会说授权用户做哪些操作，我们这里并没有谈到做哪些操作啊？","like_count":0,"discussions":[{"author":{"id":1310930,"avatar":"https://static001.geekbang.org/account/avatar/00/14/00/d2/c03f80b4.jpg","nickname":"Charles Wei","note":"","ucode":"E03E9231D2BE8D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":350365,"discussion_content":"认证是资源服务平台（京东开放平台）做的。因为用户信息是存京东上的，所以只能它来做。比如有些网站可以不需要注册用Github来登录，所以你会跳到GitHub上面登录，然后授权。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1613826511,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":252622,"user_name":"JianXu","can_delete":false,"product_type":"c1","uid":1033219,"ip_address":"","ucode":"2A61BDBB573BDC","user_header":"https://static001.geekbang.org/account/avatar/00/0f/c4/03/f753fda7.jpg","comment_is_top":false,"comment_ctime":1602406985,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1602406985","product_id":100053901,"comment_content":"老师， 为什么不设计成 京东Auth 服务直接把access token 交给 小兔打印软件的后端，同时通过前端重定向把用户导会小兔软件的前端页面（但是前端页面不含code grant ) 呢？这样做有什么问题呢？","like_count":0},{"had_liked":false,"id":247986,"user_name":"曙光","can_delete":false,"product_type":"c1","uid":1476450,"ip_address":"","ucode":"04D65BF7F19845","user_header":"https://static001.geekbang.org/account/avatar/00/16/87/62/f99b5b05.jpg","comment_is_top":false,"comment_ctime":1599967367,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1599967367","product_id":100053901,"comment_content":"APP和小程序之间的访问授权，都是类似这种，不需要浏览器，用APP代替浏览器","like_count":0},{"had_liked":false,"id":246473,"user_name":"滴掉的华丽","can_delete":false,"product_type":"c1","uid":1986199,"ip_address":"","ucode":"1F0C3B66D4AE9B","user_header":"https://static001.geekbang.org/account/avatar/00/1e/4e/97/7da630b8.jpg","comment_is_top":false,"comment_ctime":1599366171,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1599366171","product_id":100053901,"comment_content":"老师你好，第二次重定向到小兔前端，前端要调用后端接口发送给后端授权码吗","like_count":0,"discussions":[{"author":{"id":1033219,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/c4/03/f753fda7.jpg","nickname":"JianXu","note":"","ucode":"2A61BDBB573BDC","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":311589,"discussion_content":"我感觉是需要的，小兔自己的前端JS 会做这件事的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1602410877,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":246159,"user_name":"JianXu","can_delete":false,"product_type":"c1","uid":1033219,"ip_address":"","ucode":"2A61BDBB573BDC","user_header":"https://static001.geekbang.org/account/avatar/00/0f/c4/03/f753fda7.jpg","comment_is_top":false,"comment_ctime":1599192134,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1599192134","product_id":100053901,"comment_content":"老师，我们公司现在是这样的：我们提供一个Cloud Portal 来操作Cloud 的各种资源，每一类资源都有后端服务器的，而且后端服务之间还有微服务互相调用。下面是我和公司总部的安全架构的一段话：<br>Additionally if request was on-behlaf-of user (OBO), user access token needs to be passed to  get access to user’s claims and to demonstrate that user token ties back to application identity.. bur user token is needed only when OBO is in play… it is how microservices security needs to work if defense in depth is needed, else you will have to make UI application a super user owning all user resources… this is a #1 issue in security today.<br><br>我不是很清楚的点在于：我如果登陆Cloud Portal , 那我通过Auth 拿到的Token 是授权我访问Cloud Portal 的，当我想要去访问别的Cloud 资源的时候，我需要把授权给我访问Cloud Portal 的Token 换成授权我访问目标资源的Token 吗？如果不需要，岂不是Auth 给我的Token 变成了全局Token 可以直接访问所有资源，如果需要，那我每次换一个目标资源都需要重定向到Auth 拿新的授权吗？这样用户体验会很差的。而如果我不需要重定向要求用户确认授权就意味着授权服务可以默默的把授权给我访问A 的Token 换成授权给我访问B 的Token( 可能做一些IDM检查），那也就是说Cloud Portal 的Token 本质上就是超级应用了，那还安全吗？","like_count":0,"discussions":[{"author":{"id":1310930,"avatar":"https://static001.geekbang.org/account/avatar/00/14/00/d2/c03f80b4.jpg","nickname":"Charles Wei","note":"","ucode":"E03E9231D2BE8D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":350367,"discussion_content":"你这个是单点登录场景，一次登录所有其他系统都不用重新登录授权。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1613826969,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":246158,"user_name":"JianXu","can_delete":false,"product_type":"c1","uid":1033219,"ip_address":"","ucode":"2A61BDBB573BDC","user_header":"https://static001.geekbang.org/account/avatar/00/0f/c4/03/f753fda7.jpg","comment_is_top":false,"comment_ctime":1599191619,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1599191619","product_id":100053901,"comment_content":"老师，您最后讲到的不使用浏览器的微信的例子，那是不是这里的小程序前端就起到了浏览器的作用呢？所以并没有少掉了这个角色（User Agent), 只不过之前User Agent 是浏览器，现在User Agent 是小程序前端。","like_count":0},{"had_liked":false,"id":244247,"user_name":"陈东","can_delete":false,"product_type":"c1","uid":1140347,"ip_address":"","ucode":"6F5971D1C5376F","user_header":"https://static001.geekbang.org/account/avatar/00/11/66/7b/535144e8.jpg","comment_is_top":false,"comment_ctime":1598441081,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1598441081","product_id":100053901,"comment_content":"有个基础的知识点我不明白，想问下code暴露在浏览器前端是如何被盗的？我下面理解的对不对？<br>1. 放在url上肉眼偷窥屏幕就能看到<br>2. 电脑上的恶意软件或局域网恶意用户抓包窃取","like_count":0,"discussions":[{"author":{"id":1033219,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/c4/03/f753fda7.jpg","nickname":"JianXu","note":"","ucode":"2A61BDBB573BDC","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":311578,"discussion_content":"我也想知道-：）","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1602406809,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":241926,"user_name":".","can_delete":false,"product_type":"c1","uid":1544954,"ip_address":"","ucode":"0915E4C3DE38FC","user_header":"https://static001.geekbang.org/account/avatar/00/17/92/fa/25b63c06.jpg","comment_is_top":false,"comment_ctime":1597504109,"is_pvip":false,"replies":[{"id":"89361","content":"用到access_token的时候三方应用都有后端服务，三方应用跟平台之间的通信是在后端服务之间进行的。","user_name":"作者回复","user_name_real":"王新栋","uid":"1352303","ctime":1597625587,"ip_address":"","comment_id":241926,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1597504109","product_id":100053901,"comment_content":"您好，为了安全，access_token不要在浏览器显示，access_token是第三方应用服务端保存，然后服务端再携带access_token去访问受保护资源，那如果第三发应用前端类似AJAX请求不携带token信息，后端服务怎么去识别当前用户对应的token呢","like_count":0,"discussions":[{"author":{"id":1352303,"avatar":"https://static001.geekbang.org/account/avatar/00/14/a2/6f/d239ed80.jpg","nickname":"王新栋","note":"","ucode":"0A5D089B8E1E9D","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":503876,"discussion_content":"用到access_token的时候三方应用都有后端服务，三方应用跟平台之间的通信是在后端服务之间进行的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1597625587,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1544954,"avatar":"https://static001.geekbang.org/account/avatar/00/17/92/fa/25b63c06.jpg","nickname":".","note":"","ucode":"0915E4C3DE38FC","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":300614,"discussion_content":"您好，放在token出现在浏览器上不安全，cookie  session这种体系如果浏览器中的cookie被截获了，是不是也就不安全了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1598192385,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":241571,"user_name":"stg609","can_delete":false,"product_type":"c1","uid":1073025,"ip_address":"","ucode":"FB70A75A891BB8","user_header":"https://static001.geekbang.org/account/avatar/00/10/5f/81/1c614f4a.jpg","comment_is_top":false,"comment_ctime":1597357224,"is_pvip":false,"replies":[{"id":"89201","content":"是的","user_name":"作者回复","user_name_real":"王新栋","uid":"1352303","ctime":1597379147,"ip_address":"","comment_id":241571,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1597357224","product_id":100053901,"comment_content":"我看留言中提到 code 被盗的问题，但是发现大家都没有提到 redirect uri 的作用。 如果 client 在第一次重定向的时候提供了 redirect uri， 那后续在用 code 交换 token 的时候也需要提供一致的。","like_count":0,"discussions":[{"author":{"id":1352303,"avatar":"https://static001.geekbang.org/account/avatar/00/14/a2/6f/d239ed80.jpg","nickname":"王新栋","note":"","ucode":"0A5D089B8E1E9D","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":503777,"discussion_content":"是的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1597379147,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":240333,"user_name":"feihui","can_delete":false,"product_type":"c1","uid":1007294,"ip_address":"","ucode":"13F1D4A82BC650","user_header":"https://static001.geekbang.org/account/avatar/00/0f/5e/be/9ea55f46.jpg","comment_is_top":false,"comment_ctime":1596866030,"is_pvip":true,"replies":[{"id":"89091","content":"第一次是为了让用户进行授权，引到平台一方，因为需要用户在平台上面登录。第二次可以理解为”为了完成流程的串行“，“更顺溜”。","user_name":"作者回复","user_name_real":"王新栋","uid":"1352303","ctime":1597193863,"ip_address":"","comment_id":240333,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1596866030","product_id":100053901,"comment_content":"按照我的理解是要对接开发平台，应用还得先去开发平台登记，用 code 获取 token 的时候还需要附带上登记信息 ( 那么自然就只能有后段去获取 )，一方面是保证被授权方的合法来源，另一方面是保证 code 的安全性 ( 即使被偷了也无需担心 )，此外对于两次重定向，第一次是为了保证授权页面来源合法，第二次则是为了完成流程的串行。","like_count":0,"discussions":[{"author":{"id":1352303,"avatar":"https://static001.geekbang.org/account/avatar/00/14/a2/6f/d239ed80.jpg","nickname":"王新栋","note":"","ucode":"0A5D089B8E1E9D","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":503405,"discussion_content":"第一次是为了让用户进行授权，引到平台一方，因为需要用户在平台上面登录。第二次可以理解为”为了完成流程的串行“，“更顺溜”。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1597193863,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":239562,"user_name":"大大大熊myeh","can_delete":false,"product_type":"c1","uid":1139413,"ip_address":"","ucode":"4832C2E7CEB151","user_header":"https://static001.geekbang.org/account/avatar/00/11/62/d5/1f5c5ab6.jpg","comment_is_top":false,"comment_ctime":1596588106,"is_pvip":false,"replies":[{"id":"88490","content":"“这个时候小兔软件已经拿到了小明授权之后的访问令牌，也使用访问令牌获取到了小明店铺里的订单数据。这时，考虑到“小明的感受”，小兔软件应该要通知到小明，但是如何做呢？现在“连接断了”，这事儿恐怕就没那么容易了”<br><br>如果通过重定向的方式，则就很容易的把“连接”关系“还回去”。","user_name":"作者回复","user_name_real":"王新栋","uid":"1352303","ctime":1596589192,"ip_address":"","comment_id":239562,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1596588106","product_id":100053901,"comment_content":"小明和小兔的链接断了，有什么影响吗？还是没有明白一定需要授权码的第一个原因…","like_count":0,"discussions":[{"author":{"id":1352303,"avatar":"https://static001.geekbang.org/account/avatar/00/14/a2/6f/d239ed80.jpg","nickname":"王新栋","note":"","ucode":"0A5D089B8E1E9D","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":503141,"discussion_content":"“这个时候小兔软件已经拿到了小明授权之后的访问令牌，也使用访问令牌获取到了小明店铺里的订单数据。这时，考虑到“小明的感受”，小兔软件应该要通知到小明，但是如何做呢？现在“连接断了”，这事儿恐怕就没那么容易了”\n\n如果通过重定向的方式，则就很容易的把“连接”关系“还回去”。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1596589192,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1157789,"avatar":"https://static001.geekbang.org/account/avatar/00/11/aa/9d/7431e82e.jpg","nickname":"FM微言送","note":"","ucode":"8F1DB06535E196","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":554568,"discussion_content":"是不是因为http是无状态的 不能直接跟客户通讯，才有重定向？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1646469695,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":234735,"user_name":"lign","can_delete":false,"product_type":"c1","uid":1184192,"ip_address":"","ucode":"5DDDA4680B437D","user_header":"https://static001.geekbang.org/account/avatar/00/12/11/c0/1c0f00ca.jpg","comment_is_top":false,"comment_ctime":1594782064,"is_pvip":false,"replies":[{"id":"86641","content":"access_token的有效期在授权服务侧管理，也就是平台一侧，其实也谈不上管理，实际是一个时间戳，每次访问会判断时间间隔。如果想【提前】发现access_token的有效期是否到期则需要第三方软件额外的去处理，比如定时检查。<br><br>refresh_token的作用就是在access_token到期的时候，不需要用户的参与的情况下，重新获得访问令牌的值。<br><br>只会更新access_token值，不会更新access_token的过去时间。<br><br><br><br><br>","user_name":"作者回复","user_name_real":"王新栋","uid":"1352303","ctime":1594790083,"ip_address":"","comment_id":234735,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1594782064","product_id":100053901,"comment_content":"第三方服务获取到access_token后，access_token的有效期是在第三方服务管理吗？access_token有效期到期时通过refresh_token请求新access_token？还是第三方服务每一次请求都会到授权服务上更新access_token过期时间？","like_count":0,"discussions":[{"author":{"id":1352303,"avatar":"https://static001.geekbang.org/account/avatar/00/14/a2/6f/d239ed80.jpg","nickname":"王新栋","note":"","ucode":"0A5D089B8E1E9D","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":501490,"discussion_content":"access_token的有效期在授权服务侧管理，也就是平台一侧，其实也谈不上管理，实际是一个时间戳，每次访问会判断时间间隔。如果想【提前】发现access_token的有效期是否到期则需要第三方软件额外的去处理，比如定时检查。\n\nrefresh_token的作用就是在access_token到期的时候，不需要用户的参与的情况下，重新获得访问令牌的值。\n\n只会更新access_token值，不会更新access_token的过去时间。\n\n\n\n\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1594790083,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1078207,"avatar":"https://static001.geekbang.org/account/avatar/00/10/73/bf/d88217ef.jpg","nickname":"张文强","note":"","ucode":"5EFF65E8B78849","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":292431,"discussion_content":"“只会更新access_token值，不会更新access_token的过去时间” 这句话是不是不太对？是更新过期时间，不更新值吧？","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1595223176,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":234732,"user_name":"lign","can_delete":false,"product_type":"c1","uid":1184192,"ip_address":"","ucode":"5DDDA4680B437D","user_header":"https://static001.geekbang.org/account/avatar/00/12/11/c0/1c0f00ca.jpg","comment_is_top":false,"comment_ctime":1594781878,"is_pvip":false,"replies":[{"id":"86640","content":"我们常说的token和access_token, 实指一个东西，就是access_token。<br><br>传输一定要在HTTPS中进行。<br><br>第三方应用添加IP白名单也是一个安全防护的措施，开放平台也会这么做。","user_name":"作者回复","user_name_real":"王新栋","uid":"1352303","ctime":1594789814,"ip_address":"","comment_id":234732,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1594781878","product_id":100053901,"comment_content":"第三方软件前端拿到token后,传给后端,后端再去请求access_token,这两步都是http请求,都有可能被窃取的风险，是不是授权服务必须要绑定第三方服务请求access_token的域名或IP？","like_count":0,"discussions":[{"author":{"id":1352303,"avatar":"https://static001.geekbang.org/account/avatar/00/14/a2/6f/d239ed80.jpg","nickname":"王新栋","note":"","ucode":"0A5D089B8E1E9D","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":501489,"discussion_content":"我们常说的token和access_token, 实指一个东西，就是access_token。\n\n传输一定要在HTTPS中进行。\n\n第三方应用添加IP白名单也是一个安全防护的措施，开放平台也会这么做。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1594789814,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":234390,"user_name":"Geek_6a58c7","can_delete":false,"product_type":"c1","uid":1815374,"ip_address":"","ucode":"37900229ED9B3C","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTK4ibibOsboHycltqqicSIkm9eibSBu86BRNc0LQnTRTMEPGDvJXYpBicWOW4srMt7c9iaUT7b5mTmicgkjw/132","comment_is_top":false,"comment_ctime":1594683403,"is_pvip":false,"replies":[{"id":"86494","content":"第三方移动App也可以采用授权码许可流程，通过code换取access_token，然后通过access_token换取数据。","user_name":"作者回复","user_name_real":"王新栋","uid":"1352303","ctime":1594688075,"ip_address":"","comment_id":234390,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1594683403","product_id":100053901,"comment_content":"授权码是第三方app后台结合自己的app_id和secret才能转access_token，后台再根据access_token直接请求资源服务获取数据，最后返回给客户端用户","like_count":0,"discussions":[{"author":{"id":1352303,"avatar":"https://static001.geekbang.org/account/avatar/00/14/a2/6f/d239ed80.jpg","nickname":"王新栋","note":"","ucode":"0A5D089B8E1E9D","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":501375,"discussion_content":"第三方移动App也可以采用授权码许可流程，通过code换取access_token，然后通过access_token换取数据。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1594688075,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":234057,"user_name":"~天了噜~","can_delete":false,"product_type":"c1","uid":1184280,"ip_address":"","ucode":"745847776A9CD7","user_header":"https://static001.geekbang.org/account/avatar/00/12/12/18/3fd57334.jpg","comment_is_top":false,"comment_ctime":1594567479,"is_pvip":false,"replies":[{"id":"86410","content":"放在第三方软件的后台存储管理","user_name":"作者回复","user_name_real":"王新栋","uid":"1352303","ctime":1594616894,"ip_address":"","comment_id":234057,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1594567479","product_id":100053901,"comment_content":"access_token一般放在后台管理吗？还是客户端自己管理？","like_count":0,"discussions":[{"author":{"id":1352303,"avatar":"https://static001.geekbang.org/account/avatar/00/14/a2/6f/d239ed80.jpg","nickname":"王新栋","note":"","ucode":"0A5D089B8E1E9D","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":501258,"discussion_content":"放在第三方软件的后台存储管理","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1594616894,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1184280,"avatar":"https://static001.geekbang.org/account/avatar/00/12/12/18/3fd57334.jpg","nickname":"~天了噜~","note":"","ucode":"745847776A9CD7","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":290970,"discussion_content":"实际应用中发现会有很多直接把token放在客户端中进行持有管理。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1594651784,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":233811,"user_name":"青峰","can_delete":false,"product_type":"c1","uid":1215903,"ip_address":"","ucode":"6FB19A41AC7232","user_header":"https://static001.geekbang.org/account/avatar/00/12/8d/9f/776d9b2e.jpg","comment_is_top":false,"comment_ctime":1594461279,"is_pvip":false,"replies":[{"id":"86311","content":"是的","user_name":"作者回复","user_name_real":"王新栋","uid":"1352303","ctime":1594470574,"ip_address":"","comment_id":233811,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1594461279","product_id":100053901,"comment_content":"请问老师，授权码是如何由授权服务器传递给浏览器的？用重定向URL带Get参数？<br>形如： https:&#47;&#47;f.demo.com?code=&lt;value of code&gt; 这种形式？","like_count":0,"discussions":[{"author":{"id":1352303,"avatar":"https://static001.geekbang.org/account/avatar/00/14/a2/6f/d239ed80.jpg","nickname":"王新栋","note":"","ucode":"0A5D089B8E1E9D","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":501174,"discussion_content":"是的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1594470574,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":231546,"user_name":"一步","can_delete":false,"product_type":"c1","uid":1005391,"ip_address":"","ucode":"73CEA468CE70C3","user_header":"https://static001.geekbang.org/account/avatar/00/0f/57/4f/6fb51ff1.jpg","comment_is_top":false,"comment_ctime":1593703356,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1593703356","product_id":100053901,"comment_content":"使用授权码的原因 是： 在用户能正常操作的情况下，让access_token 的获取更加安全","like_count":0},{"had_liked":false,"id":231532,"user_name":"孙翠亮","can_delete":false,"product_type":"c1","uid":1473397,"ip_address":"","ucode":"3EB195BDB03711","user_header":"https://static001.geekbang.org/account/avatar/00/16/7b/75/24207465.jpg","comment_is_top":false,"comment_ctime":1593700362,"is_pvip":false,"replies":[{"id":"85741","content":"同一个组织内的服务之间，就没有必要再使用code这样的方式了。","user_name":"作者回复","user_name_real":"王新栋","uid":"1352303","ctime":1593961333,"ip_address":"","comment_id":231532,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1593700362","product_id":100053901,"comment_content":"如果用oauth2 server 作为用户登录认证的server,是否应该在后台通过password的方式去获取token,还是后台也通过code的方式获取token?","like_count":0,"discussions":[{"author":{"id":1352303,"avatar":"https://static001.geekbang.org/account/avatar/00/14/a2/6f/d239ed80.jpg","nickname":"王新栋","note":"","ucode":"0A5D089B8E1E9D","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":500336,"discussion_content":"同一个组织内的服务之间，就没有必要再使用code这样的方式了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1593961333,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]}]}