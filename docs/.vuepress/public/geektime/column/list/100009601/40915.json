{"id":40915,"title":"41 | 从小工到专家：聊聊测试执行环境的架构设计（下）","content":"<p>你好，我是茹炳晟，今天我和你分享的主题是“从小工到专家：聊聊测试执行环境的架构设计（下）”。</p>\n<p>在上一篇文章中，我介绍了测试基础架构的概念，以及早期的和经典的两种测试基础架构。在文章的最后，我提到经典的测试基础架构中采用的Selenium Grid方案，在测试用例的数量持续增加的情况下，会带来集群扩容、Jenkins Job臃肿不堪等诸多问题，因此我们考虑将Selenium Grid迁移到Docker，并且提供便于Jenkins Job管理的统一测试执行平台。</p>\n<p>所以，今天的这篇文章，我就会围绕这些瓶颈以及对应的解决方案来展开。</p>\n<h2>基于Docker实现的Selenium Grid测试基础架构</h2>\n<p>随着测试基础架构的广泛使用，以及大量的浏览器兼容性测试的需求，Selenium Grid中Node的数量会变得越来越大，也就是说我们需要维护的Selenium Node会越来越多。</p>\n<p>在Node数量只有几十台的时候，通过人工的方式去升级WebDriver、更新杀毒软件、升级浏览器版本，可能还不是什么大问题。但是，当需要维护的Node数量达到几百台甚至几千台的时候，这些Node的维护工作量就会直线上升。虽然，你可以通过传统的运维脚本管理这些Node，但维护的成本依然居高不下。</p><!-- [[[read_end]]] -->\n<p>同时，随着测试用例数量的持续增长，Selenium Node的数量也必然会不断增长，这时安装部署新Node的工作量也会难以想象。因为，每台Node无论是采用实体机还是虚拟机，都会牵涉到安装操作系统、浏览器、Java环境，以及Selenium。</p>\n<p>而目前流行的Docker容器技术，由于具有更快速的交付和部署能力、更高效的资源利用，以及更简单的更新维护能力，也就使得Docker相比于传统虚拟机而言，更加得“轻量级”。</p>\n<p>因此，<strong>为了降低Selenium Node的维护成本，我们自然而然地想到了目前主流的容器技术，也就是使用Docker代替原本的虚拟机方案。</strong></p>\n<p>基于Docker的Selenium Grid，可以从三个方面降低我们维护成本：</p>\n<ol>\n<li>\n<p>由于Docker的更新维护更简单，使得我们只要维护不同浏览器的不同镜像文件即可，而无需为每台机器安装或者升级各种软件；</p>\n</li>\n<li>\n<p>Docker轻量级的特点，使得Node的启动和挂载所需时间大幅减少，直接由原来的分钟级降到了秒级；</p>\n</li>\n<li>\n<p>Docker高效的资源利用，使得同样的硬件资源可以支持更多的Node。也就是说，我们可以在不额外投入硬件资源的情况下，扩大Selenium Grid的并发执行能力。</p>\n</li>\n</ol>\n<p>因此，现在很多大型互联网企业的测试执行环境都在向Docker过渡。</p>\n<p>而具体如何基于Docker搭建一套Selenium Grid，你可以参考我在第39篇文章<a href=\"https://time.geekbang.org/column/article/40468\">《从小作坊到工厂：什么是Selenium Grid？如何搭建Selenium Grid？》</a>中介绍的方法。由此可见，将原本基于实体机或者虚拟机实现的Selenium Grid改进成为基于Docker实现的过程也很简单、灵活。</p>\n<p>如图1所示，就是一个基于Docker实现的Selenium Grid的测试基础架构。</p>\n<p><img src=\"https://static001.geekbang.org/resource/image/56/75/56142f87923aa3c2e27746b91e2c0f75.png?wh=793*559\" alt=\"\" /></p>\n<center>图1 基于Docker实现的Selenium Grid测试基础架构</center>\n<h2>引入统一测试执行平台的测试基础架构</h2>\n<p>在实际的使用过程中，基于Docker的Selenium Grid使得测试基础架构的并发测试能力不断增强，也因此会有大量项目的大量测试用例会运行在这样的测试基础架构之上。</p>\n<p>当项目数量不多，我们可以直接通过手工配置Jenkins Job，并直接使用这些Job控制测试的发起和执行。但是，当项目数量非常多之后，测试用例的数量也会非常多，这时新的问题又来了：</p>\n<ol>\n<li>\n<p>管理和配置这些Jenkins Job的工作量会被不断放大；</p>\n</li>\n<li>\n<p>这些Jenkins Job的命名规范、配置规范等也很难实现统一管理，从而导致Jenkins中出现了大量重复和不规范的Job；</p>\n</li>\n<li>\n<p>当需要发起测试，或者新建某些测试用例时，都要直接操作Jenkins Job。而这个过程，对于不了解这些Jenkins Job细节的人（比如，新员工、项目经理、产品经理）来说，这种偏技术型的界面体验就相当不友好了。</p>\n</li>\n</ol>\n<p>为此，我们为了管理和执行这些发起测试的Jenkins Job实现了一个GUI界面系统。在这个系统中，我们可以基于通俗易懂的界面操作，完成Jenkins Job的创建、修改和调用，并且可以管理Jenkins Job的执行日志以及测试报告。</p>\n<p>这，其实就是统一测试执行平台的雏形了。</p>\n<p>有了这个测试执行平台的雏形后，我们逐渐发现可以在这个平台上做更多的功能扩展，于是这个平台就逐渐演变成了测试执行的统一入口。</p>\n<p>在这里，我列举了这个平台两个最主要的功能和创新设计，希望可以给你以及你所在公司的测试基础架构建设带来一些启发性的思考。</p>\n<p><strong>第一，测试用例的版本化管理</strong>。我们都知道，应用的开发有版本控制机制，即：每次提测、发布都有对应的版本号。所以，为了使测试用例同样可追溯，也就是希望不同版本的开发代码都能有与之对应的测试用例，很多大型企业或者大型项目都会引入测试用例的版本化管理。最简单直接的做法就是，采用和开发一致的版本号。</p>\n<p>比如，被测应用的版本是1.0.1，那么测试用例的版本也命名为1.0.1。在这种情况下，当被测应用版本升级到1.0.2的时候，我们会直接生成一个1.0.2版本的测试用例，而不应该直接修改1.0.1版本的测试用例。</p>\n<p>这样，当被测环境部署的应用版本是1.0.1的时候，我们就选择1.0.1版本的测试用例；而当被测环境部署的应用版本是1.0.2的时候，我们就相应地选择1.0.2版本的测试用例。</p>\n<p>所以，我们就在这个统一的测试执行平台中，引入了这种形式的测试用例版本控制机制，直接根据被测应用的版本自动选择对应的测试用例版本。</p>\n<p><strong>第二，提供基于Restful API的测试执行接口供CI/CD使用</strong>。这样做的原因是，测试执行平台的用户不仅仅是测试工程师以及相关的产品经理、项目经理，很多时候CI/CD流水线才是主力用户。因为，在CI/CD流水线中，每个阶段都会有不同的发起测试执行的需求。</p>\n<p>我们将测试基础架构与CI/CD流水线集成的早期实现方案是，直接在CI/CD流水线的脚本中硬编码发起测试的命令行。这种方式最大的缺点在于灵活性差：</p>\n<ul>\n<li>当硬编码的命令行发生变化，或者引入了新的命令行参数的时候，CI/CD流水线的脚本也要一起跟着修改；</li>\n<li>当引入了新的测试框架时，发起测试的命令行也是全新的，那么CI/CD流水线的脚本也必须被一起改动。</li>\n</ul>\n<p>因此，为了解决耦合性的问题，我们在这个统一的测试执行平台上，提供了基于Restful API的测试执行接口。任何时候你都可以通过一个标准的Restful API发起测试，CI/CD流水线的脚本也无须再知道发起测试的命令行的具体细节了，只要调用统一的Restful API即可。</p>\n<p>如图2所示，就是引入了统一测试执行平台的测试基础架构。</p>\n<p><img src=\"https://static001.geekbang.org/resource/image/40/43/40be3cb1a925bbcf24c2a710f0711443.png?wh=1065*559\" alt=\"\" /></p>\n<center>图2 引入统一测试执行平台的测试基础架构</center>\n<h2>基于Jenkins集群的测试基础架构</h2>\n<p>这个引入了统一测试执行平台的测试基础架构，看似已经很完美了。但是，随着测试需求的继续增长，又涌现出了新的问题：单个Jenkins成了整个测试基础架构的瓶颈节点。因为，来自于统一测试执行平台的大量测试请求，会在Jenkins上排队等待执行，而后端真正执行测试用例的Selenium Grid中很多Node处于空闲状态。</p>\n<p>为此，将测试基础架构中的单个Jenkins扩展为Jenkins集群的方案就势在必行了。如图3所示，就是基于Jenkins集群的测试基础架构。</p>\n<p><img src=\"https://static001.geekbang.org/resource/image/db/f5/db974bd10bf6146c2ad1afbdb310ccf5.png?wh=1059*546\" alt=\"\" /></p>\n<center>图3 基于Jenkins集群的的测试基础架构</center>\n<p>因为Jenkins集群中包含了多个可以一起工作的Jenkins Slave，所以大量测试请求排队的现象就再也不会出现了。</p>\n<p>而这个升级到Jenkins集群的过程中，对于Jenkins集群中Slave的数量到底多少才合适并没有定论。一般的做法是，根据测试高峰时段Jenkins中的排队数量来预估一个值。通常最开始的时候，我们会使用4个Slave节点，然后观察高峰时段的排队情况，如果还是有大量排队，就继续增加Slave节点。</p>\n<h2>测试负载自适应的测试基础架构</h2>\n<p>引入了Jenkins集群后，整个测试基础架构已经很成熟了，基本上可以满足绝大多数的测试场景了。但是，还有一个问题一直没有得到解决，那就是：Selenium Grid中Node的数量到底多少才合适？</p>\n<ul>\n<li>如果Node数量少了，那么当集中发起测试的时候，就会由于Node不够用而造成测试用例的排队等待，这种场景在互联网企业中很常见；</li>\n<li>而如果Node数量多了，虽然可以解决测试高峰时段的性能瓶颈问题，但是又会造成空闲时段的计算资源浪费问题。当测试基础架构搭建在按使用付费的云端时，计算资源的浪费就是资金浪费了。</li>\n</ul>\n<p>为了解决这种测试负载不均衡的问题，Selenium Grid的自动扩容和收缩技术就应运而生了。</p>\n<p>Selenium Grid的自动扩容和收缩技术的核心思想是，通过单位时间内的测试用例数量，以及期望执行完所有测试的时间，来动态计算得到所需的Node类型和数量，然后再基于Docker容器快速添加新的Node到Selenium Grid中；而空闲时段则去监控哪些Node在指定时间长短内没有被使用，并动态地回收这些Node以释放系统资源。</p>\n<p>通常情况下，几百乃至上千台Node的扩容都可以在几分钟内完成，Node的销毁与回收的速度同样非常快。</p>\n<p>至此，测试基础架构已经演变得很先进了，基本可以满足大型电商的测试执行需求了。测试负载自适应的测试基础架构，具体如图4所示。</p>\n<p><img src=\"https://static001.geekbang.org/resource/image/da/a4/daeb20ac9fee266ecbabbfadfa2305a4.png?wh=1021*695\" alt=\"\" /></p>\n<center>图4  测试负载自适应的测试基础架构</center>\n<h2>如何选择适合自己的测试基础架构？</h2>\n<p>现在，我已经介绍完了测试基础架构的演进，以及其中各阶段主要的架构设计思路，那么对于企业来说，应当如何选择最适合自己的测试基础架构呢？</p>\n<p>其实，对于测试基础架构的建设，我们切忌不要为了追求新技术而使用新技术，而是应该根据企业目前在测试执行环境上的痛点，来有针对性地选择与定制测试基础架构。</p>\n<p>比如，你所在的企业如果规模不是很大，测试用例执行的总数量相对较少，而且短期内也不会有大变化的情况，那么你的测试基础架构完全就可以采用经典的测试基础架构，而没必要引入Docker和动态扩容等技术。</p>\n<p>再比如，如果是大型企业，测试用例数量庞大，同时还会存在发布时段大量测试请求集中到来的情况，那么此时就不得不采用Selenium Gird动态扩容的架构了。而一旦要使用动态扩容，那么势必你的Node就必须做到Docker容器化，否则无法完全发挥自动扩容的优势。</p>\n<p>所以说，采用什么样的测试基础架构不是由技术本身决定的，而是由测试需求推动的。</p>\n<h2>总结</h2>\n<p>在今天这篇文章中，我从测试基础架构演进的视角，和你分享了测试基础架构发展的前世今生。</p>\n<p>首先，为了降低测试用例过多时Selenium Grid的维护成本，我们用Docker容器代替了经典测试基础架构中的实体机/虚拟机，形成了基于Docker实现的Selenium Grid测试基础架构。</p>\n<p>而后，我们发现测试用例的数量达到一定规模后，管理和执行发起测试的Jenkins Job成了问题。于是，我们引入了一个基于GUI界面的测试执行平台，并在其上扩展了诸如测试用例版本化、提供基于Restful API的测试执行接口等功能。从而，形成了由这个统一测试执行平台发起测试的测试基础架构形态。</p>\n<p>而为了进一步解决由单个Jenkins带来的系统瓶颈问题，我们过渡到了基于Jenkins集群的测试基础架构，通过多个同时工作的Jenkins Slave，解决了大量测试请求排队的问题。</p>\n<p>随后，为了解决Selenium Grid中Node的数量到底多少才合适的问题，我和你谈论了创新设计的Selenium Grid的自动扩容和收缩技术。至此，测试负载自适应的测试基础架构也终于“千呼万唤始出来”了。</p>\n<p>最后，我谈论了不同企业该如何选择最适合自己的测试基础架构的问题。这里，我强调了一定要根据测试需求选择测试基础架构，而不能一味地追求最新的技术。</p>\n<p>我希望通过这种授人以渔的方式，可以帮你拓宽思路，并将测试基础架构的设计思路、思想，运用到你的实际工作中去。</p>\n<h2>思考题</h2>\n<p>其实，在我讲述的这个测试基础架构的设计和搭建过程中，还有很多可以优化和创新的点。你觉得哪些部分可以再优化呢？你还有哪些想法呢？</p>\n<p>欢迎你给我留言，我们一起讨论。</p>\n<p></p>\n","neighbors":{"left":{"article_title":"40 | 从小工到专家：聊聊测试执行环境的架构设计（上）","id":40582},"right":{"article_title":"42 | 实战：大型全球化电商的测试基础架构设计","id":41014}},"comments":[{"had_liked":false,"id":114468,"user_name":"CoolPanda","can_delete":false,"product_type":"c1","uid":1156121,"ip_address":"","ucode":"8EABAF97BE952A","user_header":"https://static001.geekbang.org/account/avatar/00/11/a4/19/e09d3529.jpg","comment_is_top":false,"comment_ctime":1563322629,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"23038159109","product_id":100009601,"comment_content":"不知道老师还会不会继续回复这里的问题？<br>selenium-grid有个巨大的问题就是原生没有安全性选项，部署之后，所有能访问到console的URL的人都可以直接调用。请问老师是否真的在ebay内部大规模使用了，是自研二次开发了安全借口，还是借助防火墙网关等网络手段来控制访问？<br>谢谢。","like_count":5,"discussions":[{"author":{"id":1628299,"avatar":"https://static001.geekbang.org/account/avatar/00/18/d8/8b/d81769bf.jpg","nickname":"太匆匆","note":"","ucode":"2F3F273CB65F5D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":385993,"discussion_content":"不直接开放selenium Grid的端口，通过中转或代理的方式可以实现你所说的安全性问题吧","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1627374811,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":29457,"user_name":"mgxian","can_delete":false,"product_type":"c1","uid":1014806,"ip_address":"","ucode":"7B7E77E6A83B87","user_header":"https://static001.geekbang.org/account/avatar/00/0f/7c/16/4d1e5cc1.jpg","comment_is_top":false,"comment_ctime":1538380448,"is_pvip":false,"replies":[{"id":"10849","content":"是的，k8s的确是个很棒的方案，但是我们没有采用的主要原因在于测试执行集群的我规模并没有大到非k8s不可，实施k8s的投入还是比较大的，如果后续集群规模继续扩大，我们就会考虑引入k8s，总之一句话就是工程上我们不求最先进，只求够用就好的原则","user_name":"作者回复","user_name_real":"dhrbc","uid":"1002226","ctime":1538698767,"ip_address":"","comment_id":29457,"utype":1}],"discussion_count":1,"race_medal":0,"score":"18718249632","product_id":100009601,"comment_content":"我觉得可以整合现在大热的k8s实现自动扩缩容","like_count":4,"discussions":[{"author":{"id":1002226,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/4a/f2/6ea13762.jpg","nickname":"茹炳晟","note":"","ucode":"1361AE1931E2DD","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":425618,"discussion_content":"是的，k8s的确是个很棒的方案，但是我们没有采用的主要原因在于测试执行集群的我规模并没有大到非k8s不可，实施k8s的投入还是比较大的，如果后续集群规模继续扩大，我们就会考虑引入k8s，总之一句话就是工程上我们不求最先进，只求够用就好的原则","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1538698767,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":95132,"user_name":"口水窝","can_delete":false,"product_type":"c1","uid":1004838,"ip_address":"","ucode":"6028B5AA10D8A1","user_header":"https://static001.geekbang.org/account/avatar/00/0f/55/26/154f9578.jpg","comment_is_top":false,"comment_ctime":1557972526,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"14442874414","product_id":100009601,"comment_content":"看完了演进的过程，有种酣畅淋漓，大快人心的感觉，在技术飞速发展分时代，作者能够把这些事件的东西通过原理的形式展现出来，点赞！再有疑问，对于这些演进的原材料，是从官方文档了解来的吗？","like_count":3},{"had_liked":false,"id":96868,"user_name":"Robert小七","can_delete":false,"product_type":"c1","uid":1165254,"ip_address":"","ucode":"6BBF4674673AF5","user_header":"https://static001.geekbang.org/account/avatar/00/11/c7/c6/35cc7c7c.jpg","comment_is_top":false,"comment_ctime":1558525913,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10148460505","product_id":100009601,"comment_content":"现在的公司用的基础架构和这个很像，但是多了基础用例，配置管理，mock，性能，等。可以算是一个真正的devops平台了！","like_count":2},{"had_liked":false,"id":87997,"user_name":"楚耳","can_delete":false,"product_type":"c1","uid":1068208,"ip_address":"","ucode":"7661633F3297C6","user_header":"https://static001.geekbang.org/account/avatar/00/10/4c/b0/f22017b0.jpg","comment_is_top":false,"comment_ctime":1555804996,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"5850772292","product_id":100009601,"comment_content":"老师这套环境只能支持基于seleium的ui脚本执行，换其它脚本就行不通了，如果是自己基于python写的接口脚本呢，有什么好的分布式执行框架吗？","like_count":1,"discussions":[{"author":{"id":1672674,"avatar":"https://static001.geekbang.org/account/avatar/00/19/85/e2/540b91fa.jpg","nickname":"凯耐","note":"","ucode":"DF9C2170509BD0","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":319189,"discussion_content":"接口测试速度快，耗时少。早期的测试基础架构完全可以应对接口自动化测试","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1603960124,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":30647,"user_name":"无心","can_delete":false,"product_type":"c1","uid":1036884,"ip_address":"","ucode":"D1C3EBA4DF798E","user_header":"https://static001.geekbang.org/account/avatar/00/0f/d2/54/3fa394b4.jpg","comment_is_top":false,"comment_ctime":1538965118,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5833932414","product_id":100009601,"comment_content":"CI 持续集成，在工作环境中，确实很方便，跟踪项目质量测试结果，敏捷测试 快速的迭代","like_count":1},{"had_liked":false,"id":30467,"user_name":"Jecy-8","can_delete":false,"product_type":"c1","uid":1016276,"ip_address":"","ucode":"2AE1575B9E63A6","user_header":"https://static001.geekbang.org/account/avatar/00/0f/81/d4/e92abeb4.jpg","comment_is_top":false,"comment_ctime":1538879418,"is_pvip":false,"replies":[{"id":"11360","content":"cicd并不是这个专栏的重点内容，而且cicd不是靠一个工具就可以实现的，都是完整的一套工具链体系。","user_name":"作者回复","user_name_real":"dhrbc","uid":"1002226","ctime":1539251149,"ip_address":"","comment_id":30467,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5833846714","product_id":100009601,"comment_content":"CI-CD这块老师能不能再深入讲解一下，比如有没有用到可视化的工具来集成","like_count":1,"discussions":[{"author":{"id":1002226,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/4a/f2/6ea13762.jpg","nickname":"茹炳晟","note":"","ucode":"1361AE1931E2DD","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":426014,"discussion_content":"cicd并不是这个专栏的重点内容，而且cicd不是靠一个工具就可以实现的，都是完整的一套工具链体系。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1539251149,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":29437,"user_name":"Robert小七","can_delete":false,"product_type":"c1","uid":1165254,"ip_address":"","ucode":"6BBF4674673AF5","user_header":"https://static001.geekbang.org/account/avatar/00/11/c7/c6/35cc7c7c.jpg","comment_is_top":false,"comment_ctime":1538372601,"is_pvip":false,"replies":[{"id":"10851","content":"大的互联网企业基本都是必须要有的，否则很难支持快速的迭代与发布","user_name":"作者回复","user_name_real":"dhrbc","uid":"1002226","ctime":1538698868,"ip_address":"","comment_id":29437,"utype":1}],"discussion_count":2,"race_medal":0,"score":"5833339897","product_id":100009601,"comment_content":"这一套架构估计能用到的企业也不多了","like_count":1,"discussions":[{"author":{"id":1002226,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/4a/f2/6ea13762.jpg","nickname":"茹炳晟","note":"","ucode":"1361AE1931E2DD","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":425603,"discussion_content":"大的互联网企业基本都是必须要有的，否则很难支持快速的迭代与发布","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1538698868,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1672674,"avatar":"https://static001.geekbang.org/account/avatar/00/19/85/e2/540b91fa.jpg","nickname":"凯耐","note":"","ucode":"DF9C2170509BD0","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":319186,"discussion_content":"能用到测试负载自适应的架构都是国内知名互联网公司了，大部分应该是早期的测试基础架构。大部分公司也不做UI自动化产出收益比较少，产品迭代快页面元素总在改，需要大量人力维护。做接口自动化早期的测试基础架构应该完全可以应对","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1603959658,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":350343,"user_name":"Simon","can_delete":false,"product_type":"c1","uid":2747250,"ip_address":"","ucode":"588BDCF2385C66","user_header":"https://static001.geekbang.org/account/avatar/00/29/eb/72/d2156fff.jpg","comment_is_top":false,"comment_ctime":1656836768,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1656836768","product_id":100009601,"comment_content":"老师，有个疑问想请问下，“测试架构”跟“测试基础架构”是一回事吗？测试基础架构篇学习下来，文章中提到“测试基础架构”是广义上的测试执行环境，那“测试架构”是否包含“测试基础架构”呢？","like_count":0},{"had_liked":false,"id":349367,"user_name":"yanzhang","can_delete":false,"product_type":"c1","uid":1547173,"ip_address":"","ucode":"0E9E3BC7C4FBE7","user_header":"https://static001.geekbang.org/account/avatar/00/17/9b/a5/5df18431.jpg","comment_is_top":false,"comment_ctime":1655911583,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1655911583","product_id":100009601,"comment_content":"docker不是只能部署在Linux上吗？node能启动带UI界面的浏览器吗？","like_count":0},{"had_liked":false,"id":337017,"user_name":"小呀么小二郎","can_delete":false,"product_type":"c1","uid":1326905,"ip_address":"","ucode":"149540DCFDF43E","user_header":"https://static001.geekbang.org/account/avatar/00/14/3f/39/b1558fc9.jpg","comment_is_top":false,"comment_ctime":1646554024,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1646554024","product_id":100009601,"comment_content":"萝卜青菜，各取所需～","like_count":0},{"had_liked":false,"id":332567,"user_name":"大宽","can_delete":false,"product_type":"c1","uid":1071011,"ip_address":"","ucode":"12970A21E939EA","user_header":"https://static001.geekbang.org/account/avatar/00/10/57/a3/c4d8fd6b.jpg","comment_is_top":false,"comment_ctime":1643344297,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1643344297","product_id":100009601,"comment_content":"Selenium Grid 可以用于api 测试吗","like_count":0},{"had_liked":false,"id":320770,"user_name":"Geek_7a2d06","can_delete":false,"product_type":"c1","uid":2752177,"ip_address":"","ucode":"372E43589BB7F0","user_header":"","comment_is_top":false,"comment_ctime":1636508790,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1636508790","product_id":100009601,"comment_content":"跟我们公司的单元测试基础平台很像，终于理解了","like_count":0},{"had_liked":false,"id":299395,"user_name":"tongzh","can_delete":false,"product_type":"c1","uid":1041904,"ip_address":"","ucode":"EEB48527EFCE3A","user_header":"https://static001.geekbang.org/account/avatar/00/0f/e5/f0/fad6bf9e.jpg","comment_is_top":false,"comment_ctime":1624610359,"is_pvip":true,"discussion_count":1,"race_medal":0,"score":"1624610359","product_id":100009601,"comment_content":"Jenkins本身就可以提供Restful API供创建和调度Job，和这里讲的统一测试执行平台上提供的Restful API的功能有何异同？","like_count":0,"discussions":[{"author":{"id":2075758,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83erxoYtcWAPicFyjic3wIibIia4TYOhPEYnTJqAiarVhuzolFYm9sp9NbNcdUrncsPe91icT565mjBvd10Aw/132","nickname":"Geek_c1d53c","note":"","ucode":"B4BD753831D237","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":406618,"discussion_content":"Jenkins的API并不是所有人都有掌握的，统一测试平台里的API是基于平台功能的，也可以是基于Jenkins API的封装，这里所有的入口都是统一测试平台了，而不需要其它人员再和Jenkins打交道了","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1634806966,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":251213,"user_name":"Geek_a4cca6","can_delete":false,"product_type":"c1","uid":2136813,"ip_address":"","ucode":"68B3E4FDECFFF0","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/5GQZCecntmOibVjWkMWVnibqXEZhAYnFiaRkgfAUGdrQBWzfXjqsYteLee6afDEjvBLBVa5uvtWYTTicwO2jKia0zOw/132","comment_is_top":false,"comment_ctime":1601425576,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1601425576","product_id":100009601,"comment_content":"有些脚本案例是不允许并发跑的","like_count":0},{"had_liked":false,"id":240575,"user_name":"捷后愚生","can_delete":false,"product_type":"c1","uid":1170483,"ip_address":"","ucode":"A1F935D39C8488","user_header":"https://static001.geekbang.org/account/avatar/00/11/dc/33/a68c6b26.jpg","comment_is_top":false,"comment_ctime":1596981292,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1596981292","product_id":100009601,"comment_content":"老师这篇文章把整个测试执行环境架构讲清楚了，原来测试执行环境架构是一路演变，不断完善的过程。<br>测试用例版本，是一点启发。现在所在项目并没有对测试用例规定版本，代码部署也没有版本概念，都是用缺陷来跟踪，这次部署后哪些缺陷可以验证修复。","like_count":0},{"had_liked":false,"id":192386,"user_name":"Geek_bd7eb1","can_delete":false,"product_type":"c1","uid":1250635,"ip_address":"","ucode":"E7B29EFBB41D64","user_header":"https://static001.geekbang.org/account/avatar/00/13/15/4b/dc4fb21c.jpg","comment_is_top":false,"comment_ctime":1584848381,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1584848381","product_id":100009601,"comment_content":"目前多数还是用的jekens","like_count":0},{"had_liked":false,"id":72593,"user_name":"Lily🎵","can_delete":false,"product_type":"c1","uid":1258635,"ip_address":"","ucode":"BA9FF5199D98A8","user_header":"https://static001.geekbang.org/account/avatar/00/13/34/8b/de0ea38e.jpg","comment_is_top":false,"comment_ctime":1551674314,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1551674314","product_id":100009601,"comment_content":"sqlmap支持其他类型的数据库hive、Libra、hadoop这些吗？","like_count":0},{"had_liked":false,"id":60455,"user_name":"年轻人的瞎折腾^.","can_delete":false,"product_type":"c1","uid":1266462,"ip_address":"","ucode":"179997C9622609","user_header":"https://static001.geekbang.org/account/avatar/00/13/53/1e/7d098b33.jpg","comment_is_top":false,"comment_ctime":1547474120,"is_pvip":false,"discussion_count":0,"race_medal":1,"score":"1547474120","product_id":100009601,"comment_content":"想知道ci，cd在这里面扮演什么角色，会在测试框架那个流程使用，可以在哪里看相关内容，最近工作最新有用到","like_count":0},{"had_liked":false,"id":44607,"user_name":"小老鼠","can_delete":false,"product_type":"c1","uid":1257460,"ip_address":"","ucode":"C663A0C863A515","user_header":"https://static001.geekbang.org/account/avatar/00/13/2f/f4/2dede51a.jpg","comment_is_top":false,"comment_ctime":1543462301,"is_pvip":false,"replies":[{"id":"15922","content":"没有开源，目前看selenium还是比较靠谱的方案","user_name":"作者回复","user_name_real":"dhrbc","uid":"1002226","ctime":1543469464,"ip_address":"","comment_id":44607,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1543462301","product_id":100009601,"comment_content":"1、你们这个平台是开源的吗？若是我想要份<br>2、selenium 我不太喜欢，里面问题好多。比如IE浏览器对于复杂页面，比如淘宝、京东首页无法获得元素，同样Chrome、FireFox就没问题","like_count":0,"discussions":[{"author":{"id":1002226,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/4a/f2/6ea13762.jpg","nickname":"茹炳晟","note":"","ucode":"1361AE1931E2DD","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":430805,"discussion_content":"没有开源，目前看selenium还是比较靠谱的方案","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543469464,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":39312,"user_name":"胖虫子","can_delete":false,"product_type":"c1","uid":1100956,"ip_address":"","ucode":"21FC09D0121B4F","user_header":"https://static001.geekbang.org/account/avatar/00/10/cc/9c/ec71155f.jpg","comment_is_top":false,"comment_ctime":1542246291,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1542246291","product_id":100009601,"comment_content":"一般能用jenkins就狠很可以了，要到最后两层，得很大的企业才行","like_count":0},{"had_liked":false,"id":36906,"user_name":"夏洛克的救赎","can_delete":false,"product_type":"c1","uid":1021334,"ip_address":"","ucode":"44453DD27A3216","user_header":"https://static001.geekbang.org/account/avatar/00/0f/95/96/0020bd67.jpg","comment_is_top":false,"comment_ctime":1541384264,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1541384264","product_id":100009601,"comment_content":"如何理解挡板测试呢？  ","like_count":0},{"had_liked":false,"id":34360,"user_name":"才子","can_delete":false,"product_type":"c1","uid":1195046,"ip_address":"","ucode":"3B3422DA9AC8FA","user_header":"https://static001.geekbang.org/account/avatar/00/12/3c/26/ef973b79.jpg","comment_is_top":false,"comment_ctime":1540126926,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1540126926","product_id":100009601,"comment_content":"老师说的这个，对于接口测试也是这个思路吗？在接口测试中有类似selenium grid的分布式框架吗？","like_count":0,"discussions":[{"author":{"id":1672674,"avatar":"https://static001.geekbang.org/account/avatar/00/19/85/e2/540b91fa.jpg","nickname":"凯耐","note":"","ucode":"DF9C2170509BD0","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":319190,"discussion_content":"接口测试响应速度快，不像UI自动化有时一个用例执行半个小时，没必要使用分布式并发执行","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1603960311,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]}]}