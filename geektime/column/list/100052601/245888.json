{"id":245888,"title":"10 | 语言的实现：运行时，软件设计的地基","content":"<p>你好！我是郑晔。</p><p>通过前两讲的学习，相信你已经对程序设计语言有了全新的认识。我们知道了，在学习不同的程序设计语言时，可以相互借鉴优秀的设计。但是要借鉴，除了模型和接口，还应该有实现。所以，这一讲，我们就来谈谈程序设计语言的实现。</p><p>程序设计语言的实现就是支撑程序运行的部分：运行时，也有人称之为运行时系统，或运行时环境，它主要是为了实现程序设计语言的执行模型。</p><p>相比于语法和程序库，我们在学习语言的过程中，对运行时的关注较少。因为不理解语言的实现依然不影响我们写程序，那我们为什么还要学习运行时呢？</p><p>因为<strong>运行时，是我们做软件设计的地基。</strong>你可能会问，软件设计的地基不应该是程序设计语言本身吗？并不是，一些比较基础的设计，仅仅了解到语言这个层面是不够的。</p><p>我用个例子来进行说明，我曾经参与过一个开源项目：在JVM上运行Ruby。这种行为肯定不是 Java语言支持的，为了让Ruby能够运行在JVM上，我们将Ruby的代码编译成了Java的字节码，而字节码就属于运行时的一部分。</p><p>你看，<strong>做设计真正的地基，并不是程序设计语言，而是运行时，有了对于运行时的理解，我们甚至可以做出语言本身不支持的设计</strong>。而且理解了运行时，我们可以成为一个更好的程序员，真正做到对自己编写的代码了如指掌。</p><!-- [[[read_end]]] --><p>不过，运行时的知识很长一段时间内都不是显学，我初学编程时，这方面的资料并不多。不过，近些年来，这方面明显得到了改善，各种程序设计语言运行时的资料开始多了起来。尤其在Java社区，JVM相关的知识已经成为很多程序员面试的重要组成部分。没错，JVM就是一种运行时。</p><p>接下来，我们就以JVM为例，谈谈怎样了解运行时。</p><h2>程序如何运行</h2><p>首先，我们要澄清一点，对于大部分普通程序员来说，学习运行时并不是为了成为运行时的开发者，我们只是为了更好地理解自己写的程序是如何运行的。</p><p>运行时的相关知识很多，而<strong>“程序如何运行”</strong>本身就是一条主线，将各种知识贯穿起来。程序能够运行，前提条件是，它是一个可执行的文件，我们就从这里开始。</p><p>一般来说，可执行的程序都是有一个可执行文件的结构，对应到JVM上，就是类文件的结构。然后，可执行程序想要执行，需要有一个加载器将它加载到内存里，这就是JVM类加载器的工作。</p><p>加载是一个过程，那么加载的结果是什么呢？就是按照程序运行的需求，将加载过来的程序放到对应的位置上，这就需要了解JVM的内存布局，比如，程序动态申请的内存都在堆上，为了支持方法调用要有栈，还要有区域存放我们加载过来的程序，诸如方法区等等。</p><p>到这里，程序完成了加载，做好了运行的准备，但这只是静态的内容。接下来，你就需要了解程序在运行过程中的表现。一般来说，执行过程就是设置好程序计数器（Program Counter，PC），然后开始按照指令一条一条地开始执行。所以，重点是要知道这些指令到底做了什么。</p><p>在Java中，我们都知道，程序会编译成字节码，对于Java来说，字节码就相当于汇编，其中的指令就是Java程序执行的基础。所以，突破口就在于<strong>了解指令是如何执行的</strong>。</p><p>其实，大部分JVM指令理解起来都很简单，尤其在你了解内存布局之后。比如，加法指令就是在栈上取出两个数，相加之后，再放回栈里面。</p><p>我要提一个看上去很简单的指令，它是一根拴着牛的绳子，这就是new，没错，就是创建对象的指令。那头牛就是内存管理机制，也就是很多人熟悉的GC，这是一个很大的主题，如果展开来看的话，也是一个庞杂的知识体系。</p><p>有了对指令的理解，就对Java程序执行有了基本的理解。剩下的就可以根据自己的需要，打开一些被语法和程序库隐藏起来的细节。比如，synchronized是怎样实现的，顺着这条线，我们可以走到内存模型（Java Memory Model，JMM）。</p><p>当然，这里的内容并不是为了与你详细讨论JVM的实现，无论是哪个知识点真正展开后，实际上都还会有很多的细节。</p><p>这里只是以JVM为例进行讲解，学习其他语言的运行时也是类似的，带着“程序如何运行”这个问题去理解就好了。只不过，每种语言的执行模型是不同的，需要了解的内容也是有所差异的。比如，理解C的运行时，你需要知道更多计算机硬件本身的特性，而理解一些动态语言的运行时，则需要我们对语法树的结构有一定认识。</p><p>有了对运行时的理解，我们就可以把一些好的语言模型借鉴到自己的语言中，比如，使用C语言编程时，我们可以实现多态，做法就是自己实现一个虚拟表，这就是面向对象语言实现多态的一种方案。</p><p><strong>运行时的编程接口</strong></p><p>我们前面说过，做软件设计的地基是运行时，那怎样把我们的设计构建在运行时之上呢？这就要依赖于运行时给我们提供的接口了。所以，我们学习运行时，除了要理解运行时本身的机制之外，还要掌握运行时提供的编程接口。</p><p>在Java中，最简单的运行时接口就是运行时类型识别的能力，也就是很多人熟悉的getClass。通过这个接口，我们可以获取到类的信息，一些程序库的实现就会利用类自身声明的信息。比如，之前说过，有些程序库会利用Annotation进行声明式编程，这样的程序库往往会在运行的过程中，以getClass为入口进行一系列操作将Annotation取出来，然后做相应的处理。</p><p>当然，这样的接口还有很多，一部分是以标准库的方式提供的，比如，动态代理。通过阅读JDK的文档，我们很容易学会怎么去运用这些能力。还有一部分接口是以规范的方式提供的，需要你对JVM有着更好的理解才能运用自如，比如，字节码。</p><p>前面我们说了，通过了解指令的执行方式，可以帮助我们更好地理解运行时的机制。有了这些理解，再来看字节码，理解的门槛就大幅度地降低了。</p><p>如果站在字节码的角度思考问题，我们甚至可以创造出一些Java语言层面没有提供的能力，比如，有的程序库给Java语言扩展AOP（Aspect-oriented programming，面向切面编程）的能力。这样一来，你写程序的极限就不再是语言本身了，而是变成了字节码的能力极限。</p><p>给你举个例子，比如，Java 7发布的时候，字节码定义了InvokeDynamic这个新指令，当时语言层面上并没有提供任何的语法。如果你需要，就可以自己编写字节码使用这个新指令，像JRuby、Jython、Groovy 等一些基于JVM的语言，开发者就可以利用这个指令改善自己的运行时实现。当然InvokeDynamic的诞生，本身就是为了在JVM上更好地支持动态语言。</p><p>好消息是，操控字节码这件事的门槛也在逐渐降低。最开始，操作字节码是一件非常神秘的事情，在许多程序员看来，那是只有 SUN 工程师才能做的事情（那时候，Java还属于 SUN）。</p><p>后来，出现了一个叫<a href=\"https://asm.ow2.io/\">ASM</a>的程序库，把字节码拉入了凡间，越来越多的程序员开始拥有操作字节码的能力。不过，使用ASM，依然要对类文件的结构有所理解，用起来还是比较麻烦。后来又出现了各种基于ASM的改进，现在我个人用得比较多的是<a href=\"https://bytebuddy.net/\">ByteBuddy</a>。</p><p>有了对于字节码的了解，在Java这种静态的语言上，就可以做出动态语言的一些效果。比如，Java语言的一些Mock框架，为什么可以只声明接口就能够执行，因为背后常常是动态生成了一个类。</p><p>一些动态语言为了支持自己的动态特性，也提供了一些运行时的接口给开发者。比如，Ruby里面很著名的method_missing，很多框架用它实现了一些效果，即便你未定义方法也能够执行的。你也许想到了，我们提到过的Ruby on Rails中各种find_by方法就可以用它来实现。</p><p>method_missing其实就是一个回调方法，当运行时在进行方法查找时，如果找不到对应方法时就调用语言层面的这个方法。所以，你看出来了，这就是运行时和语言互相配合的产物。如果你能够对于方法查找的机制有更具体的了解，使用起来就可以更加地得心应手，就能实现出一些非常好的设计。</p><h2>总结时刻</h2><p>今天，我们讨论了程序设计语言的实现：运行时。<strong>对于运行时的理解，我们甚至可以做出语言本身不支持的设计。所以，做设计真正的地基，并不是程序设计语言，而是运行时。</strong></p><p>理解运行时，可以将<strong>“程序如何运行”</strong>作为主线，将相关的知识贯穿起来。我们从了解可执行文件的结构开始，然后了解程序加载机制，知道加载器的运作和内存布局。然后，程序开始运行，我们要知道程序的运行机制，了解字节码，形成一个整体认识。最后，还可以根据需要展开各种细节，做深入的了解。</p><p>有一些语言的运行时还提供了一些语言层面的编程接口，程序员们可以与运行时进行交互，甚至拥有超过语言本身的能力。这些接口有的是以程序库的方式提供，有的则是以规范的方式提供。如果你是一个程序库的开发者，这些接口可以帮助你写出更优雅的程序。</p><p>关于程序设计语言的介绍，我用了三讲分别从模型、接口和实现等不同的角度给你做了介绍。目的无非就是一个，想做好设计，不仅仅要有设计的理念，更要有实际落地的方式。下一讲，我们来讲一个你可以在项目中自己设计的语言：DSL。</p><p>如果今天的内容你只能记住一件事，那请记住：<strong>把运行时当作自己设计的地基，不受限于语言。</strong></p><p><img src=\"https://static001.geekbang.org/resource/image/0a/d9/0ac9b789f401a370ff91b4bd495417d9.jpg?wh=2323*867\" alt=\"\"></p><h2>思考题</h2><p>最后，我想请你分享一下，你知道哪些程序库的哪些特性是利用运行时交互的接口实现的？欢迎在留言区分享你的想法。</p><p>感谢阅读，如果你觉得这一讲的内容对你有帮助的话，也欢迎把它分享给你的朋友。</p>","comments":[{"had_liked":false,"id":226614,"user_name":"西西弗与卡夫卡","can_delete":false,"product_type":"c1","uid":1001710,"ip_address":"","ucode":"B4C27B8335B76A","user_header":"https://static001.geekbang.org/account/avatar/00/0f/48/ee/872ad07e.jpg","comment_is_top":false,"comment_ctime":1592152310,"is_pvip":true,"replies":[{"id":"83532","content":"你做的事情与APM有相似的地方。","user_name":"作者回复","user_name_real":"郑晔","uid":"1258861","ctime":1592214551,"ip_address":"","comment_id":226614,"utype":1}],"discussion_count":1,"race_medal":0,"score":"66016661750","product_id":100052601,"comment_content":"我们自己的分布式日志收集系统就使用了运行时字节码生成技术，这样既对业务应用没有任何影响（性能上微乎其微），又能根据抓取的日志分析服务调用链、异常等有用的信息","like_count":16,"discussions":[{"author":{"id":1258861,"avatar":"https://static001.geekbang.org/account/avatar/00/13/35/6d/07a42f81.jpg","nickname":"郑晔","note":"","ucode":"1EBD5AA5D4FC89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":498304,"discussion_content":"你做的事情与APM有相似的地方。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1592214551,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":226702,"user_name":"Jxin","can_delete":false,"product_type":"c1","uid":1251111,"ip_address":"","ucode":"4C03928388C413","user_header":"https://static001.geekbang.org/account/avatar/00/13/17/27/ec30d30a.jpg","comment_is_top":false,"comment_ctime":1592187533,"is_pvip":false,"replies":[{"id":"83590","content":"你这个理解的角度很有趣，非常好的补充！","user_name":"作者回复","user_name_real":"郑晔","uid":"1258861","ctime":1592229269,"ip_address":"","comment_id":226702,"utype":1}],"discussion_count":1,"race_medal":0,"score":"57426762381","product_id":100052601,"comment_content":"1.在web flux出来之前，java的web开发大多都是基于servlet的。可以认为servlet容器是java web项目的运行时环境。servlet 3.0的&quot;ServletContext&quot;（通过编程方式配置servlet,filter，listener而不依赖web.xml）和&quot;运行时插拔”两大特性（两个特性前后关联），相当于以编程库的方式提供了运行时容器的服务增减的能力。这也是spring 3.X后spring web自动装配的实现基础。<br><br>2.spring基本是java后端开发的实时标准，如果以spring为运行时环境(ioc容器+依赖注入以及其他功能),那么其以约定和编码库提供的运行时编程的接口就实在挺多了。<br><br>3.按本篇自己的理解，运行时不限于语言级别。固有以上推断。","like_count":14,"discussions":[{"author":{"id":1258861,"avatar":"https://static001.geekbang.org/account/avatar/00/13/35/6d/07a42f81.jpg","nickname":"郑晔","note":"","ucode":"1EBD5AA5D4FC89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":498338,"discussion_content":"你这个理解的角度很有趣，非常好的补充！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1592229269,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":233762,"user_name":"业余爱好者","can_delete":false,"product_type":"c1","uid":1482915,"ip_address":"","ucode":"A890935A982988","user_header":"https://static001.geekbang.org/account/avatar/00/16/a0/a3/8da99bb0.jpg","comment_is_top":false,"comment_ctime":1594439677,"is_pvip":false,"replies":[{"id":"86439","content":"想深入，就要到细节中去。","user_name":"作者回复","user_name_real":"郑晔","uid":"1258861","ctime":1594625495,"ip_address":"","comment_id":233762,"utype":1}],"discussion_count":1,"race_medal":0,"score":"31659210749","product_id":100052601,"comment_content":"学习一门语言，从模型开始。<br><br>设计一门语言，以运行时为地基。<br><br>按照时间顺序的发展是：高手把运行时抽象为简化的模型，供小白入门。小白想进阶的话，还是要深入到运行时的实现细节中去。<br>","like_count":8,"discussions":[{"author":{"id":1258861,"avatar":"https://static001.geekbang.org/account/avatar/00/13/35/6d/07a42f81.jpg","nickname":"郑晔","note":"","ucode":"1EBD5AA5D4FC89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":501157,"discussion_content":"想深入，就要到细节中去。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1594625495,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":226646,"user_name":"阳仔","can_delete":false,"product_type":"c1","uid":1046920,"ip_address":"","ucode":"79F73D85EDF3E2","user_header":"https://static001.geekbang.org/account/avatar/00/0f/f9/88/cdda9e6f.jpg","comment_is_top":false,"comment_ctime":1592178484,"is_pvip":false,"replies":[{"id":"83530","content":"很好的总结！","user_name":"作者回复","user_name_real":"郑晔","uid":"1258861","ctime":1592214475,"ip_address":"","comment_id":226646,"utype":1}],"discussion_count":1,"race_medal":0,"score":"27361982260","product_id":100052601,"comment_content":"运行时是程序语言设计中的地基<br>理解运行时可以深入理解程序语言是如何加载，执行的，这能让我们对语言添加一些原本不支持的功能<br>对于JAVA语言就是要了解jvm执行的机制，<br>它包括加载字节码，解析，内存管理，线程调度等等方面<br>这些跟操作系统的很多知识其实是相通的，因此需要把各种知识在头脑建立连接，达到知识的迁移的效果，提高学习的效率<br>","like_count":7,"discussions":[{"author":{"id":1258861,"avatar":"https://static001.geekbang.org/account/avatar/00/13/35/6d/07a42f81.jpg","nickname":"郑晔","note":"","ucode":"1EBD5AA5D4FC89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":498314,"discussion_content":"很好的总结！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1592214475,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":262703,"user_name":"佟宏元","can_delete":false,"product_type":"c1","uid":2224337,"ip_address":"","ucode":"052233A5720447","user_header":"","comment_is_top":false,"comment_ctime":1605829690,"is_pvip":false,"replies":[{"id":"100386","content":"是这么理解的。","user_name":"作者回复","user_name_real":"郑晔","uid":"1258861","ctime":1612056959,"ip_address":"","comment_id":262703,"utype":1}],"discussion_count":1,"race_medal":0,"score":"14490731578","product_id":100052601,"comment_content":"突然打卡新思路，运行时是一个语言的核心基础，程序设计语言却是一种表现，掌握运行时，我们就可以开辟新的语言设计。","like_count":4,"discussions":[{"author":{"id":1258861,"avatar":"https://static001.geekbang.org/account/avatar/00/13/35/6d/07a42f81.jpg","nickname":"郑晔","note":"","ucode":"1EBD5AA5D4FC89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":509933,"discussion_content":"是这么理解的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1612056959,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":233001,"user_name":"饭","can_delete":false,"product_type":"c1","uid":1610573,"ip_address":"","ucode":"B3F1702D4DE604","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJKj3GbvevFibxwJibTqm16NaE8MXibwDUlnt5tt73KF9WS2uypha2m1Myxic6Q47Zaj2DZOwia3AgicO7Q/132","comment_is_top":false,"comment_ctime":1594188540,"is_pvip":false,"replies":[{"id":"86161","content":"首先，推荐去读一本书，《程序员的自我修养》https:&#47;&#47;book.douban.com&#47;subject&#47;3652388&#47; 这是一本好书，只是名字起得不太好。<br><br>C 和 C++都有运行时支持，不然，C++的虚拟函数是怎么实现的。不同的是，C&#47;C++的运行时是以库的形式存在，最终与你的代码生成到一个可执行文件中，而不像 Java 是以一个可执行的 JVM 形式存在。","user_name":"作者回复","user_name_real":"郑晔","uid":"1258861","ctime":1594345321,"ip_address":"","comment_id":233001,"utype":1}],"discussion_count":3,"race_medal":0,"score":"14479090428","product_id":100052601,"comment_content":"老师，C和C++不是直接编译成操作系统可执行文件吗？没有运行时这一说吧。不是太理解文中提及的C语言运行时","like_count":4,"discussions":[{"author":{"id":1258861,"avatar":"https://static001.geekbang.org/account/avatar/00/13/35/6d/07a42f81.jpg","nickname":"郑晔","note":"","ucode":"1EBD5AA5D4FC89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":500845,"discussion_content":"首先，推荐去读一本书，《程序员的自我修养》https://book.douban.com/subject/3652388/ 这是一本好书，只是名字起得不太好。\n\nC 和 C++都有运行时支持，不然，C++的虚拟函数是怎么实现的。不同的是，C/C++的运行时是以库的形式存在，最终与你的代码生成到一个可执行文件中，而不像 Java 是以一个可执行的 JVM 形式存在。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1594345321,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1025214,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a4/be/39cc22f5.jpg","nickname":"petit_kayak","note":"","ucode":"6889CCCBFA0180","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":548038,"discussion_content":"C语言的运行时已经非常接近计算机本身的执行模型了，很多操作系统都是C语言实现的，如果在嵌入式芯片裸写过程序（无操作系统）或者做过操作系统的移植就会更明白C语言的运行时。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1643006916,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1610573,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJKj3GbvevFibxwJibTqm16NaE8MXibwDUlnt5tt73KF9WS2uypha2m1Myxic6Q47Zaj2DZOwia3AgicO7Q/132","nickname":"饭","note":"","ucode":"B3F1702D4DE604","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":290231,"discussion_content":"原来如此，受教了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1594385941,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":254842,"user_name":"饭","can_delete":false,"product_type":"c1","uid":1610573,"ip_address":"","ucode":"B3F1702D4DE604","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJKj3GbvevFibxwJibTqm16NaE8MXibwDUlnt5tt73KF9WS2uypha2m1Myxic6Q47Zaj2DZOwia3AgicO7Q/132","comment_is_top":false,"comment_ctime":1603198189,"is_pvip":false,"replies":[{"id":"100117","content":"还可以分享给更多小伙伴！","user_name":"作者回复","user_name_real":"郑晔","uid":"1258861","ctime":1611719881,"ip_address":"","comment_id":254842,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5898165485","product_id":100052601,"comment_content":"读第三遍了，真心觉得老师这个专栏真是一个大宝藏，每次都有不同收获","like_count":1,"discussions":[{"author":{"id":1258861,"avatar":"https://static001.geekbang.org/account/avatar/00/13/35/6d/07a42f81.jpg","nickname":"郑晔","note":"","ucode":"1EBD5AA5D4FC89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":507533,"discussion_content":"还可以分享给更多小伙伴！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1611719881,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":346317,"user_name":"愿凌飞","can_delete":false,"product_type":"c1","uid":2357458,"ip_address":"","ucode":"E80CC09C7D528D","user_header":"https://static001.geekbang.org/account/avatar/00/23/f8/d2/494c182a.jpg","comment_is_top":false,"comment_ctime":1653019087,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1653019087","product_id":100052601,"comment_content":"为什么是getClass是运行时接口呢？<br>我的思考：<br>java运行时想象成一个模型，这个模型的接口通过字节码的方式提供出来，语言本身是通过使用的这些接口来实现功能。我们怎么使用运行时接口呢？有些运行时接口是就直接通过语言本身（语法，程序库）传递出来，比如`getClass`,或者我们直接使用字节码。 从某种层面上说，开发者直接使用字节码的话，是不是就增加了耦合。","like_count":0,"discussions":[{"author":{"id":1479120,"avatar":"https://static001.geekbang.org/account/avatar/00/16/91/d0/35bc62b1.jpg","nickname":"无咎","note":"","ucode":"B9759B5646F3AB","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":579620,"discussion_content":"如果是接口层面的依赖就不是耦合，具体看功能设计。很多情况是程序库封装了字节码，客户代码依赖程序库的接口。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1657586413,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":345383,"user_name":"if...else...","can_delete":false,"product_type":"c1","uid":2550743,"ip_address":"","ucode":"D0565908C99695","user_header":"https://static001.geekbang.org/account/avatar/00/26/eb/d7/90391376.jpg","comment_is_top":false,"comment_ctime":1652243501,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1652243501","product_id":100052601,"comment_content":"把运行时当作自己设计的地基，不受限于语言。--记下来","like_count":0},{"had_liked":false,"id":337600,"user_name":"云会宾","can_delete":false,"product_type":"c1","uid":2696335,"ip_address":"","ucode":"8DFC2DD03D7E51","user_header":"https://static001.geekbang.org/account/avatar/00/29/24/8f/77140e34.jpg","comment_is_top":false,"comment_ctime":1646909550,"is_pvip":true,"discussion_count":1,"race_medal":0,"score":"1646909550","product_id":100052601,"comment_content":"JVM运行的话在linux下是不是创建了一个JVM的进程？然后这个进程来负责解释和翻译java字节码？然后调用系统接口干活。内存布局也是linux下的进程布局模型？","like_count":1,"discussions":[{"author":{"id":1479120,"avatar":"https://static001.geekbang.org/account/avatar/00/16/91/d0/35bc62b1.jpg","nickname":"无咎","note":"","ucode":"B9759B5646F3AB","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":579622,"discussion_content":"JVM运行时管理的内存部分是Linux进程内存的子集。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1657586568,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":314054,"user_name":"Bravery168","can_delete":false,"product_type":"c1","uid":1232973,"ip_address":"","ucode":"DB08AEFBD6DF2B","user_header":"https://static001.geekbang.org/account/avatar/00/12/d0/4d/2116c1a4.jpg","comment_is_top":false,"comment_ctime":1632819491,"is_pvip":false,"discussion_count":0,"race_medal":1,"score":"1632819491","product_id":100052601,"comment_content":"郑老师这几篇文章没有涉及过多的技术细节，不过提供的角度很好<br>模型-接口-实现，其实就是顶层设计到具体落地措施，从抽象到具体，不断从上往下细化和拆解的过程。<br>这个过程怎么去具体实施，就考验功力和经验。<br>实际上我们在实践中就是在积累和沉淀这个拆解落地的经验和能力，最终实现高层抽象和具体实现之间的衔接。<br>缺乏这个过程的实操，就容易变成纸上谈兵或盲人摸象。<br><br>","like_count":0},{"had_liked":false,"id":289757,"user_name":"林铭铭","can_delete":false,"product_type":"c1","uid":1068499,"ip_address":"","ucode":"AB392BEE7CD6A0","user_header":"https://static001.geekbang.org/account/avatar/00/10/4d/d3/67bdcca9.jpg","comment_is_top":false,"comment_ctime":1619167777,"is_pvip":false,"replies":[{"id":"110803","content":"想要做好的话，就需要掌握更多的知识。","user_name":"作者回复","user_name_real":"郑晔","uid":"1258861","ctime":1628426626,"ip_address":"","comment_id":289757,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1619167777","product_id":100052601,"comment_content":"之前老觉得性能优化才需要理解运行时，现在才发现设计也需要理解运行时。","like_count":1,"discussions":[{"author":{"id":1258861,"avatar":"https://static001.geekbang.org/account/avatar/00/13/35/6d/07a42f81.jpg","nickname":"郑晔","note":"","ucode":"1EBD5AA5D4FC89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":519013,"discussion_content":"想要做好的话，就需要掌握更多的知识。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1628426626,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":254508,"user_name":"Janenesome","can_delete":false,"product_type":"c1","uid":1276572,"ip_address":"","ucode":"15D2673CC31D9D","user_header":"https://static001.geekbang.org/account/avatar/00/13/7a/9c/a4bc748d.jpg","comment_is_top":false,"comment_ctime":1603120922,"is_pvip":false,"replies":[{"id":"92863","content":"面覆盖到了，细节可以慢慢补充。","user_name":"作者回复","user_name_real":"郑晔","uid":"1258861","ctime":1603153735,"ip_address":"","comment_id":254508,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1603120922","product_id":100052601,"comment_content":"郑老师的文章信息量好大，感觉每个点细究下去的话都能形成一个新的专栏。","like_count":0,"discussions":[{"author":{"id":1258861,"avatar":"https://static001.geekbang.org/account/avatar/00/13/35/6d/07a42f81.jpg","nickname":"郑晔","note":"","ucode":"1EBD5AA5D4FC89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":507418,"discussion_content":"面覆盖到了，细节可以慢慢补充。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1603153735,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":228376,"user_name":"上善若水","can_delete":false,"product_type":"c1","uid":1653332,"ip_address":"","ucode":"E3F15FB8576626","user_header":"https://static001.geekbang.org/account/avatar/00/19/3a/54/72402617.jpg","comment_is_top":false,"comment_ctime":1592652064,"is_pvip":true,"discussion_count":1,"race_medal":0,"score":"1592652064","product_id":100052601,"comment_content":"还是JAVA牛","like_count":0,"discussions":[{"author":{"id":1114772,"avatar":"https://static001.geekbang.org/account/avatar/00/11/02/94/2bf394f3.jpg","nickname":"Numbpad1","note":"","ucode":"2F075AC7E3847D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":400381,"discussion_content":"更准确的说法是JVM🐂","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1633254192,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]}]}