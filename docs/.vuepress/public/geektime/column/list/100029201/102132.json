{"id":102132,"title":"10 | 生产者压缩算法面面观","content":"<p>你好，我是胡夕。今天我要和你分享的内容是：生产者压缩算法面面观。</p><p>说起压缩（compression），我相信你一定不会感到陌生。它秉承了用时间去换空间的经典trade-off思想，具体来说就是用CPU时间去换磁盘空间或网络I/O传输量，希望以较小的CPU开销带来更少的磁盘占用或更少的网络I/O传输。在Kafka中，压缩也是用来做这件事的。今天我就来跟你分享一下Kafka中压缩的那些事儿。</p><h2>怎么压缩？</h2><p>Kafka是如何压缩消息的呢？要弄清楚这个问题，就要从Kafka的消息格式说起了。目前Kafka共有两大类消息格式，社区分别称之为V1版本和V2版本。V2版本是Kafka 0.11.0.0中正式引入的。</p><p>不论是哪个版本，Kafka的消息层次都分为两层：消息集合（message set）以及消息（message）。一个消息集合中包含若干条日志项（record item），而日志项才是真正封装消息的地方。Kafka底层的消息日志由一系列消息集合日志项组成。Kafka通常不会直接操作具体的一条条消息，它总是在消息集合这个层面上进行写入操作。</p><p>那么社区引入V2版本的目的是什么呢？V2版本主要是针对V1版本的一些弊端做了修正，和我们今天讨论的主题相关的修正有哪些呢？先介绍一个，就是把消息的公共部分抽取出来放到外层消息集合里面，这样就不用每条消息都保存这些信息了。</p><!-- [[[read_end]]] --><p>我来举个例子。原来在V1版本中，每条消息都需要执行CRC校验，但有些情况下消息的CRC值是会发生变化的。比如在Broker端可能会对消息时间戳字段进行更新，那么重新计算之后的CRC值也会相应更新；再比如Broker端在执行消息格式转换时（主要是为了兼容老版本客户端程序），也会带来CRC值的变化。鉴于这些情况，再对每条消息都执行CRC校验就有点没必要了，不仅浪费空间还耽误CPU时间，因此在V2版本中，消息的CRC校验工作就被移到了消息集合这一层。</p><p>V2版本还有一个和压缩息息相关的改进，就是保存压缩消息的方法发生了变化。之前V1版本中保存压缩消息的方法是把多条消息进行压缩然后保存到外层消息的消息体字段中；而V2版本的做法是对整个消息集合进行压缩。显然后者应该比前者有更好的压缩效果。</p><p>我对两个版本分别做了一个简单的测试，结果显示，在相同条件下，不论是否启用压缩，V2版本都比V1版本节省磁盘空间。当启用压缩时，这种节省空间的效果更加明显，就像下面这两张图展示的那样：</p><p><img src=\"https://static001.geekbang.org/resource/image/11/21/11ddc5575eb6e799f456515c75e1d821.png?wh=1016*404\" alt=\"\"></p><h2>何时压缩？</h2><p>在Kafka中，压缩可能发生在两个地方：生产者端和Broker端。</p><p>生产者程序中配置compression.type参数即表示启用指定类型的压缩算法。比如下面这段程序代码展示了如何构建一个开启GZIP的Producer对象：</p><pre><code> Properties props = new Properties();\n props.put(&quot;bootstrap.servers&quot;, &quot;localhost:9092&quot;);\n props.put(&quot;acks&quot;, &quot;all&quot;);\n props.put(&quot;key.serializer&quot;, &quot;org.apache.kafka.common.serialization.StringSerializer&quot;);\n props.put(&quot;value.serializer&quot;, &quot;org.apache.kafka.common.serialization.StringSerializer&quot;);\n // 开启GZIP压缩\n props.put(&quot;compression.type&quot;, &quot;gzip&quot;);\n \n Producer&lt;String, String&gt; producer = new KafkaProducer&lt;&gt;(props);\n</code></pre><p>这里比较关键的代码行是props.put(“compression.type”, “gzip”)，它表明该Producer的压缩算法使用的是GZIP。这样Producer启动后生产的每个消息集合都是经GZIP压缩过的，故而能很好地节省网络传输带宽以及Kafka Broker端的磁盘占用。</p><p>在生产者端启用压缩是很自然的想法，那为什么我说在Broker端也可能进行压缩呢？其实大部分情况下Broker从Producer端接收到消息后仅仅是原封不动地保存而不会对其进行任何修改，但这里的“大部分情况”也是要满足一定条件的。有两种例外情况就可能让Broker重新压缩消息。</p><p>情况一：Broker端指定了和Producer端不同的压缩算法。</p><p>先看一个例子。想象这样一个对话。</p><p>Producer说：“我要使用GZIP进行压缩。”</p><p>Broker说：“不好意思，我这边接收的消息必须使用Snappy算法进行压缩。”</p><p>你看，这种情况下Broker接收到GZIP压缩消息后，只能解压缩然后使用Snappy重新压缩一遍。如果你翻开Kafka官网，你会发现Broker端也有一个参数叫compression.type，和上面那个例子中的同名。但是这个参数的默认值是producer，这表示Broker端会“尊重”Producer端使用的压缩算法。可一旦你在Broker端设置了不同的compression.type值，就一定要小心了，因为可能会发生预料之外的压缩/解压缩操作，通常表现为Broker端CPU使用率飙升。</p><p>情况二：Broker端发生了消息格式转换。</p><p>所谓的消息格式转换主要是为了兼容老版本的消费者程序。还记得之前说过的V1、V2版本吧？在一个生产环境中，Kafka集群中同时保存多种版本的消息格式非常常见。为了兼容老版本的格式，Broker端会对新版本消息执行向老版本格式的转换。这个过程中会涉及消息的解压缩和重新压缩。一般情况下这种消息格式转换对性能是有很大影响的，除了这里的压缩之外，它还让Kafka丧失了引以为豪的Zero Copy特性。</p><p>所谓“Zero Copy”就是“零拷贝”，我在专栏<a href=\"https://time.geekbang.org/column/article/101107\">第6期</a>提到过，说的是当数据在磁盘和网络进行传输时避免昂贵的内核态数据拷贝，从而实现快速的数据传输。因此如果Kafka享受不到这个特性的话，性能必然有所损失，所以尽量保证消息格式的统一吧，这样不仅可以避免不必要的解压缩/重新压缩，对提升其他方面的性能也大有裨益。如果有兴趣你可以深入地了解下Zero Copy的原理。</p><h2>何时解压缩？</h2><p>有压缩必有解压缩！通常来说解压缩发生在消费者程序中，也就是说Producer发送压缩消息到Broker后，Broker照单全收并原样保存起来。当Consumer程序请求这部分消息时，Broker依然原样发送出去，当消息到达Consumer端后，由Consumer自行解压缩还原成之前的消息。</p><p>那么现在问题来了，Consumer怎么知道这些消息是用何种压缩算法压缩的呢？其实答案就在消息中。Kafka会将启用了哪种压缩算法封装进消息集合中，这样当Consumer读取到消息集合时，它自然就知道了这些消息使用的是哪种压缩算法。如果用一句话总结一下压缩和解压缩，那么我希望你记住这句话：<strong>Producer端压缩、Broker端保持、Consumer端解压缩。</strong></p><p>除了在Consumer端解压缩，Broker端也会进行解压缩。注意了，这和前面提到消息格式转换时发生的解压缩是不同的场景。每个压缩过的消息集合在Broker端写入时都要发生解压缩操作，目的就是为了对消息执行各种验证。我们必须承认这种解压缩对Broker端性能是有一定影响的，特别是对CPU的使用率而言。</p><p>事实上，最近国内京东的小伙伴们刚刚向社区提出了一个bugfix，建议去掉因为做消息校验而引入的解压缩。据他们称，去掉了解压缩之后，Broker端的CPU使用率至少降低了50%。不过有些遗憾的是，目前社区并未采纳这个建议，原因就是这种消息校验是非常重要的，不可盲目去之。毕竟先把事情做对是最重要的，在做对的基础上，再考虑把事情做好做快。针对这个使用场景，你也可以思考一下，是否有一个两全其美的方案，既能避免消息解压缩也能对消息执行校验。</p><h2><strong>各种压缩算法对比</strong></h2><p>那么我们来谈谈压缩算法。这可是重头戏！之前说了这么多，我们还是要比较一下各个压缩算法的优劣，这样我们才能有针对性地配置适合我们业务的压缩策略。</p><p>在Kafka 2.1.0版本之前，Kafka支持3种压缩算法：GZIP、Snappy和LZ4。从2.1.0开始，Kafka正式支持Zstandard算法（简写为zstd）。它是Facebook开源的一个压缩算法，能够提供超高的压缩比（compression ratio）。</p><p>对了，看一个压缩算法的优劣，有两个重要的指标：一个指标是压缩比，原先占100份空间的东西经压缩之后变成了占20份空间，那么压缩比就是5，显然压缩比越高越好；另一个指标就是压缩/解压缩吞吐量，比如每秒能压缩或解压缩多少MB的数据。同样地，吞吐量也是越高越好。</p><p>下面这张表是Facebook Zstandard官网提供的一份压缩算法benchmark比较结果：</p><p><img src=\"https://static001.geekbang.org/resource/image/cf/68/cfe20a2cdcb1ae3b304777f7be928068.png?wh=411*346\" alt=\"\"></p><p>从表中我们可以发现zstd算法有着最高的压缩比，而在吞吐量上的表现只能说中规中矩。反观LZ4算法，它在吞吐量方面则是毫无疑问的执牛耳者。当然对于表格中数据的权威性我不做过多解读，只想用它来说明一下当前各种压缩算法的大致表现。</p><p>在实际使用中，GZIP、Snappy、LZ4甚至是zstd的表现各有千秋。但对于Kafka而言，它们的性能测试结果却出奇得一致，即在吞吐量方面：LZ4 &gt; Snappy &gt; zstd和GZIP；而在压缩比方面，zstd &gt; LZ4 &gt; GZIP &gt; Snappy。具体到物理资源，使用Snappy算法占用的网络带宽最多，zstd最少，这是合理的，毕竟zstd就是要提供超高的压缩比；在CPU使用率方面，各个算法表现得差不多，只是在压缩时Snappy算法使用的CPU较多一些，而在解压缩时GZIP算法则可能使用更多的CPU。</p><h2><strong>最佳实践</strong></h2><p>了解了这些算法对比，我们就能根据自身的实际情况有针对性地启用合适的压缩算法。</p><p>首先来说压缩。何时启用压缩是比较合适的时机呢？</p><p>你现在已经知道Producer端完成的压缩，那么启用压缩的一个条件就是Producer程序运行机器上的CPU资源要很充足。如果Producer运行机器本身CPU已经消耗殆尽了，那么启用消息压缩无疑是雪上加霜，只会适得其反。</p><p>除了CPU资源充足这一条件，如果你的环境中带宽资源有限，那么我也建议你开启压缩。事实上我见过的很多Kafka生产环境都遭遇过带宽被打满的情况。这年头，带宽可是比CPU和内存还要珍贵的稀缺资源，毕竟万兆网络还不是普通公司的标配，因此千兆网络中Kafka集群带宽资源耗尽这件事情就特别容易出现。如果你的客户端机器CPU资源有很多富余，我强烈建议你开启zstd压缩，这样能极大地节省网络资源消耗。</p><p>其次说说解压缩。其实也没什么可说的。一旦启用压缩，解压缩是不可避免的事情。这里只想强调一点：我们对不可抗拒的解压缩无能为力，但至少能规避掉那些意料之外的解压缩。就像我前面说的，因为要兼容老版本而引入的解压缩操作就属于这类。有条件的话尽量保证不要出现消息格式转换的情况。</p><h2>小结</h2><p>总结一下今天分享的内容：我们主要讨论了Kafka压缩的各个方面，包括Kafka是如何对消息进行压缩的、何时进行压缩及解压缩，还对比了目前Kafka支持的几个压缩算法，最后我给出了工程化的最佳实践。分享这么多内容，我就只有一个目的：就是希望你能根据自身的实际情况恰当地选择合适的Kafka压缩算法，以求实现最大的资源利用率。</p><p><img src=\"https://static001.geekbang.org/resource/image/ab/df/ab1578f5b970c08b9ec524c0304bbedf.jpg?wh=2069*2560\" alt=\"\"></p><h2>开放讨论</h2><p>最后给出一道作业题，请花时间思考一下：前面我们提到了Broker要对压缩消息集合执行解压缩操作，然后逐条对消息进行校验，有人提出了一个方案：把这种消息校验移到Producer端来做，Broker直接读取校验结果即可，这样就可以避免在Broker端执行解压缩操作。你认同这种方案吗？</p><p>欢迎写下你的思考和答案，我们一起讨论。如果你觉得有所收获，也欢迎把文章分享给你的朋友。</p><p></p>","comments":[{"had_liked":false,"id":107296,"user_name":"胡夕","can_delete":false,"product_type":"c1","uid":1288090,"ip_address":"","ucode":"5709A689B6683B","user_header":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","comment_is_top":true,"comment_ctime":1561512488,"is_pvip":false,"discussion_count":5,"race_medal":0,"score":"9.2233724893879009e+18","product_id":100029201,"comment_content":"刚刚看到4天前京东提的那个jira已经修复了，看来规避了broker端为执行校验而做的解压缩操作，代码也merge进了2.4版本。有兴趣的同学可以看一下：https:&#47;&#47;issues.apache.org&#47;jira&#47;browse&#47;KAFKA-8106","like_count":106,"discussions":[{"author":{"id":1130806,"avatar":"https://static001.geekbang.org/account/avatar/00/11/41/36/8ad36e50.jpg","nickname":"躺在宗介手心里的波妞","note":"","ucode":"088D242CEAA8FA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":3926,"discussion_content":"https://github.com/apache/kafka/pull/6699 “This function will not read data from DataInput to ByteBuffer which need newly creating .This will reduce the allocation and copying of ByteBuffer when logValidator do validation .This will reduces GC frequency. We offer a simple read function to read data from DataInput whithout create ByteBuffer.Of course this opertion can not avoid deconmpression to data.”并没有避免解压缩，只是避免了新的内存分配。","likes_number":48,"is_delete":false,"is_hidden":false,"ctime":1564984900,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":3,"child_discussions":[{"author":{"id":1134861,"avatar":"https://static001.geekbang.org/account/avatar/00/11/51/0d/fc1652fe.jpg","nickname":"James","note":"","ucode":"48B0F2A334D1C1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1130806,"avatar":"https://static001.geekbang.org/account/avatar/00/11/41/36/8ad36e50.jpg","nickname":"躺在宗介手心里的波妞","note":"","ucode":"088D242CEAA8FA","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":265207,"discussion_content":"赞一些让老师尴尬的评论","likes_number":13,"is_delete":false,"is_hidden":false,"ctime":1589379763,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":3926,"ip_address":""},"score":265207,"extra":""},{"author":{"id":1357603,"avatar":"https://static001.geekbang.org/account/avatar/00/14/b7/23/ea83d6eb.jpg","nickname":"-.-","note":"","ucode":"3CDC606BDFDD80","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1130806,"avatar":"https://static001.geekbang.org/account/avatar/00/11/41/36/8ad36e50.jpg","nickname":"躺在宗介手心里的波妞","note":"","ucode":"088D242CEAA8FA","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":411154,"discussion_content":"看到了内部京东同事的分享，应该是在遍历的逻辑里面做一些细节优化，处理阶段每次在数据流之外新申请了一块byteBuffer的内存，所以采用数据流里拿出去key和value之外的数据，减少多余的内存申请，达到一层优化。","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1635859076,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":3926,"ip_address":""},"score":411154,"extra":""},{"author":{"id":2052656,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/52/30/f7cdca9c.jpg","nickname":"您的好友已不存在","note":"","ucode":"0D67353B07E9AA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1134861,"avatar":"https://static001.geekbang.org/account/avatar/00/11/51/0d/fc1652fe.jpg","nickname":"James","note":"","ucode":"48B0F2A334D1C1","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":542204,"discussion_content":"哈哈哈","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1640681429,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":265207,"ip_address":""},"score":542204,"extra":""}]},{"author":{"id":1054958,"avatar":"https://static001.geekbang.org/account/avatar/00/10/18/ee/a1ed60d1.jpg","nickname":"ABC","note":"","ucode":"7501AD9C0C4A70","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":556295,"discussion_content":"最近有空看看新版Kafka3.x有没有修复broker解压这个问题","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1647303278,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":108225,"user_name":"常超","can_delete":false,"product_type":"c1","uid":1138665,"ip_address":"","ucode":"4AE7743B4ADF20","user_header":"https://static001.geekbang.org/account/avatar/00/11/5f/e9/95ef44f3.jpg","comment_is_top":false,"comment_ctime":1561701145,"is_pvip":false,"discussion_count":6,"race_medal":0,"score":"465418169113","product_id":100029201,"comment_content":"文中对于消息结构的描述，确实引起了一些混乱，下面试图整理一下，希望对大家有帮助。<br>消息（v1叫message，v2叫record）是分批次（batch）读写的，batch是kafka读写（网络传输和文件读写）的基本单位，不同版本，对相同（或者叫相似）的概念，叫法不一样。<br>v1（kafka 0.11.0之前）:message set, message<br>v2（kafka 0.11.0以后）:record batch,record<br>其中record batch对英语message set，record对应于message。<br>一个record batch（message set）可以包含多个record（message）。<br><br>对于每个版本的消息结构的细节，可以参考kafka官方文档的5.3 Message Format 章，里面对消息结构列得非常清楚。<br>","like_count":109,"discussions":[{"author":{"id":2143908,"avatar":"https://static001.geekbang.org/account/avatar/00/20/b6/a4/26f03a69.jpg","nickname":"有可不何","note":"","ucode":"96FB6815502800","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":555338,"discussion_content":"的确很混乱","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1646876443,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1193755,"avatar":"https://static001.geekbang.org/account/avatar/00/12/37/1b/82310e20.jpg","nickname":"拿笔小星","note":"","ucode":"D3D8F6A959710D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":530696,"discussion_content":"作者应该把他讲的kafka Java客户端源码版本提前说好，不然会产生不必要的歧义。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1637128171,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"user_type\":1}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1155275,"avatar":"https://static001.geekbang.org/account/avatar/00/11/a0/cb/aab3b3e7.jpg","nickname":"张三丰","note":"","ucode":"3A6215A40B3B21","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":312902,"discussion_content":"完美","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1602850765,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1591647,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83erIOKPCqh4nsBibVmpgVFFBYTANQEKRjSEx0HFompr4mJnG2kHib6Briav58ROTbtQQehhYfzAN2sGbg/132","nickname":"I0r3k","note":"","ucode":"1DA9442061E539","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":306472,"discussion_content":"的确混乱","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1600283392,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1759325,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/d8/5d/07dfb3b5.jpg","nickname":"杯莫停","note":"","ucode":"4FA1D5CBBEF702","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":302518,"discussion_content":"666","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1598943999,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1190060,"avatar":"https://static001.geekbang.org/account/avatar/00/12/28/ac/37a2a265.jpg","nickname":"弱水穿云天","note":"","ucode":"80DC528A23ED7E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":281074,"discussion_content":"牛批","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1591668207,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":107149,"user_name":"Geek_8441fd","can_delete":false,"product_type":"c1","uid":1564668,"ip_address":"","ucode":"A557F31D5E61C2","user_header":"","comment_is_top":false,"comment_ctime":1561468167,"is_pvip":false,"replies":[{"id":"38823","content":"嗯嗯，挺好的。我自己也学到了一些。另外校验不仅仅是CRC校验，还有消息级别的检查。","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1561514248,"ip_address":"","comment_id":107149,"utype":1}],"discussion_count":5,"race_medal":0,"score":"229194734855","product_id":100029201,"comment_content":"broker端校验可以分两步走。<br>第1步，message set 层面，增加一个 crc，这样可以不用解压缩，直接校验压缩后的数据。<br>如果校验不成功，说明message set 中有损坏的message；<br>这时，再做解压操作，挨个校验message，找出损坏的那一个。<br><br>这样的话，绝大部分情况下，是不用做解压操作的；只有在确实发生错误时，才需要解压。<br>请指正。","like_count":54,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":455387,"discussion_content":"嗯嗯，挺好的。我自己也学到了一些。另外校验不仅仅是CRC校验，还有消息级别的检查。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1561514248,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1155275,"avatar":"https://static001.geekbang.org/account/avatar/00/11/a0/cb/aab3b3e7.jpg","nickname":"张三丰","note":"","ucode":"3A6215A40B3B21","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":390754,"discussion_content":"你说的应该是v1版本的消息，消息集合层面做的crc，因为v1版本压缩的只是消息，把压缩后的消息放进消息集合的消息体字段中。\n如果是v2版本，那就一定需要解压了，因为v2是以消息集合为单位进行压缩的。","likes_number":4,"is_delete":false,"is_hidden":false,"ctime":1630027291,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2822014,"avatar":"https://static001.geekbang.org/account/avatar/00/2b/0f/7e/82b4e962.jpg","nickname":"clious","note":"","ucode":"6D6A6792E801A1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":559402,"discussion_content":"先混检，再单检","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1648736385,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1051563,"avatar":"https://static001.geekbang.org/account/avatar/00/10/0b/ab/0e2857e5.jpg","nickname":"Coding小先","note":"","ucode":"965B1CC757E026","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":328997,"discussion_content":"对的 我也是这么想的，整个进行检验，就不用解压了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1606295227,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1134861,"avatar":"https://static001.geekbang.org/account/avatar/00/11/51/0d/fc1652fe.jpg","nickname":"James","note":"","ucode":"48B0F2A334D1C1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":49189,"discussion_content":"马克","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573562932,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":106850,"user_name":"你好旅行者","can_delete":false,"product_type":"c1","uid":1154101,"ip_address":"","ucode":"5C72A428DC28F3","user_header":"https://static001.geekbang.org/account/avatar/00/11/9c/35/9dc79371.jpg","comment_is_top":false,"comment_ctime":1561398994,"is_pvip":false,"discussion_count":12,"race_medal":0,"score":"186244992722","product_id":100029201,"comment_content":"不行吧，校验操作应该也是为了防止在网络传输的过程中出现数据丢失的情况，在Producer端做完校验之后如果在传输的时候出现了错误，那这个校验就没有意义了。<br>我有一个问题想请教老师，如果每次传到Broker的消息都要做一次校验，那是不是都要把消息从内核态拷贝到用户态做校验？如果是这样的话那零拷贝机制不是就没有用武之地了？","like_count":43,"discussions":[{"author":{"id":1333607,"avatar":"https://static001.geekbang.org/account/avatar/00/14/59/67/f4ba1da4.jpg","nickname":"Hello world","note":"","ucode":"4D2EF3034571B7","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":335,"discussion_content":"我的理解是零拷贝是kafka在将自己存储在磁盘里的数据读取出来发送给consumer，而做消息校验是broker端接受到消息就解压缩进行校验，这和零拷贝不冲突","likes_number":17,"is_delete":false,"is_hidden":false,"ctime":1561454221,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":3,"child_discussions":[{"author":{"id":1068927,"avatar":"https://static001.geekbang.org/account/avatar/00/10/4f/7f/5dc11380.jpg","nickname":"苏志辉","note":"","ucode":"39B25CE21C04EE","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1333607,"avatar":"https://static001.geekbang.org/account/avatar/00/14/59/67/f4ba1da4.jpg","nickname":"Hello world","note":"","ucode":"4D2EF3034571B7","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":8342,"discussion_content":"对的，我也感觉这和零拷贝没有关系","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567932888,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":335,"ip_address":""},"score":8342,"extra":""},{"author":{"id":1759325,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/d8/5d/07dfb3b5.jpg","nickname":"杯莫停","note":"","ucode":"4FA1D5CBBEF702","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1333607,"avatar":"https://static001.geekbang.org/account/avatar/00/14/59/67/f4ba1da4.jpg","nickname":"Hello world","note":"","ucode":"4D2EF3034571B7","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":302519,"discussion_content":"有没有关系是看消息是是哪里进行校验的，如果是在用户态，势必有内核态和用户态上下文切换。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1598944256,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":335,"ip_address":""},"score":302519,"extra":""},{"author":{"id":2706844,"avatar":"https://static001.geekbang.org/account/avatar/00/29/4d/9c/ae441524.jpg","nickname":"wupeng","note":"","ucode":"0AC0A3C97142D0","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1759325,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/d8/5d/07dfb3b5.jpg","nickname":"杯莫停","note":"","ucode":"4FA1D5CBBEF702","race_medal":0,"user_type":1,"is_pvip":true},"discussion":{"id":585663,"discussion_content":"这里应该是 是否copy到用户内存中吧","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1661755009,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":302519,"ip_address":"北京"},"score":585663,"extra":""}]},{"author":{"id":1132785,"avatar":"https://static001.geekbang.org/account/avatar/00/11/48/f1/93817e0f.jpg","nickname":"微星","note":"","ucode":"D41E7EB64D64F9","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":3104,"discussion_content":"实现网络传输过程中的效验问题，可以放到网络层去实现，这样术业有专攻，效率也高","likes_number":5,"is_delete":false,"is_hidden":false,"ctime":1564188622,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1181650,"avatar":"https://static001.geekbang.org/account/avatar/00/12/07/d2/0d7ee298.jpg","nickname":"惘 闻","note":"","ucode":"C5909F034BF072","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":338830,"discussion_content":"mark,我也觉得老师这里说的前后文冲突.前面说消息格式不一致会导致解压缩再压缩,会失去零拷贝的特性.后面又说不管消息格式一不一致都会解压缩进行校验.对照前面来看,这里似乎也是会丧尸零拷贝的性质.","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1609396280,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":3,"child_discussions":[{"author":{"id":2015446,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKXf8W8e1yfnpX27ofJibVHhicicKvWeMxvQGgd72tfMm00e9u58EKD6TRFSGuTf7I7147GftmT1qFlg/132","nickname":"lecram","note":"","ucode":"B9409F53E182B2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1181650,"avatar":"https://static001.geekbang.org/account/avatar/00/12/07/d2/0d7ee298.jpg","nickname":"惘 闻","note":"","ucode":"C5909F034BF072","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":364156,"discussion_content":"我的理解是这样的：1. broker拿到数据后，会把消息集合写入到磁盘里面，写入前进行了消息集合解压缩校验；这个过程中，无论是否进行了解压缩，消息集合一定是从用户态->内核态，本来就用不上零拷贝，所以就不存在丧失零拷贝这一说法； 2. 当消费者来取数据的时候，我们的消息集合原本存储在磁盘中，首先会被操作系统加载到内核态，这个时候会进行检查，如果消息格式和消费者的不一致、或者压缩算法和消费者的不一致，那消息集合就需要被加载到用户态，进行格式转化或者压缩算法转换，这样就用不上零拷贝了，但是假如是一致的，就直接通过零拷贝将数据从内核态发送到消费者那去就行了～","likes_number":19,"is_delete":false,"is_hidden":false,"ctime":1617374458,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":338830,"ip_address":""},"score":364156,"extra":""},{"author":{"id":1181650,"avatar":"https://static001.geekbang.org/account/avatar/00/12/07/d2/0d7ee298.jpg","nickname":"惘 闻","note":"","ucode":"C5909F034BF072","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2015446,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKXf8W8e1yfnpX27ofJibVHhicicKvWeMxvQGgd72tfMm00e9u58EKD6TRFSGuTf7I7147GftmT1qFlg/132","nickname":"lecram","note":"","ucode":"B9409F53E182B2","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":364746,"discussion_content":"谢谢","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1617591444,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":364156,"ip_address":""},"score":364746,"extra":""},{"author":{"id":1109389,"avatar":"https://static001.geekbang.org/account/avatar/00/10/ed/8d/377c106a.jpg","nickname":"KW💤","note":"","ucode":"290DD7016F4EE0","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2015446,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKXf8W8e1yfnpX27ofJibVHhicicKvWeMxvQGgd72tfMm00e9u58EKD6TRFSGuTf7I7147GftmT1qFlg/132","nickname":"lecram","note":"","ucode":"B9409F53E182B2","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":406813,"discussion_content":"呃...socket buffer通过通道（或者DMA）直接跟kernel buffer（文件这里实际是page buffer）双向交互的。broker端即便要校验，也可以用mmap减少拷贝。kafka主要讲的零拷贝是file到socket这一段传输","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1634831202,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":364156,"ip_address":""},"score":406813,"extra":""}]},{"author":{"id":1620239,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b9/0f/648a4b3f.jpg","nickname":"配方","note":"","ucode":"C8C7214F0C195E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":62120,"discussion_content":"broker接收消息的recvbuffer经过网卡拷贝至用户空间，在用户空间进行校验操作，完成后消息写入磁盘，应该不经过内核态。消息消费时IO应该会调用read将消息从磁盘拷贝至内核空间，在由cpu复制到用户空间进行sendbuffer组装进入网络层。我是这样理解的","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1574818071,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1579066,"avatar":"https://static001.geekbang.org/account/avatar/00/18/18/3a/b407889c.jpg","nickname":"Geek_817ea4","note":"","ucode":"D1194D33C4DC11","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":787,"discussion_content":"同问","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1562058225,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1001861,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/49/85/3f161d95.jpg","nickname":"Alpha","note":"","ucode":"60CA15A25EC796","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":289,"discussion_content":"有想相同的疑问，`每个压缩过的消息集合在 Broker 端写入时都要发生解压缩，目的就是为了对消息执行各种验证`，这是否意味着只要有压缩 就丧失零拷贝特性了呢？","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1561429711,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":106898,"user_name":"Li Shunduo","can_delete":false,"product_type":"c1","uid":1222882,"ip_address":"","ucode":"6C5AB4129E9780","user_header":"https://static001.geekbang.org/account/avatar/00/12/a8/e2/f8e51df2.jpg","comment_is_top":false,"comment_ctime":1561423564,"is_pvip":false,"replies":[{"id":"38803","content":"目前java  consumer的设计是一次取出一批，缓存在客户端内存中，然后再过滤出max.poll.records条消息返给你，也不算太浪费吧，毕竟下次可以直接从缓存中取，不用再发请求了。","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1561511711,"ip_address":"","comment_id":106898,"utype":1}],"discussion_count":5,"race_medal":0,"score":"104640638668","product_id":100029201,"comment_content":"假如一个消息集合里有10条消息，并且被压缩，但是消费端配置每次只poll 5条消息。这种情况下，消费端怎么解压缩？矛盾点是 如果只取5条消息，需要broker帮助解压缩；如果取整个消息集合10条消息，会有贷款等资源的浪费？","like_count":25,"discussions":[{"author":{"id":1133918,"avatar":"https://static001.geekbang.org/account/avatar/00/11/4d/5e/c5c62933.jpg","nickname":"lmtoo","note":"","ucode":"FCD5B9C941D448","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":284,"discussion_content":"这种消费端直接取出消息集合，然后解压，只取5条","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1561426664,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":455272,"discussion_content":"目前java  consumer的设计是一次取出一批，缓存在客户端内存中，然后再过滤出max.poll.records条消息返给你，也不算太浪费吧，毕竟下次可以直接从缓存中取，不用再发请求了。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1561511711,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1547667,"avatar":"https://static001.geekbang.org/account/avatar/00/17/9d/93/4159edaa.jpg","nickname":"朴素柠檬c","note":"","ucode":"2D4CBB70D801B1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":328573,"discussion_content":"leader中消息的index是一条消息的还是一批消息的\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1606182810,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1547667,"avatar":"https://static001.geekbang.org/account/avatar/00/17/9d/93/4159edaa.jpg","nickname":"朴素柠檬c","note":"","ucode":"2D4CBB70D801B1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":328572,"discussion_content":"消费端取一批，index是记5 还是 10","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1606182752,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1339409,"avatar":"https://static001.geekbang.org/account/avatar/00/14/70/11/42cf8f9d.jpg","nickname":"chenjia","note":"","ucode":"61983C29FF4987","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1547667,"avatar":"https://static001.geekbang.org/account/avatar/00/17/9d/93/4159edaa.jpg","nickname":"朴素柠檬c","note":"","ucode":"2D4CBB70D801B1","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":366596,"discussion_content":"应该是5，因为另外5个在逻辑上并没有被取出，只是缓存在客户端了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1618129150,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":328572,"ip_address":""},"score":366596,"extra":""}]}]},{"had_liked":false,"id":107081,"user_name":"Hello world","can_delete":false,"product_type":"c1","uid":1333607,"ip_address":"","ucode":"4D2EF3034571B7","user_header":"https://static001.geekbang.org/account/avatar/00/14/59/67/f4ba1da4.jpg","comment_is_top":false,"comment_ctime":1561455274,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"83165833898","product_id":100029201,"comment_content":"做一个笔记<br>怎么压缩：<br>1、新版本改进将每个消息公共部分取出放在外层消息集合，例如消息的 CRC 值<br>2、新老版本的保存压缩消息的方法变化，新版本是对整个消息集合进行压缩<br>何时压缩：<br>1、正常情况下都是producer压缩，节省带宽，磁盘存储<br>2、例外情况 a、broker端和producer端使用的压缩方法不同 b、broker与client交互，消息版本不同<br>何时解压缩：<br>1、consumer端解压缩<br>2、broker端解压缩，用来对消息执行验证<br><br>优化：选择适合自己的压缩算法，是更看重吞吐量还是压缩率。其次尽量server和client保持一致，这样不会损失kafka的zero copy优势","like_count":20,"discussions":[{"author":{"id":1155275,"avatar":"https://static001.geekbang.org/account/avatar/00/11/a0/cb/aab3b3e7.jpg","nickname":"张三丰","note":"","ucode":"3A6215A40B3B21","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":312904,"discussion_content":"非常完美","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1602851078,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":107356,"user_name":"风中花","can_delete":false,"product_type":"c1","uid":1085237,"ip_address":"","ucode":"067E0A1E116844","user_header":"https://static001.geekbang.org/account/avatar/00/10/8f/35/f1839bb2.jpg","comment_is_top":false,"comment_ctime":1561518303,"is_pvip":false,"replies":[{"id":"38936","content":"个人觉得学一个东西最重要的还是要用，如果只是参加一些培训课程很难全面的理解。您这么多的留言我一直坚持回复。我也一直是这个观点：用起来，自然问题就来了。<br><br>我学机器学习的经历和您现在学Kafka很像。没有实际使用场景怎么学都觉得深入不了。<br><br>我给您的建议是：把Kafka官网通读几遍然后再实现一个实时日志收集系统（比如把服务器日志实时放入Kafka）。事实上，能把官网全面理解的话已经比很多Kafka使用者要强了。<br>","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1561596481,"ip_address":"","comment_id":107356,"utype":1}],"discussion_count":2,"race_medal":0,"score":"78870929631","product_id":100029201,"comment_content":"胡老师您好！ 我们已经学历10多节课了！ 针对我们得留言和反馈，不知道您有没有给我们一些后续得课程得学习建议和方法？我目前得学习就是您告诉我们得，我必须学会记住。但是看同学们得评论和反馈，我觉得貌似还有很多很多知识啊且不知也不懂，故有此一问！希望老师能给与一点一点学习建议？ 感谢老师","like_count":19,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":455484,"discussion_content":"个人觉得学一个东西最重要的还是要用，如果只是参加一些培训课程很难全面的理解。您这么多的留言我一直坚持回复。我也一直是这个观点：用起来，自然问题就来了。\n\n我学机器学习的经历和您现在学Kafka很像。没有实际使用场景怎么学都觉得深入不了。\n\n我给您的建议是：把Kafka官网通读几遍然后再实现一个实时日志收集系统（比如把服务器日志实时放入Kafka）。事实上，能把官网全面理解的话已经比很多Kafka使用者要强了。\n","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1561596481,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1085237,"avatar":"https://static001.geekbang.org/account/avatar/00/10/8f/35/f1839bb2.jpg","nickname":"风中花","note":"","ucode":"067E0A1E116844","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":452,"discussion_content":"谢谢老师的答复和给出的学建议！ 非常感谢您一直以来的回复！ 感谢老师！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1561598422,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":160967,"user_name":"衣申人","can_delete":false,"product_type":"c1","uid":1115777,"ip_address":"","ucode":"887FE9109B97DE","user_header":"https://static001.geekbang.org/account/avatar/00/11/06/81/28418795.jpg","comment_is_top":false,"comment_ctime":1576071276,"is_pvip":false,"replies":[{"id":"61395","content":"是的，就是你理解的那样。Kafka使用Zero Copy优化将页缓存中的数据直接传输到Socket——这的确是发生在broker到consumer的链路上。这种优化能成行的前提是consumer端能够识别磁盘上的消息格式。<br>","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1576111302,"ip_address":"","comment_id":160967,"utype":1}],"discussion_count":3,"race_medal":0,"score":"70295548012","product_id":100029201,"comment_content":"老师，我看源码，broker在接收producer消息并落盘这块貌似没有用零拷贝啊！只有传输给consumer时用了，求解答","like_count":17,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":477547,"discussion_content":"是的，就是你理解的那样。Kafka使用Zero Copy优化将页缓存中的数据直接传输到Socket——这的确是发生在broker到consumer的链路上。这种优化能成行的前提是consumer端能够识别磁盘上的消息格式。\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1576111302,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1547667,"avatar":"https://static001.geekbang.org/account/avatar/00/17/9d/93/4159edaa.jpg","nickname":"朴素柠檬c","note":"","ucode":"2D4CBB70D801B1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":328576,"discussion_content":"零拷贝是发生在消费的时候，kafka直接从磁盘读取到网卡上通过网络发送给消费端的网卡吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1606183101,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1135707,"avatar":"https://static001.geekbang.org/account/avatar/00/11/54/5b/1a14d829.jpg","nickname":"WhatAKitty","note":"","ucode":"911C089450926B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":223104,"discussion_content":"Kafka为啥不在获取消息后再根据消息的版本来做格式转化？是因为会造成重客户端的情况吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1586185989,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":113056,"user_name":"星期八","can_delete":false,"product_type":"c1","uid":1185504,"ip_address":"","ucode":"34A37F73A48E7F","user_header":"https://static001.geekbang.org/account/avatar/00/12/16/e0/7abad3cc.jpg","comment_is_top":false,"comment_ctime":1562892362,"is_pvip":false,"replies":[{"id":"41138","content":"主要是这两个参数：batch.size和linger.ms。如果是生产了一条消息且linger.ms=0，通常producer就会立即发送者一条消息了。","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1562894094,"ip_address":"","comment_id":113056,"utype":1}],"discussion_count":2,"race_medal":0,"score":"61692434506","product_id":100029201,"comment_content":"老师那再问一下，如果多条消息组成消息集合发送，那是什么条件控制消息发送，如果是一条又是什么条件控制触发发送的呢","like_count":14,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":458038,"discussion_content":"主要是这两个参数：batch.size和linger.ms。如果是生产了一条消息且linger.ms=0，通常producer就会立即发送者一条消息了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1562894094,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1134861,"avatar":"https://static001.geekbang.org/account/avatar/00/11/51/0d/fc1652fe.jpg","nickname":"James","note":"","ucode":"48B0F2A334D1C1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":49191,"discussion_content":"马克","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573563091,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":106925,"user_name":"cricket1981","can_delete":false,"product_type":"c1","uid":1001715,"ip_address":"","ucode":"758262F5958DA4","user_header":"https://static001.geekbang.org/account/avatar/00/0f/48/f3/f1034ffd.jpg","comment_is_top":false,"comment_ctime":1561425445,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"57396000293","product_id":100029201,"comment_content":"校验的目的是防止因为网络传输出现问题导致broker端接收了受损的消息，所以应该放在作为serverr broker端进行，而不是在作为client端的producer。改进的方案可以是针对一次传输的整个message set进行CRC检验，而不是针对一条条消息，这能够大大提高校验效率，因为避免了解压缩。","like_count":13},{"had_liked":false,"id":107754,"user_name":"南辕北辙","can_delete":false,"product_type":"c1","uid":1214502,"ip_address":"","ucode":"03EC406AE0D591","user_header":"https://static001.geekbang.org/account/avatar/00/12/88/26/b8c53cee.jpg","comment_is_top":false,"comment_ctime":1561603585,"is_pvip":false,"replies":[{"id":"39135","content":"它只是解压缩读取而已，不会将解压缩之后的数据回写到磁盘。另外就像我置顶的留言那样，目前社区已经接纳了京东小伙伴的修改，貌似可以绕过这部分解压缩了，。","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1561681043,"ip_address":"","comment_id":107754,"utype":1}],"discussion_count":3,"race_medal":0,"score":"48806243841","product_id":100029201,"comment_content":"老师有一点不是很明白，在正常情况下broker端会原样保存起来，但是为了检验需要解压缩。该怎么去理解这个过程呢，broker端解压缩以后还会压缩还原吗？<br>这个过程是在用户态执行的吗，总感觉怪怪的","like_count":11,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":455656,"discussion_content":"它只是解压缩读取而已，不会将解压缩之后的数据回写到磁盘。另外就像我置顶的留言那样，目前社区已经接纳了京东小伙伴的修改，貌似可以绕过这部分解压缩了，。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1561681043,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1547667,"avatar":"https://static001.geekbang.org/account/avatar/00/17/9d/93/4159edaa.jpg","nickname":"朴素柠檬c","note":"","ucode":"2D4CBB70D801B1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":328577,"discussion_content":"持久化的时候是压缩的还是解压缩的？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1606183492,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1603004,"avatar":"https://static001.geekbang.org/account/avatar/00/18/75/bc/e24e181e.jpg","nickname":"Calvin","note":"","ucode":"0EEF5B207623B5","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1547667,"avatar":"https://static001.geekbang.org/account/avatar/00/17/9d/93/4159edaa.jpg","nickname":"朴素柠檬c","note":"","ucode":"2D4CBB70D801B1","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":347557,"discussion_content":"我理解应该是解压缩校验通过之后，把原来的压缩消息集（原样）存起来，不知道理解得对不对。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1612257058,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":328577,"ip_address":""},"score":347557,"extra":""}]}]},{"had_liked":false,"id":106981,"user_name":"dream","can_delete":false,"product_type":"c1","uid":1117793,"ip_address":"","ucode":"65B33D32FA8BE9","user_header":"https://static001.geekbang.org/account/avatar/00/11/0e/61/ae68f8eb.jpg","comment_is_top":false,"comment_ctime":1561431189,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"48806071445","product_id":100029201,"comment_content":"老师，对于消息层次、消息集合、消息这三者的概念与关系我有点懵，能不能详细说一下？谢谢！","like_count":11,"discussions":[{"author":{"id":1134861,"avatar":"https://static001.geekbang.org/account/avatar/00/11/51/0d/fc1652fe.jpg","nickname":"James","note":"","ucode":"48B0F2A334D1C1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":49119,"discussion_content":"那就百度…\n其实说这些应该有图的，而不是文字。\n我去百度咯","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1573557108,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1085237,"avatar":"https://static001.geekbang.org/account/avatar/00/10/8f/35/f1839bb2.jpg","nickname":"风中花","note":"","ucode":"067E0A1E116844","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":381,"discussion_content":"其实我也没有怎么明白！ 消息层次：1 消息集合 2 消息 。也希望老师辛苦再说下","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1561517449,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":106985,"user_name":"dream","can_delete":false,"product_type":"c1","uid":1117793,"ip_address":"","ucode":"65B33D32FA8BE9","user_header":"https://static001.geekbang.org/account/avatar/00/11/0e/61/ae68f8eb.jpg","comment_is_top":false,"comment_ctime":1561432222,"is_pvip":false,"replies":[{"id":"38828","content":"消息批次RecordBatch里面包含若干条消息（record)。<br>你可以认为消息批次和消息集合是等价的，消息和日志项是等价的。<br>这样消息层次有两层：外层是消息批次（或消息集合）；里层是消息（或日志项）。<br>Producer以recordbatch为单位发送消息，对于V2版本一个batch中通常包含多条消息。<br><br>在V2版本中，在batch层面计算CRC值；在V1版本中，每条消息都要计算CRC值。","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1561514897,"ip_address":"","comment_id":106985,"utype":1}],"discussion_count":6,"race_medal":0,"score":"44511105182","product_id":100029201,"comment_content":"老师，我对消息层次、消息集合、消息、日志项这些概念与它们之间的关系感觉很懵，<br>消息层次都分消息集合以及消息，消息集合中包含日志项，日志项中封装消息，<br>那么日志项中封装的是producer发送的消息吗？<br>一个日志项中会包含多条消息吗？<br>消息集合中消息项封装的的消息与消息层次包含的消息有什么关系呢？<br>这两个消息与producer发送的消息有什么关系呢？<br>一个消息集合对应是producer发送的一条消息还是多条消息呢？<br>最后，老师能不能详细说一下CRC校验，谢谢！","like_count":11,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":455313,"discussion_content":"消息批次RecordBatch里面包含若干条消息（record)。\n你可以认为消息批次和消息集合是等价的，消息和日志项是等价的。\n这样消息层次有两层：外层是消息批次（或消息集合）；里层是消息（或日志项）。\nProducer以recordbatch为单位发送消息，对于V2版本一个batch中通常包含多条消息。\n\n在V2版本中，在batch层面计算CRC值；在V1版本中，每条消息都要计算CRC值。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1561514897,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2739957,"avatar":"","nickname":"Geek_39299b","note":"","ucode":"908C2FC4DECD33","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":389392,"discussion_content":"了然","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1629260140,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1547667,"avatar":"https://static001.geekbang.org/account/avatar/00/17/9d/93/4159edaa.jpg","nickname":"朴素柠檬c","note":"","ucode":"2D4CBB70D801B1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":328579,"discussion_content":"看到这 瞬间明白了，都统一成一个名称多好，非搞两种","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1606183808,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1134861,"avatar":"https://static001.geekbang.org/account/avatar/00/11/51/0d/fc1652fe.jpg","nickname":"James","note":"","ucode":"48B0F2A334D1C1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":49197,"discussion_content":"马克","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573563312,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1009652,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/67/f4/9a1feb59.jpg","nickname":"钱","note":"","ucode":"2C92A243A463D4","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":4782,"discussion_content":"有同样的疑惑，如果出现未解释过的概念，先解释一下就好了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1565737744,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1134861,"avatar":"https://static001.geekbang.org/account/avatar/00/11/51/0d/fc1652fe.jpg","nickname":"James","note":"","ucode":"48B0F2A334D1C1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1009652,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/67/f4/9a1feb59.jpg","nickname":"钱","note":"","ucode":"2C92A243A463D4","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":49198,"discussion_content":"没有解释就过了。可能有用过的，还能理解一下","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573563340,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":4782,"ip_address":""},"score":49198,"extra":""}]}]},{"had_liked":false,"id":106913,"user_name":"曾轼麟","can_delete":false,"product_type":"c1","uid":1451391,"ip_address":"","ucode":"D418371AC11270","user_header":"https://static001.geekbang.org/account/avatar/00/16/25/7f/473d5a77.jpg","comment_is_top":false,"comment_ctime":1561424494,"is_pvip":false,"replies":[{"id":"38800","content":"有一定道理。有机会我向社区反馈下：）","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1561511332,"ip_address":"","comment_id":106913,"utype":1}],"discussion_count":3,"race_medal":0,"score":"44511097454","product_id":100029201,"comment_content":"不认同，因为网络传输也会造成丢失，但是我建议可以在消息里面使用一种消耗较小的签名方式sign，比如多使用位移等方式，broke端也这么操纵，如果签名不一致证明有数据丢失，同时签名的方式可以避免CPU大量消耗","like_count":10,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":455279,"discussion_content":"有一定道理。有机会我向社区反馈下：）","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1561511332,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2275396,"avatar":"","nickname":"13549804879","note":"","ucode":"303DFF7082E504","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":373021,"discussion_content":"网络传输造成丢失，不是用传输层来重传和校验吗？ 干嘛在应用层做这事？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1620569771,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1361159,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eqJobg767PUeqrqQQ4B6YvMatj2SRyOicKZZ4gWTf30dMketiaj58Gc3RFTmckGxAXlL9ERSxGovq9g/132","nickname":"涛哥哥","note":"","ucode":"329A1384E3AB5E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2275396,"avatar":"","nickname":"13549804879","note":"","ucode":"303DFF7082E504","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":546101,"discussion_content":"是的，tcp协议能够保证消息不丢。不理解他们说的网络传输丢数据","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1642160514,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":373021,"ip_address":""},"score":546101,"extra":""}]}]},{"had_liked":false,"id":109007,"user_name":"南辕北辙","can_delete":false,"product_type":"c1","uid":1214502,"ip_address":"","ucode":"03EC406AE0D591","user_header":"https://static001.geekbang.org/account/avatar/00/12/88/26/b8c53cee.jpg","comment_is_top":false,"comment_ctime":1561947255,"is_pvip":false,"replies":[{"id":"39460","content":"同一台broker上可能存在多个版本的消息，但每条消息只会以1个版本的形式保存。","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1561951946,"ip_address":"","comment_id":109007,"utype":1}],"discussion_count":2,"race_medal":0,"score":"35921685623","product_id":100029201,"comment_content":"老师有一点有点迷惑，broker为了多版本消息兼容，意思是一份消息有多个版本存在吗，是这个意思吗？","like_count":8,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":456206,"discussion_content":"同一台broker上可能存在多个版本的消息，但每条消息只会以1个版本的形式保存。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1561951946,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1051563,"avatar":"https://static001.geekbang.org/account/avatar/00/10/0b/ab/0e2857e5.jpg","nickname":"Coding小先","note":"","ucode":"965B1CC757E026","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":329000,"discussion_content":"就是会根据 Broker 的 Kafka 的版本，然后保存此版本的消息吧！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1606295455,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":107013,"user_name":"秋","can_delete":false,"product_type":"c1","uid":1398322,"ip_address":"","ucode":"68A2544787E339","user_header":"https://static001.geekbang.org/account/avatar/00/15/56/32/c8b3256c.jpg","comment_is_top":false,"comment_ctime":1561438061,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"35921176429","product_id":100029201,"comment_content":"我看了三遍老师的课，得到了我要的答案：<br>1.如果生产者使用了压缩，broker为了crc校验，会启动解压，这个解压过程不可避免；<br>2.v2的broker为了低版本的消费者，会把消息再次解压并进行协议转换。<br>所以消费者的兼容成本较大，需要避免这个情况。","like_count":8,"discussions":[{"author":{"id":1155275,"avatar":"https://static001.geekbang.org/account/avatar/00/11/a0/cb/aab3b3e7.jpg","nickname":"张三丰","note":"","ucode":"3A6215A40B3B21","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":38389,"discussion_content":"在第一次解压的时候把所有的事都做了不就好了  为何要再次解压呢？  这块不是特别理解","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571765482,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1339409,"avatar":"https://static001.geekbang.org/account/avatar/00/14/70/11/42cf8f9d.jpg","nickname":"chenjia","note":"","ucode":"61983C29FF4987","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1155275,"avatar":"https://static001.geekbang.org/account/avatar/00/11/a0/cb/aab3b3e7.jpg","nickname":"张三丰","note":"","ucode":"3A6215A40B3B21","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":366598,"discussion_content":"他说的是逻辑层面的，你说的是工程实现层面的，说不定真是一次完成两件事","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1618129541,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":38389,"ip_address":""},"score":366598,"extra":""}]}]},{"had_liked":false,"id":134301,"user_name":"代码小生","can_delete":false,"product_type":"c1","uid":1263675,"ip_address":"","ucode":"4AA4B707B78EDF","user_header":"https://static001.geekbang.org/account/avatar/00/13/48/3b/f28beddc.jpg","comment_is_top":false,"comment_ctime":1568798700,"is_pvip":false,"replies":[{"id":"51544","content":"V2依然是做CRC校验的，只不过是在record batch这个层级上做，而不是一条一条消息地做了。如果CRC校验失败，重传batch。也就是说不会以消息作为传输单位进行校验，这样效率太低","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1568853829,"ip_address":"","comment_id":134301,"utype":1}],"discussion_count":1,"race_medal":0,"score":"31633569772","product_id":100029201,"comment_content":"原来在 V1 版本中，每条消息都需要执行 CRC 校验，但是CRC在某些情况下会变化，所以crc拿到消息集和中更好，这个逻辑我没有明白呢，既然CRC会变，为了消息的正确性不更应该每条消息都校验吗？为什么说拿到消息集和中一次校验更好呢？","like_count":7,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":467696,"discussion_content":"V2依然是做CRC校验的，只不过是在record batch这个层级上做，而不是一条一条消息地做了。如果CRC校验失败，重传batch。也就是说不会以消息作为传输单位进行校验，这样效率太低","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1568853829,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":122035,"user_name":"What for","can_delete":false,"product_type":"c1","uid":1254381,"ip_address":"","ucode":"1308573CE047B0","user_header":"https://static001.geekbang.org/account/avatar/00/13/23/ed/a4a774a8.jpg","comment_is_top":false,"comment_ctime":1565273570,"is_pvip":false,"replies":[{"id":"44816","content":"不是固定数量。<br>“在 Producer 端即使消息并没有达到 batch.size 的数量，linger.ms 也可以让它发送一批数据” --- 是的<br><br>取决于linger.ms的值<br>","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1565276646,"ip_address":"","comment_id":122035,"utype":1}],"discussion_count":4,"race_medal":0,"score":"27335077346","product_id":100029201,"comment_content":"老师您好，您的课程很棒，又很实用又有原理性的分析！<br>我想问一个问题，Producer 发送数据时以批次为单位，那么 batch 与 broker 端的消息集合又是怎么样的对应关系呢？每个消息集合的 record 数量是否固定呢？<br>就是说在 Producer 端即使消息并没有达到 batch.size 的数量，linger.ms 也可以让它发送一批数据，那 broker 在低峰期的时候收到一批数据之后是会写入缓存等凑够一定数量组成一个消息集合还是说会立即（或设置超时时间）组成一个消息集合写入磁盘？<br>谢谢！","like_count":6,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":462066,"discussion_content":"不是固定数量。\n“在 Producer 端即使消息并没有达到 batch.size 的数量，linger.ms 也可以让它发送一批数据” --- 是的\n\n取决于linger.ms的值\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1565276646,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":1,"child_discussions":[{"author":{"id":2094925,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/f7/4d/09554c96.jpg","nickname":"iron bo","note":"","ucode":"4BFB1331637AA3","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":560304,"discussion_content":"那后面的消息在Broke落盘，是以多少个消息一批次落盘，还是，就一个消息一个消息的落盘呢","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1649255045,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":462066,"ip_address":""},"score":560304,"extra":""}]},{"author":{"id":1339409,"avatar":"https://static001.geekbang.org/account/avatar/00/14/70/11/42cf8f9d.jpg","nickname":"chenjia","note":"","ucode":"61983C29FF4987","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":366599,"discussion_content":"其实这两个参数都是触发发送操作的阈值，且任一达到就会触发操作","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1618129720,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1008348,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/62/dc/8876c73b.jpg","nickname":"moooofly","note":"","ucode":"4A20795C281B6F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":195630,"discussion_content":"感觉没有回答完全……","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1583292342,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":111830,"user_name":"juan","can_delete":false,"product_type":"c1","uid":1503525,"ip_address":"","ucode":"2799013456F532","user_header":"https://static001.geekbang.org/account/avatar/00/16/f1/25/6908f80a.jpg","comment_is_top":false,"comment_ctime":1562628576,"is_pvip":false,"replies":[{"id":"40682","content":"没有","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1562634481,"ip_address":"","comment_id":111830,"utype":1}],"discussion_count":2,"race_medal":0,"score":"23037465056","product_id":100029201,"comment_content":"如果在配置中不指定压缩算法，kafka有默认的压缩算法吗？","like_count":5,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":457460,"discussion_content":"没有","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1562634481,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1339409,"avatar":"https://static001.geekbang.org/account/avatar/00/14/70/11/42cf8f9d.jpg","nickname":"chenjia","note":"","ucode":"61983C29FF4987","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":366600,"discussion_content":"默认值就是不压缩","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1618129803,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":106912,"user_name":"莫问流年","can_delete":false,"product_type":"c1","uid":1249663,"ip_address":"","ucode":"23140E031AED4B","user_header":"https://static001.geekbang.org/account/avatar/00/13/11/7f/80d56c1c.jpg","comment_is_top":false,"comment_ctime":1561424486,"is_pvip":false,"replies":[{"id":"38809","content":"比如compact类型的topic要检查key是否存在等。有个好消息是我看最新的2.4已经接收了京东同学提的bug而且也修正了。尚不知道京东方面是怎么解决的，有兴趣的话可以看一下：https:&#47;&#47;issues.apache.org&#47;jira&#47;browse&#47;KAFKA-8106","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1561512373,"ip_address":"","comment_id":106912,"utype":1}],"discussion_count":1,"race_medal":0,"score":"23036260966","product_id":100029201,"comment_content":"我觉得消息检验放在producer端是不合理的。首先，检验应该是消息接收方broker的责任，每个发送方不应该承担这种公共的检验工作，也不利于扩展。其次，发送方producer检验影响了producer的性能，而且并不能保证消息到达broker后依然正确。<br>另外，想请教下老师，broker对消息进行的检验一般有哪些？","like_count":5,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":455278,"discussion_content":"比如compact类型的topic要检查key是否存在等。有个好消息是我看最新的2.4已经接收了京东同学提的bug而且也修正了。尚不知道京东方面是怎么解决的，有兴趣的话可以看一下：https://issues.apache.org/jira/browse/KAFKA-8106","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1561512373,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":107729,"user_name":"柯察金","can_delete":false,"product_type":"c1","uid":1115149,"ip_address":"","ucode":"F722BF8FCD2C47","user_header":"https://static001.geekbang.org/account/avatar/00/11/04/0d/3dc5683a.jpg","comment_is_top":false,"comment_ctime":1561600391,"is_pvip":false,"replies":[{"id":"39138","content":"嗯嗯，版本一致肯定是能保证的，不过通常比较难做到。","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1561681197,"ip_address":"","comment_id":107729,"utype":1}],"discussion_count":1,"race_medal":0,"score":"18741469575","product_id":100029201,"comment_content":"怎么样才能保持消息格式统一呢，只要集群中的 kafka 版本一致吗？","like_count":4,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":455640,"discussion_content":"嗯嗯，版本一致肯定是能保证的，不过通常比较难做到。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1561681197,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":267000,"user_name":"归零","can_delete":false,"product_type":"c1","uid":1103208,"ip_address":"","ucode":"C99B8E93009A46","user_header":"https://static001.geekbang.org/account/avatar/00/10/d5/68/2201b6b9.jpg","comment_is_top":false,"comment_ctime":1607567392,"is_pvip":true,"replies":[{"id":"97340","content":"也许应该这么说，解压的完整步骤包括：1、解压；2、把解压后的数据保存下来。broker端避免解压的意思是broker只需要把数据解压之后动态进行校验，而无需把解压之后的结果保存，是这个意思","user_name":"作者回复","user_name_real":"胡夕","uid":"1288090","ctime":1608080537,"ip_address":"","comment_id":267000,"utype":1}],"discussion_count":2,"race_medal":0,"score":"14492469280","product_id":100029201,"comment_content":"这节觉得老师讲的有点没看懂，前面说只有两个场景broker会解压，大部分场景是&quot;**Producer 端压缩、Broker 端保持、Consumer 端解压缩**。&quot; 后面又说每个压缩过的消息集合在 Broker 端写入时都要发生解压缩操作，目的就是为了对消息执行各种验证。这一块能再解释下吗？谢谢！","like_count":3,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":511476,"discussion_content":"也许应该这么说，解压的完整步骤包括：1、解压；2、把解压后的数据保存下来。broker端避免解压的意思是broker只需要把数据解压之后动态进行校验，而无需把解压之后的结果保存，是这个意思","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1608080537,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2739957,"avatar":"","nickname":"Geek_39299b","note":"","ucode":"908C2FC4DECD33","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":389393,"discussion_content":"了然 ，这么重要的细节，还是早些提出比价好。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1629260624,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":193751,"user_name":"一十六夜","can_delete":false,"product_type":"c1","uid":1606581,"ip_address":"","ucode":"41D4A6695B2A7B","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJIIibocUHNRgafeNUvibW0YI2v1qDaiaZCVQ37FcrMs0ettIDD0snhsy4Ac2ADnLmjM7KGNeznj2hrg/132","comment_is_top":false,"comment_ctime":1584957709,"is_pvip":false,"replies":[{"id":"73867","content":"1. 没什么不同；2. 只有一次；3. 差不多的。是否转换也要看是否真的需要转换：）","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1585012193,"ip_address":"","comment_id":193751,"utype":1}],"discussion_count":1,"race_medal":0,"score":"14469859597","product_id":100029201,"comment_content":"老师，问一下，如果producer端设置了压缩，那么broker端不可避免的会解压缩，1、那么此时的解压缩和“Broker 端指定了和 Producer 端不同的压缩算法”以及“Broker 端发生了消息格式转换”这两种情况产生的解压缩有什么不同？2、这种会产生两次解压缩，还是只有一次解压缩呢？3、解压缩后会先做crc校验，然后再做其他转换么？","like_count":3,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":488644,"discussion_content":"1. 没什么不同；2. 只有一次；3. 差不多的。是否转换也要看是否真的需要转换：）","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585012193,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":184647,"user_name":"moooofly","can_delete":false,"product_type":"c1","uid":1008348,"ip_address":"","ucode":"4A20795C281B6F","user_header":"https://static001.geekbang.org/account/avatar/00/0f/62/dc/8876c73b.jpg","comment_is_top":false,"comment_ctime":1583377473,"is_pvip":false,"replies":[{"id":"71462","content":"broker没有设置 --- 我理解你想说设置成“不压缩”，对吧？如果是，那么broker端会解压消息然后写入disk。发送给consumer时就是未压缩的。<br><br>consumer端没有针对压缩的设置","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1583456933,"ip_address":"","comment_id":184647,"utype":1}],"discussion_count":1,"race_medal":0,"score":"14468279361","product_id":100029201,"comment_content":"如果producer设置了compress.type，而broker没有设置，之后broker会解压消息，然后保存在disk上，那后续发送给 consumer 的消息是压缩过的，还是未压缩的？还是也要取决于 consumer 针对压缩的配置？","like_count":3,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":486078,"discussion_content":"broker没有设置 --- 我理解你想说设置成“不压缩”，对吧？如果是，那么broker端会解压消息然后写入disk。发送给consumer时就是未压缩的。\n\nconsumer端没有针对压缩的设置","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1583456933,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":181393,"user_name":"咸淡一首诗","can_delete":false,"product_type":"c1","uid":1435869,"ip_address":"","ucode":"FEE5A9B5139BF1","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLl9nj9b6RydKADq82ZwOad0fQcvXWyQKk5U5RFC2kzHGI4GjIQsIZvHsEm7mFELgMiaGx3lGq9vag/132","comment_is_top":false,"comment_ctime":1582534310,"is_pvip":false,"replies":[{"id":"70337","content":"保证broker端和clients端版本一致就不会出现转换。<br><br>“Broker 端对新版本消息执行向老版本格式的转换是消费者消费时触发的吗？” --- 是的<br><br>是否压缩解压缩取决于消息之前是怎么保存的。如果producer就没有压缩消息，那么自然不涉及这些压缩、解压缩的过程","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1582592994,"ip_address":"","comment_id":181393,"utype":1}],"discussion_count":1,"race_medal":0,"score":"14467436198","product_id":100029201,"comment_content":"老师，”在一个生产环境中，Kafka 集群中同时保存多种版本的消息格式非常常见。为了兼容老版本的格式，Broker 端会对新版本消息执行向老版本格式的转换” 这句话不是很理解，消息的不同版本是由生产者版本决定还是 broker 服务端的版本决定，只需要保证服务端版本一致就不会出现不同消息格式吗？另外，Broker 端对新版本消息执行向老版本格式的转换是消费者消费时触发的吗？其转换过程是先解压缩，然后压缩，最后交给老板消费者吗？","like_count":3,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":484987,"discussion_content":"保证broker端和clients端版本一致就不会出现转换。\n\n“Broker 端对新版本消息执行向老版本格式的转换是消费者消费时触发的吗？” --- 是的\n\n是否压缩解压缩取决于消息之前是怎么保存的。如果producer就没有压缩消息，那么自然不涉及这些压缩、解压缩的过程","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582592994,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":162434,"user_name":"finger","can_delete":false,"product_type":"c1","uid":1751791,"ip_address":"","ucode":"1ADE5B840832D4","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83erYNqD6TIViagNYicZoykSo5WhJs1eu2auaMor17rEdMiaUgKxzibfegsicgTkHpk9JTXD1cFqzeOMWsdg/132","comment_is_top":false,"comment_ctime":1576517457,"is_pvip":false,"replies":[{"id":"61783","content":"很好的思路。需要思考这样的一个问题，broker如何能够信任producer端发来的信息？","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1576543803,"ip_address":"","comment_id":162434,"utype":1}],"discussion_count":1,"race_medal":0,"score":"14461419345","product_id":100029201,"comment_content":"有个思路，可以在producer 压缩之后，将消息字节长度一并发送给broker，broker通过字节长度来判断是否发送网络丢包，实现数据完整性校验。","like_count":3,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":478048,"discussion_content":"很好的思路。需要思考这样的一个问题，broker如何能够信任producer端发来的信息？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1576543803,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":143720,"user_name":"张三丰","can_delete":false,"product_type":"c1","uid":1155275,"ip_address":"","ucode":"3A6215A40B3B21","user_header":"https://static001.geekbang.org/account/avatar/00/11/a0/cb/aab3b3e7.jpg","comment_is_top":false,"comment_ctime":1571763805,"is_pvip":false,"replies":[{"id":"55478","content":"hmmm.... 故事应该这么讲。社区对外宣称是broker拿到消息后不解压，因为这是社区之前做的一次优化，但实际上broker端拿到消息后还是会解压的，做各种校验。当然最近社区新增了一个patch貌似移除因做校验而引入的解压。Consumer端拿到压缩消息后肯定要解压才能消费。","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1571791819,"ip_address":"","comment_id":143720,"utype":1}],"discussion_count":1,"race_medal":0,"score":"14456665693","product_id":100029201,"comment_content":"下面这句话不太明白了，老师后边说实际上消费端接收消息的时候一定会解压的，因为需要对消息集合做CRC检验，文中有段话说只有两个例外情况是解压的，如果是这样的话，那到底是原封不动还是一定解压呢？<br><br>”其实大部分情况下 Broker 从 Producer 端接收到消息后仅仅是原封不动地保存而不会对其进行任何修改”<br><br>","like_count":3,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":471665,"discussion_content":"hmmm.... 故事应该这么讲。社区对外宣称是broker拿到消息后不解压，因为这是社区之前做的一次优化，但实际上broker端拿到消息后还是会解压的，做各种校验。当然最近社区新增了一个patch貌似移除因做校验而引入的解压。Consumer端拿到压缩消息后肯定要解压才能消费。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571791819,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":175651,"user_name":"元气蛋蛋","can_delete":false,"product_type":"c1","uid":1777976,"ip_address":"","ucode":"F89194DB861530","user_header":"https://wx.qlogo.cn/mmopen/vi_32/DYAIOgq83eq4Qc6ian5Y9KT5tg88ickhBvictPKvu2CXrib8oxnXbrTLicGwIArskjxuWLQxMvniavPCibvWNgVK6ic19g/132","comment_is_top":false,"comment_ctime":1580790304,"is_pvip":false,"replies":[{"id":"68339","content":"不是说解压缩就一定会丧失Zero Copy。因版本转化而导致消息格式要被重构的场景才会丧失Zero Copy。否则，只是解压缩，数据依然在页缓存中啊","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1580864597,"ip_address":"","comment_id":175651,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10170724896","product_id":100029201,"comment_content":"老师我想问一下，如果Broker端一定会解压缩，那么一定会将数据从内核态拷贝到用户态，那么Kafka是怎么实现内核态的零拷贝","like_count":2,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":482843,"discussion_content":"不是说解压缩就一定会丧失Zero Copy。因版本转化而导致消息格式要被重构的场景才会丧失Zero Copy。否则，只是解压缩，数据依然在页缓存中啊","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1580864597,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":153559,"user_name":"雨落漂洋","can_delete":false,"product_type":"c1","uid":1127624,"ip_address":"","ucode":"9D53DB4482AA24","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKPmOyph1XeszC69tTLENkZFJqjJ7CqtxlSpNEiaonB9ebLnKEh8w7gk7TXQiay4JvA0fQtLYKw718Q/132","comment_is_top":false,"comment_ctime":1574258702,"is_pvip":false,"replies":[{"id":"59025","content":"Broker端和Client端版本不兼容，特别是Broker端版本&lt;Client端版本","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1574295859,"ip_address":"","comment_id":153559,"utype":1}],"discussion_count":2,"race_medal":0,"score":"10164193294","product_id":100029201,"comment_content":"何时会发生新版本消息向老版本消息的转换？这点不是很明白~","like_count":2,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":475209,"discussion_content":"Broker端和Client端版本不兼容，特别是Broker端版本&amp;lt;Client端版本","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574295859,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1547667,"avatar":"https://static001.geekbang.org/account/avatar/00/17/9d/93/4159edaa.jpg","nickname":"朴素柠檬c","note":"","ucode":"2D4CBB70D801B1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":328587,"discussion_content":"平滑升级broker版本的时候，持久化后的数据也是吧","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1606184912,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":145099,"user_name":"注定非凡","can_delete":false,"product_type":"c1","uid":1113597,"ip_address":"","ucode":"80673056E131B7","user_header":"https://static001.geekbang.org/account/avatar/00/10/fd/fd/326be9bb.jpg","comment_is_top":false,"comment_ctime":1572190180,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"10162124772","product_id":100029201,"comment_content":"1，为什么要压缩：<br>        压缩秉承了用时间换空间的经典trade-off思想，即用CPU的时间去换取磁盘空间或网络I&#47;O传输量，Kafka的压缩算法也是出于这种目的。<br><br>2，如何压缩：<br>\t了解Kafka如何压缩消息，首先要清楚Kafka的消息格式，目前kafka有两大类消息格式，社区称之为V1版本和V2版本。<br>A：共同点:<br>\t(1)：Kafka的消息层次分为：消息集合（message set）和消息（message）；一个消息集合中包含若干条日志项（record item），而日志项才是真正封装消息的地方。<br>\t(2)：Kafka底层的消息日志由一系列消息集合日志项组成。Kafka通常不会直接操作具体的一条条消息，他总是在消息集合这个层面上进行写入操作。<br>B：不同点：引入V2的目的主要是针对V1版本的一些弊端做了修正<br>（1）把消息的公共部分抽取出来放到外层集合里。<br>        如：在V1中每条消息都要执行CRC校验（循环冗余校验），有些情况下消息的CRC值会变，对每条消息都执行CRC校验，不仅浪费空间还耽误CUP时间。<br>（2）报存压缩消息的方法发生了变化：<br>        v1把多条消息进行压缩后在保存到外层消息的消息体字段中。<br>        v2 对整个消息集合进行压缩，压缩效果好与前者。<br><br>3，何时压缩：<br>\t在kafka中可能发生压缩的地方：生产者端和Broker端<br>A：生产者端：配置compression.type参数即表示指定类型的压缩算法。<br>B：有两种情况会样Broker端也可能进行压缩<br>\t（1）：Broker端指定了和Producer端不同的压缩算法，这会导致Broker端接收到生产者发来的压缩消息，Broker端重新解压、在压缩。<br>\t（2）：Broker端发生了消息格式转换，这种转换主要是为了兼容老版本的消费者程序，（v1和v2的差别）。这个过程会涉及消息的解压和重新压缩。这不仅对性能影响很大，还会让Kafka丧失引以为豪的Zero Copy特性。<br><br>4，何时解压：<br>通常情况下解压发生在消费者端。<br>A：这个流程是Producer发送的压缩消息到Broker，Broker原封不动的保存起来，当Consumer程序请求这部分消息时，Broker原样发出去，当下消息到的Consumer端后，由Consumer自行解压。<br>B：Consume之所以知道这些消息是用何种压缩算法的，是因为Kafka会将启用了哪种压缩算法封装到消息集合中，当Consumer读取到消息集合时，就知道了。<br><br>5：压缩算法对比：<br>在Kafka2.1.0版本之前，仅支持GZIP，Snappy和LZ4。2.1.0后还支持Zstandard算法(Facebook开源，能够提供超高压缩比)。<br>A：一个压缩算法的优劣，有两个重要指标：压缩比和压缩&#47;解压缩吞吐量，两者都是越高越好。<br>B：吞吐量：LZ4&gt;Snappy&gt;zstd和GZIP，压缩比：zstd&gt;LZ4&gt;GZIP&gt;Snappy<br><br>6：最佳实践：<br>A：启用压缩的一个条件是Producer端所在机器CPU资源充裕<br>B：生产环境网络带宽资源有限<br>C：尽量不要出现消息格式转换的情况。<br>","like_count":2},{"had_liked":false,"id":132343,"user_name":"Tim","can_delete":false,"product_type":"c1","uid":1480717,"ip_address":"","ucode":"3AAA9FD3D8DDDB","user_header":"https://static001.geekbang.org/account/avatar/00/16/98/0d/fb77a32c.jpg","comment_is_top":false,"comment_ctime":1568093381,"is_pvip":false,"replies":[{"id":"50636","content":"CRC校验、compact topic校验等。不过可以看我置顶的帖子，目前社区真的已经移除了这方面的校验，而且是咱们国内开发人员提交的patch","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1568113386,"ip_address":"","comment_id":132343,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10158027973","product_id":100029201,"comment_content":"老师，这个导致不得不执行解压的消息校验，主要是要校验什么呢？根据什么逻辑校验呢？十分感谢老师","like_count":2,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":466888,"discussion_content":"CRC校验、compact topic校验等。不过可以看我置顶的帖子，目前社区真的已经移除了这方面的校验，而且是咱们国内开发人员提交的patch","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1568113386,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":118482,"user_name":"行则将至","can_delete":false,"product_type":"c1","uid":1542987,"ip_address":"","ucode":"DB972F2DF059C4","user_header":"https://static001.geekbang.org/account/avatar/00/17/8b/4b/fa52d222.jpg","comment_is_top":false,"comment_ctime":1564373110,"is_pvip":false,"replies":[{"id":"43516","content":"hmmmm，不太确定我100%理解了你的意思。如果你是想问，rebalance之后consumer会更换之前的消费分区分配方案，那么不论是不是key-ordering的，都有这个风险：即原来由consumer1消费的keyed消息，现在改由consumer2消费了","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1564447367,"ip_address":"","comment_id":118482,"utype":1}],"discussion_count":1,"race_medal":1,"score":"10154307702","product_id":100029201,"comment_content":"老师，追问一个问题。之前问过您关于使用key-ordering策略的问题。如果出现reblance，就可能导致消息丢失的问题。是不是说，如果使用key-ordering策略，就必须保证消费者组不能出现reblance？","like_count":2,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":460430,"discussion_content":"hmmmm，不太确定我100%理解了你的意思。如果你是想问，rebalance之后consumer会更换之前的消费分区分配方案，那么不论是不是key-ordering的，都有这个风险：即原来由consumer1消费的keyed消息，现在改由consumer2消费了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1564447367,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":107104,"user_name":"刘朋","can_delete":false,"product_type":"c1","uid":1075141,"ip_address":"","ucode":"7B7B8E4776C22E","user_header":"https://static001.geekbang.org/account/avatar/00/10/67/c5/63b09189.jpg","comment_is_top":false,"comment_ctime":1561459591,"is_pvip":false,"replies":[{"id":"38826","content":"消息batch的元数据不用解压缩就能获取","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1561514586,"ip_address":"","comment_id":107104,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10151394183","product_id":100029201,"comment_content":"问题: 压缩&#47;解压缩格式类型保存位置表述不清晰<br>文内在解压缩时说,Kafka会将启用了哪些压缩算法封装进消息集合中,这样当Consumer读取到消息集合时,<br>它自然就知道了这些消息使用的是哪种压缩算法.但在文内压缩时说, V2版本是对整个消息集合进行压缩.<br><br>从字面意思来理解,Producer在对消息集合压缩前,已经将压缩格式封装到了消息集合中.Consumer是怎么获取的压缩格式类型?要获取压缩格式得先进行解压,然后才能获取压缩类型. 这前后表述有矛盾了,有待解惑.","like_count":2,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":455365,"discussion_content":"消息batch的元数据不用解压缩就能获取","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1561514586,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":324099,"user_name":"xusenme","can_delete":false,"product_type":"c1","uid":1263618,"ip_address":"","ucode":"5AD07291DF9752","user_header":"","comment_is_top":false,"comment_ctime":1638294316,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5933261612","product_id":100029201,"comment_content":"感觉老师讲不清楚，给人一种前后矛盾的感觉，一会说解压缩无法使用零拷贝，一会儿又说一定会有解压缩","like_count":2},{"had_liked":false,"id":312498,"user_name":"日就月将","can_delete":false,"product_type":"c1","uid":2651148,"ip_address":"","ucode":"0F9BA55A2898FF","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/cabLXAUXiavXnEckAgo971o4l1CxP4L9wOV2eUGTyKBUicTib6gJyKV9iatM4GG1scz5Ym17GOzXWQEGzhE31tXUtQ/132","comment_is_top":false,"comment_ctime":1631843728,"is_pvip":false,"replies":[{"id":"114440","content":"因为要现在java heap上进行处理，没法直接走page cache","user_name":"作者回复","user_name_real":"胡夕","uid":"1288090","ctime":1634004629,"ip_address":"","comment_id":312498,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5926811024","product_id":100029201,"comment_content":"老师，为什么Broker端发生了消息格式转换会让kafka丧失zero copy特性，Broker端和Producer端使用不同的压缩算法也会出现这种情况吗？","like_count":1,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":526989,"discussion_content":"因为要现在java heap上进行处理，没法直接走page cache","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1634004629,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":302359,"user_name":"余生","can_delete":false,"product_type":"c1","uid":2421369,"ip_address":"","ucode":"AEF6C96738F03B","user_header":"https://static001.geekbang.org/account/avatar/00/24/f2/79/b2012f53.jpg","comment_is_top":false,"comment_ctime":1626178336,"is_pvip":true,"replies":[{"id":"109449","content":"大致可以认为抽象出了一些公共部分，所以节省了空间","user_name":"作者回复","user_name_real":"胡夕","uid":"1288090","ctime":1626241797,"ip_address":"","comment_id":302359,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5921145632","product_id":100029201,"comment_content":"我对两个版本分别做了一个简单的测试，结果显示，在相同条件下，不论是否启用压缩，V2 版本都比 V1 版本节省磁盘空间。当启用压缩时，这种节省空间的效果更加明显，就像下面这两张图展示的那样：-------未压缩，为何v2比v1也能节约很多空间?","like_count":1,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":523272,"discussion_content":"大致可以认为抽象出了一些公共部分，所以节省了空间","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1626241797,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":263923,"user_name":"Coding小先","can_delete":false,"product_type":"c1","uid":1051563,"ip_address":"","ucode":"965B1CC757E026","user_header":"https://static001.geekbang.org/account/avatar/00/10/0b/ab/0e2857e5.jpg","comment_is_top":false,"comment_ctime":1606295344,"is_pvip":false,"replies":[{"id":"95854","content":"如果想要深入学习Kafka，建议从源码开始读起，可以参考我另一个专栏：）","user_name":"作者回复","user_name_real":"胡夕","uid":"1288090","ctime":1606440257,"ip_address":"","comment_id":263923,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5901262640","product_id":100029201,"comment_content":"老师，公司没有用到 Kafka，怎么深入呢？目前来说，看了 Kafka 的一些源码，但还不够深入。Kafka 使用方面的话就会搭建和 producer 和 comsumer 的程序编写和简单的一些参数配置。","like_count":1,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":510350,"discussion_content":"如果想要深入学习Kafka，建议从源码开始读起，可以参考我另一个专栏：）","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1606440257,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":156651,"user_name":"。。。。。","can_delete":false,"product_type":"c1","uid":1612570,"ip_address":"","ucode":"985B1561AC9152","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Xibh27ZicBhXls5KsPibBXZI4RKlR0MUbUiaEuOS2ORibKaxWSicpIjd4lvWUWqtNAde7EeDDTpWKAiapGdHeaiaDqczWQ/132","comment_is_top":false,"comment_ctime":1574930647,"is_pvip":false,"replies":[{"id":"60180","content":"不是不用校验了，而是更“聪明”地校验了，至少避开了解压缩","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1574988322,"ip_address":"","comment_id":156651,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5869897943","product_id":100029201,"comment_content":"如果broker不用检验了，那么我Produce端和Broker端就算指定的压缩算法不一样也没影响或者说Broker端就没必要指定压缩算法了？","like_count":1,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":476187,"discussion_content":"不是不用校验了，而是更“聪明”地校验了，至少避开了解压缩","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574988322,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":134719,"user_name":"云师兄","can_delete":false,"product_type":"c1","uid":1010459,"ip_address":"","ucode":"4475AF1598FBFD","user_header":"https://static001.geekbang.org/account/avatar/00/0f/6b/1b/4b397b80.jpg","comment_is_top":false,"comment_ctime":1568902449,"is_pvip":false,"replies":[{"id":"51715","content":"嗯嗯，是的。不过最新版已经移除了因校验而引入的解压缩操作","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1568939921,"ip_address":"","comment_id":134719,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5863869745","product_id":100029201,"comment_content":"用户消息校验的broker解压缩过程，看文章像是必须的操作，但这样是不是也用不到zero copy呢？","like_count":1,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":467878,"discussion_content":"嗯嗯，是的。不过最新版已经移除了因校验而引入的解压缩操作","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1568939921,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":113021,"user_name":"星期八","can_delete":false,"product_type":"c1","uid":1185504,"ip_address":"","ucode":"34A37F73A48E7F","user_header":"https://static001.geekbang.org/account/avatar/00/12/16/e0/7abad3cc.jpg","comment_is_top":false,"comment_ctime":1562888825,"is_pvip":false,"replies":[{"id":"41106","content":"那就会发送只包含一条消息的消息集合","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1562891467,"ip_address":"","comment_id":113021,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5857856121","product_id":100029201,"comment_content":"老师：今天再看看一遍，有个疑问，producer是以消息集合为单位发送，消息集合包含多条消息，那如果只发送一条消息，怎么发送呢？","like_count":1,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":458019,"discussion_content":"那就会发送只包含一条消息的消息集合","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1562891467,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":108282,"user_name":"Jowin","can_delete":false,"product_type":"c1","uid":1114356,"ip_address":"","ucode":"19017F7D06C22A","user_header":"https://static001.geekbang.org/account/avatar/00/11/00/f4/cc5f0896.jpg","comment_is_top":false,"comment_ctime":1561711928,"is_pvip":false,"replies":[{"id":"39450","content":"索引机制没有变化，本来也是稀疏索引，保存的是消息位移到物理文件位置的映射。不论哪个消息格式，消息位移数据都是准确且不变的。","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1561947724,"ip_address":"","comment_id":108282,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5856679224","product_id":100029201,"comment_content":"@胡老师，请假一个问题，记得Kafka协议升级到2.0之后，一个MessageSet中会包含多条消息，那么在broker端保存日志文件并更新索引的时候，不需要把MessageSet拆开，查看每个消息在分区中的的偏移，从而更新索引文件么？","like_count":1,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":455899,"discussion_content":"索引机制没有变化，本来也是稀疏索引，保存的是消息位移到物理文件位置的映射。不论哪个消息格式，消息位移数据都是准确且不变的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1561947724,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":107445,"user_name":"giantbroom","can_delete":false,"product_type":"c1","uid":1059516,"ip_address":"","ucode":"7258784193C302","user_header":"","comment_is_top":false,"comment_ctime":1561537596,"is_pvip":true,"discussion_count":1,"race_medal":0,"score":"5856504892","product_id":100029201,"comment_content":"我觉得有2个方案可以考虑：<br>1. 在Producer和Broker建立连接是，生成一个token，Producer每次发送消息是都带着token，Broker只需验证token的有效性，而不必在解压缩；<br>2. Producer在压缩之后，根据压缩后的数据生成jwt token，Broker同样只需验证jwt即可。","like_count":1,"discussions":[{"author":{"id":1618482,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/32/d26f92c5.jpg","nickname":"墨小雨的猫","note":"","ucode":"A14EBA5949837D","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":210475,"discussion_content":"crc校验是为了校验传输过程中数据是否有丢失，token的引入能解决这个问题吗？","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1584724730,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":107115,"user_name":"WL","can_delete":false,"product_type":"c1","uid":1173771,"ip_address":"","ucode":"6277DCD776B87E","user_header":"https://static001.geekbang.org/account/avatar/00/11/e9/0b/1171ac71.jpg","comment_is_top":false,"comment_ctime":1561462014,"is_pvip":false,"replies":[{"id":"38825","content":"消费者都是自动向后兼容的，这也是好事吧。。。。","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1561514378,"ip_address":"","comment_id":107115,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5856429310","product_id":100029201,"comment_content":"请问一下老师怎样在消费者端配置让消费者不用兼容老版本V1版本的消息?","like_count":1,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":455372,"discussion_content":"消费者都是自动向后兼容的，这也是好事吧。。。。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1561514378,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":106943,"user_name":"October","can_delete":false,"product_type":"c1","uid":1137879,"ip_address":"","ucode":"CEDA78F4A5F8B1","user_header":"https://static001.geekbang.org/account/avatar/00/11/5c/d7/e4673fde.jpg","comment_is_top":false,"comment_ctime":1561427065,"is_pvip":false,"replies":[{"id":"38832","content":"其实消息集合是server端源码中的提法，最新的producer源码都叫record batch。ProduceRequest中可以封装多个batch。","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1561515077,"ip_address":"","comment_id":106943,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5856394361","product_id":100029201,"comment_content":"消息集合指的是每个ProducerRequest所包含的ProducerRecord，还是每个ProducerBatch包含的ProudcerRecord，个人感觉是前者。","like_count":1,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":455294,"discussion_content":"其实消息集合是server端源码中的提法，最新的producer源码都叫record batch。ProduceRequest中可以封装多个batch。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1561515077,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":347932,"user_name":"南瓜","can_delete":false,"product_type":"c1","uid":1500785,"ip_address":"","ucode":"A3828CEC6257CC","user_header":"https://static001.geekbang.org/account/avatar/00/16/e6/71/491dcad1.jpg","comment_is_top":false,"comment_ctime":1654590766,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1654590766","product_id":100029201,"comment_content":"老师，我有一个问题：消息发送到Broker的时候需要crc校验，这个需不需要消息解码？如果需要消息解码的话，储存到磁盘中的时候，是不是也需要压缩。这样子感觉和你提出的：生产者压缩，broker保持不变，消费者解压。感觉存在矛盾，能解惑下吗？","like_count":0},{"had_liked":false,"id":323415,"user_name":"追风筝的人","can_delete":false,"product_type":"c1","uid":1488020,"ip_address":"","ucode":"2993D60F94C396","user_header":"https://static001.geekbang.org/account/avatar/00/16/b4/94/2796de72.jpg","comment_is_top":false,"comment_ctime":1637894711,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1637894711","product_id":100029201,"comment_content":"Producer 端压缩、Broker 端保持、Consumer 端解压缩。  Zstd压缩算法 比较好","like_count":0},{"had_liked":false,"id":320954,"user_name":"秋天","can_delete":false,"product_type":"c1","uid":1057056,"ip_address":"","ucode":"A7E1D953EF7E17","user_header":"https://static001.geekbang.org/account/avatar/00/10/21/20/1299e137.jpg","comment_is_top":false,"comment_ctime":1636596637,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1636596637","product_id":100029201,"comment_content":"在producer端做校验 还是不行吧  如果在到达broker端做了更改呢","like_count":0},{"had_liked":false,"id":311533,"user_name":"shuifa","can_delete":false,"product_type":"c1","uid":1040063,"ip_address":"","ucode":"636733F5C88A7B","user_header":"https://static001.geekbang.org/account/avatar/00/0f/de/bf/4df4224d.jpg","comment_is_top":false,"comment_ctime":1631271243,"is_pvip":false,"discussion_count":0,"race_medal":1,"score":"1631271243","product_id":100029201,"comment_content":"压缩算法的衡量两个指标：压缩比和吞吐量(可以理解为压缩速度)<br>压缩比方面：Zstd &gt; LZ4 &gt; GZIP &gt; Snappy <br>吞吐量方面：LZ4 &gt; Snappy &gt; Zstd &gt; GZIP<br>从上面，综合上看LZ4还是比较优秀的","like_count":0},{"had_liked":false,"id":309701,"user_name":"Allan","can_delete":false,"product_type":"c1","uid":1310388,"ip_address":"","ucode":"8DA4DBECC2C45C","user_header":"https://static001.geekbang.org/account/avatar/00/13/fe/b4/295338e7.jpg","comment_is_top":false,"comment_ctime":1630308048,"is_pvip":false,"replies":[{"id":"112525","content":"目前没有这个设置","user_name":"作者回复","user_name_real":"胡夕","uid":"1288090","ctime":1630810090,"ip_address":"","comment_id":309701,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1630308048","product_id":100029201,"comment_content":"是否可以根据设置标识来说明要不要broker做解压缩操作？","like_count":0,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":525973,"discussion_content":"目前没有这个设置","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1630810090,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":309123,"user_name":"Leo","can_delete":false,"product_type":"c1","uid":2649276,"ip_address":"","ucode":"CEBAD9CDCFC2A3","user_header":"https://static001.geekbang.org/account/avatar/00/28/6c/bc/f751786b.jpg","comment_is_top":false,"comment_ctime":1629951006,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1629951006","product_id":100029201,"comment_content":"以Producer从Broker中消费来举例：“零拷贝技术”只用将磁盘文件的数据复制到页面缓存中一次，然后将数据从页面缓存直接发送到网络中（发送给不同的订阅者时，都可以使用同一个页面缓存），避免了重复复制操作。<br><br>简单来说：<br>1. Broker内部的解压校验不涉及到传输，就更不涉及到零拷贝，所以谈何破坏零拷贝； <br>2. 但是在接受Producer消息，以及Consumer读取消息的过程中，会涉及到零拷贝，这时候可能会因为文章中的两点原因破坏零拷贝；<br>（更多请参考链接：1：https:&#47;&#47;www.jianshu.com&#47;p&#47;835ec2d4c170 ， 2：https:&#47;&#47;blog.csdn.net&#47;ljheee&#47;article&#47;details&#47;99652448）","like_count":0},{"had_liked":false,"id":307096,"user_name":"whuzxj","can_delete":false,"product_type":"c1","uid":1460568,"ip_address":"","ucode":"0EC6153B0A0E8A","user_header":"","comment_is_top":false,"comment_ctime":1628858319,"is_pvip":true,"replies":[{"id":"112536","content":"也不一定，文本消息本身就有很大的压缩空间","user_name":"作者回复","user_name_real":"胡夕","uid":"1288090","ctime":1630810804,"ip_address":"","comment_id":307096,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1628858319","product_id":100029201,"comment_content":"Kafka发送只包含一条很大消息（如1M）的消息集合是不是压缩就不起作用或者说压缩比就接近于1了？","like_count":0,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":525042,"discussion_content":"也不一定，文本消息本身就有很大的压缩空间","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1630810804,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":302358,"user_name":"余生","can_delete":false,"product_type":"c1","uid":2421369,"ip_address":"","ucode":"AEF6C96738F03B","user_header":"https://static001.geekbang.org/account/avatar/00/24/f2/79/b2012f53.jpg","comment_is_top":false,"comment_ctime":1626177683,"is_pvip":true,"replies":[{"id":"109450","content":"就是指包含了多条压缩消息的外层消息","user_name":"作者回复","user_name_real":"胡夕","uid":"1288090","ctime":1626241838,"ip_address":"","comment_id":302358,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1626177683","product_id":100029201,"comment_content":"V2 版本还有一个和压缩息息相关的改进，就是保存压缩消息的方法发生了变化。之前 V1 版本中保存压缩消息的方法是把多条消息进行压缩然后保存到外层消息的消息体字段中；而 V2 版本的做法是对整个消息集合进行压缩。显然后者应该比前者有更好的压缩效果。-----外层消息是指啥，为啥提到这4个字","like_count":0,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":523271,"discussion_content":"就是指包含了多条压缩消息的外层消息","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1626241838,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":293313,"user_name":"围城里的稻草人","can_delete":false,"product_type":"c1","uid":2592377,"ip_address":"","ucode":"19FF15E582C16F","user_header":"https://static001.geekbang.org/account/avatar/00/27/8e/79/e0eecf4c.jpg","comment_is_top":false,"comment_ctime":1621331671,"is_pvip":false,"replies":[{"id":"107174","content":"这个通常可能是因为__consumer_offsets副本发生了重选举，按说不应该是问题的主要原因。还是查下有无其他的error log吧","user_name":"作者回复","user_name_real":"胡夕","uid":"1288090","ctime":1622353759,"ip_address":"","comment_id":293313,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1621331671","product_id":100029201,"comment_content":"您好，请问一下consumer不消费消息，查server日志有告警如下：<br>The last checkpoint dirty offset for partition __consumer_offsets-12 is 47, which is larger than the log end offset 0. Resetting to the log start offset 0.<br>麻烦老师帮忙看下，这是什么问题？","like_count":0,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":520155,"discussion_content":"这个通常可能是因为__consumer_offsets副本发生了重选举，按说不应该是问题的主要原因。还是查下有无其他的error log吧","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1622353759,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":284378,"user_name":"邀月对影","can_delete":false,"product_type":"c1","uid":1204313,"ip_address":"","ucode":"A3482EDF73EB0D","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/QicTra5HbNEwGxeG49XibcUibB82I2hpBnp8tviaiaicvFAojuMtRiaLCyl6syzzoS546H2hJibNAQ3h9XM097iapiaamcEQ/132","comment_is_top":false,"comment_ctime":1616221657,"is_pvip":false,"replies":[{"id":"103535","content":"不影响啊，因为校验结束后发送的数据依然可以直接走zero copy通道","user_name":"作者回复","user_name_real":"胡夕","uid":"1288090","ctime":1616721910,"ip_address":"","comment_id":284378,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1616221657","product_id":100029201,"comment_content":"老师，你好 请教个问题， 网上说producer向broker发送数据 通过mmap文件映射的方式实现零拷贝，但是你文章分析broker是有一系列的检验机制，那肯定是要读到用户态内存啊 这样就不可能实现生产者发送数据零拷贝，难道是网上说的不正确吗？","like_count":0,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":517326,"discussion_content":"不影响啊，因为校验结束后发送的数据依然可以直接走zero copy通道","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1616721910,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":284019,"user_name":"Allan","can_delete":false,"product_type":"c1","uid":1310388,"ip_address":"","ucode":"8DA4DBECC2C45C","user_header":"https://static001.geekbang.org/account/avatar/00/13/fe/b4/295338e7.jpg","comment_is_top":false,"comment_ctime":1616038524,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1616038524","product_id":100029201,"comment_content":"1、producer端毕竟是客户端，如果校验了，broker服务端不用校验，我觉得可能会存在危险的数据进入，感觉不是很合适。<br>2、如果producer校验，那么客户端可能就需要更多时间，那么体验感也会下降。","like_count":0},{"had_liked":false,"id":283010,"user_name":"yuhualee7","can_delete":false,"product_type":"c1","uid":1589803,"ip_address":"","ucode":"770E51D2802D9E","user_header":"https://wx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIpvzBpfHNojUU8IPHFe8qK8Xm5gkuw4BWA6AYCMTNNKaP0VU7qXcYdL3vlFDPxNrEA3mgcPnd43g/132","comment_is_top":false,"comment_ctime":1615517351,"is_pvip":false,"replies":[{"id":"102953","content":"不会的。原来什么样后面依然什么样","user_name":"作者回复","user_name_real":"胡夕","uid":"1288090","ctime":1615942364,"ip_address":"","comment_id":283010,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1615517351","product_id":100029201,"comment_content":"老师请教一下，如果有100条消息，压缩批量发送到broker，每条消息都有key，那么broker是需要解压，验证之后，再按照key存到对应的分区中吗？如果这样broker那就不是压缩存储了。","like_count":0,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":516908,"discussion_content":"不会的。原来什么样后面依然什么样","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1615942364,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":277638,"user_name":"意无尽","can_delete":false,"product_type":"c1","uid":1234489,"ip_address":"","ucode":"DA179626C46B81","user_header":"https://static001.geekbang.org/account/avatar/00/12/d6/39/6b45878d.jpg","comment_is_top":false,"comment_ctime":1612500606,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1612500606","product_id":100029201,"comment_content":"本节主要介绍了 Kafka 中的几种常见的解压缩算法以及不同的解压缩算法对资源的占用情况。<br><br>何时需要解压缩？<br>压缩一般发生在 Producer 处，解压缩发生在 Consumer 处。但是 Brocker 接受到 Producer 的消息后，也会进行解压缩，这样做的目的是为了进行检验。<br><br>一般建议 Brocker 和 Producer 的压缩算法保持一致，否则在 Broker 处多进行解压缩，会占用系统资源。<br><br>如果在 Brocker 端发生了消息格式的变化，除了要解压缩外，还会让 Kafka 丧失了 零拷贝 的优势。<br><br>各种压缩算法的对比：<br>在吞吐量方面：LZ4 &gt; Snappy &gt; zstd 和 GZIP<br>而在压缩比方面，zstd &gt; LZ4 &gt; GZIP &gt; Snappy<br><br>最佳实践<br>在 CPU 和带宽充足的情况下开启压缩算法，不然会适得其反。如果 CPU 比较充足的情况下，建议开启 zstd 算法进行压缩。","like_count":0},{"had_liked":false,"id":276549,"user_name":"山海","can_delete":false,"product_type":"c1","uid":1702117,"ip_address":"","ucode":"77FA9967E58FA3","user_header":"https://static001.geekbang.org/account/avatar/00/19/f8/e5/119d5c15.jpg","comment_is_top":false,"comment_ctime":1611998896,"is_pvip":false,"replies":[{"id":"100445","content":"producer实际上是在构建消息的过程中压缩的","user_name":"作者回复","user_name_real":"胡夕","uid":"1288090","ctime":1612141806,"ip_address":"","comment_id":276549,"utype":1}],"discussion_count":1,"race_medal":1,"score":"1611998896","product_id":100029201,"comment_content":"我有点疑惑， 解压缩和校验正常来讲本来就不冲突呀。 校验是通过crc，我理解是producer在构建完消息后进行压缩， 压缩结束后计算一个crc。 crc和压缩体一起 传送到broker之后， broker对压缩体计算crc，同时进行比对，这个过程完全不用解压缩。 ","like_count":0,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":514748,"discussion_content":"producer实际上是在构建消息的过程中压缩的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1612141806,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":271084,"user_name":"惘 闻","can_delete":false,"product_type":"c1","uid":1181650,"ip_address":"","ucode":"C5909F034BF072","user_header":"https://static001.geekbang.org/account/avatar/00/12/07/d2/0d7ee298.jpg","comment_is_top":false,"comment_ctime":1609396289,"is_pvip":false,"replies":[{"id":"98421","content":"关于zero copy的问题，会有一个勘误。实际上并不会丧失zerocopy<br>","user_name":"作者回复","user_name_real":"胡夕","uid":"1288090","ctime":1609721503,"ip_address":"","comment_id":271084,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1609396289","product_id":100029201,"comment_content":"我觉得老师这里说的前后文冲突.前面说消息格式不一致会导致解压缩再压缩,会失去零拷贝的特性.后面又说不管消息格式一不一致都会解压缩进行校验.对照前面来看,这里似乎也是会丧尸零拷贝的性质.","like_count":0,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":512836,"discussion_content":"关于zero copy的问题，会有一个勘误。实际上并不会丧失zerocopy\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1609721503,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":269746,"user_name":"小小娜","can_delete":false,"product_type":"c1","uid":2331112,"ip_address":"","ucode":"CD83F09B842B2B","user_header":"https://static001.geekbang.org/account/avatar/00/23/91/e8/f2a1dfb0.jpg","comment_is_top":false,"comment_ctime":1608776357,"is_pvip":false,"replies":[{"id":"98449","content":"其实关于这一讲解压缩的所有问题在于这样的事实：我所说的解压缩是指把已压缩的消息执行解压缩之后保存到存储中，如果仅仅把消息解压并执行一些检查，不被视为是真正的解压缩","user_name":"作者回复","user_name_real":"胡夕","uid":"1288090","ctime":1609724291,"ip_address":"","comment_id":269746,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1608776357","product_id":100029201,"comment_content":"不知道过去这么久老师还会不会解答疑问，我有个问题：<br>“在生产者端启用压缩是很自然的想法，那为什么我说在 Broker 端也可能进行压缩呢？其实大部分情况下 Broker 从 Producer 端接收到消息后仅仅是原封不动地保存而不会对其进行任何修改，但这里的“大部分情况”也是要满足一定条件的。有两种例外情况就可能让 Broker 重新压缩消息。”在京东大佬提出取消broker端为执行校验而做的解压缩操作前，除了两个例外情况broker会解压缩重新压缩，那其他情况broker就不会解压缩重新压缩了嘛，感觉与后面所说的broker端校验（每个压缩过的消息集合在 Broker 端写入时都要发生解压缩操作，目的就是为了对消息执行各种验证）有点相违背啊？","like_count":0,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":512368,"discussion_content":"其实关于这一讲解压缩的所有问题在于这样的事实：我所说的解压缩是指把已压缩的消息执行解压缩之后保存到存储中，如果仅仅把消息解压并执行一些检查，不被视为是真正的解压缩","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1609724291,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1103208,"avatar":"https://static001.geekbang.org/account/avatar/00/10/d5/68/2201b6b9.jpg","nickname":"归零","note":"","ucode":"C99B8E93009A46","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":352590,"discussion_content":"这个有点奇怪呀，前提：到达broker的消息肯定要落盘的，否则consumer怎么拉取消息。\n那么按照老师说的，broker仅仅把消息解压并执行一些检查，不被视为是真正的解压缩。那么落磁盘的消息是未压缩的，那broker是将消息一份解压不落磁盘？一份不解压落磁盘？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1614777146,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":261848,"user_name":"孙旭明","can_delete":false,"product_type":"c1","uid":1561193,"ip_address":"","ucode":"E93060E3013718","user_header":"https://static001.geekbang.org/account/avatar/00/17/d2/69/1326aee1.jpg","comment_is_top":false,"comment_ctime":1605537271,"is_pvip":true,"replies":[{"id":"95151","content":"会使用啊，主要还是为了节省带宽和磁盘","user_name":"作者回复","user_name_real":"胡夕","uid":"1288090","ctime":1605684797,"ip_address":"","comment_id":261848,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1605537271","product_id":100029201,"comment_content":"实际生产中会使用压缩吗？就是为了节约带宽和磁盘资源吗？还有没有其他方面的考虑","like_count":0,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":509635,"discussion_content":"会使用啊，主要还是为了节省带宽和磁盘","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1605684797,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":251899,"user_name":"Alpha","can_delete":false,"product_type":"c1","uid":1001861,"ip_address":"","ucode":"60CA15A25EC796","user_header":"https://static001.geekbang.org/account/avatar/00/0f/49/85/3f161d95.jpg","comment_is_top":false,"comment_ctime":1601957616,"is_pvip":false,"replies":[{"id":"92145","content":"应该这么说，broker会对消息进行检测，这个过程中涉及到解压缩读取，但不会保持解压缩的状态，因而也就没有后面的再压缩","user_name":"作者回复","user_name_real":"胡夕","uid":"1288090","ctime":1602205989,"ip_address":"","comment_id":251899,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1601957616","product_id":100029201,"comment_content":"对Broker端对消息的处理有个疑问：<br>文中讲到Broker接收到消息后“原封不动”地保存，并强调“Producer 端压缩、Broker 端保持、Consumer 端解压缩”，而下文又提到对于压缩过的消息Broker都会解压缩以便进行校验，那岂不是并非“原封不动”？<br><br>对压缩消息的场景，Broker的操作是这样吗：解压 - 校验 - 重新压缩 - 存储到 log segment？","like_count":0,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":506652,"discussion_content":"应该这么说，broker会对消息进行检测，这个过程中涉及到解压缩读取，但不会保持解压缩的状态，因而也就没有后面的再压缩","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1602205989,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":242969,"user_name":"单朋荣","can_delete":false,"product_type":"c1","uid":1272662,"ip_address":"","ucode":"8AD121BEDD9675","user_header":"https://static001.geekbang.org/account/avatar/00/13/6b/56/37a4cea7.jpg","comment_is_top":false,"comment_ctime":1597907781,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1597907781","product_id":100029201,"comment_content":"不赞同这种做法，因为消息的出错重发机制，应该在“路由层”解决，也就是broker端解决，不然会很影响整个体系的性能和网络带宽吞吐效益。<br>还有一个疑问哈，那个broker的解压缩“校验”场景，是不是解压缩后不会再重新压缩，只要算法一致，压缩仍有副本保留，省去了重压缩的过程。不然，为什么说是不同场景呢？？两个在一块解决不久好了，只是加了个“校验”过程而已。","like_count":0},{"had_liked":false,"id":239299,"user_name":"多襄丸","can_delete":false,"product_type":"c1","uid":1074310,"ip_address":"","ucode":"1AA1497C5A293C","user_header":"https://static001.geekbang.org/account/avatar/00/10/64/86/f5a9403a.jpg","comment_is_top":false,"comment_ctime":1596499956,"is_pvip":false,"replies":[{"id":"88412","content":"1. 对的<br>2. 依然可以的~ ","user_name":"作者回复","user_name_real":"胡夕","uid":"1288090","ctime":1596519375,"ip_address":"","comment_id":239299,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1596499956","product_id":100029201,"comment_content":"胡老师，要是我producer端生产消息时不指定压缩。<br>在broker 端指定了压缩，那么：<br><br>1. broker端收到消息后会按指定的压缩方式为我们压缩吧？<br><br>2. 此时，在producer端未指定压缩，broker端指定了压缩的情况下，consumer仍然可以正常消费broker端压缩过的消息吧？","like_count":0,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":503052,"discussion_content":"1. 对的\n2. 依然可以的~ ","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1596519375,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":237693,"user_name":"多襄丸","can_delete":false,"product_type":"c1","uid":1074310,"ip_address":"","ucode":"1AA1497C5A293C","user_header":"https://static001.geekbang.org/account/avatar/00/10/64/86/f5a9403a.jpg","comment_is_top":false,"comment_ctime":1595927398,"is_pvip":false,"replies":[{"id":"87820","content":"1. 一个RecordBatch下的消息都是同一个partition的<br>2. 不适合留给consumer端，因为有些consumer客户端的实现不是社区来做的，无法保证是否真的可以执行校验","user_name":"作者回复","user_name_real":"胡夕","uid":"1288090","ctime":1595937429,"ip_address":"","comment_id":237693,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1595927398","product_id":100029201,"comment_content":"1. 看到有人说同一个recordBatch 是 同一个topic 下的消息。 我想问，同一个record Batch的消息不是同一个partition的吗？<br><br>2. broker端总是要对record batch做校验，也看到老师的第一条留言说那条jira已经修复了。<br>我想顺着这个说，broker端是做record batch级别的校验，record级别的校验能否留到consumer端做呢？ 毕竟broker 到 consumer 也有可能出错。","like_count":0,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":502507,"discussion_content":"1. 一个RecordBatch下的消息都是同一个partition的\n2. 不适合留给consumer端，因为有些consumer客户端的实现不是社区来做的，无法保证是否真的可以执行校验","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1595937429,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":227160,"user_name":"J.Smile","can_delete":false,"product_type":"c1","uid":1336475,"ip_address":"","ucode":"C4D98DFDBF7584","user_header":"https://static001.geekbang.org/account/avatar/00/14/64/9b/0b578b08.jpg","comment_is_top":false,"comment_ctime":1592301352,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1592301352","product_id":100029201,"comment_content":"------broker消息重新压缩意外情况<br>消息的压缩一般是在producer端，但是broker也会在一些条件下触发。<br>情况一：Broker 端指定了和 Producer 端不同的压缩算法。<br>这种情况下 Broker 接收到 GZIP 压缩消息后，只能解压缩然后使用 Snappy 重新压缩一遍<br>情况二：Broker 端发生了消息格式转换。<br><br>------适合启用压缩的条件<br>启用压缩的一个条件就是 Producer 程序运行机器上的 CPU 资源要很充足。还有就是带宽资源有限。如果你的客户端机器 CPU 资源有很多富余，我强烈建议你开启 zstd 压缩，这样能极大地节省网络资源消耗<br>","like_count":0},{"had_liked":false,"id":226073,"user_name":"末北。","can_delete":false,"product_type":"c1","uid":1246109,"ip_address":"","ucode":"6C6C06416E77D3","user_header":"https://static001.geekbang.org/account/avatar/00/13/03/9d/a245af6a.jpg","comment_is_top":false,"comment_ctime":1591946027,"is_pvip":false,"replies":[{"id":"83309","content":"对的。消息使用了什么压缩器会记录在消息集合元数据中一起被写入到broker。consumer读出后自动就知道用什么算法解压了","user_name":"作者回复","user_name_real":"胡夕","uid":"1288090","ctime":1591973333,"ip_address":"","comment_id":226073,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1591946027","product_id":100029201,"comment_content":"请问下老师，如果之前项目没有使用压缩算法，现在指定一个压缩算法，按照我的理解只需要重新发布下生产者即可，因为消费者会根据消息来决定是否解压以及对应的解压算法，不知道这样理解是否正确。","like_count":0,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":498098,"discussion_content":"对的。消息使用了什么压缩器会记录在消息集合元数据中一起被写入到broker。consumer读出后自动就知道用什么算法解压了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1591973333,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":225283,"user_name":"耿嘉艺","can_delete":false,"product_type":"c1","uid":2023401,"ip_address":"","ucode":"727A22BD41E8AF","user_header":"","comment_is_top":false,"comment_ctime":1591704864,"is_pvip":false,"replies":[{"id":"82955","content":"producer自己做校验不一定有可信度","user_name":"作者回复","user_name_real":"胡夕","uid":"1288090","ctime":1591709733,"ip_address":"","comment_id":225283,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1591704864","product_id":100029201,"comment_content":"把消息校验放到producer端，根本不起作用，在broker端应该是对消息完整性进行校验，是不是可以采用类似sha、md5这种，我瞎说的哈哈，不认同的话勿喷","like_count":0,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":497794,"discussion_content":"producer自己做校验不一定有可信度","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1591709733,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":224760,"user_name":"cocos","can_delete":false,"product_type":"c1","uid":1016599,"ip_address":"","ucode":"6DCA74033FFBEA","user_header":"https://static001.geekbang.org/account/avatar/00/0f/83/17/74c6e081.jpg","comment_is_top":false,"comment_ctime":1591532856,"is_pvip":false,"replies":[{"id":"82731","content":"1. 取决于broker端的压缩&#47;解压缩配置。如果和producer使用相同的压缩器&#47;解压缩器（这是默认情况），那么broker不对消息做任何转换，直接以1条消息保存在磁盘上<br>2. 不会出现解压一半提交位移的场景，一定是等一批消息都获取完成后再提交位移","user_name":"作者回复","user_name_real":"胡夕","uid":"1288090","ctime":1591539962,"ip_address":"","comment_id":224760,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1591532856","product_id":100029201,"comment_content":"胡老师学了您的课程收获很大，现在有2个疑问：<br>1.假如由10个record构成的record batch压缩后发给broker，broker把压缩后的消息作为一个还是十个record落盘？（这10条消息的offset一样吗？）<br>2.consumer收到压缩的消息（10个record构成），解压处理到中途（处理到第六个record）提交位移，broker会怎么处理这个位移？","like_count":0,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":497600,"discussion_content":"1. 取决于broker端的压缩/解压缩配置。如果和producer使用相同的压缩器/解压缩器（这是默认情况），那么broker不对消息做任何转换，直接以1条消息保存在磁盘上\n2. 不会出现解压一半提交位移的场景，一定是等一批消息都获取完成后再提交位移","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1591539962,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":217566,"user_name":"Link","can_delete":false,"product_type":"c1","uid":1228809,"ip_address":"","ucode":"B29B64E34603F7","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/PiajxSqBRaEIlMZ7YLMia3JlkFjgp4Jf4YPAfIYVfND9NajC1D0MFCTbXEtHxsQLCictduy8EdKKXkKq7I5Erc4hw/132","comment_is_top":false,"comment_ctime":1589534658,"is_pvip":false,"replies":[{"id":"80552","content":"嗯嗯，broker不能完全相信clients端的校验结果哦","user_name":"作者回复","user_name_real":"胡夕","uid":"1288090","ctime":1589639510,"ip_address":"","comment_id":217566,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1589534658","product_id":100029201,"comment_content":"在Producer做CRC校验，个人感觉就像目前疫情大环境下，我从A地到B地，我在A量体温之后，到了B地就不用量了，这肯定不太合理","like_count":0,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":495183,"discussion_content":"嗯嗯，broker不能完全相信clients端的校验结果哦","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1589639510,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":214940,"user_name":"吴科🍀","can_delete":false,"product_type":"c1","uid":1112547,"ip_address":"","ucode":"8F2C317887A323","user_header":"https://static001.geekbang.org/account/avatar/00/10/f9/e3/2529c7dd.jpg","comment_is_top":false,"comment_ctime":1588853714,"is_pvip":false,"replies":[{"id":"79681","content":"很有道理：）","user_name":"作者回复","user_name_real":"胡夕","uid":"1288090","ctime":1588983625,"ip_address":"","comment_id":214940,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1588853714","product_id":100029201,"comment_content":"消息校验应该不能放到producer，因为校验就是为了防止数据传输过程中，数据格式发生变化的。<br>我们确保producer与broker端的格式一直，减少CPU的消耗","like_count":0,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":494248,"discussion_content":"很有道理：）","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1588983625,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":184648,"user_name":"moooofly","can_delete":false,"product_type":"c1","uid":1008348,"ip_address":"","ucode":"4A20795C281B6F","user_header":"https://static001.geekbang.org/account/avatar/00/0f/62/dc/8876c73b.jpg","comment_is_top":false,"comment_ctime":1583377481,"is_pvip":false,"replies":[{"id":"71461","content":"broker不能完全相信一个untrusted clients自己做的校验。","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1583456877,"ip_address":"","comment_id":184648,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1583377481","product_id":100029201,"comment_content":"producer 和 consumer 自行分别负责压缩+解压缩+校验，是不是就可以完全绕开 broker 的压缩解压缩问题了？","like_count":0,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":486079,"discussion_content":"broker不能完全相信一个untrusted clients自己做的校验。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1583456877,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1008348,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/62/dc/8876c73b.jpg","nickname":"moooofly","note":"","ucode":"4A20795C281B6F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":197951,"discussion_content":"我能理解broker不能完全相信这个理由，如果是自己的环境，生产者和消费者自己认为是完全可信的，是否能这么使用呢，因为这样用似乎效率会更高","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1583457716,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":162432,"user_name":"finger","can_delete":false,"product_type":"c1","uid":1751791,"ip_address":"","ucode":"1ADE5B840832D4","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83erYNqD6TIViagNYicZoykSo5WhJs1eu2auaMor17rEdMiaUgKxzibfegsicgTkHpk9JTXD1cFqzeOMWsdg/132","comment_is_top":false,"comment_ctime":1576517149,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1576517149","product_id":100029201,"comment_content":"producer 传输存在网络丢包风险，在producer校验没有意义。","like_count":0},{"had_liked":false,"id":151760,"user_name":"向往的生活","can_delete":false,"product_type":"c1","uid":1397298,"ip_address":"","ucode":"0E8DB45357820F","user_header":"https://static001.geekbang.org/account/avatar/00/15/52/32/bb570f48.jpg","comment_is_top":false,"comment_ctime":1573786385,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1573786385","product_id":100029201,"comment_content":"Broker 端解压缩之后，校验数据完会在重新压缩数据，所以导致CPU使用飙升么","like_count":0},{"had_liked":false,"id":150659,"user_name":"James","can_delete":false,"product_type":"c1","uid":1134861,"ip_address":"","ucode":"48B0F2A334D1C1","user_header":"https://static001.geekbang.org/account/avatar/00/11/51/0d/fc1652fe.jpg","comment_is_top":false,"comment_ctime":1573575944,"is_pvip":false,"replies":[{"id":"57961","content":"您能详细说说吗？","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1573609467,"ip_address":"","comment_id":150659,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1573575944","product_id":100029201,"comment_content":"为啥老师的内容部分前后矛盾的.","like_count":0,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":474234,"discussion_content":"您能详细说说吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573609467,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1134861,"avatar":"https://static001.geekbang.org/account/avatar/00/11/51/0d/fc1652fe.jpg","nickname":"James","note":"","ucode":"48B0F2A334D1C1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":49626,"discussion_content":"说错了。应该是有些东西说不清楚。\n就是内容有些应该用图表示比较好。\n还有就是很多疑问都能在评论中体现出来。\n挺多人的评论是对内容的一些疑问，虽然完结了，但是还是建议应该说清楚点，大家就不会有很多疑问了。\n大部分疑问我都在评论中作者的回复看到补充。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573617100,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":148900,"user_name":"惜昔","can_delete":false,"product_type":"c1","uid":1441589,"ip_address":"","ucode":"B3478E40B612FC","user_header":"https://static001.geekbang.org/account/avatar/00/15/ff/35/b744c027.jpg","comment_is_top":false,"comment_ctime":1573106451,"is_pvip":false,"replies":[{"id":"57349","content":"可以的","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1573176191,"ip_address":"","comment_id":148900,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1573106451","product_id":100029201,"comment_content":"请问老师 消息校验也不能享受kafka的zero copy了吧？","like_count":0,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":473661,"discussion_content":"可以的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573176191,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":144815,"user_name":"柯察金","can_delete":false,"product_type":"c1","uid":1115149,"ip_address":"","ucode":"F722BF8FCD2C47","user_header":"https://static001.geekbang.org/account/avatar/00/11/04/0d/3dc5683a.jpg","comment_is_top":false,"comment_ctime":1572061844,"is_pvip":false,"replies":[{"id":"55952","content":"通常都会增加TPS，具体的影响因环境而定，需要仔细测试：）","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1572224783,"ip_address":"","comment_id":144815,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1572061844","product_id":100029201,"comment_content":"开启压缩的话，会对吞吐量有多大影响呢？比如吞吐率","like_count":0,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":472122,"discussion_content":"通常都会增加TPS，具体的影响因环境而定，需要仔细测试：）","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1572224783,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":137781,"user_name":"骏骏","can_delete":false,"product_type":"c1","uid":1192417,"ip_address":"","ucode":"899B32D219D1A0","user_header":"https://static001.geekbang.org/account/avatar/00/12/31/e1/e9efc2ae.jpg","comment_is_top":false,"comment_ctime":1569846739,"is_pvip":false,"replies":[{"id":"53470","content":"您的问题是什么呢？是觉得不应该只有这么少的磁盘占用？","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1570495606,"ip_address":"","comment_id":137781,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1569846739","product_id":100029201,"comment_content":"老师您好，产生的日志应该也是压缩的，而且压缩比还不低，<br>我有个KAFKA集群保存FILEBEAT上传的消息，一天约500G默认保存24小时，集群三个分区三从，但一天的日志量就50G左右，一直不能理解，请指教。。","like_count":0,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":469258,"discussion_content":"您的问题是什么呢？是觉得不应该只有这么少的磁盘占用？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1570495606,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":130012,"user_name":"DFighting","can_delete":false,"product_type":"c1","uid":1233193,"ip_address":"","ucode":"F3BA2426FF8582","user_header":"https://static001.geekbang.org/account/avatar/00/12/d1/29/1b1234ed.jpg","comment_is_top":false,"comment_ctime":1567351332,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1567351332","product_id":100029201,"comment_content":"分布式最基础的原理CAP中的P就是说网络传输是会错误的，也就是网络不可信，那么也就是说Producer进行消息校验有两点不合适：<br>1、没必要，内存中的数据传输出错情况不多。<br>2、买办法验证网络传输过程中的消息准确信，也就是说这里其实还是需要在Broker中对数据做一次校验。<br>所以数据在Broker端做解压缩和校验应该是需要的，但是可以将这设置一个可选项：使用类似UDP的尽最大能力校验，或者可以把校验放到Consumer一端等等","like_count":0},{"had_liked":false,"id":123640,"user_name":"钱","can_delete":false,"product_type":"c1","uid":1009652,"ip_address":"","ucode":"2C92A243A463D4","user_header":"https://static001.geekbang.org/account/avatar/00/0f/67/f4/9a1feb59.jpg","comment_is_top":false,"comment_ctime":1565738748,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1565738748","product_id":100029201,"comment_content":"1：不论是哪个版本，Kafka 的消息层次都分为两层：消息集合（message set）以及消息（message）。一个消息集合中包含若干条日志项（record item），而日志项才是真正封装消息的地方。Kafka 底层的消息日志由一系列消息集合日志项组成。Kafka 通常不会直接操作具体的一条条消息，它总是在消息集合这个层面上进行写入操作。<br>这段描述，概念较多，他们之间的关系有些懵？消息层次&#47;消息集合&#47;消息&#47;日志项&#47;消息日志<br>消息层次具体指什么意思？它包括消息集合和消息，消息集合是什么意思？字面理解是消息的集合，如果是这样，后面又说消息集合是消息日志的集合，而消息日志是消息的封装，感觉消息集合并不是消息的集合？<br>期待老师或其它同学，再帮忙梳理一下，多谢<br><br>2：我来举个例子。原来在 V1 版本中，每条消息都需要执行 CRC 校验，但有些情况下消息的 CRC 值是会发生变化的。比如在 Broker 端可能会对消息时间戳字段进行更新，那么重新计算之后的 CRC 值也会相应更新；再比如 Broker 端在执行消息格式转换时（主要是为了兼容老版本客户端程序），也会带来 CRC 值的变化。鉴于这些情况，再对每条消息都执行 CRC 校验就有点没必要了，不仅浪费空间还耽误 CPU 时间，因此在 V2 版本中，消息的 CRC 校验工作就被移到了消息集合这一层。<br>这段描述，感觉没必要再对每条都执行CRC校验的依据不充分？毕竟CRC的值变化了<br><br>3：文中并未描述各种压缩算法的原理呀？<br><br>4：对待压缩的基本太度<br>producer——我压<br>broker——我传<br>consumer——我解压<br>","like_count":0,"discussions":[{"author":{"id":1155275,"avatar":"https://static001.geekbang.org/account/avatar/00/11/a0/cb/aab3b3e7.jpg","nickname":"张三丰","note":"","ucode":"3A6215A40B3B21","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":38393,"discussion_content":"重点是broker:我传 ，怎么传？    文中很矛盾，有段话说只有两种情况解压，后来又说解压是必须的，因为需要crc检验，难道这两种解压不一样么？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571765830,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":121169,"user_name":"icejoywoo","can_delete":false,"product_type":"c1","uid":1019222,"ip_address":"","ucode":"E68C8B54D07EC3","user_header":"https://static001.geekbang.org/account/avatar/00/0f/8d/56/2a04dd88.jpg","comment_is_top":false,"comment_ctime":1565069766,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1565069766","product_id":100029201,"comment_content":"producer端做的话，这个校验可能存在安全风险吧","like_count":0},{"had_liked":false,"id":120773,"user_name":"DC","can_delete":false,"product_type":"c1","uid":1250344,"ip_address":"","ucode":"EC0E7E86056FA6","user_header":"https://static001.geekbang.org/account/avatar/00/13/14/28/9e3edef0.jpg","comment_is_top":false,"comment_ctime":1564993020,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1564993020","product_id":100029201,"comment_content":"我使用场景中还没有遇到io瓶颈，所以没有进行消息压缩，而且如果broker的解压会带来cpu的消耗，可能有风险，那这个权衡就要谨慎了。","like_count":0},{"had_liked":false,"id":112944,"user_name":"其实我很屌","can_delete":false,"product_type":"c1","uid":1138722,"ip_address":"","ucode":"2B75EAAD748A60","user_header":"https://static001.geekbang.org/account/avatar/00/11/60/22/92284df2.jpg","comment_is_top":false,"comment_ctime":1562852890,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1562852890","product_id":100029201,"comment_content":"生产上遇到一个问题，log.retention.bytes配置的5g，log.segment.bytes是500m，然后这个topic就一直不会被清理，空间一直增长，已经十几g了单分区单副本，请问是触发了bug吗，见KAFKA-6030，急，求老师指教","like_count":0},{"had_liked":false,"id":112552,"user_name":"木卫六","can_delete":false,"product_type":"c1","uid":1199495,"ip_address":"","ucode":"D113DF578C5BF5","user_header":"https://static001.geekbang.org/account/avatar/00/12/4d/87/57236a2d.jpg","comment_is_top":false,"comment_ctime":1562756578,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1562756578","product_id":100029201,"comment_content":"说一个不太成熟的想法：<br>如果既要压缩，又要broker端校验的话，能不能这样：<br>1. producer端压缩原始消息A，结果为A&#39;，producer端对压缩过程的正确性负责<br>2. producer端对A&#39;生成md5sum，或者其他固定位数算法，追加到A‘后为B<br>3. producer发送消息B<br>4. broker拿到消息B，从末尾取校验值，对消息前部分进行校验<br>5. broker端选择丢弃或者保留校验值，视消费端是否需要校验<br><br>以上。<br>缺点：1.牺牲部分网络带宽，节省一部分broker端cpu；2. 增加了消息体的结构<br><br>请老师评判，欢迎各位同学发表意见。","like_count":0},{"had_liked":false,"id":108385,"user_name":"电光火石","can_delete":false,"product_type":"c1","uid":1013160,"ip_address":"","ucode":"3AD33BB4AA940F","user_header":"https://static001.geekbang.org/account/avatar/00/0f/75/a8/dfe4cade.jpg","comment_is_top":false,"comment_ctime":1561735549,"is_pvip":false,"replies":[{"id":"39447","content":"1. 会解压，然后保存在disk上<br>2. 会压缩","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1561947483,"ip_address":"","comment_id":108385,"utype":1}],"discussion_count":4,"race_medal":0,"score":"1561735549","product_id":100029201,"comment_content":"老师好，问个问题，<br>1. 如果producer设置了compress.type，而broker没有设置，是否broker在接收到压缩的数据后，解压然后存储未压缩的数据到disk上面？<br>2. 如果producer没有设置compress.type，而broker设置了compress.type，是否broker在接收到原数据后，进行压缩然后存储？<br>谢谢了！","like_count":0,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":455944,"discussion_content":"1. 会解压，然后保存在disk上\n2. 会压缩","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1561947483,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1008348,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/62/dc/8876c73b.jpg","nickname":"moooofly","note":"","ucode":"4A20795C281B6F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":195643,"discussion_content":"追问问题1：如果producer设置了compress.type，而broker没有设置，之后broker会解压消息，然后保存在disk上，那后续发送给 consumer 的消息是压缩过的，还是未压缩的？还是也要取决于 consumer 针对压缩的配置？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1583293718,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1542987,"avatar":"https://static001.geekbang.org/account/avatar/00/17/8b/4b/fa52d222.jpg","nickname":"行则将至","note":"","ucode":"DB972F2DF059C4","race_medal":1,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":3257,"discussion_content":"老师，之前您提到过，解压缩是在consumer端完成的。既然broker端已经将消息解压缩，然后持久化磁盘了，那\nconsumer解压缩的意思是指哪个方面呢？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1564359347,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1103208,"avatar":"https://static001.geekbang.org/account/avatar/00/10/d5/68/2201b6b9.jpg","nickname":"归零","note":"","ucode":"C99B8E93009A46","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1542987,"avatar":"https://static001.geekbang.org/account/avatar/00/17/8b/4b/fa52d222.jpg","nickname":"行则将至","note":"","ucode":"DB972F2DF059C4","race_medal":1,"user_type":1,"is_pvip":false},"discussion":{"id":352591,"discussion_content":"赞赞赞。老师解答下","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1614777272,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":3257,"ip_address":""},"score":352591,"extra":""}]}]},{"had_liked":false,"id":108283,"user_name":"Jowin","can_delete":false,"product_type":"c1","uid":1114356,"ip_address":"","ucode":"19017F7D06C22A","user_header":"https://static001.geekbang.org/account/avatar/00/11/00/f4/cc5f0896.jpg","comment_is_top":false,"comment_ctime":1561712176,"is_pvip":false,"replies":[{"id":"39449","content":"是的。不过这和解压不解压没有关系。RecordBatch中设置了压缩类型","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1561947671,"ip_address":"","comment_id":108283,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1561712176","product_id":100029201,"comment_content":"是不是每个RecordBatch只能包含同一个主题的消息？否则就需要解压，保存到不同主题的日志文件中？","like_count":0,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":455900,"discussion_content":"是的。不过这和解压不解压没有关系。RecordBatch中设置了压缩类型","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1561947671,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":107272,"user_name":"落霞与孤鹜","can_delete":false,"product_type":"c1","uid":1111004,"ip_address":"","ucode":"1F06EB86DD2E6B","user_header":"https://static001.geekbang.org/account/avatar/00/10/f3/dc/e7e5c159.jpg","comment_is_top":false,"comment_ctime":1561510484,"is_pvip":false,"replies":[{"id":"38817","content":"依然可能要解压缩","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1561513874,"ip_address":"","comment_id":107272,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1561510484","product_id":100029201,"comment_content":"生产者端根据原生消息压缩后的压缩内容，给出检验规则，服务端直接根据检验规则对压缩后的内容做检验？","like_count":0,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":455447,"discussion_content":"依然可能要解压缩","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1561513874,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":106968,"user_name":"风中花","can_delete":false,"product_type":"c1","uid":1085237,"ip_address":"","ucode":"067E0A1E116844","user_header":"https://static001.geekbang.org/account/avatar/00/10/8f/35/f1839bb2.jpg","comment_is_top":false,"comment_ctime":1561429699,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1561429699","product_id":100029201,"comment_content":"打卡继续跟进中，老师今天有个群里朋友问 ：有没有做过电商项目的兄弟  分享一下多个促销 多种付款方式的  设计模型？ 当时我看到就回答他： 可以考虑kafka 得分区概念设计 不同得促销，不通得付款方式 。老师我是不是有点坑他？ 哈哈，但是我学了老师讲得分区，我感觉还是考虑下得，假如场景：他得促销很猛，他的支付方式很慢，或者很多。是不是可以考虑下呢，望老师就我得粗略得想法，给点指点。多谢老师辛苦得指导！！","like_count":0},{"had_liked":false,"id":106964,"user_name":"aof","can_delete":false,"product_type":"c1","uid":1062864,"ip_address":"","ucode":"5815D63C4926BC","user_header":"https://static001.geekbang.org/account/avatar/00/10/37/d0/26975fba.jpg","comment_is_top":false,"comment_ctime":1561429367,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1561429367","product_id":100029201,"comment_content":"应该是不行的。<br>如果提前，那从producer端网络传输数据到broker，然后再传输到consumer，这两个阶段都会因为是传输的已经解压缩之后的数据，而造成耗费更大的带宽等资源，影响效率。","like_count":0},{"had_liked":false,"id":106938,"user_name":"lmtoo","can_delete":false,"product_type":"c1","uid":1133918,"ip_address":"","ucode":"FCD5B9C941D448","user_header":"https://static001.geekbang.org/account/avatar/00/11/4d/5e/c5c62933.jpg","comment_is_top":false,"comment_ctime":1561426813,"is_pvip":false,"replies":[{"id":"38833","content":"消息集合的元数据信息不需解压缩就能获取到","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1561515095,"ip_address":"","comment_id":106938,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1561426813","product_id":100029201,"comment_content":"Producer 端压缩、Broker 端保持、Consumer端解压缩，这跟后面描述服务端校验解压缩矛盾啊，还有一个地方就是“对整个消息集合进行压缩”，既然对真个消息集合压缩，解压时又怎么获取压缩算法呢？","like_count":0,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":455292,"discussion_content":"消息集合的元数据信息不需解压缩就能获取到","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1561515095,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":106927,"user_name":"秋","can_delete":false,"product_type":"c1","uid":1398322,"ip_address":"","ucode":"68A2544787E339","user_header":"https://static001.geekbang.org/account/avatar/00/15/56/32/c8b3256c.jpg","comment_is_top":false,"comment_ctime":1561425662,"is_pvip":false,"replies":[{"id":"38834","content":"hmmm.... 这种性能上的损耗真是不好评估，最好实际测试一下吧","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1561515168,"ip_address":"","comment_id":106927,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1561425662","product_id":100029201,"comment_content":"老师提到的broker消息格式转换发生在有老的消费端消费v2格式消息兼容的，我有个业务场景是老的生产者发送给v2版本的broker，为了crc校验，此时broker也会进行格式转换存储么？这个场景带来的性能消耗和适配消费者格式性能消耗可否对等？","like_count":0,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":455284,"discussion_content":"hmmm.... 这种性能上的损耗真是不好评估，最好实际测试一下吧","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1561515168,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":106917,"user_name":"吴宇晨","can_delete":false,"product_type":"c1","uid":1199968,"ip_address":"","ucode":"F8F45B7067DF6D","user_header":"https://static001.geekbang.org/account/avatar/00/12/4f/60/049a20e9.jpg","comment_is_top":false,"comment_ctime":1561424815,"is_pvip":false,"replies":[{"id":"38810","content":"嗯嗯，还有其他一些地方需要校验。比如Compact类型主题必须有key这件事情就要校验下。","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1561512407,"ip_address":"","comment_id":106917,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1561424815","product_id":100029201,"comment_content":"老师你好，数据校验是指crc码吗，那不是不需要解压缩吗？还是有其他校验的地方？","like_count":0,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":455281,"discussion_content":"嗯嗯，还有其他一些地方需要校验。比如Compact类型主题必须有key这件事情就要校验下。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1561512407,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":106895,"user_name":"明翼","can_delete":false,"product_type":"c1","uid":1068361,"ip_address":"","ucode":"E77F86BEB3D5C1","user_header":"https://static001.geekbang.org/account/avatar/00/10/4d/49/28e73b9c.jpg","comment_is_top":false,"comment_ctime":1561423224,"is_pvip":false,"replies":[{"id":"38802","content":"还是一条一条地做校验。消费时执行的转换","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1561511371,"ip_address":"","comment_id":106895,"utype":1}],"discussion_count":3,"race_medal":0,"score":"1561423224","product_id":100029201,"comment_content":"检验的主要目的是为了防止数据在传输过程中出错，这个放在客户端做就失去了意义。<br><br>胡老师请教下，在服务器端做这种检验对于v2消息而言不是整个消息块都做校验码？怎么还一条消息一条消息做检验那？<br>还有您说的kafka为了兼容不同版本的消费者存在多个版本的消息，这个不会让磁盘爆了吗？还是只是在消费这个消息的时间再做转换？谢谢","like_count":0,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":455271,"discussion_content":"还是一条一条地做校验。消费时执行的转换","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1561511371,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1008348,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/62/dc/8876c73b.jpg","nickname":"moooofly","note":"","ucode":"4A20795C281B6F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":195749,"discussion_content":"&#34;作者回复: V2依然是做CRC校验的，只不过是在record batch这个层级上做，而不是一条一条消息地做了。如果CRC校验失败，重传batch。也就是说不会以消息作为传输单位进行校验，这样效率太低&#34;--作者的回复……有点看不懂……晕","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1583304136,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1333607,"avatar":"https://static001.geekbang.org/account/avatar/00/14/59/67/f4ba1da4.jpg","nickname":"Hello world","note":"","ucode":"4D2EF3034571B7","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":339,"discussion_content":"v2版本的校验就是消息集合解压缩校验。\n这个是看consumer的消息格式，是传输给consumer时进行转换，因为要转换，所以zero copy的优势就没了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1561455830,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]}]}