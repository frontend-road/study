{"id":81202,"title":"22 | 包体积优化（上）：如何减少安装包大小？","content":"<p>曾经在15年的时候，我在WeMobileDev公众号就写过一篇文章<a href=\"https://mp.weixin.qq.com/s/QRIy_apwqAaL2pM8a_lRUQ\">《Android安装包相关知识汇总》</a>，也开源了一个不少同学都使用过的资源混淆工具<a href=\"https://mp.weixin.qq.com/s/6YUJlGmhf1-Q-5KMvZ_8_Q\">AndResGuard</a>。</p><p>现在再看看这篇4年前的文章，就像看到了4年前的自己，感触颇多啊。几年过去了，网上随意一搜都有大量安装包优化的文章，那还有哪些“高深”的珍藏秘笈值得分享呢？</p><p>时至今日，微信包体积也从当年的30MB增长到现在的100MB了。我们经常会想，现在WiFi这么普遍了，而且5G都要来了，包体积优化究竟还有没有意义？它对用户和应用的价值在哪里？</p><h2>安装包的背景知识</h2><p>还记得在2G时代，我们每个月只有30MB流量，那个时候安装包体积确实至关重要。当时我在做“搜狗输入法”的时候，我们就严格要求包体积在5MB以内。</p><p>几年过去了，我们对包体积的看法有什么改变吗？</p><p><strong>1. 为什么要优化包体积</strong></p><p>在2018年的Google I/O，Google透露了Google Play上安装包体积与下载转化率的关系图。</p><p><img src=\"https://static001.geekbang.org/resource/image/f8/68/f8a5e264dee4ee6879cd6c30d4bbf368.png?wh=1838*1002\" alt=\"\"></p><p>从这张图上看，大体来说，安装包越小，转化率越高这个结论依然成立。而包体积对应用的影响，主要有下面几点：</p><ul>\n<li>\n<p><strong>下载转化率</strong>。一个100MB的应用，用户即使点了下载，也可能因为网络速度慢、突然反悔下载失败。对于一个10MB的应用，用户点了下载之后，在犹豫要不要下的时候已经下载完了。但是正如上图的数据，安装包大小与转化率的关系是非常微妙的。<strong>10MB跟15MB可能差距不大，但是10MB跟40MB的差距还是非常明显的。</strong></p>\n</li>\n<li>\n<p><strong>推广成本</strong>。一般来说，包体积对渠道推广和厂商预装的单价会有非常大的影响。特别是厂商预装，这主要是因为厂商留给预装应用的总空间是有限的。如果你的包体积非常大，那就会影响厂商预装其他应用。</p>\n</li>\n<li>\n<p><strong>应用市场</strong>。苹果的App Store强制超过150MB的应用只能使用WiFi网络下载，Google Play要求超过100MB的应用只能使用<a href=\"https://developer.android.com/google/play/expansion-files\">APK扩展文件方式</a>上传，由此可见应用包体积对应用市场的服务器带宽成本还是会有一点压力的。</p>\n</li>\n</ul><!-- [[[read_end]]] --><p>目前成熟的超级App越来越多，很多产品也希望自己成为下一个超级App，希望功能可以包罗万象，满足用户的一切需求。但这同样也导致安装包不断变大，其实很多用户只使用到很少一部分功能。</p><p>下面我们就来看看微信、QQ、支付宝以及淘宝这几款超级App这几年安装包增长的情况。</p><p><img src=\"https://static001.geekbang.org/resource/image/e0/76/e0c8bc58d363e81ff3ac7a141f784776.png?wh=1212*416\" alt=\"\"></p><p>我还记得在15年的时候，为了让微信6.2版本小于30MB，我使用了各种各样的手段，把体积从34MB降到29.85MB，资源混淆工具AndResGuard也就是在那个优化专项中写的。几年过去了，微信包体积已经涨到100MB了，淘宝似乎也不容乐观。相比之下，QQ和支付宝相对还比较节制。</p><p><strong>2. 包体积与应用性能</strong></p><p>React Native 5MB、Flutter 4MB、浏览器内核20MB、Chromium网络库2MB…现在第三方开发框架和扩展库越来越多，很多的应用包体积都已经几十是MB起步了。</p><p>那包体积除了转化率的影响，它对我们应用性能还有哪些影响呢？</p><ul>\n<li>\n<p><strong>安装时间</strong>。文件拷贝、Library解压、编译ODEX、签名校验，特别对于Android 5.0和6.0系统来说（Android 7.0之后有了混合编译），微信13个Dex光是编译ODEX的时间可能就要5分钟。</p>\n</li>\n<li>\n<p><strong>运行内存</strong>。在内存优化的时候我们就说过，Resource资源、Library以及Dex类加载这些都会占用不少的内存。</p>\n</li>\n<li>\n<p><strong>ROM空间</strong>。100MB的安装包，启动解压之后很有可能就超过200MB了。对低端机用户来说，也会有很大的压力。在“I/O优化”中我们讨论过，如果闪存空间不足，非常容易出现写入放大的情况。</p>\n</li>\n</ul><p>对于大部分一两年前的“千元机”，淘宝和微信都已经玩不转了。“技术短期内被高估，长期会被低估”，特别在业务高速发展的时候，性能往往就被排到后面。</p><p>包体积对技术人员来说应该是非常重要的技术指标，我们不能放任它的增长，它对我们还有不少意义。</p><ul>\n<li>\n<p><strong>业务梳理</strong>。删除无用或者低价值的业务，永远都是最有效的性能优化方式。我们需要经常回顾过去的业务，不能只顾着往前冲，适时地还一些“技术债务”。</p>\n</li>\n<li>\n<p><strong>开发模式升级</strong>。如果所有的功能都不能移除，那可能需要倒逼开发模式的转变，更多地采用小程序、H5这样开发模式。</p>\n</li>\n</ul><h2>包体积优化</h2><p>国内地开发者都非常羡慕海外的应用，因为海外有统一的Google Play市场。它可以根据用户的ABI、density和language发布，还有在2018年最新推出的<a href=\"https://developer.android.com/platform/technology/app-bundle/\">App Bundle</a>。</p><p><img src=\"https://static001.geekbang.org/resource/image/3d/a2/3d27aa4b299f9768ef0e6a7771d436a2.png?wh=1740*1446\" alt=\"\"></p><p>事实上安装包中无非就是Dex、Resource、Assets、Library以及签名信息这五部分，接下来我们就来看看对于国内应用来说，还有什么高级“秘籍”。</p><p><strong>1. 代码</strong></p><p>对于大部分应用来说，Dex都是包体积中的大头。看一下上面表格中微信、QQ、支付宝和淘宝的数据，它们的Dex数量从1个增长到10多个，我们的代码量真的增长了那么多倍吗？</p><p>而且Dex的数量对用户安装时间也是一个非常大的挑战，在不砍功能的前提下，我们看看有哪些方法可以减少这部分空间。</p><p><strong>ProGuard</strong><br>\n“十个ProGuard配置九个坑”，特别是各种第三方SDK。我们需要仔细检查最终合并的ProGuard配置文件，是不是存在过度keep的现象。</p><p>你可以通过下面的方法输出ProGuard的最终配置，尤其需要注意各种的keep *，很多情况下我们只需要keep其中的某个包、某个方法，或者是类名就可以了。</p><pre><code>-printconfiguration  configuration.txt\n</code></pre><p>那还有没有哪些方法可以进一步加大混淆力度呢？这时我们可能要向四大组件和View下手了。一般来说，应用都会keep住四大组件以及View的部分方法，这样是为了在代码以及XML布局中可以引用到它们。</p><pre><code>-keep public class * extends android.app.Activity\n-keep public class * extends android.app.Application\n-keep public class * extends android.app.Service\n-keep public class * extends android.content.BroadcastReceiver\n-keep public class * extends android.content.ContentProvider\n-keep public class * extends android.view.View\n</code></pre><p>事实上，我们完全可以把<strong>非exported</strong>的四大组件以及View混淆，但是需要完成下面几个工作：</p><ul>\n<li>\n<p><strong>XML替换</strong>。在代码混淆之后，需要同时修改AndroidManifest以及资源XML中引用的名称。</p>\n</li>\n<li>\n<p><strong>代码替换</strong>。需要遍历其他已经混淆好的代码，将变量或者方法体中定义的字符串也同时修改。<span class=\"orange\">需要注意的是，代码中不能出现经过运算得到的类名，这种情况会导致替换失败。</span></p>\n</li>\n</ul><pre><code>// 情况一：变量\npublic String activityName = &quot;com.sample.TestActivity&quot;;\n// 情况二：方法体\nstartActivity(new Intent(this, &quot;com.sample.TestActivity&quot;));\n// 情况三：通过运算得到，不支持\nstartActivity(new Intent(this, &quot;com.sample&quot; + &quot;.TestActivity&quot;));\n</code></pre><p>代码替换的方法，我推荐使用ASM。不熟悉ASM的同学也不用着急，后面我会专门讲它的原理和用法。饿了么曾经开源过一个可以实现四大组件和View混淆的组件<a href=\"https://github.com/eleme/Mess\">Mess</a>，不过似乎已经没在维护了，可供你参考。</p><p>Android Studio 3.0推出了<a href=\"https://blog.dreamtobe.cn/android_d8_r8/\">新Dex编译器D8与新混淆工具R8</a>，目前D8已经正式Release，大约可以减少3%的Dex体积。但是计划用于取代ProGuard的<a href=\"https://www.guardsquare.com/en/blog/proguard-and-r8\">R8</a>依然处于实验室阶段，期待它在未来能有更好的表现。</p><p><strong>去掉Debug信息或者去掉行号</strong><br>\n某个应用通过相同的ProGuard规则生成一个Debug包和Release包，其中Debug包的大小是4MB，Release包只有3.5MB。</p><p>既然它们ProGuard的混淆与优化的规则是一样的，那它们之间的差异在哪里呢？那就是DebugItem。</p><p><img src=\"https://static001.geekbang.org/resource/image/69/10/69ec4986053903876d55fbd37d47a710.png?wh=1158*740\" alt=\"\"></p><p>DebugItem里面主要包含两种信息：</p><ul>\n<li>\n<p><strong>调试的信息</strong>。函数的参数变量和所有的局部变量。</p>\n</li>\n<li>\n<p><strong>排查问题的信息</strong>。所有的指令集行号和源文件行号的对应关系。</p>\n</li>\n</ul><p>事实上，在ProGuard配置中一般我们也会通过下面的方式保留行号信息。</p><pre><code>-keepattributes SourceFile, LineNumberTable\n</code></pre><p>对于去除debuginfo以及行号信息更详细的分析，推荐你认真看一下支付宝的一篇文章<a href=\"https://mp.weixin.qq.com/s/_gnT2kjqpfMFs0kqAg4Qig\">《Android包大小极致压缩》</a>。通过这个方法，我们可以实现既保留行号，但是又可以减少大约5%的Dex体积。</p><p>事实上，支付宝参考的是Facebook的一个开源编译工具<a href=\"https://github.com/facebook/redex\">ReDex</a>。ReDex除了没有文档之外，绝对是客户端领域非常硬核的一个开源库，非常值得你去认真研究。</p><p>ReDex这个库里面的好东西实在是太多了，后面我们还会反复讲到，其中去除Debug信息是通过StripDebugInfoPass完成。</p><pre><code>{\n  &quot;redex&quot; : {\n    &quot;passes&quot; : [\n      &quot;StripDebugInfoPass&quot;\n    ]\n  },\n  &quot;StripDebugInfoPass&quot; : {\n    &quot;drop_all_dbg_info&quot; : &quot;0&quot;,     // 去除所有的debug信息，0表示不去除\n    &quot;drop_local_variables&quot; : &quot;1&quot;,  // 去除所有局部变量，1表示去除\n    &quot;drop_line_numbers&quot; : &quot;0&quot;,     // 去除行号，0表示不去除\n    &quot;drop_src_files&quot; : &quot;0&quot;,        \n    &quot;use_whitelist&quot; : &quot;0&quot;,\n    &quot;drop_prologue_end&quot; : &quot;1&quot;,\n    &quot;drop_epilogue_begin&quot; : &quot;1&quot;,\n    &quot;drop_all_dbg_info_if_empty&quot; : &quot;1&quot;\n  }\n}\n</code></pre><p><strong>Dex分包</strong><br>\n当我们在Android Studio查看一个APK的时候，不知道你是否知道下图中“defines 19272 methods”和“references 40229 methods”的区别。</p><p><img src=\"https://static001.geekbang.org/resource/image/fb/c4/fbd2ebe2b0ffc43447e414994c56d6c4.png?wh=1920*486\" alt=\"\"></p><p>关于Dex的格式以及各个字段的定义，你可以参考<a href=\"https://www.jianshu.com/p/f7f0a712ddfe\">《Dex文件格式详解》</a>。为了加深对Dex格式的理解，推荐你使用010Editor。</p><p><img src=\"https://static001.geekbang.org/resource/image/87/33/87815d218abfaff9dc02a46c079cfb33.png?wh=1324*408\" alt=\"\"></p><p>“define classes and methods”是指真正在这个Dex中定义的类以及它们的方法。而“reference methods”指的是define methods以及define methods引用到的方法。</p><p>简单来说，如下图所示如果将Class A与Class B分别编译到不同的Dex中，由于method a调用了method b，所以在classes2.dex中也需要加上method b的id。</p><p><img src=\"https://static001.geekbang.org/resource/image/96/d5/96d08f01c5fe27c74bfcd5ac529232d5.png?wh=1920*1371\" alt=\"\"></p><p>因为跨Dex调用造成的这些冗余信息，它对我们Dex的大小会造成哪些影响呢？</p><ul>\n<li>\n<p><strong>method id爆表</strong>。我们都知道每个Dex的method id需要小于65536，因为method id的大量冗余导致每个Dex真正可以放的Class变少，这是造成最终编译的<span class=\"orange\">Dex数量增多</span>。</p>\n</li>\n<li>\n<p><strong>信息冗余</strong>。因为我们需要记录跨Dex调用的方法的详细信息，所以在classes2.dex我们还需要记录Class B以及method b的定义，造成string_ids、type_ids、proto_ids这几部分信息的冗余。</p>\n</li>\n</ul><p>事实上，我自己定义了一个Dex信息有效率的指标，希望保证Dex有效率应该在80%以上。<strong>同时，为了进一步减少Dex的数量，我们希望每个Dex的方法数都是满的，即分配了65536个方法。</strong></p><pre><code>Dex信息有效率 = define methods数量/reference methods数量\n</code></pre><p>那如何实现Dex信息有效率提升呢？关键在于我们需要将有调用关系的类和方法分配到同一个Dex中，即减少跨Dex的调用的情况。但是由于类的调用关系非常复杂，我们不太可能可以计算出最优解，只能得到局部的最优解。</p><p>为了提高Dex信息有效率，我在微信时曾参与写过一个依赖分析的工具Builder。但在微信最新的7.0版本，你可以看到上面表中Dex的数量和大小都增大了很多，这是因为他们不小心把这个工具搞失效了。Dex数量的增多，对于<strong>Tinker热修复时间</strong>、用户安装时间都有很大影响。如果把这个问题修复，微信7.0版本的Dex数量应该可以从13个降到6个左右，包体积可以减少10MB左右。</p><p>但是我在研究ReDex的时候，发现它也提供了这个优化，而且实现得比微信的更好。ReDex在分析类调用关系后，使用的是<a href=\"https://github.com/facebook/redex/blob/master/opt/interdex/InterDex.cpp#L619\">贪心算法</a>计算局部最优值，具体算法可查看<a href=\"https://github.com/facebook/redex/blob/master/opt/interdex/CrossDexRefMinimizer.cpp\">CrossDexDefMinimizer</a>。</p><p>为什么我们不能计算到最优解？因为我们需要在编译速度和效果之间找一个平衡点，在ReDex中使用这个优化的配置如下：</p><pre><code>{\n  &quot;redex&quot; : {\n    &quot;passes&quot; : [\n      &quot;InterDexPass&quot;\n    ]\n  },\n  &quot;InterDexPass&quot; : {\n    &quot;minimize_cross_dex_refs&quot;: true,\n    &quot;minimize_cross_dex_refs_method_ref_weight&quot;: 100,\n    &quot;minimize_cross_dex_refs_field_ref_weight&quot;: 90,\n    &quot;minimize_cross_dex_refs_type_ref_weight&quot;: 100,\n    &quot;minimize_cross_dex_refs_string_ref_weight&quot;: 90\n  }\n}\n</code></pre><p>那么通过Dex分包可以对包体积优化多少呢？因为Android默认的分包方式做得实在不好，如果你的应用有4个以上的Dex，我相信这个优化至少有10%的效果。</p><p><strong>Dex压缩</strong><br>\n我曾经在逆向Facebook的App时惊奇地发现，它怎么可能只有一个700多KB的Dex。Google Play是不允许动态下发代码的，那它的代码都放到哪里了呢？</p><p><img src=\"https://static001.geekbang.org/resource/image/00/f7/008dc38d277aab4eabfb580ccac7aef7.png?wh=1920*335\" alt=\"\"></p><p>事实上，Facebook App的classes.dex只是一个壳，真正的代码都放到assets下面。它们把所有的Dex都合并成同一个secondary.dex.jar.xzs文件，并通过XZ压缩。</p><p><img src=\"https://static001.geekbang.org/resource/image/66/22/66abe10ca8e67e86ced07087555b8f22.png?wh=1920*611\" alt=\"\"></p><p><a href=\"https://tukaani.org/xz/\">XZ压缩算法</a>和7-Zip一样，内部使用的都是LZMA算法。对于Dex格式来说，XZ的压缩率可以比Zip高30%左右。但是不知道你有没有注意到，这套方案似乎存在一些问题：</p><ul>\n<li>\n<p><strong>首次启动解压</strong>。应用首次启动的时候，需要将secondary.dex.jar.xzs解压缩，根据上图的配置信息，应该一共有11个Dex。Facebook使用多线程解压的方式，这个耗时在高端机是几百毫秒左右，在低端机可能需要3～5秒。<strong>这里为什么不采用Zstandard或者Brotli呢？主要是压缩率与解压速度的权衡。</strong></p>\n</li>\n<li>\n<p><strong>ODEX文件生成</strong>。前面我就讲过，当Dex非常多的时候会增加应用的安装时间。对于Facebook的这个做法，首次生成ODEX的时间可能就会达到分钟级别。Facebook为了解决这个问题，使用了ReDex另外一个超级硬核的方法，那就是<a href=\"https://github.com/facebook/redex/tree/master/tools/oatmeal\">oatmeal</a>。</p>\n</li>\n</ul><p>oatmeal的原理非常简单，就是根据ODEX文件的格式，自己生成一个ODEX文件。它生成的结果跟解释执行的ODEX一样，内部是没有机器码的。</p><p><img src=\"https://static001.geekbang.org/resource/image/6c/f4/6c7c1cceca23db77f7f0f51509ef62f4.png?wh=1920*739\" alt=\"\"></p><p>如上图所示，对于正常的流程，我们需要fork进程来生成dex2oat，这个耗时一般都比较大。通过oatmeal，我们直接在本进程生成ODEX文件。一个10MB的Dex，如果在Android 5.0生成一个ODEX的耗时大约在10秒以上，在Android 8.0使用speed模式大约在1秒左右，而通过oatmeal这个耗时大约在100毫秒左右。</p><p>我一直都很想把oatmeal引入进Tinker，但是比较担心兼容性的问题。因为每个版本ODEX格式都有一些差异，oatmeal是需要分版本适配的。</p><p><strong>2. Native Library</strong></p><p>现在音视频、美颜、AI、VR这些功能在应用越来越普遍，但这些库一般都是使用C或者C++写的，也就是说，我们的APK中Native Library的体积越来越大了。</p><p>对于Native Library，传统的优化方法可能就是去除Debug信息、使用c++_shared这些。那我们还有没有更好的优化方法呢？</p><p><strong>Library压缩</strong><br>\n跟Dex压缩一样，Library优化最有效果的方法也是使用XZ或者7-Zip压缩。</p><p><img src=\"https://static001.geekbang.org/resource/image/8f/c6/8f8a924549a14fd298f6efb4564f8ac6.png?wh=1920*310\" alt=\"\"></p><p>在默认的lib目录，我们只需要加载少数启动过程相关的Library，其他的Library我们都在首次启动时解压。对于Library格式来说，压缩率同样可以比Zip高30%左右，效果十分惊人。</p><p>Facebook有一个So加载的开源库<a href=\"https://github.com/facebook/SoLoader\">SoLoader</a>，它可以跟这套方案配合使用。<strong>和Dex压缩一样，压缩方案的主要缺点在于首次启动的时间，毕竟对于低端机来说，多线程的意义并不大，因此我们要在包体积和用户体验之间做好平衡。</strong></p><p><strong>Library合并与裁剪</strong><br>\n对于Native Library，Facebook中的编译构建工具<a href=\"https://buckbuild.com/\">Buck</a>也有两个比较硬核的高科技。当然在官方文档中是完全找不到的，它们都隐藏在<a href=\"https://github.com/facebook/buck\">源码</a>中。</p><ul>\n<li>\n<p><strong>Library合并</strong>。在Android 4.3之前，进程加载的Library数量是<a href=\"https://android.googlesource.com/platform/bionic/+/ba98d9237b0eabc1d8caf2600fd787b988645249%5E%21/\">有限制的</a>。在编译过程，我们可以自动将部分Library合并成一个。具体思路你可以参考文章<a href=\"https://code.fb.com/android/android-native-library-merging/\">《Android native library merging》</a>以及<a href=\"https://github.com/fbsamples/android-native-library-merging-demo\">Demo</a>。</p>\n</li>\n<li>\n<p><strong>Library裁剪</strong>。Buck里面有一个<a href=\"https://github.com/facebook/buck/blob/master/src/com/facebook/buck/android/relinker/NativeRelinker.java\">relinker</a>的功能，原理就是分析代码中JNI方法以及不同Library的方法调用，找到没有无用的导出symbol，将它们删掉。<strong>这样linker在编译的时候也会把对应的无用代码同时删掉</strong>，这个方法相当于实现了Library的ProGuard Shrinking功能。</p>\n</li>\n</ul><p><img src=\"https://static001.geekbang.org/resource/image/b8/a0/b86745a05656f05116443549cec6f3a0.png?wh=1478*1038\" alt=\"\"></p><h2>包体积监控</h2><p>关于包体积，如果一直放任不管，几个版本之后就会给你很大的“惊喜”。我了解到一些应用对包体积卡得很紧，任何超过100KB的功能都需要审批。</p><p>对于包体积的监控，通常有下面几种：</p><ul>\n<li>\n<p><strong>大小监控</strong>。这个非常好理解，每个版本跟上一个版本包体积的对比情况。如果某个版本体积增长过大，需要分析具体原因，是否有优化空间。</p>\n</li>\n<li>\n<p><strong>依赖监控</strong>。每一版本我们都需要监控依赖，这里包括新增JAR以及AAR依赖。这是因为很多开发者非常不细心，经常会不小心把一些超大的开源库引进来。</p>\n</li>\n<li>\n<p><strong>规则监控</strong>。如果发现某个版本包体积增长很大，我们需要分析原因。规则监控也就是将包体积的监控抽象为规则，例如无用资源、大文件、重复文件、R文件等。比如我在微信的时候，使用<a href=\"https://mp.weixin.qq.com/s/tP3dtK330oHW8QBUwGUDtA\">ApkChecker</a>实现包体积的规则监控。</p>\n</li>\n</ul><p><img src=\"https://static001.geekbang.org/resource/image/bd/c9/bd20c2420a06e332a78737deaa0aedc9.png?wh=1024*768\" alt=\"\"></p><p>包体积的监控最好可以实现自动化与平台化，作为发布流程的其中一个环节。不然通过人工的方式，很难持续坚持下去。</p><h2>总结</h2><p>今天我们一起分析了实现难度比较大的包体积优化方法，可能有人会想这些方法实现难度那么大，真的有价值吗？根据我的理解，现在我们已经到了移动优化的“深水区”，网上那些千篇一律的文章已经无法满足需求。也就是说，简单的方法我们都掌握了，而且也都已经在做了，需要考虑接下来应该如何进一步优化。</p><p>这时候就需要静下心来，学会思考与钻研，再往底层走走。我们要去研究APK的文件格式，进一步还要研究内部Dex、Library以及Resource的文件格式。同时思考整个编译流程，才能找到那些可以突破的地方。</p><p>在实现AndResGuard的时候，我就对resources.arsc格式以及Android加载资源的流程有非常深入的研究。几年过去了，对于资源的优化又有哪些新的秘籍呢？我们下一期就会讨论“资源优化”这个主题。</p><p>从Buck和ReDex看出来，Facebook比国内的研究真的要高深很多，希望他们可以补充一些文档，让我们学习起来更轻松一些。</p><h2>课后作业</h2><p>你的应用会关注包体积吗？你做过哪些包体积优化的工作，有哪些好的方法可以跟同学们分享呢？欢迎留言跟我和其他同学一起讨论。</p><p>今天的练习<a href=\"https://github.com/AndroidAdvanceWithGeektime/Chapter22\">Sample</a>，尝试使用ReDex这个项目来优化我们应用的包体积，主要有下面几个小任务：</p><ul>\n<li>\n<p>strip debuginfo</p>\n</li>\n<li>\n<p>分包优化</p>\n</li>\n</ul><p>欢迎你点击“请朋友读”，把今天的内容分享给好友，邀请他一起学习。最后别忘了在评论区提交今天的作业，我也为认真完成作业的同学准备了丰厚的“学习加油礼包”，期待与你一起切磋进步哦。</p><p></p>","comments":[{"had_liked":false,"id":93719,"user_name":"程序员小跃","can_delete":false,"product_type":"c1","uid":1015483,"ip_address":"","ucode":"25BB96E0791A60","user_header":"https://static001.geekbang.org/account/avatar/00/0f/7e/bb/947c329a.jpg","comment_is_top":false,"comment_ctime":1557567836,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"35917306204","product_id":100021101,"comment_content":"FaceBook之所以这么强大，不仅仅是因为社交的地位，还有对开源世界的影响，对软件发展的贡献","like_count":9},{"had_liked":false,"id":66247,"user_name":"代码猩球","can_delete":false,"product_type":"c1","uid":1365731,"ip_address":"","ucode":"A5A31CC73FB482","user_header":"https://static001.geekbang.org/account/avatar/00/14/d6/e3/83ef4e85.jpg","comment_is_top":false,"comment_ctime":1549896905,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"27319700681","product_id":100021101,"comment_content":"文章内容丰富，里面各种链接都值得研读一下，👍","like_count":7},{"had_liked":false,"id":135670,"user_name":"Geek_a8c19d","can_delete":false,"product_type":"c1","uid":1669436,"ip_address":"","ucode":"AA73547EDDEEBC","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epHq3ymHWHkRSaxiacNHMSNXEPZQOgVdiao1gL9xI7uGPRAyibGT63HSvoVz8Varb4o7icAK1oiauy6b5A/132","comment_is_top":false,"comment_ctime":1569237848,"is_pvip":false,"replies":[{"id":"62083","content":"重排并不是为了减少size，不过可以diff一下是哪一块变大了。会不会只是压缩率的问题","user_name":"作者回复","user_name_real":"张绍文","uid":"1009577","ctime":1576683446,"ip_address":"","comment_id":135670,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10159172440","product_id":100021101,"comment_content":"Sample里的Release包dex重排优化后APK变大<br>redex --sign -s ReDexSample&#47;keystore&#47;debug.keystore -a androiddebugkey -p android -c redex-test&#47;interdex.config -P ReDexSample&#47;proguard-rules.pro  -o redex-test&#47;interdex_output-release.apk ReDexSample&#47;build&#47;outputs&#47;apk&#47;release&#47;ReDexSample-release.apk","like_count":2,"discussions":[{"author":{"id":1009577,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/67/a9/e251ace7.jpg","nickname":"张绍文","note":"","ucode":"94B49E5F80BFDE","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":468297,"discussion_content":"重排并不是为了减少size，不过可以diff一下是哪一块变大了。会不会只是压缩率的问题","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1576683446,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":138742,"user_name":"wizrdev","can_delete":false,"product_type":"c1","uid":1293868,"ip_address":"","ucode":"D5E97A7ABBF0DE","user_header":"https://static001.geekbang.org/account/avatar/00/13/be/2c/d56f0f3e.jpg","comment_is_top":false,"comment_ctime":1570436851,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"5865404147","product_id":100021101,"comment_content":"在mac上搞了两天redex，执行autoreconf -ivf &amp;&amp; .&#47;configure &amp;&amp; make -j4一直编译不同过，在linux上编译就很顺利，在mac上一直报下面的错误<br>autoreconf: Entering directory `.&#39;<br>autoreconf: configure.ac: not using Gettext<br>autoreconf: running: aclocal --force -I m4<br>autoreconf: configure.ac: tracing<br>autoreconf: running: glibtoolize --copy --force<br>glibtoolize: putting auxiliary files in &#39;.&#39;.<br>glibtoolize: copying file &#39;.&#47;ltmain.sh&#39;<br>glibtoolize: putting macros in AC_CONFIG_MACRO_DIRS, &#39;m4&#39;.<br>glibtoolize: copying file &#39;m4&#47;libtool.m4&#39;<br>glibtoolize: copying file &#39;m4&#47;ltoptions.m4&#39;<br>glibtoolize: copying file &#39;m4&#47;ltsugar.m4&#39;<br>glibtoolize: copying file &#39;m4&#47;ltversion.m4&#39;<br>glibtoolize: copying file &#39;m4&#47;lt~obsolete.m4&#39;<br>autoreconf: running: &#47;usr&#47;local&#47;Cellar&#47;autoconf&#47;2.69&#47;bin&#47;autoconf --force<br>autoreconf: configure.ac: not using Autoheader<br>autoreconf: running: automake --add-missing --copy --force-missing<br>configure.ac:6: warning: AM_INIT_AUTOMAKE: two- and three-arguments forms are deprecated.  For more info, see:<br>configure.ac:6: https:&#47;&#47;www.gnu.org&#47;software&#47;automake&#47;manual&#47;automake.html#Modernize-AM_005fINIT_005fAUTOMAKE-invocation<br>configure.ac:14: installing &#39;.&#47;compile&#39;<br>configure.ac:6: installing &#39;.&#47;missing&#39;<br>Makefile.am: installing &#39;.&#47;depcomp&#39;<br>autoreconf: Leaving directory `.&#39;<br>checking for a BSD-compatible install... &#47;usr&#47;bin&#47;install -c<br>checking whether build environment is sane... yes<br>checking for a thread-safe mkdir -p... .&#47;install-sh -c -d<br>checking for gawk... no<br>checking for mawk... no<br>checking for nawk... no<br>checking for awk... awk<br>checking whether make sets $(MAKE)... yes<br>checking whether make supports nested variables... yes<br>checking for g++... g++<br>checking whether the C++ compiler works... no<br>configure: error: in `&#47;Users&#47;funaihui&#47;AndroidStudioProjects&#47;redex&#39;:<br>configure: error: C++ compiler cannot create executables<br>See `config.log&#39; for more details<br>有什么解决的方法吗？","like_count":1,"discussions":[{"author":{"id":1293868,"avatar":"https://static001.geekbang.org/account/avatar/00/13/be/2c/d56f0f3e.jpg","nickname":"wizrdev","note":"","ucode":"D5E97A7ABBF0DE","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":26305,"discussion_content":"已经搞定了了，是环境变量配置的问题","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1570594073,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1504447,"avatar":"https://static001.geekbang.org/account/avatar/00/16/f4/bf/dfab90c6.jpg","nickname":"乌有先生","note":"","ucode":"F8DFB51C7FD1CF","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1293868,"avatar":"https://static001.geekbang.org/account/avatar/00/13/be/2c/d56f0f3e.jpg","nickname":"wizrdev","note":"","ucode":"D5E97A7ABBF0DE","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":290631,"discussion_content":"你好，我也遇到同样的问题，请问是怎么解决的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1594553413,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":26305,"ip_address":""},"score":290631,"extra":""}]}]},{"had_liked":false,"id":276417,"user_name":"大豆","can_delete":false,"product_type":"c1","uid":1350130,"ip_address":"","ucode":"BC78EF2336DBD0","user_header":"https://static001.geekbang.org/account/avatar/00/14/99/f2/c74d24d7.jpg","comment_is_top":false,"comment_ctime":1611914353,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1611914353","product_id":100021101,"comment_content":"在release包下，redex效果不明显啊。它还与r8冲突，看来得根据redex来自定义啊。","like_count":0,"discussions":[{"author":{"id":1372499,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKzEPicUMYCAy6BnTXlsmlicoLXa2stujvDn38NEBc2icvcVCX5ysLeDnyT3oERcicQb1TRzMBibSOIhfQ/132","nickname":"江羽","note":"","ucode":"118D39A7DA0500","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":392485,"discussion_content":"同感，我只想尝试去除debugInfo这一项优化，在release包上都报错，请问你那里可以吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1631017374,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":267643,"user_name":"hs","can_delete":false,"product_type":"c1","uid":1135809,"ip_address":"","ucode":"136D2A4B25E847","user_header":"https://static001.geekbang.org/account/avatar/00/11/54/c1/1d852e91.jpg","comment_is_top":false,"comment_ctime":1607853970,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1607853970","product_id":100021101,"comment_content":"老师想问一下，dex2oat 的产物不应该是 elf 文件吗？为什么上面图中说的是 odex","like_count":0},{"had_liked":false,"id":234018,"user_name":"乌有先生","can_delete":false,"product_type":"c1","uid":1504447,"ip_address":"","ucode":"F8DFB51C7FD1CF","user_header":"https://static001.geekbang.org/account/avatar/00/16/f4/bf/dfab90c6.jpg","comment_is_top":false,"comment_ctime":1594553536,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1594553536","product_id":100021101,"comment_content":"在mac上，执行autoreconf -ivf &amp;&amp; .&#47;configure &amp;&amp; make -j4一直报错：<br>autoreconf: Entering directory `.&#39;<br>autoreconf: configure.ac: not using Gettext<br>autoreconf: running: aclocal --force -I m4<br>aclocal: error: aclocal: file &#39;&#47;usr&#47;local&#47;share&#47;aclocal&#47;pkg.m4&#39; does not exist<br>autoreconf: aclocal failed with exit status: 1<br>有遇到的吗","like_count":0},{"had_liked":false,"id":220498,"user_name":"Zain Zhu","can_delete":false,"product_type":"c1","uid":1125986,"ip_address":"","ucode":"5402E6FF76333A","user_header":"https://static001.geekbang.org/account/avatar/00/11/2e/62/ea49480e.jpg","comment_is_top":false,"comment_ctime":1590251100,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1590251100","product_id":100021101,"comment_content":"只做过简单的proguard，无效资源清理一类的。看这个系列就感觉每一个小的点真去关注的话都可以深挖出非常多的知识点啊。有种永远看不到尽头的感觉。","like_count":0},{"had_liked":false,"id":205384,"user_name":"Swing","can_delete":false,"product_type":"c1","uid":1330065,"ip_address":"","ucode":"55FCA9ECEFBBEB","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/N0NACGUr8dNAbN6BdiagPHBaB0EnyDsI9zWpwJteqTY38apOEnTOA7JkBAQnzYKJBgxu3Q8YMUILwLAB6camn4w/132","comment_is_top":false,"comment_ctime":1586604178,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1586604178","product_id":100021101,"comment_content":"facebook 大牛们见多识广。。。才能搞出来这些<br>张老师也是。。","like_count":0},{"had_liked":false,"id":203439,"user_name":"Tyrion","can_delete":false,"product_type":"c1","uid":1521545,"ip_address":"","ucode":"A3DAD284DD2104","user_header":"https://static001.geekbang.org/account/avatar/00/17/37/89/a1459156.jpg","comment_is_top":false,"comment_ctime":1586189717,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1586189717","product_id":100021101,"comment_content":"so 库还可以动态加载吧 不用打到apk里","like_count":0,"discussions":[{"author":{"id":1071143,"avatar":"https://static001.geekbang.org/account/avatar/00/10/58/27/1188e017.jpg","nickname":"Egos","note":"","ucode":"9F0055B140E935","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":314104,"discussion_content":"google play 不可以的呢","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1603117480,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":130969,"user_name":"詹伟","can_delete":false,"product_type":"c1","uid":1243133,"ip_address":"","ucode":"F843BBB6381983","user_header":"https://static001.geekbang.org/account/avatar/00/12/f7/fd/3a3782f9.jpg","comment_is_top":false,"comment_ctime":1567585802,"is_pvip":false,"replies":[{"id":"62075","content":"只能删除一些缓存文件，或者提示用户清理空间了","user_name":"作者回复","user_name_real":"张绍文","uid":"1009577","ctime":1576681975,"ip_address":"","comment_id":130969,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1567585802","product_id":100021101,"comment_content":"动态库压缩，动态库拷贝成功后才有戏，如果拷贝失败了怎么破，apk内直接读是不能压缩的","like_count":0,"discussions":[{"author":{"id":1009577,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/67/a9/e251ace7.jpg","nickname":"张绍文","note":"","ucode":"94B49E5F80BFDE","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":466219,"discussion_content":"只能删除一些缓存文件，或者提示用户清理空间了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1576681975,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":119982,"user_name":"nb Ack","can_delete":false,"product_type":"c1","uid":1137171,"ip_address":"","ucode":"2C1B99C85C8CCD","user_header":"https://static001.geekbang.org/account/avatar/00/11/5a/13/3160996d.jpg","comment_is_top":false,"comment_ctime":1564743577,"is_pvip":false,"replies":[{"id":"62065","content":"在国内为了减少安装包体积，一般都是单abi的，不仅仅是微信","user_name":"作者回复","user_name_real":"张绍文","uid":"1009577","ctime":1576680863,"ip_address":"","comment_id":119982,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1564743577","product_id":100021101,"comment_content":"老师您好。我想问一下减少 apk 体积是不是可以通过配置 <br> ndk {<br>            abiFilters &#39;armeabi-v7a&#39;<br>        }<br>减少打出的 so 文件。听说微信就是这样的？这会有什么问题吗？","like_count":0,"discussions":[{"author":{"id":1009577,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/67/a9/e251ace7.jpg","nickname":"张绍文","note":"","ucode":"94B49E5F80BFDE","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":461160,"discussion_content":"在国内为了减少安装包体积，一般都是单abi的，不仅仅是微信","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1576680863,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1112747,"avatar":"https://static001.geekbang.org/account/avatar/00/10/fa/ab/0d39e745.jpg","nickname":"李小四","note":"","ucode":"2A766BE16B276B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":5099,"discussion_content":"我觉得不行，根据官方文档，除了有性能问题，还可能会不兼容。\nhttps://developer.android.com/ndk/guides/abis","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1565944609,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":101473,"user_name":"坚持远方","can_delete":false,"product_type":"c1","uid":1148716,"ip_address":"","ucode":"17D2D4E38DCC3F","user_header":"https://static001.geekbang.org/account/avatar/00/11/87/2c/037d64a1.jpg","comment_is_top":false,"comment_ctime":1559815200,"is_pvip":false,"discussion_count":3,"race_medal":0,"score":"1559815200","product_id":100021101,"comment_content":"去除debugInfo一直报错。<br>Traceback (most recent call last):<br>  File &quot;&#47;tmp&#47;redex.Nv400q&#47;redex.py&quot;, line 785, in &lt;module&gt;<br>    run_redex(args)<br>  File &quot;&#47;tmp&#47;redex.Nv400q&#47;redex.py&quot;, line 762, in run_redex<br>    run_redex_binary(state)<br>  File &quot;&#47;tmp&#47;redex.Nv400q&#47;redex.py&quot;, line 224, in run_redex_binary<br>    &#39;by running %(lldb_script_name)s&#39;) % script_filenames)<br>RuntimeError: redex-all crashed with exit code -6! You can re-run it under gdb by running &#47;tmp&#47;redex.Nv400q&#47;redex-gdb-1t87rU.sh or under lldb by running &#47;tmp&#47;redex.Nv400q&#47;redex-lldb-xphU77.sh","like_count":0,"discussions":[{"author":{"id":1602634,"avatar":"https://static001.geekbang.org/account/avatar/00/18/74/4a/2dd9d62a.jpg","nickname":"EchoSomeTH","note":"","ucode":"E73F13BF09695F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":3299,"discussion_content":"{\n  &#34;redex&#34; : {\n    &#34;passes&#34; : [\n      &#34;StripDebugInfoPass&#34;\n    ]\n  },\n  &#34;StripDebugInfoPass&#34; : {\n    &#34;drop_all_dbg_info&#34; : false,\n    &#34;drop_local_variables&#34; : true,\n    &#34;drop_line_numbers&#34; : false,\n    &#34;drop_src_files&#34; : false,\n    &#34;use_whitelist&#34; : false,\n    &#34;cls_whitelist&#34; : [],\n    &#34;method_whitelist&#34; : [],\n    &#34;drop_prologue_end&#34; : true,\n    &#34;drop_epilogue_begin&#34; : true,\n    &#34;drop_all_dbg_info_if_empty&#34; : true\n  }\n\n}\n我发现日志里的错误警告是类型无法转为 bool 这是他们的config文件类型修改导致的，你换成这个，具体可以参考redex下的config/aggressive.config文件也有这个pass的相关配置,zipAlign我指定了build/tool/27.0.3/的然后就运行成功了，仔细看日志一定可以的","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1564383808,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1372499,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKzEPicUMYCAy6BnTXlsmlicoLXa2stujvDn38NEBc2icvcVCX5ysLeDnyT3oERcicQb1TRzMBibSOIhfQ/132","nickname":"江羽","note":"","ucode":"118D39A7DA0500","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1602634,"avatar":"https://static001.geekbang.org/account/avatar/00/18/74/4a/2dd9d62a.jpg","nickname":"EchoSomeTH","note":"","ucode":"E73F13BF09695F","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":392468,"discussion_content":"请问同学，你在开启R8的情况下，处理Release包stripdebuginfo不会报错吗？看官方isssue，似乎不支持是有问题","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1631013712,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":3299,"ip_address":""},"score":392468,"extra":""}]},{"author":{"id":2888002,"avatar":"https://static001.geekbang.org/account/avatar/00/2c/11/42/49961625.jpg","nickname":"歆萌","note":"","ucode":"09A22CB4860761","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":544821,"discussion_content":"请问有解决吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1641724289,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":100221,"user_name":"天空","can_delete":false,"product_type":"c1","uid":1121156,"ip_address":"","ucode":"761E84AF9EE8EA","user_header":"https://static001.geekbang.org/account/avatar/00/11/1b/84/76ca98cc.jpg","comment_is_top":false,"comment_ctime":1559485842,"is_pvip":false,"replies":[{"id":"62038","content":"可能需要适配一下才行","user_name":"作者回复","user_name_real":"张绍文","uid":"1009577","ctime":1576678553,"ip_address":"","comment_id":100221,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1559485842","product_id":100021101,"comment_content":"项目用了small插件化，ApkChecker不能分析以so库的插件，怎么办？","like_count":0,"discussions":[{"author":{"id":1009577,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/67/a9/e251ace7.jpg","nickname":"张绍文","note":"","ucode":"94B49E5F80BFDE","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":452461,"discussion_content":"可能需要适配一下才行","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1576678553,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":92351,"user_name":"joker°","can_delete":false,"product_type":"c1","uid":1523167,"ip_address":"","ucode":"52C20DFDDCADD3","user_header":"https://static001.geekbang.org/account/avatar/00/17/3d/df/f33f82e3.jpg","comment_is_top":false,"comment_ctime":1557238616,"is_pvip":false,"replies":[{"id":"62010","content":"抱歉抱歉","user_name":"作者回复","user_name_real":"张绍文","uid":"1009577","ctime":1576676075,"ip_address":"","comment_id":92351,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1557238616","product_id":100021101,"comment_content":"mess 还是在维护的~","like_count":0,"discussions":[{"author":{"id":1009577,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/67/a9/e251ace7.jpg","nickname":"张绍文","note":"","ucode":"94B49E5F80BFDE","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":449222,"discussion_content":"抱歉抱歉","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1576676075,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":85629,"user_name":"小小代码","can_delete":false,"product_type":"c1","uid":1290642,"ip_address":"","ucode":"F3D4E2C23FC9BD","user_header":"https://static001.geekbang.org/account/avatar/00/13/b1/92/f3dabcb1.jpg","comment_is_top":false,"comment_ctime":1555148352,"is_pvip":false,"replies":[{"id":"31106","content":"需要拼到命令行中：<br>redex -P proguard_rule.txt   -c interdex.config  boot-free-debug.apk -o redex.apk ","user_name":"作者回复","user_name_real":"张绍文","uid":"1009577","ctime":1555397253,"ip_address":"","comment_id":85629,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1555148352","product_id":100021101,"comment_content":"还有个问题，Redex重分包的功能，如果我使用通过-printconfiguration &quot;build&#47;outputs&#47;mapping&#47;proguard-rules.pro&quot;生成的合并之后的Proguard文件，会打印<br>InterDexPass not run because no ProGuard configuration was provided的日志，但我实际上配置了Proguard文件啊","like_count":0,"discussions":[{"author":{"id":1009577,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/67/a9/e251ace7.jpg","nickname":"张绍文","note":"","ucode":"94B49E5F80BFDE","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":446741,"discussion_content":"需要拼到命令行中：\nredex -P proguard_rule.txt   -c interdex.config  boot-free-debug.apk -o redex.apk ","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1555397253,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":85627,"user_name":"小小代码","can_delete":false,"product_type":"c1","uid":1290642,"ip_address":"","ucode":"F3D4E2C23FC9BD","user_header":"https://static001.geekbang.org/account/avatar/00/13/b1/92/f3dabcb1.jpg","comment_is_top":false,"comment_ctime":1555147729,"is_pvip":false,"replies":[{"id":"31107","content":"可以拼在命令行中：<br>redex -P proguard_rule.txt   -c interdex.config  boot-free-debug.apk -o redex-uc.apk ","user_name":"作者回复","user_name_real":"张绍文","uid":"1009577","ctime":1555397328,"ip_address":"","comment_id":85627,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1555147729","product_id":100021101,"comment_content":"试了下Redex重分包的功能，发现个问题，如果我使用通过-printconfiguration &quot;build&#47;outputs&#47;mapping&#47;proguard-rules.pro&quot;生成的合并之后的Proguard文件，会打印<br>InterDexPass not run because no ProGuard configuration was provided的日志，但我实际上配置了Proguard文件啊","like_count":0,"discussions":[{"author":{"id":1009577,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/67/a9/e251ace7.jpg","nickname":"张绍文","note":"","ucode":"94B49E5F80BFDE","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":446740,"discussion_content":"可以拼在命令行中：\nredex -P proguard_rule.txt   -c interdex.config  boot-free-debug.apk -o redex-uc.apk ","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1555397328,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":72998,"user_name":"elephant","can_delete":false,"product_type":"c1","uid":1065359,"ip_address":"","ucode":"0F93F51B613DF3","user_header":"https://static001.geekbang.org/account/avatar/00/10/41/8f/d8596c40.jpg","comment_is_top":false,"comment_ctime":1551774009,"is_pvip":false,"replies":[{"id":"28202","content":"对的，不过感觉他们玩的太飘了，可以参考但是不好全盘接受","user_name":"作者回复","user_name_real":"张绍文","uid":"1009577","ctime":1552917569,"ip_address":"","comment_id":72998,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1551774009","product_id":100021101,"comment_content":"F家的方案总是让人不可思议，经常想大喊，你们至于么，方案搞得这么黑科技！！！以前看fresco和reactnative实现，请问我跪的标准么。😂","like_count":0,"discussions":[{"author":{"id":1009577,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/67/a9/e251ace7.jpg","nickname":"张绍文","note":"","ucode":"94B49E5F80BFDE","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":441868,"discussion_content":"对的，不过感觉他们玩的太飘了，可以参考但是不好全盘接受","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1552917569,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":66822,"user_name":"CoderAndy","can_delete":false,"product_type":"c1","uid":1330506,"ip_address":"","ucode":"497112D94DE297","user_header":"https://static001.geekbang.org/account/avatar/00/14/4d/4a/e13779af.jpg","comment_is_top":false,"comment_ctime":1550026029,"is_pvip":false,"replies":[{"id":"23636","content":"不执行dexopt，直接通过oatmeal自己生成odex","user_name":"作者回复","user_name_real":"张绍文","uid":"1009577","ctime":1550029562,"ip_address":"","comment_id":66822,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1550026029","product_id":100021101,"comment_content":"Facebook把dex放在assets下那么在首次启动解压后，如何执行dexopt？或者会不会执行该操作？","like_count":0,"discussions":[{"author":{"id":1009577,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/67/a9/e251ace7.jpg","nickname":"张绍文","note":"","ucode":"94B49E5F80BFDE","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":438930,"discussion_content":"不执行dexopt，直接通过oatmeal自己生成odex","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1550029562,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1341267,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIuUYcwKWUuib5mpdIbTwQzTGNWBmk0ktZSwm2vteUXf4TxWF2aVCv7Hvshcq0OaG7JRLj6rJyPLicA/132","nickname":"godliness","note":"","ucode":"1C1976C39DCFE6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":342282,"discussion_content":"对于 5.0，6.0 的设备，oatmeal 生成的 odex 是怎么处理的呢？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1610626531,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":65813,"user_name":"Allen","can_delete":false,"product_type":"c1","uid":1145198,"ip_address":"","ucode":"21A527D6137F63","user_header":"https://static001.geekbang.org/account/avatar/00/11/79/6e/49245cce.jpg","comment_is_top":false,"comment_ctime":1549679145,"is_pvip":false,"replies":[{"id":"23269","content":"类似dex分包以及某些手段，是既能减少包体积又能提升启动速度。<br><br>如果需要权衡的事情，我们要看自己的应用处于哪个阶段，目前更加严峻的是哪个问题","user_name":"作者回复","user_name_real":"张绍文","uid":"1009577","ctime":1549682505,"ip_address":"","comment_id":65813,"utype":1}],"discussion_count":1,"race_medal":2,"score":"1549679145","product_id":100021101,"comment_content":"其实更好奇怎样在启动速度快的要求下 减少包体大小 还是这两者必须择一呢","like_count":1,"discussions":[{"author":{"id":1009577,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/67/a9/e251ace7.jpg","nickname":"张绍文","note":"","ucode":"94B49E5F80BFDE","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":438598,"discussion_content":"类似dex分包以及某些手段，是既能减少包体积又能提升启动速度。\n\n如果需要权衡的事情，我们要看自己的应用处于哪个阶段，目前更加严峻的是哪个问题","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1549682505,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]}]}