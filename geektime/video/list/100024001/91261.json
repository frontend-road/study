{"id":91261,"title":"50 | GC友好的代码","content":"<h1>课件及源代码地址</h1><p><a href=\"https://gitee.com/geektime-geekbang/go_learning\">https://gitee.com/geektime-geekbang/go_learning</a></p><h2>书目推荐</h2><p><a href=\"time://mall?url=https%3A%2F%2Fh5.youzan.com%2Fv2%2Fgoods%2F1ycmk3uob0ryw\">《计算机程序的构造和解释》</a></p>","comments":[{"had_liked":false,"id":373749,"user_name":"Nemo","can_delete":false,"product_type":"c3","uid":1657039,"ip_address":"广东","ucode":"2B11D18D6FA2AE","user_header":"https://static001.geekbang.org/account/avatar/00/19/48/cf/8c88e6c0.jpg","comment_is_top":false,"comment_ctime":1683119695,"is_pvip":false,"replies":[{"id":141637,"content":"Golang的我没有测试过 python的是正确的可以输出多个","user_name":"作者回复","user_name_real":"编辑","uid":1008262,"ctime":1712110667,"ip_address":"北京","comment_id":373749,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100024001,"comment_content":"goos: linux\ngoarch: amd64\npkg: go_learning&#47;src&#47;ch41&#47;auto_growing\ncpu: Intel(R) Core(TM) i7-8850H CPU @ 2.60GHz\nBenchmarkAutoGrow-12                1342            879654 ns&#47;op\nBenchmarkProperInit-12              6594            164639 ns&#47;op\nBenchmarkOverSizeInit-12            1827            584644 ns&#47;op\nPASS\nok      go_learning&#47;src&#47;ch41&#47;auto_growing       5.123s\n\n这里为啥大八倍的反而第二快？","like_count":0,"discussions":[{"author":{"id":1008262,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/62/86/632ad029.jpg","nickname":"蔡超","note":"","ucode":"4C281BBF511238","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":641038,"discussion_content":"Golang的我没有测试过 python的是正确的可以输出多个","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1712110667,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2,\"source\":0}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":354595,"user_name":"lixin","can_delete":false,"product_type":"c3","uid":1512599,"ip_address":"广东","ucode":"94D99DAFB6C929","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/88nXicqmkJWm3IXVfPfGQSk8SKIBVKjuC4qhzaCkf5Ud88uvKgS4Vf5AzCJ1uaFO0gpPnxdh4CowfhpxV1kSbXw/132","comment_is_top":false,"comment_ctime":1660575177,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":2,"product_id":100024001,"comment_content":"gc,可以看出从是哪些 空间或者变量发生 gc?","like_count":0},{"had_liked":false,"id":178560,"user_name":"sky","can_delete":false,"product_type":"c3","uid":1082187,"ip_address":"","ucode":"FC323371453C97","user_header":"https://static001.geekbang.org/account/avatar/00/10/83/4b/0e96fcae.jpg","comment_is_top":false,"comment_ctime":1581744427,"is_pvip":false,"replies":null,"discussion_count":1,"race_medal":0,"score":2,"product_id":100024001,"comment_content":"大家有遇到在浏览器上点击 view trace 空白的情况吗，点击 Goroutine analysis 是正常有数据的","like_count":0,"discussions":[{"author":{"id":1110437,"avatar":"https://static001.geekbang.org/account/avatar/00/10/f1/a5/6cc9f728.jpg","nickname":"秋天的透明雨🌧️","note":"","ucode":"9363B49BFA6C14","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":180100,"discussion_content":"我这遇到了，换了浏览器还是一样的空白, 参考这个文章解决了https://blog.csdn.net/lsmsrc/article/details/104376274。注意，如果注册时使用的是localhost, 浏览器中打开trace viewer的时候也一定要使用localhost，否则使用127.0.0.1还是显示空白","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1582276826,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":160931,"user_name":"木头发芽","can_delete":false,"product_type":"c3","uid":1419723,"ip_address":"","ucode":"657B381C5DA963","user_header":"https://static001.geekbang.org/account/avatar/00/15/a9/cb/a431bde5.jpg","comment_is_top":false,"comment_ctime":1576063651,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":2,"product_id":100024001,"comment_content":"参数为结构体切片我一般会用指针数组如\nfunc updateUserList(userlist []*UserInfo)\n对切片来说是传值，会拷贝，但是切片结构体里的userinfo数组是指针，所以只是拷贝了指针值，而不是拷贝userinfo数组成员的值。开销也比较小。\n是不是参数传*[]*UserInfo会更好?","like_count":0},{"had_liked":false,"id":112838,"user_name":"Geek_b3928a","can_delete":false,"product_type":"c3","uid":1507428,"ip_address":"","ucode":"DB75EC0C29BAE1","user_header":"","comment_is_top":false,"comment_ctime":1562829629,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":2,"product_id":100024001,"comment_content":"老师我有问题请教，我在过去数据库多条数据后放在一个结构体的切片中，比如多个用户的信息，那么函数应该返回这个结构体的指针还是直接还回结构体？哪种方式性能更好？貌似编译器都会将这个结构体对象分配到对上？","like_count":0}]}