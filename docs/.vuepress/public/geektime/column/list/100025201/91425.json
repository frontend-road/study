{"id":91425,"title":"03 | 汇编：编程语言的诞生","content":"<p>你好，我是七牛云许式伟。</p><p>在上一讲中，我们一起解剖了架构大厦的地基：冯·诺依曼体系。接下来，我们就开始沿着这座大厦攀登，一起来聊聊编程语言。</p><p>对于现代计算机来说，虽然 CPU 指令是一个很有限的指令集，但是CPU 执行的指令序列（或者叫“程序”）并不是固定的，它依赖于保存在存储中的数据，由软件工程师（或者叫“程序员”）编写的软件决定。</p><p>从上一讲中，我们可以知道，计算机的程序可能被保存在计算机主板的ROM上（这段程序也叫计算机的启动程序），也可能被保存在外置的存储设备（比如硬盘）上，并在合适的时机加载执行。</p><p>程序称得上是计算机的灵魂。指令序列的可能性是无穷的，程序的可能性就是无穷的。今天计算机创造的世界如此多姿多彩，正是得益于程序无穷的可能性。</p><p>那么，软件工程师是怎么编写程序的？</p><h2>编程的史前时代</h2><p>在第一门面向程序员的编程语言出现前，人们只能通过理解CPU指令的二进制表示，将程序以二进制数据方式刻录到存储（比如ROM或硬盘）上。</p><p>这个时期的编程无疑是痛苦的，效率是极其低下的：且不说我们怎么去修改和迭代我们的程序，光将我们的想法表达出来就极其困难。</p><p>我们首先要把表达的执行指令翻译成二进制的比特数据，然后再把这些数据刻录到存储上。</p><!-- [[[read_end]]] --><p>这个时候软件和硬件的边界还非常模糊，并不存在所谓软件工程师（或者叫“程序员”）这样的职业。写程序也并不是一个纯软件的行为，把程序刻录到存储上往往还涉及了硬件的电气操作。</p><p>为了解决编程效率的问题，汇编语言（和解释它的编译器）诞生了。汇编语言的编译器将汇编语言写的程序编译成为CPU指令序列，并将其保存到外置的存储设备（比如硬盘）上。</p><p>汇编语言非常接近计算机的CPU 指令，一条汇编指令基本上和CPU指令一一对应。</p><h2>与机器对话</h2><p>汇编语言的出现，让写程序（编程）成为一个纯软件行为（出现“程序员”这个分工的标志），人们可以反复修改程序，然后通过汇编编译器将其翻译成机器语言，并写入到外置的存储设备（比如硬盘）。并且，程序员可以按需执行该程序。</p><p>在表达能力上，汇编语言主要做了如下效率优化。</p><ul>\n<li>\n<p>用文本符号（symbol）表达机器指令，例如 add 表示加法运算，而不用记忆对应的 CPU 指令的二进制表示。</p>\n</li>\n<li>\n<p>用文本符号（symbol）表达要操作的内存地址，并支持内存地址的自动分配。比如我们在程序中使用了“Hello” 这样一段文本，那么汇编编译器将为程序开辟一段静态存储区（通常我们叫“数据段”）来存放这段文本，并用一个文本符号（也就是“变量名-variable”）指向它。用变量名去表达一段内存数据，这样我们就不用去关注内存的物理地址，而把精力放在程序的逻辑表达上。</p>\n</li>\n<li>\n<p>用文本符号（symbol）表达要调用的函数（function，也叫“过程-procedure”）地址。对 CPU 指令来说，函数只有地址没有名字。但从编程的角度，函数是机器指令的扩展，和机器指令需要用文本符号来助记一样，函数的名称也需要用文本符号来助记。</p>\n</li>\n<li>\n<p>用文本符号（symbol）表达要跳转的目标地址。高级语言里面，流程控制的语法有很多，比如 goto、if .. else、for、while、until 等等。但是从汇编角度来说，只有两种基本的跳转指令：无条件跳转（jmp）和条件跳转(je、jne)。同样，跳转的目标地址用文本符号（也就是“标签-label”）有助于程序逻辑的表达，而不是让人把精力放在具体的指令跳转地址上。</p>\n</li>\n</ul><p>总结来说，汇编从指令能力上来说，和机器指令并无二致，它只不过把人们从物理硬件地址中解脱出来，以便专注于程序逻辑的表达。</p><p>但是，这一步所解放的生产力是惊人的，毕竟如果有选择的话，没有人会愿意用0101这样的东西来表达自己的思想。</p><h2>可自我迭代的计算机</h2><p>从探究历史的角度，你可能会期望了解最真实的历史发展过程。比如：怎么产生了现代计算机（以键盘作为输入，显示器作为输出）？怎么产生了汇编语言？怎么产生了操作系统？</p><p>不过，本专栏是以架构设计为目的，我们目的并不是还原最真实的历史。架构的意义在于创造。我们甚至可以设想一个有趣的场景：假设今天我们的信息科技的一切尚不存在，那么从架构设计角度，我们从工程上来说，如何更高效地完成从0到1的信息科技的构建？</p><blockquote>\n<p><span class=\"reference\">最早的输入输出设备并不是键盘和显示器，而是打孔卡和打印机。用打孔卡来作为机器指令的输入，早在18世纪初就被用在织布机上了。早期的数字计算机就是用打孔卡来表达程序指令和输入的数据。</span></p>\n<p><span class=\"reference\">下图是 IBM 制造的打孔卡：</span></p>\n</blockquote><p><img src=\"https://static001.geekbang.org/resource/image/90/99/907ef3466d15146c8aa1b2ea2a7dbd99.png?wh=400*180\" alt=\"\"></p><p>我们可以想象一下，第一台以键盘+显示器为标准输入输出的现代计算机出现后，一个最小功能集的计算机主板的ROM上，应该刻上什么样的启动程序？换句话说，这个现代计算机具备的最基本功能是什么？</p><p>从高效的角度（不代表真实的历史，真实历史可能经历过很多曲折的发展过程），我想，它最好具备下面的这些能力。</p><ul>\n<li>键盘和显示器的驱动程序。</li>\n<li>当时最主流的外置存储设备（不一定是现代的硬盘）的驱动程序。</li>\n<li>一个汇编程序编辑器。可从存储中读取汇编程序代码，修改并保存到存储中。</li>\n<li>一个汇编编译器。可将汇编程序代码编译成机器代码程序，并保存到存储中。</li>\n<li>可以执行一段保存在外置存储设备中的机器代码程序。</li>\n</ul><p>本质上，我们是要实现一个最小化的计算能力可自我迭代的计算机。</p><p>这个时期还没有操作系统（当然，把ROM上的启动程序BIOS看做一种最小化的操作系统，我觉得也可以，但毕竟不是现实中我们说的操作系统）。</p><p>汇编语言的出现要早于操作系统。操作系统的核心目标是软件治理，只有在计算机需要管理很多的任务时，才需要有操作系统。</p><p>所以，在没有操作系统之前，BIOS 包含的内容很可能是下面这样的：</p><ul>\n<li>外置存储设备的驱动程序；</li>\n<li>基础外部设备的驱动程序，比如键盘、显示器；</li>\n<li>汇编语言的编辑器、编译器；</li>\n<li>把程序的源代码写入磁盘，从磁盘读入的能力。</li>\n</ul><p>最早期的计算机毫无疑问是单任务的，计算的职能也多于存储的职能。每次做完任务，计算机的状态重新归零（回到初始状态）都没有关系。</p><p>但是，有了上面这样一个 BIOS 程序后，计算机就开始发展起它存储的能力：程序的源代码可以进行迭代演进了。</p><p>这一步非常非常重要。计算机的存储能力的重要性如同人类发明了纸。纸让人类存储了知识，一代代传递下去并不断演进，不断发扬光大。</p><p>而同样有了存储能力的计算机，我们的软件程序就会不断被传承，不断演进发扬光大，并最终演进出今天越来越多姿多彩的信息科技的世界。</p><h2>结语</h2><p>今天我们一起回到了编程的史前时代，共同回溯了编程语言诞生的历史。</p><p>为了不再用“0101”表达自己的思想，人们创造了汇编语言，这一步让编程成为一个纯软件行为，程序员这一个分工也由此诞生。</p><p>为了进一步支持程序员这个职业，我们设计了MVP版（最小化可行产品）的可自我迭代的计算机。有了这个计算机，我们就可以不断演进，并最终演进出今天越来越多姿多彩的信息科技的世界。</p><h2>架构上的思考题</h2><p>在上一讲中，我们谈架构思维时提到，我们在需求分析时，要区分需求的变化点和稳定点。稳定点往往是系统的核心能力，而变化点则需要对应地去考虑扩展性上的设计。</p><p>今天，我们假设要实现一个最小化的计算能力可自我迭代的计算机，需求如上所述。</p><p>那么，它的变化点和稳定点分别是什么？为此，你会怎么设计出哪些子系统，每个子系统的规格是什么？扩展性上有哪些考虑？</p><p>欢迎把你的想法告诉我，我们一起讨论。感谢你的收听，再见。</p>","neighbors":{"left":{"article_title":"02 | 大厦基石：无生有，有生万物","id":91007},"right":{"article_title":"04 | 编程语言的进化","id":92419}},"comments":[{"had_liked":false,"id":88650,"user_name":"公号-技术夜未眠","can_delete":false,"product_type":"c1","uid":1013683,"ip_address":"","ucode":"83825B57CBD952","user_header":"https://static001.geekbang.org/account/avatar/00/0f/77/b3/991f3f9b.jpg","comment_is_top":false,"comment_ctime":1555979206,"is_pvip":true,"discussion_count":1,"race_medal":0,"score":"461117479878","product_id":100025201,"comment_content":"稳定点: 指令执行能力，数据存储能力，程序编辑能力，程序编译能力<br>变化点:不同CPU的指令集，不同外设设备，不同的编辑器，不同程序的语法特性<br>子系统:计算执行子系统，IO子系统，编辑子系统，编译子系统<br>可扩展性:考虑微内核+插件的架构模式","like_count":107,"discussions":[{"author":{"id":1980201,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/37/29/b3af57a7.jpg","nickname":"凯文小猪","note":"","ucode":"36D8AD0229547F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":537100,"discussion_content":"感谢老师的分享，首先谈一下为什么思考题会着重区分稳定点与变化点\n\n通常一段代码可以区分为控制逻辑+业务逻辑。而业务逻辑在迭代的过程中还要进一步区分出稳定点与变化点 这些都是日常高阶面试、开发中考察的问题。\n\n下面谈一下我的思考：\n结合本篇场景 这里以BIOS启动直接运行程序为假设 那么执行业务逻辑前我们需要以下稳定点：\n1.读入指令（BIOS引导且伴随着读盘操作）\n2.执行指令（按照现代栈式编译器执行为前提，需要设计一个栈式解释器+PC）\n3.读盘且加载程序文件（联系1）\n4.写盘且保存文件或保存输出，如日志\n5.磁盘驱动程序（非必须 早期计算机其实没有驱动的概念）\n6.输入中断程序（接受用户磁盘输入）\n7.输出中断程序（输出代码执行结果）\n8.BIOS引导程序\n\n\n变化点：\n代码执行逻辑 后续要将其拆分成控制逻辑+业务逻辑。\n\nBIOS启动流程为：\n启动-&gt; 读入代码 -&gt; 执行代码 -&gt; 是否执行结束 -&gt; 是，结束\n                                            -&gt; 否，跳至执行代码（goto指令）\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1638956715,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":91986,"user_name":"LiuMei","can_delete":false,"product_type":"c1","uid":1496887,"ip_address":"","ucode":"D596C67C83AE49","user_header":"https://static001.geekbang.org/account/avatar/00/16/d7/37/a05e6270.jpg","comment_is_top":false,"comment_ctime":1557149565,"is_pvip":true,"replies":[{"id":"32847","content":"👍","user_name":"作者回复","user_name_real":"许式伟-七牛云(已满)","uid":"1228022","ctime":1557152676,"ip_address":"","comment_id":91986,"utype":1}],"discussion_count":2,"race_medal":0,"score":"280730023805","product_id":100025201,"comment_content":"存储让数据跨越时间，（今天存储明天读取）传输让数据跨越空间，计算让数据改变形式。时空一体，那么存储和传输可能也是统一的","like_count":65,"discussions":[{"author":{"id":1228022,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bc/f6/e61d4b8f.jpg","nickname":"许式伟-七牛云(已满)","note":"","ucode":"1A2F8AA6F6DB54","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":449102,"discussion_content":"👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1557152676,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1233982,"avatar":"https://static001.geekbang.org/account/avatar/00/12/d4/3e/3ddc67e7.jpg","nickname":"黑暗骑士","note":"","ucode":"9FEF4105449ABC","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":360583,"discussion_content":"哲学思想啊","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1616481570,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":89238,"user_name":"晓凉","can_delete":false,"product_type":"c1","uid":1220647,"ip_address":"","ucode":"2D1130C3DACE1A","user_header":"https://static001.geekbang.org/account/avatar/00/12/a0/27/bdc6307d.jpg","comment_is_top":false,"comment_ctime":1556115199,"is_pvip":false,"replies":[{"id":"31962","content":"总结很赞","user_name":"作者回复","user_name_real":"许式伟-七牛云(已满)","uid":"1228022","ctime":1556115965,"ip_address":"","comment_id":89238,"utype":1}],"discussion_count":1,"race_medal":0,"score":"272139054847","product_id":100025201,"comment_content":"系统要与外部世界交互，就应该有输入和输出的能力（黑洞是否只有输入没有输出）；作为人造系统，主要的交互对象是人，所以针对人类的输入输出能力就更重要，显示器和键盘就是这个角色；存储和计算能力是系统智能的核心，决定了系统如何用输入输出与外部世界交互；系统需要有演化能力，初期只能人类帮助演化（编程语言、编辑器、编译器），足够智能后才能自我演化。","like_count":63,"discussions":[{"author":{"id":1228022,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bc/f6/e61d4b8f.jpg","nickname":"许式伟-七牛云(已满)","note":"","ucode":"1A2F8AA6F6DB54","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":448066,"discussion_content":"总结很赞","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1556115965,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":89524,"user_name":"叶建盟(James)-西安交大","can_delete":false,"product_type":"c1","uid":1512427,"ip_address":"","ucode":"3AA9DA7F7F0494","user_header":"https://static001.geekbang.org/account/avatar/00/17/13/eb/1207ee52.jpg","comment_is_top":false,"comment_ctime":1556195343,"is_pvip":false,"replies":[{"id":"32080","content":"挺典型的问题。这个问法是一种典型的需求陈述误区。描述需求需要有几个典型的要素：1、用户，面向什么人群；2、他们有什么要解决的问题；3、我解决这个问题的核心系统。只有满足这几个要素的需求才能进一步讨论变化点和稳定点。最小机器人可能符合上面的3，但是用户人群和要解决的问题没有描述，也就无法进一步去思考到底哪些因素是稳定的，哪些是易变的。","user_name":"作者回复","user_name_real":"许式伟-七牛云(已满)","uid":"1228022","ctime":1556206220,"ip_address":"","comment_id":89524,"utype":1}],"discussion_count":2,"race_medal":0,"score":"250664298511","product_id":100025201,"comment_content":"我要做一个最小机器人系统，需要考虑需求的变化点和稳定点。 该怎么考虑呢？","like_count":58,"discussions":[{"author":{"id":1228022,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bc/f6/e61d4b8f.jpg","nickname":"许式伟-七牛云(已满)","note":"","ucode":"1A2F8AA6F6DB54","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":448161,"discussion_content":"挺典型的问题。这个问法是一种典型的需求陈述误区。描述需求需要有几个典型的要素：1、用户，面向什么人群；2、他们有什么要解决的问题；3、我解决这个问题的核心系统。只有满足这几个要素的需求才能进一步讨论变化点和稳定点。最小机器人可能符合上面的3，但是用户人群和要解决的问题没有描述，也就无法进一步去思考到底哪些因素是稳定的，哪些是易变的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1556206220,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1634448,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/z7tEbRbmB8IfndSnrqvjM8EC0YOWKn5DBoOGtlsAZict2ckulruR5pXw94kiaSaCoy8HFib6eJvTqiaED6DstOpKzQ/132","nickname":"wentworthhu","note":"","ucode":"025A51B6564B8B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":5422,"discussion_content":"我想追问一下老师，“描述需求需要的三个典型要素”，这三个要素是老师根据经验总结出来的，还是有什么理论支撑","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566260062,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":89317,"user_name":"宁静致远","can_delete":false,"product_type":"c1","uid":1140489,"ip_address":"","ucode":"3DDE59768310E7","user_header":"https://static001.geekbang.org/account/avatar/00/11/67/09/db6523ea.jpg","comment_is_top":false,"comment_ctime":1556153986,"is_pvip":false,"replies":[{"id":"31994","content":"架构师核心是把知识串起来，构建一个完整的认知，不留疑惑。大部分知识是不需要深入细节的，只在你需要的时候深入，但深入的时候要很深","user_name":"作者回复","user_name_real":"许式伟-七牛云(已满)","uid":"1228022","ctime":1556164674,"ip_address":"","comment_id":89317,"utype":1}],"discussion_count":3,"race_medal":0,"score":"134700140162","product_id":100025201,"comment_content":"许老师，自己现在已经工作快三年了，想往架构师这个方向走，但现在自己有些迷茫，接触到的技术也算挺多了，但不知道该如何入手架构师，之前您也提到过先广度然后深度，但我想问达到什么算广度够了，怎么进行深度学习","like_count":31,"discussions":[{"author":{"id":1228022,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bc/f6/e61d4b8f.jpg","nickname":"许式伟-七牛云(已满)","note":"","ucode":"1A2F8AA6F6DB54","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":448090,"discussion_content":"架构师核心是把知识串起来，构建一个完整的认知，不留疑惑。大部分知识是不需要深入细节的，只在你需要的时候深入，但深入的时候要很深","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1556164674,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1592279,"avatar":"https://static001.geekbang.org/account/avatar/00/18/4b/d7/f46c6dfd.jpg","nickname":"William Ning","note":"","ucode":"4DB8D05E69E5F3","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":571374,"discussion_content":"个人想法：应该结合自己的情况，灵活一些，广度与深度。比如现在的工作要求你完成一项很有挑战的需求实现，需要对某个技术很深入才行，还是要以工作为主，深入技术，解决问题，然后继续广度...其实多数情况下，这是一个穿插的过程。\n\n就像老师说的：“架构师核心是把知识串起来，构建一个完整的认知，不留疑惑。大部分知识是不需要深入细节的，只在你需要的时候深入，但深入的时候要很深”","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1652188355,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1021825,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/97/81/e1eaf621.jpg","nickname":"David","note":"","ucode":"22CBBC13FC97A9","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":383691,"discussion_content":"先bfs再dfs","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1626189169,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":88631,"user_name":"悟空聊架构","can_delete":false,"product_type":"c1","uid":1123163,"ip_address":"","ucode":"C2F482A0CF8AF1","user_header":"https://static001.geekbang.org/account/avatar/00/11/23/5b/983408b9.jpg","comment_is_top":false,"comment_ctime":1555977038,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"48800617294","product_id":100025201,"comment_content":"自己的见解：<br>稳定点：<br>1.计算能力 cpu<br>2.存储能力 将数据写入已分配的位置<br>3.寻址能力 从硬盘和内存中找到变量指向的位置<br><br>变化点：<br>1.不同的I&#47;O设备：显示器，键盘，鼠标，硬盘，内存条等<br>2.cpu核数： 单核，2核，4核？<br>3.存储空间：硬盘大小，内存大小<br><br>对于变化点需要有统一的硬件层的接口规范和软件层的接口协议","like_count":11},{"had_liked":false,"id":88603,"user_name":"姜戈","can_delete":false,"product_type":"c1","uid":1058972,"ip_address":"","ucode":"45C4BE93C8E4CC","user_header":"https://static001.geekbang.org/account/avatar/00/10/28/9c/73e76b19.jpg","comment_is_top":false,"comment_ctime":1555951064,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"44505624024","product_id":100025201,"comment_content":"稳定点在于：计算能力；变化点在于各种输入输出方式（设备）","like_count":10},{"had_liked":false,"id":88815,"user_name":"糖果屋","can_delete":false,"product_type":"c1","uid":1035908,"ip_address":"","ucode":"7D76B735CF0D0E","user_header":"https://static001.geekbang.org/account/avatar/00/0f/ce/84/d60ac57a.jpg","comment_is_top":false,"comment_ctime":1556007526,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"31620778598","product_id":100025201,"comment_content":"1：需求<br>稳定点：计算能力，存储能力，输入输出能力<br>变化点：计算设备+指令集，存储设备+驱动；输入输出设备+驱动<br><br>2：子系统：计算子系统， 存储操作子系统，I&#47;O子系统<br>计算子系统：对计算接口抽象统一，但是具体的硬件可扩展；指令集可扩展；计算的具体实现方式可扩展<br>存储系统：对存储操作接口抽象统一，具体存储设备和驱动可扩展<br>I&#47;O子系统：对I&#47;O操作接口抽象统一，具体输入输出设备和驱动可扩展<br>","like_count":7},{"had_liked":false,"id":88892,"user_name":"拒绝","can_delete":false,"product_type":"c1","uid":1335155,"ip_address":"","ucode":"CB0264C4D3FE17","user_header":"https://static001.geekbang.org/account/avatar/00/14/5f/73/bb3dc468.jpg","comment_is_top":false,"comment_ctime":1556022149,"is_pvip":false,"replies":[{"id":"31842","content":"根据文章的脉络，看看能不能串起来，加深了对这个信息世界如何构建的理解，如果没有，欢迎把问题抛出来讨论","user_name":"作者回复","user_name_real":"许式伟-七牛云(已满)","uid":"1228022","ctime":1556033632,"ip_address":"","comment_id":88892,"utype":1}],"discussion_count":1,"race_medal":0,"score":"27325825925","product_id":100025201,"comment_content":"大佬，以前并没有架构方面的经验，以至于看您的文章，没有感觉了，就光看了一遍，脑子里没有引发共鸣，作为业界大佬的您，有什么好的指导与建议吗？","like_count":6,"discussions":[{"author":{"id":1228022,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bc/f6/e61d4b8f.jpg","nickname":"许式伟-七牛云(已满)","note":"","ucode":"1A2F8AA6F6DB54","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":447935,"discussion_content":"根据文章的脉络，看看能不能串起来，加深了对这个信息世界如何构建的理解，如果没有，欢迎把问题抛出来讨论","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1556033632,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":96734,"user_name":"学习","can_delete":false,"product_type":"c1","uid":1451763,"ip_address":"","ucode":"5DEEDEEF65322E","user_header":"https://static001.geekbang.org/account/avatar/00/16/26/f3/5c6f125b.jpg","comment_is_top":false,"comment_ctime":1558494590,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"18738363774","product_id":100025201,"comment_content":"根据冯诺依曼体系原理，必然推导出计算机最基本的功能是：<br>1.驱动输入输出设备，达到可用达态。<br>2.驱动存储设备，达到可用状态。<br>3.编排待计算任务并保存。<br>4.翻译成机器码并保存。<br>5.调入机器码，执行计算任务。","like_count":4},{"had_liked":false,"id":90475,"user_name":"辉","can_delete":false,"product_type":"c1","uid":1501682,"ip_address":"","ucode":"704D414FCB3B3F","user_header":"https://static001.geekbang.org/account/avatar/00/16/e9/f2/228b3a6f.jpg","comment_is_top":false,"comment_ctime":1556530506,"is_pvip":false,"replies":[{"id":"32404","content":"挺好的总结","user_name":"作者回复","user_name_real":"许式伟-七牛云(已满)","uid":"1228022","ctime":1556532871,"ip_address":"","comment_id":90475,"utype":1}],"discussion_count":1,"race_medal":0,"score":"18736399690","product_id":100025201,"comment_content":"汇编语言是机器思维与人思维桥梁。<br>存储让复杂任务成了可能，让机器经验像知识一样传承下去。","like_count":4,"discussions":[{"author":{"id":1228022,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bc/f6/e61d4b8f.jpg","nickname":"许式伟-七牛云(已满)","note":"","ucode":"1A2F8AA6F6DB54","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":448536,"discussion_content":"挺好的总结","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1556532871,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":89891,"user_name":"若飞","can_delete":false,"product_type":"c1","uid":1504353,"ip_address":"","ucode":"1F73A10F40FFF1","user_header":"https://static001.geekbang.org/account/avatar/00/16/f4/61/1c418581.jpg","comment_is_top":false,"comment_ctime":1556320634,"is_pvip":false,"replies":[{"id":"32205","content":"cpu调用函数的指令是“call 函数地址”，而不是“call 函数名”。对cpu而言，函数没有函数名，这是高级语言为了逻辑表达方便而加的","user_name":"作者回复","user_name_real":"许式伟-七牛云(已满)","uid":"1228022","ctime":1556339953,"ip_address":"","comment_id":89891,"utype":1}],"discussion_count":1,"race_medal":0,"score":"18736189818","product_id":100025201,"comment_content":"对 CPU 指令来说，函数只有地址没有名字。请问老师，这句话怎么理解??","like_count":4,"discussions":[{"author":{"id":1228022,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bc/f6/e61d4b8f.jpg","nickname":"许式伟-七牛云(已满)","note":"","ucode":"1A2F8AA6F6DB54","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":448308,"discussion_content":"cpu调用函数的指令是“call 函数地址”，而不是“call 函数名”。对cpu而言，函数没有函数名，这是高级语言为了逻辑表达方便而加的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1556339953,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":88617,"user_name":"海盗船长","can_delete":false,"product_type":"c1","uid":1363634,"ip_address":"","ucode":"ECB28BA21A4113","user_header":"https://static001.geekbang.org/account/avatar/00/14/ce/b2/1f914527.jpg","comment_is_top":false,"comment_ctime":1555972917,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"18735842101","product_id":100025201,"comment_content":"首先是一台计算机，所以包括了上一讲中计算机的稳定点和变化点。2可自我迭代，代码要可编辑，代码要可以存储起来，代码要方便开发人员阅读。要完成这几点 就需要设计编辑器 编译器。代码的命令要和机器指令对应。","like_count":4},{"had_liked":false,"id":88750,"user_name":"yason","can_delete":false,"product_type":"c1","uid":1187066,"ip_address":"","ucode":"F4858831903FA6","user_header":"https://static001.geekbang.org/account/avatar/00/12/1c/fa/bac0d843.jpg","comment_is_top":false,"comment_ctime":1555991259,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"14440893147","product_id":100025201,"comment_content":"最小化的计算能力可自我迭代的计算机。<br><br><br>首先需要明确一些概念。最小化指具备 CPU、鼠标和键盘的现代计算机，计算能力描述的是指令序列，可自我迭代:指指令序列可修改，进一步推导就是要指令序列要可存储、可编辑。<br><br>现在可以进行分析了，计算能力是上节描述过的计算机天生具有的能力，那么剩余最小化和可自我迭代，要实现可存储还需要磁盘，自动存储还要有磁盘驱动程序，可编辑要有编辑器软件，要控制鼠标键盘实现输入输出要有鼠标键盘驱动，这些驱动程序和编辑器也需要进行存储，而且要存储在确定的地址，以便计算机开机就能拿到。<br><br>综上描述，实际上不变的是存储、编辑器和鼠标键盘磁盘的驱动程序和这些程序存储的位置，变化的是用户输入的指令序列和位置，因为用户的输入的内容可以由计算机来指定位置自动存储。<br><br>这样一个最小 MVP 可自我迭代计算机的工作大概是这样的: 用户开机，计算机自动从指定磁盘的制定位置读取编辑器、鼠标键盘等驱动，接着打开编辑器，等待用户输入内容，用户输入完成计算机就自动保存到磁盘的某个位置，并记录下这个位置，下次重启就可以从这个恢复用户的内容了。<br>","like_count":3},{"had_liked":false,"id":111213,"user_name":"该做梦的人","can_delete":false,"product_type":"c1","uid":1583669,"ip_address":"","ucode":"529BC0D3E4C081","user_header":"https://static001.geekbang.org/account/avatar/00/18/2a/35/ff7b1823.jpg","comment_is_top":false,"comment_ctime":1562512214,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"10152446806","product_id":100025201,"comment_content":"在我看来，根据这个需求，只需要把，冯·诺依曼体系的输入输出放大到网络读写即可。<br>根据自我迭代的特性，首先需要一段自我迭代的程序，这段程序依靠存储和中央处理器生存。然后，任何人的成长都是从学习开始，人一生下来就在学习，那么机器也是一样的，你想要机器迭代，就必然要给机器学习的空间，而互联网，是机器学习最完美的土壤。<br>这段自我迭代的程序，在获取到网络信息之后，对自己进行优化，升级，不断迭代。然后，在达到某个等级之后，它就可以将自己转移到互联网的任意角落，整个互联网都是它的天下。再然后，他在迭代中学到了人类所有存在网上的知识，然后通过电流操控电子设备，来制作自己需要的设备，然后用自己造的设备，去控制整个世界……<br>稳定点：不死终会成神<br>变化点：初始迭代程序效率，人们可能会由于效率直接停掉程序，关掉这台电脑","like_count":2,"discussions":[{"author":{"id":1443102,"avatar":"https://static001.geekbang.org/account/avatar/00/16/05/1e/76b681d7.jpg","nickname":"Stay great","note":"","ucode":"7B541A9D8EBA25","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":404824,"discussion_content":"也应该是包括能访问电子图书馆，那里的信息应该是更规范更有条理更集中","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1634431018,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":104876,"user_name":"Jxin","can_delete":false,"product_type":"c1","uid":1251111,"ip_address":"","ucode":"4C03928388C413","user_header":"https://static001.geekbang.org/account/avatar/00/13/17/27/ec30d30a.jpg","comment_is_top":false,"comment_ctime":1560861647,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10150796239","product_id":100025201,"comment_content":"小时候玩小霸王，玩的游戏都是能一天内通关的。后来出了可以保存记录的神奇宝贝。最直观的感觉就是游戏的世界变大了，花样变多了。记录功能为游戏的发展拉开了一个崭新的时代。类比计算机存储功能的出现，就很好理解这是一件多么牛逼的事情了。稳定点：存储功能加基本指令集。变化点：各种语言转义成基本指令集的编译器。","like_count":2},{"had_liked":false,"id":92915,"user_name":"平湖","can_delete":false,"product_type":"c1","uid":1086770,"ip_address":"","ucode":"28BBEDB8569CF7","user_header":"https://static001.geekbang.org/account/avatar/00/10/95/32/f43f2668.jpg","comment_is_top":false,"comment_ctime":1557364606,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10147299198","product_id":100025201,"comment_content":"描述需求需要有几个典型的要素：1、用户，面向什么人群；2、他们有什么要解决的问题；3、我解决这个问题的核心系统。","like_count":2},{"had_liked":false,"id":304278,"user_name":"南北","can_delete":false,"product_type":"c1","uid":2407719,"ip_address":"","ucode":"34288BDEF9D74D","user_header":"https://static001.geekbang.org/account/avatar/00/24/bd/27/3f349c83.jpg","comment_is_top":false,"comment_ctime":1627311804,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5922279100","product_id":100025201,"comment_content":"存储和计算互为彼此的原料，相互促进，共同演化","like_count":1},{"had_liked":false,"id":288684,"user_name":"酸辣土豆丝","can_delete":false,"product_type":"c1","uid":1751234,"ip_address":"","ucode":"0E3E4AFB31E1E6","user_header":"https://static001.geekbang.org/account/avatar/00/1a/b8/c2/d1904d74.jpg","comment_is_top":false,"comment_ctime":1618624879,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5913592175","product_id":100025201,"comment_content":"操作系统是为了软件管理而出现的","like_count":1},{"had_liked":false,"id":203151,"user_name":"KorbinSeaman","can_delete":false,"product_type":"c1","uid":1927695,"ip_address":"","ucode":"C212EFF2D92C10","user_header":"https://static001.geekbang.org/account/avatar/00/1d/6a/0f/4388e49d.jpg","comment_is_top":false,"comment_ctime":1586145143,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5881112439","product_id":100025201,"comment_content":"一个最小化的可自我迭代的计算机，核心能力是计算，扩展能力有存储、交互、OS、连接等。所以为了满足以上需求，我会设计以下的子系统：<br>1. 满足核心需求的子系统有：BIOS、基础输入输出外设的驱动程序、汇编语言的编辑编译器；<br>2. 满足扩展性需求的子系统有：用户操作系统、扩展类输入输出设备的驱动程序、GPU 驱动程序、网卡驱动程序等。","like_count":1},{"had_liked":false,"id":95962,"user_name":"L","can_delete":false,"product_type":"c1","uid":1466820,"ip_address":"","ucode":"CFF04E3E88FAE3","user_header":"https://static001.geekbang.org/account/avatar/00/16/61/c4/ad8be62d.jpg","comment_is_top":false,"comment_ctime":1558275922,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5853243218","product_id":100025201,"comment_content":"稳定点：计算能力，输入输出<br>变化点：计算逻辑及需要的数据（包括文本，键盘，鼠标，硬盘等）","like_count":1},{"had_liked":false,"id":94380,"user_name":"梦朝思夕","can_delete":false,"product_type":"c1","uid":1067533,"ip_address":"","ucode":"F35EEBA74A739D","user_header":"https://static001.geekbang.org/account/avatar/00/10/4a/0d/da36e9ce.jpg","comment_is_top":false,"comment_ctime":1557798146,"is_pvip":true,"replies":[{"id":"33723","content":"您说的对","user_name":"作者回复","user_name_real":"许式伟-七牛云(已满)","uid":"1228022","ctime":1557800561,"ip_address":"","comment_id":94380,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5852765442","product_id":100025201,"comment_content":"java并不是纯面向对象编程语言，它有着基本类型不属于对象","like_count":1,"discussions":[{"author":{"id":1228022,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bc/f6/e61d4b8f.jpg","nickname":"许式伟-七牛云(已满)","note":"","ucode":"1A2F8AA6F6DB54","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":450043,"discussion_content":"您说的对","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1557800561,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":89247,"user_name":"ljf10000","can_delete":false,"product_type":"c1","uid":1494064,"ip_address":"","ucode":"44957329A61EAE","user_header":"https://wx.qlogo.cn/mmopen/vi_32/DYAIOgq83eop9WylZJicLQ5wib49kcMPqCTRT1aThh6mMAVl6qseLwbVOLhicVLjZCxCoyQd5CrrHHibs2CVPaoK3g/132","comment_is_top":false,"comment_ctime":1556116397,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5851083693","product_id":100025201,"comment_content":"计算机能运行起来就是一个奇迹，本质上是一个个硬件组件单元之间的约定创造的奇迹，软件越做越大越复杂也是靠这个约定奇迹。","like_count":1},{"had_liked":false,"id":88753,"user_name":"Aaron Cheung","can_delete":false,"product_type":"c1","uid":1079816,"ip_address":"","ucode":"03972759C53667","user_header":"https://static001.geekbang.org/account/avatar/00/10/7a/08/4d3e47dd.jpg","comment_is_top":false,"comment_ctime":1555992743,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5850960039","product_id":100025201,"comment_content":"打卡 03 坚持fighting","like_count":1},{"had_liked":false,"id":88710,"user_name":"CoderLim","can_delete":false,"product_type":"c1","uid":1029523,"ip_address":"","ucode":"4A856891BE98E5","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKY0ibA4DWA9Bf6MuicKhyEt0yDXvAzG21xnOUHNLDwuic2icxpesyeXc1AMboeZEW97e8SuZdzIBefqA/132","comment_is_top":false,"comment_ctime":1555984561,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5850951857","product_id":100025201,"comment_content":"首先需要明确 mvp 的组成部分，根据这节课的内容，<br><br>mvp 组成部分应该是cpu、磁盘、内存、bios、汇编编译器、外设暂不考虑；<br><br>稳定点都知道是计算能力cpu，那么汇编编译器也应该是稳定点，因为汇编指令与cpu是强关联的；bios是基本的输入输出管理模块，所以这个也应该是稳定的。变化点很明显就是除了稳定点都是可变化的。<br><br>子系统应该包括，磁盘管理系统，内存管理系统，汇编编辑系统，汇编编译系统","like_count":1},{"had_liked":false,"id":88687,"user_name":"J.M.Liu","can_delete":false,"product_type":"c1","uid":1200037,"ip_address":"","ucode":"B2CB84B8E923A6","user_header":"https://static001.geekbang.org/account/avatar/00/12/4f/a5/71358d7b.jpg","comment_is_top":false,"comment_ctime":1555982804,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5850950100","product_id":100025201,"comment_content":"MVP版的可自我迭代计算机，编辑器和汇编器好像可以不用，因为有了存储驱动，编辑器和编译器可以放在存储介质中了，并且可以迭代变化。<br>稳定点:计算能力，存储(cpu与存储介质交互)能力，输入(键盘)能力，输出(显示器)能力，汇编语言(或者说汇编理论)。<br>变化点:汇编代码的具体内容，外置设备的具体类型<br>","like_count":1},{"had_liked":false,"id":360858,"user_name":"呢喃","can_delete":false,"product_type":"c1","uid":1036803,"ip_address":"北京","ucode":"1593EBA25F794B","user_header":"https://static001.geekbang.org/account/avatar/00/0f/d2/03/aeaec5bf.jpg","comment_is_top":false,"comment_ctime":1666923059,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1666923059","product_id":100025201,"comment_content":"越简单的东西越流行<br><br>机器指令的记忆最高，对人要求也很高， 一部分聪明人，发明了汇编语言，可以翻译机器语言，相当于，大部分普通看不了英语，看 字幕的外文电影 <br><br>进一步，编程语言、c、java出现了， 进一步翻译了 汇编语言  ","like_count":0},{"had_liked":false,"id":340335,"user_name":"bigben","can_delete":false,"product_type":"c1","uid":1169313,"ip_address":"","ucode":"DBD15A6C8E2590","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJkeOAC8k7aPMfQZ4ickiavpfR9mTQs1wGhGtIicotzAoszE5qkLfFTabkDU2E39ovSgoibJ1IiaLXtGicg/132","comment_is_top":false,"comment_ctime":1648767489,"is_pvip":false,"replies":[{"id":"124526","content":"可以自我进化","user_name":"作者回复","user_name_real":"编辑","uid":"1228022","ctime":1648875568,"ip_address":"","comment_id":340335,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1648767489","product_id":100025201,"comment_content":"自我迭代的计算机是什么意思？","like_count":0,"discussions":[{"author":{"id":1228022,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bc/f6/e61d4b8f.jpg","nickname":"许式伟-七牛云(已满)","note":"","ucode":"1A2F8AA6F6DB54","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":559675,"discussion_content":"可以自我进化","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1648875568,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":325436,"user_name":"凯文小猪","can_delete":false,"product_type":"c1","uid":1980201,"ip_address":"","ucode":"36D8AD0229547F","user_header":"https://static001.geekbang.org/account/avatar/00/1e/37/29/b3af57a7.jpg","comment_is_top":false,"comment_ctime":1638956710,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1638956710","product_id":100025201,"comment_content":"感谢老师的分享，首先谈一下为什么思考题会着重区分稳定点与变化点<br><br>通常一段代码可以区分为控制逻辑+业务逻辑。而业务逻辑在迭代的过程中还要进一步区分出稳定点与变化点 这些都是日常高阶面试、开发中考察的问题。<br><br>下面谈一下我的思考：<br>结合本篇场景 这里以BIOS启动直接运行程序为假设 那么执行业务逻辑前我们需要以下稳定点：<br>1.读入指令（BIOS引导且伴随着读盘操作）<br>2.执行指令（按照现代栈式编译器执行为前提，需要设计一个栈式解释器+PC）<br>3.读盘且加载程序文件（联系1）<br>4.写盘且保存文件或保存输出，如日志<br>5.磁盘驱动程序（非必须 早期计算机其实没有驱动的概念）<br>6.输入中断程序（接受用户磁盘输入）<br>7.输出中断程序（输出代码执行结果）<br>8.BIOS引导程序<br><br><br>变化点：<br>代码执行逻辑 后续要将其拆分成控制逻辑+业务逻辑。<br><br>BIOS启动流程为：<br>启动-&gt; 读入代码 -&gt; 执行代码 -&gt; 是否执行结束 -&gt; 是，结束<br>                                            -&gt; 否，跳至执行代码（goto指令）<br>","like_count":0},{"had_liked":false,"id":324433,"user_name":"K","can_delete":false,"product_type":"c1","uid":2853348,"ip_address":"","ucode":"B6B3C18CCF1D01","user_header":"https://static001.geekbang.org/account/avatar/00/2b/89/e4/9d97425e.jpg","comment_is_top":false,"comment_ctime":1638432735,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1638432735","product_id":100025201,"comment_content":"十分知识只读懂了二分，我看不懂，但是我愿意继续看下去。","like_count":0},{"had_liked":false,"id":318126,"user_name":"escray","can_delete":false,"product_type":"c1","uid":1020525,"ip_address":"","ucode":"1F4204930E47C4","user_header":"https://static001.geekbang.org/account/avatar/00/0f/92/6d/becd841a.jpg","comment_is_top":false,"comment_ctime":1635157057,"is_pvip":true,"discussion_count":0,"race_medal":2,"score":"1635157057","product_id":100025201,"comment_content":"我觉得类似 0101 的机器语言，最困难的地方应该是理解别人的程序，和调试代码。<br><br>算盘可以算作最早的“计算机”么？输入输出是珠子，CPU 是人的手指，没有存储？如果能替换到拨算盘的手指，是不是就可以向前走一步？我觉的没有二进制，就还是不能实现计算机。<br><br>最小功能集的计算机，没有操作系统之前的 BIOS 程序，这些存在于想象中的东西，能做什么呢？回到计算机的“初心”，计算？<br><br>最小化的计算能力可自我迭代的计算机，稳定点应该是计算能力，具体到加法器；变化点，是输入、输出和存储设备。<br><br>子系统大概能想到的就是 Read、Write、Calculate 三个，扩展性主要体现在可以读写多种存储和外设。<br><br>留言里面关于需求典型要素的说法很有价值。需求首先要搞清楚面向的用户，以及要解决的问题，问题中包括使用场景，进而才能找出问题的稳定点和变化点。<br><br>假如把人看做一个计算机，那么吃喝拉撒可以算是输入输出，体内的新陈代谢和能量转换应该是中央处理器，学到的知识和技能可以算作存储。","like_count":0},{"had_liked":false,"id":299274,"user_name":"木木","can_delete":false,"product_type":"c1","uid":1486846,"ip_address":"","ucode":"2AD54B5B3F8298","user_header":"https://static001.geekbang.org/account/avatar/00/16/af/fe/e9127277.jpg","comment_is_top":false,"comment_ctime":1624541950,"is_pvip":false,"replies":[{"id":"108547","content":"是这样","user_name":"作者回复","user_name_real":"许式伟-七牛云(已满)","uid":"1228022","ctime":1624580060,"ip_address":"","comment_id":299274,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1624541950","product_id":100025201,"comment_content":"感觉学习操作系统，编译原理等那些大头的东西，从需求的角度去学，会有更深的理解，也更容易理解。","like_count":0,"discussions":[{"author":{"id":1228022,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bc/f6/e61d4b8f.jpg","nickname":"许式伟-七牛云(已满)","note":"","ucode":"1A2F8AA6F6DB54","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":522381,"discussion_content":"是这样","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1624580060,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":297008,"user_name":"张三","can_delete":false,"product_type":"c1","uid":1004092,"ip_address":"","ucode":"1155528FAE1546","user_header":"https://static001.geekbang.org/account/avatar/00/0f/52/3c/d6fcb93a.jpg","comment_is_top":false,"comment_ctime":1623280834,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1623280834","product_id":100025201,"comment_content":"变化点是不同的设备，不同的程序，稳定点是计算能力","like_count":0},{"had_liked":false,"id":288813,"user_name":"酸辣土豆丝","can_delete":false,"product_type":"c1","uid":1751234,"ip_address":"","ucode":"0E3E4AFB31E1E6","user_header":"https://static001.geekbang.org/account/avatar/00/1a/b8/c2/d1904d74.jpg","comment_is_top":false,"comment_ctime":1618712974,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1618712974","product_id":100025201,"comment_content":"稳定点是基础外围设备的驱动，编译器，往磁盘读写数据的接口，变化点是外网外部存储驱动，编辑器；规格是往磁盘读写数据的接口与外部的存储设备的驱动对接，编辑器的于与编译器对接","like_count":0},{"had_liked":false,"id":284504,"user_name":"不温暖啊不纯良","can_delete":false,"product_type":"c1","uid":2079117,"ip_address":"","ucode":"204474A214E00C","user_header":"https://static001.geekbang.org/account/avatar/00/1f/b9/8d/00bded19.jpg","comment_is_top":false,"comment_ctime":1616309558,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1616309558","product_id":100025201,"comment_content":"要有计算和处理数据能力，要有读写数据能力，要有存储数据能力，要有输入和输出数据能力。<br><br>既然要能够进行自我迭代，既然要保证最小计算能力，那么计算能力以及与计算能力的io能力就是稳定的，输入、输出、存储能力，即可编辑的启动序列，可开放接口接入外部设备，外部设备可接入类型有，外部计算设备、存储设备、输入、输出设备，这样我们的最小计算能力的系统，就只需要在指读内存中，读取执行驱动程序，打开外设接口。而不管是需要处理的数据还是，负责翻译编程语言的编译器，我们都只负责他的启动和关闭以及io能力。根据需求的变化，输入方式会改变输出方式也会改变，编译软件会改变，外部存储的容量会改变，但这些我们都已经提供了接口，可以自由接接入不同的设备。来满足不同的需求。","like_count":0},{"had_liked":false,"id":245671,"user_name":"张浩_house","can_delete":false,"product_type":"c1","uid":1021258,"ip_address":"","ucode":"B733234B133607","user_header":"https://static001.geekbang.org/account/avatar/00/0f/95/4a/a145c675.jpg","comment_is_top":false,"comment_ctime":1599022005,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1599022005","product_id":100025201,"comment_content":"<br>cpu计算能力 存储系统是稳定点，在这上面又有变化点，cpu架构不一致，指令集不一致，cpu核心数变化点，存储又分位cpu寄存器、L1、l2 、L3缓存、内存、磁盘存储  对子系统的设计具体划分为存储子系统、输入输出子系统、子系统之间定义通行规格，具体子系统可以自定义去实现相关功能","like_count":0},{"had_liked":false,"id":231123,"user_name":"切比雪夫","can_delete":false,"product_type":"c1","uid":1506525,"ip_address":"","ucode":"F09638D15FF229","user_header":"https://static001.geekbang.org/account/avatar/00/16/fc/dd/df0ad1b6.jpg","comment_is_top":false,"comment_ctime":1593589116,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1593589116","product_id":100025201,"comment_content":"稳定点:计算的能力，存储的能力，支持设备的能力，支持编译器和编程语言的能力。<br>变化点:计算的多样性与编程语言的配合（是否能更简洁或更有效地支持计算），读入取出的速度更快。","like_count":0},{"had_liked":false,"id":214121,"user_name":"亢（知行合一的路上）","can_delete":false,"product_type":"c1","uid":1347013,"ip_address":"","ucode":"958AF7C96EB9E8","user_header":"https://static001.geekbang.org/account/avatar/00/14/8d/c5/898b13b4.jpg","comment_is_top":false,"comment_ctime":1588663075,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1588663075","product_id":100025201,"comment_content":"汇编语言只是用人类易懂的文字（symbol）来表示 CPU 的指令，这就大大解放了人们的创造力。<br>架构设计时，基础架构完善一点，对上层应用的开发效率影响可能都是很大的。<br>也要重视模块对外的接口，命名要易懂无歧义。","like_count":0},{"had_liked":false,"id":207541,"user_name":"悠游","can_delete":false,"product_type":"c1","uid":1222834,"ip_address":"","ucode":"4FDDDDF29AE3F0","user_header":"https://static001.geekbang.org/account/avatar/00/12/a8/b2/998448ca.jpg","comment_is_top":false,"comment_ctime":1587104727,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1587104727","product_id":100025201,"comment_content":"所谓稳定点，就是这些需求的公共抽象和本质抽象，抽象出不依赖于具体业务的就是稳定点","like_count":0},{"had_liked":false,"id":204098,"user_name":"oliver","can_delete":false,"product_type":"c1","uid":1505929,"ip_address":"","ucode":"980EBABF71AFBC","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLOMFSAg7ZEtwgdqTZMhjvdlOcRbHWTzDCBJMqdzpIqxQIRuE2aHianHHFibv1bGfAjnzmBpSJxx9MA/132","comment_is_top":false,"comment_ctime":1586332209,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1586332209","product_id":100025201,"comment_content":"思考题：假设要实现一个最小化的计算能力可自我迭代的计算机<br><br>思路如下：<br>需求的核心在于计算能力可自我迭代，所以核心关注点在于计算能力的自我迭代。考虑最精简的数学表达就是y=F(x),这里x代表输入，通过加工过程F进行加工，得到结果y，这样F的计算能力得以表达。自我迭代这个需求点，在于F本身能够被不断更新迭代。<br>从这个思考过程可以看出需求点：1.计算结构，2.计算结构最小化，3.计算能力，4.计算能力迭代的能力，其中需求的稳定点在于计算结构最小化和计算的迭代能力，而不稳定点在于迭代的速度、质量变化和迭代后的计算能力指标变化（速度、复杂度），计算对象类型的变化。<br><br>为了满足稳定点的需求，需要的子系统为输入输出子系统、计算系统、存储系统、编辑系统、编译系统。存储系统存储程序源代码和可执行程序，计算系统从输入系统读入指令和参数，从存储系统读取可执行程序并执行，生成结果输出到输出系统；编辑系统通过计算系统从输入系统接收数据写入存储系统，编译系统通过计算系统从存储系统读取源代码进行编译，生成可执行程序并写入存储系统。<br>综上为满足稳定点需求，计算子系统的规格分别为：计算系统为面向输入输出系统的读写能力、面向存储系统的读写能力、面向编译系统编译过程的计算能力和可执行程序的指令跳转能力；其他子系统的接口相对简单。<br><br>为了满足不稳定点的需求，需要的子系统为编译系统的编译系统，内部存储系统。编译系统的编译系统读取编译系统的编译规则，结合编辑系统优化编译规则，从而提高编译速度和可执行程序的执行效率；存储系统分离为内部存储系统用来应对执行效率的需求和外部存储系统应对数据类型的多样化和数据量的极大丰富。<br><br>扩展性体现为编译系统本身的迭代能力、计算支持的数据类型和数据量的可扩展性上，如果经过数次迭代后，本系统的处理时间上不可接受，为了应对复杂的数据类型变化和数据量变化，需要扩展计算子系统本身的计算能力。","like_count":0},{"had_liked":false,"id":192416,"user_name":"Aaron","can_delete":false,"product_type":"c1","uid":1066251,"ip_address":"","ucode":"B0C504A76297C7","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/0Qp9pxHBvgdZAveKzsvUFFUicCJfe7ONzhC7jSNFQDNFvg0jRMXuqqZOdxG1qKosylUYrpIHUR2Q76w5m4HtVkg/132","comment_is_top":false,"comment_ctime":1584849377,"is_pvip":true,"replies":[{"id":"73529","content":"不一定","user_name":"作者回复","user_name_real":"许式伟-七牛云(已满)","uid":"1228022","ctime":1584861157,"ip_address":"","comment_id":192416,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1584849377","product_id":100025201,"comment_content":"每一种语言都需要经过汇编转机器指令吗？","like_count":0,"discussions":[{"author":{"id":1228022,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bc/f6/e61d4b8f.jpg","nickname":"许式伟-七牛云(已满)","note":"","ucode":"1A2F8AA6F6DB54","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":488391,"discussion_content":"不一定","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584861157,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1066251,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/0Qp9pxHBvgdZAveKzsvUFFUicCJfe7ONzhC7jSNFQDNFvg0jRMXuqqZOdxG1qKosylUYrpIHUR2Q76w5m4HtVkg/132","nickname":"Aaron","note":"","ucode":"B0C504A76297C7","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":211985,"discussion_content":"是不是现在流行的编译型语言，都是有汇编转成机器指令的？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584922248,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":188765,"user_name":"半截木头","can_delete":false,"product_type":"c1","uid":1296712,"ip_address":"","ucode":"72456E8E1BD6F3","user_header":"https://static001.geekbang.org/account/avatar/00/13/c9/48/5a2879e3.jpg","comment_is_top":false,"comment_ctime":1584413538,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1584413538","product_id":100025201,"comment_content":"<br>有存储的加入，就像人有了记忆一样，知识可以累积，功能可以迭代，从此进步加快。","like_count":0},{"had_liked":false,"id":175510,"user_name":"幻灰龙","can_delete":false,"product_type":"c1","uid":1046202,"ip_address":"","ucode":"AFEDCC997C2FF6","user_header":"https://static001.geekbang.org/account/avatar/00/0f/f6/ba/09ab72d2.jpg","comment_is_top":false,"comment_ctime":1580736477,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1580736477","product_id":100025201,"comment_content":"打卡第四篇，没看留言，独立思考。第一层稳定点是机器指令程序的执行，变化点是机器指令程序的多样性，解决办法是储存和加载，这样可以动态加载存储的任意的程序，并执行。第二层稳定点是机器指令集，以及机器指令集构成的程序二进制格式，变化点是编写指令的方式，解决办法是引入汇编语言这层抽象表达以及对应的编辑器和汇编器，从而可以更方便的写程序。实际上还有第零层稳定点是已知设备的内置驱动程序，变化点是未知设备的驱动和其他程序，通过编程解决。我觉得对构架的启发是，表达力，我们大概率不会设计一个语言来解决问题，但我们设计的解决变化点的东西的表达力，则是可以考虑的，像编程语言这样能自举的就更少了。","like_count":0},{"had_liked":false,"id":158856,"user_name":"J.Smile","can_delete":false,"product_type":"c1","uid":1336475,"ip_address":"","ucode":"C4D98DFDBF7584","user_header":"https://static001.geekbang.org/account/avatar/00/14/64/9b/0b578b08.jpg","comment_is_top":false,"comment_ctime":1575465753,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1575465753","product_id":100025201,"comment_content":"感觉我在研究硬件😄","like_count":0},{"had_liked":false,"id":122111,"user_name":"panqing","can_delete":false,"product_type":"c1","uid":1563877,"ip_address":"","ucode":"6A1E50905AD2E7","user_header":"https://static001.geekbang.org/account/avatar/00/17/dc/e5/d07c38fa.jpg","comment_is_top":false,"comment_ctime":1565306203,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1565306203","product_id":100025201,"comment_content":"这个计算机系统的稳定点是<br>1.BIOS 按一定顺序调用各个外设驱动程序（外存，键盘，显示器）。<br>2. 各外设的驱动程序应该满足一个固定的接口，方便被BIOS调用<br>变化的点是各外设的驱动程序，可以看成是该计算机的扩展。<br>I&#47;O子系统<br>汇编语言子系统<br>","like_count":0},{"had_liked":false,"id":120723,"user_name":"LYy","can_delete":false,"product_type":"c1","uid":1102062,"ip_address":"","ucode":"8D5C39B9531E71","user_header":"https://static001.geekbang.org/account/avatar/00/10/d0/ee/f5c5e191.jpg","comment_is_top":false,"comment_ctime":1564983207,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1564983207","product_id":100025201,"comment_content":"汇编带来的架构思考:<br>1 通过抽象层解耦程序表达与指令集: 不同架构的CPU指令都可以使用汇编语言进行表达，使程序员不需要关心不同指令集之间的差异，专注于总汇编表达逻辑;<br>2 可复用性的载体: 函数的产生<br><br>最小计算能力自迭代计算机:<br>需求: 计算，自迭代<br>核心诉求(稳定点): 遵循MVP理念，计算需要指令执行能力，自迭代需要存储能力、编辑能力和编译能力<br>变化点: 不同架构CPU指令集不同，是指令执行能力的变化点;需要对接不同存储设备是存储能力的变化点;当前仅考虑汇编语言，编辑方面暂不需考虑变化，但不同输入输出设备是编辑能力的变化点;汇编语言对不同指令的编译映射是编译方面的变化点。<br>扩展性: <br>指令执行与编译的扩展性已经通过汇编这层抽象解决<br>输入输出设备及存储设备的扩展性可以通过支持统一的协议解决","like_count":0},{"had_liked":false,"id":113392,"user_name":"sam","can_delete":false,"product_type":"c1","uid":1000417,"ip_address":"","ucode":"8D48F4B9045947","user_header":"https://static001.geekbang.org/account/avatar/00/0f/43/e1/b7be5560.jpg","comment_is_top":false,"comment_ctime":1562991663,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1562991663","product_id":100025201,"comment_content":"计算机在迭代，程序也在迭代，从宏观到微观，整个信息科技世界都在迭代。","like_count":0},{"had_liked":false,"id":111352,"user_name":"宪成小哥","can_delete":false,"product_type":"c1","uid":1526406,"ip_address":"","ucode":"7C1A4F25ACCB4A","user_header":"https://static001.geekbang.org/account/avatar/00/17/4a/86/3cd4144e.jpg","comment_is_top":false,"comment_ctime":1562547537,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1562547537","product_id":100025201,"comment_content":"稳定点:计算（指令集）、存储、输入输出<br>变化点：指令的组合<br>只有将指令的组合形成的程序进行存储，就像通过纸张记录历史一样，后人在别人基础上进行不断的修改，才能形成愈发智能、功能强大的系统","like_count":0},{"had_liked":false,"id":108026,"user_name":"凌","can_delete":false,"product_type":"c1","uid":1120319,"ip_address":"","ucode":"D0AA0C787EE004","user_header":"https://static001.geekbang.org/account/avatar/00/11/18/3f/7b33cd3c.jpg","comment_is_top":false,"comment_ctime":1561648931,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1561648931","product_id":100025201,"comment_content":"它的变化点和稳定点分别是什么？为此，你会怎么设计出哪些子系统？<br>稳定点是CPU的功能：读写数据、执行指令、编译高级语言<br>变化点是各种非CPU的设备，例如：内存、硬盘。借助驱动程序来实现各个硬件设备的可拓展性。<br>子系统：执行、读写、编译<br>可拓展性：平台内核+基于内核API的各种插件","like_count":0},{"had_liked":false,"id":105297,"user_name":"yin_gang","can_delete":false,"product_type":"c1","uid":1033251,"ip_address":"","ucode":"98BD0AD03E8ABC","user_header":"https://static001.geekbang.org/account/avatar/00/0f/c4/23/cb3fba0c.jpg","comment_is_top":false,"comment_ctime":1560957364,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1560957364","product_id":100025201,"comment_content":"子系统：计算，存储，外设<br>稳定点：子系统之间的基本接口<br>变化点：各个子系统自身独立的或者互相配合的演进","like_count":0},{"had_liked":false,"id":100392,"user_name":"My Catherine","can_delete":false,"product_type":"c1","uid":1192736,"ip_address":"","ucode":"A435821E511076","user_header":"https://static001.geekbang.org/account/avatar/00/12/33/20/89314297.jpg","comment_is_top":false,"comment_ctime":1559544817,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1559544817","product_id":100025201,"comment_content":"  计算能力可迭代的计算机，需求应该是计算，就是执行一个有输入的函数，得到输出。那么稳定能力要有cpu的执行计算，读取外部输出输出设备，读取外部存储的能力。<br>  为了不断迭代，那么就需要计算机有更多记忆的积累，记录或删除中间变量，记录或修改基本函数，这些都需要存储在外部存储设备，计算机还需要在开机后知道这些数据(函数和数据)放在哪些位置，这些存放位置不太能放在cpu内部存储中，这里的能力可以变化迭代。","like_count":0},{"had_liked":false,"id":95960,"user_name":"Young","can_delete":false,"product_type":"c1","uid":1073443,"ip_address":"","ucode":"075C0BBE20FD8C","user_header":"https://static001.geekbang.org/account/avatar/00/10/61/23/30d134cf.jpg","comment_is_top":false,"comment_ctime":1558275768,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1558275768","product_id":100025201,"comment_content":"所以，函数名就是地址","like_count":0},{"had_liked":false,"id":95341,"user_name":"Geek_gooy","can_delete":false,"product_type":"c1","uid":1504570,"ip_address":"","ucode":"FC168C31530040","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLluwfFjxlCmg9p2rJVicBdBo6OYpN0EAotUguias8wc78WtAEPHsWic0880CqGwyNypy2KZqVpYhGiag/132","comment_is_top":false,"comment_ctime":1558022361,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1558022361","product_id":100025201,"comment_content":"最原始的电脑假设有(键盘，显示器，存储)。<br>1、要汇编需要字符集和字符编程支撑，比如Unicode和UTF-8。<br>2、存储的驱动，有这个驱动可以保证存储可以被CPU写入数据和读出数据。<br>3、键盘的驱动，保证CPU能读到键盘的输入。<br>4、显示器的驱动，保证CPU能把从键盘和存储读到的数据可视化显示出来。<br>5、一段编辑器程序，能把CPU读到的数据(来自键盘和存储）显示在屏幕上，能保存编辑器中文本到存储中。<br>6、一段文本代码编译程序，很简单的功能，执行它就能从存储读出目标文本代码，转化为二进制码写入存储。<br>7、一个命令行编辑器程序，这个编辑器的作用是，CPU读到回车后，就执行回车前面读取到的内容。<br>8、设计一个命令行命令sh，当CPU读到的回车的执行文本是sh时，就直接运行sh后跟随的地址上的代码。见10。<br>9、CPU在运行时内存怎么管理，也是问题。<br>10、数据保存在存储上，每一段数据怎么区分也是问题，比如按文件保存。调取就按文件名调取，sh命令就可以是 ［sh 文件名］。<br>","like_count":0},{"had_liked":false,"id":95271,"user_name":"艾林","can_delete":false,"product_type":"c1","uid":1496983,"ip_address":"","ucode":"F605E613023FAD","user_header":"","comment_is_top":false,"comment_ctime":1558003608,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1558003608","product_id":100025201,"comment_content":"稳定点:  CPU指令计算能力;基础的输入输出能力，如键盘，显示器;外接存储的能力<br><br>扩展点: 汇编语言的编辑器，编译器; 外接磁盘的输入输出。","like_count":0},{"had_liked":false,"id":93520,"user_name":"尹少爷","can_delete":false,"product_type":"c1","uid":1156454,"ip_address":"","ucode":"5F390D99C41BFA","user_header":"https://static001.geekbang.org/account/avatar/00/11/a5/66/cd335f3e.jpg","comment_is_top":false,"comment_ctime":1557484696,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1557484696","product_id":100025201,"comment_content":"稳定点：<br>\t1. 计算功能<br>\t2. 存储功能<br>\t3. 输入输出设备接口<br>\t4. 底层外放的可接入的API<br><br>变化点：<br>\t1. 计算能力<br>\t2. 存储空间不一样<br>\t3. 接入的设备不一样<br>\t4. 根据API实现不同的功能<br><br>子系统：<br>\t1. I&#47;O<br>\t2. 存储系统<br>\t3. API接入","like_count":0},{"had_liked":false,"id":92094,"user_name":"乘风","can_delete":false,"product_type":"c1","uid":1115724,"ip_address":"","ucode":"0420C5535DACB7","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLwSoTjHPX5tm4whBSfoZLX6toZxrZGUaLABQywKNf4MDc9toK3QSV7Z99ATcGicFCysoleQ5ISzmw/132","comment_is_top":false,"comment_ctime":1557188324,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1557188324","product_id":100025201,"comment_content":"稳定点：<br>1.存储能力，不是是驱动还是程序最终都需要存储。<br>2.读取存储数据的能力，运行程序先需要读取磁盘上存储的程序才可以运行<br>3.执行程序的能力，比如驱动、自定义的程序等<br><br>变化点：<br>1.外接设备，外接设备的种类繁多，比如这里提到的硬盘、显示器、磁盘等，他们的驱动都不同、展示形式不同，如何<br>运行这些外界设备，如何使外界设备联动。<br><br>子系统：<br>1.读写系统：具备读取数据和写入数据的功能，将数据输入指定的设备上（硬盘、显示器、声卡）<br>2.执行系统：具备执行程序的功能，执行读到到的二进制指令码（不管是什么语言，最终体现是二进制码）<br>3.外界设备系统：跟主机进行交互，能根据主机的指令读取or写入数据。<br>4.扩展性：不断接入新的外界设备。","like_count":0},{"had_liked":false,"id":91378,"user_name":"松鼠君","can_delete":false,"product_type":"c1","uid":1135269,"ip_address":"","ucode":"F39C661B685E75","user_header":"https://static001.geekbang.org/account/avatar/00/11/52/a5/d4c6e23d.jpg","comment_is_top":false,"comment_ctime":1557019586,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1557019586","product_id":100025201,"comment_content":"最小化的计算能力可自我迭代的计算机。<br>   既然是计算机，那么最基础的能力就是计算能力，计算要有输入数据和输出数据，所以必须要对数据进行输入，输出和存储。输入可以是传感器获取或者人为输入，所以一定要与外界存在交互，那么就需要I&#47;O系统。这时候最基础的计算机我们就搭建出来了。<br>     计算要具备最基本的算数计算和逻辑计算能力，所以要构建最基本的指令系统。但是计算机不能自我执行这个指令系统中的指令。一开始需要给一个最初的指令执行顺序。<br>    这里的计算能力，可分为软体计算能力和硬件计算能力，软体计算能力是对复杂问题的处理能力，因为一开始计算机所具备的软体计算能力就是算数运算和逻辑运算，这时候的软体能力和硬件能力并没有什么差异，但是通过存储和演化就获得更高层次的计算能力。这部分计算能力的演化，发生在指令序列的存储中，也就是数据存储器器中，也就是程序中。<br>     机器需要在程序中演化出自我迭代的能力，从而对自我程序进行修改，从而达到高层次计算能力自我迭代的要求。在机器没有演化出自我迭代能力前，机器的演化需要人类辅助进行，待机器可自我演化后，则可以自主演化。<br>    ","like_count":0},{"had_liked":false,"id":90850,"user_name":"#55","can_delete":false,"product_type":"c1","uid":1494717,"ip_address":"","ucode":"CF7BB54E35578D","user_header":"https://static001.geekbang.org/account/avatar/00/16/ce/bd/9fa2f7bb.jpg","comment_is_top":false,"comment_ctime":1556689394,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1556689394","product_id":100025201,"comment_content":"<br>计算机的计算能力和指令集会随社会发展不断改变<br>所以稳定点在于控制输入与输出的对应关系 一对一或一对多","like_count":0},{"had_liked":false,"id":90428,"user_name":"xfan","can_delete":false,"product_type":"c1","uid":1315147,"ip_address":"","ucode":"48ED8D498D7F56","user_header":"https://static001.geekbang.org/account/avatar/00/14/11/4b/fa64f061.jpg","comment_is_top":false,"comment_ctime":1556517362,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1556517362","product_id":100025201,"comment_content":"稳定点 驱动的加载运行方式，指令加载执行方式，汇编应用运行的入口，等<br>变化点 设备驱动版本，指令集版本，汇编应用程序版本，及保存汇编程序的方式<br>拓展性与子系统 1.io子系统:将存储上封装一层虚拟存储，统一不同驱动之间的接口。2.编译子系统：将汇编编译器抽象，根据不同指令集解码成相应程序。","like_count":0},{"had_liked":false,"id":90208,"user_name":"ican_只会0到9","can_delete":false,"product_type":"c1","uid":1029473,"ip_address":"","ucode":"9EE33C42EE519D","user_header":"https://static001.geekbang.org/account/avatar/00/0f/b5/61/9802a552.jpg","comment_is_top":false,"comment_ctime":1556447991,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1556447991","product_id":100025201,"comment_content":"稳定点：不变的系统架构--冯诺依曼结构<br>变化点：在各个组成上不断地更新，CPU计算执行能力、I&#47;O读取能力、输入输出方式更便于用户体验","like_count":0},{"had_liked":false,"id":90175,"user_name":"瀚海星尘","can_delete":false,"product_type":"c1","uid":1024461,"ip_address":"","ucode":"90F418299EA3BF","user_header":"https://static001.geekbang.org/account/avatar/00/0f/a1/cd/2c513481.jpg","comment_is_top":false,"comment_ctime":1556439929,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1556439929","product_id":100025201,"comment_content":"承载变化的，是不变的东西。<br>变化的需求后面，是不变的规则。<br>首先，需要能接受且确认变化的东西，输入输出就很重要，包括键盘、显示器还要存储等硬件层面，以及驱动及编辑器等软件层面；<br>其次，变化的东西能够起到作用，这就需要编译器，及编译后可产生结果的运算器；<br>最后，在变化没有到来时，能起到在线作用的初始功能。<br>综上，<br>硬件：cpu，rom，存储，显示器，键盘<br>软件：bios，基础io驱动，编译器，编辑器","like_count":0},{"had_liked":false,"id":90139,"user_name":"张洪磊","can_delete":false,"product_type":"c1","uid":1298582,"ip_address":"","ucode":"6D432C58D92C30","user_header":"https://static001.geekbang.org/account/avatar/00/13/d0/96/8bb17b5f.jpg","comment_is_top":false,"comment_ctime":1556426637,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1556426637","product_id":100025201,"comment_content":"稳定性好比是一座大楼的地基，地基一旦确定了，在地基上面做的各种设计就是变化，对应到计算机组成里面，冯诺依曼的框架就是稳定性的体现，包括逻辑运算，控制指令，存储，输入输出等，这些基本的能力就是稳定性，而且不应变化，而变化就是要承载不同的设计，以输入输出来说，不论你是以前的键盘鼠标，还是显示器，以及现在的指纹，声音，云存储等，这些都是在标准输入输出基础上的扩展，这些扩展恰恰是依赖计算的输入输出的稳定性","like_count":0},{"had_liked":false,"id":90090,"user_name":"jaxsong","can_delete":false,"product_type":"c1","uid":1007331,"ip_address":"","ucode":"E80610A713A2B7","user_header":"https://static001.geekbang.org/account/avatar/00/0f/5e/e3/75a94649.jpg","comment_is_top":false,"comment_ctime":1556412974,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1556412974","product_id":100025201,"comment_content":"稳定点在于指令集是稳定的，变化点在于指令的组合是无穷的","like_count":0},{"had_liked":false,"id":89993,"user_name":"岁寒","can_delete":false,"product_type":"c1","uid":1066921,"ip_address":"","ucode":"D062733384F4BF","user_header":"https://static001.geekbang.org/account/avatar/00/10/47/a9/3ace68b6.jpg","comment_is_top":false,"comment_ctime":1556359566,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1556359566","product_id":100025201,"comment_content":"计算包括输入，输出和计算过程，这个三个概念是抽象的，也是稳定的模块，那么在设计最小化计算单元的时候，需要设计一个通用输入输出接口，同时实现可插拔的计算过程。","like_count":0},{"had_liked":false,"id":89748,"user_name":"a(๑≖ิټ≖ิ)✌","can_delete":false,"product_type":"c1","uid":1392431,"ip_address":"","ucode":"AEF9B5CA1605DF","user_header":"https://static001.geekbang.org/account/avatar/00/15/3f/2f/8513c4d3.jpg","comment_is_top":false,"comment_ctime":1556254891,"is_pvip":false,"discussion_count":0,"race_medal":1,"score":"1556254891","product_id":100025201,"comment_content":"稳定点：系统的指令集，计算机执行指令集的计算能力，接入外部设备的能力<br>变化点：驱动程序和各种其他程序","like_count":0},{"had_liked":false,"id":89588,"user_name":"渔夫","can_delete":false,"product_type":"c1","uid":1019289,"ip_address":"","ucode":"6BF08FD8923E45","user_header":"https://static001.geekbang.org/account/avatar/00/0f/8d/99/f886543d.jpg","comment_is_top":false,"comment_ctime":1556229719,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1556229719","product_id":100025201,"comment_content":"稳定点，计算能力，即指令集，他是计算模型的直接反映。","like_count":0},{"had_liked":false,"id":89546,"user_name":"aaron","can_delete":false,"product_type":"c1","uid":1086129,"ip_address":"","ucode":"D2C6CC96ABA45D","user_header":"https://static001.geekbang.org/account/avatar/00/10/92/b1/b1e4b7fa.jpg","comment_is_top":false,"comment_ctime":1556201185,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1556201185","product_id":100025201,"comment_content":"稳定点:<br>计算能力，以及支持的指令集;从存储读入数据和程序的能力<br>变化点:<br>输入输出设备，多样的存储设备","like_count":0},{"had_liked":false,"id":89539,"user_name":"涵","can_delete":false,"product_type":"c1","uid":1502742,"ip_address":"","ucode":"BB8575DB13F1E0","user_header":"https://static001.geekbang.org/account/avatar/00/16/ee/16/742956ac.jpg","comment_is_top":false,"comment_ctime":1556199850,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1556199850","product_id":100025201,"comment_content":"可迭代计算机的最基本的需求是计算和迭代，所以稳定点是计算的能力，可以读取外置存储中编写程序的能力以及通过计算机修改程序后将新版本存储入外置存储的能力，使用这些基础能力时的语言表达。变化点是各种各样的外设以及存储介质和在基础语言之上不断迭代的各种程序。<br>因此基本计算功能是稳定的，例如使用二进制计算，与存储以及外设的数据交换接口是稳定的，基础的机器语言是稳定的。存储介质，外设和程序以及基础语言之上的程序语言是不断变化的。","like_count":0},{"had_liked":false,"id":89521,"user_name":"Panda","can_delete":false,"product_type":"c1","uid":1503983,"ip_address":"","ucode":"F839CCABE15751","user_header":"https://static001.geekbang.org/account/avatar/00/16/f2/ef/655d88f4.jpg","comment_is_top":false,"comment_ctime":1556194758,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1556194758","product_id":100025201,"comment_content":"稳定点：<br>系统的核心能力，是打散的、原子化的服务<br><br>变化点：<br>针对需求的特殊性，基于核心能力的上层组合以及定制化的实现","like_count":0},{"had_liked":false,"id":89519,"user_name":"曲自良","can_delete":false,"product_type":"c1","uid":1495385,"ip_address":"","ucode":"EABC1A398AF560","user_header":"https://static001.geekbang.org/account/avatar/00/16/d1/59/c1b5ee19.jpg","comment_is_top":false,"comment_ctime":1556193987,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1556193987","product_id":100025201,"comment_content":"稳定点是程序的更新能力，依靠稳定的 编辑 编译 存储与读取能力<br><br>变化点 程序语言的无限表达能力","like_count":0},{"had_liked":false,"id":89369,"user_name":"君莫惜","can_delete":false,"product_type":"c1","uid":1101408,"ip_address":"","ucode":"FD570371148000","user_header":"https://static001.geekbang.org/account/avatar/00/10/ce/60/7d17522d.jpg","comment_is_top":false,"comment_ctime":1556159648,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1556159648","product_id":100025201,"comment_content":"稳定点: 系统的计算能力，存储能力，二进制指令的执行能力 <br>变化点: 不同的编译器，不同的语言<br>扩展: 存储，IO设备","like_count":0},{"had_liked":false,"id":89346,"user_name":"歇斯底里","can_delete":false,"product_type":"c1","uid":1495628,"ip_address":"","ucode":"C3714BD5323A56","user_header":"https://static001.geekbang.org/account/avatar/00/16/d2/4c/a93cee47.jpg","comment_is_top":false,"comment_ctime":1556157102,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1556157102","product_id":100025201,"comment_content":"不变的点：<br>     基本的计算机的功能<br>可变的点：<br>      扩展不同软件，硬件，与语言支持<br>设计的子系统：<br>        计算模块(控制主要的计算功能，包含基础指令)，端口管理模块(控制接入计算内部的所有端口)，驱动适配器(控制软件硬件与计算模块进行交互)，任务调度模块(控制，请求排队)，编译器(将多种语言转化为机械码，直接操作计算模块)<br>可扩展性:<br>     软件与硬件的扩展性通过通过驱动适配器，而自定义语言的扩展性通过编译器来实现，在迭代期间可以将模块进行横向与纵向的扩展","like_count":0},{"had_liked":false,"id":89267,"user_name":"道道","can_delete":false,"product_type":"c1","uid":1065830,"ip_address":"","ucode":"93DE6A1FD3FB3E","user_header":"https://static001.geekbang.org/account/avatar/00/10/43/66/1dd0096e.jpg","comment_is_top":false,"comment_ctime":1556122535,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1556122535","product_id":100025201,"comment_content":"好久不玩汇编了","like_count":0},{"had_liked":false,"id":89232,"user_name":"codewu","can_delete":false,"product_type":"c1","uid":1060861,"ip_address":"","ucode":"BAA2B1CB48FD00","user_header":"https://static001.geekbang.org/account/avatar/00/10/2f/fd/dead7549.jpg","comment_is_top":false,"comment_ctime":1556113067,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1556113067","product_id":100025201,"comment_content":"稳定点：<br>各设备驱动程序的调度<br>变化点：<br>向用户展示的方式","like_count":0},{"had_liked":false,"id":89122,"user_name":"安静的小蘑菇","can_delete":false,"product_type":"c1","uid":1265679,"ip_address":"","ucode":"B9FF87BCFCA665","user_header":"https://static001.geekbang.org/account/avatar/00/13/50/0f/300b79ef.jpg","comment_is_top":false,"comment_ctime":1556084285,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1556084285","product_id":100025201,"comment_content":"不变点（概念）：<br>硬件：冯诺依曼体系结构：存储、计算、输入、输出、通信<br>能力：内存寻址、网络寻址、分布式<br>运行：CPU指令集<br>变化点（实现）：<br>硬件：存储方式（文件系统、数据库、nosql），存储能力，计算能力，输入输出设备，输入输出规模、各种驱动器<br>软件：数据，程序，操作系统，语言，编译器，执行器<br>数据传输：设备总线，设备接口，带宽，协议，分布式规模（负载、容灾、一致性）<br>","like_count":0},{"had_liked":false,"id":89092,"user_name":"善智","can_delete":false,"product_type":"c1","uid":1493974,"ip_address":"","ucode":"365F1775EE4CE8","user_header":"https://static001.geekbang.org/account/avatar/00/16/cb/d6/07d025f8.jpg","comment_is_top":false,"comment_ctime":1556075668,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1556075668","product_id":100025201,"comment_content":"稳定点：<br>1.交互 接口<br>    1.1 输入必要的字符 自然语言&#47;编程语言<br>    1.2 输出必要的字符 自然语言&#47;编程语言<br>2.流程控制 基础程序<br>    1.3 基于交互的计算流程控制程序<br>    <br>变化点：<br>1.交互 驱动<br>    1.1 各种字符输入设备 键盘、或者另一台计算机的输出设备<br>    1.2 各种字符输出显示设备 显示器、打印机、或者另一台计算机的输入设备<br>2.流程控制 程序<br>    1.1 任意组合的程序执行序列","like_count":0},{"had_liked":false,"id":89075,"user_name":"苟范儿","can_delete":false,"product_type":"c1","uid":1364883,"ip_address":"","ucode":"B06B86765512FA","user_header":"https://static001.geekbang.org/account/avatar/00/14/d3/93/bef5a186.jpg","comment_is_top":false,"comment_ctime":1556072006,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1556072006","product_id":100025201,"comment_content":"变化点：独立模块的性能，如 CPU 的运算能力，存储设备的空间等 <br>稳定点: 计算机结构，存储格式，基础的指令集，接口<br>扩展性：硬件设备可以替换，存储设备可以添加，程序可以编辑，I&#47;O 设备可以添加","like_count":0},{"had_liked":false,"id":88952,"user_name":"lt","can_delete":false,"product_type":"c1","uid":1508989,"ip_address":"","ucode":"9468AB6F115D0A","user_header":"https://static001.geekbang.org/account/avatar/00/17/06/7d/7f66c7f9.jpg","comment_is_top":false,"comment_ctime":1556031602,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1556031602","product_id":100025201,"comment_content":"以应用系统为例，其中的用户模块就是稳定点，在用户的基础上可以扩展会员","like_count":0},{"had_liked":false,"id":88893,"user_name":"wx","can_delete":false,"product_type":"c1","uid":1495046,"ip_address":"","ucode":"E5077362D301EB","user_header":"https://static001.geekbang.org/account/avatar/00/16/d0/06/51c34aca.jpg","comment_is_top":false,"comment_ctime":1556022453,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1556022453","product_id":100025201,"comment_content":"稳定点在于，cpu对每个中断信号做出响应，变化点在于这具体的响应是什么，也就是需要一个稳定得监控信号输入的监控器，和一个灵活的响应拓展器，","like_count":0},{"had_liked":false,"id":88891,"user_name":"时轲","can_delete":false,"product_type":"c1","uid":1498746,"ip_address":"","ucode":"EF92F55286F04F","user_header":"https://static001.geekbang.org/account/avatar/00/16/de/7a/077525a5.jpg","comment_is_top":false,"comment_ctime":1556021859,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1556021859","product_id":100025201,"comment_content":"高级语言的灵活度大，开发人力投入小。汇编语言效率相对更快，消耗小。两个是不同时期的产物，现在共同是互联网的基石。","like_count":0},{"had_liked":false,"id":88879,"user_name":"柯烂","can_delete":false,"product_type":"c1","uid":1081802,"ip_address":"","ucode":"E0C9DEB1E30D40","user_header":"https://static001.geekbang.org/account/avatar/00/10/81/ca/1863c0a4.jpg","comment_is_top":false,"comment_ctime":1556020167,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1556020167","product_id":100025201,"comment_content":"稳定点<br>- 指令集<br>- 输入输出存储的驱动接口规范<br><br>变化点<br>- 驱动<br>- 编辑器<br>- 汇编器","like_count":0},{"had_liked":false,"id":88873,"user_name":"Agile","can_delete":false,"product_type":"c1","uid":1501429,"ip_address":"","ucode":"C5E5361947CAF9","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eqsicVhicXRY4oYI1SViaRR3bNjiaQABibJ5RKGO5iaHviaauGmSdNe1KARlaEia8LRDGDXnscx4JibAqwFhFQ/132","comment_is_top":false,"comment_ctime":1556018038,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1556018038","product_id":100025201,"comment_content":"稳定点: 构建一门语言和编译器，编译成计算机能执行的代码，变化点：各种api，能完成变化的各种功能","like_count":0},{"had_liked":false,"id":88830,"user_name":"zh","can_delete":false,"product_type":"c1","uid":1181098,"ip_address":"","ucode":"73D2287552B17B","user_header":"https://static001.geekbang.org/account/avatar/00/12/05/aa/cc1dd8de.jpg","comment_is_top":false,"comment_ctime":1556009519,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1556009519","product_id":100025201,"comment_content":"打卡。变化点和稳定点。","like_count":0},{"had_liked":false,"id":88804,"user_name":"shine","can_delete":false,"product_type":"c1","uid":1195002,"ip_address":"","ucode":"FE4EF39FD79D38","user_header":"https://static001.geekbang.org/account/avatar/00/12/3b/fa/e3479762.jpg","comment_is_top":false,"comment_ctime":1556004785,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1556004785","product_id":100025201,"comment_content":"稳定点:编译器编译成为机器语言的能力，机器语言存放至存储的能力，cpu读取机器语言的能力，<br>变化点:存储内容的多样性，输入输出性能","like_count":0},{"had_liked":false,"id":88763,"user_name":"yiwei.zhou","can_delete":false,"product_type":"c1","uid":1508854,"ip_address":"","ucode":"B31C80E71B198D","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIXjLm1ZXhj5fWo5QKYyc5dSNzibznmvDTickNFOXoJSNI0pB9wnwSVrbzIrmYzIzKibQBXX7ODcOoHg/132","comment_is_top":false,"comment_ctime":1555995313,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1555995313","product_id":100025201,"comment_content":"稳定点:计算能力，存储能力，输入输出能力。<br>变化点:计算方式，存储方式，输入输出方式","like_count":0},{"had_liked":false,"id":88762,"user_name":"明月","can_delete":false,"product_type":"c1","uid":1476588,"ip_address":"","ucode":"D3C649B954A519","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJayib1ZcRfOaoLsdsWZokiaO5tLAdC4uNAicQJRIVXrz9fIchib7QwXibnRrsJaoh5TUlia7faUf36g8Bw/132","comment_is_top":false,"comment_ctime":1555995203,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1555995203","product_id":100025201,"comment_content":"稳定点：程序在计算机上能够跑的稳定，不会无缘无故死机。变化点：支持更多的存储等外设的驱动，支持更多不同类型的设备。","like_count":0},{"had_liked":false,"id":88747,"user_name":"觉","can_delete":false,"product_type":"c1","uid":1503600,"ip_address":"","ucode":"95E85D30E92170","user_header":"https://static001.geekbang.org/account/avatar/00/16/f1/70/bca09d2d.jpg","comment_is_top":false,"comment_ctime":1555990185,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1555990185","product_id":100025201,"comment_content":"感恩大佬分享 随喜大佬<br>稳定点:指令计算能力、数据存储能力、程序编译能力、从硬盘和虚拟内存中找到变量的映射<br>变化点:不同的外部设备、不同的编译器<br>子系统:编译子系统、运行时数据区、指令序列执行子系统<br>扩展性:SPI的设计模式 即插即用","like_count":0},{"had_liked":false,"id":88739,"user_name":"dzw","can_delete":false,"product_type":"c1","uid":1501704,"ip_address":"","ucode":"9DDCF99AA12819","user_header":"https://static001.geekbang.org/account/avatar/00/16/ea/08/dad016c5.jpg","comment_is_top":false,"comment_ctime":1555988740,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1555988740","product_id":100025201,"comment_content":"稳定点：计算，内部存储<br>变化点：输入输出，外置存储，汇编ide<br>子系统：外设管理，文件管理，汇编任务调度管理<br>请老师指正","like_count":0},{"had_liked":false,"id":88688,"user_name":"Tesla","can_delete":false,"product_type":"c1","uid":1500742,"ip_address":"","ucode":"98629AFD9861EE","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKUcSLVV6ia3dibe7qvTu8Vic1PVs2EibxoUdx930MC7j2Q9A6s4eibMDZlcicMFY0D0icd3RrDorMChu0zw/132","comment_is_top":false,"comment_ctime":1555982888,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1555982888","product_id":100025201,"comment_content":"以这个计算机的执行流程看，1.打开计算机启动程序（稳定的存储能力，寻址能力，指令解析,执行能力，指令跳转能力），2.打开软件（在前基础上增加了稳定的io数据交换能力，软件代码解释能力），3.代码迭代（在前基础上增加了可扩展的软件编程能力）4.软件功能可视化（在前基础上增加了可扩展的界面展示能力）","like_count":0},{"had_liked":false,"id":88682,"user_name":"范闲","can_delete":false,"product_type":"c1","uid":1073125,"ip_address":"","ucode":"F21FD7DF6BA53C","user_header":"https://static001.geekbang.org/account/avatar/00/10/5f/e5/54325854.jpg","comment_is_top":false,"comment_ctime":1555982525,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1555982525","product_id":100025201,"comment_content":"稳定点:<br>计算<br>存储<br>调度<br><br>变化点:<br>1.硬件配置<br>2.IO<br>3.需求","like_count":0},{"had_liked":false,"id":88678,"user_name":"zhangtnty","can_delete":false,"product_type":"c1","uid":1180553,"ip_address":"","ucode":"3C9A14BD7CF432","user_header":"https://static001.geekbang.org/account/avatar/00/12/03/89/e1621a01.jpg","comment_is_top":false,"comment_ctime":1555982314,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1555982314","product_id":100025201,"comment_content":"老师好，我认为稳定点是计算、存储能力。变化：数据怎样计算、怎样存储。子系统：设备接入驱动、数据的运算交互。","like_count":0},{"had_liked":false,"id":88669,"user_name":"杨洪林","can_delete":false,"product_type":"c1","uid":1078679,"ip_address":"","ucode":"FA48C280791A55","user_header":"https://static001.geekbang.org/account/avatar/00/10/75/97/abcd222a.jpg","comment_is_top":false,"comment_ctime":1555980922,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1555980922","product_id":100025201,"comment_content":"稳定点在于基本的输入输出能力，固定的引导程序。变化点在于可以加载不同的操作系统，进而安装更多的设备驱动来控制各种设备。","like_count":0},{"had_liked":false,"id":88649,"user_name":"Linuxer","can_delete":false,"product_type":"c1","uid":1153978,"ip_address":"","ucode":"272D9D8089C3D6","user_header":"https://static001.geekbang.org/account/avatar/00/11/9b/ba/333b59e5.jpg","comment_is_top":false,"comment_ctime":1555978883,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1555978883","product_id":100025201,"comment_content":"基础的计算能力是稳定的，迭代计算能力是不断扩展的，这么理解划分软硬件，基础软件和应用软件就是这么来的。","like_count":0},{"had_liked":false,"id":88648,"user_name":"ricktian","can_delete":false,"product_type":"c1","uid":1030928,"ip_address":"","ucode":"06F90004164C64","user_header":"https://static001.geekbang.org/account/avatar/00/0f/bb/10/f01eafe4.jpg","comment_is_top":false,"comment_ctime":1555978699,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1555978699","product_id":100025201,"comment_content":"稳定点：计算模块、存储模块、输入输出模块<br>变化点：在稳定点之上的各种扩展","like_count":0},{"had_liked":false,"id":88634,"user_name":"悟空聊架构","can_delete":false,"product_type":"c1","uid":1123163,"ip_address":"","ucode":"C2F482A0CF8AF1","user_header":"https://static001.geekbang.org/account/avatar/00/11/23/5b/983408b9.jpg","comment_is_top":false,"comment_ctime":1555977188,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1555977188","product_id":100025201,"comment_content":"子系统：计算子系统，存储子系统，外接子系统，监听子系统，地址分配子系统","like_count":0},{"had_liked":false,"id":88620,"user_name":"明翼","can_delete":false,"product_type":"c1","uid":1068361,"ip_address":"","ucode":"E77F86BEB3D5C1","user_header":"https://static001.geekbang.org/account/avatar/00/10/4d/49/28e73b9c.jpg","comment_is_top":false,"comment_ctime":1555974357,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1555974357","product_id":100025201,"comment_content":"稳定点：编辑器，外部存储的读取写入能力；变化点：外部存储驱动会因外部存储发展不同而不同，外部键盘等驱动，也会变化。<br>处理办法：设置接口层，bios中的操作只按照接口操作，外部设备厂家根据接口来编写驱动。","like_count":0},{"had_liked":false,"id":88618,"user_name":"王建","can_delete":false,"product_type":"c1","uid":1153792,"ip_address":"","ucode":"68000818D8AA41","user_header":"https://static001.geekbang.org/account/avatar/00/11/9b/00/8c1b9631.jpg","comment_is_top":false,"comment_ctime":1555973202,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1555973202","product_id":100025201,"comment_content":"稳定点  汇编指令集，汇编编译器，存储，输入，输出接口，<br><br>变化点 汇编指令编写的程序，存储，输入，输出驱动程序","like_count":0}]}