{"id":98376,"title":"48 | iOS中的序列化NSCoding","content":"<p><strong>PDF 课件和源代码下载地址：</strong></p><p><a href=\"https://gitee.com/geektime-geekbang/geektime-ios-course\">https://gitee.com/geektime-geekbang/geektime-ios-course</a></p>","comments":[{"had_liked":false,"id":223063,"user_name":"夏小鹏吖~","can_delete":false,"product_type":"c3","uid":1630134,"ip_address":"","ucode":"AF8997628A1489","user_header":"https://static001.geekbang.org/account/avatar/00/18/df/b6/1bfda79b.jpg","comment_is_top":false,"comment_ctime":1590992880,"is_pvip":false,"replies":[{"id":84298,"content":"首先不是所有的Block中持有self都会形成循环引用。\n\n我们先要了解在iOS中内存的管理是使用引用计数的，简单的说就是一个对象如果没有被引用则会被释放销毁。同时通常来说Block本身会对Block中的对象进行持有。\n\n那如果Block是self的一个属性，则self持有Block，而Block中使用self又导致block持有Self，这样就形成了一个循环，导致self和block的引用计数一直不能变成0，不会被系统自动进行释放回收。\n\n了解了这个原理我们就可以发现，比如类方法中的Block，或者作为临时变量的Block，由于self没有对block进行持有，那么在其中即使持有了self也不会导致循环引用，只是会持有self导致self生命周期的释放时机发生改变。","user_name":"作者回复","user_name_real":"zzz","uid":1041455,"ctime":1592749518,"ip_address":"","comment_id":223063,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100025901,"comment_content":"block 调用self 为什么会发生循环引用呀  老师","like_count":2,"discussions":[{"author":{"id":1041455,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKJ3dLlYr6tznfnZXJNsD7Jw48BVnFSib3RO3VWEN0pgebRY1jaR8YXLQ6iaAjTsFiamOWSA3UPAa37A/132","nickname":"Geek_e7jq8k","note":"","ucode":"352964E5D793DA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":497002,"discussion_content":"首先不是所有的Block中持有self都会形成循环引用。\n\n我们先要了解在iOS中内存的管理是使用引用计数的，简单的说就是一个对象如果没有被引用则会被释放销毁。同时通常来说Block本身会对Block中的对象进行持有。\n\n那如果Block是self的一个属性，则self持有Block，而Block中使用self又导致block持有Self，这样就形成了一个循环，导致self和block的引用计数一直不能变成0，不会被系统自动进行释放回收。\n\n了解了这个原理我们就可以发现，比如类方法中的Block，或者作为临时变量的Block，由于self没有对block进行持有，那么在其中即使持有了self也不会导致循环引用，只是会持有self导致self生命周期的释放时机发生改变。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1592749518,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":122831,"user_name":"人在风中","can_delete":false,"product_type":"c3","uid":1377930,"ip_address":"","ucode":"67628037552B72","user_header":"https://static001.geekbang.org/account/avatar/00/15/06/8a/68bfb917.jpg","comment_is_top":false,"comment_ctime":1565537944,"is_pvip":false,"replies":[{"id":45368,"content":"是的，在视频中写成weakself是错误的，之后的代码中已经更正。感谢🙏   \n\n另外不调用的情况，简单来说有两种，一种是赋值self的时候没有正确的赋值成功，可以检查下类型，或者赋值后是否有值，另外一种就是在Block执行的时候可以加下断点，看下self是否已经被释放了。如果找不到据具体的问题可以上传下代码我帮看下。","user_name":"作者回复","user_name_real":"dequanzhu","uid":1041455,"ctime":1565763383,"ip_address":"","comment_id":122831,"utype":1}],"discussion_count":2,"race_medal":0,"score":2,"product_id":100025901,"comment_content":"    __weak typeof(self) wself = self;\n\n        __strong typeof(wself) strongSelf = wself;\n老师我这里只能用self 用wself或者strongSelf都不调用函数。。  视频中用的wself 这里不应该用strongSelf吗？\n        [self _archiveListDataWithArray:listItemArr.copy];\n","like_count":1,"discussions":[{"author":{"id":1041455,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKJ3dLlYr6tznfnZXJNsD7Jw48BVnFSib3RO3VWEN0pgebRY1jaR8YXLQ6iaAjTsFiamOWSA3UPAa37A/132","nickname":"Geek_e7jq8k","note":"","ucode":"352964E5D793DA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":462422,"discussion_content":"是的，在视频中写成weakself是错误的，之后的代码中已经更正。感谢🙏   \n\n另外不调用的情况，简单来说有两种，一种是赋值self的时候没有正确的赋值成功，可以检查下类型，或者赋值后是否有值，另外一种就是在Block执行的时候可以加下断点，看下self是否已经被释放了。如果找不到据具体的问题可以上传下代码我帮看下。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1565763383,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2731035,"avatar":"","nickname":"高亮","note":"","ucode":"414D1CFDE112ED","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":389598,"discussion_content":"关于listItemArr.copy，为何要要copy，直接用listItemArr行吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1629353066,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":129533,"user_name":"弟弟","can_delete":false,"product_type":"c3","uid":1075685,"ip_address":"","ucode":"FD9B8DB376B1A3","user_header":"https://static001.geekbang.org/account/avatar/00/10/69/e5/b8bc8fc0.jpg","comment_is_top":false,"comment_ctime":1567150387,"is_pvip":false,"replies":[{"id":48364,"content":"👍","user_name":"作者回复","user_name_real":"朱德权","uid":1041455,"ctime":1567216768,"ip_address":"","comment_id":129533,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100025901,"comment_content":"sublime text打开OK了。。之前vs code不行","like_count":0,"discussions":[{"author":{"id":1041455,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKJ3dLlYr6tznfnZXJNsD7Jw48BVnFSib3RO3VWEN0pgebRY1jaR8YXLQ6iaAjTsFiamOWSA3UPAa37A/132","nickname":"Geek_e7jq8k","note":"","ucode":"352964E5D793DA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":465526,"discussion_content":"👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567216768,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":129509,"user_name":"弟弟","can_delete":false,"product_type":"c3","uid":1075685,"ip_address":"","ucode":"FD9B8DB376B1A3","user_header":"https://static001.geekbang.org/account/avatar/00/10/69/e5/b8bc8fc0.jpg","comment_is_top":false,"comment_ctime":1567143470,"is_pvip":false,"replies":[{"id":48365,"content":"已经解决了就好～","user_name":"作者回复","user_name_real":"朱德权","uid":1041455,"ctime":1567216777,"ip_address":"","comment_id":129509,"utype":1}],"discussion_count":2,"race_medal":0,"score":2,"product_id":100025901,"comment_content":"老师，我用NSKeyedArchiver创建的list打开不了，显示文件格式错误或已损坏，之前创建内容为abc的时候还可以打开。","like_count":0,"discussions":[{"author":{"id":1041455,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKJ3dLlYr6tznfnZXJNsD7Jw48BVnFSib3RO3VWEN0pgebRY1jaR8YXLQ6iaAjTsFiamOWSA3UPAa37A/132","nickname":"Geek_e7jq8k","note":"","ucode":"352964E5D793DA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":465511,"discussion_content":"已经解决了就好～","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567216777,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1075685,"avatar":"https://static001.geekbang.org/account/avatar/00/10/69/e5/b8bc8fc0.jpg","nickname":"弟弟","note":"","ucode":"FD9B8DB376B1A3","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":6871,"discussion_content":"用sublime text打开就可以了！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567150878,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":106232,"user_name":"Geek_jg3r26","can_delete":false,"product_type":"c3","uid":1454691,"ip_address":"","ucode":"7D093ED7273CBE","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/PiajxSqBRaEK5icO2A4K7HYTYfQoagTz7VbtgxfS2ibBqLnKVWwQZgsePibZWFvFJEhPT8BtpQSaFx9IEodyp6c0dw/132","comment_is_top":false,"comment_ctime":1561213891,"is_pvip":false,"replies":[{"id":38903,"content":"使用这个函数，在集合类型中的数据必须是基本的类型（NSData,NSNumber等等），自定义的类型即使实现了NSCoding也是不行的，需要转换成NSData。具体的文档在https:&#47;&#47;developer.apple.com&#47;documentation&#47;foundation&#47;nsdictionary&#47;1409634-write。","user_name":"作者回复","user_name_real":"dequanzhu","uid":1041455,"ctime":1561551110,"ip_address":"","comment_id":106232,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100025901,"comment_content":"老师，集合类型调用 writeToFile：atomically： \n里边的自定义类型也需要序列化吗？","like_count":0,"discussions":[{"author":{"id":1041455,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKJ3dLlYr6tznfnZXJNsD7Jw48BVnFSib3RO3VWEN0pgebRY1jaR8YXLQ6iaAjTsFiamOWSA3UPAa37A/132","nickname":"Geek_e7jq8k","note":"","ucode":"352964E5D793DA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":455009,"discussion_content":"使用这个函数，在集合类型中的数据必须是基本的类型（NSData,NSNumber等等），自定义的类型即使实现了NSCoding也是不行的，需要转换成NSData。具体的文档在https://developer.apple.com/documentation/foundation/nsdictionary/1409634-write。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1561551110,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":227328,"user_name":"Damon","can_delete":false,"product_type":"c3","uid":1013281,"ip_address":"","ucode":"E07522227DE1E4","user_header":"https://static001.geekbang.org/account/avatar/00/0f/76/21/abb7bfe3.jpg","comment_is_top":false,"comment_ctime":1592358606,"is_pvip":false,"replies":null,"discussion_count":1,"race_medal":1,"score":2,"product_id":100025901,"comment_content":"supportsSecureCoding是类方法\n+ (BOOL)supportsSecureCoding{\n    return YES;\n}\n","like_count":1,"discussions":[{"author":{"id":1073601,"avatar":"https://static001.geekbang.org/account/avatar/00/10/61/c1/93031a2a.jpg","nickname":"Aaaaaaaaaaayou","note":"","ucode":"67BA315B87587D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":334599,"discussion_content":"确实","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1607913048,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":104271,"user_name":"Masami","can_delete":false,"product_type":"c3","uid":1505981,"ip_address":"","ucode":"73E03F53335DBC","user_header":"https://static001.geekbang.org/account/avatar/00/16/fa/bd/7bf33188.jpg","comment_is_top":false,"comment_ctime":1560702878,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":2,"product_id":100025901,"comment_content":"这节课关于存储还是有不少收获的，继续等待老师更新。","like_count":1},{"had_liked":false,"id":307994,"user_name":"高亮","can_delete":false,"product_type":"c3","uid":2731035,"ip_address":"","ucode":"414D1CFDE112ED","user_header":"","comment_is_top":false,"comment_ctime":1629352850,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":2,"product_id":100025901,"comment_content":"《48 | iOS中的序列化NSCoding》中，[self _archiveListDataWithArray:listItemArray.copy]，数组为何要用copy，直接用数组本身不行吗？","like_count":0},{"had_liked":false,"id":302949,"user_name":"OctFire","can_delete":false,"product_type":"c3","uid":2613056,"ip_address":"","ucode":"49DE54C907A430","user_header":"https://static001.geekbang.org/account/avatar/00/27/df/40/9673fc64.jpg","comment_is_top":false,"comment_ctime":1626450333,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":2,"product_id":100025901,"comment_content":"老师好，开始反序列化的这行代码 ： id unarchiveObj = [NSKeyedUnarchiver unarchivedObjectOfClasses:[NSSet setWithObjects:[NSArray class],[GTListItem class], nil]  fromData:readListData error:nil]; 报了一个错误，错误的内容是 ：Too many arguments to method call, expected 1, have 2 这个应该怎么办呢 只传了一个类也报这个错 呜呜呜","like_count":0},{"had_liked":false,"id":285636,"user_name":"Geek__2099","can_delete":false,"product_type":"c3","uid":1457784,"ip_address":"","ucode":"01444B60F18A66","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83ep8unibCib9rdHib0D6Rf6TjecPQu1yic0G9sjzriczlTcwGHP6DaxtEmHyN7pCrD9zV7OSegyf7EUBvaA/132","comment_is_top":false,"comment_ctime":1616931152,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":2,"product_id":100025901,"comment_content":"对象就是语义集的结构化。\n序列化中的自定义key，是将索引功能从语义key中抽取出来,成为语义key与值的中介，从而实现两者的解耦。解决的问题就是可以独立的修改语义key的名称，而不会影响从修改前的序列化数据中抽取正确的数据。\n比如，在升级版本中，如修改了语义层key的名称，可先用自定义key抽取正确的数据，再用新对照表转换业务数据，即可实现数据的平滑升级。","like_count":0},{"had_liked":false,"id":257962,"user_name":"用户","can_delete":false,"product_type":"c3","uid":2266972,"ip_address":"","ucode":"52D639FB1ABCE7","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83er6XOX1f5g3RJFznbPQdO4j1iaRISEVR6Xn4BviaehPOoqAjfrDswIIsaKPA5DNs9iaHeG3tCGd1icbNQ/132","comment_is_top":false,"comment_ctime":1604225245,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":3,"product_id":100025901,"comment_content":"谷歌的序列化方法能在iOS中用吗？如果要在不同系统的手机间交换备份数据，可以用序列化的方法吗，还是有其他更好的方式？","like_count":0}]}