{"id":204688,"title":"02 | 流量大、数据多的商品详情页系统该如何设计？","content":"<p>你好，我是李玥。</p><p>今天这节课我们看一下，如何设计一个快速、可靠的存储架构支撑商品系统。</p><p>相对于上节课提到的订单系统，电商的商品系统主要功能就是增删改查商品信息，没有很复杂的业务逻辑，支撑的主要页面就是商品详情页（下文简称：商详）。不过，设计这个系统的存储，你仍然需要着重考虑两个方面的问题。</p><p><strong>第一，要考虑高并发的问题。</strong>不管是什么电商系统，商详页一定是整个系统中DAU（日均访问次数）最高的页面之一。这个也不难理解，用户购物么，看商详了不一定买，买之前一定会看好多商详货比三家，所以商详的浏览次数要远比系统的其他页面高。如果说，在设计存储的时候，没有考虑到高并发的问题，大促的时候，支撑商详页的商品系统必然是第一个被流量冲垮的系统。</p><p><strong>第二，要考虑的是商品数据规模的问题。</strong>商详页的数据规模，我总结了六个字，叫：<strong>数量多，重量大</strong>。</p><p>先说为什么数量多，国内一线的电商，SKU（直译为：库存单元，在电商行业，你可以直接理解为“商品”）的数量大约在几亿到几十亿这个量级。当然实际上并没有这么多种商品，这里面有很多原因，比如同一个商品它有不同版本型号，再比如，商家为了促销需要，可能会反复上下架同一个商品或者给同一个商品配不同的马甲，这都导致了SKU数量爆炸。</p><!-- [[[read_end]]] --><p>再说这个“重量大”，你可以打开一个电商商详页看一下，从上一直拉到底，你看看有多长？十屏以内的商详页那都叫短的，并且这里面不光有大量的文字，还有大量的图片和视频，甚至还有AR/VR的玩法在里面，所以说，每个商详页都是个“大胖子”。</p><p>支持商品系统的存储，要保存这么多的“大胖子”，还要支撑高并发，任务艰巨。</p><h2>商品系统需要保存哪些数据？</h2><p>先来看一下，一个商详页都有哪些信息需要保存。我把一个商详页里面的所有信息总结了一下，放在下面这张思维导图里面。</p><p><img src=\"https://static001.geekbang.org/resource/image/94/91/94580cba1683eba8f098218e3c9e9791.jpg?wh=1833*900\" alt=\"\"></p><p>这里面，右边灰色的部分，来自于电商的其他系统，我们暂且不去管这些，左边彩色部分，都是商品系统需要存储的内容。</p><p>这么多内容怎么存？能不能像保存订单数据那样，设计一张商品表，把这些数据一股脑儿都放进去？一张表存不下就再加几张子表，这样行不行？你还真别说不行，现在这些电商大厂，在它们发展的早期就是这么干的。现在那么复杂的分布式存储架构，都是一点儿一点儿逐步演进过来的。</p><p>这么做的好处，就是糙快猛，简单可靠而且容易实现，但是，撑不了多少数据量，也撑不了多少并发。如果说，你要低成本快速构建一个小规模电商，这么做还真就是一个挺合理的选择。</p><p>当然，规模再大一点儿就不能这么干了。不能用数据库，那应该选择哪种存储系统来保存这么复杂的商品数据呢？任何一种存储都是没办法满足的，解决的思路是<strong>分而治之，</strong>我们可以把商品系统需要存储的数据按照特点，分成商品基本信息、商品参数、图片视频和商品介绍几个部分来分别存储。</p><h2>商品基本信息该如何存储？</h2><p>我们先来分析商品的基本信息，它包括商品的主副标题、价格、颜色等一些商品最基本、主要的属性。这些属性都是固定的，不太可能会因为需求或者不同的商品而变化，而且，这部分数据也不会太大。所以，还是建议你在数据库中建一张表来保存商品的基本信息。</p><p>然后，还需要在数据库前面，加一个缓存，帮助数据抵挡绝大部分的读请求。这个缓存，你可以使用Redis，也可以用Memcached，这两种存储系统都是基于内存的KV存储，都能解决问题。</p><p>接下来我和你简单看一下，如何来使用前置缓存来缓存商品数据。</p><p>处理商品信息的读请求时，先去缓存查找，如果找到就直接返回缓存中的数据。如果在缓存中没找到，再去查数据库，把从数据库中查到的商品信息返回给页面，顺便把数据在缓存里也放一份。</p><p>更新商品信息的时候，在更新数据库的同时，也要把缓存中的数据给删除掉。不然就有可能出现这种情况：数据库中的数据变了，而缓存中的数据没变，商详页上看到的还是旧数据。</p><p>这种缓存更新的策略，称为<strong>Cache Aside</strong>，是最简单实用的一种缓存更新策略，适用范围也最广泛。如果你要缓存数据，没有什么特殊的情况，首先就应该考虑使用这个策略。</p><p>除了Cache Aside以外，还有Read/Write Through、Write Behind等几种策略，分别适用于不同的情况，后面的课程中我会专门来讲。</p><p>设计商品基本信息表的时候，有一点需要提醒你的是，<strong>一定要记得保留商品数据的每一个历史版本</strong>。因为商品数据是随时变化的，但是订单中关联的商品数据，必须是下单那个时刻的商品数据，这一点很重要。你可以为每一个历史版本的商品数据保存一个快照，可以创建一个历史表保存到MySQL中，也可以保存到一些KV存储中。</p><h2>使用MongoDB保存商品参数</h2><p>我们再来分析商品参数，参数就是商品的特征。比如说，电脑的内存大小、手机的屏幕尺寸、酒的度数、口红的色号等等。和商品的基本属性一样，都是结构化的数据。但麻烦的是，不同类型的商品，它的参数是完全不一样的。</p><p>如果我们设计一个商品参数表，那这个表的字段就会太多了，并且每增加一个品类的商品，这个表就要加字段，这个方案行不通。</p><p>既然一个表不能解决问题，那就每个类别分别建一张表。比如说，建一个电脑参数表，里面的字段有CPU型号、内存大小、显卡型号、硬盘大小等等；再建一个酒类参数表，里面的字段有酒精度数、香型、产地等等。如果说，品类比较少，在100个以内，用几十张表分别保存不同品类的商品参数，这样做也是可以的。但是，有没有更好的方法呢？</p><p>大多数数据库，都要求数据表要有一个固定的结构。但有一种数据库，没有这个要求。特别适合保存像“商品参数”这种，属性不固定的数据，这个数据库就是MongoDB。</p><p>MongoDB是一个面向文档存储的NoSQL数据库，在MongoDB中，表、行、列对应的概念分别是：collection、document、field，其实都是一回事儿，为了便于你理解，在这里我们不咬文嚼字，还是用“表、行、列”来说明。</p><p>MongoDB最大的特点就是，它的“表结构”是不需要事先定义的，其实，在MongoDB中根本没有表结构。由于没有表结构，它支持你把任意数据都放在同一张表里，你甚至可以在一张表里保存商品数据、订单数据、物流信息等这些结构完全不同的数据。并且，还能支持按照数据的某个字段进行查询。</p><p>它是怎么做到的呢？MongoDB中的每一行数据，在存储层就是简单地被转化成BSON格式后存起来，这个BSON就是一种更紧凑的JSON。所以，即使在同一张表里面，它每一行数据的结构都可以是不一样的。当然，这样的灵活性也是有代价的，MongoDB不支持SQL，多表联查和复杂事务比较孱弱，不太适合存储一般的数据。</p><p>但是，对于商品参数信息，数据量大、数据结构不统一，这些MongoDB都可以很好的满足。我们也不需要事务和多表联查，MongoDB简直就是为了保存商品参数量身定制的一样。</p><h2>使用对象存储保存图片和视频</h2><p>图片和视频由于占用存储空间比较大，一般的存储方式都是，在数据库中只保存图片视频的ID或者URL，实际的图片视频以文件的方式单独存储。</p><p>现在图片和视频存储技术已经非常成熟了，首选的方式就是保存在对象存储（Object Storage）中。各大云厂商都提供对象存储服务，比如国内的七牛云、AWS的S3等等，也有开源的对象存储产品，比如MinIO，可以私有化部署。虽然每个产品的API都不一样，但功能大同小异。</p><p>对象存储可以简单理解为一个无限容量的大文件KV存储，它的存储单位是对象，其实就是文件，可以是一张图片，一个视频，也可以是其他任何文件。每个对象都有一个唯一的key，利用这个key就可以随时访问对应的对象。基本的功能就是写入、访问和删除对象。</p><p>云服务厂商的对象存储大多都提供了客户端API，可以在Web页面或者App中直接访问而不用通过后端服务来中转。这样，App和页面在上传图片视频的时候，直接保存到对象存储中，然后把对应key保存在商品系统中就可以了。</p><p>访问图片视频的时候，真正的图片和视频文件也不需要经过商品系统的后端服务，页面直接通过对象存储提供的URL来访问，又省事儿又节约带宽。而且，几乎所有的对象存储云服务都自带CDN（Content Delivery Network）加速服务，响应时间比直接请求业务的服务器更短。</p><p>国内的很多云厂商的对象存储对图片和视频，都做了非常多的针对性优化。最有用的是，缩放图片和视频转码，你只要把图片和视频丢到对象存储中，就可以随时获得任意尺寸大小的图片，视频也会自动转码成各种格式和码率的版本，适配各种App和场景。我只能说，谁用谁知道，真香！</p><h2>将商品介绍静态化</h2><p>商品介绍在商详页中占得比重是最大的，包含了大量的带格式文字、图片和视频。其中图片和视频自然要存放在对象存储里面，商品介绍的文本，一般都是随着商详页一起静态化，保存在HTML文件中。</p><p>什么是静态化呢？静态化是相对于动态页面来说的。一般我们部署到Tomcat中的Web系统，返回的都是动态页面，也就是在Web请求时，动态生成的。比如说商详页，一个Web请求过来，带着SKUID，Tomcat中的商详页模块，再去访问各种数据库、调用后端服务，动态把这个商详页拼出来，返回给浏览器。</p><p>不过，现在基本上没有系统会这么干了，你想，对于每个SKU的商详页，你每次动态生成的页面内容不是完全一样的么？生成这么多次，不仅浪费服务器资源，速度还慢，关键问题是，Tomcat能能抗的并发量和Nginx完全不是一个数量级的。</p><p>商详页的绝大部分内容都是商品介绍，它是不怎么变的。那不如就把这个页面事先生成好，保存成一个静态的HTML，访问商详页的时候，直接返回这个HTML。这就是静态化。</p><p>商详页静态化之后，不仅仅是可以节省服务器资源，还可以利用CDN加速，把商详页放到离用户最近的CDN服务器上，让商详页访问更快。</p><p>至于商品价格、促销信息等这些需要频繁变动的信息，不能静态化到页面中，可以在前端页面使用AJAX请求商品系统动态获取。这样就兼顾了静态化带来的优势，也能解决商品价格等信息需要实时更新的问题。</p><h2>小结</h2><p>最后，我们再来对今天的内容复个盘。商品系统的存储需要提供商品的基本信息、商品参数、图片和视频以及商品介绍等等这些数据。商品的基本信息和商品参数分别保存在MySQL和MongoDB中，用Redis作为前置缓存，图片和视频存放在对象存储中，商品介绍随着商详页一起静态化到商详静态页中。</p><p>我把商品系统的存储绘制成下面这张图：</p><p><img src=\"https://static001.geekbang.org/resource/image/8d/ad/8dfdedfd574218f0cb3c19daa6fbb2ad.jpg?wh=946*849\" alt=\"\"></p><p>一起来看一下图，这样一个商品系统的存储最终的效果是什么样的？图中实线表示每访问一次商详页，需要真正传输的数据，虚线表示当商详页数据发生变化的时候才需要进行一次数据传输。用户打开一个SKU的商详页时，首先去CDN获取商详页的HTML，然后访问商品系统获取价格等频繁变化的信息，这些信息从Redis缓存中获取。图片和视频信息，也是从对象存储的CDN中获取。</p><p>分析一下效果，数据量最大的图片、视频和商品介绍都是从离用户最近的CDN服务商获取的，速度快，节约带宽。真正打到商品系统的请求，就是价格这些需要动态获取的商品信息，一般做一次Redis查询就可以了，基本不会有流量打到MySQL中。</p><p>这样一个商品系统的存储的架构，把大部分请求都转移到了又便宜速度又快的CDN服务器上，可以用很少量的服务器和带宽资源，抗住大量的并发请求。</p><h2>思考题</h2><p>如果说，用户下单这个时刻，正好赶上商品调价，就有可能出现这样的情况：我明明在商详页看到的价格是10块钱，下单后，怎么变成15块了？你的系统是不是偷偷在坑我？</p><p>这样给用户的体验非常不好。你不要以为这是一个小概率事件，当你的系统用户足够多的时候，每时每刻都有人在下单，这几乎是个必然出现的事件。</p><p>课后请你想一下，该怎么来解决这个问题？欢迎你在留言区与我交流互动。</p><p>感谢你的阅读，如果你觉得今天的内容对你有所帮助，也欢迎把它分享给你的朋友。</p>","comments":[{"had_liked":false,"id":182115,"user_name":"李玥","can_delete":false,"product_type":"c1","uid":1501046,"ip_address":"","ucode":"B19E91EE248591","user_header":"https://static001.geekbang.org/account/avatar/00/16/e7/76/79c1f23a.jpg","comment_is_top":true,"comment_ctime":1582711370,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"9.2233723133153997e+18","product_id":100046801,"comment_content":"hi，我是李玥。跟上节课一样，我还是在留言板上同步一下上节课的思考题，大家一起来学习探讨。<br><br>上节课我们讲了两种实现幂等的方法，课后呢，我也让你思考了下，在你负责开发的业务系统中，能不能用这节课中讲到的方法来实现幂等？除了这两种方法以外，还有哪些实现服务幂等的方法？<br><br>关于这个问题，我是这么看的。<br><br>其实总结下来这些实现幂等的方法，无非是两大类，一类是通过一些精巧的设计让更新本身就是幂等的，这种需要点儿运气，不是所有业务都适用的。另外，就是利用外部的、具备一致性的存储（比如说MySQL）来做冲突检测，你在设计幂等方法的时候一般都可以顺着这两个思路来开展。","like_count":65,"discussions":[{"author":{"id":1500391,"avatar":"https://static001.geekbang.org/account/avatar/00/16/e4/e7/31944ee7.jpg","nickname":"千军万马万马@","note":"","ucode":"0BDAD22123435A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":556038,"discussion_content":"没了？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1647176280,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1439355,"avatar":"https://static001.geekbang.org/account/avatar/00/15/f6/7b/b6abcbbe.jpg","nickname":"否极泰来","note":"","ucode":"C249173266251A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":310779,"discussion_content":"最靠谱的还是利用存储服务的一致性来做冲突检测，但实际开发中还是喜欢通过程序来判断  0_0","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1602045998,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":184093,"user_name":"京京beaver","can_delete":false,"product_type":"c1","uid":1179056,"ip_address":"","ucode":"C21838D7CA7D6B","user_header":"https://static001.geekbang.org/account/avatar/00/11/fd/b0/e30fd916.jpg","comment_is_top":false,"comment_ctime":1583221553,"is_pvip":false,"discussion_count":4,"race_medal":0,"score":"388130278193","product_id":100046801,"comment_content":"一般价格系统是按照价格版本来配置价格的，比如1月1日-2月1日卖100元，有个版本id。价格的调整一般流程比较严格，因为涉及到扣点，供货价的调整，财务结算方式。一般前端用的比较多的是用促销活动，来调整用户的到手价。<br>如果确实有调价发生，会刷新商品信息服务，那里面冗余一份价格数据，这个延迟一般是秒级完成。如果用户商详页看到一个价格，下单时会重新检查当前价格，如果发生变更，一般会在购物车或者立即购买页面给出提醒，重新刷新当前页面来解决。","like_count":91,"discussions":[{"author":{"id":1729060,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/62/24/07e2507c.jpg","nickname":"托尼斯威特","note":"","ucode":"98A1035527292E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":285063,"discussion_content":"读了大家的评论, 有个新想法. 本地缓存可以用在商详页, 因为QPS高. 下单校验价格和库存的QPS相对低, 只用Redis缓存就够用了, 用Cache Aside机制更新Redis, 不一致时间就很短了. ","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1592726201,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2838918,"avatar":"","nickname":"Geek_d393ca","note":"","ucode":"F89D597E42D1F1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":532451,"discussion_content":"对，京东就是这样做的。因为我遇到过😂","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1637598958,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"user_type\":1}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1729060,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/62/24/07e2507c.jpg","nickname":"托尼斯威特","note":"","ucode":"98A1035527292E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":285058,"discussion_content":"如果是文中讲的Cache Aside, 确实缓存不一致的时间很短, 就是数据库更新了, 还没来得及删缓存. 但是我如果JVM本地多了一层缓存, 是靠超时失效的, 这个不一致时间就挺长的. \n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1592724597,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1306032,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJcxSpNMqwqyicMvdOSr9ic0p1ABiauHnv7g7YQVSJuoHPoQbYDu3YzdpgmSAk2KricUBQ5yibWBWIq75w/132","nickname":"桂城老托尼","note":"","ucode":"139E4B8EE88B79","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":211644,"discussion_content":"说的真好，居然没人点赞","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584873772,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":182576,"user_name":"老姜","can_delete":false,"product_type":"c1","uid":1019835,"ip_address":"","ucode":"FB7962F08A9F3B","user_header":"https://static001.geekbang.org/account/avatar/00/0f/8f/bb/7068f251.jpg","comment_is_top":false,"comment_ctime":1582811290,"is_pvip":false,"replies":[{"id":"70680","content":"是的，如果能满足业务需求的话，尽量不要用太多的技术。","user_name":"作者回复","user_name_real":"李玥","uid":"1501046","ctime":1582859524,"ip_address":"","comment_id":182576,"utype":1}],"discussion_count":8,"race_medal":0,"score":"250690914458","product_id":100046801,"comment_content":"mysql支持json数据类型了，是不是可以不用mongodb了，多一个数据库，系统就会更复杂","like_count":59,"discussions":[{"author":{"id":1501046,"avatar":"https://static001.geekbang.org/account/avatar/00/16/e7/76/79c1f23a.jpg","nickname":"李玥","note":"","ucode":"B19E91EE248591","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":485375,"discussion_content":"是的，如果能满足业务需求的话，尽量不要用太多的技术。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582859524,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2166073,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/k3YD3y3BzGDSdrwRJyJY4BXsNJibfM4uzOdDVKIAlFApR2FZCLg2ibrZtJ4vuahA3LHLW9GKzH5CMGqCDhWjhZqg/132","nickname":"戒酒的李白","note":"","ucode":"744E1A22761647","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":552900,"discussion_content":"mysql中的json字段，默认是无法对json里面的字段加索引的，需要使用索引得借助于虚拟字段实现。但是mongo可以对其中任意层级的任意字段加索引，非常灵活。这也是mysql的json字段不能代替mongo的原因。","likes_number":5,"is_delete":false,"is_hidden":false,"ctime":1645629713,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1729060,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/62/24/07e2507c.jpg","nickname":"托尼斯威特","note":"","ucode":"98A1035527292E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":285055,"discussion_content":"用了MongoDB的就不同时再用MySQL了. MySQL分库分表之后, 和NoSQL又有什么分别呢?","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1592724206,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1388844,"avatar":"https://static001.geekbang.org/account/avatar/00/15/31/2c/b91ce98e.jpg","nickname":"叶筱","note":"","ucode":"A613A652E39ADA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":221261,"discussion_content":"mysql5.7不就支持了吗，还有那么多人用，所以mongodb还是有他的优势，但是不很很清楚对比过，有人可以解答吗","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585996593,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1500176,"avatar":"","nickname":"肖肖","note":"","ucode":"5F958993EA8E4A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1388844,"avatar":"https://static001.geekbang.org/account/avatar/00/15/31/2c/b91ce98e.jpg","nickname":"叶筱","note":"","ucode":"A613A652E39ADA","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":300164,"discussion_content":"mongodb分片集吸引了很多使用者","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1597974127,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":221261,"ip_address":""},"score":300164,"extra":""}]},{"author":{"id":1306032,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJcxSpNMqwqyicMvdOSr9ic0p1ABiauHnv7g7YQVSJuoHPoQbYDu3YzdpgmSAk2KricUBQ5yibWBWIq75w/132","nickname":"桂城老托尼","note":"","ucode":"139E4B8EE88B79","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":211629,"discussion_content":"问下，mysql的JSON类型支持检索么？MongoDB 文章中说支持检索。不知道这个MySql支持不？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584871976,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1435636,"avatar":"https://static001.geekbang.org/account/avatar/00/15/e7/f4/7d3f42a8.jpg","nickname":"～随风～","note":"","ucode":"AFEFA9859D8640","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":204688,"discussion_content":"Mysql不是存储多了会有很大的性能问题么？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584199655,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1112651,"avatar":"https://static001.geekbang.org/account/avatar/00/10/fa/4b/c385f755.jpg","nickname":"向前走","note":"","ucode":"8956E92DCEFB60","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1435636,"avatar":"https://static001.geekbang.org/account/avatar/00/15/e7/f4/7d3f42a8.jpg","nickname":"～随风～","note":"","ucode":"AFEFA9859D8640","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":207392,"discussion_content":"可以分库分表吧","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1584494297,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":204688,"ip_address":""},"score":207392,"extra":""}]}]},{"had_liked":false,"id":182354,"user_name":"漏脚脖","can_delete":false,"product_type":"c1","uid":1615539,"ip_address":"","ucode":"214AE52EC201E6","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTI6LXcIqb5K48nia8d4zmdsD1M9AZeyXoGrLzX5xvqfN0fqXOsYKUWLbZvZ8TtJCXWmYbCkCXg93dQ/132","comment_is_top":false,"comment_ctime":1582772430,"is_pvip":false,"replies":[{"id":"70642","content":"第一个问题，初始化的方式一般就是在商家后台修改了商详页中的商品介绍之后，重新生成一个该SKU的新的商详页HTML文件，这个HTML文件的内容直接就包含商品介绍等大段的文字。然后把这个HTML推送到CDN上，或者等CDN回源来拉取。<br><br>第二个问题，是的，每个SKU就会生成一个HTML。<br><br>对于像京东淘宝这样的超大规模电商，它们的做法又不一样了，它们的商详页会被划分得非常细，可能会被分为几十上甚至百部分内容，每一部分可能是静态化的HTML片段，也可能是走的缓存，或者是动态生成的，取决于后面支撑这一小块儿内容的系统了。","user_name":"作者回复","user_name_real":"李玥","uid":"1501046","ctime":1582801509,"ip_address":"","comment_id":182354,"utype":1}],"discussion_count":14,"race_medal":0,"score":"160496562382","product_id":100046801,"comment_content":"老师你好，商品介绍静态化的地方不太懂想请教一下<br><br>我们公司现在的做饭是前端页面直接通过ajax请求数据，我理解的是静态化之后，商品介绍这部分就不用请求接口了，那这部分数据也需要初始化吧？<br><br>所以，我的第1个问题是，商品介绍这部分数据是怎么初始化的呢？难道是初始化到html文件里吗？我的第1个问题是，商品介绍这部分数据是怎么初始化的呢？难道是初始化到html文件里吗？<br>第2个问题，如果问题1成立，那是不是没个商品的介绍都要写到一个html文件里？那几亿个sku怎么做呢，要几亿个html？不太可能吧<br><br>这块老师能展开说一下吗，不太懂具体的实现","like_count":38,"discussions":[{"author":{"id":1501046,"avatar":"https://static001.geekbang.org/account/avatar/00/16/e7/76/79c1f23a.jpg","nickname":"李玥","note":"","ucode":"B19E91EE248591","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":485315,"discussion_content":"第一个问题，初始化的方式一般就是在商家后台修改了商详页中的商品介绍之后，重新生成一个该SKU的新的商详页HTML文件，这个HTML文件的内容直接就包含商品介绍等大段的文字。然后把这个HTML推送到CDN上，或者等CDN回源来拉取。\n\n第二个问题，是的，每个SKU就会生成一个HTML。\n\n对于像京东淘宝这样的超大规模电商，它们的做法又不一样了，它们的商详页会被划分得非常细，可能会被分为几十上甚至百部分内容，每一部分可能是静态化的HTML片段，也可能是走的缓存，或者是动态生成的，取决于后面支撑这一小块儿内容的系统了。","likes_number":4,"is_delete":false,"is_hidden":false,"ctime":1582801509,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1210890,"avatar":"https://static001.geekbang.org/account/avatar/00/12/7a/0a/0ce5c232.jpg","nickname":"吕","note":"","ucode":"8F08E2CB81C4C3","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":348464,"discussion_content":"cdn带来的问题就是，我后台更新了数据，但是cdn缓存还没有到期，用户看到的还是旧的数据，因为cdn不能及时回源，不能时时生效，而如果我每次修改都往cdn推一下，可是因为cdn每天手动推送更新缓存的接口是有次数限制的，所以这就比较尴尬","likes_number":4,"is_delete":false,"is_hidden":false,"ctime":1612586362,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1119098,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83er4KLhnBRsrMVlFDUBl4icRB4D0sg9X6H5zWUuXrTW0sax2z2nBlUMEXiawfenEvDe4dtNQric5KppJQ/132","nickname":"futurexiong","note":"","ucode":"160D824AE27CFF","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":221802,"discussion_content":"如果前端是单页应用，路由到商详，就不能通过nginx返回整个html了吧？总是需要接口请求商详的啊","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1586063987,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1293835,"avatar":"https://static001.geekbang.org/account/avatar/00/13/be/0b/0a381067.jpg","nickname":"zz","note":"","ucode":"EFE0C8D60D0CAC","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1119098,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83er4KLhnBRsrMVlFDUBl4icRB4D0sg9X6H5zWUuXrTW0sax2z2nBlUMEXiawfenEvDe4dtNQric5KppJQ/132","nickname":"futurexiong","note":"","ucode":"160D824AE27CFF","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":280109,"discussion_content":"确实，一般需要接口做一个稍微复杂的对应关系。但是如果把商品ID作为静态文件名，那在Nginx判断是否存在文件，不在就打到服务","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1591495359,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":221802,"ip_address":""},"score":280109,"extra":""}]},{"author":{"id":1019807,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/8f/9f/e49b68ea.jpg","nickname":"幽弥狂","note":"","ucode":"5AECEA7D6ADF33","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":187976,"discussion_content":"静态化的问题，我看京东的有些数据是直接用图片展示的详情页。SKU 这些动态数据做请求。详情不变","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1582783825,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":4,"child_discussions":[{"author":{"id":1306032,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJcxSpNMqwqyicMvdOSr9ic0p1ABiauHnv7g7YQVSJuoHPoQbYDu3YzdpgmSAk2KricUBQ5yibWBWIq75w/132","nickname":"桂城老托尼","note":"","ucode":"139E4B8EE88B79","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1019807,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/8f/9f/e49b68ea.jpg","nickname":"幽弥狂","note":"","ucode":"5AECEA7D6ADF33","race_medal":0,"user_type":1,"is_pvip":true},"discussion":{"id":211628,"discussion_content":"恩，富文本现在越来越少了，用的多的都是图片了。主要还是为了省事儿。","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1584871928,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":187976,"ip_address":""},"score":211628,"extra":""},{"author":{"id":1763091,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/e7/13/6f76ada6.jpg","nickname":"大龄程序员在线治掉发","note":"","ucode":"A246D4E4683589","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1306032,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJcxSpNMqwqyicMvdOSr9ic0p1ABiauHnv7g7YQVSJuoHPoQbYDu3YzdpgmSAk2KricUBQ5yibWBWIq75w/132","nickname":"桂城老托尼","note":"","ucode":"139E4B8EE88B79","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":288349,"discussion_content":"对，省事","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1593736688,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":211628,"ip_address":""},"score":288349,"extra":""},{"author":{"id":1886331,"avatar":"https://static001.geekbang.org/account/avatar/00/1c/c8/7b/153181d7.jpg","nickname":"夜辉","note":"","ucode":"9421385F51FF9E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1019807,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/8f/9f/e49b68ea.jpg","nickname":"幽弥狂","note":"","ucode":"5AECEA7D6ADF33","race_medal":0,"user_type":1,"is_pvip":true},"discussion":{"id":365762,"discussion_content":"图片更是静态文件吧","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1617877839,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":187976,"ip_address":""},"score":365762,"extra":""}]},{"author":{"id":1039069,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/da/dd/1e5e7b0c.jpg","nickname":"image","note":"","ucode":"A45BFF284F8933","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":211463,"discussion_content":"静态话后如果详情模版调整一般如何处理？","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1584853227,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2297346,"avatar":"https://static001.geekbang.org/account/avatar/00/23/0e/02/41099234.jpg","nickname":"Django...","note":"","ucode":"56693F8A886FF0","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":367554,"discussion_content":"老师回复里：1，配合异步任务实现更好；2，说的应该是页面局部静态化","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1618391190,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1016905,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/84/49/47d48fd0.jpg","nickname":"观弈道人","note":"","ucode":"F3BB619A33C605","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":189589,"discussion_content":"还有,应该不是每个sku一个html，是很多html","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582893408,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1293835,"avatar":"https://static001.geekbang.org/account/avatar/00/13/be/0b/0a381067.jpg","nickname":"zz","note":"","ucode":"EFE0C8D60D0CAC","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1016905,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/84/49/47d48fd0.jpg","nickname":"观弈道人","note":"","ucode":"F3BB619A33C605","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":280107,"discussion_content":"静态页面和商品有对应关系，变更商品信息，应该同步更新静态页。相当于发了一次请求，把输出打到目标HTML，跟缓存处理方式一样","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1591495198,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":189589,"ip_address":""},"score":280107,"extra":""}]},{"author":{"id":1016905,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/84/49/47d48fd0.jpg","nickname":"观弈道人","note":"","ucode":"F3BB619A33C605","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":189586,"discussion_content":"那我理解大体做法是不是：前端的框架页面（现在前后端分离都是js文件）加载各个部分的html进行拼装(通过can)，价格变化部分直接ajax 调用应用服务器获取。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582893313,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":182124,"user_name":"Din","can_delete":false,"product_type":"c1","uid":1013276,"ip_address":"","ucode":"02B38F4C612882","user_header":"https://static001.geekbang.org/account/avatar/00/0f/76/1c/e709be94.jpg","comment_is_top":false,"comment_ctime":1582712859,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"134726699035","product_id":100046801,"comment_content":"下单前先调用校验价格的接口，如果价格已经发生了变化，提示用户刷新页面。","like_count":31,"discussions":[{"author":{"id":2033381,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/dqFNxRtTH5fNFN0eVc2fEftyWv0XPM565g54nVXHibVLMynn65yoQLDAt85MTEDU81gKeEvH6SQ1ibIzoxavryaQ/132","nickname":"Ky","note":"","ucode":"EFE8635A82D78F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":552605,"discussion_content":"把校验价格的动作放到下单的事务里会不会更稳妥？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1645523229,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":182696,"user_name":"何妨","can_delete":false,"product_type":"c1","uid":1385377,"ip_address":"","ucode":"EC3983BFF7992A","user_header":"https://static001.geekbang.org/account/avatar/00/15/23/a1/b08f3ee7.jpg","comment_is_top":false,"comment_ctime":1582852513,"is_pvip":false,"replies":[{"id":"70688","content":"其实静态化都是“过时”的技术了。但是特定的场景还是非常有用。<br><br>现在的动态Web页面，都是用JS请求动态数据，在浏览器中填充内容。<br><br>早期的Web页都是Server端渲染，比如Java中的thymeleaf，FreeMarker 模板引擎，包括PHP本身就是个模板引擎，这些都是在服务端来填充好动态内容，再返回给浏览器的。<br><br>页面静态化就是利用这些模板引擎技术，事先就把页面中的动态内容填充好，生成一个一个静态的HTML。<br><br>这种静态化技术只适合页面内容很多，页面又不会经常变化的场景。比如我们电商的商详页，再比如很多新闻、咨询类的网站（一篇新闻发了之后很少会修改）。","user_name":"作者回复","user_name_real":"李玥","uid":"1501046","ctime":1582861917,"ip_address":"","comment_id":182696,"utype":1}],"discussion_count":8,"race_medal":0,"score":"78892263841","product_id":100046801,"comment_content":"希望老师可以再展开讲讲商品介绍静态化这一块，有些意犹未尽，还是想详细了解一下，感觉看到了些门道但还是有些模糊","like_count":18,"discussions":[{"author":{"id":1501046,"avatar":"https://static001.geekbang.org/account/avatar/00/16/e7/76/79c1f23a.jpg","nickname":"李玥","note":"","ucode":"B19E91EE248591","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":485415,"discussion_content":"其实静态化都是“过时”的技术了。但是特定的场景还是非常有用。\n\n现在的动态Web页面，都是用JS请求动态数据，在浏览器中填充内容。\n\n早期的Web页都是Server端渲染，比如Java中的thymeleaf，FreeMarker 模板引擎，包括PHP本身就是个模板引擎，这些都是在服务端来填充好动态内容，再返回给浏览器的。\n\n页面静态化就是利用这些模板引擎技术，事先就把页面中的动态内容填充好，生成一个一个静态的HTML。\n\n这种静态化技术只适合页面内容很多，页面又不会经常变化的场景。比如我们电商的商详页，再比如很多新闻、咨询类的网站（一篇新闻发了之后很少会修改）。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1582861917,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":1,"child_discussions":[{"author":{"id":1132448,"avatar":"https://static001.geekbang.org/account/avatar/00/11/47/a0/f12115b7.jpg","nickname":"Sam.张朝","note":"","ucode":"FB20554D94B250","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1501046,"avatar":"https://static001.geekbang.org/account/avatar/00/16/e7/76/79c1f23a.jpg","nickname":"李玥","note":"","ucode":"B19E91EE248591","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":552959,"discussion_content":"过时加引号，静态化分不同场景和渠道，比如web，app，微信小程序，有的没办法做静态化","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1645668819,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":485415,"ip_address":""},"score":552959,"extra":""}]},{"author":{"id":1436391,"avatar":"https://static001.geekbang.org/account/avatar/00/15/ea/e7/9ce305ec.jpg","nickname":"Sancho","note":"","ucode":"78849913082622","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":200655,"discussion_content":"个人理解，就是现在的大前端，前后端分离嘛","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1583710893,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1886331,"avatar":"https://static001.geekbang.org/account/avatar/00/1c/c8/7b/153181d7.jpg","nickname":"夜辉","note":"","ucode":"9421385F51FF9E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":365765,"discussion_content":"所以大前端，前后端分离，是用前端模板引擎（react）替换后端模板引擎（velocity）\n好处就是分担一部分服务器压力\n坏处是依赖客户端，在浏览器渲染页面，会给客户端增加压力\n是这样嘛？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1617878539,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1980201,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/37/29/b3af57a7.jpg","nickname":"凯文小猪","note":"","ucode":"36D8AD0229547F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":363657,"discussion_content":"确实是早期的技术 对于千万级的SKU 即使数据半个月没变 存储本身也是个问题","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1617254912,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1277081,"avatar":"https://static001.geekbang.org/account/avatar/00/13/7c/99/4dac6ce6.jpg","nickname":"lakeslove","note":"","ucode":"65E14D29D3C981","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":319860,"discussion_content":"流程图里少画了一部分，如果访问在nginx没有找到缓存，则nginx会访问tomcat，从tomcat得到html后缓存在nginx并返回给客户端，下一次请求时直接返回该缓存","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1604146357,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1242573,"avatar":"https://static001.geekbang.org/account/avatar/00/12/f5/cd/3890be04.jpg","nickname":"小川","note":"","ucode":"D462222DDBB978","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1277081,"avatar":"https://static001.geekbang.org/account/avatar/00/13/7c/99/4dac6ce6.jpg","nickname":"lakeslove","note":"","ucode":"65E14D29D3C981","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":575067,"discussion_content":"一般是这么做的吗？不是主动推到no 上吗","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1654579024,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":319860,"ip_address":""},"score":575067,"extra":""}]},{"author":{"id":1385377,"avatar":"https://static001.geekbang.org/account/avatar/00/15/23/a1/b08f3ee7.jpg","nickname":"何妨","note":"","ucode":"EC3983BFF7992A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":189264,"discussion_content":"感谢老师解惑","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582862518,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":294482,"user_name":"Ling","can_delete":false,"product_type":"c1","uid":1323264,"ip_address":"","ucode":"F16F675C1D1EA9","user_header":"https://static001.geekbang.org/account/avatar/00/14/31/00/b5fd38df.jpg","comment_is_top":false,"comment_ctime":1621958091,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"70341434827","product_id":100046801,"comment_content":"1. 作者讲了什么？<br><br>   一个电商系统，流量集中的一个业务：商品详情系统的存储应该设计<br><br>2. 作者是怎么把事情说明白的？<br><br>   通过将电商详情的数据需求出发，说明数据多样，无法一个系统解决，需要分而治之<br><br>   - 从存储层面，数据区分为：固定结构数据、非固定结构数据、富媒体数据；<br><br>   - 从读取层面，将数据分为：经常变化数据、非经常变化数据<br><br>3. 为了讲明白，作者讲了哪些要点？哪些是亮点？<br><br>   **要点**：<br><br>   1. 从数据存储到哪的角度：<br><br>      - 固定结构数据：<br><br>        商品主标题、副标题、价格，等商品最基本、最主要的信息（任何商品都有的属性）<br><br>        存储到：MySQL中<br><br>      - 非固定结构数据：<br><br>        商品参数，不同类型的商品，参数基本完全不一样。电脑的内存大小、手机的屏幕尺寸、酒的度数、口红的色号等等。<br><br>        存储到不需要固定结构的存储：MongoDB或者MySQL的json字段中<br><br>      - 富媒体数据：<br><br>        商品的主图、详情介绍图片、视频等富媒体数据<br><br>        存储到：对象存储。并且通过客户端直接调用对象存储的API，得到媒体资源在对象存储中的ID或者URL之后，将ID或者URL提交到MySQL中。<br><br>   2. 从数据读取角度：<br><br>      - 存储到MySQL中的数据，需要设计一层缓存层，应对高并发读<br><br>      - 对于不经常变动的数据：<br><br>        静态化后，上CDN；<br><br>        其实也可以不用生成html文件，直接把动态输出页面的接口作为CDN源站。<br><br>      - 对于经常变动的数据：价格、促销信息<br><br>        通过ajax接口动态获取<br><br>      - 富媒体数据：<br><br>        将对象存储设置为CDN源站，用户通过CDN访问富媒体资源<br><br>   **亮点**：<br><br>   通过一张图，非常清晰的总结了整体的设计思路，很赞！","like_count":17,"discussions":[{"author":{"id":2846442,"avatar":"","nickname":"Geek_8363c3","note":"","ucode":"F7BFC57DABF2F2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":530944,"discussion_content":"看过最用心的评论👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1637193315,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"user_type\":1}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":194163,"user_name":"蹦～沙卡拉卡","can_delete":false,"product_type":"c1","uid":1100300,"ip_address":"","ucode":"DCA29164DD4669","user_header":"https://static001.geekbang.org/account/avatar/00/10/ca/0c/bbcdd6aa.jpg","comment_is_top":false,"comment_ctime":1585031664,"is_pvip":false,"replies":[{"id":"74079","content":"是的，关联快照。","user_name":"作者回复","user_name_real":"李玥","uid":"1501046","ctime":1585098948,"ip_address":"","comment_id":194163,"utype":1}],"discussion_count":1,"race_medal":0,"score":"70304508400","product_id":100046801,"comment_content":"老师，我问下，商品每次变化都要保存一个快照。 假如商品表是table_a, 快照表是table_b, 那么订单关联的商品是关联 商品表 table_a 还是 快照表 table_b呢？ 我的理解是关联快照表。","like_count":17,"discussions":[{"author":{"id":1501046,"avatar":"https://static001.geekbang.org/account/avatar/00/16/e7/76/79c1f23a.jpg","nickname":"李玥","note":"","ucode":"B19E91EE248591","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":488771,"discussion_content":"是的，关联快照。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1585098948,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":182304,"user_name":"MadDog","can_delete":false,"product_type":"c1","uid":1701611,"ip_address":"","ucode":"46B11108AD66CD","user_header":"https://static001.geekbang.org/account/avatar/00/19/f6/eb/caaf8e85.jpg","comment_is_top":false,"comment_ctime":1582766449,"is_pvip":false,"replies":[{"id":"70582","content":"从动态字段这个功能上说，这俩数据库是可以互相替换的，哪个更好还是要看业务需求。<br><br>大多数场景下mongo写性能更好一些，ES更容易维护，功能也更丰富，但也有一些缺陷，比如深分页的问题，SQL支持还不是特别完善等等。<br><br>个人认为ES的前景更好一些，大家怎么看？","user_name":"作者回复","user_name_real":"李玥","uid":"1501046","ctime":1582772666,"ip_address":"","comment_id":182304,"utype":1}],"discussion_count":11,"race_medal":0,"score":"70302243185","product_id":100046801,"comment_content":"请问elasticSearch可以替换mongoDB嘛？elasticSearch也可以通过Dynamic field mappings做到类似功能","like_count":16,"discussions":[{"author":{"id":1501046,"avatar":"https://static001.geekbang.org/account/avatar/00/16/e7/76/79c1f23a.jpg","nickname":"李玥","note":"","ucode":"B19E91EE248591","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":485296,"discussion_content":"从动态字段这个功能上说，这俩数据库是可以互相替换的，哪个更好还是要看业务需求。\n\n大多数场景下mongo写性能更好一些，ES更容易维护，功能也更丰富，但也有一些缺陷，比如深分页的问题，SQL支持还不是特别完善等等。\n\n个人认为ES的前景更好一些，大家怎么看？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582772666,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":1,"child_discussions":[{"author":{"id":2138602,"avatar":"https://static001.geekbang.org/account/avatar/00/20/a1/ea/4b7120ce.jpg","nickname":"刘根","note":"","ucode":"3321106FF42034","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1501046,"avatar":"https://static001.geekbang.org/account/avatar/00/16/e7/76/79c1f23a.jpg","nickname":"李玥","note":"","ucode":"B19E91EE248591","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":576171,"discussion_content":"一个是数据库，一个是搜索引擎，应用场景不一样，对于普通用户的查询，通常是固定几个字段的查询，适合mongodb，性能更好，对于管理员的后台系统，查询字段多变，适合es。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1655339252,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":485296,"ip_address":""},"score":576171,"extra":""}]},{"author":{"id":1260810,"avatar":"https://static001.geekbang.org/account/avatar/00/13/3d/0a/5f2a9a4c.jpg","nickname":"YZJ","note":"","ucode":"88B2A495A33197","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":187992,"discussion_content":"我理解mongo中字段只是个文本，没啥元数据维护，但是ES中每个字段默认要分词要索引，ES master要维护元数据，我在哪看到过ES默认单个索引字段不能超过1000,电商场景字段何止1000,所以这种场景个人认为ES不合适，mongo很合适","likes_number":10,"is_delete":false,"is_hidden":false,"ctime":1582785900,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":4,"child_discussions":[{"author":{"id":1433535,"avatar":"https://static001.geekbang.org/account/avatar/00/15/df/bf/96b50d1e.jpg","nickname":"😚 46","note":"","ucode":"EED0EBBBF80A43","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1260810,"avatar":"https://static001.geekbang.org/account/avatar/00/13/3d/0a/5f2a9a4c.jpg","nickname":"YZJ","note":"","ucode":"88B2A495A33197","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":245886,"discussion_content":"感觉有道理","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1587708590,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":187992,"ip_address":""},"score":245886,"extra":""},{"author":{"id":1082132,"avatar":"https://static001.geekbang.org/account/avatar/00/10/83/14/099742ae.jpg","nickname":"xzy","note":"","ucode":"483350A630625E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1260810,"avatar":"https://static001.geekbang.org/account/avatar/00/13/3d/0a/5f2a9a4c.jpg","nickname":"YZJ","note":"","ucode":"88B2A495A33197","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":314530,"discussion_content":"这种情况可以设置不分词，字段也可以按需索引，字段数限制是可以设置的","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1603168987,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":187992,"ip_address":""},"score":314530,"extra":""},{"author":{"id":1519606,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eoCHmb4h3vIr7FIbsibajkSdIIeaL9sWsHzrHItcich7ficeLUfLlmdaRA4ZrYKic4jZ3at6CSq7UNPtw/132","nickname":"guyun","note":"","ucode":"2A1D932496BF5E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1260810,"avatar":"https://static001.geekbang.org/account/avatar/00/13/3d/0a/5f2a9a4c.jpg","nickname":"YZJ","note":"","ucode":"88B2A495A33197","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":330015,"discussion_content":"1000这个限制是可以修改的‘默认是1000。超过一千的业务中我也遇到，属于业务设计失误了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1606490247,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":187992,"ip_address":""},"score":330015,"extra":""}]},{"author":{"id":1162714,"avatar":"https://static001.geekbang.org/account/avatar/00/11/bd/da/3d76ea74.jpg","nickname":"看不到de颜色","note":"","ucode":"88348CCAE81931","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":194227,"discussion_content":"更倾向于用ES，简单好维护。写入压测效果也没有想象中的差。而且我觉得也得看公司的运维情况，哪个中间件支撑的更好。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1583199766,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1980201,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/37/29/b3af57a7.jpg","nickname":"凯文小猪","note":"","ucode":"36D8AD0229547F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":363659,"discussion_content":"ES本身适合查询 但因为协调节点的原理设计反而不能使用分页查询。mongodb是nosql里面向文档型的 官方说是实现了mvcc 但对事务这块的支持我们通常不会用。所以你看确实如老师说的 谁也替代不了谁","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1617255001,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1729060,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/62/24/07e2507c.jpg","nickname":"托尼斯威特","note":"","ucode":"98A1035527292E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":285061,"discussion_content":"ES贵, 要做全文反向索引.","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1592725021,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1160644,"avatar":"https://static001.geekbang.org/account/avatar/00/11/b5/c4/9148b40d.jpg","nickname":"SunshineBoy","note":"","ucode":"FC54CD1815CCBA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":273751,"discussion_content":"mgo和es的写性能都不太好，频繁写操作必须要用的话可以考虑做个缓存限流批量插入","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1590497367,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":188379,"user_name":"winzheng","can_delete":false,"product_type":"c1","uid":1808505,"ip_address":"","ucode":"D78074036BB85D","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJaPyAQvQx7BpTFjmEyDkQXLEcL2lEGjsoookic3Z25SJY0omzNUA3xCKt2F0hBqbxZMmrXX9v4TWQ/132","comment_is_top":false,"comment_ctime":1584346657,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"61713888801","product_id":100046801,"comment_content":"价格的变化：应该以用户体验为中心，商品加上版本号，根据用户提交时的版本号价格为准；如果用户是停留较长时间，需要给出超时商品变化的提示，起码用户可以理解这个问题，例如飞机票，停留时间长，价格变化，会給用户提示，当然，飞机票变更频率确实比商品高。","like_count":15,"discussions":[{"author":{"id":1002095,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/4a/6f/e36b3908.jpg","nickname":"xzy","note":"","ucode":"1A44368083A19E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":290371,"discussion_content":"你咋跟我想的一样","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1594448687,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1306032,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJcxSpNMqwqyicMvdOSr9ic0p1ABiauHnv7g7YQVSJuoHPoQbYDu3YzdpgmSAk2KricUBQ5yibWBWIq75w/132","nickname":"桂城老托尼","note":"","ucode":"139E4B8EE88B79","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":211639,"discussion_content":"赞成兄弟的理解。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584872387,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":182445,"user_name":"木木三","can_delete":false,"product_type":"c1","uid":1117540,"ip_address":"","ucode":"B480F5AAA259C7","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epx6xuXh1G9YDWKwwRg9I9NNErOzh4dq7tnRGb1zkmJVdbWQUP1aRpPAeCJIRXLOqIhrZ53p1lib7g/132","comment_is_top":false,"comment_ctime":1582788818,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"35942527186","product_id":100046801,"comment_content":"谁用谁知道，真香","like_count":8,"discussions":[{"author":{"id":1386315,"avatar":"https://static001.geekbang.org/account/avatar/00/15/27/4b/e49c82d0.jpg","nickname":"Rover","note":"","ucode":"7575EC91F45B99","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":194474,"discussion_content":"这是实话，用过阿里云的OOS，感觉很爽，api也很简单","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1583223608,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":188700,"user_name":"萨秋","can_delete":false,"product_type":"c1","uid":1887905,"ip_address":"","ucode":"EE4F06F711FD9E","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTI2p2U6CmrhX9NGtxj3W1mPYfIR2qonGz8ZLchr0COYuFTeibYwmIianXdUjXnUEcYNIuGC8VyiaB7mQ/132","comment_is_top":false,"comment_ctime":1584406173,"is_pvip":false,"replies":[{"id":"73000","content":"做SEO还是主要提供商品内容，很多电商都不希望价格被抓走，还要做各种措施来防止爬虫抓取价格。","user_name":"作者回复","user_name_real":"李玥","uid":"1501046","ctime":1584500765,"ip_address":"","comment_id":188700,"utype":1}],"discussion_count":1,"race_medal":0,"score":"23059242653","product_id":100046801,"comment_content":"老师您好 想请问下静态化这块 如何做seo优化呢 类似于价格等信息都是爬虫主要抓取的 如果做成异步的话数据源就会有缺失 类似这样的问题 ","like_count":5,"discussions":[{"author":{"id":1501046,"avatar":"https://static001.geekbang.org/account/avatar/00/16/e7/76/79c1f23a.jpg","nickname":"李玥","note":"","ucode":"B19E91EE248591","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":487493,"discussion_content":"做SEO还是主要提供商品内容，很多电商都不希望价格被抓走，还要做各种措施来防止爬虫抓取价格。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584500765,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":184514,"user_name":"大秦皇朝","can_delete":false,"product_type":"c1","uid":1301113,"ip_address":"","ucode":"0F72D0D2FAEAF2","user_header":"https://static001.geekbang.org/account/avatar/00/13/da/79/9b093890.jpg","comment_is_top":false,"comment_ctime":1583332103,"is_pvip":false,"replies":[{"id":"71369","content":"确实可能有这种情况。<br><br>没精力的话可以不管，反正垃圾数据也不太多，存储也便宜。<br><br>等积累到一定量了，再写个任务定期清理一下就可以。<br><br>","user_name":"作者回复","user_name_real":"李玥","uid":"1501046","ctime":1583373678,"ip_address":"","comment_id":184514,"utype":1}],"discussion_count":3,"race_medal":0,"score":"23058168583","product_id":100046801,"comment_content":"李玥老师您好：<br>上传了图片和视频后，但是又没有提交数据，那么服务器上是否会出现没有用的冗余&#47;垃圾数据？那这块怎么判断和处理呢？","like_count":5,"discussions":[{"author":{"id":1501046,"avatar":"https://static001.geekbang.org/account/avatar/00/16/e7/76/79c1f23a.jpg","nickname":"李玥","note":"","ucode":"B19E91EE248591","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":486044,"discussion_content":"确实可能有这种情况。\n\n没精力的话可以不管，反正垃圾数据也不太多，存储也便宜。\n\n等积累到一定量了，再写个任务定期清理一下就可以。\n\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1583373678,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1886331,"avatar":"https://static001.geekbang.org/account/avatar/00/1c/c8/7b/153181d7.jpg","nickname":"夜辉","note":"","ucode":"9421385F51FF9E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":365768,"discussion_content":"请问根据什么规则定期清理呢？\n是根据上传时间定期清理嘛？还是在数据库查询图片和视频ID进行删除？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1617878853,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1285055,"avatar":"https://static001.geekbang.org/account/avatar/00/13/9b/bf/a76eadff.jpg","nickname":"小嘟嘟","note":"","ucode":"1584DD1402502D","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1886331,"avatar":"https://static001.geekbang.org/account/avatar/00/1c/c8/7b/153181d7.jpg","nickname":"夜辉","note":"","ucode":"9421385F51FF9E","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":574887,"discussion_content":"CDN提供了刷新接口，保证全网数据保证一致，这个是业务主动调用行为","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1654421233,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":365768,"ip_address":""},"score":574887,"extra":""}]}]},{"had_liked":false,"id":182390,"user_name":"子瞻","can_delete":false,"product_type":"c1","uid":1233471,"ip_address":"","ucode":"BD7D5CF67DCF89","user_header":"https://static001.geekbang.org/account/avatar/00/12/d2/3f/6b20028f.jpg","comment_is_top":false,"comment_ctime":1582778958,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"18762648142","product_id":100046801,"comment_content":"下单的时候，生成商品价格，价格版本等的快照数据，结算时，和库里的价格版本信息对比，一致则进入支付，不一致则执行价格异常调整策略","like_count":4},{"had_liked":false,"id":204499,"user_name":"励研冰","can_delete":false,"product_type":"c1","uid":1106394,"ip_address":"","ucode":"FCBC8266018FA0","user_header":"https://static001.geekbang.org/account/avatar/00/10/e1/da/d7f591a7.jpg","comment_is_top":false,"comment_ctime":1586409740,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"14471311628","product_id":100046801,"comment_content":"我做电商的时候在下单前会有一个Check的接口，客户端会上传预期的价格，后端检查发现价格发生了变化会返回提示让刷新页面，再重新Check","like_count":3},{"had_liked":false,"id":193628,"user_name":"kamida","can_delete":false,"product_type":"c1","uid":1904150,"ip_address":"","ucode":"0C5075CEF829C0","user_header":"","comment_is_top":false,"comment_ctime":1584936347,"is_pvip":false,"replies":[{"id":"73877","content":"一般都是用版本号对应的。","user_name":"作者回复","user_name_real":"李玥","uid":"1501046","ctime":1585014781,"ip_address":"","comment_id":193628,"utype":1}],"discussion_count":1,"race_medal":0,"score":"14469838235","product_id":100046801,"comment_content":"老师 商品历史版本是在建一个单独的商品历史表 然后给它对于一个时间列吗","like_count":3,"discussions":[{"author":{"id":1501046,"avatar":"https://static001.geekbang.org/account/avatar/00/16/e7/76/79c1f23a.jpg","nickname":"李玥","note":"","ucode":"B19E91EE248591","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":488600,"discussion_content":"一般都是用版本号对应的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585014781,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":187012,"user_name":"大叶枫","can_delete":false,"product_type":"c1","uid":1153702,"ip_address":"","ucode":"224AC5533889AD","user_header":"https://static001.geekbang.org/account/avatar/00/11/9a/a6/3bddb98c.jpg","comment_is_top":false,"comment_ctime":1583989475,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"14468891363","product_id":100046801,"comment_content":"各种存储特性还是要依据业务特性去设计的，比如说订单表，单条查询走mysql去推进业务更高，毕竟主键查询性能锐减没有多少，批量有全文检索的可以有esdb。所以需要设计人员有时候在设计之初将字段分开设计，有普通检索字段，长文本可变打标字段，可变标记数值字段这类，后面变更存储的成本太大。","like_count":3},{"had_liked":false,"id":183957,"user_name":"leslie","can_delete":false,"product_type":"c1","uid":1324255,"ip_address":"","ucode":"798E7C1CC98CC2","user_header":"https://static001.geekbang.org/account/avatar/00/14/34/df/64e3d533.jpg","comment_is_top":false,"comment_ctime":1583168257,"is_pvip":false,"discussion_count":4,"race_medal":0,"score":"14468070145","product_id":100046801,"comment_content":"最合适的解决方式应当是老师之前课程用的消息队列：在redis之上再去加一层消息队列去解决问题；课程跟完后这个就在用了，算是学有所用吧。","like_count":3,"discussions":[{"author":{"id":2176180,"avatar":"","nickname":"Geek_5aae47","note":"","ucode":"2E6D974EE836E6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":380326,"discussion_content":"不适用","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1624441026,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2297346,"avatar":"https://static001.geekbang.org/account/avatar/00/23/0e/02/41099234.jpg","nickname":"Django...","note":"","ucode":"56693F8A886FF0","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":367550,"discussion_content":"更复杂了感觉？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1618390304,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2087878,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/db/c6/b2608595.jpg","nickname":"东东","note":"","ucode":"24DCFEFF41538E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":307602,"discussion_content":"不太好","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1600694553,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1306032,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJcxSpNMqwqyicMvdOSr9ic0p1ABiauHnv7g7YQVSJuoHPoQbYDu3YzdpgmSAk2KricUBQ5yibWBWIq75w/132","nickname":"桂城老托尼","note":"","ucode":"139E4B8EE88B79","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":211631,"discussion_content":"用消息队列解决看到10块，下单15块的问题么？ 能详细阐述下不？没太听明白。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584872216,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":183002,"user_name":"hhhh","can_delete":false,"product_type":"c1","uid":1256101,"ip_address":"","ucode":"9E87017424B382","user_header":"https://static001.geekbang.org/account/avatar/00/13/2a/a5/625c0a2e.jpg","comment_is_top":false,"comment_ctime":1582906107,"is_pvip":false,"replies":[{"id":"71078","content":"存储的选择没有谁好谁不好，还是看场景和需求。<br><br>如果只是单纯的存商品参数，MongoDB这种文档数据库更专业一些。<br><br>如果从统一技术栈来考虑，使用MySQL JSON能满足需求的话，也是可以的。","user_name":"作者回复","user_name_real":"李玥","uid":"1501046","ctime":1583114018,"ip_address":"","comment_id":183002,"utype":1}],"discussion_count":1,"race_medal":0,"score":"14467807995","product_id":100046801,"comment_content":"老师想请教下，在存储商品参数的场景，用mysql的json类型存储与mongo, 如何做一下简单的权衡？不胜感激。","like_count":3,"discussions":[{"author":{"id":1501046,"avatar":"https://static001.geekbang.org/account/avatar/00/16/e7/76/79c1f23a.jpg","nickname":"李玥","note":"","ucode":"B19E91EE248591","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":485525,"discussion_content":"存储的选择没有谁好谁不好，还是看场景和需求。\n\n如果只是单纯的存商品参数，MongoDB这种文档数据库更专业一些。\n\n如果从统一技术栈来考虑，使用MySQL JSON能满足需求的话，也是可以的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1583114018,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":333234,"user_name":"大土豆","can_delete":false,"product_type":"c1","uid":1121636,"ip_address":"","ucode":"67445DC3EC9DB0","user_header":"https://static001.geekbang.org/account/avatar/00/11/1d/64/52a5863b.jpg","comment_is_top":false,"comment_ctime":1644224323,"is_pvip":true,"discussion_count":1,"race_medal":0,"score":"10234158915","product_id":100046801,"comment_content":"现在前后端分离之后，做法有变，页面静态化基本都是前端来做了。BFF全部是由前端负责，通常NodeJS来实现BFF，做请求合并，SSR，页面静态化，和后端没有半毛钱关系了，后端只返回数据，没有接触任何页面相关的东西，后端提供的全部都是动态的数据型接口。","like_count":3,"discussions":[{"author":{"id":1010513,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/6b/51/abb7bfe3.jpg","nickname":"小乐天天","note":"","ucode":"1E3D6AB1C629D2","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":550938,"discussion_content":"有没有一些情况，Node JS直接请求Redis数据，而非通过后端的接口？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1644819297,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":208143,"user_name":"PCMD","can_delete":false,"product_type":"c1","uid":1842844,"ip_address":"","ucode":"76A1106F42AEAC","user_header":"https://static001.geekbang.org/account/avatar/00/1c/1e/9c/39f5ff2a.jpg","comment_is_top":false,"comment_ctime":1587283678,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"10177218270","product_id":100046801,"comment_content":"商品详情页 有可能价格依旧是缓存数据。从商品详情页到结算，如果在结算页面，存在两个动作，1 展示商品价格，促销信息，券码相关。2提交订单，在此刻，依旧会走一遍检验和计算，因为会存在活动过期，等等一些列检验，如果检验不通过，需要返回对应信息，告知用户，通过之后，才会去掉订单生成，然后进行支付，锁券，冻库存等。那么，基本不会出现下单和结算价格不一致。那么针对买了以后降价的，根据业务，可以添加申请售后或者价格担保等业务流程","like_count":2},{"had_liked":false,"id":201334,"user_name":"闪闪红星","can_delete":false,"product_type":"c1","uid":1136846,"ip_address":"","ucode":"AF898B944801D2","user_header":"https://static001.geekbang.org/account/avatar/00/11/58/ce/d64fbdad.jpg","comment_is_top":false,"comment_ctime":1585752737,"is_pvip":true,"discussion_count":1,"race_medal":0,"score":"10175687329","product_id":100046801,"comment_content":"我认为可以使用价格版本进行控制，处理下单与生成订单价格不一致的问题。","like_count":2,"discussions":[{"author":{"id":2373458,"avatar":"https://static001.geekbang.org/account/avatar/00/24/37/52/fdfe66a1.jpg","nickname":"小熊","note":"","ucode":"7DDDC76895C1D1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":373423,"discussion_content":"我也是这样想的，比如商家在后台可以看到商品的更改记录。每个商品的skuID都是不一样的，相同的商品，skuID有多个，下单传的那个skuID，就保存那个商品信息。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1620723390,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":185086,"user_name":"暴君•熊","can_delete":false,"product_type":"c1","uid":1101531,"ip_address":"","ucode":"AD1C6055E1F665","user_header":"https://static001.geekbang.org/account/avatar/00/10/ce/db/9dba29ea.jpg","comment_is_top":false,"comment_ctime":1583480190,"is_pvip":false,"replies":[{"id":"71652","content":"这个问题我会在第11节课中专门来讲的。","user_name":"作者回复","user_name_real":"李玥","uid":"1501046","ctime":1583636633,"ip_address":"","comment_id":185086,"utype":1}],"discussion_count":2,"race_medal":0,"score":"10173414782","product_id":100046801,"comment_content":"如果后台更新了商品信息，那么MySQL里的商品信息就比Redis新了，这种情况下当有用户访问时，如何判断需要去MySQL中获取最新信息呢？还是说当更新了就会顺便刷一下缓存？","like_count":2,"discussions":[{"author":{"id":1501046,"avatar":"https://static001.geekbang.org/account/avatar/00/16/e7/76/79c1f23a.jpg","nickname":"李玥","note":"","ucode":"B19E91EE248591","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":486246,"discussion_content":"这个问题我会在第11节课中专门来讲的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1583636633,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1306032,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJcxSpNMqwqyicMvdOSr9ic0p1ABiauHnv7g7YQVSJuoHPoQbYDu3YzdpgmSAk2KricUBQ5yibWBWIq75w/132","nickname":"桂城老托尼","note":"","ucode":"139E4B8EE88B79","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":211642,"discussion_content":"如果Cache Aside 更新策略，\n这种临界情况，如果缓存已经被删除，就要去DB获取更新的信息，然后刷新缓存；\n如果缓存还未删除，就拿到缓存的数据走人，下单时用历史商品信息（更新前的数据）下单即可；","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1584873586,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":182645,"user_name":"Spring coming","can_delete":false,"product_type":"c1","uid":1116196,"ip_address":"","ucode":"9E01F2D987D08B","user_header":"https://static001.geekbang.org/account/avatar/00/11/08/24/1d3bafaf.jpg","comment_is_top":false,"comment_ctime":1582821759,"is_pvip":false,"replies":[{"id":"70685","content":"一般来说，类似于：“读数据-计算-更新数据”这种操作，都会放到同一个数据库事务里面：“开启事务-读数据-计算-更新数据-提交事务”。不会去读缓存，就可以避免你提到的问题了。","user_name":"作者回复","user_name_real":"李玥","uid":"1501046","ctime":1582861226,"ip_address":"","comment_id":182645,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10172756351","product_id":100046801,"comment_content":"我有一问题，应该会出现用户读到的缓存数据和数据库的数据不一致的情况。这种不一致会不会造成保存了错误的缓存数据？我自己一时想不到什么例子，老师见多识广，帮忙答疑","like_count":2,"discussions":[{"author":{"id":1501046,"avatar":"https://static001.geekbang.org/account/avatar/00/16/e7/76/79c1f23a.jpg","nickname":"李玥","note":"","ucode":"B19E91EE248591","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":485398,"discussion_content":"一般来说，类似于：“读数据-计算-更新数据”这种操作，都会放到同一个数据库事务里面：“开启事务-读数据-计算-更新数据-提交事务”。不会去读缓存，就可以避免你提到的问题了。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1582861226,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":264180,"user_name":"于途","can_delete":false,"product_type":"c1","uid":1669343,"ip_address":"","ucode":"70300C6CCCEAF1","user_header":"https://static001.geekbang.org/account/avatar/00/19/78/df/424bdc4a.jpg","comment_is_top":false,"comment_ctime":1606373607,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"5901340903","product_id":100046801,"comment_content":"老师，请假一个问题：CDN是如何从0到1构建起来的呢？","like_count":1},{"had_liked":false,"id":251031,"user_name":"王建坤","can_delete":false,"product_type":"c1","uid":1134287,"ip_address":"","ucode":"84F140AF468D1E","user_header":"https://static001.geekbang.org/account/avatar/00/11/4e/cf/21bea6bb.jpg","comment_is_top":false,"comment_ctime":1601340607,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5896307903","product_id":100046801,"comment_content":"老师您好，商品详情的存储为啥不选用elasticsearch而选择了mongodb？我感觉mongodb的绝大多数功能elasticsearch都能提供。","like_count":1},{"had_liked":false,"id":241150,"user_name":"BugBean","can_delete":false,"product_type":"c1","uid":1834181,"ip_address":"","ucode":"B51232281AD9BC","user_header":"https://static001.geekbang.org/account/avatar/00/1b/fc/c5/ff8b770e.jpg","comment_is_top":false,"comment_ctime":1597203174,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"5892170470","product_id":100046801,"comment_content":"老师,想请问一下,现在一般都是微服务风格的架构,订单服务只有订单表没有商品相关的表,那么订单服务需要构建一个冗余商品快照的表吗","like_count":1,"discussions":[{"author":{"id":1886331,"avatar":"https://static001.geekbang.org/account/avatar/00/1c/c8/7b/153181d7.jpg","nickname":"夜辉","note":"","ucode":"9421385F51FF9E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":365780,"discussion_content":"服务和存储是分开的\n冗余数据可以使用缓存，或者调用商品服务","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1617881897,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":217842,"user_name":"丁丁历险记","can_delete":false,"product_type":"c1","uid":1661704,"ip_address":"","ucode":"A43829E454C067","user_header":"https://static001.geekbang.org/account/avatar/00/19/5b/08/b0b0db05.jpg","comment_is_top":false,"comment_ctime":1589627370,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5884594666","product_id":100046801,"comment_content":"下单毕竟是低频而重要的问题。所以这个时候可以核对一下价格。发生了变更，提醒一下客户。","like_count":1},{"had_liked":false,"id":202726,"user_name":"锐","can_delete":false,"product_type":"c1","uid":1110915,"ip_address":"","ucode":"A245BA96C9471F","user_header":"https://static001.geekbang.org/account/avatar/00/10/f3/83/e2612d81.jpg","comment_is_top":false,"comment_ctime":1586058433,"is_pvip":false,"replies":[{"id":"76056","content":"后面我们会专门讲缓存策略，这种情况还是需要有补偿机制来解决。","user_name":"作者回复","user_name_real":"李玥","uid":"1501046","ctime":1586223452,"ip_address":"","comment_id":202726,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5881025729","product_id":100046801,"comment_content":"如果更新商品信息，缓存删除失败。这种情况要怎么处理呢？请问李sir这种有什么解决方案么，比如后台改了价格，修改了详情页一些描述，用户看到的还是历史数据和价格","like_count":1,"discussions":[{"author":{"id":1501046,"avatar":"https://static001.geekbang.org/account/avatar/00/16/e7/76/79c1f23a.jpg","nickname":"李玥","note":"","ucode":"B19E91EE248591","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":490663,"discussion_content":"后面我们会专门讲缓存策略，这种情况还是需要有补偿机制来解决。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1586223452,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":193165,"user_name":"小伟","can_delete":false,"product_type":"c1","uid":1359701,"ip_address":"","ucode":"124953423491E2","user_header":"https://static001.geekbang.org/account/avatar/00/14/bf/55/198c6104.jpg","comment_is_top":false,"comment_ctime":1584885345,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5879852641","product_id":100046801,"comment_content":"动静分离时一定要做的","like_count":1},{"had_liked":false,"id":186167,"user_name":"sunnywhy","can_delete":false,"product_type":"c1","uid":1513427,"ip_address":"","ucode":"061F4DED04738A","user_header":"https://static001.geekbang.org/account/avatar/00/17/17/d3/936f4599.jpg","comment_is_top":false,"comment_ctime":1583768927,"is_pvip":true,"discussion_count":4,"race_medal":0,"score":"5878736223","product_id":100046801,"comment_content":"我们公司既没有使用mongodb也没有用json column，而是使用了attribute values的设计，设计了很多attribute values表，int attribute values, text attribute values, length attribute values, weight attribute values. Leader的意思是可以从数据库层面上保证属性的类型正确， 想问下，这样设计正常吗？","like_count":1,"discussions":[{"author":{"id":1520538,"avatar":"https://static001.geekbang.org/account/avatar/00/17/33/9a/f295dea5.jpg","nickname":"李正g","note":"","ucode":"A7BEA03BB6537A","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":579765,"discussion_content":"看数据量了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1657677802,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1886331,"avatar":"https://static001.geekbang.org/account/avatar/00/1c/c8/7b/153181d7.jpg","nickname":"夜辉","note":"","ucode":"9421385F51FF9E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":365774,"discussion_content":"那每次查询一个表的数据，都要查询所有的这些表\n查询性能没有受损嘛？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1617881545,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1064018,"avatar":"https://static001.geekbang.org/account/avatar/00/10/3c/52/5951ffb4.jpg","nickname":"Sinvi","note":"","ucode":"2A90976980CA3C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":326688,"discussion_content":"把这节课发给他，让他反思一下","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1605663216,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1012843,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/74/6b/a98162a1.jpg","nickname":"winner_0715","note":"","ucode":"A033A30539181F","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":305107,"discussion_content":"没看懂，求介绍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1599787198,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":184590,"user_name":"渔夫","can_delete":false,"product_type":"c1","uid":1019289,"ip_address":"","ucode":"6BF08FD8923E45","user_header":"https://static001.geekbang.org/account/avatar/00/0f/8d/99/f886543d.jpg","comment_is_top":false,"comment_ctime":1583367729,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5878335025","product_id":100046801,"comment_content":"进入结算页，比较两个价格，价格走高就给个提醒","like_count":1},{"had_liked":false,"id":183521,"user_name":"C J J","can_delete":false,"product_type":"c1","uid":1002287,"ip_address":"","ucode":"603AA1417BD0DE","user_header":"https://static001.geekbang.org/account/avatar/00/0f/4b/2f/186918b4.jpg","comment_is_top":false,"comment_ctime":1583057465,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5878024761","product_id":100046801,"comment_content":"能否在预生成订单号接口做价格校验呢？价格有变前端提示用户，作为一个用户更好接受。另外课程很棒，做了很多电商系统，但由于都是小吵小闹的创业阶段项目，没思考这些系统细节。","like_count":1},{"had_liked":false,"id":182641,"user_name":"Spring coming","can_delete":false,"product_type":"c1","uid":1116196,"ip_address":"","ucode":"9E01F2D987D08B","user_header":"https://static001.geekbang.org/account/avatar/00/11/08/24/1d3bafaf.jpg","comment_is_top":false,"comment_ctime":1582821375,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5877788671","product_id":100046801,"comment_content":"下单的时候把请求的参数以及当前的价格做数据签名，后端接收到请求后拿数据库的数据校验签名，一致的话就说明数据没被篡改，也包含价格没改变这种情况。不过这么做会增加服务器负担，一定有更好的方式，期待一下。","like_count":1},{"had_liked":false,"id":182525,"user_name":"刘楠","can_delete":false,"product_type":"c1","uid":1120773,"ip_address":"","ucode":"9F19D44CBEE039","user_header":"https://static001.geekbang.org/account/avatar/00/11/1a/05/f154d134.jpg","comment_is_top":false,"comment_ctime":1582802394,"is_pvip":false,"replies":[{"id":"70676","content":"是的，这就是典型的用空间换时间的设计。","user_name":"作者回复","user_name_real":"李玥","uid":"1501046","ctime":1582859095,"ip_address":"","comment_id":182525,"utype":1}],"discussion_count":5,"race_medal":0,"score":"5877769690","product_id":100046801,"comment_content":"每个商品详情，都什么一个HTML页面，服务器空间不是需要很大吗？<br>","like_count":1,"discussions":[{"author":{"id":1501046,"avatar":"https://static001.geekbang.org/account/avatar/00/16/e7/76/79c1f23a.jpg","nickname":"李玥","note":"","ucode":"B19E91EE248591","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":485366,"discussion_content":"是的，这就是典型的用空间换时间的设计。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582859095,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1067425,"avatar":"https://static001.geekbang.org/account/avatar/00/10/49/a1/65eb82df.jpg","nickname":"良木","note":"","ucode":"2D63A277233DDA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":188671,"discussion_content":"确实会占用存储空间，一般存储空间不是首要考虑因素，空间换时间，而且存储相对便宜，个人理解","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1582816464,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1121758,"avatar":"https://static001.geekbang.org/account/avatar/00/11/1d/de/62bfa83f.jpg","nickname":"aoe","note":"","ucode":"1C6201EDB4E954","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":188663,"discussion_content":"硬盘存储相对便宜，贵的是带宽","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1582816386,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2297346,"avatar":"https://static001.geekbang.org/account/avatar/00/23/0e/02/41099234.jpg","nickname":"Django...","note":"","ucode":"56693F8A886FF0","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":367523,"discussion_content":"get","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1618387061,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1019351,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/8d/d7/886e9563.jpg","nickname":"张高","note":"","ucode":"9E5EB8675E4956","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":190509,"discussion_content":"一般静态html页面不放业务服务器上，放在专门存静态文件的云存储上，这些存储空间很廉价，能存海量的文件。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582952589,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":182157,"user_name":"谭伟","can_delete":false,"product_type":"c1","uid":1311032,"ip_address":"","ucode":"AEC724819A2773","user_header":"https://static001.geekbang.org/account/avatar/00/14/01/38/104b96a3.jpg","comment_is_top":false,"comment_ctime":1582722543,"is_pvip":false,"discussion_count":6,"race_medal":0,"score":"5877689839","product_id":100046801,"comment_content":"前提是需要明确希望以用户当时看到的价格为准，还是以最新的价格为准。<br>1）以用户看到的价格为准.MVCC方式就行<br>2）最新的话，也是带上版本信息，不一致则提升。","like_count":1,"discussions":[{"author":{"id":1886331,"avatar":"https://static001.geekbang.org/account/avatar/00/1c/c8/7b/153181d7.jpg","nickname":"夜辉","note":"","ucode":"9421385F51FF9E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":365777,"discussion_content":"本质上都带了版本信息\n以用户看到的价格为准，电商/商家承担损失？\n还有一种情形：活动失效，\n应该主动提醒","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1617881783,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1160644,"avatar":"https://static001.geekbang.org/account/avatar/00/11/b5/c4/9148b40d.jpg","nickname":"SunshineBoy","note":"","ucode":"FC54CD1815CCBA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":273754,"discussion_content":"非常好的思路，最好是当时下单的价格。我们是配置不同的价格模版，结算的时候以下单的模版为准","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1590497801,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1306032,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJcxSpNMqwqyicMvdOSr9ic0p1ABiauHnv7g7YQVSJuoHPoQbYDu3YzdpgmSAk2KricUBQ5yibWBWIq75w/132","nickname":"桂城老托尼","note":"","ucode":"139E4B8EE88B79","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":211636,"discussion_content":"一定是所见即所得了，不然会被用户怼的。 \n一般更新价格，必须更新商品版本，不知道在老师这个场景下是否是这样。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584872303,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1251835,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/oiboHpgukqib2ASXeU0H7W1ibgRMqyrNE5KaWicicPEDy0ia8YdoneZAtvW0EFIiaqZJp2OS4dnweOgXaJ5EjJicicEqic5A/132","nickname":"覃钰栋","note":"","ucode":"19080C463658EF","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":187405,"discussion_content":"非常好的思路，请问可以讲讲实战中MVCC的思路么","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582730895,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1311032,"avatar":"https://static001.geekbang.org/account/avatar/00/14/01/38/104b96a3.jpg","nickname":"谭伟","note":"","ucode":"AEC724819A2773","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1251835,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/oiboHpgukqib2ASXeU0H7W1ibgRMqyrNE5KaWicicPEDy0ia8YdoneZAtvW0EFIiaqZJp2OS4dnweOgXaJ5EjJicicEqic5A/132","nickname":"覃钰栋","note":"","ucode":"19080C463658EF","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":194432,"discussion_content":"这个设计很常用，可以查看下Mysql的MVCC","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1583218696,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":187405,"ip_address":""},"score":194432,"extra":""},{"author":{"id":1886331,"avatar":"https://static001.geekbang.org/account/avatar/00/1c/c8/7b/153181d7.jpg","nickname":"夜辉","note":"","ucode":"9421385F51FF9E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1251835,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/oiboHpgukqib2ASXeU0H7W1ibgRMqyrNE5KaWicicPEDy0ia8YdoneZAtvW0EFIiaqZJp2OS4dnweOgXaJ5EjJicicEqic5A/132","nickname":"覃钰栋","note":"","ucode":"19080C463658EF","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":365778,"discussion_content":"下单关联带历史版本的商品","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1617881803,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":187405,"ip_address":""},"score":365778,"extra":""}]}]},{"had_liked":false,"id":348332,"user_name":"锐锐","can_delete":false,"product_type":"c1","uid":2562434,"ip_address":"","ucode":"FCBA8CF5AB2325","user_header":"https://static001.geekbang.org/account/avatar/00/27/19/82/5acaca40.jpg","comment_is_top":false,"comment_ctime":1655001834,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1655001834","product_id":100046801,"comment_content":"老师，有个疑问为啥一定要保存商品的历史数据呢，可不可以直接把商品的信息都放到订单中，这样订单中的信息就是那一时刻的了。","like_count":0},{"had_liked":false,"id":346134,"user_name":"摊牌","can_delete":false,"product_type":"c1","uid":1453182,"ip_address":"","ucode":"F142596BFE4594","user_header":"https://static001.geekbang.org/account/avatar/00/16/2c/7e/f1efd18b.jpg","comment_is_top":false,"comment_ctime":1652851902,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1652851902","product_id":100046801,"comment_content":"回答思考题<br>当用户下单时刚好赶上产品调价的场景下，第一点在调价逻辑里首先对商品价格信息的缓存数据删除，再进行调价；第二点在下单逻辑里检查价格是否发生变化，有变化提醒用户确认继续是否下单。","like_count":0},{"had_liked":false,"id":340777,"user_name":"幸福的土豆","can_delete":false,"product_type":"c1","uid":1350149,"ip_address":"","ucode":"FDC3ECCE8704EB","user_header":"https://static001.geekbang.org/account/avatar/00/14/9a/05/24131a87.jpg","comment_is_top":false,"comment_ctime":1649135103,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1649135103","product_id":100046801,"comment_content":"老师好，还有一个问题想了解下，前台读取对象存储中的图片或视频，需要传对应的ID，这个ID是通过什么方式给前台进行调用的呢","like_count":0},{"had_liked":false,"id":339617,"user_name":"Geek_35b029","can_delete":false,"product_type":"c1","uid":2898194,"ip_address":"","ucode":"731E04AC894197","user_header":"","comment_is_top":false,"comment_ctime":1648232531,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1648232531","product_id":100046801,"comment_content":"我还是不太理解为什么需要创建一个商品数据的每一个历史版本的快照。课程里说是因为要跟订单相关联。能够举个例子嘛？ <br>比如， 我有一个商品 A,  它在周一的价格是 10块， 周四的价格是 13块， 周五的价格是 20 块， 然后我分别在周四和周五下了两次单。 这种情况下 商品快照表长什么样 然后订单表长什么样，然后在什么场景下 需要把这两张表连接起来？","like_count":0},{"had_liked":false,"id":337309,"user_name":"Jamie","can_delete":false,"product_type":"c1","uid":1364550,"ip_address":"","ucode":"DB850A58DB0893","user_header":"https://static001.geekbang.org/account/avatar/00/14/d2/46/a86b950d.jpg","comment_is_top":false,"comment_ctime":1646744687,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1646744687","product_id":100046801,"comment_content":"加上一个商品的版本号，但是有一个问题就是可能跨版本号较大，这个时候就需要看下能跨版本号的最大长度了","like_count":0},{"had_liked":false,"id":322315,"user_name":"凯文小猪","can_delete":false,"product_type":"c1","uid":1980201,"ip_address":"","ucode":"36D8AD0229547F","user_header":"https://static001.geekbang.org/account/avatar/00/1e/37/29/b3af57a7.jpg","comment_is_top":false,"comment_ctime":1637301493,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1637301493","product_id":100046801,"comment_content":"我们的方案是用openresty渲染lua脚本 解决大量spu反复上架问题 其他的和老师阐述的差不多。<br>这里有个问题：比方说老师说的spu作为一个促销品重新上架这种场景，京东真的是反复生成新的静态页。而这些spu又是如何存储、管理呢？<br>因为静态页如果作为缓存加载在redis等kv存储中，那么每天上线几万SPU的场景需要存储空间又是如何解决的？<br><br><br>回答老师课后问题：我们采用的解决方案是版本号 因为我们要生成订单快照，所以每个历史变更都会存储下来。效果等同于mvcc，但实际和mvcc完全无关。需要注意的是，这种版本除了要和请求参数一起加密外，还要设定一个有效时间 防止外面被人恶意刷单","like_count":0,"discussions":[{"author":{"id":1010513,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/6b/51/abb7bfe3.jpg","nickname":"小乐天天","note":"","ucode":"1E3D6AB1C629D2","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":550941,"discussion_content":"请教一下，你们是一个品类一个模板吗？ SKU的信息是渲染进去的？ 还是说一个SKU一个模板，只动态渲染价格？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1644820272,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":296971,"user_name":"Daniel","can_delete":false,"product_type":"c1","uid":1479124,"ip_address":"","ucode":"73EBE735898072","user_header":"https://static001.geekbang.org/account/avatar/00/16/91/d4/4a047e41.jpg","comment_is_top":false,"comment_ctime":1623244708,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1623244708","product_id":100046801,"comment_content":"其实我最近还遇到一种存储需求。<br>就是数据导入后需要进行删除，每个导入的数据通过计算后应该都会有几十万条数据生成，总量也有上亿条。查看还好，不会太频繁。现在需要手动做分页，所以程序处理起来超级慢，请问老师有啥建议吗？","like_count":0},{"had_liked":false,"id":294477,"user_name":"Ling","can_delete":false,"product_type":"c1","uid":1323264,"ip_address":"","ucode":"F16F675C1D1EA9","user_header":"https://static001.geekbang.org/account/avatar/00/14/31/00/b5fd38df.jpg","comment_is_top":false,"comment_ctime":1621956706,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1621956706","product_id":100046801,"comment_content":"对于静态化的问题，其实也不必一定要生成html静态文件。可以把拼接模板，输出页面内容的后端接口，直接作为CDN的源站。<br>1. 只要CDN缓存不过期，就不会读取接口；<br>2. 当商家更新了商品的时候，调用刷新CDN的接口即可","like_count":0},{"had_liked":false,"id":292212,"user_name":"小熊","can_delete":false,"product_type":"c1","uid":2373458,"ip_address":"","ucode":"7DDDC76895C1D1","user_header":"https://static001.geekbang.org/account/avatar/00/24/37/52/fdfe66a1.jpg","comment_is_top":false,"comment_ctime":1620722396,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1620722396","product_id":100046801,"comment_content":"修改价格时，将之前的价格保存一条记录。新的价格和之前的价格ID是不同的，当用户传进来的是老的商品信息ID，那就把老的商品信息价格，保存到订单中。和新的不会影响。","like_count":0},{"had_liked":false,"id":291021,"user_name":"建强","can_delete":false,"product_type":"c1","uid":1397126,"ip_address":"","ucode":"62B03D0E0C64EC","user_header":"https://static001.geekbang.org/account/avatar/00/15/51/86/b5fd8dd8.jpg","comment_is_top":false,"comment_ctime":1619946305,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1619946305","product_id":100046801,"comment_content":"对于正在调价的商品，用户看到的商详页的价格还是缓存中的信息，下单时的商品价格是实际的价格，可以比较一下两者的价格，如果不一致，则需要更新缓存，同时在订单中给出商品调价前后的价格，并给予必要的调价说明，这样用户就能明白商品价格在下单前后为什么会有不同。","like_count":0},{"had_liked":false,"id":286319,"user_name":"凯文小猪","can_delete":false,"product_type":"c1","uid":1980201,"ip_address":"","ucode":"36D8AD0229547F","user_header":"https://static001.geekbang.org/account/avatar/00/1e/37/29/b3af57a7.jpg","comment_is_top":false,"comment_ctime":1617255099,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1617255099","product_id":100046801,"comment_content":"下单流程通常是要在购物车 结算页反复校验的 通常这些都可以用mvcc的当前读 或版本号来解决","like_count":0},{"had_liked":false,"id":278272,"user_name":"flyCoder","can_delete":false,"product_type":"c1","uid":1074897,"ip_address":"","ucode":"82FB7B60775978","user_header":"https://static001.geekbang.org/account/avatar/00/10/66/d1/8664c464.jpg","comment_is_top":false,"comment_ctime":1612853917,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1612853917","product_id":100046801,"comment_content":"DAU 难道不是日均活跃用户数吗？不是日均访问次数","like_count":0},{"had_liked":false,"id":274259,"user_name":"Jone_乔泓恺","can_delete":false,"product_type":"c1","uid":1407941,"ip_address":"","ucode":"158154301D5E40","user_header":"https://static001.geekbang.org/account/avatar/00/15/7b/c5/35f92dad.jpg","comment_is_top":false,"comment_ctime":1610944033,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1610944033","product_id":100046801,"comment_content":"老师您好 有个问题请教下：商品版本表都要存储哪些字段信息？是把商品表的字段全部拷贝一条记录+版本号放到商品版本表里嘛？","like_count":0},{"had_liked":false,"id":269491,"user_name":"柯察金","can_delete":false,"product_type":"c1","uid":1115149,"ip_address":"","ucode":"F722BF8FCD2C47","user_header":"https://static001.geekbang.org/account/avatar/00/11/04/0d/3dc5683a.jpg","comment_is_top":false,"comment_ctime":1608686258,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1608686258","product_id":100046801,"comment_content":"老师，是不是同一个商品的所有版本都是不同的 id ，然后快照表里面要存储所有的历史商品记录","like_count":0},{"had_liked":false,"id":264166,"user_name":"Javatar","can_delete":false,"product_type":"c1","uid":2032840,"ip_address":"","ucode":"E216645CDF632C","user_header":"https://static001.geekbang.org/account/avatar/00/1f/04/c8/3c7af100.jpg","comment_is_top":false,"comment_ctime":1606370966,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1606370966","product_id":100046801,"comment_content":"之前没用过mongodb，想问老师一个比较细节的问题：<br><br>文中提到商品参数是以一个大段的json存到mongodb的，那么在用户请求商品详情页时（cdn中的静态化的html失效了，对应图中虚线的部分），总要从mongo中把商品参数查出来对吧？<br><br>那么mongo的部分怎么设计呢？<br><br>我最开始还以为mongo在插入文档时，会返回objectId，那么我就可以把这个objectId落到mysql中，这样数据就关联起来了，到时查的时候可以一并查出来。<br>但发现mongo插入文档时似乎不会返回objectId，所以想问下mongo这块要怎么查？","like_count":0},{"had_liked":false,"id":254124,"user_name":"zoe","can_delete":false,"product_type":"c1","uid":1913832,"ip_address":"","ucode":"87B528E92A5D83","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTImIHLLV5Rft4CEft2KyDfWRdzLZwvaflXJMBbTnXvibib0JhAmficPrJegb4Jj98HhBSwhxiccX0Tcbw/132","comment_is_top":false,"comment_ctime":1603069452,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1603069452","product_id":100046801,"comment_content":"一般商品价格是存在缓存中的，在调价时，可以给这个商品对应的记录设置一个过期时间","like_count":0},{"had_liked":false,"id":251998,"user_name":"否极泰来","can_delete":false,"product_type":"c1","uid":1439355,"ip_address":"","ucode":"C249173266251A","user_header":"https://static001.geekbang.org/account/avatar/00/15/f6/7b/b6abcbbe.jpg","comment_is_top":false,"comment_ctime":1602046145,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1602046145","product_id":100046801,"comment_content":"静态化<br>不需要动态的构建页面  不需要查询数据库、缓存、处理数据，直接返回html  速度快<br>就是不知道现在前后端分离了，这项技术 前端还支持吗～","like_count":0},{"had_liked":false,"id":245343,"user_name":"pine","can_delete":false,"product_type":"c1","uid":1133385,"ip_address":"","ucode":"153AD45511C17A","user_header":"https://static001.geekbang.org/account/avatar/00/11/4b/49/ae1afde0.jpg","comment_is_top":false,"comment_ctime":1598920670,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1598920670","product_id":100046801,"comment_content":"有个单独的缓存服务，当有数据更新例如价格高速mq  消费方得到消息去刷新缓存。","like_count":0},{"had_liked":false,"id":234707,"user_name":"hbyhl","can_delete":false,"product_type":"c1","uid":1069279,"ip_address":"","ucode":"FC9537FE7E3111","user_header":"","comment_is_top":false,"comment_ctime":1594776991,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1594776991","product_id":100046801,"comment_content":"老师好，几亿到几十亿条的商品基本信息存在数据库中，常用的做法是分库分表吗？实践中一个分表存到少数据呢？需要的数据库集群的规模要多大呢？","like_count":0},{"had_liked":false,"id":220462,"user_name":"的苹果","can_delete":false,"product_type":"c1","uid":1531921,"ip_address":"","ucode":"9C64380548612B","user_header":"https://static001.geekbang.org/account/avatar/00/17/60/11/fbee204e.jpg","comment_is_top":false,"comment_ctime":1590246473,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1590246473","product_id":100046801,"comment_content":"学习到了用分而治之的方法存储复杂的电商数据。","like_count":0},{"had_liked":false,"id":220150,"user_name":"啊啊啊哦哦","can_delete":false,"product_type":"c1","uid":1309877,"ip_address":"","ucode":"68C7153ECAAC57","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/RNO4yZyBvic914hewmNNE8iblYDcfv5yGHZ9OnKuCuZXNmGR0F5qV3icKLT2xpMt66GyEpicZVvrmz8A6TIqt92MQg/132","comment_is_top":false,"comment_ctime":1590190512,"is_pvip":false,"replies":[{"id":"81465","content":"对于这个问题，没有统一的答案。淘宝把规格尺寸的同一个商品，当做一个SKU处理，京东则当做不同的SKU处理。<br><br>个人的建议是，当做不同的SKU处理，逻辑上比较简单清晰一些。","user_name":"作者回复","user_name_real":"李玥","uid":"1501046","ctime":1590369419,"ip_address":"","comment_id":220150,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1590190512","product_id":100046801,"comment_content":"老师你好。电商详情页上商品会根据不同的规格尺寸等价格不同。而文章说的商品表存一个价格 参数存在mongo里。 是mongo对应的参数里另存一个价格字段吗。   还是本质上他们属于不同的商品有个自的商品id。如若不是当不同参数对应的价格更改了都要 体现在商品版本表里吗","like_count":0,"discussions":[{"author":{"id":1501046,"avatar":"https://static001.geekbang.org/account/avatar/00/16/e7/76/79c1f23a.jpg","nickname":"李玥","note":"","ucode":"B19E91EE248591","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":496059,"discussion_content":"对于这个问题，没有统一的答案。淘宝把规格尺寸的同一个商品，当做一个SKU处理，京东则当做不同的SKU处理。\n\n个人的建议是，当做不同的SKU处理，逻辑上比较简单清晰一些。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1590369419,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":219695,"user_name":"不忘初心","can_delete":false,"product_type":"c1","uid":1226554,"ip_address":"","ucode":"CD36F5EE1E1F4D","user_header":"https://static001.geekbang.org/account/avatar/00/12/b7/3a/a00ec799.jpg","comment_is_top":false,"comment_ctime":1590065226,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1590065226","product_id":100046801,"comment_content":"满满的干货，感谢老师","like_count":0},{"had_liked":false,"id":218374,"user_name":"啥也不会","can_delete":false,"product_type":"c1","uid":1040584,"ip_address":"","ucode":"2E0F593B237C59","user_header":"https://static001.geekbang.org/account/avatar/00/0f/e0/c8/4ad13219.jpg","comment_is_top":false,"comment_ctime":1589791285,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1589791285","product_id":100046801,"comment_content":"MongoDB 和 elasticsearch 在存储这些异构的数据内容的时候 有什么本质的区别和优劣呢？","like_count":0,"discussions":[{"author":{"id":1134287,"avatar":"https://static001.geekbang.org/account/avatar/00/11/4e/cf/21bea6bb.jpg","nickname":"王建坤","note":"","ucode":"84F140AF468D1E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":309540,"discussion_content":"我也比较倾向于elasticsearch","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1601340670,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":204622,"user_name":"Yezhiwei","can_delete":false,"product_type":"c1","uid":1005157,"ip_address":"","ucode":"31E8E33688CBEC","user_header":"https://static001.geekbang.org/account/avatar/00/0f/56/65/22a37a8e.jpg","comment_is_top":false,"comment_ctime":1586430400,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1586430400","product_id":100046801,"comment_content":"文章中老师提到了 MongoDB 不需要提前定义集合的结构，但是在映射到 Java 对象的时候又必须先有类和属性，这样的话貌似又没有办法用类与集合中的属性对应起来，因为一个MongoDB 集合里的每行记录的字段都可以不同，请问这个有没有最佳实践哈？一般使用 Mongodb时集合里的属性还是会提前定义好","like_count":0,"discussions":[{"author":{"id":1886331,"avatar":"https://static001.geekbang.org/account/avatar/00/1c/c8/7b/153181d7.jpg","nickname":"夜辉","note":"","ucode":"9421385F51FF9E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":365781,"discussion_content":"json数据，有工具（例如FastJSON）可以解析为HashMap","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1617882022,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":199932,"user_name":"跃然","can_delete":false,"product_type":"c1","uid":1634828,"ip_address":"","ucode":"A7102EE599F57E","user_header":"https://static001.geekbang.org/account/avatar/00/18/f2/0c/c6bec9ff.jpg","comment_is_top":false,"comment_ctime":1585501314,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1585501314","product_id":100046801,"comment_content":"老师好，请教下，编辑商品规格时，目前采用的策略是全部删除，再重新添加。主流电商会采用什么方案呢？","like_count":0},{"had_liked":false,"id":198441,"user_name":"ljr_bird","can_delete":false,"product_type":"c1","uid":1618685,"ip_address":"","ucode":"13D2885BA6CDFF","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/2QR4YBpeXgVXGXIfnibt80oLbjibIdp1c5ty5wbBTHvgheZRcLWDZAVklOpG2yjlDS2N3rZH66pDOvsvvqI2ic7icw/132","comment_is_top":false,"comment_ctime":1585451785,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1585451785","product_id":100046801,"comment_content":"对于思考题的，我的想法是请求页面时保存一个级别或者商品信息之类的版本号，然后下单的时候再把这个版本号提交后台，后台可以通过像redis的hash功能来判断是否为最新的版本","like_count":0},{"had_liked":false,"id":197947,"user_name":"阿冲","can_delete":false,"product_type":"c1","uid":1062514,"ip_address":"","ucode":"06BF66D9009659","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKg7RjNMzSrIwUnjYstbdicVv5MawrQLTHc6rdpwm0Q04b7icj7eAb0F8zSxe8gmM99QBvTECK5KvrQ/132","comment_is_top":false,"comment_ctime":1585404783,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1585404783","product_id":100046801,"comment_content":"下单的时候把价格也带过去，然后做个判断是否就可以了？","like_count":0},{"had_liked":false,"id":194454,"user_name":"J.Smile","can_delete":false,"product_type":"c1","uid":1336475,"ip_address":"","ucode":"C4D98DFDBF7584","user_header":"https://static001.geekbang.org/account/avatar/00/14/64/9b/0b578b08.jpg","comment_is_top":false,"comment_ctime":1585060536,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1585060536","product_id":100046801,"comment_content":"传递商品版本号，后端查询对应的价格信息。","like_count":0},{"had_liked":false,"id":193776,"user_name":"九黎曦","can_delete":false,"product_type":"c1","uid":1064393,"ip_address":"","ucode":"7F8A8F650AC4EF","user_header":"https://static001.geekbang.org/account/avatar/00/10/3d/c9/9ea5b6b5.jpg","comment_is_top":false,"comment_ctime":1584961666,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1584961666","product_id":100046801,"comment_content":"直接切分静态页面，保存每一个页面块，这样即可以使用对象存储的cdn加速，还能保存对应历史快照（每个订单引用对应快照，当然，也可以执行定时任务对大量重复的快照连接块整合，操作对象在时间跨度在两个月以上的）","like_count":0},{"had_liked":false,"id":193161,"user_name":"小伟","can_delete":false,"product_type":"c1","uid":1359701,"ip_address":"","ucode":"124953423491E2","user_header":"https://static001.geekbang.org/account/avatar/00/14/bf/55/198c6104.jpg","comment_is_top":false,"comment_ctime":1584885281,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1584885281","product_id":100046801,"comment_content":"对于价格波动，也可以在从详情页跳转到订单页时检查价格是否一致，不一致则表示发生了价格波动，可以弹框提示用户价格变动了，是否继续等","like_count":0},{"had_liked":false,"id":192850,"user_name":"桂城老托尼","can_delete":false,"product_type":"c1","uid":1306032,"ip_address":"","ucode":"139E4B8EE88B79","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJcxSpNMqwqyicMvdOSr9ic0p1ABiauHnv7g7YQVSJuoHPoQbYDu3YzdpgmSAk2KricUBQ5yibWBWIq75w/132","comment_is_top":false,"comment_ctime":1584875646,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1584875646","product_id":100046801,"comment_content":"个人认为商品详情页可以不那么准（用户和商品还没发生实际的关系）；下单后订单页必须要准；<br>以下单时间为准，在之前的，走老价格，在之后的走新价格；店家的调价工具里应该也有类似的条款约束；<br>历史表可以解决这个问题，价格里关联的是最新的gmt_version；","like_count":0},{"had_liked":false,"id":191997,"user_name":"image","can_delete":false,"product_type":"c1","uid":1039069,"ip_address":"","ucode":"A45BFF284F8933","user_header":"https://static001.geekbang.org/account/avatar/00/0f/da/dd/1e5e7b0c.jpg","comment_is_top":false,"comment_ctime":1584808881,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1584808881","product_id":100046801,"comment_content":"用户下单快照保存一段时间，如果查询相同商品还是显示快照信息","like_count":0,"discussions":[{"author":{"id":2297346,"avatar":"https://static001.geekbang.org/account/avatar/00/23/0e/02/41099234.jpg","nickname":"Django...","note":"","ucode":"56693F8A886FF0","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":367547,"discussion_content":"这个快照只是下单快照，查询商品是请求静态化后的页面或向后端请求，2个东西","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1618389494,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":186360,"user_name":"远方","can_delete":false,"product_type":"c1","uid":1233678,"ip_address":"","ucode":"0204484866E43F","user_header":"https://static001.geekbang.org/account/avatar/00/12/d3/0e/c057ff45.jpg","comment_is_top":false,"comment_ctime":1583829960,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1583829960","product_id":100046801,"comment_content":"谢谢老师 就需要这样讲解设计的 ","like_count":0},{"had_liked":false,"id":184519,"user_name":"大秦皇朝","can_delete":false,"product_type":"c1","uid":1301113,"ip_address":"","ucode":"0F72D0D2FAEAF2","user_header":"https://static001.geekbang.org/account/avatar/00/13/da/79/9b093890.jpg","comment_is_top":false,"comment_ctime":1583332692,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1583332692","product_id":100046801,"comment_content":"针对本节课的问题，有个比较曲线救国的想法：下单的时候进行时间和价格检查，生成订单（代付款状态，一定时间不付款后订单自动取消）包含这两个主要因素，这样判定后，不管是在价格变动前还是价格变动后，用户都能直观的看到自己提交的时间点和价格，也不存在什么坑不坑的问题吧？比如24点整活动结束，那你下单是次日0点0分01秒，那你已经过了活动时间了，所以应该接受价格变更？","like_count":0},{"had_liked":false,"id":184315,"user_name":"Jxin","can_delete":false,"product_type":"c1","uid":1251111,"ip_address":"","ucode":"4C03928388C413","user_header":"https://static001.geekbang.org/account/avatar/00/13/17/27/ec30d30a.jpg","comment_is_top":false,"comment_ctime":1583288398,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1583288398","product_id":100046801,"comment_content":"1.问题：待付款单和商详价格不一致。<br>2.生成待付款单时要携带当前商详的价格，用于后端做价格检验，只要通过检验便确定当前sku以该实时价格出售（待付款单的有效期内）。检验不通过就给予用户友好提示，并在ui交互后刷新商详。<br><br>并非交易平台开发，仅面对问题个人思考出来的交互业务逻辑。如有错误还请栏主指出。","like_count":0},{"had_liked":false,"id":184180,"user_name":"撒旦的堕落","can_delete":false,"product_type":"c1","uid":1116864,"ip_address":"","ucode":"15F6AA41EE556F","user_header":"https://static001.geekbang.org/account/avatar/00/11/0a/c0/401c240e.jpg","comment_is_top":false,"comment_ctime":1583243713,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1583243713","product_id":100046801,"comment_content":"老师的问题  我想到上个小节的版本号了  每次修改都有一个价格对应的版本号   页面保存价格的版本号  提交的时候验证版本号 是不是最新的版本号  至于验证后是提示用户页面失效 还是允许用户支付成功 那就看需求了吧  <br>老师的商品详情静态化给了我很大启发  我现在在一家教育平台负责视频学习模块的开发 这个页面主要的请求数据就是章节结构  因为会涉及到多个服务之间的调用 并且设计到不同层级数据结构的组装  而这些课程的数据章节数据在整个页面请求的占比又是非常大的一块  并且运行期间是不会变化的  感觉非常适合老师说的静态化 但是对cdn以及静态化技术的不了解  老师可否后面详细说说这个呢","like_count":0},{"had_liked":false,"id":183880,"user_name":"卫江","can_delete":false,"product_type":"c1","uid":1101226,"ip_address":"","ucode":"DE2F7A6916F1A9","user_header":"https://static001.geekbang.org/account/avatar/00/10/cd/aa/33d48789.jpg","comment_is_top":false,"comment_ctime":1583152867,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1583152867","product_id":100046801,"comment_content":"思考题，我感觉可以通过下单的时候带上商品id，后台修改价钱的时候也生成新的商品id的方式来解决，就像老师提到的订单里面包含的商品id肯定是下单当时的一样","like_count":0,"discussions":[{"author":{"id":1306032,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJcxSpNMqwqyicMvdOSr9ic0p1ABiauHnv7g7YQVSJuoHPoQbYDu3YzdpgmSAk2KricUBQ5yibWBWIq75w/132","nickname":"桂城老托尼","note":"","ucode":"139E4B8EE88B79","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":211646,"discussion_content":"不一定非得生成新的SKU，应该升级版本就好了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584873832,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":183853,"user_name":"felix","can_delete":false,"product_type":"c1","uid":1086157,"ip_address":"","ucode":"DF514D0BB9B508","user_header":"https://static001.geekbang.org/account/avatar/00/10/92/cd/d39e568c.jpg","comment_is_top":false,"comment_ctime":1583145791,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1583145791","product_id":100046801,"comment_content":"感觉这个专栏被名字耽误了，乍看还以为是讲硬件的。如果叫“后端数据处理全攻略”，是不是更合适，更体现价值。😝","like_count":0,"discussions":[{"author":{"id":1886331,"avatar":"https://static001.geekbang.org/account/avatar/00/1c/c8/7b/153181d7.jpg","nickname":"夜辉","note":"","ucode":"9421385F51FF9E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":365782,"discussion_content":"啊？后端存储不是指软件？\n数据处理你不觉得更像大数据嘛？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1617882171,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":183849,"user_name":"百威","can_delete":false,"product_type":"c1","uid":1074843,"ip_address":"","ucode":"758199FDD0B44F","user_header":"https://static001.geekbang.org/account/avatar/00/10/66/9b/59776420.jpg","comment_is_top":false,"comment_ctime":1583145181,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1583145181","product_id":100046801,"comment_content":"为啥感觉思考题的侧重点更多的是业务上的痛点，即如何找到买卖双方的一个平衡点😂","like_count":0},{"had_liked":false,"id":183660,"user_name":"不能扮演天使","can_delete":false,"product_type":"c1","uid":1046172,"ip_address":"","ucode":"9922330BFF7FFB","user_header":"https://static001.geekbang.org/account/avatar/00/0f/f6/9c/b457a937.jpg","comment_is_top":false,"comment_ctime":1583109994,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1583109994","product_id":100046801,"comment_content":"再将最终支付价格入库的时候肯定还要再做一次商品价格检验的，如果哪次前端网络抖动传过来的价格突然变0，不可能直接将这个价格入库的，对于这种改价的问题我觉得这是很正常的事情，商品前一刻卖10块，过了某个时间点卖15，说明商家这一刻就是要卖15的，至于用户看到的价格不一，提前友好提示用户就行了。因为商家调价也是预先准备好的。","like_count":0},{"had_liked":false,"id":183580,"user_name":"漏脚脖","can_delete":false,"product_type":"c1","uid":1615539,"ip_address":"","ucode":"214AE52EC201E6","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTI6LXcIqb5K48nia8d4zmdsD1M9AZeyXoGrLzX5xvqfN0fqXOsYKUWLbZvZ8TtJCXWmYbCkCXg93dQ/132","comment_is_top":false,"comment_ctime":1583070810,"is_pvip":false,"replies":[{"id":"71119","content":"我说的“js动态填充”就是用ajax请求接口填充数据。这个过程CDN不参与。","user_name":"作者回复","user_name_real":"李玥","uid":"1501046","ctime":1583117051,"ip_address":"","comment_id":183580,"utype":1}],"discussion_count":4,"race_medal":0,"score":"1583070810","product_id":100046801,"comment_content":"感谢老师的回答，去了解了一下cdn，大概了解了html静态化是咋回事<br><br>老师说的是把商品介绍，应该就是图文详情吧，后台编辑商品的图文详情的时候，把这部分生成一个文件或者什么，存到cdn，cdn有很多节点散布全国，前端用户访问的时候，cdn选择离用户最近的节点返回这个sku对应的数据<br><br>cdn就跟对象存储一样，我们直接把文件丢到cdn上，这样就避免了跟数据库的交互，但带来的问题就是cdn好多节点的存的都是相同文件，这个商品介绍要是进行了修改或者说前端页面改版的话，每个节点的文件都要重新刷，这样就很慢（不知道说的对不对）<br><br>可能因为这样才有了老师说的用js动态填充，不过这个我不太懂，去看了京东的商品详情页，也没看懂是怎么把数据填充到页面的，具体的动态是怎么个动法呢，跟我们正常使用ajax请求接口后填充数据有啥区别，这个时候cdn充当一个什么角色呢？希望老师和大神们看到了能不能展开说一下，谢谢","like_count":0,"discussions":[{"author":{"id":1501046,"avatar":"https://static001.geekbang.org/account/avatar/00/16/e7/76/79c1f23a.jpg","nickname":"李玥","note":"","ucode":"B19E91EE248591","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":485719,"discussion_content":"我说的“js动态填充”就是用ajax请求接口填充数据。这个过程CDN不参与。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1583117051,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1306032,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJcxSpNMqwqyicMvdOSr9ic0p1ABiauHnv7g7YQVSJuoHPoQbYDu3YzdpgmSAk2KricUBQ5yibWBWIq75w/132","nickname":"桂城老托尼","note":"","ucode":"139E4B8EE88B79","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":211648,"discussion_content":"我理解 html静态化  - 可以简单理解成详情页的缓存即可，缓存怎么更新的，cdn/nginx里静态资源就怎么更新。 通用的解决方案就是mvcc了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584874085,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1615539,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTI6LXcIqb5K48nia8d4zmdsD1M9AZeyXoGrLzX5xvqfN0fqXOsYKUWLbZvZ8TtJCXWmYbCkCXg93dQ/132","nickname":"漏脚脖","note":"","ucode":"214AE52EC201E6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1306032,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJcxSpNMqwqyicMvdOSr9ic0p1ABiauHnv7g7YQVSJuoHPoQbYDu3YzdpgmSAk2KricUBQ5yibWBWIq75w/132","nickname":"桂城老托尼","note":"","ucode":"139E4B8EE88B79","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":212404,"discussion_content":"请问mvcc是为了保证所节点没有全部更新完的时候，前段看到的还是老版本吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584968993,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":211648,"ip_address":""},"score":212404,"extra":""},{"author":{"id":1306032,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJcxSpNMqwqyicMvdOSr9ic0p1ABiauHnv7g7YQVSJuoHPoQbYDu3YzdpgmSAk2KricUBQ5yibWBWIq75w/132","nickname":"桂城老托尼","note":"","ucode":"139E4B8EE88B79","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1615539,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTI6LXcIqb5K48nia8d4zmdsD1M9AZeyXoGrLzX5xvqfN0fqXOsYKUWLbZvZ8TtJCXWmYbCkCXg93dQ/132","nickname":"漏脚脖","note":"","ucode":"214AE52EC201E6","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":212875,"discussion_content":"如果控制的资源粒度是整个页面，没更新完成看到是老的符合预期;不过我觉得应该是更细粒度的控制，哪些更新完了就更新版本，刷资源","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585027395,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":212404,"ip_address":""},"score":212875,"extra":""}]}]},{"had_liked":false,"id":183546,"user_name":"一剑","can_delete":false,"product_type":"c1","uid":1022127,"ip_address":"","ucode":"93ADD5B5215D4C","user_header":"https://static001.geekbang.org/account/avatar/00/0f/98/af/3945cea4.jpg","comment_is_top":false,"comment_ctime":1583063594,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1583063594","product_id":100046801,"comment_content":"思考题，我的理解：所谓的修改价格其实是新增一条了价格记录，并且把老的记录下架，下单的时候带上当时的价格id，至于用户本次下单是否有效则取决于业务规则，允许就记录用户购买的价格信息，否则就报错","like_count":0},{"had_liked":false,"id":183537,"user_name":"L","can_delete":false,"product_type":"c1","uid":1244290,"ip_address":"","ucode":"9F125EAC36CBEE","user_header":"https://static001.geekbang.org/account/avatar/00/12/fc/82/abf28df3.jpg","comment_is_top":false,"comment_ctime":1583061114,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1583061114","product_id":100046801,"comment_content":"对于「使用MongoDB保存商品参数」这块，有个疑问🤔️，商品参数是由商品属性和商品属性项组成，比如一个商品的参数是“颜色:红色”，“颜色”就是商品属性，“红色”就是商品属性项，如果运营人员在管理后台把商品属性项“红色”改成“蓝色”，那么商品参数中所有包含“红色”的商品属性项都要随之更新，请问，存储在MongoDB中的商品参数怎么高效地更新？","like_count":0,"discussions":[{"author":{"id":2297346,"avatar":"https://static001.geekbang.org/account/avatar/00/23/0e/02/41099234.jpg","nickname":"Django...","note":"","ucode":"56693F8A886FF0","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":367530,"discussion_content":"都存mysql，运营后台admin直接改就方便了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1618388206,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":183532,"user_name":"鹏飞天下","can_delete":false,"product_type":"c1","uid":1101792,"ip_address":"","ucode":"EB9FFD9FE64A4C","user_header":"https://static001.geekbang.org/account/avatar/00/10/cf/e0/f6819d03.jpg","comment_is_top":false,"comment_ctime":1583060354,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1583060354","product_id":100046801,"comment_content":"思考题：商品中一个版本号字段和一个修改历史表，提交订单的时候根据订单号和版本确定商品的记录","like_count":0},{"had_liked":false,"id":183479,"user_name":"不记年","can_delete":false,"product_type":"c1","uid":1045945,"ip_address":"","ucode":"287E40C68356DC","user_header":"https://static001.geekbang.org/account/avatar/00/0f/f5/b9/888fe350.jpg","comment_is_top":false,"comment_ctime":1583049052,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1583049052","product_id":100046801,"comment_content":"采用version就可以解决吧，保证用户在商详页和订单页查询的是同一版本的商详信息<br>或者订单页干脆使用之前商详页的信息","like_count":0},{"had_liked":false,"id":183362,"user_name":"博","can_delete":false,"product_type":"c1","uid":1798979,"ip_address":"","ucode":"F7CA69FF5D09BA","user_header":"https://static001.geekbang.org/account/avatar/00/1b/73/43/ae139b1f.jpg","comment_is_top":false,"comment_ctime":1583028999,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1583028999","product_id":100046801,"comment_content":"首先把打折时间的提示要有的，提高用户的体验；<br>其次价格上的校验也是必须的，根据客户端传的版本号，在后台查找是否有与之匹配的价格信息，如果有直接下单即可，如果没有，应该向前端返回错误信息，提示重新下单，为啥要重新下单是为了防止有人模拟请求，产生不必要的信息在数据库中，倘若数据量很大，就会有缓存穿透的可能；<br>最后，总结一下吧。以最新价格为准","like_count":0},{"had_liked":false,"id":183129,"user_name":"楊_宵夜","can_delete":false,"product_type":"c1","uid":1019302,"ip_address":"","ucode":"7BA0CADC5F23BB","user_header":"https://static001.geekbang.org/account/avatar/00/0f/8d/a6/22c37c91.jpg","comment_is_top":false,"comment_ctime":1582957686,"is_pvip":false,"replies":[{"id":"71115","content":"说下我个人的看法，同学们提的这几个种方案，从技术上来说都可以解决问题。<br><br>焦点在于用户体验，如果使用锁来保证一致性，对用户来说要么提交的时候卡在那儿一会儿，要么返回“已变价，请重新下单”这样的错误提示，对用户来说，都不怎么友好。<br><br>我会在下节课上线的时候，来分享一下我的解决方案。<br><br>","user_name":"作者回复","user_name_real":"李玥","uid":"1501046","ctime":1583115738,"ip_address":"","comment_id":183129,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1582957686","product_id":100046801,"comment_content":"李sir问题中的核心是&quot;保证用户体验&quot;, 而不是&quot;以用户看到的价格为准&quot;;<br>同时往深想一层, 还有一个隐形需求是: &quot;保障商家权益&quot;;<br>于是尝试结合电商场景中同样会动态变化的&quot;库存&quot;的使用体验来回答下:<br>1. 当商家运营人员不论在[任意时间], 也不论[]单机&#47;分布式场景]下, 更新时都需要获取一个写锁; 单机下一般是mysql更新锁, 分布式下当然就是各种实现的分布式锁; 在这个写锁还没有写成功时, 读请求无法进行; <br>2. 那么利用上述特性, 在客户真正提交订单时, 同步进行校验客户订单中的价格是否是最新价格并返回相应提示即可, 这里当然也需要使用缓存帮助性能提升. <br><br>对评论列表中[谭伟]同学的MVCC方案, 有一丝浅见:<br>读过mysql中MVCC的相关机制, 在[本节课后问题]的场景下, 如果使用MVCC, 只是把问题推迟了, 因为在使用MVCC的情况下, 面临的新的问题是:<br>1. 旧版本的价格何时失效? <br>2. 失效时瞬间, 又以哪个价格为准?<br>于是, 开发者又面临了新的, 同样的, 并且更复杂的一致性问题; 所以个人认为MVCC在此场景下不适用.<br><br>以上纯属个人看法, 期待李sir翻牌点评.<br><br>","like_count":0,"discussions":[{"author":{"id":1501046,"avatar":"https://static001.geekbang.org/account/avatar/00/16/e7/76/79c1f23a.jpg","nickname":"李玥","note":"","ucode":"B19E91EE248591","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":485566,"discussion_content":"说下我个人的看法，同学们提的这几个种方案，从技术上来说都可以解决问题。\n\n焦点在于用户体验，如果使用锁来保证一致性，对用户来说要么提交的时候卡在那儿一会儿，要么返回“已变价，请重新下单”这样的错误提示，对用户来说，都不怎么友好。\n\n我会在下节课上线的时候，来分享一下我的解决方案。\n\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1583115738,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":183100,"user_name":"GeekAmI","can_delete":false,"product_type":"c1","uid":1005030,"ip_address":"","ucode":"232C0B6DFB9F56","user_header":"https://static001.geekbang.org/account/avatar/00/0f/55/e6/87197b10.jpg","comment_is_top":false,"comment_ctime":1582952709,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1582952709","product_id":100046801,"comment_content":"那只能在用户进入下单页面给一个价格变动的友好提示啦","like_count":0},{"had_liked":false,"id":182766,"user_name":"永不止步","can_delete":false,"product_type":"c1","uid":1128711,"ip_address":"","ucode":"F0EB2AD41CAC84","user_header":"https://static001.geekbang.org/account/avatar/00/11/39/07/04ca5abb.jpg","comment_is_top":false,"comment_ctime":1582862209,"is_pvip":true,"discussion_count":2,"race_medal":0,"score":"1582862209","product_id":100046801,"comment_content":"业务上可以规避，调价可以提前展示出来，比如预计在12：00价格会上涨，也可以变相起到促销的效果","like_count":0,"discussions":[{"author":{"id":1003515,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/4f/fb/10366b97.jpg","nickname":"Henry","note":"","ucode":"54AFE9C99B31B4","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":190663,"discussion_content":"这个好像做的事情变多了，并且用户也不见得会注意到这个信息。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582968800,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1004698,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/54/9a/76c0af70.jpg","nickname":"每天晒白牙","note":"","ucode":"A1B102CD933DEA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":190285,"discussion_content":"感觉这种设计不错","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582929953,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":182120,"user_name":"公号-技术夜未眠","can_delete":false,"product_type":"c1","uid":1013683,"ip_address":"","ucode":"83825B57CBD952","user_header":"https://static001.geekbang.org/account/avatar/00/0f/77/b3/991f3f9b.jpg","comment_is_top":false,"comment_ctime":1582712042,"is_pvip":true,"discussion_count":2,"race_medal":0,"score":"1582712042","product_id":100046801,"comment_content":"完全感受到了老师的理论与实践结合的功力。","like_count":0,"discussions":[{"author":{"id":1121758,"avatar":"https://static001.geekbang.org/account/avatar/00/11/1d/de/62bfa83f.jpg","nickname":"aoe","note":"","ucode":"1C6201EDB4E954","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":188674,"discussion_content":"代码荣耀的公众号留言比较霸气，您可以参考一下","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582816485,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1013683,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/77/b3/991f3f9b.jpg","nickname":"公号-技术夜未眠","note":"","ucode":"83825B57CBD952","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1121758,"avatar":"https://static001.geekbang.org/account/avatar/00/11/1d/de/62bfa83f.jpg","nickname":"aoe","note":"","ucode":"1C6201EDB4E954","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":189218,"discussion_content":"哈哈😄，感谢支持","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582859476,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":188674,"ip_address":""},"score":189218,"extra":""}]}]}]}