{"id":83034,"title":"32丨PageRank（上）：搞懂Google的PageRank算法","content":"<p>互联网发展到现在，搜索引擎已经非常好用，基本上输入关键词，都能找到匹配的内容，质量还不错。但在1998年之前，搜索引擎的体验并不好。早期的搜索引擎，会遇到下面的两类问题：</p><ol>\n<li>\n<p>返回结果质量不高：搜索结果不考虑网页的质量，而是通过时间顺序进行检索；</p>\n</li>\n<li>\n<p>容易被人钻空子：搜索引擎是基于检索词进行检索的，页面中检索词出现的频次越高，匹配度越高，这样就会出现网页作弊的情况。有些网页为了增加搜索引擎的排名，故意增加某个检索词的频率。</p>\n</li>\n</ol><p>基于这些缺陷，当时Google的创始人拉里·佩奇提出了PageRank算法，目的就是要找到优质的网页，这样Google的排序结果不仅能找到用户想要的内容，而且还会从众多网页中筛选出权重高的呈现给用户。</p><p>Google的两位创始人都是斯坦福大学的博士生，他们提出的PageRank算法受到了论文影响力因子的评价启发。当一篇论文被引用的次数越多，证明这篇论文的影响力越大。正是这个想法解决了当时网页检索质量不高的问题。</p><h2>PageRank的简化模型</h2><p>我们先来看下PageRank是如何计算的。</p><p>我假设一共有4个网页A、B、C、D。它们之间的链接信息如图所示：</p><p><img src=\"https://static001.geekbang.org/resource/image/81/36/814d53ff8d73113631482e71b7c53636.png?wh=1472*1007\" alt=\"\"><br>\n这里有两个概念你需要了解一下。</p><p>出链指的是链接出去的链接。入链指的是链接进来的链接。比如图中A有2个入链，3个出链。</p><!-- [[[read_end]]] --><p>简单来说，一个网页的影响力=所有入链集合的页面的加权影响力之和，用公式表示为：</p><p><img src=\"https://static001.geekbang.org/resource/image/70/0c/70104ab44fa1d9d690f99dc328d8af0c.png?wh=227*88\" alt=\"\"><br>\nu为待评估的页面，$B_{u}$ 为页面u的入链集合。针对入链集合中的任意页面v，它能给u带来的影响力是其自身的影响力PR(v)除以v页面的出链数量，即页面v把影响力PR(v)平均分配给了它的出链，这样统计所有能给u带来链接的页面v，得到的总和就是网页u的影响力，即为PR(u)。</p><p>所以你能看到，出链会给被链接的页面赋予影响力，当我们统计了一个网页链出去的数量，也就是统计了这个网页的跳转概率。</p><p>在这个例子中，你能看到A有三个出链分别链接到了B、C、D上。那么当用户访问A的时候，就有跳转到B、C或者D的可能性，跳转概率均为1/3。</p><p>B有两个出链，链接到了A和D上，跳转概率为1/2。</p><p>这样，我们可以得到A、B、C、D这四个网页的转移矩阵M：</p><p><img src=\"https://static001.geekbang.org/resource/image/20/d4/204b0934f166d6945a90185aa2c95dd4.png?wh=209*116\" alt=\"\"><br>\n我们假设A、B、C、D四个页面的初始影响力都是相同的，即：</p><p><img src=\"https://static001.geekbang.org/resource/image/a8/b8/a8eb12b5242e082b5d2281300c326bb8.png?wh=180*160\" alt=\"\"><br>\n当进行第一次转移之后，各页面的影响力$w_{1}$变为：</p><p><img src=\"https://static001.geekbang.org/resource/image/fc/8c/fcbcdd8e96384f855b4f7c842627ff8c.png?wh=385*112\" alt=\"\"><br>\n然后我们再用转移矩阵乘以$w_{1}$得到$w_{2}$结果，直到第n次迭代后$w_{n}$影响力不再发生变化，可以收敛到(0.3333，0.2222，0.2222，0.2222），也就是对应着A、B、C、D四个页面最终平衡状态下的影响力。</p><p>你能看出A页面相比于其他页面来说权重更大，也就是PR值更高。而B、C、D页面的PR值相等。</p><p>至此，我们模拟了一个简化的PageRank的计算过程，实际情况会比这个复杂，可能会面临两个问题：</p><p>1.等级泄露（Rank Leak）：如果一个网页没有出链，就像是一个黑洞一样，吸收了其他网页的影响力而不释放，最终会导致其他网页的PR值为0。</p><p><img src=\"https://static001.geekbang.org/resource/image/77/62/77336108b0233638a35bfd7450438162.png?wh=1190*997\" alt=\"\"><br>\n2.等级沉没（Rank Sink）：如果一个网页只有出链，没有入链（如下图所示），计算的过程迭代下来，会导致这个网页的PR值为0（也就是不存在公式中的V）。</p><p><img src=\"https://static001.geekbang.org/resource/image/0d/e6/0d113854fb56116d79efe7f0e0374fe6.png?wh=1203*987\" alt=\"\"><br>\n针对等级泄露和等级沉没的情况，我们需要灵活处理。</p><p>比如针对等级泄露的情况，我们可以把没有出链的节点，先从图中去掉，等计算完所有节点的PR值之后，再加上该节点进行计算。不过这种方法会导致新的等级泄露的节点的产生，所以工作量还是很大的。</p><p>有没有一种方法，可以同时解决等级泄露和等级沉没这两个问题呢？</p><h2>PageRank的随机浏览模型</h2><p>为了解决简化模型中存在的等级泄露和等级沉没的问题，拉里·佩奇提出了PageRank的随机浏览模型。他假设了这样一个场景：用户并不都是按照跳转链接的方式来上网，还有一种可能是不论当前处于哪个页面，都有概率访问到其他任意的页面，比如说用户就是要直接输入网址访问其他页面，虽然这个概率比较小。</p><p>所以他定义了阻尼因子d，这个因子代表了用户按照跳转链接来上网的概率，通常可以取一个固定值0.85，而1-d=0.15则代表了用户不是通过跳转链接的方式来访问网页的，比如直接输入网址。</p><p><img src=\"https://static001.geekbang.org/resource/image/5f/8f/5f40c980c2f728f12159058ea19a4d8f.png?wh=368*114\" alt=\"\"><br>\n其中N为网页总数，这样我们又可以重新迭代网页的权重计算了，因为加入了阻尼因子d，一定程度上解决了等级泄露和等级沉没的问题。</p><p>通过数学定理（这里不进行讲解）也可以证明，最终PageRank随机浏览模型是可以收敛的，也就是可以得到一个稳定正常的PR值。</p><h2>PageRank在社交影响力评估中的应用</h2><p>网页之间会形成一个网络，是我们的互联网，论文之间也存在着相互引用的关系，可以说我们所处的环境就是各种网络的集合。</p><p>只要是有网络的地方，就存在出链和入链，就会有PR权重的计算，也就可以运用我们今天讲的PageRank算法。</p><p>我们可以把PageRank算法延展到社交网络领域中。比如在微博上，如果我们想要计算某个人的影响力，该怎么做呢？</p><p>一个人的微博粉丝数并不一定等于他的实际影响力。如果按照PageRank算法，还需要看这些粉丝的质量如何。如果有很多明星或者大V关注，那么这个人的影响力一定很高。如果粉丝是通过购买僵尸粉得来的，那么即使粉丝数再多，影响力也不高。</p><p>同样，在工作场景中，比如说脉脉这个社交软件，它计算的就是个人在职场的影响力。如果你的工作关系是李开复、江南春这样的名人，那么你的职场影响力一定会很高。反之，如果你是个学生，在职场上被链入的关系比较少的话，职场影响力就会比较低。</p><p>同样，如果你想要看一个公司的经营能力，也可以看这家公司都和哪些公司有合作。如果它合作的都是世界500强企业，那么这个公司在行业内一定是领导者，如果这个公司的客户都是小客户，即使数量比较多，业内影响力也不一定大。</p><p>除非像淘宝一样，有海量的中小客户，最后大客户也会找上门来寻求合作。所以权重高的节点，往往会有一些权重同样很高的节点在进行合作。</p><h2>PageRank给我们带来的启发</h2><p>PageRank可以说是Google搜索引擎重要的技术之一，在1998年帮助Google获得了搜索引擎的领先优势，现在PageRank已经比原来复杂很多，但它的思想依然能带给我们很多启发。</p><p>比如，如果你想要自己的媒体影响力有所提高，就尽量要混在大V圈中；如果想找到高职位的工作，就尽量结识公司高层，或者认识更多的猎头，因为猎头和很多高职位的人员都有链接关系。</p><p>同样，PageRank也可以帮我们识别链接农场。链接农场指的是网页为了链接而链接，填充了一些没有用的内容。这些页面相互链接或者指向了某一个网页，从而想要得到更高的权重。</p><h2>总结</h2><p>今天我给你讲了PageRank的算法原理，对简化的PageRank模型进行了模拟。针对简化模型中存在的等级泄露和等级沉没这两个问题，PageRank的随机浏览模型引入了阻尼因子d来解决。</p><p>同样，PageRank有很广的应用领域，在许多网络结构中都有应用，比如计算一个人的微博影响力等。它也告诉我们，在社交网络中，链接的质量非常重要。</p><p><img src=\"https://static001.geekbang.org/resource/image/f9/7d/f936296fed70f27ba23064ec14a7e37d.png?wh=1727*924\" alt=\"\"><br>\n学完今天的内容，你不妨说说PageRank的算法原理？另外在现实生活中，除了我在文中举到的几个例子，你还能说一些PageRank都有哪些应用场景吗？</p><p>欢迎在评论区与我分享你的答案，也欢迎点击“请朋友读”，把这篇文章分享给你的朋友或者同事。</p><p></p>","neighbors":{"left":{"article_title":"31丨关联规则挖掘（下）：导演如何选择演员？","id":82943},"right":{"article_title":"33丨PageRank（下）：分析希拉里邮件中的人物关系","id":83471}},"comments":[{"had_liked":false,"id":85726,"user_name":"滨滨","can_delete":false,"product_type":"c1","uid":1334567,"ip_address":"","ucode":"881EFA798BEE34","user_header":"https://static001.geekbang.org/account/avatar/00/14/5d/27/74e152d3.jpg","comment_is_top":false,"comment_ctime":1555213762,"is_pvip":false,"replies":[{"id":"40562","content":"这个应用例子也很有趣，让顾客来投票。","user_name":"编辑回复","user_name_real":"何昌梅","uid":"1165037","ctime":1562555310,"ip_address":"","comment_id":85726,"utype":2}],"discussion_count":2,"race_medal":0,"score":"87454559682","product_id":100021701,"comment_content":"pagerank算法就是通过你的邻居的影响力来评判你的影响力，当然然无法通过邻居来访问你，并不代表你没有影响力，因为可以直接访问你，所以引入阻尼因子的概念。现实生活中，顾客比较多的店铺质量比较好，但是要看看顾客是不是托。","like_count":21,"discussions":[{"author":{"id":1165037,"avatar":"https://static001.geekbang.org/account/avatar/00/11/c6/ed/89a2dc13.jpg","nickname":"丢了个丢丢丢","note":"","ucode":"BDD7E97E0E5E96","race_medal":0,"user_type":4,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":446782,"discussion_content":"这个应用例子也很有趣，让顾客来投票。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1562555310,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":4}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1639349,"avatar":"https://static001.geekbang.org/account/avatar/00/19/03/b5/61258e9b.jpg","nickname":"wanghao","note":"","ucode":"A0EABFBEFC28B4","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":383546,"discussion_content":"没有太多自己的思考，普通科普文章","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1626153249,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":70773,"user_name":"third","can_delete":false,"product_type":"c1","uid":1025114,"ip_address":"","ucode":"9A37408A834F0B","user_header":"https://static001.geekbang.org/account/avatar/00/0f/a4/5a/e708e423.jpg","comment_is_top":false,"comment_ctime":1551179692,"is_pvip":false,"replies":[{"id":"40552","content":"这个比喻不错~ 河流之间是有入链和出链的，但是也可能遇到等级泄露和等级沉没的问题，下雨就类似是随机浏览模型，给每个节点提供补充。","user_name":"编辑回复","user_name_real":"何昌梅","uid":"1165037","ctime":1562554440,"ip_address":"","comment_id":70773,"utype":2}],"discussion_count":1,"race_medal":0,"score":"61680721836","product_id":100021701,"comment_content":"复习感悟：<br>1.PageRank算法，有点像<br>海纳百川有容乃大（网页影响力=所有入链集合的页面的加权影响力之和）<br>像我汇聚的东西，越多，我就越厉害。<br><br>2.随机访问模型<br>有点像下雨。<br>海洋除了有河流流经，还有雨水，但是下雨是随机的（网页影响力=阻尼影响力+所有入链集合页面的加权影响力之和）","like_count":15,"discussions":[{"author":{"id":1165037,"avatar":"https://static001.geekbang.org/account/avatar/00/11/c6/ed/89a2dc13.jpg","nickname":"丢了个丢丢丢","note":"","ucode":"BDD7E97E0E5E96","race_medal":0,"user_type":4,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":440820,"discussion_content":"这个比喻不错~ 河流之间是有入链和出链的，但是也可能遇到等级泄露和等级沉没的问题，下雨就类似是随机浏览模型，给每个节点提供补充。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1562554440,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":4}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":70359,"user_name":"third","can_delete":false,"product_type":"c1","uid":1025114,"ip_address":"","ucode":"9A37408A834F0B","user_header":"https://static001.geekbang.org/account/avatar/00/0f/a4/5a/e708e423.jpg","comment_is_top":false,"comment_ctime":1551084603,"is_pvip":false,"replies":[{"id":"40551","content":"应用场景这个举例很有趣，回答你的问题：<br>对应文章中的例子，等级泄露的转移矩阵：<br>M=[0 0 0 1&#47;2] <br>     [1 0 0 0 ]<br>     [0 0 0 1&#47;2]<br>     [0 1 0 0 ]<br>等级沉没的转移矩阵<br>M=[0 0 1&#47;2 1] <br>     [1 0 0 0 ]<br>     [0 0 0 0]<br>     [0 1 1&#47;2 0 ]","user_name":"编辑回复","user_name_real":"何昌梅","uid":"1165037","ctime":1562554387,"ip_address":"","comment_id":70359,"utype":2}],"discussion_count":1,"race_medal":0,"score":"35910822971","product_id":100021701,"comment_content":"作业<br>1.原理<br>1）基础：网页影响力=所有入链集合的页面的加权影响力之和<br><br>2）拉里佩奇加入随机访问模型，即有概率用户通过输入网址访问<br>网页影响力=阻尼影响力+所有入链集合页面的加权影响力之和<br><br>2.应用场景：<br>评估某个新行业怎么样，通过计算涌入这个行业的人的智力和数量。<br>如果这个行业，正在有大量的聪明人涌入，说明这是一个正在上升的行业。<br><br>作业及问题<br>转移矩阵<br>第一列是A的出链的概率<br>A0B1&#47;3C1&#47;3D1&#47;3<br>第二列是B的的出链的概率<br>A1&#47;2B0C0D1&#47;2<br>第三列是C的出链概率<br>A1B0C0D0<br>第四列是D的出链概率<br>A0B1&#47;2C1&#47;2D0<br><br>等级泄露的转移矩阵应该是<br>M=[0 0 1&#47;2 0]   <br>     [1 0  0   0]<br>     [0 0 1&#47;2 0]<br>     [0 1 0    0]<br><br>还是<br>M=[0 0 0 1&#47;2]   <br>     [1 0 0  0 ]<br>     [0 0 0 1&#47;2]<br>     [0 1 0  0  ]<br><br>假设概率相同，都为1&#47;4<br>进行第一次转移之后，会发现，后面的<br>W1=[1&#47;8]<br>[1&#47;4]<br>[1&#47;8]<br>[1&#47;4]<br><br>总和已经小于1了，在不断转移的过程中，会使得所有PR为0<br><br>等级沉没的转移矩阵怎么写？<br>M=[0 0 1 0]   <br>     [1 0  0 0]<br>     [0 0 0 0]<br>     [0 1 0  0]<br>","like_count":8,"discussions":[{"author":{"id":1165037,"avatar":"https://static001.geekbang.org/account/avatar/00/11/c6/ed/89a2dc13.jpg","nickname":"丢了个丢丢丢","note":"","ucode":"BDD7E97E0E5E96","race_medal":0,"user_type":4,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":440584,"discussion_content":"应用场景这个举例很有趣，回答你的问题：\n对应文章中的例子，等级泄露的转移矩阵：\nM=[0 0 0 1/2] \n     [1 0 0 0 ]\n     [0 0 0 1/2]\n     [0 1 0 0 ]\n等级沉没的转移矩阵\nM=[0 0 1/2 1] \n     [1 0 0 0 ]\n     [0 0 0 0]\n     [0 1 1/2 0 ]","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1562554387,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":4}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":104826,"user_name":"白色纯度","can_delete":false,"product_type":"c1","uid":1563854,"ip_address":"","ucode":"7ABC830EE468A1","user_header":"https://static001.geekbang.org/account/avatar/00/17/dc/ce/03fdeb60.jpg","comment_is_top":false,"comment_ctime":1560849089,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"23035685569","product_id":100021701,"comment_content":"转移矩阵用到了Marcov过程的部分知识，转移概率矩阵并不一定收敛，需满足条件：不可约，平稳（可逆）。等级泄露和等级沉没都是破坏了不可约的情况，使得马氏矩阵不具备平稳概率。而解决该问题的思想又与朴素贝叶斯的平滑处理相似，浅见，若老师有时间还望指正。","like_count":6},{"had_liked":false,"id":71684,"user_name":"李沛欣","can_delete":false,"product_type":"c1","uid":1362695,"ip_address":"","ucode":"98874954230D95","user_header":"https://static001.geekbang.org/account/avatar/00/14/cb/07/e34220d6.jpg","comment_is_top":false,"comment_ctime":1551412958,"is_pvip":false,"replies":[{"id":"40553","content":"这个总结和分析很不错。当遇到了一些问题，有时候不是直接解决它，而是跳脱出来提出了“随机浏览模型”反而把之前的等级泄露和等级沉没问题解决了。","user_name":"编辑回复","user_name_real":"何昌梅","uid":"1165037","ctime":1562554483,"ip_address":"","comment_id":71684,"utype":2}],"discussion_count":1,"race_medal":0,"score":"23026249438","product_id":100021701,"comment_content":"有人的地方，就有入世和出世<br>有网络和地方，就有入链和出链<br><br>入世的人，链接的大牛越多，越有影响力，<br>对网站而言，链接出去的网页越多，说明网站影响力越大，但是越多链接进来你这里的网页，也直接影响到网站的价值。<br><br>出链太多，如同出世一样，耗散内力，排名等级越来越低，最终江湖再见。<br>入链太多，就可能成为流量黑洞，如同涉世太深的人一样走火入魔。<br><br>谷歌创始人拉里佩奇则力图破解等级泄露和等级沉没困境，创造了随机浏览模型。","like_count":6,"discussions":[{"author":{"id":1165037,"avatar":"https://static001.geekbang.org/account/avatar/00/11/c6/ed/89a2dc13.jpg","nickname":"丢了个丢丢丢","note":"","ucode":"BDD7E97E0E5E96","race_medal":0,"user_type":4,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":441276,"discussion_content":"这个总结和分析很不错。当遇到了一些问题，有时候不是直接解决它，而是跳脱出来提出了“随机浏览模型”反而把之前的等级泄露和等级沉没问题解决了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1562554483,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":4}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":214082,"user_name":"梁智行","can_delete":false,"product_type":"c1","uid":1921827,"ip_address":"","ucode":"780064DB2B47AF","user_header":"https://static001.geekbang.org/account/avatar/00/1d/53/23/5d081efe.jpg","comment_is_top":false,"comment_ctime":1588651312,"is_pvip":false,"replies":[{"id":"103763","content":"同学理解的很透彻！","user_name":"作者回复","user_name_real":"cy","uid":"1306094","ctime":1617041485,"ip_address":"","comment_id":214082,"utype":1}],"discussion_count":1,"race_medal":0,"score":"14473553200","product_id":100021701,"comment_content":"用网络科学来理解算法就是，网页的影响力（中心度），体现在：很多人说这网页好（度中心度），说这网页好的网页也要好（特征向量中心度），就好像一个人牛不牛逼，首先他自己要很牛逼，然后很多人说他牛逼，最后说他很牛逼的人也要很牛逼。<br>","like_count":2,"discussions":[{"author":{"id":1306094,"avatar":"https://static001.geekbang.org/account/avatar/00/13/ed/ee/c4779b67.jpg","nickname":"cy","note":"","ucode":"50D653399A31F6","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":493951,"discussion_content":"同学理解的很透彻！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1617041485,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":153602,"user_name":"Ling","can_delete":false,"product_type":"c1","uid":1022786,"ip_address":"","ucode":"EE15D1ABDB073B","user_header":"https://static001.geekbang.org/account/avatar/00/0f/9b/42/aeb79b35.jpg","comment_is_top":false,"comment_ctime":1574266266,"is_pvip":false,"replies":[{"id":"59724","content":"更符合人们实际浏览网页的场景","user_name":"作者回复","user_name_real":"cy","uid":"1306094","ctime":1574738083,"ip_address":"","comment_id":153602,"utype":1}],"discussion_count":1,"race_medal":0,"score":"14459168154","product_id":100021701,"comment_content":"其实提出阻尼系数，还是为了解决某些网站明明存在大量出链（入链），但是影响力却非常大的情形。比如说 www.hao123.com 一样的导航网页，这种网页就完全是导航页，存在极其多出链；还有各种搜索引擎，比如 www.baidu.com、www.google.com 这种网站，基本不存在出链，但是入链可能非常多。这两种网站的影响力其实非常大。","like_count":4,"discussions":[{"author":{"id":1306094,"avatar":"https://static001.geekbang.org/account/avatar/00/13/ed/ee/c4779b67.jpg","nickname":"cy","note":"","ucode":"50D653399A31F6","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":475223,"discussion_content":"更符合人们实际浏览网页的场景","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574738083,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":141626,"user_name":"S.Mona","can_delete":false,"product_type":"c1","uid":1168338,"ip_address":"","ucode":"D769FABEBF6BA9","user_header":"https://static001.geekbang.org/account/avatar/00/11/d3/d2/2cf975ea.jpg","comment_is_top":false,"comment_ctime":1571203232,"is_pvip":false,"replies":[{"id":"59771","content":"PageRank是基于图论的影响力模型，也是机器学习，数据分析的10大算法之一。机器学习和数据分析 很多时候概念有重叠，两者都是用数据解决问题，使用到很多模型，比如PageRank","user_name":"作者回复","user_name_real":"cy","uid":"1306094","ctime":1574741448,"ip_address":"","comment_id":141626,"utype":1}],"discussion_count":1,"race_medal":0,"score":"14456105120","product_id":100021701,"comment_content":"PageRank和机器学习和数据分析的关系是怎样的？","like_count":3,"discussions":[{"author":{"id":1306094,"avatar":"https://static001.geekbang.org/account/avatar/00/13/ed/ee/c4779b67.jpg","nickname":"cy","note":"","ucode":"50D653399A31F6","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":470824,"discussion_content":"PageRank是基于图论的影响力模型，也是机器学习，数据分析的10大算法之一。机器学习和数据分析 很多时候概念有重叠，两者都是用数据解决问题，使用到很多模型，比如PageRank","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574741448,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":78896,"user_name":"听妈妈的话","can_delete":false,"product_type":"c1","uid":1462417,"ip_address":"","ucode":"089D797A39C791","user_header":"https://static001.geekbang.org/account/avatar/00/16/50/91/0dd2b8ce.jpg","comment_is_top":false,"comment_ctime":1553271100,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"14438172988","product_id":100021701,"comment_content":"有个人博客的人互互相交换友链，也是为了提高搜索引擎收录的rank吗？","like_count":3},{"had_liked":false,"id":70503,"user_name":"白夜","can_delete":false,"product_type":"c1","uid":1354449,"ip_address":"","ucode":"7AABFA7C04EA34","user_header":"https://static001.geekbang.org/account/avatar/00/14/aa/d1/076482f3.jpg","comment_is_top":false,"comment_ctime":1551108356,"is_pvip":false,"replies":[{"id":"25549","content":"矩阵在推导的过程中还是有用的，现在很多函数都封装好了，可以直接使用，所以矩阵接触的就少了。自己能跑通了确实会比较爽。","user_name":"编辑回复","user_name_real":"何昌梅","uid":"1165037","ctime":1551349745,"ip_address":"","comment_id":70503,"utype":2}],"discussion_count":1,"race_medal":0,"score":"14436010244","product_id":100021701,"comment_content":"1.把影响力转化为每日使用时间考虑。<br>在感兴趣的人或事身上投入了相对多的时间。对其相关的人事物也会投入一定的时间。<br>那个人或事，被关注的越多，它的影响力&#47;受众也就越大。而每个人的时间有限，一般来说最多与150人保持联系，相当于最多有150个出链。<br>其中，一部分人，没人关注，只有出链没有入链，他们就需要社会最低限度的关照，这个就是社会福利（阻尼）。<br>2.矩阵以前学了一直不知道在哪里可以应用，今天学了用处感觉还蛮爽的。","like_count":3,"discussions":[{"author":{"id":1165037,"avatar":"https://static001.geekbang.org/account/avatar/00/11/c6/ed/89a2dc13.jpg","nickname":"丢了个丢丢丢","note":"","ucode":"BDD7E97E0E5E96","race_medal":0,"user_type":4,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":440669,"discussion_content":"矩阵在推导的过程中还是有用的，现在很多函数都封装好了，可以直接使用，所以矩阵接触的就少了。自己能跑通了确实会比较爽。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1551349745,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":4}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":70377,"user_name":"王彬成","can_delete":false,"product_type":"c1","uid":1015045,"ip_address":"","ucode":"386803B8FC2DD5","user_header":"https://static001.geekbang.org/account/avatar/00/0f/7d/05/4bad0c7c.jpg","comment_is_top":false,"comment_ctime":1551087891,"is_pvip":false,"replies":[{"id":"25550","content":"最有影响力的文学作品，肿瘤基因，图书推荐 这几个场景不错。","user_name":"编辑回复","user_name_real":"何昌梅","uid":"1165037","ctime":1551349764,"ip_address":"","comment_id":70377,"utype":2}],"discussion_count":1,"race_medal":0,"score":"14435989779","product_id":100021701,"comment_content":"一、学完今天的内容，你不妨说说 PageRank 的算法原理？<br>1、PageRank 的算法原理核心思想：<br>-如果一个网页被很多其他网页链接到的话说明这个网页比较重要，也就是PageRank值会相对较高；<br>-如果一个PageRank值很高的网页链接到一个其他的网页，那么被链接到的网页的PageRank值会相应地因此而提高。<br>2、公式<br>PR(u)=PR(v1)&#47;N1+PR(v2)&#47;N2+……<br>其中PR(u), PR(v1) 为页面影响力。N1, N2是v1, v2页面对应的出链总数。<br>3、算法过程<br>1）给每个页面分配相同的PR值，比如PR(u)=PR(v1)=PR(v2)=……=1<br>2）按照每个页面的PR影响力计算公式，给每个页面的PR值重新计算一遍<br>3）重复步骤2，迭代结束的收敛条件：比如上次迭代结果与本次迭代结果小于某个误差，我们结束程序运行；或者比如还可以设置最大循环次数。<br><br>二、你还能说一些 PageRank 都有哪些应用场景吗？<br>引用链接：https:&#47;&#47;36kr.com&#47;p&#47;214680.html<br>1、研究某段时间最重要的文学作品<br>2、研究与遗传有关的肿瘤基因<br>3、图书馆图书推荐<br>","like_count":3,"discussions":[{"author":{"id":1165037,"avatar":"https://static001.geekbang.org/account/avatar/00/11/c6/ed/89a2dc13.jpg","nickname":"丢了个丢丢丢","note":"","ucode":"BDD7E97E0E5E96","race_medal":0,"user_type":4,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":440594,"discussion_content":"最有影响力的文学作品，肿瘤基因，图书推荐 这几个场景不错。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1551349764,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":4}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":128487,"user_name":"FeiFei","can_delete":false,"product_type":"c1","uid":1045586,"ip_address":"","ucode":"01CD655DD4E56C","user_header":"https://static001.geekbang.org/account/avatar/00/0f/f4/52/10c4d863.jpg","comment_is_top":false,"comment_ctime":1566888743,"is_pvip":false,"replies":[{"id":"62747","content":"对 阻尼因子是为了避免Rank Leak, Rank Sink的情况","user_name":"作者回复","user_name_real":"cy","uid":"1306094","ctime":1577088548,"ip_address":"","comment_id":128487,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10156823335","product_id":100021701,"comment_content":"PageRank原理：<br>通过聚合入链和出链的权重，来判断自身的排序。<br>因为可能没有入链或者外链，因此加入阻尼因子d，来将这种情况规避。","like_count":2,"discussions":[{"author":{"id":1306094,"avatar":"https://static001.geekbang.org/account/avatar/00/13/ed/ee/c4779b67.jpg","nickname":"cy","note":"","ucode":"50D653399A31F6","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":464969,"discussion_content":"对 阻尼因子是为了避免Rank Leak, Rank Sink的情况","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577088548,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":70994,"user_name":"sunny","can_delete":false,"product_type":"c1","uid":1094714,"ip_address":"","ucode":"1F8F1A30B26BD2","user_header":"https://static001.geekbang.org/account/avatar/00/10/b4/3a/02ea71fa.jpg","comment_is_top":false,"comment_ctime":1551239957,"is_pvip":false,"replies":[{"id":"25551","content":"针对节点的初始权重：如果N个节点的总权重是1，那么可以设置每个节点的权重为1&#47;N","user_name":"编辑回复","user_name_real":"何昌梅","uid":"1165037","ctime":1551349832,"ip_address":"","comment_id":70994,"utype":2}],"discussion_count":1,"race_medal":0,"score":"10141174549","product_id":100021701,"comment_content":"这个计算PR权重的时候，是计算对象的每个入链的权重除以出链数量的之和，那从一开始计算的时候每个页面需要有个原始的权重值才行，这个原始权重是否就是1","like_count":2,"discussions":[{"author":{"id":1165037,"avatar":"https://static001.geekbang.org/account/avatar/00/11/c6/ed/89a2dc13.jpg","nickname":"丢了个丢丢丢","note":"","ucode":"BDD7E97E0E5E96","race_medal":0,"user_type":4,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":440938,"discussion_content":"针对节点的初始权重：如果N个节点的总权重是1，那么可以设置每个节点的权重为1/N","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1551349832,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":4}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":218137,"user_name":"Geek_34dbb7","can_delete":false,"product_type":"c1","uid":1519021,"ip_address":"","ucode":"A5CF695ACF74E5","user_header":"https://wx.qlogo.cn/mmopen/vi_32/ENStdZ2o72F2wqqWVcCnQ6EpLhOo3qohvibXCVQUrhXAnZxUHMpwyfs9oXHrCdSQ4byuVicMX2UbeiavFCib15wakw/132","comment_is_top":false,"comment_ctime":1589721689,"is_pvip":false,"replies":[{"id":"103751","content":"需要排除刷单。","user_name":"作者回复","user_name_real":"cy","uid":"1306094","ctime":1617040632,"ip_address":"","comment_id":218137,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5884688985","product_id":100021701,"comment_content":"淘宝商品流量，某件商品流量越大，销量也会越好，但也要排除刷单","like_count":1,"discussions":[{"author":{"id":1306094,"avatar":"https://static001.geekbang.org/account/avatar/00/13/ed/ee/c4779b67.jpg","nickname":"cy","note":"","ucode":"50D653399A31F6","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":495357,"discussion_content":"需要排除刷单。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1617040632,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":212630,"user_name":"Geek_c9fa4e","can_delete":false,"product_type":"c1","uid":1972305,"ip_address":"","ucode":"391982F33C1AAA","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/ziaN7rOONp15HJm6A9JoAYicJL8VA59x10DX4JZyvcfqmmpCnumXgAkNn37aFoALftyTaQNlUF7te54LibvVm20TQ/132","comment_is_top":false,"comment_ctime":1588166900,"is_pvip":false,"replies":[{"id":"103964","content":"总结的很棒","user_name":"作者回复","user_name_real":"cy","uid":"1306094","ctime":1617288547,"ip_address":"","comment_id":212630,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5883134196","product_id":100021701,"comment_content":"PageRank算法原理：<br>   一个网页的影响力=所有入链集合页面的加权影响力之和。<br>  简单来说，根据你周围的人来去判断你这个人得影响力。","like_count":1,"discussions":[{"author":{"id":1306094,"avatar":"https://static001.geekbang.org/account/avatar/00/13/ed/ee/c4779b67.jpg","nickname":"cy","note":"","ucode":"50D653399A31F6","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":493569,"discussion_content":"总结的很棒","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1617288547,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":204289,"user_name":"Simon","can_delete":false,"product_type":"c1","uid":1914504,"ip_address":"","ucode":"A8A2E3E57BD029","user_header":"https://static001.geekbang.org/account/avatar/00/1d/36/88/20b6a6ee.jpg","comment_is_top":false,"comment_ctime":1586359979,"is_pvip":true,"replies":[{"id":"104325","content":"如果一个网页没有出链 ，就会吸收其它网页的PR不释放，最终会导致其它网页的PR为 0 ，这种现象叫做 等级泄露 。<br>就如我们Rank Leak下面的有向图，C节点只有入度没有出度，则转移矩阵中，C节点到其他节点的影响力都是0，则循环计算影响力后，其他节点的影响力将都是0","user_name":"作者回复","user_name_real":"cy","uid":"1306094","ctime":1617901288,"ip_address":"","comment_id":204289,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5881327275","product_id":100021701,"comment_content":"为什么Rank Leak会造成PR为0，怎么算的？","like_count":1,"discussions":[{"author":{"id":1306094,"avatar":"https://static001.geekbang.org/account/avatar/00/13/ed/ee/c4779b67.jpg","nickname":"cy","note":"","ucode":"50D653399A31F6","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":491132,"discussion_content":"如果一个网页没有出链 ，就会吸收其它网页的PR不释放，最终会导致其它网页的PR为 0 ，这种现象叫做 等级泄露 。\n就如我们Rank Leak下面的有向图，C节点只有入度没有出度，则转移矩阵中，C节点到其他节点的影响力都是0，则循环计算影响力后，其他节点的影响力将都是0","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1617901288,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":151316,"user_name":"William～Zhang","can_delete":false,"product_type":"c1","uid":1527138,"ip_address":"","ucode":"8659B589428F11","user_header":"https://static001.geekbang.org/account/avatar/00/17/4d/62/0fe9cbb3.jpg","comment_is_top":false,"comment_ctime":1573698610,"is_pvip":false,"replies":[{"id":"62668","content":"这个是通过转移矩阵来计算的，初始的时候 可以按照平均值的方式来划分每个页面的影响力，然后每次都通过转移矩阵来更新这些网页的影响力，多次迭代更新之后，影响力就趋于平稳了","user_name":"作者回复","user_name_real":"cy","uid":"1306094","ctime":1577082360,"ip_address":"","comment_id":151316,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5868665906","product_id":100021701,"comment_content":"老师，在计算一个网页u的影响力的时候，用到v的影响力，这是怎么得到的？","like_count":1,"discussions":[{"author":{"id":1306094,"avatar":"https://static001.geekbang.org/account/avatar/00/13/ed/ee/c4779b67.jpg","nickname":"cy","note":"","ucode":"50D653399A31F6","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":474434,"discussion_content":"这个是通过转移矩阵来计算的，初始的时候 可以按照平均值的方式来划分每个页面的影响力，然后每次都通过转移矩阵来更新这些网页的影响力，多次迭代更新之后，影响力就趋于平稳了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577082360,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":110939,"user_name":"吃饭睡觉打窦窦","can_delete":false,"product_type":"c1","uid":1357253,"ip_address":"","ucode":"CF5D4397180D8F","user_header":"","comment_is_top":false,"comment_ctime":1562399882,"is_pvip":false,"replies":[{"id":"40567","content":"先检查下等级泄露的矩阵，这里设置的是：<br>M=[0 0 0 1&#47;2] <br>     [1 0 0 0 ]<br>     [0 0 0 1&#47;2]<br>     [0 1 0 0 ]<br>然后看下你迭代的次数。参考代码：<br>import numpy as np<br>a_leak = np.array([[0, 0, 0, 1&#47;2], <br>\t\t\t\t   [1, 0, 0, 0],<br>\t\t\t\t   [0, 0, 0, 1&#47;2],<br>\t\t\t\t   [0, 1, 0, 0]])<br>b = np.array([1&#47;4, 1&#47;4, 1&#47;4, 1&#47;4])<br>w = b<br>print(a1)<br>for i in range(100):<br>\tw = np.dot(a_leak, w)<br>\tprint(w)","user_name":"编辑回复","user_name_real":"何昌梅","uid":"1165037","ctime":1562555520,"ip_address":"","comment_id":110939,"utype":2}],"discussion_count":3,"race_medal":0,"score":"5857367178","product_id":100021701,"comment_content":"为啥等级泄露，我的代码跑出来4个点的pr值没有出现0的情况","like_count":1,"discussions":[{"author":{"id":1165037,"avatar":"https://static001.geekbang.org/account/avatar/00/11/c6/ed/89a2dc13.jpg","nickname":"丢了个丢丢丢","note":"","ucode":"BDD7E97E0E5E96","race_medal":0,"user_type":4,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":457132,"discussion_content":"先检查下等级泄露的矩阵，这里设置的是：\nM=[0 0 0 1/2] \n     [1 0 0 0 ]\n     [0 0 0 1/2]\n     [0 1 0 0 ]\n然后看下你迭代的次数。参考代码：\nimport numpy as np\na_leak = np.array([[0, 0, 0, 1/2], \n\t\t\t\t   [1, 0, 0, 0],\n\t\t\t\t   [0, 0, 0, 1/2],\n\t\t\t\t   [0, 1, 0, 0]])\nb = np.array([1/4, 1/4, 1/4, 1/4])\nw = b\nprint(a1)\nfor i in range(100):\n\tw = np.dot(a_leak, w)\n\tprint(w)","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1562555520,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":4}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1622750,"avatar":"https://static001.geekbang.org/account/avatar/00/18/c2/de/98cd7728.jpg","nickname":"Lisa","note":"","ucode":"9879032355DC55","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":5272,"discussion_content":"按老师的代码算出来也不是0，都是差不多是1.45e-11之类的数，这是正常的么","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566126578,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1706074,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/08/5a/4d709cf5.jpg","nickname":"Pray、PF","note":"","ucode":"1E3E4073763490","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1622750,"avatar":"https://static001.geekbang.org/account/avatar/00/18/c2/de/98cd7728.jpg","nickname":"Lisa","note":"","ucode":"9879032355DC55","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":282543,"discussion_content":"不是吧 怎么我算出来都是-31次方的数，这种可以近似看为0","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1592012746,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":5272,"ip_address":""},"score":282543,"extra":""}]}]},{"had_liked":false,"id":102644,"user_name":"lipan","can_delete":false,"product_type":"c1","uid":1347460,"ip_address":"","ucode":"76E2CEEE454017","user_header":"https://static001.geekbang.org/account/avatar/00/14/8f/84/2c2d8c47.jpg","comment_is_top":false,"comment_ctime":1560269377,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5855236673","product_id":100021701,"comment_content":"最后图解。早期搜索引擎问题，写的是k-means算法的流程。","like_count":1},{"had_liked":false,"id":289844,"user_name":"Soul of the Dragon","can_delete":false,"product_type":"c1","uid":2438011,"ip_address":"","ucode":"21603099E51B8A","user_header":"https://static001.geekbang.org/account/avatar/00/25/33/7b/9e012181.jpg","comment_is_top":false,"comment_ctime":1619229064,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1619229064","product_id":100021701,"comment_content":"PageRank算法的原理：PageRank算法首先根据不同网页节点的出链数量计算出它们的跳转概率并构成转移矩阵，然后指定各个节点的初始影响力，两个矩阵相乘形成第一次转移，之后不断用<br>转移矩阵乘以新形成的影响力矩阵，反复迭代，直至第n次后影响力矩阵不再发生变化，各个网页的影响力趋于平衡。<br>实际例子：一个演员如果都是与知名导演合作，并且演的都是重要角色，说明这个演员在圈内的影响力较高。","like_count":0},{"had_liked":false,"id":258624,"user_name":"风","can_delete":false,"product_type":"c1","uid":1444483,"ip_address":"","ucode":"E1CE0825AAF805","user_header":"https://static001.geekbang.org/account/avatar/00/16/0a/83/f916f903.jpg","comment_is_top":false,"comment_ctime":1604507317,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1604507317","product_id":100021701,"comment_content":"PageRank感觉跟机器学习没什么关系，PageRank的模型建立以后，只能用来评价现有的网络里结点的影响力而已。而不会后续拿这个模型和新的数据去预测未来","like_count":0}]}