{"id":219788,"title":"19 | 综合案例：电商平台技术架构是如何演变的？","content":"<p>你好，我是王庆友。</p><p>在前面的几讲中，我分别和你介绍了技术架构的高可用、高性能、可伸缩等目标，并通过实际的案例说明了如何实现这些目标。今天呢，我会通过一个综合案例，来说明电商平台的技术架构是如何演变的，让你可以全面地理解如何实现这些目标。</p><p>一个实际的电商系统很复杂，在案例介绍中，为了简化，我用比较有代表性的<strong>交易系统</strong>和<strong>账户系统</strong>来代表整体的电商系统，并具体分析这两个系统在电商平台发展过程中，它们都碰到了什么瓶颈，以及我们在技术架构上是如何解决的。</p><p>这一讲会包含很多架构图，每一张图都代表了不同时期的架构设计，为了方便你更好地理解它们，在每张架构图中，我都用红色方框圈出了当前架构存在的问题，用绿色实体部分代表了上一个架构所存在问题的解决办法，希望你听完今天的讲解，能够结合这些架构图，加深对技术架构的理解。</p><h2>单体系统</h2><p><img src=\"https://static001.geekbang.org/resource/image/cf/cf/cf1a7a16f3a09eb85c7dd4c1c172c6cf.jpg?wh=2284*1280\" alt=\"\"></p><p>第一代的电商系统是一个单体架构，所有的代码都打包在一个应用里，部署的时候会有多个实例，我们通过<strong>负载均衡</strong>，把用户请求分发到具体的实例中。这个时候，所有的数据表还在一个数据库里。</p><p><strong>这里的问题是</strong>，单体应用的所有代码都放在一起，代码编译需要很长时间，应用启动也需要很长时间，并且代码相互依赖，开发效率低，并行开发困难。随着单体应用的体量越变越大，这些问题也越来越突出。</p><!-- [[[read_end]]] --><h2>SOA架构</h2><p><img src=\"https://static001.geekbang.org/resource/image/84/c9/84da834d04bd838a6c76b7a535340bc9.jpg?wh=2284*1440\" alt=\"\"></p><p><strong>针对单体应用体量过大带来的问题</strong>，我们<strong>对系统进行拆分</strong>，把整体系统分为多个子系统。比如在图中，我们把系统拆分为交易系统和账户系统，这两个系统（或者说服务）通过内部的负载均衡进行相互调用，这个时候，底层数据库还没有拆分，两个系统还是访问同一个数据库。</p><p>通过拆分，系统整体就变成了SOA架构，这样，我们减少了代码冲突，系统的开发也变得更加高效，部署的时候，我们也更容易针对各个系统的处理能力进行水平扩展。</p><p><strong>但这里的问题是</strong>，内部服务通过中心化的负载均衡进行访问，中心化的负载均衡增加了服务的调用时间。此外，在电商场景下，内部的服务很多，服务调用的频率很高，每秒可能有上百万次，导致了负载均衡的连接能力不够。而且负载均衡是单点，如果它出了问题，很容易引发系统整体的可用性问题（即使负载均衡是多实例，当系统流量很大时，也会因为某台负载有问题，导致其他节点压力增大而引起雪崩效应）。</p><h2>服务调用去中心化</h2><p><img src=\"https://static001.geekbang.org/resource/image/5c/a8/5cc8cddc0c25a847fce084ff890db1a8.jpg?wh=2284*1300\" alt=\"\"></p><p><strong>针对内部服务路由中心化的问题</strong>，我们去掉了内部的负载均衡，加入了<strong><span class=\"orange\">服务注册中心</span></strong>，比如ZooKeeper。</p><p>当服务实例启动或退出时，它们会自动在注册中心进行注册或销毁，服务的客户端和注册中心保持长连接，可以实时地获取可用的服务列表；然后在客户端，根据相应的算法选择服务实例，直接调用服务。每次调用无需经过注册中心，如果注册中心有问题，也只是新的服务实例无法注册，或者是已有的服务实例无法注销，这对客户端调用服务的影响是非常有限的。</p><p>当然，通过注册中心和更体系化的微服务框架，我们还可以实现完善的<strong>服务治理</strong>，包括服务隔离、熔断、降级，这些都是对原来简单的负载均衡方式的加强，能够进一步提升服务的可用性。</p><p>现在，我们解决了服务调用的问题，但随着业务量逐渐变大，数据表越来越多，数据量也越来越大，<strong>单个数据库（比如Oracle）的性能和储存容量已经无法满足需求了</strong>。这个时候，我们就需要对数据库进行改造，提升它的处理能力。</p><h2>垂直分库</h2><p><img src=\"https://static001.geekbang.org/resource/image/84/18/8440763ab5e043a4099c1424ba595018.jpg?wh=2284*1440\" alt=\"\"></p><p><strong>对于单个数据库性能和容量瓶颈</strong>，解决的办法就是，我们对数据库进行<strong><span class=\"orange\">垂直拆分</span></strong>，按照业务拆分为交易数据库和账户数据库，这样就可以满足它们各自的容量和性能需求，同时也避免了不同业务数据表之间的相互耦合。</p><p>你可以认为垂直分库是系统拆分的第二阶段，这样，通过第一阶段的应用代码拆分和这里的数据库表拆分，交易系统和账户系统就可以独立发展。</p><p><strong>不过，新的问题又来了</strong>，垂直分库后，每个数据库都是单实例。随着业务的发展，和原来系统只有单个数据库类似，现在交易系统也只有一个数据库，它的性能和容量还是有问题，并且数据库单实例也带来了可用性的问题，如果数据库挂了，相应的系统也就不可用。</p><h2>水平分库及高可用部署</h2><p><img src=\"https://static001.geekbang.org/resource/image/d6/70/d6b81b2d5317e872632e1d09ce2ac170.jpg?wh=2284*1320\" alt=\"\"></p><p><strong>针对单个数据库的<span class=\"orange\">可用性</span>问题</strong>，我们可以采用 <strong>MHA高可用</strong>（Master High Availability）方式部署。比如数据库部署一主多从，通过MHA机制，我们可以实时检测主库的可用性，如果主库有问题，系统会自动Failover（故障转移）到最新的从库。另一方面，我们还可以利用多个从库支持<strong>读写分离</strong>，减轻主库的访问压力。</p><p><strong>针对单个数据库的<span class=\"orange\">性能和容量</span>问题</strong>，首先我们可以<strong>引入缓存</strong>，在高读写比的场景下，让应用先访问缓存，大大减轻对底层数据库的压力。然后，我们可以对数据库按照某个维度（比如用户维度），进行<strong>水平拆分</strong>，把数据记录分布到多个实例中，最终分散主库的写压力以及数据存储的瓶颈（在<a href=\"https://time.geekbang.org/column/article/218385\">上一讲</a>中，我已经具体介绍过了，你可以点击链接去回顾内容）。</p><p>在实践中，我们还可以提供<strong>多套水平分库</strong>。比如说，针对交易数据，我们可以同时按照用户维度和商户维度进行水平分库，用户维度的库用于前台用户下单的场景，商户维度的库用于后台商家履单的场景。这里，只有用户维度的分库会支持<strong>写</strong>，我们通过数据同步机制，把用户维度分库的更新同步到商户维度的分库里。</p><p><strong>当系统体量发展到了一定程度，我们又碰到了新的问题</strong>：单个机房的服务器不够用，无法在同一个机房找到更多的机器部署交易系统和账户系统。</p><h2>多机房部署</h2><p><img src=\"https://static001.geekbang.org/resource/image/d6/cf/d618f33b2ac8799bf6bab3949ed344cf.jpg?wh=2284*1440\" alt=\"\"></p><p><strong>对于单机房服务器不够的问题</strong>，我们可以在新的机房部署交易系统和账户系统，为了落地方便，所有服务还是注册到旧机房的注册中心，数据还是存放在旧机房的交易数据库和账户数据库。 这样，我们通过在新机房部署应用，对应用节点进行水平扩展，从而解决了单机房机器不足的问题。</p><p><strong>但这里产生了<span class=\"orange\">跨机房访问</span>的问题</strong>：首先，我们只有一个服务注册中心，服务实例一部分部署在老机房，一部分部署在新机房，对于服务调用者来说，它会同时访问新旧机房的服务实例；其次，数据库部署在老机房，新机房的应用会访问旧机房的数据库。</p><p>这两种情况，都会产生大量的跨机房访问，我们知道，根据机房物理距离的不同，跨机房访问的网络延时在数十毫秒到数百毫秒之间，是机房内部通信耗时的上千倍，这会对<strong>应用的性能</strong>产生很大影响，而且跨机房的<strong>网络可用性</strong>也经常是一个问题。</p><h2>服务调用本地化</h2><p><img src=\"https://static001.geekbang.org/resource/image/bf/07/bfbf070729b23e11308dc8ed19cbc607.jpg?wh=2284*1580\" alt=\"\"></p><p>为了避免服务的跨机房访问，我们<strong>在新机房也单独部署了服务注册中心</strong>，让每个机房的服务注册到同机房的注册中心。这样，客户端的服务调用会路由到同机房的服务端，实现了服务调用的本地化，大大降低了跨机房通信带来的延时和不可用性问题。</p><p>这时，<strong>随着业务越来越复杂，新的问题又来了</strong>：交易系统会依赖很多周边服务。比如下单后，我们需要给用户送积分，交易系统会同步调用积分服务。但是同步调用积分服务，一方面会影响下单的性能，另一方面如果积分服务不可用，会导致核心的下单功能失败。</p><h2>依赖分级管理</h2><p><img src=\"https://static001.geekbang.org/resource/image/f0/91/f010a6bb35627923566a0f3484447091.jpg?wh=2284*1580\" alt=\"\"></p><p><strong>对于外部服务依赖的可用性问题</strong>，我们的解决办法是，针对这些外部依赖进行<strong><span class=\"orange\">分级管理</span></strong>，根据依赖功能的重要性不同，把它们分为强依赖和弱依赖。</p><ul>\n<li>对于强依赖，我们<strong>实时同步调用</strong>，比如在用户下单时调用库存服务，由于库存非常重要，必须实时扣减，如果调用库存服务失败，下单也失败。</li>\n<li>对于大量的弱依赖，我们以<strong>异步消息</strong>的方式进行信息同步，比如对于积分服务，可以通过柔性事务来保证数据的最终一致性，这样大大提升了核心系统的性能和可用性。</li>\n</ul><p><strong>不过，这里存在的问题是</strong>，新机房的交易系统和账户系统都在访问老机房的数据库，有跨机房数据库访问的性能问题，以及老机房整体故障带来的可用性问题。比如说，机房断电，通信光纤有问题或者发生自然灾害，导致老机房整体不可用，这就会导致所有系统都不可用。</p><h2>多机房独立部署</h2><p><img src=\"https://static001.geekbang.org/resource/image/63/ca/6301edac111c2f9f4dbd5492cbf0aaca.jpg?wh=2284*1580\" alt=\"\"></p><p><strong>针对机房整体不可用的问题</strong>，解决方案是，我们<strong>在多个机房做对等的部署</strong>，这样每个机房的系统可以形成内部闭环，包括服务、注册中心和数据库，机房之间不产生直接的相互依赖，从而实现了机房级别的水平部署。</p><p>如果系统的单元化做得完善，我们还可以进一步支持<strong>虚拟机房</strong>的概念，一个物理机房可以部署多个虚拟机房，每个虚拟机房包含了一个完整的系统。通过多机房独立部署，我们极大地提升了系统的可用性、处理能力和可伸缩性，可以应对系统面临的各种异常情况。</p><p>另外，最近几年，容器化技术的发展很快，原来很多的电商平台都是基于<strong>虚拟机</strong>部署，现在也纷纷改造为用<strong>Docker+K8s</strong>的方式部署，这大大提升了资源的利用率、系统的弹性伸缩能力。在面临资源瓶颈时，你可以考虑用这种方式来优化系统的部署。</p><h2>总结</h2><p>今天，我基于一个简化的电商系统模型，与你分享了电商平台的技术架构发展过程，我们是如何通过一步步的架构升级，解决系统各个阶段出现的高可用、高性能和可伸缩问题的，相信你现在对技术架构如何应对各种系统性挑战，有了更深入的认识。</p><p><strong>值得注意的是</strong>，系统的技术架构变化不一定要完全遵循这个过程，不同的业务、不同的发展阶段，对系统的要求都是不一样的，这里我给出的只是典型的问题和解决手段，希望你在工作中，能够具体情况具体分析，灵活地运用这些手段。</p><p>业务在不断发展，新的问题会不断出现，但技术也在不断地进步，解决的手段层出不穷，我们需要不断学习，找到新的手段来解决问题。</p><p><strong>最后，给你留一道思考题</strong>：你的公司当前的系统架构处于哪个阶段，面临什么样的问题呢？</p><p>欢迎在留言区和我互动，我会第一时间给你反馈。如果这节课对你有帮助，也欢迎你把它分享给你的朋友。感谢阅读，我们下期再见。</p>","neighbors":{"left":{"article_title":"18 | 可伸缩架构案例：数据太多，如何无限扩展你的数据库？","id":218385},"right":{"article_title":"20 | 从务实的角度，给你架构设计的重点知识和学习路径","id":221314}},"comments":[{"had_liked":false,"id":201911,"user_name":"J.Smile","can_delete":false,"product_type":"c1","uid":1336475,"ip_address":"","ucode":"C4D98DFDBF7584","user_header":"https://static001.geekbang.org/account/avatar/00/14/64/9b/0b578b08.jpg","comment_is_top":false,"comment_ctime":1585876375,"is_pvip":false,"discussion_count":6,"race_medal":0,"score":"40240582039","product_id":100046301,"comment_content":"这篇特干货，👏。<br>尤其是文章开头的使用注册中心代替传统nginx.降低调用耗时的方式，突然间明白了很多。这应该就是为什么分布式架构流行的原因之一了。感谢！<br>","like_count":9,"discussions":[{"author":{"id":1124075,"avatar":"https://static001.geekbang.org/account/avatar/00/11/26/eb/24e0ac9c.jpg","nickname":"嬴梦川","note":"","ucode":"104CDFD26A1711","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":333096,"discussion_content":"我理解的这里的关键是去中心化，分摊网络中心节点(nginx)的压力以及一旦出故障就将带来大面积调用瘫痪的巨大风险…","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1607432382,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1336475,"avatar":"https://static001.geekbang.org/account/avatar/00/14/64/9b/0b578b08.jpg","nickname":"J.Smile","note":"","ucode":"C4D98DFDBF7584","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1124075,"avatar":"https://static001.geekbang.org/account/avatar/00/11/26/eb/24e0ac9c.jpg","nickname":"嬴梦川","note":"","ucode":"104CDFD26A1711","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":333110,"discussion_content":"嗯，verygood","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1607434067,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":333096,"ip_address":""},"score":333110,"extra":""}]},{"author":{"id":1000417,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/43/e1/b7be5560.jpg","nickname":"sam","note":"","ucode":"8D48F4B9045947","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":291950,"discussion_content":"没太理解注册中心，他是怎么做到负载均衡的？\n另外，nginx的使用场景能完全被注册中心代替吗","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1595030386,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":3,"child_discussions":[{"author":{"id":1336475,"avatar":"https://static001.geekbang.org/account/avatar/00/14/64/9b/0b578b08.jpg","nickname":"J.Smile","note":"","ucode":"C4D98DFDBF7584","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1000417,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/43/e1/b7be5560.jpg","nickname":"sam","note":"","ucode":"8D48F4B9045947","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":291964,"discussion_content":"负载均衡的方式不同，nginx做负载均衡相当于中间反向代理多了一层，而注册中心这种把地址列表给了客户端，客户端选择一个地址直接rpc到服务端性能更高。","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1595034253,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":291950,"ip_address":""},"score":291964,"extra":""},{"author":{"id":1000417,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/43/e1/b7be5560.jpg","nickname":"sam","note":"","ucode":"8D48F4B9045947","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1336475,"avatar":"https://static001.geekbang.org/account/avatar/00/14/64/9b/0b578b08.jpg","nickname":"J.Smile","note":"","ucode":"C4D98DFDBF7584","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":292038,"discussion_content":"明白了，谢谢老师解答。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1595059504,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":291964,"ip_address":""},"score":292038,"extra":""},{"author":{"id":2166073,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/k3YD3y3BzGDSdrwRJyJY4BXsNJibfM4uzOdDVKIAlFApR2FZCLg2ibrZtJ4vuahA3LHLW9GKzH5CMGqCDhWjhZqg/132","nickname":"戒酒的李白","note":"","ucode":"744E1A22761647","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1000417,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/43/e1/b7be5560.jpg","nickname":"sam","note":"","ucode":"8D48F4B9045947","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":560569,"discussion_content":"注册中心只是提供了服务的注册和发现，provider起服务时会将自己的地址注册到注册中心，consumer起服务的时候从注册中心拿到可用的服务地址列表，然后自己根据负载均衡策略（在客户端实现），选择一个节点调用。这样就实现了服务的自动发现。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1649393606,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":291950,"ip_address":""},"score":560569,"extra":""}]}]},{"had_liked":false,"id":252513,"user_name":"秋天","can_delete":false,"product_type":"c1","uid":1057056,"ip_address":"","ucode":"A7E1D953EF7E17","user_header":"https://static001.geekbang.org/account/avatar/00/10/21/20/1299e137.jpg","comment_is_top":false,"comment_ctime":1602324770,"is_pvip":true,"replies":[{"id":"92441","content":"需要数据同步，可以是A地的主库包括部分数据（比如奇数用户ID的订单），同步给B地的从库，B地也有主库（偶数用户ID的订单），同步给A地的从库，这样A&#47;B地都有完整数据。如果AB物理挨得近，可以是裸光纤数据库同步的方式，远的话可以使用其他中间件同步。","user_name":"作者回复","user_name_real":"王庆友","uid":"1268522","ctime":1602578189,"ip_address":"","comment_id":252513,"utype":1}],"discussion_count":1,"race_medal":0,"score":"35962063138","product_id":100046301,"comment_content":"问一下 多机房独立部署 数据库数据需要做同步吗？如何同步？","like_count":8,"discussions":[{"author":{"id":1268522,"avatar":"https://static001.geekbang.org/account/avatar/00/13/5b/2a/83c3cb2d.jpg","nickname":"王庆友","note":"","ucode":"90D8743C4A6C79","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":506793,"discussion_content":"需要数据同步，可以是A地的主库包括部分数据（比如奇数用户ID的订单），同步给B地的从库，B地也有主库（偶数用户ID的订单），同步给A地的从库，这样A/B地都有完整数据。如果AB物理挨得近，可以是裸光纤数据库同步的方式，远的话可以使用其他中间件同步。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1602578189,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":201876,"user_name":"芒果","can_delete":false,"product_type":"c1","uid":1124278,"ip_address":"","ucode":"5AD71E7F9FC738","user_header":"https://static001.geekbang.org/account/avatar/00/11/27/b6/e53c17ee.jpg","comment_is_top":false,"comment_ctime":1585871647,"is_pvip":false,"replies":[{"id":"75525","content":"1. 理想情况下，各个机房业务自成闭环，比如A机房处理用户Id是2倍数的用户交易，B机房处理另外用户。这里的数据库是水平分库，这两部分用户的订单放在不同的库里，A机房的订单会同步给B机房，反之一样。每个机房都会有全量数据。如果机房靠的近，可以采用数据库自带的主从同步方式，隔得远，使用程序同步机制。<br>2. 有状态的数据库一般不用docker部署。<br>","user_name":"作者回复","user_name_real":"王庆友","uid":"1268522","ctime":1585899437,"ip_address":"","comment_id":201876,"utype":1}],"discussion_count":3,"race_medal":0,"score":"27355675423","product_id":100046301,"comment_content":"老师您好，看完文章有2个问题？<br>1.请问多机房独立部署的话，数据同步这块是怎么做的呢？<br>2.我们公司现在也在采用k8s和docker的方式部署应用，但是类似数据库还是没有容器化。请问目前业界也是这样吗？还是已经实现全部上k8s部署了？","like_count":6,"discussions":[{"author":{"id":1268522,"avatar":"https://static001.geekbang.org/account/avatar/00/13/5b/2a/83c3cb2d.jpg","nickname":"王庆友","note":"","ucode":"90D8743C4A6C79","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":490444,"discussion_content":"1. 理想情况下，各个机房业务自成闭环，比如A机房处理用户Id是2倍数的用户交易，B机房处理另外用户。这里的数据库是水平分库，这两部分用户的订单放在不同的库里，A机房的订单会同步给B机房，反之一样。每个机房都会有全量数据。如果机房靠的近，可以采用数据库自带的主从同步方式，隔得远，使用程序同步机制。\n2. 有状态的数据库一般不用docker部署。\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585899437,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1489957,"avatar":"https://static001.geekbang.org/account/avatar/00/16/bc/25/1c92a90c.jpg","nickname":"tt","note":"","ucode":"7753B79AD5A9AC","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":220517,"discussion_content":"我也想问问，k8s管理资源，可是存储节点是有状态的，即使k8s可以方便的扩缩容，可是对数据的重新分布，我觉得帮助不大呀","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585887843,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1124278,"avatar":"https://static001.geekbang.org/account/avatar/00/11/27/b6/e53c17ee.jpg","nickname":"芒果","note":"","ucode":"5AD71E7F9FC738","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1489957,"avatar":"https://static001.geekbang.org/account/avatar/00/16/bc/25/1c92a90c.jpg","nickname":"tt","note":"","ucode":"7753B79AD5A9AC","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":220974,"discussion_content":"是的，数据库的属于有状态，而且比较复杂，因此不太适合容器部署，开发环境要求不高，我们用了容器。但是生产环境还是用传统方式部署的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585953301,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":220517,"ip_address":""},"score":220974,"extra":""}]}]},{"had_liked":false,"id":204761,"user_name":"brant","can_delete":false,"product_type":"c1","uid":1266445,"ip_address":"","ucode":"A25F8301EDB77E","user_header":"https://static001.geekbang.org/account/avatar/00/13/53/0d/22735b5a.jpg","comment_is_top":false,"comment_ctime":1586450741,"is_pvip":false,"replies":[{"id":"76554","content":"wms和oms应该解耦，前置仓也是物理库存吧，理论上可以把它们当小仓看，也有出入库操作，可以和wms在一起。只是粗略建议，具体要看场景差异。<br>有个建议，和专栏关系不是特别密切的问题，大家也可以加我微信深入沟通:brucetwins","user_name":"作者回复","user_name_real":"王庆友","uid":"1268522","ctime":1586487174,"ip_address":"","comment_id":204761,"utype":1}],"discussion_count":2,"race_medal":0,"score":"14471352629","product_id":100046301,"comment_content":"老师咨询一个关于wms系统平台化的思路。背景是这样的，我们一开始自研发的wms系统只服务于大仓，然后慢慢又了前置仓，有些流程是不一样的。这个时候我们是用一套，然后进行配置化来实现比较好，还是抽象两个烟囱式的模型比较好。另外一个情况就是之前打造wms的时候跟oms系统比较耦合，然后目前出现了其他公司订单要直接对接我们的wms系统，这方面老师有什么建议么","like_count":3,"discussions":[{"author":{"id":1268522,"avatar":"https://static001.geekbang.org/account/avatar/00/13/5b/2a/83c3cb2d.jpg","nickname":"王庆友","note":"","ucode":"90D8743C4A6C79","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":491277,"discussion_content":"wms和oms应该解耦，前置仓也是物理库存吧，理论上可以把它们当小仓看，也有出入库操作，可以和wms在一起。只是粗略建议，具体要看场景差异。\n有个建议，和专栏关系不是特别密切的问题，大家也可以加我微信深入沟通:brucetwins","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1586487174,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1080998,"avatar":"https://static001.geekbang.org/account/avatar/00/10/7e/a6/188817b6.jpg","nickname":"郭嵩阳","note":"","ucode":"9DC42C7B73F580","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":235156,"discussion_content":"微信都给出来了 大佬真是实在人 专栏讲的太好了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1587024716,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":297064,"user_name":"阿甘","can_delete":false,"product_type":"c1","uid":1057843,"ip_address":"","ucode":"BC93175B70E05D","user_header":"https://static001.geekbang.org/account/avatar/00/10/24/33/bcf37f50.jpg","comment_is_top":false,"comment_ctime":1623296605,"is_pvip":true,"replies":[{"id":"108388","content":"多机房部署，这里只提供思路，细化的架构设计很复杂，包括db数据，应用跨机房调用，缓存，消息系统等等。比如db数据同步，对于用户A，它的主库数据在A机房，从库数据在B机房，通过专线做主从同步，如果A机房主库出问题，可以从B机房的从库同步数据回来，也可以把B机房的从库升级为主库(如果B机房和A机房是同城就近部署的话)，具体需要根据实际情况而定。","user_name":"作者回复","user_name_real":"王庆友","uid":"1268522","ctime":1624351682,"ip_address":"","comment_id":297064,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10213231197","product_id":100046301,"comment_content":"写的挺好。关于多机房部署有几个疑问：<br>1. 多机房部署之后，用户如何分片和路由（根据用户id分片当然简单，但是这样没法实现就近接入，比如广东的用户被分片到北京的机房那这个访问体验肯定是很差的）<br>2. 多机房部署之后，各机房之间的数据是怎样同步的？<br>3. 当某个机房故障发生的时候，这个切换过程是怎样的呢？","like_count":2,"discussions":[{"author":{"id":1268522,"avatar":"https://static001.geekbang.org/account/avatar/00/13/5b/2a/83c3cb2d.jpg","nickname":"王庆友","note":"","ucode":"90D8743C4A6C79","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":521705,"discussion_content":"多机房部署，这里只提供思路，细化的架构设计很复杂，包括db数据，应用跨机房调用，缓存，消息系统等等。比如db数据同步，对于用户A，它的主库数据在A机房，从库数据在B机房，通过专线做主从同步，如果A机房主库出问题，可以从B机房的从库同步数据回来，也可以把B机房的从库升级为主库(如果B机房和A机房是同城就近部署的话)，具体需要根据实际情况而定。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1624351682,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":204266,"user_name":"孙同学","can_delete":false,"product_type":"c1","uid":1676238,"ip_address":"","ucode":"C6C82400D15336","user_header":"https://static001.geekbang.org/account/avatar/00/19/93/ce/092acd6a.jpg","comment_is_top":false,"comment_ctime":1586357854,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10176292446","product_id":100046301,"comment_content":"https:&#47;&#47;www.processon.com&#47;view&#47;link&#47;5e51378ce4b0c037b5f9d1e3 整理更新","like_count":2},{"had_liked":false,"id":351175,"user_name":"fffddss","can_delete":false,"product_type":"c1","uid":1003338,"ip_address":"","ucode":"37B4BA3AD2B4BD","user_header":"https://static001.geekbang.org/account/avatar/00/0f/4f/4a/2e18e782.jpg","comment_is_top":false,"comment_ctime":1657590661,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"5952557957","product_id":100046301,"comment_content":"看到很多人提问跨机房数据库同步的方案，可以了解下阿里的   DRC(Data Replication Center)  <br>可以比较完美的解决跨机房数据同步等问题","like_count":1},{"had_liked":false,"id":227147,"user_name":"jian","can_delete":false,"product_type":"c1","uid":1185102,"ip_address":"","ucode":"21CDBBB8000F0C","user_header":"https://static001.geekbang.org/account/avatar/00/12/15/4e/4636a81d.jpg","comment_is_top":false,"comment_ctime":1592298288,"is_pvip":false,"replies":[{"id":"84608","content":"对的，是两套表，简单的lookup不能很好地解决问题。比如给定商户ID，在用户维度库里如何找出该商家下的订单呢？只能扫描所有用户维度的分库。","user_name":"作者回复","user_name_real":"王庆友","uid":"1268522","ctime":1592966494,"ip_address":"","comment_id":227147,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5887265584","product_id":100046301,"comment_content":"请教一下老师，这里说“在实践中，我们还可以提供多套水平分库。比如说，针对交易数据，我们可以同时按照用户维度和商户维度进行水平分库，用户维度的库用于前台用户下单的场景，商户维度的库用于后台商家履单的场景。这里，只有用户维度的分库会支持写，我们通过数据同步机制，把用户维度分库的更新同步到商户维度的分库里。”。这是指存储两份相同的数据，只是维度不一样吗？为什么不用lookup表或者缓存实现？","like_count":1,"discussions":[{"author":{"id":1268522,"avatar":"https://static001.geekbang.org/account/avatar/00/13/5b/2a/83c3cb2d.jpg","nickname":"王庆友","note":"","ucode":"90D8743C4A6C79","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":498512,"discussion_content":"对的，是两套表，简单的lookup不能很好地解决问题。比如给定商户ID，在用户维度库里如何找出该商家下的订单呢？只能扫描所有用户维度的分库。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1592966494,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":215496,"user_name":"Robin康F","can_delete":false,"product_type":"c1","uid":1962437,"ip_address":"","ucode":"618F8686D1231D","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJyLCPnVq4gKMN5jPcd9wVVEXtZMibCNAkLrJf4uZKdV40Nelb3uPtCETfuw5hbbC693sUHQpRUMiaA/132","comment_is_top":false,"comment_ctime":1589002338,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5883969634","product_id":100046301,"comment_content":"公司用的是uc云服务，正在切腾讯云服务，整体已经在朝着最终形态进展，只是内部服务还没有拆分的很细，比如共用了一套web服务，rpc服务进行业务垂直拆分，也算比较合理，毕竟暂时还不需要拆那么细","like_count":1},{"had_liked":false,"id":205956,"user_name":"探索无止境","can_delete":false,"product_type":"c1","uid":1044178,"ip_address":"","ucode":"91D2A9907DFA79","user_header":"https://static001.geekbang.org/account/avatar/00/0f/ee/d2/7024431c.jpg","comment_is_top":false,"comment_ctime":1586763305,"is_pvip":false,"replies":[{"id":"77034","content":"机房靠的近的话，可以直接用数据库本身的同步功能。机房隔得远，可以选择解析底层的binlog，然后同步。使用偏上层的消息中间件也是一种选择，但这个更合适业务系统间的数据同步。<br>多机房部署很复杂，包括数据分布，缓存，消息系统等，大家有这个概念就行，深入下去，要解决的问题比较多。","user_name":"作者回复","user_name_real":"王庆友","uid":"1268522","ctime":1586833171,"ip_address":"","comment_id":205956,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5881730601","product_id":100046301,"comment_content":"老师的每篇文章都值得二刷，而且每次提问都得到老师的指点，非常推荐订阅！关于最后提到的双机房模式，还要考虑两个机房的数据同步问题，是不是采用消息中间件异步的方式来实现两个机房的数据库数据同步？","like_count":1,"discussions":[{"author":{"id":1268522,"avatar":"https://static001.geekbang.org/account/avatar/00/13/5b/2a/83c3cb2d.jpg","nickname":"王庆友","note":"","ucode":"90D8743C4A6C79","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":491629,"discussion_content":"机房靠的近的话，可以直接用数据库本身的同步功能。机房隔得远，可以选择解析底层的binlog，然后同步。使用偏上层的消息中间件也是一种选择，但这个更合适业务系统间的数据同步。\n多机房部署很复杂，包括数据分布，缓存，消息系统等，大家有这个概念就行，深入下去，要解决的问题比较多。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1586833171,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":201883,"user_name":"hello","can_delete":false,"product_type":"c1","uid":1464199,"ip_address":"","ucode":"854500026E2187","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKhuGLVRYZibOTfMumk53Wn8Q0Rkg0o6DzTicbibCq42lWQoZ8lFeQvicaXuZa7dYsr9URMrtpXMVDDww/132","comment_is_top":false,"comment_ctime":1585872754,"is_pvip":false,"replies":[{"id":"75526","content":"可以参考我另一个问题的回复","user_name":"作者回复","user_name_real":"王庆友","uid":"1268522","ctime":1585899462,"ip_address":"","comment_id":201883,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5880840050","product_id":100046301,"comment_content":"老师，请教您一个问题，您说的多机房独立部署方案，那存储问题是如何解决的？","like_count":1,"discussions":[{"author":{"id":1268522,"avatar":"https://static001.geekbang.org/account/avatar/00/13/5b/2a/83c3cb2d.jpg","nickname":"王庆友","note":"","ucode":"90D8743C4A6C79","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":490447,"discussion_content":"可以参考我另一个问题的回复","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585899462,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":351070,"user_name":"时隐时现","can_delete":false,"product_type":"c1","uid":1111899,"ip_address":"","ucode":"DA4D622FF84920","user_header":"https://static001.geekbang.org/account/avatar/00/10/f7/5b/d2e7c2c4.jpg","comment_is_top":false,"comment_ctime":1657509758,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1657509758","product_id":100046301,"comment_content":"优秀，这篇太值得了","like_count":0},{"had_liked":false,"id":318452,"user_name":"流云追风","can_delete":false,"product_type":"c1","uid":2611950,"ip_address":"","ucode":"16D738406CB191","user_header":"https://static001.geekbang.org/account/avatar/00/27/da/ee/63090718.jpg","comment_is_top":false,"comment_ctime":1635301549,"is_pvip":false,"replies":[{"id":"117009","content":"大的互联网平台都是自建机房，或者说自建内部云，多机房协同的复杂性也不是公有云能解决的。比如美团，它不会用腾讯云或阿里云。","user_name":"作者回复","user_name_real":"编辑","uid":"1268522","ctime":1637284639,"ip_address":"","comment_id":318452,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1635301549","product_id":100046301,"comment_content":"为什么选择了多机房而不是上云呢？","like_count":0,"discussions":[{"author":{"id":1268522,"avatar":"https://static001.geekbang.org/account/avatar/00/13/5b/2a/83c3cb2d.jpg","nickname":"王庆友","note":"","ucode":"90D8743C4A6C79","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":531313,"discussion_content":"大的互联网平台都是自建机房，或者说自建内部云，多机房协同的复杂性也不是公有云能解决的。比如美团，它不会用腾讯云或阿里云。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1637284639,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1676962,"avatar":"https://static001.geekbang.org/account/avatar/00/19/96/a2/c1596dd8.jpg","nickname":"🤔","note":"","ucode":"40ACB53BF3C6B1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":569837,"discussion_content":"看实际情况，不过有多少个像美团的这样的体量呢","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1651569827,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":278516,"user_name":"楼下小黑哥","can_delete":false,"product_type":"c1","uid":1014680,"ip_address":"","ucode":"453B099B0EE52E","user_header":"https://static001.geekbang.org/account/avatar/00/0f/7b/98/8f1aecf4.jpg","comment_is_top":false,"comment_ctime":1613013184,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1613013184","product_id":100046301,"comment_content":"多机房部署，有一个问题，有些定时任务只能在一个机房执行，那么多机房部署的时候，只能指定一个机房指定运行。<br>我们之前的方案，比较粗暴，指定运行一个机房节点。<br>现在我们依靠 elastic-job，全局控制定时任务只在一个节点运行。","like_count":0},{"had_liked":false,"id":202796,"user_name":"小洛","can_delete":false,"product_type":"c1","uid":1005062,"ip_address":"","ucode":"227EC21891012B","user_header":"https://static001.geekbang.org/account/avatar/00/0f/56/06/ea49b29d.jpg","comment_is_top":false,"comment_ctime":1586070959,"is_pvip":false,"replies":[{"id":"76094","content":"原则上来说，北方的用户来到南方使用我们的系统，我们是路由回北方机房，这个只是接入层长途路由，服务端内部还是走北方机房，性能问题不大。<br>","user_name":"作者回复","user_name_real":"王庆友","uid":"1268522","ctime":1586244025,"ip_address":"","comment_id":202796,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1586070959","product_id":100046301,"comment_content":"这篇是一篇很好的体系化梳理文章  谢谢老师的分享，请教您一个问题<br>1、如果是多机房独立部署，假设有北方机房，南方机房，这个距离很远（甚至可以是国内、国外这么远），那么北方的用户来到南方使用我们的系统，我们是路由回北方机房进行服务提供吗？要如何优化这种业务场景呢？","like_count":0,"discussions":[{"author":{"id":1268522,"avatar":"https://static001.geekbang.org/account/avatar/00/13/5b/2a/83c3cb2d.jpg","nickname":"王庆友","note":"","ucode":"90D8743C4A6C79","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":490689,"discussion_content":"原则上来说，北方的用户来到南方使用我们的系统，我们是路由回北方机房，这个只是接入层长途路由，服务端内部还是走北方机房，性能问题不大。\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1586244025,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2230909,"avatar":"https://static001.geekbang.org/account/avatar/00/22/0a/7d/ac715471.jpg","nickname":"独孤九剑","note":"","ucode":"6C1253E2B8C1D4","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":374361,"discussion_content":"可以用CDN吧","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1621150861,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":202145,"user_name":"川杰","can_delete":false,"product_type":"c1","uid":1099750,"ip_address":"","ucode":"815211E1D698E6","user_header":"https://static001.geekbang.org/account/avatar/00/10/c7/e6/11f21cb4.jpg","comment_is_top":false,"comment_ctime":1585909196,"is_pvip":false,"replies":[{"id":"76097","content":"你这里交易服务和结算服务有上下游关系，有直接调用关系也正常。<br>或者你拆分的更彻底一些，把交易服务分为偏上层的和偏底层的，偏上层的交易服务同时调用底层交易服务和结算服务。","user_name":"作者回复","user_name_real":"王庆友","uid":"1268522","ctime":1586244478,"ip_address":"","comment_id":202145,"utype":1}],"discussion_count":3,"race_medal":0,"score":"1585909196","product_id":100046301,"comment_content":"接上一个。<br>我可能没有阐述清楚，我们有一张大的结算指令表，表中有一个交易编号的字段，如果结算服务不访问交易，那么只能:<br>1.调用结算服务，返回要计算的结算指令上的所有交易编号。<br>2.调用交易服务，获取交易数据。<br>3.将交易数据传给结算服务的下一个计算接口。<br>这样不是太麻烦了？","like_count":0,"discussions":[{"author":{"id":1268522,"avatar":"https://static001.geekbang.org/account/avatar/00/13/5b/2a/83c3cb2d.jpg","nickname":"王庆友","note":"","ucode":"90D8743C4A6C79","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":490515,"discussion_content":"你这里交易服务和结算服务有上下游关系，有直接调用关系也正常。\n或者你拆分的更彻底一些，把交易服务分为偏上层的和偏底层的，偏上层的交易服务同时调用底层交易服务和结算服务。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1586244478,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1114999,"avatar":"https://static001.geekbang.org/account/avatar/00/11/03/77/3f6a76a9.jpg","nickname":"极客","note":"","ucode":"A4AAA6B4F40E66","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":221078,"discussion_content":"结算前或者定时任务  把交易流水信息表中当天的数据 导入结算表。结算的时候查询结算表是否可行呢\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585971864,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1099750,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c7/e6/11f21cb4.jpg","nickname":"川杰","note":"","ucode":"815211E1D698E6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1114999,"avatar":"https://static001.geekbang.org/account/avatar/00/11/03/77/3f6a76a9.jpg","nickname":"极客","note":"","ucode":"A4AAA6B4F40E66","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":223691,"discussion_content":"可行，但是增加了不必要的代码复杂度","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1586246316,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":221078,"ip_address":""},"score":223691,"extra":""}]}]},{"had_liked":false,"id":202141,"user_name":"川杰","can_delete":false,"product_type":"c1","uid":1099750,"ip_address":"","ucode":"815211E1D698E6","user_header":"https://static001.geekbang.org/account/avatar/00/10/c7/e6/11f21cb4.jpg","comment_is_top":false,"comment_ctime":1585908756,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1585908756","product_id":100046301,"comment_content":"老师好，请教一个问题。<br>我们系统目前是单体应用，正在往服务化做拆分，目前的计划是先拆分一个跟主业务关系不大的模块（结算模块）。<br>现在碰到了一个问题，因为我们是金融系统，有交易模块，结算模块等。当做了服务化拆分后，结算模块和交易模块被分离。<br>但是，结算的业务处理过程中，有些业务场景需要根据交易编号查找交易（可能100个场景里只有10个场景需要这么做）。<br>因为原先是单体应用，结算模块直接查了交易表，现在拆分开了，按道理来说，结算不应该查询交易表了，而是应该由上层（服务编排或者网关那里）把交易数据提供给结算服务。<br>可是，由于往往是在结算业务处理过程中才需要查询交易数据，而且是个别场景需要查询且查出来的只是单个交易对象，所以我不可能在上层一次性把所有交易数据全部传给接口。<br>这个时候要怎么做才合适？","like_count":0}]}