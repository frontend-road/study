{"id":252887,"title":"06 | 转义：正则中转义需要注意哪些问题？","content":"<p>你好，我是伟忠。今天我来和你聊聊转义。转义对我们来说都不算陌生，编程的时候，使用到字符串时，双引号里面如果再出现双引号，我们就可以通过转义来解决。就像下面这样：</p><pre><code>str = &quot;How do you spell the word \\&quot;regex\\&quot;?&quot;\n</code></pre><p>虽然转义在日常工作中比较常见，但正则中什么时候需要转义，什么时候不用转义，在真正使用的时候可能会遇到这些麻烦。所以我们很有必要来系统了解一下正则中的转义。</p><h2>转义字符</h2><p>首先我们说一下什么是转义字符（Escape Character）。它在维基百科中是这么解释的：</p><blockquote>\n<p>在计算机科学与远程通信中，当转义字符放在字符序列中，它将对它后续的几个字符进行替代并解释。通常，判定某字符是否为转义字符由上下文确定。转义字符即标志着转义序列开始的那个字符。</p>\n</blockquote><p>这么说可能有点不好理解，我再来给你通俗地解释一下。转义序列通常有两种功能。第一种功能是编码无法用字母表直接表示的特殊数据。第二种功能是用于表示无法直接键盘录入的字符（如回车符）。</p><p>我们这节课说的就是第二种情况，转义字符自身和后面的字符看成一个整体，用来表示某种含义。最常见的例子是，C语言中用反斜线字符“\\”作为转义字符，来表示那些不可打印的ASCII控制符。另外，在URI协议中，请求串中的一些符号有特殊含义，也需要转义，转义字符用的是百分号“%”。之所以把这个字符称为<strong>转义字符</strong>，是因为它后面的字符，不是原来的意思了。</p><!-- [[[read_end]]] --><p>在日常工作中经常会遇到转义字符，比如我们在shell中删除文件，如果文件名中有*号，我们就需要转义，此时我们能看出，使用了转义字符后，*号就能放进文件名里了。</p><pre><code>rm access_log*    # 删除当前目录下 access_log 开头的文件\nrm access_log\\*   # 删除当前目录下名字叫 access_log* 的文件\n</code></pre><p>再比如我们在双引号中又出现了双引号，这时候就需要转义了，转义之后才能正常表示双引号，否则会报语法错误。比如下面的示例，引号中的 Hello World! 也是含有引号的。</p><pre><code>print &quot;tom said \\&quot;Hello World!\\&quot; to the crowd.&quot;\n</code></pre><p>下面是一些常见的转义字符以及它们的含义。</p><p><img src=\"https://static001.geekbang.org/resource/image/03/35/034b3619dab627fc96b85ac8de004b35.jpg?wh=1355*675\" alt=\"\"></p><h2>字符串转义和正则转义</h2><p>说完了转义字符，我们再来看一下正则中的转义。正则中也是使用反斜杠进行转义的。</p><p>一般来说，正则中 \\d 代表的是单个数字，但如果我们想表示成 反斜杠和字母d，这时候就需要进行转义，写成 <code>\\\\d</code>，这个就表示反斜杠后面紧跟着一个字母d。</p><p><img src=\"https://static001.geekbang.org/resource/image/11/e9/112c1fa35dbc600c3fc8e6562aea46e9.png?wh=1074*606\" alt=\"\"></p><p>刚刚的反斜杠和d是连续出现的两个字符，如果你想表示成反斜杠或d，可以用管道符号或中括号来实现，比如 \\|d 或 [\\d]。</p><p><img src=\"https://static001.geekbang.org/resource/image/yy/35/yy70d6900cfbe786d64bdc7b5d87e735.png?wh=1076*606\" alt=\"\"></p><p>需要注意的是，如果你想用代码来测试这个，在程序中表示普通字符串的时候，我们如果要表示反斜杠，通常需要写成两个反斜杠，因为只写一个会被理解成“转义符号”，而不是反斜杠本身。</p><p>下面我给出使用 Python3 来测试的情况，你可以看一下。</p><pre><code>&gt;&gt;&gt; import re\n&gt;&gt;&gt; re.findall('\\\\|d', 'a*b+c?\\d123d\\')  # 字符串没转义&quot;反斜杠&quot;\n  File &quot;&lt;input&gt;&quot;, line 1\n      re.findall('\\\\|d', 'a*b+c?\\d123d\\')\n                                       ^\nSyntaxError: EOL while scanning string literal\n\n&gt;&gt;&gt; re.findall('\\\\|d', 'a*b+c?\\\\d123d\\\\')\n[]\n\n</code></pre><p>看到这里，你内心是不是有很多问号？为什么转义了还不行呢？我们来把正则表达式部分精简一下，看看两个反斜杠在正则中是什么意思。</p><pre><code>&gt;&gt;&gt; import re\n&gt;&gt;&gt; re.findall('\\\\', 'a*b+c?\\\\d123d\\\\')\nTraceback (most recent call last):\n 省去部分信息\nre.error: bad escape (end of pattern) at position 0\n</code></pre><p>我们发现，正则部分写的两个反斜杠，Python3 处理的时候会报错，认为是转义字符，即认为是单个反斜杠，如果你再进一步测试在正则中写单个反斜杠，你会发现直接报语法错误，你可以自行尝试。</p><p>那如何在正则中正确表示“反斜杠”呢？答案是写四个反斜杠。</p><pre><code>&gt;&gt;&gt; import re\n&gt;&gt;&gt; re.findall('\\\\\\\\', 'a*b+c?\\\\d123d\\\\')\n['\\\\', '\\\\']\n</code></pre><p>你可以想一下，为什么不是三个呢？后面的文本部分，也得要用四个反斜杠表示才是正确的么？到这里，你是不是发现，转义其实没那么简单。</p><p>我来给你详细解释一下这里面的过程，在程序使用过程中，从输入的字符串到正则表达式，其实有两步转换过程，分别是字符串转义和正则转义。</p><p>在正则中正确表示“反斜杠”具体的过程是这样子：我们输入的字符串，四个反斜杠 \\\\，经过第一步字符串转义，它代表的含义是两个反斜杠 \\；这两个反斜杠再经过第二步<strong>正则转义</strong>，它就可以代表单个反斜杠 \\了。</p><p><img src=\"https://static001.geekbang.org/resource/image/67/07/6775aee46fbb24d7c261bd1fd929c407.png?wh=1614*476\" alt=\"\"></p><p>你可以用这个过程，推导一下两个和三个反斜杠的转换过程，这样你就会明白上面报错的原因了。</p><p>那在真正使用的时候，有没有更简单的方法呢？答案是有的，我们尽量使用原生字符串，在 Python 中，可以在正则前面加上小写字母 r 来表示。</p><pre><code>&gt;&gt;&gt; import re\n&gt;&gt;&gt; re.findall(r'\\\\', 'a*b+c?\\\\d123d\\\\')\n['\\\\', '\\\\']\n\n</code></pre><p>这样看起来就简单很多，因为少了上面说的第一次转换。</p><h2>正则中元字符的转义</h2><p>在前面的内容中，我们讲了很多元字符，相信你一定都还记得。如果现在我们要查找比如星号（*）、加号（+）、问号（?）本身，而不是元字符的功能，这时候就需要对其进行转义，直接在前面加上反斜杠就可以了。这个转义就比较简单了，下面是一个示例。</p><pre><code>&gt;&gt;&gt; import re\n&gt;&gt;&gt; re.findall('\\+', '+')\n['+']\n\n</code></pre><h3>括号的转义</h3><p>在正则中方括号 [] 和 花括号 {} 只需转义开括号，但圆括号 () 两个都要转义。我在下面给了你一个比较详细的例子。</p><pre><code>&gt;&gt;&gt; import re\n&gt;&gt;&gt; re.findall('\\(\\)\\[]\\{}', '()[]{}')\n['()[]{}']\n&gt;&gt;&gt; re.findall('\\(\\)\\[\\]\\{\\}', '()[]{}')  # 方括号和花括号都转义也可以\n['()[]{}']\n</code></pre><p>在正则中，圆括号通常用于分组，或者将某个部分看成一个整体，如果只转义开括号或闭括号，正则会认为少了另外一半，所以会报错。</p><p>括号的转义示例，你可以参考这里：<a href=\"https://regex101.com/r/kJfvd6/1\">https://regex101.com/r/kJfvd6/1</a>。</p><h3>使用函数消除元字符特殊含义</h3><p>我们也可以使用编程语言自带的转义函数来实现转义。下面我给出了一个在 Python里转义的例子，你可以看一下。</p><pre><code>&gt;&gt;&gt; import re\n&gt;&gt;&gt; re.escape('\\d')  # 反斜杠和字母d转义\n'\\\\\\\\d'\n&gt;&gt;&gt; re.findall(re.escape('\\d'), '\\d')\n['\\\\d']\n\n&gt;&gt;&gt; re.escape('[+]')  # 中括号和加号\n'\\\\[\\\\+\\\\]'\n&gt;&gt;&gt; re.findall(re.escape('[+]'), '[+]')\n['[+]']\n\n</code></pre><p>这个转义函数可以将整个文本转义，一般用于转义用户输入的内容，即把这些内容看成普通字符串去匹配，但你还是得好好注意一下，如果使用普通字符串查找能满足要求，就不要使用正则，因为它简单不容易出问题。下面是一些其他编程语言对应的转义函数，供你参考。</p><p><img src=\"https://static001.geekbang.org/resource/image/a7/0c/a75a4f990d969a046a468e35dbe8ef0c.jpg?wh=1025*390\" alt=\"\"></p><h2>字符组中的转义</h2><p>讲完了元字符的转义，我们现在来看看字符组中的转义。书写正则的时候，在字符组中，如果有过多的转义会导致代码可读性差。在字符组里只有三种情况需要转义，下面我来给你讲讲具体是哪三种情况。</p><h3>字符组中需要转义的有三种情况</h3><ol>\n<li>脱字符在中括号中，且在第一个位置需要转义：</li>\n</ol><pre><code>&gt;&gt;&gt; import re\n&gt;&gt;&gt; re.findall(r'[^ab]', '^ab')  # 转义前代表&quot;非&quot;\n['^']\n&gt;&gt;&gt; re.findall(r'[\\^ab]', '^ab')  # 转义后代表普通字符\n['^', 'a', 'b']\n</code></pre><ol start=\"2\">\n<li>中划线在中括号中，且不在首尾位置：</li>\n</ol><pre><code>&gt;&gt;&gt; import re\n&gt;&gt;&gt; re.findall(r'[a-c]', 'abc-')  # 中划线在中间，代表&quot;范围&quot;\n['a', 'b', 'c']\n&gt;&gt;&gt; re.findall(r'[a\\-c]', 'abc-')  # 中划线在中间，转义后的\n['a', 'c', '-']\n&gt;&gt;&gt; re.findall(r'[-ac]', 'abc-')  # 在开头，不需要转义\n['a', 'c', '-']\n&gt;&gt;&gt; re.findall(r'[ac-]', 'abc-')  # 在结尾，不需要转义\n['a', 'c', '-']\n\n</code></pre><ol start=\"3\">\n<li>右括号在中括号中，且不在首位：</li>\n</ol><pre><code>&gt;&gt;&gt; import re\n&gt;&gt;&gt; re.findall(r'[]ab]', ']ab')  # 右括号不转义，在首位\n[']', 'a', 'b']\n&gt;&gt;&gt; re.findall(r'[a]b]', ']ab')  # 右括号不转义，不在首位\n[]  # 匹配不上，因为含义是 a后面跟上b]\n&gt;&gt;&gt; re.findall(r'[a\\]b]', ']ab')  # 转义后代表普通字符\n[']', 'a', 'b']\n</code></pre><h3>字符组中其它的元字符</h3><p>一般来说如果我们要想将元字符（<code>.*+?</code>()之类）表示成它字面上本来的意思，是需要对其进行转义的，但如果它们出现在字符组中括号里，可以不转义。这种情况，一般都是单个长度的元字符，比如点号（<code>.</code>）、星号（<code>*</code>）、加号（<code>+</code>）、问号（<code>?</code>）、左右圆括号等。它们都不再具有特殊含义，而是代表字符本身。但如果在中括号中出现 \\d 或 \\w 等符号时，他们还是元字符本身的含义。</p><pre><code>&gt;&gt;&gt; import re\n&gt;&gt;&gt; re.findall(r'[.*+?()]', '[.*+?()]')  # 单个长度的元字符 \n['.', '*', '+', '?', '(', ')']\n&gt;&gt;&gt; re.findall(r'[\\d]', 'd12\\\\')  # \\w，\\d等在中括号中还是元字符的功能\n['1', '2']  # 匹配上了数字，而不是反斜杠\\和字母d\n</code></pre><p>下面我来给你简单总结一下字符组中的转义情况，我们提到了三种必须转义的情况，其它情况不转义也能正常工作，但在实际操作过程中，如果遇到在中括号中使用这三个字符原本的意思，你可以都进行转义，剩下其它的元字符都不需要转义。</p><h2>总结</h2><p>好了，今天的内容讲完了，我来带你总结回顾一下。</p><p>正则中转义有些情况下会比较复杂，从录入的字符串文本，到最终的正则表达式，<strong>经过了字符串转义和正则转义两个步骤。</strong>元字符的转义一般在前面加反斜杠就行，方括号和花括号的转义一般转义开括号就可以，但圆括号两个都需要转义，我们可以借助编程语言中的转义函数来实现转义。另外我们也讲了字符组中三种需要转义的情况，详细的可以参考下面的脑图。</p><p><img src=\"https://static001.geekbang.org/resource/image/44/22/442bbc5d31ed8499ff7d37151434e522.png?wh=1920*1159\" alt=\"\"></p><h2>思考题</h2><p>通过今天的学习，不知道你对转义掌握的怎么样了呢？再来一个例子加深一下你的理解吧，文本部分是反斜杠，n，换行，反斜杠四个部分组成。正则部分分别是1到4个反斜杠和字母n，我用Python3写了对应的示例，相应的查找过程是这样子的。</p><pre><code>&gt;&gt;&gt; import re\n&gt;&gt;&gt; re.findall('\\n', '\\\\n\\n\\\\')\n['\\n']  # 找到了换行符\n&gt;&gt;&gt; re.findall('\\\\n', '\\\\n\\n\\\\')\n['\\n']  # 找到了换行符\n&gt;&gt;&gt; re.findall('\\\\\\n', '\\\\n\\n\\\\')\n['\\n']  # 找到了换行符\n&gt;&gt;&gt; re.findall('\\\\\\\\n', '\\\\n\\n\\\\')\n['\\\\n'] # 找到了反斜杠和字母n\n</code></pre><p>例子虽然看上去简单，不过你能不能解释出这四个示例中的转义过程呢？</p><p>好了，今天的课程就结束了，希望可以帮助到你，也希望你在下方的留言区和我参与讨论，同时欢迎你把这节课分享给你的朋友或者同事，一起交流一下。</p>","comments":[{"had_liked":false,"id":229411,"user_name":"Robot","can_delete":false,"product_type":"c1","uid":1181473,"ip_address":"","ucode":"7215462D5AC0FA","user_header":"https://static001.geekbang.org/account/avatar/00/12/07/21/b3394aa2.jpg","comment_is_top":false,"comment_ctime":1592987515,"is_pvip":false,"replies":[{"id":"84711","content":"赞，善于利用搜索查问题的能力很重要","user_name":"作者回复","user_name_real":"伟忠","uid":"1112089","ctime":1593012326,"ip_address":"","comment_id":229411,"utype":1}],"discussion_count":1,"race_medal":0,"score":"87492333435","product_id":100053301,"comment_content":"google到了一篇回答，分享给大家理解课后思考：<br><br>Actually regex string specified by string literal is processed by two compilers: programming language compiler and regexp compiler:<br><br>    Original  Compiled    Regex compiled<br>    &quot;\\n&quot;             NL          NL<br>    &quot;\\\\n&quot;            &#39;\\&#39;+&#39;n&#39;     NL<br>    &quot;\\\\\\n&quot;         &#39;\\&#39;+NL      NL<br>    &quot;\\\\\\\\n&quot;     &#39;\\&#39;+&#39;\\&#39;+&#39;n&#39;    &#39;\\&#39;+&#39;n&#39;<br><br>https:&#47;&#47;stackoverflow.com&#47;questions&#47;6967204&#47;how-is-n-and-n-interpreted-by-the-expanded-regular-expression&#47;59192811#59192811","like_count":21,"discussions":[{"author":{"id":1112089,"avatar":"https://static001.geekbang.org/account/avatar/00/10/f8/19/05a2695f.jpg","nickname":"伟忠","note":"","ucode":"FE77CF20ED6065","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":499472,"discussion_content":"赞，善于利用搜索查问题的能力很重要","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1593012326,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":229257,"user_name":"William","can_delete":false,"product_type":"c1","uid":1241365,"ip_address":"","ucode":"4499F99B180102","user_header":"https://static001.geekbang.org/account/avatar/00/12/f1/15/8fcf8038.jpg","comment_is_top":false,"comment_ctime":1592933216,"is_pvip":true,"replies":[{"id":"84756","content":"赞，分析的很好，动手练习测试，这也是一个很好的习惯","user_name":"作者回复","user_name_real":"伟忠","uid":"1112089","ctime":1593101134,"ip_address":"","comment_id":229257,"utype":1}],"discussion_count":3,"race_medal":0,"score":"35952671584","product_id":100053301,"comment_content":"原字符串中，共包含四个字符，第一个字符是 \\，第二个是字母n，第三个是换行符，第四个是 \\。<br>四个正则表达式的构造字符串中，第一个是换行符（正则转义后保持不变，仍然是换行符），第二个是\\和n字母（正则转义后是换行符），第三个是\\和换行符（正则转义后，单个换行符无意义，只剩下换行符），第四个是\\\\和换行符（正则转义后为一个斜杠和一个换行符）。<br>前三个都是找到了换行处，第四个找到了换行符。<br>测试JavaScript代码：<br><br>const str = &#39;\\\\n\\n\\\\&#39;<br>const sources = [&#39;\\n&#39;, &#39;\\\\n&#39;, &#39;\\\\\\n&#39;, &#39;\\\\\\\\n&#39;]<br>const regs = []<br><br>sources.forEach(s =&gt; regs.push(new RegExp(s, &#39;g&#39;)))<br>regs.forEach(reg =&gt; {<br>  console.log(&#39;[current reg] &#39;, reg)<br>  let once_match = reg.exec(str)<br>  console.log(&#39;[result]&#39;, once_match)<br>})","like_count":9,"discussions":[{"author":{"id":1112089,"avatar":"https://static001.geekbang.org/account/avatar/00/10/f8/19/05a2695f.jpg","nickname":"伟忠","note":"","ucode":"FE77CF20ED6065","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":499402,"discussion_content":"赞，分析的很好，动手练习测试，这也是一个很好的习惯","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1593101134,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1474356,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTI3F4IdQuDZrhN8ThibP85eCiaSWTYpTrcC6QB9EoAkw3IIj6otMibb1CgrS1uzITAnJmGLXQ2tgIkAQ/132","nickname":"cugphoenix","note":"","ucode":"80101AF04C00D3","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":285868,"discussion_content":"第三个正则转义后应该是这个含义：https://regex101.com/r/AbRUNn/1\n相当于转义符\\后面跟了一个换行符, 此时仍然表示换行","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1592979227,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1236780,"avatar":"https://static001.geekbang.org/account/avatar/00/12/df/2c/d2e97b6a.jpg","nickname":"Jock","note":"","ucode":"2FF16F050C228F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1474356,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTI3F4IdQuDZrhN8ThibP85eCiaSWTYpTrcC6QB9EoAkw3IIj6otMibb1CgrS1uzITAnJmGLXQ2tgIkAQ/132","nickname":"cugphoenix","note":"","ucode":"80101AF04C00D3","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":285926,"discussion_content":"测试后，我也得出和你一样的结论。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1592989893,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":285868,"ip_address":""},"score":285926,"extra":""}]}]},{"had_liked":false,"id":232983,"user_name":"Juntíng","can_delete":false,"product_type":"c1","uid":1039290,"ip_address":"","ucode":"F6A3B528D6F3FD","user_header":"https://static001.geekbang.org/account/avatar/00/0f/db/ba/304a9a4a.jpg","comment_is_top":false,"comment_ctime":1594181274,"is_pvip":false,"replies":[{"id":"86129","content":"赞，分析思路没有问题，关键就是要明白正则用字符串表示时，字符串转义和正则转义，这两步转义的过程。","user_name":"作者回复","user_name_real":"伟忠","uid":"1112089","ctime":1594313573,"ip_address":"","comment_id":232983,"utype":1}],"discussion_count":1,"race_medal":0,"score":"27363985050","product_id":100053301,"comment_content":"1、现将输入字符串正则进行字符串转义和正则转义<br>  1. &#39;\\n&#39; 字符转义 \\n （换行符）, 匹配 &#39;\\\\n\\n\\\\&#39; 到一个换行符<br>  2. &#39;\\\\n&#39; 字符转义 &#39;\\n&#39;（字符\\ 和 n）, 正则转义 \\n （换行符），匹配 &#39;\\\\n\\n\\\\&#39; 到一个换行符<br>  3. &#39;\\\\\\n&#39; 字符转义 &#39;\\&#39; 和 \\n （&#39;\\\\n&#39; 字符\\ 和 \\n 换行符）,正则转义 \\n (换行符)，匹配 &#39;\\\\n\\n\\\\&#39; 到一个换行符<br>  4. &#39;\\\\\\\\n&#39; 字符转义 &#39;\\&#39; 、&#39;\\&#39;、&#39;n&#39; (&#39;\\\\n&#39; 字符 \\、\\ 和 n), 正则转义 &#39;\\n&#39; (字符 \\ 和 n)<br><br>&gt; &#39;\\\\\\n&#39; 这个在转义过程中, 字符串转义后 字符&#39;\\&#39; 和 \\n (换行符) , 在正则转义时，转义一个换行符，结果还是换行符，没有意义，所以这里就没转义效果了。<br> ","like_count":6,"discussions":[{"author":{"id":1112089,"avatar":"https://static001.geekbang.org/account/avatar/00/10/f8/19/05a2695f.jpg","nickname":"伟忠","note":"","ucode":"FE77CF20ED6065","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":500836,"discussion_content":"赞，分析思路没有问题，关键就是要明白正则用字符串表示时，字符串转义和正则转义，这两步转义的过程。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1594313573,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":308558,"user_name":"向死而生","can_delete":false,"product_type":"c1","uid":2743098,"ip_address":"","ucode":"5C1839D97F254C","user_header":"https://static001.geekbang.org/account/avatar/00/29/db/3a/a9113de0.jpg","comment_is_top":false,"comment_ctime":1629685725,"is_pvip":false,"replies":[{"id":"118093","content":"需要自己主动思考，灌输效果肯定不好，自己根据结果去推测，这样才是正确的学习方法。这一节讲的是转义，其实不管几个，都是转义相关的，不难弄懂原因的","user_name":"作者回复","user_name_real":"编辑","uid":"1112089","ctime":1639002948,"ip_address":"","comment_id":308558,"utype":1}],"discussion_count":2,"race_medal":0,"score":"14514587613","product_id":100053301,"comment_content":"入门课这样讲的吗？前面才一个&#47;后面就二三四个。也不带解释一下的，我听的意义何在，还得自己找解释","like_count":3,"discussions":[{"author":{"id":1112089,"avatar":"https://static001.geekbang.org/account/avatar/00/10/f8/19/05a2695f.jpg","nickname":"伟忠","note":"","ucode":"FE77CF20ED6065","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":537229,"discussion_content":"需要自己主动思考，灌输效果肯定不好，自己根据结果去推测，这样才是正确的学习方法。这一节讲的是转义，其实不管几个，都是转义相关的，不难弄懂原因的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1639002948,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1167229,"avatar":"https://static001.geekbang.org/account/avatar/00/11/cf/7d/1d6873aa.jpg","nickname":"洪涛","note":"","ucode":"D25DB373E4500C","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":413953,"discussion_content":"我也觉得，我觉得老师应该解释下多个\\转义的时候的顺序，还是没明白。。","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1636618210,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":230152,"user_name":"爱乐之城","can_delete":false,"product_type":"c1","uid":1501548,"ip_address":"","ucode":"B9000E05EBDA3F","user_header":"https://static001.geekbang.org/account/avatar/00/16/e9/6c/00668d9d.jpg","comment_is_top":false,"comment_ctime":1593282997,"is_pvip":true,"replies":[{"id":"85477","content":"这个你可以理解成，正则转义的时候，看你转义一个换行，结果还是换行，相当于没转义效果一样了。","user_name":"作者回复","user_name_real":"伟忠","uid":"1112089","ctime":1593705499,"ip_address":"","comment_id":230152,"utype":1}],"discussion_count":1,"race_medal":0,"score":"14478184885","product_id":100053301,"comment_content":"&#39;\\\\\\n&#39; 经过字符串转义变成反斜杠和\\n,再经过正则转义变成换行符\\n。前面字符串转义可以理解，但是为什么反斜杠和 \\n，经过正则转义会变成 \\n 呢？","like_count":4,"discussions":[{"author":{"id":1112089,"avatar":"https://static001.geekbang.org/account/avatar/00/10/f8/19/05a2695f.jpg","nickname":"伟忠","note":"","ucode":"FE77CF20ED6065","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":499786,"discussion_content":"这个你可以理解成，正则转义的时候，看你转义一个换行，结果还是换行，相当于没转义效果一样了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1593705499,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":229341,"user_name":"虹炎","can_delete":false,"product_type":"c1","uid":1600615,"ip_address":"","ucode":"9E28ACEBFB26D5","user_header":"https://static001.geekbang.org/account/avatar/00/18/6c/67/07bcc58f.jpg","comment_is_top":false,"comment_ctime":1592969220,"is_pvip":false,"replies":[{"id":"84777","content":"对的，主要是搞懂“字符串转义”和“正则转义”两个步骤","user_name":"作者回复","user_name_real":"伟忠","uid":"1112089","ctime":1593147038,"ip_address":"","comment_id":229341,"utype":1}],"discussion_count":1,"race_medal":0,"score":"14477871108","product_id":100053301,"comment_content":"（）中内容表示匹配到的。<br>1，re.findall(&#39;\\n&#39;, &#39;\\\\n\\n\\\\&#39;)  匹配到了   \\\\n(\\n)\\\\ ,   &#39;\\n&#39;就是换行,后面的\\\\n 表示反斜杠和n ,所以匹配到<br>第二个\\n<br>2，re.findall(&#39;\\\\n&#39;, &#39;\\\\n\\n\\\\&#39;) 匹配到了 \\\\n(\\n)\\\\  &#39;\\\\n&#39;经过字符串转义变成反斜杠和n,再经过正则转移变成换行符\\n<br>3，re.findall(&#39;\\\\\\n&#39;, &#39;\\\\n\\n\\\\&#39;) 匹配到了 \\\\n(\\n)\\\\   &#39;\\\\\\n&#39; 经过字符串转义变成反斜杠和\\n,再经过正则转移变成换行符\\n<br>4，re.findall(&#39;\\\\\\\\n&#39;, &#39;\\\\n\\n\\\\&#39;)  匹配到了 （\\\\n)\\n\\\\ 经过字符串转义变成\\\\n,再经过正则转移变成反斜杠和n.<br>我的答案不知道对不对，请老师指正！","like_count":3,"discussions":[{"author":{"id":1112089,"avatar":"https://static001.geekbang.org/account/avatar/00/10/f8/19/05a2695f.jpg","nickname":"伟忠","note":"","ucode":"FE77CF20ED6065","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":499448,"discussion_content":"对的，主要是搞懂“字符串转义”和“正则转义”两个步骤","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1593147038,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":235554,"user_name":"吕伟","can_delete":false,"product_type":"c1","uid":1110096,"ip_address":"","ucode":"A443C94A717AD0","user_header":"https://static001.geekbang.org/account/avatar/00/10/f0/50/c348c2ea.jpg","comment_is_top":false,"comment_ctime":1595084441,"is_pvip":false,"replies":[{"id":"87498","content":"赞，这个主要是想让大家明白字符串转义和正则转义，这两步的过程","user_name":"作者回复","user_name_real":"伟忠","uid":"1112089","ctime":1595549886,"ip_address":"","comment_id":235554,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10185019033","product_id":100053301,"comment_content":"&#39;\\\\n\\n\\\\&#39;输出是<br>\\n<br>\\<br>&#39;\\n&#39;为python的换行符，<br>&#39;\\\\n&#39;为正则的换行符，<br>&#39;\\\\\\n&#39;为反斜杠+python换行符，<br>&#39;\\\\\\\\n&#39;为字符\\n<br>","like_count":2,"discussions":[{"author":{"id":1112089,"avatar":"https://static001.geekbang.org/account/avatar/00/10/f8/19/05a2695f.jpg","nickname":"伟忠","note":"","ucode":"FE77CF20ED6065","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":501763,"discussion_content":"赞，这个主要是想让大家明白字符串转义和正则转义，这两步的过程","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1595549886,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":229452,"user_name":"Jock","can_delete":false,"product_type":"c1","uid":1236780,"ip_address":"","ucode":"2FF16F050C228F","user_header":"https://static001.geekbang.org/account/avatar/00/12/df/2c/d2e97b6a.jpg","comment_is_top":false,"comment_ctime":1592999921,"is_pvip":false,"replies":[{"id":"84710","content":"赞赞赞，优秀","user_name":"作者回复","user_name_real":"伟忠","uid":"1112089","ctime":1593012276,"ip_address":"","comment_id":229452,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10182934513","product_id":100053301,"comment_content":"感谢涂老师的详细讲解，\\ 并没有想象的那么简单。<br><br>关于思考题的部分，前排留言已经给出了合理解释。<br><br>这里我列自己总结的一些知识点：<br><br>1. `\\` 作为转义符。包括表示转义序列、转义转义字符本身，使得转义序列失效。<br>2. `\\` 作为续行符。<br>3. 目前 Python 中对于非法的转义序列，会保留 `\\` 在字符串中，C 语言中则是会忽略 `\\`。从 Python 3.6 开始，未来，Python 中无法识别的转义序列将报语法错误。因此要表示 `\\` 本身，请使用 `\\\\`。<br>4. 不管是普通字符串还是原生字符串都不能以奇数个 `\\` 结尾，否则会报 `EOL` 错误。<br>5. 原生字符串中也可以“转义”，但是此时的“转义”有些特别，因为“转义”后 `\\` 还会保留在字符串中。<br>6. 正则表达式字符串的转义有 2 个水平，第 1 次是 Python 解释器层面的转义，第 2 次是 `re` 模块正则引擎的转义。<br>7. 强烈建议用 `r` 前缀写正则表达式，省去 Python 解释器的转义。<br>8. `re` 模块正则引擎对于非法的转义序列直接报错 `bad escape`。<br><br>知识无穷无尽，点滴总结，聚沙成塔。以上就是分享的全部内容，如果不对之处，恳请斧正~<br>展开部分，我放到自己的博客，感兴趣可以去看看：https:&#47;&#47;blog.csdn.net&#47;qq_27283619&#47;article&#47;details&#47;106948855<br><br>","like_count":2,"discussions":[{"author":{"id":1112089,"avatar":"https://static001.geekbang.org/account/avatar/00/10/f8/19/05a2695f.jpg","nickname":"伟忠","note":"","ucode":"FE77CF20ED6065","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":499487,"discussion_content":"赞赞赞，优秀","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1593012276,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":231668,"user_name":"John Bull","can_delete":false,"product_type":"c1","uid":1362023,"ip_address":"","ucode":"2A1B4191CD87B8","user_header":"https://static001.geekbang.org/account/avatar/00/14/c8/67/5489998a.jpg","comment_is_top":false,"comment_ctime":1593745081,"is_pvip":true,"replies":[{"id":"86122","content":"看上去这个转义挺有意思的，感谢分享","user_name":"作者回复","user_name_real":"伟忠","uid":"1112089","ctime":1594313038,"ip_address":"","comment_id":231668,"utype":1}],"discussion_count":1,"race_medal":1,"score":"5888712377","product_id":100053301,"comment_content":"在ECMAScript中，运行结果如下：<br>&#39;\\\\n\\n\\\\&#39;.match(&#47;\\n&#47;g)  结果：[&quot;↵&quot;]<br>&#39;\\\\n\\n\\\\&#39;.match(&#47;\\\\n&#47;g)  结果：[&quot;\\n&quot;]<br>&#39;\\\\n\\n\\\\&#39;.match(&#47;\\\\\\n&#47;g) 结果：null<br>&#39;\\\\n\\n\\\\&#39;.match(&#47;\\\\\\\\n&#47;g) 结果：null<br>我的理解是这样的：<br>&#39;\\\\n\\n\\\\&#39;字符串转义结果是&quot;\\n↵\\&quot;，对于正则\\n自然匹配的是换行符，而\\\\n，正则编译成\\n，所以第2题匹配结果是[&quot;\\n&quot;]，而对于第3、4题，分别被正则编译成&#39;\\↵&#39;和&#39;\\\\n&#39;，无匹配返回null.","like_count":2,"discussions":[{"author":{"id":1112089,"avatar":"https://static001.geekbang.org/account/avatar/00/10/f8/19/05a2695f.jpg","nickname":"伟忠","note":"","ucode":"FE77CF20ED6065","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":500399,"discussion_content":"看上去这个转义挺有意思的，感谢分享","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1594313038,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":278876,"user_name":"hai06.wang","can_delete":false,"product_type":"c1","uid":1185393,"ip_address":"","ucode":"FA985B44BCA961","user_header":"https://static001.geekbang.org/account/avatar/00/12/16/71/f255e5e7.jpg","comment_is_top":false,"comment_ctime":1613405733,"is_pvip":false,"replies":[{"id":"101415","content":"这个主要是搞明白两个转义过程，正则也是用字符串来表示的。第一步是字符串转义，第二步是正则转义。","user_name":"作者回复","user_name_real":"伟忠","uid":"1112089","ctime":1613616230,"ip_address":"","comment_id":278876,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1613405733","product_id":100053301,"comment_content":"老师您好 有两个地方不太明白。我的理解如下<br>1、&#39;\\n&#39;、&#39;\\\\n&#39;转移后最终是 \\n 这个应该没问题<br>2、&#39;\\\\\\n&#39;  首先经过字符串转义成 \\\\n  (&#39;\\&#39;+ &#39;\\n&#39;) ，正则转义后 &#39;\\&#39; +&#39; n&#39; <br>3、&#39;\\\\\\\\n&#39;首先经过字符串转义成 \\\\n (&#39;\\&#39;+&#39;\\&#39;+&#39;n&#39;)，正则转义后 &#39;\\&#39; + &#39;n&#39;<br>所以，针对2、3，这样理解的问题出在哪呢","like_count":0,"discussions":[{"author":{"id":1112089,"avatar":"https://static001.geekbang.org/account/avatar/00/10/f8/19/05a2695f.jpg","nickname":"伟忠","note":"","ucode":"FE77CF20ED6065","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":515540,"discussion_content":"这个主要是搞明白两个转义过程，正则也是用字符串来表示的。第一步是字符串转义，第二步是正则转义。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1613616230,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1185393,"avatar":"https://static001.geekbang.org/account/avatar/00/12/16/71/f255e5e7.jpg","nickname":"hai06.wang","note":"","ucode":"FA985B44BCA961","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":349899,"discussion_content":"所以 上面第二条字符串转义后的 \\\\n 正则转义是对        \n \\n 整体转义 而不是只对  \\  转义 是吗","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1613623443,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":275362,"user_name":"小氘","can_delete":false,"product_type":"c1","uid":1622109,"ip_address":"","ucode":"DA55B9A02D9EE0","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83erPMtAfnQdpx1yOZQ2ic7icqUs3tvibEjUXQMUXKiaakyuIho6k6vmdl46nrdWjXIjPIRg9Pmco00tR5w/132","comment_is_top":false,"comment_ctime":1611490166,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1611490166","product_id":100053301,"comment_content":"我用java跑了一遍课后思考题，结果如下：<br>1.&#39;\\n&#39;，java转义后是换行符(int值为10)，因此查找到的结果是换行符；<br>2.&#39;\\\\n&#39;，java转义后就是一个反斜线+字母n，int值为92、110，正则转义后就是换行符，因此查找到的结果是换行符；<br>3.&#39;\\\\\\n&#39;，java转义后是一个反斜线+一个换行符，int值为92、10，正则转义时可能忽略了反斜线，因此查到了换行符；<br>4.&#39;\\\\\\\\n&#39;，java转义后是两个反斜线+一个字母n，int值为92、92、110，正则转义后是一个反斜线+一个字母n。","like_count":0},{"had_liked":false,"id":270789,"user_name":"取悦","can_delete":false,"product_type":"c1","uid":1327864,"ip_address":"","ucode":"53BA6AB79C3CED","user_header":"https://static001.geekbang.org/account/avatar/00/14/42/f8/9a22b3aa.jpg","comment_is_top":false,"comment_ctime":1609255944,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1609255944","product_id":100053301,"comment_content":"我在regex101.com尝试了下，\\n和\\\\\\n，匹配不到数据。另外两个匹配到的数据跟文章里给的一样。","like_count":0},{"had_liked":false,"id":261292,"user_name":"67812","can_delete":false,"product_type":"c1","uid":2225605,"ip_address":"","ucode":"0DCAA2D25DC90F","user_header":"https://static001.geekbang.org/account/avatar/00/21/f5/c5/34c776a8.jpg","comment_is_top":false,"comment_ctime":1605259825,"is_pvip":false,"replies":[{"id":"95104","content":"正则使用普通字符串表示的，但经过了两次转义。","user_name":"作者回复","user_name_real":"伟忠","uid":"1112089","ctime":1605632683,"ip_address":"","comment_id":261292,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1605259825","product_id":100053301,"comment_content":"题目的最后一个没理解，第一次字符串转义应该是“\\\\n”，那么第二次正则转义应该是“\\n”，还是换行符啊<br> 我试过利用循环打印出第一层转义<br>for c in &quot;\\\\\\\\n&quot;:<br>    print(c)<br>结果确实是\\  \\   n 呀","like_count":0,"discussions":[{"author":{"id":1112089,"avatar":"https://static001.geekbang.org/account/avatar/00/10/f8/19/05a2695f.jpg","nickname":"伟忠","note":"","ucode":"FE77CF20ED6065","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":509442,"discussion_content":"正则使用普通字符串表示的，但经过了两次转义。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1605632683,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":243035,"user_name":"小乙哥","can_delete":false,"product_type":"c1","uid":1063308,"ip_address":"","ucode":"C77E79BEA0C325","user_header":"https://static001.geekbang.org/account/avatar/00/10/39/8c/089525aa.jpg","comment_is_top":false,"comment_ctime":1597927198,"is_pvip":false,"replies":[{"id":"89811","content":"对的，理解了两次转义就容易懂了","user_name":"作者回复","user_name_real":"伟忠","uid":"1112089","ctime":1598312559,"ip_address":"","comment_id":243035,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1597927198","product_id":100053301,"comment_content":"这节课还是挺重要的，尤其对于\\转义的理解。这里要建立一个认知，正则表达式也是一种语言，Java也是语言，正则表达式语言应用到Java字符串语言规范的时候，要注意在两层语言下的转义","like_count":0,"discussions":[{"author":{"id":1112089,"avatar":"https://static001.geekbang.org/account/avatar/00/10/f8/19/05a2695f.jpg","nickname":"伟忠","note":"","ucode":"FE77CF20ED6065","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":504161,"discussion_content":"对的，理解了两次转义就容易懂了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1598312559,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":233604,"user_name":"🐒🐱🐭🐮🐯🐰🐶","can_delete":false,"product_type":"c1","uid":1189080,"ip_address":"","ucode":"52426AE36A9A39","user_header":"https://static001.geekbang.org/account/avatar/00/12/24/d8/aa41d743.jpg","comment_is_top":false,"comment_ctime":1594365600,"is_pvip":false,"replies":[{"id":"86299","content":"第二个好像不对吧，文本n找不到换行符号的，你写的是<br>re.findall(&#39;\\\\n&#39;, &#39;\\\\n\\n\\\\&#39;)[&#39;\\n&#39;] # 找到了换行符&gt;&gt;&gt;  \\\\=文本\\   n=文本n    ==&gt;文本\\n<br><br>这里主要是理解用字符串表示正则，正则的两次转义，“字符串转义”和“正则转义”。","user_name":"作者回复","user_name_real":"伟忠","uid":"1112089","ctime":1594451260,"ip_address":"","comment_id":233604,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1594365600","product_id":100053301,"comment_content":"&gt;&gt;&gt; import re&gt;&gt;&gt;<br>re.findall(&#39;\\n&#39;, &#39;\\\\n\\n\\\\&#39;)[&#39;\\n&#39;] # 找到了换行符&gt;&gt;&gt;  \\n  -&gt;换行 <br>re.findall(&#39;\\\\n&#39;, &#39;\\\\n\\n\\\\&#39;)[&#39;\\n&#39;] # 找到了换行符&gt;&gt;&gt;  \\\\=文本\\   n=文本n    ==&gt;文本\\n<br>re.findall(&#39;\\\\\\n&#39;, &#39;\\\\n\\n\\\\&#39;)[&#39;\\n&#39;] # 找到了换行符&gt;&gt;&gt;   \\\\=文本\\  \\n=换行   ==&gt; 文本 \\ +换行<br>re.findall(&#39;\\\\\\\\n&#39;, &#39;\\\\n\\n\\\\&#39;)[&#39;\\\\n&#39;] # 找到了反斜杠和字母n &gt;&gt;&gt; \\\\=文本\\  \\\\=文本\\  n=文本n ==&gt; 文本\\\\n","like_count":0,"discussions":[{"author":{"id":1112089,"avatar":"https://static001.geekbang.org/account/avatar/00/10/f8/19/05a2695f.jpg","nickname":"伟忠","note":"","ucode":"FE77CF20ED6065","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":501105,"discussion_content":"第二个好像不对吧，文本n找不到换行符号的，你写的是\nre.findall(&amp;#39;\\\\n&amp;#39;, &amp;#39;\\\\n\\n\\\\&amp;#39;)[&amp;#39;\\n&amp;#39;] # 找到了换行符&amp;gt;&amp;gt;&amp;gt;  \\\\=文本\\   n=文本n    ==&amp;gt;文本\\n\n\n这里主要是理解用字符串表示正则，正则的两次转义，“字符串转义”和“正则转义”。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1594451260,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":232134,"user_name":"BOSSJIE","can_delete":false,"product_type":"c1","uid":1763638,"ip_address":"","ucode":"384F2D1FDB7345","user_header":"https://static001.geekbang.org/account/avatar/00/1a/e9/36/96294f1d.jpg","comment_is_top":false,"comment_ctime":1593866668,"is_pvip":false,"replies":[{"id":"85693","content":"字符串部分不会，因为正则也是用字符串表示的，所以要经过“字符串转义”和“正则转义”两个步骤，普通的字符串（正则要匹配的文本）只有字符串转义这一步。<br>在Python中使用的时候，一般会在正则字符串前面加上 r 表示原生字符串，这样转义就没那么麻烦了，更容易理解。","user_name":"作者回复","user_name_real":"伟忠","uid":"1112089","ctime":1593924325,"ip_address":"","comment_id":232134,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1593866668","product_id":100053301,"comment_content":"老师 我有个小疑问:  被查询的字符串在开发语言里  双反斜杠会被#字符串#转义成单反斜杠来被regex匹配吗?    四条反斜杠最后被转成单条\\, python 输出 里 不太看得懂<br><br>&gt;&gt;&gt; import re<br>&gt;&gt;&gt; re.findall(&#39;\\\\\\\\&#39;, &#39;a*b+c?\\\\d123d\\\\&#39;)<br>[&#39;\\\\&#39;, &#39;\\\\&#39;]<br>","like_count":0,"discussions":[{"author":{"id":1112089,"avatar":"https://static001.geekbang.org/account/avatar/00/10/f8/19/05a2695f.jpg","nickname":"伟忠","note":"","ucode":"FE77CF20ED6065","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":500526,"discussion_content":"字符串部分不会，因为正则也是用字符串表示的，所以要经过“字符串转义”和“正则转义”两个步骤，普通的字符串（正则要匹配的文本）只有字符串转义这一步。\n在Python中使用的时候，一般会在正则字符串前面加上 r 表示原生字符串，这样转义就没那么麻烦了，更容易理解。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1593924325,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":230151,"user_name":"爱乐之城","can_delete":false,"product_type":"c1","uid":1501548,"ip_address":"","ucode":"B9000E05EBDA3F","user_header":"https://static001.geekbang.org/account/avatar/00/16/e9/6c/00668d9d.jpg","comment_is_top":false,"comment_ctime":1593281907,"is_pvip":true,"replies":[{"id":"85476","content":"思考题目类似的，可以想一下两次转义的过程。","user_name":"作者回复","user_name_real":"伟忠","uid":"1112089","ctime":1593705430,"ip_address":"","comment_id":230151,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1593281907","product_id":100053301,"comment_content":"请问 re.findall(&#39;\\+&#39;, &#39;+&#39;) 这么写是可以的吗，既然没带 r，为什么不是写成 &#39;\\\\+&#39; 呢？","like_count":0,"discussions":[{"author":{"id":1112089,"avatar":"https://static001.geekbang.org/account/avatar/00/10/f8/19/05a2695f.jpg","nickname":"伟忠","note":"","ucode":"FE77CF20ED6065","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":499785,"discussion_content":"思考题目类似的，可以想一下两次转义的过程。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1593705430,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":229398,"user_name":"Robot","can_delete":false,"product_type":"c1","uid":1181473,"ip_address":"","ucode":"7215462D5AC0FA","user_header":"https://static001.geekbang.org/account/avatar/00/12/07/21/b3394aa2.jpg","comment_is_top":false,"comment_ctime":1592984743,"is_pvip":false,"replies":[{"id":"84714","content":"赞，有动手练习，有自己的的思考分析，这种学习方法和态度值得其他同学学习。","user_name":"作者回复","user_name_real":"伟忠","uid":"1112089","ctime":1593012735,"ip_address":"","comment_id":229398,"utype":1}],"discussion_count":3,"race_medal":0,"score":"1592984743","product_id":100053301,"comment_content":"&gt;&gt;&gt; import re<br>1、&gt;&gt;&gt; re.findall(&#39;\\n&#39;, &#39;\\\\n\\n\\\\&#39;) # 正常情况，转义字符\\n，表示换行符<br>[&#39;\\n&#39;]  # 找到了换行符<br>2、&gt;&gt;&gt; re.findall(&#39;\\\\n&#39;, &#39;\\\\n\\n\\\\&#39;) # 第一步：字符串转义变为&#39;\\n&#39;后，情况同一<br>[&#39;\\n&#39;]  # 找到了换行符<br>3、&gt;&gt;&gt; re.findall(&#39;\\\\\\n&#39;, &#39;\\\\n\\n\\\\&#39;) # 第一步：字符串转义变为&#39;\\\\n&#39;，第二步：正则转义变为&#39;\\n&#39;后，表示一个`\\`与`n`，与执行结果不符（[&#39;\\n&#39;]  # 找到了换行符），继续测试执行re.escape(&#39;\\n&#39;)输出\\\\\\n，困惑（猜测：要是直接回显\\n（控制台会回显一个空行），故显示为\\\\\\n）。python3命令行下的编写。<br><br>https:&#47;&#47;regex101.com&#47;r&#47;0HfQ0T&#47;1&#47;（跟自己的想的是一致的，代表一个\\和\\n）<br>[&#39;\\n&#39;]  # 找到了换行符<br>4、&gt;&gt;&gt; re.findall(&#39;\\\\\\\\n&#39;, &#39;\\\\n\\n\\\\&#39;)# 第一步：字符串转义变为&#39;\\\\n&#39;，第二步：正则转义变为&#39;\\n&#39;后，表示一个`\\`与`n`<br>[&#39;\\\\n&#39;] # 找到了反斜杠和字母n","like_count":0,"discussions":[{"author":{"id":1112089,"avatar":"https://static001.geekbang.org/account/avatar/00/10/f8/19/05a2695f.jpg","nickname":"伟忠","note":"","ucode":"FE77CF20ED6065","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":499468,"discussion_content":"赞，有动手练习，有自己的的思考分析，这种学习方法和态度值得其他同学学习。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1593012735,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1236780,"avatar":"https://static001.geekbang.org/account/avatar/00/12/df/2c/d2e97b6a.jpg","nickname":"Jock","note":"","ucode":"2FF16F050C228F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":285972,"discussion_content":"老哥的困惑也是我之前的困惑。最后我觉得这个应该是 re 模块的某种“规定”。&#39;\\\\\\t&#39; 也是匹配的 &#39;\\t&#39;。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1593001746,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1181473,"avatar":"https://static001.geekbang.org/account/avatar/00/12/07/21/b3394aa2.jpg","nickname":"Robot","note":"","ucode":"7215462D5AC0FA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1236780,"avatar":"https://static001.geekbang.org/account/avatar/00/12/df/2c/d2e97b6a.jpg","nickname":"Jock","note":"","ucode":"2FF16F050C228F","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":285986,"discussion_content":"https://stackoverflow.com/questions/6967204/how-is-n-and-n-interpreted-by-the-expanded-regular-expression/59192811#59192811。 看下这个，帮你解惑","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1593005822,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":285972,"ip_address":""},"score":285986,"extra":""}]}]},{"had_liked":false,"id":229394,"user_name":"felix","can_delete":false,"product_type":"c1","uid":1086157,"ip_address":"","ucode":"DF514D0BB9B508","user_header":"https://static001.geekbang.org/account/avatar/00/10/92/cd/d39e568c.jpg","comment_is_top":false,"comment_ctime":1592984225,"is_pvip":false,"replies":[{"id":"84713","content":"没太明白，你可以说下输入是什么，你期望得到的输出是什么","user_name":"作者回复","user_name_real":"伟忠","uid":"1112089","ctime":1593012545,"ip_address":"","comment_id":229394,"utype":1}],"discussion_count":3,"race_medal":0,"score":"1592984225","product_id":100053301,"comment_content":"谢谢老师对上个问题的回答，但是用单个字符}或;作为结尾肯定覆盖不了全部情况，变量里面也可能有括号。<br>所以我的问题是怎么拿到第一个以};一起结尾的字符串？谢谢！<br>var para = {<br>\ta: &#39;test;test&#39;,<br>\tb: {<br>\t\tc: a,<br>\t}<br>};<br>function funtest {<br>};<br><br>【下面是上个问题】<br>没什么基础，看完了这几期课程，还是有点晕。有个例子想老师帮我看看：<br>我想拿到script里的一个变量，script如下所示：<br>&lt;script&gt;<br>var para = {<br>a: &#39;test;test&#39;,<br>};<br>function funtest {<br>};<br>&lt;&#47;script&gt;<br><br>目标是拿到para这个变量，想法是拿到第一个};前的内容，但是目前只会拿到第一个;前的内容，但是;有时会出现在引号里面，想问下老师怎么修改如下python正则<br>var para = ([^;]+);","like_count":0,"discussions":[{"author":{"id":1112089,"avatar":"https://static001.geekbang.org/account/avatar/00/10/f8/19/05a2695f.jpg","nickname":"伟忠","note":"","ucode":"FE77CF20ED6065","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":499466,"discussion_content":"没太明白，你可以说下输入是什么，你期望得到的输出是什么","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1593012545,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1086157,"avatar":"https://static001.geekbang.org/account/avatar/00/10/92/cd/d39e568c.jpg","nickname":"felix","note":"","ucode":"DF514D0BB9B508","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":286036,"discussion_content":"输入是\n\nvar para = {\na: &#39;test;test&#39;,\nb: {\nc: a,\n}\n};\nfunction funtest {\n};\n\n输出是\n\nvar para = {\na: &#39;test;test&#39;,\nb: {\nc: a,\n}\n};\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1593017480,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1112089,"avatar":"https://static001.geekbang.org/account/avatar/00/10/f8/19/05a2695f.jpg","nickname":"伟忠","note":"","ucode":"FE77CF20ED6065","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":1086157,"avatar":"https://static001.geekbang.org/account/avatar/00/10/92/cd/d39e568c.jpg","nickname":"felix","note":"","ucode":"DF514D0BB9B508","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":286555,"discussion_content":"可以参考一下这个 https://regex101.com/r/mJCvRx/1\n正则：var[\\w\\W]+?};\n你可以再根据实际情况修改下","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1593227216,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":286036,"ip_address":""},"score":286555,"extra":""}]}]}]}