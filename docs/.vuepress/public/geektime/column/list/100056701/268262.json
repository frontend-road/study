{"id":268262,"title":"01 | 基本架构：一个键值数据库包含什么？","content":"<p>你好，我是蒋德钧。</p><p>我们知道，Redis是典型的键值数据库，所以今天，我准备手把手地带你构建一个简单的键值数据库。为啥要这么做呢？</p><p>还记得我在开篇词说过吗？Redis本身比较复杂，如果我们一上来就直接研究一个个具体的技术点，比如“单线程”“缓存”等，虽然可以直接学习到具体的内容，甚至立马就能解决一些小问题，但是这样学，很容易迷失在细枝末节里。</p><p>从我自己的经验来看，更好的学习方式就是先建立起“<strong>系统观</strong>”。这也就是说，如果我们想要深入理解和优化Redis，就必须要对它的总体架构和关键模块有一个全局的认知，然后再深入到具体的技术点。这也是我们这门课坚持的一种讲课方式。</p><p>我相信，经过这样一个过程，我们在实践中定位和解决问题时，就会轻松很多，而且你还可以把这个学习方式迁移到其他的学习活动上。我希望你能彻底掌握这个学习思路，让自己的学习、工作效率更高。</p><p>说远了，还是回到我们今天的课程主题上。今天，在构造这个简单的键值数据库时，我们只需要关注整体架构和核心模块。这就相当于医学上在正式解剖人体之前，会先解剖一只小白鼠。我们通过剖析这个最简单的键值数据库，来迅速抓住学习和调优Redis的关键。</p><p>我把这个简单的键值数据库称为SimpleKV。需要注意的是，GitHub上也有一个名为SimpleKV的项目，这跟我说的SimpleKV不是一回事，我说的只是一个具有关键组件的键值数据库架构。</p><!-- [[[read_end]]] --><p>好了，你是不是已经准备好了，那我们就一起来构造SimpleKV吧。</p><p>开始构造SimpleKV时，首先就要考虑里面可以存什么样的数据，对数据可以做什么样的操作，也就是数据模型和操作接口。它们看似简单，实际上却是我们理解Redis经常被用于缓存、秒杀、分布式锁等场景的重要基础。</p><p>理解了数据模型，你就会明白，为什么在有些场景下，原先使用关系型数据库保存的数据，也可以用键值数据库保存。例如，用户信息（用户ID、姓名、年龄、性别等）通常用关系型数据库保存，在这个场景下，一个用户ID对应一个用户信息集合，这就是键值数据库的一种数据模型，它同样能完成这一存储需求。</p><p>但是，如果你只知道数据模型，而不了解操作接口的话，可能就无法理解，为什么在有些场景中，使用键值数据库又不合适了。例如，同样是在上面的场景中，如果你要对多个用户的年龄计算均值，键值数据库就无法完成了。因为它只提供简单的操作接口，无法支持复杂的聚合计算。</p><p>那么，对于Redis来说，它到底能做什么，不能做什么呢？只有先搞懂它的数据模型和操作接口，我们才能真正把“这块好钢用在刀刃上”。</p><p>接下来，我们就先来看可以存哪些数据。</p><h2>可以存哪些数据？</h2><p>对于键值数据库而言，基本的数据模型是key-value模型。 例如，“hello”: “world”就是一个基本的KV对，其中，“hello”是key，“world”是value。SimpleKV也不例外。在SimpleKV中，key是String类型，而value是基本数据类型，例如String、整型等。</p><p>但是，SimpleKV毕竟是一个简单的键值数据库，对于实际生产环境中的键值数据库来说，value类型还可以是复杂类型。</p><p>不同键值数据库支持的key类型一般差异不大，而value类型则有较大差别。我们在对键值数据库进行选型时，一个重要的考虑因素是<strong>它支持的value类型</strong>。例如，Memcached支持的value类型仅为String类型，而Redis支持的value类型包括了String、哈希表、列表、集合等。<strong>Redis能够在实际业务场景中得到广泛的应用，就是得益于支持多样化类型的value</strong>。</p><p>从使用的角度来说，不同value类型的实现，不仅可以支撑不同业务的数据需求，而且也隐含着不同数据结构在性能、空间效率等方面的差异，从而导致不同的value操作之间存在着差异。</p><p>只有深入地理解了这背后的原理，我们才能在选择Redis value类型和优化Redis性能时，做到游刃有余。</p><h2>可以对数据做什么操作？</h2><p>知道了数据模型，接下来，我们就要看它对数据的基本操作了。SimpleKV是一个简单的键值数据库，因此，基本操作无外乎增删改查。</p><p>我们先来了解下SimpleKV需要支持的3种基本操作，即PUT、GET和DELETE。</p><ul>\n<li>PUT：新写入或更新一个key-value对；</li>\n<li>GET：根据一个key读取相应的value值；</li>\n<li>DELETE：根据一个key删除整个key-value对。</li>\n</ul><p>需要注意的是，<strong>有些键值数据库的新写/更新操作叫SET</strong>。新写入和更新虽然是用一个操作接口，但在实际执行时，会根据key是否存在而执行相应的新写或更新流程。</p><p>在实际的业务场景中，我们经常会碰到这种情况：查询一个用户在一段时间内的访问记录。这种操作在键值数据库中属于SCAN操作，即<strong>根据一段key的范围返回相应的value值</strong>。因此，<strong>PUT/GET/DELETE/SCAN是一个键值数据库的基本操作集合</strong>。</p><p>此外，实际业务场景通常还有更加丰富的需求，例如，在黑白名单应用中，需要判断某个用户是否存在。如果将该用户的ID作为key，那么，可以增加EXISTS操作接口，用于判断某个key是否存在。对于一个具体的键值数据库而言，你可以通过查看操作文档，了解其详细的操作接口。</p><p>当然，当一个键值数据库的value类型多样化时，就需要包含相应的操作接口。例如，Redis的value有列表类型，因此它的接口就要包括对列表value的操作。后面我也会具体介绍，不同操作对Redis访问效率的影响。</p><p>说到这儿呢，数据模型和操作接口我们就构造完成了，这是我们的基础工作。接下来呢，我们就要更进一步，考虑一个非常重要的设计问题：<strong>键值对保存在内存还是外存？</strong></p><p>保存在内存的好处是读写很快，毕竟内存的访问速度一般都在百ns级别。但是，潜在的风险是一旦掉电，所有的数据都会丢失。</p><p>保存在外存，虽然可以避免数据丢失，但是受限于磁盘的慢速读写（通常在几ms级别），键值数据库的整体性能会被拉低。</p><p>因此，<strong>如何进行设计选择，我们通常需要考虑键值数据库的主要应用场景</strong>。比如，缓存场景下的数据需要能快速访问但允许丢失，那么，用于此场景的键值数据库通常采用内存保存键值数据。Memcached和Redis都是属于内存键值数据库。对于Redis而言，缓存是非常重要的一个应用场景。后面我会重点介绍Redis作为缓存使用的关键机制、优势，以及常见的优化方法。</p><p>为了和Redis保持一致，我们的SimpleKV就采用内存保存键值数据。接下来，我们来了解下SimpleKV的基本组件。</p><p>大体来说，一个键值数据库包括了<strong>访问框架、索引模块、操作模块和存储模块</strong>四部分（见下图）。接下来，我们就从这四个部分入手，继续构建我们的SimpleKV。</p><p><img src=\"https://static001.geekbang.org/resource/image/ec/d5/ec18bf4b8afef2fa8b99af252d95a2d5.jpg?wh=2360*3791\" alt=\"\"></p><h2>采用什么访问模式？</h2><p>访问模式通常有两种：一种是<strong>通过函数库调用的方式供外部应用使用</strong>，比如，上图中的libsimplekv.so，就是以动态链接库的形式链接到我们自己的程序中，提供键值存储功能；另一种是<strong>通过网络框架以Socket通信的形式对外提供键值对操作</strong>，这种形式可以提供广泛的键值存储服务。在上图中，我们可以看到，网络框架中包括Socket Server和协议解析。</p><p>不同的键值数据库服务器和客户端交互的协议并不相同，我们在对键值数据库进行二次开发、新增功能时，必须要了解和掌握键值数据库的通信协议，这样才能开发出兼容的客户端。</p><p>实际的键值数据库也基本采用上述两种方式，例如，RocksDB以动态链接库的形式使用，而Memcached和Redis则是通过网络框架访问。后面我还会给你介绍Redis现有的客户端和通信协议。</p><p>通过网络框架提供键值存储服务，一方面扩大了键值数据库的受用面，但另一方面，也给键值数据库的性能、运行模型提供了不同的设计选择，带来了一些潜在的问题。</p><p>举个例子，当客户端发送一个如下的命令后，该命令会被封装在网络包中发送给键值数据库：</p><pre><code>PUT hello world\n</code></pre><p>键值数据库网络框架接收到网络包，并按照相应的协议进行解析之后，就可以知道，客户端想写入一个键值对，并开始实际的写入流程。此时，我们会遇到一个系统设计上的问题，简单来说，就是网络连接的处理、网络请求的解析，以及数据存取的处理，是用一个线程、多个线程，还是多个进程来交互处理呢？该如何进行设计和取舍呢？我们一般把这个问题称为I/O模型设计。不同的I/O模型对键值数据库的性能和可扩展性会有不同的影响。</p><p>举个例子，如果一个线程既要处理网络连接、解析请求，又要完成数据存取，一旦某一步操作发生阻塞，整个线程就会阻塞住，这就降低了系统响应速度。如果我们采用不同线程处理不同操作，那么，某个线程被阻塞时，其他线程还能正常运行。但是，不同线程间如果需要访问共享资源，那又会产生线程竞争，也会影响系统效率，这又该怎么办呢？所以，这的确是个“两难”选择，需要我们进行精心的设计。</p><p>你可能经常听说Redis是单线程，那么，Redis又是如何做到“单线程，高性能”的呢？后面我再和你好好聊一聊。</p><h2>如何定位键值对的位置？</h2><p>当SimpleKV解析了客户端发来的请求，知道了要进行的键值对操作，此时，SimpleKV需要查找所要操作的键值对是否存在，这依赖于键值数据库的索引模块。<strong>索引的作用是让键值数据库根据key找到相应value的存储位置，进而执行操作</strong>。</p><p>索引的类型有很多，常见的有哈希表、B+树、字典树等。不同的索引结构在性能、空间消耗、并发控制等方面具有不同的特征。如果你看过其他键值数据库，就会发现，不同键值数据库采用的索引并不相同，例如，Memcached和Redis采用哈希表作为key-value索引，而RocksDB则采用跳表作为内存中key-value的索引。</p><p>一般而言，内存键值数据库（例如Redis）采用哈希表作为索引，很大一部分原因在于，其键值数据基本都是保存在内存中的，而内存的高性能随机访问特性可以很好地与哈希表O(1)的操作复杂度相匹配。</p><p>SimpleKV的索引根据key找到value的存储位置即可。但是，和SimpleKV不同，对于Redis而言，很有意思的一点是，它的value支持多种类型，当我们通过索引找到一个key所对应的value后，仍然需要从value的复杂结构（例如集合和列表）中进一步找到我们实际需要的数据，这个操作的效率本身就依赖于它们的实现结构。</p><p>Redis采用一些常见的高效索引结构作为某些value类型的底层数据结构，这一技术路线为Redis实现高性能访问提供了良好的支撑。</p><h2>不同操作的具体逻辑是怎样的？</h2><p>SimpleKV的索引模块负责根据key找到相应的value的存储位置。对于不同的操作来说，找到存储位置之后，需要进一步执行的操作的具体逻辑会有所差异。SimpleKV的操作模块就实现了不同操作的具体逻辑：</p><ul>\n<li>对于GET/SCAN操作而言，此时根据value的存储位置返回value值即可；</li>\n<li>对于PUT一个新的键值对数据而言，SimpleKV需要为该键值对分配内存空间；</li>\n<li>对于DELETE操作，SimpleKV需要删除键值对，并释放相应的内存空间，这个过程由分配器完成。</li>\n</ul><p>不知道你注意到没有，对于PUT和DELETE两种操作来说，除了新写入和删除键值对，还需要分配和释放内存。这就不得不提SimpleKV的存储模块了。</p><h2>如何实现重启后快速提供服务？</h2><p>SimpleKV采用了常用的内存分配器glibc的malloc和free，因此，SimpleKV并不需要特别考虑内存空间的管理问题。但是，键值数据库的键值对通常大小不一，glibc的分配器在处理随机的大小内存块分配时，表现并不好。一旦保存的键值对数据规模过大，就可能会造成较严重的内存碎片问题。</p><p>因此，分配器是键值数据库中的一个关键因素。对于以内存存储为主的Redis而言，这点尤为重要。Redis的内存分配器提供了多种选择，分配效率也不一样，后面我会具体讲一讲这个问题。</p><p>SimpleKV虽然依赖于内存保存数据，提供快速访问，但是，我也希望SimpleKV重启后能快速重新提供服务，所以，我在SimpleKV的存储模块中增加了持久化功能。</p><p>不过，鉴于磁盘管理要比内存管理复杂，SimpleKV就直接采用了文件形式，将键值数据通过调用本地文件系统的操作接口保存在磁盘上。此时，SimpleKV只需要考虑何时将内存中的键值数据保存到文件中，就可以了。</p><p>一种方式是，对于每一个键值对，SimpleKV都对其进行落盘保存，这虽然让SimpleKV的数据更加可靠，但是，因为每次都要写盘，SimpleKV的性能会受到很大影响。</p><p>另一种方式是，SimpleKV只是周期性地把内存中的键值数据保存到文件中，这样可以避免频繁写盘操作的性能影响。但是，一个潜在的代价是SimpleKV的数据仍然有丢失的风险。</p><p>和SimpleKV一样，Redis也提供了持久化功能。不过，为了适应不同的业务场景，Redis为持久化提供了诸多的执行机制和优化改进，后面我会和你逐一介绍Redis在持久化机制中的关键设计考虑。</p><h2>小结</h2><p>至此，我们构造了一个简单的键值数据库SimpleKV。可以看到，前面两步我们是从应用的角度进行设计的，也就是应用视角；后面四步其实就是SimpleKV完整的内部构造，可谓是麻雀虽小，五脏俱全。</p><p>SimpleKV包含了一个键值数据库的基本组件，对这些组件有了了解之后，后面在学习Redis这个丰富版的SimpleKV时，就会轻松很多。</p><p>为了支持更加丰富的业务场景，Redis对这些组件或者功能进行了扩展，或者说是进行了精细优化，从而满足了功能和性能等方面的要求。</p><p><img src=\"https://static001.geekbang.org/resource/image/30/44/30e0e0eb0b475e6082dd14e63c13ed44.jpg?wh=5319*3582\" alt=\"\"></p><p>从这张对比图中，我们可以看到，从SimpleKV演进到Redis，有以下几个重要变化：</p><ul>\n<li>Redis主要通过网络框架进行访问，而不再是动态库了，这也使得Redis可以作为一个基础性的网络服务进行访问，扩大了Redis的应用范围。</li>\n<li>Redis数据模型中的value类型很丰富，因此也带来了更多的操作接口，例如面向列表的LPUSH/LPOP，面向集合的SADD/SREM等。在下节课，我将和你聊聊这些value模型背后的数据结构和操作效率，以及它们对Redis性能的影响。</li>\n<li>Redis的持久化模块能支持两种方式：日志（AOF）和快照（RDB），这两种持久化方式具有不同的优劣势，影响到Redis的访问性能和可靠性。</li>\n<li>SimpleKV是个简单的单机键值数据库，但是，Redis支持高可靠集群和高可扩展集群，因此，Redis中包含了相应的集群功能支撑模块。</li>\n</ul><p>通过这节课SimpleKV的构建，我相信你已经对键值数据库的基本结构和重要模块有了整体认知和深刻理解，这其实也是Redis单机版的核心基础。针对刚刚提到的几点Redis的重大演进，在接下来的课程中，我会依次进行重点讲解。与此同时，我还会结合实战场景，让你不仅能够理解原理，还能真正学以致用，提升实战能力。</p><h2>每课一问</h2><p>给你留个小问题：和你了解的Redis相比，你觉得，SimpleKV里面还缺少什么功能组件或模块吗？</p><p>欢迎在留言区写下你的思考和答案，我们一起交流讨论，也欢迎你把今天的内容分享给你的朋友。</p>","neighbors":{"left":{"article_title":"开篇词 | 这样学Redis，才能技高一筹","id":268247},"right":{"article_title":"02 | 数据结构：快速的Redis有哪些慢操作？","id":268253}},"comments":[{"had_liked":false,"id":241358,"user_name":"Monday","can_delete":false,"product_type":"c1","uid":1250907,"ip_address":"","ucode":"77B9BACC783598","user_header":"https://static001.geekbang.org/account/avatar/00/13/16/5b/83a35681.jpg","comment_is_top":true,"comment_ctime":1597278419,"is_pvip":false,"replies":[{"id":"89306","content":"加油，我们一起交流学习。","user_name":"作者回复","comment_id":241358,"uid":"1609687","ip_address":"","utype":1,"ctime":1597557545,"user_name_real":"蒋德钧"}],"discussion_count":1,"race_medal":0,"score":"9.2233725280782991e+18","product_id":100056701,"comment_content":"庖丁解牛式的分解，赞，redis原来这么多“道道”，一直是我把redis想简单了，以前只是一个拿来主义，人云亦云说redis好用，引入项目使用就行，没有深入redis背后的功能，所以一直以为redis很简单，希望通过此专栏有深入了解redis。","like_count":115,"discussions":[{"author":{"id":1609687,"avatar":"https://static001.geekbang.org/account/avatar/00/18/8f/d7/fb60129d.jpg","nickname":"蒋德钧","note":"","ucode":"833985C2C37C0A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":503724,"discussion_content":"加油，我们一起交流学习。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1597557545,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":239253,"user_name":"曾轼麟","can_delete":false,"product_type":"c1","uid":1451391,"ip_address":"","ucode":"D418371AC11270","user_header":"https://static001.geekbang.org/account/avatar/00/16/25/7f/473d5a77.jpg","comment_is_top":false,"comment_ctime":1596467218,"is_pvip":false,"replies":[{"id":"88469","content":"赞，系统性的对比非常详细！我再补一个，内存分配器，SimpleKV就是glibc，Redis的分配器选择更多。","user_name":"作者回复","comment_id":239253,"uid":"1609687","ip_address":"","utype":1,"ctime":1596546486,"user_name_real":"蒋德钧"}],"discussion_count":5,"race_medal":0,"score":"1517719922706","product_id":100056701,"comment_content":"SimpleKV和Redis的对比：<br>【数据结构】上缺乏广泛的数据结构支持：比如支持范围查询的SkipList，和Stream等等数据结构<br>【高可用】上缺乏，哨兵或者master-slaver模式的高可用设计<br>【横向扩展】上缺乏集群和分片功能<br>【在内存安全性】上，缺乏内存过载时候的key淘汰算法的支持<br>【内存利用率】没有充分对数据结构优化提高内存利用率，例如使用压缩性的数据结构<br>【功能扩展】需要具备后续功能的拓展<br>【不具备事务性】无法保证多个操作的原子性<br>等等<br>","like_count":354,"discussions":[{"author":{"id":1609687,"avatar":"https://static001.geekbang.org/account/avatar/00/18/8f/d7/fb60129d.jpg","nickname":"蒋德钧","note":"","ucode":"833985C2C37C0A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":503034,"discussion_content":"赞，系统性的对比非常详细！我再补一个，内存分配器，SimpleKV就是glibc，Redis的分配器选择更多。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1596546486,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2948634,"avatar":"","nickname":"Geek_275fa9","note":"","ucode":"E08AB55F59EF59","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":557703,"discussion_content":"【不具备事务性】无法保证多个操作的原子性 就这个还比较靠谱","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1647937036,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2689623,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/2Iw3M4Myq6G3TO1BQExJP9JKtazBEfptXhG1WcMsnZSWRyiaXCeq0NibsWmmerJVRSpybhfezib8pBGlowlR2wg2A/132","nickname":"Geek9772","note":"","ucode":"A5E059C92D9950","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":544048,"discussion_content":"simplekv 和 redis的使用场景不一样，对比也没啥意义吧，比如， simplekv 是嵌入到应用程序内部，给单个程序使用，并不需要哨兵或者master-slave模式。 ","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1641385631,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2739957,"avatar":"","nickname":"Geek_39299b","note":"","ucode":"908C2FC4DECD33","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":389607,"discussion_content":"那要是 都具备了 那就直接出道了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1629355455,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1593289,"avatar":"https://static001.geekbang.org/account/avatar/00/18/4f/c9/9f51fd27.jpg","nickname":"编程界的小学生","note":"","ucode":"4A5BE9A5E877FA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":335084,"discussion_content":"大赞！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1608086918,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":239341,"user_name":"Kaito","can_delete":false,"product_type":"c1","uid":1020042,"ip_address":"","ucode":"79775FA35A95F2","user_header":"https://static001.geekbang.org/account/avatar/00/0f/90/8a/288f9f94.jpg","comment_is_top":false,"comment_ctime":1596506395,"is_pvip":true,"replies":[{"id":"88741","content":"这个比较丰富，赞！","user_name":"作者回复","comment_id":239341,"uid":"1609687","ip_address":"","utype":1,"ctime":1596885446,"user_name_real":"蒋德钧"}],"discussion_count":4,"race_medal":0,"score":"714561077531","product_id":100056701,"comment_content":"缺少的还包括：丰富的数据类型、数据压缩、过期机制、数据淘汰策略、主从复制、集群化、高可用等功能，另外还可以增加统计模块、通知模块、调试模块、元数据查询等辅助功能。","like_count":167,"discussions":[{"author":{"id":1609687,"avatar":"https://static001.geekbang.org/account/avatar/00/18/8f/d7/fb60129d.jpg","nickname":"蒋德钧","note":"","ucode":"833985C2C37C0A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":503071,"discussion_content":"这个比较丰富，赞！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1596885446,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2041396,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/26/34/891dd45b.jpg","nickname":"宙斯","note":"","ucode":"80DF36BAD298AD","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":564923,"discussion_content":"插件功能","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1650355601,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2948634,"avatar":"","nickname":"Geek_275fa9","note":"","ucode":"E08AB55F59EF59","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":557704,"discussion_content":"过期重要的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1647937084,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2563344,"avatar":"https://static001.geekbang.org/account/avatar/00/27/1d/10/a73d63ba.jpg","nickname":"欢少の不忘初心","note":"","ucode":"9A7ABCC07682C2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":410903,"discussion_content":"太牛了\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1635812820,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":240254,"user_name":"Darren","can_delete":false,"product_type":"c1","uid":1254968,"ip_address":"","ucode":"CCD2B2C492BE9A","user_header":"https://static001.geekbang.org/account/avatar/00/13/26/38/ef063dc2.jpg","comment_is_top":false,"comment_ctime":1596811548,"is_pvip":true,"discussion_count":6,"race_medal":0,"score":"577122429212","product_id":100056701,"comment_content":"我觉得还有一个比较重要的点吧，就是安全性，Redis是二进制安全的，不关心序列化和反序列化，但是SimpleKV并没有这块。<br><br>再说说Redis比MemCached流行，并且蚕食后者市场份额主要的点就起Redis的数据结构，表面上是数据结构，本质上是”计算向数据迁移”，因为想要高性能，高可用，就需要”快”，memcached的只支持String，想要获取制定的数据，是不可以的，必须全量返回，这就造成了返回体比较大，但是Redis的Hash结构可以返回指定的二级key或者一段List或者Set，返回体小，也标志着痛过网卡的流量少，更符合Redis的epoll的网络模型，尽量不阻塞。","like_count":135,"discussions":[{"author":{"id":1102291,"avatar":"https://static001.geekbang.org/account/avatar/00/10/d1/d3/827cdfd5.jpg","nickname":"Kai","note":"","ucode":"BE6985A02BEA7E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":341050,"discussion_content":"我们以前就用string数据类型，请求量大的时候直接把网卡出口流量打满了。后面用有序集合数据结构解决的","likes_number":8,"is_delete":false,"is_hidden":false,"ctime":1610274699,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1065365,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTL9DraJTygicJP03O5ZmchOCDMQxaJd8yDEibzQvwDhicCeHdtVmW1WicSzL8am2ub0XwiaEOyY9ibzFSgQ/132","nickname":"Fiona","note":"","ucode":"1D55F542B65D4E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":370900,"discussion_content":"因此Memcached的应用范围非常窄","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1619576661,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2948634,"avatar":"","nickname":"Geek_275fa9","note":"","ucode":"E08AB55F59EF59","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":557705,"discussion_content":"Redis是二进制安全的，不关心序列化和反序列化  这怎么理解尼？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1647937144,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":2076251,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/ae/5b/4bd42286.jpg","nickname":"宋计洋","note":"","ucode":"9A34E8F71C6CBD","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2948634,"avatar":"","nickname":"Geek_275fa9","note":"","ucode":"E08AB55F59EF59","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":558402,"discussion_content":"key和value都是byte类型，序列化和反序列化是应用放来控制的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1648283928,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":557705,"ip_address":""},"score":558402,"extra":""}]},{"author":{"id":2739957,"avatar":"","nickname":"Geek_39299b","note":"","ucode":"908C2FC4DECD33","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":389608,"discussion_content":"计算向数据迁移 数据向流量迁移","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1629355546,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1501818,"avatar":"https://static001.geekbang.org/account/avatar/00/16/ea/7a/d857723d.jpg","nickname":"Vfeelit","note":"","ucode":"F3FF2B069F347F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":328136,"discussion_content":"尽量不堵塞？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1606086986,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":240118,"user_name":"方程","can_delete":false,"product_type":"c1","uid":1358104,"ip_address":"","ucode":"CB6583491A72A9","user_header":"https://static001.geekbang.org/account/avatar/00/14/b9/18/91c75a22.jpg","comment_is_top":false,"comment_ctime":1596765998,"is_pvip":false,"replies":[{"id":"88752","content":"跳表是在Redis的value类型为有序集合时采用的一种数据组织结构，作为集合内元素的索引，在有序集合中进行操作时会依赖于跳表索引。但是从key找到value本身这个过程还是由全局哈希表索引完成。","user_name":"作者回复","comment_id":240118,"uid":"1609687","ip_address":"","utype":1,"ctime":1596934627,"user_name_real":"蒋德钧"}],"discussion_count":6,"race_medal":0,"score":"375258920750","product_id":100056701,"comment_content":"Redis不也是根据跳表作为索引的吗","like_count":88,"discussions":[{"author":{"id":1508990,"avatar":"https://static001.geekbang.org/account/avatar/00/17/06/7e/735968e2.jpg","nickname":"西门吹牛","note":"","ucode":"E5D3624DDE1E83","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":328679,"discussion_content":"定位key是hash，拿到key，就能映射到value，对于redis而言，value类型很多，在内存中会以多种数据结构存储，如果value是有序列表集合的数据结构，那么就用跳表来实现索引，毕竟一个链表的查询时间复杂度是O（n）,而跳表可以做到O(logn)。Redis针对有序列表，之所以不用红黑树，是因为在进行范围查找时，红黑树的性能远不如跳表来的快","likes_number":16,"is_delete":false,"is_hidden":false,"ctime":1606208511,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":2739957,"avatar":"","nickname":"Geek_39299b","note":"","ucode":"908C2FC4DECD33","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1508990,"avatar":"https://static001.geekbang.org/account/avatar/00/17/06/7e/735968e2.jpg","nickname":"西门吹牛","note":"","ucode":"E5D3624DDE1E83","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":389611,"discussion_content":"哦哦哦 学到了，我之前一直以为 查找key时 也是用了什么跳表啥的。。。。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1629356063,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":328679,"ip_address":""},"score":389611,"extra":""}]},{"author":{"id":1609687,"avatar":"https://static001.geekbang.org/account/avatar/00/18/8f/d7/fb60129d.jpg","nickname":"蒋德钧","note":"","ucode":"833985C2C37C0A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":503347,"discussion_content":"跳表是在Redis的value类型为有序集合时采用的一种数据组织结构，作为集合内元素的索引，在有序集合中进行操作时会依赖于跳表索引。但是从key找到value本身这个过程还是由全局哈希表索引完成。","likes_number":6,"is_delete":false,"is_hidden":false,"ctime":1596934627,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1436839,"avatar":"https://static001.geekbang.org/account/avatar/00/15/ec/a7/7d44c655.jpg","nickname":"snailshen","note":"","ucode":"C4875C476649B1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":305926,"discussion_content":"应该是一个全局字典，类似hash","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1600132388,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1427152,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eppZl39m2knwLH6PIia5YQTOWSOTGhy8ZZAutUIrxKOYFCtLLLYb1OZvIVVLzL7Y8eglKFe4Sib9D7g/132","nickname":"漫步oo0云端","note":"","ucode":"4906095751D7B0","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":297949,"discussion_content":"您说的全局哈希表是说，一个库只有一个hash表吗？那么如果hash需要扩容，是不是所有读写操作都会受到影响呢？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1597117139,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1899599,"avatar":"https://static001.geekbang.org/account/avatar/00/1c/fc/4f/0a452c94.jpg","nickname":"大毛","note":"","ucode":"93B18287F06706","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1427152,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eppZl39m2knwLH6PIia5YQTOWSOTGhy8ZZAutUIrxKOYFCtLLLYb1OZvIVVLzL7Y8eglKFe4Sib9D7g/132","nickname":"漫步oo0云端","note":"","ucode":"4906095751D7B0","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":312119,"discussion_content":"如果要进行扩容，必然会使用渐进式扩容","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1602586314,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":297949,"ip_address":""},"score":312119,"extra":""}]}]},{"had_liked":false,"id":239481,"user_name":"25ma","can_delete":false,"product_type":"c1","uid":1303713,"ip_address":"","ucode":"AB5435B9DB52C9","user_header":"https://static001.geekbang.org/account/avatar/00/13/e4/a1/178387da.jpg","comment_is_top":false,"comment_ctime":1596544891,"is_pvip":false,"discussion_count":11,"race_medal":0,"score":"353783863163","product_id":100056701,"comment_content":"缺一个实现以上功能的程序员","like_count":83,"discussions":[{"author":{"id":1024294,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/PiajxSqBRaELZPnUAiajaR5C25EDLWeJURggyiaOP5GGPe2qlwpQcm5e3ybib8OsP4tvddFDLVRSNNGL5I3SFPJHsA/132","nickname":"null","note":"","ucode":"F9039EFED6B55D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":334603,"discussion_content":"请你明天入职","likes_number":5,"is_delete":false,"is_hidden":false,"ctime":1607913897,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1209939,"avatar":"https://static001.geekbang.org/account/avatar/00/12/76/53/21d62a23.jpg","nickname":"鲁·本","note":"","ucode":"F1DEB30C21B48E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":319267,"discussion_content":"这位同学你出来一下","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1603976416,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2196992,"avatar":"https://static001.geekbang.org/account/avatar/00/21/86/00/c8b8a662.jpg","nickname":"Mark","note":"","ucode":"7B4EE9E0F8033C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":380465,"discussion_content":"皮皮你来啦","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1624518160,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1243154,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIMkQ4DknKCuCHoXVMTvibbHlSeicExQC2ficfzln1yGXnj3HUKEIiczmNe6d3ibNqlpqSNbBbwTlom6Nw/132","nickname":"Echo","note":"","ucode":"4F792BEBFD05B2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":327396,"discussion_content":"创业就差一个程序员了","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1605829092,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1588794,"avatar":"https://static001.geekbang.org/account/avatar/00/18/3e/3a/2267d2a3.jpg","nickname":"hoppo","note":"","ucode":"B0C7C124A99B2D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":312454,"discussion_content":"瞎说大实话😄","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1602688444,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1155586,"avatar":"https://static001.geekbang.org/account/avatar/00/11/a2/02/a44d512e.jpg","nickname":"zzzzz","note":"","ucode":"FB12EF8B8C3888","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":548056,"discussion_content":"你太有才了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1643014177,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1107879,"avatar":"https://static001.geekbang.org/account/avatar/00/10/e7/a7/9825371e.jpg","nickname":"Penn","note":"","ucode":"2D73D9C2AED26F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":532317,"discussion_content":"这位皮皮同学，就缺你了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1637574407,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"user_type\":1}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1488601,"avatar":"https://static001.geekbang.org/account/avatar/00/16/b6/d9/4d8a4d4c.jpg","nickname":"红豆成香","note":"","ucode":"FB8FBB639B4BA6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":374946,"discussion_content":"6","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1621416528,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1258402,"avatar":"https://static001.geekbang.org/account/avatar/00/13/33/a2/6c0ffc15.jpg","nickname":"皮皮侠","note":"","ucode":"04205990C1DE1F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":372664,"discussion_content":"嘎","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1620403094,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1112490,"avatar":"https://static001.geekbang.org/account/avatar/00/10/f9/aa/3e80212e.jpg","nickname":"龙猫","note":"","ucode":"FD726CC969EF9C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":310427,"discussion_content":"这位同学出来一下😂","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1601825101,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1436839,"avatar":"https://static001.geekbang.org/account/avatar/00/15/ec/a7/7d44c655.jpg","nickname":"snailshen","note":"","ucode":"C4875C476649B1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":305927,"discussion_content":"哈哈","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1600132413,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":244447,"user_name":"无名之辈","can_delete":false,"product_type":"c1","uid":1108247,"ip_address":"","ucode":"23AB28F44A769C","user_header":"https://static001.geekbang.org/account/avatar/00/10/e9/17/c78d3963.jpg","comment_is_top":false,"comment_ctime":1598520090,"is_pvip":true,"replies":[{"id":"90095","content":"非常棒的一个思考过程！<br><br>而且做了很好的总结和对比，非常有利于知识点掌握，加油！","user_name":"作者回复","comment_id":244447,"uid":"1609687","ip_address":"","utype":1,"ctime":1598708633,"user_name_real":"蒋德钧"}],"discussion_count":2,"race_medal":0,"score":"250706623258","product_id":100056701,"comment_content":"看完想以设计者的角度设计一下。<br>K-V数据库<br>设计题（自我设计）:<br>  ①访问模块 -&gt;网络Socket编程（薄弱项，待加强）<br>  ②操作接口 -&gt;curd<br>  ③索引模块 -&gt;哈希表<br>  ④数据模型 -&gt; K-String V-基本数据类型+引用数据类型等<br>  ⑤存储 -&gt; 内存or磁盘以及如何存储<br>再次观看老师的设计，补充一下自己看不到的地方<br>①访问模块 -&gt; IO模型设计：网络连接处理、网络请求的解析、数据存储的处理<br>②操作接口 -&gt; 根据业务需求扩展：范围查询、exist接口等<br>③索引模块 -&gt; 哈希表、B+树、字典树的价高，不同的索引结构在性能、空间消耗、并发控制等方面都具有不同的特性<br>④数据模型 -&gt; 不同的数据结构在性能、空间效率方面存在差异，不同的value操作空间存在差异<br>⑤存储模块 -&gt; 根据不同的业务场景设计存储，并引出持久化<br>总结：<br>以上都是简单的概括，但背后涉及的东西还是挺多的，这个要想搞懂只能自己下功夫了。顺便感慨一下，自己看东西也看的比较浅，很多点就是想不到，但是老师的这种思维方式对我还是挺有帮助的，希望在研究下个技术的时候可以用上。最后非常感谢老师的倾囊相授！！！","like_count":59,"discussions":[{"author":{"id":1609687,"avatar":"https://static001.geekbang.org/account/avatar/00/18/8f/d7/fb60129d.jpg","nickname":"蒋德钧","note":"","ucode":"833985C2C37C0A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":504584,"discussion_content":"非常棒的一个思考过程！\n\n而且做了很好的总结和对比，非常有利于知识点掌握，加油！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1598708633,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":3013347,"avatar":"","nickname":"Geek_a1a315","note":"","ucode":"770CC53F4A40F6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":573537,"discussion_content":"ok","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1653479786,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":239539,"user_name":"末日，成欢","can_delete":false,"product_type":"c1","uid":1812201,"ip_address":"","ucode":"BBAEBB9C93558A","user_header":"https://wx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLm8skz4F7FGGBTXWUMia6qVEc00BddeXapicv5FkAx62GmOnUNEcE4scSR60AmappQoNdIQhccKsBA/132","comment_is_top":false,"comment_ctime":1596580314,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"134740566490","product_id":100056701,"comment_content":"什么都不知道，进步空间还很大","like_count":32},{"had_liked":false,"id":241734,"user_name":"Geek_c37e49","can_delete":false,"product_type":"c1","uid":1844885,"ip_address":"","ucode":"BCE0AD860241C7","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eo6waC1mF0VmQibDjnJLEgFnmEUSNJozibaUeYZkpQaqicVcXxGZ3kKtnY5XF0iblxT4oiam7ucuJ1bqgg/132","comment_is_top":false,"comment_ctime":1597404644,"is_pvip":false,"replies":[{"id":"89300","content":"动态链接库是和语言相关的，例如C++语言实现的库由C++编写的程序调用。<br><br>如果用动态链接库实现键值数据库，应用程序可以先实例化动态链接库提供的类，然后调用实例的接口进行数据存取。我还是以SimpleKV举个例子，使用动态链接库方式时，使用方式类似如下：实例化一个db，然后可以进行读写操作。<br>simplekv::DB *db<br>db.get(key, &amp;value)<br>db.put(key, value)<br><br>如果是用动态链接库实现的内存数据库，使用数据库的应用程序需要和库在一个主机上。如果不在同一主机上，就需要通过网络框架访问了，例如建立socket访问。","user_name":"作者回复","comment_id":241734,"uid":"1609687","ip_address":"","utype":1,"ctime":1597544594,"user_name_real":"蒋德钧"}],"discussion_count":5,"race_medal":0,"score":"130446423524","product_id":100056701,"comment_content":"我是小白一个<br>键值数据库的访问方式<br>1、动态链接库方式----这个不是很能理解<br>这种动态链接库是兼容多语言的还是说每种语言都需要自己去实现<br>动态链接库本身是怎么实现访问的，基于内存的数据库，可能不在程序本身的这个主机上<br>这个时候是通过socket或者http协议去访问的吗？","like_count":30,"discussions":[{"author":{"id":1609687,"avatar":"https://static001.geekbang.org/account/avatar/00/18/8f/d7/fb60129d.jpg","nickname":"蒋德钧","note":"","ucode":"833985C2C37C0A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":503830,"discussion_content":"动态链接库是和语言相关的，例如C++语言实现的库由C++编写的程序调用。\n\n如果用动态链接库实现键值数据库，应用程序可以先实例化动态链接库提供的类，然后调用实例的接口进行数据存取。我还是以SimpleKV举个例子，使用动态链接库方式时，使用方式类似如下：实例化一个db，然后可以进行读写操作。\nsimplekv::DB *db\ndb.get(key, &amp;amp;value)\ndb.put(key, value)\n\n如果是用动态链接库实现的内存数据库，使用数据库的应用程序需要和库在一个主机上。如果不在同一主机上，就需要通过网络框架访问了，例如建立socket访问。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1597544594,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2142390,"avatar":"","nickname":"Geek_603d4c","note":"","ucode":"237250CFF08070","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":335808,"discussion_content":"我理解就相当于java打个jar包让你用，只不过这个jar包实现了一个数据库的功能","likes_number":4,"is_delete":false,"is_hidden":false,"ctime":1608339721,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1749015,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/b0/17/451cb87c.jpg","nickname":"加油！","note":"","ucode":"947E97762DB6EF","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":397101,"discussion_content":"动态库就类似 java链接mysql时需要有一个驱动吧","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1632562424,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2739957,"avatar":"","nickname":"Geek_39299b","note":"","ucode":"908C2FC4DECD33","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":389612,"discussion_content":"哦哦 换汤不换药了，这么讲的话 那么动态库 不就是一个 client吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1629356162,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1227840,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bc/40/2279cfb5.jpg","nickname":"大力水手Jerry","note":"","ucode":"E4A6C71E275DB5","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":374531,"discussion_content":"老师，动态库也可以实现远程调用吧？比如很多rpc框架的sdk，也是以动态库集成在客户端应用中，但底层仍然是远程调用。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1621236587,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":239168,"user_name":"一步","can_delete":false,"product_type":"c1","uid":1005391,"ip_address":"","ucode":"73CEA468CE70C3","user_header":"https://static001.geekbang.org/account/avatar/00/0f/57/4f/6fb51ff1.jpg","comment_is_top":false,"comment_ctime":1596451117,"is_pvip":true,"replies":[{"id":"88386","content":"是的，这等于你使用键值数据库的应用程序和数据库本身是一个进程了，运行时也在同一个server上。","user_name":"作者回复","comment_id":239168,"uid":"1609687","ip_address":"","utype":1,"ctime":1596501358,"user_name_real":"蒋德钧"}],"discussion_count":8,"race_medal":1,"score":"87495797037","product_id":100056701,"comment_content":"使用动态链接库访问键值数据库的时候，是不是数据库的服务端也要和应用在同一个server中？数据库是服务的一部分","like_count":20,"discussions":[{"author":{"id":1055515,"avatar":"https://static001.geekbang.org/account/avatar/00/10/1b/1b/e31ba848.jpg","nickname":"caixinjiang","note":"","ucode":"023010C316A0BE","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":296220,"discussion_content":"嵌入式. 例如 RocksDB 为嵌入式 kv 存储引擎.","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1596470405,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1609687,"avatar":"https://static001.geekbang.org/account/avatar/00/18/8f/d7/fb60129d.jpg","nickname":"蒋德钧","note":"","ucode":"833985C2C37C0A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":503007,"discussion_content":"是的，这等于你使用键值数据库的应用程序和数据库本身是一个进程了，运行时也在同一个server上。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1596501358,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1261360,"avatar":"https://static001.geekbang.org/account/avatar/00/13/3f/30/23f6b413.jpg","nickname":"五十九秒","note":"","ucode":"1F34F62193CFF6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":351674,"discussion_content":"一步同学好，在几个专栏都见到你的身影，握个爪。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1614391619,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1005391,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/57/4f/6fb51ff1.jpg","nickname":"一步","note":"","ucode":"73CEA468CE70C3","race_medal":1,"user_type":1,"is_pvip":true},"reply_author":{"id":1261360,"avatar":"https://static001.geekbang.org/account/avatar/00/13/3f/30/23f6b413.jpg","nickname":"五十九秒","note":"","ucode":"1F34F62193CFF6","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":351727,"discussion_content":"你好，你好🤝","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1614416005,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":351674,"ip_address":""},"score":351727,"extra":""}]},{"author":{"id":1195449,"avatar":"https://static001.geekbang.org/account/avatar/00/12/3d/b9/8d1edb4c.jpg","nickname":"Ly","note":"","ucode":"46E2D28680C817","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":541290,"discussion_content":"类似嵌入式数据库sqlite","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1640319535,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2105391,"avatar":"https://static001.geekbang.org/account/avatar/00/20/20/2f/d15a95c4.jpg","nickname":"killsvow.","note":"","ucode":"29C71709411A7E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":296192,"discussion_content":"同问 使用动态链接库方式是否是做成了一个本地化的服务","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1596466927,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1351568,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83erPjrJ8ziawrXyCA202LLDWR8eBsrvSwM921VQgLXyR4nnuAXcBkhMP3thq016KFAcqZ6CUZ78Kb4w/132","nickname":"jztong","note":"","ucode":"D32323FF00AF81","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":296131,"discussion_content":"我也想问，动态链接库什么原理？感觉像是单机啊，只能给同个机器上的服务共用吧","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1596459375,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1336634,"avatar":"https://static001.geekbang.org/account/avatar/00/14/65/3a/bc801fb2.jpg","nickname":"mqray","note":"","ucode":"15664507AD7033","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1351568,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83erPjrJ8ziawrXyCA202LLDWR8eBsrvSwM921VQgLXyR4nnuAXcBkhMP3thq016KFAcqZ6CUZ78Kb4w/132","nickname":"jztong","note":"","ucode":"D32323FF00AF81","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":299139,"discussion_content":"同问","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1597573819,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":296131,"ip_address":""},"score":299139,"extra":""}]}]},{"had_liked":false,"id":239155,"user_name":"不能扮演天使","can_delete":false,"product_type":"c1","uid":1046172,"ip_address":"","ucode":"9922330BFF7FFB","user_header":"https://static001.geekbang.org/account/avatar/00/0f/f6/9c/b457a937.jpg","comment_is_top":false,"comment_ctime":1596448218,"is_pvip":false,"replies":[{"id":"88465","content":"没错，和Redis相比，SimpleKV是个单机系统，扩展性就谈不上了，而且它也是个纯粹的内存数据库，高可靠也谈不上了。","user_name":"作者回复","comment_id":239155,"uid":"1609687","ip_address":"","utype":1,"ctime":1596545340,"user_name_real":"蒋德钧"}],"discussion_count":2,"race_medal":0,"score":"66020957658","product_id":100056701,"comment_content":"依据高性能，高可用和可扩展的架构模式，SimpleKV还是主要缺乏高可用和可扩展的设计吧，单机高性能可以通过IO线程模型，数据结构内存模型等实现，其他两种没有😐","like_count":15,"discussions":[{"author":{"id":1609687,"avatar":"https://static001.geekbang.org/account/avatar/00/18/8f/d7/fb60129d.jpg","nickname":"蒋德钧","note":"","ucode":"833985C2C37C0A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":503001,"discussion_content":"没错，和Redis相比，SimpleKV是个单机系统，扩展性就谈不上了，而且它也是个纯粹的内存数据库，高可靠也谈不上了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1596545340,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1046386,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/f7/72/e7bc6ff1.jpg","nickname":"零点999","note":"","ucode":"3D0A0504AFB6EA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":296241,"discussion_content":"赞，补充一点，SimpleKV还缺少丰富的数据结构","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1596493228,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":239743,"user_name":"张洋","can_delete":false,"product_type":"c1","uid":1182914,"ip_address":"","ucode":"549BE5DEEF8417","user_header":"https://static001.geekbang.org/account/avatar/00/12/0c/c2/bad34a50.jpg","comment_is_top":false,"comment_ctime":1596630839,"is_pvip":true,"replies":[{"id":"88721","content":"网络框架理解的没错，此时，redis客户端和redis服务器端通常不在同一个物理机器上，需要过网络。如果是TCP&#47;IP网络，就通过socket进行连接再访问。<br><br>动态库和SDK还不太一样，SDK通常封装了访问后端系统的操作，以API形式提供给程序使用。如果访问的后端系统和应用程序不在同一台服务器上，那么SDK中还是会和后端系统建立网络连接，以网络方式访问。而动态库实现的键值数据库相当于是在库里建立数据库的存储结构，一个应用程序调用这个库时就可以直接在本地存取数据了。","user_name":"作者回复","comment_id":239743,"uid":"1609687","ip_address":"","utype":1,"ctime":1596843929,"user_name_real":"蒋德钧"}],"discussion_count":5,"race_medal":0,"score":"48841271095","product_id":100056701,"comment_content":"缺少的功能组件的话就是1.单点问题，2.扩展问题。<br>有一个问题作为小白不是很懂，就是动态库 和 网络框架进行访问的区别。<br>网络框架:可以理解为需要通过Socket连接进行操作访问，比如redis 和 kafka （需要客户端进行TCP连接访问操作） 不知道这样的理解对吗？<br>动态库 不太明白是什么呢，如果是相当于我们平常说的SDK集成调用方法，在本地直接调用SDK即可。那么当这个 数据库不在本地部署的时候，还是需要远程通信进行操作呀。。","like_count":11,"discussions":[{"author":{"id":1609687,"avatar":"https://static001.geekbang.org/account/avatar/00/18/8f/d7/fb60129d.jpg","nickname":"蒋德钧","note":"","ucode":"833985C2C37C0A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":503199,"discussion_content":"网络框架理解的没错，此时，redis客户端和redis服务器端通常不在同一个物理机器上，需要过网络。如果是TCP/IP网络，就通过socket进行连接再访问。\n\n动态库和SDK还不太一样，SDK通常封装了访问后端系统的操作，以API形式提供给程序使用。如果访问的后端系统和应用程序不在同一台服务器上，那么SDK中还是会和后端系统建立网络连接，以网络方式访问。而动态库实现的键值数据库相当于是在库里建立数据库的存储结构，一个应用程序调用这个库时就可以直接在本地存取数据了。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1596843929,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2223167,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/mQddXC7nRiaKHTwdficicTB3bH0q5ic5UoSab51Omic7eyLBz0SNcvbLpQnNib7zP1yJFm7xxx4ia81iahfibRVnbTwHmhw/132","nickname":"浮石沉木","note":"","ucode":"D585768321B84A","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":314160,"discussion_content":"我觉得老师说的不太对。我刚好遇到类似的场景，其他公司开发了一个多维数据库，给我们提供了so文件，我们通过Python调用这个so文件的方法，实现数据的写入。只不过数据库是在另外的服务器，这个so文件内部肯定基于socket做了与远端数据库的连接操作。\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1603120739,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1792714,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/5a/ca/4d5d23d1.jpg","nickname":"Im me","note":"","ucode":"FF7DEED4BB4C37","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2223167,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/mQddXC7nRiaKHTwdficicTB3bH0q5ic5UoSab51Omic7eyLBz0SNcvbLpQnNib7zP1yJFm7xxx4ia81iahfibRVnbTwHmhw/132","nickname":"浮石沉木","note":"","ucode":"D585768321B84A","race_medal":0,"user_type":1,"is_pvip":true},"discussion":{"id":555474,"discussion_content":"您好，我还算是个小白，想向您请教个问题：跨语言调用的方式是把被调用方的代码编译成动态库，然后调用方（另一种语言）就可以直接调用了吗？如果是的话是什么原理，为什么跨语言不能调用而编译成动态库就能调用了呢","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1646921345,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":314160,"ip_address":""},"score":555474,"extra":""}]},{"author":{"id":1937062,"avatar":"https://static001.geekbang.org/account/avatar/00/1d/8e/a6/c3286b61.jpg","nickname":"Java垒墙工程师","note":"","ucode":"E76AE44A9C76AE","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":302568,"discussion_content":"就是RPC","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1598961654,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1065863,"avatar":"https://static001.geekbang.org/account/avatar/00/10/43/87/24eb68cf.jpg","nickname":"dermanyuan","note":"","ucode":"3227437F62C5B8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":299110,"discussion_content":"动态库在本地存取数据了，怎么实现不同应用间的数据同步呢","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1597566556,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":241672,"user_name":"ming","can_delete":false,"product_type":"c1","uid":1213232,"ip_address":"","ucode":"47E6823177B75E","user_header":"https://static001.geekbang.org/account/avatar/00/12/83/30/d5ae5333.jpg","comment_is_top":false,"comment_ctime":1597387864,"is_pvip":false,"replies":[{"id":"89292","content":"SimpleKV暂时还没有公开的源码，不过我们正在做一个SimpleKV的升级版框架，定义好了接口，可以自行替换其中的索引结构、存储管理、内存管理等模块，到时会开源出来。","user_name":"作者回复","comment_id":241672,"uid":"1609687","ip_address":"","utype":1,"ctime":1597507250,"user_name_real":"蒋德钧"}],"discussion_count":4,"race_medal":0,"score":"44547060824","product_id":100056701,"comment_content":"文中的SimpleKV有没有源码，个人感觉运行起来，操作下更促进理解每个模块","like_count":10,"discussions":[{"author":{"id":1609687,"avatar":"https://static001.geekbang.org/account/avatar/00/18/8f/d7/fb60129d.jpg","nickname":"蒋德钧","note":"","ucode":"833985C2C37C0A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":503809,"discussion_content":"SimpleKV暂时还没有公开的源码，不过我们正在做一个SimpleKV的升级版框架，定义好了接口，可以自行替换其中的索引结构、存储管理、内存管理等模块，到时会开源出来。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1597507250,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":1,"child_discussions":[{"author":{"id":2961300,"avatar":"","nickname":"Geek4399","note":"","ucode":"A4185CA5DE47C6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1609687,"avatar":"https://static001.geekbang.org/account/avatar/00/18/8f/d7/fb60129d.jpg","nickname":"蒋德钧","note":"","ucode":"833985C2C37C0A","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":579039,"discussion_content":"现在进展如何了啊？","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1657157475,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":503809,"ip_address":""},"score":579039,"extra":""}]},{"author":{"id":1623409,"avatar":"https://static001.geekbang.org/account/avatar/00/18/c5/71/f7c43b49.jpg","nickname":"风向北吹","note":"","ucode":"2FD0BC5159E1C1","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":304600,"discussion_content":"是java版的吗？","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1599623356,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1877862,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLu3MgZBAyyiavX2CMF2KRib791j3bBGiaQDzuQwBF2k6AKHANV2uTAAss2vVaeC7xcSYYD8vjmibRpTQ/132","nickname":"纵不朽","note":"","ucode":"DB2CA2C46B2EF1","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1623409,"avatar":"https://static001.geekbang.org/account/avatar/00/18/c5/71/f7c43b49.jpg","nickname":"风向北吹","note":"","ucode":"2FD0BC5159E1C1","race_medal":0,"user_type":1,"is_pvip":true},"discussion":{"id":572770,"discussion_content":"同问","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1652949999,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":304600,"ip_address":""},"score":572770,"extra":""}]}]},{"had_liked":false,"id":261560,"user_name":"Geek_6a58c7","can_delete":false,"product_type":"c1","uid":1815374,"ip_address":"","ucode":"37900229ED9B3C","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTK4ibibOsboHycltqqicSIkm9eibSBu86BRNc0LQnTRTMEPGDvJXYpBicWOW4srMt7c9iaUT7b5mTmicgkjw/132","comment_is_top":false,"comment_ctime":1605419921,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"35965158289","product_id":100056701,"comment_content":"老师好！Redis中有16个数据库，但一直不知道这个功能设计目的是什么，使用场景是什么，据网上资料介绍集群下只有db0库可以用，所以就更懵逼了，望老师帮忙解惑","like_count":8,"discussions":[{"author":{"id":2911084,"avatar":"https://static001.geekbang.org/account/avatar/00/2c/6b/6c/3e80afaf.jpg","nickname":"HappyHasson","note":"","ucode":"B84CC43E349CFA","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":552278,"discussion_content":"个人理解，就是便于业务方数据管理。比如测试数据放到一个指定数据库，和其他正常业务数据分开使用，互不影响，也可以做统一的删除处理","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1645370732,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":239267,"user_name":"Spring4J","can_delete":false,"product_type":"c1","uid":1645430,"ip_address":"","ucode":"06F056085A2564","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKiauonyMORA2s43W7mogGDH4WYjW0gBJtYmUa9icTB6aMPGqibicEKlLoQmLKLWEctwHzthbTZkKR20w/132","comment_is_top":false,"comment_ctime":1596470898,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"35956209266","product_id":100056701,"comment_content":"我觉得缺了一块比较重要的基础设施：序列化和反序列化，这是各种网络中间件必不可少的一点","like_count":8,"discussions":[{"author":{"id":1066508,"avatar":"https://static001.geekbang.org/account/avatar/00/10/46/0c/773ba2f3.jpg","nickname":"下个目标45k","note":"","ucode":"193BA8C3AA9A61","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":337971,"discussion_content":"那也是封装到socket server这个模块里面了","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1609139471,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":267756,"user_name":"null","can_delete":false,"product_type":"c1","uid":1024294,"ip_address":"","ucode":"F9039EFED6B55D","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/PiajxSqBRaELZPnUAiajaR5C25EDLWeJURggyiaOP5GGPe2qlwpQcm5e3ybib8OsP4tvddFDLVRSNNGL5I3SFPJHsA/132","comment_is_top":false,"comment_ctime":1607913183,"is_pvip":false,"replies":[{"id":"97738","content":"我们平时说的Redis集群主要是指两种：<br>1）主从复制集群（含哨兵集群），这是用来做读写分离或是可靠性保证的；<br>2）切片集群，Redis Cluster是一种切片集群的方案，也是Redis官方的方案。Codis则是另一种切片集群方案。<br><br>Redis Cluster部署时会同时包含数据分片（为了分担压力）和主从复制（为了可靠性保证），就是同时包含了最后一张图中的高可靠和高可扩展。<br><br>多机部署时，如果实例相互之间没有关联，一般只是称为多实例部署。","user_name":"作者回复","comment_id":267756,"uid":"1609687","ip_address":"","utype":1,"ctime":1608685152,"user_name_real":"蒋德钧"}],"discussion_count":2,"race_medal":0,"score":"31672684255","product_id":100056701,"comment_content":"老师，您好<br>我们平时说的 redis 集群（指 n 台部署 redis 的机器，其中部署的方案可以是主从复制、哨兵或 redis cluster，是这样么？），不是指 redis cluster 多机部署的方案吧？redis cluster 是不是等于最后一张图的：主从复制+数据分片，同时提供高可用和高可扩展的方案。<br><br>是这样理解么？谢谢老师","like_count":8,"discussions":[{"author":{"id":1609687,"avatar":"https://static001.geekbang.org/account/avatar/00/18/8f/d7/fb60129d.jpg","nickname":"蒋德钧","note":"","ucode":"833985C2C37C0A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":511730,"discussion_content":"我们平时说的Redis集群主要是指两种：\n1）主从复制集群（含哨兵集群），这是用来做读写分离或是可靠性保证的；\n2）切片集群，Redis Cluster是一种切片集群的方案，也是Redis官方的方案。Codis则是另一种切片集群方案。\n\nRedis Cluster部署时会同时包含数据分片（为了分担压力）和主从复制（为了可靠性保证），就是同时包含了最后一张图中的高可靠和高可扩展。\n\n多机部署时，如果实例相互之间没有关联，一般只是称为多实例部署。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1608685152,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2041396,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/26/34/891dd45b.jpg","nickname":"宙斯","note":"","ucode":"80DF36BAD298AD","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":388083,"discussion_content":"redis cluster 仅仅是数据分片，相当于数据库的分库分表","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1628584283,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":242411,"user_name":"Decadent゜","can_delete":false,"product_type":"c1","uid":1324099,"ip_address":"","ucode":"46CECD6635754E","user_header":"https://static001.geekbang.org/account/avatar/00/14/34/43/941d62a0.jpg","comment_is_top":false,"comment_ctime":1597716532,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"27367520308","product_id":100056701,"comment_content":"实现了一个简单的类似Redis的kv数据库，支持多种数据结构，支持RESP2协议，支持数据持久化github: https:&#47;&#47;github.com&#47;solar-systems&#47;Jodis ","like_count":6,"discussions":[{"author":{"id":2739957,"avatar":"","nickname":"Geek_39299b","note":"","ucode":"908C2FC4DECD33","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":389614,"discussion_content":"看看","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1629356803,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":239233,"user_name":"longslee","can_delete":false,"product_type":"c1","uid":1465986,"ip_address":"","ucode":"C24E32E5B1B6F5","user_header":"https://static001.geekbang.org/account/avatar/00/16/5e/82/438c8534.jpg","comment_is_top":false,"comment_ctime":1596463520,"is_pvip":false,"replies":[{"id":"88571","content":"论网站的重要性：）","user_name":"作者回复","comment_id":239233,"uid":"1609687","ip_address":"","utype":1,"ctime":1596674834,"user_name_real":"蒋德钧"}],"discussion_count":1,"race_medal":0,"score":"27366267296","product_id":100056701,"comment_content":"还缺一个网站。","like_count":6,"discussions":[{"author":{"id":1609687,"avatar":"https://static001.geekbang.org/account/avatar/00/18/8f/d7/fb60129d.jpg","nickname":"蒋德钧","note":"","ucode":"833985C2C37C0A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":503028,"discussion_content":"论网站的重要性：）","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1596674834,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":241709,"user_name":"学个球","can_delete":false,"product_type":"c1","uid":1019725,"ip_address":"","ucode":"7343F3C0CA981D","user_header":"https://static001.geekbang.org/account/avatar/00/0f/8f/4d/65fb45e6.jpg","comment_is_top":false,"comment_ctime":1597396623,"is_pvip":false,"replies":[{"id":"89219","content":"我们这里提到的动态库访问，其实就不再区分客户端和服务端了，键值数据库就是在动态库里实现的，应用程序实例化动态库提供的类，然后调用实例接口就可以存取数据了。<br><br>MySQL之所以能提供远程访问，也是因为它具有网络框架，所以对一个系统来说，实现了网络框架，就可以提供远程访问功能。希望解答了你的疑惑。","user_name":"作者回复","comment_id":241709,"uid":"1609687","ip_address":"","utype":1,"ctime":1597410992,"user_name_real":"蒋德钧"}],"discussion_count":3,"race_medal":0,"score":"23072233103","product_id":100056701,"comment_content":"对于访问模式的动态库方式还是没有很了解。<br>说一下我个人的理解：采用动态库的访问方式，相当于把客户端和服务端绑定在一起，客户端进行操作的时候直接在本地库里面进行存取操作，就没有涉及到网络通信的过程。<br><br>联系到 MySQL ，应该是采用动态库的访问方式。那么MySQL 提供的远程访问功能和这里的网络框架进行访问有什么区别？","like_count":5,"discussions":[{"author":{"id":1609687,"avatar":"https://static001.geekbang.org/account/avatar/00/18/8f/d7/fb60129d.jpg","nickname":"蒋德钧","note":"","ucode":"833985C2C37C0A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":503822,"discussion_content":"我们这里提到的动态库访问，其实就不再区分客户端和服务端了，键值数据库就是在动态库里实现的，应用程序实例化动态库提供的类，然后调用实例接口就可以存取数据了。\n\nMySQL之所以能提供远程访问，也是因为它具有网络框架，所以对一个系统来说，实现了网络框架，就可以提供远程访问功能。希望解答了你的疑惑。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1597410992,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1192724,"avatar":"https://static001.geekbang.org/account/avatar/00/12/33/14/78104f1f.jpg","nickname":"Just Do IT","note":"","ucode":"1EAD92510FA7BE","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":350786,"discussion_content":"其实就是个本地访问和远程访问的区别","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1614005471,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1019725,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/8f/4d/65fb45e6.jpg","nickname":"学个球","note":"","ucode":"7343F3C0CA981D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":299079,"discussion_content":"谢谢蒋老师的回答，我理解了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1597557385,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":239336,"user_name":"幽林萌逐","can_delete":false,"product_type":"c1","uid":1520451,"ip_address":"","ucode":"E6D95EC891800F","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLqrAA1j4Oyy6ibicNOicn8K0olrEjtLLanic8V0y9icia6cvCVRCiabOm5llC0WhzcSWvaI2fia75hYbvjrQ/132","comment_is_top":false,"comment_ctime":1596505465,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"18776374649","product_id":100056701,"comment_content":"缺少了集群模式，以及对象存储，redis里是把对象序列化成json实现的，还缺少了key的生命周期服务，老师后面会讲redis的key生命周期是怎么实现的吗？很好奇","like_count":4},{"had_liked":false,"id":283618,"user_name":"escray","can_delete":false,"product_type":"c1","uid":1020525,"ip_address":"","ucode":"1F4204930E47C4","user_header":"https://static001.geekbang.org/account/avatar/00/0f/92/6d/becd841a.jpg","comment_is_top":false,"comment_ctime":1615858392,"is_pvip":true,"discussion_count":1,"race_medal":2,"score":"14500760280","product_id":100056701,"comment_content":"在看专栏文章之前，问自己一个键值数据库包含什么？能想到的首先是哈希表，这个大概算是数据结构，可能还包括其所能够支持的数据类型。按照昨天的图，可能还得有缓存策略、网络接口、持久化方法（为了让数据不丢失）等等。<br><br>Redis 支持的 value 类型包括 String、哈希表、列表、集合<br>（Memcached 支持的 value 类型仅有 String）<br><br>键值数据库的基本操作 PUT&#47;GET&#47;DELETE&#47;SCAN，对应关系型数据库的增、删、查，好像没有修改操作。<br><br>基本的键值数据库包括访问框架框架、索引模块、操作模块和存储模块四部分。（似乎其他的系统也可以按照这四个方向去分析）<br><br>有一点好奇，专栏没怎么介绍 Redis 的历史或者是起源，Redis 为什么会出现，最初的应用场景是什么？（维基上有一些）<br><br>不知道是不是还有人和我一样已经忘记 Redis 的全名是：Remote Dictionary Server。","like_count":3,"discussions":[{"author":{"id":2739957,"avatar":"","nickname":"Geek_39299b","note":"","ucode":"908C2FC4DECD33","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":389613,"discussion_content":"赞！我也想知道redis的起源，可能是因为 欧美的业务发展？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1629356736,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":240068,"user_name":"Evan","can_delete":false,"product_type":"c1","uid":1344281,"ip_address":"","ucode":"B877ABD0CF4661","user_header":"https://static001.geekbang.org/account/avatar/00/14/83/19/0a3fe8c1.jpg","comment_is_top":false,"comment_ctime":1596733854,"is_pvip":false,"replies":[{"id":"88649","content":"对比的不错！","user_name":"作者回复","user_name_real":"蒋德钧","uid":"1609687","ctime":1596766981,"ip_address":"","comment_id":240068,"utype":1}],"discussion_count":1,"race_medal":1,"score":"14481635742","product_id":100056701,"comment_content":"SimpleKV和Redis的对比：<br>【数据类型】：只有单一数据类型，不方便<br>【高可用】：没有高可性技术，类型主从同步等高用设计 <br>【扩展性】：无分片功能，当然也可以客端写分片逻辑<br>【事务性】：Simple KV 无事项，当然Redis ACID事务很差，但是有啊<br>【功能性】：可扩展功能较少","like_count":3,"discussions":[{"author":{"id":1609687,"avatar":"https://static001.geekbang.org/account/avatar/00/18/8f/d7/fb60129d.jpg","nickname":"蒋德钧","note":"","ucode":"833985C2C37C0A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":503325,"discussion_content":"对比的不错！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1596766981,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":239316,"user_name":"olivia-byte","can_delete":false,"product_type":"c1","uid":1273891,"ip_address":"","ucode":"D54B3833995923","user_header":"https://static001.geekbang.org/account/avatar/00/13/70/23/92d188aa.jpg","comment_is_top":false,"comment_ctime":1596503028,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"14481404916","product_id":100056701,"comment_content":"单机版simplekv还缺少key过期删除策略","like_count":3},{"had_liked":false,"id":239263,"user_name":"wd","can_delete":false,"product_type":"c1","uid":1178066,"ip_address":"","ucode":"1CE7A9F8237B8A","user_header":"https://static001.geekbang.org/account/avatar/00/11/f9/d2/dc2ac260.jpg","comment_is_top":false,"comment_ctime":1596469693,"is_pvip":false,"replies":[{"id":"88623","content":"没错，当前SimpleKV是一个动态链接库。","user_name":"作者回复","user_name_real":"蒋德钧","uid":"1609687","ctime":1596727482,"ip_address":"","comment_id":239263,"utype":1}],"discussion_count":1,"race_medal":0,"score":"14481371581","product_id":100056701,"comment_content":"还缺一个懂得网络访问协议的多语言客户端驱动","like_count":3,"discussions":[{"author":{"id":1609687,"avatar":"https://static001.geekbang.org/account/avatar/00/18/8f/d7/fb60129d.jpg","nickname":"蒋德钧","note":"","ucode":"833985C2C37C0A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":503039,"discussion_content":"没错，当前SimpleKV是一个动态链接库。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1596727482,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":342400,"user_name":"无尽蔚蓝","can_delete":false,"product_type":"c1","uid":2721761,"ip_address":"","ucode":"A665DF46833A81","user_header":"https://static001.geekbang.org/account/avatar/00/29/87/e1/b85dce85.jpg","comment_is_top":false,"comment_ctime":1650248936,"is_pvip":true,"discussion_count":0,"race_medal":5,"score":"10240183528","product_id":100056701,"comment_content":"把该讲内容总结为几个问题, 大家复习的时候可以先尝试回答这些问题检查自己的掌握程度:<br>01 | 基本架构：一个键值数据库包含什么？<br><br>## 1.1 可以存哪些数据？<br><br>## 1.2 可以对数据做什么操作？<br><br>## 1.3 键值对保存在内存还是外存<br><br>## 1.4 基本组件有哪些？<br><br>## 1.5 采用什么访问模式？<br><br>## 1.6 如何定位键值对的位置？<br><br>## 1.7 不同操作的具体逻辑是怎样的？<br><br>## 1.8 如何实现重启后快速提供服务？<br><br>## 1.9 SimpleKV 到 Redis 有哪些变化？<br><br>## 1.10 每课一问给你留个小问题：和你了解的 Redis 相比，你觉得，SimpleKV 里面还缺少什么功能组件或模块吗？","like_count":2},{"had_liked":false,"id":338739,"user_name":"浩浩","can_delete":false,"product_type":"c1","uid":1580841,"ip_address":"","ucode":"47558B9C9B7368","user_header":"https://static001.geekbang.org/account/avatar/00/18/1f/29/c7a69190.jpg","comment_is_top":false,"comment_ctime":1647697170,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"10237631762","product_id":100056701,"comment_content":"程序出现的原因、发展过程、相应需要解决的问题：<br>1.【能用】减少重复性工作的需求：迭代与递归 ==&gt;  最小子问题&amp;工作需求分析<br>2.【好用】高效的需求：空间与时间  ==&gt;  合适数据储存结构&amp;时序和资源空间的竞态问题<br>3.【易用】可拓展&#47;可维护需求：工程方法  ==&gt;  层次化结构&amp;设计模式<br><br>当我们对能用、好用、易用定下较严格的标准便有：<br>1. 能用-&gt;【高可靠】<br>2. 好用-&gt;【高性能】<br>3. 易用-&gt;【高拓展】<br>我们通过各种技术在追求‘三高’满足需求的过程中同时也引入了新的问题。<br>‘一个键值数据库包含什么？’属于 ‘能用’ 中的 ‘工作需求分析’<br><br>其他：<br>计算机通过重复&#47;枚举【迭代&#47;递归】解决简单问题。<br>计算机通过自举【层次化&#47;中间层】解耦复杂问题。","like_count":2},{"had_liked":false,"id":294035,"user_name":"春风百里","can_delete":false,"product_type":"c1","uid":1739292,"ip_address":"","ucode":"A42347996D2B85","user_header":"https://static001.geekbang.org/account/avatar/00/1a/8a/1c/f8ea6063.jpg","comment_is_top":false,"comment_ctime":1621695304,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"10211629896","product_id":100056701,"comment_content":"老师提到了一个非常棒的学习方法，那就是尝试自己去设计一个这样的系统，这样你就会遇到和当初这个系统的开发者一模一样的问题，这个时候会促进自己思考怎么去解决，再看看redis的开发者是怎么解决的，还非常有助于形成系统观。","like_count":2},{"had_liked":false,"id":299108,"user_name":"dst","can_delete":false,"product_type":"c1","uid":1861196,"ip_address":"","ucode":"9177BBB6C8B905","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKx6EdicYYuYK745brMa9yAlkZs2YmzxRAm4BQ2kw9GbtcC8ebnQlyBfIJnGjH57ib4HVlQIpSbTrBw/132","comment_is_top":false,"comment_ctime":1624460360,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"5919427656","product_id":100056701,"comment_content":"从这里的分层中，处处感受到互联网的分层设计的重要性。<br>各个层之间互相独立，通过接口这种虚拟的概念互相联系在一起，互相访问。<br>老师提供的分层，也体现出了很多应用中最核心和最基本的分层方式。<br><br>客户端层<br>API操作层<br>辅助查找层（也就是索引）<br>最底层的存储层<br>","like_count":1},{"had_liked":false,"id":290891,"user_name":"TM","can_delete":false,"product_type":"c1","uid":1569910,"ip_address":"","ucode":"DCF88E51C5D2E8","user_header":"https://static001.geekbang.org/account/avatar/00/17/f4/76/5cc8d16e.jpg","comment_is_top":false,"comment_ctime":1619839149,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"5914806445","product_id":100056701,"comment_content":"为什么redis要使用kv数据模型？","like_count":1,"discussions":[{"author":{"id":2017421,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/c8/8d/286b4024.jpg","nickname":"澎澎","note":"","ucode":"C5BFC80157D50E","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":566176,"discussion_content":"底层是hash实现的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1650621023,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2739957,"avatar":"","nickname":"Geek_39299b","note":"","ucode":"908C2FC4DECD33","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":389615,"discussion_content":"no sql 么","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1629356822,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":277095,"user_name":"楼高","can_delete":false,"product_type":"c1","uid":1430375,"ip_address":"","ucode":"743B0C14687212","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLU3Dqic1Ssf2icrm6OtqFoG9vicoypKkk2lmKufo2BFZsFwPGt6NX1Sf1LLw448ayygykg3CMaqXEDw/132","comment_is_top":false,"comment_ctime":1612258193,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"5907225489","product_id":100056701,"comment_content":"SimpleKV设计：<br>1. 应用层面(用户需求)：<br>    a. 数据类型：String、Set、Sorted Set、List、Hash<br>    b. 操作类型：PUT、GET、DELETE、SCAN、EXIST等<br>2. 系统层面(系统实现)：<br>\ta. 访问模式：动态链接、网络请求<br>\tb. 定位位置：定位key所在位置，哈希、B+树、字典数等<br>\tc. 操作逻辑：实现不同操作类型命令<br>\td. 重启恢复：宕机重启如何恢复数据，写文件<br>高级功能：高可用、可扩展、高性能、可运维","like_count":1},{"had_liked":false,"id":251406,"user_name":"Just Do IT","can_delete":false,"product_type":"c1","uid":1192724,"ip_address":"","ucode":"1EAD92510FA7BE","user_header":"https://static001.geekbang.org/account/avatar/00/12/33/14/78104f1f.jpg","comment_is_top":false,"comment_ctime":1601530590,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"5896497886","product_id":100056701,"comment_content":"老师，这么理解对吗？<br><br>动态库访问的方式，使用它可以减少io，提升性能，但是它跟语言高度耦合，不通用。","like_count":1,"discussions":[{"author":{"id":2739957,"avatar":"","nickname":"Geek_39299b","note":"","ucode":"908C2FC4DECD33","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":389617,"discussion_content":"减少网络io 或者 磁盘io ？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1629357015,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1896933,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJZBe7lmwPf33yS7btnXuwv2bvfC7zfKibcZfPUQKTlbJgZeKY0wX70LUsej8EX14rYcCZ5Gk02YTQ/132","nickname":"aworker","note":"","ucode":"DCF95BC2087D35","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":350179,"discussion_content":"可以这样理解的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1613736258,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":239196,"user_name":"FeeLsLikeU","can_delete":false,"product_type":"c1","uid":1238726,"ip_address":"","ucode":"C7F0AA9F1C1A58","user_header":"https://static001.geekbang.org/account/avatar/00/12/e6/c6/1a19ac41.jpg","comment_is_top":false,"comment_ctime":1596456203,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5891423499","product_id":100056701,"comment_content":"缺少监控 慢查询日志","like_count":1},{"had_liked":false,"id":239179,"user_name":"新世界","can_delete":false,"product_type":"c1","uid":1079495,"ip_address":"","ucode":"4473DC1505F158","user_header":"https://static001.geekbang.org/account/avatar/00/10/78/c7/083a3a0b.jpg","comment_is_top":false,"comment_ctime":1596453343,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5891420639","product_id":100056701,"comment_content":"还缺少集群，分片，负载","like_count":1},{"had_liked":false,"id":358764,"user_name":"努力努力再努力","can_delete":false,"product_type":"c1","uid":1493907,"ip_address":"广东","ucode":"0C6EEA28FCE8C7","user_header":"https://static001.geekbang.org/account/avatar/00/16/cb/93/4adea49a.jpg","comment_is_top":false,"comment_ctime":1664705658,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1664705658","product_id":100056701,"comment_content":"目前老师介绍到的功能有：<br>1. 访问模块：基于网络请求的方式访问redis <br>2.操作模块：提供丰富的接口操作各种各样的数据结构<br>3.索引模块：redis高效的数据结构提供了快速访问的支持<br>4. 存储模块：基于内存和磁盘，提供了持久化的特性，如RDB和AOF<br>5.高可用模块：提供了主从模式和哨兵机制，为高可用提供实现<br>6.高扩展模块：通过数据分片，可以不断扩展来分摊数据压力<br><br>还缺少的信息：<br>1. 内存的淘汰机制<br>2.","like_count":0},{"had_liked":false,"id":355767,"user_name":"freesocean","can_delete":false,"product_type":"c1","uid":1529210,"ip_address":"陕西","ucode":"CAD4C80CF569D3","user_header":"https://static001.geekbang.org/account/avatar/00/17/55/7a/d44df1d6.jpg","comment_is_top":false,"comment_ctime":1661739528,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1661739528","product_id":100056701,"comment_content":"从核心组件的角度讲，已经是kv数据库的一个demo， 但是和能使用，能满足生产上的使用，这才只是从零到1，而redis则走完了后边的从1到n, 比如更丰富的数据类型，集群高可用支持，安全性，内存优化，丰富的各种语言API生态等等，这些都是redis组成的一部分，所以还是很庞杂的，所以学习redis我也赞同老师的观点，需要先宏观，后微观，否则会陷入盲人摸象的误区。","like_count":0},{"had_liked":false,"id":353304,"user_name":"阿飞","can_delete":false,"product_type":"c1","uid":2039219,"ip_address":"广东","ucode":"CD3293EEC33F14","user_header":"https://static001.geekbang.org/account/avatar/00/1f/1d/b3/05729e06.jpg","comment_is_top":false,"comment_ctime":1659341287,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1659341287","product_id":100056701,"comment_content":"深入理解redis内部原理，跟着大佬学习redis","like_count":0},{"had_liked":false,"id":351550,"user_name":"going","can_delete":false,"product_type":"c1","uid":2313353,"ip_address":"","ucode":"3AA83F9B07BE8B","user_header":"https://static001.geekbang.org/account/avatar/00/23/4c/89/82a3ee04.jpg","comment_is_top":false,"comment_ctime":1657883630,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1657883630","product_id":100056701,"comment_content":"SimpleKV相比较Redis少了key淘汰机制","like_count":0},{"had_liked":false,"id":350875,"user_name":"Geek_e50fe8","can_delete":false,"product_type":"c1","uid":3048700,"ip_address":"","ucode":"F3F107A96382D3","user_header":"","comment_is_top":false,"comment_ctime":1657270229,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1657270229","product_id":100056701,"comment_content":"不错，学习了","like_count":0},{"had_liked":false,"id":349734,"user_name":"July","can_delete":false,"product_type":"c1","uid":1365924,"ip_address":"","ucode":"1D60DE3A4770FA","user_header":"https://static001.geekbang.org/account/avatar/00/14/d7/a4/e6322114.jpg","comment_is_top":false,"comment_ctime":1656294355,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1656294355","product_id":100056701,"comment_content":"数据结构：更丰富的数据类型<br>高可用：哨兵、主从同步<br>可扩展：集群化、数据分片、负载均衡<br>内存安全：过期机制、数据淘汰策略<br>内存利用率：数据压缩、<br><br>内存分配器：simpleKV仅支持glibc，而redis分配器选择更多<br><br>事务性：无法保证多个操作地原子性，如lua脚本<br><br>","like_count":0},{"had_liked":false,"id":347046,"user_name":"我只是想简单的试一下名字到底可以取多长吧","can_delete":false,"product_type":"c1","uid":2405512,"ip_address":"","ucode":"7CBA9CACC684C4","user_header":"https://static001.geekbang.org/account/avatar/00/24/b4/88/73f446d2.jpg","comment_is_top":false,"comment_ctime":1653640776,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1653640776","product_id":100056701,"comment_content":"最新版本的Redis 拥有9种数据结构  包含 bitmaps hyperloglogs  geospatial indexes, and streams","like_count":0},{"had_liked":false,"id":343085,"user_name":"澎澎","can_delete":false,"product_type":"c1","uid":2017421,"ip_address":"","ucode":"C5BFC80157D50E","user_header":"https://static001.geekbang.org/account/avatar/00/1e/c8/8d/286b4024.jpg","comment_is_top":false,"comment_ctime":1650620801,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1650620801","product_id":100056701,"comment_content":"缺少丰富的数据类型，集群化，过期机制，数据淘汰机制，数据压缩","like_count":0},{"had_liked":false,"id":342451,"user_name":"何为","can_delete":false,"product_type":"c1","uid":2935977,"ip_address":"","ucode":"76312429AF66B6","user_header":"https://static001.geekbang.org/account/avatar/00/2c/cc/a9/b179f891.jpg","comment_is_top":false,"comment_ctime":1650272466,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1650272466","product_id":100056701,"comment_content":"2022年4月希望能通过这个课程学习到学习方法，而不仅仅是知识。","like_count":0},{"had_liked":false,"id":341159,"user_name":"李伟","can_delete":false,"product_type":"c1","uid":1239462,"ip_address":"","ucode":"F0EF60EB250B20","user_header":"https://static001.geekbang.org/account/avatar/00/12/e9/a6/69907ec1.jpg","comment_is_top":false,"comment_ctime":1649395662,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1649395662","product_id":100056701,"comment_content":"还有redis对消息队列的支持","like_count":0},{"had_liked":false,"id":341072,"user_name":"动物不困","can_delete":false,"product_type":"c1","uid":1272259,"ip_address":"","ucode":"E0E4A31757936A","user_header":"https://static001.geekbang.org/account/avatar/00/13/69/c3/9bf5016f.jpg","comment_is_top":false,"comment_ctime":1649330027,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1649330027","product_id":100056701,"comment_content":"SimpleKV<br><br>首先要考虑数据模型，确定数据模型。<br><br>然后开始设计：<br>1. 访问方式<br>2. 操作接口<br>3. 索引（高性能）<br>4. 存储<br><br>老师的学习思路很棒！<br><br>学完再来评论。","like_count":0},{"had_liked":false,"id":340420,"user_name":"keep_it_real","can_delete":false,"product_type":"c1","uid":2055554,"ip_address":"","ucode":"F5057CAF752FF3","user_header":"https://static001.geekbang.org/account/avatar/00/1f/5d/82/81b2ba91.jpg","comment_is_top":false,"comment_ctime":1648806979,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1648806979","product_id":100056701,"comment_content":"一个成熟的系统都需要有高可用，高性能，高可扩展性。所以与Redis相比SimpleKV还缺高可用集群支持模块和高可扩展集群支持模块，它的持久化做的没Redis好，数据类型和操作接口都没Redis多，性能上还有差距。","like_count":0},{"had_liked":false,"id":339206,"user_name":"起风了","can_delete":false,"product_type":"c1","uid":1110574,"ip_address":"","ucode":"DEA3B47B7F3C3F","user_header":"https://static001.geekbang.org/account/avatar/00/10/f2/2e/cb647708.jpg","comment_is_top":false,"comment_ctime":1647993657,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1647993657","product_id":100056701,"comment_content":"Redis 有哨兵模式，高可用","like_count":0},{"had_liked":false,"id":339143,"user_name":"Geek_275fa9","can_delete":false,"product_type":"c1","uid":2948634,"ip_address":"","ucode":"E08AB55F59EF59","user_header":"","comment_is_top":false,"comment_ctime":1647938155,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1647938155","product_id":100056701,"comment_content":"**1、SDS如何兼容C语言字符串？如何保证二进制安全？**<br><br>SDS对象中的buf是一个柔性数组，上层调用时，SDS直接返回了buf。由于buf是直接指向内容的指针，所以兼容C语言函数。而当真正读取内容时，SDS会通过len来限制读取长度，而非“\\0”，所以保证了二进制安全。<br>**2、sdshdr5的特殊之处是什么？**<br>sdshdr5只负责存储小于32字节的字符串。一般情况下，小字符串的存储更普遍，所以Redis进一步压缩了sdshdr5的数据结构，将sdshdr5的类型和长度放入了同一个属性中，用flags的低3位存储类型，高5位存储长度。创建空字符串时，sdshdr5会被sdshdr8替代。<br>**3、SDS是如何扩容的？**<br>SDS在涉及字符串修改时会调用sdsMakeroomFor函数进行检查，会根据空闲长度和新增内容的长度进行比较判断，然后根据不同情况动态扩容，该操作对上层透明。（具体扩容步骤比较复杂，此处暂不展开讨论，有兴趣的同学可自行研究）","like_count":0},{"had_liked":false,"id":337976,"user_name":"张潇赟","can_delete":false,"product_type":"c1","uid":1132192,"ip_address":"","ucode":"1A45B57F9E0723","user_header":"https://static001.geekbang.org/account/avatar/00/11/46/a0/aa6d4ecd.jpg","comment_is_top":false,"comment_ctime":1647215914,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1647215914","product_id":100056701,"comment_content":"simpleKV 还差一个给客户端程序调用的工具","like_count":0},{"had_liked":false,"id":336588,"user_name":"William Ning","can_delete":false,"product_type":"c1","uid":1592279,"ip_address":"","ucode":"4DB8D05E69E5F3","user_header":"https://static001.geekbang.org/account/avatar/00/18/4b/d7/f46c6dfd.jpg","comment_is_top":false,"comment_ctime":1646229106,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1646229106","product_id":100056701,"comment_content":"打卡","like_count":0},{"had_liked":false,"id":335172,"user_name":"HappyHasson","can_delete":false,"product_type":"c1","uid":2911084,"ip_address":"","ucode":"B84CC43E349CFA","user_header":"https://static001.geekbang.org/account/avatar/00/2c/6b/6c/3e80afaf.jpg","comment_is_top":false,"comment_ctime":1645371080,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1645371080","product_id":100056701,"comment_content":"一直有个疑惑：Redis 英语发音到底是怎样的？<br>周边很多同事的发音都不一样。<br>从Redis的全称 Remote Dictionary Server来看，发音应该是 RiDis，不应该Redis？","like_count":0},{"had_liked":false,"id":331263,"user_name":"蓝先锋","can_delete":false,"product_type":"c1","uid":1887201,"ip_address":"","ucode":"43693C879BB217","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/PQtystrICzfgcXCbPNOxSnGwfsEUv3vcGmSk8K5WBTNVuHYEGicSQfRP8bvrGDCFsNoUMSTCibSE9iczVTY5HV1Hg/132","comment_is_top":false,"comment_ctime":1642510161,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1642510161","product_id":100056701,"comment_content":"这节课就是一个系统设计的问题呀，受益匪浅，十分感谢","like_count":0},{"had_liked":false,"id":331040,"user_name":"忘形鱼","can_delete":false,"product_type":"c1","uid":1043720,"ip_address":"","ucode":"9290BFE3D7019B","user_header":"https://static001.geekbang.org/account/avatar/00/0f/ed/08/abb7bfe3.jpg","comment_is_top":false,"comment_ctime":1642391452,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1642391452","product_id":100056701,"comment_content":"memcache支持的value类型只有string吗？memcache的value可以是不同语言的任意类型，比如对于java可以是object、各种数据结构（比如list、map）或实现了序列化接口的自定义类，也即只要能够被序列化成二进制字节流即可","like_count":0},{"had_liked":false,"id":325270,"user_name":"北鼻账号","can_delete":false,"product_type":"c1","uid":2367796,"ip_address":"","ucode":"6802D915311E05","user_header":"","comment_is_top":false,"comment_ctime":1638886469,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1638886469","product_id":100056701,"comment_content":"SimpleKV有源码么？","like_count":0},{"had_liked":false,"id":324424,"user_name":"Geek_20a5cb","can_delete":false,"product_type":"c1","uid":2843446,"ip_address":"","ucode":"5B1C16CDBD6E3E","user_header":"","comment_is_top":false,"comment_ctime":1638428244,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1638428244","product_id":100056701,"comment_content":"首先对于数据库，最重要的肯定是存数据，所以就得先考虑能存什么类型的数据，然后肯定也得操作数据，比如crud，就得有不同的操作接口。然后键值对数据库的组件大体分为：访问框架，操作模块，索引模块，存储模块。对数据库进行操作，首先肯定是得要去访问数据库，就得知道是什么访问模式----网络框架访问，网络访问，就是客户端发送命令，将命令打成数据包，传到数据库的网络框架，并根据相关协议解析，然后就进行对应的操作（这个过程得考虑线程和并发的问题，redis选择的是单线程）。进行对应的操作之前肯定得先找到键值对，就得通过索引模块---redis是哈希表。找到键值对之后，得它进行具体的操作---操作模块。不同操作的逻辑会不同，有些操作需要给键值对分配内存或者释放内存空间，这样就会带出存储模块。redis的存储模块肯定分内存和外存。内存是通过分配器进行管理，redis有很多种。但如果不想断电即失，就肯定得持久化。持久化到硬盘的方式肯定就分每次修改键值对都落盘和按一定周期的时间批量对键值对进行落盘。每次修改都落盘的话很安全，数据不会丢失，但这样性能就很差（频繁io操作）。而批量落盘能提高性能，但就会导致如果在没落盘之前数据库崩溃了，那数据就丢失了。","like_count":0},{"had_liked":false,"id":324250,"user_name":"Yipsen","can_delete":false,"product_type":"c1","uid":2856313,"ip_address":"","ucode":"F0ECE8C12AF105","user_header":"","comment_is_top":false,"comment_ctime":1638348968,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1638348968","product_id":100056701,"comment_content":"好，从零构建redis。","like_count":0},{"had_liked":false,"id":318651,"user_name":"沙","can_delete":false,"product_type":"c1","uid":1377412,"ip_address":"","ucode":"131A5114452DE5","user_header":"https://static001.geekbang.org/account/avatar/00/15/04/84/cb0a009b.jpg","comment_is_top":false,"comment_ctime":1635383005,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1635383005","product_id":100056701,"comment_content":"主从架构，集群管理","like_count":0},{"had_liked":false,"id":316023,"user_name":"小花暖暖","can_delete":false,"product_type":"c1","uid":1254575,"ip_address":"","ucode":"6A73EE70755BA7","user_header":"https://static001.geekbang.org/account/avatar/00/13/24/af/9283da36.jpg","comment_is_top":false,"comment_ctime":1634109819,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1634109819","product_id":100056701,"comment_content":"网页端是否可以新出一个功能？比如标记为：不需要重复复习。另外就是可以对每个文章做总体的笔记总结？","like_count":0},{"had_liked":false,"id":313900,"user_name":"俯瞰风景.","can_delete":false,"product_type":"c1","uid":1044166,"ip_address":"","ucode":"A6DB68B7B84AEE","user_header":"https://static001.geekbang.org/account/avatar/00/0f/ee/c6/bebcbcf0.jpg","comment_is_top":false,"comment_ctime":1632731869,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1632731869","product_id":100056701,"comment_content":"键值数据库的核心目标是提供高性能的数据存储和访问，所以一般采用了哈希表这种时间复杂度为O(1)的数据结构作为索引的数据结构。<br><br>在缓存的应用场景下，由于追求性能极致，并且允许丢失部分数据，所以采用数据存储在内存中。但是在需要保证数据可靠性的场景下，需要进行数据的持久化，持久化的方式有：每次落盘（I&#47;O频繁，性能差），周期性落盘（有损失数据风险）。<br><br>redis为value提供多种数据结构支持，是由于不同的数据结构对应不同的业务数据操作需求，这也是rediis应用场景广泛的原因。<br><br>redis提供不同的内存分配器的目的，也是适应多样化的数据结构，提供适配的数据分配方式，进一步提供数据操作的性能。","like_count":0},{"had_liked":false,"id":311499,"user_name":"Geek_842f07","can_delete":false,"product_type":"c1","uid":2698987,"ip_address":"","ucode":"ED772AF755FE7E","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/WP4Ge8ABcINFkccKaNYKibicFnI0JAoojBBAUGrichNeRAgzm5RGbHG7GqYrFX3ELEzenuEbicQHJy2HZ72RxSOuMA/132","comment_is_top":false,"comment_ctime":1631257957,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1631257957","product_id":100056701,"comment_content":"这种大局观，从宏观到微观，看起来真的爽","like_count":0},{"had_liked":false,"id":310870,"user_name":"Geek_7f1111","can_delete":false,"product_type":"c1","uid":2756292,"ip_address":"","ucode":"71FA4B52286652","user_header":"","comment_is_top":false,"comment_ctime":1630940305,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1630940305","product_id":100056701,"comment_content":"现在有源码了嘛<br>","like_count":0},{"had_liked":false,"id":310365,"user_name":"88591","can_delete":false,"product_type":"c1","uid":1254656,"ip_address":"","ucode":"04CE3E46455185","user_header":"https://static001.geekbang.org/account/avatar/00/13/25/00/3afbab43.jpg","comment_is_top":false,"comment_ctime":1630632656,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1630632656","product_id":100056701,"comment_content":"内存管理，内存不够用了。需要一定策略来释放内存。","like_count":0},{"had_liked":false,"id":308596,"user_name":"自由","can_delete":false,"product_type":"c1","uid":2576960,"ip_address":"","ucode":"4E3B53D29D86CA","user_header":"https://static001.geekbang.org/account/avatar/00/27/52/40/db9b0eb2.jpg","comment_is_top":false,"comment_ctime":1629694903,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1629694903","product_id":100056701,"comment_content":"Redis 与 SimpleKV 相比，SimpleKV 缺少了批处理命令，这或许是操作模块的问题","like_count":0},{"had_liked":false,"id":305639,"user_name":"AlwaysJuly","can_delete":false,"product_type":"c1","uid":1486782,"ip_address":"","ucode":"C2F6FAB17EC931","user_header":"https://static001.geekbang.org/account/avatar/00/16/af/be/ed64f835.jpg","comment_is_top":false,"comment_ctime":1628081694,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1628081694","product_id":100056701,"comment_content":"还缺个账号和权限这块。","like_count":0},{"had_liked":false,"id":305597,"user_name":"王九荣","can_delete":false,"product_type":"c1","uid":1110189,"ip_address":"","ucode":"3C87DF4F7CEE10","user_header":"https://static001.geekbang.org/account/avatar/00/10/f0/ad/653db0f4.jpg","comment_is_top":false,"comment_ctime":1628064692,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1628064692","product_id":100056701,"comment_content":"确实过期时间设置","like_count":0},{"had_liked":false,"id":304402,"user_name":"Geek_bf0421","can_delete":false,"product_type":"c1","uid":2716687,"ip_address":"","ucode":"5A9CA914DAEAE3","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/UdE5Ee6WuHqrGYHrLtIdRwoL4EAOloMRNFddfzkrHBSV0IVnCn9LcnoYYfMRB3aLEe0dGM0orZmxMYyJkjgr4A/132","comment_is_top":false,"comment_ctime":1627388229,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1627388229","product_id":100056701,"comment_content":"socket连接  然后数据结构用哈希表 这里考虑的就是如何最优的解决hash冲突","like_count":0},{"had_liked":false,"id":303233,"user_name":"Heaven","can_delete":false,"product_type":"c1","uid":1694207,"ip_address":"","ucode":"FA33FBCC66C911","user_header":"https://static001.geekbang.org/account/avatar/00/19/d9/ff/b23018a6.jpg","comment_is_top":false,"comment_ctime":1626679654,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1626679654","product_id":100056701,"comment_content":"如果把SimpleKV看做一个单机版的,只支持动态库访问的键值对数据库,那么SimpleKV还缺少事务机制<br>其次补充一下为何glibc会产生内存碎片<br>因为我们使用高级编程语言来分配内存,比如malloc(),是利用glibc库作为中间媒介和底层系统通信,(以把glibc库看做一个接口,具体的实现不需要上层调用者关心)<br>在内存分配中,glibc根据内存分配策略,来选择mmap()&#47;brk()两个函数中的任意一个,而可能导致内存碎片的就是brk(<br>因为brk是通过移动堆顶位置来分配内存的,所以内存释放后并不会立刻归还系统,而是缓存起来,重复使用,在系统繁忙的时候,可能会造成内存碎片","like_count":0},{"had_liked":false,"id":288673,"user_name":"微末凡尘","can_delete":false,"product_type":"c1","uid":1099525,"ip_address":"","ucode":"25EDFD0914D0F4","user_header":"https://static001.geekbang.org/account/avatar/00/10/c7/05/19c5c255.jpg","comment_is_top":false,"comment_ctime":1618621258,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1618621258","product_id":100056701,"comment_content":"简单的kv数据库可以分为几大模块：1、网络模块 2、操作模块 3、索引模块 4、存储模块 5、数据模型","like_count":0},{"had_liked":false,"id":288563,"user_name":"xiyouzhao","can_delete":false,"product_type":"c1","uid":1565840,"ip_address":"","ucode":"34F6763C10DEC4","user_header":"https://static001.geekbang.org/account/avatar/00/17/e4/90/c730fc76.jpg","comment_is_top":false,"comment_ctime":1618539161,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1618539161","product_id":100056701,"comment_content":"一直在寻找学习的方法，意外的收获，谢谢","like_count":0},{"had_liked":false,"id":288477,"user_name":"阿信","can_delete":false,"product_type":"c1","uid":1399663,"ip_address":"","ucode":"CC7B15CE63264B","user_header":"https://static001.geekbang.org/account/avatar/00/15/5b/6f/113e24e6.jpg","comment_is_top":false,"comment_ctime":1618486977,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1618486977","product_id":100056701,"comment_content":"介绍的视角很赞，这样可以建立我们的全局观。<br>补充一个模块，信息统计&#47;健康诊断，让使用者知道我当前是怎样的。如redis里面的info、slowlog","like_count":0},{"had_liked":false,"id":287862,"user_name":"keep_it_real","can_delete":false,"product_type":"c1","uid":2055554,"ip_address":"","ucode":"F5057CAF752FF3","user_header":"https://static001.geekbang.org/account/avatar/00/1f/5d/82/81b2ba91.jpg","comment_is_top":false,"comment_ctime":1618198527,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1618198527","product_id":100056701,"comment_content":"老师最后的问题：<br>1. 我觉得SimpleKV在内存管理上还有欠缺；<br>2. 为了保证重启后可继续提供服务，将键值对持久化进磁盘，但这种方式有数据丢失的风险。其实在这方面它跟MySQL相比一点优势都没有，因为MySql InnoDB提供了redo log来保证crash safe。而且还提供了空间复用的技术。所以SimpleKV应该缺少类似机制来保证crash safe，还有磁盘空间也会产生空洞，不知道它是如何解决的；<br>3. 缺少保证高可用的模块。<br>4. 缺少横向扩展的模块","like_count":0},{"had_liked":false,"id":285914,"user_name":"Geek_c98a70","can_delete":false,"product_type":"c1","uid":2290127,"ip_address":"","ucode":"17D5ACBF7E44B7","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epIdmlBLywcLF3ADKyicFoRkVocJnu0CBbv6wYMeNGDEKlXRicaok498ybaozAzZbpr8qn8fA3LCdBA/132","comment_is_top":false,"comment_ctime":1617073552,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1617073552","product_id":100056701,"comment_content":"对于 DELETE 操作，SimpleKV 需要删除键值对，并释放相应的内存空间，这个过程由分配器完成。<br>这里的分配器是指啥？","like_count":0},{"had_liked":false,"id":285682,"user_name":"delicate","can_delete":false,"product_type":"c1","uid":1187083,"ip_address":"","ucode":"AE262751C50CDD","user_header":"https://static001.geekbang.org/account/avatar/00/12/1d/0b/5f353b88.jpg","comment_is_top":false,"comment_ctime":1616977729,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1616977729","product_id":100056701,"comment_content":"老师，你说到键值数据库的访问模型的时候，说到有函数库调用和网络访问两种，这里的“函数库调用”指的是什么可以具体展开讲一下么？感谢～","like_count":0},{"had_liked":false,"id":285239,"user_name":"陈梦莹","can_delete":false,"product_type":"c1","uid":1366874,"ip_address":"","ucode":"A2EB69C7A0CC3A","user_header":"https://static001.geekbang.org/account/avatar/00/14/db/5a/4d336bdb.jpg","comment_is_top":false,"comment_ctime":1616680550,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1616680550","product_id":100056701,"comment_content":"缺少事件通知，事务，监控？","like_count":0},{"had_liked":false,"id":284893,"user_name":"maybe","can_delete":false,"product_type":"c1","uid":1475528,"ip_address":"","ucode":"93D160F617E750","user_header":"https://static001.geekbang.org/account/avatar/00/16/83/c8/5ce842f6.jpg","comment_is_top":false,"comment_ctime":1616514199,"is_pvip":false,"discussion_count":0,"race_medal":4,"score":"1616514199","product_id":100056701,"comment_content":"我也来说一个：缺少性能基线测试模块","like_count":0},{"had_liked":false,"id":282579,"user_name":"阿牛","can_delete":false,"product_type":"c1","uid":1073236,"ip_address":"","ucode":"DC8C189FCF3289","user_header":"https://static001.geekbang.org/account/avatar/00/10/60/54/b3eb605b.jpg","comment_is_top":false,"comment_ctime":1615307186,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1615307186","product_id":100056701,"comment_content":"【每日打卡】键值数据库包括的四部分<br>1、访问框架:<br>函数库<br>Socket通信<br>2、索引模块<br>索引的作用是让键值数据库根据 key 找到相应 value 的存储位置，进而执行操作。<br>3、操作模块<br>GET&#47;SCAN，根据key返回value；<br>PUT,为键值对分配内存空间；<br>DELETE,删除键值对并释放空间；<br>4、存储模块<br>内存存储数据<br>硬盘存储数据","like_count":0},{"had_liked":false,"id":279205,"user_name":"失憶","can_delete":false,"product_type":"c1","uid":1199290,"ip_address":"","ucode":"3CCAE186F4901E","user_header":"https://static001.geekbang.org/account/avatar/00/12/4c/ba/736c4b49.jpg","comment_is_top":false,"comment_ctime":1613656640,"is_pvip":false,"discussion_count":0,"race_medal":1,"score":"1613656640","product_id":100056701,"comment_content":"蒋老师，您好，&quot;对于 PUT 和 DELETE 两种操作来说，除了新写入和删除键值对，还需要分配和释放内存&quot; ，对于做put、delete操作时是会先执行一次scan确定key之后才会相对应开始分配或者删除内存空间，对吧？","like_count":0},{"had_liked":false,"id":277018,"user_name":"小可","can_delete":false,"product_type":"c1","uid":1006735,"ip_address":"","ucode":"8834AF621FA67D","user_header":"https://static001.geekbang.org/account/avatar/00/0f/5c/8f/551b5624.jpg","comment_is_top":false,"comment_ctime":1612233503,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1612233503","product_id":100056701,"comment_content":"设计自问：<br>1.存什么？支持什么数据类型？<br>2.怎么存？通过什么方式（协议、形式、调用）存？内存还是磁盘？<br>3.怎么查？索引？","like_count":0},{"had_liked":false,"id":277013,"user_name":"小可","can_delete":false,"product_type":"c1","uid":1006735,"ip_address":"","ucode":"8834AF621FA67D","user_header":"https://static001.geekbang.org/account/avatar/00/0f/5c/8f/551b5624.jpg","comment_is_top":false,"comment_ctime":1612232595,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1612232595","product_id":100056701,"comment_content":"循序渐进，由点到面，整个设计思路妙啊，彩！","like_count":0},{"had_liked":false,"id":275654,"user_name":"拼命三郎","can_delete":false,"product_type":"c1","uid":1237691,"ip_address":"","ucode":"C77F0FE9EC8893","user_header":"https://static001.geekbang.org/account/avatar/00/12/e2/bb/c03b3087.jpg","comment_is_top":false,"comment_ctime":1611634407,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1611634407","product_id":100056701,"comment_content":"SimpleKV没有Redis的Pub&#47;Sub<br>","like_count":0},{"had_liked":false,"id":275546,"user_name":"庞","can_delete":false,"product_type":"c1","uid":2016089,"ip_address":"","ucode":"126E89B3EB007C","user_header":"https://static001.geekbang.org/account/avatar/00/1e/c3/59/5d0906ca.jpg","comment_is_top":false,"comment_ctime":1611579570,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1611579570","product_id":100056701,"comment_content":"认证授权也挺重要的","like_count":0},{"had_liked":false,"id":271868,"user_name":"敲键盘的猿","can_delete":false,"product_type":"c1","uid":1266098,"ip_address":"","ucode":"23BEC050CF7CD0","user_header":"https://static001.geekbang.org/account/avatar/00/13/51/b2/e4281116.jpg","comment_is_top":false,"comment_ctime":1609846144,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1609846144","product_id":100056701,"comment_content":"这一讲基本上从整体分解了一个小型的内存数据库应该具有哪些功能模块，而实际的redis就一次为扩展做出了精细优化以及更多强大功能的支持。感觉讲的听不错，第一次在使用之外把握了Redis的模块组成，期待后续更加深入的分享。","like_count":0},{"had_liked":false,"id":270539,"user_name":"海光","can_delete":false,"product_type":"c1","uid":1158224,"ip_address":"","ucode":"9E925611D58F23","user_header":"https://static001.geekbang.org/account/avatar/00/11/ac/50/2f32f9e8.jpg","comment_is_top":false,"comment_ctime":1609153275,"is_pvip":true,"replies":[{"id":"98418","content":"术以致用，道以溯源，术和道相辅相成。","user_name":"作者回复","user_name_real":"蒋德钧","uid":"1609687","ctime":1609721043,"ip_address":"","comment_id":270539,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1609153275","product_id":100056701,"comment_content":"以前更多是拿Redis来用，并未从根源上考虑其设计的方方面面，工作中不仅是术的积累，更需要道的总结，受教了！","like_count":0,"discussions":[{"author":{"id":1609687,"avatar":"https://static001.geekbang.org/account/avatar/00/18/8f/d7/fb60129d.jpg","nickname":"蒋德钧","note":"","ucode":"833985C2C37C0A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":512662,"discussion_content":"术以致用，道以溯源，术和道相辅相成。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1609721043,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":270198,"user_name":"你为啥那么牛","can_delete":false,"product_type":"c1","uid":1503506,"ip_address":"","ucode":"1ABC604A54A8F6","user_header":"https://static001.geekbang.org/account/avatar/00/16/f1/12/7dac30d6.jpg","comment_is_top":false,"comment_ctime":1608983137,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1608983137","product_id":100056701,"comment_content":"作为一个十多年的老油条，我印象中的redis就是存值、取值、设置过期等等，此文将我的理解提升了几个档次","like_count":0},{"had_liked":false,"id":269976,"user_name":"Johar","can_delete":false,"product_type":"c1","uid":1101969,"ip_address":"","ucode":"834136A6F64CDC","user_header":"https://static001.geekbang.org/account/avatar/00/10/d0/91/89123507.jpg","comment_is_top":false,"comment_ctime":1608866794,"is_pvip":false,"discussion_count":0,"race_medal":2,"score":"1608866794","product_id":100056701,"comment_content":"[高可用]可以通过支持分布式，实现高可用<br>[数据事物性]避免多线程竞争<br>[安全性]缺乏安全机制<br>[可维护性]缺少运维","like_count":0},{"had_liked":false,"id":268608,"user_name":"三井寿","can_delete":false,"product_type":"c1","uid":2336545,"ip_address":"","ucode":"325E9D64C22C0D","user_header":"https://static001.geekbang.org/account/avatar/00/23/a7/21/9366cdd8.jpg","comment_is_top":false,"comment_ctime":1608272392,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1608272392","product_id":100056701,"comment_content":"受益匪浅","like_count":0},{"had_liked":false,"id":267515,"user_name":"Master","can_delete":false,"product_type":"c1","uid":1613760,"ip_address":"","ucode":"79D0145B853C9E","user_header":"https://static001.geekbang.org/account/avatar/00/18/9f/c0/86febfff.jpg","comment_is_top":false,"comment_ctime":1607782653,"is_pvip":false,"replies":[{"id":"98129","content":"是的，SimpleKV是个单机版的键值数据库。","user_name":"作者回复","user_name_real":"蒋德钧","uid":"1609687","ctime":1609171534,"ip_address":"","comment_id":267515,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1607782653","product_id":100056701,"comment_content":"simpleKV缺少高可用的相关支持，如类似redis的哨兵模式、redis-cluster的集群模式支持","like_count":0,"discussions":[{"author":{"id":1609687,"avatar":"https://static001.geekbang.org/account/avatar/00/18/8f/d7/fb60129d.jpg","nickname":"蒋德钧","note":"","ucode":"833985C2C37C0A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":511663,"discussion_content":"是的，SimpleKV是个单机版的键值数据库。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1609171534,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2739957,"avatar":"","nickname":"Geek_39299b","note":"","ucode":"908C2FC4DECD33","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":389616,"discussion_content":"我觉得  要是这些都实现了  那么恐怕这门课得起价 69999元","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1629356911,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":263512,"user_name":"Is²⁰²⁰","can_delete":false,"product_type":"c1","uid":2026360,"ip_address":"","ucode":"F0903DF3066B16","user_header":"https://static001.geekbang.org/account/avatar/00/1e/eb/78/154c232f.jpg","comment_is_top":false,"comment_ctime":1606145916,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1606145916","product_id":100056701,"comment_content":"这simplekv有代码地址吗？","like_count":0},{"had_liked":false,"id":263372,"user_name":"BertGeek","can_delete":false,"product_type":"c1","uid":1452799,"ip_address":"","ucode":"8E1D72C9F9778C","user_header":"https://static001.geekbang.org/account/avatar/00/16/2a/ff/a9d72102.jpg","comment_is_top":false,"comment_ctime":1606118579,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1606118579","product_id":100056701,"comment_content":"作者以对比方式，讲解原理，层次化，技术点道破！给力！<br>SimpleKV 缺少：<br>1. 自身的资源监控web化<br>2. 高可用，如果要投入生产场景，必然考虑高可用<br>3. socket 网络化，当今网络化，服务调用，注册中心等，都依赖网络接口<br>","like_count":0},{"had_liked":false,"id":262984,"user_name":"百分之一","can_delete":false,"product_type":"c1","uid":1032389,"ip_address":"","ucode":"6B75633EE49ECA","user_header":"https://static001.geekbang.org/account/avatar/00/0f/c0/c5/57c4f438.jpg","comment_is_top":false,"comment_ctime":1605932071,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1605932071","product_id":100056701,"comment_content":"讲的非常好","like_count":0},{"had_liked":false,"id":260765,"user_name":"暮雨","can_delete":false,"product_type":"c1","uid":1176426,"ip_address":"","ucode":"4B7F4932446EF7","user_header":"https://static001.geekbang.org/account/avatar/00/11/f3/6a/6d82e7a3.jpg","comment_is_top":false,"comment_ctime":1605101021,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1605101021","product_id":100056701,"comment_content":"kv的生命周期，设置过期时间，自动回收","like_count":0},{"had_liked":false,"id":260101,"user_name":"Geek_d1b4e1","can_delete":false,"product_type":"c1","uid":1515679,"ip_address":"","ucode":"349C689216672D","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/ZRuGPK9Rmo5icH649EpibcT5XL5zm15H62A0MWsuC3yNWNcke6j5gxF4Q5b6J7GQbOiczMAovceoQObttyP8HEfzQ/132","comment_is_top":false,"comment_ctime":1604923758,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1604923758","product_id":100056701,"comment_content":"因为内存资源有限，所以redis提供了多种内存淘汰策略来提高内存使用效率。SimpleKV中并没有这个部分组件。","like_count":0},{"had_liked":false,"id":259358,"user_name":"每天晒白牙","can_delete":false,"product_type":"c1","uid":1004698,"ip_address":"","ucode":"A1B102CD933DEA","user_header":"https://static001.geekbang.org/account/avatar/00/0f/54/9a/76c0af70.jpg","comment_is_top":false,"comment_ctime":1604712768,"is_pvip":false,"discussion_count":0,"race_medal":1,"score":"1604712768","product_id":100056701,"comment_content":"追更完了，一个答疑汇总，发现自己并没有掌握，要重新刷一遍","like_count":0},{"had_liked":false,"id":259237,"user_name":"小可爱(๑• . •๑)","can_delete":false,"product_type":"c1","uid":1106190,"ip_address":"","ucode":"1E97973449DBDC","user_header":"https://static001.geekbang.org/account/avatar/00/10/e1/0e/2912db26.jpg","comment_is_top":false,"comment_ctime":1604660379,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1604660379","product_id":100056701,"comment_content":"理清缓存的设计要点","like_count":0},{"had_liked":false,"id":258908,"user_name":"Janky","can_delete":false,"product_type":"c1","uid":1201670,"ip_address":"","ucode":"4FDD781883E033","user_header":"https://static001.geekbang.org/account/avatar/00/12/56/06/dbd5704a.jpg","comment_is_top":false,"comment_ctime":1604579626,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1604579626","product_id":100056701,"comment_content":"底层的单线程，I&#47;O轮询机制一样吗","like_count":0},{"had_liked":false,"id":258457,"user_name":"Zhaoyang","can_delete":false,"product_type":"c1","uid":1037190,"ip_address":"","ucode":"131D83AC2566D2","user_header":"https://static001.geekbang.org/account/avatar/00/0f/d3/86/b5d72c87.jpg","comment_is_top":false,"comment_ctime":1604452175,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1604452175","product_id":100056701,"comment_content":"自己没有注意到内存分配这里。glib内存分配，看来还是存在问题，内存分配会不合理","like_count":0},{"had_liked":false,"id":255805,"user_name":"Geek_b8d5c9","can_delete":false,"product_type":"c1","uid":2261175,"ip_address":"","ucode":"505F33B4C0EA31","user_header":"","comment_is_top":false,"comment_ctime":1603434775,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1603434775","product_id":100056701,"comment_content":"从学了这篇文章才知redis基本结构 作者拿了一个Simplekv来对比 然后在结合图片 很明显的可以看出区别","like_count":0},{"had_liked":false,"id":255519,"user_name":"丁丁历险记","can_delete":false,"product_type":"c1","uid":1661704,"ip_address":"","ucode":"A43829E454C067","user_header":"https://static001.geekbang.org/account/avatar/00/19/5b/08/b0b0db05.jpg","comment_is_top":false,"comment_ctime":1603364246,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1603364246","product_id":100056701,"comment_content":"像架构师一样去思考","like_count":0},{"had_liked":false,"id":254340,"user_name":"忘","can_delete":false,"product_type":"c1","uid":1001426,"ip_address":"","ucode":"F9D46E6A9E728B","user_header":"https://static001.geekbang.org/account/avatar/00/0f/47/d2/024e8f0a.jpg","comment_is_top":false,"comment_ctime":1603102071,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1603102071","product_id":100056701,"comment_content":"我是一个一点基础都没有的学员，不知道能不能学会，读起来有点吃力，老师可以给一些建议吗？","like_count":0},{"had_liked":false,"id":250216,"user_name":"端贺","can_delete":false,"product_type":"c1","uid":1121588,"ip_address":"","ucode":"80F1400B138055","user_header":"https://static001.geekbang.org/account/avatar/00/11/1d/34/8201baab.jpg","comment_is_top":false,"comment_ctime":1600995367,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1600995367","product_id":100056701,"comment_content":"麻雀虽小五脏俱全，全篇文章通俗易懂，可见功力深厚。以轻松的文字，介绍Redis的整体面貌，埋下伏笔，梳理整个专栏的行文脉络。","like_count":0},{"had_liked":false,"id":248351,"user_name":"snailshen","can_delete":false,"product_type":"c1","uid":1436839,"ip_address":"","ucode":"C4875C476649B1","user_header":"https://static001.geekbang.org/account/avatar/00/15/ec/a7/7d44c655.jpg","comment_is_top":false,"comment_ctime":1600132118,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1600132118","product_id":100056701,"comment_content":"缺少客户端工具，类似redis_cli","like_count":0,"discussions":[{"author":{"id":1378332,"avatar":"https://static001.geekbang.org/account/avatar/00/15/08/1c/ab50923c.jpg","nickname":"Jacen","note":"","ucode":"A1EC8D8FE11230","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":311133,"discussion_content":"写个socket连接，就可以了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1602232782,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":247560,"user_name":"💢 星星💢","can_delete":false,"product_type":"c1","uid":1254392,"ip_address":"","ucode":"A402B765222C35","user_header":"https://static001.geekbang.org/account/avatar/00/13/23/f8/24fcccea.jpg","comment_is_top":false,"comment_ctime":1599741360,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1599741360","product_id":100056701,"comment_content":"没明白动态库连接的形式和server socket的区别，动态库链接客户端不是也要经过网络通信socket的处理么?","like_count":0},{"had_liked":false,"id":247441,"user_name":"Niki","can_delete":false,"product_type":"c1","uid":2170360,"ip_address":"","ucode":"70BE316D46B8DB","user_header":"https://static001.geekbang.org/account/avatar/00/21/1d/f8/441f5924.jpg","comment_is_top":false,"comment_ctime":1599709667,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1599709667","product_id":100056701,"comment_content":"在数据特性上，Redis支持lua、pipeline、pubsub等特性，丰富自身的数据能力。SimpleKV不具备。","like_count":0},{"had_liked":false,"id":246427,"user_name":"学习学个屁","can_delete":false,"product_type":"c1","uid":1049017,"ip_address":"","ucode":"DF2D61E6FB2FCE","user_header":"https://static001.geekbang.org/account/avatar/00/10/01/b9/73435279.jpg","comment_is_top":false,"comment_ctime":1599322393,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1599322393","product_id":100056701,"comment_content":"首先数据结构相比redis的话 有点儿少,缺少其次是高可用,内存回收策略等,redis的高级数据结构,事务,原子性操作等,分布式锁等","like_count":0},{"had_liked":false,"id":246004,"user_name":"前方的灯有点弱","can_delete":false,"product_type":"c1","uid":2058455,"ip_address":"","ucode":"5CEDBCF3DDC991","user_header":"https://static001.geekbang.org/account/avatar/00/1f/68/d7/29025f1f.jpg","comment_is_top":false,"comment_ctime":1599130110,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1599130110","product_id":100056701,"comment_content":"长见识了","like_count":0},{"had_liked":false,"id":243278,"user_name":"Luke","can_delete":false,"product_type":"c1","uid":1010819,"ip_address":"","ucode":"8368A63185356D","user_header":"https://static001.geekbang.org/account/avatar/00/0f/6c/83/48e528cb.jpg","comment_is_top":false,"comment_ctime":1598012759,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1598012759","product_id":100056701,"comment_content":"SimpleKV除了一个kv数据库至少需要包含的骨架，其他现代内存数据库该有的功能都缺，包括高可用HA解决方案、可扩展性、事务等","like_count":0},{"had_liked":false,"id":242297,"user_name":"我的黄金时代","can_delete":false,"product_type":"c1","uid":1062070,"ip_address":"","ucode":"D7825B45B372F4","user_header":"https://static001.geekbang.org/account/avatar/00/10/34/b6/0feb574b.jpg","comment_is_top":false,"comment_ctime":1597663958,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1597663958","product_id":100056701,"comment_content":"不是很明白，SimpleKV不是作者要设计的一个服务吗，怎么说着说着就限定了SimpleKV的具体技术实现了，像要使用内存分配器 glibc 的 malloc 和 free的方案，直接给出了结论，难道不是应该分析这种技术的选取吗？","like_count":0},{"had_liked":false,"id":242284,"user_name":"-","can_delete":false,"product_type":"c1","uid":1546505,"ip_address":"","ucode":"7B34258D346793","user_header":"https://static001.geekbang.org/account/avatar/00/17/99/09/29c46a7b.jpg","comment_is_top":false,"comment_ctime":1597657966,"is_pvip":true,"replies":[{"id":"89481","content":"谢谢，我们一起学习交流 :)","user_name":"作者回复","user_name_real":"蒋德钧","uid":"1609687","ctime":1597752267,"ip_address":"","comment_id":242284,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1597657966","product_id":100056701,"comment_content":"写的是真的好。一下就有了个全面的认识了","like_count":0,"discussions":[{"author":{"id":1609687,"avatar":"https://static001.geekbang.org/account/avatar/00/18/8f/d7/fb60129d.jpg","nickname":"蒋德钧","note":"","ucode":"833985C2C37C0A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":503971,"discussion_content":"谢谢，我们一起学习交流 :)","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1597752267,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":241139,"user_name":"煮石山农","can_delete":false,"product_type":"c1","uid":1768991,"ip_address":"","ucode":"7B2D210E822A05","user_header":"https://static001.geekbang.org/account/avatar/00/1a/fe/1f/9c61526e.jpg","comment_is_top":false,"comment_ctime":1597200201,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1597200201","product_id":100056701,"comment_content":"老师您好，如果希望通过滚动升级，来分批升级系统，Redis集群怎么设计，来分别承担旧版本和新版本缓存呢？感谢","like_count":0},{"had_liked":false,"id":240503,"user_name":"Geek_aef208","can_delete":false,"product_type":"c1","uid":2113273,"ip_address":"","ucode":"9FA1CAAFA27DCF","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/p83UpvULG4E9MbCfmia1Ocdf4yHnBWhRyhRkvYia3E5DoQ9JopHSEWsSxPJwvV9yYKcHiasA1SUQdw3c9ph1WZaibg/132","comment_is_top":false,"comment_ctime":1596952015,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1596952015","product_id":100056701,"comment_content":"我对Redis只有初步的了解，但是SimpleKV里还缺乏：<br>1.运维管理设计<br>2.运营管理设计<br>3.高可用的集群设计<br>4.高扩展设计","like_count":0},{"had_liked":false,"id":240277,"user_name":"李二木","can_delete":false,"product_type":"c1","uid":1103091,"ip_address":"","ucode":"30E03BB84ADB27","user_header":"https://static001.geekbang.org/account/avatar/00/10/d4/f3/129d6dfe.jpg","comment_is_top":false,"comment_ctime":1596847989,"is_pvip":true,"discussion_count":3,"race_medal":0,"score":"1596847989","product_id":100056701,"comment_content":"redis是线程安全的吗？","like_count":0,"discussions":[{"author":{"id":2017421,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/c8/8d/286b4024.jpg","nickname":"澎澎","note":"","ucode":"C5BFC80157D50E","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":566178,"discussion_content":"redis操作都是原子性","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1650621178,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2700925,"avatar":"https://static001.geekbang.org/account/avatar/00/29/36/7d/eab0d26a.jpg","nickname":"丹尼尔-雪碧","note":"","ucode":"F098396F4B7500","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":552169,"discussion_content":"redis是单线程，redis内部执行过程中不存在并发呀。如果要保证连续执行多个指令，可以用lua脚本","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1645335786,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1102245,"avatar":"https://static001.geekbang.org/account/avatar/00/10/d1/a5/2bbedc3b.jpg","nickname":"over","note":"","ucode":"FE272AC19842D3","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":374866,"discussion_content":"线程安全具体指什么？\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1621394369,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":240115,"user_name":"Jackey","can_delete":false,"product_type":"c1","uid":1063751,"ip_address":"","ucode":"125DE81993FEDD","user_header":"https://static001.geekbang.org/account/avatar/00/10/3b/47/f6c772a1.jpg","comment_is_top":false,"comment_ctime":1596765066,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1596765066","product_id":100056701,"comment_content":"缺少脚本编程模块吧，Lua应用的还是比较多的","like_count":0},{"had_liked":false,"id":239601,"user_name":"张晗_Jeremy","can_delete":false,"product_type":"c1","uid":1956890,"ip_address":"","ucode":"47C427BB55210B","user_header":"https://static001.geekbang.org/account/avatar/00/1d/dc/1a/04f212f6.jpg","comment_is_top":false,"comment_ctime":1596594914,"is_pvip":false,"replies":[{"id":"88753","content":"SimpleKV对标的是键值数据库，您现在对比的是mysql关系型数据库，本身功能也比键值数据库要复杂。这些的确是SimpleKV没有的。<br><br>另外，我们后面课程也会介绍Redis各项特征，到时学习了可以回过来再对比看看：）","user_name":"作者回复","user_name_real":"蒋德钧","uid":"1609687","ctime":1596935090,"ip_address":"","comment_id":239601,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1596594914","product_id":100056701,"comment_content":"真的想不到！缺少mysql里面的过程，事务和触发器吗？","like_count":0,"discussions":[{"author":{"id":1609687,"avatar":"https://static001.geekbang.org/account/avatar/00/18/8f/d7/fb60129d.jpg","nickname":"蒋德钧","note":"","ucode":"833985C2C37C0A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":503153,"discussion_content":"SimpleKV对标的是键值数据库，您现在对比的是mysql关系型数据库，本身功能也比键值数据库要复杂。这些的确是SimpleKV没有的。\n\n另外，我们后面课程也会介绍Redis各项特征，到时学习了可以回过来再对比看看：）","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1596935090,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1956890,"avatar":"https://static001.geekbang.org/account/avatar/00/1d/dc/1a/04f212f6.jpg","nickname":"张晗_Jeremy","note":"","ucode":"47C427BB55210B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":297450,"discussion_content":"怪不得啊，谢谢老师","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1596941623,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":239506,"user_name":"liudu_ec","can_delete":false,"product_type":"c1","uid":2041994,"ip_address":"","ucode":"E299071BD1DFA8","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJiaeTzf4V8ib4xKcYjWEIflBSqkjbpkscoaedppgnBAD9ZAibjYSz0DNSJQw8icz7xljEgbNQ5hrzPAA/132","comment_is_top":false,"comment_ctime":1596551610,"is_pvip":true,"replies":[{"id":"88652","content":"联想到了Memcached，不错！","user_name":"作者回复","user_name_real":"蒋德钧","uid":"1609687","ctime":1596767300,"ip_address":"","comment_id":239506,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1596551610","product_id":100056701,"comment_content":"SimpleKV像Memcached多过像Redis 把？ 不支持集群、分布式，纯内存操作，没有持久化，不支持多种数据结构...","like_count":0,"discussions":[{"author":{"id":1609687,"avatar":"https://static001.geekbang.org/account/avatar/00/18/8f/d7/fb60129d.jpg","nickname":"蒋德钧","note":"","ucode":"833985C2C37C0A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":503123,"discussion_content":"联想到了Memcached，不错！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1596767300,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":239488,"user_name":"哦吼掉了","can_delete":false,"product_type":"c1","uid":1232599,"ip_address":"","ucode":"1F89B1BA1EEF52","user_header":"https://static001.geekbang.org/account/avatar/00/12/ce/d7/8168e1bf.jpg","comment_is_top":false,"comment_ctime":1596546977,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1596546977","product_id":100056701,"comment_content":"缺少失效时间的支持，原子性操作","like_count":0},{"had_liked":false,"id":239370,"user_name":"yyl","can_delete":false,"product_type":"c1","uid":1170843,"ip_address":"","ucode":"1741DACDFCA9AF","user_header":"https://static001.geekbang.org/account/avatar/00/11/dd/9b/0bc44a78.jpg","comment_is_top":false,"comment_ctime":1596515206,"is_pvip":false,"replies":[{"id":"88751","content":"这个比较看到了Redis的不少特点，赞！","user_name":"作者回复","user_name_real":"蒋德钧","uid":"1609687","ctime":1596934340,"ip_address":"","comment_id":239370,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1596515206","product_id":100056701,"comment_content":"和了解的 Redis 相比，SimpleKV还缺少高可用方案（主从复制，哨兵，集群），事务，流水线，发布与订阅，运维接口等；<br>如果SimpleKV要支持高可用方案，可搭配zookeeper等第三方组件来实现","like_count":0,"discussions":[{"author":{"id":1609687,"avatar":"https://static001.geekbang.org/account/avatar/00/18/8f/d7/fb60129d.jpg","nickname":"蒋德钧","note":"","ucode":"833985C2C37C0A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":503083,"discussion_content":"这个比较看到了Redis的不少特点，赞！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1596934340,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1170843,"avatar":"https://static001.geekbang.org/account/avatar/00/11/dd/9b/0bc44a78.jpg","nickname":"yyl","note":"","ucode":"1741DACDFCA9AF","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":301917,"discussion_content":"对比课后思考题答案，自己在回答问题缺少对Redis的系统理解。以曾同学的解答为例，分别从7个方面作答，这样条理清晰明了，学习到了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1598708168,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":239297,"user_name":"服务器宕机了","can_delete":false,"product_type":"c1","uid":1136769,"ip_address":"","ucode":"E3444EF0DF4350","user_header":"https://static001.geekbang.org/account/avatar/00/11/58/81/10e629e8.jpg","comment_is_top":false,"comment_ctime":1596499767,"is_pvip":true,"replies":[{"id":"88568","content":"是的，Redis的sorted set类型，底层实现有用到跳表。","user_name":"作者回复","user_name_real":"蒋德钧","uid":"1609687","ctime":1596674687,"ip_address":"","comment_id":239297,"utype":1}],"discussion_count":3,"race_medal":0,"score":"1596499767","product_id":100056701,"comment_content":"Redis中也有使用跳表吧","like_count":0,"discussions":[{"author":{"id":1609687,"avatar":"https://static001.geekbang.org/account/avatar/00/18/8f/d7/fb60129d.jpg","nickname":"蒋德钧","note":"","ucode":"833985C2C37C0A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":503050,"discussion_content":"是的，Redis的sorted set类型，底层实现有用到跳表。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1596674687,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2041994,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJiaeTzf4V8ib4xKcYjWEIflBSqkjbpkscoaedppgnBAD9ZAibjYSz0DNSJQw8icz7xljEgbNQ5hrzPAA/132","nickname":"liudu_ec","note":"","ucode":"E299071BD1DFA8","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":296474,"discussion_content":"索引是hash索引\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1596551434,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2104807,"avatar":"https://static001.geekbang.org/account/avatar/00/20/1d/e7/677c95ed.jpg","nickname":"Geek_3d8976","note":"","ucode":"375CFB41E7E1E2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":296290,"discussion_content":"是的，redis有一个数据结构zset的底层就是跳跃表","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1596503919,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":239255,"user_name":"与路同飞","can_delete":false,"product_type":"c1","uid":1138821,"ip_address":"","ucode":"2985F1440A1962","user_header":"https://static001.geekbang.org/account/avatar/00/11/60/85/f72f1d94.jpg","comment_is_top":false,"comment_ctime":1596467251,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1596467251","product_id":100056701,"comment_content":"少了过期删除","like_count":0},{"had_liked":false,"id":239241,"user_name":"易七","can_delete":false,"product_type":"c1","uid":2016127,"ip_address":"","ucode":"8386B64AF2323B","user_header":"https://static001.geekbang.org/account/avatar/00/1e/c3/7f/6b3185b6.jpg","comment_is_top":false,"comment_ctime":1596464503,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1596464503","product_id":100056701,"comment_content":"缺少丰富的value，缺少高可用的能力（哨兵 ，集群）","like_count":0}]}