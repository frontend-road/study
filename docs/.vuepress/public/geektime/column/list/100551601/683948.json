{"id":683948,"title":"模拟面试｜数据库面试思路一图懂","content":"<p>你好，我是大明，恭喜你学完第二章的内容，又到了要验收成果的时刻了。数据库这一章的内容很多，而且知识点都很重要，所以为了帮助你更好地掌握这部分内容，我们在这里设置了面试题。</p><p>你在回答的时候，最好是能够写成一个个文档，至少也要口头上说一遍。千万不要仅仅在脑海里面回忆一遍。因为在真正面试的时候，脑海中的记忆到嘴里说出的话，还需要一个转换。</p><h2><a href=\"https://time.geekbang.org/column/article/672553\">10｜数据库索引：为什么 MySQL 用 B+ 树而不用 B 树？</a></h2><ol>\n<li>什么是覆盖索引？</li>\n<li>什么是聚簇索引/非聚簇索引？</li>\n<li>什么是哈希索引？MySQL InnoDB 引擎怎么创建一个哈希索引？</li>\n<li>什么回表？如何避免回表？</li>\n<li>树的高度和查询性能是什么关系？</li>\n<li>什么是索引最左匹配原则？</li>\n<li>范围查询、Like 之类的查询怎么影响数据库使用索引？</li>\n<li>索引是不是越多越好？</li>\n<li>使用索引有什么代价？</li>\n<li>如何选择合适的索引列？组合索引里面怎么确定列的顺序？状态类的列是否适合作为索引的列？</li>\n<li>为什么 MySQL 使用 B+ 树作为索引的数据结构？为什么不用 B 树？为什么不用红黑树？为什么不用二叉平衡树？为什么不用跳表？</li>\n<li>NULL 对索引有什么影响？</li>\n<li>唯一索引是否允许多个NULL 值？</li>\n</ol><h2><a href=\"https://time.geekbang.org/column/article/674168\">11｜SQL 优化：如何发现 SQL 中的问题？</a></h2><ol>\n<li>请你解释一下 EXPALIN 命令。</li>\n<li>你有优化过 SQL 吗？具体是怎么优化的？</li>\n<li>你有没有优化过索引？怎么优化的？</li>\n<li>怎么优化 COUNT 查询？</li>\n<li>怎么优化 ORDER BY？</li>\n<li>怎么优化 LIMIT OFFSET 查询？</li>\n<li>为什么要尽量把条件写到 WHERE 而不是写到 HAVING 里面？</li>\n<li>怎么给一张表添加新的索引/修改表结构？如果我的数据量很大呢？</li>\n<li>USE INDEX/FORCE INDEX/IGNORE INDEX 有什么效果？</li>\n</ol><!-- [[[read_end]]] --><h2><a href=\"https://time.geekbang.org/column/article/674789\">12｜数据库锁：明明有行锁，怎么突然就加了表锁？</a></h2><ol>\n<li>什么是行锁、表锁？什么时候加表锁？怎么避免？</li>\n<li>什么是乐观锁？怎么在 MySQL 里面实现一个乐观锁？</li>\n<li>什么是意向锁？可以举一个例子吗？</li>\n<li>什么是共享锁和排它锁？它们有什么特性？</li>\n<li>什么是两阶段加锁？</li>\n<li>什么是记录锁、间隙锁和临键锁？</li>\n<li>RC 级别有间隙锁和临键锁吗？</li>\n<li>MySQL 是怎么在 RR 级别下解决幻读的？</li>\n<li>什么情况下会加临键锁？什么情况下会加间隙锁？什么时候加记录锁？</li>\n<li>唯一索引和普通索引会怎么影响锁？</li>\n<li>你遇到过什么死锁问题吗？怎么排查的？最终又是怎么解决的？</li>\n<li>你有没有优化过锁？怎么优化的？</li>\n</ol><h2><a href=\"https://time.geekbang.org/column/article/675235\">13｜MVCC协议：MySQL 修改数据时，还能不能读到这条数据？</a></h2><ol>\n<li>什么是 MVCC？为什么需要 MVCC？</li>\n<li>什么是隔离级别？隔离级别有哪几种？</li>\n<li>什么是脏读、不可重复读、幻读？它们与隔离级别的关系是怎样的？</li>\n<li>隔离级别是不是越高越好？</li>\n<li>你们公司用的是什么隔离级别？为什么使用这个隔离级别？能不能使用别的隔离级别？</li>\n<li>你有没有改过隔离级别？为什么改？</li>\n</ol><h2><a href=\"https://time.geekbang.org/column/article/675812\">14｜数据库事务：事务提交了，你的数据就一定不会丢吗？</a></h2><ol>\n<li>什么是 undo log？为什么需要 undo log？</li>\n<li>什么是 redo log？为什么需要 redo log？</li>\n<li>什么是 binlog？它有几种模式？用来做什么？</li>\n<li>事务是如何执行的？</li>\n<li>什么是 ACID？隔离性和隔离级别是什么关系？你觉得哪个隔离级别满足这里的隔离性要求？</li>\n<li>redo log 的刷盘时机有哪些？该如何选择？你们公司用的是哪个配置？为什么用这个配置？</li>\n<li>binlog 的刷盘时机有哪些？该如何选择？你们公司用的是哪个配置？为什么用这个配置？</li>\n<li>我的事务提交了，就一定不会丢吗？怎么确保一定不会丢？</li>\n<li>什么是 page cache？为什么不直接写到磁盘？</li>\n<li>在分布式环境下，当服务器告诉我写入成功的时候，一定写入成功了吗？如果服务器宕机了了可能发生什么？</li>\n</ol><h2><a href=\"https://time.geekbang.org/column/article/676586\">15｜数据迁移：如何在不停机的情况下保证迁移数据的一致性？</a></h2><ol>\n<li>你们单库拆分的时候是如何做数据迁移的/你们修改大表结构的时候是怎么做数据迁移的？怎么在保持应用不停机的情况下做数据迁移？</li>\n<li>什么是双写？为什么要引入双写？</li>\n<li>如果双写的过程中，有一边写失败了，怎么办？</li>\n<li>你可以用本地事务来保证双写要么都成功，要么都失败吗？分布式事务呢？</li>\n<li>为什么有一个阶段是双写，但是以目标表为准？干嘛不直接切换到单写目标表？</li>\n<li>你们有什么容错方案？比如说如果在迁移过程中出错了，你们的应用会怎么办？</li>\n<li>你们是怎么校验数据的？</li>\n<li>增量数据校验你们是怎么做的？</li>\n<li>数据迁移你能够做到数据绝对不出错吗？</li>\n<li>如果数据出错了你们怎么修复？怎么避免并发问题？</li>\n<li>让你迁移一个 2000 万行的表，你的方案大概要多久？</li>\n<li>你用过 mysqldump/XtraBackup 吗？它有什么缺点？</li>\n</ol><h2><a href=\"https://time.geekbang.org/column/article/676793\">16｜分库分表主键生成：如何设计一个主键生成算法？</a></h2><ol>\n<li>你们分库分表怎么生成主键的？</li>\n<li>使用 UUID/数据库自增/雪花算法有什么优缺点？</li>\n<li>雪花算法是如何实现的？</li>\n<li>雪花算法是怎么做到全局唯一的？</li>\n<li>怎么解决雪花算法的序列号耗尽问题?</li>\n<li>怎么解决雪花算法的数据堆积问题？</li>\n<li>你有没有优化过主键生成的性能？怎么优化的？效果如何？</li>\n<li>你的主键生成的 ID 是严格递增的吗？不是递增有什么问题？</li>\n<li>为什么我们一般使用自增主键？</li>\n<li>什么是页分裂？有什么缺点？</li>\n</ol><h2><a href=\"https://time.geekbang.org/column/article/677491\">17｜分库分表分页查询：为什么你的分页查询又慢又耗费内存？</a></h2><ol>\n<li>你们公司是怎么解决分页查询的？平均查询性能如何？</li>\n<li>为什么分页查询那么慢？</li>\n<li>全局查询有什么优缺点？对于一个查询 LIMIT X OFFSET Y 来说，如果我命中了三张表，会取来多少数据？</li>\n<li>怎么提高分页查询的速度？</li>\n<li>什么是二次查询？它的步骤是什么样的？</li>\n<li>怎么在二次查询里面计算全局的偏移量？</li>\n<li>二次查询有什么优缺点？</li>\n<li>代理形态的分库分表中间件有什么优缺点？怎么解决或者改进它的缺点？</li>\n<li>使用中间表来进行分库分表，有什么优缺点？怎么设计中间表？</li>\n<li>在使用中间表的时候，你怎么保证数据一致性？你能保证强一致吗？如果不能，不一致的时间最差是多久？</li>\n<li>你们公司有没有考虑使用别的中间件来解决分页查询？你选择哪一个？为什么？</li>\n</ol><h2><a href=\"https://time.geekbang.org/column/article/678287\">18｜分库分表事务：如何同时保证分库分表、ACID及高性能？</a></h2><ol>\n<li>你们公司在分库分表之后，如何解决事务问题？</li>\n<li>什么是两阶段提交协议？有什么缺点？</li>\n<li>什么是三阶段提交协议？相比两阶段，改进点在哪里？</li>\n<li>什么是 XA 事务？</li>\n<li>你觉得 XA 事务是否满足 ACID？为什么？</li>\n<li>什么是 TCC？</li>\n<li>什么是 SAGA？</li>\n<li>什么是 AT 事务？</li>\n<li>什么是延迟事务？延迟事务失败了怎么办？为什么分库分表中间件喜欢用延迟事务？</li>\n<li>你们公司是否允许跨库事务？为什么？有什么场景是必须要使用跨库事务的？</li>\n</ol><h2><a href=\"https://time.geekbang.org/column/article/678315\">19｜分库分表无分库分表键查询：按买家分库分表，卖家怎么查？</a></h2><ol>\n<li>你们公司的分库分表是怎么分的？一般情况下怎么选择分库分表键？</li>\n<li>假设说现在我的订单表是按照买家 ID 来分库分表的，现在我卖家要查询，怎么办？</li>\n<li>利用中间表来支持无分库分表键查询的时候，怎么设计中间表？</li>\n<li>为什么在买家分库分表的时候，按照 4<em>8</em>32，但是同样的数据，按照卖家分库分表的时候，就只需要按照 2<em>8</em>16？</li>\n<li>广播有什么缺点？</li>\n<li>可以使用什么中间件来支持复杂查询？你们公司用了什么？</li>\n</ol><h2><a href=\"https://time.geekbang.org/column/article/682824\">20｜分库分表容量预估：分库分表时怎么计算所需库、表的数量？</a></h2><ol>\n<li>你是怎么估计容量的？考虑了什么因素？</li>\n<li>你怎么知道数据未来增长会有多快？</li>\n<li>你这容量是预估了几年的数据量？为什么？</li>\n<li>你是怎么利用流量录制和重放来验证数据的？</li>\n<li>在流量录制之后，重放之前，如果数据修改了，你的数据校验还能正常运行吗？</li>\n<li>你公司用的是 HTTPS 协议吗？使用 HTTPS 协议你怎么录制流量？</li>\n<li>为什么大家都喜欢用 2 的幂来作为容量？</li>\n<li>怎么扩容？有哪些步骤？</li>\n<li>如果你发现之前分库分表分太多了，能不能缩容？假如要你缩容，你怎么办？</li>\n</ol><h2><a href=\"https://time.geekbang.org/column/article/683232\">21｜数据库综合应用：怎么保证数据库高可用、高性能？</a></h2><ol>\n<li>你们有没有做过数据库优化？有没有做过 InnoDB 引擎优化？</li>\n<li>你调过什么数据库相关的参数？为什么要调？</li>\n<li>InnoDB 引擎的 buffer pool 是拿来做什么的？怎么优化它的性能？</li>\n<li>buffer pool 是不是越大越好？过大或者过小都有什么问题？怎么确定合适的大小？</li>\n<li>数据库里面有很多刷盘相关的参数，你都了解吗？调过吗？根据什么来调？</li>\n<li>你有没有做过主从分离？主从延迟是什么？怎么解决主从延迟？</li>\n<li>你们公司的数据库主节点宕机了会发生什么？</li>\n<li>什么是查询缓存？你们公司有没有用查询缓存？</li>\n</ol><h2>数据库面试一图懂</h2><p><img src=\"https://static001.geekbang.org/resource/image/yy/a2/yyb7d8934c45239ed7441a3f3d6e96a2.png?wh=8988x2807\" alt=\"图片\"></p><p>最后我将这节课的内容整理成了一张图片，图片能够更好地展现知识点之间的联系，你可以参考，如果你觉得有用的话，可以把这节课的内容分享给身边的朋友，邀他一起学习，共同进步。好了，我们下一章再见吧！</p>","comments":[{"had_liked":false,"id":379033,"user_name":"peter","can_delete":false,"product_type":"c1","uid":1058183,"ip_address":"北京","ucode":"261C3FC001DE2D","user_header":"https://static001.geekbang.org/account/avatar/00/10/25/87/f3a69d1b.jpg","comment_is_top":false,"comment_ctime":1691151455,"is_pvip":false,"replies":[{"id":138135,"content":"Q1：找不回来了，你只能说找到历史的备份数据来恢复。\nQ2：这种是通过边缘节点接入的，已经超过我们这个专栏的范畴了，我对此研究不多，因为没做过相关的事情。","user_name":"作者回复","user_name_real":"编辑","uid":1176655,"ctime":1691411985,"ip_address":"广东","comment_id":379033,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100551601,"comment_content":"请教老师两个问题：\nQ1：实际案例：误删生产数据，怎么回复？\n我加了一个群， 群里一个人周五(8月4号)说：一个用户的28条数据都让我改了，mysql事务已经提交的数据怎么能把找个事务对数据的修改恢复到没提交之前的？\nQ2：阿里这种级别的公司，其入口是怎么做的？\n用户访问一个网站，肯定是先到这个网站的一个入口，再由此入口转发给后端的服务器。网站最外面的入口，是怎么实现的？现有的外部网关，比如F5、Nginx、LVS等，处理速度都是有限的，对于阿里这种规模的公司，假如只有一个入口，肯定是处理不过来的。那怎么解决这个问题？","like_count":1,"discussions":[{"author":{"id":1176655,"avatar":"https://static001.geekbang.org/account/avatar/00/11/f4/4f/aa916c8c.jpg","nickname":"邓小明","note":"","ucode":"02243D1F7492A6","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":625155,"discussion_content":"Q1：找不回来了，你只能说找到历史的备份数据来恢复。\nQ2：这种是通过边缘节点接入的，已经超过我们这个专栏的范畴了，我对此研究不多，因为没做过相关的事情。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1691411985,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"广东","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":379075,"user_name":"学无涯","can_delete":false,"product_type":"c1","uid":1254493,"ip_address":"北京","ucode":"252754F9FCFF0C","user_header":"https://static001.geekbang.org/account/avatar/00/13/24/5d/65e61dcb.jpg","comment_is_top":false,"comment_ctime":1691294378,"is_pvip":false,"replies":[{"id":138136,"content":"坦白说，我没遇过这种误删除，然后要借助历史 binlog 来恢复的场景。一方面来说，之前待的公司都是软删除，并没有实际的硬删除。\n\n不过之前遇到过误更新的问题，但是当时我们是通过别的业务数据来推断出来正确的值，修复了数据。你也可以考虑借助类似的手段。\n\n2 这种情况，要是更新的操作已经把数据更新对了，就不用管了。","user_name":"作者回复","user_name_real":"编辑","uid":1176655,"ctime":1691412220,"ip_address":"广东","comment_id":379075,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100551601,"comment_content":"接上面同学的问题，有几个点想要请教老师：\n1. 误操作数据后，可能一段时间后才发觉，这时可能有大量binlog，如何快速找到自己误操作的那几条binlog，只能手动一条条binlog的找吗？\n2. 找到binlog时，可能已经有新的操作修改了这条数据，这种情况下该怎么办？\n3. 老师能否出一节关于误删数据如何补救的标准流程操作","like_count":0,"discussions":[{"author":{"id":1176655,"avatar":"https://static001.geekbang.org/account/avatar/00/11/f4/4f/aa916c8c.jpg","nickname":"邓小明","note":"","ucode":"02243D1F7492A6","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":625156,"discussion_content":"坦白说，我没遇过这种误删除，然后要借助历史 binlog 来恢复的场景。一方面来说，之前待的公司都是软删除，并没有实际的硬删除。\n\n不过之前遇到过误更新的问题，但是当时我们是通过别的业务数据来推断出来正确的值，修复了数据。你也可以考虑借助类似的手段。\n\n2 这种情况，要是更新的操作已经把数据更新对了，就不用管了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1691412220,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"广东","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":390200,"user_name":"Z.","can_delete":false,"product_type":"c1","uid":1568589,"ip_address":"北京","ucode":"9C9C97C470D761","user_header":"https://static001.geekbang.org/account/avatar/00/17/ef/4d/83a56dad.jpg","comment_is_top":false,"comment_ctime":1714663192,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":2,"product_id":100551601,"comment_content":"有朋友总结了这节的答案么","like_count":0}]}