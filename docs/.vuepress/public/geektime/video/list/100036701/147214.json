{"id":147214,"title":"08 | Netty怎么切换三种I/O模式？","content":"<p><strong>课件和Demo地址</strong><br>\n<a href=\"https://gitee.com/geektime-geekbang/geek_netty\">https://gitee.com/geektime-geekbang/geek_netty</a></p>","comments":[{"had_liked":false,"id":173186,"user_name":"DJZhu","can_delete":false,"product_type":"c3","uid":1297858,"ip_address":"","ucode":"82866CD74F1A6F","user_header":"https://static001.geekbang.org/account/avatar/00/13/cd/c2/4ffdf37b.jpg","comment_is_top":false,"comment_ctime":1579449672,"is_pvip":false,"replies":[{"id":67235,"content":"补充的很赞👍，谢谢","user_name":"作者回复","user_name_real":"stroller","uid":1638649,"ctime":1579560245,"ip_address":"","comment_id":173186,"utype":1}],"discussion_count":2,"race_medal":0,"score":2,"product_id":100036701,"comment_content":"关于老师提到的水平触发，边缘触发，前面的评论给出了很形象的解释。我尝试从“水平”和“边缘”的由来再解释一次。\n\n水平触发和边缘触发借鉴的是电子触发的概念。在各种数字电子元器件中，输出是随着输入变化而逻辑变化的，最常见的有“与电门”。在与电门中，两个输入的电极同为正电压(真)，则输出一个正电压(真)；任意一个输入的电位变成负电压(假)，则输出一个负电压(假)。问题在于，什么时候触发电位的变化呢？有两种方案：\n1. 在一个输入的电位变化时(边缘触发) \n2.在输入的电位状态变成目标状态时(水平触发)\n      _______\n____|          |__\n    (1) (2)\n\n你可能会问，这不是一个概念么？在电子学的概念里，不是。而在这里，网络通信借鉴了这个概念，将消息到达后，读取（触发）的时机形象地分为“水平触发”和“边缘触发”。边缘触发是指消息到来的时刻进行消费，如果一次到达的消息超过了一次消费的最大值，剩余的消息不会被继续消费（类似于高电位保持并不会边缘触发的输出变法），要消费这一部分消息要么等到下一次消息的到来，要么在这次消费之后主动触发消费剩余消息。至于水平触发，则是以是否有剩余消息为标准，有剩余，就一直主动消费直到无消息。","like_count":25,"discussions":[{"author":{"id":1638649,"avatar":"https://static001.geekbang.org/account/avatar/00/19/00/f9/44a3e5bd.jpg","nickname":"傅健","note":"","ucode":"5EA8BB26F5B036","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":481994,"discussion_content":"补充的很赞👍，谢谢","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579560245,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2051293,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/4c/dd/c6035349.jpg","nickname":"Bumblebee","note":"","ucode":"B879C8A511D08D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":556673,"discussion_content":"🚩","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1647445811,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":140521,"user_name":"HaydnSyx","can_delete":false,"product_type":"c3","uid":1185263,"ip_address":"","ucode":"2B4241CD385875","user_header":"https://static001.geekbang.org/account/avatar/00/12/15/ef/84ed23fb.jpg","comment_is_top":false,"comment_ctime":1570975495,"is_pvip":false,"replies":[{"id":54471,"content":"\n水平触发: \n     点单后，菜(数据)做好了，服务员端上来问吃不吃(读)，你不吃或者吃不完，她过会还会端过来问你吃不吃，提醒你，还没吃完，可以继续吃，反反复复。\n\n边缘触发: \n     服务员端上菜后，你一次没有吃完，好了，等你想吃剩下的时候，也别吃了，除非再点菜，才能吃到刚没吃完的。","user_name":"作者回复","user_name_real":"Geek_9bc307","uid":1638649,"ctime":1571060941,"ip_address":"","comment_id":140521,"utype":1}],"discussion_count":6,"race_medal":0,"score":2,"product_id":100036701,"comment_content":"老师，什么是水平触发？什么是边缘触发？能否举个例子说明一下呢","like_count":22,"discussions":[{"author":{"id":1638649,"avatar":"https://static001.geekbang.org/account/avatar/00/19/00/f9/44a3e5bd.jpg","nickname":"傅健","note":"","ucode":"5EA8BB26F5B036","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":470425,"discussion_content":"\n水平触发: \n     点单后，菜(数据)做好了，服务员端上来问吃不吃(读)，你不吃或者吃不完，她过会还会端过来问你吃不吃，提醒你，还没吃完，可以继续吃，反反复复。\n\n边缘触发: \n     服务员端上菜后，你一次没有吃完，好了，等你想吃剩下的时候，也别吃了，除非再点菜，才能吃到刚没吃完的。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1571060941,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1937062,"avatar":"https://static001.geekbang.org/account/avatar/00/1d/8e/a6/c3286b61.jpg","nickname":"Java垒墙工程师","note":"","ucode":"E76AE44A9C76AE","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":304253,"discussion_content":"1.水平触发level trigger  LT（状态达到）\n\n　　当被监控的文件描述符上有可读写事件发生时，会通知用户程序去读写，如果用户一次读写没取完数据，他会一直通知用户，如果这个描述符是用户不关心的，它每次都返回通知用户，则会导致用户对于关心的描述符的处理效率降低。\n\n　　复用型IO中的select和poll都是使用的水平触发方式。\n\n2.边缘触发edge trigger  ET（状态改变）\n\n　　当被监控的文件描述符上有可读写事件发生时，会通知用户程序去读写，它只会通知用户进程一次，这需要用户一次把内容读取玩，相对于水平触发，效率更高。如果用户一次没有读完数据，再次请求时，不会立即返回，需要等待下一次的新的数据到来时才会返回，这次返回的内容包括上次未取完的数据。\n\n　　信号驱动型IO使用的是边缘触发方式。\n\n　　epoll既支持水平触发也支持边缘触发，默认是水平触发。\n\n3.比较\n\n　　水平触发是状态达到后，可以多次取数据。这种模式下要注意多次读写的情况下，效率和资源利用率情况。\n\n       边缘触发是状态改变一次，取一次数据。这种模式下读写数据要注意一次是否能读写完成。","likes_number":6,"is_delete":false,"is_hidden":false,"ctime":1599530241,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1060726,"avatar":"https://static001.geekbang.org/account/avatar/00/10/2f/76/a382a707.jpg","nickname":"V","note":"","ucode":"7CA43B0FBFFA68","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1937062,"avatar":"https://static001.geekbang.org/account/avatar/00/1d/8e/a6/c3286b61.jpg","nickname":"Java垒墙工程师","note":"","ucode":"E76AE44A9C76AE","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":323246,"discussion_content":"边缘触发：如果没有新的数据写了，就一直不返回数据吗？还是说最后还是有类似水平触发的机制？只不过频率会底一点。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1604906155,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":304253,"ip_address":"","group_id":0},"score":323246,"extra":""},{"author":{"id":2051293,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/4c/dd/c6035349.jpg","nickname":"Bumblebee","note":"","ucode":"B879C8A511D08D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1937062,"avatar":"https://static001.geekbang.org/account/avatar/00/1d/8e/a6/c3286b61.jpg","nickname":"Java垒墙工程师","note":"","ucode":"E76AE44A9C76AE","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":556668,"discussion_content":"🚩","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1647445327,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":304253,"ip_address":"","group_id":0},"score":556668,"extra":""}]},{"author":{"id":1561474,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/HZn8Cl8PFrzRNaePhfAMCtiankNG4yf9VmRukH3gzVtsOogq5n4b9ZAFNHThniaXmsibibX17wTZ8kCvKkibges8efA/132","nickname":"Geek_cyy","note":"","ucode":"5FAB0E666F4F08","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":43001,"discussion_content":"水平触发就是，絮叨，不管我需不需要，总过来问。边缘触发就是直到我要人家才给，理解的对吗？","likes_number":4,"is_delete":false,"is_hidden":false,"ctime":1572839974,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1438352,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTI4akcIyIOXB2OqibTe7FF90hwsBicxkjdicUNTMorGeIictdr3OoMxhc20yznmZWwAvQVThKPFWgOyMw/132","nickname":"Chuan","note":"","ucode":"FACEC5DAC36A7A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":289491,"discussion_content":"这个应该就是Epoll对文件描述符的操作的两种模式：LT（Level Trigger）和ET（Edge Trigger）吧？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1594122825,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":140039,"user_name":"lwenbin","can_delete":false,"product_type":"c3","uid":1202109,"ip_address":"","ucode":"05C4CC6BE0B56C","user_header":"https://static001.geekbang.org/account/avatar/00/12/57/bd/acf40fa0.jpg","comment_is_top":false,"comment_ctime":1570794249,"is_pvip":false,"replies":[{"id":54140,"content":"阻塞的主体不同，这个selector你可以理解成点单的吧台，你去点单了，给你个号码，等于注册了一个事件，然后吧台记录下来了，等菜好了，就喊这个号码了。selector本身的阻塞不是我们读写数据时候的阻塞，是他在等待事件就绪的阻塞，比如菜也没好，吧台就等着，和我们数据阻塞不是一个主体。","user_name":"作者回复","user_name_real":"Geek_9bc307","uid":1638649,"ctime":1570805620,"ip_address":"","comment_id":140039,"utype":1}],"discussion_count":4,"race_medal":0,"score":2,"product_id":100036701,"comment_content":"老师，您好\n三种模式中的第二种，点单等待被叫是否有些小问题？NIO中还是要自己用selector去查询事件是否就绪的，没有事件就绪时查询会阻塞在那里，这个是否和“点单等待被叫”有些不同？\n谢谢！","like_count":9,"discussions":[{"author":{"id":1638649,"avatar":"https://static001.geekbang.org/account/avatar/00/19/00/f9/44a3e5bd.jpg","nickname":"傅健","note":"","ucode":"5EA8BB26F5B036","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":470218,"discussion_content":"阻塞的主体不同，这个selector你可以理解成点单的吧台，你去点单了，给你个号码，等于注册了一个事件，然后吧台记录下来了，等菜好了，就喊这个号码了。selector本身的阻塞不是我们读写数据时候的阻塞，是他在等待事件就绪的阻塞，比如菜也没好，吧台就等着，和我们数据阻塞不是一个主体。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1570805620,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1202109,"avatar":"https://static001.geekbang.org/account/avatar/00/12/57/bd/acf40fa0.jpg","nickname":"lwenbin","note":"","ucode":"05C4CC6BE0B56C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":30535,"discussion_content":"感觉这个在点菜场景下和“点了菜我们继续聊天喝茶时不时去问一下菜是否好，好了自己去窗口拿菜”可能更适合些。\n谢谢。","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1570841789,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1638649,"avatar":"https://static001.geekbang.org/account/avatar/00/19/00/f9/44a3e5bd.jpg","nickname":"傅健","note":"","ucode":"5EA8BB26F5B036","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":30212,"discussion_content":"它会阻塞，但是我们的读写线程不会阻塞等待，因为等着别人通知我们好了再去干活","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1570805025,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1638649,"avatar":"https://static001.geekbang.org/account/avatar/00/19/00/f9/44a3e5bd.jpg","nickname":"傅健","note":"","ucode":"5EA8BB26F5B036","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":30211,"discussion_content":"阻塞的主体不同，这个selector你可以理解成点单的吧台，你去点单了，给你个号码，等于注册了一个事件，然后吧台记录下来了，等菜好了，就喊这个号码了。selector本身的阻塞不是我们读写数据时候的阻塞，是他在等待事件就绪的阻塞，比如菜也没好，吧台就等着，和我们数据阻塞不是一个主体。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1570804961,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":157525,"user_name":"ezekiel","can_delete":false,"product_type":"c3","uid":1158795,"ip_address":"","ucode":"AB4AB6FA8612D8","user_header":"https://static001.geekbang.org/account/avatar/00/11/ae/8b/43ce01ca.jpg","comment_is_top":false,"comment_ctime":1575185601,"is_pvip":false,"replies":[{"id":61931,"content":"边缘触发相当于高速模式，理论上效率更高，但是复杂度也高，所以现在大多应用（Redis等）还是默认水平触发，如果追求要更好的性能、同时有信心编码好，可以尝试使用边缘触发，例如nginx。\n另外，还有点注意的是边缘触发只支持非阻塞模式。","user_name":"作者回复","user_name_real":"stroller","uid":1638649,"ctime":1576649314,"ip_address":"","comment_id":157525,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100036701,"comment_content":"水平触发和边缘触发，适用场景是什么？","like_count":7,"discussions":[{"author":{"id":1638649,"avatar":"https://static001.geekbang.org/account/avatar/00/19/00/f9/44a3e5bd.jpg","nickname":"傅健","note":"","ucode":"5EA8BB26F5B036","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":476455,"discussion_content":"边缘触发相当于高速模式，理论上效率更高，但是复杂度也高，所以现在大多应用（Redis等）还是默认水平触发，如果追求要更好的性能、同时有信心编码好，可以尝试使用边缘触发，例如nginx。\n另外，还有点注意的是边缘触发只支持非阻塞模式。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1576649314,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":156706,"user_name":"Coding小先","can_delete":false,"product_type":"c3","uid":1051563,"ip_address":"","ucode":"965B1CC757E026","user_header":"https://static001.geekbang.org/account/avatar/00/10/0b/ab/0e2857e5.jpg","comment_is_top":false,"comment_ctime":1574939093,"is_pvip":false,"replies":[{"id":61374,"content":"我觉得可能会吃力，但是也不定会太吃力，如果有时间，先学点java网络编程比较好，因为课程默认有点基础了，所以你可以看看课程git repo资料里面，有个直播的pdf里面有些推荐的书，其中java网络编程推荐的第二本，下个电子版的看看。那本书页数很少。但是很好，也不花钱，网上有pdf.","user_name":"作者回复","user_name_real":"stroller","uid":1638649,"ctime":1576091913,"ip_address":"","comment_id":156706,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100036701,"comment_content":"老师，只会简单的Java，学这个课程吃力吗？要不要先学学Java网络编程方面的知识","like_count":3,"discussions":[{"author":{"id":1638649,"avatar":"https://static001.geekbang.org/account/avatar/00/19/00/f9/44a3e5bd.jpg","nickname":"傅健","note":"","ucode":"5EA8BB26F5B036","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":476207,"discussion_content":"我觉得可能会吃力，但是也不定会太吃力，如果有时间，先学点java网络编程比较好，因为课程默认有点基础了，所以你可以看看课程git repo资料里面，有个直播的pdf里面有些推荐的书，其中java网络编程推荐的第二本，下个电子版的看看。那本书页数很少。但是很好，也不花钱，网上有pdf.","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1576091913,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":186187,"user_name":"Douglas","can_delete":false,"product_type":"c3","uid":1073027,"ip_address":"","ucode":"CFDE3D76B9DAE6","user_header":"https://static001.geekbang.org/account/avatar/00/10/5f/83/bb728e53.jpg","comment_is_top":false,"comment_ctime":1583776337,"is_pvip":false,"replies":[{"id":78830,"content":"这个估计让人很晕还记不住，所以才想着搞形象点，通俗（简单）易懂点","user_name":"作者回复","user_name_real":"stroller","uid":1638649,"ctime":1588056451,"ip_address":"","comment_id":186187,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100036701,"comment_content":"我看到的例子都是这种，排队啊，点餐啊，离操作系统实际处理io请求太远了，对于计算机专业的人来说很业余，老师可以从系统底层来讲么，比如不同io模型，操作系统是如何来调度io设备的","like_count":2,"discussions":[{"author":{"id":1638649,"avatar":"https://static001.geekbang.org/account/avatar/00/19/00/f9/44a3e5bd.jpg","nickname":"傅健","note":"","ucode":"5EA8BB26F5B036","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":486665,"discussion_content":"这个估计让人很晕还记不住，所以才想着搞形象点，通俗（简单）易懂点","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1588056451,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":172222,"user_name":"蛮野","can_delete":false,"product_type":"c3","uid":1010459,"ip_address":"","ucode":"4475AF1598FBFD","user_header":"https://static001.geekbang.org/account/avatar/00/0f/6b/1b/4b397b80.jpg","comment_is_top":false,"comment_ctime":1579135657,"is_pvip":false,"replies":[{"id":66947,"content":"这两个系统完全是两套系统，最本质的问题在于linux的aio还是基于epoll，用epoll来模拟的，所以性能优势&#47;复制的性价比并不高，既然不高，用的人就少，用的人少，自然就问题多，所以自然成熟度没有windows下的AIO高。\n为什么不搞的更好（学习windows）？不考虑能不能学（毕竟系统不同），我觉得需要时间来演进和发展，就像从bio到nio也需要了一段时间，同样aio肯定也需要发展，或者说以后直接演进成其他更好的模式都是有可能的。\n","user_name":"作者回复","user_name_real":"stroller","uid":1638649,"ctime":1579245608,"ip_address":"","comment_id":172222,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100036701,"comment_content":"Linux为什么没有学习采纳win的aio成熟方案呢？是这个方案与linux的设计理念有冲突吗？linux系统很多概念也都是学习过来的","like_count":1,"discussions":[{"author":{"id":1638649,"avatar":"https://static001.geekbang.org/account/avatar/00/19/00/f9/44a3e5bd.jpg","nickname":"傅健","note":"","ucode":"5EA8BB26F5B036","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":481671,"discussion_content":"这两个系统完全是两套系统，最本质的问题在于linux的aio还是基于epoll，用epoll来模拟的，所以性能优势/复制的性价比并不高，既然不高，用的人就少，用的人少，自然就问题多，所以自然成熟度没有windows下的AIO高。\n为什么不搞的更好（学习windows）？不考虑能不能学（毕竟系统不同），我觉得需要时间来演进和发展，就像从bio到nio也需要了一段时间，同样aio肯定也需要发展，或者说以后直接演进成其他更好的模式都是有可能的。\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579245608,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":140110,"user_name":"yang","can_delete":false,"product_type":"c3","uid":1074310,"ip_address":"","ucode":"1AA1497C5A293C","user_header":"https://static001.geekbang.org/account/avatar/00/10/64/86/f5a9403a.jpg","comment_is_top":false,"comment_ctime":1570810638,"is_pvip":false,"replies":[{"id":54590,"content":"主要移除原因还是性能在linux下没优势，后来想重新引入，但是前提是要证明有很大性能优势。关键移除后，一般人没动力再搞再研究再证明了","user_name":"作者回复","user_name_real":"Geek_9bc307","uid":1638649,"ctime":1571131124,"ip_address":"","comment_id":140110,"utype":1}],"discussion_count":2,"race_medal":0,"score":2,"product_id":100036701,"comment_content":"叫老师好呢 还是叫健哥好呢？\n\n老师，视频里提到 linux下的aio实现不够成熟， 应该怎么理解啊？","like_count":1,"discussions":[{"author":{"id":1638649,"avatar":"https://static001.geekbang.org/account/avatar/00/19/00/f9/44a3e5bd.jpg","nickname":"傅健","note":"","ucode":"5EA8BB26F5B036","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":470250,"discussion_content":"主要移除原因还是性能在linux下没优势，后来想重新引入，但是前提是要证明有很大性能优势。关键移除后，一般人没动力再搞再研究再证明了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571131124,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1299948,"avatar":"https://static001.geekbang.org/account/avatar/00/13/d5/ec/87d33ab7.jpg","nickname":"没有昵称","note":"","ucode":"CE20F68C5AF547","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":31319,"discussion_content":"目前Linux的AIO是在glibc中基于线程去实现的，Linux内核的AIO实现还正在进行中。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1570895027,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":139765,"user_name":"Gary","can_delete":false,"product_type":"c3","uid":1218372,"ip_address":"","ucode":"12265D6A578113","user_header":"https://static001.geekbang.org/account/avatar/00/12/97/44/3929e620.jpg","comment_is_top":false,"comment_ctime":1570719876,"is_pvip":false,"replies":[{"id":54120,"content":"是的","user_name":"作者回复","user_name_real":"Geek_9bc307","uid":1638649,"ctime":1570792116,"ip_address":"","comment_id":139765,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100036701,"comment_content":"windows的aio比较成熟，指的是iocp模型的成熟吗？","like_count":1,"discussions":[{"author":{"id":1638649,"avatar":"https://static001.geekbang.org/account/avatar/00/19/00/f9/44a3e5bd.jpg","nickname":"傅健","note":"","ucode":"5EA8BB26F5B036","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":470103,"discussion_content":"是的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1570792116,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":203473,"user_name":"just code it","can_delete":false,"product_type":"c3","uid":1140836,"ip_address":"","ucode":"9953DAD398F33D","user_header":"https://static001.geekbang.org/account/avatar/00/11/68/64/756ba667.jpg","comment_is_top":false,"comment_ctime":1586218807,"is_pvip":false,"replies":[{"id":78820,"content":"是一种保护，也是一种暗示，告诉你它不会变，不让变，也不需要你担心它变。","user_name":"作者回复","user_name_real":"stroller","uid":1638649,"ctime":1588055892,"ip_address":"","comment_id":203473,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100036701,"comment_content":"老师我有个问题，源码里边，方法的形参很多有时候都要加上final这样做有什么好处吗？","like_count":0,"discussions":[{"author":{"id":1638649,"avatar":"https://static001.geekbang.org/account/avatar/00/19/00/f9/44a3e5bd.jpg","nickname":"傅健","note":"","ucode":"5EA8BB26F5B036","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":490872,"discussion_content":"是一种保护，也是一种暗示，告诉你它不会变，不让变，也不需要你担心它变。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1588055892,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":197963,"user_name":"随遇而安","can_delete":false,"product_type":"c3","uid":1574681,"ip_address":"","ucode":"277D28B65E8F32","user_header":"https://static001.geekbang.org/account/avatar/00/18/07/19/0d8c5095.jpg","comment_is_top":false,"comment_ctime":1585405416,"is_pvip":false,"replies":[{"id":78807,"content":"你这个笔记咋直接照搬，没有加上自己的理解啊，哈哈","user_name":"作者回复","user_name_real":"stroller","uid":1638649,"ctime":1588054409,"ip_address":"","comment_id":197963,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100036701,"comment_content":"笔记http:&#47;&#47;note.youdao.com&#47;noteshare?id=e1048dd75354476da5d5f5765204a7b5&amp;sub=DA3EF901F3A6458C947BF32E2E8B8986","like_count":0,"discussions":[{"author":{"id":1638649,"avatar":"https://static001.geekbang.org/account/avatar/00/19/00/f9/44a3e5bd.jpg","nickname":"傅健","note":"","ucode":"5EA8BB26F5B036","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":489629,"discussion_content":"你这个笔记咋直接照搬，没有加上自己的理解啊，哈哈","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1588054409,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":192258,"user_name":"ran","can_delete":false,"product_type":"c3","uid":1296666,"ip_address":"","ucode":"D5F4DFA2644A05","user_header":"https://static001.geekbang.org/account/avatar/00/13/c9/1a/7f326801.jpg","comment_is_top":false,"comment_ctime":1584844328,"is_pvip":false,"replies":[{"id":78826,"content":"这个实现都是底层实现了，对于java开发者而言可以认为是透明的，只要会用就行了，否则你要去翻c系列代码实现了。","user_name":"作者回复","user_name_real":"stroller","uid":1638649,"ctime":1588056211,"ip_address":"","comment_id":192258,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100036701,"comment_content":"看完所有评论才大概对边缘触发和水平触发有的了解。不知道具体咋实现","like_count":0,"discussions":[{"author":{"id":1638649,"avatar":"https://static001.geekbang.org/account/avatar/00/19/00/f9/44a3e5bd.jpg","nickname":"傅健","note":"","ucode":"5EA8BB26F5B036","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":488351,"discussion_content":"这个实现都是底层实现了，对于java开发者而言可以认为是透明的，只要会用就行了，否则你要去翻c系列代码实现了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1588056211,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":140822,"user_name":"加载中……","can_delete":false,"product_type":"c3","uid":1366948,"ip_address":"","ucode":"3E59A0A0784D0A","user_header":"https://static001.geekbang.org/account/avatar/00/14/db/a4/191be6ad.jpg","comment_is_top":false,"comment_ctime":1571053575,"is_pvip":false,"replies":[{"id":54454,"content":"是的，就像有的人全栈一样，什么都会一点，但是有的人只专一门，但是精通一样，一个通用一个专用的问题","user_name":"作者回复","user_name_real":"Geek_9bc307","uid":1638649,"ctime":1571057137,"ip_address":"","comment_id":140822,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100036701,"comment_content":"老师好，有个问题想请教下：\nNetty对NIO支持有三种实现：common、linux、Mac&#47;BSD。\n是不是linux、Mac&#47;BSD只能在相应的OS下使用，不能随便用。而common既可以在linux也可以在Mac&#47;BSD使用？\n","like_count":0,"discussions":[{"author":{"id":1638649,"avatar":"https://static001.geekbang.org/account/avatar/00/19/00/f9/44a3e5bd.jpg","nickname":"傅健","note":"","ucode":"5EA8BB26F5B036","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":470577,"discussion_content":"是的，就像有的人全栈一样，什么都会一点，但是有的人只专一门，但是精通一样，一个通用一个专用的问题","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571057137,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":139675,"user_name":"henry","can_delete":false,"product_type":"c3","uid":1075941,"ip_address":"","ucode":"0ACD12F363F8DE","user_header":"http://thirdqq.qlogo.cn/qqapp/101418266/D6DD8CB1004D442B48914656340277F3/100","comment_is_top":false,"comment_ctime":1570702684,"is_pvip":false,"replies":[{"id":53908,"content":"尽量贴近生活来讲解，或许深究起来不够严谨，但是容易理解，也好记点。呵呵","user_name":"作者回复","user_name_real":"Geek_9bc307","uid":1638649,"ctime":1570710568,"ip_address":"","comment_id":139675,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100036701,"comment_content":"三种io模式比喻太形象了 ","like_count":0,"discussions":[{"author":{"id":1638649,"avatar":"https://static001.geekbang.org/account/avatar/00/19/00/f9/44a3e5bd.jpg","nickname":"傅健","note":"","ucode":"5EA8BB26F5B036","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":470050,"discussion_content":"尽量贴近生活来讲解，或许深究起来不够严谨，但是容易理解，也好记点。呵呵","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1570710568,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":141075,"user_name":"dingdongfm","can_delete":false,"product_type":"c3","uid":1564213,"ip_address":"","ucode":"7D17D2BC392A66","user_header":"","comment_is_top":false,"comment_ctime":1571110089,"is_pvip":false,"replies":null,"discussion_count":1,"race_medal":0,"score":3,"product_id":100036701,"comment_content":"阻塞、非阻塞和同步、异步其实针对的对象是不一样的。\n阻塞、非阻塞说的是调用者;\n同步、异步说的是被调用者。\n\n同步请求，A调用B，B的处理是同步的，在处理完之前他不会通知A，只有处理完之后才会明确的通知A。\n异步请求，A调用B，B的处理是异步的，B在接到请求后先告诉A我已经接到请求了，然后异步去处理，处理完之后通过回调等方式再通知A。\n所以说，同步和异步最大的区别就是被调用方的执行方式和返回时机。同步指的是被调用方做完事情之后再返回，异步指的是被调用方先返回，然后再做事情，做完之后再想办法通知调用方。\n\n阻塞请求，A调用B，A一直等着B的返回，别的事情什么也不干。\n非阻塞请求，A调用B，A不用一直等着B的返回，先去忙别的事情了。\n所以说， 阻塞和非阻塞最大的区别就是在被调用方返回结果之前的这段时间内，调用方是否一直等待。阻塞指的是调用方一直等待别的事情什么都不做。非阻塞指的是调用方先去忙别的事情。","like_count":34,"discussions":[{"author":{"id":1054491,"avatar":"https://static001.geekbang.org/account/avatar/00/10/17/1b/4a088e67.jpg","nickname":"欧阳田","note":"","ucode":"24004916354446","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":36265,"discussion_content":"您好。按照老师说的内容，阻塞与非阻塞研究的是系统空间和外界输入与输出的关系；而同步与异步研究的是系统空间和用户空间关系，它是从底层操作来细微定义的。你说的也对，但是这个应该是广义上的定义不精确，按照你的定义其实阻塞跟同步一个意思，只是你主观拆解了针对的主体对象。希望讨论一下。","likes_number":5,"is_delete":false,"is_hidden":false,"ctime":1571357300,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":159416,"user_name":"小不点","can_delete":false,"product_type":"c3","uid":1351860,"ip_address":"","ucode":"C307D44A185C34","user_header":"https://static001.geekbang.org/account/avatar/00/14/a0/b4/5173f1af.jpg","comment_is_top":false,"comment_ctime":1575618382,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":3,"product_id":100036701,"comment_content":"看到后面回头重温捡漏一遍，当被监控的文件有可读写事件发生时，epoll_wait()会通知处理程序去读写，如果这次没有把数据一次性全部读写完的话，水平触发：那么下次调用 epoll_wait()时通知你上次没读写完，如果一直不处理它会一直通知你；边缘触发：下次调用 epoll_wait()的时候不会通知你，也就是只通知一次，知道该文件上出现第二次可读写事件才会通知，效率比水平触发要高，结合老师给楼上举例吃饭的生活场景就好理解多了","like_count":6},{"had_liked":false,"id":156679,"user_name":"刘伟","can_delete":false,"product_type":"c3","uid":1425456,"ip_address":"","ucode":"26A77D2F6429F0","user_header":"https://static001.geekbang.org/account/avatar/00/15/c0/30/53965ee0.jpg","comment_is_top":false,"comment_ctime":1574934707,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":3,"product_id":100036701,"comment_content":"这照片是合肥思科旁边的食堂吧","like_count":3},{"had_liked":false,"id":220596,"user_name":"∷鹰击长空","can_delete":false,"product_type":"c3","uid":1083922,"ip_address":"","ucode":"C372BB20795262","user_header":"https://static001.geekbang.org/account/avatar/00/10/8a/12/95d6e8d5.jpg","comment_is_top":false,"comment_ctime":1590292022,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":3,"product_id":100036701,"comment_content":"bio 阻塞同步模式\nnio 非阻塞同步模式\naio 非阻塞异步模式","like_count":1},{"had_liked":false,"id":203449,"user_name":"Leo","can_delete":false,"product_type":"c3","uid":1066546,"ip_address":"","ucode":"1075986F8D116D","user_header":"https://static001.geekbang.org/account/avatar/00/10/46/32/2bb481d2.jpg","comment_is_top":false,"comment_ctime":1586193293,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":3,"product_id":100036701,"comment_content":"老师,linux下aio实现不够成熟具体是哪里不成熟?libaio有什么问题?网上说并没有支持网络aio,仅仅是磁盘io支持说法对么?","like_count":1},{"had_liked":false,"id":183117,"user_name":"ly","can_delete":false,"product_type":"c3","uid":1221628,"ip_address":"","ucode":"5E2B85252DABF3","user_header":"https://static001.geekbang.org/account/avatar/00/12/a3/fc/379387a4.jpg","comment_is_top":false,"comment_ctime":1582956155,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":3,"product_id":100036701,"comment_content":"老师，有个小问题，请问什么时候表示“菜已经好了”，我知道TCP是流式协议，例如发送端发了一块大数据，可能被分成很多份进行传输，当请求的第一个数据包到达服务端，就表示菜已经好了？","like_count":1},{"had_liked":false,"id":362208,"user_name":"Geek_09b0c3","can_delete":false,"product_type":"c3","uid":1647169,"ip_address":"广东","ucode":"BD53D4B2C9201D","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/uUNsibxx9EvpiaeG5VVd6slEia0QGFsIdOPwxxz7NmulA1dpSDktTmcV9pa6DPiaj1aj8T9eafVfDSYq8TiaKVxw8sg/132","comment_is_top":false,"comment_ctime":1668308826,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":4,"product_id":100036701,"comment_content":"linux对aio支持体现在哪里不好呢？","like_count":0},{"had_liked":false,"id":268718,"user_name":"向陽花开花向陽🌸","can_delete":false,"product_type":"c3","uid":2344609,"ip_address":"","ucode":"9FDD01BE0E42CD","user_header":"https://static001.geekbang.org/account/avatar/00/23/c6/a1/3bdcde91.jpg","comment_is_top":false,"comment_ctime":1608305580,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":4,"product_id":100036701,"comment_content":"下班回来一口气看到这，比看电影还放松！极客时间课程不少，但是视频课程没几个！给老师大大得赞👍","like_count":0},{"had_liked":false,"id":234934,"user_name":"V","can_delete":false,"product_type":"c3","uid":1060726,"ip_address":"","ucode":"7CA43B0FBFFA68","user_header":"https://static001.geekbang.org/account/avatar/00/10/2f/76/a382a707.jpg","comment_is_top":false,"comment_ctime":1594829466,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":4,"product_id":100036701,"comment_content":"tomcat中的nio模式是单独实现的吗？和netty思路一样？ 性能是否能媲美netty","like_count":0},{"had_liked":false,"id":230279,"user_name":"minjiejiang","can_delete":false,"product_type":"c3","uid":1068679,"ip_address":"","ucode":"559DCC1F4178E8","user_header":"https://static001.geekbang.org/account/avatar/00/10/4e/87/5d0d161a.jpg","comment_is_top":false,"comment_ctime":1593334896,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":4,"product_id":100036701,"comment_content":"边缘触发是指什么意思？","like_count":0},{"had_liked":false,"id":193433,"user_name":"小陈","can_delete":false,"product_type":"c3","uid":1009385,"ip_address":"","ucode":"A03A299310AD18","user_header":"https://static001.geekbang.org/account/avatar/00/0f/66/e9/814d057a.jpg","comment_is_top":false,"comment_ctime":1584892648,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":4,"product_id":100036701,"comment_content":"确实很灵活，运用了很多模式","like_count":0},{"had_liked":false,"id":193408,"user_name":"小陈","can_delete":false,"product_type":"c3","uid":1009385,"ip_address":"","ucode":"A03A299310AD18","user_header":"https://static001.geekbang.org/account/avatar/00/0f/66/e9/814d057a.jpg","comment_is_top":false,"comment_ctime":1584892023,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":4,"product_id":100036701,"comment_content":"学到很多","like_count":0},{"had_liked":false,"id":148234,"user_name":"徐文锋","can_delete":false,"product_type":"c3","uid":1706966,"ip_address":"","ucode":"CC45BAE23CA065","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/PiajxSqBRaEJO1Savx83xQc5xc8D6adlvhR7mLCe1Cm7jXJPhIpa4pKQo0RGTEuFCaJYkdq2R7RnKiaiaGYicxyD3A/132","comment_is_top":false,"comment_ctime":1572961277,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":4,"product_id":100036701,"comment_content":"打饭端菜这三个例子很适合java的同步调用，异步调用，和回调的场景化解释","like_count":0},{"had_liked":false,"id":141457,"user_name":"whosyourdaddy","can_delete":false,"product_type":"c3","uid":1700984,"ip_address":"","ucode":"94A5C71339566F","user_header":"https://static001.geekbang.org/account/avatar/00/19/f4/78/764eae38.jpg","comment_is_top":false,"comment_ctime":1571156793,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":4,"product_id":100036701,"comment_content":"老师讲的很有意思","like_count":0}]}