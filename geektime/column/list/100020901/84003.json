{"id":84003,"title":"44 | 套路篇：网络性能优化的几个思路（下）","content":"<p>你好，我是倪朋飞。</p><p>上一节，我们学了网络性能优化的几个思路，我先带你简单复习一下。</p><p>在优化网络的性能时，你可以结合 Linux 系统的网络协议栈和网络收发流程，然后从应用程序、套接字、传输层、网络层再到链路层等每个层次，进行逐层优化。上一期我们主要学习了应用程序和套接字的优化思路，比如：</p><ul>\n<li>\n<p>在应用程序中，主要优化 I/O 模型、工作模型以及应用层的网络协议；</p>\n</li>\n<li>\n<p>在套接字层中，主要优化套接字的缓冲区大小。</p>\n</li>\n</ul><p>今天，我们顺着 TCP/IP 网络模型，继续向下，看看如何从传输层、网络层以及链路层中，优化 Linux 网络性能。</p><h2>网络性能优化</h2><h3>传输层</h3><p>传输层最重要的是 TCP 和 UDP 协议，所以这儿的优化，其实主要就是对这两种协议的优化。</p><p>我们首先来看TCP协议的优化。</p><p>TCP 提供了面向连接的可靠传输服务。要优化 TCP，我们首先要掌握 TCP 协议的基本原理，比如流量控制、慢启动、拥塞避免、延迟确认以及状态流图（如下图所示）等。</p><p><img src=\"https://static001.geekbang.org/resource/image/c0/d1/c072bb9c9dfd727ed187bc24beb3e3d1.png?wh=1920*1447\" alt=\"\"></p><p>关于这些原理的细节，我就不再展开讲解了。如果你还没有完全掌握，建议你先学完这些基本原理后再来优化，而不是囫囵吞枣地乱抄乱试。</p><p>掌握这些原理后，你就可以在不破坏 TCP 正常工作的基础上，对它进行优化。下面，我分几类情况详细说明。</p><!-- [[[read_end]]] --><p>第一类，在请求数比较大的场景下，你可能会看到大量处于 TIME_WAIT 状态的连接，它们会占用大量内存和端口资源。这时，我们可以优化与 TIME_WAIT 状态相关的内核选项，比如采取下面几种措施。</p><ul>\n<li>\n<p>增大处于 TIME_WAIT 状态的连接数量 net.ipv4.tcp_max_tw_buckets ，并增大连接跟踪表的大小 net.netfilter.nf_conntrack_max。</p>\n</li>\n<li>\n<p>减小 net.ipv4.tcp_fin_timeout 和 net.netfilter.nf_conntrack_tcp_timeout_time_wait ，让系统尽快释放它们所占用的资源。</p>\n</li>\n<li>\n<p>开启端口复用 net.ipv4.tcp_tw_reuse。这样，被 TIME_WAIT 状态占用的端口，还能用到新建的连接中。</p>\n</li>\n<li>\n<p>增大本地端口的范围 net.ipv4.ip_local_port_range 。这样就可以支持更多连接，提高整体的并发能力。</p>\n</li>\n<li>\n<p>增加最大文件描述符的数量。你可以使用 fs.nr_open 和 fs.file-max ，分别增大进程和系统的最大文件描述符数；或在应用程序的 systemd 配置文件中，配置 LimitNOFILE ，设置应用程序的最大文件描述符数。</p>\n</li>\n</ul><p>第二类，为了缓解 SYN FLOOD 等，利用 TCP 协议特点进行攻击而引发的性能问题，你可以考虑优化与 SYN 状态相关的内核选项，比如采取下面几种措施。</p><ul>\n<li>\n<p>增大 TCP 半连接的最大数量 net.ipv4.tcp_max_syn_backlog ，或者开启 TCP SYN Cookies net.ipv4.tcp_syncookies ，来绕开半连接数量限制的问题（注意，这两个选项不可同时使用）。</p>\n</li>\n<li>\n<p>减少 SYN_RECV 状态的连接重传 SYN+ACK 包的次数 net.ipv4.tcp_synack_retries。</p>\n</li>\n</ul><p>第三类，在长连接的场景中，通常使用 Keepalive 来检测 TCP 连接的状态，以便对端连接断开后，可以自动回收。但是，系统默认的 Keepalive 探测间隔和重试次数，一般都无法满足应用程序的性能要求。所以，这时候你需要优化与 Keepalive 相关的内核选项，比如：</p><ul>\n<li>\n<p>缩短最后一次数据包到 Keepalive 探测包的间隔时间 net.ipv4.tcp_keepalive_time；</p>\n</li>\n<li>\n<p>缩短发送 Keepalive 探测包的间隔时间 net.ipv4.tcp_keepalive_intvl；</p>\n</li>\n<li>\n<p>减少Keepalive 探测失败后，一直到通知应用程序前的重试次数 net.ipv4.tcp_keepalive_probes。</p>\n</li>\n</ul><p>讲了这么多TCP 优化方法，我也把它们整理成了一个表格，方便你在需要时参考（数值仅供参考，具体配置还要结合你的实际场景来调整）：</p><p><img src=\"https://static001.geekbang.org/resource/image/b0/e0/b07ea76a8737ed93395736795ede44e0.png?wh=1664*2147\" alt=\"\"></p><p>优化 TCP 性能时，你还要注意，如果同时使用不同优化方法，可能会产生冲突。</p><p>比如，就像网络请求延迟的案例中我们曾经分析过的，服务器端开启 Nagle 算法，而客户端开启延迟确认机制，就很容易导致网络延迟增大。</p><p>另外，在使用  NAT 的服务器上，如果开启 net.ipv4.tcp_tw_recycle ，就很容易导致各种连接失败。实际上，由于坑太多，这个选项在内核的 4.1 版本中已经删除了。</p><p>说完TCP，我们再来看 UDP 的优化。</p><p>UDP 提供了面向数据报的网络协议，它不需要网络连接，也不提供可靠性保障。所以，UDP 优化，相对于 TCP 来说，要简单得多。这里我也总结了常见的几种优化方案。</p><ul>\n<li>\n<p>跟上篇套接字部分提到的一样，增大套接字缓冲区大小以及 UDP 缓冲区范围；</p>\n</li>\n<li>\n<p>跟前面 TCP 部分提到的一样，增大本地端口号的范围；</p>\n</li>\n<li>\n<p>根据 MTU 大小，调整 UDP 数据包的大小，减少或者避免分片的发生。</p>\n</li>\n</ul><h3>网络层</h3><p>接下来，我们再来看网络层的优化。</p><p>网络层，负责网络包的封装、寻址和路由，包括 IP、ICMP 等常见协议。在网络层，最主要的优化，其实就是对路由、 IP 分片以及 ICMP 等进行调优。</p><p>第一种，从路由和转发的角度出发，你可以调整下面的内核选项。</p><ul>\n<li>\n<p>在需要转发的服务器中，比如用作 NAT 网关的服务器或者使用 Docker 容器时，开启 IP 转发，即设置 net.ipv4.ip_forward = 1。</p>\n</li>\n<li>\n<p>调整数据包的生存周期 TTL，比如设置 net.ipv4.ip_default_ttl = 64。注意，增大该值会降低系统性能。</p>\n</li>\n<li>\n<p>开启数据包的反向地址校验，比如设置 net.ipv4.conf.eth0.rp_filter = 1。这样可以防止 IP 欺骗，并减少伪造 IP 带来的 DDoS 问题。</p>\n</li>\n</ul><p>第二种，从分片的角度出发，最主要的是调整 MTU（Maximum Transmission Unit）的大小。</p><p>通常，MTU 的大小应该根据以太网的标准来设置。以太网标准规定，一个网络帧最大为 1518B，那么去掉以太网头部的 18B 后，剩余的 1500 就是以太网 MTU 的大小。</p><p>在使用 VXLAN、GRE 等叠加网络技术时，要注意，网络叠加会使原来的网络包变大，导致 MTU 也需要调整。</p><p>比如，就以 VXLAN 为例，它在原来报文的基础上，增加了 14B 的以太网头部、 8B 的 VXLAN 头部、8B 的 UDP 头部以及 20B 的 IP 头部。换句话说，每个包比原来增大了 50B。</p><p>所以，我们就需要把交换机、路由器等的 MTU，增大到 1550， 或者把 VXLAN 封包前（比如虚拟化环境中的虚拟网卡）的 MTU 减小为 1450。</p><p>另外，现在很多网络设备都支持巨帧，如果是这种环境，你还可以把 MTU 调大为 9000，以提高网络吞吐量。</p><p>第三种，从 ICMP 的角度出发，为了避免 ICMP 主机探测、ICMP Flood 等各种网络问题，你可以通过内核选项，来限制 ICMP 的行为。</p><ul>\n<li>\n<p>比如，你可以禁止 ICMP 协议，即设置 net.ipv4.icmp_echo_ignore_all = 1。这样，外部主机就无法通过 ICMP 来探测主机。</p>\n</li>\n<li>\n<p>或者，你还可以禁止广播 ICMP，即设置 net.ipv4.icmp_echo_ignore_broadcasts = 1。</p>\n</li>\n</ul><h3>链路层</h3><p>网络层的下面是链路层，所以最后，我们再来看链路层的优化方法。</p><p>链路层负责网络包在物理网络中的传输，比如 MAC 寻址、错误侦测以及通过网卡传输网络帧等。自然，链路层的优化，也是围绕这些基本功能进行的。接下来，我们从不同的几个方面分别来看。</p><p>由于网卡收包后调用的中断处理程序（特别是软中断），需要消耗大量的 CPU。所以，将这些中断处理程序调度到不同的 CPU 上执行，就可以显著提高网络吞吐量。这通常可以采用下面两种方法。</p><ul>\n<li>\n<p>比如，你可以为网卡硬中断配置 CPU 亲和性（smp_affinity），或者开启 irqbalance 服务。</p>\n</li>\n<li>\n<p>再如，你可以开启 <strong>RPS</strong>（Receive Packet Steering）和 <strong>RFS</strong>（Receive Flow Steering），将应用程序和软中断的处理，调度到相同CPU 上，这样就可以增加 CPU 缓存命中率，减少网络延迟。</p>\n</li>\n</ul><p>另外，现在的网卡都有很丰富的功能，原来在内核中通过软件处理的功能，可以卸载到网卡中，通过硬件来执行。</p><ul>\n<li>\n<p><strong>TSO</strong>（TCP Segmentation Offload）和 <strong>UFO</strong>（UDP Fragmentation Offload）：在 TCP/UDP 协议中直接发送大包；而TCP 包的分段（按照 MSS 分段）和 UDP 的分片（按照 MTU 分片）功能，由网卡来完成 。</p>\n</li>\n<li>\n<p><strong>GSO</strong>（Generic Segmentation Offload）：在网卡不支持 TSO/UFO 时，将 TCP/UDP 包的分段，延迟到进入网卡前再执行。这样，不仅可以减少 CPU 的消耗，还可以在发生丢包时只重传分段后的包。</p>\n</li>\n<li>\n<p><strong>LRO</strong>（Large Receive Offload）：在接收 TCP 分段包时，由网卡将其组装合并后，再交给上层网络处理。不过要注意，在需要 IP 转发的情况下，不能开启 LRO，因为如果多个包的头部信息不一致，LRO 合并会导致网络包的校验错误。</p>\n</li>\n<li>\n<p><strong>GRO</strong>（Generic Receive Offload）：GRO 修复了 LRO 的缺陷，并且更为通用，同时支持 TCP 和 UDP。</p>\n</li>\n<li>\n<p><strong>RSS</strong>（Receive Side Scaling）：也称为多队列接收，它基于硬件的多个接收队列，来分配网络接收进程，这样可以让多个 CPU 来处理接收到的网络包。</p>\n</li>\n<li>\n<p><strong>VXLAN</strong> 卸载：也就是让网卡来完成 VXLAN 的组包功能。</p>\n</li>\n</ul><p>最后，对于网络接口本身，也有很多方法，可以优化网络的吞吐量。</p><ul>\n<li>\n<p>比如，你可以开启网络接口的多队列功能。这样，每个队列就可以用不同的中断号，调度到不同 CPU 上执行，从而提升网络的吞吐量。</p>\n</li>\n<li>\n<p>再如，你可以增大网络接口的缓冲区大小，以及队列长度等，提升网络传输的吞吐量（注意，这可能导致延迟增大）。</p>\n</li>\n<li>\n<p>你还可以使用 Traffic Control 工具，为不同网络流量配置 QoS。</p>\n</li>\n</ul><p>到这里，我就从应用程序、套接字、传输层、网络层，再到链路层，分别介绍了相应的网络性能优化方法。通过这些方法的优化后，网络性能就可以满足绝大部分场景了。</p><p>最后，别忘了一种极限场景。还记得我们学过的的 C10M 问题吗？</p><p>在单机并发 1000 万的场景中，对Linux 网络协议栈进行的各种优化策略，基本都没有太大效果。因为这种情况下，网络协议栈的冗长流程，其实才是最主要的性能负担。</p><p>这时，我们可以用两种方式来优化。</p><p>第一种，使用 DPDK 技术，跳过内核协议栈，直接由用户态进程用轮询的方式，来处理网络请求。同时，再结合大页、CPU 绑定、内存对齐、流水线并发等多种机制，优化网络包的处理效率。</p><p>第二种，使用内核自带的 XDP 技术，在网络包进入内核协议栈前，就对其进行处理，这样也可以实现很好的性能。</p><h2>小结</h2><p>这两节课，我们一起梳理了常见的 Linux 网络性能优化方法。</p><p>在优化网络的性能时，我们可以结合 Linux 系统的网络协议栈和网络收发流程，从应用程序、套接字、传输层、网络层再到链路层等，对每个层次进行逐层优化。</p><p>实际上，我们分析和定位网络瓶颈，也是基于这些网络层进行的。而定位出网络性能瓶颈后，我们就可以根据瓶颈所在的协议层，进行优化。具体而言：</p><ul>\n<li>\n<p>在应用程序中，主要是优化 I/O 模型、工作模型以及应用层的网络协议；</p>\n</li>\n<li>\n<p>在套接字层中，主要是优化套接字的缓冲区大小；</p>\n</li>\n<li>\n<p>在传输层中，主要是优化 TCP 和 UDP 协议；</p>\n</li>\n<li>\n<p>在网络层中，主要是优化路由、转发、分片以及 ICMP 协议；</p>\n</li>\n<li>\n<p>最后，在链路层中，主要是优化网络包的收发、网络功能卸载以及网卡选项。</p>\n</li>\n</ul><p>如果这些方法依然不能满足你的要求，那就可以考虑，使用 DPDK 等用户态方式，绕过内核协议栈；或者，使用 XDP，在网络包进入内核协议栈前进行处理。</p><h2>思考</h2><p>在整个板块的学习中，我只列举了最常见的几个网络性能优化思路。除此之外，一定还有很多其他从应用程序、系统再到网络设备的优化方法。我想请你一起来聊聊，你还知道哪些优化方法吗？</p><p>欢迎在留言区跟我讨论，也欢迎你把这篇文章分享给你的同事、朋友。我们一起在实战中演练，在交流中进步。</p><p></p>","comments":[{"had_liked":false,"id":82325,"user_name":"C.C","can_delete":false,"product_type":"c1","uid":1199521,"ip_address":"","ucode":"B88CE3DE4E5680","user_header":"","comment_is_top":false,"comment_ctime":1554185799,"is_pvip":false,"replies":[{"id":"29850","content":"嗯嗯，总结的不错👍","user_name":"作者回复","comment_id":82325,"uid":"1001282","ip_address":"","utype":1,"ctime":1554211264,"user_name_real":"倪朋飞"}],"discussion_count":1,"race_medal":0,"score":"83158564423","product_id":100020901,"comment_content":"timewait的优化：<br>timewait是由主动的一方主动关闭的，我认为应用层最好能够池化这些连接，而不是直接关闭这些链接; 另外，比如对于http有些场景的请求，对于需要关闭链接的情况，多个数据请求最好合并发送，也可以减少timewait的情况. 一半来说，我觉得一个服务器上有1W个左右的timewait的链接还是比较正常的.<br>keepAlive，对于长连接的场景，我觉得tcp层是最好不要开. 因为1.tcp默认是7200秒，需要通过更改内核的方式，不知道在何种情况下是合适的. 2:长连接的情况下，应用层也是需要心跳检查的,这个时候tcp层开keepalive话，反而是中浪费.<br>tcp层和应用层的网络优化，除了 tcp&#47;ip详解卷一，有一本 effective Tcp&#47;ip programming 也是不错的","like_count":20,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":445553,"discussion_content":"嗯嗯，总结的不错👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1554211264,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":72572,"user_name":"我来也","can_delete":false,"product_type":"c1","uid":1205253,"ip_address":"","ucode":"773D6104F56767","user_header":"https://static001.geekbang.org/account/avatar/00/12/64/05/6989dce6.jpg","comment_is_top":false,"comment_ctime":1551669546,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"83156048170","product_id":100020901,"comment_content":"[D44打卡]<br>这个优化套路很全面,值得好好收藏.<br>根据TCP&#47;IP的网络模型 从四层协议中的下面三层:传输、网络、链路层，逐步分析每层的优化方法。<br><br>以前知道的只有些浅显的：<br>一个MTU通常在1500字节<br>增加最大文件描述符的数量：ulimit -n xxxx<br>减少TIME_WAIT状态的时间 让系统尽快释放<br>真大TIME_WAIT状态的连接数<br><br>以前的都是遇到一个,谷歌一个. 也没见谁有这么全面的优化思路.<br>在不知道所以然的情况下,还很可能会出现返优化的情况.哈哈.<br><br>虽然目前工作中还暂时用不上那么多高大上的优化方法，但有了个印象，以后遇到了再来复习也是极好的。","like_count":20},{"had_liked":false,"id":80956,"user_name":"橙汁","can_delete":false,"product_type":"c1","uid":1332257,"ip_address":"","ucode":"EC3FF10D708C9D","user_header":"https://static001.geekbang.org/account/avatar/00/14/54/21/0bac2254.jpg","comment_is_top":false,"comment_ctime":1553763785,"is_pvip":false,"replies":[{"id":"29613","content":"嗯 是的","user_name":"作者回复","comment_id":80956,"uid":"1001282","ip_address":"","utype":1,"ctime":1554021729,"user_name_real":"倪朋飞"}],"discussion_count":4,"race_medal":0,"score":"27323567561","product_id":100020901,"comment_content":"关于tcp这块有个关于开启时间戳的验证 参数为tcp_timestamps，有nat环境千万不要打开，可以通过cat &#47;proc&#47;sys&#47;net&#47;ipv4&#47;tcp_timestamps 是否开启","like_count":7,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":445027,"discussion_content":"嗯 是的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1554021729,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1292330,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/VX0ib4CV0m7fwxB2xFcIJaYYWXXpfxxYbfBErqBej9395hgZszqS3dz9bThCxOuFfJ8Xibx9HbdNmZJwL5m33wIw/132","nickname":"chaoxifuchen","note":"","ucode":"95DCC5C4994F68","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":398542,"discussion_content":"应该是tcp_recycle和tcp_timestamps 不能同时开，一般是把recycle关闭","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1632810609,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1218147,"avatar":"https://static001.geekbang.org/account/avatar/00/12/96/63/64f62020.jpg","nickname":"or0or1","note":"","ucode":"E7B63C666302C8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":18372,"discussion_content":"tcp_tw_reuse需要结合这个参数才生效吧？关闭了咋整？","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1569052334,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1446494,"avatar":"https://static001.geekbang.org/account/avatar/00/16/12/5e/77b67a85.jpg","nickname":"飘云","note":"","ucode":"C6FE0310D6853C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":210054,"discussion_content":"你说的nat环境不要打开，应该是tcp_recycle选项","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584704937,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":74663,"user_name":"Adam","can_delete":false,"product_type":"c1","uid":1305633,"ip_address":"","ucode":"338BA720880E4F","user_header":"https://static001.geekbang.org/account/avatar/00/13/ec/21/b0fe1bfd.jpg","comment_is_top":false,"comment_ctime":1552275019,"is_pvip":false,"replies":[{"id":"27488","content":"嗯嗯，是的，谢谢指出<br>","user_name":"作者回复","comment_id":74663,"uid":"1001282","ip_address":"","utype":1,"ctime":1552400028,"user_name_real":"倪朋飞"}],"discussion_count":1,"race_medal":0,"score":"18732144203","product_id":100020901,"comment_content":"老师，nr_open应该是单个进程可分配的最大文件数，file_max才是系统级别的？","like_count":5,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":442641,"discussion_content":"嗯嗯，是的，谢谢指出\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1552400028,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":108292,"user_name":"zhchnchn","can_delete":false,"product_type":"c1","uid":1110218,"ip_address":"","ucode":"2219E40ED134D4","user_header":"https://static001.geekbang.org/account/avatar/00/10/f0/ca/4560f06b.jpg","comment_is_top":false,"comment_ctime":1561714283,"is_pvip":false,"replies":[{"id":"40451","content":"谢谢指出，文中不太准确，net.ipv4.tcp_fin_timeout实际上是从TIME_WAIT_2到TIME_WAIT的超时时间，而 TIME_WAIT状态的超时时间是固定的 2MSL（也就是60s）。","user_name":"作者回复","comment_id":108292,"uid":"1001282","ip_address":"","utype":1,"ctime":1562511298,"user_name_real":"倪朋飞"}],"discussion_count":3,"race_medal":0,"score":"10151648875","product_id":100020901,"comment_content":"老师，有个疑问，从“王亮”的留言中看到，`net.ipv4.tcp_fin_timeout`这个参数决定了它保持在`FIN-WAIT-2`状态的时间，那它怎么又可以“缩短处于TIME_WAIT状态的超时时间”（老师总结的图中）呢？","like_count":3,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":455907,"discussion_content":"谢谢指出，文中不太准确，net.ipv4.tcp_fin_timeout实际上是从TIME_WAIT_2到TIME_WAIT的超时时间，而 TIME_WAIT状态的超时时间是固定的 2MSL（也就是60s）。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1562511298,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2189657,"avatar":"https://static001.geekbang.org/account/avatar/00/21/69/59/fd0dcc7b.jpg","nickname":"云淡风清","note":"","ucode":"4F5F5C89EBF3A1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":320796,"discussion_content":"fin_wait2为什么要设置个超时时间，起啥作用，fin_wait1为什么又没有？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1604480715,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1200299,"avatar":"https://static001.geekbang.org/account/avatar/00/12/50/ab/6584e520.jpg","nickname":"陈顺吉","note":"","ucode":"315732AEA35CD1","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":2189657,"avatar":"https://static001.geekbang.org/account/avatar/00/21/69/59/fd0dcc7b.jpg","nickname":"云淡风清","note":"","ucode":"4F5F5C89EBF3A1","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":353096,"discussion_content":"这是因为当客户端处于 fin_wait2 时，服务端会处于 close_wait，如果服务端的代码有问题，不主动释放链接的话，close_wait 状态会一直持续，那么客户端也就无法进入 time_wait，整个连接也就无法释放。通过 net.ipv4.tcp_fin_timeout 设置超时时间之后，即使服务端不释放连接，那么超时后客户端会自动进入 time_wait，120s 后连接释放。","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1615002738,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":320796,"ip_address":""},"score":353096,"extra":""}]}]},{"had_liked":false,"id":80232,"user_name":"Maxwell","can_delete":false,"product_type":"c1","uid":1086275,"ip_address":"","ucode":"720A00AD472616","user_header":"https://static001.geekbang.org/account/avatar/00/10/93/43/0e84492d.jpg","comment_is_top":false,"comment_ctime":1553643467,"is_pvip":false,"replies":[{"id":"29329","content":"临时修改使用sysctl，持久化写入文件&#47;etc&#47;sysctl.conf","user_name":"作者回复","comment_id":80232,"uid":"1001282","ip_address":"","utype":1,"ctime":1553697467,"user_name_real":"倪朋飞"}],"discussion_count":3,"race_medal":0,"score":"10143578059","product_id":100020901,"comment_content":"TCP优化，内核选项参数怎么修改呢？在哪修改呢？","like_count":3,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":444791,"discussion_content":"临时修改使用sysctl，持久化写入文件/etc/sysctl.conf","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1553697467,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1134694,"avatar":"https://static001.geekbang.org/account/avatar/00/11/50/66/047ee060.jpg","nickname":"Return12321","note":"","ucode":"F7A3C5ED02E1D9","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":382591,"discussion_content":"mark","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1625642657,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2116245,"avatar":"https://static001.geekbang.org/account/avatar/00/20/4a/95/4f6f93c3.jpg","nickname":"知行合一","note":"","ucode":"A53A002DF3A652","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":364120,"discussion_content":"mark","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1617368567,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":72889,"user_name":"xfan","can_delete":false,"product_type":"c1","uid":1315147,"ip_address":"","ucode":"48ED8D498D7F56","user_header":"https://static001.geekbang.org/account/avatar/00/14/11/4b/fa64f061.jpg","comment_is_top":false,"comment_ctime":1551751241,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10141685833","product_id":100020901,"comment_content":"打卡，学习本章，知道了使用调节内核网络参数，使用网卡特性，来调节个层性能，受益，感谢老师","like_count":2},{"had_liked":false,"id":72483,"user_name":"ninuxer","can_delete":false,"product_type":"c1","uid":1243135,"ip_address":"","ucode":"5394ADAF2667D6","user_header":"https://wx.qlogo.cn/mmopen/vi_32/PiajxSqBRaEKQMM4m7NHuicr55aRiblTSEWIYe0QqbpyHweaoAbG7j2v7UUElqqeP3Ihrm3UfDPDRb1Hv8LvPwXqA/132","comment_is_top":false,"comment_ctime":1551657880,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"10141592472","product_id":100020901,"comment_content":"打卡day46<br>基础不牢，地动山摇，一些网络的概念没理解，消化起来比较费力～","like_count":3,"discussions":[{"author":{"id":1121758,"avatar":"https://static001.geekbang.org/account/avatar/00/11/1d/de/62bfa83f.jpg","nickname":"aoe","note":"","ucode":"1C6201EDB4E954","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":312067,"discussion_content":"怪不得我觉得晕","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1602577885,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":281988,"user_name":"陈顺吉","can_delete":false,"product_type":"c1","uid":1200299,"ip_address":"","ucode":"315732AEA35CD1","user_header":"https://static001.geekbang.org/account/avatar/00/12/50/ab/6584e520.jpg","comment_is_top":false,"comment_ctime":1615003244,"is_pvip":true,"discussion_count":1,"race_medal":0,"score":"5909970540","product_id":100020901,"comment_content":"据我所知，net.ipv4.tcp_tw_reuse 和 net.ipv4.tcp_tw_recycle 都依赖于 net.ipv4.tcp_timestamps，net.ipv4.tcp_timestamps 是 tcp 的一个选项，如果开启了它，那么就无法使用 tcp 的其他选项了，包括 net.ipv4.tcp_syncookies。","like_count":2,"discussions":[{"author":{"id":2110718,"avatar":"https://static001.geekbang.org/account/avatar/00/20/34/fe/e5429b02.jpg","nickname":"glimmer","note":"","ucode":"48A16C52FB4C45","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":368728,"discussion_content":"mark\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1618819418,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":78185,"user_name":"honnkyou","can_delete":false,"product_type":"c1","uid":1026608,"ip_address":"","ucode":"FD5EC4120EE803","user_header":"https://static001.geekbang.org/account/avatar/00/0f/aa/30/acc91f01.jpg","comment_is_top":false,"comment_ctime":1553088248,"is_pvip":false,"replies":[{"id":"28743","content":"监听的端口通常是一个，但服务器程序还可能会通过网络去连接其他服务，这时候它又是一个客户端了","user_name":"作者回复","comment_id":78185,"uid":"1001282","ip_address":"","utype":1,"ctime":1553316219,"user_name_real":"倪朋飞"}],"discussion_count":1,"race_medal":0,"score":"5848055544","product_id":100020901,"comment_content":"&quot;增大本地端口的范围 net.ipv4.ip_local_port_range 。&quot;这个优化手段不是很理解，服务器端通常不都是监听某个端口嘛，为什么说增大本地端口范围会优化呢？","like_count":2,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":443996,"discussion_content":"监听的端口通常是一个，但服务器程序还可能会通过网络去连接其他服务，这时候它又是一个客户端了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1553316219,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":73049,"user_name":"夜空中最亮的星","can_delete":false,"product_type":"c1","uid":1267566,"ip_address":"","ucode":"ADC3E7B6789955","user_header":"https://static001.geekbang.org/account/avatar/00/13/57/6e/b6795c44.jpg","comment_is_top":false,"comment_ctime":1551785352,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5846752648","product_id":100020901,"comment_content":"越来越期待后面的课了","like_count":1},{"had_liked":false,"id":72664,"user_name":"Linuxer","can_delete":false,"product_type":"c1","uid":1153978,"ip_address":"","ucode":"272D9D8089C3D6","user_header":"https://static001.geekbang.org/account/avatar/00/11/9b/ba/333b59e5.jpg","comment_is_top":false,"comment_ctime":1551688506,"is_pvip":false,"replies":[{"id":"26335","content":"内存模块有讲解cache miss的问题。网络中虽然有很多缓冲区，但没有 cache miss 这一说（缓冲区中读不到数据那就是没有数据了）","user_name":"作者回复","comment_id":72664,"uid":"1001282","ip_address":"","utype":1,"ctime":1551706924,"user_name_real":"倪朋飞"}],"discussion_count":2,"race_medal":0,"score":"5846655802","product_id":100020901,"comment_content":"请问倪老师怎么评估cache miss?","like_count":0,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":441678,"discussion_content":"内存模块有讲解cache miss的问题。网络中虽然有很多缓冲区，但没有 cache miss 这一说（缓冲区中读不到数据那就是没有数据了）","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1551706924,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1980201,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/37/29/b3af57a7.jpg","nickname":"凯文小猪","note":"","ucode":"36D8AD0229547F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":390137,"discussion_content":"网络协议栈的缓冲池 主要用途的是收发 不是用来命中加速执行。也就是执行了write back策略","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1629685531,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":310553,"user_name":"FreeMason","can_delete":false,"product_type":"c1","uid":1340120,"ip_address":"","ucode":"3D58AC2F9AB345","user_header":"https://static001.geekbang.org/account/avatar/00/14/72/d8/9eedbc5e.jpg","comment_is_top":false,"comment_ctime":1630741557,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1630741557","product_id":100020901,"comment_content":"最近搞 demo 测试时，进行压测 go-stress-testing-win -c 2000 -n 1000 -u host -data POST，从 2000 QPS 下降到600QPS，还会出现大量 wsarecv: An existing connection was forcibly closed by the remote host，tcpdump 抓包服务器发现有大量的 RST 和 RST,ACK 和 TCP Port numbers reused 和 TCP Dup ACK 和 TCP Previous ... 和 TCP Retransmission 等错误，就找 google 各种操作，然而然并卵。 初次搞测试连接这方面可有尝求解（指导）","like_count":0},{"had_liked":false,"id":299918,"user_name":"技术小白菜","can_delete":false,"product_type":"c1","uid":1990375,"ip_address":"","ucode":"CEA9B0DFA197C6","user_header":"","comment_is_top":false,"comment_ctime":1624920951,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1624920951","product_id":100020901,"comment_content":"开启端口复用 net.ipv4.tcp_tw_reuse。这样，被 TIME_WAIT 状态占用的端口，还能用到新建的连接中。--这个是针对客户端的 time_wait复用问题，正常不开这个参数，要等60秒端口释放才能使用。开启此内核参数，连接多长时间就可以复用呢","like_count":0},{"had_liked":false,"id":212816,"user_name":"stackWarn","can_delete":false,"product_type":"c1","uid":1002005,"ip_address":"","ucode":"89672E452DEBA5","user_header":"https://static001.geekbang.org/account/avatar/00/0f/4a/15/106eaaa8.jpg","comment_is_top":false,"comment_ctime":1588214977,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1588214977","product_id":100020901,"comment_content":"打卡 ，请问下评论区是否有对网络整个流程的丢包技术相关参数的文章参考","like_count":0},{"had_liked":false,"id":199773,"user_name":"南山","can_delete":false,"product_type":"c1","uid":1119593,"ip_address":"","ucode":"94656FE4A6C378","user_header":"https://static001.geekbang.org/account/avatar/00/11/15/69/187b9968.jpg","comment_is_top":false,"comment_ctime":1585495682,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1585495682","product_id":100020901,"comment_content":"一直都飘在应用程序那一层，想沉下来，加油！！！","like_count":0},{"had_liked":false,"id":144842,"user_name":"Abu","can_delete":false,"product_type":"c1","uid":1301948,"ip_address":"","ucode":"297D7C7A2944E1","user_header":"https://static001.geekbang.org/account/avatar/00/13/dd/bc/8969d111.jpg","comment_is_top":false,"comment_ctime":1572070357,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1572070357","product_id":100020901,"comment_content":"在网卡支持RSS时，还需要用RPS或者RFS吗？请老师指教","like_count":0},{"had_liked":false,"id":141806,"user_name":"LQ","can_delete":false,"product_type":"c1","uid":1026253,"ip_address":"","ucode":"68C56AC7710B3A","user_header":"https://static001.geekbang.org/account/avatar/00/0f/a8/cd/cce2161a.jpg","comment_is_top":false,"comment_ctime":1571228814,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"1571228814","product_id":100020901,"comment_content":"对于nginx，我看网上大量的文章都说应该设置 tcp_max_tw_buckets=5000，但您推荐的是一个很大的值，能解释一下吗？谢谢！","like_count":0,"discussions":[{"author":{"id":1081299,"avatar":"https://static001.geekbang.org/account/avatar/00/10/7f/d3/b5896293.jpg","nickname":"Realm","note":"","ucode":"30CBEBE619D1A2","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":552208,"discussion_content":"减少hash冲突","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1645347655,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1284474,"avatar":"https://static001.geekbang.org/account/avatar/00/13/99/7a/558666a5.jpg","nickname":"AceslupK","note":"","ucode":"048F84D019CBBB","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":394203,"discussion_content":"文中老师有解释蛮清楚的，可以再回看一下","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1631783456,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":118635,"user_name":"hola","can_delete":false,"product_type":"c1","uid":1068559,"ip_address":"","ucode":"1872B1B3FCEAFC","user_header":"https://static001.geekbang.org/account/avatar/00/10/4e/0f/c43745e7.jpg","comment_is_top":false,"comment_ctime":1564403019,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"1564403019","product_id":100020901,"comment_content":"老师，linux里面的这个变量net.ipv4.tcp_fin_timeout 到底指代的是什么意义呢。<br>tcp详解第一卷里面，<br>说time_wait的等待时间由这个变量记录<br>然后说 FIN_WAIT_2状态的等待时间也由这个变量记录<br>然后有些博客说，其实time_wait状态的超时时间，并没有读取这个变量，而是由代码中宏定义的。<br>有点懵逼","like_count":0,"discussions":[{"author":{"id":1662117,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q3auHgzwzM7zuDYFIutbSPc4eEtcMhdNBTI1FRR7q0xrGh2X1QdiaNxvAV31HcRUsjPWLaaWftqgwTnVoiaica8Nw/132","nickname":"胜辉（大V）","note":"","ucode":"3C13BFCD82D4EC","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":400435,"discussion_content":"timewait的等待时间需要重新编译内核，无法通过参数进行调整","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1633269621,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1493286,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eoCl6Nxf9oW9sDOoibA7p8lKf0jqjPeDszqI4e7iavicQHtbtyibHIhLibyXYAaT02l7GRQvM9BJUxh6yQ/132","nickname":"昀溪","note":"","ucode":"BFAF31542BC24A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":3583,"discussion_content":"TIME_WAIT这个时间 在内核编译的时候就已经设定了 我一直没找到在哪里修改 不过FIN_TIMEOUT 指的就是FIN_TIME2 这一点书上没错","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1564618200,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":104726,"user_name":"峰回","can_delete":false,"product_type":"c1","uid":1173558,"ip_address":"","ucode":"4DB385E93749A7","user_header":"https://static001.geekbang.org/account/avatar/00/11/e8/36/5b018040.jpg","comment_is_top":false,"comment_ctime":1560822266,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1560822266","product_id":100020901,"comment_content":"老师，您好，系统中发现大量closed连接，应该优化哪些参数。","like_count":0},{"had_liked":false,"id":92650,"user_name":"王亮","can_delete":false,"product_type":"c1","uid":1002270,"ip_address":"","ucode":"A94DBEBD3C21E3","user_header":"https://static001.geekbang.org/account/avatar/00/0f/4b/1e/3a732ac3.jpg","comment_is_top":false,"comment_ctime":1557309026,"is_pvip":false,"replies":[{"id":"33108","content":"是的","user_name":"作者回复","user_name_real":"倪朋飞","uid":"1001282","ctime":1557324186,"ip_address":"","comment_id":92650,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1557309026","product_id":100020901,"comment_content":"net.ipv4.tcp_fin_timeout 应该是表示如果套接字由本端要求关闭，这个参数决定了它保持在FIN-WAIT-2状态的时间吧？","like_count":0,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":449345,"discussion_content":"是的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1557324186,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":91145,"user_name":"Joe","can_delete":false,"product_type":"c1","uid":1033290,"ip_address":"","ucode":"79AC38C1F44D76","user_header":"https://static001.geekbang.org/account/avatar/00/0f/c4/4a/c02c597b.jpg","comment_is_top":false,"comment_ctime":1556880893,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1556880893","product_id":100020901,"comment_content":"好的","like_count":0},{"had_liked":false,"id":90224,"user_name":"王伟","can_delete":false,"product_type":"c1","uid":1046001,"ip_address":"","ucode":"ABA3781E6DD5DB","user_header":"https://static001.geekbang.org/account/avatar/00/0f/f5/f1/4b26ac7d.jpg","comment_is_top":false,"comment_ctime":1556452042,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1556452042","product_id":100020901,"comment_content":"打卡","like_count":0},{"had_liked":false,"id":90097,"user_name":"笑","can_delete":false,"product_type":"c1","uid":1284647,"ip_address":"","ucode":"C91EAFAB88E5AC","user_header":"https://static001.geekbang.org/account/avatar/00/13/9a/27/4b81bce5.jpg","comment_is_top":false,"comment_ctime":1556414315,"is_pvip":false,"replies":[{"id":"32534","content":"一个意思但作用范围不一样，fs.nr_open对应单个进程，ulimit设置用户当前会话","user_name":"作者回复","user_name_real":"倪朋飞","uid":"1001282","ctime":1556634968,"ip_address":"","comment_id":90097,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1556414315","product_id":100020901,"comment_content":"ulimit -n : open files   (-n) 1024   这个跟  fs.nr_open = 1048576 是一个意思吗？<br>","like_count":1,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":448390,"discussion_content":"一个意思但作用范围不一样，fs.nr_open对应单个进程，ulimit设置用户当前会话","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1556634968,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":80250,"user_name":"Maxwell","can_delete":false,"product_type":"c1","uid":1086275,"ip_address":"","ucode":"720A00AD472616","user_header":"https://static001.geekbang.org/account/avatar/00/10/93/43/0e84492d.jpg","comment_is_top":false,"comment_ctime":1553644976,"is_pvip":false,"replies":[{"id":"29326","content":"嗯嗯，多实践几次就记住了","user_name":"作者回复","user_name_real":"倪朋飞","uid":"1001282","ctime":1553697356,"ip_address":"","comment_id":80250,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1553644976","product_id":100020901,"comment_content":"优化思路总结是挺好的，但是毕竟缺少实践，如果不实践，很快就会忘记!","like_count":0,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":444798,"discussion_content":"嗯嗯，多实践几次就记住了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1553697356,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":77236,"user_name":"明翼","can_delete":false,"product_type":"c1","uid":1068361,"ip_address":"","ucode":"E77F86BEB3D5C1","user_header":"https://static001.geekbang.org/account/avatar/00/10/4d/49/28e73b9c.jpg","comment_is_top":false,"comment_ctime":1552894383,"is_pvip":false,"replies":[{"id":"28159","content":"以前碰到过类似的问题，是网卡驱动到导致的，可以到驱动网站看看有没有类似的错误修复","user_name":"作者回复","user_name_real":"倪朋飞","uid":"1001282","ctime":1552903424,"ip_address":"","comment_id":77236,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1552894383","product_id":100020901,"comment_content":"老师，您好，我在今天生产环境发现一个问题想请教下，同事反馈es的集群的索引速度过慢，我去集群上看了下，从表面看来，内存、cpu、网络、磁盘各方面指标都还可以，都不高。<br>操作系统为Centos，版本信息：Linux lc-gwrz-es25 3.10.0-693.el7.x86_64 #1 SMP Thu Jul 6 19:56:57 EDT 2017 x86_64 x86_64 x86_64 GNU&#47;Linux<br>在dmesg去查看系统日志的时候，发现几乎每隔1-2s就有网卡重启的日志：<br>[12528931.704091] ixgbe 0000:01:00.0 em1: NIC Link is Up 10 Gbps, Flow Control: RX&#47;TX<br>[12528933.478267] ixgbe 0000:01:00.0 em1: NIC Link is Down<br>[12528933.908089] ixgbe 0000:01:00.0 em1: NIC Link is Up 10 Gbps, Flow Control: RX&#47;TX<br>[12528936.420314] ixgbe 0000:01:00.0 em1: NIC Link is Down<br>[12528938.116022] ixgbe 0000:01:00.0 em1: NIC Link is Up 10 Gbps, Flow Control: RX&#47;TX<br>[12528948.595812] ixgbe 0000:01:00.0 em1: NIC Link is Down<br>[12528950.439906] ixgbe 0000:01:00.0 em1: NIC Link is Up 10 Gbps, Flow Control: RX&#47;TX<br>[12528951.949896] ixgbe 0000:01:00.0 em1: NIC Link is Down<br>[12528952.643856] ixgbe 0000:01:00.0 em1: NIC Link is Up 10 Gbps, Flow Control: RX&#47;TX<br>[12528953.305133] ixgbe 0000:01:00.0 em1: NIC Link is Down<br>[12528954.847848] ixgbe 0000:01:00.0 em1: NIC Link is Up 10 Gbps, Flow Control: RX&#47;TX<br>[12528980.928031] ixgbe 0000:01:00.0 em1: NIC Link is Down<br>[12528981.199552] ixgbe 0000:01:00.0 em1: NIC Link is Up 10 Gbps, Flow Control: RX&#47;TX<br><br><br>另外查看了下这个网卡的信息：<br>em1: flags=4163&lt;UP,BROADCAST,RUNNING,MULTICAST&gt;  mtu 1500<br>        ether 22:14:5b:e1:3e:2a  txqueuelen 1000  (Ethernet)<br>        RX packets 29473048069  bytes 29538551685381 (26.8 TiB)<br>        RX errors 755381927  dropped 0  overruns 0  frame 755381927<br>        TX packets 16901640311  bytes 17050517754286 (15.5 TiB)<br>        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0<br> RX errors的数量有点多，通过es的日志来看，这台机器确实和其他主机的连接时常会超时，奇怪的是，对es的其他节点执行ping命令又能够在0.1ms内返回。我看了下网卡，网卡采用team绑定的方式，<br>TEAM_CONFIG=&quot;{\\&quot;runner\\&quot;: {\\&quot;name\\&quot;: \\&quot;lacp\\&quot;}}&quot;。<br>请教下：1）为什么网络有问题，我ping显示正常；；2）这种可能是什么原因引起的。<br>","like_count":1,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":443648,"discussion_content":"以前碰到过类似的问题，是网卡驱动到导致的，可以到驱动网站看看有没有类似的错误修复","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1552903424,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":73995,"user_name":"hola","can_delete":false,"product_type":"c1","uid":1068559,"ip_address":"","ucode":"1872B1B3FCEAFC","user_header":"https://static001.geekbang.org/account/avatar/00/10/4e/0f/c43745e7.jpg","comment_is_top":false,"comment_ctime":1552055804,"is_pvip":false,"replies":[{"id":"27328","content":"可能是没有配置中断负载均衡，或者配置的时候配错了，绑定到了最后一个CPU","user_name":"作者回复","user_name_real":"倪朋飞","uid":"1001282","ctime":1552348966,"ip_address":"","comment_id":73995,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1552055804","product_id":100020901,"comment_content":"我来请教了，今天服务器发现这个，软中断NET_RX为什么这么不均衡，是否意味着什么问题？<br>[root]# watch -d cat &#47;proc&#47;softirqs<br>Every 2.0s: cat &#47;proc&#47;softirqs                                                                                                                                                             Fri Mar  8 22:34:25 2019<br><br>                    CPU0       CPU1       CPU2       CPU3<br>          HI:          4          1          0          1<br>       TIMER:  713624971  755107323  712371160  933839267<br>      NET_TX:          2          1          3         81<br>      NET_RX:      16219      17426      17488 1270269922<br>       BLOCK:          0          0          0          0<br>BLOCK_IOPOLL:          0          0          0          0<br>     TASKLET:       5647       9600       8682      14476<br>       SCHED:  535200439  484313787  449453690  603342848<br>     HRTIMER:          0          0          0          0<br>         RCU:  206853385  237158342  227458167  255373399<br>","like_count":1,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":442373,"discussion_content":"可能是没有配置中断负载均衡，或者配置的时候配错了，绑定到了最后一个CPU","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1552348966,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":73411,"user_name":"明翼","can_delete":false,"product_type":"c1","uid":1068361,"ip_address":"","ucode":"E77F86BEB3D5C1","user_header":"https://static001.geekbang.org/account/avatar/00/10/4d/49/28e73b9c.jpg","comment_is_top":false,"comment_ctime":1551880900,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1551880900","product_id":100020901,"comment_content":"喜欢这种系统的有套路的分析方法","like_count":0},{"had_liked":false,"id":73020,"user_name":"王灯武","can_delete":false,"product_type":"c1","uid":1107432,"ip_address":"","ucode":"B35FF513125BA9","user_header":"https://static001.geekbang.org/account/avatar/00/10/e5/e8/033bdbf5.jpg","comment_is_top":false,"comment_ctime":1551778154,"is_pvip":false,"replies":[{"id":"26745","content":"推荐使用进程管理工具（比如 systemd）管理服务，不要直接在SSH中启动","user_name":"作者回复","user_name_real":"倪朋飞","uid":"1001282","ctime":1551883700,"ip_address":"","comment_id":73020,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1551778154","product_id":100020901,"comment_content":"老师，您好！提一个与本篇无关的系统故障，最近几天经常出现tomcat进程自动消失，之前碰到的一种是因为ssh连接上去，然后执行bin&#47;startup.sh | tail logs&#47;catalina.out这样的命令启动并查看启动日志，这种启动方式在ssh连接断开的瞬间，会因为父子进程的关系，父进程（sshd）退出，所以tomcat进程也跟着自动退出了。这种异常退出有两个特点：1、会在&#47;var&#47;log&#47;secure日志中看到Mar  5 16:40:36 host-10-234-8-172 su: pam_unix(su:session): session closed for user test这样的日志，这个session closed时间点跟tomcat进程退出的时间点是一样的。2、tomcat的catalina.out日志中会有平滑关闭退出的日志。<br><br>但是最近的故障没有上面两个特点，dmesg日志或&#47;var&#47;log&#47;messages日志中也没有oom killer之类的错误信息。目前分析没什么头绪了，老师看看是否遇到过类似问题，或者有什么分析思路，谢谢！<br>","like_count":1,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":441879,"discussion_content":"推荐使用进程管理工具（比如 systemd）管理服务，不要直接在SSH中启动","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1551883700,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1049208,"avatar":"https://static001.geekbang.org/account/avatar/00/10/02/78/23c56bce.jpg","nickname":"james","note":"","ucode":"5701899403917C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":341398,"discussion_content":"加 nohup","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1610411637,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]}]}