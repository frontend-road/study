{"id":613056,"title":"56｜装饰器：函数嵌套的定义与调用的区别","content":"<p>functools 链接：<a href=\"https://docs.python.org/zh-cn/3.10/library/functools.html\">https://docs.python.org/zh-cn/3.10/library/functools.html</a></p><p><strong>课后习题</strong><br>\n请你定义一个装饰器，可以让函数运行 5 遍，并输出平均运行时间。</p><p><strong>课程代码、课件及其他相关资料地址</strong><br>\n<a href=\"https://gitee.com/wilsonyin/zero-basics-python\">https://gitee.com/wilsonyin/zero-basics-python</a></p>","comments":[{"had_liked":false,"id":364469,"user_name":"PatrickL","can_delete":false,"product_type":"c3","uid":1341431,"ip_address":"上海","ucode":"EF0EC18639B9B2","user_header":"https://static001.geekbang.org/account/avatar/00/14/77/f7/11548247.jpg","comment_is_top":false,"comment_ctime":1670999331,"is_pvip":false,"replies":null,"discussion_count":2,"race_medal":0,"score":2,"product_id":100310001,"comment_content":"import time\nimport random\nfrom functools import wraps\n\ndef avgTime(func,times=5):\n    @wraps(func)\n    def wrapper():\n        avg_interval = 0\n        for i in range(times):\n            start = time.time()\n            func()\n            stop = time.time()\n            interval = stop - start\n            print(f&#39;第{i+1}次运行了{interval}秒&#39;)\n            avg_interval += interval\n        avg_interval &#47;= times\n        print(f&#39;平均运行了{avg_interval}秒&#39;)\n    return wrapper\n\n@avgTime\ndef work():\n    time.sleep(random.random())\n\nwork()","like_count":3,"discussions":[{"author":{"id":1228268,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bd/ec/cc7abf0b.jpg","nickname":"L","note":"","ucode":"26BB686671F7D4","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":632528,"discussion_content":"这个代码实现如果传入参数就不正确了","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1700920536,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"上海","group_id":0},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1273252,"avatar":"https://static001.geekbang.org/account/avatar/00/13/6d/a4/e07825c8.jpg","nickname":"haoleir","note":"","ucode":"3FAC05601B5752","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1228268,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bd/ec/cc7abf0b.jpg","nickname":"L","note":"","ucode":"26BB686671F7D4","race_medal":0,"user_type":1,"is_pvip":true},"discussion":{"id":641407,"discussion_content":"# Python装饰器参数传递\n\nimport time\nfrom functools import wraps\n\ndef time_it(times=5):\n    def wrapper(func):\n        @wraps(func)\n        def sub_wrapper(*args, **kwargs):\n            t = 0\n            for i in range(times):\n                start = time.time()\n                result = func(*args, **kwargs)\n                stop = time.time()\n                t = t + (stop - start)\n            ave = t / times\n            print(f&#39;func 函数执行了{times}次，平均执行时间：{ave:.6f}秒&#39;)\n            print(f&#39;result的结果为：{result}&#39;)\n            return result\n\n        return sub_wrapper\n\n    return wrapper\n\n@time_it(3)\ndef work(x, y):\n    print(&#39;work 开始&#39;)\n    time.sleep(1)\n    print(&#39;work 结束&#39;)\n\n    return x+y\n\n\nwork(2, 3)","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1712594174,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":632528,"ip_address":"广东","group_id":0},"score":641407,"extra":""}]}]},{"had_liked":false,"id":368002,"user_name":"yanyu-xin","can_delete":false,"product_type":"c3","uid":1899757,"ip_address":"广东","ucode":"3AA389F9E4C236","user_header":"","comment_is_top":false,"comment_ctime":1675816015,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":2,"product_id":100310001,"comment_content":"import time\nfrom functools import wraps\n\ndef time_it(func):\n    @wraps(func)\n    def wrapper():\n        t = 0\n        for i in range(5):\n            start = time.time()\n            func()\n            stop = time.time()\n            t = t + (stop - start)\n        ave = t &#47; 5\n        print(f&#39;func 函数平均执行时间{ave}秒&#39;)\n    return wrapper\n\n@time_it\ndef func_1():\n    print(&#39;func_1 开始&#39;)\n    time.sleep(1) \n    print(&#39;func_1 结束&#39;)\n\nfunc_1()","like_count":1},{"had_liked":false,"id":364716,"user_name":"Calvin","can_delete":false,"product_type":"c3","uid":1603004,"ip_address":"广东","ucode":"0EEF5B207623B5","user_header":"https://static001.geekbang.org/account/avatar/00/18/75/bc/89d88775.jpg","comment_is_top":false,"comment_ctime":1671379187,"is_pvip":false,"replies":null,"discussion_count":1,"race_medal":0,"score":2,"product_id":100310001,"comment_content":"import random\nimport time\n\nfrom functools import wraps\n\n\ndef multi_run_avg(cnt: int):\n    def time_it(func):\n        @wraps(func)\n        def wrapper():\n            start = time.time()\n            for _ in range(cnt):\n                func()\n            stop = time.time()\n            print(f&quot;func runs {cnt} times, and its average run time is {round((stop - start) &#47; cnt, 2)} secs.&quot;)\n\n        return wrapper\n\n    return time_it\n\n\n@multi_run_avg(5)\ndef work():\n    print(&quot;func work start...&quot;)\n    time.sleep(random.randint(1, 3))\n    print(&quot;func work stop!&quot;)\n\n\nwork()\n# print(work.__name__)","like_count":1,"discussions":[{"author":{"id":1363593,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLFvhaPbJ1sBZqr8GQRVDiaxsicukAETVzjqmBRba2WqibbmX3NmoPIkaNEnBvyaWobyCjGN0FJgGnKQ/132","nickname":"Geek_9948a5","note":"","ucode":"7DDAF4A21EA1FC","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":635497,"discussion_content":"牛啊","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1704887963,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"浙江","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":395526,"user_name":"尹长拟","can_delete":false,"product_type":"c3","uid":3074007,"ip_address":"北京","ucode":"1EBD42B5BBD934","user_header":"","comment_is_top":false,"comment_ctime":1731069004,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":2,"product_id":100310001,"comment_content":"import time\nfrom functools import wraps\n\ndef time_1(n=5):\n    def time_2(func):\n        @wraps(func)\n        def time_3(*args,**kwargs):\n            total_time = 0\n            for _ in range(n):\n                start_time = time.time()\n                func(*args,**kwargs)\n                end_time = time.time()\n                total_time += end_time - start_time\n\n            avg_time = total_time &#47; n\n            print(f&quot;函数运行{n}次的平均时间为:{avg_time}秒&quot;)\n        \n        return time_3\n    return time_2\n\n@time_1()\ndef work():\n    print(&quot;work函数开始执行&quot;)\n    time.sleep(2)\n    print(&quot;work 函数执行完毕&quot;)\n\nwork()\nprint(work.__name__)","like_count":0},{"had_liked":false,"id":393926,"user_name":"刘立嘉","can_delete":false,"product_type":"c3","uid":2414637,"ip_address":"上海","ucode":"1241140EBE7FE3","user_header":"https://static001.geekbang.org/account/avatar/00/24/d8/2d/4b0355f3.jpg","comment_is_top":false,"comment_ctime":1725353846,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":2,"product_id":100310001,"comment_content":"import time\nfrom functools import wraps\n\ndef time_it(func):\n    @wraps(func)\n    def wrapper():\n        t = 0\n        for i in range(5):\n            start = time.time()\n            func()\n            stop = time.time()\n            t = t + (stop - start)\n        ave = t &#47; 5\n        print(f&#39;func函数平均执行时间{ave}秒&#39;)\n    return wrapper\n\n@time_it\ndef work():\n    print(&quot;work函数开始执行&quot;)\n    time.sleep(2)\n    print(&quot;work函数执行结束&quot;)\n\nwork()","like_count":0},{"had_liked":false,"id":389447,"user_name":"haoleir","can_delete":false,"product_type":"c3","uid":1273252,"ip_address":"广东","ucode":"3FAC05601B5752","user_header":"https://static001.geekbang.org/account/avatar/00/13/6d/a4/e07825c8.jpg","comment_is_top":false,"comment_ctime":1712594129,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":2,"product_id":100310001,"comment_content":"import time\nfrom functools import wraps\n\n# Python装饰器参数传递\n\n\ndef time_it(times=5):\n    def wrapper(func):\n        @wraps(func)\n        def sub_wrapper(*args, **kwargs):\n            t = 0\n            for i in range(times):\n                start = time.time()\n                result = func(*args, **kwargs)\n                stop = time.time()\n                t = t + (stop - start)\n            ave = t &#47; times\n            print(f&#39;func 函数执行了{times}次，平均执行时间：{ave:.6f}秒&#39;)\n            print(f&#39;result的结果为：{result}&#39;)\n            return result\n\n        return sub_wrapper\n\n    return wrapper\n\n\n@time_it(3)\ndef work(x, y):\n    print(&#39;work 开始&#39;)\n    time.sleep(1)\n    print(&#39;work 结束&#39;)\n\n    return x+y\n\n\nwork(2, 3)","like_count":0},{"had_liked":false,"id":388470,"user_name":"杨松","can_delete":false,"product_type":"c3","uid":1512517,"ip_address":"辽宁","ucode":"FB3C73BC44C94D","user_header":"https://static001.geekbang.org/account/avatar/00/17/14/45/adf079ae.jpg","comment_is_top":false,"comment_ctime":1710226944,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":2,"product_id":100310001,"comment_content":"老师，如果装饰器装饰的方法带有参数会怎么样？我看示例中的装饰器内部只是执行了func()并没有参数","like_count":0},{"had_liked":false,"id":385048,"user_name":"蓝定月","can_delete":false,"product_type":"c3","uid":1497795,"ip_address":"上海","ucode":"3765E44A958022","user_header":"https://static001.geekbang.org/account/avatar/00/16/da/c3/4133a67a.jpg","comment_is_top":false,"comment_ctime":1701968239,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":2,"product_id":100310001,"comment_content":"def five_times(func):\n    @wraps(func)\n    def wrapper():\n        for i in range(5):\n            func()\n    return wrapper","like_count":0},{"had_liked":false,"id":384990,"user_name":"Geek_0c747b","can_delete":false,"product_type":"c3","uid":3790728,"ip_address":"广东","ucode":"7D7251D7B98B08","user_header":"","comment_is_top":false,"comment_ctime":1701914349,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":2,"product_id":100310001,"comment_content":"这是一个 Python 装饰器，它可以让函数运行 5 遍，并输出平均运行时间。这个装饰器使用了 Python 的 `time` 模块来计算函数的运行时间。\n\n```python\nimport time\n\ndef time_decorator(func):\n    def wrapper(*args, **kwargs):\n        total_time = 0\n        for _ in range(5):\n            start_time = time.time()\n            result = func(*args, **kwargs)\n            end_time = time.time()\n            total_time += end_time - start_time\n        print(f&quot;Average running time: {total_time &#47; 5} seconds&quot;)\n        return result\n    return wrapper\n```\n\n你可以使用 `@time_decorator` 语法来应用这个装饰器到你的函数上。例如：\n\n```python\n@time_decorator\ndef my_function():\n    # 这里是你的函数代码\n    pass\n```\n\n当你调用 `my_function()` 时，它会运行 5 遍，并输出平均运行时间。请注意，由于这个装饰器使用了 `time.time()` 来计算时间，所以它的精度受到系统时钟的限制。在大多数现代操作系统中，这个精度应该足够高，可以精确到微秒级别。                                                                                                   .","like_count":0},{"had_liked":false,"id":384507,"user_name":"依托答辩","can_delete":false,"product_type":"c3","uid":2383299,"ip_address":"上海","ucode":"4BE79E8A030813","user_header":"https://static001.geekbang.org/account/avatar/00/24/5d/c3/b8bb888c.jpg","comment_is_top":false,"comment_ctime":1701073528,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":2,"product_id":100310001,"comment_content":"import time\nimport random\ndef calculate_time(func):\n  def wrapper():\n    start = time.time()\n    for i in range(5):\n      func()\n    end = time.time()\n    print(&#39;平均运行时间：&#39;, (end - start)&#47;5)\n  return wrapper\n  \n@ calculate_time\ndef base_func():\n  random_time = random.randint(1, 3)\n  time.sleep(random_time)\nbase_func()","like_count":0},{"had_liked":false,"id":384446,"user_name":"L","can_delete":false,"product_type":"c3","uid":1228268,"ip_address":"上海","ucode":"26BB686671F7D4","user_header":"https://static001.geekbang.org/account/avatar/00/12/bd/ec/cc7abf0b.jpg","comment_is_top":false,"comment_ctime":1700920781,"is_pvip":true,"replies":null,"discussion_count":0,"race_medal":0,"score":3,"product_id":100310001,"comment_content":"关于带参数的装饰器做法，一开始我是这样想的\ndef time_call(times=5):\n  def call(func):\n    for i in range(times):\n      func()\n      print(f&quot;执行{i+1} 次&quot;)\n  return call\n@time_call(7)\ndef func():\n  print(&#39;func&#39;)\nfunc()\n\n结果不对，并且func没有执行的时候就执行完了，不明白为啥不对，后面想明白了。\n因为返回的函数应该是一个可以装饰函数的函数，在上面的例子中，如果想使用wraps，就没有地方用了，所以应该是\nfrom functools import wraps\n\ndef time_call(times=5):\n  def call(func):\n    @wraps(func)\n    def call2():\n      for i in range(times):\n        func()\n        print(f&quot;执行{i+1} 次&quot;)\n    return call2\n  return call\n@time_call(7)\ndef func():\n  print(&#39;func&#39;)\nfunc()","like_count":0},{"had_liked":false,"id":383160,"user_name":"杨松","can_delete":false,"product_type":"c3","uid":1512517,"ip_address":"辽宁","ucode":"FB3C73BC44C94D","user_header":"https://static001.geekbang.org/account/avatar/00/17/14/45/adf079ae.jpg","comment_is_top":false,"comment_ctime":1698581019,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":3,"product_id":100310001,"comment_content":"这个闭包的应用场景就像java面向切面(AOP)编程","like_count":0},{"had_liked":false,"id":382199,"user_name":"MarkG","can_delete":false,"product_type":"c3","uid":3675806,"ip_address":"山东","ucode":"454082595FE769","user_header":"https://static001.geekbang.org/account/avatar/00/38/16/9e/48621655.jpg","comment_is_top":false,"comment_ctime":1696868912,"is_pvip":false,"replies":null,"discussion_count":1,"race_medal":0,"score":3,"product_id":100310001,"comment_content":"课后习题\n\n# 请你定义一个装饰器，可以让函数运行 5 遍，并输出平均运行时间。\nimport time\nfrom functools import wraps, reduce\nfrom random import randint\n\ndef time5(func):\n    @wraps(func)\n    def wrapper():\n        time_list = []\n        for i in range(5):\n            start = time.time()\n            func()\n            stop = time.time()\n            time_list.append(stop - start)\n        time_list_len = len(time_list)  # 5\n        time_sum = reduce(lambda x,y: x + y, time_list)\n        time_average = int(time_sum &#47; time_list_len)\n        print(f&quot;平均运行时间{time_average}秒&quot;)\n    return wrapper\n\n@time5\ndef work2():\n    print(&quot;func 函数开始执行&quot;)\n    time.sleep(randint(1, 5))\n    print(&quot;func 函数开始结束&quot;)\n\nwork2()\n\n\n执行结果：\nfunc 函数开始执行\nfunc 函数开始结束\nfunc 函数开始执行\nfunc 函数开始结束\nfunc 函数开始执行\nfunc 函数开始结束\nfunc 函数开始执行\nfunc 函数开始结束\nfunc 函数开始执行\nfunc 函数开始结束\n平均运行时间3秒","like_count":0,"discussions":[{"author":{"id":2383299,"avatar":"https://static001.geekbang.org/account/avatar/00/24/5d/c3/b8bb888c.jpg","nickname":"依托答辩","note":"","ucode":"4BE79E8A030813","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":632617,"discussion_content":"感觉不对，你把时间的记录放在循环里面，不就相当于获取的是最后一次执行的时间吗","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1701073629,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"上海","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":380707,"user_name":"acondess","can_delete":false,"product_type":"c3","uid":3628115,"ip_address":"浙江","ucode":"D9145C65C73AAC","user_header":"","comment_is_top":false,"comment_ctime":1694016441,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":3,"product_id":100310001,"comment_content":"import time\n\nfrom  functools import wraps\n\ndef time_five(func):\n    @wraps(func)\n    def wrapper():\n        start = time.time()\n        for x in range(5):\n            func()\n        stop = time.time()\n        print(f&quot;func函数执行了{int(stop-start)}秒\\n&quot;)\n        print(f&quot;运行五次func函数平均运行时间{int((stop-start) * 0.2)}秒&quot;)\n    return wrapper\n\n@time_five\ndef work():\n    print(&quot;func开始执行&quot;)\n    time.sleep(2)\n    print(&quot;func结束执行&quot;)   \n    \nwork()","like_count":0},{"had_liked":false,"id":379554,"user_name":"Guan YD","can_delete":false,"product_type":"c3","uid":2000972,"ip_address":"陕西","ucode":"76540F350800A9","user_header":"https://static001.geekbang.org/account/avatar/00/1e/88/4c/9a732f67.jpg","comment_is_top":false,"comment_ctime":1692094917,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":3,"product_id":100310001,"comment_content":"import time\ndef a(func):\n    def b():\n        list1 = [] \n        for i in range(5):\n            print(f&quot;程序运行第{i+1}遍&quot;)\n            start = time.time()\n            func()\n            end = time.time()\n\n            list1.append(int(end - start))\n        avg_all = sum(list1) &#47; 5\n        return avg_all\n    return b\n\n@a\ndef c():\n    print(&quot;延迟2秒&quot;)\n    time.sleep(2)\n\nprint(c())","like_count":0},{"had_liked":false,"id":378353,"user_name":"Geek_Mike","can_delete":false,"product_type":"c3","uid":3196376,"ip_address":"云南","ucode":"CFA942192C3B74","user_header":"https://static001.geekbang.org/account/avatar/00/30/c5/d8/c5509b9c.jpg","comment_is_top":false,"comment_ctime":1690124063,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":3,"product_id":100310001,"comment_content":"# 请你定义一个装饰器，可以让函数运行 5 遍，并输出平均运行时间。\n\nfrom random import uniform\nimport time\nfrom functools import reduce, wraps\n\ndef func_time(func):\n    @wraps(func)\n    def wrapper():\n        time_list = []\n        for i in range(5):\n            start = time.time()\n            func()\n            stop = time.time()\n            a = float(stop - start)\n            time_list.append(a)\n        \n        x = float(reduce(lambda x,y: x+y, time_list)&#47;5)\n        print(f&#39;函数 {func_list.__name__} 的平均执行时间是 {x:.6f}&#39;)\n    \n    return wrapper\n\n@func_time\ndef func_list():\n    lst = []\n    for i in range(5):\n        random_float = uniform(0,10)\n        lst.append(random_float)\n    return\n\nfunc_list()","like_count":0},{"had_liked":false,"id":378043,"user_name":"Greenery","can_delete":false,"product_type":"c3","uid":3566765,"ip_address":"","ucode":"16111129C9EBA2","user_header":"https://static001.geekbang.org/account/avatar/00/36/6c/ad/0a694b50.jpg","comment_is_top":false,"comment_ctime":1689688247,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":3,"product_id":100310001,"comment_content":"from random import random\nfrom time import sleep, time\n\n\ndef calc_avg(n):\n    def decorate(func):\n        def wrapper():\n            sum = 0.0\n            for _ in range(n):\n                start = time()\n                func()\n                sum += time() - start\n            print(f&quot;Execute {n} times, average run time is {sum &#47; n:.2f}s.&quot;)\n\n        return wrapper\n\n    return decorate\n\n\n@calc_avg(5)\ndef random_work():\n    slp_time = random() * 5\n    print(f&quot;This time used {slp_time:.2f}s.&quot;)\n    sleep(slp_time)\n\nrandom_work()","like_count":0},{"had_liked":false,"id":376287,"user_name":"黄英镑","can_delete":false,"product_type":"c3","uid":2829525,"ip_address":"广东","ucode":"7B6853FDBA9C52","user_header":"","comment_is_top":false,"comment_ctime":1686647832,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":3,"product_id":100310001,"comment_content":"from functools import wraps\n\nimport time\n\n\ndef countAvgRunTime(times: int):\n    def wrapper(func):\n        @wraps(func)\n        def decorated(*args, **kwargs):\n            runTimeSum = 0\n            for t in range(times):\n                start = time.time()\n                func(*args, **kwargs)\n                stop = time.time()\n                runTimeSum += (stop - start)\n            print(f&#39;平均运行和时间{runTimeSum &#47; times}&#39;)\n\n        return decorated\n\n    return wrapper\n\n\n@countAvgRunTime(times=5)\ndef sleep():\n    time.sleep(1)\n\n\nsleep()","like_count":0},{"had_liked":false,"id":375323,"user_name":"Iris","can_delete":false,"product_type":"c3","uid":1203188,"ip_address":"上海","ucode":"082FD265F63EA9","user_header":"https://static001.geekbang.org/account/avatar/00/12/5b/f4/1a9c16fc.jpg","comment_is_top":false,"comment_ctime":1685336658,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":3,"product_id":100310001,"comment_content":"老师讲得通俗易通！！","like_count":0},{"had_liked":false,"id":369665,"user_name":"GeekNeo","can_delete":false,"product_type":"c3","uid":1146405,"ip_address":"浙江","ucode":"1D355A9BEB8BEA","user_header":"https://static001.geekbang.org/account/avatar/00/11/7e/25/3932dafd.jpg","comment_is_top":false,"comment_ctime":1677771820,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":3,"product_id":100310001,"comment_content":"import random\nimport time\nfrom functools import wraps\n\n\ndef multi_run_avg(cnt: int):\n    def time_it(func):\n        @wraps(func)\n        def wrapper():\n            start = time.time()\n            for _ in range(cnt):\n                func()\n            stop = time.time()\n            print(f&quot;func runs {cnt} times, and its average run time is {round((stop - start) &#47; cnt, 2)} secs.&quot;)\n\n        return wrapper\n\n    return time_it\n\n\n@multi_run_avg(5)\ndef work():\n    time.sleep(random.random())\n\n\nwork()","like_count":0},{"had_liked":false,"id":369599,"user_name":"sunny","can_delete":false,"product_type":"c3","uid":1904632,"ip_address":"江苏","ucode":"12350F6FF873D1","user_header":"https://static001.geekbang.org/account/avatar/00/1d/0f/f8/e1b9c1cc.jpg","comment_is_top":false,"comment_ctime":1677718998,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":4,"product_id":100310001,"comment_content":"#请你定义一个装饰器，可以让函数运行 5 遍，并输出平均运行时间。\nimport random\nimport time\nfrom functools import wraps\n\ndef avg_run(func):\n    @wraps(func)\n    def wrapper():\n        avg_time=0\n        for i in range(5):\n            start_time=time.time()\n            func()\n            stop_time=time.time()\n            interval = stop_time - start_time\n            avg_time += interval\n        avg_time = avg_time&#47;5\n        print(f&quot;avg time is {avg_time}&quot;)\n    return wrapper\n\n\n\n@avg_run\ndef work():\n    time.sleep(random.random())\n\n\nwork()","like_count":0},{"had_liked":false,"id":368591,"user_name":"朱雯","can_delete":false,"product_type":"c3","uid":1035744,"ip_address":"北京","ucode":"064C45FBF6B51F","user_header":"https://static001.geekbang.org/account/avatar/00/0f/cd/e0/c85bb948.jpg","comment_is_top":false,"comment_ctime":1676462868,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":4,"product_id":100310001,"comment_content":"import time\nimport random\nfrom functools import wraps\n\n\ndef it_time(func, times=5):\n    @wraps(func)\n    def wrapper():\n        start = time.time()\n        for i in range(0, 5):\n            func()\n        stop = time.time()\n        avg = (stop - start) &#47; times\n        print(f&quot;平均时间为{avg}&quot;)\n\n    return wrapper\n\n\n@it_time\ndef work():\n    print(&quot;函数执行开始&quot;)\n    time.sleep(random.randint(1, 5))\n    print(&quot;函数执行结束&quot;)\n\n\nwork()\nprint(work.__name__)","like_count":0},{"had_liked":false,"id":368588,"user_name":"朱雯","can_delete":false,"product_type":"c3","uid":1035744,"ip_address":"北京","ucode":"064C45FBF6B51F","user_header":"https://static001.geekbang.org/account/avatar/00/0f/cd/e0/c85bb948.jpg","comment_is_top":false,"comment_ctime":1676462628,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":4,"product_id":100310001,"comment_content":"import time\n\nfrom functools import wraps\n\n\ndef it_time(func, times=5):\n    @wraps(func)\n    def wrapper():\n        count = 0\n        for i in range(0, 5):\n            start = time.time()\n            func()\n            stop = time.time()\n            count += (stop - start)\n        avg = count &#47; times\n        print(f&quot;平均时间为{avg}&quot;)\n\n    return wrapper\n\n\n@it_time\ndef work():\n    print(&quot;函数执行开始&quot;)\n    time.sleep(1)\n    print(&quot;函数执行结束&quot;)\n\n\nwork()\nprint(work.__name__)","like_count":0},{"had_liked":false,"id":364647,"user_name":"Matthew","can_delete":false,"product_type":"c3","uid":2843865,"ip_address":"江苏","ucode":"96093089773740","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/PiajxSqBRaEKSVuNarJuDhBSvHY0giaq6yriceEBKiaKuc04wCYWOuso50noqDexaPJJibJN7PHwvcQppnzsDia1icZkw/132","comment_is_top":false,"comment_ctime":1671260556,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":4,"product_id":100310001,"comment_content":"import time\nimport random\nfrom functools import wraps\n\ndef avgTime(func, func_num=5):\n    @wraps(func)\n    def wrapper():\n        time_total = 0        \n        for i in range(func_num):\n            start = time.time()\n            func()\n            stop = time.time() \n            \n            interval = stop-start\n            print(f&quot;func 函数第 {i+1} 次的运行时间是 {interval}秒&quot;)\n\n            time_total += interval\n        \n        print(f&quot;func 函数的平均运行时间是 {time_total&#47;func_num}秒&quot;)\n    return wrapper\n\n@avgTime\ndef work():\n  time.sleep(random.random())\n\nwork()","like_count":0}]}