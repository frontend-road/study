{"id":130743,"title":"18 | 如何用硬件同步原语（CAS）替代锁？","content":"<p>你好，我是李玥。上节课，我们一起学习了如何使用锁来保护共享资源，你也了解到，使用锁是有一定性能损失的，并且，如果发生了过多的锁等待，将会非常影响程序的性能。</p><p>在一些特定的情况下，我们可以使用硬件同步原语来替代锁，可以保证和锁一样的数据安全性，同时具有更好的性能。</p><p>在今年的NSDI（NSDI是USENIX组织开办的关于网络系统设计的著名学术会议）上，伯克利大学发表了一篇论文《<a href=\"http://www.usenix.org/conference/nsdi19/presentation/khandelwal\">Confluo: Distributed Monitoring and Diagnosis Stack for High-speed Networks</a>》，这个论文中提到的Confluo，也是一个类似于消息队列的流数据存储，它的吞吐量号称是Kafka的4～10倍。对于这个实验结论我个人不是很认同，因为它设计的实验条件对Kafka来说不太公平。但不可否认的是，Confluo它的这个设计思路是一个创新，并且实际上它的性能也非常好。</p><p>Confluo是如何做到这么高的吞吐量的呢？这里面非常重要的一个创新的设计就是，它使用硬件同步原语来代替锁，在一个日志上（你可以理解为消息队列中的一个队列或者分区），保证严格顺序的前提下，实现了多线程并发写入。</p><p>今天，我们就来学习一下，如何用硬件同步原语（CAS）替代锁？</p><!-- [[[read_end]]] --><h2>什么是硬件同步原语？</h2><p>为什么硬件同步原语可以替代锁呢？要理解这个问题，你要首先知道硬件同步原语是什么。</p><p>硬件同步原语（Atomic Hardware Primitives）是由计算机硬件提供的一组原子操作，我们比较常用的原语主要是CAS和FAA这两种。</p><p>CAS（Compare and Swap），它的字面意思是：先比较，再交换。我们看一下CAS实现的伪代码：</p><pre><code>&lt;&lt; atomic &gt;&gt;\nfunction cas(p : pointer to int, old : int, new : int) returns bool {\n    if *p ≠ old {\n        return false\n    }\n    *p ← new\n    return true\n}\n</code></pre><p>它的输入参数一共有三个，分别是：</p><ul>\n<li>p: 要修改的变量的指针。</li>\n<li>old: 旧值。</li>\n<li>new: 新值。</li>\n</ul><p>返回的是一个布尔值，标识是否赋值成功。</p><p>通过这个伪代码，你就可以看出CAS原语的逻辑，非常简单，就是先比较一下变量p当前的值是不是等于old，如果等于，那就把变量p赋值为new，并返回true，否则就不改变变量p，并返回false。</p><p>这是CAS这个原语的语义，接下来我们看一下FAA原语（Fetch and Add）：</p><pre><code>&lt;&lt; atomic &gt;&gt;\nfunction faa(p : pointer to int, inc : int) returns int {\n    int value &lt;- *location\n    *p &lt;- value + inc\n    return value\n}\n</code></pre><p>FAA原语的语义是，先获取变量p当前的值value，然后给变量p增加inc，最后返回变量p之前的值value。</p><p>讲到这儿估计你会问，这两个原语到底有什么特殊的呢？</p><p>上面的这两段伪代码，如果我们用编程语言来实现，肯定是无法保证原子性的。而原语的特殊之处就是，它们都是由计算机硬件，具体说就是CPU提供的实现，可以保证操作的原子性。</p><p>我们知道，<strong>原子操作具有不可分割性，也就不存在并发的问题</strong>。所以在某些情况下，原语可以用来替代锁，实现一些即安全又高效的并发操作。</p><p>CAS和FAA在各种编程语言中，都有相应的实现，可以来直接使用，无论你是使用哪种编程语言，它们底层的实现是一样的，效果也是一样的。</p><p>接下来，还是拿我们熟悉的账户服务来举例说明一下，看看如何使用CAS原语来替代锁，实现同样的安全性。</p><h2>CAS版本的账户服务</h2><p>假设我们有一个共享变量balance，它保存的是当前账户余额，然后我们模拟多个线程并发转账的情况，看一下如何使用CAS原语来保证数据的安全性。</p><p>这次我们使用Go语言来实现这个转账服务。先看一下使用锁实现的版本：</p><pre><code>package main\n\nimport (\n\t&quot;fmt&quot;\n\t&quot;sync&quot;\n)\n\nfunc main() {\n\t// 账户初始值为0元\n\tvar balance int32\n\tbalance = int32(0)\n\tdone := make(chan bool)\n\t// 执行10000次转账，每次转入1元\n\tcount := 10000\n\n\tvar lock sync.Mutex\n\n\tfor i := 0; i &lt; count; i++ {\n\t\t// 这里模拟异步并发转账\n\t\tgo transfer(&amp;balance, 1, done, &amp;lock)\n\t}\n\t// 等待所有转账都完成\n\tfor i := 0; i &lt; count; i++ {\n\t\t&lt;-done\n\t}\n\t// 打印账户余额\n\tfmt.Printf(&quot;balance = %d \\n&quot;, balance)\n}\n// 转账服务\nfunc transfer(balance *int32, amount int, done chan bool, lock *sync.Mutex) {\n\tlock.Lock()\n\t*balance = *balance + int32(amount)\n\tlock.Unlock()\n\tdone &lt;- true\n}\n</code></pre><p>这个例子中，我们让账户的初始值为0，然后启动多个协程来并发执行10000次转账，每次往账户中转入1元，全部转账执行完成后，账户中的余额应该正好是10000元。</p><p>如果你没接触过Go语言，不了解协程也没关系，你可以简单地把它理解为进程或者线程都可以，这里我们只是希望能异步并发执行转账，我们并不关心这几种“程”他们之间细微的差别。</p><p>这个使用锁的版本，反复多次执行，每次balance的结果都正好是10000，那这段代码的安全性是没问题的。接下来我们看一下，使用CAS原语的版本。</p><pre><code>func transferCas(balance *int32, amount int, done chan bool) {\n\tfor {\n\t\told := atomic.LoadInt32(balance)\n\t\tnew := old + int32(amount)\n\t\tif atomic.CompareAndSwapInt32(balance, old, new) {\n\t\t\tbreak\n\t\t}\n\t}\n\tdone &lt;- true\n}\n</code></pre><p>这个CAS版本的转账服务和上面使用锁的版本，程序的总体结构是一样的，主要的区别就在于，“异步给账户余额+1”这一小块儿代码的实现。</p><p>那在使用锁的版本中，需要先获取锁，然后变更账户的值，最后释放锁，完成一次转账。我们可以看一下使用CAS原语的实现：</p><p>首先，它用for来做了一个没有退出条件的循环。在这个循环的内部，反复地调用CAS原语，来尝试给账户的余额+1。先取得账户当前的余额，暂时存放在变量old中，再计算转账之后的余额，保存在变量new中，然后调用CAS原语来尝试给变量balance赋值。我们刚刚讲过，CAS原语它的赋值操作是有前置条件的，只有变量balance的值等于old时，才会将balance赋值为new。</p><p>我们在for循环中执行了3条语句，在并发的环境中执行，这里面会有两种可能情况：</p><p>一种情况是，执行到第3条CAS原语时，没有其他线程同时改变了账户余额，那我们是可以安全变更账户余额的，这个时候执行CAS的返回值一定是true，转账成功，就可以退出循环了。并且，CAS这一条语句，它是一个原子操作，赋值的安全性是可以保证的。</p><p>另外一种情况，那就是在这个过程中，有其他线程改变了账户余额，这个时候是无法保证数据安全的，不能再进行赋值。执行CAS原语时，由于无法通过比较的步骤，所以不会执行赋值操作。本次尝试转账失败，当前线程并没有对账户余额做任何变更。由于返回值为false，不会退出循环，所以会继续重试，直到转账成功退出循环。</p><p>这样，每一次转账操作，都可以通过若干次重试，在保证安全性的前提下，完成并发转账操作。</p><p>其实，对于这个例子，还有更简单、性能更好的方式：那就是，直接使用FAA原语。</p><pre><code>func transferFaa(balance *int32, amount int, done chan bool) {\n\tatomic.AddInt32(balance, int32(amount))\n\tdone &lt;- true\n}\n</code></pre><p>FAA原语它的操作是，获取变量当前的值，然后把它做一个加法，并且保证这个操作的原子性，一行代码就可以搞定了。看到这儿，你可能会想，那CAS原语还有什么意义呢？</p><p>在这个例子里面，肯定是使用FAA原语更合适，但是我们上面介绍的，使用CAS原语的方法，它的适用范围更加广泛一些。类似于这样的逻辑：先读取数据，做计算，然后更新数据，无论这个计算是什么样的，都可以使用CAS原语来保护数据安全，但是FAA原语，这个计算的逻辑只能局限于简单的加减法。所以，我们上面讲的这种使用CAS原语的方法并不是没有意义的。</p><p>另外，你需要知道的是，这种使用CAS原语反复重试赋值的方法，它是比较耗费CPU资源的，因为在for循环中，如果赋值不成功，是会立即进入下一次循环没有等待的。如果线程之间的碰撞非常频繁，经常性的反复重试，这个重试的线程会占用大量的CPU时间，随之系统的整体性能就会下降。</p><p>缓解这个问题的一个方法是使用Yield()， 大部分编程语言都支持Yield()这个系统调用，Yield()的作用是，告诉操作系统，让出当前线程占用的CPU给其他线程使用。每次循环结束前调用一下Yield()方法，可以在一定程度上减少CPU的使用率，缓解这个问题。你也可以在每次循环结束之后，Sleep()一小段时间，但是这样做的代价是，性能会严重下降。</p><p>所以，这种方法它只适合于线程之间碰撞不太频繁，也就是说绝大部分情况下，执行CAS原语不需要重试这样的场景。</p><h2>小结</h2><p>这节课我们一起学习了CAS和FAA这两个原语。这些原语，是由CPU提供的原子操作，在并发环境中，单独使用这些原语不用担心数据安全问题。在特定的场景中，CAS原语可以替代锁，在保证安全性的同时，提供比锁更好的性能。</p><p>接下来，我们用转账服务这个例子，分别演示了CAS和FAA这两个原语是如何替代锁来使用的。对于类似：“先读取数据，做计算，然后再更新数据”这样的业务逻辑，可以使用CAS原语+反复重试的方式来保证数据安全，前提是，线程之间的碰撞不能太频繁，否则太多重试会消耗大量的CPU资源，反而得不偿失。</p><h2>思考题</h2><p>这节课的课后作业，依然需要你去动手来写代码。你需要把我们这节课中的讲到的账户服务这个例子，用你熟悉的语言，用锁、CAS和FAA这三种方法，都完整地实现一遍。每种实现方法都要求是完整的，可以执行的程序。</p><p>因为，对于并发和数据安全这块儿，你不仅要明白原理，熟悉相关的API，会正确地使用，是非常重要的。在这部分写出的Bug，都比较诡异，不好重现，而且很难调试。你会发现，你的数据一会儿是对的，一会儿又错了。或者在你开发的电脑上都正确，部署到服务器上又错了等等。所以，熟练掌握，一次性写出正确的代码，这样会帮你省出很多找Bug的时间。</p><p>验证作业是否正确的方法是，你反复多次执行你的程序，应该每次打印的结果都是：</p><pre><code>balance = 10000\n</code></pre><p>欢迎你把代码上传到GitHub上，然后在评论区给出访问链接。如果你有任何问题，也可以在评论区留言与我交流。</p><p>感谢阅读，如果你觉得这篇文章对你有一些启发，也欢迎把它分享给你的朋友。</p><p></p>","neighbors":{"left":{"article_title":"17 | 如何正确使用锁保护共享数据，协调异步线程？","id":129333},"right":{"article_title":"19 | 数据压缩：时间换空间的游戏","id":131826}},"comments":[{"had_liked":false,"id":130581,"user_name":"ponymm","can_delete":false,"product_type":"c1","uid":1087867,"ip_address":"","ucode":"E247AAA72AAAE2","user_header":"https://static001.geekbang.org/account/avatar/00/10/99/7b/0a056674.jpg","comment_is_top":false,"comment_ctime":1567488009,"is_pvip":false,"replies":[{"id":48875,"content":"感谢你指出错误，我已经联系编辑在文稿中改正了。","user_name":"作者回复","user_name_real":"李玥","uid":1501046,"ctime":1567503685,"ip_address":"","comment_id":130581,"utype":1}],"discussion_count":2,"race_medal":0,"score":2,"product_id":100032301,"comment_content":"“CAS 和 FAA 在各种编程语言中，都有相应的实现，可以来直接使用，无论你是使用哪种编程语言，它底层使用的系统调用是一样的，效果也是一样的。” 李老师这句话有点小问题：car,faa并不是通过系统调用实现的，系统调用的开销不小，cas本来就是为了提升性能，不会走系统调用。事实上是在用户态直接使用汇编指令就可以实现","like_count":52},{"had_liked":false,"id":130635,"user_name":"微微一笑","can_delete":false,"product_type":"c1","uid":1250327,"ip_address":"","ucode":"CFA7ABE81D0B99","user_header":"https://static001.geekbang.org/account/avatar/00/13/14/17/8763dced.jpg","comment_is_top":false,"comment_ctime":1567498618,"is_pvip":false,"replies":[{"id":48981,"content":"👍👍👍","user_name":"作者回复","user_name_real":"李玥","uid":1501046,"ctime":1567564780,"ip_address":"","comment_id":130635,"utype":1}],"discussion_count":3,"race_medal":0,"score":2,"product_id":100032301,"comment_content":"老师好，实现了下CAS,代码连接：https:&#47;&#47;github.com&#47;shenyachen&#47;JKSJ&#47;blob&#47;master&#47;study&#47;src&#47;main&#47;java&#47;com&#47;jksj&#47;study&#47;casAndFaa&#47;CASThread.java。\n对于FAA，通过查找资料，jdk1.8在调用sun.misc.Unsafe#getAndAddInt方法时，会根据系统底层是否支持FAA，来决定是使用FAA还是CAS。","like_count":31,"discussions":[{"author":{"id":1501046,"avatar":"https://static001.geekbang.org/account/avatar/00/16/e7/76/79c1f23a.jpg","nickname":"李玥","note":"","ucode":"B19E91EE248591","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":466015,"discussion_content":"感谢你指出错误，我已经联系编辑在文稿中改正了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567503685,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2558430,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJjbYMNwhsazNatHcxQ7L9MXTq2zurFrnZHWZxsWY55czDxSerHAeibrvwZB7t6CqoDfjMM2nWDHmg/132","nickname":"Geek_73fe59","note":"","ucode":"123D06150ADBFA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":373088,"discussion_content":"都2021年了，文章怎么还没改","likes_number":6,"is_delete":false,"is_hidden":false,"ctime":1620611129,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":130659,"user_name":"奕","can_delete":false,"product_type":"c1","uid":1005391,"ip_address":"","ucode":"73CEA468CE70C3","user_header":"https://static001.geekbang.org/account/avatar/00/0f/57/4f/6fb51ff1.jpg","comment_is_top":false,"comment_ctime":1567503230,"is_pvip":false,"replies":[{"id":48909,"content":"可以试试这个：https:&#47;&#47;developer.mozilla.org&#47;en-US&#47;docs&#47;Web&#47;JavaScript&#47;Reference&#47;Global_Objects&#47;Atomics","user_name":"作者回复","user_name_real":"李玥","uid":1501046,"ctime":1567514493,"ip_address":"","comment_id":130659,"utype":1}],"discussion_count":2,"race_medal":0,"score":2,"product_id":100032301,"comment_content":"NodeJS中，没有发现有关操作CpU原语CAS或者FAA的实现的","like_count":10,"discussions":[{"author":{"id":1501046,"avatar":"https://static001.geekbang.org/account/avatar/00/16/e7/76/79c1f23a.jpg","nickname":"李玥","note":"","ucode":"B19E91EE248591","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":466043,"discussion_content":"👍👍👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567564780,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1116106,"avatar":"https://static001.geekbang.org/account/avatar/00/11/07/ca/abb7bfe3.jpg","nickname":"Geek_ejy2ar","note":"","ucode":"DB6C45FD67CDA3","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":227739,"discussion_content":"分享：https://github.com/brettwooldridge/HikariCP/wiki/About-Pool-Sizing","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1586514893,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1116106,"avatar":"https://static001.geekbang.org/account/avatar/00/11/07/ca/abb7bfe3.jpg","nickname":"Geek_ejy2ar","note":"","ucode":"DB6C45FD67CDA3","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":227737,"discussion_content":"corePoolSize不应设值为10000， 若是4核的CPU， 设置成2*core + 1（也有说法是+）  似乎是最好的。你可以试试。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1586514877,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":130717,"user_name":"QQ怪","can_delete":false,"product_type":"c1","uid":1211223,"ip_address":"","ucode":"1A39B8433D9208","user_header":"https://static001.geekbang.org/account/avatar/00/12/7b/57/a9b04544.jpg","comment_is_top":false,"comment_ctime":1567517503,"is_pvip":false,"replies":[{"id":49321,"content":"👍👍👍","user_name":"作者回复","user_name_real":"李玥","uid":1501046,"ctime":1567648118,"ip_address":"","comment_id":130717,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100032301,"comment_content":"MutxLock：https:&#47;&#47;github.com&#47;xqq1994&#47;algorithm&#47;blob&#47;master&#47;src&#47;main&#47;java&#47;com&#47;test&#47;concurrency&#47;MutxLock.java\nCAS、FFA:\nhttps:&#47;&#47;github.com&#47;xqq1994&#47;algorithm&#47;blob&#47;master&#47;src&#47;main&#47;java&#47;com&#47;test&#47;concurrency&#47;CAS.java\n完成了老师的作业，好高兴","like_count":6,"discussions":[{"author":{"id":1501046,"avatar":"https://static001.geekbang.org/account/avatar/00/16/e7/76/79c1f23a.jpg","nickname":"李玥","note":"","ucode":"B19E91EE248591","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":466052,"discussion_content":"可以试试这个：https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Atomics","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567514493,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1081922,"avatar":"https://static001.geekbang.org/account/avatar/00/10/82/42/8b04d489.jpg","nickname":"刘丹","note":"","ucode":"66594D1C957E15","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":7784,"discussion_content":"node是单线程的，没有锁","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1567673166,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":130417,"user_name":"张三","can_delete":false,"product_type":"c1","uid":1004092,"ip_address":"","ucode":"1155528FAE1546","user_header":"https://static001.geekbang.org/account/avatar/00/0f/52/3c/d6fcb93a.jpg","comment_is_top":false,"comment_ctime":1567459435,"is_pvip":false,"replies":[{"id":48745,"content":"在java中，可以看一下java.util.concurrent.atomic.AtomicLong#getAndAdd","user_name":"作者回复","user_name_real":"李玥","uid":1501046,"ctime":1567493324,"ip_address":"","comment_id":130417,"utype":1}],"discussion_count":3,"race_medal":0,"score":2,"product_id":100032301,"comment_content":"Java里边有支持FAA这种CPU指令的实现吗？以前没听说","like_count":3,"discussions":[{"author":{"id":1501046,"avatar":"https://static001.geekbang.org/account/avatar/00/16/e7/76/79c1f23a.jpg","nickname":"李玥","note":"","ucode":"B19E91EE248591","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":465945,"discussion_content":"在java中，可以看一下java.util.concurrent.atomic.AtomicLong#getAndAdd","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567493324,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1207622,"avatar":"https://static001.geekbang.org/account/avatar/00/12/6d/46/e16291f8.jpg","nickname":"丁小明","note":"","ucode":"CC23857B8D75D5","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":256322,"discussion_content":"但是java中底层还是通过cas来实现的，并没有faa。这是为什么呢","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1588471049,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1004092,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/52/3c/d6fcb93a.jpg","nickname":"张三","note":"","ucode":"1155528FAE1546","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":7328,"discussion_content":"原来这个方法就是FAA指令啊！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567493971,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":130663,"user_name":"明日","can_delete":false,"product_type":"c1","uid":1003917,"ip_address":"","ucode":"348899EC65AE8D","user_header":"https://static001.geekbang.org/account/avatar/00/0f/51/8d/09f28606.jpg","comment_is_top":false,"comment_ctime":1567503617,"is_pvip":false,"replies":[{"id":48982,"content":"transfer2要放在循环中，否则有可能转账失败。\n另外，transfer1中，虽然一个简单的加法不会引起任何异常，但总是把unlock放到finnally中是一个好习惯。","user_name":"作者回复","user_name_real":"李玥","uid":1501046,"ctime":1567565043,"ip_address":"","comment_id":130663,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100032301,"comment_content":"Java实现: https:&#47;&#47;gist.github.com&#47;imgaoxin&#47;a2b09715af99b993e30b44963cebc530","like_count":2,"discussions":[{"author":{"id":1501046,"avatar":"https://static001.geekbang.org/account/avatar/00/16/e7/76/79c1f23a.jpg","nickname":"李玥","note":"","ucode":"B19E91EE248591","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":466055,"discussion_content":"transfer2要放在循环中，否则有可能转账失败。\n另外，transfer1中，虽然一个简单的加法不会引起任何异常，但总是把unlock放到finnally中是一个好习惯。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567565043,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":152988,"user_name":"Sicily9","can_delete":false,"product_type":"c1","uid":1224939,"ip_address":"","ucode":"ECFD642F164EE6","user_header":"https://static001.geekbang.org/account/avatar/00/12/b0/eb/43be030a.jpg","comment_is_top":false,"comment_ctime":1574134078,"is_pvip":false,"replies":[{"id":58846,"content":"不会的，可以放心使用。","user_name":"作者回复","user_name_real":"李玥","uid":1501046,"ctime":1574208916,"ip_address":"","comment_id":152988,"utype":1}],"discussion_count":3,"race_medal":0,"score":2,"product_id":100032301,"comment_content":"有一个小疑问，关于原子性的话，有一个极端情况，多核并行情况下 两个线程 同时在执行一个cas原语 会有安全问题吗","like_count":1,"discussions":[{"author":{"id":1501046,"avatar":"https://static001.geekbang.org/account/avatar/00/16/e7/76/79c1f23a.jpg","nickname":"李玥","note":"","ucode":"B19E91EE248591","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":475012,"discussion_content":"不会的，可以放心使用。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574208916,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1224939,"avatar":"https://static001.geekbang.org/account/avatar/00/12/b0/eb/43be030a.jpg","nickname":"Sicily9","note":"","ucode":"ECFD642F164EE6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":53709,"discussion_content":"这个是cpu 层面的锁机制吗","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574210987,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1130590,"avatar":"https://static001.geekbang.org/account/avatar/00/11/40/5e/b8fada94.jpg","nickname":"Ryoma","note":"","ucode":"7F692369239692","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1224939,"avatar":"https://static001.geekbang.org/account/avatar/00/12/b0/eb/43be030a.jpg","nickname":"Sicily9","note":"","ucode":"ECFD642F164EE6","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":204525,"discussion_content":"准备来说这不是锁，CPU 会将这两个命令当做一个原子一次执行，不会被其它任务中断","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584187409,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":53709,"ip_address":"","group_id":0},"score":204525,"extra":""}]}]},{"had_liked":false,"id":228967,"user_name":"衹是一支歌","can_delete":false,"product_type":"c1","uid":1456239,"ip_address":"","ucode":"9FC36529C9FD2E","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/iaZdMmzM0Vfass2ukHOqGgSBbtJMwb4NxDvLdN3R67iczzPVdtF0F0WS0abvls3edQpOVxaUJBmlr2YxHzUpveIQ/132","comment_is_top":false,"comment_ctime":1592872547,"is_pvip":false,"replies":[{"id":84526,"content":"是的。这也是为什么分布式事务如此之难的原因。","user_name":"作者回复","user_name_real":"李玥","uid":1501046,"ctime":1592916765,"ip_address":"","comment_id":228967,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100032301,"comment_content":"CAS FAA是不是只能用于单机情况下的资源控制访问呢？","like_count":0,"discussions":[{"author":{"id":1501046,"avatar":"https://static001.geekbang.org/account/avatar/00/16/e7/76/79c1f23a.jpg","nickname":"李玥","note":"","ucode":"B19E91EE248591","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":499279,"discussion_content":"是的。这也是为什么分布式事务如此之难的原因。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1592916765,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":139168,"user_name":"长期规划","can_delete":false,"product_type":"c1","uid":1019332,"ip_address":"","ucode":"5EF65E9115834B","user_header":"https://static001.geekbang.org/account/avatar/00/0f/8d/c4/6f97daea.jpg","comment_is_top":false,"comment_ctime":1570579764,"is_pvip":false,"replies":[{"id":53642,"content":"CPython（就是我们最常用的Python）中确实没有提供原子操作。可以看一下pypy：https:&#47;&#47;pypy.org&#47;","user_name":"作者回复","user_name_real":"李玥","uid":1501046,"ctime":1570583263,"ip_address":"","comment_id":139168,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100032301,"comment_content":"Python没找到CAS和FAA的实现","like_count":0,"discussions":[{"author":{"id":1501046,"avatar":"https://static001.geekbang.org/account/avatar/00/16/e7/76/79c1f23a.jpg","nickname":"李玥","note":"","ucode":"B19E91EE248591","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":499279,"discussion_content":"是的。这也是为什么分布式事务如此之难的原因。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1592916765,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":131047,"user_name":"青舟","can_delete":false,"product_type":"c1","uid":1192732,"ip_address":"","ucode":"2651482AC0DEC6","user_header":"https://static001.geekbang.org/account/avatar/00/12/33/1c/59a4e803.jpg","comment_is_top":false,"comment_ctime":1567608080,"is_pvip":false,"replies":[{"id":49332,"content":"java里面有AtomicInteger等等封装好的类，包含了CAS和FAA等原子操作，可以直接使用的。","user_name":"作者回复","user_name_real":"李玥","uid":1501046,"ctime":1567649063,"ip_address":"","comment_id":131047,"utype":1}],"discussion_count":2,"race_medal":0,"score":2,"product_id":100032301,"comment_content":"https:&#47;&#47;github.com&#47;qingzhou413&#47;geektime-mq.git\n做了1000万次加法，\nLock: 380ms\nCAS: 200ms\nFAA: 280ms","like_count":0,"discussions":[{"author":{"id":1501046,"avatar":"https://static001.geekbang.org/account/avatar/00/16/e7/76/79c1f23a.jpg","nickname":"李玥","note":"","ucode":"B19E91EE248591","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":469825,"discussion_content":"CPython（就是我们最常用的Python）中确实没有提供原子操作。可以看一下pypy：https://pypy.org/","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1570583263,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":130581,"user_name":"ponymm","can_delete":false,"product_type":"c1","uid":1087867,"ip_address":"","ucode":"E247AAA72AAAE2","user_header":"https://static001.geekbang.org/account/avatar/00/10/99/7b/0a056674.jpg","comment_is_top":false,"comment_ctime":1567488009,"is_pvip":false,"replies":[{"id":48875,"content":"感谢你指出错误，我已经联系编辑在文稿中改正了。","user_name":"作者回复","user_name_real":"李玥","uid":1501046,"ctime":1567503685,"ip_address":"","comment_id":130581,"utype":1}],"discussion_count":2,"race_medal":0,"score":2,"product_id":100032301,"comment_content":"“CAS 和 FAA 在各种编程语言中，都有相应的实现，可以来直接使用，无论你是使用哪种编程语言，它底层使用的系统调用是一样的，效果也是一样的。” 李老师这句话有点小问题：car,faa并不是通过系统调用实现的，系统调用的开销不小，cas本来就是为了提升性能，不会走系统调用。事实上是在用户态直接使用汇编指令就可以实现","like_count":52,"discussions":[{"author":{"id":1501046,"avatar":"https://static001.geekbang.org/account/avatar/00/16/e7/76/79c1f23a.jpg","nickname":"李玥","note":"","ucode":"B19E91EE248591","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":466015,"discussion_content":"感谢你指出错误，我已经联系编辑在文稿中改正了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567503685,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2558430,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJjbYMNwhsazNatHcxQ7L9MXTq2zurFrnZHWZxsWY55czDxSerHAeibrvwZB7t6CqoDfjMM2nWDHmg/132","nickname":"Geek_73fe59","note":"","ucode":"123D06150ADBFA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":373088,"discussion_content":"都2021年了，文章怎么还没改","likes_number":6,"is_delete":false,"is_hidden":false,"ctime":1620611129,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":130635,"user_name":"微微一笑","can_delete":false,"product_type":"c1","uid":1250327,"ip_address":"","ucode":"CFA7ABE81D0B99","user_header":"https://static001.geekbang.org/account/avatar/00/13/14/17/8763dced.jpg","comment_is_top":false,"comment_ctime":1567498618,"is_pvip":false,"replies":[{"id":48981,"content":"👍👍👍","user_name":"作者回复","user_name_real":"李玥","uid":1501046,"ctime":1567564780,"ip_address":"","comment_id":130635,"utype":1}],"discussion_count":3,"race_medal":0,"score":2,"product_id":100032301,"comment_content":"老师好，实现了下CAS,代码连接：https:&#47;&#47;github.com&#47;shenyachen&#47;JKSJ&#47;blob&#47;master&#47;study&#47;src&#47;main&#47;java&#47;com&#47;jksj&#47;study&#47;casAndFaa&#47;CASThread.java。\n对于FAA，通过查找资料，jdk1.8在调用sun.misc.Unsafe#getAndAddInt方法时，会根据系统底层是否支持FAA，来决定是使用FAA还是CAS。","like_count":31,"discussions":[{"author":{"id":1501046,"avatar":"https://static001.geekbang.org/account/avatar/00/16/e7/76/79c1f23a.jpg","nickname":"李玥","note":"","ucode":"B19E91EE248591","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":466043,"discussion_content":"👍👍👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567564780,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1116106,"avatar":"https://static001.geekbang.org/account/avatar/00/11/07/ca/abb7bfe3.jpg","nickname":"Geek_ejy2ar","note":"","ucode":"DB6C45FD67CDA3","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":227739,"discussion_content":"分享：https://github.com/brettwooldridge/HikariCP/wiki/About-Pool-Sizing","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1586514893,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1116106,"avatar":"https://static001.geekbang.org/account/avatar/00/11/07/ca/abb7bfe3.jpg","nickname":"Geek_ejy2ar","note":"","ucode":"DB6C45FD67CDA3","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":227737,"discussion_content":"corePoolSize不应设值为10000， 若是4核的CPU， 设置成2*core + 1（也有说法是+）  似乎是最好的。你可以试试。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1586514877,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":130659,"user_name":"奕","can_delete":false,"product_type":"c1","uid":1005391,"ip_address":"","ucode":"73CEA468CE70C3","user_header":"https://static001.geekbang.org/account/avatar/00/0f/57/4f/6fb51ff1.jpg","comment_is_top":false,"comment_ctime":1567503230,"is_pvip":false,"replies":[{"id":48909,"content":"可以试试这个：https:&#47;&#47;developer.mozilla.org&#47;en-US&#47;docs&#47;Web&#47;JavaScript&#47;Reference&#47;Global_Objects&#47;Atomics","user_name":"作者回复","user_name_real":"李玥","uid":1501046,"ctime":1567514493,"ip_address":"","comment_id":130659,"utype":1}],"discussion_count":2,"race_medal":0,"score":2,"product_id":100032301,"comment_content":"NodeJS中，没有发现有关操作CpU原语CAS或者FAA的实现的","like_count":10,"discussions":[{"author":{"id":1501046,"avatar":"https://static001.geekbang.org/account/avatar/00/16/e7/76/79c1f23a.jpg","nickname":"李玥","note":"","ucode":"B19E91EE248591","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":466052,"discussion_content":"可以试试这个：https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Atomics","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567514493,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1081922,"avatar":"https://static001.geekbang.org/account/avatar/00/10/82/42/8b04d489.jpg","nickname":"刘丹","note":"","ucode":"66594D1C957E15","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":7784,"discussion_content":"node是单线程的，没有锁","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1567673166,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":130717,"user_name":"QQ怪","can_delete":false,"product_type":"c1","uid":1211223,"ip_address":"","ucode":"1A39B8433D9208","user_header":"https://static001.geekbang.org/account/avatar/00/12/7b/57/a9b04544.jpg","comment_is_top":false,"comment_ctime":1567517503,"is_pvip":false,"replies":[{"id":49321,"content":"👍👍👍","user_name":"作者回复","user_name_real":"李玥","uid":1501046,"ctime":1567648118,"ip_address":"","comment_id":130717,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100032301,"comment_content":"MutxLock：https:&#47;&#47;github.com&#47;xqq1994&#47;algorithm&#47;blob&#47;master&#47;src&#47;main&#47;java&#47;com&#47;test&#47;concurrency&#47;MutxLock.java\nCAS、FFA:\nhttps:&#47;&#47;github.com&#47;xqq1994&#47;algorithm&#47;blob&#47;master&#47;src&#47;main&#47;java&#47;com&#47;test&#47;concurrency&#47;CAS.java\n完成了老师的作业，好高兴","like_count":6,"discussions":[{"author":{"id":1501046,"avatar":"https://static001.geekbang.org/account/avatar/00/16/e7/76/79c1f23a.jpg","nickname":"李玥","note":"","ucode":"B19E91EE248591","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":466085,"discussion_content":"👍👍👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567648118,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":130417,"user_name":"张三","can_delete":false,"product_type":"c1","uid":1004092,"ip_address":"","ucode":"1155528FAE1546","user_header":"https://static001.geekbang.org/account/avatar/00/0f/52/3c/d6fcb93a.jpg","comment_is_top":false,"comment_ctime":1567459435,"is_pvip":false,"replies":[{"id":48745,"content":"在java中，可以看一下java.util.concurrent.atomic.AtomicLong#getAndAdd","user_name":"作者回复","user_name_real":"李玥","uid":1501046,"ctime":1567493324,"ip_address":"","comment_id":130417,"utype":1}],"discussion_count":3,"race_medal":0,"score":2,"product_id":100032301,"comment_content":"Java里边有支持FAA这种CPU指令的实现吗？以前没听说","like_count":3,"discussions":[{"author":{"id":1501046,"avatar":"https://static001.geekbang.org/account/avatar/00/16/e7/76/79c1f23a.jpg","nickname":"李玥","note":"","ucode":"B19E91EE248591","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":466085,"discussion_content":"👍👍👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567648118,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":130663,"user_name":"明日","can_delete":false,"product_type":"c1","uid":1003917,"ip_address":"","ucode":"348899EC65AE8D","user_header":"https://static001.geekbang.org/account/avatar/00/0f/51/8d/09f28606.jpg","comment_is_top":false,"comment_ctime":1567503617,"is_pvip":false,"replies":[{"id":48982,"content":"transfer2要放在循环中，否则有可能转账失败。\n另外，transfer1中，虽然一个简单的加法不会引起任何异常，但总是把unlock放到finnally中是一个好习惯。","user_name":"作者回复","user_name_real":"李玥","uid":1501046,"ctime":1567565043,"ip_address":"","comment_id":130663,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100032301,"comment_content":"Java实现: https:&#47;&#47;gist.github.com&#47;imgaoxin&#47;a2b09715af99b993e30b44963cebc530","like_count":2,"discussions":[{"author":{"id":1501046,"avatar":"https://static001.geekbang.org/account/avatar/00/16/e7/76/79c1f23a.jpg","nickname":"李玥","note":"","ucode":"B19E91EE248591","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":465945,"discussion_content":"在java中，可以看一下java.util.concurrent.atomic.AtomicLong#getAndAdd","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567493324,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1207622,"avatar":"https://static001.geekbang.org/account/avatar/00/12/6d/46/e16291f8.jpg","nickname":"丁小明","note":"","ucode":"CC23857B8D75D5","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":256322,"discussion_content":"但是java中底层还是通过cas来实现的，并没有faa。这是为什么呢","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1588471049,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1004092,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/52/3c/d6fcb93a.jpg","nickname":"张三","note":"","ucode":"1155528FAE1546","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":7328,"discussion_content":"原来这个方法就是FAA指令啊！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567493971,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":152988,"user_name":"Sicily9","can_delete":false,"product_type":"c1","uid":1224939,"ip_address":"","ucode":"ECFD642F164EE6","user_header":"https://static001.geekbang.org/account/avatar/00/12/b0/eb/43be030a.jpg","comment_is_top":false,"comment_ctime":1574134078,"is_pvip":false,"replies":[{"id":58846,"content":"不会的，可以放心使用。","user_name":"作者回复","user_name_real":"李玥","uid":1501046,"ctime":1574208916,"ip_address":"","comment_id":152988,"utype":1}],"discussion_count":3,"race_medal":0,"score":2,"product_id":100032301,"comment_content":"有一个小疑问，关于原子性的话，有一个极端情况，多核并行情况下 两个线程 同时在执行一个cas原语 会有安全问题吗","like_count":1,"discussions":[{"author":{"id":1501046,"avatar":"https://static001.geekbang.org/account/avatar/00/16/e7/76/79c1f23a.jpg","nickname":"李玥","note":"","ucode":"B19E91EE248591","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":466055,"discussion_content":"transfer2要放在循环中，否则有可能转账失败。\n另外，transfer1中，虽然一个简单的加法不会引起任何异常，但总是把unlock放到finnally中是一个好习惯。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567565043,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":228967,"user_name":"衹是一支歌","can_delete":false,"product_type":"c1","uid":1456239,"ip_address":"","ucode":"9FC36529C9FD2E","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/iaZdMmzM0Vfass2ukHOqGgSBbtJMwb4NxDvLdN3R67iczzPVdtF0F0WS0abvls3edQpOVxaUJBmlr2YxHzUpveIQ/132","comment_is_top":false,"comment_ctime":1592872547,"is_pvip":false,"replies":[{"id":84526,"content":"是的。这也是为什么分布式事务如此之难的原因。","user_name":"作者回复","user_name_real":"李玥","uid":1501046,"ctime":1592916765,"ip_address":"","comment_id":228967,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100032301,"comment_content":"CAS FAA是不是只能用于单机情况下的资源控制访问呢？","like_count":0,"discussions":[{"author":{"id":1501046,"avatar":"https://static001.geekbang.org/account/avatar/00/16/e7/76/79c1f23a.jpg","nickname":"李玥","note":"","ucode":"B19E91EE248591","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":475012,"discussion_content":"不会的，可以放心使用。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574208916,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1224939,"avatar":"https://static001.geekbang.org/account/avatar/00/12/b0/eb/43be030a.jpg","nickname":"Sicily9","note":"","ucode":"ECFD642F164EE6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":53709,"discussion_content":"这个是cpu 层面的锁机制吗","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574210987,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1130590,"avatar":"https://static001.geekbang.org/account/avatar/00/11/40/5e/b8fada94.jpg","nickname":"Ryoma","note":"","ucode":"7F692369239692","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1224939,"avatar":"https://static001.geekbang.org/account/avatar/00/12/b0/eb/43be030a.jpg","nickname":"Sicily9","note":"","ucode":"ECFD642F164EE6","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":204525,"discussion_content":"准备来说这不是锁，CPU 会将这两个命令当做一个原子一次执行，不会被其它任务中断","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584187409,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":53709,"ip_address":"","group_id":0},"score":204525,"extra":""}]}]},{"had_liked":false,"id":139168,"user_name":"长期规划","can_delete":false,"product_type":"c1","uid":1019332,"ip_address":"","ucode":"5EF65E9115834B","user_header":"https://static001.geekbang.org/account/avatar/00/0f/8d/c4/6f97daea.jpg","comment_is_top":false,"comment_ctime":1570579764,"is_pvip":false,"replies":[{"id":53642,"content":"CPython（就是我们最常用的Python）中确实没有提供原子操作。可以看一下pypy：https:&#47;&#47;pypy.org&#47;","user_name":"作者回复","user_name_real":"李玥","uid":1501046,"ctime":1570583263,"ip_address":"","comment_id":139168,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100032301,"comment_content":"Python没找到CAS和FAA的实现","like_count":0,"discussions":[{"author":{"id":1501046,"avatar":"https://static001.geekbang.org/account/avatar/00/16/e7/76/79c1f23a.jpg","nickname":"李玥","note":"","ucode":"B19E91EE248591","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":469825,"discussion_content":"CPython（就是我们最常用的Python）中确实没有提供原子操作。可以看一下pypy：https://pypy.org/","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1570583263,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":131047,"user_name":"青舟","can_delete":false,"product_type":"c1","uid":1192732,"ip_address":"","ucode":"2651482AC0DEC6","user_header":"https://static001.geekbang.org/account/avatar/00/12/33/1c/59a4e803.jpg","comment_is_top":false,"comment_ctime":1567608080,"is_pvip":false,"replies":[{"id":49332,"content":"java里面有AtomicInteger等等封装好的类，包含了CAS和FAA等原子操作，可以直接使用的。","user_name":"作者回复","user_name_real":"李玥","uid":1501046,"ctime":1567649063,"ip_address":"","comment_id":131047,"utype":1}],"discussion_count":2,"race_medal":0,"score":2,"product_id":100032301,"comment_content":"https:&#47;&#47;github.com&#47;qingzhou413&#47;geektime-mq.git\n做了1000万次加法，\nLock: 380ms\nCAS: 200ms\nFAA: 280ms","like_count":0,"discussions":[{"author":{"id":1501046,"avatar":"https://static001.geekbang.org/account/avatar/00/16/e7/76/79c1f23a.jpg","nickname":"李玥","note":"","ucode":"B19E91EE248591","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":466264,"discussion_content":"java里面有AtomicInteger等等封装好的类，包含了CAS和FAA等原子操作，可以直接使用的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567649063,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1192732,"avatar":"https://static001.geekbang.org/account/avatar/00/12/33/1c/59a4e803.jpg","nickname":"青舟","note":"","ucode":"2651482AC0DEC6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":7720,"discussion_content":"嗯嗯，我实现之后也看了AtomicInteger的源码，验证下自己的思路是不是正确","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567651207,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":130714,"user_name":"潘政宇","can_delete":false,"product_type":"c1","uid":1254758,"ip_address":"","ucode":"9A6658EE862D95","user_header":"https://static001.geekbang.org/account/avatar/00/13/25/66/4835d92e.jpg","comment_is_top":false,"comment_ctime":1567516357,"is_pvip":false,"replies":[{"id":48979,"content":"可以参考一下：https:&#47;&#47;blog.golang.org&#47;pipelines","user_name":"作者回复","user_name_real":"李玥","uid":1501046,"ctime":1567564571,"ip_address":"","comment_id":130714,"utype":1}],"discussion_count":2,"race_medal":0,"score":3,"product_id":100032301,"comment_content":"go的语法太奇特了，代码中的done作用是什么啊","like_count":0},{"had_liked":false,"id":130607,"user_name":"刘天鹏","can_delete":false,"product_type":"c1","uid":1632015,"ip_address":"","ucode":"FB146250578911","user_header":"https://static001.geekbang.org/account/avatar/00/18/e7/0f/fa840c1b.jpg","comment_is_top":false,"comment_ctime":1567493617,"is_pvip":false,"replies":[{"id":48908,"content":"其实很多实现方法和技巧都是相通的","user_name":"作者回复","user_name_real":"李玥","uid":1501046,"ctime":1567514161,"ip_address":"","comment_id":130607,"utype":1}],"discussion_count":3,"race_medal":0,"score":3,"product_id":100032301,"comment_content":"对于 “CAS 和 FAA 在各种编程语言中，都有相应的实现”\n我想起之前在操作数据的时候，为了并发的修改用户数据(Money)，当时的做法是\n先Select出用户的Money\n再对Money做操作\n最后在Update的时候多附加一个条件（Money=OldMoney）","like_count":0,"discussions":[{"author":{"id":1501046,"avatar":"https://static001.geekbang.org/account/avatar/00/16/e7/76/79c1f23a.jpg","nickname":"李玥","note":"","ucode":"B19E91EE248591","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":466084,"discussion_content":"可以参考一下：https://blog.golang.org/pipelines","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567564571,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1592279,"avatar":"https://static001.geekbang.org/account/avatar/00/18/4b/d7/f46c6dfd.jpg","nickname":"William Ning","note":"","ucode":"4DB8D05E69E5F3","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":555424,"discussion_content":"Go Concurrency Patterns: Pipelines and cancellation\nGo并发模式：管道和取消\nhttps://go.dev/blog/pipelines","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1646898677,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":130605,"user_name":"刘天鹏","can_delete":false,"product_type":"c1","uid":1632015,"ip_address":"","ucode":"FB146250578911","user_header":"https://static001.geekbang.org/account/avatar/00/18/e7/0f/fa840c1b.jpg","comment_is_top":false,"comment_ctime":1567493365,"is_pvip":false,"replies":[{"id":48980,"content":"就是确保这个赋值也是一个原子操作。","user_name":"作者回复","user_name_real":"李玥","uid":1501046,"ctime":1567564769,"ip_address":"","comment_id":130605,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100032301,"comment_content":"https:&#47;&#47;gist.github.com&#47;liutianpeng&#47;6f72bca647be41705d68736a79246c2f\n用Golang实现的版本,其实老师都已经实现了，Test和Benchmark都做了，果然操作时间 FAA &lt; CAS &lt; Mutex\n\n另外还有一个问题 atomic.LoadXXX 这组函数是什么作用（或者说为了解决什么问题的?）\n","like_count":0,"discussions":[{"author":{"id":1501046,"avatar":"https://static001.geekbang.org/account/avatar/00/16/e7/76/79c1f23a.jpg","nickname":"李玥","note":"","ucode":"B19E91EE248591","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":466029,"discussion_content":"其实很多实现方法和技巧都是相通的","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1567514161,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2041790,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/27/be/b666abb4.jpg","nickname":"tongZi","note":"","ucode":"8BBAE4FA37FF79","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":294746,"discussion_content":"你好，请教下，如果是2核或者4核cpu；是否会有这种极端情况，两个线程同时去更新数据库money字段，是否会有线程安全问题","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1595987725,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1006789,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/5c/c5/1231d633.jpg","nickname":"梁中华","note":"","ucode":"52FE40242CBAD0","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":7336,"discussion_content":"就是乐观锁","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567497424,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":130675,"user_name":"姜戈","can_delete":false,"product_type":"c1","uid":1058972,"ip_address":"","ucode":"45C4BE93C8E4CC","user_header":"https://static001.geekbang.org/account/avatar/00/10/28/9c/73e76b19.jpg","comment_is_top":false,"comment_ctime":1567506762,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":3,"product_id":100032301,"comment_content":"JAVA中的FAA和CAS: FAA就是用CAS实现的。\n\npublic final int getAndAddInt(Object var1, long var2, int var4) {\n        int var5;\n        do {\n            var5 = this.getIntVolatile(var1, var2);\n        } while(!this.compareAndSwapInt(var1, var2, var5, var5 + var4));\n\n        return var5;\n    }","like_count":13},{"had_liked":false,"id":139668,"user_name":"达文西","can_delete":false,"product_type":"c1","uid":1398824,"ip_address":"","ucode":"01C1063F23D634","user_header":"https://static001.geekbang.org/account/avatar/00/15/58/28/c86340ca.jpg","comment_is_top":false,"comment_ctime":1570701621,"is_pvip":false,"replies":null,"discussion_count":1,"race_medal":0,"score":3,"product_id":100032301,"comment_content":"cas需要注意 aba 问题吧","like_count":11,"discussions":[{"author":{"id":1501046,"avatar":"https://static001.geekbang.org/account/avatar/00/16/e7/76/79c1f23a.jpg","nickname":"李玥","note":"","ucode":"B19E91EE248591","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":466027,"discussion_content":"就是确保这个赋值也是一个原子操作。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567564769,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":282736,"user_name":"Geek_a5453a","can_delete":false,"product_type":"c1","uid":2462393,"ip_address":"","ucode":"993DF63E38059D","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/BKusySicUz9ppf2aZCxe5jMMX2aI8o6kHRRQibFosGEZf7zNFue9OcTsmuicOHOBicZ404Z522AgrTlJa3gSW9AL8w/132","comment_is_top":false,"comment_ctime":1615383027,"is_pvip":false,"replies":null,"discussion_count":1,"race_medal":0,"score":3,"product_id":100032301,"comment_content":"没懂为什么消息队列的课一半都是在介绍其他一些基础概念，是我对高手这个词有误解吗","like_count":6,"discussions":[{"author":{"id":1597566,"avatar":"","nickname":"Geek_yoriba","note":"","ucode":"9754362861F2B3","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":407233,"discussion_content":"自己写cas的需要注意","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1634952825,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":144629,"user_name":"Switch","can_delete":false,"product_type":"c1","uid":1049360,"ip_address":"","ucode":"D8A7F7F6A0BEA9","user_header":"https://static001.geekbang.org/account/avatar/00/10/03/10/26f9f762.jpg","comment_is_top":false,"comment_ctime":1571985406,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":3,"product_id":100032301,"comment_content":"java实现， 锁、Unsafe类、AtomicInteger类\n\nhttps:&#47;&#47;github.com&#47;Switch-vov&#47;mq-learing&#47;tree&#47;master&#47;src&#47;main&#47;java&#47;com&#47;switchvov&#47;transfer","like_count":3},{"had_liked":false,"id":130418,"user_name":"张三","can_delete":false,"product_type":"c1","uid":1004092,"ip_address":"","ucode":"1155528FAE1546","user_header":"https://static001.geekbang.org/account/avatar/00/0f/52/3c/d6fcb93a.jpg","comment_is_top":false,"comment_ctime":1567460044,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":3,"product_id":100032301,"comment_content":"复习了一下Java中的原子类，对应到go里边的CAS实现中的for循环是自旋，还有就是要注意ABA问题吧。","like_count":3},{"had_liked":false,"id":281431,"user_name":"haijian.yang","can_delete":false,"product_type":"c1","uid":1162081,"ip_address":"","ucode":"E3D13ABA2CA347","user_header":"https://static001.geekbang.org/account/avatar/00/11/bb/61/2c2f5024.jpg","comment_is_top":false,"comment_ctime":1614748764,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":3,"product_id":100032301,"comment_content":"是不是应该说一下这部分在消息队列的应用？","like_count":2},{"had_liked":false,"id":270932,"user_name":"Khirye","can_delete":false,"product_type":"c1","uid":1080985,"ip_address":"","ucode":"6C54C126FA54B8","user_header":"https://static001.geekbang.org/account/avatar/00/10/7e/99/c4302030.jpg","comment_is_top":false,"comment_ctime":1609321735,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":3,"product_id":100032301,"comment_content":" 用JAVA实验了下，看起来在竞争比较激烈的情况下，CAS和Lock的耗时是差不多的，想问下老师这种情况下怎么选择用Lock还CAS呢？","like_count":2},{"had_liked":false,"id":130714,"user_name":"潘政宇","can_delete":false,"product_type":"c1","uid":1254758,"ip_address":"","ucode":"9A6658EE862D95","user_header":"https://static001.geekbang.org/account/avatar/00/13/25/66/4835d92e.jpg","comment_is_top":false,"comment_ctime":1567516357,"is_pvip":false,"replies":[{"id":48979,"content":"可以参考一下：https:&#47;&#47;blog.golang.org&#47;pipelines","user_name":"作者回复","user_name_real":"李玥","uid":1501046,"ctime":1567564571,"ip_address":"","comment_id":130714,"utype":1}],"discussion_count":2,"race_medal":0,"score":3,"product_id":100032301,"comment_content":"go的语法太奇特了，代码中的done作用是什么啊","like_count":0,"discussions":[{"author":{"id":1501046,"avatar":"https://static001.geekbang.org/account/avatar/00/16/e7/76/79c1f23a.jpg","nickname":"李玥","note":"","ucode":"B19E91EE248591","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":466084,"discussion_content":"可以参考一下：https://blog.golang.org/pipelines","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567564571,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1592279,"avatar":"https://static001.geekbang.org/account/avatar/00/18/4b/d7/f46c6dfd.jpg","nickname":"William Ning","note":"","ucode":"4DB8D05E69E5F3","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":555424,"discussion_content":"Go Concurrency Patterns: Pipelines and cancellation\nGo并发模式：管道和取消\nhttps://go.dev/blog/pipelines","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1646898677,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":130607,"user_name":"刘天鹏","can_delete":false,"product_type":"c1","uid":1632015,"ip_address":"","ucode":"FB146250578911","user_header":"https://static001.geekbang.org/account/avatar/00/18/e7/0f/fa840c1b.jpg","comment_is_top":false,"comment_ctime":1567493617,"is_pvip":false,"replies":[{"id":48908,"content":"其实很多实现方法和技巧都是相通的","user_name":"作者回复","user_name_real":"李玥","uid":1501046,"ctime":1567514161,"ip_address":"","comment_id":130607,"utype":1}],"discussion_count":3,"race_medal":0,"score":3,"product_id":100032301,"comment_content":"对于 “CAS 和 FAA 在各种编程语言中，都有相应的实现”\n我想起之前在操作数据的时候，为了并发的修改用户数据(Money)，当时的做法是\n先Select出用户的Money\n再对Money做操作\n最后在Update的时候多附加一个条件（Money=OldMoney）","like_count":0,"discussions":[{"author":{"id":1501046,"avatar":"https://static001.geekbang.org/account/avatar/00/16/e7/76/79c1f23a.jpg","nickname":"李玥","note":"","ucode":"B19E91EE248591","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":466029,"discussion_content":"其实很多实现方法和技巧都是相通的","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1567514161,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2041790,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/27/be/b666abb4.jpg","nickname":"tongZi","note":"","ucode":"8BBAE4FA37FF79","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":294746,"discussion_content":"你好，请教下，如果是2核或者4核cpu；是否会有这种极端情况，两个线程同时去更新数据库money字段，是否会有线程安全问题","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1595987725,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1006789,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/5c/c5/1231d633.jpg","nickname":"梁中华","note":"","ucode":"52FE40242CBAD0","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":7336,"discussion_content":"就是乐观锁","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567497424,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":130605,"user_name":"刘天鹏","can_delete":false,"product_type":"c1","uid":1632015,"ip_address":"","ucode":"FB146250578911","user_header":"https://static001.geekbang.org/account/avatar/00/18/e7/0f/fa840c1b.jpg","comment_is_top":false,"comment_ctime":1567493365,"is_pvip":false,"replies":[{"id":48980,"content":"就是确保这个赋值也是一个原子操作。","user_name":"作者回复","user_name_real":"李玥","uid":1501046,"ctime":1567564769,"ip_address":"","comment_id":130605,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100032301,"comment_content":"https:&#47;&#47;gist.github.com&#47;liutianpeng&#47;6f72bca647be41705d68736a79246c2f\n用Golang实现的版本,其实老师都已经实现了，Test和Benchmark都做了，果然操作时间 FAA &lt; CAS &lt; Mutex\n\n另外还有一个问题 atomic.LoadXXX 这组函数是什么作用（或者说为了解决什么问题的?）\n","like_count":0,"discussions":[{"author":{"id":1501046,"avatar":"https://static001.geekbang.org/account/avatar/00/16/e7/76/79c1f23a.jpg","nickname":"李玥","note":"","ucode":"B19E91EE248591","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":466027,"discussion_content":"就是确保这个赋值也是一个原子操作。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567564769,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":130675,"user_name":"姜戈","can_delete":false,"product_type":"c1","uid":1058972,"ip_address":"","ucode":"45C4BE93C8E4CC","user_header":"https://static001.geekbang.org/account/avatar/00/10/28/9c/73e76b19.jpg","comment_is_top":false,"comment_ctime":1567506762,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":3,"product_id":100032301,"comment_content":"JAVA中的FAA和CAS: FAA就是用CAS实现的。\n\npublic final int getAndAddInt(Object var1, long var2, int var4) {\n        int var5;\n        do {\n            var5 = this.getIntVolatile(var1, var2);\n        } while(!this.compareAndSwapInt(var1, var2, var5, var5 + var4));\n\n        return var5;\n    }","like_count":13},{"had_liked":false,"id":139668,"user_name":"达文西","can_delete":false,"product_type":"c1","uid":1398824,"ip_address":"","ucode":"01C1063F23D634","user_header":"https://static001.geekbang.org/account/avatar/00/15/58/28/c86340ca.jpg","comment_is_top":false,"comment_ctime":1570701621,"is_pvip":false,"replies":null,"discussion_count":1,"race_medal":0,"score":3,"product_id":100032301,"comment_content":"cas需要注意 aba 问题吧","like_count":11,"discussions":[{"author":{"id":1597566,"avatar":"","nickname":"Geek_yoriba","note":"","ucode":"9754362861F2B3","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":407233,"discussion_content":"自己写cas的需要注意","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1634952825,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":282736,"user_name":"Geek_a5453a","can_delete":false,"product_type":"c1","uid":2462393,"ip_address":"","ucode":"993DF63E38059D","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/BKusySicUz9ppf2aZCxe5jMMX2aI8o6kHRRQibFosGEZf7zNFue9OcTsmuicOHOBicZ404Z522AgrTlJa3gSW9AL8w/132","comment_is_top":false,"comment_ctime":1615383027,"is_pvip":false,"replies":null,"discussion_count":1,"race_medal":0,"score":3,"product_id":100032301,"comment_content":"没懂为什么消息队列的课一半都是在介绍其他一些基础概念，是我对高手这个词有误解吗","like_count":6,"discussions":[{"author":{"id":1590610,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/B9vSOjMc2a86kYA8R5yDkVdFiaj2JeBZ1PuI9oUKhbnvuZwuibdUam6FTcGzDaiaFdk2GWJveUGhfCVpv4KaOdicoQ/132","nickname":"帝江","note":"","ucode":"93CBA4E4D05DA5","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":379237,"discussion_content":"如果仅仅是会用的话，前面几节课就够用了。作者应该是想把咱培养的能自己实现一个消息队列，最次也是知道细节，用起来大胆","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1623765403,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":144629,"user_name":"Switch","can_delete":false,"product_type":"c1","uid":1049360,"ip_address":"","ucode":"D8A7F7F6A0BEA9","user_header":"https://static001.geekbang.org/account/avatar/00/10/03/10/26f9f762.jpg","comment_is_top":false,"comment_ctime":1571985406,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":3,"product_id":100032301,"comment_content":"java实现， 锁、Unsafe类、AtomicInteger类\n\nhttps:&#47;&#47;github.com&#47;Switch-vov&#47;mq-learing&#47;tree&#47;master&#47;src&#47;main&#47;java&#47;com&#47;switchvov&#47;transfer","like_count":3},{"had_liked":false,"id":130418,"user_name":"张三","can_delete":false,"product_type":"c1","uid":1004092,"ip_address":"","ucode":"1155528FAE1546","user_header":"https://static001.geekbang.org/account/avatar/00/0f/52/3c/d6fcb93a.jpg","comment_is_top":false,"comment_ctime":1567460044,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":3,"product_id":100032301,"comment_content":"复习了一下Java中的原子类，对应到go里边的CAS实现中的for循环是自旋，还有就是要注意ABA问题吧。","like_count":3},{"had_liked":false,"id":281431,"user_name":"haijian.yang","can_delete":false,"product_type":"c1","uid":1162081,"ip_address":"","ucode":"E3D13ABA2CA347","user_header":"https://static001.geekbang.org/account/avatar/00/11/bb/61/2c2f5024.jpg","comment_is_top":false,"comment_ctime":1614748764,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":3,"product_id":100032301,"comment_content":"是不是应该说一下这部分在消息队列的应用？","like_count":2},{"had_liked":false,"id":270932,"user_name":"Khirye","can_delete":false,"product_type":"c1","uid":1080985,"ip_address":"","ucode":"6C54C126FA54B8","user_header":"https://static001.geekbang.org/account/avatar/00/10/7e/99/c4302030.jpg","comment_is_top":false,"comment_ctime":1609321735,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":3,"product_id":100032301,"comment_content":" 用JAVA实验了下，看起来在竞争比较激烈的情况下，CAS和Lock的耗时是差不多的，想问下老师这种情况下怎么选择用Lock还CAS呢？","like_count":2,"discussions":[{"author":{"id":1590610,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/B9vSOjMc2a86kYA8R5yDkVdFiaj2JeBZ1PuI9oUKhbnvuZwuibdUam6FTcGzDaiaFdk2GWJveUGhfCVpv4KaOdicoQ/132","nickname":"帝江","note":"","ucode":"93CBA4E4D05DA5","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":379237,"discussion_content":"如果仅仅是会用的话，前面几节课就够用了。作者应该是想把咱培养的能自己实现一个消息队列，最次也是知道细节，用起来大胆","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1623765403,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":135575,"user_name":"顶新","can_delete":false,"product_type":"c1","uid":1036566,"ip_address":"","ucode":"241D3CCCAE536B","user_header":"https://static001.geekbang.org/account/avatar/00/0f/d1/16/6347bbc0.jpg","comment_is_top":false,"comment_ctime":1569218253,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":4,"product_id":100032301,"comment_content":".net 实现代码：\nlock 实现：\nstatic void transfer(object amount)\n        {\n            lock (obj)\n            {\n                balance = balance + Convert.ToInt32(amount);\n            }            \n        }\ncas 实现：\nstatic void transfer_cas(object amount)\n        {\n            int initialValue, computedValue;\n            do\n            {\n                initialValue = balance;                \n                computedValue = initialValue + Convert.ToInt32(amount);                \n            } while (initialValue != Interlocked.CompareExchange(\n                ref balance, computedValue, initialValue));\n        }\n\nfaa 实现：\nstatic void transfer_faa(object amount){\n            Interlocked.Add(ref balance,Convert.ToInt32(amount));\n        }\n","like_count":2},{"had_liked":false,"id":130639,"user_name":"leslie","can_delete":false,"product_type":"c1","uid":1324255,"ip_address":"","ucode":"798E7C1CC98CC2","user_header":"https://static001.geekbang.org/account/avatar/00/14/34/df/64e3d533.jpg","comment_is_top":false,"comment_ctime":1567499441,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":4,"product_id":100032301,"comment_content":"   打卡：老师一步步剥离一层层拨开实质-又涨知识了，期待老师的下节课。","like_count":2},{"had_liked":false,"id":333493,"user_name":"寥若晨星","can_delete":false,"product_type":"c1","uid":1447739,"ip_address":"","ucode":"2E87E43687DE72","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eou1BMETumU21ZI4yiaLenOMSibzkAgkw944npIpsJRicmdicxlVQcgibyoQ00rdGk9Htp1j0dM5CP2Fibw/132","comment_is_top":false,"comment_ctime":1644385374,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":4,"product_id":100032301,"comment_content":"yield那段有问题，使用yield会让出cpu，导致用户态和内核态的切换，产生系统开销，这样还不如用锁呢。。。违背了使用CAS的初衷","like_count":1},{"had_liked":false,"id":311973,"user_name":"Eleven","can_delete":false,"product_type":"c1","uid":1168452,"ip_address":"","ucode":"FB4A0C8CA732BE","user_header":"https://static001.geekbang.org/account/avatar/00/11/d4/44/0ec958f4.jpg","comment_is_top":false,"comment_ctime":1631582105,"is_pvip":false,"replies":null,"discussion_count":1,"race_medal":0,"score":4,"product_id":100032301,"comment_content":"这个FAA的原语为什么是先获取之前的值x，然后做计算x+a，最后返回x?","like_count":1},{"had_liked":false,"id":288211,"user_name":"LQS  KF","can_delete":false,"product_type":"c1","uid":1364737,"ip_address":"","ucode":"3C0A07A8220094","user_header":"https://static001.geekbang.org/account/avatar/00/14/d3/01/716d45b6.jpg","comment_is_top":false,"comment_ctime":1618365941,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":4,"product_id":100032301,"comment_content":"转账服务涉及两个账户的原子性操作，感觉还是用锁比较好，文章中只操作了接受转账的单账号原子操作，个人觉得不妥。","like_count":1},{"had_liked":false,"id":389872,"user_name":"TheOne","can_delete":false,"product_type":"c1","uid":1582134,"ip_address":"北京","ucode":"2A359780156A8B","user_header":"https://static001.geekbang.org/account/avatar/00/18/24/36/0829cbdc.jpg","comment_is_top":false,"comment_ctime":1713748970,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":4,"product_id":100032301,"comment_content":"cas感觉很像乐观锁？","like_count":0},{"had_liked":false,"id":376656,"user_name":"大头","can_delete":false,"product_type":"c1","uid":1315367,"ip_address":"北京","ucode":"C1FB2C8A0FB0C0","user_header":"https://static001.geekbang.org/account/avatar/00/14/12/27/32746bbf.jpg","comment_is_top":false,"comment_ctime":1687170917,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":4,"product_id":100032301,"comment_content":"@Getter\npublic class CasTest {\n\n    private int balance = 0;\n\n    static ExecutorService executorService = new ThreadPoolExecutor(\n            4,\n            4,\n            0,\n            TimeUnit.MINUTES,\n            new LinkedBlockingQueue&lt;&gt;(2000));\n\n\n    public static void main(String[] args) throws Exception {\n        Unsafe unsafe = getUnsafe();\n\n        Field cntField = CasTest.class.getDeclaredField(&quot;balance&quot;);\n\n        final int threadSize = 1000;\n        CasTest example = new CasTest();\n        final CountDownLatch countDownLatch = new CountDownLatch(threadSize);\n\n        for (int i = 0; i &lt; threadSize; i++) {\n            executorService.execute(() -&gt; {\n                unsafe.getAndAddInt(example, unsafe.objectFieldOffset(cntField), 1);\n                countDownLatch.countDown();\n            });\n        }\n        countDownLatch.await();\n        executorService.shutdown();\n        System.out.println(example.getBalance());\n    }\n\n    private static Unsafe getUnsafe() throws NoSuchFieldException, IllegalAccessException {\n        Class klass = Unsafe.class;\n        Field field = klass.getDeclaredField(&quot;theUnsafe&quot;);\n        field.setAccessible(true);\n        Unsafe unsafe = (Unsafe) field.get(null);\n        return unsafe;\n    }\n\n\n}","like_count":0},{"had_liked":false,"id":364729,"user_name":"Jussi Lee","can_delete":false,"product_type":"c1","uid":1211190,"ip_address":"广东","ucode":"F2F5948CCD52A2","user_header":"https://static001.geekbang.org/account/avatar/00/12/7b/36/fd46331c.jpg","comment_is_top":false,"comment_ctime":1671420368,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":4,"product_id":100032301,"comment_content":"Java 可以用completedFuture 实现比较方便一些","like_count":0},{"had_liked":false,"id":296417,"user_name":"离境”","can_delete":false,"product_type":"c1","uid":1895314,"ip_address":"","ucode":"7186EF2BEF8956","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/STqKg1kLgvRuduQfo0R2E2osYBian7XrQAjSWmOwL9nyZVhq7vyLPnlGcgvguFV4aV7ToWLFiauEMKy96KWHKBVg/132","comment_is_top":false,"comment_ctime":1622966748,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":4,"product_id":100032301,"comment_content":"为什么我的实验结果，加锁方式比cas快许多","like_count":0},{"had_liked":false,"id":278313,"user_name":"翡翠虎","can_delete":false,"product_type":"c1","uid":1448015,"ip_address":"","ucode":"2572E93C4C57A5","user_header":"https://static001.geekbang.org/account/avatar/00/16/18/4f/9e4d5591.jpg","comment_is_top":false,"comment_ctime":1612868482,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":4,"product_id":100032301,"comment_content":"我在老师我在老师给的 GOLANG CAS 示例的基础上扩展了 demo，增加了文件追加写的函数。目前 gorouting 2 万次，日志记录到有 CAS 失败的情况（这是正常的），最后写入到文件的内容都是正确的。我想问问，老师给的这个 GOLANG CAS 示例，好像不存在 ABA 问题，对吧？","like_count":0,"discussions":[{"author":{"id":2851542,"avatar":"","nickname":"我要写代码！","note":"","ucode":"0859B8BFA7834A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":565927,"discussion_content":"我也想问","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1650555972,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":135575,"user_name":"顶新","can_delete":false,"product_type":"c1","uid":1036566,"ip_address":"","ucode":"241D3CCCAE536B","user_header":"https://static001.geekbang.org/account/avatar/00/0f/d1/16/6347bbc0.jpg","comment_is_top":false,"comment_ctime":1569218253,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":4,"product_id":100032301,"comment_content":".net 实现代码：\nlock 实现：\nstatic void transfer(object amount)\n        {\n            lock (obj)\n            {\n                balance = balance + Convert.ToInt32(amount);\n            }            \n        }\ncas 实现：\nstatic void transfer_cas(object amount)\n        {\n            int initialValue, computedValue;\n            do\n            {\n                initialValue = balance;                \n                computedValue = initialValue + Convert.ToInt32(amount);                \n            } while (initialValue != Interlocked.CompareExchange(\n                ref balance, computedValue, initialValue));\n        }\n\nfaa 实现：\nstatic void transfer_faa(object amount){\n            Interlocked.Add(ref balance,Convert.ToInt32(amount));\n        }\n","like_count":2},{"had_liked":false,"id":130639,"user_name":"leslie","can_delete":false,"product_type":"c1","uid":1324255,"ip_address":"","ucode":"798E7C1CC98CC2","user_header":"https://static001.geekbang.org/account/avatar/00/14/34/df/64e3d533.jpg","comment_is_top":false,"comment_ctime":1567499441,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":4,"product_id":100032301,"comment_content":"   打卡：老师一步步剥离一层层拨开实质-又涨知识了，期待老师的下节课。","like_count":2},{"had_liked":false,"id":333493,"user_name":"寥若晨星","can_delete":false,"product_type":"c1","uid":1447739,"ip_address":"","ucode":"2E87E43687DE72","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eou1BMETumU21ZI4yiaLenOMSibzkAgkw944npIpsJRicmdicxlVQcgibyoQ00rdGk9Htp1j0dM5CP2Fibw/132","comment_is_top":false,"comment_ctime":1644385374,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":4,"product_id":100032301,"comment_content":"yield那段有问题，使用yield会让出cpu，导致用户态和内核态的切换，产生系统开销，这样还不如用锁呢。。。违背了使用CAS的初衷","like_count":1},{"had_liked":false,"id":311973,"user_name":"Eleven","can_delete":false,"product_type":"c1","uid":1168452,"ip_address":"","ucode":"FB4A0C8CA732BE","user_header":"https://static001.geekbang.org/account/avatar/00/11/d4/44/0ec958f4.jpg","comment_is_top":false,"comment_ctime":1631582105,"is_pvip":false,"replies":null,"discussion_count":1,"race_medal":0,"score":4,"product_id":100032301,"comment_content":"这个FAA的原语为什么是先获取之前的值x，然后做计算x+a，最后返回x?","like_count":1,"discussions":[{"author":{"id":2851542,"avatar":"","nickname":"我要写代码！","note":"","ucode":"0859B8BFA7834A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":565927,"discussion_content":"我也想问","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1650555972,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":288211,"user_name":"LQS  KF","can_delete":false,"product_type":"c1","uid":1364737,"ip_address":"","ucode":"3C0A07A8220094","user_header":"https://static001.geekbang.org/account/avatar/00/14/d3/01/716d45b6.jpg","comment_is_top":false,"comment_ctime":1618365941,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":4,"product_id":100032301,"comment_content":"转账服务涉及两个账户的原子性操作，感觉还是用锁比较好，文章中只操作了接受转账的单账号原子操作，个人觉得不妥。","like_count":1},{"had_liked":false,"id":389872,"user_name":"TheOne","can_delete":false,"product_type":"c1","uid":1582134,"ip_address":"北京","ucode":"2A359780156A8B","user_header":"https://static001.geekbang.org/account/avatar/00/18/24/36/0829cbdc.jpg","comment_is_top":false,"comment_ctime":1713748970,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":4,"product_id":100032301,"comment_content":"cas感觉很像乐观锁？","like_count":0},{"had_liked":false,"id":376656,"user_name":"大头","can_delete":false,"product_type":"c1","uid":1315367,"ip_address":"北京","ucode":"C1FB2C8A0FB0C0","user_header":"https://static001.geekbang.org/account/avatar/00/14/12/27/32746bbf.jpg","comment_is_top":false,"comment_ctime":1687170917,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":4,"product_id":100032301,"comment_content":"@Getter\npublic class CasTest {\n\n    private int balance = 0;\n\n    static ExecutorService executorService = new ThreadPoolExecutor(\n            4,\n            4,\n            0,\n            TimeUnit.MINUTES,\n            new LinkedBlockingQueue&lt;&gt;(2000));\n\n\n    public static void main(String[] args) throws Exception {\n        Unsafe unsafe = getUnsafe();\n\n        Field cntField = CasTest.class.getDeclaredField(&quot;balance&quot;);\n\n        final int threadSize = 1000;\n        CasTest example = new CasTest();\n        final CountDownLatch countDownLatch = new CountDownLatch(threadSize);\n\n        for (int i = 0; i &lt; threadSize; i++) {\n            executorService.execute(() -&gt; {\n                unsafe.getAndAddInt(example, unsafe.objectFieldOffset(cntField), 1);\n                countDownLatch.countDown();\n            });\n        }\n        countDownLatch.await();\n        executorService.shutdown();\n        System.out.println(example.getBalance());\n    }\n\n    private static Unsafe getUnsafe() throws NoSuchFieldException, IllegalAccessException {\n        Class klass = Unsafe.class;\n        Field field = klass.getDeclaredField(&quot;theUnsafe&quot;);\n        field.setAccessible(true);\n        Unsafe unsafe = (Unsafe) field.get(null);\n        return unsafe;\n    }\n\n\n}","like_count":0},{"had_liked":false,"id":364729,"user_name":"Jussi Lee","can_delete":false,"product_type":"c1","uid":1211190,"ip_address":"广东","ucode":"F2F5948CCD52A2","user_header":"https://static001.geekbang.org/account/avatar/00/12/7b/36/fd46331c.jpg","comment_is_top":false,"comment_ctime":1671420368,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":4,"product_id":100032301,"comment_content":"Java 可以用completedFuture 实现比较方便一些","like_count":0},{"had_liked":false,"id":296417,"user_name":"离境”","can_delete":false,"product_type":"c1","uid":1895314,"ip_address":"","ucode":"7186EF2BEF8956","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/STqKg1kLgvRuduQfo0R2E2osYBian7XrQAjSWmOwL9nyZVhq7vyLPnlGcgvguFV4aV7ToWLFiauEMKy96KWHKBVg/132","comment_is_top":false,"comment_ctime":1622966748,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":4,"product_id":100032301,"comment_content":"为什么我的实验结果，加锁方式比cas快许多","like_count":0},{"had_liked":false,"id":278313,"user_name":"翡翠虎","can_delete":false,"product_type":"c1","uid":1448015,"ip_address":"","ucode":"2572E93C4C57A5","user_header":"https://static001.geekbang.org/account/avatar/00/16/18/4f/9e4d5591.jpg","comment_is_top":false,"comment_ctime":1612868482,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":4,"product_id":100032301,"comment_content":"我在老师我在老师给的 GOLANG CAS 示例的基础上扩展了 demo，增加了文件追加写的函数。目前 gorouting 2 万次，日志记录到有 CAS 失败的情况（这是正常的），最后写入到文件的内容都是正确的。我想问问，老师给的这个 GOLANG CAS 示例，好像不存在 ABA 问题，对吧？","like_count":0},{"had_liked":false,"id":277909,"user_name":"Heaven","can_delete":false,"product_type":"c1","uid":1694207,"ip_address":"","ucode":"FA33FBCC66C911","user_header":"https://static001.geekbang.org/account/avatar/00/19/d9/ff/b23018a6.jpg","comment_is_top":false,"comment_ctime":1612666802,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":5,"product_id":100032301,"comment_content":"https:&#47;&#47;github.com&#47;HeavenXin&#47;geektime_message_queue&#47;tree&#47;master&#47;src18","like_count":0},{"had_liked":false,"id":237907,"user_name":"tongZi","can_delete":false,"product_type":"c1","uid":2041790,"ip_address":"","ucode":"8BBAE4FA37FF79","user_header":"https://static001.geekbang.org/account/avatar/00/1f/27/be/b666abb4.jpg","comment_is_top":false,"comment_ctime":1596002595,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":5,"product_id":100032301,"comment_content":"“如果线程之间的碰撞非常频繁，经常性的反复重试，这个重试的线程会占用大量的 CPU 时间，随之系统的整体性能就会下降。”\n老师你好，请问这个重试的线程为什么会占用“大量”的cpu时间？？\n会比其它正常请求的线程，占用时间更多吗？？","like_count":0},{"had_liked":false,"id":237860,"user_name":"tongZi","can_delete":false,"product_type":"c1","uid":2041790,"ip_address":"","ucode":"8BBAE4FA37FF79","user_header":"https://static001.geekbang.org/account/avatar/00/1f/27/be/b666abb4.jpg","comment_is_top":false,"comment_ctime":1595987893,"is_pvip":false,"replies":null,"discussion_count":1,"race_medal":0,"score":5,"product_id":100032301,"comment_content":"==对于 “CAS 和 FAA 在各种编程语言中，都有相应的实现”\n我想起之前在操作数据的时候，为了并发的修改用户数据(Money)，当时的做法是\n先Select出用户的Money\n再对Money做操作\n最后在Update的时候多附加一个条件（Money=OldMoney）==\n老师您好，这个问题，如果cpu多核并行，假如极端情况，多线程同时去更新money字段，是否会有线程安全问题？？？","like_count":0},{"had_liked":false,"id":233837,"user_name":"test","can_delete":false,"product_type":"c1","uid":1065849,"ip_address":"","ucode":"9A4973E591DD12","user_header":"https://static001.geekbang.org/account/avatar/00/10/43/79/18073134.jpg","comment_is_top":false,"comment_ctime":1594468775,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":5,"product_id":100032301,"comment_content":"public class CASTest implements Runnable{\n    private AtomicInteger account;\n    private CountDownLatch latch;\n\n    public CASTest(CountDownLatch latch, AtomicInteger account){\n        this.account = account;\n        this.latch = latch;\n    }\n\n    @Override\n    public void run() {\n        while (!account.compareAndSet(account.get(), account.get() + 1)){}\n        latch.countDown();\n    }\n\n    public static void main(String[] args) throws InterruptedException {\n        StopWatch stopWatch = new StopWatch();\n        stopWatch.start();\n        int THREAD_NUM = 10000;\n        int cpuCore = Runtime.getRuntime().availableProcessors();\n        AtomicInteger account = new AtomicInteger(0);\n        CountDownLatch latch = new CountDownLatch(THREAD_NUM);\n        ThreadPoolExecutor executor = new ThreadPoolExecutor(cpuCore + 1, THREAD_NUM, 0,\n                TimeUnit.SECONDS, new LinkedBlockingQueue&lt;&gt;(65536));\n        for(int i = 0;i &lt; THREAD_NUM;++i) {\n            executor.execute(new CASTest(latch, account));\n        }\n        latch.await();\n        System.out.println(account.get());\n        System.out.println(stopWatch.getTime());\n        executor.shutdown();\n    }\n}","like_count":0},{"had_liked":false,"id":230379,"user_name":"Khirye","can_delete":false,"product_type":"c1","uid":1080985,"ip_address":"","ucode":"6C54C126FA54B8","user_header":"https://static001.geekbang.org/account/avatar/00/10/7e/99/c4302030.jpg","comment_is_top":false,"comment_ctime":1593357460,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":5,"product_id":100032301,"comment_content":"老师您好，想请教下如何检测线程碰撞是否频繁呢？","like_count":0},{"had_liked":false,"id":213544,"user_name":"丁小明","can_delete":false,"product_type":"c1","uid":1207622,"ip_address":"","ucode":"CC23857B8D75D5","user_header":"https://static001.geekbang.org/account/avatar/00/12/6d/46/e16291f8.jpg","comment_is_top":false,"comment_ctime":1588471180,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":5,"product_id":100032301,"comment_content":"翻看了一下java中的unsafe类，虽然提供了faa的方法，但是实现还是通过cas，为什么java没有直接提供faa呢","like_count":0},{"had_liked":false,"id":190200,"user_name":"努力呼吸","can_delete":false,"product_type":"c1","uid":1718303,"ip_address":"","ucode":"52941DD7A01BBA","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKDfO7wKibzpw4YsoqLRCHUKxX4rYRUh7m7RCdOwzWVaN9QLlhcU5ho3w2Qcpib1O69YPj65ib07xQBQ/132","comment_is_top":false,"comment_ctime":1584613339,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":5,"product_id":100032301,"comment_content":"public class Cas {\n    private static AtomicInteger balance = new AtomicInteger(0);\n\n    private static CountDownLatch countDownLatch = new CountDownLatch(10000);\n\n    private static void transforFaa() {\n        balance.addAndGet(1);\n        countDownLatch.countDown();\n    }\n\n    private static void transforCas() {\n        int oldVal = balance.get();\n        int newVal = oldVal + 1;\n        balance.compareAndSet(oldVal, newVal);\n        countDownLatch.countDown();\n    }\n\n    public static void main(String[] args) throws InterruptedException {\n        for (int j = 0; j &lt; 10000; j++) {\n            CompletableFuture.runAsync(() -&gt; Cas.transforCas());\n        }\n        countDownLatch.await();\n        System.out.println(balance.get());\n    }\n}","like_count":0},{"had_liked":false,"id":181877,"user_name":"黑山老妖","can_delete":false,"product_type":"c1","uid":1115958,"ip_address":"","ucode":"A1659F99C5BE1E","user_header":"https://static001.geekbang.org/account/avatar/00/11/07/36/d677e741.jpg","comment_is_top":false,"comment_ctime":1582652923,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":5,"product_id":100032301,"comment_content":"清晰","like_count":0},{"had_liked":false,"id":145917,"user_name":"Peter","can_delete":false,"product_type":"c1","uid":1595382,"ip_address":"","ucode":"A77322C4E07B2D","user_header":"https://static001.geekbang.org/account/avatar/00/18/57/f6/2c7ac1ad.jpg","comment_is_top":false,"comment_ctime":1572402160,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":5,"product_id":100032301,"comment_content":"交作业：https:&#47;&#47;github.com&#47;PeterLu798&#47;MQ&#47;tree&#47;master&#47;src&#47;com&#47;lbj&#47;mq&#47;lock\nLockBalance.java使用Java独占锁实现，平均耗时 300毫秒左右\nCASBalance.java使用AtomicInteger实现，平均耗时250毫秒左右","like_count":0},{"had_liked":false,"id":135997,"user_name":"钱","can_delete":false,"product_type":"c1","uid":1009652,"ip_address":"","ucode":"2C92A243A463D4","user_header":"https://static001.geekbang.org/account/avatar/00/0f/67/f4/9a1feb59.jpg","comment_is_top":false,"comment_ctime":1569322827,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":5,"product_id":100032301,"comment_content":"之前只知CAS，还有FAA，想必应该有一坨类似的原语。打卡，感谢，又增长了一点见识。","like_count":0,"discussions":[{"author":{"id":2861929,"avatar":"http://thirdwx.qlogo.cn/mmopen/2kpMNDYsSfCibibkl1x62jWodYGcwS2OZJhBW347gy4VsA1U8bUyBNxGx9XxMeWuAW98SpHYiaI470H1xziarib8YvYSB0ZnngbCW/132","nickname":"🐷杨磊磊","note":"","ucode":"858C3FBFF7F023","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":612311,"discussion_content":"只会碰撞，但是安全","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1680597459,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"江苏","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":277909,"user_name":"Heaven","can_delete":false,"product_type":"c1","uid":1694207,"ip_address":"","ucode":"FA33FBCC66C911","user_header":"https://static001.geekbang.org/account/avatar/00/19/d9/ff/b23018a6.jpg","comment_is_top":false,"comment_ctime":1612666802,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":5,"product_id":100032301,"comment_content":"https:&#47;&#47;github.com&#47;HeavenXin&#47;geektime_message_queue&#47;tree&#47;master&#47;src18","like_count":0},{"had_liked":false,"id":237907,"user_name":"tongZi","can_delete":false,"product_type":"c1","uid":2041790,"ip_address":"","ucode":"8BBAE4FA37FF79","user_header":"https://static001.geekbang.org/account/avatar/00/1f/27/be/b666abb4.jpg","comment_is_top":false,"comment_ctime":1596002595,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":5,"product_id":100032301,"comment_content":"“如果线程之间的碰撞非常频繁，经常性的反复重试，这个重试的线程会占用大量的 CPU 时间，随之系统的整体性能就会下降。”\n老师你好，请问这个重试的线程为什么会占用“大量”的cpu时间？？\n会比其它正常请求的线程，占用时间更多吗？？","like_count":0},{"had_liked":false,"id":237860,"user_name":"tongZi","can_delete":false,"product_type":"c1","uid":2041790,"ip_address":"","ucode":"8BBAE4FA37FF79","user_header":"https://static001.geekbang.org/account/avatar/00/1f/27/be/b666abb4.jpg","comment_is_top":false,"comment_ctime":1595987893,"is_pvip":false,"replies":null,"discussion_count":1,"race_medal":0,"score":5,"product_id":100032301,"comment_content":"==对于 “CAS 和 FAA 在各种编程语言中，都有相应的实现”\n我想起之前在操作数据的时候，为了并发的修改用户数据(Money)，当时的做法是\n先Select出用户的Money\n再对Money做操作\n最后在Update的时候多附加一个条件（Money=OldMoney）==\n老师您好，这个问题，如果cpu多核并行，假如极端情况，多线程同时去更新money字段，是否会有线程安全问题？？？","like_count":0,"discussions":[{"author":{"id":2861929,"avatar":"http://thirdwx.qlogo.cn/mmopen/2kpMNDYsSfCibibkl1x62jWodYGcwS2OZJhBW347gy4VsA1U8bUyBNxGx9XxMeWuAW98SpHYiaI470H1xziarib8YvYSB0ZnngbCW/132","nickname":"🐷杨磊磊","note":"","ucode":"858C3FBFF7F023","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":612311,"discussion_content":"只会碰撞，但是安全","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1680597459,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"江苏","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":233837,"user_name":"test","can_delete":false,"product_type":"c1","uid":1065849,"ip_address":"","ucode":"9A4973E591DD12","user_header":"https://static001.geekbang.org/account/avatar/00/10/43/79/18073134.jpg","comment_is_top":false,"comment_ctime":1594468775,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":5,"product_id":100032301,"comment_content":"public class CASTest implements Runnable{\n    private AtomicInteger account;\n    private CountDownLatch latch;\n\n    public CASTest(CountDownLatch latch, AtomicInteger account){\n        this.account = account;\n        this.latch = latch;\n    }\n\n    @Override\n    public void run() {\n        while (!account.compareAndSet(account.get(), account.get() + 1)){}\n        latch.countDown();\n    }\n\n    public static void main(String[] args) throws InterruptedException {\n        StopWatch stopWatch = new StopWatch();\n        stopWatch.start();\n        int THREAD_NUM = 10000;\n        int cpuCore = Runtime.getRuntime().availableProcessors();\n        AtomicInteger account = new AtomicInteger(0);\n        CountDownLatch latch = new CountDownLatch(THREAD_NUM);\n        ThreadPoolExecutor executor = new ThreadPoolExecutor(cpuCore + 1, THREAD_NUM, 0,\n                TimeUnit.SECONDS, new LinkedBlockingQueue&lt;&gt;(65536));\n        for(int i = 0;i &lt; THREAD_NUM;++i) {\n            executor.execute(new CASTest(latch, account));\n        }\n        latch.await();\n        System.out.println(account.get());\n        System.out.println(stopWatch.getTime());\n        executor.shutdown();\n    }\n}","like_count":0},{"had_liked":false,"id":230379,"user_name":"Khirye","can_delete":false,"product_type":"c1","uid":1080985,"ip_address":"","ucode":"6C54C126FA54B8","user_header":"https://static001.geekbang.org/account/avatar/00/10/7e/99/c4302030.jpg","comment_is_top":false,"comment_ctime":1593357460,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":5,"product_id":100032301,"comment_content":"老师您好，想请教下如何检测线程碰撞是否频繁呢？","like_count":0},{"had_liked":false,"id":213544,"user_name":"丁小明","can_delete":false,"product_type":"c1","uid":1207622,"ip_address":"","ucode":"CC23857B8D75D5","user_header":"https://static001.geekbang.org/account/avatar/00/12/6d/46/e16291f8.jpg","comment_is_top":false,"comment_ctime":1588471180,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":5,"product_id":100032301,"comment_content":"翻看了一下java中的unsafe类，虽然提供了faa的方法，但是实现还是通过cas，为什么java没有直接提供faa呢","like_count":0},{"had_liked":false,"id":190200,"user_name":"努力呼吸","can_delete":false,"product_type":"c1","uid":1718303,"ip_address":"","ucode":"52941DD7A01BBA","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKDfO7wKibzpw4YsoqLRCHUKxX4rYRUh7m7RCdOwzWVaN9QLlhcU5ho3w2Qcpib1O69YPj65ib07xQBQ/132","comment_is_top":false,"comment_ctime":1584613339,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":5,"product_id":100032301,"comment_content":"public class Cas {\n    private static AtomicInteger balance = new AtomicInteger(0);\n\n    private static CountDownLatch countDownLatch = new CountDownLatch(10000);\n\n    private static void transforFaa() {\n        balance.addAndGet(1);\n        countDownLatch.countDown();\n    }\n\n    private static void transforCas() {\n        int oldVal = balance.get();\n        int newVal = oldVal + 1;\n        balance.compareAndSet(oldVal, newVal);\n        countDownLatch.countDown();\n    }\n\n    public static void main(String[] args) throws InterruptedException {\n        for (int j = 0; j &lt; 10000; j++) {\n            CompletableFuture.runAsync(() -&gt; Cas.transforCas());\n        }\n        countDownLatch.await();\n        System.out.println(balance.get());\n    }\n}","like_count":0},{"had_liked":false,"id":181877,"user_name":"黑山老妖","can_delete":false,"product_type":"c1","uid":1115958,"ip_address":"","ucode":"A1659F99C5BE1E","user_header":"https://static001.geekbang.org/account/avatar/00/11/07/36/d677e741.jpg","comment_is_top":false,"comment_ctime":1582652923,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":5,"product_id":100032301,"comment_content":"清晰","like_count":0},{"had_liked":false,"id":145917,"user_name":"Peter","can_delete":false,"product_type":"c1","uid":1595382,"ip_address":"","ucode":"A77322C4E07B2D","user_header":"https://static001.geekbang.org/account/avatar/00/18/57/f6/2c7ac1ad.jpg","comment_is_top":false,"comment_ctime":1572402160,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":5,"product_id":100032301,"comment_content":"交作业：https:&#47;&#47;github.com&#47;PeterLu798&#47;MQ&#47;tree&#47;master&#47;src&#47;com&#47;lbj&#47;mq&#47;lock\nLockBalance.java使用Java独占锁实现，平均耗时 300毫秒左右\nCASBalance.java使用AtomicInteger实现，平均耗时250毫秒左右","like_count":0},{"had_liked":false,"id":135997,"user_name":"钱","can_delete":false,"product_type":"c1","uid":1009652,"ip_address":"","ucode":"2C92A243A463D4","user_header":"https://static001.geekbang.org/account/avatar/00/0f/67/f4/9a1feb59.jpg","comment_is_top":false,"comment_ctime":1569322827,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":5,"product_id":100032301,"comment_content":"之前只知CAS，还有FAA，想必应该有一坨类似的原语。打卡，感谢，又增长了一点见识。","like_count":0},{"had_liked":false,"id":132124,"user_name":"梦典","can_delete":false,"product_type":"c1","uid":1203920,"ip_address":"","ucode":"0A6F91068A13E8","user_header":"https://static001.geekbang.org/account/avatar/00/12/5e/d0/e676ac19.jpg","comment_is_top":false,"comment_ctime":1568026866,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":6,"product_id":100032301,"comment_content":"代码工程\nhttps:&#47;&#47;github.com&#47;dlutsniper&#47;wy-ja-lock&#47;tree&#47;master&#47;src&#47;main&#47;java&#47;wy&#47;ja&#47;lock&#47;demo\n试验耗时的环节，深刻体会JIT的强大，执行次数越多，耗时均值越低\nJIT吗？执行越多速度越快？\n关闭JIT -Xint &#47; -Djava.compiler=NONE\nAccountDemoSynchronized 100次关闭前后\n  开启 16.66ms 13.77ms 11.26ms\n  关闭 93.14ms 102.12ms 81.13ms\nAccountDemoCas 100次关闭前后\n  开启 12.74ms 10.5ms 12.42ms\n  关闭 82.48ms 74.7ms 77.09ms","like_count":0},{"had_liked":false,"id":130896,"user_name":"MaLu","can_delete":false,"product_type":"c1","uid":1083559,"ip_address":"","ucode":"A5E900B6B94FB9","user_header":"https://static001.geekbang.org/account/avatar/00/10/88/a7/fb383ef7.jpg","comment_is_top":false,"comment_ctime":1567567263,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":6,"product_id":100032301,"comment_content":"用户硬件同步原语来代替锁的效果，确实是一个好思路","like_count":0},{"had_liked":false,"id":130750,"user_name":"许童童","can_delete":false,"product_type":"c1","uid":1003005,"ip_address":"","ucode":"4B799C0C6BC678","user_header":"https://static001.geekbang.org/account/avatar/00/0f/4d/fd/0aa0e39f.jpg","comment_is_top":false,"comment_ctime":1567524502,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":6,"product_id":100032301,"comment_content":"老师讲得很好，对于我这种基础薄弱的，长见识了，感谢老师。","like_count":0},{"had_liked":false,"id":130700,"user_name":"linqw","can_delete":false,"product_type":"c1","uid":1134138,"ip_address":"","ucode":"09DCFE98C54DD8","user_header":"https://static001.geekbang.org/account/avatar/00/11/4e/3a/86196508.jpg","comment_is_top":false,"comment_ctime":1567513440,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":6,"product_id":100032301,"comment_content":"最近出差都落下了好些，找个空闲时间把这些实现下","like_count":0},{"had_liked":false,"id":130465,"user_name":"ヾ(◍°∇°◍)ﾉﾞ","can_delete":false,"product_type":"c1","uid":1044175,"ip_address":"","ucode":"89545632BDA56E","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJOBwR7MCVqwZbPA5RQ2mjUjd571jUXUcBCE7lY5vSMibWn8D5S4PzDZMaAhRPdnRBqYbVOBTJibhJg/132","comment_is_top":false,"comment_ctime":1567470686,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":6,"product_id":100032301,"comment_content":"yiald感觉还是不是等一定周期使用是不是更好，如果系统线程多，线程的频繁切换带来的开销也不小，go的协程会好些","like_count":0},{"had_liked":false,"id":130453,"user_name":"白小白","can_delete":false,"product_type":"c1","uid":1400416,"ip_address":"","ucode":"143F1C8294818A","user_header":"https://static001.geekbang.org/account/avatar/00/15/5e/60/1c13626b.jpg","comment_is_top":false,"comment_ctime":1567469360,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":6,"product_id":100032301,"comment_content":"打卡打卡！晚上回家做作业！","like_count":0},{"had_liked":false,"id":130399,"user_name":"渔村蓝","can_delete":false,"product_type":"c1","uid":1307497,"ip_address":"","ucode":"A29875CE15FDA3","user_header":"https://static001.geekbang.org/account/avatar/00/13/f3/69/7039d03f.jpg","comment_is_top":false,"comment_ctime":1567441224,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":6,"product_id":100032301,"comment_content":"看完，先抢个沙发，晚点上链接。","like_count":0},{"had_liked":false,"id":132124,"user_name":"梦典","can_delete":false,"product_type":"c1","uid":1203920,"ip_address":"","ucode":"0A6F91068A13E8","user_header":"https://static001.geekbang.org/account/avatar/00/12/5e/d0/e676ac19.jpg","comment_is_top":false,"comment_ctime":1568026866,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":6,"product_id":100032301,"comment_content":"代码工程\nhttps:&#47;&#47;github.com&#47;dlutsniper&#47;wy-ja-lock&#47;tree&#47;master&#47;src&#47;main&#47;java&#47;wy&#47;ja&#47;lock&#47;demo\n试验耗时的环节，深刻体会JIT的强大，执行次数越多，耗时均值越低\nJIT吗？执行越多速度越快？\n关闭JIT -Xint &#47; -Djava.compiler=NONE\nAccountDemoSynchronized 100次关闭前后\n  开启 16.66ms 13.77ms 11.26ms\n  关闭 93.14ms 102.12ms 81.13ms\nAccountDemoCas 100次关闭前后\n  开启 12.74ms 10.5ms 12.42ms\n  关闭 82.48ms 74.7ms 77.09ms","like_count":0},{"had_liked":false,"id":130896,"user_name":"MaLu","can_delete":false,"product_type":"c1","uid":1083559,"ip_address":"","ucode":"A5E900B6B94FB9","user_header":"https://static001.geekbang.org/account/avatar/00/10/88/a7/fb383ef7.jpg","comment_is_top":false,"comment_ctime":1567567263,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":6,"product_id":100032301,"comment_content":"用户硬件同步原语来代替锁的效果，确实是一个好思路","like_count":0},{"had_liked":false,"id":130750,"user_name":"许童童","can_delete":false,"product_type":"c1","uid":1003005,"ip_address":"","ucode":"4B799C0C6BC678","user_header":"https://static001.geekbang.org/account/avatar/00/0f/4d/fd/0aa0e39f.jpg","comment_is_top":false,"comment_ctime":1567524502,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":6,"product_id":100032301,"comment_content":"老师讲得很好，对于我这种基础薄弱的，长见识了，感谢老师。","like_count":0},{"had_liked":false,"id":130700,"user_name":"linqw","can_delete":false,"product_type":"c1","uid":1134138,"ip_address":"","ucode":"09DCFE98C54DD8","user_header":"https://static001.geekbang.org/account/avatar/00/11/4e/3a/86196508.jpg","comment_is_top":false,"comment_ctime":1567513440,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":6,"product_id":100032301,"comment_content":"最近出差都落下了好些，找个空闲时间把这些实现下","like_count":0},{"had_liked":false,"id":130465,"user_name":"ヾ(◍°∇°◍)ﾉﾞ","can_delete":false,"product_type":"c1","uid":1044175,"ip_address":"","ucode":"89545632BDA56E","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJOBwR7MCVqwZbPA5RQ2mjUjd571jUXUcBCE7lY5vSMibWn8D5S4PzDZMaAhRPdnRBqYbVOBTJibhJg/132","comment_is_top":false,"comment_ctime":1567470686,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":6,"product_id":100032301,"comment_content":"yiald感觉还是不是等一定周期使用是不是更好，如果系统线程多，线程的频繁切换带来的开销也不小，go的协程会好些","like_count":0},{"had_liked":false,"id":130453,"user_name":"白小白","can_delete":false,"product_type":"c1","uid":1400416,"ip_address":"","ucode":"143F1C8294818A","user_header":"https://static001.geekbang.org/account/avatar/00/15/5e/60/1c13626b.jpg","comment_is_top":false,"comment_ctime":1567469360,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":6,"product_id":100032301,"comment_content":"打卡打卡！晚上回家做作业！","like_count":0},{"had_liked":false,"id":130399,"user_name":"渔村蓝","can_delete":false,"product_type":"c1","uid":1307497,"ip_address":"","ucode":"A29875CE15FDA3","user_header":"https://static001.geekbang.org/account/avatar/00/13/f3/69/7039d03f.jpg","comment_is_top":false,"comment_ctime":1567441224,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":6,"product_id":100032301,"comment_content":"看完，先抢个沙发，晚点上链接。","like_count":0}]}