{"id":41509,"title":"22 | 如何管理服务配置？","content":"<p>在拆分为微服务架构前，曾经的单体应用只需要管理一套配置；而拆分为微服务后，每一个系统都有自己的配置，并且都各不相同，而且因为服务治理的需要，有些配置还需要能够动态改变，以达到动态降级、切流量、扩缩容等目的，这也是今天我要与你探讨的，<span class=\"orange\">在微服务架构下服务配置如何管理的问题。</span></p>\n<h2>本地配置</h2>\n<p>服务配置管理最简单的方案就是<strong>把配置当作代码同等看待，随着应用程序代码一起发布</strong>。比如下面这段代码用到了开源熔断框架Hystrix，并且在代码里定义了几个配置，一个是线程的超时时间是3000ms，一个是熔断器触发的错误比率是60%。</p>\n<pre><code>@HystrixCommand(fallbackMethod = &quot;getDefaultProductInventoryByCode&quot;,\n    commandProperties = {\n       @HystrixProperty(name = &quot;execution.isolation.thread.timeoutInMilliseconds&quot;, value = &quot;3000&quot;),\n       @HystrixProperty(name = &quot;circuitBreaker.errorThresholdPercentage&quot;, value=&quot;60&quot;)\n    }\n)\npublic Optional&lt;ProductInventoryResponse&gt; getProductInventoryByCode(String productCode)\n{\n    ....\n}\n</code></pre>\n<p>还有一种方案就是<strong>把配置都抽离到单独的配置文件当中，使配置与代码分离</strong>，比如下面这段代码。</p>\n<pre><code>@HystrixCommand(commandKey = &quot;inventory-by-productcode&quot;, fallbackMethod = &quot;getDefaultProductInventoryByCode&quot;)\npublic Optional&lt;ProductInventoryResponse&gt; getProductInventoryByCode(String productCode)\n{\n    ...\n}\n</code></pre>\n<p>相应的配置可以抽离到配置文件中，配置文件的内容如下：</p>\n<pre><code>hystrix.command.inventory-by-productcode.execution.isolation.thread.timeoutInMilliseconds=2000\nhystrix.command.inventory-by-productcode.circuitBreaker.errorThresholdPercentage=60\n</code></pre>\n<p>无论是把配置定义在代码里，还是把配置从代码中抽离出来，都相当于把配置存在了应用程序的本地。这样做的话，如果需要修改配置，就需要重新走一遍代码或者配置的发布流程，在实际的线上业务当中，这是一个很重的操作，往往相当于一次上线发布过程，甚至更繁琐，需要更谨慎。</p>\n<p>这时你自然会想，如果能有一个集中管理配置的地方，如果需要修改配置，只需要在这个地方修改一下，线上服务就自动从这个地方同步过去，不需要走代码或者配置的发布流程，不就简单多了吗？没错，这就是下面要讲的配置中心。</p><!-- [[[read_end]]] -->\n<h2>配置中心</h2>\n<p>配置中心的思路就是把服务的各种配置，如代码里配置的各种参数、服务降级的开关甚至依赖的资源等都在一个地方统一进行管理。服务启动时，可以自动从配置中心中拉取所需的配置，并且如果有配置变更的情况，同样可以自动从配置中心拉取最新的配置信息，服务无须重新发布。</p>\n<p>具体来讲，配置中心一般包含下面几个功能：</p>\n<ul>\n<li>\n<p>配置注册功能</p>\n</li>\n<li>\n<p>配置反注册功能</p>\n</li>\n<li>\n<p>配置查看功能</p>\n</li>\n<li>\n<p>配置变更订阅功能</p>\n</li>\n</ul>\n<p>接下来我来给你详细讲解下配置中心的功能是如何实现的。</p>\n<p><strong>1. 配置存储结构</strong></p>\n<p>如下图所示，一般来讲，配置中心存储配置是按照Group来存储的，同一类配置放在一个Group下，以K, V键值对存储。</p>\n<p><img src=\"https://static001.geekbang.org/resource/image/ac/4e/ac57322b53b16525e5c1c26b036e694e.jpg?wh=624*416\" alt=\"\" /></p>\n<p><strong>2. 配置注册</strong></p>\n<p>配置中心对外提供接口/config/service?action=register来完成配置注册功能，需要传递的参数包括配置对应的分组Group，以及对应的Key、Value值。比如调用下面接口请求就会向配置项global.property中添加Key为reload.locations、Value为/data1/confs/system/reload.properties的配置。</p>\n<pre><code>curl &quot;http://ip:port/config/service?action=register&quot; -d &quot;group=global.property&amp;key=reload.locations&amp;value=/data1/confs/system/reload.properties&quot;\n</code></pre>\n<p><strong>3. 配置反注册</strong></p>\n<p>配置中心对外提供接口config/service?action=unregister来完成配置反注册功能，需要传递的参数包括配置对象的分组Group，以及对应的Key。比如调用下面的接口请求就会从配置项global.property中把Key为reload.locations的配置删除。</p>\n<pre><code>curl &quot;http://ip:port/config/service?action=unregister&quot;-d &quot;group=global.property&amp;key=reload.locations&quot;\n</code></pre>\n<p><strong>4. 配置查看</strong></p>\n<p>配置中心对外提供接口config/service?action=lookup来完成配置查看功能，需要传递的参数包括配置对象的分组Group，以及对应的Key。比如调用下面的接口请求就会返回配置项global.property中Key为reload.locations的配置值。</p>\n<pre><code>curl &quot;http://ip:port/config/service?action=lookup&amp;group=global.property&amp;key=reload.locations&quot;\n</code></pre>\n<p><strong>5. 配置变更订阅</strong></p>\n<p>配置中心对外提供接口config/service?action=getSign来完成配置变更订阅接口，客户端本地会保存一个配置对象的分组Group的sign值，同时每隔一段时间去配置中心拉取该Group的sign值，与本地保存的sign值做对比。一旦配置中心中的sign值与本地的sign值不同，客户端就会从配置中心拉取最新的配置信息。比如调用下面的接口请求就会返回配置项global.property中Key为reload.locations的配置值。</p>\n<pre><code>curl &quot;http://ip:port/config/service？action=getSign&amp;group=global.property&quot;\n</code></pre>\n<p>讲到这里，你应该对配置中心的作用有所了解了，它可以便于我们管理服务的配置信息，并且如果要修改配置信息的话，只需要同配置中心交互就可以了，应用程序会通过订阅配置中心的配置，自动完成配置更新。那么实际业务中，有哪些场景应用配置中心比较合适呢？下面我就结合自己的经验，列举几个配置中心的典型应用场景，希望能给你一些启发。</p>\n<ul>\n<li>\n<p>资源服务化。对于大部分互联网业务来说，在应用规模不大的时候，所依赖的资源如Memcached缓存或者MCQ消息队列的数量也不多，因此对应的资源的IP可以直接写在配置里。但是当业务规模发展到一定程度后，所依赖的这些资源的数量也开始急剧膨胀。以微博的业务为例，核心缓存Memcached就有上千台机器，经常会遇到个别机器因为硬件故障而不可用，这个时候如果采用的是本地配置的话，就需要去更改本地配置，把不可用的IP改成可用的IP，然后发布新的配置，这样的过程十分不便。但如果采用资源服务化的话，把对应的缓存统统归结为一类配置，然后如果有个别机器不可用的话，只需要在配置中心把对应的IP换成可用的IP即可，应用程序会自动同步到本机，也无须发布。</p>\n</li>\n<li>\n<p>业务动态降级。微服务架构下，拆分的服务越多，出现故障的概率就越大，因此需要有对应的服务治理手段，比如要具备动态降级能力，在依赖的服务出现故障的情况下，可以快速降级对这个服务的调用，从而保证不受影响。为此，服务消费者可以通过订阅依赖服务是否降级的配置，当依赖服务出现故障的时候，通过向配置中心下达指令，修改服务的配置为降级状态，这样服务消费者就可以订阅到配置的变更，从而降级对该服务的调用。</p>\n</li>\n<li>\n<p>分组流量切换。前面我提到过，为了保证异地多活以及本地机房调用，一般服务提供者的部署会按照IDC维度进行部署，每个IDC划分为一个分组，这样的话，如果一个IDC出现故障，可以把故障IDC机房的调用切换到其他正常IDC。为此，服务消费者可以通过订阅依赖服务的分组配置，当依赖服务的分组配置发生变更时，服务消费者就对应的把调用切换到新的分组，从而实现分组流量切换。</p>\n</li>\n</ul>\n<h2>开源配置中心与选型</h2>\n<p>讲到这里，你可以根据我前面对配置中心的讲解自己去实现一个配置中心，但其实对于大部分中小团队来说，目前业界已经开源的配置中心实现可以说功能已经十分完善了，并且经过很多公司实际线上业务的充分论证，能满足大多数业务的需求，所以我建议是尽量选择成熟的开源配置中心实现，那么有哪些开源的配置中心可以使用呢？下面我就简单介绍下三个典型的开源实现：</p>\n<ul>\n<li>\n<p><a href=\"https://github.com/spring-cloud/spring-cloud-config\">Spring Cloud Config</a>。Spring Cloud中使用的配置中心组件，只支持Java语言，配置存储在git中，变更配置也需要通过git操作，如果配置中心有配置变更，需要手动刷新。</p>\n</li>\n<li>\n<p><a href=\"https://github.com/knightliao/disconf\">Disconf</a>。百度开源的分布式配置管理平台，只支持Java语言，基于Zookeeper来实现配置变更实时推送给订阅的客户端，并且可以通过统一的管理界面来修改配置中心的配置。</p>\n</li>\n<li>\n<p><a href=\"https://github.com/ctripcorp/apollo\">Apollo</a>。携程开源的分布式配置中心，支持Java和.Net语言，客户端和配置中心通过HTTP长连接实现实时推送，并且有统一的管理界面来实现配置管理。</p>\n</li>\n</ul>\n<p>在实际选择的时候，Spring Cloud Config作为配置中心的功能比较弱，只能通过git命令操作，而且变更配置的话还需要手动刷新，如果不是采用Spring Cloud框架的话不建议选择。而Disconf和Apollo的功能都比较强大，在国内许多互联网公司内部都有大量应用，其中Apollo对Spring Boot的支持比较好，如果应用本身采用的是Spring Boot开发的话，集成Apollo会更容易一些。</p>\n<h2>总结</h2>\n<p>今天我给你讲解了微服务架构下如何使用配置中心对服务的配置进行管理，以及实际业务中可能用到的场景，最后给出了一些开源配置中心的解决方案。关于业务中是否需要用到配置中心，以及选择哪种配置中心，要根据实际情况而定，如果业务比较简单，配置比较少并且不经常变更的话，采用本地配置是最简单的方案，这样的话不需要额外引入配置中心组件；相反，如果业务比较复杂，配置多而且有动态修改配置的需求的话，强烈建议引入配置中心来进行管理，而且最好做到配置变更实时推送给客户端，并且可以通过统一的管理界面来管理配置，这样的话能极大地降低运维的复杂度，减少人为介入，从而提高效率。</p>\n<h2>思考题</h2>\n<p>在前面我讲到Zookeeper、Consul、etcd作为服务的注册中心时，可以提供强一致性的服务发现功能，那么它们能够作为配置中心吗？为什么？</p>\n<p>欢迎你在留言区写下自己的思考，与我一起讨论。</p>\n<p></p>\n","comments":[{"had_liked":false,"id":34605,"user_name":"楼下小黑哥","can_delete":false,"product_type":"c1","uid":1014680,"ip_address":"","ucode":"453B099B0EE52E","user_header":"https://static001.geekbang.org/account/avatar/00/0f/7b/98/8f1aecf4.jpg","comment_is_top":false,"comment_ctime":1540216733,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"53079824285","product_id":100014401,"comment_content":"在前面我讲到 Zookeeper、Consul、etcd 作为服务的注册中心时，可以提供强一致性的服务发现功能，那么它们能够作为配置中心吗？为什么<br><br>Zookeeper 等服务中心，可以作为配置中心，实现基本配置注册，配置订阅等功能，但是性能较弱,具有局限性。<br><br>就拿携程实现 Apollo 来说，作为配置中心，我们需要实现配置中心是弱依赖，即使配置中心宕机，应用正常运行，客户端需要实现缓存配置数据。其次需要做好备份，且有后台可以方便修改配置项。再次，修改完配置项，可以及时通知客户端修改。<br><br>而上述功能 Zookeeper 等注册中心不能提供或者说需要基于Zookeeper二次开发，所以 Zookeeper 等注册中心不适宜当配置中心。<br>","like_count":12},{"had_liked":false,"id":31488,"user_name":"老巫","can_delete":false,"product_type":"c1","uid":1163803,"ip_address":"","ucode":"2EAD9D6FADCD97","user_header":"https://static001.geekbang.org/account/avatar/00/11/c2/1b/869727a5.jpg","comment_is_top":false,"comment_ctime":1539217826,"is_pvip":false,"replies":[{"id":"11322","content":"是的","user_name":"作者回复","user_name_real":"古月中心相心","uid":"1010144","ctime":1539223441,"ip_address":"","comment_id":31488,"utype":1}],"discussion_count":1,"race_medal":0,"score":"48783858082","product_id":100014401,"comment_content":"刚开始搭建玩玩，我觉得consul可以，它首页的KV模块就是做配置的吧。<br><br>大力推荐携程的配置中心，好用简单！","like_count":11,"discussions":[{"author":{"id":1010144,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/69/e0/ff8ee2e2.jpg","nickname":"胡忠想","note":"","ucode":"0792605FC265B4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":426367,"discussion_content":"是的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1539223441,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":80878,"user_name":"Zerone","can_delete":false,"product_type":"c1","uid":1086572,"ip_address":"","ucode":"03B9BA5C658982","user_header":"https://static001.geekbang.org/account/avatar/00/10/94/6c/a7f8e0db.jpg","comment_is_top":false,"comment_ctime":1553747843,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"18733617027","product_id":100014401,"comment_content":"比如调用下面的接口请求就会返回配置项 global.property 中 Key 为 reload.locations 的配置值。<br>curl &quot;http:&#47;&#47;ip:port&#47;config&#47;service？action=getSign&amp;group=global.property&quot;<br><br>不是返回配置值，是返回sign 值吧<br>","like_count":4},{"had_liked":false,"id":33572,"user_name":"batman","can_delete":false,"product_type":"c1","uid":1266482,"ip_address":"","ucode":"73C30ACFC0D612","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/IIkdC2gohpcibib0AJvSdnJQefAuQYGlLySQOticThpF7Ck9WuDUQLJlgZ7ic13LIFnGBXXbMsSP3nZsbibBN98ZjGA/132","comment_is_top":false,"comment_ctime":1539826724,"is_pvip":true,"replies":[{"id":"12171","content":"没有专门的架构开发团队吧","user_name":"作者回复","user_name_real":"古月中心相心","uid":"1010144","ctime":1539956290,"ip_address":"","comment_id":33572,"utype":1}],"discussion_count":1,"race_medal":1,"score":"18719695908","product_id":100014401,"comment_content":"你好，怎么定义中小团队？","like_count":4,"discussions":[{"author":{"id":1010144,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/69/e0/ff8ee2e2.jpg","nickname":"胡忠想","note":"","ucode":"0792605FC265B4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":427002,"discussion_content":"没有专门的架构开发团队吧","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1539956290,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":34655,"user_name":"Liam","can_delete":false,"product_type":"c1","uid":1094597,"ip_address":"","ucode":"1D15D3B64F2606","user_header":"https://static001.geekbang.org/account/avatar/00/10/b3/c5/7fc124e2.jpg","comment_is_top":false,"comment_ctime":1540254872,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"14425156760","product_id":100014401,"comment_content":"consul就可以作为配置中心，不过配置要分成启动时依赖和非启动依赖，前者是不可动态修改的","like_count":3},{"had_liked":false,"id":300349,"user_name":"菠萝吹雪—Code","can_delete":false,"product_type":"c1","uid":1650378,"ip_address":"","ucode":"A5B2FC661EE17D","user_header":"https://static001.geekbang.org/account/avatar/00/19/2e/ca/469f7266.jpg","comment_is_top":false,"comment_ctime":1625124840,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"10215059432","product_id":100014401,"comment_content":"我的理解：Zookeeper、Consul、etcd 这三个应该是 强一致性的，属于CP。一个节点不可用，会造成这个集群的不可用，这在系统中是不能接受的<br>","like_count":2},{"had_liked":false,"id":31497,"user_name":"Douglas","can_delete":false,"product_type":"c1","uid":1073027,"ip_address":"","ucode":"CFDE3D76B9DAE6","user_header":"https://static001.geekbang.org/account/avatar/00/10/5f/83/bb728e53.jpg","comment_is_top":false,"comment_ctime":1539218862,"is_pvip":false,"replies":[{"id":"11321","content":"这种配置不建议动态修改","user_name":"作者回复","user_name_real":"古月中心相心","uid":"1010144","ctime":1539223431,"ip_address":"","comment_id":31497,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10129153454","product_id":100014401,"comment_content":"胡老师，注册中心配置修改后，应用需要重新加载的吧，比去数据库线程池，一般在应用启动后就会创建好指定数量的线程，如果通过配置中心，降低了数量，多余的线程该如何处理呢？","like_count":2,"discussions":[{"author":{"id":1010144,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/69/e0/ff8ee2e2.jpg","nickname":"胡忠想","note":"","ucode":"0792605FC265B4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":426373,"discussion_content":"这种配置不建议动态修改","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1539223431,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":31840,"user_name":"熊猫酒仙","can_delete":false,"product_type":"c1","uid":1112078,"ip_address":"","ucode":"17002C7A355EC1","user_header":"https://static001.geekbang.org/account/avatar/00/10/f8/0e/de697f9b.jpg","comment_is_top":false,"comment_ctime":1539309981,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5834277277","product_id":100014401,"comment_content":"zk直接作为配置中心，各服务端需要比较多的适配吧，毕竟zk的通知变更不能太依赖了，这样一来对业务侵入性大了一点","like_count":1},{"had_liked":false,"id":31628,"user_name":"XXL","can_delete":false,"product_type":"c1","uid":1036615,"ip_address":"","ucode":"0532132BB53193","user_header":"https://static001.geekbang.org/account/avatar/00/0f/d1/47/41e4bada.jpg","comment_is_top":false,"comment_ctime":1539248882,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5834216178","product_id":100014401,"comment_content":"我司就是用的zk作为配置中心的，不晓得有什么不合适的...","like_count":1},{"had_liked":false,"id":360849,"user_name":"jacky","can_delete":false,"product_type":"c1","uid":2105773,"ip_address":"北京","ucode":"CF3638E2177182","user_header":"https://static001.geekbang.org/account/avatar/00/20/21/ad/734464b7.jpg","comment_is_top":false,"comment_ctime":1666919423,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1666919423","product_id":100014401,"comment_content":"目前spring cloud config-server可通过mintor进行变更监控，再结合总线刷新消息通知机制实现配置变化自动通知","like_count":0},{"had_liked":false,"id":315071,"user_name":"俯瞰风景.","can_delete":false,"product_type":"c1","uid":1044166,"ip_address":"","ucode":"A6DB68B7B84AEE","user_header":"https://static001.geekbang.org/account/avatar/00/0f/ee/c6/bebcbcf0.jpg","comment_is_top":false,"comment_ctime":1633679890,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1633679890","product_id":100014401,"comment_content":"分布式系统中的每一个服务子系统的配置项有可能不一样，如果每个子系统单独管理配置会很麻烦，所以需要引入配置中心进行统一管理，提高运维效率。<br><br>配置中心要保证每个服务消费者能够及时拉取最新的配置信息，也要保证能够方便地进行配置更新。<br>而通过统一的配置中心，就可以对微服务系统集群进行统一动态调度，比如：动态熔断、动态降级、动态超时重试等等。","like_count":0},{"had_liked":false,"id":276181,"user_name":"惘 闻","can_delete":false,"product_type":"c1","uid":1181650,"ip_address":"","ucode":"C5909F034BF072","user_header":"https://static001.geekbang.org/account/avatar/00/12/07/d2/0d7ee298.jpg","comment_is_top":false,"comment_ctime":1611823320,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"1611823320","product_id":100014401,"comment_content":"老师服务降级和熔断听起来是一个意思呀?他们区别是什么啊","like_count":0,"discussions":[{"author":{"id":1178951,"avatar":"https://static001.geekbang.org/account/avatar/00/11/fd/47/78ee760d.jpg","nickname":"学习，学习，再学习","note":"","ucode":"3B07D19CCFB15C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":383563,"discussion_content":"降级是一次性中断服务，一般通过人工主动恢复；\n熔断可以理解为间歇性降级，待服务恢复后还能继续调用，当然这过程都由熔断器（断路器）完成，不需要人工干预","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1626159813,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2330905,"avatar":"https://static001.geekbang.org/account/avatar/00/23/91/19/6a3e7efc.jpg","nickname":"程序员9527","note":"","ucode":"1A1609F6BEAD84","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":382899,"discussion_content":"在服务端做限流，在调用端做熔断","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1625760039,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":147820,"user_name":"Joyce","can_delete":false,"product_type":"c1","uid":1129789,"ip_address":"","ucode":"93096F29FF6CFB","user_header":"https://static001.geekbang.org/account/avatar/00/11/3d/3d/a9c8d564.jpg","comment_is_top":false,"comment_ctime":1572910813,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1572910813","product_id":100014401,"comment_content":"helm这个呢","like_count":0},{"had_liked":false,"id":105574,"user_name":"lanpay","can_delete":false,"product_type":"c1","uid":1057703,"ip_address":"","ucode":"15BE115858BEBD","user_header":"https://static001.geekbang.org/account/avatar/00/10/23/a7/3f084b33.jpg","comment_is_top":false,"comment_ctime":1561034124,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1561034124","product_id":100014401,"comment_content":"这几个都可以拿来做配置中心的底层实现，直接用功能弱了点","like_count":0},{"had_liked":false,"id":104014,"user_name":"钱","can_delete":false,"product_type":"c1","uid":1009652,"ip_address":"","ucode":"2C92A243A463D4","user_header":"https://static001.geekbang.org/account/avatar/00/0f/67/f4/9a1feb59.jpg","comment_is_top":false,"comment_ctime":1560589697,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1560589697","product_id":100014401,"comment_content":"UCC我们用这个基于zk开发的，有了配置中心确实比较方便，尤其是各种开关控制的切换。","like_count":0},{"had_liked":false,"id":84245,"user_name":"Mars","can_delete":false,"product_type":"c1","uid":1200066,"ip_address":"","ucode":"F6336326AE1A8D","user_header":"https://static001.geekbang.org/account/avatar/00/12/4f/c2/054589e2.jpg","comment_is_top":false,"comment_ctime":1554812022,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1554812022","product_id":100014401,"comment_content":"redis不行吗","like_count":0,"discussions":[{"author":{"id":1193711,"avatar":"https://static001.geekbang.org/account/avatar/00/12/36/ef/83c2a743.jpg","nickname":"悠南","note":"","ucode":"333665DB7CFDD6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":277423,"discussion_content":"我理解配置中心需要的能力主要是 一处变更,多处通知   Redis并不具备该特性  ","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1591057339,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":73845,"user_name":"深海","can_delete":false,"product_type":"c1","uid":1027792,"ip_address":"","ucode":"F0D62B74F7160D","user_header":"https://static001.geekbang.org/account/avatar/00/0f/ae/d0/59704bba.jpg","comment_is_top":false,"comment_ctime":1552014780,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1552014780","product_id":100014401,"comment_content":"我们是用python作为主要开发语言的，使用什么作为分布式配置中心呢？","like_count":0},{"had_liked":false,"id":72479,"user_name":"Filix","can_delete":false,"product_type":"c1","uid":1105582,"ip_address":"","ucode":"51C9140E281BFA","user_header":"https://static001.geekbang.org/account/avatar/00/10/de/ae/c864e08a.jpg","comment_is_top":false,"comment_ctime":1551657016,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1551657016","product_id":100014401,"comment_content":"配置中心的地址本身也是配置，只能还是采用本地配置了吧？","like_count":0},{"had_liked":false,"id":70818,"user_name":"testb","can_delete":false,"product_type":"c1","uid":1344617,"ip_address":"","ucode":"73CF08E529382A","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJ8ic8eLTo5rnnIx40VRJ6uEe8KYXG9CeXfvCy1hLMlgnHtwFbdbFklFwUibiaibscNmOnSQn57Ctoticg/132","comment_is_top":false,"comment_ctime":1551189559,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1551189559","product_id":100014401,"comment_content":"disconf二次开发了zk","like_count":0,"discussions":[{"author":{"id":2913379,"avatar":"https://static001.geekbang.org/account/avatar/00/2c/74/63/96f3adb1.jpg","nickname":"骗子","note":"","ucode":"87D907860193BE","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":591150,"discussion_content":"看来帖子比较老，没有介绍 nacos","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1666324605,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"北京"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":39656,"user_name":"李二木","can_delete":false,"product_type":"c1","uid":1103091,"ip_address":"","ucode":"30E03BB84ADB27","user_header":"https://static001.geekbang.org/account/avatar/00/10/d4/f3/129d6dfe.jpg","comment_is_top":false,"comment_ctime":1542331907,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1542331907","product_id":100014401,"comment_content":"配置中心可不可以理解为k-v方式的缓存，全局都可以使用，不再像以前每个服务都配置在自己单独的properties文件","like_count":0},{"had_liked":false,"id":34992,"user_name":"Geek_89bbab","can_delete":false,"product_type":"c1","uid":1156607,"ip_address":"","ucode":"B3110D5B3C9500","user_header":"https://static001.geekbang.org/account/avatar/00/11/a5/ff/6201122c.jpg","comment_is_top":false,"comment_ctime":1540377075,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1540377075","product_id":100014401,"comment_content":"请教一下：配置中心修改配置后，修改的配置下发给对应的微服务。配置该怎么生效，比如 数据库连接池配置。对于通过配置创建的长生命周期对象该怎么处理？是先用新配置创建新的对象，替换旧的对象，然后关闭旧的对象吗？困惑了好久，求答疑","like_count":0,"discussions":[{"author":{"id":1177289,"avatar":"https://static001.geekbang.org/account/avatar/00/11/f6/c9/4da2a82a.jpg","nickname":"黄大仙","note":"","ucode":"337B6E811CF47D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":3039,"discussion_content":"监听数据库连接配置，配置变更后，重新建连接池，新请求走新连接池，等老线程不再使用后，销毁。如果老线程一直挂着，根据业务重要程度，可以考虑老线程设置最大生存时间。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1564128385,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":33504,"user_name":"搬砖匠","can_delete":false,"product_type":"c1","uid":1214120,"ip_address":"","ucode":"3D2D7C1FD14DB6","user_header":"https://static001.geekbang.org/account/avatar/00/12/86/a8/427879a9.jpg","comment_is_top":false,"comment_ctime":1539811794,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1539811794","product_id":100014401,"comment_content":"spring cloud config 依赖spring boot，如果没有用spring boot没法采用吧？应用范围局限","like_count":0},{"had_liked":false,"id":32848,"user_name":"莲花","can_delete":false,"product_type":"c1","uid":1220494,"ip_address":"","ucode":"3260F7DA59332D","user_header":"https://static001.geekbang.org/account/avatar/00/12/9f/8e/45ffff8f.jpg","comment_is_top":false,"comment_ctime":1539702619,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1539702619","product_id":100014401,"comment_content":"胡老师，dubbo服务建议有哪种配置中心？","like_count":0,"discussions":[{"author":{"id":1031616,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/bd/c0/57b06721.jpg","nickname":"深藏Blue","note":"","ucode":"CBEBCBDA47281C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":68490,"discussion_content":"nacos","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1575211707,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":32294,"user_name":"波波安","can_delete":false,"product_type":"c1","uid":1002452,"ip_address":"","ucode":"2A677908E5A75D","user_header":"https://static001.geekbang.org/account/avatar/00/0f/4b/d4/b7719327.jpg","comment_is_top":false,"comment_ctime":1539516396,"is_pvip":false,"discussion_count":0,"race_medal":1,"score":"1539516396","product_id":100014401,"comment_content":"可以实现，下面这些功能利用zookeeper都可以实现<br>配置注册功能<br><br>配置反注册功能<br><br>配置查看功能<br><br>配置变更订阅功能<br>","like_count":0},{"had_liked":false,"id":32058,"user_name":"wuhulala","can_delete":false,"product_type":"c1","uid":1191143,"ip_address":"","ucode":"6DBF2C9E19B930","user_header":"https://static001.geekbang.org/account/avatar/00/12/2c/e7/3c0eba8b.jpg","comment_is_top":false,"comment_ctime":1539397614,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1539397614","product_id":100014401,"comment_content":"难道是因为zk因为是cp？","like_count":0}]}