{"id":78134,"title":"29 | 如何判断一个数据库是不是出问题了？","content":"<p>我在第<a href=\"https://time.geekbang.org/column/article/76795\">25</a>和<a href=\"https://time.geekbang.org/column/article/77427\">27</a>篇文章中，和你介绍了主备切换流程。通过这些内容的讲解，你应该已经很清楚了：在一主一备的双M架构里，主备切换只需要把客户端流量切到备库；而在一主多从架构里，主备切换除了要把客户端流量切到备库外，还需要把从库接到新主库上。</p><p>主备切换有两种场景，一种是主动切换，一种是被动切换。而其中被动切换，往往是因为主库出问题了，由HA系统发起的。</p><p>这也就引出了我们今天要讨论的问题：怎么判断一个主库出问题了？</p><p>你一定会说，这很简单啊，连上MySQL，执行个select 1就好了。但是select 1成功返回了，就表示主库没问题吗？</p><h1>select 1判断</h1><p>实际上，select 1成功返回，只能说明这个库的进程还在，并不能说明主库没问题。现在，我们来看一下这个场景。</p><pre><code>set global innodb_thread_concurrency=3;\n\nCREATE TABLE `t` (\n  `id` int(11) NOT NULL,\n  `c` int(11) DEFAULT NULL,\n  PRIMARY KEY (`id`)\n) ENGINE=InnoDB;\n\n insert into t values(1,1)\n</code></pre><p><img src=\"https://static001.geekbang.org/resource/image/35/55/35076dd3d0a0d44d22b76d2a29885255.png?wh=932*290\" alt=\"\"></p><center><span class=\"reference\">图1 查询blocked</span></center><p>我们设置innodb_thread_concurrency参数的目的是，控制InnoDB的并发线程上限。也就是说，一旦并发线程数达到这个值，InnoDB在接收到新请求的时候，就会进入等待状态，直到有线程退出。</p><p>这里，我把innodb_thread_concurrency设置成3，表示InnoDB只允许3个线程并行执行。而在我们的例子中，前三个session 中的sleep(100)，使得这三个语句都处于“执行”状态，以此来模拟大查询。</p><!-- [[[read_end]]] --><p>你看到了， session D里面，select 1是能执行成功的，但是查询表t的语句会被堵住。也就是说，如果这时候我们用select 1来检测实例是否正常的话，是检测不出问题的。</p><p>在InnoDB中，innodb_thread_concurrency这个参数的默认值是0，表示不限制并发线程数量。但是，不限制并发线程数肯定是不行的。因为，一个机器的CPU核数有限，线程全冲进来，上下文切换的成本就会太高。</p><p>所以，通常情况下，我们建议把innodb_thread_concurrency设置为64~128之间的值。这时，你一定会有疑问，并发线程上限数设置为128够干啥，线上的并发连接数动不动就上千了。</p><p>产生这个疑问的原因，是搞混了<strong>并发连接和并发查询。</strong></p><p>并发连接和并发查询，并不是同一个概念。你在show processlist的结果里，看到的几千个连接，指的就是并发连接。而“当前正在执行”的语句，才是我们所说的并发查询。</p><p>并发连接数达到几千个影响并不大，就是多占一些内存而已。我们应该关注的是并发查询，因为并发查询太高才是CPU杀手。这也是为什么我们需要设置innodb_thread_concurrency参数的原因。</p><p>然后，你可能还会想起我们在<a href=\"https://time.geekbang.org/column/article/70215\">第7篇文章</a>中讲到的热点更新和死锁检测的时候，如果把innodb_thread_concurrency设置为128的话，那么出现同一行热点更新的问题时，是不是很快就把128消耗完了，这样整个系统是不是就挂了呢？</p><p>实际上，<strong>在线程进入锁等待以后，并发线程的计数会减一</strong>，也就是说等行锁（也包括间隙锁）的线程是不算在128里面的。</p><p>MySQL这样设计是非常有意义的。因为，进入锁等待的线程已经不吃CPU了；更重要的是，必须这么设计，才能避免整个系统锁死。</p><p>为什么呢？假设处于锁等待的线程也占并发线程的计数，你可以设想一下这个场景：</p><ol>\n<li>\n<p>线程1执行begin; update t set c=c+1 where id=1, 启动了事务trx1， 然后保持这个状态。这时候，线程处于空闲状态，不算在并发线程里面。</p>\n</li>\n<li>\n<p>线程2到线程129都执行 update t set c=c+1 where id=1; 由于等行锁，进入等待状态。这样就有128个线程处于等待状态；</p>\n</li>\n<li>\n<p>如果处于锁等待状态的线程计数不减一，InnoDB就会认为线程数用满了，会阻止其他语句进入引擎执行，这样线程1不能提交事务。而另外的128个线程又处于锁等待状态，整个系统就堵住了。</p>\n</li>\n</ol><p>下图2显示的就是这个状态。</p><p><img src=\"https://static001.geekbang.org/resource/image/32/1d/3206ea18b8a24b546515b1b95dc4a11d.png?wh=1142*856\" alt=\"\"></p><center><span class=\"reference\">图2 系统锁死状态（假设等行锁的语句占用并发计数）</span></center><p>这时候InnoDB不能响应任何请求，整个系统被锁死。而且，由于所有线程都处于等待状态，此时占用的CPU却是0，而这明显不合理。所以，我们说InnoDB在设计时，遇到进程进入锁等待的情况时，将并发线程的计数减1的设计，是合理而且是必要的。</p><p>虽然说等锁的线程不算在并发线程计数里，但如果它在真正地执行查询，就比如我们上面例子中前三个事务中的select sleep(100) from t，还是要算进并发线程的计数的。</p><p>在这个例子中，同时在执行的语句超过了设置的innodb_thread_concurrency的值，这时候系统其实已经不行了，但是通过select 1来检测系统，会认为系统还是正常的。</p><p>因此，我们使用select 1的判断逻辑要修改一下。</p><h1>查表判断</h1><p>为了能够检测InnoDB并发线程数过多导致的系统不可用情况，我们需要找一个访问InnoDB的场景。一般的做法是，在系统库（mysql库）里创建一个表，比如命名为health_check，里面只放一行数据，然后定期执行：</p><pre><code>mysql&gt; select * from mysql.health_check; \n</code></pre><p>使用这个方法，我们可以检测出由于并发线程过多导致的数据库不可用的情况。</p><p>但是，我们马上还会碰到下一个问题，即：空间满了以后，这种方法又会变得不好使。</p><p>我们知道，更新事务要写binlog，而一旦binlog所在磁盘的空间占用率达到100%，那么所有的更新语句和事务提交的commit语句就都会被堵住。但是，系统这时候还是可以正常读数据的。</p><p>因此，我们还是把这条监控语句再改进一下。接下来，我们就看看把查询语句改成更新语句后的效果。</p><h1>更新判断</h1><p>既然要更新，就要放个有意义的字段，常见做法是放一个timestamp字段，用来表示最后一次执行检测的时间。这条更新语句类似于：</p><pre><code>mysql&gt; update mysql.health_check set t_modified=now();\n</code></pre><p>节点可用性的检测都应该包含主库和备库。如果用更新来检测主库的话，那么备库也要进行更新检测。</p><p>但，备库的检测也是要写binlog的。由于我们一般会把数据库A和B的主备关系设计为双M结构，所以在备库B上执行的检测命令，也要发回给主库A。</p><p>但是，如果主库A和备库B都用相同的更新命令，就可能出现行冲突，也就是可能会导致主备同步停止。所以，现在看来mysql.health_check 这个表就不能只有一行数据了。</p><p>为了让主备之间的更新不产生冲突，我们可以在mysql.health_check表上存入多行数据，并用A、B的server_id做主键。</p><pre><code>mysql&gt; CREATE TABLE `health_check` (\n  `id` int(11) NOT NULL,\n  `t_modified` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,\n  PRIMARY KEY (`id`)\n) ENGINE=InnoDB;\n\n/* 检测命令 */\ninsert into mysql.health_check(id, t_modified) values (@@server_id, now()) on duplicate key update t_modified=now();\n</code></pre><p>由于MySQL规定了主库和备库的server_id必须不同（否则创建主备关系的时候就会报错），这样就可以保证主、备库各自的检测命令不会发生冲突。</p><p>更新判断是一个相对比较常用的方案了，不过依然存在一些问题。其中，“判定慢”一直是让DBA头疼的问题。</p><p>你一定会疑惑，<strong>更新语句，如果失败或者超时，就可以发起主备切换了，为什么还会有判定慢的问题呢？</strong></p><p>其实，这里涉及到的是服务器IO资源分配的问题。</p><p>首先，所有的检测逻辑都需要一个超时时间N。执行一条update语句，超过N秒后还不返回，就认为系统不可用。</p><p>你可以设想一个日志盘的IO利用率已经是100%的场景。这时候，整个系统响应非常慢，已经需要做主备切换了。</p><p>但是你要知道，IO利用率100%表示系统的IO是在工作的，每个请求都有机会获得IO资源，执行自己的任务。而我们的检测使用的update命令，需要的资源很少，所以可能在拿到IO资源的时候就可以提交成功，并且在超时时间N秒未到达之前就返回给了检测系统。</p><p>检测系统一看，update命令没有超时，于是就得到了“系统正常”的结论。</p><p>也就是说，这时候在业务系统上正常的SQL语句已经执行得很慢了，但是DBA上去一看，HA系统还在正常工作，并且认为主库现在处于可用状态。</p><p>之所以会出现这个现象，根本原因是我们上面说的所有方法，都是基于外部检测的。外部检测天然有一个问题，就是随机性。</p><p>因为，外部检测都需要定时轮询，所以系统可能已经出问题了，但是却需要等到下一个检测发起执行语句的时候，我们才有可能发现问题。而且，如果你的运气不够好的话，可能第一次轮询还不能发现，这就会导致切换慢的问题。</p><p>所以，接下来我要再和你介绍一种在MySQL内部发现数据库问题的方法。</p><h1>内部统计</h1><p>针对磁盘利用率这个问题，如果MySQL可以告诉我们，内部每一次IO请求的时间，那我们判断数据库是否出问题的方法就可靠得多了。</p><p>其实，MySQL 5.6版本以后提供的performance_schema库，就在file_summary_by_event_name表里统计了每次IO请求的时间。</p><p>file_summary_by_event_name表里有很多行数据，我们先来看看event_name='wait/io/file/innodb/innodb_log_file’这一行。</p><p><img src=\"https://static001.geekbang.org/resource/image/75/dd/752ccfe43b4eab155be17401838c62dd.png?wh=1535*641\" alt=\"\"></p><center><span class=\"reference\">图3 performance_schema.file_summary_by_event_name的一行</span></center><p>图中这一行表示统计的是redo log的写入时间，第一列EVENT_NAME 表示统计的类型。</p><p>接下来的三组数据，显示的是redo log操作的时间统计。</p><p>第一组五列，是所有IO类型的统计。其中，COUNT_STAR是所有IO的总次数，接下来四列是具体的统计项， 单位是皮秒；前缀SUM、MIN、AVG、MAX，顾名思义指的就是总和、最小值、平均值和最大值。</p><p>第二组六列，是读操作的统计。最后一列SUM_NUMBER_OF_BYTES_READ统计的是，总共从redo log里读了多少个字节。</p><p>第三组六列，统计的是写操作。</p><p>最后的第四组数据，是对其他类型数据的统计。在redo log里，你可以认为它们就是对fsync的统计。</p><p>在performance_schema库的file_summary_by_event_name表里，binlog对应的是event_name = \"wait/io/file/sql/binlog\"这一行。各个字段的统计逻辑，与redo log的各个字段完全相同。这里，我就不再赘述了。</p><p>因为我们每一次操作数据库，performance_schema都需要额外地统计这些信息，所以我们打开这个统计功能是有性能损耗的。</p><p>我的测试结果是，如果打开所有的performance_schema项，性能大概会下降10%左右。所以，我建议你只打开自己需要的项进行统计。你可以通过下面的方法打开或者关闭某个具体项的统计。</p><p>如果要打开redo log的时间监控，你可以执行这个语句：</p><pre><code>mysql&gt; update setup_instruments set ENABLED='YES', Timed='YES' where name like '%wait/io/file/innodb/innodb_log_file%';\n</code></pre><p>假设，现在你已经开启了redo log和binlog这两个统计信息，那要怎么把这个信息用在实例状态诊断上呢？</p><p>很简单，你可以通过MAX_TIMER的值来判断数据库是否出问题了。比如，你可以设定阈值，单次IO请求时间超过200毫秒属于异常，然后使用类似下面这条语句作为检测逻辑。</p><pre><code>mysql&gt; select event_name,MAX_TIMER_WAIT  FROM performance_schema.file_summary_by_event_name where event_name in ('wait/io/file/innodb/innodb_log_file','wait/io/file/sql/binlog') and MAX_TIMER_WAIT&gt;200*1000000000;\n</code></pre><p>发现异常后，取到你需要的信息，再通过下面这条语句：</p><pre><code>mysql&gt; truncate table performance_schema.file_summary_by_event_name;\n</code></pre><p>把之前的统计信息清空。这样如果后面的监控中，再次出现这个异常，就可以加入监控累积值了。</p><h1>小结</h1><p>今天，我和你介绍了检测一个MySQL实例健康状态的几种方法，以及各种方法存在的问题和演进的逻辑。</p><p>你看完后可能会觉得，select 1这样的方法是不是已经被淘汰了呢，但实际上使用非常广泛的MHA（Master High Availability），默认使用的就是这个方法。</p><p>MHA中的另一个可选方法是只做连接，就是 “如果连接成功就认为主库没问题”。不过据我所知，选择这个方法的很少。</p><p>其实，每个改进的方案，都会增加额外损耗，并不能用“对错”做直接判断，需要你根据业务实际情况去做权衡。</p><p>我个人比较倾向的方案，是优先考虑update系统表，然后再配合增加检测performance_schema的信息。</p><p>最后，又到了我们的思考题时间。</p><p>今天，我想问你的是：业务系统一般也有高可用的需求，在你开发和维护过的服务中，你是怎么判断服务有没有出问题的呢？</p><p>你可以把你用到的方法和分析写在留言区，我会在下一篇文章中选取有趣的方案一起来分享和分析。感谢你的收听，也欢迎你把这篇文章分享给更多的朋友一起阅读。</p><h1>上期问题时间</h1><p>上期的问题是，如果使用GTID等位点的方案做读写分离，在对大表做DDL的时候会怎么样。</p><p>假设，这条语句在主库上要执行10分钟，提交后传到备库就要10分钟（典型的大事务）。那么，在主库DDL之后再提交的事务的GTID，去备库查的时候，就会等10分钟才出现。</p><p>这样，这个读写分离机制在这10分钟之内都会超时，然后走主库。</p><p>这种预期内的操作，应该在业务低峰期的时候，确保主库能够支持所有业务查询，然后把读请求都切到主库，再在主库上做DDL。等备库延迟追上以后，再把读请求切回备库。</p><p>通过这个思考题，我主要想让关注的是，大事务对等位点方案的影响。</p><p>当然了，使用gh-ost方案来解决这个问题也是不错的选择。</p><p>评论区留言点赞板：</p><blockquote>\n<p>@曾剑、@max 同学提到的备库先做，再切主库的方法也是可以的。</p>\n</blockquote><p></p>","neighbors":{"left":{"article_title":"28 | 读写分离有哪些坑？","id":77636},"right":{"article_title":"30 | 答疑文章（二）：用动态的观点看加锁","id":78427}},"comments":[{"had_liked":false,"id":62230,"user_name":"某、人","can_delete":false,"product_type":"c1","uid":1308784,"ip_address":"","ucode":"ADB42AA12A11C1","user_header":"https://static001.geekbang.org/account/avatar/00/13/f8/70/f3a33a14.jpg","comment_is_top":false,"comment_ctime":1547989025,"is_pvip":false,"replies":[{"id":"22018","content":"1. 虽然理论上是核数的2倍左右最好，但是现在很多人把MySQL创建在虚拟机上，就分1~2个核，我怕那么写，有同学会认为innodb_thread_concurrency建议设置成4。。<br><br>2. 空间满本身是不会导致连不上的。但是因为空间满，事务无法提交，可能会导致接下来外部事务重试，新重试的业务还是堵在提交阶段，持续累积可能会把连接数用满","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1548008290,"ip_address":"","comment_id":62230,"utype":1}],"discussion_count":4,"race_medal":0,"score":"302195699745","product_id":100020801,"comment_content":"目前是只有一台服务器来做判断,是否数据库出问题了,就是采用的update的方式。如果是主从架构就一条语句,如果是双主的话就是两条update语句。但是这种方式有很大的弊端,只有一个进程来判断数据库出问题的话,会出现单点判断的问题。所以后续准备多个单数进程来做判断,如果超过了半数以上的监控进程都认为数据库出问题,才做切换。<br>老师我有两个问题:<br>1.innodb_thread_concurrency的设置是不是应该跟计算机核数成正比,一般是1.5倍-2倍左右？<br>2.怎么之前遇到空间满了,数据库都登不上了,所有的连接都连不上,更不用执行select语句了,这个是什么原因啊？","like_count":71,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":437146,"discussion_content":"1. 虽然理论上是核数的2倍左右最好，但是现在很多人把MySQL创建在虚拟机上，就分1~2个核，我怕那么写，有同学会认为innodb_thread_concurrency建议设置成4。。\n\n2. 空间满本身是不会导致连不上的。但是因为空间满，事务无法提交，可能会导致接下来外部事务重试，新重试的业务还是堵在提交阶段，持续累积可能会把连接数用满","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1548008290,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1008582,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/63/c6/d6ea3df3.jpg","nickname":"林肯","note":"","ucode":"D2C97220230DE5","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":299776,"discussion_content":"所以后续准备多个单数进程来做判断,如果超过了半数以上的监控进程都认为数据库出问题,才做切换。——这个是redis哨兵的思路","likes_number":9,"is_delete":false,"is_hidden":false,"ctime":1597813247,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1303409,"avatar":"https://static001.geekbang.org/account/avatar/00/13/e3/71/45eb3475.jpg","nickname":"老江","note":"","ucode":"7033BBF9AF43A9","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":490,"discussion_content":"问题2，另一种场景，就是有些数据库开了登录功能记录的话，这个时候也会写数据，一样会塞住","likes_number":5,"is_delete":false,"is_hidden":false,"ctime":1561618926,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1239557,"avatar":"https://static001.geekbang.org/account/avatar/00/12/ea/05/c0d8014d.jpg","nickname":"一道阳光","note":"","ucode":"F35207CCCEC6E2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":131102,"discussion_content":"应该有linux监控吧，如果磁盘使用空间达到百分比后，会产生告警。","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1578826725,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":67928,"user_name":"StarkYanng","can_delete":false,"product_type":"c1","uid":1079296,"ip_address":"","ucode":"C95598A4F90528","user_header":"https://static001.geekbang.org/account/avatar/00/10/78/00/31a6dd80.jpg","comment_is_top":false,"comment_ctime":1550325337,"is_pvip":false,"replies":[{"id":"24085","content":"对，但是这个方法本质上是“内部把一段时间内的统计信息存在这里”，只是“定期来取”，去到的是“一段时间内的信息”<br><br>而前面的几种方法，都是“检测那个时间点的信息”","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1550333859,"ip_address":"","comment_id":67928,"utype":1}],"discussion_count":2,"race_medal":0,"score":"212003722841","product_id":100020801,"comment_content":"老师，我有个疑问，您说外部检测是采用定时轮询的方式。那内部检测通过&#39;mysql&gt; select event_name,MAX_TIMER_WAIT  FROM performance_schema.file_summary_by_event_name where event_name in (&#39;wait&#47;io&#47;file&#47;innodb&#47;innodb_log_file&#39;,&#39;wait&#47;io&#47;file&#47;sql&#47;binlog&#39;) and MAX_TIMER_WAIT&gt;200*1000000000;<br>&#39;的方法，不是也需要定时轮询来执行这个语句么？","like_count":50,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":439431,"discussion_content":"对，但是这个方法本质上是“内部把一段时间内的统计信息存在这里”，只是“定期来取”，去到的是“一段时间内的信息”\n\n而前面的几种方法，都是“检测那个时间点的信息”","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1550333859,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2389270,"avatar":"https://static001.geekbang.org/account/avatar/00/24/75/16/6e28bf17.jpg","nickname":"初晨","note":"","ucode":"C5D95D13E49127","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":590762,"discussion_content":"好问题。  一个是取这个时间点的信息，一个是取已经记录的信息。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1666067675,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"陕西"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":61694,"user_name":"老杨同志","can_delete":false,"product_type":"c1","uid":1246199,"ip_address":"","ucode":"3F334F0CFD3DE6","user_header":"https://static001.geekbang.org/account/avatar/00/13/03/f7/3a493bec.jpg","comment_is_top":false,"comment_ctime":1547776409,"is_pvip":false,"replies":[{"id":"21986","content":"很好的实践分享。<br>是不是还有配套一些服务的RT时间的报告？<br>毕竟echo是一个比较轻量的调用，正确率可能比实际业务调用的正确率高","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1547962569,"ip_address":"","comment_id":61694,"utype":1}],"discussion_count":4,"race_medal":0,"score":"117511893401","product_id":100020801,"comment_content":"现在很多公司都是使用dubbo或者类似dubbo的rpc调用。说说我对dubbo的理解        <br>dubbo 存活检测感觉分为下面三个层面<br>服务端与注册中心的链接状态<br>\t  通常注册中心是zookeeper，服务端注册临时节点，客户端注册这个节点的watch事件，一但服务端失联，<br>\t  客户端将把该服务从自己可用服务列表中移除。（一个服务通常有多个提供者，只是把失联的提供者移除）。<br>\t  zookeeper是通过心跳发现服务提供者失联的，心跳实际上就是以固定的频率（比如每秒）发送检测的数据包；<br><br>客户端与注册中心的链接状态<br>\t\t客户端与zookeeper失联，会暂时使用自己缓存的服务提供者列表。如果每个提供者多次调不通，把它移除。<br><br>客户端与服务单的链接状态<br>    服务端提供类似于echo的方法，客户定时调用。部分返回正常，认为服务处于亚健康状态，如果超过阀值，会被降级<br>    从服务提供者列表移除。被移除的方法可能会在超过一定时间后，拿回来重试，可以恢复成正常服务，也可能继续降级。","like_count":27,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":436955,"discussion_content":"很好的实践分享。\n是不是还有配套一些服务的RT时间的报告？\n毕竟echo是一个比较轻量的调用，正确率可能比实际业务调用的正确率高","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1547962569,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1158349,"avatar":"https://static001.geekbang.org/account/avatar/00/11/ac/cd/fda6374f.jpg","nickname":"Louis","note":"","ucode":"BC667839F17937","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":300255,"discussion_content":"好多错别字。。读得真难受","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1598000127,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1970443,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIx1V1QAxC4NHaxYZGyuibBN8lcURJWc5nrnO4yic1kxnDemYV2FJGialf47kYX9qtDnZZOfe1SJeLicg/132","nickname":"lleft","note":"","ucode":"D573EB509455AE","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":376548,"discussion_content":"zookeeper是通过什么方式检测mysql是否正常的？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1622186379,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":2014285,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKNv880TlsNuKaWcKbxiaAZTQIBWfJAddC8wfOROnwRPRwJXaEGSTBH2sic4jK7IGpxZn79tTDcREjw/132","nickname":"Geek_7482f6","note":"","ucode":"F3565F78525D30","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1970443,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIx1V1QAxC4NHaxYZGyuibBN8lcURJWc5nrnO4yic1kxnDemYV2FJGialf47kYX9qtDnZZOfe1SJeLicg/132","nickname":"lleft","note":"","ucode":"D573EB509455AE","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":410307,"discussion_content":"心跳","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1635657459,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":376548,"ip_address":""},"score":410307,"extra":""}]}]},{"had_liked":false,"id":64258,"user_name":"IceGeek17","can_delete":false,"product_type":"c1","uid":1103101,"ip_address":"","ucode":"1B42D7260449B4","user_header":"https://static001.geekbang.org/account/avatar/00/10/d4/fd/43802282.jpg","comment_is_top":false,"comment_ctime":1548727750,"is_pvip":false,"replies":[{"id":"22952","content":"是这样的，我们说DDL，一般是指加减索引，增加字段在最后一列，这种操作…","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1548940606,"ip_address":"","comment_id":64258,"utype":1}],"discussion_count":7,"race_medal":0,"score":"57383302598","product_id":100020801,"comment_content":"对于使用 GTID 等位点的方案做读写分离，对大表做DDL的问题，<br>有一种做法是先在从库上设置 set_log_bin = off，在从库上先做DDL，完成后做一下主从切换。然后再在之前的主库上同样操作一遍。<br>但这会有一个问题，当先在从库上做DDL（大表DDL时间会比较长，比如10分钟），在这段时间内，此时如果读写请求都走主库的话，如果写请求对于DDL的改动是有依赖的，那这些写请求在主库就可能会失败；同样此时对于主库上的读请求，也可能会读到“过期”的数据（读请求希望读到DDL之后的数据，但此时DDL在从库执行，主库上还是DDL之前的），老师怎么看这个问题 ？<br><br>","like_count":13,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":437925,"discussion_content":"是这样的，我们说DDL，一般是指加减索引，增加字段在最后一列，这种操作…","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1548940606,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1303145,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIKa0PdjFnEpvGFBcED2P28ugPmwwRoCbeUfulpGEye8964F4nwChQyVfgVUia74TyDISvXTYJfQpA/132","nickname":"Nick","note":"","ucode":"D453E42B9A8429","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":254476,"discussion_content":"切换主从代价 较高 ，加索引、加字段在最后一列，不记binlog的方式，直接分别在主从执行，也没问题吧。 一般数据库操作完成后才会发版，不影响应用。","likes_number":4,"is_delete":false,"is_hidden":false,"ctime":1588329569,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1970443,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIx1V1QAxC4NHaxYZGyuibBN8lcURJWc5nrnO4yic1kxnDemYV2FJGialf47kYX9qtDnZZOfe1SJeLicg/132","nickname":"lleft","note":"","ucode":"D573EB509455AE","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1303145,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIKa0PdjFnEpvGFBcED2P28ugPmwwRoCbeUfulpGEye8964F4nwChQyVfgVUia74TyDISvXTYJfQpA/132","nickname":"Nick","note":"","ucode":"D453E42B9A8429","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":376549,"discussion_content":"在主库执行DDL会造成从库的过期读问题。这样不就影响当前的业务了呢","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1622186538,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":254476,"ip_address":""},"score":376549,"extra":""}]},{"author":{"id":1229114,"avatar":"https://static001.geekbang.org/account/avatar/00/12/c1/3a/2ce09963.jpg","nickname":"张先生","note":"","ucode":"E5E11D15CAC1D6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":571540,"discussion_content":"DDL不是会锁表吗？还怎么查主库？我有点蒙了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1652261148,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2082118,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/P1y2k6dcoAWtlXkMcKFGeAmykTKCOKEicKsN0TX4eT6icibATfqnlsDyjicfjvo1zAa9lAS4ZGkSEGjeUUUmy9Qofg/132","nickname":"xyy_Li","note":"","ucode":"81A647AB5F757A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":385228,"discussion_content":"请问一下增加的数据字段放在某个字段之后或者加在最后一个字段之后，这个DDL的效率会有什么不同吗？\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1626947891,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1367546,"avatar":"https://static001.geekbang.org/account/avatar/00/14/dd/fa/6108000a.jpg","nickname":"Matzoh","note":"","ucode":"E92D6035230CDE","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":269780,"discussion_content":"我记得老师说过，可以用 GTID 的方式进行主从切换，同时保证 binlog 有记录，为什么不用这个方案呢","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1589949387,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1970443,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIx1V1QAxC4NHaxYZGyuibBN8lcURJWc5nrnO4yic1kxnDemYV2FJGialf47kYX9qtDnZZOfe1SJeLicg/132","nickname":"lleft","note":"","ucode":"D573EB509455AE","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1367546,"avatar":"https://static001.geekbang.org/account/avatar/00/14/dd/fa/6108000a.jpg","nickname":"Matzoh","note":"","ucode":"E92D6035230CDE","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":376550,"discussion_content":"他说的重点是做DDL之后，对业务SQL有影响的情况，比如删除了一个表字段，但是业务SQL还要往这个字段写值，这样就会报错的问题。老师说的加减索引、增加字段在最后一列对原来的业务SQL没有影响","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1622186688,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":269780,"ip_address":""},"score":376550,"extra":""}]}]},{"had_liked":false,"id":61683,"user_name":"强哥","can_delete":false,"product_type":"c1","uid":1206726,"ip_address":"","ucode":"3B8DC780FE4EF9","user_header":"https://static001.geekbang.org/account/avatar/00/12/69/c6/513df085.jpg","comment_is_top":false,"comment_ctime":1547774289,"is_pvip":false,"replies":[{"id":"21898","content":"👍，这里的“超时监控”，是怎么得到的？<br>是单独有命令检测，还是去看业务请求的返回时间？","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1547782788,"ip_address":"","comment_id":61683,"utype":1}],"discussion_count":2,"race_medal":0,"score":"53087381841","product_id":100020801,"comment_content":"1.基础监控，包括硬盘，CPU，网络，内存等。<br>2.服务监控，包括jvm，服务端口，接入上下游服务的超时监控等。<br>3.业务监控，主要是监控业务的流程是否出现问题。","like_count":13,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":436950,"discussion_content":"👍，这里的“超时监控”，是怎么得到的？\n是单独有命令检测，还是去看业务请求的返回时间？","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1547782788,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1063308,"avatar":"https://static001.geekbang.org/account/avatar/00/10/39/8c/089525aa.jpg","nickname":"小乙哥","note":"","ucode":"C77E79BEA0C325","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":404331,"discussion_content":"一般看服务的RT比较多。服务异常往往表现出RT变长","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1634289102,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":61678,"user_name":"长杰","can_delete":false,"product_type":"c1","uid":1312212,"ip_address":"","ucode":"DD52C9494005F7","user_header":"https://static001.geekbang.org/account/avatar/00/14/05/d4/e06bf86d.jpg","comment_is_top":false,"comment_ctime":1547773641,"is_pvip":false,"replies":[{"id":"21897","content":"如果set sql_log_bin=0， 就不记录binlog，就不会给这个事务分配gtid。<br><br>你说得对，drop列是很麻烦的，尽量不做。毕竟业务代码直接无视这个列就好了。。","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1547782567,"ip_address":"","comment_id":61678,"utype":1}],"discussion_count":2,"race_medal":0,"score":"48792413897","product_id":100020801,"comment_content":"老师请教一个问题，在gtid模式下，对于大的ddl操作，采用在备库执行sql_log_bin=0的方式先执行，然后再切换主备的方式在主库再执行，这种情况下，ddl操作是不记录binlog的，不知道对gtid的计数有什么影响，是按顺序递增还是会跳过这个序列号？<br>另外补充一下有些dl操作是不适合这个主备切换的方式，比如drop一个列，如果先在备库执行就可能导致主备同步异常。这个场景适合osc方式或把读请求切到主库，先在主库执行这两种方案。","like_count":11,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":436949,"discussion_content":"如果set sql_log_bin=0， 就不记录binlog，就不会给这个事务分配gtid。\n\n你说得对，drop列是很麻烦的，尽量不做。毕竟业务代码直接无视这个列就好了。。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1547782567,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2166073,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/k3YD3y3BzGDSdrwRJyJY4BXsNJibfM4uzOdDVKIAlFApR2FZCLg2ibrZtJ4vuahA3LHLW9GKzH5CMGqCDhWjhZqg/132","nickname":"戒酒的李白","note":"","ucode":"744E1A22761647","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":410282,"discussion_content":"为了向前兼容，一般直接无视这个列","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1635649058,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":81610,"user_name":"专栏用户","can_delete":false,"product_type":"c1","uid":1212492,"ip_address":"","ucode":"621C14A2BE0443","user_header":"https://static001.geekbang.org/account/avatar/00/12/80/4c/a0043823.jpg","comment_is_top":false,"comment_ctime":1553961550,"is_pvip":false,"replies":[{"id":"29643","content":"这个是框架做的吧？ <br><br>我知道有些框架喜欢用<br>set autocommit=0, 表示开启事务<br>set autocommit=1，表示提交事务<br>虽然也对，<br><br>但比较建议用begin 和 commit","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1554047856,"ip_address":"","comment_id":81610,"utype":1}],"discussion_count":1,"race_medal":0,"score":"44503634510","product_id":100020801,"comment_content":"问个和本课不太相关的问题，自己开了general log，然后看到有很多set autocommit=0,之后set autocommit=1的日志，查了一下，看说是关闭&#47;开启自动提交模式，所以就有点不懂为何会爱挨着出现这两个语句？","like_count":10,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":445268,"discussion_content":"这个是框架做的吧？ \n\n我知道有些框架喜欢用\nset autocommit=0, 表示开启事务\nset autocommit=1，表示提交事务\n虽然也对，\n\n但比较建议用begin 和 commit","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1554047856,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":62804,"user_name":"Mr.Strive.Z.H.L","can_delete":false,"product_type":"c1","uid":1030198,"ip_address":"","ucode":"6D97E159E2EECD","user_header":"https://static001.geekbang.org/account/avatar/00/0f/b8/36/542c96bf.jpg","comment_is_top":false,"comment_ctime":1548162976,"is_pvip":false,"replies":[{"id":"22256","content":"啊 主键冲突为啥没关系？<br>是这样的，这两个语句如果同时执行，那么在主库和备库上就都是“insert行为”<br>写到binlog里面就都是Write rows event<br>这个冲突就会导致主备同步停止哦","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1548224477,"ip_address":"","comment_id":62804,"utype":1}],"discussion_count":6,"race_medal":0,"score":"40202868640","product_id":100020801,"comment_content":"老师您好：<br>关于 主备同步停止 的问题，看了您的回复。<br>我是这么理解的：<br>insert into mysql.health_check(id, t_modified) values (1, now()) on duplicate key update t_modified=now(); <br>按照您说的场景，主备分别执行这句话后，复制给彼此。<br>如果单单看这句话，就算是主库执行备库复制过来的这句话，也不会出现异常呀。（因为如果主键冲突就会更新时间）<br>但是这种场景会导致 主备同步停止， 所以实际上主库在应用备库这句话的binlog的时候，发现主键冲突，自然就会报错。<br><br>不知道是不是这样，因为如果单单看这句sql，即使主键冲突也没关系呀？","like_count":9,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":437356,"discussion_content":"啊 主键冲突为啥没关系？\n是这样的，这两个语句如果同时执行，那么在主库和备库上就都是“insert行为”\n写到binlog里面就都是Write rows event\n这个冲突就会导致主备同步停止哦","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1548224477,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1030209,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/b8/41/302f8cd4.jpg","nickname":"纤路","note":"","ucode":"CDBAA49ED9D9E8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":399473,"discussion_content":"其实吧，主要是线上一般都是设置binlog=row, 这种情况下，记录是实际操作的数据行，如果都是insert；那么最终在主库执行备库复制过来binlog, 就会出现主键冲突； 如果binlog=statement,哲宏情况下，是不会出现主键冲突；但是吧，线上一般不建议设置binlog=statement；","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1632972556,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1117597,"avatar":"https://static001.geekbang.org/account/avatar/00/11/0d/9d/58d09086.jpg","nickname":"达达队长","note":"","ucode":"1C3F2E4F6B7637","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":264558,"discussion_content":"写同一行就回冲突？ 主键冲突？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1589333371,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1953123,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKSIk2jfbj0wPzJVqY3DYia8vzWEJomX2NiazdwYqBKrTsPXWut11OUo2PJThssY3d36c1C1aHQKKCg/132","nickname":"Geek_da282e","note":"","ucode":"1CD940A1ECCA3D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":262363,"discussion_content":"readonly对super权限的用户无效","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1589080584,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1276795,"avatar":"https://static001.geekbang.org/account/avatar/00/13/7b/7b/5b39b47b.jpg","nickname":"TIAN","note":"","ucode":"CCCF80602C1753","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":239170,"discussion_content":"请问备库不需要设置readonly吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1587280888,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":2009624,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/aa/18/78b5d152.jpg","nickname":"仙人掌","note":"","ucode":"102B3CE9B8222E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1276795,"avatar":"https://static001.geekbang.org/account/avatar/00/13/7b/7b/5b39b47b.jpg","nickname":"TIAN","note":"","ucode":"CCCF80602C1753","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":350187,"discussion_content":"测可用应该会用管理员账号","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1613740722,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":239170,"ip_address":""},"score":350187,"extra":""}]}]},{"had_liked":false,"id":62591,"user_name":"慧鑫coming","can_delete":false,"product_type":"c1","uid":1324385,"ip_address":"","ucode":"7BAC9CA255630E","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLE4LYb3jrH63ZV98Zpc8DompwDgb1O3nffMoZCmiaibauRyEFv6NDNsST9RWxZExvMLMWb50zaanoQ/132","comment_is_top":false,"comment_ctime":1548118253,"is_pvip":false,"replies":[{"id":"22160","content":"好问题<br><br>比如两个表刚开始都是空表，<br>然后第一个语句执行<br>insert into mysql.health_check(id, t_modified) values (1, now()) on duplicate key update t_modified=now();<br><br>就会两边各写入一个insert语句的binlog日志，传到对面就导致同步停止了<br><br>","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1548124225,"ip_address":"","comment_id":62591,"utype":1}],"discussion_count":10,"race_medal":0,"score":"40202823917","product_id":100020801,"comment_content":"老师，文中提到的“但是，如果主库 A 和备库 B 都用相同的更新命令，就可能出现行冲突，也就是可能会导致主备同步停止。”，这个能展开说一下吗，这个行冲突指什么？它们会都更新各自检测表的同一字段我觉得会带来不准确的问题，怎么导致主从同步停止了呢？","like_count":9,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":437268,"discussion_content":"好问题\n\n比如两个表刚开始都是空表，\n然后第一个语句执行\ninsert into mysql.health_check(id, t_modified) values (1, now()) on duplicate key update t_modified=now();\n\n就会两边各写入一个insert语句的binlog日志，传到对面就导致同步停止了\n\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1548124225,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1587282,"avatar":"https://static001.geekbang.org/account/avatar/00/18/38/52/526c10f9.jpg","nickname":"阿七","note":"","ucode":"B14B05BD0EB78A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":36938,"discussion_content":"意思是binlog里记载的就灭有‘on duplicate key update t_modified=now()&#39;这个信息了吗","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1571466552,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":2497728,"avatar":"https://static001.geekbang.org/account/avatar/00/26/1c/c0/b8ff566a.jpg","nickname":"我是大橙子132","note":"","ucode":"61660568CF07C9","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1587282,"avatar":"https://static001.geekbang.org/account/avatar/00/18/38/52/526c10f9.jpg","nickname":"阿七","note":"","ucode":"B14B05BD0EB78A","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":576126,"discussion_content":"对的，都是插入了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1655287685,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":36938,"ip_address":""},"score":576126,"extra":""}]},{"author":{"id":1986739,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/50/b3/9269cd59.jpg","nickname":"LWD","note":"","ucode":"DDA444DB113C01","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":587979,"discussion_content":"为什么不在建立双主前就先初始化呢？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1663420855,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"广东"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1261530,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKDKsicmpne7xQNocwRQ80DDZ3CzjsDoVIcH0SBiaYzS056oVOx4pEeEVeCaXE3QtsjUIEI0x1xQVTw/132","nickname":"muggle","note":"","ucode":"D78087BCAD0860","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":536790,"discussion_content":"应该是这个意思，在客户端做的定时器，会连接主从，在主从两边都执行该语句，虽然之前有用server_id来解决MM结构下的主备同步日志问题，但也仅限于一边主动执行，另一边非主动执行的情况，而如果两边同时执行，就会两边都互相同步，导致报错，进而中止定时器。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1638868632,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1812970,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/a9/ea/5bfce6c5.jpg","nickname":"mgs2002","note":"","ucode":"F5931108BD509B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":292984,"discussion_content":"我也有点蒙","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1595404452,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":2101988,"avatar":"https://static001.geekbang.org/account/avatar/00/20/12/e4/57ade29a.jpg","nickname":"dva","note":"","ucode":"EE27DAFCBF198D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1812970,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/a9/ea/5bfce6c5.jpg","nickname":"mgs2002","note":"","ucode":"F5931108BD509B","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":301937,"discussion_content":"我觉得应该是双m结构两笔都要检测状态，所以两边都运行着条语句，如果是同一个id的话就会报错，才需要用@@server_id","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1598712008,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":292984,"ip_address":""},"score":301937,"extra":""},{"author":{"id":1644104,"avatar":"https://static001.geekbang.org/account/avatar/00/19/16/48/09493874.jpg","nickname":"茶没喝完","note":"","ucode":"D72D88C42A1258","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1812970,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/a9/ea/5bfce6c5.jpg","nickname":"mgs2002","note":"","ucode":"F5931108BD509B","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":351235,"discussion_content":"这个语句记录到binlog就是一条insert语句，包含完整的插入数据，没有 on duplicate key update相关的信息了，所以会导致主键冲突","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1614186316,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":292984,"ip_address":""},"score":351235,"extra":""}]},{"author":{"id":1031845,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/be/a5/df917d18.jpg","nickname":"ward-wolf","note":"","ucode":"BC41D01301263A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":217935,"discussion_content":"老师的意思难道是主键冲突就会导致主从同步停止么？我也有点懵懵的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585585356,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1672786,"avatar":"https://static001.geekbang.org/account/avatar/00/19/86/52/91c7d112.jpg","nickname":"Garen","note":"","ucode":"0608C88F83EF0C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":41386,"discussion_content":"做主从，binlog一般都不用STATEMENT格式。另两种格式要么记insert，要么记update。不会记完整的sql。我的理解是这样的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1572417963,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":88940,"user_name":"路平","can_delete":false,"product_type":"c1","uid":1068133,"ip_address":"","ucode":"92A970D8635D3F","user_header":"https://static001.geekbang.org/account/avatar/00/10/4c/65/24df4f11.jpg","comment_is_top":false,"comment_ctime":1556030034,"is_pvip":false,"replies":[{"id":"32651","content":"如果你是要保存“历史”，可以加两个字段：版本号和状态（表示是否删除）<br><br>【编辑跟我说会有提醒~】","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1556851105,"ip_address":"","comment_id":88940,"utype":1}],"discussion_count":3,"race_medal":0,"score":"35915768402","product_id":100020801,"comment_content":"你好，这两天一路看下来，收获不少。<br>提个表设计相关的问题：<br>用一个表存储文件全路径，删除某个文件（一行记录）时使用逻辑删除。怎么设计表及其索引（如果有）？<br>需要考虑：<br>1. 文件被删除后有可能会再创建一个同名的文件；<br>2. 新创建的文件也可能再次被逻辑删除；<br>3. 第二个文件被删除后还可能创建第三同名文件，以此类推；<br>4. 未删除的文件路径不能有重复值。<br><br>不知道作者是否还会回复留言。如果回复了，我是会收到提醒吗？","like_count":8,"discussions":[{"author":{"id":2704955,"avatar":"","nickname":"Geek_aad518","note":"","ucode":"8EE7A18A46F983","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":540654,"discussion_content":"is_deleted字段  0：未删除；时间戳：已删除。（用时间戳还能知道删除的具体时间）。然后建唯一索引（name, is_deleted）。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1640104712,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":447954,"discussion_content":"如果你是要保存“历史”，可以加两个字段：版本号和状态（表示是否删除）\n\n【编辑跟我说会有提醒~】","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1556851105,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1042507,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/e8/4b/57fa0e34.jpg","nickname":"brianway","note":"","ucode":"E05738C88829C2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":554178,"discussion_content":"楼上说的基本正确，加一列detele_time，表示删除时间，默认NULL，表示未删除，作用等同于老师说的版本号。 唯一索引：(path,delete_time)","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1646236268,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":62462,"user_name":"一大只😴","can_delete":false,"product_type":"c1","uid":1310960,"ip_address":"","ucode":"92F3D2B7F63568","user_header":"https://static001.geekbang.org/account/avatar/00/14/00/f0/08409e78.jpg","comment_is_top":false,"comment_ctime":1548062889,"is_pvip":false,"replies":[{"id":"22101","content":"Thread running 是包含“锁等待”状态的线程的，<br>超过点也没事😄","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1548087407,"ip_address":"","comment_id":62462,"utype":1}],"discussion_count":2,"race_medal":0,"score":"27317866665","product_id":100020801,"comment_content":"老师，我想问下，我的ECS上是8核CPU，只跑一个MySQL实例，那innodb_thread_concurrency如果设成2倍，那就是16哈。看并发查询的数量，是不是关注Threads_running是否超过innodb_thread_concurrency就可以了。","like_count":6,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":437223,"discussion_content":"Thread running 是包含“锁等待”状态的线程的，\n超过点也没事😄","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1548087407,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2542376,"avatar":"https://static001.geekbang.org/account/avatar/00/26/cb/28/21a8a29e.jpg","nickname":"夏天","note":"","ucode":"5F224DDAC94DFF","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":368688,"discussion_content":"Threads connected means the total number of client processes (threads) connected to the database server. This includes the count for threads running.\n\nThread running means the total number of client processes (threads) currently executing on the database server. The server is holding these connections while the client is waiting for a reply. These thread may be consuming IO/CPU, while others may do nothing while waiting for a table lock to be released. When the database is finished executing the thread, the client gets a reply, and the thread is changed from status &#34;running&#34; to &#34;connected&#34;.\n\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1618803050,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":62676,"user_name":"Mr.Strive.Z.H.L","can_delete":false,"product_type":"c1","uid":1030198,"ip_address":"","ucode":"6D97E159E2EECD","user_header":"https://static001.geekbang.org/account/avatar/00/0f/b8/36/542c96bf.jpg","comment_is_top":false,"comment_ctime":1548128475,"is_pvip":false,"replies":[{"id":"22192","content":"比如两个表刚开始都是空表，<br>然后第一个语句执行<br>insert into mysql.health_check(id, t_modified) values (1, now()) on duplicate key update t_modified=now();<br><br>就会两边各写入一个insert语句的binlog日志，传到对面就导致同步停止了<br>","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1548139036,"ip_address":"","comment_id":62676,"utype":1}],"discussion_count":1,"race_medal":0,"score":"23022964955","product_id":100020801,"comment_content":"老师您好：<br><br>本章有个疑惑：<br>”外部检测的时候，主备使用同一条更新语句，造成行冲突，导致主备同步停止”<br><br>上面这句话实在想不通。外部检测是只是看更新语句的返回时间，health_check表在主库备库都有，为啥会造成行冲突？为啥会导致主备同步停止？即使是相同的binlog，也没啥影响呀。","like_count":5,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":437300,"discussion_content":"比如两个表刚开始都是空表，\n然后第一个语句执行\ninsert into mysql.health_check(id, t_modified) values (1, now()) on duplicate key update t_modified=now();\n\n就会两边各写入一个insert语句的binlog日志，传到对面就导致同步停止了\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1548139036,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":138098,"user_name":"lzh","can_delete":false,"product_type":"c1","uid":1336951,"ip_address":"","ucode":"C3D83DF4230109","user_header":"https://static001.geekbang.org/account/avatar/00/14/66/77/194ba21d.jpg","comment_is_top":false,"comment_ctime":1570023267,"is_pvip":false,"discussion_count":6,"race_medal":0,"score":"14454925155","product_id":100020801,"comment_content":"难道就没人问为啥SELECT 1不算入并发线程中吗？难道因为没查表吗？只有查了表涉及IO的才会算入并发线程？","like_count":3,"discussions":[{"author":{"id":1062848,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83ersGSic8ib7OguJv6CJiaXY0s4n9C7Z51sWxTTljklFpq3ZAIWXoFTPV5oLo0GMTkqW5sYJRRnibNqOJQ/132","nickname":"walle斌","note":"","ucode":"0DB3243004951F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":296307,"discussion_content":"同上，我在自己的笔记就写的是 select 1 在执行器就返回了，压根没倒innodb引擎，更不用说占用并发数了","likes_number":9,"is_delete":false,"is_hidden":false,"ctime":1596506862,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1005391,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/57/4f/6fb51ff1.jpg","nickname":"一步","note":"","ucode":"73CEA468CE70C3","race_medal":1,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":125574,"discussion_content":"我的理解是 select 1, 没有进入到引擎执行，在执行器执行后就返回了","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1578490125,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1971077,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLG44I6sZyAQQLiazlJicx3b4NJpXrKzAGTsrWPm5DiaR6fmDqmIP2C9GkIZSrvf79zcmcU2S98iaiaGhQ/132","nickname":"Geek_0eb798","note":"","ucode":"6DB450F9C647C7","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":390300,"discussion_content":"innodb_thread_concurrency 看这个参数名，应该是只对innodb引擎生效吧，而select 1并不会用到innodb引擎，所以不会限制","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1629768057,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1543162,"avatar":"https://static001.geekbang.org/account/avatar/00/17/8b/fa/103e6900.jpg","nickname":"山鬼谣","note":"","ucode":"E25F498B85A01B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":535037,"discussion_content":"select 1确实不会到引擎层；官方文档中有个例子：SELECT 1 + 1 输出的是2。也就是说执行器可以用来当计算器来用，即确实存在不需要访问引擎的场景。\nhttps://dev.mysql.com/doc/refman/5.6/en/select.html","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1638340092,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2166073,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/k3YD3y3BzGDSdrwRJyJY4BXsNJibfM4uzOdDVKIAlFApR2FZCLg2ibrZtJ4vuahA3LHLW9GKzH5CMGqCDhWjhZqg/132","nickname":"戒酒的李白","note":"","ucode":"744E1A22761647","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":410284,"discussion_content":"牛逼牛逼，确实以innodb开头的参数都是控制innodb引擎侧相关的功能，如果语句没到引擎层确实限制不到","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1635649713,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2640551,"avatar":"https://static001.geekbang.org/account/avatar/00/28/4a/a7/ab7998b1.jpg","nickname":"zachary","note":"","ucode":"B22B95FCECD6E7","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":378913,"discussion_content":"我也有同样的疑问，目前这个解释貌似能说的通吧","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1623507312,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":61944,"user_name":"heat nan","can_delete":false,"product_type":"c1","uid":1153826,"ip_address":"","ucode":"52D5CB17CE80E5","user_header":"https://static001.geekbang.org/account/avatar/00/11/9b/22/dd04892a.jpg","comment_is_top":false,"comment_ctime":1547863989,"is_pvip":false,"replies":[{"id":"21952","content":"“因为内存中的页可能是分散的，可能不构成一个完成的索引结构，可能不能利用b+树叶子节点的路由功能。”<br><br>这里不对哈<br><br>放在内存里是b+树组织的，可以利用b+树叶子节点的路由功能的","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1547867135,"ip_address":"","comment_id":61944,"utype":1}],"discussion_count":1,"race_medal":0,"score":"14432765877","product_id":100020801,"comment_content":"老师，一直有个疑问，想咨询下。innodb buffer 会缓存表的数据页和索引页。现在我想知道如何确认一个查询的行已经被缓存在内存中了。  我想了一下，第一种方法是直接去内存中遍历这个表相关的数据页。这样的话，因为内存中的页可能是分散的，可能不构成一个完成的索引结构，可能不能利用b+树叶子节点的路由功能。 这里有点模糊，希望老师有空可以解释一下","like_count":3,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":437044,"discussion_content":"“因为内存中的页可能是分散的，可能不构成一个完成的索引结构，可能不能利用b+树叶子节点的路由功能。”\n\n这里不对哈\n\n放在内存里是b+树组织的，可以利用b+树叶子节点的路由功能的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1547867135,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":61759,"user_name":"布衣骇客","can_delete":false,"product_type":"c1","uid":1256280,"ip_address":"","ucode":"5226B0F67090D1","user_header":"https://static001.geekbang.org/account/avatar/00/13/2b/58/11c05ccb.jpg","comment_is_top":false,"comment_ctime":1547792967,"is_pvip":false,"replies":[{"id":"21914","content":"有DBA就不要自己去修改线上的参数啦<br><br>如果说观察，一个比较好的管控系统，是会能够让你看到这些值的<br><br>如果没有，就让dba给你一份线上的my.cnf的配置，然后你在测试环境自己用这个配置启动实例来观察","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1547802721,"ip_address":"","comment_id":61759,"utype":1}],"discussion_count":1,"race_medal":0,"score":"14432694855","product_id":100020801,"comment_content":"作为一个开发我也很想了解一下我们自己生产库上的监控情况，接触到最多的就是Datasource,以及user，password,port（基本上是基于连接那种级别，最多就是加锁），等等参数，大部分都是基于业务开发。站在个人层面或者业务开发层面（很少能接触到DBA，以及看到DBA是怎么设置这些参数情况，除非库挂掉了就会和DBA一起看这些）怎么去修改和观看以及使用这些参数鸭","like_count":3,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":436979,"discussion_content":"有DBA就不要自己去修改线上的参数啦\n\n如果说观察，一个比较好的管控系统，是会能够让你看到这些值的\n\n如果没有，就让dba给你一份线上的my.cnf的配置，然后你在测试环境自己用这个配置启动实例来观察","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1547802721,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":61681,"user_name":"Ryoma","can_delete":false,"product_type":"c1","uid":1130590,"ip_address":"","ucode":"7F692369239692","user_header":"https://static001.geekbang.org/account/avatar/00/11/40/5e/b8fada94.jpg","comment_is_top":false,"comment_ctime":1547773863,"is_pvip":true,"discussion_count":0,"race_medal":2,"score":"10137708455","product_id":100020801,"comment_content":"现在的服务中只加了一个healthCheck的接口，和MySQL中使用select判断比较类似。当服务依赖的MySQL及Redis等第三方资源发生问题时，还是不能有效的判断","like_count":2},{"had_liked":false,"id":121595,"user_name":"Shiki珠","can_delete":false,"product_type":"c1","uid":1605496,"ip_address":"","ucode":"79DD60ED42C2F1","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/wVJLKmibyYdqv3Uu4zCrN3iaucoMTGqppPvC1VMcAFSToz8BIiagnx6AcEFvDmd0533rRS7sa0dO47mCdkhfHOXRw/132","comment_is_top":false,"comment_ctime":1565164400,"is_pvip":false,"discussion_count":3,"race_medal":0,"score":"5860131696","product_id":100020801,"comment_content":"老师您好！请教下，我们这边每天白天几乎每个整点，业务那边有定时批量任务，那几分钟内CPU会彪到100%。活跃线程数也在200左右，QPS峰值20000+，此时也会出现平时不慢的“慢sql”，如果把innodb_thread_concurrency从0改为128或者更低，是否会有所缓解呢?但是如果限制了那有很多连接会排队等待是否会延迟，而造成业务很慢呢?","like_count":1,"discussions":[{"author":{"id":2542376,"avatar":"https://static001.geekbang.org/account/avatar/00/26/cb/28/21a8a29e.jpg","nickname":"夏天","note":"","ucode":"5F224DDAC94DFF","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":368691,"discussion_content":"如果把innodb_thread_concurrency从0改为128或者更低，是否会有所缓解呢?但是如果限制了那有很多连接会排队等待是否会延迟，而造成业务很慢呢?\n\n---\nCPU 已经 100% 了。改这些参数没用的。如果不想打爆 CPU，可以调低。但是会有更多请求在排队。业务会响应变慢。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1618803646,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1960963,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eoXoqDLvF3l8OzIwDBVlbgZ2FtbPFoncicFjQPqMFkKqdG5BnRVIxxrN40zUhTkynsd6yLhqqYiblAQ/132","nickname":"任国宁","note":"","ucode":"FE47D8DB5FA4C7","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":308301,"discussion_content":"把定时任务打散，是不是可以参考限流算法，定时任务启动后，按照设定的速率执行呢？","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1600911408,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2092079,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/ec/2f/a8745999.jpg","nickname":"小荷","note":"","ucode":"A1EF42B4C39F81","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":298331,"discussion_content":"同问像跑定时任务造成的资源飙升有什么好的优化手段","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1597247136,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":118540,"user_name":"IT橘子","can_delete":false,"product_type":"c1","uid":1066932,"ip_address":"","ucode":"1DBEE96BAF8B0B","user_header":"https://static001.geekbang.org/account/avatar/00/10/47/b4/e8b3f53f.jpg","comment_is_top":false,"comment_ctime":1564383811,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5859351107","product_id":100020801,"comment_content":"老师，当innodb并发线程数过多导致的系统不可用问题，进行主备切换后问题就可以解决吗？备库上的innodb并发线程会不会也在一段时间之后也达到阈值呢？<br>","like_count":1},{"had_liked":false,"id":66288,"user_name":"alias cd=rm -rf","can_delete":false,"product_type":"c1","uid":1318325,"ip_address":"","ucode":"E7B27D76305B75","user_header":"https://static001.geekbang.org/account/avatar/00/14/1d/b5/971261fd.jpg","comment_is_top":false,"comment_ctime":1549904739,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5844872035","product_id":100020801,"comment_content":"1、判断进程是否可用：ping的方案（类似select 1）<br>2、根据业务的需求一般会设置一个阈值以及策略（如：单位时间失败的次数，响应时间超过多少阈值）如何进行熔断、扩容等方案。","like_count":1},{"had_liked":false,"id":354847,"user_name":"刘金生","can_delete":false,"product_type":"c1","uid":1191973,"ip_address":"江苏","ucode":"3388B5D8BF9355","user_header":"https://static001.geekbang.org/account/avatar/00/12/30/25/178759a2.jpg","comment_is_top":false,"comment_ctime":1660818350,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1660818350","product_id":100020801,"comment_content":"老师您好，问下最近线上环境出现waiting for table flush导致连接池满了，然后也没发现太多慢sql，请问是咋回事","like_count":0},{"had_liked":false,"id":319750,"user_name":"wuxbeyond","can_delete":false,"product_type":"c1","uid":1318668,"ip_address":"","ucode":"F665896CF1DC3D","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/fC4DvPtDPjJjWsMkrRTk4oC9aXnmH7PfBpL3YXichibuib7BXmqteiaQ09jWb7jOFPI5omZCXSmicnmoKXiacYZhqibxg/132","comment_is_top":false,"comment_ctime":1635928387,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1635928387","product_id":100020801,"comment_content":"proxysql 可以根据延时判断走 主库 还是从库。","like_count":0},{"had_liked":false,"id":315159,"user_name":"宙斯","can_delete":false,"product_type":"c1","uid":2041396,"ip_address":"","ucode":"80DF36BAD298AD","user_header":"https://static001.geekbang.org/account/avatar/00/1f/26/34/891dd45b.jpg","comment_is_top":false,"comment_ctime":1633711163,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1633711163","product_id":100020801,"comment_content":"业务层面通过内置心跳检查地址，若OK说明请求能正常被处理，请求处理耗时是正常的","like_count":0},{"had_liked":false,"id":304365,"user_name":"zhangm365","can_delete":false,"product_type":"c1","uid":1657561,"ip_address":"","ucode":"60E7DEFB3F5840","user_header":"https://static001.geekbang.org/account/avatar/00/19/4a/d9/b8046b4b.jpg","comment_is_top":false,"comment_ctime":1627373482,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1627373482","product_id":100020801,"comment_content":"两个基本的疑问：<br>1. 为什么一开始的例子中：事务1处理空闲时，不算并发线程啊？<br>2. select 1 方法不是检查出库出问题了吗？为什么还有用的？","like_count":0},{"had_liked":false,"id":301168,"user_name":"冲冲冲","can_delete":false,"product_type":"c1","uid":2676330,"ip_address":"","ucode":"4DA7596B5AFD51","user_header":"https://static001.geekbang.org/account/avatar/00/28/d6/6a/1d844a27.jpg","comment_is_top":false,"comment_ctime":1625561912,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1625561912","product_id":100020801,"comment_content":"老师我有个问题<br>就是更新判断中，只有一个时间戳的，主备同步，因为备库会把binlog发送给主库，可能会出现同一行改动，就会发生行冲突，这个时候等锁结束不行吗？，就直接把主备同步停止了吗","like_count":0},{"had_liked":false,"id":286201,"user_name":"promoter","can_delete":false,"product_type":"c1","uid":1252990,"ip_address":"","ucode":"46C320FCD65F04","user_header":"https://static001.geekbang.org/account/avatar/00/13/1e/7e/a4c4bcd0.jpg","comment_is_top":false,"comment_ctime":1617188370,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1617188370","product_id":100020801,"comment_content":"请教一个严重问题 操作系统异常重启 有很大概率导致MySQL表被损坏 怎样避免这种问题 或者怎么快速进行自动修复。","like_count":0},{"had_liked":false,"id":286085,"user_name":"厨师张","can_delete":false,"product_type":"c1","uid":1485677,"ip_address":"","ucode":"90BDAC2AC1CC88","user_header":"https://static001.geekbang.org/account/avatar/00/16/ab/6d/d5d44dac.jpg","comment_is_top":false,"comment_ctime":1617153928,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1617153928","product_id":100020801,"comment_content":"如何判断主库不可用的前提是主库不可用的定义什么？是纯站在dba的角度考虑还是涉及到业务上的考虑。文中举的并发连接数达到上限和锁等待超时的例子并不恰当。类似的问题应该属于业务的范畴发现了，需要业务去改造优化。另外db的性能与服务器的监控是重要一环文中并没有过多提及，磁盘空间使用率都已经100%才去处理，报警早就该报出来了，所以这个例子也不是很恰当","like_count":0},{"had_liked":false,"id":259478,"user_name":"狼的诱惑","can_delete":false,"product_type":"c1","uid":1257043,"ip_address":"","ucode":"AE89DFC5963C42","user_header":"https://static001.geekbang.org/account/avatar/00/13/2e/53/bf62683f.jpg","comment_is_top":false,"comment_ctime":1604735275,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1604735275","product_id":100020801,"comment_content":"老师请教两个问题：<br>1、数据库TPS压测上不去：<br>数据库配置 56核128G 连接数1000 <br>应用服务配置 4核8G  共24台实例<br>连接池使用Durid最新版本 1.2.1 <br>每台应用的链接池配置：<br>sharding.druid.initialSize=12<br>sharding.druid.maxActive=24<br>sharding.druid.minIdle=12<br>sharding.druid.removeAbandoned=false<br>sharding.druid.useUnfairLock=true<br><br>数据库主要是两个表同时插入，每个表分为100张表，主表中有一个唯一索引<br>压测<br>2台压测机，一台500开启500线程，共1000并发<br>结果：<br>TPS：6000左右<br>数据库显示无压力，但应用的连接池会爆满，但调大链接池的最大链接为36时，TPS并不会提升<br>不知道是已经到了应用的最大性能，还是哪里出了问题？<br><br>2、基于问题1考虑，进行了分库分表，算法问题：<br>支付表中有userId、orderNo、tradeNo 其中orderNo和tradeNo拼接的都是userId的后两位，<br>业务分别会根据orderNo，tradeNo，userId进行查询。 目前是一个库分了一百张表，现在希望分成4个库每个库一百张表。<br>目前看后两位再怎么写算法也只能是0-99 这100个数，如何分散到四个库每个库100张表呢？或是有其他的解决思路吗？","like_count":0},{"had_liked":false,"id":259476,"user_name":"狼的诱惑","can_delete":false,"product_type":"c1","uid":1257043,"ip_address":"","ucode":"AE89DFC5963C42","user_header":"https://static001.geekbang.org/account/avatar/00/13/2e/53/bf62683f.jpg","comment_is_top":false,"comment_ctime":1604735061,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1604735061","product_id":100020801,"comment_content":"老师请教两个问题：<br>1、数据库TPS压测：<br>数据库配置 56核128G 连接数1000 <br>数据库分为100个表<br>应用服务配置 4核8G  共24台实例<br>连接池使用Durid最新版本 1.2.1 <br>每台应用的链接池配置：<br>sharding.druid.initialSize=12<br>sharding.druid.maxActive=24<br>sharding.druid.minIdle=12<br>sharding.druid.removeAbandoned=false<br>sharding.druid.useUnfairLock=true<br>数据库主要是两个表，每个表分为100张表，主表中有一个唯一索引<br><br>压测<br>2台压测机，共1000并发<br>结果：<br>TPS：6000左右<br>数据库显示无压力，但应用的连接池会爆满，但调大链接池的最大链接为36时，TPS并不会提升<br><br>不知道是已经到了应用的最大性能，还是哪里出了问题？<br><br>2、基于以上的问题进行了分库分表，算法问题：<br>支付表中有userId、orderNo、tradeNo 其中orderNo和tradeNo拼接的都是userId的后两位，<br>业务分别会根据orderNo，tradeNo，userId进行查询。 目前是一个库分了一百张表，现在希望分成4个库每个库一百张表。<br>目前看后两位再怎么写算法也只能是0-99 这100个数，如何分散到四个库每个库100张表呢？或是有其他的解决思路吗？","like_count":0},{"had_liked":false,"id":254294,"user_name":"紫日","can_delete":false,"product_type":"c1","uid":1207410,"ip_address":"","ucode":"73A8DEE323AC19","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eqXSb2jAzlMM0JdTjWrNiaq2uR9eeloBYp906POddb9evmuj5f4CUoO6ge8TibibwtZicnl1sRHic9rW7g/132","comment_is_top":false,"comment_ctime":1603096815,"is_pvip":true,"discussion_count":0,"race_medal":4,"score":"1603096815","product_id":100020801,"comment_content":"判断数据是否出问题方式很多，select 1 一些情况时无效的，要想有效就涉及更多数据库资源，数据库很慢时，，这个验证也很慢，有没有一般简单有效的方法呢？","like_count":0},{"had_liked":false,"id":247404,"user_name":"lobby","can_delete":false,"product_type":"c1","uid":1181960,"ip_address":"","ucode":"8D81722BE36AD4","user_header":"https://static001.geekbang.org/account/avatar/00/12/09/08/f3547e77.jpg","comment_is_top":false,"comment_ctime":1599702542,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1599702542","product_id":100020801,"comment_content":"看到老师说，innodb_thread_concurrency建议设置为核数的2倍左右为好，想到netty的workgroup数量默认设置也是这样的，感受到知识是相同的","like_count":0},{"had_liked":false,"id":245046,"user_name":"nofrish","can_delete":false,"product_type":"c1","uid":1111037,"ip_address":"","ucode":"8A5A47FE242891","user_header":"https://static001.geekbang.org/account/avatar/00/10/f3/fd/ca3a1b4a.jpg","comment_is_top":false,"comment_ctime":1598794250,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1598794250","product_id":100020801,"comment_content":"关于业务监控的问题，我在自己的知乎里写过一篇文章，推荐一下：https:&#47;&#47;zhuanlan.zhihu.com&#47;p&#47;27437421<br><br>请老师帮我置顶~ ","like_count":0},{"had_liked":false,"id":242791,"user_name":"家福","can_delete":false,"product_type":"c1","uid":1948238,"ip_address":"","ucode":"19699FE6751EF0","user_header":"https://static001.geekbang.org/account/avatar/00/1d/ba/4e/0e3604d3.jpg","comment_is_top":false,"comment_ctime":1597842416,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1597842416","product_id":100020801,"comment_content":"如果用更新来检测主库的话，那么备库也要进行更新检测。但，备库的检测也是要写 binlog 的。由于我们一般会把数据库 A 和 B 的主备关系设计为双 M 结构，所以在备库 B 上执行的检测命令，也要发回给主库 A。但是，如果主库 A 和备库 B 都用相同的更新命令，就可能出现行冲突，也就是可能会导致主备同步停止。<br>这一段不是那么理解，备库 B 上执行的检测命令发给主库A是什么命令？     都有相同的更新命令为什么出现行冲突？","like_count":0},{"had_liked":false,"id":240711,"user_name":"密的","can_delete":false,"product_type":"c1","uid":1356304,"ip_address":"","ucode":"D1A3E9962C7715","user_header":"","comment_is_top":false,"comment_ctime":1597043216,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1597043216","product_id":100020801,"comment_content":"有个疑问，求解惑，文章中有2个地方是这样写的：<br>“MySQL 这样设计是非常有意义的。因为，进入锁等待的线程已经不吃 CPU 了”<br>“由于所有线程都处于等待状态，此时占用的 CPU 却是 0”<br>当MYSQL的线程处于锁等待的时候，也是会对CPU造成占用的吧？<br>","like_count":0,"discussions":[{"author":{"id":1621432,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/WxLKJlXCibwqO92vB8XTicLQiahrhuUEqP7yT9dearZxLzbia7oMdsLmon5J4LJyTfIWchHY3bKfibm1lS1aZarZs4Q/132","nickname":"jie","note":"","ucode":"E93A1818AB2459","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":575480,"discussion_content":"是不是sleep了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1654863190,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":239333,"user_name":"walle斌","can_delete":false,"product_type":"c1","uid":1062848,"ip_address":"","ucode":"0DB3243004951F","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83ersGSic8ib7OguJv6CJiaXY0s4n9C7Z51sWxTTljklFpq3ZAIWXoFTPV5oLo0GMTkqW5sYJRRnibNqOJQ/132","comment_is_top":false,"comment_ctime":1596505309,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1596505309","product_id":100020801,"comment_content":"前年的时候spring boot还是1.x，默认注册中心是eureka，当时就遇到一个问题，eureka统计某个微服务是否活着的标记是各个微服务是否在一定时间内上报自己的状态，当时遇到微服务的bug，其实是由于db全被hang住，拖得服务也被hang住，其实已经不可用，但是用过eureka的知道，每个微服务上报自己的状态，是内部起了一个线程上报，所以从eureka看可用，但是实际已经不可用了。<br>当时做的改进，第一加服务的心跳健康检查，第二，当时1.X体系，对于内嵌的tomcat监控不到位，所以额外加入了tomcat的监控，重点监控的就是，核心线程池，阻塞队列长度，请注意tomcat线程池与jdk的线程池有所区别，核心线程数足够看明白问题了。<br>当然现在spring boot升级到2.x以后的actuator 监控足够了，不像之前那么尴尬了。","like_count":0},{"had_liked":false,"id":236378,"user_name":"mgs2002","can_delete":false,"product_type":"c1","uid":1812970,"ip_address":"","ucode":"F5931108BD509B","user_header":"https://static001.geekbang.org/account/avatar/00/1b/a9/ea/5bfce6c5.jpg","comment_is_top":false,"comment_ctime":1595404143,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1595404143","product_id":100020801,"comment_content":"我所在的公司是这样的:<br>1. 每个个项目提供一个健康监测接口，返回固定的值，项目上线后会定时调用该接口，如果无响应或者超时就说明有问题。<br>2. 项目日志里面分拆一个接口性能日志，统计出接口响应超过设置的响应时间阀值（比如500ms），定期去看这个日志，然后进行优化","like_count":0},{"had_liked":false,"id":235847,"user_name":"hhhh","can_delete":false,"product_type":"c1","uid":1256101,"ip_address":"","ucode":"9E87017424B382","user_header":"https://static001.geekbang.org/account/avatar/00/13/2a/a5/625c0a2e.jpg","comment_is_top":false,"comment_ctime":1595221063,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1595221063","product_id":100020801,"comment_content":"请问老师，负责mysql 主备切换的这种ha系统，各个公司都是自己写的吗，还是有大家都在用的开源解决方案？","like_count":0,"discussions":[{"author":{"id":1301833,"avatar":"https://static001.geekbang.org/account/avatar/00/13/dd/49/2a24dc77.jpg","nickname":"石晓博²⁰¹9","note":"","ucode":"38F92A9275E4B4","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":359495,"discussion_content":"同问","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1616209848,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":233166,"user_name":"slark","can_delete":false,"product_type":"c1","uid":1143574,"ip_address":"","ucode":"7E8DE962AA23A7","user_header":"https://static001.geekbang.org/account/avatar/00/11/73/16/595b0342.jpg","comment_is_top":false,"comment_ctime":1594254794,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1594254794","product_id":100020801,"comment_content":"CPU、内存、Threads_running、当前打开的连接数，平日里更关注这几个<br>这个innodb_thread_concurrency是不是没前面的更容易体现问题","like_count":0},{"had_liked":false,"id":218617,"user_name":"星期八","can_delete":false,"product_type":"c1","uid":1440429,"ip_address":"","ucode":"D8C66E7F61B0D1","user_header":"https://static001.geekbang.org/account/avatar/00/15/fa/ad/3fa02ac7.jpg","comment_is_top":false,"comment_ctime":1589846368,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1589846368","product_id":100020801,"comment_content":"查询<br>更新<br>内部统计","like_count":0},{"had_liked":false,"id":203245,"user_name":"浮生醉","can_delete":false,"product_type":"c1","uid":1783354,"ip_address":"","ucode":"7549E41BD65511","user_header":"https://static001.geekbang.org/account/avatar/00/1b/36/3a/335db90a.jpg","comment_is_top":false,"comment_ctime":1586160190,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1586160190","product_id":100020801,"comment_content":"假设，这条语句在主库上要执行 10 分钟，提交后传到备库就要 10 分钟（典型的大事务）。那么，在主库 DDL 之后再提交的事务的 GTID，去备库查的时候，就会等 10 分钟才出现。<br><br>有个疑问<br>那10min是等DDL执行完，并写完binlog可以发送到从库，期间其他更新SQL在主库不是也可以正常执行吗，那相关的操作不是也能写入binlog,为什么不能发送给从库执行啊","like_count":0},{"had_liked":false,"id":199805,"user_name":"风雪夜归人","can_delete":false,"product_type":"c1","uid":1583347,"ip_address":"","ucode":"40B4C6DB4351EB","user_header":"https://static001.geekbang.org/account/avatar/00/18/28/f3/103b5bec.jpg","comment_is_top":false,"comment_ctime":1585496202,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1585496202","product_id":100020801,"comment_content":"打卡打卡","like_count":0},{"had_liked":false,"id":191670,"user_name":"明歌","can_delete":false,"product_type":"c1","uid":1445986,"ip_address":"","ucode":"2E91A2203052B6","user_header":"https://static001.geekbang.org/account/avatar/00/16/10/62/335856f7.jpg","comment_is_top":false,"comment_ctime":1584788934,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1584788934","product_id":100020801,"comment_content":"请问老师，对于应用端数据库连接池设置的连接数应该怎么衡量？是否应该为数据库服务器cpu核数的2倍？","like_count":0},{"had_liked":false,"id":171647,"user_name":"88591","can_delete":false,"product_type":"c1","uid":1254656,"ip_address":"","ucode":"04CE3E46455185","user_header":"https://static001.geekbang.org/account/avatar/00/13/25/00/3afbab43.jpg","comment_is_top":false,"comment_ctime":1578986022,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1578986022","product_id":100020801,"comment_content":"分布式服务一般与网络有关，可以在网络协议不同层次来判断，比如 ping ，telnet , curl, 。如果还要更准确，就测试服务器内部执行逻辑是否ok。","like_count":0},{"had_liked":false,"id":125038,"user_name":"爱因诗贤","can_delete":false,"product_type":"c1","uid":1528379,"ip_address":"","ucode":"150C439B87CED1","user_header":"https://static001.geekbang.org/account/avatar/00/17/52/3b/7a2610a6.jpg","comment_is_top":false,"comment_ctime":1566049960,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1566049960","product_id":100020801,"comment_content":"老师，请教一个问题，我把mysql5.5升级到mysql8.0导致大量语法报错，请问有没有什么好的解决办法","like_count":0},{"had_liked":false,"id":120488,"user_name":"钱","can_delete":false,"product_type":"c1","uid":1009652,"ip_address":"","ucode":"2C92A243A463D4","user_header":"https://static001.geekbang.org/account/avatar/00/0f/67/f4/9a1feb59.jpg","comment_is_top":false,"comment_ctime":1564911447,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1564911447","product_id":100020801,"comment_content":"监控系统监控，达到一定条件也会触发报警，比如：慢SQL的信息，磁盘空间的信息。<br>这些都是公司基础架构部做的，取得信息估计和老师讲的类似，我们主要报警信息就行。","like_count":0},{"had_liked":false,"id":112359,"user_name":"null","can_delete":false,"product_type":"c1","uid":1024294,"ip_address":"","ucode":"F9039EFED6B55D","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/PiajxSqBRaELZPnUAiajaR5C25EDLWeJURggyiaOP5GGPe2qlwpQcm5e3ybib8OsP4tvddFDLVRSNNGL5I3SFPJHsA/132","comment_is_top":false,"comment_ctime":1562723243,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1562723243","product_id":100020801,"comment_content":"原文：<br>如果处于锁等待状态的线程计数『不』减一，InnoDB 就会认为线程数用满了，会阻止其他语句进入引擎执行，这样线程 1 不能提交事务。<br><br>应该是：如果处于锁等待状态的线程计数减一？","like_count":0},{"had_liked":false,"id":106756,"user_name":"是我的海","can_delete":false,"product_type":"c1","uid":1197457,"ip_address":"","ucode":"4BCE240829676A","user_header":"https://static001.geekbang.org/account/avatar/00/12/45/91/afda3094.jpg","comment_is_top":false,"comment_ctime":1561383995,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1561383995","product_id":100020801,"comment_content":"想问下老师之前讲的第七章那个死锁检测的案例，如果我们设置了并发线程数，是不是就不会出现热点更新一行死锁的情况？","like_count":0,"discussions":[{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":175804,"discussion_content":"该有还是会有的吧。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1581995893,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":105819,"user_name":"冥王星","can_delete":false,"product_type":"c1","uid":1311603,"ip_address":"","ucode":"CA43C381A69736","user_header":"https://static001.geekbang.org/account/avatar/00/14/03/73/38397da1.jpg","comment_is_top":false,"comment_ctime":1561088078,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1561088078","product_id":100020801,"comment_content":"使用单行数据的update操作来进行数据库的健康检查的时候，难道说主备库之间不能使用GTID机制放置更新操作的冲突么？","like_count":0,"discussions":[{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":175809,"discussion_content":"这种是主备同时操作写入binlog的，要求都检测，怎么用gtid呢，一个不写？那就是意味着一方不检测了？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1581996058,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":104363,"user_name":"苦行僧","can_delete":false,"product_type":"c1","uid":1055334,"ip_address":"","ucode":"726024A9A9CF44","user_header":"https://static001.geekbang.org/account/avatar/00/10/1a/66/2d9db9ed.jpg","comment_is_top":false,"comment_ctime":1560737411,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1560737411","product_id":100020801,"comment_content":"修改大表结构会直接导致不可用 ","like_count":0},{"had_liked":false,"id":85715,"user_name":"乔纳森","can_delete":false,"product_type":"c1","uid":1045107,"ip_address":"","ucode":"51EC9FAE071388","user_header":"https://static001.geekbang.org/account/avatar/00/0f/f2/73/1c7bceae.jpg","comment_is_top":false,"comment_ctime":1555210723,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1555210723","product_id":100020801,"comment_content":"我的mysql版本是percona 5.7.24-27","like_count":0},{"had_liked":false,"id":85709,"user_name":"乔纳森","can_delete":false,"product_type":"c1","uid":1045107,"ip_address":"","ucode":"51EC9FAE071388","user_header":"https://static001.geekbang.org/account/avatar/00/0f/f2/73/1c7bceae.jpg","comment_is_top":false,"comment_ctime":1555209020,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1555209020","product_id":100020801,"comment_content":"老师，请教您一个问题，我现在遇到一个线上MySQL无法建连的情况：<br>1. tcp建连后，没有把数据包上交给mysql, 抓包可以看到，只有syn 包，没有向客户端要密码。<br>2. strace 建连过程可以看到，mysql已经分配线程了，但之后就没消息<br>3. 当然mysql 有5000+的线程数，异常之前报过too many connections, 经过一夜，连接肯定被关闭了，netstat可以看到500+ close_wait 连接，无established连接<br>4. <br>请问你有什么思路吗？已经是3月以来，第三次出现了。","like_count":0},{"had_liked":false,"id":81596,"user_name":"专栏用户","can_delete":false,"product_type":"c1","uid":1212492,"ip_address":"","ucode":"621C14A2BE0443","user_header":"https://static001.geekbang.org/account/avatar/00/12/80/4c/a0043823.jpg","comment_is_top":false,"comment_ctime":1553957695,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1553957695","product_id":100020801,"comment_content":"我是初入门的开发（当然也不是DBA），遇到过一次select没问题但update有问题的情况，当时就是两眼一摸黑。。。","like_count":0},{"had_liked":false,"id":61783,"user_name":"小橙橙","can_delete":false,"product_type":"c1","uid":1054923,"ip_address":"","ucode":"4F467210A15F66","user_header":"https://static001.geekbang.org/account/avatar/00/10/18/cb/edb5a0a0.jpg","comment_is_top":false,"comment_ctime":1547799225,"is_pvip":false,"replies":[{"id":"21920","content":"？这两个不是一致的吗<br><br>意思就是你要upate的语句找不到呀<br>你把update改成select，先确定一下是不是能看到你要更新的数据（根据你这个描述，应该是没有）","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1547803028,"ip_address":"","comment_id":61783,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1547799225","product_id":100020801,"comment_content":"老师，我工作中遇到一个奇怪的问题，java客户端执行查询语句报错：ResultSet is from UPDATE. No Data。用navicat执行相同语句，很快就查询结束，但是没有结果显示。请问可能什么问题造成的呢？","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":436993,"discussion_content":"？这两个不是一致的吗\n\n意思就是你要upate的语句找不到呀\n你把update改成select，先确定一下是不是能看到你要更新的数据（根据你这个描述，应该是没有）","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1547803028,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":61773,"user_name":"七七","can_delete":false,"product_type":"c1","uid":1301937,"ip_address":"","ucode":"277BACE2330C54","user_header":"https://static001.geekbang.org/account/avatar/00/13/dd/b1/7323beb9.jpg","comment_is_top":false,"comment_ctime":1547797505,"is_pvip":true,"replies":[{"id":"21918","content":"有的， 敬请期待<br><br>不过buffer pool内部细节很多，只能挑大家使用的时候，可能会用到的知识点来讲哈","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1547802926,"ip_address":"","comment_id":61773,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1547797505","product_id":100020801,"comment_content":"可以大致从DB监控图上判断业务有没有问题：<br>QPS&#47;连接数&#47;慢查询&#47;查询响应时间(query_response_time插件)等........<br><br>老师请教一个问题： <br>物理机器是128G内存，DB实例数据量是1.2T，磁盘是pcie ssd<br>业务查询场景是简单的select * from table where id in (1,2,3....);<br>实例QPS在1000以下时,数据库看上去一切正常<br>当QPS大于2000+时, %util持续90+, r&#47;s持续2W左右, rMB&#47;s持续600+, 伴随着连接数&#47;慢查询等报警<br>这个时候这个数据库实例可以说是出问题了吧，这类问题该怎么排查根因呢？<br>是由于buffer pool与磁盘大量换入换出冷数据导致的吗，有相关的状态值监控项可以查吗？<br><br>innodb buffer pool是mysql很重要的一个模块，老师后面有单独的章节来解惑吗，期待 ！！","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":436987,"discussion_content":"有的， 敬请期待\n\n不过buffer pool内部细节很多，只能挑大家使用的时候，可能会用到的知识点来讲哈","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1547802926,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":61670,"user_name":"爸爸回来了","can_delete":false,"product_type":"c1","uid":1305016,"ip_address":"","ucode":"30B8C927C04D66","user_header":"","comment_is_top":false,"comment_ctime":1547771424,"is_pvip":false,"replies":[{"id":"21896","content":"跟select 1 属于一类","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1547782371,"ip_address":"","comment_id":61670,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1547771424","product_id":100020801,"comment_content":"之前也用select 1。后来发现，硬盘意外塞满时，本地链接很有可能超时导致判断失败。<br>想问问老师，mysqladmin ping这个机制用来判断如何？","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":436946,"discussion_content":"跟select 1 属于一类","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1547782371,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]}]}