{"id":308108,"title":"01 | 认识容器：容器的基本操作和实现原理","content":"<p>你好，我是程远。作为一名工程师，我猜在过去的几年时间里，你肯定用过或者听人提起过容器（Container）。</p><p>说实话，容器这东西一点都不复杂，如果你只是想用的话，那跟着<a href=\"https://docs.docker.com/get-started/\">Docker官网</a>的说明，应该十来分钟就能搞定。</p><p>简单来说，它就是个小工具，可以把你想跑的程序，库文件啊，配置文件都一起“打包”。</p><p>然后，我们在任何一个计算机的节点上，都可以使用这个打好的包。有了容器，一个命令就能把你想跑的程序跑起来，做到了<strong>一次打包，就可以到处使用。</strong></p><p>今天是咱们整个课程的第一讲，我想和你来聊聊容器背后的实现机制。</p><p>当然，空讲原理也没什么感觉，所以我还是会先带着你启动一个容器玩玩，然后咱们再一起来探讨容器里面的两大关键技术—— Namespace和Cgroups。基本上理解了这两个概念，你就能彻底搞懂容器的核心原理了。</p><h2>做个镜像</h2><p>话不多说，咱们就先动手玩一玩。启动容器的工具有很多，在这里我们还是使用Docker这个最常用的容器管理工具。</p><p>如果你之前根本没用过Docker的话，那我建议你先去<a href=\"https://docs.docker.com/\">官网</a>看看文档，一些基础的介绍我就不讲了，那些内容你随便在网上一搜就能找到。</p><p>安装完Docker之后，咱们先来用下面的命令运行一个httpd服务。</p><!-- [[[read_end]]] --><pre><code># docker run -d centos/httpd:latest\n</code></pre><p>这命令也很简单，run的意思就是要启动一个容器， <code>-d</code> 参数里d是Daemon的首字母，也就是让容器在后台运行。</p><p>最后一个参数 <code>centos/httpd:latest</code> 指定了具体要启动哪一个镜像，比如这里咱们启动的是centos/httpd这个镜像的latest版本。</p><p>镜像是Docker公司的创举，也是一个伟大的发明。你想想，在没有容器之前，你想安装httpd的话，会怎么做？是不是得运行一连串的命令？甚至不同的系统上操作方法也不一样？</p><p>但你看，有了容器之后，你只要运行一条命令就搞定了。其实所有的玄机都在这个镜像里面。</p><p>镜像这么神奇，那它到底是怎么一回事呢？其实，镜像就是一个特殊的文件系统，</p><p><strong>它提供了容器中程序执行需要的所有文件。</strong>具体来说，就是应用程序想启动，需要三类文件：相关的程序可执行文件、库文件和配置文件，这三类文件都被容器打包做好了。</p><p>这样，在容器运行的时候就不再依赖宿主机上的文件操作系统类型和配置了，做到了想在哪个节点上运行，就可以在哪个节点上立刻运行。</p><p>那么我们怎么来做一个容器镜像呢？</p><p>刚才的例子里，我们用的 <code>centos/httpd:latest</code> 这个镜像是 <strong>Docker镜像库</strong>里直接提供的。当然，我们也可以自己做一个提供httpd服务的容器镜像，这里仍然可以用Docker这个工具来自定义镜像。</p><p>Docker为用户自己定义镜像提供了一个叫做Dockerfile的文件，在这个Dockerfile文件里，你可以设定自己镜像的创建步骤。</p><p>如果我们自己来做一个httpd的镜像也不难，举个例子，我们可以一起来写一个Dockerfile，体会一下整个过程。用Dockerfile build image的 Dockerfile 和对应的目录我放在<a href=\"http://github.com/chengyli/training/tree/main/image/demo\">这里</a>了。</p><p>操作之前，我们首先要理解这个Dockerfile做了什么，其实它很简单，只有下面这5行：</p><pre><code class=\"language-shell\"># cat Dockerfile\nFROM centos:8.1.1911\nRUN yum install -y httpd\nCOPY file1 /var/www/html/\nADD  file2.tar.gz /var/www/html/\nCMD [\"/sbin/httpd\", \"-D\", \"FOREGROUND\"]\n</code></pre><p>我们看下它做了哪几件事：在一个centos的基准镜像上安装好httpd的包，然后在httpd提供文件服务的配置目录下，把需要对外提供的文件file1和file2拷贝过去，最后指定容器启动以后，需要自动启动的httpd服务。</p><p>有了这个镜像，我们希望容器启动后，就运行这个httpd服务，让用户可以下载file1还有file2这两个文件。</p><p>我们具体来看这个Dockerfile的每一行，第一个大写的词都是Dockerfile专门定义的指令，也就是 <code>FROM</code>、<code>RUN</code>、<code>COPY</code>、<code>ADD</code>、<code>CMD</code>，这些指令都很基础，所以我们不做详细解释了，你可以参考Dockerfile的<a href=\"https://docs.docker.com/engine/reference/builder/\">官方文档</a>。</p><p>我们写完这个Dockerfile之后，想要让它变成一个镜像，还需要执行一下 <code>docker build</code> 命令。</p><p>下面这个命令中 <code>-f ./Dockerfile</code> 指定Dockerfile文件，<code>-t registry/httpd:v1</code> 指定了生成出来的镜像名，它的格式是\"name:tag\"，这个镜像名也是后面启动容器需要用到的。</p><pre><code># docker build -t registry/httpd:v1 -f ./Dockerfile . \n</code></pre><p><code>docker build</code> 执行成功之后，我们再运行 <code>docker images</code> 这个命令，就可以看到生成的镜像了。</p><pre><code class=\"language-shell\"># docker images\nREPOSITORY  TAG   IMAGEID  CREATED   SIZE\nregistry/httpd  v1  c682fc3d4b9a  4 seconds ago  277MB\n</code></pre><h2>启动一个容器 (Container)</h2><p>做完一个镜像之后，你就可以用这个镜像来启动一个容器了，我们刚才做的镜像名字是 <code>registry/httpd:v1</code>，那么还是用 <code>docker run</code> 这个命令来启动容器。</p><pre><code># docker run -d registry/httpd:v1\n</code></pre><p>容器启动完成后，我们可以用 <code>docker ps</code> 命令来查看这个已经启动的容器：</p><pre><code class=\"language-shell\"># docker ps\nCONTAINER ID      IMAGE        COMMAND     CREATED       STATUS        PORTS               NAMES\nc5a9ff78d9c1        registry/httpd:v1   \"/sbin/httpd -D FORE…\"   2 seconds ago       Up 2 seconds                            loving_jackson\n</code></pre><p>在前面介绍Dockerfile的时候，我们说过做这个镜像是用来提供HTTP服务的，也就是让用户可以下载file1、file2这两个文件。</p><p>那怎样来验证我们建起来的容器是不是正常工作的呢？可以通过这两步来验证：</p><ul>\n<li>第一步，我们可以进入容器的运行空间，查看httpd服务是不是启动了，配置文件是不是正确的。</li>\n<li>第二步，对于HTTP文件服务，如果我们能用 <code>curl</code> 命令下载文件，就可以证明这个容器提供了我们预期的httpd服务。</li>\n</ul><p>我们先来做第一步验证，我们可以运行 <code>docker exec</code> 这个命令进入容器的运行空间，至于什么是容器的运行空间，它的标准说法是容器的命名空间（Namespace），这个概念我们等会儿再做介绍。</p><p>进入容器运行空间之后，我们怎么确认httpd的服务进程已经在容器里启动了呢？</p><p>我们运行下面这个 <code>docker exec</code> 命令，也就是执行 <code>docker exec c5a9ff78d9c1 ps -ef</code> ，可以看到httpd的服务进程正在容器的空间中运行。</p><pre><code class=\"language-shell\"># docker exec c5a9ff78d9c1 ps -ef\n\nUID        PID  PPID  C STIME TTY          TIME CMD\nroot         1     0  0 01:59 ?        00:00:00 /sbin/httpd -D FOREGROUND\napache       6     1  0 01:59 ?        00:00:00 /sbin/httpd -D FOREGROUND\napache       7     1  0 01:59 ?        00:00:00 /sbin/httpd -D FOREGROUND\napache       8     1  0 01:59 ?        00:00:00 /sbin/httpd -D FOREGROUND\napache       9     1  0 01:59 ?        00:00:00 /sbin/httpd -D FOREGROUND\n</code></pre><p>这里我解释一下，在这个 <code>docker exec</code> 后面紧跟着的ID表示容器的ID，这个ID就是我们之前运行 <code>docker ps</code> 查看过那个容器，容器的ID值是 <code>c5a9ff78d9c1</code> 。在这个ID值的后面，就是我们要在容器空间里运行的 <code>ps -ef</code> 命令。</p><p>接下来我们再来确认一下，httpd提供文件服务的目录中file1和file2文件是否存在。</p><p>我们同样可以用 <code>docker exec</code> 来查看一下容器的文件系统中，httpd提供文件服务的目录 <code>/var/www/html</code> 是否有这两个文件。</p><p>很好，我们可以看到file1、file2这两个文件也都放在指定目录中了。</p><pre><code># docker exec c5a9ff78d9c1 ls /var/www/html\nfile1\nfile2\n</code></pre><p>到这里我们完成了第一步的验证，进入到容器的运行空间里，验证了httpd服务已经启动，配置文件也是正确的。</p><p>那下面我们要做第二步的验证，用 <code>curl</code> 命令来验证是否可以从容器的httpd服务里下载到文件。</p><p>如果要访问httpd服务，我们就需要知道这个容器的IP地址。容器的网络空间也是独立的，有一个它自己的IP。我们还是可以用 <code>docker exec</code> 进入到容器的网络空间，查看一下这个容器的IP。</p><p>运行下面的这条 <code>docker exec c5a9ff78d9c1 ip addr</code> 命令，我们可以看到容器里网络接口eth0上配置的IP是 <code>172.17.0.2</code> 。</p><p>这个IP目前只能在容器的宿主机上访问，在别的机器上目前是不能访问的。关于容器网络的知识，我们会在后面的课程里介绍。</p><pre><code class=\"language-shell\"># docker exec c5a9ff78d9c1 ip addr\n\n1: lo: &lt;LOOPBACK,UP,LOWER_UP&gt; mtu 65536 qdisc noqueue state UNKNOWN group default qlen 1000\n\n    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00\n\n    inet 127.0.0.1/8 scope host lo\n\n       valid_lft forever preferred_lft forever\n\n168: eth0@if169: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc noqueue state UP group default\n\n    link/ether 02:42:ac:11:00:02 brd ff:ff:ff:ff:ff:ff link-netnsid 0\n\n    inet 172.17.0.2/16 brd 172.17.255.255 scope global eth0\n\n       valid_lft forever preferred_lft forever\n</code></pre><p>好了，获取了httpd服务的IP地址之后，我们随便下载一个文件试试，比如选file2。</p><p>我们在宿主机上运行 <code>curl</code> ，就可以下载这个文件了，操作如下。很好，文件下载成功了，这证明了我们这个提供httpd服务的容器正常运行了。</p><pre><code># curl -L -O http://172.17.0.2/file2\n  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\n\n                                 Dload  Upload   Total   Spent    Left  Speed\n\n100     6  100     6    0     0   1500      0 --:--:-- --:--:-- --:--:--  1500\n\n# ls\nfile2\n</code></pre><p>上面的步骤完成之后，我们的第二步验证，用 <code>curl</code> 下载httpd服务提供的文件也成功了。</p><p>好了，我们刚才自己做了容器镜像，用这个镜像启动了容器，并且用 <code>docker exec</code> 命令检查了容器运行空间里的进程、文件和网络设置。</p><p>通过这上面的这些操作练习，估计你已经初步感知到，容器的文件系统是独立的，运行的进程环境是独立的，网络的设置也是独立的。但是它们和宿主机上的文件系统，进程环境以及网络感觉都已经分开了。</p><p>我想和你说，这个感觉没错，的确是这样。我们刚才启动的容器，已经从宿主机环境里被分隔出来了，就像下面这张图里的描述一样。</p><p><img src=\"https://static001.geekbang.org/resource/image/4b/3a/4b67ff2f9070afbc2d0966464a67b83a.jpeg?wh=3200*1800\" alt=\"\"></p><p>从用户使用的角度来看，容器和一台独立的机器或者虚拟机没有什么太大的区别，但是它和虚拟机相比，却没有各种复杂的硬件虚拟层，没有独立的Linux内核。</p><p>容器所有的进程调度，内存访问，文件的读写都直接跑在宿主机的内核之上，这是怎么做到的呢？</p><h2>容器是什么</h2><p>要回答这个问题，你可以先记住这两个术语 <strong>Namespace和Cgroups</strong>。如果有人问你Linux上的容器是什么，最简单直接的回答就是Namesapce和Cgroups。Namespace和Cgroups可以让程序在一个资源可控的独立（隔离）环境中运行，这个就是容器了。</p><p>我们现在已经发现：容器的进程、网络还有文件系统都是独立的。那问题来了，容器的独立运行环境到底是怎么创造的呢？这就要提到Namespace这个概念了。所以接下来，就先从我们已经有点感觉的Namespace开始分析。</p><h3>Namespace</h3><p>接着前面的例子，我们正好有了一个正在运行的容器，那我们就拿这个运行的容器来看看Namespace到底是什么？</p><p>在前面我们运行 <code>docker exec c5a9ff78d9c1 ps -ef</code>，看到了5个httpd进程，而且也只有这5个进程。</p><pre><code class=\"language-shell\"># docker exec c5a9ff78d9c1 ps -ef\n\nUID        PID  PPID  C STIME TTY          TIME CMD\nroot         1     0  0 01:59 ?        00:00:00 /sbin/httpd -D FOREGROUND\napache       6     1  0 01:59 ?        00:00:00 /sbin/httpd -D FOREGROUND\napache       7     1  0 01:59 ?        00:00:00 /sbin/httpd -D FOREGROUND\napache       8     1  0 01:59 ?        00:00:00 /sbin/httpd -D FOREGROUND\napache       9     1  0 01:59 ?        00:00:00 /sbin/httpd -D FOREGROUND\n</code></pre><p>如果我们不用 <code>docker exec</code>，直接在宿主机上运行 ps -ef，就会看到很多进程。如果我们运行一下 <code>grep httpd</code> ，同样可以看到这5个httpd的进程：</p><pre><code class=\"language-shell\"># ps -ef | grep httpd\n\nUID        PID  PPID  C STIME TTY          TIME CMD\nroot     20731 20684  0 18:59 ?        00:00:01 /sbin/httpd -D FOREGROUND\n48       20787 20731  0 18:59 ?        00:00:00 /sbin/httpd -D FOREGROUND\n48       20788 20731  0 18:59 ?        00:00:06 /sbin/httpd -D FOREGROUND\n48       20789 20731  0 18:59 ?        00:00:05 /sbin/httpd -D FOREGROUND\n48       20791 20731  0 18:59 ?        00:00:05 /sbin/httpd -D FOREGROUN\n</code></pre><p>这两组输出结果到底有什么差别呢，你可以仔细做个对比，最大的不同就是<strong>进程的PID不一样。</strong>那为什么PID会不同呢？或者说，运行 <code>docker exec c5a9ff78d9c1 ps -ef</code> 和 <code>ps -ef</code> 实质的区别在哪里呢？</p><p>如果理解了PID为何不同，我们就能搞清楚Linux Namespace的概念了，为了方便后文的讲解，我们先用下面这张图来梳理一下我们看到的PID。</p><p><img src=\"https://static001.geekbang.org/resource/image/88/7a/888c00e0e8fe40edce3f1a9f6yye717a.jpeg?wh=3200*1800\" alt=\"\"></p><p>Linux在创建容器的时候，就会建出一个PID Namespace，PID其实就是进程的编号。这个PID Namespace，就是指每建立出一个Namespace，就会单独对进程进行PID编号，每个Namespace的PID编号都从1开始。</p><p>同时在这个PID Namespace中也只能看到Namespace中的进程，而且看不到其他Namespace里的进程。</p><p>这也就是说，如果有另外一个容器，那么它也有自己的一个PID Namespace，而这两个PID Namespace之间是不能看到对方的进程的，这里就体现出了Namespace的作用：<strong>相互隔离</strong>。</p><p>而在宿主机上的Host PID Namespace，它是其他Namespace的父亲Namespace，可以看到在这台机器上的所有进程，不过进程PID编号不是Container PID Namespace里的编号了，而是把所有在宿主机运行的进程放在一起，再进行编号。</p><p>讲了PID Namespace之后，我们了解到 <strong>Namespace其实就是一种隔离机制，主要目的是隔离运行在同一个宿主机上的容器，让这些容器之间不能访问彼此的资源。</strong></p><p>这种隔离有两个作用：<strong>第一是可以充分地利用系统的资源，也就是说在同一台宿主机上可以运行多个用户的容器；第二是保证了安全性，因为不同用户之间不能访问对方的资源。</strong></p><p>除了PID Namespace，还有其他常见的Namespace类型，比如我们之前运行了 <code>docker exec c5a9ff78d9c1 ip addr</code> 这个命令去查看容器内部的IP地址，这里其实就是在查看Network Namespace。</p><p>在Network Namespace中都有一套独立的网络接口比如这里的lo，eth0，还有独立的TCP/IP的协议栈配置。</p><pre><code class=\"language-shell\"># docker exec c5a9ff78d9c1 ip addr\n1: lo: &lt;LOOPBACK,UP,LOWER_UP&gt; mtu 65536 qdisc noqueue state UNKNOWN group default qlen 1000\n    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00\n    inet 127.0.0.1/8 scope host lo\n       valid_lft forever preferred_lft forever\n\n168: eth0@if169: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc noqueue state UP group default\n    link/ether 02:42:ac:11:00:02 brd ff:ff:ff:ff:ff:ff link-netnsid 0\n    inet 172.17.0.2/16 brd 172.17.255.255 scope global eth0\n       valid_lft forever preferred_lft forever\n</code></pre><p>我们还可以运行 <code>docker exec c5a9ff78d9c1 ls/</code> 查看容器中的根文件系统（rootfs）。然后，你会发现，它和宿主机上的根文件系统也是不一样的。<strong>容器中的根文件系统，其实就是我们做的镜像。</strong></p><p>那容器自己的根文件系统完全独立于宿主机上的根文件系统，这一点是怎么做到的呢？其实这里依靠的是<strong>Mount Namespace</strong>，Mount Namespace保证了每个容器都有自己独立的文件目录结构。</p><p>Namespace的类型还有很多，我们查看\"Linux Programmer's Manual\"，可以看到Linux中所有的Namespace：cgroup/ipc/network/mount/pid/time/user/uts。</p><p>在这里呢，你需要记住的是 <strong>Namespace 是Linux中实现容器的两大技术之一，它最重要的作用是保证资源的隔离。</strong>在后面的课程，讲解到具体问题时，我会不断地提到Namespace这个概念。</p><p><img src=\"https://static001.geekbang.org/resource/image/5b/d2/5bbf4ac2fa9f81066732yy6f6202b8d2.jpg?wh=7301*2905\" alt=\"\"></p><p>好了，我们刚才说了Namespace，这些Namespace尽管类型不同，其实都是为了隔离容器资源：<strong>PID Namespace负责隔离不同容器的进程，Network Namespace又负责管理网络环境的隔离，Mount Namespace管理文件系统的隔离。</strong></p><p>正是通过这些Namespace，我们才隔离出一个容器，这里你也可以把它看作是一台“计算机”。</p><p>既然是一台“计算机”，你肯定会问这个“计算机”有多少CPU，有多少Memory啊？那么Linux如何为这些“计算机”来定义CPU，定义Memory的容量呢？</p><h3>Cgroups</h3><p>想要定义“计算机”各种容量大小，就涉及到支撑容器的第二个技术<strong>Cgroups （Control Groups）</strong>了。Cgroups可以对指定的进程做各种计算机资源的限制，比如限制CPU的使用率，内存使用量，IO设备的流量等等。</p><p>Cgroups究竟有什么好处呢？要知道，在Cgroups出现之前，任意一个进程都可以创建出成百上千个线程，可以轻易地消耗完一台计算机的所有CPU资源和内存资源。</p><p>但是有了Cgroups这个技术以后，我们就可以对一个进程或者一组进程的计算机资源的消耗进行限制了。</p><p>Cgroups通过不同的子系统限制了不同的资源，每个子系统限制一种资源。每个子系统限制资源的方式都是类似的，就是把相关的一组进程分配到一个控制组里，然后通过<strong>树结构</strong>进行管理，每个控制组都设有自己的资源控制参数。</p><p>完整的Cgroups子系统的介绍，你可以查看<a href=\"https://man7.org/linux/man-pages/man7/cgroups.7.html\">Linux Programmer's Manual</a> 中Cgroups的定义。</p><p>这里呢，我们只需要了解几种比较常用的Cgroups子系统：</p><ul>\n<li>CPU子系统，用来限制一个控制组（一组进程，你可以理解为一个容器里所有的进程）可使用的最大CPU。</li>\n<li>memory子系统，用来限制一个控制组最大的内存使用量。</li>\n<li>pids子系统，用来限制一个控制组里最多可以运行多少个进程。</li>\n<li>cpuset子系统， 这个子系统来限制一个控制组里的进程可以在哪几个物理CPU上运行。</li>\n</ul><p>因为memory子系统的限制参数最简单，所以下面我们就用memory子系统为例，一起看看Cgroups是怎么对一个容器做资源限制的。</p><p>对于启动的每个容器，都会在Cgroups子系统下建立一个目录，在Cgroups中这个目录也被称作控制组，比如下图里的\"docker-&lt;id1&gt;\"\"docker-&lt;id2&gt;\"等。然后我们设置这个控制组的参数，通过这个方式，来限制这个容器的内存资源。</p><p><img src=\"https://static001.geekbang.org/resource/image/61/63/6193bba2757e5cc34bb023b13cac7663.jpeg?wh=3200*1800\" alt=\"\"></p><p>还记得，我们之前用Docker创建的那个容器吗？在每个Cgroups子系统下，对应这个容器就会有一个目录docker-<strong>c5a9ff78d9c1……</strong>这个容器的ID号，容器中所有的进程都会储存在这个控制组中  cgroup.procs 这个参数里。</p><p>你看下面的这些进程号是不是很熟悉呢？没错，它们就是前面我们用ps看到的进程号。</p><p>我们实际看一下这个例子里的memory Cgroups，它可以控制Memory的使用量。比如说，我们将这个控制组Memory的最大用量设置为2GB。</p><p>具体操作是这样的，我们把（2* 1024 * 1024 * 1024 = 2147483648）这个值，写入memory Cgroup控制组中的memory.limit_in_bytes里，<strong>这样设置后，cgroup.procs里面所有进程Memory使用量之和，最大也不会超过2GB。</strong></p><pre><code class=\"language-shell\"># cd /sys/fs/cgroup/memory/system.slice/docker-c5a9ff78d9c1fedd52511e18fdbd26357250719fa0d128349547a50fad7c5de9.scope\n\n\n# cat cgroup.procs\n20731\n20787\n20788\n20789\n20791\n\n# echo 2147483648 &gt; memory.limit_in_bytes\n# cat memory.limit_in_bytes\n2147483648\n</code></pre><p>刚刚我们通过memory Cgroups定义了容器的memory可以使用的最大值。其他的子系统稍微复杂一些，但用法也和memory类似，我们在后面的课程中会结合具体的实例来详细解释其他的Cgroups。</p><p>这里我们还要提一下 <strong>Cgroups有v1和v2两个版本</strong>：</p><p>Cgroups v1在Linux中很早就实现了，各种子系统比较独立，每个进程在各个Cgroups子系统中独立配置，可以属于不同的group。</p><p>虽然这样比较灵活，但是也存在问题，会导致对<strong>同一进程的资源协调比较困难</strong>（比如memory Cgroup与blkio Cgroup之间就不能协作）。虽然v1有缺陷，但是在主流的生产环境中，大部分使用的还是v1。</p><p>Cgroups v2 做了设计改进，<strong>解决了v1的问题，使各个子系统可以协调统一地管理资源。</strong></p><p>不过Cgroups v2在生产环境的应用还很少，因为该版本很多子系统的实现需要较新版本的Linux内核，还有无论是主流的Linux发行版本还是容器云平台，比如Kubernetes，对v2的支持也刚刚起步。</p><p>所以啊，我们在后面Cgroups的讲解里呢，主要还是用 <strong>Cgroups v1这个版本</strong>，在磁盘I/O的这一章中，我们也会介绍一下Cgroups v2。</p><p>好了，上面我们解读了Namespace和Cgroups两大技术，它们是Linux下实现容器的两个基石，后面课程中要讨论的容器相关问题，或多或少都和Namespace或者Cgroups相关，我们会结合具体问题做深入的分析。</p><p>目前呢，你只需要先记住这两个技术的作用，<strong>Namespace帮助容器来实现各种计算资源的隔离，Cgroups主要限制的是容器能够使用的某种资源量。</strong></p><h2>重点总结</h2><p>这一讲，我们对容器有了一个大致的认识，包括它的“形”，<strong>一些基本的容器操作</strong>；还有它的“神”，也就是<strong>容器实现的原理</strong>。</p><p>启动容器的基本操作是这样的，首先用Dockerfile来建立一个容器的镜像，然后再用这个镜像来启动一个容器。</p><p>那启动了容器之后，怎么检验它是不是正常工作了呢？</p><p>我们可以运行 <code>docker exec</code> 这个命令进入容器的运行空间，查看进程是否启动，检查配置文件是否正确，检验我们设置的服务是否能够正常提供。</p><p>我们用 <code>docker exec</code> 命令查看了容器的进程，网络和文件系统，就能体会到容器的文件系统、运行的进程环境和网络的设置都是独立的，所以从用户使用的角度看，容器和一台独立的机器或者虚拟机没有什么太大的区别。</p><p>最后，我们一起学习了Namespace和Cgroups，它们是Linux的两大技术，用于实现容器的特性。</p><p>具体来说，<strong>Namespace帮助容器实现各种计算资源的隔离，Cgroups主要对容器使用某种资源量的多少做一个限制。</strong></p><p>所以我们在这里可以直接记住：<strong>容器其实就是Namespace+Cgroups。</strong></p><h2>思考题</h2><p>用Dockerfile为你最熟悉的应用程序做个镜像，然后用Docker命令启动这个容器。</p><p>欢迎在留言区分享你的疑惑和见解。你也可以把今天的内容分享给你的朋友，和他一起学习和进步。</p>","neighbors":{"left":{"article_title":"开篇词 | 一个态度两个步骤，成为容器实战高手","id":308078},"right":{"article_title":"02 | 理解进程（1）：为什么我在容器中不能kill 1号进程？","id":309423}},"comments":[{"had_liked":false,"id":292533,"user_name":"leslie","can_delete":false,"product_type":"c1","uid":1324255,"ip_address":"","ucode":"798E7C1CC98CC2","user_header":"https://static001.geekbang.org/account/avatar/00/14/34/df/64e3d533.jpg","comment_is_top":true,"comment_ctime":1620873139,"is_pvip":false,"replies":[{"id":"110964","content":"感谢你的肯定。","user_name":"作者回复","user_name_real":"听水的湖","uid":"1501385","ctime":1628591575,"ip_address":"","comment_id":292533,"utype":1}],"discussion_count":1,"race_medal":0,"score":"9.2233720771303997e+18","product_id":100063801,"comment_content":"透彻，之前被人问过，资料方面同样查过，架构同样明了，如此通俗明了-难得。","like_count":9,"discussions":[{"author":{"id":1501385,"avatar":"https://static001.geekbang.org/account/avatar/00/16/e8/c9/59bcd490.jpg","nickname":"听水的湖","note":"","ucode":"B1759F90165D81","race_medal":0,"user_type":8,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":519867,"discussion_content":"感谢你的肯定。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1628591575,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":4}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":262166,"user_name":"那时刻","can_delete":false,"product_type":"c1","uid":1150927,"ip_address":"","ucode":"B0D150856C3A4A","user_header":"https://static001.geekbang.org/account/avatar/00/11/8f/cf/890f82d6.jpg","comment_is_top":false,"comment_ctime":1605632669,"is_pvip":false,"replies":[{"id":"95172","content":"@那时刻，<br><br>这种情况，如果A1&#47;A2, B1&#47;B2 都运行在自己的cgroup limit之内，那么需要先从两个宿主机的整体情况先做一个比较，从硬件类型开始，OS版本， 宿主机上的其他负载的情况，如果这些都一样，那么可以对A1&#47;A2, B1&#47;B2做perf看看热点函数。","user_name":"作者回复","user_name_real":"CY","uid":"2070138","ctime":1605706185,"ip_address":"","comment_id":262166,"utype":1}],"discussion_count":1,"race_medal":0,"score":"100389880477","product_id":100063801,"comment_content":"求教老师一个问题，我们有三个服务A B C部署在K8S里，它们各自设置了resouce limit(cpu, memory)，其中恰好 A1 B1 C1被分配到同一个node上，A2 B2分配到另外一个node上。流量经过load balance之后打到 A1 A2和 B1 B2各自是均匀的，但是A1 B1使用的cpu 占比相对于 A2 B2要高出5% ~ 6%。我认为尽管docker通过namespace和cgroups来隔离和限制使用的资源，但是对于宿主机而言，各个docker实例之间还是存在竞争cpu和memory的，不知这么理解是否正确？","like_count":23,"discussions":[{"author":{"id":2070138,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/96/7a/8a14d008.jpg","nickname":"CY","note":"","ucode":"4AF98230985918","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":509714,"discussion_content":"@那时刻，\n\n这种情况，如果A1/A2, B1/B2 都运行在自己的cgroup limit之内，那么需要先从两个宿主机的整体情况先做一个比较，从硬件类型开始，OS版本， 宿主机上的其他负载的情况，如果这些都一样，那么可以对A1/A2, B1/B2做perf看看热点函数。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1605706185,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":261865,"user_name":"JianXu","can_delete":false,"product_type":"c1","uid":1033219,"ip_address":"","ucode":"2A61BDBB573BDC","user_header":"https://static001.geekbang.org/account/avatar/00/0f/c4/03/f753fda7.jpg","comment_is_top":false,"comment_ctime":1605541001,"is_pvip":false,"replies":[{"id":"95059","content":"containerd 启动当容器的时候先会启动一个shim, 然后由shim运行runc去创建container. 这样相当于一个shim来管理一个container. shim作为container的“父进程”, 接管了容器的stdin&#47;stdout, containerd服务出问题，不会影响到用户的container。","user_name":"作者回复","user_name_real":"CY","uid":"2070138","ctime":1605576206,"ip_address":"","comment_id":261865,"utype":1}],"discussion_count":4,"race_medal":0,"score":"53145148553","product_id":100063801,"comment_content":"老师，能帮忙扫盲一下 PID namespace 那张图里 的shim 吗？为什么要使用Shim 呢？","like_count":12,"discussions":[{"author":{"id":2070138,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/96/7a/8a14d008.jpg","nickname":"CY","note":"","ucode":"4AF98230985918","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":509647,"discussion_content":"containerd 启动当容器的时候先会启动一个shim, 然后由shim运行runc去创建container. 这样相当于一个shim来管理一个container. shim作为container的“父进程”, 接管了容器的stdin/stdout, containerd服务出问题，不会影响到用户的container。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1605576206,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1070043,"avatar":"https://static001.geekbang.org/account/avatar/00/10/53/db/858337e3.jpg","nickname":"Ethan Liu","note":"","ucode":"231F944F7CD56A","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":327603,"discussion_content":"我的理解是父进程挂了，子进程也可以继续运行，孤儿进程不就是这样吗，都交给init进程来管理","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1605871527,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1809160,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/9b/08/27ac7ecd.jpg","nickname":"水蒸蛋","note":"","ucode":"6F7F853A4BF901","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":326326,"discussion_content":"老师由containerd启动shim，那么containerd不是shim都父进程吗，为什么containerd挂了不会影响shim？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1605579136,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1580926,"avatar":"","nickname":"ch_ort","note":"","ucode":"B79746E687F29E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1809160,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/9b/08/27ac7ecd.jpg","nickname":"水蒸蛋","note":"","ucode":"6F7F853A4BF901","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":546501,"discussion_content":"都是不同的shim进程啊","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1642324007,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":326326,"ip_address":""},"score":546501,"extra":""}]}]},{"had_liked":false,"id":269209,"user_name":"Richur","can_delete":false,"product_type":"c1","uid":2120008,"ip_address":"","ucode":"C9D630559A4E73","user_header":"https://static001.geekbang.org/account/avatar/00/20/59/48/f544983b.jpg","comment_is_top":false,"comment_ctime":1608557393,"is_pvip":false,"replies":[{"id":"97712","content":"containerd会先向容器中的init进程发送SIGTERM，如果init进程注册了SIGTERM handler(并且handler让进程退出了）那么整个容器就退出了，如果容器的init进程没有注册SIGTERM, 那么过30秒， containerd再向容器的init进程发送SIGKILL.","user_name":"作者回复","user_name_real":"CY","uid":"2070138","ctime":1608650964,"ip_address":"","comment_id":269209,"utype":1}],"discussion_count":3,"race_medal":0,"score":"40263263057","product_id":100063801,"comment_content":"老师好，求教一个问题，docker stop containerId，容器中的进程是如何退出的，是kill pid，kill -15 pid 还是kill -9 pid 亦或是其他？","like_count":9,"discussions":[{"author":{"id":2070138,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/96/7a/8a14d008.jpg","nickname":"CY","note":"","ucode":"4AF98230985918","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":512192,"discussion_content":"containerd会先向容器中的init进程发送SIGTERM，如果init进程注册了SIGTERM handler(并且handler让进程退出了）那么整个容器就退出了，如果容器的init进程没有注册SIGTERM, 那么过30秒， containerd再向容器的init进程发送SIGKILL.","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1608650964,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1580926,"avatar":"","nickname":"ch_ort","note":"","ucode":"B79746E687F29E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":574226,"discussion_content":"1 号进程永远不会响应 SIGKILL（kill -9）","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1653915088,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1286588,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a1/bc/ef0f26fa.jpg","nickname":"首富手记","note":"","ucode":"879DED4078303C","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":384639,"discussion_content":"默认的不是10s 吗？ ","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1626685323,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":267530,"user_name":"MYG","can_delete":false,"product_type":"c1","uid":1670483,"ip_address":"","ucode":"B8EF7BA8F22ABB","user_header":"https://static001.geekbang.org/account/avatar/00/19/7d/53/7a0399a4.jpg","comment_is_top":false,"comment_ctime":1607789213,"is_pvip":false,"replies":[{"id":"97317","content":"@MYG, 你的系统上应该还是Cgroup V1.<br>试试这样找一下：<br># docker inspect 4d3cf63512a2 | grep \\&quot;Pid\\&quot;<br>            &quot;Pid&quot;: 4384,<br># cat &#47;proc&#47;4384&#47;cgroup | grep memory<br>5:memory:&#47;system.slice&#47;docker-4d3cf63512a2b89c0982724a6c12cb9b69781676aa93ab4fb2060f47908c6b94.scope","user_name":"作者回复","user_name_real":"CY","uid":"2070138","ctime":1608040216,"ip_address":"","comment_id":267530,"utype":1}],"discussion_count":2,"race_medal":0,"score":"35967527581","product_id":100063801,"comment_content":"我在macOS下用multipass启动Ubuntu 20.04的VM，貌似已经升级到了containerd-shim-runc-v2，同时在&#47;sys&#47;fs&#47;cgroup&#47;memory&#47;system.slice下也找不到每个container的子目录了，请问在哪里能找到呢？还是v2的设计完全不一样了？谢谢🙏","like_count":8,"discussions":[{"author":{"id":2070138,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/96/7a/8a14d008.jpg","nickname":"CY","note":"","ucode":"4AF98230985918","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":511671,"discussion_content":"@MYG, 你的系统上应该还是Cgroup V1.\n试试这样找一下：\n# docker inspect 4d3cf63512a2 | grep \\&amp;quot;Pid\\&amp;quot;\n            &amp;quot;Pid&amp;quot;: 4384,\n# cat /proc/4384/cgroup | grep memory\n5:memory:/system.slice/docker-4d3cf63512a2b89c0982724a6c12cb9b69781676aa93ab4fb2060f47908c6b94.scope","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1608040216,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1202465,"avatar":"https://static001.geekbang.org/account/avatar/00/12/59/21/d2efde18.jpg","nickname":"布凡","note":"","ucode":"346FCD332F8BFA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":579827,"discussion_content":"请问老师，Ggroup V2是/docker/{id} 这样格式吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1657704220,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":261789,"user_name":"heihei","can_delete":false,"product_type":"c1","uid":1914146,"ip_address":"","ucode":"1AD89888AA36C4","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/L2iccnuficX53DnwPoeVAVkYa8Tb7zuXOweYR9aERiamV1aTT7ANPA6GWdPM4wic7p2b8FdYy8j1GEvypMvOwM5w6w/132","comment_is_top":false,"comment_ctime":1605524577,"is_pvip":true,"discussion_count":2,"race_medal":0,"score":"31670295649","product_id":100063801,"comment_content":"第一节就22分钟，我傻了，老师也太实在了😂","like_count":7,"discussions":[{"author":{"id":2326747,"avatar":"https://static001.geekbang.org/account/avatar/00/23/80/db/2e5e27e6.jpg","nickname":"Michael Dong ²⁰¹⁸","note":"","ucode":"B3EB15FB6D9366","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":327271,"discussion_content":"FROM centos:8.1.1911 , 我的系统是Redhat 7.6这里应该如何写？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1605779310,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":2061524,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/74/d4/38d813f0.jpg","nickname":"Kerry","note":"","ucode":"92F809EC998FC6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2326747,"avatar":"https://static001.geekbang.org/account/avatar/00/23/80/db/2e5e27e6.jpg","nickname":"Michael Dong ²⁰¹⁸","note":"","ucode":"B3EB15FB6D9366","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":390086,"discussion_content":"跟你宿主机是什么版本没有关系，这条语句是指定镜像的系统版本。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1629645671,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":327271,"ip_address":""},"score":390086,"extra":""}]}]},{"had_liked":false,"id":261831,"user_name":"上邪忘川","can_delete":false,"product_type":"c1","uid":1276588,"ip_address":"","ucode":"1C4459917B038D","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIz9dKN1C8rKQoaVtmEGdzObhlia6zAfTsPYOm4ibz39VjTbu7Aia1LyeedHR26b6nxUtcCufpichcYgw/132","comment_is_top":false,"comment_ctime":1605533406,"is_pvip":false,"replies":[{"id":"95068","content":"@上邪忘川,<br>请问一下, 你是否是通过systemd来启动dockerd的？<br><br>容器在cgroup下的目录树结构会受容器管理平台的影响。","user_name":"作者回复","user_name_real":"CY","uid":"2070138","ctime":1605586198,"ip_address":"","comment_id":261831,"utype":1}],"discussion_count":5,"race_medal":0,"score":"27375337182","product_id":100063801,"comment_content":"centos7.4测试，docker在cgroup下的目录为&#47;sys&#47;fs&#47;cgroup&#47;memory&#47;docker&#47;40152218ccc9d2bcda0e146efdfed871a78480712cb9675404af800c2e812ea9&#47;","like_count":6,"discussions":[{"author":{"id":2070138,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/96/7a/8a14d008.jpg","nickname":"CY","note":"","ucode":"4AF98230985918","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":509626,"discussion_content":"@上邪忘川,\n请问一下, 你是否是通过systemd来启动dockerd的？\n\n容器在cgroup下的目录树结构会受容器管理平台的影响。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1605586198,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1044517,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/f0/25/d3da7ca9.jpg","nickname":"wuyang","note":"","ucode":"81000322FF96A7","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":403495,"discussion_content":"可以的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1634090658,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2324099,"avatar":"https://static001.geekbang.org/account/avatar/00/23/76/83/5f9959c2.jpg","nickname":"阿瞒","note":"","ucode":"DF296A70D9A017","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":326692,"discussion_content":"docker 是 用sytemd启动的，目录也是 cgroup/memory/docker 下面 ，系统centos7.6 内核 5.1.12-1.el7 ，docker的程序用 composefile 启动的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1605663673,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1276588,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIz9dKN1C8rKQoaVtmEGdzObhlia6zAfTsPYOm4ibz39VjTbu7Aia1LyeedHR26b6nxUtcCufpichcYgw/132","nickname":"上邪忘川","note":"","ucode":"1C4459917B038D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":326442,"discussion_content":"是的，了解了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1605595636,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1012816,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/74/50/59d429c9.jpg","nickname":"MiracleWong","note":"","ucode":"05233774710AFE","race_medal":1,"user_type":1,"is_pvip":true},"reply_author":{"id":1276588,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIz9dKN1C8rKQoaVtmEGdzObhlia6zAfTsPYOm4ibz39VjTbu7Aia1LyeedHR26b6nxUtcCufpichcYgw/132","nickname":"上邪忘川","note":"","ucode":"1C4459917B038D","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":372300,"discussion_content":"感谢，同为CentOS 7.4 根据你的提示成功找到","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1620279708,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":326442,"ip_address":""},"score":372300,"extra":""}]}]},{"had_liked":false,"id":261867,"user_name":"朱雯","can_delete":false,"product_type":"c1","uid":1035744,"ip_address":"","ucode":"064C45FBF6B51F","user_header":"https://static001.geekbang.org/account/avatar/00/0f/cd/e0/c85bb948.jpg","comment_is_top":false,"comment_ctime":1605542553,"is_pvip":true,"replies":[{"id":"95070","content":"1. 把容器当成虚拟机使用，可以是容器化过程中的一个过渡方案，但是长期的方向是native的方式来使用容器。<br>2. 我不清楚你具体修改的是哪个kernel参数，不过对于资源的限制比如cgroup, 或者xfs quota, 这些都是Linux 内核中的特性，所以有时候就需要在grub中对内核的启动参数做修改。<br>3. 这个没有什么问题。<br>4. 这个就需要用cgroup做限制了， 我在后面的课程里有很多这方面的介绍。","user_name":"作者回复","user_name_real":"CY","uid":"2070138","ctime":1605586838,"ip_address":"","comment_id":261867,"utype":1}],"discussion_count":3,"race_medal":0,"score":"23080379033","product_id":100063801,"comment_content":"老师好 1.我们现在对docker容器的使用就如同虚拟机一样 一个容器运行多个进程 但是我听说docker是天生是单进程的 是否需要改造  2.之前在某次创建docker容器时 要设置资源控制好像必须修改grub的某个配置 不配置就真的无法限制 这是啥原理 3. 容器使用过程中 其实我大多数时候的交互方式是-it binbash的方式 当成虚拟机来用 这样是否有问题 4. 我们现在的环境 其实并没有做过多限制 容器之间相互干扰和影响 要设置限制 然后平滑的设置限制有没有好的方法 ","like_count":5,"discussions":[{"author":{"id":2070138,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/96/7a/8a14d008.jpg","nickname":"CY","note":"","ucode":"4AF98230985918","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":509648,"discussion_content":"1. 把容器当成虚拟机使用，可以是容器化过程中的一个过渡方案，但是长期的方向是native的方式来使用容器。\n2. 我不清楚你具体修改的是哪个kernel参数，不过对于资源的限制比如cgroup, 或者xfs quota, 这些都是Linux 内核中的特性，所以有时候就需要在grub中对内核的启动参数做修改。\n3. 这个没有什么问题。\n4. 这个就需要用cgroup做限制了， 我在后面的课程里有很多这方面的介绍。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1605586838,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1615156,"avatar":"https://static001.geekbang.org/account/avatar/00/18/a5/34/6e3e962f.jpg","nickname":"yayiyaya","note":"","ucode":"38532C740FA186","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":326347,"discussion_content":"需要改造。 容器是一个“单进程”模型，就是希望容器和应用能够同生命周期，就是为了防止容器是正常运行的，但是里面的应用早已经挂了。  \n我觉得对容器的使用还是要通过容器编排去做，如kubernetes。","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1605582464,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1006609,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/5c/11/7198f98e.jpg","nickname":"龙堂修罗","note":"","ucode":"0F51D4A20C3D71","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":327427,"discussion_content":"把容器当成虚拟机使用，可以是容器化过程中的一个过渡方案，但是长期的方向是native的方式来使用容器\n\n这是为啥呢？？？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1605836049,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":268554,"user_name":"Action","can_delete":false,"product_type":"c1","uid":1239234,"ip_address":"","ucode":"FFFD1537C6BB3C","user_header":"https://static001.geekbang.org/account/avatar/00/12/e8/c2/77a413a7.jpg","comment_is_top":false,"comment_ctime":1608256074,"is_pvip":false,"replies":[{"id":"97560","content":"containerd是宿主机上的一个守护进程，用来建立容器。每建立一个容器，就会有一个shim进程，它是容器中init进程的父进程。","user_name":"作者回复","user_name_real":"CY","uid":"2070138","ctime":1608474431,"ip_address":"","comment_id":268554,"utype":1}],"discussion_count":1,"race_medal":0,"score":"18788125258","product_id":100063801,"comment_content":"&quot;Host PID Namespace，它是其他 Namespace 的父亲 Namespace&quot; 其中我看图中有containerd的pid 和shim的pid分别代表什么呀？这些是怎么关联起来的呢？","like_count":4,"discussions":[{"author":{"id":2070138,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/96/7a/8a14d008.jpg","nickname":"CY","note":"","ucode":"4AF98230985918","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":511968,"discussion_content":"containerd是宿主机上的一个守护进程，用来建立容器。每建立一个容器，就会有一个shim进程，它是容器中init进程的父进程。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1608474431,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":262882,"user_name":"conanforever22","can_delete":false,"product_type":"c1","uid":1285725,"ip_address":"","ucode":"CB283E020DA51A","user_header":"https://static001.geekbang.org/account/avatar/00/13/9e/5d/b02bce4c.jpg","comment_is_top":false,"comment_ctime":1605868188,"is_pvip":false,"replies":[{"id":"95366","content":"docker base image, 拿centos为例子，可以建一个目录，让后把需要的rpm 安装在这个目录下面，然后把目录打成一个tarball, 用docker import成为一个base image.<br><br><br>https:&#47;&#47;github.com&#47;moby&#47;moby&#47;blob&#47;master&#47;contrib&#47;mkimage-yum.sh","user_name":"作者回复","user_name_real":"CY","uid":"2070138","ctime":1605876671,"ip_address":"","comment_id":262882,"utype":1}],"discussion_count":2,"race_medal":0,"score":"18785737372","product_id":100063801,"comment_content":"有个疑问, dockerfile中FROM后边的基础镜像应该怎么做？","like_count":4,"discussions":[{"author":{"id":2070138,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/96/7a/8a14d008.jpg","nickname":"CY","note":"","ucode":"4AF98230985918","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":510016,"discussion_content":"docker base image, 拿centos为例子，可以建一个目录，让后把需要的rpm 安装在这个目录下面，然后把目录打成一个tarball, 用docker import成为一个base image.\n\n\nhttps://github.com/moby/moby/blob/master/contrib/mkimage-yum.sh","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1605876671,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1285725,"avatar":"https://static001.geekbang.org/account/avatar/00/13/9e/5d/b02bce4c.jpg","nickname":"conanforever22","note":"","ucode":"CB283E020DA51A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":327807,"discussion_content":"感谢李老师解答这个长久以来的疑问, 这个base image原来也是这么朴素的方式做出来的, 之前还有一种鸡生蛋和蛋生机的困惑, 原来并不是只有dockerfile一种做镜像的方式, 镜像的本质还是文件","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1605957084,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":261822,"user_name":"JianXu","can_delete":false,"product_type":"c1","uid":1033219,"ip_address":"","ucode":"2A61BDBB573BDC","user_header":"https://static001.geekbang.org/account/avatar/00/0f/c4/03/f753fda7.jpg","comment_is_top":false,"comment_ctime":1605531927,"is_pvip":false,"replies":[{"id":"95033","content":"<br>&gt; 老师能展开介绍一下为什么 memory cgroup 和 blkio cgroup 不能协作的问题吗？为什么cgroup v2 就可以了呢？<br><br>这一部分我在第13讲&quot;容器磁盘限速里&quot; 会详细的解释。<br><br>cgroup v1 blkio 可以对 Direct I&#47;O做限流。<br>cgroup v1 net_cls 配合 tc 可以对网络限流。<br><br>cgroup v2 io + memory 一起可以对 Direct I&#47;O 和 Buffered I&#47;O做限流，但是不支持xfs<br>","user_name":"作者回复","user_name_real":"CY","uid":"2070138","ctime":1605539804,"ip_address":"","comment_id":261822,"utype":1}],"discussion_count":1,"race_medal":0,"score":"18785401111","product_id":100063801,"comment_content":"”会导致对同一进程的资源协调比较困难，比如 memory Cgroup 与 blkio Cgroup 之间就不能协作“ --&gt; CY 老师能展开介绍一下为什么 memory cgroup 和 blkio cgroup 不能协作的问题吗？为什么cgroup v2 就可以了呢？<br><br>另外，cgroup v1 可以管理disk IO 和 network IO 吗？那 cgroup v2 呢","like_count":4,"discussions":[{"author":{"id":2070138,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/96/7a/8a14d008.jpg","nickname":"CY","note":"","ucode":"4AF98230985918","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":509621,"discussion_content":"\n&amp;gt; 老师能展开介绍一下为什么 memory cgroup 和 blkio cgroup 不能协作的问题吗？为什么cgroup v2 就可以了呢？\n\n这一部分我在第13讲&amp;quot;容器磁盘限速里&amp;quot; 会详细的解释。\n\ncgroup v1 blkio 可以对 Direct I/O做限流。\ncgroup v1 net_cls 配合 tc 可以对网络限流。\n\ncgroup v2 io + memory 一起可以对 Direct I/O 和 Buffered I/O做限流，但是不支持xfs\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1605539804,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":278457,"user_name":"布凡","can_delete":false,"product_type":"c1","uid":1202465,"ip_address":"","ucode":"346FCD332F8BFA","user_header":"https://static001.geekbang.org/account/avatar/00/12/59/21/d2efde18.jpg","comment_is_top":false,"comment_ctime":1612949758,"is_pvip":false,"replies":[{"id":"101349","content":"@布凡， 赞！ 操作很重要！","user_name":"作者回复","user_name_real":"CY","uid":"2070138","ctime":1613402524,"ip_address":"","comment_id":278457,"utype":1}],"discussion_count":1,"race_medal":0,"score":"14497851646","product_id":100063801,"comment_content":"哇，老师的课程真的是干货满满，这样一节课让Linux新手的我整整操作了一下午，顺便又属性了下Linux下命令的各做操作，给老师点赞，也给自己加油o(*￣▽￣*)ブ！","like_count":3,"discussions":[{"author":{"id":2070138,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/96/7a/8a14d008.jpg","nickname":"CY","note":"","ucode":"4AF98230985918","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":515387,"discussion_content":"@布凡， 赞！ 操作很重要！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1613402524,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":262262,"user_name":"海盗船长","can_delete":false,"product_type":"c1","uid":1363634,"ip_address":"","ucode":"ECB28BA21A4113","user_header":"https://static001.geekbang.org/account/avatar/00/14/ce/b2/1f914527.jpg","comment_is_top":false,"comment_ctime":1605680461,"is_pvip":false,"replies":[{"id":"95177","content":"@思维，请看一下你的内核版本号。比如time namespace是Linux kernel 5.6之后才有的。","user_name":"作者回复","user_name_real":"CY","uid":"2070138","ctime":1605707375,"ip_address":"","comment_id":262262,"utype":1}],"discussion_count":2,"race_medal":0,"score":"14490582349","product_id":100063801,"comment_content":"请教老师一个问题，执行 ls -l &#47;proc&#47;self&#47;ns，我们的服务器上只支持6种namespace：ipc，mnt，net，pid，user，uts。请问这是怎么回事？","like_count":3,"discussions":[{"author":{"id":2070138,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/96/7a/8a14d008.jpg","nickname":"CY","note":"","ucode":"4AF98230985918","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":509757,"discussion_content":"@思维，请看一下你的内核版本号。比如time namespace是Linux kernel 5.6之后才有的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1605707375,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1363634,"avatar":"https://static001.geekbang.org/account/avatar/00/14/ce/b2/1f914527.jpg","nickname":"海盗船长","note":"","ucode":"ECB28BA21A4113","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":330949,"discussion_content":"谢谢老师的回复。内核升级到5.9之后，namespace变成了10种：ipc，mnt，net，pid，user，uts，pid_for_children, time, time_for_children, cgroup","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1606738919,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":261956,"user_name":"Marionxue","can_delete":false,"product_type":"c1","uid":1367781,"ip_address":"","ucode":"72FBDC3B324BF5","user_header":"https://static001.geekbang.org/account/avatar/00/14/de/e5/701d67ca.jpg","comment_is_top":false,"comment_ctime":1605589357,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"14490491245","product_id":100063801,"comment_content":"使用了这么多年的Docker, 再回头看还是受益匪浅。","like_count":3},{"had_liked":false,"id":261863,"user_name":"JianXu","can_delete":false,"product_type":"c1","uid":1033219,"ip_address":"","ucode":"2A61BDBB573BDC","user_header":"https://static001.geekbang.org/account/avatar/00/0f/c4/03/f753fda7.jpg","comment_is_top":false,"comment_ctime":1605540935,"is_pvip":false,"replies":[{"id":"95060","content":"这个是宿主机上Linux bridge interface docker0上的IP, 和容器里的IP在同一个网段，用来宿主机和容器进行网络通讯","user_name":"作者回复","user_name_real":"CY","uid":"2070138","ctime":1605576988,"ip_address":"","comment_id":261863,"utype":1}],"discussion_count":1,"race_medal":0,"score":"14490442823","product_id":100063801,"comment_content":"那张网络图里 172.17.0.21 是什么呢？","like_count":3,"discussions":[{"author":{"id":2070138,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/96/7a/8a14d008.jpg","nickname":"CY","note":"","ucode":"4AF98230985918","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":509645,"discussion_content":"这个是宿主机上Linux bridge interface docker0上的IP, 和容器里的IP在同一个网段，用来宿主机和容器进行网络通讯","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1605576988,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":306840,"user_name":"牛牛肥","can_delete":false,"product_type":"c1","uid":1226493,"ip_address":"","ucode":"4F455A76F22BB0","user_header":"https://static001.geekbang.org/account/avatar/00/12/b6/fd/a0f60753.jpg","comment_is_top":false,"comment_ctime":1628740961,"is_pvip":false,"replies":[{"id":"111306","content":"@牛牛肥<br>碰到类似问题可以先去搜索一下error message &quot;sending build context to Docker daemon&quot;.<br>https:&#47;&#47;www.cnblogs.com&#47;cxbhakim&#47;p&#47;9316565.html<br>","user_name":"作者回复","user_name_real":"CY","uid":"2070138","ctime":1629088725,"ip_address":"","comment_id":306840,"utype":1}],"discussion_count":2,"race_medal":0,"score":"5923708257","product_id":100063801,"comment_content":" 请问老师，运行 sudo  docker build -t registry&#47;httpd:v1 -f .&#47;Dockerfile . 后， 显示sending build context to Docker daemon  2.065GB 而体积还在不断增加，这是为什么呢？","like_count":1,"discussions":[{"author":{"id":2070138,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/96/7a/8a14d008.jpg","nickname":"CY","note":"","ucode":"4AF98230985918","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":524943,"discussion_content":"@牛牛肥\n碰到类似问题可以先去搜索一下error message &amp;quot;sending build context to Docker daemon&amp;quot;.\nhttps://www.cnblogs.com/cxbhakim/p/9316565.html\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1629088725,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1160951,"avatar":"https://static001.geekbang.org/account/avatar/00/11/b6/f7/3c3b1385.jpg","nickname":"海胆阶段","note":"","ucode":"7A8C4BB4D0CDB8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":542118,"discussion_content":"因为docker 会把Dockefile 所在目录以及子目录都当作build context，所以最好是在一个空目录中build","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1640668363,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":273133,"user_name":"wuyang","can_delete":false,"product_type":"c1","uid":1044517,"ip_address":"","ucode":"81000322FF96A7","user_header":"https://static001.geekbang.org/account/avatar/00/0f/f0/25/d3da7ca9.jpg","comment_is_top":false,"comment_ctime":1610451601,"is_pvip":true,"replies":[{"id":"99043","content":"@wuyang-ligerj<br>可以尝试用find命令去找一下<br><br>```<br>-bash-4.2# docker ps -q<br>8c28cc9c5db8<br>-bash-4.2# pwd<br>&#47;sys&#47;fs&#47;cgroup&#47;memory<br>-bash-4.2# find . -name *8c28cc9c5db8*<br>.&#47;system.slice&#47;docker-8c28cc9c5db88bf08b6ccc79aed58b8ec4afaeb1ef7ff27aaabfa60229824c08.scope<br>```","user_name":"作者回复","user_name_real":"CY","uid":"2070138","ctime":1610551723,"ip_address":"","comment_id":273133,"utype":1}],"discussion_count":2,"race_medal":0,"score":"5905418897","product_id":100063801,"comment_content":"centos 7.9  cd &#47;sys&#47;fs&#47;cgroup&#47;memory&#47;system.slice&#47; 进入这个目录没有找到正在运行的容器id","like_count":1,"discussions":[{"author":{"id":2070138,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/96/7a/8a14d008.jpg","nickname":"CY","note":"","ucode":"4AF98230985918","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":513506,"discussion_content":"@wuyang-ligerj\n可以尝试用find命令去找一下\n\n```\n-bash-4.2# docker ps -q\n8c28cc9c5db8\n-bash-4.2# pwd\n/sys/fs/cgroup/memory\n-bash-4.2# find . -name *8c28cc9c5db8*\n./system.slice/docker-8c28cc9c5db88bf08b6ccc79aed58b8ec4afaeb1ef7ff27aaabfa60229824c08.scope\n```","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1610551723,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1044517,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/f0/25/d3da7ca9.jpg","nickname":"wuyang","note":"","ucode":"81000322FF96A7","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":341716,"discussion_content":"cd /sys/fs/cgroup/memory/docker  在这个目录里面找到容器的id了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1610503931,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":262004,"user_name":"chon","can_delete":false,"product_type":"c1","uid":1068925,"ip_address":"","ucode":"1C32170972F726","user_header":"https://static001.geekbang.org/account/avatar/00/10/4f/7d/dd852b04.jpg","comment_is_top":false,"comment_ctime":1605603247,"is_pvip":true,"replies":[{"id":"95293","content":"&quot;Understanding the Linux Kernel&quot;<br>&quot;Linux Kernel Development&quot;<br><br>虽然这两本书是10多年前的了，讲述的内核版本和目前的有差距，不过基本的概念原理都是一样的。认真读完，对于内核会有一个比较完整的认识。","user_name":"作者回复","user_name_real":"CY","uid":"2070138","ctime":1605791415,"ip_address":"","comment_id":262004,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5900570543","product_id":100063801,"comment_content":"希望在课程最后能给个书单，怎么才能掌握linux的内核，谢谢","like_count":1,"discussions":[{"author":{"id":2070138,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/96/7a/8a14d008.jpg","nickname":"CY","note":"","ucode":"4AF98230985918","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":509686,"discussion_content":"&amp;quot;Understanding the Linux Kernel&amp;quot;\n&amp;quot;Linux Kernel Development&amp;quot;\n\n虽然这两本书是10多年前的了，讲述的内核版本和目前的有差距，不过基本的概念原理都是一样的。认真读完，对于内核会有一个比较完整的认识。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1605791415,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":261818,"user_name":"JianXu","can_delete":false,"product_type":"c1","uid":1033219,"ip_address":"","ucode":"2A61BDBB573BDC","user_header":"https://static001.geekbang.org/account/avatar/00/0f/c4/03/f753fda7.jpg","comment_is_top":false,"comment_ctime":1605530797,"is_pvip":false,"replies":[{"id":"95022","content":"@JianXu,<br><br>因为我的介绍后面有很多内容涉及到了Linux相关的功能，需要在Linux的机器里运行容器。<br><br><br>“在这个容器课程中，每一讲里都会有一些小例子，所以需要你有一台安装有 Linux 的机器，或者用 VirtualBox 安装一个虚拟机来跑 Linux。Linux 的版本建议是 CentOS 8 或者是 Ubuntu 20.04。&quot;","user_name":"作者回复","user_name_real":"CY","uid":"2070138","ctime":1605538677,"ip_address":"","comment_id":261818,"utype":1}],"discussion_count":2,"race_medal":0,"score":"5900498093","product_id":100063801,"comment_content":"我在Mac 笔记本上安装了 docker daemon.  但是下载的 centos&#47;httpd:latest 似乎找不到 ip 或者 ifconfig 命令：<br><br> ~  docker ps<br>CONTAINER ID        IMAGE                 COMMAND             CREATED             STATUS              PORTS               NAMES<br>955d78842ca8        centos&#47;httpd:latest   &quot;&#47;run-httpd.sh&quot;     15 minutes ago      Up 15 minutes       80&#47;tcp              vigilant_jones<br> ~  docker exec -it 955d78842ca8 ip addr<br>OCI runtime exec failed: exec failed: container_linux.go:349: starting container process caused &quot;exec: \\&quot;ip\\&quot;: executable file not found in $PATH&quot;: unknown<br> ✘  ~  docker exec -it 955d78842ca8 ifconfig<br>OCI runtime exec failed: exec failed: container_linux.go:349: starting container process caused &quot;exec: \\&quot;ifconfig\\&quot;: executable file not found in $PATH&quot;: unknown<br> ✘  ~ ","like_count":1,"discussions":[{"author":{"id":2070138,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/96/7a/8a14d008.jpg","nickname":"CY","note":"","ucode":"4AF98230985918","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":509618,"discussion_content":"@JianXu,\n\n因为我的介绍后面有很多内容涉及到了Linux相关的功能，需要在Linux的机器里运行容器。\n\n\n“在这个容器课程中，每一讲里都会有一些小例子，所以需要你有一台安装有 Linux 的机器，或者用 VirtualBox 安装一个虚拟机来跑 Linux。Linux 的版本建议是 CentOS 8 或者是 Ubuntu 20.04。&amp;quot;","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1605538677,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1225502,"avatar":"","nickname":"音乐柠檬茶","note":"","ucode":"30330F27AF0EEF","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":334143,"discussion_content":"centos提供的centos/httpd:latest镜像的确没有安装ip命令，可以先在容器中安装iproute包： docker exec  e0d676532eac yum install iproute","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1607750511,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":360578,"user_name":"Nemo","can_delete":false,"product_type":"c1","uid":1657039,"ip_address":"广东","ucode":"2B11D18D6FA2AE","user_header":"https://static001.geekbang.org/account/avatar/00/19/48/cf/8c88e6c0.jpg","comment_is_top":false,"comment_ctime":1666668212,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1666668212","product_id":100063801,"comment_content":"课件中centos8会遇到 Error: Failed to download metadata for repo &#39;AppStream&#39;<br>自己添加就好了<br>RUN cd &#47;etc&#47;yum.repos.d&#47;<br>RUN sed -i &#39;s&#47;mirrorlist&#47;#mirrorlist&#47;g&#39; &#47;etc&#47;yum.repos.d&#47;CentOS-* &amp;&amp; sed -i &#39;s|#baseurl=http:&#47;&#47;mirror.centos.org|baseurl=http:&#47;&#47;vault.centos.org|g&#39; &#47;etc&#47;yum.repos.d&#47;CentOS-*","like_count":0},{"had_liked":false,"id":357740,"user_name":"Geek_c98a70","can_delete":false,"product_type":"c1","uid":2290127,"ip_address":"上海","ucode":"17D5ACBF7E44B7","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epIdmlBLywcLF3ADKyicFoRkVocJnu0CBbv6wYMeNGDEKlXRicaok498ybaozAzZbpr8qn8fA3LCdBA/132","comment_is_top":false,"comment_ctime":1663592667,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1663592667","product_id":100063801,"comment_content":"cat memory.limit_in_bytes <br>9223372036854771712<br>求教老师，我的一个docker目录下内存限制是这个？感觉有点问题。。。","like_count":0},{"had_liked":false,"id":351178,"user_name":"马听","can_delete":false,"product_type":"c1","uid":1430132,"ip_address":"","ucode":"93D83CB5FAE5AD","user_header":"https://static001.geekbang.org/account/avatar/00/15/d2/74/7861f504.jpg","comment_is_top":false,"comment_ctime":1657593744,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1657593744","product_id":100063801,"comment_content":"思考题，尝试了nginx，并增加了一个子配置文件配置如下，可成功运行：<br>FROM docker.io&#47;library&#47;nginx:alpine<br>COPY xxx.conf &#47;etc&#47;nginx&#47;conf.d&#47;xxx.conf<br>CMD [&quot;&#47;usr&#47;sbin&#47;nginx&quot;, &quot;-g&quot;, &quot;daemon off;&quot;]","like_count":0},{"had_liked":false,"id":343709,"user_name":"King-ZJ","can_delete":false,"product_type":"c1","uid":1915385,"ip_address":"","ucode":"7448A4BBB5A118","user_header":"https://static001.geekbang.org/account/avatar/00/1d/39/f9/b946719a.jpg","comment_is_top":false,"comment_ctime":1651017091,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1651017091","product_id":100063801,"comment_content":"[root@master-1 dockerfile]# docker build -t registry&#47;httpd:v1 -f .&#47;dockerfile .<br>Sending build context to Docker daemon  2.048kB<br>Step 1&#47;5 : FROM centos:8.1.1911<br> ---&gt; 470671670cac<br>Step 2&#47;5 : RUN yum install -y httpd<br> ---&gt; Running in e0e55576ccce<br>CentOS-8 - AppStream                             37  B&#47;s |  38  B     00:01    <br>Failed to download metadata for repo &#39;AppStream&#39;<br>Error: Failed to download metadata for repo &#39;AppStream&#39;<br>The command &#39;&#47;bin&#47;sh -c yum install -y httpd&#39; returned a non-zero code: 1<br>请问这个failed download是什么愿意呢？我这边单独执行yum install -y httpd是没问题的","like_count":0,"discussions":[{"author":{"id":1339294,"avatar":"https://static001.geekbang.org/account/avatar/00/14/6f/9e/951afb1f.jpg","nickname":"更好的做自己","note":"","ucode":"92CC2D8E4B3B52","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":576483,"discussion_content":"原因：centos 8 不再维护linux版本了 \n参考：https://blog.csdn.net/weixin_43252521/article/details/124409151\n\n以下dockerfile 可以运行\n```dockerfile\nFROM centos:8.1.1911\n\nRUN cd /etc/yum.repos.d/ \\\n\t&amp;&amp; sed -i &#39;s/mirrorlist/#mirrorlist/g&#39; /etc/yum.repos.d/CentOS-* \\\n\t&amp;&amp; sed -i &#39;s|#baseurl=http://mirror.centos.org|baseurl=http://vault.centos.org|g&#39; /etc/yum.repos.d/CentOS-* \\\n\t&amp;&amp; yum install -y wget \\\n\t&amp;&amp; yum clean all \\\n\t&amp;&amp; yum makecache \\\n\t&amp;&amp; wget -O /etc/yum.repos.d/CentOS-Base.repo https://mirrors.aliyun.com/repo/Centos-vault-8.5.2111.repo \\\n\t&amp;&amp; yum install -y httpd\n\nCOPY file1 /var/www/htlm/\nADD file2.tar.gz /var/www/html/\n\nCMD [&#34;/sbin/httpd&#34;, &#34;-D&#34;, &#34;FOREGROUND&#34;]\n```","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1655573640,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":343708,"user_name":"King-ZJ","can_delete":false,"product_type":"c1","uid":1915385,"ip_address":"","ucode":"7448A4BBB5A118","user_header":"https://static001.geekbang.org/account/avatar/00/1d/39/f9/b946719a.jpg","comment_is_top":false,"comment_ctime":1651016064,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1651016064","product_id":100063801,"comment_content":"docker stop containerId和docker exec -it containerId &#47;bin&#47;bash执行exit命令后的实现原理是一样的吗？<br>","like_count":0},{"had_liked":false,"id":326121,"user_name":"Geek4437","can_delete":false,"product_type":"c1","uid":2853695,"ip_address":"","ucode":"0BE885D9AD9444","user_header":"","comment_is_top":false,"comment_ctime":1639386875,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1639386875","product_id":100063801,"comment_content":"老师你好，为什么 memery.limit_in_bytes 的默认值是9223372036854771712，而不是 uint64 的最大值或者其他值呢？<br><br>uint64 的最大值 9223372036854775807 - 9223372036854771712 = 4095。","like_count":0},{"had_liked":false,"id":321312,"user_name":"小Y","can_delete":false,"product_type":"c1","uid":1739621,"ip_address":"","ucode":"24A43BB71805F8","user_header":"https://static001.geekbang.org/account/avatar/00/1a/8b/65/0f1f9a10.jpg","comment_is_top":false,"comment_ctime":1636785784,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1636785784","product_id":100063801,"comment_content":"我的，&#47;sys&#47;fs&#47;cgroup&#47;memory&#47;system.slice&#47;下 没有 docker-&lt;id&gt;结构的目录或文件是咋回事呢？ 我已经运行了2个容器的","like_count":0},{"had_liked":false,"id":313965,"user_name":"Syou","can_delete":false,"product_type":"c1","uid":2782614,"ip_address":"","ucode":"14EE33372CF1C0","user_header":"https://static001.geekbang.org/account/avatar/00/2a/75/96/207411d0.jpg","comment_is_top":false,"comment_ctime":1632759526,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1632759526","product_id":100063801,"comment_content":"一直纳闷为什么没有GPU的resource分割，可以认为是CGroup不支持么？","like_count":0},{"had_liked":false,"id":312168,"user_name":"八台上","can_delete":false,"product_type":"c1","uid":1391143,"ip_address":"","ucode":"FB3D74B522C720","user_header":"https://static001.geekbang.org/account/avatar/00/15/3a/27/5d218272.jpg","comment_is_top":false,"comment_ctime":1631671288,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1631671288","product_id":100063801,"comment_content":"想问一下端口号为什么内外都是 80呢","like_count":0},{"had_liked":false,"id":312092,"user_name":"张德坤","can_delete":false,"product_type":"c1","uid":1926471,"ip_address":"","ucode":"DBCC762CF77EBD","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83erqstKsb9keGmH2hwtiapCVWD6bpaGcsibZgkGbUoYyIFGqJRKbbibS82BhicjDpEc6Mwujbmic5PRibpWw/132","comment_is_top":false,"comment_ctime":1631620105,"is_pvip":false,"replies":[{"id":"114204","content":"多谢鼓励，希望对你有帮助。","user_name":"作者回复","user_name_real":"听水的湖","uid":"1501385","ctime":1633916686,"ip_address":"","comment_id":312092,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1631620105","product_id":100063801,"comment_content":"讲的真不错，按照程序员的思维来的","like_count":0,"discussions":[{"author":{"id":1501385,"avatar":"https://static001.geekbang.org/account/avatar/00/16/e8/c9/59bcd490.jpg","nickname":"听水的湖","note":"","ucode":"B1759F90165D81","race_medal":0,"user_type":8,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":526862,"discussion_content":"多谢鼓励，希望对你有帮助。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1633916686,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":4}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":303857,"user_name":"刘超","can_delete":false,"product_type":"c1","uid":2649310,"ip_address":"","ucode":"78B617AADA9035","user_header":"https://static001.geekbang.org/account/avatar/00/28/6c/de/1934abe6.jpg","comment_is_top":false,"comment_ctime":1627030551,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1627030551","product_id":100063801,"comment_content":"&#47;sys&#47;fs&#47;cgroup&#47;memory&#47;docker&#47;618fd36d....<br>现在是这个目录","like_count":0},{"had_liked":false,"id":303247,"user_name":"首富手记","can_delete":false,"product_type":"c1","uid":1286588,"ip_address":"","ucode":"879DED4078303C","user_header":"https://static001.geekbang.org/account/avatar/00/13/a1/bc/ef0f26fa.jpg","comment_is_top":false,"comment_ctime":1626685407,"is_pvip":true,"replies":[{"id":"111123","content":"cpuset cgroup那么可以通过cpuset.cpus来限制容器进程在哪几个cpu上运行。<br>不过具体容器可以使用几个cpu, 还是需要从cpu cgroup里通过cpu.cfs_quota_us来判断容器可以用几个cpu.","user_name":"作者回复","user_name_real":"CY","uid":"2070138","ctime":1628756448,"ip_address":"","comment_id":303247,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1626685407","product_id":100063801,"comment_content":"cpuset 子系统；老师不知道这个是否能限制docker 容器内读取到cpu的数量，因为我们之前有个程序是读cpu的核数来判断启动多少进程的，单机部署的时候倒是没有多大问题，但是要给其他服务部署在一起的时候就会出现问题","like_count":0,"discussions":[{"author":{"id":2070138,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/96/7a/8a14d008.jpg","nickname":"CY","note":"","ucode":"4AF98230985918","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":523606,"discussion_content":"cpuset cgroup那么可以通过cpuset.cpus来限制容器进程在哪几个cpu上运行。\n不过具体容器可以使用几个cpu, 还是需要从cpu cgroup里通过cpu.cfs_quota_us来判断容器可以用几个cpu.","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1628756448,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":291968,"user_name":"Dexter","can_delete":false,"product_type":"c1","uid":2608728,"ip_address":"","ucode":"909CABC4AC4AC9","user_header":"https://static001.geekbang.org/account/avatar/00/27/ce/58/71ed845f.jpg","comment_is_top":false,"comment_ctime":1620629380,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1620629380","product_id":100063801,"comment_content":"关于docker containerd ---&gt;containerd-shim, 在k8s环境上（CRI=docker）上查看，并没有发现containerd-shim是由containerd创建出来？<br>        |-containerd---19*[{containerd}]<br>        |-31*[containerd-shim-+-pause]<br>        |                     `-12*[{containerd-shim}]]<br>        |-19*[containerd-shim-+-pause]<br>        |                     `-13*[{containerd-shim}]]<br>        |-containerd-shim-+-trsconfd-+-netopeer2-serve---3*[{netopeer2-serve}]<br>        |                 |          `-18*[{trsconfd}]<br>        |                 `-16*[{containerd-shim}]<br>        |-containerd-shim-+-genapilogger-ca---kubeapisymptomd---14*[{kubeapisymptomd}]<br>        |                 `-12*[{containerd-shim}]<br>        |-containerd-shim-+-tini---zabbix_proxy---90*[zabbix_proxy]<br>        |                 `-12*[{containerd-shim}]<br>        |-containerd-shim-+-ministarter-+-hasymptomdatapr---5*[{hasymptomdatapr}]<br>        |                 |             `-lightweightserv<br>","like_count":0},{"had_liked":false,"id":291826,"user_name":"木 易","can_delete":false,"product_type":"c1","uid":1033212,"ip_address":"","ucode":"5C3BBB5958A4B5","user_header":"","comment_is_top":false,"comment_ctime":1620536226,"is_pvip":false,"replies":[{"id":"111143","content":"目前用CentOS7, 内核使用基于ubuntu 20.04的5.4.x<br>由于CentOS8不再被维护, 我们会切换到ubuntu ","user_name":"作者回复","user_name_real":"CY","uid":"2070138","ctime":1628775634,"ip_address":"","comment_id":291826,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1620536226","product_id":100063801,"comment_content":"老师，请问 eBay 在自己的私有云上使用 k8s ，底层的 Linux 的操作系统版本是 Debian、Ubuntu、CentOS，还是基于开源的内核自研的 Linux。","like_count":0,"discussions":[{"author":{"id":2070138,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/96/7a/8a14d008.jpg","nickname":"CY","note":"","ucode":"4AF98230985918","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":519579,"discussion_content":"目前用CentOS7, 内核使用基于ubuntu 20.04的5.4.x\n由于CentOS8不再被维护, 我们会切换到ubuntu ","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1628775634,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1160951,"avatar":"https://static001.geekbang.org/account/avatar/00/11/b6/f7/3c3b1385.jpg","nickname":"海胆阶段","note":"","ucode":"7A8C4BB4D0CDB8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":542120,"discussion_content":"@CY how about Rocky linux?","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1640668491,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":291418,"user_name":"BertGeek","can_delete":false,"product_type":"c1","uid":1452799,"ip_address":"","ucode":"8E1D72C9F9778C","user_header":"https://static001.geekbang.org/account/avatar/00/16/2a/ff/a9d72102.jpg","comment_is_top":false,"comment_ctime":1620283516,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1620283516","product_id":100063801,"comment_content":"请问，docker 19 和docker 20 是不是存在区别，<br>项目运行在docker20版本就有问题，降低到19 就正常运行<br><br>希望老师解答疑惑，非常感谢！","like_count":0,"discussions":[{"author":{"id":1244997,"avatar":"https://static001.geekbang.org/account/avatar/00/12/ff/45/b953a21f.jpg","nickname":"龍","note":"","ucode":"7A84347CF31EF5","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":551104,"discussion_content":"可能和内核版本有关，高版本的docker需要升级内核支持","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1644898235,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":263802,"user_name":"Wen","can_delete":false,"product_type":"c1","uid":1367387,"ip_address":"","ucode":"892CB242BA9C04","user_header":"https://static001.geekbang.org/account/avatar/00/14/dd/5b/5461afad.jpg","comment_is_top":false,"comment_ctime":1606270675,"is_pvip":false,"replies":[{"id":"95725","content":"@Wen, 可以用 docker &quot;--memory&quot; 参数来启动容器。比如， <br>docker run --memory=400m -d registry&#47;zombie-proc:v1","user_name":"作者回复","user_name_real":"CY","uid":"2070138","ctime":1606319784,"ip_address":"","comment_id":263802,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1606270675","product_id":100063801,"comment_content":"[root@localhost ~]# echo 2147483648 &gt; &#47;sys&#47;fs&#47;cgroup&#47;memory&#47;docker&#47;7142bb204dd0d019696f8ac2111928898041e4a9e8c076e7bbadc1d3c032e21f&#47;memory.limit_in_bytes<br>[root@localhost ~]# docker stats 7142bb204dd0<br><br>CONTAINER ID   NAME              CPU %     MEM USAGE &#47; LIMIT   MEM %     NET I&#47;O       BLOCK I&#47;O   PIDS<br>7142bb204dd0   frosty_brattain   0.01%     31.7MiB &#47; 2GiB      1.55%     1.12kB &#47; 0B   0B &#47; 0B     213<br>[root@localhost ~]# systemctl restart docker<br>[root@localhost ~]# docker start 714<br>714<br>[root@localhost ~]# docker stats 714<br><br>CONTAINER ID   NAME              CPU %     MEM USAGE &#47; LIMIT     MEM %     NET I&#47;O     BLOCK I&#47;O   PIDS<br>7142bb204dd0   frosty_brattain   0.00%     33.66MiB &#47; 3.664GiB   0.90%     766B &#47; 0B   0B &#47; 0B     213<br><br>重启docker就会失效，还有别的方法可以限制内存吗？","like_count":0,"discussions":[{"author":{"id":2070138,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/96/7a/8a14d008.jpg","nickname":"CY","note":"","ucode":"4AF98230985918","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":510312,"discussion_content":"@Wen, 可以用 docker &amp;quot;--memory&amp;quot; 参数来启动容器。比如， \ndocker run --memory=400m -d registry/zombie-proc:v1","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1606319784,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":263076,"user_name":"小白","can_delete":false,"product_type":"c1","uid":1003669,"ip_address":"","ucode":"57FC0FA9B4AE74","user_header":"https://static001.geekbang.org/account/avatar/00/0f/50/95/824f60ae.jpg","comment_is_top":false,"comment_ctime":1605971593,"is_pvip":false,"replies":[{"id":"95476","content":"@小白<br>我想需要分析一下resouce有哪些， 可以先看Cgroups可以为哪些resouce做到哪种程度的limit。我在后面的课程里也会介绍cpu&#47;memory&#47;blkio&#47;pids 这几个Cgroups.<br><br>","user_name":"作者回复","user_name_real":"CY","uid":"2070138","ctime":1606015803,"ip_address":"","comment_id":263076,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1605971593","product_id":100063801,"comment_content":"老师您好，我想请教一下，我想学习一下如何给各个服务合理分配 resouce limit，但不知道从哪下手，老师能指导一下关于这个知识的学习路径或者搜索关键词吗？谢谢。","like_count":0,"discussions":[{"author":{"id":2070138,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/96/7a/8a14d008.jpg","nickname":"CY","note":"","ucode":"4AF98230985918","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":510088,"discussion_content":"@小白\n我想需要分析一下resouce有哪些， 可以先看Cgroups可以为哪些resouce做到哪种程度的limit。我在后面的课程里也会介绍cpu/memory/blkio/pids 这几个Cgroups.\n\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1606015803,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":262929,"user_name":"在路上","can_delete":false,"product_type":"c1","uid":1402511,"ip_address":"","ucode":"6E31908EFE1107","user_header":"https://static001.geekbang.org/account/avatar/00/15/66/8f/02be926d.jpg","comment_is_top":false,"comment_ctime":1605886746,"is_pvip":false,"replies":[{"id":"95496","content":"Windows的容器我之前没有接触过，不过看到微软的网站有相关的介绍，你可以看一下。<br>https:&#47;&#47;docs.microsoft.com&#47;en-us&#47;virtualization&#47;windowscontainers&#47;about&#47;","user_name":"作者回复","user_name_real":"CY","uid":"2070138","ctime":1606025464,"ip_address":"","comment_id":262929,"utype":1}],"discussion_count":4,"race_medal":0,"score":"1605886746","product_id":100063801,"comment_content":"老师好，我能否将windows开发环境打成一个Docker镜像，给新来的同事使用？如果可以的话，需要怎么操作。","like_count":0,"discussions":[{"author":{"id":2070138,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/96/7a/8a14d008.jpg","nickname":"CY","note":"","ucode":"4AF98230985918","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":510035,"discussion_content":"Windows的容器我之前没有接触过，不过看到微软的网站有相关的介绍，你可以看一下。\nhttps://docs.microsoft.com/en-us/virtualization/windowscontainers/about/","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1606025464,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1160951,"avatar":"https://static001.geekbang.org/account/avatar/00/11/b6/f7/3c3b1385.jpg","nickname":"海胆阶段","note":"","ucode":"7A8C4BB4D0CDB8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":542121,"discussion_content":"https://hub.docker.com/_/microsoft-windows","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1640668566,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2536266,"avatar":"","nickname":"南翔","note":"","ucode":"07D3D0298FC87E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":362762,"discussion_content":"我的理解，容器是实际上是打包了可执行文件，library和配置文件，但内核是用宿主机上的内核。windows和linux的内核接口是不一样的，所以windows平台做成的docker image应该是没有办法在linux平台去运行的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1617025087,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1160951,"avatar":"https://static001.geekbang.org/account/avatar/00/11/b6/f7/3c3b1385.jpg","nickname":"海胆阶段","note":"","ucode":"7A8C4BB4D0CDB8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2536266,"avatar":"","nickname":"南翔","note":"","ucode":"07D3D0298FC87E","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":542122,"discussion_content":"correct","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1640668590,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":362762,"ip_address":""},"score":542122,"extra":""}]}]},{"had_liked":false,"id":262632,"user_name":"JianXu","can_delete":false,"product_type":"c1","uid":1033219,"ip_address":"","ucode":"2A61BDBB573BDC","user_header":"https://static001.geekbang.org/account/avatar/00/0f/c4/03/f753fda7.jpg","comment_is_top":false,"comment_ctime":1605787584,"is_pvip":false,"replies":[{"id":"95300","content":"@JianXu,<br>你可以再检查一下，应该是有shim的。比如：<br><br>root     27204 18022  0 Nov17 ?        00:00:06 containerd-shim -namespace moby -workdir &#47;var&#47;lib&#47;runtime&#47;docker&#47;containerd&#47;daemon&#47;io.containerd.runtime.v1.linux&#47;moby&#47;dfd5237b370c74aebfc706b849c665672f7de74f5210f00b887c4a0e7c31ae31 -address &#47;var&#47;run&#47;docker&#47;containerd&#47;containerd.sock -containerd-binary &#47;usr&#47;bin&#47;containerd -runtime-root &#47;var&#47;run&#47;docker&#47;runtime-runc -systemd-cgroup<br>root     27242 27204  0 Nov17 ?        00:00:12 &#47;sbin&#47;httpd -D FOREGROUND","user_name":"作者回复","user_name_real":"CY","uid":"2070138","ctime":1605794223,"ip_address":"","comment_id":262632,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1605787584","product_id":100063801,"comment_content":"关于 shim 进程<br><br>我在我的主机上：<br>$ ps -ef | grep httpd<br>root       18916   18885  0 17:30 ?        00:00:00 &#47;usr&#47;sbin&#47;httpd -DFOREGROUND<br>48         18917   18916  0 17:30 ?        00:00:00 &#47;usr&#47;sbin&#47;httpd -DFOREGROUND<br>48         18918   18916  0 17:30 ?        00:00:00 &#47;usr&#47;sbin&#47;httpd -DFOREGROUND<br>48         18919   18916  0 17:30 ?        00:00:00 &#47;usr&#47;sbin&#47;httpd -DFOREGROUND<br>48         18920   18916  0 17:30 ?        00:00:00 &#47;usr&#47;sbin&#47;httpd -DFOREGROUND<br>48         18921   18916  0 17:30 ?        00:00:00 &#47;usr&#47;sbin&#47;httpd -DFOREGROUND<br><br>于是我去查看 18885 进程<br>$ ps -ef | grep 18885<br>root       18885   18857  0 17:30 ?        00:00:00 &#47;bin&#47;sh &#47;usr&#47;sbin&#47;apachectl -DFOREGROUND<br><br>但是我继续查看 18857 进程号的时候是找不到的，这是什么原因呢？","like_count":0,"discussions":[{"author":{"id":2070138,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/96/7a/8a14d008.jpg","nickname":"CY","note":"","ucode":"4AF98230985918","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":509907,"discussion_content":"@JianXu,\n你可以再检查一下，应该是有shim的。比如：\n\nroot     27204 18022  0 Nov17 ?        00:00:06 containerd-shim -namespace moby -workdir /var/lib/runtime/docker/containerd/daemon/io.containerd.runtime.v1.linux/moby/dfd5237b370c74aebfc706b849c665672f7de74f5210f00b887c4a0e7c31ae31 -address /var/run/docker/containerd/containerd.sock -containerd-binary /usr/bin/containerd -runtime-root /var/run/docker/runtime-runc -systemd-cgroup\nroot     27242 27204  0 Nov17 ?        00:00:12 /sbin/httpd -D FOREGROUND","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1605794223,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":262630,"user_name":"JianXu","can_delete":false,"product_type":"c1","uid":1033219,"ip_address":"","ucode":"2A61BDBB573BDC","user_header":"https://static001.geekbang.org/account/avatar/00/0f/c4/03/f753fda7.jpg","comment_is_top":false,"comment_ctime":1605787390,"is_pvip":false,"replies":[{"id":"95348","content":"@JianXu, 这是我第一次看到container在cgroup下的目录是用overlayfs merged dir id来命名的。需要看一下，你的机器OS&#47;systemd&#47;docker 版本，以及安装方式。","user_name":"作者回复","user_name_real":"CY","uid":"2070138","ctime":1605845606,"ip_address":"","comment_id":262630,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1605787390","product_id":100063801,"comment_content":"我机器上的目录是 &#47;sys&#47;fs&#47;cgroup&#47;memory&#47;system.slice&#47;var-lib-docker-overlay2-c186a214dffd90302cdcbf43d1e749cfed5c4fa5d643e8ecd46408fbf6f4d39e-merged.mount$   问题是我怎么去把 container id 和 这一串数字关联呢？<br><br>jianxu1@container:&#47;sys&#47;fs&#47;cgroup&#47;memory&#47;system.slice&#47;var-lib-docker-overlay2-c186a214dffd90302cdcbf43d1e749cfed5c4fa5d643e8ecd46408fbf6f4d39e-merged.mount$ mount | grep docker<br>overlay on &#47;var&#47;lib&#47;docker&#47;overlay2&#47;c186a214dffd90302cdcbf43d1e749cfed5c4fa5d643e8ecd46408fbf6f4d39e&#47;merged type overlay (rw,relatime,lowerdir=&#47;var&#47;lib&#47;docker&#47;overlay2&#47;l&#47;24V56T2HQD3KQS2CN2N6CXAQZP:&#47;var&#47;lib&#47;docker&#47;overlay2&#47;l&#47;JGIRYDVLNFJR5446RXCXEFUVRL:&#47;var&#47;lib&#47;docker&#47;overlay2&#47;l&#47;2MAFTAY2SVBIPWVINJSKPTZS3K:&#47;var&#47;lib&#47;docker&#47;overlay2&#47;l&#47;7UZWQEVHIOIXV7OORMADG7NKU2:&#47;var&#47;lib&#47;docker&#47;overlay2&#47;l&#47;E45SMGLQ3DIICDWJV5H45I5T2U,upperdir=&#47;var&#47;lib&#47;docker&#47;overlay2&#47;c186a214dffd90302cdcbf43d1e749cfed5c4fa5d643e8ecd46408fbf6f4d39e&#47;diff,workdir=&#47;var&#47;lib&#47;docker&#47;overlay2&#47;c186a214dffd90302cdcbf43d1e749cfed5c4fa5d643e8ecd46408fbf6f4d39e&#47;work,xino=off)","like_count":0,"discussions":[{"author":{"id":2070138,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/96/7a/8a14d008.jpg","nickname":"CY","note":"","ucode":"4AF98230985918","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":509905,"discussion_content":"@JianXu, 这是我第一次看到container在cgroup下的目录是用overlayfs merged dir id来命名的。需要看一下，你的机器OS/systemd/docker 版本，以及安装方式。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1605845606,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":262415,"user_name":"po","can_delete":false,"product_type":"c1","uid":1023905,"ip_address":"","ucode":"7DB36C278F34D7","user_header":"https://static001.geekbang.org/account/avatar/00/0f/9f/a1/d75219ee.jpg","comment_is_top":false,"comment_ctime":1605711600,"is_pvip":true,"replies":[{"id":"95258","content":"@po,<br>这个大值只是表示memory limit还没有设置","user_name":"作者回复","user_name_real":"CY","uid":"2070138","ctime":1605757396,"ip_address":"","comment_id":262415,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1605711600","product_id":100063801,"comment_content":"老师，为什么我的 memory.limit_in_bytes 数字会这么大呢？我是rhel7.5。<br>[root@ocp3 docker-5950716c499d200837ce1c3061c2bf4ee8d1e33ce75b8844fe7c39c7b60e1671.scope]# cat memory.limit_in_bytes<br>9223372036854771712<br>[root@ocp3 docker-5950716c499d200837ce1c3061c2bf4ee8d1e33ce75b8844fe7c39c7b60e1671.scope]# free -h<br>              total        used        free      shared  buff&#47;cache   available<br>Mem:           3.7G        213M        3.0G         33M        540M        3.2G<br>Swap:          3.9G          0B        3.9G","like_count":0,"discussions":[{"author":{"id":2070138,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/96/7a/8a14d008.jpg","nickname":"CY","note":"","ucode":"4AF98230985918","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":509821,"discussion_content":"@po,\n这个大值只是表示memory limit还没有设置","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1605757396,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":262390,"user_name":"hadoop_admin","can_delete":false,"product_type":"c1","uid":1300466,"ip_address":"","ucode":"7EAFA775505C7E","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJGMphabeneYXs9otkAtr67RvxJClDa7jPe7w8yExg4YaS2FGJruDKMj5yN1E90o6MFibnicH8gM0ibg/132","comment_is_top":false,"comment_ctime":1605705999,"is_pvip":false,"replies":[{"id":"95356","content":"@hadoop_admin， 最后还有一个 “.”<br><br>docker build -t wqz&#47;http:v1 -f .&#47;Dockerfile .","user_name":"作者回复","user_name_real":"CY","uid":"2070138","ctime":1605855949,"ip_address":"","comment_id":262390,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1605705999","product_id":100063801,"comment_content":"发现照葫芦画瓢还不能执行成功。。。[root@testarm01 test]# docker build -t wqz&#47;http:v1 -f .&#47;Dockerfile <br>&quot;docker build&quot; requires exactly 1 argument.<br>See &#39;docker build --help&#39;.<br><br>Usage:  docker build [OPTIONS] PATH | URL | -<br><br>Build an image from a Dockerfile，少了最后一个.","like_count":0,"discussions":[{"author":{"id":2070138,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/96/7a/8a14d008.jpg","nickname":"CY","note":"","ucode":"4AF98230985918","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":509815,"discussion_content":"@hadoop_admin， 最后还有一个 “.”\n\ndocker build -t wqz/http:v1 -f ./Dockerfile .","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1605855949,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":262360,"user_name":"Geek_35d340","can_delete":false,"product_type":"c1","uid":1526390,"ip_address":"","ucode":"B263B1D6EB32C9","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIzSeoGepp5mMfI4LEGOarEiaiaPCZBdT1rLfm5RrcjXyBecuSSJ1GF5SpG6KmMVZIKXO0khO6EHMhA/132","comment_is_top":false,"comment_ctime":1605699225,"is_pvip":false,"replies":[{"id":"95188","content":"这个问题，需要先看一下你的Linux OS和docker的版本。<br>cgroup v1 只是支持 Direct I&#47;O限流， cgroup v2可以支持 Buffered I&#47;O.<br>不过目前，除了fedora 31+ 缺省支持cgroup v2外，其他的OS缺省的都是cgroup v1, 需要自己配置。docker&#47;moby cgroup v2的代码应该已经合了，不过release出来的还不支持 v2。<br><br>生产中I&#47;O限制，取决于你的应用了，如果应用是Direct I&#47;O那么可以用docker<br>","user_name":"作者回复","user_name_real":"CY","uid":"2070138","ctime":1605710435,"ip_address":"","comment_id":262360,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1605699225","product_id":100063801,"comment_content":"您好老师，请教一个问题，docker的IO限额只是针对direct io有效吗？生产中如果相对磁盘IO进行限制使用docker能满足需求吗？","like_count":0,"discussions":[{"author":{"id":2070138,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/96/7a/8a14d008.jpg","nickname":"CY","note":"","ucode":"4AF98230985918","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":509801,"discussion_content":"这个问题，需要先看一下你的Linux OS和docker的版本。\ncgroup v1 只是支持 Direct I/O限流， cgroup v2可以支持 Buffered I/O.\n不过目前，除了fedora 31+ 缺省支持cgroup v2外，其他的OS缺省的都是cgroup v1, 需要自己配置。docker/moby cgroup v2的代码应该已经合了，不过release出来的还不支持 v2。\n\n生产中I/O限制，取决于你的应用了，如果应用是Direct I/O那么可以用docker\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1605710435,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":262165,"user_name":"Helios","can_delete":false,"product_type":"c1","uid":1380758,"ip_address":"","ucode":"BE6B98EE8F0D09","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKJrOl63enWXCRxN0SoucliclBme0qrRb19ATrWIOIvibKIz8UAuVgicBMibIVUznerHnjotI4dm6ibODA/132","comment_is_top":false,"comment_ctime":1605632453,"is_pvip":false,"replies":[{"id":"95142","content":"disk Buffered I&#47;O 限流需要Cgroup v2, 我在后面的课程里会介绍到。 ","user_name":"作者回复","user_name_real":"CY","uid":"2070138","ctime":1605669994,"ip_address":"","comment_id":262165,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1605632453","product_id":100063801,"comment_content":"请问老师，v1版本的资源协调能具体介绍下么，v2咋解决的呢，能说一下或者来个链接不～","like_count":0,"discussions":[{"author":{"id":2070138,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/96/7a/8a14d008.jpg","nickname":"CY","note":"","ucode":"4AF98230985918","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":509713,"discussion_content":"disk Buffered I/O 限流需要Cgroup v2, 我在后面的课程里会介绍到。 ","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1605669994,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":262160,"user_name":"宋晓明","can_delete":false,"product_type":"c1","uid":1146507,"ip_address":"","ucode":"DC866DCE2FBA9E","user_header":"https://static001.geekbang.org/account/avatar/00/11/7e/8b/3cc461b3.jpg","comment_is_top":false,"comment_ctime":1605628001,"is_pvip":false,"replies":[{"id":"95141","content":"@宋晓明<br>你说的登陆pod的方式是“kubectl exec”吗？ 还有“但平台之外的进入容器” 指的是什么方式？","user_name":"作者回复","user_name_real":"CY","uid":"2070138","ctime":1605669912,"ip_address":"","comment_id":262160,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1605628001","product_id":100063801,"comment_content":"老师容器命令审计有什么好的方案吗？ 因为我们目前在做k8s容器管理平台，有登录pod的需求，我只能捕获web socket流来记录命令，但平台之外的进入容器，我是无法捕获的","like_count":0,"discussions":[{"author":{"id":2070138,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/96/7a/8a14d008.jpg","nickname":"CY","note":"","ucode":"4AF98230985918","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":509712,"discussion_content":"@宋晓明\n你说的登陆pod的方式是“kubectl exec”吗？ 还有“但平台之外的进入容器” 指的是什么方式？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1605669912,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1146507,"avatar":"https://static001.geekbang.org/account/avatar/00/11/7e/8b/3cc461b3.jpg","nickname":"宋晓明","note":"","ucode":"DC866DCE2FBA9E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":327117,"discussion_content":"无论是webshell还是exec的方式，有什么好的命令审计方案吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1605749922,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":261858,"user_name":"蒋悦","can_delete":false,"product_type":"c1","uid":1490858,"ip_address":"","ucode":"E4DA0A5CE91F02","user_header":"https://static001.geekbang.org/account/avatar/00/16/bf/aa/32a6449c.jpg","comment_is_top":false,"comment_ctime":1605539623,"is_pvip":false,"replies":[{"id":"95069","content":"@蒋悦<br>&gt; 会使用虚拟内存吗？<br>我想你这里说的&quot;虚拟内存&quot;应该是指Linux的swap, 就是只系统的物理内存不足的时候，把暂时不active的内存内容交换到磁盘的swap空间。<br>容器是可以使用swap， 不过也会用一些问题，这个我在容器内存的这一章节里会介绍。","user_name":"作者回复","user_name_real":"CY","uid":"2070138","ctime":1605586406,"ip_address":"","comment_id":261858,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1605539623","product_id":100063801,"comment_content":"请问，docker 如果内存不足，会使用虚拟内存吗？我在公司机器上配置jvm内存和cgrpup 分配的内存总是不能很好的契合。感觉有些蹩脚","like_count":0,"discussions":[{"author":{"id":2070138,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/96/7a/8a14d008.jpg","nickname":"CY","note":"","ucode":"4AF98230985918","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":509642,"discussion_content":"@蒋悦\n&amp;gt; 会使用虚拟内存吗？\n我想你这里说的&amp;quot;虚拟内存&amp;quot;应该是指Linux的swap, 就是只系统的物理内存不足的时候，把暂时不active的内存内容交换到磁盘的swap空间。\n容器是可以使用swap， 不过也会用一些问题，这个我在容器内存的这一章节里会介绍。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1605586406,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1535604,"avatar":"https://static001.geekbang.org/account/avatar/00/17/6e/74/1bd3eef0.jpg","nickname":"夏商周","note":"","ucode":"1EBC83100FE82F","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":326720,"discussion_content":"jvm的cgroup 一般是jvm的内存加1G吧。我记得卖桃者讲过这个最佳实践。如果要精确的话，就根据自己的业务，监控观察。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1605667028,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":261820,"user_name":"JianXu","can_delete":false,"product_type":"c1","uid":1033219,"ip_address":"","ucode":"2A61BDBB573BDC","user_header":"https://static001.geekbang.org/account/avatar/00/0f/c4/03/f753fda7.jpg","comment_is_top":false,"comment_ctime":1605531793,"is_pvip":false,"replies":[{"id":"95023","content":"对的，需要装一台Linux虚拟机。<br><br>在这个容器课程中，每一讲里都会有一些小例子，所以需要你有一台安装有 Linux 的机器，或者用 VirtualBox 安装一个虚拟机来跑 Linux。Linux 的版本建议是 CentOS 8 或者是 Ubuntu 20.04。","user_name":"作者回复","user_name_real":"CY","uid":"2070138","ctime":1605538713,"ip_address":"","comment_id":261820,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1605531793","product_id":100063801,"comment_content":"CY 老师，好像在苹果笔记本上装了 docker 之后，我没有办法模拟课程里的内容。1.   ps -ef | grep httpd  什么返回也没有。   2.  我也找不到 cgroup 的路径 &#47;sys&#47;fs&#47;cgroup 目录不存在。 是不是一定要装一个虚拟机来做文章中的实验，请问推荐我装一个什么系统的虚拟机？","like_count":0,"discussions":[{"author":{"id":2070138,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/96/7a/8a14d008.jpg","nickname":"CY","note":"","ucode":"4AF98230985918","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":509620,"discussion_content":"对的，需要装一台Linux虚拟机。\n\n在这个容器课程中，每一讲里都会有一些小例子，所以需要你有一台安装有 Linux 的机器，或者用 VirtualBox 安装一个虚拟机来跑 Linux。Linux 的版本建议是 CentOS 8 或者是 Ubuntu 20.04。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1605538713,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1253954,"avatar":"https://static001.geekbang.org/account/avatar/00/13/22/42/79604ce6.jpg","nickname":"公众号：云原生Serverless","note":"","ucode":"B615BD756C7552","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":326921,"discussion_content":"Mac上的 Docker desktop实质上是个linux虚拟机，docker daemon和用户的容器运行在linux虚拟机里，mac上只是docker 的client。当然包括容器ip在mac也是访问不通的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1605702140,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]}]}