{"id":7563,"title":"10 | 架构设计流程：识别复杂度","content":"<p>从今天开始，我将分4期，结合复杂度来源和架构设计原则，通过一个模拟的设计场景“前浪微博”，和你一起看看在实践中究竟如何进行架构设计。今天先来看<span class=\"orange\">架构设计流程第1步：识别复杂度。</span></p>\n<h2 id=\"-1-\">架构设计第1步：识别复杂度</h2>\n<p>我在前面讲过，架构设计的本质目的是为了解决软件系统的复杂性，所以在我们设计架构时，首先就要分析系统的复杂性。只有正确分析出了系统的复杂性，后续的架构设计方案才不会偏离方向；否则，如果对系统的复杂性判断错误，即使后续的架构设计方案再完美再先进，都是南辕北辙，做的越好，错的越多、越离谱。</p>\n<p>例如，如果一个系统的复杂度本来是业务逻辑太复杂，功能耦合严重，架构师却设计了一个TPS达到50000/秒的高性能架构，即使这个架构最终的性能再优秀也没有任何意义，因为架构没有解决正确的复杂性问题。</p>\n<p>架构的复杂度主要来源于“高性能”“高可用”“可扩展”等几个方面，但架构师在具体判断复杂性的时候，不能生搬硬套，认为任何时候架构都必须同时满足这三方面的要求。实际上大部分场景下，复杂度只是其中的某一个，少数情况下包含其中两个，如果真的出现同时需要解决三个或者三个以上的复杂度，要么说明这个系统之前设计的有问题，要么可能就是架构师的判断出现了失误，即使真的认为要同时满足这三方面的要求，也必须要进行优先级排序。</p>\n<!-- [[[read_end]]] -->\n<p>例如，专栏前面提到过的“亿级用户平台”失败的案例，设计对标腾讯的QQ，按照腾讯QQ的用户量级和功能复杂度进行设计，高性能、高可用、可扩展、安全等技术一应俱全，一开始就设计出了40多个子系统，然后投入大量人力开发了将近1年时间才跌跌撞撞地正式上线。上线后发现之前的过度设计完全是多此一举，而且带来很多问题：</p>\n<ul>\n<li><p>系统复杂无比，运维效率低下，每次业务版本升级都需要十几个子系统同步升级，操作步骤复杂，容易出错，出错后回滚还可能带来二次问题。</p>\n</li>\n<li><p>每次版本开发和升级都需要十几个子系统配合，开发效率低下。</p>\n</li>\n<li><p>子系统数量太多，关系复杂，小问题不断，而且出问题后定位困难。</p>\n</li>\n<li><p>开始设计的号称TPS 50000/秒的系统，实际TPS连500都不到。</p>\n</li>\n</ul>\n<p>由于业务没有发展，最初的设计人员陆续离开，后来接手的团队，无奈又花了2年时间将系统重构，合并很多子系统，将原来40多个子系统合并成不到20个子系统，整个系统才逐步稳定下来。</p>\n<p>如果运气真的不好，接手了一个每个复杂度都存在问题的系统，那应该怎么办呢？答案是一个个来解决问题，不要幻想一次架构重构解决所有问题。例如这个“亿级用户平台”的案例，后来接手的团队其实面临几个主要的问题：系统稳定性不高，经常出各种莫名的小问题；系统子系统数量太多，系统关系复杂，开发效率低；不支持异地多活，机房级别的故障会导致业务整体不可用。如果同时要解决这些问题，就可能会面临这些困境：</p>\n<ul>\n<li><p>要做的事情太多，反而感觉无从下手。</p>\n</li>\n<li><p>设计方案本身太复杂，落地时间遥遥无期。</p>\n</li>\n<li><p>同一个方案要解决不同的复杂性，有的设计点是互相矛盾的。例如，要提升系统可用性，就需要将数据及时存储到硬盘上，而硬盘刷盘反过来又会影响系统性能。</p>\n</li>\n</ul>\n<p>因此，正确的做法是<strong>将主要的复杂度问题列出来，然后根据业务、技术、团队等综合情况进行排序，优先解决当前面临的最主要的复杂度问题</strong>。“亿级用户平台”这个案例，团队就优先选择将子系统的数量降下来，后来发现子系统数量降下来后，不但开发效率提升了，原来经常发生的小问题也基本消失了，于是团队再在这个基础上做了异地多活方案，也取得了非常好的效果。</p>\n<p>对于按照复杂度优先级解决的方式，存在一个普遍的担忧：如果按照优先级来解决复杂度，可能会出现解决了优先级排在前面的复杂度后，解决后续复杂度的方案需要将已经落地的方案推倒重来。这个担忧理论上是可能的，但现实中几乎是不可能出现的，原因在于软件系统的可塑性和易变性。对于同一个复杂度问题，软件系统的方案可以有多个，总是可以挑出综合来看性价比最高的方案。</p>\n<p>即使架构师决定要推倒重来，这个新的方案也必须能够同时解决已经被解决的复杂度问题，一般来说能够达到这种理想状态的方案基本都是依靠新技术的引入。例如，Hadoop能够将高可用、高性能、大容量三个大数据处理的复杂度问题同时解决。</p>\n<p>识别复杂度对架构师来说是一项挑战，因为原始的需求中并没有哪个地方会明确地说明复杂度在哪里，需要架构师在理解需求的基础上进行分析。有经验的架构师可能一看需求就知道复杂度大概在哪里；如果经验不足，那只能采取“排查法”，从不同的角度逐一进行分析。</p>\n<h2 id=\"-\">识别复杂度实战</h2>\n<p>我们假想一个创业公司，名称叫作“前浪微博”。前浪微博的业务发展很快，系统也越来越多，系统间协作的效率很低，例如：</p>\n<ul>\n<li><p>用户发一条微博后，微博子系统需要通知审核子系统进行审核，然后通知统计子系统进行统计，再通知广告子系统进行广告预测，接着通知消息子系统进行消息推送……一条微博有十几个通知，目前都是系统间通过接口调用的。每通知一个新系统，微博子系统就要设计接口、进行测试，效率很低，问题定位很麻烦，经常和其他子系统的技术人员产生分岐，微博子系统的开发人员不胜其烦。</p>\n</li>\n<li><p>用户等级达到VIP后，等级子系统要通知福利子系统进行奖品发放，要通知客服子系统安排专属服务人员，要通知商品子系统进行商品打折处理……等级子系统的开发人员也是不胜其烦。</p>\n</li>\n</ul>\n<p>新来的架构师在梳理这些问题时，结合自己的经验，敏锐地发现了这些问题背后的根源在于架构上各业务子系统强耦合，而消息队列系统正好可以完成子系统的解耦，于是提议要引入消息队列系统。经过一分析二讨论三开会四汇报五审批等一系列操作后，消息队列系统终于立项了。其他背景信息还有：</p>\n<ul>\n<li><p>中间件团队规模不大，大约6人左右。</p>\n</li>\n<li><p>中间件团队熟悉Java语言，但有一个新同事C/C++很牛。</p>\n</li>\n<li><p>开发平台是Linux，数据库是MySQL。</p>\n</li>\n<li><p>目前整个业务系统是单机房部署，没有双机房。</p>\n</li>\n</ul>\n<p>针对前浪微博的消息队列系统，采用“排查法”来分析复杂度，具体分析过程是：</p>\n<ul>\n<li>这个消息队列是否需要高性能</li>\n</ul>\n<p>我们假设前浪微博系统用户每天发送1000万条微博，那么微博子系统一天会产生1000万条消息，我们再假设平均一条消息有10个子系统读取，那么其他子系统读取的消息大约是1亿次。</p>\n<p>1000万和1亿看起来很吓人，但对于架构师来说，关注的不是一天的数据，而是1秒的数据，即TPS和QPS。我们将数据按照秒来计算，一天内平均每秒写入消息数为115条，每秒读取的消息数是1150条；再考虑系统的读写并不是完全平均的，设计的目标应该以峰值来计算。峰值一般取平均值的3倍，那么消息队列系统的TPS是345，QPS是3450，这个量级的数据意味着并不要求高性能。</p>\n<p>虽然根据当前业务规模计算的性能要求并不高，但业务会增长，因此系统设计需要考虑一定的性能余量。由于现在的基数较低，为了预留一定的系统容量应对后续业务的发展，我们将设计目标设定为峰值的4倍，因此最终的性能要求是：TPS为1380，QPS为13800。TPS为1380并不高，但QPS为13800已经比较高了，因此高性能读取是复杂度之一。注意，这里的设计目标设定为峰值的4倍是根据业务发展速度来预估的，不是固定为4倍，不同的业务可以是2倍，也可以是8倍，但一般不要设定在10倍以上，更不要一上来就按照100倍预估。</p>\n<ul>\n<li>这个消息队列是否需要高可用性</li>\n</ul>\n<p>对于微博子系统来说，如果消息丢了，导致没有审核，然后触犯了国家法律法规，则是非常严重的事情；对于等级子系统来说，如果用户达到相应等级后，系统没有给他奖品和专属服务，则VIP用户会很不满意，导致用户流失从而损失收入，虽然也比较关键，但没有审核子系统丢消息那么严重。</p>\n<p>综合来看，消息队列需要高可用性，包括消息写入、消息存储、消息读取都需要保证高可用性。</p>\n<ul>\n<li>这个消息队列是否需要高可扩展性</li>\n</ul>\n<p>消息队列的功能很明确，基本无须扩展，因此可扩展性不是这个消息队列的复杂度关键。</p>\n<p>为了方便理解，这里我只排查“高性能”“高可用”“扩展性”这3个复杂度，在实际应用中，不同的公司或者团队，可能还有一些其他方面的复杂度分析。例如，金融系统可能需要考虑安全性，有的公司会考虑成本等。</p>\n<p>综合分析下来，消息队列的复杂性主要体现在这几个方面：高性能消息读取、高可用消息写入、高可用消息存储、高可用消息读取。</p>\n<p>“前浪微博”的消息队列设计才刚完成第1步，专栏下一期会根据今天识别的复杂度设计备选方案，前面提到的场景在下一期还会用到哦。</p>\n<h2 id=\"-\">小结</h2>\n<p>今天我为你讲了架构设计流程的第一个步骤“识别复杂度”，并且通过一个模拟的场景讲述了“排查法”的具体分析方式，希望对你有所帮助。</p>\n<p>这就是今天的全部内容，留一道思考题给你吧。尝试用排查法分析一下你参与过或者研究过的系统的复杂度，然后与你以前的理解对比一下，看看是否有什么新发现？</p>\n<p>欢迎你把答案写到留言区，和我一起讨论。相信经过深度思考的回答，也会让你对知识的理解更加深刻。（编辑乱入：精彩的留言有机会获得丰厚福利哦！）</p>\n<p></p>\n","neighbors":{"left":{"article_title":"09 | 架构设计原则案例","id":7392},"right":{"article_title":"11 | 架构设计流程：设计备选方案","id":7800}},"comments":[{"had_liked":false,"id":9381,"user_name":"pk","can_delete":false,"product_type":"c1","uid":1008808,"ip_address":"","ucode":"6A768EFD23EFC4","user_header":"https://static001.geekbang.org/account/avatar/00/0f/64/a8/ad627315.jpg","comment_is_top":false,"comment_ctime":1526835232,"is_pvip":true,"replies":[{"id":"2832","content":"对于架构师来说，常见系统的性能量级需要烂熟于心，例如nginx负载均衡性能是3万左右，mc的读取性能5万左右，kafka号称百万级，zookeeper写入读取2万以上，http请求访问大概在2万左右。<br>具体的数值和机器配置以及测试案例有关，但大概的量级不会变化很大。<br><br>如果是业务系统，由于业务复杂度差异很大，有的每秒500请求可能就是高性能了，因此需要针对业务进行性能测试，确立性能基线，方便后续架构设计做比较。","user_name":"作者回复","comment_id":9381,"uid":"1098920","ip_address":"","utype":1,"ctime":1526872999,"user_name_real":"华仔@阿里游戏"}],"discussion_count":17,"race_medal":0,"score":"1491880486944","product_id":100006601,"comment_content":"文中有一句话：TPS 1780 并不高。这个结论怎么来的？作者经验丰富，见过很高的TPS。 但作为新手，如何衡量这个性能要求高还是不高呢？","like_count":348,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":418051,"discussion_content":"对于架构师来说，常见系统的性能量级需要烂熟于心，例如nginx负载均衡性能是3万左右，mc的读取性能5万左右，kafka号称百万级，zookeeper写入读取2万以上，http请求访问大概在2万左右。\n具体的数值和机器配置以及测试案例有关，但大概的量级不会变化很大。\n\n如果是业务系统，由于业务复杂度差异很大，有的每秒500请求可能就是高性能了，因此需要针对业务进行性能测试，确立性能基线，方便后续架构设计做比较。","likes_number":18,"is_delete":false,"is_hidden":false,"ctime":1526872999,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":4,"child_discussions":[{"author":{"id":2051293,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/4c/dd/c6035349.jpg","nickname":"Bumblebee","note":"","ucode":"B879C8A511D08D","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":541135,"discussion_content":"mark\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1640264370,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":418051,"ip_address":""},"score":541135,"extra":""},{"author":{"id":1303912,"avatar":"https://static001.geekbang.org/account/avatar/00/13/e5/68/e7287bfe.jpg","nickname":"沐沐的橙子","note":"","ucode":"93B5D3209FB2EB","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":585188,"discussion_content":"m","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1661391839,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":418051,"ip_address":"浙江"},"score":585188,"extra":""},{"author":{"id":1437867,"avatar":"https://static001.geekbang.org/account/avatar/00/15/f0/ab/94f50aeb.jpg","nickname":"楚疯子","note":"","ucode":"4B674DFCBED85E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":588106,"discussion_content":"mark","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1663557268,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":418051,"ip_address":"浙江"},"score":588106,"extra":""}]},{"author":{"id":1015754,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/7f/ca/ea85bfdd.jpg","nickname":"helloworld","note":"","ucode":"00DF2FEC58D2E6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":332522,"discussion_content":"首先老师的经验很丰富，但是还是想给老师提个建议，涉及到技术术语相关的，尤其是英文还是别用缩写的吧，我作为一个技术小白，老师所说呢mc指的啥？Memcached？","likes_number":6,"is_delete":false,"is_hidden":false,"ctime":1607247836,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1150190,"avatar":"https://static001.geekbang.org/account/avatar/00/11/8c/ee/5bd478b9.jpg","nickname":"贺敏Minbo","note":"","ucode":"0F7581EB6EE1E3","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":22009,"discussion_content":"这个值是指qps吗？","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1569559998,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1187577,"avatar":"https://static001.geekbang.org/account/avatar/00/12/1e/f9/bfb54326.jpg","nickname":"狮锅艺","note":"","ucode":"1B4AD130F9D0CA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1150190,"avatar":"https://static001.geekbang.org/account/avatar/00/11/8c/ee/5bd478b9.jpg","nickname":"贺敏Minbo","note":"","ucode":"0F7581EB6EE1E3","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":277611,"discussion_content":"我觉得是的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1591081337,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":22009,"ip_address":""},"score":277611,"extra":""}]},{"author":{"id":1475843,"avatar":"https://static001.geekbang.org/account/avatar/00/16/85/03/78275758.jpg","nickname":"清风徐徐","note":"","ucode":"098212AD349708","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":580041,"discussion_content":"mark","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1657845538,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1250922,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIzGGthScz54sECZJKX3lgyjCATkgrvSt5N3eOsYB34jibCr3SkAX88QaZ5IVmME9Ec7VdkQGwRSPw/132","nickname":"哈哈哈","note":"","ucode":"8AC20A1C9C7DF8","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":578688,"discussion_content":"mark","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1656945347,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1245130,"avatar":"https://static001.geekbang.org/account/avatar/00/12/ff/ca/aeaa9558.jpg","nickname":"刘彦辉","note":"","ucode":"741E43E6410BA9","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":554962,"discussion_content":"mark","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1646701553,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1608085,"avatar":"https://static001.geekbang.org/account/avatar/00/18/89/95/622cec8d.jpg","nickname":"林逸舟","note":"","ucode":"46A7F77D248A2A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":543858,"discussion_content":"mark","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1641312821,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1012280,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/72/38/57a872e3.jpg","nickname":"耀","note":"","ucode":"9BB9029A91C3FD","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":411380,"discussion_content":"熟记于心\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1635912826,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1445744,"avatar":"https://static001.geekbang.org/account/avatar/00/16/0f/70/f59db672.jpg","nickname":"槑·先生","note":"","ucode":"897F0475592E3A","race_medal":2,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":409365,"discussion_content":"Mark一下","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1635426605,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1651441,"avatar":"https://static001.geekbang.org/account/avatar/00/19/32/f1/fd24d52b.jpg","nickname":"青禾qingh","note":"","ucode":"453FC435B03790","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":408962,"discussion_content":"mark","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1635346716,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1259156,"avatar":"https://static001.geekbang.org/account/avatar/00/13/36/94/0b969588.jpg","nickname":"青年祭司","note":"","ucode":"C88EDAE3FF09AE","race_medal":5,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":393023,"discussion_content":"mark","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1631231273,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1189765,"avatar":"https://static001.geekbang.org/account/avatar/00/12/27/85/06fbdeac.jpg","nickname":"Vincent","note":"","ucode":"F0A32C9210FF42","race_medal":1,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":389079,"discussion_content":"mark一下，性能量级，很有用","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1629110796,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":9295,"user_name":"公号-技术夜未眠","can_delete":false,"product_type":"c1","uid":1013683,"ip_address":"","ucode":"83825B57CBD952","user_header":"https://static001.geekbang.org/account/avatar/00/0f/77/b3/991f3f9b.jpg","comment_is_top":false,"comment_ctime":1526738833,"is_pvip":true,"discussion_count":6,"race_medal":0,"score":"370893926289","product_id":100006601,"comment_content":"识别复杂度心得<br><br>架构设计由需求所驱动，本质目的是为了解决软件系统的复杂性；为此，我们在进行架构设计时，需要以理解需求为前提，首要进行系统复杂性的分析。具体做法是：<br><br>（1）构建复杂度的来源清单——高性能、可用性、扩展性、安全、低成本、规模等。<br><br>（2）结合需求、技术、团队、资源等对上述复杂度逐一分析是否需要？是否关键？<br><br>“高性能”主要从软件系统未来的TPS、响应时间、服务器资源利用率等客观指标，也可以从用户的主观感受方面去考虑。<br><br>“可用性”主要从服务不中断等质量属性，符合行业政策、国家法规等方面去考虑。<br><br>“扩展性”则主要从功能需求的未来变更幅度等方面去考虑。<br><br>（3）按照上述的分析结论，得到复杂度按照优先级的排序清单，越是排在前面的复杂度，就越关键，就越优先解决。<br><br>需要特别注意的是：随着所处的业务阶段不同、外部的技术条件和环境的不同，得到的复杂度问题的优先级排序就会有所不同。一切皆变化。","like_count":87,"discussions":[{"author":{"id":1643366,"avatar":"https://static001.geekbang.org/account/avatar/00/19/13/66/bfa42cb0.jpg","nickname":"Hello World 工程师","note":"","ucode":"E5F694B63BD0C2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":23921,"discussion_content":"大哥，你能不能不要在这背书，要说就说说你的问题。你做过的架构遇到过的问题。几乎每次都看见你在这背书，有时候你背的书都比作者的文章长了。","likes_number":5,"is_delete":false,"is_hidden":false,"ctime":1569940393,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1053390,"avatar":"https://static001.geekbang.org/account/avatar/00/10/12/ce/a8c8b5e8.jpg","nickname":"Jason","note":"","ucode":"ABB3F1A63E102A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1643366,"avatar":"https://static001.geekbang.org/account/avatar/00/19/13/66/bfa42cb0.jpg","nickname":"Hello World 工程师","note":"","ucode":"E5F694B63BD0C2","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":45004,"discussion_content":"😂😂","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1572999831,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":23921,"ip_address":""},"score":45004,"extra":""},{"author":{"id":1120319,"avatar":"https://static001.geekbang.org/account/avatar/00/11/18/3f/7b33cd3c.jpg","nickname":"凌","note":"","ucode":"D0AA0C787EE004","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1643366,"avatar":"https://static001.geekbang.org/account/avatar/00/19/13/66/bfa42cb0.jpg","nickname":"Hello World 工程师","note":"","ucode":"E5F694B63BD0C2","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":530729,"discussion_content":"哈哈哈，同感。请大哥不要纸上谈兵了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1637135460,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":23921,"ip_address":""},"score":530729,"extra":"{\"user_type\":1}"}]},{"author":{"id":1153702,"avatar":"https://static001.geekbang.org/account/avatar/00/11/9a/a6/3bddb98c.jpg","nickname":"大叶枫","note":"","ucode":"224AC5533889AD","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":378686,"discussion_content":"课代表是起积极作用的。楼上的同学请坐下来谈一谈。。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1623334063,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1015754,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/7f/ca/ea85bfdd.jpg","nickname":"helloworld","note":"","ucode":"00DF2FEC58D2E6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":588681,"discussion_content":"稳","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1663997658,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"北京"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1018463,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/8a/5f/c60d0ffe.jpg","nickname":"硅谷居士","note":"","ucode":"BD3D3BA142F280","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":300764,"discussion_content":"硬广自己的公众号，你丫烦不烦","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1598259583,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":9291,"user_name":"XP","can_delete":false,"product_type":"c1","uid":1070172,"ip_address":"","ucode":"820FC9595FA646","user_header":"https://static001.geekbang.org/account/avatar/00/10/54/5c/6855e2d5.jpg","comment_is_top":false,"comment_ctime":1526733235,"is_pvip":false,"replies":[{"id":"2792","content":"应该是兄台水平高，所以觉得定位是扫盲，实际上很多人不知道这些内容，上网搜索也搜不到的","user_name":"作者回复","comment_id":9291,"uid":"1098920","ip_address":"","utype":1,"ctime":1526743382,"user_name_real":"华仔@阿里游戏"}],"discussion_count":7,"race_medal":0,"score":"345124116915","product_id":100006601,"comment_content":"感觉这个专栏定位是扫盲，留言的读者都是老司机","like_count":81,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":418020,"discussion_content":"应该是兄台水平高，所以觉得定位是扫盲，实际上很多人不知道这些内容，上网搜索也搜不到的","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1526743382,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1590610,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/B9vSOjMc2a86kYA8R5yDkVdFiaj2JeBZ1PuI9oUKhbnvuZwuibdUam6FTcGzDaiaFdk2GWJveUGhfCVpv4KaOdicoQ/132","nickname":"帝江","note":"","ucode":"93CBA4E4D05DA5","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":380738,"discussion_content":"同意作者的回复","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1624679621,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2550743,"avatar":"https://static001.geekbang.org/account/avatar/00/26/eb/d7/90391376.jpg","nickname":"if...else...","note":"","ucode":"D0565908C99695","race_medal":4,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":555583,"discussion_content":"没听过","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1646983114,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1073443,"avatar":"https://static001.geekbang.org/account/avatar/00/10/61/23/30d134cf.jpg","nickname":"Young","note":"","ucode":"075C0BBE20FD8C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":377767,"discussion_content":"同意作者的回复","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1622820155,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2406936,"avatar":"https://static001.geekbang.org/account/avatar/00/24/ba/18/61388e80.jpg","nickname":"西江秦时月","note":"","ucode":"F061A88C132D08","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":365341,"discussion_content":"同意作者的回复","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1617778778,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1044785,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/f1/31/5001390b.jpg","nickname":"Lonely绿豆蛙","note":"","ucode":"0862179B614974","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":332254,"discussion_content":"同意作者的回复","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1607132913,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1160192,"avatar":"https://static001.geekbang.org/account/avatar/00/11/b4/00/661fb98d.jpg","nickname":"追忆似水年华","note":"","ucode":"C1D7C0DD7E7411","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":310106,"discussion_content":"同意作者的回复","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1601619908,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":9369,"user_name":"云辉","can_delete":false,"product_type":"c1","uid":1103058,"ip_address":"","ucode":"0E67E8E8421294","user_header":"https://static001.geekbang.org/account/avatar/00/10/d4/d2/96dbfa5a.jpg","comment_is_top":false,"comment_ctime":1526824182,"is_pvip":false,"replies":[{"id":"2835","content":"架构师推动是主要的，架构师需要五项全能：技术，沟通，推动，管理，撕逼😃😃😃","user_name":"作者回复","comment_id":9369,"uid":"1098920","ip_address":"","utype":1,"ctime":1526873424,"user_name_real":"华仔@阿里游戏"}],"discussion_count":11,"race_medal":0,"score":"306469502198","product_id":100006601,"comment_content":"复杂度问题，还有是方案简单，但是沟通协调成本高，跨部门了，请问华仔，你们是自己推动，还是技术PMO推动。","like_count":71,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":418046,"discussion_content":"架构师推动是主要的，架构师需要五项全能：技术，沟通，推动，管理，撕逼😃😃😃","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1526873424,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":1,"child_discussions":[{"author":{"id":1107882,"avatar":"https://static001.geekbang.org/account/avatar/00/10/e7/aa/34a181ed.jpg","nickname":"Bryce","note":"","ucode":"4FD9C9560F49F2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":550201,"discussion_content":"撕逼有详细介绍方法么","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1644415649,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":418046,"ip_address":""},"score":550201,"extra":""}]},{"author":{"id":1926471,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83erqstKsb9keGmH2hwtiapCVWD6bpaGcsibZgkGbUoYyIFGqJRKbbibS82BhicjDpEc6Mwujbmic5PRibpWw/132","nickname":"张德坤","note":"","ucode":"DBCC762CF77EBD","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":551086,"discussion_content":"关键是撕逼能力","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1644894208,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1442605,"avatar":"https://static001.geekbang.org/account/avatar/00/16/03/2d/404627dc.jpg","nickname":"Anryg Zhun","note":"","ucode":"76DF8560BA9D14","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":289147,"discussion_content":"这五项总结的精辟","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1594005375,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1003452,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/4f/bc/501ce428.jpg","nickname":"年轮","note":"","ucode":"C70B8CD2FA0F54","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":585042,"discussion_content":"程序员的关注点，果然与众不同。架构师做管理，架构师的兼任的吧？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1661306120,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"浙江"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1073443,"avatar":"https://static001.geekbang.org/account/avatar/00/10/61/23/30d134cf.jpg","nickname":"Young","note":"","ucode":"075C0BBE20FD8C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":377768,"discussion_content":"这种五好架构师 是稀缺产品啊！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1622820335,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2406936,"avatar":"https://static001.geekbang.org/account/avatar/00/24/ba/18/61388e80.jpg","nickname":"西江秦时月","note":"","ucode":"F061A88C132D08","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":365342,"discussion_content":"那完蛋了，不会说话，撕不赢","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1617778853,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1272031,"avatar":"https://static001.geekbang.org/account/avatar/00/13/68/df/7653ed08.jpg","nickname":"^_^","note":"","ucode":"801738927EFA91","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":336677,"discussion_content":"技术、沟通、推动、管理、撕逼","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1608651630,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1317115,"avatar":"https://static001.geekbang.org/account/avatar/00/14/18/fb/c1334976.jpg","nickname":"王崧霁","note":"","ucode":"4F3284634293A8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":326259,"discussion_content":"立项推动","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1605572851,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1160192,"avatar":"https://static001.geekbang.org/account/avatar/00/11/b4/00/661fb98d.jpg","nickname":"追忆似水年华","note":"","ucode":"C1D7C0DD7E7411","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":310107,"discussion_content":"五项全能里面，后面四项都是和人打交道，哈哈","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1601619944,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1697475,"avatar":"https://static001.geekbang.org/account/avatar/00/19/e6/c3/2ce9c285.jpg","nickname":"葛新荣","note":"","ucode":"0A3F10E5832A34","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":52518,"discussion_content":"撕逼！，，，用打架不！哈哈","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574060275,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":9316,"user_name":"空档滑行","can_delete":false,"product_type":"c1","uid":1091611,"ip_address":"","ucode":"06A6A7F503FAA7","user_header":"https://static001.geekbang.org/account/avatar/00/10/a8/1b/ced1d171.jpg","comment_is_top":false,"comment_ctime":1526783977,"is_pvip":false,"replies":[{"id":"2803","content":"所以系统复杂度识别是非常重要的，也没那么容易","user_name":"作者回复","comment_id":9316,"uid":"1098920","ip_address":"","utype":1,"ctime":1526813149,"user_name_real":"华仔@阿里游戏"}],"discussion_count":3,"race_medal":0,"score":"160440573929","product_id":100006601,"comment_content":"说下之前改造的一个系统，当时是这个系统从其他系统同步数据，经过一整套流程后将数据拆解到本地库的各个业务表中。<br>原来的系统是一个单机多线程程序，到了大促的时候延时非常厉害，因为马上又要大促了，首先想到的是扩展性的问题，于是就做了无状态服务拆分，可以横向扩展。在这过程成因为要控制单个同步实体任务的并发在处理幂等性上也花很大的功夫。做完这个后，又对非关键流程做了消息解耦，提高主流程的处理速度。<br>系统上线后运行稳定，但是到了大促当日发现速度提升很有限，将机器扩展到10台速度只提升了2-3倍，而且数据库和应用压力都很小。<br>后来分析下来瓶颈竟然是在数据库中间件上。其他系统大量的慢sql导致中间件处排队严重。<br>现在想起来，其实还是改造前优先级没搞清楚，根据之前的经验就把问题归结到扩展性上，投入了大部分精力在扩展性和可用性上，而没有对原来单机系统的性能做完整的测试和评估。其实当时做一个单机程序的压测大概就可以判断出问题所在(改造过程中也发现老的程序确实有bug)。还有就是高性能的优先级远大于扩展性和可用性，因为这个系统重启的影响非常小。改造的时候过于理想化的，想做一个各个方面均衡完善的架构","like_count":37,"discussions":[{"author":{"id":2547758,"avatar":"","nickname":"Geek_fa4c11","note":"","ucode":"8624645B6B8ED1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":365461,"discussion_content":"说白了就是没找到毛病就开干，干完发现白干了","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1617803575,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":418027,"discussion_content":"所以系统复杂度识别是非常重要的，也没那么容易","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1526813149,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2547758,"avatar":"","nickname":"Geek_fa4c11","note":"","ucode":"8624645B6B8ED1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":365462,"discussion_content":"目标导向，这个意识很重要，时时刻刻要清楚，自己要干啥，自己在干啥","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1617803666,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":10570,"user_name":"三月沙@wecatch","can_delete":false,"product_type":"c1","uid":1034980,"ip_address":"","ucode":"16FEF6C74D24E3","user_header":"https://static001.geekbang.org/account/avatar/00/0f/ca/e4/f15a1cf0.jpg","comment_is_top":false,"comment_ctime":1527598989,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"126081650573","product_id":100006601,"comment_content":"专栏本身的牛逼之处在于系统化，相似概念其实在日常架构中已经多有涉及，但是专栏用自己独有的方法论浅显易懂的论述了这些概念以及它们的关系，值得在缺乏经验的团队广而告之","like_count":30,"discussions":[{"author":{"id":1015754,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/7f/ca/ea85bfdd.jpg","nickname":"helloworld","note":"","ucode":"00DF2FEC58D2E6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":588682,"discussion_content":"稳\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1663997847,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"北京"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":9223,"user_name":"herome","can_delete":false,"product_type":"c1","uid":1097654,"ip_address":"","ucode":"F00A539371C206","user_header":"https://static001.geekbang.org/account/avatar/00/10/bf/b6/ee3b4ef7.jpg","comment_is_top":false,"comment_ctime":1526695940,"is_pvip":true,"replies":[{"id":"2772","content":"试试设计模式的策略模式或者职责链模式","user_name":"作者回复","comment_id":9223,"uid":"1098920","ip_address":"","utype":1,"ctime":1526702597,"user_name_real":"华仔@阿里游戏"}],"discussion_count":3,"race_medal":0,"score":"104605911044","product_id":100006601,"comment_content":"最近在做一个平台化的crm系统，也就是公司各个业务线都可以接入 ，或者外面的业务线也能接入。但是我们在开发过程中，比如查看商家等级列表这个接口，以前所有的接入方，都是查看就是查看，但是有个主要对接方提出了个需求是，查看后如果不存在 就插入一个默认等级。，但是其他对接方没有这样的需求，也就说原接口不能变，如果没有其他接入方我直接修改原来的接口即可，根本不考虑兼容。类似的问题数不胜数， 我们每次要么是if else这种代码走不同的逻辑，要么是 新写个接口，现在我们的代码的维护已经很混乱了，一个简单的逻辑，如查看等级列表，我就要维护好几套接口，好几套逻辑。 有想过变成可配置化的，但是没有好的思路。华哥对这方面有好的建议吗？😂 ","like_count":24,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":417999,"discussion_content":"试试设计模式的策略模式或者职责链模式","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1526702597,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1616954,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/ODqoBdTKsL1jW4m72BZ0ibECEtWPq0N1tAIlbzjsq6mcJiavT2CKtx0ejpIqQdHbRXdMWH0I1jpI2ZiawFIkF1icsQ/132","nickname":"白中白","note":"","ucode":"95F9DABEBEFAAA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":299445,"discussion_content":"可以考虑配置规则（类似规则引擎）","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1597683001,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1015754,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/7f/ca/ea85bfdd.jpg","nickname":"helloworld","note":"","ucode":"00DF2FEC58D2E6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":588684,"discussion_content":"仰天一想，我感觉程序中的所有逻辑都可以用策略模式解决，代码的种种逻辑不就是各种策略吗","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1663997975,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"北京"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":9488,"user_name":"梅子黄时雨","can_delete":false,"product_type":"c1","uid":1015938,"ip_address":"","ucode":"9F788D09C2E9E7","user_header":"https://static001.geekbang.org/account/avatar/00/0f/80/82/3c21b30c.jpg","comment_is_top":false,"comment_ctime":1526907497,"is_pvip":false,"replies":[{"id":"2885","content":"可扩展","user_name":"作者回复","comment_id":9488,"uid":"1098920","ip_address":"","utype":1,"ctime":1526953596,"user_name_real":"华仔@阿里游戏"}],"discussion_count":3,"race_medal":0,"score":"91721220713","product_id":100006601,"comment_content":"微服务架构，是解决了什么复杂性问题呢","like_count":22,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":418085,"discussion_content":"可扩展","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1526953596,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1447569,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/WtHCCMoLJ2DvzqQwPYZyj2RlN7eibTLMHDMTSO4xIKjfKR1Eh9L98AMkkZY7FmegWyGLahRQJ5ibPzeeFtfpeSow/132","nickname":"脱缰的野马__","note":"","ucode":"D5F993E7232C61","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":304402,"discussion_content":"个人觉得除了老师说的可扩展性，还有就是降低了前一篇文章提到的简单原则里面的逻辑复杂度，所有功能都在一台机器上也就是通常说的单体服务，这会导致该系统服务越来越庞大，出现的一些问题在老师的上一篇文章也有罗列，而微服务的出现也就降低了或者规避了单体服务相关存在的问题，但是同时也会有结构复杂度提升所带来问题的的风险","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1599565707,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1336475,"avatar":"https://static001.geekbang.org/account/avatar/00/14/64/9b/0b578b08.jpg","nickname":"J.Smile","note":"","ucode":"C4D98DFDBF7584","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1447569,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/WtHCCMoLJ2DvzqQwPYZyj2RlN7eibTLMHDMTSO4xIKjfKR1Eh9L98AMkkZY7FmegWyGLahRQJ5ibPzeeFtfpeSow/132","nickname":"脱缰的野马__","note":"","ucode":"D5F993E7232C61","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":332740,"discussion_content":"嗯 你说的对","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1607329030,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":304402,"ip_address":""},"score":332740,"extra":""}]}]},{"had_liked":false,"id":10081,"user_name":"黑客悟理","can_delete":false,"product_type":"c1","uid":1087847,"ip_address":"","ucode":"FEAA623FAD4486","user_header":"https://static001.geekbang.org/account/avatar/00/10/99/67/9d3f3ceb.jpg","comment_is_top":false,"comment_ctime":1527264432,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"83131643056","product_id":100006601,"comment_content":"留言全是干货……","like_count":19},{"had_liked":false,"id":10856,"user_name":"joyafa","can_delete":false,"product_type":"c1","uid":1035371,"ip_address":"","ucode":"A2EB0E433B1919","user_header":"https://static001.geekbang.org/account/avatar/00/0f/cc/6b/7f66d425.jpg","comment_is_top":false,"comment_ctime":1527728805,"is_pvip":false,"replies":[{"id":"3493","content":"网关的性能可以参考nginx的性能，如果你们的测试数据和nginx做网关差异很大，那可能是并发模型甚至记日志这些不起眼的操作给拖慢了，如果差不多，那基本就是性能极限了","user_name":"作者回复","comment_id":10856,"uid":"1098920","ip_address":"","utype":1,"ctime":1527819790,"user_name_real":"华仔"}],"discussion_count":2,"race_medal":0,"score":"61657270949","product_id":100006601,"comment_content":"我现在做的是交易转发网关，性能瓶颈很大一部分也受上级券商网关影响，系统无状态，无数据库操作，因为涉及到交易，对可用性要求很高，需要能快速处理客户端的请求，经过多次压测，也没有排查出自身系统问题出在哪里，对系统压测，以及测试得到的数据该怎么分析，怎么找出问题所在？","like_count":14,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":418615,"discussion_content":"网关的性能可以参考nginx的性能，如果你们的测试数据和nginx做网关差异很大，那可能是并发模型甚至记日志这些不起眼的操作给拖慢了，如果差不多，那基本就是性能极限了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1527819790,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1015754,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/7f/ca/ea85bfdd.jpg","nickname":"helloworld","note":"","ucode":"00DF2FEC58D2E6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":588685,"discussion_content":"原来记录项目日志真的能拖慢项目的性能","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1663998073,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"北京"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":12437,"user_name":"renwotao","can_delete":false,"product_type":"c1","uid":1042503,"ip_address":"","ucode":"8054CA7EC0C8AB","user_header":"https://static001.geekbang.org/account/avatar/00/0f/e8/47/3e4a03ac.jpg","comment_is_top":false,"comment_ctime":1528820360,"is_pvip":false,"replies":[{"id":"4099","content":"日志压缩，采样，隔离","user_name":"作者回复","comment_id":12437,"uid":"1098920","ip_address":"","utype":1,"ctime":1528868659,"user_name_real":"华仔"}],"discussion_count":2,"race_medal":0,"score":"57363395208","product_id":100006601,"comment_content":"公司架构日志占了百分之二十的cpu，有什么好的解决方案吗","like_count":14,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":419256,"discussion_content":"日志压缩，采样，隔离","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1528868659,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1317115,"avatar":"https://static001.geekbang.org/account/avatar/00/14/18/fb/c1334976.jpg","nickname":"王崧霁","note":"","ucode":"4F3284634293A8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":326261,"discussion_content":"不必要日志不要打","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1605573148,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":9846,"user_name":"Sir Peng","can_delete":false,"product_type":"c1","uid":1115391,"ip_address":"","ucode":"371818B2A046D1","user_header":"https://static001.geekbang.org/account/avatar/00/11/04/ff/4ccc8168.jpg","comment_is_top":false,"comment_ctime":1527124219,"is_pvip":false,"replies":[{"id":"3071","content":"说服别人重构，选择方案等很多时候要撕逼😂😂","user_name":"作者回复","comment_id":9846,"uid":"1098920","ip_address":"","utype":1,"ctime":1527169376,"user_name_real":"华仔"}],"discussion_count":2,"race_medal":0,"score":"48771764475","product_id":100006601,"comment_content":"华仔，架构师要具备的五项全能中，&quot;撕逼&quot;能在哪种情况中得已体现？","like_count":11,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":418224,"discussion_content":"说服别人重构，选择方案等很多时候要撕逼😂😂","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1527169376,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1044785,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/f1/31/5001390b.jpg","nickname":"Lonely绿豆蛙","note":"","ucode":"0862179B614974","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":332257,"discussion_content":"撕逼不一定是贬义，应该叫“据理力争，以技服人”。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1607133047,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":274833,"user_name":"prader26","can_delete":false,"product_type":"c1","uid":1433707,"ip_address":"","ucode":"5EFFFC374ADECE","user_header":"https://static001.geekbang.org/account/avatar/00/15/e0/6b/f61d7466.jpg","comment_is_top":false,"comment_ctime":1611193442,"is_pvip":false,"replies":[{"id":"99724","content":"这种算demo系统，能跑起来就可以了，关键是要把界面做的漂亮😂","user_name":"作者回复","comment_id":274833,"uid":"1098920","ip_address":"","utype":1,"ctime":1611197542,"user_name_real":"华仔"}],"discussion_count":1,"race_medal":0,"score":"44560866402","product_id":100006601,"comment_content":"做了一个很小的系统，就给几个领导看，所以写代码的时候，没注意加锁，和并发。所有的功能都在一个系统里，只求速度。。。","like_count":10,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":514138,"discussion_content":"这种算demo系统，能跑起来就可以了，关键是要把界面做的漂亮😂","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1611197542,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":49233,"user_name":"allen.huang","can_delete":false,"product_type":"c1","uid":1119789,"ip_address":"","ucode":"3D1F0996CE65C8","user_header":"https://static001.geekbang.org/account/avatar/00/11/16/2d/2753369a.jpg","comment_is_top":false,"comment_ctime":1544628004,"is_pvip":false,"replies":[{"id":"17762","content":"架构师必须能说得动老板","user_name":"作者回复","comment_id":49233,"uid":"1098920","ip_address":"","utype":1,"ctime":1544679562,"user_name_real":"华仔"}],"discussion_count":3,"race_medal":0,"score":"44494300964","product_id":100006601,"comment_content":"识别复杂度方面比较难，如果判断错误，容易误入歧途。像我们公司是属于创业型公司，业务迭代很快，前面两三年都在堆业务，并且所有的业务都在一个系统上，web服务器一台，数据库RDS一台，那个时候流量并不大，公司高层没有重视，不考虑优化，还是以发展业务为主。<br><br>今年业务量起来了之后才重视，流量会对现有系统有所影响。于是讨论出最终方案，重新起一套框架，来重构，原来的老系统继续使用。结果实施发现周期重新起一套开发时间上，公司等不及，开发了3个月都没有出来就胎死腹中了。<br><br>但那个时候开始老系统经常频繁出问题了，有时是web请求量比较大WEB服务器CPU 100%，WEB服务器都登录不进去。有时是数据库操作比较频繁，数据库100%。只能重启web服务器来临时应对，有一次业务高峰更尴尬，连服务器重启都没有用，一重启流量一进来又100%。<br><br>这个时候通过分析web请求日志，慢查询日志来进行分析，然后来制定出优化方案，在原有的老系统上来进行优化。<br><br>但推进这个优化的过程中，也是比较费劲，研发人员比较害怕在老的系统上来进行优化了，怕优化后用不了，这好比是在给飞行中的飞机加油。后面通过领导的支持下达，通过分析报告的结果，把老系统的服务由简单到难逐步拆分：<br>1. 先拆分的是静态资源放到OSS上并做成CDN化。<br>2. 将慢查询进行优化，能利用缓存的，用缓存，大表的联表查询，拆分成单表查询。<br>3. 将轮询在调用接口的迁移到其他服务器，将一些轮询的计划任务服务也迁移到其他服务器。<br>这样子系统算是稳定下来，但要走的路还很长。<br><br>我写了这些事故的经历，就是在互联网公司成长过程中都会经历，对于技术复杂度的判断很重要，要是一开始我们就打算先从老系统来进行优化，就会避免一些事故的发生，还有就是技术上的推动，还是需要由公司领导的大力支持，首先要说服领导，说服老板，上通下达才行。","like_count":11,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":432544,"discussion_content":"架构师必须能说得动老板","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1544679562,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1537410,"avatar":"https://static001.geekbang.org/account/avatar/00/17/75/82/72398a60.jpg","nickname":"?","note":"","ucode":"FD467758BFDD6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":383529,"discussion_content":"有的时候故障驱动技术演进。。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1626146950,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1015754,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/7f/ca/ea85bfdd.jpg","nickname":"helloworld","note":"","ucode":"00DF2FEC58D2E6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":588687,"discussion_content":"通常情况下新开一个新的项目对老项目进行重构的方式是行不通的，时间上，成本上等；最贴合实际的做法还是得分析老系统的性能瓶颈所在，然后分优先级逐步优化","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1663998397,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"北京"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":13505,"user_name":"huayu00","can_delete":false,"product_type":"c1","uid":1112169,"ip_address":"","ucode":"069EDEFFB18F4A","user_header":"","comment_is_top":false,"comment_ctime":1529710169,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"44479383129","product_id":100006601,"comment_content":"“http请求访问大概在2万左右”<br>请问这个是指什么，数字怎么得来的？","like_count":11,"discussions":[{"author":{"id":1064149,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/2PtNr4sjKLYNnibicnwWcZicmQbTguUK9ZaCVBLYmiaSYFRjRrUP08jHO9N7KB2adDw87ywccexMJh8yCQ84q5gEzg/132","nickname":"阿固","note":"","ucode":"F16B99FED58993","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":333639,"discussion_content":"这个可能是笔误了，可能是指httpd（apache）服务器","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1607584457,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":9303,"user_name":"彡工鸟","can_delete":false,"product_type":"c1","uid":1108881,"ip_address":"","ucode":"37867BF7151F33","user_header":"https://static001.geekbang.org/account/avatar/00/10/eb/91/12612612.jpg","comment_is_top":false,"comment_ctime":1526749432,"is_pvip":false,"replies":[{"id":"2796","content":"这是一种思路，比较适合业务系统，中间件系统就不太适合这种方式","user_name":"作者回复","comment_id":9303,"uid":"1098920","ip_address":"","utype":1,"ctime":1526773799,"user_name_real":"华仔@阿里游戏"}],"discussion_count":1,"race_medal":0,"score":"40181455096","product_id":100006601,"comment_content":"个人看法，在顶层上看一个系统，确实会有高可用，高性能，可扩展等等多个复杂度的要求，而且可能还真的无法分出个优先级。这样就落到都要抓，都要硬，最终无法分出个主次，导致设计四不像的系统出来。针对这种情况，是否就应该动用子系统一说，将系统拆分到一定的粒度，可以聚焦到一个，或者至多两个复杂度上？而子系统自然有子系统的架构设计，技术选型来针对性地解决其复杂度问题","like_count":10,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":418023,"discussion_content":"这是一种思路，比较适合业务系统，中间件系统就不太适合这种方式","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1526773799,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":237150,"user_name":"慎独明强","can_delete":false,"product_type":"c1","uid":1965699,"ip_address":"","ucode":"DC2F7F2C0C8F60","user_header":"https://static001.geekbang.org/account/avatar/00/1d/fe/83/df562574.jpg","comment_is_top":false,"comment_ctime":1595690366,"is_pvip":false,"replies":[{"id":"87777","content":"非常好的分析👍","user_name":"作者回复","comment_id":237150,"uid":"1098920","ip_address":"","utype":1,"ctime":1595898039,"user_name_real":"华仔"}],"discussion_count":1,"race_medal":0,"score":"23070526846","product_id":100006601,"comment_content":"如何去分析自己系统的复杂度，那么项目中的痛点应该就是自己项目复杂度所在。我之前负责订单履约系统，由于订单是交易平台通过mq推送给我们，高并发不是我们系统的复杂度所在。订单拆单与发货都是自己内部系统，高性能也不是我们系统复杂度。但是我们的高可用影响到订单发货和客服满意度，订单系统是供应链的源头，与很多部门都有交互。响应业务快速性，业务复杂度和高可用是我们系统复杂度所在。按这样排序，业务复杂度，高可用，高性能。","like_count":5,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":502315,"discussion_content":"非常好的分析👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1595898039,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":9450,"user_name":"MichaelJY","can_delete":false,"product_type":"c1","uid":1107013,"ip_address":"","ucode":"9085773CA93936","user_header":"https://static001.geekbang.org/account/avatar/00/10/e4/45/846f8441.jpg","comment_is_top":false,"comment_ctime":1526879327,"is_pvip":false,"replies":[{"id":"2838","content":"优先级需要根据业务和团队综合判断，不是单纯技术角度判断。<br>例如，如果停服影响不大的话，那2可能优于4；<br>如果历史债务导致投入很大，那3可能优于2","user_name":"作者回复","comment_id":9450,"uid":"1098920","ip_address":"","utype":1,"ctime":1526882550,"user_name_real":"华仔@阿里游戏"}],"discussion_count":1,"race_medal":0,"score":"23001715807","product_id":100006601,"comment_content":"现在遇到这样的系统:<br>1.前后端没有分离，因为业务情况需要多窗口显示，然后是通过div分隔的，在多窗口的使用下会出现id冲突或者在a窗口的操作影响到b窗口的数据<br>2.系统分为三个子系统，业务子系统处理具体业务，公共子系统处理类似登录，权限，审批等，定时任务负责调度，三者之间通过http交互，没有集群，现在业务子系统耦合比较严重。业务子系统大概可以分为接入层，业务处理层，结算层，现在是一整个系统，经常发现结算层的逻辑变更，会导致接入层和业务层不可用<br>3.因为历史原因，对于数据校验方面做的比较差，经常出现数据格式问题，当然新增代码已经处理了这些，但是历史债务比较严重，且业务迭代很快<br>4.整个系统是单点，所有发版升级都会停服<br><br>我觉得最急的是4 &gt;2 &gt;1 &gt;3，不知道对不对<br>","like_count":5,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":418072,"discussion_content":"优先级需要根据业务和团队综合判断，不是单纯技术角度判断。\n例如，如果停服影响不大的话，那2可能优于4；\n如果历史债务导致投入很大，那3可能优于2","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1526882550,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":18278,"user_name":"xiaoya","can_delete":false,"product_type":"c1","uid":1189112,"ip_address":"","ucode":"8BAD384E6AA26C","user_header":"","comment_is_top":false,"comment_ctime":1533225454,"is_pvip":false,"replies":[{"id":"6445","content":"我也是从新手过来的，坚持就有收获，不要求一次就全部听懂了，","user_name":"作者回复","comment_id":18278,"uid":"1098920","ip_address":"","utype":1,"ctime":1533342378,"user_name_real":"华仔"}],"discussion_count":4,"race_medal":0,"score":"18713094638","product_id":100006601,"comment_content":"我是个新手，听一遍就忘了。记住的不多😭不开心。是我接触的太少不太重视这些吧，这些很关键?这么多理论的东西，嗨，我心性太差了。一口老想都吃掉，结果都不好。认识自己驾驭自己，一点点","like_count":4,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":421454,"discussion_content":"我也是从新手过来的，坚持就有收获，不要求一次就全部听懂了，","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1533342378,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1447569,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/WtHCCMoLJ2DvzqQwPYZyj2RlN7eibTLMHDMTSO4xIKjfKR1Eh9L98AMkkZY7FmegWyGLahRQJ5ibPzeeFtfpeSow/132","nickname":"脱缰的野马__","note":"","ucode":"D5F993E7232C61","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":304404,"discussion_content":"我觉得吧，这种偏理论类并且不是很容易得到实践的知识，千万别死记硬背，阅读的过程中多停下来思考，琢磨，结合已有的经历尝试简单的应用，还是要多思考！在自己的脑海里","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1599566111,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1371360,"avatar":"https://static001.geekbang.org/account/avatar/00/14/ec/e0/d072d6f0.jpg","nickname":"bigdudo","note":"","ucode":"5938710D7C1149","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":548873,"discussion_content":"我会反复读，然后把觉得重要的记到笔记上，记到笔记上的内容可能就相对少和精简些。基本上一眼就能看过去的。闲来无事就翻出来看看，回忆下之前的思路","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1643429124,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1965699,"avatar":"https://static001.geekbang.org/account/avatar/00/1d/fe/83/df562574.jpg","nickname":"慎独明强","note":"","ucode":"DC2F7F2C0C8F60","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":293859,"discussion_content":"\n其实都差不多，都是积累起来的。在前辈的分享上，开拓自己的视野，强化自己的潜意识，或许哪一天就顿悟了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1595689994,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":9494,"user_name":"秋天","can_delete":false,"product_type":"c1","uid":1057056,"ip_address":"","ucode":"A7E1D953EF7E17","user_header":"https://static001.geekbang.org/account/avatar/00/10/21/20/1299e137.jpg","comment_is_top":false,"comment_ctime":1526910561,"is_pvip":true,"replies":[{"id":"2884","content":"我的专栏就是呢，架构设计目的，架构设计原则，架构设计流程……都是架构设计系统化的技能点","user_name":"作者回复","comment_id":9494,"uid":"1098920","ip_address":"","utype":1,"ctime":1526953586,"user_name_real":"华仔@阿里游戏"}],"discussion_count":1,"race_medal":0,"score":"18706779745","product_id":100006601,"comment_content":"有没有系统提升架构思维的资料推荐，感觉还没有打破那个灵感，请大神指教？","like_count":4,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":418087,"discussion_content":"我的专栏就是呢，架构设计目的，架构设计原则，架构设计流程……都是架构设计系统化的技能点","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1526953586,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":71749,"user_name":"冰封无名","can_delete":false,"product_type":"c1","uid":1081310,"ip_address":"","ucode":"EB212C047FD415","user_header":"https://static001.geekbang.org/account/avatar/00/10/7f/de/7d17e15b.jpg","comment_is_top":false,"comment_ctime":1551425515,"is_pvip":false,"replies":[{"id":"27906","content":"业务复杂也是复杂度表现之一，常见的方法就是拆分业务来设计","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1552624675,"ip_address":"","comment_id":71749,"utype":1}],"discussion_count":2,"race_medal":1,"score":"14436327403","product_id":100006601,"comment_content":"很多时候碰到的都是业务复杂，但这“三高”要求不那么严格的系统。没碰到“三高”系统，如何更有效的思考架构的设计？请大牛指点一下！","like_count":3,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":441311,"discussion_content":"业务复杂也是复杂度表现之一，常见的方法就是拆分业务来设计","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1552624675,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2004683,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/96/cb/8ce4a3cd.jpg","nickname":"Cloud.","note":"","ucode":"FF61D18EA17E67","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":289220,"discussion_content":"业务复杂其实就是可扩展性吧，如果可扩展性都不要求的话，这个系统怎么设计其实无所谓的，开发完成就行了，重点需要考虑的反而是分工了，分工的话重点就是关注业务边界划分。不过业务边界划分好了的话，系统可扩展性也就上来了，所以感觉业务复杂就是可扩展性。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1594029275,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":13719,"user_name":"何晓亮","can_delete":false,"product_type":"c1","uid":1108446,"ip_address":"","ucode":"95198047A7E6F8","user_header":"https://static001.geekbang.org/account/avatar/00/10/e9/de/40511e3a.jpg","comment_is_top":false,"comment_ctime":1529970687,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"14414872575","product_id":100006601,"comment_content":"留言中提到了常见系统性能量级，问一下windows系统的量是怎么样的？","like_count":3,"discussions":[{"author":{"id":1038841,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/d9/f9/f5d0dbc8.jpg","nickname":"吕凯 🌴","note":"","ucode":"46A355ED5E67F0","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":567324,"discussion_content":"单机系统没有这些衡量指标","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1650888627,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":10161,"user_name":"itperson","can_delete":false,"product_type":"c1","uid":1008401,"ip_address":"","ucode":"1363D71C84CF8B","user_header":"https://static001.geekbang.org/account/avatar/00/0f/63/11/ea921534.jpg","comment_is_top":false,"comment_ctime":1527315589,"is_pvip":false,"replies":[{"id":"3165","content":"从需求出发，如果你们的系统现在只能支持每秒处理1000个请求，那么需求要求每秒2000就是高性能了，高可用也类似，电信行业要求5个9，互联网核心业务要求4个9，企业应用可能3个9也够了","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1527374715,"ip_address":"","comment_id":10161,"utype":1}],"discussion_count":1,"race_medal":0,"score":"14412217477","product_id":100006601,"comment_content":"以前的系统基本不需要考虑高可用和高性能 但我有个问题在于高性能和高可用具体是否有衡量标准 请在后面的课程详细讲解一下 自己如何证明验证高可用和高性能","like_count":3,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":418367,"discussion_content":"从需求出发，如果你们的系统现在只能支持每秒处理1000个请求，那么需求要求每秒2000就是高性能了，高可用也类似，电信行业要求5个9，互联网核心业务要求4个9，企业应用可能3个9也够了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1527374715,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":9662,"user_name":"Ryan Feng","can_delete":false,"product_type":"c1","uid":1006588,"ip_address":"","ucode":"DFFC358671DD45","user_header":"https://static001.geekbang.org/account/avatar/00/0f/5b/fc/da52e7df.jpg","comment_is_top":false,"comment_ctime":1527023267,"is_pvip":false,"replies":[{"id":"2995","content":"这是假设的，具体业务具体分析，可以用压测工具测试系统的能力，用监控系统监控线上的实际数值","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1527055947,"ip_address":"","comment_id":9662,"utype":1}],"discussion_count":1,"race_medal":0,"score":"14411925155","product_id":100006601,"comment_content":"tps、qps一般用什么测？我看你的tps是qps十倍，意思就是多少子系统就是多少倍？这个数据不考虑网络通讯和系统复杂度差异吗？","like_count":3,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":418154,"discussion_content":"这是假设的，具体业务具体分析，可以用压测工具测试系统的能力，用监控系统监控线上的实际数值","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1527055947,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":9372,"user_name":"DullBird","can_delete":false,"product_type":"c1","uid":1110494,"ip_address":"","ucode":"80E2FD5F9687CB","user_header":"https://static001.geekbang.org/account/avatar/00/10/f1/de/3ebcbb3f.jpg","comment_is_top":false,"comment_ctime":1526825682,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"14411727570","product_id":100006601,"comment_content":"    分析现在做的采集系统，主要是控制单系统融合了（前端业务，任务调度,分发，自实现系统内缓存，采集机状态管理，数据入库功能）。采集机主要实现了所有的采集功能，采集机是集群的。业务性能要求比较低，页面基本没什么人访问，后台业务主要分采集项，频繁的一点就任务A是10分钟1W个任务（不间断），任务B是4小时内完成2W个任务，分析业务不是瓶颈，但是2W个任务由于依赖客户提供的登入方式实际采集耗时在10小时左右（这点问题应该需要协调客户处理或者换方式实现）。<br>    主要复杂度在于系统的耦合性，控制单系统功能太多了，想添加一个任务逻辑的复杂模块，很难加。想拆分成子系统（分为前端子系统，缓存子系统，采集机管理子系统，数据入库子系统，任务调度子系统。前二个优先级比较高，后面的可以等需要的时候拆分），把单系统内的调用替换成rpc框架的系统间调用，但是系统间调用比原来的调用多了一种超时状态。原来的系统状态性比较强，如果远程调用的不确定性，可能需要业务改为无状态的。那么需要改动的量比较大。（rpc调用异常的处理方式了结的比较少，希望老师给点指点，谢谢）。<br>    其次复杂度在于高可用，我们的系统宕机时间没有那么严格，但是需要在一定时间内切换，30分钟即可。采集机集群通过任务轮询，已经实现了高可用。但是控制单系统做高可用有一个问题是单系统实现了内部的缓存，如果不把缓存抽离出来就会有一致性问题。然后实现主备，单节点可用，出了故障另外一台设备升级为主节点，通过协商的方式。（脑裂的情况暂不考虑，客户的内网相对稳定。通过监控人工来恢复。）","like_count":3},{"had_liked":false,"id":9213,"user_name":"约书亚","can_delete":false,"product_type":"c1","uid":1046714,"ip_address":"","ucode":"81EA27ADD9EC1A","user_header":"https://static001.geekbang.org/account/avatar/00/0f/f8/ba/14e05601.jpg","comment_is_top":false,"comment_ctime":1526694041,"is_pvip":false,"replies":[{"id":"2776","content":"经验和技巧都不可少，行业背景知识也很重要","user_name":"作者回复","user_name_real":"华仔@阿里游戏","uid":"1098920","ctime":1526702852,"ip_address":"","comment_id":9213,"utype":1}],"discussion_count":2,"race_medal":0,"score":"14411595929","product_id":100006601,"comment_content":"疑问:1 文中描述架构师还是凭借老司机经验发现系统的问题在于耦合度 2 tps qps的表示的意思已经被错用，正确的理解是什么？文中看来t指外部产生的事务？<br><br>","like_count":3,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":417995,"discussion_content":"经验和技巧都不可少，行业背景知识也很重要","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1526702852,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1336475,"avatar":"https://static001.geekbang.org/account/avatar/00/14/64/9b/0b578b08.jpg","nickname":"J.Smile","note":"","ucode":"C4D98DFDBF7584","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":171969,"discussion_content":"聚焦高并发啊哈哈","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1581762311,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":272964,"user_name":"关汉聪","can_delete":false,"product_type":"c1","uid":1645439,"ip_address":"","ucode":"99211B1B615AA0","user_header":"https://static001.geekbang.org/account/avatar/00/19/1b/7f/9698e2bd.jpg","comment_is_top":false,"comment_ctime":1610369199,"is_pvip":false,"replies":[{"id":"98952","content":"因为单机支撑13800 QPS是比较难的，要考虑集群方案，kafka 百万级也是集群性能","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1610443086,"ip_address":"","comment_id":272964,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10200303791","product_id":100006601,"comment_content":"老师，kafka号称百万级，动辄几万几十万的QPS，这里QPS 只有 13800，为什么说“ 已经比较高了，因此高性能读取是复杂度之一” 呢？","like_count":2,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":513439,"discussion_content":"因为单机支撑13800 QPS是比较难的，要考虑集群方案，kafka 百万级也是集群性能","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1610443086,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":183023,"user_name":"谭方敏","can_delete":false,"product_type":"c1","uid":1710960,"ip_address":"","ucode":"728DC7ECB7C902","user_header":"https://static001.geekbang.org/account/avatar/00/1a/1b/70/547042ee.jpg","comment_is_top":false,"comment_ctime":1582932928,"is_pvip":false,"replies":[{"id":"72868","content":"很好的案例","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1584426565,"ip_address":"","comment_id":183023,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10172867520","product_id":100006601,"comment_content":"从近期负责的自建物联网平台建设和优化的工作中，也感觉到识别复杂度的重要性，之前我们最原始的感觉是系统高性能，高可用是最大的复杂度，于是我们在这个事情上面孜孜不倦，不断追求高性能，某些关键接口tps从不到1000优化到8000，在大家都觉真正解决问题了，但其实发展效果不大。<br>后来冷静下来分析，以前的高性能不过是整个业务系统的局部优化而已，而这样是没法发挥整体性能最大的，而系统的复杂度应该关注在业务复杂度上面，针对工作业务流设计（流程，架构）等。<br>比如对我们来说在没有第三方厂商接入现有自建物联网平台的情况下，那么物联网平台就不能要求那么高的独立性，需要整合公司业务进去考虑，而不仅仅只是个通道，做个linker而已，这样让自建物联网平台和业务服务器之间交互变得复杂，而且对于部分业务数据无法保证数据一致性。最最重要的是工作业务流非常长，容易出现问题后无法定位到问题，因为大家都习惯了在局部点找问题了。<br>跟他们老大们反映了这些问题，但是他们觉得业务流设计以及业务架构设计没问题，罗马大厦已经建成了，而要做的只剩下","like_count":2,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":485533,"discussion_content":"很好的案例","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584426565,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":118259,"user_name":"小楼一夜听春雨","can_delete":false,"product_type":"c1","uid":1013036,"ip_address":"","ucode":"64ADD745A5DDC0","user_header":"https://static001.geekbang.org/account/avatar/00/0f/75/2c/df8aaf20.jpg","comment_is_top":false,"comment_ctime":1564303930,"is_pvip":false,"replies":[{"id":"43765","content":"需要区分，读写操作要求不一样，例如支撑读操作可以用缓存","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1564568202,"ip_address":"","comment_id":118259,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10154238522","product_id":100006601,"comment_content":"这里把TPS和QPS分开来说，有什么考虑？TPS和QPS分别对应写、读（查询访问）？我们实际过程中，有的时候并没有特别去区分两者吧。","like_count":2,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":460328,"discussion_content":"需要区分，读写操作要求不一样，例如支撑读操作可以用缓存","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1564568202,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":92753,"user_name":"郑佳宁","can_delete":false,"product_type":"c1","uid":1389623,"ip_address":"","ucode":"D4221F5BF8EBD0","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eqsFicCU21tKou4mFvfy5fOn9sfNYHNDfna8eozeVOLGs58gcAu8v2IIVFRsM6R8DIuWSVAjzubh8A/132","comment_is_top":false,"comment_ctime":1557321455,"is_pvip":false,"replies":[{"id":"33295","content":"不是说不考虑，是重点考虑这几个关键的复杂性，可测试性和可部署性更多和整个公司的基础建设有关，一般不建议单个系统特殊处理","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1557457864,"ip_address":"","comment_id":92753,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10147256047","product_id":100006601,"comment_content":"为什么架构设计只考虑这几个复杂性呢？其他的非功能性需求还有很多很多，比如可测试性、可布署性、等等，如何权衡？","like_count":2,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":449369,"discussion_content":"不是说不考虑，是重点考虑这几个关键的复杂性，可测试性和可部署性更多和整个公司的基础建设有关，一般不建议单个系统特殊处理","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1557457864,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":53076,"user_name":"张汉桂-东莞","can_delete":false,"product_type":"c1","uid":1116277,"ip_address":"","ucode":"38657ABA59382A","user_header":"https://static001.geekbang.org/account/avatar/00/11/08/75/512b9f26.jpg","comment_is_top":false,"comment_ctime":1545579584,"is_pvip":false,"replies":[{"id":"19345","content":"架构可以让你们更好的实现功能","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1545645358,"ip_address":"","comment_id":53076,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10135514176","product_id":100006601,"comment_content":"我发现一直做的都很盲目。来了项目，先做了再说。我所在的公司套路是：把功能实现，合同验收，收到钱就是王道。<br>我还是继续了解多些架构设计的知识，说不定哪天就有机会真枪实弹应用起来，就学会做架构了。<br>","like_count":2,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":434029,"discussion_content":"架构可以让你们更好的实现功能","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1545645358,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":18806,"user_name":"W.Kalman","can_delete":false,"product_type":"c1","uid":1186162,"ip_address":"","ucode":"44D5FA56268E99","user_header":"https://static001.geekbang.org/account/avatar/00/12/19/72/87ecf8bf.jpg","comment_is_top":false,"comment_ctime":1533569529,"is_pvip":false,"replies":[{"id":"6642","content":"OCP原则适合面向对象类设计，架构设计层面很少用这个原则。<br>回到你的问题，简单来说，就是一个新系统上线，例如是“等级子系统”，那么微博子系统就需要知道并且对接等级子系统","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1533697748,"ip_address":"","comment_id":18806,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10123504121","product_id":100006601,"comment_content":"菜鸟一只，有些地方不太理解。。<br>微博子系统每通知一个子系统，就要设计接口，进行测试，效率很低。<br> 这里是说 微博通知 这个方法调用了 【审核】【广告预测】【发布消息】等方法，加多其他新一个方法 不符合封闭原则吗？还是说有其他地方我没想到。。","like_count":2,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":421653,"discussion_content":"OCP原则适合面向对象类设计，架构设计层面很少用这个原则。\n回到你的问题，简单来说，就是一个新系统上线，例如是“等级子系统”，那么微博子系统就需要知道并且对接等级子系统","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1533697748,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":14114,"user_name":"张国胜","can_delete":false,"product_type":"c1","uid":1063557,"ip_address":"","ucode":"3C3090C6FA7121","user_header":"https://static001.geekbang.org/account/avatar/00/10/3a/85/8e32883f.jpg","comment_is_top":false,"comment_ctime":1530179439,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10120114031","product_id":100006601,"comment_content":"高可用和高扩展两块有问题。高可用问题提现在，整个系统很脆弱，容易出现某块的性能故障，如数据库的io暴涨导致所有业务访问出现问题。或者发送验证码的业务出现故障，导致用户无法下单，但没有验证码实际上可以不用与是否下单成功相关联。出现问题后，由于业务复杂，难以排查问题。<br>高扩展问题提现在，整个系统都是为了完成业务功能在写，基本没有抽象和设计模式，导致业务很难扩展，基本上就在之前的基础上来回改。","like_count":2},{"had_liked":false,"id":10418,"user_name":"重剑","can_delete":false,"product_type":"c1","uid":1133526,"ip_address":"","ucode":"EDD4E163CDC508","user_header":"https://static001.geekbang.org/account/avatar/00/11/4b/d6/68561c13.jpg","comment_is_top":false,"comment_ctime":1527552323,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10117486915","product_id":100006601,"comment_content":"太棒了，对于我这种菜鸟来说讲的很好！","like_count":2},{"had_liked":false,"id":9334,"user_name":"Duo An","can_delete":false,"product_type":"c1","uid":1058085,"ip_address":"","ucode":"901C9802511B07","user_header":"https://static001.geekbang.org/account/avatar/00/10/25/25/fb2ba003.jpg","comment_is_top":false,"comment_ctime":1526793957,"is_pvip":false,"replies":[{"id":"2805","content":"你的系统复杂度体现在规模和性能，后面有一章节专门描述","user_name":"作者回复","user_name_real":"华仔@阿里游戏","uid":"1098920","ctime":1526813257,"ip_address":"","comment_id":9334,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10116728549","product_id":100006601,"comment_content":"我参与设计了一个离线数据生产的系统。主要的功能就是将HDFS上的大文件按天增量刷到线上高可用的存储数据库中比如dynamodb. 慢点有几个: 文件都是全量数据,每次写全量不靠谱 太费钱也浪费计算资源; 数据必须完全正确地写入, 部分数据需要时实行要求. 数据量每天大概5~10T .","like_count":2,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":418033,"discussion_content":"你的系统复杂度体现在规模和性能，后面有一章节专门描述","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1526813257,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":9242,"user_name":"我才是二亮","can_delete":false,"product_type":"c1","uid":1000561,"ip_address":"","ucode":"B7D27D05107C2F","user_header":"https://static001.geekbang.org/account/avatar/00/0f/44/71/586fb0c8.jpg","comment_is_top":false,"comment_ctime":1526700924,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"10116635516","product_id":100006601,"comment_content":"前段时间在开发一个系统，系统有多个定时任务，其中有一个关联性的任务，当A任务成功后，过5到10分钟执行B任务，但因为系统对高性能要求不高，所以直接采用两个定时任务，一个10分钟跑一次，另外一个15分钟从表中遍历未处理的数据进行处理，了。<br>如果考虑高性能，可以考虑使用延时队列，当A任务执行成功后，发一条延时消息给消息流系统进行处理。<br><br>老师所说的排查法，简单明了，很适合新手对系统架构的分析，感谢分享。","like_count":2,"discussions":[{"author":{"id":2700925,"avatar":"https://static001.geekbang.org/account/avatar/00/29/36/7d/eab0d26a.jpg","nickname":"丹尼尔-雪碧","note":"","ucode":"F098396F4B7500","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":549286,"discussion_content":"如果对可用性不是要求很高，可以利用redis zset结构做延时队列","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1643810720,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":306507,"user_name":"张平","can_delete":false,"product_type":"c1","uid":2619322,"ip_address":"","ucode":"4A600617F69991","user_header":"https://static001.geekbang.org/account/avatar/00/27/f7/ba/08044ec3.jpg","comment_is_top":false,"comment_ctime":1628587586,"is_pvip":true,"replies":[{"id":"111014","content":"卧虎藏龙 ：）","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1628646974,"ip_address":"","comment_id":306507,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5923554882","product_id":100006601,"comment_content":"留言区里的牛人太多了，向你们学习，致敬。","like_count":1,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":524796,"discussion_content":"卧虎藏龙 ：）","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1628646974,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":280599,"user_name":"DFighting","can_delete":false,"product_type":"c1","uid":1233193,"ip_address":"","ucode":"F3BA2426FF8582","user_header":"https://static001.geekbang.org/account/avatar/00/12/d1/29/1b1234ed.jpg","comment_is_top":false,"comment_ctime":1614260708,"is_pvip":true,"replies":[{"id":"101868","content":"其实你对审计系统的分析已经具备基本的架构复杂度分析的模型了，你可以再细化下去，会有更多发现。","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1614300838,"ip_address":"","comment_id":280599,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5909228004","product_id":100006601,"comment_content":"我没设计过类似这种中间件的系统，考虑的思路是业务拆分，每个子部分有单独的复杂度，比如现在做的一个审计系统，信息采集，任务调度和审计三部分复杂的点都不一样，信息采集主要是性能和兼容多来源；任务调度对性能上和可用上要求高点，百万的任务调度不能中途崩溃掉；审计主要负责的是业务场景多，功能可扩展性要求比较高。不过我是新手，听了老师讲的，我感觉自己离架构师还很早，老老实实设计好小模块，写好代码，边学边用，从小结构开始尝试，慢慢前进吧","like_count":1,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":516149,"discussion_content":"其实你对审计系统的分析已经具备基本的架构复杂度分析的模型了，你可以再细化下去，会有更多发现。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1614300838,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":247520,"user_name":"Qoo","can_delete":false,"product_type":"c1","uid":1234944,"ip_address":"","ucode":"597362C2F7562B","user_header":"https://static001.geekbang.org/account/avatar/00/12/d8/00/4650b237.jpg","comment_is_top":false,"comment_ctime":1599730997,"is_pvip":false,"replies":[{"id":"91144","content":"消息内容只和产生消息时的业务处理有关，和谁来用这个消息没有关系。例如微博子系统产生一条消息可以包括微博ID，产生时间，作者，内容长度，内容等","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1599982855,"ip_address":"","comment_id":247520,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5894698293","product_id":100006601,"comment_content":"老师你好，按照例子描述微博子系统调用N个其他子系统的时候，在不使用消息架构的情况下，那么每次都要重新定接口测试等工作，耦合大；但是用了消息架构后，是需要一个消息包含所有对接系统需要的信息？怎么做到一个消息让所有的子系统，甚至是新接入的子系统都不用重新要求微博子系统进行变更？这个消息的内容怎么设计？","like_count":1,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":505426,"discussion_content":"消息内容只和产生消息时的业务处理有关，和谁来用这个消息没有关系。例如微博子系统产生一条消息可以包括微博ID，产生时间，作者，内容长度，内容等","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1599982855,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":246913,"user_name":"escray","can_delete":false,"product_type":"c1","uid":1020525,"ip_address":"","ucode":"1F4204930E47C4","user_header":"https://static001.geekbang.org/account/avatar/00/0f/92/6d/becd841a.jpg","comment_is_top":false,"comment_ctime":1599529537,"is_pvip":true,"replies":[{"id":"91167","content":"编码导致性能压力属于bug，要解决，而不是设计架构来应对","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1599983608,"ip_address":"","comment_id":246913,"utype":1}],"discussion_count":2,"race_medal":2,"score":"5894496833","product_id":100006601,"comment_content":"在估算 TPS 和 QPS 的时候，比较理想的可能是根据系统的实际情况测算；但是在没有数据的情况下，就需要架构师来进行估算和预测，这个有点像“老中医”，靠经验和直觉。<br><br>之前参与过的业务系统，首要的复杂度来自于高可用（包括写入、存储和读取），对于性能要求并不高（用户量不大，每秒请求数估计不到 300），扩展性也一般。<br><br>但是有一种可能，就是本来没那么复杂的系统，因为架构设计或者编程框架的缘故，也可能就是单纯因为开发人员的失误，一个业务操作发送了非常多的请求，结果导致了性能瓶颈，以至于需要“高性能”。<br><br>以前在体制内工作，作为开发或者运维人员，对于系统的性能指标是没有精确度量的，所以在做架构或者设计的时候（其实是写文档），只能拍脑袋，同时还要保持业内领先，否则就没法通过评审或立项。<br><br>在留言里面看到 @空挡滑行 讲述的一段系统改造的经历，因为没有对原有系统的性能进行完整的测试和评估，以至于改造的时候走了一段弯路。<br><br>我感觉对于系统进行分析和评测，其实也是一个技术活，极客时间有《系统性能调优必知必会》专栏。","like_count":1,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":505257,"discussion_content":"编码导致性能压力属于bug，要解决，而不是设计架构来应对","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1599983608,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2348234,"avatar":"","nickname":"Geek_b15dc0","note":"","ucode":"7DEF9A3A1F77D3","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":332913,"discussion_content":"数据库的tps, qps, 连接数的有个大致的量级关系，qps是tps 的20倍左右，qps 是连接数的3倍率左右，阿里云的数据库测试文档有介绍，不过应该是大概估算的","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1607392210,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":239939,"user_name":"董飞","can_delete":false,"product_type":"c1","uid":1693828,"ip_address":"","ucode":"4A4A13C4A971E3","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/6Be8vjNk03LEXMl52vONOQvdKTL1MWPR6OsAGEDsHIZXw9FibW8c4YtNL6HAmB8wRkDNIEx15xawJ9PWLW4y1UA/132","comment_is_top":false,"comment_ctime":1596697655,"is_pvip":false,"replies":[{"id":"88713","content":"QPS和TPS，一读一写","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1596842905,"ip_address":"","comment_id":239939,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5891664951","product_id":100006601,"comment_content":"老师，tps不一定是写操作啊！","like_count":1,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":503280,"discussion_content":"QPS和TPS，一读一写","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1596842905,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":235425,"user_name":"密码123456","can_delete":false,"product_type":"c1","uid":1126593,"ip_address":"","ucode":"9889463CC0EA71","user_header":"https://static001.geekbang.org/account/avatar/00/11/30/c1/2dde6700.jpg","comment_is_top":false,"comment_ctime":1595031705,"is_pvip":false,"replies":[{"id":"87416","content":"参考SOA的ESB，你可以认为把ESB的各个功能独立出来，基本上等同现在的微服务全家桶","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1595475226,"ip_address":"","comment_id":235425,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5889999001","product_id":100006601,"comment_content":"读到场景的时候，很想说用kafka。后来想了一下，在kafka或者说在消息中间件概念诞生之前，他们对这种场景怎么处理呢？给我的感受是，重要的是识别复杂度，思考如何处理的过程。","like_count":1,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":501715,"discussion_content":"参考SOA的ESB，你可以认为把ESB的各个功能独立出来，基本上等同现在的微服务全家桶","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1595475226,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":214951,"user_name":"Geek-fans","can_delete":false,"product_type":"c1","uid":1184743,"ip_address":"","ucode":"56518D2121E884","user_header":"https://static001.geekbang.org/account/avatar/00/12/13/e7/202ac86f.jpg","comment_is_top":false,"comment_ctime":1588855782,"is_pvip":true,"replies":[{"id":"79724","content":"哈哈，真的是前浪😂","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1588990216,"ip_address":"","comment_id":214951,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5883823078","product_id":100006601,"comment_content":"“前浪”真的有预见😂","like_count":1,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":494254,"discussion_content":"哈哈，真的是前浪😂","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1588990216,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":178464,"user_name":"两只狮子","can_delete":false,"product_type":"c1","uid":1845418,"ip_address":"","ucode":"7EE55A0413D8BF","user_header":"https://static001.geekbang.org/account/avatar/00/1c/28/aa/06c12256.jpg","comment_is_top":false,"comment_ctime":1581694334,"is_pvip":false,"replies":[{"id":"69940","content":"理解到位，加油👍","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1582191680,"ip_address":"","comment_id":178464,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5876661630","product_id":100006601,"comment_content":"【从0开始学架构】学到识别复杂度这里，应该就到了一些切实的实战干货了。我学完后，不仅学到了如何分析消息队列的复杂度的问题，重要的是以消息队列的分析为依托，进行了抽象学习到了更高层次的内容。任何一项中间件的引入，不仅仅是要看这个中间件有什么样的能力更重要的是我们要解决的实际难题是什么，然后再做取舍。","like_count":1,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":483834,"discussion_content":"理解到位，加油👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582191680,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":162555,"user_name":"spoofer","can_delete":false,"product_type":"c1","uid":1768852,"ip_address":"","ucode":"6723F64ACC3F27","user_header":"https://static001.geekbang.org/account/avatar/00/1a/fd/94/8704d2b0.jpg","comment_is_top":false,"comment_ctime":1576553390,"is_pvip":false,"replies":[{"id":"63212","content":"系统设计是按照峰值来计算的","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1577326814,"ip_address":"","comment_id":162555,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5871520686","product_id":100006601,"comment_content":"我觉得tps，qps的计算是不是应该引入2-8定律？系统流量一般出现在每日20%的时间里。","like_count":2,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":478085,"discussion_content":"系统设计是按照峰值来计算的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577326814,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":127662,"user_name":"钱","can_delete":false,"product_type":"c1","uid":1009652,"ip_address":"","ucode":"2C92A243A463D4","user_header":"https://static001.geekbang.org/account/avatar/00/0f/67/f4/9a1feb59.jpg","comment_is_top":false,"comment_ctime":1566776285,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5861743581","product_id":100006601,"comment_content":"课前思考及问题<br>1：复杂度是啥？<br>我的理解是一件事做好的难易程度，但这个东西我认为也是一个相对概念，比如：小目标对于老王来讲简单多了，对于我来讲估计此一生也难实现。<br>2：识别复杂度？<br>如果复杂度确实是一个相对概念，那怎么识别，我觉得是分人的，同样一个问题不同的人有不同的认知，这个该怎么统一到一个认知维度上来？<br>3：OK，看老师，怎么讲？怎么来识别复杂度？<br><br>课后思考及问题<br>1：核心观点<br>1-1：架构设计的本质目的是为了解决软件系统的复杂性。<br>架构设计的主要目的是为了解决软件系统复杂度带来的问题。<br>老师的这两种描述，含义是对等的嘛？<br><br>1-2：如果运气真的不好，接手了一个每个复杂度都存在问题的系统，那应该怎么办呢？答案是一个个来解决问题，不要幻想一次架构重构解决所有问题。<br><br>1-3：正确的做法是将主要的复杂度问题列出来，然后根据业务、技术、团队等综合情况进行排序，优先解决当前面临的最主要的复杂度问题。<br><br>1-4：识别复杂度对架构师来说是一项挑战，因为原始的需求中并没有哪个地方会明确地说明复杂度在哪里，需要架构师在理解需求的基础上进行分析。有经验的架构师可能一看需求就知道复杂度大概在哪里；如果经验不足，那只能采取“排查法”，从不同的角度逐一进行分析。<br><br>2：阅读完正文及评论，才清楚复杂度这个东西老师指的是引入复杂度的几个来源的经验指标，比如：高性能，这个多高算高？一看业务，二看所使用的组件的性能平均和极限值，这个确实需要去官网找并背下来啦！我觉得高性能这么玩，没问题。不过高可用、易扩展、成本、安全、规模，这些就不是这个玩法了吧!这些感觉就是仁者见仁智者见智的事情啦！老马花十亿都没问题，我花十万都负担不起啊？猜测，老师后面会一个一个拆解分析！","like_count":1},{"had_liked":false,"id":85634,"user_name":"黯风","can_delete":false,"product_type":"c1","uid":1484392,"ip_address":"","ucode":"6F663CCB13979D","user_header":"https://static001.geekbang.org/account/avatar/00/16/a6/68/199d4a9b.jpg","comment_is_top":false,"comment_ctime":1555150164,"is_pvip":false,"replies":[{"id":"31429","content":"系统与系统之间不直接调用通知接口，而是用消息队列来做异步通知","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1555598393,"ip_address":"","comment_id":85634,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5850117460","product_id":100006601,"comment_content":"老师好，文字提出前浪微博的问题后，说到消息队列可以解决。具体消息队列是怎么解决那些问题的呢？求指教。","like_count":1,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":446743,"discussion_content":"系统与系统之间不直接调用通知接口，而是用消息队列来做异步通知","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1555598393,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":70010,"user_name":"晓晨同学","can_delete":false,"product_type":"c1","uid":1413041,"ip_address":"","ucode":"236AEEB786E2CE","user_header":"https://static001.geekbang.org/account/avatar/00/15/8f/b1/7b697ed4.jpg","comment_is_top":false,"comment_ctime":1550935279,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"5845902575","product_id":100006601,"comment_content":"架构设计由需求所驱动，本质目的是为了解决软件系统的复杂性；为此，我们在进行架构设计时，需要以理解需求为前提，首要进行系统复杂性的分析。具体做法是：<br><br>（1）构建复杂度的来源清单——高性能、可用性、扩展性、安全、低成本、规模等。<br><br>（2）结合需求、技术、团队、资源等对上述复杂度逐一分析是否需要？是否关键？<br><br>“高性能”主要从软件系统未来的TPS、响应时间、服务器资源利用率等客观指标，也可以从用户的主观感受方面去考虑。<br><br>“可用性”主要从服务不中断等质量属性，符合行业政策、国家法规等方面去考虑。<br><br>“扩展性”则主要从功能需求的未来变更幅度等方面去考虑。<br><br>（3）按照上述的分析结论，得到复杂度按照优先级的排序清单，越是排在前面的复杂度，就越关键，就越优先解决。","like_count":1,"discussions":[{"author":{"id":2547758,"avatar":"","nickname":"Geek_fa4c11","note":"","ucode":"8624645B6B8ED1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":365452,"discussion_content":"泰康？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1617802473,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":52759,"user_name":"once","can_delete":false,"product_type":"c1","uid":1091793,"ip_address":"","ucode":"764283BD9D28C5","user_header":"https://static001.geekbang.org/account/avatar/00/10/a8/d1/2dbfe194.jpg","comment_is_top":false,"comment_ctime":1545498663,"is_pvip":true,"replies":[{"id":"19205","content":"HTTP get操作访问一个简单页面测试结果","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1545572492,"ip_address":"","comment_id":52759,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5840465959","product_id":100006601,"comment_content":"我也想了解下 ‘http请求访问大概在2万左右’，这个性能是参考的什么指标？希望能够解答","like_count":1,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":433974,"discussion_content":"HTTP get操作访问一个简单页面测试结果","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1545572492,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":46964,"user_name":"Geek_fb3db2","can_delete":false,"product_type":"c1","uid":1218254,"ip_address":"","ucode":"8089B8311B6C80","user_header":"https://static001.geekbang.org/account/avatar/00/12/96/ce/8c3bdbe5.jpg","comment_is_top":false,"comment_ctime":1544010748,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"5838978044","product_id":100006601,"comment_content":"复杂度是多维度的，那就要看我们关注的系统的重点是哪方面，参与过的系统业务很复杂，一个业务流程要走很长，那就要拆分，拆成无相互依赖的关系，采用消息通知方式完成后续调用","like_count":1},{"had_liked":false,"id":20647,"user_name":"文竹","can_delete":false,"product_type":"c1","uid":1103167,"ip_address":"","ucode":"74413B1975976B","user_header":"https://static001.geekbang.org/account/avatar/00/10/d5/3f/80bf4841.jpg","comment_is_top":false,"comment_ctime":1534642596,"is_pvip":false,"replies":[{"id":"7289","content":"1. 预留资源池<br>2. 容器化，按需动态扩容","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1534738694,"ip_address":"","comment_id":20647,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5829609892","product_id":100006601,"comment_content":"有一个实时接入数据的API服务,这个服务目前的复杂性在于高可用。经常会接到新的数据源接入需求，可没有具体数据作为参照来判断接入服务的高可用，完全凭直觉和经验来判断是否需要增加ECS来保证可用性。为什么没有具体参照的数据呢？因为各个数据源请求方式不一样，有的数据源请求数据量大，有的则小；有的数据源请求频繁，有的则少。请问老师，一般是如何处理这个问题的？","like_count":1,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":422348,"discussion_content":"1. 预留资源池\n2. 容器化，按需动态扩容","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1534738694,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":16625,"user_name":"彬哥","can_delete":false,"product_type":"c1","uid":1148392,"ip_address":"","ucode":"6FF7945FF40DD4","user_header":"https://static001.geekbang.org/account/avatar/00/11/85/e8/1e3e5657.jpg","comment_is_top":false,"comment_ctime":1532055041,"is_pvip":false,"replies":[{"id":"5824","content":"并发一般指同时访问数，例如1s内有10000个用户访问了某个页面","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1532175200,"ip_address":"","comment_id":16625,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5827022337","product_id":100006601,"comment_content":"我们有时候也会用到 并发用户数，不过这个概念有些模糊。是 指同时在线用户呢？还是在某个时间点同时点击页面的某个按钮呢？","like_count":1,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":420878,"discussion_content":"并发一般指同时访问数，例如1s内有10000个用户访问了某个页面","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1532175200,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":11455,"user_name":"Skysper","can_delete":false,"product_type":"c1","uid":1058800,"ip_address":"","ucode":"164B3CAF81A7C5","user_header":"https://static001.geekbang.org/account/avatar/00/10/27/f0/06ecce19.jpg","comment_is_top":false,"comment_ctime":1528158581,"is_pvip":false,"replies":[{"id":"3705","content":"性能测试和硬件，场景都相关，测试工具有jmeter，loaderunner","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1528189102,"ip_address":"","comment_id":11455,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5823125877","product_id":100006601,"comment_content":"很有启发，不过对于性能方面有什么测试或者收集工具吗？好确定当前系统的性能情况，以及如何选择架构去满足性能需求？根据一些产品自身有关性能的介绍吗？","like_count":1,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":418849,"discussion_content":"性能测试和硬件，场景都相关，测试工具有jmeter，loaderunner","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1528189102,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":9842,"user_name":"但莫","can_delete":false,"product_type":"c1","uid":1108901,"ip_address":"","ucode":"6B40F4E0EDB1C7","user_header":"https://static001.geekbang.org/account/avatar/00/10/eb/a5/5d04b7cd.jpg","comment_is_top":false,"comment_ctime":1527123785,"is_pvip":false,"replies":[{"id":"3077","content":"看业务复杂度，了解常见开源软件的性能，可以做对比参照","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1527169810,"ip_address":"","comment_id":9842,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5822091081","product_id":100006601,"comment_content":"请教个问题，多高的tps，qps算高呢，是如何界定的。","like_count":1,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":418223,"discussion_content":"看业务复杂度，了解常见开源软件的性能，可以做对比参照","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1527169810,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":9758,"user_name":"华烬","can_delete":false,"product_type":"c1","uid":1008444,"ip_address":"","ucode":"D36AE0FBEF665A","user_header":"https://static001.geekbang.org/account/avatar/00/0f/63/3c/b4cfbce9.jpg","comment_is_top":false,"comment_ctime":1527071196,"is_pvip":false,"replies":[{"id":"3018","content":"1. mysql的tps和写入的数据有关，我们测试了mysql写入k-v数据，主键存储k，tps上万<br>2. 容量扩展属于性能部分，叫可伸缩性","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1527122305,"ip_address":"","comment_id":9758,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5822038492","product_id":100006601,"comment_content":"两个问题请教一下<br>1，tps1380对于MySQL库来说的话应该不低了吧<br>2，扩展性只从功能考虑么，不用考虑容量之类的？","like_count":1,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":418196,"discussion_content":"1. mysql的tps和写入的数据有关，我们测试了mysql写入k-v数据，主键存储k，tps上万\n2. 容量扩展属于性能部分，叫可伸缩性","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1527122305,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":9588,"user_name":"Benny","can_delete":false,"product_type":"c1","uid":1099552,"ip_address":"","ucode":"CF370FD6835D28","user_header":"https://static001.geekbang.org/account/avatar/00/10/c7/20/86c49b0a.jpg","comment_is_top":false,"comment_ctime":1526966457,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5821933753","product_id":100006601,"comment_content":"结合作者的分享，简单分析了一下公司的系统，目前公司的系统主要重心放在了高可用和高扩展，因为业务的连续性和功能多样化是目前比较重视的。当前用户量比较不大，高性能没有重点考虑，但随着业务增长，也慢慢出现问题，消息队列和数据库成为瓶颈。","like_count":1},{"had_liked":false,"id":9579,"user_name":"JOEL","can_delete":false,"product_type":"c1","uid":1102472,"ip_address":"","ucode":"E093C45E45080B","user_header":"https://static001.geekbang.org/account/avatar/00/10/d2/88/3a90c25b.jpg","comment_is_top":false,"comment_ctime":1526956107,"is_pvip":false,"replies":[{"id":"2925","content":"是的，我只是列出了常见的，不是只有这几个，例如有的公司项目面临的复杂度是如何以低成本尽量满足客户变态的新技术需求😃","user_name":"作者回复","user_name_real":"华仔@阿里游戏","uid":"1098920","ctime":1526971454,"ip_address":"","comment_id":9579,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5821923403","product_id":100006601,"comment_content":"高性能  高可用  可扩展都是质量需求，是质量需求的代表吧。另外还有很多质量需求指标，本系列文章都没提过，但其实个人觉得也需要考虑的。比如公司建立OA系统就需要考虑互操作性，另外还有易用性，安全性，可移植行性等。","like_count":1,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":418123,"discussion_content":"是的，我只是列出了常见的，不是只有这几个，例如有的公司项目面临的复杂度是如何以低成本尽量满足客户变态的新技术需求😃","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1526971454,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":9558,"user_name":"李志博","can_delete":false,"product_type":"c1","uid":1009109,"ip_address":"","ucode":"F3C72573B3C112","user_header":"https://static001.geekbang.org/account/avatar/00/0f/65/d5/88beb15a.jpg","comment_is_top":false,"comment_ctime":1526951974,"is_pvip":false,"replies":[{"id":"2930","content":"前面是理论，现在开始教你怎么落地了。<br>性能指标需要自己去积累，最好背下来","user_name":"作者回复","user_name_real":"华仔@阿里游戏","uid":"1098920","ctime":1526971762,"ip_address":"","comment_id":9558,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5821919270","product_id":100006601,"comment_content":"为什么感觉这张的内容前面几张曾经看到过……还有您说的常见系统性能要烂熟于心，请问有具体的博客地址或什么的地方讲都大概什么性能了嘛，我们需要背下来？","like_count":1,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":418115,"discussion_content":"前面是理论，现在开始教你怎么落地了。\n性能指标需要自己去积累，最好背下来","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1526971762,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":9486,"user_name":"YMF_WX1981","can_delete":false,"product_type":"c1","uid":1123051,"ip_address":"","ucode":"8891A4C343D9FD","user_header":"https://static001.geekbang.org/account/avatar/00/11/22/eb/b580b80f.jpg","comment_is_top":false,"comment_ctime":1526905647,"is_pvip":false,"replies":[{"id":"2887","content":"前端架构和app架构的主张复杂度在于可扩展性","user_name":"作者回复","user_name_real":"华仔@阿里游戏","uid":"1098920","ctime":1526953717,"ip_address":"","comment_id":9486,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5821872943","product_id":100006601,"comment_content":"对于一个从没从事过架构工作的前端来说，所谓复杂和识别复杂，我的理解是：当这个顶层设计不能对业务作出良好响应，改动困难，就是复杂。<br><br>识别复杂不会哦，按照常规思维，我们总会画这样的框框图，将变化的东西按业务归位到模块，或，有些功能按复用需要抽象成组件，于是有好些系统和子系统，而如何“画”这图？标准数据是？解决什么问题对应技术是？这是我认为改课程的价值。","like_count":1,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":418083,"discussion_content":"前端架构和app架构的主张复杂度在于可扩展性","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1526953717,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":9411,"user_name":"Up","can_delete":false,"product_type":"c1","uid":1032969,"ip_address":"","ucode":"3AACE765021AB5","user_header":"https://static001.geekbang.org/account/avatar/00/0f/c3/09/ee1b7ac0.jpg","comment_is_top":false,"comment_ctime":1526863843,"is_pvip":false,"replies":[{"id":"2839","content":"脑门拍多了，脑门也疼呀😂😂","user_name":"作者回复","user_name_real":"华仔@阿里游戏","uid":"1098920","ctime":1526884987,"ip_address":"","comment_id":9411,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5821831139","product_id":100006601,"comment_content":"这期最大的收获是如何预估系统的高性能要求，找到了方向和实践思路，对我们系统分析后，其实tps和qps并不高，终于不用拍脑门了，哈哈！","like_count":1,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":418059,"discussion_content":"脑门拍多了，脑门也疼呀😂😂","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1526884987,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":9311,"user_name":"卡莫拉内西","can_delete":false,"product_type":"c1","uid":1117409,"ip_address":"","ucode":"CA9E2DE91DA117","user_header":"https://static001.geekbang.org/account/avatar/00/11/0c/e1/e0ba4e87.jpg","comment_is_top":false,"comment_ctime":1526781969,"is_pvip":false,"replies":[{"id":"2806","content":"这几个是常见的，不限于这几个，不同业务领域有不同的复杂度","user_name":"作者回复","user_name_real":"华仔@阿里游戏","uid":"1098920","ctime":1526813319,"ip_address":"","comment_id":9311,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5821749265","product_id":100006601,"comment_content":"学习了，要有针对性的分析复杂度，而不是照搬照抄网上的某些架构，要知其所以然，除了，高性能，高可用，可扩展，安全性，成本，五大点之外还有其他需要考虑的点吗","like_count":1,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":418026,"discussion_content":"这几个是常见的，不限于这几个，不同业务领域有不同的复杂度","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1526813319,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":9236,"user_name":"Kyle","can_delete":false,"product_type":"c1","uid":1106079,"ip_address":"","ucode":"44198A0BEC5FB2","user_header":"https://static001.geekbang.org/account/avatar/00/10/e0/9f/9259a6b9.jpg","comment_is_top":false,"comment_ctime":1526699686,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"5821666982","product_id":100006601,"comment_content":"前一份工作由于历史问题，控制层与服务层通过rmi单节点连接。由于服务的增长，rmi调用在横向扩展的时候必须控制层和服务层的服务跟着一起增加，而且单个节点的访问方式无法做到负载均衡。此外由于原始项目没引入maven，我们在包管理上也多了很多重复工作。综合起来，我们项目原始架构的复杂度主要在“可扩展性”上，包括两方面的扩展性问题：代码新功能、新组件引入的复杂性，还有就是系统横向扩展的复杂性。针对这些情况我们将项目重构分三步走：第一步为每个项目引入maven，第二步引入spring boot（当初想法是了解到spring boot能快速引入各种组件，比如mybatis二级缓存，solr搜索引擎，但为了学习怎么去引入这些组件也花了不少功夫），第三步改rmi调用为dubbo + zookeeper方式调用。<br>今天的课程让我收益最大、最有同感的就是：如华哥所说，重构项目要做的事太多，会让人无从下手，而且我在这个过程中时常焦躁不已，这个时候就要分清轻重缓急，分步执行。","like_count":1},{"had_liked":false,"id":352639,"user_name":"杨恒","can_delete":false,"product_type":"c1","uid":3066545,"ip_address":"北京","ucode":"057CCB97B56740","user_header":"https://static001.geekbang.org/account/avatar/00/2e/ca/b1/044d3e98.jpg","comment_is_top":false,"comment_ctime":1658826507,"is_pvip":false,"replies":[{"id":"128340","content":"举例而已，不是说只能这样考虑","user_name":"作者回复","user_name_real":"编辑","uid":"1098920","ctime":1659066333,"ip_address":"北京","comment_id":352639,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1658826507","product_id":100006601,"comment_content":"这个案例在考虑性能，其实性能performance包括：容量（capacity）和稳定（stability）。案例中只考虑了容量，另一方面，还应该考虑带负载跑稳定的需求，比如带500TPS跑7*24，再此基础上加容量负载。","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":581914,"discussion_content":"举例而已，不是说只能这样考虑","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1659066333,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"北京"},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":336038,"user_name":"地平线","can_delete":false,"product_type":"c1","uid":1952394,"ip_address":"","ucode":"52213F99782147","user_header":"https://static001.geekbang.org/account/avatar/00/1d/ca/8a/8f64cf86.jpg","comment_is_top":false,"comment_ctime":1645861963,"is_pvip":true,"replies":[{"id":"123192","content":"分析思路不错 ：）","user_name":"作者回复","user_name_real":"编辑","uid":"1098920","ctime":1646642444,"ip_address":"","comment_id":336038,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1645861963","product_id":100006601,"comment_content":"此次学校小组开发andriod app，复杂度分析如下：<br>1. 初步方案为local app，并且就算未来加入用户社区功能，也不会有太大的性能要求。所以不需要高性能。<br>2. 用户不希望在锁机的时候能够意外打开blacklist里的app，也希望闹钟能够准时提醒，并且在必要的时候强行锁机，所以设计应该高可用。<br>3. 架构以后需要扩充的功能不多，目前预计为（1）朋友社区功能 （2） 日历安排时间功能。所以不需要高扩展性。<br>4. 项目开发时间很短（1个月左右，不超过6周），一个只有7个工作人员，大家水平一般，所以系统要尽可能的简单，非一般情况，不能有过于复杂的逻辑。<br><br>总的一句话，在保证高可用的基础上尽可能的简单。","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":554857,"discussion_content":"分析思路不错 ：）","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1646642444,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":332829,"user_name":"庄小P","can_delete":false,"product_type":"c1","uid":1489063,"ip_address":"","ucode":"A71FA01F713790","user_header":"","comment_is_top":false,"comment_ctime":1643705866,"is_pvip":false,"replies":[{"id":"121704","content":"那最后的设计结果就看运气了 ：）","user_name":"作者回复","user_name_real":"编辑","uid":"1098920","ctime":1644027793,"ip_address":"","comment_id":332829,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1643705866","product_id":100006601,"comment_content":"之前设计程序的时候，都没有按照这些方法论来，只想着能够达到qps就可以了。<br>","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":549485,"discussion_content":"那最后的设计结果就看运气了 ：）","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1644027793,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":330253,"user_name":"11月的萧邦","can_delete":false,"product_type":"c1","uid":2663324,"ip_address":"","ucode":"E7A2236BFD9ABE","user_header":"https://static001.geekbang.org/account/avatar/00/28/a3/9c/836d7bb3.jpg","comment_is_top":false,"comment_ctime":1641884028,"is_pvip":false,"replies":[{"id":"120657","content":"耦合度严重就是可扩展方面的复杂度","user_name":"作者回复","user_name_real":"编辑","uid":"1098920","ctime":1642213865,"ip_address":"","comment_id":330253,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1641884028","product_id":100006601,"comment_content":"疑问：看文章中的意思，“系统耦合度严重” 是不是也算是跟高可用、高性能、高扩展相并列的一大复杂度呢？","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":546187,"discussion_content":"耦合度严重就是可扩展方面的复杂度","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1642213865,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":324730,"user_name":"shawn","can_delete":false,"product_type":"c1","uid":1516046,"ip_address":"","ucode":"1A52A00A0A6610","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIkkg9icSGleYMAnwlb7A9MMJYOdovl8kOCA0asMkDe6grPNF74ib0prQMicicJTNa1WsdpMJ4p1CWkUQ/132","comment_is_top":false,"comment_ctime":1638592061,"is_pvip":false,"replies":[{"id":"117822","content":"兼职架构师，负责微服务的架构设计，一般P7负责1个，P7+负责1~3个","user_name":"作者回复","user_name_real":"编辑","uid":"1098920","ctime":1638613956,"ip_address":"","comment_id":324730,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1638592061","product_id":100006601,"comment_content":"阿里的P7是架构师吗？","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":535940,"discussion_content":"兼职架构师，负责微服务的架构设计，一般P7负责1个，P7+负责1~3个","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1638613956,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":322490,"user_name":"李姗姗","can_delete":false,"product_type":"c1","uid":1245871,"ip_address":"","ucode":"F3A0CF544D551C","user_header":"https://static001.geekbang.org/account/avatar/00/13/02/af/c46ef3c3.jpg","comment_is_top":false,"comment_ctime":1637417211,"is_pvip":false,"replies":[{"id":"117099","content":"很好的分析案例","user_name":"作者回复","user_name_real":"编辑","uid":"1098920","ctime":1637489017,"ip_address":"","comment_id":322490,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1637417211","product_id":100006601,"comment_content":"其实整个数仓模型表和任务的管理也是一个系统。我现在负责供给模型，日常管理的痛点就是复杂度。高性能体现在数据应用系统的查询性能，会影响用户的满意度。另一方面高性能体现在日常任务的运行速度，它会直接影响数据链路的稳定性和出问题后的恢复速度。高并发体现在数据应用系统的用户访问量有没有超过承压能力。因为是内部数据系统，不对外面用户提供使用，因此高并发并不是痛点。此外高并发还体现在数据任务在某个时间段运行的顺畅性，取决于计算集群的资源是否充足，和单个计算任务占用资源是否合理。高可用会影响对外供数稳定性，但它为啥是两个9不太明白。可扩展性体现在每次新加模型和数据任务，变更模型都能快速完成。按这样排序，高性能，可扩展性，高可用，高并发。","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":531988,"discussion_content":"很好的分析案例","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1637489017,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":321598,"user_name":"xmlu","can_delete":false,"product_type":"c1","uid":1056817,"ip_address":"","ucode":"22DE264143D157","user_header":"https://static001.geekbang.org/account/avatar/00/10/20/31/abb7bfe3.jpg","comment_is_top":false,"comment_ctime":1636961397,"is_pvip":true,"replies":[{"id":"116909","content":"必然适合的呀，DDD是一个分析方法，不可能与流程冲突","user_name":"作者回复","user_name_real":"编辑","uid":"1098920","ctime":1637108557,"ip_address":"","comment_id":321598,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1636961397","product_id":100006601,"comment_content":"老师讲的架构设计流程适用于业务功能复杂的架构设计吗？比如：模块划分、代码框架分层等；与DDD冲突吗？","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":530580,"discussion_content":"必然适合的呀，DDD是一个分析方法，不可能与流程冲突","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1637108557,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":297164,"user_name":"小鬼爱风雪","can_delete":false,"product_type":"c1","uid":2646199,"ip_address":"","ucode":"FF72E39E557C6F","user_header":"https://static001.geekbang.org/account/avatar/00/28/60/b7/4a665c73.jpg","comment_is_top":false,"comment_ctime":1623333808,"is_pvip":false,"replies":[{"id":"107942","content":"并发1500要16台接口服务器呀？不知道你的docker容器配置如何，正常来说这个处理性能有点低，看看能否优化单机的处理性能。","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1623386918,"ip_address":"","comment_id":297164,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1623333808","product_id":100006601,"comment_content":"我们设计了一个企业级接口数据服务，接口数据采用读写分离控制，单接口并发最高1500，采用redis缓存用户信息，k8s docker 部署16台接口服务器，感觉没有太好的设计，就是单纯的拼机器，这种有好的优化方式吗？","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":521743,"discussion_content":"并发1500要16台接口服务器呀？不知道你的docker容器配置如何，正常来说这个处理性能有点低，看看能否优化单机的处理性能。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1623386918,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":287175,"user_name":"Geek_fa4c11","can_delete":false,"product_type":"c1","uid":2547758,"ip_address":"","ucode":"8624645B6B8ED1","user_header":"","comment_is_top":false,"comment_ctime":1617804844,"is_pvip":false,"replies":[{"id":"104276","content":"04&#47;05&#47;06&#47;07这几篇你还没看？","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1617841152,"ip_address":"","comment_id":287175,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1617804844","product_id":100006601,"comment_content":"结合自己的经验，敏锐地发现了这些问题背后的根源在于<br><br>所以还是没说如何识别复杂度。如何发现识别，没说","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":518217,"discussion_content":"04/05/06/07这几篇你还没看？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1617841152,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":287173,"user_name":"Geek_fa4c11","can_delete":false,"product_type":"c1","uid":2547758,"ip_address":"","ucode":"8624645B6B8ED1","user_header":"","comment_is_top":false,"comment_ctime":1617803366,"is_pvip":false,"replies":[{"id":"104277","content":"自己试试，看要多久才能手熟","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1617841205,"ip_address":"","comment_id":287173,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1617803366","product_id":100006601,"comment_content":"没啥难的，天天研究架构，研究的多了你就一眼能看出痛点了。干任何事都是，无他，唯手熟尔","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":518216,"discussion_content":"自己试试，看要多久才能手熟","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1617841205,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":286431,"user_name":"StevenXue","can_delete":false,"product_type":"c1","uid":2546143,"ip_address":"","ucode":"1235AD644E1C01","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTL7lPTicEDQRiaibK3V0jibDRseyRHic0J4sIpMnI3rhkXY8wmDRCqza2MdbhSJNbzAm6J4831GiaJaBGrw/132","comment_is_top":false,"comment_ctime":1617293586,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1617293586","product_id":100006601,"comment_content":"复杂度分析对新手架构师或者系统管理还是比较有帮助的，实际上功能测试或者压力测试也很难达到很准确的基准线，不同标准的做法上难度系数是不一样的，不太好参考。","like_count":0},{"had_liked":false,"id":283551,"user_name":"梦倚栏杆","can_delete":false,"product_type":"c1","uid":1095857,"ip_address":"","ucode":"BDEB97F2822445","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/bvj76PmeUvW8kokyu91IZWuRATKmabibDWbzAj2TajeEic7WvKCJOLaOh6jibEmdQ36EO3sBUZ0HibAiapsrZo64U8w/132","comment_is_top":false,"comment_ctime":1615815294,"is_pvip":false,"replies":[{"id":"102867","content":"系统容量不是你算出来的，是通过性能测试测出来的。<br><br>至于测试出来的性能是否合理，你可以参考一些数值：<br> - HTTP web服务器处理hello world的性能大约是1.5万&#47;s<br> - Nginx负载均衡的性能大约是5万&#47;s<br> - 业务系统一个TPS接口的请求时间10~50ms是比较合理的，QPS 5~20ms是比较合理的。<br><br>理想情况下，性能测试的时候，CPU能压到80%以上，此时的TPS&#47;QPS就是峰值，如果CPU没压满，指标就上不去，就可能有优化的空间。","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1615852463,"ip_address":"","comment_id":283551,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1615815294","product_id":100006601,"comment_content":"留言能够支持有效搜索(或者有标签，发表时相似提示等)就好了。我也好奇这个TPS和QPS咋算的。知道一点点的往下看留言才知道。<br>TPS：每秒事务数(在此案例里认为是写数据)<br>QPS: 每秒查询数<br>微博产生1条消息，10个关联子系统需要消费。故粗估就变成了，QPS=TPS*10倍。<br><br>我的系统是一个混合多项：<br>1. 监听消息处理逻辑【主】<br>2. 支持其他数据请求<br>3. 一些定时的脚本请求该服务(这个频率，执行时间都是可以在一定的时间段内调整的)。<br>怎么衡量服务的QPS呢？我们不管看QPS还是TPS，核心目前是为了知道一个系统的容量吧。对于这种系统我怎么知道其最大容量或者合理的承受力呢？","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":517074,"discussion_content":"系统容量不是你算出来的，是通过性能测试测出来的。\n\n至于测试出来的性能是否合理，你可以参考一些数值：\n - HTTP web服务器处理hello world的性能大约是1.5万/s\n - Nginx负载均衡的性能大约是5万/s\n - 业务系统一个TPS接口的请求时间10~50ms是比较合理的，QPS 5~20ms是比较合理的。\n\n理想情况下，性能测试的时候，CPU能压到80%以上，此时的TPS/QPS就是峰值，如果CPU没压满，指标就上不去，就可能有优化的空间。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1615852463,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":238189,"user_name":"林毅鑫","can_delete":false,"product_type":"c1","uid":1917916,"ip_address":"","ucode":"1BB3D186E90D96","user_header":"https://static001.geekbang.org/account/avatar/00/1d/43/dc/95d4f2c5.jpg","comment_is_top":false,"comment_ctime":1596091853,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1596091853","product_id":100006601,"comment_content":"笔记笔记：<br>对于架构师来说，常见系统的性能量级需要烂熟于心，例如nginx负载均衡性能是3万左右，mc的读取性能5万左右，kafka号称百万级，zookeeper写入读取2万以上，http请求访问大概在2万左右。","like_count":0},{"had_liked":false,"id":235714,"user_name":"Lee","can_delete":false,"product_type":"c1","uid":1085120,"ip_address":"","ucode":"158E29C62897CC","user_header":"https://static001.geekbang.org/account/avatar/00/10/8e/c0/7e70b689.jpg","comment_is_top":false,"comment_ctime":1595160811,"is_pvip":false,"replies":[{"id":"87411","content":"但是大部分的时候都是在争数字高低😂","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1595474707,"ip_address":"","comment_id":235714,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1595160811","product_id":100006601,"comment_content":"tps高比高其实要看业务特点，和这个tps的约定，否则争论数字大小意义不大","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":501807,"discussion_content":"但是大部分的时候都是在争数字高低😂","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1595474707,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":212813,"user_name":"Geek_4660f3","can_delete":false,"product_type":"c1","uid":1757482,"ip_address":"","ucode":"8B59B0C29EF88A","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIMFaaIb1ZyU6zuYrT2WlD4RrsV2orxLonpIFwsx3ic01OLJ0N4dnSXQ3mFQxnbemiabKDw9810rX4Q/132","comment_is_top":false,"comment_ctime":1588214656,"is_pvip":false,"replies":[{"id":"79161","content":"按照业务需求来衡量性能高低","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1588464206,"ip_address":"","comment_id":212813,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1588214656","product_id":100006601,"comment_content":"请问一下作者，新人应该如何衡量系统性能，多少qps算高性能，常见系统的衡量量级能不能再详细介绍一下","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":493618,"discussion_content":"按照业务需求来衡量性能高低","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1588464206,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":190261,"user_name":"Long","can_delete":false,"product_type":"c1","uid":1580358,"ip_address":"","ucode":"D85B99FD0C4B76","user_header":"https://wx.qlogo.cn/mmopen/vi_32/ZMALpD4bKCVdsx8ymCC5Oo0oxibxIFGQzT6fP2B8MEgLGLktQRX4ictobkbcNBDTQibjoQNKBmWCKomNibWqHZ5kpg/132","comment_is_top":false,"comment_ctime":1584624800,"is_pvip":false,"replies":[{"id":"74895","content":"那现在可以开始关心了😂","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1585540816,"ip_address":"","comment_id":190261,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1584624800","product_id":100006601,"comment_content":"作者回复: 对于架构师来说，常见系统的性能量级需要烂熟于心，例如nginx负载均衡性能是3万左右，mc的读取性能5万左右，kafka号称百万级，zookeeper写入读取2万以上，http请求访问大概在2万左右。<br>具体的数值和机器配置以及测试案例有关，但大概的量级不会变化很大。<br><br>如果是业务系统，由于业务复杂度差异很大，有的每秒500请求可能就是高性能了，因此需要针对业务进行性能测试，确立性能基线，方便后续架构设计做比较。<br><br>从来没有关心过这些数据....","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":487929,"discussion_content":"那现在可以开始关心了😂","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585540816,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":178828,"user_name":"晓亮:(","can_delete":false,"product_type":"c1","uid":1490408,"ip_address":"","ucode":"232FA0C963C015","user_header":"https://static001.geekbang.org/account/avatar/00/16/bd/e8/2293fe73.jpg","comment_is_top":false,"comment_ctime":1581837104,"is_pvip":false,"replies":[{"id":"69939","content":"加油","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1582191649,"ip_address":"","comment_id":178828,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1581837104","product_id":100006601,"comment_content":"留言干货满满，结合作者和留言区的大神学到了很多，万分感谢","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":483984,"discussion_content":"加油","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582191649,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":166573,"user_name":"技术修行者","can_delete":false,"product_type":"c1","uid":1013147,"ip_address":"","ucode":"28CA41A1214D6B","user_header":"https://static001.geekbang.org/account/avatar/00/0f/75/9b/611e74ab.jpg","comment_is_top":false,"comment_ctime":1577505013,"is_pvip":true,"discussion_count":0,"race_medal":5,"score":"1577505013","product_id":100006601,"comment_content":"架构由需求驱动，无论是开发新系统，还是改造旧系统，在做架构设计时，都需要识别系统复杂性，进行系统复杂性分析。<br>1. 列出复杂性来源清单，常见的复杂性包括高性能、高可用、可扩展、低成本等。<br>2. 根据对系统需求的理解，对各个复杂性来源进行辨别。<br>3. 如果需要处理多个复杂性来源，那需要对各个复杂性来源进行排序，通常，不建议一下子同时出来过多的复杂性来源，例如同时处理高性能、高可用和可扩展是不合理的。<br><br>通过上述步骤，可以梳理出系统的复杂性来源，为下一步架构设计提供足够准确的输入。<br><br>需要注意的是系统的复杂性是变化的，在某个阶段，高性能可能是关注焦点，在下个阶段，可扩展可能变成急需处理的问题。","like_count":0},{"had_liked":false,"id":137653,"user_name":"月下独酌","can_delete":false,"product_type":"c1","uid":1612635,"ip_address":"","ucode":"E79579ACEE25DF","user_header":"https://static001.geekbang.org/account/avatar/00/18/9b/5b/eee80536.jpg","comment_is_top":false,"comment_ctime":1569812761,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1569812761","product_id":100006601,"comment_content":"留言就是真实案例处理经验了。可怕","like_count":0},{"had_liked":false,"id":123544,"user_name":"好好学习","can_delete":false,"product_type":"c1","uid":1106515,"ip_address":"","ucode":"A2FD39E882DF19","user_header":"https://static001.geekbang.org/account/avatar/00/10/e2/53/ff7501a2.jpg","comment_is_top":false,"comment_ctime":1565698704,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1565698704","product_id":100006601,"comment_content":"识别复杂度,排除法","like_count":0},{"had_liked":false,"id":88720,"user_name":"jacky","can_delete":false,"product_type":"c1","uid":1049177,"ip_address":"","ucode":"A0BD06E2ABF520","user_header":"https://static001.geekbang.org/account/avatar/00/10/02/59/989f65c8.jpg","comment_is_top":false,"comment_ctime":1555985890,"is_pvip":false,"replies":[{"id":"33314","content":"大部分不需要同时考虑，即使同时考虑，高性能和高可用有的地方就是冲突的，例如缓存可以提升性能，但可能降低可靠性","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1557459423,"ip_address":"","comment_id":88720,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1555985890","product_id":100006601,"comment_content":"请问，互联网架构大部分都要同时考虑和解决这三个复杂度来源吧？如果同时考虑这三个来源，为什么你会说这个系统的设计有问题？","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":447878,"discussion_content":"大部分不需要同时考虑，即使同时考虑，高性能和高可用有的地方就是冲突的，例如缓存可以提升性能，但可能降低可靠性","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1557459423,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":71880,"user_name":"行者","can_delete":false,"product_type":"c1","uid":1063734,"ip_address":"","ucode":"EA31201A7C5AE1","user_header":"https://static001.geekbang.org/account/avatar/00/10/3b/36/2d61e080.jpg","comment_is_top":false,"comment_ctime":1551458838,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1551458838","product_id":100006601,"comment_content":"系统有各种问题，在各种庞杂的问题中抓住问题本质，优先解决核心问题。","like_count":0},{"had_liked":false,"id":52551,"user_name":"gkb111","can_delete":false,"product_type":"c1","uid":1224217,"ip_address":"","ucode":"9B3154BCC9046B","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLLUic3XzxET3L3QXxcTbeg96GMx1HkiaiaZdudchmOmtPnuEPHK5vYEeMkvJR098XljMbXDialYib3z6w/132","comment_is_top":false,"comment_ctime":1545421768,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1545421768","product_id":100006601,"comment_content":"复杂度来源，高可用，高性能，可扩展。是分析业务的三个思路，排序选择。考虑太多，往往感觉无从下手，择其一，轻其他。","like_count":0},{"had_liked":false,"id":34921,"user_name":"穿行无息","can_delete":false,"product_type":"c1","uid":1119576,"ip_address":"","ucode":"4EE703ED2D8D5F","user_header":"https://static001.geekbang.org/account/avatar/00/11/15/58/aef416b9.jpg","comment_is_top":false,"comment_ctime":1540355077,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1540355077","product_id":100006601,"comment_content":"留言也是干货圈啊","like_count":0},{"had_liked":false,"id":18111,"user_name":"wuhulala","can_delete":false,"product_type":"c1","uid":1191143,"ip_address":"","ucode":"6DBF2C9E19B930","user_header":"https://static001.geekbang.org/account/avatar/00/12/2c/e7/3c0eba8b.jpg","comment_is_top":false,"comment_ctime":1533136628,"is_pvip":false,"replies":[{"id":"6374","content":"可以详细说说你的故事😄","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1533203038,"ip_address":"","comment_id":18111,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1533136628","product_id":100006601,"comment_content":"想想之前强行上Kafka猜的坑就心痛","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":421394,"discussion_content":"可以详细说说你的故事😄","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1533203038,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":12080,"user_name":"Ben","can_delete":false,"product_type":"c1","uid":1105768,"ip_address":"","ucode":"0488E158CE1459","user_header":"https://static001.geekbang.org/account/avatar/00/10/df/68/d413edca.jpg","comment_is_top":false,"comment_ctime":1528553938,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1528553938","product_id":100006601,"comment_content":"读到了每通知一个新系统就没有了！了！了","like_count":0},{"had_liked":false,"id":9851,"user_name":"成功","can_delete":false,"product_type":"c1","uid":1112099,"ip_address":"","ucode":"954B90AC92E8C3","user_header":"https://static001.geekbang.org/account/avatar/00/10/f8/23/165d2f0e.jpg","comment_is_top":false,"comment_ctime":1527124921,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1527124921","product_id":100006601,"comment_content":"TPS很多人关注，其Qps更重要","like_count":0},{"had_liked":false,"id":9717,"user_name":"tick","can_delete":false,"product_type":"c1","uid":1106123,"ip_address":"","ucode":"D2C864306C06CB","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKOASyV1lpdkW6It8WQltNGj9021PTibqOwRUTccaSUEM1GmQThOTIRp9Eu7XNZZFfGGNveLbUSw9Q/132","comment_is_top":false,"comment_ctime":1527043060,"is_pvip":false,"replies":[{"id":"2989","content":"请自行搜索","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1527055652,"ip_address":"","comment_id":9717,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1527043060","product_id":100006601,"comment_content":"qps，tps这些概念还是有些模糊，能说下吗?","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":418176,"discussion_content":"请自行搜索","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1527055652,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":9563,"user_name":"Spring.Fred","can_delete":false,"product_type":"c1","uid":1055148,"ip_address":"","ucode":"66C84150ACC304","user_header":"https://static001.geekbang.org/account/avatar/00/10/19/ac/32da70c9.jpg","comment_is_top":false,"comment_ctime":1526952523,"is_pvip":false,"replies":[{"id":"2929","content":"嗯，我是拿计算器算的，输入错了，没注意，感谢指正","user_name":"作者回复","user_name_real":"华仔@阿里游戏","uid":"1098920","ctime":1526971697,"ip_address":"","comment_id":9563,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1526952523","product_id":100006601,"comment_content":"“我们将数据按照秒来计算，一天内平均每秒写入消息数为 115 条，每秒读取的消息数是 1150 条；再考虑系统的读写并不是完全平均的，设计的目标应该以峰值来计算。峰值一般取平均值的 3 倍，那么消息队列系统的 TPS 是 445，QPS 是 4450，这个量级的数据意味着并不要求高性能。”这里的TPS&#47;QPS是不是算错了？TPS：345；QPS：3450？","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":418116,"discussion_content":"嗯，我是拿计算器算的，输入错了，没注意，感谢指正","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1526971697,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":9540,"user_name":"Mike Wang","can_delete":false,"product_type":"c1","uid":1111341,"ip_address":"","ucode":"4A7268451FFEB6","user_header":"https://static001.geekbang.org/account/avatar/00/10/f5/2d/8a0bd9f1.jpg","comment_is_top":false,"comment_ctime":1526949947,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1526949947","product_id":100006601,"comment_content":"去年参与了个行为系统项目，数据采集到队列，两个消费端，一个到jstorm，一个到es，jstorm存储数据到mongodb和hbase，hive在Hadoop上进行离线计算，最后查询接口通过presto合并mongodb、hive、mysql中查询结果，前期只是考虑了高性能，后面发现处理链路长，容易中断，所以也考虑了高可用，数据采集部分考虑了可扩展，查询程序部分因为业务复杂和工期紧张可扩展未考虑","like_count":0},{"had_liked":false,"id":9475,"user_name":"汉斯·冯·拉特","can_delete":false,"product_type":"c1","uid":1102385,"ip_address":"","ucode":"29F14B0D938A02","user_header":"https://static001.geekbang.org/account/avatar/00/10/d2/31/f1bec7fc.jpg","comment_is_top":false,"comment_ctime":1526899707,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1526899707","product_id":100006601,"comment_content":"这些内容我不知道的，由于公司定位、项目定位的原因，没能接触这些，所以还是很有收获的，期待后续的内容！","like_count":0},{"had_liked":false,"id":9214,"user_name":"王磊","can_delete":false,"product_type":"c1","uid":1050085,"ip_address":"","ucode":"A4DE9804642A08","user_header":"https://static001.geekbang.org/account/avatar/00/10/05/e5/aa579968.jpg","comment_is_top":false,"comment_ctime":1526694207,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1526694207","product_id":100006601,"comment_content":"我的体会: <br>1. 高性能，高可用，高扩展即是考量系统整体，也是逐一考量各个模块的，包括自己的模块，也包括第三方中间件用于选型;<br>2. 这里的复杂度我理解为系统的痛点所在，如果痛点处理不好，系统是失败的;<br>3. 我理解我们系统的痛点之一是，中间表生成的可扩展，随着业务的发展，中间表需要不断演进，中间表的新增和修改都需要中间表数据重新生成(原始数据还在)，这个过程导致上线耗时;另外也会迫使所有使用此中间表的查询需要修改，需要回归，增加了开发和测试的工作量，也带来额外的风险。在考虑这里该如何改造，还没有好办法。","like_count":0,"discussions":[{"author":{"id":1501234,"avatar":"","nickname":"Geek_88604f","note":"","ucode":"33DD1318E53814","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":3207,"discussion_content":"建议用nosql或者搜索引擎","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1564304480,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]}]}