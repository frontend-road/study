{"id":79072,"title":"19丨决策树（下）：泰坦尼克乘客生存预测","content":"<p>在前面的两篇文章中，我给你讲了决策树算法。决策树算法是经常使用的数据挖掘算法，这是因为决策树就像一个人脑中的决策模型一样，呈现出来非常直观。基于决策树还诞生了很多数据挖掘算法，比如随机森林（Random forest）。</p><p>今天我来带你用决策树进行项目的实战。</p><p>决策树分类的应用场景非常广泛，在各行各业都有应用，比如在金融行业可以用决策树做贷款风险评估，医疗行业可以用决策树生成辅助诊断，电商行业可以用决策树对销售额进行预测等。</p><p>在了解决策树的原理后，今天我们用sklearn工具解决一个实际的问题：泰坦尼克号乘客的生存预测。</p><h2>sklearn中的决策树模型</h2><p>首先，我们需要掌握sklearn中自带的决策树分类器DecisionTreeClassifier，方法如下：</p><pre><code>clf = DecisionTreeClassifier(criterion='entropy')\n</code></pre><p>到目前为止，sklearn中只实现了ID3与CART决策树，所以我们暂时只能使用这两种决策树，在构造DecisionTreeClassifier类时，其中有一个参数是criterion，意为标准。它决定了构造的分类树是采用ID3分类树，还是CART分类树，对应的取值分别是entropy或者gini：</p><ul>\n<li>\n<p>entropy: 基于信息熵，也就是ID3算法，实际结果与C4.5相差不大；</p>\n</li>\n<li>\n<p>gini：默认参数，基于基尼系数。CART算法是基于基尼系数做属性划分的，所以criterion=gini时，实际上执行的是CART算法。</p>\n</li>\n</ul><!-- [[[read_end]]] --><p>我们通过设置criterion='entropy’可以创建一个ID3决策树分类器，然后打印下clf，看下决策树在sklearn中是个什么东西？</p><pre><code>DecisionTreeClassifier(class_weight=None, criterion='entropy', max_depth=None,\n            max_features=None, max_leaf_nodes=None,\n            min_impurity_decrease=0.0, min_impurity_split=None,\n            min_samples_leaf=1, min_samples_split=2,\n            min_weight_fraction_leaf=0.0, presort=False, random_state=None,\n            splitter='best')\n</code></pre><p>这里我们看到了很多参数，除了设置criterion采用不同的决策树算法外，一般建议使用默认的参数，默认参数不会限制决策树的最大深度，不限制叶子节点数，认为所有分类的权重都相等等。当然你也可以调整这些参数，来创建不同的决策树模型。</p><p>我整理了这些参数代表的含义：</p><p><img src=\"https://static001.geekbang.org/resource/image/ea/0c/ead008e025a039c8731884ce2e29510c.jpg?wh=620*930\" alt=\"\"></p><p>在构造决策树分类器后，我们可以使用fit方法让分类器进行拟合，使用predict方法对新数据进行预测，得到预测的分类结果，也可以使用score方法得到分类器的准确率。</p><p>下面这个表格是fit方法、predict方法和score方法的作用。</p><p><img src=\"https://static001.geekbang.org/resource/image/3c/f8/3c7057b582b8078129c8342cde709ef8.png?wh=468*158\" alt=\"\"></p><h2>Titanic乘客生存预测</h2><p><strong>问题描述</strong></p><p>泰坦尼克海难是著名的十大灾难之一，究竟多少人遇难，各方统计的结果不一。现在我们可以得到部分的数据，具体数据你可以从GitHub上下载：<a href=\"https://github.com/cystanford/Titanic_Data\">https://github.com/cystanford/Titanic_Data</a></p><p>（完整的项目代码见：<a href=\"https://github.com/cystanford/Titanic_Data/blob/master/titanic_analysis.py\">https://github.com/cystanford/Titanic_Data/blob/master/titanic_analysis.py</a> 你可以跟着学习后自己练习）</p><p>其中数据集格式为csv，一共有两个文件：</p><ul>\n<li>\n<p>train.csv是训练数据集，包含特征信息和存活与否的标签；</p>\n</li>\n<li>\n<p>test.csv: 测试数据集，只包含特征信息。</p>\n</li>\n</ul><p>现在我们需要用决策树分类对训练集进行训练，针对测试集中的乘客进行生存预测，并告知分类器的准确率。</p><p>在训练集中，包括了以下字段，它们具体为：</p><p><img src=\"https://static001.geekbang.org/resource/image/2c/0a/2c14e00b64a73f40d75451a180c57b0a.png?wh=466*370\" alt=\"\"><br>\n<strong>生存预测的关键流程</strong></p><p>我们要对训练集中乘客的生存进行预测，这个过程可以划分为两个重要的阶段：</p><p><img src=\"https://static001.geekbang.org/resource/image/6c/7f/6c08ca83a20a969100e5ceddee0ab27f.jpg?wh=2416*1127\" alt=\"\"></p><ol>\n<li>\n<p><strong>准备阶段</strong>：我们首先需要对训练集、测试集的数据进行探索，分析数据质量，并对数据进行清洗，然后通过特征选择对数据进行降维，方便后续分类运算；</p>\n</li>\n<li>\n<p><strong>分类阶段</strong>：首先通过训练集的特征矩阵、分类结果得到决策树分类器，然后将分类器应用于测试集。然后我们对决策树分类器的准确性进行分析，并对决策树模型进行可视化。</p>\n</li>\n</ol><p>下面，我分别对这些模块进行介绍。</p><p><strong>模块1：数据探索</strong></p><p>数据探索这部分虽然对分类器没有实质作用，但是不可忽略。我们只有足够了解这些数据的特性，才能帮助我们做数据清洗、特征选择。</p><p>那么如何进行数据探索呢？这里有一些函数你需要了解：</p><ul>\n<li>\n<p>使用info()了解数据表的基本情况：行数、列数、每列的数据类型、数据完整度；</p>\n</li>\n<li>\n<p>使用describe()了解数据表的统计情况：总数、平均值、标准差、最小值、最大值等；</p>\n</li>\n<li>\n<p>使用describe(include=[‘O’])查看字符串类型（非数字）的整体情况；</p>\n</li>\n<li>\n<p>使用head查看前几行数据（默认是前5行）；</p>\n</li>\n<li>\n<p>使用tail查看后几行数据（默认是最后5行）。</p>\n</li>\n</ul><p>我们可以使用Pandas便捷地处理这些问题：</p><pre><code>import pandas as pd\n# 数据加载\ntrain_data = pd.read_csv('./Titanic_Data/train.csv')\ntest_data = pd.read_csv('./Titanic_Data/test.csv')\n# 数据探索\nprint(train_data.info())\nprint('-'*30)\nprint(train_data.describe())\nprint('-'*30)\nprint(train_data.describe(include=['O']))\nprint('-'*30)\nprint(train_data.head())\nprint('-'*30)\nprint(train_data.tail())\n</code></pre><p>运行结果：</p><pre><code>&lt;class 'pandas.core.frame.DataFrame'&gt;\nRangeIndex: 891 entries, 0 to 890\nData columns (total 12 columns):\nPassengerId    891 non-null int64\nSurvived       891 non-null int64\nPclass         891 non-null int64\nName           891 non-null object\nSex            891 non-null object\nAge            714 non-null float64\nSibSp          891 non-null int64\nParch          891 non-null int64\nTicket         891 non-null object\nFare           891 non-null float64\nCabin          204 non-null object\nEmbarked       889 non-null object\ndtypes: float64(2), int64(5), object(5)\nmemory usage: 83.6+ KB\nNone\n------------------------------\n       PassengerId    Survived     ...           Parch        Fare\ncount   891.000000  891.000000     ...      891.000000  891.000000\nmean    446.000000    0.383838     ...        0.381594   32.204208\nstd     257.353842    0.486592     ...        0.806057   49.693429\nmin       1.000000    0.000000     ...        0.000000    0.000000\n25%     223.500000    0.000000     ...        0.000000    7.910400\n50%     446.000000    0.000000     ...        0.000000   14.454200\n75%     668.500000    1.000000     ...        0.000000   31.000000\nmax     891.000000    1.000000     ...        6.000000  512.329200\n\n[8 rows x 7 columns]\n------------------------------\n                                          Name   Sex   ...       Cabin Embarked\ncount                                      891   891   ...         204      889\nunique                                     891     2   ...         147        3\ntop     Peter, Mrs. Catherine (Catherine Rizk)  male   ...     B96 B98        S\nfreq                                         1   577   ...           4      644\n\n[4 rows x 5 columns]\n------------------------------\n   PassengerId  Survived  Pclass    ...        Fare Cabin  Embarked\n0            1         0       3    ...      7.2500   NaN         S\n1            2         1       1    ...     71.2833   C85         C\n2            3         1       3    ...      7.9250   NaN         S\n3            4         1       1    ...     53.1000  C123         S\n4            5         0       3    ...      8.0500   NaN         S\n\n[5 rows x 12 columns]\n------------------------------\n     PassengerId  Survived  Pclass    ...      Fare Cabin  Embarked\n886          887         0       2    ...     13.00   NaN         S\n887          888         1       1    ...     30.00   B42         S\n888          889         0       3    ...     23.45   NaN         S\n889          890         1       1    ...     30.00  C148         C\n890          891         0       3    ...      7.75   NaN         Q\n\n[5 rows x 12 columns]\n</code></pre><p><strong>模块2：数据清洗</strong></p><p>通过数据探索，我们发现Age、Fare和Cabin这三个字段的数据有所缺失。其中Age为年龄字段，是数值型，我们可以通过平均值进行补齐；Fare为船票价格，是数值型，我们也可以通过其他人购买船票的平均值进行补齐。</p><p>具体实现的代码如下：</p><pre><code># 使用平均年龄来填充年龄中的nan值\ntrain_data['Age'].fillna(train_data['Age'].mean(), inplace=True)\ntest_data['Age'].fillna(test_data['Age'].mean(),inplace=True)\n# 使用票价的均值填充票价中的nan值\ntrain_data['Fare'].fillna(train_data['Fare'].mean(), inplace=True)\ntest_data['Fare'].fillna(test_data['Fare'].mean(),inplace=True)\n</code></pre><p>Cabin为船舱，有大量的缺失值。在训练集和测试集中的缺失率分别为77%和78%，无法补齐；Embarked为登陆港口，有少量的缺失值，我们可以把缺失值补齐。</p><p>首先观察下Embarked字段的取值，方法如下：</p><pre><code>print(train_data['Embarked'].value_counts())\n</code></pre><p>结果如下：</p><pre><code>S    644\nC    168\nQ     77\n</code></pre><p>我们发现一共就3个登陆港口，其中S港口人数最多，占到了72%，因此我们将其余缺失的Embarked数值均设置为S：</p><pre><code># 使用登录最多的港口来填充登录港口的nan值\ntrain_data['Embarked'].fillna('S', inplace=True)\ntest_data['Embarked'].fillna('S',inplace=True)\n</code></pre><p><strong>模块3：特征选择</strong></p><p>特征选择是分类器的关键。特征选择不同，得到的分类器也不同。那么我们该选择哪些特征做生存的预测呢？</p><p>通过数据探索我们发现，PassengerId为乘客编号，对分类没有作用，可以放弃；Name为乘客姓名，对分类没有作用，可以放弃；Cabin字段缺失值太多，可以放弃；Ticket字段为船票号码，杂乱无章且无规律，可以放弃。其余的字段包括：Pclass、Sex、Age、SibSp、Parch和Fare，这些属性分别表示了乘客的船票等级、性别、年龄、亲戚数量以及船票价格，可能会和乘客的生存预测分类有关系。具体是什么关系，我们可以交给分类器来处理。</p><p>因此我们先将Pclass、Sex、Age等这些其余的字段作特征，放到特征向量features里。</p><pre><code># 特征选择\nfeatures = ['Pclass', 'Sex', 'Age', 'SibSp', 'Parch', 'Fare', 'Embarked']\ntrain_features = train_data[features]\ntrain_labels = train_data['Survived']\ntest_features = test_data[features]\n</code></pre><p>特征值里有一些是字符串，这样不方便后续的运算，需要转成数值类型，比如Sex字段，有male和female两种取值。我们可以把它变成Sex=male和Sex=female两个字段，数值用0或1来表示。</p><p>同理Embarked有S、C、Q三种可能，我们也可以改成Embarked=S、Embarked=C和Embarked=Q三个字段，数值用0或1来表示。</p><p>那该如何操作呢，我们可以使用sklearn特征选择中的DictVectorizer类，用它将可以处理符号化的对象，将符号转成数字0/1进行表示。具体方法如下：</p><pre><code>from sklearn.feature_extraction import DictVectorizer\ndvec=DictVectorizer(sparse=False)\ntrain_features=dvec.fit_transform(train_features.to_dict(orient='record'))\n</code></pre><p>你会看到代码中使用了fit_transform这个函数，它可以将特征向量转化为特征值矩阵。然后我们看下dvec在转化后的特征属性是怎样的，即查看dvec的feature_names_属性值，方法如下：</p><pre><code>print(dvec.feature_names_)\n</code></pre><p>运行结果：</p><pre><code>['Age', 'Embarked=C', 'Embarked=Q', 'Embarked=S', 'Fare', 'Parch', 'Pclass', 'Sex=female', 'Sex=male', 'SibSp']\n</code></pre><p>你可以看到原本是一列的Embarked，变成了“Embarked=C”“Embarked=Q”“Embarked=S”三列。Sex列变成了“Sex=female”“Sex=male”两列。</p><p>这样train_features特征矩阵就包括10个特征值（列），以及891个样本（行），即891行，10列的特征矩阵。</p><p><strong>模块4：决策树模型</strong></p><p>刚才我们已经讲了如何使用sklearn中的决策树模型。现在我们使用ID3算法，即在创建DecisionTreeClassifier时，设置criterion=‘entropy’，然后使用fit进行训练，将特征值矩阵和分类标识结果作为参数传入，得到决策树分类器。</p><pre><code>from sklearn.tree import DecisionTreeClassifier\n# 构造ID3决策树\nclf = DecisionTreeClassifier(criterion='entropy')\n# 决策树训练\nclf.fit(train_features, train_labels)\n</code></pre><p><strong>模块5：模型预测&amp;评估</strong></p><p>在预测中，我们首先需要得到测试集的特征值矩阵，然后使用训练好的决策树clf进行预测，得到预测结果pred_labels：</p><pre><code>test_features=dvec.transform(test_features.to_dict(orient='record'))\n# 决策树预测\npred_labels = clf.predict(test_features)\n</code></pre><p>在模型评估中，决策树提供了score函数可以直接得到准确率，但是我们并不知道真实的预测结果，所以无法用预测值和真实的预测结果做比较。我们只能使用训练集中的数据进行模型评估，可以使用决策树自带的score函数计算下得到的结果：</p><pre><code># 得到决策树准确率\nacc_decision_tree = round(clf.score(train_features, train_labels), 6)\nprint(u'score准确率为 %.4lf' % acc_decision_tree)\n</code></pre><p>运行结果：</p><pre><code>score准确率为 0.9820\n</code></pre><p>你会发现你刚用训练集做训练，再用训练集自身做准确率评估自然会很高。但这样得出的准确率并不能代表决策树分类器的准确率。</p><p>这是为什么呢？</p><p>因为我们没有测试集的实际结果，因此无法用测试集的预测结果与实际结果做对比。如果我们使用score函数对训练集的准确率进行统计，正确率会接近于100%（如上结果为98.2%），无法对分类器的在实际环境下做准确率的评估。</p><p>那么有什么办法，来统计决策树分类器的准确率呢？</p><p>这里可以使用K折交叉验证的方式，交叉验证是一种常用的验证分类准确率的方法，原理是拿出大部分样本进行训练，少量的用于分类器的验证。K折交叉验证，就是做K次交叉验证，每次选取K分之一的数据作为验证，其余作为训练。轮流K次，取平均值。</p><p>K折交叉验证的原理是这样的：</p><ol>\n<li>\n<p>将数据集平均分割成K个等份；</p>\n</li>\n<li>\n<p>使用1份数据作为测试数据，其余作为训练数据；</p>\n</li>\n<li>\n<p>计算测试准确率；</p>\n</li>\n<li>\n<p>使用不同的测试集，重复2、3步骤。</p>\n</li>\n</ol><p>在sklearn的model_selection模型选择中提供了cross_val_score函数。cross_val_score函数中的参数cv代表对原始数据划分成多少份，也就是我们的K值，一般建议K值取10，因此我们可以设置CV=10，我们可以对比下score和cross_val_score两种函数的正确率的评估结果：</p><pre><code>import numpy as np\nfrom sklearn.model_selection import cross_val_score\n# 使用K折交叉验证 统计决策树准确率\nprint(u'cross_val_score准确率为 %.4lf' % np.mean(cross_val_score(clf, train_features, train_labels, cv=10)))\n</code></pre><p>运行结果：</p><pre><code>cross_val_score准确率为 0.7835\n</code></pre><p>你可以看到，score函数的准确率为0.9820，cross_val_score准确率为 0.7835。</p><p>这里很明显，对于不知道测试集实际结果的，要使用K折交叉验证才能知道模型的准确率。</p><p><strong>模块6：决策树可视化</strong></p><p>sklearn的决策树模型对我们来说，还是比较抽象的。我们可以使用Graphviz可视化工具帮我们把决策树呈现出来。</p><p><img src=\"https://static001.geekbang.org/resource/image/4a/a0/4ae6016c6c7d1371586c5be015247da0.png?wh=864*307\" alt=\"\"><br>\n安装Graphviz库需要下面的几步：</p><ol>\n<li>\n<p>安装graphviz工具，这里是它的下载地址；<a href=\"http://www.graphviz.org/download/\">http://www.graphviz.org/download/</a></p>\n</li>\n<li>\n<p>将Graphviz添加到环境变量PATH中；</p>\n</li>\n<li>\n<p>需要Graphviz库，如果没有可以使用pip install graphviz进行安装。</p>\n</li>\n</ol><p>这样你就可以在程序里面使用Graphviz对决策树模型进行呈现，最后得到一个决策树可视化的PDF文件，可视化结果文件Source.gv.pdf你可以在GitHub上下载：<a href=\"https://github.com/cystanford/Titanic_Data\">https://github.com/cystanford/Titanic_Data</a></p><h2>决策树模型使用技巧总结</h2><p>今天我用泰坦尼克乘客生存预测案例把决策树模型的流程跑了一遍。在实战中，你需要注意一下几点：</p><ol>\n<li>\n<p>特征选择是分类模型好坏的关键。选择什么样的特征，以及对应的特征值矩阵，决定了分类模型的好坏。通常情况下，特征值不都是数值类型，可以使用DictVectorizer类进行转化；</p>\n</li>\n<li>\n<p>模型准确率需要考虑是否有测试集的实际结果可以做对比，当测试集没有真实结果可以对比时，需要使用K折交叉验证cross_val_score；</p>\n</li>\n<li>\n<p>Graphviz可视化工具可以很方便地将决策模型呈现出来，帮助你更好理解决策树的构建。</p>\n</li>\n</ol><p><img src=\"https://static001.geekbang.org/resource/image/f0/ea/f09fd3c8b1ce771624b803978f01c9ea.png?wh=1161*478\" alt=\"\"><br>\n我上面讲了泰坦尼克乘客生存预测的六个关键模块，请你用sklearn中的决策树模型独立完成这个项目，对测试集中的乘客是否生存进行预测，并给出模型准确率评估。数据从GitHub上下载即可。</p><p>最后给你留一个思考题吧，我在构造特征向量时使用了DictVectorizer类，使用fit_transform函数将特征向量转化为特征值矩阵。DictVectorizer类同时也提供transform函数，那么这两个函数有什么区别？</p><p>欢迎你在评论区留言与我分享你的答案，也欢迎点击“请朋友读”把这篇文章分享给你的朋友或者同事，一起交流一下。</p><p></p>","neighbors":{"left":{"article_title":"18丨决策树（中）：CART，一棵是回归树，另一棵是分类树","id":78659},"right":{"article_title":"20丨朴素贝叶斯分类（上）：如何让机器判断男女？","id":79294}},"comments":[{"had_liked":false,"id":63567,"user_name":"ken","can_delete":false,"product_type":"c1","uid":1353340,"ip_address":"","ucode":"EB70495986A5CF","user_header":"https://static001.geekbang.org/account/avatar/00/14/a6/7c/fc571405.jpg","comment_is_top":false,"comment_ctime":1548403025,"is_pvip":false,"discussion_count":13,"race_medal":0,"score":"581368987985","product_id":100021701,"comment_content":"经典入门案例，浅入但没有提供完整的代码和说明，缺少拓展，对包调用的逻辑方法也不够完整。<br>是一次手把手练习的实操过程，但有点不上不下的，完全没python基础的可能连sklearn也不知道，有点工程基础的，又没有理论拓展说明，未免鸡肋。<br><br>当然，本人可能严格了。","like_count":135,"discussions":[{"author":{"id":1208265,"avatar":"https://static001.geekbang.org/account/avatar/00/12/6f/c9/22022094.jpg","nickname":"丁奇老师的粉丝","note":"","ucode":"6341E0D78CF998","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":170,"discussion_content":"同感，只能说这个博士只适合自己研究，有种被骗的感觉","likes_number":11,"is_delete":false,"is_hidden":false,"ctime":1561215247,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1659590,"avatar":"https://static001.geekbang.org/account/avatar/00/19/52/c6/8eb48963.jpg","nickname":"一纸书","note":"","ucode":"C58A22B54521CA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":19834,"discussion_content":"别的暂且不提,思路清晰也算不亏吧。其他基础知识只能自己补充了。不过，不上不下是有这同感。","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1569230159,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1623540,"avatar":"","nickname":"WXAiAbcd","note":"","ucode":"BC83C56D187698","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":6255,"discussion_content":"你是没有看之前的课程吧","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1566813705,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2414941,"avatar":"https://static001.geekbang.org/account/avatar/00/24/d9/5d/a150148b.jpg","nickname":"Leslie218","note":"","ucode":"FD6DAEFBFB93C2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":349015,"discussion_content":"从小到大有哪本书哪门课能给你你上面说的这样的效果吗？","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1612851148,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1127175,"avatar":"https://static001.geekbang.org/account/avatar/00/11/33/07/8f351609.jpg","nickname":"JustDoDT","note":"","ucode":"6AF0B80F00EAEF","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":211582,"discussion_content":"专栏作者，前面都说明了，每个章节的侧重点，这个章节的侧重点是算法啊。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1584867604,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1919541,"avatar":"https://static001.geekbang.org/account/avatar/00/1d/4a/35/66caeed9.jpg","nickname":"完美坚持","note":"","ucode":"AE0261D8DDEF64","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1127175,"avatar":"https://static001.geekbang.org/account/avatar/00/11/33/07/8f351609.jpg","nickname":"JustDoDT","note":"","ucode":"6AF0B80F00EAEF","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":364502,"discussion_content":"为啥没有考虑过拟合的问题，既然前面讲了过拟合不好，最后Titanic这案例最后构造出来的树连剪枝的工作都没有，更不用提调参，找到预测效果最好的树了","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1617504445,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":211582,"ip_address":""},"score":364502,"extra":""}]},{"author":{"id":1127175,"avatar":"https://static001.geekbang.org/account/avatar/00/11/33/07/8f351609.jpg","nickname":"JustDoDT","note":"","ucode":"6AF0B80F00EAEF","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":211581,"discussion_content":"这是算法篇，还没到后面的实战篇，好不。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1584867557,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1889123,"avatar":"https://static001.geekbang.org/account/avatar/00/1c/d3/63/61b6889a.jpg","nickname":"一本万利","note":"","ucode":"456A34764D1882","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":209963,"discussion_content":"是啊，实操起来很费劲","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1584695757,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1701439,"avatar":"https://static001.geekbang.org/account/avatar/00/19/f6/3f/5c6e2254.jpg","nickname":"Tom Mao","note":"","ucode":"C15BEA5768398B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":52178,"discussion_content":"前两课不是理论?????","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1574002104,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1919541,"avatar":"https://static001.geekbang.org/account/avatar/00/1d/4a/35/66caeed9.jpg","nickname":"完美坚持","note":"","ucode":"AE0261D8DDEF64","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1701439,"avatar":"https://static001.geekbang.org/account/avatar/00/19/f6/3f/5c6e2254.jpg","nickname":"Tom Mao","note":"","ucode":"C15BEA5768398B","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":364500,"discussion_content":"简化了很多","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1617504343,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":52178,"ip_address":""},"score":364500,"extra":""}]},{"author":{"id":2547430,"avatar":"https://static001.geekbang.org/account/avatar/00/26/de/e6/b6d5408d.jpg","nickname":"杨敏华","note":"","ucode":"8D2F3ACFD495EC","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":364435,"discussion_content":"很难兼顾到所有的人，没有基础的费劲很正常，只有自己努力。想更深入的要去专研。老师讲到这个层次还是相当不错的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1617469597,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1895852,"avatar":"https://static001.geekbang.org/account/avatar/00/1c/ed/ac/f96cfac0.jpg","nickname":"暮雨潇潇","note":"","ucode":"EF5B7513A2FCCF","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":287354,"discussion_content":"哈哈，注意是老师是清华的哈，跳几个步骤很正常；清华大学出版社的书也是这种风格，😄😄","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1593423069,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1984523,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/48/0b/9400afbb.jpg","nickname":"LiLi","note":"","ucode":"FCD30AF4360BDB","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":253486,"discussion_content":"我觉得还挺好的啊，虽然没说得很细节，但是提供了一个整体的思路和框架，自己跟着去做一遍，把流程跑通，应该就OK吧","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1588238211,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":110015,"user_name":"一只眼看世界","can_delete":false,"product_type":"c1","uid":1590236,"ip_address":"","ucode":"D221841AE5103F","user_header":"https://static001.geekbang.org/account/avatar/00/18/43/dc/4f70c936.jpg","comment_is_top":false,"comment_ctime":1562150983,"is_pvip":false,"replies":[{"id":"39980","content":"你可以看下输出的决策树的图形，有几个数值你需要了解：<br>比如类似 X[7]&lt;=0.5 这种就是告诉你这个节点，选择的属性是X[7]，阈值是0.5。<br>当&lt;=0.5的时候，决策进入到左子树，当&gt;0.5的时候，决策进入到右子树。<br>entropy实际上代表了信息不纯度，这个数值越大，代表纯度越低。<br>samples代表的是这个节点的样本数，比如samples=891，就代表这个节点一般有891个样本。然后value这个数组会告诉你这个样本集是如何分布的，比如value=[549,342]，即891个样本，有549个为True，也就是X[7]&lt;=0.5，还有342个样本为False，即这些样本的X[7]&gt;0.5<br>好了，然后继续上面的分裂过程，直到叶子节点，纯度越来越高，最终归为同一个类别时，纯度最高，entropy=0，此时样本都为同一个类别，也就是按照这条线路可以得到的最终分类结果。<br>所以你能看到：决策树的使用，就是从根节点开始，然后属性划分，当&lt;=阈值时走左子树，&gt;阈值时走右子树，最终在叶子节点可以得到分类的结果。你指的每个方框里的entropy, samples, vale都是中间的计算结果。<br>这样解释决策图的使用不知道是否理解，希望对你能有帮助。","user_name":"作者回复","user_name_real":"cy","uid":"1306094","ctime":1562210051,"ip_address":"","comment_id":110015,"utype":1}],"discussion_count":1,"race_medal":0,"score":"181950777415","product_id":100021701,"comment_content":"还有个问题 决策树怎么读？  就是每个方框内的数据都代表什么意思呢？","like_count":42,"discussions":[{"author":{"id":1306094,"avatar":"https://static001.geekbang.org/account/avatar/00/13/ed/ee/c4779b67.jpg","nickname":"cy","note":"","ucode":"50D653399A31F6","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":456684,"discussion_content":"你可以看下输出的决策树的图形，有几个数值你需要了解：\n比如类似 X[7]&amp;lt;=0.5 这种就是告诉你这个节点，选择的属性是X[7]，阈值是0.5。\n当&amp;lt;=0.5的时候，决策进入到左子树，当&amp;gt;0.5的时候，决策进入到右子树。\nentropy实际上代表了信息不纯度，这个数值越大，代表纯度越低。\nsamples代表的是这个节点的样本数，比如samples=891，就代表这个节点一般有891个样本。然后value这个数组会告诉你这个样本集是如何分布的，比如value=[549,342]，即891个样本，有549个为True，也就是X[7]&amp;lt;=0.5，还有342个样本为False，即这些样本的X[7]&amp;gt;0.5\n好了，然后继续上面的分裂过程，直到叶子节点，纯度越来越高，最终归为同一个类别时，纯度最高，entropy=0，此时样本都为同一个类别，也就是按照这条线路可以得到的最终分类结果。\n所以你能看到：决策树的使用，就是从根节点开始，然后属性划分，当&amp;lt;=阈值时走左子树，&amp;gt;阈值时走右子树，最终在叶子节点可以得到分类的结果。你指的每个方框里的entropy, samples, vale都是中间的计算结果。\n这样解释决策图的使用不知道是否理解，希望对你能有帮助。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1562210051,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":68196,"user_name":"小熊猫","can_delete":false,"product_type":"c1","uid":1257442,"ip_address":"","ucode":"7549BA17FFBAD4","user_header":"https://static001.geekbang.org/account/avatar/00/13/2f/e2/3640e491.jpg","comment_is_top":false,"comment_ctime":1550455875,"is_pvip":false,"replies":[{"id":"38696","content":"总结的很好。需要注意的是，transform和fit_transform虽然结果相同，但是不能互换。因为fit_transform只是 fit+transform两个步骤合并的简写。而各种分类算法都需要先fit，然后再进行transform。所以如果把fit_transform替换为transform可能会报错。","user_name":"编辑回复","user_name_real":"何昌梅","uid":"1165037","ctime":1561431379,"ip_address":"","comment_id":68196,"utype":2}],"discussion_count":2,"race_medal":0,"score":"108924638275","product_id":100021701,"comment_content":"fit 从一个训练集中学习模型参数，其中就包括了归一化时用到的均值，标准偏差等，可以理解为一个训练过程。<br>transform: 在fit的基础上，对数据进行标准化，降维，归一化等数据转换操作<br>fit_transform: 将模型训练和转化合并到一起，训练样本先做fit，得到mean，standard deviation，然后将这些参数用于transform（归一化训练数据），使得到的训练数据是归一化的，而测试数据只需要在原先fit得到的mean，std上来做归一化就行了，所以用transform就行了。","like_count":25,"discussions":[{"author":{"id":1165037,"avatar":"https://static001.geekbang.org/account/avatar/00/11/c6/ed/89a2dc13.jpg","nickname":"丢了个丢丢丢","note":"","ucode":"BDD7E97E0E5E96","race_medal":0,"user_type":4,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":439559,"discussion_content":"总结的很好。需要注意的是，transform和fit_transform虽然结果相同，但是不能互换。因为fit_transform只是 fit+transform两个步骤合并的简写。而各种分类算法都需要先fit，然后再进行transform。所以如果把fit_transform替换为transform可能会报错。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1561431379,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":4}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1312694,"avatar":"https://static001.geekbang.org/account/avatar/00/14/07/b6/e213fc11.jpg","nickname":"她の他","note":"","ucode":"A61CEC365D782F","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":4799,"discussion_content":"有一点就是，测试集并没有fit 直接transform就不是很理解为什么了，训练集是先fit_transform 后做了 fit生成决策树","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1565745703,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":64497,"user_name":"每天晒白牙","can_delete":false,"product_type":"c1","uid":1004698,"ip_address":"","ucode":"A1B102CD933DEA","user_header":"https://static001.geekbang.org/account/avatar/00/0f/54/9a/76c0af70.jpg","comment_is_top":false,"comment_ctime":1548812706,"is_pvip":false,"replies":[{"id":"64628","content":"Good Job","user_name":"作者回复","user_name_real":"cy","uid":"1306094","ctime":1577622655,"ip_address":"","comment_id":64497,"utype":1}],"discussion_count":4,"race_medal":1,"score":"100333060514","product_id":100021701,"comment_content":"# 依赖包从 cmd中 pip install即可<br>import pandas as pd<br>import numpy as np<br>from sklearn.feature_extraction import DictVectorizer<br>from sklearn.tree import DecisionTreeClassifier<br>from sklearn.model_selection import cross_val_score<br>from sklearn import tree<br>import graphviz<br># 数据加载<br>train_data = pd.read_csv(&#39;D:&#47;workspace&#47;study&#47;python&#47;Titanic_Data&#47;train.csv&#39;)<br>test_data = pd.read_csv(&#39;D:&#47;workspace&#47;study&#47;python&#47;Titanic_Data&#47;test.csv&#39;)<br># 数据探索<br>print(train_data.info())<br>print(&#39;-&#39;*30)<br>print(train_data.describe())<br>print(&#39;-&#39;*30)<br>print(train_data.describe(include=[&#39;O&#39;]))<br>print(&#39;-&#39;*30)<br>print(train_data.head())<br>print(&#39;-&#39;*30)<br>print(train_data.tail())<br># 数据清洗<br># 使用平均年龄来填充年龄中的 nan 值<br>train_data[&#39;Age&#39;].fillna(train_data[&#39;Age&#39;].mean(), inplace=True)<br>test_data[&#39;Age&#39;].fillna(test_data[&#39;Age&#39;].mean(), inplace=True)<br># 使用票价的均值填充票价中的 nan 值<br>train_data[&#39;Fare&#39;].fillna(train_data[&#39;Fare&#39;].mean(), inplace=True)<br>test_data[&#39;Fare&#39;].fillna(test_data[&#39;Fare&#39;].mean(), inplace=True)<br># 使用登录最多的港口来填充登录港口的 nan 值<br>train_data[&#39;Embarked&#39;].fillna(&#39;S&#39;, inplace=True)<br>test_data[&#39;Embarked&#39;].fillna(&#39;S&#39;, inplace=True)<br># 特征选择<br>features = [&#39;Pclass&#39;, &#39;Sex&#39;, &#39;Age&#39;, &#39;SibSp&#39;, &#39;Parch&#39;, &#39;Fare&#39;, &#39;Embarked&#39;]<br>train_features = train_data[features]<br>train_labels = train_data[&#39;Survived&#39;]<br>test_features = test_data[features]<br>dvec = DictVectorizer(sparse=False)<br>train_features = dvec.fit_transform(train_features.to_dict(orient=&#39;record&#39;))<br>print(dvec.feature_names_)<br># 决策树模型<br># 构造 ID3 决策树<br>clf = DecisionTreeClassifier(criterion=&#39;entropy&#39;)<br># 决策树训练<br>clf.fit(train_features, train_labels)<br># 模型预测 &amp; 评估<br>test_features=dvec.transform(test_features.to_dict(orient=&#39;record&#39;))<br># 决策树预测<br>pred_labels = clf.predict(test_features)<br># 决策树准确率<br>acc_decision_tree = round(clf.score(train_features, train_labels), 6)<br>print(u&#39;score 准确率为 %.4lf&#39; % acc_decision_tree)<br>#  K 折交叉验证统计决策树准确率<br>print(u&#39;cross_val_score 准确率为 %.4lf&#39; % np.mean(cross_val_score(clf, train_features, train_labels, cv=10)))<br># 决策树可视化<br>dot_data = tree.export_graphviz(clf, out_file=None)<br>graph = graphviz.Source(dot_data)<br>graph.view()","like_count":23,"discussions":[{"author":{"id":1306094,"avatar":"https://static001.geekbang.org/account/avatar/00/13/ed/ee/c4779b67.jpg","nickname":"cy","note":"","ucode":"50D653399A31F6","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":438030,"discussion_content":"Good Job","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577622655,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2223907,"avatar":"https://static001.geekbang.org/account/avatar/00/21/ef/23/1f192e21.jpg","nickname":"jion","note":"","ucode":"2CD8EA789ADAB9","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":353320,"discussion_content":"已经解决，果然是安装grapviz配置路径的问题：\n参考：https://blog.csdn.net/HNUCSEE_LJK/article/details/86772806","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1615126239,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2223907,"avatar":"https://static001.geekbang.org/account/avatar/00/21/ef/23/1f192e21.jpg","nickname":"jion","note":"","ucode":"2CD8EA789ADAB9","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":353313,"discussion_content":"已经pip install graphviz了，并且在base环境中","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1615125010,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2223907,"avatar":"https://static001.geekbang.org/account/avatar/00/21/ef/23/1f192e21.jpg","nickname":"jion","note":"","ucode":"2CD8EA789ADAB9","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":353304,"discussion_content":"from sklearn import tree\nimport graphviz\ndot_data = tree.export_graphviz(clf, out_file=None)\ngraph = graphviz.Source(dot_data)\ngraph.view()\n#决策树可视化出现如下错误\nExecutableNotFound: failed to execute [&#39;dot&#39;, &#39;-Kdot&#39;, &#39;-Tpdf&#39;, &#39;-O&#39;, &#39;Source.gv&#39;], make sure the Graphviz executables are on your systems&#39; PATH","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1615123598,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":65435,"user_name":"不做键盘侠","can_delete":false,"product_type":"c1","uid":1154451,"ip_address":"","ucode":"30C123DCB9696C","user_header":"https://static001.geekbang.org/account/avatar/00/11/9d/93/945393c1.jpg","comment_is_top":false,"comment_ctime":1549355776,"is_pvip":false,"replies":[{"id":"38695","content":"训练集train_data中Fare没有缺失值，测试集test_data中Fare有缺失值。<br>通过print(test_data.info()) 可以看到，所以train_data可以补用填充，而test_data需要对缺失值做处理。","user_name":"编辑回复","user_name_real":"何昌梅","uid":"1165037","ctime":1561431283,"ip_address":"","comment_id":65435,"utype":2}],"discussion_count":4,"race_medal":0,"score":"65973865216","product_id":100021701,"comment_content":"Fare似乎没有缺失值？","like_count":15,"discussions":[{"author":{"id":1165037,"avatar":"https://static001.geekbang.org/account/avatar/00/11/c6/ed/89a2dc13.jpg","nickname":"丢了个丢丢丢","note":"","ucode":"BDD7E97E0E5E96","race_medal":0,"user_type":4,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":438449,"discussion_content":"训练集train_data中Fare没有缺失值，测试集test_data中Fare有缺失值。\n通过print(test_data.info()) 可以看到，所以train_data可以补用填充，而test_data需要对缺失值做处理。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1561431283,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":4}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1705468,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/05/fc/bceb3f2b.jpg","nickname":"开心哥","note":"","ucode":"D44C1F03B23C5A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":246793,"discussion_content":"训练集里有很多票价不是空值，但是0值，这样的情况一般要用均值填充吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1587778599,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1623540,"avatar":"","nickname":"WXAiAbcd","note":"","ucode":"BC83C56D187698","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":6257,"discussion_content":"讲解和代码中并没有用测试集数据做验证测试啊，用的都是训练集的数据","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566814135,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1623540,"avatar":"","nickname":"WXAiAbcd","note":"","ucode":"BC83C56D187698","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":6256,"discussion_content":"测试和训练都是同一个数据集吧","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566813969,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":78010,"user_name":"听妈妈的话","can_delete":false,"product_type":"c1","uid":1462417,"ip_address":"","ucode":"089D797A39C791","user_header":"https://static001.geekbang.org/account/avatar/00/16/50/91/0dd2b8ce.jpg","comment_is_top":false,"comment_ctime":1553054053,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"48797694309","product_id":100021701,"comment_content":"我想问Fare是怎么看出来有缺失的呀，数目是891呀","like_count":11,"discussions":[{"author":{"id":2602523,"avatar":"https://static001.geekbang.org/account/avatar/00/27/b6/1b/93fd6bde.jpg","nickname":"武者小路","note":"","ucode":"37C14455E7AC8C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":379000,"discussion_content":"在test数据集中有缺失","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1623584371,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":63885,"user_name":"MachineLP","can_delete":false,"product_type":"c1","uid":1236630,"ip_address":"","ucode":"AD9D8337595B9D","user_header":"https://static001.geekbang.org/account/avatar/00/12/de/96/923ffe1f.jpg","comment_is_top":false,"comment_ctime":1548576640,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"44498249600","product_id":100021701,"comment_content":"这讲的确需要在精进一些哦，还有后续应该如何通过更好的数据分析进行效果提升也没有体现，感觉这才是关键，并不是简单跑个模型而已。","like_count":10,"discussions":[{"author":{"id":1312694,"avatar":"https://static001.geekbang.org/account/avatar/00/14/07/b6/e213fc11.jpg","nickname":"她の他","note":"","ucode":"A61CEC365D782F","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":4791,"discussion_content":"这期的定位应该是熟悉决策树构建流程，至于代码怎么写肯定是自己花时间另外学习的，毕竟一个知识点的实战不是十几分钟就能完成的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1565744392,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":80553,"user_name":"旭霁","can_delete":false,"product_type":"c1","uid":1459160,"ip_address":"","ucode":"4B5EE364A4B82D","user_header":"https://static001.geekbang.org/account/avatar/00/16/43/d8/92604ed5.jpg","comment_is_top":false,"comment_ctime":1553680366,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"40208386030","product_id":100021701,"comment_content":"安装 graphviz 工具，并设置好环境变量后，发现还是出错，加了下边两行代码后得以解决。<br><br>import os<br>os.environ[&quot;PATH&quot;] += os.pathsep + &#39;D:&#47;Program Files (x86)&#47;Graphviz2.38&#47;bin&#47;&#39;<br><br>在 Windows 中，只需在开头添加这两行，其中 &#39;D：&#47; Program Files（x86）&#47;Graphviz2.38&#47;bin&#47;&#39; 将替换为 bin 文件所在的地址。","like_count":9,"discussions":[{"author":{"id":1706305,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/09/41/b4c28c8c.jpg","nickname":"Y.N","note":"","ucode":"D8CCDB7C2441DB","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":37543,"discussion_content":"感谢感谢，同样遇到这个问题了！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571631530,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":71071,"user_name":"Lambert","can_delete":false,"product_type":"c1","uid":1361833,"ip_address":"","ucode":"4518DC2ACEAFF1","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJnryDfaYkQh7mTgVIQqk4vdeuY2oa82w0yxOVNfsz4qfSMqEqPFE9gKFvlhS53xY6YOrib86Z6vPA/132","comment_is_top":false,"comment_ctime":1551258971,"is_pvip":false,"replies":[{"id":"64498","content":"Good Job","user_name":"作者回复","user_name_real":"cy","uid":"1306094","ctime":1577620097,"ip_address":"","comment_id":71071,"utype":1}],"discussion_count":2,"race_medal":0,"score":"35910997339","product_id":100021701,"comment_content":"# 决策树可视化<br>from sklearn import tree<br>import graphviz<br>dot_data = tree.export_graphviz(clf, out_file=None)<br>graph = graphviz.Source(dot_data)<br>graph.render(&quot;tree&quot;)<br>graph.view(&#39;graph&#39;)","like_count":8,"discussions":[{"author":{"id":1306094,"avatar":"https://static001.geekbang.org/account/avatar/00/13/ed/ee/c4779b67.jpg","nickname":"cy","note":"","ucode":"50D653399A31F6","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":440973,"discussion_content":"Good Job","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577620097,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2223907,"avatar":"https://static001.geekbang.org/account/avatar/00/21/ef/23/1f192e21.jpg","nickname":"jion","note":"","ucode":"2CD8EA789ADAB9","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":353321,"discussion_content":"请问大神有决策树可视化的教程吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1615126489,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":63568,"user_name":"上官","can_delete":false,"product_type":"c1","uid":1353145,"ip_address":"","ucode":"037968A8E0C566","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJAeZ2VCia2y3bW9N7EMfgBqX8WClXUydwaXDPcK7Bm3XaMnMKx7q5ffA0UuTeJmEusxtQAibf8djCA/132","comment_is_top":false,"comment_ctime":1548403184,"is_pvip":false,"replies":[{"id":"38693","content":"在数据探索的过程中，我们可以通过打印train_data.info()和test_data.info()得出。<br>你能看到训练集train_data中一共有891行数据，其中Cabin有204个非空数据。同理，测试集test_data中一共有418行数据，其中Cabin有91个非空数据。所以Cabin缺失率分别是77%和78%。同理，你能看到训练集和测试集中的Age字段有缺失值（即空值），测试集中的Fare有缺失值。","user_name":"编辑回复","user_name_real":"何昌梅","uid":"1165037","ctime":1561431188,"ip_address":"","comment_id":63568,"utype":2}],"discussion_count":1,"race_medal":0,"score":"35908141552","product_id":100021701,"comment_content":"Carbin缺失率分别为 77% 和 78%， Age\\Fare有缺失值，这都是在哪儿判断出来的？<br>","like_count":8,"discussions":[{"author":{"id":1165037,"avatar":"https://static001.geekbang.org/account/avatar/00/11/c6/ed/89a2dc13.jpg","nickname":"丢了个丢丢丢","note":"","ucode":"BDD7E97E0E5E96","race_medal":0,"user_type":4,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":437639,"discussion_content":"在数据探索的过程中，我们可以通过打印train_data.info()和test_data.info()得出。\n你能看到训练集train_data中一共有891行数据，其中Cabin有204个非空数据。同理，测试集test_data中一共有418行数据，其中Cabin有91个非空数据。所以Cabin缺失率分别是77%和78%。同理，你能看到训练集和测试集中的Age字段有缺失值（即空值），测试集中的Fare有缺失值。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1561431188,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":4}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":78337,"user_name":"听妈妈的话","can_delete":false,"product_type":"c1","uid":1462417,"ip_address":"","ucode":"089D797A39C791","user_header":"https://static001.geekbang.org/account/avatar/00/16/50/91/0dd2b8ce.jpg","comment_is_top":false,"comment_ctime":1553131552,"is_pvip":false,"replies":[{"id":"64393","content":"不错的分享","user_name":"作者回复","user_name_real":"cy","uid":"1306094","ctime":1577618234,"ip_address":"","comment_id":78337,"utype":1}],"discussion_count":3,"race_medal":0,"score":"31617902624","product_id":100021701,"comment_content":"https:&#47;&#47;github.com&#47;apachecn&#47;kaggle&#47;tree&#47;master&#47;competitions&#47;getting-started&#47;titanic<br>我个人认为这里的预测方案写的更加详细一点，大家可以参考一下","like_count":7,"discussions":[{"author":{"id":1306094,"avatar":"https://static001.geekbang.org/account/avatar/00/13/ed/ee/c4779b67.jpg","nickname":"cy","note":"","ucode":"50D653399A31F6","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":444054,"discussion_content":"不错的分享","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577618234,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1312694,"avatar":"https://static001.geekbang.org/account/avatar/00/14/07/b6/e213fc11.jpg","nickname":"她の他","note":"","ucode":"A61CEC365D782F","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":4793,"discussion_content":"404了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1565744674,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1606706,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKGRpeljInKj7fUQvwrB9v6kmTOkJlG9ghUoWCXquaDDFmtXeDrEL4p8Gscfx4ZmfeSs2GbZgwwibg/132","nickname":"GodlikeJy","note":"","ucode":"85291FA61A13B8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1312694,"avatar":"https://static001.geekbang.org/account/avatar/00/14/07/b6/e213fc11.jpg","nickname":"她の他","note":"","ucode":"A61CEC365D782F","race_medal":0,"user_type":1,"is_pvip":true},"discussion":{"id":109941,"discussion_content":"https://github.com/apachecn/Interview/tree/master/docs/Kaggle/competitions/getting-started/titanic","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1577715211,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":4793,"ip_address":""},"score":109941,"extra":""}]}]},{"had_liked":false,"id":68630,"user_name":"柚子","can_delete":false,"product_type":"c1","uid":1382672,"ip_address":"","ucode":"721F6C7F5DD303","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTI45zO9GOMquk9JymTibN9sC25Sy4WtsDGRQzIRVIoIzPnaJGKmGe3jXqxP0zKZyTYazrXHBGYjBzw/132","comment_is_top":false,"comment_ctime":1550562578,"is_pvip":false,"replies":[{"id":"64530","content":"可以的","user_name":"作者回复","user_name_real":"cy","uid":"1306094","ctime":1577621330,"ip_address":"","comment_id":68630,"utype":1}],"discussion_count":2,"race_medal":0,"score":"31615333650","product_id":100021701,"comment_content":"关于graphviz：我用的是anaconda，通过在anaconda prompt界面输入 conda install python-graphviz 可以直接安装graphviz","like_count":7,"discussions":[{"author":{"id":1306094,"avatar":"https://static001.geekbang.org/account/avatar/00/13/ed/ee/c4779b67.jpg","nickname":"cy","note":"","ucode":"50D653399A31F6","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":439765,"discussion_content":"可以的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577621330,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2156508,"avatar":"https://static001.geekbang.org/account/avatar/00/20/e7/dc/d66864b0.jpg","nickname":"宁波","note":"","ucode":"07C1F707162A72","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":575529,"discussion_content":"厉害了，评论区","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1654919559,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":68094,"user_name":"hh","can_delete":false,"product_type":"c1","uid":1304791,"ip_address":"","ucode":"D43EFD6D314037","user_header":"https://static001.geekbang.org/account/avatar/00/13/e8/d7/9209f511.jpg","comment_is_top":false,"comment_ctime":1550412187,"is_pvip":true,"replies":[{"id":"38699","content":"多谢支持，后续有和数据相关的课程。<br>数据分析中的知识点比较多，同时也需要一些基础。所以课程中，有些基础的内容会省略，虽然专栏前面有3节关于python的内容，不过还是需要一定的python基础。另外每篇文章篇幅有限，我会尽量在讲解算法使用的基础上，进行一个完整的项目交付。很多使用细节和体会，还需要你通过日常的学习慢慢进行总结。","user_name":"编辑回复","user_name_real":"何昌梅","uid":"1165037","ctime":1561431501,"ip_address":"","comment_id":68094,"utype":2}],"discussion_count":1,"race_medal":0,"score":"27320215963","product_id":100021701,"comment_content":"老师的课太值了，请问老师还有其他课吗，真是干货满满","like_count":6,"discussions":[{"author":{"id":1165037,"avatar":"https://static001.geekbang.org/account/avatar/00/11/c6/ed/89a2dc13.jpg","nickname":"丢了个丢丢丢","note":"","ucode":"BDD7E97E0E5E96","race_medal":0,"user_type":4,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":439508,"discussion_content":"多谢支持，后续有和数据相关的课程。\n数据分析中的知识点比较多，同时也需要一些基础。所以课程中，有些基础的内容会省略，虽然专栏前面有3节关于python的内容，不过还是需要一定的python基础。另外每篇文章篇幅有限，我会尽量在讲解算法使用的基础上，进行一个完整的项目交付。很多使用细节和体会，还需要你通过日常的学习慢慢进行总结。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1561431501,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":4}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":70654,"user_name":"笔落惊风雨","can_delete":false,"product_type":"c1","uid":1340887,"ip_address":"","ucode":"DF50C18CFFEAD8","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eqyhBcYwcW0049zCvImcuiaKoKovSZUpoAbzCjiaEBc2vuuUWtuBDjt63sg37mSMNUVVndpGKBCcLpQ/132","comment_is_top":false,"comment_ctime":1551157523,"is_pvip":false,"replies":[{"id":"38698","content":"我上传了完整的代码到GitHub上。你可以先自己运行一遍。如果有哪个模块不理解的，你可以加到微信群里，和我单独交流。也可以直接加我微信 cylearn123。","user_name":"编辑回复","user_name_real":"何昌梅","uid":"1165037","ctime":1561431434,"ip_address":"","comment_id":70654,"utype":2}],"discussion_count":1,"race_medal":0,"score":"23025994003","product_id":100021701,"comment_content":"我表示真的没看明白 来回来看5遍了","like_count":5,"discussions":[{"author":{"id":1165037,"avatar":"https://static001.geekbang.org/account/avatar/00/11/c6/ed/89a2dc13.jpg","nickname":"丢了个丢丢丢","note":"","ucode":"BDD7E97E0E5E96","race_medal":0,"user_type":4,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":440752,"discussion_content":"我上传了完整的代码到GitHub上。你可以先自己运行一遍。如果有哪个模块不理解的，你可以加到微信群里，和我单独交流。也可以直接加我微信 cylearn123。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1561431434,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":4}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":195821,"user_name":"桔子","can_delete":false,"product_type":"c1","uid":1245080,"ip_address":"","ucode":"635DB29C04FD47","user_header":"https://static001.geekbang.org/account/avatar/00/12/ff/98/6e17646a.jpg","comment_is_top":false,"comment_ctime":1585217122,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"18765086306","product_id":100021701,"comment_content":"决策树的优势是分类决策可以解释性强，速度快，分类准确率高。分类效果普遍不错，但是对异常值敏感，容易过拟合。<br>类似贪心算法<br>每次都是在当前情况下，选择最优选择，这样获得决策容易陷入局部最优和非全局最优<br>而且在一步步选择中，忽略了特征间的相关性<br>优化思路，引入随机森林：随机可以提升抗过拟合的能力，森林可以提高准确度","like_count":4,"discussions":[{"author":{"id":2037505,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/17/01/1c5309a3.jpg","nickname":"McKee Chen","note":"","ucode":"F74B76542FAB65","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":331229,"discussion_content":"������","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1606811991,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":132327,"user_name":"建强","can_delete":false,"product_type":"c1","uid":1397126,"ip_address":"","ucode":"62B03D0E0C64EC","user_header":"https://static001.geekbang.org/account/avatar/00/15/51/86/b5fd8dd8.jpg","comment_is_top":false,"comment_ctime":1568084964,"is_pvip":false,"replies":[{"id":"63503","content":"正确，总结的不错","user_name":"作者回复","user_name_real":"cy","uid":"1306094","ctime":1577515129,"ip_address":"","comment_id":132327,"utype":1}],"discussion_count":1,"race_medal":0,"score":"14452986852","product_id":100021701,"comment_content":"      transform()和fit_transform()二者的功能都是对数据进行某种统一处理（比如标准化~N(0,1)，将数据缩放(映射)到某个固定区间，归一化，正则化等）。<br>      fit_transform(trainData)对部分训练数据先拟合fit，找到部分训练数据的整体指标，如均值、方差、最大值最小值等等（根据具体转换的目的），然后对训练数据进行转换transform，从而实现数据的标准化、归一化等等。<br>       根据对之前部分训练数据进行fit的整体指标，对测试数据集使用同样的均值、方差、最大、最小值等指标进行转换transform(testData)，从而保证train、test处理方式相同。<br>","like_count":4,"discussions":[{"author":{"id":1306094,"avatar":"https://static001.geekbang.org/account/avatar/00/13/ed/ee/c4779b67.jpg","nickname":"cy","note":"","ucode":"50D653399A31F6","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":466879,"discussion_content":"正确，总结的不错","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577515129,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":64160,"user_name":"szm","can_delete":false,"product_type":"c1","uid":1352697,"ip_address":"","ucode":"53E753D3D04431","user_header":"https://static001.geekbang.org/account/avatar/00/14/a3/f9/9180d6d1.jpg","comment_is_top":false,"comment_ctime":1548681813,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"14433583701","product_id":100021701,"comment_content":"那个问如何将预测的结果写入到test.csv中的? 直接test_data[&#39;Survived&#39;] = pred_labels就可以了。","like_count":3},{"had_liked":false,"id":63597,"user_name":"mickey","can_delete":false,"product_type":"c1","uid":1051663,"ip_address":"","ucode":"8B490C2DDE4010","user_header":"https://static001.geekbang.org/account/avatar/00/10/0c/0f/93d1c8eb.jpg","comment_is_top":false,"comment_ctime":1548411646,"is_pvip":false,"replies":[{"id":"64660","content":"Good Job","user_name":"作者回复","user_name_real":"cy","uid":"1306094","ctime":1577623575,"ip_address":"","comment_id":63597,"utype":1}],"discussion_count":1,"race_medal":0,"score":"14433313534","product_id":100021701,"comment_content":"# encoding=utf-8<br>import pandas as pd<br>from sklearn.feature_extraction import DictVectorizer<br>from sklearn.tree import DecisionTreeClassifier<br>import numpy as np<br>from sklearn.model_selection import cross_val_score<br><br># 数据加载<br>train_data = pd.read_csv(&#39;.&#47;Titanic_Data&#47;train.csv&#39;)<br>test_data = pd.read_csv(&#39;.&#47;Titanic_Data&#47;test.csv&#39;)<br><br># 数据探索<br>print(train_data.info())<br>print(train_data.describe())<br>print(train_data.describe(include=[&#39;O&#39;]))<br>print(train_data.head())<br>print(train_data.tail())<br><br># 数据清洗<br># 使用平均年龄来填充年龄中的Nan值<br>train_data[&#39;Age&#39;].fillna(train_data[&#39;Age&#39;].mean(), inplace=True)<br>test_data[&#39;Age&#39;].fillna(test_data[&#39;Age&#39;].mean(),inplace=True)<br># 使用票价的均值填充票价中的Nan值<br>train_data[&#39;Fare&#39;].fillna(train_data[&#39;Fare&#39;].mean(), inplace=True)<br>test_data[&#39;Fare&#39;].fillna(test_data[&#39;Fare&#39;].mean(),inplace=True)<br><br># 使用登录最多的港口来填充登录港口的nan值<br># print(train_data[&#39;Embarked&#39;].value_counts())<br>train_data[&#39;Embarked&#39;].fillna(&#39;S&#39;, inplace=True)<br>test_data[&#39;Embarked&#39;].fillna(&#39;S&#39;,inplace=True)<br><br># 特征选择<br>features = [&#39;Pclass&#39;, &#39;Sex&#39;, &#39;Age&#39;, &#39;SibSp&#39;, &#39;Parch&#39;, &#39;Fare&#39;, &#39;Embarked&#39;]<br>train_features = train_data[features]<br>train_labels = train_data[&#39;Survived&#39;]<br>test_features = test_data[features]<br><br>dvec = DictVectorizer(sparse=False)<br>train_features = dvec.fit_transform(train_features.to_dict(orient=&#39;record&#39;))<br><br># 构造ID3决策树<br>clf = DecisionTreeClassifier(criterion=&#39;entropy&#39;)<br><br># 决策树训练<br>clf.fit(train_features, train_labels)<br><br># 得到决策树准确率<br>acc_decision_tree = round(clf.score(train_features, train_labels), 6)<br>print(u&#39;score准确率为 %.4lf&#39; % acc_decision_tree)<br><br># 使用K折交叉验证 统计决策树准确率<br>print(u&#39;cross_val_score准确率为 %.4lf&#39; % np.mean(cross_val_score(clf, train_features, train_labels, cv=10)))","like_count":3,"discussions":[{"author":{"id":1306094,"avatar":"https://static001.geekbang.org/account/avatar/00/13/ed/ee/c4779b67.jpg","nickname":"cy","note":"","ucode":"50D653399A31F6","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":437650,"discussion_content":"Good Job","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577623575,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":63456,"user_name":"Python","can_delete":false,"product_type":"c1","uid":1276314,"ip_address":"","ucode":"969500D2A88AE6","user_header":"https://static001.geekbang.org/account/avatar/00/13/79/9a/4f907ad6.jpg","comment_is_top":false,"comment_ctime":1548378387,"is_pvip":false,"replies":[{"id":"38694","content":"对的，如果大家刚接触sklearn，这个是需要注意的地方之一。","user_name":"编辑回复","user_name_real":"何昌梅","uid":"1165037","ctime":1561431241,"ip_address":"","comment_id":63456,"utype":2}],"discussion_count":1,"race_medal":0,"score":"14433280275","product_id":100021701,"comment_content":"这两个函数最后得出的结果完全一样，但实际上用法有所不同。如果一定要两个一起用，那肯定是得先<br>fit_transforms,再transforms，不然就会报错。fit_transforms实际上是fit()和transforms（）这两个函数的集合","like_count":3,"discussions":[{"author":{"id":1165037,"avatar":"https://static001.geekbang.org/account/avatar/00/11/c6/ed/89a2dc13.jpg","nickname":"丢了个丢丢丢","note":"","ucode":"BDD7E97E0E5E96","race_medal":0,"user_type":4,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":437594,"discussion_content":"对的，如果大家刚接触sklearn，这个是需要注意的地方之一。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1561431241,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":4}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":108386,"user_name":"永降不息之雨","can_delete":false,"product_type":"c1","uid":1362563,"ip_address":"","ucode":"087A934F68E445","user_header":"https://static001.geekbang.org/account/avatar/00/14/ca/83/684361be.jpg","comment_is_top":false,"comment_ctime":1561735679,"is_pvip":false,"replies":[{"id":"39296","content":"嗯 在数据探索阶段可以打印train_data.info()和test_data.info()进行查看<br>","user_name":"作者回复","user_name_real":"cy","uid":"1306094","ctime":1561794919,"ip_address":"","comment_id":108386,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10151670271","product_id":100021701,"comment_content":"自己写了一遍代码，说怎么一直报错，原来是测试集的fare有缺失啊！<br>","like_count":2,"discussions":[{"author":{"id":1306094,"avatar":"https://static001.geekbang.org/account/avatar/00/13/ed/ee/c4779b67.jpg","nickname":"cy","note":"","ucode":"50D653399A31F6","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":455945,"discussion_content":"嗯 在数据探索阶段可以打印train_data.info()和test_data.info()进行查看\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1561794919,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":63734,"user_name":"JingZ","can_delete":false,"product_type":"c1","uid":1023464,"ip_address":"","ucode":"6F97895B2CC375","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/wJphZ3HcvhjVUyTWCIsCugzfQY5NAy6VJ0XoPLibDlcHWMswFmFe678zd0lUjFETia80NQhyQcVnGDlKgKPcRGyw/132","comment_is_top":false,"comment_ctime":1548480328,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10138414920","product_id":100021701,"comment_content":"Mac下配置graphviz<br><br>安装brew<br><br>ruby -e &quot;$(curl -fsSL https:&#47;&#47;raw.githubusercontent.com&#47;Homebrew&#47;install&#47;master&#47;install)&quot;<br><br>安装graphviz：<br><br>brew install graphviz<br>--------------------- <br><br>#决策树可视化<br>from sklearn import tree<br>import pydotplus<br>from sklearn.externals.six import StringIO<br>dot_data = StringIO()<br>tree.export_graphviz(clf, out_file=dot_data)<br>graph = pydotplus.graph_from_dot_data(dot_data.getvalue())<br>graph.write_pdf(&quot;Titanic.pdf&quot;)","like_count":2},{"had_liked":false,"id":94140,"user_name":"羊小看","can_delete":false,"product_type":"c1","uid":1488453,"ip_address":"","ucode":"90F58F80A75520","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJYEdMwBDUC6gYrUoI7092ocWJPyw1aP8xNOFXxOv7LEw1xj5a4icDibV7pd9vN45lXicXYjB7oYXVqg/132","comment_is_top":false,"comment_ctime":1557730083,"is_pvip":false,"replies":[{"id":"64180","content":"可以先做样本均衡，也就是对正样本的进行重采样，使得正负样本均衡，然后再采用分类模型","user_name":"作者回复","user_name_real":"cy","uid":"1306094","ctime":1577613737,"ip_address":"","comment_id":94140,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5852697379","product_id":100021701,"comment_content":"老师，你好！想问下，做分类时，样本的正负类别的数量对比，有限制吗？正类比较少，占比只有5%，可以吗？会出现什么问题吗？谢谢！","like_count":1,"discussions":[{"author":{"id":1306094,"avatar":"https://static001.geekbang.org/account/avatar/00/13/ed/ee/c4779b67.jpg","nickname":"cy","note":"","ucode":"50D653399A31F6","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":449930,"discussion_content":"可以先做样本均衡，也就是对正样本的进行重采样，使得正负样本均衡，然后再采用分类模型","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577613737,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":78811,"user_name":"pythonzwd","can_delete":false,"product_type":"c1","uid":1449841,"ip_address":"","ucode":"BD5D8C47DC5BBA","user_header":"https://static001.geekbang.org/account/avatar/00/16/1f/71/ad9de027.jpg","comment_is_top":false,"comment_ctime":1553244192,"is_pvip":false,"replies":[{"id":"64376","content":"# 决策树预测<br>pred_labels = clf.predict(test_features)","user_name":"作者回复","user_name_real":"cy","uid":"1306094","ctime":1577618009,"ip_address":"","comment_id":78811,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5848211488","product_id":100021701,"comment_content":"咨询一下，就是那个是否生存的结果如何生成出来","like_count":1,"discussions":[{"author":{"id":1306094,"avatar":"https://static001.geekbang.org/account/avatar/00/13/ed/ee/c4779b67.jpg","nickname":"cy","note":"","ucode":"50D653399A31F6","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":444238,"discussion_content":"# 决策树预测\npred_labels = clf.predict(test_features)","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577618009,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":73228,"user_name":"毛毛","can_delete":false,"product_type":"c1","uid":1257705,"ip_address":"","ucode":"D6F93A13E9046A","user_header":"https://static001.geekbang.org/account/avatar/00/13/30/e9/13fb8d51.jpg","comment_is_top":false,"comment_ctime":1551843102,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5846810398","product_id":100021701,"comment_content":"使用train_test_split函数，提前拆分训练集测试集，就不需要再用k折交叉验证了","like_count":1},{"had_liked":false,"id":67347,"user_name":"JI HU WU","can_delete":false,"product_type":"c1","uid":1353509,"ip_address":"","ucode":"FA6CF060C0266F","user_header":"https://static001.geekbang.org/account/avatar/00/14/a7/25/e4535b98.jpg","comment_is_top":false,"comment_ctime":1550133410,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5845100706","product_id":100021701,"comment_content":"import numpy as np<br>import pandas as pd<br>from sklearn.feature_extraction import DictVectorizer<br>from sklearn.tree import DecisionTreeClassifier<br>from sklearn.model_selection import cross_val_score<br>from pandas import DataFrame<br># 数据加载<br>train_data = pd.read_csv(&#39;..&#47;data&#47;train.csv&#39;)<br>test_data = pd.read_csv(&#39;..&#47;data&#47;test.csv&#39;)<br># 数据清洗<br># 使用平均年龄来填充年龄中的Nan值<br>train_data[&#39;Age&#39;].fillna(train_data[&#39;Age&#39;].mean(), inplace=True)<br>test_data[&#39;Age&#39;].fillna(test_data[&#39;Age&#39;].mean(),inplace=True)<br># 使用票价的均值填充票价中的Nan值<br>train_data[&#39;Fare&#39;].fillna(train_data[&#39;Fare&#39;].mean(), inplace=True)<br>test_data[&#39;Fare&#39;].fillna(test_data[&#39;Fare&#39;].mean(),inplace=True)<br># 使用登录最多的港口来填充登录港口的nan值<br># print(train_data[&#39;Embarked&#39;].value_counts())<br>train_data[&#39;Embarked&#39;].fillna(&#39;S&#39;, inplace=True)<br>test_data[&#39;Embarked&#39;].fillna(&#39;S&#39;,inplace=True)<br># 特征选择<br>features = [&#39;Pclass&#39;, &#39;Sex&#39;, &#39;Age&#39;, &#39;SibSp&#39;, &#39;Parch&#39;, &#39;Fare&#39;, &#39;Embarked&#39;]<br>train_features = train_data[features]<br>train_labels = train_data[&#39;Survived&#39;]<br>test_features = test_data[features]<br>dvec = DictVectorizer(sparse=False)<br>train_features = dvec.fit_transform(train_features.to_dict(orient=&#39;record&#39;))<br># 构造ID3决策树<br>clf = DecisionTreeClassifier(criterion=&#39;entropy&#39;)<br># 决策树训练<br>clf.fit(train_features, train_labels)<br># 得到决策树准确率<br>acc_decision_tree = round(clf.score(train_features, train_labels), 6)<br>print(u&#39;score准确率为 %.4lf&#39; % acc_decision_tree)<br># 使用K折交叉验证 统计决策树准确率<br>print(u&#39;cross_val_score准确率为 %.4lf&#39; % np.mean(cross_val_score(clf, train_features, train_labels, cv=10)))<br>test_features=dvec.transform(test_features.to_dict(orient=&#39;record&#39;))<br># 决策树预测<br>pred_labels = clf.predict(test_features)<br>print(pred_labels)<br>features1 = [&#39;PassengerId&#39;,&#39;Name&#39;]<br>df1=test_data[features1]<br>df1[&#39;label&#39;] = pred_labels<br>print(df1)<br>最后面这几行是我添加的， 我想把predict的结果跟passenger id关联起来，不知道这样做行不行（主要是顺序问题，如果顺序都是乱的，拼接肯定不行），请老师点评。<br>score准确率为 0.9820<br>cross_val_score准确率为 0.7791<br>[0 0 1 1 1.....]<br>------<br>     PassengerId                                               Name  label<br>0            892                                   Kelly, Mr. James      0","like_count":1},{"had_liked":false,"id":64720,"user_name":"雨先生的晴天","can_delete":false,"product_type":"c1","uid":1246015,"ip_address":"","ucode":"71850548322A1C","user_header":"https://static001.geekbang.org/account/avatar/00/13/03/3f/09308258.jpg","comment_is_top":false,"comment_ctime":1548877876,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5843845172","product_id":100021701,"comment_content":"关于Cabin缺失率的判断如下： Train_data:（891-204）&#47;891=77%<br>                                               Test_data:  (418-91) &#47; 418 = 78%<br><br>关于Graphviz的安装问题：  <br>第一步： 大家应该先从官网下载Graphviz, 本人选择了 Stable 2.38 Windows install packages Link:https:&#47;&#47;graphviz.gitlab.io&#47;_pages&#47;Download&#47;Download_windows.html<br>选择graphviz-2.38.msi<br>第二步，在advanced system setting中，environment variables下面的 system variables.粘贴graphviz文件夹bin的位置. 本人个人设置为：C:\\Program Files (x86)\\Graphviz2.38\\bin<br>第三步：重启jupyter notebook. 重新run一边graphviz  或者 在新的Windows prompt里输入dot -version. 如果安装成功，prompt会显示 graphviz 的版本信息。","like_count":1},{"had_liked":false,"id":63967,"user_name":"乐天","can_delete":false,"product_type":"c1","uid":1363746,"ip_address":"","ucode":"F7DBE3A2768499","user_header":"https://static001.geekbang.org/account/avatar/00/14/cf/22/bd483141.jpg","comment_is_top":false,"comment_ctime":1548633167,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"5843600463","product_id":100021701,"comment_content":"安装 Graphviz 库需要下面的几步：<br><br>这个是如何下载安装呢，还是不太懂","like_count":1,"discussions":[{"author":{"id":2415687,"avatar":"https://static001.geekbang.org/account/avatar/00/24/dc/47/554aa6b8.jpg","nickname":"需要努力的、","note":"","ucode":"04627BD9ED77DD","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":532665,"discussion_content":"https://www.cnblogs.com/simpleDi/p/9971971.html","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1637662763,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"user_type\":1}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":63596,"user_name":"上官","can_delete":false,"product_type":"c1","uid":1353145,"ip_address":"","ucode":"037968A8E0C566","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJAeZ2VCia2y3bW9N7EMfgBqX8WClXUydwaXDPcK7Bm3XaMnMKx7q5ffA0UuTeJmEusxtQAibf8djCA/132","comment_is_top":false,"comment_ctime":1548411394,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5843378690","product_id":100021701,"comment_content":"Graphviz 可视化这一段的代码可以贴一下吗？安装好了不知道怎么实现，谢谢","like_count":1},{"had_liked":false,"id":63591,"user_name":"从未在此","can_delete":false,"product_type":"c1","uid":1354589,"ip_address":"","ucode":"5A4AA275D8EE9A","user_header":"https://static001.geekbang.org/account/avatar/00/14/ab/5d/430ed3b6.jpg","comment_is_top":false,"comment_ctime":1548410402,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5843377698","product_id":100021701,"comment_content":"分类非字符特征感觉get_dummies更方便","like_count":1},{"had_liked":false,"id":63466,"user_name":"Yezhiwei","can_delete":false,"product_type":"c1","uid":1005157,"ip_address":"","ucode":"31E8E33688CBEC","user_header":"https://static001.geekbang.org/account/avatar/00/0f/56/65/22a37a8e.jpg","comment_is_top":false,"comment_ctime":1548379986,"is_pvip":false,"replies":[{"id":"64663","content":"可以的","user_name":"作者回复","user_name_real":"cy","uid":"1306094","ctime":1577623666,"ip_address":"","comment_id":63466,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5843347282","product_id":100021701,"comment_content":"是否可以将文章中的训练集分成训练集和测试集进行模型训练和评估，文章中的测试集模拟未知的真实数据？","like_count":1,"discussions":[{"author":{"id":1306094,"avatar":"https://static001.geekbang.org/account/avatar/00/13/ed/ee/c4779b67.jpg","nickname":"cy","note":"","ucode":"50D653399A31F6","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":437600,"discussion_content":"可以的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577623666,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":356777,"user_name":"Geek_53e08e","can_delete":false,"product_type":"c1","uid":3073408,"ip_address":"山西","ucode":"2CD84EF58A4488","user_header":"","comment_is_top":false,"comment_ctime":1662569890,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1662569890","product_id":100021701,"comment_content":"“特征值里有一些是字符串，这样不方便后续的运算，需要转成数值类型，比如 Sex 字段，有 male 和 female 两种取值。我们可以把它变成 Sex=male 和 Sex=female 两个字段，数值用 0 或 1 来表示。同理 Embarked 有 S、C、Q 三种可能，我们也可以改成 Embarked=S、Embarked=C 和 Embarked=Q 三个字段，数值用 0 或 1 来表示。”<br>请问为什么必须要换成数字，就用male、female两个值不行吗？<br>包括Embarked，就用S、C、Q三个值不行吗？<br>求解答","like_count":0},{"had_liked":false,"id":340696,"user_name":"Geek_756855","can_delete":false,"product_type":"c1","uid":2936163,"ip_address":"","ucode":"EB09C2099E77AA","user_header":"","comment_is_top":false,"comment_ctime":1649055943,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1649055943","product_id":100021701,"comment_content":"老师好，关于K 折交叉验证请教一下，“将数据集分割成 K 等份；1 份数据作测试数据，其余为训练数据”，训练数据不同，训练出的模型就不同，那最终是选择哪个模型呢，这样算平均准确率有什么意义呢","like_count":0},{"had_liked":false,"id":325003,"user_name":"dpuser0515","can_delete":false,"product_type":"c1","uid":2700277,"ip_address":"","ucode":"C963D7CC0B8CDC","user_header":"https://static001.geekbang.org/account/avatar/00/29/33/f5/b94cf451.jpg","comment_is_top":false,"comment_ctime":1638776759,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1638776759","product_id":100021701,"comment_content":"求问fittransform那步为什么会出现溢出报错","like_count":0},{"had_liked":false,"id":324407,"user_name":"静心","can_delete":false,"product_type":"c1","uid":1335457,"ip_address":"","ucode":"EB264FA6519FDA","user_header":"https://static001.geekbang.org/account/avatar/00/14/60/a1/8f003697.jpg","comment_is_top":false,"comment_ctime":1638417114,"is_pvip":true,"discussion_count":0,"race_medal":5,"score":"1638417114","product_id":100021701,"comment_content":"test_features=dvec.transform(test_features.to_dict(orient=&#39;record&#39;))<br>这句没完全明白，test_features.to_dict(orient=&#39;record&#39;)起什么作用","like_count":0},{"had_liked":false,"id":321443,"user_name":"欠儿登","can_delete":false,"product_type":"c1","uid":2816350,"ip_address":"","ucode":"3AEECE8B93BC70","user_header":"https://static001.geekbang.org/account/avatar/00/2a/f9/5e/947d77f6.jpg","comment_is_top":false,"comment_ctime":1636879634,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1636879634","product_id":100021701,"comment_content":"最后一步可视化 一直报错argument of type &#39;WindowsPath&#39; is not iterable<br>评论区的方法都试过了还是不行，跪求大神解答","like_count":0,"discussions":[{"author":{"id":2415687,"avatar":"https://static001.geekbang.org/account/avatar/00/24/dc/47/554aa6b8.jpg","nickname":"需要努力的、","note":"","ucode":"04627BD9ED77DD","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":532666,"discussion_content":"这个比较详细，看看是否满足\nhttps://www.cnblogs.com/simpleDi/p/9971971.html","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1637662832,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"user_type\":1}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":317239,"user_name":"Kun","can_delete":false,"product_type":"c1","uid":2813348,"ip_address":"","ucode":"CA9CDD0677BC93","user_header":"https://static001.geekbang.org/account/avatar/00/2a/ed/a4/e16984ba.jpg","comment_is_top":false,"comment_ctime":1634719022,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1634719022","product_id":100021701,"comment_content":"为什么不使用onehotencoding，而使用DictVectorizer呢？<br>","like_count":0},{"had_liked":false,"id":306355,"user_name":"水煮不是清蒸","can_delete":false,"product_type":"c1","uid":1197090,"ip_address":"","ucode":"A1CDBD176193C3","user_header":"https://static001.geekbang.org/account/avatar/00/12/44/22/679200f9.jpg","comment_is_top":false,"comment_ctime":1628508637,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1628508637","product_id":100021701,"comment_content":"请问老师，该如何使用cohen_kappa_score评分机制进行查看。","like_count":0},{"had_liked":false,"id":298142,"user_name":"春和景明","can_delete":false,"product_type":"c1","uid":1272482,"ip_address":"","ucode":"A27970A276ECD6","user_header":"https://static001.geekbang.org/account/avatar/00/13/6a/a2/f9efd9dc.jpg","comment_is_top":false,"comment_ctime":1623922411,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1623922411","product_id":100021701,"comment_content":"老师，Fare 为船票价格，是数值型，我们也可以通过其他人购买船票的平均值进行补齐。。 我没发现Fare字段有缺失。，是我的文件不对吗？我从github上下载的","like_count":0},{"had_liked":false,"id":296173,"user_name":"unice","can_delete":false,"product_type":"c1","uid":2122126,"ip_address":"","ucode":"214B4B0EA0D9FE","user_header":"https://static001.geekbang.org/account/avatar/00/20/61/8e/3e97553a.jpg","comment_is_top":false,"comment_ctime":1622792661,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1622792661","product_id":100021701,"comment_content":"缺失值填充的时候，测试集缺失的数据能用测试集的均值填充吗？","like_count":0},{"had_liked":false,"id":269764,"user_name":"冯伟豪","can_delete":false,"product_type":"c1","uid":1854052,"ip_address":"","ucode":"7E455CE2863211","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/cApzByownnaJAmfaAMJoYf3ztGSaPicnoJ9mhetXzbcD8SGaF8TkKoUA4oWYKve7eiaYFVgw8icRk1Z904KibTpogQ/132","comment_is_top":false,"comment_ctime":1608779393,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1608779393","product_id":100021701,"comment_content":"思路很好，很接近实际工作中的流程","like_count":0},{"had_liked":false,"id":264411,"user_name":"McKee Chen","can_delete":false,"product_type":"c1","uid":2037505,"ip_address":"","ucode":"F74B76542FAB65","user_header":"https://static001.geekbang.org/account/avatar/00/1f/17/01/1c5309a3.jpg","comment_is_top":false,"comment_ctime":1606459274,"is_pvip":false,"replies":[{"id":"100890","content":"加油加油","user_name":"作者回复","user_name_real":"cy","uid":"1306094","ctime":1612706460,"ip_address":"","comment_id":264411,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1606459274","product_id":100021701,"comment_content":"这节课听完一遍之后，对整个解决决策树预测问题的流程有了清晰、明确的了解与认知，老师讲解的特别好，让我一下子就听明白了。准备开始上手写这节课的代码，好记性不如烂笔头。","like_count":0,"discussions":[{"author":{"id":1306094,"avatar":"https://static001.geekbang.org/account/avatar/00/13/ed/ee/c4779b67.jpg","nickname":"cy","note":"","ucode":"50D653399A31F6","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":510556,"discussion_content":"加油加油","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1612706460,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":247913,"user_name":"0256","can_delete":false,"product_type":"c1","uid":2043466,"ip_address":"","ucode":"B06B959327A2B2","user_header":"","comment_is_top":false,"comment_ctime":1599915930,"is_pvip":false,"replies":[{"id":"103060","content":"同学看的很仔细！如果要计算准确率，那么必须要知道目标值，test我们只有特征集，没有目标值，因此不能使用test计算准确率。常用的方式是会使用课程中的k折交叉验证，如果数据集较大，也可以在训练集中再拆分个验证集出来，用于计算模型的准确率。","user_name":"作者回复","user_name_real":"cy","uid":"1306094","ctime":1616083234,"ip_address":"","comment_id":247913,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1599915930","product_id":100021701,"comment_content":"为什么最后算准确率的时候，是用的train，而不是test呢？","like_count":0,"discussions":[{"author":{"id":1306094,"avatar":"https://static001.geekbang.org/account/avatar/00/13/ed/ee/c4779b67.jpg","nickname":"cy","note":"","ucode":"50D653399A31F6","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":505526,"discussion_content":"同学看的很仔细！如果要计算准确率，那么必须要知道目标值，test我们只有特征集，没有目标值，因此不能使用test计算准确率。常用的方式是会使用课程中的k折交叉验证，如果数据集较大，也可以在训练集中再拆分个验证集出来，用于计算模型的准确率。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1616083234,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":233822,"user_name":"freedomwl","can_delete":false,"product_type":"c1","uid":2031687,"ip_address":"","ucode":"13639B043B1C11","user_header":"","comment_is_top":false,"comment_ctime":1594463957,"is_pvip":false,"replies":[{"id":"103513","content":"理论上是会提高模型实际精度。在kaggle比赛中，交叉验证是非常常用的提分措施。","user_name":"作者回复","user_name_real":"cy","uid":"1306094","ctime":1616693692,"ip_address":"","comment_id":233822,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1594463957","product_id":100021701,"comment_content":"老师，k折交叉验证除了告诉我们实际的准确率，用这种方法训练模型是否能提高模型实际精度？","like_count":0,"discussions":[{"author":{"id":1306094,"avatar":"https://static001.geekbang.org/account/avatar/00/13/ed/ee/c4779b67.jpg","nickname":"cy","note":"","ucode":"50D653399A31F6","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":501177,"discussion_content":"理论上是会提高模型实际精度。在kaggle比赛中，交叉验证是非常常用的提分措施。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1616693692,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":230400,"user_name":"wei","can_delete":false,"product_type":"c1","uid":1698607,"ip_address":"","ucode":"96DF0E5440BBA8","user_header":"https://static001.geekbang.org/account/avatar/00/19/eb/2f/baad4b9d.jpg","comment_is_top":false,"comment_ctime":1593362110,"is_pvip":false,"replies":[{"id":"103711","content":"转换器模型需要先fit，再利用拟合好的转换器进行transform转换。","user_name":"作者回复","user_name_real":"cy","uid":"1306094","ctime":1617034618,"ip_address":"","comment_id":230400,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1593362110","product_id":100021701,"comment_content":"fit_transform是先fit再transform还是先transform再fit？我的理解是先transform，因为transform后的data才是用来fit的输入，这样理解对么？","like_count":0,"discussions":[{"author":{"id":1306094,"avatar":"https://static001.geekbang.org/account/avatar/00/13/ed/ee/c4779b67.jpg","nickname":"cy","note":"","ucode":"50D653399A31F6","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":499868,"discussion_content":"转换器模型需要先fit，再利用拟合好的转换器进行transform转换。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1617034618,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":210898,"user_name":"Geek_c9fa4e","can_delete":false,"product_type":"c1","uid":1972305,"ip_address":"","ucode":"391982F33C1AAA","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/ziaN7rOONp15HJm6A9JoAYicJL8VA59x10DX4JZyvcfqmmpCnumXgAkNn37aFoALftyTaQNlUF7te54LibvVm20TQ/132","comment_is_top":false,"comment_ctime":1587863356,"is_pvip":false,"replies":[{"id":"103766","content":"fit一般翻译成拟合","user_name":"作者回复","user_name_real":"cy","uid":"1306094","ctime":1617041615,"ip_address":"","comment_id":210898,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1587863356","product_id":100021701,"comment_content":"fit_transform是输入加转换，而transform表示转换。","like_count":0,"discussions":[{"author":{"id":1306094,"avatar":"https://static001.geekbang.org/account/avatar/00/13/ed/ee/c4779b67.jpg","nickname":"cy","note":"","ucode":"50D653399A31F6","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":493141,"discussion_content":"fit一般翻译成拟合","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1617041615,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":208158,"user_name":"hellojd_gk","can_delete":false,"product_type":"c1","uid":1679543,"ip_address":"","ucode":"319AF4C1AD568D","user_header":"https://static001.geekbang.org/account/avatar/00/19/a0/b7/1327ae60.jpg","comment_is_top":false,"comment_ctime":1587286363,"is_pvip":false,"replies":[{"id":"103978","content":"继续加油哦！！","user_name":"作者回复","user_name_real":"cy","uid":"1306094","ctime":1617290015,"ip_address":"","comment_id":208158,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1587286363","product_id":100021701,"comment_content":"结合老师的讲解，配合老师代码，再加上谷歌搜索。 对我python小白，看明白了。","like_count":0,"discussions":[{"author":{"id":1306094,"avatar":"https://static001.geekbang.org/account/avatar/00/13/ed/ee/c4779b67.jpg","nickname":"cy","note":"","ucode":"50D653399A31F6","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":492360,"discussion_content":"继续加油哦！！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1617290015,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":208150,"user_name":"hellojd_gk","can_delete":false,"product_type":"c1","uid":1679543,"ip_address":"","ucode":"319AF4C1AD568D","user_header":"https://static001.geekbang.org/account/avatar/00/19/a0/b7/1327ae60.jpg","comment_is_top":false,"comment_ctime":1587284540,"is_pvip":false,"replies":[{"id":"103980","content":"原数据集内Embarked，Cabin，Age这三个字段存在缺失值，同学再检查下代码哦","user_name":"作者回复","user_name_real":"cy","uid":"1306094","ctime":1617290282,"ip_address":"","comment_id":208150,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1587284540","product_id":100021701,"comment_content":"通过数据探索，我们发现 Age、Fare 和 Cabin 这三个字段的数据有所缺失。 我看到结果是：Embarked，Cabin，Age这三个字段有所缺失。 不知道是我理解有问题，还是老师的内容有问题。求确认。","like_count":0,"discussions":[{"author":{"id":1306094,"avatar":"https://static001.geekbang.org/account/avatar/00/13/ed/ee/c4779b67.jpg","nickname":"cy","note":"","ucode":"50D653399A31F6","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":492356,"discussion_content":"原数据集内Embarked，Cabin，Age这三个字段存在缺失值，同学再检查下代码哦","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1617290282,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":203749,"user_name":"猛仔","can_delete":false,"product_type":"c1","uid":1135420,"ip_address":"","ucode":"7EFC244D8726D7","user_header":"https://static001.geekbang.org/account/avatar/00/11/53/3c/c86e3052.jpg","comment_is_top":false,"comment_ctime":1586262422,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1586262422","product_id":100021701,"comment_content":"老师不太理解特征选择中，’将特征向量转化为特征值矩阵‘，能否讲解一下","like_count":0},{"had_liked":false,"id":193910,"user_name":"JustDoDT","can_delete":false,"product_type":"c1","uid":1127175,"ip_address":"","ucode":"6AF0B80F00EAEF","user_header":"https://static001.geekbang.org/account/avatar/00/11/33/07/8f351609.jpg","comment_is_top":false,"comment_ctime":1584980041,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1584980041","product_id":100021701,"comment_content":"交作业：代码：<br>https:&#47;&#47;github.com&#47;LearningChanging&#47;Data-analysis-in-action&#47;tree&#47;master&#47;19-%E5%86%B3%E7%AD%96%E6%A0%91%EF%BC%88%E4%B8%8B%EF%BC%89%EF%BC%9A%E6%B3%B0%E5%9D%A6%E5%B0%BC%E5%85%8B%E4%B9%98%E5%AE%A2%E7%94%9F%E5%AD%98%E9%A2%84%E6%B5%8B<br><br>这个例子写了好几遍了，每次写都有不一样的感觉。入门经典。","like_count":0},{"had_liked":false,"id":193878,"user_name":"JustDoDT","can_delete":false,"product_type":"c1","uid":1127175,"ip_address":"","ucode":"6AF0B80F00EAEF","user_header":"https://static001.geekbang.org/account/avatar/00/11/33/07/8f351609.jpg","comment_is_top":false,"comment_ctime":1584976973,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1584976973","product_id":100021701,"comment_content":"本节最亮点之一：整理的决策树模型参数代表的含义的表。","like_count":0},{"had_liked":false,"id":190101,"user_name":"qdnjqfch","can_delete":false,"product_type":"c1","uid":1435144,"ip_address":"","ucode":"DD3E5FD94CFDE9","user_header":"https://static001.geekbang.org/account/avatar/00/15/e6/08/87a6f32b.jpg","comment_is_top":false,"comment_ctime":1584602978,"is_pvip":false,"replies":[{"id":"104368","content":"一般85%以上可以认为模型有效果。K折交叉验证的准确率比直接训练后预测的准确率会更准确些。","user_name":"作者回复","user_name_real":"cy","uid":"1306094","ctime":1617905331,"ip_address":"","comment_id":190101,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1584602978","product_id":100021701,"comment_content":"实际工作中以K 折交叉验证准确率为准吧？准确率一般多高才能算模型效果不错。","like_count":0,"discussions":[{"author":{"id":1306094,"avatar":"https://static001.geekbang.org/account/avatar/00/13/ed/ee/c4779b67.jpg","nickname":"cy","note":"","ucode":"50D653399A31F6","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":487883,"discussion_content":"一般85%以上可以认为模型有效果。K折交叉验证的准确率比直接训练后预测的准确率会更准确些。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1617905331,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":177586,"user_name":"鱼非子","can_delete":false,"product_type":"c1","uid":1818595,"ip_address":"","ucode":"BB76AE2CB4D680","user_header":"https://static001.geekbang.org/account/avatar/00/1b/bf/e3/2aa8ec84.jpg","comment_is_top":false,"comment_ctime":1581429347,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1581429347","product_id":100021701,"comment_content":"import numpy as np<br>import pandas as pd<br>import matplotlib.pyplot as plt<br><br>data = pd.read_csv(&quot;train.csv&quot;)<br>#print(data)<br>print(data.head(10))<br>#可以看到年龄，船舱，港口有缺失数据<br>print(data.info())<br>#可以看到所有数据的一些统计信息<br>print(data.describe())<br>#总体的存活率在38%<br>#2,3等级的乘客更多<br>#查看字符串类型的整体情况<br>print(data.describe(include=[&#39;O&#39;]))<br>test = pd.read_csv(&#39;test.csv&#39;)<br><br>#进行一些数据清洗<br>data[&#39;Age&#39;].fillna(data[&#39;Age&#39;].mean(),inplace= True)  #对年龄进行平均值填充<br>test[&#39;Age&#39;].fillna(test[&#39;Age&#39;].mean(),inplace= True)<br><br>#print(data[&#39;Fare&#39;].describe())<br>test[&#39;Fare&#39;].fillna(test[&#39;Fare&#39;].mean(),inplace= True) #对船价进行平均值填充<br><br>print(data[&#39;Embarked&#39;].value_counts())<br>data[&#39;Embarked&#39;].fillna(&#39;S&#39;,inplace= True) #对港口进行填充<br><br><br># 特征选择<br>features = [&#39;Pclass&#39;, &#39;Sex&#39;, &#39;Age&#39;, &#39;SibSp&#39;, &#39;Parch&#39;, &#39;Fare&#39;, &#39;Embarked&#39;]<br>train_features = data[features]<br>train_labels = data[&#39;Survived&#39;]<br>test_features = test[features]<br>#test_labels = test[&#39;Survived&#39;]<br><br>#建立模型<br><br>from sklearn.feature_extraction import DictVectorizer<br>dvec=DictVectorizer(sparse=False)<br>train_features=dvec.fit_transform(train_features.to_dict(orient=&#39;record&#39;))<br><br><br>from sklearn.tree import DecisionTreeClassifier<br># 构造ID3决策树<br>clf = DecisionTreeClassifier(criterion=&#39;entropy&#39;)<br># 决策树训练<br>clf.fit(train_features, train_labels)<br><br>test_features=dvec.transform(test_features.to_dict(orient=&#39;record&#39;))<br># 决策树预测<br><br>pred_labels = clf.predict(test_features)<br><br><br># 得到决策树准确率<br>acc_decision_tree = round(clf.score(train_features, train_labels), 6)<br>print(u&#39;score准确率为 %.4lf&#39; % acc_decision_tree)<br><br><br>import numpy as np<br>from sklearn.model_selection import cross_val_score<br># 使用K折交叉验证 统计决策树准确率<br>print(u&#39;cross_val_score准确率为 %.4lf&#39; % np.mean(cross_val_score(clf, train_features, train_labels, cv=10)))<br><br><br><br><br><br>","like_count":0},{"had_liked":false,"id":165595,"user_name":"TKbook","can_delete":false,"product_type":"c1","uid":1073829,"ip_address":"","ucode":"F6E0E99CC79059","user_header":"https://static001.geekbang.org/account/avatar/00/10/62/a5/43aa0c27.jpg","comment_is_top":false,"comment_ctime":1577266030,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1577266030","product_id":100021701,"comment_content":"train_features = dvec.fit_transform(train_features.to_dict(orient=&#39;record&#39;))<br>test_features = dvec.transform(test_features.to_dict(orient=&#39;record&#39;))<br>如果test_features不用fit_transform,那test_features只能转化train_features中的键，它不能转化自己有但是train_features中没有的键。","like_count":0},{"had_liked":false,"id":158450,"user_name":"GS","can_delete":false,"product_type":"c1","uid":1042618,"ip_address":"","ucode":"21C73A8CBD8093","user_header":"https://static001.geekbang.org/account/avatar/00/0f/e8/ba/6d318c08.jpg","comment_is_top":false,"comment_ctime":1575374715,"is_pvip":false,"replies":[{"id":"62624","content":"加油GS","user_name":"作者回复","user_name_real":"cy","uid":"1306094","ctime":1577078295,"ip_address":"","comment_id":158450,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1575374715","product_id":100021701,"comment_content":"先mark下，没太看懂。谢谢大家的留言，在留言吸取很多前人经验。<br>照着搬一遍先<br>https:&#47;&#47;github.com&#47;leledada&#47;jupyter&#47;blob&#47;master&#47;titanic_analysis.ipynb","like_count":0,"discussions":[{"author":{"id":1306094,"avatar":"https://static001.geekbang.org/account/avatar/00/13/ed/ee/c4779b67.jpg","nickname":"cy","note":"","ucode":"50D653399A31F6","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":476729,"discussion_content":"加油GS","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577078295,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":148527,"user_name":"William～Zhang","can_delete":false,"product_type":"c1","uid":1527138,"ip_address":"","ucode":"8659B589428F11","user_header":"https://static001.geekbang.org/account/avatar/00/17/4d/62/0fe9cbb3.jpg","comment_is_top":false,"comment_ctime":1573025171,"is_pvip":false,"replies":[{"id":"62683","content":"如果缺失的太多，比如这里的77%的缺失，那这个字段对后续分析的影响就可以忽略掉，也就是可以drop掉这个字段<br>","user_name":"作者回复","user_name_real":"cy","uid":"1306094","ctime":1577084315,"ip_address":"","comment_id":148527,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1573025171","product_id":100021701,"comment_content":"carbin的值无法补齐，那应该对这个属性如何处理？","like_count":0,"discussions":[{"author":{"id":1306094,"avatar":"https://static001.geekbang.org/account/avatar/00/13/ed/ee/c4779b67.jpg","nickname":"cy","note":"","ucode":"50D653399A31F6","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":473519,"discussion_content":"如果缺失的太多，比如这里的77%的缺失，那这个字段对后续分析的影响就可以忽略掉，也就是可以drop掉这个字段\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577084315,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":147913,"user_name":"eleven","can_delete":false,"product_type":"c1","uid":1682921,"ip_address":"","ucode":"1FBBC0A2B915A8","user_header":"https://static001.geekbang.org/account/avatar/00/19/ad/e9/5c51e32c.jpg","comment_is_top":false,"comment_ctime":1572918737,"is_pvip":false,"replies":[{"id":"59750","content":"我刚看了下，应该是OK的","user_name":"作者回复","user_name_real":"cy","uid":"1306094","ctime":1574739647,"ip_address":"","comment_id":147913,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1572918737","product_id":100021701,"comment_content":"https:&#47;&#47;github.com&#47;cystanford&#47;Titanic_Data   无法访问<br>给的两个链接都打不开。","like_count":0,"discussions":[{"author":{"id":1306094,"avatar":"https://static001.geekbang.org/account/avatar/00/13/ed/ee/c4779b67.jpg","nickname":"cy","note":"","ucode":"50D653399A31F6","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":473337,"discussion_content":"我刚看了下，应该是OK的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574739647,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":144492,"user_name":"孟君","can_delete":false,"product_type":"c1","uid":1691291,"ip_address":"","ucode":"94D8DC4001BA52","user_header":"https://static001.geekbang.org/account/avatar/00/19/ce/9b/46b3dc8d.jpg","comment_is_top":false,"comment_ctime":1571953646,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1571953646","product_id":100021701,"comment_content":"训练集的准确率比测试集的要高不少，这个模型是不是有overfitting的问题啊？如果是overfitting的话，选择用CART算法是否会好一些？","like_count":0},{"had_liked":false,"id":139977,"user_name":"追梦","can_delete":false,"product_type":"c1","uid":1183831,"ip_address":"","ucode":"54C6E76E8FE033","user_header":"https://static001.geekbang.org/account/avatar/00/12/10/57/1adfd4f7.jpg","comment_is_top":false,"comment_ctime":1570778746,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1570778746","product_id":100021701,"comment_content":"请问老师，ID3算法不是不能处理连续性特征吗？为什么这个案例还可以用ID3算法呢","like_count":0},{"had_liked":false,"id":138743,"user_name":"Untitled","can_delete":false,"product_type":"c1","uid":1039464,"ip_address":"","ucode":"8DD6ABA3E81A2E","user_header":"https://static001.geekbang.org/account/avatar/00/0f/dc/68/006ba72c.jpg","comment_is_top":false,"comment_ctime":1570438027,"is_pvip":false,"discussion_count":0,"race_medal":2,"score":"1570438027","product_id":100021701,"comment_content":"两个问题：（1）模型参数criterion选用了entropy，那是用ID3算法构建的模型，是考虑到里面的特征选择都是离散值吗？确实，当参数选择基尼系数时，准去率比ID3低一点点，请问怎么判定用什么算法来解决实际问题？（2）得到的clf模型对象，在日常工作中，该值如何被保存起来的？","like_count":0},{"had_liked":false,"id":110009,"user_name":"一只眼看世界","can_delete":false,"product_type":"c1","uid":1590236,"ip_address":"","ucode":"D221841AE5103F","user_header":"https://static001.geekbang.org/account/avatar/00/18/43/dc/4f70c936.jpg","comment_is_top":false,"comment_ctime":1562150231,"is_pvip":false,"replies":[{"id":"39953","content":"首先理解什么是训练集和测试集。我们通过训练集得到（决策树）分类模型，然后这个分类模型可以对未知的数据集，也就是测试集来进行分类。所以你问的 如果传入一行数据，实际上就是测试集，如果只有一行的话，也是可以进行分类预测的。只是一般测试集一般还是需要一定的样本数量","user_name":"作者回复","user_name_real":"cy","uid":"1306094","ctime":1562208493,"ip_address":"","comment_id":110009,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1562150231","product_id":100021701,"comment_content":"老师， 训练出的模型要怎么使用呢？ 我理解的训练出的模型， 当我给它传一行数据 是不是就能判断出能活不能活了？ 要怎么传呢？ ","like_count":0,"discussions":[{"author":{"id":1306094,"avatar":"https://static001.geekbang.org/account/avatar/00/13/ed/ee/c4779b67.jpg","nickname":"cy","note":"","ucode":"50D653399A31F6","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":456680,"discussion_content":"首先理解什么是训练集和测试集。我们通过训练集得到（决策树）分类模型，然后这个分类模型可以对未知的数据集，也就是测试集来进行分类。所以你问的 如果传入一行数据，实际上就是测试集，如果只有一行的话，也是可以进行分类预测的。只是一般测试集一般还是需要一定的样本数量","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1562208493,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":99960,"user_name":"姜泮昌","can_delete":false,"product_type":"c1","uid":1107213,"ip_address":"","ucode":"89B63270BAE099","user_header":"https://static001.geekbang.org/account/avatar/00/10/e5/0d/b4258141.jpg","comment_is_top":false,"comment_ctime":1559372947,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1559372947","product_id":100021701,"comment_content":"特征的归一化过程有吗？是在哪一步里面做的？","like_count":0},{"had_liked":false,"id":93608,"user_name":"张晓辉","can_delete":false,"product_type":"c1","uid":1085046,"ip_address":"","ucode":"1CD9717DE399C5","user_header":"https://static001.geekbang.org/account/avatar/00/10/8e/76/6d55e26f.jpg","comment_is_top":false,"comment_ctime":1557534689,"is_pvip":false,"replies":[{"id":"38700","content":"解释的不错，代码也正确。","user_name":"编辑回复","user_name_real":"何昌梅","uid":"1165037","ctime":1561431559,"ip_address":"","comment_id":93608,"utype":2}],"discussion_count":1,"race_medal":0,"score":"1557534689","product_id":100021701,"comment_content":"fit_transform: 其实做了两件事情。一是学习所有的特征名字。二是把特征名字和特征值的Map关系转化为向量。<br>transform：只是把特征名字和特征值的Map关系转化为向量。<br><br>一般情况下，在调用transform之前需要调用fit 函数。否则，会有异常抛出。<br><br>#encoding:UTF-8<br>import pandas as pd <br>import numpy as np <br>from sklearn.model_selection import cross_val_score<br>from sklearn.feature_extraction import DictVectorizer<br>from sklearn.tree import DecisionTreeClassifier<br>import graphviz<br>from sklearn import tree<br><br>#Data Explore<br>train_data = pd.read_csv(&#39;train.csv&#39;)<br>test_data = pd.read_csv(&#39;test.csv&#39;)<br>print(train_data.info())<br><br>#Data clean<br>train_data[&#39;Age&#39;].fillna(train_data[&#39;Age&#39;].mean(), inplace=True)<br>test_data[&#39;Age&#39;].fillna(test_data[&#39;Age&#39;].mean(), inplace=True)<br>train_data[&#39;Fare&#39;].fillna(train_data[&#39;Fare&#39;].mean(), inplace=True)<br>test_data[&#39;Fare&#39;].fillna(test_data[&#39;Fare&#39;].mean(), inplace=True)<br>print(train_data[&#39;Embarked&#39;].value_counts())<br>train_data[&#39;Embarked&#39;].fillna(&#39;S&#39;, inplace=True)<br>test_data[&#39;Embarked&#39;].fillna(&#39;S&#39;, inplace=True)<br><br>#Feature Selection<br>features = [&#39;Pclass&#39;, &#39;Sex&#39;, &#39;Age&#39;, &#39;SibSp&#39;, &#39;Parch&#39;, &#39;Fare&#39;, &#39;Embarked&#39;]<br>train_features = train_data[features]<br>train_labels = train_data[&#39;Survived&#39;]<br>test_features = test_data[features]<br><br>dvec = DictVectorizer(sparse=False)<br>train_features = dvec.fit_transform(train_features.to_dict(orient=&#39;record&#39;))<br>test_features = dvec.transform(test_features.to_dict(orient=&#39;record&#39;))<br><br>#Construct and train ID3 clf<br>clf = DecisionTreeClassifier(criterion=&#39;entropy&#39;)<br>clf.fit(train_features, train_labels)<br><br>#Predict<br>pred_labels = clf.predict(test_features)<br><br>#Evaluate<br>acc_decision_tree = round(clf.score(train_features, train_labels), 6)<br>print(&#39;Score accuracy %.4lf&#39; % acc_decision_tree)<br>print(&#39;cross_val_score accuracy %.4lf&#39; % np.mean(cross_val_score(clf, train_features, train_labels, cv=10)))<br><br>#Visualize the tree<br>dot_data = tree.export_graphviz(clf, out_file=None)<br>graph = graphviz.Source(dot_data)<br>graph","like_count":0,"discussions":[{"author":{"id":1165037,"avatar":"https://static001.geekbang.org/account/avatar/00/11/c6/ed/89a2dc13.jpg","nickname":"丢了个丢丢丢","note":"","ucode":"BDD7E97E0E5E96","race_medal":0,"user_type":4,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":449697,"discussion_content":"解释的不错，代码也正确。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1561431559,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":4}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":81829,"user_name":"永降不息之雨","can_delete":false,"product_type":"c1","uid":1362563,"ip_address":"","ucode":"087A934F68E445","user_header":"https://static001.geekbang.org/account/avatar/00/14/ca/83/684361be.jpg","comment_is_top":false,"comment_ctime":1554045304,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1554045304","product_id":100021701,"comment_content":"为何同样的代码，准确率相近，可视化的决策树却不同呢？","like_count":0},{"had_liked":false,"id":76314,"user_name":"滨滨","can_delete":false,"product_type":"c1","uid":1334567,"ip_address":"","ucode":"881EFA798BEE34","user_header":"https://static001.geekbang.org/account/avatar/00/14/5d/27/74e152d3.jpg","comment_is_top":false,"comment_ctime":1552570802,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1552570802","product_id":100021701,"comment_content":"基本的逻辑就是构造一棵树，使得墒值最大，方便分类。","like_count":0},{"had_liked":false,"id":70625,"user_name":"liuyyy","can_delete":false,"product_type":"c1","uid":1158611,"ip_address":"","ucode":"AAA3922482E4F7","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83ercic1LB9N9P1lWftkyyNqjILPAedlbRqvJl2KNTrDFCboiakKoTHPBTF3ufaIsdcLb9uXU8hFlptuw/132","comment_is_top":false,"comment_ctime":1551149489,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1551149489","product_id":100021701,"comment_content":"为啥同样的数据，同样的方法我使用交叉验证后准确率只有0.38呀老师","like_count":0,"discussions":[{"author":{"id":1112071,"avatar":"https://static001.geekbang.org/account/avatar/00/10/f8/07/ea1c6616.jpg","nickname":"Rain","note":"","ucode":"8CFF20B7C67CA9","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":48590,"discussion_content":"最后的交叉验证部分准确率评分部分你是否用错了函数，应该是cross_val_score，不是cross_val_predict","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573490584,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":68492,"user_name":"王彬成","can_delete":false,"product_type":"c1","uid":1015045,"ip_address":"","ucode":"386803B8FC2DD5","user_header":"https://static001.geekbang.org/account/avatar/00/0f/7d/05/4bad0c7c.jpg","comment_is_top":false,"comment_ctime":1550523803,"is_pvip":false,"replies":[{"id":"64534","content":"Good Job","user_name":"作者回复","user_name_real":"cy","uid":"1306094","ctime":1577621401,"ip_address":"","comment_id":68492,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1550523803","product_id":100021701,"comment_content":"补充：<br>#模块6: 决策树可视化<br>from sklearn import tree<br>import pydotplus<br>from sklearn.externals.six import StringIO<br>dot_data = StringIO()<br>tree.export_graphviz(clf, out_file=dot_data)<br>graph = pydotplus.graph_from_dot_data(dot_data.getvalue())<br>graph.write_pdf(&quot;Titanic.pdf&quot;)","like_count":0,"discussions":[{"author":{"id":1306094,"avatar":"https://static001.geekbang.org/account/avatar/00/13/ed/ee/c4779b67.jpg","nickname":"cy","note":"","ucode":"50D653399A31F6","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":439704,"discussion_content":"Good Job","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577621401,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":68491,"user_name":"王彬成","can_delete":false,"product_type":"c1","uid":1015045,"ip_address":"","ucode":"386803B8FC2DD5","user_header":"https://static001.geekbang.org/account/avatar/00/0f/7d/05/4bad0c7c.jpg","comment_is_top":false,"comment_ctime":1550523790,"is_pvip":false,"replies":[{"id":"64535","content":"Good Job","user_name":"作者回复","user_name_real":"cy","uid":"1306094","ctime":1577621407,"ip_address":"","comment_id":68491,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1550523790","product_id":100021701,"comment_content":"# 模块 1：数据探索<br>import pandas as pd<br># 数据加载<br>train_data=pd.read_csv(&#39;.&#47;Titanic_Data&#47;train.csv&#39;)<br>test_data=pd.read_csv(&#39;.&#47;Titanic_Data&#47;test.csv&#39;)<br># 数据探索<br>print(train_data.info())<br>print(&#39;-&#39;*30)<br>print(test_data.info())<br>print(&#39;-&#39;*30)<br>print(train_data.describe())<br>print(&#39;-&#39;*30)<br>print(train_data.describe(include=[&#39;O&#39;]))<br>print(&#39;-&#39;*30)<br>print(train_data.head())<br>print(&#39;-&#39;*30)<br>print(train_data.tail())<br><br>训练集的Age、cabin、Embarked和测试集Age、Fare、Cabin、Embarked有缺失值，利用均值补充age和fare<br># 模块 2：数据清洗<br># 使用平均年龄来填充年龄中的 NaN 值<br>train_data[&#39;Age&#39;].fillna(train_data[&#39;Age&#39;].mean(),inplace=True)<br>test_data[&#39;Age&#39;].fillna(test_data[&#39;Age&#39;].mean(),inplace=True)<br># 使用票价的均值填充票价中的 nan 值<br>train_data[&#39;Fare&#39;].fillna(train_data[&#39;Fare&#39;].mean(),inplace=True)<br>test_data[&#39;Fare&#39;].fillna(test_data[&#39;Fare&#39;].mean(),inplace=True)<br># Embarked 为登陆港口，有少量的缺失值，我们可以把缺失值补齐。<br>print(train_data[&#39;Embarked&#39;].value_counts())<br># 使用登录最多的港口来填充登录港口的 nan 值<br>train_data[&#39;Embarked&#39;].fillna(&#39;S&#39;,inplace=True)<br>test_data[&#39;Embarked&#39;].fillna(&#39;S&#39;,inplace=True)<br><br># 模块 3：特征选择<br># 特征选择<br>features=[&#39;Pclass&#39;,&#39;Sex&#39;,&#39;Age&#39;,&#39;SibSp&#39;,&#39;Parch&#39;,&#39;Fare&#39;,&#39;Embarked&#39;]<br>train_features=train_data[features]<br>train_labels=train_data[&#39;Survived&#39;]<br>test_features=test_data[features]<br>#将特征值中字符串类型改为数值类型<br>from sklearn.feature_extraction import DictVectorizer<br>dvec=DictVectorizer(sparse=False)<br>train_features=dvec.fit_transform(train_features.to_dict(orient=&#39;record&#39;))<br><br># 模块 4：决策树模型<br>from sklearn.tree import DecisionTreeClassifier<br># 构造ID3 决策树<br>clf=DecisionTreeClassifier(criterion=&#39;entropy&#39;)<br># 决策树训练<br>clf.fit(train_features,train_labels)<br><br># 模块 5：模型预测 &amp; 评估<br>test_features=dvec.transform(test_features.to_dict(orient=&#39;record&#39;))<br># 决策树预测<br>pred_labels=clf.predict(test_features)<br># 得到决策树准确率<br>acc_decision_tree=round(clf.score(train_features,train_labels),6)<br>print(u&#39;score 准确率为 %.4lf&#39; % acc_decision_tree)<br># K 折交叉验证统计决策树分类器的准确率<br>import numpy as np<br>from sklearn.model_selection import cross_val_score<br># 使用 K 折交叉验证 统计决策树准确率<br>print(u&#39;cross_val_score 准确率为%.4lf&#39; % np.mean(cross_val_score(clf,train_features,train_labels,cv=10)))<br><br><br>","like_count":0,"discussions":[{"author":{"id":1306094,"avatar":"https://static001.geekbang.org/account/avatar/00/13/ed/ee/c4779b67.jpg","nickname":"cy","note":"","ucode":"50D653399A31F6","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":439703,"discussion_content":"Good Job","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577621407,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":68354,"user_name":"王彬成","can_delete":false,"product_type":"c1","uid":1015045,"ip_address":"","ucode":"386803B8FC2DD5","user_header":"https://static001.geekbang.org/account/avatar/00/0f/7d/05/4bad0c7c.jpg","comment_is_top":false,"comment_ctime":1550486905,"is_pvip":false,"replies":[{"id":"64537","content":"对的","user_name":"作者回复","user_name_real":"cy","uid":"1306094","ctime":1577621446,"ip_address":"","comment_id":68354,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1550486905","product_id":100021701,"comment_content":" 1. fit_transform()的作用就是先拟合数据，然后转化它将其转化为标准形式，一般应用在训练集中。<br>2. tranform()的作用是通过找中心和缩放等实现标准化，一般用在测试集中。","like_count":0,"discussions":[{"author":{"id":1306094,"avatar":"https://static001.geekbang.org/account/avatar/00/13/ed/ee/c4779b67.jpg","nickname":"cy","note":"","ucode":"50D653399A31F6","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":439642,"discussion_content":"对的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577621446,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":66701,"user_name":"Kenny","can_delete":false,"product_type":"c1","uid":1362830,"ip_address":"","ucode":"40D36B94B1435D","user_header":"https://static001.geekbang.org/account/avatar/00/14/cb/8e/9c81fce8.jpg","comment_is_top":false,"comment_ctime":1549983263,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1549983263","product_id":100021701,"comment_content":"read_csv时报错“UnicodeDecodeError: &#39;utf-8&#39; codec can&#39;t decode byte 0xcf in position 15: invalid continuation byte”是什么问题呢？？好奇怪，百度了半天也不知道问题出在哪里，麻烦老师解答一下","like_count":0,"discussions":[{"author":{"id":1474214,"avatar":"https://static001.geekbang.org/account/avatar/00/16/7e/a6/4e331ef4.jpg","nickname":"骑行的掌柜J","note":"","ucode":"3163102651C653","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":2443,"discussion_content":"是你的编码问题 你可以看看你的IDE设置的编码格式","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1563624159,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":65352,"user_name":"Chino","can_delete":false,"product_type":"c1","uid":1347181,"ip_address":"","ucode":"0240D89E5F74B4","user_header":"https://static001.geekbang.org/account/avatar/00/14/8e/6d/c68e07ef.jpg","comment_is_top":false,"comment_ctime":1549269910,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1549269910","product_id":100021701,"comment_content":"import pandas as pd<br>import numpy as np<br>from sklearn import tree<br>from sklearn.tree import DecisionTreeClassifier<br>from sklearn.feature_extraction import DictVectorizer<br>from sklearn.model_selection import cross_val_score<br>import graphviz<br># 读入文件数据<br>train_data = pd.read_csv(r&#39;C:\\Users\\admin\\Desktop\\Titanic_Data-master\\train.csv&#39;)<br>test_data = pd.read_csv(r&#39;C:\\Users\\admin\\Desktop\\Titanic_Data-master\\test.csv&#39;)<br><br># 查看文件数据的类型<br># 从这里可知哪个类型的数据有null 并且Cabin数据缺失过多 只有204行是非空<br>train_data.info()<br>print(&#39;\\n&#39; + &#39;*&#39;* 40 + &#39;\\n&#39;)<br>test_data.info()<br><br># 补充空值 数值用均值补充 字符用最大值补充<br>train_data[&#39;Age&#39;].fillna(train_data[&#39;Age&#39;].mean(),inplace=True)<br>test_data[&#39;Age&#39;].fillna(test_data[&#39;Age&#39;].mean(),inplace=True)<br>test_data[&#39;Fare&#39;].fillna(test_data[&#39;Fare&#39;].mean(),inplace=True)<br><br>print(&#39;\\n&#39; + &#39;*&#39;* 40 + &#39;\\n&#39;)<br>print(train_data[&#39;Embarked&#39;].value_counts())<br>train_data[&#39;Embarked&#39;].fillna(&#39;S&#39;,inplace=True)<br><br>#选取需要的特征 例如名字、编号等没意义的特征<br>features = [&#39;Pclass&#39;,&#39;Sex&#39;,&#39;Age&#39;,&#39;SibSp&#39;,&#39;Parch&#39;,&#39;Fare&#39;,&#39;Embarked&#39;]<br><br># 训练集和测试集<br>train_features = train_data[features]<br>train_labels = train_data[&#39;Survived&#39;]<br>test_features = test_data[features]<br><br># 把字符串类型的特征值转换成数值<br>dvec = DictVectorizer(sparse=False)<br>train_features = dvec.fit_transform(train_features.to_dict(orient=&#39;record&#39;))<br><br># 建立分类树 使用ID3算法<br>clf = DecisionTreeClassifier(criterion=&#39;entropy&#39;)<br><br># 训练<br>clf.fit(train_features,train_labels)<br><br># 对测试集数据进行预测 但在此之前同样要把测试集数据进行转换<br>test_features = dvec.fit_transform(test_features.to_dict(orient=&#39;record&#39;))<br>test_predict = clf.predict(test_features)<br><br># 把预测结果写回文件中<br>test_data[&#39;Survived&#39;] = test_predict<br>test_data.to_csv(&#39;test.csv&#39;)<br><br># 因为没有测试集的实际数据(Survived) 无法和预测数据进行比较<br># 因此使用训练集的数据进行评估<br>acc = clf.score(train_features,train_labels)<br>print(&#39;\\n&#39; + &#39;*&#39;* 40 + &#39;\\n&#39;)<br>print(acc)<br><br># K折交叉法进行评估<br>k_acc = np.mean(cross_val_score(clf,train_features,train_labels,cv=10))<br>print(&#39;\\n&#39; + &#39;*&#39;* 40 + &#39;\\n&#39;)<br>print(k_acc)<br><br><br># 可视化<br>dot_data = tree.export_graphviz(clf,out_file=None)<br>graph = graphviz.Source(dot_data)<br>graph.view()<br>","like_count":0},{"had_liked":false,"id":64722,"user_name":"雨先生的晴天","can_delete":false,"product_type":"c1","uid":1246015,"ip_address":"","ucode":"71850548322A1C","user_header":"https://static001.geekbang.org/account/avatar/00/13/03/3f/09308258.jpg","comment_is_top":false,"comment_ctime":1548891179,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1548891179","product_id":100021701,"comment_content":"Visualization Code for Decision Tree: <br>from sklearn.externals.six import StringIO  <br>from IPython.display import Image  <br>from sklearn.tree import export_graphviz<br>import pydotplus<br><br>dot_data = StringIO()<br><br>export_graphviz(clf, out_file=dot_data,  <br>                filled=True, rounded=True,<br>                special_characters=True)<br>graph = pydotplus.graph_from_dot_data(dot_data.getvalue())  <br>Image(graph.create_png())","like_count":0},{"had_liked":false,"id":64136,"user_name":"胖陶","can_delete":false,"product_type":"c1","uid":1372987,"ip_address":"","ucode":"EE32D91A3BC0F3","user_header":"https://static001.geekbang.org/account/avatar/00/14/f3/3b/15ffb7c3.jpg","comment_is_top":false,"comment_ctime":1548675015,"is_pvip":false,"replies":[{"id":"64637","content":"对的","user_name":"作者回复","user_name_real":"cy","uid":"1306094","ctime":1577622773,"ip_address":"","comment_id":64136,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1548675015","product_id":100021701,"comment_content":"fit_transform是先拟合数据再标准化，transform是数据标准化","like_count":0,"discussions":[{"author":{"id":1306094,"avatar":"https://static001.geekbang.org/account/avatar/00/13/ed/ee/c4779b67.jpg","nickname":"cy","note":"","ucode":"50D653399A31F6","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":437875,"discussion_content":"对的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577622773,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":64049,"user_name":"搞笑极客","can_delete":false,"product_type":"c1","uid":1364108,"ip_address":"","ucode":"B3431F1C80B822","user_header":"https://static001.geekbang.org/account/avatar/00/14/d0/8c/66856734.jpg","comment_is_top":false,"comment_ctime":1548648184,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1548648184","product_id":100021701,"comment_content":"想问下 这个案例可以使用train _test_split吗？如果使用了还需要用K折验证吗？ ","like_count":0,"discussions":[{"author":{"id":2415687,"avatar":"https://static001.geekbang.org/account/avatar/00/24/dc/47/554aa6b8.jpg","nickname":"需要努力的、","note":"","ucode":"04627BD9ED77DD","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":532668,"discussion_content":"同问呀，这个案例最后的K折交叉验证，不就相当于train _test_split 了十次么","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1637663334,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"user_type\":1}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":63963,"user_name":"雨先生的晴天","can_delete":false,"product_type":"c1","uid":1246015,"ip_address":"","ucode":"71850548322A1C","user_header":"https://static001.geekbang.org/account/avatar/00/13/03/3f/09308258.jpg","comment_is_top":false,"comment_ctime":1548632288,"is_pvip":false,"replies":[{"id":"64641","content":"加油~ 没有Python基础也可以学会，只要付出就会有收获","user_name":"作者回复","user_name_real":"cy","uid":"1306094","ctime":1577622834,"ip_address":"","comment_id":63963,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1548632288","product_id":100021701,"comment_content":"这一节的案例还不错，从数据采集，清理，再到决策树分析，关键点都有重点说明。scikit learn package的官网还是蛮容易找到的，（本人无python基础）建议大家去看看 而且实际操作一下。","like_count":0,"discussions":[{"author":{"id":1306094,"avatar":"https://static001.geekbang.org/account/avatar/00/13/ed/ee/c4779b67.jpg","nickname":"cy","note":"","ucode":"50D653399A31F6","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":437784,"discussion_content":"加油~ 没有Python基础也可以学会，只要付出就会有收获","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577622834,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":63944,"user_name":"Lee","can_delete":false,"product_type":"c1","uid":1313515,"ip_address":"","ucode":"ED3D7200A948C3","user_header":"https://static001.geekbang.org/account/avatar/00/14/0a/eb/6d6a94d2.jpg","comment_is_top":false,"comment_ctime":1548605543,"is_pvip":false,"replies":[{"id":"64642","content":"对的","user_name":"作者回复","user_name_real":"cy","uid":"1306094","ctime":1577622844,"ip_address":"","comment_id":63944,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1548605543","product_id":100021701,"comment_content":"可以用那个train_test_split把训练集数据37分，训练模型，然后再用测试集数据进行测试","like_count":0,"discussions":[{"author":{"id":1306094,"avatar":"https://static001.geekbang.org/account/avatar/00/13/ed/ee/c4779b67.jpg","nickname":"cy","note":"","ucode":"50D653399A31F6","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":437775,"discussion_content":"对的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577622844,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":63805,"user_name":"fancy","can_delete":false,"product_type":"c1","uid":1243166,"ip_address":"","ucode":"0C51F80B9C35B1","user_header":"https://static001.geekbang.org/account/avatar/00/12/f8/1e/0d5f8336.jpg","comment_is_top":false,"comment_ctime":1548511791,"is_pvip":false,"replies":[{"id":"64649","content":"加油~ 感谢分享","user_name":"作者回复","user_name_real":"cy","uid":"1306094","ctime":1577622938,"ip_address":"","comment_id":63805,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1548511791","product_id":100021701,"comment_content":"Carbin缺失率分别为 77% 和 78%,  Age\\Fare有缺失值，都是通过原始数据文件中得到的。文章中第一部分，使用describe(),head()或者tail()都只显示了部分数据，所以最好直接打开原始数据文件，会看到的更全面。或者也可以用print(train_data[&#39;Cabin&#39;].head())来查看某一列的数据。其实这部分用的全都是关于Pandas。Graphviz在决策树（上）的那一课的回复里有个同学有用到这个工具实现了决策树，我贴一下，如果有侵权什么之类的，请告诉我，我就删掉。。。除了最后一行代码我把graph修改为了graph.view()其他的都是之前那个同学的代码直接贴过来的。。。<br>from sklearn import tree<br>import sys<br>import os<br>import graphviz<br>import numpy as np<br># os.environ[&quot;PATH&quot;] += os.pathsep + &#39;D:&#47;Program Files&#47;Anaconda3&#47;Library&#47;bin&#47;graphviz&#39;<br><br>data = np.array([[1,1],[1,0],[0,1],[0,0]])<br>target = np.array([1,1,0,0])<br><br>clf = tree.DecisionTreeClassifier()<br>clf = clf.fit(data,target)<br><br>dot_data = tree.export_graphviz(clf,out_file=None)<br>graph = graphviz.Source(dot_data)<br>graph.view()","like_count":0,"discussions":[{"author":{"id":1306094,"avatar":"https://static001.geekbang.org/account/avatar/00/13/ed/ee/c4779b67.jpg","nickname":"cy","note":"","ucode":"50D653399A31F6","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":437719,"discussion_content":"加油~ 感谢分享","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577622938,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":63738,"user_name":"lingmacker","can_delete":false,"product_type":"c1","uid":1353113,"ip_address":"","ucode":"2B61674AD47F34","user_header":"https://static001.geekbang.org/account/avatar/00/14/a5/99/db2f6325.jpg","comment_is_top":false,"comment_ctime":1548480882,"is_pvip":false,"replies":[{"id":"64653","content":"感谢分享","user_name":"作者回复","user_name_real":"cy","uid":"1306094","ctime":1577622965,"ip_address":"","comment_id":63738,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1548480882","product_id":100021701,"comment_content":"graphviz 的使用可以参考https:&#47;&#47;scikit-learn.org&#47;stable&#47;modules&#47;tree.html","like_count":0,"discussions":[{"author":{"id":1306094,"avatar":"https://static001.geekbang.org/account/avatar/00/13/ed/ee/c4779b67.jpg","nickname":"cy","note":"","ucode":"50D653399A31F6","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":437700,"discussion_content":"感谢分享","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577622965,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":63731,"user_name":"JingZ","can_delete":false,"product_type":"c1","uid":1023464,"ip_address":"","ucode":"6F97895B2CC375","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/wJphZ3HcvhjVUyTWCIsCugzfQY5NAy6VJ0XoPLibDlcHWMswFmFe678zd0lUjFETia80NQhyQcVnGDlKgKPcRGyw/132","comment_is_top":false,"comment_ctime":1548478297,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1548478297","product_id":100021701,"comment_content":"fit_transform(): Fit to data, then tranform it，即先拟合数据，然后转化它将其转化为标准形式；tranform():Perform standardization by centering and scaling，通过找中心和缩放等实现标准化","like_count":0},{"had_liked":false,"id":63640,"user_name":"yeeeeeeti","can_delete":false,"product_type":"c1","uid":1356601,"ip_address":"","ucode":"2182531EEA23C0","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/7Vic37xvzcLkhxEy1QDiczGL3nuEFdY5EZj5k5cfYY4HsPhjbCPMKUuWymic6ic9WVXy5CDwV6q2JwKF6mTgoKEtibw/132","comment_is_top":false,"comment_ctime":1548427434,"is_pvip":false,"replies":[{"id":"64656","content":"df.to_csv(&#39;test.csv&#39;)","user_name":"作者回复","user_name_real":"cy","uid":"1306094","ctime":1577623533,"ip_address":"","comment_id":63640,"utype":1}],"discussion_count":3,"race_medal":0,"score":"1548427434","product_id":100021701,"comment_content":"问个比较低端的问题，如何将预测的结果写入到test.csv中呢？<br>","like_count":0,"discussions":[{"author":{"id":1306094,"avatar":"https://static001.geekbang.org/account/avatar/00/13/ed/ee/c4779b67.jpg","nickname":"cy","note":"","ucode":"50D653399A31F6","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":437667,"discussion_content":"df.to_csv(&amp;#39;test.csv&amp;#39;)","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577623533,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1112071,"avatar":"https://static001.geekbang.org/account/avatar/00/10/f8/07/ea1c6616.jpg","nickname":"Rain","note":"","ucode":"8CFF20B7C67CA9","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":48510,"discussion_content":"test_data[&#39;Survived&#39;] = test_predict     //将测试集的预测结果列加入到测试集DataFrame中\ntest_data.to_csv(&#39;test.csv&#39;)    //将测试集（包含预测结果）写入csv文件","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573484253,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1581927,"avatar":"","nickname":"Geek_3ebdcd","note":"","ucode":"1AF35941E8A8D8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":6412,"discussion_content":"作者都不回复的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566891795,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]}]}