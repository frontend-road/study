{"id":769615,"title":"03｜TS与JS相关的那些类型","content":"","comments":[{"had_liked":false,"id":395028,"user_name":"杨浩","can_delete":false,"product_type":"c3","uid":1333606,"ip_address":"湖南","ucode":"4D51BD8452BF04","user_header":"https://static001.geekbang.org/account/avatar/00/14/59/66/e2839938.jpg","comment_is_top":false,"comment_ctime":1729135064,"is_pvip":false,"replies":[{"id":143454,"content":"是的。同样的原因，`let c2 = &#39;abc&#39; as const;`在语义和效果上也与你的两个例子相同。当然，&#39;as const&#39;在字面上显得更清晰一些。","user_name":"作者回复","user_name_real":"编辑","uid":1521669,"ctime":1729248254,"ip_address":"江苏","comment_id":395028,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100761001,"comment_content":"const c1: &#39;abc&#39; = &#39;abc&#39;;\nlet c2: &#39;abc&#39; = &#39;abc&#39;;\n就变量来说c1和c没什么不同，变量的类型和值都是相同的。\n不同是 const 和 let 语法上的要求不同 let 声明的可以重新赋值。但也只能赋值为 &#39;abc&#39;。","like_count":1,"discussions":[{"author":{"id":1521669,"avatar":"https://static001.geekbang.org/account/avatar/00/17/38/05/7beecd5d.jpg","nickname":"Aiming","note":"","ucode":"66292B32F9960A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":652613,"discussion_content":"是的。同样的原因，`let c2 = &#39;abc&#39; as const;`在语义和效果上也与你的两个例子相同。当然，&#39;as const&#39;在字面上显得更清晰一些。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1729248254,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"江苏","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2,\"source\":0}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":392557,"user_name":"一片羽毛","can_delete":false,"product_type":"c3","uid":1357749,"ip_address":"广东","ucode":"C6B6AA0294219E","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTISkR0XDibLuwwl6PibTpQmDrnV7feN1YibqvrnpCE8fVk5cPPuUUxqvW4IZicrmTKXueTW6LpSNrxt4w/132","comment_is_top":false,"comment_ctime":1721218796,"is_pvip":false,"replies":[{"id":142674,"content":"课程是视频课哦，以视频形式为主，除了课内知识点，课程资料和代码可以在这里获取\n课程 GitHub 仓库（用于获取课程代码、下载课件）：https:&#47;&#47;github.com&#47;aimingoo&#47;jike2","user_name":"编辑回复","user_name_real":"编辑","uid":1501385,"ctime":1721268262,"ip_address":"北京","comment_id":392557,"utype":2}],"discussion_count":2,"race_medal":0,"score":2,"product_id":100761001,"comment_content":"怎么没有文档，全是视频","like_count":0,"discussions":[{"author":{"id":2843479,"avatar":"https://static001.geekbang.org/account/avatar/00/2b/63/57/cba4c68b.jpg","nickname":"小虎子🐯","note":"","ucode":"4C9530B3FB407B","race_medal":0,"user_type":8,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":648240,"discussion_content":"课程是视频课哦，以视频形式为主，除了课内知识点，课程资料和代码可以在这里获取\n课程 GitHub 仓库（用于获取课程代码、下载课件）：https://github.com/aimingoo/jike2","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1721268262,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":8,\"source\":0}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1333606,"avatar":"https://static001.geekbang.org/account/avatar/00/14/59/66/e2839938.jpg","nickname":"杨浩","note":"","ucode":"4D51BD8452BF04","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":652548,"discussion_content":"视频课学起来效率低些，然后有自己不懂的地方不方便反复看。不过老师讲解的知识点还是好的。要是有一个文档大纲或思维导图这种简洁版就好了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1729134873,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"湖南","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":390022,"user_name":"SVIPWLM","can_delete":false,"product_type":"c3","uid":1677201,"ip_address":"广东","ucode":"FE47323386925D","user_header":"https://static001.geekbang.org/account/avatar/00/19/97/91/93a76cce.jpg","comment_is_top":false,"comment_ctime":1714122361,"is_pvip":false,"replies":null,"discussion_count":1,"race_medal":0,"score":2,"product_id":100761001,"comment_content":"1.子类型兼容，具体类型可以赋值给更抽象的类型\n2.const声明了一个类型为字符串字面量的类型‘abc’，声明后不能被重新赋值。let声明的是变量，可以在声明后赋值，但重新赋值时也必须是‘abc’","like_count":7,"discussions":[{"author":{"id":1521669,"avatar":"https://static001.geekbang.org/account/avatar/00/17/38/05/7beecd5d.jpg","nickname":"Aiming","note":"","ucode":"66292B32F9960A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":643262,"discussion_content":":) 对哒。\n\n其实const不能重新赋值是语法概念，就是const这个关键字决定的，这意味着js脚本引擎负责理解和解释它。而let不能赋以其它值则是个类型概念，这是由TS或TS编译器负责的。之所以在作业中提到这个，是因为对于const这个关键字的实现，早前在ES6时代其实有一个渐进的过程，中间涉及到一段有趣的黑历史。有兴趣的学员可以去看看：https://www.cnblogs.com/ziyunfei/p/6043513.html。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1714152379,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"河南","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":393169,"user_name":"Geek_d35c13","can_delete":false,"product_type":"c3","uid":2674153,"ip_address":"浙江","ucode":"C155B2714C9E65","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/DQ8fyWgvJh2tcNf44605cHKDNRa8XyDlKTVqa5QjMaMmIhYCiapXT956dyItVcJ28HL4U5KticU4wndHpChdJVpg/132","comment_is_top":false,"comment_ctime":1723039699,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":2,"product_id":100761001,"comment_content":"let x: &#39;abc&#39; = &#39;abc&#39;;\nx = 1 as any;","like_count":0}]}