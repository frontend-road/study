{"id":82628,"title":"30丨关联规则挖掘（上）：如何用Apriori发现用户购物规则？","content":"<p>今天我来带你进行关联规则挖掘的学习，关联规则这个概念，最早是由Agrawal等人在1993年提出的。在1994年Agrawal等人又提出了基于关联规则的Apriori算法，至今Apriori仍是关联规则挖掘的重要算法。</p><p>关联规则挖掘可以让我们从数据集中发现项与项（item与item）之间的关系，它在我们的生活中有很多应用场景，“购物篮分析”就是一个常见的场景，这个场景可以从消费者交易记录中发掘商品与商品之间的关联关系，进而通过商品捆绑销售或者相关推荐的方式带来更多的销售量。所以说，关联规则挖掘是个非常有用的技术。</p><p>在今天的内容中，希望你能带着问题，和我一起来搞懂以下几个知识点：</p><ol>\n<li>\n<p>搞懂关联规则中的几个重要概念：支持度、置信度、提升度；</p>\n</li>\n<li>\n<p>Apriori算法的工作原理；</p>\n</li>\n<li>\n<p>在实际工作中，我们该如何进行关联规则挖掘。</p>\n</li>\n</ol><h2>搞懂关联规则中的几个概念</h2><p>我举一个超市购物的例子，下面是几名客户购买的商品列表：</p><p><img src=\"https://static001.geekbang.org/resource/image/f7/1c/f7d0cc3c1a845bf790b344f62372941c.png?wh=468*195\" alt=\"\"><br>\n<strong>什么是支持度呢？</strong></p><p>支持度是个百分比，它指的是某个商品组合出现的次数与总次数之间的比例。支持度越高，代表这个组合出现的频率越大。</p><p>在这个例子中，我们能看到“牛奶”出现了4次，那么这5笔订单中“牛奶”的支持度就是4/5=0.8。</p><!-- [[[read_end]]] --><p>同样“牛奶+面包”出现了3次，那么这5笔订单中“牛奶+面包”的支持度就是3/5=0.6。</p><p><strong>什么是置信度呢？</strong></p><p>它指的就是当你购买了商品A，会有多大的概率购买商品B，在上面这个例子中：</p><p>置信度（牛奶→啤酒）=2/4=0.5，代表如果你购买了牛奶，有多大的概率会购买啤酒？</p><p>置信度（啤酒→牛奶）=2/3=0.67，代表如果你购买了啤酒，有多大的概率会购买牛奶？</p><p>我们能看到，在4次购买了牛奶的情况下，有2次购买了啤酒，所以置信度(牛奶→啤酒)=0.5，而在3次购买啤酒的情况下，有2次购买了牛奶，所以置信度（啤酒→牛奶）=0.67。</p><p>所以说置信度是个条件概念，就是说在A发生的情况下，B发生的概率是多少。</p><p><strong>什么是提升度呢？</strong></p><p>我们在做商品推荐的时候，重点考虑的是提升度，因为提升度代表的是“商品A的出现，对商品B的出现概率提升的”程度。</p><p>还是看上面的例子，如果我们单纯看置信度(可乐→尿布)=1，也就是说可乐出现的时候，用户都会购买尿布，那么当用户购买可乐的时候，我们就需要推荐尿布么？</p><p>实际上，就算用户不购买可乐，也会直接购买尿布的，所以用户是否购买可乐，对尿布的提升作用并不大。我们可以用下面的公式来计算商品A对商品B的提升度：</p><p>提升度(A→B)=置信度(A→B)/支持度(B)</p><p>这个公式是用来衡量A出现的情况下，是否会对B出现的概率有所提升。</p><p>所以提升度有三种可能：</p><ol>\n<li>\n<p>提升度(A→B)&gt;1：代表有提升；</p>\n</li>\n<li>\n<p>提升度(A→B)=1：代表有没有提升，也没有下降；</p>\n</li>\n<li>\n<p>提升度(A→B)&lt;1：代表有下降。</p>\n</li>\n</ol><h2>Apriori的工作原理</h2><p>明白了关联规则中支持度、置信度和提升度这几个重要概念，我们来看下Apriori算法是如何工作的。</p><p>首先我们把上面案例中的商品用ID来代表，牛奶、面包、尿布、可乐、啤酒、鸡蛋的商品ID分别设置为1-6，上面的数据表可以变为：</p><p><img src=\"https://static001.geekbang.org/resource/image/e3/33/e30fe11a21191259e6a93568461fa933.png?wh=466*196\" alt=\"\"><br>\nApriori算法其实就是查找频繁项集(frequent itemset)的过程，所以首先我们需要定义什么是频繁项集。</p><p>频繁项集就是支持度大于等于最小支持度(Min Support)阈值的项集，所以小于最小值支持度的项目就是非频繁项集，而大于等于最小支持度的项集就是频繁项集。</p><p>项集这个概念，英文叫做itemset，它可以是单个的商品，也可以是商品的组合。我们再来看下这个例子，假设我随机指定最小支持度是50%，也就是0.5。</p><p>我们来看下Apriori算法是如何运算的。</p><p>首先，我们先计算单个商品的支持度，也就是得到K=1项的支持度：</p><p><img src=\"https://static001.geekbang.org/resource/image/ff/de/fff5ba49aff930bba71c98685be4fcde.png?wh=467*228\" alt=\"\"><br>\n因为最小支持度是0.5，所以你能看到商品4、6是不符合最小支持度的，不属于频繁项集，于是经过筛选商品的频繁项集就变成：</p><p><img src=\"https://static001.geekbang.org/resource/image/ae/b6/ae108dc65c33e9ed9546a0d91bd881b6.png?wh=464*164\" alt=\"\"><br>\n在这个基础上，我们将商品两两组合，得到k=2项的支持度：</p><p><img src=\"https://static001.geekbang.org/resource/image/a5/a3/a51fd814ebd68304e3cb137630af3ea3.png?wh=463*228\" alt=\"\"><br>\n我们再筛掉小于最小值支持度的商品组合，可以得到：</p><p><img src=\"https://static001.geekbang.org/resource/image/a0/c8/a087cd1bd2a9e033105de275834b79c8.png?wh=472*136\" alt=\"\"><br>\n我们再将商品进行K=3项的商品组合，可以得到：</p><p><img src=\"https://static001.geekbang.org/resource/image/a7/9c/a7f4448cc5031b1edf304c9aed94039c.png?wh=473*132\" alt=\"\"></p><p>再筛掉小于最小值支持度的商品组合，可以得到：</p><p><img src=\"https://static001.geekbang.org/resource/image/d5/0f/d51fc9137a537d8cb96fa21707cab70f.png?wh=469*75\" alt=\"\"><br>\n通过上面这个过程，我们可以得到K=3项的频繁项集{1,2,3}，也就是{牛奶、面包、尿布}的组合。</p><p>到这里，你已经和我模拟了一遍整个Apriori算法的流程，下面我来给你总结下Apriori算法的递归流程：</p><ol>\n<li>\n<p>K=1，计算K项集的支持度；</p>\n</li>\n<li>\n<p>筛选掉小于最小支持度的项集；</p>\n</li>\n<li>\n<p>如果项集为空，则对应K-1项集的结果为最终结果。</p>\n</li>\n</ol><p>否则K=K+1，重复1-3步。</p><h2>Apriori的改进算法：FP-Growth算法</h2><p>我们刚完成了Apriori算法的模拟，你能看到Apriori在计算的过程中有以下几个缺点：</p><ol>\n<li>\n<p>可能产生大量的候选集。因为采用排列组合的方式，把可能的项集都组合出来了；</p>\n</li>\n<li>\n<p>每次计算都需要重新扫描数据集，来计算每个项集的支持度。</p>\n</li>\n</ol><p>所以Apriori算法会浪费很多计算空间和计算时间，为此人们提出了FP-Growth算法，它的特点是：</p><ol>\n<li>\n<p>创建了一棵FP树来存储频繁项集。在创建前对不满足最小支持度的项进行删除，减少了存储空间。我稍后会讲解如何构造一棵FP树；</p>\n</li>\n<li>\n<p>整个生成过程只遍历数据集2次，大大减少了计算量。</p>\n</li>\n</ol><p>所以在实际工作中，我们常用FP-Growth来做频繁项集的挖掘，下面我给你简述下FP-Growth的原理。</p><p><strong>1.创建项头表（item header table）</strong></p><p>创建项头表的作用是为FP构建及频繁项集挖掘提供索引。</p><p>这一步的流程是先扫描一遍数据集，对于满足最小支持度的单个项（K=1项集）按照支持度从高到低进行排序，这个过程中删除了不满足最小支持度的项。</p><p>项头表包括了项目、支持度，以及该项在FP树中的链表。初始的时候链表为空。</p><p><img src=\"https://static001.geekbang.org/resource/image/69/f5/69ce07c61a654faafb4f5114df1557f5.png?wh=485*166\" alt=\"\"><br>\n<strong>2.构造FP树</strong></p><p>FP树的根节点记为NULL节点。</p><p>整个流程是需要再次扫描数据集，对于每一条数据，按照支持度从高到低的顺序进行创建节点（也就是第一步中项头表中的排序结果），节点如果存在就将计数count+1，如果不存在就进行创建。同时在创建的过程中，需要更新项头表的链表。</p><p><img src=\"https://static001.geekbang.org/resource/image/ea/92/eadaaf6585379815e62aad99386c7992.png?wh=2198*976\" alt=\"\"><br>\n<strong>3.通过FP树挖掘频繁项集</strong></p><p>到这里，我们就得到了一个存储频繁项集的FP树，以及一个项头表。我们可以通过项头表来挖掘出每个频繁项集。</p><p>具体的操作会用到一个概念，叫“条件模式基”，它指的是以要挖掘的节点为叶子节点，自底向上求出FP子树，然后将FP子树的祖先节点设置为叶子节点之和。</p><p>我以“啤酒”的节点为例，从FP树中可以得到一棵FP子树，将祖先节点的支持度记为叶子节点之和，得到：</p><p><img src=\"https://static001.geekbang.org/resource/image/99/0f/9951cda824fc9823136231e7c8e70d0f.png?wh=1332*1130\" alt=\"\"><br>\n你能看出来，相比于原来的FP树，尿布和牛奶的频繁项集数减少了。这是因为我们求得的是以“啤酒”为节点的FP子树，也就是说，在频繁项集中一定要含有“啤酒”这个项。你可以再看下原始的数据，其中订单1{牛奶、面包、尿布}和订单5{牛奶、面包、尿布、可乐}并不存在“啤酒”这个项，所以针对订单1，尿布→牛奶→面包这个项集就会从FP树中去掉，针对订单5也包括了尿布→牛奶→面包这个项集也会从FP树中去掉，所以你能看到以“啤酒”为节点的FP子树，尿布、牛奶、面包项集上的计数比原来少了2。</p><p>条件模式基不包括“啤酒”节点，而且祖先节点如果小于最小支持度就会被剪枝，所以“啤酒”的条件模式基为空。</p><p>同理，我们可以求得“面包”的条件模式基为：</p><p><img src=\"https://static001.geekbang.org/resource/image/41/13/41026c8f25b64b01125c8b8d6a19a113.png?wh=724*754\" alt=\"\"><br>\n所以可以求得面包的频繁项集为{尿布，面包}，{尿布，牛奶，面包}。同样，我们还可以求得牛奶，尿布的频繁项集，这里就不再计算展示。</p><h2>总结</h2><p>今天我给你讲了Apriori算法，它是在“购物篮分析”中常用的关联规则挖掘算法，在Apriori算法中你最主要是需要明白支持度、置信度、提升度这几个概念，以及Apriori迭代计算频繁项集的工作流程。</p><p>Apriori算法在实际工作中需要对数据集扫描多次，会消耗大量的计算时间，所以在2000年FP-Growth算法被提出来，它只需要扫描两次数据集即可以完成关联规则的挖掘。FP-Growth算法最主要的贡献就是提出了FP树和项头表，通过FP树减少了频繁项集的存储以及计算时间。</p><p>当然Apriori的改进算法除了FP-Growth算法以外，还有CBA算法、GSP算法，这里就不进行介绍。</p><p>你能发现一种新理论的提出，往往是先从最原始的概念出发，提出一种新的方法。原始概念最接近人们模拟的过程，但往往会存在空间和时间复杂度过高的情况。所以后面其他人会对这个方法做改进型的创新，重点是在空间和时间复杂度上进行降维，比如采用新型的数据结构。你能看出树在存储和检索中是一个非常好用的数据结构。</p><p><img src=\"https://static001.geekbang.org/resource/image/c7/35/c7aee3b17269139ed3d5a6b82cc56735.png?wh=1552*849\" alt=\"\"><br>\n最后给你留两道思考题吧，你能说一说Apriori的工作原理吗？相比于Apriori，FP-Growth算法都有哪些改进？</p><p>欢迎你在评论区与我分享你的答案，也欢迎点击“请朋友读”，把这篇文章分享给你的朋友或者同事，一起来学习。</p><p></p>","comments":[{"had_liked":false,"id":69018,"user_name":"third","can_delete":false,"product_type":"c1","uid":1025114,"ip_address":"","ucode":"9A37408A834F0B","user_header":"https://static001.geekbang.org/account/avatar/00/0f/a4/5a/e708e423.jpg","comment_is_top":true,"comment_ctime":1550646649,"is_pvip":false,"replies":[{"id":24808,"content":"总结的不错，都可以看下。","user_name":"编辑回复","user_name_real":"何昌梅","uid":1165037,"ctime":1550816723,"ip_address":"","comment_id":69018,"utype":2}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100021701,"comment_content":"我也是自己的理解，不知道是否正确，给大家参考一下\n\n构建子树\n1.假设已经完成创建项头表的工作，省略count+1\n2.扫描数据集，按照项头表排列好的结果，一次创建节点\n3.因为尿布出现在所有订单中，没有例外情况，所以这只有一个子节点\n4.因为牛奶出现在尿布中的所有订单里，所以只有一个子节点\n5.由表中数据可得，在出现牛奶的订单中，面包出现的情况，分为两种，\n1）出现3次面包，出现在有牛奶的订单中\n2）出现一次面包，出现在没有牛奶的订单中\n故，生成两个子节点\n6.后续内容属于迭代内容，自行体会\n\n\n3.创建条件模式集\n是一个减掉子树过程。将祖先节点的支持度，记为叶子节点之和，减少频繁项集。\n简单理解，就是有几个叶子，说明最开始的节点，怀了几个孩子，怀几个生几个\n理解\n1.创建含有啤酒的FP树，只有订单中含有啤酒的频繁项集才存在\n\n\n2.去掉啤酒节点，品酒节点为空，得到，两个频繁项集\n见图可理解\n\n\n\n作业\n1.工作原理\n1）K=1，计算支持度\n2）筛选小于最小支持度的项集\n3）判断如果项集项集为空，K-1项集为最终结果\n4）判断失败，K=K+1，重复1-3\n2.优化\n1）利用FP树和项头表，减少频繁项集的数量存储和计算","like_count":16},{"had_liked":false,"id":93055,"user_name":"Sam.张朝","can_delete":false,"product_type":"c1","uid":1132448,"ip_address":"","ucode":"FB20554D94B250","user_header":"https://static001.geekbang.org/account/avatar/00/11/47/a0/f12115b7.jpg","comment_is_top":false,"comment_ctime":1557386077,"is_pvip":true,"replies":[{"id":64189,"content":"多谢分享","user_name":"作者回复","user_name_real":"cy","uid":1306094,"ctime":1577613937,"ip_address":"","comment_id":93055,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100021701,"comment_content":"https:&#47;&#47;www.ibm.com&#47;developerworks&#47;cn&#47;analytics&#47;library&#47;machine-learning-hands-on2-fp-growth&#47;index.html    FP 还是这里说的清楚","like_count":9,"discussions":[{"author":{"id":1165037,"avatar":"https://static001.geekbang.org/account/avatar/00/11/c6/ed/89a2dc13.jpg","nickname":"丢了个丢丢丢","note":"","ucode":"BDD7E97E0E5E96","race_medal":0,"user_type":4,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":439917,"discussion_content":"总结的不错，都可以看下。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1550816723,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":4}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":69397,"user_name":"白夜","can_delete":false,"product_type":"c1","uid":1354449,"ip_address":"","ucode":"7AABFA7C04EA34","user_header":"https://static001.geekbang.org/account/avatar/00/14/aa/d1/076482f3.jpg","comment_is_top":false,"comment_ctime":1550734767,"is_pvip":false,"replies":[{"id":24805,"content":"对的 是Apriori和FP-Growth的特点。","user_name":"编辑回复","user_name_real":"何昌梅","uid":1165037,"ctime":1550816594,"ip_address":"","comment_id":69397,"utype":2}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100021701,"comment_content":"Apriori 的工作原理：\n0.设置一个最小支持度，\n1.从K=1开始，筛选频繁项集。\n2.在结果中，组合K+1项集，再次筛选\n3.循环1、2步。直到找不到结果为止，K-1项集的结果就是最终结果。\n\nFP-Growth相比Apriori的优点：\n降低了计算复杂度，只要遍历两次数据集。可以直接得到指定商品的条件模式基。","like_count":4,"discussions":[{"author":{"id":1306094,"avatar":"https://static001.geekbang.org/account/avatar/00/13/ed/ee/c4779b67.jpg","nickname":"cy","note":"","ucode":"50D653399A31F6","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":449474,"discussion_content":"多谢分享","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577613937,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":153955,"user_name":"Ronnyz","can_delete":false,"product_type":"c1","uid":1488280,"ip_address":"","ucode":"9F34527B1D343D","user_header":"https://static001.geekbang.org/account/avatar/00/16/b5/98/ffaf2aca.jpg","comment_is_top":false,"comment_ctime":1574337124,"is_pvip":false,"replies":[{"id":59723,"content":"可以用于筛选，比如itemsets, rules = apriori(data, min_support=0.5, min_confidence=1)","user_name":"作者回复","user_name_real":"cy","uid":1306094,"ctime":1574737998,"ip_address":"","comment_id":153955,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100021701,"comment_content":"老师，想问下那置信度和提升度在Aproiri和FP-Growth算法中应用在哪了","like_count":1,"discussions":[{"author":{"id":1165037,"avatar":"https://static001.geekbang.org/account/avatar/00/11/c6/ed/89a2dc13.jpg","nickname":"丢了个丢丢丢","note":"","ucode":"BDD7E97E0E5E96","race_medal":0,"user_type":4,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":440098,"discussion_content":"对的 是Apriori和FP-Growth的特点。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1550816594,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":4}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":71450,"user_name":"梁林松","can_delete":false,"product_type":"c1","uid":1144766,"ip_address":"","ucode":"FA032C3B4E245E","user_header":"https://static001.geekbang.org/account/avatar/00/11/77/be/1f2409e8.jpg","comment_is_top":false,"comment_ctime":1551344681,"is_pvip":false,"replies":[{"id":64487,"content":"对的","user_name":"作者回复","user_name_real":"cy","uid":1306094,"ctime":1577619979,"ip_address":"","comment_id":71450,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100021701,"comment_content":"Apriori算法工作原理是通过计算子集的置信度来寻找频繁项集，从而确立关联。\nPF-Growth算法是改进的 Apriori, 改进之处在于它是按照明确品类去计算频繁项目集的，而不是去求全部数据集的频繁项集。","like_count":1,"discussions":[{"author":{"id":1306094,"avatar":"https://static001.geekbang.org/account/avatar/00/13/ed/ee/c4779b67.jpg","nickname":"cy","note":"","ucode":"50D653399A31F6","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":475336,"discussion_content":"可以用于筛选，比如itemsets, rules = apriori(data, min_support=0.5, min_confidence=1)","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574737998,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":69047,"user_name":"ken","can_delete":false,"product_type":"c1","uid":1353340,"ip_address":"","ucode":"EB70495986A5CF","user_header":"https://static001.geekbang.org/account/avatar/00/14/a6/7c/fc571405.jpg","comment_is_top":false,"comment_ctime":1550651248,"is_pvip":false,"replies":[{"id":24806,"content":"置信度和提升度是对频繁项集的一种验证，在筛选最优组合的时候，一般会设置最小支持度，最小置信度，这样频繁项集和关联关系都要满足这个条件。提升度 (A→B)= 置信度 (A→B)&#47; 支持度 (B)，所以提升度是对满足前两者条件的另一种验证方式，这样避免一种情况：置信度(A-&gt;B)很高，是因为本身支持度(B)很高，实际上和A的出现关系不大。","user_name":"编辑回复","user_name_real":"何昌梅","uid":1165037,"ctime":1550816615,"ip_address":"","comment_id":69047,"utype":2}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100021701,"comment_content":"Apriori挖掘频繁项集，那么置信度和提升度是对得出的频繁项集进行验证的是吧？如得出了啤酒的频繁项集后是对每个结果计算提升度，怎么选择最优的组合呢？是否会出现提升度大而置信度下降的情况？","like_count":1,"discussions":[{"author":{"id":1306094,"avatar":"https://static001.geekbang.org/account/avatar/00/13/ed/ee/c4779b67.jpg","nickname":"cy","note":"","ucode":"50D653399A31F6","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":441157,"discussion_content":"对的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577619979,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":274529,"user_name":"McKee Chen","can_delete":false,"product_type":"c1","uid":2037505,"ip_address":"","ucode":"F74B76542FAB65","user_header":"https://static001.geekbang.org/account/avatar/00/1f/17/01/1c5309a3.jpg","comment_is_top":false,"comment_ctime":1611047866,"is_pvip":false,"replies":[{"id":100864,"content":"加油 总结的不错","user_name":"作者回复","user_name_real":"cy","uid":1306094,"ctime":1612705081,"ip_address":"","comment_id":274529,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100021701,"comment_content":"Apriori算法的原理：\n1. 输入数据集合D，支持度阈值α\n2. 扫描整个数据集，得到所有出现过的数据，作为候选频繁1项集。K=1，频繁0项集为空集\n3. 扫描数据计算候选频繁K项集的支持度\n4. 去除候选频繁K项集中支持度低于阈值的数据集，得到频繁K项集。如果得到的频繁K项集为空，则直接返回频繁K-1项集的集合作为算法结果，算法结束。否则继续对K项进行计算，直到没有更新的频繁项集\n\nApriori算法和FP-Growth算法的区别：\n1. Apriori算法需要对数据集进行多次扫描，而FP-Growth只需要扫描数据集两次\n2. Apriori算法可能产生大量的候选集。而FP-Growth只需要创建FP树来储存频繁项集，并在创建前对不满足最小支持度的项进行删除","like_count":0,"discussions":[{"author":{"id":1165037,"avatar":"https://static001.geekbang.org/account/avatar/00/11/c6/ed/89a2dc13.jpg","nickname":"丢了个丢丢丢","note":"","ucode":"BDD7E97E0E5E96","race_medal":0,"user_type":4,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":439930,"discussion_content":"置信度和提升度是对频繁项集的一种验证，在筛选最优组合的时候，一般会设置最小支持度，最小置信度，这样频繁项集和关联关系都要满足这个条件。提升度 (A→B)= 置信度 (A→B)/ 支持度 (B)，所以提升度是对满足前两者条件的另一种验证方式，这样避免一种情况：置信度(A-&amp;gt;B)很高，是因为本身支持度(B)很高，实际上和A的出现关系不大。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1550816615,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":4}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":203851,"user_name":"JustDoDT","can_delete":false,"product_type":"c1","uid":1127175,"ip_address":"","ucode":"6AF0B80F00EAEF","user_header":"https://static001.geekbang.org/account/avatar/00/11/33/07/8f351609.jpg","comment_is_top":false,"comment_ctime":1586274787,"is_pvip":false,"replies":[{"id":104318,"content":"from efficient_apriori import apriori\n# 设置数据集\ntransactions = [(1, 2, 3), (4, 2, 3, 5), (1, 3, 5, 6), (2, 1, 3, 5),  (2, 1, 3, 4)]\n# 挖掘频繁项集和频繁规则\nitemsets, rules = apriori(transactions, min_support=0.5,  min_confidence=1)\nprint(&quot;频繁项集：&quot;, itemsets)\nprint(&quot;关联规则：&quot;, rules)","user_name":"作者回复","user_name_real":"cy","uid":1306094,"ctime":1617894050,"ip_address":"","comment_id":203851,"utype":1}],"discussion_count":2,"race_medal":0,"score":2,"product_id":100021701,"comment_content":"在这个基础上，我们将商品两两组合，得到 k=2 项的支持度\n上面这句话下面的表，商品1，2的置信度应该为4&#47;5，表里面列的1&#47;5\n我数了同时有商品1，2的订单有4个。\n希望核实一下。","like_count":0,"discussions":[{"author":{"id":1306094,"avatar":"https://static001.geekbang.org/account/avatar/00/13/ed/ee/c4779b67.jpg","nickname":"cy","note":"","ucode":"50D653399A31F6","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":514045,"discussion_content":"加油 总结的不错","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1612705081,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":201341,"user_name":"Geek_qsftko","can_delete":false,"product_type":"c1","uid":1526892,"ip_address":"","ucode":"EE3316C188EC3C","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKerOHGs8VAMWj0ysxZpTPcARHEITiaH8YDJR7aoDNYhRpbLsZ0pJdJXIfzvR7u06iaKPBUoWfic5Zww/132","comment_is_top":false,"comment_ctime":1585753300,"is_pvip":false,"replies":[{"id":104330,"content":"1，3，5的支持度低于0.5的最小支持度，所以最终结果里被舍弃了","user_name":"作者回复","user_name_real":"cy","uid":1306094,"ctime":1617903070,"ip_address":"","comment_id":201341,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100021701,"comment_content":" K=3 项的商品组合 是不是少了一个 1，3，5 组合啊","like_count":0,"discussions":[{"author":{"id":1306094,"avatar":"https://static001.geekbang.org/account/avatar/00/13/ed/ee/c4779b67.jpg","nickname":"cy","note":"","ucode":"50D653399A31F6","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":490981,"discussion_content":"from efficient_apriori import apriori\n# 设置数据集\ntransactions = [(1, 2, 3), (4, 2, 3, 5), (1, 3, 5, 6), (2, 1, 3, 5),  (2, 1, 3, 4)]\n# 挖掘频繁项集和频繁规则\nitemsets, rules = apriori(transactions, min_support=0.5,  min_confidence=1)\nprint(&amp;quot;频繁项集：&amp;quot;, itemsets)\nprint(&amp;quot;关联规则：&amp;quot;, rules)","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1617894050,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1934969,"avatar":"https://static001.geekbang.org/account/avatar/00/1d/86/79/066a062a.jpg","nickname":"非同凡想","note":"","ucode":"713FD449A49D5A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":328729,"discussion_content":"老师写错了","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1606219292,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":69372,"user_name":"Red Cape","can_delete":false,"product_type":"c1","uid":1245056,"ip_address":"","ucode":"12B69514E3EE11","user_header":"https://static001.geekbang.org/account/avatar/00/12/ff/80/382e46b6.jpg","comment_is_top":false,"comment_ctime":1550730184,"is_pvip":false,"replies":[{"id":24807,"content":"FP -Growth中有一个概念叫：条件模式基。它在FP树创建的时候还用不上，创建的时候主要是通过扫描整个数据，和项头表来构造FP树。条件模式基用于挖掘频繁项的过程。通过数找到每个项（item）的条件模式基，递归挖掘频繁项集","user_name":"编辑回复","user_name_real":"何昌梅","uid":1165037,"ctime":1550816667,"ip_address":"","comment_id":69372,"utype":2}],"discussion_count":2,"race_medal":0,"score":2,"product_id":100021701,"comment_content":"构造FP树的过程这里看不懂，面包，啤酒为什么会拆分呢","like_count":0,"discussions":[{"author":{"id":1306094,"avatar":"https://static001.geekbang.org/account/avatar/00/13/ed/ee/c4779b67.jpg","nickname":"cy","note":"","ucode":"50D653399A31F6","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":490306,"discussion_content":"1，3，5的支持度低于0.5的最小支持度，所以最终结果里被舍弃了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1617903070,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":69018,"user_name":"third","can_delete":false,"product_type":"c1","uid":1025114,"ip_address":"","ucode":"9A37408A834F0B","user_header":"https://static001.geekbang.org/account/avatar/00/0f/a4/5a/e708e423.jpg","comment_is_top":true,"comment_ctime":1550646649,"is_pvip":false,"replies":[{"id":24808,"content":"总结的不错，都可以看下。","user_name":"编辑回复","user_name_real":"何昌梅","uid":1165037,"ctime":1550816723,"ip_address":"","comment_id":69018,"utype":2}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100021701,"comment_content":"我也是自己的理解，不知道是否正确，给大家参考一下\n\n构建子树\n1.假设已经完成创建项头表的工作，省略count+1\n2.扫描数据集，按照项头表排列好的结果，一次创建节点\n3.因为尿布出现在所有订单中，没有例外情况，所以这只有一个子节点\n4.因为牛奶出现在尿布中的所有订单里，所以只有一个子节点\n5.由表中数据可得，在出现牛奶的订单中，面包出现的情况，分为两种，\n1）出现3次面包，出现在有牛奶的订单中\n2）出现一次面包，出现在没有牛奶的订单中\n故，生成两个子节点\n6.后续内容属于迭代内容，自行体会\n\n\n3.创建条件模式集\n是一个减掉子树过程。将祖先节点的支持度，记为叶子节点之和，减少频繁项集。\n简单理解，就是有几个叶子，说明最开始的节点，怀了几个孩子，怀几个生几个\n理解\n1.创建含有啤酒的FP树，只有订单中含有啤酒的频繁项集才存在\n\n\n2.去掉啤酒节点，品酒节点为空，得到，两个频繁项集\n见图可理解\n\n\n\n作业\n1.工作原理\n1）K=1，计算支持度\n2）筛选小于最小支持度的项集\n3）判断如果项集项集为空，K-1项集为最终结果\n4）判断失败，K=K+1，重复1-3\n2.优化\n1）利用FP树和项头表，减少频繁项集的数量存储和计算","like_count":16,"discussions":[{"author":{"id":1165037,"avatar":"https://static001.geekbang.org/account/avatar/00/11/c6/ed/89a2dc13.jpg","nickname":"丢了个丢丢丢","note":"","ucode":"BDD7E97E0E5E96","race_medal":0,"user_type":4,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":439917,"discussion_content":"总结的不错，都可以看下。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1550816723,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":4}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":93055,"user_name":"Sam.张朝","can_delete":false,"product_type":"c1","uid":1132448,"ip_address":"","ucode":"FB20554D94B250","user_header":"https://static001.geekbang.org/account/avatar/00/11/47/a0/f12115b7.jpg","comment_is_top":false,"comment_ctime":1557386077,"is_pvip":true,"replies":[{"id":64189,"content":"多谢分享","user_name":"作者回复","user_name_real":"cy","uid":1306094,"ctime":1577613937,"ip_address":"","comment_id":93055,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100021701,"comment_content":"https:&#47;&#47;www.ibm.com&#47;developerworks&#47;cn&#47;analytics&#47;library&#47;machine-learning-hands-on2-fp-growth&#47;index.html    FP 还是这里说的清楚","like_count":9,"discussions":[{"author":{"id":1306094,"avatar":"https://static001.geekbang.org/account/avatar/00/13/ed/ee/c4779b67.jpg","nickname":"cy","note":"","ucode":"50D653399A31F6","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":449474,"discussion_content":"多谢分享","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577613937,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":69397,"user_name":"白夜","can_delete":false,"product_type":"c1","uid":1354449,"ip_address":"","ucode":"7AABFA7C04EA34","user_header":"https://static001.geekbang.org/account/avatar/00/14/aa/d1/076482f3.jpg","comment_is_top":false,"comment_ctime":1550734767,"is_pvip":false,"replies":[{"id":24805,"content":"对的 是Apriori和FP-Growth的特点。","user_name":"编辑回复","user_name_real":"何昌梅","uid":1165037,"ctime":1550816594,"ip_address":"","comment_id":69397,"utype":2}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100021701,"comment_content":"Apriori 的工作原理：\n0.设置一个最小支持度，\n1.从K=1开始，筛选频繁项集。\n2.在结果中，组合K+1项集，再次筛选\n3.循环1、2步。直到找不到结果为止，K-1项集的结果就是最终结果。\n\nFP-Growth相比Apriori的优点：\n降低了计算复杂度，只要遍历两次数据集。可以直接得到指定商品的条件模式基。","like_count":4,"discussions":[{"author":{"id":1165037,"avatar":"https://static001.geekbang.org/account/avatar/00/11/c6/ed/89a2dc13.jpg","nickname":"丢了个丢丢丢","note":"","ucode":"BDD7E97E0E5E96","race_medal":0,"user_type":4,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":440098,"discussion_content":"对的 是Apriori和FP-Growth的特点。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1550816594,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":4}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":153955,"user_name":"Ronnyz","can_delete":false,"product_type":"c1","uid":1488280,"ip_address":"","ucode":"9F34527B1D343D","user_header":"https://static001.geekbang.org/account/avatar/00/16/b5/98/ffaf2aca.jpg","comment_is_top":false,"comment_ctime":1574337124,"is_pvip":false,"replies":[{"id":59723,"content":"可以用于筛选，比如itemsets, rules = apriori(data, min_support=0.5, min_confidence=1)","user_name":"作者回复","user_name_real":"cy","uid":1306094,"ctime":1574737998,"ip_address":"","comment_id":153955,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100021701,"comment_content":"老师，想问下那置信度和提升度在Aproiri和FP-Growth算法中应用在哪了","like_count":1,"discussions":[{"author":{"id":1306094,"avatar":"https://static001.geekbang.org/account/avatar/00/13/ed/ee/c4779b67.jpg","nickname":"cy","note":"","ucode":"50D653399A31F6","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":475336,"discussion_content":"可以用于筛选，比如itemsets, rules = apriori(data, min_support=0.5, min_confidence=1)","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574737998,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":71450,"user_name":"梁林松","can_delete":false,"product_type":"c1","uid":1144766,"ip_address":"","ucode":"FA032C3B4E245E","user_header":"https://static001.geekbang.org/account/avatar/00/11/77/be/1f2409e8.jpg","comment_is_top":false,"comment_ctime":1551344681,"is_pvip":false,"replies":[{"id":64487,"content":"对的","user_name":"作者回复","user_name_real":"cy","uid":1306094,"ctime":1577619979,"ip_address":"","comment_id":71450,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100021701,"comment_content":"Apriori算法工作原理是通过计算子集的置信度来寻找频繁项集，从而确立关联。\nPF-Growth算法是改进的 Apriori, 改进之处在于它是按照明确品类去计算频繁项目集的，而不是去求全部数据集的频繁项集。","like_count":1,"discussions":[{"author":{"id":1306094,"avatar":"https://static001.geekbang.org/account/avatar/00/13/ed/ee/c4779b67.jpg","nickname":"cy","note":"","ucode":"50D653399A31F6","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":441157,"discussion_content":"对的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577619979,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":69047,"user_name":"ken","can_delete":false,"product_type":"c1","uid":1353340,"ip_address":"","ucode":"EB70495986A5CF","user_header":"https://static001.geekbang.org/account/avatar/00/14/a6/7c/fc571405.jpg","comment_is_top":false,"comment_ctime":1550651248,"is_pvip":false,"replies":[{"id":24806,"content":"置信度和提升度是对频繁项集的一种验证，在筛选最优组合的时候，一般会设置最小支持度，最小置信度，这样频繁项集和关联关系都要满足这个条件。提升度 (A→B)= 置信度 (A→B)&#47; 支持度 (B)，所以提升度是对满足前两者条件的另一种验证方式，这样避免一种情况：置信度(A-&gt;B)很高，是因为本身支持度(B)很高，实际上和A的出现关系不大。","user_name":"编辑回复","user_name_real":"何昌梅","uid":1165037,"ctime":1550816615,"ip_address":"","comment_id":69047,"utype":2}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100021701,"comment_content":"Apriori挖掘频繁项集，那么置信度和提升度是对得出的频繁项集进行验证的是吧？如得出了啤酒的频繁项集后是对每个结果计算提升度，怎么选择最优的组合呢？是否会出现提升度大而置信度下降的情况？","like_count":1,"discussions":[{"author":{"id":1165037,"avatar":"https://static001.geekbang.org/account/avatar/00/11/c6/ed/89a2dc13.jpg","nickname":"丢了个丢丢丢","note":"","ucode":"BDD7E97E0E5E96","race_medal":0,"user_type":4,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":439930,"discussion_content":"置信度和提升度是对频繁项集的一种验证，在筛选最优组合的时候，一般会设置最小支持度，最小置信度，这样频繁项集和关联关系都要满足这个条件。提升度 (A→B)= 置信度 (A→B)/ 支持度 (B)，所以提升度是对满足前两者条件的另一种验证方式，这样避免一种情况：置信度(A-&amp;gt;B)很高，是因为本身支持度(B)很高，实际上和A的出现关系不大。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1550816615,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":4}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":274529,"user_name":"McKee Chen","can_delete":false,"product_type":"c1","uid":2037505,"ip_address":"","ucode":"F74B76542FAB65","user_header":"https://static001.geekbang.org/account/avatar/00/1f/17/01/1c5309a3.jpg","comment_is_top":false,"comment_ctime":1611047866,"is_pvip":false,"replies":[{"id":100864,"content":"加油 总结的不错","user_name":"作者回复","user_name_real":"cy","uid":1306094,"ctime":1612705081,"ip_address":"","comment_id":274529,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100021701,"comment_content":"Apriori算法的原理：\n1. 输入数据集合D，支持度阈值α\n2. 扫描整个数据集，得到所有出现过的数据，作为候选频繁1项集。K=1，频繁0项集为空集\n3. 扫描数据计算候选频繁K项集的支持度\n4. 去除候选频繁K项集中支持度低于阈值的数据集，得到频繁K项集。如果得到的频繁K项集为空，则直接返回频繁K-1项集的集合作为算法结果，算法结束。否则继续对K项进行计算，直到没有更新的频繁项集\n\nApriori算法和FP-Growth算法的区别：\n1. Apriori算法需要对数据集进行多次扫描，而FP-Growth只需要扫描数据集两次\n2. Apriori算法可能产生大量的候选集。而FP-Growth只需要创建FP树来储存频繁项集，并在创建前对不满足最小支持度的项进行删除","like_count":0,"discussions":[{"author":{"id":1306094,"avatar":"https://static001.geekbang.org/account/avatar/00/13/ed/ee/c4779b67.jpg","nickname":"cy","note":"","ucode":"50D653399A31F6","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":514045,"discussion_content":"加油 总结的不错","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1612705081,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":203851,"user_name":"JustDoDT","can_delete":false,"product_type":"c1","uid":1127175,"ip_address":"","ucode":"6AF0B80F00EAEF","user_header":"https://static001.geekbang.org/account/avatar/00/11/33/07/8f351609.jpg","comment_is_top":false,"comment_ctime":1586274787,"is_pvip":false,"replies":[{"id":104318,"content":"from efficient_apriori import apriori\n# 设置数据集\ntransactions = [(1, 2, 3), (4, 2, 3, 5), (1, 3, 5, 6), (2, 1, 3, 5),  (2, 1, 3, 4)]\n# 挖掘频繁项集和频繁规则\nitemsets, rules = apriori(transactions, min_support=0.5,  min_confidence=1)\nprint(&quot;频繁项集：&quot;, itemsets)\nprint(&quot;关联规则：&quot;, rules)","user_name":"作者回复","user_name_real":"cy","uid":1306094,"ctime":1617894050,"ip_address":"","comment_id":203851,"utype":1}],"discussion_count":2,"race_medal":0,"score":2,"product_id":100021701,"comment_content":"在这个基础上，我们将商品两两组合，得到 k=2 项的支持度\n上面这句话下面的表，商品1，2的置信度应该为4&#47;5，表里面列的1&#47;5\n我数了同时有商品1，2的订单有4个。\n希望核实一下。","like_count":0,"discussions":[{"author":{"id":1306094,"avatar":"https://static001.geekbang.org/account/avatar/00/13/ed/ee/c4779b67.jpg","nickname":"cy","note":"","ucode":"50D653399A31F6","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":490981,"discussion_content":"from efficient_apriori import apriori\n# 设置数据集\ntransactions = [(1, 2, 3), (4, 2, 3, 5), (1, 3, 5, 6), (2, 1, 3, 5),  (2, 1, 3, 4)]\n# 挖掘频繁项集和频繁规则\nitemsets, rules = apriori(transactions, min_support=0.5,  min_confidence=1)\nprint(&amp;quot;频繁项集：&amp;quot;, itemsets)\nprint(&amp;quot;关联规则：&amp;quot;, rules)","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1617894050,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1934969,"avatar":"https://static001.geekbang.org/account/avatar/00/1d/86/79/066a062a.jpg","nickname":"非同凡想","note":"","ucode":"713FD449A49D5A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":328729,"discussion_content":"老师写错了","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1606219292,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":201341,"user_name":"Geek_qsftko","can_delete":false,"product_type":"c1","uid":1526892,"ip_address":"","ucode":"EE3316C188EC3C","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKerOHGs8VAMWj0ysxZpTPcARHEITiaH8YDJR7aoDNYhRpbLsZ0pJdJXIfzvR7u06iaKPBUoWfic5Zww/132","comment_is_top":false,"comment_ctime":1585753300,"is_pvip":false,"replies":[{"id":104330,"content":"1，3，5的支持度低于0.5的最小支持度，所以最终结果里被舍弃了","user_name":"作者回复","user_name_real":"cy","uid":1306094,"ctime":1617903070,"ip_address":"","comment_id":201341,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100021701,"comment_content":" K=3 项的商品组合 是不是少了一个 1，3，5 组合啊","like_count":0,"discussions":[{"author":{"id":1306094,"avatar":"https://static001.geekbang.org/account/avatar/00/13/ed/ee/c4779b67.jpg","nickname":"cy","note":"","ucode":"50D653399A31F6","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":490306,"discussion_content":"1，3，5的支持度低于0.5的最小支持度，所以最终结果里被舍弃了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1617903070,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":69372,"user_name":"Red Cape","can_delete":false,"product_type":"c1","uid":1245056,"ip_address":"","ucode":"12B69514E3EE11","user_header":"https://static001.geekbang.org/account/avatar/00/12/ff/80/382e46b6.jpg","comment_is_top":false,"comment_ctime":1550730184,"is_pvip":false,"replies":[{"id":24807,"content":"FP -Growth中有一个概念叫：条件模式基。它在FP树创建的时候还用不上，创建的时候主要是通过扫描整个数据，和项头表来构造FP树。条件模式基用于挖掘频繁项的过程。通过数找到每个项（item）的条件模式基，递归挖掘频繁项集","user_name":"编辑回复","user_name_real":"何昌梅","uid":1165037,"ctime":1550816667,"ip_address":"","comment_id":69372,"utype":2}],"discussion_count":2,"race_medal":0,"score":2,"product_id":100021701,"comment_content":"构造FP树的过程这里看不懂，面包，啤酒为什么会拆分呢","like_count":0,"discussions":[{"author":{"id":1165037,"avatar":"https://static001.geekbang.org/account/avatar/00/11/c6/ed/89a2dc13.jpg","nickname":"丢了个丢丢丢","note":"","ucode":"BDD7E97E0E5E96","race_medal":0,"user_type":4,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":440086,"discussion_content":"FP -Growth中有一个概念叫：条件模式基。它在FP树创建的时候还用不上，创建的时候主要是通过扫描整个数据，和项头表来构造FP树。条件模式基用于挖掘频繁项的过程。通过数找到每个项（item）的条件模式基，递归挖掘频繁项集","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1550816667,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":4}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1187792,"avatar":"https://static001.geekbang.org/account/avatar/00/12/1f/d0/660502a4.jpg","nickname":"初","note":"","ucode":"E124D8A566DA43","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":647397,"discussion_content":"你可以竖着串着看，面包下面那个啤酒是四个都有的那个组合，右边那个啤酒是缺面包的那个组合","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1719985096,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"上海","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":70079,"user_name":"Geek_hve78z","can_delete":false,"product_type":"c1","uid":1015045,"ip_address":"","ucode":"386803B8FC2DD5","user_header":"https://static001.geekbang.org/account/avatar/00/0f/7d/05/4bad0c7c.jpg","comment_is_top":false,"comment_ctime":1550989087,"is_pvip":false,"replies":null,"discussion_count":7,"race_medal":0,"score":3,"product_id":100021701,"comment_content":"简述FP-Growth 算法创建过程：\n【1】创建项头表。\n 项     支持度\n尿布  5\n牛奶  4\n面包  4\n啤酒  3\n【2】将数据集按照【尿布-牛奶-面包-啤酒】进行排序，得到\n1）尿布、牛奶、面包\n2）尿布、面包、啤酒、可乐\n3）尿布、牛奶、啤酒、鸡蛋\n4）尿布、牛奶、面包、啤酒\n5）尿布、牛奶、面包、可乐\n【3】构造FP树\n1）遍历第1条数据，得到\n尿布1 |牛奶1 |面包1\n2）遍历第2条数据，得到\n尿布2 |面包1 |啤酒1\n         |牛奶1 |面包1\n3）遍历第3条数据，得到\n尿布3 |面包1 |啤酒1\n         |牛奶2 |面包1\n                  |啤酒1\n4）遍历第4条数据，得到\n尿布4 |面包1 |啤酒1\n         |牛奶3 |面包2 |啤酒1\n                  |啤酒1\n5）遍历第5条数据，得到\n尿布5 |面包1 |啤酒1\n         |牛奶4 |面包3 |啤酒1\n                  |啤酒1\n【4】寻找条件模式基\n1）以‘啤酒’为节点的链条有3条\n-尿布1 |面包1 |啤酒1\n-尿布1 |牛奶1 |面包1 |啤酒1 \n-尿布1 |牛奶1 |啤酒1\n2）FP子树\n尿布3 |面包1 |啤酒1\n        |牛奶2 |面包1 |啤酒1 \n                 |啤酒1\n\n3）“啤酒”的条件模式基是取以‘啤酒’为节点的链条，取‘啤酒’往前的内容，即\n-尿布1 |面包1 \n-尿布1 |牛奶1 |面包1 \n-尿布1 |牛奶1 \n","like_count":67},{"had_liked":false,"id":83337,"user_name":"滨滨","can_delete":false,"product_type":"c1","uid":1334567,"ip_address":"","ucode":"881EFA798BEE34","user_header":"https://static001.geekbang.org/account/avatar/00/14/5d/27/74e152d3.jpg","comment_is_top":false,"comment_ctime":1554536682,"is_pvip":false,"replies":null,"discussion_count":7,"race_medal":0,"score":3,"product_id":100021701,"comment_content":"使用步骤图来解释FG-Growth算法https:&#47;&#47;www.cnblogs.com&#47;zhengxingpeng&#47;p&#47;6679280.html","like_count":16,"discussions":[{"author":{"id":1115232,"avatar":"https://static001.geekbang.org/account/avatar/00/11/04/60/64d166b6.jpg","nickname":"Fan","note":"","ucode":"3BF28670FD9407","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":385643,"discussion_content":"讲的过程比老师的还清楚","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1627192248,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1052469,"avatar":"https://static001.geekbang.org/account/avatar/00/10/0f/35/87465798.jpg","nickname":"成军","note":"","ucode":"298DC56471C5C0","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":237750,"discussion_content":"请问，尿布不属于啤酒的祖先节点吗？尿布的值是3大于最小支持度2.5啊！","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1587181509,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1397126,"avatar":"https://static001.geekbang.org/account/avatar/00/15/51/86/b5fd8dd8.jpg","nickname":"建强","note":"","ucode":"62B03D0E0C64EC","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":49775,"discussion_content":"看了你的留言，我才明白FP树的构造过程，原来和Trie树的构造过程类似，即把排好序的项集看成是一个个的字符串，然后用Trie树的方法进行构造，即合并前缀相同的元素，谢谢。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1573635070,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1539649,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/OwZuBRbVUkziazePs2xTKskNpZachRtCBZLHlv4dAUgaBC5qHI292xaxvg3atGnHlDwjIOXPKEbc7zOrtMyicSNg/132","nickname":"罗辑","note":"","ucode":"06AB60316B51C4","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1397126,"avatar":"https://static001.geekbang.org/account/avatar/00/15/51/86/b5fd8dd8.jpg","nickname":"建强","note":"","ucode":"62B03D0E0C64EC","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":216606,"discussion_content":"确实，看了才明白怎么构建树的，和Trie统计单词字母的拼接好像。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585469798,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":49775,"ip_address":"","group_id":0},"score":216606,"extra":""}]},{"author":{"id":1102507,"avatar":"https://static001.geekbang.org/account/avatar/00/10/d2/ab/55015ae6.jpg","nickname":"陈奇","note":"","ucode":"E4866AFD9D53B1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":25474,"discussion_content":"啤酒的祖先节点都小于最小支持度，所以啤酒的条件模式基为空","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1570531277,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2528145,"avatar":"https://static001.geekbang.org/account/avatar/00/26/93/91/5d7084f5.jpg","nickname":"Ustinian","note":"","ucode":"075CFE6D0DC158","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":576112,"discussion_content":"你好，可以请问下第3部分【构造FP树】中的“遍历读取2条数据”和“遍历读取3条数据”是怎么写的吗？没太看懂为什么还分别是有2行和3行呢？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1655281044,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1022786,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/9b/42/aeb79b35.jpg","nickname":"Ling","note":"","ucode":"EE15D1ABDB073B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":53383,"discussion_content":"数据集重排有点不对：在重排之前，就已经删除小于最小支持度的数据。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574163220,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":71360,"user_name":"lipan","can_delete":false,"product_type":"c1","uid":1347460,"ip_address":"","ucode":"76E2CEEE454017","user_header":"https://static001.geekbang.org/account/avatar/00/14/8f/84/2c2d8c47.jpg","comment_is_top":false,"comment_ctime":1551327784,"is_pvip":false,"replies":null,"discussion_count":1,"race_medal":0,"score":3,"product_id":100021701,"comment_content":"k=2时，商品项集1,3的支持度是4&#47;5啊","like_count":12,"discussions":[{"author":{"id":1252107,"avatar":"https://static001.geekbang.org/account/avatar/00/13/1b/0b/bf56c9e7.jpg","nickname":"bing5tui3","note":"","ucode":"7A313BAC3E6665","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":653688,"discussion_content":"G的频繁四项集{A:5, C:5, E:4,G:4}是不是应该是{A:4, C:4, E:4,G:4}","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1731398630,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"上海","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2344228,"avatar":"https://static001.geekbang.org/account/avatar/00/23/c5/24/182c710f.jpg","nickname":"lin","note":"","ucode":"356B5A4152B02D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":346180,"discussion_content":"感谢分享 非常详细","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1611885318,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2037505,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/17/01/1c5309a3.jpg","nickname":"McKee Chen","note":"","ucode":"F74B76542FAB65","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":343429,"discussion_content":"感谢分享","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1611043753,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1934969,"avatar":"https://static001.geekbang.org/account/avatar/00/1d/86/79/066a062a.jpg","nickname":"非同凡想","note":"","ucode":"713FD449A49D5A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":328724,"discussion_content":"看懂了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1606218367,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1539649,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/OwZuBRbVUkziazePs2xTKskNpZachRtCBZLHlv4dAUgaBC5qHI292xaxvg3atGnHlDwjIOXPKEbc7zOrtMyicSNg/132","nickname":"罗辑","note":"","ucode":"06AB60316B51C4","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":216636,"discussion_content":"讲的很清楚，建议大家看看","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585472048,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1804229,"avatar":"","nickname":"Merlin","note":"","ucode":"5D21F59EC5C9DA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":154732,"discussion_content":"nice\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1580178150,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1266597,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/oseia6IjJIPziamTI2EQ0Bpr8icUicXTea2UuH105t4Bia4yFwBHld49cIQbjORvDdTtMCVdL39H9WxFwzyXspqqHUg/132","nickname":"groot888","note":"","ucode":"50E50681D6BE0C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":148045,"discussion_content":"不错","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579687652,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":93054,"user_name":"Sam.张朝","can_delete":false,"product_type":"c1","uid":1132448,"ip_address":"","ucode":"FB20554D94B250","user_header":"https://static001.geekbang.org/account/avatar/00/11/47/a0/f12115b7.jpg","comment_is_top":false,"comment_ctime":1557385664,"is_pvip":true,"replies":null,"discussion_count":2,"race_medal":0,"score":3,"product_id":100021701,"comment_content":"构造FP 树，看不懂","like_count":7,"discussions":[{"author":{"id":2271895,"avatar":"https://static001.geekbang.org/account/avatar/00/22/aa/97/3c8cda64.jpg","nickname":"渣渣兴","note":"","ucode":"488F1142C12534","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":319051,"discussion_content":"对的\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1603933814,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":83751,"user_name":"曹恒源","can_delete":false,"product_type":"c1","uid":1437718,"ip_address":"","ucode":"224EAFB7A6BAE8","user_header":"https://static001.geekbang.org/account/avatar/00/15/f0/16/76a08ec5.jpg","comment_is_top":false,"comment_ctime":1554710367,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":3,"product_id":100021701,"comment_content":"您好，陈哥，在文章中，k=2,（1,3）的支持度，不应该是4&#47;5么？这部分的计算方式，不是（1,3）在总的购买的商品出现的次数除以总次数所得到的最后结果？","like_count":7},{"had_liked":false,"id":103437,"user_name":"leestar54","can_delete":false,"product_type":"c1","uid":1028877,"ip_address":"","ucode":"F5B95994E29A13","user_header":"https://static001.geekbang.org/account/avatar/00/0f/b3/0d/c4afec40.jpg","comment_is_top":false,"comment_ctime":1560435496,"is_pvip":false,"replies":null,"discussion_count":4,"race_medal":0,"score":3,"product_id":100021701,"comment_content":"为啥“啤酒“的条件模式基为空呢？图上祖先节点尿布:3的支持度=3&#47;5大于0.5，这样啤酒的频繁项集可以得到{尿布，啤酒}","like_count":5,"discussions":[{"author":{"id":1486338,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/1rd5KVxbBWO1Jnq3syrfRQg0NGerVl4Dt7uHTMcy9A7KTqxmy7iaoomoWsjuHM4n7fBr0ESG8OqfJKCDHExzjvQ/132","nickname":"juixv3937","note":"","ucode":"C164F6641FE043","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":5016,"discussion_content":"完全就不知道他是怎么算出来的","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1565875723,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1127175,"avatar":"https://static001.geekbang.org/account/avatar/00/11/33/07/8f351609.jpg","nickname":"JustDoDT","note":"","ucode":"6AF0B80F00EAEF","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":224287,"discussion_content":"没事大家都一样，以后用到的时候，相信你就会懂了，不要太纠结。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1586275139,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":264679,"user_name":"Kai","can_delete":false,"product_type":"c1","uid":2344581,"ip_address":"","ucode":"066F88F3427839","user_header":"https://static001.geekbang.org/account/avatar/00/23/c6/85/ef27e5ae.jpg","comment_is_top":false,"comment_ctime":1606573847,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":3,"product_id":100021701,"comment_content":"这篇文章只介绍了计算频繁项集的算法呀，具体提升度在计算完频繁项集后该怎么用能进一步解释一下吗","like_count":2},{"had_liked":false,"id":124589,"user_name":"Sniper","can_delete":false,"product_type":"c1","uid":1385287,"ip_address":"","ucode":"8FEA9AE27A7A08","user_header":"https://static001.geekbang.org/account/avatar/00/15/23/47/6c2a60ee.jpg","comment_is_top":false,"comment_ctime":1565925459,"is_pvip":false,"replies":null,"discussion_count":1,"race_medal":0,"score":3,"product_id":100021701,"comment_content":"这个支持度  不应该是个小于1的百分比么，怎么到输出结果里面都变成具体的数字了，这些数字的大小怎么理解呢  ","like_count":2,"discussions":[{"author":{"id":1883584,"avatar":"https://static001.geekbang.org/account/avatar/00/1c/bd/c0/8300305a.jpg","nickname":"Ай-ай-ай-ай","note":"","ucode":"D266AD813A2596","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":651717,"discussion_content":"写的都有问题","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1727328572,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"浙江","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1934969,"avatar":"https://static001.geekbang.org/account/avatar/00/1d/86/79/066a062a.jpg","nickname":"非同凡想","note":"","ucode":"713FD449A49D5A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":328728,"discussion_content":"{尿布，啤酒}组合的支持度为3/5，老师写错了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1606219256,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1932586,"avatar":"https://static001.geekbang.org/account/avatar/00/1d/7d/2a/4c7e2e2f.jpg","nickname":"§mc²ompleXWr","note":"","ucode":"8D2527DE0F760B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":263071,"discussion_content":"同问","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1589169008,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1579606,"avatar":"https://static001.geekbang.org/account/avatar/00/18/1a/56/b82db595.jpg","nickname":"杨柳","note":"","ucode":"43E12567425359","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":885,"discussion_content":"我也有这个疑问","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1562137189,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":252796,"user_name":"lemonlxn","can_delete":false,"product_type":"c1","uid":2184921,"ip_address":"","ucode":"520B4842201018","user_header":"","comment_is_top":false,"comment_ctime":1602489670,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":3,"product_id":100021701,"comment_content":"商品相集 itemset，1、3 同时出现的支持度为 4&#47;5，不是1&#47;5，你把这个item给过滤了","like_count":1},{"had_liked":false,"id":83334,"user_name":"滨滨","can_delete":false,"product_type":"c1","uid":1334567,"ip_address":"","ucode":"881EFA798BEE34","user_header":"https://static001.geekbang.org/account/avatar/00/14/5d/27/74e152d3.jpg","comment_is_top":false,"comment_ctime":1554535905,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":3,"product_id":100021701,"comment_content":"Apriori 的工作原理是根据排列组合来计算频繁项集，去掉低于阈值的，然后继续排列组合，直到频繁项集为空。FP-Growth 算法就是利用树来减少查询遍历的次数。","like_count":1,"discussions":[{"author":{"id":1984523,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/48/0b/9400afbb.jpg","nickname":"LiLi","note":"","ucode":"FCD30AF4360BDB","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":261772,"discussion_content":"文中FP树里的数字应该是频数，即出现次数。频率=频数/总数，文中没做这一步计算，直接用频数来表示会更直观吧","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1589004233,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":70079,"user_name":"Geek_hve78z","can_delete":false,"product_type":"c1","uid":1015045,"ip_address":"","ucode":"386803B8FC2DD5","user_header":"https://static001.geekbang.org/account/avatar/00/0f/7d/05/4bad0c7c.jpg","comment_is_top":false,"comment_ctime":1550989087,"is_pvip":false,"replies":null,"discussion_count":7,"race_medal":0,"score":3,"product_id":100021701,"comment_content":"简述FP-Growth 算法创建过程：\n【1】创建项头表。\n 项     支持度\n尿布  5\n牛奶  4\n面包  4\n啤酒  3\n【2】将数据集按照【尿布-牛奶-面包-啤酒】进行排序，得到\n1）尿布、牛奶、面包\n2）尿布、面包、啤酒、可乐\n3）尿布、牛奶、啤酒、鸡蛋\n4）尿布、牛奶、面包、啤酒\n5）尿布、牛奶、面包、可乐\n【3】构造FP树\n1）遍历第1条数据，得到\n尿布1 |牛奶1 |面包1\n2）遍历第2条数据，得到\n尿布2 |面包1 |啤酒1\n         |牛奶1 |面包1\n3）遍历第3条数据，得到\n尿布3 |面包1 |啤酒1\n         |牛奶2 |面包1\n                  |啤酒1\n4）遍历第4条数据，得到\n尿布4 |面包1 |啤酒1\n         |牛奶3 |面包2 |啤酒1\n                  |啤酒1\n5）遍历第5条数据，得到\n尿布5 |面包1 |啤酒1\n         |牛奶4 |面包3 |啤酒1\n                  |啤酒1\n【4】寻找条件模式基\n1）以‘啤酒’为节点的链条有3条\n-尿布1 |面包1 |啤酒1\n-尿布1 |牛奶1 |面包1 |啤酒1 \n-尿布1 |牛奶1 |啤酒1\n2）FP子树\n尿布3 |面包1 |啤酒1\n        |牛奶2 |面包1 |啤酒1 \n                 |啤酒1\n\n3）“啤酒”的条件模式基是取以‘啤酒’为节点的链条，取‘啤酒’往前的内容，即\n-尿布1 |面包1 \n-尿布1 |牛奶1 |面包1 \n-尿布1 |牛奶1 \n","like_count":67,"discussions":[{"author":{"id":1115232,"avatar":"https://static001.geekbang.org/account/avatar/00/11/04/60/64d166b6.jpg","nickname":"Fan","note":"","ucode":"3BF28670FD9407","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":385643,"discussion_content":"讲的过程比老师的还清楚","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1627192248,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1052469,"avatar":"https://static001.geekbang.org/account/avatar/00/10/0f/35/87465798.jpg","nickname":"成军","note":"","ucode":"298DC56471C5C0","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":237750,"discussion_content":"请问，尿布不属于啤酒的祖先节点吗？尿布的值是3大于最小支持度2.5啊！","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1587181509,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1397126,"avatar":"https://static001.geekbang.org/account/avatar/00/15/51/86/b5fd8dd8.jpg","nickname":"建强","note":"","ucode":"62B03D0E0C64EC","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":49775,"discussion_content":"看了你的留言，我才明白FP树的构造过程，原来和Trie树的构造过程类似，即把排好序的项集看成是一个个的字符串，然后用Trie树的方法进行构造，即合并前缀相同的元素，谢谢。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1573635070,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1539649,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/OwZuBRbVUkziazePs2xTKskNpZachRtCBZLHlv4dAUgaBC5qHI292xaxvg3atGnHlDwjIOXPKEbc7zOrtMyicSNg/132","nickname":"罗辑","note":"","ucode":"06AB60316B51C4","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1397126,"avatar":"https://static001.geekbang.org/account/avatar/00/15/51/86/b5fd8dd8.jpg","nickname":"建强","note":"","ucode":"62B03D0E0C64EC","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":216606,"discussion_content":"确实，看了才明白怎么构建树的，和Trie统计单词字母的拼接好像。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585469798,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":49775,"ip_address":"","group_id":0},"score":216606,"extra":""}]},{"author":{"id":1102507,"avatar":"https://static001.geekbang.org/account/avatar/00/10/d2/ab/55015ae6.jpg","nickname":"陈奇","note":"","ucode":"E4866AFD9D53B1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":25474,"discussion_content":"啤酒的祖先节点都小于最小支持度，所以啤酒的条件模式基为空","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1570531277,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2528145,"avatar":"https://static001.geekbang.org/account/avatar/00/26/93/91/5d7084f5.jpg","nickname":"Ustinian","note":"","ucode":"075CFE6D0DC158","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":576112,"discussion_content":"你好，可以请问下第3部分【构造FP树】中的“遍历读取2条数据”和“遍历读取3条数据”是怎么写的吗？没太看懂为什么还分别是有2行和3行呢？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1655281044,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1022786,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/9b/42/aeb79b35.jpg","nickname":"Ling","note":"","ucode":"EE15D1ABDB073B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":53383,"discussion_content":"数据集重排有点不对：在重排之前，就已经删除小于最小支持度的数据。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574163220,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":83337,"user_name":"滨滨","can_delete":false,"product_type":"c1","uid":1334567,"ip_address":"","ucode":"881EFA798BEE34","user_header":"https://static001.geekbang.org/account/avatar/00/14/5d/27/74e152d3.jpg","comment_is_top":false,"comment_ctime":1554536682,"is_pvip":false,"replies":null,"discussion_count":7,"race_medal":0,"score":3,"product_id":100021701,"comment_content":"使用步骤图来解释FG-Growth算法https:&#47;&#47;www.cnblogs.com&#47;zhengxingpeng&#47;p&#47;6679280.html","like_count":16,"discussions":[{"author":{"id":1252107,"avatar":"https://static001.geekbang.org/account/avatar/00/13/1b/0b/bf56c9e7.jpg","nickname":"bing5tui3","note":"","ucode":"7A313BAC3E6665","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":653688,"discussion_content":"G的频繁四项集{A:5, C:5, E:4,G:4}是不是应该是{A:4, C:4, E:4,G:4}","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1731398630,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"上海","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2344228,"avatar":"https://static001.geekbang.org/account/avatar/00/23/c5/24/182c710f.jpg","nickname":"lin","note":"","ucode":"356B5A4152B02D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":346180,"discussion_content":"感谢分享 非常详细","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1611885318,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2037505,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/17/01/1c5309a3.jpg","nickname":"McKee Chen","note":"","ucode":"F74B76542FAB65","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":343429,"discussion_content":"感谢分享","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1611043753,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1934969,"avatar":"https://static001.geekbang.org/account/avatar/00/1d/86/79/066a062a.jpg","nickname":"非同凡想","note":"","ucode":"713FD449A49D5A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":328724,"discussion_content":"看懂了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1606218367,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1539649,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/OwZuBRbVUkziazePs2xTKskNpZachRtCBZLHlv4dAUgaBC5qHI292xaxvg3atGnHlDwjIOXPKEbc7zOrtMyicSNg/132","nickname":"罗辑","note":"","ucode":"06AB60316B51C4","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":216636,"discussion_content":"讲的很清楚，建议大家看看","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585472048,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1804229,"avatar":"","nickname":"Merlin","note":"","ucode":"5D21F59EC5C9DA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":154732,"discussion_content":"nice\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1580178150,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1266597,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/oseia6IjJIPziamTI2EQ0Bpr8icUicXTea2UuH105t4Bia4yFwBHld49cIQbjORvDdTtMCVdL39H9WxFwzyXspqqHUg/132","nickname":"groot888","note":"","ucode":"50E50681D6BE0C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":148045,"discussion_content":"不错","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579687652,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":71360,"user_name":"lipan","can_delete":false,"product_type":"c1","uid":1347460,"ip_address":"","ucode":"76E2CEEE454017","user_header":"https://static001.geekbang.org/account/avatar/00/14/8f/84/2c2d8c47.jpg","comment_is_top":false,"comment_ctime":1551327784,"is_pvip":false,"replies":null,"discussion_count":1,"race_medal":0,"score":3,"product_id":100021701,"comment_content":"k=2时，商品项集1,3的支持度是4&#47;5啊","like_count":12,"discussions":[{"author":{"id":2271895,"avatar":"https://static001.geekbang.org/account/avatar/00/22/aa/97/3c8cda64.jpg","nickname":"渣渣兴","note":"","ucode":"488F1142C12534","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":319051,"discussion_content":"对的\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1603933814,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":93054,"user_name":"Sam.张朝","can_delete":false,"product_type":"c1","uid":1132448,"ip_address":"","ucode":"FB20554D94B250","user_header":"https://static001.geekbang.org/account/avatar/00/11/47/a0/f12115b7.jpg","comment_is_top":false,"comment_ctime":1557385664,"is_pvip":true,"replies":null,"discussion_count":2,"race_medal":0,"score":3,"product_id":100021701,"comment_content":"构造FP 树，看不懂","like_count":7,"discussions":[{"author":{"id":1486338,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/1rd5KVxbBWO1Jnq3syrfRQg0NGerVl4Dt7uHTMcy9A7KTqxmy7iaoomoWsjuHM4n7fBr0ESG8OqfJKCDHExzjvQ/132","nickname":"juixv3937","note":"","ucode":"C164F6641FE043","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":5016,"discussion_content":"完全就不知道他是怎么算出来的","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1565875723,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1127175,"avatar":"https://static001.geekbang.org/account/avatar/00/11/33/07/8f351609.jpg","nickname":"JustDoDT","note":"","ucode":"6AF0B80F00EAEF","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":224287,"discussion_content":"没事大家都一样，以后用到的时候，相信你就会懂了，不要太纠结。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1586275139,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":83751,"user_name":"曹恒源","can_delete":false,"product_type":"c1","uid":1437718,"ip_address":"","ucode":"224EAFB7A6BAE8","user_header":"https://static001.geekbang.org/account/avatar/00/15/f0/16/76a08ec5.jpg","comment_is_top":false,"comment_ctime":1554710367,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":3,"product_id":100021701,"comment_content":"您好，陈哥，在文章中，k=2,（1,3）的支持度，不应该是4&#47;5么？这部分的计算方式，不是（1,3）在总的购买的商品出现的次数除以总次数所得到的最后结果？","like_count":7},{"had_liked":false,"id":103437,"user_name":"leestar54","can_delete":false,"product_type":"c1","uid":1028877,"ip_address":"","ucode":"F5B95994E29A13","user_header":"https://static001.geekbang.org/account/avatar/00/0f/b3/0d/c4afec40.jpg","comment_is_top":false,"comment_ctime":1560435496,"is_pvip":false,"replies":null,"discussion_count":4,"race_medal":0,"score":3,"product_id":100021701,"comment_content":"为啥“啤酒“的条件模式基为空呢？图上祖先节点尿布:3的支持度=3&#47;5大于0.5，这样啤酒的频繁项集可以得到{尿布，啤酒}","like_count":5,"discussions":[{"author":{"id":1883584,"avatar":"https://static001.geekbang.org/account/avatar/00/1c/bd/c0/8300305a.jpg","nickname":"Ай-ай-ай-ай","note":"","ucode":"D266AD813A2596","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":651717,"discussion_content":"写的都有问题","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1727328572,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"浙江","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1934969,"avatar":"https://static001.geekbang.org/account/avatar/00/1d/86/79/066a062a.jpg","nickname":"非同凡想","note":"","ucode":"713FD449A49D5A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":328728,"discussion_content":"{尿布，啤酒}组合的支持度为3/5，老师写错了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1606219256,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1932586,"avatar":"https://static001.geekbang.org/account/avatar/00/1d/7d/2a/4c7e2e2f.jpg","nickname":"§mc²ompleXWr","note":"","ucode":"8D2527DE0F760B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":263071,"discussion_content":"同问","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1589169008,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1579606,"avatar":"https://static001.geekbang.org/account/avatar/00/18/1a/56/b82db595.jpg","nickname":"杨柳","note":"","ucode":"43E12567425359","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":885,"discussion_content":"我也有这个疑问","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1562137189,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":264679,"user_name":"Kai","can_delete":false,"product_type":"c1","uid":2344581,"ip_address":"","ucode":"066F88F3427839","user_header":"https://static001.geekbang.org/account/avatar/00/23/c6/85/ef27e5ae.jpg","comment_is_top":false,"comment_ctime":1606573847,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":3,"product_id":100021701,"comment_content":"这篇文章只介绍了计算频繁项集的算法呀，具体提升度在计算完频繁项集后该怎么用能进一步解释一下吗","like_count":2},{"had_liked":false,"id":124589,"user_name":"Sniper","can_delete":false,"product_type":"c1","uid":1385287,"ip_address":"","ucode":"8FEA9AE27A7A08","user_header":"https://static001.geekbang.org/account/avatar/00/15/23/47/6c2a60ee.jpg","comment_is_top":false,"comment_ctime":1565925459,"is_pvip":false,"replies":null,"discussion_count":1,"race_medal":0,"score":3,"product_id":100021701,"comment_content":"这个支持度  不应该是个小于1的百分比么，怎么到输出结果里面都变成具体的数字了，这些数字的大小怎么理解呢  ","like_count":2,"discussions":[{"author":{"id":1984523,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/48/0b/9400afbb.jpg","nickname":"LiLi","note":"","ucode":"FCD30AF4360BDB","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":261772,"discussion_content":"文中FP树里的数字应该是频数，即出现次数。频率=频数/总数，文中没做这一步计算，直接用频数来表示会更直观吧","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1589004233,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":252796,"user_name":"lemonlxn","can_delete":false,"product_type":"c1","uid":2184921,"ip_address":"","ucode":"520B4842201018","user_header":"","comment_is_top":false,"comment_ctime":1602489670,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":3,"product_id":100021701,"comment_content":"商品相集 itemset，1、3 同时出现的支持度为 4&#47;5，不是1&#47;5，你把这个item给过滤了","like_count":1},{"had_liked":false,"id":83334,"user_name":"滨滨","can_delete":false,"product_type":"c1","uid":1334567,"ip_address":"","ucode":"881EFA798BEE34","user_header":"https://static001.geekbang.org/account/avatar/00/14/5d/27/74e152d3.jpg","comment_is_top":false,"comment_ctime":1554535905,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":3,"product_id":100021701,"comment_content":"Apriori 的工作原理是根据排列组合来计算频繁项集，去掉低于阈值的，然后继续排列组合，直到频繁项集为空。FP-Growth 算法就是利用树来减少查询遍历的次数。","like_count":1},{"had_liked":false,"id":70582,"user_name":"李沛欣","can_delete":false,"product_type":"c1","uid":1362695,"ip_address":"","ucode":"98874954230D95","user_header":"https://static001.geekbang.org/account/avatar/00/14/cb/07/e34220d6.jpg","comment_is_top":false,"comment_ctime":1551143595,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":4,"product_id":100021701,"comment_content":"支持度：购买ABC这一商品组合，在所有商品组合中的出现概率\n\n置信度：购买A商品的条件下，购买B商品的概率\n\n提升度：购买A商品又购买B商品的概率，与所有购买了B商品的概率之比。也就是购买A商品对购买B商品的可能性提升能力。\n\n提升度＞1，说明相互促进\n等于1，没影响，\n＜1，相互排斥","like_count":1},{"had_liked":false,"id":371243,"user_name":"Geek_24abc6","can_delete":false,"product_type":"c1","uid":1649859,"ip_address":"广东","ucode":"88CD214232C6BC","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/CqF8eiaanNteyu2U7FibYicjnw99VXZST61vvMpQKSd5iaLNW6EicLeFYyDOKJmg9rNx6KW90DwpPMKNxiben6fQeZjA/132","comment_is_top":false,"comment_ctime":1679667500,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":4,"product_id":100021701,"comment_content":"为什么没有使用提升度？","like_count":0},{"had_liked":false,"id":353261,"user_name":"开心小毛","can_delete":false,"product_type":"c1","uid":1023762,"ip_address":"美国","ucode":"9D57A2773759F3","user_header":"","comment_is_top":false,"comment_ctime":1659320907,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":4,"product_id":100021701,"comment_content":"请问老师：在“啤酒”的条件模式基中祖先节“尿布”的support为3，为啥“尿布”会被剪枝呢？3&#47;5的订单数是大于0.5的最小支持度要求的不是么？","like_count":0},{"had_liked":false,"id":321925,"user_name":"Longerian","can_delete":false,"product_type":"c1","uid":1032464,"ip_address":"","ucode":"0B74EE70D09A2A","user_header":"https://static001.geekbang.org/account/avatar/00/0f/c1/10/28d5a686.jpg","comment_is_top":false,"comment_ctime":1637111994,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":4,"product_id":100021701,"comment_content":"Apriori 算法咋看上去没有用到置信度，提升度这些指标，那前文介绍这些概念的目的是啥","like_count":0},{"had_liked":false,"id":194310,"user_name":"成军","can_delete":false,"product_type":"c1","uid":1052469,"ip_address":"","ucode":"298DC56471C5C0","user_header":"https://static001.geekbang.org/account/avatar/00/10/0f/35/87465798.jpg","comment_is_top":false,"comment_ctime":1585049100,"is_pvip":false,"replies":null,"discussion_count":1,"race_medal":0,"score":4,"product_id":100021701,"comment_content":"(1.3)的支持度是4&#47;5，老师，有另外两个同学也提出来了","like_count":0},{"had_liked":false,"id":127963,"user_name":"Maybrittnelson","can_delete":false,"product_type":"c1","uid":1136881,"ip_address":"","ucode":"944C9AB458F479","user_header":"https://static001.geekbang.org/account/avatar/00/11/58/f1/0e934ca8.jpg","comment_is_top":false,"comment_ctime":1566815184,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":4,"product_id":100021701,"comment_content":"在Apriori的改进算法中，面包的条件模式基，应该只有{尿布，牛奶，面包}吧？因为{尿布，面包}中的面包为1，小于最小支持度的项可乐为2，得删除。","like_count":0},{"had_liked":false,"id":70169,"user_name":"Kery","can_delete":false,"product_type":"c1","uid":1002341,"ip_address":"","ucode":"0479E9A5F11C73","user_header":"https://static001.geekbang.org/account/avatar/00/0f/4b/65/91540892.jpg","comment_is_top":false,"comment_ctime":1551020852,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":4,"product_id":100021701,"comment_content":"在创建FP子树前，提醒大家记得删除订单中不满足最小支持度的商品，再按照项头表对每个订单从高到底排序来依次构造FP树。","like_count":0},{"had_liked":false,"id":70076,"user_name":"Geek_hve78z","can_delete":false,"product_type":"c1","uid":1015045,"ip_address":"","ucode":"386803B8FC2DD5","user_header":"https://static001.geekbang.org/account/avatar/00/0f/7d/05/4bad0c7c.jpg","comment_is_top":false,"comment_ctime":1550987180,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":4,"product_id":100021701,"comment_content":"1、Apriori 的工作原理吗？\nApriori算法的关键是频繁项集。\nApriori算法的基本过程是：\n1、扫描一遍数据库，得到一阶频繁项集；\n2、用一阶频繁项集构造二阶候选项；\n3、扫描数据库对二阶候选项进行计数，删除其中的非频繁项，得到二阶频繁项；\n4、然后构造三阶候选项，以此类推，直到无法构造更高阶的候选项，或到达频繁项集的最大长度限制。\n\n2、相比于 Apriori，FP-Growth 算法都有哪些改进？\n通过创建FP树存储频繁项集。减少存储空间。\n整个生成过程只遍历数据集2次，减少计算量。\n\n","like_count":0},{"had_liked":false,"id":68998,"user_name":"Grandia_Z","can_delete":false,"product_type":"c1","uid":1354034,"ip_address":"","ucode":"4928A7ABA7C24C","user_header":"https://static001.geekbang.org/account/avatar/00/14/a9/32/eb71b457.jpg","comment_is_top":false,"comment_ctime":1550641763,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":4,"product_id":100021701,"comment_content":"1 2 5在k=2时就被筛选剔除了","like_count":0},{"had_liked":false,"id":68895,"user_name":"深白浅黑","can_delete":false,"product_type":"c1","uid":1123923,"ip_address":"","ucode":"DCCAA31DE8B127","user_header":"https://static001.geekbang.org/account/avatar/00/11/26/53/60fe31fb.jpg","comment_is_top":false,"comment_ctime":1550626564,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":4,"product_id":100021701,"comment_content":"提升度 (A→B)= 置信度 (A→B)&#47; 支持度 (B)\n那么：\n当K=3时，提升度怎么求取？\n当K&gt;3时，提升度怎么求取？","like_count":0,"discussions":[{"author":{"id":1655563,"avatar":"https://static001.geekbang.org/account/avatar/00/19/43/0b/7688f18c.jpg","nickname":"江 Nina","note":"","ucode":"18E41503CC43C2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":384334,"discussion_content":"真的不懂 明明这里错了  也有很多同学指出来了 老师为啥不改过来呢 哎 真的很影响阅读","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1626505114,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":70582,"user_name":"李沛欣","can_delete":false,"product_type":"c1","uid":1362695,"ip_address":"","ucode":"98874954230D95","user_header":"https://static001.geekbang.org/account/avatar/00/14/cb/07/e34220d6.jpg","comment_is_top":false,"comment_ctime":1551143595,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":4,"product_id":100021701,"comment_content":"支持度：购买ABC这一商品组合，在所有商品组合中的出现概率\n\n置信度：购买A商品的条件下，购买B商品的概率\n\n提升度：购买A商品又购买B商品的概率，与所有购买了B商品的概率之比。也就是购买A商品对购买B商品的可能性提升能力。\n\n提升度＞1，说明相互促进\n等于1，没影响，\n＜1，相互排斥","like_count":1},{"had_liked":false,"id":371243,"user_name":"Geek_24abc6","can_delete":false,"product_type":"c1","uid":1649859,"ip_address":"广东","ucode":"88CD214232C6BC","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/CqF8eiaanNteyu2U7FibYicjnw99VXZST61vvMpQKSd5iaLNW6EicLeFYyDOKJmg9rNx6KW90DwpPMKNxiben6fQeZjA/132","comment_is_top":false,"comment_ctime":1679667500,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":4,"product_id":100021701,"comment_content":"为什么没有使用提升度？","like_count":0},{"had_liked":false,"id":353261,"user_name":"开心小毛","can_delete":false,"product_type":"c1","uid":1023762,"ip_address":"美国","ucode":"9D57A2773759F3","user_header":"","comment_is_top":false,"comment_ctime":1659320907,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":4,"product_id":100021701,"comment_content":"请问老师：在“啤酒”的条件模式基中祖先节“尿布”的support为3，为啥“尿布”会被剪枝呢？3&#47;5的订单数是大于0.5的最小支持度要求的不是么？","like_count":0},{"had_liked":false,"id":321925,"user_name":"Longerian","can_delete":false,"product_type":"c1","uid":1032464,"ip_address":"","ucode":"0B74EE70D09A2A","user_header":"https://static001.geekbang.org/account/avatar/00/0f/c1/10/28d5a686.jpg","comment_is_top":false,"comment_ctime":1637111994,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":4,"product_id":100021701,"comment_content":"Apriori 算法咋看上去没有用到置信度，提升度这些指标，那前文介绍这些概念的目的是啥","like_count":0},{"had_liked":false,"id":194310,"user_name":"成军","can_delete":false,"product_type":"c1","uid":1052469,"ip_address":"","ucode":"298DC56471C5C0","user_header":"https://static001.geekbang.org/account/avatar/00/10/0f/35/87465798.jpg","comment_is_top":false,"comment_ctime":1585049100,"is_pvip":false,"replies":null,"discussion_count":1,"race_medal":0,"score":4,"product_id":100021701,"comment_content":"(1.3)的支持度是4&#47;5，老师，有另外两个同学也提出来了","like_count":0,"discussions":[{"author":{"id":1655563,"avatar":"https://static001.geekbang.org/account/avatar/00/19/43/0b/7688f18c.jpg","nickname":"江 Nina","note":"","ucode":"18E41503CC43C2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":384334,"discussion_content":"真的不懂 明明这里错了  也有很多同学指出来了 老师为啥不改过来呢 哎 真的很影响阅读","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1626505114,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":127963,"user_name":"Maybrittnelson","can_delete":false,"product_type":"c1","uid":1136881,"ip_address":"","ucode":"944C9AB458F479","user_header":"https://static001.geekbang.org/account/avatar/00/11/58/f1/0e934ca8.jpg","comment_is_top":false,"comment_ctime":1566815184,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":4,"product_id":100021701,"comment_content":"在Apriori的改进算法中，面包的条件模式基，应该只有{尿布，牛奶，面包}吧？因为{尿布，面包}中的面包为1，小于最小支持度的项可乐为2，得删除。","like_count":0},{"had_liked":false,"id":70169,"user_name":"Kery","can_delete":false,"product_type":"c1","uid":1002341,"ip_address":"","ucode":"0479E9A5F11C73","user_header":"https://static001.geekbang.org/account/avatar/00/0f/4b/65/91540892.jpg","comment_is_top":false,"comment_ctime":1551020852,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":4,"product_id":100021701,"comment_content":"在创建FP子树前，提醒大家记得删除订单中不满足最小支持度的商品，再按照项头表对每个订单从高到底排序来依次构造FP树。","like_count":0},{"had_liked":false,"id":70076,"user_name":"Geek_hve78z","can_delete":false,"product_type":"c1","uid":1015045,"ip_address":"","ucode":"386803B8FC2DD5","user_header":"https://static001.geekbang.org/account/avatar/00/0f/7d/05/4bad0c7c.jpg","comment_is_top":false,"comment_ctime":1550987180,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":4,"product_id":100021701,"comment_content":"1、Apriori 的工作原理吗？\nApriori算法的关键是频繁项集。\nApriori算法的基本过程是：\n1、扫描一遍数据库，得到一阶频繁项集；\n2、用一阶频繁项集构造二阶候选项；\n3、扫描数据库对二阶候选项进行计数，删除其中的非频繁项，得到二阶频繁项；\n4、然后构造三阶候选项，以此类推，直到无法构造更高阶的候选项，或到达频繁项集的最大长度限制。\n\n2、相比于 Apriori，FP-Growth 算法都有哪些改进？\n通过创建FP树存储频繁项集。减少存储空间。\n整个生成过程只遍历数据集2次，减少计算量。\n\n","like_count":0},{"had_liked":false,"id":68998,"user_name":"Grandia_Z","can_delete":false,"product_type":"c1","uid":1354034,"ip_address":"","ucode":"4928A7ABA7C24C","user_header":"https://static001.geekbang.org/account/avatar/00/14/a9/32/eb71b457.jpg","comment_is_top":false,"comment_ctime":1550641763,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":4,"product_id":100021701,"comment_content":"1 2 5在k=2时就被筛选剔除了","like_count":0},{"had_liked":false,"id":68895,"user_name":"深白浅黑","can_delete":false,"product_type":"c1","uid":1123923,"ip_address":"","ucode":"DCCAA31DE8B127","user_header":"https://static001.geekbang.org/account/avatar/00/11/26/53/60fe31fb.jpg","comment_is_top":false,"comment_ctime":1550626564,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":4,"product_id":100021701,"comment_content":"提升度 (A→B)= 置信度 (A→B)&#47; 支持度 (B)\n那么：\n当K=3时，提升度怎么求取？\n当K&gt;3时，提升度怎么求取？","like_count":0},{"had_liked":false,"id":68798,"user_name":"从未在此","can_delete":false,"product_type":"c1","uid":1354589,"ip_address":"","ucode":"5A4AA275D8EE9A","user_header":"https://static001.geekbang.org/account/avatar/00/14/ab/5d/430ed3b6.jpg","comment_is_top":false,"comment_ctime":1550620561,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":5,"product_id":100021701,"comment_content":"k=3时不应该有个125吗","like_count":0},{"had_liked":false,"id":68798,"user_name":"从未在此","can_delete":false,"product_type":"c1","uid":1354589,"ip_address":"","ucode":"5A4AA275D8EE9A","user_header":"https://static001.geekbang.org/account/avatar/00/14/ab/5d/430ed3b6.jpg","comment_is_top":false,"comment_ctime":1550620561,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":5,"product_id":100021701,"comment_content":"k=3时不应该有个125吗","like_count":0}]}