{"id":102067,"title":"09 |  生产者消息分区机制原理剖析","content":"<p>我们在使用Apache Kafka生产和消费消息的时候，肯定是希望能够将数据均匀地分配到所有服务器上。比如很多公司使用Kafka收集应用服务器的日志数据，这种数据都是很多的，特别是对于那种大批量机器组成的集群环境，每分钟产生的日志量都能以GB数，因此如何将这么大的数据量均匀地分配到Kafka的各个Broker上，就成为一个非常重要的问题。</p><p>今天我就来和你说说Kafka生产者如何实现这个需求，我会以Java API为例进行分析，但实际上其他语言的实现逻辑也是类似的。</p><h2>为什么分区？</h2><p>如果你对Kafka分区（Partition）的概念还不熟悉，可以先返回专栏<a href=\"https://time.geekbang.org/column/article/99318\">第2期</a>回顾一下。专栏前面我说过Kafka有主题（Topic）的概念，它是承载真实数据的逻辑容器，而在主题之下还分为若干个分区，也就是说Kafka的消息组织方式实际上是三级结构：主题-分区-消息。主题下的每条消息只会保存在某一个分区中，而不会在多个分区中被保存多份。官网上的这张图非常清晰地展示了Kafka的三级结构，如下所示：</p><p><img src=\"https://static001.geekbang.org/resource/image/a9/51/a9fde3dd19a6ea5dc7e7e3d1f42ffa51.jpg?wh=4000*1911\" alt=\"\"></p><p>现在我抛出一个问题你可以先思考一下：你觉得为什么Kafka要做这样的设计？为什么使用分区的概念而不是直接使用多个主题呢？</p><p>其实分区的作用就是提供负载均衡的能力，或者说对数据进行分区的主要原因，就是为了实现系统的高伸缩性（Scalability）。不同的分区能够被放置到不同节点的机器上，而数据的读写操作也都是针对分区这个粒度而进行的，这样每个节点的机器都能独立地执行各自分区的读写请求处理。并且，我们还可以通过添加新的节点机器来增加整体系统的吞吐量。</p><!-- [[[read_end]]] --><p>实际上分区的概念以及分区数据库早在1980年就已经有大牛们在做了，比如那时候有个叫Teradata的数据库就引入了分区的概念。</p><p>值得注意的是，不同的分布式系统对分区的叫法也不尽相同。比如在Kafka中叫分区，在MongoDB和Elasticsearch中就叫分片Shard，而在HBase中则叫Region，在Cassandra中又被称作vnode。从表面看起来它们实现原理可能不尽相同，但对底层分区（Partitioning）的整体思想却从未改变。</p><p>除了提供负载均衡这种最核心的功能之外，利用分区也可以实现其他一些业务级别的需求，比如实现业务级别的消息顺序的问题，这一点我今天也会分享一个具体的案例来说明。</p><h2>都有哪些分区策略？</h2><p>下面我们说说Kafka生产者的分区策略。<strong>所谓分区策略是决定生产者将消息发送到哪个分区的算法。</strong>Kafka为我们提供了默认的分区策略，同时它也支持你自定义分区策略。</p><p>如果要自定义分区策略，你需要显式地配置生产者端的参数<code>partitioner.class</code>。这个参数该怎么设定呢？方法很简单，在编写生产者程序时，你可以编写一个具体的类实现<code>org.apache.kafka.clients.producer.Partitioner</code>接口。这个接口也很简单，只定义了两个方法：<code>partition()</code>和<code>close()</code>，通常你只需要实现最重要的partition方法。我们来看看这个方法的方法签名：</p><pre><code>int partition(String topic, Object key, byte[] keyBytes, Object value, byte[] valueBytes, Cluster cluster);\n</code></pre><p>这里的<code>topic</code>、<code>key</code>、<code>keyBytes</code>、<code>value</code>和<code>valueBytes</code>都属于消息数据，<code>cluster</code>则是集群信息（比如当前Kafka集群共有多少主题、多少Broker等）。Kafka给你这么多信息，就是希望让你能够充分地利用这些信息对消息进行分区，计算出它要被发送到哪个分区中。只要你自己的实现类定义好了partition方法，同时设置<code>partitioner.class</code>参数为你自己实现类的Full Qualified Name，那么生产者程序就会按照你的代码逻辑对消息进行分区。虽说可以有无数种分区的可能，但比较常见的分区策略也就那么几种，下面我来详细介绍一下。</p><p><strong>轮询策略</strong></p><p>也称Round-robin策略，即顺序分配。比如一个主题下有3个分区，那么第一条消息被发送到分区0，第二条被发送到分区1，第三条被发送到分区2，以此类推。当生产第4条消息时又会重新开始，即将其分配到分区0，就像下面这张图展示的那样。</p><p><img src=\"https://static001.geekbang.org/resource/image/be/e2/bed44c33d6707c0028cc3f14207ea6e2.jpg?wh=3441*959\" alt=\"\"></p><p>这就是所谓的轮询策略。轮询策略是Kafka Java生产者API默认提供的分区策略。如果你未指定<code>partitioner.class</code>参数，那么你的生产者程序会按照轮询的方式在主题的所有分区间均匀地“码放”消息。</p><p><strong>轮询策略有非常优秀的负载均衡表现，它总是能保证消息最大限度地被平均分配到所有分区上，故默认情况下它是最合理的分区策略，也是我们最常用的分区策略之一。</strong></p><p><strong>随机策略</strong></p><p>也称Randomness策略。所谓随机就是我们随意地将消息放置到任意一个分区上，如下面这张图所示。</p><p><img src=\"https://static001.geekbang.org/resource/image/97/ff/97fd864312f804bf414001c2f9228aff.jpg?wh=3414*948\" alt=\"\"></p><p>如果要实现随机策略版的partition方法，很简单，只需要两行代码即可：</p><pre><code>List&lt;PartitionInfo&gt; partitions = cluster.partitionsForTopic(topic);\nreturn ThreadLocalRandom.current().nextInt(partitions.size());\n</code></pre><p>先计算出该主题总的分区数，然后随机地返回一个小于它的正整数。</p><p>本质上看随机策略也是力求将数据均匀地打散到各个分区，但从实际表现来看，它要逊于轮询策略，所以<strong>如果追求数据的均匀分布，还是使用轮询策略比较好</strong>。事实上，随机策略是老版本生产者使用的分区策略，在新版本中已经改为轮询了。</p><p><strong>按消息键保序策略</strong></p><p>也称Key-ordering策略。有点尴尬的是，这个名词是我自己编的，Kafka官网上并无这样的提法。</p><p>Kafka允许为每条消息定义消息键，简称为Key。这个Key的作用非常大，它可以是一个有着明确业务含义的字符串，比如客户代码、部门编号或是业务ID等；也可以用来表征消息元数据。特别是在Kafka不支持时间戳的年代，在一些场景中，工程师们都是直接将消息创建时间封装进Key里面的。一旦消息被定义了Key，那么你就可以保证同一个Key的所有消息都进入到相同的分区里面，由于每个分区下的消息处理都是有顺序的，故这个策略被称为按消息键保序策略，如下图所示。</p><p><img src=\"https://static001.geekbang.org/resource/image/cf/a8/cf7383078f4c7c022c1113c096d5d5a8.jpg?wh=3395*944\" alt=\"\"></p><p>实现这个策略的partition方法同样简单，只需要下面两行代码即可：</p><pre><code>List&lt;PartitionInfo&gt; partitions = cluster.partitionsForTopic(topic);\nreturn Math.abs(key.hashCode()) % partitions.size();\n</code></pre><p>前面提到的Kafka默认分区策略实际上同时实现了两种策略：如果指定了Key，那么默认实现按消息键保序策略；如果没有指定Key，则使用轮询策略。</p><p>在你了解了Kafka默认的分区策略之后，我来给你讲一个真实的案例，希望能加强你对分区策略重要性的理解。</p><p>我曾经给一个国企进行过Kafka培训，当时碰到的一个问题就是如何实现消息的顺序问题。这家企业发送的Kafka的消息是有因果关系的，故处理因果关系也必须要保证有序性，否则先处理了“果”后处理“因”必然造成业务上的混乱。</p><p>当时那家企业的做法是给Kafka主题设置单分区，也就是1个分区。这样所有的消息都只在这一个分区内读写，因此保证了全局的顺序性。这样做虽然实现了因果关系的顺序性，但也丧失了Kafka多分区带来的高吞吐量和负载均衡的优势。</p><p>后来经过了解和调研，我发现这种具有因果关系的消息都有一定的特点，比如在消息体中都封装了固定的标志位，后来我就建议他们对此标志位设定专门的分区策略，保证同一标志位的所有消息都发送到同一分区，这样既可以保证分区内的消息顺序，也可以享受到多分区带来的性能红利。</p><p>这种基于个别字段的分区策略本质上就是按消息键保序的思想，其实更加合适的做法是把标志位数据提取出来统一放到Key中，这样更加符合Kafka的设计思想。经过改造之后，这个企业的消息处理吞吐量一下提升了40多倍，从这个案例你也可以看到自定制分区策略的效果可见一斑。</p><p><strong>其他分区策略</strong></p><p>上面这几种分区策略都是比较基础的策略，除此之外你还能想到哪些有实际用途的分区策略？其实还有一种比较常见的，即所谓的基于地理位置的分区策略。当然这种策略一般只针对那些大规模的Kafka集群，特别是跨城市、跨国家甚至是跨大洲的集群。</p><p>我就拿“极客时间”举个例子吧，假设极客时间的所有服务都部署在北京的一个机房（这里我假设它是自建机房，不考虑公有云方案。其实即使是公有云，实现逻辑也差不多），现在极客时间考虑在南方找个城市（比如广州）再创建一个机房；另外从两个机房中选取一部分机器共同组成一个大的Kafka集群。显然，这个集群中必然有一部分机器在北京，另外一部分机器在广州。</p><p>假设极客时间计划为每个新注册用户提供一份注册礼品，比如南方的用户注册极客时间可以免费得到一碗“甜豆腐脑”，而北方的新注册用户可以得到一碗“咸豆腐脑”。如果用Kafka来实现则很简单，只需要创建一个双分区的主题，然后再创建两个消费者程序分别处理南北方注册用户逻辑即可。</p><p>但问题是你需要把南北方注册用户的注册消息正确地发送到位于南北方的不同机房中，因为处理这些消息的消费者程序只可能在某一个机房中启动着。换句话说，送甜豆腐脑的消费者程序只在广州机房启动着，而送咸豆腐脑的程序只在北京的机房中，如果你向广州机房中的Broker发送北方注册用户的消息，那么这个用户将无法得到礼品！</p><p>此时我们就可以根据Broker所在的IP地址实现定制化的分区策略。比如下面这段代码：</p><pre><code>List&lt;PartitionInfo&gt; partitions = cluster.partitionsForTopic(topic);\nreturn partitions.stream().filter(p -&gt; isSouth(p.leader().host())).map(PartitionInfo::partition).findAny().get();\n</code></pre><p>我们可以从所有分区中找出那些Leader副本在南方的所有分区，然后随机挑选一个进行消息发送。</p><h2>小结</h2><p>今天我们讨论了Kafka生产者消息分区的机制以及常见的几种分区策略。切记分区是实现负载均衡以及高吞吐量的关键，故在生产者这一端就要仔细盘算合适的分区策略，避免造成消息数据的“倾斜”，使得某些分区成为性能瓶颈，这样极易引发下游数据消费的性能下降。</p><p><img src=\"https://static001.geekbang.org/resource/image/fb/13/fb38053d6f7f880ab12fef7ee0d64813.jpg?wh=2069*2560\" alt=\"\"></p><h2>开放讨论</h2><p>在你的生产环境中使用最多的是哪种消息分区策略？实际在使用过程中遇到过哪些“坑”？</p><p>欢迎写下你的思考和答案，我们一起讨论。如果你觉得有所收获，也欢迎把文章分享给你的朋友。</p>","comments":[{"had_liked":false,"id":106092,"user_name":"kevin","can_delete":false,"product_type":"c1","uid":1024140,"ip_address":"","ucode":"98C3CFB6E4EA15","user_header":"https://static001.geekbang.org/account/avatar/00/0f/a0/8c/ecc1aee5.jpg","comment_is_top":false,"comment_ctime":1561172278,"is_pvip":false,"discussion_count":9,"race_medal":0,"score":"1741022927158","product_id":100029201,"comment_content":"之前做车辆实时定位(汽车每10s上传一次报文)显示的时候，发现地图显示车辆会突然退回去，开始排查怀疑是后端处理的逻辑问题导致的，但是后台保证了一台车只被一个线程处理，理论上不会出现这种情况；于是猜测是不是程序接收到消息的时候时间序就已经乱了，查阅了kafka相关资料，发现kafka同一个topic是无法保证数据的顺序性的，但是同一个partition中的数据是有顺序的；根据这个查看了接入端的代码(也就是kafka的生产者)，发现是按照kafka的默认分区策略(topic有10个分区，3个副本)发送的；于是将此处发送策略改为按照key(车辆VIN码)进行分区，后面车辆的定位显示就正常了。","like_count":406,"discussions":[{"author":{"id":1590953,"avatar":"https://static001.geekbang.org/account/avatar/00/18/46/a9/70fa676f.jpg","nickname":"Luke","note":"","ucode":"2C8A1FAB8B6301","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":318209,"discussion_content":"这样按照key有序后，理论上还要设置参数max.in.flight.requests.per.connection=1，才能真正的保证有序吧，否则由于网络问题还是有可能后发的消息先到吧","likes_number":12,"is_delete":false,"is_hidden":false,"ctime":1603680550,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":4,"child_discussions":[{"author":{"id":1572612,"avatar":"https://static001.geekbang.org/account/avatar/00/17/ff/04/9293347e.jpg","nickname":"wind","note":"","ucode":"8F4FD19CF9BD7B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1590953,"avatar":"https://static001.geekbang.org/account/avatar/00/18/46/a9/70fa676f.jpg","nickname":"Luke","note":"","ucode":"2C8A1FAB8B6301","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":348778,"discussion_content":"仅仅设置 max.in.flight.requests 还不能保证消息不重复吧？kafka已经收到消息了，但是由于网络的原因，producer 没收到ack，producer重发消息，这个时候会出现消息重复？","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1612708916,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":318209,"ip_address":""},"score":348778,"extra":""},{"author":{"id":1736462,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/7f/0e/e3a8dbd9.jpg","nickname":"Liujun","note":"","ucode":"3DB1F3CA57B5B3","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1572612,"avatar":"https://static001.geekbang.org/account/avatar/00/17/ff/04/9293347e.jpg","nickname":"wind","note":"","ucode":"8F4FD19CF9BD7B","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":389456,"discussion_content":"那只眼睛看到人家说是保证消息不重复？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1629282187,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":348778,"ip_address":""},"score":389456,"extra":""},{"author":{"id":1736462,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/7f/0e/e3a8dbd9.jpg","nickname":"Liujun","note":"","ucode":"3DB1F3CA57B5B3","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1572612,"avatar":"https://static001.geekbang.org/account/avatar/00/17/ff/04/9293347e.jpg","nickname":"wind","note":"","ucode":"8F4FD19CF9BD7B","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":389457,"discussion_content":"没有任何一个MQ在保证消息不丢失的情况下做到消息不重复","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1629282269,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":348778,"ip_address":""},"score":389457,"extra":""}]},{"author":{"id":1503506,"avatar":"https://static001.geekbang.org/account/avatar/00/16/f1/12/7dac30d6.jpg","nickname":"你为啥那么牛","note":"","ucode":"1ABC604A54A8F6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":342858,"discussion_content":"报文不需要存储嘛，直接读出来显示在地图上？","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1610858567,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":2028957,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/f5/9d/104bb8ea.jpg","nickname":"Geek2014","note":"","ucode":"9EB356D8DF287E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1503506,"avatar":"https://static001.geekbang.org/account/avatar/00/16/f1/12/7dac30d6.jpg","nickname":"你为啥那么牛","note":"","ucode":"1ABC604A54A8F6","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":590471,"discussion_content":"实时定位","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1665798782,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":342858,"ip_address":"北京"},"score":590471,"extra":""}]},{"author":{"id":2550743,"avatar":"https://static001.geekbang.org/account/avatar/00/26/eb/d7/90391376.jpg","nickname":"if...else...","note":"","ucode":"D0565908C99695","race_medal":4,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":386017,"discussion_content":"秀","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1627383452,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1339409,"avatar":"https://static001.geekbang.org/account/avatar/00/14/70/11/42cf8f9d.jpg","nickname":"chenjia","note":"","ucode":"61983C29FF4987","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":380887,"discussion_content":"可以，很不错的案例","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1624778484,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":106054,"user_name":"邋遢的流浪剑客","can_delete":false,"product_type":"c1","uid":1260881,"ip_address":"","ucode":"32AF6F9070506D","user_header":"https://static001.geekbang.org/account/avatar/00/13/3d/51/9723276c.jpg","comment_is_top":false,"comment_ctime":1561157960,"is_pvip":false,"discussion_count":4,"race_medal":0,"score":"366633378120","product_id":100029201,"comment_content":"之前学习Kafka的时候确实有点忽略了生产者分区策略这一块内容，感谢老师的分享，特意去看了一下源码，Java客户端默认的生产者分区策略的实现类为org.apache.kafka.clients.producer.internals.DefaultPartitioner。默认策略为：如果指定了partition就直接发送到该分区；如果没有指定分区但是指定了key，就按照key的hash值选择分区；如果partition和key都没有指定就使用轮询策略。而且如果key不为null，那么计算得到的分区号会是所有分区中的任意一个；如果key为null并且有可用分区时，那么计算得到的分区号仅为可用分区中的任意一个","like_count":85,"discussions":[{"author":{"id":1296804,"avatar":"https://static001.geekbang.org/account/avatar/00/13/c9/a4/0710bbbd.jpg","nickname":"Geek_18858f","note":"","ucode":"391B5F20C2E860","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":363331,"discussion_content":"版本2.4以后，partition和key都没有指定的情况使用 Sticky Partitioner","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1617171191,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1236023,"avatar":"https://static001.geekbang.org/account/avatar/00/12/dc/37/b53e190f.jpg","nickname":"薛小O","note":"","ucode":"6F5A0CC03A909A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":358793,"discussion_content":"请教下，可用分区是啥意思","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1616051536,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1193755,"avatar":"https://static001.geekbang.org/account/avatar/00/12/37/1b/82310e20.jpg","nickname":"拿笔小星","note":"","ucode":"D3D8F6A959710D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1236023,"avatar":"https://static001.geekbang.org/account/avatar/00/12/dc/37/b53e190f.jpg","nickname":"薛小O","note":"","ucode":"6F5A0CC03A909A","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":530523,"discussion_content":"同问，源码里有一个可用分区的概念","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1637078619,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":358793,"ip_address":""},"score":530523,"extra":"{\"user_type\":1}"},{"author":{"id":1327933,"avatar":"https://static001.geekbang.org/account/avatar/00/14/43/3d/cd2b97bf.jpg","nickname":"Lyan","note":"","ucode":"3DC4B7B7E7227B","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1236023,"avatar":"https://static001.geekbang.org/account/avatar/00/12/dc/37/b53e190f.jpg","nickname":"薛小O","note":"","ucode":"6F5A0CC03A909A","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":553021,"discussion_content":"刚学kafka，我的理解是因为broker可能会挂掉，挂掉的broker上的分区不可用？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1645692910,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":358793,"ip_address":""},"score":553021,"extra":""}]}]},{"had_liked":false,"id":106259,"user_name":"Adol","can_delete":false,"product_type":"c1","uid":1169999,"ip_address":"","ucode":"333798FFBBDEDF","user_header":"https://static001.geekbang.org/account/avatar/00/11/da/4f/ddfc55fb.jpg","comment_is_top":false,"comment_ctime":1561222035,"is_pvip":false,"replies":[{"id":"38510","content":"不会的。消息重试只是简单地将消息重新发送到之前的分区","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1561339570,"ip_address":"","comment_id":106259,"utype":1}],"discussion_count":4,"race_medal":0,"score":"173359913875","product_id":100029201,"comment_content":"老师好，在消息重试的时候，分区策略会重新再计算一次吗？比如一开始选择到5号分区，但是5号分区有问题导致重试，重试的时候可以重试发送到别的分区上吗？","like_count":40,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":455019,"discussion_content":"不会的。消息重试只是简单地将消息重新发送到之前的分区","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1561339570,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1696125,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKMwnuGv3ZYsU2jVdQy9icXWJIbUrUYOazjn6cV3Rtq8knKdzMgWk1o9JaRsIzP6GrdicXEhGeCrSSA/132","nickname":"宠坏你","note":"","ucode":"501ADD1C0E7382","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":50870,"discussion_content":"那重试的消息还能保证顺序吗","likes_number":4,"is_delete":false,"is_hidden":false,"ctime":1573781162,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2739957,"avatar":"","nickname":"Geek_39299b","note":"","ucode":"908C2FC4DECD33","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":389365,"discussion_content":"”消息重试只是简单地将消息重新发送到之前的分区“ 那这不妥啊","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1629254458,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1736462,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/7f/0e/e3a8dbd9.jpg","nickname":"Liujun","note":"","ucode":"3DB1F3CA57B5B3","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2739957,"avatar":"","nickname":"Geek_39299b","note":"","ucode":"908C2FC4DECD33","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":559337,"discussion_content":"保证绝对有序，需要配合生产者的参数 max.in.flight.requests.per.connection = 1","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1648712963,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":389365,"ip_address":""},"score":559337,"extra":""}]}]},{"had_liked":false,"id":106180,"user_name":"QQ怪","can_delete":false,"product_type":"c1","uid":1211223,"ip_address":"","ucode":"1A39B8433D9208","user_header":"https://static001.geekbang.org/account/avatar/00/12/7b/57/a9b04544.jpg","comment_is_top":false,"comment_ctime":1561196098,"is_pvip":false,"replies":[{"id":"38504","content":"我们公司之前也有一个业务是单分区，要保证全局顺序。后来发现其实使用key+多分区也可以实现。反正保证同一批因果依赖的消息分到一个分区就可以","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1561339315,"ip_address":"","comment_id":106180,"utype":1}],"discussion_count":4,"race_medal":0,"score":"169064920642","product_id":100029201,"comment_content":"我们公司一直使用单个分区保持消息顺序性，看了老师分享的东西收益很多啊，准备回去好好分析改造下","like_count":39,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":454991,"discussion_content":"我们公司之前也有一个业务是单分区，要保证全局顺序。后来发现其实使用key+多分区也可以实现。反正保证同一批因果依赖的消息分到一个分区就可以","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1561339315,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1564943,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJUJKviaecwxpAZCAnHWap86kXUichv5JwUoAtrUNy4ugC0kMMmssFDdyayKFgAoA9Z62sqMZaibbvUg/132","nickname":"Geek_edc612","note":"","ucode":"3E01DE3CE4BF3E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":251,"discussion_content":"一直没太懂，这个保序策略有啥用，老师的这句话点醒了我：\n==================================\n反正保证同一批因果依赖的消息分到一个分区就可以\n==================================\n感谢=，=\n","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1561361404,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1134861,"avatar":"https://static001.geekbang.org/account/avatar/00/11/51/0d/fc1652fe.jpg","nickname":"James","note":"","ucode":"48B0F2A334D1C1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":264193,"discussion_content":"key一致,则会发到同一分区,获取数据肯定是有顺序的.","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1589293491,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2739957,"avatar":"","nickname":"Geek_39299b","note":"","ucode":"908C2FC4DECD33","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":389364,"discussion_content":"是一个 提供服务的分区吧，因为之前还提起过 分区之间的数据复制机制；还得保证数据一致性吧；","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1629254317,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":134992,"user_name":"jc9090kkk","can_delete":false,"product_type":"c1","uid":1338831,"ip_address":"","ucode":"6C992D07A2E78F","user_header":"https://static001.geekbang.org/account/avatar/00/14/6d/cf/ec335526.jpg","comment_is_top":false,"comment_ctime":1568970551,"is_pvip":false,"replies":[{"id":"51955","content":"嗯嗯，是有这样的问题。所以其实在生产环境中用key做逻辑区分并不太常见。如果不同key速率相差很大，可以考虑使用不同的topic","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1569201281,"ip_address":"","comment_id":134992,"utype":1}],"discussion_count":2,"race_medal":0,"score":"147597858615","product_id":100029201,"comment_content":"感谢老师的分享，对于按消息键保序策略有一个疑问，假如我现在的业务数据定义了三个key，但是这三个key对应的消息生产速率不一致，按照老师上面的示意图展示的是，特定的key只会存储在特定的一个分区中，那岂不是牺牲了拓展性么，如果其中一个key的生产速率非常大，而另外2个key没那么大，却会一直占用分区，不会造成分区的空间浪费吗？还是我理解的有问题吗？希望老师解答一下，谢谢","like_count":34,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":467991,"discussion_content":"嗯嗯，是有这样的问题。所以其实在生产环境中用key做逻辑区分并不太常见。如果不同key速率相差很大，可以考虑使用不同的topic","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1569201281,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1290469,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Um0fKCDsGBRStZBF1M4HLPSq8jiancnNoYKiaYyYldFX0NObkyUFmnVKTgjm6Y7wUiaCQ3Vm9Ic213l65kJfUzq4w/132","nickname":"Geek_c92584","note":"","ucode":"D9DA02DA718977","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":343785,"discussion_content":"将不同速率的key分到另外的topic似乎解决不了问题，只是换了不同命名空间下的分区承载数据，消息的有序性得用单分区来保障，且从全局看，这个分区相对其他速率低的topic 分区而言，还是消耗存储更快的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1611157921,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":112585,"user_name":"hgf","can_delete":false,"product_type":"c1","uid":1085297,"ip_address":"","ucode":"A9649ECFDBD9E8","user_header":"https://static001.geekbang.org/account/avatar/00/10/8f/71/29fb7bc2.jpg","comment_is_top":false,"comment_ctime":1562766235,"is_pvip":false,"replies":[{"id":"40977","content":"可以选择。kafka-topics支持在创建topic时指定partition放在那些broker上","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1562804107,"ip_address":"","comment_id":112585,"utype":1}],"discussion_count":1,"race_medal":0,"score":"113231915931","product_id":100029201,"comment_content":"老师您好，跨地区的kafka集群，创建的两个partition都在一个地方怎么办呢？创建topic时可以选择在哪些节点上创建partition吗？默认是随机选择节点创建partition吗？","like_count":26,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":457805,"discussion_content":"可以选择。kafka-topics支持在创建topic时指定partition放在那些broker上","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1562804107,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":118335,"user_name":"行则将至","can_delete":false,"product_type":"c1","uid":1542987,"ip_address":"","ucode":"DB972F2DF059C4","user_header":"https://static001.geekbang.org/account/avatar/00/17/8b/4b/fa52d222.jpg","comment_is_top":false,"comment_ctime":1564324660,"is_pvip":false,"replies":[{"id":"43349","content":"嗯嗯，可能我没说清楚。如你说所rebalance是非常常见，如果再要求消费时消息有明确前后关系，这个就很复杂了。常见的做法是单分区来保证前后关系，但是这可能不符合很多使用场景。<br>我给出了另一个建议，就是设置partition.assignment.strategy=Sticky，这是因为Sticky算法会最大化保证消费分区方案的不变更。假设你的因果消息都有相同的key，那么结合Sticky算法有可能保证即使出现rebalance，要消费的分区依然有原来的consumer负责。","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1564361653,"ip_address":"","comment_id":118335,"utype":1}],"discussion_count":7,"race_medal":1,"score":"87463670580","product_id":100029201,"comment_content":"老师，我见到有网友提问，说是消费者出现reblance的情况时。key-ordering策略可能会导致消费了“因“，reblance之后，无法消费 “果“。您给出的建议是，显示设置consumer端参数partition.assignment.strategy。这个设置。是不是只要使用了key保序策略，就一定要设置上呢？消费过程中出现reblance是很正常的啊","like_count":20,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":460361,"discussion_content":"嗯嗯，可能我没说清楚。如你说所rebalance是非常常见，如果再要求消费时消息有明确前后关系，这个就很复杂了。常见的做法是单分区来保证前后关系，但是这可能不符合很多使用场景。\n我给出了另一个建议，就是设置partition.assignment.strategy=Sticky，这是因为Sticky算法会最大化保证消费分区方案的不变更。假设你的因果消息都有相同的key，那么结合Sticky算法有可能保证即使出现rebalance，要消费的分区依然有原来的consumer负责。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1564361653,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1132315,"avatar":"https://static001.geekbang.org/account/avatar/00/11/47/1b/64262861.jpg","nickname":"胡小禾","note":"","ucode":"1C23B7492C0C9E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":150046,"discussion_content":"假如关注消息消费顺序，且使用了key，一般不推荐扩容分区数。","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1579787363,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1542987,"avatar":"https://static001.geekbang.org/account/avatar/00/17/8b/4b/fa52d222.jpg","nickname":"行则将至","note":"","ucode":"DB972F2DF059C4","race_medal":1,"user_type":1,"is_pvip":false},"reply_author":{"id":1132315,"avatar":"https://static001.geekbang.org/account/avatar/00/11/47/1b/64262861.jpg","nickname":"胡小禾","note":"","ucode":"1C23B7492C0C9E","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":199910,"discussion_content":"正解。如果用了key-ordering策略。不能扩容\n","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1583637167,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":150046,"ip_address":""},"score":199910,"extra":""},{"author":{"id":1361746,"avatar":"https://static001.geekbang.org/account/avatar/00/14/c7/52/c5adf218.jpg","nickname":"喜欢地球的阿培同学","note":"","ucode":"5F97037585F857","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1542987,"avatar":"https://static001.geekbang.org/account/avatar/00/17/8b/4b/fa52d222.jpg","nickname":"行则将至","note":"","ucode":"DB972F2DF059C4","race_medal":1,"user_type":1,"is_pvip":false},"discussion":{"id":266555,"discussion_content":"可以扩容，但是需要等待partition中所有数据都消费完，然后扩容即可","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1589531603,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":199910,"ip_address":""},"score":266555,"extra":""}]},{"author":{"id":1477612,"avatar":"https://static001.geekbang.org/account/avatar/00/16/8b/ec/dc03f5ad.jpg","nickname":"张天屹","note":"","ucode":"8BD6BD6DCF0F4F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":58128,"discussion_content":"比如A1/B1/C1消息发送到A/B/C分区，现在新加了一个分区D（以及对应的一个消费者），那么这个时候A2消息发送到了新建分区D，怎么保证A2在A1之后消费呢？尤其是存在消息堆积的情况下，A2先于A1消费是大概率事件。","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1574653467,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1008348,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/62/dc/8876c73b.jpg","nickname":"moooofly","note":"","ucode":"4A20795C281B6F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":194525,"discussion_content":"“结合Sticky算法有可能保证即使出现rebalance，要消费的分区依然有原来的consumer负责”-- “有可能”的意思是，也有可能保证不了，对么","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1583228943,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1542987,"avatar":"https://static001.geekbang.org/account/avatar/00/17/8b/4b/fa52d222.jpg","nickname":"行则将至","note":"","ucode":"DB972F2DF059C4","race_medal":1,"user_type":1,"is_pvip":false},"reply_author":{"id":1008348,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/62/dc/8876c73b.jpg","nickname":"moooofly","note":"","ucode":"4A20795C281B6F","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":199912,"discussion_content":"对。我就是想说这个。既然是有可能。那就是不牢靠。那就别扩容了呗","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1583637218,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":194525,"ip_address":""},"score":199912,"extra":""}]}]},{"had_liked":false,"id":106069,"user_name":"WL","can_delete":false,"product_type":"c1","uid":1173771,"ip_address":"","ucode":"6277DCD776B87E","user_header":"https://static001.geekbang.org/account/avatar/00/11/e9/0b/1171ac71.jpg","comment_is_top":false,"comment_ctime":1561164466,"is_pvip":false,"replies":[{"id":"38476","content":"之前也曾经回答过，不一定客观，姑且听之。在我看来RocketMQ与Kafka的主要区别 ：1. Kafka吞吐量大，多是面向大数据场景。RocketMQ吞吐量也很强， 不过它号称是金融业务级的消息中间件，也就是说可以用于实际的业务系统；2. RocketMQ毕竟是阿里出品，在国内技术支持力度要比Kafka强；3. Kafka现在主要发力Streaming，RocketMQ在流处理这块表现如何我不太清楚，至少streaming不是它现阶段的主要卖点。<br><br>其他方面这两者确实都差不多~~","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1561337683,"ip_address":"","comment_id":106069,"utype":1}],"discussion_count":1,"race_medal":0,"score":"78870575794","product_id":100029201,"comment_content":"老师能不能有空能不能讲讲kafka和rocketMQ的对比, 我用下来感觉整体挺像的但是具体使用场景和性能优劣方面还是有点不知道该使用选择, 谢谢.","like_count":18,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":454935,"discussion_content":"之前也曾经回答过，不一定客观，姑且听之。在我看来RocketMQ与Kafka的主要区别 ：1. Kafka吞吐量大，多是面向大数据场景。RocketMQ吞吐量也很强， 不过它号称是金融业务级的消息中间件，也就是说可以用于实际的业务系统；2. RocketMQ毕竟是阿里出品，在国内技术支持力度要比Kafka强；3. Kafka现在主要发力Streaming，RocketMQ在流处理这块表现如何我不太清楚，至少streaming不是它现阶段的主要卖点。\n\n其他方面这两者确实都差不多~~","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1561337683,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":156539,"user_name":"嘉嘉☕","can_delete":false,"product_type":"c1","uid":1059771,"ip_address":"","ucode":"632A5CC4B53BB1","user_header":"https://static001.geekbang.org/account/avatar/00/10/2b/bb/5cf70df8.jpg","comment_is_top":false,"comment_ctime":1574907202,"is_pvip":false,"replies":[{"id":"60181","content":"只会重试发送到相同的分区","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1574988365,"ip_address":"","comment_id":156539,"utype":1}],"discussion_count":1,"race_medal":0,"score":"65999416642","product_id":100029201,"comment_content":"老师好, 关于生产消息, 我有个问题请教一下老师.<br>生产者生产消息, 采用轮询策略, <br>假如轮询到分区A了, 分区A的leader所在的broker有些异常(比如不能及时给出响应), <br>此时, kafka的重试机制是怎样的 ?<br>谢谢 ","like_count":15,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":476146,"discussion_content":"只会重试发送到相同的分区","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574988365,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":106221,"user_name":"我已经设置了昵称","can_delete":false,"product_type":"c1","uid":1364034,"ip_address":"","ucode":"ED672C5EBDBDC4","user_header":"https://static001.geekbang.org/account/avatar/00/14/d0/42/6fd01fb9.jpg","comment_is_top":false,"comment_ctime":1561210710,"is_pvip":false,"replies":[{"id":"38508","content":"使用这个方法：consumer.assign()直接消息指定分区","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1561339529,"ip_address":"","comment_id":106221,"utype":1}],"discussion_count":1,"race_medal":0,"score":"53100818262","product_id":100029201,"comment_content":"广州机房怎么消费广州partition的数据，consumer如何指定消费的partition。这个能讲下吗","like_count":12,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":455006,"discussion_content":"使用这个方法：consumer.assign()直接消息指定分区","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1561339529,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":129294,"user_name":"Geek_b809ff","can_delete":false,"product_type":"c1","uid":1288329,"ip_address":"","ucode":"F3F17E99F3AA0B","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eoPY23R9RRSfBeTJUlyc612VlodjAaWWBNiay9tPydkrd6b9NA8GNibdibnFibTsx94ItHE4jvQwprNzA/132","comment_is_top":false,"comment_ctime":1567081496,"is_pvip":false,"replies":[{"id":"48160","content":"1. 根据默认分区策略，同一个key的消息肯定会发送到同一个分区<br>2. 首先，你的消息会被发送到某个分区的leader副本上。这个分区的leader副本只能存在于3个broker中的一个，但是如果test的副本数是3，那么一条消息也会被备份到其他两个broker上。只是只有leader副本对外提供服务，因此没有顺序乱的情况出现。<br>3. 如果想保证顺序，指定消息key即可，这样能保证分送到同一个分区上。是否发到同一个broker上无关紧要","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1567125449,"ip_address":"","comment_id":129294,"utype":1}],"discussion_count":2,"race_medal":0,"score":"44516754456","product_id":100029201,"comment_content":"老师，想请教几个问题：<br>1、key是不是必须得完全一样，才能保证会发送到同一个分区？<br>2、如果kafka搭了集群，有三个broker，分别是broker1、broker2、broker3。这时候我对名称为test的topic发送消息，key设置为A，消息会随机发送到三个broker上去吗？那这样的话顺序不就乱了吗？如果我想保证所有的消息都顺序，是不是需要指定发送到其中一个broker？","like_count":10,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":465386,"discussion_content":"1. 根据默认分区策略，同一个key的消息肯定会发送到同一个分区\n2. 首先，你的消息会被发送到某个分区的leader副本上。这个分区的leader副本只能存在于3个broker中的一个，但是如果test的副本数是3，那么一条消息也会被备份到其他两个broker上。只是只有leader副本对外提供服务，因此没有顺序乱的情况出现。\n3. 如果想保证顺序，指定消息key即可，这样能保证分送到同一个分区上。是否发到同一个broker上无关紧要","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1567125449,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2739957,"avatar":"","nickname":"Geek_39299b","note":"","ucode":"908C2FC4DECD33","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":389366,"discussion_content":"原来如此","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1629254637,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":111202,"user_name":"海贼王","can_delete":false,"product_type":"c1","uid":1396015,"ip_address":"","ucode":"EAF7CE34AF05DC","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/T2WIS5gJVKoeQHPohZ0SkCZRjChjyqRJ7v0Urw2UTuWrUX3mBb3Om0PGGRFosb6Avibyab4661jCqrTsFrnPC6A/132","comment_is_top":false,"comment_ctime":1562509782,"is_pvip":false,"replies":[{"id":"40498","content":"1. 防止乱序可以通过设置max.in.flight.requests.per.connection=1来保证<br>2. 两个生产者生产的消息无法保证顺序，因为它们本身就没有前后之分，它们是并发的关系。","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1562546069,"ip_address":"","comment_id":111202,"utype":1}],"discussion_count":6,"race_medal":0,"score":"44512182742","product_id":100029201,"comment_content":"感觉这篇文章没有回答怎么保证分区里数据和生产者消息顺序是一致这个问题。<br>这里有两个例子：1是，一个生产者，发两次消息，但是网络原因，消息到达的顺序和消息发送的顺序不一致，2是两个生产者，这时候消息如何确定消息的顺序呢。<br><br>场景1在做CDC，同步数据库数据到异构数据系统很常见<br>场景2对某些业务很重要<br><br>对于第一种，我的一个思路是保证只有一个生产者，且设置生产者的ack为all级别<br>对于场景2就不知道kafka能怎么做了。<br><br>希望老师能解惑","like_count":11,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":457282,"discussion_content":"1. 防止乱序可以通过设置max.in.flight.requests.per.connection=1来保证\n2. 两个生产者生产的消息无法保证顺序，因为它们本身就没有前后之分，它们是并发的关系。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1562546069,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2739957,"avatar":"","nickname":"Geek_39299b","note":"","ucode":"908C2FC4DECD33","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":389368,"discussion_content":"不是 一个生产者 并发发送消息 跟 两个生产者并发发送消息 有区别吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1629254852,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2387358,"avatar":"https://static001.geekbang.org/account/avatar/00/24/6d/9e/6a82a5ea.jpg","nickname":"good boby","note":"","ucode":"1471E2E499412C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":369656,"discussion_content":"2个生产者很奇怪，本身Kafka的性能瓶颈就在分区接受消息速度所以采用多分区莱负载均衡，消费组提高消息处理速度","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1619104732,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2387358,"avatar":"https://static001.geekbang.org/account/avatar/00/24/6d/9e/6a82a5ea.jpg","nickname":"good boby","note":"","ucode":"1471E2E499412C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":369654,"discussion_content":"2个生产者很奇怪，本身Kafka的性能瓶颈就在分区接受消息速度所以采用多分区莱负载均衡，消费组提高消息处理速度","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1619104668,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1290469,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Um0fKCDsGBRStZBF1M4HLPSq8jiancnNoYKiaYyYldFX0NObkyUFmnVKTgjm6Y7wUiaCQ3Vm9Ic213l65kJfUzq4w/132","nickname":"Geek_c92584","note":"","ucode":"D9DA02DA718977","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":343802,"discussion_content":"为解决第二个问题，在两个生产者之间加入协调，在前一个生产者发送并得到确认后，再通知第二个生产者；周而复始","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1611187542,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1361746,"avatar":"https://static001.geekbang.org/account/avatar/00/14/c7/52/c5adf218.jpg","nickname":"喜欢地球的阿培同学","note":"","ucode":"5F97037585F857","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":266559,"discussion_content":"生产者第一次发送消息成功，才发送第二次消息，这样就可以保证两次消息的顺序","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1589532145,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":195008,"user_name":"随心而至","can_delete":false,"product_type":"c1","uid":1097836,"ip_address":"","ucode":"31866865255101","user_header":"https://static001.geekbang.org/account/avatar/00/10/c0/6c/29be1864.jpg","comment_is_top":false,"comment_ctime":1585127495,"is_pvip":false,"replies":[{"id":"74245","content":"底层的那套东西没有那么容易过时的：）","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1585183986,"ip_address":"","comment_id":195008,"utype":1}],"discussion_count":1,"race_medal":0,"score":"40239833159","product_id":100029201,"comment_content":"看了《数据库系统概念》，感觉基本上逃不开里面讲的，只是不同框架有自己的叫法罢了","like_count":9,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":488947,"discussion_content":"底层的那套东西没有那么容易过时的：）","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585183986,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":109274,"user_name":"Geek_817ea4","can_delete":false,"product_type":"c1","uid":1579066,"ip_address":"","ucode":"D1194D33C4DC11","user_header":"https://static001.geekbang.org/account/avatar/00/18/18/3a/b407889c.jpg","comment_is_top":false,"comment_ctime":1561991738,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"40216697402","product_id":100029201,"comment_content":"总结：首先判断ProducerRecord中的partition字段是否有值，即是否在创建消息记录的时候直接指定了分区；如果指定了分区，则直接将该消息发送到指定的分区，否则调用分区器的partition方法，执行分区策略；如果用户配置了自己写的分区器，且在生产者配置是指定了，则使用用户指定的分区器，否则使用默认的分区器，即DefaultPartitioner；如果指定了key，则使用该key进行hash操作，并转为正数，然后对topic对应的分区数量进行取模操作并返回一个分区；如果没有指定key，则通过先产生随机数，之后在该数上自增的方式产生一个数，并转为正数之后进行取余操作。","like_count":9,"discussions":[{"author":{"id":1134861,"avatar":"https://static001.geekbang.org/account/avatar/00/11/51/0d/fc1652fe.jpg","nickname":"James","note":"","ucode":"48B0F2A334D1C1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":264191,"discussion_content":"可能版本不同吧.没有指定key的时候,是查询是否有集群可用分区数,是随机数%集群可用分区数","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1589293436,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1258380,"avatar":"https://static001.geekbang.org/account/avatar/00/13/33/8c/23eef8d7.jpg","nickname":"feifei","note":"","ucode":"BFA3BE8D8773A7","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":35036,"discussion_content":"我正在想，这个key在哪里指定呢，你这里姐给说了，谢谢谢谢","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571232600,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":112586,"user_name":"hgf","can_delete":false,"product_type":"c1","uid":1085297,"ip_address":"","ucode":"A9649ECFDBD9E8","user_header":"https://static001.geekbang.org/account/avatar/00/10/8f/71/29fb7bc2.jpg","comment_is_top":false,"comment_ctime":1562766488,"is_pvip":false,"replies":[{"id":"40976","content":"可以试试sticky assignor，即设置consumer端参数partition.assignment.strategy=class org.apache.kafka.clients.consumer.StickyAssignor","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1562804032,"ip_address":"","comment_id":112586,"utype":1}],"discussion_count":2,"race_medal":0,"score":"35922504856","product_id":100029201,"comment_content":"如果消费过程中出现rebalance，那么可能造成因果关系之消费了因后rebalance，然后不处理之前的partition了，后面的消费者也无法处理该partition的“果”，请问，您对这种情况怎么处理的呢？","like_count":8,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":457806,"discussion_content":"可以试试sticky assignor，即设置consumer端参数partition.assignment.strategy=class org.apache.kafka.clients.consumer.StickyAssignor","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1562804032,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1542987,"avatar":"https://static001.geekbang.org/account/avatar/00/17/8b/4b/fa52d222.jpg","nickname":"行则将至","note":"","ucode":"DB972F2DF059C4","race_medal":1,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":3224,"discussion_content":"老师，这个sticky assignor配置。是不是只要使用了key保序策略，就一定要设置上呢？消费过程中出现reblance也很正常啊","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1564318695,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":144049,"user_name":"从零开始","can_delete":false,"product_type":"c1","uid":1566357,"ip_address":"","ucode":"E39A849598FDF2","user_header":"https://static001.geekbang.org/account/avatar/00/17/e6/95/3ed2fe9c.jpg","comment_is_top":false,"comment_ctime":1571832580,"is_pvip":false,"replies":[{"id":"55619","content":"Producer发送消息的时候可以直接指定key，比如producer.send(new ProducerRecord(&quot;my-topic&quot;, &quot;key&quot;, &quot;value&quot;));","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1571877696,"ip_address":"","comment_id":144049,"utype":1}],"discussion_count":1,"race_medal":0,"score":"27341636356","product_id":100029201,"comment_content":"老师，key在哪指定，怎么指定啊","like_count":6,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":471795,"discussion_content":"Producer发送消息的时候可以直接指定key，比如producer.send(new ProducerRecord(&amp;quot;my-topic&amp;quot;, &amp;quot;key&amp;quot;, &amp;quot;value&amp;quot;));","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571877696,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":139947,"user_name":"余生尽是归途","can_delete":false,"product_type":"c1","uid":1502832,"ip_address":"","ucode":"F55B7F45079636","user_header":"https://static001.geekbang.org/account/avatar/00/16/ee/70/0d2ff8a9.jpg","comment_is_top":false,"comment_ctime":1570771762,"is_pvip":false,"replies":[{"id":"54183","content":"我觉得你现在的策略本身已经是一个很好的策略了。另外你的batch size是多大呢？？","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1570840914,"ip_address":"","comment_id":139947,"utype":1}],"discussion_count":2,"race_medal":0,"score":"27340575538","product_id":100029201,"comment_content":"胡老师，我们这边的场景是，解析上游推送的数据文件（xml格式文件达成的GZ数据压缩包，每个30M-、100M不等），我们采用的方式是，将数据包的路径作为消息发送至kafka（50个分区），然后sparkstreaming并行消费（手动提交的方式消费，数据包解析完成才视为消息消费成功）50个分区的消息（spark通过路径信息去解压解析数据包）。由于数据包大小差异较大，如果按照轮询的方式，在运气不好的情况下，某个分许存放了大量较大数据包，那么这个分区就会成为这一批次数据的瓶颈，后续的处理流程智能等待该分区消费完后才能处理。所以我采用了每次将生产者发送的消息发送至lag最小的分区，在一定程度上避免这个问题。但是这样每次投递消息之前我需要首先查询所有分区的lag值，然后选择lag值较小的分区进行投递，还好，我们的数据包个数不算使特别大（一个小时就几万个，并且消费逻辑重，主要时间消耗为数据消费时间）。这种情况下，分区的策略有没有什么更好的选择呢","like_count":6,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":470186,"discussion_content":"我觉得你现在的策略本身已经是一个很好的策略了。另外你的batch size是多大呢？？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1570840914,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1054827,"avatar":"https://static001.geekbang.org/account/avatar/00/10/18/6b/a1448af1.jpg","nickname":"贝影","note":"","ucode":"19545C8DCBF8A2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":543897,"discussion_content":"个人感觉可以起另一个线程来定时算lag，这样可以减少获取lag的次数，如果还想再优化可以设定一些算法，在取完lag后算好在下次定时取lag之前分配给哪几区。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1641349384,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":106628,"user_name":"EricJones","can_delete":false,"product_type":"c1","uid":1207580,"ip_address":"","ucode":"0A80B609400D6B","user_header":"https://static001.geekbang.org/account/avatar/00/12/6d/1c/d9746372.jpg","comment_is_top":false,"comment_ctime":1561359137,"is_pvip":false,"replies":[{"id":"38662","content":"通常1台broker上有多个分区依然能提升TPS，毕竟单个分区消耗不掉大部分的系统资源。当然一切以实际测试结果为准。","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1561422963,"ip_address":"","comment_id":106628,"utype":1}],"discussion_count":3,"race_medal":0,"score":"27331162913","product_id":100029201,"comment_content":"分区实现负载均衡提高吞吐量，一台机器多个分区也会有负载均衡效果？也会提高吞吐量？如果会那我一台机器一个kafka 分多少分区合适？我看有人一台机器一个kafka也分了五六个分区。这样做有什么好处？","like_count":6,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":455159,"discussion_content":"通常1台broker上有多个分区依然能提升TPS，毕竟单个分区消耗不掉大部分的系统资源。当然一切以实际测试结果为准。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1561422963,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1547667,"avatar":"https://static001.geekbang.org/account/avatar/00/17/9d/93/4159edaa.jpg","nickname":"朴素柠檬c","note":"","ucode":"2D4CBB70D801B1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":328246,"discussion_content":"实际测试结果为准 太到位了，没有实际测试结果没人能说明白。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1606112612,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1759325,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/d8/5d/07dfb3b5.jpg","nickname":"杯莫停","note":"","ucode":"4FA1D5CBBEF702","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":296006,"discussion_content":"同一块磁盘有多个分区是怎么做到的呢？划分均等的几份空间吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1596425061,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":110911,"user_name":"非想","can_delete":false,"product_type":"c1","uid":1140949,"ip_address":"","ucode":"D8CA6ADC20D4AA","user_header":"https://static001.geekbang.org/account/avatar/00/11/68/d5/567bf8ad.jpg","comment_is_top":false,"comment_ctime":1562389073,"is_pvip":false,"replies":[{"id":"40509","content":"0.11开始支持事务了。嗯，并没有所谓的事务消息，不过倒是有事务标记消息（transaciton marker）。事务Consumer靠它来判断消息的可见性——即什么消息属于已提交事务的消息，事务consumer能够读取。","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1562546838,"ip_address":"","comment_id":110911,"utype":1}],"discussion_count":1,"race_medal":0,"score":"23037225553","product_id":100029201,"comment_content":"老师您好，Kafka支持事务消息吗？","like_count":5,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":457122,"discussion_content":"0.11开始支持事务了。嗯，并没有所谓的事务消息，不过倒是有事务标记消息（transaciton marker）。事务Consumer靠它来判断消息的可见性——即什么消息属于已提交事务的消息，事务consumer能够读取。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1562546838,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":106623,"user_name":"风中花","can_delete":false,"product_type":"c1","uid":1085237,"ip_address":"","ucode":"067E0A1E116844","user_header":"https://static001.geekbang.org/account/avatar/00/10/8f/35/f1839bb2.jpg","comment_is_top":false,"comment_ctime":1561357943,"is_pvip":false,"replies":[{"id":"38661","content":"同意。其实任何分区策略都要考虑分区数变更的情况，防止造成数据倾斜。 ","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1561422898,"ip_address":"","comment_id":106623,"utype":1}],"discussion_count":3,"race_medal":0,"score":"23036194423","product_id":100029201,"comment_content":"打卡继续。老师我有个小白问题  按消息键保序策略 实现方法 return Math.abs(key.hashCode()) % partitions.size(); 如果key 不变，增加分区数(partitions.size();)。那么这个算法，是不是就变成原来key1的消息在1区，增加分区后会不会变成ke1的消息放到其他区呢？ 我的理解是不是不对啊？<br><br>","like_count":5,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":455157,"discussion_content":"同意。其实任何分区策略都要考虑分区数变更的情况，防止造成数据倾斜。 ","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1561422898,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2739957,"avatar":"","nickname":"Geek_39299b","note":"","ucode":"908C2FC4DECD33","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":389369,"discussion_content":"可以采用一致性hash","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1629254982,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1085237,"avatar":"https://static001.geekbang.org/account/avatar/00/10/8f/35/f1839bb2.jpg","nickname":"风中花","note":"","ucode":"067E0A1E116844","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":283,"discussion_content":"谢谢老师的回复！ 老师如果这个真是一个问题，有解决的思路吗？ 我目前想到的是尽量避免增加分区，但是不怕一万就万一！ 哈哈","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1561426449,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":106433,"user_name":"October","can_delete":false,"product_type":"c1","uid":1137879,"ip_address":"","ucode":"CEDA78F4A5F8B1","user_header":"https://static001.geekbang.org/account/avatar/00/11/5c/d7/e4673fde.jpg","comment_is_top":false,"comment_ctime":1561300115,"is_pvip":false,"replies":[{"id":"38517","content":"分区没有leader的时候就是unavailable了。某些操作会导致瞬间没有leader，比如分区reassign、换leader等","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1561340424,"ip_address":"","comment_id":106433,"utype":1}],"discussion_count":1,"race_medal":0,"score":"23036136595","product_id":100029201,"comment_content":"老师，在看kafka-client生产者默认分区源码时，看到了cluster.partitionsForTopic和cluster.availablePartitionsForTopic，请问什么时候分区是available，什么时候是不unavailable的？","like_count":5,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":455086,"discussion_content":"分区没有leader的时候就是unavailable了。某些操作会导致瞬间没有leader，比如分区reassign、换leader等","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1561340424,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":106289,"user_name":"莫问流年","can_delete":false,"product_type":"c1","uid":1249663,"ip_address":"","ucode":"23140E031AED4B","user_header":"https://static001.geekbang.org/account/avatar/00/13/11/7f/80d56c1c.jpg","comment_is_top":false,"comment_ctime":1561256595,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"23036093075","product_id":100029201,"comment_content":"我觉得最常用的是按消息键保序策论和轮询策略，分别对不同类型的top。前者可以保证消息处理顺序不会打乱，比如会员权益发放与变更，必须先发放才能变更。后者保证尽量利用负载均衡的性能优势，主要针对消息顺序改变不影响处理结果的场合，比如新人任务发券先给谁发都一样，但是如果只有完成任务的前n个名额才有券拿，就需要采用按消息键保存策略保证发放顺序。","like_count":5},{"had_liked":false,"id":176625,"user_name":"狼暴暴","can_delete":false,"product_type":"c1","uid":1401191,"ip_address":"","ucode":"B7B4DE5C532A76","user_header":"https://static001.geekbang.org/account/avatar/00/15/61/67/c4ceb86f.jpg","comment_is_top":false,"comment_ctime":1581123776,"is_pvip":false,"replies":[{"id":"68702","content":"这两个Kafka都可以分别保证，主要看log.message.timestamp.type的配置","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1581295890,"ip_address":"","comment_id":176625,"utype":1}],"discussion_count":1,"race_medal":0,"score":"18760992960","product_id":100029201,"comment_content":"老师，分区里消息有序是指可以根据生产者生成消息数据的时间保证有序还是根据发送到分区的时间保证有序？","like_count":4,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":483164,"discussion_content":"这两个Kafka都可以分别保证，主要看log.message.timestamp.type的配置","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1581295890,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":107865,"user_name":"没啥好看的","can_delete":false,"product_type":"c1","uid":1504680,"ip_address":"","ucode":"04670952C1F603","user_header":"https://static001.geekbang.org/account/avatar/00/16/f5/a8/9b3fa9af.jpg","comment_is_top":false,"comment_ctime":1561625297,"is_pvip":false,"replies":[{"id":"39127","content":"不太合适。超多分区导致磁盘性能也会下降。key有2w个，为什么分区也要有2w个呢？","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1561680633,"ip_address":"","comment_id":107865,"utype":1}],"discussion_count":6,"race_medal":0,"score":"18741494481","product_id":100029201,"comment_content":"如果我用key保序这种方式，key有2w个，搞2w个分区，这么做合适吗","like_count":4,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":455715,"discussion_content":"不太合适。超多分区导致磁盘性能也会下降。key有2w个，为什么分区也要有2w个呢？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1561680633,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1050508,"avatar":"https://static001.geekbang.org/account/avatar/00/10/07/8c/0d886dcc.jpg","nickname":"蚂蚁内推+v","note":"","ucode":"24B10AEE54B3FD","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":542,"discussion_content":"key有2W个，key的哈希值对分区取余就好了，分区是几个不是key决定的。","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1561685043,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1053498,"avatar":"https://static001.geekbang.org/account/avatar/00/10/13/3a/b0454322.jpg","nickname":"Eric","note":"","ucode":"59752A51A382A6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":37065,"discussion_content":"分区和key个数没关系，只是set 了 key ，能保证放到一个分区，因为是顺序写入，所以保证了顺序性，我得理解\n","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1571492540,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1307184,"avatar":"https://static001.geekbang.org/account/avatar/00/13/f2/30/960fbed7.jpg","nickname":"那些年D盘里","note":"","ucode":"BFF643E6A2E13A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":547200,"discussion_content":"哈哈哈","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1642578382,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1347181,"avatar":"https://static001.geekbang.org/account/avatar/00/14/8e/6d/c68e07ef.jpg","nickname":"Chino","note":"","ucode":"0240D89E5F74B4","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":415008,"discussion_content":"如果不弄2w个分区，也就是有些分区要写入许多key的数据，那怎么保证最终所有数据是按2w个key排序呢。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1636963275,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1273993,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/wonzX0yIia5NFoB0TZPdIPqVicIuSvzMtowownIkO9VwYpkPWJP2tpEcv5RXMn0ayuEGkAp2GBualL5sFQs0ibQJQ/132","nickname":"gogogo","note":"","ucode":"D7B7A9AA2D4CE5","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":1003,"discussion_content":"这是啥操作。。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1562230180,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":107252,"user_name":"城墙","can_delete":false,"product_type":"c1","uid":1030306,"ip_address":"","ucode":"30106AAA277196","user_header":"https://static001.geekbang.org/account/avatar/00/0f/b8/a2/8726ea7b.jpg","comment_is_top":false,"comment_ctime":1561508571,"is_pvip":false,"replies":[{"id":"38819","content":"这个真的要具体测试才能决定了。分区太多自然会额外占用资源，比如OS的文件描述符FD、Socket资源等。","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1561513963,"ip_address":"","comment_id":107252,"utype":1}],"discussion_count":1,"race_medal":0,"score":"18741377755","product_id":100029201,"comment_content":"老师，请问一个Broker中分到多少个分区合适，分区多对性能会有什么影响？","like_count":4,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":455438,"discussion_content":"这个真的要具体测试才能决定了。分区太多自然会额外占用资源，比如OS的文件描述符FD、Socket资源等。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1561513963,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":216584,"user_name":"James","can_delete":false,"product_type":"c1","uid":1134861,"ip_address":"","ucode":"48B0F2A334D1C1","user_header":"https://static001.geekbang.org/account/avatar/00/11/51/0d/fc1652fe.jpg","comment_is_top":false,"comment_ctime":1589289899,"is_pvip":false,"replies":[{"id":"80176","content":"kafka-clients是Kafka的Java客户端，kafka_2.10是版本号。如果你是在Maven仓库中搜到的这两个，那么一个是指客户端，一个是指服务器端2","user_name":"作者回复","user_name_real":"胡夕","uid":"1288090","ctime":1589332215,"ip_address":"","comment_id":216584,"utype":1}],"discussion_count":1,"race_medal":0,"score":"14474191787","product_id":100029201,"comment_content":"请问老师kafka-clients与kafka_2.10有什么区别,<br>好像都是一样的.","like_count":3,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":494872,"discussion_content":"kafka-clients是Kafka的Java客户端，kafka_2.10是版本号。如果你是在Maven仓库中搜到的这两个，那么一个是指客户端，一个是指服务器端2","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1589332215,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":175954,"user_name":"Ranger","can_delete":false,"product_type":"c1","uid":1659649,"ip_address":"","ucode":"834A787AAB9454","user_header":"https://static001.geekbang.org/account/avatar/00/19/53/01/05a07cc2.jpg","comment_is_top":false,"comment_ctime":1580891293,"is_pvip":false,"replies":[{"id":"68430","content":"嗯，确实只能这样，虽然会极大地降低使用Kafka的收益。","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1580950788,"ip_address":"","comment_id":175954,"utype":1}],"discussion_count":1,"race_medal":0,"score":"14465793181","product_id":100029201,"comment_content":"老师，对于消息时序性，kafka能保证单个分区的时序性，但是不能保证主题内消息的时序性，所以业务场景中，需要保证强时序性的消息，我们只能把它放在一个分区中。这样的理解对不对","like_count":3,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":482968,"discussion_content":"嗯，确实只能这样，虽然会极大地降低使用Kafka的收益。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1580950788,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":155158,"user_name":"张天屹","can_delete":false,"product_type":"c1","uid":1477612,"ip_address":"","ucode":"8BD6BD6DCF0F4F","user_header":"https://static001.geekbang.org/account/avatar/00/16/8b/ec/dc03f5ad.jpg","comment_is_top":false,"comment_ctime":1574653479,"is_pvip":false,"replies":[{"id":"59692","content":"Kafka不善于处理前后有因果关系的消息","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1574731233,"ip_address":"","comment_id":155158,"utype":1}],"discussion_count":1,"race_medal":0,"score":"14459555367","product_id":100029201,"comment_content":"老师，我见到有网友提问，说是消费者出现reblance的情况时。key-ordering策略可能会导致消费了“因“，reblance之后，无法消费 “果“。<br><br>比如A1&#47;B1&#47;C1消息发送到A&#47;B&#47;C分区，现在新加了一个分区D（以及对应的一个消费者），那么这个时候A2消息发送到了新建分区D，怎么保证A2在A1之后消费呢？尤其是存在消息堆积的情况下，A2先于A1消费是大概率事件。","like_count":3,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":475676,"discussion_content":"Kafka不善于处理前后有因果关系的消息","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574731233,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":146989,"user_name":"Geek_e2a822","can_delete":false,"product_type":"c1","uid":1484659,"ip_address":"","ucode":"2DA5EE7E7FCA4E","user_header":"","comment_is_top":false,"comment_ctime":1572751970,"is_pvip":false,"replies":[{"id":"56776","content":"多个producer发送的消息彼此之间没有前后顺序之分。谁在谁前面都是可能的，所以你说的情况是有可能的","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1572769121,"ip_address":"","comment_id":146989,"utype":1}],"discussion_count":2,"race_medal":0,"score":"14457653858","product_id":100029201,"comment_content":"老是我有个疑问:消息在同一个分区是能保证消息的顺序性，现在多个produce向  broker 发送消息，是怎么保证先发送的消息是被broker优先接收并优先存储的？有没有可能后发的消息被优先存储呢？","like_count":3,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":473090,"discussion_content":"多个producer发送的消息彼此之间没有前后顺序之分。谁在谁前面都是可能的，所以你说的情况是有可能的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1572769121,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2739957,"avatar":"","nickname":"Geek_39299b","note":"","ucode":"908C2FC4DECD33","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":389372,"discussion_content":"得 讲了半天 还是 有问题","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1629255132,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":145090,"user_name":"注定非凡","can_delete":false,"product_type":"c1","uid":1113597,"ip_address":"","ucode":"80673056E131B7","user_header":"https://static001.geekbang.org/account/avatar/00/10/fd/fd/326be9bb.jpg","comment_is_top":false,"comment_ctime":1572186249,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"14457088137","product_id":100029201,"comment_content":"1.1 为什么分区？<br>1，Kafka有主题（Topic）概念，他是承载真实数据的逻辑容器，主题之下还分为若干个分区，Kafka消息组织方式实际上是三级结构：主题-分区-消息。主题下的每条消息只会在某一个分区中，而不会在多个分区中被保存多份。<br><br>2，Kafka这样设计，使用分区的作用就是提供负载均衡的能力，对数据进行分区的主要目的就是为了实现系统的高伸缩性（Scalability）。不同的分区能够放在不同的节点的机器上，而数据的读写操作也都是针对分区这个粒度进行的，每个节点的机器都能独立地执行各自分区读写请求。我们还可以通过增加节点来提升整体系统的吞吐量。<br><br>3，Kafka的分区设计，还可以实现业务级别的消息顺序的问题。<br><br>1.2 分区有哪些策略？<br>1，所谓的分区策略是指决定生产者将消息发送到那个分区的算法。Kafka提供了默认的分区策略是轮询，同时kafka也支持用户自己制定<br><br>2，常见的分区策略有轮询 也称为Round-robin策略，即顺序分配。轮询的优点是有着优秀的负载均衡的表现。<br><br>3，常见策略还有随机策略，虽然也是追求负载均衡，但总体表现差于轮询。<br><br>4，还要一种是为每条消息配置一个key，按消息的key来存。<br>\tA：Kafka允许为每条消息指定一个key。一旦指定了key ，就可以将相同的key存入相同的分区中，而且每个分区下的消息都是有序的。<br>\tB：key的作用很大，可以是一个有着明确业务含义的字符串，也可以是用来表征消息的元数据。<br><br>5，其他的分区策略：基于地理位置的分区。<br><br>总结：分区是实现负载均衡，系统伸缩性，进而实现Kafka高吞吐量的重要机制。在搭建时就应当仔细的规划生产者端的分区策略，避免数据倾斜，使得某些分区成为性能瓶颈，这样极易引发下游消费数据的性能下降。<br>","like_count":3},{"had_liked":false,"id":108843,"user_name":"thicktao","can_delete":false,"product_type":"c1","uid":1057717,"ip_address":"","ucode":"AD4D31C10EF3C3","user_header":"https://static001.geekbang.org/account/avatar/00/10/23/b5/332afd51.jpg","comment_is_top":false,"comment_ctime":1561899720,"is_pvip":false,"replies":[{"id":"39423","content":"可以用过API的方式从Broker端获取，比如KafkaConsumer.partitionsFor方法","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1561944459,"ip_address":"","comment_id":108843,"utype":1}],"discussion_count":1,"race_medal":0,"score":"14446801608","product_id":100029201,"comment_content":"老师，我想问一下，消费者要获取分区号是不是只能从zookeeper中获取呢，还有没有其他方式？","like_count":3,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":456135,"discussion_content":"可以用过API的方式从Broker端获取，比如KafkaConsumer.partitionsFor方法","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1561944459,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":108260,"user_name":"Kun3375","can_delete":false,"product_type":"c1","uid":1018574,"ip_address":"","ucode":"ADFB72C1382D1F","user_header":"https://static001.geekbang.org/account/avatar/00/0f/8a/ce/f5e42fbd.jpg","comment_is_top":false,"comment_ctime":1561706604,"is_pvip":false,"replies":[{"id":"39451","content":"1. 引入了新类型的消息来支持事务，如transaction marker消息<br>2. 主要依赖transaction coordinator组件使用两阶段提交来保证多分区的原子性写入<br>3. 需要开启","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1561947884,"ip_address":"","comment_id":108260,"utype":1}],"discussion_count":1,"race_medal":0,"score":"14446608492","product_id":100029201,"comment_content":"有几个疑惑…<br>1.请问对于事务消息的幂等，broker 端的实现和也和普通消息一样吗？<br>2.如果这样的话是如何做到多分区多会话幂等的呢？<br>3.对于实践来说，事务的幂等是否还需要手动开启 enable.idempotence？","like_count":3,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":455888,"discussion_content":"1. 引入了新类型的消息来支持事务，如transaction marker消息\n2. 主要依赖transaction coordinator组件使用两阶段提交来保证多分区的原子性写入\n3. 需要开启","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1561947884,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":107573,"user_name":"hxy","can_delete":false,"product_type":"c1","uid":1248553,"ip_address":"","ucode":"431327E8CA4364","user_header":"https://static001.geekbang.org/account/avatar/00/13/0d/29/18272af9.jpg","comment_is_top":false,"comment_ctime":1561559191,"is_pvip":true,"replies":[{"id":"38935","content":"不能了~~","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1561596175,"ip_address":"","comment_id":107573,"utype":1}],"discussion_count":2,"race_medal":4,"score":"14446461079","product_id":100029201,"comment_content":"老师你好，如果后面增加了分区的数目，按key保序还能生效吗？","like_count":3,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":455565,"discussion_content":"不能了~~","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1561596175,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":1,"child_discussions":[{"author":{"id":2094925,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/f7/4d/09554c96.jpg","nickname":"iron bo","note":"","ucode":"4BFB1331637AA3","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":560288,"discussion_content":"那该如何处理呢？指定机器？有没有别的办法","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1649252199,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":455565,"ip_address":""},"score":560288,"extra":""}]}]},{"had_liked":false,"id":107282,"user_name":"calljson","can_delete":false,"product_type":"c1","uid":1505262,"ip_address":"","ucode":"A5F81A6A5B4497","user_header":"https://static001.geekbang.org/account/avatar/00/16/f7/ee/6eeb58a3.jpg","comment_is_top":false,"comment_ctime":1561511416,"is_pvip":false,"replies":[{"id":"38816","content":"嗯嗯，这个不太清楚，不敢妄言。。。","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1561513842,"ip_address":"","comment_id":107282,"utype":1}],"discussion_count":2,"race_medal":0,"score":"14446413304","product_id":100029201,"comment_content":"kafka的主题只有一级、像mq可以进行主题分层：一级主题、二级主题。kafka为何这样设计？","like_count":3,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":455450,"discussion_content":"嗯嗯，这个不太清楚，不敢妄言。。。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1561513842,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1547667,"avatar":"https://static001.geekbang.org/account/avatar/00/17/9d/93/4159edaa.jpg","nickname":"朴素柠檬c","note":"","ucode":"2D4CBB70D801B1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":328281,"discussion_content":"这个为啥问作者？不应该问kafka的设计人员吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1606117919,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":106191,"user_name":"曾轼麟","can_delete":false,"product_type":"c1","uid":1451391,"ip_address":"","ucode":"D418371AC11270","user_header":"https://static001.geekbang.org/account/avatar/00/16/25/7f/473d5a77.jpg","comment_is_top":false,"comment_ctime":1561199497,"is_pvip":false,"replies":[{"id":"38505","content":"Zk集群没有一定要放在哪个城市。这个例子只是配合分区策略引出的，而且的确也有大厂这么使用。其实更好的做法还是多集群的方式。每个IDC有自己的Kafka集群，彼此同步。至于多topic的方式如果业务分割得清晰实际上是更好的解决方案：）","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1561339412,"ip_address":"","comment_id":106191,"utype":1}],"discussion_count":1,"race_medal":0,"score":"14446101385","product_id":100029201,"comment_content":"老师您好，刚刚听了你有关分区策略的例子，就有一个疑问，两个跨区域的集群zookeeper放在那个城市呢？广州还是北京？还有就是能否使用多topic？比如广州一个topic北京一个topic。还有这样做和您建议的分区方式比有什么优劣性的不同呢？","like_count":3,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":454996,"discussion_content":"Zk集群没有一定要放在哪个城市。这个例子只是配合分区策略引出的，而且的确也有大厂这么使用。其实更好的做法还是多集群的方式。每个IDC有自己的Kafka集群，彼此同步。至于多topic的方式如果业务分割得清晰实际上是更好的解决方案：）","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1561339412,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":290701,"user_name":"不如吃茶去","can_delete":false,"product_type":"c1","uid":1081612,"ip_address":"","ucode":"62C9CE8055C9F6","user_header":"https://static001.geekbang.org/account/avatar/00/10/81/0c/115fdfa0.jpg","comment_is_top":false,"comment_ctime":1619692613,"is_pvip":false,"replies":[{"id":"105702","content":"算是有前置条件的场景。 你这个场景中即使乱序，问题也不大吧，加上“删除不存在的商品”的处理逻辑就可以了","user_name":"作者回复","user_name_real":"胡夕","uid":"1288090","ctime":1620614551,"ip_address":"","comment_id":290701,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10209627205","product_id":100029201,"comment_content":"老师您好，求翻牌子。关于国企的那个例子，不太清晰他们有因果关系的例子是什么。但是我们遇到一个场景是 已存在商品A，对商品A进行以下操作：删除商品—&gt;创建商品—&gt;删除商品。在删除、创建分别处于不同topic下如何保证顺序性呢？这个算是因果性的关系吗","like_count":2,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":519267,"discussion_content":"算是有前置条件的场景。 你这个场景中即使乱序，问题也不大吧，加上“删除不存在的商品”的处理逻辑就可以了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1620614551,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":215604,"user_name":"行则将至","can_delete":false,"product_type":"c1","uid":1542987,"ip_address":"","ucode":"DB972F2DF059C4","user_header":"https://static001.geekbang.org/account/avatar/00/17/8b/4b/fa52d222.jpg","comment_is_top":false,"comment_ctime":1589029700,"is_pvip":false,"replies":[{"id":"79801","content":"是这样。Kafka其实很少应用于金融行业，毕竟是大数据起家的框架，用在海量数据处理方面更加有优势，但没说Kafka一定不能应用","user_name":"作者回复","user_name_real":"胡夕","uid":"1288090","ctime":1589035639,"ip_address":"","comment_id":215604,"utype":1}],"discussion_count":3,"race_medal":1,"score":"10178964292","product_id":100029201,"comment_content":"老师，看到您回复学员关于kafka和RocketMQ的区别。 说：RocketMQ适用于金融场景，并且RocketMQ是可以应用在实际的业务系统。最后这个“实际的业务系统”怎么理解，kafka，我们也是在实际的业务系统中用啊","like_count":2,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":494493,"discussion_content":"是这样。Kafka其实很少应用于金融行业，毕竟是大数据起家的框架，用在海量数据处理方面更加有优势，但没说Kafka一定不能应用","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1589035639,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1307184,"avatar":"https://static001.geekbang.org/account/avatar/00/13/f2/30/960fbed7.jpg","nickname":"那些年D盘里","note":"","ucode":"BFF643E6A2E13A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":547201,"discussion_content":"精哥好~","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1642578987,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2739957,"avatar":"","nickname":"Geek_39299b","note":"","ucode":"908C2FC4DECD33","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":389373,"discussion_content":"最近刚好有一个分布式金融的课","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1629255309,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":180053,"user_name":"EricJones","can_delete":false,"product_type":"c1","uid":1207580,"ip_address":"","ucode":"0A80B609400D6B","user_header":"https://static001.geekbang.org/account/avatar/00/12/6d/1c/d9746372.jpg","comment_is_top":false,"comment_ctime":1582174694,"is_pvip":false,"replies":[{"id":"70002","content":"这个命令感知到新分区存在需要一段时间，不是立即就能感知的","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1582247439,"ip_address":"","comment_id":180053,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10172109286","product_id":100029201,"comment_content":"使用此命令查看的还是9个分区：  &#47;usr&#47;local&#47;kafka_2.11-1.1.1&#47;bin&#47;kafka-consumer-groups.sh --bootstrap-server 192.168.0.104:9093 --group  clean-consumer --describe<br>使用此命令查看已经有18个分区了：&#47;usr&#47;local&#47;kafka_2.11-1.1.1&#47;bin&#47;kafka-topics.sh --zookeeper 192.168.0.203:2182 --topic cleaner --describe","like_count":2,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":484502,"discussion_content":"这个命令感知到新分区存在需要一段时间，不是立即就能感知的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582247439,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":161508,"user_name":"刘新","can_delete":false,"product_type":"c1","uid":1242213,"ip_address":"","ucode":"A74B0F2DB8C044","user_header":"https://static001.geekbang.org/account/avatar/00/12/f4/65/64ac9357.jpg","comment_is_top":false,"comment_ctime":1576219480,"is_pvip":false,"replies":[{"id":"61583","content":"8个","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1576302216,"ip_address":"","comment_id":161508,"utype":1}],"discussion_count":4,"race_medal":0,"score":"10166154072","product_id":100029201,"comment_content":"如果一个消费组订阅两个topic，其中一个topic有6个分区，另外一个topic有两个分区，我想问一下消费者实例最合理的设置是6个还是8个？","like_count":2,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":477740,"discussion_content":"8个","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1576302216,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1193755,"avatar":"https://static001.geekbang.org/account/avatar/00/12/37/1b/82310e20.jpg","nickname":"拿笔小星","note":"","ucode":"D3D8F6A959710D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":530528,"discussion_content":"6个也可以吧。只是其中2个实例会即消费A主题，又会消费B主题。但是，我觉得问题不大！如果没有明显压力","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1637079128,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"user_type\":1}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1081612,"avatar":"https://static001.geekbang.org/account/avatar/00/10/81/0c/115fdfa0.jpg","nickname":"不如吃茶去","note":"","ucode":"62C9CE8055C9F6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":371240,"discussion_content":"6个","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1619691851,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1250053,"avatar":"https://static001.geekbang.org/account/avatar/00/13/13/05/41dcae69.jpg","nickname":"tinys","note":"","ucode":"698B7147094066","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":107813,"discussion_content":"老师这里想问下..消费者难道还会根据消费者组来判断当前消费者已监听了另一个主题的某个分区,在整个消费者达到平衡时不再这个消费者上监听另一个主题的消息??","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577609432,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":148150,"user_name":"洪东楗","can_delete":false,"product_type":"c1","uid":1621119,"ip_address":"","ucode":"D161432152E967","user_header":"https://static001.geekbang.org/account/avatar/00/18/bc/7f/3b75677e.jpg","comment_is_top":false,"comment_ctime":1572950288,"is_pvip":false,"replies":[{"id":"57108","content":"&quot;分区的各个副本是怎样在节点上分布的&quot; --- 如果不考虑机架信息的话，你基本上可以认为是轮询的分配方案，新分区的副本的分布也是相同的原理。","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1573001127,"ip_address":"","comment_id":148150,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10162884880","product_id":100029201,"comment_content":"老师好，我有两个疑问，创建分区，分区的各个副本是怎样在节点上分布的？添加新分区后，新分区的副本又是怎样在节点上分布的？我尝试了多个情况，找不到他们的分布规律。希望老师能解答下","like_count":2,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":473415,"discussion_content":"&amp;quot;分区的各个副本是怎样在节点上分布的&amp;quot; --- 如果不考虑机架信息的话，你基本上可以认为是轮询的分配方案，新分区的副本的分布也是相同的原理。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573001127,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":118978,"user_name":"行则将至","can_delete":false,"product_type":"c1","uid":1542987,"ip_address":"","ucode":"DB972F2DF059C4","user_header":"https://static001.geekbang.org/account/avatar/00/17/8b/4b/fa52d222.jpg","comment_is_top":false,"comment_ctime":1564478340,"is_pvip":false,"replies":[{"id":"43692","content":"他们没有使用consumer group，所以没有rebalance的问题。。。。","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1564536129,"ip_address":"","comment_id":118978,"utype":1}],"discussion_count":2,"race_medal":1,"score":"10154412932","product_id":100029201,"comment_content":"老师，其实我就是想知道，之前您培训的那家国企。他们使用key+多分区的策略。如何避免掉reblance后，“果”无法消费的问题？您提到Sticky算法，但是配置之后，也只是有可能避免，无法完全避免。(ps: 但是生产环境一次都不能出现无法消费的情况啊)","like_count":2,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":460695,"discussion_content":"他们没有使用consumer group，所以没有rebalance的问题。。。。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1564536129,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1542987,"avatar":"https://static001.geekbang.org/account/avatar/00/17/8b/4b/fa52d222.jpg","nickname":"行则将至","note":"","ucode":"DB972F2DF059C4","race_medal":1,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":3518,"discussion_content":"谢谢老师指点","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1564546157,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":109289,"user_name":"Geek_817ea4","can_delete":false,"product_type":"c1","uid":1579066,"ip_address":"","ucode":"D1194D33C4DC11","user_header":"https://static001.geekbang.org/account/avatar/00/18/18/3a/b407889c.jpg","comment_is_top":false,"comment_ctime":1561993228,"is_pvip":false,"replies":[{"id":"39589","content":"leader=-1或者说没有leader的分区就是不可用分区 ","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1562027982,"ip_address":"","comment_id":109289,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10151927820","product_id":100029201,"comment_content":"老师问一下：List&lt;PartitionInfo&gt; availablePartitions = cluster.availablePartitionsForTopic(topic);这个可用分区和不可用分区中的可用是什么概念<br>","like_count":2,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":456337,"discussion_content":"leader=-1或者说没有leader的分区就是不可用分区 ","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1562027982,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":108248,"user_name":"lyyjason","can_delete":false,"product_type":"c1","uid":1221291,"ip_address":"","ucode":"B23341290714C0","user_header":"https://static001.geekbang.org/account/avatar/00/12/a2/ab/ebf0f8c9.jpg","comment_is_top":false,"comment_ctime":1561705112,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10151639704","product_id":100029201,"comment_content":"用key来进行分区，保证消息的顺序消费，这招太实用了，受教了！","like_count":2},{"had_liked":false,"id":107673,"user_name":"开水","can_delete":false,"product_type":"c1","uid":1528555,"ip_address":"","ucode":"651491C38B925B","user_header":"https://static001.geekbang.org/account/avatar/00/17/52/eb/eec719f3.jpg","comment_is_top":false,"comment_ctime":1561595509,"is_pvip":false,"replies":[{"id":"39142","content":"如果是多线程发送，本身这些线程发送的消息也是并发的，不可能有先后顺序了啊","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1561681302,"ip_address":"","comment_id":107673,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10151530101","product_id":100029201,"comment_content":"老师，没太想明白。如果多线程producer发送消息，虽然是按照一key一partition策略，但是不同线程发送的时间可能就是乱序的，那怎么能保证消息全局有序呢？","like_count":2,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":455620,"discussion_content":"如果是多线程发送，本身这些线程发送的消息也是并发的，不可能有先后顺序了啊","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1561681302,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":107235,"user_name":"王志杰","can_delete":false,"product_type":"c1","uid":1074791,"ip_address":"","ucode":"DAC170C33EDDCF","user_header":"https://static001.geekbang.org/account/avatar/00/10/66/67/85709c6b.jpg","comment_is_top":false,"comment_ctime":1561507291,"is_pvip":false,"replies":[{"id":"38820","content":"hmmm.... 这个无法保证了","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1561514017,"ip_address":"","comment_id":107235,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10151441883","product_id":100029201,"comment_content":"在分区不变的情况下，如果使用key来分区可以保证顺序，如果在使用过程中已经有一部分key分发的其中一个分区，这时增加了分区数，这个又怎么保证顺序呢？","like_count":2,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":455432,"discussion_content":"hmmm.... 这个无法保证了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1561514017,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":107116,"user_name":"蒋良权","can_delete":false,"product_type":"c1","uid":1236189,"ip_address":"","ucode":"5A355D37948D59","user_header":"https://static001.geekbang.org/account/avatar/00/12/dc/dd/cf9e4ade.jpg","comment_is_top":false,"comment_ctime":1561462052,"is_pvip":false,"replies":[{"id":"38824","content":"感觉没什么区别，只是缓存中的微弱区别罢了。","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1561514325,"ip_address":"","comment_id":107116,"utype":1}],"discussion_count":3,"race_medal":0,"score":"10151396644","product_id":100029201,"comment_content":"老师，我有个疑问，一个topic三个分区与三个单分区的topic在吞吐量以及负载均衡上有什么区别吗？","like_count":2,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":455373,"discussion_content":"感觉没什么区别，只是缓存中的微弱区别罢了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1561514325,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1213755,"avatar":"https://static001.geekbang.org/account/avatar/00/12/85/3b/cfdc8bf2.jpg","nickname":"Royal","note":"","ucode":"74BCA314755C69","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":781,"discussion_content":"多分区比单分区能够实现kafka的负载均衡吧，吞吐量也相对大很多啊","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1562056231,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1054827,"avatar":"https://static001.geekbang.org/account/avatar/00/10/18/6b/a1448af1.jpg","nickname":"贝影","note":"","ucode":"19545C8DCBF8A2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1213755,"avatar":"https://static001.geekbang.org/account/avatar/00/12/85/3b/cfdc8bf2.jpg","nickname":"Royal","note":"","ucode":"74BCA314755C69","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":543900,"discussion_content":"他说的是一个topic3分区和3个topic单分区相比","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1641350195,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":781,"ip_address":""},"score":543900,"extra":""}]}]},{"had_liked":false,"id":106595,"user_name":"October","can_delete":false,"product_type":"c1","uid":1137879,"ip_address":"","ucode":"CEDA78F4A5F8B1","user_header":"https://static001.geekbang.org/account/avatar/00/11/5c/d7/e4673fde.jpg","comment_is_top":false,"comment_ctime":1561352019,"is_pvip":false,"replies":[{"id":"38797","content":"如果是assign，就不是消费者组了，而是独立的消费者（standalone consumer）","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1561511153,"ip_address":"","comment_id":106595,"utype":1}],"discussion_count":2,"race_medal":0,"score":"10151286611","product_id":100029201,"comment_content":"看到老师的留言中说到，可以通过consumer的assign指定消费者消费哪个分区的。如果一个消费者组的多个消费者订阅了同一分区，会出现什么情况呢？","like_count":2,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":455149,"discussion_content":"如果是assign，就不是消费者组了，而是独立的消费者（standalone consumer）","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1561511153,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1124656,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/PiajxSqBRaEIYYDfmMLD302Z5EnRAPafT9FjohOR2aggaKlaHZ18m4ibpRkdmgvwZt7KK1FekricYh8lBtxhe4DTg/132","nickname":"孝江","note":"","ucode":"385D7BE10595DD","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":213294,"discussion_content":"不存在一个消费者组的多个消费者订阅了同一分区的情况","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1585062824,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":289365,"user_name":"未见","can_delete":false,"product_type":"c1","uid":1939320,"ip_address":"","ucode":"EC8F9B0E5F3D9A","user_header":"https://static001.geekbang.org/account/avatar/00/1d/97/78/9229749e.jpg","comment_is_top":false,"comment_ctime":1618989665,"is_pvip":false,"replies":[{"id":"105289","content":"kafka不负责消费成功还是失败。在它看来，只有从poll返回给你，kafka就认为是“消费成功”了","user_name":"作者回复","user_name_real":"胡夕","uid":"1288090","ctime":1619600088,"ip_address":"","comment_id":289365,"utype":1}],"discussion_count":2,"race_medal":0,"score":"5913956961","product_id":100029201,"comment_content":"老师我对那个国企那个案例有个疑问。假设按key=id_1、id_2、id_3，分成三个分区，现在有三个消费，每一个消费都消费一个分区。假设现在进来顺序是1，2,3，在消费id_1的时候消费失败了，然后id_2也进来了，这个id_2会执行消费吗。","like_count":1,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":518893,"discussion_content":"kafka不负责消费成功还是失败。在它看来，只有从poll返回给你，kafka就认为是“消费成功”了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1619600088,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2739957,"avatar":"","nickname":"Geek_39299b","note":"","ucode":"908C2FC4DECD33","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":389374,"discussion_content":"啊？？？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1629256199,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":278032,"user_name":"wind","can_delete":false,"product_type":"c1","uid":1572612,"ip_address":"","ucode":"8F4FD19CF9BD7B","user_header":"https://static001.geekbang.org/account/avatar/00/17/ff/04/9293347e.jpg","comment_is_top":false,"comment_ctime":1612711031,"is_pvip":false,"replies":[{"id":"101015","content":"你是想说consumer端要做去重逻辑吗？是的，是要做的","user_name":"作者回复","user_name_real":"胡夕","uid":"1288090","ctime":1612833264,"ip_address":"","comment_id":278032,"utype":1}],"discussion_count":2,"race_medal":0,"score":"5907678327","product_id":100029201,"comment_content":"老师您好，我只有1个生产者，topic也只有1个partition，如果我设置了max.in.flight.requests.per.connectio=1，这样生产端必须收到上次request的ack之后，才会发送下一个request。<br>但是就我理解，1个request是可以有多条message的。<br>比如我需要发送的消息为 1，2，3，4<br>其中1和2是1个request发出去的，我们称之为request-1；3和4是1个request，我们称之为request-2。<br>由于kafka回的ack，生产者没收到，这样生产端重发了1次request-1。kafka收到的就是 request-1，request-1，request-2，对应的消息就是1，2，1，2，3，4。<br>这种我认为必须通过消费端去做逻辑处理。<br>我的理解正确么？","like_count":1,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":515257,"discussion_content":"你是想说consumer端要做去重逻辑吗？是的，是要做的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1612833264,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2739957,"avatar":"","nickname":"Geek_39299b","note":"","ucode":"908C2FC4DECD33","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":389375,"discussion_content":"这还怎能有序啊 ？？？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1629256408,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":243349,"user_name":"lcf枫","can_delete":false,"product_type":"c1","uid":1144171,"ip_address":"","ucode":"D51E8F68BD41CA","user_header":"https://static001.geekbang.org/account/avatar/00/11/75/6b/fd685164.jpg","comment_is_top":false,"comment_ctime":1598067769,"is_pvip":false,"replies":[{"id":"89765","content":"设置max.in.flight.requests.per.connection = 1可以避免乱序","user_name":"作者回复","user_name_real":"胡夕","uid":"1288090","ctime":1598232783,"ip_address":"","comment_id":243349,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5893035065","product_id":100029201,"comment_content":"老师 会不会因为网络而乱序这种情况出现？该如何处理？","like_count":1,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":504264,"discussion_content":"设置max.in.flight.requests.per.connection = 1可以避免乱序","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1598232783,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":236212,"user_name":"Minze","can_delete":false,"product_type":"c1","uid":1534718,"ip_address":"","ucode":"2367DA6C09BE7C","user_header":"https://static001.geekbang.org/account/avatar/00/17/6a/fe/446c0282.jpg","comment_is_top":false,"comment_ctime":1595345978,"is_pvip":false,"replies":[{"id":"87312","content":"几乎没有什么差别，特别是性能上。","user_name":"作者回复","user_name_real":"胡夕","uid":"1288090","ctime":1595386718,"ip_address":"","comment_id":236212,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5890313274","product_id":100029201,"comment_content":"老师，我配置n个只有一个partition 的topic 和配置具有n个partition的一个topic ，这样这两者会有什么性能上的差别吗？比如n=50","like_count":1,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":501986,"discussion_content":"几乎没有什么差别，特别是性能上。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1595386718,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":163246,"user_name":"Hale","can_delete":false,"product_type":"c1","uid":1129731,"ip_address":"","ucode":"1925955343FE94","user_header":"https://static001.geekbang.org/account/avatar/00/11/3d/03/b2d9a084.jpg","comment_is_top":false,"comment_ctime":1576675419,"is_pvip":true,"replies":[{"id":"62100","content":"如果是自动创建的普通主题，默认是1个分区","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1576717174,"ip_address":"","comment_id":163246,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5871642715","product_id":100029201,"comment_content":"默认的一个主题有几个分区？","like_count":1,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":478316,"discussion_content":"如果是自动创建的普通主题，默认是1个分区","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1576717174,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":162322,"user_name":"YWH","can_delete":false,"product_type":"c1","uid":1145122,"ip_address":"","ucode":"B448CCF13F2BF2","user_header":"https://static001.geekbang.org/account/avatar/00/11/79/22/58981901.jpg","comment_is_top":false,"comment_ctime":1576500154,"is_pvip":false,"replies":[{"id":"61786","content":"你可以在单机情况下先创建一个分区试试你的环境下单机单分区的TPS，然后结合你的TPS目标，创建多个分区","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1576544099,"ip_address":"","comment_id":162322,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5871467450","product_id":100029201,"comment_content":"老师，请问如何确定分区量比较合理呢？毕竟分区数只能增不能减...","like_count":1,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":478015,"discussion_content":"你可以在单机情况下先创建一个分区试试你的环境下单机单分区的TPS，然后结合你的TPS目标，创建多个分区","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1576544099,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":153501,"user_name":"张振宇","can_delete":false,"product_type":"c1","uid":1130691,"ip_address":"","ucode":"7A6FD7294E65FF","user_header":"https://static001.geekbang.org/account/avatar/00/11/40/c3/e545ba80.jpg","comment_is_top":false,"comment_ctime":1574248133,"is_pvip":false,"replies":[{"id":"59026","content":"主要看看producer端是不是自己加了什么转移字符进去了","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1574295884,"ip_address":"","comment_id":153501,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5869215429","product_id":100029201,"comment_content":"老师想请教filebeat收集上来的日志到了kafka，再从kafka消费出来的日志双引号前面都加了反斜杠，不知道为什么多了反斜杠。","like_count":1,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":475190,"discussion_content":"主要看看producer端是不是自己加了什么转移字符进去了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574295884,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":151746,"user_name":"Allen","can_delete":false,"product_type":"c1","uid":1355712,"ip_address":"","ucode":"07DDA77881AC63","user_header":"https://static001.geekbang.org/account/avatar/00/14/af/c0/e3e35200.jpg","comment_is_top":false,"comment_ctime":1573784503,"is_pvip":false,"replies":[{"id":"58590","content":"leader挂了，还有其他follower吗？另外leader是否挂掉和消息乱序关系不大。如果你说的严格顺序一致是指全局一致，那么确实只能使用单分区","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1574039327,"ip_address":"","comment_id":151746,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5868751799","product_id":100029201,"comment_content":"老师好，有几个问题请教下，就算是单分区，inflyrequest为1，如果leader挂了也不乱吗？像MySQL  CDC方案中，必须严格顺序一致性，使用kafka合适吗？","like_count":1,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":474599,"discussion_content":"leader挂了，还有其他follower吗？另外leader是否挂掉和消息乱序关系不大。如果你说的严格顺序一致是指全局一致，那么确实只能使用单分区","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574039327,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":145615,"user_name":"Stephen","can_delete":false,"product_type":"c1","uid":1208572,"ip_address":"","ucode":"CB08E34AB48D99","user_header":"https://static001.geekbang.org/account/avatar/00/12/70/fc/77f60338.jpg","comment_is_top":false,"comment_ctime":1572330411,"is_pvip":false,"replies":[{"id":"56293","content":"如果使用默认的分区策略，依然会尝试写入相同的分区","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1572396688,"ip_address":"","comment_id":145615,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5867297707","product_id":100029201,"comment_content":"你好，老师，如果给消息指定了key值，但是中途一台broker挂了，那么后续具有相同key值的消息还能被写入相同的分区吗？","like_count":1,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":472490,"discussion_content":"如果使用默认的分区策略，依然会尝试写入相同的分区","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1572396688,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":134227,"user_name":"LJK","can_delete":false,"product_type":"c1","uid":1199213,"ip_address":"","ucode":"12B2441099FF1D","user_header":"https://static001.geekbang.org/account/avatar/00/12/4c/6d/c20f2d5a.jpg","comment_is_top":false,"comment_ctime":1568778317,"is_pvip":false,"replies":[{"id":"51669","content":"这个取决于你用的是什么python客户端，然后去到对应的官网上查询一下用法即可","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1568901390,"ip_address":"","comment_id":134227,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5863745613","product_id":100029201,"comment_content":"老师好，请问对于python来说如何指定自定义的partitioner呢？","like_count":1,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":467660,"discussion_content":"这个取决于你用的是什么python客户端，然后去到对应的官网上查询一下用法即可","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1568901390,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":117801,"user_name":"吴小智","can_delete":false,"product_type":"c1","uid":1310798,"ip_address":"","ucode":"C7C9F58B5C9F7B","user_header":"https://static001.geekbang.org/account/avatar/00/14/00/4e/be2b206b.jpg","comment_is_top":false,"comment_ctime":1564133184,"is_pvip":false,"replies":[{"id":"43156","content":"同一个分区的不同副本可能分布在不同的机器上 ","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1564146596,"ip_address":"","comment_id":117801,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5859100480","product_id":100029201,"comment_content":"同一个分区可能会分布在不同的机器节点上吗","like_count":1,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":460122,"discussion_content":"同一个分区的不同副本可能分布在不同的机器上 ","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1564146596,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":112312,"user_name":"james","can_delete":false,"product_type":"c1","uid":1049208,"ip_address":"","ucode":"5701899403917C","user_header":"https://static001.geekbang.org/account/avatar/00/10/02/78/23c56bce.jpg","comment_is_top":false,"comment_ctime":1562719300,"is_pvip":false,"replies":[{"id":"40847","content":"它只要保证有因果关系的消息有相同的key就行了啊","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1562722047,"ip_address":"","comment_id":112312,"utype":1}],"discussion_count":3,"race_medal":0,"score":"5857686596","product_id":100029201,"comment_content":"国企那个例子没懂，优化后，多分区内的消息是有顺序，但是分区之间的并行消费就没顺序了，猜测他的消息是不同维度的，为啥还放一个topic，实际例子可以说一下吗","like_count":1,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":457670,"discussion_content":"它只要保证有因果关系的消息有相同的key就行了啊","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1562722047,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1009652,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/67/f4/9a1feb59.jpg","nickname":"钱","note":"","ucode":"2C92A243A463D4","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":4675,"discussion_content":"我也有此疑问，也没理解老师的答复，老师能否在详细一点说明一下？如果其他同学理解了，也请说明一下。多谢","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1565657742,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1361746,"avatar":"https://static001.geekbang.org/account/avatar/00/14/c7/52/c5adf218.jpg","nickname":"喜欢地球的阿培同学","note":"","ucode":"5F97037585F857","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1009652,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/67/f4/9a1feb59.jpg","nickname":"钱","note":"","ucode":"2C92A243A463D4","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":266579,"discussion_content":"有因果关系的消息放到同一个分区，没有因果关系的消息不放到同一个分区，这样即使并行消费(不同分区)无法保证顺序关系，也是可以的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1589534909,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":4675,"ip_address":""},"score":266579,"extra":""}]}]},{"had_liked":false,"id":106518,"user_name":"玉剑冰锋","can_delete":false,"product_type":"c1","uid":1214202,"ip_address":"","ucode":"8EA56A71BA5B22","user_header":"https://static001.geekbang.org/account/avatar/00/12/86/fa/4bcd7365.jpg","comment_is_top":false,"comment_ctime":1561338789,"is_pvip":false,"replies":[{"id":"38794","content":"嗯嗯，如果这样可以根据具体的磁盘占用情况做分区迁移。目前Kafka只是保证每台broker上分区数大致均匀，没有考虑具体的磁盘情况。","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1561510873,"ip_address":"","comment_id":106518,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5856306085","product_id":100029201,"comment_content":"分区数是16，一共三台broker,这样有一台肯定是6个分区，其他两台各五个，某个Topic如果数据量大的话，分区响应的目录也会很大，这样导致三台broker磁盘使用率差别有时候会很大","like_count":1,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":455119,"discussion_content":"嗯嗯，如果这样可以根据具体的磁盘占用情况做分区迁移。目前Kafka只是保证每台broker上分区数大致均匀，没有考虑具体的磁盘情况。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1561510873,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":106388,"user_name":"ban","can_delete":false,"product_type":"c1","uid":1034204,"ip_address":"","ucode":"E523CE97E48266","user_header":"https://static001.geekbang.org/account/avatar/00/0f/c7/dc/9408c8c2.jpg","comment_is_top":false,"comment_ctime":1561286460,"is_pvip":false,"replies":[{"id":"38515","content":"在应用程序里面保证啊。不同的地域使用不同的分区","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1561340317,"ip_address":"","comment_id":106388,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5856253756","product_id":100029201,"comment_content":"怎么配置指定两个分区，并且分区在不同地区呢，这个没讲","like_count":1,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":455074,"discussion_content":"在应用程序里面保证啊。不同的地域使用不同的分区","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1561340317,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":106322,"user_name":"直念去","can_delete":false,"product_type":"c1","uid":1052690,"ip_address":"","ucode":"816CD5BA8E6F86","user_header":"https://static001.geekbang.org/account/avatar/00/10/10/12/9b00f4f2.jpg","comment_is_top":false,"comment_ctime":1561265476,"is_pvip":false,"replies":[{"id":"38513","content":"你是说副本在所有broker上均匀分布吗？这也是Kafka自动保证的。当创建topic的时候Kafka会保证所有副本均匀地在broker上保存。","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1561339684,"ip_address":"","comment_id":106322,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5856232772","product_id":100029201,"comment_content":"老师，请问一下把数据均匀的分布到分区上了，那数据的副本呢，怎么保持均匀分布呢。","like_count":1,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":455046,"discussion_content":"你是说副本在所有broker上均匀分布吗？这也是Kafka自动保证的。当创建topic的时候Kafka会保证所有副本均匀地在broker上保存。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1561339684,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":106215,"user_name":"飞翔","can_delete":false,"product_type":"c1","uid":1068571,"ip_address":"","ucode":"65AF6AF292DAD6","user_header":"https://static001.geekbang.org/account/avatar/00/10/4e/1b/f4b786b9.jpg","comment_is_top":false,"comment_ctime":1561209077,"is_pvip":true,"replies":[{"id":"38507","content":"topic创建的时候指定了分区数","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1561339510,"ip_address":"","comment_id":106215,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5856176373","product_id":100029201,"comment_content":"那partition的个数是从哪配置的呢","like_count":1,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":455004,"discussion_content":"topic创建的时候指定了分区数","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1561339510,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":106125,"user_name":"电光火石","can_delete":false,"product_type":"c1","uid":1013160,"ip_address":"","ucode":"3AD33BB4AA940F","user_header":"https://static001.geekbang.org/account/avatar/00/0f/75/a8/dfe4cade.jpg","comment_is_top":false,"comment_ctime":1561183345,"is_pvip":false,"replies":[{"id":"38490","content":"consumer可以采用Consumer.assign直接订阅目标分区，通过这种方式实现读取指定分区的数据","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1561338585,"ip_address":"","comment_id":106125,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5856150641","product_id":100029201,"comment_content":"我们生产上面一般都是round-robin，有一个特别的处理就是有部分消息是有优先级的，这部分消息我们写到了不同的topic里面，consumer在消费的时候就可以控制优先处理这部分消息。<br>老师，另外您举得例子里面后半部分没说，就是consumer消费的时候是怎么控制：南方的consumer只会读取在南方的broker上面的？谢谢了！","like_count":1,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":454965,"discussion_content":"consumer可以采用Consumer.assign直接订阅目标分区，通过这种方式实现读取指定分区的数据","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1561338585,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":106060,"user_name":"玉剑冰锋","can_delete":false,"product_type":"c1","uid":1214202,"ip_address":"","ucode":"8EA56A71BA5B22","user_header":"https://static001.geekbang.org/account/avatar/00/12/86/fa/4bcd7365.jpg","comment_is_top":false,"comment_ctime":1561161768,"is_pvip":false,"replies":[{"id":"38475","content":"我有点没太明白，为什么会造成数据倾斜，你用了什么分区策略了吗？","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1561337468,"ip_address":"","comment_id":106060,"utype":1}],"discussion_count":2,"race_medal":0,"score":"5856129064","product_id":100029201,"comment_content":"老师您好，请教个问题:我们生产是三台kafka，Filebeat采集端（目前有几百台）采集日志发送至kafka，由于当时对kafka分区规划不好，Topic的分区都是16，副本是1，这样造成的结果就是数据倾斜，时不时需要迁移Partition，线上迁移很容易造成I&#47;O的问题，导致kafka异常。想问问老师分区数量设置有什么依据吗？另外针对上述情况后续有没有其他好的办法？","like_count":1,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":454933,"discussion_content":"我有点没太明白，为什么会造成数据倾斜，你用了什么分区策略了吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1561337468,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1207580,"avatar":"https://static001.geekbang.org/account/avatar/00/12/6d/1c/d9746372.jpg","nickname":"EricJones","note":"","ucode":"0A80B609400D6B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":178560,"discussion_content":"我也只设置了9个分区，但是有的分区的数据量很大有的很小。相差能差几百万数据","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582174832,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":359410,"user_name":"距离30米","can_delete":false,"product_type":"c1","uid":1516600,"ip_address":"四川","ucode":"5566D9AB9E47DE","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/wBjvGCCZmO0Bic0DrnG466y6hwPkibGevAV6E6FPfQEricvw5toL7a2HSgjhI83cCiadrUibIyVibkgbbMOHVxo7HA8Q/132","comment_is_top":false,"comment_ctime":1665501347,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1665501347","product_id":100029201,"comment_content":"通过key来实现多分区的消息顺序，秒啊","like_count":0},{"had_liked":false,"id":355037,"user_name":"hello","can_delete":false,"product_type":"c1","uid":1649057,"ip_address":"广东","ucode":"4F42DAA5DB5C38","user_header":"https://static001.geekbang.org/account/avatar/00/19/29/a1/41607383.jpg","comment_is_top":false,"comment_ctime":1660991512,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1660991512","product_id":100029201,"comment_content":"按消息键保序策略应该也存在数据倾斜的情况吧？感觉key 的选择也是一门学问","like_count":0},{"had_liked":false,"id":354529,"user_name":"Geek_f23c82","can_delete":false,"product_type":"c1","uid":2725008,"ip_address":"上海","ucode":"40BABEF7078F37","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIW5xLKMIwlibBXdP5sGVqhXAGuLYk7XFBrhzkFytlKicjNpSHIKXQclDUlSbD9s2HDuOiaBXslCqVbg/132","comment_is_top":false,"comment_ctime":1660488655,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1660488655","product_id":100029201,"comment_content":"按消息键保序策略的图是不是画错了，分区0不应该出现key2和key3对应的消息","like_count":0},{"had_liked":false,"id":350871,"user_name":"beifengzhishen001","can_delete":false,"product_type":"c1","uid":2109853,"ip_address":"","ucode":"77D42B7DD9E754","user_header":"","comment_is_top":false,"comment_ctime":1657266085,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1657266085","product_id":100029201,"comment_content":"有个地方没看明白，请教下：最后说的那个送咸豆腐脑和甜豆腐脑的例子，消费者程序消费的目标难道不应该是整个跨域南北机房集群的所有分区的消息么?是怎么做到部署在南机房服务器的消费者只消费南机房分区的消息的？","like_count":0},{"had_liked":false,"id":347851,"user_name":"浮石沉木","can_delete":false,"product_type":"c1","uid":2223167,"ip_address":"","ucode":"D585768321B84A","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/mQddXC7nRiaKHTwdficicTB3bH0q5ic5UoSab51Omic7eyLBz0SNcvbLpQnNib7zP1yJFm7xxx4ia81iahfibRVnbTwHmhw/132","comment_is_top":false,"comment_ctime":1654512721,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1654512721","product_id":100029201,"comment_content":"老师，想请教一个问题，如果我想在规定时间内有且只有一条消息在分区上，除了设置消息有效期外，还有其他办法做到消息去重吗，类似于和查库一样，插入前先看数据有没有，如果有就放弃插入。","like_count":0},{"had_liked":false,"id":346914,"user_name":"她微笑的脸y","can_delete":false,"product_type":"c1","uid":1813614,"ip_address":"","ucode":"E3B559B10B4A70","user_header":"https://static001.geekbang.org/account/avatar/00/1b/ac/6e/c13d131c.jpg","comment_is_top":false,"comment_ctime":1653535664,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1653535664","product_id":100029201,"comment_content":"怎么才能知道key被发往哪一个分区了呢？","like_count":0},{"had_liked":false,"id":346616,"user_name":"数学汤家凤","can_delete":false,"product_type":"c1","uid":2029485,"ip_address":"","ucode":"DE84E777C384AD","user_header":"https://static001.geekbang.org/account/avatar/00/1e/f7/ad/4fd4d867.jpg","comment_is_top":false,"comment_ctime":1653291493,"is_pvip":true,"discussion_count":1,"race_medal":0,"score":"1653291493","product_id":100029201,"comment_content":"The default partitioning strategy:<br> * &lt;li&gt;If a partition is specified in the record, use it<br> * &lt;li&gt;If no partition is specified but a key is present choose a partition based on a hash of the key<br> * &lt;li&gt;If no partition or key is present choose the sticky partition that changes when the batch is full.<br> * See KIP-480 for details about sticky partitioning.<br>和文章里说的不一样啊！<br>默认分区器<br>1. 指定 partition，就用它<br>2. 指定 key，就哈希取模<br>3. 什么都没指定，粘性分区","like_count":0,"discussions":[{"author":{"id":1526892,"avatar":"https://static001.geekbang.org/account/avatar/00/17/4c/6c/11fb0f1d.jpg","nickname":"布兰特","note":"","ucode":"EE3316C188EC3C","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":579253,"discussion_content":"sticky partitioning 是2.4版本才有的，你看下时间","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1657268553,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":346447,"user_name":"Kevin","can_delete":false,"product_type":"c1","uid":2929228,"ip_address":"","ucode":"0027EFD7D9AC22","user_header":"","comment_is_top":false,"comment_ctime":1653142150,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1653142150","product_id":100029201,"comment_content":"<br>List&lt;PartitionInfo&gt; partitions = cluster.partitionsForTopic(topic);<br>return partitions.stream().filter(p -&gt; isSouth(p.leader().host())).map(PartitionInfo::partition).findAny().get();<br>这里我看老师说的是随机选择一个南方的分区，findAny我的理解和stream（）搭配的时候总是返回第一个元素，所以这里应该是parallelStream（）才能达到随机选择分区的效果，不知道是否正确。","like_count":0},{"had_liked":false,"id":344120,"user_name":"天天向上卡索","can_delete":false,"product_type":"c1","uid":1009850,"ip_address":"","ucode":"E3724C3B39BD3F","user_header":"https://static001.geekbang.org/account/avatar/00/0f/68/ba/c0cf8bf3.jpg","comment_is_top":false,"comment_ctime":1651283546,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1651283546","product_id":100029201,"comment_content":"消息只存在于一个分区，靠什么保证高可用？","like_count":0},{"had_liked":false,"id":343441,"user_name":"Zhenng","can_delete":false,"product_type":"c1","uid":1859721,"ip_address":"","ucode":"48BB40DF266533","user_header":"https://static001.geekbang.org/account/avatar/00/1c/60/89/1f424b14.jpg","comment_is_top":false,"comment_ctime":1650855354,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1650855354","product_id":100029201,"comment_content":"老师，课程大体看下来了，但还是有个疑问，就是分区数对机械硬盘的影响，比如说我有4块机械硬盘，这时我设置分区数为4的读写性能高还是分区数为8的读写性能高呢？因为Kafka是顺序读写，磁盘也是顺序读写，如果设置为8的话会不会导致磁盘磁头反复寻道从而导致性能下降，还是设置为8时分区数更高从而并发更高、性能更好，抵消了磁头寻道的消耗从而性能更好呢？在这个情境下基本是拿Kafka当存储来测试的，测试kafka读写磁盘的速度","like_count":0},{"had_liked":false,"id":340978,"user_name":"iron bo","can_delete":false,"product_type":"c1","uid":2094925,"ip_address":"","ucode":"4BFB1331637AA3","user_header":"https://static001.geekbang.org/account/avatar/00/1f/f7/4d/09554c96.jpg","comment_is_top":false,"comment_ctime":1649251926,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1649251926","product_id":100029201,"comment_content":"按消息键保序策略中：<br>List partitions = cluster.partitionsForTopic(topic);return Math.abs(key.hashCode()) % partitions.size();<br>这个是取key的hashCode()，然后对Partition的数量取余，这样达到key一样的消息一定能到相同的partition。但是如果对分区扩容了呢，增加了partition的数量，这该如何保证 一样的key存储到同一个partition呢","like_count":0},{"had_liked":false,"id":331771,"user_name":"Richard123m","can_delete":false,"product_type":"c1","uid":1564725,"ip_address":"","ucode":"D44993A1D7DF62","user_header":"https://static001.geekbang.org/account/avatar/00/17/e0/35/93ef5909.jpg","comment_is_top":false,"comment_ctime":1642755187,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1642755187","product_id":100029201,"comment_content":"如果数据在buffer中没有发送出去，此时，程序宕了，如果保证不丢数？","like_count":0},{"had_liked":false,"id":328908,"user_name":"William","can_delete":false,"product_type":"c1","uid":1346215,"ip_address":"","ucode":"55F5D9DEE485B1","user_header":"https://static001.geekbang.org/account/avatar/00/14/8a/a7/674c1864.jpg","comment_is_top":false,"comment_ctime":1640931400,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1640931400","product_id":100029201,"comment_content":"分区： <br>1、指定了分区走分区<br>    private int partition(ProducerRecord&lt;K, V&gt; record, byte[] serializedKey, byte[] serializedValue, Cluster cluster) {<br>        Integer partition = record.partition();<br>        return partition != null ? partition : this.partitioner.partition(record.topic(), record.key(), serializedKey, record.value(), serializedValue, cluster);<br>    }<br><br>2、指定分区：按照分区走；<br>3、没指定分区走：Partitioner# partition 方法 DefaultPartitioner、RoundRobinPartitioner、UniformStickyPartitioner<br>","like_count":0},{"had_liked":false,"id":328551,"user_name":"赵鹏","can_delete":false,"product_type":"c1","uid":1860639,"ip_address":"","ucode":"BF0A93521880B7","user_header":"","comment_is_top":false,"comment_ctime":1640768540,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1640768540","product_id":100029201,"comment_content":"胡老师，“按消息键保序策略” 这部分的示例图中，我注意到k3怎么分配在分区0，是笔误吗？ 同一个key在同一个分区，那key为k3不应待都是在分区1中吗？","like_count":0},{"had_liked":false,"id":323408,"user_name":"追风筝的人","can_delete":false,"product_type":"c1","uid":1488020,"ip_address":"","ucode":"2993D60F94C396","user_header":"https://static001.geekbang.org/account/avatar/00/16/b4/94/2796de72.jpg","comment_is_top":false,"comment_ctime":1637892239,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1637892239","product_id":100029201,"comment_content":"切记分区是实现负载均衡以及高吞吐量的关键，故在生产者这一端就要仔细盘算合适的分区策略，避免造成消息数据的“倾斜”，使得某些分区成为性能瓶颈，这样极易引发下游数据消费的性能下降。","like_count":0},{"had_liked":false,"id":323405,"user_name":"追风筝的人","can_delete":false,"product_type":"c1","uid":1488020,"ip_address":"","ucode":"2993D60F94C396","user_header":"https://static001.geekbang.org/account/avatar/00/16/b4/94/2796de72.jpg","comment_is_top":false,"comment_ctime":1637891425,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1637891425","product_id":100029201,"comment_content":"前面提到的 Kafka 默认分区策略实际上同时实现了两种策略：如果指定了 Key，那么默认实现按消息键保序策略；如果没有指定 Key，则使用轮询策略。","like_count":0},{"had_liked":false,"id":321879,"user_name":"拿笔小星","can_delete":false,"product_type":"c1","uid":1193755,"ip_address":"","ucode":"D3D8F6A959710D","user_header":"https://static001.geekbang.org/account/avatar/00/12/37/1b/82310e20.jpg","comment_is_top":false,"comment_ctime":1637078587,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1637078587","product_id":100029201,"comment_content":"大佬在讲Kafka的Java客户端时，没有提版本。版本不一样，默认的分区器实现有差异！我本地是&lt;groupId&gt;org.apache.kafka&lt;&#47;groupId&gt;<br> &lt;artifactId&gt;kafka-clients&lt;&#47;artifactId&gt;<br> &lt;version&gt;2.4.0&lt;&#47;version&gt;<br>实现策略就不是文中所说的！","like_count":0},{"had_liked":false,"id":321049,"user_name":"大力水手Jerry","can_delete":false,"product_type":"c1","uid":1227840,"ip_address":"","ucode":"E4A6C71E275DB5","user_header":"https://static001.geekbang.org/account/avatar/00/12/bc/40/2279cfb5.jpg","comment_is_top":false,"comment_ctime":1636632579,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1636632579","product_id":100029201,"comment_content":"“按消息键保序策略”中的图，分区0中的message应该都是k1吧？","like_count":0},{"had_liked":false,"id":317511,"user_name":"Geek_84025d","can_delete":false,"product_type":"c1","uid":2420731,"ip_address":"","ucode":"D01E97134E49FF","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/AYCIZYjDO4UAMhqNYNElcNiczfuD2qU6VkcEmSugImsq5bjicRNTQE1dJhPIuUDunzxSLexDoYazK7QadT3AekJw/132","comment_is_top":false,"comment_ctime":1634819819,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1634819819","product_id":100029201,"comment_content":"老师您好，问个问题。<br>由于消费者消费速度不一样，导致有的分区数据倾斜，这个可以怎么解决呢？","like_count":0},{"had_liked":false,"id":312165,"user_name":"🦌","can_delete":false,"product_type":"c1","uid":2115199,"ip_address":"","ucode":"930C4243AFBD5A","user_header":"https://static001.geekbang.org/account/avatar/00/20/46/7f/06b9c612.jpg","comment_is_top":false,"comment_ctime":1631670589,"is_pvip":false,"discussion_count":0,"race_medal":1,"score":"1631670589","product_id":100029201,"comment_content":"2. 2版本之后对无 key的消息有一个粘性分区的策略","like_count":0},{"had_liked":false,"id":311521,"user_name":"shuifa","can_delete":false,"product_type":"c1","uid":1040063,"ip_address":"","ucode":"636733F5C88A7B","user_header":"https://static001.geekbang.org/account/avatar/00/0f/de/bf/4df4224d.jpg","comment_is_top":false,"comment_ctime":1631266423,"is_pvip":false,"discussion_count":0,"race_medal":1,"score":"1631266423","product_id":100029201,"comment_content":"分区策略：随机、轮询、按Key保序、按地理位置等，可以自定义<br>分区是负载均衡和高吞吐的关键","like_count":0},{"had_liked":false,"id":308635,"user_name":"Leo","can_delete":false,"product_type":"c1","uid":2649276,"ip_address":"","ucode":"CEBAD9CDCFC2A3","user_header":"https://static001.geekbang.org/account/avatar/00/28/6c/bc/f751786b.jpg","comment_is_top":false,"comment_ctime":1629712557,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1629712557","product_id":100029201,"comment_content":"topic是无法保证数据有序性的，partition分区能够保证数据有序性；","like_count":0},{"had_liked":false,"id":303505,"user_name":"李继伟","can_delete":false,"product_type":"c1","uid":1482580,"ip_address":"","ucode":"CEDE9EA45527E7","user_header":"https://static001.geekbang.org/account/avatar/00/16/9f/54/9a2596cb.jpg","comment_is_top":false,"comment_ctime":1626836183,"is_pvip":false,"replies":[{"id":"110337","content":"您能否提供一个典型的业务级别的消息顺序问题，我们一起探讨下","user_name":"作者回复","user_name_real":"胡夕","uid":"1288090","ctime":1627784562,"ip_address":"","comment_id":303505,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1626836183","product_id":100029201,"comment_content":"还是没有讲消息如何实现业务级别的消息顺序问题啊？","like_count":0,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":523712,"discussion_content":"您能否提供一个典型的业务级别的消息顺序问题，我们一起探讨下","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1627784562,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":302047,"user_name":"the one","can_delete":false,"product_type":"c1","uid":2149688,"ip_address":"","ucode":"D934844AC55361","user_header":"https://static001.geekbang.org/account/avatar/00/20/cd/38/7cdc3f24.jpg","comment_is_top":false,"comment_ctime":1626054886,"is_pvip":false,"replies":[{"id":"109453","content":"1、多分区也可以。<br>2、Kafka没有dead letter queue的概念，如果一直消费出错，consumer会抛出异常，你自行决定怎么处理","user_name":"作者回复","user_name_real":"胡夕","uid":"1288090","ctime":1626242167,"ip_address":"","comment_id":302047,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1626054886","product_id":100029201,"comment_content":"老师，问几个问题哈。<br>1、订阅Mysql的binlog，一般是不是只设一个分区？<br>2、一个分区，多个C（consumer），其中一条消息如果一直消费失败（比如，研发修数据修错了，导致消费失败），这种消息是不是会进入“死信队列”，然后其它的C继续消费分区中的消息，那这种情况，消息是不是就乱序了。","like_count":0,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":523158,"discussion_content":"1、多分区也可以。\n2、Kafka没有dead letter queue的概念，如果一直消费出错，consumer会抛出异常，你自行决定怎么处理","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1626242167,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":294088,"user_name":"Senior6623","can_delete":false,"product_type":"c1","uid":1517590,"ip_address":"","ucode":"D8ADAE5D037FC4","user_header":"https://static001.geekbang.org/account/avatar/00/17/28/16/ca72addc.jpg","comment_is_top":false,"comment_ctime":1621755503,"is_pvip":false,"replies":[{"id":"106804","content":"节点挂掉之后应该会触发分区leader副本的重新选举啊，你看下topic的副本数","user_name":"作者回复","user_name_real":"胡夕","uid":"1288090","ctime":1621907295,"ip_address":"","comment_id":294088,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1621755503","product_id":100029201,"comment_content":"kafka部署了3节点，springboot中使用kafka客户端，roundrobin策略，生产者就刚好往一个刚刚down的节点生产消息，会自动重试，但不会换分区，那最终就会失败，导致消息丢失，这种结果感觉不对，经测试发现节点down后，客户端似乎90秒内，还是会轮询到这个down的节点去生产消息，但都失败。 大约90秒后，该节点才会从roundrobin的循环中被移除。<br>请问老师，这是kafka参数没配对，还是客户端的参数有问题呢？","like_count":0,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":520505,"discussion_content":"节点挂掉之后应该会触发分区leader副本的重新选举啊，你看下topic的副本数","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1621907295,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":294044,"user_name":"路客","can_delete":false,"product_type":"c1","uid":1721812,"ip_address":"","ucode":"DE3765016947DA","user_header":"https://static001.geekbang.org/account/avatar/00/1a/45/d4/39a662ef.jpg","comment_is_top":false,"comment_ctime":1621701754,"is_pvip":false,"replies":[{"id":"106806","content":"基本上就是key.hashCode % 分区数","user_name":"作者回复","user_name_real":"胡夕","uid":"1288090","ctime":1621907439,"ip_address":"","comment_id":294044,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1621701754","product_id":100029201,"comment_content":"老师，我还想问一个问题，就是怎么可以找到一个消息是被分配到哪个分区了呢？我们现在用的是指定key做hashcode的策略。现在我们线上环境就出现了类似问题，需要找得到这个消息被分配到哪个分区了。","like_count":0,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":520484,"discussion_content":"基本上就是key.hashCode % 分区数","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1621907439,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":294043,"user_name":"路客","can_delete":false,"product_type":"c1","uid":1721812,"ip_address":"","ucode":"DE3765016947DA","user_header":"https://static001.geekbang.org/account/avatar/00/1a/45/d4/39a662ef.jpg","comment_is_top":false,"comment_ctime":1621701521,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1621701521","product_id":100029201,"comment_content":"老师，关于保证消息顺序的我有个疑问，如果指定key的策略，相同的key放在一个分区中，假如现在有3个分区，根据key的策略已经都划分好到三个分区中了，怎么保证消息在分区间读写的顺序呢？比如我想先读一个分区1的消息，然后读一个分区2的消息，最后读一个分区3的消息，如此循环。这个如何保证呢？我理解老师说的kafka的读写顺序应该是指在一个分区中消息按顺序读写。","like_count":0},{"had_liked":false,"id":290533,"user_name":"西门吹牛","can_delete":false,"product_type":"c1","uid":1508990,"ip_address":"","ucode":"E5D3624DDE1E83","user_header":"https://static001.geekbang.org/account/avatar/00/17/06/7e/735968e2.jpg","comment_is_top":false,"comment_ctime":1619602531,"is_pvip":false,"replies":[{"id":"105704","content":"“多个生产者同时往一个分区写数据的并发安全？” --- kafka自动保证，用户不用担心。通常来说，就是多个请求发送到broker上相同的ReplicaManager实例上，由后者保证线程安全","user_name":"作者回复","user_name_real":"胡夕","uid":"1288090","ctime":1620614698,"ip_address":"","comment_id":290533,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1619602531","product_id":100029201,"comment_content":"老师好，如果有多个生产者实例，生产者客户端分别部署在不同的节点，那么这多个生产者会并行，假如有俩个生产者都映射到一个分区，如何保证，多个生产者同时往一个分区写数据的并发安全？<br>我想的是，因为网络IO通信，能保证多个生产者的消息，串行到达kafka 服务端，然后，各个生产者的数据到达服务端后，都写在各自的缓冲区，然后由一条异步线程，把这些缓冲的数据，加入到同一个分区中。这样保证并发问题，不知道理解的对不对。<br>","like_count":0,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":519230,"discussion_content":"“多个生产者同时往一个分区写数据的并发安全？” --- kafka自动保证，用户不用担心。通常来说，就是多个请求发送到broker上相同的ReplicaManager实例上，由后者保证线程安全","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1620614698,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":289548,"user_name":"蜗牛","can_delete":false,"product_type":"c1","uid":1325708,"ip_address":"","ucode":"CA86C47E2D1B17","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIAZ9DNnvniaialQQ5dKX5RgjVAXUASveGdowRmMklYRUic0HkCu9eZon6ia971nsfianypjZNkAfm7wlA/132","comment_is_top":false,"comment_ctime":1619075120,"is_pvip":false,"replies":[{"id":"105286","content":"全局顺序性目前只能靠一个分区来保证","user_name":"作者回复","user_name_real":"胡夕","uid":"1288090","ctime":1619600003,"ip_address":"","comment_id":289548,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1619075120","product_id":100029201,"comment_content":"老师还继续回复问题吗？对于国企的那个案例，通过标志位分区了，可以保证在单个分区内消息的顺序性，但是还是破坏了全局的顺序性吧？","like_count":0,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":518945,"discussion_content":"全局顺序性目前只能靠一个分区来保证","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1619600003,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1980201,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/37/29/b3af57a7.jpg","nickname":"凯文小猪","note":"","ucode":"36D8AD0229547F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":397451,"discussion_content":"全局顺序由单分区保证 部分偏序实际上就是默认实现。当然给每个消息打上时间戳（逻辑或物理都行）那么每次取出消息时比较大小 不合适再重发会broker也是中常见分布式解决方案。\n至于时间戳怎么来做 简单的用发号器实现 雪花算法之类的 复杂的参考NPT 一类","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1632623394,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":284926,"user_name":"厨师张","can_delete":false,"product_type":"c1","uid":1485677,"ip_address":"","ucode":"90BDAC2AC1CC88","user_header":"https://static001.geekbang.org/account/avatar/00/16/ab/6d/d5d44dac.jpg","comment_is_top":false,"comment_ctime":1616549003,"is_pvip":false,"replies":[{"id":"103532","content":"可以自己写个partitioner，让相同的key用于去到相同的分区","user_name":"作者回复","user_name_real":"胡夕","uid":"1288090","ctime":1616721718,"ip_address":"","comment_id":284926,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1616549003","product_id":100029201,"comment_content":"老师文中讲到通过指定key达到保证消息顺序性。我有一个问题，在partition增加或减少消息路由重新hash的情况下，消息的顺序性不就没有办法保证了。特别是在相同key的情况下，有状态变更顺序要求的场景。不知道对于类似场景有什么好的解决方案","like_count":0,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":517513,"discussion_content":"可以自己写个partitioner，让相同的key用于去到相同的分区","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1616721718,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":283448,"user_name":"刚好","can_delete":false,"product_type":"c1","uid":1584204,"ip_address":"","ucode":"05447FCF4D85B0","user_header":"https://static001.geekbang.org/account/avatar/00/18/2c/4c/0eb5d084.jpg","comment_is_top":false,"comment_ctime":1615787376,"is_pvip":false,"replies":[{"id":"102952","content":"增加一下replication的时间吧","user_name":"作者回复","user_name_real":"胡夕","uid":"1288090","ctime":1615942245,"ip_address":"","comment_id":283448,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1615787376","product_id":100029201,"comment_content":"老师，和您请教个问题，前面您提到过，一个集群尽量不要跨机房，但灾备机制要求高的话，多副本是不是要分别放到不同的机房中更合理，比如leader在北京机房，replication在广州机房，针对这种情况的主从延迟我们怎么处理，谢谢。","like_count":0,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":517046,"discussion_content":"增加一下replication的时间吧","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1615942245,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":277443,"user_name":"意无尽","can_delete":false,"product_type":"c1","uid":1234489,"ip_address":"","ucode":"DA179626C46B81","user_header":"https://static001.geekbang.org/account/avatar/00/12/d6/39/6b45878d.jpg","comment_is_top":false,"comment_ctime":1612414669,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1612414669","product_id":100029201,"comment_content":"生产者分区机制：<br><br>1、轮询策略：默认的分区策略，也是最常用的分区策略，能够最大限度的保证消息平均分配到分区中；<br><br>2、随机策略：随机的将消息分配到分区中，比轮询策略要差一些；<br><br>3、Key-ordering(按消息键保序策略)：按消息键保存策略，能够保证同一组的 Key 分配到同一分区中，能够保证消息的一致性。如果指定了 Key，那么默认实现按消息键保序策略；如果没有指定 Key，则使用轮询策略。<br><br>所以如果要保证消息的顺序性，可以使用 Key-ordering 分区策略，一般可以使用默认的轮询策略即可。","like_count":0},{"had_liked":false,"id":270281,"user_name":"山海","can_delete":false,"product_type":"c1","uid":1702117,"ip_address":"","ucode":"77FA9967E58FA3","user_header":"https://static001.geekbang.org/account/avatar/00/19/f8/e5/119d5c15.jpg","comment_is_top":false,"comment_ctime":1609051208,"is_pvip":false,"replies":[{"id":"98447","content":"topic越来越大不是什么问题。事实上，我们用Kafka就是期望这样的效果。不过你依然可以扩展多个分区","user_name":"作者回复","user_name_real":"胡夕","uid":"1288090","ctime":1609724095,"ip_address":"","comment_id":270281,"utype":1}],"discussion_count":1,"race_medal":1,"score":"1609051208","product_id":100029201,"comment_content":"老师您好，订阅的有点晚了，期待您的关注， 我业务现在是通过canal订阅mysql的binlog，写入kafka，随即消费kafka的数据写入MySQL。 通过MySQL的表格的自增主键Hash做Key。 但是Topic可能会越来越大，这里的Topic暂时是两个，这里后期如何拓展Topic比较方便呀","like_count":0,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":512579,"discussion_content":"topic越来越大不是什么问题。事实上，我们用Kafka就是期望这样的效果。不过你依然可以扩展多个分区","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1609724095,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":266085,"user_name":"风","can_delete":false,"product_type":"c1","uid":1147929,"ip_address":"","ucode":"AFDBEFA49F269E","user_header":"https://static001.geekbang.org/account/avatar/00/11/84/19/7ed2ffa6.jpg","comment_is_top":false,"comment_ctime":1607161066,"is_pvip":true,"replies":[{"id":"97342","content":"没有一致性hash。当分区变化的确会导致分配到不同的分区上，需要自行适配","user_name":"作者回复","user_name_real":"胡夕","uid":"1288090","ctime":1608080593,"ip_address":"","comment_id":266085,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1607161066","product_id":100029201,"comment_content":"老师关于按消息键保序策略有个问题：<br>我看您那边提供的策略实现代码是对key进行hash然后对分区数进行取模,实际kafka也是这么处理的吗？如果是这样处理的话当分区数变更的时候就会导致相同的key分配到不同分区,还是说kafka使用的一致性hash","like_count":0,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":511146,"discussion_content":"没有一致性hash。当分区变化的确会导致分配到不同的分区上，需要自行适配","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1608080593,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":264404,"user_name":"polk","can_delete":false,"product_type":"c1","uid":1165455,"ip_address":"","ucode":"1B6E948BA4DFAF","user_header":"https://static001.geekbang.org/account/avatar/00/11/c8/8f/e13a6552.jpg","comment_is_top":false,"comment_ctime":1606457236,"is_pvip":false,"replies":[{"id":"96048","content":"一个分区的多个副本一定分布在不同的broker上","user_name":"作者回复","user_name_real":"胡夕","uid":"1288090","ctime":1606699000,"ip_address":"","comment_id":264404,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1606457236","product_id":100029201,"comment_content":"一个分区在一台机器上，还是多台机器共同维护一个分区？","like_count":0,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":510554,"discussion_content":"一个分区的多个副本一定分布在不同的broker上","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1606699000,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":262657,"user_name":"李永亮","can_delete":false,"product_type":"c1","uid":1666200,"ip_address":"","ucode":"37E7137BD0A42F","user_header":"https://static001.geekbang.org/account/avatar/00/19/6c/98/882a873e.jpg","comment_is_top":false,"comment_ctime":1605795328,"is_pvip":false,"replies":[{"id":"95336","content":"不是随机，应该是默认轮询的","user_name":"作者回复","user_name_real":"胡夕","uid":"1288090","ctime":1605838094,"ip_address":"","comment_id":262657,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1605795328","product_id":100029201,"comment_content":"老师我想问下，咱们这块分析都是基于Apache kafka的什么版本呢？我看2.4.0的源码，生产者的分区策略默认是随机啊","like_count":0,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":509916,"discussion_content":"不是随机，应该是默认轮询的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1605838094,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":262218,"user_name":"freesocean","can_delete":false,"product_type":"c1","uid":1529210,"ip_address":"","ucode":"CAD4C80CF569D3","user_header":"https://static001.geekbang.org/account/avatar/00/17/55/7a/d44df1d6.jpg","comment_is_top":false,"comment_ctime":1605667055,"is_pvip":false,"replies":[{"id":"95341","content":"课代表来了：）","user_name":"作者回复","user_name_real":"胡夕","uid":"1288090","ctime":1605838301,"ip_address":"","comment_id":262218,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1605667055","product_id":100029201,"comment_content":"默认分区规则：<br>1.如果指定了分区编号，用它<br>2.如果没有指定分区号，但指定了key，按照hash计算分区号<br>3.既没有分区号，也没有key，用 round-robin （轮询）<br><br>默认分区存在问题：<br>1.通过key的hash计算分区号，存在hash冲突的可能。<br>2.如果后期增加风趣，散列计算分区号，相同key将会落到和之前不一样的分区。<br><br>所以有了自定义分区满足更多需求：<br>1.定义分区器。<br>2.在Producer中指定分区器属性： partitioner.class","like_count":0,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":509738,"discussion_content":"课代表来了：）","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1605838301,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":257982,"user_name":"@%初%@","can_delete":false,"product_type":"c1","uid":1053509,"ip_address":"","ucode":"2B8A6134675ED7","user_header":"https://static001.geekbang.org/account/avatar/00/10/13/45/16c60da2.jpg","comment_is_top":false,"comment_ctime":1604234385,"is_pvip":true,"replies":[{"id":"93964","content":"增加分区后，Kafka不会变更已有数据的所在分区布局，也不会自动迁移消息。你可以自行实现一个不受“分区增加”影响的partitioning策略。","user_name":"作者回复","user_name_real":"胡夕","uid":"1288090","ctime":1604283332,"ip_address":"","comment_id":257982,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1604234385","product_id":100029201,"comment_content":"胡老师，你好，我有个问题，就是消息分区内顺序性的问题，假设一个消息3个分区，由于资源不够需要增加分区数量，但是原本的消息分区中的消息还没消费完成，这个时候增加了分区，原来的顺序消息就可能不在一个分区了。这种情况，kafka会迁移原来的消息吗？如果不迁移，有什么好的解决方案呢？","like_count":0,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":508517,"discussion_content":"增加分区后，Kafka不会变更已有数据的所在分区布局，也不会自动迁移消息。你可以自行实现一个不受“分区增加”影响的partitioning策略。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1604283332,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":255181,"user_name":"Geek_3094fd","can_delete":false,"product_type":"c1","uid":1797809,"ip_address":"","ucode":"96D4049C54A23D","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLpuXh4ibibw0eI0r2TEI0FM07QnKjVK8fLiaorX17ia5lpeoBJr383dMeLh7m8CFrfOPYJazDIdbVYdA/132","comment_is_top":false,"comment_ctime":1603277034,"is_pvip":false,"replies":[{"id":"93049","content":"一定有性能拐点的。一切还是以实际测试情况为准","user_name":"作者回复","user_name_real":"胡夕","uid":"1288090","ctime":1603354167,"ip_address":"","comment_id":255181,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1603277034","product_id":100029201,"comment_content":"老师好，因为增加partition可以增加consumer消费的吞吐量，但是能不能无脑扩张partition呢？","like_count":0,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":507631,"discussion_content":"一定有性能拐点的。一切还是以实际测试情况为准","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1603354167,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":253532,"user_name":"浮石沉木","can_delete":false,"product_type":"c1","uid":2223167,"ip_address":"","ucode":"D585768321B84A","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/mQddXC7nRiaKHTwdficicTB3bH0q5ic5UoSab51Omic7eyLBz0SNcvbLpQnNib7zP1yJFm7xxx4ia81iahfibRVnbTwHmhw/132","comment_is_top":false,"comment_ctime":1602768916,"is_pvip":true,"replies":[{"id":"92603","content":"可以的。使用consumer.assign()方法指定要消费的分区","user_name":"作者回复","user_name_real":"胡夕","uid":"1288090","ctime":1602815451,"ip_address":"","comment_id":253532,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1602768916","product_id":100029201,"comment_content":"消息既然能支持存放到指定的partition,那么消费者组能否也能类似地消费指定的partition呢","like_count":0,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":507098,"discussion_content":"可以的。使用consumer.assign()方法指定要消费的分区","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1602815451,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":248331,"user_name":"FD","can_delete":false,"product_type":"c1","uid":2052521,"ip_address":"","ucode":"ED396BD322489E","user_header":"https://static001.geekbang.org/account/avatar/00/1f/51/a9/741b5ad9.jpg","comment_is_top":false,"comment_ctime":1600126327,"is_pvip":false,"replies":[{"id":"91216","content":"“配图中所有的分区存储的消息都是一致的” -- 图中的数字表示位移，每个分区的位移都是从0开始的，所以配图没有问题","user_name":"作者回复","user_name_real":"胡夕","uid":"1288090","ctime":1600131091,"ip_address":"","comment_id":248331,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1600126327","product_id":100029201,"comment_content":"&quot;主题下的每条消息只会保存在某一个分区中，而不会在多个分区中被保存多份&quot;这段文字下的配图是不是不合适，配图中所有的分区存储的消息都是一致的。消息都是从零开始增长！","like_count":0,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":505623,"discussion_content":"“配图中所有的分区存储的消息都是一致的” -- 图中的数字表示位移，每个分区的位移都是从0开始的，所以配图没有问题","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1600131091,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":243606,"user_name":"秋天","can_delete":false,"product_type":"c1","uid":1057056,"ip_address":"","ucode":"A7E1D953EF7E17","user_header":"https://static001.geekbang.org/account/avatar/00/10/21/20/1299e137.jpg","comment_is_top":false,"comment_ctime":1598229015,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1598229015","product_id":100029201,"comment_content":"自定义消息分区策略，基于任务id做的hash分区策略 保证每个任务都在不不同的partittion中，充分利用多分区策略","like_count":0},{"had_liked":false,"id":241279,"user_name":"Roger宇","can_delete":false,"product_type":"c1","uid":1703222,"ip_address":"","ucode":"CBA23C01409349","user_header":"https://static001.geekbang.org/account/avatar/00/19/fd/36/f947c340.jpg","comment_is_top":false,"comment_ctime":1597236024,"is_pvip":false,"replies":[{"id":"89155","content":"可能存在多个producer对应一个topic。topic的创建数量在实际场景中更多是参考业务因素。业务中需要用到多少个topic就创建多少个","user_name":"作者回复","user_name_real":"胡夕","uid":"1288090","ctime":1597279063,"ip_address":"","comment_id":241279,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1597236024","product_id":100029201,"comment_content":"老师，我这是二刷课程又回来思考了，想请问，一般会存在多个生产者对应一个topic的情况吗？比如发现消息方消息量比较大？还是说这种情况下我们直接会多建几个topic，但依然保持一个producer对应一个topic？这样做的原因是什么呢？","like_count":0,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":503694,"discussion_content":"可能存在多个producer对应一个topic。topic的创建数量在实际场景中更多是参考业务因素。业务中需要用到多少个topic就创建多少个","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1597279063,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1703222,"avatar":"https://static001.geekbang.org/account/avatar/00/19/fd/36/f947c340.jpg","nickname":"Roger宇","note":"","ucode":"CBA23C01409349","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":298370,"discussion_content":"我少表达了一个意思。就是如果想多生产者仍能保证发送顺序等于消费顺序，即使单分区是不是也无法做到了？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1597281953,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":239070,"user_name":"杯莫停","can_delete":false,"product_type":"c1","uid":1759325,"ip_address":"","ucode":"4FA1D5CBBEF702","user_header":"https://static001.geekbang.org/account/avatar/00/1a/d8/5d/07dfb3b5.jpg","comment_is_top":false,"comment_ctime":1596426243,"is_pvip":true,"replies":[{"id":"88415","content":"增加topic本质上也是增加分区。另外也需要增加消费者数量","user_name":"作者回复","user_name_real":"胡夕","uid":"1288090","ctime":1596519559,"ip_address":"","comment_id":239070,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1596426243","product_id":100029201,"comment_content":"老师，经典问题，消费者消费能力不足，导致数据大量积压。我看网上有人说增加分区，有人说增加topic。到底怎么做比较合理呢？","like_count":0,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":502964,"discussion_content":"增加topic本质上也是增加分区。另外也需要增加消费者数量","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1596519559,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":239069,"user_name":"杯莫停","can_delete":false,"product_type":"c1","uid":1759325,"ip_address":"","ucode":"4FA1D5CBBEF702","user_header":"https://static001.geekbang.org/account/avatar/00/1a/d8/5d/07dfb3b5.jpg","comment_is_top":false,"comment_ctime":1596425746,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1596425746","product_id":100029201,"comment_content":"物联网场景，保证同一传感器上报的报文发布到同一分区。传感器种类十几万种，这种情况下指定分区和单独分区都不现实。用key来保证最恰当不过。","like_count":0},{"had_liked":false,"id":237736,"user_name":"阡陌","can_delete":false,"product_type":"c1","uid":1141254,"ip_address":"","ucode":"58634836C8E03F","user_header":"https://static001.geekbang.org/account/avatar/00/11/6a/06/66831563.jpg","comment_is_top":false,"comment_ctime":1595938988,"is_pvip":false,"replies":[{"id":"87882","content":"基本上按照分区数来","user_name":"作者回复","user_name_real":"胡夕","uid":"1288090","ctime":1596005283,"ip_address":"","comment_id":237736,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1595938988","product_id":100029201,"comment_content":"多topic多分区如何来选择合适的消费者实例个数呢？<br>","like_count":0,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":502522,"discussion_content":"基本上按照分区数来","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1596005283,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":237682,"user_name":"多襄丸","can_delete":false,"product_type":"c1","uid":1074310,"ip_address":"","ucode":"1AA1497C5A293C","user_header":"https://static001.geekbang.org/account/avatar/00/10/64/86/f5a9403a.jpg","comment_is_top":false,"comment_ctime":1595924876,"is_pvip":false,"replies":[{"id":"87821","content":"的确有可能多个key的消息进入到同一个分区，这不是错误情况。你的consumer至少知道去哪个分区能够获取到单个key对应的所有消息，而且能够保证至少在key这个层面上，消息消费是有序的","user_name":"作者回复","user_name_real":"胡夕","uid":"1288090","ctime":1595937671,"ip_address":"","comment_id":237682,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1595924876","product_id":100029201,"comment_content":"老师你说 利用单分区的顺序性 + key 将相同key分布到同一个partition实现key级别的顺序计算。<br><br>我这里有个问题哈：<br>1. key在代码里写死的时候，是没有问题的，，比如startwith(key1)进入partition1，startwith(key2)进入partition2... 。<br><br>2. key如果按hash Code % partotion size 的话，hash冲突 是不是会 有一些哈希值相同的key混入到同一个分区，引起消费时候的错误处理呀？ <br><br>我们肯定是要按业务场景来的，但是绝大多数是怎么处理呢？<br>恳请胡老师解答！","like_count":0,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":502502,"discussion_content":"的确有可能多个key的消息进入到同一个分区，这不是错误情况。你的consumer至少知道去哪个分区能够获取到单个key对应的所有消息，而且能够保证至少在key这个层面上，消息消费是有序的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1595937671,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":236847,"user_name":"叶小胖","can_delete":false,"product_type":"c1","uid":1257784,"ip_address":"","ucode":"1043E3598ACFC4","user_header":"https://static001.geekbang.org/account/avatar/00/13/31/38/1d2aba99.jpg","comment_is_top":false,"comment_ctime":1595562427,"is_pvip":false,"replies":[{"id":"87677","content":"只是在单个分区的单个key下保证顺序性","user_name":"作者回复","user_name_real":"胡夕","uid":"1288090","ctime":1595811042,"ip_address":"","comment_id":236847,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1595562427","product_id":100029201,"comment_content":"老师你好，麻烦问下，String key = String.format(&quot;%s%s%s&quot;, dbName, tableName, pkId);<br>                                kafkaProducer.send(new ProducerRecord&lt;String, String&gt;(topicName, key, jsonMsg) 我这样设置是不是就是按消息键保存粗略，消息是不是就能保证顺序性了？","like_count":0,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":502232,"discussion_content":"只是在单个分区的单个key下保证顺序性","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1595811042,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":235940,"user_name":"范闲","can_delete":false,"product_type":"c1","uid":1073125,"ip_address":"","ucode":"F21FD7DF6BA53C","user_header":"https://static001.geekbang.org/account/avatar/00/10/5f/e5/54325854.jpg","comment_is_top":false,"comment_ctime":1595251922,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1595251922","product_id":100029201,"comment_content":"这里的分区既是逻辑上的分区，也是物理上的分区。相当于不同消息写入到不同机器的磁盘上。","like_count":0},{"had_liked":false,"id":234681,"user_name":"杨逸林","can_delete":false,"product_type":"c1","uid":1167233,"ip_address":"","ucode":"4BF3CF3E2F1AC7","user_header":"https://static001.geekbang.org/account/avatar/00/11/cf/81/96f656ef.jpg","comment_is_top":false,"comment_ctime":1594773108,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1594773108","product_id":100029201,"comment_content":"这分区选择的，不就是负载均衡策略吗，轮询&#47;随机&#47;hash取模，还又老师说的取前缀","like_count":0},{"had_liked":false,"id":231785,"user_name":"J.Smile","can_delete":false,"product_type":"c1","uid":1336475,"ip_address":"","ucode":"C4D98DFDBF7584","user_header":"https://static001.geekbang.org/account/avatar/00/14/64/9b/0b578b08.jpg","comment_is_top":false,"comment_ctime":1593769682,"is_pvip":false,"replies":[{"id":"85773","content":"可能会导致不均匀，只能手动迁移来保持平衡。另外，多块磁盘的好处是可以避免单块磁盘损坏","user_name":"作者回复","user_name_real":"胡夕","uid":"1288090","ctime":1593999245,"ip_address":"","comment_id":231785,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1593769682","product_id":100029201,"comment_content":"老师问个问题：服务器如果有多块磁盘，那么对那些分区比较少的Topic来说，是不是会导致磁盘空间分布不均衡呢？还有选择服务器的磁盘时，选择多块磁盘和单块磁盘有什么区别呢？","like_count":0,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":500437,"discussion_content":"可能会导致不均匀，只能手动迁移来保持平衡。另外，多块磁盘的好处是可以避免单块磁盘损坏","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1593999245,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":230021,"user_name":"Pyer","can_delete":false,"product_type":"c1","uid":1159237,"ip_address":"","ucode":"8287EFD2268211","user_header":"https://static001.geekbang.org/account/avatar/00/11/b0/45/f0a63850.jpg","comment_is_top":false,"comment_ctime":1593243190,"is_pvip":false,"replies":[{"id":"85034","content":"如果想要全局有序，目前只能使用单分区的方案。","user_name":"作者回复","user_name_real":"胡夕","uid":"1288090","ctime":1593388774,"ip_address":"","comment_id":230021,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1593243190","product_id":100029201,"comment_content":"老师好，你说的给国企培训的案例，开始他们是只用一个分区存放所有数据，这样所有数据都是有序的。但是改为多分区，按照某个特定key分后，虽然是保证各个分区内是有序的，但是全局就无序了。那如果别人想要全局有序的怎么办呢?","like_count":0,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":499740,"discussion_content":"如果想要全局有序，目前只能使用单分区的方案。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1593388774,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":228060,"user_name":"店小二#2","can_delete":false,"product_type":"c1","uid":1130925,"ip_address":"","ucode":"6103E9AE52F8E7","user_header":"https://static001.geekbang.org/account/avatar/00/11/41/ad/4ccf4238.jpg","comment_is_top":false,"comment_ctime":1592546533,"is_pvip":false,"replies":[{"id":"84099","content":"生产环境大多也是这么创建","user_name":"作者回复","user_name_real":"胡夕","uid":"1288090","ctime":1592553725,"ip_address":"","comment_id":228060,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1592546533","product_id":100029201,"comment_content":"老师，创建topic分区在真实项目中是怎么创建的（包括指定分区个数）？我看网上都是kafka-topics.sh脚本？想知道生产环境怎么创建的？可否提供一个示例。谢谢！","like_count":0,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":498907,"discussion_content":"生产环境大多也是这么创建","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1592553725,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":226922,"user_name":"夜里吃西瓜","can_delete":false,"product_type":"c1","uid":1066678,"ip_address":"","ucode":"362817AF375E38","user_header":"https://static001.geekbang.org/account/avatar/00/10/46/b6/edfe7ce8.jpg","comment_is_top":false,"comment_ctime":1592229469,"is_pvip":false,"replies":[{"id":"83660","content":"首先A和B是同一个producer发出才有可能保证顺序。设置max.in.flight.requests.per.connection=1可保证顺序","user_name":"作者回复","user_name_real":"胡夕","uid":"1288090","ctime":1592296283,"ip_address":"","comment_id":226922,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1592229469","product_id":100029201,"comment_content":"如何保证消息顺序？假设消息A和消息B,，理论上消息A要被消息B先消费。当时由于A的发送方是弱网环境，导致A的消息晚于B到达kafka。那岂不是消息B先消费，消费A再消费吗？不知道是不是理解有偏差了，望解答，谢谢！","like_count":0,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":498416,"discussion_content":"首先A和B是同一个producer发出才有可能保证顺序。设置max.in.flight.requests.per.connection=1可保证顺序","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1592296283,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":225381,"user_name":"云师兄","can_delete":false,"product_type":"c1","uid":1010459,"ip_address":"","ucode":"4475AF1598FBFD","user_header":"https://static001.geekbang.org/account/avatar/00/0f/6b/1b/4b397b80.jpg","comment_is_top":false,"comment_ctime":1591749306,"is_pvip":false,"replies":[{"id":"83012","content":"确实有这个问题~","user_name":"作者回复","user_name_real":"胡夕","uid":"1288090","ctime":1591753655,"ip_address":"","comment_id":225381,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1591749306","product_id":100029201,"comment_content":"Kafka的单机分区数多的话，对应存储文件也会相应增多，单个虽然是顺序io但数量一旦上去就变成随机io。","like_count":0,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":497829,"discussion_content":"确实有这个问题~","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1591753655,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":225272,"user_name":"耿嘉艺","can_delete":false,"product_type":"c1","uid":2023401,"ip_address":"","ucode":"727A22BD41E8AF","user_header":"","comment_is_top":false,"comment_ctime":1591701802,"is_pvip":false,"replies":[{"id":"82950","content":"可以将IP数据放入到消息体重","user_name":"作者回复","user_name_real":"胡夕","uid":"1288090","ctime":1591706994,"ip_address":"","comment_id":225272,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1591701802","product_id":100029201,"comment_content":"怎么判断注册消息是南方用户还是北方用户？","like_count":0,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":497789,"discussion_content":"可以将IP数据放入到消息体重","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1591706994,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":224384,"user_name":"lumpy","can_delete":false,"product_type":"c1","uid":1099367,"ip_address":"","ucode":"CE804424C4697C","user_header":"https://static001.geekbang.org/account/avatar/00/10/c6/67/c68e6f28.jpg","comment_is_top":false,"comment_ctime":1591360034,"is_pvip":true,"replies":[{"id":"82738","content":"理论上，是的。实际上很难成立","user_name":"作者回复","user_name_real":"胡夕","uid":"1288090","ctime":1591540215,"ip_address":"","comment_id":224384,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1591360034","product_id":100029201,"comment_content":"老师你好，理论上三分区三生产者的吞吐量是单分区单生产者的三倍吗？消费者也是这样吗？","like_count":0,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":497457,"discussion_content":"理论上，是的。实际上很难成立","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1591540215,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":216595,"user_name":"James","can_delete":false,"product_type":"c1","uid":1134861,"ip_address":"","ucode":"48B0F2A334D1C1","user_header":"https://static001.geekbang.org/account/avatar/00/11/51/0d/fc1652fe.jpg","comment_is_top":false,"comment_ctime":1589292763,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1589292763","product_id":100029201,"comment_content":"中小公司基本都是会用就行,肯定是默认的分区策略.","like_count":0},{"had_liked":false,"id":216591,"user_name":"James","can_delete":false,"product_type":"c1","uid":1134861,"ip_address":"","ucode":"48B0F2A334D1C1","user_header":"https://static001.geekbang.org/account/avatar/00/11/51/0d/fc1652fe.jpg","comment_is_top":false,"comment_ctime":1589291948,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1589291948","product_id":100029201,"comment_content":"哈哈,只有国企或大公司才会有钱去培训","like_count":0},{"had_liked":false,"id":198637,"user_name":"逍遥飞鹤","can_delete":false,"product_type":"c1","uid":1321385,"ip_address":"","ucode":"6E0EF9533C33B4","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLXImZpDhhE53PvZib8Aiae1ZMg1JukaMOBasgyEtPcib2Rrib2CdlfA7WxYNZQkicavxjFOg3W9CcFgJQ/132","comment_is_top":false,"comment_ctime":1585461137,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1585461137","product_id":100029201,"comment_content":"分区保证高性能，副本保证高可用，顺序写入和offset消费保证了写入和读取的高效","like_count":0},{"had_liked":false,"id":187767,"user_name":"咸淡一首诗","can_delete":false,"product_type":"c1","uid":1435869,"ip_address":"","ucode":"FEE5A9B5139BF1","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLl9nj9b6RydKADq82ZwOad0fQcvXWyQKk5U5RFC2kzHGI4GjIQsIZvHsEm7mFELgMiaGx3lGq9vag/132","comment_is_top":false,"comment_ctime":1584235951,"is_pvip":false,"replies":[{"id":"72592","content":"文中指的因果关系的消息是说在单个分区下保存了所有因果关系的消息，而非跨分区","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1584320833,"ip_address":"","comment_id":187767,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1584235951","product_id":100029201,"comment_content":"胡老师，我想问一下，比如保证了3个分区内因果消息的顺序性，如果启动了1个消费者实例，那么该消费实例poll一次，应该会把3个分区消息都有消费，也不能满足各分区因果数据的消费顺序性啊？如果启动了3个消费者实例，每个分区对应一个消费者实例，我们也知道每个消费者消费的哪个分区，也不能控制3个消费者谁先消费，谁后消费，也达不到顺序消费分区消息的目的？这应该怎么办？","like_count":0,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":487232,"discussion_content":"文中指的因果关系的消息是说在单个分区下保存了所有因果关系的消息，而非跨分区","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584320833,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":180052,"user_name":"EricJones","can_delete":false,"product_type":"c1","uid":1207580,"ip_address":"","ucode":"0A80B609400D6B","user_header":"https://static001.geekbang.org/account/avatar/00/12/6d/1c/d9746372.jpg","comment_is_top":false,"comment_ctime":1582174610,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1582174610","product_id":100029201,"comment_content":"请教下作者，我把我们原来的分区数量从 9 增加到 18，但是我使用命令查看消费者信息的时候还是只在消费原来的9个分区，消费者数量已经改成了18了。","like_count":0},{"had_liked":false,"id":177347,"user_name":"狼暴暴","can_delete":false,"product_type":"c1","uid":1401191,"ip_address":"","ucode":"B7B4DE5C532A76","user_header":"https://static001.geekbang.org/account/avatar/00/15/61/67/c4ceb86f.jpg","comment_is_top":false,"comment_ctime":1581350879,"is_pvip":false,"replies":[{"id":"68854","content":"这里的标志位指的是具有因果关系的一类消息都有的一个共有的字段，于是我们可以将该字段提取出来作为消息的Key。","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1581382005,"ip_address":"","comment_id":177347,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1581350879","product_id":100029201,"comment_content":"老师，您举的例子里，这个标志位到底是指啥？和因果关系的消息是啥关系？这个因果关系消息就是指从产生到进入分区前后顺序不能乱的消息吧。","like_count":0,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":483396,"discussion_content":"这里的标志位指的是具有因果关系的一类消息都有的一个共有的字段，于是我们可以将该字段提取出来作为消息的Key。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1581382005,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":173146,"user_name":"灰机","can_delete":false,"product_type":"c1","uid":1179580,"ip_address":"","ucode":"46F6CFC2DFAA2B","user_header":"https://static001.geekbang.org/account/avatar/00/11/ff/bc/368b9f80.jpg","comment_is_top":false,"comment_ctime":1579436870,"is_pvip":false,"replies":[{"id":"67157","content":"可以使用kafka-reassign-partitions命令手动将该分区从下掉broker迁走~","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1579481967,"ip_address":"","comment_id":173146,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1579436870","product_id":100029201,"comment_content":"胡老师您好~ 想请教个问题 kafka 停止后 下掉一个broker  然后重新启动kafka、发现topic 对应的partition 放置的broker还是包含之前下掉的节点 该如何更新parititon 对应的broker呢？","like_count":0,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":481972,"discussion_content":"可以使用kafka-reassign-partitions命令手动将该分区从下掉broker迁走~","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579481967,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":169925,"user_name":"chp","can_delete":false,"product_type":"c1","uid":1112415,"ip_address":"","ucode":"F0A2442230CD45","user_header":"https://static001.geekbang.org/account/avatar/00/10/f9/5f/b0a125a9.jpg","comment_is_top":false,"comment_ctime":1578474033,"is_pvip":false,"replies":[{"id":"66079","content":"前者是获取topic的分区数；后者是获取该topic当前可用的分区数。具体使用哪个取决于你的逻辑实现：）","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1578619293,"ip_address":"","comment_id":169925,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1578474033","product_id":100029201,"comment_content":"老师，自定义分区策略获取分区是用cluster.partitionsForTopic(topic)还是cluster.availablePartitionsForTopic(topic)好点？availablePartitions是不是靠谱点","like_count":0,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":480773,"discussion_content":"前者是获取topic的分区数；后者是获取该topic当前可用的分区数。具体使用哪个取决于你的逻辑实现：）","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578619293,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":149686,"user_name":"James","can_delete":false,"product_type":"c1","uid":1134861,"ip_address":"","ucode":"48B0F2A334D1C1","user_header":"https://static001.geekbang.org/account/avatar/00/11/51/0d/fc1652fe.jpg","comment_is_top":false,"comment_ctime":1573319281,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573319281","product_id":100029201,"comment_content":"还是默认分区策略…<br>同一分区才有顺序之分。<br>Key分区策略确实很有用，保证同一个key在同一分区并保证顺序。","like_count":0},{"had_liked":false,"id":140544,"user_name":"song218888","can_delete":false,"product_type":"c1","uid":1057087,"ip_address":"","ucode":"D6A0559B4709E1","user_header":"https://static001.geekbang.org/account/avatar/00/10/21/3f/7e3e9dc4.jpg","comment_is_top":false,"comment_ctime":1570980707,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1570980707","product_id":100029201,"comment_content":"这里没有讲到一个重要问题：生产环境中，分区个数应该设置为多少","like_count":0,"discussions":[{"author":{"id":2313382,"avatar":"https://static001.geekbang.org/account/avatar/00/23/4c/a6/e6f1d773.jpg","nickname":"鸣己","note":"","ucode":"4FC0C37457F21A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":360961,"discussion_content":"我觉得这个根据自己的经验吧，我一般设置分区数=broker节点数（5个）基本上就够用了，还得根据你下游消费者消费能力综合考虑，是继续增加分区数还是增加broker节点数；如果topic的数据量很小我会设置成3个分区；对时序有要求的可能会设置成一个分区","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1616567646,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":135260,"user_name":"Leon📷","can_delete":false,"product_type":"c1","uid":1219496,"ip_address":"","ucode":"B9BBD1EFAAE5A2","user_header":"https://static001.geekbang.org/account/avatar/00/12/9b/a8/6a391c66.jpg","comment_is_top":false,"comment_ctime":1569111798,"is_pvip":false,"replies":[{"id":"51952","content":"文章中给出了一些案例啊。其实也没有想得那么复杂，就是创建一个类实现org.apache.kafka.clients.producer.Partitioner就行了","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1569201039,"ip_address":"","comment_id":135260,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1569111798","product_id":100029201,"comment_content":"这种基于个别字段的分区策略本质上就是按消息键保序这个老师有demo案例吗，网上找了一圈没找到","like_count":0,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":468115,"discussion_content":"文章中给出了一些案例啊。其实也没有想得那么复杂，就是创建一个类实现org.apache.kafka.clients.producer.Partitioner就行了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1569201039,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":130006,"user_name":"DFighting","can_delete":false,"product_type":"c1","uid":1233193,"ip_address":"","ucode":"F3BA2426FF8582","user_header":"https://static001.geekbang.org/account/avatar/00/12/d1/29/1b1234ed.jpg","comment_is_top":false,"comment_ctime":1567350026,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1567350026","product_id":100029201,"comment_content":"这个和Flink的keySelector将数据流分区应该有异曲同工之妙吧，都是为了在保证部分相关性的同时提高系统的吞吐量，因为一笔数据的流转过程中总是可以按照业务相关性联系的强弱来通过并行化的方式提高吞吐量，串行化的方式来维持处理的准确性。","like_count":0},{"had_liked":false,"id":126517,"user_name":"allean","can_delete":false,"product_type":"c1","uid":1051470,"ip_address":"","ucode":"A0D2DB4F219EAA","user_header":"https://static001.geekbang.org/account/avatar/00/10/0b/4e/fd946cb2.jpg","comment_is_top":false,"comment_ctime":1566399469,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1566399469","product_id":100029201,"comment_content":"小白一个，公司准备只用kafka，有具体的实战例子吗？比如具体使用？","like_count":0},{"had_liked":false,"id":123273,"user_name":"钱","can_delete":false,"product_type":"c1","uid":1009652,"ip_address":"","ucode":"2C92A243A463D4","user_header":"https://static001.geekbang.org/account/avatar/00/0f/67/f4/9a1feb59.jpg","comment_is_top":false,"comment_ctime":1565656530,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1565656530","product_id":100029201,"comment_content":"其实分区的作用就是提供负载均衡的能力，或者说对数据进行分区的主要原因，就是为了实现系统的高伸缩性（Scalability）。不同的分区能够被放置到不同节点的机器上，而数据的读写操作也都是针对分区这个粒度而进行的，这样每个节点的机器都能独立地执行各自分区的读写请求处理。并且，我们还可以通过添加新的节点机器来增加整体系统的吞吐量。<br>老师好，请教几个小问题<br>1：分区的底层数据结构是什么？<br>2：分区概念和作用单独理解挺容易的，结合broker能再分析一下吗？比如：在一个服务器上启动一个broker进程服务也是可以创建多个分区的嘛？一个topic具体分多少分区这个怎么定，有什么原则？假如只有一台机器是只分一个分区好还是多个分区好？<br>谢谢，如果其他同学有兴趣也请解答一下，多谢啦!","like_count":0},{"had_liked":false,"id":120748,"user_name":"DC","can_delete":false,"product_type":"c1","uid":1250344,"ip_address":"","ucode":"EC0E7E86056FA6","user_header":"https://static001.geekbang.org/account/avatar/00/13/14/28/9e3edef0.jpg","comment_is_top":false,"comment_ctime":1564988680,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1564988680","product_id":100029201,"comment_content":"所以，消费消息如果有顺序需求时，需要特别考虑如何实现，像kafka稍微看一下，不支持topic层的消息顺序的，直接用就不符合需求了。","like_count":0},{"had_liked":false,"id":118340,"user_name":"行则将至","can_delete":false,"product_type":"c1","uid":1542987,"ip_address":"","ucode":"DB972F2DF059C4","user_header":"https://static001.geekbang.org/account/avatar/00/17/8b/4b/fa52d222.jpg","comment_is_top":false,"comment_ctime":1564325070,"is_pvip":false,"replies":[{"id":"43348","content":"这其实就是默认策略的简易实现版，想说的是这个意思。。。。","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1564361415,"ip_address":"","comment_id":118340,"utype":1}],"discussion_count":1,"race_medal":1,"score":"1564325070","product_id":100029201,"comment_content":"老师，您在文章中提到：如果我们指定了消息的key，kafka默认就会使用消息键保序策略。既然是默认的策略，那下面两行显示指定保序策略的代码有什么意义呢?<br>List&lt;PartitionInfo&gt; partitions = cluster.partitionsForTopic(topic);<br>return Math.abs(key.hashCode()) % partitions.size();<br>","like_count":0,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":460364,"discussion_content":"这其实就是默认策略的简易实现版，想说的是这个意思。。。。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1564361415,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":106952,"user_name":"燃烧的M豆","can_delete":false,"product_type":"c1","uid":1355000,"ip_address":"","ucode":"BEDA9FC8852F5D","user_header":"https://static001.geekbang.org/account/avatar/00/14/ac/f8/a56b7475.jpg","comment_is_top":false,"comment_ctime":1561428323,"is_pvip":false,"replies":[{"id":"38830","content":"它们有统一的key吗？<br>","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1561514977,"ip_address":"","comment_id":106952,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1561428323","product_id":100029201,"comment_content":"有这样一个场景似乎用 key 策略进行分区也没有办法解决 <br><br>比如我们监听 binlog 然后 user 的 binlog 和订单的 binlog 同时到达 kafka 的不同分区 但却后被消费 ，但是其实我们需要 user binlog 先消费 再消费 订单的 binlog 如果用一个分区读取 binlog 的程序是顺序读也是顺序写的所以不会有这个问题 但是多分区就有可能出现我说这种情况 <br><br>老师有什么办法吗 或者说不应该基于表名分区用别的 key 分区？ 不知道我有没有描述清楚","like_count":0,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":455298,"discussion_content":"它们有统一的key吗？\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1561514977,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1572612,"avatar":"https://static001.geekbang.org/account/avatar/00/17/ff/04/9293347e.jpg","nickname":"wind","note":"","ucode":"8F4FD19CF9BD7B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":348783,"discussion_content":"这种只能在消费端做逻辑处理了。比如给消息体附加上编号。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1612711246,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":106923,"user_name":"一眼万年","can_delete":false,"product_type":"c1","uid":1018200,"ip_address":"","ucode":"7B0823E39AE809","user_header":"","comment_is_top":false,"comment_ctime":1561425152,"is_pvip":false,"replies":[{"id":"38813","content":"您指的分区原理是？？","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1561512530,"ip_address":"","comment_id":106923,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1561425152","product_id":100029201,"comment_content":"老师，这一章讲的是分区应用，分区原理没说","like_count":0,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":455283,"discussion_content":"您指的分区原理是？？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1561512530,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":106133,"user_name":"明翼","can_delete":false,"product_type":"c1","uid":1068361,"ip_address":"","ucode":"E77F86BEB3D5C1","user_header":"https://static001.geekbang.org/account/avatar/00/10/4d/49/28e73b9c.jpg","comment_is_top":false,"comment_ctime":1561185162,"is_pvip":false,"replies":[{"id":"38499","content":"没太明白您的意思。不过副本在哪个机房是可以指定的，通过命令：）","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1561338903,"ip_address":"","comment_id":106133,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1561185162","product_id":100029201,"comment_content":"我们key直接是递增的数据，曾经设置错了数据保存模式为compact导致数据莫名其妙的丢了，中间有重启应该是compact覆盖了。老师后面的跨城市机房的例子，我想如果指定的按地区分区，那这个分区的副本是在另外一个机房吗？","like_count":0,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":454969,"discussion_content":"没太明白您的意思。不过副本在哪个机房是可以指定的，通过命令：）","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1561338903,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":106057,"user_name":"Johnson","can_delete":false,"product_type":"c1","uid":1060473,"ip_address":"","ucode":"FF29D9659284FD","user_header":"https://static001.geekbang.org/account/avatar/00/10/2e/79/05261bd7.jpg","comment_is_top":false,"comment_ctime":1561160599,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1561160599","product_id":100029201,"comment_content":"Cassandra 里面的分区也叫partition. vnode 是把node分成更小的粒度, 每个vnode负责key哈希后的一小段取值范围。好处是添加删除node之后，需要移动的数据更少。","like_count":0}]}